### YamlMime:ManagedReference
items:
- uid: Microsoft.Build.Framework.ITaskFactory2
  id: ITaskFactory2
  children:
  - Microsoft.Build.Framework.ITaskFactory2.CreateTask(Microsoft.Build.Framework.IBuildEngine,System.Collections.Generic.IDictionary{System.String,System.String})
  - Microsoft.Build.Framework.ITaskFactory2.Initialize(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Framework.TaskPropertyInfo},System.String,Microsoft.Build.Framework.IBuildEngine)
  langs:
  - csharp
  name: ITaskFactory2
  nameWithType: ITaskFactory2
  fullName: Microsoft.Build.Framework.ITaskFactory2
  type: Interface
  summary: "描述並擴充<xref href=&quot;Microsoft.Build.Framework.ITaskFactory&quot;></xref>工作 factory 執行個體都必須實作的介面。"
  syntax:
    content: 'public interface ITaskFactory2 : Microsoft.Build.Framework.ITaskFactory'
  implements:
  - Microsoft.Build.Framework.ITaskFactory
  platform:
  - net462
- uid: Microsoft.Build.Framework.ITaskFactory2.CreateTask(Microsoft.Build.Framework.IBuildEngine,System.Collections.Generic.IDictionary{System.String,System.String})
  id: CreateTask(Microsoft.Build.Framework.IBuildEngine,System.Collections.Generic.IDictionary{System.String,System.String})
  parent: Microsoft.Build.Framework.ITaskFactory2
  langs:
  - csharp
  name: CreateTask(IBuildEngine,IDictionary<String,String>)
  nameWithType: ITaskFactory2.CreateTask(IBuildEngine,IDictionary<String,String>)
  fullName: Microsoft.Build.Framework.ITaskFactory2.CreateTask(IBuildEngine,IDictionary<String,String>)
  type: Method
  assemblies:
  - Microsoft.Build.Framework
  namespace: Microsoft.Build.Framework
  summary: "建立工作，以用於一組選擇性的 「 特殊 」 參數集上使用 MSBuildRuntime 和 MSBuildArchitecture 預設工作參數的個別工作引動過程的執行的個體。 MSBuild 會提供實作此介面，TaskHostFactory，會使用值&quot;CLR2&quot;，&quot;CLR4&quot;，&quot;CurrentRuntime&quot;，&quot;MSBuildRuntime&quot;，以及&quot;*&quot;（任何）;和&quot;MSBuildArchitecture&quot;，值&quot;x86&quot;、&quot;x64&quot;，&quot;CurrentArchitecture 」，和 「\\*」 （的話）。 ITaskFactory2 的實作器可以選擇使用這些預先定義的 MSBuildRuntime 和 MSBuildArchitecture 值，或可以指定這些參數的新值。"
  remarks: "如果工作 factory 實作 ITaskFactory2，MSBuild 會呼叫這個方法，而不是 ITaskFactory.CreateTask。"
  syntax:
    content: public Microsoft.Build.Framework.ITask CreateTask (Microsoft.Build.Framework.IBuildEngine taskFactoryLoggingHost, System.Collections.Generic.IDictionary<string,string> taskIdentityParameters);
    parameters:
    - id: taskFactoryLoggingHost
      type: Microsoft.Build.Framework.IBuildEngine
      description: "工作 factory 記錄主機會記錄訊息中的工作環境。"
    - id: taskIdentityParameters
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: "特殊工作 factory 可用來修改如何執行工作，例如執行階段和架構的參數。"
    return:
      type: Microsoft.Build.Framework.ITask
      description: "產生的工作，或`null`如果無法建立的工作。"
  overload: Microsoft.Build.Framework.ITaskFactory2.CreateTask*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Framework.ITaskFactory2.Initialize(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Framework.TaskPropertyInfo},System.String,Microsoft.Build.Framework.IBuildEngine)
  id: Initialize(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Framework.TaskPropertyInfo},System.String,Microsoft.Build.Framework.IBuildEngine)
  parent: Microsoft.Build.Framework.ITaskFactory2
  langs:
  - csharp
  name: Initialize(String,IDictionary<String,String>,IDictionary<String,TaskPropertyInfo>,String,IBuildEngine)
  nameWithType: ITaskFactory2.Initialize(String,IDictionary<String,String>,IDictionary<String,TaskPropertyInfo>,String,IBuildEngine)
  fullName: Microsoft.Build.Framework.ITaskFactory2.Initialize(String,IDictionary<String,String>,IDictionary<String,TaskPropertyInfo>,String,IBuildEngine)
  type: Method
  assemblies:
  - Microsoft.Build.Framework
  namespace: Microsoft.Build.Framework
  summary: "初始化具有特定的內嵌工作區塊和一組 UsingTask 參數具現化工作的這個處理站。 MSBuild 會提供實作這個介面，TaskHostFactory，會使用值&quot;CLR2&quot;，&quot;CLR4&quot;，&quot;CurrentRuntime 」，「 執行階段 」 和 「 * 」 （任何）;和 「 架構 」，使用值&quot;x86&quot;、&quot;x64&quot;，&quot;CurrentArchitecture 」，和 「\\*」 （的話）。 ITaskFactory2 的實作器可以選擇使用這些預先定義執行階段和架構的值，或可以指定這些參數的新值。"
  remarks: "MSBuild 引擎會呼叫這個初始化處理站。 這應該初始化處理站，以便處理站可要求可以處理站建立的工作名稱。 如果工作 factory 實作 ITaskFactory2，這個初始化方法會呼叫 ITaskFactory.Initialize 取代。       TaskFactoryLoggingHost 會先用的工作目標的內容中的記錄訊息。"
  syntax:
    content: public bool Initialize (string taskName, System.Collections.Generic.IDictionary<string,string> factoryIdentityParameters, System.Collections.Generic.IDictionary<string,Microsoft.Build.Framework.TaskPropertyInfo> parameterGroup, string taskBody, Microsoft.Build.Framework.IBuildEngine taskFactoryLoggingHost);
    parameters:
    - id: taskName
      type: System.String
      description: "工作的名稱。"
    - id: factoryIdentityParameters
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: "特殊工作 factory 可用來修改如何執行工作，例如執行階段和架構的參數。 金鑰是參數的名稱，此值為參數的值。 這是設定 UsingTask 使用例如 UsingTask 執行階段和架構參數的參數集。"
    - id: parameterGroup
      type: System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Framework.TaskPropertyInfo}
      description: "[參數] 群組中。"
    - id: taskBody
      type: System.String
      description: "工作主體。"
    - id: taskFactoryLoggingHost
      type: Microsoft.Build.Framework.IBuildEngine
      description: "工作 factory 記錄主應用程式。"
    return:
      type: System.Boolean
      description: "值，指出是否已成功初始化。"
  overload: Microsoft.Build.Framework.ITaskFactory2.Initialize*
  exceptions: []
  platform:
  - net462
references:
- uid: Microsoft.Build.Framework.ITaskFactory2.CreateTask(Microsoft.Build.Framework.IBuildEngine,System.Collections.Generic.IDictionary{System.String,System.String})
  parent: Microsoft.Build.Framework.ITaskFactory2
  isExternal: false
  name: CreateTask(IBuildEngine,IDictionary<String,String>)
  nameWithType: ITaskFactory2.CreateTask(IBuildEngine,IDictionary<String,String>)
  fullName: Microsoft.Build.Framework.ITaskFactory2.CreateTask(IBuildEngine,IDictionary<String,String>)
- uid: Microsoft.Build.Framework.ITask
  parent: Microsoft.Build.Framework
  isExternal: false
  name: ITask
  nameWithType: ITask
  fullName: Microsoft.Build.Framework.ITask
- uid: Microsoft.Build.Framework.IBuildEngine
  parent: Microsoft.Build.Framework
  isExternal: false
  name: IBuildEngine
  nameWithType: IBuildEngine
  fullName: Microsoft.Build.Framework.IBuildEngine
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<String,String>
  nameWithType: IDictionary<String,String>
  fullName: System.Collections.Generic.IDictionary<System.String,System.String>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.String,System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Build.Framework.ITaskFactory2.Initialize(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Framework.TaskPropertyInfo},System.String,Microsoft.Build.Framework.IBuildEngine)
  parent: Microsoft.Build.Framework.ITaskFactory2
  isExternal: false
  name: Initialize(String,IDictionary<String,String>,IDictionary<String,TaskPropertyInfo>,String,IBuildEngine)
  nameWithType: ITaskFactory2.Initialize(String,IDictionary<String,String>,IDictionary<String,TaskPropertyInfo>,String,IBuildEngine)
  fullName: Microsoft.Build.Framework.ITaskFactory2.Initialize(String,IDictionary<String,String>,IDictionary<String,TaskPropertyInfo>,String,IBuildEngine)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Framework.TaskPropertyInfo}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<String,TaskPropertyInfo>
  nameWithType: IDictionary<String,TaskPropertyInfo>
  fullName: System.Collections.Generic.IDictionary<System.String,Microsoft.Build.Framework.TaskPropertyInfo>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.String,Microsoft.Build.Framework.TaskPropertyInfo>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.Build.Framework.TaskPropertyInfo
    name: TaskPropertyInfo
    nameWithType: TaskPropertyInfo
    fullName: TaskPropertyInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Build.Framework.ITaskFactory2.CreateTask*
  parent: Microsoft.Build.Framework.ITaskFactory2
  isExternal: false
  name: CreateTask
  nameWithType: ITaskFactory2.CreateTask
- uid: Microsoft.Build.Framework.ITaskFactory2.Initialize*
  parent: Microsoft.Build.Framework.ITaskFactory2
  isExternal: false
  name: Initialize
  nameWithType: ITaskFactory2.Initialize
