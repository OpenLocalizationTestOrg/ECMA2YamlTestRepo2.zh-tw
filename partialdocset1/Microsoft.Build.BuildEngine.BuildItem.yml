### YamlMime:ManagedReference
items:
- uid: Microsoft.Build.BuildEngine.BuildItem
  id: BuildItem
  children:
  - Microsoft.Build.BuildEngine.BuildItem.#ctor(System.String,Microsoft.Build.Framework.ITaskItem)
  - Microsoft.Build.BuildEngine.BuildItem.#ctor(System.String,System.String)
  - Microsoft.Build.BuildEngine.BuildItem.Clone
  - Microsoft.Build.BuildEngine.BuildItem.Condition
  - Microsoft.Build.BuildEngine.BuildItem.CopyCustomMetadataTo(Microsoft.Build.BuildEngine.BuildItem)
  - Microsoft.Build.BuildEngine.BuildItem.CustomMetadataCount
  - Microsoft.Build.BuildEngine.BuildItem.CustomMetadataNames
  - Microsoft.Build.BuildEngine.BuildItem.Exclude
  - Microsoft.Build.BuildEngine.BuildItem.FinalItemSpec
  - Microsoft.Build.BuildEngine.BuildItem.GetEvaluatedMetadata(System.String)
  - Microsoft.Build.BuildEngine.BuildItem.GetMetadata(System.String)
  - Microsoft.Build.BuildEngine.BuildItem.HasMetadata(System.String)
  - Microsoft.Build.BuildEngine.BuildItem.Include
  - Microsoft.Build.BuildEngine.BuildItem.IsImported
  - Microsoft.Build.BuildEngine.BuildItem.MetadataCount
  - Microsoft.Build.BuildEngine.BuildItem.MetadataNames
  - Microsoft.Build.BuildEngine.BuildItem.Name
  - Microsoft.Build.BuildEngine.BuildItem.RemoveMetadata(System.String)
  - Microsoft.Build.BuildEngine.BuildItem.SetMetadata(System.String,System.String)
  - Microsoft.Build.BuildEngine.BuildItem.SetMetadata(System.String,System.String,System.Boolean)
  langs:
  - csharp
  name: BuildItem
  nameWithType: BuildItem
  fullName: Microsoft.Build.BuildEngine.BuildItem
  type: Class
  summary: "表示的單一項目[!INCLUDE[vstecmsbuild](~/add/includes/vstecmsbuild-md.md)]專案。"
  remarks: "在專案中的項目可以代表多個項目使用萬用字元。 因此，每個 BuildItem 物件不必然表示`Item`專案中的項目。"
  example:
  - "The following example creates a <xref:Microsoft.Build.BuildEngine.Project> object and uses the <xref:Microsoft.Build.BuildEngine.Project.LoadXml%2A> method to add content to the project. The BuildItem, <xref:Microsoft.Build.BuildEngine.BuildItemGroup>, and <xref:Microsoft.Build.BuildEngine.BuildItemGroupCollection> classes are used to add, remove, and change items in the project.  \n  \n [!code-vb[msbuild_AddNewItem#1](~/add/codesnippet/visualbasic/AddNewItem/Module1.vb#1)]\n [!code-cs[msbuild_AddNewItem#1](~/add/codesnippet/csharp/AddNewItem/Program.cs#1)]"
  syntax:
    content: >-
      [System.Diagnostics.DebuggerDisplay("BuildItem (Name = { Name }, Include = { Include }, FinalItemSpec = { FinalItemSpec }, Condition = { Condition } )")]

      public class BuildItem
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.Build.BuildEngine.BuildItem.#ctor(System.String,Microsoft.Build.Framework.ITaskItem)
  id: '#ctor(System.String,Microsoft.Build.Framework.ITaskItem)'
  parent: Microsoft.Build.BuildEngine.BuildItem
  langs:
  - csharp
  name: BuildItem(String,ITaskItem)
  nameWithType: BuildItem.BuildItem(String,ITaskItem)
  fullName: Microsoft.Build.BuildEngine.BuildItem.BuildItem(String,ITaskItem)
  type: Constructor
  assemblies:
  - Microsoft.Build.Engine
  namespace: Microsoft.Build.BuildEngine
  summary: "初始化的新執行個體<xref href=&quot;Microsoft.Build.BuildEngine.BuildItem&quot;></xref>類別根據<xref href=&quot;Microsoft.Build.Framework.ITaskItem&quot;></xref>物件。"
  syntax:
    content: public BuildItem (string itemName, Microsoft.Build.Framework.ITaskItem taskItem);
    parameters:
    - id: itemName
      type: System.String
      description: "<xref:Microsoft.Build.BuildEngine.BuildItem.Name*>屬性<xref href=&quot;Microsoft.Build.BuildEngine.BuildItem&quot;> </xref>。</xref:Microsoft.Build.BuildEngine.BuildItem.Name*>"
    - id: taskItem
      type: Microsoft.Build.Framework.ITaskItem
      description: "<xref href=&quot;Microsoft.Build.Framework.ITaskItem&quot;> </xref>從中建立<xref:Microsoft.Build.BuildEngine.BuildItem.Include*>屬性<xref href=&quot;Microsoft.Build.BuildEngine.BuildItem&quot;> </xref>。</xref:Microsoft.Build.BuildEngine.BuildItem.Include*>"
  overload: Microsoft.Build.BuildEngine.BuildItem.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.BuildEngine.BuildItem.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: Microsoft.Build.BuildEngine.BuildItem
  langs:
  - csharp
  name: BuildItem(String,String)
  nameWithType: BuildItem.BuildItem(String,String)
  fullName: Microsoft.Build.BuildEngine.BuildItem.BuildItem(String,String)
  type: Constructor
  assemblies:
  - Microsoft.Build.Engine
  namespace: Microsoft.Build.BuildEngine
  summary: "初始化的新執行個體<xref href=&quot;Microsoft.Build.BuildEngine.BuildItem&quot;></xref>類別具有指定之<> *> 和<> *> 屬性值。"
  syntax:
    content: public BuildItem (string itemName, string itemInclude);
    parameters:
    - id: itemName
      type: System.String
      description: "<xref:Microsoft.Build.BuildEngine.BuildItem.Name*>屬性<xref href=&quot;Microsoft.Build.BuildEngine.BuildItem&quot;> </xref>。</xref:Microsoft.Build.BuildEngine.BuildItem.Name*>"
    - id: itemInclude
      type: System.String
      description: "<xref:Microsoft.Build.BuildEngine.BuildItem.Include*>屬性<xref href=&quot;Microsoft.Build.BuildEngine.BuildItem&quot;> </xref>。</xref:Microsoft.Build.BuildEngine.BuildItem.Include*>"
  overload: Microsoft.Build.BuildEngine.BuildItem.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.BuildEngine.BuildItem.Clone
  id: Clone
  parent: Microsoft.Build.BuildEngine.BuildItem
  langs:
  - csharp
  name: Clone()
  nameWithType: BuildItem.Clone()
  fullName: Microsoft.Build.BuildEngine.BuildItem.Clone()
  type: Method
  assemblies:
  - Microsoft.Build.Engine
  namespace: Microsoft.Build.BuildEngine
  summary: "建立淺層複本<xref href=&quot;Microsoft.Build.BuildEngine.BuildItem&quot;> </xref>。"
  syntax:
    content: public Microsoft.Build.BuildEngine.BuildItem Clone ();
    parameters: []
    return:
      type: Microsoft.Build.BuildEngine.BuildItem
      description: "一份<xref href=&quot;Microsoft.Build.BuildEngine.BuildItem&quot;> </xref>。"
  overload: Microsoft.Build.BuildEngine.BuildItem.Clone*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.BuildEngine.BuildItem.Condition
  id: Condition
  parent: Microsoft.Build.BuildEngine.BuildItem
  langs:
  - csharp
  name: Condition
  nameWithType: BuildItem.Condition
  fullName: Microsoft.Build.BuildEngine.BuildItem.Condition
  type: Property
  assemblies:
  - Microsoft.Build.Engine
  namespace: Microsoft.Build.BuildEngine
  summary: "取得或設定`Condition`屬性值的項目。"
  syntax:
    content: public string Condition { get; set; }
    return:
      type: System.String
      description: "`Condition`屬性值的項目。"
  overload: Microsoft.Build.BuildEngine.BuildItem.Condition*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.BuildEngine.BuildItem.CopyCustomMetadataTo(Microsoft.Build.BuildEngine.BuildItem)
  id: CopyCustomMetadataTo(Microsoft.Build.BuildEngine.BuildItem)
  parent: Microsoft.Build.BuildEngine.BuildItem
  langs:
  - csharp
  name: CopyCustomMetadataTo(BuildItem)
  nameWithType: BuildItem.CopyCustomMetadataTo(BuildItem)
  fullName: Microsoft.Build.BuildEngine.BuildItem.CopyCustomMetadataTo(BuildItem)
  type: Method
  assemblies:
  - Microsoft.Build.Engine
  namespace: Microsoft.Build.BuildEngine
  summary: "複製所有的項目中繼資料，在此<xref href=&quot;Microsoft.Build.BuildEngine.BuildItem&quot;></xref>指定<xref href=&quot;Microsoft.Build.BuildEngine.BuildItem&quot;> </xref>。"
  syntax:
    content: public void CopyCustomMetadataTo (Microsoft.Build.BuildEngine.BuildItem destinationItem);
    parameters:
    - id: destinationItem
      type: Microsoft.Build.BuildEngine.BuildItem
      description: "<xref href=&quot;Microsoft.Build.BuildEngine.BuildItem&quot;> </xref>来複製的項目中繼資料。"
  overload: Microsoft.Build.BuildEngine.BuildItem.CopyCustomMetadataTo*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.BuildEngine.BuildItem.CustomMetadataCount
  id: CustomMetadataCount
  parent: Microsoft.Build.BuildEngine.BuildItem
  langs:
  - csharp
  name: CustomMetadataCount
  nameWithType: BuildItem.CustomMetadataCount
  fullName: Microsoft.Build.BuildEngine.BuildItem.CustomMetadataCount
  type: Property
  assemblies:
  - Microsoft.Build.Engine
  namespace: Microsoft.Build.BuildEngine
  summary: "取得此項目設定的自訂屬性數目。"
  remarks: "CustomMetadataCount 所傳回的值並包含預先定義或保留的項目規格修飾詞，因為它們不是自訂屬性。"
  syntax:
    content: public int CustomMetadataCount { get; }
    return:
      type: System.Int32
      description: "整數，表示這個項目上設定幾個自訂屬性。"
  overload: Microsoft.Build.BuildEngine.BuildItem.CustomMetadataCount*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.BuildEngine.BuildItem.CustomMetadataNames
  id: CustomMetadataNames
  parent: Microsoft.Build.BuildEngine.BuildItem
  langs:
  - csharp
  name: CustomMetadataNames
  nameWithType: BuildItem.CustomMetadataNames
  fullName: Microsoft.Build.BuildEngine.BuildItem.CustomMetadataNames
  type: Property
  assemblies:
  - Microsoft.Build.Engine
  namespace: Microsoft.Build.BuildEngine
  summary: "取得所有使用者定義或自訂屬性名稱。"
  remarks: "CustomMetadataNames 不包括非使用者定義或非自訂屬性的名稱。"
  syntax:
    content: public System.Collections.ICollection CustomMetadataNames { get; }
    return:
      type: System.Collections.ICollection
      description: "<xref:System.Collections.ICollection>包含所有使用者定義或自訂屬性的字串名稱。</xref:System.Collections.ICollection>"
  overload: Microsoft.Build.BuildEngine.BuildItem.CustomMetadataNames*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.BuildEngine.BuildItem.Exclude
  id: Exclude
  parent: Microsoft.Build.BuildEngine.BuildItem
  langs:
  - csharp
  name: Exclude
  nameWithType: BuildItem.Exclude
  fullName: Microsoft.Build.BuildEngine.BuildItem.Exclude
  type: Property
  assemblies:
  - Microsoft.Build.Engine
  namespace: Microsoft.Build.BuildEngine
  summary: "取得或設定`Exclude`屬性值的項目。"
  syntax:
    content: public string Exclude { get; set; }
    return:
      type: System.String
      description: "取得或設定`Exclude`屬性值的項目。"
  overload: Microsoft.Build.BuildEngine.BuildItem.Exclude*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.BuildEngine.BuildItem.FinalItemSpec
  id: FinalItemSpec
  parent: Microsoft.Build.BuildEngine.BuildItem
  langs:
  - csharp
  name: FinalItemSpec
  nameWithType: BuildItem.FinalItemSpec
  fullName: Microsoft.Build.BuildEngine.BuildItem.FinalItemSpec
  type: Property
  assemblies:
  - Microsoft.Build.Engine
  namespace: Microsoft.Build.BuildEngine
  summary: "評估所有萬用字元和屬性之後，請取得最後項目的規格。"
  syntax:
    content: public string FinalItemSpec { get; }
    return:
      type: System.String
      description: "最後一個項目之後評估所有萬用字元和屬性的規格。"
  overload: Microsoft.Build.BuildEngine.BuildItem.FinalItemSpec*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.BuildEngine.BuildItem.GetEvaluatedMetadata(System.String)
  id: GetEvaluatedMetadata(System.String)
  parent: Microsoft.Build.BuildEngine.BuildItem
  langs:
  - csharp
  name: GetEvaluatedMetadata(String)
  nameWithType: BuildItem.GetEvaluatedMetadata(String)
  fullName: Microsoft.Build.BuildEngine.BuildItem.GetEvaluatedMetadata(String)
  type: Method
  assemblies:
  - Microsoft.Build.Engine
  namespace: Microsoft.Build.BuildEngine
  summary: "評估所有項目和屬性參考後傳回指定的項目中繼資料後的值。"
  syntax:
    content: public string GetEvaluatedMetadata (string metadataName);
    parameters:
    - id: metadataName
      type: System.String
      description: "項目中繼資料名稱。"
    return:
      type: System.String
      description: "在評估指定的項目中繼資料之後，所有項目和屬性參考後的值。"
  overload: Microsoft.Build.BuildEngine.BuildItem.GetEvaluatedMetadata*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.BuildEngine.BuildItem.GetMetadata(System.String)
  id: GetMetadata(System.String)
  parent: Microsoft.Build.BuildEngine.BuildItem
  langs:
  - csharp
  name: GetMetadata(String)
  nameWithType: BuildItem.GetMetadata(String)
  fullName: Microsoft.Build.BuildEngine.BuildItem.GetMetadata(String)
  type: Method
  assemblies:
  - Microsoft.Build.Engine
  namespace: Microsoft.Build.BuildEngine
  summary: "傳回指定的項目中繼資料的值。"
  remarks: ''
  example:
  - "The following example creates a <xref:Microsoft.Build.BuildEngine.Project> object and uses the <xref:Microsoft.Build.BuildEngine.Project.LoadXml%2A> method to add content to the project. The <xref:Microsoft.Build.BuildEngine.BuildItem>, <xref:Microsoft.Build.BuildEngine.BuildItemGroup>, and <xref:Microsoft.Build.BuildEngine.BuildItemGroupCollection> classes are used to add, remove, and change items in the project.  \n  \n [!code-vb[msbuild_AddNewItem#1](~/add/codesnippet/visualbasic/AddNewItem/Module1.vb#1)]\n [!code-cs[msbuild_AddNewItem#1](~/add/codesnippet/csharp/AddNewItem/Program.cs#1)]"
  syntax:
    content: public string GetMetadata (string metadataName);
    parameters:
    - id: metadataName
      type: System.String
      description: "項目中繼資料名稱。"
    return:
      type: System.String
      description: "指定的項目中繼資料的值。"
  overload: Microsoft.Build.BuildEngine.BuildItem.GetMetadata*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.BuildEngine.BuildItem.HasMetadata(System.String)
  id: HasMetadata(System.String)
  parent: Microsoft.Build.BuildEngine.BuildItem
  langs:
  - csharp
  name: HasMetadata(String)
  nameWithType: BuildItem.HasMetadata(String)
  fullName: Microsoft.Build.BuildEngine.BuildItem.HasMetadata(String)
  type: Method
  assemblies:
  - Microsoft.Build.Engine
  namespace: Microsoft.Build.BuildEngine
  summary: "表示項目是否具有指定的項目中繼資料。"
  syntax:
    content: public bool HasMetadata (string metadataName);
    parameters:
    - id: metadataName
      type: System.String
      description: "項目中繼資料名稱。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果項目指定的項目中繼資料中。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: Microsoft.Build.BuildEngine.BuildItem.HasMetadata*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.BuildEngine.BuildItem.Include
  id: Include
  parent: Microsoft.Build.BuildEngine.BuildItem
  langs:
  - csharp
  name: Include
  nameWithType: BuildItem.Include
  fullName: Microsoft.Build.BuildEngine.BuildItem.Include
  type: Property
  assemblies:
  - Microsoft.Build.Engine
  namespace: Microsoft.Build.BuildEngine
  summary: "取得或設定`Include`屬性建立<xref href=&quot;Microsoft.Build.BuildEngine.BuildItem&quot;> </xref>。"
  remarks: ''
  example:
  - "The following example creates a <xref:Microsoft.Build.BuildEngine.Project> object and uses the <xref:Microsoft.Build.BuildEngine.Project.LoadXml%2A> method to add content to the project. The <xref:Microsoft.Build.BuildEngine.BuildItem>, <xref:Microsoft.Build.BuildEngine.BuildItemGroup>, and <xref:Microsoft.Build.BuildEngine.BuildItemGroupCollection> classes are used to add, remove, and change items in the project.  \n  \n [!code-vb[msbuild_AddNewItem#1](~/add/codesnippet/visualbasic/AddNewItem/Module1.vb#1)]\n [!code-cs[msbuild_AddNewItem#1](~/add/codesnippet/csharp/AddNewItem/Program.cs#1)]"
  syntax:
    content: public string Include { get; set; }
    return:
      type: System.String
      description: "`Include`屬性建立<xref href=&quot;Microsoft.Build.BuildEngine.BuildItem&quot;> </xref>。"
  overload: Microsoft.Build.BuildEngine.BuildItem.Include*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.BuildEngine.BuildItem.IsImported
  id: IsImported
  parent: Microsoft.Build.BuildEngine.BuildItem
  langs:
  - csharp
  name: IsImported
  nameWithType: BuildItem.IsImported
  fullName: Microsoft.Build.BuildEngine.BuildItem.IsImported
  type: Property
  assemblies:
  - Microsoft.Build.Engine
  namespace: Microsoft.Build.BuildEngine
  summary: "取得值，指出項目是否已匯入專案。"
  syntax:
    content: public bool IsImported { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果項目匯入專案。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: Microsoft.Build.BuildEngine.BuildItem.IsImported*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.BuildEngine.BuildItem.MetadataCount
  id: MetadataCount
  parent: Microsoft.Build.BuildEngine.BuildItem
  langs:
  - csharp
  name: MetadataCount
  nameWithType: BuildItem.MetadataCount
  fullName: Microsoft.Build.BuildEngine.BuildItem.MetadataCount
  type: Property
  assemblies:
  - Microsoft.Build.Engine
  namespace: Microsoft.Build.BuildEngine
  summary: "取得項目上設定中繼資料的數目"
  remarks: "MetadataCount 所傳回的值包括預先定義或保留的項目規格修飾詞，以及其他中繼資料。"
  syntax:
    content: public int MetadataCount { get; }
    return:
      type: System.Int32
      description: "表示中繼資料的項目數目的整數。"
  overload: Microsoft.Build.BuildEngine.BuildItem.MetadataCount*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.BuildEngine.BuildItem.MetadataNames
  id: MetadataNames
  parent: Microsoft.Build.BuildEngine.BuildItem
  langs:
  - csharp
  name: MetadataNames
  nameWithType: BuildItem.MetadataNames
  fullName: Microsoft.Build.BuildEngine.BuildItem.MetadataNames
  type: Property
  assemblies:
  - Microsoft.Build.Engine
  namespace: Microsoft.Build.BuildEngine
  summary: "取得中繼資料的名稱上的項目，包括預先定義或保留的項目規格修飾詞。"
  remarks: "MetadataNames 所傳回的值，其中包含所有中繼資料，包括使用者定義和自訂屬性的名稱。"
  syntax:
    content: public System.Collections.ICollection MetadataNames { get; }
    return:
      type: System.Collections.ICollection
      description: "<xref:System.Collections.ICollection>包含的項目上的所有中繼資料名稱字串。</xref:System.Collections.ICollection>"
  overload: Microsoft.Build.BuildEngine.BuildItem.MetadataNames*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.BuildEngine.BuildItem.Name
  id: Name
  parent: Microsoft.Build.BuildEngine.BuildItem
  langs:
  - csharp
  name: Name
  nameWithType: BuildItem.Name
  fullName: Microsoft.Build.BuildEngine.BuildItem.Name
  type: Property
  assemblies:
  - Microsoft.Build.Engine
  namespace: Microsoft.Build.BuildEngine
  summary: "取得或設定項目所屬的項目集合的名稱。"
  remarks: ''
  example:
  - "The following example creates a <xref:Microsoft.Build.BuildEngine.Project> object and uses the <xref:Microsoft.Build.BuildEngine.Project.LoadXml%2A> method to add content to the project. The <xref:Microsoft.Build.BuildEngine.BuildItem>, <xref:Microsoft.Build.BuildEngine.BuildItemGroup>, and <xref:Microsoft.Build.BuildEngine.BuildItemGroupCollection> classes are used to add, remove, and change items in the project.  \n  \n [!code-vb[msbuild_AddNewItem#1](~/add/codesnippet/visualbasic/AddNewItem/Module1.vb#1)]\n [!code-cs[msbuild_AddNewItem#1](~/add/codesnippet/csharp/AddNewItem/Program.cs#1)]"
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "項目所屬的項目集合的名稱。"
  overload: Microsoft.Build.BuildEngine.BuildItem.Name*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.BuildEngine.BuildItem.RemoveMetadata(System.String)
  id: RemoveMetadata(System.String)
  parent: Microsoft.Build.BuildEngine.BuildItem
  langs:
  - csharp
  name: RemoveMetadata(String)
  nameWithType: BuildItem.RemoveMetadata(String)
  fullName: Microsoft.Build.BuildEngine.BuildItem.RemoveMetadata(String)
  type: Method
  assemblies:
  - Microsoft.Build.Engine
  namespace: Microsoft.Build.BuildEngine
  summary: "移除指定的項目中繼資料。"
  syntax:
    content: public void RemoveMetadata (string metadataName);
    parameters:
    - id: metadataName
      type: System.String
      description: "項目中繼資料名稱。"
  overload: Microsoft.Build.BuildEngine.BuildItem.RemoveMetadata*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.BuildEngine.BuildItem.SetMetadata(System.String,System.String)
  id: SetMetadata(System.String,System.String)
  parent: Microsoft.Build.BuildEngine.BuildItem
  langs:
  - csharp
  name: SetMetadata(String,String)
  nameWithType: BuildItem.SetMetadata(String,String)
  fullName: Microsoft.Build.BuildEngine.BuildItem.SetMetadata(String,String)
  type: Method
  assemblies:
  - Microsoft.Build.Engine
  namespace: Microsoft.Build.BuildEngine
  summary: "將指定的值指派給指定的項目中繼資料。"
  remarks: ''
  example:
  - "The following example creates a <xref:Microsoft.Build.BuildEngine.Project> object and uses the <xref:Microsoft.Build.BuildEngine.Project.LoadXml%2A> method to add content to the project. The <xref:Microsoft.Build.BuildEngine.BuildItem>, <xref:Microsoft.Build.BuildEngine.BuildItemGroup>, and <xref:Microsoft.Build.BuildEngine.BuildItemGroupCollection> classes are used to add, remove, and change items in the project.  \n  \n [!code-vb[msbuild_AddNewItem#1](~/add/codesnippet/visualbasic/AddNewItem/Module1.vb#1)]\n [!code-cs[msbuild_AddNewItem#1](~/add/codesnippet/csharp/AddNewItem/Program.cs#1)]"
  syntax:
    content: public void SetMetadata (string metadataName, string metadataValue);
    parameters:
    - id: metadataName
      type: System.String
      description: "項目中繼資料名稱。"
    - id: metadataValue
      type: System.String
      description: "項目中繼資料值。"
  overload: Microsoft.Build.BuildEngine.BuildItem.SetMetadata*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.BuildEngine.BuildItem.SetMetadata(System.String,System.String,System.Boolean)
  id: SetMetadata(System.String,System.String,System.Boolean)
  parent: Microsoft.Build.BuildEngine.BuildItem
  langs:
  - csharp
  name: SetMetadata(String,String,Boolean)
  nameWithType: BuildItem.SetMetadata(String,String,Boolean)
  fullName: Microsoft.Build.BuildEngine.BuildItem.SetMetadata(String,String,Boolean)
  type: Method
  assemblies:
  - Microsoft.Build.Engine
  namespace: Microsoft.Build.BuildEngine
  summary: "指定的值指派給指定的項目中繼資料，並選擇性地將中繼資料做為常值。"
  syntax:
    content: public void SetMetadata (string metadataName, string metadataValue, bool treatMetadataValueAsLiteral);
    parameters:
    - id: metadataName
      type: System.String
      description: "項目中繼資料名稱。"
    - id: metadataValue
      type: System.String
      description: "項目中繼資料值。"
    - id: treatMetadataValueAsLiteral
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>將中繼資料做為常值，使其逸出所有[!INCLUDE[vstecmsbuild](~/add/includes/vstecmsbuild-md.md)]特殊字元，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: Microsoft.Build.BuildEngine.BuildItem.SetMetadata*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: Microsoft.Build.BuildEngine.BuildItem.#ctor(System.String,Microsoft.Build.Framework.ITaskItem)
  parent: Microsoft.Build.BuildEngine.BuildItem
  isExternal: false
  name: BuildItem(String,ITaskItem)
  nameWithType: BuildItem.BuildItem(String,ITaskItem)
  fullName: Microsoft.Build.BuildEngine.BuildItem.BuildItem(String,ITaskItem)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Build.Framework.ITaskItem
  parent: Microsoft.Build.Framework
  isExternal: false
  name: ITaskItem
  nameWithType: ITaskItem
  fullName: Microsoft.Build.Framework.ITaskItem
- uid: Microsoft.Build.BuildEngine.BuildItem.#ctor(System.String,System.String)
  parent: Microsoft.Build.BuildEngine.BuildItem
  isExternal: false
  name: BuildItem(String,String)
  nameWithType: BuildItem.BuildItem(String,String)
  fullName: Microsoft.Build.BuildEngine.BuildItem.BuildItem(String,String)
- uid: Microsoft.Build.BuildEngine.BuildItem.Clone
  parent: Microsoft.Build.BuildEngine.BuildItem
  isExternal: false
  name: Clone()
  nameWithType: BuildItem.Clone()
  fullName: Microsoft.Build.BuildEngine.BuildItem.Clone()
- uid: Microsoft.Build.BuildEngine.BuildItem
  parent: Microsoft.Build.BuildEngine
  isExternal: false
  name: BuildItem
  nameWithType: BuildItem
  fullName: Microsoft.Build.BuildEngine.BuildItem
- uid: Microsoft.Build.BuildEngine.BuildItem.Condition
  parent: Microsoft.Build.BuildEngine.BuildItem
  isExternal: false
  name: Condition
  nameWithType: BuildItem.Condition
  fullName: Microsoft.Build.BuildEngine.BuildItem.Condition
- uid: Microsoft.Build.BuildEngine.BuildItem.CopyCustomMetadataTo(Microsoft.Build.BuildEngine.BuildItem)
  parent: Microsoft.Build.BuildEngine.BuildItem
  isExternal: false
  name: CopyCustomMetadataTo(BuildItem)
  nameWithType: BuildItem.CopyCustomMetadataTo(BuildItem)
  fullName: Microsoft.Build.BuildEngine.BuildItem.CopyCustomMetadataTo(BuildItem)
- uid: Microsoft.Build.BuildEngine.BuildItem.CustomMetadataCount
  parent: Microsoft.Build.BuildEngine.BuildItem
  isExternal: false
  name: CustomMetadataCount
  nameWithType: BuildItem.CustomMetadataCount
  fullName: Microsoft.Build.BuildEngine.BuildItem.CustomMetadataCount
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Build.BuildEngine.BuildItem.CustomMetadataNames
  parent: Microsoft.Build.BuildEngine.BuildItem
  isExternal: false
  name: CustomMetadataNames
  nameWithType: BuildItem.CustomMetadataNames
  fullName: Microsoft.Build.BuildEngine.BuildItem.CustomMetadataNames
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: Microsoft.Build.BuildEngine.BuildItem.Exclude
  parent: Microsoft.Build.BuildEngine.BuildItem
  isExternal: false
  name: Exclude
  nameWithType: BuildItem.Exclude
  fullName: Microsoft.Build.BuildEngine.BuildItem.Exclude
- uid: Microsoft.Build.BuildEngine.BuildItem.FinalItemSpec
  parent: Microsoft.Build.BuildEngine.BuildItem
  isExternal: false
  name: FinalItemSpec
  nameWithType: BuildItem.FinalItemSpec
  fullName: Microsoft.Build.BuildEngine.BuildItem.FinalItemSpec
- uid: Microsoft.Build.BuildEngine.BuildItem.GetEvaluatedMetadata(System.String)
  parent: Microsoft.Build.BuildEngine.BuildItem
  isExternal: false
  name: GetEvaluatedMetadata(String)
  nameWithType: BuildItem.GetEvaluatedMetadata(String)
  fullName: Microsoft.Build.BuildEngine.BuildItem.GetEvaluatedMetadata(String)
- uid: Microsoft.Build.BuildEngine.BuildItem.GetMetadata(System.String)
  parent: Microsoft.Build.BuildEngine.BuildItem
  isExternal: false
  name: GetMetadata(String)
  nameWithType: BuildItem.GetMetadata(String)
  fullName: Microsoft.Build.BuildEngine.BuildItem.GetMetadata(String)
- uid: Microsoft.Build.BuildEngine.BuildItem.HasMetadata(System.String)
  parent: Microsoft.Build.BuildEngine.BuildItem
  isExternal: false
  name: HasMetadata(String)
  nameWithType: BuildItem.HasMetadata(String)
  fullName: Microsoft.Build.BuildEngine.BuildItem.HasMetadata(String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Build.BuildEngine.BuildItem.Include
  parent: Microsoft.Build.BuildEngine.BuildItem
  isExternal: false
  name: Include
  nameWithType: BuildItem.Include
  fullName: Microsoft.Build.BuildEngine.BuildItem.Include
- uid: Microsoft.Build.BuildEngine.BuildItem.IsImported
  parent: Microsoft.Build.BuildEngine.BuildItem
  isExternal: false
  name: IsImported
  nameWithType: BuildItem.IsImported
  fullName: Microsoft.Build.BuildEngine.BuildItem.IsImported
- uid: Microsoft.Build.BuildEngine.BuildItem.MetadataCount
  parent: Microsoft.Build.BuildEngine.BuildItem
  isExternal: false
  name: MetadataCount
  nameWithType: BuildItem.MetadataCount
  fullName: Microsoft.Build.BuildEngine.BuildItem.MetadataCount
- uid: Microsoft.Build.BuildEngine.BuildItem.MetadataNames
  parent: Microsoft.Build.BuildEngine.BuildItem
  isExternal: false
  name: MetadataNames
  nameWithType: BuildItem.MetadataNames
  fullName: Microsoft.Build.BuildEngine.BuildItem.MetadataNames
- uid: Microsoft.Build.BuildEngine.BuildItem.Name
  parent: Microsoft.Build.BuildEngine.BuildItem
  isExternal: false
  name: Name
  nameWithType: BuildItem.Name
  fullName: Microsoft.Build.BuildEngine.BuildItem.Name
- uid: Microsoft.Build.BuildEngine.BuildItem.RemoveMetadata(System.String)
  parent: Microsoft.Build.BuildEngine.BuildItem
  isExternal: false
  name: RemoveMetadata(String)
  nameWithType: BuildItem.RemoveMetadata(String)
  fullName: Microsoft.Build.BuildEngine.BuildItem.RemoveMetadata(String)
- uid: Microsoft.Build.BuildEngine.BuildItem.SetMetadata(System.String,System.String)
  parent: Microsoft.Build.BuildEngine.BuildItem
  isExternal: false
  name: SetMetadata(String,String)
  nameWithType: BuildItem.SetMetadata(String,String)
  fullName: Microsoft.Build.BuildEngine.BuildItem.SetMetadata(String,String)
- uid: Microsoft.Build.BuildEngine.BuildItem.SetMetadata(System.String,System.String,System.Boolean)
  parent: Microsoft.Build.BuildEngine.BuildItem
  isExternal: false
  name: SetMetadata(String,String,Boolean)
  nameWithType: BuildItem.SetMetadata(String,String,Boolean)
  fullName: Microsoft.Build.BuildEngine.BuildItem.SetMetadata(String,String,Boolean)
- uid: Microsoft.Build.BuildEngine.BuildItem.#ctor*
  parent: Microsoft.Build.BuildEngine.BuildItem
  isExternal: false
  name: BuildItem
  nameWithType: BuildItem.BuildItem
- uid: Microsoft.Build.BuildEngine.BuildItem.Clone*
  parent: Microsoft.Build.BuildEngine.BuildItem
  isExternal: false
  name: Clone
  nameWithType: BuildItem.Clone
- uid: Microsoft.Build.BuildEngine.BuildItem.Condition*
  parent: Microsoft.Build.BuildEngine.BuildItem
  isExternal: false
  name: Condition
  nameWithType: BuildItem.Condition
- uid: Microsoft.Build.BuildEngine.BuildItem.CopyCustomMetadataTo*
  parent: Microsoft.Build.BuildEngine.BuildItem
  isExternal: false
  name: CopyCustomMetadataTo
  nameWithType: BuildItem.CopyCustomMetadataTo
- uid: Microsoft.Build.BuildEngine.BuildItem.CustomMetadataCount*
  parent: Microsoft.Build.BuildEngine.BuildItem
  isExternal: false
  name: CustomMetadataCount
  nameWithType: BuildItem.CustomMetadataCount
- uid: Microsoft.Build.BuildEngine.BuildItem.CustomMetadataNames*
  parent: Microsoft.Build.BuildEngine.BuildItem
  isExternal: false
  name: CustomMetadataNames
  nameWithType: BuildItem.CustomMetadataNames
- uid: Microsoft.Build.BuildEngine.BuildItem.Exclude*
  parent: Microsoft.Build.BuildEngine.BuildItem
  isExternal: false
  name: Exclude
  nameWithType: BuildItem.Exclude
- uid: Microsoft.Build.BuildEngine.BuildItem.FinalItemSpec*
  parent: Microsoft.Build.BuildEngine.BuildItem
  isExternal: false
  name: FinalItemSpec
  nameWithType: BuildItem.FinalItemSpec
- uid: Microsoft.Build.BuildEngine.BuildItem.GetEvaluatedMetadata*
  parent: Microsoft.Build.BuildEngine.BuildItem
  isExternal: false
  name: GetEvaluatedMetadata
  nameWithType: BuildItem.GetEvaluatedMetadata
- uid: Microsoft.Build.BuildEngine.BuildItem.GetMetadata*
  parent: Microsoft.Build.BuildEngine.BuildItem
  isExternal: false
  name: GetMetadata
  nameWithType: BuildItem.GetMetadata
- uid: Microsoft.Build.BuildEngine.BuildItem.HasMetadata*
  parent: Microsoft.Build.BuildEngine.BuildItem
  isExternal: false
  name: HasMetadata
  nameWithType: BuildItem.HasMetadata
- uid: Microsoft.Build.BuildEngine.BuildItem.Include*
  parent: Microsoft.Build.BuildEngine.BuildItem
  isExternal: false
  name: Include
  nameWithType: BuildItem.Include
- uid: Microsoft.Build.BuildEngine.BuildItem.IsImported*
  parent: Microsoft.Build.BuildEngine.BuildItem
  isExternal: false
  name: IsImported
  nameWithType: BuildItem.IsImported
- uid: Microsoft.Build.BuildEngine.BuildItem.MetadataCount*
  parent: Microsoft.Build.BuildEngine.BuildItem
  isExternal: false
  name: MetadataCount
  nameWithType: BuildItem.MetadataCount
- uid: Microsoft.Build.BuildEngine.BuildItem.MetadataNames*
  parent: Microsoft.Build.BuildEngine.BuildItem
  isExternal: false
  name: MetadataNames
  nameWithType: BuildItem.MetadataNames
- uid: Microsoft.Build.BuildEngine.BuildItem.Name*
  parent: Microsoft.Build.BuildEngine.BuildItem
  isExternal: false
  name: Name
  nameWithType: BuildItem.Name
- uid: Microsoft.Build.BuildEngine.BuildItem.RemoveMetadata*
  parent: Microsoft.Build.BuildEngine.BuildItem
  isExternal: false
  name: RemoveMetadata
  nameWithType: BuildItem.RemoveMetadata
- uid: Microsoft.Build.BuildEngine.BuildItem.SetMetadata*
  parent: Microsoft.Build.BuildEngine.BuildItem
  isExternal: false
  name: SetMetadata
  nameWithType: BuildItem.SetMetadata
