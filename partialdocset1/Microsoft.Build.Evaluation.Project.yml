### YamlMime:ManagedReference
items:
- uid: Microsoft.Build.Evaluation.Project
  id: Project
  children:
  - Microsoft.Build.Evaluation.Project.#ctor
  - Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement)
  - Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Evaluation.ProjectCollection)
  - Microsoft.Build.Evaluation.Project.#ctor(System.String)
  - Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader)
  - Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String)
  - Microsoft.Build.Evaluation.Project.#ctor(System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)
  - Microsoft.Build.Evaluation.Project.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String)
  - Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String)
  - Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)
  - Microsoft.Build.Evaluation.Project.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)
  - Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)
  - Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)
  - Microsoft.Build.Evaluation.Project.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)
  - Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)
  - Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)
  - Microsoft.Build.Evaluation.Project.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)
  - Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)
  - Microsoft.Build.Evaluation.Project.AddItem(System.String,System.String)
  - Microsoft.Build.Evaluation.Project.AddItem(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})
  - Microsoft.Build.Evaluation.Project.AddItemFast(System.String,System.String)
  - Microsoft.Build.Evaluation.Project.AddItemFast(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})
  - Microsoft.Build.Evaluation.Project.AllEvaluatedItemDefinitionMetadata
  - Microsoft.Build.Evaluation.Project.AllEvaluatedItems
  - Microsoft.Build.Evaluation.Project.AllEvaluatedProperties
  - Microsoft.Build.Evaluation.Project.Build
  - Microsoft.Build.Evaluation.Project.Build(Microsoft.Build.Framework.ILogger)
  - Microsoft.Build.Evaluation.Project.Build(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})
  - Microsoft.Build.Evaluation.Project.Build(System.String)
  - Microsoft.Build.Evaluation.Project.Build(System.String[])
  - Microsoft.Build.Evaluation.Project.Build(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})
  - Microsoft.Build.Evaluation.Project.Build(System.String,System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})
  - Microsoft.Build.Evaluation.Project.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})
  - Microsoft.Build.Evaluation.Project.Build(System.String,System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})
  - Microsoft.Build.Evaluation.Project.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})
  - Microsoft.Build.Evaluation.Project.ConditionedProperties
  - Microsoft.Build.Evaluation.Project.CreateProjectInstance
  - Microsoft.Build.Evaluation.Project.CreateProjectInstance(Microsoft.Build.Execution.ProjectInstanceSettings)
  - Microsoft.Build.Evaluation.Project.DirectoryPath
  - Microsoft.Build.Evaluation.Project.DisableMarkDirty
  - Microsoft.Build.Evaluation.Project.EvaluationCounter
  - Microsoft.Build.Evaluation.Project.ExpandString(System.String)
  - Microsoft.Build.Evaluation.Project.FullPath
  - Microsoft.Build.Evaluation.Project.GetEvaluatedItemIncludeEscaped(Microsoft.Build.Evaluation.ProjectItem)
  - Microsoft.Build.Evaluation.Project.GetEvaluatedItemIncludeEscaped(Microsoft.Build.Evaluation.ProjectItemDefinition)
  - Microsoft.Build.Evaluation.Project.GetItems(System.String)
  - Microsoft.Build.Evaluation.Project.GetItemsByEvaluatedInclude(System.String)
  - Microsoft.Build.Evaluation.Project.GetItemsIgnoringCondition(System.String)
  - Microsoft.Build.Evaluation.Project.GetLogicalProject
  - Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped(Microsoft.Build.Evaluation.ProjectMetadata)
  - Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped(Microsoft.Build.Evaluation.ProjectItem,System.String)
  - Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped(Microsoft.Build.Evaluation.ProjectItemDefinition,System.String)
  - Microsoft.Build.Evaluation.Project.GetProperty(System.String)
  - Microsoft.Build.Evaluation.Project.GetPropertyValue(System.String)
  - Microsoft.Build.Evaluation.Project.GetPropertyValueEscaped(Microsoft.Build.Evaluation.ProjectProperty)
  - Microsoft.Build.Evaluation.Project.GlobalProperties
  - Microsoft.Build.Evaluation.Project.Imports
  - Microsoft.Build.Evaluation.Project.ImportsIncludingDuplicates
  - Microsoft.Build.Evaluation.Project.IsBuildEnabled
  - Microsoft.Build.Evaluation.Project.IsDirty
  - Microsoft.Build.Evaluation.Project.ItemDefinitions
  - Microsoft.Build.Evaluation.Project.Items
  - Microsoft.Build.Evaluation.Project.ItemsIgnoringCondition
  - Microsoft.Build.Evaluation.Project.ItemTypes
  - Microsoft.Build.Evaluation.Project.MarkDirty
  - Microsoft.Build.Evaluation.Project.ProjectCollection
  - Microsoft.Build.Evaluation.Project.ProjectFileLocation
  - Microsoft.Build.Evaluation.Project.Properties
  - Microsoft.Build.Evaluation.Project.ReevaluateIfNecessary
  - Microsoft.Build.Evaluation.Project.RemoveGlobalProperty(System.String)
  - Microsoft.Build.Evaluation.Project.RemoveItem(Microsoft.Build.Evaluation.ProjectItem)
  - Microsoft.Build.Evaluation.Project.RemoveItems(System.Collections.Generic.IEnumerable{Microsoft.Build.Evaluation.ProjectItem})
  - Microsoft.Build.Evaluation.Project.RemoveProperty(Microsoft.Build.Evaluation.ProjectProperty)
  - Microsoft.Build.Evaluation.Project.Save
  - Microsoft.Build.Evaluation.Project.Save(System.IO.TextWriter)
  - Microsoft.Build.Evaluation.Project.Save(System.String)
  - Microsoft.Build.Evaluation.Project.Save(System.Text.Encoding)
  - Microsoft.Build.Evaluation.Project.Save(System.String,System.Text.Encoding)
  - Microsoft.Build.Evaluation.Project.SaveLogicalProject(System.IO.TextWriter)
  - Microsoft.Build.Evaluation.Project.SetGlobalProperty(System.String,System.String)
  - Microsoft.Build.Evaluation.Project.SetProperty(System.String,System.String)
  - Microsoft.Build.Evaluation.Project.SkipEvaluation
  - Microsoft.Build.Evaluation.Project.SubToolsetVersion
  - Microsoft.Build.Evaluation.Project.Targets
  - Microsoft.Build.Evaluation.Project.ToolsVersion
  - Microsoft.Build.Evaluation.Project.Xml
  langs:
  - csharp
  name: Project
  nameWithType: Project
  fullName: Microsoft.Build.Evaluation.Project
  type: Class
  summary: "表示與設計階段語意 （semantics） 的專案。 這個類別可以載入專案檔、 編輯項目和屬性，並建置專案。"
  syntax:
    content: >-
      [System.Diagnostics.DebuggerDisplay("{FullPath} EffectiveToolsVersion={ToolsVersion} #GlobalProperties={data.globalProperties.Count} #Properties={data.Properties.Count} #ItemTypes={data.ItemTypes.Count} #ItemDefinitions={data.ItemDefinitions.Count} #Items={data.Items.Count} #Targets={data.Targets.Count}")]

      public class Project
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.#ctor
  id: '#ctor'
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: Project()
  nameWithType: Project.Project()
  fullName: Microsoft.Build.Evaluation.Project.Project()
  type: Constructor
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "建構空的專案使用全域專案集合全域屬性和預設工具版本。"
  remarks: "此專案會加入至全域專案集合，它由提供時的完整路徑的來源專案檔案，通常在儲存專案。"
  syntax:
    content: public Project ();
    parameters: []
  overload: Microsoft.Build.Evaluation.Project.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement)
  id: '#ctor(Microsoft.Build.Construction.ProjectRootElement)'
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: Project(ProjectRootElement)
  nameWithType: Project.Project(ProjectRootElement)
  fullName: Microsoft.Build.Evaluation.Project.Project(ProjectRootElement)
  type: Constructor
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "建構空的專案，並使用指定的專案根目錄和全域專案集合全域屬性和預設工具版本加以評估。"
  remarks: "此專案會加入至全域專案集合，這個專案或指定的專案根目錄會提供給來源專案檔的完整路徑時。       在評估失敗時，會擲回 InvalidProjectFileException。 如果已經有相同的專案，則會擲回 InvalidOperationException 載入專案集合中。"
  syntax:
    content: public Project (Microsoft.Build.Construction.ProjectRootElement xml);
    parameters:
    - id: xml
      type: Microsoft.Build.Construction.ProjectRootElement
      description: "ProjectRootElement 使用來進行評估。"
  overload: Microsoft.Build.Evaluation.Project.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Evaluation.ProjectCollection)
  id: '#ctor(Microsoft.Build.Evaluation.ProjectCollection)'
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: Project(ProjectCollection)
  nameWithType: Project.Project(ProjectCollection)
  fullName: Microsoft.Build.Evaluation.Project.Project(ProjectCollection)
  type: Constructor
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "建構空的專案使用指定的專案集合全域屬性和預設工具版本。"
  remarks: "此專案會加入至指定的專案集合，它由提供時的完整路徑的來源專案檔案，通常在儲存專案。"
  syntax:
    content: public Project (Microsoft.Build.Evaluation.ProjectCollection projectCollection);
    parameters:
    - id: projectCollection
      type: Microsoft.Build.Evaluation.ProjectCollection
      description: "新的專案加入至專案集合。"
  overload: Microsoft.Build.Evaluation.Project.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: Project(String)
  nameWithType: Project.Project(String)
  fullName: Microsoft.Build.Evaluation.Project.Project(String)
  type: Constructor
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "建構一個專案，並從指定之來源的專案檔，且具有全域專案集合全域屬性和預設工具版本加以評估。"
  remarks: "專案會加入至全域專案集合。       如果評估此來源專案檔的專案集合中已經有專案，則會擲回 InvalidOperationException。 可能會擲回與 IO 相關例外狀況。"
  syntax:
    content: public Project (string projectFile);
    parameters:
    - id: projectFile
      type: System.String
      description: "要評估的來源專案檔。"
  overload: Microsoft.Build.Evaluation.Project.#ctor*
  exceptions:
  - type: Microsoft.Build.Exceptions.InvalidProjectFileException
    commentId: T:Microsoft.Build.Exceptions.InvalidProjectFileException
    description: "如果評估作業失敗。"
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader)
  id: '#ctor(System.Xml.XmlReader)'
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: Project(XmlReader)
  nameWithType: Project.Project(XmlReader)
  fullName: Microsoft.Build.Evaluation.Project.Project(XmlReader)
  type: Constructor
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "建構一個專案，並評估指定的 XML 讀取器的原始程式碼。 原始程式碼會以全域專案集合全域屬性和預設工具版本加以評估。"
  remarks: "此專案會加入至全域專案集合，它由提供時的完整路徑的來源專案檔案，通常在儲存專案。       在評估失敗時，會擲回 InvalidProjectFileException。 如果已經有相同的專案，則會擲回 InvalidOperationException 載入專案集合中。"
  syntax:
    content: public Project (System.Xml.XmlReader xmlReader);
    parameters:
    - id: xmlReader
      type: System.Xml.XmlReader
      description: "讀取專案原始程式碼的 Xml 讀取器。"
  overload: Microsoft.Build.Evaluation.Project.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String)
  id: '#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String)'
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: Project(ProjectRootElement,IDictionary<String,String>,String)
  nameWithType: Project.Project(ProjectRootElement,IDictionary<String,String>,String)
  fullName: Microsoft.Build.Evaluation.Project.Project(ProjectRootElement,IDictionary<String,String>,String)
  type: Constructor
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "建構空的專案，並使用指定的專案根目錄加以評估並與指定的全域屬性和指定的工具版本。"
  remarks: "此專案會加入至全域專案集合，這個專案或指定的專案根目錄會提供給來源專案檔的完整路徑時。       在評估失敗時，會擲回 InvalidProjectFileException。 如果已經有相同的專案，則會擲回 InvalidOperationException 載入專案集合中。"
  syntax:
    content: public Project (Microsoft.Build.Construction.ProjectRootElement xml, System.Collections.Generic.IDictionary<string,string> globalProperties, string toolsVersion);
    parameters:
    - id: xml
      type: Microsoft.Build.Construction.ProjectRootElement
      description: "要用於評估專案根目錄。"
    - id: globalProperties
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: "要評估的全域屬性。 可能是 null，如此將使用內含專案集合的全域屬性。"
    - id: toolsVersion
      type: System.String
      description: "要評估的工具版本。 可能是 null。"
  overload: Microsoft.Build.Evaluation.Project.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.#ctor(System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)
  id: '#ctor(System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)'
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: Project(IDictionary<String,String>,String,ProjectCollection)
  nameWithType: Project.Project(IDictionary<String,String>,String,ProjectCollection)
  fullName: Microsoft.Build.Evaluation.Project.Project(IDictionary<String,String>,String,ProjectCollection)
  type: Constructor
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "建構空的專案，來評估指定的專案集合與指定的全域屬性與指定的工具版本。"
  remarks: "專案會加入至指定的專案集合，它由提供時的完整路徑的來源專案檔案，通常在儲存專案。"
  syntax:
    content: public Project (System.Collections.Generic.IDictionary<string,string> globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);
    parameters:
    - id: globalProperties
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: "要評估的全域屬性。 可能是 null，如此將使用內含專案集合的全域屬性。"
    - id: toolsVersion
      type: System.String
      description: "用來評估專案的工具版本。 可能是 null。"
    - id: projectCollection
      type: Microsoft.Build.Evaluation.ProjectCollection
      description: "將加入的專案集合的新專案。"
  overload: Microsoft.Build.Evaluation.Project.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String)
  id: '#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String)'
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: Project(String,IDictionary<String,String>,String)
  nameWithType: Project.Project(String,IDictionary<String,String>,String)
  fullName: Microsoft.Build.Evaluation.Project.Project(String,IDictionary<String,String>,String)
  type: Constructor
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "建構一個專案，並從指定之來源的專案檔指定的全域屬性並與指定的工具版本加以評估。"
  remarks: "專案會加入至全域專案集合。       在評估失敗時，會擲回 InvalidProjectFileException。 如果已經有相同的專案，則會擲回 InvalidOperationException 載入專案集合中。 可能會擲回與 IO 相關例外狀況。"
  syntax:
    content: public Project (string projectFile, System.Collections.Generic.IDictionary<string,string> globalProperties, string toolsVersion);
    parameters:
    - id: projectFile
      type: System.String
      description: "要評估的來源專案檔案路徑。"
    - id: globalProperties
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: "要評估的全域屬性。 可能是 null，如此將使用內含專案集合的全域屬性。"
    - id: toolsVersion
      type: System.String
      description: "要評估的工具版本。 可能是 null。"
  overload: Microsoft.Build.Evaluation.Project.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String)
  id: '#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String)'
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: Project(XmlReader,IDictionary<String,String>,String)
  nameWithType: Project.Project(XmlReader,IDictionary<String,String>,String)
  fullName: Microsoft.Build.Evaluation.Project.Project(XmlReader,IDictionary<String,String>,String)
  type: Constructor
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "建構一個專案，並評估指定的 XML 讀取器的原始程式碼。 原始程式碼會評估與指定的全域屬性和指定的工具版本。"
  remarks: "此專案會加入至全域專案集合，它由提供時的完整路徑的來源專案檔案，通常在儲存專案。       在評估失敗時，會擲回 InvalidProjectFileException。 如果已經有相同的專案，則會擲回 InvalidOperationException 載入專案集合中。"
  syntax:
    content: public Project (System.Xml.XmlReader xmlReader, System.Collections.Generic.IDictionary<string,string> globalProperties, string toolsVersion);
    parameters:
    - id: xmlReader
      type: System.Xml.XmlReader
      description: "讀取專案原始程式碼的 Xml 讀取器。"
    - id: globalProperties
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: "要評估的全域屬性。 可能是 null，如此將使用內含專案集合的全域屬性。"
    - id: toolsVersion
      type: System.String
      description: "要評估的工具版本。 可能是 null。"
  overload: Microsoft.Build.Evaluation.Project.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)
  id: '#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)'
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: Project(ProjectRootElement,IDictionary<String,String>,String,ProjectCollection)
  nameWithType: Project.Project(ProjectRootElement,IDictionary<String,String>,String,ProjectCollection)
  fullName: Microsoft.Build.Evaluation.Project.Project(ProjectRootElement,IDictionary<String,String>,String,ProjectCollection)
  type: Constructor
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "建構一個專案，並使用指定的專案根目錄加以評估並與指定的全域屬性和指定的工具版本。"
  remarks: "這個專案或指定的專案根目錄會提供給來源專案檔的完整路徑時，專案會加入至指定的專案集合。       在評估失敗時，會擲回 InvalidProjectFileException。 如果已經有相同的專案，則會擲回 InvalidOperationException 載入專案集合中。"
  syntax:
    content: public Project (Microsoft.Build.Construction.ProjectRootElement xml, System.Collections.Generic.IDictionary<string,string> globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);
    parameters:
    - id: xml
      type: Microsoft.Build.Construction.ProjectRootElement
      description: "要用於評估專案根目錄。"
    - id: globalProperties
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: "要評估的全域屬性。 可能是 null，如此將使用內含專案集合的全域屬性。"
    - id: toolsVersion
      type: System.String
      description: "要評估的工具版本。 可能是 null。"
    - id: projectCollection
      type: Microsoft.Build.Evaluation.ProjectCollection
      description: "若要加入至專案集合專案。"
  overload: Microsoft.Build.Evaluation.Project.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)
  id: '#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)'
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: Project(String,IDictionary<String,String>,String,ProjectCollection)
  nameWithType: Project.Project(String,IDictionary<String,String>,String,ProjectCollection)
  fullName: Microsoft.Build.Evaluation.Project.Project(String,IDictionary<String,String>,String,ProjectCollection)
  type: Constructor
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "建構一個專案，並從指定之來源的專案檔指定的全域屬性並與指定的工具版本加以評估。"
  remarks: "專案會加入至指定的專案集合。       在評估失敗時，會擲回 InvalidProjectFileException。 如果已經有相同的專案，則會擲回 InvalidOperationException 載入專案集合中。 可能會擲回與 IO 相關例外狀況。"
  syntax:
    content: public Project (string projectFile, System.Collections.Generic.IDictionary<string,string> globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);
    parameters:
    - id: projectFile
      type: System.String
      description: "要評估的來源專案檔案路徑。"
    - id: globalProperties
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: "全域屬性中。 可能是 null。"
    - id: toolsVersion
      type: System.String
      description: "工具版本。 可能是 null。"
    - id: projectCollection
      type: Microsoft.Build.Evaluation.ProjectCollection
      description: "若要加入至專案集合專案。 不可為 null。"
  overload: Microsoft.Build.Evaluation.Project.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)
  id: '#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)'
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: Project(XmlReader,IDictionary<String,String>,String,ProjectCollection)
  nameWithType: Project.Project(XmlReader,IDictionary<String,String>,String,ProjectCollection)
  fullName: Microsoft.Build.Evaluation.Project.Project(XmlReader,IDictionary<String,String>,String,ProjectCollection)
  type: Constructor
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "建構一個專案，並評估指定的 XML 讀取器的原始程式碼。 原始程式碼會評估與指定的全域屬性和指定的工具版本。"
  remarks: "這個專案或指定的專案根目錄會提供給來源專案檔的完整路徑時，專案會加入至指定的專案集合。       在評估失敗時，會擲回 InvalidProjectFileException。 如果已經有相同的專案，則會擲回 InvalidOperationException 載入專案集合中。"
  syntax:
    content: public Project (System.Xml.XmlReader xmlReader, System.Collections.Generic.IDictionary<string,string> globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);
    parameters:
    - id: xmlReader
      type: System.Xml.XmlReader
      description: "讀取專案原始程式碼的 Xml 讀取器。"
    - id: globalProperties
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: "要評估的全域屬性。 可能是 null，如此將使用內含專案集合的全域屬性。"
    - id: toolsVersion
      type: System.String
      description: "要評估的工具版本。 可能是 null。"
    - id: projectCollection
      type: Microsoft.Build.Evaluation.ProjectCollection
      description: "若要加入至專案集合專案。 不可為 null。"
  overload: Microsoft.Build.Evaluation.Project.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)
  id: '#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)'
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: Project(ProjectRootElement,IDictionary<String,String>,String,ProjectCollection,ProjectLoadSettings)
  nameWithType: Project.Project(ProjectRootElement,IDictionary<String,String>,String,ProjectCollection,ProjectLoadSettings)
  fullName: Microsoft.Build.Evaluation.Project.Project(ProjectRootElement,IDictionary<String,String>,String,ProjectCollection,ProjectLoadSettings)
  type: Constructor
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "建構一個專案，並使用指定的專案根目錄加以評估並使用指定的全域屬性，給定的工具版本，以及指定的載入設定。"
  remarks: "這個專案或指定的專案根目錄會提供給來源專案檔的完整路徑時，專案會加入至指定的專案集合。       在評估失敗時，會擲回 InvalidProjectFileException。 如果已經有相同的專案，則會擲回 InvalidOperationException 載入專案集合中。"
  syntax:
    content: public Project (Microsoft.Build.Construction.ProjectRootElement xml, System.Collections.Generic.IDictionary<string,string> globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings);
    parameters:
    - id: xml
      type: Microsoft.Build.Construction.ProjectRootElement
      description: "要用於評估專案根目錄。"
    - id: globalProperties
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: "要評估的全域屬性。 可能是 null，如此將使用內含專案集合的全域屬性。"
    - id: toolsVersion
      type: System.String
      description: "要評估的工具版本。 可能是 null。"
    - id: projectCollection
      type: Microsoft.Build.Evaluation.ProjectCollection
      description: "若要加入至專案集合專案。 不可為 null。"
    - id: loadSettings
      type: Microsoft.Build.Evaluation.ProjectLoadSettings
      description: "要用於評估的載入設定。"
  overload: Microsoft.Build.Evaluation.Project.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)
  id: '#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)'
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: Project(String,IDictionary<String,String>,String,ProjectCollection,ProjectLoadSettings)
  nameWithType: Project.Project(String,IDictionary<String,String>,String,ProjectCollection,ProjectLoadSettings)
  fullName: Microsoft.Build.Evaluation.Project.Project(String,IDictionary<String,String>,String,ProjectCollection,ProjectLoadSettings)
  type: Constructor
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "建構一個專案，並評估它從指定之來源的專案檔，並使用指定的全域屬性，提供的工具版本，以及指定的載入設定。"
  remarks: "專案會加入至指定的專案集合。       在評估失敗時，會擲回 InvalidProjectFileException。 如果已經有相同的專案，則會擲回 InvalidOperationException 載入專案集合中。 可能會擲回與 IO 相關例外狀況。"
  syntax:
    content: public Project (string projectFile, System.Collections.Generic.IDictionary<string,string> globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings);
    parameters:
    - id: projectFile
      type: System.String
      description: "要評估的來源專案檔案路徑。"
    - id: globalProperties
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: "要評估的全域屬性。 可能是 null，如此將使用內含專案集合的全域屬性。"
    - id: toolsVersion
      type: System.String
      description: "工具版本。 可能是 null。"
    - id: projectCollection
      type: Microsoft.Build.Evaluation.ProjectCollection
      description: "若要加入至專案集合專案。 不可為 null。"
    - id: loadSettings
      type: Microsoft.Build.Evaluation.ProjectLoadSettings
      description: "要用於評估的載入設定。"
  overload: Microsoft.Build.Evaluation.Project.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)
  id: '#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)'
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: Project(XmlReader,IDictionary<String,String>,String,ProjectCollection,ProjectLoadSettings)
  nameWithType: Project.Project(XmlReader,IDictionary<String,String>,String,ProjectCollection,ProjectLoadSettings)
  fullName: Microsoft.Build.Evaluation.Project.Project(XmlReader,IDictionary<String,String>,String,ProjectCollection,ProjectLoadSettings)
  type: Constructor
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "建構一個專案，並評估指定的 XML 讀取器的原始程式碼。 原始程式碼會評估與指定的全域屬性和指定的工具版本。"
  remarks: "這個專案或指定的專案根目錄會提供給來源專案檔的完整路徑時，專案會加入至指定的專案集合。       在評估失敗時，會擲回 InvalidProjectFileException。 如果已經有相同的專案，則會擲回 InvalidOperationException 載入專案集合中。"
  syntax:
    content: public Project (System.Xml.XmlReader xmlReader, System.Collections.Generic.IDictionary<string,string> globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings);
    parameters:
    - id: xmlReader
      type: System.Xml.XmlReader
      description: "要從其中讀取專案原始程式碼的 Xml 讀取器。"
    - id: globalProperties
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: "要評估的全域屬性。 可能是 null，如此將使用內含專案集合的全域屬性。"
    - id: toolsVersion
      type: System.String
      description: "要評估的工具版本。 可能是 null。"
    - id: projectCollection
      type: Microsoft.Build.Evaluation.ProjectCollection
      description: "若要加入至專案集合專案。 不可為 null。"
    - id: loadSettings
      type: Microsoft.Build.Evaluation.ProjectLoadSettings
      description: "要用於評估的載入設定。"
  overload: Microsoft.Build.Evaluation.Project.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)
  id: '#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)'
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: Project(ProjectRootElement,IDictionary<String,String>,String,String,ProjectCollection,ProjectLoadSettings)
  nameWithType: Project.Project(ProjectRootElement,IDictionary<String,String>,String,String,ProjectCollection,ProjectLoadSettings)
  fullName: Microsoft.Build.Evaluation.Project.Project(ProjectRootElement,IDictionary<String,String>,String,String,ProjectCollection,ProjectLoadSettings)
  type: Constructor
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "建構一個專案和評估它使用指定的專案根目錄和指定的全域屬性、 工具和子工具組版本，專案集合，並載入設定。"
  remarks: "這個專案或指定的專案根目錄會提供給來源專案檔的完整路徑時，專案會加入至指定的專案集合。       在評估失敗時，會擲回 InvalidProjectFileException。 如果已經有相同的專案，則會擲回 InvalidOperationException 載入專案集合中。"
  syntax:
    content: public Project (Microsoft.Build.Construction.ProjectRootElement xml, System.Collections.Generic.IDictionary<string,string> globalProperties, string toolsVersion, string subToolsetVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings);
    parameters:
    - id: xml
      type: Microsoft.Build.Construction.ProjectRootElement
      description: "要用於評估專案根目錄。"
    - id: globalProperties
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: "要評估的全域屬性。 可能是 null，如此將使用內含專案集合的全域屬性。"
    - id: toolsVersion
      type: System.String
      description: "要評估的工具版本。 可能是 null。"
    - id: subToolsetVersion
      type: System.String
      description: "若要利用評估子工具組版本。 可能是 null。"
    - id: projectCollection
      type: Microsoft.Build.Evaluation.ProjectCollection
      description: "若要加入至專案集合專案。 不可為 null。"
    - id: loadSettings
      type: Microsoft.Build.Evaluation.ProjectLoadSettings
      description: "要用於評估的載入設定。"
  overload: Microsoft.Build.Evaluation.Project.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)
  id: '#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)'
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: Project(String,IDictionary<String,String>,String,String,ProjectCollection,ProjectLoadSettings)
  nameWithType: Project.Project(String,IDictionary<String,String>,String,String,ProjectCollection,ProjectLoadSettings)
  fullName: Microsoft.Build.Evaluation.Project.Project(String,IDictionary<String,String>,String,String,ProjectCollection,ProjectLoadSettings)
  type: Constructor
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "建構一個專案，並評估它從指定之來源的專案檔，並使用指定的全域屬性、 工具以及子工具組版本、 專案集合和載入設定。"
  remarks: "專案會加入至指定的專案集合。       在評估失敗時，會擲回 InvalidProjectFileException。 如果已經有相同的專案，則會擲回 InvalidOperationException 載入專案集合中。 可能會擲回與 IO 相關例外狀況。"
  syntax:
    content: public Project (string projectFile, System.Collections.Generic.IDictionary<string,string> globalProperties, string toolsVersion, string subToolsetVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings);
    parameters:
    - id: projectFile
      type: System.String
      description: "要評估的來源專案檔案路徑。"
    - id: globalProperties
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: "要評估的全域屬性。 可能是 null，如此將使用內含專案集合的全域屬性。"
    - id: toolsVersion
      type: System.String
      description: "工具版本。 可能是 null。"
    - id: subToolsetVersion
      type: System.String
      description: "子工具組版本。 可能是 null。"
    - id: projectCollection
      type: Microsoft.Build.Evaluation.ProjectCollection
      description: "若要加入至專案集合專案。 不可為 null。"
    - id: loadSettings
      type: Microsoft.Build.Evaluation.ProjectLoadSettings
      description: "要用於評估的載入設定。"
  overload: Microsoft.Build.Evaluation.Project.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)
  id: '#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)'
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: Project(XmlReader,IDictionary<String,String>,String,String,ProjectCollection,ProjectLoadSettings)
  nameWithType: Project.Project(XmlReader,IDictionary<String,String>,String,String,ProjectCollection,ProjectLoadSettings)
  fullName: Microsoft.Build.Evaluation.Project.Project(XmlReader,IDictionary<String,String>,String,String,ProjectCollection,ProjectLoadSettings)
  type: Constructor
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "建構一個專案，並評估指定的 XML 讀取器的原始程式碼。 原始程式碼會加以評估指定的全域屬性、 工具和子工具組版本、 專案集合和載入設定。"
  remarks: "這個專案或指定的專案根目錄會提供給來源專案檔的完整路徑時，專案會加入至指定的專案集合。       在評估失敗時，會擲回 InvalidProjectFileException。 如果已經有相同的專案，則會擲回 InvalidOperationException 載入專案集合中。"
  syntax:
    content: public Project (System.Xml.XmlReader xmlReader, System.Collections.Generic.IDictionary<string,string> globalProperties, string toolsVersion, string subToolsetVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings);
    parameters:
    - id: xmlReader
      type: System.Xml.XmlReader
      description: "讀取專案原始程式碼的 Xml 讀取器。"
    - id: globalProperties
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: "要評估的全域屬性。 可能是 null，如此將使用內含專案集合的全域屬性。"
    - id: toolsVersion
      type: System.String
      description: "要評估的工具版本。 可能是 null。"
    - id: subToolsetVersion
      type: System.String
      description: "若要利用評估子工具組版本。 可能是 null。"
    - id: projectCollection
      type: Microsoft.Build.Evaluation.ProjectCollection
      description: "若要加入至專案集合專案。 不可為 null。"
    - id: loadSettings
      type: Microsoft.Build.Evaluation.ProjectLoadSettings
      description: "要用於評估的載入設定。"
  overload: Microsoft.Build.Evaluation.Project.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.AddItem(System.String,System.String)
  id: AddItem(System.String,System.String)
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: AddItem(String,String)
  nameWithType: Project.AddItem(String,String)
  fullName: Microsoft.Build.Evaluation.Project.AddItem(String,String)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "將沒有中繼資料的項目加入至專案。"
  remarks: "稍後再加入任何中繼資料。 如果已經萬用字元運算式包含新的項目，則不會修改專案程式碼。       評估會在最佳的方式來進行。 新的項目後面的專案程式碼中所定義的項目可用於評估。 此項目進行評估。 不會影響可能依賴其他項目。"
  syntax:
    content: public System.Collections.Generic.IList<Microsoft.Build.Evaluation.ProjectItem> AddItem (string itemType, string unevaluatedInclude);
    parameters:
    - id: itemType
      type: System.String
      description: "加入項目的項目類型。"
    - id: unevaluatedInclude
      type: System.String
      description: "包含要加入之項目的屬性。"
    return:
      type: System.Collections.Generic.IList{Microsoft.Build.Evaluation.ProjectItem}
      description: "傳回新增的項目。"
  overload: Microsoft.Build.Evaluation.Project.AddItem*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.AddItem(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})
  id: AddItem(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: AddItem(String,String,IEnumerable<KeyValuePair<String,String>>)
  nameWithType: Project.AddItem(String,String,IEnumerable<KeyValuePair<String,String>>)
  fullName: Microsoft.Build.Evaluation.Project.AddItem(String,String,IEnumerable<KeyValuePair<String,String>>)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "將給定的中繼資料的項目加入至專案。"
  remarks: "中繼資料可能是 null，表示沒有中繼資料。       評估會在最佳的方式來進行。 新的項目後面的專案程式碼中所定義的項目可用於評估。 此項目進行評估。 不會影響可能依賴其他項目。"
  syntax:
    content: public System.Collections.Generic.IList<Microsoft.Build.Evaluation.ProjectItem> AddItem (string itemType, string unevaluatedInclude, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string,string>> metadata);
    parameters:
    - id: itemType
      type: System.String
      description: "加入項目的項目類型。"
    - id: unevaluatedInclude
      type: System.String
      description: "包含要加入之項目的屬性。"
    - id: metadata
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}}
      description: "新增的項目中繼資料。"
    return:
      type: System.Collections.Generic.IList{Microsoft.Build.Evaluation.ProjectItem}
      description: "傳回新增的項目。"
  overload: Microsoft.Build.Evaluation.Project.AddItem*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.AddItemFast(System.String,System.String)
  id: AddItemFast(System.String,System.String)
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: AddItemFast(String,String)
  nameWithType: Project.AddItemFast(String,String)
  fullName: Microsoft.Build.Evaluation.Project.AddItemFast(String,String)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "將沒有中繼資料的項目加入至專案。  完全不會看到是否現有的萬用字元已找到相符的新項目，除非它是項目群組中的第一個項目。  完全不會找到類似的項目附近的新項目。"
  remarks: "將項目附加至第一個項目群組，並沒有條件，而沒有子系或其第一個子系是相同類型的項目。       在最佳的方式來評估:-展開所有項目。 新的項目之下的 XML 中定義的項目可能會使用，即使在實際評估它們不會。       此項目進行評估。 不會影響可能依賴其他項目。       這可讓您輕鬆了解並不一定會保留本身完全一致的狀態中的專案之前重新評估。"
  syntax:
    content: public System.Collections.Generic.IList<Microsoft.Build.Evaluation.ProjectItem> AddItemFast (string itemType, string unevaluatedInclude);
    parameters:
    - id: itemType
      type: System.String
      description: "要加入的項目類型。"
    - id: unevaluatedInclude
      type: System.String
      description: "法則的 Include 屬性加入至項目。"
    return:
      type: System.Collections.Generic.IList{Microsoft.Build.Evaluation.ProjectItem}
      description: "傳回已加入專案項目的清單。"
  overload: Microsoft.Build.Evaluation.Project.AddItemFast*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.AddItemFast(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})
  id: AddItemFast(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: AddItemFast(String,String,IEnumerable<KeyValuePair<String,String>>)
  nameWithType: Project.AddItemFast(String,String,IEnumerable<KeyValuePair<String,String>>)
  fullName: Microsoft.Build.Evaluation.Project.AddItemFast(String,String,IEnumerable<KeyValuePair<String,String>>)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "將中繼資料的項目加入至專案。 中繼資料可能是 null，表示沒有中繼資料。 完全不會看到是否現有的萬用字元已找到相符的新項目，除非它是項目群組中的第一個項目。 完全不會找到類似的項目附近的新項目。"
  remarks: "將項目附加至第一個項目群組，並沒有條件，而沒有子系或其第一個子系是相同類型的項目。       在最佳的方式來評估:-展開所有項目。 新的項目之下的 XML 中定義的項目可能會使用，即使在實際評估它們不會。       此項目進行評估。 不會影響可能依賴其他項目。       這可讓您輕鬆了解並不一定會保留本身完全一致的狀態中的專案之前重新評估。"
  syntax:
    content: public System.Collections.Generic.IList<Microsoft.Build.Evaluation.ProjectItem> AddItemFast (string itemType, string unevaluatedInclude, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string,string>> metadata);
    parameters:
    - id: itemType
      type: System.String
      description: "要加入的項目類型。"
    - id: unevaluatedInclude
      type: System.String
      description: "法則的 Include 屬性加入至項目。"
    - id: metadata
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}}
      description: "要加入的中繼資料。"
    return:
      type: System.Collections.Generic.IList{Microsoft.Build.Evaluation.ProjectItem}
      description: "傳回已加入專案項目的清單。"
  overload: Microsoft.Build.Evaluation.Project.AddItemFast*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.AllEvaluatedItemDefinitionMetadata
  id: AllEvaluatedItemDefinitionMetadata
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: AllEvaluatedItemDefinitionMetadata
  nameWithType: Project.AllEvaluatedItemDefinitionMetadata
  fullName: Microsoft.Build.Evaluation.Project.AllEvaluatedItemDefinitionMetadata
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "取得評估期間發生的所有項目定義中繼資料。"
  remarks: "在第二次評估傳遞期間讀取項目中繼資料。 不同於 ItemDefinitions 屬性所傳回的中繼資料，此中繼資料經過排序，並包含任何後續覆寫具有相同名稱和項目類型的中繼資料。"
  syntax:
    content: public System.Collections.Generic.ICollection<Microsoft.Build.Evaluation.ProjectMetadata> AllEvaluatedItemDefinitionMetadata { get; }
    return:
      type: System.Collections.Generic.ICollection{Microsoft.Build.Evaluation.ProjectMetadata}
      description: "傳回在評估期間發生的所有項目定義中繼資料。 這不包括任何項目不是條件評估為 true 或自上次評估後，新增任何項目定義中繼資料。"
  overload: Microsoft.Build.Evaluation.Project.AllEvaluatedItemDefinitionMetadata*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.AllEvaluatedItems
  id: AllEvaluatedItems
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: AllEvaluatedItems
  nameWithType: Project.AllEvaluatedItems
  fullName: Microsoft.Build.Evaluation.Project.AllEvaluatedItems
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "取得列舉值對評估期間發生的所有項目。 這些會在第三個評估階段期間讀取。"
  remarks: "不像那些項目屬性所傳回的項目，這些排序相同的項目類型的項目不只被排序的評估期間發生的其他所有項目。       在某些應用程式，這個完整相互順序很重要，與這類主機可以使用這個屬性。       列舉型別不包含任何項目不是條件評估為 true，也不會包含自上次評估後，新增任何項目。"
  syntax:
    content: public System.Collections.Generic.ICollection<Microsoft.Build.Evaluation.ProjectItem> AllEvaluatedItems { get; }
    return:
      type: System.Collections.Generic.ICollection{Microsoft.Build.Evaluation.ProjectItem}
      description: "傳回列舉值在評估期間發生的所有項目。 這些會在第三個評估階段期間讀取。"
  overload: Microsoft.Build.Evaluation.Project.AllEvaluatedItems*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.AllEvaluatedProperties
  id: AllEvaluatedProperties
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: AllEvaluatedProperties
  nameWithType: Project.AllEvaluatedProperties
  fullName: Microsoft.Build.Evaluation.Project.AllEvaluatedProperties
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "取得評估期間發生的所有屬性。"
  remarks: "在第一個評估階段期間會讀取這些屬性。 像內容屬性所傳回的屬性，這些已排序，以及任何後續覆寫具有相同名稱的屬性。"
  syntax:
    content: public System.Collections.Generic.ICollection<Microsoft.Build.Evaluation.ProjectProperty> AllEvaluatedProperties { get; }
    return:
      type: System.Collections.Generic.ICollection{Microsoft.Build.Evaluation.ProjectProperty}
      description: "傳回在評估期間發生的所有屬性。 這不包括任何屬性不是條件評估為 true 或自上次評估後，新增任何屬性。"
  overload: Microsoft.Build.Evaluation.Project.AllEvaluatedProperties*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.Build
  id: Build
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: Build()
  nameWithType: Project.Build()
  fullName: Microsoft.Build.Evaluation.Project.Build()
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "建置此專案中，使用預設目標。"
  remarks: "設定或取得虛擬項目進行建置，明確地複製專案執行個體和建置的。 這個方法不會修改專案物件。"
  syntax:
    content: public bool Build ();
    parameters: []
    return:
      type: System.Boolean
      description: "成功，則傳回 truefalse 否則。"
  overload: Microsoft.Build.Evaluation.Project.Build*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.Build(Microsoft.Build.Framework.ILogger)
  id: Build(Microsoft.Build.Framework.ILogger)
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: Build(ILogger)
  nameWithType: Project.Build(ILogger)
  fullName: Microsoft.Build.Evaluation.Project.Build(ILogger)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "建置此專案中，使用預設目標和指定的記錄器。"
  remarks: "設定或取得虛擬項目進行建置，明確地複製專案執行個體和建置的。 這個方法不會修改專案物件。"
  syntax:
    content: public bool Build (Microsoft.Build.Framework.ILogger logger);
    parameters:
    - id: logger
      type: Microsoft.Build.Framework.ILogger
      description: "要在建置期間使用的記錄器。"
    return:
      type: System.Boolean
      description: "成功，則傳回 truefalse 否則。"
  overload: Microsoft.Build.Evaluation.Project.Build*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.Build(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})
  id: Build(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: Build(IEnumerable<ILogger>)
  nameWithType: Project.Build(IEnumerable<ILogger>)
  fullName: Microsoft.Build.Evaluation.Project.Build(IEnumerable<ILogger>)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "建置此專案中，使用預設目標和指定的記錄器。"
  remarks: "設定或取得虛擬項目進行建置，明確地複製專案執行個體和建置的。 這個方法不會修改專案物件。"
  syntax:
    content: public bool Build (System.Collections.Generic.IEnumerable<Microsoft.Build.Framework.ILogger> loggers);
    parameters:
    - id: loggers
      type: System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger}
      description: "若要在建置期間使用的所有記錄器上的列舉值。"
    return:
      type: System.Boolean
      description: "成功，則傳回 truefalse 否則。"
  overload: Microsoft.Build.Evaluation.Project.Build*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.Build(System.String)
  id: Build(System.String)
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: Build(String)
  nameWithType: Project.Build(String)
  fullName: Microsoft.Build.Evaluation.Project.Build(String)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "建置此專案，建置指定的目標。"
  remarks: "設定或取得虛擬項目進行建置，明確地複製專案執行個體和建置的。 這個方法不會修改專案物件。"
  syntax:
    content: public bool Build (string target);
    parameters:
    - id: target
      type: System.String
      description: "要建置的目標。"
    return:
      type: System.Boolean
      description: "成功，則傳回 truefalse 否則。"
  overload: Microsoft.Build.Evaluation.Project.Build*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.Build(System.String[])
  id: Build(System.String[])
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: Build(String[])
  nameWithType: Project.Build(String[])
  fullName: Microsoft.Build.Evaluation.Project.Build(String[])
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "建置此專案，建置指定的目標。"
  remarks: "設定或取得虛擬項目進行建置，明確地複製專案執行個體和建置的。 這個方法不會修改專案物件。"
  syntax:
    content: public bool Build (string[] targets);
    parameters:
    - id: targets
      type: System.String[]
      description: "要建置的目標陣列。"
    return:
      type: System.Boolean
      description: "成功，則傳回 truefalse 否則。"
  overload: Microsoft.Build.Evaluation.Project.Build*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.Build(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})
  id: Build(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: Build(IEnumerable<ILogger>,IEnumerable<ForwardingLoggerRecord>)
  nameWithType: Project.Build(IEnumerable<ILogger>,IEnumerable<ForwardingLoggerRecord>)
  fullName: Microsoft.Build.Evaluation.Project.Build(IEnumerable<ILogger>,IEnumerable<ForwardingLoggerRecord>)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "建置此專案中，使用預設目標和指定的記錄器，而且遠端記錄器。"
  remarks: "設定或取得虛擬項目進行建置，明確地複製專案執行個體和建置的。 這個方法不會修改專案物件。"
  syntax:
    content: public bool Build (System.Collections.Generic.IEnumerable<Microsoft.Build.Framework.ILogger> loggers, System.Collections.Generic.IEnumerable<Microsoft.Build.Logging.ForwardingLoggerRecord> remoteLoggers);
    parameters:
    - id: loggers
      type: System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger}
      description: "要在建置期間使用的記錄器。"
    - id: remoteLoggers
      type: System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord}
      description: "要在建置期間使用的遠端記錄器。"
    return:
      type: System.Boolean
      description: "成功，則傳回 truefalse 否則。"
  overload: Microsoft.Build.Evaluation.Project.Build*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.Build(System.String,System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})
  id: Build(System.String,System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: Build(String,IEnumerable<ILogger>)
  nameWithType: Project.Build(String,IEnumerable<ILogger>)
  fullName: Microsoft.Build.Evaluation.Project.Build(String,IEnumerable<ILogger>)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "建置此專案，建置指定的目標，並使用指定的記錄器。"
  remarks: "設定或取得虛擬項目進行建置，明確地複製專案執行個體和建置的。 這個方法不會修改專案物件。"
  syntax:
    content: public bool Build (string target, System.Collections.Generic.IEnumerable<Microsoft.Build.Framework.ILogger> loggers);
    parameters:
    - id: target
      type: System.String
      description: "要建置的目標。"
    - id: loggers
      type: System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger}
      description: "要在建置期間使用的記錄器。"
    return:
      type: System.Boolean
      description: "成功，則傳回 truefalse 否則。"
  overload: Microsoft.Build.Evaluation.Project.Build*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})
  id: Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: Build(String[],IEnumerable<ILogger>)
  nameWithType: Project.Build(String[],IEnumerable<ILogger>)
  fullName: Microsoft.Build.Evaluation.Project.Build(String[],IEnumerable<ILogger>)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "建置此專案，建置指定的目標，並使用指定的記錄器。"
  remarks: "設定或取得虛擬項目進行建置，明確地複製專案執行個體和建置的。 這個方法不會修改專案物件。"
  syntax:
    content: public bool Build (string[] targets, System.Collections.Generic.IEnumerable<Microsoft.Build.Framework.ILogger> loggers);
    parameters:
    - id: targets
      type: System.String[]
      description: "要建置的目標。"
    - id: loggers
      type: System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger}
      description: "要在建置期間使用的記錄器。"
    return:
      type: System.Boolean
      description: "成功，則傳回 truefalse 否則。"
  overload: Microsoft.Build.Evaluation.Project.Build*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.Build(System.String,System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})
  id: Build(System.String,System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: Build(String,IEnumerable<ILogger>,IEnumerable<ForwardingLoggerRecord>)
  nameWithType: Project.Build(String,IEnumerable<ILogger>,IEnumerable<ForwardingLoggerRecord>)
  fullName: Microsoft.Build.Evaluation.Project.Build(String,IEnumerable<ILogger>,IEnumerable<ForwardingLoggerRecord>)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "建置此專案，建置指定的目標，並使用指定的記錄器和遠端記錄器。"
  remarks: "設定或取得虛擬項目進行建置，明確地複製專案執行個體和建置的。 這個方法不會修改專案物件。"
  syntax:
    content: public bool Build (string target, System.Collections.Generic.IEnumerable<Microsoft.Build.Framework.ILogger> loggers, System.Collections.Generic.IEnumerable<Microsoft.Build.Logging.ForwardingLoggerRecord> remoteLoggers);
    parameters:
    - id: target
      type: System.String
      description: "要建置的目標。"
    - id: loggers
      type: System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger}
      description: "要在建置期間使用的記錄器。"
    - id: remoteLoggers
      type: System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord}
      description: "要在建置期間使用的遠端記錄器。"
    return:
      type: System.Boolean
      description: "成功，則傳回 truefalse 否則。"
  overload: Microsoft.Build.Evaluation.Project.Build*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})
  id: Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: Build(String[],IEnumerable<ILogger>,IEnumerable<ForwardingLoggerRecord>)
  nameWithType: Project.Build(String[],IEnumerable<ILogger>,IEnumerable<ForwardingLoggerRecord>)
  fullName: Microsoft.Build.Evaluation.Project.Build(String[],IEnumerable<ILogger>,IEnumerable<ForwardingLoggerRecord>)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "建置此專案，建置指定的目標，並使用指定的記錄器和遠端記錄器。"
  remarks: "設定或取得虛擬項目進行建置，明確地複製專案執行個體和建置的。 這個方法不會修改專案物件。"
  syntax:
    content: public bool Build (string[] targets, System.Collections.Generic.IEnumerable<Microsoft.Build.Framework.ILogger> loggers, System.Collections.Generic.IEnumerable<Microsoft.Build.Logging.ForwardingLoggerRecord> remoteLoggers);
    parameters:
    - id: targets
      type: System.String[]
      description: "要建置的目標。"
    - id: loggers
      type: System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger}
      description: "要在建置期間使用的記錄器。"
    - id: remoteLoggers
      type: System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord}
      description: "要在建置期間使用的遠端記錄器。"
    return:
      type: System.Boolean
      description: "成功，則傳回 truefalse 否則。"
  overload: Microsoft.Build.Evaluation.Project.Build*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.ConditionedProperties
  id: ConditionedProperties
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: ConditionedProperties
  nameWithType: Project.ConditionedProperties
  fullName: Microsoft.Build.Evaluation.Project.ConditionedProperties
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "取得用來評估條件屬性、 屬性群組、 匯入、 上找到的屬性可能的屬性值的集合和時機的。"
  remarks: 'For example, if the following conditions existed on properties in a project: Condition="''$(Configuration)&#124;$(Platform)'' == ''Debug&#124;x86''" Condition="''$(Configuration)'' == ''Release''" the table would be populated with { "Configuration", { "Debug", "Release" }} { "Platform", { "x86" }} This collection is used by Visual Studio to determine the configurations defined in the project'
  syntax:
    content: public System.Collections.Generic.IDictionary<string,System.Collections.Generic.List<string>> ConditionedProperties { get; }
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.Collections.Generic.List{System.String}}
      description: "傳回用來評估屬性、 屬性群組、 匯入、 上找到的條件屬性的可能的屬性值的集合和時機的。 這個集合是標準格式。 項目的名稱是要評估屬性的名稱，值為可能的屬性值的清單。"
  overload: Microsoft.Build.Evaluation.Project.ConditionedProperties*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.CreateProjectInstance
  id: CreateProjectInstance
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: CreateProjectInstance()
  nameWithType: Project.CreateProjectInstance()
  fullName: Microsoft.Build.Evaluation.Project.CreateProjectInstance()
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "建立此專案中，為基礎，但完全中斷專案執行個體。"
  remarks: "可以用於獨立建置。 如果有必要，並讓原始專案會標示為未經修改之前建立的執行個體，評估原始專案。"
  syntax:
    content: public Microsoft.Build.Execution.ProjectInstance CreateProjectInstance ();
    parameters: []
    return:
      type: Microsoft.Build.Execution.ProjectInstance
      description: "傳回專案的執行個體。"
  overload: Microsoft.Build.Evaluation.Project.CreateProjectInstance*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.CreateProjectInstance(Microsoft.Build.Execution.ProjectInstanceSettings)
  id: CreateProjectInstance(Microsoft.Build.Execution.ProjectInstanceSettings)
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: CreateProjectInstance(ProjectInstanceSettings)
  nameWithType: Project.CreateProjectInstance(ProjectInstanceSettings)
  fullName: Microsoft.Build.Evaluation.Project.CreateProjectInstance(ProjectInstanceSettings)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "建立此專案中，為基礎，但完全中斷專案執行個體。"
  remarks: "可以用於獨立建置。 如果有必要，並讓原始專案會標示為未經修改之前建立的執行個體，評估原始專案。"
  syntax:
    content: public Microsoft.Build.Execution.ProjectInstance CreateProjectInstance (Microsoft.Build.Execution.ProjectInstanceSettings settings);
    parameters:
    - id: settings
      type: Microsoft.Build.Execution.ProjectInstanceSettings
      description: "決定是否建立的專案執行個體是不變，以及它是否包含查閱資料表，以改善效能。"
    return:
      type: Microsoft.Build.Execution.ProjectInstance
      description: "傳回專案的執行個體。"
  overload: Microsoft.Build.Evaluation.Project.CreateProjectInstance*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.DirectoryPath
  id: DirectoryPath
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: DirectoryPath
  nameWithType: Project.DirectoryPath
  fullName: Microsoft.Build.Evaluation.Project.DirectoryPath
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "取得這個專案的根目錄。"
  syntax:
    content: public string DirectoryPath { get; }
    return:
      type: System.String
      description: "傳回此專案的根目錄。 根目錄絕不會是 null。記憶體中的專案在專案載入時使用目前的目錄。"
  overload: Microsoft.Build.Evaluation.Project.DirectoryPath*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.DisableMarkDirty
  id: DisableMarkDirty
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: DisableMarkDirty
  nameWithType: Project.DisableMarkDirty
  fullName: Microsoft.Build.Evaluation.Project.DisableMarkDirty
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "取得或設定旗標決定是否<xref:Microsoft.Build.Evaluation.Project.MarkDirty*>暫時停用。</xref:Microsoft.Build.Evaluation.Project.MarkDirty*> 如此，比方說，沒有未標記為中途的重新評估結果的專案設定全域屬性。"
  syntax:
    content: public bool DisableMarkDirty { get; set; }
    return:
      type: System.Boolean
      description: "傳回旗標決定是否<xref uid=&quot;langword_csharp_MarkDirty&quot; name=&quot;MarkDirty&quot; href=&quot;&quot;></xref>暫時停用。"
  overload: Microsoft.Build.Evaluation.Project.DisableMarkDirty*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.EvaluationCounter
  id: EvaluationCounter
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: EvaluationCounter
  nameWithType: Project.EvaluationCounter
  fullName: Microsoft.Build.Evaluation.Project.EvaluationCounter
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "取得值，就會遞增每次該專案會重新評估。"
  remarks: "這個值應該與先前的值，以查看是否已重新評估專案。 它不應該用來判斷多少時間後可能會遞增超過一個指定的重新評估專案已經過重新進行評估。"
  syntax:
    content: public int EvaluationCounter { get; }
    return:
      type: System.Int32
      description: "傳回遞增的值。"
  overload: Microsoft.Build.Evaluation.Project.EvaluationCounter*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.ExpandString(System.String)
  id: ExpandString(System.String)
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: ExpandString(String)
  nameWithType: Project.ExpandString(String)
  fullName: Microsoft.Build.Evaluation.Project.ExpandString(String)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "展開項目和屬性，會評估指定的字串。 如果因為它找不到專案檔的結尾處，就會評估字串。"
  remarks: "足夠最佳評估時，則可以使用這個方法。"
  syntax:
    content: public string ExpandString (string unexpandedValue);
    parameters:
    - id: unexpandedValue
      type: System.String
      description: "要評估的字串。"
    return:
      type: System.String
      description: "傳回評估的字串。"
  overload: Microsoft.Build.Evaluation.Project.ExpandString*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.FullPath
  id: FullPath
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: FullPath
  nameWithType: Project.FullPath
  fullName: Microsoft.Build.Evaluation.Project.FullPath
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "取得或設定專案原始程式檔的完整路徑。"
  remarks: "將這個屬性設定為專案集合中的專案上重新命名專案。"
  syntax:
    content: public string FullPath { get; set; }
    return:
      type: System.String
      description: "傳回專案的原始程式檔的完整路徑。 如果專案不從磁碟載入，則傳回空字串。"
  overload: Microsoft.Build.Evaluation.Project.FullPath*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.GetEvaluatedItemIncludeEscaped(Microsoft.Build.Evaluation.ProjectItem)
  id: GetEvaluatedItemIncludeEscaped(Microsoft.Build.Evaluation.ProjectItem)
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: GetEvaluatedItemIncludeEscaped(ProjectItem)
  nameWithType: Project.GetEvaluatedItemIncludeEscaped(ProjectItem)
  fullName: Microsoft.Build.Evaluation.Project.GetEvaluatedItemIncludeEscaped(ProjectItem)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "取得評估，逸出的提供項目包含屬性的值。"
  syntax:
    content: public static string GetEvaluatedItemIncludeEscaped (Microsoft.Build.Evaluation.ProjectItem item);
    parameters:
    - id: item
      type: Microsoft.Build.Evaluation.ProjectItem
      description: "要評估逸出的項目。"
    return:
      type: System.String
      description: "傳回評估逸出的提供項目包含屬性的值。"
  overload: Microsoft.Build.Evaluation.Project.GetEvaluatedItemIncludeEscaped*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.GetEvaluatedItemIncludeEscaped(Microsoft.Build.Evaluation.ProjectItemDefinition)
  id: GetEvaluatedItemIncludeEscaped(Microsoft.Build.Evaluation.ProjectItemDefinition)
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: GetEvaluatedItemIncludeEscaped(ProjectItemDefinition)
  nameWithType: Project.GetEvaluatedItemIncludeEscaped(ProjectItemDefinition)
  fullName: Microsoft.Build.Evaluation.Project.GetEvaluatedItemIncludeEscaped(ProjectItemDefinition)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "取得提供項目定義的包含屬性的評估、 逸出值。"
  syntax:
    content: public static string GetEvaluatedItemIncludeEscaped (Microsoft.Build.Evaluation.ProjectItemDefinition item);
    parameters:
    - id: item
      type: Microsoft.Build.Evaluation.ProjectItemDefinition
      description: "要進行評估並逸出的項目定義。"
    return:
      type: System.String
      description: "傳回包含屬性的值。"
  overload: Microsoft.Build.Evaluation.Project.GetEvaluatedItemIncludeEscaped*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.GetItems(System.String)
  id: GetItems(System.String)
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: GetItems(String)
  nameWithType: Project.GetItems(String)
  fullName: Microsoft.Build.Evaluation.Project.GetItems(String)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "取得所有項目中指定的項目類型的專案。 如果沒有，則傳回空的清單。 使用 AddItem 或 RemoveItem 來修改此專案中的項目。"
  remarks: "使用 AddItem 或 RemoveItem 來修改此專案中的項目。"
  syntax:
    content: public System.Collections.Generic.ICollection<Microsoft.Build.Evaluation.ProjectItem> GetItems (string itemType);
    parameters:
    - id: itemType
      type: System.String
      description: "要擷取的項目類型。"
    return:
      type: System.Collections.Generic.ICollection{Microsoft.Build.Evaluation.ProjectItem}
      description: "傳回所有項目中指定的項目類型的專案。 如果沒有具有指定的項目名稱的項目會傳回空的清單。"
  overload: Microsoft.Build.Evaluation.Project.GetItems*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.GetItemsByEvaluatedInclude(System.String)
  id: GetItemsByEvaluatedInclude(System.String)
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: GetItemsByEvaluatedInclude(String)
  nameWithType: Project.GetItemsByEvaluatedInclude(String)
  fullName: Microsoft.Build.Evaluation.Project.GetItemsByEvaluatedInclude(String)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "取得具有指定的評估的包含屬性的所有項目。"
  remarks: "例如，這個方法可能會傳回評估的 Include 屬性&quot;component.cpp&quot;的所有項目。 通常會傳回零個或一個項目。 不過，可能有多個項目具有相同的路徑和不同的項目類型，或甚至使用相同的項目類型。"
  syntax:
    content: public System.Collections.Generic.ICollection<Microsoft.Build.Evaluation.ProjectItem> GetItemsByEvaluatedInclude (string evaluatedInclude);
    parameters:
    - id: evaluatedInclude
      type: System.String
      description: "評估的包含屬性。"
    return:
      type: System.Collections.Generic.ICollection{Microsoft.Build.Evaluation.ProjectItem}
      description: "傳回具有指定的評估的包含屬性的所有項目。"
  overload: Microsoft.Build.Evaluation.Project.GetItemsByEvaluatedInclude*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.GetItemsIgnoringCondition(System.String)
  id: GetItemsIgnoringCondition(System.String)
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: GetItemsIgnoringCondition(String)
  nameWithType: Project.GetItemsIgnoringCondition(String)
  fullName: Microsoft.Build.Evaluation.Project.GetItemsIgnoringCondition(String)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: '取得指定類型之專案中的所有項目，其條件屬性評估為 true。 這是唯讀的清單︰ 使用 AddItem 或 RemoveItem 來修改此專案中的項目。'
  remarks: "這是唯讀的清單。 使用 AddItem 或 RemoveItem 來修改此專案中的項目。"
  syntax:
    content: public System.Collections.Generic.ICollection<Microsoft.Build.Evaluation.ProjectItem> GetItemsIgnoringCondition (string itemType);
    parameters:
    - id: itemType
      type: System.String
      description: "要擷取的項目類型。"
    return:
      type: System.Collections.Generic.ICollection{Microsoft.Build.Evaluation.ProjectItem}
      description: "傳回指定類型之專案中的所有項目，其條件屬性評估為 true。"
  overload: Microsoft.Build.Evaluation.Project.GetItemsIgnoringCondition*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.GetLogicalProject
  id: GetLogicalProject
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: GetLogicalProject()
  nameWithType: Project.GetLogicalProject()
  fullName: Microsoft.Build.Evaluation.Project.GetLogicalProject()
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "取得所有項目中的 「 邏輯專案 」 列舉值。 專案邏輯定義為從單一 MSBuild 檔的結果取得未評估專案內嵌原始的 MSBuild 專案資訊清單檔案的所有匯入的文字。"
  remarks: "邏輯專案的定義是從單一 MSBuild 檔包含內嵌的結果取得未評估的專案的原始的 MSBuild 專案資訊清單檔案的所有匯入文字。"
  syntax:
    content: public System.Collections.Generic.IEnumerable<Microsoft.Build.Construction.ProjectElement> GetLogicalProject ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.Build.Construction.ProjectElement}
      description: "「 邏輯專案 」 中的所有項目傳回的列舉值。"
  overload: Microsoft.Build.Evaluation.Project.GetLogicalProject*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped(Microsoft.Build.Evaluation.ProjectMetadata)
  id: GetMetadataValueEscaped(Microsoft.Build.Evaluation.ProjectMetadata)
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: GetMetadataValueEscaped(ProjectMetadata)
  nameWithType: Project.GetMetadataValueEscaped(ProjectMetadata)
  fullName: Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped(ProjectMetadata)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "取得提供 metadatum 逸出的值。"
  syntax:
    content: public static string GetMetadataValueEscaped (Microsoft.Build.Evaluation.ProjectMetadata metadatum);
    parameters:
    - id: metadatum
      type: Microsoft.Build.Evaluation.ProjectMetadata
      description: "逸出 metadatum。"
    return:
      type: System.String
      description: "取得提供 metadatum 逸出的值。"
  overload: Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped(Microsoft.Build.Evaluation.ProjectItem,System.String)
  id: GetMetadataValueEscaped(Microsoft.Build.Evaluation.ProjectItem,System.String)
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: GetMetadataValueEscaped(ProjectItem,String)
  nameWithType: Project.GetMetadataValueEscaped(ProjectItem,String)
  fullName: Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped(ProjectItem,String)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "提供項目上取得具有指定名稱 metadatum 逸出的值。"
  syntax:
    content: public static string GetMetadataValueEscaped (Microsoft.Build.Evaluation.ProjectItem item, string name);
    parameters:
    - id: item
      type: Microsoft.Build.Evaluation.ProjectItem
      description: "中繼資料是逸出的項目。"
    - id: name
      type: System.String
      description: "要逸出的中繼資料名稱。"
    return:
      type: System.String
      description: "提供項目上取得具有指定名稱 metadatum 逸出的值。"
  overload: Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped(Microsoft.Build.Evaluation.ProjectItemDefinition,System.String)
  id: GetMetadataValueEscaped(Microsoft.Build.Evaluation.ProjectItemDefinition,System.String)
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: GetMetadataValueEscaped(ProjectItemDefinition,String)
  nameWithType: Project.GetMetadataValueEscaped(ProjectItemDefinition,String)
  fullName: Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped(ProjectItemDefinition,String)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "提供項目定義上取得具有指定名稱 metadatum 逸出的值。"
  syntax:
    content: public static string GetMetadataValueEscaped (Microsoft.Build.Evaluation.ProjectItemDefinition item, string name);
    parameters:
    - id: item
      type: Microsoft.Build.Evaluation.ProjectItemDefinition
      description: "項目定義的中繼資料會逸出。"
    - id: name
      type: System.String
      description: "要逸出的中繼資料名稱。"
    return:
      type: System.String
      description: "提供項目定義上傳回具有指定名稱 metadatum 逸出的值。"
  overload: Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.GetProperty(System.String)
  id: GetProperty(System.String)
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: GetProperty(String)
  nameWithType: Project.GetProperty(String)
  fullName: Microsoft.Build.Evaluation.Project.GetProperty(String)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "取得具有指定的名稱的專案中的任何屬性。"
  syntax:
    content: public Microsoft.Build.Evaluation.ProjectProperty GetProperty (string name);
    parameters:
    - id: name
      type: System.String
      description: "要擷取之屬性的名稱。"
    return:
      type: Microsoft.Build.Evaluation.ProjectProperty
      description: "傳回具有指定的名稱的專案中的任何屬性。 傳回 null，如果該名稱的屬性不存在。"
  overload: Microsoft.Build.Evaluation.Project.GetProperty*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.GetPropertyValue(System.String)
  id: GetPropertyValue(System.String)
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: GetPropertyValue(String)
  nameWithType: Project.GetPropertyValue(String)
  fullName: Microsoft.Build.Evaluation.Project.GetPropertyValue(String)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "此專案中取得指定之屬性的值。"
  remarks: "屬性值為空字串和任何屬性都不會區分之間由這個方法。 若要判斷屬性是否完全設定專案中，使用 GetProperty(name)。"
  syntax:
    content: public string GetPropertyValue (string name);
    parameters:
    - id: name
      type: System.String
      description: "已擷取其值之屬性的名稱。"
    return:
      type: System.String
      description: "傳回指定之屬性的值，此專案中。 如果該名稱的屬性不存在，則傳回空字串。 逸出序列會轉換之前傳回字串。"
  overload: Microsoft.Build.Evaluation.Project.GetPropertyValue*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.GetPropertyValueEscaped(Microsoft.Build.Evaluation.ProjectProperty)
  id: GetPropertyValueEscaped(Microsoft.Build.Evaluation.ProjectProperty)
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: GetPropertyValueEscaped(ProjectProperty)
  nameWithType: Project.GetPropertyValueEscaped(ProjectProperty)
  fullName: Microsoft.Build.Evaluation.Project.GetPropertyValueEscaped(ProjectProperty)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "取得逸出的值所提供的屬性。"
  syntax:
    content: public static string GetPropertyValueEscaped (Microsoft.Build.Evaluation.ProjectProperty property);
    parameters:
    - id: property
      type: Microsoft.Build.Evaluation.ProjectProperty
      description: "要逸出的屬性。"
    return:
      type: System.String
      description: "傳回所提供的屬性的逸出的值。"
  overload: Microsoft.Build.Evaluation.Project.GetPropertyValueEscaped*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.GlobalProperties
  id: GlobalProperties
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: GlobalProperties
  nameWithType: Project.GlobalProperties
  fullName: Microsoft.Build.Evaluation.Project.GlobalProperties
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "取得這個專案的評估所使用的全域屬性的字典。"
  remarks: "This is the publicly exposed getter, that translates into a read-only dead IDictionary\\<string, string>.  \n  \n In order to easily tell when we're dirtied, setting and removing global properties is done with <xref:Microsoft.Build.Evaluation.Project.SetGlobalProperty%2A> and <xref:Microsoft.Build.Evaluation.Project.RemoveGlobalProperty%2A>."
  syntax:
    content: public System.Collections.Generic.IDictionary<string,string> GlobalProperties { get; }
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: "傳回此專案的評估所使用的全域屬性的字典。"
  overload: Microsoft.Build.Evaluation.Project.GlobalProperties*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.Imports
  id: Imports
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: Imports
  nameWithType: Project.Imports
  fullName: Microsoft.Build.Evaluation.Project.Imports
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "取得評估此專案的貢獻的所有檔案的清單。"
  remarks: "不包含此專案的專案根目錄。"
  syntax:
    content: public System.Collections.Generic.IList<Microsoft.Build.Evaluation.ResolvedImport> Imports { get; }
    return:
      type: System.Collections.Generic.IList{Microsoft.Build.Evaluation.ResolvedImport}
      description: "這個專案的評估傳回貢獻的所有檔案的清單。       每個項目的名稱會是造成要匯入檔案匯入項目。 每個項目的值是專案的專案的根匯入。 匯入其條件評估為 false 的屬性不包含的項目。"
  overload: Microsoft.Build.Evaluation.Project.Imports*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.ImportsIncludingDuplicates
  id: ImportsIncludingDuplicates
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: ImportsIncludingDuplicates
  nameWithType: Project.ImportsIncludingDuplicates
  fullName: Microsoft.Build.Evaluation.Project.ImportsIncludingDuplicates
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "如果匯入已匯入多次，請取得重複的匯入的清單。 不過，第一次匯入已在評估中使用。"
  syntax:
    content: public System.Collections.Generic.IList<Microsoft.Build.Evaluation.ResolvedImport> ImportsIncludingDuplicates { get; }
    return:
      type: System.Collections.Generic.IList{Microsoft.Build.Evaluation.ResolvedImport}
      description: "傳回重複的匯入的清單。"
  overload: Microsoft.Build.Evaluation.Project.ImportsIncludingDuplicates*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.IsBuildEnabled
  id: IsBuildEnabled
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: IsBuildEnabled
  nameWithType: Project.IsBuildEnabled
  fullName: Microsoft.Build.Evaluation.Project.IsBuildEnabled
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "取得或設定此屬性，選取是否可以建置的目標和這個專案的工作。"
  remarks: "可基於安全性考量。 根據預設，新的專案具有相同 IsBuildEnabled 設定為父專案集合，其中包含它。 IsBuildEnabled false 時，此專案的建置方法將會失敗。"
  syntax:
    content: public bool IsBuildEnabled { get; set; }
    return:
      type: System.Boolean
      description: "如果可以建置的目標和這個專案的工作，則傳回 truefalse 否則。"
  overload: Microsoft.Build.Evaluation.Project.IsBuildEnabled*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.IsDirty
  id: IsDirty
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: IsDirty
  nameWithType: Project.IsDirty
  fullName: Microsoft.Build.Evaluation.Project.IsDirty
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "取得此屬性，指出此專案是否已修改過，必須重新評估。"
  remarks: "專案會修改，而且必須重新評估基礎專案原始程式碼，包括變更匯入檔案時。 專案也已修改必須重新評估，如果專案工具組變更。"
  syntax:
    content: public bool IsDirty { get; }
    return:
      type: System.Boolean
      description: "傳回此屬性，指出此專案是否已修改過，必須重新評估。"
  overload: Microsoft.Build.Evaluation.Project.IsDirty*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.ItemDefinitions
  id: ItemDefinitions
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: ItemDefinitions
  nameWithType: Project.ItemDefinitions
  fullName: Microsoft.Build.Evaluation.Project.ItemDefinitions
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "取得此專案中，為索引鍵的項目類型中的項目定義的字典。"
  syntax:
    content: public System.Collections.Generic.IDictionary<string,Microsoft.Build.Evaluation.ProjectItemDefinition> ItemDefinitions { get; }
    return:
      type: System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Evaluation.ProjectItemDefinition}
      description: "在此專案中，做為索引鍵項目類型所傳回項目定義的字典。"
  overload: Microsoft.Build.Evaluation.Project.ItemDefinitions*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.Items
  id: Items
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: Items
  nameWithType: Project.Items
  fullName: Microsoft.Build.Evaluation.Project.Items
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "在此專案中，排序項目型別群組內，對所有的項目取得列舉值。"
  syntax:
    content: public System.Collections.Generic.ICollection<Microsoft.Build.Evaluation.ProjectItem> Items { get; }
    return:
      type: System.Collections.Generic.ICollection{Microsoft.Build.Evaluation.ProjectItem}
      description: "在此專案中，排序項目型別群組內的所有項目傳回列舉值。"
  overload: Microsoft.Build.Evaluation.Project.Items*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.ItemsIgnoringCondition
  id: ItemsIgnoringCondition
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: ItemsIgnoringCondition
  nameWithType: Project.ItemsIgnoringCondition
  fullName: Microsoft.Build.Evaluation.Project.ItemsIgnoringCondition
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "在此專案中，排序項目型別群組內，對所有的項目取得列舉值。"
  remarks: "可用來顯示所有項目，即使它們不是目前的組態中組建的一部分。"
  syntax:
    content: public System.Collections.Generic.ICollection<Microsoft.Build.Evaluation.ProjectItem> ItemsIgnoringCondition { get; }
    return:
      type: System.Collections.Generic.ICollection{Microsoft.Build.Evaluation.ProjectItem}
      description: "傳回此專案中，已排序的項目類型，包括其條件評估為 false，或其條件評估為 false 的項目群組內所包含的項目群組內的所有項目列舉值。"
  overload: Microsoft.Build.Evaluation.Project.ItemsIgnoringCondition*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.ItemTypes
  id: ItemTypes
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: ItemTypes
  nameWithType: Project.ItemTypes
  fullName: Microsoft.Build.Evaluation.Project.ItemTypes
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "取得所有項目類型的列舉值，此專案中。"
  syntax:
    content: public System.Collections.Generic.ICollection<string> ItemTypes { get; }
    return:
      type: System.Collections.Generic.ICollection{System.String}
      description: "傳回此專案中的所有項目類型的列舉值。 這是已排序的集合。"
  overload: Microsoft.Build.Evaluation.Project.ItemTypes*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.MarkDirty
  id: MarkDirty
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: MarkDirty()
  nameWithType: Project.MarkDirty()
  fullName: Microsoft.Build.Evaluation.Project.MarkDirty()
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "標示為已修改的專案。"
  remarks: "很少需要明確地呼叫這個方法，因為所有的編輯會影響專案時，自動將它標示為已修改。       有時候，不過，這個方法必須呼叫。 例如，專案可能有其條件取決於存在磁碟的檔案匯入項目。 如果該檔案不存在於評估時間，建立評估後再專案必須明確標示為已修改。       <xref:Microsoft.Build.Evaluation.Project.ReevaluateIfNecessary%2A>方法會使用這個屬性來判斷是否需要評估。</xref:Microsoft.Build.Evaluation.Project.ReevaluateIfNecessary%2A>"
  syntax:
    content: public void MarkDirty ();
    parameters: []
  overload: Microsoft.Build.Evaluation.Project.MarkDirty*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.ProjectCollection
  id: ProjectCollection
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: ProjectCollection
  nameWithType: Project.ProjectCollection
  fullName: Microsoft.Build.Evaluation.Project.ProjectCollection
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "取得包含此專案的專案集合。"
  syntax:
    content: public Microsoft.Build.Evaluation.ProjectCollection ProjectCollection { get; }
    return:
      type: Microsoft.Build.Evaluation.ProjectCollection
      description: "傳回專案集合，其中包含此專案，絕不會是 null。"
  overload: Microsoft.Build.Evaluation.Project.ProjectCollection*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.ProjectFileLocation
  id: ProjectFileLocation
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: ProjectFileLocation
  nameWithType: Project.ProjectFileLocation
  fullName: Microsoft.Build.Evaluation.Project.ProjectFileLocation
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "起始位置的檔案本身，其中不含任何特定內容。 如果檔案尚未被授與的名稱，這會是空的位置。 這是合法的情況下的任何位置。"
  syntax:
    content: public Microsoft.Build.Construction.ElementLocation ProjectFileLocation { get; }
    return:
      type: Microsoft.Build.Construction.ElementLocation
      description: "傳回原始的檔案位置或空的位置。"
  overload: Microsoft.Build.Evaluation.Project.ProjectFileLocation*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.Properties
  id: Properties
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: Properties
  nameWithType: Project.Properties
  fullName: Microsoft.Build.Evaluation.Project.Properties
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "取得透過所有屬性的列舉值，此專案中。 這是未排序的集合。"
  syntax:
    content: public System.Collections.Generic.ICollection<Microsoft.Build.Evaluation.ProjectProperty> Properties { get; }
    return:
      type: System.Collections.Generic.ICollection{Microsoft.Build.Evaluation.ProjectProperty}
      description: "傳回此專案中的所有屬性列舉值。 由於屬性的評估顯示，這會是未排序的集合。"
  overload: Microsoft.Build.Evaluation.Project.Properties*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.ReevaluateIfNecessary
  id: ReevaluateIfNecessary
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: ReevaluateIfNecessary()
  nameWithType: Project.ReevaluateIfNecessary()
  fullName: Microsoft.Build.Evaluation.Project.ReevaluateIfNecessary()
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "會重新評估專案以加入的任何變更。"
  remarks: "只有當它標示為已修改，則會重新評估專案。 重新評估會併入專案原始程式碼所做的變更。       在評估失敗時，會擲回 InvalidProjectFileException。"
  syntax:
    content: public void ReevaluateIfNecessary ();
    parameters: []
  overload: Microsoft.Build.Evaluation.Project.ReevaluateIfNecessary*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.RemoveGlobalProperty(System.String)
  id: RemoveGlobalProperty(System.String)
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: RemoveGlobalProperty(String)
  nameWithType: Project.RemoveGlobalProperty(String)
  fullName: Microsoft.Build.Evaluation.Project.RemoveGlobalProperty(String)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "移除全域屬性，並標示為已修改的專案。"
  syntax:
    content: public bool RemoveGlobalProperty (string name);
    parameters:
    - id: name
      type: System.String
      description: "要移除之全域屬性的名稱。"
    return:
      type: System.Boolean
      description: "如果已經設定全域屬性的值，則傳回 true。"
  overload: Microsoft.Build.Evaluation.Project.RemoveGlobalProperty*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.RemoveItem(Microsoft.Build.Evaluation.ProjectItem)
  id: RemoveItem(Microsoft.Build.Evaluation.ProjectItem)
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: RemoveItem(ProjectItem)
  nameWithType: Project.RemoveItem(ProjectItem)
  fullName: Microsoft.Build.Evaluation.Project.RemoveItem(ProjectItem)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "從專案移除項目。 要移除的項目必須出現在專案中，而且必須不是來自匯入的檔案。"
  remarks: "如果項目群組中包含的項目變空時，它也會移除。       如果項目來自萬用字元或以分號分隔的運算式，運算式會先展開成多個項目。       更新專案時，但沒有進一步評估發生之前重新評估。 比方說，如果項目就會移除類型&quot;i&quot;，&quot;j&quot;評估從&quot;@(i) 」 不會修改之前重新評估。"
  syntax:
    content: public bool RemoveItem (Microsoft.Build.Evaluation.ProjectItem item);
    parameters:
    - id: item
      type: Microsoft.Build.Evaluation.ProjectItem
      description: "要移除的項目。"
    return:
      type: System.Boolean
      description: "項目是否存在於此評估的專案，則傳回 true否則為 false。 通常這個方法會傳回 true，因為如果要求的項目不存在，方法會擲回例外狀況。 如果只在 ItemsIgnoringCondition 集合中存在的項目，不過，方法會傳回 false。"
  overload: Microsoft.Build.Evaluation.Project.RemoveItem*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.RemoveItems(System.Collections.Generic.IEnumerable{Microsoft.Build.Evaluation.ProjectItem})
  id: RemoveItems(System.Collections.Generic.IEnumerable{Microsoft.Build.Evaluation.ProjectItem})
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: RemoveItems(IEnumerable<ProjectItem>)
  nameWithType: Project.RemoveItems(IEnumerable<ProjectItem>)
  fullName: Microsoft.Build.Evaluation.Project.RemoveItems(IEnumerable<ProjectItem>)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "從專案中，移除指定的項目，除非它們是來自匯入的專案。"
  remarks: "如果項目來自匯入的專案時，會直接略過。"
  syntax:
    content: public void RemoveItems (System.Collections.Generic.IEnumerable<Microsoft.Build.Evaluation.ProjectItem> items);
    parameters:
    - id: items
      type: System.Collections.Generic.IEnumerable{Microsoft.Build.Evaluation.ProjectItem}
      description: "要移除的項目。"
  overload: Microsoft.Build.Evaluation.Project.RemoveItems*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.RemoveProperty(Microsoft.Build.Evaluation.ProjectProperty)
  id: RemoveProperty(Microsoft.Build.Evaluation.ProjectProperty)
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: RemoveProperty(ProjectProperty)
  nameWithType: Project.RemoveProperty(ProjectProperty)
  fullName: Microsoft.Build.Evaluation.Project.RemoveProperty(ProjectProperty)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "從專案移除屬性。 要移除的屬性必須出現在專案中，而且必須不是來自匯入的檔案。"
  remarks: "如果包含屬性的屬性群組會變成空白，它也會移除。       更新專案時，但沒有進一步評估發生之前重新評估。 比方說，如果移除&quot;p&quot;，&quot;q&quot;評估從&quot;$（p） 」 就不會修改之前重新評估。"
  syntax:
    content: public bool RemoveProperty (Microsoft.Build.Evaluation.ProjectProperty property);
    parameters:
    - id: property
      type: Microsoft.Build.Evaluation.ProjectProperty
      description: "要移除的屬性。"
    return:
      type: System.Boolean
      description: "此屬性是否存在於此評估的專案，則傳回 true否則為 false。"
  overload: Microsoft.Build.Evaluation.Project.RemoveProperty*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.Save
  id: Save
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: Save()
  nameWithType: Project.Save()
  fullName: Microsoft.Build.Evaluation.Project.Save()
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "如果修改，使用預設的字元編碼，請將專案儲存至檔案系統。"
  syntax:
    content: public void Save ();
    parameters: []
  overload: Microsoft.Build.Evaluation.Project.Save*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.Save(System.IO.TextWriter)
  id: Save(System.IO.TextWriter)
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: Save(TextWriter)
  nameWithType: Project.Save(TextWriter)
  fullName: Microsoft.Build.Evaluation.Project.Save(TextWriter)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "不論是否已修改的專案，請將專案儲存至提供的文字寫入器。 使用的字元編碼的文字寫入器，並將標示為未修改的專案。"
  syntax:
    content: public void Save (System.IO.TextWriter writer);
    parameters:
    - id: writer
      type: System.IO.TextWriter
      description: "若要儲存專案，以文字寫入器。"
  overload: Microsoft.Build.Evaluation.Project.Save*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.Save(System.String)
  id: Save(System.String)
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: Save(String)
  nameWithType: Project.Save(String)
  fullName: Microsoft.Build.Evaluation.Project.Save(String)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "如果修改或變更專案的原始碼的路徑，如果使用預設的字元編碼，請將專案儲存至檔案系統。"
  syntax:
    content: public void Save (string path);
    parameters:
    - id: path
      type: System.String
      description: "專案的原始碼路徑。"
  overload: Microsoft.Build.Evaluation.Project.Save*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.Save(System.Text.Encoding)
  id: Save(System.Text.Encoding)
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: Save(Encoding)
  nameWithType: Project.Save(Encoding)
  fullName: Microsoft.Build.Evaluation.Project.Save(Encoding)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "如果修改使用指定的字元編碼方式，將專案儲存至檔案系統。"
  syntax:
    content: public void Save (System.Text.Encoding encoding);
    parameters:
    - id: encoding
      type: System.Text.Encoding
      description: "字元編碼方式，用來儲存專案。"
  overload: Microsoft.Build.Evaluation.Project.Save*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.Save(System.String,System.Text.Encoding)
  id: Save(System.String,System.Text.Encoding)
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: Save(String,Encoding)
  nameWithType: Project.Save(String,Encoding)
  fullName: Microsoft.Build.Evaluation.Project.Save(String,Encoding)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "如果修改或專案的原始碼的路徑變更時，如果使用指定的字元編碼方式，請將專案儲存至檔案系統。"
  syntax:
    content: public void Save (string path, System.Text.Encoding encoding);
    parameters:
    - id: path
      type: System.String
      description: "專案的原始碼路徑。"
    - id: encoding
      type: System.Text.Encoding
      description: "字元編碼方式，用來儲存專案。"
  overload: Microsoft.Build.Evaluation.Project.Save*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.SaveLogicalProject(System.IO.TextWriter)
  id: SaveLogicalProject(System.IO.TextWriter)
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: SaveLogicalProject(TextWriter)
  nameWithType: Project.SaveLogicalProject(TextWriter)
  fullName: Microsoft.Build.Evaluation.Project.SaveLogicalProject(TextWriter)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "儲存 「 邏輯性 」 或 「 前置處理過的 「 專案檔案，包含匯入的檔案，如同它們形成單一檔案。"
  syntax:
    content: public void SaveLogicalProject (System.IO.TextWriter writer);
    parameters:
    - id: writer
      type: System.IO.TextWriter
      description: "儲存專案檔的寫入器。"
  overload: Microsoft.Build.Evaluation.Project.SaveLogicalProject*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.SetGlobalProperty(System.String,System.String)
  id: SetGlobalProperty(System.String,System.String)
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: SetGlobalProperty(String,String)
  nameWithType: Project.SetGlobalProperty(String,String)
  fullName: Microsoft.Build.Evaluation.Project.SetGlobalProperty(String,String)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "在評估專案後，請設定全域屬性。 如果值變更時，專案會標示為需要重新評估。"
  syntax:
    content: public bool SetGlobalProperty (string name, string escapedValue);
    parameters:
    - id: name
      type: System.String
      description: "若要設定全域屬性的名稱。"
    - id: escapedValue
      type: System.String
      description: "全域屬性的新值。"
    return:
      type: System.Boolean
      description: "傳回<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果值變更時，否則會傳回<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: Microsoft.Build.Evaluation.Project.SetGlobalProperty*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.SetProperty(System.String,System.String)
  id: SetProperty(System.String,System.String)
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: SetProperty(String,String)
  nameWithType: Project.SetProperty(String,String)
  fullName: Microsoft.Build.Evaluation.Project.SetProperty(String,String)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "設定或將具有指定名稱和值的屬性加入至專案。 覆寫屬性的值具有相同名稱，如果它不是在匯入的檔案。"
  remarks: "如果沒有具有指定名稱的屬性，更新最後一個現有的屬性以指定的名稱，沒有條件本身或其屬性群組中，除非來自於匯入的檔案。       否則，在第一個屬性群組不含條件，最後一個現有屬性群組之後，其他的專案開始時建立必要的屬性群組中新增一個屬性。       評估會在最佳的方式來進行。 下列新屬性的專案程式碼中所定義的屬性可用於評估。 只有這個屬性會加以評估。 不會影響可能依賴其他屬性。"
  syntax:
    content: public Microsoft.Build.Evaluation.ProjectProperty SetProperty (string name, string unevaluatedValue);
    parameters:
    - id: name
      type: System.String
      description: "若要設定屬性的名稱。"
    - id: unevaluatedValue
      type: System.String
      description: "屬性的新未評估的值。"
    return:
      type: Microsoft.Build.Evaluation.ProjectProperty
      description: "傳回的屬性。"
  overload: Microsoft.Build.Evaluation.Project.SetProperty*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.SkipEvaluation
  id: SkipEvaluation
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: SkipEvaluation
  nameWithType: Project.SkipEvaluation
  fullName: Microsoft.Build.Evaluation.Project.SkipEvaluation
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "取得或設定旗標會判斷 ReevaluateIfNecessary 是否暫時停用。 這個主應用程式需要進行大量的讀取及寫入專案時很有用，而且想要而暫時犧牲效能的正確性。"
  syntax:
    content: public bool SkipEvaluation { get; set; }
    return:
      type: System.Boolean
      description: "傳回旗標會判斷 ReevaluateIfNecessary 是否暫時停用。"
  overload: Microsoft.Build.Evaluation.Project.SkipEvaluation*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.SubToolsetVersion
  id: SubToolsetVersion
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: SubToolsetVersion
  nameWithType: Project.SubToolsetVersion
  fullName: Microsoft.Build.Evaluation.Project.SubToolsetVersion
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "如果有的話，請取得 SubToolsetVersion 屬性的值。 這個值被結合 ToolsVersion 屬性，以判斷此專案的工具組屬性的值。"
  syntax:
    content: public string SubToolsetVersion { get; }
    return:
      type: System.String
      description: "傳回 SubToolsetVersion 屬性值。 如果屬性不存在，則傳回空字串。"
  overload: Microsoft.Build.Evaluation.Project.SubToolsetVersion*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.Targets
  id: Targets
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: Targets
  nameWithType: Project.Targets
  fullName: Microsoft.Build.Evaluation.Project.Targets
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "在此專案中，為索引鍵的目標名稱取得所有目標的字典。"
  syntax:
    content: public System.Collections.Generic.IDictionary<string,Microsoft.Build.Execution.ProjectTargetInstance> Targets { get; }
    return:
      type: System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Execution.ProjectTargetInstance}
      description: "在此專案中，依目標名稱做為索引鍵傳回所有目標的字典。 覆寫的目標不包含此集合中。 這個字典是唯讀的。"
  overload: Microsoft.Build.Evaluation.Project.Targets*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.ToolsVersion
  id: ToolsVersion
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: ToolsVersion
  nameWithType: Project.ToolsVersion
  fullName: Microsoft.Build.Evaluation.Project.ToolsVersion
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "如果有的話，請取得此專案已評估，使用的工具版本。"
  remarks: "設定建構函式。 這不一定相同工具版本，在專案標籤上，如果有的話。它可能已從外部指定，例如 /tv 參數在命令列上。 您可以從<xref:Microsoft.Build.Evaluation.Project.Xml%2A>.</xref:Microsoft.Build.Evaluation.Project.Xml%2A>取得專案標記上的實際的工具版本 在建立專案之後，就無法變更的工具版本。"
  syntax:
    content: public string ToolsVersion { get; }
    return:
      type: System.String
      description: "如果有的話，請取得此專案已評估，使用的工具版本。"
  overload: Microsoft.Build.Evaluation.Project.ToolsVersion*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.Xml
  id: Xml
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: Xml
  nameWithType: Project.Xml
  fullName: Microsoft.Build.Evaluation.Project.Xml
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "取得與這個專案相關聯的根專案。 不可為 null"
  remarks: "沒有任何方法來設定這個屬性。 如果您有新的專案根目錄，則會評估新的專案。"
  syntax:
    content: public Microsoft.Build.Construction.ProjectRootElement Xml { get; }
    return:
      type: Microsoft.Build.Construction.ProjectRootElement
      description: "傳回此專案中，永遠不會是 null 相關聯的根專案。"
  overload: Microsoft.Build.Evaluation.Project.Xml*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: Microsoft.Build.Exceptions.InvalidProjectFileException
  parent: Microsoft.Build.Exceptions
  isExternal: false
  name: InvalidProjectFileException
  nameWithType: InvalidProjectFileException
  fullName: Microsoft.Build.Exceptions.InvalidProjectFileException
- uid: Microsoft.Build.Evaluation.Project.#ctor
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: Project()
  nameWithType: Project.Project()
  fullName: Microsoft.Build.Evaluation.Project.Project()
- uid: Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement)
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: Project(ProjectRootElement)
  nameWithType: Project.Project(ProjectRootElement)
  fullName: Microsoft.Build.Evaluation.Project.Project(ProjectRootElement)
- uid: Microsoft.Build.Construction.ProjectRootElement
  parent: Microsoft.Build.Construction
  isExternal: false
  name: ProjectRootElement
  nameWithType: ProjectRootElement
  fullName: Microsoft.Build.Construction.ProjectRootElement
- uid: Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Evaluation.ProjectCollection)
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: Project(ProjectCollection)
  nameWithType: Project.Project(ProjectCollection)
  fullName: Microsoft.Build.Evaluation.Project.Project(ProjectCollection)
- uid: Microsoft.Build.Evaluation.ProjectCollection
  parent: Microsoft.Build.Evaluation
  isExternal: false
  name: ProjectCollection
  nameWithType: ProjectCollection
  fullName: Microsoft.Build.Evaluation.ProjectCollection
- uid: Microsoft.Build.Evaluation.Project.#ctor(System.String)
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: Project(String)
  nameWithType: Project.Project(String)
  fullName: Microsoft.Build.Evaluation.Project.Project(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader)
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: Project(XmlReader)
  nameWithType: Project.Project(XmlReader)
  fullName: Microsoft.Build.Evaluation.Project.Project(XmlReader)
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String)
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: Project(ProjectRootElement,IDictionary<String,String>,String)
  nameWithType: Project.Project(ProjectRootElement,IDictionary<String,String>,String)
  fullName: Microsoft.Build.Evaluation.Project.Project(ProjectRootElement,IDictionary<String,String>,String)
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<String,String>
  nameWithType: IDictionary<String,String>
  fullName: System.Collections.Generic.IDictionary<System.String,System.String>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.String,System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Build.Evaluation.Project.#ctor(System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: Project(IDictionary<String,String>,String,ProjectCollection)
  nameWithType: Project.Project(IDictionary<String,String>,String,ProjectCollection)
  fullName: Microsoft.Build.Evaluation.Project.Project(IDictionary<String,String>,String,ProjectCollection)
- uid: Microsoft.Build.Evaluation.Project.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String)
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: Project(String,IDictionary<String,String>,String)
  nameWithType: Project.Project(String,IDictionary<String,String>,String)
  fullName: Microsoft.Build.Evaluation.Project.Project(String,IDictionary<String,String>,String)
- uid: Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String)
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: Project(XmlReader,IDictionary<String,String>,String)
  nameWithType: Project.Project(XmlReader,IDictionary<String,String>,String)
  fullName: Microsoft.Build.Evaluation.Project.Project(XmlReader,IDictionary<String,String>,String)
- uid: Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: Project(ProjectRootElement,IDictionary<String,String>,String,ProjectCollection)
  nameWithType: Project.Project(ProjectRootElement,IDictionary<String,String>,String,ProjectCollection)
  fullName: Microsoft.Build.Evaluation.Project.Project(ProjectRootElement,IDictionary<String,String>,String,ProjectCollection)
- uid: Microsoft.Build.Evaluation.Project.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: Project(String,IDictionary<String,String>,String,ProjectCollection)
  nameWithType: Project.Project(String,IDictionary<String,String>,String,ProjectCollection)
  fullName: Microsoft.Build.Evaluation.Project.Project(String,IDictionary<String,String>,String,ProjectCollection)
- uid: Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: Project(XmlReader,IDictionary<String,String>,String,ProjectCollection)
  nameWithType: Project.Project(XmlReader,IDictionary<String,String>,String,ProjectCollection)
  fullName: Microsoft.Build.Evaluation.Project.Project(XmlReader,IDictionary<String,String>,String,ProjectCollection)
- uid: Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: Project(ProjectRootElement,IDictionary<String,String>,String,ProjectCollection,ProjectLoadSettings)
  nameWithType: Project.Project(ProjectRootElement,IDictionary<String,String>,String,ProjectCollection,ProjectLoadSettings)
  fullName: Microsoft.Build.Evaluation.Project.Project(ProjectRootElement,IDictionary<String,String>,String,ProjectCollection,ProjectLoadSettings)
- uid: Microsoft.Build.Evaluation.ProjectLoadSettings
  parent: Microsoft.Build.Evaluation
  isExternal: false
  name: ProjectLoadSettings
  nameWithType: ProjectLoadSettings
  fullName: Microsoft.Build.Evaluation.ProjectLoadSettings
- uid: Microsoft.Build.Evaluation.Project.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: Project(String,IDictionary<String,String>,String,ProjectCollection,ProjectLoadSettings)
  nameWithType: Project.Project(String,IDictionary<String,String>,String,ProjectCollection,ProjectLoadSettings)
  fullName: Microsoft.Build.Evaluation.Project.Project(String,IDictionary<String,String>,String,ProjectCollection,ProjectLoadSettings)
- uid: Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: Project(XmlReader,IDictionary<String,String>,String,ProjectCollection,ProjectLoadSettings)
  nameWithType: Project.Project(XmlReader,IDictionary<String,String>,String,ProjectCollection,ProjectLoadSettings)
  fullName: Microsoft.Build.Evaluation.Project.Project(XmlReader,IDictionary<String,String>,String,ProjectCollection,ProjectLoadSettings)
- uid: Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: Project(ProjectRootElement,IDictionary<String,String>,String,String,ProjectCollection,ProjectLoadSettings)
  nameWithType: Project.Project(ProjectRootElement,IDictionary<String,String>,String,String,ProjectCollection,ProjectLoadSettings)
  fullName: Microsoft.Build.Evaluation.Project.Project(ProjectRootElement,IDictionary<String,String>,String,String,ProjectCollection,ProjectLoadSettings)
- uid: Microsoft.Build.Evaluation.Project.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: Project(String,IDictionary<String,String>,String,String,ProjectCollection,ProjectLoadSettings)
  nameWithType: Project.Project(String,IDictionary<String,String>,String,String,ProjectCollection,ProjectLoadSettings)
  fullName: Microsoft.Build.Evaluation.Project.Project(String,IDictionary<String,String>,String,String,ProjectCollection,ProjectLoadSettings)
- uid: Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: Project(XmlReader,IDictionary<String,String>,String,String,ProjectCollection,ProjectLoadSettings)
  nameWithType: Project.Project(XmlReader,IDictionary<String,String>,String,String,ProjectCollection,ProjectLoadSettings)
  fullName: Microsoft.Build.Evaluation.Project.Project(XmlReader,IDictionary<String,String>,String,String,ProjectCollection,ProjectLoadSettings)
- uid: Microsoft.Build.Evaluation.Project.AddItem(System.String,System.String)
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: AddItem(String,String)
  nameWithType: Project.AddItem(String,String)
  fullName: Microsoft.Build.Evaluation.Project.AddItem(String,String)
- uid: System.Collections.Generic.IList{Microsoft.Build.Evaluation.ProjectItem}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<ProjectItem>
  nameWithType: IList<ProjectItem>
  fullName: System.Collections.Generic.IList<Microsoft.Build.Evaluation.ProjectItem>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<Microsoft.Build.Evaluation.ProjectItem>
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Build.Evaluation.ProjectItem
    name: ProjectItem
    nameWithType: ProjectItem
    fullName: ProjectItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Build.Evaluation.Project.AddItem(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: AddItem(String,String,IEnumerable<KeyValuePair<String,String>>)
  nameWithType: Project.AddItem(String,String,IEnumerable<KeyValuePair<String,String>>)
  fullName: Microsoft.Build.Evaluation.Project.AddItem(String,String,IEnumerable<KeyValuePair<String,String>>)
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<KeyValuePair<String,String>>
  nameWithType: IEnumerable<KeyValuePair<String,String>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.String>>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.String>>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: KeyValuePair<System.String,System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Build.Evaluation.Project.AddItemFast(System.String,System.String)
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: AddItemFast(String,String)
  nameWithType: Project.AddItemFast(String,String)
  fullName: Microsoft.Build.Evaluation.Project.AddItemFast(String,String)
- uid: Microsoft.Build.Evaluation.Project.AddItemFast(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: AddItemFast(String,String,IEnumerable<KeyValuePair<String,String>>)
  nameWithType: Project.AddItemFast(String,String,IEnumerable<KeyValuePair<String,String>>)
  fullName: Microsoft.Build.Evaluation.Project.AddItemFast(String,String,IEnumerable<KeyValuePair<String,String>>)
- uid: Microsoft.Build.Evaluation.Project.AllEvaluatedItemDefinitionMetadata
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: AllEvaluatedItemDefinitionMetadata
  nameWithType: Project.AllEvaluatedItemDefinitionMetadata
  fullName: Microsoft.Build.Evaluation.Project.AllEvaluatedItemDefinitionMetadata
- uid: System.Collections.Generic.ICollection{Microsoft.Build.Evaluation.ProjectMetadata}
  parent: System.Collections.Generic
  isExternal: true
  name: ICollection<ProjectMetadata>
  nameWithType: ICollection<ProjectMetadata>
  fullName: System.Collections.Generic.ICollection<Microsoft.Build.Evaluation.ProjectMetadata>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection<Microsoft.Build.Evaluation.ProjectMetadata>
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Build.Evaluation.ProjectMetadata
    name: ProjectMetadata
    nameWithType: ProjectMetadata
    fullName: ProjectMetadata
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Build.Evaluation.Project.AllEvaluatedItems
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: AllEvaluatedItems
  nameWithType: Project.AllEvaluatedItems
  fullName: Microsoft.Build.Evaluation.Project.AllEvaluatedItems
- uid: System.Collections.Generic.ICollection{Microsoft.Build.Evaluation.ProjectItem}
  parent: System.Collections.Generic
  isExternal: true
  name: ICollection<ProjectItem>
  nameWithType: ICollection<ProjectItem>
  fullName: System.Collections.Generic.ICollection<Microsoft.Build.Evaluation.ProjectItem>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection<Microsoft.Build.Evaluation.ProjectItem>
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Build.Evaluation.ProjectItem
    name: ProjectItem
    nameWithType: ProjectItem
    fullName: ProjectItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Build.Evaluation.Project.AllEvaluatedProperties
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: AllEvaluatedProperties
  nameWithType: Project.AllEvaluatedProperties
  fullName: Microsoft.Build.Evaluation.Project.AllEvaluatedProperties
- uid: System.Collections.Generic.ICollection{Microsoft.Build.Evaluation.ProjectProperty}
  parent: System.Collections.Generic
  isExternal: true
  name: ICollection<ProjectProperty>
  nameWithType: ICollection<ProjectProperty>
  fullName: System.Collections.Generic.ICollection<Microsoft.Build.Evaluation.ProjectProperty>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection<Microsoft.Build.Evaluation.ProjectProperty>
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Build.Evaluation.ProjectProperty
    name: ProjectProperty
    nameWithType: ProjectProperty
    fullName: ProjectProperty
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Build.Evaluation.Project.Build
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: Build()
  nameWithType: Project.Build()
  fullName: Microsoft.Build.Evaluation.Project.Build()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Build.Evaluation.Project.Build(Microsoft.Build.Framework.ILogger)
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: Build(ILogger)
  nameWithType: Project.Build(ILogger)
  fullName: Microsoft.Build.Evaluation.Project.Build(ILogger)
- uid: Microsoft.Build.Framework.ILogger
  parent: Microsoft.Build.Framework
  isExternal: false
  name: ILogger
  nameWithType: ILogger
  fullName: Microsoft.Build.Framework.ILogger
- uid: Microsoft.Build.Evaluation.Project.Build(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: Build(IEnumerable<ILogger>)
  nameWithType: Project.Build(IEnumerable<ILogger>)
  fullName: Microsoft.Build.Evaluation.Project.Build(IEnumerable<ILogger>)
- uid: System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<ILogger>
  nameWithType: IEnumerable<ILogger>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.Build.Framework.ILogger>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<Microsoft.Build.Framework.ILogger>
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Build.Framework.ILogger
    name: ILogger
    nameWithType: ILogger
    fullName: ILogger
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Build.Evaluation.Project.Build(System.String)
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: Build(String)
  nameWithType: Project.Build(String)
  fullName: Microsoft.Build.Evaluation.Project.Build(String)
- uid: Microsoft.Build.Evaluation.Project.Build(System.String[])
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: Build(String[])
  nameWithType: Project.Build(String[])
  fullName: Microsoft.Build.Evaluation.Project.Build(String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.Build.Evaluation.Project.Build(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: Build(IEnumerable<ILogger>,IEnumerable<ForwardingLoggerRecord>)
  nameWithType: Project.Build(IEnumerable<ILogger>,IEnumerable<ForwardingLoggerRecord>)
  fullName: Microsoft.Build.Evaluation.Project.Build(IEnumerable<ILogger>,IEnumerable<ForwardingLoggerRecord>)
- uid: System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<ForwardingLoggerRecord>
  nameWithType: IEnumerable<ForwardingLoggerRecord>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.Build.Logging.ForwardingLoggerRecord>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<Microsoft.Build.Logging.ForwardingLoggerRecord>
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Build.Logging.ForwardingLoggerRecord
    name: ForwardingLoggerRecord
    nameWithType: ForwardingLoggerRecord
    fullName: ForwardingLoggerRecord
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Build.Evaluation.Project.Build(System.String,System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: Build(String,IEnumerable<ILogger>)
  nameWithType: Project.Build(String,IEnumerable<ILogger>)
  fullName: Microsoft.Build.Evaluation.Project.Build(String,IEnumerable<ILogger>)
- uid: Microsoft.Build.Evaluation.Project.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: Build(String[],IEnumerable<ILogger>)
  nameWithType: Project.Build(String[],IEnumerable<ILogger>)
  fullName: Microsoft.Build.Evaluation.Project.Build(String[],IEnumerable<ILogger>)
- uid: Microsoft.Build.Evaluation.Project.Build(System.String,System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: Build(String,IEnumerable<ILogger>,IEnumerable<ForwardingLoggerRecord>)
  nameWithType: Project.Build(String,IEnumerable<ILogger>,IEnumerable<ForwardingLoggerRecord>)
  fullName: Microsoft.Build.Evaluation.Project.Build(String,IEnumerable<ILogger>,IEnumerable<ForwardingLoggerRecord>)
- uid: Microsoft.Build.Evaluation.Project.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: Build(String[],IEnumerable<ILogger>,IEnumerable<ForwardingLoggerRecord>)
  nameWithType: Project.Build(String[],IEnumerable<ILogger>,IEnumerable<ForwardingLoggerRecord>)
  fullName: Microsoft.Build.Evaluation.Project.Build(String[],IEnumerable<ILogger>,IEnumerable<ForwardingLoggerRecord>)
- uid: Microsoft.Build.Evaluation.Project.ConditionedProperties
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: ConditionedProperties
  nameWithType: Project.ConditionedProperties
  fullName: Microsoft.Build.Evaluation.Project.ConditionedProperties
- uid: System.Collections.Generic.IDictionary{System.String,System.Collections.Generic.List{System.String}}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<String,List<String>>
  nameWithType: IDictionary<String,List<String>>
  fullName: System.Collections.Generic.IDictionary<System.String,System.Collections.Generic.List<System.String>>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.String,System.Collections.Generic.List<System.String>>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: List<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Build.Evaluation.Project.CreateProjectInstance
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: CreateProjectInstance()
  nameWithType: Project.CreateProjectInstance()
  fullName: Microsoft.Build.Evaluation.Project.CreateProjectInstance()
- uid: Microsoft.Build.Execution.ProjectInstance
  parent: Microsoft.Build.Execution
  isExternal: false
  name: ProjectInstance
  nameWithType: ProjectInstance
  fullName: Microsoft.Build.Execution.ProjectInstance
- uid: Microsoft.Build.Evaluation.Project.CreateProjectInstance(Microsoft.Build.Execution.ProjectInstanceSettings)
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: CreateProjectInstance(ProjectInstanceSettings)
  nameWithType: Project.CreateProjectInstance(ProjectInstanceSettings)
  fullName: Microsoft.Build.Evaluation.Project.CreateProjectInstance(ProjectInstanceSettings)
- uid: Microsoft.Build.Execution.ProjectInstanceSettings
  parent: Microsoft.Build.Execution
  isExternal: false
  name: ProjectInstanceSettings
  nameWithType: ProjectInstanceSettings
  fullName: Microsoft.Build.Execution.ProjectInstanceSettings
- uid: Microsoft.Build.Evaluation.Project.DirectoryPath
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: DirectoryPath
  nameWithType: Project.DirectoryPath
  fullName: Microsoft.Build.Evaluation.Project.DirectoryPath
- uid: Microsoft.Build.Evaluation.Project.DisableMarkDirty
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: DisableMarkDirty
  nameWithType: Project.DisableMarkDirty
  fullName: Microsoft.Build.Evaluation.Project.DisableMarkDirty
- uid: Microsoft.Build.Evaluation.Project.EvaluationCounter
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: EvaluationCounter
  nameWithType: Project.EvaluationCounter
  fullName: Microsoft.Build.Evaluation.Project.EvaluationCounter
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Build.Evaluation.Project.ExpandString(System.String)
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: ExpandString(String)
  nameWithType: Project.ExpandString(String)
  fullName: Microsoft.Build.Evaluation.Project.ExpandString(String)
- uid: Microsoft.Build.Evaluation.Project.FullPath
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: FullPath
  nameWithType: Project.FullPath
  fullName: Microsoft.Build.Evaluation.Project.FullPath
- uid: Microsoft.Build.Evaluation.Project.GetEvaluatedItemIncludeEscaped(Microsoft.Build.Evaluation.ProjectItem)
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: GetEvaluatedItemIncludeEscaped(ProjectItem)
  nameWithType: Project.GetEvaluatedItemIncludeEscaped(ProjectItem)
  fullName: Microsoft.Build.Evaluation.Project.GetEvaluatedItemIncludeEscaped(ProjectItem)
- uid: Microsoft.Build.Evaluation.ProjectItem
  parent: Microsoft.Build.Evaluation
  isExternal: false
  name: ProjectItem
  nameWithType: ProjectItem
  fullName: Microsoft.Build.Evaluation.ProjectItem
- uid: Microsoft.Build.Evaluation.Project.GetEvaluatedItemIncludeEscaped(Microsoft.Build.Evaluation.ProjectItemDefinition)
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: GetEvaluatedItemIncludeEscaped(ProjectItemDefinition)
  nameWithType: Project.GetEvaluatedItemIncludeEscaped(ProjectItemDefinition)
  fullName: Microsoft.Build.Evaluation.Project.GetEvaluatedItemIncludeEscaped(ProjectItemDefinition)
- uid: Microsoft.Build.Evaluation.ProjectItemDefinition
  parent: Microsoft.Build.Evaluation
  isExternal: false
  name: ProjectItemDefinition
  nameWithType: ProjectItemDefinition
  fullName: Microsoft.Build.Evaluation.ProjectItemDefinition
- uid: Microsoft.Build.Evaluation.Project.GetItems(System.String)
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: GetItems(String)
  nameWithType: Project.GetItems(String)
  fullName: Microsoft.Build.Evaluation.Project.GetItems(String)
- uid: Microsoft.Build.Evaluation.Project.GetItemsByEvaluatedInclude(System.String)
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: GetItemsByEvaluatedInclude(String)
  nameWithType: Project.GetItemsByEvaluatedInclude(String)
  fullName: Microsoft.Build.Evaluation.Project.GetItemsByEvaluatedInclude(String)
- uid: Microsoft.Build.Evaluation.Project.GetItemsIgnoringCondition(System.String)
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: GetItemsIgnoringCondition(String)
  nameWithType: Project.GetItemsIgnoringCondition(String)
  fullName: Microsoft.Build.Evaluation.Project.GetItemsIgnoringCondition(String)
- uid: Microsoft.Build.Evaluation.Project.GetLogicalProject
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: GetLogicalProject()
  nameWithType: Project.GetLogicalProject()
  fullName: Microsoft.Build.Evaluation.Project.GetLogicalProject()
- uid: System.Collections.Generic.IEnumerable{Microsoft.Build.Construction.ProjectElement}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<ProjectElement>
  nameWithType: IEnumerable<ProjectElement>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.Build.Construction.ProjectElement>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<Microsoft.Build.Construction.ProjectElement>
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Build.Construction.ProjectElement
    name: ProjectElement
    nameWithType: ProjectElement
    fullName: ProjectElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped(Microsoft.Build.Evaluation.ProjectMetadata)
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: GetMetadataValueEscaped(ProjectMetadata)
  nameWithType: Project.GetMetadataValueEscaped(ProjectMetadata)
  fullName: Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped(ProjectMetadata)
- uid: Microsoft.Build.Evaluation.ProjectMetadata
  parent: Microsoft.Build.Evaluation
  isExternal: false
  name: ProjectMetadata
  nameWithType: ProjectMetadata
  fullName: Microsoft.Build.Evaluation.ProjectMetadata
- uid: Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped(Microsoft.Build.Evaluation.ProjectItem,System.String)
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: GetMetadataValueEscaped(ProjectItem,String)
  nameWithType: Project.GetMetadataValueEscaped(ProjectItem,String)
  fullName: Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped(ProjectItem,String)
- uid: Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped(Microsoft.Build.Evaluation.ProjectItemDefinition,System.String)
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: GetMetadataValueEscaped(ProjectItemDefinition,String)
  nameWithType: Project.GetMetadataValueEscaped(ProjectItemDefinition,String)
  fullName: Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped(ProjectItemDefinition,String)
- uid: Microsoft.Build.Evaluation.Project.GetProperty(System.String)
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: GetProperty(String)
  nameWithType: Project.GetProperty(String)
  fullName: Microsoft.Build.Evaluation.Project.GetProperty(String)
- uid: Microsoft.Build.Evaluation.ProjectProperty
  parent: Microsoft.Build.Evaluation
  isExternal: false
  name: ProjectProperty
  nameWithType: ProjectProperty
  fullName: Microsoft.Build.Evaluation.ProjectProperty
- uid: Microsoft.Build.Evaluation.Project.GetPropertyValue(System.String)
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: GetPropertyValue(String)
  nameWithType: Project.GetPropertyValue(String)
  fullName: Microsoft.Build.Evaluation.Project.GetPropertyValue(String)
- uid: Microsoft.Build.Evaluation.Project.GetPropertyValueEscaped(Microsoft.Build.Evaluation.ProjectProperty)
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: GetPropertyValueEscaped(ProjectProperty)
  nameWithType: Project.GetPropertyValueEscaped(ProjectProperty)
  fullName: Microsoft.Build.Evaluation.Project.GetPropertyValueEscaped(ProjectProperty)
- uid: Microsoft.Build.Evaluation.Project.GlobalProperties
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: GlobalProperties
  nameWithType: Project.GlobalProperties
  fullName: Microsoft.Build.Evaluation.Project.GlobalProperties
- uid: Microsoft.Build.Evaluation.Project.Imports
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: Imports
  nameWithType: Project.Imports
  fullName: Microsoft.Build.Evaluation.Project.Imports
- uid: System.Collections.Generic.IList{Microsoft.Build.Evaluation.ResolvedImport}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<ResolvedImport>
  nameWithType: IList<ResolvedImport>
  fullName: System.Collections.Generic.IList<Microsoft.Build.Evaluation.ResolvedImport>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<Microsoft.Build.Evaluation.ResolvedImport>
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Build.Evaluation.ResolvedImport
    name: ResolvedImport
    nameWithType: ResolvedImport
    fullName: ResolvedImport
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Build.Evaluation.Project.ImportsIncludingDuplicates
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: ImportsIncludingDuplicates
  nameWithType: Project.ImportsIncludingDuplicates
  fullName: Microsoft.Build.Evaluation.Project.ImportsIncludingDuplicates
- uid: Microsoft.Build.Evaluation.Project.IsBuildEnabled
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: IsBuildEnabled
  nameWithType: Project.IsBuildEnabled
  fullName: Microsoft.Build.Evaluation.Project.IsBuildEnabled
- uid: Microsoft.Build.Evaluation.Project.IsDirty
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: IsDirty
  nameWithType: Project.IsDirty
  fullName: Microsoft.Build.Evaluation.Project.IsDirty
- uid: Microsoft.Build.Evaluation.Project.ItemDefinitions
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: ItemDefinitions
  nameWithType: Project.ItemDefinitions
  fullName: Microsoft.Build.Evaluation.Project.ItemDefinitions
- uid: System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Evaluation.ProjectItemDefinition}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<String,ProjectItemDefinition>
  nameWithType: IDictionary<String,ProjectItemDefinition>
  fullName: System.Collections.Generic.IDictionary<System.String,Microsoft.Build.Evaluation.ProjectItemDefinition>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.String,Microsoft.Build.Evaluation.ProjectItemDefinition>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.Build.Evaluation.ProjectItemDefinition
    name: ProjectItemDefinition
    nameWithType: ProjectItemDefinition
    fullName: ProjectItemDefinition
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Build.Evaluation.Project.Items
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: Items
  nameWithType: Project.Items
  fullName: Microsoft.Build.Evaluation.Project.Items
- uid: Microsoft.Build.Evaluation.Project.ItemsIgnoringCondition
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: ItemsIgnoringCondition
  nameWithType: Project.ItemsIgnoringCondition
  fullName: Microsoft.Build.Evaluation.Project.ItemsIgnoringCondition
- uid: Microsoft.Build.Evaluation.Project.ItemTypes
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: ItemTypes
  nameWithType: Project.ItemTypes
  fullName: Microsoft.Build.Evaluation.Project.ItemTypes
- uid: System.Collections.Generic.ICollection{System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: ICollection<String>
  nameWithType: ICollection<String>
  fullName: System.Collections.Generic.ICollection<System.String>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Build.Evaluation.Project.MarkDirty
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: MarkDirty()
  nameWithType: Project.MarkDirty()
  fullName: Microsoft.Build.Evaluation.Project.MarkDirty()
- uid: Microsoft.Build.Evaluation.Project.ProjectCollection
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: ProjectCollection
  nameWithType: Project.ProjectCollection
  fullName: Microsoft.Build.Evaluation.Project.ProjectCollection
- uid: Microsoft.Build.Evaluation.Project.ProjectFileLocation
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: ProjectFileLocation
  nameWithType: Project.ProjectFileLocation
  fullName: Microsoft.Build.Evaluation.Project.ProjectFileLocation
- uid: Microsoft.Build.Construction.ElementLocation
  parent: Microsoft.Build.Construction
  isExternal: false
  name: ElementLocation
  nameWithType: ElementLocation
  fullName: Microsoft.Build.Construction.ElementLocation
- uid: Microsoft.Build.Evaluation.Project.Properties
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: Properties
  nameWithType: Project.Properties
  fullName: Microsoft.Build.Evaluation.Project.Properties
- uid: Microsoft.Build.Evaluation.Project.ReevaluateIfNecessary
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: ReevaluateIfNecessary()
  nameWithType: Project.ReevaluateIfNecessary()
  fullName: Microsoft.Build.Evaluation.Project.ReevaluateIfNecessary()
- uid: Microsoft.Build.Evaluation.Project.RemoveGlobalProperty(System.String)
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: RemoveGlobalProperty(String)
  nameWithType: Project.RemoveGlobalProperty(String)
  fullName: Microsoft.Build.Evaluation.Project.RemoveGlobalProperty(String)
- uid: Microsoft.Build.Evaluation.Project.RemoveItem(Microsoft.Build.Evaluation.ProjectItem)
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: RemoveItem(ProjectItem)
  nameWithType: Project.RemoveItem(ProjectItem)
  fullName: Microsoft.Build.Evaluation.Project.RemoveItem(ProjectItem)
- uid: Microsoft.Build.Evaluation.Project.RemoveItems(System.Collections.Generic.IEnumerable{Microsoft.Build.Evaluation.ProjectItem})
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: RemoveItems(IEnumerable<ProjectItem>)
  nameWithType: Project.RemoveItems(IEnumerable<ProjectItem>)
  fullName: Microsoft.Build.Evaluation.Project.RemoveItems(IEnumerable<ProjectItem>)
- uid: System.Collections.Generic.IEnumerable{Microsoft.Build.Evaluation.ProjectItem}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<ProjectItem>
  nameWithType: IEnumerable<ProjectItem>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.Build.Evaluation.ProjectItem>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<Microsoft.Build.Evaluation.ProjectItem>
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Build.Evaluation.ProjectItem
    name: ProjectItem
    nameWithType: ProjectItem
    fullName: ProjectItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Build.Evaluation.Project.RemoveProperty(Microsoft.Build.Evaluation.ProjectProperty)
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: RemoveProperty(ProjectProperty)
  nameWithType: Project.RemoveProperty(ProjectProperty)
  fullName: Microsoft.Build.Evaluation.Project.RemoveProperty(ProjectProperty)
- uid: Microsoft.Build.Evaluation.Project.Save
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: Save()
  nameWithType: Project.Save()
  fullName: Microsoft.Build.Evaluation.Project.Save()
- uid: Microsoft.Build.Evaluation.Project.Save(System.IO.TextWriter)
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: Save(TextWriter)
  nameWithType: Project.Save(TextWriter)
  fullName: Microsoft.Build.Evaluation.Project.Save(TextWriter)
- uid: System.IO.TextWriter
  parent: System.IO
  isExternal: true
  name: TextWriter
  nameWithType: TextWriter
  fullName: System.IO.TextWriter
- uid: Microsoft.Build.Evaluation.Project.Save(System.String)
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: Save(String)
  nameWithType: Project.Save(String)
  fullName: Microsoft.Build.Evaluation.Project.Save(String)
- uid: Microsoft.Build.Evaluation.Project.Save(System.Text.Encoding)
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: Save(Encoding)
  nameWithType: Project.Save(Encoding)
  fullName: Microsoft.Build.Evaluation.Project.Save(Encoding)
- uid: System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: Microsoft.Build.Evaluation.Project.Save(System.String,System.Text.Encoding)
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: Save(String,Encoding)
  nameWithType: Project.Save(String,Encoding)
  fullName: Microsoft.Build.Evaluation.Project.Save(String,Encoding)
- uid: Microsoft.Build.Evaluation.Project.SaveLogicalProject(System.IO.TextWriter)
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: SaveLogicalProject(TextWriter)
  nameWithType: Project.SaveLogicalProject(TextWriter)
  fullName: Microsoft.Build.Evaluation.Project.SaveLogicalProject(TextWriter)
- uid: Microsoft.Build.Evaluation.Project.SetGlobalProperty(System.String,System.String)
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: SetGlobalProperty(String,String)
  nameWithType: Project.SetGlobalProperty(String,String)
  fullName: Microsoft.Build.Evaluation.Project.SetGlobalProperty(String,String)
- uid: Microsoft.Build.Evaluation.Project.SetProperty(System.String,System.String)
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: SetProperty(String,String)
  nameWithType: Project.SetProperty(String,String)
  fullName: Microsoft.Build.Evaluation.Project.SetProperty(String,String)
- uid: Microsoft.Build.Evaluation.Project.SkipEvaluation
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: SkipEvaluation
  nameWithType: Project.SkipEvaluation
  fullName: Microsoft.Build.Evaluation.Project.SkipEvaluation
- uid: Microsoft.Build.Evaluation.Project.SubToolsetVersion
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: SubToolsetVersion
  nameWithType: Project.SubToolsetVersion
  fullName: Microsoft.Build.Evaluation.Project.SubToolsetVersion
- uid: Microsoft.Build.Evaluation.Project.Targets
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: Targets
  nameWithType: Project.Targets
  fullName: Microsoft.Build.Evaluation.Project.Targets
- uid: System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Execution.ProjectTargetInstance}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<String,ProjectTargetInstance>
  nameWithType: IDictionary<String,ProjectTargetInstance>
  fullName: System.Collections.Generic.IDictionary<System.String,Microsoft.Build.Execution.ProjectTargetInstance>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.String,Microsoft.Build.Execution.ProjectTargetInstance>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.Build.Execution.ProjectTargetInstance
    name: ProjectTargetInstance
    nameWithType: ProjectTargetInstance
    fullName: ProjectTargetInstance
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Build.Evaluation.Project.ToolsVersion
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: ToolsVersion
  nameWithType: Project.ToolsVersion
  fullName: Microsoft.Build.Evaluation.Project.ToolsVersion
- uid: Microsoft.Build.Evaluation.Project.Xml
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: Xml
  nameWithType: Project.Xml
  fullName: Microsoft.Build.Evaluation.Project.Xml
- uid: Microsoft.Build.Evaluation.Project.#ctor*
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: Project
  nameWithType: Project.Project
- uid: Microsoft.Build.Evaluation.Project.AddItem*
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: AddItem
  nameWithType: Project.AddItem
- uid: Microsoft.Build.Evaluation.Project.AddItemFast*
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: AddItemFast
  nameWithType: Project.AddItemFast
- uid: Microsoft.Build.Evaluation.Project.AllEvaluatedItemDefinitionMetadata*
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: AllEvaluatedItemDefinitionMetadata
  nameWithType: Project.AllEvaluatedItemDefinitionMetadata
- uid: Microsoft.Build.Evaluation.Project.AllEvaluatedItems*
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: AllEvaluatedItems
  nameWithType: Project.AllEvaluatedItems
- uid: Microsoft.Build.Evaluation.Project.AllEvaluatedProperties*
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: AllEvaluatedProperties
  nameWithType: Project.AllEvaluatedProperties
- uid: Microsoft.Build.Evaluation.Project.Build*
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: Build
  nameWithType: Project.Build
- uid: Microsoft.Build.Evaluation.Project.ConditionedProperties*
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: ConditionedProperties
  nameWithType: Project.ConditionedProperties
- uid: Microsoft.Build.Evaluation.Project.CreateProjectInstance*
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: CreateProjectInstance
  nameWithType: Project.CreateProjectInstance
- uid: Microsoft.Build.Evaluation.Project.DirectoryPath*
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: DirectoryPath
  nameWithType: Project.DirectoryPath
- uid: Microsoft.Build.Evaluation.Project.DisableMarkDirty*
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: DisableMarkDirty
  nameWithType: Project.DisableMarkDirty
- uid: Microsoft.Build.Evaluation.Project.EvaluationCounter*
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: EvaluationCounter
  nameWithType: Project.EvaluationCounter
- uid: Microsoft.Build.Evaluation.Project.ExpandString*
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: ExpandString
  nameWithType: Project.ExpandString
- uid: Microsoft.Build.Evaluation.Project.FullPath*
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: FullPath
  nameWithType: Project.FullPath
- uid: Microsoft.Build.Evaluation.Project.GetEvaluatedItemIncludeEscaped*
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: GetEvaluatedItemIncludeEscaped
  nameWithType: Project.GetEvaluatedItemIncludeEscaped
- uid: Microsoft.Build.Evaluation.Project.GetItems*
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: GetItems
  nameWithType: Project.GetItems
- uid: Microsoft.Build.Evaluation.Project.GetItemsByEvaluatedInclude*
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: GetItemsByEvaluatedInclude
  nameWithType: Project.GetItemsByEvaluatedInclude
- uid: Microsoft.Build.Evaluation.Project.GetItemsIgnoringCondition*
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: GetItemsIgnoringCondition
  nameWithType: Project.GetItemsIgnoringCondition
- uid: Microsoft.Build.Evaluation.Project.GetLogicalProject*
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: GetLogicalProject
  nameWithType: Project.GetLogicalProject
- uid: Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped*
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: GetMetadataValueEscaped
  nameWithType: Project.GetMetadataValueEscaped
- uid: Microsoft.Build.Evaluation.Project.GetProperty*
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: GetProperty
  nameWithType: Project.GetProperty
- uid: Microsoft.Build.Evaluation.Project.GetPropertyValue*
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: GetPropertyValue
  nameWithType: Project.GetPropertyValue
- uid: Microsoft.Build.Evaluation.Project.GetPropertyValueEscaped*
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: GetPropertyValueEscaped
  nameWithType: Project.GetPropertyValueEscaped
- uid: Microsoft.Build.Evaluation.Project.GlobalProperties*
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: GlobalProperties
  nameWithType: Project.GlobalProperties
- uid: Microsoft.Build.Evaluation.Project.Imports*
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: Imports
  nameWithType: Project.Imports
- uid: Microsoft.Build.Evaluation.Project.ImportsIncludingDuplicates*
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: ImportsIncludingDuplicates
  nameWithType: Project.ImportsIncludingDuplicates
- uid: Microsoft.Build.Evaluation.Project.IsBuildEnabled*
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: IsBuildEnabled
  nameWithType: Project.IsBuildEnabled
- uid: Microsoft.Build.Evaluation.Project.IsDirty*
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: IsDirty
  nameWithType: Project.IsDirty
- uid: Microsoft.Build.Evaluation.Project.ItemDefinitions*
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: ItemDefinitions
  nameWithType: Project.ItemDefinitions
- uid: Microsoft.Build.Evaluation.Project.Items*
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: Items
  nameWithType: Project.Items
- uid: Microsoft.Build.Evaluation.Project.ItemsIgnoringCondition*
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: ItemsIgnoringCondition
  nameWithType: Project.ItemsIgnoringCondition
- uid: Microsoft.Build.Evaluation.Project.ItemTypes*
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: ItemTypes
  nameWithType: Project.ItemTypes
- uid: Microsoft.Build.Evaluation.Project.MarkDirty*
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: MarkDirty
  nameWithType: Project.MarkDirty
- uid: Microsoft.Build.Evaluation.Project.ProjectCollection*
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: ProjectCollection
  nameWithType: Project.ProjectCollection
- uid: Microsoft.Build.Evaluation.Project.ProjectFileLocation*
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: ProjectFileLocation
  nameWithType: Project.ProjectFileLocation
- uid: Microsoft.Build.Evaluation.Project.Properties*
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: Properties
  nameWithType: Project.Properties
- uid: Microsoft.Build.Evaluation.Project.ReevaluateIfNecessary*
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: ReevaluateIfNecessary
  nameWithType: Project.ReevaluateIfNecessary
- uid: Microsoft.Build.Evaluation.Project.RemoveGlobalProperty*
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: RemoveGlobalProperty
  nameWithType: Project.RemoveGlobalProperty
- uid: Microsoft.Build.Evaluation.Project.RemoveItem*
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: RemoveItem
  nameWithType: Project.RemoveItem
- uid: Microsoft.Build.Evaluation.Project.RemoveItems*
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: RemoveItems
  nameWithType: Project.RemoveItems
- uid: Microsoft.Build.Evaluation.Project.RemoveProperty*
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: RemoveProperty
  nameWithType: Project.RemoveProperty
- uid: Microsoft.Build.Evaluation.Project.Save*
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: Save
  nameWithType: Project.Save
- uid: Microsoft.Build.Evaluation.Project.SaveLogicalProject*
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: SaveLogicalProject
  nameWithType: Project.SaveLogicalProject
- uid: Microsoft.Build.Evaluation.Project.SetGlobalProperty*
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: SetGlobalProperty
  nameWithType: Project.SetGlobalProperty
- uid: Microsoft.Build.Evaluation.Project.SetProperty*
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: SetProperty
  nameWithType: Project.SetProperty
- uid: Microsoft.Build.Evaluation.Project.SkipEvaluation*
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: SkipEvaluation
  nameWithType: Project.SkipEvaluation
- uid: Microsoft.Build.Evaluation.Project.SubToolsetVersion*
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: SubToolsetVersion
  nameWithType: Project.SubToolsetVersion
- uid: Microsoft.Build.Evaluation.Project.Targets*
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: Targets
  nameWithType: Project.Targets
- uid: Microsoft.Build.Evaluation.Project.ToolsVersion*
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: ToolsVersion
  nameWithType: Project.ToolsVersion
- uid: Microsoft.Build.Evaluation.Project.Xml*
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: Xml
  nameWithType: Project.Xml
