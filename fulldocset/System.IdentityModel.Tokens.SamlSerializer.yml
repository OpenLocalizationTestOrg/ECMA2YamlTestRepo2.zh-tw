### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Tokens.SamlSerializer
  id: SamlSerializer
  children:
  - System.IdentityModel.Tokens.SamlSerializer.#ctor
  - System.IdentityModel.Tokens.SamlSerializer.LoadAdvice(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)
  - System.IdentityModel.Tokens.SamlSerializer.LoadAssertion(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)
  - System.IdentityModel.Tokens.SamlSerializer.LoadAttribute(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)
  - System.IdentityModel.Tokens.SamlSerializer.LoadCondition(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)
  - System.IdentityModel.Tokens.SamlSerializer.LoadConditions(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)
  - System.IdentityModel.Tokens.SamlSerializer.LoadStatement(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)
  - System.IdentityModel.Tokens.SamlSerializer.PopulateDictionary(System.Xml.IXmlDictionary)
  - System.IdentityModel.Tokens.SamlSerializer.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)
  - System.IdentityModel.Tokens.SamlSerializer.WriteToken(System.IdentityModel.Tokens.SamlSecurityToken,System.Xml.XmlWriter,System.IdentityModel.Selectors.SecurityTokenSerializer)
  langs:
  - csharp
  name: SamlSerializer
  nameWithType: SamlSerializer
  fullName: System.IdentityModel.Tokens.SamlSerializer
  type: Class
  summary: "序列化和還原序列化<xref href=&quot;System.IdentityModel.Tokens.SamlSecurityToken&quot;></xref>物件，以及從 XML 文件。"
  remarks: "XML 序列化為物件的公用屬性和欄位轉換為儲存或傳輸的序列格式 （在此情況下，XML） 的程序。 還原序列化重新建立其原始狀態的 xml 中的物件。       SamlSerializer 類別序列化和還原序列化具有可擴充格式的 SAML 安全性權杖。 不同於許多其他的安全性權杖，<xref:System.IdentityModel.Tokens.SamlSecurityToken>安全性權杖會包含 XML 元素和屬性可以針對應用程式的需求自訂。</xref:System.IdentityModel.Tokens.SamlSecurityToken> 某些 SAML 判斷提示的擴充性點包括`<saml:Advice>`， `<saml:Condition>`，和`<saml:Statement>`項目。 如需有關如何覆寫這些項目的讀取方式的詳細資訊，請參閱<xref:System.IdentityModel.Tokens.SamlSerializer.LoadAdvice%28System.Xml.XmlDictionaryReader%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29>， <xref:System.IdentityModel.Tokens.SamlSerializer.LoadCondition%28System.Xml.XmlDictionaryReader%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29>，和<xref:System.IdentityModel.Tokens.SamlSerializer.LoadStatement%28System.Xml.XmlDictionaryReader%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29>方法。</xref:System.IdentityModel.Tokens.SamlSerializer.LoadStatement%28System.Xml.XmlDictionaryReader%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29> </xref:System.IdentityModel.Tokens.SamlSerializer.LoadCondition%28System.Xml.XmlDictionaryReader%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29> </xref:System.IdentityModel.Tokens.SamlSerializer.LoadAdvice%28System.Xml.XmlDictionaryReader%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29>"
  syntax:
    content: public class SamlSerializer
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSerializer.#ctor
  id: '#ctor'
  parent: System.IdentityModel.Tokens.SamlSerializer
  langs:
  - csharp
  name: SamlSerializer()
  nameWithType: SamlSerializer.SamlSerializer()
  fullName: System.IdentityModel.Tokens.SamlSerializer.SamlSerializer()
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "初始化的新執行個體<xref href=&quot;System.IdentityModel.Tokens.SamlSerializer&quot;></xref>類別。"
  syntax:
    content: public SamlSerializer ();
    parameters: []
  overload: System.IdentityModel.Tokens.SamlSerializer.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSerializer.LoadAdvice(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)
  id: LoadAdvice(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)
  parent: System.IdentityModel.Tokens.SamlSerializer
  langs:
  - csharp
  name: LoadAdvice(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver)
  nameWithType: SamlSerializer.LoadAdvice(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver)
  fullName: System.IdentityModel.Tokens.SamlSerializer.LoadAdvice(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "讀取 SAML 授權單位內所提供的其他資訊<xref uid=&quot;langword_csharp_ &lt;saml:Advice&gt;&quot; name=&quot; &lt;saml:Advice&gt;&quot; href=&quot;&quot;></xref> SAML 判斷提示，使用指定的 XML 讀取器的項目。"
  remarks: "`<saml:Advice>` SAML 判斷提示中的項目是 SAML 權杖的擴充點。 若要建立的序列化程式可以讀取自訂屬性，衍生自<xref:System.IdentityModel.Tokens.SamlSerializer>並且覆寫 LoadAdvice 方法。</xref:System.IdentityModel.Tokens.SamlSerializer>"
  syntax:
    content: public virtual System.IdentityModel.Tokens.SamlAdvice LoadAdvice (System.Xml.XmlDictionaryReader reader, System.IdentityModel.Selectors.SecurityTokenSerializer keyInfoSerializer, System.IdentityModel.Selectors.SecurityTokenResolver outOfBandTokenResolver);
    parameters:
    - id: reader
      type: System.Xml.XmlDictionaryReader
      description: "<xref:System.Xml.XmlDictionaryReader>讀取 SAML 授權單位所提供的其他資訊。</xref:System.Xml.XmlDictionaryReader>"
    - id: keyInfoSerializer
      type: System.IdentityModel.Selectors.SecurityTokenSerializer
      description: "A <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenSerializer&quot;> </xref>讀取<xref uid=&quot;langword_csharp_KeyInfo&quot; name=&quot;KeyInfo&quot; href=&quot;&quot;></xref>子句的數位簽章。"
    - id: outOfBandTokenResolver
      type: System.IdentityModel.Selectors.SecurityTokenResolver
      description: "A <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenResolver&quot;> </xref> ，判定建立數位簽章的安全性權杖。"
    return:
      type: System.IdentityModel.Tokens.SamlAdvice
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SamlAdvice&quot;> </xref> ，其中包含 SAML 授權單位內所提供的其他資訊<xref uid=&quot;langword_csharp_ &lt;saml:Advice&gt;&quot; name=&quot; &lt;saml:Advice&gt;&quot; href=&quot;&quot;></xref> SAML 判斷提示的項目。"
  overload: System.IdentityModel.Tokens.SamlSerializer.LoadAdvice*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>"
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSerializer.LoadAssertion(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)
  id: LoadAssertion(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)
  parent: System.IdentityModel.Tokens.SamlSerializer
  langs:
  - csharp
  name: LoadAssertion(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver)
  nameWithType: SamlSerializer.LoadAssertion(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver)
  fullName: System.IdentityModel.Tokens.SamlSerializer.LoadAssertion(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "從指定的 XML 讀取器讀取 SAML 判斷提示。"
  remarks: "SAML 判斷提示是否包含在`<saml:Assertion>`項目。       <xref:System.IdentityModel.Tokens.SamlSerializer.ReadToken%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29>方法會呼叫 LoadAssertion 方法來讀取 SAML 判斷提示。</xref:System.IdentityModel.Tokens.SamlSerializer.ReadToken%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29>"
  syntax:
    content: public virtual System.IdentityModel.Tokens.SamlAssertion LoadAssertion (System.Xml.XmlDictionaryReader reader, System.IdentityModel.Selectors.SecurityTokenSerializer keyInfoSerializer, System.IdentityModel.Selectors.SecurityTokenResolver outOfBandTokenResolver);
    parameters:
    - id: reader
      type: System.Xml.XmlDictionaryReader
      description: "<xref:System.Xml.XmlDictionaryReader>要讀取 SAML 判斷提示。</xref:System.Xml.XmlDictionaryReader>"
    - id: keyInfoSerializer
      type: System.IdentityModel.Selectors.SecurityTokenSerializer
      description: "A <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenSerializer&quot;> </xref>讀取<xref uid=&quot;langword_csharp_KeyInfo&quot; name=&quot;KeyInfo&quot; href=&quot;&quot;></xref>子句的數位簽章。"
    - id: outOfBandTokenResolver
      type: System.IdentityModel.Selectors.SecurityTokenResolver
      description: "A <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenResolver&quot;> </xref> ，判定建立數位簽章的安全性權杖。"
    return:
      type: System.IdentityModel.Tokens.SamlAssertion
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SamlAssertion&quot;> </xref>表示 SAML 判斷提示。"
  overload: System.IdentityModel.Tokens.SamlSerializer.LoadAssertion*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>"
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSerializer.LoadAttribute(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)
  id: LoadAttribute(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)
  parent: System.IdentityModel.Tokens.SamlSerializer
  langs:
  - csharp
  name: LoadAttribute(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver)
  nameWithType: SamlSerializer.LoadAttribute(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver)
  fullName: System.IdentityModel.Tokens.SamlSerializer.LoadAttribute(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "讀取的屬性，使用指定的 XML 讀取器的 SAML 安全性權杖的主體。"
  remarks: "當應用程式定義本身的屬性集，可能會因為 SAML 屬性的擴充點，瞭解如何讀取這些屬性就需要序列化程式。 SAML 屬性是與 XML 屬性不同。 SAML 屬性包含在`<saml:Attribute>`項目，而且可以包含任何格式正確的 XML，不是只包含屬性。 若要建立的序列化程式可以讀取自訂屬性，衍生自<xref:System.IdentityModel.Tokens.SamlSerializer>並且覆寫 LoadAttribute 方法。</xref:System.IdentityModel.Tokens.SamlSerializer>"
  syntax:
    content: public virtual System.IdentityModel.Tokens.SamlAttribute LoadAttribute (System.Xml.XmlDictionaryReader reader, System.IdentityModel.Selectors.SecurityTokenSerializer keyInfoSerializer, System.IdentityModel.Selectors.SecurityTokenResolver outOfBandTokenResolver);
    parameters:
    - id: reader
      type: System.Xml.XmlDictionaryReader
      description: "<xref:System.Xml.XmlDictionaryReader>要讀取屬性。</xref:System.Xml.XmlDictionaryReader>"
    - id: keyInfoSerializer
      type: System.IdentityModel.Selectors.SecurityTokenSerializer
      description: "A <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenSerializer&quot;> </xref>讀取<xref uid=&quot;langword_csharp_KeyInfo&quot; name=&quot;KeyInfo&quot; href=&quot;&quot;></xref>子句的數位簽章。"
    - id: outOfBandTokenResolver
      type: System.IdentityModel.Selectors.SecurityTokenResolver
      description: "A <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenResolver&quot;> </xref> ，判定建立數位簽章的安全性權杖。"
    return:
      type: System.IdentityModel.Tokens.SamlAttribute
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SamlAttribute&quot;> </xref>表示 SAML 安全性權杖的主體屬性的宣告。"
  overload: System.IdentityModel.Tokens.SamlSerializer.LoadAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSerializer.LoadCondition(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)
  id: LoadCondition(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)
  parent: System.IdentityModel.Tokens.SamlSerializer
  langs:
  - csharp
  name: LoadCondition(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver)
  nameWithType: SamlSerializer.LoadCondition(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver)
  fullName: System.IdentityModel.Tokens.SamlSerializer.LoadCondition(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "讀取量使用指定的 XML 讀取器的 SAML 判斷提示之有效性時必須採取納入考量的條件。"
  remarks: "當應用程式定義它自己組條件，可能會因為`<saml:Condition>`項目是擴充點，就需要瞭解如何讀取這些條件的序列化。 若要建立的序列化程式可以讀取自訂屬性，衍生自<xref:System.IdentityModel.Tokens.SamlSerializer>並且覆寫 LoadCondition 方法。</xref:System.IdentityModel.Tokens.SamlSerializer>"
  syntax:
    content: public virtual System.IdentityModel.Tokens.SamlCondition LoadCondition (System.Xml.XmlDictionaryReader reader, System.IdentityModel.Selectors.SecurityTokenSerializer keyInfoSerializer, System.IdentityModel.Selectors.SecurityTokenResolver outOfBandTokenResolver);
    parameters:
    - id: reader
      type: System.Xml.XmlDictionaryReader
      description: "<xref:System.Xml.XmlDictionaryReader>要讀取 SAML 條件。</xref:System.Xml.XmlDictionaryReader>"
    - id: keyInfoSerializer
      type: System.IdentityModel.Selectors.SecurityTokenSerializer
      description: "A <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenSerializer&quot;> </xref>讀取<xref uid=&quot;langword_csharp_KeyInfo&quot; name=&quot;KeyInfo&quot; href=&quot;&quot;></xref>子句的數位簽章。"
    - id: outOfBandTokenResolver
      type: System.IdentityModel.Selectors.SecurityTokenResolver
      description: "A <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenResolver&quot;> </xref> ，判定建立數位簽章的安全性權杖。"
    return:
      type: System.IdentityModel.Tokens.SamlCondition
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SamlCondition&quot;> </xref>條件必須考量評量 SAML 判斷提示之有效性時加以指定。"
  overload: System.IdentityModel.Tokens.SamlSerializer.LoadCondition*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSerializer.LoadConditions(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)
  id: LoadConditions(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)
  parent: System.IdentityModel.Tokens.SamlSerializer
  langs:
  - csharp
  name: LoadConditions(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver)
  nameWithType: SamlSerializer.LoadConditions(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver)
  fullName: System.IdentityModel.Tokens.SamlSerializer.LoadConditions(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "讀取一組的評量 SAML 判斷提示，使用指定的 XML 讀取器的有效性時必須採取納入考量的條件。"
  remarks: "LoadConditions 方法的內容讀取`<saml:Conditions>`項目。"
  syntax:
    content: public virtual System.IdentityModel.Tokens.SamlConditions LoadConditions (System.Xml.XmlDictionaryReader reader, System.IdentityModel.Selectors.SecurityTokenSerializer keyInfoSerializer, System.IdentityModel.Selectors.SecurityTokenResolver outOfBandTokenResolver);
    parameters:
    - id: reader
      type: System.Xml.XmlDictionaryReader
      description: "<xref:System.Xml.XmlDictionaryReader>讀取這些 SAML 條件。</xref:System.Xml.XmlDictionaryReader>"
    - id: keyInfoSerializer
      type: System.IdentityModel.Selectors.SecurityTokenSerializer
      description: "A <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenSerializer&quot;> </xref>讀取<xref uid=&quot;langword_csharp_KeyInfo&quot; name=&quot;KeyInfo&quot; href=&quot;&quot;></xref>子句的數位簽章。"
    - id: outOfBandTokenResolver
      type: System.IdentityModel.Selectors.SecurityTokenResolver
      description: "A <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenResolver&quot;> </xref> ，判定建立數位簽章的安全性權杖。"
    return:
      type: System.IdentityModel.Tokens.SamlConditions
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SamlConditions&quot;> </xref>一組條件，必須考量評量 SAML 判斷提示之有效性時加以指定。"
  overload: System.IdentityModel.Tokens.SamlSerializer.LoadConditions*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSerializer.LoadStatement(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)
  id: LoadStatement(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)
  parent: System.IdentityModel.Tokens.SamlSerializer
  langs:
  - csharp
  name: LoadStatement(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver)
  nameWithType: SamlSerializer.LoadStatement(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver)
  fullName: System.IdentityModel.Tokens.SamlSerializer.LoadStatement(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "讀取 SAML 陳述式，使用指定的 XML 讀取器。"
  remarks: "<xref:System.IdentityModel.Tokens.SamlSecurityToken>安全性權杖會指定其宣告使用 SAML 判斷提示，其中指定宣告的詳細資料，在 SAML 陳述式中。</xref:System.IdentityModel.Tokens.SamlSecurityToken> SAML 規格會定義下列陳述式類型:- <xref:System.IdentityModel.Tokens.SamlAttributeStatement>- <xref:System.IdentityModel.Tokens.SamlAuthenticationStatement>- <xref:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement>- <xref:System.IdentityModel.Tokens.SamlSubjectStatement>LoadStatement 方法會讀取 SAML 陳述式先前所列。</xref:System.IdentityModel.Tokens.SamlSubjectStatement> </xref:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement> </xref:System.IdentityModel.Tokens.SamlAuthenticationStatement> </xref:System.IdentityModel.Tokens.SamlAttributeStatement> 當自訂陳述式所定義且由應用程式時，建立序列化程式讀取它們的內容。 若要建立自訂序列化程式，衍生自<xref:System.IdentityModel.Tokens.SamlSerializer>並且覆寫 LoadStatement 方法。</xref:System.IdentityModel.Tokens.SamlSerializer> 自訂的 SAML 陳述式內所包含`<saml:Statement>`項目。"
  example:
  - "<xref:System.IdentityModel.Tokens.SamlAttributeStatement>  \n  \n <xref:System.IdentityModel.Tokens.SamlAuthenticationStatement>  \n  \n <xref:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement>  \n  \n <xref:System.IdentityModel.Tokens.SamlSubjectStatement>  \n  \n <xref:System.IdentityModel.Tokens.SamlStatement>"
  syntax:
    content: public virtual System.IdentityModel.Tokens.SamlStatement LoadStatement (System.Xml.XmlDictionaryReader reader, System.IdentityModel.Selectors.SecurityTokenSerializer keyInfoSerializer, System.IdentityModel.Selectors.SecurityTokenResolver outOfBandTokenResolver);
    parameters:
    - id: reader
      type: System.Xml.XmlDictionaryReader
      description: "<xref:System.Xml.XmlDictionaryReader>要讀取 SAML 陳述式。</xref:System.Xml.XmlDictionaryReader>"
    - id: keyInfoSerializer
      type: System.IdentityModel.Selectors.SecurityTokenSerializer
      description: "A <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenSerializer&quot;> </xref>讀取<xref uid=&quot;langword_csharp_KeyInfo&quot; name=&quot;KeyInfo&quot; href=&quot;&quot;></xref>子句的數位簽章。"
    - id: outOfBandTokenResolver
      type: System.IdentityModel.Selectors.SecurityTokenResolver
      description: "A <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenResolver&quot;> </xref> ，判定建立數位簽章的安全性權杖。"
    return:
      type: System.IdentityModel.Tokens.SamlStatement
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SamlStatement&quot;> </xref>表示 SAML 陳述式。"
  overload: System.IdentityModel.Tokens.SamlSerializer.LoadStatement*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSerializer.PopulateDictionary(System.Xml.IXmlDictionary)
  id: PopulateDictionary(System.Xml.IXmlDictionary)
  parent: System.IdentityModel.Tokens.SamlSerializer
  langs:
  - csharp
  name: PopulateDictionary(IXmlDictionary)
  nameWithType: SamlSerializer.PopulateDictionary(IXmlDictionary)
  fullName: System.IdentityModel.Tokens.SamlSerializer.PopulateDictionary(IXmlDictionary)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "會取代預設的 XML 元素和屬性所指定的字典的項目和屬性與這個序列化程式辨識一組。"
  remarks: "使用自訂設定的 XML 項目時的 PopulateDictionary 方法定義的其中一個擴充性點的 SAML 判斷提示。 擴充性點的 SAML 判斷提示包括`<saml:Advice>`， `<saml:Condition>`，和`<saml:Statement>`項目。 如需有關如何覆寫這些項目的讀取方式的詳細資訊，請參閱<xref:System.IdentityModel.Tokens.SamlSerializer.LoadAdvice%28System.Xml.XmlDictionaryReader%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29>， <xref:System.IdentityModel.Tokens.SamlSerializer.LoadCondition%28System.Xml.XmlDictionaryReader%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29>，和<xref:System.IdentityModel.Tokens.SamlSerializer.LoadStatement%28System.Xml.XmlDictionaryReader%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29>方法。</xref:System.IdentityModel.Tokens.SamlSerializer.LoadStatement%28System.Xml.XmlDictionaryReader%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29> </xref:System.IdentityModel.Tokens.SamlSerializer.LoadCondition%28System.Xml.XmlDictionaryReader%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29> </xref:System.IdentityModel.Tokens.SamlSerializer.LoadAdvice%28System.Xml.XmlDictionaryReader%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29>"
  syntax:
    content: public void PopulateDictionary (System.Xml.IXmlDictionary dictionary);
    parameters:
    - id: dictionary
      type: System.Xml.IXmlDictionary
      description: "<xref:System.Xml.IXmlDictionary>，其中包含 XML 元素和屬性的集合。</xref:System.Xml.IXmlDictionary>"
  overload: System.IdentityModel.Tokens.SamlSerializer.PopulateDictionary*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSerializer.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)
  id: ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)
  parent: System.IdentityModel.Tokens.SamlSerializer
  langs:
  - csharp
  name: ReadToken(XmlReader,SecurityTokenSerializer,SecurityTokenResolver)
  nameWithType: SamlSerializer.ReadToken(XmlReader,SecurityTokenSerializer,SecurityTokenResolver)
  fullName: System.IdentityModel.Tokens.SamlSerializer.ReadToken(XmlReader,SecurityTokenSerializer,SecurityTokenResolver)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "從指定的 XML 讀取器讀取 SAML 安全性權杖。"
  remarks: "ReadToken 方法呼叫<xref:System.IdentityModel.Tokens.SamlSerializer.LoadAssertion%28System.Xml.XmlDictionaryReader%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29>方法來讀取 SAML 判斷提示。</xref:System.IdentityModel.Tokens.SamlSerializer.LoadAssertion%28System.Xml.XmlDictionaryReader%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29>"
  syntax:
    content: public virtual System.IdentityModel.Tokens.SamlSecurityToken ReadToken (System.Xml.XmlReader reader, System.IdentityModel.Selectors.SecurityTokenSerializer keyInfoSerializer, System.IdentityModel.Selectors.SecurityTokenResolver outOfBandTokenResolver);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "<xref:System.Xml.XmlDictionaryReader>讀取<xref href=&quot;System.IdentityModel.Tokens.SamlSecurityToken&quot;></xref>安全性權杖。</xref:System.Xml.XmlDictionaryReader>"
    - id: keyInfoSerializer
      type: System.IdentityModel.Selectors.SecurityTokenSerializer
      description: "A <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenSerializer&quot;> </xref>讀取<xref uid=&quot;langword_csharp_KeyInfo&quot; name=&quot;KeyInfo&quot; href=&quot;&quot;></xref>子句的數位簽章。"
    - id: outOfBandTokenResolver
      type: System.IdentityModel.Selectors.SecurityTokenResolver
      description: "A <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenResolver&quot;> </xref> ，判定建立數位簽章的安全性權杖。"
    return:
      type: System.IdentityModel.Tokens.SamlSecurityToken
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SamlSecurityToken&quot;> </xref>安全性權杖。"
  overload: System.IdentityModel.Tokens.SamlSerializer.ReadToken*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "<code>reader</code>是指不包含數位簽章的 XML 項目。"
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSerializer.WriteToken(System.IdentityModel.Tokens.SamlSecurityToken,System.Xml.XmlWriter,System.IdentityModel.Selectors.SecurityTokenSerializer)
  id: WriteToken(System.IdentityModel.Tokens.SamlSecurityToken,System.Xml.XmlWriter,System.IdentityModel.Selectors.SecurityTokenSerializer)
  parent: System.IdentityModel.Tokens.SamlSerializer
  langs:
  - csharp
  name: WriteToken(SamlSecurityToken,XmlWriter,SecurityTokenSerializer)
  nameWithType: SamlSerializer.WriteToken(SamlSecurityToken,XmlWriter,SecurityTokenSerializer)
  fullName: System.IdentityModel.Tokens.SamlSerializer.WriteToken(SamlSecurityToken,XmlWriter,SecurityTokenSerializer)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "將指定的 SAML 安全性權杖寫入至指定的 XML 序列化程式。"
  remarks: "用來序列化 WriteToken 方法<xref:System.IdentityModel.Tokens.SamlSecurityToken>安全性權杖。</xref:System.IdentityModel.Tokens.SamlSecurityToken> 若要還原序列化<xref:System.IdentityModel.Tokens.SamlSecurityToken>使用<xref:System.IdentityModel.Tokens.SamlSerializer.ReadToken%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29>方法。</xref:System.IdentityModel.Tokens.SamlSerializer.ReadToken%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29> </xref:System.IdentityModel.Tokens.SamlSecurityToken>"
  syntax:
    content: public virtual void WriteToken (System.IdentityModel.Tokens.SamlSecurityToken token, System.Xml.XmlWriter writer, System.IdentityModel.Selectors.SecurityTokenSerializer keyInfoSerializer);
    parameters:
    - id: token
      type: System.IdentityModel.Tokens.SamlSecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SamlSecurityToken&quot;> </xref>寫入。"
    - id: writer
      type: System.Xml.XmlWriter
      description: "<xref:System.Xml.XmlDictionaryWriter>要寫入 SAML 授權陳述式。</xref:System.Xml.XmlDictionaryWriter>"
    - id: keyInfoSerializer
      type: System.IdentityModel.Selectors.SecurityTokenSerializer
      description: "A <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenSerializer&quot;> </xref>能夠寫入<xref uid=&quot;langword_csharp_KeyInfo&quot; name=&quot;KeyInfo&quot; href=&quot;&quot;></xref>子句。"
  overload: System.IdentityModel.Tokens.SamlSerializer.WriteToken*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>writer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>       -or-       <code>token</code> is<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>"
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.IdentityModel.Tokens.SamlSerializer.#ctor
  parent: System.IdentityModel.Tokens.SamlSerializer
  isExternal: false
  name: SamlSerializer()
  nameWithType: SamlSerializer.SamlSerializer()
  fullName: System.IdentityModel.Tokens.SamlSerializer.SamlSerializer()
- uid: System.IdentityModel.Tokens.SamlSerializer.LoadAdvice(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)
  parent: System.IdentityModel.Tokens.SamlSerializer
  isExternal: false
  name: LoadAdvice(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver)
  nameWithType: SamlSerializer.LoadAdvice(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver)
  fullName: System.IdentityModel.Tokens.SamlSerializer.LoadAdvice(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver)
- uid: System.IdentityModel.Tokens.SamlAdvice
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SamlAdvice
  nameWithType: SamlAdvice
  fullName: System.IdentityModel.Tokens.SamlAdvice
- uid: System.Xml.XmlDictionaryReader
  parent: System.Xml
  isExternal: true
  name: XmlDictionaryReader
  nameWithType: XmlDictionaryReader
  fullName: System.Xml.XmlDictionaryReader
- uid: System.IdentityModel.Selectors.SecurityTokenSerializer
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: SecurityTokenSerializer
  nameWithType: SecurityTokenSerializer
  fullName: System.IdentityModel.Selectors.SecurityTokenSerializer
- uid: System.IdentityModel.Selectors.SecurityTokenResolver
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: SecurityTokenResolver
  nameWithType: SecurityTokenResolver
  fullName: System.IdentityModel.Selectors.SecurityTokenResolver
- uid: System.IdentityModel.Tokens.SamlSerializer.LoadAssertion(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)
  parent: System.IdentityModel.Tokens.SamlSerializer
  isExternal: false
  name: LoadAssertion(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver)
  nameWithType: SamlSerializer.LoadAssertion(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver)
  fullName: System.IdentityModel.Tokens.SamlSerializer.LoadAssertion(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver)
- uid: System.IdentityModel.Tokens.SamlAssertion
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SamlAssertion
  nameWithType: SamlAssertion
  fullName: System.IdentityModel.Tokens.SamlAssertion
- uid: System.IdentityModel.Tokens.SamlSerializer.LoadAttribute(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)
  parent: System.IdentityModel.Tokens.SamlSerializer
  isExternal: false
  name: LoadAttribute(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver)
  nameWithType: SamlSerializer.LoadAttribute(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver)
  fullName: System.IdentityModel.Tokens.SamlSerializer.LoadAttribute(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver)
- uid: System.IdentityModel.Tokens.SamlAttribute
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SamlAttribute
  nameWithType: SamlAttribute
  fullName: System.IdentityModel.Tokens.SamlAttribute
- uid: System.IdentityModel.Tokens.SamlSerializer.LoadCondition(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)
  parent: System.IdentityModel.Tokens.SamlSerializer
  isExternal: false
  name: LoadCondition(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver)
  nameWithType: SamlSerializer.LoadCondition(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver)
  fullName: System.IdentityModel.Tokens.SamlSerializer.LoadCondition(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver)
- uid: System.IdentityModel.Tokens.SamlCondition
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SamlCondition
  nameWithType: SamlCondition
  fullName: System.IdentityModel.Tokens.SamlCondition
- uid: System.IdentityModel.Tokens.SamlSerializer.LoadConditions(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)
  parent: System.IdentityModel.Tokens.SamlSerializer
  isExternal: false
  name: LoadConditions(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver)
  nameWithType: SamlSerializer.LoadConditions(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver)
  fullName: System.IdentityModel.Tokens.SamlSerializer.LoadConditions(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver)
- uid: System.IdentityModel.Tokens.SamlConditions
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SamlConditions
  nameWithType: SamlConditions
  fullName: System.IdentityModel.Tokens.SamlConditions
- uid: System.IdentityModel.Tokens.SamlSerializer.LoadStatement(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)
  parent: System.IdentityModel.Tokens.SamlSerializer
  isExternal: false
  name: LoadStatement(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver)
  nameWithType: SamlSerializer.LoadStatement(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver)
  fullName: System.IdentityModel.Tokens.SamlSerializer.LoadStatement(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver)
- uid: System.IdentityModel.Tokens.SamlStatement
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SamlStatement
  nameWithType: SamlStatement
  fullName: System.IdentityModel.Tokens.SamlStatement
- uid: System.IdentityModel.Tokens.SamlSerializer.PopulateDictionary(System.Xml.IXmlDictionary)
  parent: System.IdentityModel.Tokens.SamlSerializer
  isExternal: false
  name: PopulateDictionary(IXmlDictionary)
  nameWithType: SamlSerializer.PopulateDictionary(IXmlDictionary)
  fullName: System.IdentityModel.Tokens.SamlSerializer.PopulateDictionary(IXmlDictionary)
- uid: System.Xml.IXmlDictionary
  parent: System.Xml
  isExternal: true
  name: IXmlDictionary
  nameWithType: IXmlDictionary
  fullName: System.Xml.IXmlDictionary
- uid: System.IdentityModel.Tokens.SamlSerializer.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)
  parent: System.IdentityModel.Tokens.SamlSerializer
  isExternal: false
  name: ReadToken(XmlReader,SecurityTokenSerializer,SecurityTokenResolver)
  nameWithType: SamlSerializer.ReadToken(XmlReader,SecurityTokenSerializer,SecurityTokenResolver)
  fullName: System.IdentityModel.Tokens.SamlSerializer.ReadToken(XmlReader,SecurityTokenSerializer,SecurityTokenResolver)
- uid: System.IdentityModel.Tokens.SamlSecurityToken
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SamlSecurityToken
  nameWithType: SamlSecurityToken
  fullName: System.IdentityModel.Tokens.SamlSecurityToken
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.IdentityModel.Tokens.SamlSerializer.WriteToken(System.IdentityModel.Tokens.SamlSecurityToken,System.Xml.XmlWriter,System.IdentityModel.Selectors.SecurityTokenSerializer)
  parent: System.IdentityModel.Tokens.SamlSerializer
  isExternal: false
  name: WriteToken(SamlSecurityToken,XmlWriter,SecurityTokenSerializer)
  nameWithType: SamlSerializer.WriteToken(SamlSecurityToken,XmlWriter,SecurityTokenSerializer)
  fullName: System.IdentityModel.Tokens.SamlSerializer.WriteToken(SamlSecurityToken,XmlWriter,SecurityTokenSerializer)
- uid: System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.IdentityModel.Tokens.SamlSerializer.#ctor*
  parent: System.IdentityModel.Tokens.SamlSerializer
  isExternal: false
  name: SamlSerializer
  nameWithType: SamlSerializer.SamlSerializer
- uid: System.IdentityModel.Tokens.SamlSerializer.LoadAdvice*
  parent: System.IdentityModel.Tokens.SamlSerializer
  isExternal: false
  name: LoadAdvice
  nameWithType: SamlSerializer.LoadAdvice
- uid: System.IdentityModel.Tokens.SamlSerializer.LoadAssertion*
  parent: System.IdentityModel.Tokens.SamlSerializer
  isExternal: false
  name: LoadAssertion
  nameWithType: SamlSerializer.LoadAssertion
- uid: System.IdentityModel.Tokens.SamlSerializer.LoadAttribute*
  parent: System.IdentityModel.Tokens.SamlSerializer
  isExternal: false
  name: LoadAttribute
  nameWithType: SamlSerializer.LoadAttribute
- uid: System.IdentityModel.Tokens.SamlSerializer.LoadCondition*
  parent: System.IdentityModel.Tokens.SamlSerializer
  isExternal: false
  name: LoadCondition
  nameWithType: SamlSerializer.LoadCondition
- uid: System.IdentityModel.Tokens.SamlSerializer.LoadConditions*
  parent: System.IdentityModel.Tokens.SamlSerializer
  isExternal: false
  name: LoadConditions
  nameWithType: SamlSerializer.LoadConditions
- uid: System.IdentityModel.Tokens.SamlSerializer.LoadStatement*
  parent: System.IdentityModel.Tokens.SamlSerializer
  isExternal: false
  name: LoadStatement
  nameWithType: SamlSerializer.LoadStatement
- uid: System.IdentityModel.Tokens.SamlSerializer.PopulateDictionary*
  parent: System.IdentityModel.Tokens.SamlSerializer
  isExternal: false
  name: PopulateDictionary
  nameWithType: SamlSerializer.PopulateDictionary
- uid: System.IdentityModel.Tokens.SamlSerializer.ReadToken*
  parent: System.IdentityModel.Tokens.SamlSerializer
  isExternal: false
  name: ReadToken
  nameWithType: SamlSerializer.ReadToken
- uid: System.IdentityModel.Tokens.SamlSerializer.WriteToken*
  parent: System.IdentityModel.Tokens.SamlSerializer
  isExternal: false
  name: WriteToken
  nameWithType: SamlSerializer.WriteToken
