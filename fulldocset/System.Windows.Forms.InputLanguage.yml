### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.InputLanguage
  id: InputLanguage
  children:
  - System.Windows.Forms.InputLanguage.Culture
  - System.Windows.Forms.InputLanguage.CurrentInputLanguage
  - System.Windows.Forms.InputLanguage.DefaultInputLanguage
  - System.Windows.Forms.InputLanguage.Equals(System.Object)
  - System.Windows.Forms.InputLanguage.FromCulture(System.Globalization.CultureInfo)
  - System.Windows.Forms.InputLanguage.GetHashCode
  - System.Windows.Forms.InputLanguage.Handle
  - System.Windows.Forms.InputLanguage.InstalledInputLanguages
  - System.Windows.Forms.InputLanguage.LayoutName
  langs:
  - csharp
  name: InputLanguage
  nameWithType: InputLanguage
  fullName: System.Windows.Forms.InputLanguage
  type: Class
  summary: "提供方法和欄位來管理的輸入的語言。 這個類別無法被繼承。"
  remarks: "輸入的語言是文化特性] / [鍵盤配置組用來決定如何在鍵盤上的實體索引鍵對應或繪製在語言中的字元。 輸入的語言根據 Windows 輸入法地區設定識別項，例如 Platform SDK 函式傳回`GetKeyboardLayout`。 輸入法地區設定識別項也稱為鍵盤配置 (HKL) 值的控制代碼。       使用`static`尋找所有已安裝對應的系統，以及變更執行緒或處理序的輸入的語言所提供的方法。 呼叫<xref:System.Windows.Forms.InputLanguage.CurrentInputLanguage%2A>取得目前輸入語言。</xref:System.Windows.Forms.InputLanguage.CurrentInputLanguage%2A> 呼叫<xref:System.Windows.Forms.InputLanguage.DefaultInputLanguage%2A>預設輸入語言。</xref:System.Windows.Forms.InputLanguage.DefaultInputLanguage%2A> 呼叫<xref:System.Windows.Forms.InputLanguage.InstalledInputLanguages%2A>在此系統中取得所有已安裝的語言。</xref:System.Windows.Forms.InputLanguage.InstalledInputLanguages%2A> 您有一份所有已安裝的語言之後，請使用<xref:System.Windows.Forms.InputLanguage.CurrentInputLanguage%2A>若要變更目前輸入語言不同的語言。</xref:System.Windows.Forms.InputLanguage.CurrentInputLanguage%2A>"
  example:
  - "The following code example gets a list of installed languages. The example requires that `textBox1` has been instantiated and that `textBox1.MultiLine` has been set to `true`.  \n  \n [!code-cpp[Classic InputLanguage Example#1](~/add/codesnippet/cpp/t-system.windows.forms.i_2_1.cpp)]\n [!code-vb[Classic InputLanguage Example#1](~/add/codesnippet/visualbasic/t-system.windows.forms.i_2_1.vb)]\n [!code-cs[Classic InputLanguage Example#1](~/add/codesnippet/csharp/t-system.windows.forms.i_2_1.cs)]  \n  \n The next example sets the default input language as the current input language. The example requires that `textBox1` has been instantiated and that `textBox1.MultiLine` has been set to `true`.  \n  \n [!code-cpp[Classic InputLanguage Example#2](~/add/codesnippet/cpp/t-system.windows.forms.i_2_2.cpp)]\n [!code-vb[Classic InputLanguage Example#2](~/add/codesnippet/visualbasic/t-system.windows.forms.i_2_2.vb)]\n [!code-cs[Classic InputLanguage Example#2](~/add/codesnippet/csharp/t-system.windows.forms.i_2_2.cs)]"
  syntax:
    content: public sealed class InputLanguage
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Forms.InputLanguage.Culture
  id: Culture
  parent: System.Windows.Forms.InputLanguage
  langs:
  - csharp
  name: Culture
  nameWithType: InputLanguage.Culture
  fullName: System.Windows.Forms.InputLanguage.Culture
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得目前輸入語言的文化特性。"
  remarks: ''
  example:
  - "The following code example gets the <xref:System.Windows.Forms.InputLanguage> for the current input language. A text box displays this input language and the name of the input language.  \n  \n This code assumes that `textBox1` has been instantiated.  \n  \n [!code-cpp[Classic InputLanguage.Culture Example#1](~/add/codesnippet/cpp/p-system.windows.forms.i_11_1.cpp)]\n [!code-cs[Classic InputLanguage.Culture Example#1](~/add/codesnippet/csharp/p-system.windows.forms.i_11_1.cs)]\n [!code-vb[Classic InputLanguage.Culture Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.i_11_1.vb)]"
  syntax:
    content: public System.Globalization.CultureInfo Culture { get; }
    return:
      type: System.Globalization.CultureInfo
      description: "A <xref:System.Globalization.CultureInfo>，代表目前的輸入語言的文化特性。</xref:System.Globalization.CultureInfo>"
  overload: System.Windows.Forms.InputLanguage.Culture*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.InputLanguage.CurrentInputLanguage
  id: CurrentInputLanguage
  parent: System.Windows.Forms.InputLanguage
  langs:
  - csharp
  name: CurrentInputLanguage
  nameWithType: InputLanguage.CurrentInputLanguage
  fullName: System.Windows.Forms.InputLanguage.CurrentInputLanguage
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得或設定目前執行緒的輸入的語言。"
  remarks: ''
  example:
  - "The following code example gets and displays the name of the current input language. This code assumes that `textBox1` has been instantiated.  \n  \n [!code-cpp[Classic InputLanguage.CurrentInputLanguage Example#1](~/add/codesnippet/cpp/p-system.windows.forms.i_10_1.cpp)]\n [!code-cs[Classic InputLanguage.CurrentInputLanguage Example#1](~/add/codesnippet/csharp/p-system.windows.forms.i_10_1.cs)]\n [!code-vb[Classic InputLanguage.CurrentInputLanguage Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.i_10_1.vb)]"
  syntax:
    content: public static System.Windows.Forms.InputLanguage CurrentInputLanguage { get; set; }
    return:
      type: System.Windows.Forms.InputLanguage
      description: "<xref href=&quot;System.Windows.Forms.InputLanguage&quot;> </xref> ，代表目前執行緒的輸入的語言。"
  overload: System.Windows.Forms.InputLanguage.CurrentInputLanguage*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "系統無法辨識的輸入的語言。"
  platform:
  - net462
- uid: System.Windows.Forms.InputLanguage.DefaultInputLanguage
  id: DefaultInputLanguage
  parent: System.Windows.Forms.InputLanguage
  langs:
  - csharp
  name: DefaultInputLanguage
  nameWithType: InputLanguage.DefaultInputLanguage
  fullName: System.Windows.Forms.InputLanguage.DefaultInputLanguage
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得系統的預設輸入的語言。"
  remarks: ''
  example:
  - "The following code example gets the default input language and prints its name in a text box. This code assumes that `textBox1` has been instantiated.  \n  \n [!code-cpp[Classic InputLanguage.DefaultInputLanguage Example#1](~/add/codesnippet/cpp/p-system.windows.forms.i_19_1.cpp)]\n [!code-cs[Classic InputLanguage.DefaultInputLanguage Example#1](~/add/codesnippet/csharp/p-system.windows.forms.i_19_1.cs)]\n [!code-vb[Classic InputLanguage.DefaultInputLanguage Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.i_19_1.vb)]"
  syntax:
    content: public static System.Windows.Forms.InputLanguage DefaultInputLanguage { get; }
    return:
      type: System.Windows.Forms.InputLanguage
      description: "<xref href=&quot;System.Windows.Forms.InputLanguage&quot;> </xref>代表預設輸入法系統的語言。"
  overload: System.Windows.Forms.InputLanguage.DefaultInputLanguage*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.InputLanguage.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Windows.Forms.InputLanguage
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: InputLanguage.Equals(Object)
  fullName: System.Windows.Forms.InputLanguage.Equals(Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "指定兩個輸入的語言是否相等。"
  syntax:
    content: public override bool Equals (object value);
    parameters:
    - id: value
      type: System.Object
      description: "要測試相等的語言。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果兩種語言都相同。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Forms.InputLanguage.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.InputLanguage.FromCulture(System.Globalization.CultureInfo)
  id: FromCulture(System.Globalization.CultureInfo)
  parent: System.Windows.Forms.InputLanguage
  langs:
  - csharp
  name: FromCulture(CultureInfo)
  nameWithType: InputLanguage.FromCulture(CultureInfo)
  fullName: System.Windows.Forms.InputLanguage.FromCulture(CultureInfo)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "傳回與指定的文化特性相關聯的輸入的語言。"
  remarks: "從已安裝鍵盤中，選取 FromCulture 方法。 具體而言，這個方法會執行下列作業︰ 1。  取得相關聯的 LCID `culture`。      2.  取得可用的輸入的語言識別項 (HKLs) 的完整清單，從`GetKeyboardLayoutList`函式。      3.  尋找對應到從 LCID HKL `culture`，如果有的話。      4.  傳回與該 HKL 相關聯的已安裝的鍵盤。      5.  如果不找到任何鍵盤，則會傳回`null`。      > [!NOTE] > FromCulture 方法永遠不會嘗試載入，或如果其中一個未安裝的安裝其他的鍵盤`culture`。 使用平台 SDK 函式`LoadKeyboardLayout`，若要安裝其他的鍵盤。"
  example:
  - "The following code example sets the default input language as the current input language.  \n  \n First, <xref:System.Windows.Forms.InputLanguage.DefaultInputLanguage%2A> is called to get the system default language. Next, <xref:System.Windows.Forms.InputLanguage.CurrentInputLanguage%2A> is called to get the current input language. The results are printed in a text box. Then, calling <xref:System.Windows.Forms.InputLanguage.CurrentInputLanguage%2A> with the default input language changes the current input language to the default. The new current input language is displayed in a text box.  \n  \n This code assumes that `textBox1` has been instantiated.  \n  \n [!code-cs[Classic InputLanguage.FromCulture Example#1](~/add/codesnippet/csharp/91c45c32-452b-417e-9efa-_1.cs)]\n [!code-cpp[Classic InputLanguage.FromCulture Example#1](~/add/codesnippet/cpp/91c45c32-452b-417e-9efa-_1.cpp)]\n [!code-vb[Classic InputLanguage.FromCulture Example#1](~/add/codesnippet/visualbasic/91c45c32-452b-417e-9efa-_1.vb)]"
  syntax:
    content: public static System.Windows.Forms.InputLanguage FromCulture (System.Globalization.CultureInfo culture);
    parameters:
    - id: culture
      type: System.Globalization.CultureInfo
      description: "<xref:System.Globalization.CultureInfo>，指定要轉換的文化特性。</xref:System.Globalization.CultureInfo>"
    return:
      type: System.Windows.Forms.InputLanguage
      description: "<xref href=&quot;System.Windows.Forms.InputLanguage&quot;> </xref> ，代表先前選取的輸入的語言。"
  overload: System.Windows.Forms.InputLanguage.FromCulture*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.InputLanguage.GetHashCode
  id: GetHashCode
  parent: System.Windows.Forms.InputLanguage
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: InputLanguage.GetHashCode()
  fullName: System.Windows.Forms.InputLanguage.GetHashCode()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "傳回這個輸入語言的雜湊碼。"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "這個雜湊程式碼的輸入語言。"
  overload: System.Windows.Forms.InputLanguage.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.InputLanguage.Handle
  id: Handle
  parent: System.Windows.Forms.InputLanguage
  langs:
  - csharp
  name: Handle
  nameWithType: InputLanguage.Handle
  fullName: System.Windows.Forms.InputLanguage.Handle
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得控制代碼的輸入語言。"
  remarks: ''
  example:
  - "The following code example gets the current input language. Then it calls Handle to get the handle and prints the results in a text box. The example requires that `textBox1` has been instantiated.  \n  \n [!code-vb[Classic InputLanguage.Handle Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.i_27_1.vb)]\n [!code-cpp[Classic InputLanguage.Handle Example#1](~/add/codesnippet/cpp/p-system.windows.forms.i_27_1.cpp)]\n [!code-cs[Classic InputLanguage.Handle Example#1](~/add/codesnippet/csharp/p-system.windows.forms.i_27_1.cs)]"
  syntax:
    content: public IntPtr Handle { get; }
    return:
      type: System.IntPtr
      description: "<xref:System.IntPtr>，代表這個輸入語言的控制代碼。</xref:System.IntPtr>"
  overload: System.Windows.Forms.InputLanguage.Handle*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.InputLanguage.InstalledInputLanguages
  id: InstalledInputLanguages
  parent: System.Windows.Forms.InputLanguage
  langs:
  - csharp
  name: InstalledInputLanguages
  nameWithType: InputLanguage.InstalledInputLanguages
  fullName: System.Windows.Forms.InputLanguage.InstalledInputLanguages
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得所有已安裝的輸入語言的清單。"
  remarks: ''
  example:
  - "The following code example retrieves all the input languages installed on the computer and displays their names. The code calls InstalledInputLanguages to get the installed languages. A text box displays the list of language names.  \n  \n This code assumes that `textBox1` has been instantiated and that `textBox1.MultiLine` has been set to `true`.  \n  \n [!code-vb[Classic InputLanguage.InstalledInputLanguages Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.i_25_1.vb)]\n [!code-cpp[Classic InputLanguage.InstalledInputLanguages Example#1](~/add/codesnippet/cpp/p-system.windows.forms.i_25_1.cpp)]\n [!code-cs[Classic InputLanguage.InstalledInputLanguages Example#1](~/add/codesnippet/csharp/p-system.windows.forms.i_25_1.cs)]"
  syntax:
    content: public static System.Windows.Forms.InputLanguageCollection InstalledInputLanguages { get; }
    return:
      type: System.Windows.Forms.InputLanguageCollection
      description: "陣列<xref href=&quot;System.Windows.Forms.InputLanguage&quot;></xref>代表安裝在電腦上的輸入的語言的物件。"
  overload: System.Windows.Forms.InputLanguage.InstalledInputLanguages*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.InputLanguage.LayoutName
  id: LayoutName
  parent: System.Windows.Forms.InputLanguage
  langs:
  - csharp
  name: LayoutName
  nameWithType: InputLanguage.LayoutName
  fullName: System.Windows.Forms.InputLanguage.LayoutName
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "出現在電腦上的作業系統的地區設定，請取得目前的鍵盤配置的名稱。"
  remarks: ''
  example:
  - "The following code example gets the culture associated with the current input language and displays the culture name.  \n  \n First, <xref:System.Windows.Forms.InputLanguage.CurrentInputLanguage%2A> is called to get the current input language. Then, <xref:System.Windows.Forms.InputLanguage.Culture%2A> is called to get the culture information for this input language. Finally, <xref:System.Globalization.CultureInfo.EnglishName%2A> is retrieved and displayed in a text box.  \n  \n [!code-cs[Classic InputLanguage.LayoutName Example#1](~/add/codesnippet/csharp/p-system.windows.forms.i_30_1.cs)]\n [!code-cpp[Classic InputLanguage.LayoutName Example#1](~/add/codesnippet/cpp/p-system.windows.forms.i_30_1.cpp)]\n [!code-vb[Classic InputLanguage.LayoutName Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.i_30_1.vb)]"
  syntax:
    content: public string LayoutName { get; }
    return:
      type: System.String
      description: "版面配置的名稱。"
  overload: System.Windows.Forms.InputLanguage.LayoutName*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Windows.Forms.InputLanguage.Culture
  parent: System.Windows.Forms.InputLanguage
  isExternal: false
  name: Culture
  nameWithType: InputLanguage.Culture
  fullName: System.Windows.Forms.InputLanguage.Culture
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Windows.Forms.InputLanguage.CurrentInputLanguage
  parent: System.Windows.Forms.InputLanguage
  isExternal: false
  name: CurrentInputLanguage
  nameWithType: InputLanguage.CurrentInputLanguage
  fullName: System.Windows.Forms.InputLanguage.CurrentInputLanguage
- uid: System.Windows.Forms.InputLanguage
  parent: System.Windows.Forms
  isExternal: false
  name: InputLanguage
  nameWithType: InputLanguage
  fullName: System.Windows.Forms.InputLanguage
- uid: System.Windows.Forms.InputLanguage.DefaultInputLanguage
  parent: System.Windows.Forms.InputLanguage
  isExternal: false
  name: DefaultInputLanguage
  nameWithType: InputLanguage.DefaultInputLanguage
  fullName: System.Windows.Forms.InputLanguage.DefaultInputLanguage
- uid: System.Windows.Forms.InputLanguage.Equals(System.Object)
  parent: System.Windows.Forms.InputLanguage
  isExternal: false
  name: Equals(Object)
  nameWithType: InputLanguage.Equals(Object)
  fullName: System.Windows.Forms.InputLanguage.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.InputLanguage.FromCulture(System.Globalization.CultureInfo)
  parent: System.Windows.Forms.InputLanguage
  isExternal: false
  name: FromCulture(CultureInfo)
  nameWithType: InputLanguage.FromCulture(CultureInfo)
  fullName: System.Windows.Forms.InputLanguage.FromCulture(CultureInfo)
- uid: System.Windows.Forms.InputLanguage.GetHashCode
  parent: System.Windows.Forms.InputLanguage
  isExternal: false
  name: GetHashCode()
  nameWithType: InputLanguage.GetHashCode()
  fullName: System.Windows.Forms.InputLanguage.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Forms.InputLanguage.Handle
  parent: System.Windows.Forms.InputLanguage
  isExternal: false
  name: Handle
  nameWithType: InputLanguage.Handle
  fullName: System.Windows.Forms.InputLanguage.Handle
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Windows.Forms.InputLanguage.InstalledInputLanguages
  parent: System.Windows.Forms.InputLanguage
  isExternal: false
  name: InstalledInputLanguages
  nameWithType: InputLanguage.InstalledInputLanguages
  fullName: System.Windows.Forms.InputLanguage.InstalledInputLanguages
- uid: System.Windows.Forms.InputLanguageCollection
  parent: System.Windows.Forms
  isExternal: false
  name: InputLanguageCollection
  nameWithType: InputLanguageCollection
  fullName: System.Windows.Forms.InputLanguageCollection
- uid: System.Windows.Forms.InputLanguage.LayoutName
  parent: System.Windows.Forms.InputLanguage
  isExternal: false
  name: LayoutName
  nameWithType: InputLanguage.LayoutName
  fullName: System.Windows.Forms.InputLanguage.LayoutName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Forms.InputLanguage.Culture*
  parent: System.Windows.Forms.InputLanguage
  isExternal: false
  name: Culture
  nameWithType: InputLanguage.Culture
- uid: System.Windows.Forms.InputLanguage.CurrentInputLanguage*
  parent: System.Windows.Forms.InputLanguage
  isExternal: false
  name: CurrentInputLanguage
  nameWithType: InputLanguage.CurrentInputLanguage
- uid: System.Windows.Forms.InputLanguage.DefaultInputLanguage*
  parent: System.Windows.Forms.InputLanguage
  isExternal: false
  name: DefaultInputLanguage
  nameWithType: InputLanguage.DefaultInputLanguage
- uid: System.Windows.Forms.InputLanguage.Equals*
  parent: System.Windows.Forms.InputLanguage
  isExternal: false
  name: Equals
  nameWithType: InputLanguage.Equals
- uid: System.Windows.Forms.InputLanguage.FromCulture*
  parent: System.Windows.Forms.InputLanguage
  isExternal: false
  name: FromCulture
  nameWithType: InputLanguage.FromCulture
- uid: System.Windows.Forms.InputLanguage.GetHashCode*
  parent: System.Windows.Forms.InputLanguage
  isExternal: false
  name: GetHashCode
  nameWithType: InputLanguage.GetHashCode
- uid: System.Windows.Forms.InputLanguage.Handle*
  parent: System.Windows.Forms.InputLanguage
  isExternal: false
  name: Handle
  nameWithType: InputLanguage.Handle
- uid: System.Windows.Forms.InputLanguage.InstalledInputLanguages*
  parent: System.Windows.Forms.InputLanguage
  isExternal: false
  name: InstalledInputLanguages
  nameWithType: InputLanguage.InstalledInputLanguages
- uid: System.Windows.Forms.InputLanguage.LayoutName*
  parent: System.Windows.Forms.InputLanguage
  isExternal: false
  name: LayoutName
  nameWithType: InputLanguage.LayoutName
