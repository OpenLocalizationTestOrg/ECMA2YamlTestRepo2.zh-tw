### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.AccessibleObject
  id: AccessibleObject
  children:
  - System.Windows.Forms.AccessibleObject.#ctor
  - System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accChildCount
  - System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accDoDefaultAction(System.Object)
  - System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accFocus
  - System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accHitTest(System.Int32,System.Int32)
  - System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accLocation(System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Object)
  - System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accNavigate(System.Int32,System.Object)
  - System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accParent
  - System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accSelect(System.Int32,System.Object)
  - System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accSelection
  - System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accChild(System.Object)
  - System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accDefaultAction(System.Object)
  - System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accDescription(System.Object)
  - System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accHelp(System.Object)
  - System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accHelpTopic(System.String@,System.Object)
  - System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accKeyboardShortcut(System.Object)
  - System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accName(System.Object)
  - System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accRole(System.Object)
  - System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accState(System.Object)
  - System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accValue(System.Object)
  - System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#set_accName(System.Object,System.String)
  - System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#set_accValue(System.Object,System.String)
  - System.Windows.Forms.AccessibleObject.Bounds
  - System.Windows.Forms.AccessibleObject.DefaultAction
  - System.Windows.Forms.AccessibleObject.Description
  - System.Windows.Forms.AccessibleObject.DoDefaultAction
  - System.Windows.Forms.AccessibleObject.GetChild(System.Int32)
  - System.Windows.Forms.AccessibleObject.GetChildCount
  - System.Windows.Forms.AccessibleObject.GetFocused
  - System.Windows.Forms.AccessibleObject.GetHelpTopic(System.String@)
  - System.Windows.Forms.AccessibleObject.GetSelected
  - System.Windows.Forms.AccessibleObject.Help
  - System.Windows.Forms.AccessibleObject.HitTest(System.Int32,System.Int32)
  - System.Windows.Forms.AccessibleObject.KeyboardShortcut
  - System.Windows.Forms.AccessibleObject.Name
  - System.Windows.Forms.AccessibleObject.Navigate(System.Windows.Forms.AccessibleNavigation)
  - System.Windows.Forms.AccessibleObject.Parent
  - System.Windows.Forms.AccessibleObject.Role
  - System.Windows.Forms.AccessibleObject.Select(System.Windows.Forms.AccessibleSelection)
  - System.Windows.Forms.AccessibleObject.State
  - System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetField(System.String,System.Reflection.BindingFlags)
  - System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetFields(System.Reflection.BindingFlags)
  - System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMember(System.String,System.Reflection.BindingFlags)
  - System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMembers(System.Reflection.BindingFlags)
  - System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMethod(System.String,System.Reflection.BindingFlags)
  - System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])
  - System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMethods(System.Reflection.BindingFlags)
  - System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetProperties(System.Reflection.BindingFlags)
  - System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetProperty(System.String,System.Reflection.BindingFlags)
  - System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  - System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])
  - System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#UnderlyingSystemType
  - System.Windows.Forms.AccessibleObject.UseStdAccessibleObjects(System.IntPtr)
  - System.Windows.Forms.AccessibleObject.UseStdAccessibleObjects(System.IntPtr,System.Int32)
  - System.Windows.Forms.AccessibleObject.Value
  langs:
  - csharp
  name: AccessibleObject
  nameWithType: AccessibleObject
  fullName: System.Windows.Forms.AccessibleObject
  type: Class
  summary: "提供資訊，協助工具應用程式用來調整為殘障使用者的應用程式的使用者介面 (UI)。"
  remarks: "協助工具應用程式可以調整來改善可用性不便的使用者應用程式的功能。       為有視力障礙的使用者，您可以調整以符合其需求的軟體和作業系統功能。 例如，您可以放大文字和影像，並呈現對比。 此外，您就可以配合色盲適當使用的色彩。 如果有嚴重視力障礙的使用者，電腦都可使用螢幕上轉譯的畫面檢閱輔助工具存取的語音或動態的可重新整理，Braille 顯示的文字。       對於使用者而言是聽障人士，您可以設計使用閃爍的工具列中，例如的視覺提示的程式或者，您可以為文字顯示語音的訊息。 例如，當開啟時，`SoundSentry`在控制台中的協助工具選項 功能，提供視覺警告每當系統發出警示音效。       對於不便的使用者，您可以設計控制項可改善或消除使用鍵盤和滑鼠，藉此改善電腦協助工具。 控制台中可提供協助。 比方說，一種替代方法是將數字鍵台而非滑鼠，以瀏覽。 另一個選項，稱為`StickyKeys`，可以讓使用者無法按住兩個或多個索引鍵 （例如 CTRL + P) 一次以一次輸入一個索引鍵來取得相同的結果。       具有認知的使用者和語言有助於行動不便人士，您可以設計以更加符合其需求的軟體程式。 例如，使用明顯或有提示排序、 簡單的顯示、 較少的字和目標小學標準讀取層級可以發揮這些使用者。       針對具有拿取疾病的使用者，您可以設計軟體程式，以消除拿取的模式。       如需有關存取範圍，包括資訊協助工具應用程式，請參閱 MSDN library 中或在 Microsoft 網站上的 Microsoft 協助工具的文件。      > [!NOTE] > 使用 AccessibleObject，您必須加入參考`Accessibility`隨安裝組件[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]。 Windows Form 僅支援 Active Accessibility 2.0。"
  example:
  - "The following code example demonstrates the creation of an accessibility-aware chart control, using the AccessibleObject and <xref:System.Windows.Forms.Control.ControlAccessibleObject> classes to expose accessible information. The control plots two curves along with a legend. The `ChartControlAccessibleObject` class, which derives from `ControlAccessibleObject`, is used in the <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> method to provide custom accessible information for the chart control. Because the chart legend is not an actual <xref:System.Windows.Forms.Control> -based control, but instead is drawn by the chart control, it does not have any built-in accessible information. Because of this, the `ChartControlAccessibleObject` class overrides the <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> method to return the `CurveLegendAccessibleObject` that represents accessible information for each part of the legend. When an accessible-aware application uses this control, the control can provide the necessary accessible information.  \n  \n [!code-vb[System.Windows.Forms.AccessibleObject#1](~/add/codesnippet/visualbasic/t-system.windows.forms.a_7_1.vb)]\n [!code-cs[System.Windows.Forms.AccessibleObject#1](~/add/codesnippet/csharp/t-system.windows.forms.a_7_1.cs)]\n [!code-cpp[System.Windows.Forms.AccessibleObject#1](~/add/codesnippet/cpp/t-system.windows.forms.a_7_1.cpp)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class AccessibleObject : System.Runtime.InteropServices.StandardOleMarshalObject, Accessibility.IAccessible, System.Reflection.IReflect
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.Runtime.InteropServices.StandardOleMarshalObject
  implements:
  - Accessibility.IAccessible
  - System.Reflection.IReflect
  inheritedMembers:
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.#ctor
  id: '#ctor'
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: AccessibleObject()
  nameWithType: AccessibleObject.AccessibleObject()
  fullName: System.Windows.Forms.AccessibleObject.AccessibleObject()
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "初始化的新執行個體<xref href=&quot;System.Windows.Forms.AccessibleObject&quot;></xref>類別。"
  remarks: "一般而言，當您使用這個方法來建立可存取物件時，您可以提供自己的實作的屬性和方法的類別提供您的應用程式特有的功能。"
  syntax:
    content: public AccessibleObject ();
    parameters: []
  overload: System.Windows.Forms.AccessibleObject.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accChildCount
  id: Accessibility#IAccessible#accChildCount
  isEii: true
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: Accessibility.IAccessible.accChildCount
  nameWithType: AccessibleObject.Accessibility.IAccessible.accChildCount
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.accChildCount
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得屬於此物件的子介面的數目。 如需這個成員的說明，請參閱&lt;xref:Accessibility.IAccessible.accChildCount%2A?displayProperty=fullName&gt;。"
  remarks: "這個成員是明確介面成員實作。 它可用時，才<xref:System.Windows.Forms.AccessibleObject>執行個體轉換成<xref:Accessibility.IAccessible>介面。</xref:Accessibility.IAccessible> </xref:System.Windows.Forms.AccessibleObject>"
  syntax:
    content: int Accessibility.IAccessible.accChildCount { get; }
    return:
      type: System.Int32
      description: "屬於此物件的子物件數目。 如果物件有子物件，這個值為 0。"
  overload: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accChildCount*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accDoDefaultAction(System.Object)
  id: Accessibility#IAccessible#accDoDefaultAction(System.Object)
  isEii: true
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: Accessibility.IAccessible.accDoDefaultAction(Object)
  nameWithType: AccessibleObject.Accessibility.IAccessible.accDoDefaultAction(Object)
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.accDoDefaultAction(Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "執行指定的物件預設動作。 並非所有物件都有預設動作。 如需這個成員的說明，請參閱&lt;xref:Accessibility.IAccessible.accDoDefaultAction%2A?displayProperty=fullName&gt;。"
  remarks: "這個成員是明確介面成員實作。 它可用時，才<xref:System.Windows.Forms.AccessibleObject>執行個體轉換成<xref:Accessibility.IAccessible>介面。</xref:Accessibility.IAccessible> </xref:System.Windows.Forms.AccessibleObject>"
  syntax:
    content: void IAccessible.accDoDefaultAction (object childID);
    parameters:
    - id: childID
      type: System.Object
      description: "中的子識別碼<xref href=&quot;Accessibility.IAccessible&quot;></xref>介面/子識別碼配對，代表可存取的物件。"
  overload: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accDoDefaultAction*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accFocus
  id: Accessibility#IAccessible#accFocus
  isEii: true
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: Accessibility.IAccessible.accFocus
  nameWithType: AccessibleObject.Accessibility.IAccessible.accFocus
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.accFocus
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得具有鍵盤焦點的物件。 如需這個成員的說明，請參閱&lt;xref:Accessibility.IAccessible.accFocus%2A?displayProperty=fullName&gt;。"
  remarks: "傳回值屬性的型別 IAccessible.accFocus 取決於具有鍵盤焦點的物件。 下表描述 IAccessible.accFocus 屬性傳回的物件類型。      |型別 |描述 |  |----------|-----------------|  |`null`|此物件沒有鍵盤焦點本身並不包含具有鍵盤焦點的子系。 |  | 整數 |&0;，如果目前的物件具有鍵盤焦點。否則，子可存取物件具有鍵盤焦點的子識別碼。 |  |<xref:Accessibility.IAccessible>|可存取子物件具有鍵盤焦點。 |      這個成員是明確介面成員實作。</xref:Accessibility.IAccessible> 它可用時，才<xref:System.Windows.Forms.AccessibleObject>執行個體轉換成<xref:Accessibility.IAccessible>介面。</xref:Accessibility.IAccessible> </xref:System.Windows.Forms.AccessibleObject>"
  syntax:
    content: object Accessibility.IAccessible.accFocus { get; }
    return:
      type: System.Object
      description: "具有鍵盤焦點的物件。"
  overload: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accFocus*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accHitTest(System.Int32,System.Int32)
  id: Accessibility#IAccessible#accHitTest(System.Int32,System.Int32)
  isEii: true
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: Accessibility.IAccessible.accHitTest(Int32,Int32)
  nameWithType: AccessibleObject.Accessibility.IAccessible.accHitTest(Int32,Int32)
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.accHitTest(Int32,Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得位於指定的螢幕座標的子物件。 如需這個成員的說明，請參閱&lt;xref:Accessibility.IAccessible.accHitTest%2A?displayProperty=fullName&gt;。"
  remarks: "下表描述 IAccessible.accHitTest 方法可以傳回的物件類型。      |型別 |描述 |  |----------|-----------------|  |<xref:Accessibility.IAccessible>|指定方向的可存取物件。 |  | 整數 |&0; 如果指定的點是目前的物件或外部物件的界限。否則，識別指定方向的可存取物件的子識別碼。 |      這個成員是明確介面成員實作。</xref:Accessibility.IAccessible> 它可用時，才<xref:System.Windows.Forms.AccessibleObject>執行個體轉換成<xref:Accessibility.IAccessible>介面。</xref:Accessibility.IAccessible> </xref:System.Windows.Forms.AccessibleObject>"
  syntax:
    content: object IAccessible.accHitTest (int xLeft, int yTop);
    parameters:
    - id: xLeft
      type: System.Int32
      description: "水平座標。"
    - id: yTop
      type: System.Int32
      description: "垂直座標。"
    return:
      type: System.Object
      description: "可存取物件所指定的點<code> xLeft </code>和<code> yTop </code>。"
  overload: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accHitTest*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accLocation(System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Object)
  id: Accessibility#IAccessible#accLocation(System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Object)
  isEii: true
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: Accessibility.IAccessible.accLocation(Int32,Int32,Int32,Int32,Object)
  nameWithType: AccessibleObject.Accessibility.IAccessible.accLocation(Int32,Int32,Int32,Int32,Object)
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.accLocation(Int32,Int32,Int32,Int32,Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得物件目前畫面的位置。 如需這個成員的說明，請參閱&lt;xref:Accessibility.IAccessible.accLocation%2A?displayProperty=fullName&gt;。"
  remarks: "這個成員是明確介面成員實作。 它可用時，才<xref:System.Windows.Forms.AccessibleObject>執行個體轉換成<xref:Accessibility.IAccessible>介面。</xref:Accessibility.IAccessible> </xref:System.Windows.Forms.AccessibleObject>"
  syntax:
    content: void IAccessible.accLocation (out int pxLeft, out int pyTop, out int pcxWidth, out int pcyHeight, object childID);
    parameters:
    - id: pxLeft
      type: System.Int32
      description: "這個方法傳回時，包含物件的左邊緣的 x 座標。 這個參數未初始化便傳遞。"
    - id: pyTop
      type: System.Int32
      description: "這個方法傳回時，包含物件的上邊緣的 y 座標。 這個參數未初始化便傳遞。"
    - id: pcxWidth
      type: System.Int32
      description: "這個方法傳回時，包含物件的寬度。 這個參數未初始化便傳遞。"
    - id: pcyHeight
      type: System.Int32
      description: "這個方法傳回時，包含物件的高度。 這個參數未初始化便傳遞。"
    - id: childID
      type: System.Object
      description: "可存取物件的識別碼。 這個參數是 0，以取得物件或子識別碼來取得物件的子物件的其中一個位置的位置。"
  overload: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accLocation*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accNavigate(System.Int32,System.Object)
  id: Accessibility#IAccessible#accNavigate(System.Int32,System.Object)
  isEii: true
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: Accessibility.IAccessible.accNavigate(Int32,Object)
  nameWithType: AccessibleObject.Accessibility.IAccessible.accNavigate(Int32,Object)
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.accNavigate(Int32,Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "巡覽至可存取之物件相對於目前的物件。 如需這個成員的說明，請參閱&lt;xref:Accessibility.IAccessible.accNavigate%2A?displayProperty=fullName&gt;。"
  remarks: "下表描述 IAccessible.accNavigate 方法可以傳回的物件類型。      |型別 |描述 |  |----------|-----------------|  |`null`|在指定的方向沒有可存取的物件。 |  |<xref:Accessibility.IAccessible>|指定方向的可存取物件。 |  | 整數 |識別指定方向的可存取物件的子識別碼。</xref:Accessibility.IAccessible> 使用父<xref:Accessibility.IAccessible>和子系識別碼來存取可存取的物件。 |      這個成員是明確介面成員實作。</xref:Accessibility.IAccessible> 它可用時，才<xref:System.Windows.Forms.AccessibleObject>執行個體轉換成<xref:Accessibility.IAccessible>介面。</xref:Accessibility.IAccessible> </xref:System.Windows.Forms.AccessibleObject>"
  syntax:
    content: object IAccessible.accNavigate (int navDir, object childID);
    parameters:
    - id: navDir
      type: System.Int32
      description: "其中一個<xref href=&quot;System.Windows.Forms.AccessibleNavigation&quot;></xref>列舉型別，指定要巡覽的方向。"
    - id: childID
      type: System.Object
      description: "可存取物件的識別碼。 這個參數是 0，該物件或啟動從物件的子物件的其中一個子識別碼來啟動。"
    return:
      type: System.Object
      description: "可存取的物件位於所指定的值<code> navDir </code>。"
  overload: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accNavigate*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accParent
  id: Accessibility#IAccessible#accParent
  isEii: true
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: Accessibility.IAccessible.accParent
  nameWithType: AccessibleObject.Accessibility.IAccessible.accParent
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.accParent
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得父代可存取的物件，這個物件。 如需這個成員的說明，請參閱&lt;xref:Accessibility.IAccessible.accParent%2A?displayProperty=fullName&gt;。"
  remarks: "這個成員是明確介面成員實作。 它可用時，才<xref:System.Windows.Forms.AccessibleObject>執行個體轉換成<xref:Accessibility.IAccessible>介面..</xref:Accessibility.IAccessible> </xref:System.Windows.Forms.AccessibleObject>"
  syntax:
    content: object Accessibility.IAccessible.accParent { get; }
    return:
      type: System.Object
      description: "<xref href=&quot;Accessibility.IAccessible&quot;> </xref>表示可存取物件的父系或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果沒有父物件。"
  overload: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accParent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accSelect(System.Int32,System.Object)
  id: Accessibility#IAccessible#accSelect(System.Int32,System.Object)
  isEii: true
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: Accessibility.IAccessible.accSelect(Int32,Object)
  nameWithType: AccessibleObject.Accessibility.IAccessible.accSelect(Int32,Object)
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.accSelect(Int32,Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "修改選取或移動的可存取物件的鍵盤焦點。 如需這個成員的說明，請參閱&lt;xref:Accessibility.IAccessible.accSelect%2A?displayProperty=fullName&gt;。"
  remarks: "下列程式碼說明這<xref:System.Windows.Forms.AccessibleSelection>值來呼叫時指定`Select`來執行複雜的選取作業。</xref:System.Windows.Forms.AccessibleSelection>      |作業 |旗標組合 |  |---------------|----------------------|  |若要模擬按一下 |<xref:System.Windows.Forms.AccessibleSelection> OR <xref:System.Windows.Forms.AccessibleSelection>|  |若要藉由模擬按住 CTRL 並按一下選取的目標項目 |<xref:System.Windows.Forms.AccessibleSelection> OR <xref:System.Windows.Forms.AccessibleSelection>|  |若要取消選取目標項目藉由模擬 CTRL + 按一下 |<xref:System.Windows.Forms.AccessibleSelection> OR <xref:System.Windows.Forms.AccessibleSelection>|  |模擬 SHIFT + 按一下 |<xref:System.Windows.Forms.AccessibleSelection> OR <xref:System.Windows.Forms.AccessibleSelection>|  |選取某個範圍的物件，並將焦點放在最後一個物件 |指定<xref:System.Windows.Forms.AccessibleSelection>上設定選取範圍的錨點開始的物件。</xref:System.Windows.Forms.AccessibleSelection> </xref:System.Windows.Forms.AccessibleSelection> </xref:System.Windows.Forms.AccessibleSelection> </xref:System.Windows.Forms.AccessibleSelection> </xref:System.Windows.Forms.AccessibleSelection> </xref:System.Windows.Forms.AccessibleSelection> </xref:System.Windows.Forms.AccessibleSelection> </xref:System.Windows.Forms.AccessibleSelection> </xref:System.Windows.Forms.AccessibleSelection> 然後呼叫一次選取並指定<xref:System.Windows.Forms.AccessibleSelection>或<xref:System.Windows.Forms.AccessibleSelection>上的最後一個物件。 |  |若要取消選取所有物件 |指定<xref:System.Windows.Forms.AccessibleSelection>任何物件上。</xref:System.Windows.Forms.AccessibleSelection> </xref:System.Windows.Forms.AccessibleSelection> </xref:System.Windows.Forms.AccessibleSelection> 這個旗標會取消選取所有選取的物件，除非選取。 然後呼叫一次選取，並在相同物件上指定<xref:System.Windows.Forms.AccessibleSelection>。 |      這個成員是明確介面成員實作。</xref:System.Windows.Forms.AccessibleSelection> 它可用時，才<xref:System.Windows.Forms.AccessibleObject>執行個體轉換成<xref:Accessibility.IAccessible>介面。</xref:Accessibility.IAccessible> </xref:System.Windows.Forms.AccessibleObject>"
  syntax:
    content: void IAccessible.accSelect (int flagsSelect, object childID);
    parameters:
    - id: flagsSelect
      type: System.Int32
      description: "位元組合<xref href=&quot;System.Windows.Forms.AccessibleSelection&quot;></xref>值。"
    - id: childID
      type: System.Object
      description: "在其上執行選取項目可存取的物件識別碼。 這個參數是 0 時可選取物件或選取其中一個物件的子物件的子識別碼。"
  overload: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accSelect*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accSelection
  id: Accessibility#IAccessible#accSelection
  isEii: true
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: Accessibility.IAccessible.accSelection
  nameWithType: AccessibleObject.Accessibility.IAccessible.accSelection
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.accSelection
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得選取的子系的可存取之物件的物件。 如需這個成員的說明，請參閱&lt;xref:Accessibility.IAccessible.accSelection%2A?displayProperty=fullName&gt;。"
  remarks: "下表描述 IAccessible.accSelection 屬性傳回的物件類型 |型別 |描述 |  |----------|-----------------|  |`null`|沒有選取任何子物件。 |  |<xref:Accessibility.IAccessible>|所選子可存取物件。 |  | 整數 |識別可存取物件所選取的子識別碼。</xref:Accessibility.IAccessible> 使用父<xref:Accessibility.IAccessible>和子系識別碼來存取可存取的物件。 |  |`IEnumVARIANT`|選取的子物件的清單。 |      這個成員是明確介面成員實作。</xref:Accessibility.IAccessible> 它可用時，才<xref:System.Windows.Forms.AccessibleObject>執行個體轉換成<xref:Accessibility.IAccessible>介面。</xref:Accessibility.IAccessible> </xref:System.Windows.Forms.AccessibleObject>"
  syntax:
    content: object Accessibility.IAccessible.accSelection { get; }
    return:
      type: System.Object
      description: "選取的子系的物件，可存取的物件。"
  overload: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accSelection*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accChild(System.Object)
  id: Accessibility#IAccessible#get_accChild(System.Object)
  isEii: true
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: Accessibility.IAccessible.get_accChild(Object)
  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accChild(Object)
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.get_accChild(Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  syntax:
    content: object IAccessible.get_accChild (object childID);
    parameters:
    - id: childID
      type: System.Object
      description: "即將加入。"
    return:
      type: System.Object
      description: "即將加入。"
  overload: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accChild*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accDefaultAction(System.Object)
  id: Accessibility#IAccessible#get_accDefaultAction(System.Object)
  isEii: true
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: Accessibility.IAccessible.get_accDefaultAction(Object)
  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accDefaultAction(Object)
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.get_accDefaultAction(Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  syntax:
    content: string IAccessible.get_accDefaultAction (object childID);
    parameters:
    - id: childID
      type: System.Object
      description: "即將加入。"
    return:
      type: System.String
      description: "即將加入。"
  overload: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accDefaultAction*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accDescription(System.Object)
  id: Accessibility#IAccessible#get_accDescription(System.Object)
  isEii: true
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: Accessibility.IAccessible.get_accDescription(Object)
  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accDescription(Object)
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.get_accDescription(Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  syntax:
    content: string IAccessible.get_accDescription (object childID);
    parameters:
    - id: childID
      type: System.Object
      description: "即將加入。"
    return:
      type: System.String
      description: "即將加入。"
  overload: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accDescription*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accHelp(System.Object)
  id: Accessibility#IAccessible#get_accHelp(System.Object)
  isEii: true
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: Accessibility.IAccessible.get_accHelp(Object)
  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accHelp(Object)
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.get_accHelp(Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  syntax:
    content: string IAccessible.get_accHelp (object childID);
    parameters:
    - id: childID
      type: System.Object
      description: "即將加入。"
    return:
      type: System.String
      description: "即將加入。"
  overload: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accHelp*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accHelpTopic(System.String@,System.Object)
  id: Accessibility#IAccessible#get_accHelpTopic(System.String@,System.Object)
  isEii: true
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: Accessibility.IAccessible.get_accHelpTopic(String,Object)
  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accHelpTopic(String,Object)
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.get_accHelpTopic(String,Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  syntax:
    content: int IAccessible.get_accHelpTopic (out string pszHelpFile, object childID);
    parameters:
    - id: pszHelpFile
      type: System.String
      description: "即將加入。"
    - id: childID
      type: System.Object
      description: "即將加入。"
    return:
      type: System.Int32
      description: "即將加入。"
  overload: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accHelpTopic*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accKeyboardShortcut(System.Object)
  id: Accessibility#IAccessible#get_accKeyboardShortcut(System.Object)
  isEii: true
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: Accessibility.IAccessible.get_accKeyboardShortcut(Object)
  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accKeyboardShortcut(Object)
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.get_accKeyboardShortcut(Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  syntax:
    content: string IAccessible.get_accKeyboardShortcut (object childID);
    parameters:
    - id: childID
      type: System.Object
      description: "即將加入。"
    return:
      type: System.String
      description: "即將加入。"
  overload: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accKeyboardShortcut*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accName(System.Object)
  id: Accessibility#IAccessible#get_accName(System.Object)
  isEii: true
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: Accessibility.IAccessible.get_accName(Object)
  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accName(Object)
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.get_accName(Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  syntax:
    content: string IAccessible.get_accName (object childID);
    parameters:
    - id: childID
      type: System.Object
      description: "即將加入。"
    return:
      type: System.String
      description: "即將加入。"
  overload: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accName*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accRole(System.Object)
  id: Accessibility#IAccessible#get_accRole(System.Object)
  isEii: true
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: Accessibility.IAccessible.get_accRole(Object)
  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accRole(Object)
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.get_accRole(Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  syntax:
    content: object IAccessible.get_accRole (object childID);
    parameters:
    - id: childID
      type: System.Object
      description: "即將加入。"
    return:
      type: System.Object
      description: "即將加入。"
  overload: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accRole*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accState(System.Object)
  id: Accessibility#IAccessible#get_accState(System.Object)
  isEii: true
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: Accessibility.IAccessible.get_accState(Object)
  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accState(Object)
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.get_accState(Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  syntax:
    content: object IAccessible.get_accState (object childID);
    parameters:
    - id: childID
      type: System.Object
      description: "即將加入。"
    return:
      type: System.Object
      description: "即將加入。"
  overload: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accState*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accValue(System.Object)
  id: Accessibility#IAccessible#get_accValue(System.Object)
  isEii: true
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: Accessibility.IAccessible.get_accValue(Object)
  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accValue(Object)
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.get_accValue(Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  syntax:
    content: string IAccessible.get_accValue (object childID);
    parameters:
    - id: childID
      type: System.Object
      description: "即將加入。"
    return:
      type: System.String
      description: "即將加入。"
  overload: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accValue*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#set_accName(System.Object,System.String)
  id: Accessibility#IAccessible#set_accName(System.Object,System.String)
  isEii: true
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: Accessibility.IAccessible.set_accName(Object,String)
  nameWithType: AccessibleObject.Accessibility.IAccessible.set_accName(Object,String)
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.set_accName(Object,String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  syntax:
    content: void IAccessible.set_accName (object childID, string newName);
    parameters:
    - id: childID
      type: System.Object
      description: "即將加入。"
    - id: newName
      type: System.String
      description: "即將加入。"
  overload: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#set_accName*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#set_accValue(System.Object,System.String)
  id: Accessibility#IAccessible#set_accValue(System.Object,System.String)
  isEii: true
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: Accessibility.IAccessible.set_accValue(Object,String)
  nameWithType: AccessibleObject.Accessibility.IAccessible.set_accValue(Object,String)
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.set_accValue(Object,String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  syntax:
    content: void IAccessible.set_accValue (object childID, string newValue);
    parameters:
    - id: childID
      type: System.Object
      description: "即將加入。"
    - id: newValue
      type: System.String
      description: "即將加入。"
  overload: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#set_accValue*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.Bounds
  id: Bounds
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: Bounds
  nameWithType: AccessibleObject.Bounds
  fullName: System.Windows.Forms.AccessibleObject.Bounds
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得可存取物件的大小與位置。"
  remarks: "繫結屬性擷取物件的螢幕座標中的週框矩形。 如果物件具有非矩形的圖案，這個屬性代表最小完全包含在整個物件區域的矩形。 因此，矩形物件，例如清單檢視項目，此物件的週框的座標可以如果失敗測試，藉由呼叫<xref:System.Windows.Forms.AccessibleObject.HitTest%2A>方法，因為<xref:System.Windows.Forms.AccessibleObject.HitTest%2A>決定物件的界限，以像素 x 像素為基礎。</xref:System.Windows.Forms.AccessibleObject.HitTest%2A> </xref:System.Windows.Forms.AccessibleObject.HitTest%2A>"
  example:
  - "The following example demonstrates the creation of an accessibility-aware chart control, using the <xref:System.Windows.Forms.AccessibleObject> and <xref:System.Windows.Forms.Control.ControlAccessibleObject> classes to expose accessible information. The control plots two curves along with a legend. The `ChartControlAccessibleObject` class, which derives from `ControlAccessibleObject`, is used in the <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> method to provide custom accessible information for the chart control. Since the chart legend is not an actual <xref:System.Windows.Forms.Control> -based control, but instead is drawn by the chart control, it does not have any built-in accessible information. Because of this, the `ChartControlAccessibleObject` class overrides the <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> method to return the `CurveLegendAccessibleObject` that represents accessible information for each part of the legend. When an accessible-aware application uses this control, the control can provide the necessary accessible information.  \n  \n This code excerpt demonstrates overriding the Bounds property. See the <xref:System.Windows.Forms.AccessibleObject> class overview for the complete code example.  \n  \n [!code-vb[System.Windows.Forms.AccessibleObject#6](~/add/codesnippet/visualbasic/p-system.windows.forms.a_14_1.vb)]\n [!code-cs[System.Windows.Forms.AccessibleObject#6](~/add/codesnippet/csharp/p-system.windows.forms.a_14_1.cs)]\n [!code-cpp[System.Windows.Forms.AccessibleObject#6](~/add/codesnippet/cpp/p-system.windows.forms.a_14_1.cpp)]"
  syntax:
    content: public virtual System.Drawing.Rectangle Bounds { get; }
    return:
      type: System.Drawing.Rectangle
      description: "A <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> ，代表可存取物件的界限。"
  overload: System.Windows.Forms.AccessibleObject.Bounds*
  exceptions:
  - type: System.Runtime.InteropServices.COMException
    commentId: T:System.Runtime.InteropServices.COMException
    description: "無法擷取控制項的界限。"
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.DefaultAction
  id: DefaultAction
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: DefaultAction
  nameWithType: AccessibleObject.DefaultAction
  fullName: System.Windows.Forms.AccessibleObject.DefaultAction
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得描述物件的預設動作的字串。 並非所有物件都有預設動作。"
  remarks: "字串會描述不物件功能結果的物件執行的動作。 也就是說，列印文件的工具列按鈕會有的預設動作是&quot;Press&quot;，而不是&quot;會列印目前文件 」。 請勿混淆物件的預設動作的值。"
  syntax:
    content: public virtual string DefaultAction { get; }
    return:
      type: System.String
      description: "物件的預設動作的描述或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>若此物件沒有預設動作。"
  overload: System.Windows.Forms.AccessibleObject.DefaultAction*
  exceptions:
  - type: System.Runtime.InteropServices.COMException
    commentId: T:System.Runtime.InteropServices.COMException
    description: "無法擷取控制項的預設動作。"
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.Description
  id: Description
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: Description
  nameWithType: AccessibleObject.Description
  fullName: System.Windows.Forms.AccessibleObject.Description
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得指定之物件的視覺外觀描述的字串。 並非所有物件都有描述。"
  remarks: "這個屬性會描述物件的視覺外觀上與使用者。"
  syntax:
    content: public virtual string Description { get; }
    return:
      type: System.String
      description: "使用者物件的視覺外觀的描述或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果物件沒有描述。"
  overload: System.Windows.Forms.AccessibleObject.Description*
  exceptions:
  - type: System.Runtime.InteropServices.COMException
    commentId: T:System.Runtime.InteropServices.COMException
    description: "無法擷取控制項的描述。"
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.DoDefaultAction
  id: DoDefaultAction
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: DoDefaultAction()
  nameWithType: AccessibleObject.DoDefaultAction()
  fullName: System.Windows.Forms.AccessibleObject.DoDefaultAction()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "執行這個可存取物件相關聯的預設動作。"
  remarks: "用戶端可以藉由檢查物件的擷取物件的預設動作<xref:System.Windows.Forms.AccessibleObject.DefaultAction%2A>屬性。</xref:System.Windows.Forms.AccessibleObject.DefaultAction%2A> 用戶端可以使用取代 DoDefaultAction 自動化 （如果支援），以執行物件的預設動作。 不過，DoDefaultAction 提供簡單的方法最常執行的物件使用的動作。"
  syntax:
    content: public virtual void DoDefaultAction ();
    parameters: []
  overload: System.Windows.Forms.AccessibleObject.DoDefaultAction*
  exceptions:
  - type: System.Runtime.InteropServices.COMException
    commentId: T:System.Runtime.InteropServices.COMException
    description: "無法執行控制項的預設動作。"
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.GetChild(System.Int32)
  id: GetChild(System.Int32)
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: GetChild(Int32)
  nameWithType: AccessibleObject.GetChild(Int32)
  fullName: System.Windows.Forms.AccessibleObject.GetChild(Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "擷取指定索引相對應的可存取子系。"
  remarks: ''
  example:
  - "The following example demonstrates the creation of an accessibility-aware chart control, using the <xref:System.Windows.Forms.AccessibleObject> and <xref:System.Windows.Forms.Control.ControlAccessibleObject> classes to expose accessible information. The control plots two curves along with a legend. The `ChartControlAccessibleObject` class, which derives from `ControlAccessibleObject`, is used in the <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> method to provide custom accessible information for the chart control. Since the chart legend is not an actual <xref:System.Windows.Forms.Control> -based control, but instead is drawn by the chart control, it does not have any built-in accessible information. Because of this, the `ChartControlAccessibleObject` class overrides the GetChild method to return the `CurveLegendAccessibleObject` that represents accessible information for each part of the legend. When an accessible-aware application uses this control, the control can provide the necessary accessible information.  \n  \n This code excerpt demonstrates overriding the GetChild method. See the <xref:System.Windows.Forms.AccessibleObject> class overview for the complete code example.  \n  \n [!code-vb[System.Windows.Forms.AccessibleObject#4](~/add/codesnippet/visualbasic/m-system.windows.forms.a_1_1.vb)]\n [!code-cs[System.Windows.Forms.AccessibleObject#4](~/add/codesnippet/csharp/m-system.windows.forms.a_1_1.cs)]\n [!code-cpp[System.Windows.Forms.AccessibleObject#4](~/add/codesnippet/cpp/m-system.windows.forms.a_1_1.cpp)]"
  syntax:
    content: public virtual System.Windows.Forms.AccessibleObject GetChild (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "可存取的子系的以零為起始的索引。"
    return:
      type: System.Windows.Forms.AccessibleObject
      description: "<xref href=&quot;System.Windows.Forms.AccessibleObject&quot;> </xref> ，代表指定索引相對應的可存取子系。"
  overload: System.Windows.Forms.AccessibleObject.GetChild*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.GetChildCount
  id: GetChildCount
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: GetChildCount()
  nameWithType: AccessibleObject.GetChildCount()
  fullName: System.Windows.Forms.AccessibleObject.GetChildCount()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "擷取屬於可存取物件的子系數目。"
  remarks: ''
  example:
  - "The following example demonstrates the creation of an accessibility-aware chart control, using the <xref:System.Windows.Forms.AccessibleObject> and <xref:System.Windows.Forms.Control.ControlAccessibleObject> classes to expose accessible information. The control plots two curves along with a legend. The `ChartControlAccessibleObject` class, which derives from `ControlAccessibleObject`, is used in the <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> method to provide custom accessible information for the chart control. Since the chart legend is not an actual <xref:System.Windows.Forms.Control> -based control, but instead is drawn by the chart control, it does not have any built-in accessible information. Because of this, the `ChartControlAccessibleObject` class overrides the <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> method to return the `CurveLegendAccessibleObject` that represents accessible information for each part of the legend. When an accessible-aware application uses this control, the control can provide the necessary accessible information.  \n  \n This code demonstrates shows overriding the GetChildCount method. See the <xref:System.Windows.Forms.AccessibleObject> class overview for the complete code example.  \n  \n [!code-vb[System.Windows.Forms.AccessibleObject#4](~/add/codesnippet/visualbasic/m-system.windows.forms.a_7_1.vb)]\n [!code-cs[System.Windows.Forms.AccessibleObject#4](~/add/codesnippet/csharp/m-system.windows.forms.a_7_1.cs)]\n [!code-cpp[System.Windows.Forms.AccessibleObject#4](~/add/codesnippet/cpp/m-system.windows.forms.a_7_1.cpp)]"
  syntax:
    content: public virtual int GetChildCount ();
    parameters: []
    return:
      type: System.Int32
      description: "屬於可存取之物件的子系數目。"
  overload: System.Windows.Forms.AccessibleObject.GetChildCount*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.GetFocused
  id: GetFocused
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: GetFocused()
  nameWithType: AccessibleObject.GetFocused()
  fullName: System.Windows.Forms.AccessibleObject.GetFocused()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "擷取具有鍵盤焦點的物件。"
  remarks: "鍵盤焦點的概念相關的作用中的視窗。 使用中視窗是使用者正在使用的前景視窗。 使用中視窗或使用中視窗的子物件具有鍵盤焦點的物件。       只有一個物件或容器內的項目可以有焦點，一次。 物件具有鍵盤焦點不一定選取的物件。"
  syntax:
    content: public virtual System.Windows.Forms.AccessibleObject GetFocused ();
    parameters: []
    return:
      type: System.Windows.Forms.AccessibleObject
      description: "<xref href=&quot;System.Windows.Forms.AccessibleObject&quot;> </xref> ，指定目前的焦點的子系。 如果物件本身為焦點，這個方法會傳回呼叫的物件。 傳回<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果物件不具有焦點。"
  overload: System.Windows.Forms.AccessibleObject.GetFocused*
  exceptions:
  - type: System.Runtime.InteropServices.COMException
    commentId: T:System.Runtime.InteropServices.COMException
    description: "無法擷取此控制項。"
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.GetHelpTopic(System.String@)
  id: GetHelpTopic(System.String@)
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: GetHelpTopic(String)
  nameWithType: AccessibleObject.GetHelpTopic(String)
  fullName: System.Windows.Forms.AccessibleObject.GetHelpTopic(String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "這個可存取物件相關聯的說明檔中取得說明主題的識別項以及路徑的識別碼。"
  remarks: "若要顯示說明<xref:System.Windows.Forms.AccessibleObject>使用 Windows 說明系統中，您可以傳遞至適當<xref:System.Windows.Forms.Help.ShowHelp%2A?displayProperty=fullName>的<xref:System.Windows.Forms.Help>。</xref:System.Windows.Forms.Help>方法</xref:System.Windows.Forms.Help.ShowHelp%2A?displayProperty=fullName>的檔案名稱與主題識別碼</xref:System.Windows.Forms.AccessibleObject>"
  syntax:
    content: public virtual int GetHelpTopic (out string fileName);
    parameters:
    - id: fileName
      type: System.String
      description: "在傳回時，此屬性會包含與這個可存取物件相關聯的說明檔的路徑。"
    return:
      type: System.Int32
      description: "說明 主題或-1 表示沒有任何說明主題的識別碼。 在傳回時， <code> fileName </code>參數則包含與這個可存取物件相關聯的說明檔路徑。"
  overload: System.Windows.Forms.AccessibleObject.GetHelpTopic*
  exceptions:
  - type: System.Runtime.InteropServices.COMException
    commentId: T:System.Runtime.InteropServices.COMException
    description: "無法擷取控制項的 [說明] 主題。"
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.GetSelected
  id: GetSelected
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: GetSelected()
  nameWithType: AccessibleObject.GetSelected()
  fullName: System.Windows.Forms.AccessibleObject.GetSelected()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "擷取目前選取的子系。"
  syntax:
    content: public virtual System.Windows.Forms.AccessibleObject GetSelected ();
    parameters: []
    return:
      type: System.Windows.Forms.AccessibleObject
      description: "<xref href=&quot;System.Windows.Forms.AccessibleObject&quot;> </xref>代表目前選取的子系。 如果有選取的物件本身，這個方法會傳回呼叫的物件。 傳回<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果是目前選取的任何子物件本身沒有焦點。"
  overload: System.Windows.Forms.AccessibleObject.GetSelected*
  exceptions:
  - type: System.Runtime.InteropServices.COMException
    commentId: T:System.Runtime.InteropServices.COMException
    description: "無法擷取選取的子系。"
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.Help
  id: Help
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: Help
  nameWithType: AccessibleObject.Help
  fullName: System.Windows.Forms.AccessibleObject.Help
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得物件的行為或如何使用物件的描述。"
  syntax:
    content: public virtual string Help { get; }
    return:
      type: System.String
      description: "A<xref:System.String>包含物件的行為或如何使用物件的描述。</xref:System.String> 傳回<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果定義沒有說明。"
  overload: System.Windows.Forms.AccessibleObject.Help*
  exceptions:
  - type: System.Runtime.InteropServices.COMException
    commentId: T:System.Runtime.InteropServices.COMException
    description: "無法擷取控制項的說明字串。"
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.HitTest(System.Int32,System.Int32)
  id: HitTest(System.Int32,System.Int32)
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: HitTest(Int32,Int32)
  nameWithType: AccessibleObject.HitTest(Int32,Int32)
  fullName: System.Windows.Forms.AccessibleObject.HitTest(Int32,Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "擷取位於指定的螢幕座標的子物件。"
  remarks: "矩形物件，例如清單檢視項目，為物件的座標之週框擷取<xref:System.Windows.Forms.AccessibleObject.Bounds%2A>就會失敗測試的 HitTest，因為 HitTest 決定物件的界限，以像素 x 像素為基礎。</xref:System.Windows.Forms.AccessibleObject.Bounds%2A>"
  syntax:
    content: public virtual System.Windows.Forms.AccessibleObject HitTest (int x, int y);
    parameters:
    - id: x
      type: System.Int32
      description: "水平的螢幕座標。"
    - id: y
      type: System.Int32
      description: "垂直的螢幕座標。"
    return:
      type: System.Windows.Forms.AccessibleObject
      description: "<xref href=&quot;System.Windows.Forms.AccessibleObject&quot;> </xref> ，代表位於指定的螢幕座標的子物件。 如果物件本身位在指定的位置，這個方法會傳回呼叫的物件。 傳回<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果物件不是測試的位置。"
  overload: System.Windows.Forms.AccessibleObject.HitTest*
  exceptions:
  - type: System.Runtime.InteropServices.COMException
    commentId: T:System.Runtime.InteropServices.COMException
    description: "控制項無法叫用測試。"
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.KeyboardShortcut
  id: KeyboardShortcut
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: KeyboardShortcut
  nameWithType: AccessibleObject.KeyboardShortcut
  fullName: System.Windows.Forms.AccessibleObject.KeyboardShortcut
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得快速鍵或便捷鍵可存取的物件。"
  remarks: "便捷鍵也稱為助憶鍵是功能表、 功能表項目、 按鈕或一些其他控制項的標籤文字中加底線的字元。 比方說，使用者可以顯示功能表所按下 ALT 鍵，同時也按指定之底線的按鍵，例如 ALT + F，若要開啟`File`功能表。 若要使用功能表項目的存取金鑰，必須使用包含項目的功能表。 工具列按鈕和功能表項目等控制項通常會有相關聯的快速鍵。 功能表項目可以有與其相關聯的快速鍵和便捷鍵。 如果 KeyboardShortcut 屬性的值是單一字元，您可以假設它是存取金鑰。"
  syntax:
    content: public virtual string KeyboardShortcut { get; }
    return:
      type: System.String
      description: "快速鍵或便捷鍵可存取的物件，或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>是否有任何與物件相關聯的快速鍵。"
  overload: System.Windows.Forms.AccessibleObject.KeyboardShortcut*
  exceptions:
  - type: System.Runtime.InteropServices.COMException
    commentId: T:System.Runtime.InteropServices.COMException
    description: "無法擷取控制項的捷徑。"
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.Name
  id: Name
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: Name
  nameWithType: AccessibleObject.Name
  fullName: System.Windows.Forms.AccessibleObject.Name
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得或設定物件名稱。"
  remarks: "Name 屬性是用戶端用來識別、 搜尋或宣告為使用者物件的字串。 若要存取之子物件的名稱，您必須先呼叫<xref:System.Windows.Forms.AccessibleObject.GetChild%2A>與子系會擷取其名稱的索引。</xref:System.Windows.Forms.AccessibleObject.GetChild%2A>"
  example:
  - "The following example demonstrates the creation of an accessibility-aware chart control, using the <xref:System.Windows.Forms.AccessibleObject> and <xref:System.Windows.Forms.Control.ControlAccessibleObject> classes to expose accessible information. The control plots two curves along with a legend. The `ChartControlAccessibleObject` class, which derives from `ControlAccessibleObject`, is used in the <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> method to provide custom accessible information for the chart control. Since the chart legend is not an actual <xref:System.Windows.Forms.Control> -based control, but instead is drawn by the chart control, it does not have any built-in accessible information. Because of this, the `ChartControlAccessibleObject` class overrides the <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> method to return the `CurveLegendAccessibleObject` that represents accessible information for each part of the legend. When an accessible-aware application uses this control, the control can provide the necessary accessible information.  \n  \n This code excerpt demonstrates overriding the Name property. See the <xref:System.Windows.Forms.AccessibleObject> class overview for the complete code example.  \n  \n [!code-vb[System.Windows.Forms.AccessibleObject#6](~/add/codesnippet/visualbasic/p-system.windows.forms.a_7_1.vb)]\n [!code-cs[System.Windows.Forms.AccessibleObject#6](~/add/codesnippet/csharp/p-system.windows.forms.a_7_1.cs)]\n [!code-cpp[System.Windows.Forms.AccessibleObject#6](~/add/codesnippet/cpp/p-system.windows.forms.a_7_1.cpp)]"
  syntax:
    content: public virtual string Name { get; set; }
    return:
      type: System.String
      description: "物件名稱，或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果未設定的屬性。"
  overload: System.Windows.Forms.AccessibleObject.Name*
  exceptions:
  - type: System.Runtime.InteropServices.COMException
    commentId: T:System.Runtime.InteropServices.COMException
    description: "無法擷取或設定控制項的名稱。"
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.Navigate(System.Windows.Forms.AccessibleNavigation)
  id: Navigate(System.Windows.Forms.AccessibleNavigation)
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: Navigate(AccessibleNavigation)
  nameWithType: AccessibleObject.Navigate(AccessibleNavigation)
  fullName: System.Windows.Forms.AccessibleObject.Navigate(AccessibleNavigation)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "巡覽到另一個可存取的物件。"
  remarks: "巡覽、 空間和邏輯，會永遠限制容器內的使用者介面項目。 使用空間巡覽時，用戶端可以瀏覽只有起始物件的同層級。 根據邏輯巡覽搭配使用的巡覽旗標，用戶端可以瀏覽到子系或同層級的起始物件。 這個方法不會變更選取範圍或焦點。 若要將焦點變更，或選取的物件，使用<xref:System.Windows.Forms.AccessibleObject.Select%2A>.</xref:System.Windows.Forms.AccessibleObject.Select%2A> 瀏覽方法擷取只有使用者介面項目有已定義的螢幕位置。"
  example:
  - "The following example demonstrates the creation of an accessibility-aware chart control, using the <xref:System.Windows.Forms.AccessibleObject> and <xref:System.Windows.Forms.Control.ControlAccessibleObject> classes to expose accessible information. The control plots two curves along with a legend. The `ChartControlAccessibleObject` class, which derives from `ControlAccessibleObject`, is used in the <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> method to provide custom accessible information for the chart control. Since the chart legend is not an actual <xref:System.Windows.Forms.Control> -based control, but instead is drawn by the chart control, it does not have any built-in accessible information. Because of this, the `ChartControlAccessibleObject` class overrides the <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> method to return the `CurveLegendAccessibleObject` that represents accessible information for each part of the legend. When an accessible-aware application uses this control, the control can provide the necessary accessible information.  \n  \n This code demonstrates shows overriding the Navigate method. See the <xref:System.Windows.Forms.AccessibleObject> class overview for the complete code example.  \n  \n [!code-vb[System.Windows.Forms.AccessibleObject#6](~/add/codesnippet/visualbasic/b72d660b-5a96-4d26-9d1d-_1.vb)]\n [!code-cs[System.Windows.Forms.AccessibleObject#6](~/add/codesnippet/csharp/b72d660b-5a96-4d26-9d1d-_1.cs)]\n [!code-cpp[System.Windows.Forms.AccessibleObject#6](~/add/codesnippet/cpp/b72d660b-5a96-4d26-9d1d-_1.cpp)]"
  syntax:
    content: public virtual System.Windows.Forms.AccessibleObject Navigate (System.Windows.Forms.AccessibleNavigation navdir);
    parameters:
    - id: navdir
      type: System.Windows.Forms.AccessibleNavigation
      description: "其中一個<xref href=&quot;System.Windows.Forms.AccessibleNavigation&quot;></xref>值。"
    return:
      type: System.Windows.Forms.AccessibleObject
      description: "<xref href=&quot;System.Windows.Forms.AccessibleObject&quot;> </xref> ，代表其中一個<xref href=&quot;System.Windows.Forms.AccessibleNavigation&quot;></xref>值。"
  overload: System.Windows.Forms.AccessibleObject.Navigate*
  exceptions:
  - type: System.Runtime.InteropServices.COMException
    commentId: T:System.Runtime.InteropServices.COMException
    description: "瀏覽嘗試會失敗。"
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.Parent
  id: Parent
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: Parent
  nameWithType: AccessibleObject.Parent
  fullName: System.Windows.Forms.AccessibleObject.Parent
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得可存取之物件的父系。"
  remarks: ''
  example:
  - "The following example demonstrates the creation of an accessibility-aware chart control, using the <xref:System.Windows.Forms.AccessibleObject> and <xref:System.Windows.Forms.Control.ControlAccessibleObject> classes to expose accessible information. The control plots two curves along with a legend. The `ChartControlAccessibleObject` class, which derives from `ControlAccessibleObject`, is used in the <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> method to provide custom accessible information for the chart control. Since the chart legend is not an actual <xref:System.Windows.Forms.Control> -based control, but instead is drawn by the chart control, it does not have any built-in accessible information. Because of this, the `ChartControlAccessibleObject` class overrides the <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> method to return the `CurveLegendAccessibleObject` that represents accessible information for each part of the legend. When an accessible-aware application uses this control, the control can provide the necessary accessible information.  \n  \n This code excerpt demonstrates overriding the Parent property. See the <xref:System.Windows.Forms.AccessibleObject> class overview for the complete code example.  \n  \n [!code-vb[System.Windows.Forms.AccessibleObject#6](~/add/codesnippet/visualbasic/p-system.windows.forms.a_9_1.vb)]\n [!code-cs[System.Windows.Forms.AccessibleObject#6](~/add/codesnippet/csharp/p-system.windows.forms.a_9_1.cs)]\n [!code-cpp[System.Windows.Forms.AccessibleObject#6](~/add/codesnippet/cpp/p-system.windows.forms.a_9_1.cpp)]"
  syntax:
    content: public virtual System.Windows.Forms.AccessibleObject Parent { get; }
    return:
      type: System.Windows.Forms.AccessibleObject
      description: "<xref href=&quot;System.Windows.Forms.AccessibleObject&quot;> </xref>表示父系的可存取的物件，或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果沒有父物件。"
  overload: System.Windows.Forms.AccessibleObject.Parent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.Role
  id: Role
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: Role
  nameWithType: AccessibleObject.Role
  fullName: System.Windows.Forms.AccessibleObject.Role
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得這個可存取物件的角色。"
  remarks: "物件的角色，可協助說明物件的函數。"
  example:
  - "The following example demonstrates the creation of an accessibility-aware chart control, using the <xref:System.Windows.Forms.AccessibleObject> and <xref:System.Windows.Forms.Control.ControlAccessibleObject> classes to expose accessible information. The control plots two curves along with a legend. The `ChartControlAccessibleObject` class, which derives from `ControlAccessibleObject`, is used in the <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> method to provide custom accessible information for the chart control. Since the chart legend is not an actual <xref:System.Windows.Forms.Control> -based control, but instead is drawn by the chart control, it does not have any built-in accessible information. Because of this, the `ChartControlAccessibleObject` class overrides the <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> method to return the `CurveLegendAccessibleObject` that represents accessible information for each part of the legend. When an accessible-aware application uses this control, the control can provide the necessary accessible information.  \n  \n This code excerpt demonstrates overriding the Role property. See the <xref:System.Windows.Forms.AccessibleObject> class overview for the complete code example.  \n  \n [!code-vb[System.Windows.Forms.AccessibleObject#4](~/add/codesnippet/visualbasic/p-system.windows.forms.a_13_1.vb)]\n [!code-cs[System.Windows.Forms.AccessibleObject#4](~/add/codesnippet/csharp/p-system.windows.forms.a_13_1.cs)]\n [!code-cpp[System.Windows.Forms.AccessibleObject#4](~/add/codesnippet/cpp/p-system.windows.forms.a_13_1.cpp)]"
  syntax:
    content: public virtual System.Windows.Forms.AccessibleRole Role { get; }
    return:
      type: System.Windows.Forms.AccessibleRole
      description: "其中一個<xref href=&quot;System.Windows.Forms.AccessibleRole&quot;></xref>值，或<xref href=&quot;System.Windows.Forms.AccessibleRole&quot;></xref>如果尚未指定任何角色。"
  overload: System.Windows.Forms.AccessibleObject.Role*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.Select(System.Windows.Forms.AccessibleSelection)
  id: Select(System.Windows.Forms.AccessibleSelection)
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: Select(AccessibleSelection)
  nameWithType: AccessibleObject.Select(AccessibleSelection)
  fullName: System.Windows.Forms.AccessibleObject.Select(AccessibleSelection)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "修改選取或移動的可存取物件的鍵盤焦點。"
  remarks: "應用程式可以使用這個方法來執行複雜的選取作業。       下列程式碼說明這<xref:System.Windows.Forms.AccessibleSelection>呼叫時指定的值選擇執行複雜的選取作業。</xref:System.Windows.Forms.AccessibleSelection>      |作業 |旗標組合 |  |---------------|----------------------|  |若要模擬按一下 |<xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName> `OR` <xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName>**附註︰**如果從自己的應用程式內呼叫，這種組合不會選取所要的控制項。</xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName> </xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName> 它將會有正面的影響，不過，如果已從外部應用程式呼叫。 |  |若要藉由模擬按住 CTRL 並按一下選取的目標項目 |<xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName> `OR` <xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName>|  |若要取消選取目標項目藉由模擬 CTRL + 按一下 |<xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName> `OR` <xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName>|  |模擬 SHIFT + 按一下 |<xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName> `OR` <xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName>|  |選取某個範圍的物件，並將焦點放在最後一個物件 |指定<xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName>上設定選取範圍的錨點開始的物件。</xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName> </xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName> </xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName> </xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName> </xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName> </xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName> </xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName> 然後呼叫一次選取並指定<xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName>`OR`<xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName>上的最後一個物件。 |  |若要取消選取所有物件 |指定<xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName>任何物件上。</xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName> </xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName></xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName> 這個旗標會取消選取所有選取的物件，除非選取。 然後呼叫一次選取並指定<xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName>相同物件上。 |</xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName>"
  example:
  - "The following example demonstrates the creation of an accessibility-aware chart control, using the <xref:System.Windows.Forms.AccessibleObject> and <xref:System.Windows.Forms.Control.ControlAccessibleObject> classes to expose accessible information. The control plots two curves along with a legend. The `ChartControlAccessibleObject` class, which derives from `ControlAccessibleObject`, is used in the <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> method to provide custom accessible information for the chart control. Since the chart legend is not an actual <xref:System.Windows.Forms.Control> -based control, but instead is drawn by the chart control, it does not have any built-in accessible information. Because of this, the `ChartControlAccessibleObject` class overrides the <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> method to return the `CurveLegendAccessibleObject` that represents accessible information for each part of the legend. When an accessible-aware application uses this control, the control can provide the necessary accessible information.  \n  \n This code demonstrates shows overriding the Select method. See the <xref:System.Windows.Forms.AccessibleObject> class overview for the complete code example.  \n  \n [!code-vb[System.Windows.Forms.AccessibleObject#6](~/add/codesnippet/visualbasic/f0c27e30-bd9a-4501-a7a0-_1.vb)]\n [!code-cs[System.Windows.Forms.AccessibleObject#6](~/add/codesnippet/csharp/f0c27e30-bd9a-4501-a7a0-_1.cs)]\n [!code-cpp[System.Windows.Forms.AccessibleObject#6](~/add/codesnippet/cpp/f0c27e30-bd9a-4501-a7a0-_1.cpp)]"
  syntax:
    content: public virtual void Select (System.Windows.Forms.AccessibleSelection flags);
    parameters:
    - id: flags
      type: System.Windows.Forms.AccessibleSelection
      description: "其中一個<xref href=&quot;System.Windows.Forms.AccessibleSelection&quot;></xref>值。"
  overload: System.Windows.Forms.AccessibleObject.Select*
  exceptions:
  - type: System.Runtime.InteropServices.COMException
    commentId: T:System.Runtime.InteropServices.COMException
    description: "無法執行選取項目。"
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.State
  id: State
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: State
  nameWithType: AccessibleObject.State
  fullName: System.Windows.Forms.AccessibleObject.State
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得這個可存取物件的狀態。"
  remarks: ''
  example:
  - "The following example demonstrates the creation of an accessibility-aware chart control, using the <xref:System.Windows.Forms.AccessibleObject> and <xref:System.Windows.Forms.Control.ControlAccessibleObject> classes to expose accessible information. The control plots two curves along with a legend. The `ChartControlAccessibleObject` class, which derives from `ControlAccessibleObject`, is used in the <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> method to provide custom accessible information for the chart control. Since the chart legend is not an actual <xref:System.Windows.Forms.Control> -based control, but instead is drawn by the chart control, it does not have any built-in accessible information. Because of this, the `ChartControlAccessibleObject` class overrides the <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> method to return the `CurveLegendAccessibleObject` that represents accessible information for each part of the legend. When an accessible-aware application uses this control, the control can provide the necessary accessible information.  \n  \n This code excerpt demonstrates overriding the State property. See the <xref:System.Windows.Forms.AccessibleObject> class overview for the complete code example.  \n  \n [!code-vb[System.Windows.Forms.AccessibleObject#4](~/add/codesnippet/visualbasic/p-system.windows.forms.a_10_1.vb)]\n [!code-cs[System.Windows.Forms.AccessibleObject#4](~/add/codesnippet/csharp/p-system.windows.forms.a_10_1.cs)]\n [!code-cpp[System.Windows.Forms.AccessibleObject#4](~/add/codesnippet/cpp/p-system.windows.forms.a_10_1.cpp)]"
  syntax:
    content: public virtual System.Windows.Forms.AccessibleStates State { get; }
    return:
      type: System.Windows.Forms.AccessibleStates
      description: "其中一個<xref href=&quot;System.Windows.Forms.AccessibleStates&quot;></xref>值，或<xref href=&quot;System.Windows.Forms.AccessibleStates&quot;> </xref>，如果沒有狀態已設定。"
  overload: System.Windows.Forms.AccessibleObject.State*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetField(System.String,System.Reflection.BindingFlags)
  id: System#Reflection#IReflect#GetField(System.String,System.Reflection.BindingFlags)
  isEii: true
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: System.Reflection.IReflect.GetField(String,BindingFlags)
  nameWithType: AccessibleObject.System.Reflection.IReflect.GetField(String,BindingFlags)
  fullName: System.Windows.Forms.AccessibleObject.System.Reflection.IReflect.GetField(String,BindingFlags)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得&lt;xref:System.Reflection.FieldInfo?displayProperty=fullName&gt;物件對應至指定的欄位繫結旗標。 如需這個成員的說明，請參閱&lt;xref:System.Reflection.IReflect.GetField%2A?displayProperty=fullName&gt;。"
  remarks: "這個成員是明確介面成員實作。 它可用時，才<xref:System.Windows.Forms.AccessibleObject>執行個體轉換成<xref:System.Reflection.IReflect>介面。</xref:System.Reflection.IReflect> </xref:System.Windows.Forms.AccessibleObject>"
  syntax:
    content: System.Reflection.FieldInfo IReflect.GetField (string name, System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: name
      type: System.String
      description: "要尋找的欄位名稱。"
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "繫結使用的屬性來控制搜尋。"
    return:
      type: System.Reflection.FieldInfo
      description: "A &lt;xref:System.Reflection.FieldInfo?displayProperty=fullName&gt;物件，其中包含符合搜尋條件約束中指定的具名物件的欄位資訊<code> bindingAttr </code>。"
  overload: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetField*
  exceptions:
  - type: System.Reflection.AmbiguousMatchException
    commentId: T:System.Reflection.AmbiguousMatchException
    description: "物件會實作具有相同名稱的多個欄位。"
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetFields(System.Reflection.BindingFlags)
  id: System#Reflection#IReflect#GetFields(System.Reflection.BindingFlags)
  isEii: true
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: System.Reflection.IReflect.GetFields(BindingFlags)
  nameWithType: AccessibleObject.System.Reflection.IReflect.GetFields(BindingFlags)
  fullName: System.Windows.Forms.AccessibleObject.System.Reflection.IReflect.GetFields(BindingFlags)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得陣列的&lt;xref:System.Reflection.FieldInfo?displayProperty=fullName&gt;目前類別的所有欄位都對應的物件。 如需這個成員的說明，請參閱&lt;xref:System.Reflection.IReflect.GetFields%2A?displayProperty=fullName&gt;。"
  remarks: "每個欄位都必須具有唯一的名稱。 <xref:System.Reflection.BindingFlags?displayProperty=fullName>旗標會指定在搜尋中包含非公用欄位。</xref:System.Reflection.BindingFlags?displayProperty=fullName> <xref:System.Reflection.BindingFlags?displayProperty=fullName>旗標會指定在搜尋中包含公用欄位。</xref:System.Reflection.BindingFlags?displayProperty=fullName>       這個成員是明確介面成員實作。 它可用時，才<xref:System.Windows.Forms.AccessibleObject>執行個體轉換成<xref:System.Reflection.IReflect>介面。</xref:System.Reflection.IReflect> </xref:System.Windows.Forms.AccessibleObject>"
  syntax:
    content: System.Reflection.FieldInfo[] IReflect.GetFields (System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "繫結使用的屬性來控制搜尋。"
    return:
      type: System.Reflection.FieldInfo[]
      description: "陣列&lt;xref:System.Reflection.FieldInfo?displayProperty=fullName&gt;包含符合搜尋條件約束中指定此反映物件的所有欄位資訊的物件<code> bindingAttr </code>。"
  overload: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetFields*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMember(System.String,System.Reflection.BindingFlags)
  id: System#Reflection#IReflect#GetMember(System.String,System.Reflection.BindingFlags)
  isEii: true
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: System.Reflection.IReflect.GetMember(String,BindingFlags)
  nameWithType: AccessibleObject.System.Reflection.IReflect.GetMember(String,BindingFlags)
  fullName: System.Windows.Forms.AccessibleObject.System.Reflection.IReflect.GetMember(String,BindingFlags)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得陣列的&lt;xref:System.Reflection.MemberInfo?displayProperty=fullName&gt;對應到所有的公用成員，或符合指定的名稱的所有成員的物件。 如需這個成員的說明，請參閱&lt;xref:System.Reflection.IReflect.GetMember%2A?displayProperty=fullName&gt;。"
  remarks: "這個成員是明確介面成員實作。 它可用時，才<xref:System.Windows.Forms.AccessibleObject>執行個體轉換成<xref:System.Reflection.IReflect>介面。</xref:System.Reflection.IReflect> </xref:System.Windows.Forms.AccessibleObject>"
  syntax:
    content: System.Reflection.MemberInfo[] IReflect.GetMember (string name, System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: name
      type: System.String
      description: "要尋找之成員的名稱。"
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "繫結使用的屬性來控制搜尋。"
    return:
      type: System.Reflection.MemberInfo[]
      description: "陣列&lt;xref:System.Reflection.MemberInfo?displayProperty=fullName&gt;符合名稱參數的物件。"
  overload: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMember*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMembers(System.Reflection.BindingFlags)
  id: System#Reflection#IReflect#GetMembers(System.Reflection.BindingFlags)
  isEii: true
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: System.Reflection.IReflect.GetMembers(BindingFlags)
  nameWithType: AccessibleObject.System.Reflection.IReflect.GetMembers(BindingFlags)
  fullName: System.Windows.Forms.AccessibleObject.System.Reflection.IReflect.GetMembers(BindingFlags)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得陣列的&lt;xref:System.Reflection.MemberInfo?displayProperty=fullName&gt;對應到所有的公用成員，或目前類別的所有成員的物件。 如需這個成員的說明，請參閱&lt;xref:System.Reflection.IReflect.GetMembers%2A?displayProperty=fullName&gt;。"
  remarks: "這個成員是明確介面成員實作。 它可用時，才<xref:System.Windows.Forms.AccessibleObject>執行個體轉換成<xref:System.Reflection.IReflect>介面。</xref:System.Reflection.IReflect> </xref:System.Windows.Forms.AccessibleObject>"
  syntax:
    content: System.Reflection.MemberInfo[] IReflect.GetMembers (System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "繫結使用的屬性來控制搜尋。"
    return:
      type: System.Reflection.MemberInfo[]
      description: "陣列&lt;xref:System.Reflection.MemberInfo?displayProperty=fullName&gt;包含如這個反映物件的所有成員資訊的物件。"
  overload: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMembers*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMethod(System.String,System.Reflection.BindingFlags)
  id: System#Reflection#IReflect#GetMethod(System.String,System.Reflection.BindingFlags)
  isEii: true
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: System.Reflection.IReflect.GetMethod(String,BindingFlags)
  nameWithType: AccessibleObject.System.Reflection.IReflect.GetMethod(String,BindingFlags)
  fullName: System.Windows.Forms.AccessibleObject.System.Reflection.IReflect.GetMethod(String,BindingFlags)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得&lt;xref:System.Reflection.MethodInfo?displayProperty=fullName&gt;指定搜尋條件約束對應至指定的方法之下的物件。 如需這個成員的說明，請參閱&lt;xref:System.Reflection.IReflect.GetMethod%2A?displayProperty=fullName&gt;。"
  remarks: "這個成員是明確介面成員實作。 它可用時，才<xref:System.Windows.Forms.AccessibleObject>執行個體轉換成<xref:System.Reflection.IReflect>介面。</xref:System.Reflection.IReflect> </xref:System.Windows.Forms.AccessibleObject>"
  syntax:
    content: System.Reflection.MethodInfo IReflect.GetMethod (string name, System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: name
      type: System.String
      description: "要尋找之成員的名稱。"
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "繫結使用的屬性來控制搜尋。"
    return:
      type: System.Reflection.MethodInfo
      description: "A &lt;xref:System.Reflection.MethodInfo?displayProperty=fullName&gt;包含方法資訊物件，具有相符項目中指定的方法名稱和搜尋條件約束根據<code> bindingAttr </code>。"
  overload: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMethod*
  exceptions:
  - type: System.Reflection.AmbiguousMatchException
    commentId: T:System.Reflection.AmbiguousMatchException
    description: "物件會實作具有相同名稱的多個方法。"
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])
  id: System#Reflection#IReflect#GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])
  isEii: true
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: System.Reflection.IReflect.GetMethod(String,BindingFlags,Binder,Type[],ParameterModifier[])
  nameWithType: AccessibleObject.System.Reflection.IReflect.GetMethod(String,BindingFlags,Binder,Type[],ParameterModifier[])
  fullName: System.Windows.Forms.AccessibleObject.System.Reflection.IReflect.GetMethod(String,BindingFlags,Binder,Type[],ParameterModifier[])
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得&lt;xref:System.Reflection.MethodInfo?displayProperty=fullName&gt;對應到指定的方法，可選擇從使用類型陣列物件的多載方法。 如需這個成員的說明，請參閱&lt;xref:System.Reflection.IReflect.GetMethod%2A?displayProperty=fullName&gt;。"
  remarks: "傳回值是根據在方法名稱相符的項目<xref:System.Reflection.BindingFlags?displayProperty=fullName>列舉型別、 所指定的型別轉換種類`binder`參數，多載，而<xref:System.Reflection.ParameterInfo?displayProperty=fullName>描述方法的簽章。</xref:System.Reflection.ParameterInfo?displayProperty=fullName> </xref:System.Reflection.BindingFlags?displayProperty=fullName>       這個成員是明確介面成員實作。 它可用時，才<xref:System.Windows.Forms.AccessibleObject>執行個體轉換成<xref:System.Reflection.IReflect>介面。</xref:System.Reflection.IReflect> </xref:System.Windows.Forms.AccessibleObject>"
  syntax:
    content: System.Reflection.MethodInfo IReflect.GetMethod (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, Type[] types, System.Reflection.ParameterModifier[] modifiers);
    parameters:
    - id: name
      type: System.String
      description: "要尋找之成員的名稱。"
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "繫結使用的屬性來控制搜尋。"
    - id: binder
      type: System.Reflection.Binder
      description: "物件，用於實作<xref href=&quot;System.Reflection.Binder&quot;> </xref>，包含屬性與這個方法。"
    - id: types
      type: System.Type[]
      description: "陣列，用來多載的方法之間選擇。"
    - id: modifiers
      type: System.Reflection.ParameterModifier[]
      description: "參數修飾詞用來進行繫結的參數簽章的型別已修改工作的陣列。"
    return:
      type: System.Reflection.MethodInfo
      description: "符合所有指定的參數要求的方法。"
  overload: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMethod*
  exceptions:
  - type: System.Reflection.AmbiguousMatchException
    commentId: T:System.Reflection.AmbiguousMatchException
    description: "物件會實作具有相同名稱的多個方法。"
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMethods(System.Reflection.BindingFlags)
  id: System#Reflection#IReflect#GetMethods(System.Reflection.BindingFlags)
  isEii: true
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: System.Reflection.IReflect.GetMethods(BindingFlags)
  nameWithType: AccessibleObject.System.Reflection.IReflect.GetMethods(BindingFlags)
  fullName: System.Windows.Forms.AccessibleObject.System.Reflection.IReflect.GetMethods(BindingFlags)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得陣列的&lt;xref:System.Reflection.MethodInfo?displayProperty=fullName&gt;與所有公用方法或目前類別的所有方法的物件。 如需這個成員的說明，請參閱&lt;xref:System.Reflection.IReflect.GetMethods%2A?displayProperty=fullName&gt;。"
  remarks: "這個成員是明確介面成員實作。 它可用時，才<xref:System.Windows.Forms.AccessibleObject>執行個體轉換成<xref:System.Reflection.IReflect>介面。</xref:System.Reflection.IReflect> </xref:System.Windows.Forms.AccessibleObject>"
  syntax:
    content: System.Reflection.MethodInfo[] IReflect.GetMethods (System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "繫結使用的屬性來控制搜尋。"
    return:
      type: System.Reflection.MethodInfo[]
      description: "陣列&lt;xref:System.Reflection.MethodInfo?displayProperty=fullName&gt;包含所有定義的方法如這個反映物件符合搜尋條件約束中指定的物件<xref uid=&quot;langword_csharp_bindingAttr&quot; name=&quot;bindingAttr&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMethods*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetProperties(System.Reflection.BindingFlags)
  id: System#Reflection#IReflect#GetProperties(System.Reflection.BindingFlags)
  isEii: true
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: System.Reflection.IReflect.GetProperties(BindingFlags)
  nameWithType: AccessibleObject.System.Reflection.IReflect.GetProperties(BindingFlags)
  fullName: System.Windows.Forms.AccessibleObject.System.Reflection.IReflect.GetProperties(BindingFlags)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得陣列的&lt;xref:System.Reflection.PropertyInfo?displayProperty=fullName&gt;物件對應至所有的公用屬性或目前類別的所有內容。 如需這個成員的說明，請參閱&lt;xref:System.Reflection.IReflect.GetProperties%2A?displayProperty=fullName&gt;。"
  remarks: "這個成員是明確介面成員實作。 它可用時，才<xref:System.Windows.Forms.AccessibleObject>執行個體轉換成<xref:System.Reflection.IReflect>介面。</xref:System.Reflection.IReflect> </xref:System.Windows.Forms.AccessibleObject>"
  syntax:
    content: System.Reflection.PropertyInfo[] IReflect.GetProperties (System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "用來控制搜尋之繫結屬性。"
    return:
      type: System.Reflection.PropertyInfo[]
      description: "陣列&lt;xref:System.Reflection.PropertyInfo?displayProperty=fullName&gt;反映物件上定義的所有屬性的物件。"
  overload: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetProperty(System.String,System.Reflection.BindingFlags)
  id: System#Reflection#IReflect#GetProperty(System.String,System.Reflection.BindingFlags)
  isEii: true
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: System.Reflection.IReflect.GetProperty(String,BindingFlags)
  nameWithType: AccessibleObject.System.Reflection.IReflect.GetProperty(String,BindingFlags)
  fullName: System.Windows.Forms.AccessibleObject.System.Reflection.IReflect.GetProperty(String,BindingFlags)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得&lt;xref:System.Reflection.PropertyInfo?displayProperty=fullName&gt;指定搜尋條件約束對應至指定的屬性底下的物件。 如需這個成員的說明，請參閱&lt;xref:System.Reflection.IReflect.GetProperty%2A?displayProperty=fullName&gt;。"
  remarks: "這個成員是明確介面成員實作。 它可用時，才<xref:System.Windows.Forms.AccessibleObject>執行個體轉換成<xref:System.Reflection.IReflect>介面。</xref:System.Reflection.IReflect> </xref:System.Windows.Forms.AccessibleObject>"
  syntax:
    content: System.Reflection.PropertyInfo IReflect.GetProperty (string name, System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: name
      type: System.String
      description: "要尋找的屬性名稱。"
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "繫結使用的屬性來控制搜尋。"
    return:
      type: System.Reflection.PropertyInfo
      description: "A &lt;xref:System.Reflection.PropertyInfo?displayProperty=fullName&gt;找到符合搜尋條件約束中指定的屬性物件<code> bindingAttr </code>，或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果屬性卻找不到。"
  overload: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetProperty*
  exceptions:
  - type: System.Reflection.AmbiguousMatchException
    commentId: T:System.Reflection.AmbiguousMatchException
    description: "物件會實作具有相同名稱的多個方法。"
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  id: System#Reflection#IReflect#GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  isEii: true
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: System.Reflection.IReflect.GetProperty(String,BindingFlags,Binder,Type,Type[],ParameterModifier[])
  nameWithType: AccessibleObject.System.Reflection.IReflect.GetProperty(String,BindingFlags,Binder,Type,Type[],ParameterModifier[])
  fullName: System.Windows.Forms.AccessibleObject.System.Reflection.IReflect.GetProperty(String,BindingFlags,Binder,Type,Type[],ParameterModifier[])
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得&lt;xref:System.Reflection.PropertyInfo?displayProperty=fullName&gt;指定搜尋條件約束對應至具有指定之屬性的物件。 如需這個成員的說明，請參閱&lt;xref:System.Reflection.IReflect.GetProperty%2A?displayProperty=fullName&gt;。"
  remarks: "這個成員是明確介面成員實作。 它可用時，才<xref:System.Windows.Forms.AccessibleObject>執行個體轉換成<xref:System.Reflection.IReflect>介面。</xref:System.Reflection.IReflect> </xref:System.Windows.Forms.AccessibleObject>"
  syntax:
    content: System.Reflection.PropertyInfo IReflect.GetProperty (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, Type returnType, Type[] types, System.Reflection.ParameterModifier[] modifiers);
    parameters:
    - id: name
      type: System.String
      description: "要尋找之成員的名稱。"
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "繫結使用的屬性來控制搜尋。"
    - id: binder
      type: System.Reflection.Binder
      description: "物件，實作繫結器，包含與此方法相關的屬性。"
    - id: returnType
      type: System.Type
      description: "陣列，用來多載的方法之間選擇。"
    - id: types
      type: System.Type[]
      description: "參數修飾詞用來進行繫結的參數簽章的型別已修改工作的陣列。"
    - id: modifiers
      type: System.Reflection.ParameterModifier[]
      description: "陣列，用來選擇參數修飾詞。"
    return:
      type: System.Reflection.PropertyInfo
      description: "A &lt;xref:System.Reflection.PropertyInfo?displayProperty=fullName&gt;所在的屬性，如果這個反映物件中，找到具有指定名稱的屬性物件或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果屬性卻找不到。"
  overload: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])
  id: System#Reflection#IReflect#InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])
  isEii: true
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: System.Reflection.IReflect.InvokeMember(String,BindingFlags,Binder,Object,Object[],ParameterModifier[],CultureInfo,String[])
  nameWithType: AccessibleObject.System.Reflection.IReflect.InvokeMember(String,BindingFlags,Binder,Object,Object[],ParameterModifier[],CultureInfo,String[])
  fullName: System.Windows.Forms.AccessibleObject.System.Reflection.IReflect.InvokeMember(String,BindingFlags,Binder,Object,Object[],ParameterModifier[],CultureInfo,String[])
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "叫用指定的成員。 如需這個成員的說明，請參閱&lt;xref:System.Reflection.IReflect.InvokeMember%2A?displayProperty=fullName&gt;。"
  remarks: "`invokeAttr`參數可以是建構函式、 方法、 屬性或欄位。 必須指定適當的引動過程屬性。 叫用類別的預設成員，藉由傳遞空字串 (&quot;&quot;) 做為成員的名稱。       `modifiers`參數具有相同的長度為`args`參數，表示叫用的成員引數屬性中繼資料中。 參數可以具有下列屬性︰ pdIn，pdOut，pdRetval，pdOptional，和 pdHasDefault。 這些代表 [In]、 [Out]，[retval]，[選用] 和預設參數，分別。       這個成員是明確介面成員實作。 它可用時，才<xref:System.Windows.Forms.AccessibleObject>執行個體轉換成<xref:System.Reflection.IReflect>介面。</xref:System.Reflection.IReflect> </xref:System.Windows.Forms.AccessibleObject>"
  syntax:
    content: object IReflect.InvokeMember (string name, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object target, object[] args, System.Reflection.ParameterModifier[] modifiers, System.Globalization.CultureInfo culture, string[] namedParameters);
    parameters:
    - id: name
      type: System.String
      description: "要尋找之成員的名稱。"
    - id: invokeAttr
      type: System.Reflection.BindingFlags
      description: "其中一個<xref href=&quot;System.Reflection.BindingFlags&quot;></xref>引動過程屬性。"
    - id: binder
      type: System.Reflection.Binder
      description: "其中一個<xref href=&quot;System.Reflection.BindingFlags&quot;></xref>位元旗標。 實作繫結器，包含與此方法相關的屬性。"
    - id: target
      type: System.Object
      description: "要叫用指定的成員物件。 這個參數已忽略的靜態成員。"
    - id: args
      type: System.Object[]
      description: "物件的陣列，其中包含要叫用數目、 順序和類型成員的參數。 如果沒有任何參數，這會是空陣列。"
    - id: modifiers
      type: System.Reflection.ParameterModifier[]
      description: "陣列<xref href=&quot;System.Reflection.ParameterModifier&quot;></xref>物件。"
    - id: culture
      type: System.Globalization.CultureInfo
      description: "執行個體&lt;xref:System.Globalization.CultureInfo?displayProperty=fullName&gt;用於管理類型的強制型轉。"
    - id: namedParameters
      type: System.String[]
      description: "參數的字串陣列。"
    return:
      type: System.Object
      description: "指定的成員。"
  overload: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#InvokeMember*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "欄位設定作業指定多個引數。"
  - type: System.MissingFieldException
    commentId: T:System.MissingFieldException
    description: "找不到欄位或屬性。"
  - type: System.MissingMethodException
    commentId: T:System.MissingMethodException
    description: "找不到方法。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "沒有使用必要的私用成員會叫用<xref href=&quot;System.Security.Permissions.ReflectionPermission&quot;> </xref>。"
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#UnderlyingSystemType
  id: System#Reflection#IReflect#UnderlyingSystemType
  isEii: true
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: System.Reflection.IReflect.UnderlyingSystemType
  nameWithType: AccessibleObject.System.Reflection.IReflect.UnderlyingSystemType
  fullName: System.Windows.Forms.AccessibleObject.System.Reflection.IReflect.UnderlyingSystemType
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得代表基礎類型<xref href=&quot;System.Reflection.IReflect&quot;></xref>物件。 如需這個成員的說明，請參閱&lt;xref:System.Reflection.IReflect.UnderlyingSystemType%2A?displayProperty=fullName&gt;。"
  remarks: "這個成員是明確介面成員實作。 它可用時，才<xref:System.Windows.Forms.AccessibleObject>執行個體轉換成<xref:System.Reflection.IReflect>介面。</xref:System.Reflection.IReflect> </xref:System.Windows.Forms.AccessibleObject>"
  syntax:
    content: Type System.Reflection.IReflect.UnderlyingSystemType { get; }
    return:
      type: System.Type
      description: "基礎類型，表示<xref href=&quot;System.Reflection.IReflect&quot;></xref>物件。"
  overload: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#UnderlyingSystemType*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.UseStdAccessibleObjects(System.IntPtr)
  id: UseStdAccessibleObjects(System.IntPtr)
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: UseStdAccessibleObjects(IntPtr)
  nameWithType: AccessibleObject.UseStdAccessibleObjects(IntPtr)
  fullName: System.Windows.Forms.AccessibleObject.UseStdAccessibleObjects(IntPtr)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "連結物件的執行個體與<xref href=&quot;System.Windows.Forms.AccessibleObject&quot;></xref>根據物件的控制代碼。"
  remarks: "伺服器應用程式可以呼叫此函式，當其包含自訂的 UI 物件類似於系統提供的物件。 伺服器應用程式呼叫`CreateStdAccessibleObject`並覆寫<xref:Accessibility.IAccessible>方法和屬性，以符合其自訂物件所需。</xref:Accessibility.IAccessible> 這種方法將完整實作所有的工作儲存 server 開發人員<xref:Accessibility.IAccessible>屬性和方法。</xref:Accessibility.IAccessible> 此函式是類似於`CreateStdAccessibleProxy`，不同之處在於`CreateStdAccessibleProxy`可讓您指定的類別名稱做為參數，而`CreateStdAccessibleObject`使用相關聯的類別名稱`hwnd`。       呼叫此版本的`UseStdAccessible`等同於呼叫將兩個參數的版本與用戶端 objid。"
  syntax:
    content: protected void UseStdAccessibleObjects (IntPtr handle);
    parameters:
    - id: handle
      type: System.IntPtr
      description: "<xref:System.IntPtr>其中包含物件的控制代碼。</xref:System.IntPtr>"
  overload: System.Windows.Forms.AccessibleObject.UseStdAccessibleObjects*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.UseStdAccessibleObjects(System.IntPtr,System.Int32)
  id: UseStdAccessibleObjects(System.IntPtr,System.Int32)
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: UseStdAccessibleObjects(IntPtr,Int32)
  nameWithType: AccessibleObject.UseStdAccessibleObjects(IntPtr,Int32)
  fullName: System.Windows.Forms.AccessibleObject.UseStdAccessibleObjects(IntPtr,Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "連結物件的執行個體與<xref href=&quot;System.Windows.Forms.AccessibleObject&quot;></xref>基礎控制代碼和物件的物件識別碼。"
  remarks: "建立可存取物件的方法和屬性之指定類型的系統提供的使用者介面項目。       伺服器應用程式可以呼叫此函式，當其包含自訂的 UI 物件類似於系統提供的物件。 伺服器應用程式呼叫`CreateStdAccessibleObject`並覆寫<xref:Accessibility.IAccessible>方法和屬性，以符合其自訂物件所需。</xref:Accessibility.IAccessible> 這種方法將完整實作所有的工作儲存 server 開發人員<xref:Accessibility.IAccessible>屬性和方法。</xref:Accessibility.IAccessible>       有效`objid`值。      |物件 |值 |描述 |  |------------|-----------|-----------------|  |警示 |&0;XFFFFFFF6 |與視窗或應用程式相關聯的訊息是指。 |  |插入號 |&0;XFFFFFFF8 |指的是文字插入列在視窗 （插入號）。 |  |用戶端 |&0;XFFFFFFFC |指的是視窗工作區。 在大部分情況下，作業系統會控制框架項目和用戶端物件，包含控制應用程式的所有項目。 |  |資料指標 |&0;XFFFFFFF7 |是指將滑鼠指標。 在系統中只有一個滑鼠指標，而且不是視窗的子系。 |  |HSCROLL |&0;XFFFFFFFA |指的是視窗的水平捲軸。 |  |功能表 |&0;XFFFFFFFD |指的是視窗的功能表列。 |  |SIZEGRIP |&0;XFFFFFFF9 |視窗的調整大小底框，位於視窗框架的右上角的選擇性框架元件是指。 |  |音效 |&0;XFFFFFFF5 |是指聲音的物件。 音效物件沒有畫面位置或子系，但沒有名稱和狀態屬性。 它們是播放音效的應用程式的子系。 |  |SYSMENU |&0;XFFFFFFFF |視窗的 [系統] 功能表是指。 |  |標題列 |&0;XFFFFFFFE |指的是，視窗標題列。 |  |VSCROLL |&0;XFFFFFFFB |指的是視窗的垂直捲軸。 |  |視窗 |&0;X00000000 |指的是視窗本身，而非子物件。 |"
  syntax:
    content: protected void UseStdAccessibleObjects (IntPtr handle, int objid);
    parameters:
    - id: handle
      type: System.IntPtr
      description: "<xref:System.IntPtr>其中包含物件的控制代碼。</xref:System.IntPtr>"
    - id: objid
      type: System.Int32
      description: "物件定義的型別 Int`handle`參數參考。"
  overload: System.Windows.Forms.AccessibleObject.UseStdAccessibleObjects*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.Value
  id: Value
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: Value
  nameWithType: AccessibleObject.Value
  fullName: System.Windows.Forms.AccessibleObject.Value
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得或設定可存取之物件的值。"
  remarks: "一般而言，[值] 屬性表示視覺物件所含的資訊。 並非所有物件都支援值的屬性。       在大部分情況下，包含屬性用來告知用戶端何種視覺資訊物件的值。 例如，編輯控制項的值是包含的文字，但功能表項目沒有任何值。       Value 屬性可以提供階層式案例，例如樹狀檢視控制項中的資訊。 雖然在樹狀檢視控制項的父物件未提供值屬性中的資訊，在控制項中的每個項目會有以零為起始的值，表示其在階層內的層級。 最上層項目的值為&0;，第二個層級項目有值為&1;，依此類推。      > [!NOTE] > 傳回的值從捲軸和 trackbar 可存取物件會指出百分比，因此它們都是介於 0 和 100 (含) 之間的整數。"
  syntax:
    content: public virtual string Value { get; set; }
    return:
      type: System.String
      description: "可存取物件的值或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果物件不沒有設定任何值。"
  overload: System.Windows.Forms.AccessibleObject.Value*
  exceptions:
  - type: System.Runtime.InteropServices.COMException
    commentId: T:System.Runtime.InteropServices.COMException
    description: "無法設定或擷取值。"
  platform:
  - net462
references:
- uid: System.Runtime.InteropServices.StandardOleMarshalObject
  isExternal: false
  name: System.Runtime.InteropServices.StandardOleMarshalObject
- uid: System.Runtime.InteropServices.COMException
  isExternal: true
  name: System.Runtime.InteropServices.COMException
- uid: System.Reflection.AmbiguousMatchException
  isExternal: true
  name: System.Reflection.AmbiguousMatchException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.MissingFieldException
  isExternal: true
  name: System.MissingFieldException
- uid: System.MissingMethodException
  isExternal: true
  name: System.MissingMethodException
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.Windows.Forms.AccessibleObject.#ctor
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: AccessibleObject()
  nameWithType: AccessibleObject.AccessibleObject()
  fullName: System.Windows.Forms.AccessibleObject.AccessibleObject()
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accChildCount
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.accChildCount
  nameWithType: AccessibleObject.Accessibility.IAccessible.accChildCount
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.accChildCount
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accDoDefaultAction(System.Object)
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.accDoDefaultAction(Object)
  nameWithType: AccessibleObject.Accessibility.IAccessible.accDoDefaultAction(Object)
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.accDoDefaultAction(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accFocus
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.accFocus
  nameWithType: AccessibleObject.Accessibility.IAccessible.accFocus
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.accFocus
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accHitTest(System.Int32,System.Int32)
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.accHitTest(Int32,Int32)
  nameWithType: AccessibleObject.Accessibility.IAccessible.accHitTest(Int32,Int32)
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.accHitTest(Int32,Int32)
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accLocation(System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Object)
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.accLocation(Int32,Int32,Int32,Int32,Object)
  nameWithType: AccessibleObject.Accessibility.IAccessible.accLocation(Int32,Int32,Int32,Int32,Object)
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.accLocation(Int32,Int32,Int32,Int32,Object)
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accNavigate(System.Int32,System.Object)
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.accNavigate(Int32,Object)
  nameWithType: AccessibleObject.Accessibility.IAccessible.accNavigate(Int32,Object)
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.accNavigate(Int32,Object)
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accParent
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.accParent
  nameWithType: AccessibleObject.Accessibility.IAccessible.accParent
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.accParent
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accSelect(System.Int32,System.Object)
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.accSelect(Int32,Object)
  nameWithType: AccessibleObject.Accessibility.IAccessible.accSelect(Int32,Object)
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.accSelect(Int32,Object)
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accSelection
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.accSelection
  nameWithType: AccessibleObject.Accessibility.IAccessible.accSelection
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.accSelection
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accChild(System.Object)
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.get_accChild(Object)
  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accChild(Object)
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.get_accChild(Object)
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accDefaultAction(System.Object)
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.get_accDefaultAction(Object)
  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accDefaultAction(Object)
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.get_accDefaultAction(Object)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accDescription(System.Object)
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.get_accDescription(Object)
  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accDescription(Object)
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.get_accDescription(Object)
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accHelp(System.Object)
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.get_accHelp(Object)
  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accHelp(Object)
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.get_accHelp(Object)
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accHelpTopic(System.String@,System.Object)
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.get_accHelpTopic(String,Object)
  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accHelpTopic(String,Object)
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.get_accHelpTopic(String,Object)
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accKeyboardShortcut(System.Object)
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.get_accKeyboardShortcut(Object)
  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accKeyboardShortcut(Object)
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.get_accKeyboardShortcut(Object)
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accName(System.Object)
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.get_accName(Object)
  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accName(Object)
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.get_accName(Object)
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accRole(System.Object)
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.get_accRole(Object)
  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accRole(Object)
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.get_accRole(Object)
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accState(System.Object)
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.get_accState(Object)
  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accState(Object)
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.get_accState(Object)
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accValue(System.Object)
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.get_accValue(Object)
  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accValue(Object)
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.get_accValue(Object)
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#set_accName(System.Object,System.String)
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.set_accName(Object,String)
  nameWithType: AccessibleObject.Accessibility.IAccessible.set_accName(Object,String)
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.set_accName(Object,String)
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#set_accValue(System.Object,System.String)
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.set_accValue(Object,String)
  nameWithType: AccessibleObject.Accessibility.IAccessible.set_accValue(Object,String)
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.set_accValue(Object,String)
- uid: System.Windows.Forms.AccessibleObject.Bounds
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Bounds
  nameWithType: AccessibleObject.Bounds
  fullName: System.Windows.Forms.AccessibleObject.Bounds
- uid: System.Drawing.Rectangle
  parent: System.Drawing
  isExternal: false
  name: Rectangle
  nameWithType: Rectangle
  fullName: System.Drawing.Rectangle
- uid: System.Windows.Forms.AccessibleObject.DefaultAction
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: DefaultAction
  nameWithType: AccessibleObject.DefaultAction
  fullName: System.Windows.Forms.AccessibleObject.DefaultAction
- uid: System.Windows.Forms.AccessibleObject.Description
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Description
  nameWithType: AccessibleObject.Description
  fullName: System.Windows.Forms.AccessibleObject.Description
- uid: System.Windows.Forms.AccessibleObject.DoDefaultAction
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: DoDefaultAction()
  nameWithType: AccessibleObject.DoDefaultAction()
  fullName: System.Windows.Forms.AccessibleObject.DoDefaultAction()
- uid: System.Windows.Forms.AccessibleObject.GetChild(System.Int32)
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: GetChild(Int32)
  nameWithType: AccessibleObject.GetChild(Int32)
  fullName: System.Windows.Forms.AccessibleObject.GetChild(Int32)
- uid: System.Windows.Forms.AccessibleObject
  parent: System.Windows.Forms
  isExternal: false
  name: AccessibleObject
  nameWithType: AccessibleObject
  fullName: System.Windows.Forms.AccessibleObject
- uid: System.Windows.Forms.AccessibleObject.GetChildCount
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: GetChildCount()
  nameWithType: AccessibleObject.GetChildCount()
  fullName: System.Windows.Forms.AccessibleObject.GetChildCount()
- uid: System.Windows.Forms.AccessibleObject.GetFocused
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: GetFocused()
  nameWithType: AccessibleObject.GetFocused()
  fullName: System.Windows.Forms.AccessibleObject.GetFocused()
- uid: System.Windows.Forms.AccessibleObject.GetHelpTopic(System.String@)
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: GetHelpTopic(String)
  nameWithType: AccessibleObject.GetHelpTopic(String)
  fullName: System.Windows.Forms.AccessibleObject.GetHelpTopic(String)
- uid: System.Windows.Forms.AccessibleObject.GetSelected
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: GetSelected()
  nameWithType: AccessibleObject.GetSelected()
  fullName: System.Windows.Forms.AccessibleObject.GetSelected()
- uid: System.Windows.Forms.AccessibleObject.Help
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Help
  nameWithType: AccessibleObject.Help
  fullName: System.Windows.Forms.AccessibleObject.Help
- uid: System.Windows.Forms.AccessibleObject.HitTest(System.Int32,System.Int32)
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: HitTest(Int32,Int32)
  nameWithType: AccessibleObject.HitTest(Int32,Int32)
  fullName: System.Windows.Forms.AccessibleObject.HitTest(Int32,Int32)
- uid: System.Windows.Forms.AccessibleObject.KeyboardShortcut
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: KeyboardShortcut
  nameWithType: AccessibleObject.KeyboardShortcut
  fullName: System.Windows.Forms.AccessibleObject.KeyboardShortcut
- uid: System.Windows.Forms.AccessibleObject.Name
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Name
  nameWithType: AccessibleObject.Name
  fullName: System.Windows.Forms.AccessibleObject.Name
- uid: System.Windows.Forms.AccessibleObject.Navigate(System.Windows.Forms.AccessibleNavigation)
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Navigate(AccessibleNavigation)
  nameWithType: AccessibleObject.Navigate(AccessibleNavigation)
  fullName: System.Windows.Forms.AccessibleObject.Navigate(AccessibleNavigation)
- uid: System.Windows.Forms.AccessibleNavigation
  parent: System.Windows.Forms
  isExternal: false
  name: AccessibleNavigation
  nameWithType: AccessibleNavigation
  fullName: System.Windows.Forms.AccessibleNavigation
- uid: System.Windows.Forms.AccessibleObject.Parent
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Parent
  nameWithType: AccessibleObject.Parent
  fullName: System.Windows.Forms.AccessibleObject.Parent
- uid: System.Windows.Forms.AccessibleObject.Role
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Role
  nameWithType: AccessibleObject.Role
  fullName: System.Windows.Forms.AccessibleObject.Role
- uid: System.Windows.Forms.AccessibleRole
  parent: System.Windows.Forms
  isExternal: false
  name: AccessibleRole
  nameWithType: AccessibleRole
  fullName: System.Windows.Forms.AccessibleRole
- uid: System.Windows.Forms.AccessibleObject.Select(System.Windows.Forms.AccessibleSelection)
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Select(AccessibleSelection)
  nameWithType: AccessibleObject.Select(AccessibleSelection)
  fullName: System.Windows.Forms.AccessibleObject.Select(AccessibleSelection)
- uid: System.Windows.Forms.AccessibleSelection
  parent: System.Windows.Forms
  isExternal: false
  name: AccessibleSelection
  nameWithType: AccessibleSelection
  fullName: System.Windows.Forms.AccessibleSelection
- uid: System.Windows.Forms.AccessibleObject.State
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: State
  nameWithType: AccessibleObject.State
  fullName: System.Windows.Forms.AccessibleObject.State
- uid: System.Windows.Forms.AccessibleStates
  parent: System.Windows.Forms
  isExternal: false
  name: AccessibleStates
  nameWithType: AccessibleStates
  fullName: System.Windows.Forms.AccessibleStates
- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetField(System.String,System.Reflection.BindingFlags)
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: System.Reflection.IReflect.GetField(String,BindingFlags)
  nameWithType: AccessibleObject.System.Reflection.IReflect.GetField(String,BindingFlags)
  fullName: System.Windows.Forms.AccessibleObject.System.Reflection.IReflect.GetField(String,BindingFlags)
- uid: System.Reflection.FieldInfo
  parent: System.Reflection
  isExternal: true
  name: FieldInfo
  nameWithType: FieldInfo
  fullName: System.Reflection.FieldInfo
- uid: System.Reflection.BindingFlags
  parent: System.Reflection
  isExternal: false
  name: BindingFlags
  nameWithType: BindingFlags
  fullName: System.Reflection.BindingFlags
- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetFields(System.Reflection.BindingFlags)
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: System.Reflection.IReflect.GetFields(BindingFlags)
  nameWithType: AccessibleObject.System.Reflection.IReflect.GetFields(BindingFlags)
  fullName: System.Windows.Forms.AccessibleObject.System.Reflection.IReflect.GetFields(BindingFlags)
- uid: System.Reflection.FieldInfo[]
  parent: System.Reflection
  isExternal: true
  name: FieldInfo
  nameWithType: FieldInfo
  fullName: System.Reflection.FieldInfo[]
  spec.csharp:
  - uid: System.Reflection.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: FieldInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMember(System.String,System.Reflection.BindingFlags)
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: System.Reflection.IReflect.GetMember(String,BindingFlags)
  nameWithType: AccessibleObject.System.Reflection.IReflect.GetMember(String,BindingFlags)
  fullName: System.Windows.Forms.AccessibleObject.System.Reflection.IReflect.GetMember(String,BindingFlags)
- uid: System.Reflection.MemberInfo[]
  parent: System.Reflection
  isExternal: true
  name: MemberInfo
  nameWithType: MemberInfo
  fullName: System.Reflection.MemberInfo[]
  spec.csharp:
  - uid: System.Reflection.MemberInfo
    name: MemberInfo
    nameWithType: MemberInfo
    fullName: MemberInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMembers(System.Reflection.BindingFlags)
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: System.Reflection.IReflect.GetMembers(BindingFlags)
  nameWithType: AccessibleObject.System.Reflection.IReflect.GetMembers(BindingFlags)
  fullName: System.Windows.Forms.AccessibleObject.System.Reflection.IReflect.GetMembers(BindingFlags)
- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMethod(System.String,System.Reflection.BindingFlags)
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: System.Reflection.IReflect.GetMethod(String,BindingFlags)
  nameWithType: AccessibleObject.System.Reflection.IReflect.GetMethod(String,BindingFlags)
  fullName: System.Windows.Forms.AccessibleObject.System.Reflection.IReflect.GetMethod(String,BindingFlags)
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: true
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: System.Reflection.IReflect.GetMethod(String,BindingFlags,Binder,Type[],ParameterModifier[])
  nameWithType: AccessibleObject.System.Reflection.IReflect.GetMethod(String,BindingFlags,Binder,Type[],ParameterModifier[])
  fullName: System.Windows.Forms.AccessibleObject.System.Reflection.IReflect.GetMethod(String,BindingFlags,Binder,Type[],ParameterModifier[])
- uid: System.Reflection.Binder
  parent: System.Reflection
  isExternal: false
  name: Binder
  nameWithType: Binder
  fullName: System.Reflection.Binder
- uid: System.Type[]
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type[]
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Reflection.ParameterModifier[]
  parent: System.Reflection
  isExternal: false
  name: ParameterModifier
  nameWithType: ParameterModifier
  fullName: System.Reflection.ParameterModifier[]
  spec.csharp:
  - uid: System.Reflection.ParameterModifier
    name: ParameterModifier
    nameWithType: ParameterModifier
    fullName: ParameterModifier[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMethods(System.Reflection.BindingFlags)
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: System.Reflection.IReflect.GetMethods(BindingFlags)
  nameWithType: AccessibleObject.System.Reflection.IReflect.GetMethods(BindingFlags)
  fullName: System.Windows.Forms.AccessibleObject.System.Reflection.IReflect.GetMethods(BindingFlags)
- uid: System.Reflection.MethodInfo[]
  parent: System.Reflection
  isExternal: true
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo[]
  spec.csharp:
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    nameWithType: MethodInfo
    fullName: MethodInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetProperties(System.Reflection.BindingFlags)
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: System.Reflection.IReflect.GetProperties(BindingFlags)
  nameWithType: AccessibleObject.System.Reflection.IReflect.GetProperties(BindingFlags)
  fullName: System.Windows.Forms.AccessibleObject.System.Reflection.IReflect.GetProperties(BindingFlags)
- uid: System.Reflection.PropertyInfo[]
  parent: System.Reflection
  isExternal: true
  name: PropertyInfo
  nameWithType: PropertyInfo
  fullName: System.Reflection.PropertyInfo[]
  spec.csharp:
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    nameWithType: PropertyInfo
    fullName: PropertyInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetProperty(System.String,System.Reflection.BindingFlags)
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: System.Reflection.IReflect.GetProperty(String,BindingFlags)
  nameWithType: AccessibleObject.System.Reflection.IReflect.GetProperty(String,BindingFlags)
  fullName: System.Windows.Forms.AccessibleObject.System.Reflection.IReflect.GetProperty(String,BindingFlags)
- uid: System.Reflection.PropertyInfo
  parent: System.Reflection
  isExternal: true
  name: PropertyInfo
  nameWithType: PropertyInfo
  fullName: System.Reflection.PropertyInfo
- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: System.Reflection.IReflect.GetProperty(String,BindingFlags,Binder,Type,Type[],ParameterModifier[])
  nameWithType: AccessibleObject.System.Reflection.IReflect.GetProperty(String,BindingFlags,Binder,Type,Type[],ParameterModifier[])
  fullName: System.Windows.Forms.AccessibleObject.System.Reflection.IReflect.GetProperty(String,BindingFlags,Binder,Type,Type[],ParameterModifier[])
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: System.Reflection.IReflect.InvokeMember(String,BindingFlags,Binder,Object,Object[],ParameterModifier[],CultureInfo,String[])
  nameWithType: AccessibleObject.System.Reflection.IReflect.InvokeMember(String,BindingFlags,Binder,Object,Object[],ParameterModifier[],CultureInfo,String[])
  fullName: System.Windows.Forms.AccessibleObject.System.Reflection.IReflect.InvokeMember(String,BindingFlags,Binder,Object,Object[],ParameterModifier[],CultureInfo,String[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#UnderlyingSystemType
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: System.Reflection.IReflect.UnderlyingSystemType
  nameWithType: AccessibleObject.System.Reflection.IReflect.UnderlyingSystemType
  fullName: System.Windows.Forms.AccessibleObject.System.Reflection.IReflect.UnderlyingSystemType
- uid: System.Windows.Forms.AccessibleObject.UseStdAccessibleObjects(System.IntPtr)
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: UseStdAccessibleObjects(IntPtr)
  nameWithType: AccessibleObject.UseStdAccessibleObjects(IntPtr)
  fullName: System.Windows.Forms.AccessibleObject.UseStdAccessibleObjects(IntPtr)
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Windows.Forms.AccessibleObject.UseStdAccessibleObjects(System.IntPtr,System.Int32)
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: UseStdAccessibleObjects(IntPtr,Int32)
  nameWithType: AccessibleObject.UseStdAccessibleObjects(IntPtr,Int32)
  fullName: System.Windows.Forms.AccessibleObject.UseStdAccessibleObjects(IntPtr,Int32)
- uid: System.Windows.Forms.AccessibleObject.Value
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Value
  nameWithType: AccessibleObject.Value
  fullName: System.Windows.Forms.AccessibleObject.Value
- uid: System.Windows.Forms.AccessibleObject.#ctor*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: AccessibleObject
  nameWithType: AccessibleObject.AccessibleObject
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accChildCount*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.accChildCount
  nameWithType: AccessibleObject.Accessibility.IAccessible.accChildCount
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accDoDefaultAction*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.accDoDefaultAction
  nameWithType: AccessibleObject.Accessibility.IAccessible.accDoDefaultAction
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accFocus*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.accFocus
  nameWithType: AccessibleObject.Accessibility.IAccessible.accFocus
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accHitTest*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.accHitTest
  nameWithType: AccessibleObject.Accessibility.IAccessible.accHitTest
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accLocation*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.accLocation
  nameWithType: AccessibleObject.Accessibility.IAccessible.accLocation
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accNavigate*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.accNavigate
  nameWithType: AccessibleObject.Accessibility.IAccessible.accNavigate
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accParent*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.accParent
  nameWithType: AccessibleObject.Accessibility.IAccessible.accParent
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accSelect*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.accSelect
  nameWithType: AccessibleObject.Accessibility.IAccessible.accSelect
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accSelection*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.accSelection
  nameWithType: AccessibleObject.Accessibility.IAccessible.accSelection
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accChild*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.get_accChild
  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accChild
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accDefaultAction*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.get_accDefaultAction
  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accDefaultAction
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accDescription*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.get_accDescription
  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accDescription
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accHelp*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.get_accHelp
  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accHelp
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accHelpTopic*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.get_accHelpTopic
  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accHelpTopic
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accKeyboardShortcut*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.get_accKeyboardShortcut
  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accKeyboardShortcut
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accName*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.get_accName
  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accName
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accRole*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.get_accRole
  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accRole
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accState*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.get_accState
  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accState
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accValue*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.get_accValue
  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accValue
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#set_accName*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.set_accName
  nameWithType: AccessibleObject.Accessibility.IAccessible.set_accName
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#set_accValue*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.set_accValue
  nameWithType: AccessibleObject.Accessibility.IAccessible.set_accValue
- uid: System.Windows.Forms.AccessibleObject.Bounds*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Bounds
  nameWithType: AccessibleObject.Bounds
- uid: System.Windows.Forms.AccessibleObject.DefaultAction*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: DefaultAction
  nameWithType: AccessibleObject.DefaultAction
- uid: System.Windows.Forms.AccessibleObject.Description*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Description
  nameWithType: AccessibleObject.Description
- uid: System.Windows.Forms.AccessibleObject.DoDefaultAction*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: DoDefaultAction
  nameWithType: AccessibleObject.DoDefaultAction
- uid: System.Windows.Forms.AccessibleObject.GetChild*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: GetChild
  nameWithType: AccessibleObject.GetChild
- uid: System.Windows.Forms.AccessibleObject.GetChildCount*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: GetChildCount
  nameWithType: AccessibleObject.GetChildCount
- uid: System.Windows.Forms.AccessibleObject.GetFocused*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: GetFocused
  nameWithType: AccessibleObject.GetFocused
- uid: System.Windows.Forms.AccessibleObject.GetHelpTopic*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: GetHelpTopic
  nameWithType: AccessibleObject.GetHelpTopic
- uid: System.Windows.Forms.AccessibleObject.GetSelected*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: GetSelected
  nameWithType: AccessibleObject.GetSelected
- uid: System.Windows.Forms.AccessibleObject.Help*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Help
  nameWithType: AccessibleObject.Help
- uid: System.Windows.Forms.AccessibleObject.HitTest*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: HitTest
  nameWithType: AccessibleObject.HitTest
- uid: System.Windows.Forms.AccessibleObject.KeyboardShortcut*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: KeyboardShortcut
  nameWithType: AccessibleObject.KeyboardShortcut
- uid: System.Windows.Forms.AccessibleObject.Name*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Name
  nameWithType: AccessibleObject.Name
- uid: System.Windows.Forms.AccessibleObject.Navigate*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Navigate
  nameWithType: AccessibleObject.Navigate
- uid: System.Windows.Forms.AccessibleObject.Parent*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Parent
  nameWithType: AccessibleObject.Parent
- uid: System.Windows.Forms.AccessibleObject.Role*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Role
  nameWithType: AccessibleObject.Role
- uid: System.Windows.Forms.AccessibleObject.Select*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Select
  nameWithType: AccessibleObject.Select
- uid: System.Windows.Forms.AccessibleObject.State*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: State
  nameWithType: AccessibleObject.State
- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetField*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: System.Reflection.IReflect.GetField
  nameWithType: AccessibleObject.System.Reflection.IReflect.GetField
- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetFields*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: System.Reflection.IReflect.GetFields
  nameWithType: AccessibleObject.System.Reflection.IReflect.GetFields
- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMember*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: System.Reflection.IReflect.GetMember
  nameWithType: AccessibleObject.System.Reflection.IReflect.GetMember
- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMembers*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: System.Reflection.IReflect.GetMembers
  nameWithType: AccessibleObject.System.Reflection.IReflect.GetMembers
- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMethod*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: System.Reflection.IReflect.GetMethod
  nameWithType: AccessibleObject.System.Reflection.IReflect.GetMethod
- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMethods*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: System.Reflection.IReflect.GetMethods
  nameWithType: AccessibleObject.System.Reflection.IReflect.GetMethods
- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetProperties*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: System.Reflection.IReflect.GetProperties
  nameWithType: AccessibleObject.System.Reflection.IReflect.GetProperties
- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetProperty*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: System.Reflection.IReflect.GetProperty
  nameWithType: AccessibleObject.System.Reflection.IReflect.GetProperty
- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#InvokeMember*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: System.Reflection.IReflect.InvokeMember
  nameWithType: AccessibleObject.System.Reflection.IReflect.InvokeMember
- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#UnderlyingSystemType*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: System.Reflection.IReflect.UnderlyingSystemType
  nameWithType: AccessibleObject.System.Reflection.IReflect.UnderlyingSystemType
- uid: System.Windows.Forms.AccessibleObject.UseStdAccessibleObjects*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: UseStdAccessibleObjects
  nameWithType: AccessibleObject.UseStdAccessibleObjects
- uid: System.Windows.Forms.AccessibleObject.Value*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Value
  nameWithType: AccessibleObject.Value
