### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Tokens.SessionSecurityToken
  id: SessionSecurityToken
  children:
  - System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal)
  - System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.String)
  - System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.TimeSpan)
  - System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})
  - System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})
  - System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.Xml.UniqueId,System.String,System.String,System.TimeSpan,System.IdentityModel.Tokens.SymmetricSecurityKey)
  - System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.Xml.UniqueId,System.String,System.String,System.DateTime,System.TimeSpan,System.IdentityModel.Tokens.SymmetricSecurityKey)
  - System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.Xml.UniqueId,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.IdentityModel.Tokens.SymmetricSecurityKey)
  - System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal
  - System.IdentityModel.Tokens.SessionSecurityToken.Context
  - System.IdentityModel.Tokens.SessionSecurityToken.ContextId
  - System.IdentityModel.Tokens.SessionSecurityToken.EndpointId
  - System.IdentityModel.Tokens.SessionSecurityToken.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.IdentityModel.Tokens.SessionSecurityToken.Id
  - System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent
  - System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode
  - System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime
  - System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime
  - System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration
  - System.IdentityModel.Tokens.SessionSecurityToken.SecureConversationVersion
  - System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys
  - System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom
  - System.IdentityModel.Tokens.SessionSecurityToken.ValidTo
  langs:
  - csharp
  name: SessionSecurityToken
  nameWithType: SessionSecurityToken
  fullName: System.IdentityModel.Tokens.SessionSecurityToken
  type: Class
  summary: "定義安全性權杖，其中包含與工作階段相關聯的資料。"
  remarks: "儲存工作階段權杖<xref:System.Security.Claims.ClaimsPrincipal>與工作階段，以及定義工作階段; 其他參數相關聯的使用者，例如工作階段的開始與結束時間。</xref:System.Security.Claims.ClaimsPrincipal>       在被動的情況下，<xref:System.IdentityModel.Services.WSFederationAuthenticationModule>呼叫<xref:System.IdentityModel.Services.SessionAuthenticationModule>(SAM) 從要建立從工作階段權杖驗證管線<xref:System.Security.Claims.ClaimsPrincipal>，代表已驗證的使用者。</xref:System.Security.Claims.ClaimsPrincipal> </xref:System.IdentityModel.Services.SessionAuthenticationModule> </xref:System.IdentityModel.Services.WSFederationAuthenticationModule> SAM 會使用其設定<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>才能建立語彙基元並將它序列化成 cookie （和還原序列化的後續要求的 cookie 語彙基元）。</xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> SAM 會使用其設定的執行個體<xref:System.IdentityModel.Services.CookieHandler>類別來寫入 HTTP 回應傳回的 cookie。</xref:System.IdentityModel.Services.CookieHandler> 此 cookie 則傳回給用戶端，並在後續要求 cookie，而不是反覆存取進行重新取得安全性權杖的身分識別提供者，可以呈現用戶端。 如需有關如何使用 WIF 工作階段的運作方式的詳細資訊，請參閱[WIF 工作階段管理](~/add/includes/ajax-current-ext-md.md)。 在 Web 伺服陣列案例中使用工作階段的相關資訊，請參閱[WIF 和 Web 伺服陣列](~/add/includes/ajax-current-ext-md.md)。       工作階段權杖可以在任一種參考模式下運作，或不。 如果工作階段權杖不參考模式中運作，將整個語彙基元會序列化為儲存在用戶端的工作階段 cookie。 序列化的工作階段權杖可能很龐大，因此儲存在用戶端的 cookie 也可以是相當朝向。 參考的模式，而不是序列化整個工作階段為 cookie 語彙基元，權杖會儲存在工作階段的安全性權杖快取，並只將用來產生金鑰從快取中擷取語彙基元所需的資訊儲存在 cookie 中。 這可以顯著降低的 cookie 大小。 工作階段權杖快取被藉由衍生自<xref:System.IdentityModel.Tokens.SessionSecurityTokenCache>和快取索引鍵由<xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey>類別</xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey>所實作</xref:System.IdentityModel.Tokens.SessionSecurityTokenCache>的類別 <xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A>和<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A>屬性會用於<xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey>類別來產生快取索引鍵。</xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey> </xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A>       <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A>屬性決定工作階段權杖是以參考模式或不。</xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A>      > [!IMPORTANT] > 參考模式中操作 Microsoft 建議您提供的處理常式<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated?displayProperty=fullName>global.asax.cs 檔案，並在設定中的事件<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A>屬性對這個語彙基元傳入<xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.SessionToken%2A?displayProperty=fullName>屬性。</xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.SessionToken%2A?displayProperty=fullName> </xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A> </xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated?displayProperty=fullName> 這可確保工作階段權杖仍會為每個要求的參考模式運作，並會優先使用前者只設定<xref:System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode%2A?displayProperty=fullName>工作階段驗證模組上的屬性。</xref:System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode%2A?displayProperty=fullName>       <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>WIF 所提供的類別序列化為 Ws-secure Conversation 工作階段權杖`<wsc:SecurityContextToken>`項目。</xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>"
  syntax:
    content: 'public class SessionSecurityToken : System.IdentityModel.Tokens.SecurityToken, System.Runtime.Serialization.ISerializable'
  inheritance:
  - System.Object
  - System.IdentityModel.Tokens.SecurityToken
  implements:
  - System.Runtime.Serialization.ISerializable
  inheritedMembers:
  - System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause``1
  - System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause``1
  - System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  - System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal)
  id: '#ctor(System.Security.Claims.ClaimsPrincipal)'
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  langs:
  - csharp
  name: SessionSecurityToken(ClaimsPrincipal)
  nameWithType: SessionSecurityToken.SessionSecurityToken(ClaimsPrincipal)
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.SessionSecurityToken(ClaimsPrincipal)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "初始化的新執行個體<xref href=&quot;System.IdentityModel.Tokens.SessionSecurityToken&quot;></xref>類別，從指定的主體。"
  remarks: "下表顯示的<xref:System.IdentityModel.Tokens.SessionSecurityToken>類別</xref:System.IdentityModel.Tokens.SessionSecurityToken>執行個體的初始屬性值      |屬性 |初始值 |  |--------------|-------------------|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal%2A>|`claimsPrincipal`|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.Context%2A>|`null`|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A>|設定為產生的唯一 id。 |  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A>|<xref:System.String.Empty?displayProperty=fullName>|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A>|設定為產生的唯一 id。 |  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent%2A>|`false`|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A>|`false`|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime%2A>|<xref:System.DateTime.UtcNow%2A>|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime%2A>|<xref:System.DateTime.UtcNow%2A>再加上<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime%2A?displayProperty=fullName>屬性。 |  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A>|`null`|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys%2A>|包含產生 128 位元的對稱金鑰。</xref:System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A> </xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime%2A?displayProperty=fullName> </xref:System.DateTime.UtcNow%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime%2A> </xref:System.DateTime.UtcNow%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A> </xref:System.String.Empty?displayProperty=fullName> </xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.Context%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal%2A> **注意︰**預設實作不會使用這個屬性。 簽署和加密金鑰會取決於所套用的<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>cookie 轉換，可處理語彙基元。 |  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A>|<xref:System.DateTime.UtcNow%2A>|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A>|<xref:System.DateTime.UtcNow%2A>加上<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime%2A?displayProperty=fullName>屬性。 |</xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime%2A?displayProperty=fullName> </xref:System.DateTime.UtcNow%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A> </xref:System.DateTime.UtcNow%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A> </xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>"
  syntax:
    content: public SessionSecurityToken (System.Security.Claims.ClaimsPrincipal claimsPrincipal);
    parameters:
    - id: claimsPrincipal
      type: System.Security.Claims.ClaimsPrincipal
      description: "從用來初始化語彙基元宣告主體。"
  overload: System.IdentityModel.Tokens.SessionSecurityToken.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>claimsPrincipal</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       The <xref:System.Security.Claims.ClaimsPrincipal.Identities*> property of <code>claimsPrincipal</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  langs:
  - csharp
  name: SessionSecurityToken(SerializationInfo,StreamingContext)
  nameWithType: SessionSecurityToken.SessionSecurityToken(SerializationInfo,StreamingContext)
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.SessionSecurityToken(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "初始化的新執行個體<xref href=&quot;System.IdentityModel.Tokens.SessionSecurityToken&quot;></xref>使用序列化資料的類別。"
  syntax:
    content: protected SessionSecurityToken (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "序列化的物件資料。"
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "內容來源的相關資訊。"
  overload: System.IdentityModel.Tokens.SessionSecurityToken.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.String)
  id: '#ctor(System.Security.Claims.ClaimsPrincipal,System.String)'
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  langs:
  - csharp
  name: SessionSecurityToken(ClaimsPrincipal,String)
  nameWithType: SessionSecurityToken.SessionSecurityToken(ClaimsPrincipal,String)
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.SessionSecurityToken(ClaimsPrincipal,String)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "初始化的新執行個體<xref href=&quot;System.IdentityModel.Tokens.SessionSecurityToken&quot;></xref>從指定的主體與啟動程序權杖的類別。"
  remarks: "下表顯示的<xref:System.IdentityModel.Tokens.SessionSecurityToken>類別</xref:System.IdentityModel.Tokens.SessionSecurityToken>執行個體的初始屬性值      |屬性 |初始值 |  |--------------|-------------------|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal%2A>|`claimsPrincipal`|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.Context%2A>|`context`|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A>|設定為產生的唯一 id。 |  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A>|<xref:System.String.Empty?displayProperty=fullName>|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A>|設定為產生的唯一 id。 |  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent%2A>|`false`|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A>|`false`|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime%2A>|<xref:System.DateTime.UtcNow%2A>|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime%2A>|<xref:System.DateTime.UtcNow%2A>再加上<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime%2A?displayProperty=fullName>屬性。 |  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A>|`null`|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys%2A>|包含產生 128 位元的對稱金鑰。</xref:System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A> </xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime%2A?displayProperty=fullName> </xref:System.DateTime.UtcNow%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime%2A> </xref:System.DateTime.UtcNow%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A> </xref:System.String.Empty?displayProperty=fullName> </xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.Context%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal%2A> **注意︰**預設實作不會使用這個屬性。 簽署和加密金鑰會取決於所套用的<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>cookie 轉換，可處理語彙基元。 |  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A>|<xref:System.DateTime.UtcNow%2A>|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A>|<xref:System.DateTime.UtcNow%2A>加上<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime%2A?displayProperty=fullName>屬性。 |</xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime%2A?displayProperty=fullName> </xref:System.DateTime.UtcNow%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A> </xref:System.DateTime.UtcNow%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A> </xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>"
  syntax:
    content: public SessionSecurityToken (System.Security.Claims.ClaimsPrincipal claimsPrincipal, string context);
    parameters:
    - id: claimsPrincipal
      type: System.Security.Claims.ClaimsPrincipal
      description: "啟動程序的 token 所產生的宣告主體。"
    - id: context
      type: System.String
      description: "選擇性的應用程式特定內容字串。"
  overload: System.IdentityModel.Tokens.SessionSecurityToken.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>claimsPrincipal</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       The <xref:System.Security.Claims.ClaimsPrincipal.Identities*> property of <code>claimsPrincipal</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.TimeSpan)
  id: '#ctor(System.Security.Claims.ClaimsPrincipal,System.TimeSpan)'
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  langs:
  - csharp
  name: SessionSecurityToken(ClaimsPrincipal,TimeSpan)
  nameWithType: SessionSecurityToken.SessionSecurityToken(ClaimsPrincipal,TimeSpan)
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.SessionSecurityToken(ClaimsPrincipal,TimeSpan)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "初始化的新執行個體<xref href=&quot;System.IdentityModel.Tokens.SessionSecurityToken&quot;></xref>類別，從指定的主體。 新的權杖的有效<xref:System.DateTime.UtcNow*>透過指定的 lifetime。</xref:System.DateTime.UtcNow*>"
  remarks: "下表顯示的<xref:System.IdentityModel.Tokens.SessionSecurityToken>類別</xref:System.IdentityModel.Tokens.SessionSecurityToken>執行個體的初始屬性值      |屬性 |初始值 |  |--------------|-------------------|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal%2A>|`claimsPrincipal`|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.Context%2A>|`null`|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A>|設定為產生的唯一 id。 |  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A>|<xref:System.String.Empty?displayProperty=fullName>|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A>|設定為產生的唯一 id。 |  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent%2A>|`false`|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A>|`false`|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime%2A>|<xref:System.DateTime.UtcNow%2A>|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime%2A>|<xref:System.DateTime.UtcNow%2A> plus `lifetime`.|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A>|`null`|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys%2A>|包含產生 128 位元的對稱金鑰。</xref:System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A> </xref:System.DateTime.UtcNow%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime%2A> </xref:System.DateTime.UtcNow%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A> </xref:System.String.Empty?displayProperty=fullName> </xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.Context%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal%2A> **注意︰**預設實作不會使用這個屬性。 簽署和加密金鑰會取決於所套用的<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>cookie 轉換，可處理語彙基元。 |  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A>|<xref:System.DateTime.UtcNow%2A>|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A>|<xref:System.DateTime.UtcNow%2A> plus `lifetime`.|</xref:System.DateTime.UtcNow%2A></xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A></xref:System.DateTime.UtcNow%2A></xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A></xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>"
  syntax:
    content: public SessionSecurityToken (System.Security.Claims.ClaimsPrincipal claimsPrincipal, TimeSpan lifetime);
    parameters:
    - id: claimsPrincipal
      type: System.Security.Claims.ClaimsPrincipal
      description: "從用來初始化語彙基元宣告主體。"
    - id: lifetime
      type: System.TimeSpan
      description: "從目前的時間期間，權杖的有效期間。 <> </> *> 屬性將設定為<> *> 和<> *> 屬性將設定為<> *> 再加上此參數所指定的期間。"
  overload: System.IdentityModel.Tokens.SessionSecurityToken.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>claimsPrincipal</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       The <xref:System.Security.Claims.ClaimsPrincipal.Identities*> property of <code>claimsPrincipal</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>lifetime</code>小於或等於<xref:System.TimeSpan.Zero>。"
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})
  id: '#ctor(System.Security.Claims.ClaimsPrincipal,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})'
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  langs:
  - csharp
  name: SessionSecurityToken(ClaimsPrincipal,String,Nullable<DateTime>,Nullable<DateTime>)
  nameWithType: SessionSecurityToken.SessionSecurityToken(ClaimsPrincipal,String,Nullable<DateTime>,Nullable<DateTime>)
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.SessionSecurityToken(ClaimsPrincipal,String,Nullable<DateTime>,Nullable<DateTime>)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "初始化的新執行個體<xref href=&quot;System.IdentityModel.Tokens.SessionSecurityToken&quot;></xref>類別從指定的主體和啟動程序權杖，並使用指定開始時間和到期時間。"
  remarks: "下表顯示的<xref:System.IdentityModel.Tokens.SessionSecurityToken>類別</xref:System.IdentityModel.Tokens.SessionSecurityToken>執行個體的初始屬性值      |屬性 |初始值 |  |--------------|-------------------|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal%2A>|`claimsPrincipal`|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.Context%2A>|`context`|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A>|設定為產生的唯一 id。 |  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A>|<xref:System.String.Empty?displayProperty=fullName>|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A>|設定為產生的唯一 id。 |  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent%2A>|`false`|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A>|`false`|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime%2A>|設定由<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A>屬性的值為`ValidFrom`參數。 |  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime%2A>|由<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A>屬性的值`ValidTo`參數。 |  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A>|`null`|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys%2A>|包含產生 128 位元的對稱金鑰。</xref:System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A> </xref:System.String.Empty?displayProperty=fullName> </xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.Context%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal%2A> **注意︰**預設實作不會使用這個屬性。 簽署和加密金鑰會取決於所套用的<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>cookie 轉換，可處理語彙基元。 |  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A>|值`validFrom`參數，或者，如果`validFrom`是`null`， <xref:System.DateTime.UtcNow%2A>。 |  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A>|值`validFrom`參數。</xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A> </xref:System.DateTime.UtcNow%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A> </xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> 如果`validFrom`是`null`，值<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A>屬性 (由`validFrom`參數) 再加上<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime%2A?displayProperty=fullName>屬性。 |</xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime%2A?displayProperty=fullName> </xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A>"
  syntax:
    content: public SessionSecurityToken (System.Security.Claims.ClaimsPrincipal claimsPrincipal, string context, Nullable<DateTime> validFrom, Nullable<DateTime> validTo);
    parameters:
    - id: claimsPrincipal
      type: System.Security.Claims.ClaimsPrincipal
      description: "啟動程序的 token 所產生的宣告主體。"
    - id: context
      type: System.String
      description: "選擇性的應用程式特定內容字串。"
    - id: validFrom
      type: System.Nullable{System.DateTime}
      description: "時間片刻權杖生效。 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>若要指定<xref:System.DateTime.UtcNow*></xref:System.DateTime.UtcNow*>"
    - id: validTo
      type: System.Nullable{System.DateTime}
      description: "時間片刻後權杖已不再有效。 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>若要指定值都應該由的值加入&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime%2A?displayProperty=fullName&gt;屬性所指定的時間來`validFrom`參數。"
  overload: System.IdentityModel.Tokens.SessionSecurityToken.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>claimsPrincipal</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       The <xref:System.Security.Claims.ClaimsPrincipal.Identities*> property of <code>claimsPrincipal</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code> validFrom </code>和<code> validTo </code>無法驗證參數; 例如， <code> validTo </code>指定，就會發生的時間早於<code> validFrom </code>。"
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})
  id: '#ctor(System.Security.Claims.ClaimsPrincipal,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})'
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  langs:
  - csharp
  name: SessionSecurityToken(ClaimsPrincipal,String,String,Nullable<DateTime>,Nullable<DateTime>)
  nameWithType: SessionSecurityToken.SessionSecurityToken(ClaimsPrincipal,String,String,Nullable<DateTime>,Nullable<DateTime>)
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.SessionSecurityToken(ClaimsPrincipal,String,String,Nullable<DateTime>,Nullable<DateTime>)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "初始化的新執行個體<xref href=&quot;System.IdentityModel.Tokens.SessionSecurityToken&quot;></xref>類別從指定的主體和啟動程序權杖，並使用指定開始時間和到期時間。 新的語彙基元範圍指定的端點。"
  remarks: "下表顯示的<xref:System.IdentityModel.Tokens.SessionSecurityToken>類別</xref:System.IdentityModel.Tokens.SessionSecurityToken>執行個體的初始屬性值      |屬性 |初始值 |  |--------------|-------------------|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal%2A>|`claimsPrincipal`|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.Context%2A>|`context`|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A>|設定為產生的唯一 id。 |  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A>|`endpointId`|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A>|設定為產生的唯一 id。 |  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent%2A>|`false`|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A>|`false`|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime%2A>|設定由<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A>屬性的值為`ValidFrom`參數。 |  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime%2A>|由<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A>屬性的值`ValidTo`參數。 |  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A>|`null`|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys%2A>|包含產生 128 位元的對稱金鑰。</xref:System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.Context%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal%2A> **注意︰**預設實作不會使用這個屬性。 簽署和加密金鑰會取決於所套用的<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>cookie 轉換，可處理語彙基元。 |  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A>|值`validFrom`參數，或者，如果`validFrom`是`null`， <xref:System.DateTime.UtcNow%2A>。 |  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A>|值`validFrom`參數。</xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A> </xref:System.DateTime.UtcNow%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A> </xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> 如果`validFrom`是`null`，值<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A>屬性 (由`validFrom`參數) 再加上<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime%2A?displayProperty=fullName>屬性。 |</xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime%2A?displayProperty=fullName> </xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A>"
  syntax:
    content: public SessionSecurityToken (System.Security.Claims.ClaimsPrincipal claimsPrincipal, string context, string endpointId, Nullable<DateTime> validFrom, Nullable<DateTime> validTo);
    parameters:
    - id: claimsPrincipal
      type: System.Security.Claims.ClaimsPrincipal
      description: "啟動程序的 token 所產生的宣告主體。"
    - id: context
      type: System.String
      description: "選擇性的應用程式特定內容字串。"
    - id: endpointId
      type: System.String
      description: "這個語彙基元繫結至端點。 空字串會建立不限範圍的語彙基元。"
    - id: validFrom
      type: System.Nullable{System.DateTime}
      description: "時間片刻權杖生效。 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>若要指定<xref:System.DateTime.UtcNow*>.</xref:System.DateTime.UtcNow*>"
    - id: validTo
      type: System.Nullable{System.DateTime}
      description: "時間片刻後權杖已不再有效。 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>若要指定值都應該由的值加入&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime%2A?displayProperty=fullName&gt;屬性所指定的時間來`validFrom`參數。"
  overload: System.IdentityModel.Tokens.SessionSecurityToken.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>claimsPrincipal</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       The <xref:System.Security.Claims.ClaimsPrincipal.Identities*> property of <code>claimsPrincipal</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>endpointId</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code> validFrom </code>和<code> validTo </code>無法驗證參數; 例如， <code> validTo </code>指定，就會發生的時間早於<code> validFrom </code>。"
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.Xml.UniqueId,System.String,System.String,System.TimeSpan,System.IdentityModel.Tokens.SymmetricSecurityKey)
  id: '#ctor(System.Security.Claims.ClaimsPrincipal,System.Xml.UniqueId,System.String,System.String,System.TimeSpan,System.IdentityModel.Tokens.SymmetricSecurityKey)'
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  langs:
  - csharp
  name: SessionSecurityToken(ClaimsPrincipal,UniqueId,String,String,TimeSpan,SymmetricSecurityKey)
  nameWithType: SessionSecurityToken.SessionSecurityToken(ClaimsPrincipal,UniqueId,String,String,TimeSpan,SymmetricSecurityKey)
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.SessionSecurityToken(ClaimsPrincipal,UniqueId,String,String,TimeSpan,SymmetricSecurityKey)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "初始化的新執行個體<xref href=&quot;System.IdentityModel.Tokens.SessionSecurityToken&quot;></xref>使用指定的主體、 內容識別碼、 內容、 端點、 存留期和索引鍵的類別。"
  remarks: "下表顯示的<xref:System.IdentityModel.Tokens.SessionSecurityToken>類別</xref:System.IdentityModel.Tokens.SessionSecurityToken>執行個體的初始屬性值      |屬性 |初始值 |  |--------------|-------------------|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal%2A>|`claimsPrincipal`|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.Context%2A>|`context`|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A>|`contextId`|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A>|`endpointId`|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A>|設定為產生的唯一 id。 |  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent%2A>|`false`|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A>|`false`|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime%2A>|<xref:System.DateTime.UtcNow%2A>|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime%2A>|<xref:System.DateTime.UtcNow%2A> plus `lifetime`|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A>|`null`|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys%2A>|包含單一項目，即`key`或者，如果`key`是`null`，產生的 128 位元對稱金鑰。</xref:System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A> </xref:System.DateTime.UtcNow%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime%2A> </xref:System.DateTime.UtcNow%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.Context%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal%2A> **注意︰**預設實作不會使用這個屬性。 簽署和加密金鑰會取決於所套用的<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>cookie 轉換，可處理語彙基元。 |  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A>|<xref:System.DateTime.UtcNow%2A>|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A>|<xref:System.DateTime.UtcNow%2A> plus `lifetime`|</xref:System.DateTime.UtcNow%2A></xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A></xref:System.DateTime.UtcNow%2A></xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A></xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>"
  syntax:
    content: public SessionSecurityToken (System.Security.Claims.ClaimsPrincipal claimsPrincipal, System.Xml.UniqueId contextId, string context, string endpointId, TimeSpan lifetime, System.IdentityModel.Tokens.SymmetricSecurityKey key);
    parameters:
    - id: claimsPrincipal
      type: System.Security.Claims.ClaimsPrincipal
      description: "此工作階段相關聯的宣告主體。"
    - id: contextId
      type: System.Xml.UniqueId
      description: "這個語彙基元相關聯的內容識別碼。"
    - id: context
      type: System.String
      description: "選擇性的應用程式特定內容字串。"
    - id: endpointId
      type: System.String
      description: "這個語彙基元繫結至端點。 空字串會建立不限範圍的語彙基元。"
    - id: lifetime
      type: System.TimeSpan
      description: "工作階段權杖的存留期。 <> </> *> 屬性將設定為<> *> 和<> *> 屬性將設定為<> *> 再加上此參數所指定的期間。"
    - id: key
      type: System.IdentityModel.Tokens.SymmetricSecurityKey
      description: "選擇性的對稱工作階段金鑰。"
  overload: System.IdentityModel.Tokens.SessionSecurityToken.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>claimsPrincipal</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       The <xref:System.Security.Claims.ClaimsPrincipal.Identities*> property of <code>claimsPrincipal</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>contextId</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>endpointId</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>lifetime</code>小於或等於<xref:System.TimeSpan.Zero>。"
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.Xml.UniqueId,System.String,System.String,System.DateTime,System.TimeSpan,System.IdentityModel.Tokens.SymmetricSecurityKey)
  id: '#ctor(System.Security.Claims.ClaimsPrincipal,System.Xml.UniqueId,System.String,System.String,System.DateTime,System.TimeSpan,System.IdentityModel.Tokens.SymmetricSecurityKey)'
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  langs:
  - csharp
  name: SessionSecurityToken(ClaimsPrincipal,UniqueId,String,String,DateTime,TimeSpan,SymmetricSecurityKey)
  nameWithType: SessionSecurityToken.SessionSecurityToken(ClaimsPrincipal,UniqueId,String,String,DateTime,TimeSpan,SymmetricSecurityKey)
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.SessionSecurityToken(ClaimsPrincipal,UniqueId,String,String,DateTime,TimeSpan,SymmetricSecurityKey)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "初始化的新執行個體<xref href=&quot;System.IdentityModel.Tokens.SessionSecurityToken&quot;></xref>使用指定的主體、 內容識別碼、 內容、 端點、 有效的時間戳記，存留期和索引鍵的類別。"
  remarks: "下表顯示的<xref:System.IdentityModel.Tokens.SessionSecurityToken>類別</xref:System.IdentityModel.Tokens.SessionSecurityToken>執行個體的初始屬性值      |屬性 |初始值 |  |--------------|-------------------|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal%2A>|`claimsPrincipal`|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.Context%2A>|`context`|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A>|`contextId`或者，如果`contextId`是`null`、 產生的唯一識別碼。 |  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A>|`endpointId`|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A>|設定為產生的唯一 id。 |  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent%2A>|`false`|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A>|`false`|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime%2A>|`validFrom`|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime%2A>|`validFrom` plus `lifetime`.|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A>|`null`|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys%2A>|包含單一項目，即`key`或者，如果`key`是`null`，產生的 128 位元對稱金鑰。</xref:System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.Context%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal%2A> **注意︰**預設實作不會使用這個屬性。 簽署和加密金鑰會取決於所套用的<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>cookie 轉換，可處理語彙基元。 |  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A>|`validFrom`|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A>|`validFrom` plus `lifetime`.|</xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A></xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A></xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>"
  syntax:
    content: public SessionSecurityToken (System.Security.Claims.ClaimsPrincipal claimsPrincipal, System.Xml.UniqueId contextId, string context, string endpointId, DateTime validFrom, TimeSpan lifetime, System.IdentityModel.Tokens.SymmetricSecurityKey key);
    parameters:
    - id: claimsPrincipal
      type: System.Security.Claims.ClaimsPrincipal
      description: "此工作階段相關聯的宣告主體。"
    - id: contextId
      type: System.Xml.UniqueId
      description: "這個語彙基元相關聯的內容識別碼。"
    - id: context
      type: System.String
      description: "選擇性的應用程式特定內容字串。"
    - id: endpointId
      type: System.String
      description: "這個語彙基元繫結至端點。 空字串會建立不限範圍的語彙基元。"
    - id: validFrom
      type: System.DateTime
      description: "權杖生效時間。"
    - id: lifetime
      type: System.TimeSpan
      description: "工作階段權杖的存留期。 <> </> *> 屬性將設定為<> *> 再加上此參數所指定的期間。"
    - id: key
      type: System.IdentityModel.Tokens.SymmetricSecurityKey
      description: "選擇性的對稱工作階段金鑰。"
  overload: System.IdentityModel.Tokens.SessionSecurityToken.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>claimsPrincipal</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       The <xref:System.Security.Claims.ClaimsPrincipal.Identities*> property of <code>claimsPrincipal</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>contextId</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>endpointId</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>lifetime</code>小於或等於<xref:System.TimeSpan.Zero>。"
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.Xml.UniqueId,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.IdentityModel.Tokens.SymmetricSecurityKey)
  id: '#ctor(System.Security.Claims.ClaimsPrincipal,System.Xml.UniqueId,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.IdentityModel.Tokens.SymmetricSecurityKey)'
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  langs:
  - csharp
  name: SessionSecurityToken(ClaimsPrincipal,UniqueId,String,String,Nullable<DateTime>,Nullable<DateTime>,SymmetricSecurityKey)
  nameWithType: SessionSecurityToken.SessionSecurityToken(ClaimsPrincipal,UniqueId,String,String,Nullable<DateTime>,Nullable<DateTime>,SymmetricSecurityKey)
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.SessionSecurityToken(ClaimsPrincipal,UniqueId,String,String,Nullable<DateTime>,Nullable<DateTime>,SymmetricSecurityKey)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "初始化的新執行個體<xref href=&quot;System.IdentityModel.Tokens.SessionSecurityToken&quot;></xref>使用指定的主體、 內容識別碼、 內容、 端點、 開始時間、 到期時間和索引鍵的類別。"
  remarks: "下表顯示的<xref:System.IdentityModel.Tokens.SessionSecurityToken>類別</xref:System.IdentityModel.Tokens.SessionSecurityToken>執行個體的初始屬性值      |屬性 |初始值 |  |--------------|-------------------|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal%2A>|`claimsPrincipal`|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.Context%2A>|`context`|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A>|`contextId`|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A>|`endpointId`|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A>|設定為產生的唯一 id。 |  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent%2A>|`false`|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A>|`false`|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime%2A>|設定由<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A>屬性的值為`ValidFrom`參數。 |  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime%2A>|由<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A>屬性的值`ValidTo`參數。 |  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A>|`null`|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys%2A>|包含單一項目，即`key`或者，如果`key`是`null`，產生的 128 位元對稱金鑰。</xref:System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.Context%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal%2A> **注意︰**預設實作不會使用這個屬性。 簽署和加密金鑰會取決於所套用的<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>cookie 轉換，可處理語彙基元。 |  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A>|值`validFrom`參數，或者，如果`validFrom`是`null`， <xref:System.DateTime.UtcNow%2A>。 |  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A>|值`validFrom`參數。</xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A> </xref:System.DateTime.UtcNow%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A> </xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> 如果`validFrom`是`null`，值<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A>屬性 (由`validFrom`參數) 再加上<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime%2A?displayProperty=fullName>屬性。 |</xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime%2A?displayProperty=fullName> </xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A>"
  syntax:
    content: public SessionSecurityToken (System.Security.Claims.ClaimsPrincipal claimsPrincipal, System.Xml.UniqueId contextId, string context, string endpointId, Nullable<DateTime> validFrom, Nullable<DateTime> validTo, System.IdentityModel.Tokens.SymmetricSecurityKey key);
    parameters:
    - id: claimsPrincipal
      type: System.Security.Claims.ClaimsPrincipal
      description: "此工作階段相關聯的宣告主體。"
    - id: contextId
      type: System.Xml.UniqueId
      description: "這個語彙基元相關聯的內容識別碼。"
    - id: context
      type: System.String
      description: "選擇性的應用程式特定內容字串。"
    - id: endpointId
      type: System.String
      description: "這個語彙基元繫結至端點。 空字串會建立不限範圍的語彙基元。"
    - id: validFrom
      type: System.Nullable{System.DateTime}
      description: "時間片刻權杖生效。 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>若要指定<xref:System.DateTime.UtcNow*></xref:System.DateTime.UtcNow*>"
    - id: validTo
      type: System.Nullable{System.DateTime}
      description: "時間片刻後權杖已不再有效。 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>若要指定值都應該由的值加入&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime%2A?displayProperty=fullName&gt;屬性所指定的時間來`validFrom`參數。"
    - id: key
      type: System.IdentityModel.Tokens.SymmetricSecurityKey
      description: "選擇性的對稱工作階段金鑰。"
  overload: System.IdentityModel.Tokens.SessionSecurityToken.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>claimsPrincipal</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       The <xref:System.Security.Claims.ClaimsPrincipal.Identities*> property of <code>claimsPrincipal</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>contextId</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>validFrom</code>大於或等於<code>validTo</code>。       -或-<code>validTo</code>小於目前時間。"
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal
  id: ClaimsPrincipal
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  langs:
  - csharp
  name: ClaimsPrincipal
  nameWithType: SessionSecurityToken.ClaimsPrincipal
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "取得與工作階段相關聯的宣告主體。"
  syntax:
    content: public System.Security.Claims.ClaimsPrincipal ClaimsPrincipal { get; }
    return:
      type: System.Security.Claims.ClaimsPrincipal
      description: "宣告主體。"
  overload: System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SessionSecurityToken.Context
  id: Context
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  langs:
  - csharp
  name: Context
  nameWithType: SessionSecurityToken.Context
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.Context
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "取得使用者指定內容值。"
  remarks: "您可以使用這個屬性來儲存應用程式專屬的內容。"
  syntax:
    content: public string Context { get; }
    return:
      type: System.String
      description: "使用者指定的內容值。"
  overload: System.IdentityModel.Tokens.SessionSecurityToken.Context*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SessionSecurityToken.ContextId
  id: ContextId
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  langs:
  - csharp
  name: ContextId
  nameWithType: SessionSecurityToken.ContextId
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.ContextId
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "取得工作階段內容識別碼"
  remarks: "跨所有工作階段權杖的內容識別項是唯一的。       <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey>類別會使用內容識別碼及產生<xref:System.IdentityModel.Tokens.SessionSecurityTokenCache>。</xref:System.IdentityModel.Tokens.SessionSecurityTokenCache>權杖金鑰的金鑰產生</xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey>的       <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>類別會序列化此屬性做為`<Identifier>`子項目`<wsc:SecurityContextToken>`項目。</xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> 如需詳細資訊，請參閱文件<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A?displayProperty=fullName>方法。</xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A?displayProperty=fullName>"
  syntax:
    content: public System.Xml.UniqueId ContextId { get; }
    return:
      type: System.Xml.UniqueId
      description: "工作階段內容識別碼。"
  overload: System.IdentityModel.Tokens.SessionSecurityToken.ContextId*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SessionSecurityToken.EndpointId
  id: EndpointId
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  langs:
  - csharp
  name: EndpointId
  nameWithType: SessionSecurityToken.EndpointId
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.EndpointId
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "取得的端點設定為這個語彙基元的識別碼。"
  remarks: >-
    > [!IMPORTANT]

    >  If the EndpointId property is `null`, the session token is treated as globally scoped by the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> class. This can present a potential security risk.
  syntax:
    content: public string EndpointId { get; }
    return:
      type: System.String
      description: "端點的識別碼。"
  overload: System.IdentityModel.Tokens.SessionSecurityToken.EndpointId*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SessionSecurityToken.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  langs:
  - csharp
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: SessionSecurityToken.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "設定<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;></xref>序列化工作階段安全性權杖所需資訊。"
  syntax:
    content: public virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "序列化的物件資料。"
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "關於來源或目的端內容資訊。"
  overload: System.IdentityModel.Tokens.SessionSecurityToken.GetObjectData*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SessionSecurityToken.Id
  id: Id
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  langs:
  - csharp
  name: Id
  nameWithType: SessionSecurityToken.Id
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.Id
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "取得這個語彙基元的唯一識別碼。"
  remarks: "<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>類別會序列化此屬性做為`Id`屬性`<wsc:SecurityContextToken>`項目。</xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> 如需詳細資訊，請參閱文件<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A?displayProperty=fullName>方法。</xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A?displayProperty=fullName>"
  syntax:
    content: public override string Id { get; }
    return:
      type: System.String
      description: "權杖識別碼。"
  overload: System.IdentityModel.Tokens.SessionSecurityToken.Id*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent
  id: IsPersistent
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  langs:
  - csharp
  name: IsPersistent
  nameWithType: SessionSecurityToken.IsPersistent
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "取得或設定值，這個值表示這個語彙基元所代表的 cookie 是否為永續性。"
  remarks: "如果 IsPersistent 屬性為`true`，cookie 會寫入成為永續性 cookie。 在過期之前關閉瀏覽器後，持續性 cookies 維持有效。"
  syntax:
    content: public bool IsPersistent { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果 cookie 是永久性;否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode
  id: IsReferenceMode
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  langs:
  - csharp
  name: IsReferenceMode
  nameWithType: SessionSecurityToken.IsReferenceMode
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "取得或設定值，指出工作階段安全性權杖是否參考模式中操作。"
  remarks: "參考模式，在序列化期間產生簡單的成品並將權杖內容權杖，權杖處理常式相關聯的快取中儲存。 權杖快取是衍生自<xref:System.IdentityModel.Tokens.SessionSecurityTokenCache>.</xref:System.IdentityModel.Tokens.SessionSecurityTokenCache>類別的執行個體 Web 伺服陣列案例中，權杖快取必須在伺服陣列中的所有節點之間運作。      > [!IMPORTANT] > 參考模式中操作 Microsoft 建議您提供的處理常式<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated?displayProperty=fullName>global.asax.cs 檔案和設定 IsReferenceMode 屬性對這個語彙基元中的事件傳遞<xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.SessionToken%2A?displayProperty=fullName>屬性。</xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.SessionToken%2A?displayProperty=fullName> </xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated?displayProperty=fullName> 這可確保工作階段權杖仍會為每個要求的參考模式運作，並會優先使用前者只設定<xref:System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode%2A?displayProperty=fullName>工作階段驗證模組上的屬性。</xref:System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsReferenceMode { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果語彙基元工作階段模式中運作否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime
  id: KeyEffectiveTime
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  langs:
  - csharp
  name: KeyEffectiveTime
  nameWithType: SessionSecurityToken.KeyEffectiveTime
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "取得這個語彙基元中的索引鍵的有效來源的即時時間。"
  syntax:
    content: public DateTime KeyEffectiveTime { get; }
    return:
      type: System.DateTime
      description: "時間片刻索引鍵的有效來源。"
  overload: System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime
  id: KeyExpirationTime
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  langs:
  - csharp
  name: KeyExpirationTime
  nameWithType: SessionSecurityToken.KeyExpirationTime
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "取得的時間立即之後，此權杖中的索引鍵便不再有效。"
  syntax:
    content: public DateTime KeyExpirationTime { get; }
    return:
      type: System.DateTime
      description: "立即的金鑰到期時間。"
  overload: System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration
  id: KeyGeneration
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  langs:
  - csharp
  name: KeyGeneration
  nameWithType: SessionSecurityToken.KeyGeneration
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "取得此權杖中的金鑰產生的識別項"
  remarks: "KeyGeneration 屬性內是唯一的工作階段權杖。 當發出工作階段權杖時有只有一個內容識別碼，可透過存取<xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A>屬性。</xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A> 更新工作階段權杖後，會加入金鑰產生。       <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey>類別會使用內容識別碼及產生<xref:System.IdentityModel.Tokens.SessionSecurityTokenCache>。</xref:System.IdentityModel.Tokens.SessionSecurityTokenCache>權杖金鑰的金鑰產生</xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey>的       <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>類別會序列化此屬性做為`<Instance>`子項目`<wsc:SecurityContextToken>`項目。</xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> 如需詳細資訊，請參閱文件<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A?displayProperty=fullName>方法。</xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A?displayProperty=fullName>"
  syntax:
    content: public System.Xml.UniqueId KeyGeneration { get; }
    return:
      type: System.Xml.UniqueId
      description: "此權杖中的索引鍵產生唯一識別碼。"
  overload: System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SessionSecurityToken.SecureConversationVersion
  id: SecureConversationVersion
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  langs:
  - csharp
  name: SecureConversationVersion
  nameWithType: SessionSecurityToken.SecureConversationVersion
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.SecureConversationVersion
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "取得 URI，識別用來序列化此工作階段安全性的 Ws-secure Conversation 版本語彙基元。"
  remarks: "<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>基底類別支援 Ws-secure Conversation Feb2005 和 Ws-secure Conversation 1.3。</xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> 這些版本的 Ws-secure Conversation 的 Uri 會分別為&quot;http://schemas.xmlsoap.org/ws/2005/02/sc&quot;和&quot;http://docs.oasis-open.org/ws-sx/ws-secureconversation/200512&quot;。"
  syntax:
    content: public Uri SecureConversationVersion { get; }
    return:
      type: System.Uri
      description: "識別用來序列化此語彙基元的 Ws-secure Conversation 版本 URI。"
  overload: System.IdentityModel.Tokens.SessionSecurityToken.SecureConversationVersion*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys
  id: SecurityKeys
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  langs:
  - csharp
  name: SecurityKeys
  nameWithType: SessionSecurityToken.SecurityKeys
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "取得與此工作階段相關聯的金鑰。 這通常是單一索引鍵。"
  remarks: >-
    > [!NOTE]

    >  The default implementation does not use this property. Signing and encryption keys are dictated by the cookie transforms applied by the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> that processes the token.
  syntax:
    content: public override System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Tokens.SecurityKey> SecurityKeys { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Tokens.SecurityKey}
      description: "與工作階段相關聯的金鑰。 通常是單一索引鍵。"
  overload: System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom
  id: ValidFrom
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  langs:
  - csharp
  name: ValidFrom
  nameWithType: SessionSecurityToken.ValidFrom
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "取得從中權杖是有效的即時時間。"
  syntax:
    content: public override DateTime ValidFrom { get; }
    return:
      type: System.DateTime
      description: "從中權杖是有效的時間。"
  overload: System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SessionSecurityToken.ValidTo
  id: ValidTo
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  langs:
  - csharp
  name: ValidTo
  nameWithType: SessionSecurityToken.ValidTo
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.ValidTo
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "取得的時間立即後權杖已不再有效。"
  syntax:
    content: public override DateTime ValidTo { get; }
    return:
      type: System.DateTime
      description: "時間後權杖已不再有效。"
  overload: System.IdentityModel.Tokens.SessionSecurityToken.ValidTo*
  exceptions: []
  platform:
  - net462
references:
- uid: System.IdentityModel.Tokens.SecurityToken
  isExternal: false
  name: System.IdentityModel.Tokens.SecurityToken
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal)
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: SessionSecurityToken(ClaimsPrincipal)
  nameWithType: SessionSecurityToken.SessionSecurityToken(ClaimsPrincipal)
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.SessionSecurityToken(ClaimsPrincipal)
- uid: System.Security.Claims.ClaimsPrincipal
  parent: System.Security.Claims
  isExternal: false
  name: ClaimsPrincipal
  nameWithType: ClaimsPrincipal
  fullName: System.Security.Claims.ClaimsPrincipal
- uid: System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: SessionSecurityToken(SerializationInfo,StreamingContext)
  nameWithType: SessionSecurityToken.SessionSecurityToken(SerializationInfo,StreamingContext)
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.SessionSecurityToken(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.String)
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: SessionSecurityToken(ClaimsPrincipal,String)
  nameWithType: SessionSecurityToken.SessionSecurityToken(ClaimsPrincipal,String)
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.SessionSecurityToken(ClaimsPrincipal,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.TimeSpan)
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: SessionSecurityToken(ClaimsPrincipal,TimeSpan)
  nameWithType: SessionSecurityToken.SessionSecurityToken(ClaimsPrincipal,TimeSpan)
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.SessionSecurityToken(ClaimsPrincipal,TimeSpan)
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: SessionSecurityToken(ClaimsPrincipal,String,Nullable<DateTime>,Nullable<DateTime>)
  nameWithType: SessionSecurityToken.SessionSecurityToken(ClaimsPrincipal,String,Nullable<DateTime>,Nullable<DateTime>)
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.SessionSecurityToken(ClaimsPrincipal,String,Nullable<DateTime>,Nullable<DateTime>)
- uid: System.Nullable{System.DateTime}
  parent: System
  isExternal: true
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.DateTime>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: DateTime
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: SessionSecurityToken(ClaimsPrincipal,String,String,Nullable<DateTime>,Nullable<DateTime>)
  nameWithType: SessionSecurityToken.SessionSecurityToken(ClaimsPrincipal,String,String,Nullable<DateTime>,Nullable<DateTime>)
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.SessionSecurityToken(ClaimsPrincipal,String,String,Nullable<DateTime>,Nullable<DateTime>)
- uid: System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.Xml.UniqueId,System.String,System.String,System.TimeSpan,System.IdentityModel.Tokens.SymmetricSecurityKey)
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: SessionSecurityToken(ClaimsPrincipal,UniqueId,String,String,TimeSpan,SymmetricSecurityKey)
  nameWithType: SessionSecurityToken.SessionSecurityToken(ClaimsPrincipal,UniqueId,String,String,TimeSpan,SymmetricSecurityKey)
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.SessionSecurityToken(ClaimsPrincipal,UniqueId,String,String,TimeSpan,SymmetricSecurityKey)
- uid: System.Xml.UniqueId
  parent: System.Xml
  isExternal: true
  name: UniqueId
  nameWithType: UniqueId
  fullName: System.Xml.UniqueId
- uid: System.IdentityModel.Tokens.SymmetricSecurityKey
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SymmetricSecurityKey
  nameWithType: SymmetricSecurityKey
  fullName: System.IdentityModel.Tokens.SymmetricSecurityKey
- uid: System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.Xml.UniqueId,System.String,System.String,System.DateTime,System.TimeSpan,System.IdentityModel.Tokens.SymmetricSecurityKey)
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: SessionSecurityToken(ClaimsPrincipal,UniqueId,String,String,DateTime,TimeSpan,SymmetricSecurityKey)
  nameWithType: SessionSecurityToken.SessionSecurityToken(ClaimsPrincipal,UniqueId,String,String,DateTime,TimeSpan,SymmetricSecurityKey)
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.SessionSecurityToken(ClaimsPrincipal,UniqueId,String,String,DateTime,TimeSpan,SymmetricSecurityKey)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.Xml.UniqueId,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.IdentityModel.Tokens.SymmetricSecurityKey)
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: SessionSecurityToken(ClaimsPrincipal,UniqueId,String,String,Nullable<DateTime>,Nullable<DateTime>,SymmetricSecurityKey)
  nameWithType: SessionSecurityToken.SessionSecurityToken(ClaimsPrincipal,UniqueId,String,String,Nullable<DateTime>,Nullable<DateTime>,SymmetricSecurityKey)
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.SessionSecurityToken(ClaimsPrincipal,UniqueId,String,String,Nullable<DateTime>,Nullable<DateTime>,SymmetricSecurityKey)
- uid: System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: ClaimsPrincipal
  nameWithType: SessionSecurityToken.ClaimsPrincipal
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal
- uid: System.IdentityModel.Tokens.SessionSecurityToken.Context
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: Context
  nameWithType: SessionSecurityToken.Context
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.Context
- uid: System.IdentityModel.Tokens.SessionSecurityToken.ContextId
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: ContextId
  nameWithType: SessionSecurityToken.ContextId
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.ContextId
- uid: System.IdentityModel.Tokens.SessionSecurityToken.EndpointId
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: EndpointId
  nameWithType: SessionSecurityToken.EndpointId
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.EndpointId
- uid: System.IdentityModel.Tokens.SessionSecurityToken.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: SessionSecurityToken.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.IdentityModel.Tokens.SessionSecurityToken.Id
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: Id
  nameWithType: SessionSecurityToken.Id
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.Id
- uid: System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: IsPersistent
  nameWithType: SessionSecurityToken.IsPersistent
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: IsReferenceMode
  nameWithType: SessionSecurityToken.IsReferenceMode
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode
- uid: System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: KeyEffectiveTime
  nameWithType: SessionSecurityToken.KeyEffectiveTime
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime
- uid: System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: KeyExpirationTime
  nameWithType: SessionSecurityToken.KeyExpirationTime
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime
- uid: System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: KeyGeneration
  nameWithType: SessionSecurityToken.KeyGeneration
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration
- uid: System.IdentityModel.Tokens.SessionSecurityToken.SecureConversationVersion
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: SecureConversationVersion
  nameWithType: SessionSecurityToken.SecureConversationVersion
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.SecureConversationVersion
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: SecurityKeys
  nameWithType: SessionSecurityToken.SecurityKeys
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Tokens.SecurityKey}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<SecurityKey>
  nameWithType: ReadOnlyCollection<SecurityKey>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Tokens.SecurityKey>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.IdentityModel.Tokens.SecurityKey>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Tokens.SecurityKey
    name: SecurityKey
    nameWithType: SecurityKey
    fullName: SecurityKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: ValidFrom
  nameWithType: SessionSecurityToken.ValidFrom
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom
- uid: System.IdentityModel.Tokens.SessionSecurityToken.ValidTo
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: ValidTo
  nameWithType: SessionSecurityToken.ValidTo
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.ValidTo
- uid: System.IdentityModel.Tokens.SessionSecurityToken.#ctor*
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: SessionSecurityToken
  nameWithType: SessionSecurityToken.SessionSecurityToken
- uid: System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal*
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: ClaimsPrincipal
  nameWithType: SessionSecurityToken.ClaimsPrincipal
- uid: System.IdentityModel.Tokens.SessionSecurityToken.Context*
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: Context
  nameWithType: SessionSecurityToken.Context
- uid: System.IdentityModel.Tokens.SessionSecurityToken.ContextId*
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: ContextId
  nameWithType: SessionSecurityToken.ContextId
- uid: System.IdentityModel.Tokens.SessionSecurityToken.EndpointId*
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: EndpointId
  nameWithType: SessionSecurityToken.EndpointId
- uid: System.IdentityModel.Tokens.SessionSecurityToken.GetObjectData*
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: GetObjectData
  nameWithType: SessionSecurityToken.GetObjectData
- uid: System.IdentityModel.Tokens.SessionSecurityToken.Id*
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: Id
  nameWithType: SessionSecurityToken.Id
- uid: System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent*
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: IsPersistent
  nameWithType: SessionSecurityToken.IsPersistent
- uid: System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode*
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: IsReferenceMode
  nameWithType: SessionSecurityToken.IsReferenceMode
- uid: System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime*
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: KeyEffectiveTime
  nameWithType: SessionSecurityToken.KeyEffectiveTime
- uid: System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime*
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: KeyExpirationTime
  nameWithType: SessionSecurityToken.KeyExpirationTime
- uid: System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration*
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: KeyGeneration
  nameWithType: SessionSecurityToken.KeyGeneration
- uid: System.IdentityModel.Tokens.SessionSecurityToken.SecureConversationVersion*
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: SecureConversationVersion
  nameWithType: SessionSecurityToken.SecureConversationVersion
- uid: System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys*
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: SecurityKeys
  nameWithType: SessionSecurityToken.SecurityKeys
- uid: System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom*
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: ValidFrom
  nameWithType: SessionSecurityToken.ValidFrom
- uid: System.IdentityModel.Tokens.SessionSecurityToken.ValidTo*
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: ValidTo
  nameWithType: SessionSecurityToken.ValidTo
