### YamlMime:ManagedReference
items:
- uid: System.Activities.Presentation.Hosting.IMultiTargetingSupportService
  id: IMultiTargetingSupportService
  children:
  - System.Activities.Presentation.Hosting.IMultiTargetingSupportService.GetReflectionAssembly(System.Reflection.AssemblyName)
  - System.Activities.Presentation.Hosting.IMultiTargetingSupportService.GetRuntimeType(System.Type)
  - System.Activities.Presentation.Hosting.IMultiTargetingSupportService.IsSupportedType(System.Type)
  langs:
  - csharp
  name: IMultiTargetingSupportService
  nameWithType: IMultiTargetingSupportService
  fullName: System.Activities.Presentation.Hosting.IMultiTargetingSupportService
  type: Interface
  summary: "提供多目標功能，如[!INCLUDE[wfd1](~/add/includes/wfd1-md.md)]主機。"
  remarks: "*多目標*是能力，找出正確的版本，載入的組件會對應至目標[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]中目前的工作流程專案的版本[!INCLUDE[vs2010](~/add/includes/vs2010-md.md)]。       這個介面會實作，並在內部使用[!INCLUDE[wf1](~/add/includes/wf1-md.md)]設計工具元件來解析[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]組件內，以多目標的注意方式[!INCLUDE[vs2010](~/add/includes/vs2010-md.md)]裝載應用程式。 [!INCLUDE[wf1](~/add/includes/wf1-md.md)]設計工具元件會使用這個介面的實作，只有當其他組件需要以動態方式載入的編輯時`AppDomain`。"
  syntax:
    content: public interface IMultiTargetingSupportService
  implements: []
  platform:
  - net462
- uid: System.Activities.Presentation.Hosting.IMultiTargetingSupportService.GetReflectionAssembly(System.Reflection.AssemblyName)
  id: GetReflectionAssembly(System.Reflection.AssemblyName)
  parent: System.Activities.Presentation.Hosting.IMultiTargetingSupportService
  langs:
  - csharp
  name: GetReflectionAssembly(AssemblyName)
  nameWithType: IMultiTargetingSupportService.GetReflectionAssembly(AssemblyName)
  fullName: System.Activities.Presentation.Hosting.IMultiTargetingSupportService.GetReflectionAssembly(AssemblyName)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Hosting
  summary: "傳回目前所載入的組件，指定組件名稱。"
  syntax:
    content: public System.Reflection.Assembly GetReflectionAssembly (System.Reflection.AssemblyName targetAssemblyName);
    parameters:
    - id: targetAssemblyName
      type: System.Reflection.AssemblyName
      description: "組件名稱。"
    return:
      type: System.Reflection.Assembly
      description: "目前載入的組件指定組件名稱時。"
  overload: System.Activities.Presentation.Hosting.IMultiTargetingSupportService.GetReflectionAssembly*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Hosting.IMultiTargetingSupportService.GetRuntimeType(System.Type)
  id: GetRuntimeType(System.Type)
  parent: System.Activities.Presentation.Hosting.IMultiTargetingSupportService
  langs:
  - csharp
  name: GetRuntimeType(Type)
  nameWithType: IMultiTargetingSupportService.GetRuntimeType(Type)
  fullName: System.Activities.Presentation.Hosting.IMultiTargetingSupportService.GetRuntimeType(Type)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Hosting
  summary: "取得指定的型別對應的執行階段型別。"
  syntax:
    content: public Type GetRuntimeType (Type reflectionType);
    parameters:
    - id: reflectionType
      type: System.Type
      description: "要取得的執行階段類型的類型。"
    return:
      type: System.Type
      description: "執行階段型別對應至指定的型別。"
  overload: System.Activities.Presentation.Hosting.IMultiTargetingSupportService.GetRuntimeType*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Hosting.IMultiTargetingSupportService.IsSupportedType(System.Type)
  id: IsSupportedType(System.Type)
  parent: System.Activities.Presentation.Hosting.IMultiTargetingSupportService
  langs:
  - csharp
  name: IsSupportedType(Type)
  nameWithType: IMultiTargetingSupportService.IsSupportedType(Type)
  fullName: System.Activities.Presentation.Hosting.IMultiTargetingSupportService.IsSupportedType(Type)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Hosting
  summary: "傳回值，指出是否支援指定的型別。"
  syntax:
    content: public bool IsSupportedType (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "要檢查的類型。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果支援指定的類型。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Activities.Presentation.Hosting.IMultiTargetingSupportService.IsSupportedType*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Activities.Presentation.Hosting.IMultiTargetingSupportService.GetReflectionAssembly(System.Reflection.AssemblyName)
  parent: System.Activities.Presentation.Hosting.IMultiTargetingSupportService
  isExternal: false
  name: GetReflectionAssembly(AssemblyName)
  nameWithType: IMultiTargetingSupportService.GetReflectionAssembly(AssemblyName)
  fullName: System.Activities.Presentation.Hosting.IMultiTargetingSupportService.GetReflectionAssembly(AssemblyName)
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: true
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.Reflection.AssemblyName
  parent: System.Reflection
  isExternal: true
  name: AssemblyName
  nameWithType: AssemblyName
  fullName: System.Reflection.AssemblyName
- uid: System.Activities.Presentation.Hosting.IMultiTargetingSupportService.GetRuntimeType(System.Type)
  parent: System.Activities.Presentation.Hosting.IMultiTargetingSupportService
  isExternal: false
  name: GetRuntimeType(Type)
  nameWithType: IMultiTargetingSupportService.GetRuntimeType(Type)
  fullName: System.Activities.Presentation.Hosting.IMultiTargetingSupportService.GetRuntimeType(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Activities.Presentation.Hosting.IMultiTargetingSupportService.IsSupportedType(System.Type)
  parent: System.Activities.Presentation.Hosting.IMultiTargetingSupportService
  isExternal: false
  name: IsSupportedType(Type)
  nameWithType: IMultiTargetingSupportService.IsSupportedType(Type)
  fullName: System.Activities.Presentation.Hosting.IMultiTargetingSupportService.IsSupportedType(Type)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Activities.Presentation.Hosting.IMultiTargetingSupportService.GetReflectionAssembly*
  parent: System.Activities.Presentation.Hosting.IMultiTargetingSupportService
  isExternal: false
  name: GetReflectionAssembly
  nameWithType: IMultiTargetingSupportService.GetReflectionAssembly
- uid: System.Activities.Presentation.Hosting.IMultiTargetingSupportService.GetRuntimeType*
  parent: System.Activities.Presentation.Hosting.IMultiTargetingSupportService
  isExternal: false
  name: GetRuntimeType
  nameWithType: IMultiTargetingSupportService.GetRuntimeType
- uid: System.Activities.Presentation.Hosting.IMultiTargetingSupportService.IsSupportedType*
  parent: System.Activities.Presentation.Hosting.IMultiTargetingSupportService
  isExternal: false
  name: IsSupportedType
  nameWithType: IMultiTargetingSupportService.IsSupportedType
