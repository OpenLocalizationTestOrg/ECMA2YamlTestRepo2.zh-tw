### YamlMime:ManagedReference
items:
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator
  id: KeyContainerPermissionAccessEntryEnumerator
  children:
  - System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current
  - System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext
  - System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset
  - System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.System#Collections#IEnumerator#Current
  langs:
  - csharp
  name: KeyContainerPermissionAccessEntryEnumerator
  nameWithType: KeyContainerPermissionAccessEntryEnumerator
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator
  type: Class
  summary: "代表列舉值<xref href=&quot;System.Security.Permissions.KeyContainerPermissionAccessEntry&quot;></xref>中的物件<xref href=&quot;System.Security.Permissions.KeyContainerPermissionAccessEntryCollection&quot;> </xref>。"
  remarks: "列舉值只允許讀取集合中的資料。 列舉值無法用於修改基礎集合。       一開始，列舉程式位在集合中的第一個項目之前。 <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A>方法也會列舉值帶回至這個位置。</xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A> 在這個位置上，呼叫<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A>屬性會擲回的例外狀況。</xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> 因此，您必須呼叫<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A>方法，以將列舉值前進到第一個項目，再讀取的值集合的<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A>屬性。</xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> </xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A>       <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A>會傳回相同的物件直到<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A>或<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A>稱為。</xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A> </xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A></xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A>設定<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A>下一個項目。</xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A></xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A>       集合的末端後，列舉程式會放置在集合中，最後一個元素之後和呼叫<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A>傳回`false`。</xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> 如果最後一個呼叫<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A>傳回`false`，則呼叫<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A>擲回例外狀況。</xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> </xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> 若要重設<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A>第一個元素的集合中，呼叫<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A>後面接著<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A>.</xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A>呼叫</xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A></xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A>       只要集合維持不變，列舉程式就持續有效。 如果對集合進行變更，例如加入、 修改或刪除項目，列舉程式會永久失效，而且下一個呼叫<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A>或<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A>擲回<xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> </xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A> </xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> 如果呼叫之間修改集合<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A>和<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A>，<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A>傳回項目，它目前設定的即使列舉值已經無效。</xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> </xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> </xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A>       列舉程式沒有集合的獨佔存取因此，列舉集合在本質上並非安全執行緒程序。 即使集合經過同步化，其他的執行緒仍可修改該集合，使列舉值擲回例外狀況。 若要保證列舉過程的執行緒安全，您可以在整個列舉過程中鎖定集合，或攔截由其他執行緒的變更所造成的例外狀況。"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class KeyContainerPermissionAccessEntryEnumerator : System.Collections.IEnumerator
  inheritance:
  - System.Object
  implements:
  - System.Collections.IEnumerator
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current
  id: Current
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator
  langs:
  - csharp
  name: Current
  nameWithType: KeyContainerPermissionAccessEntryEnumerator.Current
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "取得目前的項目集合中。"
  remarks: "建立列舉值時，它並未指向一個物件，因此目前的屬性不正確，如果它存取將會擲回例外狀況。 您必須先呼叫<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A>方法，以將游標放在集合中的第一個物件。</xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A>       取得目前的屬性，使用任何中介呼叫多次<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A>傳回相同<xref:System.Security.Permissions.KeyContainerPermissionAccessEntry>物件每當。</xref:System.Security.Permissions.KeyContainerPermissionAccessEntry> </xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A>"
  syntax:
    content: public System.Security.Permissions.KeyContainerPermissionAccessEntry Current { get; }
    return:
      type: System.Security.Permissions.KeyContainerPermissionAccessEntry
      description: "目前<xref href=&quot;System.Security.Permissions.KeyContainerPermissionAccessEntry&quot;></xref>集合中的物件。"
  overload: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "第一個呼叫之前存取 Current 屬性<> *> 方法。資料指標位於集合中的第一個物件之前。      -或-呼叫之後存取 Current 屬性是<> *> 方法會傳回<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>，表示資料指標位於集合中的最後一個物件之後。"
  platform:
  - net462
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext
  id: MoveNext
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator
  langs:
  - csharp
  name: MoveNext()
  nameWithType: KeyContainerPermissionAccessEntryEnumerator.MoveNext()
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "移至集合中的下一個項目。"
  remarks: "MoveNext 方法會傳回`false`立即如果集合中沒有任何物件。       MoveNext 傳回`true`直到它到達集合結尾。 然後它會傳回`false`針對每個後續的呼叫。 不過，一次 MoveNext 傳回`false`、 存取<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A>屬性會擲回的例外狀況。</xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A>       在建立列舉程式位在第一個<xref:System.Security.Permissions.KeyContainerPermissionAccessEntry>物件集合和第一個呼叫 MoveNext 中的第一個物件列舉值置於集合中。</xref:System.Security.Permissions.KeyContainerPermissionAccessEntry>"
  syntax:
    content: public bool MoveNext ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果列舉值成功前移至下一個元素;，<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>如果列舉值已跳過集合結尾。"
  overload: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset
  id: Reset
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator
  langs:
  - csharp
  name: Reset()
  nameWithType: KeyContainerPermissionAccessEntryEnumerator.Reset()
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "將列舉值重設集合的開頭。"
  remarks: "列舉值會順向的方向移動。 使用此方法傳回集合的開頭。       重設方法會將游標放在集合中的第一個物件。 在呼叫之後重設，您不需要呼叫<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A>將游標向前移至第一個物件。</xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A>"
  syntax:
    content: public void Reset ();
    parameters: []
  overload: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.System#Collections#IEnumerator#Current
  id: System#Collections#IEnumerator#Current
  isEii: true
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator
  langs:
  - csharp
  name: System.Collections.IEnumerator.Current
  nameWithType: KeyContainerPermissionAccessEntryEnumerator.System.Collections.IEnumerator.Current
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.System.Collections.IEnumerator.Current
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "取得目前的物件集合中。"
  remarks: "請勿呼叫這個方法。使用<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A>屬性改為。</xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A>"
  syntax:
    content: object System.Collections.IEnumerator.Current { get; }
    return:
      type: System.Object
      description: "集合中目前的物件。"
  overload: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.System#Collections#IEnumerator#Current*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator
  isExternal: false
  name: Current
  nameWithType: KeyContainerPermissionAccessEntryEnumerator.Current
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry
  parent: System.Security.Permissions
  isExternal: false
  name: KeyContainerPermissionAccessEntry
  nameWithType: KeyContainerPermissionAccessEntry
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntry
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator
  isExternal: false
  name: MoveNext()
  nameWithType: KeyContainerPermissionAccessEntryEnumerator.MoveNext()
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator
  isExternal: false
  name: Reset()
  nameWithType: KeyContainerPermissionAccessEntryEnumerator.Reset()
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset()
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.System#Collections#IEnumerator#Current
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator
  isExternal: false
  name: System.Collections.IEnumerator.Current
  nameWithType: KeyContainerPermissionAccessEntryEnumerator.System.Collections.IEnumerator.Current
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.System.Collections.IEnumerator.Current
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current*
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator
  isExternal: false
  name: Current
  nameWithType: KeyContainerPermissionAccessEntryEnumerator.Current
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext*
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator
  isExternal: false
  name: MoveNext
  nameWithType: KeyContainerPermissionAccessEntryEnumerator.MoveNext
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset*
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator
  isExternal: false
  name: Reset
  nameWithType: KeyContainerPermissionAccessEntryEnumerator.Reset
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.System#Collections#IEnumerator#Current*
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator
  isExternal: false
  name: System.Collections.IEnumerator.Current
  nameWithType: KeyContainerPermissionAccessEntryEnumerator.System.Collections.IEnumerator.Current
