### YamlMime:ManagedReference
items:
- uid: System.Data.OleDb.OleDbConnection
  id: OleDbConnection
  children:
  - System.Data.OleDb.OleDbConnection.#ctor
  - System.Data.OleDb.OleDbConnection.#ctor(System.String)
  - System.Data.OleDb.OleDbConnection.BeginDbTransaction(System.Data.IsolationLevel)
  - System.Data.OleDb.OleDbConnection.BeginTransaction
  - System.Data.OleDb.OleDbConnection.BeginTransaction(System.Data.IsolationLevel)
  - System.Data.OleDb.OleDbConnection.ChangeDatabase(System.String)
  - System.Data.OleDb.OleDbConnection.Close
  - System.Data.OleDb.OleDbConnection.ConnectionString
  - System.Data.OleDb.OleDbConnection.ConnectionTimeout
  - System.Data.OleDb.OleDbConnection.CreateCommand
  - System.Data.OleDb.OleDbConnection.CreateDbCommand
  - System.Data.OleDb.OleDbConnection.Database
  - System.Data.OleDb.OleDbConnection.DataSource
  - System.Data.OleDb.OleDbConnection.Dispose(System.Boolean)
  - System.Data.OleDb.OleDbConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)
  - System.Data.OleDb.OleDbConnection.EnlistTransaction(System.Transactions.Transaction)
  - System.Data.OleDb.OleDbConnection.GetOleDbSchemaTable(System.Guid,System.Object[])
  - System.Data.OleDb.OleDbConnection.GetSchema
  - System.Data.OleDb.OleDbConnection.GetSchema(System.String)
  - System.Data.OleDb.OleDbConnection.GetSchema(System.String,System.String[])
  - System.Data.OleDb.OleDbConnection.InfoMessage
  - System.Data.OleDb.OleDbConnection.Open
  - System.Data.OleDb.OleDbConnection.Provider
  - System.Data.OleDb.OleDbConnection.ReleaseObjectPool
  - System.Data.OleDb.OleDbConnection.ResetState
  - System.Data.OleDb.OleDbConnection.ServerVersion
  - System.Data.OleDb.OleDbConnection.State
  - System.Data.OleDb.OleDbConnection.System#ICloneable#Clone
  langs:
  - csharp
  name: OleDbConnection
  nameWithType: OleDbConnection
  fullName: System.Data.OleDb.OleDbConnection
  type: Class
  summary: "代表資料來源的開啟連接。"
  remarks: "OleDbConnection 物件代表資料來源的唯一連接。 具有用戶端/伺服器資料庫系統，它相當於伺服器的網路連線。 根據原生 OLE DB 提供者所支援的功能，某些方法或 OleDbConnection 物件的屬性可能無法使用。       當您建立 OleDbConnection 的執行個體時，所有屬性都設為其初始值。 如需這些值的清單，請參閱 OleDbConnection 建構函式。       您可以開啟多個 DataReader 單一 OleDbConnection 上。 如果您使用的 OLE DB 提供者不支援在單一連接上的多個 DataReader，提供者會針對每個隱含開啟的其他連接。       OleDbConnection 超出範圍時，如果它不被封閉。 因此，您必須明確地關閉此連接呼叫<xref:System.Data.OleDb.OleDbConnection.Close%2A>或**處置**，或使用中的 OleDbConnection 物件`Using`陳述式。</xref:System.Data.OleDb.OleDbConnection.Close%2A>      > [!NOTE] > 部署高效能應用程式，您必須使用連接共用。 當您使用.NET Framework Data Provider for OLE DB 時，您不必啟用連接共用，因為提供者會自動管理。 如需有關如何使用連接共用搭配.NET Framework Data Provider for OLE DB，請參閱[OLE DB、 ODBC 和 Oracle 連接共用](~/add/includes/ajax-current-ext-md.md)。       如果嚴重<xref:System.Data.OleDb.OleDbException>（例如，SQL Server 安全性層級 20 或更高） 所執行的方法產生<xref:System.Data.OleDb.OleDbCommand>，OleDbConnection 可能已關閉。</xref:System.Data.OleDb.OleDbCommand> </xref:System.Data.OleDb.OleDbException> 不過，使用者可以再次開啟連線後繼續。       建立 OleDbConnection 物件的執行個體的應用程式可以要求所有直接和間接呼叫端擁有足夠的權限的程式碼所設定的宣告式或必要的安全性要求。 OleDbConnection 提出安全性需求使用<xref:System.Data.OleDb.OleDbPermission>物件。</xref:System.Data.OleDb.OleDbPermission> 使用者可以確認他們的程式碼使用具有足夠的權限<xref:System.Data.OleDb.OleDbPermissionAttribute>物件。</xref:System.Data.OleDb.OleDbPermissionAttribute> 使用者和系統管理員也可以使用[Caspol.exe （程式碼存取安全性原則工具）](~/add/includes/ajax-current-ext-md.md)來修改電腦、 使用者和企業層級的安全性原則。 如需詳細資訊，請參閱[程式碼存取安全性和 ADO.NET](~/add/includes/ajax-current-ext-md.md)。       如需處理警告和告知性訊息資料伺服器的詳細資訊，請參閱[連接事件](~/add/includes/ajax-current-ext-md.md)。      > [!NOTE] > OleDbConnection 物件不支援設定或擷取特定的 OLE DB 提供者的動態屬性。 支援只可在 OLE DB 提供者在連接字串中傳遞的屬性。"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbCommand> and an OleDbConnection. The OleDbConnection is opened and set as the <xref:System.Data.OleDb.OleDbCommand.Connection%2A> for the <xref:System.Data.OleDb.OleDbCommand>. The example then calls <xref:System.Data.OleDb.OleDbCommand.ExecuteNonQuery%2A> and closes the connection. To accomplish this, <xref:System.Data.OleDb.OleDbCommand.ExecuteNonQuery%2A> is passed a connection string and a query string that is an SQL INSERT statement.  \n  \n [!code-cs[Classic WebData OleDbConnection Example#1](~/add/codesnippet/csharp/t-system.data.oledb.oled_3_1.cs)]\n [!code-vb[Classic WebData OleDbConnection Example#1](~/add/codesnippet/visualbasic/t-system.data.oledb.oled_3_1.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("InfoMessage")]

      public sealed class OleDbConnection : System.Data.Common.DbConnection, ICloneable, IDisposable
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  - System.Data.Common.DbConnection
  implements:
  - System.ICloneable
  - System.IDisposable
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.Data.Common.DbConnection.DbProviderFactory
  - System.Data.Common.DbConnection.OnStateChange(System.Data.StateChangeEventArgs)
  - System.Data.Common.DbConnection.OpenAsync
  - System.Data.Common.DbConnection.OpenAsync(System.Threading.CancellationToken)
  - System.Data.Common.DbConnection.StateChange
  - System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction
  - System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction(System.Data.IsolationLevel)
  - System.Data.Common.DbConnection.System#Data#IDbConnection#CreateCommand
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnection.#ctor
  id: '#ctor'
  parent: System.Data.OleDb.OleDbConnection
  langs:
  - csharp
  name: OleDbConnection()
  nameWithType: OleDbConnection.OleDbConnection()
  fullName: System.Data.OleDb.OleDbConnection.OleDbConnection()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "初始化的新執行個體<xref href=&quot;System.Data.OleDb.OleDbConnection&quot;></xref>類別。"
  remarks: "新執行個體時<xref:System.Data.OleDb.OleDbConnection>建立時，讀取/寫入屬性都設定為下列的起始值，除非它們特別設定使用中其相關聯的關鍵字<xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A>屬性。</xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> </xref:System.Data.OleDb.OleDbConnection>      |屬性 |初始值 |  |----------------|-------------------|  |<xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A>| 空字串 (&quot;&quot;) |  |<xref:System.Data.OleDb.OleDbConnection.ConnectionTimeout%2A>|&15; |  |<xref:System.Data.OleDb.OleDbConnection.Database%2A>| 空字串 (&quot;&quot;) |  |<xref:System.Data.OleDb.OleDbConnection.DataSource%2A>| 空字串 (&quot;&quot;) |      您可以變更這些屬性的值只能透過<xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A>屬性。</xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> </xref:System.Data.OleDb.OleDbConnection.DataSource%2A> </xref:System.Data.OleDb.OleDbConnection.Database%2A> </xref:System.Data.OleDb.OleDbConnection.ConnectionTimeout%2A> </xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A>"
  example:
  - "The following example creates and opens an <xref:System.Data.OleDb.OleDbConnection>.  \n  \n [!code-cs[Classic WebData OleDbConnection.OleDbConnection Example#1](~/add/codesnippet/csharp/m-system.data.oledb.oled_7_1.cs)]\n [!code-vb[Classic WebData OleDbConnection.OleDbConnection Example#1](~/add/codesnippet/visualbasic/m-system.data.oledb.oled_7_1.vb)]"
  syntax:
    content: public OleDbConnection ();
    parameters: []
  overload: System.Data.OleDb.OleDbConnection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnection.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Data.OleDb.OleDbConnection
  langs:
  - csharp
  name: OleDbConnection(String)
  nameWithType: OleDbConnection.OleDbConnection(String)
  fullName: System.Data.OleDb.OleDbConnection.OleDbConnection(String)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "初始化的新執行個體<xref href=&quot;System.Data.OleDb.OleDbConnection&quot;></xref>類別指定的連接字串。"
  remarks: "新執行個體時<xref:System.Data.OleDb.OleDbConnection>建立時，讀取/寫入屬性都設定為下列的起始值，除非它們特別設定使用中其相關聯的關鍵字<xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A>屬性。</xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> </xref:System.Data.OleDb.OleDbConnection>      |屬性 |初始值 |  |----------------|-------------------|  |<xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A>|`connectionString`|  |<xref:System.Data.OleDb.OleDbConnection.ConnectionTimeout%2A>|&15; |  |<xref:System.Data.OleDb.OleDbConnection.Database%2A>| 空字串 (&quot;&quot;) |  |<xref:System.Data.OleDb.OleDbConnection.DataSource%2A>| 空字串 (&quot;&quot;) |      您可以變更這些屬性的值只能透過<xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A>屬性。</xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> </xref:System.Data.OleDb.OleDbConnection.DataSource%2A> </xref:System.Data.OleDb.OleDbConnection.Database%2A> </xref:System.Data.OleDb.OleDbConnection.ConnectionTimeout%2A> </xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A>"
  example:
  - "The following example creates and opens an <xref:System.Data.OleDb.OleDbConnection>.  \n  \n [!code-cs[Classic WebData OleDbConnection.OleDbConnection1 Example#1](~/add/codesnippet/csharp/m-system.data.oledb.oled_1_1.cs)]\n [!code-vb[Classic WebData OleDbConnection.OleDbConnection1 Example#1](~/add/codesnippet/visualbasic/m-system.data.oledb.oled_1_1.vb)]"
  syntax:
    content: public OleDbConnection (string connectionString);
    parameters:
    - id: connectionString
      type: System.String
      description: "用來開啟資料庫的連接。"
  overload: System.Data.OleDb.OleDbConnection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnection.BeginDbTransaction(System.Data.IsolationLevel)
  id: BeginDbTransaction(System.Data.IsolationLevel)
  parent: System.Data.OleDb.OleDbConnection
  langs:
  - csharp
  name: BeginDbTransaction(IsolationLevel)
  nameWithType: OleDbConnection.BeginDbTransaction(IsolationLevel)
  fullName: System.Data.OleDb.OleDbConnection.BeginDbTransaction(IsolationLevel)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  syntax:
    content: protected override System.Data.Common.DbTransaction BeginDbTransaction (System.Data.IsolationLevel isolationLevel);
    parameters:
    - id: isolationLevel
      type: System.Data.IsolationLevel
      description: "即將加入。"
    return:
      type: System.Data.Common.DbTransaction
      description: "即將加入。"
  overload: System.Data.OleDb.OleDbConnection.BeginDbTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnection.BeginTransaction
  id: BeginTransaction
  parent: System.Data.OleDb.OleDbConnection
  langs:
  - csharp
  name: BeginTransaction()
  nameWithType: OleDbConnection.BeginTransaction()
  fullName: System.Data.OleDb.OleDbConnection.BeginTransaction()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "開始資料庫交易與目前<xref href=&quot;System.Data.IsolationLevel&quot;></xref>值。"
  remarks: "您必須明確地認可或回復交易使用<xref:System.Data.OleDb.OleDbTransaction.Commit%2A>或<xref:System.Data.OleDb.OleDbTransaction.Rollback%2A>方法。</xref:System.Data.OleDb.OleDbTransaction.Rollback%2A> </xref:System.Data.OleDb.OleDbTransaction.Commit%2A> 若要確定.NET Framework 資料提供者的 OLE DB 交易管理模型會正確執行，請避免使用其他的交易管理模式，例如資料來源所提供。"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbConnection> and an <xref:System.Data.OleDb.OleDbTransaction>. It also demonstrates how to use the BeginTransaction, <xref:System.Data.OleDb.OleDbTransaction.Commit%2A>, and <xref:System.Data.OleDb.OleDbTransaction.Rollback%2A> methods.  \n  \n [!code-cs[Classic WebData OleDbConnection.BeginTransaction Example#1](~/add/codesnippet/csharp/m-system.data.oledb.oled_23_1.cs)]\n [!code-vb[Classic WebData OleDbConnection.BeginTransaction Example#1](~/add/codesnippet/visualbasic/m-system.data.oledb.oled_23_1.vb)]"
  syntax:
    content: public System.Data.OleDb.OleDbTransaction BeginTransaction ();
    parameters: []
    return:
      type: System.Data.OleDb.OleDbTransaction
      description: "代表新異動的物件。"
  overload: System.Data.OleDb.OleDbConnection.BeginTransaction*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "不支援平行交易。"
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnection.BeginTransaction(System.Data.IsolationLevel)
  id: BeginTransaction(System.Data.IsolationLevel)
  parent: System.Data.OleDb.OleDbConnection
  langs:
  - csharp
  name: BeginTransaction(IsolationLevel)
  nameWithType: OleDbConnection.BeginTransaction(IsolationLevel)
  fullName: System.Data.OleDb.OleDbConnection.BeginTransaction(IsolationLevel)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "開始資料庫交易具有指定之隔離等級。"
  remarks: "您必須明確地認可或回復交易使用<xref:System.Data.OleDb.OleDbTransaction.Commit%2A>或<xref:System.Data.OleDb.OleDbTransaction.Rollback%2A>方法。</xref:System.Data.OleDb.OleDbTransaction.Rollback%2A> </xref:System.Data.OleDb.OleDbTransaction.Commit%2A> 若要確定.NET Framework 資料提供者的 OLE DB 交易管理模型會正確執行，請避免使用其他的交易管理模式，例如資料來源所提供。      > [!NOTE] > 如果您不指定隔離等級，會使用基礎提供者的預設隔離等級。 若要指定隔離等級與 BeginTransaction 方法，使用的多載，`isolationLevel`參數。"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbConnection> and an <xref:System.Data.OleDb.OleDbTransaction>. It also demonstrates how to use the <xref:System.Data.OleDb.OleDbConnection.BeginTransaction%2A>, a <xref:System.Data.OleDb.OleDbTransaction.Commit%2A>, and <xref:System.Data.OleDb.OleDbTransaction.Rollback%2A> methods.  \n  \n [!code-cs[Classic WebData OleDbConnection.BeginTransaction1 Example#1](~/add/codesnippet/csharp/m-system.data.oledb.oled_25_1.cs)]\n [!code-vb[Classic WebData OleDbConnection.BeginTransaction1 Example#1](~/add/codesnippet/visualbasic/m-system.data.oledb.oled_25_1.vb)]"
  syntax:
    content: public System.Data.OleDb.OleDbTransaction BeginTransaction (System.Data.IsolationLevel isolationLevel);
    parameters:
    - id: isolationLevel
      type: System.Data.IsolationLevel
      description: "程式執行的交易隔離等級。"
    return:
      type: System.Data.OleDb.OleDbTransaction
      description: "代表新異動的物件。"
  overload: System.Data.OleDb.OleDbConnection.BeginTransaction*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "不支援平行交易。"
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnection.ChangeDatabase(System.String)
  id: ChangeDatabase(System.String)
  parent: System.Data.OleDb.OleDbConnection
  langs:
  - csharp
  name: ChangeDatabase(String)
  nameWithType: OleDbConnection.ChangeDatabase(String)
  fullName: System.Data.OleDb.OleDbConnection.ChangeDatabase(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "變更目前的資料庫，開啟<xref href=&quot;System.Data.OleDb.OleDbConnection&quot;> </xref>。"
  remarks: "中提供的值`database`參數必須是有效的資料庫名稱。 `database`參數不能包含 null 值、 空字串或只有空白字元的字串。"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbConnection> and displays some of its read-only properties.  \n  \n [!code-cs[Classic WebData OleDbConnection.Database Example#2](~/add/codesnippet/csharp/m-system.data.oledb.oled_20_1.cs)]\n [!code-vb[Classic WebData OleDbConnection.Database Example#2](~/add/codesnippet/visualbasic/m-system.data.oledb.oled_20_1.vb)]"
  syntax:
    content: public override void ChangeDatabase (string value);
    parameters:
    - id: value
      type: System.String
      description: "資料庫名稱。"
  overload: System.Data.OleDb.OleDbConnection.ChangeDatabase*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "資料庫名稱無效。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "連接未開啟。"
  - type: System.Data.OleDb.OleDbException
    commentId: T:System.Data.OleDb.OleDbException
    description: "無法變更資料庫。"
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnection.Close
  id: Close
  parent: System.Data.OleDb.OleDbConnection
  langs:
  - csharp
  name: Close()
  nameWithType: OleDbConnection.Close()
  fullName: System.Data.OleDb.OleDbConnection.Close()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "關閉資料來源的連接。"
  remarks: "Close 方法會回復任何暫止交易。 然後，它會釋放連接集區中，連接或關閉連接，如果連接共用已停用。 如果呼叫處理時關閉<xref:System.Data.Common.DbConnection.StateChange>事件時，沒有其他<xref:System.Data.Common.DbConnection.StateChange>不會引發事件。</xref:System.Data.Common.DbConnection.StateChange> </xref:System.Data.Common.DbConnection.StateChange>       一次以上時，應用程式可以呼叫 Close。 會不產生任何例外狀況。      > [!CAUTION] > 未呼叫 Close 或**處置**上<xref:System.Data.OleDb.OleDbConnection>、 <xref:System.Data.OleDb.OleDbDataReader>，或在任何其他 managed 的物件`Finalize`您類別的方法</xref:System.Data.OleDb.OleDbDataReader></xref:System.Data.OleDb.OleDbConnection> 在完成項中，您應該只需釋放類別直接擁有的 unmanaged 的資源。 如果您的類別未擁有任何 unmanaged 的資源，並包含`Finalize`類別定義中的方法。 如需詳細資訊，請參閱[回收](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public override void Close ();
    parameters: []
  overload: System.Data.OleDb.OleDbConnection.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnection.ConnectionString
  id: ConnectionString
  parent: System.Data.OleDb.OleDbConnection
  langs:
  - csharp
  name: ConnectionString
  nameWithType: OleDbConnection.ConnectionString
  fullName: System.Data.OleDb.OleDbConnection.ConnectionString
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "取得或設定用來開啟資料庫的字串。"
  remarks: "The ConnectionString is designed to match OLE DB connection string format as closely as possible with the following exceptions:  \n  \n-   The \"Provider = `value` \" clause is required. However, you cannot use \"Provider = MSDASQL\" because the .NET Framework Data Provider for OLE DB does not support the OLE DB Provider for ODBC (MSDASQL). To access ODBC data sources, use the <xref:System.Data.Odbc.OdbcConnection> object that is in the <xref:System.Data.Odbc> namespace.  \n  \n-   Unlike ODBC or ADO, the connection string that is returned is the same as the user-set ConnectionString, minus security information if `Persist Security Info` is set to `false` (default). The .NET Framework Data Provider for OLE DB does not persist or return the password in a connection string unless you set the `Persist Security Info` keyword to `true` (not recommended). To maintain a high level of security, it is strongly recommended that you use the `Integrated Security` keyword with `Persist Security Info` set to `false`.  \n  \n You can use the ConnectionString property to connect to a variety of data sources. The following example illustrates several possible connection strings.  \n  \n```  \n\"Provider=MSDAORA; Data Source=ORACLE8i7;Persist Security Info=False;Integrated Security=Yes\"  \n  \n\"Provider=Microsoft.Jet.OLEDB.4.0; Data Source=c:\\bin\\LocalAccess40.mdb\"  \n  \n\"Provider=SQLOLEDB;Data Source=(local);Integrated Security=SSPI\"  \n```  \n  \n If the `Data Source` keyword is not specified in the connection string, the provider will try to connect to the local server if one is available.  \n  \n For more information about connection strings, see [Using Connection String Keywords with SQL Server Native Client](http://go.microsoft.com/fwlink/?LinkId=126696).  \n  \n The ConnectionString property can be set only when the connection is closed. Many of the connection string values have corresponding read-only properties. When the connection string is set, these properties are updated, except when an error is detected. In this case, none of the properties are updated. <xref:System.Data.OleDb.OleDbConnection> properties return only those settings that are contained in the ConnectionString.  \n  \n Resetting the ConnectionString on a closed connection resets all connection string values and related properties. This includes the password. For example, if you set a connection string that includes \"Initial Catalog= AdventureWorks\", and then reset the connection string to \"Provider= SQLOLEDB;Data Source= MySQLServer;IntegratedSecurity=SSPI\", the <xref:System.Data.OleDb.OleDbConnection.Database%2A> property is no longer set to AdventureWorks. (The Initial Catalog value of the connection string corresponds to the `Database` property.)  \n  \n A preliminary validation of the connection string is performed when the property is set. If values for the `Provider`, `Connect Timeout`, `Persist Security Info`, or `OLE DB Services` are included in the string, these values are checked. When an application calls the <xref:System.Data.OleDb.OleDbConnection.Open%2A> method, the connection string is fully validated. If the connection string contains invalid or unsupported properties, a run-time exception, such as <xref:System.ArgumentException>, is generated.  \n  \n> [!CAUTION]\n>  It is possible to supply connection information for an <xref:System.Data.OleDb.OleDbConnection> in a Universal Data Link (UDL) file; however you should avoid doing so. UDL files are not encrypted and expose connection string information in clear text. Because a UDL file is an external file-based resource to your application, it cannot be secured using the .NET Framework.  \n  \n The basic format of a connection string includes a series of keyword/value pairs separated by semicolons. The equal sign (=) connects each keyword and its value. To include values that contain a semicolon, single-quote character, or double-quote character, the value must be enclosed in double quotation marks. If the value contains both a semicolon and a double-quote character, the value can be enclosed in single quotation marks. The single quotation mark is also useful if the value starts with a double-quote character. Conversely, the double quotation mark can be used if the value starts with a single quotation mark. If the value contains both single-quote and double-quote characters, the quotation-mark character used to enclose the value must be doubled every time it occurs within the value.  \n  \n To include preceding or trailing spaces in the string value, the value must be enclosed in either single quotation marks or double quotation marks. Any leading or trailing spaces around integer, Boolean, or enumerated values are ignored, even if enclosed in quotation marks. However, spaces within a string literal keyword or value are preserved. Single or double quotation marks may be used within a connection string without using delimiters (for example, `Data Source= my'Server` or `Data Source= my\"Server`) unless a quotation-mark character is the first or last character in the value.  \n  \n To include an equal sign (=) in a keyword or value, it must be preceded by another equal sign. For example, in the hypothetical connection string  \n  \n```  \n\"key==word=value\"  \n```  \n  \n the keyword is \"key=word\" and the value is \"value\".  \n  \n If a specific keyword in a keyword=value pair occurs multiple times in a connection string, the last occurrence listed is used in the value set.  \n  \n Keywords are not case sensitive.  \n  \n> [!CAUTION]\n>  You should use caution when constructing a connection string based on user input, for example, when retrieving user ID and password information from a dialog box and appending it to the connection string. The application should make sure that a user cannot embed additional connection-string parameters in these values, for example, entering a password as \"validpassword;database= somedb\" in an attempt to attach to a different database. If you use the Extended Properties connection string parameter for OLE DB connections, avoid passing user IDs and passwords because you should avoid storing user IDs and passwords in clear text if you can, and because the default setting of `Persist Security Info= false` does not affect the `Extended Properties` parameter."
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbConnection> and sets some of its properties in the connection string.  \n  \n [!code-cs[Classic WebData OleDbConnection.DataSource Example#1](~/add/codesnippet/csharp/p-system.data.oledb.oled_4_1.cs)]\n [!code-vb[Classic WebData OleDbConnection.DataSource Example#1](~/add/codesnippet/visualbasic/p-system.data.oledb.oled_4_1.vb)]"
  syntax:
    content: public override string ConnectionString { get; set; }
    return:
      type: System.String
      description: "OLE DB 提供者連接字串中包含資料來源名稱，以及其他建立初始連接所需要的參數。 預設值為空字串。"
  overload: System.Data.OleDb.OleDbConnection.ConnectionString*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "已提供無效的連接字串引數，或尚未提供必要的連接字串引數。"
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnection.ConnectionTimeout
  id: ConnectionTimeout
  parent: System.Data.OleDb.OleDbConnection
  langs:
  - csharp
  name: ConnectionTimeout
  nameWithType: OleDbConnection.ConnectionTimeout
  fullName: System.Data.OleDb.OleDbConnection.ConnectionTimeout
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "取得嘗試建立連接，以在終止嘗試並產生錯誤之前的等待時間。"
  remarks: "值為 0 表示無限制，並應避免在<xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A>因為連線嘗試會無限期等候。</xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A>"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbConnection> and sets some of its properties in the connection string.  \n  \n [!code-vb[Classic WebData OleDbConnection.ConnectionTimeout Example#1](~/add/codesnippet/visualbasic/p-system.data.oledb.oled_2_1.vb)]\n [!code-cs[Classic WebData OleDbConnection.ConnectionTimeout Example#1](~/add/codesnippet/csharp/p-system.data.oledb.oled_2_1.cs)]"
  syntax:
    content: public override int ConnectionTimeout { get; }
    return:
      type: System.Int32
      description: "以秒為單位等待連接開啟時間。 預設值為 15 秒。"
  overload: System.Data.OleDb.OleDbConnection.ConnectionTimeout*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "設定的值小於 0。"
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnection.CreateCommand
  id: CreateCommand
  parent: System.Data.OleDb.OleDbConnection
  langs:
  - csharp
  name: CreateCommand()
  nameWithType: OleDbConnection.CreateCommand()
  fullName: System.Data.OleDb.OleDbConnection.CreateCommand()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "建立並傳回<xref href=&quot;System.Data.OleDb.OleDbCommand&quot;></xref>物件相關聯<xref href=&quot;System.Data.OleDb.OleDbConnection&quot;> </xref>。"
  syntax:
    content: public System.Data.OleDb.OleDbCommand CreateCommand ();
    parameters: []
    return:
      type: System.Data.OleDb.OleDbCommand
      description: "<xref href=&quot;System.Data.OleDb.OleDbCommand&quot;> </xref>物件。"
  overload: System.Data.OleDb.OleDbConnection.CreateCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnection.CreateDbCommand
  id: CreateDbCommand
  parent: System.Data.OleDb.OleDbConnection
  langs:
  - csharp
  name: CreateDbCommand()
  nameWithType: OleDbConnection.CreateDbCommand()
  fullName: System.Data.OleDb.OleDbConnection.CreateDbCommand()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  syntax:
    content: protected override System.Data.Common.DbCommand CreateDbCommand ();
    parameters: []
    return:
      type: System.Data.Common.DbCommand
      description: "即將加入。"
  overload: System.Data.OleDb.OleDbConnection.CreateDbCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnection.Database
  id: Database
  parent: System.Data.OleDb.OleDbConnection
  langs:
  - csharp
  name: Database
  nameWithType: OleDbConnection.Database
  fullName: System.Data.OleDb.OleDbConnection.Database
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "取得目前資料庫或要在連接開啟之後使用的資料庫名稱。"
  remarks: "資料庫屬性會動態更新。 如果您變更目前的資料庫使用 SQL 陳述式或<xref:System.Data.OleDb.OleDbConnection.ChangeDatabase%2A>方法，會傳送參考用訊息，並自動更新的屬性。</xref:System.Data.OleDb.OleDbConnection.ChangeDatabase%2A>"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbConnection> and displays some of its read-only properties.  \n  \n [!code-cs[Classic WebData OleDbConnection.Database Example#1](~/add/codesnippet/csharp/p-system.data.oledb.oled_14_1.cs)]\n [!code-vb[Classic WebData OleDbConnection.Database Example#1](~/add/codesnippet/visualbasic/p-system.data.oledb.oled_14_1.vb)]"
  syntax:
    content: public override string Database { get; }
    return:
      type: System.String
      description: "目前的資料庫或要在連接開啟之後使用的資料庫名稱的名稱。 預設值為空字串。"
  overload: System.Data.OleDb.OleDbConnection.Database*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnection.DataSource
  id: DataSource
  parent: System.Data.OleDb.OleDbConnection
  langs:
  - csharp
  name: DataSource
  nameWithType: OleDbConnection.DataSource
  fullName: System.Data.OleDb.OleDbConnection.DataSource
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "取得伺服器名稱或資料來源檔案名稱。"
  remarks: "如果資料庫的連接已關閉，`DataSource`屬性會傳回任何包含於`ConnectionString`資料來源的關鍵字。 如果連接為開啟和`ConnectionString`資料來源關鍵字的值開頭&quot;| datadirectory |&quot;，屬性會傳回任何包含於`ConnectionString`只有資料來源關鍵字。 如果資料庫的連接已開啟，屬性會傳回原生提供者傳回的`DBPROP_INIT_DATASOURCE,`空的若是原生提供者的`DBPROP_DATASOURCENAME`傳回。"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbConnection> and displays some of its read-only properties.  \n  \n [!code-cs[Classic WebData OleDbConnection.DataSource Example#1](~/add/codesnippet/csharp/p-system.data.oledb.oled_26_1.cs)]\n [!code-vb[Classic WebData OleDbConnection.DataSource Example#1](~/add/codesnippet/visualbasic/p-system.data.oledb.oled_26_1.vb)]"
  syntax:
    content: public override string DataSource { get; }
    return:
      type: System.String
      description: "伺服器名稱或資料來源檔案名稱。 預設值為空字串。"
  overload: System.Data.OleDb.OleDbConnection.DataSource*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnection.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Data.OleDb.OleDbConnection
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: OleDbConnection.Dispose(Boolean)
  fullName: System.Data.OleDb.OleDbConnection.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "即將加入。"
  overload: System.Data.OleDb.OleDbConnection.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)
  id: EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)
  parent: System.Data.OleDb.OleDbConnection
  langs:
  - csharp
  name: EnlistDistributedTransaction(ITransaction)
  nameWithType: OleDbConnection.EnlistDistributedTransaction(ITransaction)
  fullName: System.Data.OleDb.OleDbConnection.EnlistDistributedTransaction(ITransaction)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "指定異動登記為分散式交易。"
  remarks: "新的 ADO.NET 2.0 是支援的使用<xref:System.Data.Common.DbConnection.EnlistTransaction%2A>編列到分散式交易中的方法。</xref:System.Data.Common.DbConnection.EnlistTransaction%2A> 因為它在登錄中的連接<xref:System.Transactions.Transaction>執行個體， **EnlistTransaction**利用中的可用功能<xref:System.Transactions>命名空間來管理分散式交易，因此最好**EnlistDistributedTransaction**針對此目的。</xref:System.Transactions> </xref:System.Transactions.Transaction> 如需詳細資訊，請參閱[分散式交易](~/add/includes/ajax-current-ext-md.md)。       您可以繼續使用 EnlistDistributedTransaction 方法，如果自動登記功能已停用現有的分散式交易中編列。 在現有的分散式交易中登記可確保，如果認可或回復交易，在資料來源的程式碼所做的修改也認可或回復的。 如需有關分散式交易的詳細資訊，請參閱[分散式交易](../Topic/Distributed%20Transactions.md)。       EnlistDistributedTransaction 傳回的例外狀況，如果<xref:System.Data.OleDb.OleDbConnection>已經開始使用<xref:System.Data.OleDb.OleDbConnection.BeginTransaction%2A>.</xref:System.Data.OleDb.OleDbConnection.BeginTransaction%2A>的交易</xref:System.Data.OleDb.OleDbConnection> 不過，交易是否在資料來源上啟動本機交易 (例如，藉由明確執行 BEGIN TRANSACTION 陳述式使用<xref:System.Data.OleDbClient.OleDbCommand>物件)，EnlistDistributedTransaction 回復本機交易，並依要求在現有的分散式交易中登記。</xref:System.Data.OleDbClient.OleDbCommand> 您不會收到通知，本機交易已回復，而且負責管理任何本機交易不使用啟動<xref:System.Data.OleDb.OleDbConnection.BeginTransaction%2A>.</xref:System.Data.OleDb.OleDbConnection.BeginTransaction%2A>"
  syntax:
    content: public void EnlistDistributedTransaction (System.EnterpriseServices.ITransaction transaction);
    parameters:
    - id: transaction
      type: System.EnterpriseServices.ITransaction
      description: "若要將現有的參考<xref href=&quot;System.EnterpriseServices.ITransaction&quot;></xref>要登記之。"
  overload: System.Data.OleDb.OleDbConnection.EnlistDistributedTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnection.EnlistTransaction(System.Transactions.Transaction)
  id: EnlistTransaction(System.Transactions.Transaction)
  parent: System.Data.OleDb.OleDbConnection
  langs:
  - csharp
  name: EnlistTransaction(Transaction)
  nameWithType: OleDbConnection.EnlistTransaction(Transaction)
  fullName: System.Data.OleDb.OleDbConnection.EnlistTransaction(Transaction)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "指定異動登記為分散式交易。"
  remarks: '新的 ADO.NET 2.0 是支援的使用<xref:System.Data.Common.DbConnection.EnlistTransaction%2A>編列到分散式交易中的方法。</xref:System.Data.Common.DbConnection.EnlistTransaction%2A> 因為它在登錄中的連接<xref:System.Transactions.Transaction>執行個體， **EnlistTransaction**利用中的可用功能<xref:System.Transactions>命名空間來管理分散式交易，因此最好**EnlistDistributedTransaction**，它會使用<xref:System.EnterpriseServices.ITransaction>物件。</xref:System.EnterpriseServices.ITransaction> </xref:System.Transactions> </xref:System.Transactions.Transaction> 它也會有稍微不同的語意︰ 在交易上明確地登記連接之後, 無法取消登錄或另一個交易中登記，直到第一筆交易完成為止。 如需有關分散式交易的詳細資訊，請參閱[分散式交易](~/add/includes/ajax-current-ext-md.md)。'
  syntax:
    content: public override void EnlistTransaction (System.Transactions.Transaction transaction);
    parameters:
    - id: transaction
      type: System.Transactions.Transaction
      description: "若要將現有的參考<xref href=&quot;System.Transactions.Transaction&quot;></xref>要登記之。"
  overload: System.Data.OleDb.OleDbConnection.EnlistTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnection.GetOleDbSchemaTable(System.Guid,System.Object[])
  id: GetOleDbSchemaTable(System.Guid,System.Object[])
  parent: System.Data.OleDb.OleDbConnection
  langs:
  - csharp
  name: GetOleDbSchemaTable(Guid,Object[])
  nameWithType: OleDbConnection.GetOleDbSchemaTable(Guid,Object[])
  fullName: System.Data.OleDb.OleDbConnection.GetOleDbSchemaTable(Guid,Object[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "由 GUID，並套用指定的限制之後，請從資料來源傳回結構描述資訊。"
  remarks: "結構描述資料表以傳回<xref:System.Data.DataTable>具有所指定的 OLE DB 結構描述資料列集相同的格式`schema`參數。</xref:System.Data.DataTable> 使用`restrictions`參數中傳回的資料列篩選<xref:System.Data.DataTable>（例如，藉由指定資料表名稱、 類型、 擁有者，或結構描述的限制）。</xref:System.Data.DataTable> 當您要傳入值陣列時，包含空字串或讓不含值的陣列元素都是 null。 如果您要傳入空白陣列`restrictions`，傳回所有資料列 （每個資料表各一個） 會在預設順序。 陣列中的值會對應到來源資料表和<xref:System.Data.DataTable>.</xref:System.Data.DataTable>的資料行順序 與結構描述資料列中的對應資料行內容的限制陣列中的每個項目進行比較。 例如，限制陣列中的第一個項目會比較第一個資料列集中的資料行。 如果限制元素不是 null，只有資料列從結構描述資料列完全符合限制的值會加入至產生<xref:System.Data.DataTable>。</xref:System.Data.DataTable>       <xref:System.Data.OleDb.OleDbConnection>方法會呼叫基礎 OLE DB **idbschemarowset:: Getrowset**方法使用標準通用語言執行階段轉換規則。</xref:System.Data.OleDb.OleDbConnection> 如需詳細資訊，請參閱[COM 資料類型](http://msdn.microsoft.com/en-us/f93ae35d-a416-4218-8700-c8218cc90061)。       您可以使用<xref:System.Data.OleDb.OleDbSchemaGuid.DbInfoLiterals>.</xref:System.Data.OleDb.OleDbSchemaGuid.DbInfoLiterals>擷取常值的相關資訊 這會提供資訊相當於呼叫 OLE DB **IDBInfo::GetLiteralInfo**介面或 ADO **Connection.OpenSchema**方法`adSchemaDBInfoLiterals`常數。"
  example:
  - "The following sample returns a list of tables in a database.  \n  \n [!code-cs[Classic WebData OleDbConnection.GetOleDbSchemaTable Example#1](~/add/codesnippet/csharp/da103458-7630-4900-9261-_1.cs)]\n [!code-vb[Classic WebData OleDbConnection.GetOleDbSchemaTable Example#1](~/add/codesnippet/visualbasic/da103458-7630-4900-9261-_1.vb)]"
  syntax:
    content: public System.Data.DataTable GetOleDbSchemaTable (Guid schema, object[] restrictions);
    parameters:
    - id: schema
      type: System.Guid
      description: "其中一個<xref href=&quot;System.Data.OleDb.OleDbSchemaGuid&quot;></xref>值，指定要傳回的結構描述資料表。"
    - id: restrictions
      type: System.Object[]
      description: "<xref:System.Object>限制值的陣列。</xref:System.Object> 這些限制資料行順序套用。 也就是第一個限制值套用至第一個限制資料行、 第二個的限制值會套用到第二個限制資料行，依此類推。"
    return:
      type: System.Data.DataTable
      description: "A <xref href=&quot;System.Data.DataTable&quot;> </xref> ，其中包含要求之結構描述資訊。"
  overload: System.Data.OleDb.OleDbConnection.GetOleDbSchemaTable*
  exceptions:
  - type: System.Data.OleDb.OleDbException
    commentId: T:System.Data.OleDb.OleDbException
    description: "指定的限制集合無效。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref href=&quot;System.Data.OleDb.OleDbConnection&quot;> </xref>已關閉。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "OLE DB 提供者不支援指定的結構描述資料列集。       -或- <code> schema </code>參數包含的值<xref href=&quot;System.Data.OleDb.OleDbSchemaGuid.DbInfoLiterals&quot;></xref>和<code> restrictions </code>參數會包含一個或多個限制。"
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnection.GetSchema
  id: GetSchema
  parent: System.Data.OleDb.OleDbConnection
  langs:
  - csharp
  name: GetSchema()
  nameWithType: OleDbConnection.GetSchema()
  fullName: System.Data.OleDb.OleDbConnection.GetSchema()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "傳回這個資料來源的結構描述資訊<xref href=&quot;System.Data.OleDb.OleDbConnection&quot;> </xref>。"
  syntax:
    content: public override System.Data.DataTable GetSchema ();
    parameters: []
    return:
      type: System.Data.DataTable
      description: "A <xref href=&quot;System.Data.DataTable&quot;> </xref> ，其中包含結構描述資訊。"
  overload: System.Data.OleDb.OleDbConnection.GetSchema*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnection.GetSchema(System.String)
  id: GetSchema(System.String)
  parent: System.Data.OleDb.OleDbConnection
  langs:
  - csharp
  name: GetSchema(String)
  nameWithType: OleDbConnection.GetSchema(String)
  fullName: System.Data.OleDb.OleDbConnection.GetSchema(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "傳回這個資料來源的結構描述資訊<xref href=&quot;System.Data.OleDb.OleDbConnection&quot;></xref>結構描述名稱以指定的字串。"
  remarks: "當`collectionName`指定為 null，<xref:System.Data.DataTable>包含所有中繼資料可用，以及其限制的相關資訊。</xref:System.Data.DataTable>"
  syntax:
    content: public override System.Data.DataTable GetSchema (string collectionName);
    parameters:
    - id: collectionName
      type: System.String
      description: "指定要傳回之結構描述的名稱。"
    return:
      type: System.Data.DataTable
      description: "A <xref href=&quot;System.Data.DataTable&quot;> </xref> ，其中包含結構描述資訊。"
  overload: System.Data.OleDb.OleDbConnection.GetSchema*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnection.GetSchema(System.String,System.String[])
  id: GetSchema(System.String,System.String[])
  parent: System.Data.OleDb.OleDbConnection
  langs:
  - csharp
  name: GetSchema(String,String[])
  nameWithType: OleDbConnection.GetSchema(String,String[])
  fullName: System.Data.OleDb.OleDbConnection.GetSchema(String,String[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "傳回這個資料來源的結構描述資訊<xref href=&quot;System.Data.OleDb.OleDbConnection&quot;></xref>結構描述名稱和指定的字串陣列的限制值以指定的字串。"
  remarks: "當`collectionName`指定為 null，<xref:System.Data.DataTable>包含所有中繼資料可用，以及其限制的相關資訊。</xref:System.Data.DataTable>       `restrictionValues`參數可以提供*n*深度的值所指定的特定集合的限制集合。 若要設定特定的限制，值及設定的其他限制的值，您需要將上述限制設為 null，然後放入您想要指定的值限制中的適當值。       這個範例是&quot;Tables&quot;集合。 如果&quot;Tables&quot;集合有三個的限制 （資料庫、 擁有者和資料表名稱），而且您想要取回只有擁有者 「 卡爾&quot;相關聯的資料表，您必須傳遞下列值 （最少）︰ null、&quot;Carl&quot;。 如果未傳入限制值，預設值會使用該限制。 這是相同的對應與傳入 null，不同於傳遞的參數值為空字串。 在此情況下，則為空字串 (&quot;&quot;) 會被視為指定參數的值。"
  syntax:
    content: public override System.Data.DataTable GetSchema (string collectionName, string[] restrictionValues);
    parameters:
    - id: collectionName
      type: System.String
      description: "指定要傳回之結構描述的名稱。"
    - id: restrictionValues
      type: System.String[]
      description: "指定要求之結構描述的限制值的集合。"
    return:
      type: System.Data.DataTable
      description: "A <xref href=&quot;System.Data.DataTable&quot;> </xref> ，其中包含結構描述資訊。"
  overload: System.Data.OleDb.OleDbConnection.GetSchema*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnection.InfoMessage
  id: InfoMessage
  parent: System.Data.OleDb.OleDbConnection
  langs:
  - csharp
  name: InfoMessage
  nameWithType: OleDbConnection.InfoMessage
  fullName: System.Data.OleDb.OleDbConnection.InfoMessage
  type: Event
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "提供者會傳送警告或資訊訊息時發生。"
  remarks: "要處理警告或資訊訊息伺服器所傳送的用戶端應該建立<xref:System.Data.OleDb.OleDbInfoMessageEventHandler>委託以接聽此事件。</xref:System.Data.OleDb.OleDbInfoMessageEventHandler>       從資料來源傳回具有低嚴重性的訊息時，就會發生 InfoMessage 事件。 低嚴重性訊息則不會造成例外狀況。 Microsoft SQL server，這包括嚴重性為 10 的錯誤訊息或小於如需詳細資訊和範例，請參閱[連接事件](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public event System.Data.OleDb.OleDbInfoMessageEventHandler InfoMessage;
    return:
      type: System.Data.OleDb.OleDbInfoMessageEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnection.Open
  id: Open
  parent: System.Data.OleDb.OleDbConnection
  langs:
  - csharp
  name: Open()
  nameWithType: OleDbConnection.Open()
  fullName: System.Data.OleDb.OleDbConnection.Open()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "<xref:System.Data.OleDb.OleDbConnection.ConnectionString*>.</xref:System.Data.OleDb.OleDbConnection.ConnectionString*>所指定的屬性設定開啟資料庫連接"
  remarks: "<xref:System.Data.OleDb.OleDbConnection>繪製從連接集區的開啟連接，如果有的話。</xref:System.Data.OleDb.OleDbConnection> 否則，它會建立新的連接到資料來源。 您可以開啟多個單一<xref:System.Data.OleDb.OleDbConnection>.</xref:System.Data.OleDb.OleDbConnection> DataReader 如果您使用的 OLEDB 提供者不支援在單一連接上的多個作用中的 DataReader，OLEDB 提供者會針對每個隱含開啟其他的連接。      > [!NOTE] > 如果<xref:System.Data.OleDb.OleDbConnection>移出的範圍，它不封閉。</xref:System.Data.OleDb.OleDbConnection> 因此，您必須明確地關閉此連接呼叫<xref:System.Data.OleDb.OleDbConnection.Close%2A>或**處置**，或在使用中的連線`Using`陳述式。</xref:System.Data.OleDb.OleDbConnection.Close%2A>"
  syntax:
    content: public override void Open ();
    parameters: []
  overload: System.Data.OleDb.OleDbConnection.Open*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "連接已經開啟。"
  - type: System.Data.OleDb.OleDbException
    commentId: T:System.Data.OleDb.OleDbException
    description: "開啟連接時發生連接層級錯誤。"
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnection.Provider
  id: Provider
  parent: System.Data.OleDb.OleDbConnection
  langs:
  - csharp
  name: Provider
  nameWithType: OleDbConnection.Provider
  fullName: System.Data.OleDb.OleDbConnection.Provider
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "取得在指定的 OLE DB 提供者的名稱 「 提供者 =&quot;子句的連接字串。"
  remarks: ''
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbConnection> and displays some of its read-only properties.  \n  \n [!code-cs[Classic WebData OleDbConnection.Provider Example#1](~/add/codesnippet/csharp/p-system.data.oledb.oled_1_1.cs)]\n [!code-vb[Classic WebData OleDbConnection.Provider Example#1](~/add/codesnippet/visualbasic/p-system.data.oledb.oled_1_1.vb)]"
  syntax:
    content: public string Provider { get; }
    return:
      type: System.String
      description: "中所指定提供者的名稱 「 提供者 =&quot;子句的連接字串。 預設值為空字串。"
  overload: System.Data.OleDb.OleDbConnection.Provider*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnection.ReleaseObjectPool
  id: ReleaseObjectPool
  parent: System.Data.OleDb.OleDbConnection
  langs:
  - csharp
  name: ReleaseObjectPool()
  nameWithType: OleDbConnection.ReleaseObjectPool()
  fullName: System.Data.OleDb.OleDbConnection.ReleaseObjectPool()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "表示<xref href=&quot;System.Data.OleDb.OleDbConnection&quot;></xref>發行最後一次的基礎連接時，就可以釋放物件集區。"
  remarks: "`ReleaseObjectPool`可以呼叫其他狀況會保留針對集區的可用資源<xref:System.Data.OleDb.OleDbConnection>物件。</xref:System.Data.OleDb.OleDbConnection> 您可以呼叫這個方法，如果比方說，不會使用連接物件的 OLE DB 服務通常會保留共用的連接使用中的時間長度的一次。 請注意，單獨呼叫此方法不會實際釋放存在於集區中的使用中連接。       最後處置該集區之前，必須進行下列︰ 1。  呼叫<xref:System.Data.OleDb.OleDbConnection.Close%2A>連接物件傳回至集區。</xref:System.Data.OleDb.OleDbConnection.Close%2A>      2.  允許的逾時時間之集區的每個連接物件。      3.  呼叫 ReleaseObjectPool。      4.  叫用記憶體回收。       相反地，如果您呼叫<xref:System.Data.OleDb.OleDbConnection.Close%2A>上所有使用中連接，並叫用記憶體回收，但沒有呼叫 ReleaseObjectPool，依然會有效管理的集區的物件保留的資源。</xref:System.Data.OleDb.OleDbConnection.Close%2A>"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbConnection>, opens it, displays some of its properties, closes the connection, and releases the object pool to conserve resources.  \n  \n [!code-cs[Classic WebData OleDbConnection.ReleaseObjectPool Example#1](~/add/codesnippet/csharp/m-system.data.oledb.oled_15_1.cs)]\n [!code-vb[Classic WebData OleDbConnection.ReleaseObjectPool Example#1](~/add/codesnippet/visualbasic/m-system.data.oledb.oled_15_1.vb)]"
  syntax:
    content: public static void ReleaseObjectPool ();
    parameters: []
  overload: System.Data.OleDb.OleDbConnection.ReleaseObjectPool*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnection.ResetState
  id: ResetState
  parent: System.Data.OleDb.OleDbConnection
  langs:
  - csharp
  name: ResetState()
  nameWithType: OleDbConnection.ResetState()
  fullName: System.Data.OleDb.OleDbConnection.ResetState()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "更新<xref:System.Data.OleDb.OleDbConnection.State*>屬性<xref href=&quot;System.Data.OleDb.OleDbConnection&quot;></xref>物件。</xref:System.Data.OleDb.OleDbConnection.State*>"
  remarks: "有些 OLE DB 提供者可以檢查連接的目前狀態。 例如，如果資料庫伺服器已回收自您開啟您<xref:System.Data.OleDb.OleDbConnection>、<xref:System.Data.OleDb.OleDbConnection.State%2A>屬性將會繼續傳回`Open`。</xref:System.Data.OleDb.OleDbConnection.State%2A> </xref:System.Data.OleDb.OleDbConnection> 如果您使用 OLE DB 提供者，可支援這項資訊的即時連接上的輪詢，呼叫 ResetState 方法，然後檢查<xref:System.Data.OleDb.OleDbConnection.State%2A>屬性會告訴您此連接已經關閉。</xref:System.Data.OleDb.OleDbConnection.State%2A> ResetState 方法依賴中 OLE DB 提供者來驗證連線的目前狀態的功能。 若要判斷您 OLE DB 提供者是否支援這項功能，請查看提供者的文件 DBPROP_CONNECTIONSTATUS 的詳細資訊。"
  syntax:
    content: public void ResetState ();
    parameters: []
  overload: System.Data.OleDb.OleDbConnection.ResetState*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnection.ServerVersion
  id: ServerVersion
  parent: System.Data.OleDb.OleDbConnection
  langs:
  - csharp
  name: ServerVersion
  nameWithType: OleDbConnection.ServerVersion
  fullName: System.Data.OleDb.OleDbConnection.ServerVersion
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "取得字串，包含用戶端已連線的伺服器的版本。"
  remarks: "ServerVersion 屬性對應至 OLE DB DBPROP_DBMSVER 屬性。 如果 ServerVersion 不支援基礎 OLE DB 提供者，則會傳回空字串。       版本是表單的*# #。 # #。 # # #*，其中前兩個數字的主要版本、 下面兩個的數字是否為次要版本，而且最後四位數字的發行版本。 提供者必須呈現在這種形式的產品版本，但也可以附加特定產品版本 — 例如，&quot;04.01.0000 Rdb 4.1&quot;。 字串為形式*major.minor.build*，其中主要及次要剛好兩位數，且組建是剛好四位數。"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbConnection> and displays some of its read-only properties.  \n  \n [!code-vb[Classic WebData OleDbConnection.ServerVersion Example#1](~/add/codesnippet/visualbasic/p-system.data.oledb.oled_6_1.vb)]\n [!code-cs[Classic WebData OleDbConnection.ServerVersion Example#1](~/add/codesnippet/csharp/p-system.data.oledb.oled_6_1.cs)]"
  syntax:
    content: public override string ServerVersion { get; }
    return:
      type: System.String
      description: "連接的伺服器版本。"
  overload: System.Data.OleDb.OleDbConnection.ServerVersion*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "連接已關閉。"
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnection.State
  id: State
  parent: System.Data.OleDb.OleDbConnection
  langs:
  - csharp
  name: State
  nameWithType: OleDbConnection.State
  fullName: System.Data.OleDb.OleDbConnection.State
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "取得目前連接狀態。"
  remarks: "下列允許狀態變更:-從`Closed`至`Open`，並使用<xref:System.Data.OleDb.OleDbConnection.Open%2A>方法<xref:System.Data.OleDb.OleDbConnection>物件。</xref:System.Data.OleDb.OleDbConnection> </xref:System.Data.OleDb.OleDbConnection.Open%2A>      -從`Open`至`Closed`，使用<xref:System.Data.OleDb.OleDbConnection.Close%2A>方法或**處置**方法<xref:System.Data.OleDb.OleDbConnection>物件。</xref:System.Data.OleDb.OleDbConnection> </xref:System.Data.OleDb.OleDbConnection.Close%2A>      > [!NOTE] > 在舊版.NET Framework 中，呼叫狀態屬性增加應用程式的額外負荷因為每個呼叫會導致呼叫 OLE DB DBPROP_CONNECTIONSTATUS 屬性開放的連接。 與.NET Framework 2.0 版本中，這是不會再發生問題。"
  syntax:
    content: public override System.Data.ConnectionState State { get; }
    return:
      type: System.Data.ConnectionState
      description: "位元組合<xref href=&quot;System.Data.ConnectionState&quot;></xref>值。 預設會關閉。"
  overload: System.Data.OleDb.OleDbConnection.State*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnection.System#ICloneable#Clone
  id: System#ICloneable#Clone
  isEii: true
  parent: System.Data.OleDb.OleDbConnection
  langs:
  - csharp
  name: System.ICloneable.Clone()
  nameWithType: OleDbConnection.System.ICloneable.Clone()
  fullName: System.Data.OleDb.OleDbConnection.System.ICloneable.Clone()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "如需這個成員的說明，請參閱&lt;xref:System.ICloneable.Clone%2A?displayProperty=fullName&gt;。"
  remarks: "這個成員是明確介面成員實作。 它可用時，才<xref:System.Data.OleDb.OleDbConnection>執行個體轉換成<xref:System.ICloneable>介面。</xref:System.ICloneable> </xref:System.Data.OleDb.OleDbConnection>"
  syntax:
    content: object ICloneable.Clone ();
    parameters: []
    return:
      type: System.Object
      description: "新<xref:System.Object>也就是這個執行個體的複本。</xref:System.Object>"
  overload: System.Data.OleDb.OleDbConnection.System#ICloneable#Clone*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Common.DbConnection
  isExternal: false
  name: System.Data.Common.DbConnection
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Data.OleDb.OleDbException
  parent: System.Data.OleDb
  isExternal: false
  name: OleDbException
  nameWithType: OleDbException
  fullName: System.Data.OleDb.OleDbException
- uid: System.Data.OleDb.OleDbConnection.#ctor
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: OleDbConnection()
  nameWithType: OleDbConnection.OleDbConnection()
  fullName: System.Data.OleDb.OleDbConnection.OleDbConnection()
- uid: System.Data.OleDb.OleDbConnection.#ctor(System.String)
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: OleDbConnection(String)
  nameWithType: OleDbConnection.OleDbConnection(String)
  fullName: System.Data.OleDb.OleDbConnection.OleDbConnection(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.OleDb.OleDbConnection.BeginDbTransaction(System.Data.IsolationLevel)
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: BeginDbTransaction(IsolationLevel)
  nameWithType: OleDbConnection.BeginDbTransaction(IsolationLevel)
  fullName: System.Data.OleDb.OleDbConnection.BeginDbTransaction(IsolationLevel)
- uid: System.Data.Common.DbTransaction
  parent: System.Data.Common
  isExternal: false
  name: DbTransaction
  nameWithType: DbTransaction
  fullName: System.Data.Common.DbTransaction
- uid: System.Data.IsolationLevel
  parent: System.Data
  isExternal: false
  name: IsolationLevel
  nameWithType: IsolationLevel
  fullName: System.Data.IsolationLevel
- uid: System.Data.OleDb.OleDbConnection.BeginTransaction
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: BeginTransaction()
  nameWithType: OleDbConnection.BeginTransaction()
  fullName: System.Data.OleDb.OleDbConnection.BeginTransaction()
- uid: System.Data.OleDb.OleDbTransaction
  parent: System.Data.OleDb
  isExternal: false
  name: OleDbTransaction
  nameWithType: OleDbTransaction
  fullName: System.Data.OleDb.OleDbTransaction
- uid: System.Data.OleDb.OleDbConnection.BeginTransaction(System.Data.IsolationLevel)
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: BeginTransaction(IsolationLevel)
  nameWithType: OleDbConnection.BeginTransaction(IsolationLevel)
  fullName: System.Data.OleDb.OleDbConnection.BeginTransaction(IsolationLevel)
- uid: System.Data.OleDb.OleDbConnection.ChangeDatabase(System.String)
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: ChangeDatabase(String)
  nameWithType: OleDbConnection.ChangeDatabase(String)
  fullName: System.Data.OleDb.OleDbConnection.ChangeDatabase(String)
- uid: System.Data.OleDb.OleDbConnection.Close
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: Close()
  nameWithType: OleDbConnection.Close()
  fullName: System.Data.OleDb.OleDbConnection.Close()
- uid: System.Data.OleDb.OleDbConnection.ConnectionString
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: ConnectionString
  nameWithType: OleDbConnection.ConnectionString
  fullName: System.Data.OleDb.OleDbConnection.ConnectionString
- uid: System.Data.OleDb.OleDbConnection.ConnectionTimeout
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: ConnectionTimeout
  nameWithType: OleDbConnection.ConnectionTimeout
  fullName: System.Data.OleDb.OleDbConnection.ConnectionTimeout
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.OleDb.OleDbConnection.CreateCommand
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: CreateCommand()
  nameWithType: OleDbConnection.CreateCommand()
  fullName: System.Data.OleDb.OleDbConnection.CreateCommand()
- uid: System.Data.OleDb.OleDbCommand
  parent: System.Data.OleDb
  isExternal: false
  name: OleDbCommand
  nameWithType: OleDbCommand
  fullName: System.Data.OleDb.OleDbCommand
- uid: System.Data.OleDb.OleDbConnection.CreateDbCommand
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: CreateDbCommand()
  nameWithType: OleDbConnection.CreateDbCommand()
  fullName: System.Data.OleDb.OleDbConnection.CreateDbCommand()
- uid: System.Data.Common.DbCommand
  parent: System.Data.Common
  isExternal: false
  name: DbCommand
  nameWithType: DbCommand
  fullName: System.Data.Common.DbCommand
- uid: System.Data.OleDb.OleDbConnection.Database
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: Database
  nameWithType: OleDbConnection.Database
  fullName: System.Data.OleDb.OleDbConnection.Database
- uid: System.Data.OleDb.OleDbConnection.DataSource
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: DataSource
  nameWithType: OleDbConnection.DataSource
  fullName: System.Data.OleDb.OleDbConnection.DataSource
- uid: System.Data.OleDb.OleDbConnection.Dispose(System.Boolean)
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: OleDbConnection.Dispose(Boolean)
  fullName: System.Data.OleDb.OleDbConnection.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.OleDb.OleDbConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: EnlistDistributedTransaction(ITransaction)
  nameWithType: OleDbConnection.EnlistDistributedTransaction(ITransaction)
  fullName: System.Data.OleDb.OleDbConnection.EnlistDistributedTransaction(ITransaction)
- uid: System.EnterpriseServices.ITransaction
  parent: System.EnterpriseServices
  isExternal: false
  name: ITransaction
  nameWithType: ITransaction
  fullName: System.EnterpriseServices.ITransaction
- uid: System.Data.OleDb.OleDbConnection.EnlistTransaction(System.Transactions.Transaction)
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: EnlistTransaction(Transaction)
  nameWithType: OleDbConnection.EnlistTransaction(Transaction)
  fullName: System.Data.OleDb.OleDbConnection.EnlistTransaction(Transaction)
- uid: System.Transactions.Transaction
  parent: System.Transactions
  isExternal: false
  name: Transaction
  nameWithType: Transaction
  fullName: System.Transactions.Transaction
- uid: System.Data.OleDb.OleDbConnection.GetOleDbSchemaTable(System.Guid,System.Object[])
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: GetOleDbSchemaTable(Guid,Object[])
  nameWithType: OleDbConnection.GetOleDbSchemaTable(Guid,Object[])
  fullName: System.Data.OleDb.OleDbConnection.GetOleDbSchemaTable(Guid,Object[])
- uid: System.Data.DataTable
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.OleDb.OleDbConnection.GetSchema
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: GetSchema()
  nameWithType: OleDbConnection.GetSchema()
  fullName: System.Data.OleDb.OleDbConnection.GetSchema()
- uid: System.Data.OleDb.OleDbConnection.GetSchema(System.String)
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: GetSchema(String)
  nameWithType: OleDbConnection.GetSchema(String)
  fullName: System.Data.OleDb.OleDbConnection.GetSchema(String)
- uid: System.Data.OleDb.OleDbConnection.GetSchema(System.String,System.String[])
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: GetSchema(String,String[])
  nameWithType: OleDbConnection.GetSchema(String,String[])
  fullName: System.Data.OleDb.OleDbConnection.GetSchema(String,String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.OleDb.OleDbConnection.InfoMessage
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: InfoMessage
  nameWithType: OleDbConnection.InfoMessage
  fullName: System.Data.OleDb.OleDbConnection.InfoMessage
- uid: System.Data.OleDb.OleDbInfoMessageEventHandler
  parent: System.Data.OleDb
  isExternal: false
  name: OleDbInfoMessageEventHandler
  nameWithType: OleDbInfoMessageEventHandler
  fullName: System.Data.OleDb.OleDbInfoMessageEventHandler
- uid: System.Data.OleDb.OleDbConnection.Open
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: Open()
  nameWithType: OleDbConnection.Open()
  fullName: System.Data.OleDb.OleDbConnection.Open()
- uid: System.Data.OleDb.OleDbConnection.Provider
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: Provider
  nameWithType: OleDbConnection.Provider
  fullName: System.Data.OleDb.OleDbConnection.Provider
- uid: System.Data.OleDb.OleDbConnection.ReleaseObjectPool
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: ReleaseObjectPool()
  nameWithType: OleDbConnection.ReleaseObjectPool()
  fullName: System.Data.OleDb.OleDbConnection.ReleaseObjectPool()
- uid: System.Data.OleDb.OleDbConnection.ResetState
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: ResetState()
  nameWithType: OleDbConnection.ResetState()
  fullName: System.Data.OleDb.OleDbConnection.ResetState()
- uid: System.Data.OleDb.OleDbConnection.ServerVersion
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: ServerVersion
  nameWithType: OleDbConnection.ServerVersion
  fullName: System.Data.OleDb.OleDbConnection.ServerVersion
- uid: System.Data.OleDb.OleDbConnection.State
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: State
  nameWithType: OleDbConnection.State
  fullName: System.Data.OleDb.OleDbConnection.State
- uid: System.Data.ConnectionState
  parent: System.Data
  isExternal: false
  name: ConnectionState
  nameWithType: ConnectionState
  fullName: System.Data.ConnectionState
- uid: System.Data.OleDb.OleDbConnection.System#ICloneable#Clone
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: System.ICloneable.Clone()
  nameWithType: OleDbConnection.System.ICloneable.Clone()
  fullName: System.Data.OleDb.OleDbConnection.System.ICloneable.Clone()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.OleDb.OleDbConnection.#ctor*
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: OleDbConnection
  nameWithType: OleDbConnection.OleDbConnection
- uid: System.Data.OleDb.OleDbConnection.BeginDbTransaction*
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: BeginDbTransaction
  nameWithType: OleDbConnection.BeginDbTransaction
- uid: System.Data.OleDb.OleDbConnection.BeginTransaction*
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: BeginTransaction
  nameWithType: OleDbConnection.BeginTransaction
- uid: System.Data.OleDb.OleDbConnection.ChangeDatabase*
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: ChangeDatabase
  nameWithType: OleDbConnection.ChangeDatabase
- uid: System.Data.OleDb.OleDbConnection.Close*
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: Close
  nameWithType: OleDbConnection.Close
- uid: System.Data.OleDb.OleDbConnection.ConnectionString*
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: ConnectionString
  nameWithType: OleDbConnection.ConnectionString
- uid: System.Data.OleDb.OleDbConnection.ConnectionTimeout*
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: ConnectionTimeout
  nameWithType: OleDbConnection.ConnectionTimeout
- uid: System.Data.OleDb.OleDbConnection.CreateCommand*
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: CreateCommand
  nameWithType: OleDbConnection.CreateCommand
- uid: System.Data.OleDb.OleDbConnection.CreateDbCommand*
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: CreateDbCommand
  nameWithType: OleDbConnection.CreateDbCommand
- uid: System.Data.OleDb.OleDbConnection.Database*
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: Database
  nameWithType: OleDbConnection.Database
- uid: System.Data.OleDb.OleDbConnection.DataSource*
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: DataSource
  nameWithType: OleDbConnection.DataSource
- uid: System.Data.OleDb.OleDbConnection.Dispose*
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: Dispose
  nameWithType: OleDbConnection.Dispose
- uid: System.Data.OleDb.OleDbConnection.EnlistDistributedTransaction*
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: EnlistDistributedTransaction
  nameWithType: OleDbConnection.EnlistDistributedTransaction
- uid: System.Data.OleDb.OleDbConnection.EnlistTransaction*
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: EnlistTransaction
  nameWithType: OleDbConnection.EnlistTransaction
- uid: System.Data.OleDb.OleDbConnection.GetOleDbSchemaTable*
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: GetOleDbSchemaTable
  nameWithType: OleDbConnection.GetOleDbSchemaTable
- uid: System.Data.OleDb.OleDbConnection.GetSchema*
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: GetSchema
  nameWithType: OleDbConnection.GetSchema
- uid: System.Data.OleDb.OleDbConnection.Open*
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: Open
  nameWithType: OleDbConnection.Open
- uid: System.Data.OleDb.OleDbConnection.Provider*
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: Provider
  nameWithType: OleDbConnection.Provider
- uid: System.Data.OleDb.OleDbConnection.ReleaseObjectPool*
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: ReleaseObjectPool
  nameWithType: OleDbConnection.ReleaseObjectPool
- uid: System.Data.OleDb.OleDbConnection.ResetState*
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: ResetState
  nameWithType: OleDbConnection.ResetState
- uid: System.Data.OleDb.OleDbConnection.ServerVersion*
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: ServerVersion
  nameWithType: OleDbConnection.ServerVersion
- uid: System.Data.OleDb.OleDbConnection.State*
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: State
  nameWithType: OleDbConnection.State
- uid: System.Data.OleDb.OleDbConnection.System#ICloneable#Clone*
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: System.ICloneable.Clone
  nameWithType: OleDbConnection.System.ICloneable.Clone
