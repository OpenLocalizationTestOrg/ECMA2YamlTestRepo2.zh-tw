### YamlMime:ManagedReference
items:
- uid: System.Messaging.Cursor
  id: Cursor
  children:
  - System.Messaging.Cursor.Close
  - System.Messaging.Cursor.Dispose
  langs:
  - csharp
  name: Cursor
  nameWithType: Cursor
  fullName: System.Messaging.Cursor
  type: Class
  summary: "資料指標用來維護中的特定位置<xref href=&quot;System.Messaging.MessageQueue&quot;></xref>讀取佇列的訊息時。"
  remarks: "若要取得的資料指標， <xref:System.Messaging.MessageQueue>，呼叫<xref:System.Messaging.MessageQueue.CreateCursor%2A>該佇列的方法。</xref:System.Messaging.MessageQueue.CreateCursor%2A> </xref:System.Messaging.MessageQueue>       資料指標會搭配等方法<xref:System.Messaging.MessageQueue.Peek%28System.TimeSpan%2CSystem.Messaging.Cursor%2CSystem.Messaging.PeekAction%29>和<xref:System.Messaging.MessageQueue.Receive%28System.TimeSpan%2CSystem.Messaging.Cursor%29>當您需要讀取不在佇列前端的訊息。</xref:System.Messaging.MessageQueue.Receive%28System.TimeSpan%2CSystem.Messaging.Cursor%29> </xref:System.Messaging.MessageQueue.Peek%28System.TimeSpan%2CSystem.Messaging.Cursor%2CSystem.Messaging.PeekAction%29> 這包括同步或非同步方式讀取訊息。 資料指標不需要用來讀取的第一個訊息佇列中。       閱讀郵件在交易內時，訊息佇列不會回復資料指標移動如果交易已中止。 例如，假設有兩個 A1 和 A2 的訊息佇列。 如果您移除訊息 A1 在交易中，訊息佇列將游標移至 A2 訊息。 不過，如果因為任何原因中止交易，A1 插回佇列，但資料指標的訊息會保留指向 A2 訊息。       若要關閉資料指標，呼叫<xref:System.Messaging.Cursor.Close%2A>.</xref:System.Messaging.Cursor.Close%2A>"
  syntax:
    content: 'public sealed class Cursor : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Messaging.Cursor.Close
  id: Close
  parent: System.Messaging.Cursor
  langs:
  - csharp
  name: Close()
  nameWithType: Cursor.Close()
  fullName: System.Messaging.Cursor.Close()
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "關閉資料指標，允許訊息佇列版本相關聯的資源。"
  syntax:
    content: public void Close ();
    parameters: []
  overload: System.Messaging.Cursor.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.Cursor.Dispose
  id: Dispose
  parent: System.Messaging.Cursor
  langs:
  - csharp
  name: Dispose()
  nameWithType: Cursor.Dispose()
  fullName: System.Messaging.Cursor.Dispose()
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "所使用的資源全部釋出<xref href=&quot;System.Messaging.Cursor&quot;> </xref>。"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Messaging.Cursor.Dispose*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Messaging.Cursor.Close
  parent: System.Messaging.Cursor
  isExternal: false
  name: Close()
  nameWithType: Cursor.Close()
  fullName: System.Messaging.Cursor.Close()
- uid: System.Messaging.Cursor.Dispose
  parent: System.Messaging.Cursor
  isExternal: false
  name: Dispose()
  nameWithType: Cursor.Dispose()
  fullName: System.Messaging.Cursor.Dispose()
- uid: System.Messaging.Cursor.Close*
  parent: System.Messaging.Cursor
  isExternal: false
  name: Close
  nameWithType: Cursor.Close
- uid: System.Messaging.Cursor.Dispose*
  parent: System.Messaging.Cursor
  isExternal: false
  name: Dispose
  nameWithType: Cursor.Dispose
