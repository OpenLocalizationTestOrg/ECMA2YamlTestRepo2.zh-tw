### YamlMime:ManagedReference
items:
- uid: System.Windows.IWeakEventListener
  id: IWeakEventListener
  children:
  - System.Windows.IWeakEventListener.ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)
  langs:
  - csharp
  name: IWeakEventListener
  nameWithType: IWeakEventListener
  fullName: System.Windows.IWeakEventListener
  type: Interface
  summary: "預期會收到事件通過 WeakEvent 模式的類別提供事件接聽支援和<xref href=&quot;System.Windows.WeakEventManager&quot;> </xref>。"
  remarks: "<xref:System.Windows.WeakEventManager>（發送器） 會將事件轉送藉由呼叫<xref:System.Windows.IWeakEventListener.ReceiveWeakEvent%2A>類別來實作此介面，而且已經加入為接聽程式呼叫上的方法<xref:System.Windows.WeakEventManager>方法事先。</xref:System.Windows.WeakEventManager> </xref:System.Windows.IWeakEventListener.ReceiveWeakEvent%2A> </xref:System.Windows.WeakEventManager>       對下列 WeakEvent 模式的主要原因時，事件來源的物件存留期可能無關的事件接聽程式。 使用中央事件分派<xref:System.Windows.WeakEventManager>啟用接聽程式，以進行記憶體回收的處理常式收集 （或以手動方式清除） 即使來源的物件存留期超出接聽程式。</xref:System.Windows.WeakEventManager> 相反地，一般事件的連結使用`+=`或對等語言特有的事件語法會導致潛在連線中的資源來保存強式參考的處理常式。 這可防止由記憶體回收能夠及時接聽程式的參考。       來源和接聽程式之間的關聯性，建議使用此模式的一個常見情況是來自資料繫結來源更新事件的處理。       您可以使用 WeakEvent 模式來接聽外部的應用程式的事件。 您只需要定義<xref:System.Windows.WeakEventManager>，接聽在提供的行為<xref:System.Windows.IWeakEventListener.ReceiveWeakEvent%2A>，並使用<xref:System.Windows.WeakEventManager>附加此處理常式參考而非`+=`。</xref:System.Windows.WeakEventManager> </xref:System.Windows.IWeakEventListener.ReceiveWeakEvent%2A> </xref:System.Windows.WeakEventManager>"
  syntax:
    content: public interface IWeakEventListener
  implements: []
  platform:
  - net462
- uid: System.Windows.IWeakEventListener.ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)
  id: ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)
  parent: System.Windows.IWeakEventListener
  langs:
  - csharp
  name: ReceiveWeakEvent(Type,Object,EventArgs)
  nameWithType: IWeakEventListener.ReceiveWeakEvent(Type,Object,EventArgs)
  fullName: System.Windows.IWeakEventListener.ReceiveWeakEvent(Type,Object,EventArgs)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "從集中式的事件管理員接收事件。"
  remarks: ''
  example:
  - "The following example implements ReceiveWeakEvent to provide WeakEvent pattern support for two hypothetical events `ClockwiseSpin` and `CounterclockwiseSpin` that each have a dedicated <xref:System.Windows.WeakEventManager> (not shown). This implementation calls class handler stubs for each supported event, casting the event data (in this case the two events share an event data type `SpinEventArgs`). The implementation returns `false` if the event received is not one that is expected.  \n  \n [!code-cs[CorePseudocode#IWeakEventListener](~/add/codesnippet/csharp/CorePseudocode/corepseudocode.cs#iweakeventlistener)]\n [!code-vb[CorePseudocode#IWeakEventListener](~/add/codesnippet/visualbasic/corepseudocode/corepseudocode.vb#iweakeventlistener)]"
  syntax:
    content: public bool ReceiveWeakEvent (Type managerType, object sender, EventArgs e);
    parameters:
    - id: managerType
      type: System.Type
      description: "型別<xref href=&quot;System.Windows.WeakEventManager&quot;></xref>呼叫這個方法。"
    - id: sender
      type: System.Object
      description: "產生事件的物件。"
    - id: e
      type: System.EventArgs
      description: "事件資料。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果接聽程式處理此事件。 它會被視為錯誤的<xref href=&quot;System.Windows.WeakEventManager&quot;></xref>中處理[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]註冊接聽程式不會處理事件的接聽程式。 不論如何，這個方法應傳回<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>如果收到不會在無法辨識或不處理的事件。"
  overload: System.Windows.IWeakEventListener.ReceiveWeakEvent*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.IWeakEventListener.ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)
  parent: System.Windows.IWeakEventListener
  isExternal: false
  name: ReceiveWeakEvent(Type,Object,EventArgs)
  nameWithType: IWeakEventListener.ReceiveWeakEvent(Type,Object,EventArgs)
  fullName: System.Windows.IWeakEventListener.ReceiveWeakEvent(Type,Object,EventArgs)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Windows.IWeakEventListener.ReceiveWeakEvent*
  parent: System.Windows.IWeakEventListener
  isExternal: false
  name: ReceiveWeakEvent
  nameWithType: IWeakEventListener.ReceiveWeakEvent
