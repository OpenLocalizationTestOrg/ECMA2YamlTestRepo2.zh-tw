### YamlMime:ManagedReference
items:
- uid: System.Windows.EventTrigger
  id: EventTrigger
  children:
  - System.Windows.EventTrigger.#ctor
  - System.Windows.EventTrigger.#ctor(System.Windows.RoutedEvent)
  - System.Windows.EventTrigger.Actions
  - System.Windows.EventTrigger.AddChild(System.Object)
  - System.Windows.EventTrigger.AddText(System.String)
  - System.Windows.EventTrigger.RoutedEvent
  - System.Windows.EventTrigger.ShouldSerializeActions
  - System.Windows.EventTrigger.SourceName
  - System.Windows.EventTrigger.System#Windows#Markup#IAddChild#AddChild(System.Object)
  - System.Windows.EventTrigger.System#Windows#Markup#IAddChild#AddText(System.String)
  langs:
  - csharp
  name: EventTrigger
  nameWithType: EventTrigger
  fullName: System.Windows.EventTrigger
  type: Class
  summary: "代表適用於一組動作以回應事件的觸發程序。"
  remarks: "<xref:System.Windows.Trigger>物件具有<xref:System.Windows.Trigger.Setters%2A>， <xref:System.Windows.TriggerBase.EnterActions%2A>，和<xref:System.Windows.TriggerBase.ExitActions%2A>EventTrigger 的物件一開始的一組時，某些屬性，狀態依據套用的變更或動作的屬性<xref:System.Windows.EventTrigger.Actions%2A>指定路由的事件發生時。</xref:System.Windows.EventTrigger.Actions%2A> </xref:System.Windows.TriggerBase.ExitActions%2A> </xref:System.Windows.TriggerBase.EnterActions%2A> </xref:System.Windows.Trigger.Setters%2A></xref:System.Windows.Trigger> 例如，您可以使用 EventTrigger 時滑鼠指標位在特定啟動動畫的一組[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]控制項。 不同於<xref:System.Windows.Trigger>EventTrigger 並沒有終止狀態的概念，讓此動作將無法復原之後，會引發條件事件情況已不復存在。</xref:System.Windows.Trigger>       請注意，使用 EventTrigger 時，您必須選擇不會干擾您的控制項的固有行為的事件。 例如，控制<xref:System.Windows.Controls.Button>或<xref:System.Windows.Controls.TextBox>上使用者輸入事件，例如滑鼠點按動作執行特定動作和鍵盤事件。</xref:System.Windows.Controls.TextBox> </xref:System.Windows.Controls.Button> 例如，如果您已設定樣式的按鈕，然後再次嘗試設定<xref:System.Windows.Input.Mouse.MouseDown>事件做<xref:System.Windows.EventTrigger.RoutedEvent%2A>的 EventTrigger，EventTrigger 永遠不會取得套用，因為第一次取得處理事件的按鈕。</xref:System.Windows.EventTrigger.RoutedEvent%2A> </xref:System.Windows.Input.Mouse.MouseDown> 相反地，您可以使用<xref:System.Windows.Input.Mouse.PreviewMouseDown>不同的事件。</xref:System.Windows.Input.Mouse.PreviewMouseDown>       當您使用資料繫結，如果您使用<xref:System.Windows.Data.Binding.TargetUpdated>事件，您必須設定<xref:System.Windows.Data.Binding.NotifyOnTargetUpdated%2A>值您<xref:System.Windows.Data.Binding>物件`true`来引發的事件。</xref:System.Windows.Data.Binding> </xref:System.Windows.Data.Binding.NotifyOnTargetUpdated%2A> </xref:System.Windows.Data.Binding.TargetUpdated>       加入<xref:System.Windows.TriggerAction>子 EventTrigger 物件隱含地將它加入至<xref:System.Windows.TriggerActionCollection>EventTrigger 物件。</xref:System.Windows.TriggerActionCollection> </xref:System.Windows.TriggerAction>"
  example:
  - "This example shows how to use event triggers in a style to animate the <xref:System.Windows.UIElement.MouseEnter> and <xref:System.Windows.UIElement.MouseLeave> events of a <xref:System.Windows.FrameworkElement>. In this example, the <xref:System.Windows.Style> has the <xref:System.Windows.Style.TargetType%2A> set to <xref:System.Windows.Shapes.Rectangle>. Therefore, there is no need to qualify the `MouseEnter` and `MouseLeave` event names with the class name.  \n  \n [!code-xml[StyleEventTriggerAnimation#EventTriggerSnippet](~/add/codesnippet/xaml/StyleEventTriggerAnimation/Default.xaml#eventtriggersnippet)]\n [!code-xml[StyleEventTriggerAnimation#EventTriggerSnippet](~/add/codesnippet/xaml/t-system.windows.eventtr_1.xaml)]"
  syntax:
    content: >-
      [System.Windows.Markup.ContentProperty("Actions")]

      public class EventTrigger : System.Windows.TriggerBase, System.Windows.Markup.IAddChild
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  - System.Windows.TriggerBase
  implements:
  - System.Windows.Markup.IAddChild
  inheritedMembers:
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  - System.Windows.TriggerBase.EnterActions
  - System.Windows.TriggerBase.ExitActions
  platform:
  - net462
- uid: System.Windows.EventTrigger.#ctor
  id: '#ctor'
  parent: System.Windows.EventTrigger
  langs:
  - csharp
  name: EventTrigger()
  nameWithType: EventTrigger.EventTrigger()
  fullName: System.Windows.EventTrigger.EventTrigger()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "初始化的新執行個體<xref href=&quot;System.Windows.EventTrigger&quot;></xref>類別。"
  syntax:
    content: public EventTrigger ();
    parameters: []
  overload: System.Windows.EventTrigger.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.EventTrigger.#ctor(System.Windows.RoutedEvent)
  id: '#ctor(System.Windows.RoutedEvent)'
  parent: System.Windows.EventTrigger
  langs:
  - csharp
  name: EventTrigger(RoutedEvent)
  nameWithType: EventTrigger.EventTrigger(RoutedEvent)
  fullName: System.Windows.EventTrigger.EventTrigger(RoutedEvent)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "初始化的新執行個體<xref href=&quot;System.Windows.EventTrigger&quot;></xref>使用指定的事件類別。"
  syntax:
    content: public EventTrigger (System.Windows.RoutedEvent routedEvent);
    parameters:
    - id: routedEvent
      type: System.Windows.RoutedEvent
      description: "<xref href=&quot;System.Windows.RoutedEvent&quot;> </xref> ，啟動這個觸發程序。"
  overload: System.Windows.EventTrigger.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.EventTrigger.Actions
  id: Actions
  parent: System.Windows.EventTrigger
  langs:
  - csharp
  name: Actions
  nameWithType: EventTrigger.Actions
  fullName: System.Windows.EventTrigger.Actions
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "取得事件發生時要套用的動作集合。"
  remarks: "不同於<xref:System.Windows.Trigger>，<xref:System.Windows.EventTrigger>並沒有終止狀態的概念，讓此動作後引發事件的條件不再為 true，將無法復原。</xref:System.Windows.EventTrigger> </xref:System.Windows.Trigger>       加入<xref:System.Windows.TriggerAction>子系<xref:System.Windows.EventTrigger>物件隱含地將它加入至<xref:System.Windows.TriggerActionCollection>如<xref:System.Windows.EventTrigger>物件。</xref:System.Windows.EventTrigger> </xref:System.Windows.TriggerActionCollection> </xref:System.Windows.EventTrigger> </xref:System.Windows.TriggerAction>      > [!NOTE] > 這個屬性只能在設定[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]集合語法所示，透過或存取的集合物件和使用的各種方法，例如 Add。 用來存取集合物件本身屬性是唯讀，集合本身為讀寫。      <a name=&quot;xamlPropertyElementUsage_Actions&quot;></a># # XAML 屬性項目用法```   <object>     <object.Actions>       OneOrMoreTriggerActions     </object.Actions>   </object>   ``` <a name=&quot;xamlValues_Actions&quot;> </a> # # XAML 值*OneOrMoreTriggerActions*一或多個<xref:System.Windows.TriggerAction>物件。</xref:System.Windows.TriggerAction>      "
  example:
  - "This example describes how to use event triggers in a style to animate the <xref:System.Windows.UIElement.MouseEnter> and <xref:System.Windows.UIElement.MouseLeave> events of a <xref:System.Windows.FrameworkElement>. As mentioned above, adding a <xref:System.Windows.TriggerAction> child to an <xref:System.Windows.EventTrigger> object implicitly adds it to the <xref:System.Windows.TriggerActionCollection> for the <xref:System.Windows.EventTrigger> object. Therefore, in this example, `<EventTrigger.Actions>` is implicit.  \n  \n [!code-xml[StyleEventTriggerAnimation#EventTriggerSnippet](~/add/codesnippet/xaml/StyleEventTriggerAnimation/Default.xaml#eventtriggersnippet)]\n [!code-xml[StyleEventTriggerAnimation#EventTriggerSnippet](~/add/codesnippet/xaml/p-system.windows.eventtr_1_1.xaml)]"
  syntax:
    content: public System.Windows.TriggerActionCollection Actions { get; }
    return:
      type: System.Windows.TriggerActionCollection
      description: "預設為空集合。"
  overload: System.Windows.EventTrigger.Actions*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.EventTrigger.AddChild(System.Object)
  id: AddChild(System.Object)
  parent: System.Windows.EventTrigger
  langs:
  - csharp
  name: AddChild(Object)
  nameWithType: EventTrigger.AddChild(Object)
  fullName: System.Windows.EventTrigger.AddChild(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "將指定的物件加入<xref:System.Windows.EventTrigger.Actions*>目前事件觸發程序的集合。</xref:System.Windows.EventTrigger.Actions*>"
  syntax:
    content: protected virtual void AddChild (object value);
    parameters:
    - id: value
      type: System.Object
      description: "A <xref href=&quot;System.Windows.TriggerAction&quot;> </xref>要加入至物件<xref:System.Windows.EventTrigger.Actions*>這個觸發程序的集合。</xref:System.Windows.EventTrigger.Actions*>"
  overload: System.Windows.EventTrigger.AddChild*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.EventTrigger.AddText(System.String)
  id: AddText(System.String)
  parent: System.Windows.EventTrigger
  langs:
  - csharp
  name: AddText(String)
  nameWithType: EventTrigger.AddText(String)
  fullName: System.Windows.EventTrigger.AddText(String)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "此方法不支援，而且會導致例外狀況。"
  syntax:
    content: protected virtual void AddText (string text);
    parameters:
    - id: text
      type: System.String
      description: "未使用此參數。"
  overload: System.Windows.EventTrigger.AddText*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.EventTrigger.RoutedEvent
  id: RoutedEvent
  parent: System.Windows.EventTrigger
  langs:
  - csharp
  name: RoutedEvent
  nameWithType: EventTrigger.RoutedEvent
  fullName: System.Windows.EventTrigger.RoutedEvent
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "取得或設定<xref href=&quot;System.Windows.RoutedEvent&quot;></xref>將啟動這個觸發程序。"
  remarks: "<xref:System.Windows.EventTrigger>指定路由的事件發生時，s 套用一組動作。</xref:System.Windows.EventTrigger> 例如，您可能想要使用<xref:System.Windows.EventTrigger>時要啟動一組動畫滑鼠指標位在特定的 s[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]控制項。</xref:System.Windows.EventTrigger>       如果範本或樣式，其中包含這<xref:System.Windows.EventTrigger>沒有`TargetType`屬性指定，則您需要品質與類別名稱使用的事件名稱`ClassName.EventName`語法。</xref:System.Windows.EventTrigger>       <xref:System.Windows.EventTrigger>物件無法處理已完成<xref:System.Windows.RoutedEventArgs.Handled%2A>.</xref:System.Windows.RoutedEventArgs.Handled%2A>的事件</xref:System.Windows.EventTrigger> 例如，控制<xref:System.Windows.Controls.Button>或<xref:System.Windows.Controls.TextBox>上使用者輸入事件，例如滑鼠點按動作執行特定動作和鍵盤事件。</xref:System.Windows.Controls.TextBox> </xref:System.Windows.Controls.Button> 例如，如果您已設定樣式的按鈕，然後再次嘗試設定<xref:System.Windows.Input.Mouse.MouseDown>事件的 RoutedEvent 做<xref:System.Windows.EventTrigger>、<xref:System.Windows.EventTrigger>永遠不會取得套用，因為第一次取得處理事件的按鈕。</xref:System.Windows.EventTrigger> </xref:System.Windows.EventTrigger> </xref:System.Windows.Input.Mouse.MouseDown> 相反地，您可以使用<xref:System.Windows.Input.Mouse.PreviewMouseDown>不同的事件。</xref:System.Windows.Input.Mouse.PreviewMouseDown>       當您使用資料繫結，如果您使用<xref:System.Windows.Data.Binding.TargetUpdated>事件，您必須設定<xref:System.Windows.Data.Binding.NotifyOnTargetUpdated%2A>值您<xref:System.Windows.Data.Binding>為 true，會引發事件的物件。</xref:System.Windows.Data.Binding> </xref:System.Windows.Data.Binding.NotifyOnTargetUpdated%2A> </xref:System.Windows.Data.Binding.TargetUpdated>"
  example:
  - "This example shows how to use event triggers in a style to animate the <xref:System.Windows.UIElement.MouseEnter> and <xref:System.Windows.UIElement.MouseLeave> events of a <xref:System.Windows.FrameworkElement>. In this example, the <xref:System.Windows.Style> has the <xref:System.Windows.Style.TargetType%2A> set to <xref:System.Windows.Shapes.Rectangle>. Therefore, there is no need to qualify the `MouseEnter` and `MouseLeave` event names with the class name.  \n  \n [!code-xml[StyleEventTriggerAnimation#EventTriggerSnippet](~/add/codesnippet/xaml/StyleEventTriggerAnimation/Default.xaml#eventtriggersnippet)]\n [!code-xml[StyleEventTriggerAnimation#EventTriggerSnippet](~/add/codesnippet/xaml/p-system.windows.eventtr_0_1.xaml)]"
  syntax:
    content: public System.Windows.RoutedEvent RoutedEvent { get; set; }
    return:
      type: System.Windows.RoutedEvent
      description: "預設值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.EventTrigger.RoutedEvent*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "RoutedEvent 屬性不可為 null。"
  platform:
  - net462
- uid: System.Windows.EventTrigger.ShouldSerializeActions
  id: ShouldSerializeActions
  parent: System.Windows.EventTrigger
  langs:
  - csharp
  name: ShouldSerializeActions()
  nameWithType: EventTrigger.ShouldSerializeActions()
  fullName: System.Windows.EventTrigger.ShouldSerializeActions()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "傳回序列化程序是否應序列化<xref:System.Windows.EventTrigger.Actions*>此類別的執行個體上的屬性</xref:System.Windows.EventTrigger.Actions*>的有效值"
  syntax:
    content: public bool ShouldSerializeActions ();
    parameters: []
    return:
      type: System.Boolean
      description: "傳回<xref uid=&quot;langword_csharp_true &quot; name=&quot;true &quot; href=&quot;&quot;></xref>如果<xref:System.Windows.EventTrigger.Actions*>屬性值應該序列化，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Windows.EventTrigger.Actions*>"
  overload: System.Windows.EventTrigger.ShouldSerializeActions*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.EventTrigger.SourceName
  id: SourceName
  parent: System.Windows.EventTrigger
  langs:
  - csharp
  name: SourceName
  nameWithType: EventTrigger.SourceName
  fullName: System.Windows.EventTrigger.SourceName
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "取得或設定以啟動這個觸發程序事件物件的名稱。 這只是由項目觸發程序或範本觸發程序。"
  remarks: "您可以設定此屬性所在的範圍內的任何項目名稱以觸發程序集合 (集合這個<xref:System.Windows.EventTrigger>屬於) 會套用。</xref:System.Windows.EventTrigger> 這通常是具名的項目內包含此<xref:System.Windows.EventTrigger>.</xref:System.Windows.EventTrigger>的範本 如果您要設定<xref:System.Windows.FrameworkElement.Triggers%2A>屬性上的項目，直接管理，則它是具名的項目，該父項目範圍內。</xref:System.Windows.FrameworkElement.Triggers%2A>       您可以使用物件的名稱[X:name 指示詞](~/add/includes/ajax-current-ext-md.md)語法。"
  syntax:
    content: public string SourceName { get; set; }
    return:
      type: System.String
      description: "預設值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。 如果這個屬性值為<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>，則引發事件而受監視的項目是範本化的父代或邏輯樹狀的根。"
  overload: System.Windows.EventTrigger.SourceName*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "之後<xref href=&quot;System.Windows.EventTrigger&quot;></xref>是在使用中，無法修改。"
  platform:
  - net462
- uid: System.Windows.EventTrigger.System#Windows#Markup#IAddChild#AddChild(System.Object)
  id: System#Windows#Markup#IAddChild#AddChild(System.Object)
  isEii: true
  parent: System.Windows.EventTrigger
  langs:
  - csharp
  name: System.Windows.Markup.IAddChild.AddChild(Object)
  nameWithType: EventTrigger.System.Windows.Markup.IAddChild.AddChild(Object)
  fullName: System.Windows.EventTrigger.System.Windows.Markup.IAddChild.AddChild(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "加入子物件。"
  remarks: "這個成員是明確介面成員實作。 它可用時，才<xref:System.Windows.EventTrigger>執行個體轉換成<xref:System.Windows.Markup.IAddChild>介面。</xref:System.Windows.Markup.IAddChild> </xref:System.Windows.EventTrigger>"
  syntax:
    content: void IAddChild.AddChild (object value);
    parameters:
    - id: value
      type: System.Object
      description: "要加入子物件。"
  overload: System.Windows.EventTrigger.System#Windows#Markup#IAddChild#AddChild*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.EventTrigger.System#Windows#Markup#IAddChild#AddText(System.String)
  id: System#Windows#Markup#IAddChild#AddText(System.String)
  isEii: true
  parent: System.Windows.EventTrigger
  langs:
  - csharp
  name: System.Windows.Markup.IAddChild.AddText(String)
  nameWithType: EventTrigger.System.Windows.Markup.IAddChild.AddText(String)
  fullName: System.Windows.EventTrigger.System.Windows.Markup.IAddChild.AddText(String)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "將節點的文字內容加入物件中。"
  remarks: "這個成員是明確介面成員實作。 它可用時，才<xref:System.Windows.EventTrigger>執行個體轉換成<xref:System.Windows.Markup.IAddChild>介面。</xref:System.Windows.Markup.IAddChild> </xref:System.Windows.EventTrigger>"
  syntax:
    content: void IAddChild.AddText (string text);
    parameters:
    - id: text
      type: System.String
      description: "要新增至物件的文字。"
  overload: System.Windows.EventTrigger.System#Windows#Markup#IAddChild#AddText*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.TriggerBase
  isExternal: false
  name: System.Windows.TriggerBase
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Windows.EventTrigger.#ctor
  parent: System.Windows.EventTrigger
  isExternal: false
  name: EventTrigger()
  nameWithType: EventTrigger.EventTrigger()
  fullName: System.Windows.EventTrigger.EventTrigger()
- uid: System.Windows.EventTrigger.#ctor(System.Windows.RoutedEvent)
  parent: System.Windows.EventTrigger
  isExternal: false
  name: EventTrigger(RoutedEvent)
  nameWithType: EventTrigger.EventTrigger(RoutedEvent)
  fullName: System.Windows.EventTrigger.EventTrigger(RoutedEvent)
- uid: System.Windows.RoutedEvent
  parent: System.Windows
  isExternal: false
  name: RoutedEvent
  nameWithType: RoutedEvent
  fullName: System.Windows.RoutedEvent
- uid: System.Windows.EventTrigger.Actions
  parent: System.Windows.EventTrigger
  isExternal: false
  name: Actions
  nameWithType: EventTrigger.Actions
  fullName: System.Windows.EventTrigger.Actions
- uid: System.Windows.TriggerActionCollection
  parent: System.Windows
  isExternal: false
  name: TriggerActionCollection
  nameWithType: TriggerActionCollection
  fullName: System.Windows.TriggerActionCollection
- uid: System.Windows.EventTrigger.AddChild(System.Object)
  parent: System.Windows.EventTrigger
  isExternal: false
  name: AddChild(Object)
  nameWithType: EventTrigger.AddChild(Object)
  fullName: System.Windows.EventTrigger.AddChild(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.EventTrigger.AddText(System.String)
  parent: System.Windows.EventTrigger
  isExternal: false
  name: AddText(String)
  nameWithType: EventTrigger.AddText(String)
  fullName: System.Windows.EventTrigger.AddText(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.EventTrigger.RoutedEvent
  parent: System.Windows.EventTrigger
  isExternal: false
  name: RoutedEvent
  nameWithType: EventTrigger.RoutedEvent
  fullName: System.Windows.EventTrigger.RoutedEvent
- uid: System.Windows.EventTrigger.ShouldSerializeActions
  parent: System.Windows.EventTrigger
  isExternal: false
  name: ShouldSerializeActions()
  nameWithType: EventTrigger.ShouldSerializeActions()
  fullName: System.Windows.EventTrigger.ShouldSerializeActions()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.EventTrigger.SourceName
  parent: System.Windows.EventTrigger
  isExternal: false
  name: SourceName
  nameWithType: EventTrigger.SourceName
  fullName: System.Windows.EventTrigger.SourceName
- uid: System.Windows.EventTrigger.System#Windows#Markup#IAddChild#AddChild(System.Object)
  parent: System.Windows.EventTrigger
  isExternal: false
  name: System.Windows.Markup.IAddChild.AddChild(Object)
  nameWithType: EventTrigger.System.Windows.Markup.IAddChild.AddChild(Object)
  fullName: System.Windows.EventTrigger.System.Windows.Markup.IAddChild.AddChild(Object)
- uid: System.Windows.EventTrigger.System#Windows#Markup#IAddChild#AddText(System.String)
  parent: System.Windows.EventTrigger
  isExternal: false
  name: System.Windows.Markup.IAddChild.AddText(String)
  nameWithType: EventTrigger.System.Windows.Markup.IAddChild.AddText(String)
  fullName: System.Windows.EventTrigger.System.Windows.Markup.IAddChild.AddText(String)
- uid: System.Windows.EventTrigger.#ctor*
  parent: System.Windows.EventTrigger
  isExternal: false
  name: EventTrigger
  nameWithType: EventTrigger.EventTrigger
- uid: System.Windows.EventTrigger.Actions*
  parent: System.Windows.EventTrigger
  isExternal: false
  name: Actions
  nameWithType: EventTrigger.Actions
- uid: System.Windows.EventTrigger.AddChild*
  parent: System.Windows.EventTrigger
  isExternal: false
  name: AddChild
  nameWithType: EventTrigger.AddChild
- uid: System.Windows.EventTrigger.AddText*
  parent: System.Windows.EventTrigger
  isExternal: false
  name: AddText
  nameWithType: EventTrigger.AddText
- uid: System.Windows.EventTrigger.RoutedEvent*
  parent: System.Windows.EventTrigger
  isExternal: false
  name: RoutedEvent
  nameWithType: EventTrigger.RoutedEvent
- uid: System.Windows.EventTrigger.ShouldSerializeActions*
  parent: System.Windows.EventTrigger
  isExternal: false
  name: ShouldSerializeActions
  nameWithType: EventTrigger.ShouldSerializeActions
- uid: System.Windows.EventTrigger.SourceName*
  parent: System.Windows.EventTrigger
  isExternal: false
  name: SourceName
  nameWithType: EventTrigger.SourceName
- uid: System.Windows.EventTrigger.System#Windows#Markup#IAddChild#AddChild*
  parent: System.Windows.EventTrigger
  isExternal: false
  name: System.Windows.Markup.IAddChild.AddChild
  nameWithType: EventTrigger.System.Windows.Markup.IAddChild.AddChild
- uid: System.Windows.EventTrigger.System#Windows#Markup#IAddChild#AddText*
  parent: System.Windows.EventTrigger
  isExternal: false
  name: System.Windows.Markup.IAddChild.AddText
  nameWithType: EventTrigger.System.Windows.Markup.IAddChild.AddText
