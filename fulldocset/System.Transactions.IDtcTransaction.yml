### YamlMime:ManagedReference
items:
- uid: System.Transactions.IDtcTransaction
  id: IDtcTransaction
  children:
  - System.Transactions.IDtcTransaction.Abort(System.IntPtr,System.Int32,System.Int32)
  - System.Transactions.IDtcTransaction.Commit(System.Int32,System.Int32,System.Int32)
  - System.Transactions.IDtcTransaction.GetTransactionInfo(System.IntPtr)
  langs:
  - csharp
  name: IDtcTransaction
  nameWithType: IDtcTransaction
  fullName: System.Transactions.IDtcTransaction
  type: Interface
  summary: "描述 DTC 交易。"
  remarks: "不應該實作這個介面，因為它僅供<xref:System.Transactions.TransactionInterop>類別在內部用來代表 unmanaged 的版本<xref:System.EnterpriseServices.ITransaction>介面<xref:System.EnterpriseServices>命名空間。</xref:System.EnterpriseServices> </xref:System.EnterpriseServices.ITransaction> </xref:System.Transactions.TransactionInterop>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.Guid("0fb15084-af41-11ce-bd2b-204c4f4f5020")]

      [System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]

      public interface IDtcTransaction
  implements: []
  platform:
  - net462
- uid: System.Transactions.IDtcTransaction.Abort(System.IntPtr,System.Int32,System.Int32)
  id: Abort(System.IntPtr,System.Int32,System.Int32)
  parent: System.Transactions.IDtcTransaction
  langs:
  - csharp
  name: Abort(IntPtr,Int32,Int32)
  nameWithType: IDtcTransaction.Abort(IntPtr,Int32,Int32)
  fullName: System.Transactions.IDtcTransaction.Abort(IntPtr,Int32,Int32)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "中止的交易。"
  remarks: "您不應實作這個介面，任何方法，如使用僅供<xref:System.Transactions.TransactionInterop>類別在內部用來代表 unmanaged 的版本<xref:System.EnterpriseServices.ITransaction>介面<xref:System.EnterpriseServices>命名空間。</xref:System.EnterpriseServices> </xref:System.EnterpriseServices.ITransaction> </xref:System.Transactions.TransactionInterop>"
  syntax:
    content: public void Abort (IntPtr reason, int retaining, int async);
    parameters:
    - id: reason
      type: System.IntPtr
      description: "選擇性<xref href=&quot;System.EnterpriseServices.BOID&quot;></xref>指出為何中止交易。 這個參數可以是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>，表示沒有 「 中止 」 提供的理由。"
    - id: retaining
      type: System.Int32
      description: "此值必須是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    - id: async
      type: System.Int32
      description: "當`async`是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>、 非同步中止執行和呼叫端必須使用<xref uid=&quot;langword_csharp_ITransactionOutcomeEvents&quot; name=&quot;ITransactionOutcomeEvents&quot; href=&quot;&quot;></xref>若要了解交易的結果。"
  overload: System.Transactions.IDtcTransaction.Abort*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.IDtcTransaction.Commit(System.Int32,System.Int32,System.Int32)
  id: Commit(System.Int32,System.Int32,System.Int32)
  parent: System.Transactions.IDtcTransaction
  langs:
  - csharp
  name: Commit(Int32,Int32,Int32)
  nameWithType: IDtcTransaction.Commit(Int32,Int32,Int32)
  fullName: System.Transactions.IDtcTransaction.Commit(Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "認可交易。"
  remarks: "中的值`commitType`，請參閱`ITransaction::Commit`OLE DB 程式設計人員參考中。       您不應實作這個介面，任何方法，如使用僅供<xref:System.Transactions.TransactionInterop>類別在內部用來代表 unmanaged 的版本<xref:System.EnterpriseServices.ITransaction>介面<xref:System.EnterpriseServices>命名空間。</xref:System.EnterpriseServices> </xref:System.EnterpriseServices.ITransaction> </xref:System.Transactions.TransactionInterop>"
  syntax:
    content: public void Commit (int retaining, int commitType, int reserved);
    parameters:
    - id: retaining
      type: System.Int32
      description: "此值必須是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    - id: commitType
      type: System.Int32
      description: "取得來自 OLE DB 列舉的值<xref uid=&quot;langword_csharp_XACTTC&quot; name=&quot;XACTTC&quot; href=&quot;&quot;> </xref>。"
    - id: reserved
      type: System.Int32
      description: "此值必須是零。"
  overload: System.Transactions.IDtcTransaction.Commit*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.IDtcTransaction.GetTransactionInfo(System.IntPtr)
  id: GetTransactionInfo(System.IntPtr)
  parent: System.Transactions.IDtcTransaction
  langs:
  - csharp
  name: GetTransactionInfo(IntPtr)
  nameWithType: IDtcTransaction.GetTransactionInfo(IntPtr)
  fullName: System.Transactions.IDtcTransaction.GetTransactionInfo(IntPtr)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "擷取交易的相關資訊。"
  remarks: "您不應實作這個介面，任何方法，如使用僅供<xref:System.Transactions.TransactionInterop>類別在內部用來代表 unmanaged 的版本<xref:System.EnterpriseServices.ITransaction>介面<xref:System.EnterpriseServices>命名空間。</xref:System.EnterpriseServices> </xref:System.EnterpriseServices.ITransaction> </xref:System.Transactions.TransactionInterop>"
  syntax:
    content: public void GetTransactionInfo (IntPtr transactionInformation);
    parameters:
    - id: transactionInformation
      type: System.IntPtr
      description: "呼叫端配置的指標<xref href=&quot;System.EnterpriseServices.XACTTRANSINFO&quot;></xref>結構將會接收交易的相關資訊。 此值不能<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Transactions.IDtcTransaction.GetTransactionInfo*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Transactions.IDtcTransaction.Abort(System.IntPtr,System.Int32,System.Int32)
  parent: System.Transactions.IDtcTransaction
  isExternal: false
  name: Abort(IntPtr,Int32,Int32)
  nameWithType: IDtcTransaction.Abort(IntPtr,Int32,Int32)
  fullName: System.Transactions.IDtcTransaction.Abort(IntPtr,Int32,Int32)
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Transactions.IDtcTransaction.Commit(System.Int32,System.Int32,System.Int32)
  parent: System.Transactions.IDtcTransaction
  isExternal: false
  name: Commit(Int32,Int32,Int32)
  nameWithType: IDtcTransaction.Commit(Int32,Int32,Int32)
  fullName: System.Transactions.IDtcTransaction.Commit(Int32,Int32,Int32)
- uid: System.Transactions.IDtcTransaction.GetTransactionInfo(System.IntPtr)
  parent: System.Transactions.IDtcTransaction
  isExternal: false
  name: GetTransactionInfo(IntPtr)
  nameWithType: IDtcTransaction.GetTransactionInfo(IntPtr)
  fullName: System.Transactions.IDtcTransaction.GetTransactionInfo(IntPtr)
- uid: System.Transactions.IDtcTransaction.Abort*
  parent: System.Transactions.IDtcTransaction
  isExternal: false
  name: Abort
  nameWithType: IDtcTransaction.Abort
- uid: System.Transactions.IDtcTransaction.Commit*
  parent: System.Transactions.IDtcTransaction
  isExternal: false
  name: Commit
  nameWithType: IDtcTransaction.Commit
- uid: System.Transactions.IDtcTransaction.GetTransactionInfo*
  parent: System.Transactions.IDtcTransaction
  isExternal: false
  name: GetTransactionInfo
  nameWithType: IDtcTransaction.GetTransactionInfo
