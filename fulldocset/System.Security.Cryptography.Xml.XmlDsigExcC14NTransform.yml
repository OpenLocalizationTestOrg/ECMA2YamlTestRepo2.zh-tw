### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform
  id: XmlDsigExcC14NTransform
  children:
  - System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.#ctor
  - System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.#ctor(System.Boolean)
  - System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.#ctor(System.String)
  - System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.#ctor(System.Boolean,System.String)
  - System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.GetDigestedOutput(System.Security.Cryptography.HashAlgorithm)
  - System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.GetInnerXml
  - System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.GetOutput
  - System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.GetOutput(System.Type)
  - System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.InclusiveNamespacesPrefixList
  - System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.InputTypes
  - System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.LoadInnerXml(System.Xml.XmlNodeList)
  - System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.LoadInput(System.Object)
  - System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.OutputTypes
  langs:
  - csharp
  name: XmlDsigExcC14NTransform
  nameWithType: XmlDsigExcC14NTransform
  fullName: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform
  type: Class
  summary: "沒有註解表示數位簽章獨佔 C14N XML 規範化轉換 World Wide Web Consortium (W3C) 所定義。"
  remarks: "XmlDsigExcC14NTransform 類別表示的獨占 C14N XML 規範化轉換沒有註解。  這個類別是類似於<xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform>類別，允許以建立使用 XML 文件的標準格式摘要簽署。</xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform>  不過，XmlDsigExcC14NTransform 類別從正式的子文件中排除祖系內容。       使用<xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform>類別，當您需要進行規範化 XML 子文件，使其獨立於其 XML 內容。</xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform> 例如，應用程式如使用的 Web 服務簽署的 XML 中複雜的通訊協定通常需要 XML 規範化以這種方式。  這類應用程式通常會將 XML 信封內各種動態建構的項目可以大幅變更文件，且會造成 XML 簽章驗證失敗。  XmlDsigExcC14NTransform 類別來排除這類的上階內容從標準的子文件，以解決這個問題。       一般而言，您不會建立規範化轉換類別的新執行個體。 若要指定規範化轉換，將說明要轉換的統一資源識別元 (URI)<xref:System.Security.Cryptography.Xml.SignedInfo.CanonicalizationMethod%2A>屬性，這是從存取<xref:System.Security.Cryptography.Xml.SignedXml.SignedInfo%2A>屬性。</xref:System.Security.Cryptography.Xml.SignedXml.SignedInfo%2A> </xref:System.Security.Cryptography.Xml.SignedInfo.CanonicalizationMethod%2A> 若要取得規範化轉換的參考，請使用<xref:System.Security.Cryptography.Xml.SignedInfo.CanonicalizationMethodObject%2A>屬性，這是從存取<xref:System.Security.Cryptography.Xml.SignedXml.SignedInfo%2A>屬性。</xref:System.Security.Cryptography.Xml.SignedXml.SignedInfo%2A> </xref:System.Security.Cryptography.Xml.SignedInfo.CanonicalizationMethodObject%2A>       您建立所需的規範化轉換類別的新執行個體時，才手動雜湊的 XML 文件，或使用您自己的標準化演算法。       描述 URI<xref:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform>類別由定義<xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NWithCommentsTransformUrl>欄位。</xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NWithCommentsTransformUrl> </xref:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform>       描述 XmlDsigExcC14NTransform 類別的 URI 由定義<xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NTransformUrl>欄位。</xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NTransformUrl>       如需獨佔 C14N 轉換的詳細資訊，請參閱 XMLDSIG 規格，可從在 www.w3.org/TR/xmldsig-core/ World Wide Web Consortium (W3C)。 標準化演算法被定義在 W3C 標準 XML 規格中，將會位於 www.w3.org/2001/10/xml-exc-c14n。"
  example:
  - "The following code example shows how to sign an XML document with the XmlDsigExcC14NTransform class using an envelope signature.  \n  \n [!code-cs[Cryptography.XML.XmlDsigExcC14NTransform#1](~/add/codesnippet/csharp/t-system.security.crypto_71_1.cs)]\n [!code-cpp[Cryptography.XML.XmlDsigExcC14NTransform#1](~/add/codesnippet/cpp/t-system.security.crypto_71_1.cpp)]\n [!code-vb[Cryptography.XML.XmlDsigExcC14NTransform#1](~/add/codesnippet/visualbasic/t-system.security.crypto_71_1.vb)]"
  syntax:
    content: 'public class XmlDsigExcC14NTransform : System.Security.Cryptography.Xml.Transform'
  inheritance:
  - System.Object
  - System.Security.Cryptography.Xml.Transform
  implements: []
  inheritedMembers:
  - System.Security.Cryptography.Xml.Transform.Algorithm
  - System.Security.Cryptography.Xml.Transform.Context
  - System.Security.Cryptography.Xml.Transform.GetXml
  - System.Security.Cryptography.Xml.Transform.PropagatedNamespaces
  - System.Security.Cryptography.Xml.Transform.Resolver
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform
  langs:
  - csharp
  name: XmlDsigExcC14NTransform()
  nameWithType: XmlDsigExcC14NTransform.XmlDsigExcC14NTransform()
  fullName: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.XmlDsigExcC14NTransform()
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "初始化的新執行個體<xref href=&quot;System.Security.Cryptography.Xml.XmlDsigExcC14NTransform&quot;></xref>類別。"
  syntax:
    content: public XmlDsigExcC14NTransform ();
    parameters: []
  overload: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform
  langs:
  - csharp
  name: XmlDsigExcC14NTransform(Boolean)
  nameWithType: XmlDsigExcC14NTransform.XmlDsigExcC14NTransform(Boolean)
  fullName: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.XmlDsigExcC14NTransform(Boolean)
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "初始化的新執行個體<xref href=&quot;System.Security.Cryptography.Xml.XmlDsigExcC14NTransform&quot;></xref>指定一個值，決定是否要包含註解的類別。"
  syntax:
    content: public XmlDsigExcC14NTransform (bool includeComments);
    parameters:
    - id: includeComments
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>表示包括註解。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform
  langs:
  - csharp
  name: XmlDsigExcC14NTransform(String)
  nameWithType: XmlDsigExcC14NTransform.XmlDsigExcC14NTransform(String)
  fullName: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.XmlDsigExcC14NTransform(String)
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "初始化的新執行個體<xref href=&quot;System.Security.Cryptography.Xml.XmlDsigExcC14NTransform&quot;></xref>類別指定命名空間前置詞使用的標準標準化演算法進行規範化的清單。"
  remarks: "`inclusiveNamespacesPrefixList`參數會包含以空白字元分隔的可規範化使用標準的標準化演算法，而不是獨佔標準化演算法的命名空間前置詞清單。  若要指定預設命名空間，並沒有前置詞，會傳遞指定之前置詞&quot;#default&quot;。"
  syntax:
    content: public XmlDsigExcC14NTransform (string inclusiveNamespacesPrefixList);
    parameters:
    - id: inclusiveNamespacesPrefixList
      type: System.String
      description: "使用標準的標準化演算法進行規範化命名空間前置詞。"
  overload: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.#ctor(System.Boolean,System.String)
  id: '#ctor(System.Boolean,System.String)'
  parent: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform
  langs:
  - csharp
  name: XmlDsigExcC14NTransform(Boolean,String)
  nameWithType: XmlDsigExcC14NTransform.XmlDsigExcC14NTransform(Boolean,String)
  fullName: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.XmlDsigExcC14NTransform(Boolean,String)
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "初始化的新執行個體<xref href=&quot;System.Security.Cryptography.Xml.XmlDsigExcC14NTransform&quot;></xref>類別指定是否要包含註解，以及指定的命名空間前置詞清單。"
  remarks: "`inclusiveNamespacesPrefixList`參數會包含以空白字元分隔的可規範化使用標準的標準化演算法，而不是獨佔標準化演算法的命名空間前置詞清單。  若要指定預設命名空間，並沒有前置詞，會傳遞指定之前置詞&quot;#default&quot;。"
  syntax:
    content: public XmlDsigExcC14NTransform (bool includeComments, string inclusiveNamespacesPrefixList);
    parameters:
    - id: includeComments
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>表示包括註解。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    - id: inclusiveNamespacesPrefixList
      type: System.String
      description: "使用標準的標準化演算法進行規範化命名空間前置詞。"
  overload: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.GetDigestedOutput(System.Security.Cryptography.HashAlgorithm)
  id: GetDigestedOutput(System.Security.Cryptography.HashAlgorithm)
  parent: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform
  langs:
  - csharp
  name: GetDigestedOutput(HashAlgorithm)
  nameWithType: XmlDsigExcC14NTransform.GetDigestedOutput(HashAlgorithm)
  fullName: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.GetDigestedOutput(HashAlgorithm)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "傳回與相關聯的摘要<xref href=&quot;System.Security.Cryptography.Xml.XmlDsigExcC14NTransform&quot;></xref>物件。"
  syntax:
    content: public override byte[] GetDigestedOutput (System.Security.Cryptography.HashAlgorithm hash);
    parameters:
    - id: hash
      type: System.Security.Cryptography.HashAlgorithm
      description: "<xref href=&quot;System.Security.Cryptography.HashAlgorithm&quot;> </xref>用來建立摘要物件。"
    return:
      type: System.Byte[]
      description: "與相關聯的摘要<xref href=&quot;System.Security.Cryptography.Xml.XmlDsigExcC14NTransform&quot;></xref>物件。"
  overload: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.GetDigestedOutput*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.GetInnerXml
  id: GetInnerXml
  parent: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform
  langs:
  - csharp
  name: GetInnerXml()
  nameWithType: XmlDsigExcC14NTransform.GetInnerXml()
  fullName: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.GetInnerXml()
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "傳回參數的 XML 表示法<xref href=&quot;System.Security.Cryptography.Xml.XmlDsigExcC14NTransform&quot;></xref>都適合用來為 XMLDSIG 的子元素所包含的物件<xref uid=&quot;langword_csharp_&lt;Transform&gt;&quot; name=&quot;&lt;Transform&gt;&quot; href=&quot;&quot;></xref>項目。"
  syntax:
    content: protected override System.Xml.XmlNodeList GetInnerXml ();
    parameters: []
    return:
      type: System.Xml.XmlNodeList
      description: "代表特定轉換的內容說明目前所需的 XML 節點的清單<xref href=&quot;System.Security.Cryptography.Xml.XmlDsigExcC14NTransform&quot;></xref>中 XMLDSIG 物件<xref uid=&quot;langword_csharp_&lt;Transform&gt;&quot; name=&quot;&lt;Transform&gt;&quot; href=&quot;&quot;></xref>項目。"
  overload: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.GetInnerXml*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.GetOutput
  id: GetOutput
  parent: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform
  langs:
  - csharp
  name: GetOutput()
  nameWithType: XmlDsigExcC14NTransform.GetOutput()
  fullName: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.GetOutput()
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "傳回目前的輸出<xref href=&quot;System.Security.Cryptography.Xml.XmlDsigExcC14NTransform&quot;></xref>物件"
  syntax:
    content: public override object GetOutput ();
    parameters: []
    return:
      type: System.Object
      description: "目前的輸出<xref href=&quot;System.Security.Cryptography.Xml.XmlDsigExcC14NTransform&quot;></xref>物件。"
  overload: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.GetOutput*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.GetOutput(System.Type)
  id: GetOutput(System.Type)
  parent: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform
  langs:
  - csharp
  name: GetOutput(Type)
  nameWithType: XmlDsigExcC14NTransform.GetOutput(Type)
  fullName: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.GetOutput(Type)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "傳回目前的輸出<xref href=&quot;System.Security.Cryptography.Xml.XmlDsigExcC14NTransform&quot;></xref>物件做為指定類型的物件。"
  remarks: "執行先前的呼叫所設定的值之後，GetOutput 方法會傳回目前的轉換輸出<xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.LoadInput%2A>方法。</xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.LoadInput%2A>       傳回物件的類型必須是其中一個型別物件中<xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.OutputTypes%2A>屬性。</xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.OutputTypes%2A>"
  syntax:
    content: public override object GetOutput (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "要傳回之輸出的類型。 這必須是其中一個類型中<xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.OutputTypes*>屬性。</xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.OutputTypes*>"
    return:
      type: System.Object
      description: "目前的輸出<xref href=&quot;System.Security.Cryptography.Xml.XmlDsigExcC14NTransform&quot;></xref>物件做為指定類型的物件。"
  overload: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.GetOutput*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> type </code>參數不是<xref:System.IO.Stream>物件。</xref:System.IO.Stream>       -或- <code> type </code>參數不是衍生自<xref:System.IO.Stream>物件。</xref:System.IO.Stream>"
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.InclusiveNamespacesPrefixList
  id: InclusiveNamespacesPrefixList
  parent: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform
  langs:
  - csharp
  name: InclusiveNamespacesPrefixList
  nameWithType: XmlDsigExcC14NTransform.InclusiveNamespacesPrefixList
  fullName: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.InclusiveNamespacesPrefixList
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "取得或設定包含命名空間前置詞使用的標準標準化演算法進行規範化字串。"
  remarks: "InclusiveNamespacesPrefixList 屬性包含以空白字元分隔的可規範化使用標準的標準化演算法，而不是獨佔標準化演算法的命名空間前置詞清單。  若要指定預設命名空間，並沒有前置詞，會傳遞指定之前置詞&quot;#default&quot;。"
  example:
  - "The following code example shows how to sign an XML document with the <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform> class using an envelope signature.  \n  \n [!code-cs[Cryptography.XML.XmlDsigExcC14NTransform#1](~/add/codesnippet/csharp/42880074-e510-468c-ab0e-_1.cs)]\n [!code-cpp[Cryptography.XML.XmlDsigExcC14NTransform#1](~/add/codesnippet/cpp/42880074-e510-468c-ab0e-_1.cpp)]\n [!code-vb[Cryptography.XML.XmlDsigExcC14NTransform#1](~/add/codesnippet/visualbasic/42880074-e510-468c-ab0e-_1.vb)]"
  syntax:
    content: public string InclusiveNamespacesPrefixList { get; set; }
    return:
      type: System.String
      description: "包含命名空間前置詞使用的標準標準化演算法進行規範化字串。"
  overload: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.InclusiveNamespacesPrefixList*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.InputTypes
  id: InputTypes
  parent: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform
  langs:
  - csharp
  name: InputTypes
  nameWithType: XmlDsigExcC14NTransform.InputTypes
  fullName: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.InputTypes
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "取得屬於有效的輸入之型別的陣列<xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.LoadInput*>方法目前<xref href=&quot;System.Security.Cryptography.Xml.XmlDsigExcC14NTransform&quot;></xref>物件。</xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.LoadInput*>"
  remarks: "InputTypes 屬性所傳回的陣列必須包含至少一個項目，因為每個<xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform>物件必須接受做為有效的輸入至少一個型別。</xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform>       A<xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform>物件通常會接受一或多個下列類型做為輸入︰ <xref:System.IO.Stream>， <xref:System.Xml.XmlDocument>，或<xref:System.Xml.XmlNodeList>.</xref:System.Xml.XmlNodeList> </xref:System.Xml.XmlDocument> </xref:System.IO.Stream> </xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform>"
  syntax:
    content: public override Type[] InputTypes { get; }
    return:
      type: System.Type[]
      description: "在目前有效的輸入類型的陣列<xref href=&quot;System.Security.Cryptography.Xml.XmlDsigExcC14NTransform&quot;></xref>物件; 您可以將只有其中一個這些類型的物件傳遞<xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.LoadInput*>方法目前<xref href=&quot;System.Security.Cryptography.Xml.XmlDsigExcC14NTransform&quot;></xref>物件。</xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.LoadInput*>"
  overload: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.InputTypes*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.LoadInnerXml(System.Xml.XmlNodeList)
  id: LoadInnerXml(System.Xml.XmlNodeList)
  parent: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform
  langs:
  - csharp
  name: LoadInnerXml(XmlNodeList)
  nameWithType: XmlDsigExcC14NTransform.LoadInnerXml(XmlNodeList)
  fullName: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.LoadInnerXml(XmlNodeList)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "剖析指定<xref href=&quot;System.Xml.XmlNodeList&quot;></xref>物件做為轉換特定內容的<xref uid=&quot;langword_csharp_&lt;Transform&gt;&quot; name=&quot;&lt;Transform&gt;&quot; href=&quot;&quot;></xref>項目，並設定目前的內部狀態<xref href=&quot;System.Security.Cryptography.Xml.XmlDsigExcC14NTransform&quot;></xref>物件以符合<xref uid=&quot;langword_csharp_&lt;Transform&gt;&quot; name=&quot;&lt;Transform&gt;&quot; href=&quot;&quot;></xref>項目。"
  remarks: "這個方法用來處理元素的子元素`<Transform>`項目。"
  syntax:
    content: public override void LoadInnerXml (System.Xml.XmlNodeList nodeList);
    parameters:
    - id: nodeList
      type: System.Xml.XmlNodeList
      description: "<xref href=&quot;System.Xml.XmlNodeList&quot;> </xref>物件，指定目前的轉換專屬內容<xref href=&quot;System.Security.Cryptography.Xml.XmlDsigExcC14NTransform&quot;></xref>物件。"
  overload: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.LoadInnerXml*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.LoadInput(System.Object)
  id: LoadInput(System.Object)
  parent: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform
  langs:
  - csharp
  name: LoadInput(Object)
  nameWithType: XmlDsigExcC14NTransform.LoadInput(Object)
  fullName: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.LoadInput(Object)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "當在衍生類別中覆寫時，自動將目前載入指定的輸入<xref href=&quot;System.Security.Cryptography.Xml.XmlDsigExcC14NTransform&quot;></xref>物件。"
  remarks: "輸入物件的類型必須是其中一個類型中<xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.InputTypes%2A>屬性。</xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.InputTypes%2A>"
  syntax:
    content: public override void LoadInput (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "要載入到目前之輸入<xref href=&quot;System.Security.Cryptography.Xml.XmlDsigExcC14NTransform&quot;></xref>物件。"
  overload: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.LoadInput*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> obj </code>參數不是<xref:System.IO.Stream>物件。</xref:System.IO.Stream>       -或- <code> obj </code>參數不是<xref href=&quot;System.Xml.XmlDocument&quot;></xref>物件。       -或- <code> obj </code>參數不是<xref href=&quot;System.Xml.XmlNodeList&quot;></xref>物件。"
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.OutputTypes
  id: OutputTypes
  parent: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform
  langs:
  - csharp
  name: OutputTypes
  nameWithType: XmlDsigExcC14NTransform.OutputTypes
  fullName: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.OutputTypes
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "取得屬於從可能的輸出之型別的陣列<xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.GetOutput*>方法目前<xref href=&quot;System.Security.Cryptography.Xml.XmlDsigExcC14NTransform&quot;></xref>物件。</xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.GetOutput*>"
  remarks: "OutputTypes 屬性所傳回的陣列必須包含至少一個項目，因為每個轉換必須產生做為輸出的至少一個型別。"
  syntax:
    content: public override Type[] OutputTypes { get; }
    return:
      type: System.Type[]
      description: "在目前有效的輸出型別的陣列<xref href=&quot;System.Security.Cryptography.Xml.XmlDsigExcC14NTransform&quot;></xref>物件;<xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.GetOutput*>方法在目前的<xref href=&quot;System.Security.Cryptography.Xml.XmlDsigExcC14NTransform&quot;></xref>物件傳回的唯一物件的其中一個類型。</xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.GetOutput*>"
  overload: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.OutputTypes*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.Cryptography.Xml.Transform
  isExternal: false
  name: System.Security.Cryptography.Xml.Transform
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.#ctor
  parent: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform
  isExternal: false
  name: XmlDsigExcC14NTransform()
  nameWithType: XmlDsigExcC14NTransform.XmlDsigExcC14NTransform()
  fullName: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.XmlDsigExcC14NTransform()
- uid: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.#ctor(System.Boolean)
  parent: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform
  isExternal: false
  name: XmlDsigExcC14NTransform(Boolean)
  nameWithType: XmlDsigExcC14NTransform.XmlDsigExcC14NTransform(Boolean)
  fullName: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.XmlDsigExcC14NTransform(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.#ctor(System.String)
  parent: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform
  isExternal: false
  name: XmlDsigExcC14NTransform(String)
  nameWithType: XmlDsigExcC14NTransform.XmlDsigExcC14NTransform(String)
  fullName: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.XmlDsigExcC14NTransform(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.#ctor(System.Boolean,System.String)
  parent: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform
  isExternal: false
  name: XmlDsigExcC14NTransform(Boolean,String)
  nameWithType: XmlDsigExcC14NTransform.XmlDsigExcC14NTransform(Boolean,String)
  fullName: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.XmlDsigExcC14NTransform(Boolean,String)
- uid: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.GetDigestedOutput(System.Security.Cryptography.HashAlgorithm)
  parent: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform
  isExternal: false
  name: GetDigestedOutput(HashAlgorithm)
  nameWithType: XmlDsigExcC14NTransform.GetDigestedOutput(HashAlgorithm)
  fullName: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.GetDigestedOutput(HashAlgorithm)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.HashAlgorithm
  parent: System.Security.Cryptography
  isExternal: false
  name: HashAlgorithm
  nameWithType: HashAlgorithm
  fullName: System.Security.Cryptography.HashAlgorithm
- uid: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.GetInnerXml
  parent: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform
  isExternal: false
  name: GetInnerXml()
  nameWithType: XmlDsigExcC14NTransform.GetInnerXml()
  fullName: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.GetInnerXml()
- uid: System.Xml.XmlNodeList
  parent: System.Xml
  isExternal: false
  name: XmlNodeList
  nameWithType: XmlNodeList
  fullName: System.Xml.XmlNodeList
- uid: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.GetOutput
  parent: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform
  isExternal: false
  name: GetOutput()
  nameWithType: XmlDsigExcC14NTransform.GetOutput()
  fullName: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.GetOutput()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.GetOutput(System.Type)
  parent: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform
  isExternal: false
  name: GetOutput(Type)
  nameWithType: XmlDsigExcC14NTransform.GetOutput(Type)
  fullName: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.GetOutput(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.InclusiveNamespacesPrefixList
  parent: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform
  isExternal: false
  name: InclusiveNamespacesPrefixList
  nameWithType: XmlDsigExcC14NTransform.InclusiveNamespacesPrefixList
  fullName: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.InclusiveNamespacesPrefixList
- uid: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.InputTypes
  parent: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform
  isExternal: false
  name: InputTypes
  nameWithType: XmlDsigExcC14NTransform.InputTypes
  fullName: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.InputTypes
- uid: System.Type[]
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type[]
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.LoadInnerXml(System.Xml.XmlNodeList)
  parent: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform
  isExternal: false
  name: LoadInnerXml(XmlNodeList)
  nameWithType: XmlDsigExcC14NTransform.LoadInnerXml(XmlNodeList)
  fullName: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.LoadInnerXml(XmlNodeList)
- uid: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.LoadInput(System.Object)
  parent: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform
  isExternal: false
  name: LoadInput(Object)
  nameWithType: XmlDsigExcC14NTransform.LoadInput(Object)
  fullName: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.LoadInput(Object)
- uid: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.OutputTypes
  parent: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform
  isExternal: false
  name: OutputTypes
  nameWithType: XmlDsigExcC14NTransform.OutputTypes
  fullName: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.OutputTypes
- uid: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.#ctor*
  parent: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform
  isExternal: false
  name: XmlDsigExcC14NTransform
  nameWithType: XmlDsigExcC14NTransform.XmlDsigExcC14NTransform
- uid: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.GetDigestedOutput*
  parent: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform
  isExternal: false
  name: GetDigestedOutput
  nameWithType: XmlDsigExcC14NTransform.GetDigestedOutput
- uid: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.GetInnerXml*
  parent: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform
  isExternal: false
  name: GetInnerXml
  nameWithType: XmlDsigExcC14NTransform.GetInnerXml
- uid: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.GetOutput*
  parent: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform
  isExternal: false
  name: GetOutput
  nameWithType: XmlDsigExcC14NTransform.GetOutput
- uid: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.InclusiveNamespacesPrefixList*
  parent: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform
  isExternal: false
  name: InclusiveNamespacesPrefixList
  nameWithType: XmlDsigExcC14NTransform.InclusiveNamespacesPrefixList
- uid: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.InputTypes*
  parent: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform
  isExternal: false
  name: InputTypes
  nameWithType: XmlDsigExcC14NTransform.InputTypes
- uid: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.LoadInnerXml*
  parent: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform
  isExternal: false
  name: LoadInnerXml
  nameWithType: XmlDsigExcC14NTransform.LoadInnerXml
- uid: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.LoadInput*
  parent: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform
  isExternal: false
  name: LoadInput
  nameWithType: XmlDsigExcC14NTransform.LoadInput
- uid: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.OutputTypes*
  parent: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform
  isExternal: false
  name: OutputTypes
  nameWithType: XmlDsigExcC14NTransform.OutputTypes
