### YamlMime:ManagedReference
items:
- uid: System.Security.Permissions.EnvironmentPermissionAccess
  id: EnvironmentPermissionAccess
  children:
  - System.Security.Permissions.EnvironmentPermissionAccess.AllAccess
  - System.Security.Permissions.EnvironmentPermissionAccess.NoAccess
  - System.Security.Permissions.EnvironmentPermissionAccess.Read
  - System.Security.Permissions.EnvironmentPermissionAccess.Write
  langs:
  - csharp
  name: EnvironmentPermissionAccess
  nameWithType: EnvironmentPermissionAccess
  fullName: System.Security.Permissions.EnvironmentPermissionAccess
  type: Enum
  summary: "指定環境變數的存取權。"
  remarks: "這項列舉供<xref:System.Security.Permissions.EnvironmentPermission>.</xref:System.Security.Permissions.EnvironmentPermission>      > [!NOTE] > 雖然 NoAccess 和 AllAccess 會出現在 EnvironmentPermissionAccess，不是有效的參數用<xref:System.Security.Permissions.EnvironmentPermission.GetPathList%2A>它們分別描述沒有環境變數存取類型或所有環境變數存取類型，因為和<xref:System.Security.Permissions.EnvironmentPermission.GetPathList%2A>必須是單一的環境變數存取類型。</xref:System.Security.Permissions.EnvironmentPermission.GetPathList%2A> </xref:System.Security.Permissions.EnvironmentPermission.GetPathList%2A>"
  syntax:
    content: >-
      [System.Flags]

      [System.Runtime.InteropServices.ComVisible(true)]

      public enum EnvironmentPermissionAccess
  inheritance:
  - System.Enum
  platform:
  - net462
- uid: System.Security.Permissions.EnvironmentPermissionAccess.AllAccess
  id: AllAccess
  parent: System.Security.Permissions.EnvironmentPermissionAccess
  langs:
  - csharp
  name: AllAccess
  nameWithType: EnvironmentPermissionAccess.AllAccess
  fullName: System.Security.Permissions.EnvironmentPermissionAccess.AllAccess
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "讀取和寫入權限環境變數。 AllAccess 代表多個 EnvironmentPermissionAccess 值，並造成<xref:System.ArgumentException>時做為<code> flag </code>參數<xref:System.Security.Permissions.EnvironmentPermission.GetPathList*>方法，必須是單一值。</xref:System.Security.Permissions.EnvironmentPermission.GetPathList*> </xref:System.ArgumentException>"
  syntax:
    content: AllAccess
    return:
      type: System.Security.Permissions.EnvironmentPermissionAccess
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.EnvironmentPermissionAccess.NoAccess
  id: NoAccess
  parent: System.Security.Permissions.EnvironmentPermissionAccess
  langs:
  - csharp
  name: NoAccess
  nameWithType: EnvironmentPermissionAccess.NoAccess
  fullName: System.Security.Permissions.EnvironmentPermissionAccess.NoAccess
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "沒有存取環境變數。 NoAccess 代表任何有效的 EnvironmentPermissionAccess 值，並造成<xref:System.ArgumentException>當做參數使用時<xref:System.Security.Permissions.EnvironmentPermission.GetPathList*>，其需要單一值。</xref:System.Security.Permissions.EnvironmentPermission.GetPathList*> </xref:System.ArgumentException>"
  syntax:
    content: NoAccess
    return:
      type: System.Security.Permissions.EnvironmentPermissionAccess
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.EnvironmentPermissionAccess.Read
  id: Read
  parent: System.Security.Permissions.EnvironmentPermissionAccess
  langs:
  - csharp
  name: Read
  nameWithType: EnvironmentPermissionAccess.Read
  fullName: System.Security.Permissions.EnvironmentPermissionAccess.Read
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "指定只對環境變數的讀取權限。 變更、 刪除和建立環境變數未隨附於此存取層級。"
  syntax:
    content: Read
    return:
      type: System.Security.Permissions.EnvironmentPermissionAccess
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.EnvironmentPermissionAccess.Write
  id: Write
  parent: System.Security.Permissions.EnvironmentPermissionAccess
  langs:
  - csharp
  name: Write
  nameWithType: EnvironmentPermissionAccess.Write
  fullName: System.Security.Permissions.EnvironmentPermissionAccess.Write
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "指定只對環境變數的寫入權限。 寫入權限包括建立和刪除環境變數，以及變更現有的值。 不包含在此存取層級讀取環境變數。"
  syntax:
    content: Write
    return:
      type: System.Security.Permissions.EnvironmentPermissionAccess
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.Security.Permissions.EnvironmentPermissionAccess.AllAccess
  parent: System.Security.Permissions.EnvironmentPermissionAccess
  isExternal: false
  name: AllAccess
  nameWithType: EnvironmentPermissionAccess.AllAccess
  fullName: System.Security.Permissions.EnvironmentPermissionAccess.AllAccess
- uid: System.Security.Permissions.EnvironmentPermissionAccess
  parent: System.Security.Permissions
  isExternal: false
  name: EnvironmentPermissionAccess
  nameWithType: EnvironmentPermissionAccess
  fullName: System.Security.Permissions.EnvironmentPermissionAccess
- uid: System.Security.Permissions.EnvironmentPermissionAccess.NoAccess
  parent: System.Security.Permissions.EnvironmentPermissionAccess
  isExternal: false
  name: NoAccess
  nameWithType: EnvironmentPermissionAccess.NoAccess
  fullName: System.Security.Permissions.EnvironmentPermissionAccess.NoAccess
- uid: System.Security.Permissions.EnvironmentPermissionAccess.Read
  parent: System.Security.Permissions.EnvironmentPermissionAccess
  isExternal: false
  name: Read
  nameWithType: EnvironmentPermissionAccess.Read
  fullName: System.Security.Permissions.EnvironmentPermissionAccess.Read
- uid: System.Security.Permissions.EnvironmentPermissionAccess.Write
  parent: System.Security.Permissions.EnvironmentPermissionAccess
  isExternal: false
  name: Write
  nameWithType: EnvironmentPermissionAccess.Write
  fullName: System.Security.Permissions.EnvironmentPermissionAccess.Write
