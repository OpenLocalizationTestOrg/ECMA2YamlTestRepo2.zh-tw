### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.EditorAttribute
  id: EditorAttribute
  children:
  - System.ComponentModel.EditorAttribute.#ctor
  - System.ComponentModel.EditorAttribute.#ctor(System.String,System.String)
  - System.ComponentModel.EditorAttribute.#ctor(System.String,System.Type)
  - System.ComponentModel.EditorAttribute.#ctor(System.Type,System.Type)
  - System.ComponentModel.EditorAttribute.EditorBaseTypeName
  - System.ComponentModel.EditorAttribute.EditorTypeName
  - System.ComponentModel.EditorAttribute.Equals(System.Object)
  - System.ComponentModel.EditorAttribute.GetHashCode
  - System.ComponentModel.EditorAttribute.TypeId
  langs:
  - csharp
  name: EditorAttribute
  nameWithType: EditorAttribute
  fullName: System.ComponentModel.EditorAttribute
  type: Class
  summary: "指定要用於變更屬性編輯器。 這個類別無法被繼承。"
  remarks: "當編輯此屬性時，視覺化設計工具應該建立指定透過對話方塊或視窗下拉式編輯器的新執行個體。       使用<xref:System.ComponentModel.EditorAttribute.EditorBaseTypeName%2A>找不到此編輯器的基底類型的屬性。</xref:System.ComponentModel.EditorAttribute.EditorBaseTypeName%2A> 唯一可用的基底類型是<xref:System.Drawing.Design.UITypeEditor>.</xref:System.Drawing.Design.UITypeEditor>       使用<xref:System.ComponentModel.EditorAttribute.EditorTypeName%2A>屬性，即可取得此屬性相關聯的編輯器類型的名稱。</xref:System.ComponentModel.EditorAttribute.EditorTypeName%2A>       如需屬性用法的一般資訊。 請參閱[屬性](~/add/includes/ajax-current-ext-md.md)。 如需有關設計階段屬性的詳細資訊，請參閱[屬性和設計階段支援](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following code example creates the `MyImage` class. The class is marked with an EditorAttribute that specifies the <xref:System.Drawing.Design.ImageEditor> as its editor.  \n  \n [!code-cs[Classic EditorAttribute Example#1](~/add/codesnippet/csharp/t-system.componentmodel._81_1.cs)]\n [!code-cpp[Classic EditorAttribute Example#1](~/add/codesnippet/cpp/t-system.componentmodel._81_1.cpp)]\n [!code-vb[Classic EditorAttribute Example#1](~/add/codesnippet/visualbasic/t-system.componentmodel._81_1.vb)]  \n  \n The following code example creates an instance of the `MyImage` class, gets the attributes for the class, and then prints the name of the editor used by `myNewImage`.  \n  \n [!code-cs[Classic EditorAttribute Example#2](~/add/codesnippet/csharp/t-system.componentmodel._81_2.cs)]\n [!code-cpp[Classic EditorAttribute Example#2](~/add/codesnippet/cpp/t-system.componentmodel._81_2.cpp)]\n [!code-vb[Classic EditorAttribute Example#2](~/add/codesnippet/visualbasic/t-system.componentmodel._81_2.vb)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.All, AllowMultiple=true, Inherited=true)]

      public sealed class EditorAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.EditorAttribute.#ctor
  id: '#ctor'
  parent: System.ComponentModel.EditorAttribute
  langs:
  - csharp
  name: EditorAttribute()
  nameWithType: EditorAttribute.EditorAttribute()
  fullName: System.ComponentModel.EditorAttribute.EditorAttribute()
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "初始化的新執行個體<xref href=&quot;System.ComponentModel.EditorAttribute&quot;></xref>預設編輯器中，沒有編輯器類別。"
  syntax:
    content: public EditorAttribute ();
    parameters: []
  overload: System.ComponentModel.EditorAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.EditorAttribute.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.ComponentModel.EditorAttribute
  langs:
  - csharp
  name: EditorAttribute(String,String)
  nameWithType: EditorAttribute.EditorAttribute(String,String)
  fullName: System.ComponentModel.EditorAttribute.EditorAttribute(String,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "初始化的新執行個體<xref href=&quot;System.ComponentModel.EditorAttribute&quot;></xref>類別型別名稱和編輯器的基底型別名稱。"
  remarks: "`typeName`參數必須在<xref:System.Type.AssemblyQualifiedName%2A?displayProperty=fullName>格式。</xref:System.Type.AssemblyQualifiedName%2A?displayProperty=fullName>       <xref:System.Type>由`typeName`參數必須衍生自或實作基底類別</xref:System.Type>       <xref:System.Type>由`baseTypeName`參數用做為索引鍵來尋找特定的編輯器，因為資料類型可以有與其相關聯的多個編輯器</xref:System.Type> 這可以是任何類別，但通常是<xref:System.Drawing.Design.UITypeEditor>或<xref:System.ComponentModel.ComponentEditor>.</xref:System.ComponentModel.ComponentEditor> </xref:System.Drawing.Design.UITypeEditor>"
  syntax:
    content: public EditorAttribute (string typeName, string baseTypeName);
    parameters:
    - id: typeName
      type: System.String
      description: "編輯器的完整限定的類型名稱。"
    - id: baseTypeName
      type: System.String
      description: "基底類別或介面，以作為編輯器查閱索引鍵的完整限定的類型名稱。 這個類別必須是或衍生自<xref href=&quot;System.Drawing.Design.UITypeEditor&quot;> </xref>。"
  overload: System.ComponentModel.EditorAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.EditorAttribute.#ctor(System.String,System.Type)
  id: '#ctor(System.String,System.Type)'
  parent: System.ComponentModel.EditorAttribute
  langs:
  - csharp
  name: EditorAttribute(String,Type)
  nameWithType: EditorAttribute.EditorAttribute(String,Type)
  fullName: System.ComponentModel.EditorAttribute.EditorAttribute(String,Type)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "初始化的新執行個體<xref href=&quot;System.ComponentModel.EditorAttribute&quot;></xref>類別的型別名稱與基底型別。"
  remarks: "`typeName`參數必須在<xref:System.Type.AssemblyQualifiedName%2A?displayProperty=fullName>格式。</xref:System.Type.AssemblyQualifiedName%2A?displayProperty=fullName>       <xref:System.Type>由`typeName`必須衍生自或實作基底類別</xref:System.Type>       `baseType`參數用做為索引鍵來尋找特定的編輯器，因為資料類型可以有多個與其相關聯的編輯器。"
  syntax:
    content: public EditorAttribute (string typeName, Type baseType);
    parameters:
    - id: typeName
      type: System.String
      description: "編輯器的完整限定的類型名稱。"
    - id: baseType
      type: System.Type
      description: "<xref:System.Type>的基底類別或介面，以做為查閱索引鍵使用的編輯器。</xref:System.Type> 這個類別必須是或衍生自<xref href=&quot;System.Drawing.Design.UITypeEditor&quot;> </xref>。"
  overload: System.ComponentModel.EditorAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.EditorAttribute.#ctor(System.Type,System.Type)
  id: '#ctor(System.Type,System.Type)'
  parent: System.ComponentModel.EditorAttribute
  langs:
  - csharp
  name: EditorAttribute(Type,Type)
  nameWithType: EditorAttribute.EditorAttribute(Type,Type)
  fullName: System.ComponentModel.EditorAttribute.EditorAttribute(Type,Type)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "初始化的新執行個體<xref href=&quot;System.ComponentModel.EditorAttribute&quot;></xref>類別型別與基底型別。"
  remarks: "<xref:System.Type>由`type`參數必須衍生自或實作基底類別</xref:System.Type>       `baseType`參數用做為索引鍵來尋找特定的編輯器，因為資料類型可以有多個與其相關聯的編輯器。"
  syntax:
    content: public EditorAttribute (Type type, Type baseType);
    parameters:
    - id: type
      type: System.Type
      description: "A<xref:System.Type>表示編輯器的型別。</xref:System.Type>"
    - id: baseType
      type: System.Type
      description: "<xref:System.Type>的基底類別或介面，以做為查閱索引鍵使用的編輯器。</xref:System.Type> 這個類別必須是或衍生自<xref href=&quot;System.Drawing.Design.UITypeEditor&quot;> </xref>。"
  overload: System.ComponentModel.EditorAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.EditorAttribute.EditorBaseTypeName
  id: EditorBaseTypeName
  parent: System.ComponentModel.EditorAttribute
  langs:
  - csharp
  name: EditorBaseTypeName
  nameWithType: EditorAttribute.EditorBaseTypeName
  fullName: System.ComponentModel.EditorAttribute.EditorBaseTypeName
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "取得基底類別或介面做為查閱索引鍵，這個編輯器的名稱。"
  remarks: "EditorBaseTypeName 屬性是組件限定的類型名稱。 [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]同時提供<xref:System.Drawing.Design.UITypeEditor>和<xref:System.ComponentModel.ComponentEditor>為有效的基底類別，但任何值是有效這裡。</xref:System.ComponentModel.ComponentEditor> </xref:System.Drawing.Design.UITypeEditor>"
  syntax:
    content: public string EditorBaseTypeName { get; }
    return:
      type: System.String
      description: "基底類別或介面做為查閱索引鍵，這個編輯器的名稱。"
  overload: System.ComponentModel.EditorAttribute.EditorBaseTypeName*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.EditorAttribute.EditorTypeName
  id: EditorTypeName
  parent: System.ComponentModel.EditorAttribute
  langs:
  - csharp
  name: EditorTypeName
  nameWithType: EditorAttribute.EditorTypeName
  fullName: System.ComponentModel.EditorAttribute.EditorTypeName
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "取得編輯器的類別中名稱&lt;xref:System.Type.AssemblyQualifiedName%2A?displayProperty=fullName&gt;格式。"
  syntax:
    content: public string EditorTypeName { get; }
    return:
      type: System.String
      description: "中的編輯器類別名稱&lt;xref:System.Type.AssemblyQualifiedName%2A?displayProperty=fullName&gt;格式。"
  overload: System.ComponentModel.EditorAttribute.EditorTypeName*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.EditorAttribute.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.ComponentModel.EditorAttribute
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: EditorAttribute.Equals(Object)
  fullName: System.ComponentModel.EditorAttribute.Equals(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "傳回指定之物件的值是否等於目前<xref href=&quot;System.ComponentModel.EditorAttribute&quot;> </xref>。"
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "要測試的值相等的物件。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>指定之物件的值是否等於目前的物件。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.EditorAttribute.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.EditorAttribute.GetHashCode
  id: GetHashCode
  parent: System.ComponentModel.EditorAttribute
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: EditorAttribute.GetHashCode()
  fullName: System.ComponentModel.EditorAttribute.GetHashCode()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "傳回這個執行個體的雜湊碼。"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "32 位元帶正負號的整數雜湊碼。"
  overload: System.ComponentModel.EditorAttribute.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.EditorAttribute.TypeId
  id: TypeId
  parent: System.ComponentModel.EditorAttribute
  langs:
  - csharp
  name: TypeId
  nameWithType: EditorAttribute.TypeId
  fullName: System.ComponentModel.EditorAttribute.TypeId
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "取得此屬性類型的唯一識別碼。"
  remarks: "TypeId 屬性可由篩選演算法來識別兩個相同類型的屬性。 對於大部分的屬性，這只會傳回<xref:System.Type>屬性的執行個體。</xref:System.Type> <xref:System.ComponentModel.EditorAttribute>覆寫為包含類型的編輯器基底類型。</xref:System.ComponentModel.EditorAttribute>"
  syntax:
    content: public override object TypeId { get; }
    return:
      type: System.Object
      description: "此屬性型別的唯一識別碼。"
  overload: System.ComponentModel.EditorAttribute.TypeId*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.ComponentModel.EditorAttribute.#ctor
  parent: System.ComponentModel.EditorAttribute
  isExternal: false
  name: EditorAttribute()
  nameWithType: EditorAttribute.EditorAttribute()
  fullName: System.ComponentModel.EditorAttribute.EditorAttribute()
- uid: System.ComponentModel.EditorAttribute.#ctor(System.String,System.String)
  parent: System.ComponentModel.EditorAttribute
  isExternal: false
  name: EditorAttribute(String,String)
  nameWithType: EditorAttribute.EditorAttribute(String,String)
  fullName: System.ComponentModel.EditorAttribute.EditorAttribute(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.EditorAttribute.#ctor(System.String,System.Type)
  parent: System.ComponentModel.EditorAttribute
  isExternal: false
  name: EditorAttribute(String,Type)
  nameWithType: EditorAttribute.EditorAttribute(String,Type)
  fullName: System.ComponentModel.EditorAttribute.EditorAttribute(String,Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.EditorAttribute.#ctor(System.Type,System.Type)
  parent: System.ComponentModel.EditorAttribute
  isExternal: false
  name: EditorAttribute(Type,Type)
  nameWithType: EditorAttribute.EditorAttribute(Type,Type)
  fullName: System.ComponentModel.EditorAttribute.EditorAttribute(Type,Type)
- uid: System.ComponentModel.EditorAttribute.EditorBaseTypeName
  parent: System.ComponentModel.EditorAttribute
  isExternal: false
  name: EditorBaseTypeName
  nameWithType: EditorAttribute.EditorBaseTypeName
  fullName: System.ComponentModel.EditorAttribute.EditorBaseTypeName
- uid: System.ComponentModel.EditorAttribute.EditorTypeName
  parent: System.ComponentModel.EditorAttribute
  isExternal: false
  name: EditorTypeName
  nameWithType: EditorAttribute.EditorTypeName
  fullName: System.ComponentModel.EditorAttribute.EditorTypeName
- uid: System.ComponentModel.EditorAttribute.Equals(System.Object)
  parent: System.ComponentModel.EditorAttribute
  isExternal: false
  name: Equals(Object)
  nameWithType: EditorAttribute.Equals(Object)
  fullName: System.ComponentModel.EditorAttribute.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ComponentModel.EditorAttribute.GetHashCode
  parent: System.ComponentModel.EditorAttribute
  isExternal: false
  name: GetHashCode()
  nameWithType: EditorAttribute.GetHashCode()
  fullName: System.ComponentModel.EditorAttribute.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ComponentModel.EditorAttribute.TypeId
  parent: System.ComponentModel.EditorAttribute
  isExternal: false
  name: TypeId
  nameWithType: EditorAttribute.TypeId
  fullName: System.ComponentModel.EditorAttribute.TypeId
- uid: System.ComponentModel.EditorAttribute.#ctor*
  parent: System.ComponentModel.EditorAttribute
  isExternal: false
  name: EditorAttribute
  nameWithType: EditorAttribute.EditorAttribute
- uid: System.ComponentModel.EditorAttribute.EditorBaseTypeName*
  parent: System.ComponentModel.EditorAttribute
  isExternal: false
  name: EditorBaseTypeName
  nameWithType: EditorAttribute.EditorBaseTypeName
- uid: System.ComponentModel.EditorAttribute.EditorTypeName*
  parent: System.ComponentModel.EditorAttribute
  isExternal: false
  name: EditorTypeName
  nameWithType: EditorAttribute.EditorTypeName
- uid: System.ComponentModel.EditorAttribute.Equals*
  parent: System.ComponentModel.EditorAttribute
  isExternal: false
  name: Equals
  nameWithType: EditorAttribute.Equals
- uid: System.ComponentModel.EditorAttribute.GetHashCode*
  parent: System.ComponentModel.EditorAttribute
  isExternal: false
  name: GetHashCode
  nameWithType: EditorAttribute.GetHashCode
- uid: System.ComponentModel.EditorAttribute.TypeId*
  parent: System.ComponentModel.EditorAttribute
  isExternal: false
  name: TypeId
  nameWithType: EditorAttribute.TypeId
