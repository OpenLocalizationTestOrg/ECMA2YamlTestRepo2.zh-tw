### YamlMime:ManagedReference
items:
- uid: System.Windows.TriggerBase
  id: TriggerBase
  children:
  - System.Windows.TriggerBase.EnterActions
  - System.Windows.TriggerBase.ExitActions
  langs:
  - csharp
  name: TriggerBase
  nameWithType: TriggerBase
  fullName: System.Windows.TriggerBase
  type: Class
  summary: "表示指定的條件式值內的基底類別<xref href=&quot;System.Windows.Style&quot;></xref>物件。"
  remarks: "[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]設定樣式和範本的模型可讓您指定觸發程序內您<xref:System.Windows.Style>， <xref:System.Windows.Controls.ControlTemplate>，和<xref:System.Windows.DataTemplate>。</xref:System.Windows.DataTemplate> </xref:System.Windows.Controls.ControlTemplate> </xref:System.Windows.Style> 基本上，TriggerBase 是可讓您套用變更時，某些物件的基底類別條件 (例如當某個屬性值變成`true`，或事件發生時) 感到滿意。"
  example:
  - "There are several different types of triggers: <xref:System.Windows.Trigger>, <xref:System.Windows.MultiTrigger>, <xref:System.Windows.EventTrigger>, <xref:System.Windows.DataTrigger>, and <xref:System.Windows.MultiDataTrigger>.  \n  \n The <xref:System.Windows.Trigger> class is the simplest type of triggers. A <xref:System.Windows.Trigger> object allows you to apply changes based on the value of a property. For example, the following example shows a named <xref:System.Windows.Style> available to <xref:System.Windows.Controls.Button> controls. The <xref:System.Windows.Style> defines a <xref:System.Windows.Trigger> element that changes the <xref:System.Windows.Controls.Control.Foreground%2A> property of a button when the <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> property is `true`.  \n  \n [!code-xml[BtnStyles#2](~/add/codesnippet/xaml/ButtonStyles2/app.xaml#2)]  \n  \n If you need to apply changes based on the state of multiple properties, you can use the <xref:System.Windows.MultiTrigger>. For an example, see the <xref:System.Windows.MultiTrigger> page.  \n  \n The <xref:System.Windows.EventTrigger> class allows you to apply changes when an event occurs. The following example contains two <xref:System.Windows.EventTrigger> objects, one of which occurs when the mouse enters the element and the other occurs when the mouse leaves the element.  \n  \n [!code-xml[StyleEventTriggerAnimation#EventTriggerSnippet](~/add/codesnippet/xaml/StyleEventTriggerAnimation/Default.xaml#eventtriggersnippet)]\n [!code-xml[StyleEventTriggerAnimation#EventTriggerSnippet](~/add/codesnippet/xaml/t-system.windows.trigger_2.xaml)]  \n  \n These are also the <xref:System.Windows.DataTrigger> and the <xref:System.Windows.MultiDataTrigger> classes. These are similar to <xref:System.Windows.Trigger> and <xref:System.Windows.MultiTrigger> except that they are for data-bound properties."
  syntax:
    content: >-
      [System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)]

      public abstract class TriggerBase : System.Windows.DependencyObject
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  implements: []
  inheritedMembers:
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.TriggerBase.EnterActions
  id: EnterActions
  parent: System.Windows.TriggerBase
  langs:
  - csharp
  name: EnterActions
  nameWithType: TriggerBase.EnterActions
  fullName: System.Windows.TriggerBase.EnterActions
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "取得集合的<xref href=&quot;System.Windows.TriggerAction&quot;></xref>觸發程序物件變成作用中時套用的物件。 這個屬性不適用於<xref href=&quot;System.Windows.EventTrigger&quot;></xref>類別。"
  remarks: "這個屬性不適用於<xref:System.Windows.EventTrigger>類別，因為事件表示 EnterActions 時的時間點和<xref:System.Windows.TriggerBase.ExitActions%2A>與物件狀態相對應。</xref:System.Windows.TriggerBase.ExitActions%2A> </xref:System.Windows.EventTrigger> 如<xref:System.Windows.EventTrigger>物件，使用<xref:System.Windows.EventTrigger.Actions%2A>屬性改為。</xref:System.Windows.EventTrigger.Actions%2A> </xref:System.Windows.EventTrigger>      > [!NOTE] > 這個屬性只能在設定[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]集合語法所示，透過或存取的集合物件和使用的各種方法，例如 Add。 用來存取集合物件本身屬性是唯讀，集合本身為讀寫。      <a name=&quot;xamlPropertyElementUsage_EnterActions&quot;></a># # XAML 屬性項目用法```   <object>     <object.EnterActions>       OneOrMoreTriggerActions     </object.EnterActions >   </object>   ``` <a name=&quot;xamlValues_EnterActions&quot;> </a> # # XAML 值*OneOrMoreTriggerActions*一或多個<xref:System.Windows.TriggerAction>物件。</xref:System.Windows.TriggerAction>      "
  syntax:
    content: public System.Windows.TriggerActionCollection EnterActions { get; }
    return:
      type: System.Windows.TriggerActionCollection
      description: "預設值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.TriggerBase.EnterActions*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.TriggerBase.ExitActions
  id: ExitActions
  parent: System.Windows.TriggerBase
  langs:
  - csharp
  name: ExitActions
  nameWithType: TriggerBase.ExitActions
  fullName: System.Windows.TriggerBase.ExitActions
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "取得集合的<xref href=&quot;System.Windows.TriggerAction&quot;></xref>觸發程序物件變成非作用中時套用的物件。 這個屬性不適用於<xref href=&quot;System.Windows.EventTrigger&quot;></xref>類別。"
  remarks: "這個屬性不適用於<xref:System.Windows.EventTrigger>類別，因為事件表示時的時間點<xref:System.Windows.TriggerBase.EnterActions%2A>和 ExitActions 與物件狀態相對應。</xref:System.Windows.TriggerBase.EnterActions%2A> </xref:System.Windows.EventTrigger> 如<xref:System.Windows.EventTrigger>物件，使用<xref:System.Windows.EventTrigger.Actions%2A>屬性改為。</xref:System.Windows.EventTrigger.Actions%2A> </xref:System.Windows.EventTrigger>      > [!NOTE] > 這個屬性只能在設定[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]集合語法所示，透過或存取的集合物件和使用的各種方法，例如 Add。 用來存取集合物件本身屬性是唯讀，集合本身為讀寫。      <a name=&quot;xamlPropertyElementUsage_ExitActions&quot;></a># # XAML 屬性項目用法```   <object>     <object.ExitActions>       OneOrMoreTriggerActions     </object.ExitActions >   </object>   ``` <a name=&quot;xamlValues_ExitActions&quot;> </a> # # XAML 值*OneOrMoreTriggerActions*一或多個<xref:System.Windows.TriggerAction>物件。</xref:System.Windows.TriggerAction>      "
  syntax:
    content: public System.Windows.TriggerActionCollection ExitActions { get; }
    return:
      type: System.Windows.TriggerActionCollection
      description: "預設值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.TriggerBase.ExitActions*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.DependencyObject
  isExternal: false
  name: System.Windows.DependencyObject
- uid: System.Windows.TriggerBase.EnterActions
  parent: System.Windows.TriggerBase
  isExternal: false
  name: EnterActions
  nameWithType: TriggerBase.EnterActions
  fullName: System.Windows.TriggerBase.EnterActions
- uid: System.Windows.TriggerActionCollection
  parent: System.Windows
  isExternal: false
  name: TriggerActionCollection
  nameWithType: TriggerActionCollection
  fullName: System.Windows.TriggerActionCollection
- uid: System.Windows.TriggerBase.ExitActions
  parent: System.Windows.TriggerBase
  isExternal: false
  name: ExitActions
  nameWithType: TriggerBase.ExitActions
  fullName: System.Windows.TriggerBase.ExitActions
- uid: System.Windows.TriggerBase.EnterActions*
  parent: System.Windows.TriggerBase
  isExternal: false
  name: EnterActions
  nameWithType: TriggerBase.EnterActions
- uid: System.Windows.TriggerBase.ExitActions*
  parent: System.Windows.TriggerBase
  isExternal: false
  name: ExitActions
  nameWithType: TriggerBase.ExitActions
