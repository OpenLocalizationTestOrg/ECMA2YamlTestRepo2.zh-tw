### YamlMime:ManagedReference
items:
- uid: System.Drawing.Printing.PrinterSettings
  id: PrinterSettings
  children:
  - System.Drawing.Printing.PrinterSettings.#ctor
  - System.Drawing.Printing.PrinterSettings.CanDuplex
  - System.Drawing.Printing.PrinterSettings.Clone
  - System.Drawing.Printing.PrinterSettings.Collate
  - System.Drawing.Printing.PrinterSettings.Copies
  - System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics
  - System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics(System.Boolean)
  - System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics(System.Drawing.Printing.PageSettings)
  - System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics(System.Drawing.Printing.PageSettings,System.Boolean)
  - System.Drawing.Printing.PrinterSettings.DefaultPageSettings
  - System.Drawing.Printing.PrinterSettings.Duplex
  - System.Drawing.Printing.PrinterSettings.FromPage
  - System.Drawing.Printing.PrinterSettings.GetHdevmode
  - System.Drawing.Printing.PrinterSettings.GetHdevmode(System.Drawing.Printing.PageSettings)
  - System.Drawing.Printing.PrinterSettings.GetHdevnames
  - System.Drawing.Printing.PrinterSettings.InstalledPrinters
  - System.Drawing.Printing.PrinterSettings.IsDefaultPrinter
  - System.Drawing.Printing.PrinterSettings.IsDirectPrintingSupported(System.Drawing.Image)
  - System.Drawing.Printing.PrinterSettings.IsDirectPrintingSupported(System.Drawing.Imaging.ImageFormat)
  - System.Drawing.Printing.PrinterSettings.IsPlotter
  - System.Drawing.Printing.PrinterSettings.IsValid
  - System.Drawing.Printing.PrinterSettings.LandscapeAngle
  - System.Drawing.Printing.PrinterSettings.MaximumCopies
  - System.Drawing.Printing.PrinterSettings.MaximumPage
  - System.Drawing.Printing.PrinterSettings.MinimumPage
  - System.Drawing.Printing.PrinterSettings.PaperSizes
  - System.Drawing.Printing.PrinterSettings.PaperSources
  - System.Drawing.Printing.PrinterSettings.PrinterName
  - System.Drawing.Printing.PrinterSettings.PrinterResolutions
  - System.Drawing.Printing.PrinterSettings.PrintFileName
  - System.Drawing.Printing.PrinterSettings.PrintRange
  - System.Drawing.Printing.PrinterSettings.PrintToFile
  - System.Drawing.Printing.PrinterSettings.SetHdevmode(System.IntPtr)
  - System.Drawing.Printing.PrinterSettings.SetHdevnames(System.IntPtr)
  - System.Drawing.Printing.PrinterSettings.SupportsColor
  - System.Drawing.Printing.PrinterSettings.ToPage
  - System.Drawing.Printing.PrinterSettings.ToString
  langs:
  - csharp
  name: PrinterSettings
  nameWithType: PrinterSettings
  fullName: System.Drawing.Printing.PrinterSettings
  type: Class
  summary: "指定列印文件的方式，可包括的印表機上列印，從 Windows Forms 應用程式列印時的相關資訊。"
  remarks: "通常，您可以存取透過 PrinterSettings<xref:System.Drawing.Printing.PrintDocument.PrinterSettings%2A?displayProperty=fullName>或<xref:System.Drawing.Printing.PageSettings.PrinterSettings%2A?displayProperty=fullName>修改印表機設定的屬性。</xref:System.Drawing.Printing.PageSettings.PrinterSettings%2A?displayProperty=fullName> </xref:System.Drawing.Printing.PrintDocument.PrinterSettings%2A?displayProperty=fullName> 最常見的印表機設定是<xref:System.Drawing.Printing.PrinterSettings.PrinterName%2A>，以指定要列印至印表機。</xref:System.Drawing.Printing.PrinterSettings.PrinterName%2A>       如需搭配 Windows Form 列印功能的詳細資訊，請參閱<xref:System.Drawing.Printing>命名空間的概觀。</xref:System.Drawing.Printing> 如果您想要從 Windows Presentation Foundation 應用程式列印，請參閱<xref:System.Printing>命名空間。</xref:System.Printing>"
  example:
  - "The following code example prints a document on the specified printer. The example has three prerequisites:  \n  \n-   A variable named `filePath` has been set to the path of the file to print.  \n  \n-   A method named `pd_PrintPage`, which handles the <xref:System.Drawing.Printing.PrintDocument.PrintPage> event, has been defined.  \n  \n-   A variable named `printer` has been set to the printer's name.  \n  \n Use the <xref:System.Drawing>, <xref:System.Drawing.Printing>, and <xref:System.IO> namespaces for this example.  \n  \n [!code-cpp[Classic PrinterSettings Example#1](~/add/codesnippet/cpp/t-system.drawing.printin_2_1.cpp)]\n [!code-cs[Classic PrinterSettings Example#1](~/add/codesnippet/csharp/t-system.drawing.printin_2_1.cs)]\n [!code-vb[Classic PrinterSettings Example#1](~/add/codesnippet/visualbasic/t-system.drawing.printin_2_1.vb)]"
  syntax:
    content: 'public class PrinterSettings : ICloneable'
  inheritance:
  - System.Object
  implements:
  - System.ICloneable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrinterSettings.#ctor
  id: '#ctor'
  parent: System.Drawing.Printing.PrinterSettings
  langs:
  - csharp
  name: PrinterSettings()
  nameWithType: PrinterSettings.PrinterSettings()
  fullName: System.Drawing.Printing.PrinterSettings.PrinterSettings()
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "初始化的新執行個體<xref href=&quot;System.Drawing.Printing.PrinterSettings&quot;></xref>類別。"
  remarks: "預設建構函式所有的欄位初始化成為其預設值。       一般而言，您無法建立的執行個體<xref:System.Drawing.Printing.PrinterSettings>，而是使用<xref:System.Drawing.Printing.PrintDocument.PrinterSettings%2A?displayProperty=fullName>設定印表機設定。</xref:System.Drawing.Printing.PrintDocument.PrinterSettings%2A?displayProperty=fullName> </xref:System.Drawing.Printing.PrinterSettings>"
  syntax:
    content: public PrinterSettings ();
    parameters: []
  overload: System.Drawing.Printing.PrinterSettings.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrinterSettings.CanDuplex
  id: CanDuplex
  parent: System.Drawing.Printing.PrinterSettings
  langs:
  - csharp
  name: CanDuplex
  nameWithType: PrinterSettings.CanDuplex
  fullName: System.Drawing.Printing.PrinterSettings.CanDuplex
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "取得值，指出的印表機是否支援雙面列印。"
  remarks: "若要使用雙工、 列印，且如果印表機支援它，請設定<xref:System.Drawing.Printing.PrinterSettings.Duplex%2A>的其中一個<xref:System.Drawing.Printing.Duplex>值。</xref:System.Drawing.Printing.Duplex> </xref:System.Drawing.Printing.PrinterSettings.Duplex%2A>"
  syntax:
    content: public bool CanDuplex { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果印表機支援雙面列印。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Drawing.Printing.PrinterSettings.CanDuplex*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrinterSettings.Clone
  id: Clone
  parent: System.Drawing.Printing.PrinterSettings
  langs:
  - csharp
  name: Clone()
  nameWithType: PrinterSettings.Clone()
  fullName: System.Drawing.Printing.PrinterSettings.Clone()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "建立一份這<xref href=&quot;System.Drawing.Printing.PrinterSettings&quot;> </xref>。"
  syntax:
    content: public object Clone ();
    parameters: []
    return:
      type: System.Object
      description: "此物件的複本。"
  overload: System.Drawing.Printing.PrinterSettings.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrinterSettings.Collate
  id: Collate
  parent: System.Drawing.Printing.PrinterSettings
  langs:
  - csharp
  name: Collate
  nameWithType: PrinterSettings.Collate
  fullName: System.Drawing.Printing.PrinterSettings.Collate
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "取得或設定值，指出是否要自動分頁列印文件。"
  remarks: "定序的份數大於 1 時，才執行。 設定<xref:System.Drawing.Printing.PrinterSettings.Copies%2A>屬性，以指定要列印的份數</xref:System.Drawing.Printing.PrinterSettings.Copies%2A>       若要設定自動分頁`true`會在下一步複製的第一頁列印之前，先列印文件的完整複本。 `false`將每一頁列印的指定，然後再列印下一頁的份數。"
  syntax:
    content: public bool Collate { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果列印的文件會自動分頁。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Drawing.Printing.PrinterSettings.Collate*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrinterSettings.Copies
  id: Copies
  parent: System.Drawing.Printing.PrinterSettings
  langs:
  - csharp
  name: Copies
  nameWithType: PrinterSettings.Copies
  fullName: System.Drawing.Printing.PrinterSettings.Copies
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "取得或設定文件列印的份數。"
  remarks: "並非所有的印表機支援列印多個複本。 您可以使用<xref:System.Drawing.Printing.PrinterSettings.MaximumCopies%2A>屬性來判斷最大數目將複製的印表機支援。</xref:System.Drawing.Printing.PrinterSettings.MaximumCopies%2A> 如果複本數目已設成高於印表機所支援的最大複本，將會印出只複製的大數目，並會發生任何例外狀況。      > [!NOTE] > 部分印表機可能不會支援一次列印多份複本。"
  syntax:
    content: public short Copies { get; set; }
    return:
      type: System.Int16
      description: "要列印的份數。 預設為 1。"
  overload: System.Drawing.Printing.PrinterSettings.Copies*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "小於零的複製屬性的值。"
  platform:
  - net462
- uid: System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics
  id: CreateMeasurementGraphics
  parent: System.Drawing.Printing.PrinterSettings
  langs:
  - csharp
  name: CreateMeasurementGraphics()
  nameWithType: PrinterSettings.CreateMeasurementGraphics()
  fullName: System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "傳回<xref href=&quot;System.Drawing.Graphics&quot;> </xref> ，其中包含建立時，會很有用的印表機資訊<xref href=&quot;System.Drawing.Printing.PrintDocument&quot;> </xref>。"
  remarks: "您可以使用 CreateMeasurementGraphics 方法時，取得<xref:System.Drawing.Graphics>的印表機，而不需要建立列印工作。</xref:System.Drawing.Graphics> 您可以使用<xref:System.Drawing.Graphics>做出如何配置視覺化元素，例如字型、 大小及複雜的列印工作的型別樣式。</xref:System.Drawing.Graphics>"
  syntax:
    content: public System.Drawing.Graphics CreateMeasurementGraphics ();
    parameters: []
    return:
      type: System.Drawing.Graphics
      description: "A <xref href=&quot;System.Drawing.Graphics&quot;> </xref> ，其中包含從印表機的資訊。"
  overload: System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics*
  exceptions:
  - type: System.Drawing.Printing.InvalidPrinterException
    commentId: T:System.Drawing.Printing.InvalidPrinterException
    description: "印表機中名為<xref:System.Drawing.Printing.PrinterSettings.PrinterName*>屬性不存在。</xref:System.Drawing.Printing.PrinterSettings.PrinterName*>"
  platform:
  - net462
- uid: System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics(System.Boolean)
  id: CreateMeasurementGraphics(System.Boolean)
  parent: System.Drawing.Printing.PrinterSettings
  langs:
  - csharp
  name: CreateMeasurementGraphics(Boolean)
  nameWithType: PrinterSettings.CreateMeasurementGraphics(Boolean)
  fullName: System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics(Boolean)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "傳回<xref href=&quot;System.Drawing.Graphics&quot;></xref>包含印表機資訊，並選擇性地指定在邊界上的來源。"
  remarks: "與<xref:System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics%2A>方法，您可以取得<xref:System.Drawing.Graphics>的印表機，而不需要建立列印工作。</xref:System.Drawing.Graphics> </xref:System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics%2A> 使用<xref:System.Drawing.Graphics>做出如何配置視覺化元素，例如字型、 大小及複雜的列印工作的型別樣式。</xref:System.Drawing.Graphics>"
  syntax:
    content: public System.Drawing.Graphics CreateMeasurementGraphics (bool honorOriginAtMargins);
    parameters:
    - id: honorOriginAtMargins
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要指出在邊界; 的來源否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.Drawing.Graphics
      description: "A <xref href=&quot;System.Drawing.Graphics&quot;> </xref>包含印表機資訊從<xref href=&quot;System.Drawing.Printing.PageSettings&quot;> </xref>。"
  overload: System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics(System.Drawing.Printing.PageSettings)
  id: CreateMeasurementGraphics(System.Drawing.Printing.PageSettings)
  parent: System.Drawing.Printing.PrinterSettings
  langs:
  - csharp
  name: CreateMeasurementGraphics(PageSettings)
  nameWithType: PrinterSettings.CreateMeasurementGraphics(PageSettings)
  fullName: System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics(PageSettings)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "傳回<xref href=&quot;System.Drawing.Graphics&quot;></xref>包含印表機資訊與指定相關聯的<xref href=&quot;System.Drawing.Printing.PageSettings&quot;> </xref>。"
  remarks: "與<xref:System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics%2A>方法，您可以取得<xref:System.Drawing.Graphics>的印表機，而不需要建立列印工作。</xref:System.Drawing.Graphics> </xref:System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics%2A> 使用<xref:System.Drawing.Graphics>做出如何配置視覺化元素，例如字型、 大小及複雜的列印工作的型別樣式。</xref:System.Drawing.Graphics>"
  syntax:
    content: public System.Drawing.Graphics CreateMeasurementGraphics (System.Drawing.Printing.PageSettings pageSettings);
    parameters:
    - id: pageSettings
      type: System.Drawing.Printing.PageSettings
      description: "<xref href=&quot;System.Drawing.Printing.PageSettings&quot;> </xref>擷取的圖形物件。"
    return:
      type: System.Drawing.Graphics
      description: "A <xref href=&quot;System.Drawing.Graphics&quot;> </xref>包含印表機資訊從<xref href=&quot;System.Drawing.Printing.PageSettings&quot;> </xref>。"
  overload: System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics(System.Drawing.Printing.PageSettings,System.Boolean)
  id: CreateMeasurementGraphics(System.Drawing.Printing.PageSettings,System.Boolean)
  parent: System.Drawing.Printing.PrinterSettings
  langs:
  - csharp
  name: CreateMeasurementGraphics(PageSettings,Boolean)
  nameWithType: PrinterSettings.CreateMeasurementGraphics(PageSettings,Boolean)
  fullName: System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics(PageSettings,Boolean)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "建立<xref href=&quot;System.Drawing.Graphics&quot;></xref>與指定的頁面設定相關聯，並選擇性地指定在邊界的原點。"
  remarks: "<xref:System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics%2A>方法可讓您取得<xref:System.Drawing.Graphics>的印表機，而不需要建立列印工作。</xref:System.Drawing.Graphics> </xref:System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics%2A> 使用<xref:System.Drawing.Graphics>做出如何配置視覺化元素，例如字型、 大小及複雜的列印工作的型別樣式。</xref:System.Drawing.Graphics>"
  syntax:
    content: public System.Drawing.Graphics CreateMeasurementGraphics (System.Drawing.Printing.PageSettings pageSettings, bool honorOriginAtMargins);
    parameters:
    - id: pageSettings
      type: System.Drawing.Printing.PageSettings
      description: "<xref href=&quot;System.Drawing.Printing.PageSettings&quot;> </xref>擷取<xref href=&quot;System.Drawing.Graphics&quot;></xref>物件。"
    - id: honorOriginAtMargins
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要指定邊界; 在來源否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.Drawing.Graphics
      description: "A <xref href=&quot;System.Drawing.Graphics&quot;> </xref>包含印表機資訊從<xref href=&quot;System.Drawing.Printing.PageSettings&quot;> </xref>。"
  overload: System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrinterSettings.DefaultPageSettings
  id: DefaultPageSettings
  parent: System.Drawing.Printing.PrinterSettings
  langs:
  - csharp
  name: DefaultPageSettings
  nameWithType: PrinterSettings.DefaultPageSettings
  fullName: System.Drawing.Printing.PrinterSettings.DefaultPageSettings
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "取得預設印表機頁面設定。"
  remarks: "頁面設定包括的上邊界的大小、 紙張，若要使用，以及是否要用彩色來列印大小。 如需頁面設定的詳細資訊，請參閱<xref:System.Drawing.Printing.PageSettings>類別。</xref:System.Drawing.Printing.PageSettings>"
  syntax:
    content: public System.Drawing.Printing.PageSettings DefaultPageSettings { get; }
    return:
      type: System.Drawing.Printing.PageSettings
      description: "A <xref href=&quot;System.Drawing.Printing.PageSettings&quot;> </xref>表示這台印表機的預設頁面設定。"
  overload: System.Drawing.Printing.PrinterSettings.DefaultPageSettings*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrinterSettings.Duplex
  id: Duplex
  parent: System.Drawing.Printing.PrinterSettings
  langs:
  - csharp
  name: Duplex
  nameWithType: PrinterSettings.Duplex
  fullName: System.Drawing.Printing.PrinterSettings.Duplex
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "取得或設定雙面列印的印表機設定。"
  remarks: "您可以使用<xref:System.Drawing.Printing.PrinterSettings.CanDuplex%2A>屬性檢查印表機是否支援雙面列印。</xref:System.Drawing.Printing.PrinterSettings.CanDuplex%2A>"
  syntax:
    content: public System.Drawing.Printing.Duplex Duplex { get; set; }
    return:
      type: System.Drawing.Printing.Duplex
      description: "其中一個<xref href=&quot;System.Drawing.Printing.Duplex&quot;></xref>值。 預設值取決於印表機。"
  overload: System.Drawing.Printing.PrinterSettings.Duplex*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "雙工屬性的值不是其中一個<xref href=&quot;System.Drawing.Printing.Duplex&quot;></xref>值。"
  platform:
  - net462
- uid: System.Drawing.Printing.PrinterSettings.FromPage
  id: FromPage
  parent: System.Drawing.Printing.PrinterSettings
  langs:
  - csharp
  name: FromPage
  nameWithType: PrinterSettings.FromPage
  fullName: System.Drawing.Printing.PrinterSettings.FromPage
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "取得或設定要列印的第一頁的頁碼。"
  remarks: "為用於儲存 FromPage 和<xref:System.Drawing.Printing.PrinterSettings.ToPage%2A>屬性由<xref:System.Windows.Forms.PrintDialog>當使用者選取列印範圍。</xref:System.Windows.Forms.PrintDialog> </xref:System.Drawing.Printing.PrinterSettings.ToPage%2A> <xref:System.Windows.Forms.PrintDialog.AllowSomePages%2A?displayProperty=fullName>屬性必須設定為`true`，讓使用者指定列印範圍。</xref:System.Windows.Forms.PrintDialog.AllowSomePages%2A?displayProperty=fullName> 此外，<xref:System.Windows.Forms.PrintDialog>需要<xref:System.Drawing.Printing.PrinterSettings.MinimumPage%2A>和<xref:System.Drawing.Printing.PrinterSettings.MaximumPage%2A>指定和為用於儲存 FromPage 值到該範圍內。</xref:System.Drawing.Printing.PrinterSettings.MaximumPage%2A> </xref:System.Drawing.Printing.PrinterSettings.MinimumPage%2A> </xref:System.Windows.Forms.PrintDialog>       在列印的過程中，在<xref:System.Drawing.Printing.PrintDocument.PrintPage?displayProperty=fullName>事件、 檢視<xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A>來判斷應列印。</xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A> </xref:System.Drawing.Printing.PrintDocument.PrintPage?displayProperty=fullName> 如果<xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A>是<xref:System.Drawing.Printing.PrintRange?displayProperty=fullName>，使用為用於儲存 FromPage 和<xref:System.Drawing.Printing.PrinterSettings.ToPage%2A>應列印屬性，以便判斷哪些頁面。</xref:System.Drawing.Printing.PrinterSettings.ToPage%2A> </xref:System.Drawing.Printing.PrintRange?displayProperty=fullName> </xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A> 如果<xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A>是<xref:System.Drawing.Printing.PrintRange?displayProperty=fullName>，然後指定 選取網頁的輸出。</xref:System.Drawing.Printing.PrintRange?displayProperty=fullName> </xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A>       為用於儲存 FromPage，<xref:System.Drawing.Printing.PrinterSettings.ToPage%2A>和<xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A>也可以設定以程式設計的方式，雖然<xref:System.Drawing.Printing.PrintDocument.PrintPage?displayProperty=fullName>實作都相同。</xref:System.Drawing.Printing.PrintDocument.PrintPage?displayProperty=fullName> </xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A> </xref:System.Drawing.Printing.PrinterSettings.ToPage%2A>"
  syntax:
    content: public int FromPage { get; set; }
    return:
      type: System.Int32
      description: "若要列印的第一頁的頁碼。"
  overload: System.Drawing.Printing.PrinterSettings.FromPage*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "屬性的值為用於儲存 FromPage 小於零。"
  platform:
  - net462
- uid: System.Drawing.Printing.PrinterSettings.GetHdevmode
  id: GetHdevmode
  parent: System.Drawing.Printing.PrinterSettings
  langs:
  - csharp
  name: GetHdevmode()
  nameWithType: PrinterSettings.GetHdevmode()
  fullName: System.Drawing.Printing.PrinterSettings.GetHdevmode()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "建立控制代碼<xref uid=&quot;langword_csharp_DEVMODE&quot; name=&quot;DEVMODE&quot; href=&quot;&quot;></xref>結構對應至印表機設定。"
  remarks: '`DEVMODE`結構是特定的裝置。 複製`DEVMODE`結構從一個<xref:System.Drawing.Printing.PrinterSettings>至<xref:System.Drawing.Printing.PrinterSettings>不支援不同的印表機。</xref:System.Drawing.Printing.PrinterSettings> </xref:System.Drawing.Printing.PrinterSettings> 當您完成建立透過這個方法的控制代碼之後時，您必須取消配置其自行呼叫原生 Win32`GlobalFree`方法。 當您呼叫這個方法時，您傳遞做為參數傳回的值從 GetHdevmode 方法。'
  syntax:
    content: public IntPtr GetHdevmode ();
    parameters: []
    return:
      type: System.IntPtr
      description: "控制代碼<xref uid=&quot;langword_csharp_DEVMODE&quot; name=&quot;DEVMODE&quot; href=&quot;&quot;></xref>結構。"
  overload: System.Drawing.Printing.PrinterSettings.GetHdevmode*
  exceptions:
  - type: System.Drawing.Printing.InvalidPrinterException
    commentId: T:System.Drawing.Printing.InvalidPrinterException
    description: "印表機中名為<xref:System.Drawing.Printing.PrinterSettings.PrinterName*>屬性不存在。</xref:System.Drawing.Printing.PrinterSettings.PrinterName*>"
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "無法擷取印表機的初始化資訊。"
  platform:
  - net462
- uid: System.Drawing.Printing.PrinterSettings.GetHdevmode(System.Drawing.Printing.PageSettings)
  id: GetHdevmode(System.Drawing.Printing.PageSettings)
  parent: System.Drawing.Printing.PrinterSettings
  langs:
  - csharp
  name: GetHdevmode(PageSettings)
  nameWithType: PrinterSettings.GetHdevmode(PageSettings)
  fullName: System.Drawing.Printing.PrinterSettings.GetHdevmode(PageSettings)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "建立控制代碼<xref uid=&quot;langword_csharp_DEVMODE&quot; name=&quot;DEVMODE&quot; href=&quot;&quot;></xref>結構對應至印表機，並透過指定的頁面設定<code> pageSettings </code>參數。"
  remarks: "`DEVMODE`結構是特定的裝置。 複製`DEVMODE`結構從一個<xref:System.Drawing.Printing.PrinterSettings>至<xref:System.Drawing.Printing.PrinterSettings>不支援不同的印表機。</xref:System.Drawing.Printing.PrinterSettings> </xref:System.Drawing.Printing.PrinterSettings>       當您完成建立透過這個方法的控制代碼之後時，您必須取消配置其自行呼叫原生 Win32`GlobalFree`方法。 當您呼叫這個方法時，您將傳遞做為參數的傳回值<xref:System.Drawing.Printing.PrinterSettings.GetHdevmode%2A>方法。</xref:System.Drawing.Printing.PrinterSettings.GetHdevmode%2A>"
  syntax:
    content: public IntPtr GetHdevmode (System.Drawing.Printing.PageSettings pageSettings);
    parameters:
    - id: pageSettings
      type: System.Drawing.Printing.PageSettings
      description: "<xref href=&quot;System.Drawing.Printing.PageSettings&quot;> </xref>物件<xref uid=&quot;langword_csharp_DEVMODE&quot; name=&quot;DEVMODE&quot; href=&quot;&quot;></xref>結構的控制代碼。"
    return:
      type: System.IntPtr
      description: "控制代碼<xref uid=&quot;langword_csharp_DEVMODE&quot; name=&quot;DEVMODE&quot; href=&quot;&quot;></xref>結構。"
  overload: System.Drawing.Printing.PrinterSettings.GetHdevmode*
  exceptions:
  - type: System.Drawing.Printing.InvalidPrinterException
    commentId: T:System.Drawing.Printing.InvalidPrinterException
    description: "印表機中名為<xref:System.Drawing.Printing.PrinterSettings.PrinterName*>屬性不存在。</xref:System.Drawing.Printing.PrinterSettings.PrinterName*>"
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "無法擷取印表機的初始化資訊。"
  platform:
  - net462
- uid: System.Drawing.Printing.PrinterSettings.GetHdevnames
  id: GetHdevnames
  parent: System.Drawing.Printing.PrinterSettings
  langs:
  - csharp
  name: GetHdevnames()
  nameWithType: PrinterSettings.GetHdevnames()
  fullName: System.Drawing.Printing.PrinterSettings.GetHdevnames()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "建立控制代碼<xref uid=&quot;langword_csharp_DEVNAMES&quot; name=&quot;DEVNAMES&quot; href=&quot;&quot;></xref>結構對應至印表機設定。"
  remarks: "當您完成建立透過這個方法的控制代碼之後時，您必須取消配置其自行呼叫原生 Win32`GlobalFree`方法。 當您呼叫這個方法時，您傳遞做為參數傳回的值從 GetHdevnames 方法。"
  syntax:
    content: public IntPtr GetHdevnames ();
    parameters: []
    return:
      type: System.IntPtr
      description: "控制代碼<xref uid=&quot;langword_csharp_DEVNAMES&quot; name=&quot;DEVNAMES&quot; href=&quot;&quot;></xref>結構。"
  overload: System.Drawing.Printing.PrinterSettings.GetHdevnames*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrinterSettings.InstalledPrinters
  id: InstalledPrinters
  parent: System.Drawing.Printing.PrinterSettings
  langs:
  - csharp
  name: InstalledPrinters
  nameWithType: PrinterSettings.InstalledPrinters
  fullName: System.Drawing.Printing.PrinterSettings.InstalledPrinters
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "取得電腦上安裝的所有印表機的名稱。"
  remarks: "要讓使用者列印到印表機的選擇，您可以使用已安裝的印表機名稱的集合。"
  example:
  - "The following code example populates the `comboInstalledPrinters` combo box with the installed printers and also sets the printer to print, using the <xref:System.Drawing.Printing.PrinterSettings.PrinterName%2A> property, when the selection changes. The `PopulateInstalledPrintersCombo` routine is called when the form is being initialized. The example requires that a <xref:System.Drawing.Printing.PrintDocument> variable named `printDoc` exists and that the specific combo box exists.  \n  \n [!code-cs[PaperSource and PaperSize Example with Resolution#5](~/add/codesnippet/csharp/p-system.drawing.printin_14_1.cs)]\n [!code-cpp[PaperSource and PaperSize Example with Resolution#5](~/add/codesnippet/cpp/p-system.drawing.printin_14_1.cpp)]\n [!code-vb[PaperSource and PaperSize Example with Resolution#5](~/add/codesnippet/visualbasic/p-system.drawing.printin_14_1.vb)]"
  syntax:
    content: public static System.Drawing.Printing.PrinterSettings.StringCollection InstalledPrinters { get; }
    return:
      type: System.Drawing.Printing.PrinterSettings.StringCollection
      description: "A<xref:System.Drawing.Printing.PrinterSettings.StringCollection>代表安裝在電腦上的所有印表機的名稱。</xref:System.Drawing.Printing.PrinterSettings.StringCollection>"
  overload: System.Drawing.Printing.PrinterSettings.InstalledPrinters*
  exceptions:
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "無法列舉可用的印表機。"
  platform:
  - net462
- uid: System.Drawing.Printing.PrinterSettings.IsDefaultPrinter
  id: IsDefaultPrinter
  parent: System.Drawing.Printing.PrinterSettings
  langs:
  - csharp
  name: IsDefaultPrinter
  nameWithType: PrinterSettings.IsDefaultPrinter
  fullName: System.Drawing.Printing.PrinterSettings.IsDefaultPrinter
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "取得值，指出是否<> *> 屬性會指定預設印表機，除非明確地設定使用者<> *>。"
  remarks: "一律傳回 IsDefaultPrinter`false`當您明確設定<xref:System.Drawing.Printing.PrinterSettings.PrinterName%2A>以外的字串值的屬性`null`。</xref:System.Drawing.Printing.PrinterSettings.PrinterName%2A>"
  example:
  - "The following example demonstrates how to use the IsDefaultPrinter property. To run this example, paste the following code into a form and call `PopulateInstalledPrintersCombo` from the form's constructor or <xref:System.Windows.Forms.Form.Load> event-handling method.  \n  \n [!code-vb[System.Drawing.Printing.PrinterSettingsEx#1](~/add/codesnippet/visualbasic/p-system.drawing.printin_7_1.vb)]\n [!code-cs[System.Drawing.Printing.PrinterSettingsEx#1](~/add/codesnippet/csharp/p-system.drawing.printin_7_1.cs)]"
  syntax:
    content: public bool IsDefaultPrinter { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref:System.Drawing.Printing.PrinterSettings.PrinterName*>指定預設印表機，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Drawing.Printing.PrinterSettings.PrinterName*>"
  overload: System.Drawing.Printing.PrinterSettings.IsDefaultPrinter*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrinterSettings.IsDirectPrintingSupported(System.Drawing.Image)
  id: IsDirectPrintingSupported(System.Drawing.Image)
  parent: System.Drawing.Printing.PrinterSettings
  langs:
  - csharp
  name: IsDirectPrintingSupported(Image)
  nameWithType: PrinterSettings.IsDirectPrintingSupported(Image)
  fullName: System.Drawing.Printing.PrinterSettings.IsDirectPrintingSupported(Image)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "取得值，指出的印表機是否支援列印指定的映像檔。"
  syntax:
    content: public bool IsDirectPrintingSupported (System.Drawing.Image image);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "要列印的影像。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果印表機支援列印指定的映像。，否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Drawing.Printing.PrinterSettings.IsDirectPrintingSupported*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrinterSettings.IsDirectPrintingSupported(System.Drawing.Imaging.ImageFormat)
  id: IsDirectPrintingSupported(System.Drawing.Imaging.ImageFormat)
  parent: System.Drawing.Printing.PrinterSettings
  langs:
  - csharp
  name: IsDirectPrintingSupported(ImageFormat)
  nameWithType: PrinterSettings.IsDirectPrintingSupported(ImageFormat)
  fullName: System.Drawing.Printing.PrinterSettings.IsDirectPrintingSupported(ImageFormat)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "傳回值，指出的印表機是否支援列印指定的影像格式。"
  syntax:
    content: public bool IsDirectPrintingSupported (System.Drawing.Imaging.ImageFormat imageFormat);
    parameters:
    - id: imageFormat
      type: System.Drawing.Imaging.ImageFormat
      description: "<xref href=&quot;System.Drawing.Imaging.ImageFormat&quot;> </xref>列印。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果印表機支援列印指定的影像格式。，否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Drawing.Printing.PrinterSettings.IsDirectPrintingSupported*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrinterSettings.IsPlotter
  id: IsPlotter
  parent: System.Drawing.Printing.PrinterSettings
  langs:
  - csharp
  name: IsPlotter
  nameWithType: PrinterSettings.IsPlotter
  fullName: System.Drawing.Printing.PrinterSettings.IsPlotter
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "取得值，指出是否繪圖機該印表機。"
  remarks: "繪圖機是以向量為基礎，而不是點陣式印表機。 大部分以向量為基礎的印表機會使用個別的繪圖筆產生輸出。"
  syntax:
    content: public bool IsPlotter { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果印表機繪圖機;<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>印表機是否點陣。"
  overload: System.Drawing.Printing.PrinterSettings.IsPlotter*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrinterSettings.IsValid
  id: IsValid
  parent: System.Drawing.Printing.PrinterSettings
  langs:
  - csharp
  name: IsValid
  nameWithType: PrinterSettings.IsValid
  fullName: System.Drawing.Printing.PrinterSettings.IsValid
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "取得值，指出是否<xref:System.Drawing.Printing.PrinterSettings.PrinterName*>屬性會指定有效的印表機。</xref:System.Drawing.Printing.PrinterSettings.PrinterName*>"
  remarks: "當您取得或設定某些屬性時，有效的印表機，否則會引發例外狀況。 若要避免例外狀況，請使用 IsValid 屬性設定之後<xref:System.Drawing.Printing.PrinterSettings.PrinterName%2A>來安全地判斷印表機是否有效。</xref:System.Drawing.Printing.PrinterSettings.PrinterName%2A>"
  example:
  - "The following code example specifies the target printer by setting the <xref:System.Drawing.Printing.PrinterSettings.PrinterName%2A> property, and if the IsValid is `true`, prints the document on the specified printer. The example has three prerequisites:  \n  \n-   A variable named `filePath` has been set to the path of the file to print.  \n  \n-   A method named `pd_PrintPage`, which handles the <xref:System.Drawing.Printing.PrintDocument.PrintPage> event, has been defined.  \n  \n-   A variable named `printer` has been set to the printer's name.  \n  \n Use the <xref:System.Drawing>, <xref:System.Drawing.Printing>, and <xref:System.IO> namespaces for this example.  \n  \n [!code-cpp[Classic PrinterSettings Example#1](~/add/codesnippet/cpp/p-system.drawing.printin_9_1.cpp)]\n [!code-cs[Classic PrinterSettings Example#1](~/add/codesnippet/csharp/p-system.drawing.printin_9_1.cs)]\n [!code-vb[Classic PrinterSettings Example#1](~/add/codesnippet/visualbasic/p-system.drawing.printin_9_1.vb)]"
  syntax:
    content: public bool IsValid { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref:System.Drawing.Printing.PrinterSettings.PrinterName*>屬性會指定有效的印表機，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Drawing.Printing.PrinterSettings.PrinterName*>"
  overload: System.Drawing.Printing.PrinterSettings.IsValid*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrinterSettings.LandscapeAngle
  id: LandscapeAngle
  parent: System.Drawing.Printing.PrinterSettings
  langs:
  - csharp
  name: LandscapeAngle
  nameWithType: PrinterSettings.LandscapeAngle
  fullName: System.Drawing.Printing.PrinterSettings.LandscapeAngle
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "取得的角度，以度為單位，旋轉直式方向時，會以產生  蒰菾 。"
  remarks: "有效的旋轉的值為 90 和 270 度。 如果不支援橫向，唯一有效的循環值是 0 度。 您設定<xref:System.Drawing.Printing.PageSettings.Landscape%2A?displayProperty=fullName>屬性`true`列印格式橫向頁面。</xref:System.Drawing.Printing.PageSettings.Landscape%2A?displayProperty=fullName>"
  syntax:
    content: public int LandscapeAngle { get; }
    return:
      type: System.Int32
      description: "以度為單位，旋轉直式方向時，會以產生  蒰菾  角度。"
  overload: System.Drawing.Printing.PrinterSettings.LandscapeAngle*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrinterSettings.MaximumCopies
  id: MaximumCopies
  parent: System.Drawing.Printing.PrinterSettings
  langs:
  - csharp
  name: MaximumCopies
  nameWithType: PrinterSettings.MaximumCopies
  fullName: System.Drawing.Printing.PrinterSettings.MaximumCopies
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "取得最大的印表機可讓使用者一次列印的份數。"
  remarks: "設定<xref:System.Drawing.Printing.PrinterSettings.Copies%2A>要列印的份數字屬性</xref:System.Drawing.Printing.PrinterSettings.Copies%2A> 若要判斷您的印表機是否支援多份列印一次，因為某些印表機不使用 MaximumCopies 屬性。"
  syntax:
    content: public int MaximumCopies { get; }
    return:
      type: System.Int32
      description: "印表機可讓使用者列印一次的複本數目上限。"
  overload: System.Drawing.Printing.PrinterSettings.MaximumCopies*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrinterSettings.MaximumPage
  id: MaximumPage
  parent: System.Drawing.Printing.PrinterSettings
  langs:
  - csharp
  name: MaximumPage
  nameWithType: PrinterSettings.MaximumPage
  fullName: System.Drawing.Printing.PrinterSettings.MaximumPage
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "取得或設定最大<> *> 或<> *> 中的可選取<xref href=&quot;System.Windows.Forms.PrintDialog&quot;> </xref>。"
  remarks: "<xref:System.Drawing.Printing.PrinterSettings.FromPage%2A>和<xref:System.Drawing.Printing.PrinterSettings.ToPage%2A>屬性由<xref:System.Windows.Forms.PrintDialog>當使用者選取列印範圍。</xref:System.Windows.Forms.PrintDialog> </xref:System.Drawing.Printing.PrinterSettings.ToPage%2A> </xref:System.Drawing.Printing.PrinterSettings.FromPage%2A> <xref:System.Windows.Forms.PrintDialog.AllowSomePages%2A?displayProperty=fullName>屬性必須設定為`true`，讓使用者指定列印範圍。</xref:System.Windows.Forms.PrintDialog.AllowSomePages%2A?displayProperty=fullName> 當設定<xref:System.Drawing.Printing.PrinterSettings.FromPage%2A>或<xref:System.Drawing.Printing.PrinterSettings.ToPage%2A>值以程式設計的方式，確保它們在所定義<xref:System.Drawing.Printing.PrinterSettings.MinimumPage%2A>，而且顯示<xref:System.Windows.Forms.PrintDialog>.</xref:System.Windows.Forms.PrintDialog>時擲回 MaximumPage 屬性或例外狀況</xref:System.Drawing.Printing.PrinterSettings.MinimumPage%2A>的範圍內</xref:System.Drawing.Printing.PrinterSettings.ToPage%2A></xref:System.Drawing.Printing.PrinterSettings.FromPage%2A>"
  syntax:
    content: public int MaximumPage { get; set; }
    return:
      type: System.Int32
      description: "最大值<> *> 或<> *> 中的可選取<xref href=&quot;System.Windows.Forms.PrintDialog&quot;> </xref>。"
  overload: System.Drawing.Printing.PrinterSettings.MaximumPage*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "小於零的屬性是 MaximumPage 值。"
  platform:
  - net462
- uid: System.Drawing.Printing.PrinterSettings.MinimumPage
  id: MinimumPage
  parent: System.Drawing.Printing.PrinterSettings
  langs:
  - csharp
  name: MinimumPage
  nameWithType: PrinterSettings.MinimumPage
  fullName: System.Drawing.Printing.PrinterSettings.MinimumPage
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "取得或設定最小值<> *> 或<> *> 中的可選取<xref href=&quot;System.Windows.Forms.PrintDialog&quot;> </xref>。"
  remarks: "<xref:System.Drawing.Printing.PrinterSettings.FromPage%2A>和<xref:System.Drawing.Printing.PrinterSettings.ToPage%2A>屬性由<xref:System.Windows.Forms.PrintDialog>當使用者選取列印範圍。</xref:System.Windows.Forms.PrintDialog> </xref:System.Drawing.Printing.PrinterSettings.ToPage%2A> </xref:System.Drawing.Printing.PrinterSettings.FromPage%2A> <xref:System.Windows.Forms.PrintDialog.AllowSomePages%2A?displayProperty=fullName>屬性必須設定為`true`，讓使用者指定列印範圍。</xref:System.Windows.Forms.PrintDialog.AllowSomePages%2A?displayProperty=fullName> 當設定<xref:System.Drawing.Printing.PrinterSettings.FromPage%2A>或<xref:System.Drawing.Printing.PrinterSettings.ToPage%2A>值以程式設計的方式，確保它們在 MinimumPage 和<xref:System.Drawing.Printing.PrinterSettings.MaximumPage%2A>顯示<xref:System.Windows.Forms.PrintDialog>.</xref:System.Windows.Forms.PrintDialog>時擲回屬性或例外狀況</xref:System.Drawing.Printing.PrinterSettings.MaximumPage%2A>所定義的範圍內</xref:System.Drawing.Printing.PrinterSettings.ToPage%2A></xref:System.Drawing.Printing.PrinterSettings.FromPage%2A>"
  syntax:
    content: public int MinimumPage { get; set; }
    return:
      type: System.Int32
      description: "最小值<> *> 或<> *> 中的可選取<xref href=&quot;System.Windows.Forms.PrintDialog&quot;> </xref>。"
  overload: System.Drawing.Printing.PrinterSettings.MinimumPage*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "小於零的屬性是 MinimumPage 值。"
  platform:
  - net462
- uid: System.Drawing.Printing.PrinterSettings.PaperSizes
  id: PaperSizes
  parent: System.Drawing.Printing.PrinterSettings
  langs:
  - csharp
  name: PaperSizes
  nameWithType: PrinterSettings.PaperSizes
  fullName: System.Drawing.Printing.PrinterSettings.PaperSizes
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "取得支援此印表機的紙張大小。"
  remarks: "<xref:System.Drawing.Printing.PrinterSettings.PaperSizeCollection>包含<xref:System.Drawing.Printing.PaperSize>代表透過的紙張大小的執行個體<xref:System.Drawing.Printing.PaperSize.Kind%2A?displayProperty=fullName>屬性，其中包含的其中一個<xref:System.Drawing.Printing.PaperKind>值。</xref:System.Drawing.Printing.PaperKind> </xref:System.Drawing.Printing.PaperSize.Kind%2A?displayProperty=fullName> </xref:System.Drawing.Printing.PaperSize> </xref:System.Drawing.Printing.PrinterSettings.PaperSizeCollection>       一般而言，您可以設定頁面的紙張大小，透過<xref:System.Drawing.Printing.PageSettings.PaperSize%2A?displayProperty=fullName>屬性設為有效<xref:System.Drawing.Printing.PaperSize>可透過 PaperSizes 集合。</xref:System.Drawing.Printing.PaperSize> </xref:System.Drawing.Printing.PageSettings.PaperSize%2A?displayProperty=fullName>       若要指定自訂紙張大小，請參閱<xref:System.Drawing.Printing.PaperSize.%23ctor%2A>建構函式。</xref:System.Drawing.Printing.PaperSize.%23ctor%2A>"
  example:
  - "The following code example populates the `comboPaperSize` combo box with the printer's supported paper sizes. In addition, a custom paper size is created and added to the combo box. The <xref:System.Drawing.Printing.PaperSize.PaperName%2A> is identified as the property that provides the display string for the item being added through the <xref:System.Windows.Forms.ListControl.DisplayMember%2A> property of the combo box. The example requires that a <xref:System.Drawing.Printing.PrintDocument> variable named `printDoc` exists and that the specific combo box exists.  \n  \n [!code-cs[PaperSource and PaperSize Example with Resolution#1](~/add/codesnippet/csharp/p-system.drawing.printin_17_1.cs)]\n [!code-cpp[PaperSource and PaperSize Example with Resolution#1](~/add/codesnippet/cpp/p-system.drawing.printin_17_1.cpp)]\n [!code-vb[PaperSource and PaperSize Example with Resolution#1](~/add/codesnippet/visualbasic/p-system.drawing.printin_17_1.vb)]"
  syntax:
    content: public System.Drawing.Printing.PrinterSettings.PaperSizeCollection PaperSizes { get; }
    return:
      type: System.Drawing.Printing.PrinterSettings.PaperSizeCollection
      description: "A<xref:System.Drawing.Printing.PrinterSettings.PaperSizeCollection>表示受到此印表機的紙張大小。</xref:System.Drawing.Printing.PrinterSettings.PaperSizeCollection>"
  overload: System.Drawing.Printing.PrinterSettings.PaperSizes*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrinterSettings.PaperSources
  id: PaperSources
  parent: System.Drawing.Printing.PrinterSettings
  langs:
  - csharp
  name: PaperSources
  nameWithType: PrinterSettings.PaperSources
  fullName: System.Drawing.Printing.PrinterSettings.PaperSources
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "取得可用印表機的紙張來源紙匣。"
  remarks: "<xref:System.Drawing.Printing.PrinterSettings.PaperSourceCollection>包含<xref:System.Drawing.Printing.PaperSource>執行個體，表示紙張來源紙匣透過<xref:System.Drawing.Printing.PaperSource.Kind%2A?displayProperty=fullName>屬性，其中包含的其中一個<xref:System.Drawing.Printing.PaperSourceKind>值。</xref:System.Drawing.Printing.PaperSourceKind> </xref:System.Drawing.Printing.PaperSource.Kind%2A?displayProperty=fullName> </xref:System.Drawing.Printing.PaperSource> </xref:System.Drawing.Printing.PrinterSettings.PaperSourceCollection>       一般而言，您可以設定頁面的紙張來源透過<xref:System.Drawing.Printing.PageSettings.PaperSource%2A?displayProperty=fullName>屬性設為有效<xref:System.Drawing.Printing.PaperSource>可透過 PaperSources 集合。</xref:System.Drawing.Printing.PaperSource> </xref:System.Drawing.Printing.PageSettings.PaperSource%2A?displayProperty=fullName>"
  example:
  - "The following code example populates the `comboPaperSource` combo box with the printer's supported paper sources. The <xref:System.Drawing.Printing.PaperSource.SourceName%2A> is identified as the property that provides the display string for the item being added through the <xref:System.Windows.Forms.ListControl.DisplayMember%2A> property of the combo box. The example requires that a <xref:System.Drawing.Printing.PrintDocument> variable named `printDoc` exists and that the specific combo box exists.  \n  \n [!code-cs[PaperSource and PaperSize Example with Resolution#2](~/add/codesnippet/csharp/p-system.drawing.printin_13_1.cs)]\n [!code-cpp[PaperSource and PaperSize Example with Resolution#2](~/add/codesnippet/cpp/p-system.drawing.printin_13_1.cpp)]\n [!code-vb[PaperSource and PaperSize Example with Resolution#2](~/add/codesnippet/visualbasic/p-system.drawing.printin_13_1.vb)]"
  syntax:
    content: public System.Drawing.Printing.PrinterSettings.PaperSourceCollection PaperSources { get; }
    return:
      type: System.Drawing.Printing.PrinterSettings.PaperSourceCollection
      description: "A <xref:System.Drawing.Printing.PrinterSettings.PaperSourceCollection>，代表所提供的這台印表機的紙張來源紙匣。</xref:System.Drawing.Printing.PrinterSettings.PaperSourceCollection>"
  overload: System.Drawing.Printing.PrinterSettings.PaperSources*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrinterSettings.PrinterName
  id: PrinterName
  parent: System.Drawing.Printing.PrinterSettings
  langs:
  - csharp
  name: PrinterName
  nameWithType: PrinterSettings.PrinterName
  fullName: System.Drawing.Printing.PrinterSettings.PrinterName
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "取得或設定要使用的印表機名稱。"
  remarks: "設定後的印表機名稱，請呼叫<xref:System.Drawing.Printing.PrinterSettings.IsValid%2A>來判斷是否印表機名稱被視為有效的印表機系統上。</xref:System.Drawing.Printing.PrinterSettings.IsValid%2A>       您也可以使用<xref:System.Drawing.Printing.PrinterSettings.InstalledPrinters%2A>屬性來取得系統上安裝印表機的清單。</xref:System.Drawing.Printing.PrinterSettings.InstalledPrinters%2A>"
  example:
  - "The following code example specifies the target printer by setting the PrinterName property, and if the <xref:System.Drawing.Printing.PrinterSettings.IsValid%2A> is `true`, prints the document on the specified printer. The example has three prerequisites:  \n  \n-   A variable named `filePath` has been set to the path of the file to print.  \n  \n-   A method named `pd_PrintPage`, which handles the <xref:System.Drawing.Printing.PrintDocument.PrintPage> event, has been defined.  \n  \n-   A variable named `printer` has been set to the printer's name.  \n  \n Use the <xref:System.Drawing>, <xref:System.Drawing.Printing>, and <xref:System.IO> namespaces for this example.  \n  \n [!code-cpp[Classic PrinterSettings Example#1](~/add/codesnippet/cpp/p-system.drawing.printin_11_1.cpp)]\n [!code-cs[Classic PrinterSettings Example#1](~/add/codesnippet/csharp/p-system.drawing.printin_11_1.cs)]\n [!code-vb[Classic PrinterSettings Example#1](~/add/codesnippet/visualbasic/p-system.drawing.printin_11_1.vb)]"
  syntax:
    content: public string PrinterName { get; set; }
    return:
      type: System.String
      description: "要使用的印表機名稱。"
  overload: System.Drawing.Printing.PrinterSettings.PrinterName*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrinterSettings.PrinterResolutions
  id: PrinterResolutions
  parent: System.Drawing.Printing.PrinterSettings
  langs:
  - csharp
  name: PrinterResolutions
  nameWithType: PrinterSettings.PrinterResolutions
  fullName: System.Drawing.Printing.PrinterSettings.PrinterResolutions
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "取得此印表機所支援的所有解析度。"
  remarks: "<xref:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection>包含<xref:System.Drawing.Printing.PrinterResolution>執行個體，表示透過支援的印表機解析度<xref:System.Drawing.Printing.PrinterResolution.Kind%2A?displayProperty=fullName>屬性，其中包含的其中一個<xref:System.Drawing.Printing.PrinterResolutionKind>值。</xref:System.Drawing.Printing.PrinterResolutionKind> </xref:System.Drawing.Printing.PrinterResolution.Kind%2A?displayProperty=fullName> </xref:System.Drawing.Printing.PrinterResolution> </xref:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection>       一般而言，您可以設定頁面的紙張來源透過<xref:System.Drawing.Printing.PageSettings.PrinterResolution%2A?displayProperty=fullName>屬性設為有效<xref:System.Drawing.Printing.PrinterResolution>可透過 PrinterResolutions 集合。</xref:System.Drawing.Printing.PrinterResolution> </xref:System.Drawing.Printing.PageSettings.PrinterResolution%2A?displayProperty=fullName>       如果<xref:System.Drawing.Printing.PrinterResolutionKind>是`Custom`，然後使用<xref:System.Drawing.Printing.PrinterResolution.X%2A>和<xref:System.Drawing.Printing.PrinterResolution.Y%2A>屬性，以分別決定水平和垂直方向，自訂印表機解析度。</xref:System.Drawing.Printing.PrinterResolution.Y%2A> </xref:System.Drawing.Printing.PrinterResolution.X%2A> </xref:System.Drawing.Printing.PrinterResolutionKind>"
  example:
  - "The following code example populates the `comboPrintResolution` combo box with the supported resolutions. The example requires that a <xref:System.Drawing.Printing.PrintDocument> variable named `printDoc` exists and that the specific combo box exists.  \n  \n [!code-cs[PaperSource and PaperSize Example with Resolution#3](~/add/codesnippet/csharp/p-system.drawing.printin_0_1.cs)]\n [!code-cpp[PaperSource and PaperSize Example with Resolution#3](~/add/codesnippet/cpp/p-system.drawing.printin_0_1.cpp)]\n [!code-vb[PaperSource and PaperSize Example with Resolution#3](~/add/codesnippet/visualbasic/p-system.drawing.printin_0_1.vb)]"
  syntax:
    content: public System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection PrinterResolutions { get; }
    return:
      type: System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection
      description: "A<xref:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection>表示這台印表機所支援的解決方式。</xref:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection>"
  overload: System.Drawing.Printing.PrinterSettings.PrinterResolutions*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrinterSettings.PrintFileName
  id: PrintFileName
  parent: System.Drawing.Printing.PrinterSettings
  langs:
  - csharp
  name: PrintFileName
  nameWithType: PrinterSettings.PrintFileName
  fullName: System.Drawing.Printing.PrinterSettings.PrintFileName
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "取得或設定檔案名稱，當列印至檔案。"
  syntax:
    content: public string PrintFileName { get; set; }
    return:
      type: System.String
      description: "列印到檔案時檔案名稱。"
  overload: System.Drawing.Printing.PrinterSettings.PrintFileName*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrinterSettings.PrintRange
  id: PrintRange
  parent: System.Drawing.Printing.PrinterSettings
  langs:
  - csharp
  name: PrintRange
  nameWithType: PrinterSettings.PrintRange
  fullName: System.Drawing.Printing.PrinterSettings.PrintRange
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "取得或設定使用者指定要列印的頁碼。"
  remarks: "PrintRange 屬性供<xref:System.Windows.Forms.PrintDialog>。 當使用者選取某個列印範圍。</xref:System.Windows.Forms.PrintDialog> 預設為 PrintRange `AllPages`。 若要讓使用者指定要列印的頁面範圍<xref:System.Windows.Forms.PrintDialog.AllowSomePages%2A?displayProperty=fullName>屬性必須設定為`true`。</xref:System.Windows.Forms.PrintDialog.AllowSomePages%2A?displayProperty=fullName> 若要讓使用者指定要列印選取的頁面<xref:System.Windows.Forms.PrintDialog.AllowSelection%2A?displayProperty=fullName>屬性必須設定為`true`。</xref:System.Windows.Forms.PrintDialog.AllowSelection%2A?displayProperty=fullName>       在列印的過程中，在<xref:System.Drawing.Printing.PrintDocument.PrintPage?displayProperty=fullName>事件、 檢視要列印，以判斷 PrintRange。</xref:System.Drawing.Printing.PrintDocument.PrintPage?displayProperty=fullName> 如果 PrintRange <xref:System.Drawing.Printing.PrintRange?displayProperty=fullName>，使用<xref:System.Drawing.Printing.PrinterSettings.FromPage%2A>和<xref:System.Drawing.Printing.PrinterSettings.ToPage%2A>應列印屬性，以便判斷哪些頁面。</xref:System.Drawing.Printing.PrinterSettings.ToPage%2A> </xref:System.Drawing.Printing.PrinterSettings.FromPage%2A> </xref:System.Drawing.Printing.PrintRange?displayProperty=fullName> 如果是 PrintRange <xref:System.Drawing.Printing.PrintRange?displayProperty=fullName>，然後指定 選取網頁的輸出。</xref:System.Drawing.Printing.PrintRange?displayProperty=fullName>       <xref:System.Drawing.Printing.PrinterSettings.FromPage%2A>，<xref:System.Drawing.Printing.PrinterSettings.ToPage%2A>和 PrintRange 也可以設定以程式設計的方式，雖然<xref:System.Drawing.Printing.PrintDocument.PrintPage?displayProperty=fullName>實作都相同。</xref:System.Drawing.Printing.PrintDocument.PrintPage?displayProperty=fullName> </xref:System.Drawing.Printing.PrinterSettings.ToPage%2A> </xref:System.Drawing.Printing.PrinterSettings.FromPage%2A>"
  syntax:
    content: public System.Drawing.Printing.PrintRange PrintRange { get; set; }
    return:
      type: System.Drawing.Printing.PrintRange
      description: "其中一個<xref href=&quot;System.Drawing.Printing.PrintRange&quot;></xref>值。"
  overload: System.Drawing.Printing.PrinterSettings.PrintRange*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "PrintRange 屬性的值不是其中一個<xref href=&quot;System.Drawing.Printing.PrintRange&quot;></xref>值。"
  platform:
  - net462
- uid: System.Drawing.Printing.PrinterSettings.PrintToFile
  id: PrintToFile
  parent: System.Drawing.Printing.PrinterSettings
  langs:
  - csharp
  name: PrintToFile
  nameWithType: PrinterSettings.PrintToFile
  fullName: System.Drawing.Printing.PrinterSettings.PrintToFile
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "取得或設定值，指出是否要將列印輸出傳送至檔案而不是連接埠。"
  remarks: "PrintToFile 屬性供<xref:System.Windows.Forms.PrintDialog>當使用者選取**列印至檔案**選項。</xref:System.Windows.Forms.PrintDialog> 在這種情況下，輸出連接埠設定為&quot;FILE&quot;，使 Windows 列印子系統來提示使用者輸入檔案名稱時<xref:System.Drawing.Printing.PrintDocument.Print%2A?displayProperty=fullName>方法呼叫。</xref:System.Drawing.Printing.PrintDocument.Print%2A?displayProperty=fullName>      > [!NOTE] > PrintToFile 屬性僅供<xref:System.Windows.Forms.PrintDialog>，而且無法以程式設計方式設定。</xref:System.Windows.Forms.PrintDialog> `Print to file`選項才會出現在<xref:System.Windows.Forms.PrintDialog>時<xref:System.Windows.Forms.PrintDialog.AllowPrintToFile%2A?displayProperty=fullName>屬性設定為`true`。</xref:System.Windows.Forms.PrintDialog.AllowPrintToFile%2A?displayProperty=fullName> </xref:System.Windows.Forms.PrintDialog>"
  syntax:
    content: public bool PrintToFile { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果列印的輸出會傳送到檔案。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Drawing.Printing.PrinterSettings.PrintToFile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrinterSettings.SetHdevmode(System.IntPtr)
  id: SetHdevmode(System.IntPtr)
  parent: System.Drawing.Printing.PrinterSettings
  langs:
  - csharp
  name: SetHdevmode(IntPtr)
  nameWithType: PrinterSettings.SetHdevmode(IntPtr)
  fullName: System.Drawing.Printing.PrinterSettings.SetHdevmode(IntPtr)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "將複製相關的資訊從指定的控制代碼移至<xref href=&quot;System.Drawing.Printing.PrinterSettings&quot;> </xref>。"
  remarks: '`DEVMODE`結構是特定裝置和複製`DEVMODE`結構從一個<xref:System.Drawing.Printing.PrinterSettings>至<xref:System.Drawing.Printing.PrinterSettings>不支援不同的印表機。</xref:System.Drawing.Printing.PrinterSettings> </xref:System.Drawing.Printing.PrinterSettings>'
  syntax:
    content: public void SetHdevmode (IntPtr hdevmode);
    parameters:
    - id: hdevmode
      type: System.IntPtr
      description: "對 win32 控制代碼<xref uid=&quot;langword_csharp_DEVMODE&quot; name=&quot;DEVMODE&quot; href=&quot;&quot;></xref>結構。"
  overload: System.Drawing.Printing.PrinterSettings.SetHdevmode*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "印表機控制代碼無效。"
  platform:
  - net462
- uid: System.Drawing.Printing.PrinterSettings.SetHdevnames(System.IntPtr)
  id: SetHdevnames(System.IntPtr)
  parent: System.Drawing.Printing.PrinterSettings
  langs:
  - csharp
  name: SetHdevnames(IntPtr)
  nameWithType: PrinterSettings.SetHdevnames(IntPtr)
  fullName: System.Drawing.Printing.PrinterSettings.SetHdevnames(IntPtr)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "將複製相關的資訊從指定的控制代碼移至<xref href=&quot;System.Drawing.Printing.PrinterSettings&quot;> </xref>。"
  syntax:
    content: public void SetHdevnames (IntPtr hdevnames);
    parameters:
    - id: hdevnames
      type: System.IntPtr
      description: "對 win32 控制代碼<xref uid=&quot;langword_csharp_DEVNAMES&quot; name=&quot;DEVNAMES&quot; href=&quot;&quot;></xref>結構。"
  overload: System.Drawing.Printing.PrinterSettings.SetHdevnames*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "印表機控制代碼無效。"
  platform:
  - net462
- uid: System.Drawing.Printing.PrinterSettings.SupportsColor
  id: SupportsColor
  parent: System.Drawing.Printing.PrinterSettings
  langs:
  - csharp
  name: SupportsColor
  nameWithType: PrinterSettings.SupportsColor
  fullName: System.Drawing.Printing.PrinterSettings.SupportsColor
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "取得值，指出是否此印表機支援彩色列印。"
  remarks: "使用色彩，以及如果印表機支援它，請設定<xref:System.Drawing.Printing.PageSettings.Color%2A?displayProperty=fullName>至`true`。</xref:System.Drawing.Printing.PageSettings.Color%2A?displayProperty=fullName>"
  example:
  - "The following code example prints a document with the first page in color, if the printer supports it. The example requires that a <xref:System.Drawing.Printing.PrintDocument> variable named `printDoc` has been created, and the <xref:System.Drawing.Printing.PrintDocument.PrintPage> and <xref:System.Drawing.Printing.PrintDocument.QueryPageSettings> events are handled.  \n  \n Use the <xref:System.Drawing> and <xref:System.Drawing.Printing> namespaces for this example.  \n  \n [!code-cs[PaperSource and PaperSize Example with Resolution#6](~/add/codesnippet/csharp/p-system.drawing.printin_15_1.cs)]\n [!code-cpp[PaperSource and PaperSize Example with Resolution#6](~/add/codesnippet/cpp/p-system.drawing.printin_15_1.cpp)]\n [!code-vb[PaperSource and PaperSize Example with Resolution#6](~/add/codesnippet/visualbasic/p-system.drawing.printin_15_1.vb)]"
  syntax:
    content: public bool SupportsColor { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果此印表機支援彩色;否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Drawing.Printing.PrinterSettings.SupportsColor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrinterSettings.ToPage
  id: ToPage
  parent: System.Drawing.Printing.PrinterSettings
  langs:
  - csharp
  name: ToPage
  nameWithType: PrinterSettings.ToPage
  fullName: System.Drawing.Printing.PrinterSettings.ToPage
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "取得或設定要列印的最後一頁的數目。"
  remarks: "<xref:System.Drawing.Printing.PrinterSettings.FromPage%2A>，且為用於儲存 ToPage 屬性由<xref:System.Windows.Forms.PrintDialog>當使用者選取列印範圍。</xref:System.Windows.Forms.PrintDialog> </xref:System.Drawing.Printing.PrinterSettings.FromPage%2A> <xref:System.Windows.Forms.PrintDialog.AllowSomePages%2A?displayProperty=fullName>屬性必須設定為`true`，讓使用者指定列印範圍。</xref:System.Windows.Forms.PrintDialog.AllowSomePages%2A?displayProperty=fullName> 此外，<xref:System.Windows.Forms.PrintDialog>也需要<xref:System.Drawing.Printing.PrinterSettings.MinimumPage%2A>和<xref:System.Drawing.Printing.PrinterSettings.MaximumPage%2A>指定和為用於儲存 ToPage 值到該範圍內。</xref:System.Drawing.Printing.PrinterSettings.MaximumPage%2A> </xref:System.Drawing.Printing.PrinterSettings.MinimumPage%2A> </xref:System.Windows.Forms.PrintDialog>       在列印的過程中，在<xref:System.Drawing.Printing.PrintDocument.PrintPage?displayProperty=fullName>事件、 檢視<xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A>來判斷應列印。</xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A> </xref:System.Drawing.Printing.PrintDocument.PrintPage?displayProperty=fullName> 如果<xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A>是<xref:System.Drawing.Printing.PrintRange?displayProperty=fullName>，使用<xref:System.Drawing.Printing.PrinterSettings.FromPage%2A>且為用於儲存 ToPage 屬性，以決定頁面應該會列印。</xref:System.Drawing.Printing.PrinterSettings.FromPage%2A> </xref:System.Drawing.Printing.PrintRange?displayProperty=fullName> </xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A> 如果<xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A>是<xref:System.Drawing.Printing.PrintRange?displayProperty=fullName>，然後指定 選取網頁的輸出。</xref:System.Drawing.Printing.PrintRange?displayProperty=fullName> </xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A>       <xref:System.Drawing.Printing.PrinterSettings.FromPage%2A>，為用於儲存 ToPage 和<xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A>也可以設定以程式設計的方式，雖然<xref:System.Drawing.Printing.PrintDocument.PrintPage?displayProperty=fullName>實作都相同。</xref:System.Drawing.Printing.PrintDocument.PrintPage?displayProperty=fullName> </xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A> </xref:System.Drawing.Printing.PrinterSettings.FromPage%2A>"
  syntax:
    content: public int ToPage { get; set; }
    return:
      type: System.Int32
      description: "若要列印的最後一頁數目。"
  overload: System.Drawing.Printing.PrinterSettings.ToPage*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "小於零的值為用於儲存 ToPage 值。"
  platform:
  - net462
- uid: System.Drawing.Printing.PrinterSettings.ToString
  id: ToString
  parent: System.Drawing.Printing.PrinterSettings
  langs:
  - csharp
  name: ToString()
  nameWithType: PrinterSettings.ToString()
  fullName: System.Drawing.Printing.PrinterSettings.ToString()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "相關資訊提供<xref href=&quot;System.Drawing.Printing.PrinterSettings&quot;></xref>以字串形式。"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "字串。"
  overload: System.Drawing.Printing.PrinterSettings.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Drawing.Printing.InvalidPrinterException
  parent: System.Drawing.Printing
  isExternal: false
  name: InvalidPrinterException
  nameWithType: InvalidPrinterException
  fullName: System.Drawing.Printing.InvalidPrinterException
- uid: System.ComponentModel.InvalidEnumArgumentException
  parent: System.ComponentModel
  isExternal: false
  name: InvalidEnumArgumentException
  nameWithType: InvalidEnumArgumentException
  fullName: System.ComponentModel.InvalidEnumArgumentException
- uid: System.ComponentModel.Win32Exception
  parent: System.ComponentModel
  isExternal: false
  name: Win32Exception
  nameWithType: Win32Exception
  fullName: System.ComponentModel.Win32Exception
- uid: System.Drawing.Printing.PrinterSettings.#ctor
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: PrinterSettings()
  nameWithType: PrinterSettings.PrinterSettings()
  fullName: System.Drawing.Printing.PrinterSettings.PrinterSettings()
- uid: System.Drawing.Printing.PrinterSettings.CanDuplex
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: CanDuplex
  nameWithType: PrinterSettings.CanDuplex
  fullName: System.Drawing.Printing.PrinterSettings.CanDuplex
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Drawing.Printing.PrinterSettings.Clone
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: Clone()
  nameWithType: PrinterSettings.Clone()
  fullName: System.Drawing.Printing.PrinterSettings.Clone()
- uid: System.Drawing.Printing.PrinterSettings.Collate
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: Collate
  nameWithType: PrinterSettings.Collate
  fullName: System.Drawing.Printing.PrinterSettings.Collate
- uid: System.Drawing.Printing.PrinterSettings.Copies
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: Copies
  nameWithType: PrinterSettings.Copies
  fullName: System.Drawing.Printing.PrinterSettings.Copies
- uid: System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: CreateMeasurementGraphics()
  nameWithType: PrinterSettings.CreateMeasurementGraphics()
  fullName: System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics()
- uid: System.Drawing.Graphics
  parent: System.Drawing
  isExternal: false
  name: Graphics
  nameWithType: Graphics
  fullName: System.Drawing.Graphics
- uid: System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics(System.Boolean)
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: CreateMeasurementGraphics(Boolean)
  nameWithType: PrinterSettings.CreateMeasurementGraphics(Boolean)
  fullName: System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics(Boolean)
- uid: System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics(System.Drawing.Printing.PageSettings)
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: CreateMeasurementGraphics(PageSettings)
  nameWithType: PrinterSettings.CreateMeasurementGraphics(PageSettings)
  fullName: System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics(PageSettings)
- uid: System.Drawing.Printing.PageSettings
  parent: System.Drawing.Printing
  isExternal: false
  name: PageSettings
  nameWithType: PageSettings
  fullName: System.Drawing.Printing.PageSettings
- uid: System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics(System.Drawing.Printing.PageSettings,System.Boolean)
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: CreateMeasurementGraphics(PageSettings,Boolean)
  nameWithType: PrinterSettings.CreateMeasurementGraphics(PageSettings,Boolean)
  fullName: System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics(PageSettings,Boolean)
- uid: System.Drawing.Printing.PrinterSettings.DefaultPageSettings
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: DefaultPageSettings
  nameWithType: PrinterSettings.DefaultPageSettings
  fullName: System.Drawing.Printing.PrinterSettings.DefaultPageSettings
- uid: System.Drawing.Printing.PrinterSettings.Duplex
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: Duplex
  nameWithType: PrinterSettings.Duplex
  fullName: System.Drawing.Printing.PrinterSettings.Duplex
- uid: System.Drawing.Printing.Duplex
  parent: System.Drawing.Printing
  isExternal: false
  name: Duplex
  nameWithType: Duplex
  fullName: System.Drawing.Printing.Duplex
- uid: System.Drawing.Printing.PrinterSettings.FromPage
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: FromPage
  nameWithType: PrinterSettings.FromPage
  fullName: System.Drawing.Printing.PrinterSettings.FromPage
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Drawing.Printing.PrinterSettings.GetHdevmode
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: GetHdevmode()
  nameWithType: PrinterSettings.GetHdevmode()
  fullName: System.Drawing.Printing.PrinterSettings.GetHdevmode()
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Drawing.Printing.PrinterSettings.GetHdevmode(System.Drawing.Printing.PageSettings)
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: GetHdevmode(PageSettings)
  nameWithType: PrinterSettings.GetHdevmode(PageSettings)
  fullName: System.Drawing.Printing.PrinterSettings.GetHdevmode(PageSettings)
- uid: System.Drawing.Printing.PrinterSettings.GetHdevnames
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: GetHdevnames()
  nameWithType: PrinterSettings.GetHdevnames()
  fullName: System.Drawing.Printing.PrinterSettings.GetHdevnames()
- uid: System.Drawing.Printing.PrinterSettings.InstalledPrinters
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: InstalledPrinters
  nameWithType: PrinterSettings.InstalledPrinters
  fullName: System.Drawing.Printing.PrinterSettings.InstalledPrinters
- uid: System.Drawing.Printing.PrinterSettings.StringCollection
  parent: System.Drawing.Printing
  isExternal: false
  name: PrinterSettings+StringCollection
  nameWithType: PrinterSettings+StringCollection
  fullName: System.Drawing.Printing.PrinterSettings+StringCollection
- uid: System.Drawing.Printing.PrinterSettings.IsDefaultPrinter
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: IsDefaultPrinter
  nameWithType: PrinterSettings.IsDefaultPrinter
  fullName: System.Drawing.Printing.PrinterSettings.IsDefaultPrinter
- uid: System.Drawing.Printing.PrinterSettings.IsDirectPrintingSupported(System.Drawing.Image)
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: IsDirectPrintingSupported(Image)
  nameWithType: PrinterSettings.IsDirectPrintingSupported(Image)
  fullName: System.Drawing.Printing.PrinterSettings.IsDirectPrintingSupported(Image)
- uid: System.Drawing.Image
  parent: System.Drawing
  isExternal: false
  name: Image
  nameWithType: Image
  fullName: System.Drawing.Image
- uid: System.Drawing.Printing.PrinterSettings.IsDirectPrintingSupported(System.Drawing.Imaging.ImageFormat)
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: IsDirectPrintingSupported(ImageFormat)
  nameWithType: PrinterSettings.IsDirectPrintingSupported(ImageFormat)
  fullName: System.Drawing.Printing.PrinterSettings.IsDirectPrintingSupported(ImageFormat)
- uid: System.Drawing.Imaging.ImageFormat
  parent: System.Drawing.Imaging
  isExternal: false
  name: ImageFormat
  nameWithType: ImageFormat
  fullName: System.Drawing.Imaging.ImageFormat
- uid: System.Drawing.Printing.PrinterSettings.IsPlotter
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: IsPlotter
  nameWithType: PrinterSettings.IsPlotter
  fullName: System.Drawing.Printing.PrinterSettings.IsPlotter
- uid: System.Drawing.Printing.PrinterSettings.IsValid
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: IsValid
  nameWithType: PrinterSettings.IsValid
  fullName: System.Drawing.Printing.PrinterSettings.IsValid
- uid: System.Drawing.Printing.PrinterSettings.LandscapeAngle
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: LandscapeAngle
  nameWithType: PrinterSettings.LandscapeAngle
  fullName: System.Drawing.Printing.PrinterSettings.LandscapeAngle
- uid: System.Drawing.Printing.PrinterSettings.MaximumCopies
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: MaximumCopies
  nameWithType: PrinterSettings.MaximumCopies
  fullName: System.Drawing.Printing.PrinterSettings.MaximumCopies
- uid: System.Drawing.Printing.PrinterSettings.MaximumPage
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: MaximumPage
  nameWithType: PrinterSettings.MaximumPage
  fullName: System.Drawing.Printing.PrinterSettings.MaximumPage
- uid: System.Drawing.Printing.PrinterSettings.MinimumPage
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: MinimumPage
  nameWithType: PrinterSettings.MinimumPage
  fullName: System.Drawing.Printing.PrinterSettings.MinimumPage
- uid: System.Drawing.Printing.PrinterSettings.PaperSizes
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: PaperSizes
  nameWithType: PrinterSettings.PaperSizes
  fullName: System.Drawing.Printing.PrinterSettings.PaperSizes
- uid: System.Drawing.Printing.PrinterSettings.PaperSizeCollection
  parent: System.Drawing.Printing
  isExternal: false
  name: PrinterSettings+PaperSizeCollection
  nameWithType: PrinterSettings+PaperSizeCollection
  fullName: System.Drawing.Printing.PrinterSettings+PaperSizeCollection
- uid: System.Drawing.Printing.PrinterSettings.PaperSources
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: PaperSources
  nameWithType: PrinterSettings.PaperSources
  fullName: System.Drawing.Printing.PrinterSettings.PaperSources
- uid: System.Drawing.Printing.PrinterSettings.PaperSourceCollection
  parent: System.Drawing.Printing
  isExternal: false
  name: PrinterSettings+PaperSourceCollection
  nameWithType: PrinterSettings+PaperSourceCollection
  fullName: System.Drawing.Printing.PrinterSettings+PaperSourceCollection
- uid: System.Drawing.Printing.PrinterSettings.PrinterName
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: PrinterName
  nameWithType: PrinterSettings.PrinterName
  fullName: System.Drawing.Printing.PrinterSettings.PrinterName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Drawing.Printing.PrinterSettings.PrinterResolutions
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: PrinterResolutions
  nameWithType: PrinterSettings.PrinterResolutions
  fullName: System.Drawing.Printing.PrinterSettings.PrinterResolutions
- uid: System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection
  parent: System.Drawing.Printing
  isExternal: false
  name: PrinterSettings+PrinterResolutionCollection
  nameWithType: PrinterSettings+PrinterResolutionCollection
  fullName: System.Drawing.Printing.PrinterSettings+PrinterResolutionCollection
- uid: System.Drawing.Printing.PrinterSettings.PrintFileName
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: PrintFileName
  nameWithType: PrinterSettings.PrintFileName
  fullName: System.Drawing.Printing.PrinterSettings.PrintFileName
- uid: System.Drawing.Printing.PrinterSettings.PrintRange
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: PrintRange
  nameWithType: PrinterSettings.PrintRange
  fullName: System.Drawing.Printing.PrinterSettings.PrintRange
- uid: System.Drawing.Printing.PrintRange
  parent: System.Drawing.Printing
  isExternal: false
  name: PrintRange
  nameWithType: PrintRange
  fullName: System.Drawing.Printing.PrintRange
- uid: System.Drawing.Printing.PrinterSettings.PrintToFile
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: PrintToFile
  nameWithType: PrinterSettings.PrintToFile
  fullName: System.Drawing.Printing.PrinterSettings.PrintToFile
- uid: System.Drawing.Printing.PrinterSettings.SetHdevmode(System.IntPtr)
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: SetHdevmode(IntPtr)
  nameWithType: PrinterSettings.SetHdevmode(IntPtr)
  fullName: System.Drawing.Printing.PrinterSettings.SetHdevmode(IntPtr)
- uid: System.Drawing.Printing.PrinterSettings.SetHdevnames(System.IntPtr)
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: SetHdevnames(IntPtr)
  nameWithType: PrinterSettings.SetHdevnames(IntPtr)
  fullName: System.Drawing.Printing.PrinterSettings.SetHdevnames(IntPtr)
- uid: System.Drawing.Printing.PrinterSettings.SupportsColor
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: SupportsColor
  nameWithType: PrinterSettings.SupportsColor
  fullName: System.Drawing.Printing.PrinterSettings.SupportsColor
- uid: System.Drawing.Printing.PrinterSettings.ToPage
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: ToPage
  nameWithType: PrinterSettings.ToPage
  fullName: System.Drawing.Printing.PrinterSettings.ToPage
- uid: System.Drawing.Printing.PrinterSettings.ToString
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: ToString()
  nameWithType: PrinterSettings.ToString()
  fullName: System.Drawing.Printing.PrinterSettings.ToString()
- uid: System.Drawing.Printing.PrinterSettings.#ctor*
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: PrinterSettings
  nameWithType: PrinterSettings.PrinterSettings
- uid: System.Drawing.Printing.PrinterSettings.CanDuplex*
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: CanDuplex
  nameWithType: PrinterSettings.CanDuplex
- uid: System.Drawing.Printing.PrinterSettings.Clone*
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: Clone
  nameWithType: PrinterSettings.Clone
- uid: System.Drawing.Printing.PrinterSettings.Collate*
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: Collate
  nameWithType: PrinterSettings.Collate
- uid: System.Drawing.Printing.PrinterSettings.Copies*
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: Copies
  nameWithType: PrinterSettings.Copies
- uid: System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics*
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: CreateMeasurementGraphics
  nameWithType: PrinterSettings.CreateMeasurementGraphics
- uid: System.Drawing.Printing.PrinterSettings.DefaultPageSettings*
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: DefaultPageSettings
  nameWithType: PrinterSettings.DefaultPageSettings
- uid: System.Drawing.Printing.PrinterSettings.Duplex*
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: Duplex
  nameWithType: PrinterSettings.Duplex
- uid: System.Drawing.Printing.PrinterSettings.FromPage*
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: FromPage
  nameWithType: PrinterSettings.FromPage
- uid: System.Drawing.Printing.PrinterSettings.GetHdevmode*
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: GetHdevmode
  nameWithType: PrinterSettings.GetHdevmode
- uid: System.Drawing.Printing.PrinterSettings.GetHdevnames*
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: GetHdevnames
  nameWithType: PrinterSettings.GetHdevnames
- uid: System.Drawing.Printing.PrinterSettings.InstalledPrinters*
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: InstalledPrinters
  nameWithType: PrinterSettings.InstalledPrinters
- uid: System.Drawing.Printing.PrinterSettings.IsDefaultPrinter*
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: IsDefaultPrinter
  nameWithType: PrinterSettings.IsDefaultPrinter
- uid: System.Drawing.Printing.PrinterSettings.IsDirectPrintingSupported*
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: IsDirectPrintingSupported
  nameWithType: PrinterSettings.IsDirectPrintingSupported
- uid: System.Drawing.Printing.PrinterSettings.IsPlotter*
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: IsPlotter
  nameWithType: PrinterSettings.IsPlotter
- uid: System.Drawing.Printing.PrinterSettings.IsValid*
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: IsValid
  nameWithType: PrinterSettings.IsValid
- uid: System.Drawing.Printing.PrinterSettings.LandscapeAngle*
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: LandscapeAngle
  nameWithType: PrinterSettings.LandscapeAngle
- uid: System.Drawing.Printing.PrinterSettings.MaximumCopies*
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: MaximumCopies
  nameWithType: PrinterSettings.MaximumCopies
- uid: System.Drawing.Printing.PrinterSettings.MaximumPage*
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: MaximumPage
  nameWithType: PrinterSettings.MaximumPage
- uid: System.Drawing.Printing.PrinterSettings.MinimumPage*
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: MinimumPage
  nameWithType: PrinterSettings.MinimumPage
- uid: System.Drawing.Printing.PrinterSettings.PaperSizes*
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: PaperSizes
  nameWithType: PrinterSettings.PaperSizes
- uid: System.Drawing.Printing.PrinterSettings.PaperSources*
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: PaperSources
  nameWithType: PrinterSettings.PaperSources
- uid: System.Drawing.Printing.PrinterSettings.PrinterName*
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: PrinterName
  nameWithType: PrinterSettings.PrinterName
- uid: System.Drawing.Printing.PrinterSettings.PrinterResolutions*
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: PrinterResolutions
  nameWithType: PrinterSettings.PrinterResolutions
- uid: System.Drawing.Printing.PrinterSettings.PrintFileName*
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: PrintFileName
  nameWithType: PrinterSettings.PrintFileName
- uid: System.Drawing.Printing.PrinterSettings.PrintRange*
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: PrintRange
  nameWithType: PrinterSettings.PrintRange
- uid: System.Drawing.Printing.PrinterSettings.PrintToFile*
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: PrintToFile
  nameWithType: PrinterSettings.PrintToFile
- uid: System.Drawing.Printing.PrinterSettings.SetHdevmode*
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: SetHdevmode
  nameWithType: PrinterSettings.SetHdevmode
- uid: System.Drawing.Printing.PrinterSettings.SetHdevnames*
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: SetHdevnames
  nameWithType: PrinterSettings.SetHdevnames
- uid: System.Drawing.Printing.PrinterSettings.SupportsColor*
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: SupportsColor
  nameWithType: PrinterSettings.SupportsColor
- uid: System.Drawing.Printing.PrinterSettings.ToPage*
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: ToPage
  nameWithType: PrinterSettings.ToPage
- uid: System.Drawing.Printing.PrinterSettings.ToString*
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: ToString
  nameWithType: PrinterSettings.ToString
