### YamlMime:ManagedReference
items:
- uid: System.Web.Security.FormsAuthentication
  id: FormsAuthentication
  children:
  - System.Web.Security.FormsAuthentication.#ctor
  - System.Web.Security.FormsAuthentication.Authenticate(System.String,System.String)
  - System.Web.Security.FormsAuthentication.CookieDomain
  - System.Web.Security.FormsAuthentication.CookieMode
  - System.Web.Security.FormsAuthentication.CookiesSupported
  - System.Web.Security.FormsAuthentication.Decrypt(System.String)
  - System.Web.Security.FormsAuthentication.DefaultUrl
  - System.Web.Security.FormsAuthentication.EnableCrossAppRedirects
  - System.Web.Security.FormsAuthentication.EnableFormsAuthentication(System.Collections.Specialized.NameValueCollection)
  - System.Web.Security.FormsAuthentication.Encrypt(System.Web.Security.FormsAuthenticationTicket)
  - System.Web.Security.FormsAuthentication.FormsCookieName
  - System.Web.Security.FormsAuthentication.FormsCookiePath
  - System.Web.Security.FormsAuthentication.GetAuthCookie(System.String,System.Boolean)
  - System.Web.Security.FormsAuthentication.GetAuthCookie(System.String,System.Boolean,System.String)
  - System.Web.Security.FormsAuthentication.GetRedirectUrl(System.String,System.Boolean)
  - System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile(System.String,System.String)
  - System.Web.Security.FormsAuthentication.Initialize
  - System.Web.Security.FormsAuthentication.IsEnabled
  - System.Web.Security.FormsAuthentication.LoginUrl
  - System.Web.Security.FormsAuthentication.RedirectFromLoginPage(System.String,System.Boolean)
  - System.Web.Security.FormsAuthentication.RedirectFromLoginPage(System.String,System.Boolean,System.String)
  - System.Web.Security.FormsAuthentication.RedirectToLoginPage
  - System.Web.Security.FormsAuthentication.RedirectToLoginPage(System.String)
  - System.Web.Security.FormsAuthentication.RenewTicketIfOld(System.Web.Security.FormsAuthenticationTicket)
  - System.Web.Security.FormsAuthentication.RequireSSL
  - System.Web.Security.FormsAuthentication.SetAuthCookie(System.String,System.Boolean)
  - System.Web.Security.FormsAuthentication.SetAuthCookie(System.String,System.Boolean,System.String)
  - System.Web.Security.FormsAuthentication.SignOut
  - System.Web.Security.FormsAuthentication.SlidingExpiration
  - System.Web.Security.FormsAuthentication.TicketCompatibilityMode
  - System.Web.Security.FormsAuthentication.Timeout
  langs:
  - csharp
  name: FormsAuthentication
  nameWithType: FormsAuthentication
  fullName: System.Web.Security.FormsAuthentication
  type: Class
  summary: "管理 Web 應用程式的表單驗證服務。 這個類別無法被繼承。"
  remarks: "表單驗證可讓使用者和密碼驗證的 Web 應用程式不需要 Windows 驗證。 使用表單驗證，使用者資訊會儲存在外部資料來源，例如<xref:System.Web.Security.Membership>資料庫，或在應用程式的組態檔中。</xref:System.Web.Security.Membership> 一旦使用者通過驗證時，表單驗證會維護在 cookie 或在 URL 中的驗證票證，因此不需要提供每個要求的認證通過驗證的使用者。       藉由設定啟用表單驗證`mode`屬性的組態項目`Forms`。 您可以要求對應用程式的所有要求都包含有效的使用者驗證票證，以拒絕任何未知的使用者要求使用的組態項目，如下列範例所示。      ```   <system.web>     <authentication mode=&quot;Forms&quot;>       <forms loginUrl=&quot;login.aspx&quot; />     </authentication>     <authorization>       <deny users=&quot;?&quot; />     </authorization>   </system.web>   ```在上述範例中，任何屬於應用程式的 ASP.NET 網頁的要求需要表單驗證所提供的有效使用者名稱。 如果不有任何使用者名稱，然後要求重新導向至設定<xref:System.Web.Security.FormsAuthentication.LoginUrl%2A>。</xref:System.Web.Security.FormsAuthentication.LoginUrl%2A>       依存取方法和屬性，您可以使用驗證使用者的應用程式中的方法。 <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A>方法將瀏覽器重新導向至設定<xref:System.Web.Security.FormsAuthentication.LoginUrl%2A>使用者能夠登入應用程式。</xref:System.Web.Security.FormsAuthentication.LoginUrl%2A> </xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A>方法會將重新導向回到原始的受保護 URL 的要求，或至<xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>。</xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>已驗證的使用者</xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> 也有必要時可讓您管理表單驗證票證的方法。"
  example:
  - "The following code example shows the Web.config file for an ASP.NET application that uses the ASP.NET membership provider for forms authentication and requires all users to be authenticated.  \n  \n```  \n<configuration>  \n  <connectionStrings>  \n    <add name=\"SqlServices\" connectionString=\"Data Source=MySqlServer;Integrated Security=SSPI;Initial Catalog=aspnetdb;\" />  \n  </connectionStrings>  \n  <system.web>  \n    <membership defaultProvider=\"SqlProvider\" userIsOnlineTimeWindow=\"20\">  \n      <providers>  \n        <add name=\"SqlProvider\"  \n          type=\"System.Web.Security.SqlMembershipProvider\"  \n          connectionStringName=\"SqlServices\"  \n          enablePasswordRetrieval=\"false\"  \n          enablePasswordReset=\"true\"  \n          requiresQuestionAndAnswer=\"true\"  \n          passwordFormat=\"Hashed\"  \n          applicationName=\"/\" />  \n      </providers>  \n    </membership>  \n  </system.web>  \n</configuration>  \n```  \n  \n The following code example shows the login page for an ASP.NET application that uses forms authentication and ASP.NET membership.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#1](~/add/codesnippet/csharp/t-system.web.security.fo_5_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#1](~/add/codesnippet/visualbasic/t-system.web.security.fo_5_1.aspx)]"
  syntax:
    content: public sealed class FormsAuthentication
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.#ctor
  id: '#ctor'
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: FormsAuthentication()
  nameWithType: FormsAuthentication.FormsAuthentication()
  fullName: System.Web.Security.FormsAuthentication.FormsAuthentication()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "初始化的新執行個體<xref href=&quot;System.Web.Security.FormsAuthentication&quot;></xref>類別。"
  remarks: "這個建構函式不是從您的程式碼使用。"
  syntax:
    content: public FormsAuthentication ();
    parameters: []
  overload: System.Web.Security.FormsAuthentication.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.Authenticate(System.String,System.String)
  id: Authenticate(System.String,System.String)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: Authenticate(String,String)
  nameWithType: FormsAuthentication.Authenticate(String,String)
  fullName: System.Web.Security.FormsAuthentication.Authenticate(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "驗證的使用者名稱和密碼，對應用程式組態檔中儲存的認證。"
  remarks: "驗證方法驗證使用者認證儲存在應用程式組態檔的區段中。 或者，您可以使用 ASP.NET 成員資格，來儲存使用者認證和呼叫<xref:System.Web.Security.MembershipProvider.ValidateUser%2A>驗證認證。</xref:System.Web.Security.MembershipProvider.ValidateUser%2A> 如需詳細資訊，請參閱[使用成員資格管理使用者](~/add/includes/ajax-current-ext-md.md)。       為了提升安全性，您可以加密儲存在應用程式的組態檔中使用的密碼<xref:System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile%2A>方法。</xref:System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile%2A>"
  example:
  - "The following code example shows user credentials stored in the Web.config file for an application. The password values have been hashed using the <xref:System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile%2A> method.  \n  \n `<authentication mode=\"Forms\">`  \n  \n `<forms loginUrl=\"login.aspx\">`  \n  \n `<credentials passwordFormat=\"SHA1\">`  \n  \n `<user name=\"user1\"   password=\"27CE4CA7FBF00685AF2F617E3F5BBCAFF7B7403C\" />`  \n  \n `<user name=\"user2\"   password=\"D108F80936F78DFDD333141EBC985B0233A30C7A\" />`  \n  \n `<user name=\"user3\" password=\"7BDB09781A3F23885CD43177C0508B375CB1B7E9\"/>`  \n  \n `</credentials>`  \n  \n `</forms>`  \n  \n `</authentication>`  \n  \n The following code example shows a login page that uses the Authenticate method to validate user credentials.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Web.Security.FormsAuthentication#1](~/add/codesnippet/visualbasic/5b51c766-1819-4817-a951-_1.aspx)]\n [!code-cs[System.Web.Security.FormsAuthentication#1](~/add/codesnippet/csharp/5b51c766-1819-4817-a951-_1.aspx)]"
  syntax:
    content: public static bool Authenticate (string name, string password);
    parameters:
    - id: name
      type: System.String
      description: "使用者名稱。"
    - id: password
      type: System.String
      description: "使用者的密碼。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果使用者名稱和密碼是有效的。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.Security.FormsAuthentication.Authenticate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.CookieDomain
  id: CookieDomain
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: CookieDomain
  nameWithType: FormsAuthentication.CookieDomain
  fullName: System.Web.Security.FormsAuthentication.CookieDomain
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "取得表單驗證 cookie 的網域值。"
  remarks: "CookieDomain 屬性值設定為 ASP.NET 應用程式組態檔中使用`domain`組態項目的屬性。 CookieDomain 屬性值決定的<xref:System.Web.HttpCookie.Domain%2A>cookie，將會使用的 for...in</xref:System.Web.HttpCookie.Domain%2A>"
  example:
  - "The following code example sets the `domain` attribute in the Web.config file.  \n  \n```  \n<authentication mode=\"Forms\">  \n  <forms loginUrl=\"member_login.aspx\"  \n    cookieless=\"UseCookies\"  \n    domain=\"contoso.com\" />  \n</authentication>  \n```"
  syntax:
    content: public static string CookieDomain { get; }
    return:
      type: System.String
      description: "<xref:System.Web.HttpCookie.Domain*>的表單驗證 cookie。</xref:System.Web.HttpCookie.Domain*> 預設為空字串 (&quot;&quot;)。"
  overload: System.Web.Security.FormsAuthentication.CookieDomain*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.CookieMode
  id: CookieMode
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: CookieMode
  nameWithType: FormsAuthentication.CookieMode
  fullName: System.Web.Security.FormsAuthentication.CookieMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "取得值，指出是否針對無 cookie 表單驗證設定應用程式。"
  remarks: "CookieMode 屬性會反映值`cookieless`組態項目的屬性。 CookieMode 屬性會決定是否<xref:System.Web.Security.FormsAuthenticationTicket>值將會在瀏覽器工作階段 cookie 中儲存或儲存在<xref:System.Web.HttpRequest.QueryString%2A>屬性。</xref:System.Web.HttpRequest.QueryString%2A> </xref:System.Web.Security.FormsAuthenticationTicket>      > [!NOTE] > 時<xref:System.Web.Security.FormsAuthenticationTicket>值會儲存在 URI 中，所產生的 URI 的長度可能超過允許的最大長度。</xref:System.Web.Security.FormsAuthenticationTicket> 這是最有可能發生當<xref:System.Web.Security.FormsAuthentication.FormsCookiePath%2A>屬性設定為應用程式名稱和應用程式名稱過長 （40 或多個字元），當應用程式中的使用者名稱很長，或當長<xref:System.Web.Security.FormsAuthenticationTicket.UserData%2A>字串會儲存在<xref:System.Web.Security.FormsAuthenticationTicket>值。</xref:System.Web.Security.FormsAuthenticationTicket> </xref:System.Web.Security.FormsAuthenticationTicket.UserData%2A> </xref:System.Web.Security.FormsAuthentication.FormsCookiePath%2A> 如果所產生的 URI 太長，網頁伺服器會傳回`400 - Bad Request`錯誤。"
  example:
  - "The following code example sets the `cookieless` attribute to `AutoDetect` in the Web.config file.  \n  \n```  \n<authentication mode=\"Forms\">  \n  <forms loginUrl=\"member_login.aspx\"  \n    cookieless=\"AutoDetect\" />  \n</authentication>  \n```"
  syntax:
    content: public static System.Web.HttpCookieMode CookieMode { get; }
    return:
      type: System.Web.HttpCookieMode
      description: "其中一個<xref href=&quot;System.Web.HttpCookieMode&quot;></xref>值，指出是否針對無 cookie 表單驗證設定應用程式。 預設值是<xref href=&quot;System.Web.HttpCookieMode&quot;> </xref>。"
  overload: System.Web.Security.FormsAuthentication.CookieMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.CookiesSupported
  id: CookiesSupported
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: CookiesSupported
  nameWithType: FormsAuthentication.CookiesSupported
  fullName: System.Web.Security.FormsAuthentication.CookiesSupported
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "取得值，指出是否要將應用程式設定為支援 cookie 的表單驗證。"
  remarks: "CookiesSupported 屬性會傳回值，根據<xref:System.Web.Security.FormsAuthentication.CookieMode%2A>值和之瀏覽器的功能。</xref:System.Web.Security.FormsAuthentication.CookieMode%2A>      -如果<xref:System.Web.Security.FormsAuthentication.CookieMode%2A>屬性設定為<xref:System.Web.HttpCookieMode>，CookiesSupported 屬性會傳回`true`。</xref:System.Web.HttpCookieMode> </xref:System.Web.Security.FormsAuthentication.CookieMode%2A>      -如果<xref:System.Web.Security.FormsAuthentication.CookieMode%2A>屬性設定為<xref:System.Web.HttpCookieMode>，CookiesSupported 屬性會傳回`false`。</xref:System.Web.HttpCookieMode> </xref:System.Web.Security.FormsAuthentication.CookieMode%2A>      -如果<xref:System.Web.Security.FormsAuthentication.CookieMode%2A>屬性設定為<xref:System.Web.HttpCookieMode>，CookiesSupported 屬性會傳回`true`如果瀏覽器支援 cookie，而且已啟用 cookie; 否則，CookiesSupported 屬性會傳回`false`。</xref:System.Web.HttpCookieMode> </xref:System.Web.Security.FormsAuthentication.CookieMode%2A>      -如果<xref:System.Web.Security.FormsAuthentication.CookieMode%2A>屬性設定為<xref:System.Web.HttpCookieMode>，CookiesSupported 屬性會傳回`true`如果<xref:System.Web.HttpRequest.Browser%2A>目前<xref:System.Web.HttpContext.Request%2A>支援 cookie 和重新導向與 cookie; 否則會傳回 CookiesSupported 屬性`false`。</xref:System.Web.HttpContext.Request%2A> </xref:System.Web.HttpRequest.Browser%2A> </xref:System.Web.HttpCookieMode> </xref:System.Web.Security.FormsAuthentication.CookieMode%2A>"
  example:
  - "The following code example sets the `cookieless` attribute to <xref:System.Web.HttpCookieMode> in the Web.config file. This configuration will result in the CookiesSupported property returning `false`.  \n  \n```  \n<authentication mode=\"Forms\">  \n  <forms loginUrl=\"member_login.aspx\"  \n    cookieless=\"UseUri\" />  \n</authentication>  \n```"
  syntax:
    content: public static bool CookiesSupported { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>如果應用程式設定為支援 cookie 的表單驗證。否則， <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.Security.FormsAuthentication.CookiesSupported*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.Decrypt(System.String)
  id: Decrypt(System.String)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: Decrypt(String)
  nameWithType: FormsAuthentication.Decrypt(String)
  fullName: System.Web.Security.FormsAuthentication.Decrypt(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "建立<xref href=&quot;System.Web.Security.FormsAuthenticationTicket&quot;></xref>物件會根據傳遞給方法的加密的表單驗證票證。"
  syntax:
    content: public static System.Web.Security.FormsAuthenticationTicket Decrypt (string encryptedTicket);
    parameters:
    - id: encryptedTicket
      type: System.String
      description: "加密的驗證票證。"
    return:
      type: System.Web.Security.FormsAuthenticationTicket
      description: "A <xref href=&quot;System.Web.Security.FormsAuthenticationTicket&quot;></xref> object. 如果<code> encryptedTicket </code>參數不是有效的票證<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>傳回。"
  overload: System.Web.Security.FormsAuthentication.Decrypt*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>encryptedTicket</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>encryptedTicket</code> is an empty string (\"\").  \n  \n \\- or -  \n  \n The length of <code>encryptedTicket</code> is greater than 4096 characters.  \n  \n \\- or -  \n  \n <code>encryptedTicket</code> is of an invalid format."
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.DefaultUrl
  id: DefaultUrl
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: DefaultUrl
  nameWithType: FormsAuthentication.DefaultUrl
  fullName: System.Web.Security.FormsAuthentication.DefaultUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "取得 URL <xref href=&quot;System.Web.Security.FormsAuthentication&quot;> </xref>類別將會重新導向至如果沒有指定 URL 的重新導向。"
  remarks: "DefaultUrl 屬性值設定為 ASP.NET 應用程式組態檔中使用`defaultUrl`組態項目的屬性。 DefaultUrl 屬性供<xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A>方法如果在要求中不包含任何傳回的 URL。</xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> 同樣地，<xref:System.Web.Security.FormsAuthentication.GetRedirectUrl%2A>方法會傳回 DefaultUrl，如果包含在要求中沒有傳回的 URL。</xref:System.Web.Security.FormsAuthentication.GetRedirectUrl%2A>"
  example:
  - "The following code example sets the `defaultUrl` attribute in the Web.config file.  \n  \n```  \n<authentication mode=\"Forms\">  \n  <forms loginUrl=\"member_login.aspx\"  \n    defaultUrl=\"index.aspx\" />  \n</authentication>  \n```"
  syntax:
    content: public static string DefaultUrl { get; }
    return:
      type: System.String
      description: "URL 的<xref href=&quot;System.Web.Security.FormsAuthentication&quot;></xref>類別將會重新導向至如果沒有指定 URL 的重新導向。 預設值是&quot;default.aspx&quot;。"
  overload: System.Web.Security.FormsAuthentication.DefaultUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.EnableCrossAppRedirects
  id: EnableCrossAppRedirects
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: EnableCrossAppRedirects
  nameWithType: FormsAuthentication.EnableCrossAppRedirects
  fullName: System.Web.Security.FormsAuthentication.EnableCrossAppRedirects
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "取得值，指出是否已驗證的使用者可以重新導向 url 中其他 Web 應用程式。"
  remarks: "使用設定 EnableCrossAppRedirects 屬性值`enableCrossAppRedirects`組態項目的屬性。       在檢查 EnableCrossAppRedirects 屬性<xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A>方法時重新導向 URL 並未指向目前的應用程式中的頁面。</xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> 如果 EnableCrossAppRedirects `true`，然後執行重新導向; 如果 EnableCrossAppRedirects `false`，瀏覽器重新導向至網頁中定義<xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>屬性。</xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>      > [!NOTE] > 當您將頁面重新導向所有應用程式時，您必須確定特定屬性中的組態項目會複製所有已驗證的應用程式。 如需詳細資訊和範例，請參閱[Forms 應用程式之間的驗證](~/add/includes/ajax-current-ext-md.md)。      > [!IMPORTANT] > 允許跨應用程式重新導向，您的網站時，很容易遭受攻擊，將導向至惡意網站的使用者，但您的網站使用的登入頁面。 一定要確認重新導向 URL 傳回<xref:System.Web.Security.FormsAuthentication.GetRedirectUrl%2A>方法是您預期如此您就可以確保您允許只重新導向至已核准的網站的 URL。</xref:System.Web.Security.FormsAuthentication.GetRedirectUrl%2A> 您也必須確認重新導向 URL 會使用適當的通訊協定 （HTTP 或 HTTPS）。 若要執行這些驗證，您可以將回傳事件處理常式加入您的登入頁面，或您可以加入的處理常式<xref:System.Web.UI.WebControls.Login.LoggedIn>事件<xref:System.Web.UI.WebControls.Login>控制項。</xref:System.Web.UI.WebControls.Login> </xref:System.Web.UI.WebControls.Login.LoggedIn>"
  example:
  - "The following code example sets the `enableCrossAppRedirects` attribute to `true` in the Web.config file for an ASP.NET application.  \n  \n```  \n<authentication mode=\"Forms\">  \n  <forms loginUrl=\"member_login.aspx\"  \n    cookieless=\"UseUri\"  \n    requireSSL=\"true\"   \n    enableCrossAppRedirects=\"true\" />  \n</authentication>  \n```"
  syntax:
    content: public static bool EnableCrossAppRedirects { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果已驗證的使用者可以重新導向 Url 中其他 Web 應用程式。，否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.Security.FormsAuthentication.EnableCrossAppRedirects*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.EnableFormsAuthentication(System.Collections.Specialized.NameValueCollection)
  id: EnableFormsAuthentication(System.Collections.Specialized.NameValueCollection)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: EnableFormsAuthentication(NameValueCollection)
  nameWithType: FormsAuthentication.EnableFormsAuthentication(NameValueCollection)
  fullName: System.Web.Security.FormsAuthentication.EnableFormsAuthentication(NameValueCollection)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "啟用表單驗證。"
  remarks: "如果<xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>屬性是`null`，屬性設定為預設的 URL 值，從`configurationData`參數。</xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> 如果<xref:System.Web.Security.FormsAuthentication.LoginUrl%2A>屬性是`null`，屬性設定為從的 [登入 URL] 值`configurationData`參數。</xref:System.Web.Security.FormsAuthentication.LoginUrl%2A>"
  syntax:
    content: public static void EnableFormsAuthentication (System.Collections.Specialized.NameValueCollection configurationData);
    parameters:
    - id: configurationData
      type: System.Collections.Specialized.NameValueCollection
      description: "名稱 / 值集合，其中包含 「 defaultUrl 」 及 （或）&quot;loginUrl&quot;的值。 參數可以是 null，如果沒有預設的 URL，或登入 URL 的值。"
  overload: System.Web.Security.FormsAuthentication.EnableFormsAuthentication*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "應用程式不是啟動前初始設定階段。"
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.Encrypt(System.Web.Security.FormsAuthenticationTicket)
  id: Encrypt(System.Web.Security.FormsAuthenticationTicket)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: Encrypt(FormsAuthenticationTicket)
  nameWithType: FormsAuthentication.Encrypt(FormsAuthenticationTicket)
  fullName: System.Web.Security.FormsAuthentication.Encrypt(FormsAuthenticationTicket)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "建立字串，包含適用於 HTTP cookie 的加密的表單驗證票證。"
  remarks: ''
  example:
  - "The following code example stores the result of the Encrypt method in a cookie by using the <xref:System.Web.Security.FormsAuthentication.FormsCookieName%2A> property and redirects the user to the URL returned from the <xref:System.Web.Security.FormsAuthentication.GetRedirectUrl%2A> method.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[FormsAuthenticationTicketClass#1](~/add/codesnippet/csharp/d209d6db-e50b-4c64-961a-_1.aspx)]\n [!code-vb[FormsAuthenticationTicketClass#1](~/add/codesnippet/visualbasic/d209d6db-e50b-4c64-961a-_1.aspx)]"
  syntax:
    content: public static string Encrypt (System.Web.Security.FormsAuthenticationTicket ticket);
    parameters:
    - id: ticket
      type: System.Web.Security.FormsAuthenticationTicket
      description: "<xref href=&quot;System.Web.Security.FormsAuthenticationTicket&quot;> </xref>物件用來建立加密的表單驗證票證。"
    return:
      type: System.String
      description: "字串，包含已加密的表單驗證票證。"
  overload: System.Web.Security.FormsAuthentication.Encrypt*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>ticket</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.FormsCookieName
  id: FormsCookieName
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: FormsCookieName
  nameWithType: FormsAuthentication.FormsCookieName
  fullName: System.Web.Security.FormsAuthentication.FormsCookieName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "取得用來儲存表單驗證票證之 cookie 的名稱。"
  remarks: "FormsCookieName 屬性值設定為 ASP.NET 應用程式組態檔中使用`name`組態項目的屬性。 FormsCookieName 會用來參考儲存的 cookie<xref:System.Web.Security.FormsAuthenticationTicket>資訊。</xref:System.Web.Security.FormsAuthenticationTicket>"
  example:
  - "The following code example sets the FormsCookieName property value by using the `name` attribute in the Web.config file.  \n  \n```  \n<authentication mode=\"Forms\">  \n  <forms loginUrl=\"member_login.aspx\"  \n    cookieless=\"UseCookies\"  \n    name=\".ASPXFORMSAUTH\" />  \n</authentication>  \n```"
  syntax:
    content: public static string FormsCookieName { get; }
    return:
      type: System.String
      description: "用來儲存表單驗證票證之 cookie 名稱。 預設值是&quot;。ASPXAUTH&quot;。"
  overload: System.Web.Security.FormsAuthentication.FormsCookieName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.FormsCookiePath
  id: FormsCookiePath
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: FormsCookiePath
  nameWithType: FormsAuthentication.FormsCookiePath
  fullName: System.Web.Security.FormsAuthentication.FormsCookiePath
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "取得表單驗證 cookie 的路徑。"
  remarks: "FormsCookiePath 屬性值設定在 ASP.NET 應用程式使用的組態檔中`path`組態項目的屬性。 指定 FormsCookiePath <xref:System.Web.HttpCookie.Path%2A>cookie 儲存<xref:System.Web.Security.FormsAuthenticationTicket>資訊。</xref:System.Web.Security.FormsAuthenticationTicket> </xref:System.Web.HttpCookie.Path%2A>"
  example:
  - "The following code example sets the FormsCookiePath property value by using the `path` attribute in the Web.config file.  \n  \n```  \n<authentication mode=\"Forms\">  \n  <forms loginUrl=\"member_login.aspx\"  \n    cookieless=\"UseCookies\"  \n    path=\"/MyApplication\" />  \n</authentication>  \n```"
  syntax:
    content: public static string FormsCookiePath { get; }
    return:
      type: System.String
      description: "Cookie 儲存表單驗證票證資訊的路徑。 預設值是&quot;/&quot;。"
  overload: System.Web.Security.FormsAuthentication.FormsCookiePath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.GetAuthCookie(System.String,System.Boolean)
  id: GetAuthCookie(System.String,System.Boolean)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: GetAuthCookie(String,Boolean)
  nameWithType: FormsAuthentication.GetAuthCookie(String,Boolean)
  fullName: System.Web.Security.FormsAuthentication.GetAuthCookie(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "建立指定的使用者名稱的驗證 cookie。 這不會設定 cookie 做為傳出回應的一部分，所以應用程式有更充分掌控發出 cookie 的方式。"
  remarks: "Cookie 的路徑由<xref:System.Web.Security.FormsAuthentication.FormsCookiePath%2A>屬性。</xref:System.Web.Security.FormsAuthentication.FormsCookiePath%2A>"
  syntax:
    content: public static System.Web.HttpCookie GetAuthCookie (string userName, bool createPersistentCookie);
    parameters:
    - id: userName
      type: System.String
      description: "已驗證的使用者名稱。"
    - id: createPersistentCookie
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要建立永久性的 cookie （一個是儲存在瀏覽器工作階段之間）。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.Web.HttpCookie
      description: "<xref href=&quot;System.Web.HttpCookie&quot;> </xref>包含加密的表單驗證票證資訊。 預設值為<xref:System.Web.Security.FormsAuthentication.FormsCookiePath*>屬性使用。</xref:System.Web.Security.FormsAuthentication.FormsCookiePath*>"
  overload: System.Web.Security.FormsAuthentication.GetAuthCookie*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.GetAuthCookie(System.String,System.Boolean,System.String)
  id: GetAuthCookie(System.String,System.Boolean,System.String)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: GetAuthCookie(String,Boolean,String)
  nameWithType: FormsAuthentication.GetAuthCookie(String,Boolean,String)
  fullName: System.Web.Security.FormsAuthentication.GetAuthCookie(String,Boolean,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "建立指定的使用者名稱的驗證 cookie。 這不會設定 cookie 的傳出回應的一部分。"
  syntax:
    content: public static System.Web.HttpCookie GetAuthCookie (string userName, bool createPersistentCookie, string strCookiePath);
    parameters:
    - id: userName
      type: System.String
      description: "已驗證的使用者名稱。"
    - id: createPersistentCookie
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要建立永久性的 cookie （一個是儲存在瀏覽器工作階段之間）。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    - id: strCookiePath
      type: System.String
      description: "<xref:System.Web.HttpCookie.Path*>的驗證 cookie。</xref:System.Web.HttpCookie.Path*>"
    return:
      type: System.Web.HttpCookie
      description: "<xref href=&quot;System.Web.HttpCookie&quot;> </xref>包含加密的表單驗證票證資訊。"
  overload: System.Web.Security.FormsAuthentication.GetAuthCookie*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.GetRedirectUrl(System.String,System.Boolean)
  id: GetRedirectUrl(System.String,System.Boolean)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: GetRedirectUrl(String,Boolean)
  nameWithType: FormsAuthentication.GetRedirectUrl(String,Boolean)
  fullName: System.Web.Security.FormsAuthentication.GetRedirectUrl(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "傳回造成重新導向至登入網頁的原始要求重新導向 URL。"
  remarks: "您可以使用這個方法，當您想要重新導向程式碼中執行應用程式而不是使用<xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A>方法。</xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A>       GetRedirectUrl 方法會傳回在查詢字串中，使用指定的 URL`ReturnURL`變數名稱。 例如，在 URL 中`http://www.contoso.com/login.aspx?ReturnUrl=caller.aspx`，GetRedirectUrl 方法傳回的傳回 URL `caller.aspx`。 如果`ReturnURL`變數不存在，GetRedirectUrl 方法會傳回中的 URL<xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>屬性。</xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>       瀏覽器重新導向至登入頁面時，ASP.NET 會自動加入傳回的 URL。       根據預設，`ReturnUrl`變數必須參考目前應用程式內的頁面。 如果`ReturnUrl`指的是不同的伺服器，GetRedirectUrl 方法傳回的 URL，在頁面中不同的應用程式或<xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>屬性。</xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> 如果您想要讓傳回的 URL 來參考目前應用程式外的網頁，您必須設定<xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>屬性`true`使用`enableCrossAppRedirects`組態項目的屬性。</xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>      > [!IMPORTANT] > 設定<xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>屬性`true`允許跨應用程式重新導向可能會造成安全性威脅。</xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> 如需詳細資訊，請參閱<xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>屬性。</xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>"
  example:
  - "The following code example redirects authenticated users to the URL returned from the GetRedirectUrl method.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[FormsAuthenticationTicketClass#1](~/add/codesnippet/csharp/41a9cd2e-33ed-4156-8c31-_1.aspx)]\n [!code-vb[FormsAuthenticationTicketClass#1](~/add/codesnippet/visualbasic/41a9cd2e-33ed-4156-8c31-_1.aspx)]"
  syntax:
    content: public static string GetRedirectUrl (string userName, bool createPersistentCookie);
    parameters:
    - id: userName
      type: System.String
      description: "已驗證的使用者名稱。"
    - id: createPersistentCookie
      type: System.Boolean
      description: "這個參數已忽略。"
    return:
      type: System.String
      description: "包含重新導向 URL 的字串。"
  overload: System.Web.Security.FormsAuthentication.GetRedirectUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile(System.String,System.String)
  id: HashPasswordForStoringInConfigFile(System.String,System.String)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: HashPasswordForStoringInConfigFile(String,String)
  nameWithType: FormsAuthentication.HashPasswordForStoringInConfigFile(String,String)
  fullName: System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "產生適用於在指定的密碼和雜湊演算法為基礎的組態檔中儲存的雜湊密碼。"
  remarks: "HashPasswordForStoringInConfigFile 方法會建立應用程式的組態檔中儲存表單驗證認證時，可以使用雜湊的密碼值。       使用儲存在應用程式的組態檔中的驗證認證<xref:System.Web.Security.FormsAuthentication.Authenticate%2A>方法以驗證的應用程式的使用者密碼。</xref:System.Web.Security.FormsAuthentication.Authenticate%2A> 或者，您可以使用 ASP.NET 成員資格來儲存使用者認證。 如需詳細資訊，請參閱[使用成員資格管理使用者](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following code example takes a user name, password, and hash type and displays the  section of the configuration that includes the user definition and hashed password.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[FormsAuthenticationHashPassword#1](~/add/codesnippet/visualbasic/60863efe-d1c9-47ee-90e6-_1.aspx)]\n [!code-cs[FormsAuthenticationHashPassword#1](~/add/codesnippet/csharp/60863efe-d1c9-47ee-90e6-_1.aspx)]"
  syntax:
    content: public static string HashPasswordForStoringInConfigFile (string password, string passwordFormat);
    parameters:
    - id: password
      type: System.String
      description: "要雜湊的密碼。"
    - id: passwordFormat
      type: System.String
      description: "要使用的雜湊演算法。 `passwordFormat`是<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> ，代表其中一個<xref href=&quot;System.Web.Configuration.FormsAuthPasswordFormat&quot;></xref>列舉值。"
    return:
      type: System.String
      description: "雜湊的密碼。"
  overload: System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>password</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>       -or-       <code>passwordFormat</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>passwordFormat</code>不是有效<xref href=&quot;System.Web.Configuration.FormsAuthPasswordFormat&quot;></xref>值。"
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.Initialize
  id: Initialize
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: Initialize()
  nameWithType: FormsAuthentication.Initialize()
  fullName: System.Web.Security.FormsAuthentication.Initialize()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "初始化<xref href=&quot;System.Web.Security.FormsAuthentication&quot;></xref>物件會根據應用程式的組態設定。"
  remarks: "Initialize 方法時，會呼叫<xref:System.Web.Security.FormsAuthenticationModule>建立的<xref:System.Web.Security.FormsAuthentication>類別</xref:System.Web.Security.FormsAuthentication>執行個體</xref:System.Web.Security.FormsAuthenticationModule> 這個方法不是從您的程式碼呼叫。"
  syntax:
    content: public static void Initialize ();
    parameters: []
  overload: System.Web.Security.FormsAuthentication.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.IsEnabled
  id: IsEnabled
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: IsEnabled
  nameWithType: FormsAuthentication.IsEnabled
  fullName: System.Web.Security.FormsAuthentication.IsEnabled
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "取得值，指出是否要啟用表單驗證。"
  syntax:
    content: public static bool IsEnabled { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果已啟用表單驗證。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.Security.FormsAuthentication.IsEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.LoginUrl
  id: LoginUrl
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: LoginUrl
  nameWithType: FormsAuthentication.LoginUrl
  fullName: System.Web.Security.FormsAuthentication.LoginUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "取得登入頁面 URL <xref href=&quot;System.Web.Security.FormsAuthentication&quot;> </xref>類別將會重新導向。"
  remarks: "LoginUrl 屬性值設定為 ASP.NET 應用程式組態檔中使用`loginUrl`組態項目的屬性。 LoginUrl 正由<xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A>方法。</xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A>"
  example:
  - "The following code example sets the `loginUrl` attribute in the Web.config file.  \n  \n```  \n<authentication mode=\"Forms\">  \n  <forms loginUrl=\"member_login.aspx\"  \n    defaultUrl=\"index.aspx\" />  \n</authentication>  \n```"
  syntax:
    content: public static string LoginUrl { get; }
    return:
      type: System.String
      description: "URL 的登入頁面上， <xref href=&quot;System.Web.Security.FormsAuthentication&quot;> </xref>類別將會重新導向。 預設值為&quot;login.aspx。 」"
  overload: System.Web.Security.FormsAuthentication.LoginUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.RedirectFromLoginPage(System.String,System.Boolean)
  id: RedirectFromLoginPage(System.String,System.Boolean)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: RedirectFromLoginPage(String,Boolean)
  nameWithType: FormsAuthentication.RedirectFromLoginPage(String,Boolean)
  fullName: System.Web.Security.FormsAuthentication.RedirectFromLoginPage(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "將已驗證的使用者重新導向回到原始要求的 URL 或預設的 URL。"
  remarks: "在查詢字串中，使用指定的 URL 重新導向至 RedirectFromLoginPage 方法`ReturnURL`變數名稱。 例如，在 URL 中`http://www.contoso.com/login.aspx?ReturnUrl=caller.aspx`，傳回的 URL 重新導向至 RedirectFromLoginPage 方法`caller.aspx`。 如果`ReturnURL`變數不存在、 RedirectFromLoginPage 方法會重新導向 URL 中<xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>屬性。</xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>       瀏覽器重新導向至登入頁面時，ASP.NET 會自動加入傳回的 URL。       根據預設，`ReturnUrl`變數必須參考目前應用程式內的頁面。 如果`ReturnUrl`指的是不同的應用程式或不同伺服器上，RedirectFromLoginPage 方法中的 URL 重新導向<xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>屬性。</xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> 如果您想要允許重新導向至目前的應用程式以外的頁面，您必須設定<xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>屬性`true`使用`enableCrossAppRedirects`組態項目的屬性。</xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>      > [!IMPORTANT] > 設定<xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>屬性`true`允許跨應用程式重新導向可能會造成安全性威脅。</xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> 如需詳細資訊，請參閱<xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>屬性。</xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>       如果<xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>屬性是`true`，任一個`ReturnUrl`變數是在目前應用程式或<xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>屬性是`true`，然後 RedirectFromLoginPage 方法發出的驗證票證，並將它放在預設 cookie 使用<xref:System.Web.Security.FormsAuthentication.SetAuthCookie%2A>方法。</xref:System.Web.Security.FormsAuthentication.SetAuthCookie%2A> </xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> </xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>       如果<xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>是`false`，而且是要在目前的應用程式的 URL 重新導向路徑，票證會發出重新導向 URL 的一部分。</xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> 如果<xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>是`false`，<xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>是`true`，和重新導向 URL 不是指在目前應用程式頁面，RedirectFromLoginPage 方法發出的驗證票證，並將它放入<xref:System.Web.HttpRequest.QueryString%2A>屬性。</xref:System.Web.HttpRequest.QueryString%2A> </xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> </xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>"
  example:
  - "The following code example redirects validated users to either the originally requested URL or the <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>. The code example uses ASP.NET membership to validate users. For more information about ASP.NET membership, see [Managing Users by Using Membership](~/add/includes/ajax-current-ext-md.md).  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#1](~/add/codesnippet/csharp/1b30741b-7340-4c63-b342-_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#1](~/add/codesnippet/visualbasic/1b30741b-7340-4c63-b342-_1.aspx)]"
  syntax:
    content: public static void RedirectFromLoginPage (string userName, bool createPersistentCookie);
    parameters:
    - id: userName
      type: System.String
      description: "已驗證的使用者名稱。"
    - id: createPersistentCookie
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要建立永久性的 cookie （一個是儲存在瀏覽器工作階段之間）。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.Security.FormsAuthentication.RedirectFromLoginPage*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: '查詢字串中指定的傳回 URL 包含 HTTP 以外的通訊協定︰ 或 HTTPS:。'
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.RedirectFromLoginPage(System.String,System.Boolean,System.String)
  id: RedirectFromLoginPage(System.String,System.Boolean,System.String)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: RedirectFromLoginPage(String,Boolean,String)
  nameWithType: FormsAuthentication.RedirectFromLoginPage(String,Boolean,String)
  fullName: System.Web.Security.FormsAuthentication.RedirectFromLoginPage(String,Boolean,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "將已驗證的使用者重新導向回到原始要求的 URL 或表單驗證 cookie 使用指定的 cookie 路徑預設 URL。"
  remarks: "在查詢字串中，使用指定的傳回 URL 重新導向至 RedirectFromLoginPage 方法`ReturnURL`變數名稱。 例如，在 URL 中`http://www.contoso.com/login.aspx?ReturnUrl=caller.aspx`，傳回的 URL 重新導向至 RedirectFromLoginPage 方法`caller.aspx`。 如果`ReturnURL`變數不存在、 RedirectFromLoginPage 方法會重新導向 URL 中<xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>屬性。</xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>       瀏覽器重新導向至登入頁面時，ASP.NET 會自動加入傳回的 URL。       根據預設，`ReturnUrl`變數必須參考目前應用程式內的頁面。 如果`ReturnUrl`指的是不同的應用程式或不同伺服器上，方法會重新導向 URL 中 RedirectFromLoginPage<xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>屬性。</xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> 如果您想要允許重新導向至目前的應用程式以外的頁面，您必須設定<xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>屬性`true`使用`enableCrossAppRedirects`組態項目的屬性。</xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>      > [!IMPORTANT] > 設定<xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>屬性`true`允許跨應用程式重新導向可能會造成安全性威脅。</xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> 如需詳細資訊，請參閱<xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>屬性。</xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>       如果<xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>屬性是`true`，任一個`ReturnUrl`變數是在目前應用程式或<xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>屬性是`true`，然後 RedirectFromLoginPage 方法發出的驗證票證，並將它放在所指定的 cookie`strCookiePath`參數使用<xref:System.Web.Security.FormsAuthentication.SetAuthCookie%2A>方法。</xref:System.Web.Security.FormsAuthentication.SetAuthCookie%2A> </xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> </xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>       如果<xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>是`false`，而且是要在目前的應用程式的 URL 重新導向路徑，票證會發出重新導向 URL 的一部分。</xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> 如果<xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>是`false`，<xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>是`true`，和重新導向 URL 不是指在目前應用程式頁面，RedirectFromLoginPage 方法發出的驗證票證，並將它放入<xref:System.Web.HttpRequest.QueryString%2A>屬性。</xref:System.Web.HttpRequest.QueryString%2A> </xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> </xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>"
  syntax:
    content: public static void RedirectFromLoginPage (string userName, bool createPersistentCookie, string strCookiePath);
    parameters:
    - id: userName
      type: System.String
      description: "已驗證的使用者名稱。"
    - id: createPersistentCookie
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要建立永久性的 cookie （一個是儲存在瀏覽器工作階段之間）。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    - id: strCookiePath
      type: System.String
      description: "表單驗證票證的 cookie 路徑。"
  overload: System.Web.Security.FormsAuthentication.RedirectFromLoginPage*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: '查詢字串中指定的傳回 URL 包含 HTTP 以外的通訊協定︰ 或 HTTPS:。'
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.RedirectToLoginPage
  id: RedirectToLoginPage
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: RedirectToLoginPage()
  nameWithType: FormsAuthentication.RedirectToLoginPage()
  fullName: System.Web.Security.FormsAuthentication.RedirectToLoginPage()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "將瀏覽器重新導向至登入 URL。"
  remarks: "瀏覽器重新導向至<xref:System.Web.Security.FormsAuthentication.LoginUrl%2A>。</xref:System.Web.Security.FormsAuthentication.LoginUrl%2A> RedirectToLoginPage 方法       RedirectToLoginPage 方法不會清除表單驗證 cookie。 您可以使用 RedirectToLoginPage 方法搭配<xref:System.Web.Security.FormsAuthentication.SignOut%2A>方法記錄出一位使用者，並允許其他使用者登入。</xref:System.Web.Security.FormsAuthentication.SignOut%2A>"
  example:
  - "The following code example clears the forms-authentication cookie using the <xref:System.Web.Security.FormsAuthentication.SignOut%2A> method and redirects the user to the login page using the RedirectToLoginPage method.  \n  \n [!code-cs[System.Web.Security.FormsAuthentication#2](~/add/codesnippet/csharp/m-system.web.security.fo_0_1.aspx)]\n [!code-vb[System.Web.Security.FormsAuthentication#2](~/add/codesnippet/visualbasic/m-system.web.security.fo_0_1.aspx)]"
  syntax:
    content: public static void RedirectToLoginPage ();
    parameters: []
  overload: System.Web.Security.FormsAuthentication.RedirectToLoginPage*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.RedirectToLoginPage(System.String)
  id: RedirectToLoginPage(System.String)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: RedirectToLoginPage(String)
  nameWithType: FormsAuthentication.RedirectToLoginPage(String)
  fullName: System.Web.Security.FormsAuthentication.RedirectToLoginPage(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "將瀏覽器重新導向至登入 URL，以指定的查詢字串。"
  remarks: "RedirectToLoginPage 方法重新導向瀏覽器<xref:System.Web.Security.FormsAuthentication.LoginUrl%2A>並包含`extraQueryString`視為<xref:System.Management.ManagementQuery.QueryString%2A>重新導向 url。</xref:System.Management.ManagementQuery.QueryString%2A> </xref:System.Web.Security.FormsAuthentication.LoginUrl%2A>       RedirectToLoginPage 方法不會清除表單驗證 cookie。 您可以使用 RedirectToLoginPage 方法搭配<xref:System.Web.Security.FormsAuthentication.SignOut%2A>方法記錄出一位使用者，並允許其他使用者登入。</xref:System.Web.Security.FormsAuthentication.SignOut%2A>"
  example:
  - "The following code example clears the forms-authentication cookie using the <xref:System.Web.Security.FormsAuthentication.SignOut%2A> method and redirects the user to the login page using the RedirectToLoginPage method.  \n  \n [!code-cs[System.Web.Security.FormsAuthentication#3](~/add/codesnippet/csharp/m-system.web.security.fo_1_1.aspx)]\n [!code-vb[System.Web.Security.FormsAuthentication#3](~/add/codesnippet/visualbasic/m-system.web.security.fo_1_1.aspx)]"
  syntax:
    content: public static void RedirectToLoginPage (string extraQueryString);
    parameters:
    - id: extraQueryString
      type: System.String
      description: "要包含在重新導向 url 的查詢字串。"
  overload: System.Web.Security.FormsAuthentication.RedirectToLoginPage*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.RenewTicketIfOld(System.Web.Security.FormsAuthenticationTicket)
  id: RenewTicketIfOld(System.Web.Security.FormsAuthenticationTicket)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: RenewTicketIfOld(FormsAuthenticationTicket)
  nameWithType: FormsAuthentication.RenewTicketIfOld(FormsAuthenticationTicket)
  fullName: System.Web.Security.FormsAuthentication.RenewTicketIfOld(FormsAuthenticationTicket)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "有條件地更新問題的日期和時間和到期日和時間<xref href=&quot;System.Web.Security.FormsAuthenticationTicket&quot;> </xref>。"
  remarks: "RenewTicketIfOld 方法更新的到期日期和時間提供<xref:System.Web.Security.FormsAuthenticationTicket>如果目前的日期和時間減去<xref:System.Web.Security.FormsAuthenticationTicket.IssueDate%2A>值大於<xref:System.Web.Security.FormsAuthenticationTicket.Expiration%2A>值減去目前的日期和時間。</xref:System.Web.Security.FormsAuthenticationTicket.Expiration%2A> </xref:System.Web.Security.FormsAuthenticationTicket.IssueDate%2A> </xref:System.Web.Security.FormsAuthenticationTicket>       以更新票證<xref:System.Web.Security.FormsAuthenticationTicket.IssueDate%2A>屬性設定為目前的日期和時間和<xref:System.Web.Security.FormsAuthenticationTicket.Expiration%2A>屬性設定為目前的日期和時間加上原始<xref:System.Web.Security.FormsAuthenticationTicket.Expiration%2A>值減原始<xref:System.Web.Security.FormsAuthenticationTicket.IssueDate%2A>值。</xref:System.Web.Security.FormsAuthenticationTicket.IssueDate%2A> </xref:System.Web.Security.FormsAuthenticationTicket.Expiration%2A> </xref:System.Web.Security.FormsAuthenticationTicket.Expiration%2A> </xref:System.Web.Security.FormsAuthenticationTicket.IssueDate%2A>"
  syntax:
    content: public static System.Web.Security.FormsAuthenticationTicket RenewTicketIfOld (System.Web.Security.FormsAuthenticationTicket tOld);
    parameters:
    - id: tOld
      type: System.Web.Security.FormsAuthenticationTicket
      description: "若要更新的表單驗證票證。"
    return:
      type: System.Web.Security.FormsAuthenticationTicket
      description: "已更新<xref href=&quot;System.Web.Security.FormsAuthenticationTicket&quot;> </xref>。"
  overload: System.Web.Security.FormsAuthentication.RenewTicketIfOld*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.RequireSSL
  id: RequireSSL
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: RequireSSL
  nameWithType: FormsAuthentication.RequireSSL
  fullName: System.Web.Security.FormsAuthentication.RequireSSL
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "取得值，指出表單驗證 cookie 是否需要 SSL 才能傳回至伺服器。"
  remarks: "RequireSSL 屬性值設定為 ASP.NET 應用程式組態檔中使用`requireSSL`組態項目的屬性。 您可以指定 Web.config 檔案中的 ASP.NET 應用程式是否需要 SSL （安全通訊端層） 的表單驗證 cookie 傳回給伺服器，藉由設定`requireSSL`屬性。 如需詳細資訊，請參閱<xref:System.Web.HttpCookie.Secure%2A>.</xref:System.Web.HttpCookie.Secure%2A>       我們建議您設定如果`requireSSL`為`false`，也設定`slidingExpiration`為`false`可減少票證的有效的時間量。"
  example:
  - "The following code example sets the `requireSSL` attribute in the Web.config file.  \n  \n```  \n<authentication mode=\"Forms\">  \n  <forms loginUrl=\"member_login.aspx\"  \n    cookieless=\"UseCookies\"  \n    requireSSL=\"true\"  \n    path=\"/MyApplication\" />  \n</authentication>  \n```"
  syntax:
    content: public static bool RequireSSL { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果需要將表單驗證 cookie 傳回給伺服器 SSL否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.Security.FormsAuthentication.RequireSSL*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.SetAuthCookie(System.String,System.Boolean)
  id: SetAuthCookie(System.String,System.Boolean)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: SetAuthCookie(String,Boolean)
  nameWithType: FormsAuthentication.SetAuthCookie(String,Boolean)
  fullName: System.Web.Security.FormsAuthentication.SetAuthCookie(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "建立提供的使用者名稱的驗證票證，並將回應的 cookie 集合或 URL 如果您使用 cookie 驗證。"
  remarks: "SetAuthCookie 方法會將表單驗證票證至其中一個 cookie 集合中，或 url 如果<xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>是`false`。</xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> 表單驗證票證提供瀏覽器所做的下一個要求的表單驗證資訊。 使用表單驗證，您可以使用 SetAuthCookie 方法，當您想要驗證的使用者，但仍保留之瀏覽該網站重新導向的控制。"
  syntax:
    content: public static void SetAuthCookie (string userName, bool createPersistentCookie);
    parameters:
    - id: userName
      type: System.String
      description: "已驗證的使用者名稱。 這沒有對應至 Windows 帳戶。"
    - id: createPersistentCookie
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要建立永續性 cookie （一個是儲存在瀏覽器工作階段之間）。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.Security.FormsAuthentication.SetAuthCookie*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<>*> is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> and <>*> is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.SetAuthCookie(System.String,System.Boolean,System.String)
  id: SetAuthCookie(System.String,System.Boolean,System.String)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: SetAuthCookie(String,Boolean,String)
  nameWithType: FormsAuthentication.SetAuthCookie(String,Boolean,String)
  fullName: System.Web.Security.FormsAuthentication.SetAuthCookie(String,Boolean,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "建立提供的使用者名稱的驗證票證，並將它加入至回應，使用提供的 cookie 的路徑，或使用的 URL，如果您使用 cookie 驗證的 cookie 集合。"
  remarks: "SetAuthCookie 方法會將 cookie 的集合或 URL 的表單驗證票證如果<xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>是`false`。</xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> 表單驗證票證提供瀏覽器所做的下一個要求的表單驗證資訊。 使用表單驗證，您可以使用 SetAuthCookie 方法，當您想要驗證的使用者，但仍保留之瀏覽該網站重新導向的控制。"
  syntax:
    content: public static void SetAuthCookie (string userName, bool createPersistentCookie, string strCookiePath);
    parameters:
    - id: userName
      type: System.String
      description: "已驗證的使用者名稱。"
    - id: createPersistentCookie
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要建立永久性的 cookie （一個是儲存在瀏覽器工作階段之間）。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    - id: strCookiePath
      type: System.String
      description: "表單驗證票證的 cookie 路徑。"
  overload: System.Web.Security.FormsAuthentication.SetAuthCookie*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<>*> is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> and <>*> is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.SignOut
  id: SignOut
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: SignOut()
  nameWithType: FormsAuthentication.SignOut()
  fullName: System.Web.Security.FormsAuthentication.SignOut()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "移除瀏覽器中的表單驗證票證。"
  remarks: "SignOut 方法會移除從 cookie 或 URL 的表單驗證票證資訊如果<xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>是`false`。</xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> 您可以使用 SignOut 方法搭配<xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A>方法記錄出一位使用者，並允許其他使用者登入。</xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A>       如果您執行專門在無 cookie 模式中，或者如果您支援已驗證和匿名使用者，您應該明確地控制重新導向至登入頁面，如果您需要特殊的商務邏輯執行因而移除的匿名識別項。       SignOut 方法呼叫時，重新導向至應用程式的登入頁面會藉由呼叫<xref:System.Web.HttpResponse.Redirect%2A>方法`endResponse`參數設定為`false`。</xref:System.Web.HttpResponse.Redirect%2A> 重新導向不會直到目前的頁面已完成執行，因此可以執行額外的程式碼。 如果程式碼不包含明確的重新導向至另一個網頁，使用者會重新導向的應用程式組態檔中設定登入頁面。       呼叫登出方法只會移除表單驗證 cookie。 網頁伺服器不會儲存日後比較的有效和過期的驗證票證。 這可讓您的站台遭受重新執行攻擊，如果惡意使用者取得有效的表單驗證 cookie。 為了提高安全性，使用表單驗證 cookie 時，您應該執行下列:-藉由設定表單驗證 cookie 使用絕對期限<xref:System.Web.Security.FormsAuthentication.SlidingExpiration%2A>屬性`false`。</xref:System.Web.Security.FormsAuthentication.SlidingExpiration%2A> 這會限制在其中被盜用的 cookie 可以重新顯示視窗。      -只會發行並接受驗證 cookie 的設定，透過安全通訊端層 (SSL)，藉由設定<xref:System.Web.Security.FormsAuthentication.RequireSSL%2A>屬性`true`以及執行在 SSL 下整個網站。</xref:System.Web.Security.FormsAuthentication.RequireSSL%2A> 設定<xref:System.Web.Security.FormsAuthentication.RequireSSL%2A>屬性`true`可確保，ASP.NET 將永遠不會傳送驗證 cookie 的瀏覽器透過非 SSL 連線，不過，用戶端可能會不會接受在 cookie 上安全的設定。</xref:System.Web.Security.FormsAuthentication.RequireSSL%2A> 這表示用戶端可能會傳送表單驗證 cookie 透過非 SSL 連線，因此讓受到盜用。 您可以防止用戶端藉由執行在 SSL 下整個網站，以清除傳送表單驗證 cookie。      -使用永續性儲存體在伺服器上記錄使用者登出網站，然後再使用應用程式事件這類<xref:System.Web.HttpApplication.PostAuthenticateRequest>事件，以判斷目前使用者是否已驗證的表單驗證。</xref:System.Web.HttpApplication.PostAuthenticateRequest> 如果使用者通過驗證的表單驗證，而且如果永續性儲存體中的資訊指出使用者登出，立即清除驗證 cookie 和瀏覽器重新導向回到登入頁面。 成功登入之後，更新儲存體以反映使用者已登入。 當您使用這個方法時，應用程式必須追蹤登入之使用者的狀態，並且必須強制閒置使用者登出。"
  example:
  - "The following code example clears the forms-authentication cookie using the SignOut method and redirects the user to the login page using the <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> method.  \n  \n [!code-cs[System.Web.Security.FormsAuthentication#2](~/add/codesnippet/csharp/m-system.web.security.fo_2_1.aspx)]\n [!code-vb[System.Web.Security.FormsAuthentication#2](~/add/codesnippet/visualbasic/m-system.web.security.fo_2_1.aspx)]"
  syntax:
    content: public static void SignOut ();
    parameters: []
  overload: System.Web.Security.FormsAuthentication.SignOut*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.SlidingExpiration
  id: SlidingExpiration
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: SlidingExpiration
  nameWithType: FormsAuthentication.SlidingExpiration
  fullName: System.Web.Security.FormsAuthentication.SlidingExpiration
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "取得值，指出是否啟用滑動期限。"
  remarks: "SlidingExpiration 屬性值已設定使用`slidingExpiration`組態項目的屬性。       滑動期限會重設為有效的驗證 cookie 的到期時間提出要求，而且一半以上的逾時間隔已經經過。 如果 cookie 已過期，使用者必須重新驗證。 SlidingExpiration 屬性設定為`false`可以改善應用程式的安全性限制的時間，驗證 cookie 是否有效，根據已設定`timeout`值。       我們建議您設定如果`requireSSL`為`false`，也設定`slidingExpiration`為`false`可減少票證的有效的時間量。"
  example:
  - "The following code example sets the `slidingExpiration` attribute to `false` in the Web.config file for an ASP.NET application.  \n  \n```  \n<authentication mode=\"Forms\">  \n  <forms loginUrl=\"member_login.aspx\"  \n    name=\".ASPXFORMSAUTH\"  \n    cookieless=\"UseCookies\"  \n    requireSSL=\"true\"   \n    slidingExpiration=\"false\" />  \n</authentication>  \n```"
  syntax:
    content: public static bool SlidingExpiration { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果已啟用滑動期限。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.Security.FormsAuthentication.SlidingExpiration*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.TicketCompatibilityMode
  id: TicketCompatibilityMode
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: TicketCompatibilityMode
  nameWithType: FormsAuthentication.TicketCompatibilityMode
  fullName: System.Web.Security.FormsAuthentication.TicketCompatibilityMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "取得值，指出是否要使用 Coordinated Universal Time (UTC) 或本地時間的票證到期日。"
  syntax:
    content: public static System.Web.Configuration.TicketCompatibilityMode TicketCompatibilityMode { get; }
    return:
      type: System.Web.Configuration.TicketCompatibilityMode
      description: "值，指出是否要使用 Coordinated Universal Time (UTC) 或本地時間的票證到期日。"
  overload: System.Web.Security.FormsAuthentication.TicketCompatibilityMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.Timeout
  id: Timeout
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: Timeout
  nameWithType: FormsAuthentication.Timeout
  fullName: System.Web.Security.FormsAuthentication.Timeout
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "取得驗證票證到期之前的時間量。"
  syntax:
    content: public static TimeSpan Timeout { get; }
    return:
      type: System.TimeSpan
      description: "到期之前的驗證票證的時間量。"
  overload: System.Web.Security.FormsAuthentication.Timeout*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.Web.Security.FormsAuthentication.#ctor
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: FormsAuthentication()
  nameWithType: FormsAuthentication.FormsAuthentication()
  fullName: System.Web.Security.FormsAuthentication.FormsAuthentication()
- uid: System.Web.Security.FormsAuthentication.Authenticate(System.String,System.String)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: Authenticate(String,String)
  nameWithType: FormsAuthentication.Authenticate(String,String)
  fullName: System.Web.Security.FormsAuthentication.Authenticate(String,String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Security.FormsAuthentication.CookieDomain
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: CookieDomain
  nameWithType: FormsAuthentication.CookieDomain
  fullName: System.Web.Security.FormsAuthentication.CookieDomain
- uid: System.Web.Security.FormsAuthentication.CookieMode
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: CookieMode
  nameWithType: FormsAuthentication.CookieMode
  fullName: System.Web.Security.FormsAuthentication.CookieMode
- uid: System.Web.HttpCookieMode
  parent: System.Web
  isExternal: false
  name: HttpCookieMode
  nameWithType: HttpCookieMode
  fullName: System.Web.HttpCookieMode
- uid: System.Web.Security.FormsAuthentication.CookiesSupported
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: CookiesSupported
  nameWithType: FormsAuthentication.CookiesSupported
  fullName: System.Web.Security.FormsAuthentication.CookiesSupported
- uid: System.Web.Security.FormsAuthentication.Decrypt(System.String)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: Decrypt(String)
  nameWithType: FormsAuthentication.Decrypt(String)
  fullName: System.Web.Security.FormsAuthentication.Decrypt(String)
- uid: System.Web.Security.FormsAuthenticationTicket
  parent: System.Web.Security
  isExternal: false
  name: FormsAuthenticationTicket
  nameWithType: FormsAuthenticationTicket
  fullName: System.Web.Security.FormsAuthenticationTicket
- uid: System.Web.Security.FormsAuthentication.DefaultUrl
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: DefaultUrl
  nameWithType: FormsAuthentication.DefaultUrl
  fullName: System.Web.Security.FormsAuthentication.DefaultUrl
- uid: System.Web.Security.FormsAuthentication.EnableCrossAppRedirects
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: EnableCrossAppRedirects
  nameWithType: FormsAuthentication.EnableCrossAppRedirects
  fullName: System.Web.Security.FormsAuthentication.EnableCrossAppRedirects
- uid: System.Web.Security.FormsAuthentication.EnableFormsAuthentication(System.Collections.Specialized.NameValueCollection)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: EnableFormsAuthentication(NameValueCollection)
  nameWithType: FormsAuthentication.EnableFormsAuthentication(NameValueCollection)
  fullName: System.Web.Security.FormsAuthentication.EnableFormsAuthentication(NameValueCollection)
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Web.Security.FormsAuthentication.Encrypt(System.Web.Security.FormsAuthenticationTicket)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: Encrypt(FormsAuthenticationTicket)
  nameWithType: FormsAuthentication.Encrypt(FormsAuthenticationTicket)
  fullName: System.Web.Security.FormsAuthentication.Encrypt(FormsAuthenticationTicket)
- uid: System.Web.Security.FormsAuthentication.FormsCookieName
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: FormsCookieName
  nameWithType: FormsAuthentication.FormsCookieName
  fullName: System.Web.Security.FormsAuthentication.FormsCookieName
- uid: System.Web.Security.FormsAuthentication.FormsCookiePath
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: FormsCookiePath
  nameWithType: FormsAuthentication.FormsCookiePath
  fullName: System.Web.Security.FormsAuthentication.FormsCookiePath
- uid: System.Web.Security.FormsAuthentication.GetAuthCookie(System.String,System.Boolean)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: GetAuthCookie(String,Boolean)
  nameWithType: FormsAuthentication.GetAuthCookie(String,Boolean)
  fullName: System.Web.Security.FormsAuthentication.GetAuthCookie(String,Boolean)
- uid: System.Web.HttpCookie
  parent: System.Web
  isExternal: false
  name: HttpCookie
  nameWithType: HttpCookie
  fullName: System.Web.HttpCookie
- uid: System.Web.Security.FormsAuthentication.GetAuthCookie(System.String,System.Boolean,System.String)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: GetAuthCookie(String,Boolean,String)
  nameWithType: FormsAuthentication.GetAuthCookie(String,Boolean,String)
  fullName: System.Web.Security.FormsAuthentication.GetAuthCookie(String,Boolean,String)
- uid: System.Web.Security.FormsAuthentication.GetRedirectUrl(System.String,System.Boolean)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: GetRedirectUrl(String,Boolean)
  nameWithType: FormsAuthentication.GetRedirectUrl(String,Boolean)
  fullName: System.Web.Security.FormsAuthentication.GetRedirectUrl(String,Boolean)
- uid: System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile(System.String,System.String)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: HashPasswordForStoringInConfigFile(String,String)
  nameWithType: FormsAuthentication.HashPasswordForStoringInConfigFile(String,String)
  fullName: System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile(String,String)
- uid: System.Web.Security.FormsAuthentication.Initialize
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: Initialize()
  nameWithType: FormsAuthentication.Initialize()
  fullName: System.Web.Security.FormsAuthentication.Initialize()
- uid: System.Web.Security.FormsAuthentication.IsEnabled
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: IsEnabled
  nameWithType: FormsAuthentication.IsEnabled
  fullName: System.Web.Security.FormsAuthentication.IsEnabled
- uid: System.Web.Security.FormsAuthentication.LoginUrl
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: LoginUrl
  nameWithType: FormsAuthentication.LoginUrl
  fullName: System.Web.Security.FormsAuthentication.LoginUrl
- uid: System.Web.Security.FormsAuthentication.RedirectFromLoginPage(System.String,System.Boolean)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: RedirectFromLoginPage(String,Boolean)
  nameWithType: FormsAuthentication.RedirectFromLoginPage(String,Boolean)
  fullName: System.Web.Security.FormsAuthentication.RedirectFromLoginPage(String,Boolean)
- uid: System.Web.Security.FormsAuthentication.RedirectFromLoginPage(System.String,System.Boolean,System.String)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: RedirectFromLoginPage(String,Boolean,String)
  nameWithType: FormsAuthentication.RedirectFromLoginPage(String,Boolean,String)
  fullName: System.Web.Security.FormsAuthentication.RedirectFromLoginPage(String,Boolean,String)
- uid: System.Web.Security.FormsAuthentication.RedirectToLoginPage
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: RedirectToLoginPage()
  nameWithType: FormsAuthentication.RedirectToLoginPage()
  fullName: System.Web.Security.FormsAuthentication.RedirectToLoginPage()
- uid: System.Web.Security.FormsAuthentication.RedirectToLoginPage(System.String)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: RedirectToLoginPage(String)
  nameWithType: FormsAuthentication.RedirectToLoginPage(String)
  fullName: System.Web.Security.FormsAuthentication.RedirectToLoginPage(String)
- uid: System.Web.Security.FormsAuthentication.RenewTicketIfOld(System.Web.Security.FormsAuthenticationTicket)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: RenewTicketIfOld(FormsAuthenticationTicket)
  nameWithType: FormsAuthentication.RenewTicketIfOld(FormsAuthenticationTicket)
  fullName: System.Web.Security.FormsAuthentication.RenewTicketIfOld(FormsAuthenticationTicket)
- uid: System.Web.Security.FormsAuthentication.RequireSSL
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: RequireSSL
  nameWithType: FormsAuthentication.RequireSSL
  fullName: System.Web.Security.FormsAuthentication.RequireSSL
- uid: System.Web.Security.FormsAuthentication.SetAuthCookie(System.String,System.Boolean)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: SetAuthCookie(String,Boolean)
  nameWithType: FormsAuthentication.SetAuthCookie(String,Boolean)
  fullName: System.Web.Security.FormsAuthentication.SetAuthCookie(String,Boolean)
- uid: System.Web.Security.FormsAuthentication.SetAuthCookie(System.String,System.Boolean,System.String)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: SetAuthCookie(String,Boolean,String)
  nameWithType: FormsAuthentication.SetAuthCookie(String,Boolean,String)
  fullName: System.Web.Security.FormsAuthentication.SetAuthCookie(String,Boolean,String)
- uid: System.Web.Security.FormsAuthentication.SignOut
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: SignOut()
  nameWithType: FormsAuthentication.SignOut()
  fullName: System.Web.Security.FormsAuthentication.SignOut()
- uid: System.Web.Security.FormsAuthentication.SlidingExpiration
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: SlidingExpiration
  nameWithType: FormsAuthentication.SlidingExpiration
  fullName: System.Web.Security.FormsAuthentication.SlidingExpiration
- uid: System.Web.Security.FormsAuthentication.TicketCompatibilityMode
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: TicketCompatibilityMode
  nameWithType: FormsAuthentication.TicketCompatibilityMode
  fullName: System.Web.Security.FormsAuthentication.TicketCompatibilityMode
- uid: System.Web.Configuration.TicketCompatibilityMode
  parent: System.Web.Configuration
  isExternal: false
  name: TicketCompatibilityMode
  nameWithType: TicketCompatibilityMode
  fullName: System.Web.Configuration.TicketCompatibilityMode
- uid: System.Web.Security.FormsAuthentication.Timeout
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: Timeout
  nameWithType: FormsAuthentication.Timeout
  fullName: System.Web.Security.FormsAuthentication.Timeout
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Web.Security.FormsAuthentication.#ctor*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: FormsAuthentication
  nameWithType: FormsAuthentication.FormsAuthentication
- uid: System.Web.Security.FormsAuthentication.Authenticate*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: Authenticate
  nameWithType: FormsAuthentication.Authenticate
- uid: System.Web.Security.FormsAuthentication.CookieDomain*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: CookieDomain
  nameWithType: FormsAuthentication.CookieDomain
- uid: System.Web.Security.FormsAuthentication.CookieMode*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: CookieMode
  nameWithType: FormsAuthentication.CookieMode
- uid: System.Web.Security.FormsAuthentication.CookiesSupported*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: CookiesSupported
  nameWithType: FormsAuthentication.CookiesSupported
- uid: System.Web.Security.FormsAuthentication.Decrypt*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: Decrypt
  nameWithType: FormsAuthentication.Decrypt
- uid: System.Web.Security.FormsAuthentication.DefaultUrl*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: DefaultUrl
  nameWithType: FormsAuthentication.DefaultUrl
- uid: System.Web.Security.FormsAuthentication.EnableCrossAppRedirects*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: EnableCrossAppRedirects
  nameWithType: FormsAuthentication.EnableCrossAppRedirects
- uid: System.Web.Security.FormsAuthentication.EnableFormsAuthentication*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: EnableFormsAuthentication
  nameWithType: FormsAuthentication.EnableFormsAuthentication
- uid: System.Web.Security.FormsAuthentication.Encrypt*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: Encrypt
  nameWithType: FormsAuthentication.Encrypt
- uid: System.Web.Security.FormsAuthentication.FormsCookieName*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: FormsCookieName
  nameWithType: FormsAuthentication.FormsCookieName
- uid: System.Web.Security.FormsAuthentication.FormsCookiePath*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: FormsCookiePath
  nameWithType: FormsAuthentication.FormsCookiePath
- uid: System.Web.Security.FormsAuthentication.GetAuthCookie*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: GetAuthCookie
  nameWithType: FormsAuthentication.GetAuthCookie
- uid: System.Web.Security.FormsAuthentication.GetRedirectUrl*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: GetRedirectUrl
  nameWithType: FormsAuthentication.GetRedirectUrl
- uid: System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: HashPasswordForStoringInConfigFile
  nameWithType: FormsAuthentication.HashPasswordForStoringInConfigFile
- uid: System.Web.Security.FormsAuthentication.Initialize*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: Initialize
  nameWithType: FormsAuthentication.Initialize
- uid: System.Web.Security.FormsAuthentication.IsEnabled*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: IsEnabled
  nameWithType: FormsAuthentication.IsEnabled
- uid: System.Web.Security.FormsAuthentication.LoginUrl*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: LoginUrl
  nameWithType: FormsAuthentication.LoginUrl
- uid: System.Web.Security.FormsAuthentication.RedirectFromLoginPage*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: RedirectFromLoginPage
  nameWithType: FormsAuthentication.RedirectFromLoginPage
- uid: System.Web.Security.FormsAuthentication.RedirectToLoginPage*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: RedirectToLoginPage
  nameWithType: FormsAuthentication.RedirectToLoginPage
- uid: System.Web.Security.FormsAuthentication.RenewTicketIfOld*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: RenewTicketIfOld
  nameWithType: FormsAuthentication.RenewTicketIfOld
- uid: System.Web.Security.FormsAuthentication.RequireSSL*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: RequireSSL
  nameWithType: FormsAuthentication.RequireSSL
- uid: System.Web.Security.FormsAuthentication.SetAuthCookie*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: SetAuthCookie
  nameWithType: FormsAuthentication.SetAuthCookie
- uid: System.Web.Security.FormsAuthentication.SignOut*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: SignOut
  nameWithType: FormsAuthentication.SignOut
- uid: System.Web.Security.FormsAuthentication.SlidingExpiration*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: SlidingExpiration
  nameWithType: FormsAuthentication.SlidingExpiration
- uid: System.Web.Security.FormsAuthentication.TicketCompatibilityMode*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: TicketCompatibilityMode
  nameWithType: FormsAuthentication.TicketCompatibilityMode
- uid: System.Web.Security.FormsAuthentication.Timeout*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: Timeout
  nameWithType: FormsAuthentication.Timeout
