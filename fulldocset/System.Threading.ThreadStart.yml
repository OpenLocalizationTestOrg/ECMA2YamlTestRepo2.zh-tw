### YamlMime:ManagedReference
items:
- uid: System.Threading.ThreadStart
  id: ThreadStart
  langs:
  - csharp
  name: ThreadStart
  nameWithType: ThreadStart
  fullName: System.Threading.ThreadStart
  type: Delegate
  summary: "代表在執行的方法<xref href=&quot;System.Threading.Thread&quot;> </xref>。"
  remarks: "建立 managed 的執行緒時，表示的執行緒執行之方法的 ThreadStart 委派或<xref:System.Threading.ParameterizedThreadStart>委派傳遞給<xref:System.Threading.Thread.%23ctor%2A>建構函式。</xref:System.Threading.Thread.%23ctor%2A> </xref:System.Threading.ParameterizedThreadStart> 執行緒不會開始執行之前<xref:System.Threading.Thread.Start%2A?displayProperty=fullName>方法呼叫。</xref:System.Threading.Thread.Start%2A?displayProperty=fullName> ThreadStart 所表示之方法的第一行中開始執行或<xref:System.Threading.ParameterizedThreadStart>委派。</xref:System.Threading.ParameterizedThreadStart>      > [!NOTE] > Visual Basic 和 C# 使用者可以省略 ThreadStart 或<xref:System.Threading.ParameterizedThreadStart>委派建構函式建立執行緒時。</xref:System.Threading.ParameterizedThreadStart> 在 Visual Basic 使用`AddressOf`運算子傳遞自己的方法時<xref:System.Threading.Thread.%23ctor%2A>建構函式，例如`Dim t As New Thread(AddressOf ThreadProc)`。</xref:System.Threading.Thread.%23ctor%2A> 在 C# 中，只需要指定執行緒的程序的名稱。 編譯器會選擇正確的委派建構函式。       [C + +] > [!NOTE] > 中建立 c + + 中的靜態方法只需要一個參數的 ThreadStart 委派的.NET framework 2.0 版︰ 回呼方法，類別名稱所限定的位址。 在舊版中兩個參數是必要時建立靜態方法的委派︰ 零 (null) 和方法位址。 所有版本的執行個體方法，都需要兩個參數︰ 執行個體變數和方法位址。"
  example:
  - "The following code example shows the syntax for creating and using a ThreadStart delegate with an instance method and with a static method.  \n  \n For another simple example that demonstrates how to create a ThreadStart delegate, see the <xref:System.Threading.Thread.Start?displayProperty=fullName> method overload. For more information about thread creation, see [Creating Threads and Passing Data at Start Time](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cpp[System.Threading.ThreadStart2#1](~/add/codesnippet/cpp/t-system.threading.threa_6_1.cpp)]\n [!code-cs[System.Threading.ThreadStart2#1](~/add/codesnippet/csharp/t-system.threading.threa_6_1.cs)]\n [!code-vb[System.Threading.ThreadStart2#1](~/add/codesnippet/visualbasic/t-system.threading.threa_6_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public delegate void ThreadStart();
  inheritance:
  - System.Delegate
  platform:
  - net462
references:
- uid: System.Delegate
  isExternal: false
  name: System.Delegate
