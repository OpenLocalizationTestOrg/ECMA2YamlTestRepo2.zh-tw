### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.EmbeddedMailObject
  id: EmbeddedMailObject
  children:
  - System.Web.UI.WebControls.EmbeddedMailObject.#ctor
  - System.Web.UI.WebControls.EmbeddedMailObject.#ctor(System.String,System.String)
  - System.Web.UI.WebControls.EmbeddedMailObject.Name
  - System.Web.UI.WebControls.EmbeddedMailObject.Path
  langs:
  - csharp
  name: EmbeddedMailObject
  nameWithType: EmbeddedMailObject
  fullName: System.Web.UI.WebControls.EmbeddedMailObject
  type: Class
  summary: "表示要內嵌在使用建構的電子郵件訊息中的項目<xref href=&quot;System.Web.UI.WebControls.MailDefinition&quot;></xref>類別。"
  remarks: "EmbeddedMailObject 表示要內嵌在郵件訊息中的項目。 這些內嵌項目可以是例如公司標誌的影像檔。 每個內嵌的項目被指定識別項和路徑。       若要確保電子郵件訊息檔案內內嵌的物件會正確顯示，必須符合下列條件:-郵件訊息的 HTML 格式。      -項目是影像檔 （.jpg、.gif、.bmp 等等）。      的中指定 HTML 格式主體檔案<xref:System.Web.UI.WebControls.MailDefinition.BodyFileName%2A>屬性包含參考映像檔案使用下列語法︰```       <img src=&quot;cid:identifier&quot; alt=&quot;Alternate Text&quot; />.       ```如果 EmbeddedMailObject 會新增至郵件訊息，而且無法滿足所有先前指定的需求，它將最有可能顯示為 mail 郵件的附件。</xref:System.Web.UI.WebControls.MailDefinition.BodyFileName%2A> 如果是郵件訊息中的識別項所參考的項目，但不是包含做為內嵌的項目，它會顯示為中斷附件檢視郵件時。       <xref:System.Web.UI.WebControls.EmbeddedMailObjectsCollection>儲存在單一電子郵件的 EmbeddedMailObject 物件的集合。</xref:System.Web.UI.WebControls.EmbeddedMailObjectsCollection> <xref:System.Web.UI.WebControls.EmbeddedMailObjectsCollection>正由<xref:System.Web.UI.WebControls.MailDefinition.EmbeddedObjects%2A>屬性<xref:System.Web.UI.WebControls.MailDefinition>物件來建立電子郵件訊息。</xref:System.Web.UI.WebControls.MailDefinition> </xref:System.Web.UI.WebControls.MailDefinition.EmbeddedObjects%2A> </xref:System.Web.UI.WebControls.EmbeddedMailObjectsCollection>       允許的內嵌的物件的郵件會藉由設定下列 Web 控制項中可設定其<xref:System.Web.UI.WebControls.MailDefinition>屬性以宣告方式:- <xref:System.Web.UI.WebControls.CreateUserWizard>- <xref:System.Web.UI.WebControls.ChangePassword>- <xref:System.Web.UI.WebControls.PasswordRecovery>> [!NOTE] > EmbeddedMailObject 中的值和<xref:System.Web.UI.WebControls.EmbeddedMailObjectsCollection>物件不會儲存在檢視狀態。</xref:System.Web.UI.WebControls.EmbeddedMailObjectsCollection> </xref:System.Web.UI.WebControls.PasswordRecovery> </xref:System.Web.UI.WebControls.ChangePassword> </xref:System.Web.UI.WebControls.CreateUserWizard> </xref:System.Web.UI.WebControls.MailDefinition> 這可防止惡意使用者探索伺服器的路徑資訊。"
  example:
  - "The following code example demonstrates an ASP.NET page that uses a <xref:System.Web.UI.WebControls.ChangePassword> Web control, and includes an event handler for the <xref:System.Web.UI.WebControls.ChangePassword.SendingMail> event named `SendingMail`. The code example assumes that the ASP.NET Web site has been configured to use ASP.NET membership and Forms authentication, and that a user has been created whose name and password are known to you. For more information, see [How to: Implement Simple Forms Authentication](~/add/includes/ajax-current-ext-md.md).  \n  \n If the password change succeeds, the code in the `SendingMail` event handler attempts to send an e-mail message to the user to confirm the change. SMTP must already be configured on the server in order for this code example to work. For information about how to configure an SMTP server, see [NIB: How to: Install and Configure SMTP Virtual Servers in IIS 6.0](http://msdn.microsoft.com/en-us/ed204b58-24af-47d0-9687-60e5df5f17f8). For the purposes of this example, it is not necessary to configure an SMTP server; the example is constructed to test for a failure to send an e-mail message.  \n  \n If a mail server is not configured correctly or some other error occurs and the e-mail message cannot be sent, the `SendMailError` function is called. A message is displayed to the user. In addition, an event is logged to the Windows Application event log with the assumption that an event source named MySamplesSite already exists. See the code example below to create the specified event source. For more information about creating an event source, see [Server Event Handling in ASP.NET Web Forms Pages](~/add/includes/ajax-current-ext-md.md). The <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> property of the <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> object is set to `true` to indicate that the error has been handled.  \n  \n [!code-cs[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_262_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_262_1.aspx)]  \n  \n Use the following code example if you need to programmatically add the event source named MySamplesSite to your Application log. This event source must exist in order for the first code example to work correctly. The following code example requires Administrator privileges.  \n  \n [!code-vb[System.Diagnostics.EventLog.CreateEventSource#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_262_2.vb)]\n [!code-cs[System.Diagnostics.EventLog.CreateEventSource#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_262_2.cs)]  \n  \n The following example code can be used as the ChangePasswordMail.htm file for the preceding example code.  \n  \n> [!IMPORTANT]\n>  Sending user account names or passwords in e-mail is a potential security threat. E-mail messages are typically sent in plain text and can be read by special network \"sniffing\" applications.  To improve security, use the mitigations that are described in [Securing Login Controls](~/add/includes/ajax-current-ext-md.md).  \n  \n```  \n<html>  \n<head><title></title></head>  \n<body>  \n<form>  \n  \n  <h1>Your password for the account named \"<%Username%>\" has changed.</h1>  \n  \n  <p>  \n  If you did not initiate this change, please call 1-206-555-0100.  \n  </p>  \n  \n  <p>  \n  <a href=\"http://www.contoso.com/login.aspx\">  \n    <img src=\"cid:LoginGif\" alt=\"Log In\" />  \n  </a>   \n  </p>  \n  \n  <p>  \n  Please read our attached Privacy Notice.  \n  </p>  \n  \n</form>  \n</body>  \n</html>  \n  \n```"
  syntax:
    content: >-
      [System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.EmbeddedMailObject/EmbeddedMailObjectTypeConverter))]

      public sealed class EmbeddedMailObject
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EmbeddedMailObject.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.EmbeddedMailObject
  langs:
  - csharp
  name: EmbeddedMailObject()
  nameWithType: EmbeddedMailObject.EmbeddedMailObject()
  fullName: System.Web.UI.WebControls.EmbeddedMailObject.EmbeddedMailObject()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "初始化的新執行個體<xref href=&quot;System.Web.UI.WebControls.EmbeddedMailObject&quot;></xref>類別。"
  remarks: "若要取得或設定內嵌項目的識別碼，使用<xref:System.Web.UI.WebControls.EmbeddedMailObject.Name%2A>屬性。</xref:System.Web.UI.WebControls.EmbeddedMailObject.Name%2A> 取得或設定路徑為內嵌的項目，請使用<xref:System.Web.UI.WebControls.EmbeddedMailObject.Path%2A>屬性。</xref:System.Web.UI.WebControls.EmbeddedMailObject.Path%2A> 這兩個屬性必須設定為成功在郵件中內嵌項目。"
  syntax:
    content: public EmbeddedMailObject ();
    parameters: []
  overload: System.Web.UI.WebControls.EmbeddedMailObject.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EmbeddedMailObject.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Web.UI.WebControls.EmbeddedMailObject
  langs:
  - csharp
  name: EmbeddedMailObject(String,String)
  nameWithType: EmbeddedMailObject.EmbeddedMailObject(String,String)
  fullName: System.Web.UI.WebControls.EmbeddedMailObject.EmbeddedMailObject(String,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "初始化的新執行個體<xref href=&quot;System.Web.UI.WebControls.EmbeddedMailObject&quot;></xref>類別，使用指定的識別項名稱和路徑來擴展物件。"
  remarks: ''
  example:
  - "The following code example shows a code-behind example of an ASP.NET page that uses a <xref:System.Web.UI.WebControls.ChangePassword> control, and includes an event handler for the <xref:System.Web.UI.WebControls.ChangePassword.SendingMail> event named `SendingMail`. This code example assumes that the ASP.NET Web site has been configured to use ASP.NET membership and Forms authentication, and that a user has been created whose name and password are known to you. For more information, see [How to: Implement Simple Forms Authentication](~/add/includes/ajax-current-ext-md.md).  \n  \n If the password change succeeds, the code in the `SendingMail` event handler attempts to send an e-mail message to the user to confirm the change. SMTP must already be configured on the server in order for this code example to work. For information about how to configure an SMTP server, see [NIB: How to: Install and Configure SMTP Virtual Servers in IIS 6.0](http://msdn.microsoft.com/en-us/ed204b58-24af-47d0-9687-60e5df5f17f8). For the purposes of this example, it is not necessary to configure an SMTP server; the example is constructed to test for a failure to send an e-mail message.  \n  \n If a mail server is not configured correctly or some other error occurs and the e-mail message cannot be sent, the `SendMailError` function is called. A message is displayed to the user. In addition, an event is logged to the Windows Application event log with the assumption that an event source named MySamplesSite already exists. See the code example below to create the specified event source. For more information about creating an event source, see [Server Event Handling in ASP.NET Web Forms Pages](~/add/includes/ajax-current-ext-md.md). The <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> property of the <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> object is set to `true` to indicate that the error has been handled.  \n  \n The following code example demonstrates using an .aspx page.  \n  \n [!code-cs[System.Web.UI.WebControls.ChangePassword#1](~/add/codesnippet/csharp/8f3c61bf-418b-4557-b797-_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ChangePassword#1](~/add/codesnippet/visualbasic/8f3c61bf-418b-4557-b797-_1.aspx)]  \n  \n The following code example demonstrates using a code-behind file.  \n  \n [!code-cs[System.Web.UI.WebControls.ChangePassword#2](~/add/codesnippet/csharp/8f3c61bf-418b-4557-b797-_2.cs)]\n [!code-vb[System.Web.UI.WebControls.ChangePassword#2](~/add/codesnippet/visualbasic/8f3c61bf-418b-4557-b797-_2.vb)]  \n  \n Use the following code example if you need to programmatically add the event source named MySamplesSite to your Application log. This event source must exist in order for the first code example to work correctly. The following code example requires Administrator privileges.  \n  \n [!code-vb[System.Diagnostics.EventLog.CreateEventSource#1](~/add/codesnippet/visualbasic/8f3c61bf-418b-4557-b797-_3.vb)]\n [!code-cs[System.Diagnostics.EventLog.CreateEventSource#1](~/add/codesnippet/csharp/8f3c61bf-418b-4557-b797-_3.cs)]  \n  \n The following example code can be used as the ChangePasswordMail.htm file for the preceding example code.  \n  \n> [!IMPORTANT]\n>  Sending user account names or passwords in an e-mail message is a potential security threat. E-mail messages are typically sent in plain text and can be read by special network \"sniffing\" applications.  To improve security, use the mitigations that are described in [Securing Login Controls](~/add/includes/ajax-current-ext-md.md).  \n  \n```  \n<html>  \n<head><title></title></head>  \n<body>  \n<form>  \n  \n  <h1>Your password for the account named \"<%Username%>\" has changed.</h1>  \n  \n  <p>  \n  If you did not initiate this change, please call 1-206-555-0100.  \n  </p>  \n  \n  <p>  \n  <a href=\"http://www.contoso.com/login.aspx\">  \n    <img src=\"cid:LoginGif\" alt=\"Log In\" />  \n  </a>   \n  </p>  \n  \n  <p>  \n  Please read our attached Privacy Notice.  \n  </p>  \n  \n</form>  \n</body>  \n</html>  \n```"
  syntax:
    content: public EmbeddedMailObject (string name, string path);
    parameters:
    - id: name
      type: System.String
      description: "要內嵌在郵件訊息中用做為項目識別碼的名稱。 如需詳細資訊，請參閱<xref:System.Web.UI.WebControls.EmbeddedMailObject.Name*>.</xref:System.Web.UI.WebControls.EmbeddedMailObject.Name*>"
    - id: path
      type: System.String
      description: "用來擷取要在郵件中內嵌的項目路徑。 如需詳細資訊，請參閱<xref:System.Web.UI.WebControls.EmbeddedMailObject.Path*>.</xref:System.Web.UI.WebControls.EmbeddedMailObject.Path*>"
  overload: System.Web.UI.WebControls.EmbeddedMailObject.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EmbeddedMailObject.Name
  id: Name
  parent: System.Web.UI.WebControls.EmbeddedMailObject
  langs:
  - csharp
  name: Name
  nameWithType: EmbeddedMailObject.Name
  fullName: System.Web.UI.WebControls.EmbeddedMailObject.Name
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定用來建構 mail 郵件中內嵌項目的識別項名稱<xref href=&quot;System.Web.UI.WebControls.MailDefinition&quot;></xref>類別。"
  remarks: "Name 屬性指定的識別碼，以宣告方式建構<xref:System.Web.UI.WebControls.MailDefinition>類別</xref:System.Web.UI.WebControls.MailDefinition>mail 郵件中內嵌項目 識別碼用來對應中所包含的項目<xref:System.Web.UI.WebControls.EmbeddedMailObject.Path%2A>屬性，其主體中指定的檔案中的適當位置<xref:System.Web.UI.WebControls.MailDefinition.BodyFileName%2A>屬性，請使用下列語法︰```   <img src=&quot;cid:identifier&quot; alt=&quot;Alternate Text&quot; />   ```項目通常是影像檔。</xref:System.Web.UI.WebControls.MailDefinition.BodyFileName%2A> </xref:System.Web.UI.WebControls.EmbeddedMailObject.Path%2A> 名稱屬性的預設值為空字串。       它是在您任何內嵌影像的郵件訊息中設定的替代文字屬性的協助工具設計的最佳作法。"
  example:
  - "The following code example demonstrates an ASP.NET page that uses a <xref:System.Web.UI.WebControls.ChangePassword> Web control, and includes an event handler for the <xref:System.Web.UI.WebControls.ChangePassword.SendingMail> event named `SendingMail`. The code example assumes that the ASP.NET Web site has been configured to use ASP.NET membership and Forms authentication, and that a user has been created whose name and password are known to you. For more information, see [How to: Implement Simple Forms Authentication](~/add/includes/ajax-current-ext-md.md).  \n  \n If the password change succeeds, the code in the `SendingMail` event handler attempts to send an e-mail message to the user to confirm the change. SMTP must already be configured on the server in order for this code example to work. For information about how to configure an SMTP server, see [NIB: How to: Install and Configure SMTP Virtual Servers in IIS 6.0](http://msdn.microsoft.com/en-us/ed204b58-24af-47d0-9687-60e5df5f17f8). For the purposes of this example, it is not necessary to configure an SMTP server; the example is constructed to test for a failure to send an e-mail message.  \n  \n If a mail server is not configured correctly or some other error occurs and the e-mail message cannot be sent, the `SendMailError` function is called. A message is displayed to the user. In addition, an event is logged to the Windows Application event log with the assumption that an event source named MySamplesSite already exists. See the code example below to create the specified event source. For more information about creating an event source, see [Server Event Handling in ASP.NET Web Forms Pages](~/add/includes/ajax-current-ext-md.md). The <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> property of the <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> object is set to `true` to indicate that the error has been handled.  \n  \n [!code-cs[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_266_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_266_1.aspx)]  \n  \n Use the following code example if you need to programmatically add the event source named MySamplesSite to your Application log. This event source must exist in order for the first code example to work correctly. The following code example requires Administrator privileges.  \n  \n [!code-vb[System.Diagnostics.EventLog.CreateEventSource#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_266_2.vb)]\n [!code-cs[System.Diagnostics.EventLog.CreateEventSource#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_266_2.cs)]  \n  \n The following example code can be used as the ChangePasswordMail.htm file for the preceding example code.  \n  \n> [!IMPORTANT]\n>  Sending user account names or passwords in an e-mail message is a potential security threat. E-mail messages are sent in plain text and can be read by special network \"sniffing\" applications.  To improve security, use the mitigations that are described in [Securing Login Controls](~/add/includes/ajax-current-ext-md.md).  \n  \n```  \n<html>  \n<head><title></title></head>  \n<body>  \n<form>  \n  \n  <h1>Your password for the account named \"<%Username%>\" has changed.</h1>  \n  \n  <p>  \n  If you did not initiate this change, please call 1-206-555-0100.  \n  </p>  \n  \n  <p>  \n  <a href=\"http://www.contoso.com/login.aspx\">  \n    <img src=\"cid:LoginGif\" alt=\"Log In\" />  \n  </a>   \n  </p>  \n  \n  <p>  \n  Please read our attached Privacy Notice.  \n  </p>  \n  \n</form>  \n</body>  \n</html>  \n```"
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "傳回要在郵件中內嵌的項目識別項。"
  overload: System.Web.UI.WebControls.EmbeddedMailObject.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EmbeddedMailObject.Path
  id: Path
  parent: System.Web.UI.WebControls.EmbeddedMailObject
  langs:
  - csharp
  name: Path
  nameWithType: EmbeddedMailObject.Path
  fullName: System.Web.UI.WebControls.EmbeddedMailObject.Path
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定用來擷取要建構使用 mail 郵件中內嵌的項目路徑<xref href=&quot;System.Web.UI.WebControls.MailDefinition&quot;></xref>類別。"
  remarks: "The Path property specifies the path to the item you want to embed in the mail message constructed declaratively with the <xref:System.Web.UI.WebControls.MailDefinition> object. The file path in Path must be a path such as C:\\MyServer\\Banner.gif. Typically, the embedded item is an image file. If an image file is referenced by its identifier in the mail message but not included in the message, the image appears as a broken attachment when the e-mail message is viewed.  \n  \n It is a best practice for accessibility design to set the alternate text property in your mail message for any embedded images."
  example:
  - "The following code example demonstrates an ASP.NET page that uses a <xref:System.Web.UI.WebControls.ChangePassword> Web control, and includes an event handler for the <xref:System.Web.UI.WebControls.ChangePassword.SendingMail> event named `SendingMail`. The code example assumes that the ASP.NET Web site has been configured to use ASP.NET membership and Forms authentication, and that a user has been created whose name and password are known to you. For more information, see [How to: Implement Simple Forms Authentication](~/add/includes/ajax-current-ext-md.md).  \n  \n If the password change succeeds, the code in the `SendingMail` event handler attempts to send an e-mail message to the user to confirm the change. SMTP must already be configured on the server in order for this code example to work. For information about how to configure an SMTP server, see [NIB: How to: Install and Configure SMTP Virtual Servers in IIS 6.0](http://msdn.microsoft.com/en-us/ed204b58-24af-47d0-9687-60e5df5f17f8). For the purposes of this example, it is not necessary to configure an SMTP server; the example is constructed to test for a failure to send an e-mail message.  \n  \n If a mail server is not configured correctly or some other error occurs and the e-mail message cannot be sent, the `SendMailError` function is called. A message is displayed to the user. In addition, an event is logged to the Windows Application event log with the assumption that an event source named MySamplesSite already exists. See the code example below to create the specified event source. For more information about creating an event source, see [Server Event Handling in ASP.NET Web Forms Pages](~/add/includes/ajax-current-ext-md.md). The <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> property of the <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> object is set to `true` to indicate that the error has been handled.  \n  \n [!code-cs[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_255_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_255_1.aspx)]  \n  \n Use the following code example if you need to programmatically add the event source named MySamplesSite to your Application log. This event source must exist in order for the first code example to work correctly. The following code example requires Administrator privileges.  \n  \n [!code-vb[System.Diagnostics.EventLog.CreateEventSource#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_255_2.vb)]\n [!code-cs[System.Diagnostics.EventLog.CreateEventSource#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_255_2.cs)]  \n  \n The following example code can be used as the ChangePasswordMail.htm file for the preceding example code.  \n  \n> [!IMPORTANT]\n>  Sending user account names or passwords in an e-mail message is a potential security threat. E-mail messages are typically sent in plain text and can be read by special network \"sniffing\" applications.  To improve security, use the mitigations that are described in [Securing Login Controls](~/add/includes/ajax-current-ext-md.md).  \n  \n```  \n<html>  \n<head><title></title></head>  \n<body>  \n<form>  \n  \n  <h1>Your password for the account named \"<%Username%>\" has changed.</h1>  \n  \n  <p>  \n  If you did not initiate this change, please call 1-206-555-0100.  \n  </p>  \n  \n  <p>  \n  <a href=\"http://www.contoso.com/login.aspx\">  \n    <img src=\"cid:LoginGif\" alt=\"Log In\" />  \n  </a>   \n  </p>  \n  \n  <p>  \n  Please read our attached Privacy Notice.  \n  </p>  \n  \n</form>  \n</body>  \n</html>  \n```"
  syntax:
    content: public string Path { get; set; }
    return:
      type: System.String
      description: "傳回要在郵件中內嵌的項目路徑。"
  overload: System.Web.UI.WebControls.EmbeddedMailObject.Path*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.UI.WebControls.EmbeddedMailObject.#ctor
  parent: System.Web.UI.WebControls.EmbeddedMailObject
  isExternal: false
  name: EmbeddedMailObject()
  nameWithType: EmbeddedMailObject.EmbeddedMailObject()
  fullName: System.Web.UI.WebControls.EmbeddedMailObject.EmbeddedMailObject()
- uid: System.Web.UI.WebControls.EmbeddedMailObject.#ctor(System.String,System.String)
  parent: System.Web.UI.WebControls.EmbeddedMailObject
  isExternal: false
  name: EmbeddedMailObject(String,String)
  nameWithType: EmbeddedMailObject.EmbeddedMailObject(String,String)
  fullName: System.Web.UI.WebControls.EmbeddedMailObject.EmbeddedMailObject(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.EmbeddedMailObject.Name
  parent: System.Web.UI.WebControls.EmbeddedMailObject
  isExternal: false
  name: Name
  nameWithType: EmbeddedMailObject.Name
  fullName: System.Web.UI.WebControls.EmbeddedMailObject.Name
- uid: System.Web.UI.WebControls.EmbeddedMailObject.Path
  parent: System.Web.UI.WebControls.EmbeddedMailObject
  isExternal: false
  name: Path
  nameWithType: EmbeddedMailObject.Path
  fullName: System.Web.UI.WebControls.EmbeddedMailObject.Path
- uid: System.Web.UI.WebControls.EmbeddedMailObject.#ctor*
  parent: System.Web.UI.WebControls.EmbeddedMailObject
  isExternal: false
  name: EmbeddedMailObject
  nameWithType: EmbeddedMailObject.EmbeddedMailObject
- uid: System.Web.UI.WebControls.EmbeddedMailObject.Name*
  parent: System.Web.UI.WebControls.EmbeddedMailObject
  isExternal: false
  name: Name
  nameWithType: EmbeddedMailObject.Name
- uid: System.Web.UI.WebControls.EmbeddedMailObject.Path*
  parent: System.Web.UI.WebControls.EmbeddedMailObject
  isExternal: false
  name: Path
  nameWithType: EmbeddedMailObject.Path
