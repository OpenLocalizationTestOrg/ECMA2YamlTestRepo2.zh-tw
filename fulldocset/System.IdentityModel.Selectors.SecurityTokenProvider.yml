### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Selectors.SecurityTokenProvider
  id: SecurityTokenProvider
  children:
  - System.IdentityModel.Selectors.SecurityTokenProvider.#ctor
  - System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)
  - System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)
  - System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetToken(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetTokenCore(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)
  - System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)
  - System.IdentityModel.Selectors.SecurityTokenProvider.CancelToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Selectors.SecurityTokenProvider.CancelTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelToken(System.IAsyncResult)
  - System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelTokenCore(System.IAsyncResult)
  - System.IdentityModel.Selectors.SecurityTokenProvider.EndGetToken(System.IAsyncResult)
  - System.IdentityModel.Selectors.SecurityTokenProvider.EndGetTokenCore(System.IAsyncResult)
  - System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewToken(System.IAsyncResult)
  - System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewTokenCore(System.IAsyncResult)
  - System.IdentityModel.Selectors.SecurityTokenProvider.GetToken(System.TimeSpan)
  - System.IdentityModel.Selectors.SecurityTokenProvider.GetTokenCore(System.TimeSpan)
  - System.IdentityModel.Selectors.SecurityTokenProvider.RenewToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Selectors.SecurityTokenProvider.RenewTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenCancellation
  - System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenRenewal
  langs:
  - csharp
  name: SecurityTokenProvider
  nameWithType: SecurityTokenProvider
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider
  type: Class
  summary: "表示處理 SOAP 訊息寄件者的安全性權杖的安全性權杖提供者。"
  remarks: "當您需要自訂安全性權杖時，請使用 SecurityTokenProvider 類別。 安全性權杖提供者的角色是由用戶端傳送 SOAP 訊息和安全性權杖用來驗證用戶端，或保護 SOAP 訊息時，取得安全性權杖。 具體來說，<xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A>呼叫方法來取得安全性權杖。</xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A> 安全性權杖提供者也可以呼叫來取消和更新安全性使用<xref:System.IdentityModel.Selectors.SecurityTokenProvider.CancelToken%2A>和<xref:System.IdentityModel.Selectors.SecurityTokenProvider.RenewToken%2A>方法。</xref:System.IdentityModel.Selectors.SecurityTokenProvider.RenewToken%2A> </xref:System.IdentityModel.Selectors.SecurityTokenProvider.CancelToken%2A>       類別衍生自<xref:System.IdentityModel.Selectors.SecurityTokenManager>類別實作<xref:System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenProvider%2A>方法來判斷這個安全性權杖提供者，才能指定的安全性權杖。</xref:System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenProvider%2A> </xref:System.IdentityModel.Selectors.SecurityTokenManager>       <xref:System.ServiceModel.ClientCredentialsSecurityTokenManager>和<xref:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager>類別會提供預設的實作內建安全性權杖的型別。</xref:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager> </xref:System.ServiceModel.ClientCredentialsSecurityTokenManager> 自訂安全性權杖的情況下，您必須衍生類別，從其中一個<xref:System.IdentityModel.Selectors.SecurityTokenManager>， <xref:System.ServiceModel.ClientCredentialsSecurityTokenManager>，或<xref:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager>類別，並提供建立安全性權杖提供者、 安全性權杖驗證器和自訂安全性權杖的安全性權杖序列化程式的功能。</xref:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager> </xref:System.ServiceModel.ClientCredentialsSecurityTokenManager> </xref:System.IdentityModel.Selectors.SecurityTokenManager> [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]建立自訂權杖，請參閱[How to︰ 建立自訂權杖](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - >-
    [!code-vb[SecurityTokenProvider#0](~/add/codesnippet/visualbasic/t-system.identitymodel.s_9_1.vb)]
     [!code-cs[SecurityTokenProvider#0](~/add/codesnippet/csharp/t-system.identitymodel.s_9_1.cs)]
  syntax:
    content: public abstract class SecurityTokenProvider
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.#ctor
  id: '#ctor'
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  langs:
  - csharp
  name: SecurityTokenProvider()
  nameWithType: SecurityTokenProvider.SecurityTokenProvider()
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.SecurityTokenProvider()
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "初始化的新執行個體<xref href=&quot;System.IdentityModel.Selectors.SecurityTokenProvider&quot;></xref>類別。"
  syntax:
    content: protected SecurityTokenProvider ();
    parameters: []
  overload: System.IdentityModel.Selectors.SecurityTokenProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)
  id: BeginCancelToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  langs:
  - csharp
  name: BeginCancelToken(TimeSpan,SecurityToken,AsyncCallback,Object)
  nameWithType: SecurityTokenProvider.BeginCancelToken(TimeSpan,SecurityToken,AsyncCallback,Object)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelToken(TimeSpan,SecurityToken,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "開始非同步作業，以便取消安全性權杖。"
  remarks: "您可以取消，例如，已核發的安全性權杖可讓要求時它的方式取消安全性權杖的用戶端。"
  syntax:
    content: public IAsyncResult BeginCancelToken (TimeSpan timeout, System.IdentityModel.Tokens.SecurityToken token, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "A<xref:System.TimeSpan>指定取消安全性權杖之訊息的逾時值。</xref:System.TimeSpan>"
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref>取消。"
    - id: callback
      type: System.AsyncCallback
      description: "<xref:System.AsyncCallback>委派會接收非同步關閉作業完成的通知。</xref:System.AsyncCallback>"
    - id: state
      type: System.Object
      description: "指定的物件，由應用程式，其中包含與非同步關閉作業相關聯的狀態資訊。"
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>參考非同步取消作業。</xref:System.IAsyncResult>"
  overload: System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelToken*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)
  id: BeginCancelTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  langs:
  - csharp
  name: BeginCancelTokenCore(TimeSpan,SecurityToken,AsyncCallback,Object)
  nameWithType: SecurityTokenProvider.BeginCancelTokenCore(TimeSpan,SecurityToken,AsyncCallback,Object)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelTokenCore(TimeSpan,SecurityToken,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "開始非同步作業，以便取消安全性權杖。"
  remarks: "您可以取消，例如，已核發的安全性權杖可讓要求時它的方式取消安全性權杖的用戶端。"
  syntax:
    content: protected virtual IAsyncResult BeginCancelTokenCore (TimeSpan timeout, System.IdentityModel.Tokens.SecurityToken token, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "A<xref:System.TimeSpan>指定取消安全性權杖之訊息的逾時值。</xref:System.TimeSpan>"
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref>取消。"
    - id: callback
      type: System.AsyncCallback
      description: "<xref:System.AsyncCallback>委派會接收非同步關閉作業完成的通知。</xref:System.AsyncCallback>"
    - id: state
      type: System.Object
      description: "指定的物件，由應用程式，其中包含與非同步關閉作業相關聯的狀態資訊。"
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>參考非同步取消作業。</xref:System.IAsyncResult>"
  overload: System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelTokenCore*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetToken(System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginGetToken(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  langs:
  - csharp
  name: BeginGetToken(TimeSpan,AsyncCallback,Object)
  nameWithType: SecurityTokenProvider.BeginGetToken(TimeSpan,AsyncCallback,Object)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetToken(TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "開始非同步作業，以便取得安全性權杖。"
  remarks: "BeginGetToken 方法呼叫<xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetTokenCore%2A>方法。</xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetTokenCore%2A>"
  syntax:
    content: public IAsyncResult BeginGetToken (TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "A <xref:System.TimeSpan>，指定取得安全性權杖之訊息的逾時值。</xref:System.TimeSpan>"
    - id: callback
      type: System.AsyncCallback
      description: "<xref:System.AsyncCallback>委派會接收非同步關閉作業完成的通知。</xref:System.AsyncCallback>"
    - id: state
      type: System.Object
      description: "指定的物件，由應用程式，其中包含與非同步關閉作業相關聯的狀態資訊。"
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>參考非同步關閉作業。</xref:System.IAsyncResult>"
  overload: System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetToken*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetTokenCore(System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginGetTokenCore(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  langs:
  - csharp
  name: BeginGetTokenCore(TimeSpan,AsyncCallback,Object)
  nameWithType: SecurityTokenProvider.BeginGetTokenCore(TimeSpan,AsyncCallback,Object)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetTokenCore(TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "開始非同步作業，以便取得安全性權杖。"
  remarks: "當您繼承自<xref:System.IdentityModel.Selectors.SecurityTokenProvider>類別，您不需要覆寫非同步的方法中，做為<xref:System.IdentityModel.Selectors.SecurityTokenProvider>基底類別會提供同步方法為基礎的非同步支援。</xref:System.IdentityModel.Selectors.SecurityTokenProvider> </xref:System.IdentityModel.Selectors.SecurityTokenProvider> 因此，您不需要覆寫 BeginGetTokenCore 方法，除非您必須提供您自己的非同步實作。       <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetToken%2A>方法會呼叫 BeginGetTokenCore 方法。</xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetToken%2A>"
  syntax:
    content: protected virtual IAsyncResult BeginGetTokenCore (TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "A <xref:System.TimeSpan>，指定取得安全性權杖之訊息的逾時值。</xref:System.TimeSpan>"
    - id: callback
      type: System.AsyncCallback
      description: "<xref:System.AsyncCallback>委派會接收非同步關閉作業完成的通知。</xref:System.AsyncCallback>"
    - id: state
      type: System.Object
      description: "指定的物件，由應用程式，其中包含與非同步關閉作業相關聯的狀態資訊。"
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>，參考非同步作業。</xref:System.IAsyncResult>"
  overload: System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetTokenCore*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)
  id: BeginRenewToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  langs:
  - csharp
  name: BeginRenewToken(TimeSpan,SecurityToken,AsyncCallback,Object)
  nameWithType: SecurityTokenProvider.BeginRenewToken(TimeSpan,SecurityToken,AsyncCallback,Object)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewToken(TimeSpan,SecurityToken,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "開始非同步作業的更新安全性權杖。"
  remarks: "BeginRenewToken 方法呼叫<xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewTokenCore%2A>方法。</xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewTokenCore%2A>"
  syntax:
    content: public IAsyncResult BeginRenewToken (TimeSpan timeout, System.IdentityModel.Tokens.SecurityToken tokenToBeRenewed, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "A<xref:System.TimeSpan>指定更新安全性權杖之訊息的逾時值。</xref:System.TimeSpan>"
    - id: tokenToBeRenewed
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref>更新。"
    - id: callback
      type: System.AsyncCallback
      description: "<xref:System.AsyncCallback>委派會接收非同步關閉作業完成的通知。</xref:System.AsyncCallback>"
    - id: state
      type: System.Object
      description: "指定的物件，由應用程式，其中包含與非同步關閉作業相關聯的狀態資訊。"
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>，參考非同步作業。</xref:System.IAsyncResult>"
  overload: System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewToken*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)
  id: BeginRenewTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  langs:
  - csharp
  name: BeginRenewTokenCore(TimeSpan,SecurityToken,AsyncCallback,Object)
  nameWithType: SecurityTokenProvider.BeginRenewTokenCore(TimeSpan,SecurityToken,AsyncCallback,Object)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewTokenCore(TimeSpan,SecurityToken,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "開始非同步作業的更新安全性權杖。"
  remarks: "當您繼承自<xref:System.IdentityModel.Selectors.SecurityTokenProvider>類別，您不需要覆寫非同步的方法中，做為<xref:System.IdentityModel.Selectors.SecurityTokenProvider>基底類別會提供同步方法為基礎的非同步支援。</xref:System.IdentityModel.Selectors.SecurityTokenProvider> </xref:System.IdentityModel.Selectors.SecurityTokenProvider> 因此，您不需要覆寫 BeginRenewTokenCore 方法，除非您必須提供您自己的非同步實作。       <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewToken%2A>方法會呼叫 BeginRenewTokenCore 方法。</xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewToken%2A>"
  syntax:
    content: protected virtual IAsyncResult BeginRenewTokenCore (TimeSpan timeout, System.IdentityModel.Tokens.SecurityToken tokenToBeRenewed, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "A<xref:System.TimeSpan>指定更新安全性權杖之訊息的逾時值。</xref:System.TimeSpan>"
    - id: tokenToBeRenewed
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref>更新。"
    - id: callback
      type: System.AsyncCallback
      description: "<xref:System.AsyncCallback>委派會接收非同步關閉作業完成的通知。</xref:System.AsyncCallback>"
    - id: state
      type: System.Object
      description: "指定的物件，由應用程式，其中包含與非同步關閉作業相關聯的狀態資訊。"
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>，參考非同步作業。</xref:System.IAsyncResult>"
  overload: System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewTokenCore*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.CancelToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)
  id: CancelToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  langs:
  - csharp
  name: CancelToken(TimeSpan,SecurityToken)
  nameWithType: SecurityTokenProvider.CancelToken(TimeSpan,SecurityToken)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.CancelToken(TimeSpan,SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "取消安全性權杖。"
  remarks: "您可以取消，例如，已核發的安全性權杖可讓要求時它的方式取消安全性權杖的用戶端。       CancelToken 方法呼叫<xref:System.IdentityModel.Selectors.SecurityTokenProvider.CancelTokenCore%2A>方法。</xref:System.IdentityModel.Selectors.SecurityTokenProvider.CancelTokenCore%2A>"
  syntax:
    content: public void CancelToken (TimeSpan timeout, System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "A<xref:System.TimeSpan>指定取消安全性權杖之訊息的逾時值。</xref:System.TimeSpan>"
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref>取消。"
  overload: System.IdentityModel.Selectors.SecurityTokenProvider.CancelToken*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.CancelTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)
  id: CancelTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  langs:
  - csharp
  name: CancelTokenCore(TimeSpan,SecurityToken)
  nameWithType: SecurityTokenProvider.CancelTokenCore(TimeSpan,SecurityToken)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.CancelTokenCore(TimeSpan,SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "取消安全性權杖。"
  remarks: "您可以取消，例如，已核發的安全性權杖可讓要求時它的方式取消安全性權杖的用戶端。       <xref:System.IdentityModel.Selectors.SecurityTokenProvider.CancelToken%2A>方法會呼叫 CancelTokenCore 方法。</xref:System.IdentityModel.Selectors.SecurityTokenProvider.CancelToken%2A>       當 CancelTokenCore 方法會覆寫，而且不能取消安全性權杖傳遞至權杖參數，會擲回<xref:System.IdentityModel.Tokens.SecurityTokenException>例外狀況。</xref:System.IdentityModel.Tokens.SecurityTokenException>"
  syntax:
    content: protected virtual void CancelTokenCore (TimeSpan timeout, System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "A<xref:System.TimeSpan>指定取消安全性權杖之訊息的逾時值。</xref:System.TimeSpan>"
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref>取消。"
  overload: System.IdentityModel.Selectors.SecurityTokenProvider.CancelTokenCore*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelToken(System.IAsyncResult)
  id: EndCancelToken(System.IAsyncResult)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  langs:
  - csharp
  name: EndCancelToken(IAsyncResult)
  nameWithType: SecurityTokenProvider.EndCancelToken(IAsyncResult)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelToken(IAsyncResult)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "完成非同步作業，以便取消安全性權杖。"
  remarks: "您可以取消，例如，已核發的安全性權杖可讓要求時它的方式取消安全性權杖的用戶端。       EndCancelToken 方法呼叫<xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelTokenCore%2A>方法。</xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelTokenCore%2A>"
  syntax:
    content: public void EndCancelToken (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>呼叫所傳回<xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelToken*>方法。</xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelToken*> </xref:System.IAsyncResult>"
  overload: System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelToken*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelTokenCore(System.IAsyncResult)
  id: EndCancelTokenCore(System.IAsyncResult)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  langs:
  - csharp
  name: EndCancelTokenCore(IAsyncResult)
  nameWithType: SecurityTokenProvider.EndCancelTokenCore(IAsyncResult)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelTokenCore(IAsyncResult)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "完成非同步作業，以便取消安全性權杖。"
  remarks: "您可以取消，例如，已核發的安全性權杖可讓要求時它的方式取消安全性權杖的用戶端。       當您繼承自<xref:System.IdentityModel.Selectors.SecurityTokenProvider>類別，您不需要覆寫非同步的方法中，做為<xref:System.IdentityModel.Selectors.SecurityTokenProvider>基底類別會提供同步方法為基礎的非同步支援。</xref:System.IdentityModel.Selectors.SecurityTokenProvider> </xref:System.IdentityModel.Selectors.SecurityTokenProvider> 因此，您不需要覆寫 EndCancelTokenCore 方法，除非您必須提供您自己的非同步實作。       <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelToken%2A>方法會呼叫 EndCancelTokenCore 方法。</xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelToken%2A>"
  syntax:
    content: protected virtual void EndCancelTokenCore (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>呼叫所傳回<xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelTokenCore*>方法。</xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelTokenCore*> </xref:System.IAsyncResult>"
  overload: System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelTokenCore*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.EndGetToken(System.IAsyncResult)
  id: EndGetToken(System.IAsyncResult)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  langs:
  - csharp
  name: EndGetToken(IAsyncResult)
  nameWithType: SecurityTokenProvider.EndGetToken(IAsyncResult)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.EndGetToken(IAsyncResult)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "完成非同步作業，以便取得安全性權杖。"
  remarks: "EndGetToken 方法呼叫<xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndGetTokenCore%2A>方法。</xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndGetTokenCore%2A>"
  syntax:
    content: public System.IdentityModel.Tokens.SecurityToken EndGetToken (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>呼叫所傳回<xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetToken*>方法。</xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetToken*> </xref:System.IAsyncResult>"
    return:
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref>表示安全性權杖。"
  overload: System.IdentityModel.Selectors.SecurityTokenProvider.EndGetToken*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.EndGetTokenCore(System.IAsyncResult)
  id: EndGetTokenCore(System.IAsyncResult)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  langs:
  - csharp
  name: EndGetTokenCore(IAsyncResult)
  nameWithType: SecurityTokenProvider.EndGetTokenCore(IAsyncResult)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.EndGetTokenCore(IAsyncResult)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "完成非同步作業，以便取得安全性權杖。"
  remarks: "當您繼承自<xref:System.IdentityModel.Selectors.SecurityTokenProvider>類別，您不需要覆寫非同步的方法中，做為<xref:System.IdentityModel.Selectors.SecurityTokenProvider>基底類別會提供同步方法為基礎的非同步支援。</xref:System.IdentityModel.Selectors.SecurityTokenProvider> </xref:System.IdentityModel.Selectors.SecurityTokenProvider> 因此，您不需要覆寫 EndGetTokenCore 方法，除非您必須提供您自己的非同步實作。       <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndGetToken%2A>方法會呼叫 EndGetTokenCore 方法。</xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndGetToken%2A>"
  syntax:
    content: protected virtual System.IdentityModel.Tokens.SecurityToken EndGetTokenCore (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>呼叫所傳回<xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetTokenCore*>方法。</xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetTokenCore*> </xref:System.IAsyncResult>"
    return:
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref>表示安全性權杖。"
  overload: System.IdentityModel.Selectors.SecurityTokenProvider.EndGetTokenCore*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewToken(System.IAsyncResult)
  id: EndRenewToken(System.IAsyncResult)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  langs:
  - csharp
  name: EndRenewToken(IAsyncResult)
  nameWithType: SecurityTokenProvider.EndRenewToken(IAsyncResult)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewToken(IAsyncResult)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "完成非同步作業，以便更新安全性權杖。"
  remarks: "EndRenewToken 方法呼叫<xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewTokenCore%2A>方法。</xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewTokenCore%2A>"
  syntax:
    content: public System.IdentityModel.Tokens.SecurityToken EndRenewToken (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>呼叫所傳回<xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewToken*>方法。</xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewToken*> </xref:System.IAsyncResult>"
    return:
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> ，表示已更新的安全性權杖。"
  overload: System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewToken*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewTokenCore(System.IAsyncResult)
  id: EndRenewTokenCore(System.IAsyncResult)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  langs:
  - csharp
  name: EndRenewTokenCore(IAsyncResult)
  nameWithType: SecurityTokenProvider.EndRenewTokenCore(IAsyncResult)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewTokenCore(IAsyncResult)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "完成非同步作業，以便更新安全性權杖。"
  remarks: "當您繼承自<xref:System.IdentityModel.Selectors.SecurityTokenProvider>類別，您不需要覆寫非同步的方法中，做為<xref:System.IdentityModel.Selectors.SecurityTokenProvider>基底類別會提供同步方法為基礎的非同步支援。</xref:System.IdentityModel.Selectors.SecurityTokenProvider> </xref:System.IdentityModel.Selectors.SecurityTokenProvider> 因此，您不需要覆寫 EndRenewTokenCore 方法，除非您必須提供您自己的非同步實作。       <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewToken%2A>方法會呼叫 EndRenewTokenCore 方法。</xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewToken%2A>"
  syntax:
    content: protected virtual System.IdentityModel.Tokens.SecurityToken EndRenewTokenCore (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>呼叫所傳回<xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewTokenCore*>方法。</xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewTokenCore*> </xref:System.IAsyncResult>"
    return:
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> ，表示已更新的安全性權杖。"
  overload: System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewTokenCore*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.GetToken(System.TimeSpan)
  id: GetToken(System.TimeSpan)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  langs:
  - csharp
  name: GetToken(TimeSpan)
  nameWithType: SecurityTokenProvider.GetToken(TimeSpan)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.GetToken(TimeSpan)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "取得安全性權杖。"
  remarks: "GetToken 方法會呼叫<xref:System.ServiceModel.Description.ClientCredentials>類別時，用戶端傳送 SOAP 訊息且需要安全性權杖。</xref:System.ServiceModel.Description.ClientCredentials>       GetToken 方法呼叫<xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetTokenCore%2A>方法。</xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetTokenCore%2A>       在大部分情況下`timeout`參數不由<xref:System.IdentityModel.Selectors.SecurityTokenProvider>例如<xref:System.IdentityModel.Selectors.UserNameSecurityTokenProvider>.</xref:System.IdentityModel.Selectors.UserNameSecurityTokenProvider></xref:System.IdentityModel.Selectors.SecurityTokenProvider>的衍生類別 不過，有時擷取安全性權杖包含分散式訊息。 範例是<xref:System.ServiceModel.Security.Tokens.IssuedSecurityTokenProvider>同盟服務中使用。</xref:System.ServiceModel.Security.Tokens.IssuedSecurityTokenProvider> 在這些情況下`timeout`參數用來避免網路失敗、 訊息遺失或其他錯誤狀況所造成的例外狀況。"
  syntax:
    content: public System.IdentityModel.Tokens.SecurityToken GetToken (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "A <xref:System.TimeSpan>，指定取得安全性權杖之訊息的逾時值。</xref:System.TimeSpan>"
    return:
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> ，代表要取得的安全性權杖。"
  overload: System.IdentityModel.Selectors.SecurityTokenProvider.GetToken*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.GetTokenCore(System.TimeSpan)
  id: GetTokenCore(System.TimeSpan)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  langs:
  - csharp
  name: GetTokenCore(TimeSpan)
  nameWithType: SecurityTokenProvider.GetTokenCore(TimeSpan)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.GetTokenCore(TimeSpan)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "取得安全性權杖。"
  remarks: "當 GetTokenCore 方法會覆寫，而且無法取得安全性權杖傳遞至權杖參數，會擲回<xref:System.IdentityModel.Tokens.SecurityTokenException>例外狀況。</xref:System.IdentityModel.Tokens.SecurityTokenException>       <xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A>方法透過呼叫<xref:System.ServiceModel.Description.ClientCredentials>類別時，用戶端傳送 SOAP 訊息且需要安全性權杖。</xref:System.ServiceModel.Description.ClientCredentials> </xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A>       <xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A>方法會呼叫 GetTokenCore 方法。</xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A>"
  example:
  - >-
    [!code-vb[SecurityTokenProvider#1](~/add/codesnippet/visualbasic/501effc0-dded-4b3b-893a-_1.vb)]
     [!code-cs[SecurityTokenProvider#1](~/add/codesnippet/csharp/501effc0-dded-4b3b-893a-_1.cs)]
  syntax:
    content: protected abstract System.IdentityModel.Tokens.SecurityToken GetTokenCore (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "A <xref:System.TimeSpan>，指定取得安全性權杖之訊息的逾時值。</xref:System.TimeSpan>"
    return:
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> ，代表要取得的安全性權杖。"
  overload: System.IdentityModel.Selectors.SecurityTokenProvider.GetTokenCore*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.RenewToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)
  id: RenewToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  langs:
  - csharp
  name: RenewToken(TimeSpan,SecurityToken)
  nameWithType: SecurityTokenProvider.RenewToken(TimeSpan,SecurityToken)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.RenewToken(TimeSpan,SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "更新安全性權杖。"
  remarks: "可更新且已發出的安全性權杖可讓用戶端安全性權杖即將或已經過期時更新它。       RenewToken 方法呼叫<xref:System.IdentityModel.Selectors.SecurityTokenProvider.RenewTokenCore%2A>方法。</xref:System.IdentityModel.Selectors.SecurityTokenProvider.RenewTokenCore%2A>"
  syntax:
    content: public System.IdentityModel.Tokens.SecurityToken RenewToken (TimeSpan timeout, System.IdentityModel.Tokens.SecurityToken tokenToBeRenewed);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "A<xref:System.TimeSpan>指定更新安全性權杖之訊息的逾時值。</xref:System.TimeSpan>"
    - id: tokenToBeRenewed
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref>更新。"
    return:
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> ，表示已更新的安全性權杖。"
  overload: System.IdentityModel.Selectors.SecurityTokenProvider.RenewToken*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.RenewTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)
  id: RenewTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  langs:
  - csharp
  name: RenewTokenCore(TimeSpan,SecurityToken)
  nameWithType: SecurityTokenProvider.RenewTokenCore(TimeSpan,SecurityToken)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.RenewTokenCore(TimeSpan,SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "更新安全性權杖。"
  remarks: "可更新且已發出的安全性權杖可讓用戶端安全性權杖即將或已經過期時更新它。       當 RenewTokenCore 方法會覆寫，而且無法更新傳遞至權杖參數的安全性權杖，會擲回<xref:System.IdentityModel.Tokens.SecurityTokenException>例外狀況。</xref:System.IdentityModel.Tokens.SecurityTokenException>       <xref:System.IdentityModel.Selectors.SecurityTokenProvider.RenewToken%2A>方法會呼叫 RenewTokenCore 方法。</xref:System.IdentityModel.Selectors.SecurityTokenProvider.RenewToken%2A>"
  syntax:
    content: protected virtual System.IdentityModel.Tokens.SecurityToken RenewTokenCore (TimeSpan timeout, System.IdentityModel.Tokens.SecurityToken tokenToBeRenewed);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "A<xref:System.TimeSpan>指定更新安全性權杖之訊息的逾時值。</xref:System.TimeSpan>"
    - id: tokenToBeRenewed
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref>更新。"
    return:
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> ，表示已更新的安全性權杖。"
  overload: System.IdentityModel.Selectors.SecurityTokenProvider.RenewTokenCore*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenCancellation
  id: SupportsTokenCancellation
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  langs:
  - csharp
  name: SupportsTokenCancellation
  nameWithType: SecurityTokenProvider.SupportsTokenCancellation
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenCancellation
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "取得值，指出是否可以取消安全性權杖。"
  remarks: "您可以取消，例如，已核發的安全性權杖可讓要求時它的方式取消安全性權杖的用戶端。"
  syntax:
    content: public virtual bool SupportsTokenCancellation { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果可以取消安全性權杖。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenCancellation*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenRenewal
  id: SupportsTokenRenewal
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  langs:
  - csharp
  name: SupportsTokenRenewal
  nameWithType: SecurityTokenProvider.SupportsTokenRenewal
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenRenewal
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "取得值，指出是否可以更新安全性權杖。"
  remarks: "可更新且已發出的安全性權杖可讓用戶端安全性權杖即將或已經過期時更新它。"
  syntax:
    content: public virtual bool SupportsTokenRenewal { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果可以更新安全性權杖。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenRenewal*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.#ctor
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: SecurityTokenProvider()
  nameWithType: SecurityTokenProvider.SecurityTokenProvider()
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.SecurityTokenProvider()
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: BeginCancelToken(TimeSpan,SecurityToken,AsyncCallback,Object)
  nameWithType: SecurityTokenProvider.BeginCancelToken(TimeSpan,SecurityToken,AsyncCallback,Object)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelToken(TimeSpan,SecurityToken,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.IdentityModel.Tokens.SecurityToken
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityToken
  nameWithType: SecurityToken
  fullName: System.IdentityModel.Tokens.SecurityToken
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: BeginCancelTokenCore(TimeSpan,SecurityToken,AsyncCallback,Object)
  nameWithType: SecurityTokenProvider.BeginCancelTokenCore(TimeSpan,SecurityToken,AsyncCallback,Object)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelTokenCore(TimeSpan,SecurityToken,AsyncCallback,Object)
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetToken(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: BeginGetToken(TimeSpan,AsyncCallback,Object)
  nameWithType: SecurityTokenProvider.BeginGetToken(TimeSpan,AsyncCallback,Object)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetToken(TimeSpan,AsyncCallback,Object)
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetTokenCore(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: BeginGetTokenCore(TimeSpan,AsyncCallback,Object)
  nameWithType: SecurityTokenProvider.BeginGetTokenCore(TimeSpan,AsyncCallback,Object)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetTokenCore(TimeSpan,AsyncCallback,Object)
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: BeginRenewToken(TimeSpan,SecurityToken,AsyncCallback,Object)
  nameWithType: SecurityTokenProvider.BeginRenewToken(TimeSpan,SecurityToken,AsyncCallback,Object)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewToken(TimeSpan,SecurityToken,AsyncCallback,Object)
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: BeginRenewTokenCore(TimeSpan,SecurityToken,AsyncCallback,Object)
  nameWithType: SecurityTokenProvider.BeginRenewTokenCore(TimeSpan,SecurityToken,AsyncCallback,Object)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewTokenCore(TimeSpan,SecurityToken,AsyncCallback,Object)
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.CancelToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: CancelToken(TimeSpan,SecurityToken)
  nameWithType: SecurityTokenProvider.CancelToken(TimeSpan,SecurityToken)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.CancelToken(TimeSpan,SecurityToken)
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.CancelTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: CancelTokenCore(TimeSpan,SecurityToken)
  nameWithType: SecurityTokenProvider.CancelTokenCore(TimeSpan,SecurityToken)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.CancelTokenCore(TimeSpan,SecurityToken)
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelToken(System.IAsyncResult)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: EndCancelToken(IAsyncResult)
  nameWithType: SecurityTokenProvider.EndCancelToken(IAsyncResult)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelToken(IAsyncResult)
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelTokenCore(System.IAsyncResult)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: EndCancelTokenCore(IAsyncResult)
  nameWithType: SecurityTokenProvider.EndCancelTokenCore(IAsyncResult)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelTokenCore(IAsyncResult)
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.EndGetToken(System.IAsyncResult)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: EndGetToken(IAsyncResult)
  nameWithType: SecurityTokenProvider.EndGetToken(IAsyncResult)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.EndGetToken(IAsyncResult)
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.EndGetTokenCore(System.IAsyncResult)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: EndGetTokenCore(IAsyncResult)
  nameWithType: SecurityTokenProvider.EndGetTokenCore(IAsyncResult)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.EndGetTokenCore(IAsyncResult)
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewToken(System.IAsyncResult)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: EndRenewToken(IAsyncResult)
  nameWithType: SecurityTokenProvider.EndRenewToken(IAsyncResult)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewToken(IAsyncResult)
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewTokenCore(System.IAsyncResult)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: EndRenewTokenCore(IAsyncResult)
  nameWithType: SecurityTokenProvider.EndRenewTokenCore(IAsyncResult)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewTokenCore(IAsyncResult)
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.GetToken(System.TimeSpan)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: GetToken(TimeSpan)
  nameWithType: SecurityTokenProvider.GetToken(TimeSpan)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.GetToken(TimeSpan)
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.GetTokenCore(System.TimeSpan)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: GetTokenCore(TimeSpan)
  nameWithType: SecurityTokenProvider.GetTokenCore(TimeSpan)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.GetTokenCore(TimeSpan)
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.RenewToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: RenewToken(TimeSpan,SecurityToken)
  nameWithType: SecurityTokenProvider.RenewToken(TimeSpan,SecurityToken)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.RenewToken(TimeSpan,SecurityToken)
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.RenewTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: RenewTokenCore(TimeSpan,SecurityToken)
  nameWithType: SecurityTokenProvider.RenewTokenCore(TimeSpan,SecurityToken)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.RenewTokenCore(TimeSpan,SecurityToken)
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenCancellation
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: SupportsTokenCancellation
  nameWithType: SecurityTokenProvider.SupportsTokenCancellation
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenCancellation
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenRenewal
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: SupportsTokenRenewal
  nameWithType: SecurityTokenProvider.SupportsTokenRenewal
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenRenewal
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.#ctor*
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: SecurityTokenProvider
  nameWithType: SecurityTokenProvider.SecurityTokenProvider
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelToken*
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: BeginCancelToken
  nameWithType: SecurityTokenProvider.BeginCancelToken
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelTokenCore*
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: BeginCancelTokenCore
  nameWithType: SecurityTokenProvider.BeginCancelTokenCore
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetToken*
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: BeginGetToken
  nameWithType: SecurityTokenProvider.BeginGetToken
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetTokenCore*
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: BeginGetTokenCore
  nameWithType: SecurityTokenProvider.BeginGetTokenCore
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewToken*
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: BeginRenewToken
  nameWithType: SecurityTokenProvider.BeginRenewToken
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewTokenCore*
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: BeginRenewTokenCore
  nameWithType: SecurityTokenProvider.BeginRenewTokenCore
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.CancelToken*
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: CancelToken
  nameWithType: SecurityTokenProvider.CancelToken
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.CancelTokenCore*
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: CancelTokenCore
  nameWithType: SecurityTokenProvider.CancelTokenCore
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelToken*
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: EndCancelToken
  nameWithType: SecurityTokenProvider.EndCancelToken
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelTokenCore*
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: EndCancelTokenCore
  nameWithType: SecurityTokenProvider.EndCancelTokenCore
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.EndGetToken*
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: EndGetToken
  nameWithType: SecurityTokenProvider.EndGetToken
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.EndGetTokenCore*
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: EndGetTokenCore
  nameWithType: SecurityTokenProvider.EndGetTokenCore
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewToken*
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: EndRenewToken
  nameWithType: SecurityTokenProvider.EndRenewToken
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewTokenCore*
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: EndRenewTokenCore
  nameWithType: SecurityTokenProvider.EndRenewTokenCore
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.GetToken*
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: GetToken
  nameWithType: SecurityTokenProvider.GetToken
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.GetTokenCore*
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: GetTokenCore
  nameWithType: SecurityTokenProvider.GetTokenCore
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.RenewToken*
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: RenewToken
  nameWithType: SecurityTokenProvider.RenewToken
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.RenewTokenCore*
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: RenewTokenCore
  nameWithType: SecurityTokenProvider.RenewTokenCore
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenCancellation*
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: SupportsTokenCancellation
  nameWithType: SecurityTokenProvider.SupportsTokenCancellation
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenRenewal*
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: SupportsTokenRenewal
  nameWithType: SecurityTokenProvider.SupportsTokenRenewal
