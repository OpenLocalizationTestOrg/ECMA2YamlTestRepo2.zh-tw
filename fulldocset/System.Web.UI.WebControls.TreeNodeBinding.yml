### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.TreeNodeBinding
  id: TreeNodeBinding
  children:
  - System.Web.UI.WebControls.TreeNodeBinding.#ctor
  - System.Web.UI.WebControls.TreeNodeBinding.DataMember
  - System.Web.UI.WebControls.TreeNodeBinding.Depth
  - System.Web.UI.WebControls.TreeNodeBinding.FormatString
  - System.Web.UI.WebControls.TreeNodeBinding.ImageToolTip
  - System.Web.UI.WebControls.TreeNodeBinding.ImageToolTipField
  - System.Web.UI.WebControls.TreeNodeBinding.ImageUrl
  - System.Web.UI.WebControls.TreeNodeBinding.ImageUrlField
  - System.Web.UI.WebControls.TreeNodeBinding.NavigateUrl
  - System.Web.UI.WebControls.TreeNodeBinding.NavigateUrlField
  - System.Web.UI.WebControls.TreeNodeBinding.PopulateOnDemand
  - System.Web.UI.WebControls.TreeNodeBinding.SelectAction
  - System.Web.UI.WebControls.TreeNodeBinding.ShowCheckBox
  - System.Web.UI.WebControls.TreeNodeBinding.System#ICloneable#Clone
  - System.Web.UI.WebControls.TreeNodeBinding.System#Web#UI#IDataSourceViewSchemaAccessor#DataSourceViewSchema
  - System.Web.UI.WebControls.TreeNodeBinding.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.WebControls.TreeNodeBinding.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.WebControls.TreeNodeBinding.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.WebControls.TreeNodeBinding.System#Web#UI#IStateManager#TrackViewState
  - System.Web.UI.WebControls.TreeNodeBinding.Target
  - System.Web.UI.WebControls.TreeNodeBinding.TargetField
  - System.Web.UI.WebControls.TreeNodeBinding.Text
  - System.Web.UI.WebControls.TreeNodeBinding.TextField
  - System.Web.UI.WebControls.TreeNodeBinding.ToolTip
  - System.Web.UI.WebControls.TreeNodeBinding.ToolTipField
  - System.Web.UI.WebControls.TreeNodeBinding.ToString
  - System.Web.UI.WebControls.TreeNodeBinding.Value
  - System.Web.UI.WebControls.TreeNodeBinding.ValueField
  langs:
  - csharp
  name: TreeNodeBinding
  nameWithType: TreeNodeBinding
  fullName: System.Web.UI.WebControls.TreeNodeBinding
  type: Class
  summary: "定義資料項目及它所繫結中的節點之間的關聯性<xref href=&quot;System.Web.UI.WebControls.TreeView&quot;></xref>控制項。"
  remarks: "當<xref:System.Web.UI.WebControls.TreeView>控制項繫結至資料來源，其中每個資料項目都包含多個欄位 （例如具有數個屬性的 XML 元素），節點會顯示所傳回的值`ToString`資料項目的 預設的方法。</xref:System.Web.UI.WebControls.TreeView> 在 XML 項目，該節點會顯示項目名稱，其中顯示基礎結構的樹狀目錄中，不過沒有非常有用。 您可以藉由指定樹狀節點繫結，節點的屬性繫結至特定欄位。 TreeNodeBinding 物件會定義每個資料項目及它所繫結的節點之間的關聯性。       <xref:System.Web.UI.WebControls.TreeView>控制項儲存其 TreeNodeBinding 物件中的<xref:System.Web.UI.WebControls.TreeView.DataBindings%2A>屬性及套用繫結至資料來源建立樹狀階層和資料來源階層之間的一對一關聯性。</xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> </xref:System.Web.UI.WebControls.TreeView> 在資料來源中，每個資料項目<xref:System.Web.UI.WebControls.TreeView>控制會嘗試比對才能建立對應的資料項目 TreeNodeBinding 物件<xref:System.Web.UI.WebControls.TreeNode>物件。</xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeView>       建立 TreeNodeBinding 物件時，您必須指定繫結準則。 準則表示當資料的項目應該繫結到節點。 您可以指定<xref:System.Web.UI.WebControls.TreeNodeBinding.Depth%2A>或<xref:System.Web.UI.WebControls.TreeNodeBinding.DataMember%2A>屬性或這兩個屬性。</xref:System.Web.UI.WebControls.TreeNodeBinding.DataMember%2A> </xref:System.Web.UI.WebControls.TreeNodeBinding.Depth%2A> 指定這兩者沒有輕微的效能改善。 節點深度指定節點層級取得繫結。 例如，下列 TreeNodeBinding 宣告繫結`Name`和`ID`的資料來源欄位<xref:System.Web.UI.WebControls.TreeNode.Text%2A>和<xref:System.Web.UI.WebControls.TreeNode.Value%2A>屬性，分別的深度為 0 的所有節點︰```   <asp:TreeNodeBinding Depth=&quot;0&quot; TextField=&quot;Name&quot; ValueField=&quot;ID&quot;>   ```資料成員基礎資料來源中，指定資料的項目類型，但可以代表不同的資訊，根據資料來源。</xref:System.Web.UI.WebControls.TreeNode.Value%2A> </xref:System.Web.UI.WebControls.TreeNode.Text%2A> 每個資料來源中的項目階層式資料 (由<xref:System.Web.UI.IHierarchyData?displayProperty=fullName>介面) 會公開<xref:System.Web.UI.IHierarchyData.Type%2A?displayProperty=fullName>屬性，指定資料的項目類型。</xref:System.Web.UI.IHierarchyData.Type%2A?displayProperty=fullName> </xref:System.Web.UI.IHierarchyData?displayProperty=fullName> 例如，資料成員的 XML 項目會指定項目的名稱。 當資料來源包含多個資料項目類型時，資料成員會指定哪些資料的項目類型使用。 下列 TreeNodeBinding 宣告繫結`<Book>`的項目<xref:System.Web.UI.WebControls.XmlDataSource>樹狀目錄中，不論在階層中的位置中的所有節點的控制項︰```   <asp:TreeNodeBinding DataMember=&quot;Book&quot; TextField=&quot;Title&quot; ValueField= &quot;ISBN&quot;>   ```一旦建立繫結準則時，您就可以繫結的屬性<xref:System.Web.UI.WebControls.TreeNode>值可繫結的物件。</xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.XmlDataSource> 您可以繫結至資料項目的欄位，或為靜態值。 當繫結至靜態值，所有<xref:System.Web.UI.WebControls.TreeNode>TreeNodeBinding 物件套用的物件共用相同的值。</xref:System.Web.UI.WebControls.TreeNode>      > [!NOTE] > 您可以選擇性地覆寫中的繫結的屬性<xref:System.Web.UI.WebControls.TreeNode>藉由直接在節點中設定對應的屬性物件。</xref:System.Web.UI.WebControls.TreeNode>       下表列出的屬性 TreeNodeBinding 類別可讓您將屬性繫結<xref:System.Web.UI.WebControls.TreeNode>資料項目欄位的物件。</xref:System.Web.UI.WebControls.TreeNode>      |屬性 |描述 |  |--------------|-----------------|  |<xref:System.Web.UI.WebControls.TreeNodeBinding.ImageUrlField%2A>|要繫結至<xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A><xref:System.Web.UI.WebControls.TreeNode>物件屬性的欄位。 |  |<xref:System.Web.UI.WebControls.TreeNodeBinding.ImageToolTipField%2A>|要繫結至<xref:System.Web.UI.WebControls.TreeNode.ImageToolTip%2A><xref:System.Web.UI.WebControls.TreeNode>物件屬性的欄位。 |  |<xref:System.Web.UI.WebControls.TreeNodeBinding.NavigateUrlField%2A>|要繫結至<xref:System.Web.UI.WebControls.TreeNodeBinding.NavigateUrl%2A><xref:System.Web.UI.WebControls.TreeNode>物件屬性的欄位。 |  |<xref:System.Web.UI.WebControls.TreeNodeBinding.TextField%2A>|要繫結至<xref:System.Web.UI.WebControls.TreeNode.Text%2A><xref:System.Web.UI.WebControls.TreeNode>物件屬性的欄位。 |  |<xref:System.Web.UI.WebControls.TreeNodeBinding.ToolTipField%2A>|要繫結至<xref:System.Web.UI.WebControls.TreeNode.ToolTip%2A><xref:System.Web.UI.WebControls.TreeNode>物件屬性的欄位。 |  |<xref:System.Web.UI.WebControls.TreeNodeBinding.ValueField%2A>|要繫結至<xref:System.Web.UI.WebControls.TreeNode.Value%2A><xref:System.Web.UI.WebControls.TreeNode>物件屬性的欄位。 |      下表列出的屬性 TreeNodeBinding 類別可讓您將屬性繫結<xref:System.Web.UI.WebControls.TreeNode>成靜態值的物件。</xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.Value%2A> </xref:System.Web.UI.WebControls.TreeNodeBinding.ValueField%2A> </xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.ToolTip%2A> </xref:System.Web.UI.WebControls.TreeNodeBinding.ToolTipField%2A> </xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.Text%2A> </xref:System.Web.UI.WebControls.TreeNodeBinding.TextField%2A> </xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNodeBinding.NavigateUrl%2A> </xref:System.Web.UI.WebControls.TreeNodeBinding.NavigateUrlField%2A> </xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.ImageToolTip%2A> </xref:System.Web.UI.WebControls.TreeNodeBinding.ImageToolTipField%2A> </xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A> </xref:System.Web.UI.WebControls.TreeNodeBinding.ImageUrlField%2A>      |屬性 |描述 |  |--------------|-----------------|  |<xref:System.Web.UI.WebControls.TreeNodeBinding.ImageUrl%2A>|繫結至<xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A><xref:System.Web.UI.WebControls.TreeNode>物件屬性的靜態值。 |  |<xref:System.Web.UI.WebControls.TreeNodeBinding.ImageToolTip%2A>|繫結至<xref:System.Web.UI.WebControls.TreeNode.ImageToolTip%2A><xref:System.Web.UI.WebControls.TreeNode>物件屬性的靜態值。 |  |<xref:System.Web.UI.WebControls.TreeNodeBinding.NavigateUrl%2A>|繫結至<xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A><xref:System.Web.UI.WebControls.TreeNode>物件屬性的靜態值。 |  |<xref:System.Web.UI.WebControls.TreeNodeBinding.PopulateOnDemand%2A>|繫結至<xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A><xref:System.Web.UI.WebControls.TreeNode>物件屬性的靜態值。 |  |<xref:System.Web.UI.WebControls.TreeNodeBinding.SelectAction%2A>|繫結至<xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A><xref:System.Web.UI.WebControls.TreeNode>物件屬性的靜態值。 |  |<xref:System.Web.UI.WebControls.TreeNodeBinding.ShowCheckBox%2A>|繫結至<xref:System.Web.UI.WebControls.TreeNode.ShowCheckBox%2A><xref:System.Web.UI.WebControls.TreeNode>物件屬性的靜態值。 |  |<xref:System.Web.UI.WebControls.TreeNodeBinding.Target%2A>|繫結至<xref:System.Web.UI.WebControls.TreeNode.Target%2A><xref:System.Web.UI.WebControls.TreeNode>物件屬性的靜態值。 |  |<xref:System.Web.UI.WebControls.TreeNodeBinding.Text%2A>|繫結至<xref:System.Web.UI.WebControls.TreeNode.Text%2A><xref:System.Web.UI.WebControls.TreeNode>物件屬性的靜態值。 |  |<xref:System.Web.UI.WebControls.TreeNodeBinding.ToolTip%2A>|繫結至<xref:System.Web.UI.WebControls.TreeNode.ToolTip%2A><xref:System.Web.UI.WebControls.TreeNode>物件屬性的靜態值。 |  |<xref:System.Web.UI.WebControls.TreeNodeBinding.Value%2A>|繫結至<xref:System.Web.UI.WebControls.TreeNode.Value%2A><xref:System.Web.UI.WebControls.TreeNode>物件屬性的靜態值。 |      如果衝突的 TreeNodeBinding 物件所定義，<xref:System.Web.UI.WebControls.TreeView>控制項適用於樹狀節點繫結，以下列順序的優先順序︰ 1。</xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.Value%2A> </xref:System.Web.UI.WebControls.TreeNodeBinding.Value%2A> </xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.ToolTip%2A> </xref:System.Web.UI.WebControls.TreeNodeBinding.ToolTip%2A> </xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.Text%2A> </xref:System.Web.UI.WebControls.TreeNodeBinding.Text%2A> </xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.Target%2A> </xref:System.Web.UI.WebControls.TreeNodeBinding.Target%2A> </xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.ShowCheckBox%2A> </xref:System.Web.UI.WebControls.TreeNodeBinding.ShowCheckBox%2A> </xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A> </xref:System.Web.UI.WebControls.TreeNodeBinding.SelectAction%2A> </xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> </xref:System.Web.UI.WebControls.TreeNodeBinding.PopulateOnDemand%2A> </xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> </xref:System.Web.UI.WebControls.TreeNodeBinding.NavigateUrl%2A> </xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.ImageToolTip%2A> </xref:System.Web.UI.WebControls.TreeNodeBinding.ImageToolTip%2A> </xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A> </xref:System.Web.UI.WebControls.TreeNodeBinding.ImageUrl%2A>  TreeNodeBinding 物件定義，並相符項目深度和資料成員。      2.  TreeNodeBinding 物件會定義並比對資料成員。      3.  定義並相符項目深度只 TreeNodeBinding 物件。      4.  深度或資料成員都不會定義 TreeNodeBinding 物件。 （這種類型的樹狀節點繫結套用到所有的節點在樹狀目錄中）。    5.  資料來源中沒有相符項目 TreeNodeBinding 物件。 在此情況下，所傳回的值`ToString`資料項目的方法則繫結到<xref:System.Web.UI.WebControls.TreeNode.Text%2A>和<xref:System.Web.UI.WebControls.TreeNode.Value%2A>TreeNodeBinding 物件套用到節點的屬性。</xref:System.Web.UI.WebControls.TreeNode.Value%2A> </xref:System.Web.UI.WebControls.TreeNode.Text%2A>       TreeNodeBinding 類別也可讓您設定藉由設定節點中顯示的文字格式<xref:System.Web.UI.WebControls.TreeNodeBinding.FormatString%2A>屬性。</xref:System.Web.UI.WebControls.TreeNodeBinding.FormatString%2A>"
  example:
  - "The following table shows some example tree node binding declarations.  \n  \n|Example binding|Description|  \n|---------------------|-----------------|  \n|`<asp:TreeNodeBinding TextField=\"Title\" ValueField= \"ID\"/>`|Binds the <xref:System.Web.UI.WebControls.TreeNode.Text%2A> and <xref:System.Web.UI.WebControls.TreeNode.Value%2A> properties of all nodes in the tree to the `Title` and `ID` fields of the data source, respectively. All nodes use this tree node binding declaration because the <xref:System.Web.UI.WebControls.TreeNodeBinding.DataMember%2A> and <xref:System.Web.UI.WebControls.TreeNodeBinding.Depth%2A> properties are not set.|  \n|`<asp:TreeNodeBinding DataMember= \"Book\" TextField= \"Title\" ValueField= \"ID\"/>`|Binds the <xref:System.Web.UI.WebControls.TreeNode.Text%2A> and <xref:System.Web.UI.WebControls.TreeNode.Value%2A> properties of all nodes in the tree to the `Title` and `ID` fields of the `Book` data item in the data source, respectively.|  \n|`<asp:TreeNodeBinding Depth=\"2\" TextField= \"Title\" ValueField= \"ID\"/>`|Binds the <xref:System.Web.UI.WebControls.TreeNode.Text%2A> and <xref:System.Web.UI.WebControls.TreeNode.Value%2A> properties of all nodes with a depth of 2 in the tree to the `Title` and `ID` fields of the data item in the data source, respectively.|  \n|`<asp:TreeNodeBinding DataMember=\"Book\" Depth= \"2\" TextField= \"Title\" ValueField= \"ID\" ImageUrl= \"Image.jpg\">`|Binds the <xref:System.Web.UI.WebControls.TreeNode.Text%2A> and <xref:System.Web.UI.WebControls.TreeNode.Value%2A> properties of all nodes with a depth of 2 in the tree to the `Title` and `ID` fields of the `Book` data item in the data source, respectively. Also binds the <xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A> property of the nodes to a static value.|  \n  \n This section contains three code examples. The first code example demonstrates how to use TreeNodeBinding objects declaratively to define the relationship between a node and a data item. The second code example demonstrates how to use TreeNodeBinding objects programmatically to define the relationship between a node and a data item. The third code example provides sample XML data for the first and second code examples.  \n  \n The following code example demonstrates how to use TreeNodeBinding objects declaratively to define the relationship between a node and a data item. For this example to work correctly, you must copy the sample XML data, provided after this code example, to a file named Book.xml.  \n  \n [!code-cs[TreeViewXml#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_50_1.aspx)]\n [!code-vb[TreeViewXml#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_50_1.aspx)]  \n  \n The following code example demonstrates how to use TreeNodeBinding objects programmatically to define the relationship between a node and a data item. For this example to work correctly, you must copy the sample XML data that is provided in the next code example to a file named Book.xml.  \n  \n [!code-cs[TreeViewCtor#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_50_2.aspx)]\n [!code-vb[TreeViewCtor#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_50_2.aspx)]  \n  \n The following code example provides sample XML data for the preceding code examples.  \n  \n```  \n<Book Title=\"Book Title\">  \n    <Chapter Heading=\"Chapter 1\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n        <Section Heading=\"Section 2\">  \n        </Section>  \n    </Chapter>  \n    <Chapter Heading=\"Chapter 2\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n    </Chapter>  \n</Book>  \n```"
  syntax:
    content: >-
      [System.ComponentModel.DefaultProperty("TextField")]

      public sealed class TreeNodeBinding : ICloneable, System.Web.UI.IDataSourceViewSchemaAccessor, System.Web.UI.IStateManager
  inheritance:
  - System.Object
  implements:
  - System.ICloneable
  - System.Web.UI.IDataSourceViewSchemaAccessor
  - System.Web.UI.IStateManager
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBinding.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.TreeNodeBinding
  langs:
  - csharp
  name: TreeNodeBinding()
  nameWithType: TreeNodeBinding.TreeNodeBinding()
  fullName: System.Web.UI.WebControls.TreeNodeBinding.TreeNodeBinding()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "初始化的新執行個體<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;></xref>類別。"
  remarks: "使用 TreeNodeBinding 建構函式來初始化<xref:System.Web.UI.WebControls.TreeNodeBinding>類別</xref:System.Web.UI.WebControls.TreeNodeBinding>的新執行個體 它通常用於動態擴展時<xref:System.Web.UI.WebControls.TreeView.DataBindings%2A>集合<xref:System.Web.UI.WebControls.TreeView>控制項。</xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.TreeView.DataBindings%2A>"
  example:
  - "The following code example demonstrates how to use the TreeNodeBinding constructor to add a <xref:System.Web.UI.WebControls.TreeNodeBinding> object dynamically to the <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> collection of a <xref:System.Web.UI.WebControls.TreeView> control.  \n  \n [!code-cs[TreeViewCtor#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_41_1.aspx)]\n [!code-vb[TreeViewCtor#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_41_1.aspx)]"
  syntax:
    content: public TreeNodeBinding ();
    parameters: []
  overload: System.Web.UI.WebControls.TreeNodeBinding.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBinding.DataMember
  id: DataMember
  parent: System.Web.UI.WebControls.TreeNodeBinding
  langs:
  - csharp
  name: DataMember
  nameWithType: TreeNodeBinding.DataMember
  fullName: System.Web.UI.WebControls.TreeNodeBinding.DataMember
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定要比對值&lt;xref:System.Web.UI.IHierarchyData.Type%2A?displayProperty=fullName&gt;資料項目來判斷是否要套用的樹狀結構節點繫結的屬性。"
  remarks: "資料成員基礎資料來源中，指定資料的項目類型，但可以代表不同的資訊，根據資料來源。 每個資料來源中的項目階層式資料 (由<xref:System.Web.UI.IHierarchyData?displayProperty=fullName>物件) 會公開<xref:System.Web.UI.IHierarchyData.Type%2A?displayProperty=fullName>屬性，指定資料的項目類型。</xref:System.Web.UI.IHierarchyData.Type%2A?displayProperty=fullName> </xref:System.Web.UI.IHierarchyData?displayProperty=fullName> 例如，資料成員的 XML 項目會指定項目的名稱。 當資料來源包含多個資料項目類型時，資料成員會指定哪些資料的項目類型使用。 下列<xref:System.Web.UI.WebControls.TreeNodeBinding>宣告繫結`<Book>`的項目<xref:System.Web.UI.WebControls.XmlDataSource>樹狀目錄中，不論在階層中的位置中的所有節點的控制項︰```   <asp:TreeNodeBinding DataMember=&quot;Book&quot; TextField=&quot;Title&quot; ValueField= &quot;ISBN&quot;>   ```建立時<xref:System.Web.UI.WebControls.TreeNodeBinding>物件，您必須指定繫結準則。</xref:System.Web.UI.WebControls.TreeNodeBinding> </xref:System.Web.UI.WebControls.XmlDataSource> </xref:System.Web.UI.WebControls.TreeNodeBinding> 準則表示當資料的項目應該繫結到節點。 您可以指定<xref:System.Web.UI.WebControls.TreeNodeBinding.Depth%2A>DataMember 屬性或這兩個屬性。</xref:System.Web.UI.WebControls.TreeNodeBinding.Depth%2A> 指定這兩者沒有輕微的效能改善。       一旦建立繫結準則時，您就可以繫結的屬性<xref:System.Web.UI.WebControls.TreeNode>值可繫結的物件。</xref:System.Web.UI.WebControls.TreeNode> 您可以繫結至資料項目的欄位，或為靜態值。 當繫結至靜態值，所有<xref:System.Web.UI.WebControls.TreeNode>物件的<xref:System.Web.UI.WebControls.TreeNodeBinding>物件套用共用相同的值。</xref:System.Web.UI.WebControls.TreeNodeBinding> </xref:System.Web.UI.WebControls.TreeNode>       這個屬性的值會儲存檢視狀態中。"
  example:
  - "This section contains two code examples. The first code example demonstrates how to use the DataMember property to specify which XML element to bind to a node. The second code example provides sample XML data for the first code example.  \n  \n The following code example demonstrates how to use the DataMember property to specify which XML element to bind to a node. For this code example to work correctly, you must copy the sample XML data, provided after this code example, to a file named Book.xml.  \n  \n [!code-vb[TreeNodeBindingDataMember#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_464_1.aspx)]\n [!code-cs[TreeNodeBindingDataMember#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_464_1.aspx)]  \n  \n The following code example provides sample XML data for the preceding code example.  \n  \n```  \n<Book Title=\"Book Title\">  \n    <Chapter Heading=\"Chapter 1\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n        <Section Heading=\"Section 2\">  \n        </Section>  \n    </Chapter>  \n    <Chapter Heading=\"Chapter 2\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n    </Chapter>  \n    <Appendix Heading=\"Appendix A\">  \n    </Appendix>  \n</Book>  \n```"
  syntax:
    content: public string DataMember { get; set; }
    return:
      type: System.String
      description: "要比對的資料項目值&lt;xref:System.Web.UI.IHierarchyData.Type%2A?displayProperty=fullName&gt;屬性來判斷是否要套用的樹狀結構節點繫結。 預設為空字串 (&quot;&quot;)，表示未設定 DataMember 屬性。"
  overload: System.Web.UI.WebControls.TreeNodeBinding.DataMember*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBinding.Depth
  id: Depth
  parent: System.Web.UI.WebControls.TreeNodeBinding
  langs:
  - csharp
  name: Depth
  nameWithType: TreeNodeBinding.Depth
  fullName: System.Web.UI.WebControls.TreeNodeBinding.Depth
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定節點深度的<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;></xref>物件套用。"
  remarks: "節點深度指定節點層級取得繫結。 例如，下列<xref:System.Web.UI.WebControls.TreeNodeBinding>宣告繫結`Name`和`ID`的資料來源欄位<xref:System.Web.UI.WebControls.TreeNode.Text%2A>和<xref:System.Web.UI.WebControls.TreeNode.Value%2A>屬性，分別的深度為 0 的所有節點︰```   <asp:TreeNodeBinding Depth=&quot;0&quot; TextField=&quot;Name&quot; ValueField=&quot;ID&quot;>   ```建立時<xref:System.Web.UI.WebControls.TreeNodeBinding>物件，您必須指定繫結準則。</xref:System.Web.UI.WebControls.TreeNodeBinding> </xref:System.Web.UI.WebControls.TreeNode.Value%2A> </xref:System.Web.UI.WebControls.TreeNode.Text%2A> </xref:System.Web.UI.WebControls.TreeNodeBinding> 準則表示當資料的項目應該繫結到節點。 您可以指定深度或<xref:System.Web.UI.WebControls.TreeNodeBinding.DataMember%2A>屬性或這兩個屬性。</xref:System.Web.UI.WebControls.TreeNodeBinding.DataMember%2A> 指定這兩者沒有輕微的效能改善。       一旦建立繫結準則時，您就可以繫結的屬性<xref:System.Web.UI.WebControls.TreeNode>值可繫結的物件。</xref:System.Web.UI.WebControls.TreeNode> 您可以繫結至資料項目的欄位，或為靜態值。 當繫結至靜態值，所有<xref:System.Web.UI.WebControls.TreeNode>物件的<xref:System.Web.UI.WebControls.TreeNodeBinding>物件套用共用相同的值。</xref:System.Web.UI.WebControls.TreeNodeBinding> </xref:System.Web.UI.WebControls.TreeNode>       這個屬性的值會儲存檢視狀態中。"
  example:
  - "This section contains two code examples. The first code example demonstrates how to use the Depth property to apply a <xref:System.Web.UI.WebControls.TreeNodeBinding> object at a specific node depth. The second code example provides sample XML data for the first code example.  \n  \n The following code example demonstrates how to use the Depth property to apply a <xref:System.Web.UI.WebControls.TreeNodeBinding> object at a specific node depth. For this example to work correctly, you must copy the sample XML data, provided after this code example, to a file named Book.xml.  \n  \n [!code-vb[TreeNodeBindingDataMember#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_444_1.aspx)]\n [!code-cs[TreeNodeBindingDataMember#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_444_1.aspx)]  \n  \n The following code example provides sample XML data for the preceding code example.  \n  \n```  \n<Book Title=\"Book Title\">  \n    <Chapter Heading=\"Chapter 1\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n        <Section Heading=\"Section 2\">  \n        </Section>  \n    </Chapter>  \n    <Chapter Heading=\"Chapter 2\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n    </Chapter>  \n    <Appendix Heading=\"Appendix A\">  \n    </Appendix>  \n</Book>  \n```"
  syntax:
    content: public int Depth { get; set; }
    return:
      type: System.Int32
      description: "節點深度<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;></xref>物件套用。 預設值為-1，表示深度屬性未設定。"
  overload: System.Web.UI.WebControls.TreeNodeBinding.Depth*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBinding.FormatString
  id: FormatString
  parent: System.Web.UI.WebControls.TreeNodeBinding
  langs:
  - csharp
  name: FormatString
  nameWithType: TreeNodeBinding.FormatString
  fullName: System.Web.UI.WebControls.TreeNodeBinding.FormatString
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定字串，指定目標節點的文字的顯示格式<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;></xref>物件套用。"
  remarks: "FormatString 屬性用來提供自訂格式的節點的文字。 資料格式字串由兩個部分組成，在表單中，以冒號分隔的 { `A` : `Bxx` }。 例如，格式化字串`{0:F2}`會顯示兩個小數位數定點數字。      > [!NOTE] > 整個字串必須括在大括號來表示其為格式字串，而不是常值字串。 大括號以外的任何文字會顯示為常值文字。       冒號之前的值 (`A`一般範例中) 以零為起始的參數清單中，指定的參數索引。      > [!NOTE] > 這個值可以設定只為 0，因為每個節點中只有一個值。       冒號後面的字元 (`B`一般範例中) 指定值的顯示格式。 下表列出常見的格式。      |格式化字元 |會顯示為數值 |  |----------------------|--------------------------------|  |`C`|貨幣格式。 |  |`D`|十進位格式。 |  |`E`|科學記號 （指數） 格式。 |  |`F`|固定的格式。 |  |`G`|一般格式。 |  |`N`|數字格式。 |  |`X`|十六進位格式。 |     > [!NOTE] > 除了`X`，格式字元不區分大小寫。 `X`格式字元會顯示在指定的情況下的十六進位字元。       格式字元後的值 (`xx`一般範例中) 指定有效位數或小數位數，若要顯示的數目。       如需有關如何格式化字串的詳細資訊，請參閱[格式化型別](~/add/includes/ajax-current-ext-md.md)。       這個屬性的值會儲存檢視狀態中。       FormatString 屬性的值設定時，可以自動儲存到資源檔使用設計工具。 如需詳細資訊，請參閱<xref:System.ComponentModel.LocalizableAttribute>和[全球化和當地語系化](~/add/includes/ajax-current-ext-md.md)。</xref:System.ComponentModel.LocalizableAttribute>"
  example:
  - "This section contains two code examples. The first code example demonstrates how to use the FormatString property to specify a custom display format for the text that is displayed in the root node. The second code example provides sample XML data for the first code example.  \n  \n The following code example demonstrates how to use the FormatString property to specify a custom display format for the text that is displayed in the root node. For this example to work correctly, you must copy the sample XML data, provided after this code example, to a file named Book.xml.  \n  \n [!code-vb[TreeNodeBindingFormatString#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_755_1.aspx)]\n [!code-cs[TreeNodeBindingFormatString#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_755_1.aspx)]  \n  \n The following code example is sample XML data for the preceding example.  \n  \n```  \n<Book Title=\"Book Title\">  \n    <Chapter Heading=\"Chapter 1\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n        <Section Heading=\"Section 2\">  \n        </Section>  \n    </Chapter>  \n    <Chapter Heading=\"Chapter 2\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n    </Chapter>  \n    <Appendix Heading=\"Appendix A\">  \n    </Appendix>  \n</Book>  \n```"
  syntax:
    content: public string FormatString { get; set; }
    return:
      type: System.String
      description: "指定的節點的文字的顯示格式的格式化字串<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;></xref>物件套用。 預設為空字串 (&quot;&quot;)，表示未設定 [FormatString] 屬性。"
  overload: System.Web.UI.WebControls.TreeNodeBinding.FormatString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBinding.ImageToolTip
  id: ImageToolTip
  parent: System.Web.UI.WebControls.TreeNodeBinding
  langs:
  - csharp
  name: ImageToolTip
  nameWithType: TreeNodeBinding.ImageToolTip
  fullName: System.Web.UI.WebControls.TreeNodeBinding.ImageToolTip
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定節點的旁邊是否顯示出的映像的工具提示文字<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;></xref>物件套用。"
  remarks: "當<xref:System.Web.UI.WebControls.TreeView>控制項所繫結至資料來源，請使用 ImageToolTip 屬性所指定的值繫結至<xref:System.Web.UI.WebControls.TreeNode.ImageToolTip%2A>屬性<xref:System.Web.UI.WebControls.TreeNode>物件。</xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.ImageToolTip%2A> </xref:System.Web.UI.WebControls.TreeView> 您指定的文字會提供可用來將控制項設為更容易存取的映像的描述的輔助技術裝置。       此繫結的關聯性會影響所有<xref:System.Web.UI.WebControls.TreeNode>物件的<xref:System.Web.UI.WebControls.TreeNodeBinding>物件套用。</xref:System.Web.UI.WebControls.TreeNodeBinding> </xref:System.Web.UI.WebControls.TreeNode> 在節點旁邊顯示映像時，當滑鼠指標停留在影像上時，會顯示工具提示文字。      > [!NOTE] > 您可以選擇性地設定覆寫 ImageToolTip 屬性<xref:System.Web.UI.WebControls.TreeNode.ImageToolTip%2A>直接每個節點的屬性。</xref:System.Web.UI.WebControls.TreeNode.ImageToolTip%2A>       除了使用 ImageToolTip 屬性所繫結至每個節點映像的相同的工具提示文字，您可以繫結<xref:System.Web.UI.WebControls.TreeNode.ImageToolTip%2A>屬性<xref:System.Web.UI.WebControls.TreeNode>藉由設定資料來源的欄位物件<xref:System.Web.UI.WebControls.TreeNodeBinding.ImageToolTipField%2A>屬性。</xref:System.Web.UI.WebControls.TreeNodeBinding.ImageToolTipField%2A> </xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.ImageToolTip%2A>       這個屬性的值會儲存檢視狀態中。       這個屬性的值設定時，可以自動儲存到資源檔使用設計工具。 如需詳細資訊，請參閱<xref:System.ComponentModel.LocalizableAttribute>和[全球化和當地語系化](~/add/includes/ajax-current-ext-md.md)。</xref:System.ComponentModel.LocalizableAttribute>"
  example:
  - "This section contains two code examples. The first code example demonstrates how to use the ImageToolTip property to specify the ToolTip text for the image that is displayed next to a node to which the <xref:System.Web.UI.WebControls.TreeNodeBinding> object is applied. The second code example provides sample XML data for the first code example.  \n  \n The following example demonstrates how to use the ImageToolTip property to specify the ToolTip text for the image that is displayed next to a node to which the <xref:System.Web.UI.WebControls.TreeNodeBinding> object is applied. For this example to work correctly, you must copy the sample XML data, provided after this code example, to a file named Booklist.xml.  \n  \n [!code-vb[TreeNodeBindingText#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_796_1.aspx)]\n [!code-cs[TreeNodeBindingText#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_796_1.aspx)]  \n  \n The following code example provides sample XML data for the preceding code example.  \n  \n```  \n<Books Text=\"Books List\">  \n    <Book Text=\"Book Title One\"  \n        Value=\"1\"   \n        Image=\"Bookimage1.jpg\"  \n        ImageToolTip=\"Book 1 Photo\"   \n        Nav=\"http://www.microsoft.com\"  \n        Tip=\"Book Title 1\">  \n        <Description Text=\"Book Description\">  \n        </Description>  \n        <Price Value=\"$1.99\">  \n        </Price>  \n        <Author Text=\"Author Name\"  \n            Value=\"LastName\"   \n            Image=\"Authorimage1.jpg\"   \n            Nav=\"http://www.microsoft.com\"  \n            Tip=\"Author Name\">  \n        </Author>  \n    </Book>  \n    <Book Text=\"Book Title Two\"  \n        Value=\"2\"   \n        Image=\"Bookimage2.jpg\"  \n        ImageToolTip=\"Book 2 Photo\"   \n        Nav=\"http://www.microsoft.com\"  \n        Tip=\"Click Me\">  \n        <Description Text=\"Book Description\">  \n        </Description>  \n        <Price Value=\"$2.99\">  \n        </Price>  \n        <Author Text=\"Author Name\"  \n            Value=\"LastName\"   \n            Image=\"Authorimage2.jpg\"   \n            Nav=\"http://www.microsoft.com\"  \n            Tip=\"Author Name\">  \n        </Author>  \n    </Book>  \n</Books>  \n```"
  syntax:
    content: public string ImageToolTip { get; set; }
    return:
      type: System.String
      description: "節點的旁邊是否顯示出的映像的工具提示文字<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;></xref>物件套用。 預設為空字串 (&quot;&quot;)，表示未設定 P:System.Web.UI.WebControls.TreeNodeBinding.ImageToolTip 屬性。"
  overload: System.Web.UI.WebControls.TreeNodeBinding.ImageToolTip*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBinding.ImageToolTipField
  id: ImageToolTipField
  parent: System.Web.UI.WebControls.TreeNodeBinding
  langs:
  - csharp
  name: ImageToolTipField
  nameWithType: TreeNodeBinding.ImageToolTipField
  fullName: System.Web.UI.WebControls.TreeNodeBinding.ImageToolTipField
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定要繫結至資料來源的欄位名稱<xref:System.Web.UI.WebControls.TreeNode.ImageToolTip*>屬性<xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;></xref>物件<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;></xref>物件套用。</xref:System.Web.UI.WebControls.TreeNode.ImageToolTip*>"
  remarks: "當<xref:System.Web.UI.WebControls.TreeView>控制項所繫結至資料來源，請使用 ImageToolTipField 屬性指定欄位名稱，即可將繫結至<xref:System.Web.UI.WebControls.TreeNode.ImageToolTip%2A>屬性<xref:System.Web.UI.WebControls.TreeNode>物件。</xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.ImageToolTip%2A> </xref:System.Web.UI.WebControls.TreeView> 您指定的文字會提供可用來將控制項設為更容易存取的映像的描述的輔助技術裝置。       此繫結的關聯性會影響所有<xref:System.Web.UI.WebControls.TreeNode>物件的<xref:System.Web.UI.WebControls.TreeNodeBinding>物件套用。</xref:System.Web.UI.WebControls.TreeNodeBinding> </xref:System.Web.UI.WebControls.TreeNode> 在節點旁邊顯示映像時，當滑鼠指標停留在影像上時，會顯示工具提示文字。      > [!NOTE] > 您可以選擇性地設定覆寫 ImageToolTipField 屬性<xref:System.Web.UI.WebControls.TreeNode.ImageToolTip%2A>直接每個節點的屬性。</xref:System.Web.UI.WebControls.TreeNode.ImageToolTip%2A>       而不是使用 ImageToolTipField 屬性要繫結<xref:System.Web.UI.WebControls.TreeNode.ImageToolTip%2A>屬性<xref:System.Web.UI.WebControls.TreeNode>物件欄位中，您可以設定<xref:System.Web.UI.WebControls.TreeNode.ImageToolTip%2A>屬性設定為固定值<xref:System.Web.UI.WebControls.TreeNodeBinding.ImageToolTip%2A>屬性。</xref:System.Web.UI.WebControls.TreeNodeBinding.ImageToolTip%2A> </xref:System.Web.UI.WebControls.TreeNode.ImageToolTip%2A> </xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.ImageToolTip%2A>      > [!NOTE] > 如果資料來源包含多個欄位，您必須先設定<xref:System.Web.UI.WebControls.TreeNodeBinding.Depth%2A>或<xref:System.Web.UI.WebControls.TreeNodeBinding.DataMember%2A>屬性或這兩個屬性，才能繫結至適當的欄位。</xref:System.Web.UI.WebControls.TreeNodeBinding.DataMember%2A> </xref:System.Web.UI.WebControls.TreeNodeBinding.Depth%2A>       這個屬性的值會儲存檢視狀態中。"
  example:
  - "This section contains two code examples. The first code example demonstrates how to use the ImageToolTipField property to specify which attribute of an XML element to bind to the <xref:System.Web.UI.WebControls.TreeNode.ImageToolTip%2A> property of a <xref:System.Web.UI.WebControls.TreeNode> object to which the <xref:System.Web.UI.WebControls.TreeNodeBinding> object is applied. The second code example provides sample XML data for the first code example.  \n  \n The following example demonstrates how to use the ImageToolTipField property to specify which attribute of an XML element to bind to the <xref:System.Web.UI.WebControls.TreeNode.ImageToolTip%2A> property of a <xref:System.Web.UI.WebControls.TreeNode> object to which the <xref:System.Web.UI.WebControls.TreeNodeBinding> object is applied. For this example to work correctly, you must copy the sample XML data, provided after this code example, to a file named Booklist.xml.  \n  \n [!code-vb[TreeNodeTextField#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_953_1.aspx)]\n [!code-cs[TreeNodeTextField#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_953_1.aspx)]  \n  \n The following code example provides sample XML data for the preceding code example.  \n  \n```  \n<Books Text=\"Books List\">  \n    <Book Text=\"Book Title One\"  \n        Value=\"1\"   \n        Image=\"Bookimage1.jpg\"  \n        ImageToolTip=\"Book 1 Photo\"   \n        Nav=\"http://www.microsoft.com\"  \n        Tip=\"Book Title 1\">  \n        <Description Text=\"Book Description\">  \n        </Description>  \n        <Price Value=\"$1.99\">  \n        </Price>  \n        <Author Text=\"Author Name\"  \n            Value=\"LastName\"   \n            Image=\"Authorimage1.jpg\"   \n            Nav=\"http://www.microsoft.com\"  \n            Tip=\"Author Name\">  \n        </Author>  \n    </Book>  \n    <Book Text=\"Book Title Two\"  \n        Value=\"2\"   \n        Image=\"Bookimage2.jpg\"  \n        ImageToolTip=\"Book 2 Photo\"   \n        Nav=\"http://www.microsoft.com\"  \n        Tip=\"Click Me\">  \n        <Description Text=\"Book Description\">  \n        </Description>  \n        <Price Value=\"$2.99\">  \n        </Price>  \n        <Author Text=\"Author Name\"  \n            Value=\"LastName\"   \n            Image=\"Authorimage2.jpg\"   \n            Nav=\"http://www.microsoft.com\"  \n            Tip=\"Author Name\">  \n        </Author>  \n    </Book>  \n</Books>  \n```"
  syntax:
    content: public string ImageToolTipField { get; set; }
    return:
      type: System.String
      description: "繫結至欄位的名稱<xref:System.Web.UI.WebControls.TreeNode.ImageToolTip*>屬性<xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;></xref>物件<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;></xref>物件套用。</xref:System.Web.UI.WebControls.TreeNode.ImageToolTip*> 預設為空字串 (&quot;&quot;)，表示未設定 ImageToolTipField 屬性。"
  overload: System.Web.UI.WebControls.TreeNodeBinding.ImageToolTipField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBinding.ImageUrl
  id: ImageUrl
  parent: System.Web.UI.WebControls.TreeNodeBinding
  langs:
  - csharp
  name: ImageUrl
  nameWithType: TreeNodeBinding.ImageUrl
  fullName: System.Web.UI.WebControls.TreeNodeBinding.ImageUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定節點的旁邊會顯示影像的 URL <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref>物件套用。"
  remarks: "當<xref:System.Web.UI.WebControls.TreeView>控制項所繫結至資料來源，請使用 ImageUrl 屬性指定繫結至自訂映像<xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A>屬性<xref:System.Web.UI.WebControls.TreeNode>物件。</xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A> </xref:System.Web.UI.WebControls.TreeView> 此繫結的關聯性會影響所有<xref:System.Web.UI.WebControls.TreeNode>物件的<xref:System.Web.UI.WebControls.TreeNodeBinding>物件套用。</xref:System.Web.UI.WebControls.TreeNodeBinding> </xref:System.Web.UI.WebControls.TreeNode> 影像會顯示節點旁邊，只要用戶端瀏覽器支援的格式可以是任何檔案格式 （.jpg、.gif、.bmp 等等）。      > [!NOTE] > 可以設定覆寫個別節點的映像及其<xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A>屬性直接。</xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A>       除了使用這個屬性，將相同的映像繫結至每個節點，您可以繫結<xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A>屬性<xref:System.Web.UI.WebControls.TreeNode>藉由設定資料來源的欄位物件<xref:System.Web.UI.WebControls.TreeNodeBinding.ImageUrlField%2A>屬性。</xref:System.Web.UI.WebControls.TreeNodeBinding.ImageUrlField%2A> </xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A>       當顯示節點的 ImageUrl 屬性旁的映像時，您也應該考慮設定<xref:System.Web.UI.WebControls.TreeNodeBinding.ImageToolTip%2A>屬性。</xref:System.Web.UI.WebControls.TreeNodeBinding.ImageToolTip%2A> 您指定的工具提示文字會提供可用來將控制項設為更容易存取的映像的描述的輔助技術裝置。       這個屬性的值會儲存檢視狀態中。"
  example:
  - "This section contains two code examples. The first code example demonstrates how to use the <xref:System.Web.UI.WebControls.TreeNodeBinding.Depth%2A> property to apply a <xref:System.Web.UI.WebControls.TreeNodeBinding> object at a specific node depth. The second code example provides sample XML data for the first code example.  \n  \n The following code example demonstrates how to use the ImageUrl property to specify a custom image for a node to which the <xref:System.Web.UI.WebControls.TreeNodeBinding> object is applied. For this example to work correctly, you must copy the sample XML data, provided after this code example, to a file named Booklist.xml.  \n  \n [!code-vb[TreeNodeBindingText#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_58_1.aspx)]\n [!code-cs[TreeNodeBindingText#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_58_1.aspx)]  \n  \n The following code example provides sample XML data for the preceding example.  \n  \n```  \n<Books Text=\"Books List\">  \n    <Book Text=\"Book Title One\"  \n        Value=\"1\"   \n        Image=\"Bookimage1.jpg\"  \n        ImageToolTip=\"Book 1 Photo\"   \n        Nav=\"http://www.microsoft.com\"  \n        Tip=\"Book Title 1\">  \n        <Description Text=\"Book Description\">  \n        </Description>  \n        <Price Value=\"$1.99\">  \n        </Price>  \n        <Author Text=\"Author Name\"  \n            Value=\"LastName\"   \n            Image=\"Authorimage1.jpg\"   \n            Nav=\"http://www.microsoft.com\"  \n            Tip=\"Author Name\">  \n        </Author>  \n    </Book>  \n    <Book Text=\"Book Title Two\"  \n        Value=\"2\"   \n        Image=\"Bookimage2.jpg\"  \n        ImageToolTip=\"Book 2 Photo\"   \n        Nav=\"http://www.microsoft.com\"  \n        Tip=\"Click Me\">  \n        <Description Text=\"Book Description\">  \n        </Description>  \n        <Price Value=\"$2.99\">  \n        </Price>  \n        <Author Text=\"Author Name\"  \n            Value=\"LastName\"   \n            Image=\"Authorimage2.jpg\"   \n            Nav=\"http://www.microsoft.com\"  \n            Tip=\"Author Name\">  \n        </Author>  \n    </Book>  \n</Books>  \n```"
  syntax:
    content: public string ImageUrl { get; set; }
    return:
      type: System.String
      description: "節點的旁邊會顯示影像的 URL <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref>物件套用。 ImageUrl 屬性未設定。"
  overload: System.Web.UI.WebControls.TreeNodeBinding.ImageUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBinding.ImageUrlField
  id: ImageUrlField
  parent: System.Web.UI.WebControls.TreeNodeBinding
  langs:
  - csharp
  name: ImageUrlField
  nameWithType: TreeNodeBinding.ImageUrlField
  fullName: System.Web.UI.WebControls.TreeNodeBinding.ImageUrlField
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定要繫結至資料來源的欄位名稱<xref:System.Web.UI.WebControls.TreeNode.ImageUrl*>屬性<xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;></xref>物件<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;></xref>物件套用。</xref:System.Web.UI.WebControls.TreeNode.ImageUrl*>"
  remarks: "當<xref:System.Web.UI.WebControls.TreeView>控制項所繫結至資料來源，請使用 ImageUrlField 屬性指定繫結至欄位的名稱<xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A>屬性<xref:System.Web.UI.WebControls.TreeNode>物件。</xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A> </xref:System.Web.UI.WebControls.TreeView> 此繫結的關聯性會影響所有<xref:System.Web.UI.WebControls.TreeNode>物件的<xref:System.Web.UI.WebControls.TreeNodeBinding>物件套用。</xref:System.Web.UI.WebControls.TreeNodeBinding> </xref:System.Web.UI.WebControls.TreeNode> 影像會顯示節點旁邊，只要用戶端瀏覽器支援的格式可以是任何檔案格式 （.jpg、.gif、.bmp 等等）。      > [!NOTE] > 可以設定覆寫個別節點的映像及其<xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A>屬性直接。</xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A>       而不是使用這個屬性來繫結<xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A>屬性<xref:System.Web.UI.WebControls.TreeNode>物件欄位中，您可以設定<xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A>屬性設定為固定值<xref:System.Web.UI.WebControls.TreeNodeBinding.ImageUrl%2A>屬性。</xref:System.Web.UI.WebControls.TreeNodeBinding.ImageUrl%2A> </xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A> </xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A>      > [!NOTE] > 如果資料來源包含多個欄位，您必須先設定<xref:System.Web.UI.WebControls.TreeNodeBinding.Depth%2A>或<xref:System.Web.UI.WebControls.TreeNodeBinding.DataMember%2A>屬性或這兩個屬性，才能繫結至適當的欄位。</xref:System.Web.UI.WebControls.TreeNodeBinding.DataMember%2A> </xref:System.Web.UI.WebControls.TreeNodeBinding.Depth%2A>       當顯示 ImageUrlField 屬性的節點旁邊的映像時，您也應該考慮設定<xref:System.Web.UI.WebControls.TreeNodeBinding.ImageToolTipField%2A>屬性。</xref:System.Web.UI.WebControls.TreeNodeBinding.ImageToolTipField%2A> 您指定的工具提示文字會提供可用來將控制項設為更容易存取的映像的描述的輔助技術裝置。       這個屬性的值會儲存檢視狀態中。"
  example:
  - "This section contains two code examples. The first code example demonstrates how to use the ImageUrlField property to specify which attribute of an XML element to bind to the <xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A> property of a <xref:System.Web.UI.WebControls.TreeNode> object to which the <xref:System.Web.UI.WebControls.TreeNodeBinding> object is applied. The second code example provides sample XML data for the first code example.  \n  \n The following code example demonstrates how to use the ImageUrlField property to specify which attribute of an XML element to bind to the <xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A> property of a <xref:System.Web.UI.WebControls.TreeNode> object to which the <xref:System.Web.UI.WebControls.TreeNodeBinding> object is applied. For this example to work correctly, you must copy the sample XML data, provided after this code example, to a file named Booklist.xml.  \n  \n [!code-vb[TreeNodeTextField#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1012_1.aspx)]\n [!code-cs[TreeNodeTextField#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1012_1.aspx)]  \n  \n The following code example provides sample XML data for the preceding example.  \n  \n```  \n<Books Text=\"Books List\">  \n    <Book Text=\"Book Title One\"  \n        Value=\"1\"   \n        Image=\"Bookimage1.jpg\"  \n        ImageToolTip=\"Book 1 Photo\"   \n        Nav=\"http://www.microsoft.com\"  \n        Tip=\"Book Title 1\">  \n        <Description Text=\"Book Description\">  \n        </Description>  \n        <Price Value=\"$1.99\">  \n        </Price>  \n        <Author Text=\"Author Name\"  \n            Value=\"LastName\"   \n            Image=\"Authorimage1.jpg\"   \n            Nav=\"http://www.microsoft.com\"  \n            Tip=\"Author Name\">  \n        </Author>  \n    </Book>  \n    <Book Text=\"Book Title Two\"  \n        Value=\"2\"   \n        Image=\"Bookimage2.jpg\"  \n        ImageToolTip=\"Book 2 Photo\"   \n        Nav=\"http://www.microsoft.com\"  \n        Tip=\"Click Me\">  \n        <Description Text=\"Book Description\">  \n        </Description>  \n        <Price Value=\"$2.99\">  \n        </Price>  \n        <Author Text=\"Author Name\"  \n            Value=\"LastName\"   \n            Image=\"Authorimage2.jpg\"   \n            Nav=\"http://www.microsoft.com\"  \n            Tip=\"Author Name\">  \n        </Author>  \n    </Book>  \n</Books>  \n```"
  syntax:
    content: public string ImageUrlField { get; set; }
    return:
      type: System.String
      description: "繫結至欄位的名稱<xref:System.Web.UI.WebControls.TreeNode.ImageUrl*>屬性<xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;></xref>物件<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;></xref>物件套用。</xref:System.Web.UI.WebControls.TreeNode.ImageUrl*> 預設為空字串 (&quot;&quot;)，表示未設定 ImageUrlField 屬性。"
  overload: System.Web.UI.WebControls.TreeNodeBinding.ImageUrlField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBinding.NavigateUrl
  id: NavigateUrl
  parent: System.Web.UI.WebControls.TreeNodeBinding
  langs:
  - csharp
  name: NavigateUrl
  nameWithType: TreeNodeBinding.NavigateUrl
  fullName: System.Web.UI.WebControls.TreeNodeBinding.NavigateUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定目標節點時，連結至 URL <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref>物件套用在按下。"
  remarks: "當<xref:System.Web.UI.WebControls.TreeView>控制項所繫結至資料來源，請使用 NavigateUrl 屬性指定繫結至 URL<xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>屬性<xref:System.Web.UI.WebControls.TreeNode>物件。</xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> </xref:System.Web.UI.WebControls.TreeView> 此繫結的關聯性會影響所有<xref:System.Web.UI.WebControls.TreeNode>物件的<xref:System.Web.UI.WebControls.TreeNodeBinding>物件套用。</xref:System.Web.UI.WebControls.TreeNodeBinding> </xref:System.Web.UI.WebControls.TreeNode> 當設定這個屬性時，<xref:System.Web.UI.WebControls.TreeView>控制項會顯示節點，而不是純文字的文字的超連結。</xref:System.Web.UI.WebControls.TreeView> 您也可以選擇性地設定<xref:System.Web.UI.WebControls.TreeNodeBinding.Target%2A>屬性，以指定的視窗或框架，在其中顯示連結的內容。</xref:System.Web.UI.WebControls.TreeNodeBinding.Target%2A>      > [!NOTE] > 您可以選擇性地設定覆寫 NavigateUrl 屬性<xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>直接每個節點的屬性。</xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>       除了使用 NavigateUrl 屬性繫結至每個節點的相同的 URL，您可以繫結<xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>屬性<xref:System.Web.UI.WebControls.TreeNode>藉由設定資料來源的欄位物件<xref:System.Web.UI.WebControls.TreeNodeBinding.NavigateUrlField%2A>屬性。</xref:System.Web.UI.WebControls.TreeNodeBinding.NavigateUrlField%2A> </xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>       這個屬性的值會儲存檢視狀態中。"
  example:
  - "This section contains two code examples. The first code example demonstrates how to use the NavigateUrl property to specify the URL to link to when a node to which the <xref:System.Web.UI.WebControls.TreeNodeBinding> object is applied is clicked. The second code example provides sample XML data for the first code example.  \n  \n The following code example demonstrates how to use the NavigateUrl property to specify the URL to link to when a node to which the <xref:System.Web.UI.WebControls.TreeNodeBinding> object is applied is clicked. For this example to work correctly, you must copy the sample XML data, provided after this code example, to a file named Booklist.xml.  \n  \n [!code-vb[TreeNodeBindingText#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1267_1.aspx)]\n [!code-cs[TreeNodeBindingText#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1267_1.aspx)]  \n  \n The following code example provides sample XML data for the preceding example.  \n  \n```  \n<Books Text=\"Books List\">  \n    <Book Text=\"Book Title One\"  \n        Value=\"1\"   \n        Image=\"Bookimage1.jpg\"  \n        ImageToolTip=\"Book 1 Photo\"   \n        Nav=\"http://www.microsoft.com\"  \n        Tip=\"Book Title 1\">  \n        <Description Text=\"Book Description\">  \n        </Description>  \n        <Price Value=\"$1.99\">  \n        </Price>  \n        <Author Text=\"Author Name\"  \n            Value=\"LastName\"   \n            Image=\"Authorimage1.jpg\"   \n            Nav=\"http://www.microsoft.com\"  \n            Tip=\"Author Name\">  \n        </Author>  \n    </Book>  \n    <Book Text=\"Book Title Two\"  \n        Value=\"2\"   \n        Image=\"Bookimage2.jpg\"  \n        ImageToolTip=\"Book 2 Photo\"   \n        Nav=\"http://www.microsoft.com\"  \n        Tip=\"Click Me\">  \n        <Description Text=\"Book Description\">  \n        </Description>  \n        <Price Value=\"$2.99\">  \n        </Price>  \n        <Author Text=\"Author Name\"  \n            Value=\"LastName\"   \n            Image=\"Authorimage2.jpg\"   \n            Nav=\"http://www.microsoft.com\"  \n            Tip=\"Author Name\">  \n        </Author>  \n    </Book>  \n</Books>  \n```"
  syntax:
    content: public string NavigateUrl { get; set; }
    return:
      type: System.String
      description: "要連結的節點時 URL <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref>物件套用在按下。 預設為空字串 (&quot;&quot;)，表示未設定 NavigateUrl 屬性。"
  overload: System.Web.UI.WebControls.TreeNodeBinding.NavigateUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBinding.NavigateUrlField
  id: NavigateUrlField
  parent: System.Web.UI.WebControls.TreeNodeBinding
  langs:
  - csharp
  name: NavigateUrlField
  nameWithType: TreeNodeBinding.NavigateUrlField
  fullName: System.Web.UI.WebControls.TreeNodeBinding.NavigateUrlField
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定要繫結至資料來源的欄位名稱<xref:System.Web.UI.WebControls.TreeNode.NavigateUrl*>屬性<xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;></xref>物件<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;></xref>物件套用。</xref:System.Web.UI.WebControls.TreeNode.NavigateUrl*>"
  remarks: "當<xref:System.Web.UI.WebControls.TreeView>控制項所繫結至資料來源，請使用 NavigateUrlField 屬性指定欄位名稱，即可將繫結至<xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>屬性<xref:System.Web.UI.WebControls.TreeNode>物件。</xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> </xref:System.Web.UI.WebControls.TreeView> 此繫結的關聯性會影響所有<xref:System.Web.UI.WebControls.TreeNode>物件的<xref:System.Web.UI.WebControls.TreeNodeBinding>物件套用。</xref:System.Web.UI.WebControls.TreeNodeBinding> </xref:System.Web.UI.WebControls.TreeNode> 當設定 NavigateUrlField 屬性時，<xref:System.Web.UI.WebControls.TreeView>控制項會顯示節點，而不是純文字的文字的超連結。</xref:System.Web.UI.WebControls.TreeView> 您也可以選擇性地設定<xref:System.Web.UI.WebControls.TreeNodeBinding.Target%2A>屬性，以指定的視窗或框架，在其中顯示連結的內容。</xref:System.Web.UI.WebControls.TreeNodeBinding.Target%2A>      > [!NOTE] > 您可以選擇性地設定覆寫 NavigateUrlField 屬性<xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>直接每個節點的屬性。</xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>       而不是使用 NavigateUrlField 屬性要繫結<xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>屬性<xref:System.Web.UI.WebControls.TreeNode>物件欄位中，您可以設定<xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>屬性設定為固定值<xref:System.Web.UI.WebControls.TreeNodeBinding.NavigateUrl%2A>屬性。</xref:System.Web.UI.WebControls.TreeNodeBinding.NavigateUrl%2A> </xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> </xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>      > [!NOTE] > 如果資料來源包含多個欄位，您必須先設定<xref:System.Web.UI.WebControls.TreeNodeBinding.Depth%2A>或<xref:System.Web.UI.WebControls.TreeNodeBinding.DataMember%2A>屬性或這兩個屬性，才能繫結至適當的欄位。</xref:System.Web.UI.WebControls.TreeNodeBinding.DataMember%2A> </xref:System.Web.UI.WebControls.TreeNodeBinding.Depth%2A>       這個屬性的值會儲存檢視狀態中。"
  example:
  - "This section contains two code examples. The first code example demonstrates how to use the NavigateUrlField property to specify which attribute of an XML element to bind to the <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> property of a <xref:System.Web.UI.WebControls.TreeNode> object to which the <xref:System.Web.UI.WebControls.TreeNodeBinding> object is applied. The second code example provides sample XML data for the first code example.  \n  \n The following code example demonstrates how to use the NavigateUrlField property to specify which attribute of an XML element to bind to the <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> property of a <xref:System.Web.UI.WebControls.TreeNode> object to which the <xref:System.Web.UI.WebControls.TreeNodeBinding> object is applied. For this example to work correctly, you must copy the sample XML data, provided after this code example, to a file named Booklist.xml.  \n  \n [!code-vb[TreeNodeTextField#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1074_1.aspx)]\n [!code-cs[TreeNodeTextField#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1074_1.aspx)]  \n  \n The following code example provides sample XML data for the preceding code example.  \n  \n```  \n<Books Text=\"Books List\">  \n    <Book Text=\"Book Title One\"  \n        Value=\"1\"   \n        Image=\"Bookimage1.jpg\"  \n        ImageToolTip=\"Book 1 Photo\"   \n        Nav=\"http://www.microsoft.com\"  \n        Tip=\"Book Title 1\">  \n        <Description Text=\"Book Description\">  \n        </Description>  \n        <Price Value=\"$1.99\">  \n        </Price>  \n        <Author Text=\"Author Name\"  \n            Value=\"LastName\"   \n            Image=\"Authorimage1.jpg\"   \n            Nav=\"http://www.microsoft.com\"  \n            Tip=\"Author Name\">  \n        </Author>  \n    </Book>  \n    <Book Text=\"Book Title Two\"  \n        Value=\"2\"   \n        Image=\"Bookimage2.jpg\"  \n        ImageToolTip=\"Book 2 Photo\"   \n        Nav=\"http://www.microsoft.com\"  \n        Tip=\"Click Me\">  \n        <Description Text=\"Book Description\">  \n        </Description>  \n        <Price Value=\"$2.99\">  \n        </Price>  \n        <Author Text=\"Author Name\"  \n            Value=\"LastName\"   \n            Image=\"Authorimage2.jpg\"   \n            Nav=\"http://www.microsoft.com\"  \n            Tip=\"Author Name\">  \n        </Author>  \n    </Book>  \n</Books>  \n```"
  syntax:
    content: public string NavigateUrlField { get; set; }
    return:
      type: System.String
      description: "繫結至欄位的名稱<xref:System.Web.UI.WebControls.TreeNode.NavigateUrl*>屬性<xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;></xref>物件<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;></xref>物件套用。</xref:System.Web.UI.WebControls.TreeNode.NavigateUrl*> 預設為空字串 (&quot;&quot;)，表示未設定 NavigateUrlField 屬性。"
  overload: System.Web.UI.WebControls.TreeNodeBinding.NavigateUrlField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBinding.PopulateOnDemand
  id: PopulateOnDemand
  parent: System.Web.UI.WebControls.TreeNodeBinding
  langs:
  - csharp
  name: PopulateOnDemand
  nameWithType: TreeNodeBinding.PopulateOnDemand
  fullName: System.Web.UI.WebControls.TreeNodeBinding.PopulateOnDemand
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定值，指出是否要節點<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;></xref>物件套用動態擴展。"
  remarks: "某些情況下，它並不實用靜態地預先定義的資料大小，或根據使用者輸入的自訂內容的樹狀結構。 因為這個緣故，<xref:System.Web.UI.WebControls.TreeView>控制項支援動態節點母體擴展。</xref:System.Web.UI.WebControls.TreeView> 當 PopulateOnDemand 屬性設定為`true`，節點的子節點的<xref:System.Web.UI.WebControls.TreeNodeBinding>物件套用到取得在執行階段時展開節點填入。</xref:System.Web.UI.WebControls.TreeNodeBinding>       資料繫結所設定的建立時<xref:System.Web.UI.WebControls.TreeView.AutoGenerateDataBindings%2A>的<xref:System.Web.UI.WebControls.TreeView>控制權傳輸至`true`，所建立的繫結有屬性設為 PopulateOnDemand `true`。</xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.TreeView.AutoGenerateDataBindings%2A> 以宣告方式建立的資料繫結有屬性設為 PopulateOnDemand `false`。 使用宣告式語法可讓您控制個別的資料繫結的行為。      > [!NOTE] > 不同於<xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A>屬性的<xref:System.Web.UI.WebControls.TreeNode>類別，PopulateOnDemand 屬性不需要定義<xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate>事件，如果您使用資料來源控制項，例如<xref:System.Web.UI.WebControls.XmlDataSource>.</xref:System.Web.UI.WebControls.XmlDataSource></xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate>事件處理方法</xref:System.Web.UI.WebControls.TreeNode></xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> 相反地，<xref:System.Web.UI.WebControls.TreeView>控制項動態產生的事件處理方法，使用的屬性<xref:System.Web.UI.WebControls.TreeNodeBinding>中的物件<xref:System.Web.UI.WebControls.TreeView.DataBindings%2A>集合。</xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> </xref:System.Web.UI.WebControls.TreeNodeBinding> </xref:System.Web.UI.WebControls.TreeView> 您仍然可以定義的事件處理方法<xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate>事件; 不過，它會呼叫之後的事件處理方法<xref:System.Web.UI.WebControls.TreeView>控制項。</xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate>       支援的瀏覽器也可以利用用戶端節點母體擴展。 啟用時，這可讓<xref:System.Web.UI.WebControls.TreeView>控制項來擴展以動態方式在用戶端上的節點展開該節點時，這樣就不需要回傳至伺服器。</xref:System.Web.UI.WebControls.TreeView> 如需有關用戶端節點母體擴展的詳細資訊，請參閱<xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A>.</xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A>       這個屬性的值會儲存檢視狀態中。"
  example:
  - "This section contains two code examples. The first code example demonstrates how to use the <xref:System.Web.UI.WebControls.TreeNodeBinding.ShowCheckBox%2A> property to specify whether a check box is displayed for a node. The second code example provides sample XML data for the first code example.  \n  \n The following example demonstrates how to use the <xref:System.Web.UI.WebControls.TreeNodeBinding.ShowCheckBox%2A> property to specify whether a check box is displayed for a node. For this example to work correctly, you must copy the sample XML data, provided after this code example, to a file named Book.xml.  \n  \n [!code-cs[TreeNodeBindingPopulateOnDemand#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_426_1.aspx)]\n [!code-vb[TreeNodeBindingPopulateOnDemand#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_426_1.aspx)]  \n  \n The following code example provides sample XML data for the preceding code example.  \n  \n```  \n<Book Title=\"Book Title\">  \n    <Chapter Heading=\"Chapter 1\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n        <Section Heading=\"Section 2\">  \n        </Section>  \n    </Chapter>  \n    <Chapter Heading=\"Chapter 2\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n    </Chapter>  \n    <Appendix Heading=\"Appendix A\">  \n    </Appendix>  \n</Book>  \n```"
  syntax:
    content: public bool PopulateOnDemand { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要填入的節點<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;></xref>物件套用動態，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.TreeNodeBinding.PopulateOnDemand*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBinding.SelectAction
  id: SelectAction
  parent: System.Web.UI.WebControls.TreeNodeBinding
  langs:
  - csharp
  name: SelectAction
  nameWithType: TreeNodeBinding.SelectAction
  fullName: System.Web.UI.WebControls.TreeNodeBinding.SelectAction
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定事件或事件引發時的節點<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;></xref>物件套用已選取。"
  remarks: "當<xref:System.Web.UI.WebControls.TreeView>控制項所繫結至資料來源，請使用 SelectAction 屬性指定的值繫結至<xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>屬性<xref:System.Web.UI.WebControls.TreeNode>物件。</xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A> </xref:System.Web.UI.WebControls.TreeView> 此繫結的關聯性會影響所有<xref:System.Web.UI.WebControls.TreeNode>物件的<xref:System.Web.UI.WebControls.TreeNodeBinding>物件套用。</xref:System.Web.UI.WebControls.TreeNodeBinding> </xref:System.Web.UI.WebControls.TreeNode> <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>屬性用來指定選取的節點時引發的事件。</xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>      > [!NOTE] > 您可以選擇性地設定覆寫 SelectAction 屬性<xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>直接每個節點的屬性。</xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>       下表列出可用的選項。      |`SelectAction`值 |描述 |  |--------------------------|-----------------|  |`TreeNodeSelectAction.Expand`|切換展開或摺疊節點。 引發<xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded>事件或<xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed>事件，視。 |  |`TreeNodeSelectAction.None`|會引發任何事件，選取節點時。 |  |`TreeNodeSelectAction.Select`|引發<xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged>事件選取節點時。 |  |`TreeNodeSelectAction.SelectExpand`|引發兩者<xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged>和<xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded>選取節點時的事件。</xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> </xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> </xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> </xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed> </xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> 只會展開節點，不會摺疊。 |     > [!NOTE] ><xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>的節點不會呈現其<xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>屬性設定為`TreeNodeSelectAction.None`。</xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A> </xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>       這個屬性的值會儲存檢視狀態中。"
  example:
  - "This section contains two code examples. The first code example demonstrates how to use the SelectAction property to specify which event is raised when a node is clicked. The second code example provides sample XML data for the first code example.  \n  \n The following example demonstrates how to use the SelectAction property to specify which event is raised when a node is clicked. For this example to work correctly, you must copy the sample XML data, provided after this code example, to a file named Book.xml.  \n  \n [!code-cs[TreeNodeBindingSelectAction#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_346_1.aspx)]\n [!code-vb[TreeNodeBindingSelectAction#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_346_1.aspx)]  \n  \n The following code example provides sample XML data for the preceding code example.  \n  \n```  \n<Book Title=\"Book Title\">  \n    <Chapter Heading=\"Chapter 1\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n        <Section Heading=\"Section 2\">  \n        </Section>  \n    </Chapter>  \n    <Chapter Heading=\"Chapter 2\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n    </Chapter>  \n    <Appendix Heading=\"Appendix A\">  \n    </Appendix>  \n</Book>  \n```"
  syntax:
    content: public System.Web.UI.WebControls.TreeNodeSelectAction SelectAction { get; set; }
    return:
      type: System.Web.UI.WebControls.TreeNodeSelectAction
      description: "其中一個<xref href=&quot;System.Web.UI.WebControls.TreeNodeSelectAction&quot;></xref>值。 預設值是<xref uid=&quot;langword_csharp_TreeNodeSelectAction.Select&quot; name=&quot;TreeNodeSelectAction.Select&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.TreeNodeBinding.SelectAction*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBinding.ShowCheckBox
  id: ShowCheckBox
  parent: System.Web.UI.WebControls.TreeNodeBinding
  langs:
  - csharp
  name: ShowCheckBox
  nameWithType: TreeNodeBinding.ShowCheckBox
  fullName: System.Web.UI.WebControls.TreeNodeBinding.ShowCheckBox
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定值，指出的節點旁是否顯示核取方塊<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;></xref>物件套用。"
  remarks: "延展的多重節點選取項目中提供支援<xref:System.Web.UI.WebControls.TreeView>控制項，您可以在節點中顯示映像旁的核取方塊。</xref:System.Web.UI.WebControls.TreeView> 當<xref:System.Web.UI.WebControls.TreeView>控制項所繫結至資料來源，請使用 ShowCheckBox 屬性指定的值繫結至<xref:System.Web.UI.WebControls.TreeNode.ShowCheckBox%2A>屬性<xref:System.Web.UI.WebControls.TreeNode>物件。</xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.ShowCheckBox%2A> </xref:System.Web.UI.WebControls.TreeView> 此繫結的關聯性會影響所有<xref:System.Web.UI.WebControls.TreeNode>物件的<xref:System.Web.UI.WebControls.TreeNodeBinding>物件套用。</xref:System.Web.UI.WebControls.TreeNodeBinding> </xref:System.Web.UI.WebControls.TreeNode> <xref:System.Web.UI.WebControls.TreeNode.ShowCheckBox%2A>屬性用來顯示或隱藏節點的核取方塊。</xref:System.Web.UI.WebControls.TreeNode.ShowCheckBox%2A>      > [!NOTE] > ShowCheckBox 屬性可以用來顯示核取方塊，雖然更常見的是使用<xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A>屬性<xref:System.Web.UI.WebControls.TreeView>控制項。</xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A> 不過，<xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A>屬性會影響屬性所指定的每個節點類型; 因此，ShowCheckBox 屬性通常用來覆寫該設定，讓節點<xref:System.Web.UI.WebControls.TreeNodeBinding>物件套用。</xref:System.Web.UI.WebControls.TreeNodeBinding> </xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A> 您可以選擇性地設定覆寫 ShowCheckBox 屬性<xref:System.Web.UI.WebControls.TreeNode.ShowCheckBox%2A>直接每個節點的屬性。</xref:System.Web.UI.WebControls.TreeNode.ShowCheckBox%2A>       這個屬性的值會儲存檢視狀態中。"
  example:
  - "This section contains two code examples. The first code example demonstrates how to use the ShowCheckBox property to specify whether a check box is displayed for a node. The second code example provides sample XML data for the first code example.  \n  \n The following example demonstrates how to use the ShowCheckBox property to specify whether a check box is displayed for a node. For this example to work correctly, you must copy the sample XML data, provided after this code example, to a file named Book.xml.  \n  \n [!code-cs[TreeNodeBindingShowCheckBox#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1341_1.aspx)]\n [!code-vb[TreeNodeBindingShowCheckBox#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1341_1.aspx)]  \n  \n The following code example provides sample XML data for the preceding code example.  \n  \n```  \n<Book Title=\"Book Title\">  \n    <Chapter Heading=\"Chapter 1\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n        <Section Heading=\"Section 2\">  \n        </Section>  \n    </Chapter>  \n    <Chapter Heading=\"Chapter 2\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n    </Chapter>  \n    <Appendix Heading=\"Appendix A\">  \n    </Appendix>  \n</Book>  \n```"
  syntax:
    content: public Nullable<bool> ShowCheckBox { get; set; }
    return:
      type: System.Nullable{System.Boolean}
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要顯示節點旁邊的核取方塊的<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;></xref>物件套用否則即為<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.TreeNodeBinding.ShowCheckBox*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBinding.System#ICloneable#Clone
  id: System#ICloneable#Clone
  isEii: true
  parent: System.Web.UI.WebControls.TreeNodeBinding
  langs:
  - csharp
  name: System.ICloneable.Clone()
  nameWithType: TreeNodeBinding.System.ICloneable.Clone()
  fullName: System.Web.UI.WebControls.TreeNodeBinding.System.ICloneable.Clone()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "建立一份<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;></xref>物件。"
  remarks: "ICloneable.Clone 方法是 helper 函式，建立一份<xref:System.Web.UI.WebControls.TreeNodeBinding>從 ICloneable.Clone 方法呼叫的物件。</xref:System.Web.UI.WebControls.TreeNodeBinding>      > [!NOTE] > ICloneable.Clone 方法主要由控制項開發人員使用。"
  syntax:
    content: object ICloneable.Clone ();
    parameters: []
    return:
      type: System.Object
      description: "物件，表示一份<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;></xref>物件。"
  overload: System.Web.UI.WebControls.TreeNodeBinding.System#ICloneable#Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBinding.System#Web#UI#IDataSourceViewSchemaAccessor#DataSourceViewSchema
  id: System#Web#UI#IDataSourceViewSchemaAccessor#DataSourceViewSchema
  isEii: true
  parent: System.Web.UI.WebControls.TreeNodeBinding
  langs:
  - csharp
  name: System.Web.UI.IDataSourceViewSchemaAccessor.DataSourceViewSchema
  nameWithType: TreeNodeBinding.System.Web.UI.IDataSourceViewSchemaAccessor.DataSourceViewSchema
  fullName: System.Web.UI.WebControls.TreeNodeBinding.System.Web.UI.IDataSourceViewSchemaAccessor.DataSourceViewSchema
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "如需這個成員的說明，請參閱<xref href=&quot;System.Web.UI.IDataSourceViewSchemaAccessor.DataSourceViewSchema&quot;> </xref>。"
  remarks: "這個成員是明確介面成員實作。 它可用時，才<xref:System.Web.UI.WebControls.TreeNodeBinding>執行個體轉換成<xref:System.Web.UI.IDataSourceViewSchemaAccessor>介面。</xref:System.Web.UI.IDataSourceViewSchemaAccessor> </xref:System.Web.UI.WebControls.TreeNodeBinding>       這個屬性的值會儲存檢視狀態中。"
  syntax:
    content: object System.Web.UI.IDataSourceViewSchemaAccessor.DataSourceViewSchema { get; set; }
    return:
      type: System.Object
      description: "物件，表示相關聯的結構描述<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;></xref>物件。"
  overload: System.Web.UI.WebControls.TreeNodeBinding.System#Web#UI#IDataSourceViewSchemaAccessor#DataSourceViewSchema*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBinding.System#Web#UI#IStateManager#IsTrackingViewState
  id: System#Web#UI#IStateManager#IsTrackingViewState
  isEii: true
  parent: System.Web.UI.WebControls.TreeNodeBinding
  langs:
  - csharp
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: TreeNodeBinding.System.Web.UI.IStateManager.IsTrackingViewState
  fullName: System.Web.UI.WebControls.TreeNodeBinding.System.Web.UI.IStateManager.IsTrackingViewState
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "如需這個成員的說明，請參閱<xref href=&quot;System.Web.UI.IStateManager.IsTrackingViewState&quot;> </xref>。"
  remarks: "這個成員是明確介面成員實作。 它可用時，才<xref:System.Web.UI.WebControls.TreeNodeBinding>執行個體轉換成<xref:System.Web.UI.IStateManager>介面。</xref:System.Web.UI.IStateManager> </xref:System.Web.UI.WebControls.TreeNodeBinding>"
  syntax:
    content: bool System.Web.UI.IStateManager.IsTrackingViewState { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果此控制項標記為儲存其狀態。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.TreeNodeBinding.System#Web#UI#IStateManager#IsTrackingViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBinding.System#Web#UI#IStateManager#LoadViewState(System.Object)
  id: System#Web#UI#IStateManager#LoadViewState(System.Object)
  isEii: true
  parent: System.Web.UI.WebControls.TreeNodeBinding
  langs:
  - csharp
  name: System.Web.UI.IStateManager.LoadViewState(Object)
  nameWithType: TreeNodeBinding.System.Web.UI.IStateManager.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.TreeNodeBinding.System.Web.UI.IStateManager.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "載入先前儲存的檢視狀態的節點。"
  syntax:
    content: void IStateManager.LoadViewState (object state);
    parameters:
    - id: state
      type: System.Object
      description: "A &lt;xref:System.Object?displayProperty=fullName&gt; ，其中包含已儲存的檢視狀態值。"
  overload: System.Web.UI.WebControls.TreeNodeBinding.System#Web#UI#IStateManager#LoadViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBinding.System#Web#UI#IStateManager#SaveViewState
  id: System#Web#UI#IStateManager#SaveViewState
  isEii: true
  parent: System.Web.UI.WebControls.TreeNodeBinding
  langs:
  - csharp
  name: System.Web.UI.IStateManager.SaveViewState()
  nameWithType: TreeNodeBinding.System.Web.UI.IStateManager.SaveViewState()
  fullName: System.Web.UI.WebControls.TreeNodeBinding.System.Web.UI.IStateManager.SaveViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "儲存檢視狀態變更的物件。"
  syntax:
    content: object IStateManager.SaveViewState ();
    parameters: []
    return:
      type: System.Object
      description: "包含檢視狀態變更的物件。"
  overload: System.Web.UI.WebControls.TreeNodeBinding.System#Web#UI#IStateManager#SaveViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBinding.System#Web#UI#IStateManager#TrackViewState
  id: System#Web#UI#IStateManager#TrackViewState
  isEii: true
  parent: System.Web.UI.WebControls.TreeNodeBinding
  langs:
  - csharp
  name: System.Web.UI.IStateManager.TrackViewState()
  nameWithType: TreeNodeBinding.System.Web.UI.IStateManager.TrackViewState()
  fullName: System.Web.UI.WebControls.TreeNodeBinding.System.Web.UI.IStateManager.TrackViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "指示<xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;></xref>來追蹤其檢視狀態變更的物件。"
  remarks: "伺服器控制項上呼叫 IStateManager.TrackViewState 方法之後<xref:System.Web.UI.Control.IsTrackingViewState%2A>屬性會傳回`true`。</xref:System.Web.UI.Control.IsTrackingViewState%2A>"
  syntax:
    content: void IStateManager.TrackViewState ();
    parameters: []
  overload: System.Web.UI.WebControls.TreeNodeBinding.System#Web#UI#IStateManager#TrackViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBinding.Target
  id: Target
  parent: System.Web.UI.WebControls.TreeNodeBinding
  langs:
  - csharp
  name: Target
  nameWithType: TreeNodeBinding.Target
  fullName: System.Web.UI.WebControls.TreeNodeBinding.Target
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定目標視窗或框架中顯示的節點相關聯之 Web 網頁內容<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;></xref>物件套用。"
  remarks: "當<xref:System.Web.UI.WebControls.TreeView>控制項所繫結至資料來源，請使用目標屬性指定的值繫結至<xref:System.Web.UI.WebControls.TreeNode.Target%2A>屬性<xref:System.Web.UI.WebControls.TreeNode>物件。</xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.Target%2A> </xref:System.Web.UI.WebControls.TreeView> 此繫結的關聯性會影響所有<xref:System.Web.UI.WebControls.TreeNode>物件的<xref:System.Web.UI.WebControls.TreeNodeBinding>物件套用。</xref:System.Web.UI.WebControls.TreeNodeBinding> </xref:System.Web.UI.WebControls.TreeNode> <xref:System.Web.UI.WebControls.TreeNode.Target%2A>屬性用來指定視窗或框架中顯示 Web 內容的連結節點時，按一下該節點。</xref:System.Web.UI.WebControls.TreeNode.Target%2A>      > [!NOTE] > 設定目標屬性會覆寫<xref:System.Web.UI.WebControls.TreeView.Target%2A>屬性<xref:System.Web.UI.WebControls.TreeView>節點的控制項<xref:System.Web.UI.WebControls.TreeNodeBinding>物件套用。</xref:System.Web.UI.WebControls.TreeNodeBinding> </xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.TreeView.Target%2A> 您可以選擇性地設定覆寫的目標屬性<xref:System.Web.UI.WebControls.TreeNode.Target%2A>直接每個節點的屬性。</xref:System.Web.UI.WebControls.TreeNode.Target%2A>      > [!NOTE] > Target 屬性轉譯成`target`屬性。 `target`屬性`anchor`XHTML 1.1 文件類型定義中不允許項目。 未設定目標屬性，如果轉譯的輸出為<xref:System.Web.UI.WebControls.TreeNodeBinding>控制項必須符合 XHTML 1.1。</xref:System.Web.UI.WebControls.TreeNodeBinding> 如需詳細資訊，請參閱[XHTML 標準，在 Visual Studio 和 ASP.NET](~/add/includes/ajax-current-ext-md.md)。   >> 時建立可存取網頁，您應該避免使用的目標屬性指向另一個視窗。 如需詳細資訊，請參閱[NIB: ASP.NET 網頁可及性](http://msdn.microsoft.com/en-us/9b5f3e05-e88d-4248-a5f4-9e64850fa0ae)。       這個屬性的值會儲存檢視狀態中。"
  example:
  - "This section contains two code examples. The first code example demonstrates how to use the Target property to specify that the Web page that is associated with the root node should be displayed in a new window. The second code example provides sample XML data for the first code example.  \n  \n The following example demonstrates how to use the Target property to specify that the Web page that is associated with the root node should be displayed in a new window. For this example to work correctly, you must copy the sample XML data, provided after this code example, to a file named Book.xml.  \n  \n [!code-vb[TreeNodeBindingTarget#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_78_1.aspx)]\n [!code-cs[TreeNodeBindingTarget#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_78_1.aspx)]  \n  \n The following code example provides sample XML data for the preceding code example.  \n  \n```  \n<Book Title=\"Book Title\">  \n    <Chapter Heading=\"Chapter 1\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n        <Section Heading=\"Section 2\">  \n        </Section>  \n    </Chapter>  \n    <Chapter Heading=\"Chapter 2\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n    </Chapter>  \n    <Appendix Heading=\"Appendix A\">  \n    </Appendix>  \n</Book>  \n```"
  syntax:
    content: public string Target { get; set; }
    return:
      type: System.String
      description: "目標視窗或框架，其中顯示連結的 Web 網頁內容。 值必須以字母開頭的 A 到 Z 範圍中 （不區分大小寫），但下表所示，以底線開頭的某些特殊值除外。       <table><thead><tr><th> 目標值       </th><th> 說明       </th></tr></thead><tbody><tr><td><xref uid=&quot;langword_csharp__blank&quot; name=&quot;_blank&quot; href=&quot;&quot;></xref></td><td> 呈現在新視窗中沒有框架的內容。       </td></tr><tr><td><xref uid=&quot;langword_csharp__parent&quot; name=&quot;_parent&quot; href=&quot;&quot;></xref></td><td> 呈現父代的 即時運算框架組中的內容。       </td></tr><tr><td><xref uid=&quot;langword_csharp__search&quot; name=&quot;_search&quot; href=&quot;&quot;></xref></td><td> 轉譯 [搜尋] 窗格中的內容。       </td></tr><tr><td><xref uid=&quot;langword_csharp__self&quot; name=&quot;_self&quot; href=&quot;&quot;></xref></td><td> 呈現具有焦點的框架中的內容。       </td></tr><tr><td><xref uid=&quot;langword_csharp__top&quot; name=&quot;_top&quot; href=&quot;&quot;></xref></td><td> 呈現框架不完整的視窗中的內容。       </td></tr></tbody></table><div class=&quot;alert NOTE&quot;>    請檢查您的瀏覽器文件，以判斷是否<xref uid=&quot;langword_csharp__search&quot; name=&quot;_search&quot; href=&quot;&quot;></xref>支援值。  例如，Microsoft Internet Explorer 5.0 版和更新版本支援<xref uid=&quot;langword_csharp__search&quot; name=&quot;_search&quot; href=&quot;&quot;></xref>目標值。      </div>       預設為空字串 (&quot;&quot;)，會重新整理的視窗或具有焦點的框架。"
  overload: System.Web.UI.WebControls.TreeNodeBinding.Target*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBinding.TargetField
  id: TargetField
  parent: System.Web.UI.WebControls.TreeNodeBinding
  langs:
  - csharp
  name: TargetField
  nameWithType: TreeNodeBinding.TargetField
  fullName: System.Web.UI.WebControls.TreeNodeBinding.TargetField
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定要繫結至資料來源的欄位名稱<xref:System.Web.UI.WebControls.TreeNode.Target*>屬性<xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;></xref>物件<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;></xref>物件套用。</xref:System.Web.UI.WebControls.TreeNode.Target*>"
  remarks: "當<xref:System.Web.UI.WebControls.TreeView>控制項所繫結至資料來源，請使用 TargetField 屬性指定欄位名稱，即可將繫結至<xref:System.Web.UI.WebControls.TreeNode.Target%2A>屬性<xref:System.Web.UI.WebControls.TreeNode>物件。</xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.Target%2A> </xref:System.Web.UI.WebControls.TreeView> <xref:System.Web.UI.WebControls.TreeNode.Target%2A>屬性用來指定視窗或框架中顯示 Web 內容的連結節點時，按一下該節點。</xref:System.Web.UI.WebControls.TreeNode.Target%2A>       此繫結的關聯性會影響所有<xref:System.Web.UI.WebControls.TreeNode>物件的<xref:System.Web.UI.WebControls.TreeNodeBinding>物件套用。</xref:System.Web.UI.WebControls.TreeNodeBinding> </xref:System.Web.UI.WebControls.TreeNode>      > [!NOTE] > 您可以選擇性地設定覆寫 TargetField 屬性<xref:System.Web.UI.WebControls.TreeNode.Target%2A>直接每個節點的屬性。</xref:System.Web.UI.WebControls.TreeNode.Target%2A>       而不是使用 TargetField 屬性要繫結<xref:System.Web.UI.WebControls.TreeNode.Target%2A>屬性<xref:System.Web.UI.WebControls.TreeNode>物件欄位中，您可以設定<xref:System.Web.UI.WebControls.TreeNode.Target%2A>屬性設定為固定值<xref:System.Web.UI.WebControls.TreeNodeBinding.Target%2A>屬性。</xref:System.Web.UI.WebControls.TreeNodeBinding.Target%2A> </xref:System.Web.UI.WebControls.TreeNode.Target%2A> </xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.Target%2A>      > [!NOTE] > 如果資料來源包含多個欄位，您必須先設定<xref:System.Web.UI.WebControls.TreeNodeBinding.Depth%2A>或<xref:System.Web.UI.WebControls.TreeNodeBinding.DataMember%2A>屬性或這兩個屬性，才能繫結至適當的欄位。</xref:System.Web.UI.WebControls.TreeNodeBinding.DataMember%2A> </xref:System.Web.UI.WebControls.TreeNodeBinding.Depth%2A>       這個屬性的值會儲存檢視狀態中。"
  syntax:
    content: public string TargetField { get; set; }
    return:
      type: System.String
      description: "繫結至欄位的名稱<xref:System.Web.UI.WebControls.TreeNode.Target*>屬性<xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;></xref>物件<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;></xref>物件套用。</xref:System.Web.UI.WebControls.TreeNode.Target*> 預設為空字串 (&quot;&quot;)，表示未設定 TargetField 屬性。"
  overload: System.Web.UI.WebControls.TreeNodeBinding.TargetField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBinding.Text
  id: Text
  parent: System.Web.UI.WebControls.TreeNodeBinding
  langs:
  - csharp
  name: Text
  nameWithType: TreeNodeBinding.Text
  fullName: System.Web.UI.WebControls.TreeNodeBinding.Text
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定顯示的節點的文字<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;></xref>物件套用。"
  remarks: "當<xref:System.Web.UI.WebControls.TreeView>控制項所繫結至資料來源，請使用文字屬性指定的值繫結至<xref:System.Web.UI.WebControls.TreeNode.Text%2A>屬性<xref:System.Web.UI.WebControls.TreeNode>物件。</xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.Text%2A> </xref:System.Web.UI.WebControls.TreeView> 此繫結的關聯性會影響所有<xref:System.Web.UI.WebControls.TreeNode>物件的<xref:System.Web.UI.WebControls.TreeNodeBinding>物件套用。</xref:System.Web.UI.WebControls.TreeNodeBinding> </xref:System.Web.UI.WebControls.TreeNode> <xref:System.Web.UI.WebControls.TreeNode.Text%2A>屬性用來指定節點中顯示的文字。</xref:System.Web.UI.WebControls.TreeNode.Text%2A>      > [!NOTE] > 您可以選擇性地設定覆寫文字屬性<xref:System.Web.UI.WebControls.TreeNode.Text%2A>直接每個節點的屬性。</xref:System.Web.UI.WebControls.TreeNode.Text%2A>       而不是使用文字屬性要繫結至每個節點的相同的文字，您可以繫結<xref:System.Web.UI.WebControls.TreeNode.Text%2A>屬性<xref:System.Web.UI.WebControls.TreeNode>藉由設定資料來源的欄位物件<xref:System.Web.UI.WebControls.TreeNodeBinding.TextField%2A>屬性。</xref:System.Web.UI.WebControls.TreeNodeBinding.TextField%2A> </xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.Text%2A>       這個屬性的值會儲存檢視狀態中。       這個屬性的值設定時，可以自動儲存到資源檔使用設計工具。 如需詳細資訊，請參閱<xref:System.ComponentModel.LocalizableAttribute>和[全球化和當地語系化](~/add/includes/ajax-current-ext-md.md)。</xref:System.ComponentModel.LocalizableAttribute>"
  example:
  - "This section contains two code examples. The first code example demonstrates how to use the Text property to specify the value to display for a node to which the <xref:System.Web.UI.WebControls.TreeNodeBinding> object is applied. The second code example provides sample XML data for the first code example.  \n  \n The following example demonstrates how to use the Text property to specify the value to display for a node to which the <xref:System.Web.UI.WebControls.TreeNodeBinding> object is applied. For this example to work correctly, you must copy the sample XML data, provided after this code example, to a file named Booklist.xml.  \n  \n [!code-vb[TreeNodeBindingText#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_55_1.aspx)]\n [!code-cs[TreeNodeBindingText#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_55_1.aspx)]  \n  \n The following code example provides sample XML data for the preceding code example.  \n  \n```  \n<Books Text=\"Books List\">  \n    <Book Text=\"Book Title One\"  \n        Value=\"1\"   \n        Image=\"Bookimage1.jpg\"  \n        ImageToolTip=\"Book 1 Photo\"   \n        Nav=\"http://www.microsoft.com\"  \n        Tip=\"Book Title 1\">  \n        <Description Text=\"Book Description\">  \n        </Description>  \n        <Price Value=\"$1.99\">  \n        </Price>  \n        <Author Text=\"Author Name\"  \n            Value=\"LastName\"   \n            Image=\"Authorimage1.jpg\"   \n            Nav=\"http://www.microsoft.com\"  \n            Tip=\"Author Name\">  \n        </Author>  \n    </Book>  \n    <Book Text=\"Book Title Two\"  \n        Value=\"2\"   \n        Image=\"Bookimage2.jpg\"  \n        ImageToolTip=\"Book 2 Photo\"   \n        Nav=\"http://www.microsoft.com\"  \n        Tip=\"Click Me\">  \n        <Description Text=\"Book Description\">  \n        </Description>  \n        <Price Value=\"$2.99\">  \n        </Price>  \n        <Author Text=\"Author Name\"  \n            Value=\"LastName\"   \n            Image=\"Authorimage2.jpg\"   \n            Nav=\"http://www.microsoft.com\"  \n            Tip=\"Author Name\">  \n        </Author>  \n    </Book>  \n</Books>  \n```"
  syntax:
    content: public string Text { get; set; }
    return:
      type: System.String
      description: "顯示的節點的文字<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;></xref>物件套用。 預設為空字串 (&quot;&quot;)。"
  overload: System.Web.UI.WebControls.TreeNodeBinding.Text*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBinding.TextField
  id: TextField
  parent: System.Web.UI.WebControls.TreeNodeBinding
  langs:
  - csharp
  name: TextField
  nameWithType: TreeNodeBinding.TextField
  fullName: System.Web.UI.WebControls.TreeNodeBinding.TextField
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定要繫結至資料來源的欄位名稱<xref:System.Web.UI.WebControls.TreeNode.Text*>屬性<xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;></xref>物件<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;></xref>物件套用。</xref:System.Web.UI.WebControls.TreeNode.Text*>"
  remarks: "當<xref:System.Web.UI.WebControls.TreeView>控制項所繫結至資料來源，請使用 TextField 屬性指定欄位名稱，即可將繫結至<xref:System.Web.UI.WebControls.TreeNode.Text%2A>屬性<xref:System.Web.UI.WebControls.TreeNode>物件。</xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.Text%2A> </xref:System.Web.UI.WebControls.TreeView> 此繫結的關聯性會影響所有<xref:System.Web.UI.WebControls.TreeNode>物件的<xref:System.Web.UI.WebControls.TreeNodeBinding>物件套用。</xref:System.Web.UI.WebControls.TreeNodeBinding> </xref:System.Web.UI.WebControls.TreeNode> <xref:System.Web.UI.WebControls.TreeNode.Text%2A>屬性用來指定節點中顯示的文字。</xref:System.Web.UI.WebControls.TreeNode.Text%2A>      > [!NOTE] > 您可以選擇性地設定覆寫 TextField 屬性<xref:System.Web.UI.WebControls.TreeNode.Text%2A>直接每個節點的屬性。</xref:System.Web.UI.WebControls.TreeNode.Text%2A>       而不是使用 TextField 屬性要繫結<xref:System.Web.UI.WebControls.TreeNode.Text%2A>屬性<xref:System.Web.UI.WebControls.TreeNode>物件欄位中，您可以設定<xref:System.Web.UI.WebControls.TreeNode.Text%2A>屬性設定為固定值<xref:System.Web.UI.WebControls.TreeNodeBinding.Text%2A>屬性。</xref:System.Web.UI.WebControls.TreeNodeBinding.Text%2A> </xref:System.Web.UI.WebControls.TreeNode.Text%2A> </xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.Text%2A>      > [!NOTE] > 如果資料來源包含多個欄位，您必須先設定<xref:System.Web.UI.WebControls.TreeNodeBinding.Depth%2A>或<xref:System.Web.UI.WebControls.TreeNodeBinding.DataMember%2A>屬性或這兩個屬性，才能繫結至適當的欄位。</xref:System.Web.UI.WebControls.TreeNodeBinding.DataMember%2A> </xref:System.Web.UI.WebControls.TreeNodeBinding.Depth%2A>       這個屬性的值會儲存檢視狀態中。"
  example:
  - "This section contains two code examples. The first code example demonstrates how to use the TextField property to specify which attribute of an XML element to bind to the <xref:System.Web.UI.WebControls.TreeNode.Text%2A> property of a <xref:System.Web.UI.WebControls.TreeNode> object to which the <xref:System.Web.UI.WebControls.TreeNodeBinding> object is applied. The second code example provides sample XML data for the first code example.  \n  \n The following example demonstrates how to use the TextField property to specify which attribute of an XML element to bind to the <xref:System.Web.UI.WebControls.TreeNode.Text%2A> property of a <xref:System.Web.UI.WebControls.TreeNode> object to which the <xref:System.Web.UI.WebControls.TreeNodeBinding> object is applied. For this example to work correctly, you must copy the sample XML data, provided after this code example, to a file named Booklist.xml.  \n  \n [!code-vb[TreeNodeTextField#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1062_1.aspx)]\n [!code-cs[TreeNodeTextField#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1062_1.aspx)]  \n  \n The following code example provides sample XML data for the preceding code example.  \n  \n```  \n<Books Text=\"Books List\">  \n    <Book Text=\"Book Title One\"  \n        Value=\"1\"   \n        Image=\"Bookimage1.jpg\"  \n        ImageToolTip=\"Book 1 Photo\"   \n        Nav=\"http://www.microsoft.com\"  \n        Tip=\"Book Title 1\">  \n        <Description Text=\"Book Description\">  \n        </Description>  \n        <Price Value=\"$1.99\">  \n        </Price>  \n        <Author Text=\"Author Name\"  \n            Value=\"LastName\"   \n            Image=\"Authorimage1.jpg\"   \n            Nav=\"http://www.microsoft.com\"  \n            Tip=\"Author Name\">  \n        </Author>  \n    </Book>  \n    <Book Text=\"Book Title Two\"  \n        Value=\"2\"   \n        Image=\"Bookimage2.jpg\"  \n        ImageToolTip=\"Book 2 Photo\"   \n        Nav=\"http://www.microsoft.com\"  \n        Tip=\"Click Me\">  \n        <Description Text=\"Book Description\">  \n        </Description>  \n        <Price Value=\"$2.99\">  \n        </Price>  \n        <Author Text=\"Author Name\"  \n            Value=\"LastName\"   \n            Image=\"Authorimage2.jpg\"   \n            Nav=\"http://www.microsoft.com\"  \n            Tip=\"Author Name\">  \n        </Author>  \n    </Book>  \n</Books>  \n```"
  syntax:
    content: public string TextField { get; set; }
    return:
      type: System.String
      description: "繫結至欄位的名稱<xref:System.Web.UI.WebControls.TreeNode.Text*>屬性<xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;></xref>物件<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;></xref>物件套用。</xref:System.Web.UI.WebControls.TreeNode.Text*> 預設為空字串 (&quot;&quot;)，表示未設定 TextField 屬性。"
  overload: System.Web.UI.WebControls.TreeNodeBinding.TextField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBinding.ToolTip
  id: ToolTip
  parent: System.Web.UI.WebControls.TreeNodeBinding
  langs:
  - csharp
  name: ToolTip
  nameWithType: TreeNodeBinding.ToolTip
  fullName: System.Web.UI.WebControls.TreeNodeBinding.ToolTip
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定節點的工具提示文字的<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;></xref>物件套用。"
  remarks: "當<xref:System.Web.UI.WebControls.TreeView>控制項所繫結至資料來源，請使用工具提示屬性指定的值繫結至<xref:System.Web.UI.WebControls.TreeNode.ToolTip%2A>屬性<xref:System.Web.UI.WebControls.TreeNode>物件。</xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.ToolTip%2A> </xref:System.Web.UI.WebControls.TreeView> 此繫結的關聯性會影響所有<xref:System.Web.UI.WebControls.TreeNode>物件的<xref:System.Web.UI.WebControls.TreeNodeBinding>物件套用。</xref:System.Web.UI.WebControls.TreeNodeBinding> </xref:System.Web.UI.WebControls.TreeNode> 當滑鼠指標的節點上方時，會顯示工具提示文字。      > [!NOTE] > 您可以選擇性地設定覆寫的工具提示屬性<xref:System.Web.UI.WebControls.TreeNode.ToolTip%2A>直接每個節點的屬性。</xref:System.Web.UI.WebControls.TreeNode.ToolTip%2A>       而不是使用繫結至每個節點的相同的工具提示文字的工具提示屬性，您可以繫結<xref:System.Web.UI.WebControls.TreeNode.ToolTip%2A>屬性<xref:System.Web.UI.WebControls.TreeNode>藉由設定資料來源的欄位物件<xref:System.Web.UI.WebControls.TreeNodeBinding.ToolTipField%2A>屬性。</xref:System.Web.UI.WebControls.TreeNodeBinding.ToolTipField%2A> </xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.ToolTip%2A>       這個屬性的值會儲存檢視狀態中。       這個屬性的值設定時，可以自動儲存到資源檔使用設計工具。 如需詳細資訊，請參閱<xref:System.ComponentModel.LocalizableAttribute>和[全球化和當地語系化](~/add/includes/ajax-current-ext-md.md)。</xref:System.ComponentModel.LocalizableAttribute>"
  example:
  - "This section contains two code examples. The first code example demonstrates how to use the ToolTip property to specify the ToolTip text for a node to which the <xref:System.Web.UI.WebControls.TreeNodeBinding> object is applied. The second code example provides sample XML data for the first code example.  \n  \n The following example demonstrates how to use the ToolTip property to specify the ToolTip text for a node to which the <xref:System.Web.UI.WebControls.TreeNodeBinding> object is applied. For this example to work correctly, you must copy the sample XML data, provided after this code example, to a file named Booklist.xml.  \n  \n [!code-vb[TreeNodeBindingText#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_552_1.aspx)]\n [!code-cs[TreeNodeBindingText#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_552_1.aspx)]  \n  \n The following code example provides sample XML data for the preceding code example.  \n  \n```  \n<Books Text=\"Books List\">  \n    <Book Text=\"Book Title One\"  \n        Value=\"1\"   \n        Image=\"Bookimage1.jpg\"  \n        ImageToolTip=\"Book 1 Photo\"   \n        Nav=\"http://www.microsoft.com\"  \n        Tip=\"Book Title 1\">  \n        <Description Text=\"Book Description\">  \n        </Description>  \n        <Price Value=\"$1.99\">  \n        </Price>  \n        <Author Text=\"Author Name\"  \n            Value=\"LastName\"   \n            Image=\"Authorimage1.jpg\"   \n            Nav=\"http://www.microsoft.com\"  \n            Tip=\"Author Name\">  \n        </Author>  \n    </Book>  \n    <Book Text=\"Book Title Two\"  \n        Value=\"2\"   \n        Image=\"Bookimage2.jpg\"  \n        ImageToolTip=\"Book 2 Photo\"   \n        Nav=\"http://www.microsoft.com\"  \n        Tip=\"Click Me\">  \n        <Description Text=\"Book Description\">  \n        </Description>  \n        <Price Value=\"$2.99\">  \n        </Price>  \n        <Author Text=\"Author Name\"  \n            Value=\"LastName\"   \n            Image=\"Authorimage2.jpg\"   \n            Nav=\"http://www.microsoft.com\"  \n            Tip=\"Author Name\">  \n        </Author>  \n    </Book>  \n</Books>  \n```"
  syntax:
    content: public string ToolTip { get; set; }
    return:
      type: System.String
      description: "如需讓節點的工具提示文字<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;></xref>物件套用。 預設為空字串 (&quot;&quot;)，表示未設定 ToolTip 屬性。"
  overload: System.Web.UI.WebControls.TreeNodeBinding.ToolTip*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBinding.ToolTipField
  id: ToolTipField
  parent: System.Web.UI.WebControls.TreeNodeBinding
  langs:
  - csharp
  name: ToolTipField
  nameWithType: TreeNodeBinding.ToolTipField
  fullName: System.Web.UI.WebControls.TreeNodeBinding.ToolTipField
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定要繫結至資料來源的欄位名稱<xref:System.Web.UI.WebControls.TreeNode.ToolTip*>屬性<xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;></xref>物件<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;></xref>物件套用。</xref:System.Web.UI.WebControls.TreeNode.ToolTip*>"
  remarks: "當<xref:System.Web.UI.WebControls.TreeView>控制項所繫結至資料來源，請使用 ToolTipField 屬性指定欄位名稱，即可將繫結至<xref:System.Web.UI.WebControls.TreeNode.ToolTip%2A>屬性<xref:System.Web.UI.WebControls.TreeNode>物件。</xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.ToolTip%2A> </xref:System.Web.UI.WebControls.TreeView> 此繫結的關聯性會影響所有<xref:System.Web.UI.WebControls.TreeNode>物件的<xref:System.Web.UI.WebControls.TreeNodeBinding>物件套用。</xref:System.Web.UI.WebControls.TreeNodeBinding> </xref:System.Web.UI.WebControls.TreeNode> 當滑鼠指標的節點上方時，會顯示工具提示文字。      > [!NOTE] > 您可以選擇性地設定覆寫 ToolTipField 屬性<xref:System.Web.UI.WebControls.TreeNode.ToolTip%2A>直接每個節點的屬性。</xref:System.Web.UI.WebControls.TreeNode.ToolTip%2A>       而不是使用 ToolTipField 屬性要繫結<xref:System.Web.UI.WebControls.TreeNode.ToolTip%2A>屬性<xref:System.Web.UI.WebControls.TreeNode>物件欄位中，您可以設定<xref:System.Web.UI.WebControls.TreeNode.ToolTip%2A>屬性設定為固定值<xref:System.Web.UI.WebControls.TreeNodeBinding.ToolTip%2A>屬性。</xref:System.Web.UI.WebControls.TreeNodeBinding.ToolTip%2A> </xref:System.Web.UI.WebControls.TreeNode.ToolTip%2A> </xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.ToolTip%2A>      > [!NOTE] > 如果資料來源包含多個欄位，您必須先設定<xref:System.Web.UI.WebControls.TreeNodeBinding.Depth%2A>或<xref:System.Web.UI.WebControls.TreeNodeBinding.DataMember%2A>屬性或這兩個屬性，才能繫結至適當的欄位。</xref:System.Web.UI.WebControls.TreeNodeBinding.DataMember%2A> </xref:System.Web.UI.WebControls.TreeNodeBinding.Depth%2A>       這個屬性的值會儲存檢視狀態中。"
  example:
  - "This section contains two code examples. The first code example demonstrates how to use the ToolTipField property to specify which attribute of an XML element to bind to the <xref:System.Web.UI.WebControls.TreeNode.ToolTip%2A> property of a <xref:System.Web.UI.WebControls.TreeNode> object to which the <xref:System.Web.UI.WebControls.TreeNodeBinding> object is applied. The second code example provides sample XML data for the first code example.  \n  \n The following example demonstrates how to use the ToolTipField property to specify which attribute of an XML element to bind to the <xref:System.Web.UI.WebControls.TreeNode.ToolTip%2A> property of a <xref:System.Web.UI.WebControls.TreeNode> object to which the <xref:System.Web.UI.WebControls.TreeNodeBinding> object is applied. For this example to work correctly, you must copy the sample XML data, provided after this code example, to a file named Booklist.xml.  \n  \n [!code-vb[TreeNodeTextField#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_325_1.aspx)]\n [!code-cs[TreeNodeTextField#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_325_1.aspx)]  \n  \n The following code example provides sample XML data for the preceding code example.  \n  \n```  \n<Books Text=\"Books List\">  \n    <Book Text=\"Book Title One\"  \n        Value=\"1\"   \n        Image=\"Bookimage1.jpg\"  \n        ImageToolTip=\"Book 1 Photo\"   \n        Nav=\"http://www.microsoft.com\"  \n        Tip=\"Book Title 1\">  \n        <Description Text=\"Book Description\">  \n        </Description>  \n        <Price Value=\"$1.99\">  \n        </Price>  \n        <Author Text=\"Author Name\"  \n            Value=\"LastName\"   \n            Image=\"Authorimage1.jpg\"   \n            Nav=\"http://www.microsoft.com\"  \n            Tip=\"Author Name\">  \n        </Author>  \n    </Book>  \n    <Book Text=\"Book Title Two\"  \n        Value=\"2\"   \n        Image=\"Bookimage2.jpg\"  \n        ImageToolTip=\"Book 2 Photo\"   \n        Nav=\"http://www.microsoft.com\"  \n        Tip=\"Click Me\">  \n        <Description Text=\"Book Description\">  \n        </Description>  \n        <Price Value=\"$2.99\">  \n        </Price>  \n        <Author Text=\"Author Name\"  \n            Value=\"LastName\"   \n            Image=\"Authorimage2.jpg\"   \n            Nav=\"http://www.microsoft.com\"  \n            Tip=\"Author Name\">  \n        </Author>  \n    </Book>  \n</Books>  \n```"
  syntax:
    content: public string ToolTipField { get; set; }
    return:
      type: System.String
      description: "繫結至欄位的名稱<xref:System.Web.UI.WebControls.TreeNode.ToolTip*>屬性<xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;></xref>物件<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;></xref>物件套用。</xref:System.Web.UI.WebControls.TreeNode.ToolTip*> 預設為空字串 (&quot;&quot;)，表示未設定 ToolTipField 屬性。"
  overload: System.Web.UI.WebControls.TreeNodeBinding.ToolTipField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBinding.ToString
  id: ToString
  parent: System.Web.UI.WebControls.TreeNodeBinding
  langs:
  - csharp
  name: ToString()
  nameWithType: TreeNodeBinding.ToString()
  fullName: System.Web.UI.WebControls.TreeNodeBinding.ToString()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "傳回<xref:System.Web.UI.WebControls.TreeNodeBinding.DataMember*>屬性。</xref:System.Web.UI.WebControls.TreeNodeBinding.DataMember*>"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "傳回<> *> 屬性。如果<> *> 屬性是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>或空字串 (&quot;&quot;)， **（空白）**傳回。"
  overload: System.Web.UI.WebControls.TreeNodeBinding.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBinding.Value
  id: Value
  parent: System.Web.UI.WebControls.TreeNodeBinding
  langs:
  - csharp
  name: Value
  nameWithType: TreeNodeBinding.Value
  fullName: System.Web.UI.WebControls.TreeNodeBinding.Value
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定顯示的值，則不會顯示，但用來儲存相關節點的任何其他資料<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;></xref>會套用到物件，例如用來處理回傳事件資料。"
  remarks: "當<xref:System.Web.UI.WebControls.TreeView>控制項所繫結至資料來源，請使用 「 值 」 屬性指定繫結至值<xref:System.Web.UI.WebControls.TreeNode.Value%2A>屬性<xref:System.Web.UI.WebControls.TreeNode>物件。</xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.Value%2A> </xref:System.Web.UI.WebControls.TreeView> 此繫結的關聯性會影響所有<xref:System.Web.UI.WebControls.TreeNode>物件的<xref:System.Web.UI.WebControls.TreeNodeBinding>物件套用。</xref:System.Web.UI.WebControls.TreeNodeBinding> </xref:System.Web.UI.WebControls.TreeNode> <xref:System.Web.UI.WebControls.TreeNode.Value%2A>屬性用來補充<xref:System.Web.UI.WebControls.TreeNode.Text%2A>屬性所儲存的節點相關聯的任何其他資料<xref:System.Web.UI.WebControls.TreeNodeBinding>物件套用。</xref:System.Web.UI.WebControls.TreeNodeBinding> </xref:System.Web.UI.WebControls.TreeNode.Text%2A> </xref:System.Web.UI.WebControls.TreeNode.Value%2A> 此值不會顯示在控制項中，通常用來儲存資料處理回傳事件。      > [!NOTE] > 您可以選擇性地覆寫值 屬性設定<xref:System.Web.UI.WebControls.TreeNode.Value%2A>直接每個節點的屬性。</xref:System.Web.UI.WebControls.TreeNode.Value%2A>       除了使用 [值] 屬性將相同的值繫結至每個節點，您可以繫結<xref:System.Web.UI.WebControls.TreeNode.Value%2A>屬性<xref:System.Web.UI.WebControls.TreeNode>藉由設定資料來源的欄位物件<xref:System.Web.UI.WebControls.TreeNodeBinding.ValueField%2A>屬性。</xref:System.Web.UI.WebControls.TreeNodeBinding.ValueField%2A> </xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.Value%2A>       這個屬性的值會儲存檢視狀態中。       這個屬性的值設定時，可以自動儲存到資源檔使用設計工具。 如需詳細資訊，請參閱<xref:System.ComponentModel.LocalizableAttribute>和[全球化和當地語系化](~/add/includes/ajax-current-ext-md.md)。</xref:System.ComponentModel.LocalizableAttribute>"
  example:
  - "This section contains two code examples. The first code example demonstrates how to use the Value property to store supplemental data about a node to which the <xref:System.Web.UI.WebControls.TreeNodeBinding> object is applied. The second code example provides sample XML data for the first code example.  \n  \n The following example demonstrates how to use the Value property to store supplemental data about a node to which the <xref:System.Web.UI.WebControls.TreeNodeBinding> object is applied. For this example to work correctly, you must copy the sample XML data, provided after this code example, to a file named Booklist.xml.  \n  \n [!code-vb[TreeNodeBindingText#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1097_1.aspx)]\n [!code-cs[TreeNodeBindingText#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1097_1.aspx)]  \n  \n The following code example provides sample XML data for the preceding code example.  \n  \n```  \n<Books Text=\"Books List\">  \n    <Book Text=\"Book Title One\"  \n        Value=\"1\"   \n        Image=\"Bookimage1.jpg\"  \n        ImageToolTip=\"Book 1 Photo\"   \n        Nav=\"http://www.microsoft.com\"  \n        Tip=\"Book Title 1\">  \n        <Description Text=\"Book Description\">  \n        </Description>  \n        <Price Value=\"$1.99\">  \n        </Price>  \n        <Author Text=\"Author Name\"  \n            Value=\"LastName\"   \n            Image=\"Authorimage1.jpg\"   \n            Nav=\"http://www.microsoft.com\"  \n            Tip=\"Author Name\">  \n        </Author>  \n    </Book>  \n    <Book Text=\"Book Title Two\"  \n        Value=\"2\"   \n        Image=\"Bookimage2.jpg\"  \n        ImageToolTip=\"Book 2 Photo\"   \n        Nav=\"http://www.microsoft.com\"  \n        Tip=\"Click Me\">  \n        <Description Text=\"Book Description\">  \n        </Description>  \n        <Price Value=\"$2.99\">  \n        </Price>  \n        <Author Text=\"Author Name\"  \n            Value=\"LastName\"   \n            Image=\"Authorimage2.jpg\"   \n            Nav=\"http://www.microsoft.com\"  \n            Tip=\"Author Name\">  \n        </Author>  \n    </Book>  \n</Books>  \n```"
  syntax:
    content: public string Value { get; set; }
    return:
      type: System.String
      description: "目標節點的相關的補充資料<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;></xref>物件套用; 這項資料不會顯示。 預設為空字串 (&quot;&quot;)。"
  overload: System.Web.UI.WebControls.TreeNodeBinding.Value*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBinding.ValueField
  id: ValueField
  parent: System.Web.UI.WebControls.TreeNodeBinding
  langs:
  - csharp
  name: ValueField
  nameWithType: TreeNodeBinding.ValueField
  fullName: System.Web.UI.WebControls.TreeNodeBinding.ValueField
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定要繫結至資料來源的欄位名稱<xref:System.Web.UI.WebControls.TreeNode.Value*>屬性<xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;></xref>物件<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;></xref>物件套用。</xref:System.Web.UI.WebControls.TreeNode.Value*>"
  remarks: "當<xref:System.Web.UI.WebControls.TreeView>控制項所繫結至資料來源，請使用 ValueField 屬性指定欄位名稱，即可將繫結至<xref:System.Web.UI.WebControls.TreeNode.Value%2A>屬性<xref:System.Web.UI.WebControls.TreeNode>物件。</xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.Value%2A> </xref:System.Web.UI.WebControls.TreeView> 此繫結的關聯性會影響所有<xref:System.Web.UI.WebControls.TreeNode>物件的<xref:System.Web.UI.WebControls.TreeNodeBinding>物件套用。</xref:System.Web.UI.WebControls.TreeNodeBinding> </xref:System.Web.UI.WebControls.TreeNode> <xref:System.Web.UI.WebControls.TreeNode.Value%2A>屬性用來補充<xref:System.Web.UI.WebControls.TreeNode.Text%2A>屬性所儲存的節點相關聯的任何其他資料<xref:System.Web.UI.WebControls.TreeNodeBinding>物件套用。</xref:System.Web.UI.WebControls.TreeNodeBinding> </xref:System.Web.UI.WebControls.TreeNode.Text%2A> </xref:System.Web.UI.WebControls.TreeNode.Value%2A> 此值不會顯示在控制項中，通常用來儲存資料處理回傳事件。      > [!NOTE] > 您可以選擇性地設定覆寫 ValueField 屬性<xref:System.Web.UI.WebControls.TreeNode.Value%2A>直接每個節點的屬性。</xref:System.Web.UI.WebControls.TreeNode.Value%2A>       而不是使用 ValueField 屬性要繫結<xref:System.Web.UI.WebControls.TreeNode.Value%2A>屬性<xref:System.Web.UI.WebControls.TreeNode>物件欄位中，您可以設定<xref:System.Web.UI.WebControls.TreeNode.Value%2A>屬性設定為固定值<xref:System.Web.UI.WebControls.TreeNodeBinding.Value%2A>屬性。</xref:System.Web.UI.WebControls.TreeNodeBinding.Value%2A> </xref:System.Web.UI.WebControls.TreeNode.Value%2A> </xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.Value%2A>      > [!NOTE] > 如果資料來源包含多個欄位，您必須先設定<xref:System.Web.UI.WebControls.TreeNodeBinding.Depth%2A>或<xref:System.Web.UI.WebControls.TreeNodeBinding.DataMember%2A>屬性或這兩個屬性，才能繫結至適當的欄位。</xref:System.Web.UI.WebControls.TreeNodeBinding.DataMember%2A> </xref:System.Web.UI.WebControls.TreeNodeBinding.Depth%2A>       這個屬性的值會儲存檢視狀態中。"
  example:
  - "This section contains two code examples. The first code example demonstrates how to use the ValueField property to specify which attribute of an XML element to bind to the <xref:System.Web.UI.WebControls.TreeNode.Value%2A> property of a <xref:System.Web.UI.WebControls.TreeNode> object to which the <xref:System.Web.UI.WebControls.TreeNodeBinding> object is applied. The second code example provides sample XML data for the first code example.  \n  \n The following example demonstrates how to use the ValueField property to specify which attribute of an XML element to bind to the <xref:System.Web.UI.WebControls.TreeNode.Value%2A> property of a <xref:System.Web.UI.WebControls.TreeNode> object to which the <xref:System.Web.UI.WebControls.TreeNodeBinding> object is applied. For this example to work correctly, you must copy the sample XML data, provided after this code example, to a file named Booklist.xml.  \n  \n [!code-vb[TreeNodeTextField#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1111_1.aspx)]\n [!code-cs[TreeNodeTextField#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1111_1.aspx)]  \n  \n The following code example provides sample XML data for the preceding code example.  \n  \n```  \n<Books Text=\"Books List\">  \n    <Book Text=\"Book Title One\"  \n        Value=\"1\"   \n        Image=\"Bookimage1.jpg\"  \n        ImageToolTip=\"Book 1 Photo\"   \n        Nav=\"http://www.microsoft.com\"  \n        Tip=\"Book Title 1\">  \n        <Description Text=\"Book Description\">  \n        </Description>  \n        <Price Value=\"$1.99\">  \n        </Price>  \n        <Author Text=\"Author Name\"  \n            Value=\"LastName\"   \n            Image=\"Authorimage1.jpg\"   \n            Nav=\"http://www.microsoft.com\"  \n            Tip=\"Author Name\">  \n        </Author>  \n    </Book>  \n    <Book Text=\"Book Title Two\"  \n        Value=\"2\"   \n        Image=\"Bookimage2.jpg\"  \n        ImageToolTip=\"Book 2 Photo\"   \n        Nav=\"http://www.microsoft.com\"  \n        Tip=\"Click Me\">  \n        <Description Text=\"Book Description\">  \n        </Description>  \n        <Price Value=\"$2.99\">  \n        </Price>  \n        <Author Text=\"Author Name\"  \n            Value=\"LastName\"   \n            Image=\"Authorimage2.jpg\"   \n            Nav=\"http://www.microsoft.com\"  \n            Tip=\"Author Name\">  \n        </Author>  \n    </Book>  \n</Books>  \n```"
  syntax:
    content: public string ValueField { get; set; }
    return:
      type: System.String
      description: "繫結至欄位的名稱<xref:System.Web.UI.WebControls.TreeNode.Value*>屬性<xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;></xref>物件<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;></xref>物件套用。</xref:System.Web.UI.WebControls.TreeNode.Value*> 預設為空字串 (&quot;&quot;)，表示未設定 ValueField 屬性。"
  overload: System.Web.UI.WebControls.TreeNodeBinding.ValueField*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.UI.WebControls.TreeNodeBinding.#ctor
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: TreeNodeBinding()
  nameWithType: TreeNodeBinding.TreeNodeBinding()
  fullName: System.Web.UI.WebControls.TreeNodeBinding.TreeNodeBinding()
- uid: System.Web.UI.WebControls.TreeNodeBinding.DataMember
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: DataMember
  nameWithType: TreeNodeBinding.DataMember
  fullName: System.Web.UI.WebControls.TreeNodeBinding.DataMember
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.TreeNodeBinding.Depth
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: Depth
  nameWithType: TreeNodeBinding.Depth
  fullName: System.Web.UI.WebControls.TreeNodeBinding.Depth
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.TreeNodeBinding.FormatString
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: FormatString
  nameWithType: TreeNodeBinding.FormatString
  fullName: System.Web.UI.WebControls.TreeNodeBinding.FormatString
- uid: System.Web.UI.WebControls.TreeNodeBinding.ImageToolTip
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: ImageToolTip
  nameWithType: TreeNodeBinding.ImageToolTip
  fullName: System.Web.UI.WebControls.TreeNodeBinding.ImageToolTip
- uid: System.Web.UI.WebControls.TreeNodeBinding.ImageToolTipField
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: ImageToolTipField
  nameWithType: TreeNodeBinding.ImageToolTipField
  fullName: System.Web.UI.WebControls.TreeNodeBinding.ImageToolTipField
- uid: System.Web.UI.WebControls.TreeNodeBinding.ImageUrl
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: ImageUrl
  nameWithType: TreeNodeBinding.ImageUrl
  fullName: System.Web.UI.WebControls.TreeNodeBinding.ImageUrl
- uid: System.Web.UI.WebControls.TreeNodeBinding.ImageUrlField
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: ImageUrlField
  nameWithType: TreeNodeBinding.ImageUrlField
  fullName: System.Web.UI.WebControls.TreeNodeBinding.ImageUrlField
- uid: System.Web.UI.WebControls.TreeNodeBinding.NavigateUrl
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: NavigateUrl
  nameWithType: TreeNodeBinding.NavigateUrl
  fullName: System.Web.UI.WebControls.TreeNodeBinding.NavigateUrl
- uid: System.Web.UI.WebControls.TreeNodeBinding.NavigateUrlField
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: NavigateUrlField
  nameWithType: TreeNodeBinding.NavigateUrlField
  fullName: System.Web.UI.WebControls.TreeNodeBinding.NavigateUrlField
- uid: System.Web.UI.WebControls.TreeNodeBinding.PopulateOnDemand
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: PopulateOnDemand
  nameWithType: TreeNodeBinding.PopulateOnDemand
  fullName: System.Web.UI.WebControls.TreeNodeBinding.PopulateOnDemand
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.TreeNodeBinding.SelectAction
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: SelectAction
  nameWithType: TreeNodeBinding.SelectAction
  fullName: System.Web.UI.WebControls.TreeNodeBinding.SelectAction
- uid: System.Web.UI.WebControls.TreeNodeSelectAction
  parent: System.Web.UI.WebControls
  isExternal: false
  name: TreeNodeSelectAction
  nameWithType: TreeNodeSelectAction
  fullName: System.Web.UI.WebControls.TreeNodeSelectAction
- uid: System.Web.UI.WebControls.TreeNodeBinding.ShowCheckBox
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: ShowCheckBox
  nameWithType: TreeNodeBinding.ShowCheckBox
  fullName: System.Web.UI.WebControls.TreeNodeBinding.ShowCheckBox
- uid: System.Nullable{System.Boolean}
  parent: System
  isExternal: true
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.Boolean>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: Boolean
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.UI.WebControls.TreeNodeBinding.System#ICloneable#Clone
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: System.ICloneable.Clone()
  nameWithType: TreeNodeBinding.System.ICloneable.Clone()
  fullName: System.Web.UI.WebControls.TreeNodeBinding.System.ICloneable.Clone()
- uid: System.Web.UI.WebControls.TreeNodeBinding.System#Web#UI#IDataSourceViewSchemaAccessor#DataSourceViewSchema
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: System.Web.UI.IDataSourceViewSchemaAccessor.DataSourceViewSchema
  nameWithType: TreeNodeBinding.System.Web.UI.IDataSourceViewSchemaAccessor.DataSourceViewSchema
  fullName: System.Web.UI.WebControls.TreeNodeBinding.System.Web.UI.IDataSourceViewSchemaAccessor.DataSourceViewSchema
- uid: System.Web.UI.WebControls.TreeNodeBinding.System#Web#UI#IStateManager#IsTrackingViewState
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: TreeNodeBinding.System.Web.UI.IStateManager.IsTrackingViewState
  fullName: System.Web.UI.WebControls.TreeNodeBinding.System.Web.UI.IStateManager.IsTrackingViewState
- uid: System.Web.UI.WebControls.TreeNodeBinding.System#Web#UI#IStateManager#LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: System.Web.UI.IStateManager.LoadViewState(Object)
  nameWithType: TreeNodeBinding.System.Web.UI.IStateManager.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.TreeNodeBinding.System.Web.UI.IStateManager.LoadViewState(Object)
- uid: System.Web.UI.WebControls.TreeNodeBinding.System#Web#UI#IStateManager#SaveViewState
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: System.Web.UI.IStateManager.SaveViewState()
  nameWithType: TreeNodeBinding.System.Web.UI.IStateManager.SaveViewState()
  fullName: System.Web.UI.WebControls.TreeNodeBinding.System.Web.UI.IStateManager.SaveViewState()
- uid: System.Web.UI.WebControls.TreeNodeBinding.System#Web#UI#IStateManager#TrackViewState
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: System.Web.UI.IStateManager.TrackViewState()
  nameWithType: TreeNodeBinding.System.Web.UI.IStateManager.TrackViewState()
  fullName: System.Web.UI.WebControls.TreeNodeBinding.System.Web.UI.IStateManager.TrackViewState()
- uid: System.Web.UI.WebControls.TreeNodeBinding.Target
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: Target
  nameWithType: TreeNodeBinding.Target
  fullName: System.Web.UI.WebControls.TreeNodeBinding.Target
- uid: System.Web.UI.WebControls.TreeNodeBinding.TargetField
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: TargetField
  nameWithType: TreeNodeBinding.TargetField
  fullName: System.Web.UI.WebControls.TreeNodeBinding.TargetField
- uid: System.Web.UI.WebControls.TreeNodeBinding.Text
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: Text
  nameWithType: TreeNodeBinding.Text
  fullName: System.Web.UI.WebControls.TreeNodeBinding.Text
- uid: System.Web.UI.WebControls.TreeNodeBinding.TextField
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: TextField
  nameWithType: TreeNodeBinding.TextField
  fullName: System.Web.UI.WebControls.TreeNodeBinding.TextField
- uid: System.Web.UI.WebControls.TreeNodeBinding.ToolTip
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: ToolTip
  nameWithType: TreeNodeBinding.ToolTip
  fullName: System.Web.UI.WebControls.TreeNodeBinding.ToolTip
- uid: System.Web.UI.WebControls.TreeNodeBinding.ToolTipField
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: ToolTipField
  nameWithType: TreeNodeBinding.ToolTipField
  fullName: System.Web.UI.WebControls.TreeNodeBinding.ToolTipField
- uid: System.Web.UI.WebControls.TreeNodeBinding.ToString
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: ToString()
  nameWithType: TreeNodeBinding.ToString()
  fullName: System.Web.UI.WebControls.TreeNodeBinding.ToString()
- uid: System.Web.UI.WebControls.TreeNodeBinding.Value
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: Value
  nameWithType: TreeNodeBinding.Value
  fullName: System.Web.UI.WebControls.TreeNodeBinding.Value
- uid: System.Web.UI.WebControls.TreeNodeBinding.ValueField
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: ValueField
  nameWithType: TreeNodeBinding.ValueField
  fullName: System.Web.UI.WebControls.TreeNodeBinding.ValueField
- uid: System.Web.UI.WebControls.TreeNodeBinding.#ctor*
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: TreeNodeBinding
  nameWithType: TreeNodeBinding.TreeNodeBinding
- uid: System.Web.UI.WebControls.TreeNodeBinding.DataMember*
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: DataMember
  nameWithType: TreeNodeBinding.DataMember
- uid: System.Web.UI.WebControls.TreeNodeBinding.Depth*
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: Depth
  nameWithType: TreeNodeBinding.Depth
- uid: System.Web.UI.WebControls.TreeNodeBinding.FormatString*
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: FormatString
  nameWithType: TreeNodeBinding.FormatString
- uid: System.Web.UI.WebControls.TreeNodeBinding.ImageToolTip*
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: ImageToolTip
  nameWithType: TreeNodeBinding.ImageToolTip
- uid: System.Web.UI.WebControls.TreeNodeBinding.ImageToolTipField*
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: ImageToolTipField
  nameWithType: TreeNodeBinding.ImageToolTipField
- uid: System.Web.UI.WebControls.TreeNodeBinding.ImageUrl*
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: ImageUrl
  nameWithType: TreeNodeBinding.ImageUrl
- uid: System.Web.UI.WebControls.TreeNodeBinding.ImageUrlField*
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: ImageUrlField
  nameWithType: TreeNodeBinding.ImageUrlField
- uid: System.Web.UI.WebControls.TreeNodeBinding.NavigateUrl*
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: NavigateUrl
  nameWithType: TreeNodeBinding.NavigateUrl
- uid: System.Web.UI.WebControls.TreeNodeBinding.NavigateUrlField*
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: NavigateUrlField
  nameWithType: TreeNodeBinding.NavigateUrlField
- uid: System.Web.UI.WebControls.TreeNodeBinding.PopulateOnDemand*
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: PopulateOnDemand
  nameWithType: TreeNodeBinding.PopulateOnDemand
- uid: System.Web.UI.WebControls.TreeNodeBinding.SelectAction*
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: SelectAction
  nameWithType: TreeNodeBinding.SelectAction
- uid: System.Web.UI.WebControls.TreeNodeBinding.ShowCheckBox*
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: ShowCheckBox
  nameWithType: TreeNodeBinding.ShowCheckBox
- uid: System.Web.UI.WebControls.TreeNodeBinding.System#ICloneable#Clone*
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: System.ICloneable.Clone
  nameWithType: TreeNodeBinding.System.ICloneable.Clone
- uid: System.Web.UI.WebControls.TreeNodeBinding.System#Web#UI#IDataSourceViewSchemaAccessor#DataSourceViewSchema*
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: System.Web.UI.IDataSourceViewSchemaAccessor.DataSourceViewSchema
  nameWithType: TreeNodeBinding.System.Web.UI.IDataSourceViewSchemaAccessor.DataSourceViewSchema
- uid: System.Web.UI.WebControls.TreeNodeBinding.System#Web#UI#IStateManager#IsTrackingViewState*
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: TreeNodeBinding.System.Web.UI.IStateManager.IsTrackingViewState
- uid: System.Web.UI.WebControls.TreeNodeBinding.System#Web#UI#IStateManager#LoadViewState*
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: System.Web.UI.IStateManager.LoadViewState
  nameWithType: TreeNodeBinding.System.Web.UI.IStateManager.LoadViewState
- uid: System.Web.UI.WebControls.TreeNodeBinding.System#Web#UI#IStateManager#SaveViewState*
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: System.Web.UI.IStateManager.SaveViewState
  nameWithType: TreeNodeBinding.System.Web.UI.IStateManager.SaveViewState
- uid: System.Web.UI.WebControls.TreeNodeBinding.System#Web#UI#IStateManager#TrackViewState*
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: System.Web.UI.IStateManager.TrackViewState
  nameWithType: TreeNodeBinding.System.Web.UI.IStateManager.TrackViewState
- uid: System.Web.UI.WebControls.TreeNodeBinding.Target*
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: Target
  nameWithType: TreeNodeBinding.Target
- uid: System.Web.UI.WebControls.TreeNodeBinding.TargetField*
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: TargetField
  nameWithType: TreeNodeBinding.TargetField
- uid: System.Web.UI.WebControls.TreeNodeBinding.Text*
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: Text
  nameWithType: TreeNodeBinding.Text
- uid: System.Web.UI.WebControls.TreeNodeBinding.TextField*
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: TextField
  nameWithType: TreeNodeBinding.TextField
- uid: System.Web.UI.WebControls.TreeNodeBinding.ToolTip*
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: ToolTip
  nameWithType: TreeNodeBinding.ToolTip
- uid: System.Web.UI.WebControls.TreeNodeBinding.ToolTipField*
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: ToolTipField
  nameWithType: TreeNodeBinding.ToolTipField
- uid: System.Web.UI.WebControls.TreeNodeBinding.ToString*
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: ToString
  nameWithType: TreeNodeBinding.ToString
- uid: System.Web.UI.WebControls.TreeNodeBinding.Value*
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: Value
  nameWithType: TreeNodeBinding.Value
- uid: System.Web.UI.WebControls.TreeNodeBinding.ValueField*
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: ValueField
  nameWithType: TreeNodeBinding.ValueField
