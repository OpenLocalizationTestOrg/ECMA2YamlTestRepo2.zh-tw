### YamlMime:ManagedReference
items:
- uid: System.Web.UI.DataVisualization.Charting.ChartSerializer
  id: ChartSerializer
  children:
  - System.Web.UI.DataVisualization.Charting.ChartSerializer.Content
  - System.Web.UI.DataVisualization.Charting.ChartSerializer.Format
  - System.Web.UI.DataVisualization.Charting.ChartSerializer.GetContentString(System.Web.UI.DataVisualization.Charting.SerializationContents,System.Boolean)
  - System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading
  - System.Web.UI.DataVisualization.Charting.ChartSerializer.IsTemplateMode
  - System.Web.UI.DataVisualization.Charting.ChartSerializer.IsUnknownAttributeIgnored
  - System.Web.UI.DataVisualization.Charting.ChartSerializer.Load(System.IO.Stream)
  - System.Web.UI.DataVisualization.Charting.ChartSerializer.Load(System.IO.TextReader)
  - System.Web.UI.DataVisualization.Charting.ChartSerializer.Load(System.String)
  - System.Web.UI.DataVisualization.Charting.ChartSerializer.Load(System.Xml.XmlReader)
  - System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent
  - System.Web.UI.DataVisualization.Charting.ChartSerializer.Reset
  - System.Web.UI.DataVisualization.Charting.ChartSerializer.Save(System.IO.Stream)
  - System.Web.UI.DataVisualization.Charting.ChartSerializer.Save(System.IO.TextWriter)
  - System.Web.UI.DataVisualization.Charting.ChartSerializer.Save(System.String)
  - System.Web.UI.DataVisualization.Charting.ChartSerializer.Save(System.Xml.XmlWriter)
  - System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent
  langs:
  - csharp
  name: ChartSerializer
  nameWithType: ChartSerializer
  fullName: System.Web.UI.DataVisualization.Charting.ChartSerializer
  type: Class
  summary: "可讓序列化<xref href=&quot;System.Web.UI.DataVisualization.Charting.Chart&quot;></xref>控制項。"
  remarks: "這個類別會公開為<xref:System.Web.UI.DataVisualization.Charting.Chart.Serializer%2A>屬性的根<xref:System.Web.UI.DataVisualization.Charting.Chart>類別。</xref:System.Web.UI.DataVisualization.Charting.Chart> </xref:System.Web.UI.DataVisualization.Charting.Chart.Serializer%2A>       序列化儲存圖表的狀態，而且也提供序列化的資料載入至圖表的選項。 可以保存所有圖表屬性，包括圖表的資料。 此外，可以重設所有的圖表內容標示為進行序列化。       管理使用者定義的檢視狀態時，可以選擇性地使用這個類別。 其中一個其`Load`方法可以用來載入檢視狀態，以及其中一個`Save`設定檢視狀態時，就可以使用方法。       XML 或二進位格式可用來序列化存放區資料。 依預設，會使用 XML，但是您可以變更與格式<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Format%2A>屬性。</xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Format%2A>       圖表屬性會儲存並載入使用`Save`和`Load`方法，分別。 請注意，只有具有非預設值的屬性就會儲存。 資料可以儲存和/或使用檔案、 載入資料流<xref:System.IO.TextWriter>， <xref:System.IO.TextReader>，<xref:System.Xml.XmlWriter>和<xref:System.Xml.XmlReader>物件。</xref:System.Xml.XmlReader> </xref:System.Xml.XmlWriter> </xref:System.IO.TextReader> </xref:System.IO.TextWriter> 當儲存及/或載入資料，使用物件衍生自<xref:System.IO.TextReader>， <xref:System.IO.TextWriter>，<xref:System.Xml.XmlReader>或<xref:System.Xml.XmlWriter>類別，資料的格式必須是 XML。</xref:System.Xml.XmlWriter> </xref:System.Xml.XmlReader> </xref:System.IO.TextWriter> </xref:System.IO.TextReader>       下列清單說明三種技術，從基本進階，用來定義可序列化的資料。 請注意，它也可以定義非可序列化的資料。 這項技術是下一個段落中所述。      -序列化<xref:System.Web.UI.DataVisualization.Charting.Chart>使用`Save`和`Load`方法，而不指定任何可序列化的屬性。</xref:System.Web.UI.DataVisualization.Charting.Chart> 將序列化具有非預設值，其中包括圖表的資料，所有的圖表內容。      -序列化所指定的圖表內容<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>屬性。</xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>屬性群組的圖表內容序列化至類別，例如資料、 外觀，以及其他等等。</xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> 請注意，名稱<xref:System.Web.UI.DataVisualization.Charting.ChartArea>和<xref:System.Web.UI.DataVisualization.Charting.Series>物件都會自動序列化; 序列化的資料會套用到現有的圖表區域，數列時載入。</xref:System.Web.UI.DataVisualization.Charting.Series> </xref:System.Web.UI.DataVisualization.Charting.ChartArea>      > [!IMPORTANT] ><xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>屬性在內部實作<xref:System.Web.UI.DataVisualization.Charting.Chart>控制項作為<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A>屬性-圖表屬性所指定的序列化<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A>屬性。</xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> </xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> </xref:System.Web.UI.DataVisualization.Charting.Chart> </xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> 這是可序列化的所有圖表屬性的逗號分隔清單。 這個屬性設為明確的值之後，它負責的開發人員指定要儲存的所有屬性。 也就是說，不同於<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>屬性，數列的圖表區域名稱不會自動保存。</xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>和<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A>屬性也可以用於搭配使用。</xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> </xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> 不過，請確定<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A>是與其自身串連，正在設定，否則圖表屬性時所指定<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>屬性將會覆寫。</xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> </xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A>       若要禁止特定屬性進行序列化，使用<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A>屬性。</xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> 當一個屬性會設定為可序列化，不可序列化的這是常見萬用字元使用時，<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A>屬性的優先順序。</xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> 不過，優先順序也取決於多少萬用字元時，使用了指定的屬性。       根據預設，可序列化的屬性會設為預設值重設，在載入之前。 此行為可以使用變更<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading%2A>屬性。</xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading%2A> <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Reset%2A>方法也可用來明確圖表屬性重設為其預設值。</xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Reset%2A>"
  syntax:
    content: >-
      [System.ComponentModel.DefaultProperty("Format")]

      public class ChartSerializer
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.DataVisualization.Charting.ChartSerializer.Content
  id: Content
  parent: System.Web.UI.DataVisualization.Charting.ChartSerializer
  langs:
  - csharp
  name: Content
  nameWithType: ChartSerializer.Content
  fullName: System.Web.UI.DataVisualization.Charting.ChartSerializer.Content
  type: Property
  assemblies:
  - System.Web.DataVisualization
  namespace: System.Web.UI.DataVisualization.Charting
  summary: "取得或設定要序列化的圖表內容類型。"
  remarks: "根據預設，所有的圖表屬性將序列化時的任何`Save`和`Load`呼叫的方法。 若要提供更充分掌控序列化項目的，使用內容屬性。 請注意，<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A>和<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A>屬性也可以搭配內容的屬性。</xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> </xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A>       **重要**內容屬性會決定圖表特性，例如 「 外觀 」，要序列化的型別，實際上為內部實作<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A>屬性。</xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> 這表示，將內容屬性，然後設定<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A>屬性會導致內容屬性值所覆寫時，除非<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A>串連。</xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> </xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> 請參閱下面這個程序的範例，範例程式碼。       如果您設定內容屬性中，所有<xref:System.Web.UI.DataVisualization.Charting.ChartArea>和<xref:System.Web.UI.DataVisualization.Charting.Series>將自動序列化的物件名稱，這表示，與圖表區域和系列的序列化的資料將會套用到現有的物件時載入。</xref:System.Web.UI.DataVisualization.Charting.Series> </xref:System.Web.UI.DataVisualization.Charting.ChartArea>       設定此屬性會影響所有的負載，儲存及重設作業。"
  syntax:
    content: public System.Web.UI.DataVisualization.Charting.SerializationContents Content { get; set; }
    return:
      type: System.Web.UI.DataVisualization.Charting.SerializationContents
      description: "A <xref href=&quot;System.Web.UI.DataVisualization.Charting.SerializationContents&quot;> </xref>列舉值，表示將在載入期間，序列化的圖表內容儲存或重設作業。 根據預設，所有的非預設圖表屬性，包括資料會保存。"
  overload: System.Web.UI.DataVisualization.Charting.ChartSerializer.Content*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataVisualization.Charting.ChartSerializer.Format
  id: Format
  parent: System.Web.UI.DataVisualization.Charting.ChartSerializer
  langs:
  - csharp
  name: Format
  nameWithType: ChartSerializer.Format
  fullName: System.Web.UI.DataVisualization.Charting.ChartSerializer.Format
  type: Property
  assemblies:
  - System.Web.DataVisualization
  namespace: System.Web.UI.DataVisualization.Charting
  summary: "取得或設定圖表序列化時使用的格式。"
  remarks: "以 XML 或二進位格式序列化資料。 二進位格式壓縮，並採用比 XML 儲存體較少。 XML，不過，是人類看得懂的文字格式。       當您儲存或載入序列化的資料時，格式必須是 XML。"
  syntax:
    content: public System.Web.UI.DataVisualization.Charting.SerializationFormat Format { get; set; }
    return:
      type: System.Web.UI.DataVisualization.Charting.SerializationFormat
      description: "A <xref href=&quot;System.Web.UI.DataVisualization.Charting.SerializationFormat&quot;> </xref>列舉值，表示已序列化資料的格式。 預設值是 XML。"
  overload: System.Web.UI.DataVisualization.Charting.ChartSerializer.Format*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataVisualization.Charting.ChartSerializer.GetContentString(System.Web.UI.DataVisualization.Charting.SerializationContents,System.Boolean)
  id: GetContentString(System.Web.UI.DataVisualization.Charting.SerializationContents,System.Boolean)
  parent: System.Web.UI.DataVisualization.Charting.ChartSerializer
  langs:
  - csharp
  name: GetContentString(SerializationContents,Boolean)
  nameWithType: ChartSerializer.GetContentString(SerializationContents,Boolean)
  fullName: System.Web.UI.DataVisualization.Charting.ChartSerializer.GetContentString(SerializationContents,Boolean)
  type: Method
  assemblies:
  - System.Web.DataVisualization
  namespace: System.Web.UI.DataVisualization.Charting
  summary: "傳回可序列化或非可序列化的類別及/或屬性名稱，根據特定的旗標值。"
  syntax:
    content: protected string GetContentString (System.Web.UI.DataVisualization.Charting.SerializationContents content, bool serializable);
    parameters:
    - id: content
      type: System.Web.UI.DataVisualization.Charting.SerializationContents
      description: "可序列化的內容。"
    - id: serializable
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True &quot; name=&quot;True &quot; href=&quot;&quot;></xref>若要取得的可序列化的字串。<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>取得非 serializaable 字串。"
    return:
      type: System.String
      description: "A <xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;> </xref>值，表示可序列化或非可序列化的類別和/或屬性名稱。"
  overload: System.Web.UI.DataVisualization.Charting.ChartSerializer.GetContentString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading
  id: IsResetWhenLoading
  parent: System.Web.UI.DataVisualization.Charting.ChartSerializer
  langs:
  - csharp
  name: IsResetWhenLoading
  nameWithType: ChartSerializer.IsResetWhenLoading
  fullName: System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading
  type: Property
  assemblies:
  - System.Web.DataVisualization
  namespace: System.Web.UI.DataVisualization.Charting
  summary: "取得或設定旗標，表示物件屬性會重設為預設值之前載入。"
  syntax:
    content: public bool IsResetWhenLoading { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>如果物件屬性重設為預設值，才能載入。否則， <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataVisualization.Charting.ChartSerializer.IsTemplateMode
  id: IsTemplateMode
  parent: System.Web.UI.DataVisualization.Charting.ChartSerializer
  langs:
  - csharp
  name: IsTemplateMode
  nameWithType: ChartSerializer.IsTemplateMode
  fullName: System.Web.UI.DataVisualization.Charting.ChartSerializer.IsTemplateMode
  type: Property
  assemblies:
  - System.Web.DataVisualization
  namespace: System.Web.UI.DataVisualization.Charting
  summary: "取得或設定旗標，指出是否此圖表序列化程式是否以範本建立模式運作。"
  syntax:
    content: public bool IsTemplateMode { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>如果此圖表序列化程式是以範本建立模式。否則， <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.DataVisualization.Charting.ChartSerializer.IsTemplateMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataVisualization.Charting.ChartSerializer.IsUnknownAttributeIgnored
  id: IsUnknownAttributeIgnored
  parent: System.Web.UI.DataVisualization.Charting.ChartSerializer
  langs:
  - csharp
  name: IsUnknownAttributeIgnored
  nameWithType: ChartSerializer.IsUnknownAttributeIgnored
  fullName: System.Web.UI.DataVisualization.Charting.ChartSerializer.IsUnknownAttributeIgnored
  type: Property
  assemblies:
  - System.Web.DataVisualization
  namespace: System.Web.UI.DataVisualization.Charting
  summary: "取得或設定旗標，指出是否忽略未知的 XML 屬性和項目而不擲回例外狀況。"
  syntax:
    content: public bool IsUnknownAttributeIgnored { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>如果沒有發生例外狀況; 忽略未知的 XML 屬性和元素否則， <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.DataVisualization.Charting.ChartSerializer.IsUnknownAttributeIgnored*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataVisualization.Charting.ChartSerializer.Load(System.IO.Stream)
  id: Load(System.IO.Stream)
  parent: System.Web.UI.DataVisualization.Charting.ChartSerializer
  langs:
  - csharp
  name: Load(Stream)
  nameWithType: ChartSerializer.Load(Stream)
  fullName: System.Web.UI.DataVisualization.Charting.ChartSerializer.Load(Stream)
  type: Method
  assemblies:
  - System.Web.DataVisualization
  namespace: System.Web.UI.DataVisualization.Charting
  summary: "載入序列化資料中衍生自此<xref:System.IO.Stream>類別</xref:System.IO.Stream>的物件，將控制項"
  remarks: "呼叫此方法以載入序列化的資料<xref:System.Web.UI.DataVisualization.Charting.Chart>控制項。</xref:System.Web.UI.DataVisualization.Charting.Chart>       載入作業發生時，可序列化屬性，根據預設，第一次重設為其預設值之前，它們會設定為保存的值，如果儲存。 若要變更此行為，請使用<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading%2A>屬性。</xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading%2A>       根據預設，將會載入序列化的圖表的所有屬性。 若要載入特定的序列化的屬性，設定<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>，<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A>或<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A>載入資料之前的內容。</xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> </xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> </xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>       請注意，當資料會儲存使用`Save`實際上會序列化方法，只有在具有非預設值的屬性。"
  syntax:
    content: public void Load (System.IO.Stream stream);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "物件衍生自<xref:System.IO.Stream>類別，例如<xref:System.IO.MemoryStream>物件。</xref:System.IO.MemoryStream> </xref:System.IO.Stream>"
  overload: System.Web.UI.DataVisualization.Charting.ChartSerializer.Load*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataVisualization.Charting.ChartSerializer.Load(System.IO.TextReader)
  id: Load(System.IO.TextReader)
  parent: System.Web.UI.DataVisualization.Charting.ChartSerializer
  langs:
  - csharp
  name: Load(TextReader)
  nameWithType: ChartSerializer.Load(TextReader)
  fullName: System.Web.UI.DataVisualization.Charting.ChartSerializer.Load(TextReader)
  type: Method
  assemblies:
  - System.Web.DataVisualization
  namespace: System.Web.UI.DataVisualization.Charting
  summary: "載入序列化資料在控制項從讀取器物件衍生自<xref:System.IO.TextReader>類別。</xref:System.IO.TextReader>"
  remarks: "呼叫此方法以載入序列化的資料<xref:System.Web.UI.DataVisualization.Charting.Chart>控制項。</xref:System.Web.UI.DataVisualization.Charting.Chart>       載入作業發生時，根據預設可序列化的屬性會先重設為其預設值之前它們會設定為保存的值，如果儲存。 若要變更此行為，請使用<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading%2A>屬性。</xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading%2A>       根據預設，將會載入序列化的圖表的所有屬性。 藉由設定<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>，<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A>或<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A>可以載入內容，一組特定的屬性。</xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> </xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> </xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>       如果您使用這個定義，請注意，使用的格式，這是由<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Format%2A>屬性，必須是 XML。</xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Format%2A>       如果<xref:System.Web.UI.DataVisualization.Charting.Chart.ViewStateData%2A>屬性<xref:System.Web.UI.DataVisualization.Charting.Chart>控制項用來保存狀態，這個方法可以用來載入序列化由用戶端張貼的資料送回<xref:System.Web.UI.DataVisualization.Charting.Chart>控制項。</xref:System.Web.UI.DataVisualization.Charting.Chart> </xref:System.Web.UI.DataVisualization.Charting.Chart> </xref:System.Web.UI.DataVisualization.Charting.Chart.ViewStateData%2A>"
  syntax:
    content: public void Load (System.IO.TextReader reader);
    parameters:
    - id: reader
      type: System.IO.TextReader
      description: "讀取器，例如<xref:System.IO.StringReader>，衍生自抽象<xref:System.IO.TextReader>類別。</xref:System.IO.TextReader> </xref:System.IO.StringReader>"
  overload: System.Web.UI.DataVisualization.Charting.ChartSerializer.Load*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataVisualization.Charting.ChartSerializer.Load(System.String)
  id: Load(System.String)
  parent: System.Web.UI.DataVisualization.Charting.ChartSerializer
  langs:
  - csharp
  name: Load(String)
  nameWithType: ChartSerializer.Load(String)
  fullName: System.Web.UI.DataVisualization.Charting.ChartSerializer.Load(String)
  type: Method
  assemblies:
  - System.Web.DataVisualization
  namespace: System.Web.UI.DataVisualization.Charting
  summary: "載入序列化資料儲存至磁碟到<xref href=&quot;System.Web.UI.DataVisualization.Charting.Chart&quot;></xref>控制項。"
  remarks: "呼叫此方法以載入序列化的資料<xref:System.Web.UI.DataVisualization.Charting.Chart>控制項。</xref:System.Web.UI.DataVisualization.Charting.Chart>       載入作業發生時，可序列化屬性，根據預設，第一次重設為其預設值之前，它們會設定為保存的值，如果儲存。 若要變更此行為，請使用<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading%2A>屬性。</xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading%2A>       根據預設，將會載入序列化的圖表的所有屬性。 若要載入特定的序列化的屬性，設定<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>，<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A>或<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A>載入資料之前的內容。</xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> </xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> </xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>       請注意，當資料會儲存使用`Save`實際上會序列化方法，只有在具有非預設值的屬性。"
  syntax:
    content: public void Load (string fileName);
    parameters:
    - id: fileName
      type: System.String
      description: "用來儲存已序列化的資料的檔案相對或絕對路徑。 如果指定的相對路徑，則路徑會相對於目前目錄中。"
  overload: System.Web.UI.DataVisualization.Charting.ChartSerializer.Load*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataVisualization.Charting.ChartSerializer.Load(System.Xml.XmlReader)
  id: Load(System.Xml.XmlReader)
  parent: System.Web.UI.DataVisualization.Charting.ChartSerializer
  langs:
  - csharp
  name: Load(XmlReader)
  nameWithType: ChartSerializer.Load(XmlReader)
  fullName: System.Web.UI.DataVisualization.Charting.ChartSerializer.Load(XmlReader)
  type: Method
  assemblies:
  - System.Web.DataVisualization
  namespace: System.Web.UI.DataVisualization.Charting
  summary: "載入序列化資料中衍生自此<xref:System.Xml.XmlReader>類別</xref:System.Xml.XmlReader>的物件，將控制項"
  remarks: "呼叫此方法以載入序列化的資料<xref:System.Web.UI.DataVisualization.Charting.Chart>控制項。</xref:System.Web.UI.DataVisualization.Charting.Chart>       載入作業發生時，預設序列化屬性會第一次重設為其預設值之前它們會設定為保存的值，如果儲存。 若要變更此行為，請使用<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading%2A>屬性。</xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading%2A>       根據預設，將會載入序列化的圖表的所有屬性。 如果您設定<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>，<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A>或<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A>可以載入內容，一組特定的屬性。</xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> </xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> </xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>       當您使用這個定義時，格式必須是 XML。以進行變更<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Format%2A>屬性。</xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Format%2A>       當您使用 XML 格式的文字檔案，為了簡單起見使用<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Load%2A>方法而。</xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Load%2A>"
  syntax:
    content: public void Load (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "要從其中讀取的保存的資料物件。 物件衍生自<xref:System.Xml.XmlReader>類別，而且可以是.NET Framework 物件或使用者定義的物件。</xref:System.Xml.XmlReader>"
  overload: System.Web.UI.DataVisualization.Charting.ChartSerializer.Load*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent
  id: NonSerializableContent
  parent: System.Web.UI.DataVisualization.Charting.ChartSerializer
  langs:
  - csharp
  name: NonSerializableContent
  nameWithType: ChartSerializer.NonSerializableContent
  fullName: System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent
  type: Property
  assemblies:
  - System.Web.DataVisualization
  namespace: System.Web.UI.DataVisualization.Charting
  summary: "取得或設定不會序列化圖表內容。"
  remarks: "By default all chart properties will be serialized when the `Save` and `Load` methods are called. You can use the NonSerializableContent property to limit chart characteristics to be serialized, along with the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> and <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> properties.  \n  \n This property determines which chart characteristics will not be serialized. Wildcards can be used in the string expression, in the same manner as the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> property. For example, to exclude all chart `BackColor` properties from serialization, set this property to \"*.BackColor\".  \n  \n Sometimes, a property can be set to be both serialized and not serialized, which is common when wildcards are used. The NonSerializableContent expression has a lower priority when compared to the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> expression. However, note that less weight is given to string expressions that use wildcards. For example, if the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> property is set to \"*.BackColor\" and the NonSerializableContent property is set to <xref:System.Web.UI.DataVisualization.Charting.ChartArea.BackColor%2A>, all B`ackColor` properties except for <xref:System.Web.UI.DataVisualization.Charting.ChartArea> objects will be serialized.  \n  \n If the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> property has been set, the priority depends on how many wild cards are used in the NonSerializableContent expression. For example, setting the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> property to <xref:System.Web.UI.DataVisualization.Charting.SerializationContents> will result in the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> property containing a \"*.Back\\*\" expression. If the NonSerializableContent property is set to \"\\*.Back\\*\", all `Back*` chart properties such as `BackColor`, `BackGradient`, and so forth, will still be serialized. This is because the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> property value has higher priority when compared to the NonSerializableContent property.  \n  \n This property affects all save, load and reset operations."
  syntax:
    content: public string NonSerializableContent { get; set; }
    return:
      type: System.String
      description: "以逗號分隔<xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;></xref>運算式，表示不會序列化圖表內容。 語法是&quot;Class.Property[,Class.Property]&quot;。"
  overload: System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataVisualization.Charting.ChartSerializer.Reset
  id: Reset
  parent: System.Web.UI.DataVisualization.Charting.ChartSerializer
  langs:
  - csharp
  name: Reset()
  nameWithType: ChartSerializer.Reset()
  fullName: System.Web.UI.DataVisualization.Charting.ChartSerializer.Reset()
  type: Method
  assemblies:
  - System.Web.DataVisualization
  namespace: System.Web.UI.DataVisualization.Charting
  summary: "重設所有的圖表內容標示為進行序列化。"
  remarks: "根據預設，這個方法會重設圖表的所有屬性為其預設值。       若要限制圖表屬性重設為其預設值，請使用<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>，<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A>和<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A>屬性。</xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> </xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> </xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>       請注意，這個方法也稱為自動當`Load`使用方法和<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading%2A>屬性設定為`true`。</xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading%2A>"
  syntax:
    content: public void Reset ();
    parameters: []
  overload: System.Web.UI.DataVisualization.Charting.ChartSerializer.Reset*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataVisualization.Charting.ChartSerializer.Save(System.IO.Stream)
  id: Save(System.IO.Stream)
  parent: System.Web.UI.DataVisualization.Charting.ChartSerializer
  langs:
  - csharp
  name: Save(Stream)
  nameWithType: ChartSerializer.Save(Stream)
  fullName: System.Web.UI.DataVisualization.Charting.ChartSerializer.Save(Stream)
  type: Method
  assemblies:
  - System.Web.DataVisualization
  namespace: System.Web.UI.DataVisualization.Charting
  summary: "會以非預設值衍生自<xref:System.IO.Stream>類別</xref:System.IO.Stream>的物件，將圖表資料和屬性"
  remarks: "根據預設，所有的圖表內容具有非預設值，其中包含資料點，將序列化時呼叫這個方法。 若要控制圖表的特性，可序列化，請使用<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>，<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A>和<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A>屬性。</xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> </xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> </xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>       如果這個方法用來儲存成範本的外觀屬性，請確定<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsTemplateMode%2A>屬性<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer>物件第一次設定為`true`之前呼叫這個方法。</xref:System.Web.UI.DataVisualization.Charting.ChartSerializer> </xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsTemplateMode%2A>       序列化的圖表做為範本，就會發生以不同的方式從非範本序列化;範本序列化專注於外觀屬性。       當範本經過序列化之後時，<xref:System.Web.UI.DataVisualization.Charting.Chart.LoadTemplate%2A>方法可以用來載入範本，以提供圖表的外觀屬性。</xref:System.Web.UI.DataVisualization.Charting.Chart.LoadTemplate%2A>       範本可以用來模擬自訂調色盤。"
  syntax:
    content: public void Save (System.IO.Stream stream);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "物件衍生自<xref:System.IO.Stream>類別，例如<xref:System.IO.MemoryStream>，也就是用來儲存圖表屬性。</xref:System.IO.MemoryStream> </xref:System.IO.Stream>"
  overload: System.Web.UI.DataVisualization.Charting.ChartSerializer.Save*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataVisualization.Charting.ChartSerializer.Save(System.IO.TextWriter)
  id: Save(System.IO.TextWriter)
  parent: System.Web.UI.DataVisualization.Charting.ChartSerializer
  langs:
  - csharp
  name: Save(TextWriter)
  nameWithType: ChartSerializer.Save(TextWriter)
  fullName: System.Web.UI.DataVisualization.Charting.ChartSerializer.Save(TextWriter)
  type: Method
  assemblies:
  - System.Web.DataVisualization
  namespace: System.Web.UI.DataVisualization.Charting
  summary: "將圖表資料和屬性儲存具有非預設值為給定的物件衍生自此<xref:System.IO.TextWriter>類別。</xref:System.IO.TextWriter>"
  remarks: "根據預設，所有的圖表內容具有非預設值，其中包含資料點，將序列化時呼叫這個方法。 若要控制序列化的圖表特性是，使用<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>，<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A>和<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A>屬性。</xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> </xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> </xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>       當您使用這個定義時，格式必須是 XML。可以透過設定格式<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Format%2A>屬性。</xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Format%2A>       如果<xref:System.Web.UI.DataVisualization.Charting.Chart.ViewStateData%2A>屬性<xref:System.Web.UI.DataVisualization.Charting.Chart>控制項用來保存狀態，這個方法可用來將序列化的資料儲存到衍生自物件<xref:System.IO.TextWriter>，然後用來將資料寫入<xref:System.Web.UI.DataVisualization.Charting.Chart.ViewStateData%2A>屬性。</xref:System.Web.UI.DataVisualization.Charting.Chart.ViewStateData%2A> </xref:System.IO.TextWriter> </xref:System.Web.UI.DataVisualization.Charting.Chart> </xref:System.Web.UI.DataVisualization.Charting.Chart.ViewStateData%2A>"
  syntax:
    content: public void Save (System.IO.TextWriter writer);
    parameters:
    - id: writer
      type: System.IO.TextWriter
      description: "物件衍生自<xref:System.IO.TextWriter>類別，例如<xref:System.IO.StringWriter>，也就是用來儲存圖表屬性。</xref:System.IO.StringWriter> </xref:System.IO.TextWriter>"
  overload: System.Web.UI.DataVisualization.Charting.ChartSerializer.Save*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataVisualization.Charting.ChartSerializer.Save(System.String)
  id: Save(System.String)
  parent: System.Web.UI.DataVisualization.Charting.ChartSerializer
  langs:
  - csharp
  name: Save(String)
  nameWithType: ChartSerializer.Save(String)
  fullName: System.Web.UI.DataVisualization.Charting.ChartSerializer.Save(String)
  type: Method
  assemblies:
  - System.Web.DataVisualization
  namespace: System.Web.UI.DataVisualization.Charting
  summary: "會以非預設值，以指定的檔案將圖表資料和屬性。"
  remarks: "根據預設所有圖表內容具有非預設值，其中包含資料點，將都序列化時呼叫這個方法。 若要控制圖表的特性是序列化使用<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>，<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A>和<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A>屬性。</xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> </xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> </xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>       依預設是以 XML 格式儲存資料。 若要以二進位格式儲存資料，請使用<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Format%2A>屬性。</xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Format%2A>       請注意，必須啟用檔案會儲存的目錄的寫入權限。 根據預設，這是應用程式的 Bin 資料夾。       如果此方法用於儲存成範本的外觀屬性，請確定<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsTemplateMode%2A>屬性第一次設`true`之前呼叫這個方法。</xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsTemplateMode%2A>       序列化的圖表做為範本就會繼續以不同的方式從非範本序列化，主要是因為範本序列化專注於外觀屬性。       當範本經過序列化之後時，<xref:System.Web.UI.DataVisualization.Charting.Chart.LoadTemplate%2A>方法可以用來載入範本，以提供圖表的外觀屬性。</xref:System.Web.UI.DataVisualization.Charting.Chart.LoadTemplate%2A>       範本可以用來模擬自訂調色盤。"
  syntax:
    content: public void Save (string fileName);
    parameters:
    - id: fileName
      type: System.String
      description: "用來儲存已序列化的資料的檔案相對或絕對路徑。 請注意，是否指定的相對路徑，則路徑會相對於目前目錄。"
  overload: System.Web.UI.DataVisualization.Charting.ChartSerializer.Save*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataVisualization.Charting.ChartSerializer.Save(System.Xml.XmlWriter)
  id: Save(System.Xml.XmlWriter)
  parent: System.Web.UI.DataVisualization.Charting.ChartSerializer
  langs:
  - csharp
  name: Save(XmlWriter)
  nameWithType: ChartSerializer.Save(XmlWriter)
  fullName: System.Web.UI.DataVisualization.Charting.ChartSerializer.Save(XmlWriter)
  type: Method
  assemblies:
  - System.Web.DataVisualization
  namespace: System.Web.UI.DataVisualization.Charting
  summary: "將圖表資料和屬性儲存具有非預設值為給定的物件衍生自此<xref:System.Xml.XmlWriter>類別。</xref:System.Xml.XmlWriter>"
  remarks: "根據預設，所有的圖表內容具有非預設值，其中包含資料點，將序列化時呼叫這個方法。 若要控制序列化的圖表特性是，使用<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>，<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A>和<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A>屬性。</xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> </xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> </xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>       當您使用這個定義時，格式必須是 XML。格式可以變更與<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Format%2A>屬性。</xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Format%2A>       當您使用 XML 格式的文字檔案，為了簡單起見使用<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Save%2A>方法而。</xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Save%2A>"
  syntax:
    content: public void Save (System.Xml.XmlWriter writer);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "物件衍生自<xref:System.Xml.XmlWriter>用來儲存<xref href=&quot;System.Web.UI.DataVisualization.Charting.Chart&quot;></xref>屬性。</xref:System.Xml.XmlWriter>"
  overload: System.Web.UI.DataVisualization.Charting.ChartSerializer.Save*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent
  id: SerializableContent
  parent: System.Web.UI.DataVisualization.Charting.ChartSerializer
  langs:
  - csharp
  name: SerializableContent
  nameWithType: ChartSerializer.SerializableContent
  fullName: System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent
  type: Property
  assemblies:
  - System.Web.DataVisualization
  namespace: System.Web.UI.DataVisualization.Charting
  summary: "取得或設定可以序列化圖表內容。"
  remarks: "根據預設所有圖表屬性都會序列化時`Save`和`Load`呼叫的方法。 您可以使用<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A>屬性限制圖表的特性，可序列化，以及 SerializableContent 和<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>屬性。</xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> </xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A>       SerializableContent 屬性會決定要序列化的哪一個圖表的特性。 可以在字串運算式中，使用萬用字元，以相同方式<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A>屬性。</xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> 例如，要序列化所有圖表`BackColor`屬性，將此屬性設定為&quot;*。背景色彩 」。     如果<xref:System.Web.UI.DataVisualization.Charting.ChartArea>及/或<xref:System.Web.UI.DataVisualization.Charting.Series>子指定屬性，然後所有名稱<xref:System.Web.UI.DataVisualization.Charting.ChartArea>和<xref:System.Web.UI.DataVisualization.Charting.Series>以啟用要套用至現有的保存的資料必須也指定物件<xref:System.Web.UI.DataVisualization.Charting.ChartArea>和<xref:System.Web.UI.DataVisualization.Charting.Series>物件; 也就是說，您必須指定&quot;Series.Name&quot;和&quot;ChartArea.Name 」 運算式。</xref:System.Web.UI.DataVisualization.Charting.Series> </xref:System.Web.UI.DataVisualization.Charting.ChartArea> </xref:System.Web.UI.DataVisualization.Charting.Series> </xref:System.Web.UI.DataVisualization.Charting.ChartArea> </xref:System.Web.UI.DataVisualization.Charting.Series> </xref:System.Web.UI.DataVisualization.Charting.ChartArea>請參閱下面這個程序的範例，範例程式碼。同樣地，如果使用多個圖表區域，<xref:System.Web.UI.DataVisualization.Charting.Series.ChartArea%2A>屬性的所有繪製<xref:System.Web.UI.DataVisualization.Charting.Series>也必須先儲存。</xref:System.Web.UI.DataVisualization.Charting.Series> </xref:System.Web.UI.DataVisualization.Charting.Series.ChartArea%2A>     某些情況下，屬性可以設序列化與未序列化，使用萬用字元時，這很常見。<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A>運算式具有較低的優先權，相較於 SerializableContent 運算式。</xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A>不過請注意較少的加權可以使用萬用字元的字串運算式。例如，如果 SerializableContent 屬性設定為&quot;*。背景色彩 」 和<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A>屬性設定為<xref:System.Web.UI.DataVisualization.Charting.ChartArea.BackColor%2A>，所有 B`ackColor`以外的屬性<xref:System.Web.UI.DataVisualization.Charting.ChartArea>要序列化的物件。</xref:System.Web.UI.DataVisualization.Charting.ChartArea> </xref:System.Web.UI.DataVisualization.Charting.ChartArea.BackColor%2A> </xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A>       如果您設定<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>屬性，SerializableContent 屬性將會在內部設定。</xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> 如果<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>屬性已設定，但另一個屬性必須可序列化，請務必指定該額外的屬性時，串連 SerializableContent 屬性。</xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> 請參閱下面這個程序的範例，範例程式碼。       所有儲存時，此屬性會影響載入及重設作業。"
  syntax:
    content: public string SerializableContent { get; set; }
    return:
      type: System.String
      description: "以逗號分隔<xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;></xref>運算式，表示要序列化之圖表屬性。 語法是&quot;Class.Property[,Class.Property]&quot;。"
  overload: System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.UI.DataVisualization.Charting.ChartSerializer.Content
  parent: System.Web.UI.DataVisualization.Charting.ChartSerializer
  isExternal: false
  name: Content
  nameWithType: ChartSerializer.Content
  fullName: System.Web.UI.DataVisualization.Charting.ChartSerializer.Content
- uid: System.Web.UI.DataVisualization.Charting.SerializationContents
  parent: System.Web.UI.DataVisualization.Charting
  isExternal: false
  name: SerializationContents
  nameWithType: SerializationContents
  fullName: System.Web.UI.DataVisualization.Charting.SerializationContents
- uid: System.Web.UI.DataVisualization.Charting.ChartSerializer.Format
  parent: System.Web.UI.DataVisualization.Charting.ChartSerializer
  isExternal: false
  name: Format
  nameWithType: ChartSerializer.Format
  fullName: System.Web.UI.DataVisualization.Charting.ChartSerializer.Format
- uid: System.Web.UI.DataVisualization.Charting.SerializationFormat
  parent: System.Web.UI.DataVisualization.Charting
  isExternal: false
  name: SerializationFormat
  nameWithType: SerializationFormat
  fullName: System.Web.UI.DataVisualization.Charting.SerializationFormat
- uid: System.Web.UI.DataVisualization.Charting.ChartSerializer.GetContentString(System.Web.UI.DataVisualization.Charting.SerializationContents,System.Boolean)
  parent: System.Web.UI.DataVisualization.Charting.ChartSerializer
  isExternal: false
  name: GetContentString(SerializationContents,Boolean)
  nameWithType: ChartSerializer.GetContentString(SerializationContents,Boolean)
  fullName: System.Web.UI.DataVisualization.Charting.ChartSerializer.GetContentString(SerializationContents,Boolean)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading
  parent: System.Web.UI.DataVisualization.Charting.ChartSerializer
  isExternal: false
  name: IsResetWhenLoading
  nameWithType: ChartSerializer.IsResetWhenLoading
  fullName: System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading
- uid: System.Web.UI.DataVisualization.Charting.ChartSerializer.IsTemplateMode
  parent: System.Web.UI.DataVisualization.Charting.ChartSerializer
  isExternal: false
  name: IsTemplateMode
  nameWithType: ChartSerializer.IsTemplateMode
  fullName: System.Web.UI.DataVisualization.Charting.ChartSerializer.IsTemplateMode
- uid: System.Web.UI.DataVisualization.Charting.ChartSerializer.IsUnknownAttributeIgnored
  parent: System.Web.UI.DataVisualization.Charting.ChartSerializer
  isExternal: false
  name: IsUnknownAttributeIgnored
  nameWithType: ChartSerializer.IsUnknownAttributeIgnored
  fullName: System.Web.UI.DataVisualization.Charting.ChartSerializer.IsUnknownAttributeIgnored
- uid: System.Web.UI.DataVisualization.Charting.ChartSerializer.Load(System.IO.Stream)
  parent: System.Web.UI.DataVisualization.Charting.ChartSerializer
  isExternal: false
  name: Load(Stream)
  nameWithType: ChartSerializer.Load(Stream)
  fullName: System.Web.UI.DataVisualization.Charting.ChartSerializer.Load(Stream)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Web.UI.DataVisualization.Charting.ChartSerializer.Load(System.IO.TextReader)
  parent: System.Web.UI.DataVisualization.Charting.ChartSerializer
  isExternal: false
  name: Load(TextReader)
  nameWithType: ChartSerializer.Load(TextReader)
  fullName: System.Web.UI.DataVisualization.Charting.ChartSerializer.Load(TextReader)
- uid: System.IO.TextReader
  parent: System.IO
  isExternal: true
  name: TextReader
  nameWithType: TextReader
  fullName: System.IO.TextReader
- uid: System.Web.UI.DataVisualization.Charting.ChartSerializer.Load(System.String)
  parent: System.Web.UI.DataVisualization.Charting.ChartSerializer
  isExternal: false
  name: Load(String)
  nameWithType: ChartSerializer.Load(String)
  fullName: System.Web.UI.DataVisualization.Charting.ChartSerializer.Load(String)
- uid: System.Web.UI.DataVisualization.Charting.ChartSerializer.Load(System.Xml.XmlReader)
  parent: System.Web.UI.DataVisualization.Charting.ChartSerializer
  isExternal: false
  name: Load(XmlReader)
  nameWithType: ChartSerializer.Load(XmlReader)
  fullName: System.Web.UI.DataVisualization.Charting.ChartSerializer.Load(XmlReader)
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent
  parent: System.Web.UI.DataVisualization.Charting.ChartSerializer
  isExternal: false
  name: NonSerializableContent
  nameWithType: ChartSerializer.NonSerializableContent
  fullName: System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent
- uid: System.Web.UI.DataVisualization.Charting.ChartSerializer.Reset
  parent: System.Web.UI.DataVisualization.Charting.ChartSerializer
  isExternal: false
  name: Reset()
  nameWithType: ChartSerializer.Reset()
  fullName: System.Web.UI.DataVisualization.Charting.ChartSerializer.Reset()
- uid: System.Web.UI.DataVisualization.Charting.ChartSerializer.Save(System.IO.Stream)
  parent: System.Web.UI.DataVisualization.Charting.ChartSerializer
  isExternal: false
  name: Save(Stream)
  nameWithType: ChartSerializer.Save(Stream)
  fullName: System.Web.UI.DataVisualization.Charting.ChartSerializer.Save(Stream)
- uid: System.Web.UI.DataVisualization.Charting.ChartSerializer.Save(System.IO.TextWriter)
  parent: System.Web.UI.DataVisualization.Charting.ChartSerializer
  isExternal: false
  name: Save(TextWriter)
  nameWithType: ChartSerializer.Save(TextWriter)
  fullName: System.Web.UI.DataVisualization.Charting.ChartSerializer.Save(TextWriter)
- uid: System.IO.TextWriter
  parent: System.IO
  isExternal: true
  name: TextWriter
  nameWithType: TextWriter
  fullName: System.IO.TextWriter
- uid: System.Web.UI.DataVisualization.Charting.ChartSerializer.Save(System.String)
  parent: System.Web.UI.DataVisualization.Charting.ChartSerializer
  isExternal: false
  name: Save(String)
  nameWithType: ChartSerializer.Save(String)
  fullName: System.Web.UI.DataVisualization.Charting.ChartSerializer.Save(String)
- uid: System.Web.UI.DataVisualization.Charting.ChartSerializer.Save(System.Xml.XmlWriter)
  parent: System.Web.UI.DataVisualization.Charting.ChartSerializer
  isExternal: false
  name: Save(XmlWriter)
  nameWithType: ChartSerializer.Save(XmlWriter)
  fullName: System.Web.UI.DataVisualization.Charting.ChartSerializer.Save(XmlWriter)
- uid: System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent
  parent: System.Web.UI.DataVisualization.Charting.ChartSerializer
  isExternal: false
  name: SerializableContent
  nameWithType: ChartSerializer.SerializableContent
  fullName: System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent
- uid: System.Web.UI.DataVisualization.Charting.ChartSerializer.Content*
  parent: System.Web.UI.DataVisualization.Charting.ChartSerializer
  isExternal: false
  name: Content
  nameWithType: ChartSerializer.Content
- uid: System.Web.UI.DataVisualization.Charting.ChartSerializer.Format*
  parent: System.Web.UI.DataVisualization.Charting.ChartSerializer
  isExternal: false
  name: Format
  nameWithType: ChartSerializer.Format
- uid: System.Web.UI.DataVisualization.Charting.ChartSerializer.GetContentString*
  parent: System.Web.UI.DataVisualization.Charting.ChartSerializer
  isExternal: false
  name: GetContentString
  nameWithType: ChartSerializer.GetContentString
- uid: System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading*
  parent: System.Web.UI.DataVisualization.Charting.ChartSerializer
  isExternal: false
  name: IsResetWhenLoading
  nameWithType: ChartSerializer.IsResetWhenLoading
- uid: System.Web.UI.DataVisualization.Charting.ChartSerializer.IsTemplateMode*
  parent: System.Web.UI.DataVisualization.Charting.ChartSerializer
  isExternal: false
  name: IsTemplateMode
  nameWithType: ChartSerializer.IsTemplateMode
- uid: System.Web.UI.DataVisualization.Charting.ChartSerializer.IsUnknownAttributeIgnored*
  parent: System.Web.UI.DataVisualization.Charting.ChartSerializer
  isExternal: false
  name: IsUnknownAttributeIgnored
  nameWithType: ChartSerializer.IsUnknownAttributeIgnored
- uid: System.Web.UI.DataVisualization.Charting.ChartSerializer.Load*
  parent: System.Web.UI.DataVisualization.Charting.ChartSerializer
  isExternal: false
  name: Load
  nameWithType: ChartSerializer.Load
- uid: System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent*
  parent: System.Web.UI.DataVisualization.Charting.ChartSerializer
  isExternal: false
  name: NonSerializableContent
  nameWithType: ChartSerializer.NonSerializableContent
- uid: System.Web.UI.DataVisualization.Charting.ChartSerializer.Reset*
  parent: System.Web.UI.DataVisualization.Charting.ChartSerializer
  isExternal: false
  name: Reset
  nameWithType: ChartSerializer.Reset
- uid: System.Web.UI.DataVisualization.Charting.ChartSerializer.Save*
  parent: System.Web.UI.DataVisualization.Charting.ChartSerializer
  isExternal: false
  name: Save
  nameWithType: ChartSerializer.Save
- uid: System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent*
  parent: System.Web.UI.DataVisualization.Charting.ChartSerializer
  isExternal: false
  name: SerializableContent
  nameWithType: ChartSerializer.SerializableContent
