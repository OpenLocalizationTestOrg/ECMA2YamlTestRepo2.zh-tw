### YamlMime:ManagedReference
items:
- uid: System.Runtime.InteropServices._Type
  id: _Type
  children:
  - System.Runtime.InteropServices._Type.Assembly
  - System.Runtime.InteropServices._Type.AssemblyQualifiedName
  - System.Runtime.InteropServices._Type.Attributes
  - System.Runtime.InteropServices._Type.BaseType
  - System.Runtime.InteropServices._Type.DeclaringType
  - System.Runtime.InteropServices._Type.Equals(System.Object)
  - System.Runtime.InteropServices._Type.Equals(System.Type)
  - System.Runtime.InteropServices._Type.FindInterfaces(System.Reflection.TypeFilter,System.Object)
  - System.Runtime.InteropServices._Type.FindMembers(System.Reflection.MemberTypes,System.Reflection.BindingFlags,System.Reflection.MemberFilter,System.Object)
  - System.Runtime.InteropServices._Type.FullName
  - System.Runtime.InteropServices._Type.GetArrayRank
  - System.Runtime.InteropServices._Type.GetConstructor(System.Type[])
  - System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])
  - System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  - System.Runtime.InteropServices._Type.GetConstructors
  - System.Runtime.InteropServices._Type.GetConstructors(System.Reflection.BindingFlags)
  - System.Runtime.InteropServices._Type.GetCustomAttributes(System.Boolean)
  - System.Runtime.InteropServices._Type.GetCustomAttributes(System.Type,System.Boolean)
  - System.Runtime.InteropServices._Type.GetDefaultMembers
  - System.Runtime.InteropServices._Type.GetElementType
  - System.Runtime.InteropServices._Type.GetEvent(System.String)
  - System.Runtime.InteropServices._Type.GetEvent(System.String,System.Reflection.BindingFlags)
  - System.Runtime.InteropServices._Type.GetEvents
  - System.Runtime.InteropServices._Type.GetEvents(System.Reflection.BindingFlags)
  - System.Runtime.InteropServices._Type.GetField(System.String)
  - System.Runtime.InteropServices._Type.GetField(System.String,System.Reflection.BindingFlags)
  - System.Runtime.InteropServices._Type.GetFields
  - System.Runtime.InteropServices._Type.GetFields(System.Reflection.BindingFlags)
  - System.Runtime.InteropServices._Type.GetHashCode
  - System.Runtime.InteropServices._Type.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  - System.Runtime.InteropServices._Type.GetInterface(System.String)
  - System.Runtime.InteropServices._Type.GetInterface(System.String,System.Boolean)
  - System.Runtime.InteropServices._Type.GetInterfaceMap(System.Type)
  - System.Runtime.InteropServices._Type.GetInterfaces
  - System.Runtime.InteropServices._Type.GetMember(System.String)
  - System.Runtime.InteropServices._Type.GetMember(System.String,System.Reflection.BindingFlags)
  - System.Runtime.InteropServices._Type.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)
  - System.Runtime.InteropServices._Type.GetMembers
  - System.Runtime.InteropServices._Type.GetMembers(System.Reflection.BindingFlags)
  - System.Runtime.InteropServices._Type.GetMethod(System.String)
  - System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags)
  - System.Runtime.InteropServices._Type.GetMethod(System.String,System.Type[])
  - System.Runtime.InteropServices._Type.GetMethod(System.String,System.Type[],System.Reflection.ParameterModifier[])
  - System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])
  - System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  - System.Runtime.InteropServices._Type.GetMethods
  - System.Runtime.InteropServices._Type.GetMethods(System.Reflection.BindingFlags)
  - System.Runtime.InteropServices._Type.GetNestedType(System.String)
  - System.Runtime.InteropServices._Type.GetNestedType(System.String,System.Reflection.BindingFlags)
  - System.Runtime.InteropServices._Type.GetNestedTypes
  - System.Runtime.InteropServices._Type.GetNestedTypes(System.Reflection.BindingFlags)
  - System.Runtime.InteropServices._Type.GetProperties
  - System.Runtime.InteropServices._Type.GetProperties(System.Reflection.BindingFlags)
  - System.Runtime.InteropServices._Type.GetProperty(System.String)
  - System.Runtime.InteropServices._Type.GetProperty(System.String,System.Reflection.BindingFlags)
  - System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type)
  - System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type[])
  - System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type,System.Type[])
  - System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  - System.Runtime.InteropServices._Type.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  - System.Runtime.InteropServices._Type.GetType
  - System.Runtime.InteropServices._Type.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  - System.Runtime.InteropServices._Type.GetTypeInfoCount(System.UInt32@)
  - System.Runtime.InteropServices._Type.GUID
  - System.Runtime.InteropServices._Type.HasElementType
  - System.Runtime.InteropServices._Type.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  - System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[])
  - System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Globalization.CultureInfo)
  - System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])
  - System.Runtime.InteropServices._Type.IsAbstract
  - System.Runtime.InteropServices._Type.IsAnsiClass
  - System.Runtime.InteropServices._Type.IsArray
  - System.Runtime.InteropServices._Type.IsAssignableFrom(System.Type)
  - System.Runtime.InteropServices._Type.IsAutoClass
  - System.Runtime.InteropServices._Type.IsAutoLayout
  - System.Runtime.InteropServices._Type.IsByRef
  - System.Runtime.InteropServices._Type.IsClass
  - System.Runtime.InteropServices._Type.IsCOMObject
  - System.Runtime.InteropServices._Type.IsContextful
  - System.Runtime.InteropServices._Type.IsDefined(System.Type,System.Boolean)
  - System.Runtime.InteropServices._Type.IsEnum
  - System.Runtime.InteropServices._Type.IsExplicitLayout
  - System.Runtime.InteropServices._Type.IsImport
  - System.Runtime.InteropServices._Type.IsInstanceOfType(System.Object)
  - System.Runtime.InteropServices._Type.IsInterface
  - System.Runtime.InteropServices._Type.IsLayoutSequential
  - System.Runtime.InteropServices._Type.IsMarshalByRef
  - System.Runtime.InteropServices._Type.IsNestedAssembly
  - System.Runtime.InteropServices._Type.IsNestedFamANDAssem
  - System.Runtime.InteropServices._Type.IsNestedFamily
  - System.Runtime.InteropServices._Type.IsNestedFamORAssem
  - System.Runtime.InteropServices._Type.IsNestedPrivate
  - System.Runtime.InteropServices._Type.IsNestedPublic
  - System.Runtime.InteropServices._Type.IsNotPublic
  - System.Runtime.InteropServices._Type.IsPointer
  - System.Runtime.InteropServices._Type.IsPrimitive
  - System.Runtime.InteropServices._Type.IsPublic
  - System.Runtime.InteropServices._Type.IsSealed
  - System.Runtime.InteropServices._Type.IsSerializable
  - System.Runtime.InteropServices._Type.IsSpecialName
  - System.Runtime.InteropServices._Type.IsSubclassOf(System.Type)
  - System.Runtime.InteropServices._Type.IsUnicodeClass
  - System.Runtime.InteropServices._Type.IsValueType
  - System.Runtime.InteropServices._Type.MemberType
  - System.Runtime.InteropServices._Type.Module
  - System.Runtime.InteropServices._Type.Name
  - System.Runtime.InteropServices._Type.Namespace
  - System.Runtime.InteropServices._Type.ReflectedType
  - System.Runtime.InteropServices._Type.ToString
  - System.Runtime.InteropServices._Type.TypeHandle
  - System.Runtime.InteropServices._Type.TypeInitializer
  - System.Runtime.InteropServices._Type.UnderlyingSystemType
  langs:
  - csharp
  name: _Type
  nameWithType: _Type
  fullName: System.Runtime.InteropServices._Type
  type: Interface
  summary: "公開的 public 成員&lt;xref:System.Type?displayProperty=fullName&gt;至 unmanaged 程式碼的類別。"
  remarks: "此介面會從 unmanaged 程式碼會存取 managed 類別，而且不應該從 managed 程式碼呼叫。       這個介面會保留 vtable 順序的<xref:System.Type?displayProperty=fullName>類別可由 unmanaged COM 物件存取的成員。</xref:System.Type?displayProperty=fullName>"
  syntax:
    content: >-
      [System.CLSCompliant(false)]

      [System.Runtime.InteropServices.ComVisible(true)]

      [System.Runtime.InteropServices.Guid("BCA8B44D-AAD6-3A86-8AB7-03349F4F2DA2")]

      [System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]

      [System.Runtime.InteropServices.TypeLibImportClass(typeof(System.Type))]

      public interface _Type
  implements: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.Assembly
  id: Assembly
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: Assembly
  nameWithType: _Type.Assembly
  fullName: System.Runtime.InteropServices._Type.Assembly
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權&lt;xref:System.Type.Assembly%2A?displayProperty=fullName&gt;屬性。"
  remarks: "這個屬性會從 unmanaged 程式碼，是對存取 managed 類別，不應該從 managed 程式碼呼叫。       <xref:System.Type.Assembly%2A?displayProperty=fullName>屬性會取得<xref:System.Reflection.Assembly>中宣告的型別。</xref:System.Reflection.Assembly> </xref:System.Type.Assembly%2A?displayProperty=fullName> 為泛型類型，這個屬性會取得<xref:System.Reflection.Assembly>中定義此泛型類型。</xref:System.Reflection.Assembly>"
  syntax:
    content: public System.Reflection.Assembly Assembly { get; }
    return:
      type: System.Reflection.Assembly
      description: "<xref:System.Reflection.Assembly>描述包含目前類型的組件的執行個體。</xref:System.Reflection.Assembly>"
  overload: System.Runtime.InteropServices._Type.Assembly*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.AssemblyQualifiedName
  id: AssemblyQualifiedName
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: AssemblyQualifiedName
  nameWithType: _Type.AssemblyQualifiedName
  fullName: System.Runtime.InteropServices._Type.AssemblyQualifiedName
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權&lt;xref:System.Type.AssemblyQualifiedName%2A?displayProperty=fullName&gt;屬性。"
  remarks: "這個屬性會從 unmanaged 程式碼，是對存取 managed 類別，不應該從 managed 程式碼呼叫。       <xref:System.Type.AssemblyQualifiedName%2A?displayProperty=fullName>屬性會取得組件限定名稱<xref:System.Type>，包括組件名稱<xref:System.Type>已載入。</xref:System.Type> </xref:System.Type> </xref:System.Type.AssemblyQualifiedName%2A?displayProperty=fullName>"
  syntax:
    content: public string AssemblyQualifiedName { get; }
    return:
      type: System.String
      description: "組件限定名稱<xref:System.Type>，包括組件名稱<xref:System.Type>已載入。</xref:System.Type> </xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.AssemblyQualifiedName*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.Attributes
  id: Attributes
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: Attributes
  nameWithType: _Type.Attributes
  fullName: System.Runtime.InteropServices._Type.Attributes
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權&lt;xref:System.Type.Attributes%2A?displayProperty=fullName&gt;屬性。"
  remarks: "這個屬性會從 unmanaged 程式碼，是對存取 managed 類別，不應該從 managed 程式碼呼叫。       <xref:System.Type.Attributes%2A?displayProperty=fullName>屬性會取得<xref:System.Type>.</xref:System.Type>相關聯的屬性</xref:System.Type.Attributes%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.TypeAttributes Attributes { get; }
    return:
      type: System.Reflection.TypeAttributes
      description: "A<xref:System.Reflection.TypeAttributes>物件，代表屬性集<xref:System.Type>，除非<xref:System.Type>代表的泛型型別參數，則這個值是未指定。</xref:System.Type> </xref:System.Type> </xref:System.Reflection.TypeAttributes>"
  overload: System.Runtime.InteropServices._Type.Attributes*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.BaseType
  id: BaseType
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: BaseType
  nameWithType: _Type.BaseType
  fullName: System.Runtime.InteropServices._Type.BaseType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權&lt;xref:System.Type.BaseType%2A?displayProperty=fullName&gt;屬性。"
  remarks: "這個屬性會從 unmanaged 程式碼，是對存取 managed 類別，不應該從 managed 程式碼呼叫。       <xref:System.Type.BaseType%2A?displayProperty=fullName>屬性會取得型別從其目前<xref:System.Type>直接繼承。</xref:System.Type> </xref:System.Type.BaseType%2A?displayProperty=fullName>"
  syntax:
    content: public Type BaseType { get; }
    return:
      type: System.Type
      description: "<xref:System.Type>從中目前<xref:System.Type>直接繼承，或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果目前<xref uid=&quot;langword_csharp_Type&quot; name=&quot;Type&quot; href=&quot;&quot;></xref>代表<xref:System.Object>類別</xref:System.Object></xref:System.Type></xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.BaseType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.DeclaringType
  id: DeclaringType
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: DeclaringType
  nameWithType: _Type.DeclaringType
  fullName: System.Runtime.InteropServices._Type.DeclaringType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權&lt;xref:System.Type.DeclaringType%2A?displayProperty=fullName&gt;屬性。"
  remarks: "這個屬性會從 unmanaged 程式碼，是對存取 managed 類別，不應該從 managed 程式碼呼叫。       <xref:System.Type.DeclaringType%2A?displayProperty=fullName>屬性會取得宣告此成員的類別。</xref:System.Type.DeclaringType%2A?displayProperty=fullName>"
  syntax:
    content: public Type DeclaringType { get; }
    return:
      type: System.Type
      description: "<xref:System.Type>宣告這個成員的類別的物件。</xref:System.Type> 如果類型是巢狀型別，這個屬性會傳回封入類型。"
  overload: System.Runtime.InteropServices._Type.DeclaringType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: _Type.Equals(Object)
  fullName: System.Runtime.InteropServices._Type.Equals(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權&lt;xref:System.Type.Equals%2A?displayProperty=fullName&gt;方法。"
  remarks: "這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。       <xref:System.Type.Equals%2A?displayProperty=fullName>方法會判斷基礎系統類型<xref:System.Type>與基礎系統類型的指定<xref:System.Object>。</xref:System.Object>相同</xref:System.Type>目前</xref:System.Type.Equals%2A?displayProperty=fullName>的"
  syntax:
    content: public bool Equals (object other);
    parameters:
    - id: other
      type: System.Object
      description: "<xref:System.Object>要與目前<xref:System.Type>.</xref:System.Type>的基礎系統類型比較是其基礎系統類型</xref:System.Object>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果基礎系統類型<code> o </code>與目前的基礎系統類型相同<xref:System.Type>，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.Equals(System.Type)
  id: Equals(System.Type)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: Equals(Type)
  nameWithType: _Type.Equals(Type)
  fullName: System.Runtime.InteropServices._Type.Equals(Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權&lt;xref:System.Type.Equals%2A?displayProperty=fullName&gt;方法。"
  remarks: "這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。       <xref:System.Type.Equals%2A?displayProperty=fullName>方法會判斷基礎系統類型<xref:System.Type>與基礎系統類型的指定<xref:System.Type>。</xref:System.Type>相同</xref:System.Type>目前</xref:System.Type.Equals%2A?displayProperty=fullName>的"
  syntax:
    content: public bool Equals (Type o);
    parameters:
    - id: o
      type: System.Type
      description: "<xref:System.Type>要與目前<xref:System.Type>.</xref:System.Type>的基礎系統類型比較是其基礎系統類型</xref:System.Type>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果基礎系統類型<code> o </code>與目前的基礎系統類型相同<xref:System.Type>，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.FindInterfaces(System.Reflection.TypeFilter,System.Object)
  id: FindInterfaces(System.Reflection.TypeFilter,System.Object)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: FindInterfaces(TypeFilter,Object)
  nameWithType: _Type.FindInterfaces(TypeFilter,Object)
  fullName: System.Runtime.InteropServices._Type.FindInterfaces(TypeFilter,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權&lt;xref:System.Type.FindInterfaces%2A?displayProperty=fullName&gt;方法。"
  remarks: "這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。       <xref:System.Type.FindInterfaces%2A?displayProperty=fullName>方法會傳回陣列的<xref:System.Type>物件表示目前<xref:System.Type>.</xref:System.Type>所實作或繼承的介面的篩選的清單</xref:System.Type></xref:System.Type.FindInterfaces%2A?displayProperty=fullName>"
  syntax:
    content: public Type[] FindInterfaces (System.Reflection.TypeFilter filter, object filterCriteria);
    parameters:
    - id: filter
      type: System.Reflection.TypeFilter
      description: "<xref href=&quot;System.Reflection.TypeFilter&quot;> </xref>比較針對介面的委派`filterCriteria`。"
    - id: filterCriteria
      type: System.Object
      description: "決定是否要介面包含傳回陣列中搜尋準則。"
    return:
      type: System.Type[]
      description: "陣列的<xref:System.Type>物件表示目前<xref:System.Type>.</xref:System.Type>所實作或繼承之介面的篩選的清單</xref:System.Type>       -或者-型別<xref:System.Type>，如果介面都不符合篩選條件所實作或繼承目前<xref:System.Type>.</xref:System.Type></xref:System.Type>的空陣列"
  overload: System.Runtime.InteropServices._Type.FindInterfaces*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.FindMembers(System.Reflection.MemberTypes,System.Reflection.BindingFlags,System.Reflection.MemberFilter,System.Object)
  id: FindMembers(System.Reflection.MemberTypes,System.Reflection.BindingFlags,System.Reflection.MemberFilter,System.Object)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: FindMembers(MemberTypes,BindingFlags,MemberFilter,Object)
  nameWithType: _Type.FindMembers(MemberTypes,BindingFlags,MemberFilter,Object)
  fullName: System.Runtime.InteropServices._Type.FindMembers(MemberTypes,BindingFlags,MemberFilter,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權&lt;xref:System.Type.FindMembers%2A?displayProperty=fullName&gt;方法。"
  remarks: "這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。       <xref:System.Type.FindMembers%2A?displayProperty=fullName>方法會傳回已篩選的陣列<xref:System.Reflection.MemberInfo>指定的成員類型的物件。</xref:System.Reflection.MemberInfo> </xref:System.Type.FindMembers%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.MemberInfo[] FindMembers (System.Reflection.MemberTypes memberType, System.Reflection.BindingFlags bindingAttr, System.Reflection.MemberFilter filter, object filterCriteria);
    parameters:
    - id: memberType
      type: System.Reflection.MemberTypes
      description: "A <xref uid=&quot;langword_csharp_MemberTypes&quot; name=&quot;MemberTypes&quot; href=&quot;&quot;> </xref>物件，表示要搜尋的成員類型。"
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "位元遮罩，由一或多個<xref href=&quot;System.Reflection.BindingFlags&quot;></xref>旗標會指定執行搜尋的方式。       -或-零，傳回<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
    - id: filter
      type: System.Reflection.MemberFilter
      description: "執行比較，傳回的委派<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果目前進行檢查的成員符合`filterCriteria`和<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>否則。 您可以使用<xref uid=&quot;langword_csharp_FilterAttribute&quot; name=&quot;FilterAttribute&quot; href=&quot;&quot;> </xref>， <xref uid=&quot;langword_csharp_FilterName&quot; name=&quot;FilterName&quot; href=&quot;&quot;> </xref>，和<xref uid=&quot;langword_csharp_FilterNameIgnoreCase&quot; name=&quot;FilterNameIgnoreCase&quot; href=&quot;&quot;></xref>這個類別所提供的委派。 第一個使用的欄位<xref uid=&quot;langword_csharp_FieldAttributes&quot; name=&quot;FieldAttributes&quot; href=&quot;&quot;> </xref>， <xref uid=&quot;langword_csharp_MethodAttributes&quot; name=&quot;MethodAttributes&quot; href=&quot;&quot;> </xref>，和<xref uid=&quot;langword_csharp_MethodImplAttributes&quot; name=&quot;MethodImplAttributes&quot; href=&quot;&quot;></xref>做為搜尋準則，而其他兩個委派則使用<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>物件做為搜尋準則。"
    - id: filterCriteria
      type: System.Object
      description: "判斷是否要將成員傳回陣列中的搜尋準則<xref uid=&quot;langword_csharp_MemberInfo&quot; name=&quot;MemberInfo&quot; href=&quot;&quot;></xref>物件。       欄位的<xref uid=&quot;langword_csharp_FieldAttributes&quot; name=&quot;FieldAttributes&quot; href=&quot;&quot;> </xref>， <xref uid=&quot;langword_csharp_MethodAttributes&quot; name=&quot;MethodAttributes&quot; href=&quot;&quot;> </xref>，和<xref uid=&quot;langword_csharp_MethodImplAttributes&quot; name=&quot;MethodImplAttributes&quot; href=&quot;&quot;></xref>可以用於搭配<xref uid=&quot;langword_csharp_FilterAttribute&quot; name=&quot;FilterAttribute&quot; href=&quot;&quot;></xref>這個類別所提供的委派。"
    return:
      type: System.Reflection.MemberInfo[]
      description: "篩選的陣列<xref:System.Reflection.MemberInfo>指定的成員類型的物件。</xref:System.Reflection.MemberInfo>       -類型的空陣列<xref:System.Reflection.MemberInfo>，如果目前<xref:System.Type>沒有成員的型別<code> memberType </code>符合篩選條件。</xref:System.Type> </xref:System.Reflection.MemberInfo>"
  overload: System.Runtime.InteropServices._Type.FindMembers*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.FullName
  id: FullName
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: FullName
  nameWithType: _Type.FullName
  fullName: System.Runtime.InteropServices._Type.FullName
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權&lt;xref:System.Type.FullName%2A?displayProperty=fullName&gt;屬性。"
  remarks: "這個屬性會從 unmanaged 程式碼，是對存取 managed 類別，不應該從 managed 程式碼呼叫。       <xref:System.Type.FullName%2A?displayProperty=fullName>屬性會取得完整限定的名稱<xref:System.Type>，包括命名空間的<xref:System.Type>但不是組件。</xref:System.Type> </xref:System.Type> </xref:System.Type.FullName%2A?displayProperty=fullName>"
  syntax:
    content: public string FullName { get; }
    return:
      type: System.String
      description: "字串，包含完整限定的名稱<xref:System.Type>，包括命名空間的<xref:System.Type>但不是組件。</xref:System.Type> </xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.FullName*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetArrayRank
  id: GetArrayRank
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetArrayRank()
  nameWithType: _Type.GetArrayRank()
  fullName: System.Runtime.InteropServices._Type.GetArrayRank()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權&lt;xref:System.Type.GetArrayRank%2A?displayProperty=fullName&gt;方法。"
  remarks: "這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。       <xref:System.Type.GetArrayRank%2A?displayProperty=fullName>方法會取得<xref:System.Array>。</xref:System.Array>的維度數目</xref:System.Type.GetArrayRank%2A?displayProperty=fullName>"
  syntax:
    content: public int GetArrayRank ();
    parameters: []
    return:
      type: System.Int32
      description: "<xref:System.Int32>包含在目前<xref:System.Type>.</xref:System.Type>的維度數目</xref:System.Int32>"
  overload: System.Runtime.InteropServices._Type.GetArrayRank*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetConstructor(System.Type[])
  id: GetConstructor(System.Type[])
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetConstructor(Type[])
  nameWithType: _Type.GetConstructor(Type[])
  fullName: System.Runtime.InteropServices._Type.GetConstructor(Type[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權&lt;xref:System.Type.GetConstructor%2A?displayProperty=fullName&gt;方法。"
  remarks: "這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。       <xref:System.Type.GetConstructor%2A?displayProperty=fullName>方法會搜尋其參數符合指定的陣列中之類型的公用執行個體建構函式。</xref:System.Type.GetConstructor%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.ConstructorInfo GetConstructor (Type[] types);
    parameters:
    - id: types
      type: System.Type[]
      description: "陣列<xref:System.Type>數目、 順序和類型所需的建構函式的參數所代表的物件。</xref:System.Type>       -的空陣列<xref:System.Type>物件，若要取得不採用任何參數的建構函式。</xref:System.Type> 這類的空陣列由提供<xref uid=&quot;langword_csharp_static&quot; name=&quot;static&quot; href=&quot;&quot;></xref>欄位&lt;xref:System.Type?displayProperty=fullName&gt;。"
    return:
      type: System.Reflection.ConstructorInfo
      description: "A<xref:System.Reflection.ConstructorInfo>物件表示公用執行個體建構函式其參數符合參數類型陣列中的型別，如果找到則為<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。</xref:System.Reflection.ConstructorInfo>"
  overload: System.Runtime.InteropServices._Type.GetConstructor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])
  id: GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetConstructor(BindingFlags,Binder,Type[],ParameterModifier[])
  nameWithType: _Type.GetConstructor(BindingFlags,Binder,Type[],ParameterModifier[])
  fullName: System.Runtime.InteropServices._Type.GetConstructor(BindingFlags,Binder,Type[],ParameterModifier[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權&lt;xref:System.Type.GetConstructor%2A?displayProperty=fullName&gt;方法。"
  remarks: "這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。       <xref:System.Type.GetConstructor%2A?displayProperty=fullName>方法會搜尋其參數符合指定引數類型和修飾詞，使用指定的繫結條件約束的建構函式。</xref:System.Type.GetConstructor%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.ConstructorInfo GetConstructor (System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, Type[] types, System.Reflection.ParameterModifier[] modifiers);
    parameters:
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "位元遮罩，由一或多個<xref href=&quot;System.Reflection.BindingFlags&quot;></xref>旗標會指定執行搜尋的方式。       -或-零，傳回<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
    - id: binder
      type: System.Reflection.Binder
      description: "A <xref href=&quot;System.Reflection.Binder&quot;> </xref>物件，定義一組屬性並啟用繫結，可包含類型的強制引數，以及透過反映的成員引動過程多載方法的選擇。       -or-       <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, to use the <xref:System.Type.DefaultBinder*>.</xref:System.Type.DefaultBinder*>"
    - id: types
      type: System.Type[]
      description: "陣列<xref:System.Type>數目、 順序和類型的建構函式的參數，取得代表的物件。</xref:System.Type>       -類型的空陣列<xref:System.Type>(也就是，Type [] 類型 = new type [0 以取得不採用任何參數的建構函式。</xref:System.Type>       -or-       <xref:System.Type>.</xref:System.Type>"
    - id: modifiers
      type: System.Reflection.ParameterModifier[]
      description: "陣列<xref href=&quot;System.Reflection.ParameterModifier&quot;></xref>物件代表與參數類型陣列中對應的項目相關聯的屬性。 預設繫結器不會處理這個參數。"
    return:
      type: System.Reflection.ConstructorInfo
      description: "A<xref:System.Reflection.ConstructorInfo>物件，表示如果找到則為符合指定的需求的建構函式<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。</xref:System.Reflection.ConstructorInfo>"
  overload: System.Runtime.InteropServices._Type.GetConstructor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  id: GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetConstructor(BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])
  nameWithType: _Type.GetConstructor(BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])
  fullName: System.Runtime.InteropServices._Type.GetConstructor(BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權&lt;xref:System.Type.GetConstructor%2A?displayProperty=fullName&gt;方法。"
  remarks: "這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。       <xref:System.Type.GetConstructor%2A?displayProperty=fullName>方法會搜尋其參數符合指定引數類型和修飾詞，使用指定的繫結條件約束和指定的呼叫慣例的建構函式。</xref:System.Type.GetConstructor%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.ConstructorInfo GetConstructor (System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, System.Reflection.CallingConventions callConvention, Type[] types, System.Reflection.ParameterModifier[] modifiers);
    parameters:
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "位元遮罩，由一或多個<xref href=&quot;System.Reflection.BindingFlags&quot;></xref>旗標會指定執行搜尋的方式。       -或-零，傳回<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
    - id: binder
      type: System.Reflection.Binder
      description: "A <xref href=&quot;System.Reflection.Binder&quot;> </xref>物件，定義一組屬性並啟用繫結，可包含類型的強制引數，以及透過反映的成員引動過程多載方法的選擇。       -or-       <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, to use the <xref:System.Type.DefaultBinder*>.</xref:System.Type.DefaultBinder*>"
    - id: callConvention
      type: System.Reflection.CallingConventions
      description: "<xref:System.Reflection.CallingConventions>物件，指定要使用順序有關的規則集，並配置的引數，如何傳遞傳回值、 引數，使用哪些暫存器和堆疊已清除的。</xref:System.Reflection.CallingConventions>"
    - id: types
      type: System.Type[]
      description: "陣列<xref:System.Type>數目、 順序和類型的建構函式的參數，取得代表的物件。</xref:System.Type>       -類型的空陣列<xref:System.Type>(也就是，Type [] 類型 = new type [0 以取得不採用任何參數的建構函式。</xref:System.Type>"
    - id: modifiers
      type: System.Reflection.ParameterModifier[]
      description: "陣列<xref href=&quot;System.Reflection.ParameterModifier&quot;></xref>表示中的對應項目相關聯的屬性物件`types`陣列。 預設繫結器不會處理這個參數。"
    return:
      type: System.Reflection.ConstructorInfo
      description: "A<xref:System.Reflection.ConstructorInfo>物件，表示如果找到則為符合指定的需求的建構函式<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。</xref:System.Reflection.ConstructorInfo>"
  overload: System.Runtime.InteropServices._Type.GetConstructor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetConstructors
  id: GetConstructors
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetConstructors()
  nameWithType: _Type.GetConstructors()
  fullName: System.Runtime.InteropServices._Type.GetConstructors()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權&lt;xref:System.Type.GetConstructors%2A?displayProperty=fullName&gt;方法。"
  remarks: "這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。       <xref:System.Type.GetConstructors%2A?displayProperty=fullName>方法會傳回所有的公用建構函式定義給目前<xref:System.Type>.</xref:System.Type> </xref:System.Type.GetConstructors%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.ConstructorInfo[] GetConstructors ();
    parameters: []
    return:
      type: System.Reflection.ConstructorInfo[]
      description: "陣列<xref:System.Reflection.ConstructorInfo>代表所有公用執行個體建構函式定義給目前的物件<xref:System.Type>，但不是包括類型初始設定式 （靜態建構函式）。</xref:System.Type> </xref:System.Reflection.ConstructorInfo> 如果將任何公用執行個體建構函式定義給目前<xref:System.Type>，或者如果目前<xref:System.Type>表示泛型類型或泛型方法定義，類型的空陣列的型別參數<xref:System.Reflection.ConstructorInfo>傳回。</xref:System.Reflection.ConstructorInfo> </xref:System.Type> </xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.GetConstructors*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetConstructors(System.Reflection.BindingFlags)
  id: GetConstructors(System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetConstructors(BindingFlags)
  nameWithType: _Type.GetConstructors(BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetConstructors(BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權&lt;xref:System.Type.GetConstructors%2A?displayProperty=fullName&gt;方法。"
  remarks: "這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。       <xref:System.Type.GetConstructors%2A?displayProperty=fullName>方法會搜尋目前<xref:System.Type>，使用指定的<xref:System.Reflection.BindingFlags>.</xref:System.Reflection.BindingFlags></xref:System.Type>定義的建構函式</xref:System.Type.GetConstructors%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.ConstructorInfo[] GetConstructors (System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "位元遮罩，由一或多個<xref href=&quot;System.Reflection.BindingFlags&quot;></xref>旗標會指定執行搜尋的方式。       -或-零，傳回<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.Reflection.ConstructorInfo[]
      description: "陣列<xref:System.Reflection.ConstructorInfo>代表所有目前定義的建構函式物件<xref:System.Type>之符合指定的繫結條件約束，包括類型初始設定式，如果已定義。</xref:System.Type> </xref:System.Reflection.ConstructorInfo> 傳回類型的空陣列<xref:System.Reflection.ConstructorInfo>沒有建構函式所定義的目前<xref:System.Type>、 無一定義的建構函式符合繫結條件約束，或如果目前<xref:System.Type>表示泛型類型或泛型方法定義的型別參數。</xref:System.Type> </xref:System.Type> </xref:System.Reflection.ConstructorInfo>"
  overload: System.Runtime.InteropServices._Type.GetConstructors*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetCustomAttributes(System.Boolean)
  id: GetCustomAttributes(System.Boolean)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetCustomAttributes(Boolean)
  nameWithType: _Type.GetCustomAttributes(Boolean)
  fullName: System.Runtime.InteropServices._Type.GetCustomAttributes(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權&lt;xref:System.Reflection.Assembly.GetCustomAttributes%2A?displayProperty=fullName&gt;方法。"
  remarks: "這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。       <xref:System.Reflection.Assembly.GetCustomAttributes%2A?displayProperty=fullName>方法會傳回所有套用至這個成員的屬性。</xref:System.Reflection.Assembly.GetCustomAttributes%2A?displayProperty=fullName>"
  syntax:
    content: public object[] GetCustomAttributes (bool inherit);
    parameters:
    - id: inherit
      type: System.Boolean
      description: "指定是否要搜尋這個成員的繼承鏈結以尋找屬性。"
    return:
      type: System.Object[]
      description: "陣列的自訂屬性套用至這個成員或如果沒有屬性已套用零 (0) 元素的陣列。"
  overload: System.Runtime.InteropServices._Type.GetCustomAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetCustomAttributes(System.Type,System.Boolean)
  id: GetCustomAttributes(System.Type,System.Boolean)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetCustomAttributes(Type,Boolean)
  nameWithType: _Type.GetCustomAttributes(Type,Boolean)
  fullName: System.Runtime.InteropServices._Type.GetCustomAttributes(Type,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權&lt;xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=fullName&gt;方法。"
  remarks: "這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。       <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=fullName>方法會傳回所有套用至這個成員的屬性。</xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=fullName>"
  syntax:
    content: public object[] GetCustomAttributes (Type attributeType, bool inherit);
    parameters:
    - id: attributeType
      type: System.Type
      description: "要搜尋的屬性類型。 會傳回可指派給這個類型的屬性。"
    - id: inherit
      type: System.Boolean
      description: "指定是否要搜尋這個成員的繼承鏈結以尋找屬性。"
    return:
      type: System.Object[]
      description: "陣列的自訂屬性套用至這個成員或如果沒有屬性已套用零 (0) 元素的陣列。"
  overload: System.Runtime.InteropServices._Type.GetCustomAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetDefaultMembers
  id: GetDefaultMembers
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetDefaultMembers()
  nameWithType: _Type.GetDefaultMembers()
  fullName: System.Runtime.InteropServices._Type.GetDefaultMembers()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權&lt;xref:System.Type.GetDefaultMembers%2A?displayProperty=fullName&gt;方法。"
  remarks: "這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。       <xref:System.Type.GetDefaultMembers%2A?displayProperty=fullName>方法搜尋定義給目前的成員<xref:System.Type>其<xref:System.Reflection.DefaultMemberAttribute>設定。</xref:System.Reflection.DefaultMemberAttribute> </xref:System.Type> </xref:System.Type.GetDefaultMembers%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.MemberInfo[] GetDefaultMembers ();
    parameters: []
    return:
      type: System.Reflection.MemberInfo[]
      description: "陣列的<xref:System.Reflection.MemberInfo>物件代表目前<xref:System.Type>.</xref:System.Type>的所有預設成員</xref:System.Reflection.MemberInfo>       -類型的空陣列<xref:System.Reflection.MemberInfo>，如果目前<xref:System.Type>沒有預設成員。</xref:System.Type> </xref:System.Reflection.MemberInfo>"
  overload: System.Runtime.InteropServices._Type.GetDefaultMembers*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetElementType
  id: GetElementType
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetElementType()
  nameWithType: _Type.GetElementType()
  fullName: System.Runtime.InteropServices._Type.GetElementType()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權&lt;xref:System.Type.GetElementType%2A?displayProperty=fullName&gt;方法。"
  remarks: "這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。       <xref:System.Type.GetElementType%2A?displayProperty=fullName>方法會傳回<xref:System.Type>所內含或參考目前的陣列、 指標或參考類型的物件。</xref:System.Type> </xref:System.Type.GetElementType%2A?displayProperty=fullName>"
  syntax:
    content: public Type GetElementType ();
    parameters: []
    return:
      type: System.Type
      description: "<xref:System.Type>所內含或參考目前的陣列、 指標或參考類型的物件。</xref:System.Type>       - <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>如果目前<xref:System.Type>不是陣列或指標、 或不由參考傳遞，或表示泛型類型或泛型類型或泛型方法定義的型別參數。</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.GetElementType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetEvent(System.String)
  id: GetEvent(System.String)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetEvent(String)
  nameWithType: _Type.GetEvent(String)
  fullName: System.Runtime.InteropServices._Type.GetEvent(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權&lt;xref:System.Type.GetEvent%2A?displayProperty=fullName&gt;方法。"
  remarks: "這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。       <xref:System.Type.GetEvent%2A?displayProperty=fullName>方法所宣告或繼承目前的事件會搜尋<xref:System.Type>，使用指定的繫結條件約束。</xref:System.Type> </xref:System.Type.GetEvent%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.EventInfo GetEvent (string name);
    parameters:
    - id: name
      type: System.String
      description: "位元遮罩，由一或多個<xref href=&quot;System.Reflection.BindingFlags&quot;></xref>旗標會指定執行搜尋的方式。       -或-零，傳回<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.Reflection.EventInfo
      description: "陣列<xref:System.Reflection.EventInfo>物件，代表所宣告或繼承目前的所有事件<xref:System.Type>之符合指定的繫結條件約束。</xref:System.Type> </xref:System.Reflection.EventInfo>       -類型的空陣列<xref:System.Reflection.EventInfo>，如果目前<xref:System.Type>沒有事件，或沒有事件符合繫結條件約束。</xref:System.Type> </xref:System.Reflection.EventInfo>"
  overload: System.Runtime.InteropServices._Type.GetEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetEvent(System.String,System.Reflection.BindingFlags)
  id: GetEvent(System.String,System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetEvent(String,BindingFlags)
  nameWithType: _Type.GetEvent(String,BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetEvent(String,BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權&lt;xref:System.Type.GetEvent%2A?displayProperty=fullName&gt;方法。"
  remarks: "這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。       <xref:System.Type.GetEvent%2A?displayProperty=fullName>方法會傳回<xref:System.Reflection.EventInfo>物件，表示指定的事件，並使用指定的繫結條件約束。</xref:System.Reflection.EventInfo> </xref:System.Type.GetEvent%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.EventInfo GetEvent (string name, System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: name
      type: System.String
      description: "<xref:System.String>包含的事件所宣告或繼承目前<xref:System.Type>.</xref:System.Type>名稱</xref:System.String>"
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "位元遮罩，由一或多個<xref href=&quot;System.Reflection.BindingFlags&quot;></xref>旗標會指定執行搜尋的方式。       -或-零，傳回<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.Reflection.EventInfo
      description: "<xref:System.Reflection.EventInfo>物件，表示指定的事件所宣告或繼承目前<xref:System.Type>，如果找到則為<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。</xref:System.Type> </xref:System.Reflection.EventInfo>"
  overload: System.Runtime.InteropServices._Type.GetEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetEvents
  id: GetEvents
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetEvents()
  nameWithType: _Type.GetEvents()
  fullName: System.Runtime.InteropServices._Type.GetEvents()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權&lt;xref:System.Type.GetEvents%2A?displayProperty=fullName&gt;方法。"
  remarks: "這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。       <xref:System.Type.GetEvents%2A?displayProperty=fullName>方法會傳回所有公用事件，所宣告或繼承目前<xref:System.Type>.</xref:System.Type> </xref:System.Type.GetEvents%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.EventInfo[] GetEvents ();
    parameters: []
    return:
      type: System.Reflection.EventInfo[]
      description: "陣列的<xref:System.Reflection.EventInfo>物件表示的所有公用事件，所宣告或繼承目前<xref:System.Type>.</xref:System.Type> </xref:System.Reflection.EventInfo>       -類型的空陣列<xref:System.Reflection.EventInfo>，如果目前<xref:System.Type>沒有公用事件。</xref:System.Type> </xref:System.Reflection.EventInfo>"
  overload: System.Runtime.InteropServices._Type.GetEvents*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetEvents(System.Reflection.BindingFlags)
  id: GetEvents(System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetEvents(BindingFlags)
  nameWithType: _Type.GetEvents(BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetEvents(BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權&lt;xref:System.Type.GetEvents%2A?displayProperty=fullName&gt;方法。"
  remarks: "這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。       <xref:System.Type.GetEvents%2A?displayProperty=fullName>方法所宣告或繼承目前的事件會搜尋<xref:System.Type>，使用指定的繫結條件約束。</xref:System.Type> </xref:System.Type.GetEvents%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.EventInfo[] GetEvents (System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "位元遮罩，由一或多個<xref href=&quot;System.Reflection.BindingFlags&quot;></xref>旗標會指定執行搜尋的方式。       -或-零，傳回<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.Reflection.EventInfo[]
      description: "陣列<xref:System.Reflection.EventInfo>物件，代表所宣告或繼承目前的所有事件<xref:System.Type>之符合指定的繫結條件約束。</xref:System.Type> </xref:System.Reflection.EventInfo>       -類型的空陣列<xref:System.Reflection.EventInfo>，如果目前<xref:System.Type>沒有事件，或沒有事件符合繫結條件約束。</xref:System.Type> </xref:System.Reflection.EventInfo>"
  overload: System.Runtime.InteropServices._Type.GetEvents*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetField(System.String)
  id: GetField(System.String)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetField(String)
  nameWithType: _Type.GetField(String)
  fullName: System.Runtime.InteropServices._Type.GetField(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權&lt;xref:System.Type.GetField%2A?displayProperty=fullName&gt;方法。"
  remarks: "這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。       <xref:System.Type.GetField%2A?displayProperty=fullName>方法會搜尋具有指定名稱的公用欄位。</xref:System.Type.GetField%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.FieldInfo GetField (string name);
    parameters:
    - id: name
      type: System.String
      description: "<xref:System.String>包含要取得的資料欄位的名稱。</xref:System.String>"
    return:
      type: System.Reflection.FieldInfo
      description: "A<xref:System.Reflection.FieldInfo>物件，代表具有指定之名稱的公用欄位，如果找到則為<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。</xref:System.Reflection.FieldInfo>"
  overload: System.Runtime.InteropServices._Type.GetField*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetField(System.String,System.Reflection.BindingFlags)
  id: GetField(System.String,System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetField(String,BindingFlags)
  nameWithType: _Type.GetField(String,BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetField(String,BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權&lt;xref:System.Type.GetField%2A?displayProperty=fullName&gt;方法。"
  remarks: "這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。       <xref:System.Type.GetField%2A?displayProperty=fullName>方法會搜尋指定的欄位，使用指定的繫結條件約束。</xref:System.Type.GetField%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.FieldInfo GetField (string name, System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: name
      type: System.String
      description: "<xref:System.String>包含要取得的資料欄位的名稱。</xref:System.String>"
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "位元遮罩，由一或多個<xref href=&quot;System.Reflection.BindingFlags&quot;></xref>旗標會指定執行搜尋的方式。       -或-零，傳回<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.Reflection.FieldInfo
      description: "A<xref:System.Reflection.FieldInfo>物件，代表符合指定之需求，如果找到則為欄位<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。</xref:System.Reflection.FieldInfo>"
  overload: System.Runtime.InteropServices._Type.GetField*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetFields
  id: GetFields
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetFields()
  nameWithType: _Type.GetFields()
  fullName: System.Runtime.InteropServices._Type.GetFields()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權&lt;xref:System.Type.GetFields%2A?displayProperty=fullName&gt;方法。"
  remarks: "這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。       <xref:System.Type.GetFields%2A?displayProperty=fullName>方法會傳回目前<xref:System.Type>.</xref:System.Type>的所有公用欄位</xref:System.Type.GetFields%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.FieldInfo[] GetFields ();
    parameters: []
    return:
      type: System.Reflection.FieldInfo[]
      description: "陣列的<xref:System.Reflection.FieldInfo>物件，代表所有公用欄位定義給目前<xref:System.Type>.</xref:System.Type> </xref:System.Reflection.FieldInfo>       -或者-的空陣列類型<xref:System.Reflection.FieldInfo>、 目前<xref:System.Type>.</xref:System.Type>如果未定義任何公用欄位</xref:System.Reflection.FieldInfo>"
  overload: System.Runtime.InteropServices._Type.GetFields*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetFields(System.Reflection.BindingFlags)
  id: GetFields(System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetFields(BindingFlags)
  nameWithType: _Type.GetFields(BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetFields(BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權&lt;xref:System.Type.GetFields%2A?displayProperty=fullName&gt;方法。"
  remarks: "這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。       <xref:System.Type.GetFields%2A?displayProperty=fullName>方法搜尋的欄位定義給目前<xref:System.Type>，使用指定的繫結條件約束。</xref:System.Type> </xref:System.Type.GetFields%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.FieldInfo[] GetFields (System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "位元遮罩，由一或多個<xref href=&quot;System.Reflection.BindingFlags&quot;></xref>旗標會指定執行搜尋的方式。       -或-零，傳回<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.Reflection.FieldInfo[]
      description: "陣列<xref:System.Reflection.FieldInfo>代表所有欄位定義給目前的物件<xref:System.Type>之符合指定的繫結條件約束。</xref:System.Type> </xref:System.Reflection.FieldInfo>       -類型的空陣列<xref:System.Reflection.FieldInfo>，如果目前未不定義任何欄位<xref:System.Type>，或沒有已定義的欄位符合繫結條件約束。</xref:System.Type> </xref:System.Reflection.FieldInfo>"
  overload: System.Runtime.InteropServices._Type.GetFields*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetHashCode
  id: GetHashCode
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: _Type.GetHashCode()
  fullName: System.Runtime.InteropServices._Type.GetHashCode()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權&lt;xref:System.Type.GetHashCode%2A?displayProperty=fullName&gt;方法。"
  remarks: "這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。       <xref:System.Type.GetHashCode%2A?displayProperty=fullName>方法。</xref:System.Type.GetHashCode%2A?displayProperty=fullName>"
  syntax:
    content: public int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "<xref:System.Int32>包含這個執行個體的雜湊碼。</xref:System.Int32>"
  overload: System.Runtime.InteropServices._Type.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  id: GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  nameWithType: _Type.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  fullName: System.Runtime.InteropServices._Type.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "將一組名稱對應至一組對應的分派識別項。"
  remarks: "這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。 如需有關`IDispatch::GetIDsOfNames`，請參閱 MSDN Library。"
  syntax:
    content: public void GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);
    parameters:
    - id: riid
      type: System.Guid
      description: "保留供將來使用。 必須是 IID_NULL。"
    - id: rgszNames
      type: System.IntPtr
      description: "傳入的對應名稱的陣列。"
    - id: cNames
      type: System.UInt32
      description: "要對應的名稱計數。"
    - id: lcid
      type: System.UInt32
      description: "地區設定內容，用於解譯名稱。"
    - id: rgDispId
      type: System.IntPtr
      description: "呼叫端配置的陣列，用於接收對應於名稱的 Id。"
  overload: System.Runtime.InteropServices._Type.GetIDsOfNames*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetInterface(System.String)
  id: GetInterface(System.String)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetInterface(String)
  nameWithType: _Type.GetInterface(String)
  fullName: System.Runtime.InteropServices._Type.GetInterface(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權&lt;xref:System.Type.GetInterface%2A?displayProperty=fullName&gt;方法。"
  remarks: "這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。       <xref:System.Type.GetInterface%2A?displayProperty=fullName>方法會搜尋具有指定的名稱..的介面</xref:System.Type.GetInterface%2A?displayProperty=fullName>"
  syntax:
    content: public Type GetInterface (string name);
    parameters:
    - id: name
      type: System.String
      description: "<xref:System.String>包含要取得的介面名稱。</xref:System.String> 若為泛型介面，這是為 mangled 的名稱。"
    return:
      type: System.Type
      description: "A<xref:System.Type>物件代表具有指定之名稱的介面所實作或繼承目前<xref:System.Type>，如果找到則為<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。</xref:System.Type> </xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.GetInterface*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetInterface(System.String,System.Boolean)
  id: GetInterface(System.String,System.Boolean)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetInterface(String,Boolean)
  nameWithType: _Type.GetInterface(String,Boolean)
  fullName: System.Runtime.InteropServices._Type.GetInterface(String,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權&lt;xref:System.Type.GetInterface%2A?displayProperty=fullName&gt;方法。"
  remarks: "這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。       <xref:System.Type.GetInterface%2A?displayProperty=fullName>方法會搜尋指定的介面，指定是否執行區分大小寫的搜尋。</xref:System.Type.GetInterface%2A?displayProperty=fullName>"
  syntax:
    content: public Type GetInterface (string name, bool ignoreCase);
    parameters:
    - id: name
      type: System.String
      description: "<xref:System.String>包含要取得的介面名稱。</xref:System.String> 若為泛型介面，這是為 mangled 的名稱。"
    - id: ignoreCase
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要執行不區分大小寫的搜尋`name`。       - <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>執行區分大小寫的搜尋`name`。"
    return:
      type: System.Type
      description: "A<xref:System.Type>物件代表具有指定之名稱的介面所實作或繼承目前<xref:System.Type>，如果找到則為<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。</xref:System.Type> </xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.GetInterface*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetInterfaceMap(System.Type)
  id: GetInterfaceMap(System.Type)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetInterfaceMap(Type)
  nameWithType: _Type.GetInterfaceMap(Type)
  fullName: System.Runtime.InteropServices._Type.GetInterfaceMap(Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權&lt;xref:System.Type.GetInterfaceMap%2A?displayProperty=fullName&gt;方法。"
  remarks: "這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。       <xref:System.Type.GetInterfaceMap%2A?displayProperty=fullName>方法會傳回指定的介面類型的介面對應。</xref:System.Type.GetInterfaceMap%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.InterfaceMapping GetInterfaceMap (Type interfaceType);
    parameters:
    - id: interfaceType
      type: System.Type
      description: "<xref:System.Type>要擷取對應的介面。</xref:System.Type>"
    return:
      type: System.Reflection.InterfaceMapping
      description: "<xref:System.Reflection.InterfaceMapping>物件，代表的介面對應<code> interfaceType </code>。</xref:System.Reflection.InterfaceMapping>"
  overload: System.Runtime.InteropServices._Type.GetInterfaceMap*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetInterfaces
  id: GetInterfaces
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetInterfaces()
  nameWithType: _Type.GetInterfaces()
  fullName: System.Runtime.InteropServices._Type.GetInterfaces()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權&lt;xref:System.Type.GetInterfaces%2A?displayProperty=fullName&gt;方法。"
  remarks: "這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。       <xref:System.Type.GetInterfaces%2A?displayProperty=fullName>方法會取得目前<xref:System.Type>.</xref:System.Type>所實作或繼承的所有介面</xref:System.Type.GetInterfaces%2A?displayProperty=fullName>都"
  syntax:
    content: public Type[] GetInterfaces ();
    parameters: []
    return:
      type: System.Type[]
      description: "陣列的<xref:System.Type>物件代表目前<xref:System.Type>.</xref:System.Type>所實作或繼承的所有介面</xref:System.Type>       -或者-空的陣列型別<xref:System.Type>，如果實作或繼承目前<xref:System.Type>.</xref:System.Type>沒有介面</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.GetInterfaces*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetMember(System.String)
  id: GetMember(System.String)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetMember(String)
  nameWithType: _Type.GetMember(String)
  fullName: System.Runtime.InteropServices._Type.GetMember(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權&lt;xref:System.Type.GetMember%2A?displayProperty=fullName&gt;方法。"
  remarks: "這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。       <xref:System.Type.GetMember%2A?displayProperty=fullName>方法會搜尋具有指定名稱的公用成員。</xref:System.Type.GetMember%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.MemberInfo[] GetMember (string name);
    parameters:
    - id: name
      type: System.String
      description: "<xref:System.String>包含要取得之公用成員名稱。</xref:System.String>"
    return:
      type: System.Reflection.MemberInfo[]
      description: "陣列<xref:System.Reflection.MemberInfo>物件，代表具有指定之名稱的公用成員，如果找到，則為、 為空陣列。</xref:System.Reflection.MemberInfo>"
  overload: System.Runtime.InteropServices._Type.GetMember*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetMember(System.String,System.Reflection.BindingFlags)
  id: GetMember(System.String,System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetMember(String,BindingFlags)
  nameWithType: _Type.GetMember(String,BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetMember(String,BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權&lt;xref:System.Type.GetMember%2A?displayProperty=fullName&gt;方法。"
  remarks: "這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。       <xref:System.Type.GetMember%2A?displayProperty=fullName>方法會搜尋指定的成員，使用指定的繫結條件約束。</xref:System.Type.GetMember%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.MemberInfo[] GetMember (string name, System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: name
      type: System.String
      description: "<xref:System.String>包含要取得之成員的名稱。</xref:System.String>"
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "位元遮罩，由一或多個<xref href=&quot;System.Reflection.BindingFlags&quot;></xref>旗標會指定執行搜尋的方式。       -或者-零，傳回空陣列。"
    return:
      type: System.Reflection.MemberInfo[]
      description: "陣列<xref:System.Reflection.MemberInfo>物件，代表具有指定之名稱的公用成員，如果找到，則為、 為空陣列。</xref:System.Reflection.MemberInfo>"
  overload: System.Runtime.InteropServices._Type.GetMember*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)
  id: GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetMember(String,MemberTypes,BindingFlags)
  nameWithType: _Type.GetMember(String,MemberTypes,BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetMember(String,MemberTypes,BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權&lt;xref:System.Type.GetMember%2A?displayProperty=fullName&gt;方法。"
  remarks: "這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。       <xref:System.Type.GetMember%2A?displayProperty=fullName>方法會搜尋指定的成員類型，使用指定的繫結條件約束的指定成員。</xref:System.Type.GetMember%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.MemberInfo[] GetMember (string name, System.Reflection.MemberTypes type, System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: name
      type: System.String
      description: "<xref:System.String>包含要取得之成員的名稱。</xref:System.String>"
    - id: type
      type: System.Reflection.MemberTypes
      description: "<xref href=&quot;System.Reflection.MemberTypes&quot;> </xref>来搜尋的值。"
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "位元遮罩，由一或多個<xref href=&quot;System.Reflection.BindingFlags&quot;></xref>旗標會指定執行搜尋的方式。       -或者-零，傳回空陣列。"
    return:
      type: System.Reflection.MemberInfo[]
      description: "陣列<xref:System.Reflection.MemberInfo>物件，代表具有指定之名稱的公用成員，如果找到，則為、 為空陣列。</xref:System.Reflection.MemberInfo>"
  overload: System.Runtime.InteropServices._Type.GetMember*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetMembers
  id: GetMembers
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetMembers()
  nameWithType: _Type.GetMembers()
  fullName: System.Runtime.InteropServices._Type.GetMembers()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權&lt;xref:System.Type.GetMembers%2A?displayProperty=fullName&gt;方法。"
  remarks: "這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。       <xref:System.Type.GetMembers%2A?displayProperty=fullName>方法會傳回所有目前<xref:System.Type>.</xref:System.Type>的 public 成員</xref:System.Type.GetMembers%2A?displayProperty=fullName>都"
  syntax:
    content: public System.Reflection.MemberInfo[] GetMembers ();
    parameters: []
    return:
      type: System.Reflection.MemberInfo[]
      description: "陣列的<xref:System.Reflection.MemberInfo>物件代表目前<xref:System.Type>.</xref:System.Type>的所有公用成員</xref:System.Reflection.MemberInfo>       -類型的空陣列<xref:System.Reflection.MemberInfo>，如果目前<xref:System.Type>沒有公用成員。</xref:System.Type> </xref:System.Reflection.MemberInfo>"
  overload: System.Runtime.InteropServices._Type.GetMembers*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetMembers(System.Reflection.BindingFlags)
  id: GetMembers(System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetMembers(BindingFlags)
  nameWithType: _Type.GetMembers(BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetMembers(BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權&lt;xref:System.Type.GetMembers%2A?displayProperty=fullName&gt;方法。"
  remarks: "這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。       <xref:System.Type.GetMembers%2A?displayProperty=fullName>方法搜尋定義給目前的成員<xref:System.Type>，使用指定的繫結條件約束。</xref:System.Type> </xref:System.Type.GetMembers%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.MemberInfo[] GetMembers (System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "位元遮罩，由一或多個<xref href=&quot;System.Reflection.BindingFlags&quot;></xref>旗標會指定執行搜尋的方式。       -或-零，傳回<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.Reflection.MemberInfo[]
      description: "陣列<xref:System.Reflection.MemberInfo>物件代表目前定義的所有成員<xref:System.Type>之符合指定的繫結條件約束。</xref:System.Type> </xref:System.Reflection.MemberInfo>       -類型的空陣列<xref:System.Reflection.MemberInfo>，如果任何成員不定義給目前<xref:System.Type>，或沒有已定義的成員符合繫結條件約束。</xref:System.Type> </xref:System.Reflection.MemberInfo>"
  overload: System.Runtime.InteropServices._Type.GetMembers*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetMethod(System.String)
  id: GetMethod(System.String)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetMethod(String)
  nameWithType: _Type.GetMethod(String)
  fullName: System.Runtime.InteropServices._Type.GetMethod(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權&lt;xref:System.Type.GetMethod%2A?displayProperty=fullName&gt;方法。"
  remarks: "這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。       <xref:System.Type.GetMethod%2A?displayProperty=fullName>方法會搜尋具有指定的名稱..的公用方法</xref:System.Type.GetMethod%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.MethodInfo GetMethod (string name);
    parameters:
    - id: name
      type: System.String
      description: "<xref:System.String>包含要取得的公用方法名稱。</xref:System.String>"
    return:
      type: System.Reflection.MethodInfo
      description: "A<xref:System.Reflection.MethodInfo>物件，代表具有指定之名稱的公用方法，如果找到則為<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。</xref:System.Reflection.MethodInfo>"
  overload: System.Runtime.InteropServices._Type.GetMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags)
  id: GetMethod(System.String,System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetMethod(String,BindingFlags)
  nameWithType: _Type.GetMethod(String,BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetMethod(String,BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權&lt;xref:System.Type.GetMethod%2A?displayProperty=fullName&gt;方法。"
  remarks: "這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。       <xref:System.Type.GetMethod%2A?displayProperty=fullName>方法會搜尋指定的方法，使用指定的繫結條件約束。</xref:System.Type.GetMethod%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.MethodInfo GetMethod (string name, System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: name
      type: System.String
      description: "<xref:System.String>包含要取得之方法的名稱。</xref:System.String>"
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "位元遮罩，由一或多個<xref href=&quot;System.Reflection.BindingFlags&quot;></xref>旗標會指定執行搜尋的方式。       -或-零，傳回<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.Reflection.MethodInfo
      description: "A<xref:System.Reflection.MethodInfo>物件，代表符合指定之需求，如果找到則為方法<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。</xref:System.Reflection.MethodInfo>"
  overload: System.Runtime.InteropServices._Type.GetMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetMethod(System.String,System.Type[])
  id: GetMethod(System.String,System.Type[])
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetMethod(String,Type[])
  nameWithType: _Type.GetMethod(String,Type[])
  fullName: System.Runtime.InteropServices._Type.GetMethod(String,Type[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權&lt;xref:System.Type.GetMethod%2A?displayProperty=fullName&gt;方法。"
  remarks: "這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。       <xref:System.Type.GetMethod%2A?displayProperty=fullName>方法會搜尋指定的公用方法，其參數符合指定的引數類型。</xref:System.Type.GetMethod%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.MethodInfo GetMethod (string name, Type[] types);
    parameters:
    - id: name
      type: System.String
      description: "<xref:System.String>包含要取得的公用方法名稱。</xref:System.String>"
    - id: types
      type: System.Type[]
      description: "陣列<xref:System.Type>代表數目、 順序和方法參數的類型，若要取得的物件。</xref:System.Type>       -類型的空陣列<xref:System.Type>(也就是，Type [] 類型 = new type [0 用以取得沒有參數的方法。</xref:System.Type>"
    return:
      type: System.Reflection.MethodInfo
      description: "A<xref:System.Reflection.MethodInfo>代表其參數符合指定的引數類型，如果找到則為公用方法物件<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。</xref:System.Reflection.MethodInfo>"
  overload: System.Runtime.InteropServices._Type.GetMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetMethod(System.String,System.Type[],System.Reflection.ParameterModifier[])
  id: GetMethod(System.String,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetMethod(String,Type[],ParameterModifier[])
  nameWithType: _Type.GetMethod(String,Type[],ParameterModifier[])
  fullName: System.Runtime.InteropServices._Type.GetMethod(String,Type[],ParameterModifier[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權&lt;xref:System.Type.GetMethod%2A?displayProperty=fullName&gt;方法。"
  remarks: "這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。       <xref:System.Type.GetMethod%2A?displayProperty=fullName>方法會搜尋指定的公用方法，其參數符合指定引數類型和修飾詞。</xref:System.Type.GetMethod%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.MethodInfo GetMethod (string name, Type[] types, System.Reflection.ParameterModifier[] modifiers);
    parameters:
    - id: name
      type: System.String
      description: "<xref:System.String>包含要取得的公用方法名稱。</xref:System.String>"
    - id: types
      type: System.Type[]
      description: "陣列<xref:System.Type>代表數目、 順序和方法參數的類型，若要取得的物件。</xref:System.Type>       -類型的空陣列<xref:System.Type>(也就是，Type [] 類型 = new type [0 用以取得沒有參數的方法。</xref:System.Type>"
    - id: modifiers
      type: System.Reflection.ParameterModifier[]
      description: "陣列<xref href=&quot;System.Reflection.ParameterModifier&quot;></xref>表示中的對應項目相關聯的屬性物件`types`陣列。 預設繫結器不會處理這個參數。"
    return:
      type: System.Reflection.MethodInfo
      description: "A<xref:System.Reflection.MethodInfo>物件，表示如果找到則為符合指定的需求的公用方法<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。</xref:System.Reflection.MethodInfo>"
  overload: System.Runtime.InteropServices._Type.GetMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])
  id: GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetMethod(String,BindingFlags,Binder,Type[],ParameterModifier[])
  nameWithType: _Type.GetMethod(String,BindingFlags,Binder,Type[],ParameterModifier[])
  fullName: System.Runtime.InteropServices._Type.GetMethod(String,BindingFlags,Binder,Type[],ParameterModifier[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權&lt;xref:System.Type.GetMethod%2A?displayProperty=fullName&gt;方法。"
  remarks: "這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。       <xref:System.Type.GetMethod%2A?displayProperty=fullName>方法會搜尋指定的方法，而該方法的參數符合指定引數類型和修飾詞，使用指定的繫結條件約束。</xref:System.Type.GetMethod%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.MethodInfo GetMethod (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, Type[] types, System.Reflection.ParameterModifier[] modifiers);
    parameters:
    - id: name
      type: System.String
      description: "<xref:System.String>包含要取得之方法的名稱。</xref:System.String>"
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "位元遮罩，由一或多個<xref href=&quot;System.Reflection.BindingFlags&quot;></xref>旗標會指定執行搜尋的方式。       -或-零，傳回<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
    - id: binder
      type: System.Reflection.Binder
      description: "A <xref href=&quot;System.Reflection.Binder&quot;> </xref>物件，定義一組屬性並啟用繫結，可包含類型的強制引數，以及透過反映的成員引動過程多載方法的選擇。       -or-       <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, to use the <xref:System.Type.DefaultBinder*>.</xref:System.Type.DefaultBinder*>"
    - id: types
      type: System.Type[]
      description: "陣列<xref:System.Type>代表數目、 順序和方法參數的類型，若要取得的物件。</xref:System.Type>       -類型的空陣列<xref:System.Type>(也就是，Type [] 類型 = new type [0 用以取得沒有參數的方法。</xref:System.Type>"
    - id: modifiers
      type: System.Reflection.ParameterModifier[]
      description: "陣列<xref href=&quot;System.Reflection.ParameterModifier&quot;></xref>表示中的對應項目相關聯的屬性物件`types`陣列。 預設繫結器不會處理這個參數。"
    return:
      type: System.Reflection.MethodInfo
      description: "A<xref:System.Reflection.MethodInfo>物件，代表符合指定之需求，如果找到則為方法<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。</xref:System.Reflection.MethodInfo>"
  overload: System.Runtime.InteropServices._Type.GetMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  id: GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetMethod(String,BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])
  nameWithType: _Type.GetMethod(String,BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])
  fullName: System.Runtime.InteropServices._Type.GetMethod(String,BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權&lt;xref:System.Type.GetMethod%2A?displayProperty=fullName&gt;方法。"
  remarks: "這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。       <xref:System.Type.GetMethod%2A?displayProperty=fullName>方法會搜尋指定的參數符合指定引數類型和修飾詞，使用指定的繫結條件約束和指定的呼叫慣例的方法。</xref:System.Type.GetMethod%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.MethodInfo GetMethod (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, System.Reflection.CallingConventions callConvention, Type[] types, System.Reflection.ParameterModifier[] modifiers);
    parameters:
    - id: name
      type: System.String
      description: "<xref:System.String>包含要取得之方法的名稱。</xref:System.String>"
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "位元遮罩，由一或多個<xref href=&quot;System.Reflection.BindingFlags&quot;></xref>旗標會指定執行搜尋的方式。       -或-零，傳回<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
    - id: binder
      type: System.Reflection.Binder
      description: "A <xref href=&quot;System.Reflection.Binder&quot;> </xref>物件，定義一組屬性並啟用繫結，可包含類型的強制引數，以及透過反映的成員引動過程多載方法的選擇。       -or-       <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, to use the <xref:System.Type.DefaultBinder*>.</xref:System.Type.DefaultBinder*>"
    - id: callConvention
      type: System.Reflection.CallingConventions
      description: "<xref:System.Reflection.CallingConventions>物件，指定要使用的順序和配置的引數、 如何傳遞傳回值、 引數，使用哪些暫存器以及如何堆疊已清理的相關的規則集</xref:System.Reflection.CallingConventions>"
    - id: types
      type: System.Type[]
      description: "陣列<xref:System.Type>代表數目、 順序和方法參數的類型，若要取得的物件。</xref:System.Type>       -類型的空陣列<xref:System.Type>(也就是，Type [] 類型 = new type [0 用以取得沒有參數的方法。</xref:System.Type>"
    - id: modifiers
      type: System.Reflection.ParameterModifier[]
      description: "陣列<xref href=&quot;System.Reflection.ParameterModifier&quot;></xref>表示中的對應項目相關聯的屬性物件`types`陣列。 預設繫結器不會處理這個參數。"
    return:
      type: System.Reflection.MethodInfo
      description: "A<xref:System.Reflection.MethodInfo>物件，代表符合指定之需求，如果找到則為方法<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。</xref:System.Reflection.MethodInfo>"
  overload: System.Runtime.InteropServices._Type.GetMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetMethods
  id: GetMethods
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetMethods()
  nameWithType: _Type.GetMethods()
  fullName: System.Runtime.InteropServices._Type.GetMethods()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權&lt;xref:System.Type.GetMethods%2A?displayProperty=fullName&gt;方法。"
  remarks: "這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。       <xref:System.Type.GetMethods%2A?displayProperty=fullName>方法會傳回目前<xref:System.Type>.</xref:System.Type>的所有公用方法</xref:System.Type.GetMethods%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.MethodInfo[] GetMethods ();
    parameters: []
    return:
      type: System.Reflection.MethodInfo[]
      description: "陣列，<xref:System.Reflection.MethodInfo>代表所有公用方法的物件定義給目前<xref:System.Type>.</xref:System.Type> </xref:System.Reflection.MethodInfo>       -或者-空的陣列型別<xref:System.Reflection.MethodInfo>，如果目前<xref:System.Type>.</xref:System.Type>定義任何公用方法</xref:System.Reflection.MethodInfo>"
  overload: System.Runtime.InteropServices._Type.GetMethods*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetMethods(System.Reflection.BindingFlags)
  id: GetMethods(System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetMethods(BindingFlags)
  nameWithType: _Type.GetMethods(BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetMethods(BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權&lt;xref:System.Type.GetMethods%2A?displayProperty=fullName&gt;方法。"
  remarks: "這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。       <xref:System.Type.GetMethods%2A?displayProperty=fullName>方法搜尋定義給目前的方法<xref:System.Type>，使用指定的繫結條件約束。</xref:System.Type> </xref:System.Type.GetMethods%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.MethodInfo[] GetMethods (System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "位元遮罩，由一或多個<xref href=&quot;System.Reflection.BindingFlags&quot;></xref>旗標會指定執行搜尋的方式。       -或-零，傳回<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.Reflection.MethodInfo[]
      description: "陣列<xref:System.Reflection.MethodInfo>物件代表目前定義的所有方法<xref:System.Type>之符合指定的繫結條件約束。</xref:System.Type> </xref:System.Reflection.MethodInfo>       -類型的空陣列<xref:System.Reflection.MethodInfo>，如果目前未不定義任何方法<xref:System.Type>，或沒有已定義的方法符合繫結條件約束。</xref:System.Type> </xref:System.Reflection.MethodInfo>"
  overload: System.Runtime.InteropServices._Type.GetMethods*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetNestedType(System.String)
  id: GetNestedType(System.String)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetNestedType(String)
  nameWithType: _Type.GetNestedType(String)
  fullName: System.Runtime.InteropServices._Type.GetNestedType(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權&lt;xref:System.Type.GetNestedType%2A?displayProperty=fullName&gt;方法。"
  remarks: "這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。       <xref:System.Type.GetNestedType%2A?displayProperty=fullName>方法會搜尋具有指定名稱的公用巢狀類型。</xref:System.Type.GetNestedType%2A?displayProperty=fullName>"
  syntax:
    content: public Type GetNestedType (string name);
    parameters:
    - id: name
      type: System.String
      description: "字串，包含要取得之巢狀類型的名稱。"
    return:
      type: System.Type
      description: "A<xref:System.Type>物件，代表具有指定之名稱的巢狀類型，如果找到則為<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.GetNestedType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetNestedType(System.String,System.Reflection.BindingFlags)
  id: GetNestedType(System.String,System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetNestedType(String,BindingFlags)
  nameWithType: _Type.GetNestedType(String,BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetNestedType(String,BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權&lt;xref:System.Type.GetNestedType%2A?displayProperty=fullName&gt;方法。"
  remarks: "這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。       <xref:System.Type.GetNestedType%2A?displayProperty=fullName>方法會搜尋指定的巢狀類型，使用指定的繫結條件約束。</xref:System.Type.GetNestedType%2A?displayProperty=fullName>"
  syntax:
    content: public Type GetNestedType (string name, System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: name
      type: System.String
      description: "字串，包含要取得之巢狀類型的名稱。"
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "位元遮罩，由一或多個<xref href=&quot;System.Reflection.BindingFlags&quot;></xref>旗標會指定執行搜尋的方式。       -或-零，傳回<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.Type
      description: "A<xref:System.Type>物件，表示如果找到則為符合指定的需求之巢狀的類型<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.GetNestedType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetNestedTypes
  id: GetNestedTypes
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetNestedTypes()
  nameWithType: _Type.GetNestedTypes()
  fullName: System.Runtime.InteropServices._Type.GetNestedTypes()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權&lt;xref:System.Type.GetNestedTypes%2A?displayProperty=fullName&gt;方法。"
  remarks: "這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。       <xref:System.Type.GetNestedTypes%2A?displayProperty=fullName>方法會傳回所有目前<xref:System.Type>.</xref:System.Type>內變成巢狀類型</xref:System.Type.GetNestedTypes%2A?displayProperty=fullName>都"
  syntax:
    content: public Type[] GetNestedTypes ();
    parameters: []
    return:
      type: System.Type[]
      description: "陣列，<xref:System.Type>代表所有類型的物件巢狀方式置於目前<xref:System.Type>.</xref:System.Type> </xref:System.Type>       -或者-型別<xref:System.Type>，如果沒有目前<xref:System.Type>.</xref:System.Type>中巢狀任何類型</xref:System.Type>的空陣列"
  overload: System.Runtime.InteropServices._Type.GetNestedTypes*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetNestedTypes(System.Reflection.BindingFlags)
  id: GetNestedTypes(System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetNestedTypes(BindingFlags)
  nameWithType: _Type.GetNestedTypes(BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetNestedTypes(BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權&lt;xref:System.Type.GetNestedTypes%2A?displayProperty=fullName&gt;方法，並搜尋巢狀在目前的型別<xref:System.Type>，使用指定的繫結條件約束。</xref:System.Type>"
  remarks: "這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。"
  syntax:
    content: public Type[] GetNestedTypes (System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "位元遮罩，由一或多個<xref href=&quot;System.Reflection.BindingFlags&quot;></xref>旗標會指定執行搜尋的方式。       -或-零，傳回<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.Type[]
      description: "陣列<xref:System.Type>物件代表所有型別的巢狀在目前<xref:System.Type>之符合指定的繫結條件約束。</xref:System.Type> </xref:System.Type>       -類型的空陣列<xref:System.Type>，如果沒有類型巢狀在目前<xref:System.Type>，或如果沒有任何巢狀類型符合繫結條件約束。</xref:System.Type> </xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.GetNestedTypes*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetProperties
  id: GetProperties
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetProperties()
  nameWithType: _Type.GetProperties()
  fullName: System.Runtime.InteropServices._Type.GetProperties()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權&lt;xref:System.Type.GetProperties%2A?displayProperty=fullName&gt;方法。"
  remarks: "這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。       <xref:System.Type.GetProperties%2A?displayProperty=fullName>方法會傳回目前<xref:System.Type>.</xref:System.Type>的所有公用屬性</xref:System.Type.GetProperties%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.PropertyInfo[] GetProperties ();
    parameters: []
    return:
      type: System.Reflection.PropertyInfo[]
      description: "陣列的<xref:System.Reflection.PropertyInfo>物件代表目前<xref:System.Type>.</xref:System.Type>的所有公用屬性</xref:System.Reflection.PropertyInfo>       -類型的空陣列<xref:System.Reflection.PropertyInfo>，如果目前<xref:System.Type>並沒有公用屬性。</xref:System.Type> </xref:System.Reflection.PropertyInfo>"
  overload: System.Runtime.InteropServices._Type.GetProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetProperties(System.Reflection.BindingFlags)
  id: GetProperties(System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetProperties(BindingFlags)
  nameWithType: _Type.GetProperties(BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetProperties(BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權&lt;xref:System.Type.GetProperties%2A?displayProperty=fullName&gt;方法。"
  remarks: "這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。       <xref:System.Type.GetProperties%2A?displayProperty=fullName>方法會搜尋目前的屬性<xref:System.Type>，使用指定的繫結條件約束。</xref:System.Type> </xref:System.Type.GetProperties%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.PropertyInfo[] GetProperties (System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "位元遮罩，由一或多個<xref href=&quot;System.Reflection.BindingFlags&quot;></xref>旗標會指定執行搜尋的方式。       -或-零，傳回<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.Reflection.PropertyInfo[]
      description: "陣列<xref:System.Reflection.PropertyInfo>代表所有屬性的目前物件<xref:System.Type>之符合指定的繫結條件約束。</xref:System.Type> </xref:System.Reflection.PropertyInfo>       -類型的空陣列<xref:System.Reflection.PropertyInfo>，如果目前<xref:System.Type>並沒有屬性，或沒有屬性符合繫結條件約束。</xref:System.Type> </xref:System.Reflection.PropertyInfo>"
  overload: System.Runtime.InteropServices._Type.GetProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetProperty(System.String)
  id: GetProperty(System.String)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetProperty(String)
  nameWithType: _Type.GetProperty(String)
  fullName: System.Runtime.InteropServices._Type.GetProperty(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權&lt;xref:System.Type.GetProperty%2A?displayProperty=fullName&gt;方法。"
  remarks: "這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。       <xref:System.Type.GetProperty%2A?displayProperty=fullName>方法會搜尋具有指定名稱的公用屬性。</xref:System.Type.GetProperty%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.PropertyInfo GetProperty (string name);
    parameters:
    - id: name
      type: System.String
      description: "<xref:System.String>包含要取得的公用屬性名稱。</xref:System.String>"
    return:
      type: System.Reflection.PropertyInfo
      description: "A<xref:System.Reflection.PropertyInfo>物件代表具有指定之名稱的公用屬性如有找到則為<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。</xref:System.Reflection.PropertyInfo>"
  overload: System.Runtime.InteropServices._Type.GetProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetProperty(System.String,System.Reflection.BindingFlags)
  id: GetProperty(System.String,System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetProperty(String,BindingFlags)
  nameWithType: _Type.GetProperty(String,BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetProperty(String,BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權&lt;xref:System.Type.GetProperty%2A?displayProperty=fullName&gt;方法。"
  remarks: "這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。       <xref:System.Type.GetProperty%2A?displayProperty=fullName>方法會搜尋指定的屬性，使用指定的繫結條件約束。</xref:System.Type.GetProperty%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.PropertyInfo GetProperty (string name, System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: name
      type: System.String
      description: "<xref:System.String>包含要取得的屬性名稱。</xref:System.String>"
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "位元遮罩，由一或多個<xref href=&quot;System.Reflection.BindingFlags&quot;></xref>旗標會指定執行搜尋的方式。       -或-零，傳回<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.Reflection.PropertyInfo
      description: "A<xref:System.Reflection.PropertyInfo>物件，代表符合指定之需求，如果找到則為屬性<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。</xref:System.Reflection.PropertyInfo>"
  overload: System.Runtime.InteropServices._Type.GetProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type)
  id: GetProperty(System.String,System.Type)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetProperty(String,Type)
  nameWithType: _Type.GetProperty(String,Type)
  fullName: System.Runtime.InteropServices._Type.GetProperty(String,Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權&lt;xref:System.Type.GetProperty%2A?displayProperty=fullName&gt;方法。"
  remarks: "這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。       <xref:System.Type.GetProperty%2A?displayProperty=fullName>方法會搜尋具有指定的名稱和傳回類型的公用屬性。</xref:System.Type.GetProperty%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.PropertyInfo GetProperty (string name, Type returnType);
    parameters:
    - id: name
      type: System.String
      description: "<xref:System.String>包含要取得的公用屬性名稱。</xref:System.String>"
    - id: returnType
      type: System.Type
      description: "屬性的傳回型別。"
    return:
      type: System.Reflection.PropertyInfo
      description: "A<xref:System.Reflection.PropertyInfo>物件代表具有指定之名稱的公用屬性如有找到則為<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。</xref:System.Reflection.PropertyInfo>"
  overload: System.Runtime.InteropServices._Type.GetProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type[])
  id: GetProperty(System.String,System.Type[])
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetProperty(String,Type[])
  nameWithType: _Type.GetProperty(String,Type[])
  fullName: System.Runtime.InteropServices._Type.GetProperty(String,Type[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權&lt;xref:System.Type.GetProperty%2A?displayProperty=fullName&gt;方法。"
  remarks: "這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。       <xref:System.Type.GetProperty%2A?displayProperty=fullName>方法會搜尋指定的公用屬性，其參數符合指定的引數類型...</xref:System.Type.GetProperty%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.PropertyInfo GetProperty (string name, Type[] types);
    parameters:
    - id: name
      type: System.String
      description: "<xref:System.String>包含要取得的公用屬性名稱。</xref:System.String>"
    - id: types
      type: System.Type[]
      description: "陣列<xref:System.Type>代表數目、 順序和索引屬性參數的類型，若要取得的物件。</xref:System.Type>       -類型的空陣列<xref:System.Type>(也就是，Type [] 類型 = new type [0 用以取得未編製索引的屬性。</xref:System.Type>"
    return:
      type: System.Reflection.PropertyInfo
      description: "A<xref:System.Reflection.PropertyInfo>代表其參數符合指定的引數類型，如果找到則為公用屬性物件<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。</xref:System.Reflection.PropertyInfo>"
  overload: System.Runtime.InteropServices._Type.GetProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type,System.Type[])
  id: GetProperty(System.String,System.Type,System.Type[])
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetProperty(String,Type,Type[])
  nameWithType: _Type.GetProperty(String,Type,Type[])
  fullName: System.Runtime.InteropServices._Type.GetProperty(String,Type,Type[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權&lt;xref:System.Type.GetProperty%2A?displayProperty=fullName&gt;方法。"
  remarks: "這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。       <xref:System.Type.GetProperty%2A?displayProperty=fullName>方法會搜尋指定的公用屬性，其參數符合指定的引數類型。</xref:System.Type.GetProperty%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.PropertyInfo GetProperty (string name, Type returnType, Type[] types);
    parameters:
    - id: name
      type: System.String
      description: "<xref:System.String>包含要取得的公用屬性名稱。</xref:System.String>"
    - id: returnType
      type: System.Type
      description: "屬性的傳回型別。"
    - id: types
      type: System.Type[]
      description: "陣列<xref:System.Type>代表數目、 順序和索引屬性參數的類型，若要取得的物件。</xref:System.Type>       -類型的空陣列<xref:System.Type>(也就是，Type [] 類型 = new type [0 用以取得未編製索引的屬性。</xref:System.Type>"
    return:
      type: System.Reflection.PropertyInfo
      description: "A<xref:System.Reflection.PropertyInfo>代表其參數符合指定的引數類型，如果找到則為公用屬性物件<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。</xref:System.Reflection.PropertyInfo>"
  overload: System.Runtime.InteropServices._Type.GetProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  id: GetProperty(System.String,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetProperty(String,Type,Type[],ParameterModifier[])
  nameWithType: _Type.GetProperty(String,Type,Type[],ParameterModifier[])
  fullName: System.Runtime.InteropServices._Type.GetProperty(String,Type,Type[],ParameterModifier[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權&lt;xref:System.Type.GetProperty%2A?displayProperty=fullName&gt;方法。"
  remarks: "這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。       <xref:System.Type.GetProperty%2A?displayProperty=fullName>方法會搜尋指定的公用屬性，其參數符合指定引數類型和修飾詞。</xref:System.Type.GetProperty%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.PropertyInfo GetProperty (string name, Type returnType, Type[] types, System.Reflection.ParameterModifier[] modifiers);
    parameters:
    - id: name
      type: System.String
      description: "<xref:System.String>包含要取得的公用屬性名稱。</xref:System.String>"
    - id: returnType
      type: System.Type
      description: "屬性的傳回型別。"
    - id: types
      type: System.Type[]
      description: "陣列<xref:System.Type>代表數目、 順序和索引屬性參數的類型，若要取得的物件。</xref:System.Type>       -類型的空陣列<xref:System.Type>(也就是，Type [] 類型 = new type [0 用以取得未編製索引的屬性。</xref:System.Type>"
    - id: modifiers
      type: System.Reflection.ParameterModifier[]
      description: "陣列<xref href=&quot;System.Reflection.ParameterModifier&quot;></xref>表示中的對應項目相關聯的屬性物件`types`陣列。 預設繫結器不會處理這個參數。"
    return:
      type: System.Reflection.PropertyInfo
      description: "A<xref:System.Reflection.PropertyInfo>物件，表示如果找到則為符合指定的需求的公用屬性<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。</xref:System.Reflection.PropertyInfo>"
  overload: System.Runtime.InteropServices._Type.GetProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  id: GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetProperty(String,BindingFlags,Binder,Type,Type[],ParameterModifier[])
  nameWithType: _Type.GetProperty(String,BindingFlags,Binder,Type,Type[],ParameterModifier[])
  fullName: System.Runtime.InteropServices._Type.GetProperty(String,BindingFlags,Binder,Type,Type[],ParameterModifier[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權&lt;xref:System.Type.GetProperty%2A?displayProperty=fullName&gt;方法。"
  remarks: "這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。       <xref:System.Type.GetProperty%2A?displayProperty=fullName>方法搜尋指定的屬性，其參數符合指定引數類型和修飾詞，使用指定的繫結條件約束。</xref:System.Type.GetProperty%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.PropertyInfo GetProperty (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, Type returnType, Type[] types, System.Reflection.ParameterModifier[] modifiers);
    parameters:
    - id: name
      type: System.String
      description: "<xref:System.String>包含要取得的屬性名稱。</xref:System.String>"
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "位元遮罩，由一或多個<xref href=&quot;System.Reflection.BindingFlags&quot;></xref>旗標會指定執行搜尋的方式。       -或-零，傳回<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
    - id: binder
      type: System.Reflection.Binder
      description: "A <xref href=&quot;System.Reflection.Binder&quot;> </xref>物件，定義一組屬性並啟用繫結，可包含類型的強制引數，以及透過反映的成員引動過程多載方法的選擇。       -or-       <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, to use the <xref:System.Type.DefaultBinder*>.</xref:System.Type.DefaultBinder*>"
    - id: returnType
      type: System.Type
      description: "屬性的傳回型別。"
    - id: types
      type: System.Type[]
      description: "陣列<xref:System.Type>代表數目、 順序和索引屬性參數的類型，若要取得的物件。</xref:System.Type>       -類型的空陣列<xref:System.Type>(也就是，Type [] 類型 = new type [0 用以取得未編製索引的屬性。</xref:System.Type>"
    - id: modifiers
      type: System.Reflection.ParameterModifier[]
      description: "陣列<xref href=&quot;System.Reflection.ParameterModifier&quot;></xref>表示中的對應項目相關聯的屬性物件`types`陣列。 預設繫結器不會處理這個參數。"
    return:
      type: System.Reflection.PropertyInfo
      description: "A<xref:System.Reflection.PropertyInfo>物件，代表符合指定之需求，如果找到則為屬性<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。</xref:System.Reflection.PropertyInfo>"
  overload: System.Runtime.InteropServices._Type.GetProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetType
  id: GetType
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetType()
  nameWithType: _Type.GetType()
  fullName: System.Runtime.InteropServices._Type.GetType()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權&lt;xref:System.Type.GetType%2A?displayProperty=fullName&gt;方法。"
  remarks: "這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。       <xref:System.Type.GetType%2A?displayProperty=fullName>方法會取得目前<xref:System.Type>.</xref:System.Type> </xref:System.Type.GetType%2A?displayProperty=fullName>"
  syntax:
    content: public Type GetType ();
    parameters: []
    return:
      type: System.Type
      description: "目前<xref:System.Type>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.GetType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  id: GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetTypeInfo(UInt32,UInt32,IntPtr)
  nameWithType: _Type.GetTypeInfo(UInt32,UInt32,IntPtr)
  fullName: System.Runtime.InteropServices._Type.GetTypeInfo(UInt32,UInt32,IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "擷取的類型資訊物件，然後可以用來取得介面的型別資訊。"
  remarks: "這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。 如需有關`IDispatch::GetTypeInfo`，請參閱 MSDN Library。"
  syntax:
    content: public void GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);
    parameters:
    - id: iTInfo
      type: System.UInt32
      description: "要傳回的類型資訊。"
    - id: lcid
      type: System.UInt32
      description: "型別資訊的地區設定識別項。"
    - id: ppTInfo
      type: System.IntPtr
      description: "接收到要求的類型資訊物件的指標。"
  overload: System.Runtime.InteropServices._Type.GetTypeInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetTypeInfoCount(System.UInt32@)
  id: GetTypeInfoCount(System.UInt32@)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetTypeInfoCount(UInt32)
  nameWithType: _Type.GetTypeInfoCount(UInt32)
  fullName: System.Runtime.InteropServices._Type.GetTypeInfoCount(UInt32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "擷取物件提供 （0 或 1） 的類型資訊介面數目。"
  remarks: "這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。 如需有關`IDispatch::GetTypeInfoCount`，請參閱 MSDN Library。"
  syntax:
    content: public void GetTypeInfoCount (out uint pcTInfo);
    parameters:
    - id: pcTInfo
      type: System.UInt32
      description: "指向接收物件提供的類型資訊介面數目的位置。"
  overload: System.Runtime.InteropServices._Type.GetTypeInfoCount*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GUID
  id: GUID
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GUID
  nameWithType: _Type.GUID
  fullName: System.Runtime.InteropServices._Type.GUID
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權&lt;xref:System.Type.GUID%2A?displayProperty=fullName&gt;屬性。"
  remarks: "這個屬性會從 unmanaged 程式碼，是對存取 managed 類別，不應該從 managed 程式碼呼叫。       <xref:System.Type.GUID%2A?displayProperty=fullName>屬性會取得<xref:System.Type>.</xref:System.Type>相關聯的 GUID</xref:System.Type.GUID%2A?displayProperty=fullName>"
  syntax:
    content: public Guid GUID { get; }
    return:
      type: System.Guid
      description: "<xref:System.Type>.</xref:System.Type>與關聯的 GUID"
  overload: System.Runtime.InteropServices._Type.GUID*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.HasElementType
  id: HasElementType
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: HasElementType
  nameWithType: _Type.HasElementType
  fullName: System.Runtime.InteropServices._Type.HasElementType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權&lt;xref:System.Type.HasElementType%2A?displayProperty=fullName&gt;屬性。"
  remarks: "這個屬性會從 unmanaged 程式碼，是對存取 managed 類別，不應該從 managed 程式碼呼叫。       <xref:System.Type.HasElementType%2A?displayProperty=fullName>屬性</xref:System.Type.HasElementType%2A?displayProperty=fullName>"
  syntax:
    content: public bool HasElementType { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref:System.Type>屬於陣列、 指標，或傳遞的參考; 否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.HasElementType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  id: Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  nameWithType: _Type.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  fullName: System.Runtime.InteropServices._Type.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "提供屬性和物件所公開的方法存取權。"
  remarks: "這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。 如需有關`IDispatch::Invoke`，請參閱 MSDN Library。"
  syntax:
    content: public void Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);
    parameters:
    - id: dispIdMember
      type: System.UInt32
      description: "辨識成員。"
    - id: riid
      type: System.Guid
      description: "保留供將來使用。 必須是 IID_NULL。"
    - id: lcid
      type: System.UInt32
      description: "地區設定內容，用於解譯引數。"
    - id: wFlags
      type: System.Int16
      description: "描述呼叫之內容的旗標。"
    - id: pDispParams
      type: System.IntPtr
      description: "此結構包含引數陣列，為具名引數，以及陣列中的項目數目的計數的引數 Dispid 陣列指標。"
    - id: pVarResult
      type: System.IntPtr
      description: "儲存結果之位置的指標。"
    - id: pExcepInfo
      type: System.IntPtr
      description: "包含例外狀況資訊的結構指標。"
    - id: puArgErr
      type: System.IntPtr
      description: "發生錯誤的第一個引數索引。"
  overload: System.Runtime.InteropServices._Type.Invoke*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[])
  id: InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[])
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: InvokeMember(String,BindingFlags,Binder,Object,Object[])
  nameWithType: _Type.InvokeMember(String,BindingFlags,Binder,Object,Object[])
  fullName: System.Runtime.InteropServices._Type.InvokeMember(String,BindingFlags,Binder,Object,Object[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權&lt;xref:System.Type.InvokeMember%2A?displayProperty=fullName&gt;方法。"
  remarks: "這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。       <xref:System.Type.InvokeMember%2A?displayProperty=fullName>方法會叫用指定的成員，使用指定的繫結條件約束並符合指定的引數清單。</xref:System.Type.InvokeMember%2A?displayProperty=fullName>"
  syntax:
    content: public object InvokeMember (string name, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object target, object[] args);
    parameters:
    - id: name
      type: System.String
      description: "<xref:System.String>包含名稱的建構函式、 方法、 屬性或欄位成員，才能叫用。</xref:System.String>       -空字串 (&quot;&quot;) 來叫用的預設成員。       -的 IDispatch 成員，例如表示 DispID 的字串&quot;[DispID =&3;]&quot;。"
    - id: invokeAttr
      type: System.Reflection.BindingFlags
      description: "位元遮罩，由一或多個<xref href=&quot;System.Reflection.BindingFlags&quot;></xref>旗標會指定執行搜尋的方式。 The access can be one of the <xref uid=&quot;langword_csharp_BindingFlags&quot; name=&quot;BindingFlags&quot; href=&quot;&quot;></xref> such as <xref uid=&quot;langword_csharp_Public&quot; name=&quot;Public&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_NonPublic&quot; name=&quot;NonPublic&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Private&quot; name=&quot;Private&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_InvokeMethod&quot; name=&quot;InvokeMethod&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_GetField&quot; name=&quot;GetField&quot; href=&quot;&quot;></xref>, and so on. 不需要指定查閱的類型。 如果省略查閱的類型，則<xref uid=&quot;langword_csharp_BindingFlags.Public&quot; name=&quot;BindingFlags.Public&quot; href=&quot;&quot;> </xref>  |  <xref uid=&quot;langword_csharp_BindingFlags.Instance&quot; name=&quot;BindingFlags.Instance&quot; href=&quot;&quot;> </xref>會套用。"
    - id: binder
      type: System.Reflection.Binder
      description: "A <xref href=&quot;System.Reflection.Binder&quot;> </xref>物件，定義一組屬性並啟用繫結，可包含類型的強制引數，以及透過反映的成員引動過程多載方法的選擇。       -or-       <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, to use the <xref:System.Type.DefaultBinder*>.</xref:System.Type.DefaultBinder*>"
    - id: target
      type: System.Object
      description: "<xref:System.Object>要叫用指定的成員。</xref:System.Object>"
    - id: args
      type: System.Object[]
      description: "包含要傳遞給要叫用成員的引數的陣列。"
    return:
      type: System.Object
      description: "<xref:System.Object>代表叫用的成員的傳回值。</xref:System.Object>"
  overload: System.Runtime.InteropServices._Type.InvokeMember*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Globalization.CultureInfo)
  id: InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Globalization.CultureInfo)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: InvokeMember(String,BindingFlags,Binder,Object,Object[],CultureInfo)
  nameWithType: _Type.InvokeMember(String,BindingFlags,Binder,Object,Object[],CultureInfo)
  fullName: System.Runtime.InteropServices._Type.InvokeMember(String,BindingFlags,Binder,Object,Object[],CultureInfo)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權&lt;xref:System.Type.InvokeMember%2A?displayProperty=fullName&gt;方法。"
  remarks: "這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。       <xref:System.Type.InvokeMember%2A?displayProperty=fullName>方法會叫用指定的成員，使用指定的繫結條件約束並符合指定的引數清單和文化特性。</xref:System.Type.InvokeMember%2A?displayProperty=fullName>"
  syntax:
    content: public object InvokeMember (string name, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object target, object[] args, System.Globalization.CultureInfo culture);
    parameters:
    - id: name
      type: System.String
      description: "<xref:System.String>包含名稱的建構函式、 方法、 屬性或欄位成員，才能叫用。</xref:System.String>       -空字串 (&quot;&quot;) 來叫用的預設成員。       -的 IDispatch 成員，例如表示 DispID 的字串&quot;[DispID =&3;]&quot;。"
    - id: invokeAttr
      type: System.Reflection.BindingFlags
      description: "位元遮罩，由一或多個<xref href=&quot;System.Reflection.BindingFlags&quot;></xref>旗標會指定執行搜尋的方式。 The access can be one of the <xref uid=&quot;langword_csharp_BindingFlags&quot; name=&quot;BindingFlags&quot; href=&quot;&quot;></xref> such as <xref uid=&quot;langword_csharp_Public&quot; name=&quot;Public&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_NonPublic&quot; name=&quot;NonPublic&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Private&quot; name=&quot;Private&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_InvokeMethod&quot; name=&quot;InvokeMethod&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_GetField&quot; name=&quot;GetField&quot; href=&quot;&quot;></xref>, and so on. 不需要指定查閱的類型。 如果省略查閱的類型，則<xref uid=&quot;langword_csharp_BindingFlags.Public&quot; name=&quot;BindingFlags.Public&quot; href=&quot;&quot;> </xref>  |  <xref uid=&quot;langword_csharp_BindingFlags.Instance&quot; name=&quot;BindingFlags.Instance&quot; href=&quot;&quot;> </xref>會套用。"
    - id: binder
      type: System.Reflection.Binder
      description: "A <xref href=&quot;System.Reflection.Binder&quot;> </xref>物件，定義一組屬性並啟用繫結，可包含類型的強制引數，以及透過反映的成員引動過程多載方法的選擇。       -or-       <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, to use the <xref:System.Type.DefaultBinder*>.</xref:System.Type.DefaultBinder*>"
    - id: target
      type: System.Object
      description: "<xref:System.Object>要叫用指定的成員。</xref:System.Object>"
    - id: args
      type: System.Object[]
      description: "包含要傳遞給要叫用成員的引數的陣列。"
    - id: culture
      type: System.Globalization.CultureInfo
      description: "<xref:System.Globalization.CultureInfo>物件代表的全球化地區設定，若要使用，可能需要針對地區設定特定轉換，例如將數字的字串轉換成雙精度浮點數。</xref:System.Globalization.CultureInfo>       - <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>可使用目前執行緒的<xref:System.Globalization.CultureInfo>.</xref:System.Globalization.CultureInfo>"
    return:
      type: System.Object
      description: "<xref:System.Object>代表叫用的成員的傳回值。</xref:System.Object>"
  overload: System.Runtime.InteropServices._Type.InvokeMember*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])
  id: InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: InvokeMember(String,BindingFlags,Binder,Object,Object[],ParameterModifier[],CultureInfo,String[])
  nameWithType: _Type.InvokeMember(String,BindingFlags,Binder,Object,Object[],ParameterModifier[],CultureInfo,String[])
  fullName: System.Runtime.InteropServices._Type.InvokeMember(String,BindingFlags,Binder,Object,Object[],ParameterModifier[],CultureInfo,String[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權&lt;xref:System.Type.InvokeMember%2A?displayProperty=fullName&gt;方法。"
  remarks: "這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。       <xref:System.Type.InvokeMember%2A?displayProperty=fullName>方法會叫用指定的成員，使用指定的繫結條件約束並符合指定的引數清單、 修飾詞和文化特性。</xref:System.Type.InvokeMember%2A?displayProperty=fullName>"
  syntax:
    content: public object InvokeMember (string name, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object target, object[] args, System.Reflection.ParameterModifier[] modifiers, System.Globalization.CultureInfo culture, string[] namedParameters);
    parameters:
    - id: name
      type: System.String
      description: "<xref:System.String>包含名稱的建構函式、 方法、 屬性或欄位成員，才能叫用。</xref:System.String>       -空字串 (&quot;&quot;) 來叫用的預設成員。       -的 IDispatch 成員，例如表示 DispID 的字串&quot;[DispID =&3;]&quot;。"
    - id: invokeAttr
      type: System.Reflection.BindingFlags
      description: "位元遮罩，由一或多個<xref href=&quot;System.Reflection.BindingFlags&quot;></xref>旗標會指定執行搜尋的方式。 The access can be one of the <xref uid=&quot;langword_csharp_BindingFlags&quot; name=&quot;BindingFlags&quot; href=&quot;&quot;></xref> such as <xref uid=&quot;langword_csharp_Public&quot; name=&quot;Public&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_NonPublic&quot; name=&quot;NonPublic&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Private&quot; name=&quot;Private&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_InvokeMethod&quot; name=&quot;InvokeMethod&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_GetField&quot; name=&quot;GetField&quot; href=&quot;&quot;></xref>, and so on. 不需要指定查閱的類型。 如果省略查閱的類型，則<xref uid=&quot;langword_csharp_BindingFlags.Public&quot; name=&quot;BindingFlags.Public&quot; href=&quot;&quot;> </xref>  |  <xref uid=&quot;langword_csharp_BindingFlags.Instance&quot; name=&quot;BindingFlags.Instance&quot; href=&quot;&quot;> </xref>會套用。"
    - id: binder
      type: System.Reflection.Binder
      description: "A <xref href=&quot;System.Reflection.Binder&quot;> </xref>物件，定義一組屬性並啟用繫結，可包含類型的強制引數，以及透過反映的成員引動過程多載方法的選擇。       -or-       <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, to use the <xref:System.Type.DefaultBinder*>.</xref:System.Type.DefaultBinder*>"
    - id: target
      type: System.Object
      description: "<xref:System.Object>要叫用指定的成員。</xref:System.Object>"
    - id: args
      type: System.Object[]
      description: "包含要傳遞給要叫用成員的引數的陣列。"
    - id: modifiers
      type: System.Reflection.ParameterModifier[]
      description: "陣列<xref href=&quot;System.Reflection.ParameterModifier&quot;></xref>表示中的對應項目相關聯的屬性物件`args`陣列。 參數的相關聯的屬性會儲存在成員的簽章。 預設繫結器不會處理這個參數。"
    - id: culture
      type: System.Globalization.CultureInfo
      description: "<xref:System.Globalization.CultureInfo>物件代表的全球化地區設定，若要使用，可能需要針對地區設定特定轉換，例如將數字的字串轉換成雙精度浮點數。</xref:System.Globalization.CultureInfo>       - <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>可使用目前執行緒的<xref:System.Globalization.CultureInfo>.</xref:System.Globalization.CultureInfo>"
    - id: namedParameters
      type: System.String[]
      description: "陣列，其中包含的參數名稱中的值`args`傳遞陣列。"
    return:
      type: System.Object
      description: "<xref:System.Object>代表叫用的成員的傳回值。</xref:System.Object>"
  overload: System.Runtime.InteropServices._Type.InvokeMember*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsAbstract
  id: IsAbstract
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsAbstract
  nameWithType: _Type.IsAbstract
  fullName: System.Runtime.InteropServices._Type.IsAbstract
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權&lt;xref:System.Type.IsAbstract%2A?displayProperty=fullName&gt;屬性。"
  remarks: "這個屬性會從 unmanaged 程式碼，是對存取 managed 類別，不應該從 managed 程式碼呼叫。       <xref:System.Type.IsAbstract%2A?displayProperty=fullName>屬性會取得值，指出是否<xref:System.Type>為抽象並且必須被覆寫。</xref:System.Type> </xref:System.Type.IsAbstract%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsAbstract { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref:System.Type>抽象; 否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsAbstract*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsAnsiClass
  id: IsAnsiClass
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsAnsiClass
  nameWithType: _Type.IsAnsiClass
  fullName: System.Runtime.InteropServices._Type.IsAnsiClass
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權&lt;xref:System.Type.IsAnsiClass%2A?displayProperty=fullName&gt;屬性。"
  remarks: "這個屬性會從 unmanaged 程式碼，是對存取 managed 類別，不應該從 managed 程式碼呼叫。       <xref:System.Type.IsAnsiClass%2A?displayProperty=fullName>屬性會取得值，指出是否字串格式屬性`AnsiClass`選取<xref:System.Type>。</xref:System.Type> </xref:System.Type.IsAnsiClass%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsAnsiClass { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果字串格式屬性<xref uid=&quot;langword_csharp_AnsiClass&quot; name=&quot;AnsiClass&quot; href=&quot;&quot;></xref>選取<xref:System.Type>，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsAnsiClass*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsArray
  id: IsArray
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsArray
  nameWithType: _Type.IsArray
  fullName: System.Runtime.InteropServices._Type.IsArray
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權&lt;xref:System.Type.IsArray%2A?displayProperty=fullName&gt;屬性。"
  remarks: "這個屬性會從 unmanaged 程式碼，是對存取 managed 類別，不應該從 managed 程式碼呼叫。       <xref:System.Type.IsArray%2A?displayProperty=fullName>屬性會取得值，指出是否<xref:System.Type>是陣列。</xref:System.Type> </xref:System.Type.IsArray%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsArray { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref:System.Type>是陣列，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsArray*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsAssignableFrom(System.Type)
  id: IsAssignableFrom(System.Type)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsAssignableFrom(Type)
  nameWithType: _Type.IsAssignableFrom(Type)
  fullName: System.Runtime.InteropServices._Type.IsAssignableFrom(Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權&lt;xref:System.Type.IsAssignableFrom%2A?displayProperty=fullName&gt;方法。"
  remarks: "這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。"
  syntax:
    content: public bool IsAssignableFrom (Type c);
    parameters:
    - id: c
      type: System.Type
      description: "<xref:System.Type>要與目前<xref:System.Type>.</xref:System.Type>比較</xref:System.Type>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<code> c </code>和目前<xref:System.Type>代表相同的類型，或如果目前<xref:System.Type>的繼承階層架構中<code> c </code>，或者如果目前<xref:System.Type>是一種介面， <code> c </code>實作，或如果<code> c </code>是泛型型別參數和目前<xref:System.Type>代表其中一個條件約束的<code> c </code>。</xref:System.Type> </xref:System.Type> </xref:System.Type> </xref:System.Type> <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>如果上述條件的情況下，或是<code> c </code>是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Runtime.InteropServices._Type.IsAssignableFrom*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsAutoClass
  id: IsAutoClass
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsAutoClass
  nameWithType: _Type.IsAutoClass
  fullName: System.Runtime.InteropServices._Type.IsAutoClass
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權&lt;xref:System.Type.IsAutoClass%2A?displayProperty=fullName&gt;屬性。"
  remarks: "這個屬性會從 unmanaged 程式碼，是對存取 managed 類別，不應該從 managed 程式碼呼叫。       <xref:System.Type.IsAutoClass%2A?displayProperty=fullName>屬性會取得值，指出是否字串格式屬性`AutoClass`選取<xref:System.Type>。</xref:System.Type> </xref:System.Type.IsAutoClass%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsAutoClass { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果字串格式屬性<xref uid=&quot;langword_csharp_AutoClass&quot; name=&quot;AutoClass&quot; href=&quot;&quot;></xref>選取<xref:System.Type>，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsAutoClass*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsAutoLayout
  id: IsAutoLayout
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsAutoLayout
  nameWithType: _Type.IsAutoLayout
  fullName: System.Runtime.InteropServices._Type.IsAutoLayout
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權&lt;xref:System.Type.IsAutoLayout%2A?displayProperty=fullName&gt;屬性。"
  remarks: "這個屬性會從 unmanaged 程式碼，是對存取 managed 類別，不應該從 managed 程式碼呼叫。       <xref:System.Type.IsAutoLayout%2A?displayProperty=fullName>屬性會取得值，指出是否類別配置屬性`AutoLayout`選取<xref:System.Type>。</xref:System.Type> </xref:System.Type.IsAutoLayout%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsAutoLayout { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果類別的配置屬性<xref uid=&quot;langword_csharp_AutoLayout&quot; name=&quot;AutoLayout&quot; href=&quot;&quot;></xref>選取<xref:System.Type>，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsAutoLayout*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsByRef
  id: IsByRef
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsByRef
  nameWithType: _Type.IsByRef
  fullName: System.Runtime.InteropServices._Type.IsByRef
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權&lt;xref:System.Type.IsByRef%2A?displayProperty=fullName&gt;屬性。"
  remarks: "這個屬性會從 unmanaged 程式碼，是對存取 managed 類別，不應該從 managed 程式碼呼叫。       <xref:System.Type.IsByRef%2A?displayProperty=fullName>屬性會取得值，指出是否<xref:System.Type>傳址方式傳遞。</xref:System.Type> </xref:System.Type.IsByRef%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsByRef { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref:System.Type>傳遞的參考; 否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsByRef*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsClass
  id: IsClass
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsClass
  nameWithType: _Type.IsClass
  fullName: System.Runtime.InteropServices._Type.IsClass
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權&lt;xref:System.Type.IsClass%2A?displayProperty=fullName&gt;屬性。"
  remarks: "這個屬性會從 unmanaged 程式碼，是對存取 managed 類別，不應該從 managed 程式碼呼叫。       <xref:System.Type.IsClass%2A?displayProperty=fullName>屬性會取得值，指出是否<xref:System.Type>類別; 也就是不是實值類型或介面。</xref:System.Type> </xref:System.Type.IsClass%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsClass { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref:System.Type>是類別，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsClass*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsCOMObject
  id: IsCOMObject
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsCOMObject
  nameWithType: _Type.IsCOMObject
  fullName: System.Runtime.InteropServices._Type.IsCOMObject
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權&lt;xref:System.Type.IsCOMObject%2A?displayProperty=fullName&gt;屬性。"
  remarks: "這個屬性會從 unmanaged 程式碼，是對存取 managed 類別，不應該從 managed 程式碼呼叫。       <xref:System.Type.IsCOMObject%2A?displayProperty=fullName>屬性會取得值，指出是否<xref:System.Type>是 COM 物件。</xref:System.Type> </xref:System.Type.IsCOMObject%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsCOMObject { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref:System.Type>是 COM 物件，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsCOMObject*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsContextful
  id: IsContextful
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsContextful
  nameWithType: _Type.IsContextful
  fullName: System.Runtime.InteropServices._Type.IsContextful
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權&lt;xref:System.Type.IsContextful%2A?displayProperty=fullName&gt;屬性。"
  remarks: "這個屬性會從 unmanaged 程式碼，是對存取 managed 類別，不應該從 managed 程式碼呼叫。       <xref:System.Type.IsContextful%2A?displayProperty=fullName>屬性會取得值，指出是否<xref:System.Type>可以裝載在內容中。</xref:System.Type> </xref:System.Type.IsContextful%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsContextful { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref:System.Type>可以是裝載在內容中; 否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsContextful*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsDefined(System.Type,System.Boolean)
  id: IsDefined(System.Type,System.Boolean)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsDefined(Type,Boolean)
  nameWithType: _Type.IsDefined(Type,Boolean)
  fullName: System.Runtime.InteropServices._Type.IsDefined(Type,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權&lt;xref:System.Reflection.MemberInfo.IsDefined%2A?displayProperty=fullName&gt;方法。"
  remarks: "這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。       <xref:System.Reflection.MemberInfo.IsDefined%2A?displayProperty=fullName>方法會指出是否有一個或多個執行個體`attributeType`套用至這個成員。</xref:System.Reflection.MemberInfo.IsDefined%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsDefined (Type attributeType, bool inherit);
    parameters:
    - id: attributeType
      type: System.Type
      description: "<xref uid=&quot;langword_csharp_Type&quot; name=&quot;Type&quot; href=&quot;&quot;> </xref>来套用自訂屬性的物件。"
    - id: inherit
      type: System.Boolean
      description: "指定是否要搜尋這個成員的繼承鏈結以尋找屬性。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果一個或多個執行個體<code> attributeType </code>套用至這個成員; 否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Runtime.InteropServices._Type.IsDefined*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsEnum
  id: IsEnum
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsEnum
  nameWithType: _Type.IsEnum
  fullName: System.Runtime.InteropServices._Type.IsEnum
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權&lt;xref:System.Type.IsEnum%2A?displayProperty=fullName&gt;屬性。"
  remarks: "這個屬性會從 unmanaged 程式碼，是對存取 managed 類別，不應該從 managed 程式碼呼叫。       <xref:System.Type.IsEnum%2A?displayProperty=fullName>屬性會取得值，指出是否目前<xref:System.Type>表示列舉類型。</xref:System.Type> </xref:System.Type.IsEnum%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsEnum { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果目前<xref:System.Type>代表列舉，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsEnum*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsExplicitLayout
  id: IsExplicitLayout
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsExplicitLayout
  nameWithType: _Type.IsExplicitLayout
  fullName: System.Runtime.InteropServices._Type.IsExplicitLayout
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權&lt;xref:System.Type.IsExplicitLayout%2A?displayProperty=fullName&gt;屬性。"
  remarks: "這個屬性會從 unmanaged 程式碼，是對存取 managed 類別，不應該從 managed 程式碼呼叫。       <xref:System.Type.IsExplicitLayout%2A?displayProperty=fullName>屬性會取得值，指出是否類別配置屬性`ExplicitLayout`選取<xref:System.Type>。</xref:System.Type> </xref:System.Type.IsExplicitLayout%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsExplicitLayout { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果類別的配置屬性<xref uid=&quot;langword_csharp_ExplicitLayout&quot; name=&quot;ExplicitLayout&quot; href=&quot;&quot;></xref>選取<xref:System.Type>，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsExplicitLayout*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsImport
  id: IsImport
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsImport
  nameWithType: _Type.IsImport
  fullName: System.Runtime.InteropServices._Type.IsImport
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權&lt;xref:System.Type.IsImport%2A?displayProperty=fullName&gt;屬性。"
  remarks: "這個屬性會從 unmanaged 程式碼，是對存取 managed 類別，不應該從 managed 程式碼呼叫。       <xref:System.Type.IsImport%2A?displayProperty=fullName>屬性會取得值，指出是否<xref:System.Type>具有<xref:System.Runtime.InteropServices.ComImportAttribute>，它是否從 COM 類型程式庫匯入。</xref:System.Runtime.InteropServices.ComImportAttribute> </xref:System.Type> </xref:System.Type.IsImport%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsImport { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref:System.Type>具有<xref:System.Runtime.InteropServices.ComImportAttribute>，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Runtime.InteropServices.ComImportAttribute> </xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsImport*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsInstanceOfType(System.Object)
  id: IsInstanceOfType(System.Object)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsInstanceOfType(Object)
  nameWithType: _Type.IsInstanceOfType(Object)
  fullName: System.Runtime.InteropServices._Type.IsInstanceOfType(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權&lt;xref:System.Type.IsInstanceOfType%2A?displayProperty=fullName&gt;方法。"
  remarks: "這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。       <xref:System.Type.IsInstanceOfType%2A?displayProperty=fullName>方法會判斷指定的物件是否為<xref:System.Type>.</xref:System.Type>在目前的執行個體</xref:System.Type.IsInstanceOfType%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsInstanceOfType (object o);
    parameters:
    - id: o
      type: System.Object
      description: "要與目前<xref:System.Type>.</xref:System.Type>比較的物件"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果目前<xref:System.Type>所表示之物件的繼承階層架構中<code> o </code>，或者如果目前<xref:System.Type>是一種介面， <code> o </code>支援。</xref:System.Type> </xref:System.Type> <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>如果這兩種情況是情況如此，或如果<code> o </code>是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>，或者如果目前<xref:System.Type>是開放式泛型類型 (也就是<xref:System.Type.ContainsGenericParameters*>傳回<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>)。</xref:System.Type.ContainsGenericParameters*> </xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsInstanceOfType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsInterface
  id: IsInterface
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsInterface
  nameWithType: _Type.IsInterface
  fullName: System.Runtime.InteropServices._Type.IsInterface
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權&lt;xref:System.Type.IsInterface%2A?displayProperty=fullName&gt;屬性。"
  remarks: "這個屬性會從 unmanaged 程式碼，是對存取 managed 類別，不應該從 managed 程式碼呼叫。       <xref:System.Type.IsInterface%2A?displayProperty=fullName>屬性會取得值，指出是否<xref:System.Type>為介面; 也就是說，不是類別或實值類型。</xref:System.Type> </xref:System.Type.IsInterface%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsInterface { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref:System.Type>是一種介面，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsInterface*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsLayoutSequential
  id: IsLayoutSequential
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsLayoutSequential
  nameWithType: _Type.IsLayoutSequential
  fullName: System.Runtime.InteropServices._Type.IsLayoutSequential
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權&lt;xref:System.Type.IsLayoutSequential%2A?displayProperty=fullName&gt;屬性。"
  remarks: "這個屬性會從 unmanaged 程式碼，是對存取 managed 類別，不應該從 managed 程式碼呼叫。       <xref:System.Type.IsLayoutSequential%2A?displayProperty=fullName>屬性會取得值，指出是否類別配置屬性`SequentialLayout`選取<xref:System.Type>。</xref:System.Type> </xref:System.Type.IsLayoutSequential%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsLayoutSequential { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果類別的配置屬性<xref uid=&quot;langword_csharp_SequentialLayout&quot; name=&quot;SequentialLayout&quot; href=&quot;&quot;></xref>選取<xref:System.Type>，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsLayoutSequential*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsMarshalByRef
  id: IsMarshalByRef
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsMarshalByRef
  nameWithType: _Type.IsMarshalByRef
  fullName: System.Runtime.InteropServices._Type.IsMarshalByRef
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權&lt;xref:System.Type.IsMarshalByRef%2A?displayProperty=fullName&gt;屬性。"
  remarks: "這個屬性會從 unmanaged 程式碼，是對存取 managed 類別，不應該從 managed 程式碼呼叫。       <xref:System.Type.IsMarshalByRef%2A?displayProperty=fullName>屬性會取得值，指出類型是否依參考封送處理。</xref:System.Type.IsMarshalByRef%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsMarshalByRef { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref:System.Type>依參考封送處理，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsMarshalByRef*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsNestedAssembly
  id: IsNestedAssembly
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsNestedAssembly
  nameWithType: _Type.IsNestedAssembly
  fullName: System.Runtime.InteropServices._Type.IsNestedAssembly
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權&lt;xref:System.Type.IsNestedAssembly%2A?displayProperty=fullName&gt;屬性。"
  remarks: "這個屬性會從 unmanaged 程式碼，是對存取 managed 類別，不應該從 managed 程式碼呼叫。       <xref:System.Type.IsNestedAssembly%2A?displayProperty=fullName>屬性會取得值，指出是否<xref:System.Type>為巢狀並只在它自己組件內為可見。</xref:System.Type> </xref:System.Type.IsNestedAssembly%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsNestedAssembly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref:System.Type>是巢狀並只在它自己組件內為可見，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsNestedAssembly*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsNestedFamANDAssem
  id: IsNestedFamANDAssem
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsNestedFamANDAssem
  nameWithType: _Type.IsNestedFamANDAssem
  fullName: System.Runtime.InteropServices._Type.IsNestedFamANDAssem
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權&lt;xref:System.Type.IsNestedFamANDAssem%2A?displayProperty=fullName&gt;屬性。"
  remarks: "這個屬性會從 unmanaged 程式碼，是對存取 managed 類別，不應該從 managed 程式碼呼叫。       <xref:System.Type.IsNestedFamANDAssem%2A?displayProperty=fullName>屬性會取得值，指出是否<xref:System.Type>為巢狀並只為可見的類別對屬於它自己家族和它自己組件。</xref:System.Type> </xref:System.Type.IsNestedFamANDAssem%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsNestedFamANDAssem { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref:System.Type>是巢狀並只對屬於它自己家族和它自己組件的類別為可見，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsNestedFamANDAssem*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsNestedFamily
  id: IsNestedFamily
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsNestedFamily
  nameWithType: _Type.IsNestedFamily
  fullName: System.Runtime.InteropServices._Type.IsNestedFamily
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權&lt;xref:System.Type.IsNestedFamily%2A?displayProperty=fullName&gt;屬性。"
  remarks: "這個屬性會從 unmanaged 程式碼，是對存取 managed 類別，不應該從 managed 程式碼呼叫。       <xref:System.Type.IsNestedFamily%2A?displayProperty=fullName>屬性會取得值，指出是否<xref:System.Type>為巢狀並只在它自己的家族內為可見。</xref:System.Type> </xref:System.Type.IsNestedFamily%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsNestedFamily { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref:System.Type>是巢狀並只在它自己的家族內為可見，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsNestedFamily*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsNestedFamORAssem
  id: IsNestedFamORAssem
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsNestedFamORAssem
  nameWithType: _Type.IsNestedFamORAssem
  fullName: System.Runtime.InteropServices._Type.IsNestedFamORAssem
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權&lt;xref:System.Type.IsNestedFamORAssem%2A?displayProperty=fullName&gt;屬性。"
  remarks: "這個屬性會從 unmanaged 程式碼，是對存取 managed 類別，不應該從 managed 程式碼呼叫。       <xref:System.Type.IsNestedFamORAssem%2A?displayProperty=fullName>屬性會取得值，指出是否<xref:System.Type>為巢狀並只對屬於它自己家族的類別，或它自己組件為可見。</xref:System.Type> </xref:System.Type.IsNestedFamORAssem%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsNestedFamORAssem { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref:System.Type>是巢狀並只對屬於它自己家族或它自己組件的類別為可見，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsNestedFamORAssem*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsNestedPrivate
  id: IsNestedPrivate
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsNestedPrivate
  nameWithType: _Type.IsNestedPrivate
  fullName: System.Runtime.InteropServices._Type.IsNestedPrivate
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權&lt;xref:System.Type.IsNestedPrivate%2A?displayProperty=fullName&gt;屬性。"
  remarks: "這個屬性會從 unmanaged 程式碼，是對存取 managed 類別，不應該從 managed 程式碼呼叫。       <xref:System.Type.IsNestedPrivate%2A?displayProperty=fullName>屬性會取得值，指出是否<xref:System.Type>是巢狀並且宣告為私用。</xref:System.Type> </xref:System.Type.IsNestedPrivate%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsNestedPrivate { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref:System.Type>是巢狀並且宣告為私用，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsNestedPrivate*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsNestedPublic
  id: IsNestedPublic
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsNestedPublic
  nameWithType: _Type.IsNestedPublic
  fullName: System.Runtime.InteropServices._Type.IsNestedPublic
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權&lt;xref:System.Type.IsNestedPublic%2A?displayProperty=fullName&gt;屬性。"
  remarks: "這個屬性會從 unmanaged 程式碼，是對存取 managed 類別，不應該從 managed 程式碼呼叫。       <xref:System.Type.IsNestedPublic%2A?displayProperty=fullName>屬性會取得值，指出類別是否為巢狀並且宣告為公用。</xref:System.Type.IsNestedPublic%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsNestedPublic { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果類別是巢狀，並宣告公用;否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Runtime.InteropServices._Type.IsNestedPublic*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsNotPublic
  id: IsNotPublic
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsNotPublic
  nameWithType: _Type.IsNotPublic
  fullName: System.Runtime.InteropServices._Type.IsNotPublic
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權&lt;xref:System.Type.IsNotPublic%2A?displayProperty=fullName&gt;屬性。"
  remarks: "這個屬性會從 unmanaged 程式碼，是對存取 managed 類別，不應該從 managed 程式碼呼叫。       <xref:System.Type.IsNotPublic%2A?displayProperty=fullName>屬性會取得值，指出是否最上層<xref:System.Type>未宣告為公用。</xref:System.Type> </xref:System.Type.IsNotPublic%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsNotPublic { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果最上層<xref:System.Type>未宣告為公用，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsNotPublic*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsPointer
  id: IsPointer
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsPointer
  nameWithType: _Type.IsPointer
  fullName: System.Runtime.InteropServices._Type.IsPointer
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權&lt;xref:System.Type.IsPointer%2A?displayProperty=fullName&gt;屬性。"
  remarks: "這個屬性會從 unmanaged 程式碼，是對存取 managed 類別，不應該從 managed 程式碼呼叫。       <xref:System.Type.IsPointer%2A?displayProperty=fullName>屬性會取得值，指出是否<xref:System.Type>的指標。</xref:System.Type> </xref:System.Type.IsPointer%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsPointer { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref:System.Type>是指標，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsPointer*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsPrimitive
  id: IsPrimitive
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsPrimitive
  nameWithType: _Type.IsPrimitive
  fullName: System.Runtime.InteropServices._Type.IsPrimitive
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權&lt;xref:System.Type.IsPrimitive%2A?displayProperty=fullName&gt;屬性。"
  remarks: "這個屬性會從 unmanaged 程式碼，是對存取 managed 類別，不應該從 managed 程式碼呼叫。       <xref:System.Type.IsPrimitive%2A?displayProperty=fullName>屬性會取得值，指出是否<xref:System.Type>是其中一個基本類型。</xref:System.Type> </xref:System.Type.IsPrimitive%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsPrimitive { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref:System.Type>是其中一個基本類型，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsPrimitive*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsPublic
  id: IsPublic
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsPublic
  nameWithType: _Type.IsPublic
  fullName: System.Runtime.InteropServices._Type.IsPublic
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權&lt;xref:System.Type.IsPublic%2A?displayProperty=fullName&gt;屬性。"
  remarks: "這個屬性會從 unmanaged 程式碼，是對存取 managed 類別，不應該從 managed 程式碼呼叫。       <xref:System.Type.IsPublic%2A?displayProperty=fullName>屬性會取得值，指出是否最上層<xref:System.Type>是否宣告為公用。</xref:System.Type> </xref:System.Type.IsPublic%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsPublic { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果最上層<xref:System.Type>宣告為公用，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsPublic*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsSealed
  id: IsSealed
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsSealed
  nameWithType: _Type.IsSealed
  fullName: System.Runtime.InteropServices._Type.IsSealed
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權&lt;xref:System.Type.IsSealed%2A?displayProperty=fullName&gt;屬性。"
  remarks: "這個屬性會從 unmanaged 程式碼，是對存取 managed 類別，不應該從 managed 程式碼呼叫。       <xref:System.Type.IsSealed%2A?displayProperty=fullName>屬性會取得值，指出是否<xref:System.Type>是否宣告為密封。</xref:System.Type> </xref:System.Type.IsSealed%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsSealed { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref:System.Type>宣告為密封，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsSealed*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsSerializable
  id: IsSerializable
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsSerializable
  nameWithType: _Type.IsSerializable
  fullName: System.Runtime.InteropServices._Type.IsSerializable
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權&lt;xref:System.Type.IsSerializable%2A?displayProperty=fullName&gt;屬性。"
  remarks: "這個屬性會從 unmanaged 程式碼，是對存取 managed 類別，不應該從 managed 程式碼呼叫。       <xref:System.Type.IsSerializable%2A?displayProperty=fullName>屬性會取得值，指出是否<xref:System.Type>是可序列化。</xref:System.Type> </xref:System.Type.IsSerializable%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsSerializable { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref:System.Type>是可序列化，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsSerializable*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsSpecialName
  id: IsSpecialName
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsSpecialName
  nameWithType: _Type.IsSpecialName
  fullName: System.Runtime.InteropServices._Type.IsSpecialName
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權&lt;xref:System.Type.IsSpecialName%2A?displayProperty=fullName&gt;屬性。"
  remarks: "這個屬性會從 unmanaged 程式碼，是對存取 managed 類別，不應該從 managed 程式碼呼叫。       <xref:System.Type.IsSpecialName%2A?displayProperty=fullName>屬性會取得值，指出是否<xref:System.Type>具有需要特殊處理的名稱。</xref:System.Type> </xref:System.Type.IsSpecialName%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsSpecialName { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref:System.Type>具有需要特殊處理的名稱，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsSpecialName*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsSubclassOf(System.Type)
  id: IsSubclassOf(System.Type)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsSubclassOf(Type)
  nameWithType: _Type.IsSubclassOf(Type)
  fullName: System.Runtime.InteropServices._Type.IsSubclassOf(Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權&lt;xref:System.Type.IsSubclassOf%2A?displayProperty=fullName&gt;方法。"
  remarks: "這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。       <xref:System.Type.IsSubclassOf%2A?displayProperty=fullName>方法會判斷此類別是否由<xref:System.Type>衍生自指定<xref:System.Type>.</xref:System.Type>所表示的類別</xref:System.Type>目前</xref:System.Type.IsSubclassOf%2A?displayProperty=fullName>的"
  syntax:
    content: public bool IsSubclassOf (Type c);
    parameters:
    - id: c
      type: System.Type
      description: "<xref:System.Type>要與目前<xref:System.Type>.</xref:System.Type>比較</xref:System.Type>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref:System.Type>由<code> c </code>參數和目前<xref:System.Type>代表類別，以及表示由目前類別<xref:System.Type>衍生自類別所代表<code> c </code>，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Type> </xref:System.Type> </xref:System.Type> 這個方法也會傳回<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>如果<code> c </code>且<xref:System.Type>表示相同的類別。</xref:System.Type>目前"
  overload: System.Runtime.InteropServices._Type.IsSubclassOf*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsUnicodeClass
  id: IsUnicodeClass
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsUnicodeClass
  nameWithType: _Type.IsUnicodeClass
  fullName: System.Runtime.InteropServices._Type.IsUnicodeClass
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權&lt;xref:System.Type.IsUnicodeClass%2A?displayProperty=fullName&gt;屬性。"
  remarks: "這個屬性會從 unmanaged 程式碼，是對存取 managed 類別，不應該從 managed 程式碼呼叫。       <xref:System.Type.IsUnicodeClass%2A?displayProperty=fullName>屬性會取得值，指出是否字串格式屬性`UnicodeClass`選取<xref:System.Type>。</xref:System.Type> </xref:System.Type.IsUnicodeClass%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsUnicodeClass { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果字串格式屬性<xref uid=&quot;langword_csharp_UnicodeClass&quot; name=&quot;UnicodeClass&quot; href=&quot;&quot;></xref>選取<xref:System.Type>，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsUnicodeClass*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsValueType
  id: IsValueType
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsValueType
  nameWithType: _Type.IsValueType
  fullName: System.Runtime.InteropServices._Type.IsValueType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權&lt;xref:System.Type.IsValueType%2A?displayProperty=fullName&gt;屬性。"
  remarks: "這個屬性會從 unmanaged 程式碼，是對存取 managed 類別，不應該從 managed 程式碼呼叫。       <xref:System.Type.IsValueType%2A?displayProperty=fullName>屬性會取得值，指出是否<xref:System.Type>是實值類型。</xref:System.Type> </xref:System.Type.IsValueType%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsValueType { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref:System.Type>是實值類型，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsValueType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.MemberType
  id: MemberType
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: MemberType
  nameWithType: _Type.MemberType
  fullName: System.Runtime.InteropServices._Type.MemberType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權&lt;xref:System.Type.MemberType%2A?displayProperty=fullName&gt;屬性。"
  remarks: "這個屬性會從 unmanaged 程式碼，是對存取 managed 類別，不應該從 managed 程式碼呼叫。       <xref:System.Type.MemberType%2A?displayProperty=fullName>屬性會取得<xref:System.Reflection.MemberTypes>值，指出這個成員類型或巢狀的類型。</xref:System.Reflection.MemberTypes> </xref:System.Type.MemberType%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.MemberTypes MemberType { get; }
    return:
      type: System.Reflection.MemberTypes
      description: "A <xref href=&quot;System.Reflection.MemberTypes&quot;> </xref>值，指出這個成員類型或巢狀的類型。"
  overload: System.Runtime.InteropServices._Type.MemberType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.Module
  id: Module
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: Module
  nameWithType: _Type.Module
  fullName: System.Runtime.InteropServices._Type.Module
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權&lt;xref:System.Type.Module%2A?displayProperty=fullName&gt;屬性。"
  remarks: "這個屬性會從 unmanaged 程式碼，是對存取 managed 類別，不應該從 managed 程式碼呼叫。       <xref:System.Type.Module%2A?displayProperty=fullName>屬性中取得模組 (DLL) 目前<xref:System.Type>定義。</xref:System.Type> </xref:System.Type.Module%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.Module Module { get; }
    return:
      type: System.Reflection.Module
      description: "中的模組名稱目前<xref:System.Type>定義。</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.Module*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.Name
  id: Name
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: Name
  nameWithType: _Type.Name
  fullName: System.Runtime.InteropServices._Type.Name
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權&lt;xref:System.Reflection.MemberInfo.Name%2A?displayProperty=fullName&gt;屬性。"
  remarks: "這個屬性會從 unmanaged 程式碼，是對存取 managed 類別，不應該從 managed 程式碼呼叫。       <xref:System.Reflection.MemberInfo.Name%2A?displayProperty=fullName>屬性會取得<xref:System.Type>.</xref:System.Type>名稱</xref:System.Reflection.MemberInfo.Name%2A?displayProperty=fullName>"
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "<xref:System.Type>.</xref:System.Type>名稱"
  overload: System.Runtime.InteropServices._Type.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.Namespace
  id: Namespace
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: Namespace
  nameWithType: _Type.Namespace
  fullName: System.Runtime.InteropServices._Type.Namespace
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權&lt;xref:System.Type.Namespace%2A?displayProperty=fullName&gt;屬性。"
  remarks: "這個屬性會從 unmanaged 程式碼，是對存取 managed 類別，不應該從 managed 程式碼呼叫。       <xref:System.Type.Namespace%2A?displayProperty=fullName>屬性會取得<xref:System.Type>.</xref:System.Type>的命名空間</xref:System.Type.Namespace%2A?displayProperty=fullName>"
  syntax:
    content: public string Namespace { get; }
    return:
      type: System.String
      description: "<xref:System.Type>.</xref:System.Type>的命名空間"
  overload: System.Runtime.InteropServices._Type.Namespace*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.ReflectedType
  id: ReflectedType
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: ReflectedType
  nameWithType: _Type.ReflectedType
  fullName: System.Runtime.InteropServices._Type.ReflectedType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權&lt;xref:System.Type.ReflectedType%2A?displayProperty=fullName&gt;屬性。"
  remarks: "這個屬性會從 unmanaged 程式碼，是對存取 managed 類別，不應該從 managed 程式碼呼叫。       <xref:System.Type.ReflectedType%2A?displayProperty=fullName>屬性取得用來取得這個成員的類別物件。</xref:System.Type.ReflectedType%2A?displayProperty=fullName>"
  syntax:
    content: public Type ReflectedType { get; }
    return:
      type: System.Type
      description: "<xref:System.Type>物件，可透過這個<xref:System.Reflection.MemberInfo>取得物件。</xref:System.Reflection.MemberInfo> </xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.ReflectedType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.ToString
  id: ToString
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: ToString()
  nameWithType: _Type.ToString()
  fullName: System.Runtime.InteropServices._Type.ToString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權&lt;xref:System.Type.ToString%2A?displayProperty=fullName&gt;方法。"
  remarks: "這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。       <xref:System.Type.ToString%2A?displayProperty=fullName>方法會傳回目前<xref:System.Type>.</xref:System.Type>名稱</xref:System.Type.ToString%2A?displayProperty=fullName>"
  syntax:
    content: public string ToString ();
    parameters: []
    return:
      type: System.String
      description: "<xref:System.String>表示目前<xref:System.Type>.</xref:System.Type>名稱</xref:System.String>"
  overload: System.Runtime.InteropServices._Type.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.TypeHandle
  id: TypeHandle
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: TypeHandle
  nameWithType: _Type.TypeHandle
  fullName: System.Runtime.InteropServices._Type.TypeHandle
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權&lt;xref:System.Type.TypeHandle%2A?displayProperty=fullName&gt;屬性。"
  remarks: "這個屬性會從 unmanaged 程式碼，是對存取 managed 類別，不應該從 managed 程式碼呼叫。       <xref:System.Type.TypeHandle%2A?displayProperty=fullName>屬性會取得目前<xref:System.Type>.</xref:System.Type>的控制代碼</xref:System.Type.TypeHandle%2A?displayProperty=fullName>"
  syntax:
    content: public RuntimeTypeHandle TypeHandle { get; }
    return:
      type: System.RuntimeTypeHandle
      description: "目前<xref:System.Type>.</xref:System.Type>控制代碼"
  overload: System.Runtime.InteropServices._Type.TypeHandle*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.TypeInitializer
  id: TypeInitializer
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: TypeInitializer
  nameWithType: _Type.TypeInitializer
  fullName: System.Runtime.InteropServices._Type.TypeInitializer
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權&lt;xref:System.Type.TypeInitializer%2A?displayProperty=fullName&gt;屬性。"
  remarks: "這個屬性會從 unmanaged 程式碼，是對存取 managed 類別，不應該從 managed 程式碼呼叫。       <xref:System.Type.TypeInitializer%2A?displayProperty=fullName>屬性會取得<xref:System.Type>.</xref:System.Type>的初始設定式</xref:System.Type.TypeInitializer%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.ConstructorInfo TypeInitializer { get; }
    return:
      type: System.Reflection.ConstructorInfo
      description: "<xref:System.Reflection.ConstructorInfo>包含名稱的<xref:System.Type>.</xref:System.Type>的類別建構函式</xref:System.Reflection.ConstructorInfo>"
  overload: System.Runtime.InteropServices._Type.TypeInitializer*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.UnderlyingSystemType
  id: UnderlyingSystemType
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: UnderlyingSystemType
  nameWithType: _Type.UnderlyingSystemType
  fullName: System.Runtime.InteropServices._Type.UnderlyingSystemType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權&lt;xref:System.Type.UnderlyingSystemType%2A?displayProperty=fullName&gt;屬性。"
  remarks: "這個屬性會從 unmanaged 程式碼，是對存取 managed 類別，不應該從 managed 程式碼呼叫。       <xref:System.Type.UnderlyingSystemType%2A?displayProperty=fullName>屬性會指出代表這個類型的 common language runtime 所提供的類型。</xref:System.Type.UnderlyingSystemType%2A?displayProperty=fullName>"
  syntax:
    content: public Type UnderlyingSystemType { get; }
    return:
      type: System.Type
      description: "<xref:System.Type>.</xref:System.Type>基礎系統類型"
  overload: System.Runtime.InteropServices._Type.UnderlyingSystemType*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Runtime.InteropServices._Type.Assembly
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: Assembly
  nameWithType: _Type.Assembly
  fullName: System.Runtime.InteropServices._Type.Assembly
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: true
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.Runtime.InteropServices._Type.AssemblyQualifiedName
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: AssemblyQualifiedName
  nameWithType: _Type.AssemblyQualifiedName
  fullName: System.Runtime.InteropServices._Type.AssemblyQualifiedName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.InteropServices._Type.Attributes
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: Attributes
  nameWithType: _Type.Attributes
  fullName: System.Runtime.InteropServices._Type.Attributes
- uid: System.Reflection.TypeAttributes
  parent: System.Reflection
  isExternal: true
  name: TypeAttributes
  nameWithType: TypeAttributes
  fullName: System.Reflection.TypeAttributes
- uid: System.Runtime.InteropServices._Type.BaseType
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: BaseType
  nameWithType: _Type.BaseType
  fullName: System.Runtime.InteropServices._Type.BaseType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Runtime.InteropServices._Type.DeclaringType
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: DeclaringType
  nameWithType: _Type.DeclaringType
  fullName: System.Runtime.InteropServices._Type.DeclaringType
- uid: System.Runtime.InteropServices._Type.Equals(System.Object)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: Equals(Object)
  nameWithType: _Type.Equals(Object)
  fullName: System.Runtime.InteropServices._Type.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Runtime.InteropServices._Type.Equals(System.Type)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: Equals(Type)
  nameWithType: _Type.Equals(Type)
  fullName: System.Runtime.InteropServices._Type.Equals(Type)
- uid: System.Runtime.InteropServices._Type.FindInterfaces(System.Reflection.TypeFilter,System.Object)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: FindInterfaces(TypeFilter,Object)
  nameWithType: _Type.FindInterfaces(TypeFilter,Object)
  fullName: System.Runtime.InteropServices._Type.FindInterfaces(TypeFilter,Object)
- uid: System.Type[]
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type[]
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Reflection.TypeFilter
  parent: System.Reflection
  isExternal: false
  name: TypeFilter
  nameWithType: TypeFilter
  fullName: System.Reflection.TypeFilter
- uid: System.Runtime.InteropServices._Type.FindMembers(System.Reflection.MemberTypes,System.Reflection.BindingFlags,System.Reflection.MemberFilter,System.Object)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: FindMembers(MemberTypes,BindingFlags,MemberFilter,Object)
  nameWithType: _Type.FindMembers(MemberTypes,BindingFlags,MemberFilter,Object)
  fullName: System.Runtime.InteropServices._Type.FindMembers(MemberTypes,BindingFlags,MemberFilter,Object)
- uid: System.Reflection.MemberInfo[]
  parent: System.Reflection
  isExternal: true
  name: MemberInfo
  nameWithType: MemberInfo
  fullName: System.Reflection.MemberInfo[]
  spec.csharp:
  - uid: System.Reflection.MemberInfo
    name: MemberInfo
    nameWithType: MemberInfo
    fullName: MemberInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Reflection.MemberTypes
  parent: System.Reflection
  isExternal: false
  name: MemberTypes
  nameWithType: MemberTypes
  fullName: System.Reflection.MemberTypes
- uid: System.Reflection.BindingFlags
  parent: System.Reflection
  isExternal: false
  name: BindingFlags
  nameWithType: BindingFlags
  fullName: System.Reflection.BindingFlags
- uid: System.Reflection.MemberFilter
  parent: System.Reflection
  isExternal: false
  name: MemberFilter
  nameWithType: MemberFilter
  fullName: System.Reflection.MemberFilter
- uid: System.Runtime.InteropServices._Type.FullName
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: FullName
  nameWithType: _Type.FullName
  fullName: System.Runtime.InteropServices._Type.FullName
- uid: System.Runtime.InteropServices._Type.GetArrayRank
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetArrayRank()
  nameWithType: _Type.GetArrayRank()
  fullName: System.Runtime.InteropServices._Type.GetArrayRank()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Runtime.InteropServices._Type.GetConstructor(System.Type[])
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetConstructor(Type[])
  nameWithType: _Type.GetConstructor(Type[])
  fullName: System.Runtime.InteropServices._Type.GetConstructor(Type[])
- uid: System.Reflection.ConstructorInfo
  parent: System.Reflection
  isExternal: true
  name: ConstructorInfo
  nameWithType: ConstructorInfo
  fullName: System.Reflection.ConstructorInfo
- uid: System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetConstructor(BindingFlags,Binder,Type[],ParameterModifier[])
  nameWithType: _Type.GetConstructor(BindingFlags,Binder,Type[],ParameterModifier[])
  fullName: System.Runtime.InteropServices._Type.GetConstructor(BindingFlags,Binder,Type[],ParameterModifier[])
- uid: System.Reflection.Binder
  parent: System.Reflection
  isExternal: false
  name: Binder
  nameWithType: Binder
  fullName: System.Reflection.Binder
- uid: System.Reflection.ParameterModifier[]
  parent: System.Reflection
  isExternal: false
  name: ParameterModifier
  nameWithType: ParameterModifier
  fullName: System.Reflection.ParameterModifier[]
  spec.csharp:
  - uid: System.Reflection.ParameterModifier
    name: ParameterModifier
    nameWithType: ParameterModifier
    fullName: ParameterModifier[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetConstructor(BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])
  nameWithType: _Type.GetConstructor(BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])
  fullName: System.Runtime.InteropServices._Type.GetConstructor(BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])
- uid: System.Reflection.CallingConventions
  parent: System.Reflection
  isExternal: true
  name: CallingConventions
  nameWithType: CallingConventions
  fullName: System.Reflection.CallingConventions
- uid: System.Runtime.InteropServices._Type.GetConstructors
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetConstructors()
  nameWithType: _Type.GetConstructors()
  fullName: System.Runtime.InteropServices._Type.GetConstructors()
- uid: System.Reflection.ConstructorInfo[]
  parent: System.Reflection
  isExternal: true
  name: ConstructorInfo
  nameWithType: ConstructorInfo
  fullName: System.Reflection.ConstructorInfo[]
  spec.csharp:
  - uid: System.Reflection.ConstructorInfo
    name: ConstructorInfo
    nameWithType: ConstructorInfo
    fullName: ConstructorInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.InteropServices._Type.GetConstructors(System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetConstructors(BindingFlags)
  nameWithType: _Type.GetConstructors(BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetConstructors(BindingFlags)
- uid: System.Runtime.InteropServices._Type.GetCustomAttributes(System.Boolean)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetCustomAttributes(Boolean)
  nameWithType: _Type.GetCustomAttributes(Boolean)
  fullName: System.Runtime.InteropServices._Type.GetCustomAttributes(Boolean)
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.InteropServices._Type.GetCustomAttributes(System.Type,System.Boolean)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetCustomAttributes(Type,Boolean)
  nameWithType: _Type.GetCustomAttributes(Type,Boolean)
  fullName: System.Runtime.InteropServices._Type.GetCustomAttributes(Type,Boolean)
- uid: System.Runtime.InteropServices._Type.GetDefaultMembers
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetDefaultMembers()
  nameWithType: _Type.GetDefaultMembers()
  fullName: System.Runtime.InteropServices._Type.GetDefaultMembers()
- uid: System.Runtime.InteropServices._Type.GetElementType
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetElementType()
  nameWithType: _Type.GetElementType()
  fullName: System.Runtime.InteropServices._Type.GetElementType()
- uid: System.Runtime.InteropServices._Type.GetEvent(System.String)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetEvent(String)
  nameWithType: _Type.GetEvent(String)
  fullName: System.Runtime.InteropServices._Type.GetEvent(String)
- uid: System.Reflection.EventInfo
  parent: System.Reflection
  isExternal: true
  name: EventInfo
  nameWithType: EventInfo
  fullName: System.Reflection.EventInfo
- uid: System.Runtime.InteropServices._Type.GetEvent(System.String,System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetEvent(String,BindingFlags)
  nameWithType: _Type.GetEvent(String,BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetEvent(String,BindingFlags)
- uid: System.Runtime.InteropServices._Type.GetEvents
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetEvents()
  nameWithType: _Type.GetEvents()
  fullName: System.Runtime.InteropServices._Type.GetEvents()
- uid: System.Reflection.EventInfo[]
  parent: System.Reflection
  isExternal: true
  name: EventInfo
  nameWithType: EventInfo
  fullName: System.Reflection.EventInfo[]
  spec.csharp:
  - uid: System.Reflection.EventInfo
    name: EventInfo
    nameWithType: EventInfo
    fullName: EventInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.InteropServices._Type.GetEvents(System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetEvents(BindingFlags)
  nameWithType: _Type.GetEvents(BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetEvents(BindingFlags)
- uid: System.Runtime.InteropServices._Type.GetField(System.String)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetField(String)
  nameWithType: _Type.GetField(String)
  fullName: System.Runtime.InteropServices._Type.GetField(String)
- uid: System.Reflection.FieldInfo
  parent: System.Reflection
  isExternal: true
  name: FieldInfo
  nameWithType: FieldInfo
  fullName: System.Reflection.FieldInfo
- uid: System.Runtime.InteropServices._Type.GetField(System.String,System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetField(String,BindingFlags)
  nameWithType: _Type.GetField(String,BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetField(String,BindingFlags)
- uid: System.Runtime.InteropServices._Type.GetFields
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetFields()
  nameWithType: _Type.GetFields()
  fullName: System.Runtime.InteropServices._Type.GetFields()
- uid: System.Reflection.FieldInfo[]
  parent: System.Reflection
  isExternal: true
  name: FieldInfo
  nameWithType: FieldInfo
  fullName: System.Reflection.FieldInfo[]
  spec.csharp:
  - uid: System.Reflection.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: FieldInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.InteropServices._Type.GetFields(System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetFields(BindingFlags)
  nameWithType: _Type.GetFields(BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetFields(BindingFlags)
- uid: System.Runtime.InteropServices._Type.GetHashCode
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetHashCode()
  nameWithType: _Type.GetHashCode()
  fullName: System.Runtime.InteropServices._Type.GetHashCode()
- uid: System.Runtime.InteropServices._Type.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  nameWithType: _Type.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  fullName: System.Runtime.InteropServices._Type.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.Runtime.InteropServices._Type.GetInterface(System.String)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetInterface(String)
  nameWithType: _Type.GetInterface(String)
  fullName: System.Runtime.InteropServices._Type.GetInterface(String)
- uid: System.Runtime.InteropServices._Type.GetInterface(System.String,System.Boolean)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetInterface(String,Boolean)
  nameWithType: _Type.GetInterface(String,Boolean)
  fullName: System.Runtime.InteropServices._Type.GetInterface(String,Boolean)
- uid: System.Runtime.InteropServices._Type.GetInterfaceMap(System.Type)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetInterfaceMap(Type)
  nameWithType: _Type.GetInterfaceMap(Type)
  fullName: System.Runtime.InteropServices._Type.GetInterfaceMap(Type)
- uid: System.Reflection.InterfaceMapping
  parent: System.Reflection
  isExternal: true
  name: InterfaceMapping
  nameWithType: InterfaceMapping
  fullName: System.Reflection.InterfaceMapping
- uid: System.Runtime.InteropServices._Type.GetInterfaces
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetInterfaces()
  nameWithType: _Type.GetInterfaces()
  fullName: System.Runtime.InteropServices._Type.GetInterfaces()
- uid: System.Runtime.InteropServices._Type.GetMember(System.String)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetMember(String)
  nameWithType: _Type.GetMember(String)
  fullName: System.Runtime.InteropServices._Type.GetMember(String)
- uid: System.Runtime.InteropServices._Type.GetMember(System.String,System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetMember(String,BindingFlags)
  nameWithType: _Type.GetMember(String,BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetMember(String,BindingFlags)
- uid: System.Runtime.InteropServices._Type.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetMember(String,MemberTypes,BindingFlags)
  nameWithType: _Type.GetMember(String,MemberTypes,BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetMember(String,MemberTypes,BindingFlags)
- uid: System.Runtime.InteropServices._Type.GetMembers
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetMembers()
  nameWithType: _Type.GetMembers()
  fullName: System.Runtime.InteropServices._Type.GetMembers()
- uid: System.Runtime.InteropServices._Type.GetMembers(System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetMembers(BindingFlags)
  nameWithType: _Type.GetMembers(BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetMembers(BindingFlags)
- uid: System.Runtime.InteropServices._Type.GetMethod(System.String)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetMethod(String)
  nameWithType: _Type.GetMethod(String)
  fullName: System.Runtime.InteropServices._Type.GetMethod(String)
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: true
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetMethod(String,BindingFlags)
  nameWithType: _Type.GetMethod(String,BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetMethod(String,BindingFlags)
- uid: System.Runtime.InteropServices._Type.GetMethod(System.String,System.Type[])
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetMethod(String,Type[])
  nameWithType: _Type.GetMethod(String,Type[])
  fullName: System.Runtime.InteropServices._Type.GetMethod(String,Type[])
- uid: System.Runtime.InteropServices._Type.GetMethod(System.String,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetMethod(String,Type[],ParameterModifier[])
  nameWithType: _Type.GetMethod(String,Type[],ParameterModifier[])
  fullName: System.Runtime.InteropServices._Type.GetMethod(String,Type[],ParameterModifier[])
- uid: System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetMethod(String,BindingFlags,Binder,Type[],ParameterModifier[])
  nameWithType: _Type.GetMethod(String,BindingFlags,Binder,Type[],ParameterModifier[])
  fullName: System.Runtime.InteropServices._Type.GetMethod(String,BindingFlags,Binder,Type[],ParameterModifier[])
- uid: System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetMethod(String,BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])
  nameWithType: _Type.GetMethod(String,BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])
  fullName: System.Runtime.InteropServices._Type.GetMethod(String,BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])
- uid: System.Runtime.InteropServices._Type.GetMethods
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetMethods()
  nameWithType: _Type.GetMethods()
  fullName: System.Runtime.InteropServices._Type.GetMethods()
- uid: System.Reflection.MethodInfo[]
  parent: System.Reflection
  isExternal: true
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo[]
  spec.csharp:
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    nameWithType: MethodInfo
    fullName: MethodInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.InteropServices._Type.GetMethods(System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetMethods(BindingFlags)
  nameWithType: _Type.GetMethods(BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetMethods(BindingFlags)
- uid: System.Runtime.InteropServices._Type.GetNestedType(System.String)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetNestedType(String)
  nameWithType: _Type.GetNestedType(String)
  fullName: System.Runtime.InteropServices._Type.GetNestedType(String)
- uid: System.Runtime.InteropServices._Type.GetNestedType(System.String,System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetNestedType(String,BindingFlags)
  nameWithType: _Type.GetNestedType(String,BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetNestedType(String,BindingFlags)
- uid: System.Runtime.InteropServices._Type.GetNestedTypes
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetNestedTypes()
  nameWithType: _Type.GetNestedTypes()
  fullName: System.Runtime.InteropServices._Type.GetNestedTypes()
- uid: System.Runtime.InteropServices._Type.GetNestedTypes(System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetNestedTypes(BindingFlags)
  nameWithType: _Type.GetNestedTypes(BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetNestedTypes(BindingFlags)
- uid: System.Runtime.InteropServices._Type.GetProperties
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetProperties()
  nameWithType: _Type.GetProperties()
  fullName: System.Runtime.InteropServices._Type.GetProperties()
- uid: System.Reflection.PropertyInfo[]
  parent: System.Reflection
  isExternal: true
  name: PropertyInfo
  nameWithType: PropertyInfo
  fullName: System.Reflection.PropertyInfo[]
  spec.csharp:
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    nameWithType: PropertyInfo
    fullName: PropertyInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.InteropServices._Type.GetProperties(System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetProperties(BindingFlags)
  nameWithType: _Type.GetProperties(BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetProperties(BindingFlags)
- uid: System.Runtime.InteropServices._Type.GetProperty(System.String)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetProperty(String)
  nameWithType: _Type.GetProperty(String)
  fullName: System.Runtime.InteropServices._Type.GetProperty(String)
- uid: System.Reflection.PropertyInfo
  parent: System.Reflection
  isExternal: true
  name: PropertyInfo
  nameWithType: PropertyInfo
  fullName: System.Reflection.PropertyInfo
- uid: System.Runtime.InteropServices._Type.GetProperty(System.String,System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetProperty(String,BindingFlags)
  nameWithType: _Type.GetProperty(String,BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetProperty(String,BindingFlags)
- uid: System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetProperty(String,Type)
  nameWithType: _Type.GetProperty(String,Type)
  fullName: System.Runtime.InteropServices._Type.GetProperty(String,Type)
- uid: System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type[])
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetProperty(String,Type[])
  nameWithType: _Type.GetProperty(String,Type[])
  fullName: System.Runtime.InteropServices._Type.GetProperty(String,Type[])
- uid: System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type,System.Type[])
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetProperty(String,Type,Type[])
  nameWithType: _Type.GetProperty(String,Type,Type[])
  fullName: System.Runtime.InteropServices._Type.GetProperty(String,Type,Type[])
- uid: System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetProperty(String,Type,Type[],ParameterModifier[])
  nameWithType: _Type.GetProperty(String,Type,Type[],ParameterModifier[])
  fullName: System.Runtime.InteropServices._Type.GetProperty(String,Type,Type[],ParameterModifier[])
- uid: System.Runtime.InteropServices._Type.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetProperty(String,BindingFlags,Binder,Type,Type[],ParameterModifier[])
  nameWithType: _Type.GetProperty(String,BindingFlags,Binder,Type,Type[],ParameterModifier[])
  fullName: System.Runtime.InteropServices._Type.GetProperty(String,BindingFlags,Binder,Type,Type[],ParameterModifier[])
- uid: System.Runtime.InteropServices._Type.GetType
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetType()
  nameWithType: _Type.GetType()
  fullName: System.Runtime.InteropServices._Type.GetType()
- uid: System.Runtime.InteropServices._Type.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetTypeInfo(UInt32,UInt32,IntPtr)
  nameWithType: _Type.GetTypeInfo(UInt32,UInt32,IntPtr)
  fullName: System.Runtime.InteropServices._Type.GetTypeInfo(UInt32,UInt32,IntPtr)
- uid: System.Runtime.InteropServices._Type.GetTypeInfoCount(System.UInt32@)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetTypeInfoCount(UInt32)
  nameWithType: _Type.GetTypeInfoCount(UInt32)
  fullName: System.Runtime.InteropServices._Type.GetTypeInfoCount(UInt32)
- uid: System.Runtime.InteropServices._Type.GUID
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GUID
  nameWithType: _Type.GUID
  fullName: System.Runtime.InteropServices._Type.GUID
- uid: System.Runtime.InteropServices._Type.HasElementType
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: HasElementType
  nameWithType: _Type.HasElementType
  fullName: System.Runtime.InteropServices._Type.HasElementType
- uid: System.Runtime.InteropServices._Type.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  nameWithType: _Type.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  fullName: System.Runtime.InteropServices._Type.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
- uid: System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[])
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: InvokeMember(String,BindingFlags,Binder,Object,Object[])
  nameWithType: _Type.InvokeMember(String,BindingFlags,Binder,Object,Object[])
  fullName: System.Runtime.InteropServices._Type.InvokeMember(String,BindingFlags,Binder,Object,Object[])
- uid: System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Globalization.CultureInfo)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: InvokeMember(String,BindingFlags,Binder,Object,Object[],CultureInfo)
  nameWithType: _Type.InvokeMember(String,BindingFlags,Binder,Object,Object[],CultureInfo)
  fullName: System.Runtime.InteropServices._Type.InvokeMember(String,BindingFlags,Binder,Object,Object[],CultureInfo)
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: InvokeMember(String,BindingFlags,Binder,Object,Object[],ParameterModifier[],CultureInfo,String[])
  nameWithType: _Type.InvokeMember(String,BindingFlags,Binder,Object,Object[],ParameterModifier[],CultureInfo,String[])
  fullName: System.Runtime.InteropServices._Type.InvokeMember(String,BindingFlags,Binder,Object,Object[],ParameterModifier[],CultureInfo,String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.InteropServices._Type.IsAbstract
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsAbstract
  nameWithType: _Type.IsAbstract
  fullName: System.Runtime.InteropServices._Type.IsAbstract
- uid: System.Runtime.InteropServices._Type.IsAnsiClass
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsAnsiClass
  nameWithType: _Type.IsAnsiClass
  fullName: System.Runtime.InteropServices._Type.IsAnsiClass
- uid: System.Runtime.InteropServices._Type.IsArray
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsArray
  nameWithType: _Type.IsArray
  fullName: System.Runtime.InteropServices._Type.IsArray
- uid: System.Runtime.InteropServices._Type.IsAssignableFrom(System.Type)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsAssignableFrom(Type)
  nameWithType: _Type.IsAssignableFrom(Type)
  fullName: System.Runtime.InteropServices._Type.IsAssignableFrom(Type)
- uid: System.Runtime.InteropServices._Type.IsAutoClass
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsAutoClass
  nameWithType: _Type.IsAutoClass
  fullName: System.Runtime.InteropServices._Type.IsAutoClass
- uid: System.Runtime.InteropServices._Type.IsAutoLayout
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsAutoLayout
  nameWithType: _Type.IsAutoLayout
  fullName: System.Runtime.InteropServices._Type.IsAutoLayout
- uid: System.Runtime.InteropServices._Type.IsByRef
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsByRef
  nameWithType: _Type.IsByRef
  fullName: System.Runtime.InteropServices._Type.IsByRef
- uid: System.Runtime.InteropServices._Type.IsClass
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsClass
  nameWithType: _Type.IsClass
  fullName: System.Runtime.InteropServices._Type.IsClass
- uid: System.Runtime.InteropServices._Type.IsCOMObject
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsCOMObject
  nameWithType: _Type.IsCOMObject
  fullName: System.Runtime.InteropServices._Type.IsCOMObject
- uid: System.Runtime.InteropServices._Type.IsContextful
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsContextful
  nameWithType: _Type.IsContextful
  fullName: System.Runtime.InteropServices._Type.IsContextful
- uid: System.Runtime.InteropServices._Type.IsDefined(System.Type,System.Boolean)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsDefined(Type,Boolean)
  nameWithType: _Type.IsDefined(Type,Boolean)
  fullName: System.Runtime.InteropServices._Type.IsDefined(Type,Boolean)
- uid: System.Runtime.InteropServices._Type.IsEnum
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsEnum
  nameWithType: _Type.IsEnum
  fullName: System.Runtime.InteropServices._Type.IsEnum
- uid: System.Runtime.InteropServices._Type.IsExplicitLayout
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsExplicitLayout
  nameWithType: _Type.IsExplicitLayout
  fullName: System.Runtime.InteropServices._Type.IsExplicitLayout
- uid: System.Runtime.InteropServices._Type.IsImport
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsImport
  nameWithType: _Type.IsImport
  fullName: System.Runtime.InteropServices._Type.IsImport
- uid: System.Runtime.InteropServices._Type.IsInstanceOfType(System.Object)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsInstanceOfType(Object)
  nameWithType: _Type.IsInstanceOfType(Object)
  fullName: System.Runtime.InteropServices._Type.IsInstanceOfType(Object)
- uid: System.Runtime.InteropServices._Type.IsInterface
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsInterface
  nameWithType: _Type.IsInterface
  fullName: System.Runtime.InteropServices._Type.IsInterface
- uid: System.Runtime.InteropServices._Type.IsLayoutSequential
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsLayoutSequential
  nameWithType: _Type.IsLayoutSequential
  fullName: System.Runtime.InteropServices._Type.IsLayoutSequential
- uid: System.Runtime.InteropServices._Type.IsMarshalByRef
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsMarshalByRef
  nameWithType: _Type.IsMarshalByRef
  fullName: System.Runtime.InteropServices._Type.IsMarshalByRef
- uid: System.Runtime.InteropServices._Type.IsNestedAssembly
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsNestedAssembly
  nameWithType: _Type.IsNestedAssembly
  fullName: System.Runtime.InteropServices._Type.IsNestedAssembly
- uid: System.Runtime.InteropServices._Type.IsNestedFamANDAssem
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsNestedFamANDAssem
  nameWithType: _Type.IsNestedFamANDAssem
  fullName: System.Runtime.InteropServices._Type.IsNestedFamANDAssem
- uid: System.Runtime.InteropServices._Type.IsNestedFamily
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsNestedFamily
  nameWithType: _Type.IsNestedFamily
  fullName: System.Runtime.InteropServices._Type.IsNestedFamily
- uid: System.Runtime.InteropServices._Type.IsNestedFamORAssem
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsNestedFamORAssem
  nameWithType: _Type.IsNestedFamORAssem
  fullName: System.Runtime.InteropServices._Type.IsNestedFamORAssem
- uid: System.Runtime.InteropServices._Type.IsNestedPrivate
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsNestedPrivate
  nameWithType: _Type.IsNestedPrivate
  fullName: System.Runtime.InteropServices._Type.IsNestedPrivate
- uid: System.Runtime.InteropServices._Type.IsNestedPublic
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsNestedPublic
  nameWithType: _Type.IsNestedPublic
  fullName: System.Runtime.InteropServices._Type.IsNestedPublic
- uid: System.Runtime.InteropServices._Type.IsNotPublic
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsNotPublic
  nameWithType: _Type.IsNotPublic
  fullName: System.Runtime.InteropServices._Type.IsNotPublic
- uid: System.Runtime.InteropServices._Type.IsPointer
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsPointer
  nameWithType: _Type.IsPointer
  fullName: System.Runtime.InteropServices._Type.IsPointer
- uid: System.Runtime.InteropServices._Type.IsPrimitive
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsPrimitive
  nameWithType: _Type.IsPrimitive
  fullName: System.Runtime.InteropServices._Type.IsPrimitive
- uid: System.Runtime.InteropServices._Type.IsPublic
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsPublic
  nameWithType: _Type.IsPublic
  fullName: System.Runtime.InteropServices._Type.IsPublic
- uid: System.Runtime.InteropServices._Type.IsSealed
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsSealed
  nameWithType: _Type.IsSealed
  fullName: System.Runtime.InteropServices._Type.IsSealed
- uid: System.Runtime.InteropServices._Type.IsSerializable
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsSerializable
  nameWithType: _Type.IsSerializable
  fullName: System.Runtime.InteropServices._Type.IsSerializable
- uid: System.Runtime.InteropServices._Type.IsSpecialName
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsSpecialName
  nameWithType: _Type.IsSpecialName
  fullName: System.Runtime.InteropServices._Type.IsSpecialName
- uid: System.Runtime.InteropServices._Type.IsSubclassOf(System.Type)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsSubclassOf(Type)
  nameWithType: _Type.IsSubclassOf(Type)
  fullName: System.Runtime.InteropServices._Type.IsSubclassOf(Type)
- uid: System.Runtime.InteropServices._Type.IsUnicodeClass
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsUnicodeClass
  nameWithType: _Type.IsUnicodeClass
  fullName: System.Runtime.InteropServices._Type.IsUnicodeClass
- uid: System.Runtime.InteropServices._Type.IsValueType
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsValueType
  nameWithType: _Type.IsValueType
  fullName: System.Runtime.InteropServices._Type.IsValueType
- uid: System.Runtime.InteropServices._Type.MemberType
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: MemberType
  nameWithType: _Type.MemberType
  fullName: System.Runtime.InteropServices._Type.MemberType
- uid: System.Runtime.InteropServices._Type.Module
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: Module
  nameWithType: _Type.Module
  fullName: System.Runtime.InteropServices._Type.Module
- uid: System.Reflection.Module
  parent: System.Reflection
  isExternal: true
  name: Module
  nameWithType: Module
  fullName: System.Reflection.Module
- uid: System.Runtime.InteropServices._Type.Name
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: Name
  nameWithType: _Type.Name
  fullName: System.Runtime.InteropServices._Type.Name
- uid: System.Runtime.InteropServices._Type.Namespace
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: Namespace
  nameWithType: _Type.Namespace
  fullName: System.Runtime.InteropServices._Type.Namespace
- uid: System.Runtime.InteropServices._Type.ReflectedType
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: ReflectedType
  nameWithType: _Type.ReflectedType
  fullName: System.Runtime.InteropServices._Type.ReflectedType
- uid: System.Runtime.InteropServices._Type.ToString
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: ToString()
  nameWithType: _Type.ToString()
  fullName: System.Runtime.InteropServices._Type.ToString()
- uid: System.Runtime.InteropServices._Type.TypeHandle
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: TypeHandle
  nameWithType: _Type.TypeHandle
  fullName: System.Runtime.InteropServices._Type.TypeHandle
- uid: System.RuntimeTypeHandle
  parent: System
  isExternal: true
  name: RuntimeTypeHandle
  nameWithType: RuntimeTypeHandle
  fullName: System.RuntimeTypeHandle
- uid: System.Runtime.InteropServices._Type.TypeInitializer
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: TypeInitializer
  nameWithType: _Type.TypeInitializer
  fullName: System.Runtime.InteropServices._Type.TypeInitializer
- uid: System.Runtime.InteropServices._Type.UnderlyingSystemType
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: UnderlyingSystemType
  nameWithType: _Type.UnderlyingSystemType
  fullName: System.Runtime.InteropServices._Type.UnderlyingSystemType
- uid: System.Runtime.InteropServices._Type.Assembly*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: Assembly
  nameWithType: _Type.Assembly
- uid: System.Runtime.InteropServices._Type.AssemblyQualifiedName*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: AssemblyQualifiedName
  nameWithType: _Type.AssemblyQualifiedName
- uid: System.Runtime.InteropServices._Type.Attributes*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: Attributes
  nameWithType: _Type.Attributes
- uid: System.Runtime.InteropServices._Type.BaseType*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: BaseType
  nameWithType: _Type.BaseType
- uid: System.Runtime.InteropServices._Type.DeclaringType*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: DeclaringType
  nameWithType: _Type.DeclaringType
- uid: System.Runtime.InteropServices._Type.Equals*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: Equals
  nameWithType: _Type.Equals
- uid: System.Runtime.InteropServices._Type.FindInterfaces*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: FindInterfaces
  nameWithType: _Type.FindInterfaces
- uid: System.Runtime.InteropServices._Type.FindMembers*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: FindMembers
  nameWithType: _Type.FindMembers
- uid: System.Runtime.InteropServices._Type.FullName*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: FullName
  nameWithType: _Type.FullName
- uid: System.Runtime.InteropServices._Type.GetArrayRank*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetArrayRank
  nameWithType: _Type.GetArrayRank
- uid: System.Runtime.InteropServices._Type.GetConstructor*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetConstructor
  nameWithType: _Type.GetConstructor
- uid: System.Runtime.InteropServices._Type.GetConstructors*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetConstructors
  nameWithType: _Type.GetConstructors
- uid: System.Runtime.InteropServices._Type.GetCustomAttributes*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetCustomAttributes
  nameWithType: _Type.GetCustomAttributes
- uid: System.Runtime.InteropServices._Type.GetDefaultMembers*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetDefaultMembers
  nameWithType: _Type.GetDefaultMembers
- uid: System.Runtime.InteropServices._Type.GetElementType*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetElementType
  nameWithType: _Type.GetElementType
- uid: System.Runtime.InteropServices._Type.GetEvent*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetEvent
  nameWithType: _Type.GetEvent
- uid: System.Runtime.InteropServices._Type.GetEvents*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetEvents
  nameWithType: _Type.GetEvents
- uid: System.Runtime.InteropServices._Type.GetField*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetField
  nameWithType: _Type.GetField
- uid: System.Runtime.InteropServices._Type.GetFields*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetFields
  nameWithType: _Type.GetFields
- uid: System.Runtime.InteropServices._Type.GetHashCode*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetHashCode
  nameWithType: _Type.GetHashCode
- uid: System.Runtime.InteropServices._Type.GetIDsOfNames*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetIDsOfNames
  nameWithType: _Type.GetIDsOfNames
- uid: System.Runtime.InteropServices._Type.GetInterface*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetInterface
  nameWithType: _Type.GetInterface
- uid: System.Runtime.InteropServices._Type.GetInterfaceMap*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetInterfaceMap
  nameWithType: _Type.GetInterfaceMap
- uid: System.Runtime.InteropServices._Type.GetInterfaces*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetInterfaces
  nameWithType: _Type.GetInterfaces
- uid: System.Runtime.InteropServices._Type.GetMember*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetMember
  nameWithType: _Type.GetMember
- uid: System.Runtime.InteropServices._Type.GetMembers*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetMembers
  nameWithType: _Type.GetMembers
- uid: System.Runtime.InteropServices._Type.GetMethod*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetMethod
  nameWithType: _Type.GetMethod
- uid: System.Runtime.InteropServices._Type.GetMethods*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetMethods
  nameWithType: _Type.GetMethods
- uid: System.Runtime.InteropServices._Type.GetNestedType*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetNestedType
  nameWithType: _Type.GetNestedType
- uid: System.Runtime.InteropServices._Type.GetNestedTypes*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetNestedTypes
  nameWithType: _Type.GetNestedTypes
- uid: System.Runtime.InteropServices._Type.GetProperties*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetProperties
  nameWithType: _Type.GetProperties
- uid: System.Runtime.InteropServices._Type.GetProperty*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetProperty
  nameWithType: _Type.GetProperty
- uid: System.Runtime.InteropServices._Type.GetType*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetType
  nameWithType: _Type.GetType
- uid: System.Runtime.InteropServices._Type.GetTypeInfo*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetTypeInfo
  nameWithType: _Type.GetTypeInfo
- uid: System.Runtime.InteropServices._Type.GetTypeInfoCount*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetTypeInfoCount
  nameWithType: _Type.GetTypeInfoCount
- uid: System.Runtime.InteropServices._Type.GUID*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GUID
  nameWithType: _Type.GUID
- uid: System.Runtime.InteropServices._Type.HasElementType*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: HasElementType
  nameWithType: _Type.HasElementType
- uid: System.Runtime.InteropServices._Type.Invoke*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: Invoke
  nameWithType: _Type.Invoke
- uid: System.Runtime.InteropServices._Type.InvokeMember*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: InvokeMember
  nameWithType: _Type.InvokeMember
- uid: System.Runtime.InteropServices._Type.IsAbstract*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsAbstract
  nameWithType: _Type.IsAbstract
- uid: System.Runtime.InteropServices._Type.IsAnsiClass*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsAnsiClass
  nameWithType: _Type.IsAnsiClass
- uid: System.Runtime.InteropServices._Type.IsArray*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsArray
  nameWithType: _Type.IsArray
- uid: System.Runtime.InteropServices._Type.IsAssignableFrom*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsAssignableFrom
  nameWithType: _Type.IsAssignableFrom
- uid: System.Runtime.InteropServices._Type.IsAutoClass*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsAutoClass
  nameWithType: _Type.IsAutoClass
- uid: System.Runtime.InteropServices._Type.IsAutoLayout*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsAutoLayout
  nameWithType: _Type.IsAutoLayout
- uid: System.Runtime.InteropServices._Type.IsByRef*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsByRef
  nameWithType: _Type.IsByRef
- uid: System.Runtime.InteropServices._Type.IsClass*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsClass
  nameWithType: _Type.IsClass
- uid: System.Runtime.InteropServices._Type.IsCOMObject*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsCOMObject
  nameWithType: _Type.IsCOMObject
- uid: System.Runtime.InteropServices._Type.IsContextful*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsContextful
  nameWithType: _Type.IsContextful
- uid: System.Runtime.InteropServices._Type.IsDefined*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsDefined
  nameWithType: _Type.IsDefined
- uid: System.Runtime.InteropServices._Type.IsEnum*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsEnum
  nameWithType: _Type.IsEnum
- uid: System.Runtime.InteropServices._Type.IsExplicitLayout*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsExplicitLayout
  nameWithType: _Type.IsExplicitLayout
- uid: System.Runtime.InteropServices._Type.IsImport*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsImport
  nameWithType: _Type.IsImport
- uid: System.Runtime.InteropServices._Type.IsInstanceOfType*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsInstanceOfType
  nameWithType: _Type.IsInstanceOfType
- uid: System.Runtime.InteropServices._Type.IsInterface*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsInterface
  nameWithType: _Type.IsInterface
- uid: System.Runtime.InteropServices._Type.IsLayoutSequential*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsLayoutSequential
  nameWithType: _Type.IsLayoutSequential
- uid: System.Runtime.InteropServices._Type.IsMarshalByRef*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsMarshalByRef
  nameWithType: _Type.IsMarshalByRef
- uid: System.Runtime.InteropServices._Type.IsNestedAssembly*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsNestedAssembly
  nameWithType: _Type.IsNestedAssembly
- uid: System.Runtime.InteropServices._Type.IsNestedFamANDAssem*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsNestedFamANDAssem
  nameWithType: _Type.IsNestedFamANDAssem
- uid: System.Runtime.InteropServices._Type.IsNestedFamily*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsNestedFamily
  nameWithType: _Type.IsNestedFamily
- uid: System.Runtime.InteropServices._Type.IsNestedFamORAssem*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsNestedFamORAssem
  nameWithType: _Type.IsNestedFamORAssem
- uid: System.Runtime.InteropServices._Type.IsNestedPrivate*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsNestedPrivate
  nameWithType: _Type.IsNestedPrivate
- uid: System.Runtime.InteropServices._Type.IsNestedPublic*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsNestedPublic
  nameWithType: _Type.IsNestedPublic
- uid: System.Runtime.InteropServices._Type.IsNotPublic*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsNotPublic
  nameWithType: _Type.IsNotPublic
- uid: System.Runtime.InteropServices._Type.IsPointer*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsPointer
  nameWithType: _Type.IsPointer
- uid: System.Runtime.InteropServices._Type.IsPrimitive*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsPrimitive
  nameWithType: _Type.IsPrimitive
- uid: System.Runtime.InteropServices._Type.IsPublic*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsPublic
  nameWithType: _Type.IsPublic
- uid: System.Runtime.InteropServices._Type.IsSealed*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsSealed
  nameWithType: _Type.IsSealed
- uid: System.Runtime.InteropServices._Type.IsSerializable*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsSerializable
  nameWithType: _Type.IsSerializable
- uid: System.Runtime.InteropServices._Type.IsSpecialName*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsSpecialName
  nameWithType: _Type.IsSpecialName
- uid: System.Runtime.InteropServices._Type.IsSubclassOf*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsSubclassOf
  nameWithType: _Type.IsSubclassOf
- uid: System.Runtime.InteropServices._Type.IsUnicodeClass*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsUnicodeClass
  nameWithType: _Type.IsUnicodeClass
- uid: System.Runtime.InteropServices._Type.IsValueType*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsValueType
  nameWithType: _Type.IsValueType
- uid: System.Runtime.InteropServices._Type.MemberType*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: MemberType
  nameWithType: _Type.MemberType
- uid: System.Runtime.InteropServices._Type.Module*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: Module
  nameWithType: _Type.Module
- uid: System.Runtime.InteropServices._Type.Name*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: Name
  nameWithType: _Type.Name
- uid: System.Runtime.InteropServices._Type.Namespace*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: Namespace
  nameWithType: _Type.Namespace
- uid: System.Runtime.InteropServices._Type.ReflectedType*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: ReflectedType
  nameWithType: _Type.ReflectedType
- uid: System.Runtime.InteropServices._Type.ToString*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: ToString
  nameWithType: _Type.ToString
- uid: System.Runtime.InteropServices._Type.TypeHandle*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: TypeHandle
  nameWithType: _Type.TypeHandle
- uid: System.Runtime.InteropServices._Type.TypeInitializer*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: TypeInitializer
  nameWithType: _Type.TypeInitializer
- uid: System.Runtime.InteropServices._Type.UnderlyingSystemType*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: UnderlyingSystemType
  nameWithType: _Type.UnderlyingSystemType
