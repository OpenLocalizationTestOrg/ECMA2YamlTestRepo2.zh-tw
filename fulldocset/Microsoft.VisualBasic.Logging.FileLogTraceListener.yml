### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener
  id: FileLogTraceListener
  children:
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor(System.String)
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.Append
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.Close
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.Dispose(System.Boolean)
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.GetSupportedAttributes
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.Location
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.Write(System.String)
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine(System.String)
  langs:
  - csharp
  name: FileLogTraceListener
  nameWithType: FileLogTraceListener
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener
  type: Class
  summary: "提供簡單的接聽程式的記錄將輸出導向至檔案。"
  remarks: "FileLogTraceListener 類別會提供自動的維護功能，以封存記錄檔，如有需要在每日或每個應用程式。 此自動保存功能有助於減少的開發人員和管理員維護責任。       FileLogTraceListener 的執行個體可以加入至<xref:System.Diagnostics.Debug.Listeners%2A?displayProperty=fullName>或<xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=fullName>集合，以重新導向輸出記錄到文字檔。</xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=fullName> </xref:System.Diagnostics.Debug.Listeners%2A?displayProperty=fullName> 這個類別的執行個體也可以加入至`My.Application.Log`或`My.Log`（適用於 Web 應用程式） 中[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]應用程式。 如需詳細資訊，請參閱[逐步解說︰ 變更位置 My.Application.Log 寫入資訊](~/add/includes/ajax-current-ext-md.md)`.`此類別的主要功能包括︰ 1。  *保存功能*。 這個類別所產生的記錄檔會根據基底名稱和日期，以及要在區別記錄檔的後續版本中的記錄檔的數字來命名。 可視需要在建立新的記錄檔。           明確的檔案名稱的格式，是`baseName`[-`dateStamp`] [-`version`].log，其中:-`baseName`部分是基本的記錄檔名稱，由指定<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A>屬性。</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A>          -`dateStamp`組件具有格式&quot;YYYY-MM-DD&quot;，並會顯示當<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A>或<xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption><xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption>.</xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption> </xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption> </xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A>          -如果需要多個記錄檔具有相同`baseName`和`dateStamp`、`version`組件正`Integer`，加入至檔案名稱。      2.  *多個類別執行個體*。 如果正在使用中的檔案寫入 FileLogTraceListener 類別的執行個體:-類別共用檔案，如果另一個類別的執行個體 FileLogTraceListener 之同一處理序正在使用它。          -此類別會建立新的記錄檔，如果另一個處理序正在使用檔案，請使用下一個可用的名稱。      3.  *執行緒安全*。 FileLogTraceListener 類別具備執行緒安全。 這可讓您安全地寫入訊息記錄檔從多個執行緒不使用鎖定。       **記錄檔位置**-<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A>屬性所接受<xref:Microsoft.VisualBasic.Logging.LogFileLocation>列舉來指定要寫入的記錄檔的一般目錄的其中一個。</xref:Microsoft.VisualBasic.Logging.LogFileLocation> </xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A>      -若要將記錄寫入另一個位置，設定<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A>至該位置的屬性。</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A>       **記錄檔名稱**-記錄檔的基底的名稱由指定<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A>屬性。</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A>      -目前的記錄檔名稱可以從讀取<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>屬性。</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> 在檔案系統，它被衍生自其他幾個屬性和記錄檔的目前狀態。       **記錄的維護**-建立新的記錄檔的最小頻率由<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A>屬性。</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> 當這個值是<xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption>或<xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption>、 每日或每週至少一次建立新的記錄檔和日期戳記就會合併至<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>名稱。</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> </xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption> </xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption>      -記錄檔的最大大小 （以位元組為單位） 由<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A>屬性。</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A> 如果記錄檔大小超過此大小，其他訊息寫入記錄檔會捨棄並視<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A>屬性，擲回例外狀況。</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A>      -<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A>屬性會決定必須有多少可用空間 （以位元組為單位）。</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A> 這有助於確保 FileLogTraceListener 類別不會耗用所有可用磁碟空間。 使用<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A>屬性來指定記錄檔的行為，當有將小於<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A>位元組可用。</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A> </xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A>       **記錄檔輸出設定**-<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush%2A>屬性會指定是否基礎資料流應該自動清除之後每次寫入至記錄檔。</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush%2A>      -<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append%2A>屬性會指定是否要將訊息附加至目前的記錄檔，如果允許，或將它們寫入至新的記錄檔。</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append%2A>      -<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>屬性會指定要用於記錄檔訊息中的欄位用來分隔字串。</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>      -<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding%2A>屬性會指定要建立新的記錄檔時使用的編碼方式。</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding%2A>       **記錄檔輸出**-<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A>和<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A>方法會將訊息寫入記錄檔。</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A> </xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> 這些方法會檢查<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A>屬性，以及任何現有的記錄檔具有相同的基底名稱，來判斷是否應該建立新的記錄檔。</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A>      -<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A>方法排清目前在記錄檔的輸出緩衝區中的任何訊息。</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A>      -<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A>方法會關閉記錄檔，使其可以用於其他處理程序。</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A>       **啟用輸出**追蹤或偵錯才能使用追蹤接聽程式，您必須啟用。 下列語法是特定的編譯器。 如果您使用 C# 以外的編譯器或[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]，請參閱編譯器的文件。      -若要啟用偵錯 C# 中，加入`/d:DEBUG`旗標設為編譯器命令列，當您編譯程式碼，或者您可以加入`#define DEBUG`加入您的檔案頂端。 在[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]，新增`/d:DEBUG=True`編譯器命令列的旗標。      -若要啟用追蹤，在 C# 中的，加入`/d:TRACE`旗標設為編譯器命令列，當您編譯程式碼，或新增`#define TRACE`加入您的檔案頂端。 在[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]，新增`/d:TRACE=True`編譯器命令列的旗標。       若要設定接聽程式的層級，編輯您的應用程式的組態檔。 在這個檔案中，您可以加入接聽程式、 設定它的型別和它的參數，方法移除接聽程式，或清除所有先前設定的應用程式的接聽程式。 組態檔應該格式如下列範例所示。       針對要執行此範例中，您必須提供完整的組件名稱。 如需如何取得完整組件名稱資訊，請參閱[組件名稱](~/add/includes/ajax-current-ext-md.md)。      ```   <configuration>       <system.diagnostics>           <sharedListeners>               <add name=&quot;FileLog&quot;                   type=&quot;Microsoft.VisualBasic.Logging.FileLogTraceListener,                          Microsoft.VisualBasic, Version=8.0.0.0,                          Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a,                          processorArchitecture=MSIL&quot;                    initializeData=&quot;FileLogWriter&quot;/>           </sharedListeners>       </system.diagnostics>   </configuration>   ```"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(false)]

      public class FileLogTraceListener : System.Diagnostics.TraceListener
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.Diagnostics.TraceListener
  implements: []
  inheritedMembers:
  - System.Diagnostics.TraceListener.Attributes
  - System.Diagnostics.TraceListener.Dispose
  - System.Diagnostics.TraceListener.Fail(System.String)
  - System.Diagnostics.TraceListener.Fail(System.String,System.String)
  - System.Diagnostics.TraceListener.Filter
  - System.Diagnostics.TraceListener.IndentLevel
  - System.Diagnostics.TraceListener.IndentSize
  - System.Diagnostics.TraceListener.IsThreadSafe
  - System.Diagnostics.TraceListener.Name
  - System.Diagnostics.TraceListener.NeedIndent
  - System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)
  - System.Diagnostics.TraceListener.TraceOutputOptions
  - System.Diagnostics.TraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)
  - System.Diagnostics.TraceListener.Write(System.Object)
  - System.Diagnostics.TraceListener.Write(System.Object,System.String)
  - System.Diagnostics.TraceListener.Write(System.String,System.String)
  - System.Diagnostics.TraceListener.WriteIndent
  - System.Diagnostics.TraceListener.WriteLine(System.Object)
  - System.Diagnostics.TraceListener.WriteLine(System.Object,System.String)
  - System.Diagnostics.TraceListener.WriteLine(System.String,System.String)
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor
  id: '#ctor'
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: FileLogTraceListener()
  nameWithType: FileLogTraceListener.FileLogTraceListener()
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.FileLogTraceListener()
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "初始化的新執行個體<xref href=&quot;Microsoft.VisualBasic.Logging.FileLogTraceListener&quot;></xref>類別的預設名稱。"
  remarks: "這個方法會設定的執行個體名稱<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>FileLogTraceListener 的類別。</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>       您可以存取執行個體名稱，透過<xref:System.Diagnostics.TraceListener.Name%2A>屬性。</xref:System.Diagnostics.TraceListener.Name%2A>"
  syntax:
    content: public FileLogTraceListener ();
    parameters: []
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: FileLogTraceListener(String)
  nameWithType: FileLogTraceListener.FileLogTraceListener(String)
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.FileLogTraceListener(String)
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "初始化的新執行個體<xref href=&quot;Microsoft.VisualBasic.Logging.FileLogTraceListener&quot;></xref>類別提供的名稱。"
  remarks: "這個方法會設定的執行個體名稱<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>類別`name`。</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>       您可以存取的執行個體名稱，以為<xref:System.Diagnostics.TraceListener.Name%2A>屬性。</xref:System.Diagnostics.TraceListener.Name%2A>"
  syntax:
    content: public FileLogTraceListener (string name);
    parameters:
    - id: name
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>. 執行個體物件的名稱。"
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Append
  id: Append
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: Append
  nameWithType: FileLogTraceListener.Append
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Append
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "決定是否要將輸出附加至目前檔案或寫入新檔案。"
  remarks: "附加屬性時`False`，輸出會寫入到新的檔案。 若屬性是`True`，輸出就會附加至目前的檔案，除非:-輸出檔案已遭其他處理程序。 在此情況下，新的記錄檔會建立與版本號碼，就會合併至<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>名稱。</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>      -目前的檔案大小大於什麼<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A>屬性可讓。</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A> 在此情況下，額外的訊息會捨棄並視<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A>屬性，擲回例外狀況。</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A>      -現有的檔案名稱是根據指定的記錄建立排程過期<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A>屬性。</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> 在此情況下，會建立新的記錄檔和日期戳記就會合併至<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>名稱。</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>"
  syntax:
    content: public bool Append { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;></xref>與<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>指出，輸出會附加至目前的檔案和<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;></xref>指出輸出會寫入到新的檔案。 這個屬性的預設設定<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;> </xref>。"
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.Append*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush
  id: AutoFlush
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: AutoFlush
  nameWithType: FileLogTraceListener.AutoFlush
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "指出會寫入至記錄檔資料流排清緩衝區。"
  remarks: "`False`設定 AutoFlush 屬性提供大部分的應用程式的最佳效能，因為它是更有效率的方式一次將多個訊息寫入記錄檔。 您可以使用<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A>排清目前在記錄檔中的任何訊息方法的輸出緩衝區。</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A> 您也可以使用<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A>方法，這個方法會隱含地關閉記錄檔之前排清資料流。</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A>"
  syntax:
    content: public bool AutoFlush { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;></xref>與<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>指出資料流會排清之後每次寫入; 否則記錄項目會緩衝和更有效率地撰寫。 這個屬性的預設設定<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>。"
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName
  id: BaseFileName
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: BaseFileName
  nameWithType: FileLogTraceListener.BaseFileName
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "取得或設定記錄檔中，用來建立完整的記錄檔名稱的基底名稱。"
  remarks: "The BaseFileName property determines the base name for the log files that the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class writes to.  \n  \n The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> property gives the current full log-file name. It is generated according to the log path, the base name, the date, and a number to distinguish it from different versions of the log. New log files are created on an as-needed basis.  \n  \n The explicit form of the full log file name is `path`\\\\`baseName`[-`dateStamp`][-`iteration`].log, where  \n  \n-   The `path` part is determined by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> property and, if that property value is set to <xref:Microsoft.VisualBasic.Logging.LogFileLocation>, the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> property.  \n  \n-   The `baseName` part is the fundamental log name, specified by the BaseFileName property.  \n  \n-   The `dateStamp` part has the format \"YYYY-MM-DD\", and it is shown when <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> is set to <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption> or <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption>.  \n  \n-   If more than one log file is needed with the same `baseName` and `dateStamp`, the `iteration` part, a positive `Integer`, is added to the file name."
  syntax:
    content: public string BaseFileName { get; set; }
    return:
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>. 記錄檔基底名稱。 預設為應用程式的產品名稱。"
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Close
  id: Close
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: Close()
  nameWithType: FileLogTraceListener.Close()
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Close()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "關閉目前的記錄檔的基礎資料流和釋放與目前資料流相關聯的任何資源。"
  remarks: "您不需要明確地呼叫 Close 方法，因為<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>類別會管理基礎資料流。</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>"
  syntax:
    content: public override void Close ();
    parameters: []
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.Close*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation
  id: CustomLocation
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: CustomLocation
  nameWithType: FileLogTraceListener.CustomLocation
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "取得或設定記錄檔目錄時<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location*>屬性設定為<xref href=&quot;Microsoft.VisualBasic.Logging.LogFileLocation&quot;> </xref>。</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location*>"
  remarks: "當 CustomLocation 屬性設定時，它也會設定<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A>至<xref:Microsoft.VisualBasic.Logging.LogFileLocation>。</xref:Microsoft.VisualBasic.Logging.LogFileLocation>屬性</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A>       如果無法解析目錄，CustomLocation 屬性將會擲回例外狀況。"
  syntax:
    content: public string CustomLocation { get; set; }
    return:
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>這是記錄檔目錄的名稱。 這個屬性的預設值是應用程式資料的使用者的目錄。"
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter
  id: Delimiter
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: Delimiter
  nameWithType: FileLogTraceListener.Delimiter
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "取得或設定用來分隔記錄檔訊息中的欄位的分隔符號。"
  remarks: "分隔符號屬性可讓您變更預設的分隔符號。"
  syntax:
    content: public string Delimiter { get; set; }
    return:
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>這是用在記錄檔訊息 欄位的分隔符號。 這個屬性的預設值是 TAB 字元。"
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior
  id: DiskSpaceExhaustedBehavior
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: DiskSpaceExhaustedBehavior
  nameWithType: FileLogTraceListener.DiskSpaceExhaustedBehavior
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "決定要執行的工作時寫入記錄檔，而且沒有較少可用磁碟空間超過所指定<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace*>屬性。</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace*>"
  remarks: "當 DiskSpaceExhaustedBehavior 屬性設定為<xref:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption>，記錄檔訊息被丟棄如果不是保留的磁碟空間不足。</xref:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption> 這是預設行為，並且防止簡單應用程式失敗的磁碟空間不足時。       更穩固的應用程式可以將 DiskSpaceExhaustedBehavior 屬性<xref:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption>，並加入`Try...Catch`區塊寫入記錄檔的所有程式碼周圍</xref:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption>"
  syntax:
    content: public Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption DiskSpaceExhaustedBehavior { get; set; }
    return:
      type: Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption
      description: "<xref href=&quot;Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption&quot;></xref>. 決定當您嘗試寫入檔案，而且沒有較少可用磁碟空間超過所指定的記錄檔時，該怎麼辦<> *> 屬性，或記錄檔的大小是否大於什麼<> *> 屬性允許。 預設值是<xref href=&quot;Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption&quot;> </xref>。"
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: FileLogTraceListener.Dispose(Boolean)
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Dispose(Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "關閉基礎資料流，並選擇性釋放 managed 的資源。"
  remarks: "當`disposing`參數是`True`，這個方法的任何 managed 物件所持有的資源全部釋出這個<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>參考。</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> 這個方法會叫用`Dispose`每個參考物件的方法。"
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>釋放 managed 和 unmanaged 資源;<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>只釋放 unmanaged 資源。"
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.Dispose*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding
  id: Encoding
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: Encoding
  nameWithType: FileLogTraceListener.Encoding
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "取得或設定要建立新的記錄檔時使用的編碼方式。"
  remarks: "將文字附加到現有的記錄檔，當該檔案的編碼方式使用，而非 Encoding 屬性所指定的編碼方式。"
  syntax:
    content: public System.Text.Encoding Encoding { get; set; }
    return:
      type: System.Text.Encoding
      description: "<xref:System.Text.Encoding>其中時要使用的編碼方式建立新的記錄檔。</xref:System.Text.Encoding> 這個屬性的預設值是<xref:System.Text.UTF8Encoding>.</xref:System.Text.UTF8Encoding>"
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush
  id: Flush
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: Flush()
  nameWithType: FileLogTraceListener.Flush()
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "排清基礎資料流寫入目前的記錄檔。"
  remarks: "使用 Flush 方法將所有緩衝的資料寫入至目前的記錄檔。"
  syntax:
    content: public override void Flush ();
    parameters: []
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName
  id: FullLogFileName
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: FullLogFileName
  nameWithType: FileLogTraceListener.FullLogFileName
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "取得目前的完整記錄檔名稱。"
  remarks: "The FullLogFileName property gives the current full log-file name. It is generated according to the log path, the base name, the date, and a number to distinguish it from different versions of the log. New log files are created on an as-needed basis.  \n  \n The explicit form of the full log-file name is `path`\\\\`baseName`[-`dateStamp`][-`iteration`].log, where:  \n  \n-   The `path` part is determined by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> property and, if that property value is set to <xref:Microsoft.VisualBasic.Logging.LogFileLocation>, the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> property.  \n  \n-   The `baseName` part is the fundamental log name, specified by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> property.  \n  \n-   The `dateStamp` part has the format YYYY-MM-DD, and it is shown when <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> is <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption> or <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption>.  \n  \n-   If more than one log file is needed with the same `baseName` and `dateStamp`, the `iteration` part, a positive `Integer`, is added to the file name."
  syntax:
    content: public string FullLogFileName { get; }
    return:
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>這是目前的完整記錄檔名稱。"
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.GetSupportedAttributes
  id: GetSupportedAttributes
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: GetSupportedAttributes()
  nameWithType: FileLogTraceListener.GetSupportedAttributes()
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.GetSupportedAttributes()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "取得由追蹤接聽程式支援的自訂 XML 組態屬性。"
  remarks: "<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>可用於控制行為的<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>類別</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>的執行個體的 XML 組態檔</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>的自訂屬性 使用任何其他屬性會造成組態例外狀況。"
  syntax:
    content: protected override string[] GetSupportedAttributes ();
    parameters: []
    return:
      type: System.String[]
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>陣列，包含此接聽程式所辨識的 XML 組態屬性。"
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.GetSupportedAttributes*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName
  id: IncludeHostName
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: IncludeHostName
  nameWithType: FileLogTraceListener.IncludeHostName
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "指出記錄電腦的主機名稱應包含在輸出中。"
  remarks: "使用屬性來設定的行為<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A>和<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A>方法。</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A> </xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A>"
  syntax:
    content: public bool IncludeHostName { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;></xref>. 使用<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>如果主應用程式識別項應包含; 否則請使用<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>。"
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Location
  id: Location
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: Location
  nameWithType: FileLogTraceListener.Location
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Location
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "取得或設定記錄檔的位置。"
  remarks: "Use the Location property to set the log path to one of the predefined paths, determined by the <xref:Microsoft.VisualBasic.Logging.LogFileLocation> enumeration values.  \n  \n|**Location value**|**Path**|  \n|------------------------|--------------|  \n|<xref:Microsoft.VisualBasic.Logging.LogFileLocation>|The path for the application data that is shared among all users, with the format:<br /><br /> `BasePath`\\\\`CompanyName`\\\\`ProductName`\\\\`ProductVersion`<br /><br /> A typical value for `BasePath` is:<br /><br /> C:\\Documents and Settings\\All Users\\Application Data<br /><br /> The values of `CompanyName`, `ProductName`, and `ProductVersion` come from the assembly.|  \n|<xref:Microsoft.VisualBasic.Logging.LogFileLocation>|The path for the executable file that started the application.|  \n|<xref:Microsoft.VisualBasic.Logging.LogFileLocation>|The path for the application data of a user, with the format:<br /><br /> `BasePath`\\\\`CompanyName`\\\\`ProductName`\\\\`ProductVersion`<br /><br /> A typical value for `BasePath` is:<br /><br /> C:\\Documents and Settings\\\\`username`\\Application Data<br /><br /> The values of `CompanyName`, `ProductName`, and `ProductVersion` come form the assembly.|  \n|<xref:Microsoft.VisualBasic.Logging.LogFileLocation>|The path of the current system's temporary folder.|  \n|<xref:Microsoft.VisualBasic.Logging.LogFileLocation>|If the string specified by <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> is not empty, then use it as the path; otherwise use the path for the application data of a user.|"
  syntax:
    content: public Microsoft.VisualBasic.Logging.LogFileLocation Location { get; set; }
    return:
      type: Microsoft.VisualBasic.Logging.LogFileLocation
      description: "<xref href=&quot;Microsoft.VisualBasic.Logging.LogFileLocation&quot;></xref>這是記錄檔的位置。 預設值是<xref href=&quot;Microsoft.VisualBasic.Logging.LogFileLocation&quot;> </xref>。"
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.Location*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule
  id: LogFileCreationSchedule
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: LogFileCreationSchedule
  nameWithType: FileLogTraceListener.LogFileCreationSchedule
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "決定要在記錄檔的名稱中包含的日期。"
  remarks: "將指定的其中一個<xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption>LogFileCreationSchedule 屬性來指定要在記錄檔的名稱中包含的日期的列舉值。</xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption>       日期格式為 YYYY-MM-DD 的- 如需格式的記錄檔名稱的詳細資訊，請參閱<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>      |**LogFileCreationSchedule 值**|**記錄檔名稱中的日期**|  |---------------------------------------|-----------------------------------|  |<xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption>|在記錄檔名稱中包含目前的日期。 |  |<xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption>|記錄檔名稱中不包含日期。 |  |<xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption>|在記錄檔名稱中包含當週的第一天。</xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption> </xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption> </xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption><br /><br /> 一週的開始星期六。 |"
  syntax:
    content: public Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption LogFileCreationSchedule { get; set; }
    return:
      type: Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption
      description: "<xref href=&quot;Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption&quot;></xref>. 這表示若要在記錄檔名稱中包含的日期。 預設值是<xref href=&quot;Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption&quot;> </xref>。"
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize
  id: MaxFileSize
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: MaxFileSize
  nameWithType: FileLogTraceListener.MaxFileSize
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "取得或設定允許的大小上限的記錄檔，以位元組為單位。"
  remarks: "您可以使用這個屬性來確定該記錄檔不會變得太大。       如果記錄檔大小 （以位元組為單位） 大於此屬性值，然後當<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>類別嘗試將訊息寫入記錄檔，會捨棄該訊息和失敗是無訊息或例外狀況就會擲回的值而定<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A>屬性。</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> </xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> 否則，訊息會寫入記錄檔，如果 （以位元組為單位） 的可用磁碟空間數量小於<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A>.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A>"
  syntax:
    content: public long MaxFileSize { get; set; }
    return:
      type: System.Int64
      description: "<xref uid=&quot;langword_csharp_Long&quot; name=&quot;Long&quot; href=&quot;&quot;></xref>. 這是最大允許的記錄檔大小，以位元組為單位。 預設值是 5000000。"
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "當這個屬性設定為值少於 1000年。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace
  id: ReserveDiskSpace
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: ReserveDiskSpace
  nameWithType: FileLogTraceListener.ReserveDiskSpace
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "取得或設定可用磁碟空間數量 （位元組），必要之前訊息可以寫入記錄檔。"
  remarks: "您可以使用這個屬性來確定該記錄檔未完全填滿磁碟。       如果數量的可用磁碟空間 （以位元組為單位） 小於的值，這個屬性，然後當<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>類別嘗試將訊息寫入記錄檔，會捨棄該訊息和失敗是無訊息或例外狀況就會擲回的值而定<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A>屬性。</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> </xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> 否則，訊息會寫入記錄檔，如果記錄檔案大小 （以位元組為單位） 大於<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A>.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A>"
  syntax:
    content: public long ReserveDiskSpace { get; set; }
    return:
      type: System.Int64
      description: "<xref uid=&quot;langword_csharp_Long&quot; name=&quot;Long&quot; href=&quot;&quot;></xref>. 這是必要的可用磁碟空間數量。 預設值為 10000000。"
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "當這個屬性設定為小於 0 的值。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)
  id: TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
  nameWithType: FileLogTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "寫入追蹤資訊、 資料物件和事件資訊至輸出檔或資料流。"
  remarks: "這個方法︰ 1。  格式化輸出的資料和內容資訊。      2.  若有需要，請建立新的記錄檔。      3.  您可以將資訊寫入記錄檔。       如需有關如何建立新的記錄檔的詳細資訊，請參閱<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>       下表列出的輸出欄位中出現的順序。 欄位字串所分隔的<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>屬性指定，後面接著行結束字元。</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>      |**欄位**|**輸出條件**|**描述**|  |---------------|--------------------------|---------------------|  |`source`|一律 |值`name`。 |  |`severity`|一律 |列舉值名稱`eventType`。 |  |`id`|一律 |字串表示`id`。 |  |`message`|一律 |字串表示`data`。 |  |`callStack`|當<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>屬性中設定<xref:System.Diagnostics.TraceOptions>旗標。 |<xref:System.Diagnostics.TraceEventCache.Callstack%2A>屬性`eventCache`。 |  |`CorrelationID`|當<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>屬性中設定<xref:System.Diagnostics.TraceOptions>旗標。 |<xref:System.Diagnostics.TraceEventCache.ThreadId%2A>屬性`eventCache`。 |  |`DateTime`|當<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>屬性中設定<xref:System.Diagnostics.TraceOptions>旗標。 |字串表示<xref:System.Diagnostics.TraceEventCache.DateTime%2A>屬性`eventCache`。</xref:System.Diagnostics.TraceEventCache.DateTime%2A>  </xref:System.Diagnostics.TraceOptions></xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceEventCache.ThreadId%2A>  </xref:System.Diagnostics.TraceOptions></xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceEventCache.Callstack%2A>  </xref:System.Diagnostics.TraceOptions></xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> 而異的文化特性用於字串轉換。 |  |`ProcessID`|當<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>屬性中設定<xref:System.Diagnostics.TraceOptions>旗標。 |字串表示<xref:System.Diagnostics.TraceEventCache.ProcessId%2A>屬性`eventCache`。</xref:System.Diagnostics.TraceEventCache.ProcessId%2A>  </xref:System.Diagnostics.TraceOptions></xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> 而異的文化特性用於字串轉換。 |  |`ThreadID`|當<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>屬性中設定<xref:System.Diagnostics.TraceOptions>旗標。 |<xref:System.Diagnostics.TraceEventCache.ThreadId%2A>屬性`eventCache`。 |  |`Timestamp`|當<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>屬性中設定<xref:System.Diagnostics.TraceOptions>旗標。 |字串表示<xref:System.Diagnostics.TraceEventCache.Timestamp%2A>屬性`eventCache`。</xref:System.Diagnostics.TraceEventCache.Timestamp%2A>  </xref:System.Diagnostics.TraceOptions></xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceEventCache.ThreadId%2A>  </xref:System.Diagnostics.TraceOptions></xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> 而異的文化特性用於字串轉換。 |  |`HostName`|當<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A>屬性是`True`。 |電腦的名稱。 |</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A>"
  syntax:
    content: public override void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, object data);
    parameters:
    - id: eventCache
      type: System.Diagnostics.TraceEventCache
      description: "A <xref href=&quot;System.Diagnostics.TraceEventCache&quot;> </xref>物件，其中包含目前處理序識別碼、 執行緒 ID 和堆疊追蹤資訊。"
    - id: source
      type: System.String
      description: "叫用這個方法的追蹤來源的名稱。"
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: "其中一個<xref href=&quot;System.Diagnostics.TraceEventType&quot;></xref>列舉值。"
    - id: id
      type: System.Int32
      description: "事件的數值識別項。"
    - id: data
      type: System.Object
      description: "要發出的追蹤資料。"
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  id: TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
  nameWithType: FileLogTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "寫入追蹤資訊、 資料物件和事件資訊至輸出檔或資料流的陣列。"
  remarks: "這個方法︰ 1。  格式化輸出中，2 的資料和內容資訊。  建立新的記錄檔，如有必要，3。  您可以將資訊寫入記錄檔。       如需有關如何建立新的記錄檔的詳細資訊，請參閱<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>       下表列出的輸出欄位中出現的順序。 欄位字串所分隔的<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>屬性指定，後面接著行結束字元。</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>      |**欄位**|**輸出條件**|**描述**|  |---------------|--------------------------|---------------------|  |`source`|一律 |值`name`。 |  |`severity`|一律 |列舉值名稱`eventType`。 |  |`id`|一律 |字串表示`id`。 |  |`message`|一律 |字串，其中包含每個項目中的字串表示`data`、<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>區隔。 |  |`callStack`|當<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>屬性中設定<xref:System.Diagnostics.TraceOptions>旗標。 |<xref:System.Diagnostics.TraceEventCache.Callstack%2A>屬性`eventCache`。 |  |`CorrelationID`|當<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>屬性中設定<xref:System.Diagnostics.TraceOptions>旗標。 |<xref:System.Diagnostics.TraceEventCache.ThreadId%2A>屬性`eventCache`。 |  |`DateTime`|當<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>屬性中設定<xref:System.Diagnostics.TraceOptions>旗標。 |字串表示<xref:System.Diagnostics.TraceEventCache.DateTime%2A>屬性`eventCache`。</xref:System.Diagnostics.TraceEventCache.DateTime%2A>  </xref:System.Diagnostics.TraceOptions></xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceEventCache.ThreadId%2A>  </xref:System.Diagnostics.TraceOptions></xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceEventCache.Callstack%2A>  </xref:System.Diagnostics.TraceOptions></xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> 而異的文化特性用於字串轉換。 |  |`ProcessID`|當<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>屬性中設定<xref:System.Diagnostics.TraceOptions>旗標。 |字串表示<xref:System.Diagnostics.TraceEventCache.ProcessId%2A>屬性`eventCache`。</xref:System.Diagnostics.TraceEventCache.ProcessId%2A>  </xref:System.Diagnostics.TraceOptions></xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> 而異的文化特性用於字串轉換。 |  |`ThreadID`|當<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>屬性中設定<xref:System.Diagnostics.TraceOptions>旗標。 |<xref:System.Diagnostics.TraceEventCache.ThreadId%2A>屬性`eventCache`。 |  |`Timestamp`|當<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>屬性中設定<xref:System.Diagnostics.TraceOptions>旗標。 |字串表示<xref:System.Diagnostics.TraceEventCache.Timestamp%2A>屬性`eventCache`。</xref:System.Diagnostics.TraceEventCache.Timestamp%2A>  </xref:System.Diagnostics.TraceOptions></xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceEventCache.ThreadId%2A>  </xref:System.Diagnostics.TraceOptions></xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> 而異的文化特性用於字串轉換。 |  |`HostName`|當<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A>屬性是`True`。 |電腦的名稱。 |</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A>"
  syntax:
    content: public override void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, object[] data);
    parameters:
    - id: eventCache
      type: System.Diagnostics.TraceEventCache
      description: "A <xref href=&quot;System.Diagnostics.TraceEventCache&quot;> </xref>物件，其中包含目前處理序識別碼、 執行緒 ID 和堆疊追蹤資訊。"
    - id: source
      type: System.String
      description: "叫用這個方法的追蹤來源的名稱。"
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: "其中一個<xref href=&quot;System.Diagnostics.TraceEventType&quot;></xref>列舉值。"
    - id: id
      type: System.Int32
      description: "事件的數值識別項。"
    - id: data
      type: System.Object[]
      description: "要發出做為資料的物件陣列。"
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)
  id: TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
  nameWithType: FileLogTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "寫入追蹤資訊、 訊息和事件資訊至輸出檔或資料流。"
  remarks: "這個方法︰ 1。  格式化輸出的資料和內容資訊。      2.  若有需要，請建立新的記錄檔。      3.  您可以將資訊寫入記錄檔。       如需有關如何建立新的記錄檔的詳細資訊，請參閱<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>       下表列出的輸出欄位以它們出現的順序。 欄位字串所分隔的<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>屬性指定，後面接著行結束字元。</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>      |**欄位**|**輸出條件**|**描述**|  |---------------|--------------------------|---------------------|  |`source`|一律。 |值`name`。 |  |`severity`|一律。 |列舉值名稱`eventType`。 |  |`id`|一律。 |字串表示`id`。 |  |`message`|一律。 |值`message`。 |  |`callStack`|當<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>屬性中設定<xref:System.Diagnostics.TraceOptions>旗標。 |<xref:System.Diagnostics.TraceEventCache.Callstack%2A>屬性`eventCache`。 |  |`CorrelationID`|當<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>屬性中設定<xref:System.Diagnostics.TraceOptions>旗標。 |<xref:System.Diagnostics.TraceEventCache.ThreadId%2A>屬性`eventCache`。 |  |`DateTime`|當<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>屬性中設定<xref:System.Diagnostics.TraceOptions>旗標。 |字串表示<xref:System.Diagnostics.TraceEventCache.DateTime%2A>屬性`eventCache`。</xref:System.Diagnostics.TraceEventCache.DateTime%2A>  </xref:System.Diagnostics.TraceOptions></xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceEventCache.ThreadId%2A>  </xref:System.Diagnostics.TraceOptions></xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceEventCache.Callstack%2A>  </xref:System.Diagnostics.TraceOptions></xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> 而異的文化特性用於字串轉換。 |  |`ProcessID`|當<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>屬性中設定<xref:System.Diagnostics.TraceOptions>旗標。 |字串表示<xref:System.Diagnostics.TraceEventCache.ProcessId%2A>屬性`eventCache`。</xref:System.Diagnostics.TraceEventCache.ProcessId%2A>  </xref:System.Diagnostics.TraceOptions></xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> 而異的文化特性用於字串轉換。 |  |`ThreadID`|當<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>屬性中設定<xref:System.Diagnostics.TraceOptions>旗標。 |<xref:System.Diagnostics.TraceEventCache.ThreadId%2A>屬性`eventCache`。 |  |`Timestamp`|當<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>屬性中設定<xref:System.Diagnostics.TraceOptions>旗標。 |字串表示<xref:System.Diagnostics.TraceEventCache.Timestamp%2A>屬性`eventCache`。</xref:System.Diagnostics.TraceEventCache.Timestamp%2A>  </xref:System.Diagnostics.TraceOptions></xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceEventCache.ThreadId%2A>  </xref:System.Diagnostics.TraceOptions></xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> 而異的文化特性用於字串轉換。 |  |`HostName`|當<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A>屬性是`True`。 |電腦的名稱。 |</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A>"
  syntax:
    content: public override void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string message);
    parameters:
    - id: eventCache
      type: System.Diagnostics.TraceEventCache
      description: "A <xref href=&quot;System.Diagnostics.TraceEventCache&quot;> </xref>物件，其中包含目前處理序識別碼、 執行緒 ID 和堆疊追蹤資訊。"
    - id: source
      type: System.String
      description: "叫用這個方法的追蹤來源的名稱。"
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: "其中一個<xref href=&quot;System.Diagnostics.TraceEventType&quot;></xref>列舉值。"
    - id: id
      type: System.Int32
      description: "事件的數值識別項。"
    - id: message
      type: System.String
      description: "要寫入的訊息。"
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  id: TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
  nameWithType: FileLogTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "寫入追蹤資訊、 格式化的物件和事件資訊至輸出檔或資料流的陣列。"
  remarks: "這個方法︰ 1。  格式化輸出的資料和內容資訊。      2.  建立新的新的記錄檔，如有必要。      3.  您可以將資訊寫入記錄檔。       如需有關如何建立新的記錄檔的詳細資訊，請參閱<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>       下表列出的輸出欄位以它們出現的順序。 欄位字串所分隔的<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>屬性指定，後面接著行結束字元。</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>      |**欄位**|**輸出條件**|**描述**|  |---------------|--------------------------|---------------------|  |`source`|一律 |值`name`。 |  |`severity`|一律 |列舉值名稱`eventType`。 |  |`id`|一律 |字串表示`id`。 |  |`message`|一律 |中的資料`args`以格式化`format`字串，對於字串轉換使用文化特性而異。 |  |`callStack`|當<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>屬性中設定<xref:System.Diagnostics.TraceOptions>旗標。 |<xref:System.Diagnostics.TraceEventCache.Callstack%2A>屬性`eventCache`。 |  |`CorrelationID`|當<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>屬性中設定<xref:System.Diagnostics.TraceOptions>旗標。 |<xref:System.Diagnostics.TraceEventCache.ThreadId%2A>屬性`eventCache`。 |  |`DateTime`|當<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>屬性中設定<xref:System.Diagnostics.TraceOptions>旗標。 |字串表示<xref:System.Diagnostics.TraceEventCache.DateTime%2A>屬性`eventCache`。</xref:System.Diagnostics.TraceEventCache.DateTime%2A>  </xref:System.Diagnostics.TraceOptions></xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceEventCache.ThreadId%2A>  </xref:System.Diagnostics.TraceOptions></xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceEventCache.Callstack%2A>  </xref:System.Diagnostics.TraceOptions></xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> 而異的文化特性用於字串轉換。 |  |`ProcessID`|當<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>屬性中設定<xref:System.Diagnostics.TraceOptions>旗標。 |字串表示<xref:System.Diagnostics.TraceEventCache.ProcessId%2A>屬性`eventCache`。</xref:System.Diagnostics.TraceEventCache.ProcessId%2A>  </xref:System.Diagnostics.TraceOptions></xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> 而異的文化特性用於字串轉換。 |  |`ThreadID`|當<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>屬性中設定<xref:System.Diagnostics.TraceOptions>旗標。 |<xref:System.Diagnostics.TraceEventCache.ThreadId%2A>屬性`eventCache`。 |  |`Timestamp`|當<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>屬性中設定<xref:System.Diagnostics.TraceOptions>旗標。 |字串表示<xref:System.Diagnostics.TraceEventCache.Timestamp%2A>屬性`eventCache`。</xref:System.Diagnostics.TraceEventCache.Timestamp%2A>  </xref:System.Diagnostics.TraceOptions></xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceEventCache.ThreadId%2A>  </xref:System.Diagnostics.TraceOptions></xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> 而異的文化特性用於字串轉換。 |  |`HostName`|當<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A>屬性是`True`。 |電腦的名稱。 |</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A>"
  syntax:
    content: public override void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string format, object[] args);
    parameters:
    - id: eventCache
      type: System.Diagnostics.TraceEventCache
      description: "A <xref href=&quot;System.Diagnostics.TraceEventCache&quot;> </xref>物件，其中包含目前處理序識別碼、 執行緒 ID 和堆疊追蹤資訊。"
    - id: source
      type: System.String
      description: "叫用這個方法的追蹤來源的名稱。"
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: "其中一個<xref href=&quot;System.Diagnostics.TraceEventType&quot;></xref>列舉值。"
    - id: id
      type: System.Int32
      description: "事件的數值識別項。"
    - id: format
      type: System.String
      description: "格式字串，包含零或多個格式項目，其對應至物件中`args`陣列。"
    - id: args
      type: System.Object[]
      description: "<xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;> </xref>陣列，其中包含零或多個要格式化的物件。"
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Write(System.String)
  id: Write(System.String)
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: Write(String)
  nameWithType: FileLogTraceListener.Write(String)
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Write(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "逐字訊息寫入磁碟，不含任何額外的內容資訊。"
  remarks: "Write 方法寫入記錄檔，不含任何額外的內容資訊的特定訊息。       使用其中一個<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A>方法，以在記錄檔輸出中包含的內容資訊。</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A>"
  syntax:
    content: public override void Write (string message);
    parameters:
    - id: message
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>. 要寫入的自訂訊息。"
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.Write*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine(System.String)
  id: WriteLine(System.String)
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: WriteLine(String)
  nameWithType: FileLogTraceListener.WriteLine(String)
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "逐字訊息寫入磁碟，後面接著目前的行結束字元，不含任何額外的內容資訊。"
  remarks: "WriteLine 方法會將特定訊息寫入記錄檔，不含任何額外的內容資訊。       使用其中一個<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A>方法，以在記錄檔輸出中包含的內容資訊。</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A>"
  syntax:
    content: public override void WriteLine (string message);
    parameters:
    - id: message
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>. 要寫入的自訂訊息。"
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Diagnostics.TraceListener
  isExternal: false
  name: System.Diagnostics.TraceListener
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: FileLogTraceListener()
  nameWithType: FileLogTraceListener.FileLogTraceListener()
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.FileLogTraceListener()
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor(System.String)
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: FileLogTraceListener(String)
  nameWithType: FileLogTraceListener.FileLogTraceListener(String)
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.FileLogTraceListener(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Append
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Append
  nameWithType: FileLogTraceListener.Append
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Append
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: AutoFlush
  nameWithType: FileLogTraceListener.AutoFlush
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: BaseFileName
  nameWithType: FileLogTraceListener.BaseFileName
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Close
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Close()
  nameWithType: FileLogTraceListener.Close()
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Close()
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: CustomLocation
  nameWithType: FileLogTraceListener.CustomLocation
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Delimiter
  nameWithType: FileLogTraceListener.Delimiter
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: DiskSpaceExhaustedBehavior
  nameWithType: FileLogTraceListener.DiskSpaceExhaustedBehavior
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior
- uid: Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption
  parent: Microsoft.VisualBasic.Logging
  isExternal: false
  name: DiskSpaceExhaustedOption
  nameWithType: DiskSpaceExhaustedOption
  fullName: Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Dispose(System.Boolean)
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: FileLogTraceListener.Dispose(Boolean)
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Dispose(Boolean)
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Encoding
  nameWithType: FileLogTraceListener.Encoding
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding
- uid: System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Flush()
  nameWithType: FileLogTraceListener.Flush()
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush()
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: FullLogFileName
  nameWithType: FileLogTraceListener.FullLogFileName
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.GetSupportedAttributes
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: GetSupportedAttributes()
  nameWithType: FileLogTraceListener.GetSupportedAttributes()
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.GetSupportedAttributes()
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: IncludeHostName
  nameWithType: FileLogTraceListener.IncludeHostName
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Location
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Location
  nameWithType: FileLogTraceListener.Location
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Location
- uid: Microsoft.VisualBasic.Logging.LogFileLocation
  parent: Microsoft.VisualBasic.Logging
  isExternal: false
  name: LogFileLocation
  nameWithType: LogFileLocation
  fullName: Microsoft.VisualBasic.Logging.LogFileLocation
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: LogFileCreationSchedule
  nameWithType: FileLogTraceListener.LogFileCreationSchedule
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule
- uid: Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption
  parent: Microsoft.VisualBasic.Logging
  isExternal: false
  name: LogFileCreationScheduleOption
  nameWithType: LogFileCreationScheduleOption
  fullName: Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: MaxFileSize
  nameWithType: FileLogTraceListener.MaxFileSize
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: ReserveDiskSpace
  nameWithType: FileLogTraceListener.ReserveDiskSpace
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
  nameWithType: FileLogTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
- uid: System.Diagnostics.TraceEventCache
  parent: System.Diagnostics
  isExternal: false
  name: TraceEventCache
  nameWithType: TraceEventCache
  fullName: System.Diagnostics.TraceEventCache
- uid: System.Diagnostics.TraceEventType
  parent: System.Diagnostics
  isExternal: false
  name: TraceEventType
  nameWithType: TraceEventType
  fullName: System.Diagnostics.TraceEventType
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
  nameWithType: FileLogTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
  nameWithType: FileLogTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
  nameWithType: FileLogTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Write(System.String)
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Write(String)
  nameWithType: FileLogTraceListener.Write(String)
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Write(String)
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine(System.String)
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: WriteLine(String)
  nameWithType: FileLogTraceListener.WriteLine(String)
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine(String)
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: FileLogTraceListener
  nameWithType: FileLogTraceListener.FileLogTraceListener
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Append*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Append
  nameWithType: FileLogTraceListener.Append
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: AutoFlush
  nameWithType: FileLogTraceListener.AutoFlush
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: BaseFileName
  nameWithType: FileLogTraceListener.BaseFileName
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Close*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Close
  nameWithType: FileLogTraceListener.Close
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: CustomLocation
  nameWithType: FileLogTraceListener.CustomLocation
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Delimiter
  nameWithType: FileLogTraceListener.Delimiter
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: DiskSpaceExhaustedBehavior
  nameWithType: FileLogTraceListener.DiskSpaceExhaustedBehavior
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Dispose*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Dispose
  nameWithType: FileLogTraceListener.Dispose
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Encoding
  nameWithType: FileLogTraceListener.Encoding
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Flush
  nameWithType: FileLogTraceListener.Flush
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: FullLogFileName
  nameWithType: FileLogTraceListener.FullLogFileName
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.GetSupportedAttributes*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: GetSupportedAttributes
  nameWithType: FileLogTraceListener.GetSupportedAttributes
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: IncludeHostName
  nameWithType: FileLogTraceListener.IncludeHostName
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Location*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Location
  nameWithType: FileLogTraceListener.Location
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: LogFileCreationSchedule
  nameWithType: FileLogTraceListener.LogFileCreationSchedule
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: MaxFileSize
  nameWithType: FileLogTraceListener.MaxFileSize
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: ReserveDiskSpace
  nameWithType: FileLogTraceListener.ReserveDiskSpace
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: TraceData
  nameWithType: FileLogTraceListener.TraceData
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: TraceEvent
  nameWithType: FileLogTraceListener.TraceEvent
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Write*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Write
  nameWithType: FileLogTraceListener.Write
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: WriteLine
  nameWithType: FileLogTraceListener.WriteLine
