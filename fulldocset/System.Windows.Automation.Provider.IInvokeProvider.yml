### YamlMime:ManagedReference
items:
- uid: System.Windows.Automation.Provider.IInvokeProvider
  id: IInvokeProvider
  children:
  - System.Windows.Automation.Provider.IInvokeProvider.Invoke
  langs:
  - csharp
  name: IInvokeProvider
  nameWithType: IInvokeProvider
  fullName: System.Windows.Automation.Provider.IInvokeProvider
  type: Interface
  summary: "公開方法與屬性，以支援使用者介面自動化用戶端存取起始或執行單一明確動作並不會維護狀態啟動時的控制項。"
  remarks: "在必須支援的 UI 自動化提供者上實作<xref:System.Windows.Automation.InvokePattern>控制項模式。</xref:System.Windows.Automation.InvokePattern>       控制項實作 IInvokeProvider，如果未透過另一個控制項模式提供者公開相同的行為。 例如，如果<xref:System.Windows.Automation.InvokePattern.Invoke%2A>在控制項上的方法會執行相同的動作<xref:System.Windows.Automation.ExpandCollapsePattern.Expand%2A>或<xref:System.Windows.Automation.ExpandCollapsePattern.Collapse%2A>方法，控制不應實作 IInvokeProvider。</xref:System.Windows.Automation.ExpandCollapsePattern.Collapse%2A> </xref:System.Windows.Automation.ExpandCollapsePattern.Expand%2A> </xref:System.Windows.Automation.InvokePattern.Invoke%2A>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      [System.Runtime.InteropServices.Guid("54fcb24b-e18e-47a2-b4d3-eccbe77599a2")]

      [System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]

      public interface IInvokeProvider
  implements: []
  platform:
  - net462
- uid: System.Windows.Automation.Provider.IInvokeProvider.Invoke
  id: Invoke
  parent: System.Windows.Automation.Provider.IInvokeProvider
  langs:
  - csharp
  name: Invoke()
  nameWithType: IInvokeProvider.Invoke()
  fullName: System.Windows.Automation.Provider.IInvokeProvider.Invoke()
  type: Method
  assemblies:
  - UIAutomationProvider
  namespace: System.Windows.Automation.Provider
  summary: "傳送要求以啟動控制項，並啟始其單一明確的動作。"
  remarks: "叫用的非同步呼叫，且必須立即傳回而不會封鎖。      > [!NOTE] > 這種行為會是特別重要的控制項，直接或間接啟動強制回應對話方塊時叫用。 發出事件的任何使用者介面自動化用戶端將會保持封鎖，直到關閉強制回應對話方塊。       叫用引發<xref:System.Windows.Automation.InvokePatternIdentifiers.InvokedEvent>事件。</xref:System.Windows.Automation.InvokePatternIdentifiers.InvokedEvent> 可能的話，控制其相關聯的動作完成之後，應該引發事件。       <xref:System.Windows.Automation.InvokePatternIdentifiers.InvokedEvent>對下列案例中的叫用要求提供服務之前，應引發:-不可能或實際等候直到在動作已完成。</xref:System.Windows.Automation.InvokePatternIdentifiers.InvokedEvent>      -此動作需要使用者互動。      -此動作會相當耗時，而且會導致長時間封鎖呼叫的用戶端。"
  example:
  - "The following example implements the Invoke method on the MouseDown event handler of a control. Assume that `providerControl` is a member variable that was initialized when the class was constructed.  \n  \n [!code-cs[UIAProvider_snip#106](~/add/codesnippet/csharp/UIAProvider/Invoker.cs#106)]"
  syntax:
    content: public void Invoke ();
    parameters: []
  overload: System.Windows.Automation.Provider.IInvokeProvider.Invoke*
  exceptions:
  - type: System.Windows.Automation.ElementNotEnabledException
    commentId: T:System.Windows.Automation.ElementNotEnabledException
    description: "如果未啟用此控制項。"
  platform:
  - net462
references:
- uid: System.Windows.Automation.ElementNotEnabledException
  parent: System.Windows.Automation
  isExternal: false
  name: ElementNotEnabledException
  nameWithType: ElementNotEnabledException
  fullName: System.Windows.Automation.ElementNotEnabledException
- uid: System.Windows.Automation.Provider.IInvokeProvider.Invoke
  parent: System.Windows.Automation.Provider.IInvokeProvider
  isExternal: false
  name: Invoke()
  nameWithType: IInvokeProvider.Invoke()
  fullName: System.Windows.Automation.Provider.IInvokeProvider.Invoke()
- uid: System.Windows.Automation.Provider.IInvokeProvider.Invoke*
  parent: System.Windows.Automation.Provider.IInvokeProvider
  isExternal: false
  name: Invoke
  nameWithType: IInvokeProvider.Invoke
