### YamlMime:ManagedReference
items:
- uid: System.Web.Profile.ProfileModule
  id: ProfileModule
  children:
  - System.Web.Profile.ProfileModule.#ctor
  - System.Web.Profile.ProfileModule.Dispose
  - System.Web.Profile.ProfileModule.Init(System.Web.HttpApplication)
  - System.Web.Profile.ProfileModule.MigrateAnonymous
  - System.Web.Profile.ProfileModule.Personalize
  - System.Web.Profile.ProfileModule.ProfileAutoSaving
  langs:
  - csharp
  name: ProfileModule
  nameWithType: ProfileModule
  fullName: System.Web.Profile.ProfileModule
  type: Class
  summary: "管理使用者設定檔和設定檔事件的建立。 這個類別無法被繼承。"
  remarks: "啟用使用者設定檔時，ASP.NET 會使用 ProfileModule 建立使用者設定檔，並將其儲存在<xref:System.Web.HttpContext.Profile%2A>目前<xref:System.Web.HttpContext>.</xref:System.Web.HttpContext>屬性</xref:System.Web.HttpContext.Profile%2A>       ProfileModule 會公開您的應用程式中進行驗證，您可以處理下列事件:-<xref:System.Web.Profile.ProfileModule.MigrateAnonymous>事件，若要移轉至已驗證的設定檔時的匿名使用者登入時匿名設定檔中的設定檔設定</xref:System.Web.Profile.ProfileModule.MigrateAnonymous>      -<xref:System.Web.Profile.ProfileModule.Personalize>事件，以自訂使用者設定檔的建立方式。</xref:System.Web.Profile.ProfileModule.Personalize>      -<xref:System.Web.Profile.ProfileModule.ProfileAutoSaving>事件，來控制使用者設定檔會儲存當<xref:System.Web.Profile.ProfileManager.AutomaticSaveEnabled%2A>屬性設定為`true`。</xref:System.Web.Profile.ProfileManager.AutomaticSaveEnabled%2A> </xref:System.Web.Profile.ProfileModule.ProfileAutoSaving>       啟用使用者設定檔的相關資訊，請參閱[profile 元素 （ASP.NET 設定結構描述）](http://msdn.microsoft.com/en-us/ccb9bf3a-a044-464d-b89b-5cb5a3d389dd)。"
  example:
  - "The following example shows a Web.config file that enables anonymous identification and profile properties that support anonymous users.  \n  \n```  \n<configuration>  \n  <system.web>  \n    <authentication mode=\"Forms\" >  \n      <forms loginUrl=\"login.aspx\" name=\".ASPXFORMSAUTH\" />  \n    </authentication>  \n  \n    <anonymousIdentification enabled=\"true\" />  \n  \n    <profile enabled=\"true\" defaultProvider=\"AspNetSqlProvider\">  \n      <properties>  \n        <add name=\"ZipCode\" allowAnonymous=\"true\" />  \n        <add name=\"CityAndState\" allowAnonymous=\"true\" />  \n        <add name=\"StockSymbols\" type=\"System.Collections.ArrayList\" allowAnonymous=\"true\" />  \n      </properties>  \n    </profile>  \n  </system.web>  \n</configuration>  \n```  \n  \n The following code example shows the <xref:System.Web.Profile.ProfileModule.MigrateAnonymous> event included in the Global.asax file for an ASP.NET application. The <xref:System.Web.Profile.ProfileModule.MigrateAnonymous> event copies profile property values from the anonymous profile to the profile for the current user.  \n  \n [!code-vb[System.Web.Profile.ProfileManager#1](~/add/codesnippet/visualbasic/t-system.web.profile.pro_13_1.asax)]\n [!code-cs[System.Web.Profile.ProfileManager#1](~/add/codesnippet/csharp/t-system.web.profile.pro_13_1.asax)]"
  syntax:
    content: 'public sealed class ProfileModule : System.Web.IHttpModule'
  inheritance:
  - System.Object
  implements:
  - System.Web.IHttpModule
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileModule.#ctor
  id: '#ctor'
  parent: System.Web.Profile.ProfileModule
  langs:
  - csharp
  name: ProfileModule()
  nameWithType: ProfileModule.ProfileModule()
  fullName: System.Web.Profile.ProfileModule.ProfileModule()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "初始化的新執行個體<xref href=&quot;System.Web.Profile.ProfileModule&quot;></xref>類別。"
  remarks: "這個建構函式不是從應用程式程式碼呼叫。       <xref:System.Web.HttpApplication>ASP.NET 應用程式啟動時建立。</xref:System.Web.HttpApplication> <xref:System.Web.HttpApplication>呼叫<xref:System.Web.Profile.ProfileModule>建構函式建立<xref:System.Web.Profile.ProfileModule>應用程式。</xref:System.Web.Profile.ProfileModule> </xref:System.Web.Profile.ProfileModule> </xref:System.Web.HttpApplication> <xref:System.Web.Profile.ProfileModule>應用程式組態中所指定。</xref:System.Web.Profile.ProfileModule>"
  syntax:
    content: public ProfileModule ();
    parameters: []
  overload: System.Web.Profile.ProfileModule.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileModule.Dispose
  id: Dispose
  parent: System.Web.Profile.ProfileModule
  langs:
  - csharp
  name: Dispose()
  nameWithType: ProfileModule.Dispose()
  fullName: System.Web.Profile.ProfileModule.Dispose()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "所使用的資源全部釋出<xref href=&quot;System.Web.Profile.ProfileModule&quot;> </xref>。"
  remarks: "這個方法不是從應用程式程式碼呼叫。       <xref:System.Web.HttpApplication>ASP.NET 應用程式啟動時建立。</xref:System.Web.HttpApplication> <xref:System.Web.HttpApplication>建立並初始化<xref:System.Web.Profile.ProfileModule>應用程式，並呼叫 Dispose 方法時釋放物件。</xref:System.Web.Profile.ProfileModule> </xref:System.Web.HttpApplication> <xref:System.Web.Profile.ProfileModule>應用程式組態中所指定。</xref:System.Web.Profile.ProfileModule>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Web.Profile.ProfileModule.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileModule.Init(System.Web.HttpApplication)
  id: Init(System.Web.HttpApplication)
  parent: System.Web.Profile.ProfileModule
  langs:
  - csharp
  name: Init(HttpApplication)
  nameWithType: ProfileModule.Init(HttpApplication)
  fullName: System.Web.Profile.ProfileModule.Init(HttpApplication)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "呼叫初始化程式碼時<xref href=&quot;System.Web.Profile.ProfileModule&quot;></xref>建立物件。"
  remarks: "這個方法不是從應用程式程式碼呼叫。       <xref:System.Web.HttpApplication>ASP.NET 應用程式啟動時建立。</xref:System.Web.HttpApplication> <xref:System.Web.HttpApplication>建立時，它會呼叫 Init 方法<xref:System.Web.Profile.ProfileModule>應用程式。</xref:System.Web.Profile.ProfileModule> </xref:System.Web.HttpApplication> <xref:System.Web.Profile.ProfileModule>應用程式組態中所指定。</xref:System.Web.Profile.ProfileModule>"
  syntax:
    content: public void Init (System.Web.HttpApplication app);
    parameters:
    - id: app
      type: System.Web.HttpApplication
      description: "目前的應用程式。"
  overload: System.Web.Profile.ProfileModule.Init*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileModule.MigrateAnonymous
  id: MigrateAnonymous
  parent: System.Web.Profile.ProfileModule
  langs:
  - csharp
  name: MigrateAnonymous
  nameWithType: ProfileModule.MigrateAnonymous
  fullName: System.Web.Profile.ProfileModule.MigrateAnonymous
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "發生於匿名使用者設定檔登入。"
  remarks: "您可以存取的 MigrateAnonymous 事件<xref:System.Web.Profile.ProfileModule>ASP.NET 應用程式使用 Global.asax 檔案中的類別`Profile_MigrateAnonymous`通用的事件，如本主題的範例所示。</xref:System.Web.Profile.ProfileModule>       您可以使用 MigrateAnonymous 事件時，要複製設定檔屬性值從匿名設定檔已驗證的設定檔已以匿名方式使用您的應用程式的使用者登入。       ASP.NET 具有已啟用的使用者設定檔的應用程式啟動時，會建立新的類別類型的`ProfileCommon`，後者繼承自<xref:System.Web.Profile.ProfileBase>類別。</xref:System.Web.Profile.ProfileBase> 強型別存取子會加入至`ProfileCommon`組態區段中定義的每一個屬性的類別。 A`GetProfile`方法可讓您擷取`ProfileCommon`物件會根據使用者名稱。 您可以使用`GetProfile`目前已經過驗證的設定檔擷取匿名設定檔的屬性值的方法。 匿名屬性值可以再複製到目前已驗證之使用者的設定檔。"
  example:
  - "The following example shows a Web.config file that enables anonymous identification and profile properties that support anonymous users.  \n  \n```  \n<configuration>  \n  <system.web>  \n    <authentication mode=\"Forms\" >  \n      <forms loginUrl=\"login.aspx\" name=\".ASPXFORMSAUTH\" />  \n    </authentication>  \n  \n    <anonymousIdentification enabled=\"true\" />  \n  \n    <profile enabled=\"true\" defaultProvider=\"AspNetSqlProvider\">  \n      <properties>  \n        <add name=\"ZipCode\" allowAnonymous=\"true\" />  \n        <add name=\"CityAndState\" allowAnonymous=\"true\" />  \n        <add name=\"StockSymbols\" type=\"System.Collections.ArrayList\" allowAnonymous=\"true\" />  \n      </properties>  \n    </profile>  \n  </system.web>  \n</configuration>  \n```  \n  \n The following code example shows the MigrateAnonymous event included in the Global.asax file for an ASP.NET application. The MigrateAnonymous event copies profile property values from the anonymous profile to the profile for the current user.  \n  \n [!code-vb[System.Web.Profile.ProfileManager#1](~/add/codesnippet/visualbasic/e-system.web.profile.pro_0_1.asax)]\n [!code-cs[System.Web.Profile.ProfileManager#1](~/add/codesnippet/csharp/e-system.web.profile.pro_0_1.asax)]"
  syntax:
    content: public event System.Web.Profile.ProfileMigrateEventHandler MigrateAnonymous;
    return:
      type: System.Web.Profile.ProfileMigrateEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileModule.Personalize
  id: Personalize
  parent: System.Web.Profile.ProfileModule
  langs:
  - csharp
  name: Personalize
  nameWithType: ProfileModule.Personalize
  fullName: System.Web.Profile.ProfileModule.Personalize
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "建立使用者設定檔之前發生。"
  remarks: "個人化引發期間<xref:System.Web.HttpApplication.AcquireRequestState?displayProperty=fullName>事件。</xref:System.Web.HttpApplication.AcquireRequestState?displayProperty=fullName> 您可以存取的個人化事件<xref:System.Web.Profile.ProfileModule>您 ASP.NET 應用程式使用 Global.asax 檔案中的類別`Profile_Personalize`通用的事件，如本主題的範例所示。</xref:System.Web.Profile.ProfileModule>       您可以使用個人化事件來指定自訂使用者設定檔。 如果<xref:System.Web.Profile.ProfileEventArgs.Profile%2A?displayProperty=fullName>所指定的屬性值<xref:System.Web.Profile.ProfileEventHandler>個人化事件的事件處理常式設定為值不是`null`當個人化事件端點，則<xref:System.Web.Profile.ProfileModule>會使用指定的值之<xref:System.Web.Profile.ProfileEventArgs.Profile%2A?displayProperty=fullName>屬性<xref:System.Web.HttpContext.Profile%2A>的目前<xref:System.Web.HttpContext>.</xref:System.Web.HttpContext>屬性</xref:System.Web.HttpContext.Profile%2A>的值當做</xref:System.Web.Profile.ProfileEventArgs.Profile%2A?displayProperty=fullName></xref:System.Web.Profile.ProfileModule></xref:System.Web.Profile.ProfileEventHandler></xref:System.Web.Profile.ProfileEventArgs.Profile%2A?displayProperty=fullName>"
  example:
  - "The following code example shows the Personalize event declared in the Global.asax file for an application. The event code loads a user profile for a user based on role membership.  \n  \n [!code-vb[System.Web.Profile.ProfileManager.Personalize#12](~/add/codesnippet/visualbasic/e-system.web.profile.pro_1_1.asax)]\n [!code-cs[System.Web.Profile.ProfileManager.Personalize#12](~/add/codesnippet/csharp/e-system.web.profile.pro_1_1.asax)]"
  syntax:
    content: public event System.Web.Profile.ProfileEventHandler Personalize;
    return:
      type: System.Web.Profile.ProfileEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileModule.ProfileAutoSaving
  id: ProfileAutoSaving
  parent: System.Web.Profile.ProfileModule
  langs:
  - csharp
  name: ProfileAutoSaving
  nameWithType: ProfileModule.ProfileAutoSaving
  fullName: System.Web.Profile.ProfileModule.ProfileAutoSaving
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "如果已啟用自動設定檔儲存的頁面執行結尾時發生。"
  remarks: "如果結尾的頁面執行引發 ProfileAutoSaving 事件<xref:System.Web.Profile.ProfileManager.AutomaticSaveEnabled%2A?displayProperty=fullName>屬性是`true`。</xref:System.Web.Profile.ProfileManager.AutomaticSaveEnabled%2A?displayProperty=fullName> 您可以存取的 ProfileAutoSaving 事件<xref:System.Web.Profile.ProfileModule>您 ASP.NET 應用程式使用 Global.asax 檔案中的類別`Profile_ProfileAutoSaving`通用的事件，如本主題的範例所示。</xref:System.Web.Profile.ProfileModule>       <xref:System.Configuration.SettingsBase.Save%2A?displayProperty=fullName>方法會檢查<xref:System.Configuration.SettingsPropertyValue.IsDirty%2A>屬性值，每個<xref:System.Configuration.SettingsPropertyValue>判斷屬性是否在使用者設定檔中的基本型別，字串組成或<xref:System.DateTime>物件已變更。</xref:System.DateTime> </xref:System.Configuration.SettingsPropertyValue> </xref:System.Configuration.SettingsPropertyValue.IsDirty%2A> </xref:System.Configuration.SettingsBase.Save%2A?displayProperty=fullName> <xref:System.Configuration.SettingsBase.Save%2A>方法明確地無法判斷是否已變更的自訂類別。</xref:System.Configuration.SettingsBase.Save%2A> 您可以使用 ProfileAutoSaving 事件，來判斷是否已經變更的自訂物件，然後繼續進行 自動儲存的已修改的物件，或取消自動儲存，如果已修改的物件。       若要取消儲存作業的自動設定檔，設定<xref:System.Web.Profile.ProfileAutoSaveEventArgs.ContinueWithProfileAutoSave%2A>屬性`false`ProfileAutoSaving 事件; 否則設定<xref:System.Web.Profile.ProfileAutoSaveEventArgs.ContinueWithProfileAutoSave%2A>屬性`true`。</xref:System.Web.Profile.ProfileAutoSaveEventArgs.ContinueWithProfileAutoSave%2A> </xref:System.Web.Profile.ProfileAutoSaveEventArgs.ContinueWithProfileAutoSave%2A>       可能有多個 ProfileAutoSaving 事件訂閱者。 <xref:System.Web.Profile.ProfileModule>會使用最後一個值<xref:System.Web.Profile.ProfileAutoSaveEventArgs.ContinueWithProfileAutoSave%2A>屬性設定為。</xref:System.Web.Profile.ProfileAutoSaveEventArgs.ContinueWithProfileAutoSave%2A> </xref:System.Web.Profile.ProfileModule> 因此，建議您明確地設定<xref:System.Web.Profile.ProfileAutoSaveEventArgs.ContinueWithProfileAutoSave%2A>ProfileAutoSaving 事件中的屬性是否是您要取消或繼續自動儲存，您可能需要覆寫先前的訂閱者所設定的值。</xref:System.Web.Profile.ProfileAutoSaveEventArgs.ContinueWithProfileAutoSave%2A>"
  example:
  - "The following code example shows the ProfileAutoSaving event included in the Global.asax file for an ASP.NET application.  \n  \n [!code-cs[System.Web.Profile.ProfileManager.ProfileAutoSaving#11](~/add/codesnippet/csharp/e-system.web.profile.pro_2_1.asax)]\n [!code-vb[System.Web.Profile.ProfileManager.ProfileAutoSaving#11](~/add/codesnippet/visualbasic/e-system.web.profile.pro_2_1.asax)]"
  syntax:
    content: public event System.Web.Profile.ProfileAutoSaveEventHandler ProfileAutoSaving;
    return:
      type: System.Web.Profile.ProfileAutoSaveEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.Profile.ProfileModule.#ctor
  parent: System.Web.Profile.ProfileModule
  isExternal: false
  name: ProfileModule()
  nameWithType: ProfileModule.ProfileModule()
  fullName: System.Web.Profile.ProfileModule.ProfileModule()
- uid: System.Web.Profile.ProfileModule.Dispose
  parent: System.Web.Profile.ProfileModule
  isExternal: false
  name: Dispose()
  nameWithType: ProfileModule.Dispose()
  fullName: System.Web.Profile.ProfileModule.Dispose()
- uid: System.Web.Profile.ProfileModule.Init(System.Web.HttpApplication)
  parent: System.Web.Profile.ProfileModule
  isExternal: false
  name: Init(HttpApplication)
  nameWithType: ProfileModule.Init(HttpApplication)
  fullName: System.Web.Profile.ProfileModule.Init(HttpApplication)
- uid: System.Web.HttpApplication
  parent: System.Web
  isExternal: false
  name: HttpApplication
  nameWithType: HttpApplication
  fullName: System.Web.HttpApplication
- uid: System.Web.Profile.ProfileModule.MigrateAnonymous
  parent: System.Web.Profile.ProfileModule
  isExternal: false
  name: MigrateAnonymous
  nameWithType: ProfileModule.MigrateAnonymous
  fullName: System.Web.Profile.ProfileModule.MigrateAnonymous
- uid: System.Web.Profile.ProfileMigrateEventHandler
  parent: System.Web.Profile
  isExternal: false
  name: ProfileMigrateEventHandler
  nameWithType: ProfileMigrateEventHandler
  fullName: System.Web.Profile.ProfileMigrateEventHandler
- uid: System.Web.Profile.ProfileModule.Personalize
  parent: System.Web.Profile.ProfileModule
  isExternal: false
  name: Personalize
  nameWithType: ProfileModule.Personalize
  fullName: System.Web.Profile.ProfileModule.Personalize
- uid: System.Web.Profile.ProfileEventHandler
  parent: System.Web.Profile
  isExternal: false
  name: ProfileEventHandler
  nameWithType: ProfileEventHandler
  fullName: System.Web.Profile.ProfileEventHandler
- uid: System.Web.Profile.ProfileModule.ProfileAutoSaving
  parent: System.Web.Profile.ProfileModule
  isExternal: false
  name: ProfileAutoSaving
  nameWithType: ProfileModule.ProfileAutoSaving
  fullName: System.Web.Profile.ProfileModule.ProfileAutoSaving
- uid: System.Web.Profile.ProfileAutoSaveEventHandler
  parent: System.Web.Profile
  isExternal: false
  name: ProfileAutoSaveEventHandler
  nameWithType: ProfileAutoSaveEventHandler
  fullName: System.Web.Profile.ProfileAutoSaveEventHandler
- uid: System.Web.Profile.ProfileModule.#ctor*
  parent: System.Web.Profile.ProfileModule
  isExternal: false
  name: ProfileModule
  nameWithType: ProfileModule.ProfileModule
- uid: System.Web.Profile.ProfileModule.Dispose*
  parent: System.Web.Profile.ProfileModule
  isExternal: false
  name: Dispose
  nameWithType: ProfileModule.Dispose
- uid: System.Web.Profile.ProfileModule.Init*
  parent: System.Web.Profile.ProfileModule
  isExternal: false
  name: Init
  nameWithType: ProfileModule.Init
