### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Security.WSTrustChannel
  id: WSTrustChannel
  children:
  - System.ServiceModel.Security.WSTrustChannel.#ctor(System.ServiceModel.Security.WSTrustChannelFactory,System.ServiceModel.Security.IWSTrustChannelContract,System.ServiceModel.Security.TrustVersion,System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext,System.IdentityModel.Protocols.WSTrust.WSTrustRequestSerializer,System.IdentityModel.Protocols.WSTrust.WSTrustResponseSerializer)
  - System.ServiceModel.Security.WSTrustChannel.Abort
  - System.ServiceModel.Security.WSTrustChannel.BeginCancel(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)
  - System.ServiceModel.Security.WSTrustChannel.BeginCancel(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  - System.ServiceModel.Security.WSTrustChannel.BeginClose(System.AsyncCallback,System.Object)
  - System.ServiceModel.Security.WSTrustChannel.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Security.WSTrustChannel.BeginIssue(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)
  - System.ServiceModel.Security.WSTrustChannel.BeginIssue(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  - System.ServiceModel.Security.WSTrustChannel.BeginOpen(System.AsyncCallback,System.Object)
  - System.ServiceModel.Security.WSTrustChannel.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Security.WSTrustChannel.BeginRenew(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)
  - System.ServiceModel.Security.WSTrustChannel.BeginRenew(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  - System.ServiceModel.Security.WSTrustChannel.BeginValidate(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)
  - System.ServiceModel.Security.WSTrustChannel.BeginValidate(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  - System.ServiceModel.Security.WSTrustChannel.Cancel(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)
  - System.ServiceModel.Security.WSTrustChannel.Cancel(System.ServiceModel.Channels.Message)
  - System.ServiceModel.Security.WSTrustChannel.Channel
  - System.ServiceModel.Security.WSTrustChannel.ChannelFactory
  - System.ServiceModel.Security.WSTrustChannel.Close
  - System.ServiceModel.Security.WSTrustChannel.Close(System.TimeSpan)
  - System.ServiceModel.Security.WSTrustChannel.Closed
  - System.ServiceModel.Security.WSTrustChannel.Closing
  - System.ServiceModel.Security.WSTrustChannel.Contract
  - System.ServiceModel.Security.WSTrustChannel.CreateRequest(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.String)
  - System.ServiceModel.Security.WSTrustChannel.EndCancel(System.IAsyncResult)
  - System.ServiceModel.Security.WSTrustChannel.EndCancel(System.IAsyncResult,System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse@)
  - System.ServiceModel.Security.WSTrustChannel.EndClose(System.IAsyncResult)
  - System.ServiceModel.Security.WSTrustChannel.EndIssue(System.IAsyncResult)
  - System.ServiceModel.Security.WSTrustChannel.EndIssue(System.IAsyncResult,System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse@)
  - System.ServiceModel.Security.WSTrustChannel.EndOpen(System.IAsyncResult)
  - System.ServiceModel.Security.WSTrustChannel.EndRenew(System.IAsyncResult)
  - System.ServiceModel.Security.WSTrustChannel.EndRenew(System.IAsyncResult,System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse@)
  - System.ServiceModel.Security.WSTrustChannel.EndValidate(System.IAsyncResult)
  - System.ServiceModel.Security.WSTrustChannel.EndValidate(System.IAsyncResult,System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse@)
  - System.ServiceModel.Security.WSTrustChannel.Faulted
  - System.ServiceModel.Security.WSTrustChannel.GetProperty``1
  - System.ServiceModel.Security.WSTrustChannel.GetRequestAction(System.String,System.ServiceModel.Security.TrustVersion)
  - System.ServiceModel.Security.WSTrustChannel.GetTokenFromResponse(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse)
  - System.ServiceModel.Security.WSTrustChannel.Issue(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)
  - System.ServiceModel.Security.WSTrustChannel.Issue(System.ServiceModel.Channels.Message)
  - System.ServiceModel.Security.WSTrustChannel.Issue(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse@)
  - System.ServiceModel.Security.WSTrustChannel.Open
  - System.ServiceModel.Security.WSTrustChannel.Open(System.TimeSpan)
  - System.ServiceModel.Security.WSTrustChannel.Opened
  - System.ServiceModel.Security.WSTrustChannel.Opening
  - System.ServiceModel.Security.WSTrustChannel.ReadResponse(System.ServiceModel.Channels.Message)
  - System.ServiceModel.Security.WSTrustChannel.Renew(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)
  - System.ServiceModel.Security.WSTrustChannel.Renew(System.ServiceModel.Channels.Message)
  - System.ServiceModel.Security.WSTrustChannel.State
  - System.ServiceModel.Security.WSTrustChannel.TrustVersion
  - System.ServiceModel.Security.WSTrustChannel.Validate(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)
  - System.ServiceModel.Security.WSTrustChannel.Validate(System.ServiceModel.Channels.Message)
  - System.ServiceModel.Security.WSTrustChannel.WSTrustRequestSerializer
  - System.ServiceModel.Security.WSTrustChannel.WSTrustResponseSerializer
  - System.ServiceModel.Security.WSTrustChannel.WSTrustSerializationContext
  langs:
  - csharp
  name: WSTrustChannel
  nameWithType: WSTrustChannel
  fullName: System.ServiceModel.Security.WSTrustChannel
  type: Class
  summary: "代表用來將 Ws-trust 訊息傳送給安全性權杖服務 (STS) 的通道。"
  syntax:
    content: 'public class WSTrustChannel : System.ServiceModel.Channels.IChannel, System.ServiceModel.Security.IWSTrustChannelContract'
  inheritance:
  - System.Object
  implements:
  - System.ServiceModel.Channels.IChannel
  - System.ServiceModel.Security.IWSTrustChannelContract
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Security.WSTrustChannel.#ctor(System.ServiceModel.Security.WSTrustChannelFactory,System.ServiceModel.Security.IWSTrustChannelContract,System.ServiceModel.Security.TrustVersion,System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext,System.IdentityModel.Protocols.WSTrust.WSTrustRequestSerializer,System.IdentityModel.Protocols.WSTrust.WSTrustResponseSerializer)
  id: '#ctor(System.ServiceModel.Security.WSTrustChannelFactory,System.ServiceModel.Security.IWSTrustChannelContract,System.ServiceModel.Security.TrustVersion,System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext,System.IdentityModel.Protocols.WSTrust.WSTrustRequestSerializer,System.IdentityModel.Protocols.WSTrust.WSTrustResponseSerializer)'
  parent: System.ServiceModel.Security.WSTrustChannel
  langs:
  - csharp
  name: WSTrustChannel(WSTrustChannelFactory,IWSTrustChannelContract,TrustVersion,WSTrustSerializationContext,WSTrustRequestSerializer,WSTrustResponseSerializer)
  nameWithType: WSTrustChannel.WSTrustChannel(WSTrustChannelFactory,IWSTrustChannelContract,TrustVersion,WSTrustSerializationContext,WSTrustRequestSerializer,WSTrustResponseSerializer)
  fullName: System.ServiceModel.Security.WSTrustChannel.WSTrustChannel(WSTrustChannelFactory,IWSTrustChannelContract,TrustVersion,WSTrustSerializationContext,WSTrustRequestSerializer,WSTrustResponseSerializer)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "初始化的新執行個體<xref href=&quot;System.ServiceModel.Security.WSTrustChannel&quot;></xref>類別。"
  syntax:
    content: public WSTrustChannel (System.ServiceModel.Security.WSTrustChannelFactory factory, System.ServiceModel.Security.IWSTrustChannelContract inner, System.ServiceModel.Security.TrustVersion trustVersion, System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext context, System.IdentityModel.Protocols.WSTrust.WSTrustRequestSerializer requestSerializer, System.IdentityModel.Protocols.WSTrust.WSTrustResponseSerializer responseSerializer);
    parameters:
    - id: factory
      type: System.ServiceModel.Security.WSTrustChannelFactory
      description: "<xref href=&quot;System.ServiceModel.Security.WSTrustChannelFactory&quot;> </xref> ，會建立通道。"
    - id: inner
      type: System.ServiceModel.Security.IWSTrustChannelContract
      description: "<xref href=&quot;System.ServiceModel.Security.IWSTrustChannelContract&quot;> </xref>通道將用於傳送和接收<xref:System.ServiceModel.Channels.Message>物件。</xref:System.ServiceModel.Channels.Message>"
    - id: trustVersion
      type: System.ServiceModel.Security.TrustVersion
      description: "通道會使用序列化的 Ws-trust 版本<xref:System.ServiceModel.Channels.Message>物件。</xref:System.ServiceModel.Channels.Message>"
    - id: context
      type: System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext
      description: "<xref href=&quot;System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext&quot;> </xref>通道將用於序列化 Ws-trust 訊息。"
    - id: requestSerializer
      type: System.IdentityModel.Protocols.WSTrust.WSTrustRequestSerializer
      description: "<xref href=&quot;System.IdentityModel.Protocols.WSTrust.WSTrustRequestSerializer&quot;> </xref>通道將用於序列化 Ws-trust 要求訊息。"
    - id: responseSerializer
      type: System.IdentityModel.Protocols.WSTrust.WSTrustResponseSerializer
      description: "<xref href=&quot;System.IdentityModel.Protocols.WSTrust.WSTrustResponseSerializer&quot;> </xref>通道將用於序列化 Ws-trust 回應訊息。"
  overload: System.ServiceModel.Security.WSTrustChannel.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.WSTrustChannel.Abort
  id: Abort
  parent: System.ServiceModel.Security.WSTrustChannel
  langs:
  - csharp
  name: Abort()
  nameWithType: WSTrustChannel.Abort()
  fullName: System.ServiceModel.Security.WSTrustChannel.Abort()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "導致通訊物件轉換立即從目前的狀態為 closed 狀態。"
  syntax:
    content: public void Abort ();
    parameters: []
  overload: System.ServiceModel.Security.WSTrustChannel.Abort*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.WSTrustChannel.BeginCancel(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)
  id: BeginCancel(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Security.WSTrustChannel
  langs:
  - csharp
  name: BeginCancel(RequestSecurityToken,AsyncCallback,Object)
  nameWithType: WSTrustChannel.BeginCancel(RequestSecurityToken,AsyncCallback,Object)
  fullName: System.ServiceModel.Security.WSTrustChannel.BeginCancel(RequestSecurityToken,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "開始非同步作業傳送至使用指定端點的 Ws-trust 取消訊息<xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityToken&quot;></xref>物件。"
  syntax:
    content: public IAsyncResult BeginCancel (System.IdentityModel.Protocols.WSTrust.RequestSecurityToken rst, AsyncCallback callback, object state);
    parameters:
    - id: rst
      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityToken
      description: "<xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityToken&quot;> </xref>表示要求至 STS。"
    - id: callback
      type: System.AsyncCallback
      description: "<xref:System.AsyncCallback>委派會接收非同步取消作業完成的通知。</xref:System.AsyncCallback>"
    - id: state
      type: System.Object
      description: "指定的物件，由應用程式，其中包含與非同步取消作業相關聯的狀態資訊。"
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>參考非同步取消作業。</xref:System.IAsyncResult>"
  overload: System.ServiceModel.Security.WSTrustChannel.BeginCancel*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.WSTrustChannel.BeginCancel(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  id: BeginCancel(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Security.WSTrustChannel
  langs:
  - csharp
  name: BeginCancel(Message,AsyncCallback,Object)
  nameWithType: WSTrustChannel.BeginCancel(Message,AsyncCallback,Object)
  fullName: System.ServiceModel.Security.WSTrustChannel.BeginCancel(Message,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "開始非同步作業傳送至使用指定端點的 Ws-trust 取消訊息<xref:System.ServiceModel.Channels.Message>物件。</xref:System.ServiceModel.Channels.Message>"
  syntax:
    content: public IAsyncResult BeginCancel (System.ServiceModel.Channels.Message message, AsyncCallback callback, object asyncState);
    parameters:
    - id: message
      type: System.ServiceModel.Channels.Message
      description: "<xref:System.ServiceModel.Channels.Message>其中包含對 STS 要求的指示</xref:System.ServiceModel.Channels.Message>"
    - id: callback
      type: System.AsyncCallback
      description: "<xref:System.AsyncCallback>委派會接收非同步取消作業完成的通知。</xref:System.AsyncCallback>"
    - id: asyncState
      type: System.Object
      description: "指定的物件，由應用程式，其中包含與非同步取消作業相關聯的狀態資訊。"
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>參考非同步取消作業。</xref:System.IAsyncResult>"
  overload: System.ServiceModel.Security.WSTrustChannel.BeginCancel*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.WSTrustChannel.BeginClose(System.AsyncCallback,System.Object)
  id: BeginClose(System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Security.WSTrustChannel
  langs:
  - csharp
  name: BeginClose(AsyncCallback,Object)
  nameWithType: WSTrustChannel.BeginClose(AsyncCallback,Object)
  fullName: System.ServiceModel.Security.WSTrustChannel.BeginClose(AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "開始非同步作業以關閉通訊物件。"
  syntax:
    content: public IAsyncResult BeginClose (AsyncCallback callback, object state);
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: "<xref:System.AsyncCallback>委派會接收非同步關閉作業完成的通知。</xref:System.AsyncCallback>"
    - id: state
      type: System.Object
      description: "指定的物件，由應用程式，其中包含與非同步關閉作業相關聯的狀態資訊。"
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>參考非同步關閉作業。</xref:System.IAsyncResult>"
  overload: System.ServiceModel.Security.WSTrustChannel.BeginClose*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.WSTrustChannel.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Security.WSTrustChannel
  langs:
  - csharp
  name: BeginClose(TimeSpan,AsyncCallback,Object)
  nameWithType: WSTrustChannel.BeginClose(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Security.WSTrustChannel.BeginClose(TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "開始非同步作業以關閉通訊物件與指定的逾時。"
  syntax:
    content: public IAsyncResult BeginClose (TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "<xref:System.TimeSpan>，指定必須逾時前完成關閉作業的時間長度。</xref:System.TimeSpan>"
    - id: callback
      type: System.AsyncCallback
      description: "<xref:System.AsyncCallback>委派會接收非同步關閉作業完成的通知。</xref:System.AsyncCallback>"
    - id: state
      type: System.Object
      description: "指定的物件，由應用程式，其中包含與非同步關閉作業相關聯的狀態資訊。"
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>參考非同步關閉作業。</xref:System.IAsyncResult>"
  overload: System.ServiceModel.Security.WSTrustChannel.BeginClose*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.WSTrustChannel.BeginIssue(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)
  id: BeginIssue(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Security.WSTrustChannel
  langs:
  - csharp
  name: BeginIssue(RequestSecurityToken,AsyncCallback,Object)
  nameWithType: WSTrustChannel.BeginIssue(RequestSecurityToken,AsyncCallback,Object)
  fullName: System.ServiceModel.Security.WSTrustChannel.BeginIssue(RequestSecurityToken,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "開始非同步作業的 Ws-trust 發出訊息傳送至使用指定的端點<xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityToken&quot;></xref>物件。"
  syntax:
    content: public IAsyncResult BeginIssue (System.IdentityModel.Protocols.WSTrust.RequestSecurityToken rst, AsyncCallback callback, object asyncState);
    parameters:
    - id: rst
      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityToken
      description: "<xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityToken&quot;> </xref>表示要求至 STS。"
    - id: callback
      type: System.AsyncCallback
      description: "<xref:System.AsyncCallback>委派，會收到非同步問題的作業完成的通知。</xref:System.AsyncCallback>"
    - id: asyncState
      type: System.Object
      description: "指定的物件，由應用程式，其中包含與非同步問題作業相關聯的狀態資訊。"
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>參考問題非同步作業。</xref:System.IAsyncResult>"
  overload: System.ServiceModel.Security.WSTrustChannel.BeginIssue*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.WSTrustChannel.BeginIssue(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  id: BeginIssue(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Security.WSTrustChannel
  langs:
  - csharp
  name: BeginIssue(Message,AsyncCallback,Object)
  nameWithType: WSTrustChannel.BeginIssue(Message,AsyncCallback,Object)
  fullName: System.ServiceModel.Security.WSTrustChannel.BeginIssue(Message,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "開始非同步作業的 Ws-trust 發出訊息傳送至使用指定的端點<xref:System.ServiceModel.Channels.Message>物件。</xref:System.ServiceModel.Channels.Message>"
  syntax:
    content: public IAsyncResult BeginIssue (System.ServiceModel.Channels.Message message, AsyncCallback callback, object asyncState);
    parameters:
    - id: message
      type: System.ServiceModel.Channels.Message
      description: "<xref:System.ServiceModel.Channels.Message>其中包含對 STS 要求的指示</xref:System.ServiceModel.Channels.Message>"
    - id: callback
      type: System.AsyncCallback
      description: "<xref:System.AsyncCallback>委派，會收到非同步問題的作業完成的通知。</xref:System.AsyncCallback>"
    - id: asyncState
      type: System.Object
      description: "指定的物件，由應用程式，其中包含與非同步問題作業相關聯的狀態資訊。"
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>參考問題非同步作業。</xref:System.IAsyncResult>"
  overload: System.ServiceModel.Security.WSTrustChannel.BeginIssue*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.WSTrustChannel.BeginOpen(System.AsyncCallback,System.Object)
  id: BeginOpen(System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Security.WSTrustChannel
  langs:
  - csharp
  name: BeginOpen(AsyncCallback,Object)
  nameWithType: WSTrustChannel.BeginOpen(AsyncCallback,Object)
  fullName: System.ServiceModel.Security.WSTrustChannel.BeginOpen(AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "開始非同步作業以開啟通訊物件。"
  syntax:
    content: public IAsyncResult BeginOpen (AsyncCallback callback, object state);
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: "<xref:System.AsyncCallback>委派會接收非同步關閉作業完成的通知。</xref:System.AsyncCallback>"
    - id: state
      type: System.Object
      description: "指定的物件，由應用程式，其中包含與非同步關閉作業相關聯的狀態資訊。"
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>參考非同步開啟作業。</xref:System.IAsyncResult>"
  overload: System.ServiceModel.Security.WSTrustChannel.BeginOpen*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.WSTrustChannel.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Security.WSTrustChannel
  langs:
  - csharp
  name: BeginOpen(TimeSpan,AsyncCallback,Object)
  nameWithType: WSTrustChannel.BeginOpen(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Security.WSTrustChannel.BeginOpen(TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "開始非同步作業以開啟通訊物件中指定的時間間隔。"
  syntax:
    content: public IAsyncResult BeginOpen (TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "<xref:System.TimeSpan>，指定必須逾時前完成開啟作業的時間長度。</xref:System.TimeSpan>"
    - id: callback
      type: System.AsyncCallback
      description: "<xref:System.AsyncCallback>委派會接收非同步關閉作業完成的通知。</xref:System.AsyncCallback>"
    - id: state
      type: System.Object
      description: "指定的物件，由應用程式，其中包含與非同步關閉作業相關聯的狀態資訊。"
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>參考非同步開啟作業。</xref:System.IAsyncResult>"
  overload: System.ServiceModel.Security.WSTrustChannel.BeginOpen*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.WSTrustChannel.BeginRenew(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)
  id: BeginRenew(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Security.WSTrustChannel
  langs:
  - csharp
  name: BeginRenew(RequestSecurityToken,AsyncCallback,Object)
  nameWithType: WSTrustChannel.BeginRenew(RequestSecurityToken,AsyncCallback,Object)
  fullName: System.ServiceModel.Security.WSTrustChannel.BeginRenew(RequestSecurityToken,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "開始非同步作業傳送至使用指定端點的 Ws-trust 更新訊息<xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityToken&quot;></xref>物件。"
  syntax:
    content: public IAsyncResult BeginRenew (System.IdentityModel.Protocols.WSTrust.RequestSecurityToken rst, AsyncCallback callback, object state);
    parameters:
    - id: rst
      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityToken
      description: "<xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityToken&quot;> </xref>表示要求至 STS。"
    - id: callback
      type: System.AsyncCallback
      description: "<xref:System.AsyncCallback>委派會接收非同步完成的通知更新作業。</xref:System.AsyncCallback>"
    - id: state
      type: System.Object
      description: "指定應用程式，其中包含與非同步相關聯的狀態資訊的物件，更新作業。"
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>參考非同步更新作業。</xref:System.IAsyncResult>"
  overload: System.ServiceModel.Security.WSTrustChannel.BeginRenew*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.WSTrustChannel.BeginRenew(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  id: BeginRenew(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Security.WSTrustChannel
  langs:
  - csharp
  name: BeginRenew(Message,AsyncCallback,Object)
  nameWithType: WSTrustChannel.BeginRenew(Message,AsyncCallback,Object)
  fullName: System.ServiceModel.Security.WSTrustChannel.BeginRenew(Message,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "開始非同步作業傳送至使用指定端點的 Ws-trust 更新訊息<xref:System.ServiceModel.Channels.Message>物件。</xref:System.ServiceModel.Channels.Message>"
  syntax:
    content: public IAsyncResult BeginRenew (System.ServiceModel.Channels.Message message, AsyncCallback callback, object asyncState);
    parameters:
    - id: message
      type: System.ServiceModel.Channels.Message
      description: "<xref:System.ServiceModel.Channels.Message>其中包含對 STS 要求的指示</xref:System.ServiceModel.Channels.Message>"
    - id: callback
      type: System.AsyncCallback
      description: "<xref:System.AsyncCallback>委派會接收非同步完成的通知更新作業。</xref:System.AsyncCallback>"
    - id: asyncState
      type: System.Object
      description: "指定應用程式，其中包含與非同步相關聯的狀態資訊的物件，更新作業。"
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>參考非同步更新作業。</xref:System.IAsyncResult>"
  overload: System.ServiceModel.Security.WSTrustChannel.BeginRenew*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.WSTrustChannel.BeginValidate(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)
  id: BeginValidate(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Security.WSTrustChannel
  langs:
  - csharp
  name: BeginValidate(RequestSecurityToken,AsyncCallback,Object)
  nameWithType: WSTrustChannel.BeginValidate(RequestSecurityToken,AsyncCallback,Object)
  fullName: System.ServiceModel.Security.WSTrustChannel.BeginValidate(RequestSecurityToken,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "開始非同步作業以將 Ws-trust 驗證訊息傳送至使用指定的端點<xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityToken&quot;></xref>物件。"
  syntax:
    content: public IAsyncResult BeginValidate (System.IdentityModel.Protocols.WSTrust.RequestSecurityToken rst, AsyncCallback callback, object state);
    parameters:
    - id: rst
      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityToken
      description: "<xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityToken&quot;> </xref>表示要求至 STS。"
    - id: callback
      type: System.AsyncCallback
      description: "<xref:System.AsyncCallback>委派會接收非同步完成的通知驗證作業。</xref:System.AsyncCallback>"
    - id: state
      type: System.Object
      description: "物件，指定應用程式，其中包含與非同步相關聯的狀態資訊的驗證作業。"
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>參考非同步驗證作業。</xref:System.IAsyncResult>"
  overload: System.ServiceModel.Security.WSTrustChannel.BeginValidate*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.WSTrustChannel.BeginValidate(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  id: BeginValidate(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Security.WSTrustChannel
  langs:
  - csharp
  name: BeginValidate(Message,AsyncCallback,Object)
  nameWithType: WSTrustChannel.BeginValidate(Message,AsyncCallback,Object)
  fullName: System.ServiceModel.Security.WSTrustChannel.BeginValidate(Message,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "開始非同步作業，以便將 Ws-trust 驗證訊息傳送至使用指定的端點<xref:System.ServiceModel.Channels.Message>物件。</xref:System.ServiceModel.Channels.Message>"
  syntax:
    content: public IAsyncResult BeginValidate (System.ServiceModel.Channels.Message message, AsyncCallback callback, object asyncState);
    parameters:
    - id: message
      type: System.ServiceModel.Channels.Message
      description: "<xref:System.ServiceModel.Channels.Message>其中包含對 STS 要求的指示</xref:System.ServiceModel.Channels.Message>"
    - id: callback
      type: System.AsyncCallback
      description: "<xref:System.AsyncCallback>委派會接收非同步完成的通知驗證作業。</xref:System.AsyncCallback>"
    - id: asyncState
      type: System.Object
      description: "物件，指定應用程式，其中包含與非同步相關聯的狀態資訊的驗證作業。"
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>參考非同步驗證作業。</xref:System.IAsyncResult>"
  overload: System.ServiceModel.Security.WSTrustChannel.BeginValidate*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.WSTrustChannel.Cancel(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)
  id: Cancel(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)
  parent: System.ServiceModel.Security.WSTrustChannel
  langs:
  - csharp
  name: Cancel(RequestSecurityToken)
  nameWithType: WSTrustChannel.Cancel(RequestSecurityToken)
  fullName: System.ServiceModel.Security.WSTrustChannel.Cancel(RequestSecurityToken)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "使用指定的端點來傳送 Ws-trust 取消訊息<xref:System.ServiceModel.Channels.Message>物件。</xref:System.ServiceModel.Channels.Message>"
  syntax:
    content: public virtual System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse Cancel (System.IdentityModel.Protocols.WSTrust.RequestSecurityToken rst);
    parameters:
    - id: rst
      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityToken
      description: "<xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityToken&quot;> </xref>表示要求至 STS。"
    return:
      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse
      description: "<xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse&quot;> </xref>代表 STS 回應。"
  overload: System.ServiceModel.Security.WSTrustChannel.Cancel*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.WSTrustChannel.Cancel(System.ServiceModel.Channels.Message)
  id: Cancel(System.ServiceModel.Channels.Message)
  parent: System.ServiceModel.Security.WSTrustChannel
  langs:
  - csharp
  name: Cancel(Message)
  nameWithType: WSTrustChannel.Cancel(Message)
  fullName: System.ServiceModel.Security.WSTrustChannel.Cancel(Message)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "使用指定的端點來傳送 Ws-trust 取消訊息<xref:System.ServiceModel.Channels.Message>物件。</xref:System.ServiceModel.Channels.Message>"
  syntax:
    content: public System.ServiceModel.Channels.Message Cancel (System.ServiceModel.Channels.Message message);
    parameters:
    - id: message
      type: System.ServiceModel.Channels.Message
      description: "<xref:System.ServiceModel.Channels.Message>其中包含對 STS 要求的指示</xref:System.ServiceModel.Channels.Message>"
    return:
      type: System.ServiceModel.Channels.Message
      description: "<xref:System.ServiceModel.Channels.Message>從 STS 傳回</xref:System.ServiceModel.Channels.Message>"
  overload: System.ServiceModel.Security.WSTrustChannel.Cancel*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.WSTrustChannel.Channel
  id: Channel
  parent: System.ServiceModel.Security.WSTrustChannel
  langs:
  - csharp
  name: Channel
  nameWithType: WSTrustChannel.Channel
  fullName: System.ServiceModel.Security.WSTrustChannel.Channel
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "取得或設定用於傳送和接收訊息的通道物件。"
  remarks: "Set 存取子會受到保護。"
  syntax:
    content: public System.ServiceModel.Channels.IChannel Channel { get; protected set; }
    return:
      type: System.ServiceModel.Channels.IChannel
      description: "<xref:System.ServiceModel.Channels.IChannel>物件，用來傳送和接收<xref:System.ServiceModel.Channels.Message>物件。</xref:System.ServiceModel.Channels.Message> </xref:System.ServiceModel.Channels.IChannel>"
  overload: System.ServiceModel.Security.WSTrustChannel.Channel*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.WSTrustChannel.ChannelFactory
  id: ChannelFactory
  parent: System.ServiceModel.Security.WSTrustChannel
  langs:
  - csharp
  name: ChannelFactory
  nameWithType: WSTrustChannel.ChannelFactory
  fullName: System.ServiceModel.Security.WSTrustChannel.ChannelFactory
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "取得或設定建立通道處理站。"
  remarks: "Set 存取子會受到保護。"
  syntax:
    content: public System.ServiceModel.Security.WSTrustChannelFactory ChannelFactory { get; protected set; }
    return:
      type: System.ServiceModel.Security.WSTrustChannelFactory
      description: "<xref href=&quot;System.ServiceModel.Security.WSTrustChannelFactory&quot;> </xref>建立通道物件。"
  overload: System.ServiceModel.Security.WSTrustChannel.ChannelFactory*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.WSTrustChannel.Close
  id: Close
  parent: System.ServiceModel.Security.WSTrustChannel
  langs:
  - csharp
  name: Close()
  nameWithType: WSTrustChannel.Close()
  fullName: System.ServiceModel.Security.WSTrustChannel.Close()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "導致通訊物件轉換從目前的狀態為已關閉狀態。"
  syntax:
    content: public void Close ();
    parameters: []
  overload: System.ServiceModel.Security.WSTrustChannel.Close*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.WSTrustChannel.Close(System.TimeSpan)
  id: Close(System.TimeSpan)
  parent: System.ServiceModel.Security.WSTrustChannel
  langs:
  - csharp
  name: Close(TimeSpan)
  nameWithType: WSTrustChannel.Close(TimeSpan)
  fullName: System.ServiceModel.Security.WSTrustChannel.Close(TimeSpan)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "導致通訊物件轉換從目前的狀態為 closed 狀態中指定的時間間隔。"
  syntax:
    content: public void Close (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "<xref:System.TimeSpan>，指定必須逾時前完成開啟作業的時間長度。</xref:System.TimeSpan>"
  overload: System.ServiceModel.Security.WSTrustChannel.Close*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.WSTrustChannel.Closed
  id: Closed
  parent: System.ServiceModel.Security.WSTrustChannel
  langs:
  - csharp
  name: Closed
  nameWithType: WSTrustChannel.Closed
  fullName: System.ServiceModel.Security.WSTrustChannel.Closed
  type: Event
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "通訊物件從關閉中狀態轉換為已關閉狀態完成，就會發生。"
  syntax:
    content: public event EventHandler Closed;
    return:
      type: System.EventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.WSTrustChannel.Closing
  id: Closing
  parent: System.ServiceModel.Security.WSTrustChannel
  langs:
  - csharp
  name: Closing
  nameWithType: WSTrustChannel.Closing
  fullName: System.ServiceModel.Security.WSTrustChannel.Closing
  type: Event
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "當通訊物件第一次進入關閉中狀態時發生。"
  syntax:
    content: public event EventHandler Closing;
    return:
      type: System.EventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.WSTrustChannel.Contract
  id: Contract
  parent: System.ServiceModel.Security.WSTrustChannel
  langs:
  - csharp
  name: Contract
  nameWithType: WSTrustChannel.Contract
  fullName: System.ServiceModel.Security.WSTrustChannel.Contract
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "取得或設定通道會使用傳送和接收訊息的通道合約。"
  remarks: "Set 存取子會受到保護。"
  syntax:
    content: public System.ServiceModel.Security.IWSTrustChannelContract Contract { get; protected set; }
    return:
      type: System.ServiceModel.Security.IWSTrustChannelContract
      description: "<xref href=&quot;System.ServiceModel.Security.IWSTrustChannelContract&quot;> </xref>定義通道合約。"
  overload: System.ServiceModel.Security.WSTrustChannel.Contract*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.WSTrustChannel.CreateRequest(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.String)
  id: CreateRequest(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.String)
  parent: System.ServiceModel.Security.WSTrustChannel
  langs:
  - csharp
  name: CreateRequest(RequestSecurityToken,String)
  nameWithType: WSTrustChannel.CreateRequest(RequestSecurityToken,String)
  fullName: System.ServiceModel.Security.WSTrustChannel.CreateRequest(RequestSecurityToken,String)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "建立<xref:System.ServiceModel.Channels.Message>代表 Ws-trust RST 訊息的物件。</xref:System.ServiceModel.Channels.Message>"
  syntax:
    content: protected virtual System.ServiceModel.Channels.Message CreateRequest (System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, string requestType);
    parameters:
    - id: request
      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityToken
      description: "<xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityToken&quot;> </xref>來將序列化為訊息。"
    - id: requestType
      type: System.String
      description: "要序列化 Ws-trust 要求類型。 這個參數必須是其中一個字串常數中<xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestTypes&quot;> </xref>。"
    return:
      type: System.ServiceModel.Channels.Message
      description: "<xref:System.ServiceModel.Channels.Message>物件，代表 Ws-trust 訊息。</xref:System.ServiceModel.Channels.Message>"
  overload: System.ServiceModel.Security.WSTrustChannel.CreateRequest*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.WSTrustChannel.EndCancel(System.IAsyncResult)
  id: EndCancel(System.IAsyncResult)
  parent: System.ServiceModel.Security.WSTrustChannel
  langs:
  - csharp
  name: EndCancel(IAsyncResult)
  nameWithType: WSTrustChannel.EndCancel(IAsyncResult)
  fullName: System.ServiceModel.Security.WSTrustChannel.EndCancel(IAsyncResult)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "完成非同步作業傳送 Ws-trust 取消的訊息，由起始&lt;xref:System.ServiceModel.Security.WSTrustChannel.BeginCancel%28System.ServiceModel.Channels.Message%2CSystem.AsyncCallback%2CSystem.Object%29&gt;方法。"
  syntax:
    content: public System.ServiceModel.Channels.Message EndCancel (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>參考到未完成的非同步傳送要求。</xref:System.IAsyncResult>"
    return:
      type: System.ServiceModel.Channels.Message
      description: "<xref:System.ServiceModel.Channels.Message>從 STS 傳回</xref:System.ServiceModel.Channels.Message>"
  overload: System.ServiceModel.Security.WSTrustChannel.EndCancel*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.WSTrustChannel.EndCancel(System.IAsyncResult,System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse@)
  id: EndCancel(System.IAsyncResult,System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse@)
  parent: System.ServiceModel.Security.WSTrustChannel
  langs:
  - csharp
  name: EndCancel(IAsyncResult,RequestSecurityTokenResponse)
  nameWithType: WSTrustChannel.EndCancel(IAsyncResult,RequestSecurityTokenResponse)
  fullName: System.ServiceModel.Security.WSTrustChannel.EndCancel(IAsyncResult,RequestSecurityTokenResponse)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "完成非同步作業傳送 Ws-trust 取消的訊息，由起始&lt;xref:System.ServiceModel.Security.WSTrustChannel.BeginCancel%28System.IdentityModel.Protocols.WSTrust.RequestSecurityToken%2CSystem.AsyncCallback%2CSystem.Object%29&gt;方法。"
  syntax:
    content: public void EndCancel (IAsyncResult result, out System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse rstr);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>參考到未完成的非同步傳送要求。</xref:System.IAsyncResult>"
    - id: rstr
      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse
      description: "<xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse&quot;> </xref>代表 STS 回應。"
  overload: System.ServiceModel.Security.WSTrustChannel.EndCancel*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.WSTrustChannel.EndClose(System.IAsyncResult)
  id: EndClose(System.IAsyncResult)
  parent: System.ServiceModel.Security.WSTrustChannel
  langs:
  - csharp
  name: EndClose(IAsyncResult)
  nameWithType: WSTrustChannel.EndClose(IAsyncResult)
  fullName: System.ServiceModel.Security.WSTrustChannel.EndClose(IAsyncResult)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "完成非同步作業以關閉通訊物件。"
  syntax:
    content: public void EndClose (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>呼叫所傳回<xref:System.ServiceModel.Security.WSTrustChannel.BeginClose*>方法。</xref:System.ServiceModel.Security.WSTrustChannel.BeginClose*> </xref:System.IAsyncResult>"
  overload: System.ServiceModel.Security.WSTrustChannel.EndClose*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.WSTrustChannel.EndIssue(System.IAsyncResult)
  id: EndIssue(System.IAsyncResult)
  parent: System.ServiceModel.Security.WSTrustChannel
  langs:
  - csharp
  name: EndIssue(IAsyncResult)
  nameWithType: WSTrustChannel.EndIssue(IAsyncResult)
  fullName: System.ServiceModel.Security.WSTrustChannel.EndIssue(IAsyncResult)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "完成非同步作業傳送 Ws-trust 發出訊息，由起始&lt;xref:System.ServiceModel.Security.WSTrustChannel.BeginIssue%28System.ServiceModel.Channels.Message%2CSystem.AsyncCallback%2CSystem.Object%29&gt;方法。"
  syntax:
    content: public System.ServiceModel.Channels.Message EndIssue (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>參考到未完成的非同步傳送要求。</xref:System.IAsyncResult>"
    return:
      type: System.ServiceModel.Channels.Message
      description: "<xref:System.ServiceModel.Channels.Message>從 STS 傳回</xref:System.ServiceModel.Channels.Message>"
  overload: System.ServiceModel.Security.WSTrustChannel.EndIssue*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.WSTrustChannel.EndIssue(System.IAsyncResult,System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse@)
  id: EndIssue(System.IAsyncResult,System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse@)
  parent: System.ServiceModel.Security.WSTrustChannel
  langs:
  - csharp
  name: EndIssue(IAsyncResult,RequestSecurityTokenResponse)
  nameWithType: WSTrustChannel.EndIssue(IAsyncResult,RequestSecurityTokenResponse)
  fullName: System.ServiceModel.Security.WSTrustChannel.EndIssue(IAsyncResult,RequestSecurityTokenResponse)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "完成非同步作業傳送 Ws-trust 發出訊息，由起始&lt;xref:System.ServiceModel.Security.WSTrustChannel.BeginIssue%28System.IdentityModel.Protocols.WSTrust.RequestSecurityToken%2CSystem.AsyncCallback%2CSystem.Object%29&gt;方法。"
  syntax:
    content: public System.IdentityModel.Tokens.SecurityToken EndIssue (IAsyncResult result, out System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse rstr);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "未處理的非同步傳送要求的參考。"
    - id: rstr
      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse
      description: "<xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse&quot;> </xref>代表 STS 回應。"
    return:
      type: System.IdentityModel.Tokens.SecurityToken
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref>表示 STS 所發出的權杖。"
  overload: System.ServiceModel.Security.WSTrustChannel.EndIssue*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.WSTrustChannel.EndOpen(System.IAsyncResult)
  id: EndOpen(System.IAsyncResult)
  parent: System.ServiceModel.Security.WSTrustChannel
  langs:
  - csharp
  name: EndOpen(IAsyncResult)
  nameWithType: WSTrustChannel.EndOpen(IAsyncResult)
  fullName: System.ServiceModel.Security.WSTrustChannel.EndOpen(IAsyncResult)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "完成非同步作業以開啟通訊物件。"
  syntax:
    content: public void EndOpen (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>呼叫所傳回<xref:System.ServiceModel.Security.WSTrustChannel.BeginOpen*>方法。</xref:System.ServiceModel.Security.WSTrustChannel.BeginOpen*> </xref:System.IAsyncResult>"
  overload: System.ServiceModel.Security.WSTrustChannel.EndOpen*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.WSTrustChannel.EndRenew(System.IAsyncResult)
  id: EndRenew(System.IAsyncResult)
  parent: System.ServiceModel.Security.WSTrustChannel
  langs:
  - csharp
  name: EndRenew(IAsyncResult)
  nameWithType: WSTrustChannel.EndRenew(IAsyncResult)
  fullName: System.ServiceModel.Security.WSTrustChannel.EndRenew(IAsyncResult)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "完成非同步作業傳送 Ws-trust 更新訊息，由起始&lt;xref:System.ServiceModel.Security.WSTrustChannel.BeginRenew%28System.ServiceModel.Channels.Message%2CSystem.AsyncCallback%2CSystem.Object%29&gt;方法。"
  syntax:
    content: public System.ServiceModel.Channels.Message EndRenew (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>參考到未完成的非同步傳送要求。</xref:System.IAsyncResult>"
    return:
      type: System.ServiceModel.Channels.Message
      description: "<xref:System.ServiceModel.Channels.Message>從 STS 傳回</xref:System.ServiceModel.Channels.Message>"
  overload: System.ServiceModel.Security.WSTrustChannel.EndRenew*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.WSTrustChannel.EndRenew(System.IAsyncResult,System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse@)
  id: EndRenew(System.IAsyncResult,System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse@)
  parent: System.ServiceModel.Security.WSTrustChannel
  langs:
  - csharp
  name: EndRenew(IAsyncResult,RequestSecurityTokenResponse)
  nameWithType: WSTrustChannel.EndRenew(IAsyncResult,RequestSecurityTokenResponse)
  fullName: System.ServiceModel.Security.WSTrustChannel.EndRenew(IAsyncResult,RequestSecurityTokenResponse)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "完成非同步作業傳送 Ws-trust 更新訊息，由起始&lt;xref:System.ServiceModel.Security.WSTrustChannel.BeginRenew%28System.IdentityModel.Protocols.WSTrust.RequestSecurityToken%2CSystem.AsyncCallback%2CSystem.Object%29&gt;方法。"
  syntax:
    content: public void EndRenew (IAsyncResult result, out System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse rstr);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "未處理的非同步傳送要求的參考。"
    - id: rstr
      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse
      description: "<xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse&quot;> </xref>代表 STS 回應。"
  overload: System.ServiceModel.Security.WSTrustChannel.EndRenew*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.WSTrustChannel.EndValidate(System.IAsyncResult)
  id: EndValidate(System.IAsyncResult)
  parent: System.ServiceModel.Security.WSTrustChannel
  langs:
  - csharp
  name: EndValidate(IAsyncResult)
  nameWithType: WSTrustChannel.EndValidate(IAsyncResult)
  fullName: System.ServiceModel.Security.WSTrustChannel.EndValidate(IAsyncResult)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "完成非同步作業傳送 Ws-trust 驗證的訊息，由起始&lt;xref:System.ServiceModel.Security.WSTrustChannel.BeginValidate%28System.ServiceModel.Channels.Message%2CSystem.AsyncCallback%2CSystem.Object%29&gt;方法。"
  syntax:
    content: public System.ServiceModel.Channels.Message EndValidate (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>參考到未完成的非同步傳送要求。</xref:System.IAsyncResult>"
    return:
      type: System.ServiceModel.Channels.Message
      description: "<xref:System.ServiceModel.Channels.Message>從 STS 傳回</xref:System.ServiceModel.Channels.Message>"
  overload: System.ServiceModel.Security.WSTrustChannel.EndValidate*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.WSTrustChannel.EndValidate(System.IAsyncResult,System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse@)
  id: EndValidate(System.IAsyncResult,System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse@)
  parent: System.ServiceModel.Security.WSTrustChannel
  langs:
  - csharp
  name: EndValidate(IAsyncResult,RequestSecurityTokenResponse)
  nameWithType: WSTrustChannel.EndValidate(IAsyncResult,RequestSecurityTokenResponse)
  fullName: System.ServiceModel.Security.WSTrustChannel.EndValidate(IAsyncResult,RequestSecurityTokenResponse)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "完成非同步作業傳送 Ws-trust 驗證的訊息，由起始&lt;xref:System.ServiceModel.Security.WSTrustChannel.BeginValidate%28System.IdentityModel.Protocols.WSTrust.RequestSecurityToken%2CSystem.AsyncCallback%2CSystem.Object%29&gt;方法。"
  syntax:
    content: public void EndValidate (IAsyncResult result, out System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse rstr);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "未處理的非同步傳送要求的參考。"
    - id: rstr
      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse
      description: "<xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse&quot;> </xref>代表 STS 回應。"
  overload: System.ServiceModel.Security.WSTrustChannel.EndValidate*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.WSTrustChannel.Faulted
  id: Faulted
  parent: System.ServiceModel.Security.WSTrustChannel
  langs:
  - csharp
  name: Faulted
  nameWithType: WSTrustChannel.Faulted
  fullName: System.ServiceModel.Security.WSTrustChannel.Faulted
  type: Event
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "當通訊物件第一次進入錯誤的狀態時發生。"
  syntax:
    content: public event EventHandler Faulted;
    return:
      type: System.EventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.WSTrustChannel.GetProperty``1
  id: GetProperty``1
  parent: System.ServiceModel.Security.WSTrustChannel
  langs:
  - csharp
  name: GetProperty()
  nameWithType: WSTrustChannel.GetProperty()
  fullName: System.ServiceModel.Security.WSTrustChannel.GetProperty()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  syntax:
    content: 'public T GetProperty<T> () where T : class;'
    parameters: []
    return:
      type: T
      description: "即將加入。"
  overload: System.ServiceModel.Security.WSTrustChannel.GetProperty<T>*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.WSTrustChannel.GetRequestAction(System.String,System.ServiceModel.Security.TrustVersion)
  id: GetRequestAction(System.String,System.ServiceModel.Security.TrustVersion)
  parent: System.ServiceModel.Security.WSTrustChannel
  langs:
  - csharp
  name: GetRequestAction(String,TrustVersion)
  nameWithType: WSTrustChannel.GetRequestAction(String,TrustVersion)
  fullName: System.ServiceModel.Security.WSTrustChannel.GetRequestAction(String,TrustVersion)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "取得指定的要求類型與 Ws-trust 版本對應的 Ws-addressing 的 SOAP 動作。"
  syntax:
    content: protected static string GetRequestAction (string requestType, System.ServiceModel.Security.TrustVersion trustVersion);
    parameters:
    - id: requestType
      type: System.String
      description: "Ws-trust 要求類型。 這個參數必須是其中一個字串常數中<xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestTypes&quot;></xref>類別。"
    - id: trustVersion
      type: System.ServiceModel.Security.TrustVersion
      description: "<xref:System.ServiceModel.Security.WSTrustChannel.TrustVersion*>的要求。</xref:System.ServiceModel.Security.WSTrustChannel.TrustVersion*>"
    return:
      type: System.String
      description: "字串，其中包含代表 Ws-addressing 動作 URI。"
  overload: System.ServiceModel.Security.WSTrustChannel.GetRequestAction*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.WSTrustChannel.GetTokenFromResponse(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse)
  id: GetTokenFromResponse(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse)
  parent: System.ServiceModel.Security.WSTrustChannel
  langs:
  - csharp
  name: GetTokenFromResponse(RequestSecurityToken,RequestSecurityTokenResponse)
  nameWithType: WSTrustChannel.GetTokenFromResponse(RequestSecurityToken,RequestSecurityTokenResponse)
  fullName: System.ServiceModel.Security.WSTrustChannel.GetTokenFromResponse(RequestSecurityToken,RequestSecurityTokenResponse)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "取得從 RSTR 的安全性權杖。"
  syntax:
    content: public virtual System.IdentityModel.Tokens.SecurityToken GetTokenFromResponse (System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse response);
    parameters:
    - id: request
      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityToken
      description: "A <xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityToken&quot;> </xref> ，表示用來要求安全性權杖的要求。"
    - id: response
      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse
      description: "A <xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse&quot;> </xref> ，代表包含安全性權杖的回應。"
    return:
      type: System.IdentityModel.Tokens.SecurityToken
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> ，表示已剖析的安全性權杖。"
  overload: System.ServiceModel.Security.WSTrustChannel.GetTokenFromResponse*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>response</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ServiceModel.Security.WSTrustChannel.Issue(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)
  id: Issue(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)
  parent: System.ServiceModel.Security.WSTrustChannel
  langs:
  - csharp
  name: Issue(RequestSecurityToken)
  nameWithType: WSTrustChannel.Issue(RequestSecurityToken)
  fullName: System.ServiceModel.Security.WSTrustChannel.Issue(RequestSecurityToken)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "將 Ws-trust 發出訊息傳送至使用指定的 STS 端點<xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityToken&quot;></xref>物件。"
  syntax:
    content: public virtual System.IdentityModel.Tokens.SecurityToken Issue (System.IdentityModel.Protocols.WSTrust.RequestSecurityToken rst);
    parameters:
    - id: rst
      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityToken
      description: "<xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityToken&quot;> </xref>表示要求至 STS。"
    return:
      type: System.IdentityModel.Tokens.SecurityToken
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref>表示 STS 所發出的權杖。"
  overload: System.ServiceModel.Security.WSTrustChannel.Issue*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.WSTrustChannel.Issue(System.ServiceModel.Channels.Message)
  id: Issue(System.ServiceModel.Channels.Message)
  parent: System.ServiceModel.Security.WSTrustChannel
  langs:
  - csharp
  name: Issue(Message)
  nameWithType: WSTrustChannel.Issue(Message)
  fullName: System.ServiceModel.Security.WSTrustChannel.Issue(Message)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "將 Ws-trust 發出訊息傳送至使用指定的 STS 端點<xref:System.ServiceModel.Channels.Message>物件。</xref:System.ServiceModel.Channels.Message>"
  syntax:
    content: public System.ServiceModel.Channels.Message Issue (System.ServiceModel.Channels.Message message);
    parameters:
    - id: message
      type: System.ServiceModel.Channels.Message
      description: "<xref:System.ServiceModel.Channels.Message>其中包含對 STS 要求的指示</xref:System.ServiceModel.Channels.Message>"
    return:
      type: System.ServiceModel.Channels.Message
      description: "<xref:System.ServiceModel.Channels.Message>從 STS 傳回</xref:System.ServiceModel.Channels.Message>"
  overload: System.ServiceModel.Security.WSTrustChannel.Issue*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.WSTrustChannel.Issue(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse@)
  id: Issue(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse@)
  parent: System.ServiceModel.Security.WSTrustChannel
  langs:
  - csharp
  name: Issue(RequestSecurityToken,RequestSecurityTokenResponse)
  nameWithType: WSTrustChannel.Issue(RequestSecurityToken,RequestSecurityTokenResponse)
  fullName: System.ServiceModel.Security.WSTrustChannel.Issue(RequestSecurityToken,RequestSecurityTokenResponse)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "將 Ws-trust 發出訊息傳送至使用指定的 STS 端點<xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityToken&quot;></xref>和<xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityToken&quot;></xref>物件。"
  syntax:
    content: public virtual System.IdentityModel.Tokens.SecurityToken Issue (System.IdentityModel.Protocols.WSTrust.RequestSecurityToken rst, out System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse rstr);
    parameters:
    - id: rst
      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityToken
      description: "<xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityToken&quot;> </xref>表示要求至 STS。"
    - id: rstr
      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse
      description: "<xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse&quot;> </xref> ，代表來自 STS 的回應。"
    return:
      type: System.IdentityModel.Tokens.SecurityToken
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref>表示 STS 所發出的權杖。"
  overload: System.ServiceModel.Security.WSTrustChannel.Issue*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.WSTrustChannel.Open
  id: Open
  parent: System.ServiceModel.Security.WSTrustChannel
  langs:
  - csharp
  name: Open()
  nameWithType: WSTrustChannel.Open()
  fullName: System.ServiceModel.Security.WSTrustChannel.Open()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "導致通訊物件轉換從已建立狀態為開啟狀態。"
  syntax:
    content: public void Open ();
    parameters: []
  overload: System.ServiceModel.Security.WSTrustChannel.Open*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.WSTrustChannel.Open(System.TimeSpan)
  id: Open(System.TimeSpan)
  parent: System.ServiceModel.Security.WSTrustChannel
  langs:
  - csharp
  name: Open(TimeSpan)
  nameWithType: WSTrustChannel.Open(TimeSpan)
  fullName: System.ServiceModel.Security.WSTrustChannel.Open(TimeSpan)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "導致通訊物件轉換從已建立狀態為開啟狀態的時間在指定間隔內。"
  syntax:
    content: public void Open (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "<xref:System.TimeSpan>，指定必須逾時前完成開啟作業的時間長度。</xref:System.TimeSpan>"
  overload: System.ServiceModel.Security.WSTrustChannel.Open*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.WSTrustChannel.Opened
  id: Opened
  parent: System.ServiceModel.Security.WSTrustChannel
  langs:
  - csharp
  name: Opened
  nameWithType: WSTrustChannel.Opened
  fullName: System.ServiceModel.Security.WSTrustChannel.Opened
  type: Event
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "當通訊物件完成從開啟中狀態轉換為開啟狀態時發生。"
  syntax:
    content: public event EventHandler Opened;
    return:
      type: System.EventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.WSTrustChannel.Opening
  id: Opening
  parent: System.ServiceModel.Security.WSTrustChannel
  langs:
  - csharp
  name: Opening
  nameWithType: WSTrustChannel.Opening
  fullName: System.ServiceModel.Security.WSTrustChannel.Opening
  type: Event
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "當通訊物件第一次進入開啟中狀態時發生。"
  syntax:
    content: public event EventHandler Opening;
    return:
      type: System.EventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.WSTrustChannel.ReadResponse(System.ServiceModel.Channels.Message)
  id: ReadResponse(System.ServiceModel.Channels.Message)
  parent: System.ServiceModel.Security.WSTrustChannel
  langs:
  - csharp
  name: ReadResponse(Message)
  nameWithType: WSTrustChannel.ReadResponse(Message)
  fullName: System.ServiceModel.Security.WSTrustChannel.ReadResponse(Message)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "還原序列化<xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse&quot;></xref>從<xref:System.ServiceModel.Channels.Message>收到 Ws-trust 端點。</xref:System.ServiceModel.Channels.Message>"
  syntax:
    content: protected virtual System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse ReadResponse (System.ServiceModel.Channels.Message response);
    parameters:
    - id: response
      type: System.ServiceModel.Channels.Message
      description: "<xref:System.ServiceModel.Channels.Message>收到 Ws-trust 端點。</xref:System.ServiceModel.Channels.Message>"
    return:
      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse
      description: "<xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse&quot;> </xref>從回應還原序列化。"
  overload: System.ServiceModel.Security.WSTrustChannel.ReadResponse*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.WSTrustChannel.Renew(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)
  id: Renew(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)
  parent: System.ServiceModel.Security.WSTrustChannel
  langs:
  - csharp
  name: Renew(RequestSecurityToken)
  nameWithType: WSTrustChannel.Renew(RequestSecurityToken)
  fullName: System.ServiceModel.Security.WSTrustChannel.Renew(RequestSecurityToken)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "使用指定的端點來傳送 Ws-trust 更新訊息<xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityToken&quot;></xref>物件。"
  syntax:
    content: public virtual System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse Renew (System.IdentityModel.Protocols.WSTrust.RequestSecurityToken rst);
    parameters:
    - id: rst
      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityToken
      description: "<xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityToken&quot;> </xref>表示要求至 STS。"
    return:
      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse
      description: "<xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse&quot;> </xref>代表 STS 回應。"
  overload: System.ServiceModel.Security.WSTrustChannel.Renew*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.WSTrustChannel.Renew(System.ServiceModel.Channels.Message)
  id: Renew(System.ServiceModel.Channels.Message)
  parent: System.ServiceModel.Security.WSTrustChannel
  langs:
  - csharp
  name: Renew(Message)
  nameWithType: WSTrustChannel.Renew(Message)
  fullName: System.ServiceModel.Security.WSTrustChannel.Renew(Message)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "使用指定的端點來傳送 Ws-trust 更新訊息<xref:System.ServiceModel.Channels.Message>物件。</xref:System.ServiceModel.Channels.Message>"
  syntax:
    content: public System.ServiceModel.Channels.Message Renew (System.ServiceModel.Channels.Message message);
    parameters:
    - id: message
      type: System.ServiceModel.Channels.Message
      description: "<xref:System.ServiceModel.Channels.Message>其中包含對 STS 要求的指示</xref:System.ServiceModel.Channels.Message>"
    return:
      type: System.ServiceModel.Channels.Message
      description: "<xref:System.ServiceModel.Channels.Message>從 STS 傳回</xref:System.ServiceModel.Channels.Message>"
  overload: System.ServiceModel.Security.WSTrustChannel.Renew*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.WSTrustChannel.State
  id: State
  parent: System.ServiceModel.Security.WSTrustChannel
  langs:
  - csharp
  name: State
  nameWithType: WSTrustChannel.State
  fullName: System.ServiceModel.Security.WSTrustChannel.State
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "取得通訊導向物件的目前狀態。"
  remarks: "Set 存取子會受到保護。"
  syntax:
    content: public System.ServiceModel.CommunicationState State { get; }
    return:
      type: System.ServiceModel.CommunicationState
      description: "A <xref:System.ServiceModel.CommunicationState>，代表目前狀態的通道。</xref:System.ServiceModel.CommunicationState>"
  overload: System.ServiceModel.Security.WSTrustChannel.State*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.WSTrustChannel.TrustVersion
  id: TrustVersion
  parent: System.ServiceModel.Security.WSTrustChannel
  langs:
  - csharp
  name: TrustVersion
  nameWithType: WSTrustChannel.TrustVersion
  fullName: System.ServiceModel.Security.WSTrustChannel.TrustVersion
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "取得或設定 Ws-trust 這個通道使用的序列化版本<xref:System.ServiceModel.Channels.Message>物件。</xref:System.ServiceModel.Channels.Message>"
  remarks: "Set 存取子會受到保護。"
  syntax:
    content: public System.ServiceModel.Security.TrustVersion TrustVersion { get; protected set; }
    return:
      type: System.ServiceModel.Security.TrustVersion
      description: "<xref:System.ServiceModel.Security.TrustVersion>通道所使用的 (URI)。</xref:System.ServiceModel.Security.TrustVersion>"
  overload: System.ServiceModel.Security.WSTrustChannel.TrustVersion*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.WSTrustChannel.Validate(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)
  id: Validate(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)
  parent: System.ServiceModel.Security.WSTrustChannel
  langs:
  - csharp
  name: Validate(RequestSecurityToken)
  nameWithType: WSTrustChannel.Validate(RequestSecurityToken)
  fullName: System.ServiceModel.Security.WSTrustChannel.Validate(RequestSecurityToken)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "使用指定的端點來傳送 Ws-trust 驗證訊息<xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityToken&quot;></xref>物件。"
  syntax:
    content: public virtual System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse Validate (System.IdentityModel.Protocols.WSTrust.RequestSecurityToken rst);
    parameters:
    - id: rst
      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityToken
      description: "<xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityToken&quot;> </xref>表示要求至 STS。"
    return:
      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse
      description: "<xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse&quot;> </xref>代表 STS 回應。"
  overload: System.ServiceModel.Security.WSTrustChannel.Validate*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.WSTrustChannel.Validate(System.ServiceModel.Channels.Message)
  id: Validate(System.ServiceModel.Channels.Message)
  parent: System.ServiceModel.Security.WSTrustChannel
  langs:
  - csharp
  name: Validate(Message)
  nameWithType: WSTrustChannel.Validate(Message)
  fullName: System.ServiceModel.Security.WSTrustChannel.Validate(Message)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "使用指定的端點來傳送 Ws-trust 驗證訊息<xref:System.ServiceModel.Channels.Message>物件。</xref:System.ServiceModel.Channels.Message>"
  syntax:
    content: public System.ServiceModel.Channels.Message Validate (System.ServiceModel.Channels.Message message);
    parameters:
    - id: message
      type: System.ServiceModel.Channels.Message
      description: "<xref:System.ServiceModel.Channels.Message>其中包含對 STS 要求的指示</xref:System.ServiceModel.Channels.Message>"
    return:
      type: System.ServiceModel.Channels.Message
      description: "<xref:System.ServiceModel.Channels.Message>從 STS 傳回</xref:System.ServiceModel.Channels.Message>"
  overload: System.ServiceModel.Security.WSTrustChannel.Validate*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.WSTrustChannel.WSTrustRequestSerializer
  id: WSTrustRequestSerializer
  parent: System.ServiceModel.Security.WSTrustChannel
  langs:
  - csharp
  name: WSTrustRequestSerializer
  nameWithType: WSTrustChannel.WSTrustRequestSerializer
  fullName: System.ServiceModel.Security.WSTrustChannel.WSTrustRequestSerializer
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "<xref href=&quot;System.IdentityModel.Protocols.WSTrust.WSTrustRequestSerializer&quot;> </xref>通道會使用的序列化 Ws-trust 要求訊息。"
  remarks: "Set 存取子會受到保護。"
  syntax:
    content: public System.IdentityModel.Protocols.WSTrust.WSTrustRequestSerializer WSTrustRequestSerializer { get; protected set; }
    return:
      type: System.IdentityModel.Protocols.WSTrust.WSTrustRequestSerializer
      description: "<xref href=&quot;System.IdentityModel.Protocols.WSTrust.WSTrustRequestSerializer&quot;> </xref>通道所使用。"
  overload: System.ServiceModel.Security.WSTrustChannel.WSTrustRequestSerializer*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.WSTrustChannel.WSTrustResponseSerializer
  id: WSTrustResponseSerializer
  parent: System.ServiceModel.Security.WSTrustChannel
  langs:
  - csharp
  name: WSTrustResponseSerializer
  nameWithType: WSTrustChannel.WSTrustResponseSerializer
  fullName: System.ServiceModel.Security.WSTrustChannel.WSTrustResponseSerializer
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "取得或設定<xref href=&quot;System.IdentityModel.Protocols.WSTrust.WSTrustResponseSerializer&quot;></xref>通道會使用的序列化 Ws-trust 回應訊息。"
  remarks: "Set 存取子會受到保護。"
  syntax:
    content: public System.IdentityModel.Protocols.WSTrust.WSTrustResponseSerializer WSTrustResponseSerializer { get; protected set; }
    return:
      type: System.IdentityModel.Protocols.WSTrust.WSTrustResponseSerializer
      description: "<xref href=&quot;System.IdentityModel.Protocols.WSTrust.WSTrustResponseSerializer&quot;> </xref>通道所使用。"
  overload: System.ServiceModel.Security.WSTrustChannel.WSTrustResponseSerializer*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.WSTrustChannel.WSTrustSerializationContext
  id: WSTrustSerializationContext
  parent: System.ServiceModel.Security.WSTrustChannel
  langs:
  - csharp
  name: WSTrustSerializationContext
  nameWithType: WSTrustChannel.WSTrustSerializationContext
  fullName: System.ServiceModel.Security.WSTrustChannel.WSTrustSerializationContext
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "取得或設定<xref href=&quot;System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext&quot;></xref>通道會使用的序列化 Ws-trust 訊息。"
  remarks: "Set 存取子會受到保護。"
  syntax:
    content: public System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext WSTrustSerializationContext { get; protected set; }
    return:
      type: System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext
      description: "<xref href=&quot;System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext&quot;> </xref>通道所使用。"
  overload: System.ServiceModel.Security.WSTrustChannel.WSTrustSerializationContext*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ServiceModel.Security.WSTrustChannel.#ctor(System.ServiceModel.Security.WSTrustChannelFactory,System.ServiceModel.Security.IWSTrustChannelContract,System.ServiceModel.Security.TrustVersion,System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext,System.IdentityModel.Protocols.WSTrust.WSTrustRequestSerializer,System.IdentityModel.Protocols.WSTrust.WSTrustResponseSerializer)
  parent: System.ServiceModel.Security.WSTrustChannel
  isExternal: false
  name: WSTrustChannel(WSTrustChannelFactory,IWSTrustChannelContract,TrustVersion,WSTrustSerializationContext,WSTrustRequestSerializer,WSTrustResponseSerializer)
  nameWithType: WSTrustChannel.WSTrustChannel(WSTrustChannelFactory,IWSTrustChannelContract,TrustVersion,WSTrustSerializationContext,WSTrustRequestSerializer,WSTrustResponseSerializer)
  fullName: System.ServiceModel.Security.WSTrustChannel.WSTrustChannel(WSTrustChannelFactory,IWSTrustChannelContract,TrustVersion,WSTrustSerializationContext,WSTrustRequestSerializer,WSTrustResponseSerializer)
- uid: System.ServiceModel.Security.WSTrustChannelFactory
  parent: System.ServiceModel.Security
  isExternal: false
  name: WSTrustChannelFactory
  nameWithType: WSTrustChannelFactory
  fullName: System.ServiceModel.Security.WSTrustChannelFactory
- uid: System.ServiceModel.Security.IWSTrustChannelContract
  parent: System.ServiceModel.Security
  isExternal: false
  name: IWSTrustChannelContract
  nameWithType: IWSTrustChannelContract
  fullName: System.ServiceModel.Security.IWSTrustChannelContract
- uid: System.ServiceModel.Security.TrustVersion
  parent: System.ServiceModel.Security
  isExternal: true
  name: TrustVersion
  nameWithType: TrustVersion
  fullName: System.ServiceModel.Security.TrustVersion
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext
  parent: System.IdentityModel.Protocols.WSTrust
  isExternal: false
  name: WSTrustSerializationContext
  nameWithType: WSTrustSerializationContext
  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustRequestSerializer
  parent: System.IdentityModel.Protocols.WSTrust
  isExternal: false
  name: WSTrustRequestSerializer
  nameWithType: WSTrustRequestSerializer
  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustRequestSerializer
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustResponseSerializer
  parent: System.IdentityModel.Protocols.WSTrust
  isExternal: false
  name: WSTrustResponseSerializer
  nameWithType: WSTrustResponseSerializer
  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustResponseSerializer
- uid: System.ServiceModel.Security.WSTrustChannel.Abort
  parent: System.ServiceModel.Security.WSTrustChannel
  isExternal: false
  name: Abort()
  nameWithType: WSTrustChannel.Abort()
  fullName: System.ServiceModel.Security.WSTrustChannel.Abort()
- uid: System.ServiceModel.Security.WSTrustChannel.BeginCancel(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Security.WSTrustChannel
  isExternal: false
  name: BeginCancel(RequestSecurityToken,AsyncCallback,Object)
  nameWithType: WSTrustChannel.BeginCancel(RequestSecurityToken,AsyncCallback,Object)
  fullName: System.ServiceModel.Security.WSTrustChannel.BeginCancel(RequestSecurityToken,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.IdentityModel.Protocols.WSTrust.RequestSecurityToken
  parent: System.IdentityModel.Protocols.WSTrust
  isExternal: false
  name: RequestSecurityToken
  nameWithType: RequestSecurityToken
  fullName: System.IdentityModel.Protocols.WSTrust.RequestSecurityToken
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.ServiceModel.Security.WSTrustChannel.BeginCancel(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Security.WSTrustChannel
  isExternal: false
  name: BeginCancel(Message,AsyncCallback,Object)
  nameWithType: WSTrustChannel.BeginCancel(Message,AsyncCallback,Object)
  fullName: System.ServiceModel.Security.WSTrustChannel.BeginCancel(Message,AsyncCallback,Object)
- uid: System.ServiceModel.Channels.Message
  parent: System.ServiceModel.Channels
  isExternal: true
  name: Message
  nameWithType: Message
  fullName: System.ServiceModel.Channels.Message
- uid: System.ServiceModel.Security.WSTrustChannel.BeginClose(System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Security.WSTrustChannel
  isExternal: false
  name: BeginClose(AsyncCallback,Object)
  nameWithType: WSTrustChannel.BeginClose(AsyncCallback,Object)
  fullName: System.ServiceModel.Security.WSTrustChannel.BeginClose(AsyncCallback,Object)
- uid: System.ServiceModel.Security.WSTrustChannel.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Security.WSTrustChannel
  isExternal: false
  name: BeginClose(TimeSpan,AsyncCallback,Object)
  nameWithType: WSTrustChannel.BeginClose(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Security.WSTrustChannel.BeginClose(TimeSpan,AsyncCallback,Object)
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.ServiceModel.Security.WSTrustChannel.BeginIssue(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Security.WSTrustChannel
  isExternal: false
  name: BeginIssue(RequestSecurityToken,AsyncCallback,Object)
  nameWithType: WSTrustChannel.BeginIssue(RequestSecurityToken,AsyncCallback,Object)
  fullName: System.ServiceModel.Security.WSTrustChannel.BeginIssue(RequestSecurityToken,AsyncCallback,Object)
- uid: System.ServiceModel.Security.WSTrustChannel.BeginIssue(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Security.WSTrustChannel
  isExternal: false
  name: BeginIssue(Message,AsyncCallback,Object)
  nameWithType: WSTrustChannel.BeginIssue(Message,AsyncCallback,Object)
  fullName: System.ServiceModel.Security.WSTrustChannel.BeginIssue(Message,AsyncCallback,Object)
- uid: System.ServiceModel.Security.WSTrustChannel.BeginOpen(System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Security.WSTrustChannel
  isExternal: false
  name: BeginOpen(AsyncCallback,Object)
  nameWithType: WSTrustChannel.BeginOpen(AsyncCallback,Object)
  fullName: System.ServiceModel.Security.WSTrustChannel.BeginOpen(AsyncCallback,Object)
- uid: System.ServiceModel.Security.WSTrustChannel.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Security.WSTrustChannel
  isExternal: false
  name: BeginOpen(TimeSpan,AsyncCallback,Object)
  nameWithType: WSTrustChannel.BeginOpen(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Security.WSTrustChannel.BeginOpen(TimeSpan,AsyncCallback,Object)
- uid: System.ServiceModel.Security.WSTrustChannel.BeginRenew(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Security.WSTrustChannel
  isExternal: false
  name: BeginRenew(RequestSecurityToken,AsyncCallback,Object)
  nameWithType: WSTrustChannel.BeginRenew(RequestSecurityToken,AsyncCallback,Object)
  fullName: System.ServiceModel.Security.WSTrustChannel.BeginRenew(RequestSecurityToken,AsyncCallback,Object)
- uid: System.ServiceModel.Security.WSTrustChannel.BeginRenew(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Security.WSTrustChannel
  isExternal: false
  name: BeginRenew(Message,AsyncCallback,Object)
  nameWithType: WSTrustChannel.BeginRenew(Message,AsyncCallback,Object)
  fullName: System.ServiceModel.Security.WSTrustChannel.BeginRenew(Message,AsyncCallback,Object)
- uid: System.ServiceModel.Security.WSTrustChannel.BeginValidate(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Security.WSTrustChannel
  isExternal: false
  name: BeginValidate(RequestSecurityToken,AsyncCallback,Object)
  nameWithType: WSTrustChannel.BeginValidate(RequestSecurityToken,AsyncCallback,Object)
  fullName: System.ServiceModel.Security.WSTrustChannel.BeginValidate(RequestSecurityToken,AsyncCallback,Object)
- uid: System.ServiceModel.Security.WSTrustChannel.BeginValidate(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Security.WSTrustChannel
  isExternal: false
  name: BeginValidate(Message,AsyncCallback,Object)
  nameWithType: WSTrustChannel.BeginValidate(Message,AsyncCallback,Object)
  fullName: System.ServiceModel.Security.WSTrustChannel.BeginValidate(Message,AsyncCallback,Object)
- uid: System.ServiceModel.Security.WSTrustChannel.Cancel(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)
  parent: System.ServiceModel.Security.WSTrustChannel
  isExternal: false
  name: Cancel(RequestSecurityToken)
  nameWithType: WSTrustChannel.Cancel(RequestSecurityToken)
  fullName: System.ServiceModel.Security.WSTrustChannel.Cancel(RequestSecurityToken)
- uid: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse
  parent: System.IdentityModel.Protocols.WSTrust
  isExternal: false
  name: RequestSecurityTokenResponse
  nameWithType: RequestSecurityTokenResponse
  fullName: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse
- uid: System.ServiceModel.Security.WSTrustChannel.Cancel(System.ServiceModel.Channels.Message)
  parent: System.ServiceModel.Security.WSTrustChannel
  isExternal: false
  name: Cancel(Message)
  nameWithType: WSTrustChannel.Cancel(Message)
  fullName: System.ServiceModel.Security.WSTrustChannel.Cancel(Message)
- uid: System.ServiceModel.Security.WSTrustChannel.Channel
  parent: System.ServiceModel.Security.WSTrustChannel
  isExternal: false
  name: Channel
  nameWithType: WSTrustChannel.Channel
  fullName: System.ServiceModel.Security.WSTrustChannel.Channel
- uid: System.ServiceModel.Channels.IChannel
  parent: System.ServiceModel.Channels
  isExternal: true
  name: IChannel
  nameWithType: IChannel
  fullName: System.ServiceModel.Channels.IChannel
- uid: System.ServiceModel.Security.WSTrustChannel.ChannelFactory
  parent: System.ServiceModel.Security.WSTrustChannel
  isExternal: false
  name: ChannelFactory
  nameWithType: WSTrustChannel.ChannelFactory
  fullName: System.ServiceModel.Security.WSTrustChannel.ChannelFactory
- uid: System.ServiceModel.Security.WSTrustChannel.Close
  parent: System.ServiceModel.Security.WSTrustChannel
  isExternal: false
  name: Close()
  nameWithType: WSTrustChannel.Close()
  fullName: System.ServiceModel.Security.WSTrustChannel.Close()
- uid: System.ServiceModel.Security.WSTrustChannel.Close(System.TimeSpan)
  parent: System.ServiceModel.Security.WSTrustChannel
  isExternal: false
  name: Close(TimeSpan)
  nameWithType: WSTrustChannel.Close(TimeSpan)
  fullName: System.ServiceModel.Security.WSTrustChannel.Close(TimeSpan)
- uid: System.ServiceModel.Security.WSTrustChannel.Closed
  parent: System.ServiceModel.Security.WSTrustChannel
  isExternal: false
  name: Closed
  nameWithType: WSTrustChannel.Closed
  fullName: System.ServiceModel.Security.WSTrustChannel.Closed
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.ServiceModel.Security.WSTrustChannel.Closing
  parent: System.ServiceModel.Security.WSTrustChannel
  isExternal: false
  name: Closing
  nameWithType: WSTrustChannel.Closing
  fullName: System.ServiceModel.Security.WSTrustChannel.Closing
- uid: System.ServiceModel.Security.WSTrustChannel.Contract
  parent: System.ServiceModel.Security.WSTrustChannel
  isExternal: false
  name: Contract
  nameWithType: WSTrustChannel.Contract
  fullName: System.ServiceModel.Security.WSTrustChannel.Contract
- uid: System.ServiceModel.Security.WSTrustChannel.CreateRequest(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.String)
  parent: System.ServiceModel.Security.WSTrustChannel
  isExternal: false
  name: CreateRequest(RequestSecurityToken,String)
  nameWithType: WSTrustChannel.CreateRequest(RequestSecurityToken,String)
  fullName: System.ServiceModel.Security.WSTrustChannel.CreateRequest(RequestSecurityToken,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.Security.WSTrustChannel.EndCancel(System.IAsyncResult)
  parent: System.ServiceModel.Security.WSTrustChannel
  isExternal: false
  name: EndCancel(IAsyncResult)
  nameWithType: WSTrustChannel.EndCancel(IAsyncResult)
  fullName: System.ServiceModel.Security.WSTrustChannel.EndCancel(IAsyncResult)
- uid: System.ServiceModel.Security.WSTrustChannel.EndCancel(System.IAsyncResult,System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse@)
  parent: System.ServiceModel.Security.WSTrustChannel
  isExternal: false
  name: EndCancel(IAsyncResult,RequestSecurityTokenResponse)
  nameWithType: WSTrustChannel.EndCancel(IAsyncResult,RequestSecurityTokenResponse)
  fullName: System.ServiceModel.Security.WSTrustChannel.EndCancel(IAsyncResult,RequestSecurityTokenResponse)
- uid: System.ServiceModel.Security.WSTrustChannel.EndClose(System.IAsyncResult)
  parent: System.ServiceModel.Security.WSTrustChannel
  isExternal: false
  name: EndClose(IAsyncResult)
  nameWithType: WSTrustChannel.EndClose(IAsyncResult)
  fullName: System.ServiceModel.Security.WSTrustChannel.EndClose(IAsyncResult)
- uid: System.ServiceModel.Security.WSTrustChannel.EndIssue(System.IAsyncResult)
  parent: System.ServiceModel.Security.WSTrustChannel
  isExternal: false
  name: EndIssue(IAsyncResult)
  nameWithType: WSTrustChannel.EndIssue(IAsyncResult)
  fullName: System.ServiceModel.Security.WSTrustChannel.EndIssue(IAsyncResult)
- uid: System.ServiceModel.Security.WSTrustChannel.EndIssue(System.IAsyncResult,System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse@)
  parent: System.ServiceModel.Security.WSTrustChannel
  isExternal: false
  name: EndIssue(IAsyncResult,RequestSecurityTokenResponse)
  nameWithType: WSTrustChannel.EndIssue(IAsyncResult,RequestSecurityTokenResponse)
  fullName: System.ServiceModel.Security.WSTrustChannel.EndIssue(IAsyncResult,RequestSecurityTokenResponse)
- uid: System.IdentityModel.Tokens.SecurityToken
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityToken
  nameWithType: SecurityToken
  fullName: System.IdentityModel.Tokens.SecurityToken
- uid: System.ServiceModel.Security.WSTrustChannel.EndOpen(System.IAsyncResult)
  parent: System.ServiceModel.Security.WSTrustChannel
  isExternal: false
  name: EndOpen(IAsyncResult)
  nameWithType: WSTrustChannel.EndOpen(IAsyncResult)
  fullName: System.ServiceModel.Security.WSTrustChannel.EndOpen(IAsyncResult)
- uid: System.ServiceModel.Security.WSTrustChannel.EndRenew(System.IAsyncResult)
  parent: System.ServiceModel.Security.WSTrustChannel
  isExternal: false
  name: EndRenew(IAsyncResult)
  nameWithType: WSTrustChannel.EndRenew(IAsyncResult)
  fullName: System.ServiceModel.Security.WSTrustChannel.EndRenew(IAsyncResult)
- uid: System.ServiceModel.Security.WSTrustChannel.EndRenew(System.IAsyncResult,System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse@)
  parent: System.ServiceModel.Security.WSTrustChannel
  isExternal: false
  name: EndRenew(IAsyncResult,RequestSecurityTokenResponse)
  nameWithType: WSTrustChannel.EndRenew(IAsyncResult,RequestSecurityTokenResponse)
  fullName: System.ServiceModel.Security.WSTrustChannel.EndRenew(IAsyncResult,RequestSecurityTokenResponse)
- uid: System.ServiceModel.Security.WSTrustChannel.EndValidate(System.IAsyncResult)
  parent: System.ServiceModel.Security.WSTrustChannel
  isExternal: false
  name: EndValidate(IAsyncResult)
  nameWithType: WSTrustChannel.EndValidate(IAsyncResult)
  fullName: System.ServiceModel.Security.WSTrustChannel.EndValidate(IAsyncResult)
- uid: System.ServiceModel.Security.WSTrustChannel.EndValidate(System.IAsyncResult,System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse@)
  parent: System.ServiceModel.Security.WSTrustChannel
  isExternal: false
  name: EndValidate(IAsyncResult,RequestSecurityTokenResponse)
  nameWithType: WSTrustChannel.EndValidate(IAsyncResult,RequestSecurityTokenResponse)
  fullName: System.ServiceModel.Security.WSTrustChannel.EndValidate(IAsyncResult,RequestSecurityTokenResponse)
- uid: System.ServiceModel.Security.WSTrustChannel.Faulted
  parent: System.ServiceModel.Security.WSTrustChannel
  isExternal: false
  name: Faulted
  nameWithType: WSTrustChannel.Faulted
  fullName: System.ServiceModel.Security.WSTrustChannel.Faulted
- uid: System.ServiceModel.Security.WSTrustChannel.GetProperty``1
  parent: System.ServiceModel.Security.WSTrustChannel
  isExternal: false
  name: GetProperty()
  nameWithType: WSTrustChannel.GetProperty()
  fullName: System.ServiceModel.Security.WSTrustChannel.GetProperty()
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.ServiceModel.Security.WSTrustChannel.GetRequestAction(System.String,System.ServiceModel.Security.TrustVersion)
  parent: System.ServiceModel.Security.WSTrustChannel
  isExternal: false
  name: GetRequestAction(String,TrustVersion)
  nameWithType: WSTrustChannel.GetRequestAction(String,TrustVersion)
  fullName: System.ServiceModel.Security.WSTrustChannel.GetRequestAction(String,TrustVersion)
- uid: System.ServiceModel.Security.WSTrustChannel.GetTokenFromResponse(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse)
  parent: System.ServiceModel.Security.WSTrustChannel
  isExternal: false
  name: GetTokenFromResponse(RequestSecurityToken,RequestSecurityTokenResponse)
  nameWithType: WSTrustChannel.GetTokenFromResponse(RequestSecurityToken,RequestSecurityTokenResponse)
  fullName: System.ServiceModel.Security.WSTrustChannel.GetTokenFromResponse(RequestSecurityToken,RequestSecurityTokenResponse)
- uid: System.ServiceModel.Security.WSTrustChannel.Issue(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)
  parent: System.ServiceModel.Security.WSTrustChannel
  isExternal: false
  name: Issue(RequestSecurityToken)
  nameWithType: WSTrustChannel.Issue(RequestSecurityToken)
  fullName: System.ServiceModel.Security.WSTrustChannel.Issue(RequestSecurityToken)
- uid: System.ServiceModel.Security.WSTrustChannel.Issue(System.ServiceModel.Channels.Message)
  parent: System.ServiceModel.Security.WSTrustChannel
  isExternal: false
  name: Issue(Message)
  nameWithType: WSTrustChannel.Issue(Message)
  fullName: System.ServiceModel.Security.WSTrustChannel.Issue(Message)
- uid: System.ServiceModel.Security.WSTrustChannel.Issue(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse@)
  parent: System.ServiceModel.Security.WSTrustChannel
  isExternal: false
  name: Issue(RequestSecurityToken,RequestSecurityTokenResponse)
  nameWithType: WSTrustChannel.Issue(RequestSecurityToken,RequestSecurityTokenResponse)
  fullName: System.ServiceModel.Security.WSTrustChannel.Issue(RequestSecurityToken,RequestSecurityTokenResponse)
- uid: System.ServiceModel.Security.WSTrustChannel.Open
  parent: System.ServiceModel.Security.WSTrustChannel
  isExternal: false
  name: Open()
  nameWithType: WSTrustChannel.Open()
  fullName: System.ServiceModel.Security.WSTrustChannel.Open()
- uid: System.ServiceModel.Security.WSTrustChannel.Open(System.TimeSpan)
  parent: System.ServiceModel.Security.WSTrustChannel
  isExternal: false
  name: Open(TimeSpan)
  nameWithType: WSTrustChannel.Open(TimeSpan)
  fullName: System.ServiceModel.Security.WSTrustChannel.Open(TimeSpan)
- uid: System.ServiceModel.Security.WSTrustChannel.Opened
  parent: System.ServiceModel.Security.WSTrustChannel
  isExternal: false
  name: Opened
  nameWithType: WSTrustChannel.Opened
  fullName: System.ServiceModel.Security.WSTrustChannel.Opened
- uid: System.ServiceModel.Security.WSTrustChannel.Opening
  parent: System.ServiceModel.Security.WSTrustChannel
  isExternal: false
  name: Opening
  nameWithType: WSTrustChannel.Opening
  fullName: System.ServiceModel.Security.WSTrustChannel.Opening
- uid: System.ServiceModel.Security.WSTrustChannel.ReadResponse(System.ServiceModel.Channels.Message)
  parent: System.ServiceModel.Security.WSTrustChannel
  isExternal: false
  name: ReadResponse(Message)
  nameWithType: WSTrustChannel.ReadResponse(Message)
  fullName: System.ServiceModel.Security.WSTrustChannel.ReadResponse(Message)
- uid: System.ServiceModel.Security.WSTrustChannel.Renew(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)
  parent: System.ServiceModel.Security.WSTrustChannel
  isExternal: false
  name: Renew(RequestSecurityToken)
  nameWithType: WSTrustChannel.Renew(RequestSecurityToken)
  fullName: System.ServiceModel.Security.WSTrustChannel.Renew(RequestSecurityToken)
- uid: System.ServiceModel.Security.WSTrustChannel.Renew(System.ServiceModel.Channels.Message)
  parent: System.ServiceModel.Security.WSTrustChannel
  isExternal: false
  name: Renew(Message)
  nameWithType: WSTrustChannel.Renew(Message)
  fullName: System.ServiceModel.Security.WSTrustChannel.Renew(Message)
- uid: System.ServiceModel.Security.WSTrustChannel.State
  parent: System.ServiceModel.Security.WSTrustChannel
  isExternal: false
  name: State
  nameWithType: WSTrustChannel.State
  fullName: System.ServiceModel.Security.WSTrustChannel.State
- uid: System.ServiceModel.CommunicationState
  parent: System.ServiceModel
  isExternal: true
  name: CommunicationState
  nameWithType: CommunicationState
  fullName: System.ServiceModel.CommunicationState
- uid: System.ServiceModel.Security.WSTrustChannel.TrustVersion
  parent: System.ServiceModel.Security.WSTrustChannel
  isExternal: false
  name: TrustVersion
  nameWithType: WSTrustChannel.TrustVersion
  fullName: System.ServiceModel.Security.WSTrustChannel.TrustVersion
- uid: System.ServiceModel.Security.WSTrustChannel.Validate(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)
  parent: System.ServiceModel.Security.WSTrustChannel
  isExternal: false
  name: Validate(RequestSecurityToken)
  nameWithType: WSTrustChannel.Validate(RequestSecurityToken)
  fullName: System.ServiceModel.Security.WSTrustChannel.Validate(RequestSecurityToken)
- uid: System.ServiceModel.Security.WSTrustChannel.Validate(System.ServiceModel.Channels.Message)
  parent: System.ServiceModel.Security.WSTrustChannel
  isExternal: false
  name: Validate(Message)
  nameWithType: WSTrustChannel.Validate(Message)
  fullName: System.ServiceModel.Security.WSTrustChannel.Validate(Message)
- uid: System.ServiceModel.Security.WSTrustChannel.WSTrustRequestSerializer
  parent: System.ServiceModel.Security.WSTrustChannel
  isExternal: false
  name: WSTrustRequestSerializer
  nameWithType: WSTrustChannel.WSTrustRequestSerializer
  fullName: System.ServiceModel.Security.WSTrustChannel.WSTrustRequestSerializer
- uid: System.ServiceModel.Security.WSTrustChannel.WSTrustResponseSerializer
  parent: System.ServiceModel.Security.WSTrustChannel
  isExternal: false
  name: WSTrustResponseSerializer
  nameWithType: WSTrustChannel.WSTrustResponseSerializer
  fullName: System.ServiceModel.Security.WSTrustChannel.WSTrustResponseSerializer
- uid: System.ServiceModel.Security.WSTrustChannel.WSTrustSerializationContext
  parent: System.ServiceModel.Security.WSTrustChannel
  isExternal: false
  name: WSTrustSerializationContext
  nameWithType: WSTrustChannel.WSTrustSerializationContext
  fullName: System.ServiceModel.Security.WSTrustChannel.WSTrustSerializationContext
- uid: System.ServiceModel.Security.WSTrustChannel.#ctor*
  parent: System.ServiceModel.Security.WSTrustChannel
  isExternal: false
  name: WSTrustChannel
  nameWithType: WSTrustChannel.WSTrustChannel
- uid: System.ServiceModel.Security.WSTrustChannel.Abort*
  parent: System.ServiceModel.Security.WSTrustChannel
  isExternal: false
  name: Abort
  nameWithType: WSTrustChannel.Abort
- uid: System.ServiceModel.Security.WSTrustChannel.BeginCancel*
  parent: System.ServiceModel.Security.WSTrustChannel
  isExternal: false
  name: BeginCancel
  nameWithType: WSTrustChannel.BeginCancel
- uid: System.ServiceModel.Security.WSTrustChannel.BeginClose*
  parent: System.ServiceModel.Security.WSTrustChannel
  isExternal: false
  name: BeginClose
  nameWithType: WSTrustChannel.BeginClose
- uid: System.ServiceModel.Security.WSTrustChannel.BeginIssue*
  parent: System.ServiceModel.Security.WSTrustChannel
  isExternal: false
  name: BeginIssue
  nameWithType: WSTrustChannel.BeginIssue
- uid: System.ServiceModel.Security.WSTrustChannel.BeginOpen*
  parent: System.ServiceModel.Security.WSTrustChannel
  isExternal: false
  name: BeginOpen
  nameWithType: WSTrustChannel.BeginOpen
- uid: System.ServiceModel.Security.WSTrustChannel.BeginRenew*
  parent: System.ServiceModel.Security.WSTrustChannel
  isExternal: false
  name: BeginRenew
  nameWithType: WSTrustChannel.BeginRenew
- uid: System.ServiceModel.Security.WSTrustChannel.BeginValidate*
  parent: System.ServiceModel.Security.WSTrustChannel
  isExternal: false
  name: BeginValidate
  nameWithType: WSTrustChannel.BeginValidate
- uid: System.ServiceModel.Security.WSTrustChannel.Cancel*
  parent: System.ServiceModel.Security.WSTrustChannel
  isExternal: false
  name: Cancel
  nameWithType: WSTrustChannel.Cancel
- uid: System.ServiceModel.Security.WSTrustChannel.Channel*
  parent: System.ServiceModel.Security.WSTrustChannel
  isExternal: false
  name: Channel
  nameWithType: WSTrustChannel.Channel
- uid: System.ServiceModel.Security.WSTrustChannel.ChannelFactory*
  parent: System.ServiceModel.Security.WSTrustChannel
  isExternal: false
  name: ChannelFactory
  nameWithType: WSTrustChannel.ChannelFactory
- uid: System.ServiceModel.Security.WSTrustChannel.Close*
  parent: System.ServiceModel.Security.WSTrustChannel
  isExternal: false
  name: Close
  nameWithType: WSTrustChannel.Close
- uid: System.ServiceModel.Security.WSTrustChannel.Contract*
  parent: System.ServiceModel.Security.WSTrustChannel
  isExternal: false
  name: Contract
  nameWithType: WSTrustChannel.Contract
- uid: System.ServiceModel.Security.WSTrustChannel.CreateRequest*
  parent: System.ServiceModel.Security.WSTrustChannel
  isExternal: false
  name: CreateRequest
  nameWithType: WSTrustChannel.CreateRequest
- uid: System.ServiceModel.Security.WSTrustChannel.EndCancel*
  parent: System.ServiceModel.Security.WSTrustChannel
  isExternal: false
  name: EndCancel
  nameWithType: WSTrustChannel.EndCancel
- uid: System.ServiceModel.Security.WSTrustChannel.EndClose*
  parent: System.ServiceModel.Security.WSTrustChannel
  isExternal: false
  name: EndClose
  nameWithType: WSTrustChannel.EndClose
- uid: System.ServiceModel.Security.WSTrustChannel.EndIssue*
  parent: System.ServiceModel.Security.WSTrustChannel
  isExternal: false
  name: EndIssue
  nameWithType: WSTrustChannel.EndIssue
- uid: System.ServiceModel.Security.WSTrustChannel.EndOpen*
  parent: System.ServiceModel.Security.WSTrustChannel
  isExternal: false
  name: EndOpen
  nameWithType: WSTrustChannel.EndOpen
- uid: System.ServiceModel.Security.WSTrustChannel.EndRenew*
  parent: System.ServiceModel.Security.WSTrustChannel
  isExternal: false
  name: EndRenew
  nameWithType: WSTrustChannel.EndRenew
- uid: System.ServiceModel.Security.WSTrustChannel.EndValidate*
  parent: System.ServiceModel.Security.WSTrustChannel
  isExternal: false
  name: EndValidate
  nameWithType: WSTrustChannel.EndValidate
- uid: System.ServiceModel.Security.WSTrustChannel.GetProperty<T>*
  parent: System.ServiceModel.Security.WSTrustChannel
  isExternal: false
  name: GetProperty<T>
  nameWithType: WSTrustChannel.GetProperty<T>
- uid: System.ServiceModel.Security.WSTrustChannel.GetRequestAction*
  parent: System.ServiceModel.Security.WSTrustChannel
  isExternal: false
  name: GetRequestAction
  nameWithType: WSTrustChannel.GetRequestAction
- uid: System.ServiceModel.Security.WSTrustChannel.GetTokenFromResponse*
  parent: System.ServiceModel.Security.WSTrustChannel
  isExternal: false
  name: GetTokenFromResponse
  nameWithType: WSTrustChannel.GetTokenFromResponse
- uid: System.ServiceModel.Security.WSTrustChannel.Issue*
  parent: System.ServiceModel.Security.WSTrustChannel
  isExternal: false
  name: Issue
  nameWithType: WSTrustChannel.Issue
- uid: System.ServiceModel.Security.WSTrustChannel.Open*
  parent: System.ServiceModel.Security.WSTrustChannel
  isExternal: false
  name: Open
  nameWithType: WSTrustChannel.Open
- uid: System.ServiceModel.Security.WSTrustChannel.ReadResponse*
  parent: System.ServiceModel.Security.WSTrustChannel
  isExternal: false
  name: ReadResponse
  nameWithType: WSTrustChannel.ReadResponse
- uid: System.ServiceModel.Security.WSTrustChannel.Renew*
  parent: System.ServiceModel.Security.WSTrustChannel
  isExternal: false
  name: Renew
  nameWithType: WSTrustChannel.Renew
- uid: System.ServiceModel.Security.WSTrustChannel.State*
  parent: System.ServiceModel.Security.WSTrustChannel
  isExternal: false
  name: State
  nameWithType: WSTrustChannel.State
- uid: System.ServiceModel.Security.WSTrustChannel.TrustVersion*
  parent: System.ServiceModel.Security.WSTrustChannel
  isExternal: false
  name: TrustVersion
  nameWithType: WSTrustChannel.TrustVersion
- uid: System.ServiceModel.Security.WSTrustChannel.Validate*
  parent: System.ServiceModel.Security.WSTrustChannel
  isExternal: false
  name: Validate
  nameWithType: WSTrustChannel.Validate
- uid: System.ServiceModel.Security.WSTrustChannel.WSTrustRequestSerializer*
  parent: System.ServiceModel.Security.WSTrustChannel
  isExternal: false
  name: WSTrustRequestSerializer
  nameWithType: WSTrustChannel.WSTrustRequestSerializer
- uid: System.ServiceModel.Security.WSTrustChannel.WSTrustResponseSerializer*
  parent: System.ServiceModel.Security.WSTrustChannel
  isExternal: false
  name: WSTrustResponseSerializer
  nameWithType: WSTrustChannel.WSTrustResponseSerializer
- uid: System.ServiceModel.Security.WSTrustChannel.WSTrustSerializationContext*
  parent: System.ServiceModel.Security.WSTrustChannel
  isExternal: false
  name: WSTrustSerializationContext
  nameWithType: WSTrustChannel.WSTrustSerializationContext
