### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.ButtonField
  id: ButtonField
  children:
  - System.Web.UI.WebControls.ButtonField.#ctor
  - System.Web.UI.WebControls.ButtonField.CommandName
  - System.Web.UI.WebControls.ButtonField.CopyProperties(System.Web.UI.WebControls.DataControlField)
  - System.Web.UI.WebControls.ButtonField.CreateField
  - System.Web.UI.WebControls.ButtonField.DataTextField
  - System.Web.UI.WebControls.ButtonField.DataTextFormatString
  - System.Web.UI.WebControls.ButtonField.FormatDataTextValue(System.Object)
  - System.Web.UI.WebControls.ButtonField.ImageUrl
  - System.Web.UI.WebControls.ButtonField.Initialize(System.Boolean,System.Web.UI.Control)
  - System.Web.UI.WebControls.ButtonField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  - System.Web.UI.WebControls.ButtonField.Text
  - System.Web.UI.WebControls.ButtonField.ValidateSupportsCallback
  langs:
  - csharp
  name: ButtonField
  nameWithType: ButtonField
  fullName: System.Web.UI.WebControls.ButtonField
  type: Class
  summary: "表示顯示為資料繫結控制項中按鈕的欄位。"
  remarks: "資料繫結控制項用 ButtonField 類別 (例如<xref:System.Web.UI.WebControls.GridView>和<xref:System.Web.UI.WebControls.DetailsView>) 顯示的按鈕會顯示每一筆記錄。</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView> ButtonField 物件是根據使用它的資料繫結控制項的顯示方式。 例如，<xref:System.Web.UI.WebControls.GridView>控制項會顯示 ButtonField 物件做為資料行，而<xref:System.Web.UI.WebControls.DetailsView>控制項顯示為一個資料列。</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView>       按一下按鈕欄位中的按鈕，就會引發命令事件的父資料繫結控制項。 您可以提供要藉由提供命令事件的事件處理常式在按一下命令按鈕時執行的自訂常式。      > [!NOTE] ><xref:System.Web.UI.WebControls.GridView>控制引發<xref:System.Web.UI.WebControls.GridView.RowCommand>事件，而<xref:System.Web.UI.WebControls.DetailsView>控制引發<xref:System.Web.UI.WebControls.DetailsView.ItemCommand>事件。</xref:System.Web.UI.WebControls.DetailsView.ItemCommand> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView.RowCommand> </xref:System.Web.UI.WebControls.GridView>       若要判斷引發命令事件記錄的索引，請使用<xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A>事件引數傳遞至命令事件的資料繫結控制項的屬性。</xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A> ButtonField 類別會自動填入<xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A>具有適當的索引值的屬性。</xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A>       若要指定要顯示的按鈕類型，請使用<xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A>屬性。</xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> 當顯示的連結或命令按鈕時，使用<xref:System.Web.UI.WebControls.ButtonField.Text%2A>屬性來指定要顯示在按鈕中的標題。</xref:System.Web.UI.WebControls.ButtonField.Text%2A>      > [!NOTE] > 如果您設定<xref:System.Web.UI.WebControls.ButtonField.Text%2A>屬性、 ButtonField 共用相同的標題中的所有按鈕。</xref:System.Web.UI.WebControls.ButtonField.Text%2A>       或者，您可以結合 ButtonField 物件與資料來源中的欄位。 這可讓您顯示 ButtonField 物件中不同按鈕的標題。 指定之欄位中的值會用於按鈕的文字標題。 設定<xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A>屬性，以將 ButtonField 物件繫結至資料來源中的欄位。</xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A>       當顯示影像按鈕時，使用<xref:System.Web.UI.WebControls.ButtonField.ImageUrl%2A>屬性來指定要顯示 ButtonField 物件中按鈕的影像。</xref:System.Web.UI.WebControls.ButtonField.ImageUrl%2A>      > [!NOTE] > ButtonField 物件中的所有按鈕都共用相同的映像。       您可以隱藏 ButtonField 中的物件資料繫結控制項，藉由設定<xref:System.Web.UI.WebControls.DataControlField.Visible%2A>屬性`false`。</xref:System.Web.UI.WebControls.DataControlField.Visible%2A>       ButtonField 物件可讓您自訂其頁首和頁尾區段。 若要在頁首或頁尾區段中顯示的標題，請設定<xref:System.Web.UI.WebControls.DataControlField.HeaderText%2A>或<xref:System.Web.UI.WebControls.DataControlField.FooterText%2A>屬性，分別。</xref:System.Web.UI.WebControls.DataControlField.FooterText%2A> </xref:System.Web.UI.WebControls.DataControlField.HeaderText%2A> 而不是顯示在標頭區段的文字，您可以藉由設定顯示影像<xref:System.Web.UI.WebControls.DataControlField.HeaderImageUrl%2A>屬性。</xref:System.Web.UI.WebControls.DataControlField.HeaderImageUrl%2A> 若要隱藏 ButtonField 物件中的標頭區段，設定<xref:System.Web.UI.WebControls.ButtonFieldBase.ShowHeader%2A>屬性`false`。</xref:System.Web.UI.WebControls.ButtonFieldBase.ShowHeader%2A>      > [!NOTE] > 某些資料繫結控制項 (例如<xref:System.Web.UI.WebControls.GridView>控制項) 即可顯示或隱藏只控制項的整個標頭區段。</xref:System.Web.UI.WebControls.GridView> 不支援這些資料繫結控制項<xref:System.Web.UI.WebControls.ButtonFieldBase.ShowHeader%2A>個別按鈕欄位的屬性。</xref:System.Web.UI.WebControls.ButtonFieldBase.ShowHeader%2A> 顯示或隱藏的整個標頭區段的資料繫結控制項 （如果有的話），請使用`ShowHeader`控制項的屬性。       您也可以自訂 ButtonField 物件 （例如字型色彩、 背景色彩等等） 的外觀，藉由設定欄位的不同部分的樣式屬性。 下表列出不同的樣式屬性。      |樣式屬性 |樣式設定 |  |--------------------|----------------------------|  |<xref:System.Web.UI.WebControls.DataControlField.ControlStyle%2A>|子系 Web 伺服器控制項的 ButtonField。 |  |<xref:System.Web.UI.WebControls.DataControlField.FooterStyle%2A>|ButtonField 的頁尾區段。 |  |<xref:System.Web.UI.WebControls.DataControlField.HeaderStyle%2A>|ButtonField 的標頭區段。 |  |<xref:System.Web.UI.WebControls.DataControlField.ItemStyle%2A>|資料中的項目 ButtonField。 |</xref:System.Web.UI.WebControls.DataControlField.ItemStyle%2A> </xref:System.Web.UI.WebControls.DataControlField.HeaderStyle%2A> </xref:System.Web.UI.WebControls.DataControlField.FooterStyle%2A> </xref:System.Web.UI.WebControls.DataControlField.ControlStyle%2A>"
  example:
  - "The following code example demonstrates how to use a ButtonField object to display a column of command buttons in a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-vb[ButtonField#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_176_1.aspx)]\n [!code-cs[ButtonField#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_176_1.aspx)]"
  syntax:
    content: 'public class ButtonField : System.Web.UI.WebControls.ButtonFieldBase'
  inheritance:
  - System.Object
  - System.Web.UI.WebControls.DataControlField
  - System.Web.UI.WebControls.ButtonFieldBase
  implements: []
  inheritedMembers:
  - System.Web.UI.WebControls.ButtonFieldBase.ButtonType
  - System.Web.UI.WebControls.ButtonFieldBase.CausesValidation
  - System.Web.UI.WebControls.ButtonFieldBase.ShowHeader
  - System.Web.UI.WebControls.ButtonFieldBase.ValidationGroup
  - System.Web.UI.WebControls.DataControlField.AccessibleHeaderText
  - System.Web.UI.WebControls.DataControlField.CloneField
  - System.Web.UI.WebControls.DataControlField.Control
  - System.Web.UI.WebControls.DataControlField.ControlStyle
  - System.Web.UI.WebControls.DataControlField.DesignMode
  - System.Web.UI.WebControls.DataControlField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)
  - System.Web.UI.WebControls.DataControlField.FooterStyle
  - System.Web.UI.WebControls.DataControlField.FooterText
  - System.Web.UI.WebControls.DataControlField.HeaderImageUrl
  - System.Web.UI.WebControls.DataControlField.HeaderStyle
  - System.Web.UI.WebControls.DataControlField.HeaderText
  - System.Web.UI.WebControls.DataControlField.InsertVisible
  - System.Web.UI.WebControls.DataControlField.IsTrackingViewState
  - System.Web.UI.WebControls.DataControlField.ItemStyle
  - System.Web.UI.WebControls.DataControlField.LoadViewState(System.Object)
  - System.Web.UI.WebControls.DataControlField.OnFieldChanged
  - System.Web.UI.WebControls.DataControlField.SaveViewState
  - System.Web.UI.WebControls.DataControlField.SortExpression
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IDataSourceViewSchemaAccessor#DataSourceViewSchema
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#TrackViewState
  - System.Web.UI.WebControls.DataControlField.ToString
  - System.Web.UI.WebControls.DataControlField.TrackViewState
  - System.Web.UI.WebControls.DataControlField.ValidateRequestMode
  - System.Web.UI.WebControls.DataControlField.ViewState
  - System.Web.UI.WebControls.DataControlField.Visible
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonField.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.ButtonField
  langs:
  - csharp
  name: ButtonField()
  nameWithType: ButtonField.ButtonField()
  fullName: System.Web.UI.WebControls.ButtonField.ButtonField()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "初始化的新執行個體<xref href=&quot;System.Web.UI.WebControls.ButtonField&quot;></xref>類別。"
  remarks: "使用 ButtonField 建構函式來初始化<xref:System.Web.UI.WebControls.ButtonField>類別</xref:System.Web.UI.WebControls.ButtonField>的新執行個體 將欄位加入至動態建立的資料繫結控制項時，通常會使用這個建構函式。       若要加入<xref:System.Web.UI.WebControls.ButtonField>物件以動態方式加入資料繫結控制項，會建立新<xref:System.Web.UI.WebControls.ButtonField>物件、 設定其屬性，並將其加入資料繫結控制項的欄位集合。</xref:System.Web.UI.WebControls.ButtonField> </xref:System.Web.UI.WebControls.ButtonField> 例如，如果您使用<xref:System.Web.UI.WebControls.GridView>控制項，加入<xref:System.Web.UI.WebControls.ButtonField>物件<xref:System.Web.UI.WebControls.GridView.Columns%2A>集合。</xref:System.Web.UI.WebControls.GridView.Columns%2A> </xref:System.Web.UI.WebControls.ButtonField> </xref:System.Web.UI.WebControls.GridView>      > [!NOTE] > 雖然您可以將欄位加入動態資料繫結控制項，但欄位應該宣告為靜態，並接著顯示或隱藏，適當地。 以靜態方式宣告所有欄位可都減少的父資料繫結控制項的檢視狀態的大小。"
  example:
  - "The following code example demonstrates how to use the M:System.Web.UI.WebControls.ButtonField.#ctor constructor to add a <xref:System.Web.UI.WebControls.ButtonField> object dynamically to a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-vb[ButtonFieldCtor#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_218_1.aspx)]\n [!code-cs[ButtonFieldCtor#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_218_1.aspx)]"
  syntax:
    content: public ButtonField ();
    parameters: []
  overload: System.Web.UI.WebControls.ButtonField.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonField.CommandName
  id: CommandName
  parent: System.Web.UI.WebControls.ButtonField
  langs:
  - csharp
  name: CommandName
  nameWithType: ButtonField.CommandName
  fullName: System.Web.UI.WebControls.ButtonField.CommandName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定字串，表示要執行時中按鈕的動作<xref href=&quot;System.Web.UI.WebControls.ButtonField&quot;></xref>按一下物件。"
  remarks: "使用 CommandName 屬性相關聯的命令名稱，例如`&quot;Add&quot;`或`&quot;Remove&quot;`，按鈕的<xref:System.Web.UI.WebControls.ButtonField>物件。</xref:System.Web.UI.WebControls.ButtonField> 您可以將任何字串，識別要在按一下命令按鈕時執行的動作 CommandName 屬性。 您可以透過程式設計方式判斷事件處理常式中的命令名稱並執行適當的動作。      > [!NOTE] > 中的所有按鈕<xref:System.Web.UI.WebControls.ButtonField>物件共用相同的命令名稱。</xref:System.Web.UI.WebControls.ButtonField>       資料繫結控制項辨識某些命令名稱，並自動引發和處理控制項的適當事件。 可以辨識下列的命令名稱:- `&quot;Cancel&quot;`       -    `&quot;Delete&quot;`       -    `&quot;Edit&quot;`       -    `&quot;Insert&quot;`       -    `&quot;New&quot;`       -    `&quot;Page&quot;`       -    `&quot;Select&quot;`       -    `&quot;Sort&quot;`       -    `&quot;Update&quot;`要叫用分頁，設為 CommandName`&quot;Page&quot;`和<xref:System.Web.UI.WebControls.Button.CommandArgument%2A>包含<xref:System.Web.UI.WebControls.Button>控制權傳輸至`&quot;First&quot;`， `&quot;Last&quot;`， `&quot;Prev&quot;`， `&quot;Next&quot;`，或頁碼。</xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.WebControls.Button.CommandArgument%2A> 不過，由於<xref:System.Web.UI.WebControls.Button.CommandArgument%2A>如<xref:System.Web.UI.WebControls.ButtonField>控制項都是整數資料列索引，<xref:System.Web.UI.WebControls.ButtonField>控制項不是適用於叫用分頁。</xref:System.Web.UI.WebControls.ButtonField> </xref:System.Web.UI.WebControls.ButtonField> </xref:System.Web.UI.WebControls.Button.CommandArgument%2A> 同樣地，雖然您可以叫用排序設 CommandName `&quot;Sort&quot;`、<xref:System.Web.UI.WebControls.Button.CommandArgument%2A>屬性<xref:System.Web.UI.WebControls.ButtonField>控制項都是整數資料列索引。</xref:System.Web.UI.WebControls.ButtonField> </xref:System.Web.UI.WebControls.Button.CommandArgument%2A> 基於這個理由，<xref:System.Web.UI.WebControls.ButtonField>控制項不是適用於叫用排序。</xref:System.Web.UI.WebControls.ButtonField> 自訂命令名稱，例如`&quot;Add&quot;`和`&quot;Remove&quot;`，您需要撰寫事件程式碼，請檢查命令名稱，並執行某些自訂動作。 如需詳細資訊，請參閱<xref:System.Web.UI.WebControls.DataControlCommands>.</xref:System.Web.UI.WebControls.DataControlCommands>      > [!NOTE] > 並非所有的命令名稱可識別每一個資料繫結控制項。 例如，`&quot;New&quot;`無法辨識的<xref:System.Web.UI.WebControls.GridView>控制項和`&quot;Select&quot;`無法辨識的<xref:System.Web.UI.WebControls.DetailsView>控制項。</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView>       這個屬性的值會儲存檢視狀態中。"
  example:
  - "The following code example demonstrates how to use the CommandName property to specify a command name for the buttons in a <xref:System.Web.UI.WebControls.ButtonField> object of a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-vb[ButtonField#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_922_1.aspx)]\n [!code-cs[ButtonField#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_922_1.aspx)]"
  syntax:
    content: public virtual string CommandName { get; set; }
    return:
      type: System.String
      description: "中的按鈕時要執行的動作名稱<xref href=&quot;System.Web.UI.WebControls.ButtonField&quot;></xref>按下。"
  overload: System.Web.UI.WebControls.ButtonField.CommandName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonField.CopyProperties(System.Web.UI.WebControls.DataControlField)
  id: CopyProperties(System.Web.UI.WebControls.DataControlField)
  parent: System.Web.UI.WebControls.ButtonField
  langs:
  - csharp
  name: CopyProperties(DataControlField)
  nameWithType: ButtonField.CopyProperties(DataControlField)
  fullName: System.Web.UI.WebControls.ButtonField.CopyProperties(DataControlField)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "將目前的屬性複製<xref href=&quot;System.Web.UI.WebControls.ButtonField&quot;></xref>到指定的物件<xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;></xref>物件。"
  remarks: "<xref:System.Web.UI.WebControls.ButtonFieldBase.CopyProperties%2A>方法是 helper 方法，以供<xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=fullName>方法來複製目前的內容<xref:System.Web.UI.WebControls.ButtonFieldBase>-衍生物件<xref:System.Web.UI.WebControls.DataControlField>所建立的物件<xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=fullName>方法。</xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.DataControlField> </xref:System.Web.UI.WebControls.ButtonFieldBase> </xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.ButtonFieldBase.CopyProperties%2A>"
  syntax:
    content: protected override void CopyProperties (System.Web.UI.WebControls.DataControlField newField);
    parameters:
    - id: newField
      type: System.Web.UI.WebControls.DataControlField
      description: "<xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref>要複製目前的內容<xref href=&quot;System.Web.UI.WebControls.ButtonField&quot;> </xref>。"
  overload: System.Web.UI.WebControls.ButtonField.CopyProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonField.CreateField
  id: CreateField
  parent: System.Web.UI.WebControls.ButtonField
  langs:
  - csharp
  name: CreateField()
  nameWithType: ButtonField.CreateField()
  fullName: System.Web.UI.WebControls.ButtonField.CreateField()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "建立並傳回的新執行個體<xref href=&quot;System.Web.UI.WebControls.ButtonField&quot;></xref>類別。"
  remarks: "CreateField 方法是 helper 方法，以供<xref:System.Web.UI.WebControls.DataControlField.CloneField%2A>若要建立空的基底類別方法<xref:System.Web.UI.WebControls.ButtonField>要複製目前的內容物件<xref:System.Web.UI.WebControls.ButtonField>-衍生物件。</xref:System.Web.UI.WebControls.ButtonField> </xref:System.Web.UI.WebControls.ButtonField> </xref:System.Web.UI.WebControls.DataControlField.CloneField%2A>"
  syntax:
    content: protected override System.Web.UI.WebControls.DataControlField CreateField ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.DataControlField
      description: "新執行個體<xref href=&quot;System.Web.UI.WebControls.ButtonField&quot;></xref>類別。"
  overload: System.Web.UI.WebControls.ButtonField.CreateField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonField.DataTextField
  id: DataTextField
  parent: System.Web.UI.WebControls.ButtonField
  langs:
  - csharp
  name: DataTextField
  nameWithType: ButtonField.DataTextField
  fullName: System.Web.UI.WebControls.ButtonField.DataTextField
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定值結合到資料欄位的名稱<xref:System.Web.UI.WebControls.Button.Text*>屬性<xref href=&quot;System.Web.UI.WebControls.Button&quot;></xref>所呈現的控制項<xref href=&quot;System.Web.UI.WebControls.ButtonField&quot;></xref>物件。</xref:System.Web.UI.WebControls.Button.Text*>"
  remarks: "當<xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A>屬性<xref:System.Web.UI.WebControls.ButtonField>物件設定為<xref:System.Web.UI.WebControls.ButtonType>或<xref:System.Web.UI.WebControls.ButtonType>DataTextField 屬性用於指定要繫結至欄位的名稱、 值<xref:System.Web.UI.WebControls.ButtonField>物件。</xref:System.Web.UI.WebControls.ButtonField> </xref:System.Web.UI.WebControls.ButtonType> </xref:System.Web.UI.WebControls.ButtonType> </xref:System.Web.UI.WebControls.ButtonField> </xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> 欄位的值隨即顯示在按鈕的文字為<xref:System.Web.UI.WebControls.ButtonField>物件。</xref:System.Web.UI.WebControls.ButtonField> （選擇性） 您可以格式化顯示的文字，藉由設定<xref:System.Web.UI.WebControls.ButtonField.DataTextFormatString%2A>屬性。</xref:System.Web.UI.WebControls.ButtonField.DataTextFormatString%2A>       而不是使用 DataTextField 屬性要繫結<xref:System.Web.UI.WebControls.ButtonField>物件欄位從資料來源，您可以使用<xref:System.Web.UI.WebControls.ButtonField.Text%2A>屬性以顯示靜態文字的按鈕文字<xref:System.Web.UI.WebControls.ButtonField>物件。</xref:System.Web.UI.WebControls.ButtonField> </xref:System.Web.UI.WebControls.ButtonField.Text%2A> </xref:System.Web.UI.WebControls.ButtonField> 當<xref:System.Web.UI.WebControls.ButtonField.Text%2A>屬性時，每個按鈕都共用相同的標題。</xref:System.Web.UI.WebControls.ButtonField.Text%2A>      > [!NOTE] > 如果 DataTextField 和<xref:System.Web.UI.WebControls.ButtonField.Text%2A>屬性都設定、 DataTextField 屬性會優先。</xref:System.Web.UI.WebControls.ButtonField.Text%2A>       這個屬性的值會儲存檢視狀態中。"
  example:
  - "The following code example demonstrates how to use the DataTextField property to specify which field to display in a <xref:System.Web.UI.WebControls.ButtonField> column of a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-cs[ButtonFieldDataTextField#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1139_1.aspx)]\n [!code-vb[ButtonFieldDataTextField#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1139_1.aspx)]"
  syntax:
    content: public virtual string DataTextField { get; set; }
    return:
      type: System.String
      description: "繫結至欄位的名稱<xref href=&quot;System.Web.UI.WebControls.ButtonField&quot;> </xref>。 預設為空字串 (&quot;&quot;)，表示未設定 DataTextField 屬性。"
  overload: System.Web.UI.WebControls.ButtonField.DataTextField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonField.DataTextFormatString
  id: DataTextFormatString
  parent: System.Web.UI.WebControls.ButtonField
  langs:
  - csharp
  name: DataTextFormatString
  nameWithType: ButtonField.DataTextFormatString
  fullName: System.Web.UI.WebControls.ButtonField.DataTextFormatString
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定指定的欄位值的顯示格式的字串。"
  remarks: "使用 DataTextFormatString 屬性來指定自訂的顯示格式的值會顯示在<xref:System.Web.UI.WebControls.ButtonField>物件。</xref:System.Web.UI.WebControls.ButtonField> 如果未設定 DataTextFormatString 屬性，欄位的值會顯示不含任何特殊格式。      > [!NOTE] > 套用格式字串時，才<xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A>屬性設定。</xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A>       格式字串可以是任何常值字串，而且通常包含欄位的值的預留位置。 例如，在格式字串`&quot;Item Value: {0}&quot;`、`{0}`預留位置取代欄位的值，當它出現在<xref:System.Web.UI.WebControls.ButtonField>物件。</xref:System.Web.UI.WebControls.ButtonField> 格式字串的其餘部分會顯示為常值文字。      > [!NOTE] > 如果格式字串不包含預留位置，從資料來源欄位的值不會包含在最後顯示的文字。       包含兩個部分，並以分號和包裝在括號，在表單中的預留位置 { `A` : `Bxx` }。 冒號之前的值 (`A`一般範例中) 以零為起始的參數清單中，指定欄位值的索引。      > [!NOTE] > 這`A`參數是格式化語法的一部分。 因為每個資料格中只能有一個欄位的值，這個值只可以設定為 0。       冒號和冒號後面的值是選擇性的。 冒號後面的字元 (`B`一般範例中) 指定要在其中顯示值的格式。 下表列出常見的格式。      |格式化字元 |描述 |  |----------------------|-----------------|  |`C`|以貨幣格式顯示數值。 |  |`D`|以十進位格式顯示數值。 |  |`E`|以科學記號 （指數） 格式顯示數值。 |  |`F`|固定格式來顯示數值。 |  |`G`|以一般格式顯示數值。 |  |`N`|以數字格式顯示數值。 |  |`X`|以十六進位格式顯示數值。 |     > [!NOTE] > 除了`X`，不區分大小寫的格式字元。 `X`格式字元會顯示在指定的情況下的十六進位字元。       格式字元後的值 (`xx`一般範例中) 指定有效位數或小數位數，若要顯示的數目。 例如，格式字串`&quot;{0:F2}&quot;`會顯示兩個小數位數定點數字。       如需有關如何格式化字串的詳細資訊，請參閱[格式化型別](~/add/includes/ajax-current-ext-md.md)。       這個屬性的值會儲存檢視狀態中。"
  example:
  - "The following code example demonstrates how to use the DataTextFormatString property to specify a custom display format for the values of a field.  \n  \n [!code-cs[ButtonFieldDataTextField#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_654_1.aspx)]\n [!code-vb[ButtonFieldDataTextField#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_654_1.aspx)]"
  syntax:
    content: public virtual string DataTextFormatString { get; set; }
    return:
      type: System.String
      description: "格式字串，指定欄位的值的顯示格式。 預設為空字串 (&quot;&quot;)，表示未將特殊格式未套用至該欄位值。"
  overload: System.Web.UI.WebControls.ButtonField.DataTextFormatString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonField.FormatDataTextValue(System.Object)
  id: FormatDataTextValue(System.Object)
  parent: System.Web.UI.WebControls.ButtonField
  langs:
  - csharp
  name: FormatDataTextValue(Object)
  nameWithType: ButtonField.FormatDataTextValue(Object)
  fullName: System.Web.UI.WebControls.ButtonField.FormatDataTextValue(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "將指定的欄位值中的資料格的格式化<xref href=&quot;System.Web.UI.WebControls.ButtonField&quot;></xref>物件。"
  remarks: "FormatDataTextValue 方法是 helper 方法，用來轉換成格式所指定的欄位值<xref:System.Web.UI.WebControls.ButtonField.DataTextFormatString%2A>屬性。</xref:System.Web.UI.WebControls.ButtonField.DataTextFormatString%2A>"
  syntax:
    content: protected virtual string FormatDataTextValue (object dataTextValue);
    parameters:
    - id: dataTextValue
      type: System.Object
      description: "要格式化的欄位值。"
    return:
      type: System.String
      description: "欄位值轉換成指定的格式<xref:System.Web.UI.WebControls.ButtonField.DataTextFormatString*>屬性。</xref:System.Web.UI.WebControls.ButtonField.DataTextFormatString*>"
  overload: System.Web.UI.WebControls.ButtonField.FormatDataTextValue*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonField.ImageUrl
  id: ImageUrl
  parent: System.Web.UI.WebControls.ButtonField
  langs:
  - csharp
  name: ImageUrl
  nameWithType: ButtonField.ImageUrl
  fullName: System.Web.UI.WebControls.ButtonField.ImageUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定要顯示在每個按鈕影像<xref href=&quot;System.Web.UI.WebControls.ButtonField&quot;></xref>物件。"
  remarks: "當<xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A>屬性<xref:System.Web.UI.WebControls.ButtonField>物件設定為<xref:System.Web.UI.WebControls.ButtonType>值，請使用 ImageUrl 屬性來指定要顯示每個按鈕的影像。</xref:System.Web.UI.WebControls.ButtonType> </xref:System.Web.UI.WebControls.ButtonField> </xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> 此映像可以是任何檔案格式 （.jpg、.gif、.bmp 等等），只要用戶端瀏覽器支援該格式。       這個屬性的值會儲存檢視狀態中。"
  example:
  - "The following code example demonstrates how to use the ImageUrl property to specify an image to display for each button in the <xref:System.Web.UI.WebControls.ButtonField> object. For this code example to display, you must provide your own image.  \n  \n [!code-vb[ButtonFieldImageUrl#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_99_1.aspx)]\n [!code-cs[ButtonFieldImageUrl#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_99_1.aspx)]"
  syntax:
    content: public virtual string ImageUrl { get; set; }
    return:
      type: System.String
      description: "中的所有按鈕顯示的影像<xref href=&quot;System.Web.UI.WebControls.ButtonField&quot;> </xref>。 預設為空字串 (&quot;&quot;)，表示未設定 ImageUrl 屬性。"
  overload: System.Web.UI.WebControls.ButtonField.ImageUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonField.Initialize(System.Boolean,System.Web.UI.Control)
  id: Initialize(System.Boolean,System.Web.UI.Control)
  parent: System.Web.UI.WebControls.ButtonField
  langs:
  - csharp
  name: Initialize(Boolean,Control)
  nameWithType: ButtonField.Initialize(Boolean,Control)
  fullName: System.Web.UI.WebControls.ButtonField.Initialize(Boolean,Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "初始化目前<xref href=&quot;System.Web.UI.WebControls.ButtonField&quot;></xref>物件。"
  remarks: "Initialize 方法會呼叫資料控制項與其<xref:System.Web.UI.WebControls.ButtonField>物件與其相關聯執行基本物件初始化的欄位之前的欄位加到資料列集合, 的執行個體。</xref:System.Web.UI.WebControls.ButtonField> 資料控制項，例如<xref:System.Web.UI.WebControls.DetailsView>和<xref:System.Web.UI.WebControls.GridView>，呼叫<xref:System.Web.UI.WebControls.DataControlField.Initialize%2A>方法在其`CreateChildControls`方法之前其他方法，例如`CreateRow`，呼叫以建立特定的資料列與資料。</xref:System.Web.UI.WebControls.DataControlField.Initialize%2A> </xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.DetailsView>       當您撰寫使用自訂資料繫結控制項，呼叫 Initialize 方法<xref:System.Web.UI.WebControls.TableCell>物件來執行基本的初始設定<xref:System.Web.UI.WebControls.ButtonField>物件。</xref:System.Web.UI.WebControls.ButtonField> </xref:System.Web.UI.WebControls.TableCell> 實作這個方法，如果您<xref:System.Web.UI.WebControls.ButtonField>-衍生型別需要的任何物件初始設定之前它所擴展,<xref:System.Web.UI.WebControls.TableCell>物件與資料或控制項中<xref:System.Web.UI.WebControls.ButtonField.InitializeCell%2A>方法。</xref:System.Web.UI.WebControls.ButtonField.InitializeCell%2A> </xref:System.Web.UI.WebControls.TableCell> </xref:System.Web.UI.WebControls.ButtonField>"
  syntax:
    content: public override bool Initialize (bool sortingEnabled, System.Web.UI.Control control);
    parameters:
    - id: sortingEnabled
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要啟用排序。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    - id: control
      type: System.Web.UI.Control
      description: "資料控制項擁有<xref href=&quot;System.Web.UI.WebControls.ButtonField&quot;> </xref>。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>表示控制項不需要重新繫結至資料。"
  overload: System.Web.UI.WebControls.ButtonField.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  id: InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  parent: System.Web.UI.WebControls.ButtonField
  langs:
  - csharp
  name: InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  nameWithType: ButtonField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  fullName: System.Web.UI.WebControls.ButtonField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "初始化指定<xref href=&quot;System.Web.UI.WebControls.DataControlFieldCell&quot;></xref>到指定的資料列狀態的物件。"
  remarks: "InitializeCell 方法會建立所指定的按鈕類型<xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A>屬性並將它加入<xref:System.Web.UI.Control.Controls%2A>集合<xref:System.Web.UI.WebControls.DataControlFieldCell>物件。</xref:System.Web.UI.WebControls.DataControlFieldCell> </xref:System.Web.UI.Control.Controls%2A> </xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> <xref:System.Web.UI.WebControls.Button.CommandArgument%2A>屬性<xref:System.Web.UI.WebControls.Button>控制設為  `rowIndex`。</xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.WebControls.Button.CommandArgument%2A>"
  syntax:
    content: public override void InitializeCell (System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlCellType cellType, System.Web.UI.WebControls.DataControlRowState rowState, int rowIndex);
    parameters:
    - id: cell
      type: System.Web.UI.WebControls.DataControlFieldCell
      description: "<xref href=&quot;System.Web.UI.WebControls.DataControlFieldCell&quot;> </xref>初始化。"
    - id: cellType
      type: System.Web.UI.WebControls.DataControlCellType
      description: "A <xref href=&quot;System.Web.UI.WebControls.DataControlCellType&quot;> </xref>值，指出資料列 （頁首、 頁尾或資料） 的類型。"
    - id: rowState
      type: System.Web.UI.WebControls.DataControlRowState
      description: "其中一個<xref href=&quot;System.Web.UI.WebControls.DataControlRowState&quot;></xref>值。"
    - id: rowIndex
      type: System.Int32
      description: "資料列的以零為起始的索引。"
  overload: System.Web.UI.WebControls.ButtonField.InitializeCell*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonField.Text
  id: Text
  parent: System.Web.UI.WebControls.ButtonField
  langs:
  - csharp
  name: Text
  nameWithType: ButtonField.Text
  fullName: System.Web.UI.WebControls.ButtonField.Text
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定顯示在每個按鈕的靜態標題<xref href=&quot;System.Web.UI.WebControls.ButtonField&quot;></xref>物件。"
  remarks: "當<xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A>屬性<xref:System.Web.UI.WebControls.ButtonField>物件設定為<xref:System.Web.UI.WebControls.ButtonType>或<xref:System.Web.UI.WebControls.ButtonType>使用顯示靜態文字標題在<xref:System.Web.UI.WebControls.ButtonField>.</xref:System.Web.UI.WebControls.ButtonField>按鈕的文字屬性的值</xref:System.Web.UI.WebControls.ButtonType></xref:System.Web.UI.WebControls.ButtonType></xref:System.Web.UI.WebControls.ButtonField></xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> 每個按鈕會共用相同的標題。       而不是使用文字屬性，以顯示靜態文字中的<xref:System.Web.UI.WebControls.ButtonField>物件，您可以使用<xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A>要繫結屬性<xref:System.Web.UI.WebControls.ButtonField>至資料來源中的欄位。</xref:System.Web.UI.WebControls.ButtonField> </xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A> </xref:System.Web.UI.WebControls.ButtonField> 欄位的值隨即顯示為按鈕的標題。      > [!NOTE] > 如果<xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A>和同時設定文字屬性，則<xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A>屬性會優先。</xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A> </xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A>       這個屬性的值會儲存檢視狀態中。       這個屬性的值設定時，可以自動儲存到資源檔使用設計工具。 如需詳細資訊，請參閱<xref:System.ComponentModel.LocalizableAttribute>和[全球化和當地語系化](~/add/includes/ajax-current-ext-md.md)。</xref:System.ComponentModel.LocalizableAttribute>"
  example:
  - "The following code example demonstrates how to use the Text property to specify the caption to display for each button in a <xref:System.Web.UI.WebControls.ButtonField> object.  \n  \n [!code-vb[ButtonField#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_489_1.aspx)]\n [!code-cs[ButtonField#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_489_1.aspx)]"
  syntax:
    content: public virtual string Text { get; set; }
    return:
      type: System.String
      description: "中的所有按鈕顯示的標題<xref href=&quot;System.Web.UI.WebControls.ButtonField&quot;> </xref>。 預設為空字串 (&quot;&quot;)。"
  overload: System.Web.UI.WebControls.ButtonField.Text*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonField.ValidateSupportsCallback
  id: ValidateSupportsCallback
  parent: System.Web.UI.WebControls.ButtonField
  langs:
  - csharp
  name: ValidateSupportsCallback()
  nameWithType: ButtonField.ValidateSupportsCallback()
  fullName: System.Web.UI.WebControls.ButtonField.ValidateSupportsCallback()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "決定控制項是否包含在<xref href=&quot;System.Web.UI.WebControls.ButtonField&quot;></xref>支援回呼的物件。"
  remarks: "ValidateSupportsCallback 方法是 helper 方法是用來判斷控制項是否包含在<xref:System.Web.UI.WebControls.ButtonField>物件支援回呼。</xref:System.Web.UI.WebControls.ButtonField> 這個方法會實作為空方法 （不包含任何程式碼的方法），表示支援回呼。      > [!NOTE] > ValidateSupportsCallback 方法主要由控制項開發人員使用。"
  syntax:
    content: public override void ValidateSupportsCallback ();
    parameters: []
  overload: System.Web.UI.WebControls.ButtonField.ValidateSupportsCallback*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.ButtonFieldBase
  isExternal: false
  name: System.Web.UI.WebControls.ButtonFieldBase
- uid: System.Web.UI.WebControls.ButtonField.#ctor
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: ButtonField()
  nameWithType: ButtonField.ButtonField()
  fullName: System.Web.UI.WebControls.ButtonField.ButtonField()
- uid: System.Web.UI.WebControls.ButtonField.CommandName
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: CommandName
  nameWithType: ButtonField.CommandName
  fullName: System.Web.UI.WebControls.ButtonField.CommandName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.ButtonField.CopyProperties(System.Web.UI.WebControls.DataControlField)
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: CopyProperties(DataControlField)
  nameWithType: ButtonField.CopyProperties(DataControlField)
  fullName: System.Web.UI.WebControls.ButtonField.CopyProperties(DataControlField)
- uid: System.Web.UI.WebControls.DataControlField
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlField
  nameWithType: DataControlField
  fullName: System.Web.UI.WebControls.DataControlField
- uid: System.Web.UI.WebControls.ButtonField.CreateField
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: CreateField()
  nameWithType: ButtonField.CreateField()
  fullName: System.Web.UI.WebControls.ButtonField.CreateField()
- uid: System.Web.UI.WebControls.ButtonField.DataTextField
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: DataTextField
  nameWithType: ButtonField.DataTextField
  fullName: System.Web.UI.WebControls.ButtonField.DataTextField
- uid: System.Web.UI.WebControls.ButtonField.DataTextFormatString
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: DataTextFormatString
  nameWithType: ButtonField.DataTextFormatString
  fullName: System.Web.UI.WebControls.ButtonField.DataTextFormatString
- uid: System.Web.UI.WebControls.ButtonField.FormatDataTextValue(System.Object)
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: FormatDataTextValue(Object)
  nameWithType: ButtonField.FormatDataTextValue(Object)
  fullName: System.Web.UI.WebControls.ButtonField.FormatDataTextValue(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.ButtonField.ImageUrl
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: ImageUrl
  nameWithType: ButtonField.ImageUrl
  fullName: System.Web.UI.WebControls.ButtonField.ImageUrl
- uid: System.Web.UI.WebControls.ButtonField.Initialize(System.Boolean,System.Web.UI.Control)
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: Initialize(Boolean,Control)
  nameWithType: ButtonField.Initialize(Boolean,Control)
  fullName: System.Web.UI.WebControls.ButtonField.Initialize(Boolean,Control)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.Control
  parent: System.Web.UI
  isExternal: false
  name: Control
  nameWithType: Control
  fullName: System.Web.UI.Control
- uid: System.Web.UI.WebControls.ButtonField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  nameWithType: ButtonField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  fullName: System.Web.UI.WebControls.ButtonField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
- uid: System.Web.UI.WebControls.DataControlFieldCell
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlFieldCell
  nameWithType: DataControlFieldCell
  fullName: System.Web.UI.WebControls.DataControlFieldCell
- uid: System.Web.UI.WebControls.DataControlCellType
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlCellType
  nameWithType: DataControlCellType
  fullName: System.Web.UI.WebControls.DataControlCellType
- uid: System.Web.UI.WebControls.DataControlRowState
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlRowState
  nameWithType: DataControlRowState
  fullName: System.Web.UI.WebControls.DataControlRowState
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.ButtonField.Text
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: Text
  nameWithType: ButtonField.Text
  fullName: System.Web.UI.WebControls.ButtonField.Text
- uid: System.Web.UI.WebControls.ButtonField.ValidateSupportsCallback
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: ValidateSupportsCallback()
  nameWithType: ButtonField.ValidateSupportsCallback()
  fullName: System.Web.UI.WebControls.ButtonField.ValidateSupportsCallback()
- uid: System.Web.UI.WebControls.ButtonField.#ctor*
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: ButtonField
  nameWithType: ButtonField.ButtonField
- uid: System.Web.UI.WebControls.ButtonField.CommandName*
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: CommandName
  nameWithType: ButtonField.CommandName
- uid: System.Web.UI.WebControls.ButtonField.CopyProperties*
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: CopyProperties
  nameWithType: ButtonField.CopyProperties
- uid: System.Web.UI.WebControls.ButtonField.CreateField*
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: CreateField
  nameWithType: ButtonField.CreateField
- uid: System.Web.UI.WebControls.ButtonField.DataTextField*
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: DataTextField
  nameWithType: ButtonField.DataTextField
- uid: System.Web.UI.WebControls.ButtonField.DataTextFormatString*
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: DataTextFormatString
  nameWithType: ButtonField.DataTextFormatString
- uid: System.Web.UI.WebControls.ButtonField.FormatDataTextValue*
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: FormatDataTextValue
  nameWithType: ButtonField.FormatDataTextValue
- uid: System.Web.UI.WebControls.ButtonField.ImageUrl*
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: ImageUrl
  nameWithType: ButtonField.ImageUrl
- uid: System.Web.UI.WebControls.ButtonField.Initialize*
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: Initialize
  nameWithType: ButtonField.Initialize
- uid: System.Web.UI.WebControls.ButtonField.InitializeCell*
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: InitializeCell
  nameWithType: ButtonField.InitializeCell
- uid: System.Web.UI.WebControls.ButtonField.Text*
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: Text
  nameWithType: ButtonField.Text
- uid: System.Web.UI.WebControls.ButtonField.ValidateSupportsCallback*
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: ValidateSupportsCallback
  nameWithType: ButtonField.ValidateSupportsCallback
