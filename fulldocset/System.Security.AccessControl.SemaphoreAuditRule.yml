### YamlMime:ManagedReference
items:
- uid: System.Security.AccessControl.SemaphoreAuditRule
  id: SemaphoreAuditRule
  children:
  - System.Security.AccessControl.SemaphoreAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AuditFlags)
  - System.Security.AccessControl.SemaphoreAuditRule.SemaphoreRights
  langs:
  - csharp
  name: SemaphoreAuditRule
  nameWithType: SemaphoreAuditRule
  fullName: System.Security.AccessControl.SemaphoreAuditRule
  type: Class
  summary: "代表一組要稽核使用者或群組存取權限。 這個類別無法被繼承。"
  remarks: "SemaphoreAuditRule 類別是一組.NET Framework 提供用於管理具名的系統號誌上的 Windows 存取控制安全性的類別。 如需這些類別和其基礎的 Windows 存取控制結構的關聯性的概觀，請參閱<xref:System.Security.AccessControl.SemaphoreSecurity>.</xref:System.Security.AccessControl.SemaphoreSecurity>      > [!NOTE] > Windows 存取控制安全性是有意義僅適用於具名系統號誌。 如果<xref:System.Threading.Semaphore>物件代表本機號誌，存取控制是不相關。</xref:System.Threading.Semaphore>       若要取得目前套用至具名號誌的稽核規則的清單，請使用<xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=fullName>方法來取得<xref:System.Security.AccessControl.SemaphoreSecurity>物件，然後再使用其<xref:System.Security.AccessControl.CommonObjectSecurity.GetAuditRules%2A>方法，以取得 SemaphoreAuditRule 物件的集合。</xref:System.Security.AccessControl.CommonObjectSecurity.GetAuditRules%2A> </xref:System.Security.AccessControl.SemaphoreSecurity> </xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=fullName>       SemaphoreAuditRule 物件不會將使用基礎的判別存取控制清單 (DACL) 中存取控制項目一對一。 當您可以使用集之所有稽核規則的號誌，該集合會包含目前表示所有存取控制項目所需的規則的最小數目。      > [!NOTE] > 基礎的存取控制項目變更為您套用和移除規則。 規則中的資訊可能的話，合併到維護最小的數字的存取控制項目。 因此，當讀取目前的規則清單時，它看起來可能不完全與您加入的所有規則的清單。       使用 SemaphoreAuditRule 物件來指定要稽核使用者或群組的存取權限。 若要將規則套用到具名的系統號誌，使用<xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=fullName>方法來取得<xref:System.Security.AccessControl.SemaphoreSecurity>物件。</xref:System.Security.AccessControl.SemaphoreSecurity> </xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=fullName> 修改<xref:System.Security.AccessControl.SemaphoreSecurity>物件使用其方法來新增規則，然後使用<xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=fullName>重新附加安全性物件的方法。</xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=fullName> </xref:System.Security.AccessControl.SemaphoreSecurity>      > [!IMPORTANT] > 作<xref:System.Security.AccessControl.SemaphoreSecurity>物件不會影響具名號誌的存取層級直到您呼叫<xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=fullName>方法，以將變更後的安全性物件指派給具名號誌。</xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=fullName> </xref:System.Security.AccessControl.SemaphoreSecurity>       SemaphoreAuditRule 物件是不可變的。 號誌的安全性會使用的方法進行修改<xref:System.Security.AccessControl.SemaphoreSecurity>類別來新增或移除規則; 當您這麼做時，會修改基礎的存取控制項目。</xref:System.Security.AccessControl.SemaphoreSecurity>      > [!NOTE] > Windows 98 或 Windows Millennium Edition 不支援同步處理物件的安全性。"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(false)]

      public sealed class SemaphoreAuditRule : System.Security.AccessControl.AuditRule
  inheritance:
  - System.Object
  - System.Security.AccessControl.AuthorizationRule
  - System.Security.AccessControl.AuditRule
  implements: []
  inheritedMembers:
  - System.Security.AccessControl.AuditRule.AuditFlags
  - System.Security.AccessControl.AuthorizationRule.AccessMask
  - System.Security.AccessControl.AuthorizationRule.IdentityReference
  - System.Security.AccessControl.AuthorizationRule.InheritanceFlags
  - System.Security.AccessControl.AuthorizationRule.IsInherited
  - System.Security.AccessControl.AuthorizationRule.PropagationFlags
  platform:
  - net462
- uid: System.Security.AccessControl.SemaphoreAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AuditFlags)
  id: '#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AuditFlags)'
  parent: System.Security.AccessControl.SemaphoreAuditRule
  langs:
  - csharp
  name: SemaphoreAuditRule(IdentityReference,SemaphoreRights,AuditFlags)
  nameWithType: SemaphoreAuditRule.SemaphoreAuditRule(IdentityReference,SemaphoreRights,AuditFlags)
  fullName: System.Security.AccessControl.SemaphoreAuditRule.SemaphoreAuditRule(IdentityReference,SemaphoreRights,AuditFlags)
  type: Constructor
  assemblies:
  - System
  namespace: System.Security.AccessControl
  summary: "初始化的新執行個體<xref href=&quot;System.Security.AccessControl.SemaphoreAuditRule&quot;></xref>類別，指定要稽核，若要稽核，權限的使用者或群組，以及是否要稽核成功、 失敗或兩者。"
  remarks: "若要建立<xref:System.Security.Principal.NTAccount>從代表使用者或群組名稱的字串物件，請使用<xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=fullName>建構函式。</xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=fullName> </xref:System.Security.Principal.NTAccount>"
  syntax:
    content: public SemaphoreAuditRule (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.SemaphoreRights eventRights, System.Security.AccessControl.AuditFlags flags);
    parameters:
    - id: identity
      type: System.Security.Principal.IdentityReference
      description: "使用者或群組要套用規則。 必須是型別<xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;></xref>或型別，例如<xref href=&quot;System.Security.Principal.NTAccount&quot;></xref>可以轉換為類型<xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref>。"
    - id: eventRights
      type: System.Security.AccessControl.SemaphoreRights
      description: "位元組合<xref href=&quot;System.Security.AccessControl.SemaphoreRights&quot;></xref>值，指定要稽核的存取種類。"
    - id: flags
      type: System.Security.AccessControl.AuditFlags
      description: "位元組合<xref href=&quot;System.Security.AccessControl.AuditFlags&quot;></xref>指定是否要稽核成功、 失敗或兩者的值。"
  overload: System.Security.AccessControl.SemaphoreAuditRule.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>eventRights</code>指定無效的值。       -或-<code>flags</code>指定無效的值。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>identity</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -或-<code>eventRights</code>為零。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>identity</code>既不是類型<xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;></xref>或型別，例如<xref href=&quot;System.Security.Principal.NTAccount&quot;></xref>可以轉換為類型<xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref>。"
  platform:
  - net462
- uid: System.Security.AccessControl.SemaphoreAuditRule.SemaphoreRights
  id: SemaphoreRights
  parent: System.Security.AccessControl.SemaphoreAuditRule
  langs:
  - csharp
  name: SemaphoreRights
  nameWithType: SemaphoreAuditRule.SemaphoreRights
  fullName: System.Security.AccessControl.SemaphoreAuditRule.SemaphoreRights
  type: Property
  assemblies:
  - System
  namespace: System.Security.AccessControl
  summary: "取得稽核規則影響的存取權限。"
  remarks: "<xref:System.Security.AccessControl.SemaphoreAuditRule>物件是不可變的。</xref:System.Security.AccessControl.SemaphoreAuditRule> 您可以建立新的稽核規則代表不同的使用者、 不同的權限或不同的組合<xref:System.Security.AccessControl.AuditFlags>值，但您無法修改現有的稽核規則。</xref:System.Security.AccessControl.AuditFlags>"
  syntax:
    content: public System.Security.AccessControl.SemaphoreRights SemaphoreRights { get; }
    return:
      type: System.Security.AccessControl.SemaphoreRights
      description: "位元組合<xref href=&quot;System.Security.AccessControl.SemaphoreRights&quot;></xref>值，表示受到稽核規則的權限。"
  overload: System.Security.AccessControl.SemaphoreAuditRule.SemaphoreRights*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.AccessControl.AuditRule
  isExternal: false
  name: System.Security.AccessControl.AuditRule
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Security.AccessControl.SemaphoreAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AuditFlags)
  parent: System.Security.AccessControl.SemaphoreAuditRule
  isExternal: false
  name: SemaphoreAuditRule(IdentityReference,SemaphoreRights,AuditFlags)
  nameWithType: SemaphoreAuditRule.SemaphoreAuditRule(IdentityReference,SemaphoreRights,AuditFlags)
  fullName: System.Security.AccessControl.SemaphoreAuditRule.SemaphoreAuditRule(IdentityReference,SemaphoreRights,AuditFlags)
- uid: System.Security.Principal.IdentityReference
  parent: System.Security.Principal
  isExternal: false
  name: IdentityReference
  nameWithType: IdentityReference
  fullName: System.Security.Principal.IdentityReference
- uid: System.Security.AccessControl.SemaphoreRights
  parent: System.Security.AccessControl
  isExternal: false
  name: SemaphoreRights
  nameWithType: SemaphoreRights
  fullName: System.Security.AccessControl.SemaphoreRights
- uid: System.Security.AccessControl.AuditFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: AuditFlags
  nameWithType: AuditFlags
  fullName: System.Security.AccessControl.AuditFlags
- uid: System.Security.AccessControl.SemaphoreAuditRule.SemaphoreRights
  parent: System.Security.AccessControl.SemaphoreAuditRule
  isExternal: false
  name: SemaphoreRights
  nameWithType: SemaphoreAuditRule.SemaphoreRights
  fullName: System.Security.AccessControl.SemaphoreAuditRule.SemaphoreRights
- uid: System.Security.AccessControl.SemaphoreAuditRule.#ctor*
  parent: System.Security.AccessControl.SemaphoreAuditRule
  isExternal: false
  name: SemaphoreAuditRule
  nameWithType: SemaphoreAuditRule.SemaphoreAuditRule
- uid: System.Security.AccessControl.SemaphoreAuditRule.SemaphoreRights*
  parent: System.Security.AccessControl.SemaphoreAuditRule
  isExternal: false
  name: SemaphoreRights
  nameWithType: SemaphoreAuditRule.SemaphoreRights
