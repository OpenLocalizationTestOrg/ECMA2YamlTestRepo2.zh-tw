### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.RSACng
  id: RSACng
  children:
  - System.Security.Cryptography.RSACng.#ctor
  - System.Security.Cryptography.RSACng.#ctor(System.Int32)
  - System.Security.Cryptography.RSACng.#ctor(System.Security.Cryptography.CngKey)
  - System.Security.Cryptography.RSACng.Decrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)
  - System.Security.Cryptography.RSACng.DecryptValue(System.Byte[])
  - System.Security.Cryptography.RSACng.Dispose(System.Boolean)
  - System.Security.Cryptography.RSACng.Encrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)
  - System.Security.Cryptography.RSACng.EncryptValue(System.Byte[])
  - System.Security.Cryptography.RSACng.ExportParameters(System.Boolean)
  - System.Security.Cryptography.RSACng.HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)
  - System.Security.Cryptography.RSACng.HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)
  - System.Security.Cryptography.RSACng.ImportParameters(System.Security.Cryptography.RSAParameters)
  - System.Security.Cryptography.RSACng.Key
  - System.Security.Cryptography.RSACng.KeyExchangeAlgorithm
  - System.Security.Cryptography.RSACng.SignatureAlgorithm
  - System.Security.Cryptography.RSACng.SignHash(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  - System.Security.Cryptography.RSACng.VerifyHash(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  langs:
  - csharp
  name: RSACng
  nameWithType: RSACng
  fullName: System.Security.Cryptography.RSACng
  type: Class
  summary: "提供 RSA 演算法的 Cryptography Next Generation (CNG) 實作。"
  remarks: "RSACng 類別衍生自<xref:System.Security.Cryptography.RSA>類別。</xref:System.Security.Cryptography.RSA> 因此，它不是<xref:System.Security.Cryptography.RSACryptoServiceProvider>.</xref:System.Security.Cryptography.RSACryptoServiceProvider>掉落取代現有的用途       RSACng 使用程式設計模型，類似於<xref:System.Security.Cryptography.ECDsaCng>類別，而不是<xref:System.Security.Cryptography.RSACryptoServiceProvider>類別。</xref:System.Security.Cryptography.RSACryptoServiceProvider> </xref:System.Security.Cryptography.ECDsaCng> 例如:-RSACng 所使用的金鑰由個別管理<xref:System.Security.Cryptography.CngKey>物件。</xref:System.Security.Cryptography.CngKey> 相反地，<xref:System.Security.Cryptography.RSACryptoServiceProvider>有直接繫結至的作業類型本身的索引鍵。</xref:System.Security.Cryptography.RSACryptoServiceProvider>      -RSACng 執行做為簽署和驗證簽章，就像使用 RSACng 物件屬性，這類作業<xref:System.Security.Cryptography.ECDsaCng>會使用它的物件屬性，以控制簽署和驗證作業。</xref:System.Security.Cryptography.ECDsaCng>"
  syntax:
    content: 'public sealed class RSACng : System.Security.Cryptography.RSA'
  inheritance:
  - System.Object
  - System.Security.Cryptography.AsymmetricAlgorithm
  - System.Security.Cryptography.RSA
  implements: []
  inheritedMembers:
  - System.Security.Cryptography.AsymmetricAlgorithm.Clear
  - System.Security.Cryptography.AsymmetricAlgorithm.Dispose
  - System.Security.Cryptography.AsymmetricAlgorithm.KeySize
  - System.Security.Cryptography.AsymmetricAlgorithm.KeySizeValue
  - System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes
  - System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizesValue
  - System.Security.Cryptography.RSA.Create
  - System.Security.Cryptography.RSA.Create(System.String)
  - System.Security.Cryptography.RSA.FromXmlString(System.String)
  - System.Security.Cryptography.RSA.SignData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  - System.Security.Cryptography.RSA.SignData(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  - System.Security.Cryptography.RSA.SignData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  - System.Security.Cryptography.RSA.ToXmlString(System.Boolean)
  - System.Security.Cryptography.RSA.VerifyData(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  - System.Security.Cryptography.RSA.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  - System.Security.Cryptography.RSA.VerifyData(System.IO.Stream,System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  platform:
  - net462
- uid: System.Security.Cryptography.RSACng.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.RSACng
  langs:
  - csharp
  name: RSACng()
  nameWithType: RSACng.RSACng()
  fullName: System.Security.Cryptography.RSACng.RSACng()
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "初始化的新執行個體<xref href=&quot;System.Security.Cryptography.RSACng&quot;></xref>使用隨機 2048 位元金鑰組的類別。"
  syntax:
    content: public RSACng ();
    parameters: []
  overload: System.Security.Cryptography.RSACng.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RSACng.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Security.Cryptography.RSACng
  langs:
  - csharp
  name: RSACng(Int32)
  nameWithType: RSACng.RSACng(Int32)
  fullName: System.Security.Cryptography.RSACng.RSACng(Int32)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "初始化的新執行個體<xref href=&quot;System.Security.Cryptography.RSACng&quot;></xref>類別具有隨機產生的索引鍵指定的大小。"
  remarks: "有效金鑰大小範圍從 384 到 16384 位元，以 8 為增量單位。 我們建議的 2048 位元的大小下限，用於所有索引鍵。"
  syntax:
    content: public RSACng (int keySize);
    parameters:
    - id: keySize
      type: System.Int32
      description: "要產生以位元的金鑰大小。"
  overload: System.Security.Cryptography.RSACng.#ctor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "<code>keySize</code>不正確。"
  platform:
  - net462
- uid: System.Security.Cryptography.RSACng.#ctor(System.Security.Cryptography.CngKey)
  id: '#ctor(System.Security.Cryptography.CngKey)'
  parent: System.Security.Cryptography.RSACng
  langs:
  - csharp
  name: RSACng(CngKey)
  nameWithType: RSACng.RSACng(CngKey)
  fullName: System.Security.Cryptography.RSACng.RSACng(CngKey)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "初始化的新執行個體<xref href=&quot;System.Security.Cryptography.RSACng&quot;></xref>具有指定之索引鍵類別。"
  remarks: "<xref:System.Security.Cryptography.CngKey.AlgorithmGroup%2A?displayProperty=fullName>的`key`必須<xref:System.Security.Cryptography.CngAlgorithmGroup.Rsa%2A?displayProperty=fullName>.</xref:System.Security.Cryptography.CngAlgorithmGroup.Rsa%2A?displayProperty=fullName> </xref:System.Security.Cryptography.CngKey.AlgorithmGroup%2A?displayProperty=fullName>       這個建構函式會建立金鑰的副本。 即使`key`已處置，RSA 在此索引鍵物件的複本會保持運作。"
  syntax:
    content: public RSACng (System.Security.Cryptography.CngKey key);
    parameters:
    - id: key
      type: System.Security.Cryptography.CngKey
      description: "RSA 作業所用的機碼。"
  overload: System.Security.Cryptography.RSACng.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>key</code>不是有效的 RSA 金鑰。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>key</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.RSACng.Decrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)
  id: Decrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)
  parent: System.Security.Cryptography.RSACng
  langs:
  - csharp
  name: Decrypt(Byte[],RSAEncryptionPadding)
  nameWithType: RSACng.Decrypt(Byte[],RSAEncryptionPadding)
  fullName: System.Security.Cryptography.RSACng.Decrypt(Byte[],RSAEncryptionPadding)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "解密輸入資料，使用指定的填補模式。"
  syntax:
    content: public override byte[] Decrypt (byte[] data, System.Security.Cryptography.RSAEncryptionPadding padding);
    parameters:
    - id: data
      type: System.Byte[]
      description: "要解密的資料。"
    - id: padding
      type: System.Security.Cryptography.RSAEncryptionPadding
      description: "填補模式。"
    return:
      type: System.Byte[]
      description: "解密的資料。"
  overload: System.Security.Cryptography.RSACng.Decrypt*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>data</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>padding</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "<code>padding</code>不等於&lt;xref:System.Security.Cryptography.RSAEncryptionPadding.Pkcs1%2A?displayProperty=fullName&gt;，或者<xref:System.Security.Cryptography.RSAEncryptionPadding.Mode*>的<code>padding</code>不等於<xref href=&quot;System.Security.Cryptography.RSAEncryptionPaddingMode&quot;> </xref>。"
  platform:
  - net462
- uid: System.Security.Cryptography.RSACng.DecryptValue(System.Byte[])
  id: DecryptValue(System.Byte[])
  parent: System.Security.Cryptography.RSACng
  langs:
  - csharp
  name: DecryptValue(Byte[])
  nameWithType: RSACng.DecryptValue(Byte[])
  fullName: System.Security.Cryptography.RSACng.DecryptValue(Byte[])
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "解密輸入的資料使用的私密金鑰。"
  syntax:
    content: public override byte[] DecryptValue (byte[] rgb);
    parameters:
    - id: rgb
      type: System.Byte[]
      description: "要解密加密文字。"
    return:
      type: System.Byte[]
      description: "產生的解密<code> rgb </code>以純文字的參數。"
  overload: System.Security.Cryptography.RSACng.DecryptValue*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "不支援這個方法呼叫。"
  platform:
  - net462
- uid: System.Security.Cryptography.RSACng.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Security.Cryptography.RSACng
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: RSACng.Dispose(Boolean)
  fullName: System.Security.Cryptography.RSACng.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "即將加入。"
  overload: System.Security.Cryptography.RSACng.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RSACng.Encrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)
  id: Encrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)
  parent: System.Security.Cryptography.RSACng
  langs:
  - csharp
  name: Encrypt(Byte[],RSAEncryptionPadding)
  nameWithType: RSACng.Encrypt(Byte[],RSAEncryptionPadding)
  fullName: System.Security.Cryptography.RSACng.Encrypt(Byte[],RSAEncryptionPadding)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "加密的輸入的資料，使用指定的填補。"
  syntax:
    content: public override byte[] Encrypt (byte[] data, System.Security.Cryptography.RSAEncryptionPadding padding);
    parameters:
    - id: data
      type: System.Byte[]
      description: "要加密的資料。"
    - id: padding
      type: System.Security.Cryptography.RSAEncryptionPadding
      description: "填補模式。"
    return:
      type: System.Byte[]
      description: "傳回<xref:System.Byte>.</xref:System.Byte>"
  overload: System.Security.Cryptography.RSACng.Encrypt*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>data</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>padding</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "<code>padding</code>不等於&lt;xref:System.Security.Cryptography.RSASignaturePadding.Pkcs1%2A?displayProperty=fullName&gt;或&lt;xref:System.Security.Cryptography.RSASignaturePadding.Pss%2A?displayProperty=fullName&gt;。"
  platform:
  - net462
- uid: System.Security.Cryptography.RSACng.EncryptValue(System.Byte[])
  id: EncryptValue(System.Byte[])
  parent: System.Security.Cryptography.RSACng
  langs:
  - csharp
  name: EncryptValue(Byte[])
  nameWithType: RSACng.EncryptValue(Byte[])
  fullName: System.Security.Cryptography.RSACng.EncryptValue(Byte[])
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "加密使用公開金鑰的輸入的資料。"
  syntax:
    content: public override byte[] EncryptValue (byte[] rgb);
    parameters:
    - id: rgb
      type: System.Byte[]
      description: "要加密的純文字。"
    return:
      type: System.Byte[]
      description: "產生的加密<code> rgb </code>參數做為加密文字。"
  overload: System.Security.Cryptography.RSACng.EncryptValue*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "不支援這個方法呼叫。"
  platform:
  - net462
- uid: System.Security.Cryptography.RSACng.ExportParameters(System.Boolean)
  id: ExportParameters(System.Boolean)
  parent: System.Security.Cryptography.RSACng
  langs:
  - csharp
  name: ExportParameters(Boolean)
  nameWithType: RSACng.ExportParameters(Boolean)
  fullName: System.Security.Cryptography.RSACng.ExportParameters(Boolean)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "將 RSA 物件所使用的金鑰匯出<xref href=&quot;System.Security.Cryptography.RSAParameters&quot;></xref>物件。"
  syntax:
    content: public override System.Security.Cryptography.RSAParameters ExportParameters (bool includePrivateParameters);
    parameters:
    - id: includePrivateParameters
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要包含私用參數;否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.Security.Cryptography.RSAParameters
      description: "RSA 物件所使用的金鑰。"
  overload: System.Security.Cryptography.RSACng.ExportParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RSACng.HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)
  id: HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)
  parent: System.Security.Cryptography.RSACng
  langs:
  - csharp
  name: HashData(Stream,HashAlgorithmName)
  nameWithType: RSACng.HashData(Stream,HashAlgorithmName)
  fullName: System.Security.Cryptography.RSACng.HashData(Stream,HashAlgorithmName)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  syntax:
    content: protected override byte[] HashData (System.IO.Stream data, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);
    parameters:
    - id: data
      type: System.IO.Stream
      description: "即將加入。"
    - id: hashAlgorithm
      type: System.Security.Cryptography.HashAlgorithmName
      description: "即將加入。"
    return:
      type: System.Byte[]
      description: "即將加入。"
  overload: System.Security.Cryptography.RSACng.HashData*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RSACng.HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)
  id: HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)
  parent: System.Security.Cryptography.RSACng
  langs:
  - csharp
  name: HashData(Byte[],Int32,Int32,HashAlgorithmName)
  nameWithType: RSACng.HashData(Byte[],Int32,Int32,HashAlgorithmName)
  fullName: System.Security.Cryptography.RSACng.HashData(Byte[],Int32,Int32,HashAlgorithmName)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  syntax:
    content: protected override byte[] HashData (byte[] data, int offset, int count, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);
    parameters:
    - id: data
      type: System.Byte[]
      description: "即將加入。"
    - id: offset
      type: System.Int32
      description: "即將加入。"
    - id: count
      type: System.Int32
      description: "即將加入。"
    - id: hashAlgorithm
      type: System.Security.Cryptography.HashAlgorithmName
      description: "即將加入。"
    return:
      type: System.Byte[]
      description: "即將加入。"
  overload: System.Security.Cryptography.RSACng.HashData*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RSACng.ImportParameters(System.Security.Cryptography.RSAParameters)
  id: ImportParameters(System.Security.Cryptography.RSAParameters)
  parent: System.Security.Cryptography.RSACng
  langs:
  - csharp
  name: ImportParameters(RSAParameters)
  nameWithType: RSACng.ImportParameters(RSAParameters)
  fullName: System.Security.Cryptography.RSACng.ImportParameters(RSAParameters)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "取代目前的執行個體正在使用建立新的現有金鑰<xref href=&quot;System.Security.Cryptography.CngKey&quot;></xref>參數結構。"
  remarks: "如果`parameters`只有指數和模數，僅包含公開金鑰是匯入。 如果`parameters`也包含完整的索引鍵組會匯入 P 和 Q 值。"
  syntax:
    content: public override void ImportParameters (System.Security.Cryptography.RSAParameters parameters);
    parameters:
    - id: parameters
      type: System.Security.Cryptography.RSAParameters
      description: "RSA 參數。"
  overload: System.Security.Cryptography.RSACng.ImportParameters*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>parameters</code>指數和模數都不包含。"
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "<code>parameters</code>不是有效的 RSA 金鑰。       -或-<code>parameters</code>是完整金鑰組和預設 KSP。"
  platform:
  - net462
- uid: System.Security.Cryptography.RSACng.Key
  id: Key
  parent: System.Security.Cryptography.RSACng
  langs:
  - csharp
  name: Key
  nameWithType: RSACng.Key
  fullName: System.Security.Cryptography.RSACng.Key
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "取得將使用的索引鍵<xref href=&quot;System.Security.Cryptography.RSACng&quot;></xref>它會執行任何密碼編譯作業的物件。"
  remarks: "傳回<xref:System.Security.Cryptography.CngKey>物件已處置，如果索引鍵重設，例如藉由變更<xref:System.Security.Cryptography.CngKey.KeySize%2A?displayProperty=fullName>屬性，使用<xref:System.Security.Cryptography.RSA.ImportParameters%2A?displayProperty=fullName>來建立新的金鑰，或透過處置的父代<xref:System.Security.Cryptography.RSA>物件。</xref:System.Security.Cryptography.RSA> </xref:System.Security.Cryptography.RSA.ImportParameters%2A?displayProperty=fullName> </xref:System.Security.Cryptography.CngKey.KeySize%2A?displayProperty=fullName> </xref:System.Security.Cryptography.CngKey> 因此，您應該確定在這些情況下，不會再使用索引鍵物件。       這<xref:System.Security.Cryptography.CngKey>物件不是相同<xref:System.Security.Cryptography.CngKey>物件傳遞至<xref:System.Security.Cryptography.RSACng.%23ctor%2A>建構函式，如果已使用該建構函式。</xref:System.Security.Cryptography.RSACng.%23ctor%2A> </xref:System.Security.Cryptography.CngKey> </xref:System.Security.Cryptography.CngKey> 不過，它會指向相同的 CNG 金鑰。"
  syntax:
    content: public System.Security.Cryptography.CngKey Key { get; }
    return:
      type: System.Security.Cryptography.CngKey
      description: "所使用的金鑰<xref href=&quot;System.Security.Cryptography.RSACng&quot;></xref>物件。"
  overload: System.Security.Cryptography.RSACng.Key*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RSACng.KeyExchangeAlgorithm
  id: KeyExchangeAlgorithm
  parent: System.Security.Cryptography.RSACng
  langs:
  - csharp
  name: KeyExchangeAlgorithm
  nameWithType: RSACng.KeyExchangeAlgorithm
  fullName: System.Security.Cryptography.RSACng.KeyExchangeAlgorithm
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "取得與這個實作的 RSA 金鑰交換演算法使用的名稱。"
  syntax:
    content: public override string KeyExchangeAlgorithm { get; }
    return:
      type: System.String
      description: "傳回&quot;RSA&quot;。"
  overload: System.Security.Cryptography.RSACng.KeyExchangeAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RSACng.SignatureAlgorithm
  id: SignatureAlgorithm
  parent: System.Security.Cryptography.RSACng
  langs:
  - csharp
  name: SignatureAlgorithm
  nameWithType: RSACng.SignatureAlgorithm
  fullName: System.Security.Cryptography.RSACng.SignatureAlgorithm
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "取得與這個實作的 RSA 簽章演算法使用的名稱。"
  syntax:
    content: public override string SignatureAlgorithm { get; }
    return:
      type: System.String
      description: "傳回&quot;RSA&quot;。"
  overload: System.Security.Cryptography.RSACng.SignatureAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RSACng.SignHash(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  id: SignHash(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  parent: System.Security.Cryptography.RSACng
  langs:
  - csharp
  name: SignHash(Byte[],HashAlgorithmName,RSASignaturePadding)
  nameWithType: RSACng.SignHash(Byte[],HashAlgorithmName,RSASignaturePadding)
  fullName: System.Security.Cryptography.RSACng.SignHash(Byte[],HashAlgorithmName,RSASignaturePadding)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "符號已由使用指定的雜湊演算法和填補模式雜湊的資料。"
  syntax:
    content: public override byte[] SignHash (byte[] hash, System.Security.Cryptography.HashAlgorithmName hashAlgorithm, System.Security.Cryptography.RSASignaturePadding padding);
    parameters:
    - id: hash
      type: System.Byte[]
      description: "要簽署雜湊。"
    - id: hashAlgorithm
      type: System.Security.Cryptography.HashAlgorithmName
      description: "雜湊演算法名稱。"
    - id: padding
      type: System.Security.Cryptography.RSASignaturePadding
      description: "填補模式。"
    return:
      type: System.Byte[]
      description: "帶正負號的資料。"
  overload: System.Security.Cryptography.RSACng.SignHash*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>hash</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>padding</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "值&lt;xref:System.Security.Cryptography.HashAlgorithmName.Name%2A?displayProperty=fullName&gt;屬性<code> hashAlgorithm </code>是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>或&lt;xref:System.String.Empty?displayProperty=fullName&gt;。"
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "<code>padding</code>不等於&lt;xref:System.Security.Cryptography.RSASignaturePadding.Pkcs1%2A?displayProperty=fullName&gt;或&lt;xref:System.Security.Cryptography.RSASignaturePadding.Pss%2A?displayProperty=fullName&gt;。"
  platform:
  - net462
- uid: System.Security.Cryptography.RSACng.VerifyHash(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  id: VerifyHash(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  parent: System.Security.Cryptography.RSACng
  langs:
  - csharp
  name: VerifyHash(Byte[],Byte[],HashAlgorithmName,RSASignaturePadding)
  nameWithType: RSACng.VerifyHash(Byte[],Byte[],HashAlgorithmName,RSASignaturePadding)
  fullName: System.Security.Cryptography.RSACng.VerifyHash(Byte[],Byte[],HashAlgorithmName,RSASignaturePadding)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "驗證已簽署且已使用指定的演算法和填補模式雜湊處理的資料。"
  syntax:
    content: public override bool VerifyHash (byte[] hash, byte[] signature, System.Security.Cryptography.HashAlgorithmName hashAlgorithm, System.Security.Cryptography.RSASignaturePadding padding);
    parameters:
    - id: hash
      type: System.Byte[]
      description: "要驗證的雜湊。"
    - id: signature
      type: System.Byte[]
      description: "資料的簽章。"
    - id: hashAlgorithm
      type: System.Security.Cryptography.HashAlgorithmName
      description: "雜湊演算法名稱。"
    - id: padding
      type: System.Security.Cryptography.RSASignaturePadding
      description: "填補模式。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果簽章驗證無誤，雜湊。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Security.Cryptography.RSACng.VerifyHash*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>hash</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>signature</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>padding</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "值&lt;xref:System.Security.Cryptography.HashAlgorithmName.Name%2A?displayProperty=fullName&gt;屬性<code> hashAlgorithm </code>是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>或&lt;xref:System.String.Empty?displayProperty=fullName&gt;。"
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "<code>padding</code>不等於&lt;xref:System.Security.Cryptography.RSASignaturePadding.Pkcs1%2A?displayProperty=fullName&gt;或&lt;xref:System.Security.Cryptography.RSASignaturePadding.Pss%2A?displayProperty=fullName&gt;。       -或者-簽章的格式不正確。 (在[!INCLUDE[net_v46](~/add/includes/net-v46-md.md)]和 4.6.1 只有; 從[!INCLUDE[net_v462](~/add/includes/net-v462-md.md)]，方法會傳回<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>如果簽章的格式不正確。"
  platform:
  - net462
references:
- uid: System.Security.Cryptography.RSA
  isExternal: false
  name: System.Security.Cryptography.RSA
- uid: System.Security.Cryptography.CryptographicException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Security.Cryptography.RSACng.#ctor
  parent: System.Security.Cryptography.RSACng
  isExternal: false
  name: RSACng()
  nameWithType: RSACng.RSACng()
  fullName: System.Security.Cryptography.RSACng.RSACng()
- uid: System.Security.Cryptography.RSACng.#ctor(System.Int32)
  parent: System.Security.Cryptography.RSACng
  isExternal: false
  name: RSACng(Int32)
  nameWithType: RSACng.RSACng(Int32)
  fullName: System.Security.Cryptography.RSACng.RSACng(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.RSACng.#ctor(System.Security.Cryptography.CngKey)
  parent: System.Security.Cryptography.RSACng
  isExternal: false
  name: RSACng(CngKey)
  nameWithType: RSACng.RSACng(CngKey)
  fullName: System.Security.Cryptography.RSACng.RSACng(CngKey)
- uid: System.Security.Cryptography.CngKey
  parent: System.Security.Cryptography
  isExternal: false
  name: CngKey
  nameWithType: CngKey
  fullName: System.Security.Cryptography.CngKey
- uid: System.Security.Cryptography.RSACng.Decrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)
  parent: System.Security.Cryptography.RSACng
  isExternal: false
  name: Decrypt(Byte[],RSAEncryptionPadding)
  nameWithType: RSACng.Decrypt(Byte[],RSAEncryptionPadding)
  fullName: System.Security.Cryptography.RSACng.Decrypt(Byte[],RSAEncryptionPadding)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.RSAEncryptionPadding
  parent: System.Security.Cryptography
  isExternal: false
  name: RSAEncryptionPadding
  nameWithType: RSAEncryptionPadding
  fullName: System.Security.Cryptography.RSAEncryptionPadding
- uid: System.Security.Cryptography.RSACng.DecryptValue(System.Byte[])
  parent: System.Security.Cryptography.RSACng
  isExternal: false
  name: DecryptValue(Byte[])
  nameWithType: RSACng.DecryptValue(Byte[])
  fullName: System.Security.Cryptography.RSACng.DecryptValue(Byte[])
- uid: System.Security.Cryptography.RSACng.Dispose(System.Boolean)
  parent: System.Security.Cryptography.RSACng
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: RSACng.Dispose(Boolean)
  fullName: System.Security.Cryptography.RSACng.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.RSACng.Encrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)
  parent: System.Security.Cryptography.RSACng
  isExternal: false
  name: Encrypt(Byte[],RSAEncryptionPadding)
  nameWithType: RSACng.Encrypt(Byte[],RSAEncryptionPadding)
  fullName: System.Security.Cryptography.RSACng.Encrypt(Byte[],RSAEncryptionPadding)
- uid: System.Security.Cryptography.RSACng.EncryptValue(System.Byte[])
  parent: System.Security.Cryptography.RSACng
  isExternal: false
  name: EncryptValue(Byte[])
  nameWithType: RSACng.EncryptValue(Byte[])
  fullName: System.Security.Cryptography.RSACng.EncryptValue(Byte[])
- uid: System.Security.Cryptography.RSACng.ExportParameters(System.Boolean)
  parent: System.Security.Cryptography.RSACng
  isExternal: false
  name: ExportParameters(Boolean)
  nameWithType: RSACng.ExportParameters(Boolean)
  fullName: System.Security.Cryptography.RSACng.ExportParameters(Boolean)
- uid: System.Security.Cryptography.RSAParameters
  parent: System.Security.Cryptography
  isExternal: false
  name: RSAParameters
  nameWithType: RSAParameters
  fullName: System.Security.Cryptography.RSAParameters
- uid: System.Security.Cryptography.RSACng.HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)
  parent: System.Security.Cryptography.RSACng
  isExternal: false
  name: HashData(Stream,HashAlgorithmName)
  nameWithType: RSACng.HashData(Stream,HashAlgorithmName)
  fullName: System.Security.Cryptography.RSACng.HashData(Stream,HashAlgorithmName)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Security.Cryptography.HashAlgorithmName
  parent: System.Security.Cryptography
  isExternal: false
  name: HashAlgorithmName
  nameWithType: HashAlgorithmName
  fullName: System.Security.Cryptography.HashAlgorithmName
- uid: System.Security.Cryptography.RSACng.HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)
  parent: System.Security.Cryptography.RSACng
  isExternal: false
  name: HashData(Byte[],Int32,Int32,HashAlgorithmName)
  nameWithType: RSACng.HashData(Byte[],Int32,Int32,HashAlgorithmName)
  fullName: System.Security.Cryptography.RSACng.HashData(Byte[],Int32,Int32,HashAlgorithmName)
- uid: System.Security.Cryptography.RSACng.ImportParameters(System.Security.Cryptography.RSAParameters)
  parent: System.Security.Cryptography.RSACng
  isExternal: false
  name: ImportParameters(RSAParameters)
  nameWithType: RSACng.ImportParameters(RSAParameters)
  fullName: System.Security.Cryptography.RSACng.ImportParameters(RSAParameters)
- uid: System.Security.Cryptography.RSACng.Key
  parent: System.Security.Cryptography.RSACng
  isExternal: false
  name: Key
  nameWithType: RSACng.Key
  fullName: System.Security.Cryptography.RSACng.Key
- uid: System.Security.Cryptography.RSACng.KeyExchangeAlgorithm
  parent: System.Security.Cryptography.RSACng
  isExternal: false
  name: KeyExchangeAlgorithm
  nameWithType: RSACng.KeyExchangeAlgorithm
  fullName: System.Security.Cryptography.RSACng.KeyExchangeAlgorithm
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.RSACng.SignatureAlgorithm
  parent: System.Security.Cryptography.RSACng
  isExternal: false
  name: SignatureAlgorithm
  nameWithType: RSACng.SignatureAlgorithm
  fullName: System.Security.Cryptography.RSACng.SignatureAlgorithm
- uid: System.Security.Cryptography.RSACng.SignHash(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  parent: System.Security.Cryptography.RSACng
  isExternal: false
  name: SignHash(Byte[],HashAlgorithmName,RSASignaturePadding)
  nameWithType: RSACng.SignHash(Byte[],HashAlgorithmName,RSASignaturePadding)
  fullName: System.Security.Cryptography.RSACng.SignHash(Byte[],HashAlgorithmName,RSASignaturePadding)
- uid: System.Security.Cryptography.RSASignaturePadding
  parent: System.Security.Cryptography
  isExternal: false
  name: RSASignaturePadding
  nameWithType: RSASignaturePadding
  fullName: System.Security.Cryptography.RSASignaturePadding
- uid: System.Security.Cryptography.RSACng.VerifyHash(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  parent: System.Security.Cryptography.RSACng
  isExternal: false
  name: VerifyHash(Byte[],Byte[],HashAlgorithmName,RSASignaturePadding)
  nameWithType: RSACng.VerifyHash(Byte[],Byte[],HashAlgorithmName,RSASignaturePadding)
  fullName: System.Security.Cryptography.RSACng.VerifyHash(Byte[],Byte[],HashAlgorithmName,RSASignaturePadding)
- uid: System.Security.Cryptography.RSACng.#ctor*
  parent: System.Security.Cryptography.RSACng
  isExternal: false
  name: RSACng
  nameWithType: RSACng.RSACng
- uid: System.Security.Cryptography.RSACng.Decrypt*
  parent: System.Security.Cryptography.RSACng
  isExternal: false
  name: Decrypt
  nameWithType: RSACng.Decrypt
- uid: System.Security.Cryptography.RSACng.DecryptValue*
  parent: System.Security.Cryptography.RSACng
  isExternal: false
  name: DecryptValue
  nameWithType: RSACng.DecryptValue
- uid: System.Security.Cryptography.RSACng.Dispose*
  parent: System.Security.Cryptography.RSACng
  isExternal: false
  name: Dispose
  nameWithType: RSACng.Dispose
- uid: System.Security.Cryptography.RSACng.Encrypt*
  parent: System.Security.Cryptography.RSACng
  isExternal: false
  name: Encrypt
  nameWithType: RSACng.Encrypt
- uid: System.Security.Cryptography.RSACng.EncryptValue*
  parent: System.Security.Cryptography.RSACng
  isExternal: false
  name: EncryptValue
  nameWithType: RSACng.EncryptValue
- uid: System.Security.Cryptography.RSACng.ExportParameters*
  parent: System.Security.Cryptography.RSACng
  isExternal: false
  name: ExportParameters
  nameWithType: RSACng.ExportParameters
- uid: System.Security.Cryptography.RSACng.HashData*
  parent: System.Security.Cryptography.RSACng
  isExternal: false
  name: HashData
  nameWithType: RSACng.HashData
- uid: System.Security.Cryptography.RSACng.ImportParameters*
  parent: System.Security.Cryptography.RSACng
  isExternal: false
  name: ImportParameters
  nameWithType: RSACng.ImportParameters
- uid: System.Security.Cryptography.RSACng.Key*
  parent: System.Security.Cryptography.RSACng
  isExternal: false
  name: Key
  nameWithType: RSACng.Key
- uid: System.Security.Cryptography.RSACng.KeyExchangeAlgorithm*
  parent: System.Security.Cryptography.RSACng
  isExternal: false
  name: KeyExchangeAlgorithm
  nameWithType: RSACng.KeyExchangeAlgorithm
- uid: System.Security.Cryptography.RSACng.SignatureAlgorithm*
  parent: System.Security.Cryptography.RSACng
  isExternal: false
  name: SignatureAlgorithm
  nameWithType: RSACng.SignatureAlgorithm
- uid: System.Security.Cryptography.RSACng.SignHash*
  parent: System.Security.Cryptography.RSACng
  isExternal: false
  name: SignHash
  nameWithType: RSACng.SignHash
- uid: System.Security.Cryptography.RSACng.VerifyHash*
  parent: System.Security.Cryptography.RSACng
  isExternal: false
  name: VerifyHash
  nameWithType: RSACng.VerifyHash
