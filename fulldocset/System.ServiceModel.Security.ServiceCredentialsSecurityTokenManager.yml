### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager
  id: ServiceCredentialsSecurityTokenManager
  children:
  - System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.#ctor(System.ServiceModel.Description.ServiceCredentials)
  - System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecureConversationTokenAuthenticator(System.ServiceModel.Security.Tokens.RecipientServiceModelSecurityTokenRequirement,System.Boolean,System.IdentityModel.Selectors.SecurityTokenResolver@)
  - System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenAuthenticator(System.IdentityModel.Selectors.SecurityTokenRequirement,System.IdentityModel.Selectors.SecurityTokenResolver@)
  - System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenProvider(System.IdentityModel.Selectors.SecurityTokenRequirement)
  - System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenSerializer(System.IdentityModel.Selectors.SecurityTokenVersion)
  - System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.GetIdentityOfSelf(System.IdentityModel.Selectors.SecurityTokenRequirement)
  - System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.IsIssuedSecurityTokenRequirement(System.IdentityModel.Selectors.SecurityTokenRequirement)
  - System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.ServiceCredentials
  langs:
  - csharp
  name: ServiceCredentialsSecurityTokenManager
  nameWithType: ServiceCredentialsSecurityTokenManager
  fullName: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager
  type: Class
  summary: "代表<xref href=&quot;System.IdentityModel.Selectors.SecurityTokenManager&quot;></xref>實作，提供安全性權杖序列化程式根據<xref href=&quot;System.ServiceModel.Description.ServiceCredentials&quot;></xref>服務上所設定。"
  remarks: "這個類別會建立執行個體的<xref:System.IdentityModel.Selectors.SecurityTokenSerializer>類別。</xref:System.IdentityModel.Selectors.SecurityTokenSerializer> 沒有此類別的每個服務通道接聽程式的一個執行個體。"
  example:
  - "The following code shows how to override this class to create a customized Service Credentials Token Manager.  \n  \n [!code-vb[c_CustomCredentials#5](~/add/codesnippet/visualbasic/t-system.servicemodel.se_12_1.vb)]\n [!code-cs[c_CustomCredentials#5](~/add/codesnippet/csharp/t-system.servicemodel.se_12_1.cs)]"
  syntax:
    content: 'public class ServiceCredentialsSecurityTokenManager : System.IdentityModel.Selectors.SecurityTokenManager, System.ServiceModel.Security.IEndpointIdentityProvider'
  inheritance:
  - System.Object
  - System.IdentityModel.Selectors.SecurityTokenManager
  implements:
  - System.ServiceModel.Security.IEndpointIdentityProvider
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.#ctor(System.ServiceModel.Description.ServiceCredentials)
  id: '#ctor(System.ServiceModel.Description.ServiceCredentials)'
  parent: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager
  langs:
  - csharp
  name: ServiceCredentialsSecurityTokenManager(ServiceCredentials)
  nameWithType: ServiceCredentialsSecurityTokenManager.ServiceCredentialsSecurityTokenManager(ServiceCredentials)
  fullName: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.ServiceCredentialsSecurityTokenManager(ServiceCredentials)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "初始化的新執行個體<xref href=&quot;System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager&quot;></xref>類別，根據<xref href=&quot;System.ServiceModel.Description.ServiceCredentials&quot;></xref>傳入。"
  syntax:
    content: public ServiceCredentialsSecurityTokenManager (System.ServiceModel.Description.ServiceCredentials parent);
    parameters:
    - id: parent
      type: System.ServiceModel.Description.ServiceCredentials
      description: "服務認證。"
  overload: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecureConversationTokenAuthenticator(System.ServiceModel.Security.Tokens.RecipientServiceModelSecurityTokenRequirement,System.Boolean,System.IdentityModel.Selectors.SecurityTokenResolver@)
  id: CreateSecureConversationTokenAuthenticator(System.ServiceModel.Security.Tokens.RecipientServiceModelSecurityTokenRequirement,System.Boolean,System.IdentityModel.Selectors.SecurityTokenResolver@)
  parent: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager
  langs:
  - csharp
  name: CreateSecureConversationTokenAuthenticator(RecipientServiceModelSecurityTokenRequirement,Boolean,SecurityTokenResolver)
  nameWithType: ServiceCredentialsSecurityTokenManager.CreateSecureConversationTokenAuthenticator(RecipientServiceModelSecurityTokenRequirement,Boolean,SecurityTokenResolver)
  fullName: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecureConversationTokenAuthenticator(RecipientServiceModelSecurityTokenRequirement,Boolean,SecurityTokenResolver)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "建立安全對話權杖驗證器為基礎的屬性需求傳入。"
  syntax:
    content: protected System.IdentityModel.Selectors.SecurityTokenAuthenticator CreateSecureConversationTokenAuthenticator (System.ServiceModel.Security.Tokens.RecipientServiceModelSecurityTokenRequirement recipientRequirement, bool preserveBootstrapTokens, out System.IdentityModel.Selectors.SecurityTokenResolver sctResolver);
    parameters:
    - id: recipientRequirement
      type: System.ServiceModel.Security.Tokens.RecipientServiceModelSecurityTokenRequirement
      description: "表示接聽程式的特定安全性屬性需求。"
    - id: preserveBootstrapTokens
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果應該保留的啟動程序的語彙基元。否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    - id: sctResolver
      type: System.IdentityModel.Selectors.SecurityTokenResolver
      description: "安全性權杖解析程式物件，可擷取安全性權杖或金鑰時，您有金鑰識別碼或金鑰識別碼子句。"
    return:
      type: System.IdentityModel.Selectors.SecurityTokenAuthenticator
      description: "安全性權杖驗證器。"
  overload: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecureConversationTokenAuthenticator*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenAuthenticator(System.IdentityModel.Selectors.SecurityTokenRequirement,System.IdentityModel.Selectors.SecurityTokenResolver@)
  id: CreateSecurityTokenAuthenticator(System.IdentityModel.Selectors.SecurityTokenRequirement,System.IdentityModel.Selectors.SecurityTokenResolver@)
  parent: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager
  langs:
  - csharp
  name: CreateSecurityTokenAuthenticator(SecurityTokenRequirement,SecurityTokenResolver)
  nameWithType: ServiceCredentialsSecurityTokenManager.CreateSecurityTokenAuthenticator(SecurityTokenRequirement,SecurityTokenResolver)
  fullName: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenAuthenticator(SecurityTokenRequirement,SecurityTokenResolver)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "建立的安全性權杖驗證器根據<xref href=&quot;System.IdentityModel.Selectors.SecurityTokenRequirement&quot;> </xref>。"
  remarks: "`outOfBand`語彙基元解析程式可以選擇性地傳回方法，由[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]解析處理安全性時，權杖的 SOAP 訊息安全性處理器。 <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator>，由這個方法會驗證權杖，並擷取宣告。</xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator> 一個<xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator>建立的每個類別衍生自<xref:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement>.</xref:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement> </xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator>"
  example:
  - "The following code is an example of how to override this method.  \n  \n [!code-cs[c_CustomTokenAuthenticator#2](~/add/codesnippet/csharp/b70d167c-ca6e-4160-bfdd-_1.cs)]\n [!code-vb[c_CustomTokenAuthenticator#2](~/add/codesnippet/visualbasic/b70d167c-ca6e-4160-bfdd-_1.vb)]"
  syntax:
    content: public override System.IdentityModel.Selectors.SecurityTokenAuthenticator CreateSecurityTokenAuthenticator (System.IdentityModel.Selectors.SecurityTokenRequirement tokenRequirement, out System.IdentityModel.Selectors.SecurityTokenResolver outOfBandTokenResolver);
    parameters:
    - id: tokenRequirement
      type: System.IdentityModel.Selectors.SecurityTokenRequirement
      description: "安全性權杖的需求。"
    - id: outOfBandTokenResolver
      type: System.IdentityModel.Selectors.SecurityTokenResolver
      description: "這個方法傳回時，包含<xref href=&quot;System.IdentityModel.Selectors.SecurityTokenResolver&quot;> </xref>。 這個參數未初始化便傳遞。"
    return:
      type: System.IdentityModel.Selectors.SecurityTokenAuthenticator
      description: "安全性權杖驗證器。"
  overload: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenAuthenticator*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>tokenRequirement</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "無法建立安全性權杖驗證器<code>  tokenRequirement </code>傳入。"
  platform:
  - net462
- uid: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenProvider(System.IdentityModel.Selectors.SecurityTokenRequirement)
  id: CreateSecurityTokenProvider(System.IdentityModel.Selectors.SecurityTokenRequirement)
  parent: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager
  langs:
  - csharp
  name: CreateSecurityTokenProvider(SecurityTokenRequirement)
  nameWithType: ServiceCredentialsSecurityTokenManager.CreateSecurityTokenProvider(SecurityTokenRequirement)
  fullName: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenProvider(SecurityTokenRequirement)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "建立的安全性權杖提供者根據<xref href=&quot;System.IdentityModel.Selectors.SecurityTokenRequirement&quot;> </xref>。"
  remarks: "<xref:System.IdentityModel.Selectors.SecurityTokenProvider>類別會負責取得指定的<xref:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement>。</xref:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement>語彙基元</xref:System.IdentityModel.Selectors.SecurityTokenProvider> （選擇性） 權杖提供者可以支援更新和取消權杖以及。 權杖提供者可以快取權杖，如果它被設定為執行這項操作。"
  example:
  - "The following code shows how to override this method.  \n  \n [!code-vb[ClientCredentialsSecurityTokenManager#4](~/add/codesnippet/visualbasic/399fa5ca-8ab5-4dd6-bfe8-_1.vb)]\n [!code-cs[ClientCredentialsSecurityTokenManager#4](~/add/codesnippet/csharp/399fa5ca-8ab5-4dd6-bfe8-_1.cs)]"
  syntax:
    content: public override System.IdentityModel.Selectors.SecurityTokenProvider CreateSecurityTokenProvider (System.IdentityModel.Selectors.SecurityTokenRequirement requirement);
    parameters:
    - id: requirement
      type: System.IdentityModel.Selectors.SecurityTokenRequirement
      description: "安全性權杖的需求。"
    return:
      type: System.IdentityModel.Selectors.SecurityTokenProvider
      description: "安全性權杖提供者。"
  overload: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenProvider*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>requirement</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "無法建立安全性權杖提供者<code> requirement </code>傳入。"
  platform:
  - net462
- uid: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenSerializer(System.IdentityModel.Selectors.SecurityTokenVersion)
  id: CreateSecurityTokenSerializer(System.IdentityModel.Selectors.SecurityTokenVersion)
  parent: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager
  langs:
  - csharp
  name: CreateSecurityTokenSerializer(SecurityTokenVersion)
  nameWithType: ServiceCredentialsSecurityTokenManager.CreateSecurityTokenSerializer(SecurityTokenVersion)
  fullName: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenSerializer(SecurityTokenVersion)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "建立的安全性權杖序列化程式會根據傳入的安全性權杖版本。"
  remarks: "<xref:System.IdentityModel.Selectors.SecurityTokenSerializer>用於寫入和讀取安全性權杖與安全性權杖參照。</xref:System.IdentityModel.Selectors.SecurityTokenSerializer> 還原序列化時 XML 的權杖，則傳回的權杖必須能夠執行密碼編譯作業。 權杖序列化程式必須能夠執行充足的驗證，確保權杖可以執行密碼編譯作業 （Kerberos 票證處理、 X.509 解碼、 SAML 解碼，等等），但應該將驗證器應用程式信任決策延後。"
  syntax:
    content: public override System.IdentityModel.Selectors.SecurityTokenSerializer CreateSecurityTokenSerializer (System.IdentityModel.Selectors.SecurityTokenVersion version);
    parameters:
    - id: version
      type: System.IdentityModel.Selectors.SecurityTokenVersion
      description: "安全性權杖的版本。"
    return:
      type: System.IdentityModel.Selectors.SecurityTokenSerializer
      description: "安全性權杖序列化程式。"
  overload: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenSerializer*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "無法建立安全性權杖序列化程式<code> version </code>傳入。"
  platform:
  - net462
- uid: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.GetIdentityOfSelf(System.IdentityModel.Selectors.SecurityTokenRequirement)
  id: GetIdentityOfSelf(System.IdentityModel.Selectors.SecurityTokenRequirement)
  parent: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager
  langs:
  - csharp
  name: GetIdentityOfSelf(SecurityTokenRequirement)
  nameWithType: ServiceCredentialsSecurityTokenManager.GetIdentityOfSelf(SecurityTokenRequirement)
  fullName: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.GetIdentityOfSelf(SecurityTokenRequirement)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "取得<xref:System.ServiceModel.EndpointIdentity>根據安全性權杖需求。</xref:System.ServiceModel.EndpointIdentity>"
  remarks: "這個方法會呼叫[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]基礎結構，以取得<xref:System.ServiceModel.EndpointIdentity>對應至服務端點。</xref:System.ServiceModel.EndpointIdentity>"
  syntax:
    content: public virtual System.ServiceModel.EndpointIdentity GetIdentityOfSelf (System.IdentityModel.Selectors.SecurityTokenRequirement tokenRequirement);
    parameters:
    - id: tokenRequirement
      type: System.IdentityModel.Selectors.SecurityTokenRequirement
      description: "安全性權杖的需求。"
    return:
      type: System.ServiceModel.EndpointIdentity
      description: "對應至的端點身分識別<code> tokenRequirement </code>。 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果無法建立身分識別從傳回<code> tokenRequirement </code>。"
  overload: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.GetIdentityOfSelf*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>tokenRequirement</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.IsIssuedSecurityTokenRequirement(System.IdentityModel.Selectors.SecurityTokenRequirement)
  id: IsIssuedSecurityTokenRequirement(System.IdentityModel.Selectors.SecurityTokenRequirement)
  parent: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager
  langs:
  - csharp
  name: IsIssuedSecurityTokenRequirement(SecurityTokenRequirement)
  nameWithType: ServiceCredentialsSecurityTokenManager.IsIssuedSecurityTokenRequirement(SecurityTokenRequirement)
  fullName: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.IsIssuedSecurityTokenRequirement(SecurityTokenRequirement)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "判定安全性權杖需求是否針對已核發的權杖。"
  syntax:
    content: protected bool IsIssuedSecurityTokenRequirement (System.IdentityModel.Selectors.SecurityTokenRequirement requirement);
    parameters:
    - id: requirement
      type: System.IdentityModel.Selectors.SecurityTokenRequirement
      description: "安全性權杖的需求。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果安全性權杖需求是有關已發行的權杖。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.IsIssuedSecurityTokenRequirement*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.ServiceCredentials
  id: ServiceCredentials
  parent: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager
  langs:
  - csharp
  name: ServiceCredentials
  nameWithType: ServiceCredentialsSecurityTokenManager.ServiceCredentials
  fullName: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.ServiceCredentials
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "取得用來建構這個類別的這個執行個體的服務認證。"
  remarks: "<xref:System.ServiceModel.Description.ServiceCredentials>物件可讓您設定服務認證，以及服務認證驗證設定。</xref:System.ServiceModel.Description.ServiceCredentials>"
  syntax:
    content: public System.ServiceModel.Description.ServiceCredentials ServiceCredentials { get; }
    return:
      type: System.ServiceModel.Description.ServiceCredentials
      description: "服務認證。"
  overload: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.ServiceCredentials*
  exceptions: []
  platform:
  - net462
references:
- uid: System.IdentityModel.Selectors.SecurityTokenManager
  isExternal: false
  name: System.IdentityModel.Selectors.SecurityTokenManager
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.#ctor(System.ServiceModel.Description.ServiceCredentials)
  parent: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager
  isExternal: false
  name: ServiceCredentialsSecurityTokenManager(ServiceCredentials)
  nameWithType: ServiceCredentialsSecurityTokenManager.ServiceCredentialsSecurityTokenManager(ServiceCredentials)
  fullName: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.ServiceCredentialsSecurityTokenManager(ServiceCredentials)
- uid: System.ServiceModel.Description.ServiceCredentials
  parent: System.ServiceModel.Description
  isExternal: false
  name: ServiceCredentials
  nameWithType: ServiceCredentials
  fullName: System.ServiceModel.Description.ServiceCredentials
- uid: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecureConversationTokenAuthenticator(System.ServiceModel.Security.Tokens.RecipientServiceModelSecurityTokenRequirement,System.Boolean,System.IdentityModel.Selectors.SecurityTokenResolver@)
  parent: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager
  isExternal: false
  name: CreateSecureConversationTokenAuthenticator(RecipientServiceModelSecurityTokenRequirement,Boolean,SecurityTokenResolver)
  nameWithType: ServiceCredentialsSecurityTokenManager.CreateSecureConversationTokenAuthenticator(RecipientServiceModelSecurityTokenRequirement,Boolean,SecurityTokenResolver)
  fullName: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecureConversationTokenAuthenticator(RecipientServiceModelSecurityTokenRequirement,Boolean,SecurityTokenResolver)
- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: SecurityTokenAuthenticator
  nameWithType: SecurityTokenAuthenticator
  fullName: System.IdentityModel.Selectors.SecurityTokenAuthenticator
- uid: System.ServiceModel.Security.Tokens.RecipientServiceModelSecurityTokenRequirement
  parent: System.ServiceModel.Security.Tokens
  isExternal: false
  name: RecipientServiceModelSecurityTokenRequirement
  nameWithType: RecipientServiceModelSecurityTokenRequirement
  fullName: System.ServiceModel.Security.Tokens.RecipientServiceModelSecurityTokenRequirement
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.Selectors.SecurityTokenResolver
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: SecurityTokenResolver
  nameWithType: SecurityTokenResolver
  fullName: System.IdentityModel.Selectors.SecurityTokenResolver
- uid: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenAuthenticator(System.IdentityModel.Selectors.SecurityTokenRequirement,System.IdentityModel.Selectors.SecurityTokenResolver@)
  parent: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager
  isExternal: false
  name: CreateSecurityTokenAuthenticator(SecurityTokenRequirement,SecurityTokenResolver)
  nameWithType: ServiceCredentialsSecurityTokenManager.CreateSecurityTokenAuthenticator(SecurityTokenRequirement,SecurityTokenResolver)
  fullName: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenAuthenticator(SecurityTokenRequirement,SecurityTokenResolver)
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: SecurityTokenRequirement
  nameWithType: SecurityTokenRequirement
  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement
- uid: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenProvider(System.IdentityModel.Selectors.SecurityTokenRequirement)
  parent: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager
  isExternal: false
  name: CreateSecurityTokenProvider(SecurityTokenRequirement)
  nameWithType: ServiceCredentialsSecurityTokenManager.CreateSecurityTokenProvider(SecurityTokenRequirement)
  fullName: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenProvider(SecurityTokenRequirement)
- uid: System.IdentityModel.Selectors.SecurityTokenProvider
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: SecurityTokenProvider
  nameWithType: SecurityTokenProvider
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider
- uid: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenSerializer(System.IdentityModel.Selectors.SecurityTokenVersion)
  parent: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager
  isExternal: false
  name: CreateSecurityTokenSerializer(SecurityTokenVersion)
  nameWithType: ServiceCredentialsSecurityTokenManager.CreateSecurityTokenSerializer(SecurityTokenVersion)
  fullName: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenSerializer(SecurityTokenVersion)
- uid: System.IdentityModel.Selectors.SecurityTokenSerializer
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: SecurityTokenSerializer
  nameWithType: SecurityTokenSerializer
  fullName: System.IdentityModel.Selectors.SecurityTokenSerializer
- uid: System.IdentityModel.Selectors.SecurityTokenVersion
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: SecurityTokenVersion
  nameWithType: SecurityTokenVersion
  fullName: System.IdentityModel.Selectors.SecurityTokenVersion
- uid: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.GetIdentityOfSelf(System.IdentityModel.Selectors.SecurityTokenRequirement)
  parent: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager
  isExternal: false
  name: GetIdentityOfSelf(SecurityTokenRequirement)
  nameWithType: ServiceCredentialsSecurityTokenManager.GetIdentityOfSelf(SecurityTokenRequirement)
  fullName: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.GetIdentityOfSelf(SecurityTokenRequirement)
- uid: System.ServiceModel.EndpointIdentity
  parent: System.ServiceModel
  isExternal: true
  name: EndpointIdentity
  nameWithType: EndpointIdentity
  fullName: System.ServiceModel.EndpointIdentity
- uid: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.IsIssuedSecurityTokenRequirement(System.IdentityModel.Selectors.SecurityTokenRequirement)
  parent: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager
  isExternal: false
  name: IsIssuedSecurityTokenRequirement(SecurityTokenRequirement)
  nameWithType: ServiceCredentialsSecurityTokenManager.IsIssuedSecurityTokenRequirement(SecurityTokenRequirement)
  fullName: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.IsIssuedSecurityTokenRequirement(SecurityTokenRequirement)
- uid: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.ServiceCredentials
  parent: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager
  isExternal: false
  name: ServiceCredentials
  nameWithType: ServiceCredentialsSecurityTokenManager.ServiceCredentials
  fullName: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.ServiceCredentials
- uid: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.#ctor*
  parent: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager
  isExternal: false
  name: ServiceCredentialsSecurityTokenManager
  nameWithType: ServiceCredentialsSecurityTokenManager.ServiceCredentialsSecurityTokenManager
- uid: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecureConversationTokenAuthenticator*
  parent: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager
  isExternal: false
  name: CreateSecureConversationTokenAuthenticator
  nameWithType: ServiceCredentialsSecurityTokenManager.CreateSecureConversationTokenAuthenticator
- uid: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenAuthenticator*
  parent: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager
  isExternal: false
  name: CreateSecurityTokenAuthenticator
  nameWithType: ServiceCredentialsSecurityTokenManager.CreateSecurityTokenAuthenticator
- uid: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenProvider*
  parent: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager
  isExternal: false
  name: CreateSecurityTokenProvider
  nameWithType: ServiceCredentialsSecurityTokenManager.CreateSecurityTokenProvider
- uid: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenSerializer*
  parent: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager
  isExternal: false
  name: CreateSecurityTokenSerializer
  nameWithType: ServiceCredentialsSecurityTokenManager.CreateSecurityTokenSerializer
- uid: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.GetIdentityOfSelf*
  parent: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager
  isExternal: false
  name: GetIdentityOfSelf
  nameWithType: ServiceCredentialsSecurityTokenManager.GetIdentityOfSelf
- uid: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.IsIssuedSecurityTokenRequirement*
  parent: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager
  isExternal: false
  name: IsIssuedSecurityTokenRequirement
  nameWithType: ServiceCredentialsSecurityTokenManager.IsIssuedSecurityTokenRequirement
- uid: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.ServiceCredentials*
  parent: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager
  isExternal: false
  name: ServiceCredentials
  nameWithType: ServiceCredentialsSecurityTokenManager.ServiceCredentials
