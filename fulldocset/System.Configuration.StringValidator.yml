### YamlMime:ManagedReference
items:
- uid: System.Configuration.StringValidator
  id: StringValidator
  children:
  - System.Configuration.StringValidator.#ctor(System.Int32)
  - System.Configuration.StringValidator.#ctor(System.Int32,System.Int32)
  - System.Configuration.StringValidator.#ctor(System.Int32,System.Int32,System.String)
  - System.Configuration.StringValidator.CanValidate(System.Type)
  - System.Configuration.StringValidator.Validate(System.Object)
  langs:
  - csharp
  name: StringValidator
  nameWithType: StringValidator
  fullName: System.Configuration.StringValidator
  type: Class
  summary: "提供字串的驗證。"
  remarks: "StringValidator 類別用來確保字串符合特定準則。 建立 StringValidator 類別的執行個體時，會建立驗證準則。 有三個建構函式多載 StringValidator 類別。 <xref:System.Configuration.StringValidator.%23ctor%28System.Int32%29?displayProperty=fullName>具有一個參數的建構函式會驗證正在驗證的字串可接受之最小長度。</xref:System.Configuration.StringValidator.%23ctor%28System.Int32%29?displayProperty=fullName> <xref:System.Configuration.StringValidator.%23ctor%28System.Int32%2CSystem.Int32%29?displayProperty=fullName>具有兩個參數的建構函式可確保，正在驗證的字串符合最小值和最大長度。</xref:System.Configuration.StringValidator.%23ctor%28System.Int32%2CSystem.Int32%29?displayProperty=fullName> <xref:System.Configuration.StringValidator.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.String%29?displayProperty=fullName>三個參數的建構函式會檢查最小值和最大長度值，正在驗證，以及是否要驗證的字串中出現特定字元的字串。</xref:System.Configuration.StringValidator.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.String%29?displayProperty=fullName>       <xref:System.Configuration.StringValidator.CanValidate%2A>方法會判斷要驗證的物件型別是否符合預期的類型。</xref:System.Configuration.StringValidator.CanValidate%2A> 正在驗證的物件會傳遞做為參數的<xref:System.Configuration.StringValidator.Validate%2A>方法。</xref:System.Configuration.StringValidator.Validate%2A>"
  example:
  - "The following example demonstrates how to use the StringValidator type.  \n  \n [!code-cs[System.Configuration.StringValidator#1](~/add/codesnippet/csharp/t-system.configuration.s_0_1.cs)]\n [!code-vb[System.Configuration.StringValidator#1](~/add/codesnippet/visualbasic/t-system.configuration.s_0_1.vb)]"
  syntax:
    content: 'public class StringValidator : System.Configuration.ConfigurationValidatorBase'
  inheritance:
  - System.Object
  - System.Configuration.ConfigurationValidatorBase
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Configuration.StringValidator.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Configuration.StringValidator
  langs:
  - csharp
  name: StringValidator(Int32)
  nameWithType: StringValidator.StringValidator(Int32)
  fullName: System.Configuration.StringValidator.StringValidator(Int32)
  type: Constructor
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "初始化的新執行個體<xref href=&quot;System.Configuration.StringValidator&quot;></xref>類別，根據提供的參數。"
  remarks: "StringValidator 建構函式會驗證正在驗證的字串可接受之最小長度。"
  syntax:
    content: public StringValidator (int minLength);
    parameters:
    - id: minLength
      type: System.Int32
      description: "指定的字串值的最小長度的整數。"
  overload: System.Configuration.StringValidator.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.StringValidator.#ctor(System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32)'
  parent: System.Configuration.StringValidator
  langs:
  - csharp
  name: StringValidator(Int32,Int32)
  nameWithType: StringValidator.StringValidator(Int32,Int32)
  fullName: System.Configuration.StringValidator.StringValidator(Int32,Int32)
  type: Constructor
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "初始化的新執行個體<xref href=&quot;System.Configuration.StringValidator&quot;></xref>類別，根據提供的參數。"
  remarks: "這個 StringValidator 建構函式可確保，正在驗證的字串符合最小值和最大長度。"
  syntax:
    content: public StringValidator (int minLength, int maxLength);
    parameters:
    - id: minLength
      type: System.Int32
      description: "指定的字串值的最小長度的整數。"
    - id: maxLength
      type: System.Int32
      description: "指定的字串值的最大長度的整數。"
  overload: System.Configuration.StringValidator.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.StringValidator.#ctor(System.Int32,System.Int32,System.String)
  id: '#ctor(System.Int32,System.Int32,System.String)'
  parent: System.Configuration.StringValidator
  langs:
  - csharp
  name: StringValidator(Int32,Int32,String)
  nameWithType: StringValidator.StringValidator(Int32,Int32,String)
  fullName: System.Configuration.StringValidator.StringValidator(Int32,Int32,String)
  type: Constructor
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "初始化的新執行個體<xref href=&quot;System.Configuration.StringValidator&quot;></xref>類別，根據提供的參數。"
  remarks: "要驗證的字串符合最小值和最大長度，和也可確保特定的字元會排除在字串中，可確保這個 StringValidator 建構函式。"
  example:
  - "The following example demonstrates how to use this StringValidator constructor. This code example is part of a larger example provided for the <xref:System.Configuration.StringValidator> class.  \n  \n [!code-cs[System.Configuration.StringValidator#2](~/add/codesnippet/csharp/53dd41c3-e827-4f95-a9a0-_1.cs)]\n [!code-vb[System.Configuration.StringValidator#2](~/add/codesnippet/visualbasic/53dd41c3-e827-4f95-a9a0-_1.vb)]"
  syntax:
    content: public StringValidator (int minLength, int maxLength, string invalidCharacters);
    parameters:
    - id: minLength
      type: System.Int32
      description: "指定的字串值的最小長度的整數。"
    - id: maxLength
      type: System.Int32
      description: "指定的字串值的最大長度的整數。"
    - id: invalidCharacters
      type: System.String
      description: "表示無效的字元字串。"
  overload: System.Configuration.StringValidator.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.StringValidator.CanValidate(System.Type)
  id: CanValidate(System.Type)
  parent: System.Configuration.StringValidator
  langs:
  - csharp
  name: CanValidate(Type)
  nameWithType: StringValidator.CanValidate(Type)
  fullName: System.Configuration.StringValidator.CanValidate(Type)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "判斷是否可以根據類型驗證物件。"
  remarks: ''
  example:
  - "The following example demonstrates how to use the CanValidate method. This code example is part of a larger example provided for the <xref:System.Configuration.StringValidator> class.  \n  \n [!code-cs[System.Configuration.StringValidator#3](~/add/codesnippet/csharp/m-system.configuration.s_7_1.cs)]\n [!code-vb[System.Configuration.StringValidator#3](~/add/codesnippet/visualbasic/m-system.configuration.s_7_1.vb)]"
  syntax:
    content: public override bool CanValidate (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "物件類型。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<code> type </code>參數符合的字串，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Configuration.StringValidator.CanValidate*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.StringValidator.Validate(System.Object)
  id: Validate(System.Object)
  parent: System.Configuration.StringValidator
  langs:
  - csharp
  name: Validate(Object)
  nameWithType: StringValidator.Validate(Object)
  fullName: System.Configuration.StringValidator.Validate(Object)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "判斷物件的值是否有效。"
  remarks: "<xref:System.Configuration.StringValidator>類別包含需要驗證的字串物件的準則。</xref:System.Configuration.StringValidator> 執行個體時，會建立準則<xref:System.Configuration.StringValidator>類別建立。</xref:System.Configuration.StringValidator> 要驗證的物件會傳遞做為驗證方法的參數。"
  example:
  - "The following example demonstrates how to use the Validate method. This code example is part of a larger example provided for the <xref:System.Configuration.StringValidator> class.  \n  \n [!code-cs[System.Configuration.StringValidator#4](~/add/codesnippet/csharp/m-system.configuration.s_1_1.cs)]\n [!code-vb[System.Configuration.StringValidator#4](~/add/codesnippet/visualbasic/m-system.configuration.s_1_1.vb)]"
  syntax:
    content: public override void Validate (object value);
    parameters:
    - id: value
      type: System.Object
      description: "物件值。"
  overload: System.Configuration.StringValidator.Validate*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>value</code> is less than <code>minValue</code> or greater than <code>maxValue</code> as defined in the constructor.  \n  \n \\- or -  \n  \n <code>value</code> contains invalid characters."
  platform:
  - net462
references:
- uid: System.Configuration.ConfigurationValidatorBase
  isExternal: false
  name: System.Configuration.ConfigurationValidatorBase
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Configuration.StringValidator.#ctor(System.Int32)
  parent: System.Configuration.StringValidator
  isExternal: false
  name: StringValidator(Int32)
  nameWithType: StringValidator.StringValidator(Int32)
  fullName: System.Configuration.StringValidator.StringValidator(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Configuration.StringValidator.#ctor(System.Int32,System.Int32)
  parent: System.Configuration.StringValidator
  isExternal: false
  name: StringValidator(Int32,Int32)
  nameWithType: StringValidator.StringValidator(Int32,Int32)
  fullName: System.Configuration.StringValidator.StringValidator(Int32,Int32)
- uid: System.Configuration.StringValidator.#ctor(System.Int32,System.Int32,System.String)
  parent: System.Configuration.StringValidator
  isExternal: false
  name: StringValidator(Int32,Int32,String)
  nameWithType: StringValidator.StringValidator(Int32,Int32,String)
  fullName: System.Configuration.StringValidator.StringValidator(Int32,Int32,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Configuration.StringValidator.CanValidate(System.Type)
  parent: System.Configuration.StringValidator
  isExternal: false
  name: CanValidate(Type)
  nameWithType: StringValidator.CanValidate(Type)
  fullName: System.Configuration.StringValidator.CanValidate(Type)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Configuration.StringValidator.Validate(System.Object)
  parent: System.Configuration.StringValidator
  isExternal: false
  name: Validate(Object)
  nameWithType: StringValidator.Validate(Object)
  fullName: System.Configuration.StringValidator.Validate(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Configuration.StringValidator.#ctor*
  parent: System.Configuration.StringValidator
  isExternal: false
  name: StringValidator
  nameWithType: StringValidator.StringValidator
- uid: System.Configuration.StringValidator.CanValidate*
  parent: System.Configuration.StringValidator
  isExternal: false
  name: CanValidate
  nameWithType: StringValidator.CanValidate
- uid: System.Configuration.StringValidator.Validate*
  parent: System.Configuration.StringValidator
  isExternal: false
  name: Validate
  nameWithType: StringValidator.Validate
