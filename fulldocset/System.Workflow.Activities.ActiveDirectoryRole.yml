### YamlMime:ManagedReference
items:
- uid: System.Workflow.Activities.ActiveDirectoryRole
  id: ActiveDirectoryRole
  children:
  - System.Workflow.Activities.ActiveDirectoryRole.GetAllReports
  - System.Workflow.Activities.ActiveDirectoryRole.GetDirectReports
  - System.Workflow.Activities.ActiveDirectoryRole.GetEntries
  - System.Workflow.Activities.ActiveDirectoryRole.GetIdentities
  - System.Workflow.Activities.ActiveDirectoryRole.GetManager
  - System.Workflow.Activities.ActiveDirectoryRole.GetManagerialChain
  - System.Workflow.Activities.ActiveDirectoryRole.GetPeers
  - System.Workflow.Activities.ActiveDirectoryRole.GetSecurityIdentifiers
  - System.Workflow.Activities.ActiveDirectoryRole.IncludesIdentity(System.String)
  - System.Workflow.Activities.ActiveDirectoryRole.Name
  - System.Workflow.Activities.ActiveDirectoryRole.RootEntry
  - System.Workflow.Activities.ActiveDirectoryRole.System#IDisposable#Dispose
  - System.Workflow.Activities.ActiveDirectoryRole.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  langs:
  - csharp
  name: ActiveDirectoryRole
  nameWithType: ActiveDirectoryRole
  fullName: System.Workflow.Activities.ActiveDirectoryRole
  type: Class
  summary: "代表 Windows Workflow Foundation 主控環境中的 Active Directory 角色。 這個類別無法被繼承。"
  remarks: "> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]一般來說，Active Directory 存放區用來儲存人員的組織資訊。 ActiveDirectoryRole 的主要用途是針對商業用途這類組織資訊的查詢。       Active Directory 角色通常會對應到工作函式、 標題或工作技能組織的內容中。"
  syntax:
    content: >-
      [System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")]

      public sealed class ActiveDirectoryRole : System.Workflow.Activities.WorkflowRole, IDisposable, System.Runtime.Serialization.ISerializable
  inheritance:
  - System.Object
  - System.Workflow.Activities.WorkflowRole
  implements:
  - System.IDisposable
  - System.Runtime.Serialization.ISerializable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Workflow.Activities.ActiveDirectoryRole.GetAllReports
  id: GetAllReports
  parent: System.Workflow.Activities.ActiveDirectoryRole
  langs:
  - csharp
  name: GetAllReports()
  nameWithType: ActiveDirectoryRole.GetAllReports()
  fullName: System.Workflow.Activities.ActiveDirectoryRole.GetAllReports()
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "傳回<xref href=&quot;System.Workflow.Activities.ActiveDirectoryRole&quot;> </xref> ，其中包含直接或間接報告給目前角色的所有角色。"
  remarks: "GetAllReports 傳回目前的節點下的所有節點。 使用<xref:System.Workflow.Activities.ActiveDirectoryRole.GetDirectReports%2A>，傳回目前節點正下方的節點。</xref:System.Workflow.Activities.ActiveDirectoryRole.GetDirectReports%2A>"
  syntax:
    content: public System.Workflow.Activities.ActiveDirectoryRole GetAllReports ();
    parameters: []
    return:
      type: System.Workflow.Activities.ActiveDirectoryRole
      description: "A <xref href=&quot;System.Workflow.Activities.ActiveDirectoryRole&quot;> </xref> ，其中包含直接或間接報告給目前角色的所有角色。"
  overload: System.Workflow.Activities.ActiveDirectoryRole.GetAllReports*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ActiveDirectoryRole.GetDirectReports
  id: GetDirectReports
  parent: System.Workflow.Activities.ActiveDirectoryRole
  langs:
  - csharp
  name: GetDirectReports()
  nameWithType: ActiveDirectoryRole.GetDirectReports()
  fullName: System.Workflow.Activities.ActiveDirectoryRole.GetDirectReports()
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "傳回<xref href=&quot;System.Workflow.Activities.ActiveDirectoryRole&quot;> </xref> ，其中包含直接報告給目前角色的所有角色。"
  remarks: "GetDirectReports 傳回目前節點正下方的節點。 若要傳回底下的所有節點目前的節點使用<xref:System.Workflow.Activities.ActiveDirectoryRole.GetAllReports%2A>.</xref:System.Workflow.Activities.ActiveDirectoryRole.GetAllReports%2A>"
  syntax:
    content: public System.Workflow.Activities.ActiveDirectoryRole GetDirectReports ();
    parameters: []
    return:
      type: System.Workflow.Activities.ActiveDirectoryRole
      description: "<xref href=&quot;System.Workflow.Activities.ActiveDirectoryRole&quot;> </xref> ，其中包含所有角色直接報告給目前角色。"
  overload: System.Workflow.Activities.ActiveDirectoryRole.GetDirectReports*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ActiveDirectoryRole.GetEntries
  id: GetEntries
  parent: System.Workflow.Activities.ActiveDirectoryRole
  langs:
  - csharp
  name: GetEntries()
  nameWithType: ActiveDirectoryRole.GetEntries()
  fullName: System.Workflow.Activities.ActiveDirectoryRole.GetEntries()
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "傳回一般集合，其中包含所有<xref href=&quot;System.DirectoryServices.DirectoryEntry&quot;></xref>目前相關聯物件<xref href=&quot;System.Workflow.Activities.ActiveDirectoryRole&quot;> </xref>。"
  remarks: "角色可以是一般安全性物件的集合。 因此，角色可以包含多個身分識別，例如使用 GetEntries 可傳回與角色相關聯的所有目錄物件。"
  syntax:
    content: public System.Collections.Generic.ICollection<System.DirectoryServices.DirectoryEntry> GetEntries ();
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{System.DirectoryServices.DirectoryEntry}
      description: "泛型<xref href=&quot;System.DirectoryServices.DirectoryEntry&quot;></xref>目前相關聯的集合<xref href=&quot;System.Workflow.Activities.ActiveDirectoryRole&quot;> </xref>。"
  overload: System.Workflow.Activities.ActiveDirectoryRole.GetEntries*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ActiveDirectoryRole.GetIdentities
  id: GetIdentities
  parent: System.Workflow.Activities.ActiveDirectoryRole
  langs:
  - csharp
  name: GetIdentities()
  nameWithType: ActiveDirectoryRole.GetIdentities()
  fullName: System.Workflow.Activities.ActiveDirectoryRole.GetIdentities()
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "取得相關聯的 Windows NT 帳戶的泛型清單<xref href=&quot;System.Workflow.Activities.ActiveDirectoryRole&quot;> </xref>。"
  remarks: "GetIdentities 會取得所有<xref:System.Security.Principal.SecurityIdentifier>物件相關聯<xref:System.Workflow.Activities.ActiveDirectoryRole>，並將每個轉換成字串值。</xref:System.Workflow.Activities.ActiveDirectoryRole> </xref:System.Security.Principal.SecurityIdentifier>"
  syntax:
    content: public override System.Collections.Generic.IList<string> GetIdentities ();
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
      description: "泛型清單的值，表示相關聯的 Windows NT 帳戶<xref href=&quot;System.Workflow.Activities.ActiveDirectoryRole&quot;> </xref>。"
  overload: System.Workflow.Activities.ActiveDirectoryRole.GetIdentities*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ActiveDirectoryRole.GetManager
  id: GetManager
  parent: System.Workflow.Activities.ActiveDirectoryRole
  langs:
  - csharp
  name: GetManager()
  nameWithType: ActiveDirectoryRole.GetManager()
  fullName: System.Workflow.Activities.ActiveDirectoryRole.GetManager()
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "傳回 Active Directory 角色，其中包含有關管理員的目前資訊<xref href=&quot;System.Workflow.Activities.ActiveDirectoryRole&quot;> </xref>。"
  remarks: "GetManager 傳回目前角色的直接管理員。 若要傳回目前節點上方的所有角色，請使用  <xref:System.Workflow.Activities.ActiveDirectoryRole.GetManagerialChain%2A>.</xref:System.Workflow.Activities.ActiveDirectoryRole.GetManagerialChain%2A>"
  syntax:
    content: public System.Workflow.Activities.ActiveDirectoryRole GetManager ();
    parameters: []
    return:
      type: System.Workflow.Activities.ActiveDirectoryRole
      description: "<xref href=&quot;System.Workflow.Activities.ActiveDirectoryRole&quot;> </xref> ，其中包含有關管理員的目前角色的資訊。"
  overload: System.Workflow.Activities.ActiveDirectoryRole.GetManager*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ActiveDirectoryRole.GetManagerialChain
  id: GetManagerialChain
  parent: System.Workflow.Activities.ActiveDirectoryRole
  langs:
  - csharp
  name: GetManagerialChain()
  nameWithType: ActiveDirectoryRole.GetManagerialChain()
  fullName: System.Workflow.Activities.ActiveDirectoryRole.GetManagerialChain()
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "傳回包含目前與相關聯之管理鏈結的相關資訊的 Active Directory 角色<xref href=&quot;System.Workflow.Activities.ActiveDirectoryRole&quot;> </xref>。"
  remarks: "GetManagerialChain 會傳回目前角色上方的所有節點。 若要只傳回目前角色的直接管理員使用<xref:System.Workflow.Activities.ActiveDirectoryRole.GetManager%2A>.</xref:System.Workflow.Activities.ActiveDirectoryRole.GetManager%2A>"
  syntax:
    content: public System.Workflow.Activities.ActiveDirectoryRole GetManagerialChain ();
    parameters: []
    return:
      type: System.Workflow.Activities.ActiveDirectoryRole
      description: "<xref href=&quot;System.Workflow.Activities.ActiveDirectoryRole&quot;> </xref> ，其中包含與目前角色相關聯之管理鏈結的相關資訊。"
  overload: System.Workflow.Activities.ActiveDirectoryRole.GetManagerialChain*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ActiveDirectoryRole.GetPeers
  id: GetPeers
  parent: System.Workflow.Activities.ActiveDirectoryRole
  langs:
  - csharp
  name: GetPeers()
  nameWithType: ActiveDirectoryRole.GetPeers()
  fullName: System.Workflow.Activities.ActiveDirectoryRole.GetPeers()
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "傳回 Active Directory 角色，其中包含所有目錄作業的相關資訊會在目前的管理員所監督<xref href=&quot;System.Workflow.Activities.ActiveDirectoryRole&quot;> </xref>。"
  remarks: "<xref:System.Workflow.Activities.ActiveDirectoryRole>傳回包含這個角色的管理員所管理的所有物件的資訊，但不包含這項資訊從目前的角色。</xref:System.Workflow.Activities.ActiveDirectoryRole>"
  syntax:
    content: public System.Workflow.Activities.ActiveDirectoryRole GetPeers ();
    parameters: []
    return:
      type: System.Workflow.Activities.ActiveDirectoryRole
      description: "A <xref href=&quot;System.Workflow.Activities.ActiveDirectoryRole&quot;> </xref> ，其中包含所有目錄作業的相關資訊會在目前的管理員所監督<xref href=&quot;System.Workflow.Activities.ActiveDirectoryRole&quot;> </xref>。"
  overload: System.Workflow.Activities.ActiveDirectoryRole.GetPeers*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ActiveDirectoryRole.GetSecurityIdentifiers
  id: GetSecurityIdentifiers
  parent: System.Workflow.Activities.ActiveDirectoryRole
  langs:
  - csharp
  name: GetSecurityIdentifiers()
  nameWithType: ActiveDirectoryRole.GetSecurityIdentifiers()
  fullName: System.Workflow.Activities.ActiveDirectoryRole.GetSecurityIdentifiers()
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "傳回泛型清單的<xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;></xref>目前相關聯物件<xref href=&quot;System.Workflow.Activities.ActiveDirectoryRole&quot;> </xref>。"
  remarks: "GetSecurityIdentifiers 檢查每<xref:System.DirectoryServices.DirectoryEntry>傳回<xref:System.Workflow.Activities.ActiveDirectoryRole.GetEntries%2A>方法項目是否有安全性識別碼，其<xref:System.DirectoryServices.DirectoryEntry.Properties%2A>集合。</xref:System.DirectoryServices.DirectoryEntry.Properties%2A> </xref:System.Workflow.Activities.ActiveDirectoryRole.GetEntries%2A> </xref:System.DirectoryServices.DirectoryEntry> 如果<xref:System.DirectoryServices.DirectoryEntry>具有這類屬性，將 GetSecurityIdentifiers<xref:System.Security.Principal.SecurityIdentifier>至所傳回的清單。</xref:System.Security.Principal.SecurityIdentifier> </xref:System.DirectoryServices.DirectoryEntry>"
  syntax:
    content: public System.Collections.Generic.IList<System.Security.Principal.SecurityIdentifier> GetSecurityIdentifiers ();
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.Security.Principal.SecurityIdentifier}
      description: "泛型清單<xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;></xref>目前相關聯物件<xref href=&quot;System.Workflow.Activities.ActiveDirectoryRole&quot;> </xref>。"
  overload: System.Workflow.Activities.ActiveDirectoryRole.GetSecurityIdentifiers*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ActiveDirectoryRole.IncludesIdentity(System.String)
  id: IncludesIdentity(System.String)
  parent: System.Workflow.Activities.ActiveDirectoryRole
  langs:
  - csharp
  name: IncludesIdentity(String)
  nameWithType: ActiveDirectoryRole.IncludesIdentity(String)
  fullName: System.Workflow.Activities.ActiveDirectoryRole.IncludesIdentity(String)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "傳回值，指出是否<xref href=&quot;System.Workflow.Activities.ActiveDirectoryRole&quot;></xref>包含指定的身分識別。"
  remarks: "由於角色是一個或多個物件的一般化，可以利用單一角色描述許多身分識別。 使用 IncludesIdentity 測試指定的身分識別包含在這個角色中。"
  syntax:
    content: public override bool IncludesIdentity (string identity);
    parameters:
    - id: identity
      type: System.String
      description: "若要搜尋之身分識別。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>表示<code> identity </code>隨附於<xref href=&quot;System.Workflow.Activities.ActiveDirectoryRole&quot;> </xref>，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Workflow.Activities.ActiveDirectoryRole.IncludesIdentity*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ActiveDirectoryRole.Name
  id: Name
  parent: System.Workflow.Activities.ActiveDirectoryRole
  langs:
  - csharp
  name: Name
  nameWithType: ActiveDirectoryRole.Name
  fullName: System.Workflow.Activities.ActiveDirectoryRole.Name
  type: Property
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "取得或設定 Active Directory 角色名稱。"
  remarks: "使用名稱來描述角色。"
  syntax:
    content: public override string Name { get; set; }
    return:
      type: System.String
      description: "Active Directory 角色名稱。"
  overload: System.Workflow.Activities.ActiveDirectoryRole.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ActiveDirectoryRole.RootEntry
  id: RootEntry
  parent: System.Workflow.Activities.ActiveDirectoryRole
  langs:
  - csharp
  name: RootEntry
  nameWithType: ActiveDirectoryRole.RootEntry
  fullName: System.Workflow.Activities.ActiveDirectoryRole.RootEntry
  type: Property
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "取得相關聯的根 Active Directory 節點<xref href=&quot;System.Workflow.Activities.ActiveDirectoryRole&quot;> </xref>。"
  remarks: "根項目是沒有管理員之鏈結中的角色的角色。"
  syntax:
    content: public System.DirectoryServices.DirectoryEntry RootEntry { get; }
    return:
      type: System.DirectoryServices.DirectoryEntry
      description: "A <xref href=&quot;System.DirectoryServices.DirectoryEntry&quot;> </xref>表示相關聯的根 Active Directory 節點<xref href=&quot;System.Workflow.Activities.ActiveDirectoryRole&quot;> </xref>。"
  overload: System.Workflow.Activities.ActiveDirectoryRole.RootEntry*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ActiveDirectoryRole.System#IDisposable#Dispose
  id: System#IDisposable#Dispose
  isEii: true
  parent: System.Workflow.Activities.ActiveDirectoryRole
  langs:
  - csharp
  name: System.IDisposable.Dispose()
  nameWithType: ActiveDirectoryRole.System.IDisposable.Dispose()
  fullName: System.Workflow.Activities.ActiveDirectoryRole.System.IDisposable.Dispose()
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "所使用的資源全部釋出<xref href=&quot;System.Workflow.Activities.ActiveDirectoryRole&quot;> </xref>。"
  syntax:
    content: void IDisposable.Dispose ();
    parameters: []
  overload: System.Workflow.Activities.ActiveDirectoryRole.System#IDisposable#Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ActiveDirectoryRole.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  isEii: true
  parent: System.Workflow.Activities.ActiveDirectoryRole
  langs:
  - csharp
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: ActiveDirectoryRole.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Workflow.Activities.ActiveDirectoryRole.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "於其中填入<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;></xref>將序列化目標物件所需的資料。"
  remarks: "實作<xref:System.Workflow.Activities.ActiveDirectoryRole.System.Runtime.Serialization.ISerializable.GetObjectData%2A>允許序列化此物件。</xref:System.Workflow.Activities.ActiveDirectoryRole.System.Runtime.Serialization.ISerializable.GetObjectData%2A>"
  syntax:
    content: void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref>来填入資料。"
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "<xref:System.Runtime.Serialization.StreamingContext>這個序列化的目的地。</xref:System.Runtime.Serialization.StreamingContext>"
  overload: System.Workflow.Activities.ActiveDirectoryRole.System#Runtime#Serialization#ISerializable#GetObjectData*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Workflow.Activities.WorkflowRole
  isExternal: false
  name: System.Workflow.Activities.WorkflowRole
- uid: System.Workflow.Activities.ActiveDirectoryRole.GetAllReports
  parent: System.Workflow.Activities.ActiveDirectoryRole
  isExternal: false
  name: GetAllReports()
  nameWithType: ActiveDirectoryRole.GetAllReports()
  fullName: System.Workflow.Activities.ActiveDirectoryRole.GetAllReports()
- uid: System.Workflow.Activities.ActiveDirectoryRole
  parent: System.Workflow.Activities
  isExternal: false
  name: ActiveDirectoryRole
  nameWithType: ActiveDirectoryRole
  fullName: System.Workflow.Activities.ActiveDirectoryRole
- uid: System.Workflow.Activities.ActiveDirectoryRole.GetDirectReports
  parent: System.Workflow.Activities.ActiveDirectoryRole
  isExternal: false
  name: GetDirectReports()
  nameWithType: ActiveDirectoryRole.GetDirectReports()
  fullName: System.Workflow.Activities.ActiveDirectoryRole.GetDirectReports()
- uid: System.Workflow.Activities.ActiveDirectoryRole.GetEntries
  parent: System.Workflow.Activities.ActiveDirectoryRole
  isExternal: false
  name: GetEntries()
  nameWithType: ActiveDirectoryRole.GetEntries()
  fullName: System.Workflow.Activities.ActiveDirectoryRole.GetEntries()
- uid: System.Collections.Generic.ICollection{System.DirectoryServices.DirectoryEntry}
  parent: System.Collections.Generic
  isExternal: true
  name: ICollection<DirectoryEntry>
  nameWithType: ICollection<DirectoryEntry>
  fullName: System.Collections.Generic.ICollection<System.DirectoryServices.DirectoryEntry>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection<System.DirectoryServices.DirectoryEntry>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DirectoryServices.DirectoryEntry
    name: DirectoryEntry
    nameWithType: DirectoryEntry
    fullName: DirectoryEntry
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.Activities.ActiveDirectoryRole.GetIdentities
  parent: System.Workflow.Activities.ActiveDirectoryRole
  isExternal: false
  name: GetIdentities()
  nameWithType: ActiveDirectoryRole.GetIdentities()
  fullName: System.Workflow.Activities.ActiveDirectoryRole.GetIdentities()
- uid: System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.Activities.ActiveDirectoryRole.GetManager
  parent: System.Workflow.Activities.ActiveDirectoryRole
  isExternal: false
  name: GetManager()
  nameWithType: ActiveDirectoryRole.GetManager()
  fullName: System.Workflow.Activities.ActiveDirectoryRole.GetManager()
- uid: System.Workflow.Activities.ActiveDirectoryRole.GetManagerialChain
  parent: System.Workflow.Activities.ActiveDirectoryRole
  isExternal: false
  name: GetManagerialChain()
  nameWithType: ActiveDirectoryRole.GetManagerialChain()
  fullName: System.Workflow.Activities.ActiveDirectoryRole.GetManagerialChain()
- uid: System.Workflow.Activities.ActiveDirectoryRole.GetPeers
  parent: System.Workflow.Activities.ActiveDirectoryRole
  isExternal: false
  name: GetPeers()
  nameWithType: ActiveDirectoryRole.GetPeers()
  fullName: System.Workflow.Activities.ActiveDirectoryRole.GetPeers()
- uid: System.Workflow.Activities.ActiveDirectoryRole.GetSecurityIdentifiers
  parent: System.Workflow.Activities.ActiveDirectoryRole
  isExternal: false
  name: GetSecurityIdentifiers()
  nameWithType: ActiveDirectoryRole.GetSecurityIdentifiers()
  fullName: System.Workflow.Activities.ActiveDirectoryRole.GetSecurityIdentifiers()
- uid: System.Collections.Generic.IList{System.Security.Principal.SecurityIdentifier}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<SecurityIdentifier>
  nameWithType: IList<SecurityIdentifier>
  fullName: System.Collections.Generic.IList<System.Security.Principal.SecurityIdentifier>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.Security.Principal.SecurityIdentifier>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Security.Principal.SecurityIdentifier
    name: SecurityIdentifier
    nameWithType: SecurityIdentifier
    fullName: SecurityIdentifier
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.Activities.ActiveDirectoryRole.IncludesIdentity(System.String)
  parent: System.Workflow.Activities.ActiveDirectoryRole
  isExternal: false
  name: IncludesIdentity(String)
  nameWithType: ActiveDirectoryRole.IncludesIdentity(String)
  fullName: System.Workflow.Activities.ActiveDirectoryRole.IncludesIdentity(String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Workflow.Activities.ActiveDirectoryRole.Name
  parent: System.Workflow.Activities.ActiveDirectoryRole
  isExternal: false
  name: Name
  nameWithType: ActiveDirectoryRole.Name
  fullName: System.Workflow.Activities.ActiveDirectoryRole.Name
- uid: System.Workflow.Activities.ActiveDirectoryRole.RootEntry
  parent: System.Workflow.Activities.ActiveDirectoryRole
  isExternal: false
  name: RootEntry
  nameWithType: ActiveDirectoryRole.RootEntry
  fullName: System.Workflow.Activities.ActiveDirectoryRole.RootEntry
- uid: System.DirectoryServices.DirectoryEntry
  parent: System.DirectoryServices
  isExternal: false
  name: DirectoryEntry
  nameWithType: DirectoryEntry
  fullName: System.DirectoryServices.DirectoryEntry
- uid: System.Workflow.Activities.ActiveDirectoryRole.System#IDisposable#Dispose
  parent: System.Workflow.Activities.ActiveDirectoryRole
  isExternal: false
  name: System.IDisposable.Dispose()
  nameWithType: ActiveDirectoryRole.System.IDisposable.Dispose()
  fullName: System.Workflow.Activities.ActiveDirectoryRole.System.IDisposable.Dispose()
- uid: System.Workflow.Activities.ActiveDirectoryRole.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Workflow.Activities.ActiveDirectoryRole
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: ActiveDirectoryRole.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Workflow.Activities.ActiveDirectoryRole.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Workflow.Activities.ActiveDirectoryRole.GetAllReports*
  parent: System.Workflow.Activities.ActiveDirectoryRole
  isExternal: false
  name: GetAllReports
  nameWithType: ActiveDirectoryRole.GetAllReports
- uid: System.Workflow.Activities.ActiveDirectoryRole.GetDirectReports*
  parent: System.Workflow.Activities.ActiveDirectoryRole
  isExternal: false
  name: GetDirectReports
  nameWithType: ActiveDirectoryRole.GetDirectReports
- uid: System.Workflow.Activities.ActiveDirectoryRole.GetEntries*
  parent: System.Workflow.Activities.ActiveDirectoryRole
  isExternal: false
  name: GetEntries
  nameWithType: ActiveDirectoryRole.GetEntries
- uid: System.Workflow.Activities.ActiveDirectoryRole.GetIdentities*
  parent: System.Workflow.Activities.ActiveDirectoryRole
  isExternal: false
  name: GetIdentities
  nameWithType: ActiveDirectoryRole.GetIdentities
- uid: System.Workflow.Activities.ActiveDirectoryRole.GetManager*
  parent: System.Workflow.Activities.ActiveDirectoryRole
  isExternal: false
  name: GetManager
  nameWithType: ActiveDirectoryRole.GetManager
- uid: System.Workflow.Activities.ActiveDirectoryRole.GetManagerialChain*
  parent: System.Workflow.Activities.ActiveDirectoryRole
  isExternal: false
  name: GetManagerialChain
  nameWithType: ActiveDirectoryRole.GetManagerialChain
- uid: System.Workflow.Activities.ActiveDirectoryRole.GetPeers*
  parent: System.Workflow.Activities.ActiveDirectoryRole
  isExternal: false
  name: GetPeers
  nameWithType: ActiveDirectoryRole.GetPeers
- uid: System.Workflow.Activities.ActiveDirectoryRole.GetSecurityIdentifiers*
  parent: System.Workflow.Activities.ActiveDirectoryRole
  isExternal: false
  name: GetSecurityIdentifiers
  nameWithType: ActiveDirectoryRole.GetSecurityIdentifiers
- uid: System.Workflow.Activities.ActiveDirectoryRole.IncludesIdentity*
  parent: System.Workflow.Activities.ActiveDirectoryRole
  isExternal: false
  name: IncludesIdentity
  nameWithType: ActiveDirectoryRole.IncludesIdentity
- uid: System.Workflow.Activities.ActiveDirectoryRole.Name*
  parent: System.Workflow.Activities.ActiveDirectoryRole
  isExternal: false
  name: Name
  nameWithType: ActiveDirectoryRole.Name
- uid: System.Workflow.Activities.ActiveDirectoryRole.RootEntry*
  parent: System.Workflow.Activities.ActiveDirectoryRole
  isExternal: false
  name: RootEntry
  nameWithType: ActiveDirectoryRole.RootEntry
- uid: System.Workflow.Activities.ActiveDirectoryRole.System#IDisposable#Dispose*
  parent: System.Workflow.Activities.ActiveDirectoryRole
  isExternal: false
  name: System.IDisposable.Dispose
  nameWithType: ActiveDirectoryRole.System.IDisposable.Dispose
- uid: System.Workflow.Activities.ActiveDirectoryRole.System#Runtime#Serialization#ISerializable#GetObjectData*
  parent: System.Workflow.Activities.ActiveDirectoryRole
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData
  nameWithType: ActiveDirectoryRole.System.Runtime.Serialization.ISerializable.GetObjectData
