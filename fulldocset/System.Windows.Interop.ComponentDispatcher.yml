### YamlMime:ManagedReference
items:
- uid: System.Windows.Interop.ComponentDispatcher
  id: ComponentDispatcher
  children:
  - System.Windows.Interop.ComponentDispatcher.CurrentKeyboardMessage
  - System.Windows.Interop.ComponentDispatcher.EnterThreadModal
  - System.Windows.Interop.ComponentDispatcher.IsThreadModal
  - System.Windows.Interop.ComponentDispatcher.LeaveThreadModal
  - System.Windows.Interop.ComponentDispatcher.PopModal
  - System.Windows.Interop.ComponentDispatcher.PushModal
  - System.Windows.Interop.ComponentDispatcher.RaiseIdle
  - System.Windows.Interop.ComponentDispatcher.RaiseThreadMessage(System.Windows.Interop.MSG@)
  - System.Windows.Interop.ComponentDispatcher.ThreadFilterMessage
  - System.Windows.Interop.ComponentDispatcher.ThreadIdle
  - System.Windows.Interop.ComponentDispatcher.ThreadPreprocessMessage
  langs:
  - csharp
  name: ComponentDispatcher
  nameWithType: ComponentDispatcher
  fullName: System.Windows.Interop.ComponentDispatcher
  type: Class
  summary: "可讓共用控制項之間的訊息幫浦[!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)]和[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]在互通案例中。"
  remarks: "雖然此類別本身是靜態的就有一個 ComponentDispatcher 的所有成員都專屬於特定的執行緒。 例如，如果您檢查的值<xref:System.Windows.Interop.ComponentDispatcher.IsThreadModal%2A>在兩個不同的執行緒，您可能會收到不同的值。</xref:System.Windows.Interop.ComponentDispatcher.IsThreadModal%2A>       方法是靜態的但它們都由每個執行緒資料結構。  靜態方法，可讓單一的存取，但 ComponentDispatcher 排序的每個執行緒的適當作業。       訊息幫浦的擁有者所呼叫的程式碼定義[!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)]函式[GetMessage](http://msdn.microsoft.com/library/ms644936.aspx)。 擁有者呼叫<xref:System.Windows.Interop.ComponentDispatcher.RaiseThreadMessage%2A>針對每個鍵盤訊息。</xref:System.Windows.Interop.ComponentDispatcher.RaiseThreadMessage%2A> 這個方法會引發<xref:System.Windows.Interop.ComponentDispatcher.ThreadFilterMessage>事件訊息包含在事件資料。</xref:System.Windows.Interop.ComponentDispatcher.ThreadFilterMessage> 如果未處理該事件，擁有者就會引發<xref:System.Windows.Interop.ComponentDispatcher.ThreadPreprocessMessage>事件訊息包含在事件引數。</xref:System.Windows.Interop.ComponentDispatcher.ThreadPreprocessMessage>      > [!NOTE] > 支援只有鍵盤訊息。"
  syntax:
    content: public static class ComponentDispatcher
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Interop.ComponentDispatcher.CurrentKeyboardMessage
  id: CurrentKeyboardMessage
  parent: System.Windows.Interop.ComponentDispatcher
  langs:
  - csharp
  name: CurrentKeyboardMessage
  nameWithType: ComponentDispatcher.CurrentKeyboardMessage
  fullName: System.Windows.Interop.ComponentDispatcher.CurrentKeyboardMessage
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows.Interop
  summary: "取得引發的最後一個訊息。"
  syntax:
    content: public static System.Windows.Interop.MSG CurrentKeyboardMessage { get; }
    return:
      type: System.Windows.Interop.MSG
      description: "最後一則訊息。"
  overload: System.Windows.Interop.ComponentDispatcher.CurrentKeyboardMessage*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Interop.ComponentDispatcher.EnterThreadModal
  id: EnterThreadModal
  parent: System.Windows.Interop.ComponentDispatcher
  langs:
  - csharp
  name: EnterThreadModal
  nameWithType: ComponentDispatcher.EnterThreadModal
  fullName: System.Windows.Interop.ComponentDispatcher.EnterThreadModal
  type: Event
  assemblies:
  - WindowsBase
  namespace: System.Windows.Interop
  summary: "當執行緒成為強制回應時發生。"
  syntax:
    content: public static event EventHandler EnterThreadModal;
    return:
      type: System.EventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Interop.ComponentDispatcher.IsThreadModal
  id: IsThreadModal
  parent: System.Windows.Interop.ComponentDispatcher
  langs:
  - csharp
  name: IsThreadModal
  nameWithType: ComponentDispatcher.IsThreadModal
  fullName: System.Windows.Interop.ComponentDispatcher.IsThreadModal
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows.Interop
  summary: "取得值，指出執行緒是否為強制回應。"
  syntax:
    content: public static bool IsThreadModal { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果執行緒為強制回應。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Interop.ComponentDispatcher.IsThreadModal*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Interop.ComponentDispatcher.LeaveThreadModal
  id: LeaveThreadModal
  parent: System.Windows.Interop.ComponentDispatcher
  langs:
  - csharp
  name: LeaveThreadModal
  nameWithType: ComponentDispatcher.LeaveThreadModal
  fullName: System.Windows.Interop.ComponentDispatcher.LeaveThreadModal
  type: Event
  assemblies:
  - WindowsBase
  namespace: System.Windows.Interop
  summary: "當強制回應執行緒成為非強制回應時發生。"
  syntax:
    content: public static event EventHandler LeaveThreadModal;
    return:
      type: System.EventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Interop.ComponentDispatcher.PopModal
  id: PopModal
  parent: System.Windows.Interop.ComponentDispatcher
  langs:
  - csharp
  name: PopModal()
  nameWithType: ComponentDispatcher.PopModal()
  fullName: System.Windows.Interop.ComponentDispatcher.PopModal()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Interop
  summary: "呼叫以表示強制回應執行緒不再為強制回應。"
  syntax:
    content: public static void PopModal ();
    parameters: []
  overload: System.Windows.Interop.ComponentDispatcher.PopModal*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Interop.ComponentDispatcher.PushModal
  id: PushModal
  parent: System.Windows.Interop.ComponentDispatcher
  langs:
  - csharp
  name: PushModal()
  nameWithType: ComponentDispatcher.PushModal()
  fullName: System.Windows.Interop.ComponentDispatcher.PushModal()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Interop
  summary: "呼叫以表示執行緒為強制回應。"
  syntax:
    content: public static void PushModal ();
    parameters: []
  overload: System.Windows.Interop.ComponentDispatcher.PushModal*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Interop.ComponentDispatcher.RaiseIdle
  id: RaiseIdle
  parent: System.Windows.Interop.ComponentDispatcher
  langs:
  - csharp
  name: RaiseIdle()
  nameWithType: ComponentDispatcher.RaiseIdle()
  fullName: System.Windows.Interop.ComponentDispatcher.RaiseIdle()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Interop
  summary: "呼叫以表示執行緒處於閒置狀態。"
  syntax:
    content: public static void RaiseIdle ();
    parameters: []
  overload: System.Windows.Interop.ComponentDispatcher.RaiseIdle*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Interop.ComponentDispatcher.RaiseThreadMessage(System.Windows.Interop.MSG@)
  id: RaiseThreadMessage(System.Windows.Interop.MSG@)
  parent: System.Windows.Interop.ComponentDispatcher
  langs:
  - csharp
  name: RaiseThreadMessage(MSG)
  nameWithType: ComponentDispatcher.RaiseThreadMessage(MSG)
  fullName: System.Windows.Interop.ComponentDispatcher.RaiseThreadMessage(MSG)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Interop
  summary: "表示新訊息可供處理。"
  remarks: "訊息幫浦的擁有者應該呼叫這個方法的每一個鍵盤訊息。"
  syntax:
    content: public static bool RaiseThreadMessage (ref System.Windows.Interop.MSG msg);
    parameters:
    - id: msg
      type: System.Windows.Interop.MSG
      description: "訊息和相關的資料。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果其中一個模組接聽訊息迴圈處理過的訊息。 訊息迴圈的擁有者應該忽略該訊息。 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>如果不處理該訊息。 在此情況下，訊息幫浦的擁有者應該呼叫[!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)]函式[TranslateMessage](http://msdn.microsoft.com/library/ms644955.aspx)後面[DispatchMessage](http://msdn.microsoft.com/library/ms644934.aspx)。"
  overload: System.Windows.Interop.ComponentDispatcher.RaiseThreadMessage*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Interop.ComponentDispatcher.ThreadFilterMessage
  id: ThreadFilterMessage
  parent: System.Windows.Interop.ComponentDispatcher
  langs:
  - csharp
  name: ThreadFilterMessage
  nameWithType: ComponentDispatcher.ThreadFilterMessage
  fullName: System.Windows.Interop.ComponentDispatcher.ThreadFilterMessage
  type: Event
  assemblies:
  - WindowsBase
  namespace: System.Windows.Interop
  summary: "當訊息幫浦收到鍵盤訊息時發生。"
  syntax:
    content: public static event System.Windows.Interop.ThreadMessageEventHandler ThreadFilterMessage;
    return:
      type: System.Windows.Interop.ThreadMessageEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Interop.ComponentDispatcher.ThreadIdle
  id: ThreadIdle
  parent: System.Windows.Interop.ComponentDispatcher
  langs:
  - csharp
  name: ThreadIdle
  nameWithType: ComponentDispatcher.ThreadIdle
  fullName: System.Windows.Interop.ComponentDispatcher.ThreadIdle
  type: Event
  assemblies:
  - WindowsBase
  namespace: System.Windows.Interop
  summary: "在執行緒處於閒置狀態時發生。"
  remarks: "如果佇列中有任何訊息，推出 ThreadIdle 事件的閒置狀態會是較有效率的時間進行處理。"
  syntax:
    content: public static event EventHandler ThreadIdle;
    return:
      type: System.EventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Interop.ComponentDispatcher.ThreadPreprocessMessage
  id: ThreadPreprocessMessage
  parent: System.Windows.Interop.ComponentDispatcher
  langs:
  - csharp
  name: ThreadPreprocessMessage
  nameWithType: ComponentDispatcher.ThreadPreprocessMessage
  fullName: System.Windows.Interop.ComponentDispatcher.ThreadPreprocessMessage
  type: Event
  assemblies:
  - WindowsBase
  namespace: System.Windows.Interop
  summary: "當訊息幫浦收到鍵盤訊息時發生。"
  remarks: "之後，應該引發這個事件<xref:System.Windows.Interop.ComponentDispatcher.ThreadFilterMessage>，則不會處理該事件。</xref:System.Windows.Interop.ComponentDispatcher.ThreadFilterMessage>"
  syntax:
    content: public static event System.Windows.Interop.ThreadMessageEventHandler ThreadPreprocessMessage;
    return:
      type: System.Windows.Interop.ThreadMessageEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Windows.Interop.ComponentDispatcher.CurrentKeyboardMessage
  parent: System.Windows.Interop.ComponentDispatcher
  isExternal: false
  name: CurrentKeyboardMessage
  nameWithType: ComponentDispatcher.CurrentKeyboardMessage
  fullName: System.Windows.Interop.ComponentDispatcher.CurrentKeyboardMessage
- uid: System.Windows.Interop.MSG
  parent: System.Windows.Interop
  isExternal: false
  name: MSG
  nameWithType: MSG
  fullName: System.Windows.Interop.MSG
- uid: System.Windows.Interop.ComponentDispatcher.EnterThreadModal
  parent: System.Windows.Interop.ComponentDispatcher
  isExternal: false
  name: EnterThreadModal
  nameWithType: ComponentDispatcher.EnterThreadModal
  fullName: System.Windows.Interop.ComponentDispatcher.EnterThreadModal
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Windows.Interop.ComponentDispatcher.IsThreadModal
  parent: System.Windows.Interop.ComponentDispatcher
  isExternal: false
  name: IsThreadModal
  nameWithType: ComponentDispatcher.IsThreadModal
  fullName: System.Windows.Interop.ComponentDispatcher.IsThreadModal
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Interop.ComponentDispatcher.LeaveThreadModal
  parent: System.Windows.Interop.ComponentDispatcher
  isExternal: false
  name: LeaveThreadModal
  nameWithType: ComponentDispatcher.LeaveThreadModal
  fullName: System.Windows.Interop.ComponentDispatcher.LeaveThreadModal
- uid: System.Windows.Interop.ComponentDispatcher.PopModal
  parent: System.Windows.Interop.ComponentDispatcher
  isExternal: false
  name: PopModal()
  nameWithType: ComponentDispatcher.PopModal()
  fullName: System.Windows.Interop.ComponentDispatcher.PopModal()
- uid: System.Windows.Interop.ComponentDispatcher.PushModal
  parent: System.Windows.Interop.ComponentDispatcher
  isExternal: false
  name: PushModal()
  nameWithType: ComponentDispatcher.PushModal()
  fullName: System.Windows.Interop.ComponentDispatcher.PushModal()
- uid: System.Windows.Interop.ComponentDispatcher.RaiseIdle
  parent: System.Windows.Interop.ComponentDispatcher
  isExternal: false
  name: RaiseIdle()
  nameWithType: ComponentDispatcher.RaiseIdle()
  fullName: System.Windows.Interop.ComponentDispatcher.RaiseIdle()
- uid: System.Windows.Interop.ComponentDispatcher.RaiseThreadMessage(System.Windows.Interop.MSG@)
  parent: System.Windows.Interop.ComponentDispatcher
  isExternal: false
  name: RaiseThreadMessage(MSG)
  nameWithType: ComponentDispatcher.RaiseThreadMessage(MSG)
  fullName: System.Windows.Interop.ComponentDispatcher.RaiseThreadMessage(MSG)
- uid: System.Windows.Interop.ComponentDispatcher.ThreadFilterMessage
  parent: System.Windows.Interop.ComponentDispatcher
  isExternal: false
  name: ThreadFilterMessage
  nameWithType: ComponentDispatcher.ThreadFilterMessage
  fullName: System.Windows.Interop.ComponentDispatcher.ThreadFilterMessage
- uid: System.Windows.Interop.ThreadMessageEventHandler
  parent: System.Windows.Interop
  isExternal: false
  name: ThreadMessageEventHandler
  nameWithType: ThreadMessageEventHandler
  fullName: System.Windows.Interop.ThreadMessageEventHandler
- uid: System.Windows.Interop.ComponentDispatcher.ThreadIdle
  parent: System.Windows.Interop.ComponentDispatcher
  isExternal: false
  name: ThreadIdle
  nameWithType: ComponentDispatcher.ThreadIdle
  fullName: System.Windows.Interop.ComponentDispatcher.ThreadIdle
- uid: System.Windows.Interop.ComponentDispatcher.ThreadPreprocessMessage
  parent: System.Windows.Interop.ComponentDispatcher
  isExternal: false
  name: ThreadPreprocessMessage
  nameWithType: ComponentDispatcher.ThreadPreprocessMessage
  fullName: System.Windows.Interop.ComponentDispatcher.ThreadPreprocessMessage
- uid: System.Windows.Interop.ComponentDispatcher.CurrentKeyboardMessage*
  parent: System.Windows.Interop.ComponentDispatcher
  isExternal: false
  name: CurrentKeyboardMessage
  nameWithType: ComponentDispatcher.CurrentKeyboardMessage
- uid: System.Windows.Interop.ComponentDispatcher.IsThreadModal*
  parent: System.Windows.Interop.ComponentDispatcher
  isExternal: false
  name: IsThreadModal
  nameWithType: ComponentDispatcher.IsThreadModal
- uid: System.Windows.Interop.ComponentDispatcher.PopModal*
  parent: System.Windows.Interop.ComponentDispatcher
  isExternal: false
  name: PopModal
  nameWithType: ComponentDispatcher.PopModal
- uid: System.Windows.Interop.ComponentDispatcher.PushModal*
  parent: System.Windows.Interop.ComponentDispatcher
  isExternal: false
  name: PushModal
  nameWithType: ComponentDispatcher.PushModal
- uid: System.Windows.Interop.ComponentDispatcher.RaiseIdle*
  parent: System.Windows.Interop.ComponentDispatcher
  isExternal: false
  name: RaiseIdle
  nameWithType: ComponentDispatcher.RaiseIdle
- uid: System.Windows.Interop.ComponentDispatcher.RaiseThreadMessage*
  parent: System.Windows.Interop.ComponentDispatcher
  isExternal: false
  name: RaiseThreadMessage
  nameWithType: ComponentDispatcher.RaiseThreadMessage
