### YamlMime:ManagedReference
items:
- uid: System.Speech.Synthesis.SpeechSynthesizer
  id: SpeechSynthesizer
  children:
  - System.Speech.Synthesis.SpeechSynthesizer.#ctor
  - System.Speech.Synthesis.SpeechSynthesizer.AddLexicon(System.Uri,System.String)
  - System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached
  - System.Speech.Synthesis.SpeechSynthesizer.Dispose
  - System.Speech.Synthesis.SpeechSynthesizer.Finalize
  - System.Speech.Synthesis.SpeechSynthesizer.GetCurrentlySpokenPrompt
  - System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices
  - System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices(System.Globalization.CultureInfo)
  - System.Speech.Synthesis.SpeechSynthesizer.Pause
  - System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached
  - System.Speech.Synthesis.SpeechSynthesizer.Rate
  - System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon(System.Uri)
  - System.Speech.Synthesis.SpeechSynthesizer.Resume
  - System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)
  - System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender)
  - System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge)
  - System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge,System.Int32)
  - System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge,System.Int32,System.Globalization.CultureInfo)
  - System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream(System.IO.Stream,System.Speech.AudioFormat.SpeechAudioFormatInfo)
  - System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice
  - System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull
  - System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile(System.String)
  - System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile(System.String,System.Speech.AudioFormat.SpeechAudioFormatInfo)
  - System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream(System.IO.Stream)
  - System.Speech.Synthesis.SpeechSynthesizer.Speak(System.Speech.Synthesis.Prompt)
  - System.Speech.Synthesis.SpeechSynthesizer.Speak(System.Speech.Synthesis.PromptBuilder)
  - System.Speech.Synthesis.SpeechSynthesizer.Speak(System.String)
  - System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(System.Speech.Synthesis.Prompt)
  - System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(System.Speech.Synthesis.PromptBuilder)
  - System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(System.String)
  - System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel(System.Speech.Synthesis.Prompt)
  - System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll
  - System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted
  - System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress
  - System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml(System.String)
  - System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync(System.String)
  - System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted
  - System.Speech.Synthesis.SpeechSynthesizer.State
  - System.Speech.Synthesis.SpeechSynthesizer.StateChanged
  - System.Speech.Synthesis.SpeechSynthesizer.VisemeReached
  - System.Speech.Synthesis.SpeechSynthesizer.Voice
  - System.Speech.Synthesis.SpeechSynthesizer.VoiceChange
  - System.Speech.Synthesis.SpeechSynthesizer.Volume
  langs:
  - csharp
  name: SpeechSynthesizer
  nameWithType: SpeechSynthesizer
  fullName: System.Speech.Synthesis.SpeechSynthesizer
  type: Class
  summary: "提供存取權的已安裝的語音合成引擎功能。"
  remarks: "當您建立新的 SpeechSynthesizer 物件時，它會使用預設系統語音。 若要設定為使用其中一個已安裝的語音合成 （文字轉換語音） 語音 SpeechSynthesizer，使用<xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A>或<xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A>方法。</xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> 若要取得的語音已安裝的資訊，請使用的<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>方法和<xref:System.Speech.Synthesis.VoiceInfo>類別。</xref:System.Speech.Synthesis.VoiceInfo> </xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>       這個類別也可控制語音合成的下列層面:-若要設定 SpeechSynthesizer 物件的輸出，請使用<xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>， <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>， <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>，和<xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A>方法。</xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>      -若要產生語音，請使用<xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>， <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>， <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>，或<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A>方法。</xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> SpeechSynthesizer 可能會產生文字的語音<xref:System.Speech.Synthesis.Prompt>或<xref:System.Speech.Synthesis.PromptBuilder>物件，或從[語音合成標記語言 (SSML) 1.0 版](http://go.microsoft.com/fwlink/?LinkId=201763)。</xref:System.Speech.Synthesis.PromptBuilder> </xref:System.Speech.Synthesis.Prompt>      -若要暫停及繼續語音合成器，請使用<xref:System.Speech.Synthesis.SpeechSynthesizer.Pause%2A>和<xref:System.Speech.Synthesis.SpeechSynthesizer.Resume%2A>方法。</xref:System.Speech.Synthesis.SpeechSynthesizer.Resume%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.Pause%2A>      -若要新增或移除 lexicon 除外，使用<xref:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon%2A>和<xref:System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon%2A>方法。</xref:System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon%2A> SpeechSynthesizer 可用來引導其字詞發音的一或多個 lexicon 除外。      -若要修改的語音輸出傳遞，請使用<xref:System.Speech.Synthesis.SpeechSynthesizer.Rate%2A>和<xref:System.Speech.Synthesis.SpeechSynthesizer.Volume%2A>屬性。</xref:System.Speech.Synthesis.SpeechSynthesizer.Volume%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.Rate%2A>       SpeechSynthesizer 引發事件會在遇到提示中的特定功能: (<xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>， <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>， <xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>，和<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>)。</xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress> </xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached> </xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached> </xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached> 它也會引發報告的開始事件 (<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>) 和 end (<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>) 的說話作業和讀出聲音的變更 (<xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>)。</xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange> </xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> </xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>      > [!NOTE] > 永遠呼叫<xref:System.Speech.Synthesis.SpeechSynthesizer.Dispose%2A>發行 SpeechSynthesizer 您最後一個參考之前。</xref:System.Speech.Synthesis.SpeechSynthesizer.Dispose%2A> 否則，它所使用的資源將不會釋放記憶體回收行程呼叫 SpeechSynthesizer 物件之前<xref:System.Object.Finalize%2A>方法。</xref:System.Object.Finalize%2A>"
  example:
  - "The following example is part of a console application that initializes a SpeechSynthesizer object and speaks a string.  \n  \n```c#  \n  \nusing System;  \nusing System.Speech.Synthesis;  \n  \nnamespace SampleSynthesis  \n{  \n  class Program  \n  {  \n    static void Main(string[] args)  \n    {  \n  \n      // Initialize a new instance of the SpeechSynthesizer.  \n      SpeechSynthesizer synth = new SpeechSynthesizer();  \n  \n      // Configure the audio output.   \n      synth.SetOutputToDefaultAudioDevice();  \n  \n      // Speak a string.  \n      synth.Speak(\"This example demonstrates a basic use of Speech Synthesizer\");  \n  \n      Console.WriteLine();  \n      Console.WriteLine(\"Press any key to exit...\");  \n      Console.ReadKey();  \n    }  \n  }  \n}  \n  \n```"
  syntax:
    content: 'public sealed class SpeechSynthesizer : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.#ctor
  id: '#ctor'
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: SpeechSynthesizer()
  nameWithType: SpeechSynthesizer.SpeechSynthesizer()
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SpeechSynthesizer()
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "初始化的新執行個體<xref href=&quot;System.Speech.Synthesis.SpeechSynthesizer&quot;></xref>類別。"
  remarks: "當您初始化新<xref:System.Speech.Synthesis.SpeechSynthesizer>執行個體，它會使用預設系統語音。</xref:System.Speech.Synthesis.SpeechSynthesizer> 若要設定<xref:System.Speech.Synthesis.SpeechSynthesizer>若要使用的已安裝的語音合成文字轉換語音 （」） 之其中一個，<xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A>或<xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A>方法。</xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer> 若要取得的語音已安裝的資訊，請使用的<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>方法和<xref:System.Speech.Synthesis.VoiceInfo>類別。</xref:System.Speech.Synthesis.VoiceInfo> </xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>"
  syntax:
    content: public SpeechSynthesizer ();
    parameters: []
  overload: System.Speech.Synthesis.SpeechSynthesizer.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.AddLexicon(System.Uri,System.String)
  id: AddLexicon(System.Uri,System.String)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: AddLexicon(Uri,String)
  nameWithType: SpeechSynthesizer.AddLexicon(Uri,String)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.AddLexicon(Uri,String)
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "加入至 lexicon <xref href=&quot;System.Speech.Synthesis.SpeechSynthesizer&quot;> </xref>物件。"
  remarks: "發音 lexicon 是的單字或片語，以及其發音，由字母與支援的語音字母的字元組成的集合。 在您的應用程式中指定自訂發音為特製化的詞彙，您可以使用詞典 」。       外部字典檔中指定的發音的優先順序高於語音合成器的內部詞素或字典的發音。 不過，發音中建立的任何提示中指定內嵌<xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithPronunciation%2A>， <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A>，或<xref:System.Speech.Synthesis.PromptBuilder.AppendSsml%2A>方法的優先順序高於任何詞典 」 中指定的發音。</xref:System.Speech.Synthesis.PromptBuilder.AppendSsml%2A> </xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A> </xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithPronunciation%2A> 內嵌發音僅適用於單一次出現的文字。 請參閱[lexicon 除外和注音字母](http://msdn.microsoft.com/en-us/435e3c6f-6834-4e5a-b0f6-c17b2275dc51)如需詳細資訊。       您可以加入多個 lexicon 除外<xref:System.Speech.Synthesis.SpeechSynthesizer>物件。目前支援兩個值`mediaType`參數:-值`application/pls+xml`指出 lexicon 符合[發音 Lexicon 規格 (PLS) 1.0 版](http://go.microsoft.com/fwlink/?LinkId=201766)。</xref:System.Speech.Synthesis.SpeechSynthesizer> 這是要使用的慣用的格式。      -值`application/vdn.ms-sapi-lex`指出 lexicon 格式為未壓縮的字詞，這是 Microsoft 專屬格式。 這是舊版的格式，而且我們建議您使用上面所述的 PLS 格式。"
  example:
  - "The following example demonstrates the effect of adding and removing a lexicon that contains a custom pronunciation for the word \"blue\". The lexicon defines the pronunciation of \"blue\" to sound like \"bleep\". While the lexicon is loaded, the speech synthesizer uses the pronunciation defined in the lexicon.  \n  \n```c#  \nusing System;  \nusing System.Speech.Synthesis;  \n  \nnamespace SampleSynthesis  \n{  \n  class Program  \n  {  \n    static void Main(string[] args)  \n    {  \n  \n      // Initialize a new instance of the SpeechSynthesizer.  \n      using (SpeechSynthesizer synth = new SpeechSynthesizer())  \n      {  \n  \n        // Configure the audio output.   \n        synth.SetOutputToDefaultAudioDevice();  \n  \n        // Speak the prompt.  \n        synth.Speak(\"My favorite color is blue.\");  \n  \n        // Add a lexicon that changes the pronunciation of \"blue\".  \n        synth.AddLexicon(new Uri(\"C:\\\\test\\\\Blue.pls\"), \"application/pls+xml\");  \n  \n        // Speak the prompt.  \n        synth.Speak(\"My favorite color is blue.\");  \n  \n        // Remove the lexicon.  \n        synth.RemoveLexicon(new Uri(\"C:\\\\test\\\\Blue.pls\"));  \n  \n        // Speak the prompt.  \n        synth.Speak(\"My favorite color is blue.\");  \n      }  \n  \n      Console.WriteLine();  \n      Console.WriteLine(\"Press any key to exit...\");  \n      Console.ReadKey();  \n    }  \n  }  \n}  \n```  \n  \n Following are the contents of the lexicon file Blue.pls:  \n  \n```xml  \n<?xml version=\"1.0\" encoding=\"UTF-8\"?>  \n  \n<lexicon version=\"1.0\"   \n      xmlns=\"http://www.w3.org/2005/01/pronunciation-lexicon\"  \n      alphabet=\"x-microsoft-ups\" xml:lang=\"en-US\">  \n  \n  <lexeme>  \n    <grapheme> blue </grapheme>  \n    <phoneme> B L I P </phoneme>  \n  </lexeme>  \n  \n</lexicon>  \n```"
  syntax:
    content: public void AddLexicon (Uri uri, string mediaType);
    parameters:
    - id: uri
      type: System.Uri
      description: "詞典 」 資訊的位置。"
    - id: mediaType
      type: System.String
      description: "字典的媒體類型。 媒體類型的值不區分大小寫。"
  overload: System.Speech.Synthesis.SpeechSynthesizer.AddLexicon*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached
  id: BookmarkReached
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: BookmarkReached
  nameWithType: SpeechSynthesizer.BookmarkReached
  fullName: System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached
  type: Event
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "引發的時機<xref href=&quot;System.Speech.Synthesis.SpeechSynthesizer&quot;></xref>遇到提示字元中的書籤。"
  remarks: "<xref:System.Speech.Synthesis.SpeechSynthesizer>處理任一時引發這個事件<xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>， <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>， <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>，或<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A>方法。</xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer> 如需資料與事件相關聯的資訊，請參閱<xref:System.Speech.Synthesis.BookmarkReachedEventArgs>.</xref:System.Speech.Synthesis.BookmarkReachedEventArgs>       您可以加入書籤使用<xref:System.Speech.Synthesis.PromptBuilder.AppendBookmark%2A>方法。</xref:System.Speech.Synthesis.PromptBuilder.AppendBookmark%2A>"
  example:
  - "The following example creates a prompt that includes two bookmarks and sends the output to a WAV file for playback. The handler for the BookmarkReached event writes the name of the bookmark and its position in the audio stream when the event was raised to the console.  \n  \n```c#  \nusing System;  \nusing System.Speech.Synthesis;  \n  \nnamespace SampleSynthesis  \n{  \n  class Program  \n  {  \n    static void Main(string[] args)  \n    {  \n  \n      // Initialize a new instance of the SpeechSynthesizer.  \n      using (SpeechSynthesizer synth = new SpeechSynthesizer())  \n      {  \n  \n        // Configure the audio output.   \n        synth.SetOutputToWaveFile(@\"C:\\test\\weather.wav\");  \n  \n        // Create a SoundPlayer instance to play the output audio file.  \n        System.Media.SoundPlayer m_SoundPlayer =  \n          new System.Media.SoundPlayer(@\"C:\\test\\weather.wav\");  \n  \n        // Build a prompt and append bookmarks.  \n        PromptBuilder builder = new PromptBuilder(  \n          new System.Globalization.CultureInfo(\"en-US\"));  \n        builder.AppendText(  \n          \"The weather forecast for today is partly cloudy with some sun breaks.\");  \n        builder.AppendBookmark(\"Daytime forecast\");  \n        builder.AppendText(  \n          \"Tonight's weather will be cloudy with a 30% chance of showers.\");  \n        builder.AppendBookmark(\"Nightime forecast\");  \n  \n        // Add a handler for the BookmarkReached event.  \n        synth.BookmarkReached +=  \n          new EventHandler<BookmarkReachedEventArgs>(synth_BookmarkReached);  \n  \n        // Speak the prompt and play back the output file.  \n        synth.Speak(builder);  \n        m_SoundPlayer.Play();  \n      }  \n  \n      Console.WriteLine();  \n      Console.WriteLine(\"Press any key to exit...\");  \n      Console.ReadKey();  \n    }  \n  \n    // Write the name and position of the bookmark to the console.  \n    static void synth_BookmarkReached(object sender, BookmarkReachedEventArgs e)  \n    {  \n      Console.WriteLine(\"Bookmark ({0}) reached at: {1} \",  \n        e.Bookmark, e.AudioPosition);  \n    }  \n  }  \n}  \n  \n```"
  syntax:
    content: public event EventHandler<System.Speech.Synthesis.BookmarkReachedEventArgs> BookmarkReached;
    return:
      type: System.EventHandler{System.Speech.Synthesis.BookmarkReachedEventArgs}
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.Dispose
  id: Dispose
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: Dispose()
  nameWithType: SpeechSynthesizer.Dispose()
  fullName: System.Speech.Synthesis.SpeechSynthesizer.Dispose()
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "處置<xref href=&quot;System.Speech.Synthesis.SpeechSynthesizer&quot;></xref>工作階段期間使用的物件，並釋放資源。"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Speech.Synthesis.SpeechSynthesizer.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.Finalize
  id: Finalize
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: Finalize()
  nameWithType: SpeechSynthesizer.Finalize()
  fullName: System.Speech.Synthesis.SpeechSynthesizer.Finalize()
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "做為保護措施，以清除資源的<xref:System.Speech.Synthesis.SpeechSynthesizer.Dispose*>不會呼叫方法。</xref:System.Speech.Synthesis.SpeechSynthesizer.Dispose*>"
  syntax:
    content: ~SpeechSynthesizer ();
    parameters: []
  overload: System.Speech.Synthesis.SpeechSynthesizer.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.GetCurrentlySpokenPrompt
  id: GetCurrentlySpokenPrompt
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: GetCurrentlySpokenPrompt()
  nameWithType: SpeechSynthesizer.GetCurrentlySpokenPrompt()
  fullName: System.Speech.Synthesis.SpeechSynthesizer.GetCurrentlySpokenPrompt()
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "取得提示<xref href=&quot;System.Speech.Synthesis.SpeechSynthesizer&quot;></xref>會說話。"
  remarks: ''
  example:
  - "```c#  \n  \n```"
  syntax:
    content: public System.Speech.Synthesis.Prompt GetCurrentlySpokenPrompt ();
    parameters: []
    return:
      type: System.Speech.Synthesis.Prompt
      description: "傳回目前正在播放的提示物件。"
  overload: System.Speech.Synthesis.SpeechSynthesizer.GetCurrentlySpokenPrompt*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices
  id: GetInstalledVoices
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: GetInstalledVoices()
  nameWithType: SpeechSynthesizer.GetInstalledVoices()
  fullName: System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices()
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "會傳回所有已安裝的語音合成文字轉換語音 （」） 的聲音。"
  remarks: "語音是安裝在系統的語音合成 （語音或 TTS） 引擎。"
  example:
  - "The following example is part of a console application that initializes a <xref:System.Speech.Synthesis.SpeechSynthesizer> object and outputs to the console a list of the installed voices (engines for speech synthesis) and demonstrates the information that is available for each voice.  \n  \n```c#  \nusing System;  \nusing System.Speech.Synthesis;  \nusing System.Speech.AudioFormat;  \n  \nnamespace SampleSynthesis  \n{  \n  class Program  \n  {  \n    static void Main(string[] args)  \n    {  \n  \n      // Initialize a new instance of the SpeechSynthesizer.  \n      using (SpeechSynthesizer synth = new SpeechSynthesizer())  \n      {  \n  \n        // Output information about all of the installed voices.   \n        Console.WriteLine(\"Installed voices -\");  \n        foreach (InstalledVoice voice in synth.GetInstalledVoices())  \n        {  \n          VoiceInfo info = voice.VoiceInfo;  \n          string AudioFormats = \"\";  \n          foreach (SpeechAudioFormatInfo fmt in info.SupportedAudioFormats)  \n          {  \n            AudioFormats += String.Format(\"{0}\\n\",  \n            fmt.EncodingFormat.ToString());  \n          }  \n  \n          Console.WriteLine(\" Name:          \" + info.Name);  \n          Console.WriteLine(\" Culture:       \" + info.Culture);  \n          Console.WriteLine(\" Age:           \" + info.Age);  \n          Console.WriteLine(\" Gender:        \" + info.Gender);  \n          Console.WriteLine(\" Description:   \" + info.Description);  \n          Console.WriteLine(\" ID:            \" + info.Id);  \n          Console.WriteLine(\" Enabled:       \" + voice.Enabled);  \n          if (info.SupportedAudioFormats.Count != 0)  \n          {  \n            Console.WriteLine( \" Audio formats: \" + AudioFormats);  \n          }  \n          else  \n          {  \n            Console.WriteLine(\" No supported audio formats found\");  \n          }  \n  \n          string AdditionalInfo = \"\";  \n          foreach (string key in info.AdditionalInfo.Keys)  \n          {  \n            AdditionalInfo += String.Format(\"  {0}: {1}\\n\", key, info.AdditionalInfo[key]);  \n          }  \n  \n          Console.WriteLine(\" Additional Info - \" + AdditionalInfo);  \n          Console.WriteLine();  \n        }  \n      }  \n      Console.WriteLine(\"Press any key to exit...\");  \n      Console.ReadKey();  \n    }  \n  }  \n}  \n  \n```"
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Speech.Synthesis.InstalledVoice> GetInstalledVoices ();
    parameters: []
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Speech.Synthesis.InstalledVoice}
      description: "傳回目前安裝在系統上的語音的唯讀集合。"
  overload: System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices(System.Globalization.CultureInfo)
  id: GetInstalledVoices(System.Globalization.CultureInfo)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: GetInstalledVoices(CultureInfo)
  nameWithType: SpeechSynthesizer.GetInstalledVoices(CultureInfo)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices(CultureInfo)
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "會傳回所有已安裝的語音合成 （文字轉換語音） 語音支援特定地區設定。"
  remarks: "如果沒有任何已安裝的語音支援指定的地區設定，這個方法會傳回空集合。       Microsoft Windows 和 System.Speech API 接受所有有效國家 （地區） 語言代碼。 若要執行文字轉換語音使用文化特性屬性中指定的語言，必須安裝支援該語言的國家/地區的程式碼的語音合成引擎。 語音合成引擎隨附於 Microsoft Windows 7 工作具有下列語言的國家/地區代碼:-EN-US。 英文 （美國）-ZH-CN。 中文 （中國）-ZH-TW。 中文 （台灣） 的兩個字母的語言代碼，例如&quot;en&quot;也允許使用。"
  example:
  - "The following example is part of a console application that initializes a <xref:System.Speech.Synthesis.SpeechSynthesizer> object and outputs to the console a list of the installed voices that support the en-US locale.  \n  \n```c#  \nusing System;  \nusing System.Globalization;  \nusing System.Speech.Synthesis;  \n  \nnamespace SampleSynthesis  \n{  \n  class Program  \n  {  \n    static void Main(string[] args)  \n    {  \n  \n      // Initialize a new instance of the speech synthesizer.  \n      using (SpeechSynthesizer synthesizer = new SpeechSynthesizer())  \n      {  \n  \n        // Output information about all of the installed voices that  \n        // support the en-US locacale.   \n        Console.WriteLine(\"Installed voices for the en-US locale:\");  \n        foreach (InstalledVoice voice in  \n          synthesizer.GetInstalledVoices(new CultureInfo(\"en-US\")))  \n        {  \n          VoiceInfo info = voice.VoiceInfo;  \n          OutputVoiceInfo(info);  \n        }  \n  \n        // Output information about the current voice.  \n        Console.WriteLine();  \n        Console.WriteLine(\"Current voice:\");  \n        OutputVoiceInfo(synthesizer.Voice);  \n      }  \n  \n      Console.WriteLine();  \n      Console.WriteLine(\"Press any key to exit...\");  \n      Console.ReadKey();  \n    }  \n  \n    // Display information about a synthesizer voice.  \n    private static void OutputVoiceInfo(VoiceInfo info)  \n    {  \n      Console.WriteLine(\"  Name: {0}, culture: {1}, gender: {2}, age: {3}.\",  \n        info.Name, info.Culture, info.Gender, info.Age);  \n      Console.WriteLine(\"    Description: {0}\", info.Description);  \n    }  \n  }  \n}  \n  \n```"
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Speech.Synthesis.InstalledVoice> GetInstalledVoices (System.Globalization.CultureInfo culture);
    parameters:
    - id: culture
      type: System.Globalization.CultureInfo
      description: "語音必須支援的地區設定。"
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Speech.Synthesis.InstalledVoice}
      description: "傳回支援指定的地區設定語音目前已安裝在系統上的唯讀集合。"
  overload: System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.Pause
  id: Pause
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: Pause()
  nameWithType: SpeechSynthesizer.Pause()
  fullName: System.Speech.Synthesis.SpeechSynthesizer.Pause()
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "暫停<xref href=&quot;System.Speech.Synthesis.SpeechSynthesizer&quot;></xref>物件。"
  syntax:
    content: public void Pause ();
    parameters: []
  overload: System.Speech.Synthesis.SpeechSynthesizer.Pause*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached
  id: PhonemeReached
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: PhonemeReached
  nameWithType: SpeechSynthesizer.PhonemeReached
  fullName: System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached
  type: Event
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "當達到音素時引發。"
  remarks: "音素是基本的撰寫語言元件，通常代表一或多個相異的音效英文字母 （或兩個字母的組合） 的字母。 例如，字母&quot;c&quot;是似乎像是中 「 cinder&quot;、&quot;s&quot;或&quot;k&quot;在&quot;catch&quot;像音素。 書寫的文字是音素的組合。 在 word 變更音素會改變其拼字檢查。       A<xref:System.Speech.Synthesis.SpeechSynthesizer>執行個體會產生每個構成的音素的文字部分 PhonemeReached 事件。</xref:System.Speech.Synthesis.SpeechSynthesizer> 例如，word 「 主題 」 會產生三個 PhonemeReached 事件;其中一個&quot;th&quot;音效、 另一個用於&quot;e&quot;聲音，和另一個用於&quot;m&quot;聲音 (me)。       如需範例和資料與事件相關聯的相關資訊，請參閱<xref:System.Speech.Synthesis.PhonemeReachedEventArgs>.</xref:System.Speech.Synthesis.PhonemeReachedEventArgs>"
  syntax:
    content: public event EventHandler<System.Speech.Synthesis.PhonemeReachedEventArgs> PhonemeReached;
    return:
      type: System.EventHandler{System.Speech.Synthesis.PhonemeReachedEventArgs}
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.Rate
  id: Rate
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: Rate
  nameWithType: SpeechSynthesizer.Rate
  fullName: System.Speech.Synthesis.SpeechSynthesizer.Rate
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "取得或設定說話射<xref href=&quot;System.Speech.Synthesis.SpeechSynthesizer&quot;></xref>物件。"
  remarks: ''
  example:
  - "The following example speaks a string with the speaking rate set to -2.  \n  \n```c#  \nusing System;  \nusing System.Speech.Synthesis;  \n  \nnamespace SampleSynthesis  \n{  \n  class Program  \n  {  \n  \n    static void Main(string[] args)  \n    {  \n  \n      // Initialize a new instance of the SpeechSynthesizer.  \n      SpeechSynthesizer synth = new SpeechSynthesizer();  \n  \n      // Set a value for the speaking rate.  \n      synth.Rate = -2;  \n  \n      // Configure the audio output.   \n      synth.SetOutputToDefaultAudioDevice();  \n  \n      // Speak a text string synchronously.  \n      synth.Speak(\"This example speaks a string with the speaking rate set to -2.\");  \n  \n      Console.WriteLine();  \n      Console.WriteLine(\"Press any key to exit...\");  \n      Console.ReadKey();  \n    }     \n  }    \n}  \n```"
  syntax:
    content: public int Rate { get; set; }
    return:
      type: System.Int32
      description: "傳回說話射<xref href=&quot;System.Speech.Synthesis.SpeechSynthesizer&quot;></xref>物件，從-10 到 10。"
  overload: System.Speech.Synthesis.SpeechSynthesizer.Rate*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon(System.Uri)
  id: RemoveLexicon(System.Uri)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: RemoveLexicon(Uri)
  nameWithType: SpeechSynthesizer.RemoveLexicon(Uri)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon(Uri)
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "移除從 lexicon <xref href=&quot;System.Speech.Synthesis.SpeechSynthesizer&quot;> </xref>物件。"
  remarks: "請參閱<xref:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon%2A>的範例。</xref:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon%2A>"
  syntax:
    content: public void RemoveLexicon (Uri uri);
    parameters:
    - id: uri
      type: System.Uri
      description: "Lexicon 文件的位置。"
  overload: System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.Resume
  id: Resume
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: Resume()
  nameWithType: SpeechSynthesizer.Resume()
  fullName: System.Speech.Synthesis.SpeechSynthesizer.Resume()
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "繼續<xref href=&quot;System.Speech.Synthesis.SpeechSynthesizer&quot;></xref>物件之後已經暫停。"
  syntax:
    content: public void Resume ();
    parameters: []
  overload: System.Speech.Synthesis.SpeechSynthesizer.Resume*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)
  id: SelectVoice(System.String)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: SelectVoice(String)
  nameWithType: SpeechSynthesizer.SelectVoice(String)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(String)
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "依名稱選取特定的聲音。"
  remarks: "使用<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>方法和<xref:System.Speech.Synthesis.VoiceInfo>類別，以取得安裝可選取的文字轉換語音 (TTS) 語音。</xref:System.Speech.Synthesis.VoiceInfo> </xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> 若要選取語音，請傳送的整個內容<xref:System.Speech.Synthesis.VoiceInfo.Name%2A>為 SelectVoice 方法的引數的屬性。</xref:System.Speech.Synthesis.VoiceInfo.Name%2A> <xref:System.Speech.Synthesis.SpeechSynthesizer>物件會選取第一個已安裝的語音，其中包含`name`的語音<xref:System.Speech.Synthesis.VoiceInfo.Name%2A?displayProperty=fullName>屬性。</xref:System.Speech.Synthesis.VoiceInfo.Name%2A?displayProperty=fullName> </xref:System.Speech.Synthesis.SpeechSynthesizer> <xref:System.Speech.Synthesis.SpeechSynthesizer>執行區分大小寫，子字串比較來決定是否要符合的語音`name`。</xref:System.Speech.Synthesis.SpeechSynthesizer>       當應用程式呼叫<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>，此方法會驗證每個在登錄中找到的語音符合某些最小的準則。</xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> 無法驗證任何語音<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>設定其<xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>屬性`False`。</xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> 應用程式無法選取語音其<xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>屬性是`False`。</xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> 一般而言，應用程式將不會設定語音<xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>屬性。</xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>       若要選取語音的性別、 年齡或地區設定，請使用其中一種<xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A>方法。</xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A>"
  syntax:
    content: public void SelectVoice (string name);
    parameters:
    - id: name
      type: System.String
      description: "若要選取語音的名稱。"
  overload: System.Speech.Synthesis.SpeechSynthesizer.SelectVoice*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender)
  id: SelectVoiceByHints(System.Speech.Synthesis.VoiceGender)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: SelectVoiceByHints(VoiceGender)
  nameWithType: SpeechSynthesizer.SelectVoiceByHints(VoiceGender)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(VoiceGender)
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "選取特定 gender 語音。"
  remarks: "使用<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>方法和<xref:System.Speech.Synthesis.VoiceInfo>類別，以取得安裝可選取的文字轉換語音 (TTS) 語音。</xref:System.Speech.Synthesis.VoiceInfo> </xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> <xref:System.Speech.Synthesis.SpeechSynthesizer>物件會選取第一個已安裝的語音其<xref:System.Speech.Synthesis.VoiceInfo.Gender%2A>屬性相符項目`gender`參數。</xref:System.Speech.Synthesis.VoiceInfo.Gender%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer>       當應用程式呼叫<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>，此方法會驗證每個在登錄中找到的語音符合某些最小的準則。</xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> 無法驗證任何語音<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>設定其<xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>屬性`False`。</xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> 應用程式無法選取語音其<xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>屬性是`False`。</xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> 一般而言，應用程式將不會設定語音<xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>屬性。</xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>       若要選取其他特性為基礎的語音，請參閱其他<xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A>方法。</xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A>       若要依名稱選取語音，使用<xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A>方法。</xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A>"
  syntax:
    content: public void SelectVoiceByHints (System.Speech.Synthesis.VoiceGender gender);
    parameters:
    - id: gender
      type: System.Speech.Synthesis.VoiceGender
      description: "若要選取語音的性別。"
  overload: System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge)
  id: SelectVoiceByHints(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: SelectVoiceByHints(VoiceGender,VoiceAge)
  nameWithType: SpeechSynthesizer.SelectVoiceByHints(VoiceGender,VoiceAge)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(VoiceGender,VoiceAge)
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "選取 使用特定的性別和年齡的語音。"
  remarks: "使用<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>方法和<xref:System.Speech.Synthesis.VoiceInfo>類別，以取得安裝可選取的文字轉換語音 (TTS) 語音。</xref:System.Speech.Synthesis.VoiceInfo> </xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> <xref:System.Speech.Synthesis.SpeechSynthesizer>物件會選取第一個已安裝的語音其<xref:System.Speech.Synthesis.VoiceInfo.Gender%2A>和<xref:System.Speech.Synthesis.VoiceInfo.Age%2A>屬性比對`gender`和`age`參數。</xref:System.Speech.Synthesis.VoiceInfo.Age%2A> </xref:System.Speech.Synthesis.VoiceInfo.Gender%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer>       當應用程式呼叫<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>，此方法會驗證每個在登錄中找到的語音符合某些最小的準則。</xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> 無法驗證任何語音<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>設定其<xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>屬性`False`。</xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> 應用程式無法選取語音其<xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>屬性是`False`。</xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> 一般而言，應用程式將不會設定語音<xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>屬性。</xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>       若要選取其他特性為基礎的語音，請參閱其他<xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A>方法。</xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A>       若要依名稱選取語音，使用<xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A>方法。</xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A>"
  syntax:
    content: public void SelectVoiceByHints (System.Speech.Synthesis.VoiceGender gender, System.Speech.Synthesis.VoiceAge age);
    parameters:
    - id: gender
      type: System.Speech.Synthesis.VoiceGender
      description: "若要選取語音的性別。"
    - id: age
      type: System.Speech.Synthesis.VoiceAge
      description: "若要選取語音的年齡。"
  overload: System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge,System.Int32)
  id: SelectVoiceByHints(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge,System.Int32)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: SelectVoiceByHints(VoiceGender,VoiceAge,Int32)
  nameWithType: SpeechSynthesizer.SelectVoiceByHints(VoiceGender,VoiceAge,Int32)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(VoiceGender,VoiceAge,Int32)
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "選取語音使用特定的性別和年齡，根據的位置順序排列的聲音。"
  remarks: "使用<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>方法和<xref:System.Speech.Synthesis.VoiceInfo>類別，以取得安裝可選取的文字轉換語音 (TTS) 語音。</xref:System.Speech.Synthesis.VoiceInfo> </xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> <xref:System.Speech.Synthesis.SpeechSynthesizer>物件，會發現安裝 voices 其<xref:System.Speech.Synthesis.VoiceInfo.Gender%2A>和<xref:System.Speech.Synthesis.VoiceInfo.Age%2A>屬性比對`gender`和`age`參數。</xref:System.Speech.Synthesis.VoiceInfo.Age%2A> </xref:System.Speech.Synthesis.VoiceInfo.Gender%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer> <xref:System.Speech.Synthesis.SpeechSynthesizer>計算的符合項目它發現，並傳回語音，當計數等於`voiceAlternate`參數。</xref:System.Speech.Synthesis.SpeechSynthesizer>       當應用程式呼叫<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>，此方法會驗證每個在登錄中找到的語音符合某些最小的準則。</xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> 無法驗證任何語音<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>設定其<xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>屬性`False`。</xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> 應用程式無法選取語音其<xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>屬性是`False`。</xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> 一般而言，應用程式將不會設定語音<xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>屬性。</xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>       若要選取其他特性為基礎的語音，請參閱其他<xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A>多載。</xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A>       若要依名稱選取語音，使用<xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A>方法。</xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A>"
  syntax:
    content: public void SelectVoiceByHints (System.Speech.Synthesis.VoiceGender gender, System.Speech.Synthesis.VoiceAge age, int voiceAlternate);
    parameters:
    - id: gender
      type: System.Speech.Synthesis.VoiceGender
      description: "若要選取語音的性別。"
    - id: age
      type: System.Speech.Synthesis.VoiceAge
      description: "若要選取語音的年齡。"
    - id: voiceAlternate
      type: System.Int32
      description: "若要選取語音的位置。"
  overload: System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge,System.Int32,System.Globalization.CultureInfo)
  id: SelectVoiceByHints(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge,System.Int32,System.Globalization.CultureInfo)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: SelectVoiceByHints(VoiceGender,VoiceAge,Int32,CultureInfo)
  nameWithType: SpeechSynthesizer.SelectVoiceByHints(VoiceGender,VoiceAge,Int32,CultureInfo)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(VoiceGender,VoiceAge,Int32,CultureInfo)
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "選取與特定的性別、 年齡和地區設定，根據的位置順序排列的語音的語音。"
  remarks: "<xref:System.Speech.Synthesis.SpeechSynthesizer>物件尋找 voices 其<xref:System.Speech.Synthesis.VoiceInfo.Gender%2A>， <xref:System.Speech.Synthesis.VoiceInfo.Age%2A>，和<xref:System.Speech.Synthesis.VoiceInfo.Culture%2A>屬性比對`gender`， `age`，和`culture`參數。</xref:System.Speech.Synthesis.VoiceInfo.Culture%2A> </xref:System.Speech.Synthesis.VoiceInfo.Age%2A> </xref:System.Speech.Synthesis.VoiceInfo.Gender%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer> <xref:System.Speech.Synthesis.SpeechSynthesizer>計算的符合項目它發現，並傳回語音，當計數等於`voiceAlternate`參數。</xref:System.Speech.Synthesis.SpeechSynthesizer>       Microsoft Windows 和 System.Speech API 接受所有有效國家 （地區） 語言代碼。 若要執行使用中所指定語言的文字轉換語音`culture`參數、 語音合成引擎支援，必須安裝語言國家/地區的程式碼。 語音合成引擎隨附於 Microsoft Windows 7 工作具有下列語言的國家/地區代碼:-EN-US。 英文 （美國）-ZH-CN。 中文 （中國）-ZH-TW。 中文 （台灣） 的兩個字母的語言代碼，例如&quot;en&quot;也允許使用。       當應用程式呼叫<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>，此方法會驗證每個在登錄中找到的語音符合某些最小的準則。</xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> 無法驗證任何語音<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>設定其<xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>屬性`False`。</xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> 應用程式無法選取語音其<xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>屬性是`False`。</xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> 一般而言，應用程式將不會設定語音<xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>屬性。</xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>       若要選取其他特性為基礎的語音，請參閱其他<xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A>多載。</xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A>       若要依名稱選取語音，使用<xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A>方法。</xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A>"
  syntax:
    content: public void SelectVoiceByHints (System.Speech.Synthesis.VoiceGender gender, System.Speech.Synthesis.VoiceAge age, int voiceAlternate, System.Globalization.CultureInfo culture);
    parameters:
    - id: gender
      type: System.Speech.Synthesis.VoiceGender
      description: "若要選取語音的性別。"
    - id: age
      type: System.Speech.Synthesis.VoiceAge
      description: "若要選取語音的年齡。"
    - id: voiceAlternate
      type: System.Int32
      description: "若要選取語音的位置。"
    - id: culture
      type: System.Globalization.CultureInfo
      description: "若要選取語音的地區設定。"
  overload: System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream(System.IO.Stream,System.Speech.AudioFormat.SpeechAudioFormatInfo)
  id: SetOutputToAudioStream(System.IO.Stream,System.Speech.AudioFormat.SpeechAudioFormatInfo)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: SetOutputToAudioStream(Stream,SpeechAudioFormatInfo)
  nameWithType: SpeechSynthesizer.SetOutputToAudioStream(Stream,SpeechAudioFormatInfo)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream(Stream,SpeechAudioFormatInfo)
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "設定<xref href=&quot;System.Speech.Synthesis.SpeechSynthesizer&quot;> </xref> ，將輸出附加至音訊資料流的物件。"
  remarks: "呼叫<xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>發行<xref:System.Speech.Synthesis.SpeechSynthesizer>的資料流的參考。</xref:System.Speech.Synthesis.SpeechSynthesizer> </xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>       如需其他輸出組態選項，請參閱<xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>， <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>， <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A>，和<xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A>方法。</xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>"
  syntax:
    content: public void SetOutputToAudioStream (System.IO.Stream audioDestination, System.Speech.AudioFormat.SpeechAudioFormatInfo formatInfo);
    parameters:
    - id: audioDestination
      type: System.IO.Stream
      description: "要附加合成輸出資料流。"
    - id: formatInfo
      type: System.Speech.AudioFormat.SpeechAudioFormatInfo
      description: "要用於合成輸出格式。"
  overload: System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice
  id: SetOutputToDefaultAudioDevice
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: SetOutputToDefaultAudioDevice()
  nameWithType: SpeechSynthesizer.SetOutputToDefaultAudioDevice()
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice()
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "設定<xref href=&quot;System.Speech.Synthesis.SpeechSynthesizer&quot;></xref>物件，將輸出傳送到預設音訊裝置。"
  remarks: "您可以使用**聲音**windows 視窗**控制台**設定電腦的預設音訊裝置。       如需其他輸出組態選項，請參閱<xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>， <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>， <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A>，和<xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A>方法。</xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>"
  example:
  - "The following example uses the synthesizer to speak a phrase to the default audio output.  \n  \n```c#  \nusing System;  \nusing System.Speech.Synthesis;  \n  \nnamespace SampleSynthesis  \n{  \n  class Program  \n  {  \n    static void Main(string[] args)  \n    {  \n  \n      // Initialize a new instance of the speech synthesizer.  \n      using (SpeechSynthesizer synth = new SpeechSynthesizer())  \n      {  \n  \n        // Configure the synthesizer to send output to the default audio device.  \n        synth.SetOutputToDefaultAudioDevice();  \n  \n        // Speak a phrase.  \n        synth.Speak(\"This is sample text-to-speech output.\");  \n      }  \n  \n      Console.WriteLine();  \n      Console.WriteLine(\"Press any key to exit...\");  \n      Console.ReadKey();  \n    }  \n  }  \n}  \n  \n```"
  syntax:
    content: public void SetOutputToDefaultAudioDevice ();
    parameters: []
  overload: System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull
  id: SetOutputToNull
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: SetOutputToNull()
  nameWithType: SpeechSynthesizer.SetOutputToNull()
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull()
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "設定<xref href=&quot;System.Speech.Synthesis.SpeechSynthesizer&quot;></xref>不從合成作業的輸出傳送到裝置、 檔案或資料流的物件。"
  remarks: "使用這個方法來釋放<xref:System.Speech.Synthesis.SpeechSynthesizer>的檔案或資料流的參考。</xref:System.Speech.Synthesis.SpeechSynthesizer> 請參閱<xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A>的範例。</xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A>       如需其他輸出組態選項，請參閱<xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>， <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>， <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A>，和<xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A>方法。</xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>"
  syntax:
    content: public void SetOutputToNull ();
    parameters: []
  overload: System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile(System.String)
  id: SetOutputToWaveFile(System.String)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: SetOutputToWaveFile(String)
  nameWithType: SpeechSynthesizer.SetOutputToWaveFile(String)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile(String)
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "設定<xref href=&quot;System.Speech.Synthesis.SpeechSynthesizer&quot;></xref>要將輸出附加至檔案，其中包含波形格式 audio 物件。"
  remarks: "設定輸出和指定的音訊格式，請使用<xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A>方法。</xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A>"
  example:
  - "The following example uses an instance of <xref:System.Media.SoundPlayer> to play a prompt that has been output to a .wav file. Because the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> call is asynchronous, the <xref:System.Media.SoundPlayer> instance is created (and the <xref:System.Media.SoundPlayer.Play%2A> method invoked) in the handler for the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> event.  \n  \n```c#  \nusing System;  \nusing System.Speech.Synthesis;  \n  \nnamespace SampleSynthesis  \n{  \n  class Program  \n  {  \n    static void Main(string[] args)  \n    {  \n  \n      // Initialize a new instance of the SpeechSynthesizer.  \n      SpeechSynthesizer synth = new SpeechSynthesizer();  \n  \n      // Configure the audio output.   \n      synth.SetOutputToWaveFile(@\"C:\\Test\\Sample.wav\");  \n  \n      // Register for the SpeakCompleted event.  \n      synth.SpeakCompleted += new EventHandler<SpeakCompletedEventArgs>(synth_SpeakCompleted);  \n  \n      // Build a prompt.  \n      PromptBuilder builder = new PromptBuilder();  \n      builder.AppendText(\"This sample asynchronously speaks a prompt to a WAVE file.\");  \n  \n      // Speak the string asynchronously.  \n      synth.SpeakAsync(builder);  \n  \n      Console.WriteLine();  \n      Console.WriteLine(\"Press any key to exit...\");  \n      Console.ReadKey();  \n    }  \n  \n    // Handle the SpeakCompleted event.  \n    static void synth_SpeakCompleted(object sender, SpeakCompletedEventArgs e)  \n    {  \n  \n      // Create a SoundPlayer instance to play the output audio file.  \n      System.Media.SoundPlayer m_SoundPlayer =  \n        new System.Media.SoundPlayer(@\"C:\\Test\\Sample.wav\");  \n  \n      //  Play the output file.  \n      m_SoundPlayer.Play();  \n    }  \n  }  \n}  \n```"
  syntax:
    content: public void SetOutputToWaveFile (string path);
    parameters:
    - id: path
      type: System.String
      description: "檔案的路徑。"
  overload: System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile(System.String,System.Speech.AudioFormat.SpeechAudioFormatInfo)
  id: SetOutputToWaveFile(System.String,System.Speech.AudioFormat.SpeechAudioFormatInfo)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: SetOutputToWaveFile(String,SpeechAudioFormatInfo)
  nameWithType: SpeechSynthesizer.SetOutputToWaveFile(String,SpeechAudioFormatInfo)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile(String,SpeechAudioFormatInfo)
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "設定<xref href=&quot;System.Speech.Synthesis.SpeechSynthesizer&quot;></xref>物件將輸出附加至波形音訊格式檔案中指定的格式。"
  remarks: ''
  example:
  - "The following example specifies the format of the output of speech synthesis and sends it to a WAV file.  \n  \n```c#  \nusing System;  \nusing System.IO;  \nusing System.Speech.Synthesis;  \nusing System.Speech.AudioFormat;  \n  \nnamespace SampleSynthesis  \n{  \n  class Program  \n  {  \n    static void Main(string[] args)  \n    {  \n  \n      // Initialize a new instance of the SpeechSynthesizer.  \n      using (SpeechSynthesizer synth = new SpeechSynthesizer())  \n      {  \n  \n        // Configure the audio output.   \n        synth.SetOutputToWaveFile(@\"C:\\temp\\test.wav\",   \n          new SpeechAudioFormatInfo(32000, AudioBitsPerSample.Sixteen, AudioChannel.Mono));  \n  \n        // Create a SoundPlayer instance to play output audio file.  \n        System.Media.SoundPlayer m_SoundPlayer =   \n          new System.Media.SoundPlayer(@\"C:\\temp\\test.wav\");  \n  \n        // Build a prompt.  \n        PromptBuilder builder = new PromptBuilder();  \n        builder.AppendText(\"This is sample output to a WAVE file.\");  \n  \n        // Speak the prompt.  \n        synth.Speak(builder);  \n        m_SoundPlayer.Play();  \n      }  \n  \n      Console.WriteLine();  \n      Console.WriteLine(\"Press any key to exit...\");  \n      Console.ReadKey();  \n    }  \n  }  \n}  \n  \n```"
  syntax:
    content: public void SetOutputToWaveFile (string path, System.Speech.AudioFormat.SpeechAudioFormatInfo formatInfo);
    parameters:
    - id: path
      type: System.String
      description: "檔案的路徑。"
    - id: formatInfo
      type: System.Speech.AudioFormat.SpeechAudioFormatInfo
      description: "音訊格式資訊。"
  overload: System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream(System.IO.Stream)
  id: SetOutputToWaveStream(System.IO.Stream)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: SetOutputToWaveStream(Stream)
  nameWithType: SpeechSynthesizer.SetOutputToWaveStream(Stream)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream(Stream)
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "設定<xref href=&quot;System.Speech.Synthesis.SpeechSynthesizer&quot;></xref>要將輸出附加至包含波形格式 audio 的資料流物件。"
  remarks: "若要發行<xref:System.Speech.Synthesis.SpeechSynthesizer>的資料流，reconfigure 合成器的輸出，例如，藉由呼叫<xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>.</xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>參考</xref:System.Speech.Synthesis.SpeechSynthesizer>       如需其他輸出組態選項，請參閱<xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>， <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>， <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>，和<xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A>方法。</xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>"
  example:
  - "The following example outputs a phrase to a WAV stream.  \n  \n```c#  \nusing System;  \nusing System.IO;  \nusing System.Speech.Synthesis;  \n  \nnamespace SampleSynthesis  \n{  \n  class Program  \n  {  \n    static void Main(string[] args)  \n    {  \n  \n      // Initialize a new instance of the speech synthesizer.  \n      using (SpeechSynthesizer synth = new SpeechSynthesizer())  \n      using (MemoryStream stream = new MemoryStream())  \n      {  \n  \n        // Create a SoundPlayer instance to play the output audio file.  \n        MemoryStream streamAudio = new MemoryStream();  \n        System.Media.SoundPlayer m_SoundPlayer = new System.Media.SoundPlayer();  \n  \n        // Configure the synthesizer to output to an audio stream.  \n        synth.SetOutputToWaveStream(streamAudio);  \n  \n        // Speak a phrase.  \n        synth.Speak(\"This is sample text-to-speech output.\");  \n        streamAudio.Position = 0;  \n        m_SoundPlayer.Stream = streamAudio;  \n        m_SoundPlayer.Play();  \n  \n        // Set the synthesizer output to null to release the stream.   \n        synth.SetOutputToNull();  \n  \n        // Insert code to persist or process the stream contents here.  \n      }  \n  \n      Console.WriteLine();  \n      Console.WriteLine(\"Press any key to exit...\");  \n      Console.ReadKey();  \n    }  \n  }  \n}  \n  \n```"
  syntax:
    content: public void SetOutputToWaveStream (System.IO.Stream audioDestination);
    parameters:
    - id: audioDestination
      type: System.IO.Stream
      description: "要附加合成輸出資料流。"
  overload: System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.Speak(System.Speech.Synthesis.Prompt)
  id: Speak(System.Speech.Synthesis.Prompt)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: Speak(Prompt)
  nameWithType: SpeechSynthesizer.Speak(Prompt)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.Speak(Prompt)
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "以同步方式說出的內容<xref href=&quot;System.Speech.Synthesis.Prompt&quot;></xref>物件。"
  remarks: "以非同步方式說出的<xref:System.Speech.Synthesis.Prompt>物件，請使用<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>.</xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A></xref:System.Speech.Synthesis.Prompt>內容"
  example:
  - "The following example creates a <xref:System.Speech.Synthesis.Prompt> object from a string and passes the object as an argument to the Speak method.  \n  \n```c#  \nusing System;  \nusing System.Speech.Synthesis;  \n  \nnamespace SampleSynthesis  \n{  \n  class Program  \n  {  \n    static void Main(string[] args)  \n    {  \n  \n      // Initialize a new instance of the SpeechSynthesizer.  \n      using (SpeechSynthesizer synth = new SpeechSynthesizer())  \n      {  \n  \n        // Configure the audio output.   \n        synth.SetOutputToDefaultAudioDevice();  \n  \n        // Create a prompt from a string.  \n        Prompt color = new Prompt(\"What is your favorite color?\");  \n  \n        // Speak the contents of the prompt synchronously.  \n        synth.Speak(color);  \n      }  \n  \n      Console.WriteLine();  \n      Console.WriteLine(\"Press any key to exit...\");  \n      Console.ReadKey();  \n    }  \n  }  \n}  \n```"
  syntax:
    content: public void Speak (System.Speech.Synthesis.Prompt prompt);
    parameters:
    - id: prompt
      type: System.Speech.Synthesis.Prompt
      description: "要讀出的內容。"
  overload: System.Speech.Synthesis.SpeechSynthesizer.Speak*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.Speak(System.Speech.Synthesis.PromptBuilder)
  id: Speak(System.Speech.Synthesis.PromptBuilder)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: Speak(PromptBuilder)
  nameWithType: SpeechSynthesizer.Speak(PromptBuilder)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.Speak(PromptBuilder)
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "以同步方式說出的內容<xref href=&quot;System.Speech.Synthesis.PromptBuilder&quot;></xref>物件。"
  remarks: "以非同步方式說出的<xref:System.Speech.Synthesis.PromptBuilder>物件，請使用<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>.</xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A></xref:System.Speech.Synthesis.PromptBuilder>內容"
  example:
  - "The following example creates a <xref:System.Speech.Synthesis.PromptBuilder> object from a string and passes the object as an argument to the Speak method.  \n  \n```c#  \nusing System;  \nusing System.Speech.Synthesis;  \n  \nnamespace SampleSynthesis  \n{  \n  class Program  \n  {  \n    static void Main(string[] args)  \n    {  \n  \n      // Initialize a new instance of the SpeechSynthesizer.  \n      using (SpeechSynthesizer synth = new SpeechSynthesizer())  \n      {  \n  \n        // Configure the audio output.   \n        synth.SetOutputToDefaultAudioDevice();  \n  \n        // Create a PromptBuilder object and append a text string.  \n        PromptBuilder song = new PromptBuilder();  \n        song.AppendText(\"Say the name of the song you want to hear\");  \n  \n        // Speak the contents of the prompt synchronously.  \n        synth.Speak(song);  \n      }  \n  \n      Console.WriteLine();  \n      Console.WriteLine(\"Press any key to exit...\");  \n      Console.ReadKey();  \n    }  \n  }  \n}  \n```"
  syntax:
    content: public void Speak (System.Speech.Synthesis.PromptBuilder promptBuilder);
    parameters:
    - id: promptBuilder
      type: System.Speech.Synthesis.PromptBuilder
      description: "要讀出的內容。"
  overload: System.Speech.Synthesis.SpeechSynthesizer.Speak*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.Speak(System.String)
  id: Speak(System.String)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: Speak(String)
  nameWithType: SpeechSynthesizer.Speak(String)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.Speak(String)
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "以同步方式來說字串的內容。"
  remarks: "若要以同步方式使用字串，包含 SSML 標記，使用<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>方法。</xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> 若要以非同步方式使用字串的內容，請使用<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>方法。</xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>"
  example:
  - "As shown in the following example, the Speak method provides the simplest means to generate speech output synchronously.  \n  \n```c#  \nusing System;  \nusing System.Speech.Synthesis;  \n  \nnamespace SampleSynthesis  \n{  \n  class Program  \n  {  \n    static void Main(string[] args)  \n    {  \n  \n      // Initialize a new instance of the SpeechSynthesizer.  \n      using (SpeechSynthesizer synth = new SpeechSynthesizer())  \n      {  \n  \n        // Configure the audio output.   \n        synth.SetOutputToDefaultAudioDevice();  \n  \n        // Speak a string synchronously.  \n        synth.Speak(\"What is your favorite color?\");  \n      }  \n  \n      Console.WriteLine();  \n      Console.WriteLine(\"Press any key to exit...\");  \n      Console.ReadKey();  \n    }  \n  }  \n}  \n```"
  syntax:
    content: public void Speak (string textToSpeak);
    parameters:
    - id: textToSpeak
      type: System.String
      description: "要讀出的文字。"
  overload: System.Speech.Synthesis.SpeechSynthesizer.Speak*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(System.Speech.Synthesis.Prompt)
  id: SpeakAsync(System.Speech.Synthesis.Prompt)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: SpeakAsync(Prompt)
  nameWithType: SpeechSynthesizer.SpeakAsync(Prompt)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(Prompt)
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "以非同步方式說出的內容<xref href=&quot;System.Speech.Synthesis.Prompt&quot;></xref>物件。"
  remarks: "您可以取消非同步說話的提示字元，搭配<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel%2A>或<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll%2A>方法。</xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel%2A>       若要以同步方式說出的<xref:System.Speech.Synthesis.Prompt>物件，請使用<xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>.</xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A></xref:System.Speech.Synthesis.Prompt>內容"
  example:
  - "The following example creates a <xref:System.Speech.Synthesis.Prompt> object from a string and passes the object as an argument to the SpeakAsync method.  \n  \n```c#  \nusing System;  \nusing System.Speech.Synthesis;  \n  \nnamespace SampleSynthesis  \n{  \n  class Program  \n  {  \n    static void Main(string[] args)  \n    {  \n  \n      // Initialize a new instance of the SpeechSynthesizer.  \n      SpeechSynthesizer synth = new SpeechSynthesizer();  \n  \n      // Configure the audio output.   \n      synth.SetOutputToDefaultAudioDevice();  \n  \n      // Create a prompt from a string.  \n      Prompt color = new Prompt(\"What is your favorite color?\");  \n  \n      // Speak the contents of the prompt asynchronously.  \n      synth.SpeakAsync(color);  \n  \n      Console.WriteLine();  \n      Console.WriteLine(\"Press any key to exit...\");  \n      Console.ReadKey();  \n    }  \n  }  \n}  \n  \n```"
  syntax:
    content: public void SpeakAsync (System.Speech.Synthesis.Prompt prompt);
    parameters:
    - id: prompt
      type: System.Speech.Synthesis.Prompt
      description: "要讀出的內容。"
  overload: System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(System.Speech.Synthesis.PromptBuilder)
  id: SpeakAsync(System.Speech.Synthesis.PromptBuilder)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: SpeakAsync(PromptBuilder)
  nameWithType: SpeechSynthesizer.SpeakAsync(PromptBuilder)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(PromptBuilder)
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "以非同步方式說出的內容<xref href=&quot;System.Speech.Synthesis.PromptBuilder&quot;></xref>物件。"
  remarks: "若要以同步方式說出的<xref:System.Speech.Synthesis.PromptBuilder>物件，請使用<xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>.</xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A></xref:System.Speech.Synthesis.PromptBuilder>內容"
  example:
  - "The following example creates a <xref:System.Speech.Synthesis.PromptBuilder> object from a string and passes the object as an argument to the SpeakAsync method.  \n  \n```c#  \nusing System;  \nusing System.Speech.Synthesis;  \n  \nnamespace SampleSynthesis  \n{  \n  class Program  \n  {  \n    static void Main(string[] args)  \n    {  \n  \n      // Initialize a new instance of the SpeechSynthesizer.  \n      SpeechSynthesizer synth = new SpeechSynthesizer();  \n  \n      // Configure the audio output.   \n      synth.SetOutputToDefaultAudioDevice();  \n  \n      // Create a PromptBuilder object and append a text string.  \n      PromptBuilder song = new PromptBuilder();  \n      song.AppendText(\"Say the name of the song you want to hear\");  \n  \n      // Speak the contents of the prompt asynchronously.  \n      synth.SpeakAsync(song);  \n  \n      Console.WriteLine();  \n      Console.WriteLine(\"Press any key to exit...\");  \n      Console.ReadKey();  \n    }  \n  }  \n}  \n  \n```"
  syntax:
    content: public System.Speech.Synthesis.Prompt SpeakAsync (System.Speech.Synthesis.PromptBuilder promptBuilder);
    parameters:
    - id: promptBuilder
      type: System.Speech.Synthesis.PromptBuilder
      description: "要讀出的內容。"
    return:
      type: System.Speech.Synthesis.Prompt
      description: "傳回物件，其中包含要讀出的內容。"
  overload: System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(System.String)
  id: SpeakAsync(System.String)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: SpeakAsync(String)
  nameWithType: SpeechSynthesizer.SpeakAsync(String)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(String)
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "以非同步方式來說字串的內容。"
  remarks: "若要以非同步方式使用字串，包含 SSML 標記，使用<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A>方法。</xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> 若要以同步方式使用字串的內容，請使用<xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>方法。</xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> 您可以取消非同步說話的提示字元，搭配<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel%2A>或<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll%2A>方法。</xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel%2A>"
  example:
  - "As shown in the following example, the SpeakAsync method provides the simplest means to generate speech output asynchronously.  \n  \n```c#  \nusing System;  \nusing System.Speech.Synthesis;  \n  \nnamespace SampleSynthesis  \n{  \n  class Program  \n  {  \n    static void Main(string[] args)  \n    {  \n  \n      // Initialize a new instance of the SpeechSynthesizer.  \n      SpeechSynthesizer synth = new SpeechSynthesizer();  \n  \n      // Configure the audio output.   \n      synth.SetOutputToDefaultAudioDevice();  \n  \n      // Speak a string asynchronously.  \n      synth.SpeakAsync(\"What is your favorite color?\");  \n  \n      Console.WriteLine();  \n      Console.WriteLine(\"Press any key to exit...\");  \n      Console.ReadKey();  \n    }  \n  }  \n}  \n  \n```"
  syntax:
    content: public System.Speech.Synthesis.Prompt SpeakAsync (string textToSpeak);
    parameters:
    - id: textToSpeak
      type: System.String
      description: "要讀出的文字。"
    return:
      type: System.Speech.Synthesis.Prompt
      description: "傳回物件，其中包含要讀出的內容。"
  overload: System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel(System.Speech.Synthesis.Prompt)
  id: SpeakAsyncCancel(System.Speech.Synthesis.Prompt)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: SpeakAsyncCancel(Prompt)
  nameWithType: SpeechSynthesizer.SpeakAsyncCancel(Prompt)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel(Prompt)
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "取消非同步合成作業排入佇列的提示。"
  remarks: "您也可以使用這個方法來取消非同步說話下列作業:-內容<xref:System.String>所指定<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=fullName>方法。</xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=fullName> </xref:System.String>      -內容<xref:System.Speech.Synthesis.PromptBuilder>所指定<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=fullName>方法。</xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=fullName> </xref:System.Speech.Synthesis.PromptBuilder>      -內容<xref:System.String>包含所指定的 SSML<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A>方法。</xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> </xref:System.String>       當您呼叫<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=fullName>， <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=fullName>，或<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A>，System.Speech 建立<xref:System.Speech.Synthesis.Prompt>物件，並填入內容的方法的參數，然後傳回<xref:System.Speech.Synthesis.Prompt>物件。</xref:System.Speech.Synthesis.Prompt> </xref:System.Speech.Synthesis.Prompt> </xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=fullName> </xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=fullName> 如果您保留一份傳回<xref:System.Speech.Synthesis.Prompt>，您可以將它傳遞至取消讀出的內容中指定 SpeakAsyncCancel<xref:System.String>或<xref:System.Speech.Synthesis.PromptBuilder>物件。</xref:System.Speech.Synthesis.PromptBuilder> </xref:System.String> </xref:System.Speech.Synthesis.Prompt>"
  syntax:
    content: public void SpeakAsyncCancel (System.Speech.Synthesis.Prompt prompt);
    parameters:
    - id: prompt
      type: System.Speech.Synthesis.Prompt
      description: "要取消 speak 作業內容。"
  overload: System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll
  id: SpeakAsyncCancelAll
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: SpeakAsyncCancelAll()
  nameWithType: SpeechSynthesizer.SpeakAsyncCancelAll()
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll()
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "取消所有佇列、 非同步、 語音合成作業。"
  remarks: ''
  example:
  - "The following example show a use of SpeakAsyncCancelAll to cancel the asynchronous speaking of a prompt, so that a new prompt can be spoken. Note that the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> event fires when a <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> operation is cancelled.  \n  \n```c#  \nusing System;  \nusing System.Speech.Synthesis;  \nusing System.Threading;  \n  \nnamespace SampleSynthesis  \n{  \n  class Program  \n  {  \n  \n    static void Main(string[] args)  \n    {  \n  \n      // Initialize a new instance of the SpeechSynthesizer.  \n      SpeechSynthesizer synth = new SpeechSynthesizer();  \n  \n      // Configure the audio output.   \n      synth.SetOutputToDefaultAudioDevice();  \n  \n      // Subscribe to the StateChanged event.  \n      synth.StateChanged += new EventHandler<StateChangedEventArgs>(synth_StateChanged);  \n  \n      // Subscribe to the SpeakProgress event.  \n      synth.SpeakProgress += new EventHandler<SpeakProgressEventArgs>(synth_SpeakProgress);  \n  \n      // Subscribe to the SpeakCompleted event.  \n      synth.SpeakCompleted += new EventHandler<SpeakCompletedEventArgs>(synth_SpeakCompleted);  \n  \n      // Begin speaking a text string asynchronously.  \n      synth.SpeakAsync(\"Speech is an effective and natural way for people to interact with applications, \" +  \n        \"complementing or even replacing the use of mice, keyboards, controllers, and gestures.\");  \n  \n      // Speak for four seconds.  \n      Thread.Sleep(4000);  \n  \n      // Cancel the SpeakAsync operation and wait one second.  \n      synth.SpeakAsyncCancelAll();  \n      Thread.Sleep(1000);  \n  \n      // Speak a new text string.  \n      synth.Speak(\"An urgent email message has arrived. Do you want to hear it?\");  \n  \n      Console.WriteLine();  \n      Console.WriteLine(\"Press any key to exit...\");  \n      Console.ReadKey();  \n    }  \n  \n    // Write to the console when the SpeakAsync operation has been cancelled.  \n    static void synth_SpeakCompleted(object sender, SpeakCompletedEventArgs e)  \n    {  \n      Console.WriteLine(\"\\nThe SpeakAsync operation was cancelled!!\");  \n    }  \n  \n    // When it changes, write the state of the SpeechSynthesizer to the console.  \n    static void synth_StateChanged(object sender, StateChangedEventArgs e)  \n    {  \n      Console.WriteLine(\"\\nSynthesizer State: {0}    Previous State: {1}\\n\", e.State, e.PreviousState);  \n    }  \n  \n    // Write the text being spoken by the SpeechSynthesizer to the console.  \n    static void synth_SpeakProgress(object sender, SpeakProgressEventArgs e)  \n    {  \n      Console.WriteLine(e.Text);  \n    }      \n  }    \n}  \n  \n```"
  syntax:
    content: public void SpeakAsyncCancelAll ();
    parameters: []
  overload: System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted
  id: SpeakCompleted
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: SpeakCompleted
  nameWithType: SpeechSynthesizer.SpeakCompleted
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted
  type: Event
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "引發的時機<xref href=&quot;System.Speech.Synthesis.SpeechSynthesizer&quot;></xref>完成說話的提示。"
  remarks: "<xref:System.Speech.Synthesis.SpeechSynthesizer>引發 SpeakCompleted 事件完成後的任何<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>或<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A>方法。</xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer>       <xref:System.Speech.Synthesis.SpeakCompletedEventArgs>類別沒有屬性，而且不會從 SpeakCompleted 事件傳回資料。</xref:System.Speech.Synthesis.SpeakCompletedEventArgs> 它可讓應用程式作者撰寫 SpeakCompleted 事件的事件處理常式。"
  syntax:
    content: public event EventHandler<System.Speech.Synthesis.SpeakCompletedEventArgs> SpeakCompleted;
    return:
      type: System.EventHandler{System.Speech.Synthesis.SpeakCompletedEventArgs}
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress
  id: SpeakProgress
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: SpeakProgress
  nameWithType: SpeechSynthesizer.SpeakProgress
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress
  type: Event
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "之後引發<xref href=&quot;System.Speech.Synthesis.SpeechSynthesizer&quot;></xref>說出每個個別的單字的提示。"
  remarks: "<xref:System.Speech.Synthesis.SpeechSynthesizer>引發這個事件，它使用任何的提示字元中，說出每個新字<xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>， <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>， <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>，或<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A>方法。</xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer> 如需範例和相關聯的事件資料的詳細資訊，請參閱<xref:System.Speech.Synthesis.SpeakProgressEventArgs>.</xref:System.Speech.Synthesis.SpeakProgressEventArgs>"
  syntax:
    content: public event EventHandler<System.Speech.Synthesis.SpeakProgressEventArgs> SpeakProgress;
    return:
      type: System.EventHandler{System.Speech.Synthesis.SpeakProgressEventArgs}
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml(System.String)
  id: SpeakSsml(System.String)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: SpeakSsml(String)
  nameWithType: SpeechSynthesizer.SpeakSsml(String)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml(String)
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "以同步方式來說<xref:System.String>包含 SSML 標記。</xref:System.String>"
  remarks: "內容`textToSpeak`參數必須包含`speak`項目且必須符合[語音合成標記語言 (SSML) 1.0 版](http://go.microsoft.com/fwlink/?LinkId=201763)。 如需詳細資訊，請參閱[語音合成標記語言參考](http://msdn.microsoft.com/en-us/0c51279e-84d2-4f73-a924-8832039abf94)。       若要以非同步方式使用字串，包含 SSML 標記，使用<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A>方法。</xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> 您可以使用<xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>起始同步說話不包含 SSML 標記的字串。</xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>       在這種方法，呼叫<xref:System.Speech.Synthesis.SpeechSynthesizer>可能會引發下列事件:- <xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>.</xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged> </xref:System.Speech.Synthesis.SpeechSynthesizer> 讀出合成器的狀態變更時引發。      -   <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>.</xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted> 合成器開始產生語音時引發。      -   <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>.</xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached> 合成器到達字母或構成的個別音效的語音語言的字母組合，每次引發。      -   <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>.</xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress> 每次引發合成器完成讀出的文字。      -   <xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>.</xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached> 每次引發語音的輸出，則需要在說話或用來產生語音臉部 muscles 的位置變更。      -   <xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>.</xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached> 合成器遇到提示字元中的書籤時所引發。      -   <xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>.</xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange> 讀出的語音合成器的變更時引發。       <xref:System.Speech.Synthesis.SpeechSynthesizer>不會引發<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>處理 SpeakSsml 方法時發生的事件。</xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> </xref:System.Speech.Synthesis.SpeechSynthesizer>"
  example:
  - "The following example renders the date 1/29/2009 as a date, in month, day, year order.  \n  \n```c#  \nusing System;  \nusing System.Speech.Synthesis;  \n  \nnamespace SampleSynthesis  \n{  \n  class Program  \n  {  \n    static void Main(string[] args)  \n    {  \n  \n      // Initialize a new instance of the SpeechSynthesizer.  \n      SpeechSynthesizer synth = new SpeechSynthesizer();  \n  \n      // Configure the audio output.   \n      synth.SetOutputToDefaultAudioDevice();  \n  \n      // Build an SSML prompt in a string.  \n      string str = \"<speak version=\\\"1.0\\\"\";  \n      str += \" xmlns=\\\"http://www.w3.org/2001/10/synthesis\\\"\";  \n      str += \" xml:lang=\\\"en-US\\\">\";  \n      str += \"<say-as type=\\\"date:mdy\\\"> 1/29/2009 </say-as>\";  \n      str += \"</speak>\";  \n  \n      // Speak the contents of the prompt asynchronously.  \n      synth.SpeakSsml(str);  \n  \n      Console.WriteLine(\"Press any key to exit...\");  \n      Console.ReadKey();  \n    }  \n  }  \n}  \n```"
  syntax:
    content: public void SpeakSsml (string textToSpeak);
    parameters:
    - id: textToSpeak
      type: System.String
      description: "要讀出的 SSML 字串。"
  overload: System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync(System.String)
  id: SpeakSsmlAsync(System.String)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: SpeakSsmlAsync(String)
  nameWithType: SpeechSynthesizer.SpeakSsmlAsync(String)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync(String)
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "以非同步方式來說<xref:System.String>包含 SSML 標記。</xref:System.String>"
  remarks: "內容`textToSpeak`參數必須包含`speak`項目且必須符合[語音合成標記語言 (SSML) 1.0 版](http://go.microsoft.com/fwlink/?LinkId=201763)。 如需詳細資訊，請參閱[語音合成標記語言參考](http://msdn.microsoft.com/en-us/0c51279e-84d2-4f73-a924-8832039abf94)。       若要以同步方式使用字串，包含 SSML 標記，使用<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>方法。</xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> 您可以使用<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>起始字串不包含 SSML 標記的非同步說話。</xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>       在這種方法，呼叫<xref:System.Speech.Synthesis.SpeechSynthesizer>可能會引發下列事件:- <xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>.</xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged> </xref:System.Speech.Synthesis.SpeechSynthesizer> 讀出合成器的狀態變更時引發。      -   <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>.</xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted> 合成器開始產生語音時引發。      -   <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>.</xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached> 合成器到達字母或構成的個別音效的語音語言的字母組合，每次引發。      -   <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>.</xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress> 每次引發合成器完成讀出的文字。      -   <xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>.</xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached> 每次引發語音的輸出，則需要在說話或用來產生語音臉部 muscles 的位置變更。      -   <xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>.</xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached> 合成器遇到提示字元中的書籤時所引發。      -   <xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>.</xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange> 讀出的語音合成器的變更時引發。      -   <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>.</xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> 合成器完成處理 SpeakSsmlAsync 作業時引發。       如果您的應用程式 dos 不需要執行工作時，您可以使用<xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>或<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>方法來以同步方式產生語音。</xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>"
  example:
  - "```  \nusing System;  \nusing System.Speech.Synthesis;  \n  \nnamespace SampleSynthesis  \n{  \n  class Program  \n  {  \n    static void Main(string[] args)  \n    {  \n  \n      // Initialize a new instance of the SpeechSynthesizer.  \n      SpeechSynthesizer synth = new SpeechSynthesizer();  \n  \n      // Configure the audio output.   \n      synth.SetOutputToDefaultAudioDevice();  \n  \n      // Build an SSML prompt in a string.  \n      string str = \"<speak version=\\\"1.0\\\"\";  \n      str += \" xmlns=\\\"http://www.w3.org/2001/10/synthesis\\\"\";  \n      str += \" xml:lang=\\\"en-US\\\">\";  \n      str += \"<say-as type=\\\"date:mdy\\\"> 1/29/2009 </say-as>\";  \n      str += \"</speak>\";  \n  \n      // Speak the contents of the prompt asynchronously.  \n      synth.SpeakSsmlAsync(str);  \n  \n      Console.WriteLine(\"Press any key to exit...\");  \n      Console.ReadKey();  \n    }  \n  }  \n}  \n```"
  syntax:
    content: public System.Speech.Synthesis.Prompt SpeakSsmlAsync (string textToSpeak);
    parameters:
    - id: textToSpeak
      type: System.String
      description: "要讀出的 SMML 標記。"
    return:
      type: System.Speech.Synthesis.Prompt
      description: "以非同步方式來說<xref:System.String>包含 SSML 標記。</xref:System.String>"
  overload: System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted
  id: SpeakStarted
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: SpeakStarted
  nameWithType: SpeechSynthesizer.SpeakStarted
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted
  type: Event
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "引發的時機<xref href=&quot;System.Speech.Synthesis.SpeechSynthesizer&quot;></xref>開始說話的提示。"
  remarks: "<xref:System.Speech.Synthesis.SpeechSynthesizer>引發這個事件時就會開始處理使用的任何提示<xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>， <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>， <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>，或<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A>方法。</xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer>       <xref:System.Speech.Synthesis.SpeakStartedEventArgs>類別沒有屬性，而且不會從 SpeakStarted 事件傳回資料。</xref:System.Speech.Synthesis.SpeakStartedEventArgs> 它可讓應用程式作者撰寫 SpeakStarted 事件的事件處理常式。"
  syntax:
    content: public event EventHandler<System.Speech.Synthesis.SpeakStartedEventArgs> SpeakStarted;
    return:
      type: System.EventHandler{System.Speech.Synthesis.SpeakStartedEventArgs}
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.State
  id: State
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: State
  nameWithType: SpeechSynthesizer.State
  fullName: System.Speech.Synthesis.SpeechSynthesizer.State
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "取得目前說話狀態<xref href=&quot;System.Speech.Synthesis.SpeechSynthesizer&quot;></xref>物件。"
  remarks: "若要取得<xref:System.Speech.Synthesis.SpeechSynthesizer>之後的變更，使用<xref:System.Speech.Synthesis.StateChangedEventArgs.State%2A>屬性<xref:System.Speech.Synthesis.StateChangedEventArgs>類別</xref:System.Speech.Synthesis.StateChangedEventArgs></xref:System.Speech.Synthesis.StateChangedEventArgs.State%2A></xref:System.Speech.Synthesis.SpeechSynthesizer>的新狀態"
  example:
  - "The following example illustrates the state of the <xref:System.Speech.Synthesis.SpeechSynthesizer> before, during, and after speaking a prompt.  \n  \n```c#  \nusing System;  \nusing System.Threading;  \nusing System.Speech.Synthesis;  \n  \nnamespace SampleSynthesis  \n{  \n  class Program  \n  {  \n    static void Main(string[] args)  \n    {  \n  \n      // Initialize a new instance of the SpeechSynthesizer.  \n      SpeechSynthesizer synth = new SpeechSynthesizer() ;  \n  \n      // Configure the audio output.   \n      synth.SetOutputToDefaultAudioDevice();  \n  \n      // Subscribe to the SpeakProgress event.         \n      synth.SpeakProgress += new EventHandler<SpeakProgressEventArgs>(synth_SpeakProgress);  \n  \n      // Write the state of the SpeechSynthesizer to the console.  \n      Console.WriteLine(\"Current Synthesizer state: \" + synth.State + \"\\n\");  \n  \n      // Speak a string asynchronously.  \n      synth.SpeakAsync(\"What is your favorite color?\");  \n  \n      // Write the state of the SpeechSynthesizer to the console while it is speaking.  \n      Thread.Sleep(1000);  \n      Console.WriteLine(\"\\n - Current Synthesizer state: \" + synth.State + \" - \\n\");  \n  \n      // Write the state of the SpeechSynthesizer to the console after it is done speaking.  \n      Thread.Sleep(2000);  \n      Console.WriteLine(\"\\nCurrent Synthesizer state: \" + synth.State);  \n  \n      Console.WriteLine();  \n      Console.WriteLine(\"Press any key to exit...\");  \n      Console.ReadKey();  \n    }  \n  \n    static void synth_SpeakProgress(object sender, SpeakProgressEventArgs e)  \n    {  \n      Console.WriteLine(e.Text);  \n    }  \n  }  \n}  \n  \n```"
  syntax:
    content: public System.Speech.Synthesis.SynthesizerState State { get; }
    return:
      type: System.Speech.Synthesis.SynthesizerState
      description: "傳回目前讀出狀態<xref href=&quot;System.Speech.Synthesis.SpeechSynthesizer&quot;></xref>物件。"
  overload: System.Speech.Synthesis.SpeechSynthesizer.State*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.StateChanged
  id: StateChanged
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: StateChanged
  nameWithType: SpeechSynthesizer.StateChanged
  fullName: System.Speech.Synthesis.SpeechSynthesizer.StateChanged
  type: Event
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "引發的時機的狀態<xref href=&quot;System.Speech.Synthesis.SpeechSynthesizer&quot;></xref>變更。"
  remarks: "<xref:System.Speech.Synthesis.SpeechSynthesizer>引發這個事件時它說話<xref:System.Speech.Synthesis.SpeechSynthesizer.State%2A>變更。</xref:System.Speech.Synthesis.SpeechSynthesizer.State%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer> 如需範例和相關聯的事件資料的詳細資訊，請參閱<xref:System.Speech.Synthesis.StateChangedEventArgs>.</xref:System.Speech.Synthesis.StateChangedEventArgs>       若要暫停及繼續語音合成器，請使用<xref:System.Speech.Synthesis.SpeechSynthesizer.Pause%2A>和<xref:System.Speech.Synthesis.SpeechSynthesizer.Resume%2A>方法。</xref:System.Speech.Synthesis.SpeechSynthesizer.Resume%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.Pause%2A>"
  syntax:
    content: public event EventHandler<System.Speech.Synthesis.StateChangedEventArgs> StateChanged;
    return:
      type: System.EventHandler{System.Speech.Synthesis.StateChangedEventArgs}
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.VisemeReached
  id: VisemeReached
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: VisemeReached
  nameWithType: SpeechSynthesizer.VisemeReached
  fullName: System.Speech.Synthesis.SpeechSynthesizer.VisemeReached
  type: Event
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "當達到 viseme 時引發。"
  remarks: "Viseme 時說音素基本說話和圖示的位置。 Visemes 是音素的視覺化呈現。       System.Speech 支援 21 visemes 美式英文，其中每一個都對應至一或多個的音素。  當達到新音素具有不同的對應 viseme 比前一個音素達到時，會引發 VisemeReached 事件。 因為某些 visemes 表示一個以上的音素，並不會產生 VisemeReached 事件，若到達下一個音素對應至相同的 viseme 為先前的音素。 例如，對於口語 「 此區域 」， <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>&quot;this&quot;中的&quot;s&quot;和&quot;z&quot;「 區域 」 中的就會引發事件。</xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached> 不過，VisemeReached 不會引發事件的&quot;z&quot;中 「 區域 」 因為它會對應至相同的 viseme 為&quot;this&quot;中的&quot;s&quot;。       以下是 21 SAPI 音素轉換和對應於 U.S.english viseme 音素群組的清單。      |Viseme |Phoneme(s) |  |------------|------------------|  |&0; | 無回應 |  |&1; | ae，ax，ah |  |&2; | aa |  |&3; | ao |  |&4; | 金鑰，eh，喔 |  |&5; | e |  |&6; | y、 iy、 kartris、 ix |  |&7; | w，uw |  |&8; |o |  |&9; | 輸入 |  |&10; | oy |  |&11; | ay |  |&12; | h |  |&13; | r |  |&14; | l |  |&15; | s、 z |  |&16; | sh，ch、 jh、 zh-chs 和 |  |&17; | th、 dh |  |&18; | f、 v |  |&19; | d、 t、 n |  |&20; | k、 g、 ng |  |&21; | p、 b、 m |      如需與相關聯的資料`VisemeReached`事件，請參閱<xref:System.Speech.Synthesis.VisemeReachedEventArgs>.</xref:System.Speech.Synthesis.VisemeReachedEventArgs>"
  syntax:
    content: public event EventHandler<System.Speech.Synthesis.VisemeReachedEventArgs> VisemeReached;
    return:
      type: System.EventHandler{System.Speech.Synthesis.VisemeReachedEventArgs}
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.Voice
  id: Voice
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: Voice
  nameWithType: SpeechSynthesizer.Voice
  fullName: System.Speech.Synthesis.SpeechSynthesizer.Voice
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "取得目前的語音的資訊<xref href=&quot;System.Speech.Synthesis.SpeechSynthesizer&quot;></xref>物件。"
  remarks: "當您初始化新<xref:System.Speech.Synthesis.SpeechSynthesizer>，它會使用預設系統語音。</xref:System.Speech.Synthesis.SpeechSynthesizer> 若要設定<xref:System.Speech.Synthesis.SpeechSynthesizer>物件使用其中一個已安裝的語音合成聲音，請使用<xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A>或<xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A>方法。</xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer> 若要取得的語音已安裝的資訊，請使用的<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>方法和<xref:System.Speech.Synthesis.VoiceInfo>類別。</xref:System.Speech.Synthesis.VoiceInfo> </xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>"
  example:
  - "The following example initializes an instance of <xref:System.Speech.Synthesis.SpeechSynthesizer>and gets information about the current voice.  \n  \n```c#  \nusing System;  \nusing System.IO;  \nusing System.Speech.Synthesis;  \nusing System.Speech.AudioFormat;  \n  \nnamespace SampleSynthesis  \n{  \n  class Program  \n  {  \n    static void Main(string[] args)  \n    {  \n  \n      // Initialize a new instance of the SpeechSynthesizer.  \n      using (SpeechSynthesizer synth = new SpeechSynthesizer())  \n      {  \n  \n        // Get information about supported audio formats.  \n        string AudioFormats = \"\";  \n        foreach (SpeechAudioFormatInfo fmt in synth.Voice.SupportedAudioFormats)  \n        {  \n          AudioFormats += String.Format(\"{0}\\n\",  \n          fmt.EncodingFormat.ToString());  \n        }  \n  \n        // Write information about the voice to the console.  \n        Console.WriteLine(\" Name:          \" + synth.Voice.Name);  \n        Console.WriteLine(\" Culture:       \" + synth.Voice.Culture);  \n        Console.WriteLine(\" Age:           \" + synth.Voice.Age);  \n        Console.WriteLine(\" Gender:        \" + synth.Voice.Gender);  \n        Console.WriteLine(\" Description:   \" + synth.Voice.Description);  \n        Console.WriteLine(\" ID:            \" + synth.Voice.Id);  \n        if (synth.Voice.SupportedAudioFormats.Count != 0)  \n        {  \n          Console.WriteLine(\" Audio formats: \" + AudioFormats);  \n        }  \n        else  \n        {  \n          Console.WriteLine(\" No supported audio formats found\");  \n        }  \n  \n        // Get additional information about the voice.  \n        string AdditionalInfo = \"\";  \n        foreach (string key in synth.Voice.AdditionalInfo.Keys)  \n        {  \n          AdditionalInfo += String.Format(\"  {0}: {1}\\n\",  \n            key, synth.Voice.AdditionalInfo[key]);  \n        }  \n  \n        Console.WriteLine(\" Additional Info - \" + AdditionalInfo);  \n        Console.WriteLine();  \n      }  \n  \n      Console.WriteLine();  \n      Console.WriteLine(\"Press any key to exit...\");  \n      Console.ReadKey();  \n    }  \n  }  \n}  \n  \n```"
  syntax:
    content: public System.Speech.Synthesis.VoiceInfo Voice { get; }
    return:
      type: System.Speech.Synthesis.VoiceInfo
      description: "傳回目前的語音的資訊<xref href=&quot;System.Speech.Synthesis.SpeechSynthesizer&quot;></xref>物件。"
  overload: System.Speech.Synthesis.SpeechSynthesizer.Voice*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.VoiceChange
  id: VoiceChange
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: VoiceChange
  nameWithType: SpeechSynthesizer.VoiceChange
  fullName: System.Speech.Synthesis.SpeechSynthesizer.VoiceChange
  type: Event
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "引發的時機的語音<xref href=&quot;System.Speech.Synthesis.SpeechSynthesizer&quot;></xref>變更。"
  remarks: "如需範例和資料與事件相關聯的相關資訊，請參閱<xref:System.Speech.Synthesis.VoiceChangeEventArgs>.</xref:System.Speech.Synthesis.VoiceChangeEventArgs>       您可以變更語音的<xref:System.Speech.Synthesis.SpeechSynthesizer>會使用與任何一<xref:System.Speech.Synthesis.PromptBuilder>的<xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A>方法或<xref:System.Speech.Synthesis.SpeechSynthesizer>的<xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A>或<xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A>方法。</xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer> </xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> </xref:System.Speech.Synthesis.PromptBuilder> </xref:System.Speech.Synthesis.SpeechSynthesizer>"
  syntax:
    content: public event EventHandler<System.Speech.Synthesis.VoiceChangeEventArgs> VoiceChange;
    return:
      type: System.EventHandler{System.Speech.Synthesis.VoiceChangeEventArgs}
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.Volume
  id: Volume
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: Volume
  nameWithType: SpeechSynthesizer.Volume
  fullName: System.Speech.Synthesis.SpeechSynthesizer.Volume
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "取得或設定輸出數量<xref href=&quot;System.Speech.Synthesis.SpeechSynthesizer&quot;></xref>物件。"
  remarks: ''
  example:
  - "The following example sets the volume of the <xref:System.Speech.Synthesis.SpeechSynthesizer>'s audio output for the synthesized voice and the WAV file.  \n  \n```c#  \nusing System;  \nusing System.Speech.Synthesis;  \n  \nnamespace SampleSynthesis  \n{  \n  class Program  \n  {  \n    static void Main(string[] args)  \n    {  \n  \n      // Initialize a new instance of the SpeechSynthesizer.  \n      using (SpeechSynthesizer synth = new SpeechSynthesizer())  \n      {  \n  \n        // Configure the audio output.   \n        synth.SetOutputToDefaultAudioDevice();  \n  \n        // Set the volume of the SpeechSynthesizer's ouput.  \n        synth.Volume = 60;  \n  \n        // Build a prompt containing recorded audio and synthesized speech.  \n        PromptBuilder builder = new PromptBuilder(  \n          new System.Globalization.CultureInfo(\"en-US\"));  \n        builder.AppendAudio(\"C:\\\\Test\\\\WelcomeToContosoRadio.wav\");  \n        builder.AppendText(  \n          \"The weather forecast for today is partly cloudy with some sun breaks.\");  \n  \n        // Speak the prompt.  \n        synth.Speak(builder);  \n      }  \n  \n      Console.WriteLine();  \n      Console.WriteLine(\"Press any key to exit...\");  \n      Console.ReadKey();  \n    }  \n  }  \n}  \n```"
  syntax:
    content: public int Volume { get; set; }
    return:
      type: System.Int32
      description: "傳回的磁碟區<xref href=&quot;System.Speech.Synthesis.SpeechSynthesizer&quot;> </xref>，從 0 到 100 之間。"
  overload: System.Speech.Synthesis.SpeechSynthesizer.Volume*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Speech.Synthesis.SpeechSynthesizer.#ctor
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: SpeechSynthesizer()
  nameWithType: SpeechSynthesizer.SpeechSynthesizer()
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SpeechSynthesizer()
- uid: System.Speech.Synthesis.SpeechSynthesizer.AddLexicon(System.Uri,System.String)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: AddLexicon(Uri,String)
  nameWithType: SpeechSynthesizer.AddLexicon(Uri,String)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.AddLexicon(Uri,String)
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: BookmarkReached
  nameWithType: SpeechSynthesizer.BookmarkReached
  fullName: System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached
- uid: System.EventHandler{System.Speech.Synthesis.BookmarkReachedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<BookmarkReachedEventArgs>
  nameWithType: EventHandler<BookmarkReachedEventArgs>
  fullName: System.EventHandler<System.Speech.Synthesis.BookmarkReachedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Speech.Synthesis.BookmarkReachedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Speech.Synthesis.BookmarkReachedEventArgs
    name: BookmarkReachedEventArgs
    nameWithType: BookmarkReachedEventArgs
    fullName: BookmarkReachedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Speech.Synthesis.SpeechSynthesizer.Dispose
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: Dispose()
  nameWithType: SpeechSynthesizer.Dispose()
  fullName: System.Speech.Synthesis.SpeechSynthesizer.Dispose()
- uid: System.Speech.Synthesis.SpeechSynthesizer.Finalize
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: Finalize()
  nameWithType: SpeechSynthesizer.Finalize()
  fullName: System.Speech.Synthesis.SpeechSynthesizer.Finalize()
- uid: System.Speech.Synthesis.SpeechSynthesizer.GetCurrentlySpokenPrompt
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: GetCurrentlySpokenPrompt()
  nameWithType: SpeechSynthesizer.GetCurrentlySpokenPrompt()
  fullName: System.Speech.Synthesis.SpeechSynthesizer.GetCurrentlySpokenPrompt()
- uid: System.Speech.Synthesis.Prompt
  parent: System.Speech.Synthesis
  isExternal: false
  name: Prompt
  nameWithType: Prompt
  fullName: System.Speech.Synthesis.Prompt
- uid: System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: GetInstalledVoices()
  nameWithType: SpeechSynthesizer.GetInstalledVoices()
  fullName: System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices()
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Speech.Synthesis.InstalledVoice}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<InstalledVoice>
  nameWithType: ReadOnlyCollection<InstalledVoice>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Speech.Synthesis.InstalledVoice>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Speech.Synthesis.InstalledVoice>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Speech.Synthesis.InstalledVoice
    name: InstalledVoice
    nameWithType: InstalledVoice
    fullName: InstalledVoice
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices(System.Globalization.CultureInfo)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: GetInstalledVoices(CultureInfo)
  nameWithType: SpeechSynthesizer.GetInstalledVoices(CultureInfo)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices(CultureInfo)
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Speech.Synthesis.SpeechSynthesizer.Pause
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: Pause()
  nameWithType: SpeechSynthesizer.Pause()
  fullName: System.Speech.Synthesis.SpeechSynthesizer.Pause()
- uid: System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: PhonemeReached
  nameWithType: SpeechSynthesizer.PhonemeReached
  fullName: System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached
- uid: System.EventHandler{System.Speech.Synthesis.PhonemeReachedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<PhonemeReachedEventArgs>
  nameWithType: EventHandler<PhonemeReachedEventArgs>
  fullName: System.EventHandler<System.Speech.Synthesis.PhonemeReachedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Speech.Synthesis.PhonemeReachedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Speech.Synthesis.PhonemeReachedEventArgs
    name: PhonemeReachedEventArgs
    nameWithType: PhonemeReachedEventArgs
    fullName: PhonemeReachedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Speech.Synthesis.SpeechSynthesizer.Rate
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: Rate
  nameWithType: SpeechSynthesizer.Rate
  fullName: System.Speech.Synthesis.SpeechSynthesizer.Rate
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon(System.Uri)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: RemoveLexicon(Uri)
  nameWithType: SpeechSynthesizer.RemoveLexicon(Uri)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon(Uri)
- uid: System.Speech.Synthesis.SpeechSynthesizer.Resume
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: Resume()
  nameWithType: SpeechSynthesizer.Resume()
  fullName: System.Speech.Synthesis.SpeechSynthesizer.Resume()
- uid: System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: SelectVoice(String)
  nameWithType: SpeechSynthesizer.SelectVoice(String)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(String)
- uid: System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: SelectVoiceByHints(VoiceGender)
  nameWithType: SpeechSynthesizer.SelectVoiceByHints(VoiceGender)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(VoiceGender)
- uid: System.Speech.Synthesis.VoiceGender
  parent: System.Speech.Synthesis
  isExternal: false
  name: VoiceGender
  nameWithType: VoiceGender
  fullName: System.Speech.Synthesis.VoiceGender
- uid: System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: SelectVoiceByHints(VoiceGender,VoiceAge)
  nameWithType: SpeechSynthesizer.SelectVoiceByHints(VoiceGender,VoiceAge)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(VoiceGender,VoiceAge)
- uid: System.Speech.Synthesis.VoiceAge
  parent: System.Speech.Synthesis
  isExternal: false
  name: VoiceAge
  nameWithType: VoiceAge
  fullName: System.Speech.Synthesis.VoiceAge
- uid: System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge,System.Int32)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: SelectVoiceByHints(VoiceGender,VoiceAge,Int32)
  nameWithType: SpeechSynthesizer.SelectVoiceByHints(VoiceGender,VoiceAge,Int32)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(VoiceGender,VoiceAge,Int32)
- uid: System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge,System.Int32,System.Globalization.CultureInfo)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: SelectVoiceByHints(VoiceGender,VoiceAge,Int32,CultureInfo)
  nameWithType: SpeechSynthesizer.SelectVoiceByHints(VoiceGender,VoiceAge,Int32,CultureInfo)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(VoiceGender,VoiceAge,Int32,CultureInfo)
- uid: System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream(System.IO.Stream,System.Speech.AudioFormat.SpeechAudioFormatInfo)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: SetOutputToAudioStream(Stream,SpeechAudioFormatInfo)
  nameWithType: SpeechSynthesizer.SetOutputToAudioStream(Stream,SpeechAudioFormatInfo)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream(Stream,SpeechAudioFormatInfo)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Speech.AudioFormat.SpeechAudioFormatInfo
  parent: System.Speech.AudioFormat
  isExternal: false
  name: SpeechAudioFormatInfo
  nameWithType: SpeechAudioFormatInfo
  fullName: System.Speech.AudioFormat.SpeechAudioFormatInfo
- uid: System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: SetOutputToDefaultAudioDevice()
  nameWithType: SpeechSynthesizer.SetOutputToDefaultAudioDevice()
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice()
- uid: System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: SetOutputToNull()
  nameWithType: SpeechSynthesizer.SetOutputToNull()
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull()
- uid: System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile(System.String)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: SetOutputToWaveFile(String)
  nameWithType: SpeechSynthesizer.SetOutputToWaveFile(String)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile(String)
- uid: System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile(System.String,System.Speech.AudioFormat.SpeechAudioFormatInfo)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: SetOutputToWaveFile(String,SpeechAudioFormatInfo)
  nameWithType: SpeechSynthesizer.SetOutputToWaveFile(String,SpeechAudioFormatInfo)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile(String,SpeechAudioFormatInfo)
- uid: System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream(System.IO.Stream)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: SetOutputToWaveStream(Stream)
  nameWithType: SpeechSynthesizer.SetOutputToWaveStream(Stream)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream(Stream)
- uid: System.Speech.Synthesis.SpeechSynthesizer.Speak(System.Speech.Synthesis.Prompt)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: Speak(Prompt)
  nameWithType: SpeechSynthesizer.Speak(Prompt)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.Speak(Prompt)
- uid: System.Speech.Synthesis.SpeechSynthesizer.Speak(System.Speech.Synthesis.PromptBuilder)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: Speak(PromptBuilder)
  nameWithType: SpeechSynthesizer.Speak(PromptBuilder)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.Speak(PromptBuilder)
- uid: System.Speech.Synthesis.PromptBuilder
  parent: System.Speech.Synthesis
  isExternal: false
  name: PromptBuilder
  nameWithType: PromptBuilder
  fullName: System.Speech.Synthesis.PromptBuilder
- uid: System.Speech.Synthesis.SpeechSynthesizer.Speak(System.String)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: Speak(String)
  nameWithType: SpeechSynthesizer.Speak(String)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.Speak(String)
- uid: System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(System.Speech.Synthesis.Prompt)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: SpeakAsync(Prompt)
  nameWithType: SpeechSynthesizer.SpeakAsync(Prompt)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(Prompt)
- uid: System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(System.Speech.Synthesis.PromptBuilder)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: SpeakAsync(PromptBuilder)
  nameWithType: SpeechSynthesizer.SpeakAsync(PromptBuilder)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(PromptBuilder)
- uid: System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(System.String)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: SpeakAsync(String)
  nameWithType: SpeechSynthesizer.SpeakAsync(String)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(String)
- uid: System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel(System.Speech.Synthesis.Prompt)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: SpeakAsyncCancel(Prompt)
  nameWithType: SpeechSynthesizer.SpeakAsyncCancel(Prompt)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel(Prompt)
- uid: System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: SpeakAsyncCancelAll()
  nameWithType: SpeechSynthesizer.SpeakAsyncCancelAll()
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll()
- uid: System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: SpeakCompleted
  nameWithType: SpeechSynthesizer.SpeakCompleted
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted
- uid: System.EventHandler{System.Speech.Synthesis.SpeakCompletedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<SpeakCompletedEventArgs>
  nameWithType: EventHandler<SpeakCompletedEventArgs>
  fullName: System.EventHandler<System.Speech.Synthesis.SpeakCompletedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Speech.Synthesis.SpeakCompletedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Speech.Synthesis.SpeakCompletedEventArgs
    name: SpeakCompletedEventArgs
    nameWithType: SpeakCompletedEventArgs
    fullName: SpeakCompletedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: SpeakProgress
  nameWithType: SpeechSynthesizer.SpeakProgress
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress
- uid: System.EventHandler{System.Speech.Synthesis.SpeakProgressEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<SpeakProgressEventArgs>
  nameWithType: EventHandler<SpeakProgressEventArgs>
  fullName: System.EventHandler<System.Speech.Synthesis.SpeakProgressEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Speech.Synthesis.SpeakProgressEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Speech.Synthesis.SpeakProgressEventArgs
    name: SpeakProgressEventArgs
    nameWithType: SpeakProgressEventArgs
    fullName: SpeakProgressEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml(System.String)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: SpeakSsml(String)
  nameWithType: SpeechSynthesizer.SpeakSsml(String)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml(String)
- uid: System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync(System.String)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: SpeakSsmlAsync(String)
  nameWithType: SpeechSynthesizer.SpeakSsmlAsync(String)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync(String)
- uid: System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: SpeakStarted
  nameWithType: SpeechSynthesizer.SpeakStarted
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted
- uid: System.EventHandler{System.Speech.Synthesis.SpeakStartedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<SpeakStartedEventArgs>
  nameWithType: EventHandler<SpeakStartedEventArgs>
  fullName: System.EventHandler<System.Speech.Synthesis.SpeakStartedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Speech.Synthesis.SpeakStartedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Speech.Synthesis.SpeakStartedEventArgs
    name: SpeakStartedEventArgs
    nameWithType: SpeakStartedEventArgs
    fullName: SpeakStartedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Speech.Synthesis.SpeechSynthesizer.State
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: State
  nameWithType: SpeechSynthesizer.State
  fullName: System.Speech.Synthesis.SpeechSynthesizer.State
- uid: System.Speech.Synthesis.SynthesizerState
  parent: System.Speech.Synthesis
  isExternal: false
  name: SynthesizerState
  nameWithType: SynthesizerState
  fullName: System.Speech.Synthesis.SynthesizerState
- uid: System.Speech.Synthesis.SpeechSynthesizer.StateChanged
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: StateChanged
  nameWithType: SpeechSynthesizer.StateChanged
  fullName: System.Speech.Synthesis.SpeechSynthesizer.StateChanged
- uid: System.EventHandler{System.Speech.Synthesis.StateChangedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<StateChangedEventArgs>
  nameWithType: EventHandler<StateChangedEventArgs>
  fullName: System.EventHandler<System.Speech.Synthesis.StateChangedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Speech.Synthesis.StateChangedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Speech.Synthesis.StateChangedEventArgs
    name: StateChangedEventArgs
    nameWithType: StateChangedEventArgs
    fullName: StateChangedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Speech.Synthesis.SpeechSynthesizer.VisemeReached
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: VisemeReached
  nameWithType: SpeechSynthesizer.VisemeReached
  fullName: System.Speech.Synthesis.SpeechSynthesizer.VisemeReached
- uid: System.EventHandler{System.Speech.Synthesis.VisemeReachedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<VisemeReachedEventArgs>
  nameWithType: EventHandler<VisemeReachedEventArgs>
  fullName: System.EventHandler<System.Speech.Synthesis.VisemeReachedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Speech.Synthesis.VisemeReachedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Speech.Synthesis.VisemeReachedEventArgs
    name: VisemeReachedEventArgs
    nameWithType: VisemeReachedEventArgs
    fullName: VisemeReachedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Speech.Synthesis.SpeechSynthesizer.Voice
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: Voice
  nameWithType: SpeechSynthesizer.Voice
  fullName: System.Speech.Synthesis.SpeechSynthesizer.Voice
- uid: System.Speech.Synthesis.VoiceInfo
  parent: System.Speech.Synthesis
  isExternal: false
  name: VoiceInfo
  nameWithType: VoiceInfo
  fullName: System.Speech.Synthesis.VoiceInfo
- uid: System.Speech.Synthesis.SpeechSynthesizer.VoiceChange
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: VoiceChange
  nameWithType: SpeechSynthesizer.VoiceChange
  fullName: System.Speech.Synthesis.SpeechSynthesizer.VoiceChange
- uid: System.EventHandler{System.Speech.Synthesis.VoiceChangeEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<VoiceChangeEventArgs>
  nameWithType: EventHandler<VoiceChangeEventArgs>
  fullName: System.EventHandler<System.Speech.Synthesis.VoiceChangeEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Speech.Synthesis.VoiceChangeEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Speech.Synthesis.VoiceChangeEventArgs
    name: VoiceChangeEventArgs
    nameWithType: VoiceChangeEventArgs
    fullName: VoiceChangeEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Speech.Synthesis.SpeechSynthesizer.Volume
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: Volume
  nameWithType: SpeechSynthesizer.Volume
  fullName: System.Speech.Synthesis.SpeechSynthesizer.Volume
- uid: System.Speech.Synthesis.SpeechSynthesizer.#ctor*
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: SpeechSynthesizer
  nameWithType: SpeechSynthesizer.SpeechSynthesizer
- uid: System.Speech.Synthesis.SpeechSynthesizer.AddLexicon*
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: AddLexicon
  nameWithType: SpeechSynthesizer.AddLexicon
- uid: System.Speech.Synthesis.SpeechSynthesizer.Dispose*
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: Dispose
  nameWithType: SpeechSynthesizer.Dispose
- uid: System.Speech.Synthesis.SpeechSynthesizer.Finalize*
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: Finalize
  nameWithType: SpeechSynthesizer.Finalize
- uid: System.Speech.Synthesis.SpeechSynthesizer.GetCurrentlySpokenPrompt*
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: GetCurrentlySpokenPrompt
  nameWithType: SpeechSynthesizer.GetCurrentlySpokenPrompt
- uid: System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices*
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: GetInstalledVoices
  nameWithType: SpeechSynthesizer.GetInstalledVoices
- uid: System.Speech.Synthesis.SpeechSynthesizer.Pause*
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: Pause
  nameWithType: SpeechSynthesizer.Pause
- uid: System.Speech.Synthesis.SpeechSynthesizer.Rate*
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: Rate
  nameWithType: SpeechSynthesizer.Rate
- uid: System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon*
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: RemoveLexicon
  nameWithType: SpeechSynthesizer.RemoveLexicon
- uid: System.Speech.Synthesis.SpeechSynthesizer.Resume*
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: Resume
  nameWithType: SpeechSynthesizer.Resume
- uid: System.Speech.Synthesis.SpeechSynthesizer.SelectVoice*
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: SelectVoice
  nameWithType: SpeechSynthesizer.SelectVoice
- uid: System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints*
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: SelectVoiceByHints
  nameWithType: SpeechSynthesizer.SelectVoiceByHints
- uid: System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream*
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: SetOutputToAudioStream
  nameWithType: SpeechSynthesizer.SetOutputToAudioStream
- uid: System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice*
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: SetOutputToDefaultAudioDevice
  nameWithType: SpeechSynthesizer.SetOutputToDefaultAudioDevice
- uid: System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull*
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: SetOutputToNull
  nameWithType: SpeechSynthesizer.SetOutputToNull
- uid: System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile*
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: SetOutputToWaveFile
  nameWithType: SpeechSynthesizer.SetOutputToWaveFile
- uid: System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream*
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: SetOutputToWaveStream
  nameWithType: SpeechSynthesizer.SetOutputToWaveStream
- uid: System.Speech.Synthesis.SpeechSynthesizer.Speak*
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: Speak
  nameWithType: SpeechSynthesizer.Speak
- uid: System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync*
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: SpeakAsync
  nameWithType: SpeechSynthesizer.SpeakAsync
- uid: System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel*
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: SpeakAsyncCancel
  nameWithType: SpeechSynthesizer.SpeakAsyncCancel
- uid: System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll*
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: SpeakAsyncCancelAll
  nameWithType: SpeechSynthesizer.SpeakAsyncCancelAll
- uid: System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml*
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: SpeakSsml
  nameWithType: SpeechSynthesizer.SpeakSsml
- uid: System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync*
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: SpeakSsmlAsync
  nameWithType: SpeechSynthesizer.SpeakSsmlAsync
- uid: System.Speech.Synthesis.SpeechSynthesizer.State*
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: State
  nameWithType: SpeechSynthesizer.State
- uid: System.Speech.Synthesis.SpeechSynthesizer.Voice*
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: Voice
  nameWithType: SpeechSynthesizer.Voice
- uid: System.Speech.Synthesis.SpeechSynthesizer.Volume*
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: Volume
  nameWithType: SpeechSynthesizer.Volume
