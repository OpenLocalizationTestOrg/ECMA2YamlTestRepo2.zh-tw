### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Dispatcher.IDispatchMessageFormatter
  id: IDispatchMessageFormatter
  children:
  - System.ServiceModel.Dispatcher.IDispatchMessageFormatter.DeserializeRequest(System.ServiceModel.Channels.Message,System.Object[])
  - System.ServiceModel.Dispatcher.IDispatchMessageFormatter.SerializeReply(System.ServiceModel.Channels.MessageVersion,System.Object[],System.Object)
  langs:
  - csharp
  name: IDispatchMessageFormatter
  nameWithType: IDispatchMessageFormatter
  fullName: System.ServiceModel.Dispatcher.IDispatchMessageFormatter
  type: Interface
  summary: "定義方法還原序列化要求訊息，並將服務應用程式中的回應訊息序列化。"
  remarks: "實作若介面來建立控制訊息，由訊息成為服務應用程式中的參數還原序列化成為參數的序列化格式器擴充功能。 若要將自訂的格式器插入服務應用程式時，可以指派若物件<xref:System.ServiceModel.Dispatcher.DispatchOperation.Formatter%2A>使用行為的屬性。</xref:System.ServiceModel.Dispatcher.DispatchOperation.Formatter%2A>"
  example:
  - For a complete example, see [Operation Formatter and Operation Selector](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: public interface IDispatchMessageFormatter
  implements: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.IDispatchMessageFormatter.DeserializeRequest(System.ServiceModel.Channels.Message,System.Object[])
  id: DeserializeRequest(System.ServiceModel.Channels.Message,System.Object[])
  parent: System.ServiceModel.Dispatcher.IDispatchMessageFormatter
  langs:
  - csharp
  name: DeserializeRequest(Message,Object[])
  nameWithType: IDispatchMessageFormatter.DeserializeRequest(Message,Object[])
  fullName: System.ServiceModel.Dispatcher.IDispatchMessageFormatter.DeserializeRequest(Message,Object[])
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "將訊息還原序列化為的參數陣列。"
  remarks: ''
  example:
  - For a complete example, see [Operation Formatter and Operation Selector](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: public void DeserializeRequest (System.ServiceModel.Channels.Message message, object[] parameters);
    parameters:
    - id: message
      type: System.ServiceModel.Channels.Message
      description: "傳入的訊息。"
    - id: parameters
      type: System.Object[]
      description: "傳遞至作業做為參數的物件。"
  overload: System.ServiceModel.Dispatcher.IDispatchMessageFormatter.DeserializeRequest*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.IDispatchMessageFormatter.SerializeReply(System.ServiceModel.Channels.MessageVersion,System.Object[],System.Object)
  id: SerializeReply(System.ServiceModel.Channels.MessageVersion,System.Object[],System.Object)
  parent: System.ServiceModel.Dispatcher.IDispatchMessageFormatter
  langs:
  - csharp
  name: SerializeReply(MessageVersion,Object[],Object)
  nameWithType: IDispatchMessageFormatter.SerializeReply(MessageVersion,Object[],Object)
  fullName: System.ServiceModel.Dispatcher.IDispatchMessageFormatter.SerializeReply(MessageVersion,Object[],Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "將序列化回覆訊息，從指定的訊息版本、 參數、 陣列和傳回值。"
  remarks: ''
  example:
  - For a complete example, see [Operation Formatter and Operation Selector](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: public System.ServiceModel.Channels.Message SerializeReply (System.ServiceModel.Channels.MessageVersion messageVersion, object[] parameters, object result);
    parameters:
    - id: messageVersion
      type: System.ServiceModel.Channels.MessageVersion
      description: "SOAP 訊息版本。"
    - id: parameters
      type: System.Object[]
      description: "Out 參數。"
    - id: result
      type: System.Object
      description: "傳回的值。"
    return:
      type: System.ServiceModel.Channels.Message
      description: "序列化的回覆訊息。"
  overload: System.ServiceModel.Dispatcher.IDispatchMessageFormatter.SerializeReply*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.Dispatcher.IDispatchMessageFormatter.DeserializeRequest(System.ServiceModel.Channels.Message,System.Object[])
  parent: System.ServiceModel.Dispatcher.IDispatchMessageFormatter
  isExternal: false
  name: DeserializeRequest(Message,Object[])
  nameWithType: IDispatchMessageFormatter.DeserializeRequest(Message,Object[])
  fullName: System.ServiceModel.Dispatcher.IDispatchMessageFormatter.DeserializeRequest(Message,Object[])
- uid: System.ServiceModel.Channels.Message
  parent: System.ServiceModel.Channels
  isExternal: true
  name: Message
  nameWithType: Message
  fullName: System.ServiceModel.Channels.Message
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ServiceModel.Dispatcher.IDispatchMessageFormatter.SerializeReply(System.ServiceModel.Channels.MessageVersion,System.Object[],System.Object)
  parent: System.ServiceModel.Dispatcher.IDispatchMessageFormatter
  isExternal: false
  name: SerializeReply(MessageVersion,Object[],Object)
  nameWithType: IDispatchMessageFormatter.SerializeReply(MessageVersion,Object[],Object)
  fullName: System.ServiceModel.Dispatcher.IDispatchMessageFormatter.SerializeReply(MessageVersion,Object[],Object)
- uid: System.ServiceModel.Channels.MessageVersion
  parent: System.ServiceModel.Channels
  isExternal: true
  name: MessageVersion
  nameWithType: MessageVersion
  fullName: System.ServiceModel.Channels.MessageVersion
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ServiceModel.Dispatcher.IDispatchMessageFormatter.DeserializeRequest*
  parent: System.ServiceModel.Dispatcher.IDispatchMessageFormatter
  isExternal: false
  name: DeserializeRequest
  nameWithType: IDispatchMessageFormatter.DeserializeRequest
- uid: System.ServiceModel.Dispatcher.IDispatchMessageFormatter.SerializeReply*
  parent: System.ServiceModel.Dispatcher.IDispatchMessageFormatter
  isExternal: false
  name: SerializeReply
  nameWithType: IDispatchMessageFormatter.SerializeReply
