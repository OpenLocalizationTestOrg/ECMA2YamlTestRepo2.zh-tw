### YamlMime:ManagedReference
items:
- uid: System.Windows.Automation.AutomationElement
  id: AutomationElement
  children:
  - System.Windows.Automation.AutomationElement.AcceleratorKeyProperty
  - System.Windows.Automation.AutomationElement.AccessKeyProperty
  - System.Windows.Automation.AutomationElement.AsyncContentLoadedEvent
  - System.Windows.Automation.AutomationElement.AutomationFocusChangedEvent
  - System.Windows.Automation.AutomationElement.AutomationIdProperty
  - System.Windows.Automation.AutomationElement.AutomationPropertyChangedEvent
  - System.Windows.Automation.AutomationElement.BoundingRectangleProperty
  - System.Windows.Automation.AutomationElement.Cached
  - System.Windows.Automation.AutomationElement.CachedChildren
  - System.Windows.Automation.AutomationElement.CachedParent
  - System.Windows.Automation.AutomationElement.ClassNameProperty
  - System.Windows.Automation.AutomationElement.ClickablePointProperty
  - System.Windows.Automation.AutomationElement.ControlTypeProperty
  - System.Windows.Automation.AutomationElement.CultureProperty
  - System.Windows.Automation.AutomationElement.Current
  - System.Windows.Automation.AutomationElement.Equals(System.Object)
  - System.Windows.Automation.AutomationElement.Finalize
  - System.Windows.Automation.AutomationElement.FindAll(System.Windows.Automation.TreeScope,System.Windows.Automation.Condition)
  - System.Windows.Automation.AutomationElement.FindFirst(System.Windows.Automation.TreeScope,System.Windows.Automation.Condition)
  - System.Windows.Automation.AutomationElement.FocusedElement
  - System.Windows.Automation.AutomationElement.FrameworkIdProperty
  - System.Windows.Automation.AutomationElement.FromHandle(System.IntPtr)
  - System.Windows.Automation.AutomationElement.FromLocalProvider(System.Windows.Automation.Provider.IRawElementProviderSimple)
  - System.Windows.Automation.AutomationElement.FromPoint(System.Windows.Point)
  - System.Windows.Automation.AutomationElement.GetCachedPattern(System.Windows.Automation.AutomationPattern)
  - System.Windows.Automation.AutomationElement.GetCachedPropertyValue(System.Windows.Automation.AutomationProperty)
  - System.Windows.Automation.AutomationElement.GetCachedPropertyValue(System.Windows.Automation.AutomationProperty,System.Boolean)
  - System.Windows.Automation.AutomationElement.GetClickablePoint
  - System.Windows.Automation.AutomationElement.GetCurrentPattern(System.Windows.Automation.AutomationPattern)
  - System.Windows.Automation.AutomationElement.GetCurrentPropertyValue(System.Windows.Automation.AutomationProperty)
  - System.Windows.Automation.AutomationElement.GetCurrentPropertyValue(System.Windows.Automation.AutomationProperty,System.Boolean)
  - System.Windows.Automation.AutomationElement.GetHashCode
  - System.Windows.Automation.AutomationElement.GetRuntimeId
  - System.Windows.Automation.AutomationElement.GetSupportedPatterns
  - System.Windows.Automation.AutomationElement.GetSupportedProperties
  - System.Windows.Automation.AutomationElement.GetUpdatedCache(System.Windows.Automation.CacheRequest)
  - System.Windows.Automation.AutomationElement.HasKeyboardFocusProperty
  - System.Windows.Automation.AutomationElement.HelpTextProperty
  - System.Windows.Automation.AutomationElement.IsContentElementProperty
  - System.Windows.Automation.AutomationElement.IsControlElementProperty
  - System.Windows.Automation.AutomationElement.IsDockPatternAvailableProperty
  - System.Windows.Automation.AutomationElement.IsEnabledProperty
  - System.Windows.Automation.AutomationElement.IsExpandCollapsePatternAvailableProperty
  - System.Windows.Automation.AutomationElement.IsGridItemPatternAvailableProperty
  - System.Windows.Automation.AutomationElement.IsGridPatternAvailableProperty
  - System.Windows.Automation.AutomationElement.IsInvokePatternAvailableProperty
  - System.Windows.Automation.AutomationElement.IsItemContainerPatternAvailableProperty
  - System.Windows.Automation.AutomationElement.IsKeyboardFocusableProperty
  - System.Windows.Automation.AutomationElement.IsMultipleViewPatternAvailableProperty
  - System.Windows.Automation.AutomationElement.IsOffscreenProperty
  - System.Windows.Automation.AutomationElement.IsPasswordProperty
  - System.Windows.Automation.AutomationElement.IsRangeValuePatternAvailableProperty
  - System.Windows.Automation.AutomationElement.IsRequiredForFormProperty
  - System.Windows.Automation.AutomationElement.IsScrollItemPatternAvailableProperty
  - System.Windows.Automation.AutomationElement.IsScrollPatternAvailableProperty
  - System.Windows.Automation.AutomationElement.IsSelectionItemPatternAvailableProperty
  - System.Windows.Automation.AutomationElement.IsSelectionPatternAvailableProperty
  - System.Windows.Automation.AutomationElement.IsSynchronizedInputPatternAvailableProperty
  - System.Windows.Automation.AutomationElement.IsTableItemPatternAvailableProperty
  - System.Windows.Automation.AutomationElement.IsTablePatternAvailableProperty
  - System.Windows.Automation.AutomationElement.IsTextPatternAvailableProperty
  - System.Windows.Automation.AutomationElement.IsTogglePatternAvailableProperty
  - System.Windows.Automation.AutomationElement.IsTransformPatternAvailableProperty
  - System.Windows.Automation.AutomationElement.IsValuePatternAvailableProperty
  - System.Windows.Automation.AutomationElement.IsVirtualizedItemPatternAvailableProperty
  - System.Windows.Automation.AutomationElement.IsWindowPatternAvailableProperty
  - System.Windows.Automation.AutomationElement.ItemStatusProperty
  - System.Windows.Automation.AutomationElement.ItemTypeProperty
  - System.Windows.Automation.AutomationElement.LabeledByProperty
  - System.Windows.Automation.AutomationElement.LayoutInvalidatedEvent
  - System.Windows.Automation.AutomationElement.LocalizedControlTypeProperty
  - System.Windows.Automation.AutomationElement.MenuClosedEvent
  - System.Windows.Automation.AutomationElement.MenuOpenedEvent
  - System.Windows.Automation.AutomationElement.NameProperty
  - System.Windows.Automation.AutomationElement.NativeWindowHandleProperty
  - System.Windows.Automation.AutomationElement.NotSupported
  - System.Windows.Automation.AutomationElement.op_Equality(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationElement)
  - System.Windows.Automation.AutomationElement.op_Inequality(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationElement)
  - System.Windows.Automation.AutomationElement.OrientationProperty
  - System.Windows.Automation.AutomationElement.ProcessIdProperty
  - System.Windows.Automation.AutomationElement.RootElement
  - System.Windows.Automation.AutomationElement.RuntimeIdProperty
  - System.Windows.Automation.AutomationElement.SetFocus
  - System.Windows.Automation.AutomationElement.StructureChangedEvent
  - System.Windows.Automation.AutomationElement.ToolTipClosedEvent
  - System.Windows.Automation.AutomationElement.ToolTipOpenedEvent
  - System.Windows.Automation.AutomationElement.TryGetCachedPattern(System.Windows.Automation.AutomationPattern,System.Object@)
  - System.Windows.Automation.AutomationElement.TryGetClickablePoint(System.Windows.Point@)
  - System.Windows.Automation.AutomationElement.TryGetCurrentPattern(System.Windows.Automation.AutomationPattern,System.Object@)
  langs:
  - csharp
  name: AutomationElement
  nameWithType: AutomationElement
  fullName: System.Windows.Automation.AutomationElement
  type: Class
  summary: "代表[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]中的項目[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]樹狀，並包含使用者介面自動化用戶端應用程式做為識別項的值。"
  remarks: "AutomationElement 對應於一段[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]，而不論基礎實作 (例如[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]或[!INCLUDE[TLA#tla_win32](~/add/includes/tlasharptla-win32-md.md)])。"
  syntax:
    content: public sealed class AutomationElement
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.AcceleratorKeyProperty
  id: AcceleratorKeyProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: AcceleratorKeyProperty
  nameWithType: AutomationElement.AcceleratorKeyProperty
  fullName: System.Windows.Automation.AutomationElement.AcceleratorKeyProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "識別<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AcceleratorKey*>屬性。</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AcceleratorKey*>"
  remarks: "使用者介面自動化用戶端應用程式會使用這個識別項。 UI 自動化提供者應該<xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers>中使用的對等的識別項       這個屬性也可以從擷取<xref:System.Windows.Automation.AutomationElement.Current%2A>或<xref:System.Windows.Automation.AutomationElement.Cached%2A>屬性。</xref:System.Windows.Automation.AutomationElement.Cached%2A> </xref:System.Windows.Automation.AutomationElement.Current%2A>       快速鍵組合來叫用動作。 例如，CTRL + O 通常用來叫用**開啟**通用對話方塊。 <xref:System.Windows.Automation.AutomationElement>快速鍵對應索引鍵屬性設定一律實作<xref:System.Windows.Automation.InvokePattern>類別。</xref:System.Windows.Automation.InvokePattern> </xref:System.Windows.Automation.AutomationElement>       傳回值的屬性都屬於型別<xref:System.String>.</xref:System.String> 屬性的預設值為空字串。"
  example:
  - "The following example retrieves the current value of the property. The default value is returned if the element does not provide one.  \n  \n [!code-cs[UIAClient_snip#124](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#124)]\n [!code-vb[UIAClient_snip#124](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#124)]  \n  \n The following example retrieves the current value of the property, but specifies that if the element itself does not provide a value for the property, <xref:System.Windows.Automation.AutomationElement.NotSupported> is to be returned instead of a default value.  \n  \n [!code-cs[UIAClient_snip#125](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#125)]\n [!code-vb[UIAClient_snip#125](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#125)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty AcceleratorKeyProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.AccessKeyProperty
  id: AccessKeyProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: AccessKeyProperty
  nameWithType: AutomationElement.AccessKeyProperty
  fullName: System.Windows.Automation.AutomationElement.AccessKeyProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "識別<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AccessKey*>屬性。</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AccessKey*>"
  remarks: "使用者介面自動化用戶端應用程式會使用這個識別項。 UI 自動化提供者應該<xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers>中使用的對等的識別項       這個屬性也可以從擷取<xref:System.Windows.Automation.AutomationElement.Current%2A>或<xref:System.Windows.Automation.AutomationElement.Cached%2A>屬性。</xref:System.Windows.Automation.AutomationElement.Cached%2A> </xref:System.Windows.Automation.AutomationElement.Current%2A>       便捷鍵是中的功能表、 功能表項目或可啟動附加的功能表功能按鈕等控制項的標籤文字的字元。 比方說，如果找到字母&quot;O&quot;通常用來叫用**開啟舊檔**通用對話方塊中，從**檔案**功能表。       存取金鑰值屬於型別<xref:System.String>，而且包含註冊項目的存取金鑰為字元。</xref:System.String> 字串的預設值為空字串。"
  example:
  - "The following example retrieves the current value of the property. The default value is returned if the element does not provide one.  \n  \n [!code-cs[UIAClient_snip#127](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#127)]\n [!code-vb[UIAClient_snip#127](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#127)]  \n  \n The following example retrieves the current value of the property, but specifies that if the element itself does not provide a value for the property, <xref:System.Windows.Automation.AutomationElement.NotSupported> is to be returned instead of a default value.  \n  \n [!code-cs[UIAClient_snip#128](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#128)]\n [!code-vb[UIAClient_snip#128](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#128)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty AccessKeyProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.AsyncContentLoadedEvent
  id: AsyncContentLoadedEvent
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: AsyncContentLoadedEvent
  nameWithType: AutomationElement.AsyncContentLoadedEvent
  fullName: System.Windows.Automation.AutomationElement.AsyncContentLoadedEvent
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "識別非同步內容載入期間引發的事件。"
  remarks: "使用者介面自動化用戶端應用程式會使用這個識別項。 UI 自動化提供者應該<xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers>中使用的對等的識別項       這個事件主要是由提供者用於表示發生了非同步內容載入事件。"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationEvent AsyncContentLoadedEvent;
    return:
      type: System.Windows.Automation.AutomationEvent
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.AutomationFocusChangedEvent
  id: AutomationFocusChangedEvent
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: AutomationFocusChangedEvent
  nameWithType: AutomationElement.AutomationFocusChangedEvent
  fullName: System.Windows.Automation.AutomationElement.AutomationFocusChangedEvent
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "識別變更焦點時引發的事件。"
  remarks: "使用者介面自動化用戶端應用程式會使用這個識別項。 UI 自動化提供者應該<xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers>中使用的對等的識別項"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationEvent AutomationFocusChangedEvent;
    return:
      type: System.Windows.Automation.AutomationEvent
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.AutomationIdProperty
  id: AutomationIdProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: AutomationIdProperty
  nameWithType: AutomationElement.AutomationIdProperty
  fullName: System.Windows.Automation.AutomationElement.AutomationIdProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "識別<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId*>屬性，用來識別元素。</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId*>"
  remarks: "使用者介面自動化用戶端應用程式會使用這個識別項。 UI 自動化提供者應該<xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers>中使用的對等的識別項       這個屬性也可以從擷取<xref:System.Windows.Automation.AutomationElement.Current%2A>或<xref:System.Windows.Automation.AutomationElement.Cached%2A>屬性。</xref:System.Windows.Automation.AutomationElement.Cached%2A> </xref:System.Windows.Automation.AutomationElement.Current%2A>       傳回值的屬性都屬於型別<xref:System.String>.</xref:System.String> 屬性的預設值為空字串。       可供使用的項目 AutomationIdProperty 應該保持不變，不論本機語言應用程式的任何執行個體中。 值應該是整個桌面同層級項目中的唯一性，但不是一定是唯一。 例如，多個執行個體的應用程式或在 Microsoft Windows 檔案總管 中的多個資料夾檢視可能包含具有相同的 AutomationIdProperty，例如&quot;SystemMenuBar&quot;的項目。       雖然支援<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId%2A>一律建議更好的測試能力，這個屬性不是強制性。</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId%2A> 支援，where<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId%2A>建立測試自動化指令碼的 UI 語言不論執行的是很有用。</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId%2A> 用戶端應該作任何假設有關<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId%2A>其他應用程式所公開的 s。</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId%2A> <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId%2A>一定不保證能夠穩定跨不同的版本，或應用程式的組建。</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId%2A>       執行個體[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]項目中可唯一識別在桌面上依其<xref:System.Windows.Automation.AutomationElement.RuntimeIdProperty>屬性。</xref:System.Windows.Automation.AutomationElement.RuntimeIdProperty>      > [!NOTE] > AutomationIdProperty 支援所有的使用者介面自動化項目，除了最上層的應用程式視窗的控制項檢視中，使用者介面自動化項目衍生自[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]控制項不會有一個識別碼或 X:uid 和使用者介面自動化項目衍生自[!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)]控制項沒有控制項 id。"
  example:
  - "The following example retrieves the current value of the property. The default value is returned if the element does not provide one.  \n  \n [!code-cs[UIAClient_snip#129](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#129)]\n [!code-vb[UIAClient_snip#129](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#129)]  \n  \n The following example retrieves the current value of the property, but specifies that if the element itself does not provide a value for the property, <xref:System.Windows.Automation.AutomationElement.NotSupported> is to be returned instead of a default value.  \n  \n [!code-cs[UIAClient_snip#130](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#130)]\n [!code-vb[UIAClient_snip#130](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#130)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty AutomationIdProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.AutomationPropertyChangedEvent
  id: AutomationPropertyChangedEvent
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: AutomationPropertyChangedEvent
  nameWithType: AutomationElement.AutomationPropertyChangedEvent
  fullName: System.Windows.Automation.AutomationElement.AutomationPropertyChangedEvent
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "識別屬性變更事件。"
  remarks: "使用者介面自動化用戶端應用程式會使用這個識別項。 UI 自動化提供者應該<xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers>中使用的對等的識別項"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationEvent AutomationPropertyChangedEvent;
    return:
      type: System.Windows.Automation.AutomationEvent
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.BoundingRectangleProperty
  id: BoundingRectangleProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: BoundingRectangleProperty
  nameWithType: AutomationElement.BoundingRectangleProperty
  fullName: System.Windows.Automation.AutomationElement.BoundingRectangleProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "識別<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.BoundingRectangle*>屬性。</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.BoundingRectangle*>"
  remarks: "使用者介面自動化用戶端應用程式會使用這個識別項。 UI 自動化提供者應該<xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers>中使用的對等的識別項       這個屬性也可以從擷取<xref:System.Windows.Automation.AutomationElement.Current%2A>或<xref:System.Windows.Automation.AutomationElement.Cached%2A>屬性。</xref:System.Windows.Automation.AutomationElement.Cached%2A> </xref:System.Windows.Automation.AutomationElement.Current%2A>       週框矩形屬於類型<xref:System.Windows.Rect>.</xref:System.Windows.Rect> 傳回的矩形是在實際螢幕座標。 預設值是<xref:System.Windows.Rect.Empty%2A>.</xref:System.Windows.Rect.Empty%2A> <xref:System.Windows.Rect.Empty%2A>如果項目未顯示傳回[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]。</xref:System.Windows.Rect.Empty%2A>       傳回的矩形可以包含沒有任何可點選的點。 在這種情形的執行個體包含當[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]項目具有不規則的形狀或可點選區域或遮蔽其他[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]項目。"
  example:
  - "The following example retrieves the current value of the property. The default value is returned if the element does not provide one.  \n  \n [!code-cs[UIAClient_snip#131](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#131)]\n [!code-vb[UIAClient_snip#131](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#131)]  \n  \n The following example retrieves the current value of the property, but specifies that if the element itself does not provide a value for the property, <xref:System.Windows.Automation.AutomationElement.NotSupported> is to be returned instead of a default value.  \n  \n [!code-cs[UIAClient_snip#132](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#132)]\n [!code-vb[UIAClient_snip#132](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#132)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty BoundingRectangleProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.Cached
  id: Cached
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: Cached
  nameWithType: AutomationElement.Cached
  fullName: System.Windows.Automation.AutomationElement.Cached
  type: Property
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "取得快取[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]屬性值，這個<xref href=&quot;System.Windows.Automation.AutomationElement&quot;></xref>物件。"
  remarks: "存取子[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]屬性以結構快取所傳回的屬性。 您不需要擷取的結構。您可以直接存取其成員，如下列範例所示。 如需特定上可用的屬性以及其用法的詳細資訊，請參閱<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation>.</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation>       若要取得的目前值[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]屬性在這個項目使用<xref:System.Windows.Automation.AutomationElement.Current%2A>屬性。</xref:System.Windows.Automation.AutomationElement.Current%2A>"
  example:
  - "The following example shows how the <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.Name%2A> property can be cached and then retrieved by using the Cached property.  \n  \n [!code-vb[UIAClient_snip#119](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#119)]\n [!code-cs[UIAClient_snip#119](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#119)]"
  syntax:
    content: public System.Windows.Automation.AutomationElement.AutomationElementInformation Cached { get; }
    return:
      type: System.Windows.Automation.AutomationElement.AutomationElementInformation
      description: "結構，其中包含快取的屬性值<xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>。"
  overload: System.Windows.Automation.AutomationElement.Cached*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "沒有快取的屬性。"
  - type: System.Windows.Automation.ElementNotAvailableException
    commentId: T:System.Windows.Automation.ElementNotAvailableException
    description: "UI <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>不再存在。"
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.CachedChildren
  id: CachedChildren
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: CachedChildren
  nameWithType: AutomationElement.CachedChildren
  fullName: System.Windows.Automation.AutomationElement.CachedChildren
  type: Property
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "這個項目取得的快取的子<xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>。"
  remarks: "所傳回之集合的檢視由<xref:System.Windows.Automation.CacheRequest.TreeFilter%2A>條件<xref:System.Windows.Automation.CacheRequest>，活躍時這<xref:System.Windows.Automation.AutomationElement>取得物件。</xref:System.Windows.Automation.AutomationElement> </xref:System.Windows.Automation.CacheRequest> </xref:System.Windows.Automation.CacheRequest.TreeFilter%2A>       只有當快取子系範圍<xref:System.Windows.Automation.CacheRequest>包含<xref:System.Windows.Automation.TreeScope>， <xref:System.Windows.Automation.TreeScope>，或<xref:System.Windows.Automation.TreeScope>.</xref:System.Windows.Automation.TreeScope> </xref:System.Windows.Automation.TreeScope> </xref:System.Windows.Automation.TreeScope> </xref:System.Windows.Automation.CacheRequest>       如果<xref:System.Windows.Automation.CacheRequest>指定子系已快取在此層級，但沒有任何子系，則這個屬性的值為 0。</xref:System.Windows.Automation.CacheRequest> 不過，如果沒有要求的快取子系，在此層級，嘗試擷取屬性就會引發例外狀況。"
  example:
  - "In the following example, a list box element is obtained from the parent window element while a <xref:System.Windows.Automation.CacheRequest> is active and <xref:System.Windows.Automation.CacheRequest.TreeScope%2A> is <xref:System.Windows.Automation.TreeScope>. The specified properties of the child elements (that is, the list items) are stored in the cache and can be retrieved from the CachedChildren of the list box.  \n  \n [!code-vb[UIAClient_snip#119](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#119)]\n [!code-cs[UIAClient_snip#119](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#119)]"
  syntax:
    content: public System.Windows.Automation.AutomationElementCollection CachedChildren { get; }
    return:
      type: System.Windows.Automation.AutomationElementCollection
      description: "子元素的集合。 此集合可以是空的項目是否不有任何子系。"
  overload: System.Windows.Automation.AutomationElement.CachedChildren*
  exceptions:
  - type: System.Windows.Automation.ElementNotAvailableException
    commentId: T:System.Windows.Automation.ElementNotAvailableException
    description: "UI <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>不再存在。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "沒有要求的快取這個項目之子系。"
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.CachedParent
  id: CachedParent
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: CachedParent
  nameWithType: AutomationElement.CachedParent
  fullName: System.Windows.Automation.AutomationElement.CachedParent
  type: Property
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "取得快取的父系<xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>。"
  remarks: ''
  example:
  - "In the following example, the <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.Name%2A> properties of a list box and its list items are cached. The list box element is available in the CachedParent property of each list item element.  \n  \n [!code-vb[UIAClient_snip#119](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#119)]\n [!code-cs[UIAClient_snip#119](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#119)]"
  syntax:
    content: public System.Windows.Automation.AutomationElement CachedParent { get; }
    return:
      type: System.Windows.Automation.AutomationElement
      description: "父項目。 傳回值可以是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果指定的項目沒有父代 — 比方說，如果此元素是根節點。"
  overload: System.Windows.Automation.AutomationElement.CachedParent*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "沒有父項目會快取。"
  - type: System.Windows.Automation.ElementNotAvailableException
    commentId: T:System.Windows.Automation.ElementNotAvailableException
    description: "UI <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>不再存在。"
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.ClassNameProperty
  id: ClassNameProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: ClassNameProperty
  nameWithType: AutomationElement.ClassNameProperty
  fullName: System.Windows.Automation.AutomationElement.ClassNameProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "識別<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.ClassName*>屬性。</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.ClassName*>"
  remarks: "使用者介面自動化用戶端應用程式會使用這個識別項。 UI 自動化提供者應該<xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers>中使用的對等的識別項       這個屬性也可以從擷取<xref:System.Windows.Automation.AutomationElement.Current%2A>或<xref:System.Windows.Automation.AutomationElement.Cached%2A>屬性。</xref:System.Windows.Automation.AutomationElement.Cached%2A> </xref:System.Windows.Automation.AutomationElement.Current%2A>       類別名稱的使用者介面自動化提供者實作而定，因此無法計算時以標準格式。 不過，如果您知道類別名稱您可用它來確認您的應用程式的運作與預期[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]項目。       傳回值的屬性都屬於型別<xref:System.String>.</xref:System.String> 預設值為空字串。"
  example:
  - "The following example retrieves the current value of the property. The default value is returned if the element does not provide one.  \n  \n [!code-cs[UIAClient_snip#133](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#133)]\n [!code-vb[UIAClient_snip#133](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#133)]  \n  \n The following example retrieves the current value of the property, but specifies that if the element itself does not provide a value for the property, <xref:System.Windows.Automation.AutomationElement.NotSupported> is to be returned instead of a default value.  \n  \n [!code-cs[UIAClient_snip#134](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#134)]\n [!code-vb[UIAClient_snip#134](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#134)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty ClassNameProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.ClickablePointProperty
  id: ClickablePointProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: ClickablePointProperty
  nameWithType: AutomationElement.ClickablePointProperty
  fullName: System.Windows.Automation.AutomationElement.ClickablePointProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "識別可按點屬性。"
  remarks: "使用者介面自動化用戶端應用程式會使用這個識別項。 UI 自動化提供者應該<xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers>中使用的對等的識別項       <xref:System.Windows.Automation.AutomationElement>不可點選如果完全遮住其他視窗。</xref:System.Windows.Automation.AutomationElement>       傳回值的屬性都屬於型別<xref:System.Windows.Point>.</xref:System.Windows.Point> 預設值為 `null`。       傳回的值是在實際螢幕座標。"
  example:
  - "The following example retrieves the current value of the property.  \n  \n [!code-cs[UIAClient_snip#135](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#135)]\n [!code-vb[UIAClient_snip#135](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#135)]  \n  \n The following example retrieves the current value of the property, but specifies that if the element itself does not provide a value for the property, <xref:System.Windows.Automation.AutomationElement.NotSupported> is to be returned instead of a default value.  \n  \n [!code-cs[UIAClient_snip#166](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#166)]\n [!code-vb[UIAClient_snip#166](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#166)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty ClickablePointProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.ControlTypeProperty
  id: ControlTypeProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: ControlTypeProperty
  nameWithType: AutomationElement.ControlTypeProperty
  fullName: System.Windows.Automation.AutomationElement.ControlTypeProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "識別<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.ControlType*>屬性。</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.ControlType*>"
  remarks: "使用者介面自動化用戶端應用程式會使用這個識別項。 UI 自動化提供者應該<xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers>中使用的對等的識別項       這個屬性也可以從擷取<xref:System.Windows.Automation.AutomationElement.Current%2A>或<xref:System.Windows.Automation.AutomationElement.Cached%2A>屬性。</xref:System.Windows.Automation.AutomationElement.Cached%2A> </xref:System.Windows.Automation.AutomationElement.Current%2A>       屬性的預設值是<xref:System.Windows.Automation.ControlType.Custom></xref:System.Windows.Automation.ControlType.Custom>"
  example:
  - "The following example retrieves the current value of the property. The default value is returned if the element does not provide one.  \n  \n [!code-cs[UIAClient_snip#136](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#136)]\n [!code-vb[UIAClient_snip#136](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#136)]  \n  \n The following example retrieves the current value of the property, but specifies that if the element itself does not provide a value for the property, <xref:System.Windows.Automation.AutomationElement.NotSupported> is to be returned instead of a default value.  \n  \n [!code-cs[UIAClient_snip#137](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#137)]\n [!code-vb[UIAClient_snip#137](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#137)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty ControlTypeProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.CultureProperty
  id: CultureProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: CultureProperty
  nameWithType: AutomationElement.CultureProperty
  fullName: System.Windows.Automation.AutomationElement.CultureProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "識別文化特性屬性。"
  remarks: "使用者介面自動化用戶端應用程式會使用這個識別項。 UI 自動化提供者應該<xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers>中使用的對等的識別項       內[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]framework 中，報告的預設值一定會`en-US`因為[!INCLUDE[TLA#tla_winfx](~/add/includes/ajax-current-ext-md.md)]架構會自動預設為英文。 適用於其他[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]架構這個屬性必須明確設定，或者不會公開。       這個屬性可以針對每個控制項，存在，但通常上才有提供應用程式層級。       傳回值的屬性都屬於型別<xref:System.Globalization.CultureInfo>.</xref:System.Globalization.CultureInfo>"
  example:
  - "The following example retrieves the current value of the property.  \n  \n [!code-cs[UIAClient_snip#138](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#138)]\n [!code-vb[UIAClient_snip#138](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#138)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty CultureProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.Current
  id: Current
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: Current
  nameWithType: AutomationElement.Current
  fullName: System.Windows.Automation.AutomationElement.Current
  type: Property
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "取得目前的屬性值的<xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>。"
  remarks: "存取子[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]屬性會傳回由目前的結構屬性以表示。 您不需要擷取的結構。您可以直接存取其成員，如下列範例所示。 如需特定上可用的屬性以及其用法的詳細資訊，請參閱<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation>.</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation>       若要取得的快取的值[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]屬性在這個項目，請使用<xref:System.Windows.Automation.AutomationElement.Cached%2A>屬性。</xref:System.Windows.Automation.AutomationElement.Cached%2A>"
  example:
  - "The following example shows how the Current property is used to retrieve the name of an item that has been selected in a list.  \n  \n [!code-vb[UIAClient_snip#106](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#106)]\n [!code-cs[UIAClient_snip#106](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#106)]"
  syntax:
    content: public System.Windows.Automation.AutomationElement.AutomationElementInformation Current { get; }
    return:
      type: System.Windows.Automation.AutomationElement.AutomationElementInformation
      description: "結構，包含目前屬性值。"
  overload: System.Windows.Automation.AutomationElement.Current*
  exceptions:
  - type: System.Windows.Automation.ElementNotAvailableException
    commentId: T:System.Windows.Automation.ElementNotAvailableException
    description: "UI <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>不再存在。"
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: AutomationElement.Equals(Object)
  fullName: System.Windows.Automation.AutomationElement.Equals(Object)
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "決定是否指定<xref href=&quot;System.Windows.Automation.AutomationElement&quot;></xref>具有相同的值，因為這樣<xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>。"
  remarks: "比較為相等的兩個項目可能包含不同的快取的資訊不同時間點的時間。 相等檢查只測試，以便<xref:System.Windows.Automation.AutomationElement>物件參考相同的基礎使用者介面項目; 也就是說，它們有相同的執行階段識別項。</xref:System.Windows.Automation.AutomationElement>       這個方法相當於等號比較運算子，這也會比較執行階段識別項。"
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "<xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>比較。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果指定<xref href=&quot;System.Windows.Automation.AutomationElement&quot;></xref>等於這<xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>，否則為<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Automation.AutomationElement.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.Finalize
  id: Finalize
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: Finalize()
  nameWithType: AutomationElement.Finalize()
  fullName: System.Windows.Automation.AutomationElement.Finalize()
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "允許物件嘗試釋放資源，並透過記憶體回收開始前執行其他清除作業。"
  syntax:
    content: ~AutomationElement ();
    parameters: []
  overload: System.Windows.Automation.AutomationElement.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.FindAll(System.Windows.Automation.TreeScope,System.Windows.Automation.Condition)
  id: FindAll(System.Windows.Automation.TreeScope,System.Windows.Automation.Condition)
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: FindAll(TreeScope,Condition)
  nameWithType: AutomationElement.FindAll(TreeScope,Condition)
  fullName: System.Windows.Automation.AutomationElement.FindAll(TreeScope,Condition)
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "傳回所有<xref href=&quot;System.Windows.Automation.AutomationElement&quot;></xref>滿足指定的條件的物件。"
  remarks: "搜尋範圍是相對於呼叫該方法的項目。 在樹狀目錄中所發生的順序，會傳回項目。       搜尋的桌面上的最上層視窗時，務必指定<xref:System.Windows.Automation.TreeScope>中`scope`，而非<xref:System.Windows.Automation.TreeScope>.</xref:System.Windows.Automation.TreeScope> </xref:System.Windows.Automation.TreeScope> 桌面的整個樹狀子目錄搜尋，可以逐一查看數千個項目，會導致堆疊溢位。       如果用戶端應用程式可能會嘗試尋找本身使用者介面項目，則您必須進行對所有[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]另一個執行緒上呼叫。"
  example:
  - "The following example shows how to use FindAll to locate all enabled buttons in a window.  \n  \n [!code-vb[UIAClient_snip#116](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#116)]\n [!code-cs[UIAClient_snip#116](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#116)]"
  syntax:
    content: public System.Windows.Automation.AutomationElementCollection FindAll (System.Windows.Automation.TreeScope scope, System.Windows.Automation.Condition condition);
    parameters:
    - id: scope
      type: System.Windows.Automation.TreeScope
      description: "值的位元組合，指定搜尋範圍。"
    - id: condition
      type: System.Windows.Automation.Condition
      description: "包含符合準則的物件。"
    return:
      type: System.Windows.Automation.AutomationElementCollection
      description: "符合指定之條件的物件集合。 如果沒有相符的項目，則會傳回空集合。"
  overload: System.Windows.Automation.AutomationElement.FindAll*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.FindFirst(System.Windows.Automation.TreeScope,System.Windows.Automation.Condition)
  id: FindFirst(System.Windows.Automation.TreeScope,System.Windows.Automation.Condition)
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: FindFirst(TreeScope,Condition)
  nameWithType: AutomationElement.FindFirst(TreeScope,Condition)
  fullName: System.Windows.Automation.AutomationElement.FindFirst(TreeScope,Condition)
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "傳回符合指定的條件的第一個子系或下階元素。"
  remarks: "搜尋範圍是相對於呼叫該方法的項目。       搜尋的桌面上的最上層視窗時，務必指定<xref:System.Windows.Automation.TreeScope>中`scope`，而非<xref:System.Windows.Automation.TreeScope>.</xref:System.Windows.Automation.TreeScope> </xref:System.Windows.Automation.TreeScope> 桌面的整個樹狀子目錄搜尋，可以逐一查看數千個項目，會導致堆疊溢位。       如果用戶端應用程式可能會嘗試尋找本身使用者介面項目，則您必須進行對所有[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]另一個執行緒上呼叫。"
  example:
  - "The following example shows how to find a child window from its identifier.  \n  \n [!code-vb[UIAClient_snip#110](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#110)]\n [!code-cs[UIAClient_snip#110](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#110)]"
  syntax:
    content: public System.Windows.Automation.AutomationElement FindFirst (System.Windows.Automation.TreeScope scope, System.Windows.Automation.Condition condition);
    parameters:
    - id: scope
      type: System.Windows.Automation.TreeScope
      description: "值的位元組合，指定搜尋範圍。"
    - id: condition
      type: System.Windows.Automation.Condition
      description: "包含符合準則的物件。"
    return:
      type: System.Windows.Automation.AutomationElement
      description: "符合條件的第一個元素或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果找到相符項目。"
  overload: System.Windows.Automation.AutomationElement.FindFirst*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.FocusedElement
  id: FocusedElement
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: FocusedElement
  nameWithType: AutomationElement.FocusedElement
  fullName: System.Windows.Automation.AutomationElement.FocusedElement
  type: Property
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "取得<xref href=&quot;System.Windows.Automation.AutomationElement&quot;></xref>目前具有焦點。"
  remarks: "如果用戶端應用程式可能會嘗試尋找本身使用者介面項目，則您必須進行對所有[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]另一個執行緒上呼叫。"
  syntax:
    content: public static System.Windows.Automation.AutomationElement FocusedElement { get; }
    return:
      type: System.Windows.Automation.AutomationElement
      description: "取得具有焦點[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]項目。"
  overload: System.Windows.Automation.AutomationElement.FocusedElement*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.FrameworkIdProperty
  id: FrameworkIdProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: FrameworkIdProperty
  nameWithType: AutomationElement.FrameworkIdProperty
  fullName: System.Windows.Automation.AutomationElement.FrameworkIdProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "識別<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.FrameworkId*>屬性。</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.FrameworkId*>"
  remarks: "使用者介面自動化用戶端應用程式會使用這個識別項。 UI 自動化提供者應該<xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers>中使用的對等的識別項       傳回值的屬性都屬於型別<xref:System.String>.</xref:System.String> 預設值為空字串。       這個屬性可讓特殊案例套用至整個使用者介面架構的應用程式。 屬性值的範例為&quot;Win32&quot;、&quot;型 WinForm&quot;和&quot;DirectUI&quot;。"
  example:
  - "The following example retrieves the current value of the property.  \n  \n [!code-cs[UIAClient_snip#139](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#139)]\n [!code-vb[UIAClient_snip#139](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#139)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty FrameworkIdProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.FromHandle(System.IntPtr)
  id: FromHandle(System.IntPtr)
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: FromHandle(IntPtr)
  nameWithType: AutomationElement.FromHandle(IntPtr)
  fullName: System.Windows.Automation.AutomationElement.FromHandle(IntPtr)
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "擷取新<xref href=&quot;System.Windows.Automation.AutomationElement&quot;></xref>物件[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]指定的視窗控制代碼所參考的項目。"
  syntax:
    content: public static System.Windows.Automation.AutomationElement FromHandle (IntPtr hwnd);
    parameters:
    - id: hwnd
      type: System.IntPtr
      description: "控制代碼[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]項目。"
    return:
      type: System.Windows.Automation.AutomationElement
      description: "An <xref href=&quot;System.Windows.Automation.AutomationElement&quot;></xref> for the [!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)] item identified by <code>hwnd</code>."
  overload: System.Windows.Automation.AutomationElement.FromHandle*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.FromLocalProvider(System.Windows.Automation.Provider.IRawElementProviderSimple)
  id: FromLocalProvider(System.Windows.Automation.Provider.IRawElementProviderSimple)
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: FromLocalProvider(IRawElementProviderSimple)
  nameWithType: AutomationElement.FromLocalProvider(IRawElementProviderSimple)
  fullName: System.Windows.Automation.AutomationElement.FromLocalProvider(IRawElementProviderSimple)
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "擷取新<xref href=&quot;System.Windows.Automation.AutomationElement&quot;></xref>物件從本機<xref href=&quot;System.Windows.Automation.Provider.IRawElementProviderSimple&quot;></xref>實作。"
  remarks: "這個方法可用的用戶端協助程式庫，讓其呼叫端若要存取它自己的原生項目類型。 例如，[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]會在內部使用這個方法，好讓它可以傳回<xref:System.Windows.Automation.AutomationElement>給想要取得的用戶端[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]項目，直接從<xref:System.Windows.UIElement>.</xref:System.Windows.UIElement> </xref:System.Windows.Automation.AutomationElement>"
  syntax:
    content: public static System.Windows.Automation.AutomationElement FromLocalProvider (System.Windows.Automation.Provider.IRawElementProviderSimple localImpl);
    parameters:
    - id: localImpl
      type: System.Windows.Automation.Provider.IRawElementProviderSimple
      description: "提供者物件。"
    return:
      type: System.Windows.Automation.AutomationElement
      description: "<xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>表示提供者物件所服務的項目。"
  overload: System.Windows.Automation.AutomationElement.FromLocalProvider*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.FromPoint(System.Windows.Point)
  id: FromPoint(System.Windows.Point)
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: FromPoint(Point)
  nameWithType: AutomationElement.FromPoint(Point)
  fullName: System.Windows.Automation.AutomationElement.FromPoint(Point)
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "擷取新<xref href=&quot;System.Windows.Automation.AutomationElement&quot;></xref>物件[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]位於桌面上所指定點的項目。"
  remarks: "FromPoint 傳回的項目邏輯樹狀結構中最接近的根項目。       如果用戶端應用程式可能會嘗試尋找本身使用者介面項目，則您必須進行對所有[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]另一個執行緒上呼叫。       雖然傳回之週框矩形內的點是<xref:System.Windows.Automation.AutomationElement>，就不一定要是控制項可點選的一部分。</xref:System.Windows.Automation.AutomationElement> 比方說，圓形按鈕可能無法按其周框的角落附近。"
  example:
  - "The following example retrieves the <xref:System.Windows.Automation.AutomationElement> at the system cursor location.  \n  \n [!code-vb[UIAClient_snip#181](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#181)]\n [!code-cs[UIAClient_snip#181](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#181)]"
  syntax:
    content: public static System.Windows.Automation.AutomationElement FromPoint (System.Windows.Point pt);
    parameters:
    - id: pt
      type: System.Windows.Point
      description: "要尋找的桌面實際螢幕座標[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]項目。"
    return:
      type: System.Windows.Automation.AutomationElement
      description: "[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]指定點上的項目。"
  overload: System.Windows.Automation.AutomationElement.FromPoint*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.GetCachedPattern(System.Windows.Automation.AutomationPattern)
  id: GetCachedPattern(System.Windows.Automation.AutomationPattern)
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: GetCachedPattern(AutomationPattern)
  nameWithType: AutomationElement.GetCachedPattern(AutomationPattern)
  fullName: System.Windows.Automation.AutomationElement.GetCachedPattern(AutomationPattern)
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "從這個快取擷取指定的模式<xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>。"
  remarks: "GetCachedPattern 從快取擷取指定的模式。 若要擷取的指定模式比對目前的物件，呼叫<xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A>.</xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A>       如果要求的模式未先前快取，則這個方法會擲回例外狀況。"
  example:
  - "The following example shows how to cache and retrieve a pattern.  \n  \n [!code-vb[UIAClient_snip#108](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#108)]\n [!code-cs[UIAClient_snip#108](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#108)]"
  syntax:
    content: public object GetCachedPattern (System.Windows.Automation.AutomationPattern pattern);
    parameters:
    - id: pattern
      type: System.Windows.Automation.AutomationPattern
      description: "要擷取之模式的識別項。"
    return:
      type: System.Object
      description: "物件，表示指定的模式。 如果沒有符合的模式， <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>傳回。"
  overload: System.Windows.Automation.AutomationElement.GetCachedPattern*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "要求的模式不在快取，或不支援項目。"
  - type: System.Windows.Automation.ElementNotAvailableException
    commentId: T:System.Windows.Automation.ElementNotAvailableException
    description: "UI <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>不再存在。"
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.GetCachedPropertyValue(System.Windows.Automation.AutomationProperty)
  id: GetCachedPropertyValue(System.Windows.Automation.AutomationProperty)
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: GetCachedPropertyValue(AutomationProperty)
  nameWithType: AutomationElement.GetCachedPropertyValue(AutomationProperty)
  fullName: System.Windows.Automation.AutomationElement.GetCachedPropertyValue(AutomationProperty)
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "從這個快取擷取指定的屬性值<xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>。 為屬性類型的適當預設值會傳回屬性未明確支援目標[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]項目。"
  remarks: "如果項目本身的使用者介面自動化提供者支援的屬性，則會傳回屬性的值。 否則，預設屬性會由[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]傳回。 預設屬性的資訊，請參閱屬性的識別項欄位<xref:System.Windows.Automation.AutomationElement>，例如<xref:System.Windows.Automation.AutomationElement.AcceleratorKeyProperty>.</xref:System.Windows.Automation.AutomationElement.AcceleratorKeyProperty> </xref:System.Windows.Automation.AutomationElement>       GetCachedPropertyValue 擷取指定的屬性，從<xref:System.Windows.Automation.AutomationElement>的快取。</xref:System.Windows.Automation.AutomationElement> 擷取目前的物件，指定的屬性呼叫<xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A>.</xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A>       如果要求的屬性未先前快取，則這個方法會擲回例外狀況。"
  example:
  - "The following shows how this method can be used to retrieve a cached property.  \n  \n [!code-vb[UIAClient_snip#108](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#108)]\n [!code-cs[UIAClient_snip#108](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#108)]"
  syntax:
    content: public object GetCachedPropertyValue (System.Windows.Automation.AutomationProperty property);
    parameters:
    - id: property
      type: System.Windows.Automation.AutomationProperty
      description: "要擷取之屬性的識別項。"
    return:
      type: System.Object
      description: "物件，包含指定屬性的值。"
  overload: System.Windows.Automation.AutomationElement.GetCachedPropertyValue*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "要求的屬性不在快取中。"
  - type: System.Windows.Automation.ElementNotAvailableException
    commentId: T:System.Windows.Automation.ElementNotAvailableException
    description: "[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]如<xref href=&quot;System.Windows.Automation.AutomationElement&quot;></xref>不再存在。"
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.GetCachedPropertyValue(System.Windows.Automation.AutomationProperty,System.Boolean)
  id: GetCachedPropertyValue(System.Windows.Automation.AutomationProperty,System.Boolean)
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: GetCachedPropertyValue(AutomationProperty,Boolean)
  nameWithType: AutomationElement.GetCachedPropertyValue(AutomationProperty,Boolean)
  fullName: System.Windows.Automation.AutomationElement.GetCachedPropertyValue(AutomationProperty,Boolean)
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "從這個快取擷取指定的屬性值<xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>，選擇性忽略任何預設屬性。"
  remarks: "<xref:System.Windows.Automation.AutomationElement.GetCachedPropertyValue%2A>從<xref:System.Windows.Automation.AutomationElement>.</xref:System.Windows.Automation.AutomationElement>的快取擷取指定的屬性</xref:System.Windows.Automation.AutomationElement.GetCachedPropertyValue%2A> 若要擷取目前的屬性，呼叫<xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A>.</xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A>       傳遞`false`中`ignoreDefaultValue`相當於呼叫<xref:System.Windows.Automation.AutomationElement.GetCachedPropertyValue%28System.Windows.Automation.AutomationProperty%29?displayProperty=fullName>.</xref:System.Windows.Automation.AutomationElement.GetCachedPropertyValue%28System.Windows.Automation.AutomationProperty%29?displayProperty=fullName>       如果項目本身的使用者介面自動化提供者支援的屬性，則會傳回屬性的值。 否則，如果`ignoreDefaultValue`是`false`，由指定的預設屬性[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]傳回。 預設屬性的資訊，請參閱屬性的識別項欄位<xref:System.Windows.Automation.AutomationElement>，例如<xref:System.Windows.Automation.AutomationElement.AcceleratorKeyProperty>.</xref:System.Windows.Automation.AutomationElement.AcceleratorKeyProperty> </xref:System.Windows.Automation.AutomationElement>       如果要求的屬性未先前快取，則這個方法會擲回例外狀況。"
  example:
  - "The following example shows how this method can be used to retrieve a cached property.  \n  \n [!code-vb[UIAClient_snip#108](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#108)]\n [!code-cs[UIAClient_snip#108](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#108)]"
  syntax:
    content: public object GetCachedPropertyValue (System.Windows.Automation.AutomationProperty property, bool ignoreDefaultValue);
    parameters:
    - id: property
      type: System.Windows.Automation.AutomationProperty
      description: "要擷取之屬性的識別項。"
    - id: ignoreDefaultValue
      type: System.Boolean
      description: "值，指定不支援指定的屬性，是否應該忽略預設值。"
    return:
      type: System.Object
      description: "物件，其中包含指定的屬性值或<xref href=&quot;System.Windows.Automation.AutomationElement.NotSupported&quot;></xref>元素未提供值，如果和<code> ignoreDefaultValue </code>是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Automation.AutomationElement.GetCachedPropertyValue*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "要求的屬性不在快取中。"
  - type: System.Windows.Automation.ElementNotAvailableException
    commentId: T:System.Windows.Automation.ElementNotAvailableException
    description: "UI <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>不再存在。"
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.GetClickablePoint
  id: GetClickablePoint
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: GetClickablePoint()
  nameWithType: AutomationElement.GetClickablePoint()
  fullName: System.Windows.Automation.AutomationElement.GetClickablePoint()
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "上擷取點<xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref> ，可以按下。"
  remarks: "<xref:System.Windows.Automation.AutomationElement>不可點選如果完全遮住其他視窗。</xref:System.Windows.Automation.AutomationElement>       <xref:System.Windows.Automation.AutomationElement>時，可按滿足下列所有條件:-以程式設計方式顯示，並提供[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]樹狀目錄。</xref:System.Windows.Automation.AutomationElement>      -它是完整捲動到檢視範圍內父容器，如果有的話。 如果項目會裁剪，就是可點選不保證。      -項目不會遮住其他 UI 項目。 如果項目會變暗某個 UI 項目，其祖系以外，它可能不能按。      包含此項目的-視窗本身必須為可點按。 例如，視窗不可點選如果包含視窗是完全透明的。 按下滑鼠會按到視窗下方，因此半透明視窗內的任何控制項將不會傳回可點選的點。      -如果項目是容器 （例如清單或樹狀結構檢視），它必須有一個點，當按下將會導致常常控制項的背景。 如果子元素所佔據的容器控制項的每個部分，則不可點選。       沒有控制項將會進行任何定義的點按下時保證為可點按的 UI 自動化提供者。 請考慮改為使用在控制項上執行動作的控制項模式。"
  example:
  - "The following code retrieves a clickable point for a control and moves the system cursor to that point.  \n  \n [!code-vb[UIAClient_snip#179](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#179)]\n [!code-cs[UIAClient_snip#179](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#179)]"
  syntax:
    content: public System.Windows.Point GetClickablePoint ();
    parameters: []
    return:
      type: System.Windows.Point
      description: "用戶端可以使用這個項目上按一下某個點的實際螢幕座標。"
  overload: System.Windows.Automation.AutomationElement.GetClickablePoint*
  exceptions:
  - type: System.Windows.Automation.NoClickablePointException
    commentId: T:System.Windows.Automation.NoClickablePointException
    description: "沒有任何可點選的點。"
  - type: System.Windows.Automation.ElementNotAvailableException
    commentId: T:System.Windows.Automation.ElementNotAvailableException
    description: "UI <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>不再存在。"
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.GetCurrentPattern(System.Windows.Automation.AutomationPattern)
  id: GetCurrentPattern(System.Windows.Automation.AutomationPattern)
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: GetCurrentPattern(AutomationPattern)
  nameWithType: AutomationElement.GetCurrentPattern(AutomationPattern)
  fullName: System.Windows.Automation.AutomationElement.GetCurrentPattern(AutomationPattern)
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "指定的模式上擷取物件這<xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>。"
  remarks: "GetCurrentPattern 取得指定的模式，在呼叫時，根據其可用性。       某些形式的[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]，這個方法將會造成跨處理序的效能負擔。 應用程式可以由快取模式與使用<xref:System.Windows.Automation.AutomationElement.GetCachedPattern%2A>.</xref:System.Windows.Automation.AutomationElement.GetCachedPattern%2A>擷取專注額外負荷"
  example:
  - "The following example shows how to use this method to retrieve a <xref:System.Windows.Automation.SelectionItemPattern>, which is then used to select an item in a list box.  \n  \n [!code-vb[UIAClient_snip#103](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#103)]\n [!code-cs[UIAClient_snip#103](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#103)]  \n  \n> [!NOTE]\n>  For often-repeated tasks such as the one in the example, it would be more efficient to cache the pattern and use <xref:System.Windows.Automation.AutomationElement.GetCachedPattern%2A>."
  syntax:
    content: public object GetCurrentPattern (System.Windows.Automation.AutomationPattern pattern);
    parameters:
    - id: pattern
      type: System.Windows.Automation.AutomationPattern
      description: "要擷取之模式的識別項。"
    return:
      type: System.Object
      description: "如果指定的模式目前支援的模式物件<xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>。"
  overload: System.Windows.Automation.AutomationElement.GetCurrentPattern*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "項目所不支援此模式。"
  - type: System.Windows.Automation.ElementNotAvailableException
    commentId: T:System.Windows.Automation.ElementNotAvailableException
    description: "UI <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>不再存在。"
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.GetCurrentPropertyValue(System.Windows.Automation.AutomationProperty)
  id: GetCurrentPropertyValue(System.Windows.Automation.AutomationProperty)
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: GetCurrentPropertyValue(AutomationProperty)
  nameWithType: AutomationElement.GetCurrentPropertyValue(AutomationProperty)
  fullName: System.Windows.Automation.AutomationElement.GetCurrentPropertyValue(AutomationProperty)
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "擷取所指定的屬性，這個值<xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>。 為屬性類型的適當預設值會傳回屬性未明確支援目標[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]項目。"
  remarks: "GetCurrentPropertyValue 方法所傳回的值是目前在呼叫時。 值可以後續又變更由其他應用程式與互動[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]。       如果項目本身的使用者介面自動化提供者支援的屬性，則會傳回屬性的值。 否則，預設屬性會由[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]傳回。 預設屬性的資訊，請參閱屬性的識別項欄位<xref:System.Windows.Automation.AutomationElement>，例如<xref:System.Windows.Automation.AutomationElement.AcceleratorKeyProperty>.</xref:System.Windows.Automation.AutomationElement.AcceleratorKeyProperty> </xref:System.Windows.Automation.AutomationElement>       某些形式的[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]，這個方法將會造成跨處理序的效能負擔。 一開始可集中快取的屬性，並使用<xref:System.Windows.Automation.AutomationElement.GetCachedPropertyValue%2A>.</xref:System.Windows.Automation.AutomationElement.GetCachedPropertyValue%2A>擷取的額外負荷"
  example:
  - "The following example retrieves the current value of the <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.HelpText%2A> property. The default value is returned if the element does not provide one.  \n  \n [!code-vb[UIAClient_snip#126](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#126)]\n [!code-cs[UIAClient_snip#126](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#126)]"
  syntax:
    content: public object GetCurrentPropertyValue (System.Windows.Automation.AutomationProperty property);
    parameters:
    - id: property
      type: System.Windows.Automation.AutomationProperty
      description: "[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]屬性指定要擷取之屬性的識別項。"
    return:
      type: System.Object
      description: "物件，包含指定屬性的值。"
  overload: System.Windows.Automation.AutomationElement.GetCurrentPropertyValue*
  exceptions:
  - type: System.Windows.Automation.ElementNotAvailableException
    commentId: T:System.Windows.Automation.ElementNotAvailableException
    description: "UI <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>不再存在。"
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.GetCurrentPropertyValue(System.Windows.Automation.AutomationProperty,System.Boolean)
  id: GetCurrentPropertyValue(System.Windows.Automation.AutomationProperty,System.Boolean)
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: GetCurrentPropertyValue(AutomationProperty,Boolean)
  nameWithType: AutomationElement.GetCurrentPropertyValue(AutomationProperty,Boolean)
  fullName: System.Windows.Automation.AutomationElement.GetCurrentPropertyValue(AutomationProperty,Boolean)
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "擷取所指定的屬性，這個值<xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>，選擇性忽略任何預設屬性。"
  remarks: "傳遞`false`中`ignoreDefaultValue`相當於呼叫<xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%28System.Windows.Automation.AutomationProperty%29?displayProperty=fullName>.</xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%28System.Windows.Automation.AutomationProperty%29?displayProperty=fullName>       如果項目本身的使用者介面自動化提供者支援的屬性，則會傳回屬性的值。 否則，如果`ignoreDefaultValue`是`false`，由指定的預設屬性[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]傳回。 預設屬性的資訊，請參閱屬性的識別項欄位<xref:System.Windows.Automation.AutomationElement>，例如<xref:System.Windows.Automation.AutomationElement.AcceleratorKeyProperty>.</xref:System.Windows.Automation.AutomationElement.AcceleratorKeyProperty> </xref:System.Windows.Automation.AutomationElement>       GetCurrentPropertyValue 方法所傳回的值是目前在呼叫時。 值可以後續又變更由其他應用程式與互動[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]。       某些形式的[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]，這個方法將會造成跨處理序的效能負擔。 應用程式可以快取的屬性，然後擷取它們使用<xref:System.Windows.Automation.AutomationElement.GetCachedPropertyValue%2A>.</xref:System.Windows.Automation.AutomationElement.GetCachedPropertyValue%2A>專注額外負荷"
  example:
  - "The following example retrieves the current value of the <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.HelpText%2A> property, but specifies that if the element itself does not provide a value for the property, <xref:System.Windows.Automation.AutomationElement.NotSupported> is to be returned instead of a default value.  \n  \n [!code-vb[UIAClient_snip#123](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#123)]\n [!code-cs[UIAClient_snip#123](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#123)]"
  syntax:
    content: public object GetCurrentPropertyValue (System.Windows.Automation.AutomationProperty property, bool ignoreDefaultValue);
    parameters:
    - id: property
      type: System.Windows.Automation.AutomationProperty
      description: "[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]屬性指定要擷取之屬性的識別項。"
    - id: ignoreDefaultValue
      type: System.Boolean
      description: "指定若支援指定的屬性時，是否應該忽略預設值的值。"
    return:
      type: System.Object
      description: "物件，其中包含指定的屬性值或<xref href=&quot;System.Windows.Automation.AutomationElement.NotSupported&quot;></xref>元素未提供值，如果和<code> ignoreDefaultValue </code>是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Automation.AutomationElement.GetCurrentPropertyValue*
  exceptions:
  - type: System.Windows.Automation.ElementNotAvailableException
    commentId: T:System.Windows.Automation.ElementNotAvailableException
    description: "UI <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>不再存在。"
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.GetHashCode
  id: GetHashCode
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: AutomationElement.GetHashCode()
  fullName: System.Windows.Automation.AutomationElement.GetHashCode()
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "擷取此雜湊程式碼<xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>。"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "32 位元帶正負號的整數雜湊程式碼。"
  overload: System.Windows.Automation.AutomationElement.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.GetRuntimeId
  id: GetRuntimeId
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: GetRuntimeId()
  nameWithType: AutomationElement.GetRuntimeId()
  fullName: System.Windows.Automation.AutomationElement.GetRuntimeId()
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "擷取指派的唯一識別碼[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]項目。"
  remarks: "只保證是唯一的識別項[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]它所產生的桌面。 經過一段時間可重複使用識別項。       執行階段識別項的格式可能會變更在未來的版本。 傳回的識別項應該視為不透明值，並僅用於比較;例如，若要判斷是否<xref:System.Windows.Automation.AutomationElement>快取中。</xref:System.Windows.Automation.AutomationElement>"
  example:
  - "The following example shows how to retrieve the run-time identifier of an <xref:System.Windows.Automation.AutomationElement>.  \n  \n [!code-vb[UIAClient_snip#111](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#111)]\n [!code-cs[UIAClient_snip#111](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#111)]"
  syntax:
    content: public int[] GetRuntimeId ();
    parameters: []
    return:
      type: System.Int32[]
      description: "表示執行階段識別項的整數陣列。"
  overload: System.Windows.Automation.AutomationElement.GetRuntimeId*
  exceptions:
  - type: System.Windows.Automation.ElementNotAvailableException
    commentId: T:System.Windows.Automation.ElementNotAvailableException
    description: "UI <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>不再存在。"
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.GetSupportedPatterns
  id: GetSupportedPatterns
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: GetSupportedPatterns()
  nameWithType: AutomationElement.GetSupportedPatterns()
  fullName: System.Windows.Automation.AutomationElement.GetSupportedPatterns()
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "擷取控制項模式這個<xref href=&quot;System.Windows.Automation.AutomationElement&quot;></xref>支援。"
  remarks: "這個方法通常會用於偵錯。 呼叫它，則需要大量處理，因為它會查詢<xref:System.Windows.Automation.AutomationElement>的每個可能的模式。</xref:System.Windows.Automation.AutomationElement> 您通常用<xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A>來擷取<xref:System.Windows.Automation.AutomationElement>.</xref:System.Windows.Automation.AutomationElement>從特定的控制項模式</xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A> 若要確定是否支援特定的模式，請檢查適當的屬性;例如， <xref:System.Windows.Automation.AutomationElement.IsWindowPatternAvailableProperty>.</xref:System.Windows.Automation.AutomationElement.IsWindowPatternAvailableProperty>"
  example:
  - "The following example shows how to retrieve the control patterns supported by an <xref:System.Windows.Automation.AutomationElement>.  \n  \n [!code-vb[UIAClient_snip#114](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#114)]\n [!code-cs[UIAClient_snip#114](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#114)]"
  syntax:
    content: public System.Windows.Automation.AutomationPattern[] GetSupportedPatterns ();
    parameters: []
    return:
      type: System.Windows.Automation.AutomationPattern[]
      description: "陣列<xref href=&quot;System.Windows.Automation.AutomationPattern&quot;></xref>代表支援的控制項模式的物件。"
  overload: System.Windows.Automation.AutomationElement.GetSupportedPatterns*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.GetSupportedProperties
  id: GetSupportedProperties
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: GetSupportedProperties()
  nameWithType: AutomationElement.GetSupportedProperties()
  fullName: System.Windows.Automation.AutomationElement.GetSupportedProperties()
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "擷取項目所支援的屬性的識別項。"
  remarks: "傳回的陣列識別此項目; 支援的所有屬性不過，它也可以包含重複的項目或屬性包含`null`或空值。 大部分的用途是較好的方式使用<xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A>來判斷是否目前支援的屬性，以及取得其目前值。</xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A>"
  example:
  - "The following example shows how to retrieve the properties supported by an <xref:System.Windows.Automation.AutomationElement>.  \n  \n [!code-vb[UIAClient_snip#115](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#115)]\n [!code-cs[UIAClient_snip#115](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#115)]"
  syntax:
    content: public System.Windows.Automation.AutomationProperty[] GetSupportedProperties ();
    parameters: []
    return:
      type: System.Windows.Automation.AutomationProperty[]
      description: "支援的屬性識別碼的陣列。"
  overload: System.Windows.Automation.AutomationElement.GetSupportedProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.GetUpdatedCache(System.Windows.Automation.CacheRequest)
  id: GetUpdatedCache(System.Windows.Automation.CacheRequest)
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: GetUpdatedCache(CacheRequest)
  nameWithType: AutomationElement.GetUpdatedCache(CacheRequest)
  fullName: System.Windows.Automation.AutomationElement.GetUpdatedCache(CacheRequest)
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "擷取新<xref href=&quot;System.Windows.Automation.AutomationElement&quot;></xref>更新快取。"
  remarks: "原始<xref:System.Windows.Automation.AutomationElement>保持不變。</xref:System.Windows.Automation.AutomationElement> GetUpdatedCache 傳回新<xref:System.Windows.Automation.AutomationElement>，它會參考相同[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]且具有相同<xref:System.Windows.Automation.AutomationElement>.</xref:System.Windows.Automation.AutomationElement> </xref:System.Windows.Automation.AutomationElement>"
  example:
  - "The following example demonstrates how a cache might be updated whenever the selection in a combo box changes.  \n  \n [!code-vb[UIAClient_snip#109](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#109)]\n [!code-cs[UIAClient_snip#109](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#109)]"
  syntax:
    content: public System.Windows.Automation.AutomationElement GetUpdatedCache (System.Windows.Automation.CacheRequest request);
    parameters:
    - id: request
      type: System.Windows.Automation.CacheRequest
      description: "模式和屬性，以包含在更新快取中。"
    return:
      type: System.Windows.Automation.AutomationElement
      description: "新<xref href=&quot;System.Windows.Automation.AutomationElement&quot;></xref>的已更新之快取。"
  overload: System.Windows.Automation.AutomationElement.GetUpdatedCache*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.HasKeyboardFocusProperty
  id: HasKeyboardFocusProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: HasKeyboardFocusProperty
  nameWithType: AutomationElement.HasKeyboardFocusProperty
  fullName: System.Windows.Automation.AutomationElement.HasKeyboardFocusProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "識別<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.HasKeyboardFocus*>屬性。</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.HasKeyboardFocus*>"
  remarks: "使用者介面自動化用戶端應用程式會使用這個識別項。 UI 自動化提供者應該<xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers>中使用的對等的識別項       這個屬性也可以從擷取<xref:System.Windows.Automation.AutomationElement.Current%2A>或<xref:System.Windows.Automation.AutomationElement.Cached%2A>屬性。</xref:System.Windows.Automation.AutomationElement.Cached%2A> </xref:System.Windows.Automation.AutomationElement.Current%2A>       傳回值的屬性都屬於型別<xref:System.Boolean>.</xref:System.Boolean> 屬性的預設值是`false`。"
  example:
  - "The following example retrieves the current value of the property. The default value is returned if the element does not provide one.  \n  \n [!code-cs[UIAClient_snip#140](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#140)]\n [!code-vb[UIAClient_snip#140](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#140)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty HasKeyboardFocusProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.HelpTextProperty
  id: HelpTextProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: HelpTextProperty
  nameWithType: AutomationElement.HelpTextProperty
  fullName: System.Windows.Automation.AutomationElement.HelpTextProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "識別<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.HelpText*>屬性。</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.HelpText*>"
  remarks: "使用者介面自動化用戶端應用程式會使用這個識別項。 UI 自動化提供者應該<xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers>中使用的對等的識別項       這個屬性也可以從擷取<xref:System.Windows.Automation.AutomationElement.Current%2A>或<xref:System.Windows.Automation.AutomationElement.Cached%2A>屬性。</xref:System.Windows.Automation.AutomationElement.Cached%2A> </xref:System.Windows.Automation.AutomationElement.Current%2A>       這項資訊通常被取自提供者所指定的工具提示。       傳回值的屬性都屬於型別<xref:System.String>.</xref:System.String> 屬性的預設值為空字串。"
  example:
  - "The following example retrieves the current value of the property. The default value is returned if the element does not provide one.  \n  \n [!code-vb[UIAClient_snip#126](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#126)]\n [!code-cs[UIAClient_snip#126](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#126)]  \n  \n The following example retrieves the current value of the property, but specifies that if the element itself does not provide a value for the property, <xref:System.Windows.Automation.AutomationElement.NotSupported> is to be returned instead of a default value.  \n  \n [!code-vb[UIAClient_snip#123](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#123)]\n [!code-cs[UIAClient_snip#123](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#123)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty HelpTextProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.IsContentElementProperty
  id: IsContentElementProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: IsContentElementProperty
  nameWithType: AutomationElement.IsContentElementProperty
  fullName: System.Windows.Automation.AutomationElement.IsContentElementProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "識別<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsContentElement*>屬性。</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsContentElement*>"
  remarks: "使用者介面自動化用戶端應用程式會使用這個識別項。 UI 自動化提供者應該<xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers>中使用的對等的識別項       這個屬性也可以從擷取<xref:System.Windows.Automation.AutomationElement.Current%2A>或<xref:System.Windows.Automation.AutomationElement.Cached%2A>屬性。</xref:System.Windows.Automation.AutomationElement.Cached%2A> </xref:System.Windows.Automation.AutomationElement.Current%2A>       內容檢視[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]樹狀目錄中所提供的檢視[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]其中只包含代表資料內的項目[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]。       項目必須是能夠將保存內容控制項。       傳回值的屬性都屬於型別<xref:System.Boolean>.</xref:System.Boolean> 屬性的預設值是`true`。"
  example:
  - "The following example retrieves the current value of the property. The default value is returned if the element does not provide one.  \n  \n [!code-cs[UIAClient_snip#141](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#141)]\n [!code-vb[UIAClient_snip#141](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#141)]  \n  \n The following example retrieves the current value of the property, but specifies that if the element itself does not provide a value for the property, <xref:System.Windows.Automation.AutomationElement.NotSupported> is to be returned instead of a default value.  \n  \n [!code-cs[UIAClient_snip#142](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#142)]\n [!code-vb[UIAClient_snip#142](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#142)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty IsContentElementProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.IsControlElementProperty
  id: IsControlElementProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: IsControlElementProperty
  nameWithType: AutomationElement.IsControlElementProperty
  fullName: System.Windows.Automation.AutomationElement.IsControlElementProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "識別<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsControlElement*>屬性。</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsControlElement*>"
  remarks: "使用者介面自動化用戶端應用程式會使用這個識別項。 UI 自動化提供者應該<xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers>中使用的對等的識別項       這個屬性也可以從擷取<xref:System.Windows.Automation.AutomationElement.Current%2A>或<xref:System.Windows.Automation.AutomationElement.Cached%2A>屬性。</xref:System.Windows.Automation.AutomationElement.Cached%2A> </xref:System.Windows.Automation.AutomationElement.Current%2A>       控制項是使用者感知為互動式或包含的資訊中的項目[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]。       傳回值的屬性都屬於型別<xref:System.Boolean>.</xref:System.Boolean> 屬性的預設值是`true`。"
  example:
  - "The following example retrieves the current value of the property. The default value is returned if the element does not provide one.  \n  \n [!code-cs[UIAClient_snip#143](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#143)]\n [!code-vb[UIAClient_snip#143](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#143)]  \n  \n The following example retrieves the current value of the property, but specifies that if the element itself does not provide a value for the property, <xref:System.Windows.Automation.AutomationElement.NotSupported> is to be returned instead of a default value.  \n  \n [!code-cs[UIAClient_snip#144](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#144)]\n [!code-vb[UIAClient_snip#144](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#144)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty IsControlElementProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.IsDockPatternAvailableProperty
  id: IsDockPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: IsDockPatternAvailableProperty
  nameWithType: AutomationElement.IsDockPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsDockPatternAvailableProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "識別屬性，指出是否<xref href=&quot;System.Windows.Automation.DockPattern&quot;></xref>控制項模式是呇謅鎯<xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>。"
  remarks: "使用者介面自動化用戶端應用程式會使用這個識別項。 UI 自動化提供者應該<xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers>中使用的對等的識別項       傳回值的屬性都屬於型別<xref:System.Boolean>.</xref:System.Boolean> 屬性的預設值是`false`。"
  example:
  - "The following example  ascertains whether a specified control pattern is supported by an <xref:System.Windows.Automation.AutomationElement>.  \n  \n [!code-cs[UIAClient_snip#145](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#145)]\n [!code-vb[UIAClient_snip#145](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#145)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty IsDockPatternAvailableProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.IsEnabledProperty
  id: IsEnabledProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: IsEnabledProperty
  nameWithType: AutomationElement.IsEnabledProperty
  fullName: System.Windows.Automation.AutomationElement.IsEnabledProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "識別<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsEnabled*>屬性，指定是否[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]所參考的項目<xref href=&quot;System.Windows.Automation.AutomationElement&quot;></xref>已啟用。</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsEnabled*>"
  remarks: "使用者介面自動化用戶端應用程式會使用這個識別項。 UI 自動化提供者應該<xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers>中使用的對等的識別項       這個屬性也可以從擷取<xref:System.Windows.Automation.AutomationElement.Current%2A>或<xref:System.Windows.Automation.AutomationElement.Cached%2A>屬性。</xref:System.Windows.Automation.AutomationElement.Cached%2A> </xref:System.Windows.Automation.AutomationElement.Current%2A>       傳回值的屬性都屬於型別<xref:System.Boolean>.</xref:System.Boolean> 屬性的預設值是`false`。       控制項的啟用的狀態時`false`，它會假設，子控制項也不會啟用。 當控制項的父代的狀態變更時，不應預期來自子元素的屬性變更事件。"
  example:
  - "The following example retrieves the current value of the property. The default value is returned if the element does not provide one.  \n  \n [!code-cs[UIAClient_snip#146](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#146)]\n [!code-vb[UIAClient_snip#146](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#146)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty IsEnabledProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.IsExpandCollapsePatternAvailableProperty
  id: IsExpandCollapsePatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: IsExpandCollapsePatternAvailableProperty
  nameWithType: AutomationElement.IsExpandCollapsePatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsExpandCollapsePatternAvailableProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "識別屬性，指出是否<xref href=&quot;System.Windows.Automation.ExpandCollapsePattern&quot;></xref>控制項模式是呇謅鎯<xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>。"
  remarks: "使用者介面自動化用戶端應用程式會使用這個識別項。 UI 自動化提供者應該<xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers>中使用的對等的識別項       傳回值的屬性都屬於型別<xref:System.Boolean>.</xref:System.Boolean> 屬性的預設值是`false`。"
  example:
  - "The following example retrieves a value that specifies whether a specified control pattern is supported by an <xref:System.Windows.Automation.AutomationElement>.  \n  \n [!code-cs[UIAClient_snip#145](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#145)]\n [!code-vb[UIAClient_snip#145](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#145)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty IsExpandCollapsePatternAvailableProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.IsGridItemPatternAvailableProperty
  id: IsGridItemPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: IsGridItemPatternAvailableProperty
  nameWithType: AutomationElement.IsGridItemPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsGridItemPatternAvailableProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "識別屬性，指出是否<xref href=&quot;System.Windows.Automation.GridItemPattern&quot;></xref>控制項模式是呇謅鎯<xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>。"
  remarks: "使用者介面自動化用戶端應用程式會使用這個識別項。 UI 自動化提供者應該<xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers>中使用的對等的識別項       傳回值的屬性都屬於型別<xref:System.Boolean>.</xref:System.Boolean> 屬性的預設值是`false`。"
  example:
  - "The following example ascertains whether a specified control pattern is supported by an <xref:System.Windows.Automation.AutomationElement>.  \n  \n [!code-cs[UIAClient_snip#145](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#145)]\n [!code-vb[UIAClient_snip#145](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#145)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty IsGridItemPatternAvailableProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.IsGridPatternAvailableProperty
  id: IsGridPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: IsGridPatternAvailableProperty
  nameWithType: AutomationElement.IsGridPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsGridPatternAvailableProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "識別屬性，指出是否<xref href=&quot;System.Windows.Automation.GridPattern&quot;></xref>控制項模式是呇謅鎯<xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>。"
  remarks: "使用者介面自動化用戶端應用程式會使用這個識別項。 UI 自動化提供者應該<xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers>中使用的對等的識別項       傳回值的屬性都屬於型別<xref:System.Boolean>.</xref:System.Boolean> 屬性的預設值是`false`。"
  example:
  - "The following example ascertains whether a specified control pattern is supported by an <xref:System.Windows.Automation.AutomationElement>.  \n  \n [!code-cs[UIAClient_snip#145](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#145)]\n [!code-vb[UIAClient_snip#145](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#145)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty IsGridPatternAvailableProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.IsInvokePatternAvailableProperty
  id: IsInvokePatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: IsInvokePatternAvailableProperty
  nameWithType: AutomationElement.IsInvokePatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsInvokePatternAvailableProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "識別屬性，指出是否<xref href=&quot;System.Windows.Automation.InvokePattern&quot;></xref>控制項模式是呇謅鎯<xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>。"
  remarks: "使用者介面自動化用戶端應用程式會使用這個識別項。 UI 自動化提供者應該<xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers>中使用的對等的識別項       傳回值的屬性都屬於型別<xref:System.Boolean>.</xref:System.Boolean> 屬性的預設值是`false`。"
  example:
  - "The following example ascertains whether a specified control pattern is supported by an <xref:System.Windows.Automation.AutomationElement>.  \n  \n [!code-cs[UIAClient_snip#145](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#145)]\n [!code-vb[UIAClient_snip#145](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#145)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty IsInvokePatternAvailableProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.IsItemContainerPatternAvailableProperty
  id: IsItemContainerPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: IsItemContainerPatternAvailableProperty
  nameWithType: AutomationElement.IsItemContainerPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsItemContainerPatternAvailableProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "識別屬性，指出是否<xref href=&quot;System.Windows.Automation.ItemContainerPattern&quot;></xref>控制項模式是呇謅鎯<xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>。"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty IsItemContainerPatternAvailableProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.IsKeyboardFocusableProperty
  id: IsKeyboardFocusableProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: IsKeyboardFocusableProperty
  nameWithType: AutomationElement.IsKeyboardFocusableProperty
  fullName: System.Windows.Automation.AutomationElement.IsKeyboardFocusableProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "識別<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsKeyboardFocusable*>屬性。</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsKeyboardFocusable*>"
  remarks: "使用者介面自動化用戶端應用程式會使用這個識別項。 UI 自動化提供者應該<xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers>中使用的對等的識別項       這個屬性也可以從擷取<xref:System.Windows.Automation.AutomationElement.Current%2A>或<xref:System.Windows.Automation.AutomationElement.Cached%2A>屬性。</xref:System.Windows.Automation.AutomationElement.Cached%2A> </xref:System.Windows.Automation.AutomationElement.Current%2A>       此屬性會提供正常運作所需的資訊<xref:System.Windows.Automation.AutomationElement.SetFocus%2A>方法。</xref:System.Windows.Automation.AutomationElement.SetFocus%2A>       傳回值的屬性都屬於型別<xref:System.Boolean>.</xref:System.Boolean> 屬性的預設值是`false`。"
  example:
  - "The following example retrieves the current value of the property. The default value is returned if the element does not provide one.  \n  \n [!code-cs[UIAClient_snip#147](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#147)]\n [!code-vb[UIAClient_snip#147](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#147)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty IsKeyboardFocusableProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.IsMultipleViewPatternAvailableProperty
  id: IsMultipleViewPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: IsMultipleViewPatternAvailableProperty
  nameWithType: AutomationElement.IsMultipleViewPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsMultipleViewPatternAvailableProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "識別屬性，指出是否<xref href=&quot;System.Windows.Automation.MultipleViewPattern&quot;></xref>控制項模式是呇謅鎯<xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>。"
  remarks: "使用者介面自動化用戶端應用程式會使用這個識別項。 UI 自動化提供者應該<xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers>中使用的對等的識別項       傳回值的屬性都屬於型別<xref:System.Boolean>.</xref:System.Boolean> 屬性的預設值是`false`。"
  example:
  - "The following example ascertains whether a specified control pattern is supported by an <xref:System.Windows.Automation.AutomationElement>.  \n  \n [!code-cs[UIAClient_snip#145](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#145)]\n [!code-vb[UIAClient_snip#145](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#145)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty IsMultipleViewPatternAvailableProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.IsOffscreenProperty
  id: IsOffscreenProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: IsOffscreenProperty
  nameWithType: AutomationElement.IsOffscreenProperty
  fullName: System.Windows.Automation.AutomationElement.IsOffscreenProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "識別<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsOffscreen*>屬性，指出是否[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]項目是在螢幕上看見。</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsOffscreen*>"
  remarks: "使用者介面自動化用戶端應用程式會使用這個識別項。 UI 自動化提供者應該<xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers>中使用的對等的識別項       這個屬性也可以從擷取<xref:System.Windows.Automation.AutomationElement.Current%2A>或<xref:System.Windows.Automation.AutomationElement.Cached%2A>屬性。</xref:System.Windows.Automation.AutomationElement.Cached%2A> </xref:System.Windows.Automation.AutomationElement.Current%2A>       傳回值是型別<xref:System.Boolean>，而且預設值是`false`。</xref:System.Boolean>       如需有關這個屬性時`true`，請參閱<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsOffscreen%2A>.</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsOffscreen%2A>"
  example:
  - "The following example retrieves the current value of the property. The default value is returned if the element does not provide one.  \n  \n [!code-cs[UIAClient_snip#148](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#148)]\n [!code-vb[UIAClient_snip#148](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#148)]  \n  \n The following example retrieves the current value of the property, but specifies that if the element itself does not provide a value for the property, <xref:System.Windows.Automation.AutomationElement.NotSupported> is to be returned instead of a default value.  \n  \n [!code-cs[UIAClient_snip#149](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#149)]\n [!code-vb[UIAClient_snip#149](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#149)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty IsOffscreenProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.IsPasswordProperty
  id: IsPasswordProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: IsPasswordProperty
  nameWithType: AutomationElement.IsPasswordProperty
  fullName: System.Windows.Automation.AutomationElement.IsPasswordProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "識別<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsPassword*>屬性。</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsPassword*>"
  remarks: "使用者介面自動化用戶端應用程式會使用這個識別項。 UI 自動化提供者應該<xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers>中使用的對等的識別項       這個屬性也可以從擷取<xref:System.Windows.Automation.AutomationElement.Current%2A>或<xref:System.Windows.Automation.AutomationElement.Cached%2A>屬性。</xref:System.Windows.Automation.AutomationElement.Cached%2A> </xref:System.Windows.Automation.AutomationElement.Current%2A>       這個屬性的傳回值是<xref:System.Boolean>.</xref:System.Boolean> 它會傳回`true`表示內容受保護，否則為`false`。"
  example:
  - "The following example retrieves the current value of the property.  \n  \n [!code-cs[UIAClient_snip#150](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#150)]\n [!code-vb[UIAClient_snip#150](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#150)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty IsPasswordProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.IsRangeValuePatternAvailableProperty
  id: IsRangeValuePatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: IsRangeValuePatternAvailableProperty
  nameWithType: AutomationElement.IsRangeValuePatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsRangeValuePatternAvailableProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "識別屬性，指出是否<xref href=&quot;System.Windows.Automation.RangeValuePattern&quot;></xref>控制項模式是呇謅鎯<xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>。"
  remarks: "使用者介面自動化用戶端應用程式會使用這個識別項。 UI 自動化提供者應該<xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers>中使用的對等的識別項       傳回值的屬性都屬於型別<xref:System.Boolean>.</xref:System.Boolean> 屬性的預設值是`false`。"
  example:
  - "The following example ascertains whether a specified control pattern is supported by an <xref:System.Windows.Automation.AutomationElement>.  \n  \n [!code-cs[UIAClient_snip#145](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#145)]\n [!code-vb[UIAClient_snip#145](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#145)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty IsRangeValuePatternAvailableProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.IsRequiredForFormProperty
  id: IsRequiredForFormProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: IsRequiredForFormProperty
  nameWithType: AutomationElement.IsRequiredForFormProperty
  fullName: System.Windows.Automation.AutomationElement.IsRequiredForFormProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "識別<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsRequiredForForm*>屬性。</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsRequiredForForm*>"
  remarks: "使用者介面自動化用戶端應用程式會使用這個識別項。 UI 自動化提供者應該<xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers>中使用的對等的識別項       這個屬性也可以從擷取<xref:System.Windows.Automation.AutomationElement.Current%2A>或<xref:System.Windows.Automation.AutomationElement.Cached%2A>屬性。</xref:System.Windows.Automation.AutomationElement.Cached%2A> </xref:System.Windows.Automation.AutomationElement.Current%2A>       這個屬性傳回的值屬於型別<xref:System.Boolean>，而且預設值是`false`。</xref:System.Boolean>"
  example:
  - "The following example retrieves the current value of the property. The default value is returned if the element does not provide one.  \n  \n [!code-cs[UIAClient_snip#151](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#151)]\n [!code-vb[UIAClient_snip#151](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#151)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty IsRequiredForFormProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.IsScrollItemPatternAvailableProperty
  id: IsScrollItemPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: IsScrollItemPatternAvailableProperty
  nameWithType: AutomationElement.IsScrollItemPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsScrollItemPatternAvailableProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "識別屬性，指出是否<xref href=&quot;System.Windows.Automation.ScrollItemPattern&quot;></xref>控制項模式是適用於此<xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>。"
  remarks: "使用者介面自動化用戶端應用程式會使用這個識別項。 UI 自動化提供者應該<xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers>中使用的對等的識別項       傳回值的屬性都屬於型別<xref:System.Boolean>.</xref:System.Boolean> 屬性的預設值是`false`。"
  example:
  - "The following example ascertains whether a specified control pattern is supported by an <xref:System.Windows.Automation.AutomationElement>.  \n  \n [!code-cs[UIAClient_snip#145](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#145)]\n [!code-vb[UIAClient_snip#145](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#145)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty IsScrollItemPatternAvailableProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.IsScrollPatternAvailableProperty
  id: IsScrollPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: IsScrollPatternAvailableProperty
  nameWithType: AutomationElement.IsScrollPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsScrollPatternAvailableProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "識別屬性，指出是否<xref href=&quot;System.Windows.Automation.ScrollPattern&quot;></xref>控制項模式是呇謅鎯<xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>。"
  remarks: "使用者介面自動化用戶端應用程式會使用這個識別項。 UI 自動化提供者應該<xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers>中使用的對等的識別項       傳回值的屬性都屬於型別<xref:System.Boolean>.</xref:System.Boolean> 屬性的預設值是`false`。"
  example:
  - "The following example ascertains whether a specified control pattern is supported by an <xref:System.Windows.Automation.AutomationElement>.  \n  \n [!code-cs[UIAClient_snip#145](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#145)]\n [!code-vb[UIAClient_snip#145](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#145)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty IsScrollPatternAvailableProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.IsSelectionItemPatternAvailableProperty
  id: IsSelectionItemPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: IsSelectionItemPatternAvailableProperty
  nameWithType: AutomationElement.IsSelectionItemPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsSelectionItemPatternAvailableProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "識別屬性，指出是否<xref href=&quot;System.Windows.Automation.SelectionItemPattern&quot;></xref>控制項模式是呇謅鎯<xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>。"
  remarks: "使用者介面自動化用戶端應用程式會使用這個識別項。 UI 自動化提供者應該<xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers>中使用的對等的識別項       傳回值的屬性都屬於型別<xref:System.Boolean>.</xref:System.Boolean> 屬性的預設值是`false`。"
  example:
  - "The following example ascertains whether a specified control pattern is supported by an <xref:System.Windows.Automation.AutomationElement>.  \n  \n [!code-cs[UIAClient_snip#145](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#145)]\n [!code-vb[UIAClient_snip#145](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#145)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty IsSelectionItemPatternAvailableProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.IsSelectionPatternAvailableProperty
  id: IsSelectionPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: IsSelectionPatternAvailableProperty
  nameWithType: AutomationElement.IsSelectionPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsSelectionPatternAvailableProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "識別屬性，指出是否<xref href=&quot;System.Windows.Automation.SelectionPattern&quot;></xref>控制項模式是呇謅鎯<xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>。"
  remarks: "使用者介面自動化用戶端應用程式會使用這個識別項。 UI 自動化提供者應該<xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers>中使用的對等的識別項       傳回值的屬性都屬於型別<xref:System.Boolean>.</xref:System.Boolean> 屬性的預設值是`false`。"
  example:
  - "The following example ascertains whether a specified control pattern is supported by an <xref:System.Windows.Automation.AutomationElement>.  \n  \n [!code-cs[UIAClient_snip#145](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#145)]\n [!code-vb[UIAClient_snip#145](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#145)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty IsSelectionPatternAvailableProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.IsSynchronizedInputPatternAvailableProperty
  id: IsSynchronizedInputPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: IsSynchronizedInputPatternAvailableProperty
  nameWithType: AutomationElement.IsSynchronizedInputPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsSynchronizedInputPatternAvailableProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "識別屬性，指出是否<xref href=&quot;System.Windows.Automation.SynchronizedInputPattern&quot;></xref>控制項模式是呇謅鎯<xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>。"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty IsSynchronizedInputPatternAvailableProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.IsTableItemPatternAvailableProperty
  id: IsTableItemPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: IsTableItemPatternAvailableProperty
  nameWithType: AutomationElement.IsTableItemPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsTableItemPatternAvailableProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "識別屬性，指出是否<xref href=&quot;System.Windows.Automation.TableItemPattern&quot;></xref>控制項模式是呇謅鎯<xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>。"
  remarks: "使用者介面自動化用戶端應用程式會使用這個識別項。 UI 自動化提供者應該<xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers>中使用的對等的識別項       傳回值的屬性都屬於型別<xref:System.Boolean>.</xref:System.Boolean> 屬性的預設值是`false`。"
  example:
  - "The following example ascertains whether a specified control pattern is supported by an <xref:System.Windows.Automation.AutomationElement>.  \n  \n [!code-cs[UIAClient_snip#145](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#145)]\n [!code-vb[UIAClient_snip#145](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#145)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty IsTableItemPatternAvailableProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.IsTablePatternAvailableProperty
  id: IsTablePatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: IsTablePatternAvailableProperty
  nameWithType: AutomationElement.IsTablePatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsTablePatternAvailableProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "識別屬性，指出是否<xref href=&quot;System.Windows.Automation.TablePattern&quot;></xref>控制項模式是呇謅鎯<xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>。"
  remarks: "使用者介面自動化用戶端應用程式會使用這個識別項。 UI 自動化提供者應該<xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers>中使用的對等的識別項       傳回值的屬性都屬於型別<xref:System.Boolean>.</xref:System.Boolean> 屬性的預設值是`false`。"
  example:
  - "The following example ascertains whether a specified control pattern is supported by an <xref:System.Windows.Automation.AutomationElement>.  \n  \n [!code-cs[UIAClient_snip#145](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#145)]\n [!code-vb[UIAClient_snip#145](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#145)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty IsTablePatternAvailableProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.IsTextPatternAvailableProperty
  id: IsTextPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: IsTextPatternAvailableProperty
  nameWithType: AutomationElement.IsTextPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsTextPatternAvailableProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "識別屬性，指出是否<xref href=&quot;System.Windows.Automation.TextPattern&quot;></xref>控制項模式是呇謅鎯<xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>。"
  remarks: "使用者介面自動化用戶端應用程式會使用這個識別項。 UI 自動化提供者應該<xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers>中使用的對等的識別項       傳回值的屬性都屬於型別<xref:System.Boolean>.</xref:System.Boolean> 屬性的預設值是`false`。"
  example:
  - "The following example ascertains whether a specified control pattern is supported by an <xref:System.Windows.Automation.AutomationElement>.  \n  \n [!code-cs[UIAClient_snip#145](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#145)]\n [!code-vb[UIAClient_snip#145](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#145)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty IsTextPatternAvailableProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.IsTogglePatternAvailableProperty
  id: IsTogglePatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: IsTogglePatternAvailableProperty
  nameWithType: AutomationElement.IsTogglePatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsTogglePatternAvailableProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "識別屬性，指出是否<xref href=&quot;System.Windows.Automation.TogglePattern&quot;></xref>控制項模式是呇謅鎯<xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>。"
  remarks: "使用者介面自動化用戶端應用程式會使用這個識別項。 UI 自動化提供者應該<xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers>中使用的對等的識別項       傳回值的屬性都屬於型別<xref:System.Boolean>.</xref:System.Boolean> 屬性的預設值是`false`。"
  example:
  - "The following example ascertains whether a specified control pattern is supported by an <xref:System.Windows.Automation.AutomationElement>.  \n  \n [!code-cs[UIAClient_snip#145](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#145)]\n [!code-vb[UIAClient_snip#145](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#145)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty IsTogglePatternAvailableProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.IsTransformPatternAvailableProperty
  id: IsTransformPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: IsTransformPatternAvailableProperty
  nameWithType: AutomationElement.IsTransformPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsTransformPatternAvailableProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "識別屬性，指出是否<xref href=&quot;System.Windows.Automation.TransformPattern&quot;></xref>控制項模式是呇謅鎯<xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>。"
  remarks: "使用者介面自動化用戶端應用程式會使用這個識別項。 UI 自動化提供者應該<xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers>中使用的對等的識別項       傳回值的屬性都屬於型別<xref:System.Boolean>.</xref:System.Boolean> 屬性的預設值是`false`。"
  example:
  - "The following example ascertains whether a specified control pattern is supported by an <xref:System.Windows.Automation.AutomationElement>.  \n  \n [!code-cs[UIAClient_snip#145](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#145)]\n [!code-vb[UIAClient_snip#145](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#145)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty IsTransformPatternAvailableProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.IsValuePatternAvailableProperty
  id: IsValuePatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: IsValuePatternAvailableProperty
  nameWithType: AutomationElement.IsValuePatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsValuePatternAvailableProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "識別屬性，指出是否<xref href=&quot;System.Windows.Automation.ValuePattern&quot;></xref>控制項模式是呇謅鎯<xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>。"
  remarks: "使用者介面自動化用戶端應用程式會使用這個識別項。 UI 自動化提供者應該<xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers>中使用的對等的識別項       傳回值的屬性都屬於型別<xref:System.Boolean>.</xref:System.Boolean> 屬性的預設值是`false`。"
  example:
  - "The following example ascertains whether a specified control pattern is supported by an <xref:System.Windows.Automation.AutomationElement>.  \n  \n [!code-cs[UIAClient_snip#145](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#145)]\n [!code-vb[UIAClient_snip#145](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#145)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty IsValuePatternAvailableProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.IsVirtualizedItemPatternAvailableProperty
  id: IsVirtualizedItemPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: IsVirtualizedItemPatternAvailableProperty
  nameWithType: AutomationElement.IsVirtualizedItemPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsVirtualizedItemPatternAvailableProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "識別屬性，指出是否<xref href=&quot;System.Windows.Automation.VirtualizedItemPattern&quot;></xref>控制項模式是呇謅鎯<xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>。"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty IsVirtualizedItemPatternAvailableProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.IsWindowPatternAvailableProperty
  id: IsWindowPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: IsWindowPatternAvailableProperty
  nameWithType: AutomationElement.IsWindowPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsWindowPatternAvailableProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "識別屬性，指出是否<xref href=&quot;System.Windows.Automation.WindowPattern&quot;></xref>控制項模式是呇謅鎯<xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>。"
  remarks: "使用者介面自動化用戶端應用程式會使用這個識別項。 UI 自動化提供者應該<xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers>中使用的對等的識別項       傳回值的屬性都屬於型別<xref:System.Boolean>.</xref:System.Boolean> 屬性的預設值是`false`。"
  example:
  - "The following example ascertains whether a specified control pattern is supported by an <xref:System.Windows.Automation.AutomationElement>.  \n  \n [!code-cs[UIAClient_snip#145](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#145)]\n [!code-vb[UIAClient_snip#145](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#145)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty IsWindowPatternAvailableProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.ItemStatusProperty
  id: ItemStatusProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: ItemStatusProperty
  nameWithType: AutomationElement.ItemStatusProperty
  fullName: System.Windows.Automation.AutomationElement.ItemStatusProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "識別<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.ItemStatus*>屬性，指定複雜項目的視覺化表示狀態。</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.ItemStatus*>"
  remarks: "使用者介面自動化用戶端應用程式會使用這個識別項。 UI 自動化提供者應該<xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers>中使用的對等的識別項       傳回值為控制項定義<xref:System.String>。</xref:System.String> 預設值為空字串。"
  example:
  - "The following example retrieves the current value of the property. The default value is returned if the element does not provide one.  \n  \n [!code-cs[UIAClient_snip#152](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#152)]\n [!code-vb[UIAClient_snip#152](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#152)]  \n  \n The following example retrieves the current value of the property, but specifies that if the element itself does not provide a value for the property, <xref:System.Windows.Automation.AutomationElement.NotSupported> is to be returned instead of a default value.  \n  \n [!code-cs[UIAClient_snip#153](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#153)]\n [!code-vb[UIAClient_snip#153](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#153)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty ItemStatusProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.ItemTypeProperty
  id: ItemTypeProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: ItemTypeProperty
  nameWithType: AutomationElement.ItemTypeProperty
  fullName: System.Windows.Automation.AutomationElement.ItemTypeProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "識別<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.ItemType*>屬性。</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.ItemType*>"
  remarks: "使用者介面自動化用戶端應用程式會使用這個識別項。 UI 自動化提供者應該<xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers>中使用的對等的識別項       這個屬性也可以從擷取<xref:System.Windows.Automation.AutomationElement.Current%2A>或<xref:System.Windows.Automation.AutomationElement.Cached%2A>屬性。</xref:System.Windows.Automation.AutomationElement.Cached%2A> </xref:System.Windows.Automation.AutomationElement.Current%2A>       傳回值為控制項定義<xref:System.String>。</xref:System.String> 預設值為空字串。"
  example:
  - "The following example retrieves the current value of the property. The default value is returned if the element does not provide one.  \n  \n [!code-cs[UIAClient_snip#154](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#154)]\n [!code-vb[UIAClient_snip#154](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#154)]  \n  \n The following example retrieves the current value of the property, but specifies that if the element itself does not provide a value for the property, an application-defined string is to be returned instead of a default value.  \n  \n [!code-cs[UIAClient_snip#155](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#155)]\n [!code-vb[UIAClient_snip#155](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#155)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty ItemTypeProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.LabeledByProperty
  id: LabeledByProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: LabeledByProperty
  nameWithType: AutomationElement.LabeledByProperty
  fullName: System.Windows.Automation.AutomationElement.LabeledByProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "識別<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.LabeledBy*>屬性，識別與控制項關聯的標籤。</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.LabeledBy*>"
  remarks: "使用者介面自動化用戶端應用程式會使用這個識別項。 UI 自動化提供者應該<xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers>中使用的對等的識別項       這個屬性也可以從擷取<xref:System.Windows.Automation.AutomationElement.Current%2A>或<xref:System.Windows.Automation.AutomationElement.Cached%2A>屬性。</xref:System.Windows.Automation.AutomationElement.Cached%2A> </xref:System.Windows.Automation.AutomationElement.Current%2A>       傳回值的屬性都屬於型別<xref:System.Windows.Automation.AutomationElement>.</xref:System.Windows.Automation.AutomationElement> 屬性的預設值是`null`。"
  example:
  - "The following example retrieves the current value of the property. The default value is returned if the element does not provide one.  \n  \n [!code-cs[UIAClient_snip#156](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#156)]\n [!code-vb[UIAClient_snip#156](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#156)]  \n  \n The following example retrieves the current value of the property, but specifies that if the element itself does not provide a value for the property, <xref:System.Windows.Automation.AutomationElement.NotSupported> is to be returned instead of a default value.  \n  \n [!code-cs[UIAClient_snip#157](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#157)]\n [!code-vb[UIAClient_snip#157](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#157)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty LabeledByProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.LayoutInvalidatedEvent
  id: LayoutInvalidatedEvent
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: LayoutInvalidatedEvent
  nameWithType: AutomationElement.LayoutInvalidatedEvent
  fullName: System.Windows.Automation.AutomationElement.LayoutInvalidatedEvent
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "識別版面配置失效時引發的事件。"
  remarks: "使用者介面自動化用戶端應用程式會使用這個識別項。 UI 自動化提供者應該<xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers>中使用的對等的識別項       每當多個項目的可見性資訊已變更，則項目的容器會引發這個事件。  用戶端會使用此事件為指標，以便重新整理<xref:System.Windows.Automation.AutomationElement.BoundingRectangleProperty>和<xref:System.Windows.Automation.AutomationElement.IsOffscreenProperty>它可能已快取的項目樹狀結構中的資訊。</xref:System.Windows.Automation.AutomationElement.IsOffscreenProperty> </xref:System.Windows.Automation.AutomationElement.BoundingRectangleProperty> 建議的數目的變更會觸發這個事件是 25。"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationEvent LayoutInvalidatedEvent;
    return:
      type: System.Windows.Automation.AutomationEvent
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.LocalizedControlTypeProperty
  id: LocalizedControlTypeProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: LocalizedControlTypeProperty
  nameWithType: AutomationElement.LocalizedControlTypeProperty
  fullName: System.Windows.Automation.AutomationElement.LocalizedControlTypeProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "識別<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.LocalizedControlType*>當地語言中的屬性。</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.LocalizedControlType*>"
  remarks: "使用者介面自動化用戶端應用程式會使用這個識別項。 UI 自動化提供者應該<xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers>中使用的對等的識別項       這個屬性也可以從擷取<xref:System.Windows.Automation.AutomationElement.Current%2A>或<xref:System.Windows.Automation.AutomationElement.Cached%2A>屬性。</xref:System.Windows.Automation.AutomationElement.Cached%2A> </xref:System.Windows.Automation.AutomationElement.Current%2A>       提供者，才能公開這個屬性，它代表沒有妥善定義的控制項類型的自訂控制項時。       傳回值的屬性都屬於型別<xref:System.String>.</xref:System.String> 屬性的預設值為空字串。"
  example:
  - "The following example retrieves the current value of the property. The default value is returned if the element does not provide one.  \n  \n [!code-cs[UIAClient_snip#158](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#158)]\n [!code-vb[UIAClient_snip#158](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#158)]  \n  \n The following example retrieves the current value of the property, but specifies that if the element itself does not provide a value for the property, <xref:System.Windows.Automation.AutomationElement.NotSupported> is to be returned instead of a default value.  \n  \n [!code-cs[UIAClient_snip#159](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#159)]\n [!code-vb[UIAClient_snip#159](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#159)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty LocalizedControlTypeProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.MenuClosedEvent
  id: MenuClosedEvent
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: MenuClosedEvent
  nameWithType: AutomationElement.MenuClosedEvent
  fullName: System.Windows.Automation.AutomationElement.MenuClosedEvent
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "識別功能表關閉時引發的事件。"
  remarks: "使用者介面自動化用戶端應用程式會使用這個識別項。 UI 自動化提供者應該<xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers>中使用的對等的識別項"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationEvent MenuClosedEvent;
    return:
      type: System.Windows.Automation.AutomationEvent
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.MenuOpenedEvent
  id: MenuOpenedEvent
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: MenuOpenedEvent
  nameWithType: AutomationElement.MenuOpenedEvent
  fullName: System.Windows.Automation.AutomationElement.MenuOpenedEvent
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "識別功能表開啟時引發的事件。"
  remarks: "使用者介面自動化用戶端應用程式會使用這個識別項。 UI 自動化提供者應該<xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers>中使用的對等的識別項"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationEvent MenuOpenedEvent;
    return:
      type: System.Windows.Automation.AutomationEvent
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.NameProperty
  id: NameProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: NameProperty
  nameWithType: AutomationElement.NameProperty
  fullName: System.Windows.Automation.AutomationElement.NameProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "識別<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.Name*>屬性。</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.Name*>"
  remarks: "使用者介面自動化用戶端應用程式會使用這個識別項。 UI 自動化提供者應該<xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers>中使用的對等的識別項       這個屬性也可以從擷取<xref:System.Windows.Automation.AutomationElement.Current%2A>或<xref:System.Windows.Automation.AutomationElement.Cached%2A>屬性。</xref:System.Windows.Automation.AutomationElement.Cached%2A> </xref:System.Windows.Automation.AutomationElement.Current%2A>       傳回值的屬性都屬於型別<xref:System.String>.</xref:System.String> 屬性的預設值為空字串。"
  example:
  - "The following example retrieves the current value of the property. The default value is returned if the element does not provide one.  \n  \n [!code-cs[UIAClient_snip#160](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#160)]\n [!code-vb[UIAClient_snip#160](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#160)]  \n  \n The following example retrieves the current value of the property, but specifies that if the element itself does not provide a value for the property, <xref:System.Windows.Automation.AutomationElement.NotSupported> is to be returned instead of a default value.  \n  \n [!code-cs[UIAClient_snip#161](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#161)]\n [!code-vb[UIAClient_snip#161](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#161)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty NameProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.NativeWindowHandleProperty
  id: NativeWindowHandleProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: NativeWindowHandleProperty
  nameWithType: AutomationElement.NativeWindowHandleProperty
  fullName: System.Windows.Automation.AutomationElement.NativeWindowHandleProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "識別<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.NativeWindowHandle*>屬性。</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.NativeWindowHandle*>"
  remarks: "使用者介面自動化用戶端應用程式會使用這個識別項。 UI 自動化提供者應該<xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers>中使用的對等的識別項       這個屬性也可以從擷取<xref:System.Windows.Automation.AutomationElement.Current%2A>或<xref:System.Windows.Automation.AutomationElement.Cached%2A>屬性。</xref:System.Windows.Automation.AutomationElement.Cached%2A> </xref:System.Windows.Automation.AutomationElement.Current%2A>       傳回值的屬性都屬於型別<xref:System.Int32>.</xref:System.Int32> 屬性的預設值為 0。"
  example:
  - "The following example retrieves the current value of the property. The default value is returned if the element does not provide one.  \n  \n [!code-cs[UIAClient_snip#162](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#162)]\n [!code-vb[UIAClient_snip#162](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#162)]  \n  \n The following example retrieves the current value of the property, but specifies that if the element itself does not provide a value for the property, <xref:System.Windows.Automation.AutomationElement.NotSupported> is to be returned instead of a default value.  \n  \n [!code-cs[UIAClient_snip#163](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#163)]\n [!code-vb[UIAClient_snip#163](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#163)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty NativeWindowHandleProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.NotSupported
  id: NotSupported
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: NotSupported
  nameWithType: AutomationElement.NotSupported
  fullName: System.Windows.Automation.AutomationElement.NotSupported
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "指出不支援某屬性。"
  remarks: "使用者介面自動化用戶端應用程式會使用這個識別項。 UI 自動化提供者應該<xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers>中使用的對等的識別項"
  example:
  - "The following example retrieves the help text property for an <xref:System.Windows.Automation.AutomationElement>, specifying that NotSupported should be returned if the control does not support that property.  \n  \n [!code-vb[UIAClient_snip#123](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#123)]\n [!code-cs[UIAClient_snip#123](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#123)]"
  syntax:
    content: public static readonly object NotSupported;
    return:
      type: System.Object
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.op_Equality(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationElement)
  id: op_Equality(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationElement)
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: op_Equality(AutomationElement,AutomationElement)
  nameWithType: AutomationElement.op_Equality(AutomationElement,AutomationElement)
  fullName: System.Windows.Automation.AutomationElement.op_Equality(AutomationElement,AutomationElement)
  type: Operator
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "傳回值，指出是否指定<xref href=&quot;System.Windows.Automation.AutomationElement&quot;></xref>物件參考相同[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]項目。"
  remarks: "兩個<xref:System.Windows.Automation.AutomationElement>比較為相等的物件可能包含不同的快取的資訊不同時間點的時間。</xref:System.Windows.Automation.AutomationElement> 等號比較僅測試這些物件參考相同的基礎[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]項目。"
  syntax:
    content: public static bool op_Equality (System.Windows.Automation.AutomationElement left, System.Windows.Automation.AutomationElement right);
    parameters:
    - id: left
      type: System.Windows.Automation.AutomationElement
      description: "第一個<xref href=&quot;System.Windows.Automation.AutomationElement&quot;></xref>比較。"
    - id: right
      type: System.Windows.Automation.AutomationElement
      description: "第二個<xref href=&quot;System.Windows.Automation.AutomationElement&quot;></xref>比較。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果兩個<xref href=&quot;System.Windows.Automation.AutomationElement&quot;></xref>物件參考相同[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]項目，否則為<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Automation.AutomationElement.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.op_Inequality(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationElement)
  id: op_Inequality(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationElement)
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: op_Inequality(AutomationElement,AutomationElement)
  nameWithType: AutomationElement.op_Inequality(AutomationElement,AutomationElement)
  fullName: System.Windows.Automation.AutomationElement.op_Inequality(AutomationElement,AutomationElement)
  type: Operator
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "傳回值，指出是否指定<xref href=&quot;System.Windows.Automation.AutomationElement&quot;></xref>物件參考不同[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]項目。"
  syntax:
    content: public static bool op_Inequality (System.Windows.Automation.AutomationElement left, System.Windows.Automation.AutomationElement right);
    parameters:
    - id: left
      type: System.Windows.Automation.AutomationElement
      description: "第一個<xref href=&quot;System.Windows.Automation.AutomationElement&quot;></xref>比較。"
    - id: right
      type: System.Windows.Automation.AutomationElement
      description: "第二個<xref href=&quot;System.Windows.Automation.AutomationElement&quot;></xref>比較。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果兩個物件參考不同[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]項目，否則為<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Automation.AutomationElement.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.OrientationProperty
  id: OrientationProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: OrientationProperty
  nameWithType: AutomationElement.OrientationProperty
  fullName: System.Windows.Automation.AutomationElement.OrientationProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "識別<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.Orientation*>屬性。</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.Orientation*>"
  remarks: "使用者介面自動化用戶端應用程式會使用這個識別項。 UI 自動化提供者應該<xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers>中使用的對等的識別項       這個屬性也可以從擷取<xref:System.Windows.Automation.AutomationElement.Current%2A>或<xref:System.Windows.Automation.AutomationElement.Cached%2A>屬性。</xref:System.Windows.Automation.AutomationElement.Cached%2A> </xref:System.Windows.Automation.AutomationElement.Current%2A>       屬性的值屬於型別<xref:System.Windows.Automation.OrientationType>.</xref:System.Windows.Automation.OrientationType> 預設值是<xref:System.Windows.Automation.OrientationType>.</xref:System.Windows.Automation.OrientationType>"
  example:
  - "The following example retrieves the current value of the property. The default value is returned if the element does not provide one.  \n  \n [!code-cs[UIAClient_snip#164](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#164)]\n [!code-vb[UIAClient_snip#164](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#164)]  \n  \n The following example retrieves the current value of the property, but specifies that if the element itself does not provide a value for the property, <xref:System.Windows.Automation.AutomationElement.NotSupported> is to be returned instead of a default value.  \n  \n [!code-cs[UIAClient_snip#165](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#165)]\n [!code-vb[UIAClient_snip#165](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#165)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty OrientationProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.ProcessIdProperty
  id: ProcessIdProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: ProcessIdProperty
  nameWithType: AutomationElement.ProcessIdProperty
  fullName: System.Windows.Automation.AutomationElement.ProcessIdProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "識別<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.ProcessId*>屬性。</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.ProcessId*>"
  remarks: "使用者介面自動化用戶端應用程式會使用這個識別項。 UI 自動化提供者應該<xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers>中使用的對等的識別項       這個屬性也可以從擷取<xref:System.Windows.Automation.AutomationElement.Current%2A>或<xref:System.Windows.Automation.AutomationElement.Cached%2A>屬性。</xref:System.Windows.Automation.AutomationElement.Cached%2A> </xref:System.Windows.Automation.AutomationElement.Current%2A>       傳回值的屬性都屬於型別<xref:System.Int32>.</xref:System.Int32> 屬性的預設值為 0。"
  example:
  - "The following example retrieves the current value of the property. The default value is returned if the element does not provide one.  \n  \n [!code-cs[UIAClient_snip#167](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#167)]\n [!code-vb[UIAClient_snip#167](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#167)]  \n  \n The following example retrieves the current value of the property, but specifies that if the element itself does not provide a value for the property, <xref:System.Windows.Automation.AutomationElement.NotSupported>is to be returned instead of a default value.  \n  \n [!code-cs[UIAClient_snip#168](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#168)]\n [!code-vb[UIAClient_snip#168](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#168)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty ProcessIdProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.RootElement
  id: RootElement
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: RootElement
  nameWithType: AutomationElement.RootElement
  fullName: System.Windows.Automation.AutomationElement.RootElement
  type: Property
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "取得根<xref href=&quot;System.Windows.Automation.AutomationElement&quot;></xref>目前桌面。"
  remarks: "您可以使用的根項目做為起點來尋找其他項目，使用<xref:System.Windows.Automation.AutomationElement.FindAll%2A>和<xref:System.Windows.Automation.AutomationElement.FindFirst%2A>方法。</xref:System.Windows.Automation.AutomationElement.FindFirst%2A> </xref:System.Windows.Automation.AutomationElement.FindAll%2A>       當您搜尋從根項目，請務必指定<xref:System.Windows.Automation.TreeScope>範圍中的搜尋，不<xref:System.Windows.Automation.TreeScope>.</xref:System.Windows.Automation.TreeScope> </xref:System.Windows.Automation.TreeScope> 桌面的整個樹狀子目錄搜尋，可以逐一查看數千個項目，會導致堆疊溢位。"
  example:
  - "The following example code retrieves a collection of all the immediate children of the desktop.  \n  \n [!code-vb[UIAClient_snip#201](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#201)]\n [!code-cs[UIAClient_snip#201](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#201)]"
  syntax:
    content: public static System.Windows.Automation.AutomationElement RootElement { get; }
    return:
      type: System.Windows.Automation.AutomationElement
      description: "根項目。"
  overload: System.Windows.Automation.AutomationElement.RootElement*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.RuntimeIdProperty
  id: RuntimeIdProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: RuntimeIdProperty
  nameWithType: AutomationElement.RuntimeIdProperty
  fullName: System.Windows.Automation.AutomationElement.RuntimeIdProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "識別包含項目的執行階段識別項的屬性。"
  remarks: "使用者介面自動化用戶端應用程式會使用這個識別項。 UI 自動化提供者應該<xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers>中使用的對等的識別項       執行階段[!INCLUDE[TLA2#tla_id](~/add/includes/tla2sharptla-id-md.md)]屬性會指定[!INCLUDE[TLA2#tla_id](~/add/includes/tla2sharptla-id-md.md)]如<xref:System.Windows.Automation.AutomationElement>是重複的桌面上。</xref:System.Windows.Automation.AutomationElement>       屬性的傳回值是陣列的型別<xref:System.Int32>.</xref:System.Int32> 沒有預設值。"
  example:
  - "The following example retrieves the current value of the property.  \n  \n [!code-cs[UIAClient_snip#169](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#169)]\n [!code-vb[UIAClient_snip#169](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#169)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty RuntimeIdProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.SetFocus
  id: SetFocus
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: SetFocus()
  nameWithType: AutomationElement.SetFocus()
  fullName: System.Windows.Automation.AutomationElement.SetFocus()
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "將焦點設在<xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>。"
  remarks: "這個方法的行為取決於項目的使用者介面自動化提供者所實作。 設定焦點不會不一定帶到前景的項目，或讓它顯示。"
  syntax:
    content: public void SetFocus ();
    parameters: []
  overload: System.Windows.Automation.AutomationElement.SetFocus*
  exceptions:
  - type: System.Windows.Automation.ElementNotAvailableException
    commentId: T:System.Windows.Automation.ElementNotAvailableException
    description: "UI <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>不再存在。"
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.StructureChangedEvent
  id: StructureChangedEvent
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: StructureChangedEvent
  nameWithType: AutomationElement.StructureChangedEvent
  fullName: System.Windows.Automation.AutomationElement.StructureChangedEvent
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "識別事件所引發的時機[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]樹狀結構變更。"
  remarks: "使用者介面自動化用戶端應用程式會使用這個識別項。 UI 自動化提供者應該<xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers>中使用的對等的識別項"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationEvent StructureChangedEvent;
    return:
      type: System.Windows.Automation.AutomationEvent
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.ToolTipClosedEvent
  id: ToolTipClosedEvent
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: ToolTipClosedEvent
  nameWithType: AutomationElement.ToolTipClosedEvent
  fullName: System.Windows.Automation.AutomationElement.ToolTipClosedEvent
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "識別工具提示關閉時引發的事件。"
  remarks: "使用者介面自動化用戶端應用程式會使用這個識別項。 UI 自動化提供者應該<xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers>中使用的對等的識別項"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationEvent ToolTipClosedEvent;
    return:
      type: System.Windows.Automation.AutomationEvent
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.ToolTipOpenedEvent
  id: ToolTipOpenedEvent
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: ToolTipOpenedEvent
  nameWithType: AutomationElement.ToolTipOpenedEvent
  fullName: System.Windows.Automation.AutomationElement.ToolTipOpenedEvent
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "識別工具提示開啟時引發的事件。"
  remarks: "使用者介面自動化用戶端應用程式會使用這個識別項。 UI 自動化提供者應該<xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers>中使用的對等的識別項       工具提示會在桌面上，暫時性和工具提示可能已經關閉用戶端接收事件的時間。"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationEvent ToolTipOpenedEvent;
    return:
      type: System.Windows.Automation.AutomationEvent
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.TryGetCachedPattern(System.Windows.Automation.AutomationPattern,System.Object@)
  id: TryGetCachedPattern(System.Windows.Automation.AutomationPattern,System.Object@)
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: TryGetCachedPattern(AutomationPattern,Object)
  nameWithType: AutomationElement.TryGetCachedPattern(AutomationPattern,Object)
  fullName: System.Windows.Automation.AutomationElement.TryGetCachedPattern(AutomationPattern,Object)
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "從快取擷取控制項模式。"
  remarks: ''
  example:
  - "The following example shows how to cache and retrieve a control pattern.  \n  \n [!code-vb[UIAClient_snip#107](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#107)]\n [!code-cs[UIAClient_snip#107](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#107)]"
  syntax:
    content: public bool TryGetCachedPattern (System.Windows.Automation.AutomationPattern pattern, out object patternObject);
    parameters:
    - id: pattern
      type: System.Windows.Automation.AutomationPattern
      description: "要擷取之控制項模式的識別項。"
    - id: patternObject
      type: System.Object
      description: "在傳回時包含在快取中; 如果模式否則<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果模式是在快取中;<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>如果它不在快取中或不受支援。"
  overload: System.Windows.Automation.AutomationElement.TryGetCachedPattern*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.TryGetClickablePoint(System.Windows.Point@)
  id: TryGetClickablePoint(System.Windows.Point@)
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: TryGetClickablePoint(Point)
  nameWithType: AutomationElement.TryGetClickablePoint(Point)
  fullName: System.Windows.Automation.AutomationElement.TryGetClickablePoint(Point)
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "擷取可點按的項目內的時間點。"
  remarks: "<xref:System.Windows.Automation.AutomationElement>不可點選如果完全遮住其他視窗。</xref:System.Windows.Automation.AutomationElement>"
  example:
  - "The following example attempts to retrieve a clickable point on an <xref:System.Windows.Automation.AutomationElement>.  \n  \n [!code-vb[UIAClient_snip#112](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#112)]\n [!code-cs[UIAClient_snip#112](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#112)]"
  syntax:
    content: public bool TryGetClickablePoint (out System.Windows.Point pt);
    parameters:
    - id: pt
      type: System.Windows.Point
      description: "這個方法傳回時，包含可按點的實際螢幕座標。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果沒有任何可點選; 的點否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Automation.AutomationElement.TryGetClickablePoint*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.TryGetCurrentPattern(System.Windows.Automation.AutomationPattern,System.Object@)
  id: TryGetCurrentPattern(System.Windows.Automation.AutomationPattern,System.Object@)
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: TryGetCurrentPattern(AutomationPattern,Object)
  nameWithType: AutomationElement.TryGetCurrentPattern(AutomationPattern,Object)
  fullName: System.Windows.Automation.AutomationElement.TryGetCurrentPattern(AutomationPattern,Object)
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "擷取實作控制項模式的物件。"
  remarks: "某些形式的[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]，這個方法將會造成跨處理序的效能負擔。 應用程式可以由快取模式與使用<xref:System.Windows.Automation.AutomationElement.GetCachedPattern%2A>.</xref:System.Windows.Automation.AutomationElement.GetCachedPattern%2A>擷取專注額外負荷"
  example:
  - "The following example shows how to use this method to retrieve a control pattern.  \n  \n [!code-vb[UIAClient_snip#113](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#113)]\n [!code-cs[UIAClient_snip#113](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#113)]"
  syntax:
    content: public bool TryGetCurrentPattern (System.Windows.Automation.AutomationPattern pattern, out object patternObject);
    parameters:
    - id: pattern
      type: System.Windows.Automation.AutomationPattern
      description: "要擷取之控制項模式的識別項。"
    - id: patternObject
      type: System.Object
      description: "在傳回時，如果支援; 的控制項模式否則<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果支援此模式。否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Automation.AutomationElement.TryGetCurrentPattern*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Windows.Automation.ElementNotAvailableException
  parent: System.Windows.Automation
  isExternal: false
  name: ElementNotAvailableException
  nameWithType: ElementNotAvailableException
  fullName: System.Windows.Automation.ElementNotAvailableException
- uid: System.Windows.Automation.NoClickablePointException
  parent: System.Windows.Automation
  isExternal: false
  name: NoClickablePointException
  nameWithType: NoClickablePointException
  fullName: System.Windows.Automation.NoClickablePointException
- uid: System.Windows.Automation.AutomationElement.AcceleratorKeyProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: AcceleratorKeyProperty
  nameWithType: AutomationElement.AcceleratorKeyProperty
  fullName: System.Windows.Automation.AutomationElement.AcceleratorKeyProperty
- uid: System.Windows.Automation.AutomationProperty
  parent: System.Windows.Automation
  isExternal: false
  name: AutomationProperty
  nameWithType: AutomationProperty
  fullName: System.Windows.Automation.AutomationProperty
- uid: System.Windows.Automation.AutomationElement.AccessKeyProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: AccessKeyProperty
  nameWithType: AutomationElement.AccessKeyProperty
  fullName: System.Windows.Automation.AutomationElement.AccessKeyProperty
- uid: System.Windows.Automation.AutomationElement.AsyncContentLoadedEvent
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: AsyncContentLoadedEvent
  nameWithType: AutomationElement.AsyncContentLoadedEvent
  fullName: System.Windows.Automation.AutomationElement.AsyncContentLoadedEvent
- uid: System.Windows.Automation.AutomationEvent
  parent: System.Windows.Automation
  isExternal: false
  name: AutomationEvent
  nameWithType: AutomationEvent
  fullName: System.Windows.Automation.AutomationEvent
- uid: System.Windows.Automation.AutomationElement.AutomationFocusChangedEvent
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: AutomationFocusChangedEvent
  nameWithType: AutomationElement.AutomationFocusChangedEvent
  fullName: System.Windows.Automation.AutomationElement.AutomationFocusChangedEvent
- uid: System.Windows.Automation.AutomationElement.AutomationIdProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: AutomationIdProperty
  nameWithType: AutomationElement.AutomationIdProperty
  fullName: System.Windows.Automation.AutomationElement.AutomationIdProperty
- uid: System.Windows.Automation.AutomationElement.AutomationPropertyChangedEvent
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: AutomationPropertyChangedEvent
  nameWithType: AutomationElement.AutomationPropertyChangedEvent
  fullName: System.Windows.Automation.AutomationElement.AutomationPropertyChangedEvent
- uid: System.Windows.Automation.AutomationElement.BoundingRectangleProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: BoundingRectangleProperty
  nameWithType: AutomationElement.BoundingRectangleProperty
  fullName: System.Windows.Automation.AutomationElement.BoundingRectangleProperty
- uid: System.Windows.Automation.AutomationElement.Cached
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: Cached
  nameWithType: AutomationElement.Cached
  fullName: System.Windows.Automation.AutomationElement.Cached
- uid: System.Windows.Automation.AutomationElement.AutomationElementInformation
  parent: System.Windows.Automation
  isExternal: false
  name: AutomationElement+AutomationElementInformation
  nameWithType: AutomationElement+AutomationElementInformation
  fullName: System.Windows.Automation.AutomationElement+AutomationElementInformation
- uid: System.Windows.Automation.AutomationElement.CachedChildren
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: CachedChildren
  nameWithType: AutomationElement.CachedChildren
  fullName: System.Windows.Automation.AutomationElement.CachedChildren
- uid: System.Windows.Automation.AutomationElementCollection
  parent: System.Windows.Automation
  isExternal: false
  name: AutomationElementCollection
  nameWithType: AutomationElementCollection
  fullName: System.Windows.Automation.AutomationElementCollection
- uid: System.Windows.Automation.AutomationElement.CachedParent
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: CachedParent
  nameWithType: AutomationElement.CachedParent
  fullName: System.Windows.Automation.AutomationElement.CachedParent
- uid: System.Windows.Automation.AutomationElement
  parent: System.Windows.Automation
  isExternal: false
  name: AutomationElement
  nameWithType: AutomationElement
  fullName: System.Windows.Automation.AutomationElement
- uid: System.Windows.Automation.AutomationElement.ClassNameProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: ClassNameProperty
  nameWithType: AutomationElement.ClassNameProperty
  fullName: System.Windows.Automation.AutomationElement.ClassNameProperty
- uid: System.Windows.Automation.AutomationElement.ClickablePointProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: ClickablePointProperty
  nameWithType: AutomationElement.ClickablePointProperty
  fullName: System.Windows.Automation.AutomationElement.ClickablePointProperty
- uid: System.Windows.Automation.AutomationElement.ControlTypeProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: ControlTypeProperty
  nameWithType: AutomationElement.ControlTypeProperty
  fullName: System.Windows.Automation.AutomationElement.ControlTypeProperty
- uid: System.Windows.Automation.AutomationElement.CultureProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: CultureProperty
  nameWithType: AutomationElement.CultureProperty
  fullName: System.Windows.Automation.AutomationElement.CultureProperty
- uid: System.Windows.Automation.AutomationElement.Current
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: Current
  nameWithType: AutomationElement.Current
  fullName: System.Windows.Automation.AutomationElement.Current
- uid: System.Windows.Automation.AutomationElement.Equals(System.Object)
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: Equals(Object)
  nameWithType: AutomationElement.Equals(Object)
  fullName: System.Windows.Automation.AutomationElement.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Automation.AutomationElement.Finalize
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: Finalize()
  nameWithType: AutomationElement.Finalize()
  fullName: System.Windows.Automation.AutomationElement.Finalize()
- uid: System.Windows.Automation.AutomationElement.FindAll(System.Windows.Automation.TreeScope,System.Windows.Automation.Condition)
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: FindAll(TreeScope,Condition)
  nameWithType: AutomationElement.FindAll(TreeScope,Condition)
  fullName: System.Windows.Automation.AutomationElement.FindAll(TreeScope,Condition)
- uid: System.Windows.Automation.TreeScope
  parent: System.Windows.Automation
  isExternal: false
  name: TreeScope
  nameWithType: TreeScope
  fullName: System.Windows.Automation.TreeScope
- uid: System.Windows.Automation.Condition
  parent: System.Windows.Automation
  isExternal: false
  name: Condition
  nameWithType: Condition
  fullName: System.Windows.Automation.Condition
- uid: System.Windows.Automation.AutomationElement.FindFirst(System.Windows.Automation.TreeScope,System.Windows.Automation.Condition)
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: FindFirst(TreeScope,Condition)
  nameWithType: AutomationElement.FindFirst(TreeScope,Condition)
  fullName: System.Windows.Automation.AutomationElement.FindFirst(TreeScope,Condition)
- uid: System.Windows.Automation.AutomationElement.FocusedElement
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: FocusedElement
  nameWithType: AutomationElement.FocusedElement
  fullName: System.Windows.Automation.AutomationElement.FocusedElement
- uid: System.Windows.Automation.AutomationElement.FrameworkIdProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: FrameworkIdProperty
  nameWithType: AutomationElement.FrameworkIdProperty
  fullName: System.Windows.Automation.AutomationElement.FrameworkIdProperty
- uid: System.Windows.Automation.AutomationElement.FromHandle(System.IntPtr)
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: FromHandle(IntPtr)
  nameWithType: AutomationElement.FromHandle(IntPtr)
  fullName: System.Windows.Automation.AutomationElement.FromHandle(IntPtr)
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Windows.Automation.AutomationElement.FromLocalProvider(System.Windows.Automation.Provider.IRawElementProviderSimple)
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: FromLocalProvider(IRawElementProviderSimple)
  nameWithType: AutomationElement.FromLocalProvider(IRawElementProviderSimple)
  fullName: System.Windows.Automation.AutomationElement.FromLocalProvider(IRawElementProviderSimple)
- uid: System.Windows.Automation.Provider.IRawElementProviderSimple
  parent: System.Windows.Automation.Provider
  isExternal: false
  name: IRawElementProviderSimple
  nameWithType: IRawElementProviderSimple
  fullName: System.Windows.Automation.Provider.IRawElementProviderSimple
- uid: System.Windows.Automation.AutomationElement.FromPoint(System.Windows.Point)
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: FromPoint(Point)
  nameWithType: AutomationElement.FromPoint(Point)
  fullName: System.Windows.Automation.AutomationElement.FromPoint(Point)
- uid: System.Windows.Point
  parent: System.Windows
  isExternal: false
  name: Point
  nameWithType: Point
  fullName: System.Windows.Point
- uid: System.Windows.Automation.AutomationElement.GetCachedPattern(System.Windows.Automation.AutomationPattern)
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: GetCachedPattern(AutomationPattern)
  nameWithType: AutomationElement.GetCachedPattern(AutomationPattern)
  fullName: System.Windows.Automation.AutomationElement.GetCachedPattern(AutomationPattern)
- uid: System.Windows.Automation.AutomationPattern
  parent: System.Windows.Automation
  isExternal: false
  name: AutomationPattern
  nameWithType: AutomationPattern
  fullName: System.Windows.Automation.AutomationPattern
- uid: System.Windows.Automation.AutomationElement.GetCachedPropertyValue(System.Windows.Automation.AutomationProperty)
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: GetCachedPropertyValue(AutomationProperty)
  nameWithType: AutomationElement.GetCachedPropertyValue(AutomationProperty)
  fullName: System.Windows.Automation.AutomationElement.GetCachedPropertyValue(AutomationProperty)
- uid: System.Windows.Automation.AutomationElement.GetCachedPropertyValue(System.Windows.Automation.AutomationProperty,System.Boolean)
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: GetCachedPropertyValue(AutomationProperty,Boolean)
  nameWithType: AutomationElement.GetCachedPropertyValue(AutomationProperty,Boolean)
  fullName: System.Windows.Automation.AutomationElement.GetCachedPropertyValue(AutomationProperty,Boolean)
- uid: System.Windows.Automation.AutomationElement.GetClickablePoint
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: GetClickablePoint()
  nameWithType: AutomationElement.GetClickablePoint()
  fullName: System.Windows.Automation.AutomationElement.GetClickablePoint()
- uid: System.Windows.Automation.AutomationElement.GetCurrentPattern(System.Windows.Automation.AutomationPattern)
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: GetCurrentPattern(AutomationPattern)
  nameWithType: AutomationElement.GetCurrentPattern(AutomationPattern)
  fullName: System.Windows.Automation.AutomationElement.GetCurrentPattern(AutomationPattern)
- uid: System.Windows.Automation.AutomationElement.GetCurrentPropertyValue(System.Windows.Automation.AutomationProperty)
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: GetCurrentPropertyValue(AutomationProperty)
  nameWithType: AutomationElement.GetCurrentPropertyValue(AutomationProperty)
  fullName: System.Windows.Automation.AutomationElement.GetCurrentPropertyValue(AutomationProperty)
- uid: System.Windows.Automation.AutomationElement.GetCurrentPropertyValue(System.Windows.Automation.AutomationProperty,System.Boolean)
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: GetCurrentPropertyValue(AutomationProperty,Boolean)
  nameWithType: AutomationElement.GetCurrentPropertyValue(AutomationProperty,Boolean)
  fullName: System.Windows.Automation.AutomationElement.GetCurrentPropertyValue(AutomationProperty,Boolean)
- uid: System.Windows.Automation.AutomationElement.GetHashCode
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: GetHashCode()
  nameWithType: AutomationElement.GetHashCode()
  fullName: System.Windows.Automation.AutomationElement.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Automation.AutomationElement.GetRuntimeId
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: GetRuntimeId()
  nameWithType: AutomationElement.GetRuntimeId()
  fullName: System.Windows.Automation.AutomationElement.GetRuntimeId()
- uid: System.Int32[]
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32[]
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: Int32[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Automation.AutomationElement.GetSupportedPatterns
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: GetSupportedPatterns()
  nameWithType: AutomationElement.GetSupportedPatterns()
  fullName: System.Windows.Automation.AutomationElement.GetSupportedPatterns()
- uid: System.Windows.Automation.AutomationPattern[]
  parent: System.Windows.Automation
  isExternal: false
  name: AutomationPattern
  nameWithType: AutomationPattern
  fullName: System.Windows.Automation.AutomationPattern[]
  spec.csharp:
  - uid: System.Windows.Automation.AutomationPattern
    name: AutomationPattern
    nameWithType: AutomationPattern
    fullName: AutomationPattern[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Automation.AutomationElement.GetSupportedProperties
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: GetSupportedProperties()
  nameWithType: AutomationElement.GetSupportedProperties()
  fullName: System.Windows.Automation.AutomationElement.GetSupportedProperties()
- uid: System.Windows.Automation.AutomationProperty[]
  parent: System.Windows.Automation
  isExternal: false
  name: AutomationProperty
  nameWithType: AutomationProperty
  fullName: System.Windows.Automation.AutomationProperty[]
  spec.csharp:
  - uid: System.Windows.Automation.AutomationProperty
    name: AutomationProperty
    nameWithType: AutomationProperty
    fullName: AutomationProperty[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Automation.AutomationElement.GetUpdatedCache(System.Windows.Automation.CacheRequest)
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: GetUpdatedCache(CacheRequest)
  nameWithType: AutomationElement.GetUpdatedCache(CacheRequest)
  fullName: System.Windows.Automation.AutomationElement.GetUpdatedCache(CacheRequest)
- uid: System.Windows.Automation.CacheRequest
  parent: System.Windows.Automation
  isExternal: false
  name: CacheRequest
  nameWithType: CacheRequest
  fullName: System.Windows.Automation.CacheRequest
- uid: System.Windows.Automation.AutomationElement.HasKeyboardFocusProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: HasKeyboardFocusProperty
  nameWithType: AutomationElement.HasKeyboardFocusProperty
  fullName: System.Windows.Automation.AutomationElement.HasKeyboardFocusProperty
- uid: System.Windows.Automation.AutomationElement.HelpTextProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: HelpTextProperty
  nameWithType: AutomationElement.HelpTextProperty
  fullName: System.Windows.Automation.AutomationElement.HelpTextProperty
- uid: System.Windows.Automation.AutomationElement.IsContentElementProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: IsContentElementProperty
  nameWithType: AutomationElement.IsContentElementProperty
  fullName: System.Windows.Automation.AutomationElement.IsContentElementProperty
- uid: System.Windows.Automation.AutomationElement.IsControlElementProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: IsControlElementProperty
  nameWithType: AutomationElement.IsControlElementProperty
  fullName: System.Windows.Automation.AutomationElement.IsControlElementProperty
- uid: System.Windows.Automation.AutomationElement.IsDockPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: IsDockPatternAvailableProperty
  nameWithType: AutomationElement.IsDockPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsDockPatternAvailableProperty
- uid: System.Windows.Automation.AutomationElement.IsEnabledProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: IsEnabledProperty
  nameWithType: AutomationElement.IsEnabledProperty
  fullName: System.Windows.Automation.AutomationElement.IsEnabledProperty
- uid: System.Windows.Automation.AutomationElement.IsExpandCollapsePatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: IsExpandCollapsePatternAvailableProperty
  nameWithType: AutomationElement.IsExpandCollapsePatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsExpandCollapsePatternAvailableProperty
- uid: System.Windows.Automation.AutomationElement.IsGridItemPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: IsGridItemPatternAvailableProperty
  nameWithType: AutomationElement.IsGridItemPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsGridItemPatternAvailableProperty
- uid: System.Windows.Automation.AutomationElement.IsGridPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: IsGridPatternAvailableProperty
  nameWithType: AutomationElement.IsGridPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsGridPatternAvailableProperty
- uid: System.Windows.Automation.AutomationElement.IsInvokePatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: IsInvokePatternAvailableProperty
  nameWithType: AutomationElement.IsInvokePatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsInvokePatternAvailableProperty
- uid: System.Windows.Automation.AutomationElement.IsItemContainerPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: IsItemContainerPatternAvailableProperty
  nameWithType: AutomationElement.IsItemContainerPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsItemContainerPatternAvailableProperty
- uid: System.Windows.Automation.AutomationElement.IsKeyboardFocusableProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: IsKeyboardFocusableProperty
  nameWithType: AutomationElement.IsKeyboardFocusableProperty
  fullName: System.Windows.Automation.AutomationElement.IsKeyboardFocusableProperty
- uid: System.Windows.Automation.AutomationElement.IsMultipleViewPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: IsMultipleViewPatternAvailableProperty
  nameWithType: AutomationElement.IsMultipleViewPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsMultipleViewPatternAvailableProperty
- uid: System.Windows.Automation.AutomationElement.IsOffscreenProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: IsOffscreenProperty
  nameWithType: AutomationElement.IsOffscreenProperty
  fullName: System.Windows.Automation.AutomationElement.IsOffscreenProperty
- uid: System.Windows.Automation.AutomationElement.IsPasswordProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: IsPasswordProperty
  nameWithType: AutomationElement.IsPasswordProperty
  fullName: System.Windows.Automation.AutomationElement.IsPasswordProperty
- uid: System.Windows.Automation.AutomationElement.IsRangeValuePatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: IsRangeValuePatternAvailableProperty
  nameWithType: AutomationElement.IsRangeValuePatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsRangeValuePatternAvailableProperty
- uid: System.Windows.Automation.AutomationElement.IsRequiredForFormProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: IsRequiredForFormProperty
  nameWithType: AutomationElement.IsRequiredForFormProperty
  fullName: System.Windows.Automation.AutomationElement.IsRequiredForFormProperty
- uid: System.Windows.Automation.AutomationElement.IsScrollItemPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: IsScrollItemPatternAvailableProperty
  nameWithType: AutomationElement.IsScrollItemPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsScrollItemPatternAvailableProperty
- uid: System.Windows.Automation.AutomationElement.IsScrollPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: IsScrollPatternAvailableProperty
  nameWithType: AutomationElement.IsScrollPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsScrollPatternAvailableProperty
- uid: System.Windows.Automation.AutomationElement.IsSelectionItemPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: IsSelectionItemPatternAvailableProperty
  nameWithType: AutomationElement.IsSelectionItemPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsSelectionItemPatternAvailableProperty
- uid: System.Windows.Automation.AutomationElement.IsSelectionPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: IsSelectionPatternAvailableProperty
  nameWithType: AutomationElement.IsSelectionPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsSelectionPatternAvailableProperty
- uid: System.Windows.Automation.AutomationElement.IsSynchronizedInputPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: IsSynchronizedInputPatternAvailableProperty
  nameWithType: AutomationElement.IsSynchronizedInputPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsSynchronizedInputPatternAvailableProperty
- uid: System.Windows.Automation.AutomationElement.IsTableItemPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: IsTableItemPatternAvailableProperty
  nameWithType: AutomationElement.IsTableItemPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsTableItemPatternAvailableProperty
- uid: System.Windows.Automation.AutomationElement.IsTablePatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: IsTablePatternAvailableProperty
  nameWithType: AutomationElement.IsTablePatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsTablePatternAvailableProperty
- uid: System.Windows.Automation.AutomationElement.IsTextPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: IsTextPatternAvailableProperty
  nameWithType: AutomationElement.IsTextPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsTextPatternAvailableProperty
- uid: System.Windows.Automation.AutomationElement.IsTogglePatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: IsTogglePatternAvailableProperty
  nameWithType: AutomationElement.IsTogglePatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsTogglePatternAvailableProperty
- uid: System.Windows.Automation.AutomationElement.IsTransformPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: IsTransformPatternAvailableProperty
  nameWithType: AutomationElement.IsTransformPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsTransformPatternAvailableProperty
- uid: System.Windows.Automation.AutomationElement.IsValuePatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: IsValuePatternAvailableProperty
  nameWithType: AutomationElement.IsValuePatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsValuePatternAvailableProperty
- uid: System.Windows.Automation.AutomationElement.IsVirtualizedItemPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: IsVirtualizedItemPatternAvailableProperty
  nameWithType: AutomationElement.IsVirtualizedItemPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsVirtualizedItemPatternAvailableProperty
- uid: System.Windows.Automation.AutomationElement.IsWindowPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: IsWindowPatternAvailableProperty
  nameWithType: AutomationElement.IsWindowPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsWindowPatternAvailableProperty
- uid: System.Windows.Automation.AutomationElement.ItemStatusProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: ItemStatusProperty
  nameWithType: AutomationElement.ItemStatusProperty
  fullName: System.Windows.Automation.AutomationElement.ItemStatusProperty
- uid: System.Windows.Automation.AutomationElement.ItemTypeProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: ItemTypeProperty
  nameWithType: AutomationElement.ItemTypeProperty
  fullName: System.Windows.Automation.AutomationElement.ItemTypeProperty
- uid: System.Windows.Automation.AutomationElement.LabeledByProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: LabeledByProperty
  nameWithType: AutomationElement.LabeledByProperty
  fullName: System.Windows.Automation.AutomationElement.LabeledByProperty
- uid: System.Windows.Automation.AutomationElement.LayoutInvalidatedEvent
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: LayoutInvalidatedEvent
  nameWithType: AutomationElement.LayoutInvalidatedEvent
  fullName: System.Windows.Automation.AutomationElement.LayoutInvalidatedEvent
- uid: System.Windows.Automation.AutomationElement.LocalizedControlTypeProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: LocalizedControlTypeProperty
  nameWithType: AutomationElement.LocalizedControlTypeProperty
  fullName: System.Windows.Automation.AutomationElement.LocalizedControlTypeProperty
- uid: System.Windows.Automation.AutomationElement.MenuClosedEvent
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: MenuClosedEvent
  nameWithType: AutomationElement.MenuClosedEvent
  fullName: System.Windows.Automation.AutomationElement.MenuClosedEvent
- uid: System.Windows.Automation.AutomationElement.MenuOpenedEvent
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: MenuOpenedEvent
  nameWithType: AutomationElement.MenuOpenedEvent
  fullName: System.Windows.Automation.AutomationElement.MenuOpenedEvent
- uid: System.Windows.Automation.AutomationElement.NameProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: NameProperty
  nameWithType: AutomationElement.NameProperty
  fullName: System.Windows.Automation.AutomationElement.NameProperty
- uid: System.Windows.Automation.AutomationElement.NativeWindowHandleProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: NativeWindowHandleProperty
  nameWithType: AutomationElement.NativeWindowHandleProperty
  fullName: System.Windows.Automation.AutomationElement.NativeWindowHandleProperty
- uid: System.Windows.Automation.AutomationElement.NotSupported
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: NotSupported
  nameWithType: AutomationElement.NotSupported
  fullName: System.Windows.Automation.AutomationElement.NotSupported
- uid: System.Windows.Automation.AutomationElement.op_Equality(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationElement)
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: op_Equality(AutomationElement,AutomationElement)
  nameWithType: AutomationElement.op_Equality(AutomationElement,AutomationElement)
  fullName: System.Windows.Automation.AutomationElement.op_Equality(AutomationElement,AutomationElement)
- uid: System.Windows.Automation.AutomationElement.op_Inequality(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationElement)
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: op_Inequality(AutomationElement,AutomationElement)
  nameWithType: AutomationElement.op_Inequality(AutomationElement,AutomationElement)
  fullName: System.Windows.Automation.AutomationElement.op_Inequality(AutomationElement,AutomationElement)
- uid: System.Windows.Automation.AutomationElement.OrientationProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: OrientationProperty
  nameWithType: AutomationElement.OrientationProperty
  fullName: System.Windows.Automation.AutomationElement.OrientationProperty
- uid: System.Windows.Automation.AutomationElement.ProcessIdProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: ProcessIdProperty
  nameWithType: AutomationElement.ProcessIdProperty
  fullName: System.Windows.Automation.AutomationElement.ProcessIdProperty
- uid: System.Windows.Automation.AutomationElement.RootElement
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: RootElement
  nameWithType: AutomationElement.RootElement
  fullName: System.Windows.Automation.AutomationElement.RootElement
- uid: System.Windows.Automation.AutomationElement.RuntimeIdProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: RuntimeIdProperty
  nameWithType: AutomationElement.RuntimeIdProperty
  fullName: System.Windows.Automation.AutomationElement.RuntimeIdProperty
- uid: System.Windows.Automation.AutomationElement.SetFocus
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: SetFocus()
  nameWithType: AutomationElement.SetFocus()
  fullName: System.Windows.Automation.AutomationElement.SetFocus()
- uid: System.Windows.Automation.AutomationElement.StructureChangedEvent
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: StructureChangedEvent
  nameWithType: AutomationElement.StructureChangedEvent
  fullName: System.Windows.Automation.AutomationElement.StructureChangedEvent
- uid: System.Windows.Automation.AutomationElement.ToolTipClosedEvent
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: ToolTipClosedEvent
  nameWithType: AutomationElement.ToolTipClosedEvent
  fullName: System.Windows.Automation.AutomationElement.ToolTipClosedEvent
- uid: System.Windows.Automation.AutomationElement.ToolTipOpenedEvent
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: ToolTipOpenedEvent
  nameWithType: AutomationElement.ToolTipOpenedEvent
  fullName: System.Windows.Automation.AutomationElement.ToolTipOpenedEvent
- uid: System.Windows.Automation.AutomationElement.TryGetCachedPattern(System.Windows.Automation.AutomationPattern,System.Object@)
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: TryGetCachedPattern(AutomationPattern,Object)
  nameWithType: AutomationElement.TryGetCachedPattern(AutomationPattern,Object)
  fullName: System.Windows.Automation.AutomationElement.TryGetCachedPattern(AutomationPattern,Object)
- uid: System.Windows.Automation.AutomationElement.TryGetClickablePoint(System.Windows.Point@)
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: TryGetClickablePoint(Point)
  nameWithType: AutomationElement.TryGetClickablePoint(Point)
  fullName: System.Windows.Automation.AutomationElement.TryGetClickablePoint(Point)
- uid: System.Windows.Automation.AutomationElement.TryGetCurrentPattern(System.Windows.Automation.AutomationPattern,System.Object@)
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: TryGetCurrentPattern(AutomationPattern,Object)
  nameWithType: AutomationElement.TryGetCurrentPattern(AutomationPattern,Object)
  fullName: System.Windows.Automation.AutomationElement.TryGetCurrentPattern(AutomationPattern,Object)
- uid: System.Windows.Automation.AutomationElement.Cached*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: Cached
  nameWithType: AutomationElement.Cached
- uid: System.Windows.Automation.AutomationElement.CachedChildren*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: CachedChildren
  nameWithType: AutomationElement.CachedChildren
- uid: System.Windows.Automation.AutomationElement.CachedParent*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: CachedParent
  nameWithType: AutomationElement.CachedParent
- uid: System.Windows.Automation.AutomationElement.Current*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: Current
  nameWithType: AutomationElement.Current
- uid: System.Windows.Automation.AutomationElement.Equals*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: Equals
  nameWithType: AutomationElement.Equals
- uid: System.Windows.Automation.AutomationElement.Finalize*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: Finalize
  nameWithType: AutomationElement.Finalize
- uid: System.Windows.Automation.AutomationElement.FindAll*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: FindAll
  nameWithType: AutomationElement.FindAll
- uid: System.Windows.Automation.AutomationElement.FindFirst*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: FindFirst
  nameWithType: AutomationElement.FindFirst
- uid: System.Windows.Automation.AutomationElement.FocusedElement*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: FocusedElement
  nameWithType: AutomationElement.FocusedElement
- uid: System.Windows.Automation.AutomationElement.FromHandle*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: FromHandle
  nameWithType: AutomationElement.FromHandle
- uid: System.Windows.Automation.AutomationElement.FromLocalProvider*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: FromLocalProvider
  nameWithType: AutomationElement.FromLocalProvider
- uid: System.Windows.Automation.AutomationElement.FromPoint*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: FromPoint
  nameWithType: AutomationElement.FromPoint
- uid: System.Windows.Automation.AutomationElement.GetCachedPattern*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: GetCachedPattern
  nameWithType: AutomationElement.GetCachedPattern
- uid: System.Windows.Automation.AutomationElement.GetCachedPropertyValue*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: GetCachedPropertyValue
  nameWithType: AutomationElement.GetCachedPropertyValue
- uid: System.Windows.Automation.AutomationElement.GetClickablePoint*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: GetClickablePoint
  nameWithType: AutomationElement.GetClickablePoint
- uid: System.Windows.Automation.AutomationElement.GetCurrentPattern*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: GetCurrentPattern
  nameWithType: AutomationElement.GetCurrentPattern
- uid: System.Windows.Automation.AutomationElement.GetCurrentPropertyValue*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: GetCurrentPropertyValue
  nameWithType: AutomationElement.GetCurrentPropertyValue
- uid: System.Windows.Automation.AutomationElement.GetHashCode*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: GetHashCode
  nameWithType: AutomationElement.GetHashCode
- uid: System.Windows.Automation.AutomationElement.GetRuntimeId*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: GetRuntimeId
  nameWithType: AutomationElement.GetRuntimeId
- uid: System.Windows.Automation.AutomationElement.GetSupportedPatterns*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: GetSupportedPatterns
  nameWithType: AutomationElement.GetSupportedPatterns
- uid: System.Windows.Automation.AutomationElement.GetSupportedProperties*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: GetSupportedProperties
  nameWithType: AutomationElement.GetSupportedProperties
- uid: System.Windows.Automation.AutomationElement.GetUpdatedCache*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: GetUpdatedCache
  nameWithType: AutomationElement.GetUpdatedCache
- uid: System.Windows.Automation.AutomationElement.op_Equality*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: op_Equality
  nameWithType: AutomationElement.op_Equality
- uid: System.Windows.Automation.AutomationElement.op_Inequality*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: op_Inequality
  nameWithType: AutomationElement.op_Inequality
- uid: System.Windows.Automation.AutomationElement.RootElement*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: RootElement
  nameWithType: AutomationElement.RootElement
- uid: System.Windows.Automation.AutomationElement.SetFocus*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: SetFocus
  nameWithType: AutomationElement.SetFocus
- uid: System.Windows.Automation.AutomationElement.TryGetCachedPattern*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: TryGetCachedPattern
  nameWithType: AutomationElement.TryGetCachedPattern
- uid: System.Windows.Automation.AutomationElement.TryGetClickablePoint*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: TryGetClickablePoint
  nameWithType: AutomationElement.TryGetClickablePoint
- uid: System.Windows.Automation.AutomationElement.TryGetCurrentPattern*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: TryGetCurrentPattern
  nameWithType: AutomationElement.TryGetCurrentPattern
