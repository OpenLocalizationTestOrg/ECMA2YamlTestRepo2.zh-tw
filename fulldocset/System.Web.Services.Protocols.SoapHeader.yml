### YamlMime:ManagedReference
items:
- uid: System.Web.Services.Protocols.SoapHeader
  id: SoapHeader
  children:
  - System.Web.Services.Protocols.SoapHeader.#ctor
  - System.Web.Services.Protocols.SoapHeader.Actor
  - System.Web.Services.Protocols.SoapHeader.DidUnderstand
  - System.Web.Services.Protocols.SoapHeader.EncodedMustUnderstand
  - System.Web.Services.Protocols.SoapHeader.EncodedMustUnderstand12
  - System.Web.Services.Protocols.SoapHeader.EncodedRelay
  - System.Web.Services.Protocols.SoapHeader.MustUnderstand
  - System.Web.Services.Protocols.SoapHeader.Relay
  - System.Web.Services.Protocols.SoapHeader.Role
  langs:
  - csharp
  name: SoapHeader
  nameWithType: SoapHeader
  fullName: System.Web.Services.Protocols.SoapHeader
  type: Class
  summary: "當在衍生類別中覆寫時，表示 SOAP 標頭的內容。"
  remarks: "SOAP 標頭提供傳遞資料以及從 XML Web service 方法，如果 XML Web 服務方法的主要功能不直接相關資料的方法。 例如，XML Web 服務可能包含數個 XML Web service 方法，每個需要自訂驗證配置。 而不是將參數加入至每個 XML Web 服務方法的自訂驗證配置， <xref:System.Web.Services.Protocols.SoapHeaderAttribute>，參考從 SoapHeader 衍生類別，可以套用至每個 XML Web service 方法。</xref:System.Web.Services.Protocols.SoapHeaderAttribute> 衍生自 SoapHeader 類別實作會處理自訂驗證配置。 這種方式，XML Web service 方法實作僅它特有的功能，並加入其他功能使用 SOAP 標頭。       下列清單的概述接收和處理 SOAP 標頭的基本步驟︰ 1。  建立衍生自 SoapHeader 表示資料傳入的 SOAP 標頭的類別。      2.  將成員加入至類別實作 XML Web 服務或 XML Web 服務用戶端 proxy 類別，第一個步驟中建立的類型。      3.  套用<xref:System.Web.Services.Protocols.SoapHeaderAttribute>XML Web service 方法或在 proxy 類別中對應的方法，指定成員中建立第二個步驟<xref:System.Web.Services.Protocols.SoapHeaderAttribute.MemberName%2A>屬性。</xref:System.Web.Services.Protocols.SoapHeaderAttribute.MemberName%2A> </xref:System.Web.Services.Protocols.SoapHeaderAttribute>      4.  在 XML Web 服務方法或 XML Web 服務用戶端程式碼，存取<xref:System.Web.Services.Protocols.SoapHeaderAttribute.MemberName%2A>屬性來處理 SOAP 標頭中傳送的資料。</xref:System.Web.Services.Protocols.SoapHeaderAttribute.MemberName%2A>"
  example:
  - "The following `MyWebService` XML Web service defines the `MyHeader` SOAP header and requires it to be sent with any calls to the `MyWebMethod` XML Web service method. Additionally, `MyWebMethod` receives any SOAP headers other than the `MyHeader` SOAP header.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: >-
      [System.Xml.Serialization.SoapType(IncludeInSchema=false)]

      [System.Xml.Serialization.XmlType(IncludeInSchema=false)]

      public abstract class SoapHeader
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapHeader.#ctor
  id: '#ctor'
  parent: System.Web.Services.Protocols.SoapHeader
  langs:
  - csharp
  name: SoapHeader()
  nameWithType: SoapHeader.SoapHeader()
  fullName: System.Web.Services.Protocols.SoapHeader.SoapHeader()
  type: Constructor
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "初始化的新執行個體<xref href=&quot;System.Web.Services.Protocols.SoapHeader&quot;></xref>類別。"
  syntax:
    content: protected SoapHeader ();
    parameters: []
  overload: System.Web.Services.Protocols.SoapHeader.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapHeader.Actor
  id: Actor
  parent: System.Web.Services.Protocols.SoapHeader
  langs:
  - csharp
  name: Actor
  nameWithType: SoapHeader.Actor
  fullName: System.Web.Services.Protocols.SoapHeader.Actor
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "取得或設定 SOAP 標頭的收件者。"
  remarks: "若要設定 SOAP 標頭的收件者，設定的動作項目屬性。 不論用來與 XML Web 服務通訊的 SOAP 通訊協定版本，.NET Framework 會自動產生的 SOAP 通訊協定版本特有的 SOAP 訊息。 具體而言，XML 項目與 XML 命名空間代表收件者與不同的兩個版本中。       XML Web 服務接收的 SOAP 標頭可以藉由取得其中取得預定的收件者<xref:System.Web.Services.Protocols.SoapHeader.Role%2A>或動作項目屬性。</xref:System.Web.Services.Protocols.SoapHeader.Role%2A>       為收件者`Body`項目和每個 SOAP 標頭內`Header`SOAP 訊息的項目不需要相同。 如果`Header`SOAP 訊息中的項目存在，它代表 XML Web service 方法或媒介可以傳送的其他資料。 收件者的資料，又稱為 SOAP`Actor`在 1.1 版中，可以是不同的 URI，比 XML Web service 方法的 URI。       如需有關 SOAP`actor`屬性，請參閱在 http://www.w3.org/TR/SOAP/ SOAP 規格。"
  example:
  - "The following XML Web service client calls the `MyWebMethod` XML Web service method after creating a custom SOAP header of type `MyHeader` and setting the Actor property to `http://www.contoso.com/MySoapHeaderHandler`.  \n  \n [!code-cs[Classic SoapHeader.Actor Example#1](~/add/codesnippet/csharp/p-system.web.services.pr_16_1.cs)]\n [!code-cpp[Classic SoapHeader.Actor Example#1](~/add/codesnippet/cpp/p-system.web.services.pr_16_1.cpp)]\n [!code-vb[Classic SoapHeader.Actor Example#1](~/add/codesnippet/visualbasic/p-system.web.services.pr_16_1.vb)]"
  syntax:
    content: public string Actor { get; set; }
    return:
      type: System.String
      description: "SOAP 標頭的收件者。 預設為空字串 (&quot;&quot;)。"
  overload: System.Web.Services.Protocols.SoapHeader.Actor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapHeader.DidUnderstand
  id: DidUnderstand
  parent: System.Web.Services.Protocols.SoapHeader
  langs:
  - csharp
  name: DidUnderstand
  nameWithType: SoapHeader.DidUnderstand
  fullName: System.Web.Services.Protocols.SoapHeader.DidUnderstand
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "取得或設定值，表示 XML Web 服務方法是否正確處理 SOAP 標頭。"
  remarks: "XML Web 服務所定義的 SOAP 標頭，ASP.NET 會假設 XML Web 服務方法才能正確處理 SOAP 標頭，藉由設定至 DidUnderstand 的初始值`true`。 初始值會是未定義的 XML Web 服務的 SOAP 標頭， `false`。 如果 ASP.NET 偵測到的 SOAP 標頭 XML Web 服務方法隨 DidUnderstand 設`false`方法傳回之後，<xref:System.Web.Services.Protocols.SoapHeaderException>擲回給 XML Web 服務用戶端，而結果不是從 XML Web 服務方法。</xref:System.Web.Services.Protocols.SoapHeaderException>"
  example:
  - "The following `MyWebService` XML Web service defines the `MyHeader` SOAP header and requires it to be sent with any calls to the `MyWebMethod` XML Web service method. Additionally, the `MyWebMethod` receives any SOAP headers other than the `MyHeader` SOAP header. For SOAP headers that `MyWebMethod` can process, DidUnderstand is set to `true`.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public bool DidUnderstand { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果已正確處理 SOAP 標頭否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.Services.Protocols.SoapHeader.DidUnderstand*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapHeader.EncodedMustUnderstand
  id: EncodedMustUnderstand
  parent: System.Web.Services.Protocols.SoapHeader
  langs:
  - csharp
  name: EncodedMustUnderstand
  nameWithType: SoapHeader.EncodedMustUnderstand
  fullName: System.Web.Services.Protocols.SoapHeader.EncodedMustUnderstand
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "取得或設定值<xref uid=&quot;langword_csharp_mustUnderstand&quot; name=&quot;mustUnderstand&quot; href=&quot;&quot;> </xref> SOAP 標頭與 SOAP 通訊協定 1.1 版通訊時的 XML 屬性。"
  remarks: "請勿使用這個屬性。 改用<xref:System.Web.Services.Protocols.SoapHeader.MustUnderstand%2A>屬性。</xref:System.Web.Services.Protocols.SoapHeader.MustUnderstand%2A>"
  example:
  - >-
    [!code-cpp[SoapHeader_EncodedMustUnderstand#1](~/add/codesnippet/cpp/p-system.web.services.pr_37_1.cpp)]
     [!code-vb[SoapHeader_EncodedMustUnderstand#1](~/add/codesnippet/visualbasic/p-system.web.services.pr_37_1.vb)]
     [!code-cs[SoapHeader_EncodedMustUnderstand#1](~/add/codesnippet/csharp/p-system.web.services.pr_37_1.cs)]
  syntax:
    content: public string EncodedMustUnderstand { get; set; }
    return:
      type: System.String
      description: "值<xref uid=&quot;langword_csharp_mustUnderstand&quot; name=&quot;mustUnderstand&quot; href=&quot;&quot;></xref>屬性。 預設為&quot;0&quot;。"
  overload: System.Web.Services.Protocols.SoapHeader.EncodedMustUnderstand*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '以外的屬性設定為一個值:&quot;0&quot;、&quot;1&quot;，&quot;true&quot;或&quot;false&quot;。'
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapHeader.EncodedMustUnderstand12
  id: EncodedMustUnderstand12
  parent: System.Web.Services.Protocols.SoapHeader
  langs:
  - csharp
  name: EncodedMustUnderstand12
  nameWithType: SoapHeader.EncodedMustUnderstand12
  fullName: System.Web.Services.Protocols.SoapHeader.EncodedMustUnderstand12
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "取得或設定值<xref uid=&quot;langword_csharp_mustUnderstand&quot; name=&quot;mustUnderstand&quot; href=&quot;&quot;> </xref> SOAP 標頭與 SOAP 通訊協定 1.2 版通訊時的 XML 屬性。"
  remarks: "請勿使用這個屬性。 改用<xref:System.Web.Services.Protocols.SoapHeader.MustUnderstand%2A>屬性。</xref:System.Web.Services.Protocols.SoapHeader.MustUnderstand%2A>"
  syntax:
    content: public string EncodedMustUnderstand12 { get; set; }
    return:
      type: System.String
      description: "值<xref uid=&quot;langword_csharp_mustUnderstand&quot; name=&quot;mustUnderstand&quot; href=&quot;&quot;> </xref> SOAP 標頭的 XML 屬性。 預設為&quot;0&quot;。"
  overload: System.Web.Services.Protocols.SoapHeader.EncodedMustUnderstand12*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '以外的屬性設定為一個值:&quot;0&quot;、&quot;1&quot;，&quot;true&quot;或&quot;false&quot;。'
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapHeader.EncodedRelay
  id: EncodedRelay
  parent: System.Web.Services.Protocols.SoapHeader
  langs:
  - csharp
  name: EncodedRelay
  nameWithType: SoapHeader.EncodedRelay
  fullName: System.Web.Services.Protocols.SoapHeader.EncodedRelay
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "取得或設定 SOAP 1.2 標頭的轉送屬性。"
  remarks: "EncodedRelay 屬性只適用於 SOAP 1.2，並指出訊息的收件者將此標頭轉送時它是否轉寄訊息到下游的下一個節點。 因為.NET Framework 不支援 SOAP 媒介，這個屬性會序列化和還原序列化，但忽略。"
  syntax:
    content: public string EncodedRelay { get; set; }
    return:
      type: System.String
      description: "可能是&quot;0&quot;，&quot;false&quot;、&quot;1&quot;或&quot;true&quot;。"
  overload: System.Web.Services.Protocols.SoapHeader.EncodedRelay*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapHeader.MustUnderstand
  id: MustUnderstand
  parent: System.Web.Services.Protocols.SoapHeader
  langs:
  - csharp
  name: MustUnderstand
  nameWithType: SoapHeader.MustUnderstand
  fullName: System.Web.Services.Protocols.SoapHeader.MustUnderstand
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "取得或設定值，指出是否<xref href=&quot;System.Web.Services.Protocols.SoapHeader&quot;></xref>必須了解。"
  remarks: "When an XML Web service client adds a SOAP header to an XML Web service method call with the MustUnderstand property set to `true`, the XML Web service method must set the <xref:System.Web.Services.Protocols.SoapHeader.DidUnderstand%2A> property to `true`; otherwise, a <xref:System.Web.Services.Protocols.SoapHeaderException> is thrown back to the XML Web service client by ASP.NET.  \n  \n Although both the <xref:System.Web.Services.Protocols.SoapHeader.EncodedMustUnderstand%2A> and MustUnderstand properties can be used to set the value of the `mustUnderstand` attribute within the SOAP header, the MustUnderstand property allows you to set the attribute using a Boolean value.  \n  \n For details on adding SOAP headers to clients, see [&#91;\\<topic://cpconusingsoapheaders>&#93;](http://msdn.microsoft.com/en-us/7bd961f2-b492-48d0-bafe-09d5d5fec3ba)."
  example:
  - "The following XML Web service client defines a custom SOAP header of type `MyHeader`, sets the MustUnderstand property to `true`, and invokes the `MyWebMethod` XML Web service method. If the XML Web service method does not set the <xref:System.Web.Services.Protocols.SoapHeader.DidUnderstand%2A> property of the `MyHeader` SOAP header to `true`, a <xref:System.Web.Services.Protocols.SoapHeaderException> is thrown.  \n  \n [!code-cs[Classic SoapHeader.MustUnderstand Example#1](~/add/codesnippet/csharp/p-system.web.services.pr_18_1.cs)]\n [!code-vb[Classic SoapHeader.MustUnderstand Example#1](~/add/codesnippet/visualbasic/p-system.web.services.pr_18_1.vb)]\n [!code-cpp[Classic SoapHeader.MustUnderstand Example#1](~/add/codesnippet/cpp/p-system.web.services.pr_18_1.cpp)]"
  syntax:
    content: public bool MustUnderstand { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果 XML Web service 必須正確解譯並處理<xref href=&quot;System.Web.Services.Protocols.SoapHeader&quot;> </xref>，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.Services.Protocols.SoapHeader.MustUnderstand*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapHeader.Relay
  id: Relay
  parent: System.Web.Services.Protocols.SoapHeader
  langs:
  - csharp
  name: Relay
  nameWithType: SoapHeader.Relay
  fullName: System.Web.Services.Protocols.SoapHeader.Relay
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "取得或設定值，這個值，指出是否要轉送至下一個 SOAP 節點，如果目前節點不了解標頭的 SOAP 標頭。"
  remarks: "預設的 SOAP 1.2 處理規則需要 SOAP 節點移除不了解 SOAP 處理節點，然後將傳遞訊息的下一個節點的標頭。"
  syntax:
    content: public bool Relay { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果 SOAP 標頭中有 「 轉送 」 屬性設為&quot;true&quot;;否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.Services.Protocols.SoapHeader.Relay*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapHeader.Role
  id: Role
  parent: System.Web.Services.Protocols.SoapHeader
  langs:
  - csharp
  name: Role
  nameWithType: SoapHeader.Role
  fullName: System.Web.Services.Protocols.SoapHeader.Role
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "取得或設定 SOAP 標頭的收件者。"
  remarks: "若要設定 SOAP 標頭的收件者，設定<xref:System.Web.Services.Protocols.SoapHeader.Actor%2A>屬性。</xref:System.Web.Services.Protocols.SoapHeader.Actor%2A> 不論用來與 XML Web 服務通訊的 SOAP 通訊協定版本，.NET Framework 會自動產生的 SOAP 通訊協定版本特有的 SOAP 訊息。 具體而言，XML 項目與 XML 命名空間代表收件者與不同的兩個版本中。       XML Web 服務接收的 SOAP 標頭可以藉由取得任何一個角色來取得預定的收件者或<xref:System.Web.Services.Protocols.SoapHeader.Actor%2A>屬性。</xref:System.Web.Services.Protocols.SoapHeader.Actor%2A>       為收件者`Body`項目和每個 SOAP 標頭內`Header`SOAP 訊息的項目不需要相同。 如果`Header`SOAP 訊息中的項目存在，它代表 XML Web service 方法或媒介可以傳送的其他資料。 收件者的資料，又稱為 SOAP `Role` SOAP 規格和 SOAP 1.2 版中`Actor`在 1.1 版中，可以是不同的 URI，比 XML Web service 方法的 URI。       如需有關 SOAP`actor`屬性，請參閱在 http://www.w3.org/TR/SOAP/ SOAP 規格。"
  syntax:
    content: public string Role { get; set; }
    return:
      type: System.String
      description: "表示 SOAP 標頭的收件者的 URI。 預設為空字串 (&quot;&quot;)。"
  overload: System.Web.Services.Protocols.SoapHeader.Role*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Web.Services.Protocols.SoapHeader.#ctor
  parent: System.Web.Services.Protocols.SoapHeader
  isExternal: false
  name: SoapHeader()
  nameWithType: SoapHeader.SoapHeader()
  fullName: System.Web.Services.Protocols.SoapHeader.SoapHeader()
- uid: System.Web.Services.Protocols.SoapHeader.Actor
  parent: System.Web.Services.Protocols.SoapHeader
  isExternal: false
  name: Actor
  nameWithType: SoapHeader.Actor
  fullName: System.Web.Services.Protocols.SoapHeader.Actor
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Services.Protocols.SoapHeader.DidUnderstand
  parent: System.Web.Services.Protocols.SoapHeader
  isExternal: false
  name: DidUnderstand
  nameWithType: SoapHeader.DidUnderstand
  fullName: System.Web.Services.Protocols.SoapHeader.DidUnderstand
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Services.Protocols.SoapHeader.EncodedMustUnderstand
  parent: System.Web.Services.Protocols.SoapHeader
  isExternal: false
  name: EncodedMustUnderstand
  nameWithType: SoapHeader.EncodedMustUnderstand
  fullName: System.Web.Services.Protocols.SoapHeader.EncodedMustUnderstand
- uid: System.Web.Services.Protocols.SoapHeader.EncodedMustUnderstand12
  parent: System.Web.Services.Protocols.SoapHeader
  isExternal: false
  name: EncodedMustUnderstand12
  nameWithType: SoapHeader.EncodedMustUnderstand12
  fullName: System.Web.Services.Protocols.SoapHeader.EncodedMustUnderstand12
- uid: System.Web.Services.Protocols.SoapHeader.EncodedRelay
  parent: System.Web.Services.Protocols.SoapHeader
  isExternal: false
  name: EncodedRelay
  nameWithType: SoapHeader.EncodedRelay
  fullName: System.Web.Services.Protocols.SoapHeader.EncodedRelay
- uid: System.Web.Services.Protocols.SoapHeader.MustUnderstand
  parent: System.Web.Services.Protocols.SoapHeader
  isExternal: false
  name: MustUnderstand
  nameWithType: SoapHeader.MustUnderstand
  fullName: System.Web.Services.Protocols.SoapHeader.MustUnderstand
- uid: System.Web.Services.Protocols.SoapHeader.Relay
  parent: System.Web.Services.Protocols.SoapHeader
  isExternal: false
  name: Relay
  nameWithType: SoapHeader.Relay
  fullName: System.Web.Services.Protocols.SoapHeader.Relay
- uid: System.Web.Services.Protocols.SoapHeader.Role
  parent: System.Web.Services.Protocols.SoapHeader
  isExternal: false
  name: Role
  nameWithType: SoapHeader.Role
  fullName: System.Web.Services.Protocols.SoapHeader.Role
- uid: System.Web.Services.Protocols.SoapHeader.#ctor*
  parent: System.Web.Services.Protocols.SoapHeader
  isExternal: false
  name: SoapHeader
  nameWithType: SoapHeader.SoapHeader
- uid: System.Web.Services.Protocols.SoapHeader.Actor*
  parent: System.Web.Services.Protocols.SoapHeader
  isExternal: false
  name: Actor
  nameWithType: SoapHeader.Actor
- uid: System.Web.Services.Protocols.SoapHeader.DidUnderstand*
  parent: System.Web.Services.Protocols.SoapHeader
  isExternal: false
  name: DidUnderstand
  nameWithType: SoapHeader.DidUnderstand
- uid: System.Web.Services.Protocols.SoapHeader.EncodedMustUnderstand*
  parent: System.Web.Services.Protocols.SoapHeader
  isExternal: false
  name: EncodedMustUnderstand
  nameWithType: SoapHeader.EncodedMustUnderstand
- uid: System.Web.Services.Protocols.SoapHeader.EncodedMustUnderstand12*
  parent: System.Web.Services.Protocols.SoapHeader
  isExternal: false
  name: EncodedMustUnderstand12
  nameWithType: SoapHeader.EncodedMustUnderstand12
- uid: System.Web.Services.Protocols.SoapHeader.EncodedRelay*
  parent: System.Web.Services.Protocols.SoapHeader
  isExternal: false
  name: EncodedRelay
  nameWithType: SoapHeader.EncodedRelay
- uid: System.Web.Services.Protocols.SoapHeader.MustUnderstand*
  parent: System.Web.Services.Protocols.SoapHeader
  isExternal: false
  name: MustUnderstand
  nameWithType: SoapHeader.MustUnderstand
- uid: System.Web.Services.Protocols.SoapHeader.Relay*
  parent: System.Web.Services.Protocols.SoapHeader
  isExternal: false
  name: Relay
  nameWithType: SoapHeader.Relay
- uid: System.Web.Services.Protocols.SoapHeader.Role*
  parent: System.Web.Services.Protocols.SoapHeader
  isExternal: false
  name: Role
  nameWithType: SoapHeader.Role
