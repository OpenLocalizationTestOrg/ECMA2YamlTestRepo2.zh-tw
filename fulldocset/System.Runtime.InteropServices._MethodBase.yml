### YamlMime:ManagedReference
items:
- uid: System.Runtime.InteropServices._MethodBase
  id: _MethodBase
  children:
  - System.Runtime.InteropServices._MethodBase.Attributes
  - System.Runtime.InteropServices._MethodBase.CallingConvention
  - System.Runtime.InteropServices._MethodBase.DeclaringType
  - System.Runtime.InteropServices._MethodBase.Equals(System.Object)
  - System.Runtime.InteropServices._MethodBase.GetCustomAttributes(System.Boolean)
  - System.Runtime.InteropServices._MethodBase.GetCustomAttributes(System.Type,System.Boolean)
  - System.Runtime.InteropServices._MethodBase.GetHashCode
  - System.Runtime.InteropServices._MethodBase.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  - System.Runtime.InteropServices._MethodBase.GetMethodImplementationFlags
  - System.Runtime.InteropServices._MethodBase.GetParameters
  - System.Runtime.InteropServices._MethodBase.GetType
  - System.Runtime.InteropServices._MethodBase.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  - System.Runtime.InteropServices._MethodBase.GetTypeInfoCount(System.UInt32@)
  - System.Runtime.InteropServices._MethodBase.Invoke(System.Object,System.Object[])
  - System.Runtime.InteropServices._MethodBase.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  - System.Runtime.InteropServices._MethodBase.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  - System.Runtime.InteropServices._MethodBase.IsAbstract
  - System.Runtime.InteropServices._MethodBase.IsAssembly
  - System.Runtime.InteropServices._MethodBase.IsConstructor
  - System.Runtime.InteropServices._MethodBase.IsDefined(System.Type,System.Boolean)
  - System.Runtime.InteropServices._MethodBase.IsFamily
  - System.Runtime.InteropServices._MethodBase.IsFamilyAndAssembly
  - System.Runtime.InteropServices._MethodBase.IsFamilyOrAssembly
  - System.Runtime.InteropServices._MethodBase.IsFinal
  - System.Runtime.InteropServices._MethodBase.IsHideBySig
  - System.Runtime.InteropServices._MethodBase.IsPrivate
  - System.Runtime.InteropServices._MethodBase.IsPublic
  - System.Runtime.InteropServices._MethodBase.IsSpecialName
  - System.Runtime.InteropServices._MethodBase.IsStatic
  - System.Runtime.InteropServices._MethodBase.IsVirtual
  - System.Runtime.InteropServices._MethodBase.MemberType
  - System.Runtime.InteropServices._MethodBase.MethodHandle
  - System.Runtime.InteropServices._MethodBase.Name
  - System.Runtime.InteropServices._MethodBase.ReflectedType
  - System.Runtime.InteropServices._MethodBase.ToString
  langs:
  - csharp
  name: _MethodBase
  nameWithType: _MethodBase
  fullName: System.Runtime.InteropServices._MethodBase
  type: Interface
  summary: "公開的 public 成員&lt;xref:System.Reflection.MethodBase?displayProperty=fullName&gt;至 unmanaged 程式碼的類別。"
  remarks: "此介面會從 unmanaged 程式碼會存取 managed 類別，而且不應該從 managed 程式碼呼叫。       這個介面會保留 vtable 順序的<xref:System.Reflection.MethodBase?displayProperty=fullName>類別可由 unmanaged COM 物件存取的成員。</xref:System.Reflection.MethodBase?displayProperty=fullName>"
  syntax:
    content: >-
      [System.CLSCompliant(false)]

      [System.Runtime.InteropServices.ComVisible(true)]

      [System.Runtime.InteropServices.Guid("6240837A-707F-3181-8E98-A36AE086766B")]

      [System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]

      [System.Runtime.InteropServices.TypeLibImportClass(typeof(System.Reflection.MethodBase))]

      public interface _MethodBase
  implements: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodBase.Attributes
  id: Attributes
  parent: System.Runtime.InteropServices._MethodBase
  langs:
  - csharp
  name: Attributes
  nameWithType: _MethodBase.Attributes
  fullName: System.Runtime.InteropServices._MethodBase.Attributes
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權<xref:System.Reflection.MethodBase.Attributes*>屬性。</xref:System.Reflection.MethodBase.Attributes*>"
  remarks: "這個屬性會從 unmanaged 程式碼會存取 managed 類別，不應該從 managed 程式碼呼叫。       <xref:System.Reflection.MethodBase.Attributes%2A>屬性會取得與此方法關聯的屬性。</xref:System.Reflection.MethodBase.Attributes%2A>"
  syntax:
    content: public System.Reflection.MethodAttributes Attributes { get; }
    return:
      type: System.Reflection.MethodAttributes
      description: "其中一個<xref:System.Reflection.MethodAttributes>值。</xref:System.Reflection.MethodAttributes>"
  overload: System.Runtime.InteropServices._MethodBase.Attributes*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodBase.CallingConvention
  id: CallingConvention
  parent: System.Runtime.InteropServices._MethodBase
  langs:
  - csharp
  name: CallingConvention
  nameWithType: _MethodBase.CallingConvention
  fullName: System.Runtime.InteropServices._MethodBase.CallingConvention
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權<xref:System.Reflection.MethodBase.CallingConvention*>屬性。</xref:System.Reflection.MethodBase.CallingConvention*>"
  remarks: "這個屬性會從 unmanaged 程式碼會存取 managed 類別，不應該從 managed 程式碼呼叫。       <xref:System.Reflection.MethodBase.CallingConvention%2A>屬性會取得值，指出這個方法的呼叫慣例。</xref:System.Reflection.MethodBase.CallingConvention%2A>"
  syntax:
    content: public System.Reflection.CallingConventions CallingConvention { get; }
    return:
      type: System.Reflection.CallingConventions
      description: "其中一個<xref:System.Reflection.CallingConventions>值。</xref:System.Reflection.CallingConventions>"
  overload: System.Runtime.InteropServices._MethodBase.CallingConvention*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodBase.DeclaringType
  id: DeclaringType
  parent: System.Runtime.InteropServices._MethodBase
  langs:
  - csharp
  name: DeclaringType
  nameWithType: _MethodBase.DeclaringType
  fullName: System.Runtime.InteropServices._MethodBase.DeclaringType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權<xref:System.Reflection.MemberInfo.DeclaringType*>屬性。</xref:System.Reflection.MemberInfo.DeclaringType*>"
  remarks: "這個屬性會從 unmanaged 程式碼會存取 managed 類別，不應該從 managed 程式碼呼叫。       <xref:System.Reflection.MemberInfo.DeclaringType%2A>屬性會取得宣告此成員的類別。</xref:System.Reflection.MemberInfo.DeclaringType%2A>"
  syntax:
    content: public Type DeclaringType { get; }
    return:
      type: System.Type
      description: "<xref uid=&quot;langword_csharp_Type&quot; name=&quot;Type&quot; href=&quot;&quot;> </xref>宣告這個成員的類別的物件。"
  overload: System.Runtime.InteropServices._MethodBase.DeclaringType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodBase.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Runtime.InteropServices._MethodBase
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: _MethodBase.Equals(Object)
  fullName: System.Runtime.InteropServices._MethodBase.Equals(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權<xref:System.Object.Equals*>方法。</xref:System.Object.Equals*>"
  remarks: "這個方法會從 unmanaged 程式碼會存取 managed 類別，並不應該從 managed 程式碼呼叫。       <xref:System.Object.Equals%2A>方法會判斷是否<xref:System.Object>等於目前<xref:System.Object>.</xref:System.Object></xref:System.Object>指定</xref:System.Object.Equals%2A>"
  syntax:
    content: public bool Equals (object other);
    parameters:
    - id: other
      type: System.Object
      description: "<xref:System.Object>要與目前<xref:System.Object>.</xref:System.Object>比較</xref:System.Object>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果指定<xref:System.Object>是否等於目前<xref:System.Object>，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Object> </xref:System.Object>"
  overload: System.Runtime.InteropServices._MethodBase.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodBase.GetCustomAttributes(System.Boolean)
  id: GetCustomAttributes(System.Boolean)
  parent: System.Runtime.InteropServices._MethodBase
  langs:
  - csharp
  name: GetCustomAttributes(Boolean)
  nameWithType: _MethodBase.GetCustomAttributes(Boolean)
  fullName: System.Runtime.InteropServices._MethodBase.GetCustomAttributes(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權<xref:System.Reflection.MemberInfo.GetCustomAttributes*>方法。</xref:System.Reflection.MemberInfo.GetCustomAttributes*>"
  remarks: "這個方法會從 unmanaged 程式碼會存取 managed 類別，並不應該從 managed 程式碼呼叫。       <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A>方法會傳回陣列，其中包含的所有自訂屬性。</xref:System.Reflection.MemberInfo.GetCustomAttributes%2A>"
  syntax:
    content: public object[] GetCustomAttributes (bool inherit);
    parameters:
    - id: inherit
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要搜尋這個成員的繼承鏈結以尋找屬性。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.Object[]
      description: "陣列，其中包含的所有自訂屬性或如果沒有定義屬性為零 (0) 元素的陣列。"
  overload: System.Runtime.InteropServices._MethodBase.GetCustomAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodBase.GetCustomAttributes(System.Type,System.Boolean)
  id: GetCustomAttributes(System.Type,System.Boolean)
  parent: System.Runtime.InteropServices._MethodBase
  langs:
  - csharp
  name: GetCustomAttributes(Type,Boolean)
  nameWithType: _MethodBase.GetCustomAttributes(Type,Boolean)
  fullName: System.Runtime.InteropServices._MethodBase.GetCustomAttributes(Type,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權<xref:System.Reflection.MemberInfo.GetCustomAttributes*>方法。</xref:System.Reflection.MemberInfo.GetCustomAttributes*>"
  remarks: "這個方法會從 unmanaged 程式碼會存取 managed 類別，並不應該從 managed 程式碼呼叫。       <xref:System.Reflection.Emit.MethodBuilder.GetCustomAttributes%2A>方法會傳回<xref:System.Type>.</xref:System.Type>所識別的自訂屬性的陣列</xref:System.Reflection.Emit.MethodBuilder.GetCustomAttributes%2A>"
  syntax:
    content: public object[] GetCustomAttributes (Type attributeType, bool inherit);
    parameters:
    - id: attributeType
      type: System.Type
      description: "要搜尋的屬性類型。 會傳回可指派給這個類型的屬性。"
    - id: inherit
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要搜尋這個成員的繼承鏈結以尋找屬性。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.Object[]
      description: "陣列的自訂屬性套用至這個成員或如果沒有屬性已套用零 (0) 元素的陣列。"
  overload: System.Runtime.InteropServices._MethodBase.GetCustomAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodBase.GetHashCode
  id: GetHashCode
  parent: System.Runtime.InteropServices._MethodBase
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: _MethodBase.GetHashCode()
  fullName: System.Runtime.InteropServices._MethodBase.GetHashCode()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權<xref:System.Object.GetHashCode*>方法。</xref:System.Object.GetHashCode*>"
  remarks: "這個方法會從 unmanaged 程式碼會存取 managed 類別，並不應該從 managed 程式碼呼叫。       <xref:System.Object.GetHashCode%2A>方法做為特定類型的雜湊函式。</xref:System.Object.GetHashCode%2A> <xref:System.Object.GetHashCode%2A>適用於雜湊演算法和資料結構，例如雜湊表。</xref:System.Object.GetHashCode%2A>"
  syntax:
    content: public int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "目前的執行個體的雜湊碼。"
  overload: System.Runtime.InteropServices._MethodBase.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodBase.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  id: GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Runtime.InteropServices._MethodBase
  langs:
  - csharp
  name: GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  nameWithType: _MethodBase.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  fullName: System.Runtime.InteropServices._MethodBase.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "將一組名稱對應至一組對應的分派識別項。"
  remarks: "這個方法會從 unmanaged 程式碼會存取 managed 類別，並不應該從 managed 程式碼呼叫。 如需有關`IDispatch::GetIDsOfNames`，請參閱 MSDN Library。"
  syntax:
    content: public void GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);
    parameters:
    - id: riid
      type: System.Guid
      description: "保留供將來使用。 必須是 IID_NULL。"
    - id: rgszNames
      type: System.IntPtr
      description: "對應名稱的陣列。"
    - id: cNames
      type: System.UInt32
      description: "要對應的名稱計數。"
    - id: lcid
      type: System.UInt32
      description: "地區設定內容，用於解譯名稱。"
    - id: rgDispId
      type: System.IntPtr
      description: "呼叫端所配置的陣列，會接收對應於名稱的識別項。"
  overload: System.Runtime.InteropServices._MethodBase.GetIDsOfNames*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodBase.GetMethodImplementationFlags
  id: GetMethodImplementationFlags
  parent: System.Runtime.InteropServices._MethodBase
  langs:
  - csharp
  name: GetMethodImplementationFlags()
  nameWithType: _MethodBase.GetMethodImplementationFlags()
  fullName: System.Runtime.InteropServices._MethodBase.GetMethodImplementationFlags()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權<xref:System.Reflection.MethodBase.GetMethodImplementationFlags*>方法。</xref:System.Reflection.MethodBase.GetMethodImplementationFlags*>"
  remarks: "這個方法會從 unmanaged 程式碼會存取 managed 類別，並不應該從 managed 程式碼呼叫。       <xref:System.Reflection.MethodBase.GetMethodImplementationFlags%2A>成員傳回<xref:System.Reflection.MethodImplAttributes>旗標。</xref:System.Reflection.MethodImplAttributes> </xref:System.Reflection.MethodBase.GetMethodImplementationFlags%2A>"
  syntax:
    content: public System.Reflection.MethodImplAttributes GetMethodImplementationFlags ();
    parameters: []
    return:
      type: System.Reflection.MethodImplAttributes
      description: "其中一個<xref:System.Reflection.MethodImplAttributes>值。</xref:System.Reflection.MethodImplAttributes>"
  overload: System.Runtime.InteropServices._MethodBase.GetMethodImplementationFlags*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodBase.GetParameters
  id: GetParameters
  parent: System.Runtime.InteropServices._MethodBase
  langs:
  - csharp
  name: GetParameters()
  nameWithType: _MethodBase.GetParameters()
  fullName: System.Runtime.InteropServices._MethodBase.GetParameters()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權<xref:System.Reflection.MethodBase.GetParameters*>方法。</xref:System.Reflection.MethodBase.GetParameters*>"
  remarks: "這個方法會從 unmanaged 程式碼會存取 managed 類別，並不應該從 managed 程式碼呼叫。       <xref:System.Reflection.MethodBase.GetParameters%2A>方法會取得指定的方法或建構函式的參數。</xref:System.Reflection.MethodBase.GetParameters%2A>"
  syntax:
    content: public System.Reflection.ParameterInfo[] GetParameters ();
    parameters: []
    return:
      type: System.Reflection.ParameterInfo[]
      description: "類型的陣列<xref:System.Reflection.ParameterInfo>包含資訊的方法 （或建構函式） 之簽章相符的這個執行個體所反映。</xref:System.Reflection.ParameterInfo>"
  overload: System.Runtime.InteropServices._MethodBase.GetParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodBase.GetType
  id: GetType
  parent: System.Runtime.InteropServices._MethodBase
  langs:
  - csharp
  name: GetType()
  nameWithType: _MethodBase.GetType()
  fullName: System.Runtime.InteropServices._MethodBase.GetType()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權<xref:System.Type.GetType*>方法。</xref:System.Type.GetType*>"
  remarks: "這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。       <xref:System.Object.GetType%2A>方法會取得目前的執行個體的類型。</xref:System.Object.GetType%2A>"
  syntax:
    content: public Type GetType ();
    parameters: []
    return:
      type: System.Type
      description: "A<xref:System.Type>物件。</xref:System.Type>"
  overload: System.Runtime.InteropServices._MethodBase.GetType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodBase.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  id: GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Runtime.InteropServices._MethodBase
  langs:
  - csharp
  name: GetTypeInfo(UInt32,UInt32,IntPtr)
  nameWithType: _MethodBase.GetTypeInfo(UInt32,UInt32,IntPtr)
  fullName: System.Runtime.InteropServices._MethodBase.GetTypeInfo(UInt32,UInt32,IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "擷取的類型資訊物件，可以用來取得介面的型別資訊。"
  remarks: "這個方法會從 unmanaged 程式碼會存取 managed 類別，並不應該從 managed 程式碼呼叫。 如需有關`IDispatch::GetTypeInfo`，請參閱 MSDN Library。"
  syntax:
    content: public void GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);
    parameters:
    - id: iTInfo
      type: System.UInt32
      description: "要傳回的類型資訊。"
    - id: lcid
      type: System.UInt32
      description: "型別資訊的地區設定識別項。"
    - id: ppTInfo
      type: System.IntPtr
      description: "要求的類型資訊物件的指標。"
  overload: System.Runtime.InteropServices._MethodBase.GetTypeInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodBase.GetTypeInfoCount(System.UInt32@)
  id: GetTypeInfoCount(System.UInt32@)
  parent: System.Runtime.InteropServices._MethodBase
  langs:
  - csharp
  name: GetTypeInfoCount(UInt32)
  nameWithType: _MethodBase.GetTypeInfoCount(UInt32)
  fullName: System.Runtime.InteropServices._MethodBase.GetTypeInfoCount(UInt32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "擷取物件提供 （0 或 1） 的類型資訊介面數目。"
  remarks: "這個方法會從 unmanaged 程式碼會存取 managed 類別，並不應該從 managed 程式碼呼叫。 如需有關`IDispatch::GetTypeInfoCount`，請參閱 MSDN Library。"
  syntax:
    content: public void GetTypeInfoCount (out uint pcTInfo);
    parameters:
    - id: pcTInfo
      type: System.UInt32
      description: "此方法傳回時，包含物件所提供的類型資訊介面數目的接收位置的指標。 這個參數未初始化便傳遞。"
  overload: System.Runtime.InteropServices._MethodBase.GetTypeInfoCount*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodBase.Invoke(System.Object,System.Object[])
  id: Invoke(System.Object,System.Object[])
  parent: System.Runtime.InteropServices._MethodBase
  langs:
  - csharp
  name: Invoke(Object,Object[])
  nameWithType: _MethodBase.Invoke(Object,Object[])
  fullName: System.Runtime.InteropServices._MethodBase.Invoke(Object,Object[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權<xref:System.Reflection.MethodBase.Invoke*>方法。</xref:System.Reflection.MethodBase.Invoke*>"
  remarks: "這個方法會從 unmanaged 程式碼會存取 managed 類別，並不應該從 managed 程式碼呼叫。       <xref:System.Reflection.MethodBase.Invoke%2A>方法會叫用方法或建構函式，由這個物件，使用指定的參數。</xref:System.Reflection.MethodBase.Invoke%2A>"
  syntax:
    content: public object Invoke (object obj, object[] parameters);
    parameters:
    - id: obj
      type: System.Object
      description: "建立這個方法的執行個體。"
    - id: parameters
      type: System.Object[]
      description: "叫用的方法或建構函式引數清單。 這是具有相同的數目、 順序和類型的物件陣列做為方法或建構函式來叫用的參數。 如果沒有任何參數，`parameters`應該<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。       如果所代表的方法或建構函式會採用這個執行個體<xref uid=&quot;langword_csharp_ref&quot; name=&quot;ref&quot; href=&quot;&quot;></xref>參數 (<xref uid=&quot;langword_csharp_ByRef&quot; name=&quot;ByRef&quot; href=&quot;&quot;> </xref>在 Visual Basic 中)，即為必要叫用方法或建構函式使用這個函式的參數沒有特殊屬性。 未明確初始化的值，這個陣列中的任何物件將包含該物件類型的預設值。 參考類型的項目，這個值會<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。 值類型的項目，這個值是 0、 0.0、 或<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>，取決於特定的項目類型。"
    return:
      type: System.Object
      description: "類別建構函式相關聯的執行個體。"
  overload: System.Runtime.InteropServices._MethodBase.Invoke*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodBase.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  id: Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  parent: System.Runtime.InteropServices._MethodBase
  langs:
  - csharp
  name: Invoke(Object,BindingFlags,Binder,Object[],CultureInfo)
  nameWithType: _MethodBase.Invoke(Object,BindingFlags,Binder,Object[],CultureInfo)
  fullName: System.Runtime.InteropServices._MethodBase.Invoke(Object,BindingFlags,Binder,Object[],CultureInfo)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權<xref:System.Reflection.MethodBase.Invoke*>方法。</xref:System.Reflection.MethodBase.Invoke*>"
  remarks: "這個方法會從 unmanaged 程式碼會存取 managed 類別，並不應該從 managed 程式碼呼叫。       <xref:System.Reflection.MethodBase.Invoke%2A>方法會叫用的建構函式所這反映<xref:System.Reflection.ConstructorInfo>物件與指定的引數，在指定的條件約束下<xref:System.Reflection.Binder>物件。</xref:System.Reflection.Binder> </xref:System.Reflection.ConstructorInfo> </xref:System.Reflection.MethodBase.Invoke%2A>"
  syntax:
    content: public object Invoke (object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object[] parameters, System.Globalization.CultureInfo culture);
    parameters:
    - id: obj
      type: System.Object
      description: "建立這個方法的執行個體。"
    - id: invokeAttr
      type: System.Reflection.BindingFlags
      description: "其中一個<xref uid=&quot;langword_csharp_BindingFlags&quot; name=&quot;BindingFlags&quot; href=&quot;&quot;></xref>值，指定繫結的類型。"
    - id: binder
      type: System.Reflection.Binder
      description: "A <xref uid=&quot;langword_csharp_Binder&quot; name=&quot;Binder&quot; href=&quot;&quot;> </xref> ，定義一組屬性並啟用繫結、 引數類型強制型轉和使用反映的成員引動過程。 If `binder` is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, then <xref uid=&quot;langword_csharp_Binder.DefaultBinding&quot; name=&quot;Binder.DefaultBinding&quot; href=&quot;&quot;></xref> is used."
    - id: parameters
      type: System.Object[]
      description: "類型的陣列<xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;></xref>用來比對數目、 順序和類型的參數的條件約束這個建構函式， `binder`。 如果這個建構函式不需要參數，傳遞的陣列項目為零，做為`Object[] parameters = new Object[0]`。 未明確初始化的值，這個陣列中的任何物件將包含該物件類型的預設值。 參考類型的項目，這個值會<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。 值類型的項目，這個值是 0、 0.0、 或<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>，取決於特定的項目類型。"
    - id: culture
      type: System.Globalization.CultureInfo
      description: "A<xref:System.Globalization.CultureInfo>物件，用來管理類型的強制型轉。</xref:System.Globalization.CultureInfo> 如果這是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>、<xref:System.Globalization.CultureInfo>會使用目前的執行緒。</xref:System.Globalization.CultureInfo>"
    return:
      type: System.Object
      description: "類別建構函式相關聯的執行個體。"
  overload: System.Runtime.InteropServices._MethodBase.Invoke*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodBase.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  id: Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  parent: System.Runtime.InteropServices._MethodBase
  langs:
  - csharp
  name: Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  nameWithType: _MethodBase.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  fullName: System.Runtime.InteropServices._MethodBase.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "提供屬性和物件所公開的方法存取權。"
  remarks: "這個方法會從 unmanaged 程式碼會存取 managed 類別，並不應該從 managed 程式碼呼叫。 如需有關`IDispatch::Invoke`，請參閱 MSDN Library。"
  syntax:
    content: public void Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);
    parameters:
    - id: dispIdMember
      type: System.UInt32
      description: "成員識別碼。"
    - id: riid
      type: System.Guid
      description: "保留供將來使用。 必須是 IID_NULL。"
    - id: lcid
      type: System.UInt32
      description: "地區設定內容，用於解譯引數。"
    - id: wFlags
      type: System.Int16
      description: "描述呼叫之內容的旗標。"
    - id: pDispParams
      type: System.IntPtr
      description: "此結構包含引數陣列，為具名引數，以及陣列中的項目數目的計數的引數 Dispid 陣列指標。"
    - id: pVarResult
      type: System.IntPtr
      description: "儲存結果的位置指標。"
    - id: pExcepInfo
      type: System.IntPtr
      description: "包含例外狀況資訊結構的指標。"
    - id: puArgErr
      type: System.IntPtr
      description: "發生錯誤的第一個引數索引。"
  overload: System.Runtime.InteropServices._MethodBase.Invoke*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodBase.IsAbstract
  id: IsAbstract
  parent: System.Runtime.InteropServices._MethodBase
  langs:
  - csharp
  name: IsAbstract
  nameWithType: _MethodBase.IsAbstract
  fullName: System.Runtime.InteropServices._MethodBase.IsAbstract
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權<xref:System.Reflection.MethodBase.IsAbstract*>屬性。</xref:System.Reflection.MethodBase.IsAbstract*>"
  remarks: "這個屬性會從 unmanaged 程式碼會存取 managed 類別，不應該從 managed 程式碼呼叫。       <xref:System.Reflection.MethodBase.IsAbstract%2A>屬性會取得值，指出方法是否為抽象。</xref:System.Reflection.MethodBase.IsAbstract%2A>"
  syntax:
    content: public bool IsAbstract { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果方法為抽象。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Runtime.InteropServices._MethodBase.IsAbstract*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodBase.IsAssembly
  id: IsAssembly
  parent: System.Runtime.InteropServices._MethodBase
  langs:
  - csharp
  name: IsAssembly
  nameWithType: _MethodBase.IsAssembly
  fullName: System.Runtime.InteropServices._MethodBase.IsAssembly
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權<xref:System.Reflection.MethodBase.IsAssembly*>屬性。</xref:System.Reflection.MethodBase.IsAssembly*>"
  remarks: "這個屬性會從 unmanaged 程式碼會存取 managed 類別，不應該從 managed 程式碼呼叫。       <xref:System.Reflection.MethodBase.IsAssembly%2A>屬性會取得值，指出是否可以由其他類別相同的組件呼叫這個方法</xref:System.Reflection.MethodBase.IsAssembly%2A>"
  syntax:
    content: public bool IsAssembly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果可以由其他類別相同的組件; 呼叫此方法否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Runtime.InteropServices._MethodBase.IsAssembly*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodBase.IsConstructor
  id: IsConstructor
  parent: System.Runtime.InteropServices._MethodBase
  langs:
  - csharp
  name: IsConstructor
  nameWithType: _MethodBase.IsConstructor
  fullName: System.Runtime.InteropServices._MethodBase.IsConstructor
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權<xref:System.Reflection.MethodBase.IsConstructor*>屬性。</xref:System.Reflection.MethodBase.IsConstructor*>"
  remarks: "這個屬性會從 unmanaged 程式碼會存取 managed 類別，不應該從 managed 程式碼呼叫。       <xref:System.Reflection.MethodBase.IsConstructor%2A>屬性會取得值，指出該方法建構函式。</xref:System.Reflection.MethodBase.IsConstructor%2A>"
  syntax:
    content: public bool IsConstructor { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果此方法的建構函式。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Runtime.InteropServices._MethodBase.IsConstructor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodBase.IsDefined(System.Type,System.Boolean)
  id: IsDefined(System.Type,System.Boolean)
  parent: System.Runtime.InteropServices._MethodBase
  langs:
  - csharp
  name: IsDefined(Type,Boolean)
  nameWithType: _MethodBase.IsDefined(Type,Boolean)
  fullName: System.Runtime.InteropServices._MethodBase.IsDefined(Type,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權<xref:System.Reflection.MemberInfo.IsDefined*>方法。</xref:System.Reflection.MemberInfo.IsDefined*>"
  remarks: "這個方法會從 unmanaged 程式碼會存取 managed 類別，並不應該從 managed 程式碼呼叫。       <xref:System.Reflection.MemberInfo.IsDefined%2A>指出成員是否的一或多個執行個體`attributeType`參數會套用至這個成員。</xref:System.Reflection.MemberInfo.IsDefined%2A>"
  syntax:
    content: public bool IsDefined (Type attributeType, bool inherit);
    parameters:
    - id: attributeType
      type: System.Type
      description: "<xref uid=&quot;langword_csharp_Type&quot; name=&quot;Type&quot; href=&quot;&quot;> </xref>来套用自訂屬性的物件。"
    - id: inherit
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要搜尋這個成員的繼承鏈結以尋找屬性。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果一個或多個執行個體<code> attributeType </code>參數是套用至這個成員，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Runtime.InteropServices._MethodBase.IsDefined*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodBase.IsFamily
  id: IsFamily
  parent: System.Runtime.InteropServices._MethodBase
  langs:
  - csharp
  name: IsFamily
  nameWithType: _MethodBase.IsFamily
  fullName: System.Runtime.InteropServices._MethodBase.IsFamily
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權<xref:System.Reflection.MethodBase.IsFamily*>屬性。</xref:System.Reflection.MethodBase.IsFamily*>"
  remarks: "這個屬性會從 unmanaged 程式碼會存取 managed 類別，不應該從 managed 程式碼呼叫。       <xref:System.Reflection.MethodBase.IsFamily%2A>屬性會取得值，指出這個方法的存取是否為類別的成員和其衍生類別的成員限制。</xref:System.Reflection.MethodBase.IsFamily%2A>"
  syntax:
    content: public bool IsFamily { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果存取此類別是類別本身的成員和其衍生的類別; 的成員限制否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Runtime.InteropServices._MethodBase.IsFamily*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodBase.IsFamilyAndAssembly
  id: IsFamilyAndAssembly
  parent: System.Runtime.InteropServices._MethodBase
  langs:
  - csharp
  name: IsFamilyAndAssembly
  nameWithType: _MethodBase.IsFamilyAndAssembly
  fullName: System.Runtime.InteropServices._MethodBase.IsFamilyAndAssembly
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權<xref:System.Reflection.MethodBase.IsFamilyAndAssembly*>屬性。</xref:System.Reflection.MethodBase.IsFamilyAndAssembly*>"
  remarks: "這個屬性會從 unmanaged 程式碼會存取 managed 類別，不應該從 managed 程式碼呼叫。       <xref:System.Reflection.MethodBase.IsFamilyAndAssembly%2A>屬性會取得值，指出此類別本身的成員，並由衍生類別，如果它們是在相同的組件是否可以呼叫這個方法</xref:System.Reflection.MethodBase.IsFamilyAndAssembly%2A>"
  syntax:
    content: public bool IsFamilyAndAssembly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果這個方法的存取限制類別本身的成員和衍生類別中相同的組件; 的成員否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Runtime.InteropServices._MethodBase.IsFamilyAndAssembly*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodBase.IsFamilyOrAssembly
  id: IsFamilyOrAssembly
  parent: System.Runtime.InteropServices._MethodBase
  langs:
  - csharp
  name: IsFamilyOrAssembly
  nameWithType: _MethodBase.IsFamilyOrAssembly
  fullName: System.Runtime.InteropServices._MethodBase.IsFamilyOrAssembly
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權<xref:System.Reflection.MethodBase.IsFamilyOrAssembly*>屬性。</xref:System.Reflection.MethodBase.IsFamilyOrAssembly*>"
  remarks: "這個屬性會從 unmanaged 程式碼會存取 managed 類別，不應該從 managed 程式碼呼叫。       <xref:System.Reflection.MethodBase.IsFamilyOrAssembly%2A>屬性會取得值，指出是否此方法可以呼叫由衍生類別，無論在何處，並由相同組件中的所有類別。</xref:System.Reflection.MethodBase.IsFamilyOrAssembly%2A>"
  syntax:
    content: public bool IsFamilyOrAssembly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果這個方法的存取限制為本身之類別的成員，成員的衍生類別任一處，以及其他類別相同的組件; 的成員否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Runtime.InteropServices._MethodBase.IsFamilyOrAssembly*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodBase.IsFinal
  id: IsFinal
  parent: System.Runtime.InteropServices._MethodBase
  langs:
  - csharp
  name: IsFinal
  nameWithType: _MethodBase.IsFinal
  fullName: System.Runtime.InteropServices._MethodBase.IsFinal
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權<xref:System.Reflection.MethodBase.IsFinal*>屬性。</xref:System.Reflection.MethodBase.IsFinal*>"
  remarks: "這個屬性會從 unmanaged 程式碼會存取 managed 類別，不應該從 managed 程式碼呼叫。       <xref:System.Reflection.MethodBase.IsFinal%2A>屬性會取得值，指出這個方法`final`。</xref:System.Reflection.MethodBase.IsFinal%2A>"
  syntax:
    content: public bool IsFinal { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果此方法<xref uid=&quot;langword_csharp_final&quot; name=&quot;final&quot; href=&quot;&quot;> </xref>，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Runtime.InteropServices._MethodBase.IsFinal*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodBase.IsHideBySig
  id: IsHideBySig
  parent: System.Runtime.InteropServices._MethodBase
  langs:
  - csharp
  name: IsHideBySig
  nameWithType: _MethodBase.IsHideBySig
  fullName: System.Runtime.InteropServices._MethodBase.IsHideBySig
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權<xref:System.Reflection.MethodBase.IsHideBySig*>屬性。</xref:System.Reflection.MethodBase.IsHideBySig*>"
  remarks: "這個屬性會從 unmanaged 程式碼會存取 managed 類別，不應該從 managed 程式碼呼叫。       <xref:System.Reflection.MethodBase.IsHideBySig%2A>屬性會取得值，指出是否隱藏相同名稱完全相同的簽章的成員在衍生類別。</xref:System.Reflection.MethodBase.IsHideBySig%2A>"
  syntax:
    content: public bool IsHideBySig { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果簽章，會隱藏成員，否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Runtime.InteropServices._MethodBase.IsHideBySig*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodBase.IsPrivate
  id: IsPrivate
  parent: System.Runtime.InteropServices._MethodBase
  langs:
  - csharp
  name: IsPrivate
  nameWithType: _MethodBase.IsPrivate
  fullName: System.Runtime.InteropServices._MethodBase.IsPrivate
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權<xref:System.Reflection.MethodBase.IsPrivate*>屬性。</xref:System.Reflection.MethodBase.IsPrivate*>"
  remarks: "這個屬性會從 unmanaged 程式碼會存取 managed 類別，不應該從 managed 程式碼呼叫。       <xref:System.Reflection.MethodBase.IsPrivate%2A>屬性會取得值，指出這個成員私用。</xref:System.Reflection.MethodBase.IsPrivate%2A>"
  syntax:
    content: public bool IsPrivate { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果存取此方法是限制為本身; 類別的其他成員否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Runtime.InteropServices._MethodBase.IsPrivate*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodBase.IsPublic
  id: IsPublic
  parent: System.Runtime.InteropServices._MethodBase
  langs:
  - csharp
  name: IsPublic
  nameWithType: _MethodBase.IsPublic
  fullName: System.Runtime.InteropServices._MethodBase.IsPublic
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權<xref:System.Reflection.MethodBase.IsPublic*>屬性。</xref:System.Reflection.MethodBase.IsPublic*>"
  remarks: "這個屬性會從 unmanaged 程式碼會存取 managed 類別，不應該從 managed 程式碼呼叫。       <xref:System.Reflection.MethodBase.IsPublic%2A>屬性會取得值，指出此方法是否為公用。</xref:System.Reflection.MethodBase.IsPublic%2A>"
  syntax:
    content: public bool IsPublic { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果這個方法是公用的。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Runtime.InteropServices._MethodBase.IsPublic*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodBase.IsSpecialName
  id: IsSpecialName
  parent: System.Runtime.InteropServices._MethodBase
  langs:
  - csharp
  name: IsSpecialName
  nameWithType: _MethodBase.IsSpecialName
  fullName: System.Runtime.InteropServices._MethodBase.IsSpecialName
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權<xref:System.Reflection.MethodBase.IsSpecialName*>屬性。</xref:System.Reflection.MethodBase.IsSpecialName*>"
  remarks: "這個屬性會從 unmanaged 程式碼會存取 managed 類別，不應該從 managed 程式碼呼叫。       <xref:System.Reflection.MethodBase.IsSpecialName%2A>屬性會取得值，指出這個方法是否有特殊的名稱。</xref:System.Reflection.MethodBase.IsSpecialName%2A>"
  syntax:
    content: public bool IsSpecialName { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果這個方法有特殊的名稱。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Runtime.InteropServices._MethodBase.IsSpecialName*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodBase.IsStatic
  id: IsStatic
  parent: System.Runtime.InteropServices._MethodBase
  langs:
  - csharp
  name: IsStatic
  nameWithType: _MethodBase.IsStatic
  fullName: System.Runtime.InteropServices._MethodBase.IsStatic
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權<xref:System.Reflection.MethodBase.IsStatic*>屬性。</xref:System.Reflection.MethodBase.IsStatic*>"
  remarks: "這個屬性會從 unmanaged 程式碼會存取 managed 類別，不應該從 managed 程式碼呼叫。       <xref:System.Reflection.MethodBase.IsStatic%2A>屬性會取得值，指出方法是否`static`。</xref:System.Reflection.MethodBase.IsStatic%2A>"
  syntax:
    content: public bool IsStatic { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果此方法<xref uid=&quot;langword_csharp_static&quot; name=&quot;static&quot; href=&quot;&quot;> </xref>，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Runtime.InteropServices._MethodBase.IsStatic*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodBase.IsVirtual
  id: IsVirtual
  parent: System.Runtime.InteropServices._MethodBase
  langs:
  - csharp
  name: IsVirtual
  nameWithType: _MethodBase.IsVirtual
  fullName: System.Runtime.InteropServices._MethodBase.IsVirtual
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權<xref:System.Reflection.MethodBase.IsVirtual*>屬性。</xref:System.Reflection.MethodBase.IsVirtual*>"
  remarks: "這個屬性會從 unmanaged 程式碼會存取 managed 類別，不應該從 managed 程式碼呼叫。       <xref:System.Reflection.MethodBase.IsVirtual%2A>屬性會取得值，指出方法是否`virtual`。</xref:System.Reflection.MethodBase.IsVirtual%2A>"
  syntax:
    content: public bool IsVirtual { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果此方法<xref uid=&quot;langword_csharp_virtual&quot; name=&quot;virtual&quot; href=&quot;&quot;> </xref>，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Runtime.InteropServices._MethodBase.IsVirtual*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodBase.MemberType
  id: MemberType
  parent: System.Runtime.InteropServices._MethodBase
  langs:
  - csharp
  name: MemberType
  nameWithType: _MethodBase.MemberType
  fullName: System.Runtime.InteropServices._MethodBase.MemberType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權<xref:System.Reflection.MemberInfo.MemberType*>屬性。</xref:System.Reflection.MemberInfo.MemberType*>"
  remarks: "這個屬性會從 unmanaged 程式碼會存取 managed 類別，不應該從 managed 程式碼呼叫。       <xref:System.Reflection.MemberInfo.MemberType%2A>屬性會取得<xref:System.Reflection.MemberTypes>值，指出成員類型 — 方法、 建構函式、 事件等等。</xref:System.Reflection.MemberTypes> </xref:System.Reflection.MemberInfo.MemberType%2A>"
  syntax:
    content: public System.Reflection.MemberTypes MemberType { get; }
    return:
      type: System.Reflection.MemberTypes
      description: "其中一個<xref href=&quot;System.Reflection.MemberTypes&quot;></xref>值，指出成員的型別。"
  overload: System.Runtime.InteropServices._MethodBase.MemberType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodBase.MethodHandle
  id: MethodHandle
  parent: System.Runtime.InteropServices._MethodBase
  langs:
  - csharp
  name: MethodHandle
  nameWithType: _MethodBase.MethodHandle
  fullName: System.Runtime.InteropServices._MethodBase.MethodHandle
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權<xref:System.Reflection.MethodBase.MethodHandle*>屬性。</xref:System.Reflection.MethodBase.MethodHandle*>"
  remarks: "這個屬性會從 unmanaged 程式碼會存取 managed 類別，不應該從 managed 程式碼呼叫。       <xref:System.Reflection.MethodBase.MethodHandle%2A>屬性會取得方法之內部中繼資料表示的控制代碼。</xref:System.Reflection.MethodBase.MethodHandle%2A>"
  syntax:
    content: public RuntimeMethodHandle MethodHandle { get; }
    return:
      type: System.RuntimeMethodHandle
      description: "A<xref:System.RuntimeMethodHandle>物件。</xref:System.RuntimeMethodHandle>"
  overload: System.Runtime.InteropServices._MethodBase.MethodHandle*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodBase.Name
  id: Name
  parent: System.Runtime.InteropServices._MethodBase
  langs:
  - csharp
  name: Name
  nameWithType: _MethodBase.Name
  fullName: System.Runtime.InteropServices._MethodBase.Name
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權<xref:System.Reflection.MemberInfo.Name*>屬性。</xref:System.Reflection.MemberInfo.Name*>"
  remarks: "這個屬性會從 unmanaged 程式碼會存取 managed 類別，不應該從 managed 程式碼呼叫。       <xref:System.Reflection.MemberInfo.Name%2A>屬性會取得目前成員的名稱。</xref:System.Reflection.MemberInfo.Name%2A>"
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "A<xref:System.String>物件，其中包含這個成員的名稱。</xref:System.String>"
  overload: System.Runtime.InteropServices._MethodBase.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodBase.ReflectedType
  id: ReflectedType
  parent: System.Runtime.InteropServices._MethodBase
  langs:
  - csharp
  name: ReflectedType
  nameWithType: _MethodBase.ReflectedType
  fullName: System.Runtime.InteropServices._MethodBase.ReflectedType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權<xref:System.Reflection.MemberInfo.ReflectedType*>屬性。</xref:System.Reflection.MemberInfo.ReflectedType*>"
  remarks: "這個屬性會從 unmanaged 程式碼會存取 managed 類別，不應該從 managed 程式碼呼叫。       <xref:System.Reflection.MemberInfo.ReflectedType%2A>屬性會取得用來取得這個類別物件`MemberInfo`物件。</xref:System.Reflection.MemberInfo.ReflectedType%2A>"
  syntax:
    content: public Type ReflectedType { get; }
    return:
      type: System.Type
      description: "<xref uid=&quot;langword_csharp_Type&quot; name=&quot;Type&quot; href=&quot;&quot;> </xref>物件，用來取得這個<xref uid=&quot;langword_csharp_MemberInfo&quot; name=&quot;MemberInfo&quot; href=&quot;&quot;></xref>物件。"
  overload: System.Runtime.InteropServices._MethodBase.ReflectedType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodBase.ToString
  id: ToString
  parent: System.Runtime.InteropServices._MethodBase
  langs:
  - csharp
  name: ToString()
  nameWithType: _MethodBase.ToString()
  fullName: System.Runtime.InteropServices._MethodBase.ToString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM 物件提供與版本無關的存取權<xref:System.Object.ToString*>方法。</xref:System.Object.ToString*>"
  remarks: "這個方法會從 unmanaged 程式碼會存取 managed 類別，並不應該從 managed 程式碼呼叫。"
  syntax:
    content: public string ToString ();
    parameters: []
    return:
      type: System.String
      description: "字串，代表目前<xref:System.Object>.</xref:System.Object>"
  overload: System.Runtime.InteropServices._MethodBase.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Runtime.InteropServices._MethodBase.Attributes
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: Attributes
  nameWithType: _MethodBase.Attributes
  fullName: System.Runtime.InteropServices._MethodBase.Attributes
- uid: System.Reflection.MethodAttributes
  parent: System.Reflection
  isExternal: true
  name: MethodAttributes
  nameWithType: MethodAttributes
  fullName: System.Reflection.MethodAttributes
- uid: System.Runtime.InteropServices._MethodBase.CallingConvention
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: CallingConvention
  nameWithType: _MethodBase.CallingConvention
  fullName: System.Runtime.InteropServices._MethodBase.CallingConvention
- uid: System.Reflection.CallingConventions
  parent: System.Reflection
  isExternal: true
  name: CallingConventions
  nameWithType: CallingConventions
  fullName: System.Reflection.CallingConventions
- uid: System.Runtime.InteropServices._MethodBase.DeclaringType
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: DeclaringType
  nameWithType: _MethodBase.DeclaringType
  fullName: System.Runtime.InteropServices._MethodBase.DeclaringType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Runtime.InteropServices._MethodBase.Equals(System.Object)
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: Equals(Object)
  nameWithType: _MethodBase.Equals(Object)
  fullName: System.Runtime.InteropServices._MethodBase.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Runtime.InteropServices._MethodBase.GetCustomAttributes(System.Boolean)
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: GetCustomAttributes(Boolean)
  nameWithType: _MethodBase.GetCustomAttributes(Boolean)
  fullName: System.Runtime.InteropServices._MethodBase.GetCustomAttributes(Boolean)
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.InteropServices._MethodBase.GetCustomAttributes(System.Type,System.Boolean)
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: GetCustomAttributes(Type,Boolean)
  nameWithType: _MethodBase.GetCustomAttributes(Type,Boolean)
  fullName: System.Runtime.InteropServices._MethodBase.GetCustomAttributes(Type,Boolean)
- uid: System.Runtime.InteropServices._MethodBase.GetHashCode
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: GetHashCode()
  nameWithType: _MethodBase.GetHashCode()
  fullName: System.Runtime.InteropServices._MethodBase.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Runtime.InteropServices._MethodBase.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  nameWithType: _MethodBase.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  fullName: System.Runtime.InteropServices._MethodBase.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.Runtime.InteropServices._MethodBase.GetMethodImplementationFlags
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: GetMethodImplementationFlags()
  nameWithType: _MethodBase.GetMethodImplementationFlags()
  fullName: System.Runtime.InteropServices._MethodBase.GetMethodImplementationFlags()
- uid: System.Reflection.MethodImplAttributes
  parent: System.Reflection
  isExternal: true
  name: MethodImplAttributes
  nameWithType: MethodImplAttributes
  fullName: System.Reflection.MethodImplAttributes
- uid: System.Runtime.InteropServices._MethodBase.GetParameters
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: GetParameters()
  nameWithType: _MethodBase.GetParameters()
  fullName: System.Runtime.InteropServices._MethodBase.GetParameters()
- uid: System.Reflection.ParameterInfo[]
  parent: System.Reflection
  isExternal: true
  name: ParameterInfo
  nameWithType: ParameterInfo
  fullName: System.Reflection.ParameterInfo[]
  spec.csharp:
  - uid: System.Reflection.ParameterInfo
    name: ParameterInfo
    nameWithType: ParameterInfo
    fullName: ParameterInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.InteropServices._MethodBase.GetType
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: GetType()
  nameWithType: _MethodBase.GetType()
  fullName: System.Runtime.InteropServices._MethodBase.GetType()
- uid: System.Runtime.InteropServices._MethodBase.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: GetTypeInfo(UInt32,UInt32,IntPtr)
  nameWithType: _MethodBase.GetTypeInfo(UInt32,UInt32,IntPtr)
  fullName: System.Runtime.InteropServices._MethodBase.GetTypeInfo(UInt32,UInt32,IntPtr)
- uid: System.Runtime.InteropServices._MethodBase.GetTypeInfoCount(System.UInt32@)
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: GetTypeInfoCount(UInt32)
  nameWithType: _MethodBase.GetTypeInfoCount(UInt32)
  fullName: System.Runtime.InteropServices._MethodBase.GetTypeInfoCount(UInt32)
- uid: System.Runtime.InteropServices._MethodBase.Invoke(System.Object,System.Object[])
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: Invoke(Object,Object[])
  nameWithType: _MethodBase.Invoke(Object,Object[])
  fullName: System.Runtime.InteropServices._MethodBase.Invoke(Object,Object[])
- uid: System.Runtime.InteropServices._MethodBase.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: Invoke(Object,BindingFlags,Binder,Object[],CultureInfo)
  nameWithType: _MethodBase.Invoke(Object,BindingFlags,Binder,Object[],CultureInfo)
  fullName: System.Runtime.InteropServices._MethodBase.Invoke(Object,BindingFlags,Binder,Object[],CultureInfo)
- uid: System.Reflection.BindingFlags
  parent: System.Reflection
  isExternal: false
  name: BindingFlags
  nameWithType: BindingFlags
  fullName: System.Reflection.BindingFlags
- uid: System.Reflection.Binder
  parent: System.Reflection
  isExternal: false
  name: Binder
  nameWithType: Binder
  fullName: System.Reflection.Binder
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Runtime.InteropServices._MethodBase.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  nameWithType: _MethodBase.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  fullName: System.Runtime.InteropServices._MethodBase.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
- uid: System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Runtime.InteropServices._MethodBase.IsAbstract
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: IsAbstract
  nameWithType: _MethodBase.IsAbstract
  fullName: System.Runtime.InteropServices._MethodBase.IsAbstract
- uid: System.Runtime.InteropServices._MethodBase.IsAssembly
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: IsAssembly
  nameWithType: _MethodBase.IsAssembly
  fullName: System.Runtime.InteropServices._MethodBase.IsAssembly
- uid: System.Runtime.InteropServices._MethodBase.IsConstructor
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: IsConstructor
  nameWithType: _MethodBase.IsConstructor
  fullName: System.Runtime.InteropServices._MethodBase.IsConstructor
- uid: System.Runtime.InteropServices._MethodBase.IsDefined(System.Type,System.Boolean)
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: IsDefined(Type,Boolean)
  nameWithType: _MethodBase.IsDefined(Type,Boolean)
  fullName: System.Runtime.InteropServices._MethodBase.IsDefined(Type,Boolean)
- uid: System.Runtime.InteropServices._MethodBase.IsFamily
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: IsFamily
  nameWithType: _MethodBase.IsFamily
  fullName: System.Runtime.InteropServices._MethodBase.IsFamily
- uid: System.Runtime.InteropServices._MethodBase.IsFamilyAndAssembly
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: IsFamilyAndAssembly
  nameWithType: _MethodBase.IsFamilyAndAssembly
  fullName: System.Runtime.InteropServices._MethodBase.IsFamilyAndAssembly
- uid: System.Runtime.InteropServices._MethodBase.IsFamilyOrAssembly
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: IsFamilyOrAssembly
  nameWithType: _MethodBase.IsFamilyOrAssembly
  fullName: System.Runtime.InteropServices._MethodBase.IsFamilyOrAssembly
- uid: System.Runtime.InteropServices._MethodBase.IsFinal
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: IsFinal
  nameWithType: _MethodBase.IsFinal
  fullName: System.Runtime.InteropServices._MethodBase.IsFinal
- uid: System.Runtime.InteropServices._MethodBase.IsHideBySig
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: IsHideBySig
  nameWithType: _MethodBase.IsHideBySig
  fullName: System.Runtime.InteropServices._MethodBase.IsHideBySig
- uid: System.Runtime.InteropServices._MethodBase.IsPrivate
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: IsPrivate
  nameWithType: _MethodBase.IsPrivate
  fullName: System.Runtime.InteropServices._MethodBase.IsPrivate
- uid: System.Runtime.InteropServices._MethodBase.IsPublic
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: IsPublic
  nameWithType: _MethodBase.IsPublic
  fullName: System.Runtime.InteropServices._MethodBase.IsPublic
- uid: System.Runtime.InteropServices._MethodBase.IsSpecialName
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: IsSpecialName
  nameWithType: _MethodBase.IsSpecialName
  fullName: System.Runtime.InteropServices._MethodBase.IsSpecialName
- uid: System.Runtime.InteropServices._MethodBase.IsStatic
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: IsStatic
  nameWithType: _MethodBase.IsStatic
  fullName: System.Runtime.InteropServices._MethodBase.IsStatic
- uid: System.Runtime.InteropServices._MethodBase.IsVirtual
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: IsVirtual
  nameWithType: _MethodBase.IsVirtual
  fullName: System.Runtime.InteropServices._MethodBase.IsVirtual
- uid: System.Runtime.InteropServices._MethodBase.MemberType
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: MemberType
  nameWithType: _MethodBase.MemberType
  fullName: System.Runtime.InteropServices._MethodBase.MemberType
- uid: System.Reflection.MemberTypes
  parent: System.Reflection
  isExternal: false
  name: MemberTypes
  nameWithType: MemberTypes
  fullName: System.Reflection.MemberTypes
- uid: System.Runtime.InteropServices._MethodBase.MethodHandle
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: MethodHandle
  nameWithType: _MethodBase.MethodHandle
  fullName: System.Runtime.InteropServices._MethodBase.MethodHandle
- uid: System.RuntimeMethodHandle
  parent: System
  isExternal: true
  name: RuntimeMethodHandle
  nameWithType: RuntimeMethodHandle
  fullName: System.RuntimeMethodHandle
- uid: System.Runtime.InteropServices._MethodBase.Name
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: Name
  nameWithType: _MethodBase.Name
  fullName: System.Runtime.InteropServices._MethodBase.Name
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.InteropServices._MethodBase.ReflectedType
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: ReflectedType
  nameWithType: _MethodBase.ReflectedType
  fullName: System.Runtime.InteropServices._MethodBase.ReflectedType
- uid: System.Runtime.InteropServices._MethodBase.ToString
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: ToString()
  nameWithType: _MethodBase.ToString()
  fullName: System.Runtime.InteropServices._MethodBase.ToString()
- uid: System.Runtime.InteropServices._MethodBase.Attributes*
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: Attributes
  nameWithType: _MethodBase.Attributes
- uid: System.Runtime.InteropServices._MethodBase.CallingConvention*
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: CallingConvention
  nameWithType: _MethodBase.CallingConvention
- uid: System.Runtime.InteropServices._MethodBase.DeclaringType*
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: DeclaringType
  nameWithType: _MethodBase.DeclaringType
- uid: System.Runtime.InteropServices._MethodBase.Equals*
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: Equals
  nameWithType: _MethodBase.Equals
- uid: System.Runtime.InteropServices._MethodBase.GetCustomAttributes*
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: GetCustomAttributes
  nameWithType: _MethodBase.GetCustomAttributes
- uid: System.Runtime.InteropServices._MethodBase.GetHashCode*
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: GetHashCode
  nameWithType: _MethodBase.GetHashCode
- uid: System.Runtime.InteropServices._MethodBase.GetIDsOfNames*
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: GetIDsOfNames
  nameWithType: _MethodBase.GetIDsOfNames
- uid: System.Runtime.InteropServices._MethodBase.GetMethodImplementationFlags*
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: GetMethodImplementationFlags
  nameWithType: _MethodBase.GetMethodImplementationFlags
- uid: System.Runtime.InteropServices._MethodBase.GetParameters*
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: GetParameters
  nameWithType: _MethodBase.GetParameters
- uid: System.Runtime.InteropServices._MethodBase.GetType*
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: GetType
  nameWithType: _MethodBase.GetType
- uid: System.Runtime.InteropServices._MethodBase.GetTypeInfo*
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: GetTypeInfo
  nameWithType: _MethodBase.GetTypeInfo
- uid: System.Runtime.InteropServices._MethodBase.GetTypeInfoCount*
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: GetTypeInfoCount
  nameWithType: _MethodBase.GetTypeInfoCount
- uid: System.Runtime.InteropServices._MethodBase.Invoke*
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: Invoke
  nameWithType: _MethodBase.Invoke
- uid: System.Runtime.InteropServices._MethodBase.IsAbstract*
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: IsAbstract
  nameWithType: _MethodBase.IsAbstract
- uid: System.Runtime.InteropServices._MethodBase.IsAssembly*
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: IsAssembly
  nameWithType: _MethodBase.IsAssembly
- uid: System.Runtime.InteropServices._MethodBase.IsConstructor*
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: IsConstructor
  nameWithType: _MethodBase.IsConstructor
- uid: System.Runtime.InteropServices._MethodBase.IsDefined*
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: IsDefined
  nameWithType: _MethodBase.IsDefined
- uid: System.Runtime.InteropServices._MethodBase.IsFamily*
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: IsFamily
  nameWithType: _MethodBase.IsFamily
- uid: System.Runtime.InteropServices._MethodBase.IsFamilyAndAssembly*
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: IsFamilyAndAssembly
  nameWithType: _MethodBase.IsFamilyAndAssembly
- uid: System.Runtime.InteropServices._MethodBase.IsFamilyOrAssembly*
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: IsFamilyOrAssembly
  nameWithType: _MethodBase.IsFamilyOrAssembly
- uid: System.Runtime.InteropServices._MethodBase.IsFinal*
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: IsFinal
  nameWithType: _MethodBase.IsFinal
- uid: System.Runtime.InteropServices._MethodBase.IsHideBySig*
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: IsHideBySig
  nameWithType: _MethodBase.IsHideBySig
- uid: System.Runtime.InteropServices._MethodBase.IsPrivate*
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: IsPrivate
  nameWithType: _MethodBase.IsPrivate
- uid: System.Runtime.InteropServices._MethodBase.IsPublic*
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: IsPublic
  nameWithType: _MethodBase.IsPublic
- uid: System.Runtime.InteropServices._MethodBase.IsSpecialName*
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: IsSpecialName
  nameWithType: _MethodBase.IsSpecialName
- uid: System.Runtime.InteropServices._MethodBase.IsStatic*
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: IsStatic
  nameWithType: _MethodBase.IsStatic
- uid: System.Runtime.InteropServices._MethodBase.IsVirtual*
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: IsVirtual
  nameWithType: _MethodBase.IsVirtual
- uid: System.Runtime.InteropServices._MethodBase.MemberType*
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: MemberType
  nameWithType: _MethodBase.MemberType
- uid: System.Runtime.InteropServices._MethodBase.MethodHandle*
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: MethodHandle
  nameWithType: _MethodBase.MethodHandle
- uid: System.Runtime.InteropServices._MethodBase.Name*
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: Name
  nameWithType: _MethodBase.Name
- uid: System.Runtime.InteropServices._MethodBase.ReflectedType*
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: ReflectedType
  nameWithType: _MethodBase.ReflectedType
- uid: System.Runtime.InteropServices._MethodBase.ToString*
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: ToString
  nameWithType: _MethodBase.ToString
