### YamlMime:ManagedReference
items:
- uid: System.IO.Compression.ZipFile
  id: ZipFile
  children:
  - System.IO.Compression.ZipFile.CreateFromDirectory(System.String,System.String)
  - System.IO.Compression.ZipFile.CreateFromDirectory(System.String,System.String,System.IO.Compression.CompressionLevel,System.Boolean)
  - System.IO.Compression.ZipFile.CreateFromDirectory(System.String,System.String,System.IO.Compression.CompressionLevel,System.Boolean,System.Text.Encoding)
  - System.IO.Compression.ZipFile.ExtractToDirectory(System.String,System.String)
  - System.IO.Compression.ZipFile.ExtractToDirectory(System.String,System.String,System.Text.Encoding)
  - System.IO.Compression.ZipFile.Open(System.String,System.IO.Compression.ZipArchiveMode)
  - System.IO.Compression.ZipFile.Open(System.String,System.IO.Compression.ZipArchiveMode,System.Text.Encoding)
  - System.IO.Compression.ZipFile.OpenRead(System.String)
  langs:
  - csharp
  name: ZipFile
  nameWithType: ZipFile
  fullName: System.IO.Compression.ZipFile
  type: Class
  summary: "提供建立、 解壓縮及開啟 zip 封存的靜態方法。"
  remarks: "> [!IMPORTANT]> 以使用 ZipFile 類別，您必須加入參考`System.IO.Compression.FileSystem`組件，在您的專案中; 否則您會得到下列錯誤訊息時嘗試編譯︰ **&quot;ZipFile&quot; 不存在於目前的內容名稱**。 如需有關如何將參考加入專案加入 Visual Studio 中的詳細資訊，請參閱[如何︰ 加入或移除參考使用參考管理員](~/add/includes/ajax-current-ext-md.md)。       管理的 zip 封存和其檔案的方法分散到三個類別︰ ZipFile<xref:System.IO.Compression.ZipArchive>和<xref:System.IO.Compression.ZipArchiveEntry>。</xref:System.IO.Compression.ZipArchiveEntry> </xref:System.IO.Compression.ZipArchive>      |若要...|使用...|  |---------|----------|  |建立 zip 封存的目錄 |<xref:System.IO.Compression.ZipFile.CreateFromDirectory%2A?displayProperty=fullName>|  |目錄的 zip 封存的內容解壓縮 |<xref:System.IO.Compression.ZipFile.ExtractToDirectory%2A?displayProperty=fullName>|  |將新檔案加入至現有的 zip 封存 |<xref:System.IO.Compression.ZipArchive.CreateEntry%2A?displayProperty=fullName>|  |擷取 zip 封存中的檔案 |<xref:System.IO.Compression.ZipArchive.GetEntry%2A?displayProperty=fullName>|  |擷取所有 zip 封存中的檔案 |<xref:System.IO.Compression.ZipArchive.Entries%2A?displayProperty=fullName>|  |若要開啟 zip 封存中所包含的個別檔案資料流 |<xref:System.IO.Compression.ZipArchiveEntry.Open%2A?displayProperty=fullName>|  |從 zip 封存中刪除的檔案 |<xref:System.IO.Compression.ZipArchiveEntry.Delete%2A?displayProperty=fullName>|      您無法使用 zip 檔案或<xref:System.IO.Compression.ZipFileExtensions>中的類別[!INCLUDE[win8_appname_long](~/add/includes/win8-appname-long-md.md)]應用程式。</xref:System.IO.Compression.ZipFileExtensions> </xref:System.IO.Compression.ZipArchiveEntry.Delete%2A?displayProperty=fullName> </xref:System.IO.Compression.ZipArchiveEntry.Open%2A?displayProperty=fullName> </xref:System.IO.Compression.ZipArchive.Entries%2A?displayProperty=fullName> </xref:System.IO.Compression.ZipArchive.GetEntry%2A?displayProperty=fullName> </xref:System.IO.Compression.ZipArchive.CreateEntry%2A?displayProperty=fullName> </xref:System.IO.Compression.ZipFile.ExtractToDirectory%2A?displayProperty=fullName> </xref:System.IO.Compression.ZipFile.CreateFromDirectory%2A?displayProperty=fullName> 在[!INCLUDE[win8_appname_long](~/add/includes/win8-appname-long-md.md)]應用程式，您應使用下列類別使用的壓縮檔案。      -   <xref:System.IO.Compression.ZipArchive>      -   <xref:System.IO.Compression.ZipArchiveEntry>      -   <xref:System.IO.Compression.DeflateStream>      -   <xref:System.IO.Compression.GZipStream></xref:System.IO.Compression.GZipStream></xref:System.IO.Compression.DeflateStream></xref:System.IO.Compression.ZipArchiveEntry></xref:System.IO.Compression.ZipArchive>"
  example:
  - "This example shows how to create and extract a zip archive by using the ZipFile class. It compresses the contents of a folder into a zip archive, and then extracts that content to a new folder.  \n  \n> [!TIP]\n>  To use the ZipFile class, you must reference the `System.IO.Compression.FileSystem` assembly in your project.  \n  \n [!code-cs[System.IO.Compression.ZipFile#1](~/add/codesnippet/csharp/t-system.io.compression._3_1.cs)]\n [!code-vb[System.IO.Compression.ZipFile#1](~/add/codesnippet/visualbasic/t-system.io.compression._3_1.vb)]"
  syntax:
    content: public static class ZipFile
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IO.Compression.ZipFile.CreateFromDirectory(System.String,System.String)
  id: CreateFromDirectory(System.String,System.String)
  parent: System.IO.Compression.ZipFile
  langs:
  - csharp
  name: CreateFromDirectory(String,String)
  nameWithType: ZipFile.CreateFromDirectory(String,String)
  fullName: System.IO.Compression.ZipFile.CreateFromDirectory(String,String)
  type: Method
  assemblies:
  - System.IO.Compression.FileSystem
  namespace: System.IO.Compression
  summary: "建立包含的檔案和目錄的指定目錄的 zip 封存。"
  remarks: "從檔案系統的目錄結構會保留在封存中。 如果目錄是空的則會建立空的封存。 這個方法多載不包含在封存中的基底目錄並不允許您指定的壓縮層級。 如果您想要包含的基底目錄，或指定的壓縮層級，請呼叫<xref:System.IO.Compression.ZipFile.CreateFromDirectory%28System.String%2CSystem.String%2CSystem.IO.Compression.CompressionLevel%2CSystem.Boolean%29>方法多載。</xref:System.IO.Compression.ZipFile.CreateFromDirectory%28System.String%2CSystem.String%2CSystem.IO.Compression.CompressionLevel%2CSystem.Boolean%29>       如果封存已存在，<xref:System.IO.IOException>擲回例外狀況。</xref:System.IO.IOException> 如果封存中已經存在具有指定名稱的項目，第二個項目會建立具有相同的名稱。       如果目錄中的檔案無法加入到封存，在封存處於不完整、 不正確，而且方法會擲回<xref:System.IO.IOException>例外狀況。</xref:System.IO.IOException>"
  example:
  - "This example shows how to create and extract a zip archive by using the <xref:System.IO.Compression.ZipFile> class. It compresses the contents of a folder into a zip archive, and then extracts that content to a new folder. To use the <xref:System.IO.Compression.ZipFile> class, you must reference the `System.IO.Compression.FileSystem` assembly in your project.  \n  \n [!code-cs[System.IO.Compression.ZipFile#1](~/add/codesnippet/csharp/m-system.io.compression._3_1.cs)]\n [!code-vb[System.IO.Compression.ZipFile#1](~/add/codesnippet/visualbasic/m-system.io.compression._3_1.vb)]"
  syntax:
    content: public static void CreateFromDirectory (string sourceDirectoryName, string destinationArchiveFileName);
    parameters:
    - id: sourceDirectoryName
      type: System.String
      description: "若要封存，指定為相對或絕對路徑的目錄路徑。 相對路徑會解譯為與目前工作目錄中。"
    - id: destinationArchiveFileName
      type: System.String
      description: "若要建立資料庫，指定為相對或絕對路徑封存的路徑。 相對路徑會解譯為與目前工作目錄中。"
  overload: System.IO.Compression.ZipFile.CreateFromDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>sourceDirectoryName</code>或<code>destinationArchiveFileName</code>是<xref:System.String>、 只包含空格，或包含至少一個無效字元。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>sourceDirectoryName</code>or <code>destinationArchiveFileName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "在<code> sourceDirectoryName </code>或<code> destinationArchiveFileName </code>，指定的路徑、 檔案名稱，或兩者都超出系統定義的長度上限。 例如，windows 平台上，路徑不能超過 248 個字元，和檔案名稱不能超過 260 個字元。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "<code>sourceDirectoryName</code>無效或不存在 （例如，它位於未對應的磁碟機上）。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<code>destinationArchiveFileName</code>已經存在。       -或者-無法開啟指定的目錄中的檔案。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>destinationArchiveFileName</code>指定的目錄。       -或-呼叫端沒有必要的權限來存取指定的目錄<code>sourceDirectoryName</code>中指定的檔案或<code>destinationArchiveFileName</code>。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>sourceDirectoryName</code>或<code>destinationArchiveFileName</code>包含無效的格式。       -或者-zip 封存中不支援寫入。"
  platform:
  - net462
- uid: System.IO.Compression.ZipFile.CreateFromDirectory(System.String,System.String,System.IO.Compression.CompressionLevel,System.Boolean)
  id: CreateFromDirectory(System.String,System.String,System.IO.Compression.CompressionLevel,System.Boolean)
  parent: System.IO.Compression.ZipFile
  langs:
  - csharp
  name: CreateFromDirectory(String,String,CompressionLevel,Boolean)
  nameWithType: ZipFile.CreateFromDirectory(String,String,CompressionLevel,Boolean)
  fullName: System.IO.Compression.ZipFile.CreateFromDirectory(String,String,CompressionLevel,Boolean)
  type: Method
  assemblies:
  - System.IO.Compression.FileSystem
  namespace: System.IO.Compression
  summary: "建立 zip 封存包含的檔案和目錄從指定的目錄，會使用指定的壓縮層級，並選擇性包含基底目錄。"
  remarks: "從檔案系統的目錄結構會保留在封存中。 如果目錄是空的則會建立空的封存。 您可以使用這個方法多載，指定的壓縮層級，以及是否要包含在封存中的基底目錄。       如果封存已存在，<xref:System.IO.IOException>擲回例外狀況。</xref:System.IO.IOException> 如果封存中已經存在具有指定名稱的項目，第二個項目會建立具有相同的名稱。       如果目錄中的檔案無法加入到封存，在封存處於不完整、 不正確，而且方法會擲回<xref:System.IO.IOException>例外狀況。</xref:System.IO.IOException>"
  example:
  - "This example shows how to create and extract a zip archive by using the <xref:System.IO.Compression.ZipFile> class. It compresses the contents of a folder into a zip archive, and then extracts that content to a new folder. When compressing the archive, the base directory is included and the compression level is set to emphasize the speed of the operation over efficiency. To use the <xref:System.IO.Compression.ZipFile> class, you must reference the `System.IO.Compression.FileSystem` assembly in your project.  \n  \n [!code-cs[System.IO.Compression.ZipFile#2](~/add/codesnippet/csharp/42971baa-9b4d-4381-a7b3-_1.cs)]\n [!code-vb[System.IO.Compression.ZipFile#2](~/add/codesnippet/visualbasic/42971baa-9b4d-4381-a7b3-_1.vb)]"
  syntax:
    content: public static void CreateFromDirectory (string sourceDirectoryName, string destinationArchiveFileName, System.IO.Compression.CompressionLevel compressionLevel, bool includeBaseDirectory);
    parameters:
    - id: sourceDirectoryName
      type: System.String
      description: "若要封存，指定為相對或絕對路徑的目錄路徑。 相對路徑會解譯為與目前工作目錄中。"
    - id: destinationArchiveFileName
      type: System.String
      description: "若要建立資料庫，指定為相對或絕對路徑封存的路徑。 相對路徑會解譯為與目前工作目錄中。"
    - id: compressionLevel
      type: System.IO.Compression.CompressionLevel
      description: "其中一個列舉值，指出是否要強調速度或壓縮的效益時建立項目。"
    - id: includeBaseDirectory
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>包含目錄名稱，從`sourceDirectoryName`根目錄中的封存。<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>包含目錄的內容。"
  overload: System.IO.Compression.ZipFile.CreateFromDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>sourceDirectoryName</code>或<code>destinationArchiveFileName</code>是<xref:System.String>、 只包含空格，或包含至少一個無效字元。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>sourceDirectoryName</code>or <code>destinationArchiveFileName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "在<code> sourceDirectoryName </code>或<code> destinationArchiveFileName </code>，指定的路徑、 檔案名稱，或兩者都超出系統定義的長度上限。 例如，windows 平台上，路徑不能超過 248 個字元，和檔案名稱不能超過 260 個字元。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "<code>sourceDirectoryName</code>無效或不存在 （例如，它位於未對應的磁碟機上）。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<code>destinationArchiveFileName</code>已經存在。       -或者-無法開啟指定的目錄中的檔案。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>destinationArchiveFileName</code>指定的目錄。       -或-呼叫端沒有必要的權限來存取指定的目錄<code>sourceDirectoryName</code>中指定的檔案或<code>destinationArchiveFileName</code>。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>sourceDirectoryName</code>或<code>destinationArchiveFileName</code>包含無效的格式。       -或者-zip 封存中不支援寫入。"
  platform:
  - net462
- uid: System.IO.Compression.ZipFile.CreateFromDirectory(System.String,System.String,System.IO.Compression.CompressionLevel,System.Boolean,System.Text.Encoding)
  id: CreateFromDirectory(System.String,System.String,System.IO.Compression.CompressionLevel,System.Boolean,System.Text.Encoding)
  parent: System.IO.Compression.ZipFile
  langs:
  - csharp
  name: CreateFromDirectory(String,String,CompressionLevel,Boolean,Encoding)
  nameWithType: ZipFile.CreateFromDirectory(String,String,CompressionLevel,Boolean,Encoding)
  fullName: System.IO.Compression.ZipFile.CreateFromDirectory(String,String,CompressionLevel,Boolean,Encoding)
  type: Method
  assemblies:
  - System.IO.Compression.FileSystem
  namespace: System.IO.Compression
  summary: "建立 zip 封存包含的檔案和目錄從指定的目錄、 使用指定的壓縮等級和字元編碼的項目名稱，並選擇性包含基底目錄。"
  remarks: "從檔案系統的目錄結構會保留在封存中。 如果目錄是空的則會建立空的封存。 使用這個方法多載指定壓縮層級和字元編碼，以及是否要包含在封存中的基底目錄。       如果封存已存在，<xref:System.IO.IOException>擲回例外狀況。</xref:System.IO.IOException> 如果封存中已經存在具有指定名稱的項目，第二個項目會建立具有相同的名稱。       如果目錄中的檔案無法加入到封存，在封存處於不完整、 不正確，而且方法會擲回<xref:System.IO.IOException>例外狀況。</xref:System.IO.IOException>       如果`entryNameEncoding`以外設定為值`null`，使用指定的編碼方式來進行編碼的項目名稱。 如果指定的編碼方式為 utf-8 的語言編碼 （以本機檔案標頭的一般用途的位元旗標） 旗標設定每個項目，如果`entryNameEncoding`設為`null`，項目名稱會編碼根據下列規則:-為項目名稱中包含外部 ASCII 字元範圍的語言編碼方式的旗標設定，以及 utf-8 來編碼項目名稱。      -只能包含 ASCII 字元項目名稱，設定語言編碼旗標，以及目前的系統預設字碼頁用來編碼項目名稱。"
  syntax:
    content: public static void CreateFromDirectory (string sourceDirectoryName, string destinationArchiveFileName, System.IO.Compression.CompressionLevel compressionLevel, bool includeBaseDirectory, System.Text.Encoding entryNameEncoding);
    parameters:
    - id: sourceDirectoryName
      type: System.String
      description: "若要封存，指定為相對或絕對路徑的目錄路徑。 相對路徑會解譯為與目前工作目錄中。"
    - id: destinationArchiveFileName
      type: System.String
      description: "若要建立資料庫，指定為相對或絕對路徑封存的路徑。 相對路徑會解譯為與目前工作目錄中。"
    - id: compressionLevel
      type: System.IO.Compression.CompressionLevel
      description: "其中一個列舉值，指出是否要強調速度或壓縮的效益時建立項目。"
    - id: includeBaseDirectory
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>包含目錄名稱，從`sourceDirectoryName`根目錄中的封存。<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>包含目錄的內容。"
    - id: entryNameEncoding
      type: System.Text.Encoding
      description: "讀取時所使用的編碼方式，或寫入此封存中的項目名稱。 編碼方式，是為了互通性與 zip 封存工具和程式庫不支援 utf-8 編碼的項目名稱時，才指定這個參數的值。"
  overload: System.IO.Compression.ZipFile.CreateFromDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>sourceDirectoryName</code>或<code>destinationArchiveFileName</code>是<xref:System.String>、 只包含空格，或包含至少一個無效字元。       -或-<code>entryNameEncoding</code>設定為 unicode 的編碼方式 utf-8 以外。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>sourceDirectoryName</code>or <code>destinationArchiveFileName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "在<code> sourceDirectoryName </code>或<code> destinationArchiveFileName </code>，指定的路徑、 檔案名稱，或兩者都超出系統定義的長度上限。 例如，windows 平台上，路徑不能超過 248 個字元，和檔案名稱不能超過 260 個字元。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "<code>sourceDirectoryName</code>無效或不存在 （例如，它位於未對應的磁碟機上）。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<code>destinationArchiveFileName</code>已經存在。       -或者-無法開啟指定的目錄中的檔案。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>destinationArchiveFileName</code>指定的目錄。       -或-呼叫端沒有必要的權限來存取指定的目錄<code>sourceDirectoryName</code>中指定的檔案或<code>destinationArchiveFileName</code>。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>sourceDirectoryName</code>或<code>destinationArchiveFileName</code>包含無效的格式。       -或者-zip 封存中不支援寫入。"
  platform:
  - net462
- uid: System.IO.Compression.ZipFile.ExtractToDirectory(System.String,System.String)
  id: ExtractToDirectory(System.String,System.String)
  parent: System.IO.Compression.ZipFile
  langs:
  - csharp
  name: ExtractToDirectory(String,String)
  nameWithType: ZipFile.ExtractToDirectory(String,String)
  fullName: System.IO.Compression.ZipFile.ExtractToDirectory(String,String)
  type: Method
  assemblies:
  - System.IO.Compression.FileSystem
  namespace: System.IO.Compression
  summary: "所有檔案都解壓縮在指定之 zip 封存的目錄中檔案系統上。"
  remarks: "這個方法會建立指定的目錄和所有子目錄。 目的地目錄不存在。 驗證中的路徑與相關的例外狀況`destinationDirectoryName`或`sourceArchiveFileName`參數擷取之前就會擲回。 否則，如果在擷取期間發生錯誤，封存會維持部分擷取。 每個已解壓縮的檔案具有相同的相對路徑，以指定的目錄`destinationDirectoryName`作為其來源項目都有封存的根目錄。"
  example:
  - "This example shows how to create and extract a zip archive by using the <xref:System.IO.Compression.ZipFile> class. It compresses the contents of a folder into a zip archive and extracts that content to a new folder. To use the <xref:System.IO.Compression.ZipFile> class, you must reference the `System.IO.Compression.FileSystem` assembly in your project.  \n  \n [!code-cs[System.IO.Compression.ZipFile#1](~/add/codesnippet/csharp/m-system.io.compression._5_1.cs)]\n [!code-vb[System.IO.Compression.ZipFile#1](~/add/codesnippet/visualbasic/m-system.io.compression._5_1.vb)]"
  syntax:
    content: public static void ExtractToDirectory (string sourceArchiveFileName, string destinationDirectoryName);
    parameters:
    - id: sourceArchiveFileName
      type: System.String
      description: "要擷取之封存的路徑。"
    - id: destinationDirectoryName
      type: System.String
      description: "若要在其中放置解壓縮的檔案，指定為相對或絕對路徑的目錄路徑。 相對路徑會解譯為與目前工作目錄中。"
  overload: System.IO.Compression.ZipFile.ExtractToDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>destinationDirectoryName</code>或<code>sourceArchiveFileName</code>是<xref:System.String>、 只包含空格，或包含至少一個無效字元。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationDirectoryName</code>or <code>sourceArchiveFileName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "中指定的路徑<code> destinationDirectoryName </code>或<code> sourceArchiveFileName </code>超過系統定義的長度上限。 例如，windows 平台上，路徑不能超過 248 個字元，和檔案名稱不能超過 260 個字元。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "指定的路徑無效 （例如，它位於未對應的磁碟機上）。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "所指定的目錄<code> destinationDirectoryName </code>已經存在。       -或-封存中項目的名稱是<xref:System.String>、 只包含空格，或包含至少一個無效字元。</xref:System.String>       -或-解壓縮封存項目會建立檔案所指定的目錄之外的<code> destinationDirectoryName </code>。 （例如，這可能是因為項目名稱包含上層目錄存取子。）      -或者-解壓縮的封存項目已從相同的封存已擷取的項目相同的名稱。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "呼叫端沒有必要的權限來存取封存 」 或 「 目的地目錄。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>destinationDirectoryName</code>或<code>sourceArchiveFileName</code>包含無效的格式。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "<code>sourceArchiveFileName</code>找不到。"
  - type: System.IO.InvalidDataException
    commentId: T:System.IO.InvalidDataException
    description: "所指定的封存<code> sourceArchiveFileName </code>不是有效的 zip 封存。       -或者-封存項目找不到或已損毀。       -或者-封存項目使用不支援的壓縮方法進行壓縮。"
  platform:
  - net462
- uid: System.IO.Compression.ZipFile.ExtractToDirectory(System.String,System.String,System.Text.Encoding)
  id: ExtractToDirectory(System.String,System.String,System.Text.Encoding)
  parent: System.IO.Compression.ZipFile
  langs:
  - csharp
  name: ExtractToDirectory(String,String,Encoding)
  nameWithType: ZipFile.ExtractToDirectory(String,String,Encoding)
  fullName: System.IO.Compression.ZipFile.ExtractToDirectory(String,String,Encoding)
  type: Method
  assemblies:
  - System.IO.Compression.FileSystem
  namespace: System.IO.Compression
  summary: "所有檔案都解壓縮在指定之 zip 封存的目錄中檔案系統上，並使用指定的字元編碼的項目名稱。"
  remarks: "這個方法會建立指定的目錄和所有子目錄。 目的地目錄不存在。 驗證中的路徑與相關的例外狀況`destinationDirectoryName`或`sourceArchiveFileName`參數擷取之前就會擲回。 否則，如果在擷取期間發生錯誤，封存會維持部分擷取。 每個已解壓縮的檔案具有相同的相對路徑，以指定的目錄`destinationDirectoryName`作為其來源項目都有封存的根目錄。       如果`entryNameEncoding`以外設定為值`null`，項目名稱解碼根據下列規則:-如果要讓項目名稱，其中的語言編碼旗標 （以本機檔案標頭的一般用途的位元旗標） 未設定，使用指定的編碼名稱解碼的項目。      -針對設有語言編碼旗標的項目，項目名稱會使用 utf-8 解碼。       如果`entryNameEncoding`設`null`，項目名稱解碼根據下列規則:-如果要讓項目位置的語言編碼旗標 （以本機檔案標頭的一般用途的位元旗標） 未設定，名稱解碼使用目前的系統預設字碼頁的項目。      -針對設有語言編碼旗標的項目，項目名稱會使用 utf-8 解碼。"
  syntax:
    content: public static void ExtractToDirectory (string sourceArchiveFileName, string destinationDirectoryName, System.Text.Encoding entryNameEncoding);
    parameters:
    - id: sourceArchiveFileName
      type: System.String
      description: "要擷取之封存的路徑。"
    - id: destinationDirectoryName
      type: System.String
      description: "若要在其中放置解壓縮的檔案，指定為相對或絕對路徑的目錄路徑。 相對路徑會解譯為與目前工作目錄中。"
    - id: entryNameEncoding
      type: System.Text.Encoding
      description: "讀取時所使用的編碼方式，或寫入此封存中的項目名稱。 編碼方式，是為了互通性與 zip 封存工具和程式庫不支援 utf-8 編碼的項目名稱時，才指定這個參數的值。"
  overload: System.IO.Compression.ZipFile.ExtractToDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>destinationDirectoryName</code>或<code>sourceArchiveFileName</code>是<xref:System.String>、 只包含空格，或包含至少一個無效字元。       -或-<code>entryNameEncoding</code>設定為 unicode 的編碼方式 utf-8 以外。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationDirectoryName</code>or <code>sourceArchiveFileName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "中指定的路徑<code> destinationDirectoryName </code>或<code> sourceArchiveFileName </code>超過系統定義的長度上限。 例如，windows 平台上，路徑不能超過 248 個字元，和檔案名稱不能超過 260 個字元。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "指定的路徑無效 （例如，它位於未對應的磁碟機上）。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "所指定的目錄<code> destinationDirectoryName </code>已經存在。       -或-封存中項目的名稱是<xref:System.String>、 只包含空格，或包含至少一個無效字元。</xref:System.String>       -或-解壓縮封存項目會建立檔案所指定的目錄之外的<code> destinationDirectoryName </code>。 （例如，這可能是因為項目名稱包含上層目錄存取子。）      -或者-解壓縮的封存項目已從相同的封存已擷取的項目相同的名稱。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "呼叫端沒有必要的權限來存取封存 」 或 「 目的地目錄。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>destinationDirectoryName</code>或<code>sourceArchiveFileName</code>包含無效的格式。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "<code>sourceArchiveFileName</code>找不到。"
  - type: System.IO.InvalidDataException
    commentId: T:System.IO.InvalidDataException
    description: "所指定的封存<code> sourceArchiveFileName </code>不是有效的 zip 封存。       -或者-封存項目找不到或已損毀。       -或者-封存項目使用不支援的壓縮方法進行壓縮。"
  platform:
  - net462
- uid: System.IO.Compression.ZipFile.Open(System.String,System.IO.Compression.ZipArchiveMode)
  id: Open(System.String,System.IO.Compression.ZipArchiveMode)
  parent: System.IO.Compression.ZipFile
  langs:
  - csharp
  name: Open(String,ZipArchiveMode)
  nameWithType: ZipFile.Open(String,ZipArchiveMode)
  fullName: System.IO.Compression.ZipFile.Open(String,ZipArchiveMode)
  type: Method
  assemblies:
  - System.IO.Compression.FileSystem
  namespace: System.IO.Compression
  summary: "開啟位於指定路徑和指定的模式中的 zip 封存。"
  remarks: "當您將`mode`參數<xref:System.IO.Compression.ZipArchiveMode>，封存會以開啟<xref:System.IO.FileMode>從<xref:System.IO.FileMode>列舉型別做為檔案模式的值。</xref:System.IO.FileMode> </xref:System.IO.FileMode> </xref:System.IO.Compression.ZipArchiveMode> 如果封存不存在，<xref:System.IO.FileNotFoundException>擲回例外狀況。</xref:System.IO.FileNotFoundException> 設定`mode`參數<xref:System.IO.Compression.ZipArchiveMode>就相當於呼叫<xref:System.IO.Compression.ZipFile.OpenRead%2A>方法。</xref:System.IO.Compression.ZipFile.OpenRead%2A> </xref:System.IO.Compression.ZipArchiveMode>       當您將`mode`參數<xref:System.IO.Compression.ZipArchiveMode>，封存會以開啟<xref:System.IO.FileMode?displayProperty=fullName>做為檔案模式的值。</xref:System.IO.FileMode?displayProperty=fullName> </xref:System.IO.Compression.ZipArchiveMode> 如果封存已存在，<xref:System.IO.IOException>就會擲回。</xref:System.IO.IOException>       當您將`mode`參數<xref:System.IO.Compression.ZipArchiveMode>，封存會以開啟<xref:System.IO.FileMode?displayProperty=fullName>做為檔案模式的值。</xref:System.IO.FileMode?displayProperty=fullName> </xref:System.IO.Compression.ZipArchiveMode> 如果封存已存在，會將它開啟。 您可以修改現有的項目，且無法建立新的項目。 如果封存不存在，會建立新的封存。不過，建立 zip 封存中的<xref:System.IO.Compression.ZipArchiveMode>模式不是建立在效率<xref:System.IO.Compression.ZipArchiveMode>模式。</xref:System.IO.Compression.ZipArchiveMode> </xref:System.IO.Compression.ZipArchiveMode>"
  example:
  - "The following example shows how to open a zip archive in the update mode and add an entry to the archive.  \n  \n [!code-cs[System.IO.Compression.ZipArchive#3](~/add/codesnippet/csharp/7e49a288-de57-4354-b009-_1.cs)]\n [!code-vb[System.IO.Compression.ZipArchive#3](~/add/codesnippet/visualbasic/7e49a288-de57-4354-b009-_1.vb)]"
  syntax:
    content: public static System.IO.Compression.ZipArchive Open (string archiveFileName, System.IO.Compression.ZipArchiveMode mode);
    parameters:
    - id: archiveFileName
      type: System.String
      description: "若要開啟，封存的路徑指定為相對或絕對路徑。 相對路徑會解譯為與目前工作目錄中。"
    - id: mode
      type: System.IO.Compression.ZipArchiveMode
      description: "其中一個列舉值，指定開啟的封存檔中的項目上所允許的動作。"
    return:
      type: System.IO.Compression.ZipArchive
      description: "開啟的 zip 封存。"
  overload: System.IO.Compression.ZipFile.Open*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>archiveFileName</code>是<xref:System.String>、 只包含空格，或包含至少一個無效字元。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>archiveFileName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "在<code> archiveFileName </code>，指定的路徑、 檔案名稱，或兩者都超出系統定義的長度上限。 例如，windows 平台上，路徑不能超過 248 個字元，和檔案名稱不能超過 260 個字元。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "<code>archiveFileName</code>無效或不存在 （例如，它位於未對應的磁碟機上）。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<code>archiveFileName</code>無法開啟。       -<code>mode</code>設<xref href=&quot;System.IO.Compression.ZipArchiveMode&quot;> </xref>，但檔案中指定<code>archiveFileName</code>已經存在。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>archiveFileName</code>指定的目錄。       -或-呼叫端沒有必要的權限存取檔案中指定<code>archiveFileName</code>。"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>mode</code>指定無效的值。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "<code>mode</code>設定為<xref href=&quot;System.IO.Compression.ZipArchiveMode&quot;> </xref>，但檔案中指定<code>archiveFileName</code>找不到。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>archiveFileName</code>包含無效的格式。"
  - type: System.IO.InvalidDataException
    commentId: T:System.IO.InvalidDataException
    description: "<code>archiveFileName</code>無法解譯的 zip 封存。       -<code>mode</code>是<xref href=&quot;System.IO.Compression.ZipArchiveMode&quot;> </xref>，但項目遺失或損毀，而且無法讀取。       -<code>mode</code>是<xref href=&quot;System.IO.Compression.ZipArchiveMode&quot;> </xref>，但是項目太大而無法放入記憶體。"
  platform:
  - net462
- uid: System.IO.Compression.ZipFile.Open(System.String,System.IO.Compression.ZipArchiveMode,System.Text.Encoding)
  id: Open(System.String,System.IO.Compression.ZipArchiveMode,System.Text.Encoding)
  parent: System.IO.Compression.ZipFile
  langs:
  - csharp
  name: Open(String,ZipArchiveMode,Encoding)
  nameWithType: ZipFile.Open(String,ZipArchiveMode,Encoding)
  fullName: System.IO.Compression.ZipFile.Open(String,ZipArchiveMode,Encoding)
  type: Method
  assemblies:
  - System.IO.Compression.FileSystem
  namespace: System.IO.Compression
  summary: "指定的模式，並使用指定的字元編碼的項目名稱，請開啟位於指定路徑的 zip 封存。"
  remarks: "當您將`mode`參數<xref:System.IO.Compression.ZipArchiveMode>，封存會以開啟<xref:System.IO.FileMode?displayProperty=fullName>做為檔案模式的值。</xref:System.IO.FileMode?displayProperty=fullName> </xref:System.IO.Compression.ZipArchiveMode> 如果封存不存在，<xref:System.IO.FileNotFoundException>擲回例外狀況。</xref:System.IO.FileNotFoundException> 設定`mode`參數<xref:System.IO.Compression.ZipArchiveMode>就相當於呼叫<xref:System.IO.Compression.ZipFile.OpenRead%2A>方法。</xref:System.IO.Compression.ZipFile.OpenRead%2A> </xref:System.IO.Compression.ZipArchiveMode>       當您將`mode`參數<xref:System.IO.Compression.ZipArchiveMode>，封存會以開啟<xref:System.IO.FileMode?displayProperty=fullName>做為檔案模式的值。</xref:System.IO.FileMode?displayProperty=fullName> </xref:System.IO.Compression.ZipArchiveMode> 如果封存已存在，<xref:System.IO.IOException>就會擲回。</xref:System.IO.IOException>       當您將`mode`參數<xref:System.IO.Compression.ZipArchiveMode>，封存會以開啟<xref:System.IO.FileMode?displayProperty=fullName>做為檔案模式的值。</xref:System.IO.FileMode?displayProperty=fullName> </xref:System.IO.Compression.ZipArchiveMode> 如果封存已存在，會將它開啟。 您可以修改現有的項目，且無法建立新的項目。 如果封存不存在，會建立新的封存。不過，建立 zip 封存中的<xref:System.IO.Compression.ZipArchiveMode>模式不是建立在效率<xref:System.IO.Compression.ZipArchiveMode>模式。</xref:System.IO.Compression.ZipArchiveMode> </xref:System.IO.Compression.ZipArchiveMode>       當您開啟 zip 封存檔案進行讀取和`entryNameEncoding`設`null`，項目名稱解碼根據下列規則:-時未設定 （以本機檔案標頭的一般用途的位元旗標） 編碼的旗標，目前的系統預設字碼頁的語言用來解碼的項目名稱。      -當設定的語言編碼旗標，來解碼的項目名稱使用 utf-8。       當您開啟 zip 封存檔案進行讀取和`entryNameEncoding`以外設定為值`null`，項目名稱解碼根據下列規則:-的語言編碼旗標未設定時，指定`entryNameEncoding`用來解碼的項目名稱。      -當設定的語言編碼旗標，來解碼的項目名稱使用 utf-8。       當您撰寫封存檔案和`entryNameEncoding`設`null`，項目名稱會編碼根據下列規則:-項目名稱中包含外部 ASCII 字元範圍的語言設定編碼方式的旗標，並使用 utf-8 編碼項目名稱。      -若為項目只能包含 ASCII 字元的名稱，未設定的語言編碼旗標，並使用目前的系統預設字碼頁來進行編碼的項目名稱。       當您撰寫封存檔案和`entryNameEncoding`以外設定為值`null`，指定`entryNameEncoding`用來編碼為位元組的項目名稱。 只有當指定的編碼方式為 utf-8 編碼時設定的語言編碼旗標 （以本機檔案標頭的一般用途的位元旗標）。"
  syntax:
    content: public static System.IO.Compression.ZipArchive Open (string archiveFileName, System.IO.Compression.ZipArchiveMode mode, System.Text.Encoding entryNameEncoding);
    parameters:
    - id: archiveFileName
      type: System.String
      description: "若要開啟，封存的路徑指定為相對或絕對路徑。 相對路徑會解譯為與目前工作目錄中。"
    - id: mode
      type: System.IO.Compression.ZipArchiveMode
      description: "其中一個列舉值，指定開啟的封存檔中的項目上所允許的動作。"
    - id: entryNameEncoding
      type: System.Text.Encoding
      description: "讀取時所使用的編碼方式，或寫入此封存中的項目名稱。 編碼方式，是為了互通性與 zip 封存工具和程式庫不支援 utf-8 編碼的項目名稱時，才指定這個參數的值。"
    return:
      type: System.IO.Compression.ZipArchive
      description: "開啟的 zip 封存。"
  overload: System.IO.Compression.ZipFile.Open*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>archiveFileName</code>是<xref:System.String>、 只包含空格，或包含至少一個無效字元。       -或-<code>entryNameEncoding</code>設定為 unicode 的編碼方式 utf-8 以外。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>archiveFileName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "在<code> archiveFileName </code>，指定的路徑、 檔案名稱，或兩者都超出系統定義的長度上限。 例如，windows 平台上，路徑不能超過 248 個字元，和檔案名稱不能超過 260 個字元。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "<code>archiveFileName</code>無效或不存在 （例如，它位於未對應的磁碟機上）。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<code>archiveFileName</code>無法開啟。       -<code>mode</code>設<xref href=&quot;System.IO.Compression.ZipArchiveMode&quot;> </xref>，但檔案中指定<code>archiveFileName</code>已經存在。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>archiveFileName</code>指定的目錄。       -或-呼叫端沒有必要的權限存取檔案中指定<code>archiveFileName</code>。"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>mode</code>指定無效的值。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "<code>mode</code>設定為<xref href=&quot;System.IO.Compression.ZipArchiveMode&quot;> </xref>，但檔案中指定<code>archiveFileName</code>找不到。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>archiveFileName</code>包含無效的格式。"
  - type: System.IO.InvalidDataException
    commentId: T:System.IO.InvalidDataException
    description: "<code>archiveFileName</code>無法解譯的 zip 封存。       -<code>mode</code>是<xref href=&quot;System.IO.Compression.ZipArchiveMode&quot;> </xref>，但項目遺失或損毀，而且無法讀取。       -<code>mode</code>是<xref href=&quot;System.IO.Compression.ZipArchiveMode&quot;> </xref>，但是項目太大而無法放入記憶體。"
  platform:
  - net462
- uid: System.IO.Compression.ZipFile.OpenRead(System.String)
  id: OpenRead(System.String)
  parent: System.IO.Compression.ZipFile
  langs:
  - csharp
  name: OpenRead(String)
  nameWithType: ZipFile.OpenRead(String)
  fullName: System.IO.Compression.ZipFile.OpenRead(String)
  type: Method
  assemblies:
  - System.IO.Compression.FileSystem
  namespace: System.IO.Compression
  summary: "開啟 zip 封存以讀取在指定的路徑。"
  remarks: "這個方法相當於呼叫<xref:System.IO.Compression.ZipFile.Open%2A>方法，並設定`mode`參數至<xref:System.IO.Compression.ZipArchiveMode>。</xref:System.IO.Compression.ZipArchiveMode> </xref:System.IO.Compression.ZipFile.Open%2A> 封存使用開啟<xref:System.IO.FileMode?displayProperty=fullName>做為檔案模式的值。</xref:System.IO.FileMode?displayProperty=fullName> 如果封存不存在，<xref:System.IO.FileNotFoundException>擲回例外狀況。</xref:System.IO.FileNotFoundException>"
  example:
  - "The following example shows how to open a zip archive for reading.  \n  \n [!code-cs[System.IO.Compression.ZipArchive#1](~/add/codesnippet/csharp/m-system.io.compression._2_1.cs)]\n [!code-vb[System.IO.Compression.ZipArchive#1](~/add/codesnippet/visualbasic/m-system.io.compression._2_1.vb)]"
  syntax:
    content: public static System.IO.Compression.ZipArchive OpenRead (string archiveFileName);
    parameters:
    - id: archiveFileName
      type: System.String
      description: "若要開啟，封存的路徑指定為相對或絕對路徑。 相對路徑會解譯為與目前工作目錄中。"
    return:
      type: System.IO.Compression.ZipArchive
      description: "開啟的 zip 封存。"
  overload: System.IO.Compression.ZipFile.OpenRead*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>archiveFileName</code>是<xref:System.String>、 只包含空格，或包含至少一個無效字元。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>archiveFileName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "在<code> archiveFileName </code>，指定的路徑、 檔案名稱，或兩者都超出系統定義的長度上限。 例如，windows 平台上，路徑不能超過 248 個字元，和檔案名稱不能超過 260 個字元。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "<code>archiveFileName</code>無效或不存在 （例如，它位於未對應的磁碟機上）。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<code>archiveFileName</code>無法開啟。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>archiveFileName</code>指定的目錄。       -或-呼叫端沒有必要的權限存取檔案中指定<code>archiveFileName</code>。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "中指定的檔案<code> archiveFileName </code>找不到。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>archiveFileName</code>包含無效的格式。"
  - type: System.IO.InvalidDataException
    commentId: T:System.IO.InvalidDataException
    description: "<code>archiveFileName</code>無法解譯的 zip 封存。"
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.IO.PathTooLongException
  isExternal: true
  name: System.IO.PathTooLongException
- uid: System.IO.DirectoryNotFoundException
  isExternal: true
  name: System.IO.DirectoryNotFoundException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.UnauthorizedAccessException
  isExternal: true
  name: System.UnauthorizedAccessException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.IO.FileNotFoundException
  isExternal: true
  name: System.IO.FileNotFoundException
- uid: System.IO.InvalidDataException
  isExternal: true
  name: System.IO.InvalidDataException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.IO.Compression.ZipFile.CreateFromDirectory(System.String,System.String)
  parent: System.IO.Compression.ZipFile
  isExternal: false
  name: CreateFromDirectory(String,String)
  nameWithType: ZipFile.CreateFromDirectory(String,String)
  fullName: System.IO.Compression.ZipFile.CreateFromDirectory(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.Compression.ZipFile.CreateFromDirectory(System.String,System.String,System.IO.Compression.CompressionLevel,System.Boolean)
  parent: System.IO.Compression.ZipFile
  isExternal: false
  name: CreateFromDirectory(String,String,CompressionLevel,Boolean)
  nameWithType: ZipFile.CreateFromDirectory(String,String,CompressionLevel,Boolean)
  fullName: System.IO.Compression.ZipFile.CreateFromDirectory(String,String,CompressionLevel,Boolean)
- uid: System.IO.Compression.CompressionLevel
  parent: System.IO.Compression
  isExternal: true
  name: CompressionLevel
  nameWithType: CompressionLevel
  fullName: System.IO.Compression.CompressionLevel
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IO.Compression.ZipFile.CreateFromDirectory(System.String,System.String,System.IO.Compression.CompressionLevel,System.Boolean,System.Text.Encoding)
  parent: System.IO.Compression.ZipFile
  isExternal: false
  name: CreateFromDirectory(String,String,CompressionLevel,Boolean,Encoding)
  nameWithType: ZipFile.CreateFromDirectory(String,String,CompressionLevel,Boolean,Encoding)
  fullName: System.IO.Compression.ZipFile.CreateFromDirectory(String,String,CompressionLevel,Boolean,Encoding)
- uid: System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: System.IO.Compression.ZipFile.ExtractToDirectory(System.String,System.String)
  parent: System.IO.Compression.ZipFile
  isExternal: false
  name: ExtractToDirectory(String,String)
  nameWithType: ZipFile.ExtractToDirectory(String,String)
  fullName: System.IO.Compression.ZipFile.ExtractToDirectory(String,String)
- uid: System.IO.Compression.ZipFile.ExtractToDirectory(System.String,System.String,System.Text.Encoding)
  parent: System.IO.Compression.ZipFile
  isExternal: false
  name: ExtractToDirectory(String,String,Encoding)
  nameWithType: ZipFile.ExtractToDirectory(String,String,Encoding)
  fullName: System.IO.Compression.ZipFile.ExtractToDirectory(String,String,Encoding)
- uid: System.IO.Compression.ZipFile.Open(System.String,System.IO.Compression.ZipArchiveMode)
  parent: System.IO.Compression.ZipFile
  isExternal: false
  name: Open(String,ZipArchiveMode)
  nameWithType: ZipFile.Open(String,ZipArchiveMode)
  fullName: System.IO.Compression.ZipFile.Open(String,ZipArchiveMode)
- uid: System.IO.Compression.ZipArchive
  parent: System.IO.Compression
  isExternal: false
  name: ZipArchive
  nameWithType: ZipArchive
  fullName: System.IO.Compression.ZipArchive
- uid: System.IO.Compression.ZipArchiveMode
  parent: System.IO.Compression
  isExternal: false
  name: ZipArchiveMode
  nameWithType: ZipArchiveMode
  fullName: System.IO.Compression.ZipArchiveMode
- uid: System.IO.Compression.ZipFile.Open(System.String,System.IO.Compression.ZipArchiveMode,System.Text.Encoding)
  parent: System.IO.Compression.ZipFile
  isExternal: false
  name: Open(String,ZipArchiveMode,Encoding)
  nameWithType: ZipFile.Open(String,ZipArchiveMode,Encoding)
  fullName: System.IO.Compression.ZipFile.Open(String,ZipArchiveMode,Encoding)
- uid: System.IO.Compression.ZipFile.OpenRead(System.String)
  parent: System.IO.Compression.ZipFile
  isExternal: false
  name: OpenRead(String)
  nameWithType: ZipFile.OpenRead(String)
  fullName: System.IO.Compression.ZipFile.OpenRead(String)
- uid: System.IO.Compression.ZipFile.CreateFromDirectory*
  parent: System.IO.Compression.ZipFile
  isExternal: false
  name: CreateFromDirectory
  nameWithType: ZipFile.CreateFromDirectory
- uid: System.IO.Compression.ZipFile.ExtractToDirectory*
  parent: System.IO.Compression.ZipFile
  isExternal: false
  name: ExtractToDirectory
  nameWithType: ZipFile.ExtractToDirectory
- uid: System.IO.Compression.ZipFile.Open*
  parent: System.IO.Compression.ZipFile
  isExternal: false
  name: Open
  nameWithType: ZipFile.Open
- uid: System.IO.Compression.ZipFile.OpenRead*
  parent: System.IO.Compression.ZipFile
  isExternal: false
  name: OpenRead
  nameWithType: ZipFile.OpenRead
