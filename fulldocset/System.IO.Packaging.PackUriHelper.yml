### YamlMime:ManagedReference
items:
- uid: System.IO.Packaging.PackUriHelper
  id: PackUriHelper
  children:
  - System.IO.Packaging.PackUriHelper.ComparePackUri(System.Uri,System.Uri)
  - System.IO.Packaging.PackUriHelper.ComparePartUri(System.Uri,System.Uri)
  - System.IO.Packaging.PackUriHelper.Create(System.Uri)
  - System.IO.Packaging.PackUriHelper.Create(System.Uri,System.Uri)
  - System.IO.Packaging.PackUriHelper.Create(System.Uri,System.Uri,System.String)
  - System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)
  - System.IO.Packaging.PackUriHelper.GetNormalizedPartUri(System.Uri)
  - System.IO.Packaging.PackUriHelper.GetPackageUri(System.Uri)
  - System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)
  - System.IO.Packaging.PackUriHelper.GetRelationshipPartUri(System.Uri)
  - System.IO.Packaging.PackUriHelper.GetRelativeUri(System.Uri,System.Uri)
  - System.IO.Packaging.PackUriHelper.GetSourcePartUriFromRelationshipPartUri(System.Uri)
  - System.IO.Packaging.PackUriHelper.IsRelationshipPartUri(System.Uri)
  - System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)
  - System.IO.Packaging.PackUriHelper.UriSchemePack
  langs:
  - csharp
  name: PackUriHelper
  nameWithType: PackUriHelper
  fullName: System.IO.Packaging.PackUriHelper
  type: Class
  summary: "提供公用程式方法來撰寫和剖析 pack URI 物件。"
  syntax:
    content: public static class PackUriHelper
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IO.Packaging.PackUriHelper.ComparePackUri(System.Uri,System.Uri)
  id: ComparePackUri(System.Uri,System.Uri)
  parent: System.IO.Packaging.PackUriHelper
  langs:
  - csharp
  name: ComparePackUri(Uri,Uri)
  nameWithType: PackUriHelper.ComparePackUri(Uri,Uri)
  fullName: System.IO.Packaging.PackUriHelper.ComparePackUri(Uri,Uri)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "傳回值，指出是否兩個 pack Uri 是相等的。"
  remarks: "如果兩個`firstPackUri`和`secondPackUri`是`null`，ComparePackUri 傳回 0。 比較封包 Uri，空值 URI 一律是小於非空值 URI。    案例其中`firstPackUri`和`secondPackUri`是絕對的這兩組件的 Uri，ComparePackUri 執行比較。"
  syntax:
    content: public static int ComparePackUri (Uri firstPackUri, Uri secondPackUri);
    parameters:
    - id: firstPackUri
      type: System.Uri
      description: "第一個 pack URI。"
    - id: secondPackUri
      type: System.Uri
      description: "第二個 pack URI。"
    return:
      type: System.Int32
      description: "帶正負號的整數，表示之間的關聯性<code> firstPackUri </code>和<code> secondPackUri </code>。       <table><thead><tr><th> 值       </th><th> 意義       </th></tr></thead><tbody><tr><td> 小於 0       </td><td><code>firstPackUri</code>is less than <code>secondPackUri</code>.       </td></tr><tr><td> 0       </td><td><code>firstPackUri</code>相當於<code> secondPackUri </code>。       </td></tr><tr><td> 大於 0       </td><td><code>firstPackUri</code>大於<code> secondPackUri </code>。       </td></tr></tbody></table>"
  overload: System.IO.Packaging.PackUriHelper.ComparePackUri*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Either <code>firstPackUri</code> or <code>secondPackUri</code> is not an absolute [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)].       -或-任一<code> firstPackUri </code>或<code> secondPackUri </code>開頭不是 「 組件: / /&quot;配置。"
  platform:
  - net462
- uid: System.IO.Packaging.PackUriHelper.ComparePartUri(System.Uri,System.Uri)
  id: ComparePartUri(System.Uri,System.Uri)
  parent: System.IO.Packaging.PackUriHelper
  langs:
  - csharp
  name: ComparePartUri(Uri,Uri)
  nameWithType: PackUriHelper.ComparePartUri(Uri,Uri)
  fullName: System.IO.Packaging.PackUriHelper.ComparePartUri(Uri,Uri)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "傳回值，指出是否兩個封裝組件[!INCLUDE[TLA2#tla_uri#plural](~/add/includes/tla2sharptla-urisharpplural-md.md)]相等。"
  remarks: "如果兩個`firstPartUri`和`secondPartUri`是`null`，ComparePartUri 傳回 0。 比較時<xref:System.IO.Packaging.PackagePart>[!INCLUDE[TLA2#tla_uri#plural](~/add/includes/tla2sharptla-urisharpplural-md.md)]，null[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]一律為非 null 值大於或等於[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]。</xref:System.IO.Packaging.PackagePart> 案例其中`firstPartUri`和`secondPartUri`都相對<xref:System.IO.Packaging.PackagePart>Uri、 ComparePartUri 執行比較。</xref:System.IO.Packaging.PackagePart>"
  syntax:
    content: public static int ComparePartUri (Uri firstPartUri, Uri secondPartUri);
    parameters:
    - id: firstPartUri
      type: System.Uri
      description: "[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]的第一個<xref href=&quot;System.IO.Packaging.PackagePart&quot;> </xref>。"
    - id: secondPartUri
      type: System.Uri
      description: "[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]第二個<xref href=&quot;System.IO.Packaging.PackagePart&quot;> </xref>。"
    return:
      type: System.Int32
      description: "值，指出之間的關聯性<code> firstPartUri </code>和<code> secondPartUri </code>。       <table><thead><tr><th> 值       </th><th> 意義       </th></tr></thead><tbody><tr><td> 小於 0       </td><td><code>firstPartUri</code>is less than <code>secondPartUri</code>.       </td></tr><tr><td> 0       </td><td><code>firstPartUri</code>相當於<code> secondPartUri </code>。       </td></tr><tr><td> 大於 0       </td><td><code>firstPartUri</code>大於<code> secondPartUri </code>。       </td></tr></tbody></table>"
  overload: System.IO.Packaging.PackUriHelper.ComparePartUri*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>firstPartUri</code>或<code>secondPartUri</code>不是有效的組件[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]語法。"
  platform:
  - net462
- uid: System.IO.Packaging.PackUriHelper.Create(System.Uri)
  id: Create(System.Uri)
  parent: System.IO.Packaging.PackUriHelper
  langs:
  - csharp
  name: Create(Uri)
  nameWithType: PackUriHelper.Create(Uri)
  fullName: System.IO.Packaging.PackUriHelper.Create(Uri)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "建立新的組件指向封裝 URI。"
  remarks: "`packageUri`未指定為`null`或空白。       下表說明用於建立的範例案例。      |`packageUri`|傳回組件 URI |  |------------------|-----------------------|  | http://www.proseware.com/mypackage.pkg | pack://http:、 www.proseware.com、 mypackage.pkg|  | ftp://ftp.proseware.com/packages/mypackage1.abc | pack://ftp:、 ftp.proseware.com,packages,mypackage1.abc|  |file:///d:/packages/mypackage2.pkg| pack://file:、、 d:,packages,mypackage2.pkg|      撰寫的組件的 URI 是多重步驟的程序。  例如，形成 URI 的組件的其中一個步驟是取代的正斜線 （/） 字元`packageUri`使用逗號 （，）。       如需有關字串轉換和封包 Uri 的形成方式的詳細資訊，請參閱附錄 A.4 「 字串轉換範例 」 和附錄 B.3&quot;撰寫組件 URI&quot;下載開放式封裝慣例規格中[規格和授權下載](http://go.microsoft.com/fwlink/?LinkID=71255)。"
  example:
  - "The following example shows how to use the Create method to define a pack URI that references a package.  \n  \n [!code-vb[RightsManagedPackagePublish#RmPkgPubGetFixDoc](~/add/codesnippet/visualbasic/rmpackagepublish/window1.xaml.vb#rmpkgpubgetfixdoc)]\n [!code-cs[RightsManagedPackagePublish#RmPkgPubGetFixDoc](~/add/codesnippet/csharp/RmPackagePublish/Window1.xaml.cs#rmpkgpubgetfixdoc)]"
  syntax:
    content: public static Uri Create (Uri packageUri);
    parameters:
    - id: packageUri
      type: System.Uri
      description: "所參考的 URI <xref href=&quot;System.IO.Packaging.Package&quot;> </xref>。"
    return:
      type: System.Uri
      description: "Pack URI 的<xref href=&quot;System.IO.Packaging.Package&quot;></xref>所參考給定<code> packageUri </code>。"
  overload: System.IO.Packaging.PackUriHelper.Create*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>packageUri</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>packageUri</code>不是絕對 URI。"
  platform:
  - net462
- uid: System.IO.Packaging.PackUriHelper.Create(System.Uri,System.Uri)
  id: Create(System.Uri,System.Uri)
  parent: System.IO.Packaging.PackUriHelper
  langs:
  - csharp
  name: Create(Uri,Uri)
  nameWithType: PackUriHelper.Create(Uri,Uri)
  fullName: System.IO.Packaging.PackUriHelper.Create(Uri,Uri)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "建立 pack URI 給定<xref href=&quot;System.IO.Packaging.Package&quot;> </xref> [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]和[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]封裝中的組件。"
  remarks: "`packageUri`不可以指定為 null 或空白。       如果`partUri`是`null`，傳回的 pack URI 指向封裝。       下表將說明建立方法的範例案例。      |`packageUri`|`partUri`|傳回組件 URI |  |------------------|---------------|-----------------------|  | http://www.proseware.com/mypackage.pkg |/page2.xaml| pack://http:、 www.proseware.com、 mypackage.pkg/page2.xaml|  | http://www.proseware.com/mypackage.pkg |/a/page4.xaml| pack://http:、 www.proseware.com、 mypackage.pkg/a/page4.xaml|  | http://www.proseware.com/mypackage.pkg |/%41/%61.xml| pack://http:、 www.proseware.com、 mypackage.pkg/A/a.xml|  | http://www.proseware.com/mypackage.pkg |/%25XY.xml| pack://http:、 www.proseware.com、 mypackage.pkg/%25XY.xml|  | http://www.proseware.com/mypackage.pkg |**null**| pack://http:、 www.proseware.com、 mypackage.pkg|  | ftp://ftp.proseware.com/packages/mypackage1.abc |/a/mydoc.xaml| pack://ftp:、 ftp.proseware.com,packages,mypackage1.abc/a/mydoc.xaml|  |file:///d:/packages/mypackage2.pkg|/a/bar.xaml| pack://file:、、 d:,packages,mypackage2.pkg/a/bar.xaml|      撰寫的組件的 URI 是多重步驟的程序。  例如，形成 URI 的組件的其中一個步驟是取代的正斜線 （/） 字元`packageUri`使用逗號 （，）。       如需有關字串轉換和封包 Uri 的形成方式的詳細資訊，請參閱附錄 A.4 「 字串轉換範例 」 和附錄 B.3&quot;撰寫組件 URI&quot;下載開放式封裝慣例規格中[規格和授權下載](http://go.microsoft.com/fwlink/?LinkID=71255)。"
  example:
  - "The following example shows how to use the <xref:System.IO.Packaging.PackUriHelper.Create%28System.Uri%29> method to define a pack URI that references a package.  \n  \n [!code-vb[RightsManagedPackagePublish#RmPkgPubGetFixDoc](~/add/codesnippet/visualbasic/rmpackagepublish/window1.xaml.vb#rmpkgpubgetfixdoc)]\n [!code-cs[RightsManagedPackagePublish#RmPkgPubGetFixDoc](~/add/codesnippet/csharp/RmPackagePublish/Window1.xaml.cs#rmpkgpubgetfixdoc)]"
  syntax:
    content: public static Uri Create (Uri packageUri, Uri partUri);
    parameters:
    - id: packageUri
      type: System.Uri
      description: "The [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] of the <xref href=&quot;System.IO.Packaging.Package&quot;></xref>."
    - id: partUri
      type: System.Uri
      description: "[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]的<xref href=&quot;System.IO.Packaging.PackagePart&quot;></xref>封裝中。"
    return:
      type: System.Uri
      description: "Pack URI 的給定<xref href=&quot;System.IO.Packaging.PackagePart&quot;> </xref>。"
  overload: System.IO.Packaging.PackUriHelper.Create*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>packageUri</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>packageUri</code>不是絕對 URI。       -或-<code>partUri</code>不是有效的組件 URI 語法。"
  platform:
  - net462
- uid: System.IO.Packaging.PackUriHelper.Create(System.Uri,System.Uri,System.String)
  id: Create(System.Uri,System.Uri,System.String)
  parent: System.IO.Packaging.PackUriHelper
  langs:
  - csharp
  name: Create(Uri,Uri,String)
  nameWithType: PackUriHelper.Create(Uri,Uri,String)
  fullName: System.IO.Packaging.PackUriHelper.Create(Uri,Uri,String)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "建立 pack URI 給定<xref href=&quot;System.IO.Packaging.Package&quot;> </xref> [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]、[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]的封裝，以及要附加的&quot;#&quot;片段中的組件。"
  remarks: "`packageUri`未指定為`null`或空白。       如果`partUri`是`null`，傳回的 pack URI 指向封裝。       `fragment`不能是空字串，但是可以指定為`null`。  當未指定為`null`、`fragment`字串必須以 &quot;#&quot; 字元開頭。  如需詳細資訊的語法`fragment`參考資料，請參閱 3.5 節 「 片段 」 的[RFC 3986](http://www.ietf.org/rfc/rfc3986.txt)。       下表將說明建立方法的範例案例。      |`packageUri`|`partUri`|`fragment`|傳回組件 URI |  |------------------|---------------|----------------|-----------------------|  | http://www.proseware.com/mypackage.pkg |/page1.xaml|#intro| pack://http:、 www.proseware.com、 mypackage.pkg/page1.xaml#intro|  | http://www.proseware.com/mypackage.pkg |/page2.xaml|**null**| pack://http:、 www.proseware.com、 mypackage.pkg/page2.xaml|  | http://www.proseware.com/mypackage.pkg |/a/page4.xaml|**null**| pack://http:、 www.proseware.com、 mypackage.pkg/a/page4.xaml|  | http://www.proseware.com/mypackage.pkg |/%41/%61.xml|**null**| pack://http:、 www.proseware.com、 mypackage.pkg/A/a.xml|  | http://www.proseware.com/mypackage.pkg |/%25XY.xml|**null**| pack://http:、 www.proseware.com、 mypackage.pkg/%25XY.xml|  | http://www.proseware.com/mypackage.pkg |/a/page5.xaml|#summary| pack://http:、 www.proseware.com、 mypackage.pkg/a/page5.xaml#summary|  | http://www.proseware.com/packages.aspx?pkg04 |/page1.xaml|#intro| pack://http:、 www.proseware.com、 packages.aspx%3fpkg04/page1.xaml#intro|  | http://www.proseware.com/mypackage.pkg |**null**|**null**| pack://http:、 www.proseware.com、 mypackage.pkg|  | ftp://ftp.proseware.com/packages/mypackage1.abc |/a/mydoc.xaml|**null**| pack://ftp:、 ftp.proseware.com,packages,mypackage1.abc/a/mydoc.xaml|  |file:///d:/packages/mypackage2.pkg|/a/bar.xaml|#xref| pack://file:、、 d:,packages,mypackage2.pkg/a/bar.xaml#xref|      撰寫的組件的 URI 是多重步驟的程序。  例如，形成 URI 的組件的其中一個步驟是取代的正斜線 （/） 字元`packageUri`使用逗號 （，）。       如需有關字串轉換和封包 Uri 的形成方式的詳細資訊，請參閱附錄 A.4 「 字串轉換範例 」 和附錄 B.3&quot;撰寫組件 URI&quot;下載開放式封裝慣例規格中[規格和授權下載](http://go.microsoft.com/fwlink/?LinkID=71255)。"
  example:
  - "The following example shows how to use the <xref:System.IO.Packaging.PackUriHelper.Create%28System.Uri%29> method to define a pack URI that references a package.  \n  \n [!code-vb[RightsManagedPackagePublish#RmPkgPubGetFixDoc](~/add/codesnippet/visualbasic/rmpackagepublish/window1.xaml.vb#rmpkgpubgetfixdoc)]\n [!code-cs[RightsManagedPackagePublish#RmPkgPubGetFixDoc](~/add/codesnippet/csharp/RmPackagePublish/Window1.xaml.cs#rmpkgpubgetfixdoc)]"
  syntax:
    content: public static Uri Create (Uri packageUri, Uri partUri, string fragment);
    parameters:
    - id: packageUri
      type: System.Uri
      description: "The [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] of the <xref href=&quot;System.IO.Packaging.Package&quot;></xref>."
    - id: partUri
      type: System.Uri
      description: "[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]的<xref href=&quot;System.IO.Packaging.PackagePart&quot;></xref>封裝中。"
    - id: fragment
      type: System.String
      description: "&quot;#&quot;參考，用來識別封裝組件內的項目。"
    return:
      type: System.Uri
      description: "組件識別指定的封裝、 封裝組件，以及片段的 URI。"
  overload: System.IO.Packaging.PackUriHelper.Create*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>packageUri</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>packageUri</code>不是絕對 URI。       -或-<code>partUri</code>不是有效的組件 URI 語法。       -或-<code>fragment</code>是空的或開頭並非&quot;#&quot;。"
  platform:
  - net462
- uid: System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)
  id: CreatePartUri(System.Uri)
  parent: System.IO.Packaging.PackUriHelper
  langs:
  - csharp
  name: CreatePartUri(Uri)
  nameWithType: PackUriHelper.CreatePartUri(Uri)
  fullName: System.IO.Packaging.PackUriHelper.CreatePartUri(Uri)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "建立格式化<xref href=&quot;System.IO.Packaging.PackagePart&quot;> </xref> URI。"
  remarks: "[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]的<xref:System.IO.Packaging.PackagePart>一律從參考<xref:System.IO.Packaging.Package>根。</xref:System.IO.Packaging.Package> </xref:System.IO.Packaging.PackagePart>       傳回<xref:System.IO.Packaging.PackagePart>URI 是絕對路徑的開頭一律&quot;/&quot;且符合定義的語法[開放式封裝慣例規格](http://go.microsoft.com/fwlink/?LinkID=71255)。</xref:System.IO.Packaging.PackagePart>       下表說明針對 CreatePartUri 的範例案例。      |`partUri`|傳回部分 URI |  |---------------|-----------------------|  |picture1.jpg|/picture1.jpg|  |/picture2.jpg|/picture2.jpg|  |a/mydoc.xaml|/a/mydoc.xaml|  |/b/bar.xaml|/b/bar.xaml|"
  example:
  - "The following example shows how to use the CreatePartUri method to define relative URIs for <xref:System.IO.Packaging.PackagePart> elements.  \n  \n [!code-vb[PackageWrite#PackageWriteCreatePartUri](~/add/codesnippet/visualbasic/packagewrite/packagewrite.vb#packagewritecreateparturi)]\n [!code-cs[PackageWrite#PackageWriteCreatePartUri](~/add/codesnippet/csharp/PackageWrite/PackageWrite.cs#packagewritecreateparturi)]"
  syntax:
    content: public static Uri CreatePartUri (Uri partUri);
    parameters:
    - id: partUri
      type: System.Uri
      description: "URI <xref href=&quot;System.IO.Packaging.PackagePart&quot;> </xref>封裝內。"
    return:
      type: System.Uri
      description: "格式化<xref href=&quot;System.IO.Packaging.PackagePart&quot;> </xref> URI。"
  overload: System.IO.Packaging.PackUriHelper.CreatePartUri*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.PackUriHelper.GetNormalizedPartUri(System.Uri)
  id: GetNormalizedPartUri(System.Uri)
  parent: System.IO.Packaging.PackUriHelper
  langs:
  - csharp
  name: GetNormalizedPartUri(Uri)
  nameWithType: PackUriHelper.GetNormalizedPartUri(Uri)
  fullName: System.IO.Packaging.PackUriHelper.GetNormalizedPartUri(Uri)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "傳回指定的正規化的形式<xref href=&quot;System.IO.Packaging.PackagePart&quot;> </xref> URI。"
  remarks: "GetNormalizedPartUri 正規化`partUri`由案例摺疊成大寫 (<xref:System.String.ToUpperInvariant%2A?displayProperty=fullName>)，並傳回結果。</xref:System.String.ToUpperInvariant%2A?displayProperty=fullName>"
  syntax:
    content: public static Uri GetNormalizedPartUri (Uri partUri);
    parameters:
    - id: partUri
      type: System.Uri
      description: "<xref href=&quot;System.IO.Packaging.PackagePart&quot;> </xref>正規化的 URI。"
    return:
      type: System.Uri
      description: "正規化的形式指定<code> partUri </code>。"
  overload: System.IO.Packaging.PackUriHelper.GetNormalizedPartUri*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>partUri</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IO.Packaging.PackUriHelper.GetPackageUri(System.Uri)
  id: GetPackageUri(System.Uri)
  parent: System.IO.Packaging.PackUriHelper
  langs:
  - csharp
  name: GetPackageUri(Uri)
  nameWithType: PackUriHelper.GetPackageUri(Uri)
  fullName: System.IO.Packaging.PackUriHelper.GetPackageUri(Uri)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "傳回指向指定 pack URI 整個封裝的內部 URI。"
  remarks: "下表說明針對 GetPackageUri 的範例案例。      |`packUri`|傳回封裝 URI |  |---------------|--------------------------|  | pack://http:、 www.proseware.com、 mypackage.xyz/a/mydoc.xaml| http://www.proseware.com/mypackage.xyz |  | pack://http:、 www.proseware.com、 packages.aspx%3fmypackage/a/bar.xaml| http://www.proseware.com/packages.aspx?mypackage |  | pack://http:、 www.proseware.com、 mypackage.pkg| http://www.proseware.com/mypackage.pkg |  | pack://ftp:、 ftp.proseware.com,packages,mypackage1.abc/a/picture.jpg| ftp://ftp.proseware.com/packages/mypackage1.abc |  | pack://file:、、 d:,packages,mypackage2.pkg/a/bar.xaml|file:///d:/packages/mypackage2.pkg|"
  syntax:
    content: public static Uri GetPackageUri (Uri packUri);
    parameters:
    - id: packUri
      type: System.Uri
      description: "Pack URI 要從中傳回的 URI <xref href=&quot;System.IO.Packaging.Package&quot;> </xref>。"
    return:
      type: System.Uri
      description: "URI <xref href=&quot;System.IO.Packaging.Package&quot;> </xref>從指定<code> packUri </code>。"
  overload: System.IO.Packaging.PackUriHelper.GetPackageUri*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)
  id: GetPartUri(System.Uri)
  parent: System.IO.Packaging.PackUriHelper
  langs:
  - csharp
  name: GetPartUri(Uri)
  nameWithType: PackUriHelper.GetPartUri(Uri)
  fullName: System.IO.Packaging.PackUriHelper.GetPartUri(Uri)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "傳回的 URI <xref href=&quot;System.IO.Packaging.PackagePart&quot;> </xref>內指定 pack URI。"
  remarks: "傳回<xref:System.IO.Packaging.PackagePart>URI 為相對於封裝根目錄，並且開頭一律是絕對路徑&quot;/&quot;且符合定義的語法[開放式封裝慣例規格](http://go.microsoft.com/fwlink/?LinkID=71255)。</xref:System.IO.Packaging.PackagePart>       下表說明針對 GetPartUri 的範例案例。      |`packUri`|傳回部分 URI |  |---------------|-----------------------|  | pack://http:、 www.proseware.com、 mypackage.xyz/a/mydoc.xaml|/a/mydoc.xaml|  | pack://http:、 www.proseware.com、 packages.aspx%3fmypackage/a/bar.xaml|/a/bar.xaml|  | pack://http:、 www.proseware.com、 mypackage.pkg|null|  | pack://ftp:、 ftp.proseware.com,packages,mypackage1.abc/a/picture.jpg|/a/picture.jpg|  | pack://file:、、 d:,packages,mypackage2.pkg/a/bar.xaml|/a/bar.xaml|"
  syntax:
    content: public static Uri GetPartUri (Uri packUri);
    parameters:
    - id: packUri
      type: System.Uri
      description: "Pack URI 傳回<xref href=&quot;System.IO.Packaging.PackagePart&quot;> </xref> URI。"
    return:
      type: System.Uri
      description: "The URI of the <xref href=&quot;System.IO.Packaging.PackagePart&quot;></xref> in the given <code>packUri</code>, or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> if <code>packUri</code> points to a package instead of a <xref href=&quot;System.IO.Packaging.PackagePart&quot;></xref>."
  overload: System.IO.Packaging.PackUriHelper.GetPartUri*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.PackUriHelper.GetRelationshipPartUri(System.Uri)
  id: GetRelationshipPartUri(System.Uri)
  parent: System.IO.Packaging.PackUriHelper
  langs:
  - csharp
  name: GetRelationshipPartUri(Uri)
  nameWithType: PackUriHelper.GetRelationshipPartUri(Uri)
  fullName: System.IO.Packaging.PackUriHelper.GetRelationshipPartUri(Uri)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "傳回[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]與指定的關聯性組件<xref href=&quot;System.IO.Packaging.PackagePart&quot;> </xref>。"
  remarks: "`partUri`必須識別<xref:System.IO.Packaging.Package>（&quot;/&quot;） 或<xref:System.IO.Packaging.PackagePart>也就是不<xref:System.IO.Packaging.PackageRelationship>部份</xref:System.IO.Packaging.PackageRelationship></xref:System.IO.Packaging.PackagePart></xref:System.IO.Packaging.Package>       如需有關<xref:System.IO.Packaging.PackageRelationship>組件，請參閱可從開放式封裝慣例規格中的區段 9.3 「 關聯性 」[規格和授權下載](http://go.microsoft.com/fwlink/?LinkID=71255)。</xref:System.IO.Packaging.PackageRelationship>"
  example:
  - "[Pack URIs in WPF](~/add/includes/ajax-current-ext-md.md)  \n  \n [Open Packaging Conventions Specification](http://go.microsoft.com/fwlink/?LinkID=71255)"
  syntax:
    content: public static Uri GetRelationshipPartUri (Uri partUri);
    parameters:
    - id: partUri
      type: System.Uri
      description: "<xref:System.IO.Packaging.PackagePart.Uri*>的<xref href=&quot;System.IO.Packaging.PackagePart&quot;></xref>傳回相關聯的 URI <xref href=&quot;System.IO.Packaging.PackageRelationship&quot;> </xref>。</xref:System.IO.Packaging.PackagePart.Uri*>"
    return:
      type: System.Uri
      description: "URI <xref href=&quot;System.IO.Packaging.PackageRelationship&quot;> </xref>與相關聯的組件<xref href=&quot;System.IO.Packaging.PackagePart&quot;></xref>由<code> partUri </code>。"
  overload: System.IO.Packaging.PackUriHelper.GetRelationshipPartUri*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>partUri</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>partUri</code>封裝組件 URI 語法無效。       -或-<code>partUri</code>是絕對 URI。       -或-<code>partUri</code>參考關聯性。"
  platform:
  - net462
- uid: System.IO.Packaging.PackUriHelper.GetRelativeUri(System.Uri,System.Uri)
  id: GetRelativeUri(System.Uri,System.Uri)
  parent: System.IO.Packaging.PackUriHelper
  langs:
  - csharp
  name: GetRelativeUri(Uri,Uri)
  nameWithType: PackUriHelper.GetRelativeUri(Uri,Uri)
  fullName: System.IO.Packaging.PackUriHelper.GetRelativeUri(Uri,Uri)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "傳回相對[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]之間兩個指定<xref href=&quot;System.IO.Packaging.PackagePart&quot;> </xref> [!INCLUDE[TLA2#tla_uri#plural](~/add/includes/tla2sharptla-urisharpplural-md.md)]。"
  remarks: "下表說明針對 GetRelativeUri 的範例案例。      |`sourcePartUri`|`targetPartUri`|傳回相對 URI |  |---------------------|---------------------|---------------------------|  |/mydoc/markup/page.xml|/mydoc/markup/picture.jpg|picture.jpg|  | / mydoc/markup/page.xml|/mydoc/picture.jpg|.../picture.jpg|  | / mydoc/markup/page.xml|/mydoc/images/picture.jpg|.../images/picture.jpg|"
  syntax:
    content: public static Uri GetRelativeUri (Uri sourcePartUri, Uri targetPartUri);
    parameters:
    - id: sourcePartUri
      type: System.Uri
      description: "[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]的來源組件。"
    - id: targetPartUri
      type: System.Uri
      description: "[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]的目標組件。"
    return:
      type: System.Uri
      description: "The relative [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] from <code>sourcePartUri</code> to <code>targetPartUri</code>."
  overload: System.IO.Packaging.PackUriHelper.GetRelativeUri*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>sourcePartUri</code>or <code>targetPartUri</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IO.Packaging.PackUriHelper.GetSourcePartUriFromRelationshipPartUri(System.Uri)
  id: GetSourcePartUriFromRelationshipPartUri(System.Uri)
  parent: System.IO.Packaging.PackUriHelper
  langs:
  - csharp
  name: GetSourcePartUriFromRelationshipPartUri(Uri)
  nameWithType: PackUriHelper.GetSourcePartUriFromRelationshipPartUri(Uri)
  fullName: System.IO.Packaging.PackUriHelper.GetSourcePartUriFromRelationshipPartUri(Uri)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "傳回<xref:System.IO.Packaging.PackageRelationship.SourceUri*>從<xref href=&quot;System.IO.Packaging.PackageRelationship&quot;></xref>與指定[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]。</xref:System.IO.Packaging.PackageRelationship.SourceUri*>"
  remarks: "<xref:System.IO.Packaging.PackageRelationship.SourceUri%2A>屬性關聯性的組件必須識別其中<xref:System.IO.Packaging.PackagePart.Package%2A>（&quot;/&quot;） 或<xref:System.IO.Packaging.PackagePart>也就是不<xref:System.IO.Packaging.PackageRelationship>.</xref:System.IO.Packaging.PackageRelationship> </xref:System.IO.Packaging.PackagePart> </xref:System.IO.Packaging.PackagePart.Package%2A> </xref:System.IO.Packaging.PackageRelationship.SourceUri%2A>       比方說，如果封裝組件&quot;/ files/document.xaml&quot;關聯性的組件的來源擁有者 」 / files/_rels/document.xaml.rels&quot;，呼叫與 GetSourcePartUriFromRelationshipPartUri`relationshipPartUri`參數&quot;/ files/_rels/document.xaml.rels&quot;傳回<xref:System.IO.Packaging.PackageRelationship.SourceUri%2A>的&quot;/ files/document.xaml&quot;。</xref:System.IO.Packaging.PackageRelationship.SourceUri%2A>"
  syntax:
    content: public static Uri GetSourcePartUriFromRelationshipPartUri (Uri relationshipPartUri);
    parameters:
    - id: relationshipPartUri
      type: System.Uri
      description: "[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]關聯性組件，以傳回<xref:System.IO.Packaging.PackageRelationship.SourceUri*>從。</xref:System.IO.Packaging.PackageRelationship.SourceUri*>"
    return:
      type: System.Uri
      description: "<xref:System.IO.Packaging.PackageRelationship.SourceUri*>的<xref href=&quot;System.IO.Packaging.PackagePart&quot;></xref>從具有指定的關聯性<code> relationshipPartUri </code>。</xref:System.IO.Packaging.PackageRelationship.SourceUri*>"
  overload: System.IO.Packaging.PackUriHelper.GetSourcePartUriFromRelationshipPartUri*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>relationshipPartUri</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>relationshipPartUri</code>是絕對[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]。       -<code>relationshipPartUri</code>語法不正確的<xref href=&quot;System.IO.Packaging.PackagePart&quot;> </xref>。       -或-<code>relationshipPartUri</code>未參考關聯性的組件。       -或-<xref:System.IO.Packaging.PackageRelationship.SourceUri*>關聯性的組件參考另一個關聯性的組件 （不正確，請參閱 < 備註 >）。"
  platform:
  - net462
- uid: System.IO.Packaging.PackUriHelper.IsRelationshipPartUri(System.Uri)
  id: IsRelationshipPartUri(System.Uri)
  parent: System.IO.Packaging.PackUriHelper
  langs:
  - csharp
  name: IsRelationshipPartUri(Uri)
  nameWithType: PackUriHelper.IsRelationshipPartUri(Uri)
  fullName: System.IO.Packaging.PackUriHelper.IsRelationshipPartUri(Uri)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "傳回值，指出是否指定[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]是[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]的<xref href=&quot;System.IO.Packaging.PackageRelationship&quot;></xref>組件。"
  syntax:
    content: public static bool IsRelationshipPartUri (Uri partUri);
    parameters:
    - id: partUri
      type: System.Uri
      description: "[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]檢查<xref href=&quot;System.IO.Packaging.PackageRelationship&quot;></xref>組件。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>partUri</code> identifies a <xref href=&quot;System.IO.Packaging.PackageRelationship&quot;></xref> part; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.IO.Packaging.PackUriHelper.IsRelationshipPartUri*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>partUri</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>partUri</code>是絕對[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]。       -<code>partUri</code>是無效<xref href=&quot;System.IO.Packaging.PackagePart&quot;></xref>語法。"
  platform:
  - net462
- uid: System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)
  id: ResolvePartUri(System.Uri,System.Uri)
  parent: System.IO.Packaging.PackUriHelper
  langs:
  - csharp
  name: ResolvePartUri(Uri,Uri)
  nameWithType: PackUriHelper.ResolvePartUri(Uri,Uri)
  fullName: System.IO.Packaging.PackUriHelper.ResolvePartUri(Uri,Uri)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "傳回部分 URI 指定的來源組件 URI 和 URI 與相對路徑的目標組件。"
  remarks: "下表說明針對 ResolvePartUri 的範例案例。      |`sourcePartUri`|`targetUri`|傳回 URI |  |---------------------|-----------------|------------------|  |/mydoc/markup/page.xml|picture.jpg|/mydoc/markup/picture.jpg|  |/mydoc/markup/page.xml|images/picture.jpg|/mydoc/markup/images/picture.jpg|  | / mydoc/markup/page.xml|。/picture.jpg|/mydoc/markup/picture.jpg|  | / mydoc/markup/page.xml|.../picture.jpg|/mydoc/picture.jpg|  | / mydoc/markup/page.xml|.../images/picture.jpg|/mydoc/images/picture.jpg|  |/|images/picture.jpg|/images/picture.jpg|"
  example:
  - "The following example shows how to use the ResolvePartUri method.  For the complete sample, see [Reading a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160034).  \n  \n [!code-vb[PackageRead#PackageReadUsing](~/add/codesnippet/visualbasic/packageread/packageread.vb#packagereadusing)]\n [!code-cs[PackageRead#PackageReadUsing](~/add/codesnippet/csharp/PackageRead/PackageRead.cs#packagereadusing)]"
  syntax:
    content: public static Uri ResolvePartUri (Uri sourcePartUri, Uri targetUri);
    parameters:
    - id: sourcePartUri
      type: System.Uri
      description: "來源組件的 URI 或&quot;/&quot;來指定<xref href=&quot;System.IO.Packaging.Package&quot;></xref>根。"
    - id: targetUri
      type: System.Uri
      description: "目標組件的相對 URI。"
    return:
      type: System.Uri
      description: "目標組件的 URI 解析之間指定<code> SourcePartUri </code>和<code> targetUri </code>參數。"
  overload: System.IO.Packaging.PackUriHelper.ResolvePartUri*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>sourcePartUri</code>or <code>targetUri</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>sourcePartUri</code>不是有效的組件的 URI。       -或-<code>targetUri</code>不是有效的相對 URI。"
  platform:
  - net462
- uid: System.IO.Packaging.PackUriHelper.UriSchemePack
  id: UriSchemePack
  parent: System.IO.Packaging.PackUriHelper
  langs:
  - csharp
  name: UriSchemePack
  nameWithType: PackUriHelper.UriSchemePack
  fullName: System.IO.Packaging.PackUriHelper.UriSchemePack
  type: Field
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "定義組件的 URI 配置名稱&quot;pack&quot;。"
  syntax:
    content: public static readonly string UriSchemePack;
    return:
      type: System.String
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.IO.Packaging.PackUriHelper.ComparePackUri(System.Uri,System.Uri)
  parent: System.IO.Packaging.PackUriHelper
  isExternal: false
  name: ComparePackUri(Uri,Uri)
  nameWithType: PackUriHelper.ComparePackUri(Uri,Uri)
  fullName: System.IO.Packaging.PackUriHelper.ComparePackUri(Uri,Uri)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.IO.Packaging.PackUriHelper.ComparePartUri(System.Uri,System.Uri)
  parent: System.IO.Packaging.PackUriHelper
  isExternal: false
  name: ComparePartUri(Uri,Uri)
  nameWithType: PackUriHelper.ComparePartUri(Uri,Uri)
  fullName: System.IO.Packaging.PackUriHelper.ComparePartUri(Uri,Uri)
- uid: System.IO.Packaging.PackUriHelper.Create(System.Uri)
  parent: System.IO.Packaging.PackUriHelper
  isExternal: false
  name: Create(Uri)
  nameWithType: PackUriHelper.Create(Uri)
  fullName: System.IO.Packaging.PackUriHelper.Create(Uri)
- uid: System.IO.Packaging.PackUriHelper.Create(System.Uri,System.Uri)
  parent: System.IO.Packaging.PackUriHelper
  isExternal: false
  name: Create(Uri,Uri)
  nameWithType: PackUriHelper.Create(Uri,Uri)
  fullName: System.IO.Packaging.PackUriHelper.Create(Uri,Uri)
- uid: System.IO.Packaging.PackUriHelper.Create(System.Uri,System.Uri,System.String)
  parent: System.IO.Packaging.PackUriHelper
  isExternal: false
  name: Create(Uri,Uri,String)
  nameWithType: PackUriHelper.Create(Uri,Uri,String)
  fullName: System.IO.Packaging.PackUriHelper.Create(Uri,Uri,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)
  parent: System.IO.Packaging.PackUriHelper
  isExternal: false
  name: CreatePartUri(Uri)
  nameWithType: PackUriHelper.CreatePartUri(Uri)
  fullName: System.IO.Packaging.PackUriHelper.CreatePartUri(Uri)
- uid: System.IO.Packaging.PackUriHelper.GetNormalizedPartUri(System.Uri)
  parent: System.IO.Packaging.PackUriHelper
  isExternal: false
  name: GetNormalizedPartUri(Uri)
  nameWithType: PackUriHelper.GetNormalizedPartUri(Uri)
  fullName: System.IO.Packaging.PackUriHelper.GetNormalizedPartUri(Uri)
- uid: System.IO.Packaging.PackUriHelper.GetPackageUri(System.Uri)
  parent: System.IO.Packaging.PackUriHelper
  isExternal: false
  name: GetPackageUri(Uri)
  nameWithType: PackUriHelper.GetPackageUri(Uri)
  fullName: System.IO.Packaging.PackUriHelper.GetPackageUri(Uri)
- uid: System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)
  parent: System.IO.Packaging.PackUriHelper
  isExternal: false
  name: GetPartUri(Uri)
  nameWithType: PackUriHelper.GetPartUri(Uri)
  fullName: System.IO.Packaging.PackUriHelper.GetPartUri(Uri)
- uid: System.IO.Packaging.PackUriHelper.GetRelationshipPartUri(System.Uri)
  parent: System.IO.Packaging.PackUriHelper
  isExternal: false
  name: GetRelationshipPartUri(Uri)
  nameWithType: PackUriHelper.GetRelationshipPartUri(Uri)
  fullName: System.IO.Packaging.PackUriHelper.GetRelationshipPartUri(Uri)
- uid: System.IO.Packaging.PackUriHelper.GetRelativeUri(System.Uri,System.Uri)
  parent: System.IO.Packaging.PackUriHelper
  isExternal: false
  name: GetRelativeUri(Uri,Uri)
  nameWithType: PackUriHelper.GetRelativeUri(Uri,Uri)
  fullName: System.IO.Packaging.PackUriHelper.GetRelativeUri(Uri,Uri)
- uid: System.IO.Packaging.PackUriHelper.GetSourcePartUriFromRelationshipPartUri(System.Uri)
  parent: System.IO.Packaging.PackUriHelper
  isExternal: false
  name: GetSourcePartUriFromRelationshipPartUri(Uri)
  nameWithType: PackUriHelper.GetSourcePartUriFromRelationshipPartUri(Uri)
  fullName: System.IO.Packaging.PackUriHelper.GetSourcePartUriFromRelationshipPartUri(Uri)
- uid: System.IO.Packaging.PackUriHelper.IsRelationshipPartUri(System.Uri)
  parent: System.IO.Packaging.PackUriHelper
  isExternal: false
  name: IsRelationshipPartUri(Uri)
  nameWithType: PackUriHelper.IsRelationshipPartUri(Uri)
  fullName: System.IO.Packaging.PackUriHelper.IsRelationshipPartUri(Uri)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)
  parent: System.IO.Packaging.PackUriHelper
  isExternal: false
  name: ResolvePartUri(Uri,Uri)
  nameWithType: PackUriHelper.ResolvePartUri(Uri,Uri)
  fullName: System.IO.Packaging.PackUriHelper.ResolvePartUri(Uri,Uri)
- uid: System.IO.Packaging.PackUriHelper.UriSchemePack
  parent: System.IO.Packaging.PackUriHelper
  isExternal: false
  name: UriSchemePack
  nameWithType: PackUriHelper.UriSchemePack
  fullName: System.IO.Packaging.PackUriHelper.UriSchemePack
- uid: System.IO.Packaging.PackUriHelper.ComparePackUri*
  parent: System.IO.Packaging.PackUriHelper
  isExternal: false
  name: ComparePackUri
  nameWithType: PackUriHelper.ComparePackUri
- uid: System.IO.Packaging.PackUriHelper.ComparePartUri*
  parent: System.IO.Packaging.PackUriHelper
  isExternal: false
  name: ComparePartUri
  nameWithType: PackUriHelper.ComparePartUri
- uid: System.IO.Packaging.PackUriHelper.Create*
  parent: System.IO.Packaging.PackUriHelper
  isExternal: false
  name: Create
  nameWithType: PackUriHelper.Create
- uid: System.IO.Packaging.PackUriHelper.CreatePartUri*
  parent: System.IO.Packaging.PackUriHelper
  isExternal: false
  name: CreatePartUri
  nameWithType: PackUriHelper.CreatePartUri
- uid: System.IO.Packaging.PackUriHelper.GetNormalizedPartUri*
  parent: System.IO.Packaging.PackUriHelper
  isExternal: false
  name: GetNormalizedPartUri
  nameWithType: PackUriHelper.GetNormalizedPartUri
- uid: System.IO.Packaging.PackUriHelper.GetPackageUri*
  parent: System.IO.Packaging.PackUriHelper
  isExternal: false
  name: GetPackageUri
  nameWithType: PackUriHelper.GetPackageUri
- uid: System.IO.Packaging.PackUriHelper.GetPartUri*
  parent: System.IO.Packaging.PackUriHelper
  isExternal: false
  name: GetPartUri
  nameWithType: PackUriHelper.GetPartUri
- uid: System.IO.Packaging.PackUriHelper.GetRelationshipPartUri*
  parent: System.IO.Packaging.PackUriHelper
  isExternal: false
  name: GetRelationshipPartUri
  nameWithType: PackUriHelper.GetRelationshipPartUri
- uid: System.IO.Packaging.PackUriHelper.GetRelativeUri*
  parent: System.IO.Packaging.PackUriHelper
  isExternal: false
  name: GetRelativeUri
  nameWithType: PackUriHelper.GetRelativeUri
- uid: System.IO.Packaging.PackUriHelper.GetSourcePartUriFromRelationshipPartUri*
  parent: System.IO.Packaging.PackUriHelper
  isExternal: false
  name: GetSourcePartUriFromRelationshipPartUri
  nameWithType: PackUriHelper.GetSourcePartUriFromRelationshipPartUri
- uid: System.IO.Packaging.PackUriHelper.IsRelationshipPartUri*
  parent: System.IO.Packaging.PackUriHelper
  isExternal: false
  name: IsRelationshipPartUri
  nameWithType: PackUriHelper.IsRelationshipPartUri
- uid: System.IO.Packaging.PackUriHelper.ResolvePartUri*
  parent: System.IO.Packaging.PackUriHelper
  isExternal: false
  name: ResolvePartUri
  nameWithType: PackUriHelper.ResolvePartUri
