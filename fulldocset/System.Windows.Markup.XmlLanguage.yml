### YamlMime:ManagedReference
items:
- uid: System.Windows.Markup.XmlLanguage
  id: XmlLanguage
  children:
  - System.Windows.Markup.XmlLanguage.Empty
  - System.Windows.Markup.XmlLanguage.GetEquivalentCulture
  - System.Windows.Markup.XmlLanguage.GetLanguage(System.String)
  - System.Windows.Markup.XmlLanguage.GetSpecificCulture
  - System.Windows.Markup.XmlLanguage.IetfLanguageTag
  - System.Windows.Markup.XmlLanguage.ToString
  langs:
  - csharp
  name: XmlLanguage
  nameWithType: XmlLanguage
  fullName: System.Windows.Markup.XmlLanguage
  type: Class
  summary: "表示在 XAML 標記中使用的語言標記。"
  remarks: "語言標記可能會或可能沒有註冊<xref:System.Globalization.CultureInfo>XAML 會解譯其中的系統上。</xref:System.Globalization.CultureInfo>       這個類別可用於處理值表示使用`xml:lang`XML 中。       在兩個字元或連字號連接的語言地區設定格式，可以指定語言標記。 請參閱[RFC 3066](http://go.microsoft.com/fwlink/?LinkId=132454)。       請注意，XML 規格允許空白字串代表`xml:lang`，不過，不允許 RFC 3066; 因此，XmlLanguage 類型允許&quot;&quot;（空字串屬性）。 預設建構的 XmlLanguage 行為就如同建構&quot;&quot;（空字串）。      <a name=&quot;xamlAttributeUsage_XmlLanguage&quot;></a># # XAML 屬性使用方式```   <object property=&quot;prefix&quot;/>   - or -   <object property=&quot;prefix-subcode&quot;/>   ``` <a name=&quot;xamlValues_XmlLanguage&quot;> </a> # # XAML 值*前置詞*語言前置詞，使用 ISO 639-1 語言的前置詞值。       比方說，&quot;en&quot;或&quot;zh-chs 和&quot;。 接受大寫的值，轉換成小寫。 這也可能是空白的屬性，&quot;&quot;。       *寄件人*如果提供，前面必須有單一連字號。 然後，寄件人 RFC 3066 所定義。 最常見的使用方式，也就是，這是最有可能正確對應至<xref:System.Globalization.CultureInfo>，例如是國家或地區指定&quot;-我們&quot;或&quot;-hk&quot;。</xref:System.Globalization.CultureInfo> 接受大寫的值，轉換成小寫。"
  syntax:
    content: >-
      [System.ComponentModel.TypeConverter(typeof(System.Windows.Markup.XmlLanguageConverter))]

      public class XmlLanguage
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Markup.XmlLanguage.Empty
  id: Empty
  parent: System.Windows.Markup.XmlLanguage
  langs:
  - csharp
  name: Empty
  nameWithType: XmlLanguage.Empty
  fullName: System.Windows.Markup.XmlLanguage.Empty
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Markup
  summary: "取得靜態<xref href=&quot;System.Windows.Markup.XmlLanguage&quot;></xref>執行個體，來建立以<xref:System.Windows.Markup.XmlLanguage.GetLanguage*>為空白的屬性字串的語言標記。</xref:System.Windows.Markup.XmlLanguage.GetLanguage*>"
  remarks: "這個值實際上是<xref:System.Windows.Markup.XmlLanguage>對應至<xref:System.String.Empty?displayProperty=fullName>，<xref:System.Windows.Markup.XmlLanguage.GetEquivalentCulture%2A>結果為<xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=fullName>。</xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=fullName> </xref:System.Windows.Markup.XmlLanguage.GetEquivalentCulture%2A> </xref:System.String.Empty?displayProperty=fullName> </xref:System.Windows.Markup.XmlLanguage>"
  syntax:
    content: public static System.Windows.Markup.XmlLanguage Empty { get; }
    return:
      type: System.Windows.Markup.XmlLanguage
      description: "空標記版本的語言<xref href=&quot;System.Windows.Markup.XmlLanguage&quot;> </xref>，比較作業中使用。"
  overload: System.Windows.Markup.XmlLanguage.Empty*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Markup.XmlLanguage.GetEquivalentCulture
  id: GetEquivalentCulture
  parent: System.Windows.Markup.XmlLanguage
  langs:
  - csharp
  name: GetEquivalentCulture()
  nameWithType: XmlLanguage.GetEquivalentCulture()
  fullName: System.Windows.Markup.XmlLanguage.GetEquivalentCulture()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Markup
  summary: "傳回適當的對等項目<xref:System.Globalization.CultureInfo>這個<xref href=&quot;System.Windows.Markup.XmlLanguage&quot;> </xref>，並僅有這類<xref:System.Globalization.CultureInfo>會註冊為<xref:System.Windows.Markup.XmlLanguage.IetfLanguageTag*>值<xref href=&quot;System.Windows.Markup.XmlLanguage&quot;> </xref> </xref:System.Windows.Markup.XmlLanguage.IetfLanguageTag*> </xref:System.Globalization.CultureInfo> </xref:System.Globalization.CultureInfo>"
  remarks: "如果沒有對等<xref:System.Globalization.CultureInfo>可以是所產生，這個方法會引發例外狀況。</xref:System.Globalization.CultureInfo> 如果您不想處理的例外狀況，呼叫<xref:System.Windows.Markup.XmlLanguage.GetSpecificCulture%2A>改用。</xref:System.Windows.Markup.XmlLanguage.GetSpecificCulture%2A>"
  syntax:
    content: public System.Globalization.CultureInfo GetEquivalentCulture ();
    parameters: []
    return:
      type: System.Globalization.CultureInfo
      description: "A <xref:System.Globalization.CultureInfo>，可用來當地語系化全球化應用程式開發介面呼叫接受該類型做為引數。</xref:System.Globalization.CultureInfo>"
  overload: System.Windows.Markup.XmlLanguage.GetEquivalentCulture*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "沒有註冊<xref:System.Globalization.CultureInfo>所提供<xref href=&quot;System.Windows.Markup.XmlLanguage&quot;></xref>存在，取決於呼叫<xref:System.Globalization.CultureInfo.GetCultureInfoByIetfLanguageTag*>.</xref:System.Globalization.CultureInfo.GetCultureInfoByIetfLanguageTag*> </xref:System.Globalization.CultureInfo>"
  platform:
  - net462
- uid: System.Windows.Markup.XmlLanguage.GetLanguage(System.String)
  id: GetLanguage(System.String)
  parent: System.Windows.Markup.XmlLanguage
  langs:
  - csharp
  name: GetLanguage(String)
  nameWithType: XmlLanguage.GetLanguage(String)
  fullName: System.Windows.Markup.XmlLanguage.GetLanguage(String)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Markup
  summary: "傳回<xref href=&quot;System.Windows.Markup.XmlLanguage&quot;></xref>執行個體，表示每個 RFC 3066 語言的字串為基礎。"
  remarks: "這個方法實際上就是建構函式。       語言字串可能是空的否則必須符合[RFC 3066](http://go.microsoft.com/fwlink/?LinkId=132454)規則:-第一個子標記必須只組成[!INCLUDE[TLA#tla_ascii](~/add/includes/tlasharptla-ascii-md.md)]字母。      的必須包含其他子標記[!INCLUDE[TLA#tla_ascii](~/add/includes/tlasharptla-ascii-md.md)]字母和數字。      -子標記是由單一連字號字元分隔。      -每個子標記必須是 1 到 8 個字元。      為允許沒有前置或後端連字號。"
  syntax:
    content: public static System.Windows.Markup.XmlLanguage GetLanguage (string ietfLanguageTag);
    parameters:
    - id: ietfLanguageTag
      type: System.String
      description: "RFC 3066 語言字串或空字串。"
    return:
      type: System.Windows.Markup.XmlLanguage
      description: "新<xref href=&quot;System.Windows.Markup.XmlLanguage&quot;></xref>與提供的字串做為其<xref:System.Windows.Markup.XmlLanguage.IetfLanguageTag*>值。</xref:System.Windows.Markup.XmlLanguage.IetfLanguageTag*>"
  overload: System.Windows.Markup.XmlLanguage.GetLanguage*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>ietfLanguageTag</code>參數不可是 null。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>ietfLanguageTag</code>參數不可為空白，但不是符合 RFC 3066 中指定的語法。 請參閱 < 備註 >。"
  platform:
  - net462
- uid: System.Windows.Markup.XmlLanguage.GetSpecificCulture
  id: GetSpecificCulture
  parent: System.Windows.Markup.XmlLanguage
  langs:
  - csharp
  name: GetSpecificCulture()
  nameWithType: XmlLanguage.GetSpecificCulture()
  fullName: System.Windows.Markup.XmlLanguage.GetSpecificCulture()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Markup
  summary: "傳回密切相關非中性<xref:System.Globalization.CultureInfo>這個<xref href=&quot;System.Windows.Markup.XmlLanguage&quot;> </xref>。</xref:System.Globalization.CultureInfo>"
  remarks: "如果此<xref:System.Windows.Markup.XmlLanguage>等於<xref:System.Windows.Markup.XmlLanguage.Empty%2A?displayProperty=fullName>然後這個方法會傳回<xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=fullName>.</xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=fullName> </xref:System.Windows.Markup.XmlLanguage.Empty%2A?displayProperty=fullName> </xref:System.Windows.Markup.XmlLanguage>       這個方法會尋找已註冊的<xref:System.Globalization.CultureInfo>此<xref:System.Windows.Markup.XmlLanguage>.</xref:System.Windows.Markup.XmlLanguage>的最長可能前置詞比對</xref:System.Globalization.CultureInfo> 如果已註冊的<xref:System.Globalization.CultureInfo>是中性 (<xref:System.Globalization.CultureInfo.IsNeutralCulture%2A>是`true`)，則這個方法會依賴呼叫<xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A>對應是中性<xref:System.Globalization.CultureInfo>至特定的一個。</xref:System.Globalization.CultureInfo> </xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A> </xref:System.Globalization.CultureInfo.IsNeutralCulture%2A> </xref:System.Globalization.CultureInfo>"
  syntax:
    content: public System.Globalization.CultureInfo GetSpecificCulture ();
    parameters: []
    return:
      type: System.Globalization.CultureInfo
      description: "A <xref:System.Globalization.CultureInfo>，可用來當地語系化全球化[!INCLUDE[TLA2#tla_api](~/add/includes/tla2sharptla-api-md.md)]採用該類型作為引數的呼叫。</xref:System.Globalization.CultureInfo>"
  overload: System.Windows.Markup.XmlLanguage.GetSpecificCulture*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "沒有相關非中性<xref:System.Globalization.CultureInfo>已註冊供目前<xref href=&quot;System.Windows.Markup.XmlLanguage&quot;> </xref> <xref:System.Windows.Markup.XmlLanguage.IetfLanguageTag*>.</xref:System.Windows.Markup.XmlLanguage.IetfLanguageTag*> </xref:System.Globalization.CultureInfo>"
  platform:
  - net462
- uid: System.Windows.Markup.XmlLanguage.IetfLanguageTag
  id: IetfLanguageTag
  parent: System.Windows.Markup.XmlLanguage
  langs:
  - csharp
  name: IetfLanguageTag
  nameWithType: XmlLanguage.IetfLanguageTag
  fullName: System.Windows.Markup.XmlLanguage.IetfLanguageTag
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Markup
  summary: "取得語言標記的字串表示。"
  remarks: "這個屬性可能會提供至<xref:System.Windows.Markup.XmlLanguage.GetLanguage%2A>。</xref:System.Windows.Markup.XmlLanguage.GetLanguage%2A>傳回原本指定的字串正規化的版本       這個屬性也可能會傳回<xref:System.String.Empty>空字串，如果已提供給<xref:System.Windows.Markup.XmlLanguage.GetLanguage%2A>.</xref:System.Windows.Markup.XmlLanguage.GetLanguage%2A> </xref:System.String.Empty>"
  syntax:
    content: public string IetfLanguageTag { get; }
    return:
      type: System.String
      description: "語言標記的字串表示。"
  overload: System.Windows.Markup.XmlLanguage.IetfLanguageTag*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Markup.XmlLanguage.ToString
  id: ToString
  parent: System.Windows.Markup.XmlLanguage
  langs:
  - csharp
  name: ToString()
  nameWithType: XmlLanguage.ToString()
  fullName: System.Windows.Markup.XmlLanguage.ToString()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Markup
  summary: "傳回<xref:System.String>代表目前<xref href=&quot;System.Windows.Markup.XmlLanguage&quot;> </xref>。</xref:System.String>"
  remarks: "這會傳回<xref:System.Windows.Markup.XmlLanguage.IetfLanguageTag%2A>目前<xref:System.Windows.Markup.XmlLanguage>.</xref:System.Windows.Markup.XmlLanguage>值</xref:System.Windows.Markup.XmlLanguage.IetfLanguageTag%2A>"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "A<xref:System.String>代表目前<xref href=&quot;System.Windows.Markup.XmlLanguage&quot;> </xref>。</xref:System.String>"
  overload: System.Windows.Markup.XmlLanguage.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Windows.Markup.XmlLanguage.Empty
  parent: System.Windows.Markup.XmlLanguage
  isExternal: false
  name: Empty
  nameWithType: XmlLanguage.Empty
  fullName: System.Windows.Markup.XmlLanguage.Empty
- uid: System.Windows.Markup.XmlLanguage
  parent: System.Windows.Markup
  isExternal: false
  name: XmlLanguage
  nameWithType: XmlLanguage
  fullName: System.Windows.Markup.XmlLanguage
- uid: System.Windows.Markup.XmlLanguage.GetEquivalentCulture
  parent: System.Windows.Markup.XmlLanguage
  isExternal: false
  name: GetEquivalentCulture()
  nameWithType: XmlLanguage.GetEquivalentCulture()
  fullName: System.Windows.Markup.XmlLanguage.GetEquivalentCulture()
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Windows.Markup.XmlLanguage.GetLanguage(System.String)
  parent: System.Windows.Markup.XmlLanguage
  isExternal: false
  name: GetLanguage(String)
  nameWithType: XmlLanguage.GetLanguage(String)
  fullName: System.Windows.Markup.XmlLanguage.GetLanguage(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Markup.XmlLanguage.GetSpecificCulture
  parent: System.Windows.Markup.XmlLanguage
  isExternal: false
  name: GetSpecificCulture()
  nameWithType: XmlLanguage.GetSpecificCulture()
  fullName: System.Windows.Markup.XmlLanguage.GetSpecificCulture()
- uid: System.Windows.Markup.XmlLanguage.IetfLanguageTag
  parent: System.Windows.Markup.XmlLanguage
  isExternal: false
  name: IetfLanguageTag
  nameWithType: XmlLanguage.IetfLanguageTag
  fullName: System.Windows.Markup.XmlLanguage.IetfLanguageTag
- uid: System.Windows.Markup.XmlLanguage.ToString
  parent: System.Windows.Markup.XmlLanguage
  isExternal: false
  name: ToString()
  nameWithType: XmlLanguage.ToString()
  fullName: System.Windows.Markup.XmlLanguage.ToString()
- uid: System.Windows.Markup.XmlLanguage.Empty*
  parent: System.Windows.Markup.XmlLanguage
  isExternal: false
  name: Empty
  nameWithType: XmlLanguage.Empty
- uid: System.Windows.Markup.XmlLanguage.GetEquivalentCulture*
  parent: System.Windows.Markup.XmlLanguage
  isExternal: false
  name: GetEquivalentCulture
  nameWithType: XmlLanguage.GetEquivalentCulture
- uid: System.Windows.Markup.XmlLanguage.GetLanguage*
  parent: System.Windows.Markup.XmlLanguage
  isExternal: false
  name: GetLanguage
  nameWithType: XmlLanguage.GetLanguage
- uid: System.Windows.Markup.XmlLanguage.GetSpecificCulture*
  parent: System.Windows.Markup.XmlLanguage
  isExternal: false
  name: GetSpecificCulture
  nameWithType: XmlLanguage.GetSpecificCulture
- uid: System.Windows.Markup.XmlLanguage.IetfLanguageTag*
  parent: System.Windows.Markup.XmlLanguage
  isExternal: false
  name: IetfLanguageTag
  nameWithType: XmlLanguage.IetfLanguageTag
- uid: System.Windows.Markup.XmlLanguage.ToString*
  parent: System.Windows.Markup.XmlLanguage
  isExternal: false
  name: ToString
  nameWithType: XmlLanguage.ToString
