### YamlMime:ManagedReference
items:
- uid: System.Web.Security.WindowsTokenRoleProvider
  id: WindowsTokenRoleProvider
  children:
  - System.Web.Security.WindowsTokenRoleProvider.#ctor
  - System.Web.Security.WindowsTokenRoleProvider.AddUsersToRoles(System.String[],System.String[])
  - System.Web.Security.WindowsTokenRoleProvider.ApplicationName
  - System.Web.Security.WindowsTokenRoleProvider.CreateRole(System.String)
  - System.Web.Security.WindowsTokenRoleProvider.DeleteRole(System.String,System.Boolean)
  - System.Web.Security.WindowsTokenRoleProvider.FindUsersInRole(System.String,System.String)
  - System.Web.Security.WindowsTokenRoleProvider.GetAllRoles
  - System.Web.Security.WindowsTokenRoleProvider.GetRolesForUser(System.String)
  - System.Web.Security.WindowsTokenRoleProvider.GetUsersInRole(System.String)
  - System.Web.Security.WindowsTokenRoleProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  - System.Web.Security.WindowsTokenRoleProvider.IsUserInRole(System.String,System.Security.Principal.WindowsBuiltInRole)
  - System.Web.Security.WindowsTokenRoleProvider.IsUserInRole(System.String,System.String)
  - System.Web.Security.WindowsTokenRoleProvider.RemoveUsersFromRoles(System.String[],System.String[])
  - System.Web.Security.WindowsTokenRoleProvider.RoleExists(System.String)
  langs:
  - csharp
  name: WindowsTokenRoleProvider
  nameWithType: WindowsTokenRoleProvider
  fullName: System.Web.Security.WindowsTokenRoleProvider
  type: Class
  summary: "取得 ASP.NET 應用程式的角色資訊從 Windows 群組成員資格。"
  remarks: "WindowsTokenRoleProvider 類別是擷取角色資訊的 Windows 安全性群組為基礎的 Windows 使用者的唯讀角色成員資格提供者。 它是最適合用於使用 Windows 驗證模式的 IIS 驗證設定停用匿名驗證的 ASP.NET 應用程式。 您可以設定以允許或拒絕存取以特定的 Windows 群組中使用者的成員資格的 ASP.NET 應用程式。       您無法使用 WindowsTokenRoleProvider 類別來建立或刪除角色或修改根據 Windows 群組成員資格之角色的成員資格。 這項功能是由 Windows 作業系統管理。 WindowsTokenRoleProvider 類別僅支援<xref:System.Web.Security.WindowsTokenRoleProvider.IsUserInRole%2A>和<xref:System.Web.Security.WindowsTokenRoleProvider.GetRolesForUser%2A>方法的<xref:System.Web.Security.RoleProvider>抽象類別。</xref:System.Web.Security.RoleProvider> </xref:System.Web.Security.WindowsTokenRoleProvider.GetRolesForUser%2A> </xref:System.Web.Security.WindowsTokenRoleProvider.IsUserInRole%2A>"
  example:
  - "The following example shows the Web.config file for an ASP.NET application. It specifies that the application uses both Windows authentication and the WindowsTokenRoleProvider class to retrieve role information for Windows users. The  element specifies that only users in the BUILTIN\\Administrators group are allowed access to the application.  \n  \n```  \n<configuration>  \n  <system.web>  \n    <authentication mode=\"Windows\" />  \n  \n    <authorization>  \n      <allow roles=\"BUILTIN\\Administrators\" />  \n        <deny users=\"*\" />  \n      </authorization>  \n  \n    <roleManager defaultProvider=\"WindowsProvider\"   \n      enabled=\"true\"  \n      cacheRolesInCookie=\"false\">  \n      <providers>  \n        <add  \n          name=\"WindowsProvider\"  \n          type=\"System.Web.Security.WindowsTokenRoleProvider\" />  \n      </providers>  \n    </roleManager>  \n  \n  </system.web>  \n</configuration>  \n```"
  syntax:
    content: 'public class WindowsTokenRoleProvider : System.Web.Security.RoleProvider'
  inheritance:
  - System.Web.Security.RoleProvider
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Security.WindowsTokenRoleProvider.#ctor
  id: '#ctor'
  parent: System.Web.Security.WindowsTokenRoleProvider
  langs:
  - csharp
  name: WindowsTokenRoleProvider()
  nameWithType: WindowsTokenRoleProvider.WindowsTokenRoleProvider()
  fullName: System.Web.Security.WindowsTokenRoleProvider.WindowsTokenRoleProvider()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "建立的執行個體<xref href=&quot;System.Web.Security.WindowsTokenRoleProvider&quot;></xref>類別。"
  remarks: "WindowsTokenRoleProvider 建構函式由 ASP.NET 呼叫來建立的執行個體<xref:System.Web.Security.WindowsTokenRoleProvider>類別做為應用程式的組態中指定。</xref:System.Web.Security.WindowsTokenRoleProvider> 這個建構函式不是從您的程式碼使用。"
  syntax:
    content: public WindowsTokenRoleProvider ();
    parameters: []
  overload: System.Web.Security.WindowsTokenRoleProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.WindowsTokenRoleProvider.AddUsersToRoles(System.String[],System.String[])
  id: AddUsersToRoles(System.String[],System.String[])
  parent: System.Web.Security.WindowsTokenRoleProvider
  langs:
  - csharp
  name: AddUsersToRoles(String[],String[])
  nameWithType: WindowsTokenRoleProvider.AddUsersToRoles(String[],String[])
  fullName: System.Web.Security.WindowsTokenRoleProvider.AddUsersToRoles(String[],String[])
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Windows 語彙基元角色提供者不支援這個方法。"
  remarks: "這個方法不支援的<xref:System.Web.Security.WindowsTokenRoleProvider>類別，並一律會擲回<xref:System.Configuration.Provider.ProviderException>.</xref:System.Configuration.Provider.ProviderException> </xref:System.Web.Security.WindowsTokenRoleProvider>"
  syntax:
    content: public override void AddUsersToRoles (string[] usernames, string[] roleNames);
    parameters:
    - id: usernames
      type: System.String[]
      description: "要加入至指定的角色的使用者名稱的字串陣列。"
    - id: roleNames
      type: System.String[]
      description: "要加入指定的使用者名稱的角色名稱的字串陣列。"
  overload: System.Web.Security.WindowsTokenRoleProvider.AddUsersToRoles*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "不支援的方法呼叫。"
  platform:
  - net462
- uid: System.Web.Security.WindowsTokenRoleProvider.ApplicationName
  id: ApplicationName
  parent: System.Web.Security.WindowsTokenRoleProvider
  langs:
  - csharp
  name: ApplicationName
  nameWithType: WindowsTokenRoleProvider.ApplicationName
  fullName: System.Web.Security.WindowsTokenRoleProvider.ApplicationName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "取得或設定應用程式的名稱。"
  remarks: "不同於其他的角色提供者，例如<xref:System.Web.Security.SqlRoleProvider>、<xref:System.Web.Security.WindowsTokenRoleProvider>類別不將角色資訊關聯的應用程式。</xref:System.Web.Security.WindowsTokenRoleProvider> </xref:System.Web.Security.SqlRoleProvider> 相反地，角色資訊是來自本機電腦上的 Windows 群組。 使用相同的伺服器上多個應用程式<xref:System.Web.Security.WindowsTokenRoleProvider>類別都會共用相同的角色資訊。</xref:System.Web.Security.WindowsTokenRoleProvider> 雖然`applicationName`可以設定應用程式，ApplicationName 屬性不用來擷取角色資訊的 Web.config 檔案中。"
  example:
  - "The following example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies the application's <xref:System.Web.Security.WindowsTokenRoleProvider> instance and sets the ApplicationName property to `MyApplication`.  \n  \n```  \n<roleManager defaultProvider=\"WindowsProvider\"   \n  enabled=\"true\"  \n  cacheRolesInCookie=\"false\">  \n  <providers>  \n    <add  \n      name=\"WindowsProvider\"  \n      type=\"System.Web.Security.WindowsTokenRoleProvider\"   \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</roleManager>  \n```"
  syntax:
    content: public override string ApplicationName { get; set; }
    return:
      type: System.String
      description: "應用程式的名稱。"
  overload: System.Web.Security.WindowsTokenRoleProvider.ApplicationName*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "嘗試設定 ApplicationName 屬性由呼叫端沒有<xref href=&quot;System.Web.AspNetHostingPermissionLevel&quot;> </xref> ASP.NET 裝載的權限。"
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "嘗試設定應用程式名稱長度超過 256 個字元的字串。"
  platform:
  - net462
- uid: System.Web.Security.WindowsTokenRoleProvider.CreateRole(System.String)
  id: CreateRole(System.String)
  parent: System.Web.Security.WindowsTokenRoleProvider
  langs:
  - csharp
  name: CreateRole(String)
  nameWithType: WindowsTokenRoleProvider.CreateRole(String)
  fullName: System.Web.Security.WindowsTokenRoleProvider.CreateRole(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Windows 語彙基元角色提供者不支援這個方法。"
  remarks: "這個方法不支援的<xref:System.Web.Security.WindowsTokenRoleProvider>類別，並一律會擲回<xref:System.Configuration.Provider.ProviderException>.</xref:System.Configuration.Provider.ProviderException> </xref:System.Web.Security.WindowsTokenRoleProvider>"
  syntax:
    content: public override void CreateRole (string roleName);
    parameters:
    - id: roleName
      type: System.String
      description: "若要建立角色的名稱。"
  overload: System.Web.Security.WindowsTokenRoleProvider.CreateRole*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "不支援的方法呼叫。"
  platform:
  - net462
- uid: System.Web.Security.WindowsTokenRoleProvider.DeleteRole(System.String,System.Boolean)
  id: DeleteRole(System.String,System.Boolean)
  parent: System.Web.Security.WindowsTokenRoleProvider
  langs:
  - csharp
  name: DeleteRole(String,Boolean)
  nameWithType: WindowsTokenRoleProvider.DeleteRole(String,Boolean)
  fullName: System.Web.Security.WindowsTokenRoleProvider.DeleteRole(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Windows 語彙基元角色提供者不支援這個方法。"
  syntax:
    content: public override bool DeleteRole (string roleName, bool throwOnPopulatedRole);
    parameters:
    - id: roleName
      type: System.String
      description: "要刪除的角色名稱。"
    - id: throwOnPopulatedRole
      type: System.Boolean
      description: "如果<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>，嘗試刪除的角色，包含一或多個成員會擲回例外狀況。"
    return:
      type: System.Boolean
      description: "無。 此方法不支援<xref href=&quot;System.Web.Security.WindowsTokenRoleProvider&quot;></xref>類別，一律會擲回<xref href=&quot;System.Configuration.Provider.ProviderException&quot;> </xref>。"
  overload: System.Web.Security.WindowsTokenRoleProvider.DeleteRole*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "不支援的方法呼叫。"
  platform:
  - net462
- uid: System.Web.Security.WindowsTokenRoleProvider.FindUsersInRole(System.String,System.String)
  id: FindUsersInRole(System.String,System.String)
  parent: System.Web.Security.WindowsTokenRoleProvider
  langs:
  - csharp
  name: FindUsersInRole(String,String)
  nameWithType: WindowsTokenRoleProvider.FindUsersInRole(String,String)
  fullName: System.Web.Security.WindowsTokenRoleProvider.FindUsersInRole(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Windows 語彙基元角色提供者不支援這個方法。"
  syntax:
    content: public override string[] FindUsersInRole (string roleName, string usernameToMatch);
    parameters:
    - id: roleName
      type: System.String
      description: "要搜尋的角色。"
    - id: usernameToMatch
      type: System.String
      description: "要尋找角色中的使用者名稱。"
    return:
      type: System.String[]
      description: "無。 此方法不支援<xref href=&quot;System.Web.Security.WindowsTokenRoleProvider&quot;></xref>類別，一律會擲回<xref href=&quot;System.Configuration.Provider.ProviderException&quot;> </xref>。"
  overload: System.Web.Security.WindowsTokenRoleProvider.FindUsersInRole*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "不支援的方法呼叫。"
  platform:
  - net462
- uid: System.Web.Security.WindowsTokenRoleProvider.GetAllRoles
  id: GetAllRoles
  parent: System.Web.Security.WindowsTokenRoleProvider
  langs:
  - csharp
  name: GetAllRoles()
  nameWithType: WindowsTokenRoleProvider.GetAllRoles()
  fullName: System.Web.Security.WindowsTokenRoleProvider.GetAllRoles()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Windows 語彙基元角色提供者不支援這個方法。"
  syntax:
    content: public override string[] GetAllRoles ();
    parameters: []
    return:
      type: System.String[]
      description: "無。 此方法不支援<xref href=&quot;System.Web.Security.WindowsTokenRoleProvider&quot;></xref>類別，一律會擲回<xref href=&quot;System.Configuration.Provider.ProviderException&quot;> </xref>。"
  overload: System.Web.Security.WindowsTokenRoleProvider.GetAllRoles*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "不支援的方法呼叫。"
  platform:
  - net462
- uid: System.Web.Security.WindowsTokenRoleProvider.GetRolesForUser(System.String)
  id: GetRolesForUser(System.String)
  parent: System.Web.Security.WindowsTokenRoleProvider
  langs:
  - csharp
  name: GetRolesForUser(String)
  nameWithType: WindowsTokenRoleProvider.GetRolesForUser(String)
  fullName: System.Web.Security.WindowsTokenRoleProvider.GetRolesForUser(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "取得使用者所屬 Windows 群組的清單。"
  remarks: "會呼叫這個方法<xref:System.Web.Security.Roles>來擷取 Windows 作業系統所指定的使用者所在的 Windows 群組的清單類別</xref:System.Web.Security.Roles> GetRolesForUser 方法可以呼叫只針對目前登入的使用者而言，LOGON_USER 伺服器變數所識別。 如果有提供值`username`參數不是目前登入的使用者名稱，<xref:System.Configuration.Provider.ProviderException?displayProperty=fullName>就會擲回。</xref:System.Configuration.Provider.ProviderException?displayProperty=fullName>       如需詳細資訊的 ASP.NET 和 Windows 驗證，請參閱[ASP.NET 驗證](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following code example uses the GetRolesForUser method to retrieve a list of roles for a specified user and binds the list of roles to a <xref:System.Web.UI.WebControls.GridView> control. For an example of a Web.config file that enables role management, see <xref:System.Web.Security.WindowsTokenRoleProvider>.  \n  \n [!code-vb[System.Web.Security.WindowsTokenRoleProvider#1](~/add/codesnippet/visualbasic/m-system.web.security.wi_1.aspx)]\n [!code-cs[System.Web.Security.WindowsTokenRoleProvider#1](~/add/codesnippet/csharp/m-system.web.security.wi_1.aspx)]"
  syntax:
    content: public override string[] GetRolesForUser (string username);
    parameters:
    - id: username
      type: System.String
      description: "要傳回之 Windows 群組清單中表單的 網域 \\ 使用者名稱的使用者。"
    return:
      type: System.String[]
      description: "字串陣列，其中包含指定的使用者所屬的所有 Windows 群組的名稱。"
  overload: System.Web.Security.WindowsTokenRoleProvider.GetRolesForUser*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "目前正在執行的使用者沒有已驗證<xref href=&quot;System.Security.Principal.WindowsIdentity&quot;></xref>附加至&lt;xref:System.Web.UI.Page.User%2A?displayProperty=fullName&gt;。 對於非 HTTP 狀況，目前正在執行的使用者不需要驗證<xref href=&quot;System.Security.Principal.WindowsIdentity&quot;></xref>附加至&lt;xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName&gt;。       - <code> username </code>不符<xref:System.Security.Principal.WindowsIdentity.Name*>的目前<xref href=&quot;System.Security.Principal.WindowsIdentity&quot;> </xref>。</xref:System.Security.Principal.WindowsIdentity.Name*>       -或者-擷取使用者的 Windows 群組資訊時發生失敗。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>username</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "信任層級小於<xref href=&quot;System.Web.AspNetHostingPermissionLevel&quot;> </xref>。"
  platform:
  - net462
- uid: System.Web.Security.WindowsTokenRoleProvider.GetUsersInRole(System.String)
  id: GetUsersInRole(System.String)
  parent: System.Web.Security.WindowsTokenRoleProvider
  langs:
  - csharp
  name: GetUsersInRole(String)
  nameWithType: WindowsTokenRoleProvider.GetUsersInRole(String)
  fullName: System.Web.Security.WindowsTokenRoleProvider.GetUsersInRole(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Windows 語彙基元角色提供者不支援這個方法。"
  syntax:
    content: public override string[] GetUsersInRole (string roleName);
    parameters:
    - id: roleName
      type: System.String
      description: "要取得使用者清單的角色名稱。"
    return:
      type: System.String[]
      description: "無。 此方法不支援<xref href=&quot;System.Web.Security.WindowsTokenRoleProvider&quot;></xref>類別，一律會擲回<xref href=&quot;System.Configuration.Provider.ProviderException&quot;> </xref>。"
  overload: System.Web.Security.WindowsTokenRoleProvider.GetUsersInRole*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "不支援的方法呼叫。"
  platform:
  - net462
- uid: System.Web.Security.WindowsTokenRoleProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  id: Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Web.Security.WindowsTokenRoleProvider
  langs:
  - csharp
  name: Initialize(String,NameValueCollection)
  nameWithType: WindowsTokenRoleProvider.Initialize(String,NameValueCollection)
  fullName: System.Web.Security.WindowsTokenRoleProvider.Initialize(String,NameValueCollection)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "使用 ASP.NET 應用程式的組態檔中指定的屬性值，初始化 Windows 語彙基元角色提供者。 這個方法不是直接從您的程式碼使用。"
  remarks: "Initialize 方法初始化<xref:System.Web.Security.WindowsTokenRoleProvider>ASP.NET 應用程式組態檔 (Web.config) 中指定類別與屬性值，並不是直接從您的程式碼使用。</xref:System.Web.Security.WindowsTokenRoleProvider>"
  syntax:
    content: public override void Initialize (string name, System.Collections.Specialized.NameValueCollection config);
    parameters:
    - id: name
      type: System.String
      description: "名稱<xref href=&quot;System.Web.Security.WindowsTokenRoleProvider&quot;></xref>初始化執行個體。"
    - id: config
      type: System.Collections.Specialized.NameValueCollection
      description: "A <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref>建構函式，其中包含的名稱和值的組態選項<xref href=&quot;System.Web.Security.WindowsTokenRoleProvider&quot;></xref>類別。"
  overload: System.Web.Security.WindowsTokenRoleProvider.Initialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>config</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "<xref uid=&quot;langword_csharp_applicationName&quot; name=&quot;applicationName&quot; href=&quot;&quot;> </xref>中設定屬性的長度超過 256 個字元。       -應用程式組態檔，這個<xref href=&quot;System.Web.Security.WindowsTokenRoleProvider&quot;></xref>執行個體會包含無法辨識的屬性。"
  platform:
  - net462
- uid: System.Web.Security.WindowsTokenRoleProvider.IsUserInRole(System.String,System.Security.Principal.WindowsBuiltInRole)
  id: IsUserInRole(System.String,System.Security.Principal.WindowsBuiltInRole)
  parent: System.Web.Security.WindowsTokenRoleProvider
  langs:
  - csharp
  name: IsUserInRole(String,WindowsBuiltInRole)
  nameWithType: WindowsTokenRoleProvider.IsUserInRole(String,WindowsBuiltInRole)
  fullName: System.Web.Security.WindowsTokenRoleProvider.IsUserInRole(String,WindowsBuiltInRole)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "取得值，指出指定的使用者是否為指定的內建 Windows 角色。"
  remarks: "IsUserInRole 方法可讓您檢查使用者是否為其中一種所描述的一般 Windows 角色<xref:System.Security.Principal.WindowsBuiltInRole>列舉型別。</xref:System.Security.Principal.WindowsBuiltInRole> 這個方法是適用於已當地語系化為多種語言的應用程式。 IsUserInRole 方法的這個多載不是屬於<xref:System.Web.Security.RoleProvider>基底類別，並只能透過將轉型存取<xref:System.Web.Security.Roles.Provider%2A>屬性<xref:System.Web.Security.Roles>類別做為<xref:System.Web.Security.WindowsTokenRoleProvider>型別。</xref:System.Web.Security.WindowsTokenRoleProvider> </xref:System.Web.Security.Roles> </xref:System.Web.Security.Roles.Provider%2A> </xref:System.Web.Security.RoleProvider>       您可以只針對目前登入的使用者，呼叫 IsUserInRole 方法，如 LOGON_USER 伺服器變數所識別。 如果有提供值`username`參數不是目前登入的使用者名稱，<xref:System.Web.HttpException>就會擲回。</xref:System.Web.HttpException>       IsUserInRole 方法只可以呼叫由 LOGON_USER 伺服器變數的目前登入的使用者。 目前登入的使用者必須是 Windows 驗證的使用者。 如需 ASP.NET 和 Windows 驗證的詳細資訊，請參閱[ASP.NET 驗證](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following code example programmatically checks whether the currently logged-on user is in the Administrators role before allowing the user to view roles information for the application. For an example of a Web.config file that enables role management, see <xref:System.Web.Security.WindowsTokenRoleProvider>.  \n  \n [!code-cs[System.Web.Security.WindowsTokenRoleProvider#2](~/add/codesnippet/csharp/f88a5130-a7a7-46a8-84f9-_1.aspx)]\n [!code-vb[System.Web.Security.WindowsTokenRoleProvider#2](~/add/codesnippet/visualbasic/f88a5130-a7a7-46a8-84f9-_1.aspx)]"
  syntax:
    content: public bool IsUserInRole (string username, System.Security.Principal.WindowsBuiltInRole role);
    parameters:
    - id: username
      type: System.String
      description: "要在表單的 網域 \\ 使用者名稱中搜尋的使用者名稱。"
    - id: role
      type: System.Security.Principal.WindowsBuiltInRole
      description: "Windows 要搜尋的角色中。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果指定的使用者是否在指定的 Windows 角色;否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.Security.WindowsTokenRoleProvider.IsUserInRole*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>username</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "目前正在執行的使用者沒有已驗證<xref href=&quot;System.Security.Principal.WindowsIdentity&quot;></xref>附加至&lt;xref:System.Web.UI.Page.User%2A?displayProperty=fullName&gt;。 對於非 HTTP 狀況，目前正在執行的使用者不需要驗證<xref href=&quot;System.Security.Principal.WindowsIdentity&quot;></xref>附加至&lt;xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName&gt;。       - <code> username </code>不符<xref:System.Security.Principal.WindowsIdentity.Name*>的目前<xref href=&quot;System.Security.Principal.WindowsIdentity&quot;> </xref>。</xref:System.Security.Principal.WindowsIdentity.Name*>"
  platform:
  - net462
- uid: System.Web.Security.WindowsTokenRoleProvider.IsUserInRole(System.String,System.String)
  id: IsUserInRole(System.String,System.String)
  parent: System.Web.Security.WindowsTokenRoleProvider
  langs:
  - csharp
  name: IsUserInRole(String,String)
  nameWithType: WindowsTokenRoleProvider.IsUserInRole(String,String)
  fullName: System.Web.Security.WindowsTokenRoleProvider.IsUserInRole(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "取得值，指出指定的使用者是否為指定之 Windows 群組。"
  remarks: "IsUserInRole 方法由呼叫<xref:System.Web.Security.Roles>類別和<xref:System.Security.Principal.IPrincipal.IsInRole%2A>方法<xref:System.Web.UI.Page.User%2A>屬性來判斷使用者是否存在於 Windows 群組。</xref:System.Web.UI.Page.User%2A> </xref:System.Security.Principal.IPrincipal.IsInRole%2A> </xref:System.Web.Security.Roles> 您可以只針對目前登入的使用者，呼叫 IsUserInRole 方法，如 LOGON_USER 伺服器變數所識別。 目前的登入的使用者必須是 Windows 驗證的使用者。 如需 ASP.NET 和 Windows 驗證的詳細資訊，請參閱[ASP.NET 驗證](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following code example programmatically checks whether the currently logged-on user is in the Administrators role before allowing the user to view roles information for the application. For an example of a Web.config file that enables role management, see <xref:System.Web.Security.WindowsTokenRoleProvider>.  \n  \n [!code-vb[System.Web.Security.WindowsTokenRoleProvider#1](~/add/codesnippet/visualbasic/e3ad81d7-d695-40b8-8e62-_1.aspx)]\n [!code-cs[System.Web.Security.WindowsTokenRoleProvider#1](~/add/codesnippet/csharp/e3ad81d7-d695-40b8-8e62-_1.aspx)]"
  syntax:
    content: public override bool IsUserInRole (string username, string roleName);
    parameters:
    - id: username
      type: System.String
      description: "要在表單的 網域 \\ 使用者名稱中搜尋的使用者名稱。"
    - id: roleName
      type: System.String
      description: "要搜尋 DOMAIN\\rolename 表單中的 Windows 群組。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果指定的使用者名稱中指定之 Windows 群組。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.Security.WindowsTokenRoleProvider.IsUserInRole*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>username</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>roleName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "目前正在執行的使用者沒有已驗證<xref href=&quot;System.Security.Principal.WindowsIdentity&quot;></xref>附加至&lt;xref:System.Web.UI.Page.User%2A?displayProperty=fullName&gt;。 對於非 HTTP 狀況，目前正在執行的使用者不需要驗證<xref href=&quot;System.Security.Principal.WindowsIdentity&quot;></xref>附加至&lt;xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName&gt;。       - <code> username </code>不符<xref:System.Security.Principal.WindowsIdentity.Name*>的目前<xref href=&quot;System.Security.Principal.WindowsIdentity&quot;> </xref>。</xref:System.Security.Principal.WindowsIdentity.Name*>       -或者-擷取使用者的 Windows 群組資訊時發生失敗。"
  platform:
  - net462
- uid: System.Web.Security.WindowsTokenRoleProvider.RemoveUsersFromRoles(System.String[],System.String[])
  id: RemoveUsersFromRoles(System.String[],System.String[])
  parent: System.Web.Security.WindowsTokenRoleProvider
  langs:
  - csharp
  name: RemoveUsersFromRoles(String[],String[])
  nameWithType: WindowsTokenRoleProvider.RemoveUsersFromRoles(String[],String[])
  fullName: System.Web.Security.WindowsTokenRoleProvider.RemoveUsersFromRoles(String[],String[])
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Windows 語彙基元角色提供者不支援這個方法。"
  remarks: "這個方法不支援的<xref:System.Web.Security.WindowsTokenRoleProvider>類別，並一律會擲回<xref:System.Configuration.Provider.ProviderException>.</xref:System.Configuration.Provider.ProviderException> </xref:System.Web.Security.WindowsTokenRoleProvider>"
  syntax:
    content: public override void RemoveUsersFromRoles (string[] usernames, string[] roleNames);
    parameters:
    - id: usernames
      type: System.String[]
      description: "要加入至指定的角色的使用者名稱的字串陣列。"
    - id: roleNames
      type: System.String[]
      description: "要加入指定的使用者名稱的角色名稱的字串陣列。"
  overload: System.Web.Security.WindowsTokenRoleProvider.RemoveUsersFromRoles*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "不支援的方法呼叫。"
  platform:
  - net462
- uid: System.Web.Security.WindowsTokenRoleProvider.RoleExists(System.String)
  id: RoleExists(System.String)
  parent: System.Web.Security.WindowsTokenRoleProvider
  langs:
  - csharp
  name: RoleExists(String)
  nameWithType: WindowsTokenRoleProvider.RoleExists(String)
  fullName: System.Web.Security.WindowsTokenRoleProvider.RoleExists(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Windows 語彙基元角色提供者不支援這個方法。"
  syntax:
    content: public override bool RoleExists (string roleName);
    parameters:
    - id: roleName
      type: System.String
      description: "要搜尋的資料來源中的角色名稱。"
    return:
      type: System.Boolean
      description: "無。 此方法不支援<xref href=&quot;System.Web.Security.WindowsTokenRoleProvider&quot;></xref>類別，一律會擲回<xref href=&quot;System.Configuration.Provider.ProviderException&quot;> </xref>。"
  overload: System.Web.Security.WindowsTokenRoleProvider.RoleExists*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "不支援的方法呼叫。"
  platform:
  - net462
references:
- uid: System.Web.Security.RoleProvider
  isExternal: false
  name: System.Web.Security.RoleProvider
- uid: System.Configuration.Provider.ProviderException
  parent: System.Configuration.Provider
  isExternal: false
  name: ProviderException
  nameWithType: ProviderException
  fullName: System.Configuration.Provider.ProviderException
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.Security.WindowsTokenRoleProvider.#ctor
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: WindowsTokenRoleProvider()
  nameWithType: WindowsTokenRoleProvider.WindowsTokenRoleProvider()
  fullName: System.Web.Security.WindowsTokenRoleProvider.WindowsTokenRoleProvider()
- uid: System.Web.Security.WindowsTokenRoleProvider.AddUsersToRoles(System.String[],System.String[])
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: AddUsersToRoles(String[],String[])
  nameWithType: WindowsTokenRoleProvider.AddUsersToRoles(String[],String[])
  fullName: System.Web.Security.WindowsTokenRoleProvider.AddUsersToRoles(String[],String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.Security.WindowsTokenRoleProvider.ApplicationName
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: ApplicationName
  nameWithType: WindowsTokenRoleProvider.ApplicationName
  fullName: System.Web.Security.WindowsTokenRoleProvider.ApplicationName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Security.WindowsTokenRoleProvider.CreateRole(System.String)
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: CreateRole(String)
  nameWithType: WindowsTokenRoleProvider.CreateRole(String)
  fullName: System.Web.Security.WindowsTokenRoleProvider.CreateRole(String)
- uid: System.Web.Security.WindowsTokenRoleProvider.DeleteRole(System.String,System.Boolean)
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: DeleteRole(String,Boolean)
  nameWithType: WindowsTokenRoleProvider.DeleteRole(String,Boolean)
  fullName: System.Web.Security.WindowsTokenRoleProvider.DeleteRole(String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Security.WindowsTokenRoleProvider.FindUsersInRole(System.String,System.String)
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: FindUsersInRole(String,String)
  nameWithType: WindowsTokenRoleProvider.FindUsersInRole(String,String)
  fullName: System.Web.Security.WindowsTokenRoleProvider.FindUsersInRole(String,String)
- uid: System.Web.Security.WindowsTokenRoleProvider.GetAllRoles
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: GetAllRoles()
  nameWithType: WindowsTokenRoleProvider.GetAllRoles()
  fullName: System.Web.Security.WindowsTokenRoleProvider.GetAllRoles()
- uid: System.Web.Security.WindowsTokenRoleProvider.GetRolesForUser(System.String)
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: GetRolesForUser(String)
  nameWithType: WindowsTokenRoleProvider.GetRolesForUser(String)
  fullName: System.Web.Security.WindowsTokenRoleProvider.GetRolesForUser(String)
- uid: System.Web.Security.WindowsTokenRoleProvider.GetUsersInRole(System.String)
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: GetUsersInRole(String)
  nameWithType: WindowsTokenRoleProvider.GetUsersInRole(String)
  fullName: System.Web.Security.WindowsTokenRoleProvider.GetUsersInRole(String)
- uid: System.Web.Security.WindowsTokenRoleProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: Initialize(String,NameValueCollection)
  nameWithType: WindowsTokenRoleProvider.Initialize(String,NameValueCollection)
  fullName: System.Web.Security.WindowsTokenRoleProvider.Initialize(String,NameValueCollection)
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Web.Security.WindowsTokenRoleProvider.IsUserInRole(System.String,System.Security.Principal.WindowsBuiltInRole)
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: IsUserInRole(String,WindowsBuiltInRole)
  nameWithType: WindowsTokenRoleProvider.IsUserInRole(String,WindowsBuiltInRole)
  fullName: System.Web.Security.WindowsTokenRoleProvider.IsUserInRole(String,WindowsBuiltInRole)
- uid: System.Security.Principal.WindowsBuiltInRole
  parent: System.Security.Principal
  isExternal: false
  name: WindowsBuiltInRole
  nameWithType: WindowsBuiltInRole
  fullName: System.Security.Principal.WindowsBuiltInRole
- uid: System.Web.Security.WindowsTokenRoleProvider.IsUserInRole(System.String,System.String)
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: IsUserInRole(String,String)
  nameWithType: WindowsTokenRoleProvider.IsUserInRole(String,String)
  fullName: System.Web.Security.WindowsTokenRoleProvider.IsUserInRole(String,String)
- uid: System.Web.Security.WindowsTokenRoleProvider.RemoveUsersFromRoles(System.String[],System.String[])
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: RemoveUsersFromRoles(String[],String[])
  nameWithType: WindowsTokenRoleProvider.RemoveUsersFromRoles(String[],String[])
  fullName: System.Web.Security.WindowsTokenRoleProvider.RemoveUsersFromRoles(String[],String[])
- uid: System.Web.Security.WindowsTokenRoleProvider.RoleExists(System.String)
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: RoleExists(String)
  nameWithType: WindowsTokenRoleProvider.RoleExists(String)
  fullName: System.Web.Security.WindowsTokenRoleProvider.RoleExists(String)
- uid: System.Web.Security.WindowsTokenRoleProvider.#ctor*
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: WindowsTokenRoleProvider
  nameWithType: WindowsTokenRoleProvider.WindowsTokenRoleProvider
- uid: System.Web.Security.WindowsTokenRoleProvider.AddUsersToRoles*
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: AddUsersToRoles
  nameWithType: WindowsTokenRoleProvider.AddUsersToRoles
- uid: System.Web.Security.WindowsTokenRoleProvider.ApplicationName*
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: ApplicationName
  nameWithType: WindowsTokenRoleProvider.ApplicationName
- uid: System.Web.Security.WindowsTokenRoleProvider.CreateRole*
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: CreateRole
  nameWithType: WindowsTokenRoleProvider.CreateRole
- uid: System.Web.Security.WindowsTokenRoleProvider.DeleteRole*
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: DeleteRole
  nameWithType: WindowsTokenRoleProvider.DeleteRole
- uid: System.Web.Security.WindowsTokenRoleProvider.FindUsersInRole*
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: FindUsersInRole
  nameWithType: WindowsTokenRoleProvider.FindUsersInRole
- uid: System.Web.Security.WindowsTokenRoleProvider.GetAllRoles*
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: GetAllRoles
  nameWithType: WindowsTokenRoleProvider.GetAllRoles
- uid: System.Web.Security.WindowsTokenRoleProvider.GetRolesForUser*
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: GetRolesForUser
  nameWithType: WindowsTokenRoleProvider.GetRolesForUser
- uid: System.Web.Security.WindowsTokenRoleProvider.GetUsersInRole*
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: GetUsersInRole
  nameWithType: WindowsTokenRoleProvider.GetUsersInRole
- uid: System.Web.Security.WindowsTokenRoleProvider.Initialize*
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: Initialize
  nameWithType: WindowsTokenRoleProvider.Initialize
- uid: System.Web.Security.WindowsTokenRoleProvider.IsUserInRole*
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: IsUserInRole
  nameWithType: WindowsTokenRoleProvider.IsUserInRole
- uid: System.Web.Security.WindowsTokenRoleProvider.RemoveUsersFromRoles*
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: RemoveUsersFromRoles
  nameWithType: WindowsTokenRoleProvider.RemoveUsersFromRoles
- uid: System.Web.Security.WindowsTokenRoleProvider.RoleExists*
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: RoleExists
  nameWithType: WindowsTokenRoleProvider.RoleExists
