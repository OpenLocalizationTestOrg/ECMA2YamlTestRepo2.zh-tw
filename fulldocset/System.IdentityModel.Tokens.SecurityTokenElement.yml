### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Tokens.SecurityTokenElement
  id: SecurityTokenElement
  children:
  - System.IdentityModel.Tokens.SecurityTokenElement.#ctor(System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Tokens.SecurityTokenElement.#ctor(System.Xml.XmlElement,System.IdentityModel.Tokens.SecurityTokenHandlerCollection)
  - System.IdentityModel.Tokens.SecurityTokenElement.GetIdentities
  - System.IdentityModel.Tokens.SecurityTokenElement.GetSecurityToken
  - System.IdentityModel.Tokens.SecurityTokenElement.ReadSecurityToken(System.Xml.XmlElement,System.IdentityModel.Tokens.SecurityTokenHandlerCollection)
  - System.IdentityModel.Tokens.SecurityTokenElement.SecurityTokenXml
  - System.IdentityModel.Tokens.SecurityTokenElement.ValidateToken(System.Xml.XmlElement,System.IdentityModel.Tokens.SecurityTokenHandlerCollection)
  langs:
  - csharp
  name: SecurityTokenElement
  nameWithType: SecurityTokenElement
  fullName: System.IdentityModel.Tokens.SecurityTokenElement
  type: Class
  summary: "表示數字的項目中找到<xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityToken&quot;></xref>代表安全性權杖。"
  remarks: "此類別不具備執行緒安全。"
  syntax:
    content: public class SecurityTokenElement
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityTokenElement.#ctor(System.IdentityModel.Tokens.SecurityToken)
  id: '#ctor(System.IdentityModel.Tokens.SecurityToken)'
  parent: System.IdentityModel.Tokens.SecurityTokenElement
  langs:
  - csharp
  name: SecurityTokenElement(SecurityToken)
  nameWithType: SecurityTokenElement.SecurityTokenElement(SecurityToken)
  fullName: System.IdentityModel.Tokens.SecurityTokenElement.SecurityTokenElement(SecurityToken)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "初始化的新執行個體<xref href=&quot;System.IdentityModel.Tokens.SecurityTokenElement&quot;></xref>類別使用<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;></xref>物件。"
  remarks: "使用這個建構函式時，<xref:System.IdentityModel.Tokens.SecurityTokenElement.GetIdentities%2A>除非方法不支援新的執行個體<xref:System.IdentityModel.Tokens.SecurityTokenElement.CreateSubject%2A>會覆寫方法。</xref:System.IdentityModel.Tokens.SecurityTokenElement.CreateSubject%2A> </xref:System.IdentityModel.Tokens.SecurityTokenElement.GetIdentities%2A>       如果`securityToken`參數是的執行個體<xref:System.IdentityModel.Tokens.GenericXmlSecurityToken>則<xref:System.IdentityModel.Tokens.SecurityTokenElement.SecurityTokenXml%2A>屬性設定的值為<xref:System.IdentityModel.Tokens.GenericXmlSecurityToken.TokenXml%2A?displayProperty=fullName>屬性。</xref:System.IdentityModel.Tokens.GenericXmlSecurityToken.TokenXml%2A?displayProperty=fullName> </xref:System.IdentityModel.Tokens.SecurityTokenElement.SecurityTokenXml%2A> </xref:System.IdentityModel.Tokens.GenericXmlSecurityToken>"
  syntax:
    content: public SecurityTokenElement (System.IdentityModel.Tokens.SecurityToken securityToken);
    parameters:
    - id: securityToken
      type: System.IdentityModel.Tokens.SecurityToken
      description: "新的執行個體代表安全性權杖。"
  overload: System.IdentityModel.Tokens.SecurityTokenElement.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityTokenElement.#ctor(System.Xml.XmlElement,System.IdentityModel.Tokens.SecurityTokenHandlerCollection)
  id: '#ctor(System.Xml.XmlElement,System.IdentityModel.Tokens.SecurityTokenHandlerCollection)'
  parent: System.IdentityModel.Tokens.SecurityTokenElement
  langs:
  - csharp
  name: SecurityTokenElement(XmlElement,SecurityTokenHandlerCollection)
  nameWithType: SecurityTokenElement.SecurityTokenElement(XmlElement,SecurityTokenHandlerCollection)
  fullName: System.IdentityModel.Tokens.SecurityTokenElement.SecurityTokenElement(XmlElement,SecurityTokenHandlerCollection)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "初始化的新執行個體<xref href=&quot;System.IdentityModel.Tokens.SecurityTokenElement&quot;></xref>使用指定的 XML 表示法，安全性權杖的類別。"
  syntax:
    content: public SecurityTokenElement (System.Xml.XmlElement securityTokenXml, System.IdentityModel.Tokens.SecurityTokenHandlerCollection securityTokenHandlers);
    parameters:
    - id: securityTokenXml
      type: System.Xml.XmlElement
      description: "安全性權杖 XML 表示法。"
    - id: securityTokenHandlers
      type: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
      description: "用來讀取和驗證的新執行個體所包裝的安全性權杖的預設權杖處理常式集合。"
  overload: System.IdentityModel.Tokens.SecurityTokenElement.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityTokenElement.GetIdentities
  id: GetIdentities
  parent: System.IdentityModel.Tokens.SecurityTokenElement
  langs:
  - csharp
  name: GetIdentities()
  nameWithType: SecurityTokenElement.GetIdentities()
  fullName: System.IdentityModel.Tokens.SecurityTokenElement.GetIdentities()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "取得包含在包裝權杖之身分識別。"
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Security.Claims.ClaimsIdentity> GetIdentities ();
    parameters: []
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Security.Claims.ClaimsIdentity}
      description: "在權杖中所包含之身分識別。"
  overload: System.IdentityModel.Tokens.SecurityTokenElement.GetIdentities*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityTokenElement.GetSecurityToken
  id: GetSecurityToken
  parent: System.IdentityModel.Tokens.SecurityTokenElement
  langs:
  - csharp
  name: GetSecurityToken()
  nameWithType: SecurityTokenElement.GetSecurityToken()
  fullName: System.IdentityModel.Tokens.SecurityTokenElement.GetSecurityToken()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "取得目前的執行個體所表示之安全性權杖。"
  remarks: "如果目前的執行個體而未從明確建構<xref:System.IdentityModel.Tokens.SecurityToken>物件使用<xref:System.IdentityModel.Tokens.SecurityTokenElement.%23ctor%28System.IdentityModel.Tokens.SecurityToken%29?displayProperty=fullName>建構函式，則<xref:System.IdentityModel.Tokens.SecurityTokenElement.ReadSecurityToken%2A>方法呼叫以傳回安全性權杖。</xref:System.IdentityModel.Tokens.SecurityTokenElement.ReadSecurityToken%2A> </xref:System.IdentityModel.Tokens.SecurityTokenElement.%23ctor%28System.IdentityModel.Tokens.SecurityToken%29?displayProperty=fullName> </xref:System.IdentityModel.Tokens.SecurityToken>"
  syntax:
    content: public System.IdentityModel.Tokens.SecurityToken GetSecurityToken ();
    parameters: []
    return:
      type: System.IdentityModel.Tokens.SecurityToken
      description: "目前的執行個體代表安全性權杖。"
  overload: System.IdentityModel.Tokens.SecurityTokenElement.GetSecurityToken*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityTokenElement.ReadSecurityToken(System.Xml.XmlElement,System.IdentityModel.Tokens.SecurityTokenHandlerCollection)
  id: ReadSecurityToken(System.Xml.XmlElement,System.IdentityModel.Tokens.SecurityTokenHandlerCollection)
  parent: System.IdentityModel.Tokens.SecurityTokenElement
  langs:
  - csharp
  name: ReadSecurityToken(XmlElement,SecurityTokenHandlerCollection)
  nameWithType: SecurityTokenElement.ReadSecurityToken(XmlElement,SecurityTokenHandlerCollection)
  fullName: System.IdentityModel.Tokens.SecurityTokenElement.ReadSecurityToken(XmlElement,SecurityTokenHandlerCollection)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "還原序列化<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;></xref>從指定的 XML 表示法。"
  syntax:
    content: protected virtual System.IdentityModel.Tokens.SecurityToken ReadSecurityToken (System.Xml.XmlElement securityTokenXml, System.IdentityModel.Tokens.SecurityTokenHandlerCollection securityTokenHandlers);
    parameters:
    - id: securityTokenXml
      type: System.Xml.XmlElement
      description: "安全性權杖 XML 表示法。"
    - id: securityTokenHandlers
      type: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
      description: "要用來讀取權杖的權杖處理常式集合。"
    return:
      type: System.IdentityModel.Tokens.SecurityToken
      description: "從 XML 還原序列化安全性權杖。"
  overload: System.IdentityModel.Tokens.SecurityTokenElement.ReadSecurityToken*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityTokenElement.SecurityTokenXml
  id: SecurityTokenXml
  parent: System.IdentityModel.Tokens.SecurityTokenElement
  langs:
  - csharp
  name: SecurityTokenXml
  nameWithType: SecurityTokenElement.SecurityTokenXml
  fullName: System.IdentityModel.Tokens.SecurityTokenElement.SecurityTokenXml
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "取得包裝的語彙基元的 XML 表示法。"
  remarks: "這個屬性是`null`除非目前的執行個體已初始化使用<xref:System.IdentityModel.Tokens.SecurityTokenElement.%23ctor%28System.Xml.XmlElement%2CSystem.IdentityModel.Tokens.SecurityTokenHandlerCollection%29?displayProperty=fullName>建構函式。</xref:System.IdentityModel.Tokens.SecurityTokenElement.%23ctor%28System.Xml.XmlElement%2CSystem.IdentityModel.Tokens.SecurityTokenHandlerCollection%29?displayProperty=fullName>"
  syntax:
    content: public System.Xml.XmlElement SecurityTokenXml { get; }
    return:
      type: System.Xml.XmlElement
      description: "權杖 XML 表示法。"
  overload: System.IdentityModel.Tokens.SecurityTokenElement.SecurityTokenXml*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityTokenElement.ValidateToken(System.Xml.XmlElement,System.IdentityModel.Tokens.SecurityTokenHandlerCollection)
  id: ValidateToken(System.Xml.XmlElement,System.IdentityModel.Tokens.SecurityTokenHandlerCollection)
  parent: System.IdentityModel.Tokens.SecurityTokenElement
  langs:
  - csharp
  name: ValidateToken(XmlElement,SecurityTokenHandlerCollection)
  nameWithType: SecurityTokenElement.ValidateToken(XmlElement,SecurityTokenHandlerCollection)
  fullName: System.IdentityModel.Tokens.SecurityTokenElement.ValidateToken(XmlElement,SecurityTokenHandlerCollection)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "建立包含身分識別中指定的安全性權杖的 XML 表示法。"
  syntax:
    content: protected virtual System.Collections.ObjectModel.ReadOnlyCollection<System.Security.Claims.ClaimsIdentity> ValidateToken (System.Xml.XmlElement securityTokenXml, System.IdentityModel.Tokens.SecurityTokenHandlerCollection securityTokenHandlers);
    parameters:
    - id: securityTokenXml
      type: System.Xml.XmlElement
      description: "安全性權杖 XML 表示法。"
    - id: securityTokenHandlers
      type: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
      description: "要用來讀取權杖的權杖處理常式集合。"
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Security.Claims.ClaimsIdentity}
      description: "在權杖中所包含之身分識別。"
  overload: System.IdentityModel.Tokens.SecurityTokenElement.ValidateToken*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>securityTokenXml</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>securityTokenHandlers</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.IdentityModel.Tokens.SecurityTokenElement.#ctor(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Tokens.SecurityTokenElement
  isExternal: false
  name: SecurityTokenElement(SecurityToken)
  nameWithType: SecurityTokenElement.SecurityTokenElement(SecurityToken)
  fullName: System.IdentityModel.Tokens.SecurityTokenElement.SecurityTokenElement(SecurityToken)
- uid: System.IdentityModel.Tokens.SecurityToken
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityToken
  nameWithType: SecurityToken
  fullName: System.IdentityModel.Tokens.SecurityToken
- uid: System.IdentityModel.Tokens.SecurityTokenElement.#ctor(System.Xml.XmlElement,System.IdentityModel.Tokens.SecurityTokenHandlerCollection)
  parent: System.IdentityModel.Tokens.SecurityTokenElement
  isExternal: false
  name: SecurityTokenElement(XmlElement,SecurityTokenHandlerCollection)
  nameWithType: SecurityTokenElement.SecurityTokenElement(XmlElement,SecurityTokenHandlerCollection)
  fullName: System.IdentityModel.Tokens.SecurityTokenElement.SecurityTokenElement(XmlElement,SecurityTokenHandlerCollection)
- uid: System.Xml.XmlElement
  parent: System.Xml
  isExternal: false
  name: XmlElement
  nameWithType: XmlElement
  fullName: System.Xml.XmlElement
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityTokenHandlerCollection
  nameWithType: SecurityTokenHandlerCollection
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
- uid: System.IdentityModel.Tokens.SecurityTokenElement.GetIdentities
  parent: System.IdentityModel.Tokens.SecurityTokenElement
  isExternal: false
  name: GetIdentities()
  nameWithType: SecurityTokenElement.GetIdentities()
  fullName: System.IdentityModel.Tokens.SecurityTokenElement.GetIdentities()
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Security.Claims.ClaimsIdentity}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<ClaimsIdentity>
  nameWithType: ReadOnlyCollection<ClaimsIdentity>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Security.Claims.ClaimsIdentity>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Security.Claims.ClaimsIdentity>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Security.Claims.ClaimsIdentity
    name: ClaimsIdentity
    nameWithType: ClaimsIdentity
    fullName: ClaimsIdentity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Tokens.SecurityTokenElement.GetSecurityToken
  parent: System.IdentityModel.Tokens.SecurityTokenElement
  isExternal: false
  name: GetSecurityToken()
  nameWithType: SecurityTokenElement.GetSecurityToken()
  fullName: System.IdentityModel.Tokens.SecurityTokenElement.GetSecurityToken()
- uid: System.IdentityModel.Tokens.SecurityTokenElement.ReadSecurityToken(System.Xml.XmlElement,System.IdentityModel.Tokens.SecurityTokenHandlerCollection)
  parent: System.IdentityModel.Tokens.SecurityTokenElement
  isExternal: false
  name: ReadSecurityToken(XmlElement,SecurityTokenHandlerCollection)
  nameWithType: SecurityTokenElement.ReadSecurityToken(XmlElement,SecurityTokenHandlerCollection)
  fullName: System.IdentityModel.Tokens.SecurityTokenElement.ReadSecurityToken(XmlElement,SecurityTokenHandlerCollection)
- uid: System.IdentityModel.Tokens.SecurityTokenElement.SecurityTokenXml
  parent: System.IdentityModel.Tokens.SecurityTokenElement
  isExternal: false
  name: SecurityTokenXml
  nameWithType: SecurityTokenElement.SecurityTokenXml
  fullName: System.IdentityModel.Tokens.SecurityTokenElement.SecurityTokenXml
- uid: System.IdentityModel.Tokens.SecurityTokenElement.ValidateToken(System.Xml.XmlElement,System.IdentityModel.Tokens.SecurityTokenHandlerCollection)
  parent: System.IdentityModel.Tokens.SecurityTokenElement
  isExternal: false
  name: ValidateToken(XmlElement,SecurityTokenHandlerCollection)
  nameWithType: SecurityTokenElement.ValidateToken(XmlElement,SecurityTokenHandlerCollection)
  fullName: System.IdentityModel.Tokens.SecurityTokenElement.ValidateToken(XmlElement,SecurityTokenHandlerCollection)
- uid: System.IdentityModel.Tokens.SecurityTokenElement.#ctor*
  parent: System.IdentityModel.Tokens.SecurityTokenElement
  isExternal: false
  name: SecurityTokenElement
  nameWithType: SecurityTokenElement.SecurityTokenElement
- uid: System.IdentityModel.Tokens.SecurityTokenElement.GetIdentities*
  parent: System.IdentityModel.Tokens.SecurityTokenElement
  isExternal: false
  name: GetIdentities
  nameWithType: SecurityTokenElement.GetIdentities
- uid: System.IdentityModel.Tokens.SecurityTokenElement.GetSecurityToken*
  parent: System.IdentityModel.Tokens.SecurityTokenElement
  isExternal: false
  name: GetSecurityToken
  nameWithType: SecurityTokenElement.GetSecurityToken
- uid: System.IdentityModel.Tokens.SecurityTokenElement.ReadSecurityToken*
  parent: System.IdentityModel.Tokens.SecurityTokenElement
  isExternal: false
  name: ReadSecurityToken
  nameWithType: SecurityTokenElement.ReadSecurityToken
- uid: System.IdentityModel.Tokens.SecurityTokenElement.SecurityTokenXml*
  parent: System.IdentityModel.Tokens.SecurityTokenElement
  isExternal: false
  name: SecurityTokenXml
  nameWithType: SecurityTokenElement.SecurityTokenXml
- uid: System.IdentityModel.Tokens.SecurityTokenElement.ValidateToken*
  parent: System.IdentityModel.Tokens.SecurityTokenElement
  isExternal: false
  name: ValidateToken
  nameWithType: SecurityTokenElement.ValidateToken
