### YamlMime:ManagedReference
items:
- uid: System.Web.UI.FilterableAttribute
  id: FilterableAttribute
  children:
  - System.Web.UI.FilterableAttribute.#ctor(System.Boolean)
  - System.Web.UI.FilterableAttribute.Default
  - System.Web.UI.FilterableAttribute.Equals(System.Object)
  - System.Web.UI.FilterableAttribute.Filterable
  - System.Web.UI.FilterableAttribute.GetHashCode
  - System.Web.UI.FilterableAttribute.IsDefaultAttribute
  - System.Web.UI.FilterableAttribute.IsObjectFilterable(System.Object)
  - System.Web.UI.FilterableAttribute.IsPropertyFilterable(System.ComponentModel.PropertyDescriptor)
  - System.Web.UI.FilterableAttribute.IsTypeFilterable(System.Type)
  - System.Web.UI.FilterableAttribute.No
  - System.Web.UI.FilterableAttribute.Yes
  langs:
  - csharp
  name: FilterableAttribute
  nameWithType: FilterableAttribute
  fullName: System.Web.UI.FilterableAttribute
  type: Class
  summary: "指定要套用屬性的屬性是否支援裝置篩選。 這個類別無法被繼承。"
  remarks: "FilterableAttribute 屬性套用至指定屬性是否支援裝置篩選的屬性。 當某個屬性支援裝置篩選時，您可以指定裝置篩選條件來覆寫特定裝置的屬性值。 根據預設，屬性都是可篩選，讓控制項開發人員可能會導致裝置上的屬性篩選 FilterableAttribute 屬性設定為`false`。 如需詳細資訊，請參閱[自訂特定裝置](http://msdn.microsoft.com/en-us/a7f55dfa-290b-45f8-bf8f-d5a4540bae61)。       如需屬性用法的詳細資訊，請參閱[屬性](~/add/includes/ajax-current-ext-md.md)。       如需 FilterableAttribute 類別的執行個體的初始屬性值的清單，請參閱<xref:System.Web.UI.FilterableAttribute.%23ctor%2A>建構函式。</xref:System.Web.UI.FilterableAttribute.%23ctor%2A>"
  example:
  - "The following code example demonstrates how to apply a FilterableAttribute attribute to a property of a custom control to indicate that the property does not support device filtering.  \n  \n [!code-vb[FilterableAttribute_2#1](~/add/codesnippet/visualbasic/t-system.web.ui.filterab_1.vb)]\n [!code-cs[FilterableAttribute_2#1](~/add/codesnippet/csharp/t-system.web.ui.filterab_1.cs)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Property)]

      public sealed class FilterableAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.FilterableAttribute.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: System.Web.UI.FilterableAttribute
  langs:
  - csharp
  name: FilterableAttribute(Boolean)
  nameWithType: FilterableAttribute.FilterableAttribute(Boolean)
  fullName: System.Web.UI.FilterableAttribute.FilterableAttribute(Boolean)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "初始化的新執行個體<xref href=&quot;System.Web.UI.FilterableAttribute&quot;></xref>類別。"
  remarks: "若要建立<xref:System.Web.UI.FilterableAttribute>類別</xref:System.Web.UI.FilterableAttribute>的新執行個體使用這個建構函式 下表顯示的<xref:System.Web.UI.FilterableAttribute>類別</xref:System.Web.UI.FilterableAttribute>執行個體的初始屬性值      |屬性 |初始值 |  |--------------|-------------------|  |<xref:System.Web.UI.FilterableAttribute.Filterable%2A>|值`filterable`參數。 |</xref:System.Web.UI.FilterableAttribute.Filterable%2A>"
  example:
  - "The following code example demonstrates how to apply a <xref:System.Web.UI.FilterableAttribute> attribute to a property of a custom control. This constructor is called internally by ASP.NET to create a <xref:System.Web.UI.FilterableAttribute> object that represents the attribute.  \n  \n [!code-vb[FilterableAttribute_2#1](~/add/codesnippet/visualbasic/m-system.web.ui.filterab_1.vb)]\n [!code-cs[FilterableAttribute_2#1](~/add/codesnippet/csharp/m-system.web.ui.filterab_1.cs)]"
  syntax:
    content: public FilterableAttribute (bool filterable);
    parameters:
    - id: filterable
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>表示套用屬性的屬性支援的裝置篩選;否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.FilterableAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.FilterableAttribute.Default
  id: Default
  parent: System.Web.UI.FilterableAttribute
  langs:
  - csharp
  name: Default
  nameWithType: FilterableAttribute.Default
  fullName: System.Web.UI.FilterableAttribute.Default
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "代表預先定義<xref href=&quot;System.Web.UI.FilterableAttribute&quot;></xref>以預設屬性值的物件。 此欄位為唯讀。"
  remarks: "表示預先定義預設欄位<xref:System.Web.UI.FilterableAttribute>以預設屬性值的物件。</xref:System.Web.UI.FilterableAttribute> 比較時，通常會使用這個欄位<xref:System.Web.UI.FilterableAttribute>物件與預先定義的物件。</xref:System.Web.UI.FilterableAttribute>      > [!NOTE] > 是相同的預設欄位<xref:System.Web.UI.FilterableAttribute>物件所代表<xref:System.Web.UI.FilterableAttribute>欄位。</xref:System.Web.UI.FilterableAttribute> </xref:System.Web.UI.FilterableAttribute>"
  syntax:
    content: public static readonly System.Web.UI.FilterableAttribute Default;
    return:
      type: System.Web.UI.FilterableAttribute
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.FilterableAttribute.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Web.UI.FilterableAttribute
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: FilterableAttribute.Equals(Object)
  fullName: System.Web.UI.FilterableAttribute.Equals(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "決定是否目前的執行個體<xref href=&quot;System.Web.UI.FilterableAttribute&quot;></xref>類別是否等於指定的物件。"
  remarks: "使用 Equals 方法來判斷是否目前的執行個體<xref:System.Web.UI.FilterableAttribute>類別是否等於指定的物件。</xref:System.Web.UI.FilterableAttribute> 若是相等的物件，必須符合下列條件︰ 1。  中包含的物件`obj`參數必須是<xref:System.Web.UI.FilterableAttribute>物件。</xref:System.Web.UI.FilterableAttribute>      2.  <xref:System.Web.UI.FilterableAttribute.Filterable%2A>這兩個物件的屬性必須相等。</xref:System.Web.UI.FilterableAttribute.Filterable%2A>      > [!NOTE] > 主要由控制項開發人員使用這個方法。"
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "<xref:System.Object>與這個執行個體相比較。</xref:System.Object>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果物件包含在<code> obj </code>參數等於目前的執行個體<xref href=&quot;System.Web.UI.FilterableAttribute&quot;></xref>物件; 否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.FilterableAttribute.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.FilterableAttribute.Filterable
  id: Filterable
  parent: System.Web.UI.FilterableAttribute
  langs:
  - csharp
  name: Filterable
  nameWithType: FilterableAttribute.Filterable
  fullName: System.Web.UI.FilterableAttribute.Filterable
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得值，指出是否要屬性<xref href=&quot;System.Web.UI.FilterableAttribute&quot;></xref>屬性適用於支援裝置篩選。"
  remarks: "使用可篩選的屬性來決定是否要屬性<xref:System.Web.UI.FilterableAttribute>屬性適用於支援裝置篩選。</xref:System.Web.UI.FilterableAttribute> 當某個屬性支援裝置篩選時，您可以指定裝置篩選條件來覆寫特定裝置的屬性值。 如需詳細資訊，請參閱[自訂特定裝置](http://msdn.microsoft.com/en-us/a7f55dfa-290b-45f8-bf8f-d5a4540bae61)。"
  example:
  - "The following code example demonstrates how to apply a <xref:System.Web.UI.FilterableAttribute> attribute to a property of a custom control to indicate that the property does not support device filtering.  \n  \n [!code-vb[FilterableAttribute_2#1](~/add/codesnippet/visualbasic/p-system.web.ui.filterab_1.vb)]\n [!code-cs[FilterableAttribute_2#1](~/add/codesnippet/csharp/p-system.web.ui.filterab_1.cs)]"
  syntax:
    content: public bool Filterable { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>表示套用屬性的屬性支援的裝置篩選;否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.FilterableAttribute.Filterable*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.FilterableAttribute.GetHashCode
  id: GetHashCode
  parent: System.Web.UI.FilterableAttribute
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: FilterableAttribute.GetHashCode()
  fullName: System.Web.UI.FilterableAttribute.GetHashCode()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "傳回這個執行個體的雜湊碼。"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "32 位元帶正負號的整數雜湊碼。"
  overload: System.Web.UI.FilterableAttribute.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.FilterableAttribute.IsDefaultAttribute
  id: IsDefaultAttribute
  parent: System.Web.UI.FilterableAttribute
  langs:
  - csharp
  name: IsDefaultAttribute()
  nameWithType: FilterableAttribute.IsDefaultAttribute()
  fullName: System.Web.UI.FilterableAttribute.IsDefaultAttribute()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "決定是否目前的執行個體<xref href=&quot;System.Web.UI.FilterableAttribute&quot;></xref>類別等於<xref href=&quot;System.Web.UI.FilterableAttribute.Default&quot;></xref>屬性。"
  remarks: "IsDefaultAttribute 方法是 helper 方法由 ASP.NET 用來判斷是否目前的執行個體<xref:System.Web.UI.FilterableAttribute>類別等於<xref:System.Web.UI.FilterableAttribute>中所含物件<xref:System.Web.UI.FilterableAttribute.Default>欄位。</xref:System.Web.UI.FilterableAttribute.Default> </xref:System.Web.UI.FilterableAttribute> </xref:System.Web.UI.FilterableAttribute>"
  syntax:
    content: public override bool IsDefaultAttribute ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果目前的執行個體<xref href=&quot;System.Web.UI.FilterableAttribute&quot;></xref>等於<xref href=&quot;System.Web.UI.FilterableAttribute.Default&quot;> </xref>，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.FilterableAttribute.IsDefaultAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.FilterableAttribute.IsObjectFilterable(System.Object)
  id: IsObjectFilterable(System.Object)
  parent: System.Web.UI.FilterableAttribute
  langs:
  - csharp
  name: IsObjectFilterable(Object)
  nameWithType: FilterableAttribute.IsObjectFilterable(Object)
  fullName: System.Web.UI.FilterableAttribute.IsObjectFilterable(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "決定是否指定<xref:System.Object>支援裝置篩選。</xref:System.Object>"
  remarks: "使用 IsObjectFilterable 方法來判斷是否指定<xref:System.Object>支援裝置篩選。</xref:System.Object>      > [!NOTE] > 物件支援其資料類型支援的裝置篩選的裝置篩選。 如需詳細資訊，請參閱<xref:System.Web.UI.FilterableAttribute.IsTypeFilterable%2A>屬性。</xref:System.Web.UI.FilterableAttribute.IsTypeFilterable%2A>"
  syntax:
    content: public static bool IsObjectFilterable (object instance);
    parameters:
    - id: instance
      type: System.Object
      description: "<xref:System.Object>若要測試。</xref:System.Object>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref:System.Object>中包含<code> instance </code>參數支援裝置篩選，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Object>"
  overload: System.Web.UI.FilterableAttribute.IsObjectFilterable*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>instance</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.FilterableAttribute.IsPropertyFilterable(System.ComponentModel.PropertyDescriptor)
  id: IsPropertyFilterable(System.ComponentModel.PropertyDescriptor)
  parent: System.Web.UI.FilterableAttribute
  langs:
  - csharp
  name: IsPropertyFilterable(PropertyDescriptor)
  nameWithType: FilterableAttribute.IsPropertyFilterable(PropertyDescriptor)
  fullName: System.Web.UI.FilterableAttribute.IsPropertyFilterable(PropertyDescriptor)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "判斷屬性是否支援裝置篩選。"
  remarks: "若要判斷屬性是否支援裝置篩選使用 IsPropertyFilterable 方法。 若要使用此方法，您必須傳遞<xref:System.ComponentModel.PropertyDescriptor>物件，其中包含要測試之屬性的屬性</xref:System.ComponentModel.PropertyDescriptor>中"
  syntax:
    content: public static bool IsPropertyFilterable (System.ComponentModel.PropertyDescriptor propertyDescriptor);
    parameters:
    - id: propertyDescriptor
      type: System.ComponentModel.PropertyDescriptor
      description: "A <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> ，其中包含要測試之屬性的屬性。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果屬性以表示<xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;></xref>中所含物件<code> propertyDescriptor </code>參數支援裝置篩選，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.FilterableAttribute.IsPropertyFilterable*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.FilterableAttribute.IsTypeFilterable(System.Type)
  id: IsTypeFilterable(System.Type)
  parent: System.Web.UI.FilterableAttribute
  langs:
  - csharp
  name: IsTypeFilterable(Type)
  nameWithType: FilterableAttribute.IsTypeFilterable(Type)
  fullName: System.Web.UI.FilterableAttribute.IsTypeFilterable(Type)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "判斷指定的資料類型是否支援裝置篩選。"
  remarks: "您可以使用 IsTypeFilterable 方法來判斷指定的型別是否支援裝置篩選。 型別支援裝置篩選有<xref:System.Web.UI.FilterableAttribute>屬性套用至它。</xref:System.Web.UI.FilterableAttribute>"
  syntax:
    content: public static bool IsTypeFilterable (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "<xref:System.Type>表示要測試的資料類型</xref:System.Type>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果資料類型包含在<code> type </code>參數支援裝置篩選，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.FilterableAttribute.IsTypeFilterable*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>type</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.FilterableAttribute.No
  id: No
  parent: System.Web.UI.FilterableAttribute
  langs:
  - csharp
  name: No
  nameWithType: FilterableAttribute.No
  fullName: System.Web.UI.FilterableAttribute.No
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "代表預先定義<xref href=&quot;System.Web.UI.FilterableAttribute&quot;></xref>指出屬性不支援裝置篩選的物件。 此欄位為唯讀。"
  remarks: "[否] 欄位代表預先定義<xref:System.Web.UI.FilterableAttribute>指出屬性不支援裝置篩選的物件。</xref:System.Web.UI.FilterableAttribute> 比較時，通常會使用這個欄位<xref:System.Web.UI.FilterableAttribute>到預先定義的物件<xref:System.Web.UI.FilterableAttribute>物件。</xref:System.Web.UI.FilterableAttribute> </xref:System.Web.UI.FilterableAttribute>"
  syntax:
    content: public static readonly System.Web.UI.FilterableAttribute No;
    return:
      type: System.Web.UI.FilterableAttribute
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.FilterableAttribute.Yes
  id: Yes
  parent: System.Web.UI.FilterableAttribute
  langs:
  - csharp
  name: Yes
  nameWithType: FilterableAttribute.Yes
  fullName: System.Web.UI.FilterableAttribute.Yes
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "代表預先定義<xref href=&quot;System.Web.UI.FilterableAttribute&quot;></xref>指出某個屬性支援的裝置篩選的物件。 此欄位為唯讀。"
  remarks: "[是] 欄位代表預先定義<xref:System.Web.UI.FilterableAttribute>指出某個屬性支援的裝置篩選的物件。</xref:System.Web.UI.FilterableAttribute> 比較時，通常會使用這個欄位<xref:System.Web.UI.FilterableAttribute>到預先定義的物件<xref:System.Web.UI.FilterableAttribute>物件。</xref:System.Web.UI.FilterableAttribute> </xref:System.Web.UI.FilterableAttribute>      > [!NOTE] >，這是預設<xref:System.Web.UI.FilterableAttribute>物件。</xref:System.Web.UI.FilterableAttribute>"
  syntax:
    content: public static readonly System.Web.UI.FilterableAttribute Yes;
    return:
      type: System.Web.UI.FilterableAttribute
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.UI.FilterableAttribute.#ctor(System.Boolean)
  parent: System.Web.UI.FilterableAttribute
  isExternal: false
  name: FilterableAttribute(Boolean)
  nameWithType: FilterableAttribute.FilterableAttribute(Boolean)
  fullName: System.Web.UI.FilterableAttribute.FilterableAttribute(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.FilterableAttribute.Default
  parent: System.Web.UI.FilterableAttribute
  isExternal: false
  name: Default
  nameWithType: FilterableAttribute.Default
  fullName: System.Web.UI.FilterableAttribute.Default
- uid: System.Web.UI.FilterableAttribute
  parent: System.Web.UI
  isExternal: false
  name: FilterableAttribute
  nameWithType: FilterableAttribute
  fullName: System.Web.UI.FilterableAttribute
- uid: System.Web.UI.FilterableAttribute.Equals(System.Object)
  parent: System.Web.UI.FilterableAttribute
  isExternal: false
  name: Equals(Object)
  nameWithType: FilterableAttribute.Equals(Object)
  fullName: System.Web.UI.FilterableAttribute.Equals(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.FilterableAttribute.Filterable
  parent: System.Web.UI.FilterableAttribute
  isExternal: false
  name: Filterable
  nameWithType: FilterableAttribute.Filterable
  fullName: System.Web.UI.FilterableAttribute.Filterable
- uid: System.Web.UI.FilterableAttribute.GetHashCode
  parent: System.Web.UI.FilterableAttribute
  isExternal: false
  name: GetHashCode()
  nameWithType: FilterableAttribute.GetHashCode()
  fullName: System.Web.UI.FilterableAttribute.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.FilterableAttribute.IsDefaultAttribute
  parent: System.Web.UI.FilterableAttribute
  isExternal: false
  name: IsDefaultAttribute()
  nameWithType: FilterableAttribute.IsDefaultAttribute()
  fullName: System.Web.UI.FilterableAttribute.IsDefaultAttribute()
- uid: System.Web.UI.FilterableAttribute.IsObjectFilterable(System.Object)
  parent: System.Web.UI.FilterableAttribute
  isExternal: false
  name: IsObjectFilterable(Object)
  nameWithType: FilterableAttribute.IsObjectFilterable(Object)
  fullName: System.Web.UI.FilterableAttribute.IsObjectFilterable(Object)
- uid: System.Web.UI.FilterableAttribute.IsPropertyFilterable(System.ComponentModel.PropertyDescriptor)
  parent: System.Web.UI.FilterableAttribute
  isExternal: false
  name: IsPropertyFilterable(PropertyDescriptor)
  nameWithType: FilterableAttribute.IsPropertyFilterable(PropertyDescriptor)
  fullName: System.Web.UI.FilterableAttribute.IsPropertyFilterable(PropertyDescriptor)
- uid: System.ComponentModel.PropertyDescriptor
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptor
  nameWithType: PropertyDescriptor
  fullName: System.ComponentModel.PropertyDescriptor
- uid: System.Web.UI.FilterableAttribute.IsTypeFilterable(System.Type)
  parent: System.Web.UI.FilterableAttribute
  isExternal: false
  name: IsTypeFilterable(Type)
  nameWithType: FilterableAttribute.IsTypeFilterable(Type)
  fullName: System.Web.UI.FilterableAttribute.IsTypeFilterable(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.UI.FilterableAttribute.No
  parent: System.Web.UI.FilterableAttribute
  isExternal: false
  name: No
  nameWithType: FilterableAttribute.No
  fullName: System.Web.UI.FilterableAttribute.No
- uid: System.Web.UI.FilterableAttribute.Yes
  parent: System.Web.UI.FilterableAttribute
  isExternal: false
  name: Yes
  nameWithType: FilterableAttribute.Yes
  fullName: System.Web.UI.FilterableAttribute.Yes
- uid: System.Web.UI.FilterableAttribute.#ctor*
  parent: System.Web.UI.FilterableAttribute
  isExternal: false
  name: FilterableAttribute
  nameWithType: FilterableAttribute.FilterableAttribute
- uid: System.Web.UI.FilterableAttribute.Equals*
  parent: System.Web.UI.FilterableAttribute
  isExternal: false
  name: Equals
  nameWithType: FilterableAttribute.Equals
- uid: System.Web.UI.FilterableAttribute.Filterable*
  parent: System.Web.UI.FilterableAttribute
  isExternal: false
  name: Filterable
  nameWithType: FilterableAttribute.Filterable
- uid: System.Web.UI.FilterableAttribute.GetHashCode*
  parent: System.Web.UI.FilterableAttribute
  isExternal: false
  name: GetHashCode
  nameWithType: FilterableAttribute.GetHashCode
- uid: System.Web.UI.FilterableAttribute.IsDefaultAttribute*
  parent: System.Web.UI.FilterableAttribute
  isExternal: false
  name: IsDefaultAttribute
  nameWithType: FilterableAttribute.IsDefaultAttribute
- uid: System.Web.UI.FilterableAttribute.IsObjectFilterable*
  parent: System.Web.UI.FilterableAttribute
  isExternal: false
  name: IsObjectFilterable
  nameWithType: FilterableAttribute.IsObjectFilterable
- uid: System.Web.UI.FilterableAttribute.IsPropertyFilterable*
  parent: System.Web.UI.FilterableAttribute
  isExternal: false
  name: IsPropertyFilterable
  nameWithType: FilterableAttribute.IsPropertyFilterable
- uid: System.Web.UI.FilterableAttribute.IsTypeFilterable*
  parent: System.Web.UI.FilterableAttribute
  isExternal: false
  name: IsTypeFilterable
  nameWithType: FilterableAttribute.IsTypeFilterable
