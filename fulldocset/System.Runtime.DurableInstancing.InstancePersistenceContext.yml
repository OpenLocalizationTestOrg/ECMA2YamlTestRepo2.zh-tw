### YamlMime:ManagedReference
items:
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext
  id: InstancePersistenceContext
  children:
  - System.Runtime.DurableInstancing.InstancePersistenceContext.AssociatedInstanceKey(System.Guid)
  - System.Runtime.DurableInstancing.InstancePersistenceContext.BeginBindReclaimedLock(System.Int64,System.TimeSpan,System.AsyncCallback,System.Object)
  - System.Runtime.DurableInstancing.InstancePersistenceContext.BeginExecute(System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan,System.AsyncCallback,System.Object)
  - System.Runtime.DurableInstancing.InstancePersistenceContext.BindAcquiredLock(System.Int64)
  - System.Runtime.DurableInstancing.InstancePersistenceContext.BindEvent(System.Runtime.DurableInstancing.InstancePersistenceEvent)
  - System.Runtime.DurableInstancing.InstancePersistenceContext.BindInstance(System.Guid)
  - System.Runtime.DurableInstancing.InstancePersistenceContext.BindInstanceOwner(System.Guid,System.Guid)
  - System.Runtime.DurableInstancing.InstancePersistenceContext.BindReclaimedLock(System.Int64,System.TimeSpan)
  - System.Runtime.DurableInstancing.InstancePersistenceContext.CompletedInstance
  - System.Runtime.DurableInstancing.InstancePersistenceContext.CompletedInstanceKey(System.Guid)
  - System.Runtime.DurableInstancing.InstancePersistenceContext.CreateBindReclaimedLockException(System.Int64)
  - System.Runtime.DurableInstancing.InstancePersistenceContext.EndBindReclaimedLock(System.IAsyncResult)
  - System.Runtime.DurableInstancing.InstancePersistenceContext.EndExecute(System.IAsyncResult)
  - System.Runtime.DurableInstancing.InstancePersistenceContext.Execute(System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan)
  - System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceHandle
  - System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceVersion
  - System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceView
  - System.Runtime.DurableInstancing.InstancePersistenceContext.LoadedInstance(System.Runtime.DurableInstancing.InstanceState,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue},System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue},System.Collections.Generic.IDictionary{System.Guid,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue}},System.Collections.Generic.IDictionary{System.Guid,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue}})
  - System.Runtime.DurableInstancing.InstancePersistenceContext.LockToken
  - System.Runtime.DurableInstancing.InstancePersistenceContext.PersistedInstance(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue})
  - System.Runtime.DurableInstancing.InstancePersistenceContext.QueriedInstanceStore(System.Runtime.DurableInstancing.InstanceStoreQueryResult)
  - System.Runtime.DurableInstancing.InstancePersistenceContext.ReadInstanceKeyMetadata(System.Guid,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue},System.Boolean)
  - System.Runtime.DurableInstancing.InstancePersistenceContext.ReadInstanceMetadata(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue},System.Boolean)
  - System.Runtime.DurableInstancing.InstancePersistenceContext.ReadInstanceOwnerMetadata(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue},System.Boolean)
  - System.Runtime.DurableInstancing.InstancePersistenceContext.SetCancellationHandler(System.Action{System.Runtime.DurableInstancing.InstancePersistenceContext})
  - System.Runtime.DurableInstancing.InstancePersistenceContext.UnassociatedInstanceKey(System.Guid)
  - System.Runtime.DurableInstancing.InstancePersistenceContext.UserContext
  - System.Runtime.DurableInstancing.InstancePersistenceContext.WroteInstanceKeyMetadataValue(System.Guid,System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue)
  - System.Runtime.DurableInstancing.InstancePersistenceContext.WroteInstanceMetadataValue(System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue)
  - System.Runtime.DurableInstancing.InstancePersistenceContext.WroteInstanceOwnerMetadataValue(System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue)
  langs:
  - csharp
  name: InstancePersistenceContext
  nameWithType: InstancePersistenceContext
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext
  type: Class
  summary: "持續性命令執行時，表示執行狀態資訊。"
  remarks: "這個類別的執行個體傳遞至持續性提供者實作的 TryCommand 方法。 持續性提供者會使用這個類別來檢查執行個體的記憶體中檢視，以及指出外部存放區可能會影響檢視或其他記憶體中的內容上的作業結果。"
  syntax:
    content: public sealed class InstancePersistenceContext
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.AssociatedInstanceKey(System.Guid)
  id: AssociatedInstanceKey(System.Guid)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: AssociatedInstanceKey(Guid)
  nameWithType: InstancePersistenceContext.AssociatedInstanceKey(Guid)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.AssociatedInstanceKey(Guid)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "表示持續性提供者已成功關聯到目前的執行個體的執行個體存放區中的索引鍵。 做為參數指定之金鑰識別碼。"
  remarks: "執行個體索引鍵必須是無關聯。 目前的執行個體控制代碼必須繫結至執行個體，以及鎖定該執行個體上。"
  syntax:
    content: public void AssociatedInstanceKey (Guid key);
    parameters:
    - id: key
      type: System.Guid
      description: "已產生關聯的索引鍵的執行個體索引鍵的識別碼。 不得為 Guid.Empty。"
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.AssociatedInstanceKey*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.BeginBindReclaimedLock(System.Int64,System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginBindReclaimedLock(System.Int64,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: BeginBindReclaimedLock(Int64,TimeSpan,AsyncCallback,Object)
  nameWithType: InstancePersistenceContext.BeginBindReclaimedLock(Int64,TimeSpan,AsyncCallback,Object)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.BeginBindReclaimedLock(Int64,TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "開始非同步作業以將現有的鎖定繫結至目前的執行個體控制代碼的執行個體上。 現有的鎖定版本會做為參數傳遞。"
  remarks: "當嘗試取得鎖定，持續性提供者可能會決定目前的執行個體已被鎖定在目前的存放區。 如果其鎖定權杖符合目前控制代碼的鎖定權杖，持續性提供者可以嘗試回收鎖定，方式是檢查其版本，以及將它傳遞給 BeginBindReclaimedLock。 持續性提供者不得對進行變更的執行個體成功回收鎖定之前。 如果沒有其他控制代碼已繫結至鎖定，則 BeginBindReclaimedLock 作業就會成功，而且目前的控制代碼會變成繫結至鎖定。 否則，BeginBindReclaimedLock 或 EndBindReclaimedLock 會擲回 InstanceHandleConflictException。 如果命令正在進行其他控制代碼，此作業可能不會完成等候這些命令，來決定是否能夠回收鎖定的結果。       目前的執行個體控制代碼必須繫結執行個體和鎖定擁有者。 執行個體不得為完成。 鎖定擁有者相關聯的鎖定權杖用來識別鎖定的擁有者。       一旦鎖定繫結至控制代碼，它就會控制代碼的存留期間繫結。 可以變更鎖定權杖都執行個體版本。"
  syntax:
    content: public IAsyncResult BeginBindReclaimedLock (long instanceVersion, TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: instanceVersion
      type: System.Int64
      description: "鎖定版本保留在執行個體，則為零，但如果持續性提供者沒有實作鎖定版本。"
    - id: timeout
      type: System.TimeSpan
      description: "非同步作業的逾時期限。"
    - id: callback
      type: System.AsyncCallback
      description: "要在作業完成時呼叫的方法。"
    - id: state
      type: System.Object
      description: "與非同步作業相關聯的狀態資訊。"
    return:
      type: System.IAsyncResult
      description: "非同步作業的狀態。"
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.BeginBindReclaimedLock*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.BeginExecute(System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginExecute(System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: BeginExecute(InstancePersistenceCommand,TimeSpan,AsyncCallback,Object)
  nameWithType: InstancePersistenceContext.BeginExecute(InstancePersistenceCommand,TimeSpan,AsyncCallback,Object)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.BeginExecute(InstancePersistenceCommand,TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "開始以非同步方式執行持續性命令。"
  remarks: "持續性提供者可以使用這個方法，將子命令當做命令的一部分執行。 此子命令將使用 BeginTryCommand 來執行，類似於命令傳遞給 InstanceStore.BeginExecute 的。 命令可以巢狀化，但命令只能執行一個以上的子命令一次。"
  syntax:
    content: public IAsyncResult BeginExecute (System.Runtime.DurableInstancing.InstancePersistenceCommand command, TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: command
      type: System.Runtime.DurableInstancing.InstancePersistenceCommand
      description: "要執行的持續性命令。"
    - id: timeout
      type: System.TimeSpan
      description: "作業的逾時值。"
    - id: callback
      type: System.AsyncCallback
      description: "委派會接收非同步通知接收要求作業完成。"
    - id: state
      type: System.Object
      description: "狀態資訊。"
    return:
      type: System.IAsyncResult
      description: "非同步作業的狀態。"
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.BeginExecute*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.BindAcquiredLock(System.Int64)
  id: BindAcquiredLock(System.Int64)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: BindAcquiredLock(Int64)
  nameWithType: InstancePersistenceContext.BindAcquiredLock(Int64)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.BindAcquiredLock(Int64)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "將新取得的鎖定繫結至目前的執行個體控制代碼的執行個體上。 取得的鎖定版本會做為參數傳遞。"
  remarks: "如果持續性提供者實作鎖定版本，然後每次在執行個體，取得鎖定版本都必須遞增一外部存放區中。 第一次鎖定執行個體時，版本應為 1。 取得每個鎖定會使先前的鎖定失效。 目前的執行個體控制代碼必須繫結執行個體和鎖定擁有者。 執行個體不得為完成。 鎖定擁有者相關聯的鎖定權杖用來識別鎖定的擁有者一旦鎖定繫結至控制代碼，則仍會保持此控制代碼的存留期間繫結。 可以變更鎖定權杖都執行個體版本。"
  syntax:
    content: public void BindAcquiredLock (long instanceVersion);
    parameters:
    - id: instanceVersion
      type: System.Int64
      description: "取得執行個體，或為零，如果持續性提供者沒有實作鎖定版本的鎖定版本。"
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.BindAcquiredLock*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.BindEvent(System.Runtime.DurableInstancing.InstancePersistenceEvent)
  id: BindEvent(System.Runtime.DurableInstancing.InstancePersistenceEvent)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: BindEvent(InstancePersistenceEvent)
  nameWithType: InstancePersistenceContext.BindEvent(InstancePersistenceEvent)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.BindEvent(InstancePersistenceEvent)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "將繫結<xref href=&quot;System.Runtime.DurableInstancing.InstancePersistenceEvent&quot;></xref>至執行個體控制代碼。"
  syntax:
    content: public void BindEvent (System.Runtime.DurableInstancing.InstancePersistenceEvent persistenceEvent);
    parameters:
    - id: persistenceEvent
      type: System.Runtime.DurableInstancing.InstancePersistenceEvent
      description: "<xref href=&quot;System.Runtime.DurableInstancing.InstancePersistenceEvent&quot;> </xref>物件，其中包含事件的相關資訊。"
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.BindEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.BindInstance(System.Guid)
  id: BindInstance(System.Guid)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: BindInstance(Guid)
  nameWithType: InstancePersistenceContext.BindInstance(Guid)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.BindInstance(Guid)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "將繫結執行個體的識別碼會指定為目前的執行個體控制代碼的參數。"
  remarks: "一旦執行個體已繫結至控制代碼，它就會控制代碼的存留期間繫結。 其他執行個體曾經繫結至控制代碼。"
  syntax:
    content: public void BindInstance (Guid instanceId);
    parameters:
    - id: instanceId
      type: System.Guid
      description: "執行個體識別碼。 不得為 Guid.Empty。"
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.BindInstance*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.BindInstanceOwner(System.Guid,System.Guid)
  id: BindInstanceOwner(System.Guid,System.Guid)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: BindInstanceOwner(Guid,Guid)
  nameWithType: InstancePersistenceContext.BindInstanceOwner(Guid,Guid)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.BindInstanceOwner(Guid,Guid)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "將執行個體擁有者繫結至目前的執行個體控制代碼。"
  remarks: "一旦執行個體擁有者已繫結至控制代碼，它就會控制代碼的存留期間繫結。 其他執行個體擁有者可以無法繫結至控制代碼。"
  syntax:
    content: public void BindInstanceOwner (Guid instanceOwnerId, Guid lockToken);
    parameters:
    - id: instanceOwnerId
      type: System.Guid
      description: "執行個體擁有者的識別項。"
    - id: lockToken
      type: System.Guid
      description: "執行個體擁有者的鎖定權杖。 持續性提供者可以選擇的執行個體擁有者識別碼和擁有者的鎖定權杖使用相同的值。"
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.BindInstanceOwner*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.BindReclaimedLock(System.Int64,System.TimeSpan)
  id: BindReclaimedLock(System.Int64,System.TimeSpan)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: BindReclaimedLock(Int64,TimeSpan)
  nameWithType: InstancePersistenceContext.BindReclaimedLock(Int64,TimeSpan)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.BindReclaimedLock(Int64,TimeSpan)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "將現有的鎖定繫結至目前的執行個體控制代碼的執行個體上。 現有的鎖定版本會做為參數傳遞。"
  remarks: "當嘗試取得鎖定，持續性提供者可能會決定目前的執行個體已被鎖定在目前的存放區。 如果其鎖定權杖符合目前控制代碼的鎖定權杖，然後持續性提供者可以嘗試檢查它的版本，並將其傳遞給 BindReclaimedLock 來回收鎖定。 持續性提供者不得對進行變更的執行個體成功回收鎖定之前。 如果沒有其他控制代碼已繫結至鎖定，然後 BindReclaimedLock 就會成功，和目前的控制代碼會變成繫結至鎖定。 否則，BindReclaimedLock 會擲回 InstanceHandleConflictException。 如果命令正在進行其他控制代碼，BindReclaimedLock 可能會封鎖等候這些命令的結果，然後再決定是否能夠回收鎖定。       目前的執行個體控制代碼必須繫結執行個體和鎖定擁有者。 執行個體不得為完成。 鎖定擁有者相關聯的鎖定權杖用來識別鎖定的擁有者。       一旦鎖定繫結至控制代碼，它就會控制代碼的存留期間繫結。 可以變更鎖定權杖都執行個體版本。"
  syntax:
    content: public void BindReclaimedLock (long instanceVersion, TimeSpan timeout);
    parameters:
    - id: instanceVersion
      type: System.Int64
      description: "鎖定版本保留在執行個體，則為零，但如果持續性提供者沒有實作鎖定版本。"
    - id: timeout
      type: System.TimeSpan
      description: "作業的逾時值。"
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.BindReclaimedLock*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.CompletedInstance
  id: CompletedInstance
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: CompletedInstance()
  nameWithType: InstancePersistenceContext.CompletedInstance()
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.CompletedInstance()
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "表示持續性提供者已經成功地標示為已完成執行個體存放區中的目前執行個體。"
  remarks: "目前的執行個體控制代碼必須繫結至執行個體，以及鎖定該執行個體上。 執行個體必須進行初始化，而且尚未完成。 （如果執行個體資料集曾經保存到它已初始化執行個體）。必須完成所有的執行個體相關聯的金鑰。"
  syntax:
    content: public void CompletedInstance ();
    parameters: []
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.CompletedInstance*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.CompletedInstanceKey(System.Guid)
  id: CompletedInstanceKey(System.Guid)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: CompletedInstanceKey(Guid)
  nameWithType: InstancePersistenceContext.CompletedInstanceKey(Guid)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.CompletedInstanceKey(Guid)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "表示持續性提供者已經成功地標示為已完成在外部存放區中的索引鍵。 做為參數指定之金鑰識別碼。"
  remarks: "目前的執行個體控制代碼必須繫結至執行個體，以及鎖定該執行個體上。 執行個體索引鍵必須是目前的執行個體相關聯，而且尚未完成。"
  syntax:
    content: public void CompletedInstanceKey (Guid key);
    parameters:
    - id: key
      type: System.Guid
      description: "已完成之索引鍵的執行個體索引鍵識別碼。 不得為 Guid.Empty。"
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.CompletedInstanceKey*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.CreateBindReclaimedLockException(System.Int64)
  id: CreateBindReclaimedLockException(System.Int64)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: CreateBindReclaimedLockException(Int64)
  nameWithType: InstancePersistenceContext.CreateBindReclaimedLockException(Int64)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.CreateBindReclaimedLockException(Int64)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "建立從 TryCommand 以觸發 BindReclaimedLock 行為可能會擲回的例外狀況的執行個體。"
  remarks: "範例程式碼︰```      protected override bool TryCommand(InstancePersistenceContext context, InstancePersistenceCommand command, TimeSpan timeout)   {       throw context.CreateBindReclaimedLockException(5);   }   is equivalent to   protected override bool TryCommand(InstancePersistenceContext context, InstancePersistenceCommand command, TimeSpan timeout)   {       context.BindReclaimedLock(5, timeout);       throw new OperationCanceledException();   }      ```"
  syntax:
    content: public Exception CreateBindReclaimedLockException (long instanceVersion);
    parameters:
    - id: instanceVersion
      type: System.Int64
      description: "鎖定版本保留在執行個體，則為零，但如果持續性提供者沒有實作鎖定版本。"
    return:
      type: System.Exception
      description: "例外狀況。"
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.CreateBindReclaimedLockException*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.EndBindReclaimedLock(System.IAsyncResult)
  id: EndBindReclaimedLock(System.IAsyncResult)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: EndBindReclaimedLock(IAsyncResult)
  nameWithType: InstancePersistenceContext.EndBindReclaimedLock(IAsyncResult)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.EndBindReclaimedLock(IAsyncResult)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "結束非同步作業來啟動<xref:System.Runtime.DurableInstancing.InstancePersistenceContext.BeginBindReclaimedLock*>方法。</xref:System.Runtime.DurableInstancing.InstancePersistenceContext.BeginBindReclaimedLock*>"
  syntax:
    content: public void EndBindReclaimedLock (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "非同步作業的結果。"
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.EndBindReclaimedLock*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.EndExecute(System.IAsyncResult)
  id: EndExecute(System.IAsyncResult)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: EndExecute(IAsyncResult)
  nameWithType: InstancePersistenceContext.EndExecute(IAsyncResult)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.EndExecute(IAsyncResult)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "結束非同步作業。"
  syntax:
    content: public void EndExecute (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "非同步作業的狀態。"
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.EndExecute*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.Execute(System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan)
  id: Execute(System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: Execute(InstancePersistenceCommand,TimeSpan)
  nameWithType: InstancePersistenceContext.Execute(InstancePersistenceCommand,TimeSpan)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.Execute(InstancePersistenceCommand,TimeSpan)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "執行持續性命令。"
  remarks: "持續性提供者可以使用這個方法，將子命令當做命令的一部分執行。 此子命令將使用 TryCommand 來執行，與命令傳遞給 InstanceStore.Execute。 命令可以巢狀化，但命令只能執行一個以上的子命令一次。"
  syntax:
    content: public void Execute (System.Runtime.DurableInstancing.InstancePersistenceCommand command, TimeSpan timeout);
    parameters:
    - id: command
      type: System.Runtime.DurableInstancing.InstancePersistenceCommand
      description: "要執行的持續性命令。"
    - id: timeout
      type: System.TimeSpan
      description: "作業的逾時值。"
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.Execute*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceHandle
  id: InstanceHandle
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: InstanceHandle
  nameWithType: InstancePersistenceContext.InstanceHandle
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceHandle
  type: Property
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "取得目前的執行個體控制代碼。"
  syntax:
    content: public System.Runtime.DurableInstancing.InstanceHandle InstanceHandle { get; }
    return:
      type: System.Runtime.DurableInstancing.InstanceHandle
      description: "目前的執行個體控制代碼。"
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceHandle*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceVersion
  id: InstanceVersion
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: InstanceVersion
  nameWithType: InstancePersistenceContext.InstanceVersion
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceVersion
  type: Property
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "取得目前的執行個體上保留目前的執行個體控制代碼的鎖定版本。"
  remarks: "持續性提供者應該檢查此值，針對保留執行個體存放區中執行個體上執行的作業需要使用控制代碼的鎖定 （例如保存執行個體資料） 會繫結至鎖定時的鎖定與鎖定版本。 如果鎖定版本不符，此命令應該會由於 instancelocklostexception。"
  syntax:
    content: public long InstanceVersion { get; }
    return:
      type: System.Int64
      description: "如果控制代碼沒有繫結至鎖定，執行個體鎖定版本繫結至目前的執行個體控制代碼，則為-1。"
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceView
  id: InstanceView
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: InstanceView
  nameWithType: InstancePersistenceContext.InstanceView
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceView
  type: Property
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "取得表示目前的執行個體的記憶體中狀態的執行個體檢視物件。 此檢視反映在進行中的命令來進行更新。"
  syntax:
    content: public System.Runtime.DurableInstancing.InstanceView InstanceView { get; }
    return:
      type: System.Runtime.DurableInstancing.InstanceView
      description: "執行個體檢視物件。"
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceView*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.LoadedInstance(System.Runtime.DurableInstancing.InstanceState,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue},System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue},System.Collections.Generic.IDictionary{System.Guid,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue}},System.Collections.Generic.IDictionary{System.Guid,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue}})
  id: LoadedInstance(System.Runtime.DurableInstancing.InstanceState,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue},System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue},System.Collections.Generic.IDictionary{System.Guid,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue}},System.Collections.Generic.IDictionary{System.Guid,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue}})
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: LoadedInstance(InstanceState,IDictionary<XName,InstanceValue>,IDictionary<XName,InstanceValue>,IDictionary<Guid,IDictionary<XName,InstanceValue>>,IDictionary<Guid,IDictionary<XName,InstanceValue>>)
  nameWithType: InstancePersistenceContext.LoadedInstance(InstanceState,IDictionary<XName,InstanceValue>,IDictionary<XName,InstanceValue>,IDictionary<Guid,IDictionary<XName,InstanceValue>>,IDictionary<Guid,IDictionary<XName,InstanceValue>>)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.LoadedInstance(InstanceState,IDictionary<XName,InstanceValue>,IDictionary<XName,InstanceValue>,IDictionary<Guid,IDictionary<XName,InstanceValue>>,IDictionary<Guid,IDictionary<XName,InstanceValue>>)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "表示持續性提供者已成功擷取目前的執行個體從執行個體存放區。"
  remarks: "目前的執行個體控制代碼必須繫結執行個體。 如果執行個體控制代碼繫結至鎖定或標示為完成載入的執行個體，所載入的資料會被視為一致的。否則，它會被視為不確定。"
  syntax:
    content: public void LoadedInstance (System.Runtime.DurableInstancing.InstanceState state, System.Collections.Generic.IDictionary<System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue> instanceData, System.Collections.Generic.IDictionary<System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue> instanceMetadata, System.Collections.Generic.IDictionary<Guid,System.Collections.Generic.IDictionary<System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue>> associatedInstanceKeyMetadata, System.Collections.Generic.IDictionary<Guid,System.Collections.Generic.IDictionary<System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue>> completedInstanceKeyMetadata);
    parameters:
    - id: state
      type: System.Runtime.DurableInstancing.InstanceState
      description: "執行個體狀態資訊。"
    - id: instanceData
      type: System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue}
      description: "做為字典的執行個體資料<xref:System.Xml.Linq.XName>和<xref href=&quot;System.Runtime.DurableInstancing.InstanceValue&quot;></xref>物件。</xref:System.Xml.Linq.XName>"
    - id: instanceMetadata
      type: System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue}
      description: "執行個體中繼資料，做為集合<xref:System.Xml.Linq.XName>和<xref href=&quot;System.Runtime.DurableInstancing.InstanceValue&quot;></xref>物件。</xref:System.Xml.Linq.XName>"
    - id: associatedInstanceKeyMetadata
      type: System.Collections.Generic.IDictionary{System.Guid,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue}}
      description: "相關聯執行個體索引鍵的中繼資料，做為字典的執行個體識別碼和執行個體索引鍵的中繼資料，這是一個字典的<xref:System.Xml.Linq.XName>和<xref href=&quot;System.Runtime.DurableInstancing.InstanceValue&quot;></xref>物件。</xref:System.Xml.Linq.XName>"
    - id: completedInstanceKeyMetadata
      type: System.Collections.Generic.IDictionary{System.Guid,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue}}
      description: "完成執行個體中繼資料做為字典的執行個體識別碼和執行個體索引鍵的中繼資料，這是一個字典的<xref:System.Xml.Linq.XName>和<xref href=&quot;System.Runtime.DurableInstancing.InstanceValue&quot;></xref>物件。</xref:System.Xml.Linq.XName>"
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.LoadedInstance*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.LockToken
  id: LockToken
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: LockToken
  nameWithType: InstancePersistenceContext.LockToken
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.LockToken
  type: Property
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "取得語彙基元繫結至目前的執行個體控制代碼的執行個體擁有者的鎖定。"
  remarks: "持續性提供者應該檢查此值，針對保留執行個體存放區中執行個體上執行的作業需要使用控制代碼的鎖定 （例如保存執行個體資料） 會繫結至鎖定時的鎖定的鎖定權杖。 如果鎖定權杖不符，此命令應該會由於 instancelocklostexception。       持續性提供者應該使用這個值當做鎖定權杖，取得執行個體 （例如使用尚未繫結至鎖定的控制代碼的保存執行個體資料） 的新鎖定時。 如果執行個體已經鎖定執行個體存放區中，而且其鎖定權杖符合這個鎖定權杖，持續性提供者可以嘗試回收使用 BindReclaimedLock 的執行個體。"
  syntax:
    content: public Guid LockToken { get; }
    return:
      type: System.Guid
      description: "如果控制代碼沒有繫結至執行個體擁有者，其鎖定權杖繫結至目前的執行個體控制代碼，則為 Guid.Empty。"
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.LockToken*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.PersistedInstance(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue})
  id: PersistedInstance(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue})
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: PersistedInstance(IDictionary<XName,InstanceValue>)
  nameWithType: InstancePersistenceContext.PersistedInstance(IDictionary<XName,InstanceValue>)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.PersistedInstance(IDictionary<XName,InstanceValue>)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "表示持續性提供者已經成功保存執行個體存放區的執行個體資料集。 如果尚未初始化執行個體的這個效果。"
  remarks: "目前的執行個體控制代碼必須繫結至執行個體，以及鎖定該執行個體上。 每個執行個體資料集完全取代先前的設定。 執行個體資料集可能為 null，這相當於空白。 保存集合執行個體資料為 null，就會刪除現有的執行個體資料集。 （保存執行個體資料集沒有任何作用，執行個體中繼資料）。"
  syntax:
    content: public void PersistedInstance (System.Collections.Generic.IDictionary<System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue> data);
    parameters:
    - id: data
      type: System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue}
      description: "做為字典的執行個體資料<xref:System.Xml.Linq.XName>和<xref href=&quot;System.Runtime.DurableInstancing.InstanceValue&quot;></xref>物件。</xref:System.Xml.Linq.XName>"
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.PersistedInstance*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.QueriedInstanceStore(System.Runtime.DurableInstancing.InstanceStoreQueryResult)
  id: QueriedInstanceStore(System.Runtime.DurableInstancing.InstanceStoreQueryResult)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: QueriedInstanceStore(InstanceStoreQueryResult)
  nameWithType: InstancePersistenceContext.QueriedInstanceStore(InstanceStoreQueryResult)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.QueriedInstanceStore(InstanceStoreQueryResult)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "新增<xref href=&quot;System.Runtime.DurableInstancing.InstanceStoreQueryResult&quot;></xref>做為參數傳遞給清單中的<xref href=&quot;System.Runtime.DurableInstancing.InstanceStoreQueryResult&quot;></xref>中的物件<xref href=&quot;System.Runtime.DurableInstancing.InstanceView&quot;> </xref>。"
  syntax:
    content: public void QueriedInstanceStore (System.Runtime.DurableInstancing.InstanceStoreQueryResult queryResult);
    parameters:
    - id: queryResult
      type: System.Runtime.DurableInstancing.InstanceStoreQueryResult
      description: "針對執行個體存放區查詢的結果。"
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.QueriedInstanceStore*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.ReadInstanceKeyMetadata(System.Guid,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue},System.Boolean)
  id: ReadInstanceKeyMetadata(System.Guid,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue},System.Boolean)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: ReadInstanceKeyMetadata(Guid,IDictionary<XName,InstanceValue>,Boolean)
  nameWithType: InstancePersistenceContext.ReadInstanceKeyMetadata(Guid,IDictionary<XName,InstanceValue>,Boolean)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.ReadInstanceKeyMetadata(Guid,IDictionary<XName,InstanceValue>,Boolean)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "表示持續性提供者已經成功地讀取某些執行個體索引鍵中繼資料從執行個體存放區目前的執行個體相關聯的索引鍵。"
  remarks: "目前的執行個體控制代碼必須繫結執行個體。 如果執行個體控制代碼繫結至鎖定或目前的執行個體標示為完成，中繼資料會被視為一致的。否則，它會被視為不確定。"
  syntax:
    content: public void ReadInstanceKeyMetadata (Guid key, System.Collections.Generic.IDictionary<System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue> metadata, bool complete);
    parameters:
    - id: key
      type: System.Guid
      description: "已讀取其中繼資料的索引鍵的執行個體索引鍵的識別碼。 不得為 Guid.Empty。"
    - id: metadata
      type: System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue}
      description: "將中繼資料的字典當做<xref:System.Xml.Linq.XName>和<xref href=&quot;System.Runtime.DurableInstancing.InstanceValue&quot;></xref>物件。</xref:System.Xml.Linq.XName>"
    - id: complete
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>如果中繼資料代表全部的中繼資料與相關聯的執行個體索引鍵，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.ReadInstanceKeyMetadata*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.ReadInstanceMetadata(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue},System.Boolean)
  id: ReadInstanceMetadata(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue},System.Boolean)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: ReadInstanceMetadata(IDictionary<XName,InstanceValue>,Boolean)
  nameWithType: InstancePersistenceContext.ReadInstanceMetadata(IDictionary<XName,InstanceValue>,Boolean)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.ReadInstanceMetadata(IDictionary<XName,InstanceValue>,Boolean)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "表示持續性提供者已經成功讀取某些執行個體的中繼資料目前的執行個體從執行個體存放區。"
  syntax:
    content: public void ReadInstanceMetadata (System.Collections.Generic.IDictionary<System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue> metadata, bool complete);
    parameters:
    - id: metadata
      type: System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue}
      description: "將中繼資料的字典當做<xref:System.Xml.Linq.XName>和<xref href=&quot;System.Runtime.DurableInstancing.InstanceValue&quot;></xref>物件。</xref:System.Xml.Linq.XName>"
    - id: complete
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>如果中繼資料代表執行個體，否則相關聯的中繼資料的所有<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.ReadInstanceMetadata*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.ReadInstanceOwnerMetadata(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue},System.Boolean)
  id: ReadInstanceOwnerMetadata(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue},System.Boolean)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: ReadInstanceOwnerMetadata(IDictionary<XName,InstanceValue>,Boolean)
  nameWithType: InstancePersistenceContext.ReadInstanceOwnerMetadata(IDictionary<XName,InstanceValue>,Boolean)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.ReadInstanceOwnerMetadata(IDictionary<XName,InstanceValue>,Boolean)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "設定使用參數中傳遞的資料執行個體擁有者中繼資料。"
  remarks: "目前的執行個體控制代碼必須繫結執行個體。 如果執行個體控制代碼繫結至鎖定或目前的執行個體標示為完成，中繼資料會被視為一致的。否則，它會被視為不確定。"
  syntax:
    content: public void ReadInstanceOwnerMetadata (System.Collections.Generic.IDictionary<System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue> metadata, bool complete);
    parameters:
    - id: metadata
      type: System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue}
      description: "字典<xref:System.Xml.Linq.XName>和<xref href=&quot;System.Runtime.DurableInstancing.InstanceValue&quot;></xref>物件。</xref:System.Xml.Linq.XName>"
    - id: complete
      type: System.Boolean
      description: "指定的值是否設為 「 一致性<xref href=&quot;System.Runtime.DurableInstancing.InstanceValueConsistency&quot;></xref>或<xref href=&quot;System.Runtime.DurableInstancing.InstanceValueConsistency&quot;> </xref>。"
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.ReadInstanceOwnerMetadata*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.SetCancellationHandler(System.Action{System.Runtime.DurableInstancing.InstancePersistenceContext})
  id: SetCancellationHandler(System.Action{System.Runtime.DurableInstancing.InstancePersistenceContext})
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: SetCancellationHandler(Action<InstancePersistenceContext>)
  nameWithType: InstancePersistenceContext.SetCancellationHandler(Action<InstancePersistenceContext>)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.SetCancellationHandler(Action<InstancePersistenceContext>)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "設定要求取消作業時呼叫了取消處理常式。"
  remarks: "如果呼叫了取消處理常式，持續性提供者應該取消所有暫止的作業，並擲回 OperationCanceledException，從 TryCommand 來指示它在完成之前，已中斷的持續性命令。"
  syntax:
    content: public void SetCancellationHandler (Action<System.Runtime.DurableInstancing.InstancePersistenceContext> cancellationHandler);
    parameters:
    - id: cancellationHandler
      type: System.Action{System.Runtime.DurableInstancing.InstancePersistenceContext}
      description: "要呼叫的函式的參考。"
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.SetCancellationHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.UnassociatedInstanceKey(System.Guid)
  id: UnassociatedInstanceKey(System.Guid)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: UnassociatedInstanceKey(Guid)
  nameWithType: InstancePersistenceContext.UnassociatedInstanceKey(Guid)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.UnassociatedInstanceKey(Guid)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "表示持續性提供者已成功中斷目前的執行個體的執行個體存放區中的索引鍵。 做為參數指定之金鑰識別碼。"
  remarks: "目前的執行個體控制代碼必須繫結至執行個體，以及鎖定該執行個體上。 執行個體索引鍵必須是目前的執行個體相關聯，而且必須標示為完成。 目前的執行個體必須不是標示為完成。"
  syntax:
    content: public void UnassociatedInstanceKey (Guid key);
    parameters:
    - id: key
      type: System.Guid
      description: "已經解除關聯索引鍵的執行個體索引鍵識別碼。 不得為 Guid.Empty。"
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.UnassociatedInstanceKey*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.UserContext
  id: UserContext
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: UserContext
  nameWithType: InstancePersistenceContext.UserContext
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.UserContext
  type: Property
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "取得附加至目前的執行個體控制代碼的使用者內容資訊。"
  remarks: "物件是從 InstanceStore.OnNewInstanceHandle 傳回目前執行個體控制代碼。"
  syntax:
    content: public object UserContext { get; }
    return:
      type: System.Object
      description: "使用者內容資訊。"
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.UserContext*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.WroteInstanceKeyMetadataValue(System.Guid,System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue)
  id: WroteInstanceKeyMetadataValue(System.Guid,System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: WroteInstanceKeyMetadataValue(Guid,XName,InstanceValue)
  nameWithType: InstancePersistenceContext.WroteInstanceKeyMetadataValue(Guid,XName,InstanceValue)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.WroteInstanceKeyMetadataValue(Guid,XName,InstanceValue)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "表示持續性提供者已經成功地寫入執行個體存放區目前的執行個體相關聯執行個體索引鍵的中繼資料值"
  remarks: "目前的執行個體控制代碼必須繫結至執行個體，以及鎖定該執行個體上。 執行個體索引鍵必須是目前的執行個體相關聯，而且不得為完成。"
  syntax:
    content: public void WroteInstanceKeyMetadataValue (Guid key, System.Xml.Linq.XName name, System.Runtime.DurableInstancing.InstanceValue value);
    parameters:
    - id: key
      type: System.Guid
      description: "索引鍵的執行個體索引鍵識別碼。 不得為 Guid.Empty。"
    - id: name
      type: System.Xml.Linq.XName
      description: "中繼資料屬性的名稱。"
    - id: value
      type: System.Runtime.DurableInstancing.InstanceValue
      description: "中繼資料屬性的值。"
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.WroteInstanceKeyMetadataValue*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.WroteInstanceMetadataValue(System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue)
  id: WroteInstanceMetadataValue(System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: WroteInstanceMetadataValue(XName,InstanceValue)
  nameWithType: InstancePersistenceContext.WroteInstanceMetadataValue(XName,InstanceValue)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.WroteInstanceMetadataValue(XName,InstanceValue)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "表示持續性提供者已經成功地寫入目前的執行個體的中繼資料值到外部的執行個體存放區。"
  remarks: "目前的執行個體控制代碼必須繫結至執行個體，以及該執行個體上具有鎖定。 執行個體不得為完成。"
  syntax:
    content: public void WroteInstanceMetadataValue (System.Xml.Linq.XName name, System.Runtime.DurableInstancing.InstanceValue value);
    parameters:
    - id: name
      type: System.Xml.Linq.XName
      description: "中繼資料屬性的名稱。"
    - id: value
      type: System.Runtime.DurableInstancing.InstanceValue
      description: "中繼資料屬性的值。"
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.WroteInstanceMetadataValue*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.WroteInstanceOwnerMetadataValue(System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue)
  id: WroteInstanceOwnerMetadataValue(System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: WroteInstanceOwnerMetadataValue(XName,InstanceValue)
  nameWithType: InstancePersistenceContext.WroteInstanceOwnerMetadataValue(XName,InstanceValue)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.WroteInstanceOwnerMetadataValue(XName,InstanceValue)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "表示持續性提供者已經成功寫入的中繼資料值為目前的執行個體擁有者執行個體存放區。"
  remarks: "目前的執行個體控制代碼必須繫結執行個體擁有者。"
  syntax:
    content: public void WroteInstanceOwnerMetadataValue (System.Xml.Linq.XName name, System.Runtime.DurableInstancing.InstanceValue value);
    parameters:
    - id: name
      type: System.Xml.Linq.XName
      description: "中繼資料屬性的名稱。"
    - id: value
      type: System.Runtime.DurableInstancing.InstanceValue
      description: "中繼資料屬性的值。"
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.WroteInstanceOwnerMetadataValue*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.AssociatedInstanceKey(System.Guid)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: AssociatedInstanceKey(Guid)
  nameWithType: InstancePersistenceContext.AssociatedInstanceKey(Guid)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.AssociatedInstanceKey(Guid)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.BeginBindReclaimedLock(System.Int64,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: BeginBindReclaimedLock(Int64,TimeSpan,AsyncCallback,Object)
  nameWithType: InstancePersistenceContext.BeginBindReclaimedLock(Int64,TimeSpan,AsyncCallback,Object)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.BeginBindReclaimedLock(Int64,TimeSpan,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.BeginExecute(System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: BeginExecute(InstancePersistenceCommand,TimeSpan,AsyncCallback,Object)
  nameWithType: InstancePersistenceContext.BeginExecute(InstancePersistenceCommand,TimeSpan,AsyncCallback,Object)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.BeginExecute(InstancePersistenceCommand,TimeSpan,AsyncCallback,Object)
- uid: System.Runtime.DurableInstancing.InstancePersistenceCommand
  parent: System.Runtime.DurableInstancing
  isExternal: false
  name: InstancePersistenceCommand
  nameWithType: InstancePersistenceCommand
  fullName: System.Runtime.DurableInstancing.InstancePersistenceCommand
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.BindAcquiredLock(System.Int64)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: BindAcquiredLock(Int64)
  nameWithType: InstancePersistenceContext.BindAcquiredLock(Int64)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.BindAcquiredLock(Int64)
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.BindEvent(System.Runtime.DurableInstancing.InstancePersistenceEvent)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: BindEvent(InstancePersistenceEvent)
  nameWithType: InstancePersistenceContext.BindEvent(InstancePersistenceEvent)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.BindEvent(InstancePersistenceEvent)
- uid: System.Runtime.DurableInstancing.InstancePersistenceEvent
  parent: System.Runtime.DurableInstancing
  isExternal: false
  name: InstancePersistenceEvent
  nameWithType: InstancePersistenceEvent
  fullName: System.Runtime.DurableInstancing.InstancePersistenceEvent
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.BindInstance(System.Guid)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: BindInstance(Guid)
  nameWithType: InstancePersistenceContext.BindInstance(Guid)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.BindInstance(Guid)
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.BindInstanceOwner(System.Guid,System.Guid)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: BindInstanceOwner(Guid,Guid)
  nameWithType: InstancePersistenceContext.BindInstanceOwner(Guid,Guid)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.BindInstanceOwner(Guid,Guid)
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.BindReclaimedLock(System.Int64,System.TimeSpan)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: BindReclaimedLock(Int64,TimeSpan)
  nameWithType: InstancePersistenceContext.BindReclaimedLock(Int64,TimeSpan)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.BindReclaimedLock(Int64,TimeSpan)
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.CompletedInstance
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: CompletedInstance()
  nameWithType: InstancePersistenceContext.CompletedInstance()
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.CompletedInstance()
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.CompletedInstanceKey(System.Guid)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: CompletedInstanceKey(Guid)
  nameWithType: InstancePersistenceContext.CompletedInstanceKey(Guid)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.CompletedInstanceKey(Guid)
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.CreateBindReclaimedLockException(System.Int64)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: CreateBindReclaimedLockException(Int64)
  nameWithType: InstancePersistenceContext.CreateBindReclaimedLockException(Int64)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.CreateBindReclaimedLockException(Int64)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.EndBindReclaimedLock(System.IAsyncResult)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: EndBindReclaimedLock(IAsyncResult)
  nameWithType: InstancePersistenceContext.EndBindReclaimedLock(IAsyncResult)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.EndBindReclaimedLock(IAsyncResult)
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.EndExecute(System.IAsyncResult)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: EndExecute(IAsyncResult)
  nameWithType: InstancePersistenceContext.EndExecute(IAsyncResult)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.EndExecute(IAsyncResult)
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.Execute(System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: Execute(InstancePersistenceCommand,TimeSpan)
  nameWithType: InstancePersistenceContext.Execute(InstancePersistenceCommand,TimeSpan)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.Execute(InstancePersistenceCommand,TimeSpan)
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceHandle
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: InstanceHandle
  nameWithType: InstancePersistenceContext.InstanceHandle
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceHandle
- uid: System.Runtime.DurableInstancing.InstanceHandle
  parent: System.Runtime.DurableInstancing
  isExternal: false
  name: InstanceHandle
  nameWithType: InstanceHandle
  fullName: System.Runtime.DurableInstancing.InstanceHandle
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceVersion
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: InstanceVersion
  nameWithType: InstancePersistenceContext.InstanceVersion
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceVersion
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceView
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: InstanceView
  nameWithType: InstancePersistenceContext.InstanceView
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceView
- uid: System.Runtime.DurableInstancing.InstanceView
  parent: System.Runtime.DurableInstancing
  isExternal: false
  name: InstanceView
  nameWithType: InstanceView
  fullName: System.Runtime.DurableInstancing.InstanceView
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.LoadedInstance(System.Runtime.DurableInstancing.InstanceState,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue},System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue},System.Collections.Generic.IDictionary{System.Guid,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue}},System.Collections.Generic.IDictionary{System.Guid,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue}})
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: LoadedInstance(InstanceState,IDictionary<XName,InstanceValue>,IDictionary<XName,InstanceValue>,IDictionary<Guid,IDictionary<XName,InstanceValue>>,IDictionary<Guid,IDictionary<XName,InstanceValue>>)
  nameWithType: InstancePersistenceContext.LoadedInstance(InstanceState,IDictionary<XName,InstanceValue>,IDictionary<XName,InstanceValue>,IDictionary<Guid,IDictionary<XName,InstanceValue>>,IDictionary<Guid,IDictionary<XName,InstanceValue>>)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.LoadedInstance(InstanceState,IDictionary<XName,InstanceValue>,IDictionary<XName,InstanceValue>,IDictionary<Guid,IDictionary<XName,InstanceValue>>,IDictionary<Guid,IDictionary<XName,InstanceValue>>)
- uid: System.Runtime.DurableInstancing.InstanceState
  parent: System.Runtime.DurableInstancing
  isExternal: false
  name: InstanceState
  nameWithType: InstanceState
  fullName: System.Runtime.DurableInstancing.InstanceState
- uid: System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<XName,InstanceValue>
  nameWithType: IDictionary<XName,InstanceValue>
  fullName: System.Collections.Generic.IDictionary<System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xml.Linq.XName
    name: XName
    nameWithType: XName
    fullName: XName
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Runtime.DurableInstancing.InstanceValue
    name: InstanceValue
    nameWithType: InstanceValue
    fullName: InstanceValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Collections.Generic.IDictionary{System.Guid,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue}}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<Guid,IDictionary<XName,InstanceValue>>
  nameWithType: IDictionary<Guid,IDictionary<XName,InstanceValue>>
  fullName: System.Collections.Generic.IDictionary<System.Guid,System.Collections.Generic.IDictionary<System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue>>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.Guid,System.Collections.Generic.IDictionary<System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue>>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xml.Linq.XName
    name: XName
    nameWithType: XName
    fullName: XName
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Runtime.DurableInstancing.InstanceValue
    name: InstanceValue
    nameWithType: InstanceValue
    fullName: InstanceValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.LockToken
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: LockToken
  nameWithType: InstancePersistenceContext.LockToken
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.LockToken
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.PersistedInstance(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue})
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: PersistedInstance(IDictionary<XName,InstanceValue>)
  nameWithType: InstancePersistenceContext.PersistedInstance(IDictionary<XName,InstanceValue>)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.PersistedInstance(IDictionary<XName,InstanceValue>)
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.QueriedInstanceStore(System.Runtime.DurableInstancing.InstanceStoreQueryResult)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: QueriedInstanceStore(InstanceStoreQueryResult)
  nameWithType: InstancePersistenceContext.QueriedInstanceStore(InstanceStoreQueryResult)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.QueriedInstanceStore(InstanceStoreQueryResult)
- uid: System.Runtime.DurableInstancing.InstanceStoreQueryResult
  parent: System.Runtime.DurableInstancing
  isExternal: false
  name: InstanceStoreQueryResult
  nameWithType: InstanceStoreQueryResult
  fullName: System.Runtime.DurableInstancing.InstanceStoreQueryResult
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.ReadInstanceKeyMetadata(System.Guid,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue},System.Boolean)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: ReadInstanceKeyMetadata(Guid,IDictionary<XName,InstanceValue>,Boolean)
  nameWithType: InstancePersistenceContext.ReadInstanceKeyMetadata(Guid,IDictionary<XName,InstanceValue>,Boolean)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.ReadInstanceKeyMetadata(Guid,IDictionary<XName,InstanceValue>,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.ReadInstanceMetadata(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue},System.Boolean)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: ReadInstanceMetadata(IDictionary<XName,InstanceValue>,Boolean)
  nameWithType: InstancePersistenceContext.ReadInstanceMetadata(IDictionary<XName,InstanceValue>,Boolean)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.ReadInstanceMetadata(IDictionary<XName,InstanceValue>,Boolean)
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.ReadInstanceOwnerMetadata(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue},System.Boolean)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: ReadInstanceOwnerMetadata(IDictionary<XName,InstanceValue>,Boolean)
  nameWithType: InstancePersistenceContext.ReadInstanceOwnerMetadata(IDictionary<XName,InstanceValue>,Boolean)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.ReadInstanceOwnerMetadata(IDictionary<XName,InstanceValue>,Boolean)
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.SetCancellationHandler(System.Action{System.Runtime.DurableInstancing.InstancePersistenceContext})
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: SetCancellationHandler(Action<InstancePersistenceContext>)
  nameWithType: InstancePersistenceContext.SetCancellationHandler(Action<InstancePersistenceContext>)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.SetCancellationHandler(Action<InstancePersistenceContext>)
- uid: System.Action{System.Runtime.DurableInstancing.InstancePersistenceContext}
  parent: System
  isExternal: true
  name: Action<InstancePersistenceContext>
  nameWithType: Action<InstancePersistenceContext>
  fullName: System.Action<System.Runtime.DurableInstancing.InstancePersistenceContext>
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: Action<System.Runtime.DurableInstancing.InstancePersistenceContext>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Runtime.DurableInstancing.InstancePersistenceContext
    name: InstancePersistenceContext
    nameWithType: InstancePersistenceContext
    fullName: InstancePersistenceContext
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.UnassociatedInstanceKey(System.Guid)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: UnassociatedInstanceKey(Guid)
  nameWithType: InstancePersistenceContext.UnassociatedInstanceKey(Guid)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.UnassociatedInstanceKey(Guid)
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.UserContext
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: UserContext
  nameWithType: InstancePersistenceContext.UserContext
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.UserContext
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.WroteInstanceKeyMetadataValue(System.Guid,System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: WroteInstanceKeyMetadataValue(Guid,XName,InstanceValue)
  nameWithType: InstancePersistenceContext.WroteInstanceKeyMetadataValue(Guid,XName,InstanceValue)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.WroteInstanceKeyMetadataValue(Guid,XName,InstanceValue)
- uid: System.Xml.Linq.XName
  parent: System.Xml.Linq
  isExternal: true
  name: XName
  nameWithType: XName
  fullName: System.Xml.Linq.XName
- uid: System.Runtime.DurableInstancing.InstanceValue
  parent: System.Runtime.DurableInstancing
  isExternal: false
  name: InstanceValue
  nameWithType: InstanceValue
  fullName: System.Runtime.DurableInstancing.InstanceValue
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.WroteInstanceMetadataValue(System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: WroteInstanceMetadataValue(XName,InstanceValue)
  nameWithType: InstancePersistenceContext.WroteInstanceMetadataValue(XName,InstanceValue)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.WroteInstanceMetadataValue(XName,InstanceValue)
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.WroteInstanceOwnerMetadataValue(System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: WroteInstanceOwnerMetadataValue(XName,InstanceValue)
  nameWithType: InstancePersistenceContext.WroteInstanceOwnerMetadataValue(XName,InstanceValue)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.WroteInstanceOwnerMetadataValue(XName,InstanceValue)
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.AssociatedInstanceKey*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: AssociatedInstanceKey
  nameWithType: InstancePersistenceContext.AssociatedInstanceKey
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.BeginBindReclaimedLock*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: BeginBindReclaimedLock
  nameWithType: InstancePersistenceContext.BeginBindReclaimedLock
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.BeginExecute*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: BeginExecute
  nameWithType: InstancePersistenceContext.BeginExecute
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.BindAcquiredLock*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: BindAcquiredLock
  nameWithType: InstancePersistenceContext.BindAcquiredLock
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.BindEvent*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: BindEvent
  nameWithType: InstancePersistenceContext.BindEvent
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.BindInstance*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: BindInstance
  nameWithType: InstancePersistenceContext.BindInstance
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.BindInstanceOwner*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: BindInstanceOwner
  nameWithType: InstancePersistenceContext.BindInstanceOwner
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.BindReclaimedLock*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: BindReclaimedLock
  nameWithType: InstancePersistenceContext.BindReclaimedLock
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.CompletedInstance*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: CompletedInstance
  nameWithType: InstancePersistenceContext.CompletedInstance
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.CompletedInstanceKey*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: CompletedInstanceKey
  nameWithType: InstancePersistenceContext.CompletedInstanceKey
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.CreateBindReclaimedLockException*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: CreateBindReclaimedLockException
  nameWithType: InstancePersistenceContext.CreateBindReclaimedLockException
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.EndBindReclaimedLock*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: EndBindReclaimedLock
  nameWithType: InstancePersistenceContext.EndBindReclaimedLock
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.EndExecute*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: EndExecute
  nameWithType: InstancePersistenceContext.EndExecute
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.Execute*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: Execute
  nameWithType: InstancePersistenceContext.Execute
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceHandle*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: InstanceHandle
  nameWithType: InstancePersistenceContext.InstanceHandle
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceVersion*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: InstanceVersion
  nameWithType: InstancePersistenceContext.InstanceVersion
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceView*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: InstanceView
  nameWithType: InstancePersistenceContext.InstanceView
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.LoadedInstance*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: LoadedInstance
  nameWithType: InstancePersistenceContext.LoadedInstance
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.LockToken*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: LockToken
  nameWithType: InstancePersistenceContext.LockToken
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.PersistedInstance*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: PersistedInstance
  nameWithType: InstancePersistenceContext.PersistedInstance
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.QueriedInstanceStore*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: QueriedInstanceStore
  nameWithType: InstancePersistenceContext.QueriedInstanceStore
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.ReadInstanceKeyMetadata*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: ReadInstanceKeyMetadata
  nameWithType: InstancePersistenceContext.ReadInstanceKeyMetadata
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.ReadInstanceMetadata*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: ReadInstanceMetadata
  nameWithType: InstancePersistenceContext.ReadInstanceMetadata
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.ReadInstanceOwnerMetadata*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: ReadInstanceOwnerMetadata
  nameWithType: InstancePersistenceContext.ReadInstanceOwnerMetadata
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.SetCancellationHandler*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: SetCancellationHandler
  nameWithType: InstancePersistenceContext.SetCancellationHandler
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.UnassociatedInstanceKey*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: UnassociatedInstanceKey
  nameWithType: InstancePersistenceContext.UnassociatedInstanceKey
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.UserContext*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: UserContext
  nameWithType: InstancePersistenceContext.UserContext
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.WroteInstanceKeyMetadataValue*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: WroteInstanceKeyMetadataValue
  nameWithType: InstancePersistenceContext.WroteInstanceKeyMetadataValue
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.WroteInstanceMetadataValue*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: WroteInstanceMetadataValue
  nameWithType: InstancePersistenceContext.WroteInstanceMetadataValue
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.WroteInstanceOwnerMetadataValue*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: WroteInstanceOwnerMetadataValue
  nameWithType: InstancePersistenceContext.WroteInstanceOwnerMetadataValue
