### YamlMime:ManagedReference
items:
- uid: System.Windows.Automation.Provider.IToggleProvider
  id: IToggleProvider
  children:
  - System.Windows.Automation.Provider.IToggleProvider.Toggle
  - System.Windows.Automation.Provider.IToggleProvider.ToggleState
  langs:
  - csharp
  name: IToggleProvider
  nameWithType: IToggleProvider
  fullName: System.Windows.Automation.Provider.IToggleProvider
  type: Interface
  summary: "公開方法與屬性，以支援可循環瀏覽一組狀態並維護設定狀態控制項的使用者介面自動化用戶端存取。"
  remarks: "在必須支援的 UI 自動化提供者上實作<xref:System.Windows.Automation.TogglePattern>控制項模式。</xref:System.Windows.Automation.TogglePattern>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      [System.Runtime.InteropServices.Guid("56d00bd0-c4f4-433c-a836-1a52a57e0892")]

      [System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]

      public interface IToggleProvider
  implements: []
  platform:
  - net462
- uid: System.Windows.Automation.Provider.IToggleProvider.Toggle
  id: Toggle
  parent: System.Windows.Automation.Provider.IToggleProvider
  langs:
  - csharp
  name: Toggle()
  nameWithType: IToggleProvider.Toggle()
  fullName: System.Windows.Automation.Provider.IToggleProvider.Toggle()
  type: Method
  assemblies:
  - UIAutomationProvider
  namespace: System.Windows.Automation.Provider
  summary: "循環控制項的切換狀態。"
  remarks: '控制項必須循環其依此順序的切換狀態︰ <xref:System.Windows.Automation.ToggleState>， <xref:System.Windows.Automation.ToggleState>，以及 （如果支援） <xref:System.Windows.Automation.ToggleState>.</xref:System.Windows.Automation.ToggleState> </xref:System.Windows.Automation.ToggleState> </xref:System.Windows.Automation.ToggleState>'
  example:
  - "The following example shows one possible implementation of this method for a custom control that can be toggled.  \n  \n [!code-vb[UIAIToggleProvider_snip#Toggle](~/add/codesnippet/visualbasic/uiaitoggleprovider_snip/togglefragment.vb#toggle)]\n [!code-cs[UIAIToggleProvider_snip#Toggle](~/add/codesnippet/csharp/UIAIToggleProvider_snip/ToggleFragment.cs#toggle)]"
  syntax:
    content: public void Toggle ();
    parameters: []
  overload: System.Windows.Automation.Provider.IToggleProvider.Toggle*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.Provider.IToggleProvider.ToggleState
  id: ToggleState
  parent: System.Windows.Automation.Provider.IToggleProvider
  langs:
  - csharp
  name: ToggleState
  nameWithType: IToggleProvider.ToggleState
  fullName: System.Windows.Automation.Provider.IToggleProvider.ToggleState
  type: Property
  assemblies:
  - UIAutomationProvider
  namespace: System.Windows.Automation.Provider
  summary: "取得控制項的切換狀態。"
  remarks: '控制項必須循環其<xref:System.Windows.Automation.ToggleState>依此順序︰ <xref:System.Windows.Automation.ToggleState>， <xref:System.Windows.Automation.ToggleState>，以及 （如果支援） <xref:System.Windows.Automation.ToggleState>.</xref:System.Windows.Automation.ToggleState> </xref:System.Windows.Automation.ToggleState> </xref:System.Windows.Automation.ToggleState> </xref:System.Windows.Automation.ToggleState>'
  example:
  - "The following example shows an implementation of this method for a control that can be toggled. The ToggleState returned is based on the color of the control; this is analogous to the <xref:System.Windows.Controls.Primitives.ToggleButton.IsChecked%2A> property of a CheckBox control.  \n  \n [!code-vb[UIAIToggleProvider_snip#ToggleState](~/add/codesnippet/visualbasic/uiaitoggleprovider_snip/togglefragment.vb#togglestate)]\n [!code-cs[UIAIToggleProvider_snip#ToggleState](~/add/codesnippet/csharp/UIAIToggleProvider_snip/ToggleFragment.cs#togglestate)]"
  syntax:
    content: public System.Windows.Automation.ToggleState ToggleState { get; }
    return:
      type: System.Windows.Automation.ToggleState
      description: "<xref href=&quot;System.Windows.Automation.ToggleState&quot;> </xref>的控制項。"
  overload: System.Windows.Automation.Provider.IToggleProvider.ToggleState*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Automation.Provider.IToggleProvider.Toggle
  parent: System.Windows.Automation.Provider.IToggleProvider
  isExternal: false
  name: Toggle()
  nameWithType: IToggleProvider.Toggle()
  fullName: System.Windows.Automation.Provider.IToggleProvider.Toggle()
- uid: System.Windows.Automation.Provider.IToggleProvider.ToggleState
  parent: System.Windows.Automation.Provider.IToggleProvider
  isExternal: false
  name: ToggleState
  nameWithType: IToggleProvider.ToggleState
  fullName: System.Windows.Automation.Provider.IToggleProvider.ToggleState
- uid: System.Windows.Automation.ToggleState
  parent: System.Windows.Automation
  isExternal: false
  name: ToggleState
  nameWithType: ToggleState
  fullName: System.Windows.Automation.ToggleState
- uid: System.Windows.Automation.Provider.IToggleProvider.Toggle*
  parent: System.Windows.Automation.Provider.IToggleProvider
  isExternal: false
  name: Toggle
  nameWithType: IToggleProvider.Toggle
- uid: System.Windows.Automation.Provider.IToggleProvider.ToggleState*
  parent: System.Windows.Automation.Provider.IToggleProvider
  isExternal: false
  name: ToggleState
  nameWithType: IToggleProvider.ToggleState
