### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter
  id: PrefixEndpointAddressMessageFilter
  children:
  - System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.#ctor(System.ServiceModel.EndpointAddress)
  - System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.#ctor(System.ServiceModel.EndpointAddress,System.Boolean)
  - System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Address
  - System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.CreateFilterTable``1
  - System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.IncludeHostNameInComparison
  - System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Match(System.ServiceModel.Channels.Message)
  - System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)
  langs:
  - csharp
  name: PrefixEndpointAddressMessageFilter
  nameWithType: PrefixEndpointAddressMessageFilter
  fullName: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter
  type: Class
  summary: "表示測試訊息是否符合 EndpointAddress 使用查詢*長前置詞比對*URI 元件。"
  remarks: "<xref:System.ServiceModel.EndpointAddress>物件包含 URI 和選擇性定址標頭的集合。</xref:System.ServiceModel.EndpointAddress> 定址和訊息標頭會經過標準化比較相等。 如果參數出現超過一次在<xref:System.ServiceModel.EndpointAddress>，對應的標頭必須出現在訊息中至少相同次數。</xref:System.ServiceModel.EndpointAddress>       此篩選條件會執行相同的查詢， <xref:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter>，不同之處在於測試訊息是否符合端點位址由*最長前置詞比對*。</xref:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter> 這表示在篩選中指定的 URI 不需要訊息的 URI 完全相符，但必須包含在該 URI 做為前置詞。 例如，如果篩選條件指定位址&quot;www.foo.com&quot;，訊息定址到 「 www.foo.com/customerA&quot;，然後篩選查詢條件的 URI 部分將會符合。 不過，在篩選查詢的標頭部分還是必須完成。       網際網路資訊服務 (IIS) 和基礎檔案系統 （NTFS 或 FAT） 會區分大小寫。 這個類別所執行的 URI 比較也會區分大小寫。 因此，比方說，http://www.microsoft.com 會評估為等於 http://WWW.microsoft.com。"
  syntax:
    content: 'public class PrefixEndpointAddressMessageFilter : System.ServiceModel.Dispatcher.MessageFilter'
  inheritance:
  - System.Object
  - System.ServiceModel.Dispatcher.MessageFilter
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.#ctor(System.ServiceModel.EndpointAddress)
  id: '#ctor(System.ServiceModel.EndpointAddress)'
  parent: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter
  langs:
  - csharp
  name: PrefixEndpointAddressMessageFilter(EndpointAddress)
  nameWithType: PrefixEndpointAddressMessageFilter.PrefixEndpointAddressMessageFilter(EndpointAddress)
  fullName: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.PrefixEndpointAddressMessageFilter(EndpointAddress)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "初始化的新執行個體<xref href=&quot;System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter&quot;></xref>類別。"
  syntax:
    content: public PrefixEndpointAddressMessageFilter (System.ServiceModel.EndpointAddress address);
    parameters:
    - id: address
      type: System.ServiceModel.EndpointAddress
      description: "<xref:System.ServiceModel.EndpointAddress>測試時所依據的訊息。</xref:System.ServiceModel.EndpointAddress>"
  overload: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.#ctor(System.ServiceModel.EndpointAddress,System.Boolean)
  id: '#ctor(System.ServiceModel.EndpointAddress,System.Boolean)'
  parent: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter
  langs:
  - csharp
  name: PrefixEndpointAddressMessageFilter(EndpointAddress,Boolean)
  nameWithType: PrefixEndpointAddressMessageFilter.PrefixEndpointAddressMessageFilter(EndpointAddress,Boolean)
  fullName: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.PrefixEndpointAddressMessageFilter(EndpointAddress,Boolean)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "初始化的新執行個體<xref href=&quot;System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter&quot;></xref>類別。"
  remarks: "如果您有 web 服務安裝在本機電腦上，有許多對等的方法，來參考它，包括下列:-http://localhost/foo.svc-http://192.168.1.100/foo.svc-http://[my-machine-name]/foo.svc-http://[my-machine-name]。[my-company].com/foo.svc。       如果值`includeHostNameInComparison`參數是`false`，則上述 Uri 全都會解析為相同的端點。"
  syntax:
    content: public PrefixEndpointAddressMessageFilter (System.ServiceModel.EndpointAddress address, bool includeHostNameInComparison);
    parameters:
    - id: address
      type: System.ServiceModel.EndpointAddress
      description: "<xref:System.ServiceModel.EndpointAddress>測試時所依據的訊息。</xref:System.ServiceModel.EndpointAddress>"
    - id: includeHostNameInComparison
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果主機名稱是否包含在端點位址比較中。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Address
  id: Address
  parent: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter
  langs:
  - csharp
  name: Address
  nameWithType: PrefixEndpointAddressMessageFilter.Address
  fullName: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Address
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "取得端點位址<xref href=&quot;System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter&quot;></xref>測試訊息時所依據。"
  syntax:
    content: public System.ServiceModel.EndpointAddress Address { get; }
    return:
      type: System.ServiceModel.EndpointAddress
      description: "<xref:System.ServiceModel.EndpointAddress>， <xref href=&quot;System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter&quot;> </xref>測試訊息時所針對。</xref:System.ServiceModel.EndpointAddress>"
  overload: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Address*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.CreateFilterTable``1
  id: CreateFilterTable``1
  parent: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter
  langs:
  - csharp
  name: CreateFilterTable()
  nameWithType: PrefixEndpointAddressMessageFilter.CreateFilterTable()
  fullName: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.CreateFilterTable()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  syntax:
    content: protected override System.ServiceModel.Dispatcher.IMessageFilterTable<FilterData> CreateFilterTable<FilterData> ();
    parameters: []
    return:
      type: System.ServiceModel.Dispatcher.IMessageFilterTable{FilterData}
      description: "即將加入。"
  overload: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.CreateFilterTable<FilterData>*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.IncludeHostNameInComparison
  id: IncludeHostNameInComparison
  parent: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter
  langs:
  - csharp
  name: IncludeHostNameInComparison
  nameWithType: PrefixEndpointAddressMessageFilter.IncludeHostNameInComparison
  fullName: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.IncludeHostNameInComparison
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "取得值，指出是否要將主機名稱包含端點位址比較中。"
  remarks: "如果您有 web 服務安裝在本機電腦上，有許多對等的方法，來參考它，包括下列:-http://localhost/foo.svc-http://192.168.1.100/foo.svc-http://[my-machine-name]/foo.svc-http://[my-machine-name]。[my-company].com/foo.svc。       這個屬性的預設值是`false`，因此上述 Uri 全都會解析成相同的端點，，除非您變更這個屬性。"
  syntax:
    content: public bool IncludeHostNameInComparison { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果主機名稱是否包含在端點位址比較中。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.IncludeHostNameInComparison*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Match(System.ServiceModel.Channels.Message)
  id: Match(System.ServiceModel.Channels.Message)
  parent: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter
  langs:
  - csharp
  name: Match(Message)
  nameWithType: PrefixEndpointAddressMessageFilter.Match(Message)
  fullName: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Match(Message)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "測試訊息是否符合指定之端點位址。"
  remarks: "這個方法的兩個多載是相等的因為此篩選器不會檢查訊息本文，而僅位址，來進行最長前置詞比對，並接著標頭。"
  syntax:
    content: public override bool Match (System.ServiceModel.Channels.Message message);
    parameters:
    - id: message
      type: System.ServiceModel.Channels.Message
      description: "<xref:System.ServiceModel.Channels.Message>要測試的物件</xref:System.ServiceModel.Channels.Message>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref:System.ServiceModel.Channels.Message>物件符合篩選器; 中指定的端點位址否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.ServiceModel.Channels.Message>"
  overload: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Match*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>message</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)
  id: Match(System.ServiceModel.Channels.MessageBuffer)
  parent: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter
  langs:
  - csharp
  name: Match(MessageBuffer)
  nameWithType: PrefixEndpointAddressMessageFilter.Match(MessageBuffer)
  fullName: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Match(MessageBuffer)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "測試緩衝的訊息是否符合指定之端點位址。"
  remarks: "這個方法的兩個多載是相等的因為此篩選器不會檢查訊息本文，而僅位址，來進行最長前置詞比對，並接著標頭。"
  syntax:
    content: public override bool Match (System.ServiceModel.Channels.MessageBuffer messageBuffer);
    parameters:
    - id: messageBuffer
      type: System.ServiceModel.Channels.MessageBuffer
      description: "<xref:System.ServiceModel.Channels.MessageBuffer>要測試的物件</xref:System.ServiceModel.Channels.MessageBuffer>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref:System.ServiceModel.Channels.MessageBuffer>物件符合端點位址，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.ServiceModel.Channels.MessageBuffer>"
  overload: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Match*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>messageBuffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.ServiceModel.Dispatcher.MessageFilter
  isExternal: false
  name: System.ServiceModel.Dispatcher.MessageFilter
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.#ctor(System.ServiceModel.EndpointAddress)
  parent: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter
  isExternal: false
  name: PrefixEndpointAddressMessageFilter(EndpointAddress)
  nameWithType: PrefixEndpointAddressMessageFilter.PrefixEndpointAddressMessageFilter(EndpointAddress)
  fullName: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.PrefixEndpointAddressMessageFilter(EndpointAddress)
- uid: System.ServiceModel.EndpointAddress
  parent: System.ServiceModel
  isExternal: true
  name: EndpointAddress
  nameWithType: EndpointAddress
  fullName: System.ServiceModel.EndpointAddress
- uid: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.#ctor(System.ServiceModel.EndpointAddress,System.Boolean)
  parent: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter
  isExternal: false
  name: PrefixEndpointAddressMessageFilter(EndpointAddress,Boolean)
  nameWithType: PrefixEndpointAddressMessageFilter.PrefixEndpointAddressMessageFilter(EndpointAddress,Boolean)
  fullName: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.PrefixEndpointAddressMessageFilter(EndpointAddress,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Address
  parent: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter
  isExternal: false
  name: Address
  nameWithType: PrefixEndpointAddressMessageFilter.Address
  fullName: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Address
- uid: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.CreateFilterTable``1
  parent: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter
  isExternal: false
  name: CreateFilterTable()
  nameWithType: PrefixEndpointAddressMessageFilter.CreateFilterTable()
  fullName: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.CreateFilterTable()
- uid: System.ServiceModel.Dispatcher.IMessageFilterTable{FilterData}
  parent: System.ServiceModel.Dispatcher
  isExternal: false
  name: IMessageFilterTable<FilterData>
  nameWithType: IMessageFilterTable<FilterData>
  fullName: System.ServiceModel.Dispatcher.IMessageFilterTable<FilterData>
  spec.csharp:
  - uid: System.ServiceModel.Dispatcher.IMessageFilterTable`1
    name: IMessageFilterTable
    nameWithType: IMessageFilterTable
    fullName: IMessageFilterTable<FilterData>
  - name: <
    nameWithType: <
    fullName: <
  - uid: FilterData
    name: FilterData
    nameWithType: FilterData
    fullName: FilterData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.IncludeHostNameInComparison
  parent: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter
  isExternal: false
  name: IncludeHostNameInComparison
  nameWithType: PrefixEndpointAddressMessageFilter.IncludeHostNameInComparison
  fullName: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.IncludeHostNameInComparison
- uid: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Match(System.ServiceModel.Channels.Message)
  parent: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter
  isExternal: false
  name: Match(Message)
  nameWithType: PrefixEndpointAddressMessageFilter.Match(Message)
  fullName: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Match(Message)
- uid: System.ServiceModel.Channels.Message
  parent: System.ServiceModel.Channels
  isExternal: true
  name: Message
  nameWithType: Message
  fullName: System.ServiceModel.Channels.Message
- uid: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)
  parent: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter
  isExternal: false
  name: Match(MessageBuffer)
  nameWithType: PrefixEndpointAddressMessageFilter.Match(MessageBuffer)
  fullName: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Match(MessageBuffer)
- uid: System.ServiceModel.Channels.MessageBuffer
  parent: System.ServiceModel.Channels
  isExternal: true
  name: MessageBuffer
  nameWithType: MessageBuffer
  fullName: System.ServiceModel.Channels.MessageBuffer
- uid: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.#ctor*
  parent: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter
  isExternal: false
  name: PrefixEndpointAddressMessageFilter
  nameWithType: PrefixEndpointAddressMessageFilter.PrefixEndpointAddressMessageFilter
- uid: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Address*
  parent: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter
  isExternal: false
  name: Address
  nameWithType: PrefixEndpointAddressMessageFilter.Address
- uid: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.CreateFilterTable<FilterData>*
  parent: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter
  isExternal: false
  name: CreateFilterTable<FilterData>
  nameWithType: PrefixEndpointAddressMessageFilter.CreateFilterTable<FilterData>
- uid: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.IncludeHostNameInComparison*
  parent: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter
  isExternal: false
  name: IncludeHostNameInComparison
  nameWithType: PrefixEndpointAddressMessageFilter.IncludeHostNameInComparison
- uid: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Match*
  parent: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter
  isExternal: false
  name: Match
  nameWithType: PrefixEndpointAddressMessageFilter.Match
