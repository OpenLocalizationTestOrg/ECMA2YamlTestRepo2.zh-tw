### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualBasic.Devices.Mouse
  id: Mouse
  children:
  - Microsoft.VisualBasic.Devices.Mouse.#ctor
  - Microsoft.VisualBasic.Devices.Mouse.ButtonsSwapped
  - Microsoft.VisualBasic.Devices.Mouse.WheelExists
  - Microsoft.VisualBasic.Devices.Mouse.WheelScrollLines
  langs:
  - csharp
  name: Mouse
  nameWithType: Mouse
  fullName: Microsoft.VisualBasic.Devices.Mouse
  type: Class
  summary: "提供用於取得屬性的格式和本機電腦上安裝的滑鼠的組態資訊。"
  remarks: "`My.Computer.Mouse`物件可用來尋找電腦的滑鼠相關資訊︰ 是否已交換滑鼠按鈕，以及滑鼠滾輪詳細資料。      ## 專案類型的可用性 | | |  |-|-|  |專案類型 |可用 |  |Windows 應用程式 |**Yes**|  |類別庫 |**Yes**|  |主控台應用程式 |**Yes**|  |Windows 控制項程式庫 |**Yes**|  |Web 控制項程式庫 |否 |  |Windows 服務 |**Yes**|  |網站 |否 |"
  example:
  - "This example uses the `My.Computer.Mouse.WheelExists` and `My.Computer.Mouse.WheelScrollLines` properties to determine if the mouse has a scroll wheel and how much to scroll when it rotates.  \n  \n [!code-vb[VbVbalrMyComputer#26](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class2.vb#26)]"
  syntax:
    content: public class Mouse
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Mouse.#ctor
  id: '#ctor'
  parent: Microsoft.VisualBasic.Devices.Mouse
  langs:
  - csharp
  name: Mouse()
  nameWithType: Mouse.Mouse()
  fullName: Microsoft.VisualBasic.Devices.Mouse.Mouse()
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "初始化的新執行個體<xref href=&quot;Microsoft.VisualBasic.Devices.Mouse&quot;></xref>類別。"
  remarks: 'The `My.Computer.Mouse` object provides a way to find information about the computer''s mouse: whether the mouse buttons are swapped and details about the mouse wheel.'
  syntax:
    content: public Mouse ();
    parameters: []
  overload: Microsoft.VisualBasic.Devices.Mouse.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Mouse.ButtonsSwapped
  id: ButtonsSwapped
  parent: Microsoft.VisualBasic.Devices.Mouse
  langs:
  - csharp
  name: ButtonsSwapped
  nameWithType: Mouse.ButtonsSwapped
  fullName: Microsoft.VisualBasic.Devices.Mouse.ButtonsSwapped
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "取得<xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref> ，指出是否已調換滑鼠左右按鈕的功能。"
  remarks: "`My.Computer.Mouse.ButtonsSwapped`屬性:-提供類似的功能<xref:System.Windows.Forms.SystemInformation.MouseButtonsSwapped%2A>屬性。</xref:System.Windows.Forms.SystemInformation.MouseButtonsSwapped%2A>      -提供電腦可執行程式碼的相關資訊。      ## 專案類型的可用性 | | |  |-|-|  |專案類型 |可用 |  |Windows 應用程式 |**Yes**|  |類別庫 |**Yes**|  |主控台應用程式 |**Yes**|  |Windows 控制項程式庫 |**Yes**|  |Web 控制項程式庫 |否 |  |Windows 服務 |**Yes**|  |網站 |否 |"
  example:
  - "This example uses the `My.Computer.Mouse.ButtonsSwapped` property to determine if functionality of the left and right mouse buttons has been swapped.  \n  \n [!code-vb[VbVbalrMyComputer#35](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class2.vb#35)]"
  syntax:
    content: public bool ButtonsSwapped { get; }
    return:
      type: System.Boolean
      description: "A <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref>值<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>如果滑鼠左鍵和右鍵功能已交換，否則<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>。"
  overload: Microsoft.VisualBasic.Devices.Mouse.ButtonsSwapped*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "電腦已安裝滑鼠。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Mouse.WheelExists
  id: WheelExists
  parent: Microsoft.VisualBasic.Devices.Mouse
  langs:
  - csharp
  name: WheelExists
  nameWithType: Mouse.WheelExists
  fullName: Microsoft.VisualBasic.Devices.Mouse.WheelExists
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "取得<xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref> ，指出是否滑鼠有滾輪。"
  remarks: "`My.Computer.Mouse.WheelExists`屬性會提供類似的功能<xref:System.Windows.Forms.SystemInformation.MouseWheelPresent%2A>屬性。</xref:System.Windows.Forms.SystemInformation.MouseWheelPresent%2A>       您應該檢查的值`My.Computer.Mouse.WheelExists`屬性之後再嘗試存取<xref:Microsoft.VisualBasic.Devices.Mouse.WheelScrollLines%2A>屬性，就會擲回例外狀況，如果滑鼠滾輪。</xref:Microsoft.VisualBasic.Devices.Mouse.WheelScrollLines%2A>       `My.Computer.Mouse.WheelExists`屬性會提供執行的程式碼之電腦的相關資訊。      ## 專案類型的可用性 | | |  |-|-|  |專案類型 |可用 |  |Windows 應用程式 |**Yes**|  |類別庫 |**Yes**|  |主控台應用程式 |**Yes**|  |Windows 控制項程式庫 |**Yes**|  |Web 控制項程式庫 |否 |  |Windows 服務 |**Yes**|  |網站 |否 |"
  example:
  - "This example uses the `My.Computer.Mouse.WheelExists` property to determine if the mouse has a scroll wheel and how much to scroll when the mouse wheel is rotated.  \n  \n [!code-vb[VbVbalrMyComputer#26](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class2.vb#26)]"
  syntax:
    content: public bool WheelExists { get; }
    return:
      type: System.Boolean
      description: "布林值具有值<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>滑鼠有滾輪; 否則<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>。"
  overload: Microsoft.VisualBasic.Devices.Mouse.WheelExists*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "電腦已安裝滑鼠。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Mouse.WheelScrollLines
  id: WheelScrollLines
  parent: Microsoft.VisualBasic.Devices.Mouse
  langs:
  - csharp
  name: WheelScrollLines
  nameWithType: Mouse.WheelScrollLines
  fullName: Microsoft.VisualBasic.Devices.Mouse.WheelScrollLines
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "取得值，指出要捲動滑鼠滾輪時旋轉一格。"
  remarks: "您可以使用這個屬性來判斷多少行向上或向下捲動有捲軸的多行控制項。       `My.Computer.Mouse.WheelScrollLines`屬性會提供類似的功能<xref:System.Windows.Forms.SystemInformation.MouseWheelScrollLines%2A>屬性。</xref:System.Windows.Forms.SystemInformation.MouseWheelScrollLines%2A>       因為如果滑鼠滾輪，則這個屬性會擲回例外狀況，您應該確定滑鼠有滾輪，藉由檢查`My.Computer.Mouse.WheelExists`屬性。       這個屬性會提供執行的程式碼的電腦的相關資訊。      ## 專案類型的可用性 | | |  |-|-|  |專案類型 |可用 |  |Windows 應用程式 |**Yes**|  |類別庫 |**Yes**|  |主控台應用程式 |**Yes**|  |Windows 控制項程式庫 |**Yes**|  |Web 控制項程式庫 |否 |  |Windows 服務 |**Yes**|  |網站 |否 |"
  example:
  - "This example determines if the mouse has a scroll wheel and uses the `My.Computer.Mouse.WheelExists` property to determine how much to scroll when the mouse wheel is rotated.  \n  \n [!code-vb[VbVbalrMyComputer#26](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class2.vb#26)]"
  syntax:
    content: public int WheelScrollLines { get; }
    return:
      type: System.Int32
      description: "<xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> ，指出要捲動滑鼠滾輪時旋轉一格。 正值表示捲動的行，該數字負數值表示一次捲動一個螢幕。"
  overload: Microsoft.VisualBasic.Devices.Mouse.WheelScrollLines*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "滑鼠有沒有滾輪。"
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: Microsoft.VisualBasic.Devices.Mouse.#ctor
  parent: Microsoft.VisualBasic.Devices.Mouse
  isExternal: false
  name: Mouse()
  nameWithType: Mouse.Mouse()
  fullName: Microsoft.VisualBasic.Devices.Mouse.Mouse()
- uid: Microsoft.VisualBasic.Devices.Mouse.ButtonsSwapped
  parent: Microsoft.VisualBasic.Devices.Mouse
  isExternal: false
  name: ButtonsSwapped
  nameWithType: Mouse.ButtonsSwapped
  fullName: Microsoft.VisualBasic.Devices.Mouse.ButtonsSwapped
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.VisualBasic.Devices.Mouse.WheelExists
  parent: Microsoft.VisualBasic.Devices.Mouse
  isExternal: false
  name: WheelExists
  nameWithType: Mouse.WheelExists
  fullName: Microsoft.VisualBasic.Devices.Mouse.WheelExists
- uid: Microsoft.VisualBasic.Devices.Mouse.WheelScrollLines
  parent: Microsoft.VisualBasic.Devices.Mouse
  isExternal: false
  name: WheelScrollLines
  nameWithType: Mouse.WheelScrollLines
  fullName: Microsoft.VisualBasic.Devices.Mouse.WheelScrollLines
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.VisualBasic.Devices.Mouse.#ctor*
  parent: Microsoft.VisualBasic.Devices.Mouse
  isExternal: false
  name: Mouse
  nameWithType: Mouse.Mouse
- uid: Microsoft.VisualBasic.Devices.Mouse.ButtonsSwapped*
  parent: Microsoft.VisualBasic.Devices.Mouse
  isExternal: false
  name: ButtonsSwapped
  nameWithType: Mouse.ButtonsSwapped
- uid: Microsoft.VisualBasic.Devices.Mouse.WheelExists*
  parent: Microsoft.VisualBasic.Devices.Mouse
  isExternal: false
  name: WheelExists
  nameWithType: Mouse.WheelExists
- uid: Microsoft.VisualBasic.Devices.Mouse.WheelScrollLines*
  parent: Microsoft.VisualBasic.Devices.Mouse
  isExternal: false
  name: WheelScrollLines
  nameWithType: Mouse.WheelScrollLines
