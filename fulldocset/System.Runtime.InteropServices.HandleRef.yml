### YamlMime:ManagedReference
items:
- uid: System.Runtime.InteropServices.HandleRef
  id: HandleRef
  children:
  - System.Runtime.InteropServices.HandleRef.#ctor(System.Object,System.IntPtr)
  - System.Runtime.InteropServices.HandleRef.Handle
  - System.Runtime.InteropServices.HandleRef.op_Explicit(System.Runtime.InteropServices.HandleRef to System.IntPtr)
  - System.Runtime.InteropServices.HandleRef.ToIntPtr(System.Runtime.InteropServices.HandleRef)
  - System.Runtime.InteropServices.HandleRef.Wrapper
  langs:
  - csharp
  name: HandleRef
  nameWithType: HandleRef
  fullName: System.Runtime.InteropServices.HandleRef
  type: Struct
  summary: "會包裝 managed 的物件持有控制代碼到的資源，會傳遞至 unmanaged 程式碼使用平台叫用。"
  remarks: "> [!IMPORTANT]> 開頭的.NET Framework 2.0，HandleRef 類別的功能已被取代<xref:System.Runtime.InteropServices.SafeHandle>類別和其衍生的類別，也可藉由<xref:System.Runtime.InteropServices.CriticalHandle>類別</xref:System.Runtime.InteropServices.CriticalHandle></xref:System.Runtime.InteropServices.SafeHandle>       如果您使用平台叫用呼叫 managed 的物件，與平台叫用呼叫之後未其他位置參考物件，便可完成受管理的物件的記憶體回收行程。 這個動作會釋放資源，並且使控制代碼，造成平台叫用呼叫失敗。 包裝的控制代碼與 HandleRef 保證確認受管理的物件不是平台叫用呼叫之前回收完成。 如需說明的平台叫用服務，請參閱[使用 Unmanaged DLL 函式](~/add/includes/ajax-current-ext-md.md)。       HandleRef 實值類型，例如<xref:System.Runtime.InteropServices.GCHandle>，是一種特殊 interop 封送處理器所辨識。</xref:System.Runtime.InteropServices.GCHandle> 是標準的 nonpinned<xref:System.Runtime.InteropServices.GCHandle>卻 HandleRef 提供更佳的效能，也會防止延誤回收。</xref:System.Runtime.InteropServices.GCHandle> 雖然使用 HandleRef 讓物件保持運作期間的平台叫用呼叫慣用，您也可以使用<xref:System.GC.KeepAlive%2A?displayProperty=fullName>達成相同目的的方法。</xref:System.GC.KeepAlive%2A?displayProperty=fullName>       HandleRef 建構函式接受兩個參數︰<xref:System.Object>代表包裝函式，和<xref:System.IntPtr>代表 unmanaged 控制代碼。</xref:System.IntPtr> </xref:System.Object> Interop 封送處理器只控制代碼傳遞至 unmanaged 程式碼，並可確保包裝函式 (當做第一個參數傳遞給建構函式`HandleRef`) 呼叫期間保持運作。"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public struct HandleRef
  inheritance:
  - System.ValueType
  implements: []
  platform:
  - net462
- uid: System.Runtime.InteropServices.HandleRef.#ctor(System.Object,System.IntPtr)
  id: '#ctor(System.Object,System.IntPtr)'
  parent: System.Runtime.InteropServices.HandleRef
  langs:
  - csharp
  name: HandleRef(Object,IntPtr)
  nameWithType: HandleRef.HandleRef(Object,IntPtr)
  fullName: System.Runtime.InteropServices.HandleRef.HandleRef(Object,IntPtr)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "初始化的新執行個體<xref href=&quot;System.Runtime.InteropServices.HandleRef&quot;></xref>要包裝的物件與 unmanaged 程式碼所使用的資源控制代碼的類別。"
  syntax:
    content: public HandleRef (object wrapper, IntPtr handle);
    parameters:
    - id: wrapper
      type: System.Object
      description: "傳回應該不會結束之前的平台叫用呼叫的 managed 的物件。"
    - id: handle
      type: System.IntPtr
      description: "<xref:System.IntPtr>，表示資源的控制代碼。</xref:System.IntPtr>"
  overload: System.Runtime.InteropServices.HandleRef.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices.HandleRef.Handle
  id: Handle
  parent: System.Runtime.InteropServices.HandleRef
  langs:
  - csharp
  name: Handle
  nameWithType: HandleRef.Handle
  fullName: System.Runtime.InteropServices.HandleRef.Handle
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "取得資源的控制代碼。"
  syntax:
    content: public IntPtr Handle { get; }
    return:
      type: System.IntPtr
      description: "資源控制代碼。"
  overload: System.Runtime.InteropServices.HandleRef.Handle*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices.HandleRef.op_Explicit(System.Runtime.InteropServices.HandleRef to System.IntPtr)
  id: op_Explicit(System.Runtime.InteropServices.HandleRef to System.IntPtr)
  parent: System.Runtime.InteropServices.HandleRef
  langs:
  - csharp
  name: op_Explicit(HandleRef)
  nameWithType: HandleRef.op_Explicit(HandleRef)
  fullName: System.Runtime.InteropServices.HandleRef.op_Explicit(HandleRef)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  syntax:
    content: public static IntPtr op_Explicit (System.Runtime.InteropServices.HandleRef value);
    parameters:
    - id: value
      type: System.Runtime.InteropServices.HandleRef
      description: "即將加入。"
    return:
      type: System.IntPtr
      description: "即將加入。"
  overload: System.Runtime.InteropServices.HandleRef.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices.HandleRef.ToIntPtr(System.Runtime.InteropServices.HandleRef)
  id: ToIntPtr(System.Runtime.InteropServices.HandleRef)
  parent: System.Runtime.InteropServices.HandleRef
  langs:
  - csharp
  name: ToIntPtr(HandleRef)
  nameWithType: HandleRef.ToIntPtr(HandleRef)
  fullName: System.Runtime.InteropServices.HandleRef.ToIntPtr(HandleRef)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "傳回的內部整數表示<xref href=&quot;System.Runtime.InteropServices.HandleRef&quot;></xref>物件。"
  syntax:
    content: public static IntPtr ToIntPtr (System.Runtime.InteropServices.HandleRef value);
    parameters:
    - id: value
      type: System.Runtime.InteropServices.HandleRef
      description: "A <xref href=&quot;System.Runtime.InteropServices.HandleRef&quot;> </xref>擷取從內部的整數表示的物件。"
    return:
      type: System.IntPtr
      description: "<xref:System.IntPtr>物件，代表<xref href=&quot;System.Runtime.InteropServices.HandleRef&quot;></xref>物件。</xref:System.IntPtr>"
  overload: System.Runtime.InteropServices.HandleRef.ToIntPtr*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices.HandleRef.Wrapper
  id: Wrapper
  parent: System.Runtime.InteropServices.HandleRef
  langs:
  - csharp
  name: Wrapper
  nameWithType: HandleRef.Wrapper
  fullName: System.Runtime.InteropServices.HandleRef.Wrapper
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "取得存有資源控制代碼的物件。"
  syntax:
    content: public object Wrapper { get; }
    return:
      type: System.Object
      description: "存有資源控制代碼的物件。"
  overload: System.Runtime.InteropServices.HandleRef.Wrapper*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.Runtime.InteropServices.HandleRef.#ctor(System.Object,System.IntPtr)
  parent: System.Runtime.InteropServices.HandleRef
  isExternal: false
  name: HandleRef(Object,IntPtr)
  nameWithType: HandleRef.HandleRef(Object,IntPtr)
  fullName: System.Runtime.InteropServices.HandleRef.HandleRef(Object,IntPtr)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Runtime.InteropServices.HandleRef.Handle
  parent: System.Runtime.InteropServices.HandleRef
  isExternal: false
  name: Handle
  nameWithType: HandleRef.Handle
  fullName: System.Runtime.InteropServices.HandleRef.Handle
- uid: System.Runtime.InteropServices.HandleRef.op_Explicit(System.Runtime.InteropServices.HandleRef to System.IntPtr)
  parent: System.Runtime.InteropServices.HandleRef
  isExternal: false
  name: op_Explicit(HandleRef)
  nameWithType: HandleRef.op_Explicit(HandleRef)
  fullName: System.Runtime.InteropServices.HandleRef.op_Explicit(HandleRef)
- uid: System.Runtime.InteropServices.HandleRef
  parent: System.Runtime.InteropServices
  isExternal: false
  name: HandleRef
  nameWithType: HandleRef
  fullName: System.Runtime.InteropServices.HandleRef
- uid: System.Runtime.InteropServices.HandleRef.ToIntPtr(System.Runtime.InteropServices.HandleRef)
  parent: System.Runtime.InteropServices.HandleRef
  isExternal: false
  name: ToIntPtr(HandleRef)
  nameWithType: HandleRef.ToIntPtr(HandleRef)
  fullName: System.Runtime.InteropServices.HandleRef.ToIntPtr(HandleRef)
- uid: System.Runtime.InteropServices.HandleRef.Wrapper
  parent: System.Runtime.InteropServices.HandleRef
  isExternal: false
  name: Wrapper
  nameWithType: HandleRef.Wrapper
  fullName: System.Runtime.InteropServices.HandleRef.Wrapper
- uid: System.Runtime.InteropServices.HandleRef.#ctor*
  parent: System.Runtime.InteropServices.HandleRef
  isExternal: false
  name: HandleRef
  nameWithType: HandleRef.HandleRef
- uid: System.Runtime.InteropServices.HandleRef.Handle*
  parent: System.Runtime.InteropServices.HandleRef
  isExternal: false
  name: Handle
  nameWithType: HandleRef.Handle
- uid: System.Runtime.InteropServices.HandleRef.op_Explicit*
  parent: System.Runtime.InteropServices.HandleRef
  isExternal: false
  name: op_Explicit
  nameWithType: HandleRef.op_Explicit
- uid: System.Runtime.InteropServices.HandleRef.ToIntPtr*
  parent: System.Runtime.InteropServices.HandleRef
  isExternal: false
  name: ToIntPtr
  nameWithType: HandleRef.ToIntPtr
- uid: System.Runtime.InteropServices.HandleRef.Wrapper*
  parent: System.Runtime.InteropServices.HandleRef
  isExternal: false
  name: Wrapper
  nameWithType: HandleRef.Wrapper
