### YamlMime:ManagedReference
items:
- uid: System.Web.Management.WebProcessInformation
  id: WebProcessInformation
  children:
  - System.Web.Management.WebProcessInformation.AccountName
  - System.Web.Management.WebProcessInformation.FormatToString(System.Web.Management.WebEventFormatter)
  - System.Web.Management.WebProcessInformation.ProcessID
  - System.Web.Management.WebProcessInformation.ProcessName
  langs:
  - csharp
  name: WebProcessInformation
  nameWithType: WebProcessInformation
  fullName: System.Web.Management.WebProcessInformation
  type: Class
  summary: "請提供裝載 ASP.NET 工作者處理序的相關資訊。"
  remarks: "ASP.NET 健康監視，可讓管理已部署的 Web 應用程式的生產環境和作業人員。 <xref:System.Web.Management>命名空間包含負責封裝應用程式健全狀況狀態資料，健全狀況事件型別和提供者類型負責處理這項資料。</xref:System.Web.Management> 它也會包含有助於管理健全狀況事件的支援型別。       WebProcessInformation 類別的執行個體包含使用任何一種衍生自取得的資訊<xref:System.Web.Management.WebManagementEvent>型別。</xref:System.Web.Management.WebManagementEvent>       您的應用程式需要存取受保護的資訊，此類型所提供的適當權限。       下列範例是您可以使用以包含處理序資訊的記錄檔錯誤事件中啟用 ASP.NET 的組態檔的摘錄。      ```   <healthMonitoring      enabled=&quot;true&quot; heartBeatInterval=&quot;0&quot;>          <rules>        <add           name=&quot;All Errors Default&quot;          eventName=&quot;All Errors&quot;          provider=&quot;EventLogProvider&quot;          profile=&quot;Default&quot;          minInterval=&quot;00:01:00&quot; />       </rules>      </healthMonitoring>   ```      > [!NOTE]> 在大部分情況下您將能夠實作時，使用 ASP.NET 健康監視類型，而您會藉由指定的值控制健全狀況監視系統`healthMonitoring`組態區段。 您也可以衍生自健全狀況監視類型的類型來建立您自己的自訂事件和提供者。 如需建立自訂的事件類別的範例，請參閱 < 範例 > 一節。"
  example:
  - "The following example has two parts. The first is an excerpt of a configuration file that enables ASP.NET to use a custom event that uses the WebProcessInformation type.  \n  \n The second shows how to implement the custom event.  \n  \n Ensure that your custom event is raised at the proper time, that is, when the equivalent system health event it replaces would be raised.  \n  \n```  \n<healthMonitoring   \n  enabled=\"true\" heartBeatInterval=\"0\">  \n  \n    <eventMappings>  \n      <add    \n        name=\"SampleProcessInformation\"   \n        type=\"SamplesAspNet.SampleWebProcessInformation, webprocessinformation, Version=1.0.1585.27289, Culture=neutral, PublicKeyToken=3648e5c763a8239f, processorArchitecture=MSIL\"/>  \n    </eventMappings>  \n  \n    <rules>  \n      <add   \n        name=\"Custom Process Information\"  \n        eventName=\"SampleProcessInformation\"   \n        provider=\"EventLogProvider\"  \n        profile=\"Default\"/>  \n    </rules>  \n  \n</healthMonitoring>  \n  \n```  \n  \n The following example shows how to implement a custom event that uses the WebProcessInformation type.  \n  \n [!code-cs[System.Web.Management.WebProcessInformation#1](~/add/codesnippet/csharp/t-system.web.management._13_1.cs)]\n [!code-vb[System.Web.Management.WebProcessInformation#1](~/add/codesnippet/visualbasic/t-system.web.management._13_1.vb)]"
  syntax:
    content: public sealed class WebProcessInformation
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Management.WebProcessInformation.AccountName
  id: AccountName
  parent: System.Web.Management.WebProcessInformation
  langs:
  - csharp
  name: AccountName
  nameWithType: WebProcessInformation.AccountName
  fullName: System.Web.Management.WebProcessInformation.AccountName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "取得背景工作處理序的帳戶名稱。"
  remarks: "您的應用程式需要適當的權限來存取這個屬性所提供的資訊。"
  example:
  - "The following example shows how to obtain the process account name.  \n  \n [!code-cs[System.Web.Management.WebProcessInformation#4](~/add/codesnippet/csharp/p-system.web.management._38_1.cs)]\n [!code-vb[System.Web.Management.WebProcessInformation#4](~/add/codesnippet/visualbasic/p-system.web.management._38_1.vb)]"
  syntax:
    content: public string AccountName { get; }
    return:
      type: System.String
      description: "背景工作處理序帳戶名稱。"
  overload: System.Web.Management.WebProcessInformation.AccountName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Management.WebProcessInformation.FormatToString(System.Web.Management.WebEventFormatter)
  id: FormatToString(System.Web.Management.WebEventFormatter)
  parent: System.Web.Management.WebProcessInformation
  langs:
  - csharp
  name: FormatToString(WebEventFormatter)
  nameWithType: WebProcessInformation.FormatToString(WebEventFormatter)
  fullName: System.Web.Management.WebProcessInformation.FormatToString(WebEventFormatter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "格式化的應用程式資訊。"
  remarks: "FormatToString 方法提供統一的格式，如事件資訊，這非常有用，如果必須記錄，並向使用者顯示更新版本的事件資料。 當提供者會叫用的其中一個方法會在內部呼叫<xref:System.Web.Management.WebBaseEvent.ToString%2A>方法。</xref:System.Web.Management.WebBaseEvent.ToString%2A>"
  example:
  - "The following example shows how to format custom information.  \n  \n [!code-cs[System.Web.Management.WebProcessInformation#7](~/add/codesnippet/csharp/f15874b7-315f-41fa-b773-_1.cs)]\n [!code-vb[System.Web.Management.WebProcessInformation#7](~/add/codesnippet/visualbasic/f15874b7-315f-41fa-b773-_1.vb)]"
  syntax:
    content: public void FormatToString (System.Web.Management.WebEventFormatter formatter);
    parameters:
    - id: formatter
      type: System.Web.Management.WebEventFormatter
      description: "<xref href=&quot;System.Web.Management.WebEventFormatter&quot;> </xref> ，其中包含用來格式化網頁健全狀況事件資訊的索引標籤和縮排設定。"
  overload: System.Web.Management.WebProcessInformation.FormatToString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Management.WebProcessInformation.ProcessID
  id: ProcessID
  parent: System.Web.Management.WebProcessInformation
  langs:
  - csharp
  name: ProcessID
  nameWithType: WebProcessInformation.ProcessID
  fullName: System.Web.Management.WebProcessInformation.ProcessID
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "取得處理序識別碼。"
  remarks: "這是裝載 ASP.NET 工作者處理序的識別碼。"
  example:
  - "The following example shows how to obtain the process identifier.  \n  \n [!code-cs[System.Web.Management.WebProcessInformation#5](~/add/codesnippet/csharp/p-system.web.management._19_1.cs)]\n [!code-vb[System.Web.Management.WebProcessInformation#5](~/add/codesnippet/visualbasic/p-system.web.management._19_1.vb)]"
  syntax:
    content: public int ProcessID { get; }
    return:
      type: System.Int32
      description: "處理序識別碼。"
  overload: System.Web.Management.WebProcessInformation.ProcessID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Management.WebProcessInformation.ProcessName
  id: ProcessName
  parent: System.Web.Management.WebProcessInformation
  langs:
  - csharp
  name: ProcessName
  nameWithType: WebProcessInformation.ProcessName
  fullName: System.Web.Management.WebProcessInformation.ProcessName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "取得處理序名稱。"
  remarks: "這是裝載 ASP.NET 工作者處理序的名稱。"
  example:
  - "The following example shows how to obtain the process name.  \n  \n [!code-cs[System.Web.Management.WebProcessInformation#6](~/add/codesnippet/csharp/p-system.web.management._6_1.cs)]\n [!code-vb[System.Web.Management.WebProcessInformation#6](~/add/codesnippet/visualbasic/p-system.web.management._6_1.vb)]"
  syntax:
    content: public string ProcessName { get; }
    return:
      type: System.String
      description: "處理序名稱。"
  overload: System.Web.Management.WebProcessInformation.ProcessName*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.Management.WebProcessInformation.AccountName
  parent: System.Web.Management.WebProcessInformation
  isExternal: false
  name: AccountName
  nameWithType: WebProcessInformation.AccountName
  fullName: System.Web.Management.WebProcessInformation.AccountName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Management.WebProcessInformation.FormatToString(System.Web.Management.WebEventFormatter)
  parent: System.Web.Management.WebProcessInformation
  isExternal: false
  name: FormatToString(WebEventFormatter)
  nameWithType: WebProcessInformation.FormatToString(WebEventFormatter)
  fullName: System.Web.Management.WebProcessInformation.FormatToString(WebEventFormatter)
- uid: System.Web.Management.WebEventFormatter
  parent: System.Web.Management
  isExternal: false
  name: WebEventFormatter
  nameWithType: WebEventFormatter
  fullName: System.Web.Management.WebEventFormatter
- uid: System.Web.Management.WebProcessInformation.ProcessID
  parent: System.Web.Management.WebProcessInformation
  isExternal: false
  name: ProcessID
  nameWithType: WebProcessInformation.ProcessID
  fullName: System.Web.Management.WebProcessInformation.ProcessID
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.Management.WebProcessInformation.ProcessName
  parent: System.Web.Management.WebProcessInformation
  isExternal: false
  name: ProcessName
  nameWithType: WebProcessInformation.ProcessName
  fullName: System.Web.Management.WebProcessInformation.ProcessName
- uid: System.Web.Management.WebProcessInformation.AccountName*
  parent: System.Web.Management.WebProcessInformation
  isExternal: false
  name: AccountName
  nameWithType: WebProcessInformation.AccountName
- uid: System.Web.Management.WebProcessInformation.FormatToString*
  parent: System.Web.Management.WebProcessInformation
  isExternal: false
  name: FormatToString
  nameWithType: WebProcessInformation.FormatToString
- uid: System.Web.Management.WebProcessInformation.ProcessID*
  parent: System.Web.Management.WebProcessInformation
  isExternal: false
  name: ProcessID
  nameWithType: WebProcessInformation.ProcessID
- uid: System.Web.Management.WebProcessInformation.ProcessName*
  parent: System.Web.Management.WebProcessInformation
  isExternal: false
  name: ProcessName
  nameWithType: WebProcessInformation.ProcessName
