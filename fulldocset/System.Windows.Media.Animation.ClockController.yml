### YamlMime:ManagedReference
items:
- uid: System.Windows.Media.Animation.ClockController
  id: ClockController
  children:
  - System.Windows.Media.Animation.ClockController.Begin
  - System.Windows.Media.Animation.ClockController.Clock
  - System.Windows.Media.Animation.ClockController.Pause
  - System.Windows.Media.Animation.ClockController.Remove
  - System.Windows.Media.Animation.ClockController.Resume
  - System.Windows.Media.Animation.ClockController.Seek(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)
  - System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)
  - System.Windows.Media.Animation.ClockController.SkipToFill
  - System.Windows.Media.Animation.ClockController.SpeedRatio
  - System.Windows.Media.Animation.ClockController.Stop
  langs:
  - csharp
  name: ClockController
  nameWithType: ClockController
  fullName: System.Windows.Media.Animation.ClockController
  type: Class
  summary: "以互動方式控制<xref href=&quot;System.Windows.Media.Animation.Clock&quot;> </xref>。"
  remarks: "若要以互動方式開始、 暫停、 繼續、 搜尋、 略過、 停止和移除<xref:System.Windows.Media.Animation.Clock>.</xref:System.Windows.Media.Animation.Clock>使用 ClockController 您可以只以互動方式控制根層級時鐘。"
  syntax:
    content: 'public sealed class ClockController : System.Windows.Threading.DispatcherObject'
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  implements: []
  inheritedMembers:
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.Media.Animation.ClockController.Begin
  id: Begin
  parent: System.Windows.Media.Animation.ClockController
  langs:
  - csharp
  name: Begin()
  nameWithType: ClockController.Begin()
  fullName: System.Windows.Media.Animation.ClockController.Begin()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "設定目標<xref:System.Windows.Media.Animation.ClockController.Clock*>在下一個刻度開始。</xref:System.Windows.Media.Animation.ClockController.Clock*>"
  remarks: "這個方法會導致目標<xref:System.Windows.Media.Animation.Clock>一樣的行為及其<xref:System.Windows.Media.Animation.Timeline>物件的<xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>會設定為下一個刻度的時間。</xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> </xref:System.Windows.Media.Animation.Timeline> </xref:System.Windows.Media.Animation.Clock> 時間軸的實際<xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>設定為忽略 （但不是會變更）。</xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>       這個方法會變更目標時鐘的<xref:System.Windows.Media.Animation.Clock.CurrentState%2A><xref:System.Windows.Media.Animation.ClockState>.</xref:System.Windows.Media.Animation.ClockState> </xref:System.Windows.Media.Animation.Clock.CurrentState%2A> Begin 方法不會繼續暫停的時鐘。       這個方法沒有不會影響時間樹狀結構，直到下一次處理一個刻度時。 副作用，適當系統也不會引發事件之前。 呼叫這個方法會觸發<xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated>和<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>事件。</xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> </xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated>"
  syntax:
    content: public void Begin ();
    parameters: []
  overload: System.Windows.Media.Animation.ClockController.Begin*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.ClockController.Clock
  id: Clock
  parent: System.Windows.Media.Animation.ClockController
  langs:
  - csharp
  name: Clock
  nameWithType: ClockController.Clock
  fullName: System.Windows.Media.Animation.ClockController.Clock
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "取得<xref href=&quot;System.Windows.Media.Animation.Clock&quot;></xref>由此控制<xref href=&quot;System.Windows.Media.Animation.ClockController&quot;> </xref>。"
  syntax:
    content: public System.Windows.Media.Animation.Clock Clock { get; }
    return:
      type: System.Windows.Media.Animation.Clock
      description: "<xref href=&quot;System.Windows.Media.Animation.Clock&quot;> </xref>由此控制<xref href=&quot;System.Windows.Media.Animation.ClockController&quot;> </xref>。"
  overload: System.Windows.Media.Animation.ClockController.Clock*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.ClockController.Pause
  id: Pause
  parent: System.Windows.Media.Animation.ClockController
  langs:
  - csharp
  name: Pause()
  nameWithType: ClockController.Pause()
  fullName: System.Windows.Media.Animation.ClockController.Pause()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "停止目標<xref href=&quot;System.Windows.Media.Animation.Clock&quot;></xref>的進行。"
  remarks: "您可以暫停<xref:System.Windows.Media.Animation.Clock>不論其目前的狀態，和暫停時鐘不會變更目前的狀態。</xref:System.Windows.Media.Animation.Clock> 可以暫停時鐘時<xref:System.Windows.Media.Animation.ClockState>， <xref:System.Windows.Media.Animation.ClockState>，或<xref:System.Windows.Media.Animation.ClockState>.</xref:System.Windows.Media.Animation.ClockState> </xref:System.Windows.Media.Animation.ClockState> </xref:System.Windows.Media.Animation.ClockState> 若要恢復暫停時鐘的唯一方法是使用<xref:System.Windows.Media.Animation.ClockController.Resume%2A>方法。</xref:System.Windows.Media.Animation.ClockController.Resume%2A> 暫停時鐘會隱含地暫停其子系。       當目標時鐘已暫停時呼叫這個方法沒有任何作用。       暫停時鐘的觸發程序<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>事件。</xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>"
  syntax:
    content: public void Pause ();
    parameters: []
  overload: System.Windows.Media.Animation.ClockController.Pause*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.ClockController.Remove
  id: Remove
  parent: System.Windows.Media.Animation.ClockController
  langs:
  - csharp
  name: Remove()
  nameWithType: ClockController.Remove()
  fullName: System.Windows.Media.Animation.ClockController.Remove()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "移除<xref href=&quot;System.Windows.Media.Animation.Clock&quot;></xref>與此相關聯<xref href=&quot;System.Windows.Media.Animation.ClockController&quot;></xref>從它所繪製的屬性。 時鐘與其子時鐘會不會再影響這些屬性。"
  remarks: "這個方法會觸發<xref:System.Windows.Media.Animation.Clock.RemoveRequested>事件。</xref:System.Windows.Media.Animation.Clock.RemoveRequested>"
  example:
  - "The following example shows how to remove and otherwise interactively control a clock.  \n  \n [!code-vb[ClockController_procedural_snip#ClockControllerSeekExample](~/add/codesnippet/visualbasic/clockcontroller_procedural_snip/seekalignedtolasttickexample.vb#clockcontrollerseekexample)]\n [!code-cs[ClockController_procedural_snip#ClockControllerSeekExample](~/add/codesnippet/csharp/ClockController_procedural_snip/SeekAlignedToLastTickExample.cs#clockcontrollerseekexample)]"
  syntax:
    content: public void Remove ();
    parameters: []
  overload: System.Windows.Media.Animation.ClockController.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.ClockController.Resume
  id: Resume
  parent: System.Windows.Media.Animation.ClockController
  langs:
  - csharp
  name: Resume()
  nameWithType: ClockController.Resume()
  fullName: System.Windows.Media.Animation.ClockController.Resume()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "可讓<xref href=&quot;System.Windows.Media.Animation.Clock&quot;></xref>先前暫停以繼續進行。"
  remarks: "您可以暫停或繼續<xref:System.Windows.Media.Animation.Clock>不論其目前的狀態，以及暫停或繼續的時鐘不會變更目前的狀態。</xref:System.Windows.Media.Animation.Clock> 可以暫停時鐘時<xref:System.Windows.Media.Animation.ClockState>， <xref:System.Windows.Media.Animation.ClockState>，或<xref:System.Windows.Media.Animation.ClockState>.</xref:System.Windows.Media.Animation.ClockState> </xref:System.Windows.Media.Animation.ClockState> </xref:System.Windows.Media.Animation.ClockState> 若要繼續暫停的時鐘的唯一方式是使用 Resume 方法。 以隱含方式繼續時鐘會繼續其子系。 上的時鐘未暫停，呼叫這個方法沒有任何作用。       繼續已暫停的時鐘的觸發程序<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>事件。</xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>"
  syntax:
    content: public void Resume ();
    parameters: []
  overload: System.Windows.Media.Animation.ClockController.Resume*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.ClockController.Seek(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)
  id: Seek(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)
  parent: System.Windows.Media.Animation.ClockController
  langs:
  - csharp
  name: Seek(TimeSpan,TimeSeekOrigin)
  nameWithType: ClockController.Seek(TimeSpan,TimeSeekOrigin)
  fullName: System.Windows.Media.Animation.ClockController.Seek(TimeSpan,TimeSeekOrigin)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "搜尋目標<xref:System.Windows.Media.Animation.ClockController.Clock*>根據指定的數量到達下一個刻度時。</xref:System.Windows.Media.Animation.ClockController.Clock*> 如果目標時鐘已停止，搜尋，使其作用中一次。"
  remarks: "搜尋作業不會取得<xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>或<xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>考量此時鐘的時間軸的設定︰ 時鐘會被當成其時間表具有<xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>1 個和任何<xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>。</xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> </xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> </xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> </xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>       這個方法會變更時鐘的<xref:System.Windows.Media.Animation.Clock.CurrentState%2A><xref:System.Windows.Media.Animation.ClockState>.</xref:System.Windows.Media.Animation.ClockState> </xref:System.Windows.Media.Animation.Clock.CurrentState%2A> 這個方法沒有不會影響時間樹狀結構，直到下一次處理一個刻度時。 副作用，適當的事件也將不會引發之前。       搜尋分鏡腳本的觸發程序<xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeedInvalidated>和<xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated>事件。</xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated> </xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeedInvalidated>       如果目標時鐘的子項目，其目前的時間也會一併更新。"
  example:
  - "The following example shows how to seek using a <xref:System.Windows.Media.Animation.ClockController>.  \n  \n [!code-vb[ClockController_procedural_snip#ClockControllerSeekExample](~/add/codesnippet/visualbasic/clockcontroller_procedural_snip/seekalignedtolasttickexample.vb#clockcontrollerseekexample)]\n [!code-cs[ClockController_procedural_snip#ClockControllerSeekExample](~/add/codesnippet/csharp/ClockController_procedural_snip/SeekAlignedToLastTickExample.cs#clockcontrollerseekexample)]"
  syntax:
    content: public void Seek (TimeSpan offset, System.Windows.Media.Animation.TimeSeekOrigin origin);
    parameters:
    - id: offset
      type: System.TimeSpan
      description: "搜尋位移，以目標時鐘的時間。 這個位移會與時鐘的<xref href=&quot;System.Windows.Media.Animation.TimeSeekOrigin&quot;></xref>或<xref href=&quot;System.Windows.Media.Animation.TimeSeekOrigin&quot;></xref>上的值，取決於`origin`。"
    - id: origin
      type: System.Windows.Media.Animation.TimeSeekOrigin
      description: "值，指出指定的位移是否與目標時鐘的<xref href=&quot;System.Windows.Media.Animation.TimeSeekOrigin&quot;></xref>或<xref href=&quot;System.Windows.Media.Animation.TimeSeekOrigin&quot;> </xref>。"
  overload: System.Windows.Media.Animation.ClockController.Seek*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)
  id: SeekAlignedToLastTick(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)
  parent: System.Windows.Media.Animation.ClockController
  langs:
  - csharp
  name: SeekAlignedToLastTick(TimeSpan,TimeSeekOrigin)
  nameWithType: ClockController.SeekAlignedToLastTick(TimeSpan,TimeSeekOrigin)
  fullName: System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick(TimeSpan,TimeSeekOrigin)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "搜尋目標<xref href=&quot;System.Windows.Media.Animation.Clock&quot;></xref>以立即指定的數量。 如果目標時鐘已停止，搜尋，使其作用中一次。"
  remarks: "搜尋作業不會取得<xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>或<xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>考量此時鐘的時間軸的設定︰ 時鐘會被當成其時間表具有<xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>1 個和任何<xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>。</xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> </xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> </xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> </xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>       SeekAlignedToLastTick 對齊最後一個時鐘刻度的時鐘 seeked 的時間。 即使畫面將不會反映這些變更更新螢幕之前，值立即更新以反映 SeekAlignedToLastTick，因為變更。       如果目標時鐘的子項目，其目前的時間也會一併更新。       這個方法會變更時鐘的<xref:System.Windows.Media.Animation.Clock.CurrentState%2A><xref:System.Windows.Media.Animation.ClockState>.</xref:System.Windows.Media.Animation.ClockState> </xref:System.Windows.Media.Animation.Clock.CurrentState%2A>       搜尋分鏡腳本的觸發程序<xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeedInvalidated>和<xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated>事件。</xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated> </xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeedInvalidated>"
  example:
  - "The following example demonstrates both the <xref:System.Windows.Media.Animation.ClockController.Seek%2A> and SeekAlignedToLastTick methods of a <xref:System.Windows.Media.Animation.ClockController>.  \n  \n [!code-vb[ClockController_procedural_snip#ClockControllerSeekExample](~/add/codesnippet/visualbasic/clockcontroller_procedural_snip/seekalignedtolasttickexample.vb#clockcontrollerseekexample)]\n [!code-cs[ClockController_procedural_snip#ClockControllerSeekExample](~/add/codesnippet/csharp/ClockController_procedural_snip/SeekAlignedToLastTickExample.cs#clockcontrollerseekexample)]"
  syntax:
    content: public void SeekAlignedToLastTick (TimeSpan offset, System.Windows.Media.Animation.TimeSeekOrigin origin);
    parameters:
    - id: offset
      type: System.TimeSpan
      description: "搜尋位移，以目標時鐘的時間。 這個位移會與時鐘的<xref href=&quot;System.Windows.Media.Animation.TimeSeekOrigin&quot;></xref>或<xref href=&quot;System.Windows.Media.Animation.TimeSeekOrigin&quot;></xref>上的值，取決於`origin`。"
    - id: origin
      type: System.Windows.Media.Animation.TimeSeekOrigin
      description: "值，指出指定的位移是否與目標時鐘的<xref href=&quot;System.Windows.Media.Animation.TimeSeekOrigin&quot;></xref>或<xref href=&quot;System.Windows.Media.Animation.TimeSeekOrigin&quot;> </xref>。"
  overload: System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.ClockController.SkipToFill
  id: SkipToFill
  parent: System.Windows.Media.Animation.ClockController
  langs:
  - csharp
  name: SkipToFill()
  nameWithType: ClockController.SkipToFill()
  fullName: System.Windows.Media.Animation.ClockController.SkipToFill()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "目標的目前時間往前推進<xref href=&quot;System.Windows.Media.Animation.Clock&quot;></xref>作用期的結尾。"
  remarks: "這個方法將往前推目標時鐘的目前時間的作用期; 結尾時鐘的行為在此時是指定<xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A>其<xref:System.Windows.Media.Animation.Timeline>.</xref:System.Windows.Media.Animation.Timeline>設定</xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> 如果時間軸的<xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A>屬性設定為<xref:System.Windows.Media.Animation.FillBehavior>，時鐘填滿; 如果屬性設定為<xref:System.Windows.Media.Animation.FillBehavior>，時鐘時，會停止。</xref:System.Windows.Media.Animation.FillBehavior> </xref:System.Windows.Media.Animation.FillBehavior> </xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A>       這個方法沒有效果只有當目標時鐘<xref:System.Windows.Media.Animation.Clock.CurrentState%2A>為<xref:System.Windows.Media.Animation.ClockState>。</xref:System.Windows.Media.Animation.ClockState> </xref:System.Windows.Media.Animation.Clock.CurrentState%2A>       這個方法沒有不會影響時間樹狀結構，直到下一次處理一個刻度時。 副作用，適當的事件也將不會引發之前。       跳至其填滿期間觸發程序的分鏡腳本<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>和<xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated>事件。</xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated> </xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>"
  syntax:
    content: public void SkipToFill ();
    parameters: []
  overload: System.Windows.Media.Animation.ClockController.SkipToFill*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.ClockController.SpeedRatio
  id: SpeedRatio
  parent: System.Windows.Media.Animation.ClockController
  langs:
  - csharp
  name: SpeedRatio
  nameWithType: ClockController.SpeedRatio
  fullName: System.Windows.Media.Animation.ClockController.SpeedRatio
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "取得或設定目標的互動速度<xref href=&quot;System.Windows.Media.Animation.Clock&quot;> </xref>。"
  remarks: "設定此屬性沒有任何作用，直到下一個刻度。 如果您設定此屬性，然後取得其值之前就會發生的下一個刻度，就會顯示舊的值。 這個屬性會傳回新的值之後的下一個刻度。       設定這個屬性不會變更基礎時間軸的<xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>.</xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>值       將這個屬性設定觸發程序目標時鐘的<xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeedInvalidated>事件。</xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeedInvalidated>"
  syntax:
    content: public double SpeedRatio { get; set; }
    return:
      type: System.Double
      description: "大於零的有限值描述目標時鐘的互動速度。 此值的值乘以<> *> 的時鐘的<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;> </xref>。例如，如果時間軸的<> *> 為 0.5， <xref href=&quot;System.Windows.Media.Animation.ClockController&quot;> </xref> 1.5 倍正常速度 (0.5 * 3.0) 物件的 SpeedRatio 為 3.0，時間軸移動。 預設值為 1.0。"
  overload: System.Windows.Media.Animation.ClockController.SpeedRatio*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.ClockController.Stop
  id: Stop
  parent: System.Windows.Media.Animation.ClockController
  langs:
  - csharp
  name: Stop()
  nameWithType: ClockController.Stop()
  fullName: System.Windows.Media.Animation.ClockController.Stop()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "停止目標<xref href=&quot;System.Windows.Media.Animation.Clock&quot;> </xref>。"
  remarks: "這個方法會變更目標時鐘的<xref:System.Windows.Media.Animation.Clock.CurrentState%2A><xref:System.Windows.Media.Animation.Clock.Stopped%2A>.</xref:System.Windows.Media.Animation.Clock.Stopped%2A> </xref:System.Windows.Media.Animation.Clock.CurrentState%2A>       A<xref:System.Windows.Media.Animation.Clock.Stopped%2A>時鐘可重新啟動使用<xref:System.Windows.Media.Animation.ClockController.Begin%2A>， <xref:System.Windows.Media.Animation.ClockController.Seek%2A>，或<xref:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick%2A>方法。</xref:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick%2A> </xref:System.Windows.Media.Animation.ClockController.Seek%2A> </xref:System.Windows.Media.Animation.ClockController.Begin%2A> </xref:System.Windows.Media.Animation.Clock.Stopped%2A>       這個方法沒有不會影響時間樹狀結構，直到下一次處理一個刻度時。 副作用，適當的事件也將不會引發之前。       停止時鐘的觸發程序<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>和<xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated>事件，但不是<xref:System.Windows.Media.Animation.Clock.Completed>事件。</xref:System.Windows.Media.Animation.Clock.Completed> </xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated> </xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>"
  syntax:
    content: public void Stop ();
    parameters: []
  overload: System.Windows.Media.Animation.ClockController.Stop*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Threading.DispatcherObject
  isExternal: false
  name: System.Windows.Threading.DispatcherObject
- uid: System.Windows.Media.Animation.ClockController.Begin
  parent: System.Windows.Media.Animation.ClockController
  isExternal: false
  name: Begin()
  nameWithType: ClockController.Begin()
  fullName: System.Windows.Media.Animation.ClockController.Begin()
- uid: System.Windows.Media.Animation.ClockController.Clock
  parent: System.Windows.Media.Animation.ClockController
  isExternal: false
  name: Clock
  nameWithType: ClockController.Clock
  fullName: System.Windows.Media.Animation.ClockController.Clock
- uid: System.Windows.Media.Animation.Clock
  parent: System.Windows.Media.Animation
  isExternal: false
  name: Clock
  nameWithType: Clock
  fullName: System.Windows.Media.Animation.Clock
- uid: System.Windows.Media.Animation.ClockController.Pause
  parent: System.Windows.Media.Animation.ClockController
  isExternal: false
  name: Pause()
  nameWithType: ClockController.Pause()
  fullName: System.Windows.Media.Animation.ClockController.Pause()
- uid: System.Windows.Media.Animation.ClockController.Remove
  parent: System.Windows.Media.Animation.ClockController
  isExternal: false
  name: Remove()
  nameWithType: ClockController.Remove()
  fullName: System.Windows.Media.Animation.ClockController.Remove()
- uid: System.Windows.Media.Animation.ClockController.Resume
  parent: System.Windows.Media.Animation.ClockController
  isExternal: false
  name: Resume()
  nameWithType: ClockController.Resume()
  fullName: System.Windows.Media.Animation.ClockController.Resume()
- uid: System.Windows.Media.Animation.ClockController.Seek(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)
  parent: System.Windows.Media.Animation.ClockController
  isExternal: false
  name: Seek(TimeSpan,TimeSeekOrigin)
  nameWithType: ClockController.Seek(TimeSpan,TimeSeekOrigin)
  fullName: System.Windows.Media.Animation.ClockController.Seek(TimeSpan,TimeSeekOrigin)
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Windows.Media.Animation.TimeSeekOrigin
  parent: System.Windows.Media.Animation
  isExternal: false
  name: TimeSeekOrigin
  nameWithType: TimeSeekOrigin
  fullName: System.Windows.Media.Animation.TimeSeekOrigin
- uid: System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)
  parent: System.Windows.Media.Animation.ClockController
  isExternal: false
  name: SeekAlignedToLastTick(TimeSpan,TimeSeekOrigin)
  nameWithType: ClockController.SeekAlignedToLastTick(TimeSpan,TimeSeekOrigin)
  fullName: System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick(TimeSpan,TimeSeekOrigin)
- uid: System.Windows.Media.Animation.ClockController.SkipToFill
  parent: System.Windows.Media.Animation.ClockController
  isExternal: false
  name: SkipToFill()
  nameWithType: ClockController.SkipToFill()
  fullName: System.Windows.Media.Animation.ClockController.SkipToFill()
- uid: System.Windows.Media.Animation.ClockController.SpeedRatio
  parent: System.Windows.Media.Animation.ClockController
  isExternal: false
  name: SpeedRatio
  nameWithType: ClockController.SpeedRatio
  fullName: System.Windows.Media.Animation.ClockController.SpeedRatio
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Windows.Media.Animation.ClockController.Stop
  parent: System.Windows.Media.Animation.ClockController
  isExternal: false
  name: Stop()
  nameWithType: ClockController.Stop()
  fullName: System.Windows.Media.Animation.ClockController.Stop()
- uid: System.Windows.Media.Animation.ClockController.Begin*
  parent: System.Windows.Media.Animation.ClockController
  isExternal: false
  name: Begin
  nameWithType: ClockController.Begin
- uid: System.Windows.Media.Animation.ClockController.Clock*
  parent: System.Windows.Media.Animation.ClockController
  isExternal: false
  name: Clock
  nameWithType: ClockController.Clock
- uid: System.Windows.Media.Animation.ClockController.Pause*
  parent: System.Windows.Media.Animation.ClockController
  isExternal: false
  name: Pause
  nameWithType: ClockController.Pause
- uid: System.Windows.Media.Animation.ClockController.Remove*
  parent: System.Windows.Media.Animation.ClockController
  isExternal: false
  name: Remove
  nameWithType: ClockController.Remove
- uid: System.Windows.Media.Animation.ClockController.Resume*
  parent: System.Windows.Media.Animation.ClockController
  isExternal: false
  name: Resume
  nameWithType: ClockController.Resume
- uid: System.Windows.Media.Animation.ClockController.Seek*
  parent: System.Windows.Media.Animation.ClockController
  isExternal: false
  name: Seek
  nameWithType: ClockController.Seek
- uid: System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick*
  parent: System.Windows.Media.Animation.ClockController
  isExternal: false
  name: SeekAlignedToLastTick
  nameWithType: ClockController.SeekAlignedToLastTick
- uid: System.Windows.Media.Animation.ClockController.SkipToFill*
  parent: System.Windows.Media.Animation.ClockController
  isExternal: false
  name: SkipToFill
  nameWithType: ClockController.SkipToFill
- uid: System.Windows.Media.Animation.ClockController.SpeedRatio*
  parent: System.Windows.Media.Animation.ClockController
  isExternal: false
  name: SpeedRatio
  nameWithType: ClockController.SpeedRatio
- uid: System.Windows.Media.Animation.ClockController.Stop*
  parent: System.Windows.Media.Animation.ClockController
  isExternal: false
  name: Stop
  nameWithType: ClockController.Stop
