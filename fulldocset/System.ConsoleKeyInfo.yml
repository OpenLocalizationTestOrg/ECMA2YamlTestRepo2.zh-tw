### YamlMime:ManagedReference
items:
- uid: System.ConsoleKeyInfo
  id: ConsoleKeyInfo
  children:
  - System.ConsoleKeyInfo.#ctor(System.Char,System.ConsoleKey,System.Boolean,System.Boolean,System.Boolean)
  - System.ConsoleKeyInfo.Equals(System.ConsoleKeyInfo)
  - System.ConsoleKeyInfo.Equals(System.Object)
  - System.ConsoleKeyInfo.GetHashCode
  - System.ConsoleKeyInfo.Key
  - System.ConsoleKeyInfo.KeyChar
  - System.ConsoleKeyInfo.Modifiers
  - System.ConsoleKeyInfo.op_Equality(System.ConsoleKeyInfo,System.ConsoleKeyInfo)
  - System.ConsoleKeyInfo.op_Inequality(System.ConsoleKeyInfo,System.ConsoleKeyInfo)
  langs:
  - csharp
  name: ConsoleKeyInfo
  nameWithType: ConsoleKeyInfo
  fullName: System.ConsoleKeyInfo
  type: Struct
  summary: "描述主控台已按下按鍵，包括主控台按鍵及 SHIFT、 ALT 和 CTRL 輔助按鍵的狀態所表示的字元。"
  remarks: "ConsoleKeyInfo 類型不是使用者所建立。 相反地，傳回給使用者，以回應呼叫<xref:System.Console.ReadKey%2A?displayProperty=fullName>方法。</xref:System.Console.ReadKey%2A?displayProperty=fullName>       ConsoleKeyInfo 物件描述<xref:System.ConsoleKey>常數和 Unicode 字元，如果有的話，對應至按的主控台按鍵。</xref:System.ConsoleKey> ConsoleKeyInfo 物件也描述中的位元組合<xref:System.ConsoleModifiers>值、 一個或多個 SHIFT、 ALT 或 CTRL 輔助按鍵與主控台按鍵的同時按下。</xref:System.ConsoleModifiers>"
  example:
  - "The following example demonstrates using a ConsoleKeyInfo object in a read operation.  \n  \n [!code-cs[console.readkey1#1](~/add/codesnippet/csharp/t-system.consolekeyinfo_1.cs)]\n [!code-cpp[console.readkey1#1](~/add/codesnippet/cpp/t-system.consolekeyinfo_1.cpp)]\n [!code-vb[console.readkey1#1](~/add/codesnippet/visualbasic/t-system.consolekeyinfo_1.vb)]"
  syntax:
    content: public struct ConsoleKeyInfo
  inheritance:
  - System.ValueType
  implements: []
  platform:
  - net462
- uid: System.ConsoleKeyInfo.#ctor(System.Char,System.ConsoleKey,System.Boolean,System.Boolean,System.Boolean)
  id: '#ctor(System.Char,System.ConsoleKey,System.Boolean,System.Boolean,System.Boolean)'
  parent: System.ConsoleKeyInfo
  langs:
  - csharp
  name: ConsoleKeyInfo(Char,ConsoleKey,Boolean,Boolean,Boolean)
  nameWithType: ConsoleKeyInfo.ConsoleKeyInfo(Char,ConsoleKey,Boolean,Boolean,Boolean)
  fullName: System.ConsoleKeyInfo.ConsoleKeyInfo(Char,ConsoleKey,Boolean,Boolean,Boolean)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: "初始化的新執行個體<xref href=&quot;System.ConsoleKeyInfo&quot;></xref>結構使用指定的字元、 主控台按鍵和輔助按鍵。"
  remarks: "此類型不是使用者所建立。 相反地，傳回給使用者，以回應呼叫<xref:System.Console.ReadKey%2A?displayProperty=fullName>方法。</xref:System.Console.ReadKey%2A?displayProperty=fullName>       <xref:System.ConsoleKeyInfo>類型並未指定左或向右 SHIFT、 ALT 或 CTRL 輔助按鍵是否按下。</xref:System.ConsoleKeyInfo>"
  syntax:
    content: public ConsoleKeyInfo (char keyChar, ConsoleKey key, bool shift, bool alt, bool control);
    parameters:
    - id: keyChar
      type: System.Char
      description: "若要對應的 Unicode 字元`key`參數。"
    - id: key
      type: System.ConsoleKey
      description: "對應至主控台按鍵`keyChar`參數。"
    - id: shift
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>表示，按下 SHIFT 鍵;否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    - id: alt
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>表示，按下 ALT 鍵。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    - id: control
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>表示，按下 CTRL 鍵。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ConsoleKeyInfo.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "數值<code> key </code>參數是小於 0 或大於 255。"
  platform:
  - net462
- uid: System.ConsoleKeyInfo.Equals(System.ConsoleKeyInfo)
  id: Equals(System.ConsoleKeyInfo)
  parent: System.ConsoleKeyInfo
  langs:
  - csharp
  name: Equals(ConsoleKeyInfo)
  nameWithType: ConsoleKeyInfo.Equals(ConsoleKeyInfo)
  fullName: System.ConsoleKeyInfo.Equals(ConsoleKeyInfo)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "取得值，指出是否指定<xref href=&quot;System.ConsoleKeyInfo&quot;></xref>物件是否等於目前<xref href=&quot;System.ConsoleKeyInfo&quot;></xref>物件。"
  remarks: "兩個<xref:System.ConsoleKeyInfo>物件是否相等如果及其對應<xref:System.ConsoleKeyInfo.KeyChar%2A>， <xref:System.ConsoleKeyInfo.Key%2A>，和<xref:System.ConsoleKeyInfo.Modifiers%2A>屬性是否相等。</xref:System.ConsoleKeyInfo.Modifiers%2A> </xref:System.ConsoleKeyInfo.Key%2A> </xref:System.ConsoleKeyInfo.KeyChar%2A> </xref:System.ConsoleKeyInfo>       Equals 方法執行稍微優於<xref:System.ConsoleKeyInfo.Equals%28System.Object%29?displayProperty=fullName>方法因為並沒有轉換`obj`物件。</xref:System.ConsoleKeyInfo.Equals%28System.Object%29?displayProperty=fullName>"
  syntax:
    content: public bool Equals (ConsoleKeyInfo obj);
    parameters:
    - id: obj
      type: System.ConsoleKeyInfo
      description: "要比較目前物件<xref href=&quot;System.ConsoleKeyInfo&quot;></xref>物件。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<code> obj </code>是否等於目前<xref href=&quot;System.ConsoleKeyInfo&quot;></xref>物件; 否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ConsoleKeyInfo.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.ConsoleKeyInfo.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.ConsoleKeyInfo
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: ConsoleKeyInfo.Equals(Object)
  fullName: System.ConsoleKeyInfo.Equals(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "取得值，指出指定的物件是否等於目前<xref href=&quot;System.ConsoleKeyInfo&quot;></xref>物件。"
  remarks: "兩個<xref:System.ConsoleKeyInfo>物件是否相等如果及其對應<xref:System.ConsoleKeyInfo.KeyChar%2A>， <xref:System.ConsoleKeyInfo.Key%2A>，和<xref:System.ConsoleKeyInfo.Modifiers%2A>屬性是否相等。</xref:System.ConsoleKeyInfo.Modifiers%2A> </xref:System.ConsoleKeyInfo.Key%2A> </xref:System.ConsoleKeyInfo.KeyChar%2A> </xref:System.ConsoleKeyInfo>"
  example:
  - "The following example demonstrates the Equals method.  \n  \n [!code-cpp[system.ConsoleKeyInfo.Equals#1](~/add/codesnippet/cpp/m-system.consolekeyinfo._0_1.cpp)]\n [!code-cs[system.ConsoleKeyInfo.Equals#1](~/add/codesnippet/csharp/m-system.consolekeyinfo._0_1.cs)]\n [!code-vb[system.ConsoleKeyInfo.Equals#1](~/add/codesnippet/visualbasic/m-system.consolekeyinfo._0_1.vb)]"
  syntax:
    content: public override bool Equals (object value);
    parameters:
    - id: value
      type: System.Object
      description: "要比較目前物件<xref href=&quot;System.ConsoleKeyInfo&quot;></xref>物件。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<code> value </code>是<xref href=&quot;System.ConsoleKeyInfo&quot;></xref>物件，並等於目前<xref href=&quot;System.ConsoleKeyInfo&quot;></xref>物件; 否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ConsoleKeyInfo.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.ConsoleKeyInfo.GetHashCode
  id: GetHashCode
  parent: System.ConsoleKeyInfo
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: ConsoleKeyInfo.GetHashCode()
  fullName: System.ConsoleKeyInfo.GetHashCode()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "傳回目前的雜湊碼<xref href=&quot;System.ConsoleKeyInfo&quot;></xref>物件。"
  remarks: "GetHashCode 方法所傳回的值不是適用於區別一個<xref:System.ConsoleKeyInfo>從另一個物件。</xref:System.ConsoleKeyInfo> 如果您的應用程式需要唯一的雜湊程式碼，以覆寫 GetHashCode 方法您自己的方法。"
  example:
  - "The following example demonstrates the GetHashCode method.  \n  \n [!code-cpp[System.ConsoleKeyInfo.GetHashCode#1](~/add/codesnippet/cpp/m-system.consolekeyinfo._1_1.cpp)]\n [!code-vb[System.ConsoleKeyInfo.GetHashCode#1](~/add/codesnippet/visualbasic/m-system.consolekeyinfo._1_1.vb)]\n [!code-cs[System.ConsoleKeyInfo.GetHashCode#1](~/add/codesnippet/csharp/m-system.consolekeyinfo._1_1.cs)]"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "32 位元帶正負號的整數雜湊碼。"
  overload: System.ConsoleKeyInfo.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.ConsoleKeyInfo.Key
  id: Key
  parent: System.ConsoleKeyInfo
  langs:
  - csharp
  name: Key
  nameWithType: ConsoleKeyInfo.Key
  fullName: System.ConsoleKeyInfo.Key
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "取得代表由目前的主控台金鑰<xref href=&quot;System.ConsoleKeyInfo&quot;></xref>物件。"
  remarks: ''
  example:
  - "The following example demonstrates using a Key property in a read operation.  \n  \n [!code-cs[console.readkey1#1](~/add/codesnippet/csharp/p-system.consolekeyinfo._0_1.cs)]\n [!code-cpp[console.readkey1#1](~/add/codesnippet/cpp/p-system.consolekeyinfo._0_1.cpp)]\n [!code-vb[console.readkey1#1](~/add/codesnippet/visualbasic/p-system.consolekeyinfo._0_1.vb)]"
  syntax:
    content: public ConsoleKey Key { get; }
    return:
      type: System.ConsoleKey
      description: "識別已按下主控台按鍵的值。"
  overload: System.ConsoleKeyInfo.Key*
  exceptions: []
  platform:
  - net462
- uid: System.ConsoleKeyInfo.KeyChar
  id: KeyChar
  parent: System.ConsoleKeyInfo
  langs:
  - csharp
  name: KeyChar
  nameWithType: ConsoleKeyInfo.KeyChar
  fullName: System.ConsoleKeyInfo.KeyChar
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "取得目前所代表的 Unicode 字元<xref href=&quot;System.ConsoleKeyInfo&quot;></xref>物件。"
  remarks: "如果按下的索引鍵不會對應到 Unicode 字元 (例如，如果使用者按下**F1**索引鍵或**首頁**索引鍵)，KeyChar 屬性的值是 \\U0000。"
  example:
  - "The following example uses the KeyChar property to add the characters input by the user into a string. The example ignores special keys other than **ENTER**, **ESC**, and **BACKSPACE**.  \n  \n [!code-cs[System.ConsoleKeyInfo.KeyChar#1](~/add/codesnippet/csharp/p-system.consolekeyinfo._2_1.cs)]\n [!code-vb[System.ConsoleKeyInfo.KeyChar#1](~/add/codesnippet/visualbasic/p-system.consolekeyinfo._2_1.vb)]"
  syntax:
    content: public char KeyChar { get; }
    return:
      type: System.Char
      description: "物件表示由目前的主控台索引鍵之對應<xref href=&quot;System.ConsoleKeyInfo&quot;></xref>物件。"
  overload: System.ConsoleKeyInfo.KeyChar*
  exceptions: []
  platform:
  - net462
- uid: System.ConsoleKeyInfo.Modifiers
  id: Modifiers
  parent: System.ConsoleKeyInfo
  langs:
  - csharp
  name: Modifiers
  nameWithType: ConsoleKeyInfo.Modifiers
  fullName: System.ConsoleKeyInfo.Modifiers
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "取得的位元組合<xref href=&quot;System.ConsoleModifiers&quot;></xref>指定一或多個輔助按鍵的值可以與主控台按鍵同時按下。"
  remarks: ''
  example:
  - "The following example demonstrates using a Modifiers property in a read operation.  \n  \n [!code-cs[console.readkey1#1](~/add/codesnippet/csharp/p-system.consolekeyinfo._1_1.cs)]\n [!code-cpp[console.readkey1#1](~/add/codesnippet/cpp/p-system.consolekeyinfo._1_1.cpp)]\n [!code-vb[console.readkey1#1](~/add/codesnippet/visualbasic/p-system.consolekeyinfo._1_1.vb)]"
  syntax:
    content: public ConsoleModifiers Modifiers { get; }
    return:
      type: System.ConsoleModifiers
      description: "列舉值的位元組合。 沒有預設值。"
  overload: System.ConsoleKeyInfo.Modifiers*
  exceptions: []
  platform:
  - net462
- uid: System.ConsoleKeyInfo.op_Equality(System.ConsoleKeyInfo,System.ConsoleKeyInfo)
  id: op_Equality(System.ConsoleKeyInfo,System.ConsoleKeyInfo)
  parent: System.ConsoleKeyInfo
  langs:
  - csharp
  name: op_Equality(ConsoleKeyInfo,ConsoleKeyInfo)
  nameWithType: ConsoleKeyInfo.op_Equality(ConsoleKeyInfo,ConsoleKeyInfo)
  fullName: System.ConsoleKeyInfo.op_Equality(ConsoleKeyInfo,ConsoleKeyInfo)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System
  summary: "指出是否指定<xref href=&quot;System.ConsoleKeyInfo&quot;></xref>物件是否相等。"
  remarks: "兩個<xref:System.ConsoleKeyInfo>物件是否相等如果及其對應<xref:System.ConsoleKeyInfo.KeyChar%2A>， <xref:System.ConsoleKeyInfo.Key%2A>，和<xref:System.ConsoleKeyInfo.Modifiers%2A>屬性是否相等。</xref:System.ConsoleKeyInfo.Modifiers%2A> </xref:System.ConsoleKeyInfo.Key%2A> </xref:System.ConsoleKeyInfo.KeyChar%2A> </xref:System.ConsoleKeyInfo>"
  syntax:
    content: public static bool op_Equality (ConsoleKeyInfo a, ConsoleKeyInfo b);
    parameters:
    - id: a
      type: System.ConsoleKeyInfo
      description: "要比較的第一個物件。"
    - id: b
      type: System.ConsoleKeyInfo
      description: "要比較的第二個物件。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>a</code> is equal to <code>b</code>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.ConsoleKeyInfo.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.ConsoleKeyInfo.op_Inequality(System.ConsoleKeyInfo,System.ConsoleKeyInfo)
  id: op_Inequality(System.ConsoleKeyInfo,System.ConsoleKeyInfo)
  parent: System.ConsoleKeyInfo
  langs:
  - csharp
  name: op_Inequality(ConsoleKeyInfo,ConsoleKeyInfo)
  nameWithType: ConsoleKeyInfo.op_Inequality(ConsoleKeyInfo,ConsoleKeyInfo)
  fullName: System.ConsoleKeyInfo.op_Inequality(ConsoleKeyInfo,ConsoleKeyInfo)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System
  summary: "指出是否指定<xref href=&quot;System.ConsoleKeyInfo&quot;></xref>物件不相等。"
  remarks: "兩個<xref:System.ConsoleKeyInfo>物件是否相等如果及其對應<xref:System.ConsoleKeyInfo.KeyChar%2A>， <xref:System.ConsoleKeyInfo.Key%2A>，和<xref:System.ConsoleKeyInfo.Modifiers%2A>屬性是否相等。</xref:System.ConsoleKeyInfo.Modifiers%2A> </xref:System.ConsoleKeyInfo.Key%2A> </xref:System.ConsoleKeyInfo.KeyChar%2A> </xref:System.ConsoleKeyInfo>"
  syntax:
    content: public static bool op_Inequality (ConsoleKeyInfo a, ConsoleKeyInfo b);
    parameters:
    - id: a
      type: System.ConsoleKeyInfo
      description: "要比較的第一個物件。"
    - id: b
      type: System.ConsoleKeyInfo
      description: "要比較的第二個物件。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>a</code> is not equal to <code>b</code>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.ConsoleKeyInfo.op_Inequality*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ConsoleKeyInfo.#ctor(System.Char,System.ConsoleKey,System.Boolean,System.Boolean,System.Boolean)
  parent: System.ConsoleKeyInfo
  isExternal: false
  name: ConsoleKeyInfo(Char,ConsoleKey,Boolean,Boolean,Boolean)
  nameWithType: ConsoleKeyInfo.ConsoleKeyInfo(Char,ConsoleKey,Boolean,Boolean,Boolean)
  fullName: System.ConsoleKeyInfo.ConsoleKeyInfo(Char,ConsoleKey,Boolean,Boolean,Boolean)
- uid: System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.ConsoleKey
  parent: System
  isExternal: false
  name: ConsoleKey
  nameWithType: ConsoleKey
  fullName: System.ConsoleKey
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ConsoleKeyInfo.Equals(System.ConsoleKeyInfo)
  parent: System.ConsoleKeyInfo
  isExternal: false
  name: Equals(ConsoleKeyInfo)
  nameWithType: ConsoleKeyInfo.Equals(ConsoleKeyInfo)
  fullName: System.ConsoleKeyInfo.Equals(ConsoleKeyInfo)
- uid: System.ConsoleKeyInfo
  parent: System
  isExternal: false
  name: ConsoleKeyInfo
  nameWithType: ConsoleKeyInfo
  fullName: System.ConsoleKeyInfo
- uid: System.ConsoleKeyInfo.Equals(System.Object)
  parent: System.ConsoleKeyInfo
  isExternal: false
  name: Equals(Object)
  nameWithType: ConsoleKeyInfo.Equals(Object)
  fullName: System.ConsoleKeyInfo.Equals(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ConsoleKeyInfo.GetHashCode
  parent: System.ConsoleKeyInfo
  isExternal: false
  name: GetHashCode()
  nameWithType: ConsoleKeyInfo.GetHashCode()
  fullName: System.ConsoleKeyInfo.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ConsoleKeyInfo.Key
  parent: System.ConsoleKeyInfo
  isExternal: false
  name: Key
  nameWithType: ConsoleKeyInfo.Key
  fullName: System.ConsoleKeyInfo.Key
- uid: System.ConsoleKeyInfo.KeyChar
  parent: System.ConsoleKeyInfo
  isExternal: false
  name: KeyChar
  nameWithType: ConsoleKeyInfo.KeyChar
  fullName: System.ConsoleKeyInfo.KeyChar
- uid: System.ConsoleKeyInfo.Modifiers
  parent: System.ConsoleKeyInfo
  isExternal: false
  name: Modifiers
  nameWithType: ConsoleKeyInfo.Modifiers
  fullName: System.ConsoleKeyInfo.Modifiers
- uid: System.ConsoleModifiers
  parent: System
  isExternal: false
  name: ConsoleModifiers
  nameWithType: ConsoleModifiers
  fullName: System.ConsoleModifiers
- uid: System.ConsoleKeyInfo.op_Equality(System.ConsoleKeyInfo,System.ConsoleKeyInfo)
  parent: System.ConsoleKeyInfo
  isExternal: false
  name: op_Equality(ConsoleKeyInfo,ConsoleKeyInfo)
  nameWithType: ConsoleKeyInfo.op_Equality(ConsoleKeyInfo,ConsoleKeyInfo)
  fullName: System.ConsoleKeyInfo.op_Equality(ConsoleKeyInfo,ConsoleKeyInfo)
- uid: System.ConsoleKeyInfo.op_Inequality(System.ConsoleKeyInfo,System.ConsoleKeyInfo)
  parent: System.ConsoleKeyInfo
  isExternal: false
  name: op_Inequality(ConsoleKeyInfo,ConsoleKeyInfo)
  nameWithType: ConsoleKeyInfo.op_Inequality(ConsoleKeyInfo,ConsoleKeyInfo)
  fullName: System.ConsoleKeyInfo.op_Inequality(ConsoleKeyInfo,ConsoleKeyInfo)
- uid: System.ConsoleKeyInfo.#ctor*
  parent: System.ConsoleKeyInfo
  isExternal: false
  name: ConsoleKeyInfo
  nameWithType: ConsoleKeyInfo.ConsoleKeyInfo
- uid: System.ConsoleKeyInfo.Equals*
  parent: System.ConsoleKeyInfo
  isExternal: false
  name: Equals
  nameWithType: ConsoleKeyInfo.Equals
- uid: System.ConsoleKeyInfo.GetHashCode*
  parent: System.ConsoleKeyInfo
  isExternal: false
  name: GetHashCode
  nameWithType: ConsoleKeyInfo.GetHashCode
- uid: System.ConsoleKeyInfo.Key*
  parent: System.ConsoleKeyInfo
  isExternal: false
  name: Key
  nameWithType: ConsoleKeyInfo.Key
- uid: System.ConsoleKeyInfo.KeyChar*
  parent: System.ConsoleKeyInfo
  isExternal: false
  name: KeyChar
  nameWithType: ConsoleKeyInfo.KeyChar
- uid: System.ConsoleKeyInfo.Modifiers*
  parent: System.ConsoleKeyInfo
  isExternal: false
  name: Modifiers
  nameWithType: ConsoleKeyInfo.Modifiers
- uid: System.ConsoleKeyInfo.op_Equality*
  parent: System.ConsoleKeyInfo
  isExternal: false
  name: op_Equality
  nameWithType: ConsoleKeyInfo.op_Equality
- uid: System.ConsoleKeyInfo.op_Inequality*
  parent: System.ConsoleKeyInfo
  isExternal: false
  name: op_Inequality
  nameWithType: ConsoleKeyInfo.op_Inequality
