### YamlMime:ManagedReference
items:
- uid: System.Security.AccessControl.FileSystemSecurity
  id: FileSystemSecurity
  children:
  - System.Security.AccessControl.FileSystemSecurity.AccessRightType
  - System.Security.AccessControl.FileSystemSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  - System.Security.AccessControl.FileSystemSecurity.AccessRuleType
  - System.Security.AccessControl.FileSystemSecurity.AddAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  - System.Security.AccessControl.FileSystemSecurity.AddAuditRule(System.Security.AccessControl.FileSystemAuditRule)
  - System.Security.AccessControl.FileSystemSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  - System.Security.AccessControl.FileSystemSecurity.AuditRuleType
  - System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  - System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleAll(System.Security.AccessControl.FileSystemAccessRule)
  - System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.FileSystemAccessRule)
  - System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule(System.Security.AccessControl.FileSystemAuditRule)
  - System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleAll(System.Security.AccessControl.FileSystemAuditRule)
  - System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.FileSystemAuditRule)
  - System.Security.AccessControl.FileSystemSecurity.ResetAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  - System.Security.AccessControl.FileSystemSecurity.SetAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  - System.Security.AccessControl.FileSystemSecurity.SetAuditRule(System.Security.AccessControl.FileSystemAuditRule)
  langs:
  - csharp
  name: FileSystemSecurity
  nameWithType: FileSystemSecurity
  fullName: System.Security.AccessControl.FileSystemSecurity
  type: Class
  summary: "代表存取控制和稽核檔案或目錄的安全性。"
  remarks: "FileSystemSecurity 類別是基底類別<xref:System.Security.AccessControl.FileSecurity>和<xref:System.Security.AccessControl.DirectorySecurity>類別。</xref:System.Security.AccessControl.DirectorySecurity> </xref:System.Security.AccessControl.FileSecurity>  這些類別代表所有的系統檔案或目錄的存取權限，並且定義嘗試存取稽核的方式。       FileSystemSecurity 類別會表示為一組規則的存取和稽核 」 權限。 每個存取規則由<xref:System.Security.AccessControl.FileSystemAccessRule>物件，而每個稽核規則由<xref:System.Security.AccessControl.FileSystemAuditRule>物件。</xref:System.Security.AccessControl.FileSystemAuditRule> </xref:System.Security.AccessControl.FileSystemAccessRule>       FileSystemSecurity 類別是抽象的基礎的 Microsoft Windows 檔案安全性系統。 在此系統中，每個檔案或目錄已判別存取控制清單 (DACL)，以控制存取檔案或目錄和系統存取控制清單 (SACL)，其指定要稽核的存取控制嘗試。  <xref:System.Security.AccessControl.FileSystemAccessRule>和<xref:System.Security.AccessControl.FileSystemAuditRule>類別是抽象的存取控制項目 (Ace) 組成的 Dacl Sacl。</xref:System.Security.AccessControl.FileSystemAuditRule> </xref:System.Security.AccessControl.FileSystemAccessRule>       FileSystemSecurity 類別隱藏許多細節，Dacl 的 Sacl。您不必擔心 ACE 排序或 null 的 DACL。       若要保存至檔案的新增或變更的存取控制清單 (ACL) 資訊，請使用<xref:System.IO.File.SetAccessControl%2A>或<xref:System.IO.FileInfo.SetAccessControl%2A>方法。</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.File.SetAccessControl%2A>  若要新增或變更 ACL 將資訊保存到目錄，使用<xref:System.IO.Directory.SetAccessControl%2A>或<xref:System.IO.FileInfo.SetAccessControl%2A>方法。</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.Directory.SetAccessControl%2A>       若要從檔案擷取 ACL 資訊，請使用<xref:System.IO.File.GetAccessControl%2A>或<xref:System.IO.FileInfo.GetAccessControl%2A>方法。</xref:System.IO.FileInfo.GetAccessControl%2A> </xref:System.IO.File.GetAccessControl%2A>  若要從目錄擷取 ACL 資訊，請使用<xref:System.IO.Directory.GetAccessControl%2A>或<xref:System.IO.DirectoryInfo.GetAccessControl%2A>方法。</xref:System.IO.DirectoryInfo.GetAccessControl%2A> </xref:System.IO.Directory.GetAccessControl%2A>"
  example:
  - "The following code example uses the <xref:System.Security.AccessControl.FileSecurity> class to add and then remove an access control list (ACL) entry from a file.  You must supply a valid user or group account to run this example.  \n  \n [!code-cs[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/csharp/t-system.security.access_6_1.cs)]\n [!code-vb[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/visualbasic/t-system.security.access_6_1.vb)]\n [!code-cpp[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/cpp/t-system.security.access_6_1.cpp)]"
  syntax:
    content: 'public abstract class FileSystemSecurity : System.Security.AccessControl.NativeObjectSecurity'
  inheritance:
  - System.Object
  - System.Security.AccessControl.ObjectSecurity
  - System.Security.AccessControl.CommonObjectSecurity
  - System.Security.AccessControl.NativeObjectSecurity
  implements: []
  inheritedMembers:
  - System.Security.AccessControl.CommonObjectSecurity.AddAccessRule(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.AddAuditRule(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.CommonObjectSecurity.GetAccessRules(System.Boolean,System.Boolean,System.Type)
  - System.Security.AccessControl.CommonObjectSecurity.GetAuditRules(System.Boolean,System.Boolean,System.Type)
  - System.Security.AccessControl.CommonObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  - System.Security.AccessControl.CommonObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.SetAccessRule(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.SetAuditRule(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections,System.Object)
  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections,System.Object)
  - System.Security.AccessControl.ObjectSecurity.AccessRulesModified
  - System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical
  - System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected
  - System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical
  - System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected
  - System.Security.AccessControl.ObjectSecurity.AuditRulesModified
  - System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)
  - System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)
  - System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm
  - System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.GroupModified
  - System.Security.AccessControl.ObjectSecurity.IsContainer
  - System.Security.AccessControl.ObjectSecurity.IsDS
  - System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported
  - System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  - System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  - System.Security.AccessControl.ObjectSecurity.OwnerModified
  - System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.ReadLock
  - System.Security.AccessControl.ObjectSecurity.ReadUnlock
  - System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)
  - System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)
  - System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.WriteLock
  - System.Security.AccessControl.ObjectSecurity.WriteUnlock
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.AccessRightType
  id: AccessRightType
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: AccessRightType
  nameWithType: FileSystemSecurity.AccessRightType
  fullName: System.Security.AccessControl.FileSystemSecurity.AccessRightType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "取得列舉型別<xref href=&quot;System.Security.AccessControl.FileSystemSecurity&quot;></xref>類別用來表示的存取權限。"
  remarks: "類別衍生自<xref:System.Security.AccessControl.FileSystemSecurity>類別覆寫 AccessRightType 屬性，並傳回它們以表示的存取權限的類型。</xref:System.Security.AccessControl.FileSystemSecurity> 當您使用陣列或包含多個類型的安全性物件的集合時，使用這個屬性來判斷要用於每個安全性物件的正確的列舉類型。"
  syntax:
    content: public override Type AccessRightType { get; }
    return:
      type: System.Type
      description: "A<xref:System.Type>物件，代表<xref href=&quot;System.Security.AccessControl.FileSystemRights&quot;></xref>列舉型別。</xref:System.Type>"
  overload: System.Security.AccessControl.FileSystemSecurity.AccessRightType*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  id: AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
  nameWithType: FileSystemSecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
  fullName: System.Security.AccessControl.FileSystemSecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "初始化的新執行個體<xref href=&quot;System.Security.AccessControl.FileSystemAccessRule&quot;></xref>類別，表示指定的使用者，使用指定的存取權限、 存取控制和旗標的新存取控制規則。"
  remarks: "若要建立存取控制規則的建議的方式是使用<xref:System.Security.AccessControl.FileSystemAccessRule>類別</xref:System.Security.AccessControl.FileSystemAccessRule>的建構函式       AccessRuleFactory 方法的傳回型別是基底類別， <xref:System.Security.AccessControl.AccessRule>，但傳回的值可以安全地轉換為衍生的類別。</xref:System.Security.AccessControl.AccessRule>"
  syntax:
    content: public override sealed System.Security.AccessControl.AccessRule AccessRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AccessControlType type);
    parameters:
    - id: identityReference
      type: System.Security.Principal.IdentityReference
      description: "<xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref>物件，表示使用者帳戶。"
    - id: accessMask
      type: System.Int32
      description: "整數，指定存取類型。"
    - id: isInherited
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果繼承的存取規則。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
      description: "其中一個<xref href=&quot;System.Security.AccessControl.InheritanceFlags&quot;></xref>值，指定如何傳播到子物件的存取遮罩。"
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
      description: "其中一個<xref href=&quot;System.Security.AccessControl.PropagationFlags&quot;></xref>值，指定如何傳播到子物件的存取控制項目 (Ace)。"
    - id: type
      type: System.Security.AccessControl.AccessControlType
      description: "其中一個<xref href=&quot;System.Security.AccessControl.AccessControlType&quot;></xref>值，指定是否允許或拒絕存取。"
    return:
      type: System.Security.AccessControl.AccessRule
      description: "新<xref href=&quot;System.Security.AccessControl.FileSystemAccessRule&quot;></xref>物件，表示指定的使用者，使用指定的存取權限、 存取控制和旗標的新存取控制規則。"
  overload: System.Security.AccessControl.FileSystemSecurity.AccessRuleFactory*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The <code>accessMask</code>, <code>inheritanceFlags</code>, <code>propagationFlags</code>, or <code>type</code> parameters specify an invalid value."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>identityReference</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -或- <code> accessMask </code>參數為零。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> identityReference </code>參數既不是類型<xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref>，或這類類型的<xref href=&quot;System.Security.Principal.NTAccount&quot;></xref>可以轉換為類型<xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref>。"
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.AccessRuleType
  id: AccessRuleType
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: AccessRuleType
  nameWithType: FileSystemSecurity.AccessRuleType
  fullName: System.Security.AccessControl.FileSystemSecurity.AccessRuleType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "取得列舉型別<xref href=&quot;System.Security.AccessControl.FileSystemSecurity&quot;></xref>類別用來代表存取規則。"
  remarks: "類別衍生自<xref:System.Security.AccessControl.FileSystemSecurity>類別覆寫 AccessRuleType 屬性和傳回型別，用以代表存取規則。</xref:System.Security.AccessControl.FileSystemSecurity> 當您使用陣列或包含多個類型的安全性物件的集合時，使用這個屬性來判斷用於每個安全性物件的正確的存取規則類型。"
  syntax:
    content: public override Type AccessRuleType { get; }
    return:
      type: System.Type
      description: "A<xref:System.Type>物件，代表<xref href=&quot;System.Security.AccessControl.FileSystemAccessRule&quot;></xref>類別</xref:System.Type>"
  overload: System.Security.AccessControl.FileSystemSecurity.AccessRuleType*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.AddAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  id: AddAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: AddAccessRule(FileSystemAccessRule)
  nameWithType: FileSystemSecurity.AddAccessRule(FileSystemAccessRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.AddAccessRule(FileSystemAccessRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "將指定的存取控制清單 (ACL) 權限加入至目前檔案或目錄。"
  remarks: "AddAccessRule 方法將新的規則加入至內含的規則清單<xref:System.Security.AccessControl.FileSystemSecurity>物件。</xref:System.Security.AccessControl.FileSystemSecurity>       如果指定的規則已存在的存取控制清單 (ACL)，請 AddAccessRule 方法仍會加入規則，有一個例外狀況︰<xref:System.Security.AccessControl.FileSystemAccessRule>使用建立物件<xref:System.Security.AccessControl.AccessControlType>列舉值會取代使用所建立的物件<xref:System.Security.AccessControl.AccessControlType>列舉值。</xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.FileSystemAccessRule>       若要新增或變更 ACL 將資訊保存到檔案，使用<xref:System.IO.File.SetAccessControl%2A>或<xref:System.IO.FileInfo.SetAccessControl%2A>方法。</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.File.SetAccessControl%2A>  若要新增或變更 ACL 將資訊保存到目錄，使用<xref:System.IO.Directory.SetAccessControl%2A>或<xref:System.IO.FileInfo.SetAccessControl%2A>方法。</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.Directory.SetAccessControl%2A>       若要從檔案擷取 ACL 資訊，請使用<xref:System.IO.File.GetAccessControl%2A>或<xref:System.IO.FileInfo.GetAccessControl%2A>方法。</xref:System.IO.FileInfo.GetAccessControl%2A> </xref:System.IO.File.GetAccessControl%2A>  若要從目錄擷取 ACL 資訊，請使用<xref:System.IO.Directory.GetAccessControl%2A>或<xref:System.IO.DirectoryInfo.GetAccessControl%2A>方法。</xref:System.IO.DirectoryInfo.GetAccessControl%2A> </xref:System.IO.Directory.GetAccessControl%2A>       當您新增存取規則未設定<xref:System.Security.AccessControl.FileSystemRights>旗標，<xref:System.Security.AccessControl.FileSystemRights>旗標將會自動加入至您的規則。</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights>  如果您移除規則稍後但未指定<xref:System.Security.AccessControl.FileSystemRights>旗標，此旗標將會自動移除。</xref:System.Security.AccessControl.FileSystemRights>"
  example:
  - "The following code example uses the <xref:System.Security.AccessControl.FileSecurity> class to add and then remove an access control list (ACL) entry from a file.  You must supply a valid user or group account to run this example.  \n  \n [!code-cs[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/csharp/92a71f8c-d81d-4955-8014-_1.cs)]\n [!code-vb[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/visualbasic/92a71f8c-d81d-4955-8014-_1.vb)]\n [!code-cpp[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/cpp/92a71f8c-d81d-4955-8014-_1.cpp)]"
  syntax:
    content: public void AddAccessRule (System.Security.AccessControl.FileSystemAccessRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.FileSystemAccessRule
      description: "A <xref href=&quot;System.Security.AccessControl.FileSystemAccessRule&quot;> </xref>物件，代表要加入至檔案或目錄存取控制清單 (ACL) 權限。"
  overload: System.Security.AccessControl.FileSystemSecurity.AddAccessRule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.AddAuditRule(System.Security.AccessControl.FileSystemAuditRule)
  id: AddAuditRule(System.Security.AccessControl.FileSystemAuditRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: AddAuditRule(FileSystemAuditRule)
  nameWithType: FileSystemSecurity.AddAuditRule(FileSystemAuditRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.AddAuditRule(FileSystemAuditRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "將指定的稽核規則加入至目前檔案或目錄。"
  remarks: "AddAuditRule 方法內所包含的規則清單中加入新的稽核規則<xref:System.Security.AccessControl.FileSystemSecurity>物件。</xref:System.Security.AccessControl.FileSystemSecurity>       如果稽核規則已經存在指定的規則，AddAuditRule 方法仍會將規則。"
  example:
  - "The following code example uses the AddAuditRule method to add an audit rule to a file and uses the <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule%2A> method to remove the audit rule from the file.  You must supply a valid user or group account to run this example.  \n  \n [!code-vb[AccessControl.FileSystemAuditRule#1](~/add/codesnippet/visualbasic/a9a5c9f6-a8bf-4ad9-9027-_1.vb)]\n [!code-cs[AccessControl.FileSystemAuditRule#1](~/add/codesnippet/csharp/a9a5c9f6-a8bf-4ad9-9027-_1.cs)]"
  syntax:
    content: public void AddAuditRule (System.Security.AccessControl.FileSystemAuditRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.FileSystemAuditRule
      description: "A <xref href=&quot;System.Security.AccessControl.FileSystemAuditRule&quot;> </xref>物件，代表要加入至檔案或目錄的稽核規則。"
  overload: System.Security.AccessControl.FileSystemSecurity.AddAuditRule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  id: AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
  nameWithType: FileSystemSecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
  fullName: System.Security.AccessControl.FileSystemSecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "初始化的新執行個體<xref href=&quot;System.Security.AccessControl.FileSystemAuditRule&quot;></xref>類別，代表指定之使用者指定的稽核規則。"
  remarks: "若要建立的稽核規則的建議的方式是使用<xref:System.Security.AccessControl.FileSystemAuditRule>類別</xref:System.Security.AccessControl.FileSystemAuditRule>的建構函式       AuditRuleFactory 方法的傳回型別是基底類別， <xref:System.Security.AccessControl.AuditRule>，但傳回的值可以安全地轉換為衍生的類別。</xref:System.Security.AccessControl.AuditRule>"
  syntax:
    content: public override sealed System.Security.AccessControl.AuditRule AuditRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags);
    parameters:
    - id: identityReference
      type: System.Security.Principal.IdentityReference
      description: "<xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref>物件，表示使用者帳戶。"
    - id: accessMask
      type: System.Int32
      description: "整數，指定存取類型。"
    - id: isInherited
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果繼承的存取規則。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
      description: "其中一個<xref href=&quot;System.Security.AccessControl.InheritanceFlags&quot;></xref>值，指定如何傳播到子物件的存取遮罩。"
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
      description: "其中一個<xref href=&quot;System.Security.AccessControl.PropagationFlags&quot;></xref>值，指定如何傳播到子物件的存取控制項目 (Ace)。"
    - id: flags
      type: System.Security.AccessControl.AuditFlags
      description: "其中一個<xref href=&quot;System.Security.AccessControl.AuditFlags&quot;></xref>指定執行稽核類型的值。"
    return:
      type: System.Security.AccessControl.AuditRule
      description: "新<xref href=&quot;System.Security.AccessControl.FileSystemAuditRule&quot;></xref>物件，代表指定之使用者指定的稽核規則。"
  overload: System.Security.AccessControl.FileSystemSecurity.AuditRuleFactory*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The <code>accessMask</code>, <code>inheritanceFlags</code>, <code>propagationFlags</code>, or <code>flags</code> properties specify an invalid value."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>identityReference</code> property is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -或- <code> accessMask </code>屬性為零。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> identityReference </code>屬性的型別既不是<xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref>，或這類類型的<xref href=&quot;System.Security.Principal.NTAccount&quot;></xref>可以轉換為類型<xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref>。"
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.AuditRuleType
  id: AuditRuleType
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: AuditRuleType
  nameWithType: FileSystemSecurity.AuditRuleType
  fullName: System.Security.AccessControl.FileSystemSecurity.AuditRuleType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "取得型別<xref href=&quot;System.Security.AccessControl.FileSystemSecurity&quot;></xref>類別用來代表稽核規則。"
  remarks: "類別衍生自<xref:System.Security.AccessControl.FileSystemSecurity>類別覆寫 AuditRuleType 屬性，並傳回它們以表示稽核權限的類型。</xref:System.Security.AccessControl.FileSystemSecurity> 當您使用陣列或包含多個類型的安全性物件的集合時，使用這個屬性來判斷用於每個安全性物件的正確的稽核規則類型。"
  syntax:
    content: public override Type AuditRuleType { get; }
    return:
      type: System.Type
      description: "A<xref:System.Type>物件，代表<xref href=&quot;System.Security.AccessControl.FileSystemAuditRule&quot;></xref>類別</xref:System.Type>"
  overload: System.Security.AccessControl.FileSystemSecurity.AuditRuleType*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  id: RemoveAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: RemoveAccessRule(FileSystemAccessRule)
  nameWithType: FileSystemSecurity.RemoveAccessRule(FileSystemAccessRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule(FileSystemAccessRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "移除所有相符允許或拒絕存取控制清單 (ACL) 從目前的檔案或目錄的權限。"
  remarks: "RemoveAccessRule 方法中移除所有符合<xref:System.Security.AccessControl.AccessControlType>存取規則或比對所有<xref:System.Security.AccessControl.AccessControlType>從目前的存取規則<xref:System.Security.AccessControl.FileSystemSecurity>物件。</xref:System.Security.AccessControl.FileSystemSecurity> </xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.AccessControlType>  例如，您可以使用這個方法來移除所有<xref:System.Security.AccessControl.AccessControlType>存取使用者的規則，藉由傳遞<xref:System.Security.AccessControl.FileSystemAccessRule>使用建立物件<xref:System.Security.AccessControl.AccessControlType>值，<xref:System.Security.AccessControl.FileSystemRights>值和使用者帳戶。</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.FileSystemAccessRule> </xref:System.Security.AccessControl.AccessControlType>  當您這樣做時，則 RemoveAccessRule 方法會移除任何指定的拒絕規則<xref:System.Security.AccessControl.FileSystemRights>值或<xref:System.Security.AccessControl.FileSystemRights>值。</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights>       若要保存至檔案的新增或變更的存取控制清單 (ACL) 資訊，請使用<xref:System.IO.File.SetAccessControl%2A>或<xref:System.IO.FileInfo.SetAccessControl%2A>方法。</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.File.SetAccessControl%2A>  若要新增或變更 ACL 將資訊保存到目錄，使用<xref:System.IO.Directory.SetAccessControl%2A>或<xref:System.IO.FileInfo.SetAccessControl%2A>方法。</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.Directory.SetAccessControl%2A>       若要從檔案擷取 ACL 資訊，請使用<xref:System.IO.File.GetAccessControl%2A>或<xref:System.IO.FileInfo.GetAccessControl%2A>方法。</xref:System.IO.FileInfo.GetAccessControl%2A> </xref:System.IO.File.GetAccessControl%2A>  若要從目錄擷取 ACL 資訊，請使用<xref:System.IO.Directory.GetAccessControl%2A>或<xref:System.IO.DirectoryInfo.GetAccessControl%2A>方法。</xref:System.IO.DirectoryInfo.GetAccessControl%2A> </xref:System.IO.Directory.GetAccessControl%2A>       當您新增存取規則未設定<xref:System.Security.AccessControl.FileSystemRights>旗標，<xref:System.Security.AccessControl.FileSystemRights>旗標將會自動加入至您的規則。</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights>  如果您移除規則稍後但未指定<xref:System.Security.AccessControl.FileSystemRights>旗標，此旗標將會自動移除。</xref:System.Security.AccessControl.FileSystemRights>"
  example:
  - "The following code example uses the <xref:System.Security.AccessControl.FileSecurity> class to add and then remove an access control list (ACL) entry from a file.  You must supply a valid user or group account to run this example.  \n  \n [!code-cs[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/csharp/8c37102e-50e1-48e9-baeb-_1.cs)]\n [!code-vb[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/visualbasic/8c37102e-50e1-48e9-baeb-_1.vb)]\n [!code-cpp[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/cpp/8c37102e-50e1-48e9-baeb-_1.cpp)]"
  syntax:
    content: public bool RemoveAccessRule (System.Security.AccessControl.FileSystemAccessRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.FileSystemAccessRule
      description: "A <xref href=&quot;System.Security.AccessControl.FileSystemAccessRule&quot;> </xref>物件，代表要移除檔案或目錄存取控制清單 (ACL) 權限。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果已移除的存取規則。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleAll(System.Security.AccessControl.FileSystemAccessRule)
  id: RemoveAccessRuleAll(System.Security.AccessControl.FileSystemAccessRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: RemoveAccessRuleAll(FileSystemAccessRule)
  nameWithType: FileSystemSecurity.RemoveAccessRuleAll(FileSystemAccessRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleAll(FileSystemAccessRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "移除目前檔案或目錄的所有存取控制清單 (ACL) 權限指定的使用者。"
  remarks: "RemoveAccessRuleAll 方法移除所有存取控制清單 (ACL) 權限指定的使用者。  這個方法會忽略中的所有值<xref:System.Security.AccessControl.FileSystemAccessRule>物件以外的使用者帳戶。</xref:System.Security.AccessControl.FileSystemAccessRule>       若要新增或變更 ACL 將資訊保存到檔案，使用<xref:System.IO.File.SetAccessControl%2A>或<xref:System.IO.FileInfo.SetAccessControl%2A>方法。</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.File.SetAccessControl%2A>  若要新增或變更 ACL 將資訊保存到目錄，使用<xref:System.IO.Directory.SetAccessControl%2A>或<xref:System.IO.FileInfo.SetAccessControl%2A>方法。</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.Directory.SetAccessControl%2A>       若要從檔案擷取 ACL 資訊，請使用<xref:System.IO.File.GetAccessControl%2A>或<xref:System.IO.FileInfo.GetAccessControl%2A>方法。</xref:System.IO.FileInfo.GetAccessControl%2A> </xref:System.IO.File.GetAccessControl%2A>  若要從目錄擷取 ACL 資訊，請使用<xref:System.IO.Directory.GetAccessControl%2A>或<xref:System.IO.DirectoryInfo.GetAccessControl%2A>方法。</xref:System.IO.DirectoryInfo.GetAccessControl%2A> </xref:System.IO.Directory.GetAccessControl%2A>       當您新增存取規則未設定<xref:System.Security.AccessControl.FileSystemRights>旗標，<xref:System.Security.AccessControl.FileSystemRights>旗標將會自動加入至您的規則。</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights>  如果您移除規則稍後但未指定<xref:System.Security.AccessControl.FileSystemRights>旗標，此旗標將會自動移除。</xref:System.Security.AccessControl.FileSystemRights>"
  syntax:
    content: public void RemoveAccessRuleAll (System.Security.AccessControl.FileSystemAccessRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.FileSystemAccessRule
      description: "A <xref href=&quot;System.Security.AccessControl.FileSystemAccessRule&quot;> </xref>物件，指定其存取控制清單 (ACL) 權限的使用者應該會從檔案或目錄。"
  overload: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleAll*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.FileSystemAccessRule)
  id: RemoveAccessRuleSpecific(System.Security.AccessControl.FileSystemAccessRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: RemoveAccessRuleSpecific(FileSystemAccessRule)
  nameWithType: FileSystemSecurity.RemoveAccessRuleSpecific(FileSystemAccessRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific(FileSystemAccessRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "移除單一比對允許或拒絕存取控制清單 (ACL) 權限，從目前的檔案或目錄。"
  remarks: "RemoveAccessRuleSpecific 方法移除指定<xref:System.Security.AccessControl.AccessControlType>存取規則，或指定的比對<xref:System.Security.AccessControl.AccessControlType>從目前的存取規則<xref:System.Security.AccessControl.FileSystemSecurity>物件。</xref:System.Security.AccessControl.FileSystemSecurity> </xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.AccessControlType>  例如，您可以使用這個方法，若要移除指定<xref:System.Security.AccessControl.AccessControlType>藉由傳遞使用者的存取規則<xref:System.Security.AccessControl.FileSystemAccessRule>使用建立物件<xref:System.Security.AccessControl.AccessControlType>值<xref:System.Security.AccessControl.FileSystemRights>值和使用者帳戶。</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.FileSystemAccessRule> </xref:System.Security.AccessControl.AccessControlType>  當您這樣做時，RemoveAccessRuleSpecific 方法移除僅拒絕規則，以指定<xref:System.Security.AccessControl.FileSystemRights>值。</xref:System.Security.AccessControl.FileSystemRights>  它不會移除任何指定的拒絕規則<xref:System.Security.AccessControl.FileSystemRights>值。</xref:System.Security.AccessControl.FileSystemRights>       若要保存至檔案的新增或變更的存取控制清單 (ACL) 資訊，請使用<xref:System.IO.File.SetAccessControl%2A>或<xref:System.IO.FileInfo.SetAccessControl%2A>方法。</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.File.SetAccessControl%2A>  若要新增或變更 ACL 將資訊保存到目錄，使用<xref:System.IO.Directory.SetAccessControl%2A>或<xref:System.IO.FileInfo.SetAccessControl%2A>方法。</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.Directory.SetAccessControl%2A>       若要從檔案擷取 ACL 資訊，請使用<xref:System.IO.File.GetAccessControl%2A>或<xref:System.IO.FileInfo.GetAccessControl%2A>方法。</xref:System.IO.FileInfo.GetAccessControl%2A> </xref:System.IO.File.GetAccessControl%2A>  若要從目錄擷取 ACL 資訊，請使用<xref:System.IO.Directory.GetAccessControl%2A>或<xref:System.IO.DirectoryInfo.GetAccessControl%2A>方法。</xref:System.IO.DirectoryInfo.GetAccessControl%2A> </xref:System.IO.Directory.GetAccessControl%2A>       當您新增存取規則未設定<xref:System.Security.AccessControl.FileSystemRights>旗標，<xref:System.Security.AccessControl.FileSystemRights>旗標將會自動加入至您的規則。</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights>  如果您移除規則稍後但未指定<xref:System.Security.AccessControl.FileSystemRights>旗標，此旗標將會自動移除。</xref:System.Security.AccessControl.FileSystemRights>"
  syntax:
    content: public void RemoveAccessRuleSpecific (System.Security.AccessControl.FileSystemAccessRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.FileSystemAccessRule
      description: "A <xref href=&quot;System.Security.AccessControl.FileSystemAccessRule&quot;> </xref>物件，指定其存取控制清單 (ACL) 權限的使用者應該會從檔案或目錄。"
  overload: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule(System.Security.AccessControl.FileSystemAuditRule)
  id: RemoveAuditRule(System.Security.AccessControl.FileSystemAuditRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: RemoveAuditRule(FileSystemAuditRule)
  nameWithType: FileSystemSecurity.RemoveAuditRule(FileSystemAuditRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule(FileSystemAuditRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "移除所有相符允許或拒絕從目前的檔案或目錄的稽核規則。"
  remarks: "RemoveAuditRule 方法中移除所有符合<xref:System.Security.AccessControl.AccessControlType>稽核規則或比對所有<xref:System.Security.AccessControl.AccessControlType>稽核規則從目前<xref:System.Security.AccessControl.FileSystemSecurity>物件。</xref:System.Security.AccessControl.FileSystemSecurity> </xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.AccessControlType>  例如，您可以使用這個方法來移除所有<xref:System.Security.AccessControl.AccessControlType>稽核規則的使用者藉由傳遞<xref:System.Security.AccessControl.FileSystemAuditRule>使用建立物件<xref:System.Security.AccessControl.AccessControlType>值，<xref:System.Security.AccessControl.AuditFlags>值和使用者帳戶。</xref:System.Security.AccessControl.AuditFlags> </xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.FileSystemAuditRule> </xref:System.Security.AccessControl.AccessControlType>  當您這樣做時，則 RemoveAuditRule 方法會移除任何指定的拒絕規則<xref:System.Security.AccessControl.AuditFlags>值或<xref:System.Security.AccessControl.AuditFlags>值。</xref:System.Security.AccessControl.AuditFlags> </xref:System.Security.AccessControl.AuditFlags>"
  example:
  - "The following code example uses the <xref:System.Security.AccessControl.FileSystemSecurity.AddAuditRule%2A> method to add an audit rule to a file and uses the RemoveAuditRule method to remove the audit rule from the file.  You must supply a valid user or group account to run this example.  \n  \n [!code-vb[AccessControl.FileSystemAuditRule#1](~/add/codesnippet/visualbasic/e76c77df-35cd-4fcd-bf24-_1.vb)]\n [!code-cs[AccessControl.FileSystemAuditRule#1](~/add/codesnippet/csharp/e76c77df-35cd-4fcd-bf24-_1.cs)]"
  syntax:
    content: public bool RemoveAuditRule (System.Security.AccessControl.FileSystemAuditRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.FileSystemAuditRule
      description: "A <xref href=&quot;System.Security.AccessControl.FileSystemAuditRule&quot;> </xref>物件，代表要移除檔案或目錄的稽核規則。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果稽核規則已移除;否則，<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>"
  overload: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleAll(System.Security.AccessControl.FileSystemAuditRule)
  id: RemoveAuditRuleAll(System.Security.AccessControl.FileSystemAuditRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: RemoveAuditRuleAll(FileSystemAuditRule)
  nameWithType: FileSystemSecurity.RemoveAuditRuleAll(FileSystemAuditRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleAll(FileSystemAuditRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "從目前的檔案或目錄中移除指定之使用者的所有稽核規則。"
  remarks: "RemoveAuditRuleAll 方法中移除指定之使用者的所有稽核規則。  它會忽略中的所有值<xref:System.Security.AccessControl.FileSystemAuditRule>物件以外的使用者帳戶。</xref:System.Security.AccessControl.FileSystemAuditRule>"
  syntax:
    content: public void RemoveAuditRuleAll (System.Security.AccessControl.FileSystemAuditRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.FileSystemAuditRule
      description: "A <xref href=&quot;System.Security.AccessControl.FileSystemAuditRule&quot;> </xref>物件，指定應移除其稽核規則，從檔案或目錄的使用者。"
  overload: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleAll*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.FileSystemAuditRule)
  id: RemoveAuditRuleSpecific(System.Security.AccessControl.FileSystemAuditRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: RemoveAuditRuleSpecific(FileSystemAuditRule)
  nameWithType: FileSystemSecurity.RemoveAuditRuleSpecific(FileSystemAuditRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific(FileSystemAuditRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "移除單一比對允許或拒絕從目前的檔案或目錄的稽核規則。"
  remarks: "RemoveAuditRuleSpecific 方法中移除指定的比對<xref:System.Security.AccessControl.AccessControlType>稽核規則，或指定的比對<xref:System.Security.AccessControl.AccessControlType>從目前的稽核規則<xref:System.Security.AccessControl.FileSystemSecurity>物件。</xref:System.Security.AccessControl.FileSystemSecurity> </xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.AccessControlType>  例如，您可以使用這個方法，若要移除指定<xref:System.Security.AccessControl.AccessControlType>藉由傳遞使用者的稽核規則<xref:System.Security.AccessControl.FileSystemAuditRule>使用建立物件<xref:System.Security.AccessControl.AccessControlType>值<xref:System.Security.AccessControl.AuditFlags>值和使用者帳戶。</xref:System.Security.AccessControl.AuditFlags> </xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.FileSystemAuditRule> </xref:System.Security.AccessControl.AccessControlType>  當您這樣做時，RemoveAuditRuleSpecific 方法移除僅拒絕規則，以指定<xref:System.Security.AccessControl.AuditFlags>值。</xref:System.Security.AccessControl.AuditFlags>  它不會移除任何指定的拒絕規則<xref:System.Security.AccessControl.AuditFlags>值。</xref:System.Security.AccessControl.AuditFlags>"
  syntax:
    content: public void RemoveAuditRuleSpecific (System.Security.AccessControl.FileSystemAuditRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.FileSystemAuditRule
      description: "A <xref href=&quot;System.Security.AccessControl.FileSystemAuditRule&quot;> </xref>物件，代表要移除檔案或目錄的稽核規則。"
  overload: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.ResetAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  id: ResetAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: ResetAccessRule(FileSystemAccessRule)
  nameWithType: FileSystemSecurity.ResetAccessRule(FileSystemAccessRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.ResetAccessRule(FileSystemAccessRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "將指定的存取控制清單 (ACL) 權限加入至目前檔案或目錄，並移除所有相符的 ACL 權限。"
  remarks: "ResetAccessRule 方法新增指定的存取控制清單 (ACL) 規則，或覆寫的比對任何相同 ACL 規則`rule`參數。  例如，如果`rule`參數會指定<xref:System.Security.AccessControl.FileSystemRights>值和 ResetAccessRule 方法尋找相同的 ACL 規則，以指定<xref:System.Security.AccessControl.FileSystemRights>值完全相同的規則就會覆寫。</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights>  如果此 ResetAccessRule 方法會尋找完全相同的 ACL 規則指定<xref:System.Security.AccessControl.FileSystemRights>值完全相同的規則也會覆寫。</xref:System.Security.AccessControl.FileSystemRights>       若要新增或變更 ACL 將資訊保存到檔案，使用<xref:System.IO.File.SetAccessControl%2A>或<xref:System.IO.FileInfo.SetAccessControl%2A>方法。</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.File.SetAccessControl%2A>  若要新增或變更 ACL 將資訊保存到目錄，使用<xref:System.IO.Directory.SetAccessControl%2A>或<xref:System.IO.FileInfo.SetAccessControl%2A>方法。</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.Directory.SetAccessControl%2A>       若要從檔案擷取 ACL 資訊，請使用<xref:System.IO.File.GetAccessControl%2A>或<xref:System.IO.FileInfo.GetAccessControl%2A>方法。</xref:System.IO.FileInfo.GetAccessControl%2A> </xref:System.IO.File.GetAccessControl%2A>  若要從目錄擷取 ACL 資訊，請使用<xref:System.IO.Directory.GetAccessControl%2A>或<xref:System.IO.DirectoryInfo.GetAccessControl%2A>方法。</xref:System.IO.DirectoryInfo.GetAccessControl%2A> </xref:System.IO.Directory.GetAccessControl%2A>"
  syntax:
    content: public void ResetAccessRule (System.Security.AccessControl.FileSystemAccessRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.FileSystemAccessRule
      description: "A <xref href=&quot;System.Security.AccessControl.FileSystemAccessRule&quot;> </xref>物件，代表要加入至檔案或目錄存取控制清單 (ACL) 權限。"
  overload: System.Security.AccessControl.FileSystemSecurity.ResetAccessRule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.SetAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  id: SetAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: SetAccessRule(FileSystemAccessRule)
  nameWithType: FileSystemSecurity.SetAccessRule(FileSystemAccessRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.SetAccessRule(FileSystemAccessRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "設定目前檔案或目錄的指定的存取控制清單 (ACL) 權限。"
  remarks: "SetAccessRule 方法新增指定的存取控制清單 (ACL) 規則，或覆寫的比對任何相同 ACL 規則<xref:System.Security.AccessControl.FileSystemRights>值`rule`參數。</xref:System.Security.AccessControl.FileSystemRights>  例如，如果`rule`參數會指定<xref:System.Security.AccessControl.FileSystemRights>值和 SetAccessRule 方法尋找相同的 ACL 規則，以指定<xref:System.Security.AccessControl.FileSystemRights>值完全相同的規則就會覆寫。</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights>  如果此 SetAccessRule 方法會尋找完全相同的 ACL 規則指定<xref:System.Security.AccessControl.FileSystemRights>值完全相同的規則就不會覆寫。</xref:System.Security.AccessControl.FileSystemRights>       若要新增或變更 ACL 將資訊保存到檔案，使用<xref:System.IO.File.SetAccessControl%2A>或<xref:System.IO.FileInfo.SetAccessControl%2A>方法。</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.File.SetAccessControl%2A>  若要新增或變更 ACL 將資訊保存到目錄，使用<xref:System.IO.Directory.SetAccessControl%2A>或<xref:System.IO.FileInfo.SetAccessControl%2A>方法。</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.Directory.SetAccessControl%2A>       若要從檔案擷取 ACL 資訊，請使用<xref:System.IO.File.GetAccessControl%2A>或<xref:System.IO.FileInfo.GetAccessControl%2A>方法。</xref:System.IO.FileInfo.GetAccessControl%2A> </xref:System.IO.File.GetAccessControl%2A>  若要從目錄擷取 ACL 資訊，請使用<xref:System.IO.Directory.GetAccessControl%2A>或<xref:System.IO.DirectoryInfo.GetAccessControl%2A>方法。</xref:System.IO.DirectoryInfo.GetAccessControl%2A> </xref:System.IO.Directory.GetAccessControl%2A>"
  syntax:
    content: public void SetAccessRule (System.Security.AccessControl.FileSystemAccessRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.FileSystemAccessRule
      description: "A <xref href=&quot;System.Security.AccessControl.FileSystemAccessRule&quot;> </xref>物件，代表檔案或目錄設定存取控制清單 (ACL) 權限。"
  overload: System.Security.AccessControl.FileSystemSecurity.SetAccessRule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.SetAuditRule(System.Security.AccessControl.FileSystemAuditRule)
  id: SetAuditRule(System.Security.AccessControl.FileSystemAuditRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: SetAuditRule(FileSystemAuditRule)
  nameWithType: FileSystemSecurity.SetAuditRule(FileSystemAuditRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.SetAuditRule(FileSystemAuditRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "設定目前檔案或目錄的指定的稽核規則。"
  remarks: "SetAuditRule 方法新增指定的稽核規則，或覆寫比對任何相同的稽核規則<xref:System.Security.AccessControl.FileSystemRights>值`rule`參數。</xref:System.Security.AccessControl.FileSystemRights>  例如，如果`rule`參數會指定<xref:System.Security.AccessControl.FileSystemRights>值和 SetAuditRule 方法會尋找指定的完全相同的稽核規則<xref:System.Security.AccessControl.FileSystemRights>值完全相同的規則就會覆寫。</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights>  如果 SetAuditRule 方法所找到的相同的稽核規則指定<xref:System.Security.AccessControl.FileSystemRights>值完全相同的規則就不會覆寫。</xref:System.Security.AccessControl.FileSystemRights>"
  syntax:
    content: public void SetAuditRule (System.Security.AccessControl.FileSystemAuditRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.FileSystemAuditRule
      description: "A <xref href=&quot;System.Security.AccessControl.FileSystemAuditRule&quot;> </xref>表示若要設定檔案或目錄的稽核規則的物件。"
  overload: System.Security.AccessControl.FileSystemSecurity.SetAuditRule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Security.AccessControl.NativeObjectSecurity
  isExternal: false
  name: System.Security.AccessControl.NativeObjectSecurity
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Security.AccessControl.FileSystemSecurity.AccessRightType
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AccessRightType
  nameWithType: FileSystemSecurity.AccessRightType
  fullName: System.Security.AccessControl.FileSystemSecurity.AccessRightType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Security.AccessControl.FileSystemSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
  nameWithType: FileSystemSecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
  fullName: System.Security.AccessControl.FileSystemSecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
- uid: System.Security.AccessControl.AccessRule
  parent: System.Security.AccessControl
  isExternal: false
  name: AccessRule
  nameWithType: AccessRule
  fullName: System.Security.AccessControl.AccessRule
- uid: System.Security.Principal.IdentityReference
  parent: System.Security.Principal
  isExternal: false
  name: IdentityReference
  nameWithType: IdentityReference
  fullName: System.Security.Principal.IdentityReference
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.AccessControl.InheritanceFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: InheritanceFlags
  nameWithType: InheritanceFlags
  fullName: System.Security.AccessControl.InheritanceFlags
- uid: System.Security.AccessControl.PropagationFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: PropagationFlags
  nameWithType: PropagationFlags
  fullName: System.Security.AccessControl.PropagationFlags
- uid: System.Security.AccessControl.AccessControlType
  parent: System.Security.AccessControl
  isExternal: false
  name: AccessControlType
  nameWithType: AccessControlType
  fullName: System.Security.AccessControl.AccessControlType
- uid: System.Security.AccessControl.FileSystemSecurity.AccessRuleType
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AccessRuleType
  nameWithType: FileSystemSecurity.AccessRuleType
  fullName: System.Security.AccessControl.FileSystemSecurity.AccessRuleType
- uid: System.Security.AccessControl.FileSystemSecurity.AddAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AddAccessRule(FileSystemAccessRule)
  nameWithType: FileSystemSecurity.AddAccessRule(FileSystemAccessRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.AddAccessRule(FileSystemAccessRule)
- uid: System.Security.AccessControl.FileSystemAccessRule
  parent: System.Security.AccessControl
  isExternal: false
  name: FileSystemAccessRule
  nameWithType: FileSystemAccessRule
  fullName: System.Security.AccessControl.FileSystemAccessRule
- uid: System.Security.AccessControl.FileSystemSecurity.AddAuditRule(System.Security.AccessControl.FileSystemAuditRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AddAuditRule(FileSystemAuditRule)
  nameWithType: FileSystemSecurity.AddAuditRule(FileSystemAuditRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.AddAuditRule(FileSystemAuditRule)
- uid: System.Security.AccessControl.FileSystemAuditRule
  parent: System.Security.AccessControl
  isExternal: false
  name: FileSystemAuditRule
  nameWithType: FileSystemAuditRule
  fullName: System.Security.AccessControl.FileSystemAuditRule
- uid: System.Security.AccessControl.FileSystemSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
  nameWithType: FileSystemSecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
  fullName: System.Security.AccessControl.FileSystemSecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
- uid: System.Security.AccessControl.AuditRule
  parent: System.Security.AccessControl
  isExternal: false
  name: AuditRule
  nameWithType: AuditRule
  fullName: System.Security.AccessControl.AuditRule
- uid: System.Security.AccessControl.AuditFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: AuditFlags
  nameWithType: AuditFlags
  fullName: System.Security.AccessControl.AuditFlags
- uid: System.Security.AccessControl.FileSystemSecurity.AuditRuleType
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AuditRuleType
  nameWithType: FileSystemSecurity.AuditRuleType
  fullName: System.Security.AccessControl.FileSystemSecurity.AuditRuleType
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: RemoveAccessRule(FileSystemAccessRule)
  nameWithType: FileSystemSecurity.RemoveAccessRule(FileSystemAccessRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule(FileSystemAccessRule)
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleAll(System.Security.AccessControl.FileSystemAccessRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: RemoveAccessRuleAll(FileSystemAccessRule)
  nameWithType: FileSystemSecurity.RemoveAccessRuleAll(FileSystemAccessRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleAll(FileSystemAccessRule)
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.FileSystemAccessRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: RemoveAccessRuleSpecific(FileSystemAccessRule)
  nameWithType: FileSystemSecurity.RemoveAccessRuleSpecific(FileSystemAccessRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific(FileSystemAccessRule)
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule(System.Security.AccessControl.FileSystemAuditRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: RemoveAuditRule(FileSystemAuditRule)
  nameWithType: FileSystemSecurity.RemoveAuditRule(FileSystemAuditRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule(FileSystemAuditRule)
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleAll(System.Security.AccessControl.FileSystemAuditRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: RemoveAuditRuleAll(FileSystemAuditRule)
  nameWithType: FileSystemSecurity.RemoveAuditRuleAll(FileSystemAuditRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleAll(FileSystemAuditRule)
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.FileSystemAuditRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: RemoveAuditRuleSpecific(FileSystemAuditRule)
  nameWithType: FileSystemSecurity.RemoveAuditRuleSpecific(FileSystemAuditRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific(FileSystemAuditRule)
- uid: System.Security.AccessControl.FileSystemSecurity.ResetAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: ResetAccessRule(FileSystemAccessRule)
  nameWithType: FileSystemSecurity.ResetAccessRule(FileSystemAccessRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.ResetAccessRule(FileSystemAccessRule)
- uid: System.Security.AccessControl.FileSystemSecurity.SetAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: SetAccessRule(FileSystemAccessRule)
  nameWithType: FileSystemSecurity.SetAccessRule(FileSystemAccessRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.SetAccessRule(FileSystemAccessRule)
- uid: System.Security.AccessControl.FileSystemSecurity.SetAuditRule(System.Security.AccessControl.FileSystemAuditRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: SetAuditRule(FileSystemAuditRule)
  nameWithType: FileSystemSecurity.SetAuditRule(FileSystemAuditRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.SetAuditRule(FileSystemAuditRule)
- uid: System.Security.AccessControl.FileSystemSecurity.AccessRightType*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AccessRightType
  nameWithType: FileSystemSecurity.AccessRightType
- uid: System.Security.AccessControl.FileSystemSecurity.AccessRuleFactory*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AccessRuleFactory
  nameWithType: FileSystemSecurity.AccessRuleFactory
- uid: System.Security.AccessControl.FileSystemSecurity.AccessRuleType*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AccessRuleType
  nameWithType: FileSystemSecurity.AccessRuleType
- uid: System.Security.AccessControl.FileSystemSecurity.AddAccessRule*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AddAccessRule
  nameWithType: FileSystemSecurity.AddAccessRule
- uid: System.Security.AccessControl.FileSystemSecurity.AddAuditRule*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AddAuditRule
  nameWithType: FileSystemSecurity.AddAuditRule
- uid: System.Security.AccessControl.FileSystemSecurity.AuditRuleFactory*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AuditRuleFactory
  nameWithType: FileSystemSecurity.AuditRuleFactory
- uid: System.Security.AccessControl.FileSystemSecurity.AuditRuleType*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AuditRuleType
  nameWithType: FileSystemSecurity.AuditRuleType
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: RemoveAccessRule
  nameWithType: FileSystemSecurity.RemoveAccessRule
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleAll*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: RemoveAccessRuleAll
  nameWithType: FileSystemSecurity.RemoveAccessRuleAll
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: RemoveAccessRuleSpecific
  nameWithType: FileSystemSecurity.RemoveAccessRuleSpecific
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: RemoveAuditRule
  nameWithType: FileSystemSecurity.RemoveAuditRule
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleAll*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: RemoveAuditRuleAll
  nameWithType: FileSystemSecurity.RemoveAuditRuleAll
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: RemoveAuditRuleSpecific
  nameWithType: FileSystemSecurity.RemoveAuditRuleSpecific
- uid: System.Security.AccessControl.FileSystemSecurity.ResetAccessRule*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: ResetAccessRule
  nameWithType: FileSystemSecurity.ResetAccessRule
- uid: System.Security.AccessControl.FileSystemSecurity.SetAccessRule*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: SetAccessRule
  nameWithType: FileSystemSecurity.SetAccessRule
- uid: System.Security.AccessControl.FileSystemSecurity.SetAuditRule*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: SetAuditRule
  nameWithType: FileSystemSecurity.SetAuditRule
