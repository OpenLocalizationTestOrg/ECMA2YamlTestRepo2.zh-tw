### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.TraceSource
  id: TraceSource
  children:
  - System.Diagnostics.TraceSource.#ctor(System.String)
  - System.Diagnostics.TraceSource.#ctor(System.String,System.Diagnostics.SourceLevels)
  - System.Diagnostics.TraceSource.Attributes
  - System.Diagnostics.TraceSource.Close
  - System.Diagnostics.TraceSource.Flush
  - System.Diagnostics.TraceSource.GetSupportedAttributes
  - System.Diagnostics.TraceSource.Listeners
  - System.Diagnostics.TraceSource.Name
  - System.Diagnostics.TraceSource.Switch
  - System.Diagnostics.TraceSource.TraceData(System.Diagnostics.TraceEventType,System.Int32,System.Object)
  - System.Diagnostics.TraceSource.TraceData(System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  - System.Diagnostics.TraceSource.TraceEvent(System.Diagnostics.TraceEventType,System.Int32)
  - System.Diagnostics.TraceSource.TraceEvent(System.Diagnostics.TraceEventType,System.Int32,System.String)
  - System.Diagnostics.TraceSource.TraceEvent(System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  - System.Diagnostics.TraceSource.TraceInformation(System.String)
  - System.Diagnostics.TraceSource.TraceInformation(System.String,System.Object[])
  - System.Diagnostics.TraceSource.TraceTransfer(System.Int32,System.String,System.Guid)
  langs:
  - csharp
  name: TraceSource
  nameWithType: TraceSource
  fullName: System.Diagnostics.TraceSource
  type: Class
  summary: "提供一組方法和屬性，讓應用程式追蹤程式碼執行及相關追蹤訊息及其來源。"
  remarks: "The TraceSource class is used by applications to produce traces that can be associated with the application. TraceSource provides tracing methods that allow you to easily trace events, trace data, and issue informational traces. Trace output from TraceSource can be controlled by configuration file settings. The configuration file is located in the folder with the application executable and has the name of the application with the .config file name extension added. For example, the name of the configuration file for TraceSourceSample.exe is TraceSourceSample.exe.config. The configuration file can be used to determine where the trace information is to be sent and what levels of activity are to be traced. The following example shows the contents of a sample application configuration file.  \n  \n```  \n<configuration>  \n  <system.diagnostics>  \n    <sources>  \n      <source name=\"TraceTest\" switchName=\"SourceSwitch\"   \n        switchType=\"System.Diagnostics.SourceSwitch\" >  \n        <listeners>  \n          <add name=\"console\" />  \n          <remove name =\"Default\" />  \n        </listeners>  \n      </source>  \n    </sources>  \n    <switches>  \n      <!-- You can set the level at which tracing is to occur -->  \n      <add name=\"SourceSwitch\" value=\"Warning\" />  \n        <!-- You can turn tracing off -->  \n        <!--add name=\"SourceSwitch\" value=\"Off\" -->  \n    </switches>  \n    <sharedListeners>  \n      <add name=\"console\"   \n        type=\"System.Diagnostics.ConsoleTraceListener\"   \n        initializeData=\"false\"/>  \n    </sharedListeners>  \n    <trace autoflush=\"true\" indentsize=\"4\">  \n      <listeners>  \n        <add name=\"console\" />  \n      </listeners>  \n    </trace>  \n  </system.diagnostics>  \n</configuration>  \n```  \n  \n The TraceSource class is identified by the name of a source, typically the name of the application.  The trace messages coming from a particular component can be initiated by a particular trace source, allowing all messages coming from that component to be easily identified.  \n  \n TraceSource defines tracing methods but does not actually provide any specific mechanism for generating and storing tracing data. The tracing data is produced by trace listeners, which are plug-ins that can be loaded by trace sources.  \n  \n> [!NOTE]\n>  You should not call the tracing methods during finalization. Doing so can result in an <xref:System.ObjectDisposedException> being thrown.  \n  \n You can customize the tracing output's target by adding or removing <xref:System.Diagnostics.TraceListener> instances to or from the collection stored in the <xref:System.Diagnostics.TraceSource.Listeners%2A?displayProperty=fullName> property. By default, trace output is produced using an instance of the <xref:System.Diagnostics.DefaultTraceListener> class. The preceding configuration file example demonstrates removing the <xref:System.Diagnostics.DefaultTraceListener> and adding a <xref:System.Diagnostics.ConsoleTraceListener> to produce the trace output for the trace source. For more information, see [\\&lt;listeners\\&gt;](../Topic/%3Clisteners%3E%20Element%20for%20%3Csource%3E.md) and [\\&lt;sharedListeners\\&gt;](../Topic/%3CsharedListeners%3E%20Element.md).  \n  \n> [!NOTE]\n>  Adding a trace listener to the <xref:System.Diagnostics.TraceSource.Listeners%2A> collection can cause an exception to be thrown while tracing, if a resource used by the trace listener is not available. The conditions and the exception thrown depend on the trace listener and cannot be enumerated in this topic. It may be useful to place calls to the TraceSource methods in `try`/`catch` blocks to detect and handle any exceptions from trace listeners.  \n  \n The <xref:System.Diagnostics.SourceSwitch> class provides the means to dynamically control the tracing output. The preceding configuration file example shows how you can turn off tracing from a trace source and control the level at which tracing occurs.  You can modify the value of the source switch without recompiling your application. For information on using the configuration file to set a switch, see <xref:System.Diagnostics.Switch> and [How to: Create, Initialize and Configure Trace Switches](~/add/includes/ajax-current-ext-md.md).  \n  \n> [!NOTE]\n>  If you modify a configuration file while an application is executing, the application must be stopped and restarted or the <xref:System.Diagnostics.Trace.Refresh%2A> method must be called before the new settings take effect.  \n  \n The <xref:System.Diagnostics.TraceEventType> enumeration is used to define the event type of the trace message. Trace filters use the <xref:System.Diagnostics.TraceEventType> to determine if a trace listener should produce the trace message.  \n  \n The trace listeners can optionally have an additional layer of filtering through a trace filter.  If a trace listener has an associated filter, the listener calls the <xref:System.Diagnostics.TraceFilter.ShouldTrace%2A> method on that filter to determine whether or not to produce the trace information.  \n  \n The trace listeners use the values of the <xref:System.Diagnostics.Trace> class properties <xref:System.Diagnostics.Trace.Indent%2A>, <xref:System.Diagnostics.Trace.IndentSize%2A>, and <xref:System.Diagnostics.Trace.AutoFlush%2A> to format trace output. You can use configuration file attributes to set the <xref:System.Diagnostics.Trace.Indent%2A>, <xref:System.Diagnostics.Trace.IndentSize%2A>, and <xref:System.Diagnostics.Trace.AutoFlush%2A> properties. The following example sets the <xref:System.Diagnostics.Trace.AutoFlush%2A> property to `false` and the <xref:System.Diagnostics.Trace.IndentSize%2A> property to 3.  \n  \n```  \n<configuration>  \n  <system.diagnostics>  \n    <trace autoflush=\"false\" indentsize=\"3\" />  \n  </system.diagnostics>  \n</configuration>  \n```"
  example:
  - "The following code example shows the use of the TraceSource class to forward traces to listeners.  The example also demonstrates switch and filter usage.  \n  \n [!code-cpp[System.Diagnostics.TraceSource2#1](~/add/codesnippet/cpp/t-system.diagnostics.tra_3_1.cpp)]\n [!code-cs[System.Diagnostics.TraceSource2#1](~/add/codesnippet/csharp/t-system.diagnostics.tra_3_1.cs)]\n [!code-vb[System.Diagnostics.TraceSource2#1](~/add/codesnippet/visualbasic/t-system.diagnostics.tra_3_1.vb)]"
  syntax:
    content: public class TraceSource
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Diagnostics.TraceSource.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Diagnostics.TraceSource
  langs:
  - csharp
  name: TraceSource(String)
  nameWithType: TraceSource.TraceSource(String)
  fullName: System.Diagnostics.TraceSource.TraceSource(String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "初始化的新執行個體<xref href=&quot;System.Diagnostics.TraceSource&quot;></xref>類別，使用指定的來源名稱。"
  remarks: "來源名稱用來識別追蹤。 它由<xref:System.Diagnostics.SourceFilter>來判定追蹤接聽程式是否應該產生追蹤。</xref:System.Diagnostics.SourceFilter> 建議的作法是使用應用程式的名稱做為來源名稱。      > [!NOTE] > 則不需要建立新<xref:System.Diagnostics.TraceSource>針對每個追蹤要求的執行個體。</xref:System.Diagnostics.TraceSource> 建立一個<xref:System.Diagnostics.TraceSource>執行個體，並將它用於所有追蹤要求的應用程式。</xref:System.Diagnostics.TraceSource>"
  example:
  - "The following code example shows the use of the TraceSource constructor to create a new <xref:System.Diagnostics.TraceSource> object. This code example is part of a larger example provided for the <xref:System.Diagnostics.TraceSource> class.  \n  \n [!code-cs[System.Diagnostics.TraceSource2#9](~/add/codesnippet/csharp/m-system.diagnostics.tra_28_1.cs)]\n [!code-vb[System.Diagnostics.TraceSource2#9](~/add/codesnippet/visualbasic/m-system.diagnostics.tra_28_1.vb)]"
  syntax:
    content: public TraceSource (string name);
    parameters:
    - id: name
      type: System.String
      description: "來源 （通常是應用程式的名稱） 的名稱。"
  overload: System.Diagnostics.TraceSource.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>name</code>為空字串 (&quot;&quot;)。"
  platform:
  - net462
- uid: System.Diagnostics.TraceSource.#ctor(System.String,System.Diagnostics.SourceLevels)
  id: '#ctor(System.String,System.Diagnostics.SourceLevels)'
  parent: System.Diagnostics.TraceSource
  langs:
  - csharp
  name: TraceSource(String,SourceLevels)
  nameWithType: TraceSource.TraceSource(String,SourceLevels)
  fullName: System.Diagnostics.TraceSource.TraceSource(String,SourceLevels)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "初始化的新執行個體<xref href=&quot;System.Diagnostics.TraceSource&quot;></xref>類別，使用所指定的來源和預設來源層級的名稱在一個追蹤會發生。"
  remarks: "來源名稱用來識別追蹤。 可由<xref:System.Diagnostics.SourceSwitch>來判斷是否發生追蹤及<xref:System.Diagnostics.SourceFilter>來判斷是否要產生追蹤。</xref:System.Diagnostics.SourceFilter> </xref:System.Diagnostics.SourceSwitch> 預設來源層級由<xref:System.Diagnostics.EventTypeFilter>判斷追蹤是否發生根據來源層級要追蹤的訊息。</xref:System.Diagnostics.EventTypeFilter>      > [!NOTE] > 則不需要建立新<xref:System.Diagnostics.TraceSource>針對每個追蹤要求的執行個體。</xref:System.Diagnostics.TraceSource> 建立一個<xref:System.Diagnostics.TraceSource>執行個體，並將它用於所有追蹤要求的應用程式。</xref:System.Diagnostics.TraceSource>"
  syntax:
    content: public TraceSource (string name, System.Diagnostics.SourceLevels defaultLevel);
    parameters:
    - id: name
      type: System.String
      description: "來源，通常就是應用程式名稱的名稱。"
    - id: defaultLevel
      type: System.Diagnostics.SourceLevels
      description: "列舉值的位元組合，指定的預設來源層級追蹤。"
  overload: System.Diagnostics.TraceSource.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>name</code>為空字串 (&quot;&quot;)。"
  platform:
  - net462
- uid: System.Diagnostics.TraceSource.Attributes
  id: Attributes
  parent: System.Diagnostics.TraceSource
  langs:
  - csharp
  name: Attributes
  nameWithType: TraceSource.Attributes
  fullName: System.Diagnostics.TraceSource.Attributes
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "取得應用程式組態檔中定義的自訂參數屬性。"
  remarks: "屬性的內容識別應用程式的組態檔參考的自訂屬性。 不會列舉未參考的自訂屬性。 類別繼承自<xref:System.Diagnostics.TraceSource>類別可以加入自訂屬性，藉由覆寫<xref:System.Diagnostics.Switch.GetSupportedAttributes%2A?displayProperty=fullName>方法並傳回之自訂屬性名稱的字串陣列。</xref:System.Diagnostics.Switch.GetSupportedAttributes%2A?displayProperty=fullName> </xref:System.Diagnostics.TraceSource>       以下是追蹤來源的項目，指定自訂屬性的範例`SecondTraceSourceAttribute`:```   <sources>     <source name=&quot;TraceTest&quot; switchName=&quot;TestSourceSwitch&quot;        switchType=&quot;Testing.MySourceSwitch, TraceSample&quot;        SecondTraceSourceAttribute=&quot;two&quot;>     </source>   </sources>   ```"
  example:
  - "The following code sample shows how to display the custom attributes for a <xref:System.Diagnostics.TraceSource>.  This code example is part of a larger example provided for the <xref:System.Diagnostics.TraceSource> class.  \n  \n [!code-cs[System.Diagnostics.TraceSource2#14](~/add/codesnippet/csharp/p-system.diagnostics.tra_7_1.cs)]\n [!code-vb[System.Diagnostics.TraceSource2#14](~/add/codesnippet/visualbasic/p-system.diagnostics.tra_7_1.vb)]"
  syntax:
    content: public System.Collections.Specialized.StringDictionary Attributes { get; }
    return:
      type: System.Collections.Specialized.StringDictionary
      description: "A <xref href=&quot;System.Collections.Specialized.StringDictionary&quot;> </xref>包含追蹤參數的自訂屬性。"
  overload: System.Diagnostics.TraceSource.Attributes*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceSource.Close
  id: Close
  parent: System.Diagnostics.TraceSource
  langs:
  - csharp
  name: Close()
  nameWithType: TraceSource.Close()
  fullName: System.Diagnostics.TraceSource.Close()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "關閉追蹤接聽程式集合中的所有追蹤接聽程式。"
  remarks: "Close 方法呼叫<xref:System.Diagnostics.TraceListener.Close%2A>方法中的每個追蹤接聽程式<xref:System.Diagnostics.TraceSource.Listeners%2A>集合。</xref:System.Diagnostics.TraceSource.Listeners%2A> </xref:System.Diagnostics.TraceListener.Close%2A>"
  example:
  - "The following code example shows how you can use the Close method to close all the listeners in the collection. This code example is part of a larger example provided for the <xref:System.Diagnostics.TraceSource> class.  \n  \n [!code-cs[System.Diagnostics.TraceSource2#33](~/add/codesnippet/csharp/m-system.diagnostics.tra_21_1.cs)]\n [!code-vb[System.Diagnostics.TraceSource2#33](~/add/codesnippet/visualbasic/m-system.diagnostics.tra_21_1.vb)]"
  syntax:
    content: public void Close ();
    parameters: []
  overload: System.Diagnostics.TraceSource.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceSource.Flush
  id: Flush
  parent: System.Diagnostics.TraceSource
  langs:
  - csharp
  name: Flush()
  nameWithType: TraceSource.Flush()
  fullName: System.Diagnostics.TraceSource.Flush()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "清除追蹤接聽程式集合中的所有追蹤接聽程式。"
  remarks: "排清方法呼叫<xref:System.Diagnostics.TraceListener.Flush%2A>方法中的每個追蹤接聽程式<xref:System.Diagnostics.TraceSource.Listeners%2A>集合。</xref:System.Diagnostics.TraceSource.Listeners%2A> </xref:System.Diagnostics.TraceListener.Flush%2A>"
  example:
  - "The following code example shows how you can use the Flush method to flush all the listeners in the collection. This code example is part of a larger example provided for the <xref:System.Diagnostics.TraceSource> class.  \n  \n [!code-cs[System.Diagnostics.TraceSource2#33](~/add/codesnippet/csharp/m-system.diagnostics.tra_15_1.cs)]\n [!code-vb[System.Diagnostics.TraceSource2#33](~/add/codesnippet/visualbasic/m-system.diagnostics.tra_15_1.vb)]"
  syntax:
    content: public void Flush ();
    parameters: []
  overload: System.Diagnostics.TraceSource.Flush*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "您嘗試在最終處理期間追蹤事件。"
  platform:
  - net462
- uid: System.Diagnostics.TraceSource.GetSupportedAttributes
  id: GetSupportedAttributes
  parent: System.Diagnostics.TraceSource
  langs:
  - csharp
  name: GetSupportedAttributes()
  nameWithType: TraceSource.GetSupportedAttributes()
  fullName: System.Diagnostics.TraceSource.GetSupportedAttributes()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "取得由追蹤來源支援的自訂屬性。"
  remarks: "GetSupportedAttributes 的預設實作會傳回`null`。"
  example:
  - "The following code example shows an override of the GetSupportedAttributes method to identify the custom attributes for the `MyTraceSource` class.  \n  \n [!code-cs[System.Diagnostics.TraceSource#33](~/add/codesnippet/csharp/m-system.diagnostics.tra_0_1.cs)]\n [!code-vb[System.Diagnostics.TraceSource#33](~/add/codesnippet/visualbasic/m-system.diagnostics.tra_0_1.vb)]"
  syntax:
    content: protected virtual string[] GetSupportedAttributes ();
    parameters: []
    return:
      type: System.String[]
      description: "追蹤來源，所支援的自訂屬性命名的字串陣列或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果沒有任何自訂屬性。"
  overload: System.Diagnostics.TraceSource.GetSupportedAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceSource.Listeners
  id: Listeners
  parent: System.Diagnostics.TraceSource
  langs:
  - csharp
  name: Listeners
  nameWithType: TraceSource.Listeners
  fullName: System.Diagnostics.TraceSource.Listeners
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "取得追蹤來源的追蹤接聽項集合。"
  remarks: "您可以使用這個屬性來存取及執行的追蹤接聽項上的作業。"
  syntax:
    content: public System.Diagnostics.TraceListenerCollection Listeners { get; }
    return:
      type: System.Diagnostics.TraceListenerCollection
      description: "A <xref href=&quot;System.Diagnostics.TraceListenerCollection&quot;> </xref> ，其中包含與來源相關聯的作用中的追蹤接聽項。"
  overload: System.Diagnostics.TraceSource.Listeners*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceSource.Name
  id: Name
  parent: System.Diagnostics.TraceSource
  langs:
  - csharp
  name: Name
  nameWithType: TraceSource.Name
  fullName: System.Diagnostics.TraceSource.Name
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "取得追蹤來源的名稱。"
  remarks: "名稱設定`name`傳遞到建構函式的參數。 您可以使用參照追蹤來源`name`組態檔中的屬性。       下列 XML 項目會顯示參考在組態檔中的追蹤來源。      ```   <configuration>     <system.diagnostics>       <sources>         <source name=&quot;TraceTest&quot;>         </source>       </sources>     </system.diagnostics>   </configuration>   ```"
  example:
  - "The following code sample shows how to name a trace source in the constructor call.  This code example is part of a larger example provided for the <xref:System.Diagnostics.TraceSource> class.  \n  \n [!code-cs[System.Diagnostics.TraceSource2#9](~/add/codesnippet/csharp/p-system.diagnostics.tra_0_1.cs)]\n [!code-vb[System.Diagnostics.TraceSource2#9](~/add/codesnippet/visualbasic/p-system.diagnostics.tra_0_1.vb)]"
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "追蹤來源的名稱。"
  overload: System.Diagnostics.TraceSource.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceSource.Switch
  id: Switch
  parent: System.Diagnostics.TraceSource
  langs:
  - csharp
  name: Switch
  nameWithType: TraceSource.Switch
  fullName: System.Diagnostics.TraceSource.Switch
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "取得或設定來源參數值。"
  remarks: "參數屬性可讓您的追蹤來源呼叫接聽程式之前的訊息篩選。       參數用來檢查是否應該產生或忽略追蹤呼叫。 每一種追蹤方法呼叫<xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A>方法<xref:System.Diagnostics.SourceSwitch>來判斷是否要繼續進行追蹤。</xref:System.Diagnostics.SourceSwitch> </xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> 如果呼叫傳回`true`，會呼叫接聽程式。"
  syntax:
    content: public System.Diagnostics.SourceSwitch Switch { get; set; }
    return:
      type: System.Diagnostics.SourceSwitch
      description: "A <xref href=&quot;System.Diagnostics.SourceSwitch&quot;> </xref>物件，代表來源參數值。"
  overload: System.Diagnostics.TraceSource.Switch*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "參數設定為<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  platform:
  - net462
- uid: System.Diagnostics.TraceSource.TraceData(System.Diagnostics.TraceEventType,System.Int32,System.Object)
  id: TraceData(System.Diagnostics.TraceEventType,System.Int32,System.Object)
  parent: System.Diagnostics.TraceSource
  langs:
  - csharp
  name: TraceData(TraceEventType,Int32,Object)
  nameWithType: TraceSource.TraceData(TraceEventType,Int32,Object)
  fullName: System.Diagnostics.TraceSource.TraceData(TraceEventType,Int32,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "將追蹤資料中的追蹤接聽項寫入<xref:System.Diagnostics.TraceSource.Listeners*>使用指定的事件類型、 事件識別項和追蹤資料的集合。</xref:System.Diagnostics.TraceSource.Listeners*>"
  remarks: "TraceData 方法、 like<xref:System.Diagnostics.TraceSource.TraceEvent%2A>方法，適用於自動化的工具，但它也可讓附加其他物件，例如例外狀況執行個體，來追蹤。</xref:System.Diagnostics.TraceSource.TraceEvent%2A>       TraceData 方法呼叫<xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A?displayProperty=fullName>方法<xref:System.Diagnostics.SourceSwitch>所傳回物件<xref:System.Diagnostics.TraceSource.Switch%2A>屬性。</xref:System.Diagnostics.TraceSource.Switch%2A> </xref:System.Diagnostics.SourceSwitch> </xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A?displayProperty=fullName> 如果<xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A>傳回`true`，TraceData 呼叫對應<xref:System.Diagnostics.TraceListener.TraceData%2A>方法上的所有接聽程式。</xref:System.Diagnostics.TraceListener.TraceData%2A> </xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> 否則，TraceData 傳回而不需要呼叫接聽程式的方法。      > [!NOTE] ><xref:System.Diagnostics.EventLogTraceListener>物件是限制最多`id`值為 65535。</xref:System.Diagnostics.EventLogTraceListener> 如果`id`指定的值大於 65,535，<xref:System.Diagnostics.EventLogTraceListener>物件會使用 65,535。</xref:System.Diagnostics.EventLogTraceListener>"
  example:
  - "The following code example shows the use of the TraceData method to filter and forward a trace message to the listeners. This code example is part of a larger example provided for the <xref:System.Diagnostics.TraceSource> class.  \n  \n [!code-cs[System.Diagnostics.TraceSource2#28](~/add/codesnippet/csharp/65c1aeb6-b0df-4e32-8afc-_1.cs)]\n [!code-vb[System.Diagnostics.TraceSource2#28](~/add/codesnippet/visualbasic/65c1aeb6-b0df-4e32-8afc-_1.vb)]"
  syntax:
    content: public void TraceData (System.Diagnostics.TraceEventType eventType, int id, object data);
    parameters:
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: "其中一個列舉值，指定追蹤資料的事件類型。"
    - id: id
      type: System.Int32
      description: "事件的數值識別項。"
    - id: data
      type: System.Object
      description: "追蹤資料。"
  overload: System.Diagnostics.TraceSource.TraceData*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "您嘗試在最終處理期間追蹤事件。"
  platform:
  - net462
- uid: System.Diagnostics.TraceSource.TraceData(System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  id: TraceData(System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  parent: System.Diagnostics.TraceSource
  langs:
  - csharp
  name: TraceData(TraceEventType,Int32,Object[])
  nameWithType: TraceSource.TraceData(TraceEventType,Int32,Object[])
  fullName: System.Diagnostics.TraceSource.TraceData(TraceEventType,Int32,Object[])
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "將追蹤資料中的追蹤接聽項寫入<xref:System.Diagnostics.TraceSource.Listeners*>集合，使用指定的事件類型、 事件識別項和追蹤資料陣列。</xref:System.Diagnostics.TraceSource.Listeners*>"
  remarks: "TraceData 方法、 like<xref:System.Diagnostics.TraceSource.TraceEvent%2A>方法，適用於自動化的工具，但它也可讓附加其他物件，例如例外狀況執行個體和堆疊追蹤，追蹤。</xref:System.Diagnostics.TraceSource.TraceEvent%2A>       TraceData 方法呼叫<xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A>方法<xref:System.Diagnostics.SourceSwitch>所傳回物件<xref:System.Diagnostics.TraceSource.Switch%2A>屬性。</xref:System.Diagnostics.TraceSource.Switch%2A> </xref:System.Diagnostics.SourceSwitch> </xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> 如果<xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A>傳回`true`，TraceData 呼叫對應<xref:System.Diagnostics.TraceListener.TraceData%2A>方法上的所有接聽程式。</xref:System.Diagnostics.TraceListener.TraceData%2A> </xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> 否則，TraceData 傳回而不需要呼叫接聽程式的方法。      > [!NOTE] ><xref:System.Diagnostics.EventLogTraceListener>物件是限制最多`id`值為 65535。</xref:System.Diagnostics.EventLogTraceListener> 如果`id`指定的值大於 65,535，<xref:System.Diagnostics.EventLogTraceListener>物件會使用 65,535。</xref:System.Diagnostics.EventLogTraceListener>"
  syntax:
    content: public void TraceData (System.Diagnostics.TraceEventType eventType, int id, object[] data);
    parameters:
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: "其中一個列舉值，指定追蹤資料的事件類型。"
    - id: id
      type: System.Int32
      description: "事件的數值識別項。"
    - id: data
      type: System.Object[]
      description: "物件陣列，包含追蹤資料。"
  overload: System.Diagnostics.TraceSource.TraceData*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "您嘗試在最終處理期間追蹤事件。"
  platform:
  - net462
- uid: System.Diagnostics.TraceSource.TraceEvent(System.Diagnostics.TraceEventType,System.Int32)
  id: TraceEvent(System.Diagnostics.TraceEventType,System.Int32)
  parent: System.Diagnostics.TraceSource
  langs:
  - csharp
  name: TraceEvent(TraceEventType,Int32)
  nameWithType: TraceSource.TraceEvent(TraceEventType,Int32)
  fullName: System.Diagnostics.TraceSource.TraceEvent(TraceEventType,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "將追蹤事件訊息中的追蹤接聽項<xref:System.Diagnostics.TraceSource.Listeners*>使用指定的事件類型和事件識別項的集合。</xref:System.Diagnostics.TraceSource.Listeners*>"
  remarks: "TraceEvent 方法旨在工具可以自動處理的追蹤事件。 例如，如果特定的事件由特定的來源追蹤監視工具可以通知系統管理員。       TraceEvent 方法呼叫<xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A>方法<xref:System.Diagnostics.SourceSwitch>所傳回物件<xref:System.Diagnostics.TraceSource.Switch%2A>屬性。</xref:System.Diagnostics.TraceSource.Switch%2A> </xref:System.Diagnostics.SourceSwitch> </xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> 如果<xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A>傳回`true`，TraceEvent 呼叫對應<xref:System.Diagnostics.TraceListener.TraceEvent%2A>方法的每個接聽程式。</xref:System.Diagnostics.TraceListener.TraceEvent%2A> </xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> 否則，TraceEvent 傳回而不需要呼叫接聽程式的方法。       追蹤內容是特定的接聽程式。 如果接聽程式實作不會覆寫此方法，預設輸出會是追蹤來源、 其數字的識別和事件類型的名稱。  其他追蹤內容所依存的接聽程式<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>屬性值。</xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>      > [!NOTE] ><xref:System.Diagnostics.EventLogTraceListener>物件是限制最多`id`值為 65535。</xref:System.Diagnostics.EventLogTraceListener> 如果`id`指定的值大於 65,535，<xref:System.Diagnostics.EventLogTraceListener>使用 65,535。</xref:System.Diagnostics.EventLogTraceListener>"
  example:
  - "The following code example shows the use of the TraceEvent method to pass a trace event to the listeners. This code example is part of a larger example provided for the <xref:System.Diagnostics.TraceSource> class.  \n  \n [!code-cs[System.Diagnostics.TraceSource2#17](~/add/codesnippet/csharp/b6759a68-e7ea-4d5d-941c-_1.cs)]\n [!code-vb[System.Diagnostics.TraceSource2#17](~/add/codesnippet/visualbasic/b6759a68-e7ea-4d5d-941c-_1.vb)]"
  syntax:
    content: public void TraceEvent (System.Diagnostics.TraceEventType eventType, int id);
    parameters:
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: "其中一個列舉值，指定追蹤資料的事件類型。"
    - id: id
      type: System.Int32
      description: "事件的數值識別項。"
  overload: System.Diagnostics.TraceSource.TraceEvent*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "您嘗試在最終處理期間追蹤事件。"
  platform:
  - net462
- uid: System.Diagnostics.TraceSource.TraceEvent(System.Diagnostics.TraceEventType,System.Int32,System.String)
  id: TraceEvent(System.Diagnostics.TraceEventType,System.Int32,System.String)
  parent: System.Diagnostics.TraceSource
  langs:
  - csharp
  name: TraceEvent(TraceEventType,Int32,String)
  nameWithType: TraceSource.TraceEvent(TraceEventType,Int32,String)
  fullName: System.Diagnostics.TraceSource.TraceEvent(TraceEventType,Int32,String)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "將追蹤事件訊息中的追蹤接聽項<xref:System.Diagnostics.TraceSource.Listeners*>使用指定的事件類型、 事件識別項和訊息的集合。</xref:System.Diagnostics.TraceSource.Listeners*>"
  remarks: "TraceEvent 方法旨在工具可以自動處理的追蹤事件。 例如，如果特定的事件由特定的來源追蹤監視工具可以通知系統管理員。       TraceEvent 方法呼叫<xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A>方法<xref:System.Diagnostics.SourceSwitch>所傳回物件<xref:System.Diagnostics.TraceSource.Switch%2A>屬性。</xref:System.Diagnostics.TraceSource.Switch%2A> </xref:System.Diagnostics.SourceSwitch> </xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> 如果<xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A>傳回`true`，TraceEvent 呼叫對應<xref:System.Diagnostics.TraceListener.TraceEvent%2A>方法的每個接聽程式。</xref:System.Diagnostics.TraceListener.TraceEvent%2A> </xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> 否則，TraceEvent 傳回而不需要呼叫接聽程式的方法。       追蹤內容是特定的接聽程式。 如果接聽程式實作不會覆寫此方法，預設輸出是追蹤來源、 其數字識別、 事件型別和訊息的名稱。  其他追蹤內容所依存的接聽程式<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>屬性值。</xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>      > [!NOTE] ><xref:System.Diagnostics.EventLogTraceListener>物件是限制最多`id`值為 65535。</xref:System.Diagnostics.EventLogTraceListener> 如果`id`指定的值大於 65,535，<xref:System.Diagnostics.EventLogTraceListener>物件會使用 65,535。</xref:System.Diagnostics.EventLogTraceListener>"
  example:
  - "The following code example shows the use of the <xref:System.Diagnostics.TraceSource.TraceEvent%28System.Diagnostics.TraceEventType%2CSystem.Int32%29> method to pass a trace event to the listeners. This code example is part of a larger example provided for the <xref:System.Diagnostics.TraceSource> class.  \n  \n [!code-cs[System.Diagnostics.TraceSource2#18](~/add/codesnippet/csharp/8dfa18b2-1bd6-4ef8-88ea-_1.cs)]\n [!code-vb[System.Diagnostics.TraceSource2#18](~/add/codesnippet/visualbasic/8dfa18b2-1bd6-4ef8-88ea-_1.vb)]"
  syntax:
    content: public void TraceEvent (System.Diagnostics.TraceEventType eventType, int id, string message);
    parameters:
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: "其中一個列舉值，指定追蹤資料的事件類型。"
    - id: id
      type: System.Int32
      description: "事件的數值識別項。"
    - id: message
      type: System.String
      description: "要寫入的追蹤訊息。"
  overload: System.Diagnostics.TraceSource.TraceEvent*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "您嘗試在最終處理期間追蹤事件。"
  platform:
  - net462
- uid: System.Diagnostics.TraceSource.TraceEvent(System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  id: TraceEvent(System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  parent: System.Diagnostics.TraceSource
  langs:
  - csharp
  name: TraceEvent(TraceEventType,Int32,String,Object[])
  nameWithType: TraceSource.TraceEvent(TraceEventType,Int32,String,Object[])
  fullName: System.Diagnostics.TraceSource.TraceEvent(TraceEventType,Int32,String,Object[])
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "寫入追蹤事件中的追蹤接聽項<xref:System.Diagnostics.TraceSource.Listeners*>使用指定的事件類型、 事件識別項和引數陣列與格式的集合。</xref:System.Diagnostics.TraceSource.Listeners*>"
  remarks: "For more information about the `format` parameter, see [Composite Formatting](~/add/includes/ajax-current-ext-md.md).  \n  \n The TraceEvent method is intended to trace events that can be processed automatically by tools. For example, a monitoring tool can notify an administrator if a specific event is traced by a specific source.  \n  \n The TraceEvent method calls the <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> method of the <xref:System.Diagnostics.SourceSwitch> object returned by the <xref:System.Diagnostics.TraceSource.Switch%2A> property. If <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> returns `true`, TraceEvent calls the corresponding <xref:System.Diagnostics.TraceListener.TraceEvent%2A> method of each listener. Otherwise, TraceEvent returns without calling the listeners' methods.  \n  \n The trace content is listener specific. The default [TraceEvent(TraceEventCache, String, TraceEventType, Int32, String, Object\\[\\])](assetId:///M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])?qualifyHint=False&autoUpgrade=False) method writes the source name, event type, and numeric identity in the trace header, then calls the [String.Format(IFormatProvider, String, Object\\[\\])](assetId:///M:System.String.Format(System.IFormatProvider,System.String,System.Object[])?qualifyHint=True&autoUpgrade=False) method, passing the `format` string and `args` array and using the <xref:System.Globalization.CultureInfo.InvariantCulture?displayProperty=fullName> property to format the string as the message output.  \n  \n> [!NOTE]\n>  The <xref:System.Diagnostics.EventLogTraceListener> object is limited to a maximum `id` value of 65,535. If the `id` value specified is greater than 65,535, the <xref:System.Diagnostics.EventLogTraceListener> object uses 65,535."
  example:
  - "The following code example shows the use of the <xref:System.Diagnostics.TraceSource.TraceEvent%28System.Diagnostics.TraceEventType%2CSystem.Int32%29> method to pass a trace event to the listeners. This code example is part of a larger example provided for the <xref:System.Diagnostics.TraceSource> class.  \n  \n [!code-cs[System.Diagnostics.TraceSource2#24](~/add/codesnippet/csharp/9afa3050-f770-4c89-8f1f-_1.cs)]\n [!code-vb[System.Diagnostics.TraceSource2#24](~/add/codesnippet/visualbasic/9afa3050-f770-4c89-8f1f-_1.vb)]"
  syntax:
    content: public void TraceEvent (System.Diagnostics.TraceEventType eventType, int id, string format, object[] args);
    parameters:
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: "其中一個列舉值，指定追蹤資料的事件類型。"
    - id: id
      type: System.Int32
      description: "事件的數值識別項。"
    - id: format
      type: System.String
      description: "複合格式字串 （請參閱 < 備註 >），其中包含文字混合零或多個格式項目，其對應至物件中`args`陣列。"
    - id: args
      type: System.Object[]
      description: "<xref uid=&quot;langword_csharp_object&quot; name=&quot;object&quot; href=&quot;&quot;> </xref>陣列，其中包含零或多個要格式化的物件。"
  overload: System.Diagnostics.TraceSource.TraceEvent*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>format</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "<code>format</code>不正確。       -或者-數字，指出格式化的引數小於零，或大於或等於數目指定要格式化的物件。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "您嘗試在最終處理期間追蹤事件。"
  platform:
  - net462
- uid: System.Diagnostics.TraceSource.TraceInformation(System.String)
  id: TraceInformation(System.String)
  parent: System.Diagnostics.TraceSource
  langs:
  - csharp
  name: TraceInformation(String)
  nameWithType: TraceSource.TraceInformation(String)
  fullName: System.Diagnostics.TraceSource.TraceInformation(String)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "將告知性訊息寫入中的追蹤接聽項<xref:System.Diagnostics.TraceSource.Listeners*>集合，使用指定的訊息。</xref:System.Diagnostics.TraceSource.Listeners*>"
  remarks: "TraceInformation 方法提供要讀取的使用者，而不是由工具參考用訊息。       TraceInformation 呼叫<xref:System.Diagnostics.TraceSource.TraceEvent%28System.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%29>方法，設定`eventType`至<xref:System.Diagnostics.TraceEventType?displayProperty=fullName>和訊息字串形式傳遞的資訊訊息。</xref:System.Diagnostics.TraceEventType?displayProperty=fullName> </xref:System.Diagnostics.TraceSource.TraceEvent%28System.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%29> <xref:System.Diagnostics.TraceSource.TraceEvent%28System.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%29>方法會呼叫<xref:System.Diagnostics.TraceListener.TraceEvent%28System.Diagnostics.TraceEventCache%2CSystem.String%2CSystem.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%29>方法的每個追蹤接聽程式。</xref:System.Diagnostics.TraceListener.TraceEvent%28System.Diagnostics.TraceEventCache%2CSystem.String%2CSystem.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%29> </xref:System.Diagnostics.TraceSource.TraceEvent%28System.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%29>"
  syntax:
    content: public void TraceInformation (string message);
    parameters:
    - id: message
      type: System.String
      description: "要寫入資訊的訊息。"
  overload: System.Diagnostics.TraceSource.TraceInformation*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "您嘗試在最終處理期間追蹤事件。"
  platform:
  - net462
- uid: System.Diagnostics.TraceSource.TraceInformation(System.String,System.Object[])
  id: TraceInformation(System.String,System.Object[])
  parent: System.Diagnostics.TraceSource
  langs:
  - csharp
  name: TraceInformation(String,Object[])
  nameWithType: TraceSource.TraceInformation(String,Object[])
  fullName: System.Diagnostics.TraceSource.TraceInformation(String,Object[])
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "將告知性訊息寫入中的追蹤接聽項<xref:System.Diagnostics.TraceSource.Listeners*>使用指定的物件陣列和格式化資訊的集合。</xref:System.Diagnostics.TraceSource.Listeners*>"
  remarks: "For more information about the `format` parameter, see [Composite Formatting](~/add/includes/ajax-current-ext-md.md).  \n  \n The TraceInformation method provides an informational message intended to be read by users and not by tools.  \n  \n TraceInformation calls the [TraceEvent(TraceEventType, Int32, String, Object\\[\\])](assetId:///M:System.Diagnostics.TraceSource.TraceEvent(System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])?qualifyHint=False&autoUpgrade=False) method, setting `eventType` to <xref:System.Diagnostics.TraceEventType?displayProperty=fullName> and passing the message content as an object array with formatting information. The [TraceEvent(TraceEventType, Int32, String, Object\\[\\])](assetId:///M:System.Diagnostics.TraceSource.TraceEvent(System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])?qualifyHint=False&autoUpgrade=False) method in turn calls the [TraceEvent(TraceEventCache, String, TraceEventType, Int32, String, Object\\[\\])](assetId:///M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])?qualifyHint=False&autoUpgrade=False) method of each trace listener."
  syntax:
    content: public void TraceInformation (string format, object[] args);
    parameters:
    - id: format
      type: System.String
      description: "複合格式字串 （請參閱 < 備註 >），其中包含文字混合零或多個格式項目，其對應至物件中`args`陣列。"
    - id: args
      type: System.Object[]
      description: "包含要格式化的零或多個物件的陣列。"
  overload: System.Diagnostics.TraceSource.TraceInformation*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>format</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "<code>format</code>不正確。       -或者-數字，指出格式化的引數小於零，或大於或等於數目指定要格式化的物件。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "您嘗試在最終處理期間追蹤事件。"
  platform:
  - net462
- uid: System.Diagnostics.TraceSource.TraceTransfer(System.Int32,System.String,System.Guid)
  id: TraceTransfer(System.Int32,System.String,System.Guid)
  parent: System.Diagnostics.TraceSource
  langs:
  - csharp
  name: TraceTransfer(Int32,String,Guid)
  nameWithType: TraceSource.TraceTransfer(Int32,String,Guid)
  fullName: System.Diagnostics.TraceSource.TraceTransfer(Int32,String,Guid)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "將追蹤傳輸訊息中的追蹤接聽項<xref:System.Diagnostics.TraceSource.Listeners*>使用指定的數值識別項、 訊息和相關的活動識別碼的集合。</xref:System.Diagnostics.TraceSource.Listeners*>"
  remarks: "TraceTransfer 方法呼叫<xref:System.Diagnostics.TraceListener.TraceTransfer%2A>方法中的每個追蹤接聽程式<xref:System.Diagnostics.TraceSource.Listeners%2A>屬性來寫入追蹤資訊。</xref:System.Diagnostics.TraceSource.Listeners%2A> </xref:System.Diagnostics.TraceListener.TraceTransfer%2A> 預設值<xref:System.Diagnostics.TraceListener.TraceTransfer%2A>方法的基底中<xref:System.Diagnostics.TraceListener>類別會呼叫<xref:System.Diagnostics.TraceListener.TraceEvent%28System.Diagnostics.TraceEventCache%2CSystem.String%2CSystem.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%29?displayProperty=fullName>方法來處理呼叫，並設定`eventType`至<xref:System.Diagnostics.TraceEventType?displayProperty=fullName>和附加的字串表示法`relatedActivityId`GUID `message`。</xref:System.Diagnostics.TraceEventType?displayProperty=fullName> </xref:System.Diagnostics.TraceListener.TraceEvent%28System.Diagnostics.TraceEventCache%2CSystem.String%2CSystem.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%29?displayProperty=fullName> </xref:System.Diagnostics.TraceListener> </xref:System.Diagnostics.TraceListener.TraceTransfer%2A>       TraceTransfer 被用來搭配<xref:System.Diagnostics.CorrelationManager>.</xref:System.Diagnostics.CorrelationManager>的邏輯作業 `relatedActivityId`參數與相關<xref:System.Diagnostics.CorrelationManager.ActivityId%2A>屬性<xref:System.Diagnostics.CorrelationManager>物件。</xref:System.Diagnostics.CorrelationManager> </xref:System.Diagnostics.CorrelationManager.ActivityId%2A> 如果邏輯作業開始一個活動中，並將傳送至另一個，第二個活動會藉由呼叫 TraceTransfer 方法記錄傳送。 TraceTransfer 呼叫之前的身分識別與新的活動識別。 這項功能的最可能的取用者是追蹤檢視器，它會報告跨越多個活動的邏輯作業。"
  syntax:
    content: public void TraceTransfer (int id, string message, Guid relatedActivityId);
    parameters:
    - id: id
      type: System.Int32
      description: "事件的數值識別項。"
    - id: message
      type: System.String
      description: "要寫入的追蹤訊息。"
    - id: relatedActivityId
      type: System.Guid
      description: "結構識別相關的活動。"
  overload: System.Diagnostics.TraceSource.TraceTransfer*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.FormatException
  isExternal: true
  name: System.FormatException
- uid: System.Diagnostics.TraceSource.#ctor(System.String)
  parent: System.Diagnostics.TraceSource
  isExternal: false
  name: TraceSource(String)
  nameWithType: TraceSource.TraceSource(String)
  fullName: System.Diagnostics.TraceSource.TraceSource(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Diagnostics.TraceSource.#ctor(System.String,System.Diagnostics.SourceLevels)
  parent: System.Diagnostics.TraceSource
  isExternal: false
  name: TraceSource(String,SourceLevels)
  nameWithType: TraceSource.TraceSource(String,SourceLevels)
  fullName: System.Diagnostics.TraceSource.TraceSource(String,SourceLevels)
- uid: System.Diagnostics.SourceLevels
  parent: System.Diagnostics
  isExternal: false
  name: SourceLevels
  nameWithType: SourceLevels
  fullName: System.Diagnostics.SourceLevels
- uid: System.Diagnostics.TraceSource.Attributes
  parent: System.Diagnostics.TraceSource
  isExternal: false
  name: Attributes
  nameWithType: TraceSource.Attributes
  fullName: System.Diagnostics.TraceSource.Attributes
- uid: System.Collections.Specialized.StringDictionary
  parent: System.Collections.Specialized
  isExternal: false
  name: StringDictionary
  nameWithType: StringDictionary
  fullName: System.Collections.Specialized.StringDictionary
- uid: System.Diagnostics.TraceSource.Close
  parent: System.Diagnostics.TraceSource
  isExternal: false
  name: Close()
  nameWithType: TraceSource.Close()
  fullName: System.Diagnostics.TraceSource.Close()
- uid: System.Diagnostics.TraceSource.Flush
  parent: System.Diagnostics.TraceSource
  isExternal: false
  name: Flush()
  nameWithType: TraceSource.Flush()
  fullName: System.Diagnostics.TraceSource.Flush()
- uid: System.Diagnostics.TraceSource.GetSupportedAttributes
  parent: System.Diagnostics.TraceSource
  isExternal: false
  name: GetSupportedAttributes()
  nameWithType: TraceSource.GetSupportedAttributes()
  fullName: System.Diagnostics.TraceSource.GetSupportedAttributes()
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Diagnostics.TraceSource.Listeners
  parent: System.Diagnostics.TraceSource
  isExternal: false
  name: Listeners
  nameWithType: TraceSource.Listeners
  fullName: System.Diagnostics.TraceSource.Listeners
- uid: System.Diagnostics.TraceListenerCollection
  parent: System.Diagnostics
  isExternal: false
  name: TraceListenerCollection
  nameWithType: TraceListenerCollection
  fullName: System.Diagnostics.TraceListenerCollection
- uid: System.Diagnostics.TraceSource.Name
  parent: System.Diagnostics.TraceSource
  isExternal: false
  name: Name
  nameWithType: TraceSource.Name
  fullName: System.Diagnostics.TraceSource.Name
- uid: System.Diagnostics.TraceSource.Switch
  parent: System.Diagnostics.TraceSource
  isExternal: false
  name: Switch
  nameWithType: TraceSource.Switch
  fullName: System.Diagnostics.TraceSource.Switch
- uid: System.Diagnostics.SourceSwitch
  parent: System.Diagnostics
  isExternal: false
  name: SourceSwitch
  nameWithType: SourceSwitch
  fullName: System.Diagnostics.SourceSwitch
- uid: System.Diagnostics.TraceSource.TraceData(System.Diagnostics.TraceEventType,System.Int32,System.Object)
  parent: System.Diagnostics.TraceSource
  isExternal: false
  name: TraceData(TraceEventType,Int32,Object)
  nameWithType: TraceSource.TraceData(TraceEventType,Int32,Object)
  fullName: System.Diagnostics.TraceSource.TraceData(TraceEventType,Int32,Object)
- uid: System.Diagnostics.TraceEventType
  parent: System.Diagnostics
  isExternal: false
  name: TraceEventType
  nameWithType: TraceEventType
  fullName: System.Diagnostics.TraceEventType
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Diagnostics.TraceSource.TraceData(System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  parent: System.Diagnostics.TraceSource
  isExternal: false
  name: TraceData(TraceEventType,Int32,Object[])
  nameWithType: TraceSource.TraceData(TraceEventType,Int32,Object[])
  fullName: System.Diagnostics.TraceSource.TraceData(TraceEventType,Int32,Object[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Diagnostics.TraceSource.TraceEvent(System.Diagnostics.TraceEventType,System.Int32)
  parent: System.Diagnostics.TraceSource
  isExternal: false
  name: TraceEvent(TraceEventType,Int32)
  nameWithType: TraceSource.TraceEvent(TraceEventType,Int32)
  fullName: System.Diagnostics.TraceSource.TraceEvent(TraceEventType,Int32)
- uid: System.Diagnostics.TraceSource.TraceEvent(System.Diagnostics.TraceEventType,System.Int32,System.String)
  parent: System.Diagnostics.TraceSource
  isExternal: false
  name: TraceEvent(TraceEventType,Int32,String)
  nameWithType: TraceSource.TraceEvent(TraceEventType,Int32,String)
  fullName: System.Diagnostics.TraceSource.TraceEvent(TraceEventType,Int32,String)
- uid: System.Diagnostics.TraceSource.TraceEvent(System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  parent: System.Diagnostics.TraceSource
  isExternal: false
  name: TraceEvent(TraceEventType,Int32,String,Object[])
  nameWithType: TraceSource.TraceEvent(TraceEventType,Int32,String,Object[])
  fullName: System.Diagnostics.TraceSource.TraceEvent(TraceEventType,Int32,String,Object[])
- uid: System.Diagnostics.TraceSource.TraceInformation(System.String)
  parent: System.Diagnostics.TraceSource
  isExternal: false
  name: TraceInformation(String)
  nameWithType: TraceSource.TraceInformation(String)
  fullName: System.Diagnostics.TraceSource.TraceInformation(String)
- uid: System.Diagnostics.TraceSource.TraceInformation(System.String,System.Object[])
  parent: System.Diagnostics.TraceSource
  isExternal: false
  name: TraceInformation(String,Object[])
  nameWithType: TraceSource.TraceInformation(String,Object[])
  fullName: System.Diagnostics.TraceSource.TraceInformation(String,Object[])
- uid: System.Diagnostics.TraceSource.TraceTransfer(System.Int32,System.String,System.Guid)
  parent: System.Diagnostics.TraceSource
  isExternal: false
  name: TraceTransfer(Int32,String,Guid)
  nameWithType: TraceSource.TraceTransfer(Int32,String,Guid)
  fullName: System.Diagnostics.TraceSource.TraceTransfer(Int32,String,Guid)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Diagnostics.TraceSource.#ctor*
  parent: System.Diagnostics.TraceSource
  isExternal: false
  name: TraceSource
  nameWithType: TraceSource.TraceSource
- uid: System.Diagnostics.TraceSource.Attributes*
  parent: System.Diagnostics.TraceSource
  isExternal: false
  name: Attributes
  nameWithType: TraceSource.Attributes
- uid: System.Diagnostics.TraceSource.Close*
  parent: System.Diagnostics.TraceSource
  isExternal: false
  name: Close
  nameWithType: TraceSource.Close
- uid: System.Diagnostics.TraceSource.Flush*
  parent: System.Diagnostics.TraceSource
  isExternal: false
  name: Flush
  nameWithType: TraceSource.Flush
- uid: System.Diagnostics.TraceSource.GetSupportedAttributes*
  parent: System.Diagnostics.TraceSource
  isExternal: false
  name: GetSupportedAttributes
  nameWithType: TraceSource.GetSupportedAttributes
- uid: System.Diagnostics.TraceSource.Listeners*
  parent: System.Diagnostics.TraceSource
  isExternal: false
  name: Listeners
  nameWithType: TraceSource.Listeners
- uid: System.Diagnostics.TraceSource.Name*
  parent: System.Diagnostics.TraceSource
  isExternal: false
  name: Name
  nameWithType: TraceSource.Name
- uid: System.Diagnostics.TraceSource.Switch*
  parent: System.Diagnostics.TraceSource
  isExternal: false
  name: Switch
  nameWithType: TraceSource.Switch
- uid: System.Diagnostics.TraceSource.TraceData*
  parent: System.Diagnostics.TraceSource
  isExternal: false
  name: TraceData
  nameWithType: TraceSource.TraceData
- uid: System.Diagnostics.TraceSource.TraceEvent*
  parent: System.Diagnostics.TraceSource
  isExternal: false
  name: TraceEvent
  nameWithType: TraceSource.TraceEvent
- uid: System.Diagnostics.TraceSource.TraceInformation*
  parent: System.Diagnostics.TraceSource
  isExternal: false
  name: TraceInformation
  nameWithType: TraceSource.TraceInformation
- uid: System.Diagnostics.TraceSource.TraceTransfer*
  parent: System.Diagnostics.TraceSource
  isExternal: false
  name: TraceTransfer
  nameWithType: TraceSource.TraceTransfer
