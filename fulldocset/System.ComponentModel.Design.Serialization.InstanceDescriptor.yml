### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Design.Serialization.InstanceDescriptor
  id: InstanceDescriptor
  children:
  - System.ComponentModel.Design.Serialization.InstanceDescriptor.#ctor(System.Reflection.MemberInfo,System.Collections.ICollection)
  - System.ComponentModel.Design.Serialization.InstanceDescriptor.#ctor(System.Reflection.MemberInfo,System.Collections.ICollection,System.Boolean)
  - System.ComponentModel.Design.Serialization.InstanceDescriptor.Arguments
  - System.ComponentModel.Design.Serialization.InstanceDescriptor.Invoke
  - System.ComponentModel.Design.Serialization.InstanceDescriptor.IsComplete
  - System.ComponentModel.Design.Serialization.InstanceDescriptor.MemberInfo
  langs:
  - csharp
  name: InstanceDescriptor
  nameWithType: InstanceDescriptor
  fullName: System.ComponentModel.Design.Serialization.InstanceDescriptor
  type: Class
  summary: "提供建立物件的執行個體所需的資訊。 這個類別無法被繼承。"
  remarks: "InstanceDescriptor 可以儲存說明的物件執行個體的資訊。 這項資訊可以用來建立物件的執行個體。       某些自訂序列化程式會使用 InstanceDescriptor 來代表可序列化的物件。 幾個方法來<xref:System.ComponentModel.TypeDescriptor>InstanceDescriptor 用於代表或具現化物件。</xref:System.ComponentModel.TypeDescriptor>       InstanceDescriptor 提供下列成員:-<xref:System.ComponentModel.Design.Serialization.InstanceDescriptor.MemberInfo%2A>描述此物件的屬性。</xref:System.ComponentModel.Design.Serialization.InstanceDescriptor.MemberInfo%2A>      -<xref:System.ComponentModel.Design.Serialization.InstanceDescriptor.Arguments%2A>包含可用來具現化此物件的建構函式引數的屬性。</xref:System.ComponentModel.Design.Serialization.InstanceDescriptor.Arguments%2A>      -布林值<xref:System.ComponentModel.Design.Serialization.InstanceDescriptor.IsComplete%2A>屬性，指出是否由目前的資訊完全表示的物件。</xref:System.ComponentModel.Design.Serialization.InstanceDescriptor.IsComplete%2A>      -<xref:System.ComponentModel.Design.Serialization.InstanceDescriptor.Invoke%2A>可以用來建立代表物件的執行個體的方法。</xref:System.ComponentModel.Design.Serialization.InstanceDescriptor.Invoke%2A>"
  example:
  - "The following code example illustrates how to use a type converter that participates in code generation through the use of instance descriptors.  \n  \n [!code-cpp[InstanceDescriptorSample#1](~/add/codesnippet/cpp/t-system.componentmodel._121_1.cpp)]\n [!code-vb[InstanceDescriptorSample#1](~/add/codesnippet/visualbasic/t-system.componentmodel._121_1.vb)]\n [!code-cs[InstanceDescriptorSample#1](~/add/codesnippet/csharp/t-system.componentmodel._121_1.cs)]"
  syntax:
    content: public sealed class InstanceDescriptor
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.InstanceDescriptor.#ctor(System.Reflection.MemberInfo,System.Collections.ICollection)
  id: '#ctor(System.Reflection.MemberInfo,System.Collections.ICollection)'
  parent: System.ComponentModel.Design.Serialization.InstanceDescriptor
  langs:
  - csharp
  name: InstanceDescriptor(MemberInfo,ICollection)
  nameWithType: InstanceDescriptor.InstanceDescriptor(MemberInfo,ICollection)
  fullName: System.ComponentModel.Design.Serialization.InstanceDescriptor.InstanceDescriptor(MemberInfo,ICollection)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "初始化的新執行個體<xref href=&quot;System.ComponentModel.Design.Serialization.InstanceDescriptor&quot;></xref>類別使用指定的成員資訊和引數。"
  syntax:
    content: public InstanceDescriptor (System.Reflection.MemberInfo member, System.Collections.ICollection arguments);
    parameters:
    - id: member
      type: System.Reflection.MemberInfo
      description: "描述元成員資訊。 This can be a <xref:System.Reflection.MethodInfo>, <xref:System.Reflection.ConstructorInfo>, <xref:System.Reflection.FieldInfo>, or <xref:System.Reflection.PropertyInfo>.</xref:System.Reflection.PropertyInfo></xref:System.Reflection.FieldInfo></xref:System.Reflection.ConstructorInfo></xref:System.Reflection.MethodInfo> 如果這是<xref:System.Reflection.MethodInfo>， <xref:System.Reflection.FieldInfo>，或<xref:System.Reflection.PropertyInfo>，它必須代表<xref uid=&quot;langword_csharp_static&quot; name=&quot;static&quot; href=&quot;&quot;></xref>成員。</xref:System.Reflection.PropertyInfo> </xref:System.Reflection.FieldInfo> </xref:System.Reflection.MethodInfo>"
    - id: arguments
      type: System.Collections.ICollection
      description: "引數傳遞給成員的集合。 這個參數可以是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>或空的集合是否有任何引數。 集合也可以包含其他執行個體的<xref href=&quot;System.ComponentModel.Design.Serialization.InstanceDescriptor&quot;> </xref>。"
  overload: System.ComponentModel.Design.Serialization.InstanceDescriptor.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>member</code>型別<xref:System.Reflection.MethodInfo>， <xref:System.Reflection.FieldInfo>，或<xref:System.Reflection.PropertyInfo>，而且不代表<xref uid=&quot;langword_csharp_static&quot; name=&quot;static&quot; href=&quot;&quot;></xref>成員。       <code>member</code>型別<xref:System.Reflection.PropertyInfo>而且不是可讀取。       <code>member</code>型別<xref:System.Reflection.MethodInfo>或<xref:System.Reflection.ConstructorInfo>，以及中的引數數目<code>arguments</code>不相符的簽章<code>member.</code><code>member</code>的型別<xref:System.Reflection.ConstructorInfo>代表<xref uid=&quot;langword_csharp_static&quot; name=&quot;static&quot; href=&quot;&quot;></xref>成員。       <code>member</code>型別<xref:System.Reflection.FieldInfo>，以及引數在數目<code>arguments</code>不是零。"
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.InstanceDescriptor.#ctor(System.Reflection.MemberInfo,System.Collections.ICollection,System.Boolean)
  id: '#ctor(System.Reflection.MemberInfo,System.Collections.ICollection,System.Boolean)'
  parent: System.ComponentModel.Design.Serialization.InstanceDescriptor
  langs:
  - csharp
  name: InstanceDescriptor(MemberInfo,ICollection,Boolean)
  nameWithType: InstanceDescriptor.InstanceDescriptor(MemberInfo,ICollection,Boolean)
  fullName: System.ComponentModel.Design.Serialization.InstanceDescriptor.InstanceDescriptor(MemberInfo,ICollection,Boolean)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "初始化的新執行個體<xref href=&quot;System.ComponentModel.Design.Serialization.InstanceDescriptor&quot;></xref>類別使用指定的成員資訊、 引數和值，指出是否指定的資訊完全描述執行個體。"
  syntax:
    content: public InstanceDescriptor (System.Reflection.MemberInfo member, System.Collections.ICollection arguments, bool isComplete);
    parameters:
    - id: member
      type: System.Reflection.MemberInfo
      description: "描述元成員資訊。 This can be a <xref:System.Reflection.MethodInfo>, <xref:System.Reflection.ConstructorInfo>, <xref:System.Reflection.FieldInfo>, or <xref:System.Reflection.PropertyInfo>.</xref:System.Reflection.PropertyInfo></xref:System.Reflection.FieldInfo></xref:System.Reflection.ConstructorInfo></xref:System.Reflection.MethodInfo> 如果這是<xref:System.Reflection.MethodInfo>， <xref:System.Reflection.FieldInfo>，或<xref:System.Reflection.PropertyInfo>，它必須代表<xref uid=&quot;langword_csharp_static&quot; name=&quot;static&quot; href=&quot;&quot;></xref>成員。</xref:System.Reflection.PropertyInfo> </xref:System.Reflection.FieldInfo> </xref:System.Reflection.MethodInfo>"
    - id: arguments
      type: System.Collections.ICollection
      description: "引數傳遞給成員的集合。 這個參數可以是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>或空的集合是否有任何引數。 集合也可以包含其他執行個體的<xref href=&quot;System.ComponentModel.Design.Serialization.InstanceDescriptor&quot;> </xref>。"
    - id: isComplete
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果指定的資訊，完整描述執行個體。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.Design.Serialization.InstanceDescriptor.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>member</code>型別<xref:System.Reflection.MethodInfo>， <xref:System.Reflection.FieldInfo>，或<xref:System.Reflection.PropertyInfo>，而且不代表<xref uid=&quot;langword_csharp_static&quot; name=&quot;static&quot; href=&quot;&quot;></xref>成員<code>member</code>的型別<xref:System.Reflection.PropertyInfo>而且不是可讀取。       <code>member</code>型別<xref:System.Reflection.MethodInfo>或<xref:System.Reflection.ConstructorInfo>和中的引數數目<code>arguments</code>不相符的簽章<code>member</code>。       <code>member</code>型別<xref:System.Reflection.ConstructorInfo>代表<xref uid=&quot;langword_csharp_static&quot; name=&quot;static&quot; href=&quot;&quot;></xref>成員<code>member</code>的型別<xref:System.Reflection.FieldInfo>，以及中的引數數目<code>arguments</code>不是零。"
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.InstanceDescriptor.Arguments
  id: Arguments
  parent: System.ComponentModel.Design.Serialization.InstanceDescriptor
  langs:
  - csharp
  name: Arguments
  nameWithType: InstanceDescriptor.Arguments
  fullName: System.ComponentModel.Design.Serialization.InstanceDescriptor.Arguments
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "取得可用來重新建構物件，表示這個執行個體描述元的執行個體的引數的集合。"
  syntax:
    content: public System.Collections.ICollection Arguments { get; }
    return:
      type: System.Collections.ICollection
      description: "<xref:System.Collections.ICollection>可以用來建立物件的引數。</xref:System.Collections.ICollection>"
  overload: System.ComponentModel.Design.Serialization.InstanceDescriptor.Arguments*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.InstanceDescriptor.Invoke
  id: Invoke
  parent: System.ComponentModel.Design.Serialization.InstanceDescriptor
  langs:
  - csharp
  name: Invoke()
  nameWithType: InstanceDescriptor.Invoke()
  fullName: System.ComponentModel.Design.Serialization.InstanceDescriptor.Invoke()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "叫用此執行個體描述元，並傳回所描述的物件描述元。"
  remarks: "這個方法會建立所指定之物件的新執行個體<xref:System.ComponentModel.Design.Serialization.InstanceDescriptor.MemberInfo%2A>屬性，來建立該特定類型的執行個體使用指定的引數。</xref:System.ComponentModel.Design.Serialization.InstanceDescriptor.MemberInfo%2A>"
  syntax:
    content: public object Invoke ();
    parameters: []
    return:
      type: System.Object
      description: "這個執行個體描述項所描述的物件。"
  overload: System.ComponentModel.Design.Serialization.InstanceDescriptor.Invoke*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.InstanceDescriptor.IsComplete
  id: IsComplete
  parent: System.ComponentModel.Design.Serialization.InstanceDescriptor
  langs:
  - csharp
  name: IsComplete
  nameWithType: InstanceDescriptor.IsComplete
  fullName: System.ComponentModel.Design.Serialization.InstanceDescriptor.IsComplete
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "取得值，指出是否此內容<xref href=&quot;System.ComponentModel.Design.Serialization.InstanceDescriptor&quot;></xref>完全識別執行個體。"
  remarks: "一般而言，<xref:System.ComponentModel.Design.Serialization.InstanceDescriptor>完整地描述特定的執行個體。</xref:System.ComponentModel.Design.Serialization.InstanceDescriptor> 不過，某些物件會對單一方法或建構函式來代表太過複雜。 IsComplete 指出是否<xref:System.ComponentModel.Design.Serialization.InstanceDescriptor>不完整，讓使用者可以識別出這些物件，並視需要執行其他處理序，來進一步描述其狀態。</xref:System.ComponentModel.Design.Serialization.InstanceDescriptor>"
  syntax:
    content: public bool IsComplete { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果完整描述執行個體。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.Design.Serialization.InstanceDescriptor.IsComplete*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.InstanceDescriptor.MemberInfo
  id: MemberInfo
  parent: System.ComponentModel.Design.Serialization.InstanceDescriptor
  langs:
  - csharp
  name: MemberInfo
  nameWithType: InstanceDescriptor.MemberInfo
  fullName: System.ComponentModel.Design.Serialization.InstanceDescriptor.MemberInfo
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "取得描述此描述元相關聯的執行個體的成員資訊。"
  remarks: "這個屬性的值可以是<xref:System.Reflection.MethodInfo>， <xref:System.Reflection.ConstructorInfo>， <xref:System.Reflection.FieldInfo>，或<xref:System.Reflection.PropertyInfo>.</xref:System.Reflection.PropertyInfo> </xref:System.Reflection.FieldInfo> </xref:System.Reflection.ConstructorInfo> </xref:System.Reflection.MethodInfo>"
  syntax:
    content: public System.Reflection.MemberInfo MemberInfo { get; }
    return:
      type: System.Reflection.MemberInfo
      description: "A<xref:System.Reflection.MemberInfo>可描述此物件相關聯的執行個體。</xref:System.Reflection.MemberInfo>"
  overload: System.ComponentModel.Design.Serialization.InstanceDescriptor.MemberInfo*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ComponentModel.Design.Serialization.InstanceDescriptor.#ctor(System.Reflection.MemberInfo,System.Collections.ICollection)
  parent: System.ComponentModel.Design.Serialization.InstanceDescriptor
  isExternal: false
  name: InstanceDescriptor(MemberInfo,ICollection)
  nameWithType: InstanceDescriptor.InstanceDescriptor(MemberInfo,ICollection)
  fullName: System.ComponentModel.Design.Serialization.InstanceDescriptor.InstanceDescriptor(MemberInfo,ICollection)
- uid: System.Reflection.MemberInfo
  parent: System.Reflection
  isExternal: true
  name: MemberInfo
  nameWithType: MemberInfo
  fullName: System.Reflection.MemberInfo
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.ComponentModel.Design.Serialization.InstanceDescriptor.#ctor(System.Reflection.MemberInfo,System.Collections.ICollection,System.Boolean)
  parent: System.ComponentModel.Design.Serialization.InstanceDescriptor
  isExternal: false
  name: InstanceDescriptor(MemberInfo,ICollection,Boolean)
  nameWithType: InstanceDescriptor.InstanceDescriptor(MemberInfo,ICollection,Boolean)
  fullName: System.ComponentModel.Design.Serialization.InstanceDescriptor.InstanceDescriptor(MemberInfo,ICollection,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.Design.Serialization.InstanceDescriptor.Arguments
  parent: System.ComponentModel.Design.Serialization.InstanceDescriptor
  isExternal: false
  name: Arguments
  nameWithType: InstanceDescriptor.Arguments
  fullName: System.ComponentModel.Design.Serialization.InstanceDescriptor.Arguments
- uid: System.ComponentModel.Design.Serialization.InstanceDescriptor.Invoke
  parent: System.ComponentModel.Design.Serialization.InstanceDescriptor
  isExternal: false
  name: Invoke()
  nameWithType: InstanceDescriptor.Invoke()
  fullName: System.ComponentModel.Design.Serialization.InstanceDescriptor.Invoke()
- uid: System.ComponentModel.Design.Serialization.InstanceDescriptor.IsComplete
  parent: System.ComponentModel.Design.Serialization.InstanceDescriptor
  isExternal: false
  name: IsComplete
  nameWithType: InstanceDescriptor.IsComplete
  fullName: System.ComponentModel.Design.Serialization.InstanceDescriptor.IsComplete
- uid: System.ComponentModel.Design.Serialization.InstanceDescriptor.MemberInfo
  parent: System.ComponentModel.Design.Serialization.InstanceDescriptor
  isExternal: false
  name: MemberInfo
  nameWithType: InstanceDescriptor.MemberInfo
  fullName: System.ComponentModel.Design.Serialization.InstanceDescriptor.MemberInfo
- uid: System.ComponentModel.Design.Serialization.InstanceDescriptor.#ctor*
  parent: System.ComponentModel.Design.Serialization.InstanceDescriptor
  isExternal: false
  name: InstanceDescriptor
  nameWithType: InstanceDescriptor.InstanceDescriptor
- uid: System.ComponentModel.Design.Serialization.InstanceDescriptor.Arguments*
  parent: System.ComponentModel.Design.Serialization.InstanceDescriptor
  isExternal: false
  name: Arguments
  nameWithType: InstanceDescriptor.Arguments
- uid: System.ComponentModel.Design.Serialization.InstanceDescriptor.Invoke*
  parent: System.ComponentModel.Design.Serialization.InstanceDescriptor
  isExternal: false
  name: Invoke
  nameWithType: InstanceDescriptor.Invoke
- uid: System.ComponentModel.Design.Serialization.InstanceDescriptor.IsComplete*
  parent: System.ComponentModel.Design.Serialization.InstanceDescriptor
  isExternal: false
  name: IsComplete
  nameWithType: InstanceDescriptor.IsComplete
- uid: System.ComponentModel.Design.Serialization.InstanceDescriptor.MemberInfo*
  parent: System.ComponentModel.Design.Serialization.InstanceDescriptor
  isExternal: false
  name: MemberInfo
  nameWithType: InstanceDescriptor.MemberInfo
