### YamlMime:ManagedReference
items:
- uid: System.Web.UI.DataBinder
  id: DataBinder
  children:
  - System.Web.UI.DataBinder.#ctor
  - System.Web.UI.DataBinder.EnableCaching
  - System.Web.UI.DataBinder.Eval(System.Object,System.String)
  - System.Web.UI.DataBinder.Eval(System.Object,System.String,System.String)
  - System.Web.UI.DataBinder.GetDataItem(System.Object)
  - System.Web.UI.DataBinder.GetDataItem(System.Object,System.Boolean@)
  - System.Web.UI.DataBinder.GetIndexedPropertyValue(System.Object,System.String)
  - System.Web.UI.DataBinder.GetIndexedPropertyValue(System.Object,System.String,System.String)
  - System.Web.UI.DataBinder.GetPropertyValue(System.Object,System.String)
  - System.Web.UI.DataBinder.GetPropertyValue(System.Object,System.String,System.String)
  - System.Web.UI.DataBinder.IsBindableType(System.Type)
  langs:
  - csharp
  name: DataBinder
  nameWithType: DataBinder
  fullName: System.Web.UI.DataBinder
  type: Class
  summary: "提供快速應用程式開發 (RAD) 設計工具來產生及剖析資料繫結運算式的語法支援。 這個類別無法被繼承。"
  remarks: "您可以使用多載的靜態<xref:System.Web.UI.DataBinder.Eval%2A>ASP.NET 網頁中的資料繫結語法中的這個類別的方法。</xref:System.Web.UI.DataBinder.Eval%2A> 這會提供比標準的資料繫結使用的簡單語法。 不過，因為`DataBinder.Eval`提供自動類型轉換可能會導致效能變慢。       如需有關 ASP.NET 資料繫結、 運算式和語法的詳細資訊，請參閱[繫結至資料庫](http://msdn.microsoft.com/en-us/ab7b2846-975b-4057-a948-45527497c742)和[資料繫結運算式概觀](~/add/includes/ajax-current-ext-md.md)。       從.NET Framework 4.5 開始，您可以使用模型繫結來簡化一些您必須透過資料繫結，在舊版本中執行的工作。 在模型繫結中使用 Web Form 的教學課程系列，請參閱[模型繫結和 Web Form](http://go.microsoft.com/fwlink/?LinkId=286117)。"
  example:
  - "The following example uses the static <xref:System.Web.UI.DataBinder.GetPropertyValue%2A> method to populate the fields of a <xref:System.Web.UI.WebControls.Repeater> control using an <xref:System.Collections.ArrayList> of `Product` objects. The <xref:System.Web.UI.DataBinder.Eval%2A> method could be applied with the same syntax, but it would not perform as quickly.  \n  \n This example uses a custom `Product` class which exposes a string `Model` property and a numeric `UnitPrice` property.  \n  \n [!code-vb[System.Web.UI.DataBinder#1](~/add/codesnippet/visualbasic/t-system.web.ui.databinder_1.aspx)]\n [!code-cs[System.Web.UI.DataBinder#1](~/add/codesnippet/csharp/t-system.web.ui.databinder_1.aspx)]  \n  \n The following code is the custom `Product` class. This code should be included in a separate class file in the App_Code directory, such as Product.cs or Product.vb.  \n  \n [!code-cs[System.Web.UI.DataBinder#2](~/add/codesnippet/csharp/t-system.web.ui.databinder_2.cs)]\n [!code-vb[System.Web.UI.DataBinder#2](~/add/codesnippet/visualbasic/t-system.web.ui.databinder_2.vb)]"
  syntax:
    content: public sealed class DataBinder
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.DataBinder.#ctor
  id: '#ctor'
  parent: System.Web.UI.DataBinder
  langs:
  - csharp
  name: DataBinder()
  nameWithType: DataBinder.DataBinder()
  fullName: System.Web.UI.DataBinder.DataBinder()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "初始化的新執行個體<xref href=&quot;System.Web.UI.DataBinder&quot;></xref>類別。"
  syntax:
    content: public DataBinder ();
    parameters: []
  overload: System.Web.UI.DataBinder.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataBinder.EnableCaching
  id: EnableCaching
  parent: System.Web.UI.DataBinder
  langs:
  - csharp
  name: EnableCaching
  nameWithType: DataBinder.EnableCaching
  fullName: System.Web.UI.DataBinder.EnableCaching
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得或設定值，指出是否在執行階段中啟用資料快取。"
  syntax:
    content: public static bool EnableCaching { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果啟用快取<xref href=&quot;System.Web.UI.DataBinder&quot;></xref>類別; 否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.DataBinder.EnableCaching*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataBinder.Eval(System.Object,System.String)
  id: Eval(System.Object,System.String)
  parent: System.Web.UI.DataBinder
  langs:
  - csharp
  name: Eval(Object,String)
  nameWithType: DataBinder.Eval(Object,String)
  fullName: System.Web.UI.DataBinder.Eval(Object,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "在執行階段評估的資料繫結運算式。"
  remarks: "值`expression`參數必須評估為公用屬性。       快速應用程式開發 (RAD) 設計工具，例如 Visual Studio 中建立資料繫結時，會自動呼叫這個方法。 您可以也使用它以宣告方式簡化轉型為文字字串。 若要這樣做，您使用`<%#  %>`運算式語法，因為使用標準 ASP.NET 資料繫結。       資料繫結至範本清單中的控制項時，這個方法會特別有用的。      > [!NOTE] > 這個方法會執行晚期繫結評估，因為使用反映在執行階段，它可能會導致效能大幅降低相較於標準 ASP.NET 資料繫結語法。       清單的任何 Web 控制項，例如<xref:System.Web.UI.WebControls.GridView>， <xref:System.Web.UI.WebControls.DetailsView>， <xref:System.Web.UI.WebControls.DataList>，或<xref:System.Web.UI.WebControls.Repeater>，`container`應該`Container.DataItem`。</xref:System.Web.UI.WebControls.Repeater> </xref:System.Web.UI.WebControls.DataList> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView> 如果您要繫結 頁面上，針對`container`應該`Page`。       從.NET Framework 4.5 開始，您可以使用模型繫結來簡化一些您必須透過資料繫結，在舊版本中執行的工作。 在模型繫結中使用 Web Form 的教學課程系列，請參閱[模型繫結和 Web Form](http://go.microsoft.com/fwlink/?LinkId=286117)。"
  example:
  - "The following examples show how to use the `Eval` method to bind data to <xref:System.Web.UI.WebControls.Repeater> control. It requires a data class named Product.  \n  \n [!code-cs[System.Web.UI.DataBinder.Eval#1](~/add/codesnippet/csharp/m-system.web.ui.databind_3_1.cs)]\n [!code-vb[System.Web.UI.DataBinder.Eval#1](~/add/codesnippet/visualbasic/m-system.web.ui.databind_3_1.vb)]  \n  \n The code-behind file loads test data and binds that data to a <xref:System.Web.UI.WebControls.Repeater> control.  \n  \n [!code-cs[System.Web.UI.DataBinder.Eval#2](~/add/codesnippet/csharp/m-system.web.ui.databind_3_2.cs)]\n [!code-vb[System.Web.UI.DataBinder.Eval#2](~/add/codesnippet/visualbasic/m-system.web.ui.databind_3_2.vb)]  \n  \n In the declarative syntax for the <xref:System.Web.UI.WebControls.Repeater> control, you use the Eval method with `Container.DataItem` for the `container` parameter.  \n  \n [!code-cs[System.Web.UI.DataBinder.Eval#3](~/add/codesnippet/csharp/m-system.web.ui.databind_3_3.aspx)]\n [!code-vb[System.Web.UI.DataBinder.Eval#3](~/add/codesnippet/visualbasic/m-system.web.ui.databind_3_3.aspx)]  \n  \n Or, you can call `Eval` function and not include the `container` parameter.  \n  \n [!code-cs[System.Web.UI.DataBinder.Eval#4](~/add/codesnippet/csharp/m-system.web.ui.databind_3_4.aspx)]\n [!code-vb[System.Web.UI.DataBinder.Eval#4](~/add/codesnippet/visualbasic/m-system.web.ui.databind_3_4.aspx)]"
  syntax:
    content: public static object Eval (object container, string expression);
    parameters:
    - id: container
      type: System.Object
      description: "針對評估運算式的物件參考。 這必須是有效的物件識別碼的頁面上指定的語言。"
    - id: expression
      type: System.String
      description: "從導覽路徑`container`要放在繫結的控制屬性的公用屬性值的物件。 這必須是以句號分隔，例如屬性或欄位名稱的字串`Tables[0].DefaultView.[0].Price`在 C# 或`Tables(0).DefaultView.(0).Price`在 Visual Basic 中。"
    return:
      type: System.Object
      description: "<xref:System.Object>執行個體所產生的資料繫結運算式的評估。</xref:System.Object>"
  overload: System.Web.UI.DataBinder.Eval*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>expression</code>是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>或空字串後，修剪。"
  platform:
  - net462
- uid: System.Web.UI.DataBinder.Eval(System.Object,System.String,System.String)
  id: Eval(System.Object,System.String,System.String)
  parent: System.Web.UI.DataBinder
  langs:
  - csharp
  name: Eval(Object,String,String)
  nameWithType: DataBinder.Eval(Object,String,String)
  fullName: System.Web.UI.DataBinder.Eval(Object,String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "在執行階段評估的資料繫結運算式並將結果格式化為字串。"
  remarks: "值`expression`必須評估為公用屬性。       如需.NET Framework 中的格式字串的詳細資訊，請參閱[格式化型別](~/add/includes/ajax-current-ext-md.md)。       快速應用程式開發 (RAD) 設計工具，例如 Visual Studio 中建立資料繫結時，會自動呼叫這個方法。 您也可以使用它以宣告方式將<xref:System.Object>資料繫結運算式至<xref:System.String>。</xref:System.String>產生</xref:System.Object>  若要以宣告方式使用的方法，使用`<%#   %>`運算式語法，因為使用標準 ASP.NET 資料繫結。       資料繫結至範本清單中的控制項時，這個方法會特別有用的。      > [!NOTE] > 這個方法會執行晚期繫結評估，因為使用反映在執行階段，它可能會導致效能大幅降低相較於標準 ASP.NET 資料繫結語法。 特別是當格式化字串就不需要謹慎，使用這個方法。       清單的任何 Web 控制項，例如<xref:System.Web.UI.WebControls.GridView>， <xref:System.Web.UI.WebControls.DetailsView>， <xref:System.Web.UI.WebControls.DataList>，或<xref:System.Web.UI.WebControls.Repeater>，`container`應該`Container.DataItem`。</xref:System.Web.UI.WebControls.Repeater> </xref:System.Web.UI.WebControls.DataList> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView> 如果您要繫結 頁面上，針對`container`應該`Page`。       從.NET Framework 4.5 開始，您可以使用模型繫結來簡化一些您必須透過資料繫結，在舊版本中執行的工作。 在模型繫結中使用 Web Form 的教學課程系列，請參閱[模型繫結和 Web Form](http://go.microsoft.com/fwlink/?LinkId=286117)。"
  example:
  - "The following examples show how to use the `Eval` method to bind data to <xref:System.Web.UI.WebControls.Repeater> control. It requires a data class named Product.  \n  \n [!code-cs[System.Web.UI.DataBinder.Eval#1](~/add/codesnippet/csharp/m-system.web.ui.databind_2_1.cs)]\n [!code-vb[System.Web.UI.DataBinder.Eval#1](~/add/codesnippet/visualbasic/m-system.web.ui.databind_2_1.vb)]  \n  \n The code-behind file loads test data and binds that data to a <xref:System.Web.UI.WebControls.Repeater> control.  \n  \n [!code-cs[System.Web.UI.DataBinder.Eval#2](~/add/codesnippet/csharp/m-system.web.ui.databind_2_2.cs)]\n [!code-vb[System.Web.UI.DataBinder.Eval#2](~/add/codesnippet/visualbasic/m-system.web.ui.databind_2_2.vb)]  \n  \n In the declarative syntax for the <xref:System.Web.UI.WebControls.Repeater> control, you use the Eval method with `Container.DataItem` for the `container` parameter.  \n  \n [!code-cs[System.Web.UI.DataBinder.Eval#3](~/add/codesnippet/csharp/m-system.web.ui.databind_2_3.aspx)]\n [!code-vb[System.Web.UI.DataBinder.Eval#3](~/add/codesnippet/visualbasic/m-system.web.ui.databind_2_3.aspx)]  \n  \n Or, you can call `Eval` function and not include the `container` parameter.  \n  \n [!code-cs[System.Web.UI.DataBinder.Eval#4](~/add/codesnippet/csharp/m-system.web.ui.databind_2_4.aspx)]\n [!code-vb[System.Web.UI.DataBinder.Eval#4](~/add/codesnippet/visualbasic/m-system.web.ui.databind_2_4.aspx)]"
  syntax:
    content: public static string Eval (object container, string expression, string format);
    parameters:
    - id: container
      type: System.Object
      description: "針對評估運算式的物件參考。 這必須是有效的物件識別碼的頁面上指定的語言。"
    - id: expression
      type: System.String
      description: "從導覽路徑`container`要放在繫結的控制屬性的公用屬性值的物件。 這必須是以句號分隔，例如屬性或欄位名稱的字串`Tables[0].DefaultView.[0].Price`在 C# 或`Tables(0).DefaultView.(0).Price`在 Visual Basic 中。"
    - id: format
      type: System.String
      description: ".NET Framework 格式字串 (例如所使用的&lt;xref:System.String.Format%2A?displayProperty=fullName&gt;) 可將轉換<xref:System.Object>所要的資料繫結運算式傳回的執行個體<xref:System.String>物件。</xref:System.String> </xref:System.Object>"
    return:
      type: System.String
      description: "A<xref:System.String>得到的資料繫結運算式評估，並將它轉換成字串類型的物件。</xref:System.String>"
  overload: System.Web.UI.DataBinder.Eval*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataBinder.GetDataItem(System.Object)
  id: GetDataItem(System.Object)
  parent: System.Web.UI.DataBinder
  langs:
  - csharp
  name: GetDataItem(Object)
  nameWithType: DataBinder.GetDataItem(Object)
  fullName: System.Web.UI.DataBinder.GetDataItem(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "擷取物件的宣告的資料的項目。"
  remarks: "這個方法會呼叫<xref:System.Web.UI.DataBinder.GetDataItem%28System.Object%2CSystem.Boolean%40%29>方法，略過其`foundDataItem`參數時傳回的結果。</xref:System.Web.UI.DataBinder.GetDataItem%28System.Object%2CSystem.Boolean%40%29>       中有兩種識別的物件資料的項目。 如果容器物件實作<xref:System.Web.UI.IDataItemContainer>介面，<xref:System.Web.UI.IDataItemContainer.DataItem%2A>屬性會識別資料的項目，並傳回其值。</xref:System.Web.UI.IDataItemContainer.DataItem%2A> </xref:System.Web.UI.IDataItemContainer> 否則，方法會嘗試解決並傳回名為&quot;M&quot;的容器屬性。"
  syntax:
    content: public static object GetDataItem (object container);
    parameters:
    - id: container
      type: System.Object
      description: "針對評估運算式的物件參考。 這必須是有效的物件識別碼的頁面上指定的語言。"
    return:
      type: System.Object
      description: "物件，表示容器的宣告的資料的項目。 傳回<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果不找到任何資料的項目或容器會評估為<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.DataBinder.GetDataItem*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataBinder.GetDataItem(System.Object,System.Boolean@)
  id: GetDataItem(System.Object,System.Boolean@)
  parent: System.Web.UI.DataBinder
  langs:
  - csharp
  name: GetDataItem(Object,Boolean)
  nameWithType: DataBinder.GetDataItem(Object,Boolean)
  fullName: System.Web.UI.DataBinder.GetDataItem(Object,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "擷取物件的宣告的資料項目，指出成功或失敗。"
  remarks: "物件的資料的項目會識別兩種方式。 如果容器物件實作<xref:System.Web.UI.IDataItemContainer>介面，<xref:System.Web.UI.IDataItemContainer.DataItem%2A>屬性識別資料項目，而且會傳回。</xref:System.Web.UI.IDataItemContainer.DataItem%2A> </xref:System.Web.UI.IDataItemContainer> 否則，方法會嘗試解決並傳回名為&quot;M&quot;的容器屬性。"
  syntax:
    content: public static object GetDataItem (object container, out bool foundDataItem);
    parameters:
    - id: container
      type: System.Object
      description: "針對評估運算式的物件參考。 這必須是有效的物件識別碼的頁面上指定的語言。"
    - id: foundDataItem
      type: System.Boolean
      description: "布林值，指出是否成功解決和傳回資料的項目。 這個參數未初始化便傳遞。"
    return:
      type: System.Object
      description: "物件，表示容器的宣告的資料的項目。 傳回<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果不找到任何資料的項目或容器會評估為<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.DataBinder.GetDataItem*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataBinder.GetIndexedPropertyValue(System.Object,System.String)
  id: GetIndexedPropertyValue(System.Object,System.String)
  parent: System.Web.UI.DataBinder
  langs:
  - csharp
  name: GetIndexedPropertyValue(Object,String)
  nameWithType: DataBinder.GetIndexedPropertyValue(Object,String)
  fullName: System.Web.UI.DataBinder.GetIndexedPropertyValue(Object,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "擷取指定的容器和導覽路徑的屬性值。"
  remarks: "值`expr`必須評估為公用屬性。       清單的任何 Web 控制項，例如<xref:System.Web.UI.WebControls.GridView>， <xref:System.Web.UI.WebControls.DetailsView>， <xref:System.Web.UI.WebControls.DataList>，或<xref:System.Web.UI.WebControls.Repeater>，`container`應該`Container.DataItem`。</xref:System.Web.UI.WebControls.Repeater> </xref:System.Web.UI.WebControls.DataList> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView> 如果您要繫結 頁面上，針對`container`應該`Page`。"
  syntax:
    content: public static object GetIndexedPropertyValue (object container, string expr);
    parameters:
    - id: container
      type: System.Object
      description: "物件參考，針對`expr`評估。 這必須是有效的物件識別碼中指定頁面的語言。"
    - id: expr
      type: System.String
      description: "從導覽路徑`container`要置於繫結的控制屬性的公用屬性值的物件。 這必須是以句號分隔，例如屬性或欄位名稱的字串`Tables[0].DefaultView.[0].Price`在 C# 或`Tables(0).DefaultView.(0).Price`在 Visual Basic 中。"
    return:
      type: System.Object
      description: "物件，從資料繫結運算式的評估結果。"
  overload: System.Web.UI.DataBinder.GetIndexedPropertyValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>container</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>expr</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or an empty string (\"\")."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>expr</code> is not a valid indexed expression.  \n  \n \\- or -  \n  \n <code>expr</code> does not allow indexed access."
  platform:
  - net462
- uid: System.Web.UI.DataBinder.GetIndexedPropertyValue(System.Object,System.String,System.String)
  id: GetIndexedPropertyValue(System.Object,System.String,System.String)
  parent: System.Web.UI.DataBinder
  langs:
  - csharp
  name: GetIndexedPropertyValue(Object,String,String)
  nameWithType: DataBinder.GetIndexedPropertyValue(Object,String,String)
  fullName: System.Web.UI.DataBinder.GetIndexedPropertyValue(Object,String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "擷取指定的容器的指定屬性的值，然後格式化結果。"
  remarks: "GetIndexedPropertyValue 方法會叫用<xref:System.Web.UI.DataBinder.GetIndexedPropertyValue%2A>方法，然後再使用<xref:System.String.Format%2A?displayProperty=fullName>方法，以將結果格式化為指定在`format`參數。</xref:System.String.Format%2A?displayProperty=fullName> </xref:System.Web.UI.DataBinder.GetIndexedPropertyValue%2A> .NET Framework 格式字串 (例如所使用的<xref:System.String.Format%2A?displayProperty=fullName>) 將轉換<xref:System.Object>所要的資料繫結運算式傳回的執行個體<xref:System.String>物件。</xref:System.String> </xref:System.Object> </xref:System.String.Format%2A?displayProperty=fullName>       ，會擲回的例外狀況<xref:System.Web.UI.DataBinder.GetIndexedPropertyValue%2A>方法套用到的 GetIndexedPropertyValue 方法。</xref:System.Web.UI.DataBinder.GetIndexedPropertyValue%2A>"
  example:
  - "The following code example demonstrates how to use the GetIndexedPropertyValue method declaratively to bind to an indexed value.  \n  \n [!code-vb[Classic DataBinder.Eval Example#2](~/add/codesnippet/visualbasic/38557d34-9d41-4e37-9929-_1.aspx)]\n [!code-cs[Classic DataBinder.Eval Example#2](~/add/codesnippet/csharp/38557d34-9d41-4e37-9929-_1.aspx)]"
  syntax:
    content: public static string GetIndexedPropertyValue (object container, string propName, string format);
    parameters:
    - id: container
      type: System.Object
      description: "針對評估運算式的物件參考。 這必須是有效的物件識別碼中指定頁面的語言。"
    - id: propName
      type: System.String
      description: "包含要擷取之值的屬性名稱。"
    - id: format
      type: System.String
      description: "指定的格式來顯示結果字串。"
    return:
      type: System.String
      description: "指定的屬性中所指定的格式值<code> format </code>。"
  overload: System.Web.UI.DataBinder.GetIndexedPropertyValue*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataBinder.GetPropertyValue(System.Object,System.String)
  id: GetPropertyValue(System.Object,System.String)
  parent: System.Web.UI.DataBinder
  langs:
  - csharp
  name: GetPropertyValue(Object,String)
  nameWithType: DataBinder.GetPropertyValue(Object,String)
  fullName: System.Web.UI.DataBinder.GetPropertyValue(Object,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "擷取指定之物件的指定屬性的值。"
  remarks: "GetPropertyValue 方法用來擷取物件中的屬性值。"
  example:
  - The example for <xref:System.Web.UI.DataBinder> demonstrates the use of this method.
  syntax:
    content: public static object GetPropertyValue (object container, string propName);
    parameters:
    - id: container
      type: System.Object
      description: "包含屬性的物件。"
    - id: propName
      type: System.String
      description: "包含要擷取之值的屬性名稱。"
    return:
      type: System.Object
      description: "指定屬性的值。"
  overload: System.Web.UI.DataBinder.GetPropertyValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>container</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -<code>propName</code>是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>或空字串 (&quot;&quot;)。"
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "中的物件<code> container </code>沒有所指定的屬性<code> propName </code>。"
  platform:
  - net462
- uid: System.Web.UI.DataBinder.GetPropertyValue(System.Object,System.String,System.String)
  id: GetPropertyValue(System.Object,System.String,System.String)
  parent: System.Web.UI.DataBinder
  langs:
  - csharp
  name: GetPropertyValue(Object,String,String)
  nameWithType: DataBinder.GetPropertyValue(Object,String,String)
  fullName: System.Web.UI.DataBinder.GetPropertyValue(Object,String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "擷取指定的物件，指定屬性的值，然後格式化結果。"
  remarks: "這個版本的 GetPropertyValue 方法用來擷取和格式化的物件中的屬性值。"
  example:
  - The example for <xref:System.Web.UI.DataBinder> demonstrates the use of this method.
  syntax:
    content: public static string GetPropertyValue (object container, string propName, string format);
    parameters:
    - id: container
      type: System.Object
      description: "包含屬性的物件。"
    - id: propName
      type: System.String
      description: "包含要擷取之值的屬性名稱。"
    - id: format
      type: System.String
      description: "指定的格式來顯示結果字串。"
    return:
      type: System.String
      description: "指定的屬性中所指定的格式值<code> format </code>。"
  overload: System.Web.UI.DataBinder.GetPropertyValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>container</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>propName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or an empty string (\"\")."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "中的物件<code> container </code>沒有所指定的屬性<code> propName </code>。"
  platform:
  - net462
- uid: System.Web.UI.DataBinder.IsBindableType(System.Type)
  id: IsBindableType(System.Type)
  parent: System.Web.UI.DataBinder
  langs:
  - csharp
  name: IsBindableType(Type)
  nameWithType: DataBinder.IsBindableType(Type)
  fullName: System.Web.UI.DataBinder.IsBindableType(Type)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "決定是否可以繫結指定的資料類型。"
  syntax:
    content: public static bool IsBindableType (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "<xref:System.Type>表示要測試的資料類型</xref:System.Type>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>類型可以自動繫結控制項; 中的資料否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.DataBinder.IsBindableType*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.Web.UI.DataBinder.#ctor
  parent: System.Web.UI.DataBinder
  isExternal: false
  name: DataBinder()
  nameWithType: DataBinder.DataBinder()
  fullName: System.Web.UI.DataBinder.DataBinder()
- uid: System.Web.UI.DataBinder.EnableCaching
  parent: System.Web.UI.DataBinder
  isExternal: false
  name: EnableCaching
  nameWithType: DataBinder.EnableCaching
  fullName: System.Web.UI.DataBinder.EnableCaching
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.DataBinder.Eval(System.Object,System.String)
  parent: System.Web.UI.DataBinder
  isExternal: false
  name: Eval(Object,String)
  nameWithType: DataBinder.Eval(Object,String)
  fullName: System.Web.UI.DataBinder.Eval(Object,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.DataBinder.Eval(System.Object,System.String,System.String)
  parent: System.Web.UI.DataBinder
  isExternal: false
  name: Eval(Object,String,String)
  nameWithType: DataBinder.Eval(Object,String,String)
  fullName: System.Web.UI.DataBinder.Eval(Object,String,String)
- uid: System.Web.UI.DataBinder.GetDataItem(System.Object)
  parent: System.Web.UI.DataBinder
  isExternal: false
  name: GetDataItem(Object)
  nameWithType: DataBinder.GetDataItem(Object)
  fullName: System.Web.UI.DataBinder.GetDataItem(Object)
- uid: System.Web.UI.DataBinder.GetDataItem(System.Object,System.Boolean@)
  parent: System.Web.UI.DataBinder
  isExternal: false
  name: GetDataItem(Object,Boolean)
  nameWithType: DataBinder.GetDataItem(Object,Boolean)
  fullName: System.Web.UI.DataBinder.GetDataItem(Object,Boolean)
- uid: System.Web.UI.DataBinder.GetIndexedPropertyValue(System.Object,System.String)
  parent: System.Web.UI.DataBinder
  isExternal: false
  name: GetIndexedPropertyValue(Object,String)
  nameWithType: DataBinder.GetIndexedPropertyValue(Object,String)
  fullName: System.Web.UI.DataBinder.GetIndexedPropertyValue(Object,String)
- uid: System.Web.UI.DataBinder.GetIndexedPropertyValue(System.Object,System.String,System.String)
  parent: System.Web.UI.DataBinder
  isExternal: false
  name: GetIndexedPropertyValue(Object,String,String)
  nameWithType: DataBinder.GetIndexedPropertyValue(Object,String,String)
  fullName: System.Web.UI.DataBinder.GetIndexedPropertyValue(Object,String,String)
- uid: System.Web.UI.DataBinder.GetPropertyValue(System.Object,System.String)
  parent: System.Web.UI.DataBinder
  isExternal: false
  name: GetPropertyValue(Object,String)
  nameWithType: DataBinder.GetPropertyValue(Object,String)
  fullName: System.Web.UI.DataBinder.GetPropertyValue(Object,String)
- uid: System.Web.UI.DataBinder.GetPropertyValue(System.Object,System.String,System.String)
  parent: System.Web.UI.DataBinder
  isExternal: false
  name: GetPropertyValue(Object,String,String)
  nameWithType: DataBinder.GetPropertyValue(Object,String,String)
  fullName: System.Web.UI.DataBinder.GetPropertyValue(Object,String,String)
- uid: System.Web.UI.DataBinder.IsBindableType(System.Type)
  parent: System.Web.UI.DataBinder
  isExternal: false
  name: IsBindableType(Type)
  nameWithType: DataBinder.IsBindableType(Type)
  fullName: System.Web.UI.DataBinder.IsBindableType(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.UI.DataBinder.#ctor*
  parent: System.Web.UI.DataBinder
  isExternal: false
  name: DataBinder
  nameWithType: DataBinder.DataBinder
- uid: System.Web.UI.DataBinder.EnableCaching*
  parent: System.Web.UI.DataBinder
  isExternal: false
  name: EnableCaching
  nameWithType: DataBinder.EnableCaching
- uid: System.Web.UI.DataBinder.Eval*
  parent: System.Web.UI.DataBinder
  isExternal: false
  name: Eval
  nameWithType: DataBinder.Eval
- uid: System.Web.UI.DataBinder.GetDataItem*
  parent: System.Web.UI.DataBinder
  isExternal: false
  name: GetDataItem
  nameWithType: DataBinder.GetDataItem
- uid: System.Web.UI.DataBinder.GetIndexedPropertyValue*
  parent: System.Web.UI.DataBinder
  isExternal: false
  name: GetIndexedPropertyValue
  nameWithType: DataBinder.GetIndexedPropertyValue
- uid: System.Web.UI.DataBinder.GetPropertyValue*
  parent: System.Web.UI.DataBinder
  isExternal: false
  name: GetPropertyValue
  nameWithType: DataBinder.GetPropertyValue
- uid: System.Web.UI.DataBinder.IsBindableType*
  parent: System.Web.UI.DataBinder
  isExternal: false
  name: IsBindableType
  nameWithType: DataBinder.IsBindableType
