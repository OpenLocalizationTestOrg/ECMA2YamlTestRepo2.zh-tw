### YamlMime:ManagedReference
items:
- uid: System.Web.HttpException
  id: HttpException
  children:
  - System.Web.HttpException.#ctor
  - System.Web.HttpException.#ctor(System.String)
  - System.Web.HttpException.#ctor(System.Int32,System.String)
  - System.Web.HttpException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Web.HttpException.#ctor(System.String,System.Exception)
  - System.Web.HttpException.#ctor(System.String,System.Int32)
  - System.Web.HttpException.#ctor(System.Int32,System.String,System.Exception)
  - System.Web.HttpException.#ctor(System.Int32,System.String,System.Int32)
  - System.Web.HttpException.CreateFromLastError(System.String)
  - System.Web.HttpException.GetHtmlErrorMessage
  - System.Web.HttpException.GetHttpCode
  - System.Web.HttpException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Web.HttpException.WebEventCode
  langs:
  - csharp
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
  type: Class
  summary: "描述在處理 HTTP 要求期間發生的例外狀況。"
  remarks: "HttpException 類別是 HTTP 特定的例外狀況類別，可讓 ASP.NET 產生例外狀況資訊。 如需擲回並處理例外狀況的詳細資訊，請參閱[例外狀況](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following code example demonstrates how to use the HttpException class to raise customized exceptions. The `Button_Click` method determines which button was clicked, and then calls either the `CheckNumber` or `CheckBoolean` method. If the user-entered value in the text box does not correspond to the expected type, an HttpException exception is created and thrown with a customized message based on the error type.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[HttpException#1](~/add/codesnippet/visualbasic/t-system.web.httpexception_1.aspx)]\n [!code-cs[HttpException#1](~/add/codesnippet/csharp/t-system.web.httpexception_1.aspx)]"
  syntax:
    content: 'public class HttpException : System.Runtime.InteropServices.ExternalException'
  inheritance:
  - System.Exception
  - System.SystemException
  - System.Runtime.InteropServices.ExternalException
  implements: []
  inheritedMembers:
  - System.Runtime.InteropServices.ExternalException.ErrorCode
  - System.Runtime.InteropServices.ExternalException.ToString
  platform:
  - net462
- uid: System.Web.HttpException.#ctor
  id: '#ctor'
  parent: System.Web.HttpException
  langs:
  - csharp
  name: HttpException()
  nameWithType: HttpException.HttpException()
  fullName: System.Web.HttpException.HttpException()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "初始化的新執行個體<xref href=&quot;System.Web.HttpException&quot;></xref>類別並建立空白<xref href=&quot;System.Web.HttpException&quot;></xref>物件。"
  remarks: "處理例外狀況，當它可用來擷取一系列相關的例外狀況，以回應內部例外狀況擲回外部例外狀況。       導致外部例外狀況的內部例外狀況的參考是可從<xref:System.Exception.InnerException%2A>外部例外狀況的屬性。</xref:System.Exception.InnerException%2A> 這項機制會保留先前的例外狀況，包括原始的例外狀況，可讓您建立更有意義的外部例外狀況時執行的錯誤資訊。 如需詳細資訊，請參閱<xref:System.Exception.InnerException%2A>.</xref:System.Exception.InnerException%2A>"
  example:
  - "The following code example demonstrates the HttpException constructor of the <xref:System.Web.HttpException> class. The `CheckNumber` method accepts a user-entered value through a text box and checks whether it is an integer. If the value is not an integer, an exception is thrown, and then a new <xref:System.Web.HttpException> object is created and thrown. That exception is caught in the `Button_Click` event handler and the error message is displayed on the browser.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[HttpException_Constructor1#1](~/add/codesnippet/csharp/m-system.web.httpexcepti_2_1.aspx)]\n [!code-vb[HttpException_Constructor1#1](~/add/codesnippet/visualbasic/m-system.web.httpexcepti_2_1.aspx)]"
  syntax:
    content: public HttpException ();
    parameters: []
  overload: System.Web.HttpException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpException.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Web.HttpException
  langs:
  - csharp
  name: HttpException(String)
  nameWithType: HttpException.HttpException(String)
  fullName: System.Web.HttpException.HttpException(String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "初始化的新執行個體<xref href=&quot;System.Web.HttpException&quot;></xref>類別使用提供的錯誤訊息。"
  remarks: ''
  example:
  - "The following code example demonstrates the HttpException constructor of the <xref:System.Web.HttpException> class. An <xref:System.Web.HttpException> is thrown if a user-entered value is 0.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[Classic HttpException.HttpException1 Example#1](~/add/codesnippet/csharp/m-system.web.httpexcepti_0_1.cs)]\n [!code-vb[Classic HttpException.HttpException1 Example#1](~/add/codesnippet/visualbasic/m-system.web.httpexcepti_0_1.vb)]"
  syntax:
    content: public HttpException (string message);
    parameters:
    - id: message
      type: System.String
      description: "顯示的錯誤訊息給用戶端時擲回例外狀況。"
  overload: System.Web.HttpException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpException.#ctor(System.Int32,System.String)
  id: '#ctor(System.Int32,System.String)'
  parent: System.Web.HttpException
  langs:
  - csharp
  name: HttpException(Int32,String)
  nameWithType: HttpException.HttpException(Int32,String)
  fullName: System.Web.HttpException.HttpException(Int32,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "初始化的新執行個體<xref href=&quot;System.Web.HttpException&quot;></xref>類別使用的 HTTP 回應狀態碼和錯誤訊息。"
  syntax:
    content: public HttpException (int httpCode, string message);
    parameters:
    - id: httpCode
      type: System.Int32
      description: "對應到此錯誤的用戶端傳送的 HTTP 回應狀態碼。"
    - id: message
      type: System.String
      description: "顯示的錯誤訊息給用戶端時擲回例外狀況。"
  overload: System.Web.HttpException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.Web.HttpException
  langs:
  - csharp
  name: HttpException(SerializationInfo,StreamingContext)
  nameWithType: HttpException.HttpException(SerializationInfo,StreamingContext)
  fullName: System.Web.HttpException.HttpException(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "初始化的新執行個體<xref href=&quot;System.Web.HttpException&quot;></xref>使用序列化資料的類別。"
  remarks: "HttpException 建構函式會在重新構成經由資料流傳輸的例外狀況物件的還原序列化期間呼叫。 如需詳細資訊，請參閱[XML 和 SOAP 序列化](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: protected HttpException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref>其中保存有關擲回例外狀況的序列化的物件資料。"
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "<xref:System.Runtime.Serialization.StreamingContext>存放關於來源或目的端內容資訊。</xref:System.Runtime.Serialization.StreamingContext>"
  overload: System.Web.HttpException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpException.#ctor(System.String,System.Exception)
  id: '#ctor(System.String,System.Exception)'
  parent: System.Web.HttpException
  langs:
  - csharp
  name: HttpException(String,Exception)
  nameWithType: HttpException.HttpException(String,Exception)
  fullName: System.Web.HttpException.HttpException(String,Exception)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "初始化的新執行個體<xref href=&quot;System.Web.HttpException&quot;></xref>類別使用的錯誤訊息和<xref:System.Exception.InnerException*>屬性。</xref:System.Exception.InnerException*>"
  remarks: "處理例外狀況，當它可用來擷取一系列相關的例外狀況，以回應內部例外狀況擲回外部例外狀況。       導致外部例外狀況的內部例外狀況的參考是可從<xref:System.Exception.InnerException%2A>外部例外狀況的屬性。</xref:System.Exception.InnerException%2A> 這項機制會保留先前的例外狀況，包括原始的例外狀況，可讓您建立更有意義的外部例外狀況時執行的錯誤資訊。 如需詳細資訊，請參閱<xref:System.Exception.InnerException%2A>.</xref:System.Exception.InnerException%2A>"
  example:
  - "The following code example demonstrates the HttpException constructor of the <xref:System.Web.HttpException> class. The `CheckNumber` method accepts a user-entered value through a text box and checks whether it is an integer. If the value is not an integer, an exception is thrown, and then in the catch block, a new <xref:System.Web.HttpException> object is created and thrown. That exception is caught in the `Button_Click` event handler and the error message is displayed on the browser.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[HttpException_Constructor2#1](~/add/codesnippet/visualbasic/m-system.web.httpexcepti_1_1.aspx)]\n [!code-cs[HttpException_Constructor2#1](~/add/codesnippet/csharp/m-system.web.httpexcepti_1_1.aspx)]"
  syntax:
    content: public HttpException (string message, Exception innerException);
    parameters:
    - id: message
      type: System.String
      description: "顯示的錯誤訊息給用戶端時擲回例外狀況。"
    - id: innerException
      type: System.Exception
      description: "<xref:System.Exception.InnerException*>如果有的話，擲回目前例外狀況。</xref:System.Exception.InnerException*>"
  overload: System.Web.HttpException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpException.#ctor(System.String,System.Int32)
  id: '#ctor(System.String,System.Int32)'
  parent: System.Web.HttpException
  langs:
  - csharp
  name: HttpException(String,Int32)
  nameWithType: HttpException.HttpException(String,Int32)
  fullName: System.Web.HttpException.HttpException(String,Int32)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "初始化的新執行個體<xref href=&quot;System.Web.HttpException&quot;></xref>類別使用的錯誤訊息和例外狀況代碼。"
  remarks: ''
  example:
  - "The following code example demonstrates the HttpException constructor of the <xref:System.Web.HttpException> class. An <xref:System.Web.HttpException> exception is thrown if a user-entered value is 0.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[Classic HttpException.HttpException2 Example#1](~/add/codesnippet/visualbasic/m-system.web.httpexcepti_4_1.vb)]\n [!code-cs[Classic HttpException.HttpException2 Example#1](~/add/codesnippet/csharp/m-system.web.httpexcepti_4_1.cs)]"
  syntax:
    content: public HttpException (string message, int hr);
    parameters:
    - id: message
      type: System.String
      description: "顯示的錯誤訊息給用戶端時擲回例外狀況。"
    - id: hr
      type: System.Int32
      description: "定義錯誤的例外狀況程式碼。"
  overload: System.Web.HttpException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpException.#ctor(System.Int32,System.String,System.Exception)
  id: '#ctor(System.Int32,System.String,System.Exception)'
  parent: System.Web.HttpException
  langs:
  - csharp
  name: HttpException(Int32,String,Exception)
  nameWithType: HttpException.HttpException(Int32,String,Exception)
  fullName: System.Web.HttpException.HttpException(Int32,String,Exception)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "初始化的新執行個體<xref href=&quot;System.Web.HttpException&quot;></xref>類別使用 HTTP 回應狀態碼，錯誤訊息，而<xref:System.Exception.InnerException*>屬性。</xref:System.Exception.InnerException*>"
  remarks: "處理例外狀況，當它可用來擷取一系列相關的例外狀況，以回應內部例外狀況擲回外部例外狀況。       導致外部例外狀況的內部例外狀況的參考是可從<xref:System.Exception.InnerException%2A>外部例外狀況的屬性。</xref:System.Exception.InnerException%2A> 這項機制會保留先前的例外狀況，包括原始的例外狀況，可讓您建立更有意義的外部例外狀況時執行的錯誤資訊。 如需詳細資訊，請參閱<xref:System.Exception.InnerException%2A>.</xref:System.Exception.InnerException%2A>"
  example:
  - "The following code example demonstrates the HttpException constructor of the <xref:System.Web.HttpException> class. The `CheckNumber` method accepts a user-entered value and checks whether it is an integer. If the value is not an integer, an exception is thrown, and then a new <xref:System.Web.HttpException> object containing the HTTP response status code, the exception's message, and any inner exception is created. That exception is caught in the `Button_Click` event handler and the error message, error code, and inner exception are displayed.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[HttpException_Constructor3#1](~/add/codesnippet/csharp/6bc30991-e249-4e7f-addb-_1.aspx)]\n [!code-vb[HttpException_Constructor3#1](~/add/codesnippet/visualbasic/6bc30991-e249-4e7f-addb-_1.aspx)]"
  syntax:
    content: public HttpException (int httpCode, string message, Exception innerException);
    parameters:
    - id: httpCode
      type: System.Int32
      description: "顯示在用戶端之 HTTP 回應狀態碼。"
    - id: message
      type: System.String
      description: "顯示的錯誤訊息給用戶端時擲回例外狀況。"
    - id: innerException
      type: System.Exception
      description: "<xref:System.Exception.InnerException*>如果有的話，擲回目前例外狀況。</xref:System.Exception.InnerException*>"
  overload: System.Web.HttpException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpException.#ctor(System.Int32,System.String,System.Int32)
  id: '#ctor(System.Int32,System.String,System.Int32)'
  parent: System.Web.HttpException
  langs:
  - csharp
  name: HttpException(Int32,String,Int32)
  nameWithType: HttpException.HttpException(Int32,String,Int32)
  fullName: System.Web.HttpException.HttpException(Int32,String,Int32)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "初始化的新執行個體<xref href=&quot;System.Web.HttpException&quot;></xref>類別使用的 HTTP 回應狀態碼、 錯誤訊息和例外狀況代碼。"
  remarks: ''
  example:
  - "The following code example demonstrates the HttpException constructor of the <xref:System.Web.HttpException> class. The user name and e-mail information are entered by the user in the provided text boxes. If any of the text boxes are left blank, an <xref:System.Web.HttpException> object is created and thrown. The error code of the <xref:System.Web.HttpException> is obtained by the <xref:System.Web.HttpException.GetHttpCode%2A> method and displayed on the Web page.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[HttpException_Constructor#1](~/add/codesnippet/csharp/m-system.web.httpexcepti_3_1.aspx)]\n [!code-vb[HttpException_Constructor#1](~/add/codesnippet/visualbasic/m-system.web.httpexcepti_3_1.aspx)]"
  syntax:
    content: public HttpException (int httpCode, string message, int hr);
    parameters:
    - id: httpCode
      type: System.Int32
      description: "顯示在用戶端之 HTTP 回應狀態碼。"
    - id: message
      type: System.String
      description: "顯示的錯誤訊息給用戶端時擲回例外狀況。"
    - id: hr
      type: System.Int32
      description: "定義錯誤的例外狀況程式碼。"
  overload: System.Web.HttpException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpException.CreateFromLastError(System.String)
  id: CreateFromLastError(System.String)
  parent: System.Web.HttpException
  langs:
  - csharp
  name: CreateFromLastError(String)
  nameWithType: HttpException.CreateFromLastError(String)
  fullName: System.Web.HttpException.CreateFromLastError(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "建立新<xref href=&quot;System.Web.HttpException&quot;></xref>例外狀況會根據從 Win32 API 傳回的錯誤碼<xref uid=&quot;langword_csharp_GetLastError()&quot; name=&quot;GetLastError()&quot; href=&quot;&quot;></xref>方法。"
  syntax:
    content: public static System.Web.HttpException CreateFromLastError (string message);
    parameters:
    - id: message
      type: System.String
      description: "顯示的錯誤訊息給用戶端時擲回例外狀況。"
    return:
      type: System.Web.HttpException
      description: "<xref href=&quot;System.Web.HttpException&quot;> </xref>根據從呼叫 Win32 API 傳回的錯誤碼<xref uid=&quot;langword_csharp_GetLastError()&quot; name=&quot;GetLastError()&quot; href=&quot;&quot;></xref>方法。"
  overload: System.Web.HttpException.CreateFromLastError*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpException.GetHtmlErrorMessage
  id: GetHtmlErrorMessage
  parent: System.Web.HttpException
  langs:
  - csharp
  name: GetHtmlErrorMessage()
  nameWithType: HttpException.GetHtmlErrorMessage()
  fullName: System.Web.HttpException.GetHtmlErrorMessage()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "取得要傳回給用戶端的 HTML 錯誤訊息。"
  syntax:
    content: public string GetHtmlErrorMessage ();
    parameters: []
    return:
      type: System.String
      description: "HTML 的錯誤訊息。"
  overload: System.Web.HttpException.GetHtmlErrorMessage*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpException.GetHttpCode
  id: GetHttpCode
  parent: System.Web.HttpException
  langs:
  - csharp
  name: GetHttpCode()
  nameWithType: HttpException.GetHttpCode()
  fullName: System.Web.HttpException.GetHttpCode()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "取得要傳回給用戶端的 HTTP 回應狀態碼。"
  remarks: "如果沒有 HTTP 代碼為非零，它會傳回。 否則，<xref:System.Exception.InnerException%2A>傳回碼。</xref:System.Exception.InnerException%2A> 如果沒有<xref:System.Exception.InnerException%2A>使用程式碼或 HTTP 代碼為非零，則會傳回 HTTP 回應狀態碼 500。</xref:System.Exception.InnerException%2A> 如需有關 HTTP 回應狀態碼的詳細資訊，請參閱超文字傳輸通訊協定-在世界上的 HTTP/1.1 狀態碼定義[Wide Web Consortium (W3C) 網站](http://go.microsoft.com/fwlink/?linkid=37125)。"
  syntax:
    content: public int GetHttpCode ();
    parameters: []
    return:
      type: System.Int32
      description: "表示例外狀況的非零的 HTTP 代碼或<xref:System.Exception.InnerException*>代碼; 否則 HTTP 回應狀態碼為 500。</xref:System.Exception.InnerException*>"
  overload: System.Web.HttpException.GetHttpCode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Web.HttpException
  langs:
  - csharp
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: HttpException.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Web.HttpException.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "取得例外狀況的相關資訊，並將它加入至<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;></xref>物件。"
  remarks: "將 GetObjectData 方法加入至例外狀況資訊<xref:System.Runtime.Serialization.SerializationInfo>目標為序列化的物件。</xref:System.Runtime.Serialization.SerializationInfo> 還原序列化期間的例外狀況重新組成從<xref:System.Runtime.Serialization.SerializationInfo>，會在資料流上傳輸。</xref:System.Runtime.Serialization.SerializationInfo>"
  syntax:
    content: public override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref>其中保存有關擲回例外狀況的序列化的物件資料。"
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "<xref:System.Runtime.Serialization.StreamingContext>存放關於來源或目的端內容資訊。</xref:System.Runtime.Serialization.StreamingContext>"
  overload: System.Web.HttpException.GetObjectData*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpException.WebEventCode
  id: WebEventCode
  parent: System.Web.HttpException
  langs:
  - csharp
  name: WebEventCode
  nameWithType: HttpException.WebEventCode
  fullName: System.Web.HttpException.WebEventCode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "取得 HTTP 例外狀況相關聯的事件代碼。"
  syntax:
    content: public int WebEventCode { get; }
    return:
      type: System.Int32
      description: "表示 Web 事件程式碼的整數。"
  overload: System.Web.HttpException.WebEventCode*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Runtime.InteropServices.ExternalException
  isExternal: false
  name: System.Runtime.InteropServices.ExternalException
- uid: System.Web.HttpException.#ctor
  parent: System.Web.HttpException
  isExternal: false
  name: HttpException()
  nameWithType: HttpException.HttpException()
  fullName: System.Web.HttpException.HttpException()
- uid: System.Web.HttpException.#ctor(System.String)
  parent: System.Web.HttpException
  isExternal: false
  name: HttpException(String)
  nameWithType: HttpException.HttpException(String)
  fullName: System.Web.HttpException.HttpException(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.HttpException.#ctor(System.Int32,System.String)
  parent: System.Web.HttpException
  isExternal: false
  name: HttpException(Int32,String)
  nameWithType: HttpException.HttpException(Int32,String)
  fullName: System.Web.HttpException.HttpException(Int32,String)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.HttpException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Web.HttpException
  isExternal: false
  name: HttpException(SerializationInfo,StreamingContext)
  nameWithType: HttpException.HttpException(SerializationInfo,StreamingContext)
  fullName: System.Web.HttpException.HttpException(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Web.HttpException.#ctor(System.String,System.Exception)
  parent: System.Web.HttpException
  isExternal: false
  name: HttpException(String,Exception)
  nameWithType: HttpException.HttpException(String,Exception)
  fullName: System.Web.HttpException.HttpException(String,Exception)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Web.HttpException.#ctor(System.String,System.Int32)
  parent: System.Web.HttpException
  isExternal: false
  name: HttpException(String,Int32)
  nameWithType: HttpException.HttpException(String,Int32)
  fullName: System.Web.HttpException.HttpException(String,Int32)
- uid: System.Web.HttpException.#ctor(System.Int32,System.String,System.Exception)
  parent: System.Web.HttpException
  isExternal: false
  name: HttpException(Int32,String,Exception)
  nameWithType: HttpException.HttpException(Int32,String,Exception)
  fullName: System.Web.HttpException.HttpException(Int32,String,Exception)
- uid: System.Web.HttpException.#ctor(System.Int32,System.String,System.Int32)
  parent: System.Web.HttpException
  isExternal: false
  name: HttpException(Int32,String,Int32)
  nameWithType: HttpException.HttpException(Int32,String,Int32)
  fullName: System.Web.HttpException.HttpException(Int32,String,Int32)
- uid: System.Web.HttpException.CreateFromLastError(System.String)
  parent: System.Web.HttpException
  isExternal: false
  name: CreateFromLastError(String)
  nameWithType: HttpException.CreateFromLastError(String)
  fullName: System.Web.HttpException.CreateFromLastError(String)
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.Web.HttpException.GetHtmlErrorMessage
  parent: System.Web.HttpException
  isExternal: false
  name: GetHtmlErrorMessage()
  nameWithType: HttpException.GetHtmlErrorMessage()
  fullName: System.Web.HttpException.GetHtmlErrorMessage()
- uid: System.Web.HttpException.GetHttpCode
  parent: System.Web.HttpException
  isExternal: false
  name: GetHttpCode()
  nameWithType: HttpException.GetHttpCode()
  fullName: System.Web.HttpException.GetHttpCode()
- uid: System.Web.HttpException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Web.HttpException
  isExternal: false
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: HttpException.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Web.HttpException.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Web.HttpException.WebEventCode
  parent: System.Web.HttpException
  isExternal: false
  name: WebEventCode
  nameWithType: HttpException.WebEventCode
  fullName: System.Web.HttpException.WebEventCode
- uid: System.Web.HttpException.#ctor*
  parent: System.Web.HttpException
  isExternal: false
  name: HttpException
  nameWithType: HttpException.HttpException
- uid: System.Web.HttpException.CreateFromLastError*
  parent: System.Web.HttpException
  isExternal: false
  name: CreateFromLastError
  nameWithType: HttpException.CreateFromLastError
- uid: System.Web.HttpException.GetHtmlErrorMessage*
  parent: System.Web.HttpException
  isExternal: false
  name: GetHtmlErrorMessage
  nameWithType: HttpException.GetHtmlErrorMessage
- uid: System.Web.HttpException.GetHttpCode*
  parent: System.Web.HttpException
  isExternal: false
  name: GetHttpCode
  nameWithType: HttpException.GetHttpCode
- uid: System.Web.HttpException.GetObjectData*
  parent: System.Web.HttpException
  isExternal: false
  name: GetObjectData
  nameWithType: HttpException.GetObjectData
- uid: System.Web.HttpException.WebEventCode*
  parent: System.Web.HttpException
  isExternal: false
  name: WebEventCode
  nameWithType: HttpException.WebEventCode
