### YamlMime:ManagedReference
items:
- uid: System.Data.OleDb.OleDbException
  id: OleDbException
  children:
  - System.Data.OleDb.OleDbException.ErrorCode
  - System.Data.OleDb.OleDbException.Errors
  - System.Data.OleDb.OleDbException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  langs:
  - csharp
  name: OleDbException
  nameWithType: OleDbException
  fullName: System.Data.OleDb.OleDbException
  type: Class
  summary: "基礎提供者會傳回警告或錯誤的 OLE DB 資料來源時，會擲回例外狀況。 這個類別無法被繼承。"
  remarks: "每當.NET Framework Data Provider for OLE DB 遇到伺服器所產生的錯誤時，會建立此類別。 （用戶端端錯誤會擲回做為標準的 common language runtime 例外狀況。）OleDbException 一定會包含至少一個執行個體的<xref:System.Data.OleDb.OleDbError>。</xref:System.Data.OleDb.OleDbError>       如果錯誤的嚴重性太大，伺服器可能會關閉<xref:System.Data.OleDb.OleDbConnection>.</xref:System.Data.OleDb.OleDbConnection> 不過，使用者可以再次開啟連線後繼續。       如需.NET Framework 資料提供者的例外狀況處理的一般資訊，請參閱<xref:System.Data.SqlClient.SqlException>.</xref:System.Data.SqlClient.SqlException>"
  example:
  - "The following example generates an OleDbException because of a missing data source, and then displays the exception.  \n  \n [!code-cs[Classic WebData OleDbException Example#1](~/add/codesnippet/csharp/t-system.data.oledb.oled_0_1.cs)]\n [!code-vb[Classic WebData OleDbException Example#1](~/add/codesnippet/visualbasic/t-system.data.oledb.oled_0_1.vb)]"
  syntax:
    content: 'public sealed class OleDbException : System.Data.Common.DbException'
  inheritance:
  - System.Exception
  - System.SystemException
  - System.Runtime.InteropServices.ExternalException
  - System.Data.Common.DbException
  implements: []
  inheritedMembers:
  - System.Runtime.InteropServices.ExternalException.ToString
  platform:
  - net462
- uid: System.Data.OleDb.OleDbException.ErrorCode
  id: ErrorCode
  parent: System.Data.OleDb.OleDbException
  langs:
  - csharp
  name: ErrorCode
  nameWithType: OleDbException.ErrorCode
  fullName: System.Data.OleDb.OleDbException.ErrorCode
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "取得錯誤的 HRESULT。"
  syntax:
    content: public override int ErrorCode { get; }
    return:
      type: System.Int32
      description: "錯誤的 HRESULT。"
  overload: System.Data.OleDb.OleDbException.ErrorCode*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbException.Errors
  id: Errors
  parent: System.Data.OleDb.OleDbException
  langs:
  - csharp
  name: Errors
  nameWithType: OleDbException.Errors
  fullName: System.Data.OleDb.OleDbException.Errors
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "取得一或多個集合<xref href=&quot;System.Data.OleDb.OleDbError&quot;></xref>物件，提供有關 OLE DB 的.NET Framework 資料提供者所產生的例外狀況的詳細的資訊。"
  remarks: "<xref:System.Data.OleDb.OleDbErrorCollection>類別一律包含至少一個執行個體的<xref:System.Data.OleDb.OleDbError>類別。</xref:System.Data.OleDb.OleDbError> </xref:System.Data.OleDb.OleDbErrorCollection>       這是包裝函式<xref:System.Data.OleDb.OleDbErrorCollection>集合。</xref:System.Data.OleDb.OleDbErrorCollection>"
  example:
  - "The following example displays each <xref:System.Data.OleDb.OleDbError> within the <xref:System.Data.OleDb.OleDbErrorCollection> collection.  \n  \n [!code-vb[Classic WebData OleDbError.Message Example#1](~/add/codesnippet/visualbasic/p-system.data.oledb.oled_16_1.vb)]\n [!code-cs[Classic WebData OleDbError.Message Example#1](~/add/codesnippet/csharp/p-system.data.oledb.oled_16_1.cs)]"
  syntax:
    content: public System.Data.OleDb.OleDbErrorCollection Errors { get; }
    return:
      type: System.Data.OleDb.OleDbErrorCollection
      description: "收集執行個體<xref href=&quot;System.Data.OleDb.OleDbError&quot;></xref>類別。"
  overload: System.Data.OleDb.OleDbException.Errors*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Data.OleDb.OleDbException
  langs:
  - csharp
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: OleDbException.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Data.OleDb.OleDbException.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "這個成員會覆寫<xref:System.Exception.GetObjectData*>.</xref:System.Exception.GetObjectData*>"
  remarks: "<xref:System.Data.Odbc.OdbcException.GetObjectData%2A>設定<xref:System.Runtime.Serialization.SerializationInfo>的目標為序列化的所有例外狀況物件資料。</xref:System.Runtime.Serialization.SerializationInfo></xref:System.Data.Odbc.OdbcException.GetObjectData%2A> 還原序列化期間的例外狀況重新組成從<xref:System.Runtime.Serialization.SerializationInfo>資料流上傳輸。</xref:System.Runtime.Serialization.SerializationInfo>"
  syntax:
    content: public override void GetObjectData (System.Runtime.Serialization.SerializationInfo si, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: si
      type: System.Runtime.Serialization.SerializationInfo
      description: "<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref>其中保存有關擲回例外狀況的序列化的物件資料。"
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "<xref:System.Runtime.Serialization.StreamingContext>其中包含關於來源或目的端內容資訊。</xref:System.Runtime.Serialization.StreamingContext>"
  overload: System.Data.OleDb.OleDbException.GetObjectData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> si </code>參數為 null 參考 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>在 Visual Basic 中)。"
  platform:
  - net462
references:
- uid: System.Data.Common.DbException
  isExternal: false
  name: System.Data.Common.DbException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Data.OleDb.OleDbException.ErrorCode
  parent: System.Data.OleDb.OleDbException
  isExternal: false
  name: ErrorCode
  nameWithType: OleDbException.ErrorCode
  fullName: System.Data.OleDb.OleDbException.ErrorCode
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.OleDb.OleDbException.Errors
  parent: System.Data.OleDb.OleDbException
  isExternal: false
  name: Errors
  nameWithType: OleDbException.Errors
  fullName: System.Data.OleDb.OleDbException.Errors
- uid: System.Data.OleDb.OleDbErrorCollection
  parent: System.Data.OleDb
  isExternal: false
  name: OleDbErrorCollection
  nameWithType: OleDbErrorCollection
  fullName: System.Data.OleDb.OleDbErrorCollection
- uid: System.Data.OleDb.OleDbException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Data.OleDb.OleDbException
  isExternal: false
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: OleDbException.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Data.OleDb.OleDbException.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Data.OleDb.OleDbException.ErrorCode*
  parent: System.Data.OleDb.OleDbException
  isExternal: false
  name: ErrorCode
  nameWithType: OleDbException.ErrorCode
- uid: System.Data.OleDb.OleDbException.Errors*
  parent: System.Data.OleDb.OleDbException
  isExternal: false
  name: Errors
  nameWithType: OleDbException.Errors
- uid: System.Data.OleDb.OleDbException.GetObjectData*
  parent: System.Data.OleDb.OleDbException
  isExternal: false
  name: GetObjectData
  nameWithType: OleDbException.GetObjectData
