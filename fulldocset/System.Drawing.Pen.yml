### YamlMime:ManagedReference
items:
- uid: System.Drawing.Pen
  id: Pen
  children:
  - System.Drawing.Pen.#ctor(System.Drawing.Brush)
  - System.Drawing.Pen.#ctor(System.Drawing.Color)
  - System.Drawing.Pen.#ctor(System.Drawing.Brush,System.Single)
  - System.Drawing.Pen.#ctor(System.Drawing.Color,System.Single)
  - System.Drawing.Pen.Alignment
  - System.Drawing.Pen.Brush
  - System.Drawing.Pen.Clone
  - System.Drawing.Pen.Color
  - System.Drawing.Pen.CompoundArray
  - System.Drawing.Pen.CustomEndCap
  - System.Drawing.Pen.CustomStartCap
  - System.Drawing.Pen.DashCap
  - System.Drawing.Pen.DashOffset
  - System.Drawing.Pen.DashPattern
  - System.Drawing.Pen.DashStyle
  - System.Drawing.Pen.Dispose
  - System.Drawing.Pen.EndCap
  - System.Drawing.Pen.Finalize
  - System.Drawing.Pen.LineJoin
  - System.Drawing.Pen.MiterLimit
  - System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix)
  - System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)
  - System.Drawing.Pen.PenType
  - System.Drawing.Pen.ResetTransform
  - System.Drawing.Pen.RotateTransform(System.Single)
  - System.Drawing.Pen.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)
  - System.Drawing.Pen.ScaleTransform(System.Single,System.Single)
  - System.Drawing.Pen.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  - System.Drawing.Pen.SetLineCap(System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.DashCap)
  - System.Drawing.Pen.StartCap
  - System.Drawing.Pen.Transform
  - System.Drawing.Pen.TranslateTransform(System.Single,System.Single)
  - System.Drawing.Pen.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  - System.Drawing.Pen.Width
  langs:
  - csharp
  name: Pen
  nameWithType: Pen
  fullName: System.Drawing.Pen
  type: Class
  summary: "定義用來繪製的直線和曲線的物件。 這個類別無法被繼承。"
  remarks: "畫筆會繪製指定的寬度和樣式的線條。 使用<xref:System.Drawing.Drawing2D.DashStyle>要繪製之短折線的多種不同的屬性。</xref:System.Drawing.Drawing2D.DashStyle> 由 Pen 所繪製的線條可填入各種填入樣式填滿，包含純色和紋理。 填滿樣式取決於筆刷或紋理做為填滿物件。"
  example:
  - "The following code example demonstrates constructing a Pen with a <xref:System.Drawing.Pen.Brush%2A> and the effects of setting the <xref:System.Drawing.Pen.LineJoin%2A> property on a Pen.  \n  \n This example is designed to be used with Windows Forms. Paste the code into a form and call the `ShowLineJoin` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.PensExample#1](~/add/codesnippet/csharp/t-system.drawing.pen_1.cs)]\n [!code-vb[System.Drawing.PensExample#1](~/add/codesnippet/visualbasic/t-system.drawing.pen_1.vb)]\n [!code-cpp[System.Drawing.PensExample#1](~/add/codesnippet/cpp/t-system.drawing.pen_1.cpp)]"
  syntax:
    content: 'public sealed class Pen : MarshalByRefObject, ICloneable, IDisposable'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  implements:
  - System.ICloneable
  - System.IDisposable
  inheritedMembers:
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Drawing.Pen.#ctor(System.Drawing.Brush)
  id: '#ctor(System.Drawing.Brush)'
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: Pen(Brush)
  nameWithType: Pen.Pen(Brush)
  fullName: System.Drawing.Pen.Pen(Brush)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "初始化的新執行個體<xref href=&quot;System.Drawing.Pen&quot;></xref>類別具有指定<xref href=&quot;System.Drawing.Brush&quot;> </xref>。"
  remarks: "<xref:System.Drawing.Pen.Brush%2A>屬性會決定如何<xref:System.Drawing.Pen>繪製線條。</xref:System.Drawing.Pen> </xref:System.Drawing.Pen.Brush%2A> 線條會繪製，如同它們是填滿的矩形，使用指定的<xref:System.Drawing.Brush>.</xref:System.Drawing.Brush>特性       <xref:System.Drawing.Pen.Width%2A>屬性的新<xref:System.Drawing.Pen>設為 1 （預設值）。</xref:System.Drawing.Pen> </xref:System.Drawing.Pen.Width%2A>"
  example:
  - "The following code example demonstrates constructing a <xref:System.Drawing.Pen> with a <xref:System.Drawing.Pen.Brush%2A> and the effects of setting the <xref:System.Drawing.Pen.LineJoin%2A> property on a <xref:System.Drawing.Pen>.  \n  \n This example is designed to be used with Windows Forms. Paste the code into a form and call the `ShowLineJoin` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.PensExample#1](~/add/codesnippet/csharp/m-system.drawing.pen.sha_2_1.cs)]\n [!code-vb[System.Drawing.PensExample#1](~/add/codesnippet/visualbasic/m-system.drawing.pen.sha_2_1.vb)]\n [!code-cpp[System.Drawing.PensExample#1](~/add/codesnippet/cpp/m-system.drawing.pen.sha_2_1.cpp)]"
  syntax:
    content: public Pen (System.Drawing.Brush brush);
    parameters:
    - id: brush
      type: System.Drawing.Brush
      description: "A <xref href=&quot;System.Drawing.Brush&quot;> </xref> ，決定填滿屬性，這個<xref href=&quot;System.Drawing.Pen&quot;> </xref>。"
  overload: System.Drawing.Pen.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>brush</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Pen.#ctor(System.Drawing.Color)
  id: '#ctor(System.Drawing.Color)'
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: Pen(Color)
  nameWithType: Pen.Pen(Color)
  fullName: System.Drawing.Pen.Pen(Color)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "初始化的新執行個體<xref href=&quot;System.Drawing.Pen&quot;></xref>類別使用指定的色彩。"
  remarks: "<xref:System.Drawing.Color>屬性設定為指定的色彩`color`參數。</xref:System.Drawing.Color> <xref:System.Drawing.Pen.Width%2A>屬性設定為 1 （預設值）。</xref:System.Drawing.Pen.Width%2A>"
  syntax:
    content: public Pen (System.Drawing.Color color);
    parameters:
    - id: color
      type: System.Drawing.Color
      description: "A <xref href=&quot;System.Drawing.Color&quot;> </xref>結構，表示這個色彩<xref href=&quot;System.Drawing.Pen&quot;> </xref>。"
  overload: System.Drawing.Pen.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Pen.#ctor(System.Drawing.Brush,System.Single)
  id: '#ctor(System.Drawing.Brush,System.Single)'
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: Pen(Brush,Single)
  nameWithType: Pen.Pen(Brush,Single)
  fullName: System.Drawing.Pen.Pen(Brush,Single)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "初始化的新執行個體<xref href=&quot;System.Drawing.Pen&quot;></xref>類別具有指定<xref href=&quot;System.Drawing.Brush&quot;></xref>和<xref:System.Drawing.Pen.Width*>。</xref:System.Drawing.Pen.Width*>"
  remarks: "<xref:System.Drawing.Brush>設定中指定的色彩為`brush`參數，<xref:System.Drawing.Pen.Width%2A>屬性設定中指定的值為`width`參數和單位設<xref:System.Drawing.GraphicsUnit>.</xref:System.Drawing.GraphicsUnit> </xref:System.Drawing.Pen.Width%2A> </xref:System.Drawing.Brush>       請注意，`brush`參數也會指定<xref:System.Drawing.Color>此<xref:System.Drawing.Pen>.</xref:System.Drawing.Pen>屬性</xref:System.Drawing.Color>       A`width`為 0 會導致<xref:System.Drawing.Pen>繪製如同寬度是 1。</xref:System.Drawing.Pen>"
  example:
  - "The following code example creates a <xref:System.Drawing.Pen> and demonstrates the effects of setting the <xref:System.Drawing.Pen.StartCap%2A> and <xref:System.Drawing.Pen.EndCap%2A> properties on a <xref:System.Drawing.Pen>.  \n  \n This example is designed to be used with Windows Forms. Paste the code into a form and call the `ShowStartAndEndCaps` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.ImageExample#3](~/add/codesnippet/csharp/m-system.drawing.pen.sha_0_1.cs)]\n [!code-cpp[System.Drawing.ImageExample#3](~/add/codesnippet/cpp/m-system.drawing.pen.sha_0_1.cpp)]\n [!code-vb[System.Drawing.ImageExample#3](~/add/codesnippet/visualbasic/m-system.drawing.pen.sha_0_1.vb)]"
  syntax:
    content: public Pen (System.Drawing.Brush brush, float width);
    parameters:
    - id: brush
      type: System.Drawing.Brush
      description: "A <xref href=&quot;System.Drawing.Brush&quot;> </xref> ，決定這個特性<xref href=&quot;System.Drawing.Pen&quot;> </xref>。"
    - id: width
      type: System.Single
      description: "新的寬度<xref href=&quot;System.Drawing.Pen&quot;> </xref>。"
  overload: System.Drawing.Pen.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>brush</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Pen.#ctor(System.Drawing.Color,System.Single)
  id: '#ctor(System.Drawing.Color,System.Single)'
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: Pen(Color,Single)
  nameWithType: Pen.Pen(Color,Single)
  fullName: System.Drawing.Pen.Pen(Color,Single)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "初始化的新執行個體<xref href=&quot;System.Drawing.Pen&quot;></xref>類別具有指定<xref href=&quot;System.Drawing.Color&quot;></xref>和<xref:System.Drawing.Pen.Width*>屬性。</xref:System.Drawing.Pen.Width*>"
  remarks: "<xref:System.Drawing.Color>屬性設定為指定的色彩`color`參數。</xref:System.Drawing.Color> <xref:System.Drawing.Pen.Width%2A>屬性設定中指定的值為`width`參數。</xref:System.Drawing.Pen.Width%2A> A`width`為 0 會導致<xref:System.Drawing.Pen>繪製如同寬度是 1。</xref:System.Drawing.Pen>"
  example:
  - "The following code example demonstrates creating a <xref:System.Drawing.Pen> and the effects of setting the <xref:System.Drawing.Pen.DashCap%2A>, <xref:System.Drawing.Pen.DashPattern%2A>, and <xref:System.Drawing.Graphics.SmoothingMode%2A> properties.  \n  \n This example is designed to be used with Windows Forms. Paste the code into a form and call the `ShowPensAndSmoothingMode` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing e as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.PensExample#3](~/add/codesnippet/csharp/m-system.drawing.pen.sha_1_1.cs)]\n [!code-vb[System.Drawing.PensExample#3](~/add/codesnippet/visualbasic/m-system.drawing.pen.sha_1_1.vb)]\n [!code-cpp[System.Drawing.PensExample#3](~/add/codesnippet/cpp/m-system.drawing.pen.sha_1_1.cpp)]"
  syntax:
    content: public Pen (System.Drawing.Color color, float width);
    parameters:
    - id: color
      type: System.Drawing.Color
      description: "A <xref href=&quot;System.Drawing.Color&quot;> </xref>結構，表示這個色彩<xref href=&quot;System.Drawing.Pen&quot;> </xref>。"
    - id: width
      type: System.Single
      description: "值，指出這個寬度<xref href=&quot;System.Drawing.Pen&quot;> </xref>。"
  overload: System.Drawing.Pen.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Pen.Alignment
  id: Alignment
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: Alignment
  nameWithType: Pen.Alignment
  fullName: System.Drawing.Pen.Alignment
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "取得或設定這個對齊<xref href=&quot;System.Drawing.Pen&quot;> </xref>。"
  remarks: "此屬性會決定如何<xref:System.Drawing.Pen>繪製封閉型曲線和多邊形。</xref:System.Drawing.Pen> <xref:System.Drawing.Drawing2D.PenAlignment>列舉型別指定五個值; 不過，只有兩個值 —<xref:System.Drawing.Drawing2D.PenAlignment>和<xref:System.Drawing.Drawing2D.PenAlignment>— 會變更繪製線條的外觀。</xref:System.Drawing.Drawing2D.PenAlignment> </xref:System.Drawing.Drawing2D.PenAlignment> </xref:System.Drawing.Drawing2D.PenAlignment> <xref:System.Drawing.Drawing2D.PenAlignment>預設值，這個屬性，並指定的畫筆寬度會集中在曲線或多邊形的外框。</xref:System.Drawing.Drawing2D.PenAlignment> 值為<xref:System.Drawing.Drawing2D.PenAlignment>這個屬性指定的畫筆寬度位於曲線或多邊形的外框。</xref:System.Drawing.Drawing2D.PenAlignment> 其他三個值， <xref:System.Drawing.Drawing2D.PenAlignment>， <xref:System.Drawing.Drawing2D.PenAlignment>，和<xref:System.Drawing.Drawing2D.PenAlignment>，將會導致內置畫筆。</xref:System.Drawing.Drawing2D.PenAlignment> </xref:System.Drawing.Drawing2D.PenAlignment> </xref:System.Drawing.Drawing2D.PenAlignment>       A<xref:System.Drawing.Pen>具有設為其對齊<xref:System.Drawing.Drawing2D.PenAlignment>會產生不可靠的結果，有時繪製內凹位置中，有時在置中的位置。</xref:System.Drawing.Drawing2D.PenAlignment> </xref:System.Drawing.Pen> 此外，內凹畫筆無法用來繪製複合線條和無法繪製短折線的<xref:System.Drawing.Drawing2D.DashCap>虛線大寫字</xref:System.Drawing.Drawing2D.DashCap>"
  syntax:
    content: public System.Drawing.Drawing2D.PenAlignment Alignment { get; set; }
    return:
      type: System.Drawing.Drawing2D.PenAlignment
      description: "A <xref href=&quot;System.Drawing.Drawing2D.PenAlignment&quot;> </xref> ，代表這個對齊<xref href=&quot;System.Drawing.Pen&quot;> </xref>。"
  overload: System.Drawing.Pen.Alignment*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "指定的值不是成員的<xref href=&quot;System.Drawing.Drawing2D.PenAlignment&quot;> </xref>。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "對齊屬性設定不可變的<xref href=&quot;System.Drawing.Pen&quot;> </xref>，例如所傳回的<xref href=&quot;System.Drawing.Pens&quot;></xref>類別。"
  platform:
  - net462
- uid: System.Drawing.Pen.Brush
  id: Brush
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: Brush
  nameWithType: Pen.Brush
  fullName: System.Drawing.Pen.Brush
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "取得或設定<xref href=&quot;System.Drawing.Brush&quot;> </xref> ，決定這個屬性<xref href=&quot;System.Drawing.Pen&quot;> </xref>。"
  remarks: "指派此屬性會使畫筆繪製填滿的直線和曲線。 它會覆寫<xref:System.Drawing.Color><xref:System.Drawing.Pen>.</xref:System.Drawing.Pen>屬性</xref:System.Drawing.Color>"
  syntax:
    content: public System.Drawing.Brush Brush { get; set; }
    return:
      type: System.Drawing.Brush
      description: "A <xref href=&quot;System.Drawing.Brush&quot;> </xref> ，決定這個屬性<xref href=&quot;System.Drawing.Pen&quot;> </xref>。"
  overload: System.Drawing.Pen.Brush*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "不可變的上設定的筆刷屬性<xref href=&quot;System.Drawing.Pen&quot;> </xref>，例如所傳回的<xref href=&quot;System.Drawing.Pens&quot;></xref>類別。"
  platform:
  - net462
- uid: System.Drawing.Pen.Clone
  id: Clone
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: Clone()
  nameWithType: Pen.Clone()
  fullName: System.Drawing.Pen.Clone()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "建立的完全相同的複本<xref href=&quot;System.Drawing.Pen&quot;> </xref>。"
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a <xref:System.Drawing.Pen>.  \n  \n-   Creates a copy of that pen.  \n  \n-   Draws a line to the screen, using the copy of the pen.  \n  \n [!code-cpp[System.Drawing.ClassicPenExamples#1](~/add/codesnippet/cpp/m-system.drawing.pen.clone_1.cpp)]\n [!code-cs[System.Drawing.ClassicPenExamples#1](~/add/codesnippet/csharp/m-system.drawing.pen.clone_1.cs)]\n [!code-vb[System.Drawing.ClassicPenExamples#1](~/add/codesnippet/visualbasic/m-system.drawing.pen.clone_1.vb)]"
  syntax:
    content: public object Clone ();
    parameters: []
    return:
      type: System.Object
      description: "<xref:System.Object>可轉換成<xref href=&quot;System.Drawing.Pen&quot;> </xref>。</xref:System.Object>"
  overload: System.Drawing.Pen.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Pen.Color
  id: Color
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: Color
  nameWithType: Pen.Color
  fullName: System.Drawing.Pen.Color
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "取得或設定這個色彩<xref href=&quot;System.Drawing.Pen&quot;> </xref>。"
  syntax:
    content: public System.Drawing.Color Color { get; set; }
    return:
      type: System.Drawing.Color
      description: "A <xref href=&quot;System.Drawing.Color&quot;> </xref>結構，表示這個色彩<xref href=&quot;System.Drawing.Pen&quot;> </xref>。"
  overload: System.Drawing.Pen.Color*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "色彩屬性設定不可變的<xref href=&quot;System.Drawing.Pen&quot;> </xref>，例如所傳回的<xref href=&quot;System.Drawing.Pens&quot;></xref>類別。"
  platform:
  - net462
- uid: System.Drawing.Pen.CompoundArray
  id: CompoundArray
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: CompoundArray
  nameWithType: Pen.CompoundArray
  fullName: System.Drawing.Pen.CompoundArray
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "取得或設定指定複合畫筆的值陣列。 複合畫筆會繪製由平行線和間距組成的複合直線。"
  remarks: "複合直線會組成替代平行線和間距的變動寬度。 陣列中的值會指定複合畫筆寬度的相對行的每個元件的起點。 陣列中的第一個值，指定第一個元件 （列） 的位置為距離的分數的畫筆寬度。 陣列中的第二個值會指定距離的分數為下一個元件 （空格） 開頭的畫筆寬度。 陣列中的最終值會指定最後一個元件的結束位置。       假設您想的畫筆來繪製兩條平行線的第一行寬度所在的畫筆寬度的 20%，空間用來分隔兩個線條的寬度是 50%的畫筆 &quot; s 寬度，以及第二行的寬度為百分之 30 的畫筆寬度。 藉由建立啟動<xref:System.Drawing.Pen>和實際數字的陣列。</xref:System.Drawing.Pen> 設定複合陣列值 0.0、 0.2，0.7 和 1.0 的陣列傳遞給這個屬性。       如果未設定此屬性<xref:System.Drawing.Pen>具有<xref:System.Drawing.Pen.Alignment%2A>屬性設定為<xref:System.Drawing.Drawing2D.PenAlignment>.</xref:System.Drawing.Drawing2D.PenAlignment></xref:System.Drawing.Pen.Alignment%2A>其</xref:System.Drawing.Pen>"
  syntax:
    content: public float[] CompoundArray { get; set; }
    return:
      type: System.Single[]
      description: "實際數字，指定複合陣列的陣列。 陣列中的項目必須是以遞增次序順序，不小於 0，且不大於 1。"
  overload: System.Drawing.Pen.CompoundArray*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "CompoundArray 屬性設定不可變的<xref href=&quot;System.Drawing.Pen&quot;> </xref>，例如所傳回的<xref href=&quot;System.Drawing.Pens&quot;></xref>類別。"
  platform:
  - net462
- uid: System.Drawing.Pen.CustomEndCap
  id: CustomEndCap
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: CustomEndCap
  nameWithType: Pen.CustomEndCap
  fullName: System.Drawing.Pen.CustomEndCap
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "取得或設定自訂帽，使用與此繪製的直線最後<xref href=&quot;System.Drawing.Pen&quot;> </xref>。"
  syntax:
    content: public System.Drawing.Drawing2D.CustomLineCap CustomEndCap { get; set; }
    return:
      type: System.Drawing.Drawing2D.CustomLineCap
      description: "A <xref href=&quot;System.Drawing.Drawing2D.CustomLineCap&quot;> </xref> ，代表位於與此繪製的直線末端所用的帽緣<xref href=&quot;System.Drawing.Pen&quot;> </xref>。"
  overload: System.Drawing.Pen.CustomEndCap*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "CustomEndCap 屬性設定不可變的<xref href=&quot;System.Drawing.Pen&quot;> </xref>，例如所傳回的<xref href=&quot;System.Drawing.Pens&quot;></xref>類別。"
  platform:
  - net462
- uid: System.Drawing.Pen.CustomStartCap
  id: CustomStartCap
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: CustomStartCap
  nameWithType: Pen.CustomStartCap
  fullName: System.Drawing.Pen.CustomStartCap
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "取得或設定自訂帽，使用與此繪製的直線開頭<xref href=&quot;System.Drawing.Pen&quot;> </xref>。"
  syntax:
    content: public System.Drawing.Drawing2D.CustomLineCap CustomStartCap { get; set; }
    return:
      type: System.Drawing.Drawing2D.CustomLineCap
      description: "A <xref href=&quot;System.Drawing.Drawing2D.CustomLineCap&quot;> </xref> ，代表位於與此繪製的直線開端所用的帽緣<xref href=&quot;System.Drawing.Pen&quot;> </xref>。"
  overload: System.Drawing.Pen.CustomStartCap*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "CustomStartCap 屬性設定不可變的<xref href=&quot;System.Drawing.Pen&quot;> </xref>，例如所傳回的<xref href=&quot;System.Drawing.Pens&quot;></xref>類別。"
  platform:
  - net462
- uid: System.Drawing.Pen.DashCap
  id: DashCap
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: DashCap
  nameWithType: Pen.DashCap
  fullName: System.Drawing.Pen.DashCap
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "取得或設定帽緣樣式，用於組成以這個繪製短折線的虛線結尾<xref href=&quot;System.Drawing.Pen&quot;> </xref>。"
  remarks: "未設定這個屬性為<xref:System.Drawing.Drawing2D.DashCap>如果<xref:System.Drawing.Pen>具有其<xref:System.Drawing.Pen.Alignment%2A>屬性設定為<xref:System.Drawing.Drawing2D.PenAlignment>.</xref:System.Drawing.Drawing2D.PenAlignment> </xref:System.Drawing.Pen.Alignment%2A> </xref:System.Drawing.Pen> </xref:System.Drawing.Drawing2D.DashCap>"
  example:
  - "The following code example demonstrates creating a <xref:System.Drawing.Pen> and the effects of setting the DashCap, <xref:System.Drawing.Pen.DashPattern%2A>, and <xref:System.Drawing.Graphics.SmoothingMode%2A> properties.  \n  \n This example is designed to be used with Windows Forms. Paste the code into a form and call the `ShowPensAndSmoothingMode` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.PensExample#3](~/add/codesnippet/csharp/p-system.drawing.pen.das_0_1.cs)]\n [!code-vb[System.Drawing.PensExample#3](~/add/codesnippet/visualbasic/p-system.drawing.pen.das_0_1.vb)]\n [!code-cpp[System.Drawing.PensExample#3](~/add/codesnippet/cpp/p-system.drawing.pen.das_0_1.cpp)]"
  syntax:
    content: public System.Drawing.Drawing2D.DashCap DashCap { get; set; }
    return:
      type: System.Drawing.Drawing2D.DashCap
      description: "其中一個<xref href=&quot;System.Drawing.Drawing2D.DashCap&quot;></xref>值，表示帽緣樣式，用於在開頭和結尾組成以這個繪製短折線的虛線<xref href=&quot;System.Drawing.Pen&quot;> </xref>。"
  overload: System.Drawing.Pen.DashCap*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "指定的值不是成員的<xref href=&quot;System.Drawing.Drawing2D.DashCap&quot;> </xref>。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "DashCap 屬性設定不可變的<xref href=&quot;System.Drawing.Pen&quot;> </xref>，例如所傳回的<xref href=&quot;System.Drawing.Pens&quot;></xref>類別。"
  platform:
  - net462
- uid: System.Drawing.Pen.DashOffset
  id: DashOffset
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: DashOffset
  nameWithType: Pen.DashOffset
  fullName: System.Drawing.Pen.DashOffset
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "取得或設定在行首至虛線圖樣開端的距離。"
  syntax:
    content: public float DashOffset { get; set; }
    return:
      type: System.Single
      description: "從這一行開頭至虛線圖樣開端的距離。"
  overload: System.Drawing.Pen.DashOffset*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "DashOffset 屬性設定不可變的<xref href=&quot;System.Drawing.Pen&quot;> </xref>，例如所傳回的<xref href=&quot;System.Drawing.Pens&quot;></xref>類別。"
  platform:
  - net462
- uid: System.Drawing.Pen.DashPattern
  id: DashPattern
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: DashPattern
  nameWithType: Pen.DashPattern
  fullName: System.Drawing.Pen.DashPattern
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "取得或設定自訂虛線和間距的陣列。"
  remarks: "將值指派給以外`null`給這個屬性會設定<xref:System.Drawing.Drawing2D.DashStyle>這個<xref:System.Drawing.Pen>至<xref:System.Drawing.Drawing2D.DashStyle>。</xref:System.Drawing.Drawing2D.DashStyle></xref:System.Drawing.Pen>屬性</xref:System.Drawing.Drawing2D.DashStyle>       中的項目`dashArray`陣列虛線圖樣中設定每個虛線和空間的長度。 第一個項目集虛線的長度，第二個元素設定間距的長度，第三個元素設定的虛線和等等的長度。 因此，每個項目應該非零的正數。       每個虛線和虛線圖樣中的空間的長度是陣列中的項目值的產品和<xref:System.Drawing.Pen>.</xref:System.Drawing.Pen>寬度"
  example:
  - "The following code example demonstrates the effects of setting the <xref:System.Drawing.Pen.DashCap%2A>, DashPattern, and <xref:System.Drawing.Graphics.SmoothingMode%2A> properties.  \n  \n This example is designed to be used with Windows Forms. Paste the code into a form and call the `ShowPensAndSmoothingMode` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.PensExample#3](~/add/codesnippet/csharp/p-system.drawing.pen.das_1_1.cs)]\n [!code-vb[System.Drawing.PensExample#3](~/add/codesnippet/visualbasic/p-system.drawing.pen.das_1_1.vb)]\n [!code-cpp[System.Drawing.PensExample#3](~/add/codesnippet/cpp/p-system.drawing.pen.das_1_1.cpp)]"
  syntax:
    content: public float[] DashPattern { get; set; }
    return:
      type: System.Single[]
      description: "實際數字的陣列，指定的虛線和間距折線中的交替的長度。"
  overload: System.Drawing.Pen.DashPattern*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "DashPattern 屬性設定不可變的<xref href=&quot;System.Drawing.Pen&quot;> </xref>，例如所傳回的<xref href=&quot;System.Drawing.Pens&quot;></xref>類別。"
  platform:
  - net462
- uid: System.Drawing.Pen.DashStyle
  id: DashStyle
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: DashStyle
  nameWithType: Pen.DashStyle
  fullName: System.Drawing.Pen.DashStyle
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "取得或設定與這個繪製短折線所使用的樣式<xref href=&quot;System.Drawing.Pen&quot;> </xref>。"
  remarks: "值為<xref:System.Drawing.Drawing2D.DashStyle>這個屬性指定自訂模式的虛線和間距，定義的<xref:System.Drawing.Pen.DashPattern%2A>屬性，組成以這個<xref:System.Drawing.Pen>.</xref:System.Drawing.Pen>繪製線條</xref:System.Drawing.Pen.DashPattern%2A></xref:System.Drawing.Drawing2D.DashStyle> 如果這個屬性的值為<xref:System.Drawing.Drawing2D.DashStyle>和值<xref:System.Drawing.Pen.DashPattern%2A>屬性是`null`，畫筆繪製實線。</xref:System.Drawing.Pen.DashPattern%2A> </xref:System.Drawing.Drawing2D.DashStyle>"
  syntax:
    content: public System.Drawing.Drawing2D.DashStyle DashStyle { get; set; }
    return:
      type: System.Drawing.Drawing2D.DashStyle
      description: "A <xref href=&quot;System.Drawing.Drawing2D.DashStyle&quot;> </xref> ，代表與這個繪製短折線所使用的樣式<xref href=&quot;System.Drawing.Pen&quot;> </xref>。"
  overload: System.Drawing.Pen.DashStyle*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "DashStyle 屬性設定不可變的<xref href=&quot;System.Drawing.Pen&quot;> </xref>，例如所傳回的<xref href=&quot;System.Drawing.Pens&quot;></xref>類別。"
  platform:
  - net462
- uid: System.Drawing.Pen.Dispose
  id: Dispose
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: Dispose()
  nameWithType: Pen.Dispose()
  fullName: System.Drawing.Pen.Dispose()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "所使用的資源全部釋出<xref href=&quot;System.Drawing.Pen&quot;> </xref>。"
  remarks: "呼叫 Dispose 允許所使用的資源<xref:System.Drawing.Brush>都重新配置用於其他用途。</xref:System.Drawing.Brush>       當您完成使用<xref:System.Drawing.Pen>.</xref:System.Drawing.Pen>呼叫 Dispose Dispose 方法會使<xref:System.Drawing.Pen>中無法使用的狀態。</xref:System.Drawing.Pen> 在呼叫 Dispose 之後，您必須釋放所有參考<xref:System.Drawing.Pen>讓記憶體回收行程可以回收記憶體的<xref:System.Drawing.Pen>所佔用。</xref:System.Drawing.Pen> </xref:System.Drawing.Pen> 如需詳細資訊，請參閱[清除 Unmanaged 資源上](~/add/includes/ajax-current-ext-md.md)和[實作 Dispose 方法](~/add/includes/ajax-current-ext-md.md)。      > [!NOTE] > 永遠呼叫 Dispose 之後，再放開您的最後一個參考至<xref:System.Drawing.Pen>。</xref:System.Drawing.Pen> 否則，它所使用的資源將不會釋放直到記憶體回收行程呼叫<xref:System.Drawing.Pen>物件的`Finalize`方法。</xref:System.Drawing.Pen>"
  example:
  - "The following code example demonstrates the effects of setting the <xref:System.Drawing.Pen.Width%2A> and <xref:System.Drawing.Pen.LineJoin%2A> properties, and shows how to call the Dispose method for a <xref:System.Drawing.Pen>.  \n  \n This example is designed to be used with Windows Forms. Paste the code into a form and call the `ShowLineJoin` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.PensExample#1](~/add/codesnippet/csharp/m-system.drawing.pen.dis_1.cs)]\n [!code-vb[System.Drawing.PensExample#1](~/add/codesnippet/visualbasic/m-system.drawing.pen.dis_1.vb)]\n [!code-cpp[System.Drawing.PensExample#1](~/add/codesnippet/cpp/m-system.drawing.pen.dis_1.cpp)]"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Drawing.Pen.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Pen.EndCap
  id: EndCap
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: EndCap
  nameWithType: Pen.EndCap
  fullName: System.Drawing.Pen.EndCap
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "取得或設定帽緣樣式，用於與此繪製的直線末端<xref href=&quot;System.Drawing.Pen&quot;> </xref>。"
  remarks: ''
  example:
  - "The following code example demonstrates the effects of setting the <xref:System.Drawing.Pen.StartCap%2A> and EndCap properties on a <xref:System.Drawing.Pen>.  \n  \n This example is designed to be used with Windows Forms. Paste the code into a form and call the `ShowStartAndEndCaps` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.PensExample#2](~/add/codesnippet/csharp/p-system.drawing.pen.end_1.cs)]\n [!code-vb[System.Drawing.PensExample#2](~/add/codesnippet/visualbasic/p-system.drawing.pen.end_1.vb)]\n [!code-cpp[System.Drawing.PensExample#2](~/add/codesnippet/cpp/p-system.drawing.pen.end_1.cpp)]"
  syntax:
    content: public System.Drawing.Drawing2D.LineCap EndCap { get; set; }
    return:
      type: System.Drawing.Drawing2D.LineCap
      description: "其中一個<xref href=&quot;System.Drawing.Drawing2D.LineCap&quot;></xref>值，表示帽緣樣式，用於與此繪製的直線末端<xref href=&quot;System.Drawing.Pen&quot;> </xref>。"
  overload: System.Drawing.Pen.EndCap*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "指定的值不是成員的<xref href=&quot;System.Drawing.Drawing2D.LineCap&quot;> </xref>。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "EndCap 屬性設定不可變的<xref href=&quot;System.Drawing.Pen&quot;> </xref>，例如所傳回的<xref href=&quot;System.Drawing.Pens&quot;></xref>類別。"
  platform:
  - net462
- uid: System.Drawing.Pen.Finalize
  id: Finalize
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: Finalize()
  nameWithType: Pen.Finalize()
  fullName: System.Drawing.Pen.Finalize()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "允許物件嘗試釋放資源，並透過記憶體回收開始前執行其他清除作業。"
  syntax:
    content: ~Pen ();
    parameters: []
  overload: System.Drawing.Pen.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Pen.LineJoin
  id: LineJoin
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: LineJoin
  nameWithType: Pen.LineJoin
  fullName: System.Drawing.Pen.LineJoin
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "取得或設定與這個繪製兩個連續行 for the ends of 樣式<xref href=&quot;System.Drawing.Pen&quot;> </xref>。"
  remarks: "線聯結是由其結束符合或重疊的兩個線條的一般區域。 有三個線條聯結樣式︰ 儀表、 斜面，和捨入。  當您指定<xref:System.Drawing.Pen>物件時，聯結樣式將會套用到所有連接的直線，使用該畫筆繪製任何<xref:System.Drawing.Drawing2D.GraphicsPath>物件中的線條聯結樣式。下圖顯示斜面的線條聯結範例的結果。</xref:System.Drawing.Drawing2D.GraphicsPath> </xref:System.Drawing.Pen>       ![畫筆](~/add/media/pens5.gif &quot;畫筆&quot;)"
  example:
  - "The following code example demonstrates the effects of setting the <xref:System.Drawing.Pen.Width%2A> and LineJoin properties on a <xref:System.Drawing.Pen>.  \n  \n This example is designed to be used with Windows Forms. Paste the code into a form and call the `ShowLineJoin` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs> .  \n  \n [!code-cs[System.Drawing.PensExample#1](~/add/codesnippet/csharp/p-system.drawing.pen.lin_1.cs)]\n [!code-vb[System.Drawing.PensExample#1](~/add/codesnippet/visualbasic/p-system.drawing.pen.lin_1.vb)]\n [!code-cpp[System.Drawing.PensExample#1](~/add/codesnippet/cpp/p-system.drawing.pen.lin_1.cpp)]"
  syntax:
    content: public System.Drawing.Drawing2D.LineJoin LineJoin { get; set; }
    return:
      type: System.Drawing.Drawing2D.LineJoin
      description: "A <xref href=&quot;System.Drawing.Drawing2D.LineJoin&quot;> </xref>代表聯結樣式 for the ends of 繪製這兩個連續行<xref href=&quot;System.Drawing.Pen&quot;> </xref>。"
  overload: System.Drawing.Pen.LineJoin*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "LineJoin 屬性設定不可變的<xref href=&quot;System.Drawing.Pen&quot;> </xref>，例如所傳回的<xref href=&quot;System.Drawing.Pens&quot;></xref>類別。"
  platform:
  - net462
- uid: System.Drawing.Pen.MiterLimit
  id: MiterLimit
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: MiterLimit
  nameWithType: Pen.MiterLimit
  fullName: System.Drawing.Pen.MiterLimit
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "取得或設定斜接角上的接合厚度限制。"
  remarks: "斜接角長度是從內部聯結線牆面的交集的距離，外部聯結線牆面的交集。 小型兩行之間的角度時，斜接角長度可能很大。 斜接角限制為筆劃寬度斜接角長度的最大允許的比率。 預設值為 10.0 f。       如果交集的聯結斜接角長度超過限制的聯結，聯結將斜保持聯結的交集的限制內。"
  syntax:
    content: public float MiterLimit { get; set; }
    return:
      type: System.Single
      description: "斜接角上接合厚度限制。"
  overload: System.Drawing.Pen.MiterLimit*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "MiterLimit 屬性設定不可變的<xref href=&quot;System.Drawing.Pen&quot;> </xref>，例如所傳回的<xref href=&quot;System.Drawing.Pens&quot;></xref>類別。"
  platform:
  - net462
- uid: System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix)
  id: MultiplyTransform(System.Drawing.Drawing2D.Matrix)
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: MultiplyTransform(Matrix)
  nameWithType: Pen.MultiplyTransform(Matrix)
  fullName: System.Drawing.Pen.MultiplyTransform(Matrix)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "轉換矩陣乘以此<xref href=&quot;System.Drawing.Pen&quot;></xref>指定<xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref>。"
  remarks: "這個方法的前面加上指定的乘法矩陣`matrix`乘法運算的轉換矩陣的參數。"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a <xref:System.Drawing.Pen>.  \n  \n-   Draws a line to the screen.  \n  \n-   Multiplies the transformation matrix of the pen by the specified matrix.  \n  \n-   Draws a line with the transformed pen.  \n  \n [!code-cpp[System.Drawing.ClassicPenExamples#2](~/add/codesnippet/cpp/m-system.drawing.pen.mul_1.cpp)]\n [!code-cs[System.Drawing.ClassicPenExamples#2](~/add/codesnippet/csharp/m-system.drawing.pen.mul_1.cs)]\n [!code-vb[System.Drawing.ClassicPenExamples#2](~/add/codesnippet/visualbasic/m-system.drawing.pen.mul_1.vb)]"
  syntax:
    content: public void MultiplyTransform (System.Drawing.Drawing2D.Matrix matrix);
    parameters:
    - id: matrix
      type: System.Drawing.Drawing2D.Matrix
      description: "<xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref>的轉換矩陣要乘以的物件。"
  overload: System.Drawing.Pen.MultiplyTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)
  id: MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: MultiplyTransform(Matrix,MatrixOrder)
  nameWithType: Pen.MultiplyTransform(Matrix,MatrixOrder)
  fullName: System.Drawing.Pen.MultiplyTransform(Matrix,MatrixOrder)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "轉換矩陣乘以此<xref href=&quot;System.Drawing.Pen&quot;></xref>指定<xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;></xref>指定的順序。"
  remarks: "這個方法會使用<xref:System.Drawing.Drawing2D.MatrixOrder>列舉項目 （在前面加上或附加） 所指定`order`參數來執行乘法運算。</xref:System.Drawing.Drawing2D.MatrixOrder>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a <xref:System.Drawing.Pen>.  \n  \n-   Draws a line to the screen.  \n  \n-   Multiplies the transformation matrix of the pen by the specified matrix.  \n  \n-   Draws a line with the transformed pen.  \n  \n [!code-cpp[System.Drawing.ClassicPenExamples#3](~/add/codesnippet/cpp/b3caf9f4-4a37-409d-bccb-_1.cpp)]\n [!code-cs[System.Drawing.ClassicPenExamples#3](~/add/codesnippet/csharp/b3caf9f4-4a37-409d-bccb-_1.cs)]\n [!code-vb[System.Drawing.ClassicPenExamples#3](~/add/codesnippet/visualbasic/b3caf9f4-4a37-409d-bccb-_1.vb)]"
  syntax:
    content: public void MultiplyTransform (System.Drawing.Drawing2D.Matrix matrix, System.Drawing.Drawing2D.MatrixOrder order);
    parameters:
    - id: matrix
      type: System.Drawing.Drawing2D.Matrix
      description: "<xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref>所要乘以的轉換矩陣。"
    - id: order
      type: System.Drawing.Drawing2D.MatrixOrder
      description: "用來執行乘法運算中的順序。"
  overload: System.Drawing.Pen.MultiplyTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Pen.PenType
  id: PenType
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: PenType
  nameWithType: Pen.PenType
  fullName: System.Drawing.Pen.PenType
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "取得與這個繪製的直線樣式<xref href=&quot;System.Drawing.Pen&quot;> </xref>。"
  remarks: "A<xref:System.Drawing.Pen>實線、 填滿的直線或材質的線條，根據指定的樣式來的成員可以繪製<xref:System.Drawing.Drawing2D.PenType>列舉型別。</xref:System.Drawing.Drawing2D.PenType> </xref:System.Drawing.Pen>"
  syntax:
    content: public System.Drawing.Drawing2D.PenType PenType { get; }
    return:
      type: System.Drawing.Drawing2D.PenType
      description: "A <xref href=&quot;System.Drawing.Drawing2D.PenType&quot;> </xref>列舉，指定與此繪製的直線樣式<xref href=&quot;System.Drawing.Pen&quot;> </xref>。"
  overload: System.Drawing.Pen.PenType*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Pen.ResetTransform
  id: ResetTransform
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: ResetTransform()
  nameWithType: Pen.ResetTransform()
  fullName: System.Drawing.Pen.ResetTransform()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "幾何轉換矩陣重設這個<xref href=&quot;System.Drawing.Pen&quot;></xref>身分識別。"
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a <xref:System.Drawing.Pen>.  \n  \n-   Sets the transformation matrix of the pen to scale 2 times in the x-axis direction.  \n  \n-   Draws a line to the screen.  \n  \n-   Resets the transformation matrix to identity.  \n  \n-   Draws a second line to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicPenExamples#4](~/add/codesnippet/cpp/m-system.drawing.pen.res_1.cpp)]\n [!code-cs[System.Drawing.ClassicPenExamples#4](~/add/codesnippet/csharp/m-system.drawing.pen.res_1.cs)]\n [!code-vb[System.Drawing.ClassicPenExamples#4](~/add/codesnippet/visualbasic/m-system.drawing.pen.res_1.vb)]"
  syntax:
    content: public void ResetTransform ();
    parameters: []
  overload: System.Drawing.Pen.ResetTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Pen.RotateTransform(System.Single)
  id: RotateTransform(System.Single)
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: RotateTransform(Single)
  nameWithType: Pen.RotateTransform(Single)
  fullName: System.Drawing.Pen.RotateTransform(Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "將指定的角度來局部幾何轉換。 這個方法會附加之前要轉換的旋轉。"
  remarks: "因為畫筆的形狀是循環，所以旋轉沒有任何視覺效果除非 x 或 y 軸方向縮放畫筆。"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a <xref:System.Drawing.Pen>.  \n  \n-   Draws a rectangle using the pen.  \n  \n-   Scales the pen by 2 times in the x-axis direction.  \n  \n-   Rotates the pen 90 degrees clockwise.  \n  \n-   Draws a second rectangle to demonstrate the difference.  \n  \n [!code-cpp[System.Drawing.ClassicPenExamples#5](~/add/codesnippet/cpp/m-system.drawing.pen.rot_1.cpp)]\n [!code-cs[System.Drawing.ClassicPenExamples#5](~/add/codesnippet/csharp/m-system.drawing.pen.rot_1.cs)]\n [!code-vb[System.Drawing.ClassicPenExamples#5](~/add/codesnippet/visualbasic/m-system.drawing.pen.rot_1.vb)]"
  syntax:
    content: public void RotateTransform (float angle);
    parameters:
    - id: angle
      type: System.Single
      description: "旋轉的角度。"
  overload: System.Drawing.Pen.RotateTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Pen.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)
  id: RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: RotateTransform(Single,MatrixOrder)
  nameWithType: Pen.RotateTransform(Single,MatrixOrder)
  fullName: System.Drawing.Pen.RotateTransform(Single,MatrixOrder)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "將指定的角度，以指定的順序來局部幾何轉換。"
  remarks: "因為畫筆的形狀是循環，所以旋轉沒有任何視覺效果除非 x 或 y 軸方向縮放畫筆。"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a <xref:System.Drawing.Pen>.  \n  \n-   Scales the pen by 2 times in the x-axis direction.  \n  \n-   Draws a rectangle using the pen.  \n  \n-   Rotates the pen 90 degrees clockwise.  \n  \n-   Draws a second rectangle to demonstrate the difference.  \n  \n [!code-cpp[System.Drawing.ClassicPenExamples#6](~/add/codesnippet/cpp/35c127d1-4f45-4168-8641-_1.cpp)]\n [!code-cs[System.Drawing.ClassicPenExamples#6](~/add/codesnippet/csharp/35c127d1-4f45-4168-8641-_1.cs)]\n [!code-vb[System.Drawing.ClassicPenExamples#6](~/add/codesnippet/visualbasic/35c127d1-4f45-4168-8641-_1.vb)]"
  syntax:
    content: public void RotateTransform (float angle, System.Drawing.Drawing2D.MatrixOrder order);
    parameters:
    - id: angle
      type: System.Single
      description: "旋轉的角度。"
    - id: order
      type: System.Drawing.Drawing2D.MatrixOrder
      description: "A <xref href=&quot;System.Drawing.Drawing2D.MatrixOrder&quot;> </xref> ，指定要附加或預先附加旋轉矩陣。"
  overload: System.Drawing.Pen.RotateTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Pen.ScaleTransform(System.Single,System.Single)
  id: ScaleTransform(System.Single,System.Single)
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: ScaleTransform(Single,Single)
  nameWithType: Pen.ScaleTransform(Single,Single)
  fullName: System.Drawing.Pen.ScaleTransform(Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "根據指定的因數來縮放局部幾何轉換。 這個方法會附加之前轉換的縮放矩陣。"
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n Creates a <xref:System.Drawing.Pen>.  \n  \n Draws a rectangle using the pen.  \n  \n Scales the pen by 2 times in the x-axis direction.  \n  \n Draws a second rectangle to demonstrate the difference.  \n  \n [!code-cpp[System.Drawing.ClassicPenExamples#7](~/add/codesnippet/cpp/m-system.drawing.pen.sca_1.cpp)]\n [!code-cs[System.Drawing.ClassicPenExamples#7](~/add/codesnippet/csharp/m-system.drawing.pen.sca_1.cs)]\n [!code-vb[System.Drawing.ClassicPenExamples#7](~/add/codesnippet/visualbasic/m-system.drawing.pen.sca_1.vb)]"
  syntax:
    content: public void ScaleTransform (float sx, float sy);
    parameters:
    - id: sx
      type: System.Single
      description: "要在 x 軸方向縮放轉換的因數。"
    - id: sy
      type: System.Single
      description: "要在 y 軸方向縮放轉換的因數。"
  overload: System.Drawing.Pen.ScaleTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Pen.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  id: ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: ScaleTransform(Single,Single,MatrixOrder)
  nameWithType: Pen.ScaleTransform(Single,Single,MatrixOrder)
  fullName: System.Drawing.Pen.ScaleTransform(Single,Single,MatrixOrder)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "指定的順序指定的因數來縮放局部幾何轉換。"
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a <xref:System.Drawing.Pen>.  \n  \n-   Draws a rectangle using the pen.  \n  \n-   Scales the pen by 2 times in the x-axis direction.  \n  \n-   Draws a second rectangle to demonstrate the difference.  \n  \n [!code-cpp[System.Drawing.ClassicPenExamples#8](~/add/codesnippet/cpp/f408f2ab-3827-481d-becb-_1.cpp)]\n [!code-cs[System.Drawing.ClassicPenExamples#8](~/add/codesnippet/csharp/f408f2ab-3827-481d-becb-_1.cs)]\n [!code-vb[System.Drawing.ClassicPenExamples#8](~/add/codesnippet/visualbasic/f408f2ab-3827-481d-becb-_1.vb)]"
  syntax:
    content: public void ScaleTransform (float sx, float sy, System.Drawing.Drawing2D.MatrixOrder order);
    parameters:
    - id: sx
      type: System.Single
      description: "要在 x 軸方向縮放轉換的因數。"
    - id: sy
      type: System.Single
      description: "要在 y 軸方向縮放轉換的因數。"
    - id: order
      type: System.Drawing.Drawing2D.MatrixOrder
      description: "A <xref href=&quot;System.Drawing.Drawing2D.MatrixOrder&quot;> </xref> ，指定要附加或預先附加縮放矩陣。"
  overload: System.Drawing.Pen.ScaleTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Pen.SetLineCap(System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.DashCap)
  id: SetLineCap(System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.DashCap)
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: SetLineCap(LineCap,LineCap,DashCap)
  nameWithType: Pen.SetLineCap(LineCap,LineCap,DashCap)
  fullName: System.Drawing.Pen.SetLineCap(LineCap,LineCap,DashCap)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "設定值可決定用來繪製由此結束線條端點樣式<xref href=&quot;System.Drawing.Pen&quot;> </xref>。"
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code creates a <xref:System.Drawing.Pen> and sets it to draw arrow anchor caps at the beginning of lines:  \n  \n [!code-cpp[System.Drawing.ClassicPenExamples#9](~/add/codesnippet/cpp/40b79849-2bf1-4135-844f-_1.cpp)]\n [!code-cs[System.Drawing.ClassicPenExamples#9](~/add/codesnippet/csharp/40b79849-2bf1-4135-844f-_1.cs)]\n [!code-vb[System.Drawing.ClassicPenExamples#9](~/add/codesnippet/visualbasic/40b79849-2bf1-4135-844f-_1.vb)]"
  syntax:
    content: public void SetLineCap (System.Drawing.Drawing2D.LineCap startCap, System.Drawing.Drawing2D.LineCap endCap, System.Drawing.Drawing2D.DashCap dashCap);
    parameters:
    - id: startCap
      type: System.Drawing.Drawing2D.LineCap
      description: "A <xref href=&quot;System.Drawing.Drawing2D.LineCap&quot;> </xref>表示帽緣樣式，用於與此繪製的直線開端<xref href=&quot;System.Drawing.Pen&quot;> </xref>。"
    - id: endCap
      type: System.Drawing.Drawing2D.LineCap
      description: "A <xref href=&quot;System.Drawing.Drawing2D.LineCap&quot;> </xref>表示帽緣樣式，用於與此繪製的直線末端<xref href=&quot;System.Drawing.Pen&quot;> </xref>。"
    - id: dashCap
      type: System.Drawing.Drawing2D.DashCap
      description: "A <xref href=&quot;System.Drawing.Drawing2D.LineCap&quot;> </xref>表示帽緣樣式，若要使用的開頭或結尾與這個繪製短折線<xref href=&quot;System.Drawing.Pen&quot;> </xref>。"
  overload: System.Drawing.Pen.SetLineCap*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Pen.StartCap
  id: StartCap
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: StartCap
  nameWithType: Pen.StartCap
  fullName: System.Drawing.Pen.StartCap
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "取得或設定帽緣樣式，用於與此繪製的直線開頭<xref href=&quot;System.Drawing.Pen&quot;> </xref>。"
  remarks: ''
  example:
  - "The following code example demonstrates the effects of setting the StartCap and <xref:System.Drawing.Pen.EndCap%2A> properties on a <xref:System.Drawing.Pen>.  \n  \n This example is designed to be used with Windows Forms. Paste the code into a form and call the `ShowStartAndEndCaps` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.PensExample#2](~/add/codesnippet/csharp/p-system.drawing.pen.sta_1.cs)]\n [!code-vb[System.Drawing.PensExample#2](~/add/codesnippet/visualbasic/p-system.drawing.pen.sta_1.vb)]\n [!code-cpp[System.Drawing.PensExample#2](~/add/codesnippet/cpp/p-system.drawing.pen.sta_1.cpp)]"
  syntax:
    content: public System.Drawing.Drawing2D.LineCap StartCap { get; set; }
    return:
      type: System.Drawing.Drawing2D.LineCap
      description: "其中一個<xref href=&quot;System.Drawing.Drawing2D.LineCap&quot;></xref>值，表示帽緣樣式，用於與此繪製的直線開頭<xref href=&quot;System.Drawing.Pen&quot;> </xref>。"
  overload: System.Drawing.Pen.StartCap*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "指定的值不是成員的<xref href=&quot;System.Drawing.Drawing2D.LineCap&quot;> </xref>。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "StartCap 屬性設定不可變的<xref href=&quot;System.Drawing.Pen&quot;> </xref>，例如所傳回的<xref href=&quot;System.Drawing.Pens&quot;></xref>類別。"
  platform:
  - net462
- uid: System.Drawing.Pen.Transform
  id: Transform
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: Transform
  nameWithType: Pen.Transform
  fullName: System.Drawing.Pen.Transform
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "取得或設定幾何轉換的複本<xref href=&quot;System.Drawing.Pen&quot;> </xref>。"
  remarks: "此屬性會定義為畫筆筆尖的橢圓形。 此橢圓形取自預設循環圖形中，藉由套用轉換矩陣。 請注意，會忽略矩陣的轉換部分。 因為矩陣傳回，而且根據轉換屬性是手寫筆的幾何轉換的複本，您應該處置矩陣當不再需要。"
  syntax:
    content: public System.Drawing.Drawing2D.Matrix Transform { get; set; }
    return:
      type: System.Drawing.Drawing2D.Matrix
      description: "一份<xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;></xref>代表幾何轉換<xref href=&quot;System.Drawing.Pen&quot;> </xref>。"
  overload: System.Drawing.Pen.Transform*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "設定轉換屬性上不可變的<xref href=&quot;System.Drawing.Pen&quot;> </xref>，例如所傳回的<xref href=&quot;System.Drawing.Pens&quot;></xref>類別。"
  platform:
  - net462
- uid: System.Drawing.Pen.TranslateTransform(System.Single,System.Single)
  id: TranslateTransform(System.Single,System.Single)
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: TranslateTransform(Single,Single)
  nameWithType: Pen.TranslateTransform(Single,Single)
  fullName: System.Drawing.Pen.TranslateTransform(Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "根據指定的維度來轉換局部幾何轉換。 這個方法會附加之前轉換來轉譯。"
  syntax:
    content: public void TranslateTransform (float dx, float dy);
    parameters:
    - id: dx
      type: System.Single
      description: "X 中轉譯的值。"
    - id: dy
      type: System.Single
      description: "Y 中轉譯的值。"
  overload: System.Drawing.Pen.TranslateTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Pen.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  id: TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: TranslateTransform(Single,Single,MatrixOrder)
  nameWithType: Pen.TranslateTransform(Single,Single,MatrixOrder)
  fullName: System.Drawing.Pen.TranslateTransform(Single,Single,MatrixOrder)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "根據指定的順序指定的維度來轉換局部幾何轉換。"
  syntax:
    content: public void TranslateTransform (float dx, float dy, System.Drawing.Drawing2D.MatrixOrder order);
    parameters:
    - id: dx
      type: System.Single
      description: "X 中轉譯的值。"
    - id: dy
      type: System.Single
      description: "Y 中轉譯的值。"
    - id: order
      type: System.Drawing.Drawing2D.MatrixOrder
      description: "順序 （前面加上或附加），以套用轉換。"
  overload: System.Drawing.Pen.TranslateTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Pen.Width
  id: Width
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: Width
  nameWithType: Pen.Width
  fullName: System.Drawing.Pen.Width
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "取得或設定此寬度<xref href=&quot;System.Drawing.Pen&quot;> </xref>，單位<xref href=&quot;System.Drawing.Graphics&quot;></xref>用於繪圖的物件。"
  remarks: "您可以存取的測量單位<xref:System.Drawing.Graphics>物件使用其<xref:System.Drawing.Graphics.PageUnit%2A>屬性。</xref:System.Drawing.Graphics.PageUnit%2A> </xref:System.Drawing.Graphics> 測量單位，通常是像素為單位。 寬度為 0 會導致<xref:System.Drawing.Pen>繪製如同寬度是 1。</xref:System.Drawing.Pen>"
  example:
  - "The following code example demonstrates the effects of setting the Width and <xref:System.Drawing.Pen.LineJoin%2A> properties on a <xref:System.Drawing.Pen>.  \n  \n This example is designed to be used with Windows Forms. Paste the code into a form and call the `ShowLineJoin` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.PensExample#1](~/add/codesnippet/csharp/p-system.drawing.pen.width_1.cs)]\n [!code-vb[System.Drawing.PensExample#1](~/add/codesnippet/visualbasic/p-system.drawing.pen.width_1.vb)]\n [!code-cpp[System.Drawing.PensExample#1](~/add/codesnippet/cpp/p-system.drawing.pen.width_1.cpp)]"
  syntax:
    content: public float Width { get; set; }
    return:
      type: System.Single
      description: "這個寬度<xref href=&quot;System.Drawing.Pen&quot;> </xref>。"
  overload: System.Drawing.Pen.Width*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "寬度屬性設定不可變的<xref href=&quot;System.Drawing.Pen&quot;> </xref>，例如所傳回的<xref href=&quot;System.Drawing.Pens&quot;></xref>類別。"
  platform:
  - net462
references:
- uid: System.MarshalByRefObject
  isExternal: false
  name: System.MarshalByRefObject
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ComponentModel.InvalidEnumArgumentException
  parent: System.ComponentModel
  isExternal: false
  name: InvalidEnumArgumentException
  nameWithType: InvalidEnumArgumentException
  fullName: System.ComponentModel.InvalidEnumArgumentException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Drawing.Pen.#ctor(System.Drawing.Brush)
  parent: System.Drawing.Pen
  isExternal: false
  name: Pen(Brush)
  nameWithType: Pen.Pen(Brush)
  fullName: System.Drawing.Pen.Pen(Brush)
- uid: System.Drawing.Brush
  parent: System.Drawing
  isExternal: false
  name: Brush
  nameWithType: Brush
  fullName: System.Drawing.Brush
- uid: System.Drawing.Pen.#ctor(System.Drawing.Color)
  parent: System.Drawing.Pen
  isExternal: false
  name: Pen(Color)
  nameWithType: Pen.Pen(Color)
  fullName: System.Drawing.Pen.Pen(Color)
- uid: System.Drawing.Color
  parent: System.Drawing
  isExternal: false
  name: Color
  nameWithType: Color
  fullName: System.Drawing.Color
- uid: System.Drawing.Pen.#ctor(System.Drawing.Brush,System.Single)
  parent: System.Drawing.Pen
  isExternal: false
  name: Pen(Brush,Single)
  nameWithType: Pen.Pen(Brush,Single)
  fullName: System.Drawing.Pen.Pen(Brush,Single)
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Drawing.Pen.#ctor(System.Drawing.Color,System.Single)
  parent: System.Drawing.Pen
  isExternal: false
  name: Pen(Color,Single)
  nameWithType: Pen.Pen(Color,Single)
  fullName: System.Drawing.Pen.Pen(Color,Single)
- uid: System.Drawing.Pen.Alignment
  parent: System.Drawing.Pen
  isExternal: false
  name: Alignment
  nameWithType: Pen.Alignment
  fullName: System.Drawing.Pen.Alignment
- uid: System.Drawing.Drawing2D.PenAlignment
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: PenAlignment
  nameWithType: PenAlignment
  fullName: System.Drawing.Drawing2D.PenAlignment
- uid: System.Drawing.Pen.Brush
  parent: System.Drawing.Pen
  isExternal: false
  name: Brush
  nameWithType: Pen.Brush
  fullName: System.Drawing.Pen.Brush
- uid: System.Drawing.Pen.Clone
  parent: System.Drawing.Pen
  isExternal: false
  name: Clone()
  nameWithType: Pen.Clone()
  fullName: System.Drawing.Pen.Clone()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Drawing.Pen.Color
  parent: System.Drawing.Pen
  isExternal: false
  name: Color
  nameWithType: Pen.Color
  fullName: System.Drawing.Pen.Color
- uid: System.Drawing.Pen.CompoundArray
  parent: System.Drawing.Pen
  isExternal: false
  name: CompoundArray
  nameWithType: Pen.CompoundArray
  fullName: System.Drawing.Pen.CompoundArray
- uid: System.Single[]
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single[]
  spec.csharp:
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: Single[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Drawing.Pen.CustomEndCap
  parent: System.Drawing.Pen
  isExternal: false
  name: CustomEndCap
  nameWithType: Pen.CustomEndCap
  fullName: System.Drawing.Pen.CustomEndCap
- uid: System.Drawing.Drawing2D.CustomLineCap
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: CustomLineCap
  nameWithType: CustomLineCap
  fullName: System.Drawing.Drawing2D.CustomLineCap
- uid: System.Drawing.Pen.CustomStartCap
  parent: System.Drawing.Pen
  isExternal: false
  name: CustomStartCap
  nameWithType: Pen.CustomStartCap
  fullName: System.Drawing.Pen.CustomStartCap
- uid: System.Drawing.Pen.DashCap
  parent: System.Drawing.Pen
  isExternal: false
  name: DashCap
  nameWithType: Pen.DashCap
  fullName: System.Drawing.Pen.DashCap
- uid: System.Drawing.Drawing2D.DashCap
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: DashCap
  nameWithType: DashCap
  fullName: System.Drawing.Drawing2D.DashCap
- uid: System.Drawing.Pen.DashOffset
  parent: System.Drawing.Pen
  isExternal: false
  name: DashOffset
  nameWithType: Pen.DashOffset
  fullName: System.Drawing.Pen.DashOffset
- uid: System.Drawing.Pen.DashPattern
  parent: System.Drawing.Pen
  isExternal: false
  name: DashPattern
  nameWithType: Pen.DashPattern
  fullName: System.Drawing.Pen.DashPattern
- uid: System.Drawing.Pen.DashStyle
  parent: System.Drawing.Pen
  isExternal: false
  name: DashStyle
  nameWithType: Pen.DashStyle
  fullName: System.Drawing.Pen.DashStyle
- uid: System.Drawing.Drawing2D.DashStyle
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: DashStyle
  nameWithType: DashStyle
  fullName: System.Drawing.Drawing2D.DashStyle
- uid: System.Drawing.Pen.Dispose
  parent: System.Drawing.Pen
  isExternal: false
  name: Dispose()
  nameWithType: Pen.Dispose()
  fullName: System.Drawing.Pen.Dispose()
- uid: System.Drawing.Pen.EndCap
  parent: System.Drawing.Pen
  isExternal: false
  name: EndCap
  nameWithType: Pen.EndCap
  fullName: System.Drawing.Pen.EndCap
- uid: System.Drawing.Drawing2D.LineCap
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: LineCap
  nameWithType: LineCap
  fullName: System.Drawing.Drawing2D.LineCap
- uid: System.Drawing.Pen.Finalize
  parent: System.Drawing.Pen
  isExternal: false
  name: Finalize()
  nameWithType: Pen.Finalize()
  fullName: System.Drawing.Pen.Finalize()
- uid: System.Drawing.Pen.LineJoin
  parent: System.Drawing.Pen
  isExternal: false
  name: LineJoin
  nameWithType: Pen.LineJoin
  fullName: System.Drawing.Pen.LineJoin
- uid: System.Drawing.Drawing2D.LineJoin
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: LineJoin
  nameWithType: LineJoin
  fullName: System.Drawing.Drawing2D.LineJoin
- uid: System.Drawing.Pen.MiterLimit
  parent: System.Drawing.Pen
  isExternal: false
  name: MiterLimit
  nameWithType: Pen.MiterLimit
  fullName: System.Drawing.Pen.MiterLimit
- uid: System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix)
  parent: System.Drawing.Pen
  isExternal: false
  name: MultiplyTransform(Matrix)
  nameWithType: Pen.MultiplyTransform(Matrix)
  fullName: System.Drawing.Pen.MultiplyTransform(Matrix)
- uid: System.Drawing.Drawing2D.Matrix
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: Matrix
  nameWithType: Matrix
  fullName: System.Drawing.Drawing2D.Matrix
- uid: System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Pen
  isExternal: false
  name: MultiplyTransform(Matrix,MatrixOrder)
  nameWithType: Pen.MultiplyTransform(Matrix,MatrixOrder)
  fullName: System.Drawing.Pen.MultiplyTransform(Matrix,MatrixOrder)
- uid: System.Drawing.Drawing2D.MatrixOrder
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: MatrixOrder
  nameWithType: MatrixOrder
  fullName: System.Drawing.Drawing2D.MatrixOrder
- uid: System.Drawing.Pen.PenType
  parent: System.Drawing.Pen
  isExternal: false
  name: PenType
  nameWithType: Pen.PenType
  fullName: System.Drawing.Pen.PenType
- uid: System.Drawing.Drawing2D.PenType
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: PenType
  nameWithType: PenType
  fullName: System.Drawing.Drawing2D.PenType
- uid: System.Drawing.Pen.ResetTransform
  parent: System.Drawing.Pen
  isExternal: false
  name: ResetTransform()
  nameWithType: Pen.ResetTransform()
  fullName: System.Drawing.Pen.ResetTransform()
- uid: System.Drawing.Pen.RotateTransform(System.Single)
  parent: System.Drawing.Pen
  isExternal: false
  name: RotateTransform(Single)
  nameWithType: Pen.RotateTransform(Single)
  fullName: System.Drawing.Pen.RotateTransform(Single)
- uid: System.Drawing.Pen.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Pen
  isExternal: false
  name: RotateTransform(Single,MatrixOrder)
  nameWithType: Pen.RotateTransform(Single,MatrixOrder)
  fullName: System.Drawing.Pen.RotateTransform(Single,MatrixOrder)
- uid: System.Drawing.Pen.ScaleTransform(System.Single,System.Single)
  parent: System.Drawing.Pen
  isExternal: false
  name: ScaleTransform(Single,Single)
  nameWithType: Pen.ScaleTransform(Single,Single)
  fullName: System.Drawing.Pen.ScaleTransform(Single,Single)
- uid: System.Drawing.Pen.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Pen
  isExternal: false
  name: ScaleTransform(Single,Single,MatrixOrder)
  nameWithType: Pen.ScaleTransform(Single,Single,MatrixOrder)
  fullName: System.Drawing.Pen.ScaleTransform(Single,Single,MatrixOrder)
- uid: System.Drawing.Pen.SetLineCap(System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.DashCap)
  parent: System.Drawing.Pen
  isExternal: false
  name: SetLineCap(LineCap,LineCap,DashCap)
  nameWithType: Pen.SetLineCap(LineCap,LineCap,DashCap)
  fullName: System.Drawing.Pen.SetLineCap(LineCap,LineCap,DashCap)
- uid: System.Drawing.Pen.StartCap
  parent: System.Drawing.Pen
  isExternal: false
  name: StartCap
  nameWithType: Pen.StartCap
  fullName: System.Drawing.Pen.StartCap
- uid: System.Drawing.Pen.Transform
  parent: System.Drawing.Pen
  isExternal: false
  name: Transform
  nameWithType: Pen.Transform
  fullName: System.Drawing.Pen.Transform
- uid: System.Drawing.Pen.TranslateTransform(System.Single,System.Single)
  parent: System.Drawing.Pen
  isExternal: false
  name: TranslateTransform(Single,Single)
  nameWithType: Pen.TranslateTransform(Single,Single)
  fullName: System.Drawing.Pen.TranslateTransform(Single,Single)
- uid: System.Drawing.Pen.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Pen
  isExternal: false
  name: TranslateTransform(Single,Single,MatrixOrder)
  nameWithType: Pen.TranslateTransform(Single,Single,MatrixOrder)
  fullName: System.Drawing.Pen.TranslateTransform(Single,Single,MatrixOrder)
- uid: System.Drawing.Pen.Width
  parent: System.Drawing.Pen
  isExternal: false
  name: Width
  nameWithType: Pen.Width
  fullName: System.Drawing.Pen.Width
- uid: System.Drawing.Pen.#ctor*
  parent: System.Drawing.Pen
  isExternal: false
  name: Pen
  nameWithType: Pen.Pen
- uid: System.Drawing.Pen.Alignment*
  parent: System.Drawing.Pen
  isExternal: false
  name: Alignment
  nameWithType: Pen.Alignment
- uid: System.Drawing.Pen.Brush*
  parent: System.Drawing.Pen
  isExternal: false
  name: Brush
  nameWithType: Pen.Brush
- uid: System.Drawing.Pen.Clone*
  parent: System.Drawing.Pen
  isExternal: false
  name: Clone
  nameWithType: Pen.Clone
- uid: System.Drawing.Pen.Color*
  parent: System.Drawing.Pen
  isExternal: false
  name: Color
  nameWithType: Pen.Color
- uid: System.Drawing.Pen.CompoundArray*
  parent: System.Drawing.Pen
  isExternal: false
  name: CompoundArray
  nameWithType: Pen.CompoundArray
- uid: System.Drawing.Pen.CustomEndCap*
  parent: System.Drawing.Pen
  isExternal: false
  name: CustomEndCap
  nameWithType: Pen.CustomEndCap
- uid: System.Drawing.Pen.CustomStartCap*
  parent: System.Drawing.Pen
  isExternal: false
  name: CustomStartCap
  nameWithType: Pen.CustomStartCap
- uid: System.Drawing.Pen.DashCap*
  parent: System.Drawing.Pen
  isExternal: false
  name: DashCap
  nameWithType: Pen.DashCap
- uid: System.Drawing.Pen.DashOffset*
  parent: System.Drawing.Pen
  isExternal: false
  name: DashOffset
  nameWithType: Pen.DashOffset
- uid: System.Drawing.Pen.DashPattern*
  parent: System.Drawing.Pen
  isExternal: false
  name: DashPattern
  nameWithType: Pen.DashPattern
- uid: System.Drawing.Pen.DashStyle*
  parent: System.Drawing.Pen
  isExternal: false
  name: DashStyle
  nameWithType: Pen.DashStyle
- uid: System.Drawing.Pen.Dispose*
  parent: System.Drawing.Pen
  isExternal: false
  name: Dispose
  nameWithType: Pen.Dispose
- uid: System.Drawing.Pen.EndCap*
  parent: System.Drawing.Pen
  isExternal: false
  name: EndCap
  nameWithType: Pen.EndCap
- uid: System.Drawing.Pen.Finalize*
  parent: System.Drawing.Pen
  isExternal: false
  name: Finalize
  nameWithType: Pen.Finalize
- uid: System.Drawing.Pen.LineJoin*
  parent: System.Drawing.Pen
  isExternal: false
  name: LineJoin
  nameWithType: Pen.LineJoin
- uid: System.Drawing.Pen.MiterLimit*
  parent: System.Drawing.Pen
  isExternal: false
  name: MiterLimit
  nameWithType: Pen.MiterLimit
- uid: System.Drawing.Pen.MultiplyTransform*
  parent: System.Drawing.Pen
  isExternal: false
  name: MultiplyTransform
  nameWithType: Pen.MultiplyTransform
- uid: System.Drawing.Pen.PenType*
  parent: System.Drawing.Pen
  isExternal: false
  name: PenType
  nameWithType: Pen.PenType
- uid: System.Drawing.Pen.ResetTransform*
  parent: System.Drawing.Pen
  isExternal: false
  name: ResetTransform
  nameWithType: Pen.ResetTransform
- uid: System.Drawing.Pen.RotateTransform*
  parent: System.Drawing.Pen
  isExternal: false
  name: RotateTransform
  nameWithType: Pen.RotateTransform
- uid: System.Drawing.Pen.ScaleTransform*
  parent: System.Drawing.Pen
  isExternal: false
  name: ScaleTransform
  nameWithType: Pen.ScaleTransform
- uid: System.Drawing.Pen.SetLineCap*
  parent: System.Drawing.Pen
  isExternal: false
  name: SetLineCap
  nameWithType: Pen.SetLineCap
- uid: System.Drawing.Pen.StartCap*
  parent: System.Drawing.Pen
  isExternal: false
  name: StartCap
  nameWithType: Pen.StartCap
- uid: System.Drawing.Pen.Transform*
  parent: System.Drawing.Pen
  isExternal: false
  name: Transform
  nameWithType: Pen.Transform
- uid: System.Drawing.Pen.TranslateTransform*
  parent: System.Drawing.Pen
  isExternal: false
  name: TranslateTransform
  nameWithType: Pen.TranslateTransform
- uid: System.Drawing.Pen.Width*
  parent: System.Drawing.Pen
  isExternal: false
  name: Width
  nameWithType: Pen.Width
