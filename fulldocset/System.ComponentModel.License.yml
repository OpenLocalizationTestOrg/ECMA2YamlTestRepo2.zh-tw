### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.License
  id: License
  children:
  - System.ComponentModel.License.#ctor
  - System.ComponentModel.License.Dispose
  - System.ComponentModel.License.LicenseKey
  langs:
  - csharp
  name: License
  nameWithType: License
  fullName: System.ComponentModel.License
  type: Class
  summary: "提供<xref uid=&quot;langword_csharp_abstract&quot; name=&quot;abstract&quot; href=&quot;&quot;></xref>基底類別的所有授權。 授與的授權元件的特定執行個體。"
  remarks: "所有元件必須都呼叫<xref:System.ComponentModel.License.Dispose%2A>他們授與時的授權元件已處置或最終處理而。</xref:System.ComponentModel.License.Dispose%2A>"
  syntax:
    content: 'public abstract class License : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.License.#ctor
  id: '#ctor'
  parent: System.ComponentModel.License
  langs:
  - csharp
  name: License()
  nameWithType: License.License()
  fullName: System.ComponentModel.License.License()
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "初始化的新執行個體<xref href=&quot;System.ComponentModel.License&quot;></xref>類別。"
  syntax:
    content: protected License ();
    parameters: []
  overload: System.ComponentModel.License.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.License.Dispose
  id: Dispose
  parent: System.ComponentModel.License
  langs:
  - csharp
  name: Dispose()
  nameWithType: License.Dispose()
  fullName: System.ComponentModel.License.Dispose()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "當在衍生類別中覆寫時，會處置授權所使用的資源。"
  remarks: "所有元件必須都呼叫處置元件已處置或完成時授與的授權。       A<xref:System.ComponentModel.LicenseProvider>可以使用它來追蹤其用法會授與的授權。</xref:System.ComponentModel.LicenseProvider>       當您完成使用<xref:System.ComponentModel.License>.</xref:System.ComponentModel.License>呼叫 Dispose Dispose 方法會使<xref:System.ComponentModel.License>中無法使用的狀態。</xref:System.ComponentModel.License> 在呼叫 Dispose 之後，您必須釋放所有參考<xref:System.ComponentModel.License>讓它所佔用的記憶體可由記憶體回收收回。</xref:System.ComponentModel.License>      > [!NOTE] > 永遠呼叫 Dispose 之後，再放開您的最後一個參考至<xref:System.ComponentModel.License>。</xref:System.ComponentModel.License> 否則，資源<xref:System.ComponentModel.License>是使用之前，將不會釋放記憶體回收集合呼叫<xref:System.ComponentModel.License>物件的解構函式。</xref:System.ComponentModel.License> </xref:System.ComponentModel.License>"
  syntax:
    content: public abstract void Dispose ();
    parameters: []
  overload: System.ComponentModel.License.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.License.LicenseKey
  id: LicenseKey
  parent: System.ComponentModel.License
  langs:
  - csharp
  name: LicenseKey
  nameWithType: License.LicenseKey
  fullName: System.ComponentModel.License.LicenseKey
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "當在衍生類別中覆寫時，取得授與這個元件的授權金鑰。"
  remarks: "A<xref:System.ComponentModel.LicenseProvider>可以使用任何 Unicode 字元字串做為授權金鑰。</xref:System.ComponentModel.LicenseProvider> LicenseKey 應視為不透明的 cookie，也就是刻意隱藏的內部結構的 cookie。"
  syntax:
    content: public abstract string LicenseKey { get; }
    return:
      type: System.String
      description: "授權金鑰，授與這個元件。"
  overload: System.ComponentModel.License.LicenseKey*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ComponentModel.License.#ctor
  parent: System.ComponentModel.License
  isExternal: false
  name: License()
  nameWithType: License.License()
  fullName: System.ComponentModel.License.License()
- uid: System.ComponentModel.License.Dispose
  parent: System.ComponentModel.License
  isExternal: false
  name: Dispose()
  nameWithType: License.Dispose()
  fullName: System.ComponentModel.License.Dispose()
- uid: System.ComponentModel.License.LicenseKey
  parent: System.ComponentModel.License
  isExternal: false
  name: LicenseKey
  nameWithType: License.LicenseKey
  fullName: System.ComponentModel.License.LicenseKey
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.License.#ctor*
  parent: System.ComponentModel.License
  isExternal: false
  name: License
  nameWithType: License.License
- uid: System.ComponentModel.License.Dispose*
  parent: System.ComponentModel.License
  isExternal: false
  name: Dispose
  nameWithType: License.Dispose
- uid: System.ComponentModel.License.LicenseKey*
  parent: System.ComponentModel.License
  isExternal: false
  name: LicenseKey
  nameWithType: License.LicenseKey
