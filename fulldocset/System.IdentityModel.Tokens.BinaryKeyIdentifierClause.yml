### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  id: BinaryKeyIdentifierClause
  children:
  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean)
  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean,System.Byte[],System.Int32)
  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer
  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer
  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[])
  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[],System.Int32)
  langs:
  - csharp
  name: BinaryKeyIdentifierClause
  nameWithType: BinaryKeyIdentifierClause
  fullName: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  type: Class
  summary: "代表二進位資料為基礎的金鑰識別碼子句的基底類別。"
  remarks: "一般而言，BinaryKeyIdentifierClause 不需要使用，除了在建立自訂安全性權杖服務時。 當安全性權杖服務傳回安全性權杖時，所發出的安全性權杖會包含已附加及未附加之安全性權杖的參考。 附加的參考參考都包含在 SOAP 訊息之安全性標頭內的安全性權杖，而未附加的參考是指不包含在 SOAP 訊息之安全性標頭的安全性權杖。 這些參考通常會證明這些發出的安全性權杖的真實性。"
  syntax:
    content: 'public abstract class BinaryKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause'
  inheritance:
  - System.Object
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  implements: []
  inheritedMembers:
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Id
  platform:
  - net462
- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean)
  id: '#ctor(System.String,System.Byte[],System.Boolean)'
  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  langs:
  - csharp
  name: BinaryKeyIdentifierClause(String,Byte[],Boolean)
  nameWithType: BinaryKeyIdentifierClause.BinaryKeyIdentifierClause(String,Byte[],Boolean)
  fullName: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.BinaryKeyIdentifierClause(String,Byte[],Boolean)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "初始化的新執行個體<xref href=&quot;System.IdentityModel.Tokens.BinaryKeyIdentifierClause&quot;></xref>類別使用指定的金鑰識別碼子句型別、 二進位資料和值，指出是否必須複製二進位資料。"
  syntax:
    content: protected BinaryKeyIdentifierClause (string clauseType, byte[] identificationData, bool cloneBuffer);
    parameters:
    - id: clauseType
      type: System.String
      description: "金鑰識別碼子句型別。 設定的值<xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType*>屬性。</xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType*>"
    - id: identificationData
      type: System.Byte[]
      description: "陣列<xref:System.Byte>，其中包含表示金鑰識別碼的二進位資料。</xref:System.Byte>"
    - id: cloneBuffer
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要複製的陣列傳遞至`identificationData`參數，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>identificationData</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>identificationData</code>長度為零。"
  platform:
  - net462
- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean,System.Byte[],System.Int32)
  id: '#ctor(System.String,System.Byte[],System.Boolean,System.Byte[],System.Int32)'
  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  langs:
  - csharp
  name: BinaryKeyIdentifierClause(String,Byte[],Boolean,Byte[],Int32)
  nameWithType: BinaryKeyIdentifierClause.BinaryKeyIdentifierClause(String,Byte[],Boolean,Byte[],Int32)
  fullName: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.BinaryKeyIdentifierClause(String,Byte[],Boolean,Byte[],Int32)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "初始化的新執行個體<xref href=&quot;System.IdentityModel.Tokens.BinaryKeyIdentifierClause&quot;></xref>類別使用指定的金鑰識別碼子句型別、 二進位資料值，指出是否必須複製二進位資料、 nonce 以及金鑰長度。"
  remarks: "當`derivationNonce`和`derivationLength`指定參數，隱含的衍生的金鑰會用來取代語彙基元的直接安全性金鑰。       不論傳入的值`cloneBuffer`參數，<xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer%2A>方法一律會傳回傳入的陣列複製`identificationData`參數。</xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer%2A>"
  syntax:
    content: protected BinaryKeyIdentifierClause (string clauseType, byte[] identificationData, bool cloneBuffer, byte[] derivationNonce, int derivationLength);
    parameters:
    - id: clauseType
      type: System.String
      description: "金鑰識別碼子句型別。 設定的值<xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType*>屬性。</xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType*>"
    - id: identificationData
      type: System.Byte[]
      description: "陣列<xref:System.Byte>，其中包含表示金鑰識別碼的二進位資料。</xref:System.Byte> 設定所傳回的二進位資料<xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer*>方法。</xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer*>"
    - id: cloneBuffer
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要複製的陣列傳遞至`identificationData`參數，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    - id: derivationNonce
      type: System.Byte[]
      description: "陣列<xref:System.Byte>其中包含用來建立衍生的金鑰的 nonce。</xref:System.Byte> 設定值，由<xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce*>方法。</xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce*>"
    - id: derivationLength
      type: System.Int32
      description: "衍生金鑰的大小。 設定的值<xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength*>屬性。</xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength*>"
  overload: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>identificationData</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>identificationData</code>長度為零。"
  platform:
  - net462
- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer
  id: GetBuffer
  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  langs:
  - csharp
  name: GetBuffer()
  nameWithType: BinaryKeyIdentifierClause.GetBuffer()
  fullName: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "取得表示金鑰識別碼的二進位資料。"
  remarks: "值，不論傳入建構函式的`cloneBuffer`參數，GetBuffer 方法一律會傳回傳遞至建構函式的陣列複製`identificationData`參數。"
  syntax:
    content: public byte[] GetBuffer ();
    parameters: []
    return:
      type: System.Byte[]
      description: "陣列<xref:System.Byte>，其中包含表示金鑰識別碼的二進位資料。</xref:System.Byte>"
  overload: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer
  id: GetRawBuffer
  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  langs:
  - csharp
  name: GetRawBuffer()
  nameWithType: BinaryKeyIdentifierClause.GetRawBuffer()
  fullName: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "取得表示金鑰識別碼的二進位資料。"
  remarks: "GetRawBuffer 方法所傳回的陣列是複製建構函式的`identificationData`參數值傳入`cloneBuffer`是`true`; 否則就是相同的陣列。       <xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer%2A>方法一律會傳回傳遞至建構函式的陣列複製`identificationData`參數。</xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer%2A>"
  syntax:
    content: protected byte[] GetRawBuffer ();
    parameters: []
    return:
      type: System.Byte[]
      description: "陣列<xref:System.Byte>，其中包含表示金鑰識別碼的二進位資料。</xref:System.Byte>"
  overload: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[])
  id: Matches(System.Byte[])
  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  langs:
  - csharp
  name: Matches(Byte[])
  nameWithType: BinaryKeyIdentifierClause.Matches(Byte[])
  fullName: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(Byte[])
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "傳回值，指出目前的執行個體的二進位資料是否符合指定的二進位資料。"
  syntax:
    content: public bool Matches (byte[] data);
    parameters:
    - id: data
      type: System.Byte[]
      description: "陣列<xref:System.Byte>進行比較。</xref:System.Byte>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<code> data </code>所傳回的二進位資料相等<xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer*>方法，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer*>"
  overload: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  id: Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  langs:
  - csharp
  name: Matches(SecurityKeyIdentifierClause)
  nameWithType: BinaryKeyIdentifierClause.Matches(SecurityKeyIdentifierClause)
  fullName: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(SecurityKeyIdentifierClause)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "傳回值，指出這個執行個體的金鑰識別碼是否等於指定的金鑰識別碼子句。"
  syntax:
    content: public override bool Matches (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);
    parameters:
    - id: keyIdentifierClause
      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifierClause&quot;> </xref>進行比較。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<code> keyIdentifierClause </code>的型別<xref href=&quot;System.IdentityModel.Tokens.BinaryKeyIdentifierClause&quot;></xref>和所傳回的二進位資料<xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer*>方法是相同的<code> keyIdentifierClause </code>參數和目前的執行個體; 否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer*>"
  overload: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[],System.Int32)
  id: Matches(System.Byte[],System.Int32)
  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  langs:
  - csharp
  name: Matches(Byte[],Int32)
  nameWithType: BinaryKeyIdentifierClause.Matches(Byte[],Int32)
  fullName: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(Byte[],Int32)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "傳回值，指出目前的執行個體的二進位資料是否等於指定的位移指定的二進位資料。"
  syntax:
    content: public bool Matches (byte[] data, int offset);
    parameters:
    - id: data
      type: System.Byte[]
      description: "陣列<xref:System.Byte>進行比較。</xref:System.Byte>"
    - id: offset
      type: System.Int32
      description: "開始比較陣列中的索引。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果中的二進位資料<code> data </code>參數中指定索引處開始<code> offset </code>參數是所傳回的二進位資料相等<xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer*>方法 （索引零處開始）; 否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer*>"
  overload: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches*
  exceptions: []
  platform:
  - net462
references:
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  isExternal: false
  name: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean)
  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  isExternal: false
  name: BinaryKeyIdentifierClause(String,Byte[],Boolean)
  nameWithType: BinaryKeyIdentifierClause.BinaryKeyIdentifierClause(String,Byte[],Boolean)
  fullName: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.BinaryKeyIdentifierClause(String,Byte[],Boolean)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean,System.Byte[],System.Int32)
  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  isExternal: false
  name: BinaryKeyIdentifierClause(String,Byte[],Boolean,Byte[],Int32)
  nameWithType: BinaryKeyIdentifierClause.BinaryKeyIdentifierClause(String,Byte[],Boolean,Byte[],Int32)
  fullName: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.BinaryKeyIdentifierClause(String,Byte[],Boolean,Byte[],Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer
  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  isExternal: false
  name: GetBuffer()
  nameWithType: BinaryKeyIdentifierClause.GetBuffer()
  fullName: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer()
- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer
  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  isExternal: false
  name: GetRawBuffer()
  nameWithType: BinaryKeyIdentifierClause.GetRawBuffer()
  fullName: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer()
- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[])
  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  isExternal: false
  name: Matches(Byte[])
  nameWithType: BinaryKeyIdentifierClause.Matches(Byte[])
  fullName: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(Byte[])
- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  isExternal: false
  name: Matches(SecurityKeyIdentifierClause)
  nameWithType: BinaryKeyIdentifierClause.Matches(SecurityKeyIdentifierClause)
  fullName: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(SecurityKeyIdentifierClause)
- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[],System.Int32)
  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  isExternal: false
  name: Matches(Byte[],Int32)
  nameWithType: BinaryKeyIdentifierClause.Matches(Byte[],Int32)
  fullName: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(Byte[],Int32)
- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor*
  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  isExternal: false
  name: BinaryKeyIdentifierClause
  nameWithType: BinaryKeyIdentifierClause.BinaryKeyIdentifierClause
- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer*
  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  isExternal: false
  name: GetBuffer
  nameWithType: BinaryKeyIdentifierClause.GetBuffer
- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer*
  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  isExternal: false
  name: GetRawBuffer
  nameWithType: BinaryKeyIdentifierClause.GetRawBuffer
- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches*
  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  isExternal: false
  name: Matches
  nameWithType: BinaryKeyIdentifierClause.Matches
