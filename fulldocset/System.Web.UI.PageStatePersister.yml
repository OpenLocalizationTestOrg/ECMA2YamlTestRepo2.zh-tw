### YamlMime:ManagedReference
items:
- uid: System.Web.UI.PageStatePersister
  id: PageStatePersister
  children:
  - System.Web.UI.PageStatePersister.#ctor(System.Web.UI.Page)
  - System.Web.UI.PageStatePersister.ControlState
  - System.Web.UI.PageStatePersister.Load
  - System.Web.UI.PageStatePersister.Page
  - System.Web.UI.PageStatePersister.Save
  - System.Web.UI.PageStatePersister.StateFormatter
  - System.Web.UI.PageStatePersister.ViewState
  langs:
  - csharp
  name: PageStatePersister
  nameWithType: PageStatePersister
  fullName: System.Web.UI.PageStatePersister
  type: Class
  summary: "提供 ASP.NET 檢視狀態持續性機制的基本功能。"
  remarks: "HTTP 要求和回應會原本是無狀態。 若要維護狀態資訊之間的 HTTP 要求，可以儲存伺服器的 ASP.NET 網頁<xref:System.Web.UI.Page>狀態。</xref:System.Web.UI.Page> 此狀態下，稱為檢視狀態包含網頁、 控制項設定和資料，讓網頁及控制項顯示如同它們是相同的使用者所看到和其最後一個往返伺服器互動。 若要儲存檢視狀態相同的頁面上的連續要求之間，有多個機制。 抽象 PageStatePersister 類別代表這些狀態資訊儲存機制的基底類別。       在 ASP.NET 中的預設檢視狀態持續性機制是可以維持隱藏的 HTML 項目以 Base64 編碼字串形式的狀態資訊 (具有的項目`type`屬性設為`&quot;hidden&quot;`) 頁面上。 ASP.NET 網頁使用<xref:System.Web.UI.HiddenFieldPageStatePersister>物件來執行此工作，使用<xref:System.Web.UI.IStateFormatter>序列化和還原序列化物件的狀態資訊的執行個體。</xref:System.Web.UI.IStateFormatter> </xref:System.Web.UI.HiddenFieldPageStatePersister> 或者，您可以檢視狀態儲存為您的網頁中<xref:System.Web.HttpContext.Session%2A>物件上使用 server<xref:System.Web.UI.SessionPageStatePersister>行動用戶端具有有限的頻寬和資源的類別。</xref:System.Web.UI.SessionPageStatePersister> </xref:System.Web.HttpContext.Session%2A> 在某些情況下，您可能會完全停用檢視狀態持續性。 如果您這麼做時，結果是，有時候網頁及控制項依賴狀態持續性不正常運作。 如需頁面狀態管理和檢視狀態的詳細資訊，請參閱[ASP.NET 狀態管理概觀](~/add/includes/ajax-current-ext-md.md)。       如果您要撰寫控制項，您可以儲存中的控制項的狀態資訊<xref:System.Web.UI.Control.ViewState%2A>字典，<xref:System.Web.UI.StateBag>物件。</xref:System.Web.UI.StateBag> </xref:System.Web.UI.Control.ViewState%2A> 開發人員會擷取到的控制項狀態<xref:System.Web.UI.PageStatePersister.ControlState%2A>屬性。</xref:System.Web.UI.PageStatePersister.ControlState%2A> 您可以指定索引鍵和值<xref:System.Web.UI.Control.ViewState%2A>屬性，而<xref:System.Web.UI.Page>物件序列化要求之間的狀態資訊。</xref:System.Web.UI.Page> </xref:System.Web.UI.Control.ViewState%2A> 若要執行自訂處理在控制項中的狀態，請覆寫<xref:System.Web.UI.Control.LoadViewState%2A>和<xref:System.Web.UI.Control.SaveViewState%2A>方法。</xref:System.Web.UI.Control.SaveViewState%2A> </xref:System.Web.UI.Control.LoadViewState%2A> 網頁開發人員停用檢視狀態時，此字典中儲存任何狀態資訊會遺失。 若要降低，您可以將重大狀態資訊儲存在不同的物件，稱為控制項狀態的 2.0 版的 ASP.NET。 當網頁開發人員會停用檢視狀態時，不會影響控制項的狀態物件。 將狀態資訊儲存在控制項的狀態物件需要，覆寫控制項<xref:System.Web.UI.Control.LoadControlState%2A>和<xref:System.Web.UI.Control.SaveControlState%2A>方法和控制項登錄來儲存狀態資訊中的控制狀態每次初始化控制項時。</xref:System.Web.UI.Control.SaveControlState%2A> </xref:System.Web.UI.Control.LoadControlState%2A> 您可以註冊使用控制項的狀態，藉由覆寫控制項<xref:System.Web.UI.Control.OnInit%2A>方法，並呼叫<xref:System.Web.UI.Page.RegisterRequiresControlState%2A>方法。</xref:System.Web.UI.Page.RegisterRequiresControlState%2A> </xref:System.Web.UI.Control.OnInit%2A> 如需有關使用<xref:System.Web.UI.Control.ViewState%2A>屬性和控制項的狀態時開發控制項，請參閱[開發自訂 ASP.NET 伺服器控制項](~/add/includes/ajax-current-ext-md.md)。</xref:System.Web.UI.Control.ViewState%2A>       若要維持檢視狀態，無法支援現有的檢視狀態持續性機制中的用戶端上，您可以擴充 PageStatePersister 類別導入您自己的檢視狀態持續性方法，並可用頁面配置器來設定 ASP.NET 應用程式使用不同的檢視狀態持續性機制，而根據頁面會提供服務的用戶端的類型。 從 PageStatePersister 類別衍生的類別必須覆寫的抽象<xref:System.Web.UI.PageStatePersister.Save%2A>方法，以儲存檢視狀態和控制狀態持續性媒體，並且覆寫<xref:System.Web.UI.PageStatePersister.Load%2A>方法，以將它解壓縮</xref:System.Web.UI.PageStatePersister.Load%2A></xref:System.Web.UI.PageStatePersister.Save%2A> 如果您需要序列化檢視狀態，以及字串的控制項狀態，您可以使用<xref:System.Web.UI.IStateFormatter>物件，使用存取<xref:System.Web.UI.PageStatePersister.StateFormatter%2A>屬性。</xref:System.Web.UI.PageStatePersister.StateFormatter%2A> </xref:System.Web.UI.IStateFormatter> 它有效率地序列化和還原序列化成 Base64 編碼字串的物件狀態資訊。 您也可以覆寫<xref:System.Web.UI.PageStatePersister.StateFormatter%2A>屬性，以提供您自己的物件狀態的序列化機制。</xref:System.Web.UI.PageStatePersister.StateFormatter%2A>"
  example:
  - "The following code example demonstrates how to create a PageStatePersister object that saves view and control state on the Web server. The `StreamPageStatePersister` demonstrates how to override the <xref:System.Web.UI.PageStatePersister.Load%2A> and <xref:System.Web.UI.PageStatePersister.Save%2A> methods to extract and save view state information. Because the state persistence mechanisms are related to adaptive rendering and client capabilities, the `MyPageAdapter` class is provided to activate the `StreamPageStatePersister` for an ASP.NET application. Finally, a browser capabilities (.browser) file is provided to enable the `MyPageAdapter` adapter for a specific class of clients (in this case, the default Web browser).  \n  \n [!code-cs[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#1](~/add/codesnippet/csharp/t-system.web.ui.pagestat_1.cs)]\n [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#1](~/add/codesnippet/visualbasic/t-system.web.ui.pagestat_1.vb)]  \n  \n The following code example demonstrates how to create a <xref:System.Web.UI.Adapters.PageAdapter> class that returns an instance of `StreamPageStatePersister`, which is used to persist view and control state for an ASP.NET Web page.  \n  \n [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#5](~/add/codesnippet/visualbasic/t-system.web.ui.pagestat_2.vb)]\n [!code-cs[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#5](~/add/codesnippet/csharp/t-system.web.ui.pagestat_2.cs)]  \n  \n Compile these two classes into an assembly that you can use to run a sample, using the following compiler command line. Ensure that the compiled assembly is in the \\Bin directory underneath the ASP.NET application root.  \n  \n [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#6](~/add/codesnippet/visualbasic/t-system.web.ui.pagestat_3.vb)]\n [!code-cs[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#6](~/add/codesnippet/csharp/t-system.web.ui.pagestat_3.cs)]  \n  \n Finally, to enable the `MyPageAdapter` adapter, you must create a directory named Browsers underneath the ASP.NET application root, and include a .browser file with configuration information. The `<refid>` element in the configuration file indicates that the configuration overrides the values specified for the default browser in the Default.browser configuration file. In this example, `MyPageAdapter` is used for ASP.NET Web pages (where normally no adapter is used).  \n  \n```  \n<browsers>  \n    <browser refid=\"Default\" >  \n        <controlAdapters>  \n            <adapter   \n                controlType=\"System.Web.UI.Page\"                              \n                adapterType=\"Samples.AspNet.CS.MyPageAdapter\" />  \n        </controlAdapters>  \n    </browser>  \n</browsers>  \n```"
  syntax:
    content: public abstract class PageStatePersister
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.PageStatePersister.#ctor(System.Web.UI.Page)
  id: '#ctor(System.Web.UI.Page)'
  parent: System.Web.UI.PageStatePersister
  langs:
  - csharp
  name: PageStatePersister(Page)
  nameWithType: PageStatePersister.PageStatePersister(Page)
  fullName: System.Web.UI.PageStatePersister.PageStatePersister(Page)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "初始化的新執行個體<xref href=&quot;System.Web.UI.PageStatePersister&quot;></xref>類別。"
  syntax:
    content: protected PageStatePersister (System.Web.UI.Page page);
    parameters:
    - id: page
      type: System.Web.UI.Page
      description: "<xref href=&quot;System.Web.UI.Page&quot;> </xref>針對所建立的檢視狀態持續性機制。"
  overload: System.Web.UI.PageStatePersister.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>page</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.PageStatePersister.ControlState
  id: ControlState
  parent: System.Web.UI.PageStatePersister
  langs:
  - csharp
  name: ControlState
  nameWithType: PageStatePersister.ControlState
  fullName: System.Web.UI.PageStatePersister.ControlState
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得或設定物件，表示控制目前所包含的資料<xref href=&quot;System.Web.UI.Page&quot;></xref>来套用於 Web 伺服器的 HTTP 要求的物件使用。"
  remarks: "控制項的狀態是重要的檢視狀態資料的 Web 伺服器控制項需要函式，而且會包含在標準檢視狀態資訊的個別物件所組成的物件。 在停用檢視狀態時，不會影響控制項狀態資料<xref:System.Web.UI.Page>層級，但需要額外的實作步驟，才能使用。</xref:System.Web.UI.Page> 如需有關使用<xref:System.Web.UI.Control.ViewState%2A>屬性和控制項的狀態時開發控制項，請參閱[開發自訂 ASP.NET 伺服器控制項](~/add/includes/ajax-current-ext-md.md)。</xref:System.Web.UI.Control.ViewState%2A>"
  example:
  - "The following code example demonstrates how a class that derives from the <xref:System.Web.UI.PageStatePersister> class initializes the ControlState property. In this example, the ControlState property has been assigned to the <xref:System.Web.UI.Pair.Second> field of a <xref:System.Web.UI.Pair> object, and serialized using the <xref:System.Web.UI.ObjectStateFormatter> class. When the <xref:System.Web.UI.PageStatePersister.Load%2A> method is called, the <xref:System.Web.UI.ObjectStateFormatter> class is used to deserialize view state and control state information, and the ControlState property is initialized from the resulting <xref:System.Web.UI.Pair> object's <xref:System.Web.UI.Pair.Second> field. This code example is part of a larger example provided for the <xref:System.Web.UI.PageStatePersister> class.  \n  \n [!code-cs[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#2](~/add/codesnippet/csharp/p-system.web.ui.pagestat_0_1.cs)]\n [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#2](~/add/codesnippet/visualbasic/p-system.web.ui.pagestat_0_1.vb)]"
  syntax:
    content: public object ControlState { get; set; }
    return:
      type: System.Object
      description: "物件，包含檢視狀態資料。"
  overload: System.Web.UI.PageStatePersister.ControlState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.PageStatePersister.Load
  id: Load
  parent: System.Web.UI.PageStatePersister
  langs:
  - csharp
  name: Load()
  nameWithType: PageStatePersister.Load()
  fullName: System.Web.UI.PageStatePersister.Load()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "若要還原序列化，並載入保存的狀態資訊的衍生類別覆寫時<xref href=&quot;System.Web.UI.Page&quot;></xref>物件初始化其控制項階層架構。"
  remarks: "類別衍生自<xref:System.Web.UI.PageStatePersister>類別實作 Load 方法來初始化<xref:System.Web.UI.PageStatePersister.ViewState%2A>和<xref:System.Web.UI.PageStatePersister.ControlState%2A>從某些永續性格式的屬性。</xref:System.Web.UI.PageStatePersister.ControlState%2A> </xref:System.Web.UI.PageStatePersister.ViewState%2A> </xref:System.Web.UI.PageStatePersister>"
  example:
  - "The following code example demonstrates how a class that derives from the <xref:System.Web.UI.PageStatePersister> class implements the Load method to load view state from a persistence medium. The `StreamPageStatePersister` attempts to read data from a stream. It uses an <xref:System.Web.UI.IStateFormatter> object to deserialize view state data and initialize the <xref:System.Web.UI.PageStatePersister.ViewState%2A> property and the <xref:System.Web.UI.PageStatePersister.ControlState%2A> property, which a page uses to initialize controls. This code example is part of a larger example provided for the <xref:System.Web.UI.PageStatePersister> class.  \n  \n [!code-cs[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#2](~/add/codesnippet/csharp/m-system.web.ui.pagestat_0_1.cs)]\n [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#2](~/add/codesnippet/visualbasic/m-system.web.ui.pagestat_0_1.vb)]"
  syntax:
    content: public abstract void Load ();
    parameters: []
  overload: System.Web.UI.PageStatePersister.Load*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.PageStatePersister.Page
  id: Page
  parent: System.Web.UI.PageStatePersister
  langs:
  - csharp
  name: Page
  nameWithType: PageStatePersister.Page
  fullName: System.Web.UI.PageStatePersister.Page
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得或設定<xref href=&quot;System.Web.UI.Page&quot;></xref>檢視狀態持續性機制會針對建立的物件。"
  remarks: "您可以使用 [頁面] 屬性來存取目前<xref:System.Web.HttpContext>物件。</xref:System.Web.HttpContext>"
  syntax:
    content: protected System.Web.UI.Page Page { get; set; }
    return:
      type: System.Web.UI.Page
      description: "<xref href=&quot;System.Web.UI.Page&quot;> </xref> ， <xref href=&quot;System.Web.UI.PageStatePersister&quot;> </xref>相關聯。"
  overload: System.Web.UI.PageStatePersister.Page*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.PageStatePersister.Save
  id: Save
  parent: System.Web.UI.PageStatePersister
  langs:
  - csharp
  name: Save()
  nameWithType: PageStatePersister.Save()
  fullName: System.Web.UI.PageStatePersister.Save()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "覆寫衍生類別序列化永續性的狀態資訊時<xref href=&quot;System.Web.UI.Page&quot;></xref>物件會從記憶體卸載。"
  remarks: "類別衍生自<xref:System.Web.UI.PageStatePersister>類別實作的儲存方法，以保存的內容，<xref:System.Web.UI.PageStatePersister.ViewState%2A>和<xref:System.Web.UI.PageStatePersister.ControlState%2A>持續性中的屬性。</xref:System.Web.UI.PageStatePersister.ControlState%2A> </xref:System.Web.UI.PageStatePersister.ViewState%2A> </xref:System.Web.UI.PageStatePersister>"
  example:
  - "The following code example demonstrates how a class that derives from the <xref:System.Web.UI.PageStatePersister> class implements the Save method to persist view state to a persistence medium. The `StreamPageStatePersister` uses an <xref:System.Web.UI.IStateFormatter> object to serialize the contents of the <xref:System.Web.UI.PageStatePersister.ViewState%2A> property and <xref:System.Web.UI.PageStatePersister.ControlState%2A> property. This code example is part of a larger example provided for the <xref:System.Web.UI.PageStatePersister> class.  \n  \n [!code-cs[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#3](~/add/codesnippet/csharp/m-system.web.ui.pagestat_1_1.cs)]\n [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#3](~/add/codesnippet/visualbasic/m-system.web.ui.pagestat_1_1.vb)]"
  syntax:
    content: public abstract void Save ();
    parameters: []
  overload: System.Web.UI.PageStatePersister.Save*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.PageStatePersister.StateFormatter
  id: StateFormatter
  parent: System.Web.UI.PageStatePersister
  langs:
  - csharp
  name: StateFormatter
  nameWithType: PageStatePersister.StateFormatter
  fullName: System.Web.UI.PageStatePersister.StateFormatter
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得<xref href=&quot;System.Web.UI.IStateFormatter&quot;></xref>物件，用來序列化和還原序列化中包含的狀態資訊<> *> 和<> *> 屬性在呼叫期間<> *> 和<> *> 方法。"
  remarks: "您可以覆寫 StateFormatter 屬性，以提供您自己的檢視狀態格式器。"
  example:
  - "The following code example demonstrates how a class that derives from the <xref:System.Web.UI.PageStatePersister> class accesses the StateFormatter property to retrieve an <xref:System.Web.UI.ObjectStateFormatter> object, which is the default implementation of the <xref:System.Web.UI.IStateFormatter> interface, to serialize view state and control state to a stream. This code example is part of a larger example provided for the <xref:System.Web.UI.PageStatePersister> class.  \n  \n [!code-cs[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#3](~/add/codesnippet/csharp/p-system.web.ui.pagestat_2_1.cs)]\n [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#3](~/add/codesnippet/visualbasic/p-system.web.ui.pagestat_2_1.vb)]"
  syntax:
    content: protected System.Web.UI.IStateFormatter StateFormatter { get; }
    return:
      type: System.Web.UI.IStateFormatter
      description: "執行個體<xref href=&quot;System.Web.UI.IStateFormatter&quot;></xref>用來序列化和還原序列化狀態物件。"
  overload: System.Web.UI.PageStatePersister.StateFormatter*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.PageStatePersister.ViewState
  id: ViewState
  parent: System.Web.UI.PageStatePersister
  langs:
  - csharp
  name: ViewState
  nameWithType: PageStatePersister.ViewState
  fullName: System.Web.UI.PageStatePersister.ViewState
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得或設定物件，表示控制目前所包含的資料<xref href=&quot;System.Web.UI.Page&quot;></xref>来套用於 Web 伺服器的 HTTP 要求的物件使用。"
  remarks: "檢視狀態是 Web 伺服器控制項需要函式，並呈現其本身的狀態資料的字典。 控制項開發人員通常會存取檢視狀態物件使用<xref:System.Web.UI.Control.ViewState%2A>屬性。</xref:System.Web.UI.Control.ViewState%2A> 在停用檢視狀態時，會受到影響檢視狀態<xref:System.Web.UI.Page>層級，並因此控制項可能無法正確運作在這些情況下。</xref:System.Web.UI.Page> 如需有關使用<xref:System.Web.UI.Control.ViewState%2A>和控制狀態開發控制項時，請參閱[開發自訂 ASP.NET 伺服器控制項](~/add/includes/ajax-current-ext-md.md)。</xref:System.Web.UI.Control.ViewState%2A>"
  example:
  - "The following code example demonstrates how a class that derives from the <xref:System.Web.UI.PageStatePersister> class initializes the ViewState property. In this example, the ViewState property has been assigned to the <xref:System.Web.UI.Pair.First> field of a <xref:System.Web.UI.Pair> object, and serialized using the <xref:System.Web.UI.ObjectStateFormatter> object, which is an instance of the <xref:System.Web.UI.IStateFormatter> interface. When the <xref:System.Web.UI.PageStatePersister.Load%2A> method is called, the <xref:System.Web.UI.ObjectStateFormatter> interface is used to deserialize view state information, and the ViewState property is initialized from the resulting <xref:System.Web.UI.Pair> object's <xref:System.Web.UI.Pair.First> field. This code example is part of a larger example provided for the <xref:System.Web.UI.PageStatePersister> class.  \n  \n [!code-cs[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#2](~/add/codesnippet/csharp/p-system.web.ui.pagestat_1_1.cs)]\n [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#2](~/add/codesnippet/visualbasic/p-system.web.ui.pagestat_1_1.vb)]"
  syntax:
    content: public object ViewState { get; set; }
    return:
      type: System.Object
      description: "物件，包含檢視狀態資料。"
  overload: System.Web.UI.PageStatePersister.ViewState*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.UI.PageStatePersister.#ctor(System.Web.UI.Page)
  parent: System.Web.UI.PageStatePersister
  isExternal: false
  name: PageStatePersister(Page)
  nameWithType: PageStatePersister.PageStatePersister(Page)
  fullName: System.Web.UI.PageStatePersister.PageStatePersister(Page)
- uid: System.Web.UI.Page
  parent: System.Web.UI
  isExternal: false
  name: Page
  nameWithType: Page
  fullName: System.Web.UI.Page
- uid: System.Web.UI.PageStatePersister.ControlState
  parent: System.Web.UI.PageStatePersister
  isExternal: false
  name: ControlState
  nameWithType: PageStatePersister.ControlState
  fullName: System.Web.UI.PageStatePersister.ControlState
- uid: System.Web.UI.PageStatePersister.Load
  parent: System.Web.UI.PageStatePersister
  isExternal: false
  name: Load()
  nameWithType: PageStatePersister.Load()
  fullName: System.Web.UI.PageStatePersister.Load()
- uid: System.Web.UI.PageStatePersister.Page
  parent: System.Web.UI.PageStatePersister
  isExternal: false
  name: Page
  nameWithType: PageStatePersister.Page
  fullName: System.Web.UI.PageStatePersister.Page
- uid: System.Web.UI.PageStatePersister.Save
  parent: System.Web.UI.PageStatePersister
  isExternal: false
  name: Save()
  nameWithType: PageStatePersister.Save()
  fullName: System.Web.UI.PageStatePersister.Save()
- uid: System.Web.UI.PageStatePersister.StateFormatter
  parent: System.Web.UI.PageStatePersister
  isExternal: false
  name: StateFormatter
  nameWithType: PageStatePersister.StateFormatter
  fullName: System.Web.UI.PageStatePersister.StateFormatter
- uid: System.Web.UI.IStateFormatter
  parent: System.Web.UI
  isExternal: false
  name: IStateFormatter
  nameWithType: IStateFormatter
  fullName: System.Web.UI.IStateFormatter
- uid: System.Web.UI.PageStatePersister.ViewState
  parent: System.Web.UI.PageStatePersister
  isExternal: false
  name: ViewState
  nameWithType: PageStatePersister.ViewState
  fullName: System.Web.UI.PageStatePersister.ViewState
- uid: System.Web.UI.PageStatePersister.#ctor*
  parent: System.Web.UI.PageStatePersister
  isExternal: false
  name: PageStatePersister
  nameWithType: PageStatePersister.PageStatePersister
- uid: System.Web.UI.PageStatePersister.ControlState*
  parent: System.Web.UI.PageStatePersister
  isExternal: false
  name: ControlState
  nameWithType: PageStatePersister.ControlState
- uid: System.Web.UI.PageStatePersister.Load*
  parent: System.Web.UI.PageStatePersister
  isExternal: false
  name: Load
  nameWithType: PageStatePersister.Load
- uid: System.Web.UI.PageStatePersister.Page*
  parent: System.Web.UI.PageStatePersister
  isExternal: false
  name: Page
  nameWithType: PageStatePersister.Page
- uid: System.Web.UI.PageStatePersister.Save*
  parent: System.Web.UI.PageStatePersister
  isExternal: false
  name: Save
  nameWithType: PageStatePersister.Save
- uid: System.Web.UI.PageStatePersister.StateFormatter*
  parent: System.Web.UI.PageStatePersister
  isExternal: false
  name: StateFormatter
  nameWithType: PageStatePersister.StateFormatter
- uid: System.Web.UI.PageStatePersister.ViewState*
  parent: System.Web.UI.PageStatePersister
  isExternal: false
  name: ViewState
  nameWithType: PageStatePersister.ViewState
