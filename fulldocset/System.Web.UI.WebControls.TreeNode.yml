### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.TreeNode
  id: TreeNode
  children:
  - System.Web.UI.WebControls.TreeNode.#ctor
  - System.Web.UI.WebControls.TreeNode.#ctor(System.String)
  - System.Web.UI.WebControls.TreeNode.#ctor(System.String,System.String)
  - System.Web.UI.WebControls.TreeNode.#ctor(System.Web.UI.WebControls.TreeView,System.Boolean)
  - System.Web.UI.WebControls.TreeNode.#ctor(System.String,System.String,System.String)
  - System.Web.UI.WebControls.TreeNode.#ctor(System.String,System.String,System.String,System.String,System.String)
  - System.Web.UI.WebControls.TreeNode.Checked
  - System.Web.UI.WebControls.TreeNode.ChildNodes
  - System.Web.UI.WebControls.TreeNode.Clone
  - System.Web.UI.WebControls.TreeNode.Collapse
  - System.Web.UI.WebControls.TreeNode.CollapseAll
  - System.Web.UI.WebControls.TreeNode.DataBound
  - System.Web.UI.WebControls.TreeNode.DataItem
  - System.Web.UI.WebControls.TreeNode.DataPath
  - System.Web.UI.WebControls.TreeNode.Depth
  - System.Web.UI.WebControls.TreeNode.Expand
  - System.Web.UI.WebControls.TreeNode.ExpandAll
  - System.Web.UI.WebControls.TreeNode.Expanded
  - System.Web.UI.WebControls.TreeNode.ImageToolTip
  - System.Web.UI.WebControls.TreeNode.ImageUrl
  - System.Web.UI.WebControls.TreeNode.IsTrackingViewState
  - System.Web.UI.WebControls.TreeNode.LoadViewState(System.Object)
  - System.Web.UI.WebControls.TreeNode.NavigateUrl
  - System.Web.UI.WebControls.TreeNode.Parent
  - System.Web.UI.WebControls.TreeNode.PopulateOnDemand
  - System.Web.UI.WebControls.TreeNode.RenderPostText(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.TreeNode.RenderPreText(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.TreeNode.SaveViewState
  - System.Web.UI.WebControls.TreeNode.Select
  - System.Web.UI.WebControls.TreeNode.SelectAction
  - System.Web.UI.WebControls.TreeNode.Selected
  - System.Web.UI.WebControls.TreeNode.ShowCheckBox
  - System.Web.UI.WebControls.TreeNode.System#ICloneable#Clone
  - System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#TrackViewState
  - System.Web.UI.WebControls.TreeNode.Target
  - System.Web.UI.WebControls.TreeNode.Text
  - System.Web.UI.WebControls.TreeNode.ToggleExpandState
  - System.Web.UI.WebControls.TreeNode.ToolTip
  - System.Web.UI.WebControls.TreeNode.TrackViewState
  - System.Web.UI.WebControls.TreeNode.Value
  - System.Web.UI.WebControls.TreeNode.ValuePath
  langs:
  - csharp
  name: TreeNode
  nameWithType: TreeNode
  fullName: System.Web.UI.WebControls.TreeNode
  type: Class
  summary: "表示中的節點<xref href=&quot;System.Web.UI.WebControls.TreeView&quot;></xref>控制項。"
  remarks: "<xref:System.Web.UI.WebControls.TreeView>控制項所組成的節點。</xref:System.Web.UI.WebControls.TreeView> 在樹狀目錄中的每個項目稱為 「 節點和 TreeNode 物件所代表。 包含其他節點的節點稱為*父節點*。 所包含的另一個節點的節點稱為*子節點*。 沒有子節點的節點稱為*分葉節點*。 不包含的任何其他節點，但不是所有其他節點上的階節點是*根節點*。 節點可以是父代和子系，但根，父代，而且分葉節點為互斥。 節點的數個視覺和行為屬性由節點是*根*，*父*，或*分葉*節點。       雖然一般樹狀只能有一個根節點，<xref:System.Web.UI.WebControls.TreeView>控制項可讓您將多個根節點加入至樹狀結構。</xref:System.Web.UI.WebControls.TreeView> 當您想要顯示項目清單，而不會顯示單一的主要根節點，例如產品類別目錄的清單，這非常有用。       節點主要是將資料儲存在兩個屬性︰<xref:System.Web.UI.WebControls.TreeNode.Text%2A>屬性和<xref:System.Web.UI.WebControls.TreeNode.Value%2A>屬性。</xref:System.Web.UI.WebControls.TreeNode.Value%2A> </xref:System.Web.UI.WebControls.TreeNode.Text%2A> 值<xref:System.Web.UI.WebControls.TreeNode.Text%2A>屬性顯示在<xref:System.Web.UI.WebControls.TreeView>控制項，而<xref:System.Web.UI.WebControls.TreeNode.Value%2A>屬性用來儲存任何相關的節點，例如用來處理回傳事件資料的其他資料。</xref:System.Web.UI.WebControls.TreeNode.Value%2A> </xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.TreeNode.Text%2A> 節點也會儲存從節點到根節點中的路徑<xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A>屬性。</xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A> <xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A>屬性會指出相對於根節點的節點的位置。</xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A>      > [!NOTE] > 相同層級的節點每個值必須是唯一的<xref:System.Web.UI.WebControls.TreeNode.Value%2A>屬性;<xref:System.Web.UI.WebControls.TreeView>控制項無法區別相同層級具有相同的值的不同節點。</xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.TreeNode.Value%2A> 在此案例中，如果使用者有重複的值，節點的節點，出現在第一個<xref:System.Web.UI.WebControls.TreeView>選取控制項。</xref:System.Web.UI.WebControls.TreeView>       TreeNode 物件由下列四個使用者介面 (UI) 項目，可以進行自訂或隱藏所組成:-擴充節點指標圖示用來顯示節點是否已展開、 摺疊，或無法展開。      的與節點相關聯選擇性核取方塊。      -選擇性節點映像。      -節點的文字。       您可以設定來指定自訂映像可展開、 摺疊，且無法展開節點指標<xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>，<xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A>的<xref:System.Web.UI.WebControls.TreeView>類別</xref:System.Web.UI.WebControls.TreeView>和<xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>屬性</xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A></xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A></xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A> 展開節點的指標圖示甚至可以隱藏完全是藉由設定<xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A>屬性<xref:System.Web.UI.WebControls.TreeView>類別`false`。</xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A>       若要顯示節點旁邊的核取方塊，設定<xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A>屬性的<xref:System.Web.UI.WebControls.TreeView>類別。</xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A> 當<xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A>以外屬性設定為值`TreeNodeType.Node`，指定的節點型別旁顯示核取方塊。</xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A> 您可以選擇性地覆寫個別節點的核取方塊設定節點的<xref:System.Web.UI.WebControls.TreeNode.ShowCheckBox%2A>屬性。</xref:System.Web.UI.WebControls.TreeNode.ShowCheckBox%2A> 顯示核取方塊時，使用<xref:System.Web.UI.WebControls.TreeNode.Checked%2A>屬性來判斷是否已經選取核取方塊。</xref:System.Web.UI.WebControls.TreeNode.Checked%2A>       您可以藉由設定節點中顯示映像<xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A>屬性。</xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A> 節點文字旁邊會顯示這個影像。       在節點的文字<xref:System.Web.UI.WebControls.TreeView>控制項可以處於兩種模式︰ 選取範圍模式或瀏覽模式。</xref:System.Web.UI.WebControls.TreeView> 根據預設，節點處於選取模式。 將節點放入瀏覽模式中，設定節點的<xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>屬性為空字串以外的值 (&quot;&quot;)。</xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> 節點處於選取模式，將節點設定<xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>屬性設為空字串。</xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>      > [!NOTE] > 某些網際網路瀏覽器有可能會影響效能的限制<xref:System.Web.UI.WebControls.TreeView>控制項。</xref:System.Web.UI.WebControls.TreeView> 例如，Microsoft Internet Explorer 6.0 有回傳的 2067年字元的 URL 字元限制。 如果節點的 URL 中的字元數大於此數目，展開該節點將會失敗並擲回任何例外狀況。       根據預設，按一下 節點處於選取模式張貼頁面回傳至伺服器並引發<xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged>事件。</xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> 您可以選擇指定不同的事件，藉由設定的節點來引發`SelectAction`屬性。 如需詳細資訊，請參閱<xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>.</xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A> 若要判斷已按下哪個節點處於選取模式，請使用<xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A>屬性<xref:System.Web.UI.WebControls.TreeView>控制項。</xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A>       瀏覽模式中的節點時，該節點會停用選取範圍的所有事件。 按一下瀏覽模式中的節點會引導使用者指定的 URL。 您可以選擇設定<xref:System.Web.UI.WebControls.TreeNode.Target%2A>屬性，以指定的視窗或框架，在其中顯示連結的內容。</xref:System.Web.UI.WebControls.TreeNode.Target%2A>       TreeNode 類別包含數個屬性，用來儲存節點的狀態。 使用<xref:System.Web.UI.WebControls.TreeNode.Selected%2A>屬性來判斷是否已選取的節點。</xref:System.Web.UI.WebControls.TreeNode.Selected%2A> 若要判斷是否已展開節點，請使用<xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>屬性。</xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> <xref:System.Web.UI.WebControls.TreeNode.DataBound%2A>屬性用來判斷是否繫結至資料的節點。</xref:System.Web.UI.WebControls.TreeNode.DataBound%2A> 當節點繫結至資料時，您可以使用來存取基礎資料的項目<xref:System.Web.UI.WebControls.TreeNode.DataItem%2A>屬性。</xref:System.Web.UI.WebControls.TreeNode.DataItem%2A>       這個類別會提供數個屬性，協助您判定相對於其他節點的節點在樹狀目錄中的位置。 使用<xref:System.Web.UI.WebControls.TreeNode.Depth%2A>屬性來判斷節點的深度。</xref:System.Web.UI.WebControls.TreeNode.Depth%2A> 您可以取得分隔的節點清單目前節點的根節點使用<xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A>屬性。</xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A> 若要判斷節點的父節點，請使用<xref:System.Web.UI.WebControls.TreeNode.Parent%2A>屬性。</xref:System.Web.UI.WebControls.TreeNode.Parent%2A> 使用存取子節點<xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A>集合。</xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A>       某些情況下，它並不實用靜態地預先定義的資料大小，或根據使用者輸入的自訂內容的樹狀結構。 因為這個緣故，<xref:System.Web.UI.WebControls.TreeView>控制項支援動態節點母體擴展。</xref:System.Web.UI.WebControls.TreeView> 節點可以在執行階段展開時填入。 請注意，您就可以取得非預期的行為，是否您將保存以非同步方式建立的節點。 例如，如果您使用背景工作執行緒非同步地擴展節點時，節點樹狀結構可能不會填入立即雖然控制項繼續處理其餘的頁面生命週期。 在回傳時，延遲的建立的節點可能會造成問題，當控制項的檢視狀態載入，但尚未完全擴展節點樹狀結構。  如需有關動態節點母體擴展的詳細資訊，請參閱<xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A>屬性。</xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A>       如需樹狀結構節點的執行個體的初始屬性值的清單，請參閱<xref:System.Web.UI.WebControls.TreeNode.%23ctor%2A>建構函式。</xref:System.Web.UI.WebControls.TreeNode.%23ctor%2A>"
  example:
  - "The following code example demonstrates how to set up the frames for the next code example.  \n  \n [!code-vb[TreeViewFrameSet#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_106_1.aspx)]\n [!code-cs[TreeViewFrameSet#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_106_1.aspx)]  \n  \n The following code example demonstrates how to use declarative syntax to create TreeNode objects in the <xref:System.Web.UI.WebControls.TreeView> control. This example is used within the frameset of the previous example to display a table of contents.  \n  \n [!code-vb[TreeViewFrameExample#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_106_2.aspx)]\n [!code-cs[TreeViewFrameExample#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_106_2.aspx)]"
  syntax:
    content: >-
      [System.Web.UI.ParseChildren(true, "ChildNodes")]

      public class TreeNode : ICloneable, System.Web.UI.IStateManager
  inheritance:
  - System.Object
  implements:
  - System.ICloneable
  - System.Web.UI.IStateManager
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: TreeNode()
  nameWithType: TreeNode.TreeNode()
  fullName: System.Web.UI.WebControls.TreeNode.TreeNode()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "初始化的新執行個體<xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;></xref>類別而不需要文字或數值。"
  remarks: "使用這個建構函式初始化的新執行個體<xref:System.Web.UI.WebControls.TreeNode>類別使用的預設值。</xref:System.Web.UI.WebControls.TreeNode>      > [!NOTE] > 使用這個建構函式時，所有屬性在<xref:System.Web.UI.WebControls.TreeNode>物件會設定為其預設值。</xref:System.Web.UI.WebControls.TreeNode> 請務必在必要時，設定屬性，建立物件之後。"
  example:
  - "The following code example demonstrates how to use this constructor to dynamically add a node to the <xref:System.Web.UI.WebControls.TreeView> control.  \n  \n [!code-vb[TreeNodeCtor#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_241_1.aspx)]\n [!code-cs[TreeNodeCtor#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_241_1.aspx)]"
  syntax:
    content: public TreeNode ();
    parameters: []
  overload: System.Web.UI.WebControls.TreeNode.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: TreeNode(String)
  nameWithType: TreeNode.TreeNode(String)
  fullName: System.Web.UI.WebControls.TreeNode.TreeNode(String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "初始化的新執行個體<xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;></xref>類別使用指定的文字。"
  remarks: "使用這個建構函式初始化的新執行個體<xref:System.Web.UI.WebControls.TreeNode>類別使用所指定的文字`text`參數。</xref:System.Web.UI.WebControls.TreeNode>       下表顯示<xref:System.Web.UI.WebControls.TreeNode>.</xref:System.Web.UI.WebControls.TreeNode>的執行個體的初始屬性值      |屬性 |初始值 |  |--------------|-------------------|  |<xref:System.Web.UI.WebControls.TreeNode.Text%2A>|值`text`參數。 |</xref:System.Web.UI.WebControls.TreeNode.Text%2A>"
  example:
  - "The following code example demonstrates how to use this constructor to dynamically add a node to the <xref:System.Web.UI.WebControls.TreeView> control.  \n  \n [!code-vb[TreeNodeCtor#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_234_1.aspx)]\n [!code-cs[TreeNodeCtor#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_234_1.aspx)]"
  syntax:
    content: public TreeNode (string text);
    parameters:
    - id: text
      type: System.String
      description: "中所顯示的文字<xref href=&quot;System.Web.UI.WebControls.TreeView&quot;></xref>節點的控制項。"
  overload: System.Web.UI.WebControls.TreeNode.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: TreeNode(String,String)
  nameWithType: TreeNode.TreeNode(String,String)
  fullName: System.Web.UI.WebControls.TreeNode.TreeNode(String,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "初始化的新執行個體<xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;></xref>類別使用指定的文字和值。"
  remarks: "使用這個建構函式初始化的新執行個體<xref:System.Web.UI.WebControls.TreeNode>類別使用的文字和所指定的值`text`和`value`參數，分別。</xref:System.Web.UI.WebControls.TreeNode>       下表顯示<xref:System.Web.UI.WebControls.TreeNode>.</xref:System.Web.UI.WebControls.TreeNode>的執行個體的初始屬性值      |屬性 |初始值 |  |--------------|-------------------|  |<xref:System.Web.UI.WebControls.TreeNode.Text%2A>|值`text`參數。 |  |<xref:System.Web.UI.WebControls.TreeNode.Value%2A>|值`value`參數。 |</xref:System.Web.UI.WebControls.TreeNode.Value%2A> </xref:System.Web.UI.WebControls.TreeNode.Text%2A>"
  example:
  - "The following code example demonstrates how to use this constructor to dynamically add a node to the <xref:System.Web.UI.WebControls.TreeView> control.  \n  \n [!code-vb[TreeNodeCtor#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_51_1.aspx)]\n [!code-cs[TreeNodeCtor#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_51_1.aspx)]"
  syntax:
    content: public TreeNode (string text, string value);
    parameters:
    - id: text
      type: System.String
      description: "中所顯示的文字<xref href=&quot;System.Web.UI.WebControls.TreeView&quot;></xref>節點的控制項。"
    - id: value
      type: System.String
      description: "與此節點，例如用來處理回傳事件資料相關聯的補充資料。"
  overload: System.Web.UI.WebControls.TreeNode.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.#ctor(System.Web.UI.WebControls.TreeView,System.Boolean)
  id: '#ctor(System.Web.UI.WebControls.TreeView,System.Boolean)'
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: TreeNode(TreeView,Boolean)
  nameWithType: TreeNode.TreeNode(TreeView,Boolean)
  fullName: System.Web.UI.WebControls.TreeNode.TreeNode(TreeView,Boolean)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "初始化的新執行個體<xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;></xref>類別使用指定的擁有者。"
  syntax:
    content: protected TreeNode (System.Web.UI.WebControls.TreeView owner, bool isRoot);
    parameters:
    - id: owner
      type: System.Web.UI.WebControls.TreeView
      description: "<xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> ，就會包含新<xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref>。"
    - id: isRoot
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;></xref>是根節點，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.TreeNode.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: TreeNode(String,String,String)
  nameWithType: TreeNode.TreeNode(String,String,String)
  fullName: System.Web.UI.WebControls.TreeNode.TreeNode(String,String,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "初始化的新執行個體<xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;></xref>類別使用指定的文字值，以及影像 URL。"
  remarks: "使用這個建構函式初始化的新執行個體<xref:System.Web.UI.WebControls.TreeNode>類別使用的文字值，以及映像所指定 URL `text`， `value`，和`imageUrl`參數，分別。</xref:System.Web.UI.WebControls.TreeNode>       下表顯示<xref:System.Web.UI.WebControls.TreeNode>.</xref:System.Web.UI.WebControls.TreeNode>的執行個體的初始屬性值      |屬性 |初始值 |  |--------------|-------------------|  |<xref:System.Web.UI.WebControls.TreeNode.Text%2A>|值`text`參數。 |  |<xref:System.Web.UI.WebControls.TreeNode.Value%2A>|值`value`參數。 |  |<xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A>|值`imageUrl`參數。 |</xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A> </xref:System.Web.UI.WebControls.TreeNode.Value%2A> </xref:System.Web.UI.WebControls.TreeNode.Text%2A>"
  example:
  - "The following code example demonstrates how to use this constructor to dynamically add a node to the <xref:System.Web.UI.WebControls.TreeView> control.  \n  \n [!code-vb[TreeNodeCtor#1](~/add/codesnippet/visualbasic/3795fa87-8785-4a78-ab89-_1.aspx)]\n [!code-cs[TreeNodeCtor#1](~/add/codesnippet/csharp/3795fa87-8785-4a78-ab89-_1.aspx)]"
  syntax:
    content: public TreeNode (string text, string value, string imageUrl);
    parameters:
    - id: text
      type: System.String
      description: "中所顯示的文字<xref href=&quot;System.Web.UI.WebControls.TreeView&quot;></xref>節點的控制項。"
    - id: value
      type: System.String
      description: "與此節點，例如用來處理回傳事件資料相關聯的補充資料。"
    - id: imageUrl
      type: System.String
      description: "之節點旁會顯示影像的 URL。"
  overload: System.Web.UI.WebControls.TreeNode.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.#ctor(System.String,System.String,System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String,System.String,System.String)'
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: TreeNode(String,String,String,String,String)
  nameWithType: TreeNode.TreeNode(String,String,String,String,String)
  fullName: System.Web.UI.WebControls.TreeNode.TreeNode(String,String,String,String,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "初始化的新執行個體<xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;></xref>類別使用指定的文字、 值、 影像 URL、 瀏覽 URL 與目標。"
  remarks: "使用這個建構函式初始化的新執行個體<xref:System.Web.UI.WebControls.TreeNode>類別使用的文字、 值、 影像和瀏覽的 Url，並顯示所指定的目標`text`， `value`， `imageUrl`， `navigateUrl`，和`target`參數，分別。</xref:System.Web.UI.WebControls.TreeNode>       下表顯示<xref:System.Web.UI.WebControls.TreeNode>.</xref:System.Web.UI.WebControls.TreeNode>的執行個體的初始屬性值      |屬性 |初始值 |  |--------------|-------------------|  |<xref:System.Web.UI.WebControls.TreeNode.Text%2A>|值`text`參數。 |  |<xref:System.Web.UI.WebControls.TreeNode.Value%2A>|值`value`參數。 |  |<xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A>|值`imageUrl`參數。 |  |<xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>|值`navigateUrl`參數。 |  |<xref:System.Web.UI.WebControls.TreeNode.Target%2A>|值`target`參數。 |</xref:System.Web.UI.WebControls.TreeNode.Target%2A> </xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> </xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A> </xref:System.Web.UI.WebControls.TreeNode.Value%2A> </xref:System.Web.UI.WebControls.TreeNode.Text%2A>"
  example:
  - "The following code example demonstrates how to use this constructor to dynamically add a node to the <xref:System.Web.UI.WebControls.TreeView> control.  \n  \n [!code-vb[TreeNodeCtor#1](~/add/codesnippet/visualbasic/731d6a74-0b18-423b-841c-_1.aspx)]\n [!code-cs[TreeNodeCtor#1](~/add/codesnippet/csharp/731d6a74-0b18-423b-841c-_1.aspx)]"
  syntax:
    content: public TreeNode (string text, string value, string imageUrl, string navigateUrl, string target);
    parameters:
    - id: text
      type: System.String
      description: "中所顯示的文字<xref href=&quot;System.Web.UI.WebControls.TreeView&quot;></xref>節點的控制項。"
    - id: value
      type: System.String
      description: "與此節點，例如用來處理回傳事件資料相關聯的補充資料。"
    - id: imageUrl
      type: System.String
      description: "之節點旁會顯示影像的 URL。"
    - id: navigateUrl
      type: System.String
      description: "按一下節點時所要連結 URL。"
    - id: target
      type: System.String
      description: "目標視窗或框架中顯示的網頁內容連結到時按一下節點。"
  overload: System.Web.UI.WebControls.TreeNode.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.Checked
  id: Checked
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: Checked
  nameWithType: TreeNode.Checked
  fullName: System.Web.UI.WebControls.TreeNode.Checked
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定值，指出是否已選取節點的核取方塊。"
  remarks: "當節點會顯示核取方塊時，選取的屬性常用來指定是否已選取核取方塊。 選取與節點相關聯的核取方塊時，該節點會自動加入至<xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A>集合<xref:System.Web.UI.WebControls.TreeView>控制項。</xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A> 選取的屬性也可用來判斷是否已經選取核取方塊。      > [!NOTE] > 來判斷哪一個節點中的常見的方法是<xref:System.Web.UI.WebControls.TreeView>控制項有藉由重複選取其核取方塊<xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A>集合。</xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A> </xref:System.Web.UI.WebControls.TreeView>       這個屬性的值會儲存檢視狀態中。"
  example:
  - "The following code example demonstrates how to use the Checked property to specify whether a node's check box is selected. It initializes the check boxes of nodes with a depth of one to a selected state. For this example to work correctly, you must copy the sample XML data below to a file named Newsgroup.xml.  \n  \n [!code-cs[TreeNodeChecked#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_280_1.aspx)]\n [!code-vb[TreeNodeChecked#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_280_1.aspx)]  \n  \n The following code is sample XML data for the previous example.  \n  \n```  \n<category name=\"news.microsoft.com\">  \n    <group name=\"microsoft.public.dotnet.framework.aspnet\"/>  \n    <group name=\"microsoft.public.dotnet.framework.aspnet.mobile\"/>  \n    <group name=\"microsoft.public.dotnet.framework.aspnet.webservices\"/>  \n</category>  \n```"
  syntax:
    content: public bool Checked { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果已選取節點的核取方塊;，否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.TreeNode.Checked*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.ChildNodes
  id: ChildNodes
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: ChildNodes
  nameWithType: TreeNode.ChildNodes
  fullName: System.Web.UI.WebControls.TreeNode.ChildNodes
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得<xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;></xref>集合，其中包含目前節點的第一層子節點。"
  remarks: "使用 ChildNodes 屬性來取得<xref:System.Web.UI.WebControls.TreeNodeCollection>集合，其中包含目前節點的第一層子節點。</xref:System.Web.UI.WebControls.TreeNodeCollection> 這個集合通常用來逐一查看所有第一層子節點，或存取目前節點的特定的第一層子節點。       ChildNodes 屬性也可用來以程式設計方式管理目前節點中的第一層子節點。 您可以加入、 插入、 移除及擷取<xref:System.Web.UI.WebControls.TreeNode>從集合的物件。</xref:System.Web.UI.WebControls.TreeNode> 集合的任何更新會自動反映在<xref:System.Web.UI.WebControls.TreeView>控制重新整理頁面，會在下一次。</xref:System.Web.UI.WebControls.TreeView>       若要存取子節點進一步的樹狀結構下，使用 ChildNodes 屬性下一個層級子節點的節點層級下瀏覽。"
  example:
  - "The following code example demonstrates how to use the ChildNodes property to traverse the tree.  \n  \n [!code-cs[TreeNodeCollectionCount#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_95_1.aspx)]\n [!code-vb[TreeNodeCollectionCount#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_95_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TreeNodeCollection ChildNodes { get; }
    return:
      type: System.Web.UI.WebControls.TreeNodeCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref> ，其中包含目前節點的第一層子節點。"
  overload: System.Web.UI.WebControls.TreeNode.ChildNodes*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.Clone
  id: Clone
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: Clone()
  nameWithType: TreeNode.Clone()
  fullName: System.Web.UI.WebControls.TreeNode.Clone()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "建立的新執行個體<xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;></xref>類別的目前屬性<xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;></xref>執行個體。"
  remarks: "這是支援的<xref:System.ICloneable>介面實作<xref:System.Web.UI.WebControls.TreeNode>。</xref:System.Web.UI.WebControls.TreeNode></xref:System.ICloneable>的 helper 方法"
  syntax:
    content: protected virtual object Clone ();
    parameters: []
    return:
      type: System.Object
      description: "新執行個體<xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;></xref>目前屬性<xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;></xref>執行個體。"
  overload: System.Web.UI.WebControls.TreeNode.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.Collapse
  id: Collapse
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: Collapse()
  nameWithType: TreeNode.Collapse()
  fullName: System.Web.UI.WebControls.TreeNode.Collapse()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "摺疊目前的樹狀節點。"
  remarks: "您可以使用 摺疊方法來方便地摺疊目前的節點。      > [!NOTE] > 或者，您也可以設定<xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>屬性`false`。</xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>       若要摺疊目前節點及其所有子節點，請考慮使用<xref:System.Web.UI.WebControls.TreeNode.CollapseAll%2A>方法。</xref:System.Web.UI.WebControls.TreeNode.CollapseAll%2A>       <xref:System.Web.UI.WebControls.TreeView.CollapseAll%2A>將摺疊整個樹狀結構中的所有節點。</xref:System.Web.UI.WebControls.TreeView.CollapseAll%2A>"
  example:
  - "The following code example demonstrates how to use the Collapse method to programmatically collapse a node in the <xref:System.Web.UI.WebControls.TreeView> control. For this example to work correctly, you must copy the sample XML data below to a file named Book.xml.  \n  \n [!code-cs[TreeNodeExpand#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_20_1.aspx)]\n [!code-vb[TreeNodeExpand#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_20_1.aspx)]  \n  \n The following code is sample XML data for the previous example.  \n  \n```  \n<Book Title=\"Book Title\">  \n    <Chapter Heading=\"Chapter 1\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n        <Section Heading=\"Section 2\">  \n        </Section>  \n    </Chapter>  \n    <Chapter Heading=\"Chapter 2\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n    </Chapter>  \n</Book>  \n```"
  syntax:
    content: public void Collapse ();
    parameters: []
  overload: System.Web.UI.WebControls.TreeNode.Collapse*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.CollapseAll
  id: CollapseAll
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: CollapseAll()
  nameWithType: TreeNode.CollapseAll()
  fullName: System.Web.UI.WebControls.TreeNode.CollapseAll()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "摺疊目前節點及其所有子節點。"
  remarks: "使用 CollapseAll 方法來方便地摺疊目前節點及其所有子節點。      > [!NOTE] > 或者，您也可以設定<xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>屬性的目前節點和其子節點的每個`false`。</xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>       若要摺疊目前的節點，請考慮使用<xref:System.Web.UI.WebControls.TreeNode.Collapse%2A>方法。</xref:System.Web.UI.WebControls.TreeNode.Collapse%2A>       <xref:System.Web.UI.WebControls.TreeView.CollapseAll%2A>將摺疊整個樹狀結構中的所有節點。</xref:System.Web.UI.WebControls.TreeView.CollapseAll%2A>"
  example:
  - "The following code example demonstrates how to use the CollapseAll method to programmatically collapse a node and all its child nodes in the <xref:System.Web.UI.WebControls.TreeView> control. For this example to work correctly, you must copy the sample XML data below to a file named Book.xml.  \n  \n [!code-cs[TreeNodeExpandAll#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_121_1.aspx)]\n [!code-vb[TreeNodeExpandAll#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_121_1.aspx)]  \n  \n The following code is sample XML data for the previous example.  \n  \n```  \n<Book Title=\"Book Title\">  \n    <Chapter Heading=\"Chapter 1\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n        <Section Heading=\"Section 2\">  \n        </Section>  \n    </Chapter>  \n    <Chapter Heading=\"Chapter 2\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n    </Chapter>  \n</Book>  \n```"
  syntax:
    content: public void CollapseAll ();
    parameters: []
  overload: System.Web.UI.WebControls.TreeNode.CollapseAll*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.DataBound
  id: DataBound
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: DataBound
  nameWithType: TreeNode.DataBound
  fullName: System.Web.UI.WebControls.TreeNode.DataBound
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得值，指出節點是否已建立透過資料繫結。"
  remarks: "資料繫結屬性用來以程式設計方式判斷節點是否已建立透過資料繫結。 由於動態和靜態內容不能混用相同的節點中，這個屬性通常用於填入<xref:System.Web.UI.WebControls.TreeView>控制項以動態方式來決定節點是否包含靜態內容。</xref:System.Web.UI.WebControls.TreeView>       這個屬性的值會儲存檢視狀態中。"
  syntax:
    content: public bool DataBound { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果節點已建立透過資料繫結。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.TreeNode.DataBound*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.DataItem
  id: DataItem
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: DataItem
  nameWithType: TreeNode.DataItem
  fullName: System.Web.UI.WebControls.TreeNode.DataItem
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得資料繫結至控制項。"
  remarks: "當<xref:System.Web.UI.WebControls.TreeView>控制項繫結至資料來源，例如<xref:System.Web.UI.WebControls.XmlDataSource>物件，這個屬性設定為繫結至這個特定節點的資料項目。</xref:System.Web.UI.WebControls.XmlDataSource> </xref:System.Web.UI.WebControls.TreeView> 這個屬性通常用於存取資料項目的值。      > [!NOTE] > 只在發生資料繫結之後，便使用這個屬性。"
  syntax:
    content: public object DataItem { get; }
    return:
      type: System.Object
      description: "A &lt;xref:System.Object?displayProperty=fullName&gt;表示繫結至控制項的資料項目。 預設值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>，表示節點不會繫結至資料的任何項目。"
  overload: System.Web.UI.WebControls.TreeNode.DataItem*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.DataPath
  id: DataPath
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: DataPath
  nameWithType: TreeNode.DataPath
  fullName: System.Web.UI.WebControls.TreeNode.DataPath
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得繫結至節點之資料的路徑。"
  remarks: "資料路徑屬性值通常用於呼叫<xref:System.Web.UI.IHierarchicalDataSource.GetHierarchicalView%2A?displayProperty=fullName>方法以提供資料的路徑的繫結至目前的節點。</xref:System.Web.UI.IHierarchicalDataSource.GetHierarchicalView%2A?displayProperty=fullName> 此方法接著會傳回<xref:System.Web.UI.HierarchicalDataSourceView?displayProperty=fullName>物件，其中包含的資料在指定的路徑。</xref:System.Web.UI.HierarchicalDataSourceView?displayProperty=fullName>       這個屬性的值會儲存檢視狀態中。"
  syntax:
    content: public string DataPath { get; }
    return:
      type: System.String
      description: "資料路徑的繫結至節點。 這個值來自的階層式資料的原始檔控制<xref href=&quot;System.Web.UI.WebControls.TreeView&quot;></xref>控制項繫結。 預設值為空字串 (&quot;&quot;)。"
  overload: System.Web.UI.WebControls.TreeNode.DataPath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.Depth
  id: Depth
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: Depth
  nameWithType: TreeNode.Depth
  fullName: System.Web.UI.WebControls.TreeNode.Depth
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得節點的深度。"
  remarks: "使用深度屬性來判斷節點的深度。 深度表示的節點與根節點之間的階層層級數目。 例如，根節點具有深度為零。 根節點的子節點的深度為&1;，依此類推。"
  example:
  - "The following code example demonstrates how use the Depth property to determine the depth of a node. It initializes all nodes with a depth of one to a selected state. For this example to work correctly, you must copy the sample XML data below to a file named Newsgroup.xml.  \n  \n [!code-cs[TreeNodeChecked#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1355_1.aspx)]\n [!code-vb[TreeNodeChecked#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1355_1.aspx)]  \n  \n The following code is sample XML data for the previous example.  \n  \n```  \n<category name=\"news.microsoft.com\">  \n    <group name=\"microsoft.public.dotnet.framework.aspnet\"/>  \n    <group name=\"microsoft.public.dotnet.framework.aspnet.mobile\"/>  \n    <group name=\"microsoft.public.dotnet.framework.aspnet.webservices\"/>  \n</category>  \n```"
  syntax:
    content: public int Depth { get; }
    return:
      type: System.Int32
      description: "節點的深度。"
  overload: System.Web.UI.WebControls.TreeNode.Depth*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.Expand
  id: Expand
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: Expand()
  nameWithType: TreeNode.Expand()
  fullName: System.Web.UI.WebControls.TreeNode.Expand()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "展開目前的樹狀節點。"
  remarks: "使用展開方法，以方便地展開目前的節點。      > [!NOTE] > 或者，您也可以設定<xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>屬性`true`。</xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>       若要展開目前的節點和其所有子節點，請考慮使用<xref:System.Web.UI.WebControls.TreeNode.ExpandAll%2A>方法。</xref:System.Web.UI.WebControls.TreeNode.ExpandAll%2A>       <xref:System.Web.UI.WebControls.TreeView.ExpandAll%2A>會展開整個樹狀結構中的所有節點。</xref:System.Web.UI.WebControls.TreeView.ExpandAll%2A>       這個屬性的值會儲存檢視狀態中。"
  example:
  - "The following code example demonstrates how to use the Expand method to programmatically expand a node in the <xref:System.Web.UI.WebControls.TreeView> control. For this example to work correctly, you must copy the sample XML data below to a file named Book.xml.  \n  \n [!code-cs[TreeNodeExpand#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_91_1.aspx)]\n [!code-vb[TreeNodeExpand#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_91_1.aspx)]  \n  \n The following code is sample XML data for the previous example.  \n  \n```  \n<Book Title=\"Book Title\">  \n    <Chapter Heading=\"Chapter 1\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n        <Section Heading=\"Section 2\">  \n        </Section>  \n    </Chapter>  \n    <Chapter Heading=\"Chapter 2\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n    </Chapter>  \n</Book>  \n```"
  syntax:
    content: public void Expand ();
    parameters: []
  overload: System.Web.UI.WebControls.TreeNode.Expand*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.ExpandAll
  id: ExpandAll
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: ExpandAll()
  nameWithType: TreeNode.ExpandAll()
  fullName: System.Web.UI.WebControls.TreeNode.ExpandAll()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "展開目前的節點和其所有子節點。"
  remarks: "使用 ExpandAll 方法，以方便地展開目前的節點和其所有子節點。      > [!NOTE] > 或者，您也可以設定<xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>屬性的目前節點和其子節點的每個`true`。</xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>       若要展開目前的節點，請考慮使用<xref:System.Web.UI.WebControls.TreeNode.Expand%2A>方法。</xref:System.Web.UI.WebControls.TreeNode.Expand%2A>       <xref:System.Web.UI.WebControls.TreeView.ExpandAll%2A>會展開整個樹狀結構中的所有節點。</xref:System.Web.UI.WebControls.TreeView.ExpandAll%2A>"
  example:
  - "The following code example demonstrates how to use the ExpandAll method to programmatically expand a node and all its child nodes in the <xref:System.Web.UI.WebControls.TreeView> control. For this example to work correctly, you must copy the sample XML data below to a file named Book.xml.  \n  \n [!code-cs[TreeNodeExpandAll#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_213_1.aspx)]\n [!code-vb[TreeNodeExpandAll#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_213_1.aspx)]  \n  \n The following code is sample XML data for the previous example.  \n  \n```  \n<Book Title=\"Book Title\">  \n    <Chapter Heading=\"Chapter 1\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n        <Section Heading=\"Section 2\">  \n        </Section>  \n    </Chapter>  \n    <Chapter Heading=\"Chapter 2\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n    </Chapter>  \n</Book>  \n```"
  syntax:
    content: public void ExpandAll ();
    parameters: []
  overload: System.Web.UI.WebControls.TreeNode.ExpandAll*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.Expanded
  id: Expanded
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: Expanded
  nameWithType: TreeNode.Expanded
  fullName: System.Web.UI.WebControls.TreeNode.Expanded
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定值，指出是否已展開節點。"
  remarks: "使用擴充屬性來指定，或判斷是否已展開節點。       您可以展開和摺疊節點，藉由呼叫<xref:System.Web.UI.WebControls.TreeNode.Expand%2A>和<xref:System.Web.UI.WebControls.TreeNode.Collapse%2A>方法，分別。</xref:System.Web.UI.WebControls.TreeNode.Collapse%2A> </xref:System.Web.UI.WebControls.TreeNode.Expand%2A> 您也可以展開和摺疊節點及其所有子節點，藉由呼叫<xref:System.Web.UI.WebControls.TreeNode.ExpandAll%2A>和<xref:System.Web.UI.WebControls.TreeNode.CollapseAll%2A>方法，分別。</xref:System.Web.UI.WebControls.TreeNode.CollapseAll%2A> </xref:System.Web.UI.WebControls.TreeNode.ExpandAll%2A>       下列 C# 程式碼片段的擴充屬性都是三種狀態屬性，因為會造成編譯錯誤︰```   protected void TreeView1_SelectedNodeChanged(object sender, EventArgs e)   {   if (TreeView1.Nodes[0].Expanded)   {   // some work here    }   }   ```時 VB.Net 隱含地將轉換`Boolean`值設定為`NullableBoolean`，C# 則否。 因此，很明確檢查屬性狀態的最佳作法。 例如，在 Visual Basic 和 C# 中的下列程式碼範例明確測試展開屬性的值。       下列 Visual Basic 程式碼範例會明確地測試展開屬性的值。 如果擴充屬性設定為這個範例會測試`True`; 因此`Nothing`和`False`落入`If`陳述式。      ```   If TreeView1.Nodes(0).Expanded = True Then &quot;some work hereEnd IF   ```這個 C# 程式碼範例會明確地測試展開屬性的值。 如果擴充屬性設定為這個範例會測試`True`; 因此`Null`和`False`落入`If`陳述式。      ```   if( TreeView1.Nodes[0].Expanded == true ) { //some work here}   ```"
  example:
  - "The following code example demonstrates how to use the Expanded property to programmatically expand a node. It initializes all nodes with a depth of one to an expanded state. Notice that when the root node is expanded, its child nodes are already expanded. For this example to work correctly, you must copy the sample XML data below to a file named Book.xml.  \n  \n [!code-vb[TreeNodeExpanded#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_746_1.aspx)]\n [!code-cs[TreeNodeExpanded#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_746_1.aspx)]  \n  \n The following code is sample XML data for the previous example.  \n  \n```  \n<Book Title=\"Book Title\">  \n    <Chapter Heading=\"Chapter 1\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n        <Section Heading=\"Section 2\">  \n        </Section>  \n    </Chapter>  \n    <Chapter Heading=\"Chapter 2\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n    </Chapter>  \n</Book>  \n```"
  syntax:
    content: public Nullable<bool> Expanded { get; set; }
    return:
      type: System.Nullable{System.Boolean}
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果節點展開， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>沒有展開節點，或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.TreeNode.Expanded*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.ImageToolTip
  id: ImageToolTip
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: ImageToolTip
  nameWithType: TreeNode.ImageToolTip
  fullName: System.Web.UI.WebControls.TreeNode.ImageToolTip
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定節點旁邊顯示的影像工具提示文字。"
  remarks: "在節點旁邊顯示映像時 (當<xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A>屬性設定)，使用 ImageToolTip 屬性來指定當使用者將滑鼠指標停留在影像上時顯示工具提示。</xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A> 您指定的文字會提供可用來將控制項設為更容易存取的映像的描述的輔助技術裝置。       這個屬性的值會儲存檢視狀態中。       這個屬性的值設定時，可以自動儲存到資源檔使用設計工具。 如需詳細資訊，請參閱<xref:System.ComponentModel.LocalizableAttribute>和[全球化和當地語系化](~/add/includes/ajax-current-ext-md.md)。</xref:System.ComponentModel.LocalizableAttribute>"
  example:
  - "The following code example demonstrates how to use the ImageToolTip property to specify the ToolTip text for an image displayed next to a node. For this example to work correctly, you must provide your own images.  \n  \n [!code-vb[TreeNodeImageToolTip#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_911_1.aspx)]\n [!code-cs[TreeNodeImageToolTip#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_911_1.aspx)]"
  syntax:
    content: public string ImageToolTip { get; set; }
    return:
      type: System.String
      description: "在節點旁邊顯示的影像工具提示文字。 預設為空字串 (&quot;&quot;)，表示這個屬性未設定。"
  overload: System.Web.UI.WebControls.TreeNode.ImageToolTip*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.ImageUrl
  id: ImageUrl
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: ImageUrl
  nameWithType: TreeNode.ImageUrl
  fullName: System.Web.UI.WebControls.TreeNode.ImageUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定之節點旁會顯示之影像的 URL。"
  remarks: "用於指定的自訂映像中目前節點的 ImageUrl 屬性<xref:System.Web.UI.WebControls.TreeView>控制項。</xref:System.Web.UI.WebControls.TreeView> 此映像之節點旁會顯示，而且只要用戶端瀏覽器支援的格式可以是任何檔案格式 （.jpg、.gif、.bmp 等等）。       這個屬性的值會儲存檢視狀態中。"
  example:
  - "The following code example demonstrates how to use the ImageUrl property to provide a custom image for a node. For this example to work correctly, you must copy the sample XML data below to a file named Book.xml.  \n  \n [!code-cs[TreeViewTreeNodeDataBound#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1020_1.aspx)]\n [!code-vb[TreeViewTreeNodeDataBound#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1020_1.aspx)]  \n  \n The following code is sample XML data for the previous example.  \n  \n```  \n<Book Title=\"Book Title\">  \n    <Chapter Heading=\"Chapter 1\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n        <Section Heading=\"Section 2\">  \n        </Section>  \n    </Chapter>  \n    <Chapter Heading=\"Chapter 2\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n    </Chapter>  \n</Book>  \n```"
  syntax:
    content: public string ImageUrl { get; set; }
    return:
      type: System.String
      description: "顯示之節點旁的自訂影像 URL。 預設值為空字串 (&quot;&quot;)，表示這個屬性未設定。"
  overload: System.Web.UI.WebControls.TreeNode.ImageUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.IsTrackingViewState
  id: IsTrackingViewState
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: IsTrackingViewState
  nameWithType: TreeNode.IsTrackingViewState
  fullName: System.Web.UI.WebControls.TreeNode.IsTrackingViewState
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得值，指出節點是否正在儲存變更至其檢視狀態。"
  syntax:
    content: protected bool IsTrackingViewState { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果控制項標記為儲存其狀態。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.TreeNode.IsTrackingViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.LoadViewState(System.Object)
  id: LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: LoadViewState(Object)
  nameWithType: TreeNode.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.TreeNode.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "載入先前儲存的檢視狀態的節點。"
  remarks: "LoadViewState 是 helper 方法，用來載入先前儲存的檢視狀態的節點"
  syntax:
    content: protected virtual void LoadViewState (object state);
    parameters:
    - id: state
      type: System.Object
      description: "<xref:System.Object>表示節點的狀態。</xref:System.Object>"
  overload: System.Web.UI.WebControls.TreeNode.LoadViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.NavigateUrl
  id: NavigateUrl
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: NavigateUrl
  nameWithType: TreeNode.NavigateUrl
  fullName: System.Web.UI.WebControls.TreeNode.NavigateUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定要在按下的節點時，瀏覽至 URL。"
  remarks: "節點的文字可以是兩種模式的其中之一︰ 選取範圍模式或瀏覽模式。 根據預設，節點處於選取模式。 若要將節點放入瀏覽模式中，設定節點的 NavigateUrl 屬性為空字串以外的值。       瀏覽模式中的節點時，該節點會停用選取範圍的所有事件。 按一下瀏覽模式中的節點會將使用者連結至指定的 URL。 您可以選擇設定<xref:System.Web.UI.WebControls.TreeNode.Target%2A>屬性，以指定的視窗或框架，在其中顯示連結的內容。</xref:System.Web.UI.WebControls.TreeNode.Target%2A>       這個屬性的值會儲存檢視狀態中。"
  example:
  - "The following code example demonstrates how to set up the frames for the next code example.  \n  \n [!code-vb[TreeViewFrameSet#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1054_1.aspx)]\n [!code-cs[TreeViewFrameSet#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1054_1.aspx)]  \n  \n The following code example demonstrates how to use the NavigateUrl property to specify the URL to link to when the node is clicked. This example is used within the frameset of the previous example to display a table of contents.  \n  \n [!code-vb[TreeViewFrameExample#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1054_2.aspx)]\n [!code-cs[TreeViewFrameExample#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1054_2.aspx)]"
  syntax:
    content: public string NavigateUrl { get; set; }
    return:
      type: System.String
      description: "若要在按下的節點時，瀏覽至 URL。 預設值為空字串 (&quot;&quot;)，表示這個屬性未設定。"
  overload: System.Web.UI.WebControls.TreeNode.NavigateUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.Parent
  id: Parent
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: Parent
  nameWithType: TreeNode.Parent
  fullName: System.Web.UI.WebControls.TreeNode.Parent
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得目前節點的父節點。"
  remarks: "父屬性會傳回<xref:System.Web.UI.WebControls.TreeNode>物件，表示目前節點的父節點。</xref:System.Web.UI.WebControls.TreeNode> 它常用來判斷父節點，或存取父節點的屬性。      > [!NOTE] > 根節點沒有父節點。       若要存取目前節點的子節點，請使用<xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A>屬性。</xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A>"
  example:
  - "The following code example demonstrates how to use the Parent property to access the <xref:System.Web.UI.WebControls.TreeNode.Text%2A> property of the current node's parent node.  \n  \n [!code-vb[TreeNodeParent#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_132_1.aspx)]\n [!code-cs[TreeNodeParent#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_132_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TreeNode Parent { get; }
    return:
      type: System.Web.UI.WebControls.TreeNode
      description: "A <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> ，代表目前節點的父節點。"
  overload: System.Web.UI.WebControls.TreeNode.Parent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.PopulateOnDemand
  id: PopulateOnDemand
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: PopulateOnDemand
  nameWithType: TreeNode.PopulateOnDemand
  fullName: System.Web.UI.WebControls.TreeNode.PopulateOnDemand
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定值，指出節點是否動態擴展。"
  remarks: "某些情況下，它並不實用靜態地預先定義的資料大小，或根據使用者輸入的自訂內容的樹狀結構。 因為這個緣故，<xref:System.Web.UI.WebControls.TreeView>控制項支援動態節點母體擴展。</xref:System.Web.UI.WebControls.TreeView> 當節點的 PopulateOnDemand 屬性設定為`true`，該節點會填入執行階段，透過展開節點時有回傳事件。 若要以動態方式填入節點，節點會填入事件處理方法必須定義<xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate>事件。</xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate>       支援的瀏覽器也可以利用用戶端節點母體擴展。 啟用時，這可讓<xref:System.Web.UI.WebControls.TreeView>控制項以動態地填入用戶端上的節點，展開該節點時，這會避免需回傳至伺服器。</xref:System.Web.UI.WebControls.TreeView> 如需有關用戶端節點母體擴展的詳細資訊，請參閱<xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A>.</xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A>       這個屬性的值會儲存檢視狀態中。"
  example:
  - "The following code example demonstrates how to use the PopulateOnDemand property to indicate that a node is populated dynamically.  \n  \n [!code-cs[TreeViewPopulateNodesFromClient#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_774_1.aspx)]\n [!code-vb[TreeViewPopulateNodesFromClient#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_774_1.aspx)]"
  syntax:
    content: public bool PopulateOnDemand { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要以動態方式; 填入節點否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.TreeNode.PopulateOnDemand*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.RenderPostText(System.Web.UI.HtmlTextWriter)
  id: RenderPostText(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: RenderPostText(HtmlTextWriter)
  nameWithType: TreeNode.RenderPostText(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.TreeNode.RenderPostText(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "可讓控制項開發人員以新增其他轉譯的節點。"
  remarks: "由控制項開發人員加入其他呈現在呈現的節點之後，可以覆寫這個方法。"
  syntax:
    content: protected virtual void RenderPostText (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> ，代表用來寫入網頁內容的輸出資料流。"
  overload: System.Web.UI.WebControls.TreeNode.RenderPostText*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.RenderPreText(System.Web.UI.HtmlTextWriter)
  id: RenderPreText(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: RenderPreText(HtmlTextWriter)
  nameWithType: TreeNode.RenderPreText(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.TreeNode.RenderPreText(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "可讓控制項開發人員以新增其他轉譯的節點。"
  remarks: "由控制項開發人員以新增其他轉譯，轉譯的節點之前，可以覆寫這個方法。"
  syntax:
    content: protected virtual void RenderPreText (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> ，代表用來寫入網頁內容的輸出資料流。"
  overload: System.Web.UI.WebControls.TreeNode.RenderPreText*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.SaveViewState
  id: SaveViewState
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: SaveViewState()
  nameWithType: TreeNode.SaveViewState()
  fullName: System.Web.UI.WebControls.TreeNode.SaveViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "儲存目前檢視狀態的節點。"
  remarks: "SaveViewState 方法是 helper 方法呼叫由儲存其狀態的節點。"
  syntax:
    content: protected virtual object SaveViewState ();
    parameters: []
    return:
      type: System.Object
      description: "<xref:System.Object>，其中包含節點的已儲存的狀態。</xref:System.Object>"
  overload: System.Web.UI.WebControls.TreeNode.SaveViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.Select
  id: Select
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: Select()
  nameWithType: TreeNode.Select()
  fullName: System.Web.UI.WebControls.TreeNode.Select()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "選取目前的節點中<xref href=&quot;System.Web.UI.WebControls.TreeView&quot;></xref>控制項。"
  remarks: "使用選取的方法來選取目前節點中的<xref:System.Web.UI.WebControls.TreeView>控制項。</xref:System.Web.UI.WebControls.TreeView>       **請注意**或者，您也可以選取目前節點設定<xref:System.Web.UI.WebControls.TreeNode.Selected%2A>屬性`true`。</xref:System.Web.UI.WebControls.TreeNode.Selected%2A>"
  example:
  - "The following code example demonstrates how to use the Select method to select a node in the <xref:System.Web.UI.WebControls.TreeView> control.  \n  \n [!code-vb[TreeNodeSelected2#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_189_1.aspx)]\n [!code-cs[TreeNodeSelected2#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_189_1.aspx)]"
  syntax:
    content: public void Select ();
    parameters: []
  overload: System.Web.UI.WebControls.TreeNode.Select*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.SelectAction
  id: SelectAction
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: SelectAction
  nameWithType: TreeNode.SelectAction
  fullName: System.Web.UI.WebControls.TreeNode.SelectAction
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定的選取節點時引發的事件。"
  remarks: "在節點的文字<xref:System.Web.UI.WebControls.TreeView>控制項可以處於兩種模式︰ 選取範圍模式或瀏覽模式。</xref:System.Web.UI.WebControls.TreeView> 根據預設，節點處於選取模式。 將節點放入瀏覽模式中，設定節點的<xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>屬性為空字串以外的值 (&quot;&quot;)。</xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> 節點處於選取模式，將節點設定<xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>屬性設為空字串。</xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>      > [!NOTE] > 選取事件瀏覽模式中的節點時，會停用該節點。 按一下節點會將使用者導向至指定的 URL，而不是張貼頁面回傳至伺服器和引發事件。       當節點處於選取模式時，使用 SelectAction 屬性來指定選取的節點時引發的事件。 下表列出可用的選項。      |選取動作 |描述 |  |----------------------|-----------------|  |`TreeNodeSelectAction.Expand`|切換展開或摺疊節點。 <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded>事件或視需要<xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed>事件便會產生。 |  |`TreeNodeSelectAction.None`|會引發任何事件，選取節點時。 |  |`TreeNodeSelectAction.Select`|引發<xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged>事件選取節點時。 |  |`TreeNodeSelectAction.SelectExpand`|引發兩者<xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged>和<xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded>選取節點時的事件。</xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> </xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> </xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> </xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed> </xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> 只會展開節點，不會摺疊。 |     > [!NOTE] ><xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>屬性不會呈現節點的 SelectAction 屬性設定為`TreeNodeSelectAction.None`。</xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>       這個屬性的值會儲存檢視狀態中。"
  example:
  - "The following code example demonstrates how to use the SelectAction property to specify which event is raised when a node is clicked.  \n  \n [!code-cs[TreeViewPopulateNodesFromClient#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1227_1.aspx)]\n [!code-vb[TreeViewPopulateNodesFromClient#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1227_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TreeNodeSelectAction SelectAction { get; set; }
    return:
      type: System.Web.UI.WebControls.TreeNodeSelectAction
      description: "其中一個<xref href=&quot;System.Web.UI.WebControls.TreeNodeSelectAction&quot;></xref>值。 預設值是<xref uid=&quot;langword_csharp_TreeNodeSelectAction.Select&quot; name=&quot;TreeNodeSelectAction.Select&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.TreeNode.SelectAction*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.Selected
  id: Selected
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: Selected
  nameWithType: TreeNode.Selected
  fullName: System.Web.UI.WebControls.TreeNode.Selected
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定值，指出是否已選取的節點。"
  remarks: "使用選取的屬性來指定，或判斷是否已選取的節點。      > [!NOTE] > 屬性可以用來判斷是否已選取的節點，雖然更常見的是使用<xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A>屬性。</xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A>       只有一個節點可以一次選取<xref:System.Web.UI.WebControls.TreeView>時使用這個屬性控制。</xref:System.Web.UI.WebControls.TreeView>      > [!NOTE] > 或者，您也可以選取節點使用<xref:System.Web.UI.WebControls.TreeNode.Select%2A>方法。</xref:System.Web.UI.WebControls.TreeNode.Select%2A>       這個屬性的值會儲存檢視狀態中。"
  example:
  - "The following code example demonstrates how to use the Selected property to select a node in the <xref:System.Web.UI.WebControls.TreeView> control.  \n  \n [!code-vb[TreeNodeSelected2#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_559_1.aspx)]\n [!code-cs[TreeNodeSelected2#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_559_1.aspx)]"
  syntax:
    content: public bool Selected { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果選取的節點。，否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.TreeNode.Selected*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.ShowCheckBox
  id: ShowCheckBox
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: ShowCheckBox
  nameWithType: TreeNode.ShowCheckBox
  fullName: System.Web.UI.WebControls.TreeNode.ShowCheckBox
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定值，指出之節點旁是否顯示核取方塊。"
  remarks: "<xref:System.Web.UI.WebControls.TreeView>控制項可讓您顯示節點的映像旁邊的核取方塊。</xref:System.Web.UI.WebControls.TreeView> 使用 ShowCheckBox 屬性來顯示或隱藏目前節點的核取方塊。       雖然 ShowCheckBox 屬性可以用來顯示核取方塊，常見的方法是使用<xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A?displayProperty=fullName>屬性<xref:System.Web.UI.WebControls.TreeView>控制項。</xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A?displayProperty=fullName> <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A?displayProperty=fullName>屬性，不過，會影響每個節點型別屬性所指定; 因此，如果 ShowCheckBox 屬性通常用來覆寫該設定的個別節點。</xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A?displayProperty=fullName>       因為<xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A?displayProperty=fullName>屬性是三種狀態的屬性，下列 C# 程式碼片段會導致編譯錯誤︰```   protected void TreeView1_SelectedNodeChanged(object sender, EventArgs e)   {   if (TreeView1.Nodes[0].Expanded)   {   // some work here    }   }   ```時 VB.Net 隱含地將轉換`Boolean`值設定為`NullableBoolean`，C# 則否。</xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A?displayProperty=fullName> 因此，很明確檢查屬性狀態的最佳作法。 例如，Visual Basic 和 C# 中的下列程式碼範例會明確地測試的值<xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>屬性。</xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>       下列 Visual Basic 程式碼範例會明確地測試的值<xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>屬性。</xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> 這個範例會測試<xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>屬性設定為`True`; 因此`Nothing`和`False`落入`If`陳述式。</xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>      ```   If TreeView1.Nodes(0).Expanded = True Then &quot;some work hereEnd IF   ```這個 C# 程式碼範例會明確地測試的值<xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>屬性。</xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> 這個範例會測試<xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>屬性設定為`True`; 因此`Null`和`False`落入`If`陳述式。</xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>      ```   if( TreeView1.Nodes[0].Expanded == true ) { //some work here}   ```這個屬性的值會儲存檢視狀態中。"
  example:
  - "The following code example demonstrates how to use the ShowCheckBox property to programmatically show and hide the check box for a node in the <xref:System.Web.UI.WebControls.TreeView> control. For this example to work correctly, you must copy the sample XML data below to a file named Book.xml.  \n  \n [!code-vb[TreeNodeShowCheckBox#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_833_1.aspx)]\n [!code-cs[TreeNodeShowCheckBox#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_833_1.aspx)]  \n  \n The following code is sample XML data for the previous example.  \n  \n```  \n<Book Title=\"Book Title\">  \n    <Chapter Heading=\"Chapter 1\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n        <Section Heading=\"Section 2\">  \n        </Section>  \n    </Chapter>  \n    <Chapter Heading=\"Chapter 2\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n    </Chapter>  \n</Book>  \n```"
  syntax:
    content: public Nullable<bool> ShowCheckBox { get; set; }
    return:
      type: System.Nullable{System.Boolean}
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要顯示核取方塊。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.TreeNode.ShowCheckBox*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.System#ICloneable#Clone
  id: System#ICloneable#Clone
  isEii: true
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: System.ICloneable.Clone()
  nameWithType: TreeNode.System.ICloneable.Clone()
  fullName: System.Web.UI.WebControls.TreeNode.System.ICloneable.Clone()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "建立一份<xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;></xref>物件。"
  remarks: "會使用 ICloneable.Clone 方法<xref:System.Web.UI.WebControls.TreeNode>類別來建立本身的副本。</xref:System.Web.UI.WebControls.TreeNode>"
  syntax:
    content: object ICloneable.Clone ();
    parameters: []
    return:
      type: System.Object
      description: "<xref:System.Object>，代表一份<xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;></xref>物件。</xref:System.Object>"
  overload: System.Web.UI.WebControls.TreeNode.System#ICloneable#Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#IsTrackingViewState
  id: System#Web#UI#IStateManager#IsTrackingViewState
  isEii: true
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: TreeNode.System.Web.UI.IStateManager.IsTrackingViewState
  fullName: System.Web.UI.WebControls.TreeNode.System.Web.UI.IStateManager.IsTrackingViewState
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "如需這個成員的說明，請參閱<xref:System.Web.UI.IStateManager.IsTrackingViewState*>.</xref:System.Web.UI.IStateManager.IsTrackingViewState*>"
  remarks: "這個成員是明確介面成員實作。 它可用時，才<xref:System.Web.UI.WebControls.TreeNode>執行個體轉換成<xref:System.Web.UI.IStateManager>介面。</xref:System.Web.UI.IStateManager> </xref:System.Web.UI.WebControls.TreeNode>"
  syntax:
    content: bool System.Web.UI.IStateManager.IsTrackingViewState { get; }
    return:
      type: System.Boolean
      description: "值，指出節點是否正在儲存變更至其檢視狀態。"
  overload: System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#IsTrackingViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#LoadViewState(System.Object)
  id: System#Web#UI#IStateManager#LoadViewState(System.Object)
  isEii: true
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: System.Web.UI.IStateManager.LoadViewState(Object)
  nameWithType: TreeNode.System.Web.UI.IStateManager.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.TreeNode.System.Web.UI.IStateManager.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "載入的節點先前儲存檢視狀態。"
  syntax:
    content: void IStateManager.LoadViewState (object state);
    parameters:
    - id: state
      type: System.Object
      description: "A &lt;xref:System.Object?displayProperty=fullName&gt; ，其中包含已儲存的檢視狀態值。"
  overload: System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#LoadViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#SaveViewState
  id: System#Web#UI#IStateManager#SaveViewState
  isEii: true
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: System.Web.UI.IStateManager.SaveViewState()
  nameWithType: TreeNode.System.Web.UI.IStateManager.SaveViewState()
  fullName: System.Web.UI.WebControls.TreeNode.System.Web.UI.IStateManager.SaveViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "儲存檢視狀態變更為&lt;xref:System.Object?displayProperty=fullName&gt;。"
  syntax:
    content: object IStateManager.SaveViewState ();
    parameters: []
    return:
      type: System.Object
      description: "&lt;Xref:System.Object?displayProperty=fullName&gt; ，包含檢視狀態變更。"
  overload: System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#SaveViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#TrackViewState
  id: System#Web#UI#IStateManager#TrackViewState
  isEii: true
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: System.Web.UI.IStateManager.TrackViewState()
  nameWithType: TreeNode.System.Web.UI.IStateManager.TrackViewState()
  fullName: System.Web.UI.WebControls.TreeNode.System.Web.UI.IStateManager.TrackViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "指示<xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;></xref>來追蹤其檢視狀態變更的物件。"
  remarks: "伺服器控制項上呼叫這個方法之後<xref:System.Web.UI.Control.IsTrackingViewState%2A>屬性會傳回`true`。</xref:System.Web.UI.Control.IsTrackingViewState%2A>"
  syntax:
    content: void IStateManager.TrackViewState ();
    parameters: []
  overload: System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#TrackViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.Target
  id: Target
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: Target
  nameWithType: TreeNode.Target
  fullName: System.Web.UI.WebControls.TreeNode.Target
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定目標視窗或框架，其中顯示與節點關聯之 Web 網頁內容。"
  remarks: "若要指定的視窗或框架中顯示 Web 內容連結到節點在按下該節點時使用的目標屬性。      > [!NOTE] > 設定此屬性會覆寫<xref:System.Web.UI.WebControls.TreeView.Target%2A>屬性<xref:System.Web.UI.WebControls.TreeView>控制項。</xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.TreeView.Target%2A>      > [!NOTE] > Target 屬性轉譯成`target`屬性。 `target`屬性`anchor`XHTML 1.1 文件類型定義中不允許項目。 如果要設定的目標屬性的轉譯的輸出<xref:System.Web.UI.WebControls.TreeNode>物件必須是 XHTML 1.1 相容。</xref:System.Web.UI.WebControls.TreeNode> 如需詳細資訊，請參閱[XHTML 標準，在 Visual Studio 和 ASP.NET](~/add/includes/ajax-current-ext-md.md)。   >> 時建立可存取網頁，強烈建議您避免使用的目標屬性指向另一個視窗。 如需詳細資訊，請參閱[NIB: ASP.NET 網頁可及性](http://msdn.microsoft.com/en-us/9b5f3e05-e88d-4248-a5f4-9e64850fa0ae)。       這個屬性的值會儲存檢視狀態中。"
  example:
  - "The following code example demonstrates how to set up the frames for the next example.  \n  \n [!code-vb[TreeViewFrameSet#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_971_1.aspx)]\n [!code-cs[TreeViewFrameSet#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_971_1.aspx)]  \n  \n The following code example demonstrates how to use the Target property to specify the frame in which to display the linked content. This example is used within the frameset of the previous example to display a table of contents.  \n  \n [!code-vb[TreeViewFrameExample#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_971_2.aspx)]\n [!code-cs[TreeViewFrameExample#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_971_2.aspx)]"
  syntax:
    content: public string Target { get; set; }
    return:
      type: System.String
      description: "目標視窗或框架，其中顯示連結的 Web 網頁內容。 值必須以字母的 A 到 Z 範圍 （不區分大小寫） 下表所示，以底線開頭的某些特殊值以外的開頭。       <table><thead><tr><th> 目標值       </th><th> 說明       </th></tr></thead><tbody><tr><td><xref uid=&quot;langword_csharp__blank&quot; name=&quot;_blank&quot; href=&quot;&quot;></xref></td><td> 呈現在新視窗中沒有框架的內容。       </td></tr><tr><td><xref uid=&quot;langword_csharp__parent&quot; name=&quot;_parent&quot; href=&quot;&quot;></xref></td><td> 呈現父代的 即時運算框架組中的內容。       </td></tr><tr><td><xref uid=&quot;langword_csharp__search&quot; name=&quot;_search&quot; href=&quot;&quot;></xref></td><td> 轉譯 [搜尋] 窗格中的內容。       </td></tr><tr><td><xref uid=&quot;langword_csharp__self&quot; name=&quot;_self&quot; href=&quot;&quot;></xref></td><td> 呈現具有焦點的框架中的內容。       </td></tr><tr><td><xref uid=&quot;langword_csharp__top&quot; name=&quot;_top&quot; href=&quot;&quot;></xref></td><td> 呈現框架不完整的視窗中的內容。       </td></tr></tbody></table><div class=&quot;alert NOTE&quot;>    請檢查您的瀏覽器文件，以判斷是否<xref uid=&quot;langword_csharp__search&quot; name=&quot;_search&quot; href=&quot;&quot;></xref>支援值。 例如，Microsoft Internet Explorer 5.0 及更新版本都支援<xref uid=&quot;langword_csharp__search&quot; name=&quot;_search&quot; href=&quot;&quot;></xref>目標值。      </div>       預設值為空字串 (&quot;&quot;)，會重新整理的視窗或具有焦點的框架。"
  overload: System.Web.UI.WebControls.TreeNode.Target*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.Text
  id: Text
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: Text
  nameWithType: TreeNode.Text
  fullName: System.Web.UI.WebControls.TreeNode.Text
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定中之節點所顯示的文字<xref href=&quot;System.Web.UI.WebControls.TreeView&quot;></xref>控制項。"
  remarks: "使用文字屬性來指定，或決定顯示中之節點的文字<xref:System.Web.UI.WebControls.TreeView>控制項。</xref:System.Web.UI.WebControls.TreeView>      > [!NOTE] > 如果文字屬性包含`null`、`get`存取子會傳回的值<xref:System.Web.UI.WebControls.TreeNode.Value%2A>屬性。</xref:System.Web.UI.WebControls.TreeNode.Value%2A> 如果<xref:System.Web.UI.WebControls.TreeNode.Value%2A>屬性，依序包含`null`，<xref:System.String.Empty>傳回。</xref:System.String.Empty> </xref:System.Web.UI.WebControls.TreeNode.Value%2A>       這個屬性的值會儲存檢視狀態中。       這個屬性的值設定時，可以自動儲存到資源檔使用設計工具。 如需詳細資訊，請參閱<xref:System.ComponentModel.LocalizableAttribute>和[全球化和當地語系化](~/add/includes/ajax-current-ext-md.md)。</xref:System.ComponentModel.LocalizableAttribute>"
  example:
  - "The following code example demonstrates how to use the Text property to specify the text for a node.  \n  \n [!code-vb[TreeViewFrameExample#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_843_1.aspx)]\n [!code-cs[TreeViewFrameExample#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_843_1.aspx)]"
  syntax:
    content: public string Text { get; set; }
    return:
      type: System.String
      description: "中之節點所顯示的文字<xref href=&quot;System.Web.UI.WebControls.TreeView&quot;></xref>控制項。 預設為空字串 (&quot;&quot;)。"
  overload: System.Web.UI.WebControls.TreeNode.Text*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.ToggleExpandState
  id: ToggleExpandState
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: ToggleExpandState()
  nameWithType: TreeNode.ToggleExpandState()
  fullName: System.Web.UI.WebControls.TreeNode.ToggleExpandState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "節點的展開和摺疊狀態之間轉換。"
  remarks: "節點使用 ToggleExpandState 方法，以切換展開和摺疊的狀態。 例如，如果已摺疊節點，呼叫 ToggleExpandState 方法展開的節點，反之亦然。      > [!NOTE] > 或者，您可以設定<xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>屬性直接。</xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>"
  example:
  - "The following code example demonstrates how to use the ToggleExpandState method to alternate between an expanded and a collapsed state for the root node of a <xref:System.Web.UI.WebControls.TreeView> control.  \n  \n [!code-vb[TreeNodeToggleExpandState#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_18_1.aspx)]\n [!code-cs[TreeNodeToggleExpandState#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_18_1.aspx)]"
  syntax:
    content: public void ToggleExpandState ();
    parameters: []
  overload: System.Web.UI.WebControls.TreeNode.ToggleExpandState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.ToolTip
  id: ToolTip
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: ToolTip
  nameWithType: TreeNode.ToolTip
  fullName: System.Web.UI.WebControls.TreeNode.ToolTip
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定節點的工具提示文字。"
  remarks: "您可以使用 ToolTip 屬性來指定節點的工具提示文字。 當滑鼠指標的節點上方時，會顯示工具提示文字。       這個屬性的值設定時，可以自動儲存到資源檔使用設計工具。 如需詳細資訊，請參閱<xref:System.ComponentModel.LocalizableAttribute>和[全球化和當地語系化](~/add/includes/ajax-current-ext-md.md)。</xref:System.ComponentModel.LocalizableAttribute>"
  example:
  - "The following code example demonstrates how to use the ToolTip property to provide ToolTips for the nodes in the <xref:System.Web.UI.WebControls.TreeView> control.  \n  \n [!code-cs[TreeNodeToolTip#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_69_1.aspx)]\n [!code-vb[TreeNodeToolTip#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_69_1.aspx)]"
  syntax:
    content: public string ToolTip { get; set; }
    return:
      type: System.String
      description: "節點的工具提示文字。 預設為空字串 (&quot;&quot;)。"
  overload: System.Web.UI.WebControls.TreeNode.ToolTip*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.TrackViewState
  id: TrackViewState
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: TrackViewState()
  nameWithType: TreeNode.TrackViewState()
  fullName: System.Web.UI.WebControls.TreeNode.TrackViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "標記中要開始追蹤和儲存檢視狀態變更為節點的起點。"
  syntax:
    content: protected void TrackViewState ();
    parameters: []
  overload: System.Web.UI.WebControls.TreeNode.TrackViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.Value
  id: Value
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: Value
  nameWithType: TreeNode.Value
  fullName: System.Web.UI.WebControls.TreeNode.Value
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定用來儲存與節點有關，例如用來處理回傳事件資料的任何其他資料的非顯示值。"
  remarks: "Value 屬性用來補充<xref:System.Web.UI.WebControls.TreeNode.Text%2A>儲存與節點相關聯的任何其他資料的屬性。</xref:System.Web.UI.WebControls.TreeNode.Text%2A> 此值不會顯示在控制項中，通常用來儲存資料處理回傳事件。      > [!NOTE] > 如果 Value 屬性包含`null`、`get`存取子會傳回的值<xref:System.Web.UI.WebControls.TreeNode.Text%2A>屬性。</xref:System.Web.UI.WebControls.TreeNode.Text%2A> 如果<xref:System.Web.UI.WebControls.TreeNode.Text%2A>屬性，依序包含`null`，<xref:System.String.Empty>傳回。</xref:System.String.Empty> </xref:System.Web.UI.WebControls.TreeNode.Text%2A>      > [!NOTE] > 節點同層級的每個值必須是唯一 Value 屬性;<xref:System.Web.UI.WebControls.TreeView>控制項無法區別相同層級具有相同的值的不同節點。</xref:System.Web.UI.WebControls.TreeView> 在此案例中，如果使用者有重複的值，節點的節點，出現在第一個<xref:System.Web.UI.WebControls.TreeView>選取控制項。</xref:System.Web.UI.WebControls.TreeView>       這個屬性的值會儲存檢視狀態中。       這個屬性的值設定時，可以自動儲存到資源檔使用設計工具。 如需詳細資訊，請參閱<xref:System.ComponentModel.LocalizableAttribute>和[全球化和當地語系化](~/add/includes/ajax-current-ext-md.md)。</xref:System.ComponentModel.LocalizableAttribute>"
  example:
  - "The following code example demonstrates how to use the Value property to store the key field.  \n  \n [!code-cs[TreeViewPopulateNodesFromClient#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1316_1.aspx)]\n [!code-vb[TreeViewPopulateNodesFromClient#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1316_1.aspx)]"
  syntax:
    content: public string Value { get; set; }
    return:
      type: System.String
      description: "補充不會顯示節點的詳細資料。 預設值為空字串 (&quot;&quot;)。"
  overload: System.Web.UI.WebControls.TreeNode.Value*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.ValuePath
  id: ValuePath
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: ValuePath
  nameWithType: TreeNode.ValuePath
  fullName: System.Web.UI.WebControls.TreeNode.ValuePath
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得目前節點的路徑從根節點。"
  remarks: "ValuePath 屬性包含表單的目前節點的路徑從根節點的節點值的分隔符號分隔清單。 使用<xref:System.Web.UI.WebControls.TreeView.PathSeparator%2A>屬性來指定用來分隔節點值的分隔符號字元。</xref:System.Web.UI.WebControls.TreeView.PathSeparator%2A> 這個值通常用於剖析清單對於個別的值，或做為引數傳遞至<xref:System.Web.UI.WebControls.TreeView.FindNode%2A>方法的<xref:System.Web.UI.WebControls.TreeView>類別。</xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.TreeView.FindNode%2A>       中顯示的值根據<xref:System.Web.UI.WebControls.TreeView>控制項，以避免任何衝突變更，可能需要分隔符號字元。</xref:System.Web.UI.WebControls.TreeView> 例如，如果您設定逗號分隔符號字元，所顯示的值不應包含任何逗號;否則，就無法正確地剖析 ValuePath 屬性。      > [!NOTE] > 相同層級的節點每個值必須是唯一的<xref:System.Web.UI.WebControls.TreeNode.Value%2A>屬性;<xref:System.Web.UI.WebControls.TreeView>控制項無法區別相同層級具有相同的值的不同節點。</xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.TreeNode.Value%2A> 在此案例中，如果使用者有重複的值，節點的節點，出現在第一個<xref:System.Web.UI.WebControls.TreeView>選取控制項。</xref:System.Web.UI.WebControls.TreeView>"
  example:
  - "The following code example demonstrates how to parse the ValuePath property.  \n  \n [!code-cs[TreeViewPathSeparator2#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_230_1.aspx)]\n [!code-vb[TreeViewPathSeparator2#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_230_1.aspx)]"
  syntax:
    content: public string ValuePath { get; }
    return:
      type: System.String
      description: "形成目前節點的路徑從根節點的節點值的分隔符號分隔的清單。"
  overload: System.Web.UI.WebControls.TreeNode.ValuePath*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.UI.WebControls.TreeNode.#ctor
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: TreeNode()
  nameWithType: TreeNode.TreeNode()
  fullName: System.Web.UI.WebControls.TreeNode.TreeNode()
- uid: System.Web.UI.WebControls.TreeNode.#ctor(System.String)
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: TreeNode(String)
  nameWithType: TreeNode.TreeNode(String)
  fullName: System.Web.UI.WebControls.TreeNode.TreeNode(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.TreeNode.#ctor(System.String,System.String)
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: TreeNode(String,String)
  nameWithType: TreeNode.TreeNode(String,String)
  fullName: System.Web.UI.WebControls.TreeNode.TreeNode(String,String)
- uid: System.Web.UI.WebControls.TreeNode.#ctor(System.Web.UI.WebControls.TreeView,System.Boolean)
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: TreeNode(TreeView,Boolean)
  nameWithType: TreeNode.TreeNode(TreeView,Boolean)
  fullName: System.Web.UI.WebControls.TreeNode.TreeNode(TreeView,Boolean)
- uid: System.Web.UI.WebControls.TreeView
  parent: System.Web.UI.WebControls
  isExternal: false
  name: TreeView
  nameWithType: TreeView
  fullName: System.Web.UI.WebControls.TreeView
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.TreeNode.#ctor(System.String,System.String,System.String)
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: TreeNode(String,String,String)
  nameWithType: TreeNode.TreeNode(String,String,String)
  fullName: System.Web.UI.WebControls.TreeNode.TreeNode(String,String,String)
- uid: System.Web.UI.WebControls.TreeNode.#ctor(System.String,System.String,System.String,System.String,System.String)
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: TreeNode(String,String,String,String,String)
  nameWithType: TreeNode.TreeNode(String,String,String,String,String)
  fullName: System.Web.UI.WebControls.TreeNode.TreeNode(String,String,String,String,String)
- uid: System.Web.UI.WebControls.TreeNode.Checked
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Checked
  nameWithType: TreeNode.Checked
  fullName: System.Web.UI.WebControls.TreeNode.Checked
- uid: System.Web.UI.WebControls.TreeNode.ChildNodes
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: ChildNodes
  nameWithType: TreeNode.ChildNodes
  fullName: System.Web.UI.WebControls.TreeNode.ChildNodes
- uid: System.Web.UI.WebControls.TreeNodeCollection
  parent: System.Web.UI.WebControls
  isExternal: false
  name: TreeNodeCollection
  nameWithType: TreeNodeCollection
  fullName: System.Web.UI.WebControls.TreeNodeCollection
- uid: System.Web.UI.WebControls.TreeNode.Clone
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Clone()
  nameWithType: TreeNode.Clone()
  fullName: System.Web.UI.WebControls.TreeNode.Clone()
- uid: System.Web.UI.WebControls.TreeNode.Collapse
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Collapse()
  nameWithType: TreeNode.Collapse()
  fullName: System.Web.UI.WebControls.TreeNode.Collapse()
- uid: System.Web.UI.WebControls.TreeNode.CollapseAll
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: CollapseAll()
  nameWithType: TreeNode.CollapseAll()
  fullName: System.Web.UI.WebControls.TreeNode.CollapseAll()
- uid: System.Web.UI.WebControls.TreeNode.DataBound
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: DataBound
  nameWithType: TreeNode.DataBound
  fullName: System.Web.UI.WebControls.TreeNode.DataBound
- uid: System.Web.UI.WebControls.TreeNode.DataItem
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: DataItem
  nameWithType: TreeNode.DataItem
  fullName: System.Web.UI.WebControls.TreeNode.DataItem
- uid: System.Web.UI.WebControls.TreeNode.DataPath
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: DataPath
  nameWithType: TreeNode.DataPath
  fullName: System.Web.UI.WebControls.TreeNode.DataPath
- uid: System.Web.UI.WebControls.TreeNode.Depth
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Depth
  nameWithType: TreeNode.Depth
  fullName: System.Web.UI.WebControls.TreeNode.Depth
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.TreeNode.Expand
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Expand()
  nameWithType: TreeNode.Expand()
  fullName: System.Web.UI.WebControls.TreeNode.Expand()
- uid: System.Web.UI.WebControls.TreeNode.ExpandAll
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: ExpandAll()
  nameWithType: TreeNode.ExpandAll()
  fullName: System.Web.UI.WebControls.TreeNode.ExpandAll()
- uid: System.Web.UI.WebControls.TreeNode.Expanded
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Expanded
  nameWithType: TreeNode.Expanded
  fullName: System.Web.UI.WebControls.TreeNode.Expanded
- uid: System.Nullable{System.Boolean}
  parent: System
  isExternal: true
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.Boolean>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: Boolean
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.UI.WebControls.TreeNode.ImageToolTip
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: ImageToolTip
  nameWithType: TreeNode.ImageToolTip
  fullName: System.Web.UI.WebControls.TreeNode.ImageToolTip
- uid: System.Web.UI.WebControls.TreeNode.ImageUrl
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: ImageUrl
  nameWithType: TreeNode.ImageUrl
  fullName: System.Web.UI.WebControls.TreeNode.ImageUrl
- uid: System.Web.UI.WebControls.TreeNode.IsTrackingViewState
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: IsTrackingViewState
  nameWithType: TreeNode.IsTrackingViewState
  fullName: System.Web.UI.WebControls.TreeNode.IsTrackingViewState
- uid: System.Web.UI.WebControls.TreeNode.LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: LoadViewState(Object)
  nameWithType: TreeNode.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.TreeNode.LoadViewState(Object)
- uid: System.Web.UI.WebControls.TreeNode.NavigateUrl
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: NavigateUrl
  nameWithType: TreeNode.NavigateUrl
  fullName: System.Web.UI.WebControls.TreeNode.NavigateUrl
- uid: System.Web.UI.WebControls.TreeNode.Parent
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Parent
  nameWithType: TreeNode.Parent
  fullName: System.Web.UI.WebControls.TreeNode.Parent
- uid: System.Web.UI.WebControls.TreeNode
  parent: System.Web.UI.WebControls
  isExternal: false
  name: TreeNode
  nameWithType: TreeNode
  fullName: System.Web.UI.WebControls.TreeNode
- uid: System.Web.UI.WebControls.TreeNode.PopulateOnDemand
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: PopulateOnDemand
  nameWithType: TreeNode.PopulateOnDemand
  fullName: System.Web.UI.WebControls.TreeNode.PopulateOnDemand
- uid: System.Web.UI.WebControls.TreeNode.RenderPostText(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: RenderPostText(HtmlTextWriter)
  nameWithType: TreeNode.RenderPostText(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.TreeNode.RenderPostText(HtmlTextWriter)
- uid: System.Web.UI.HtmlTextWriter
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriter
  nameWithType: HtmlTextWriter
  fullName: System.Web.UI.HtmlTextWriter
- uid: System.Web.UI.WebControls.TreeNode.RenderPreText(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: RenderPreText(HtmlTextWriter)
  nameWithType: TreeNode.RenderPreText(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.TreeNode.RenderPreText(HtmlTextWriter)
- uid: System.Web.UI.WebControls.TreeNode.SaveViewState
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: SaveViewState()
  nameWithType: TreeNode.SaveViewState()
  fullName: System.Web.UI.WebControls.TreeNode.SaveViewState()
- uid: System.Web.UI.WebControls.TreeNode.Select
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Select()
  nameWithType: TreeNode.Select()
  fullName: System.Web.UI.WebControls.TreeNode.Select()
- uid: System.Web.UI.WebControls.TreeNode.SelectAction
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: SelectAction
  nameWithType: TreeNode.SelectAction
  fullName: System.Web.UI.WebControls.TreeNode.SelectAction
- uid: System.Web.UI.WebControls.TreeNodeSelectAction
  parent: System.Web.UI.WebControls
  isExternal: false
  name: TreeNodeSelectAction
  nameWithType: TreeNodeSelectAction
  fullName: System.Web.UI.WebControls.TreeNodeSelectAction
- uid: System.Web.UI.WebControls.TreeNode.Selected
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Selected
  nameWithType: TreeNode.Selected
  fullName: System.Web.UI.WebControls.TreeNode.Selected
- uid: System.Web.UI.WebControls.TreeNode.ShowCheckBox
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: ShowCheckBox
  nameWithType: TreeNode.ShowCheckBox
  fullName: System.Web.UI.WebControls.TreeNode.ShowCheckBox
- uid: System.Web.UI.WebControls.TreeNode.System#ICloneable#Clone
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: System.ICloneable.Clone()
  nameWithType: TreeNode.System.ICloneable.Clone()
  fullName: System.Web.UI.WebControls.TreeNode.System.ICloneable.Clone()
- uid: System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#IsTrackingViewState
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: TreeNode.System.Web.UI.IStateManager.IsTrackingViewState
  fullName: System.Web.UI.WebControls.TreeNode.System.Web.UI.IStateManager.IsTrackingViewState
- uid: System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: System.Web.UI.IStateManager.LoadViewState(Object)
  nameWithType: TreeNode.System.Web.UI.IStateManager.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.TreeNode.System.Web.UI.IStateManager.LoadViewState(Object)
- uid: System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#SaveViewState
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: System.Web.UI.IStateManager.SaveViewState()
  nameWithType: TreeNode.System.Web.UI.IStateManager.SaveViewState()
  fullName: System.Web.UI.WebControls.TreeNode.System.Web.UI.IStateManager.SaveViewState()
- uid: System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#TrackViewState
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: System.Web.UI.IStateManager.TrackViewState()
  nameWithType: TreeNode.System.Web.UI.IStateManager.TrackViewState()
  fullName: System.Web.UI.WebControls.TreeNode.System.Web.UI.IStateManager.TrackViewState()
- uid: System.Web.UI.WebControls.TreeNode.Target
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Target
  nameWithType: TreeNode.Target
  fullName: System.Web.UI.WebControls.TreeNode.Target
- uid: System.Web.UI.WebControls.TreeNode.Text
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Text
  nameWithType: TreeNode.Text
  fullName: System.Web.UI.WebControls.TreeNode.Text
- uid: System.Web.UI.WebControls.TreeNode.ToggleExpandState
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: ToggleExpandState()
  nameWithType: TreeNode.ToggleExpandState()
  fullName: System.Web.UI.WebControls.TreeNode.ToggleExpandState()
- uid: System.Web.UI.WebControls.TreeNode.ToolTip
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: ToolTip
  nameWithType: TreeNode.ToolTip
  fullName: System.Web.UI.WebControls.TreeNode.ToolTip
- uid: System.Web.UI.WebControls.TreeNode.TrackViewState
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: TrackViewState()
  nameWithType: TreeNode.TrackViewState()
  fullName: System.Web.UI.WebControls.TreeNode.TrackViewState()
- uid: System.Web.UI.WebControls.TreeNode.Value
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Value
  nameWithType: TreeNode.Value
  fullName: System.Web.UI.WebControls.TreeNode.Value
- uid: System.Web.UI.WebControls.TreeNode.ValuePath
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: ValuePath
  nameWithType: TreeNode.ValuePath
  fullName: System.Web.UI.WebControls.TreeNode.ValuePath
- uid: System.Web.UI.WebControls.TreeNode.#ctor*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: TreeNode
  nameWithType: TreeNode.TreeNode
- uid: System.Web.UI.WebControls.TreeNode.Checked*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Checked
  nameWithType: TreeNode.Checked
- uid: System.Web.UI.WebControls.TreeNode.ChildNodes*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: ChildNodes
  nameWithType: TreeNode.ChildNodes
- uid: System.Web.UI.WebControls.TreeNode.Clone*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Clone
  nameWithType: TreeNode.Clone
- uid: System.Web.UI.WebControls.TreeNode.Collapse*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Collapse
  nameWithType: TreeNode.Collapse
- uid: System.Web.UI.WebControls.TreeNode.CollapseAll*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: CollapseAll
  nameWithType: TreeNode.CollapseAll
- uid: System.Web.UI.WebControls.TreeNode.DataBound*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: DataBound
  nameWithType: TreeNode.DataBound
- uid: System.Web.UI.WebControls.TreeNode.DataItem*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: DataItem
  nameWithType: TreeNode.DataItem
- uid: System.Web.UI.WebControls.TreeNode.DataPath*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: DataPath
  nameWithType: TreeNode.DataPath
- uid: System.Web.UI.WebControls.TreeNode.Depth*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Depth
  nameWithType: TreeNode.Depth
- uid: System.Web.UI.WebControls.TreeNode.Expand*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Expand
  nameWithType: TreeNode.Expand
- uid: System.Web.UI.WebControls.TreeNode.ExpandAll*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: ExpandAll
  nameWithType: TreeNode.ExpandAll
- uid: System.Web.UI.WebControls.TreeNode.Expanded*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Expanded
  nameWithType: TreeNode.Expanded
- uid: System.Web.UI.WebControls.TreeNode.ImageToolTip*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: ImageToolTip
  nameWithType: TreeNode.ImageToolTip
- uid: System.Web.UI.WebControls.TreeNode.ImageUrl*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: ImageUrl
  nameWithType: TreeNode.ImageUrl
- uid: System.Web.UI.WebControls.TreeNode.IsTrackingViewState*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: IsTrackingViewState
  nameWithType: TreeNode.IsTrackingViewState
- uid: System.Web.UI.WebControls.TreeNode.LoadViewState*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: LoadViewState
  nameWithType: TreeNode.LoadViewState
- uid: System.Web.UI.WebControls.TreeNode.NavigateUrl*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: NavigateUrl
  nameWithType: TreeNode.NavigateUrl
- uid: System.Web.UI.WebControls.TreeNode.Parent*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Parent
  nameWithType: TreeNode.Parent
- uid: System.Web.UI.WebControls.TreeNode.PopulateOnDemand*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: PopulateOnDemand
  nameWithType: TreeNode.PopulateOnDemand
- uid: System.Web.UI.WebControls.TreeNode.RenderPostText*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: RenderPostText
  nameWithType: TreeNode.RenderPostText
- uid: System.Web.UI.WebControls.TreeNode.RenderPreText*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: RenderPreText
  nameWithType: TreeNode.RenderPreText
- uid: System.Web.UI.WebControls.TreeNode.SaveViewState*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: SaveViewState
  nameWithType: TreeNode.SaveViewState
- uid: System.Web.UI.WebControls.TreeNode.Select*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Select
  nameWithType: TreeNode.Select
- uid: System.Web.UI.WebControls.TreeNode.SelectAction*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: SelectAction
  nameWithType: TreeNode.SelectAction
- uid: System.Web.UI.WebControls.TreeNode.Selected*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Selected
  nameWithType: TreeNode.Selected
- uid: System.Web.UI.WebControls.TreeNode.ShowCheckBox*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: ShowCheckBox
  nameWithType: TreeNode.ShowCheckBox
- uid: System.Web.UI.WebControls.TreeNode.System#ICloneable#Clone*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: System.ICloneable.Clone
  nameWithType: TreeNode.System.ICloneable.Clone
- uid: System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#IsTrackingViewState*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: TreeNode.System.Web.UI.IStateManager.IsTrackingViewState
- uid: System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#LoadViewState*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: System.Web.UI.IStateManager.LoadViewState
  nameWithType: TreeNode.System.Web.UI.IStateManager.LoadViewState
- uid: System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#SaveViewState*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: System.Web.UI.IStateManager.SaveViewState
  nameWithType: TreeNode.System.Web.UI.IStateManager.SaveViewState
- uid: System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#TrackViewState*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: System.Web.UI.IStateManager.TrackViewState
  nameWithType: TreeNode.System.Web.UI.IStateManager.TrackViewState
- uid: System.Web.UI.WebControls.TreeNode.Target*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Target
  nameWithType: TreeNode.Target
- uid: System.Web.UI.WebControls.TreeNode.Text*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Text
  nameWithType: TreeNode.Text
- uid: System.Web.UI.WebControls.TreeNode.ToggleExpandState*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: ToggleExpandState
  nameWithType: TreeNode.ToggleExpandState
- uid: System.Web.UI.WebControls.TreeNode.ToolTip*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: ToolTip
  nameWithType: TreeNode.ToolTip
- uid: System.Web.UI.WebControls.TreeNode.TrackViewState*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: TrackViewState
  nameWithType: TreeNode.TrackViewState
- uid: System.Web.UI.WebControls.TreeNode.Value*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Value
  nameWithType: TreeNode.Value
- uid: System.Web.UI.WebControls.TreeNode.ValuePath*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: ValuePath
  nameWithType: TreeNode.ValuePath
