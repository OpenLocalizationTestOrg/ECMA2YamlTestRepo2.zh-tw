### YamlMime:ManagedReference
items:
- uid: System.Web.HttpRequest
  id: HttpRequest
  children:
  - System.Web.HttpRequest.#ctor(System.String,System.String,System.String)
  - System.Web.HttpRequest.Abort
  - System.Web.HttpRequest.AcceptTypes
  - System.Web.HttpRequest.AnonymousID
  - System.Web.HttpRequest.ApplicationPath
  - System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath
  - System.Web.HttpRequest.BinaryRead(System.Int32)
  - System.Web.HttpRequest.Browser
  - System.Web.HttpRequest.ClientCertificate
  - System.Web.HttpRequest.ContentEncoding
  - System.Web.HttpRequest.ContentLength
  - System.Web.HttpRequest.ContentType
  - System.Web.HttpRequest.Cookies
  - System.Web.HttpRequest.CurrentExecutionFilePath
  - System.Web.HttpRequest.CurrentExecutionFilePathExtension
  - System.Web.HttpRequest.FilePath
  - System.Web.HttpRequest.Files
  - System.Web.HttpRequest.Filter
  - System.Web.HttpRequest.Form
  - System.Web.HttpRequest.GetBufferedInputStream
  - System.Web.HttpRequest.GetBufferlessInputStream
  - System.Web.HttpRequest.GetBufferlessInputStream(System.Boolean)
  - System.Web.HttpRequest.Headers
  - System.Web.HttpRequest.HttpChannelBinding
  - System.Web.HttpRequest.HttpMethod
  - System.Web.HttpRequest.InputStream
  - System.Web.HttpRequest.InsertEntityBody
  - System.Web.HttpRequest.InsertEntityBody(System.Byte[],System.Int32,System.Int32)
  - System.Web.HttpRequest.IsAuthenticated
  - System.Web.HttpRequest.IsLocal
  - System.Web.HttpRequest.IsSecureConnection
  - System.Web.HttpRequest.Item(System.String)
  - System.Web.HttpRequest.LogonUserIdentity
  - System.Web.HttpRequest.MapImageCoordinates(System.String)
  - System.Web.HttpRequest.MapPath(System.String)
  - System.Web.HttpRequest.MapPath(System.String,System.String,System.Boolean)
  - System.Web.HttpRequest.MapRawImageCoordinates(System.String)
  - System.Web.HttpRequest.Params
  - System.Web.HttpRequest.Path
  - System.Web.HttpRequest.PathInfo
  - System.Web.HttpRequest.PhysicalApplicationPath
  - System.Web.HttpRequest.PhysicalPath
  - System.Web.HttpRequest.QueryString
  - System.Web.HttpRequest.RawUrl
  - System.Web.HttpRequest.ReadEntityBodyMode
  - System.Web.HttpRequest.RequestContext
  - System.Web.HttpRequest.RequestType
  - System.Web.HttpRequest.SaveAs(System.String,System.Boolean)
  - System.Web.HttpRequest.ServerVariables
  - System.Web.HttpRequest.TimedOutToken
  - System.Web.HttpRequest.TlsTokenBindingInfo
  - System.Web.HttpRequest.TotalBytes
  - System.Web.HttpRequest.Unvalidated
  - System.Web.HttpRequest.Url
  - System.Web.HttpRequest.UrlReferrer
  - System.Web.HttpRequest.UserAgent
  - System.Web.HttpRequest.UserHostAddress
  - System.Web.HttpRequest.UserHostName
  - System.Web.HttpRequest.UserLanguages
  - System.Web.HttpRequest.ValidateInput
  langs:
  - csharp
  name: HttpRequest
  nameWithType: HttpRequest
  fullName: System.Web.HttpRequest
  type: Class
  summary: "可讓 ASP.NET 讀取用戶端在 Web 要求期間傳送的 HTTP 值。"
  remarks: "透過公開的方法和屬性的 HttpRequest 類別`Request`屬性<xref:System.Web.HttpApplication>， <xref:System.Web.HttpContext>， <xref:System.Web.UI.Page>，和<xref:System.Web.UI.UserControl>類別。</xref:System.Web.UI.UserControl> </xref:System.Web.UI.Page> </xref:System.Web.HttpContext> </xref:System.Web.HttpApplication>       從存取資料<xref:System.Web.HttpRequest.QueryString%2A>， <xref:System.Web.HttpRequest.Form%2A>， <xref:System.Web.HttpRequest.Cookies%2A>，或<xref:System.Web.HttpRequest.ServerVariables%2A>集合，您可以撰寫`Request[&quot;key&quot;]`的範例所示，<xref:System.Web.HttpRequest.QueryString%2A>屬性。</xref:System.Web.HttpRequest.QueryString%2A> </xref:System.Web.HttpRequest.ServerVariables%2A> </xref:System.Web.HttpRequest.Cookies%2A> </xref:System.Web.HttpRequest.Form%2A> </xref:System.Web.HttpRequest.QueryString%2A>      > [!NOTE] > HttpRequest 類別成員的 Unicode 支援需要 IIS 6.0 或更新版本。"
  example:
  - "The following examples access the HttpRequest instance for the current request by using the <xref:System.Web.UI.Page.Request%2A> property of the <xref:System.Web.UI.Page> class.  \n  \n You can use simplified syntax for accessing data from the <xref:System.Web.HttpRequest.QueryString%2A>, <xref:System.Web.HttpRequest.Form%2A>, <xref:System.Web.HttpRequest.Cookies%2A>, or <xref:System.Web.HttpRequest.ServerVariables%2A> collections. You can write `Request[\"key\"]`.  \n  \n The first example shows how to retrieve a query string value when loading a page.  \n  \n```c#  \npublic partial class AddToCart : Page  \n{  \n    protected void Page_Load(object sender, EventArgs e)  \n    {  \n        string rawId = Request[\"ProductID\"];  \n        int productId;  \n        if (!String.IsNullOrEmpty(rawId) && int.TryParse(rawId, out productId))  \n        {  \n            using (ShoppingCartActions usersShoppingCart = new ShoppingCartActions())  \n            {  \n                usersShoppingCart.AddToCart(productId);  \n            }  \n        }  \n        else  \n        {  \n            throw new Exception(\"Tried to call AddToCart.aspx without setting a ProductId.\");  \n        }  \n        Response.Redirect(\"ShoppingCart.aspx\");  \n    }  \n}  \n```  \n  \n```vb  \nPublic Class AddToCart  \n    Inherits Page  \n  \n    Protected Sub Page_Load(ByVal sender As Object, ByVal e As EventArgs) Handles Me.Load  \n        Dim rawId = Request(\"ProductID\")  \n        Dim productId As Integer  \n        If Not String.IsNullOrEmpty(rawId) And Integer.TryParse(rawId, productId) Then  \n            Using usersShoppingCart As New ShoppingCartActions()  \n                usersShoppingCart.AddToCart(productId)  \n            End Using  \n  \n        Else  \n            Throw New Exception(\"Tried to call AddToCart.aspx without setting a ProductId.\")  \n        End If  \n        Response.Redirect(\"ShoppingCart.aspx\")  \n    End Sub  \nEnd Class  \n```  \n  \n The next example shows how to check if the request is authenticated and retrieve the raw URL.  \n  \n```c#  \npublic partial class RestrictedPage : Page  \n{  \n    protected void Page_Load(object sender, EventArgs e)  \n    {  \n        if (!Request.IsAuthenticated)  \n        {  \n            var rawUrl = Request.RawUrl;  \n            Response.Redirect(\"/Account/Login?ru=\" + Server.HtmlEncode(rawUrl));  \n        }  \n    }  \n}  \n```  \n  \n```vb  \nPublic Class RestrictedPage  \n    Inherits Page  \n  \n    Protected Sub Page_Load(ByVal sender As Object, ByVal e As EventArgs) Handles Me.Load  \n        If Not Request.IsAuthenticated Then  \n            Dim rawUrl = Request.RawUrl  \n            Response.Redirect(\"/Account/Login?ru=\" + Server.HtmlEncode(rawUrl))  \n        End If  \n    End Sub  \nEnd Class  \n```  \n  \n A Visual Studio Web site project with source code is available to accompany this topic: [Download](http://go.microsoft.com/fwlink/?LinkID=191455).  \n  \n This example uses the <xref:System.IO.StreamWriter> class to write the values of several HttpRequest class properties to a file. For properties that are of type string, the values are HTML encoded as they are written to the file. Properties that represent a collection are looped through, and each key/value pair that they contain is written to the file.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Web.HttpRequest_Sample1#1](~/add/codesnippet/visualbasic/t-system.web.httprequest_1.aspx)]\n [!code-cs[System.Web.HttpRequest_Sample1#1](~/add/codesnippet/csharp/t-system.web.httprequest_1.aspx)]"
  syntax:
    content: public sealed class HttpRequest
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.HttpRequest.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: HttpRequest(String,String,String)
  nameWithType: HttpRequest.HttpRequest(String,String,String)
  fullName: System.Web.HttpRequest.HttpRequest(String,String,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "初始化<xref href=&quot;System.Web.HttpRequest&quot;></xref>物件。"
  remarks: "您不需要建立自己的執行個體的<xref:System.Web.HttpRequest>類別。</xref:System.Web.HttpRequest> 方法和屬性<xref:System.Web.HttpRequest>類別公開會透過`Request`屬性<xref:System.Web.HttpApplication>， <xref:System.Web.HttpContext>， <xref:System.Web.UI.Page>，和<xref:System.Web.UI.UserControl>類別。</xref:System.Web.UI.UserControl> </xref:System.Web.UI.Page> </xref:System.Web.HttpContext> </xref:System.Web.HttpApplication> </xref:System.Web.HttpRequest>"
  syntax:
    content: public HttpRequest (string filename, string url, string queryString);
    parameters:
    - id: filename
      type: System.String
      description: "與要求相關聯的檔案名稱。"
    - id: url
      type: System.String
      description: "目前要求之 URL 相關資訊。"
    - id: queryString
      type: System.String
      description: "與要求一起傳送的整個查詢字串 (之後的所有內容`&quot;?&quot;`)。"
  overload: System.Web.HttpRequest.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.Abort
  id: Abort
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: Abort()
  nameWithType: HttpRequest.Abort()
  fullName: System.Web.HttpRequest.Abort()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "強制終止造成任何待處理 I/O 失敗的基礎 TCP 連線。 您可以使用此方法以回應惡意 HTTP 用戶端攻擊。"
  remarks: "這個方法是安全執行緒。 任何執行緒可以呼叫它在任何時間。       這個方法只用於整合模式。 如果您叫用它以傳統模式，則會擲回例外狀況。 若要判斷管線模式，請使用  <xref:System.Web.HttpRuntime.UsingIntegratedPipeline%2A>.</xref:System.Web.HttpRuntime.UsingIntegratedPipeline%2A>"
  syntax:
    content: public void Abort ();
    parameters: []
  overload: System.Web.HttpRequest.Abort*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.AcceptTypes
  id: AcceptTypes
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: AcceptTypes
  nameWithType: HttpRequest.AcceptTypes
  fullName: System.Web.HttpRequest.AcceptTypes
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "取得字串陣列，用戶端支援的 MIME 接受類型。"
  remarks: ''
  example:
  - "The following code example captures the multiple values returned by the AcceptTypes property into an object variable and writes the number and name of each valueto a separate line of HTTP output.  \n  \n [!code-vb[Classic HttpRequest.AcceptTypes Example#1](~/add/codesnippet/visualbasic/p-system.web.httprequest_0_1.vb)]\n [!code-cs[Classic HttpRequest.AcceptTypes Example#1](~/add/codesnippet/csharp/p-system.web.httprequest_0_1.cs)]"
  syntax:
    content: public string[] AcceptTypes { get; }
    return:
      type: System.String[]
      description: "字串的用戶端支援之 MIME 接受類型的陣列。"
  overload: System.Web.HttpRequest.AcceptTypes*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.AnonymousID
  id: AnonymousID
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: AnonymousID
  nameWithType: HttpRequest.AnonymousID
  fullName: System.Web.HttpRequest.AnonymousID
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "如果有的話，則您可以取得使用者的匿名識別項。"
  remarks: "AnonymousID 屬性將長時間執行的唯一識別項指派給未驗證的使用者，這可以用於追蹤使用者或指派給該使用者的設定檔屬性，而不將資料儲存於`Session`物件。 根據預設，AnonymousID 屬性使用追蹤 cookie，但它可以設定為使用 URI 時<xref:System.Web.Configuration.SessionStateSection.Cookieless%2A>的匿名識別組態區段中的屬性會設為<xref:System.Web.HttpCookieMode>， <xref:System.Web.HttpCookieMode>，或<xref:System.Web.HttpCookieMode>值。</xref:System.Web.HttpCookieMode> </xref:System.Web.HttpCookieMode> </xref:System.Web.HttpCookieMode> </xref:System.Web.Configuration.SessionStateSection.Cookieless%2A> 如果您不再想要使用，例如當匿名使用者通過驗證，您必須明確清除 cookie。       需要識別的實體，未通過驗證時，需要授權時，會使用匿名識別。 如需詳細資訊，請參閱[anonymousIdentification 元素 （ASP.NET 設定結構描述）](http://msdn.microsoft.com/en-us/2bd927ef-9057-4703-9c55-4cfb6d7d0929)"
  example:
  - "The following example shows how to use the AnonymousID property by handling the <xref:System.Web.Security.AnonymousIdentificationModule.Creating> event in the Global.asax file. This example has two parts:  \n  \n-   A method in the Global.asax file that handles the <xref:System.Web.Security.AnonymousIdentificationModule.Creating> event.  \n  \n-   A Web Forms page.  \n  \n The first part of the code example shows how to set the AnonymousID property by handling the <xref:System.Web.Security.AnonymousIdentificationModule.Creating> event in the Global.asax file. The method that is named `AnonymousIdentification_Creating` sets the AnonymousID property when an anonymous ID is created.  \n  \n [!code-cs[System.Web.HttpRequest_AnonymousID#2](~/add/codesnippet/csharp/p-system.web.httprequest_5_1.cs)]\n [!code-vb[System.Web.HttpRequest_AnonymousID#2](~/add/codesnippet/visualbasic/p-system.web.httprequest_5_1.vb)]  \n  \n The second part of the code example shows how to display the new AnonymousID that is created by the `AnonymousIdentification_Creating` event handler in the preceding example.  \n  \n [!code-cs[System.Web.HttpRequest_AnonymousID#1](~/add/codesnippet/csharp/p-system.web.httprequest_5_2.aspx)]\n [!code-vb[System.Web.HttpRequest_AnonymousID#1](~/add/codesnippet/visualbasic/p-system.web.httprequest_5_2.aspx)]"
  syntax:
    content: public string AnonymousID { get; }
    return:
      type: System.String
      description: "字串，表示目前匿名使用者識別項。"
  overload: System.Web.HttpRequest.AnonymousID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.ApplicationPath
  id: ApplicationPath
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: ApplicationPath
  nameWithType: HttpRequest.ApplicationPath
  fullName: System.Web.HttpRequest.ApplicationPath
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "取得伺服器上 ASP.NET 應用程式的虛擬應用程式根路徑。"
  remarks: "您可以使用這個屬性來建構從頁面或 Web 使用者控制項不在根目錄中的應用程式根目錄的相對 URL。 這可讓網頁及共用存在使用相同的程式碼來連結至資源在應用程式中的固定位置的目錄結構的不同層級的控制項。"
  example:
  - "The following example uses the <xref:System.IO.StreamWriter.Write%2A> method to HTML-encode and then write the value of the ApplicationPath property to a text file. This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class. It assumes the existence of a <xref:System.IO.StreamWriter> object named `sw`.  \n  \n [!code-vb[System.Web.HttpRequest_Sample1#2](~/add/codesnippet/visualbasic/p-system.web.httprequest_6_1.aspx)]\n [!code-cs[System.Web.HttpRequest_Sample1#2](~/add/codesnippet/csharp/p-system.web.httprequest_6_1.aspx)]  \n  \n The following example uses the ApplicationPath property to programmatically construct a path to a resource that is in a fixed location in the application. The page that references the resource does not have to be located in the same directory as the resource.  \n  \n [!code-cs[System.Web.HttpRequest.ApplicationPath#2](~/add/codesnippet/csharp/p-system.web.httprequest_6_2.aspx)]\n [!code-vb[System.Web.HttpRequest.ApplicationPath#2](~/add/codesnippet/visualbasic/p-system.web.httprequest_6_2.aspx)]  \n  \n If you run this example in a Web application that is named WebSite1,  `/WebSite1` will be displayed as the value of the ApplicationPath property and `/WebSite1/images/Image1.gif` will be displayed as the complete path of the image."
  syntax:
    content: public string ApplicationPath { get; }
    return:
      type: System.String
      description: "目前的應用程式的虛擬路徑。"
  overload: System.Web.HttpRequest.ApplicationPath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath
  id: AppRelativeCurrentExecutionFilePath
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: AppRelativeCurrentExecutionFilePath
  nameWithType: HttpRequest.AppRelativeCurrentExecutionFilePath
  fullName: System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "取得應用程式根目錄的虛擬路徑，並讓應用程式根目錄使用波狀符號 （~） 標記法 (像是&quot;~ / /page.aspx&quot;)。"
  remarks: "使用這個屬性來提供將保持不變即使應用程式會變更位置的 URL 資訊。 這可讓相同 URL 對應程式碼將用於測試環境中，並在最後一個部署環境中，或使用不同網域中的 Web 應用程式的複本。"
  example:
  - "The following example uses the AppRelativeCurrentExecutionFilePath property to set the URL of an <xref:System.Web.UI.WebControls.Image> control to an image in the same directory as the page. Run this page at different levels of a directory structure to see the resulting AppRelativeCurrentExecutionFilePath property values.  \n  \n [!code-vb[System.Web.HttpRequest.AppRelativeCurrentExecutionPath#1](~/add/codesnippet/visualbasic/p-system.web.httprequest_31_1.aspx)]\n [!code-cs[System.Web.HttpRequest.AppRelativeCurrentExecutionPath#1](~/add/codesnippet/csharp/p-system.web.httprequest_31_1.aspx)]  \n  \n The following example uses the AppRelativeCurrentExecutionFilePath property to programmatically set the path to a resource, based on the current path of the page.  \n  \n [!code-cs[System.Web.HttpRequest.ApplicationPath#1](~/add/codesnippet/csharp/p-system.web.httprequest_31_2.aspx)]\n [!code-vb[System.Web.HttpRequest.ApplicationPath#1](~/add/codesnippet/visualbasic/p-system.web.httprequest_31_2.aspx)]"
  syntax:
    content: public string AppRelativeCurrentExecutionFilePath { get; }
    return:
      type: System.String
      description: "目前要求之應用程式根目錄的虛擬路徑。"
  overload: System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.BinaryRead(System.Int32)
  id: BinaryRead(System.Int32)
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: BinaryRead(Int32)
  nameWithType: HttpRequest.BinaryRead(Int32)
  fullName: System.Web.HttpRequest.BinaryRead(Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "從目前的輸入資料流執行指定的位元組數目的二進位讀取。"
  remarks: "與 ASP 的相容性提供 BinaryRead 方法。"
  syntax:
    content: public byte[] BinaryRead (int count);
    parameters:
    - id: count
      type: System.Int32
      description: "要讀取的位元組數目。"
    return:
      type: System.Byte[]
      description: "位元組陣列。"
  overload: System.Web.HttpRequest.BinaryRead*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>count</code> is 0.  \n  \n \\- or -  \n  \n <code>count</code> is greater than the number of bytes available."
  platform:
  - net462
- uid: System.Web.HttpRequest.Browser
  id: Browser
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: Browser
  nameWithType: HttpRequest.Browser
  fullName: System.Web.HttpRequest.Browser
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "取得或設定要求的用戶端瀏覽器功能的相關資訊。"
  remarks: ''
  example:
  - "The following code example sends a list of the browser's capabilities back to the client in an HTML page.  \n  \n [!code-vb[Classic HttpRequest.Browser Example#1](~/add/codesnippet/visualbasic/p-system.web.httprequest_14_1.vb)]\n [!code-cs[Classic HttpRequest.Browser Example#1](~/add/codesnippet/csharp/p-system.web.httprequest_14_1.cs)]"
  syntax:
    content: public System.Web.HttpBrowserCapabilities Browser { get; set; }
    return:
      type: System.Web.HttpBrowserCapabilities
      description: "<xref href=&quot;System.Web.HttpBrowserCapabilities&quot;> </xref>物件，列出用戶端瀏覽器的功能。"
  overload: System.Web.HttpRequest.Browser*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.ClientCertificate
  id: ClientCertificate
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: ClientCertificate
  nameWithType: HttpRequest.ClientCertificate
  fullName: System.Web.HttpRequest.ClientCertificate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "取得目前要求的用戶端安全憑證。"
  remarks: ''
  example:
  - "The following code example sends the client's certificate settings back to the client in an HTML page.  \n  \n [!code-vb[Classic HttpRequest.ClientCertificate Example#1](~/add/codesnippet/visualbasic/p-system.web.httprequest_12_1.vb)]\n [!code-cs[Classic HttpRequest.ClientCertificate Example#1](~/add/codesnippet/csharp/p-system.web.httprequest_12_1.cs)]"
  syntax:
    content: public System.Web.HttpClientCertificate ClientCertificate { get; }
    return:
      type: System.Web.HttpClientCertificate
      description: "<xref href=&quot;System.Web.HttpClientCertificate&quot;> </xref>物件，其中包含用戶端的安全性憑證設定的相關資訊。"
  overload: System.Web.HttpRequest.ClientCertificate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.ContentEncoding
  id: ContentEncoding
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: ContentEncoding
  nameWithType: HttpRequest.ContentEncoding
  fullName: System.Web.HttpRequest.ContentEncoding
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "取得或設定實體主體的字元集。"
  remarks: "預設內容編碼方式可以指定在[全球化項目 （ASP.NET 設定結構描述）](http://msdn.microsoft.com/en-us/e2dffc8e-ebd2-439b-a2fd-e3ac5e620da7)組態檔。 如果用戶端同時指定內容編碼方式，會覆寫預設組態設定。"
  example:
  - "The following code example assigns a value representing the description of the current HTTP encoding to a string variable.  \n  \n [!code-cs[Classic HttpRequest.ContentEncoding Example#1](~/add/codesnippet/csharp/p-system.web.httprequest_18_1.cs)]\n [!code-vb[Classic HttpRequest.ContentEncoding Example#1](~/add/codesnippet/visualbasic/p-system.web.httprequest_18_1.vb)]"
  syntax:
    content: public System.Text.Encoding ContentEncoding { get; set; }
    return:
      type: System.Text.Encoding
      description: "<xref:System.Text.Encoding>物件，代表用戶端的字元集。</xref:System.Text.Encoding>"
  overload: System.Web.HttpRequest.ContentEncoding*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.ContentLength
  id: ContentLength
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: ContentLength
  nameWithType: HttpRequest.ContentLength
  fullName: System.Web.HttpRequest.ContentLength
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "指定長度，以位元組為單位，用戶端所送出的內容。"
  remarks: ''
  example:
  - "The following code example assigns the value representing the content length of the incoming request to an integer variable.  \n  \n [!code-vb[Classic HttpRequest.ContentLength Example#1](~/add/codesnippet/visualbasic/p-system.web.httprequest_17_1.vb)]\n [!code-cs[Classic HttpRequest.ContentLength Example#1](~/add/codesnippet/csharp/p-system.web.httprequest_17_1.cs)]"
  syntax:
    content: public int ContentLength { get; }
    return:
      type: System.Int32
      description: "用戶端所送出的內容長度，以位元組為單位。"
  overload: System.Web.HttpRequest.ContentLength*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.ContentType
  id: ContentType
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: ContentType
  nameWithType: HttpRequest.ContentType
  fullName: System.Web.HttpRequest.ContentType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "取得或設定連入要求的 MIME 內容類型。"
  remarks: ''
  example:
  - "The following code example assigns the value representing the content type of the incoming request to a string variable.  \n  \n [!code-vb[Classic HttpRequest.ContentType Example#1](~/add/codesnippet/visualbasic/p-system.web.httprequest_33_1.vb)]\n [!code-cs[Classic HttpRequest.ContentType Example#1](~/add/codesnippet/csharp/p-system.web.httprequest_33_1.cs)]  \n  \n The following example shows output that might be produced by this code.  \n  \n `GET`  \n  \n `127.0.0.1`  \n  \n `127.0.0.1`  \n  \n `GET`"
  syntax:
    content: public string ContentType { get; set; }
    return:
      type: System.String
      description: "字串，表示連入要求，例如&quot;text/html&quot;的 MIME 內容類型。 其他通用 MIME 類型包括&quot;audio.wav&quot;、&quot;image/gif&quot;和&quot;application/pdf&quot;。"
  overload: System.Web.HttpRequest.ContentType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.Cookies
  id: Cookies
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: Cookies
  nameWithType: HttpRequest.Cookies
  fullName: System.Web.HttpRequest.Cookies
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "取得用戶端所送出的 cookie 集合。"
  remarks: "ASP.NET 包含兩個內建 cookie 集合。 存取的 Cookie 集合的集合<xref:System.Web.HttpRequest>包含用戶端中的伺服器傳送的 cookie`Cookie`標頭。</xref:System.Web.HttpRequest> 透過集合<xref:System.Web.HttpResponse.Cookies%2A>集合<xref:System.Web.HttpResponse>包含在伺服器上建立並傳送給用戶端的新 cookie`Set-Cookie`標頭。</xref:System.Web.HttpResponse> </xref:System.Web.HttpResponse.Cookies%2A>      > [!NOTE] > 使用新增 cookie 之後<xref:System.Web.HttpResponse.Cookies%2A?displayProperty=fullName>集合，cookie 是立即可用的 Cookie 集合中，即使尚未傳送回應至用戶端。</xref:System.Web.HttpResponse.Cookies%2A?displayProperty=fullName>"
  example:
  - "The following code example loops through all cookies sent by the client and sends the name, expiration date, security parameter, and values of each cookie to the HTTP output.  \n  \n [!code-cs[Classic HttpRequest.Cookies Example#1](~/add/codesnippet/csharp/p-system.web.httprequest_21_1.cs)]\n [!code-vb[Classic HttpRequest.Cookies Example#1](~/add/codesnippet/visualbasic/p-system.web.httprequest_21_1.vb)]"
  syntax:
    content: public System.Web.HttpCookieCollection Cookies { get; }
    return:
      type: System.Web.HttpCookieCollection
      description: "<xref href=&quot;System.Web.HttpCookieCollection&quot;> </xref>物件，代表用戶端的 cookie 變數。"
  overload: System.Web.HttpRequest.Cookies*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.CurrentExecutionFilePath
  id: CurrentExecutionFilePath
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: CurrentExecutionFilePath
  nameWithType: HttpRequest.CurrentExecutionFilePath
  fullName: System.Web.HttpRequest.CurrentExecutionFilePath
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "取得目前要求的虛擬路徑。"
  remarks: "CurrentExecutionFilePath 傳回目前執行的網頁處理常式的檔案路徑。 針對使用重新導向情節<xref:System.Web.HttpServerUtility.Execute%2A>和<xref:System.Web.HttpServerUtility.Transfer%2A>這表示 CurrentExecutionFilePath 屬性傳回的路徑重新導向至 （子頁面） 頁面的方法。</xref:System.Web.HttpServerUtility.Transfer%2A> </xref:System.Web.HttpServerUtility.Execute%2A> 不過，當用戶端重新導向至另一個頁面上，<xref:System.Web.HttpRequest.FilePath%2A>屬性傳回至原始網頁的路徑。</xref:System.Web.HttpRequest.FilePath%2A>"
  example:
  - "The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the CurrentExecutionFilePath property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file. This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.  \n  \n [!code-vb[System.Web.HttpRequest_Sample1#2](~/add/codesnippet/visualbasic/p-system.web.httprequest_3_1.aspx)]\n [!code-cs[System.Web.HttpRequest_Sample1#2](~/add/codesnippet/csharp/p-system.web.httprequest_3_1.aspx)]"
  syntax:
    content: public string CurrentExecutionFilePath { get; }
    return:
      type: System.String
      description: "目前要求的虛擬路徑。"
  overload: System.Web.HttpRequest.CurrentExecutionFilePath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.CurrentExecutionFilePathExtension
  id: CurrentExecutionFilePathExtension
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: CurrentExecutionFilePathExtension
  nameWithType: HttpRequest.CurrentExecutionFilePathExtension
  fullName: System.Web.HttpRequest.CurrentExecutionFilePathExtension
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "取得檔案名稱中指定的副檔名<xref:System.Web.HttpRequest.CurrentExecutionFilePath*>屬性。</xref:System.Web.HttpRequest.CurrentExecutionFilePath*>"
  syntax:
    content: public string CurrentExecutionFilePathExtension { get; }
    return:
      type: System.String
      description: "中指定的檔案名稱副檔名<xref:System.Web.HttpRequest.CurrentExecutionFilePath*>屬性。</xref:System.Web.HttpRequest.CurrentExecutionFilePath*>"
  overload: System.Web.HttpRequest.CurrentExecutionFilePathExtension*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.FilePath
  id: FilePath
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: FilePath
  nameWithType: HttpRequest.FilePath
  fullName: System.Web.HttpRequest.FilePath
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "取得目前要求的虛擬路徑。"
  remarks: "FilePath 屬性並未包含<xref:System.Web.HttpRequest.PathInfo%2A>結尾。</xref:System.Web.HttpRequest.PathInfo%2A> 例如，URL http://www.contoso.com/virdir/page.html/tail，FilePath 值對於 /virdir/page.html。"
  example:
  - "The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the FilePath property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file. This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.  \n  \n [!code-vb[System.Web.HttpRequest_Sample1#2](~/add/codesnippet/visualbasic/p-system.web.httprequest_27_1.aspx)]\n [!code-cs[System.Web.HttpRequest_Sample1#2](~/add/codesnippet/csharp/p-system.web.httprequest_27_1.aspx)]"
  syntax:
    content: public string FilePath { get; }
    return:
      type: System.String
      description: "目前要求的虛擬路徑。"
  overload: System.Web.HttpRequest.FilePath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.Files
  id: Files
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: Files
  nameWithType: HttpRequest.Files
  fullName: System.Web.HttpRequest.Files
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "取得用戶端以多重 MIME 格式上傳的檔案集合。"
  remarks: "檔案會填入集合只有在 HTTP 要求的`Content-Type`值是&quot;multipart/表單資料的 」。"
  example:
  - "The following code example displays the names of all files in the Files collection.  \n  \n [!code-cs[Classic HttpRequest.Files Example#1](~/add/codesnippet/csharp/p-system.web.httprequest_28_1.cs)]\n [!code-vb[Classic HttpRequest.Files Example#1](~/add/codesnippet/visualbasic/p-system.web.httprequest_28_1.vb)]"
  syntax:
    content: public System.Web.HttpFileCollection Files { get; }
    return:
      type: System.Web.HttpFileCollection
      description: "<xref href=&quot;System.Web.HttpFileCollection&quot;> </xref>物件，表示集合的檔案上傳用戶端。 項目<xref href=&quot;System.Web.HttpFileCollection&quot;></xref>物件屬於類型<xref href=&quot;System.Web.HttpPostedFile&quot;> </xref>。"
  overload: System.Web.HttpRequest.Files*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.Filter
  id: Filter
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: Filter
  nameWithType: HttpRequest.Filter
  fullName: System.Web.HttpRequest.Filter
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "取得或設定讀取目前輸入資料流時要使用的篩選條件。"
  remarks: ''
  example:
  - "The following code example creates two new classes, `QQQ1` and `QQQ2` that filter the <xref:System.Web.HttpRequest.InputStream%2A>. Put the classes into the Global.asax file in an ASP.NET application's directory so that all input for all ASP.NET Web pages in the application will be filtered.  \n  \n [!code-vb[System.Web.HttpRequest.Filter#1](~/add/codesnippet/visualbasic/p-system.web.httprequest_4_1.aspx)]\n [!code-cs[System.Web.HttpRequest.Filter#1](~/add/codesnippet/csharp/p-system.web.httprequest_4_1.aspx)]"
  syntax:
    content: public System.IO.Stream Filter { get; set; }
    return:
      type: System.IO.Stream
      description: "A<xref:System.IO.Stream>物件使用的篩選條件。</xref:System.IO.Stream>"
  overload: System.Web.HttpRequest.Filter*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "指定<xref:System.IO.Stream>無效。</xref:System.IO.Stream>"
  platform:
  - net462
- uid: System.Web.HttpRequest.Form
  id: Form
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: Form
  nameWithType: HttpRequest.Form
  fullName: System.Web.HttpRequest.Form
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "取得表單變數集合。"
  remarks: "表單屬性會填入 HTTP 要求時`Content-Type`值可以是 「 應用程式/x-www-表單-urlencoded&quot;或&quot;multipart/表單資料的 」。"
  example:
  - "The following example shows how to read the values in the form collection posted from a browser. Each name/value pair in the collection represents a control in the form and its value.  \n  \n [!code-vb[Classic HttpRequest.Form Example#1](~/add/codesnippet/visualbasic/p-system.web.httprequest_32_1.vb)]\n [!code-cs[Classic HttpRequest.Form Example#1](~/add/codesnippet/csharp/p-system.web.httprequest_32_1.cs)]"
  syntax:
    content: public System.Collections.Specialized.NameValueCollection Form { get; }
    return:
      type: System.Collections.Specialized.NameValueCollection
      description: "A <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref>代表表單變數的集合。"
  overload: System.Web.HttpRequest.Form*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.GetBufferedInputStream
  id: GetBufferedInputStream
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: GetBufferedInputStream()
  nameWithType: HttpRequest.GetBufferedInputStream()
  fullName: System.Web.HttpRequest.GetBufferedInputStream()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "取得<xref:System.IO.Stream>可以用來讀取傳入 HTTP 實體內容的物件。</xref:System.IO.Stream>"
  remarks: "這個方法相當於<xref:System.Web.HttpRequest.GetBufferlessInputStream%2A>不同之處在於它也會將讀取的位元組複製到內部存放裝置是由 ASP.NET 用來填入<xref:System.Web.HttpRequest.Form%2A>， <xref:System.Web.HttpRequest.Files%2A>，和<xref:System.Web.HttpRequest.InputStream%2A>屬性。</xref:System.Web.HttpRequest.InputStream%2A> </xref:System.Web.HttpRequest.Files%2A> </xref:System.Web.HttpRequest.Form%2A> </xref:System.Web.HttpRequest.GetBufferlessInputStream%2A> 由於保留了這項資訊，ASP.NET Web Form 網頁 （.aspx 檔） 等下游程式碼會順利執行。 這不是使用的情況下<xref:System.Web.HttpRequest.GetBufferlessInputStream%2A>方法。</xref:System.Web.HttpRequest.GetBufferlessInputStream%2A>"
  syntax:
    content: public System.IO.Stream GetBufferedInputStream ();
    parameters: []
    return:
      type: System.IO.Stream
      description: "A<xref:System.IO.Stream>可以用來讀取傳入 HTTP 實體內容的物件。</xref:System.IO.Stream>"
  overload: System.Web.HttpRequest.GetBufferedInputStream*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "已經載入和剖析要求實體本文。 這個屬性可讓要載入及剖析的實體主體的範例包括下列:- <> </> *> 屬性。     - <> </> *> 屬性。      - <> </> *> 屬性。     - <> </> *> 方法。       若要避免這個例外狀況，呼叫<xref:System.Web.HttpRequest.ReadEntityBodyMode*>方法第一次。</xref:System.Web.HttpRequest.ReadEntityBodyMode*> 如果用戶端中斷連接正在讀取實體內容時，也會擲回這個例外狀況。"
  platform:
  - net462
- uid: System.Web.HttpRequest.GetBufferlessInputStream
  id: GetBufferlessInputStream
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: GetBufferlessInputStream()
  nameWithType: HttpRequest.GetBufferlessInputStream()
  fullName: System.Web.HttpRequest.GetBufferlessInputStream()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "取得<xref:System.IO.Stream>可以用來讀取傳入 HTTP 實體內容的物件。</xref:System.IO.Stream>"
  remarks: "這個方法會提供替代<xref:System.Web.HttpRequest.InputStream%2A>屬性。</xref:System.Web.HttpRequest.InputStream%2A> <xref:System.Web.HttpRequest.InputStream%2A>之前它會傳回已收到整個要求等待屬性<xref:System.IO.Stream>物件。</xref:System.IO.Stream> </xref:System.Web.HttpRequest.InputStream%2A> 相反地，GetBufferlessInputStream 方法會傳回<xref:System.IO.Stream>物件立即。</xref:System.IO.Stream> 開始之前尚未收到完整內容主體的處理實體主體，您可以使用此方法。       實體 （或最多為您的要求和已接收） 使用物件時，才會傳回透過呼叫方法，例如讀取資料流，此方法由<xref:System.IO.Stream.Read%2A>方法。</xref:System.IO.Stream.Read%2A> 使用參數<xref:System.IO.Stream.Read%2A>方法，以指定要讀取的實體主體中有多少。</xref:System.IO.Stream.Read%2A>       <xref:System.IO.Stream>ASP.NET 的這個方法傳回的物件支援同步和非同步讀取的方法。</xref:System.IO.Stream> <xref:System.IO.Stream>物件同時實作<xref:System.IO.Stream.BeginRead%2A>和<xref:System.IO.Stream.EndRead%2A>方法。</xref:System.IO.Stream.EndRead%2A> </xref:System.IO.Stream.BeginRead%2A> </xref:System.IO.Stream> 非同步方法可讓您以非同步方式讀取要求實體中的區塊，而 ASP.NET 釋放目前執行緒的非同步讀取迴圈的每個反覆項目之間。       如果要求上傳大型檔案，而且您想要開始上傳完成之前先存取的檔案內容，則這個方法就很有用。 不過，您應該只使用這個方法的情況下您要接管實體主體的所有處理。 這表示您無法使用這個方法從.aspx 頁面，因為.aspx 網頁執行時，實體內容已經讀取。"
  syntax:
    content: public System.IO.Stream GetBufferlessInputStream ();
    parameters: []
    return:
      type: System.IO.Stream
      description: "A<xref:System.IO.Stream>可以用來讀取傳入 HTTP 實體內容的物件。</xref:System.IO.Stream>"
  overload: System.Web.HttpRequest.GetBufferlessInputStream*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "已經載入和剖析要求實體本文。 這個屬性可讓要載入及剖析的實體主體的範例包括下列:- <> </> *>- <> </> *>- <> </> *>- <> </> *> 若要避免這個例外狀況，呼叫<xref:System.Web.HttpRequest.ReadEntityBodyMode*>方法第一次。</xref:System.Web.HttpRequest.ReadEntityBodyMode*> 如果用戶端中斷連接正在讀取實體內容時，也會擲回這個例外狀況。"
  platform:
  - net462
- uid: System.Web.HttpRequest.GetBufferlessInputStream(System.Boolean)
  id: GetBufferlessInputStream(System.Boolean)
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: GetBufferlessInputStream(Boolean)
  nameWithType: HttpRequest.GetBufferlessInputStream(Boolean)
  fullName: System.Web.HttpRequest.GetBufferlessInputStream(Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "取得<xref:System.IO.Stream>物件可以用來讀取傳入 HTTP 實體內容，選擇性地停用設定中的要求長度限制<xref:System.Web.Configuration.HttpRuntimeSection.MaxRequestLength*>屬性。</xref:System.Web.Configuration.HttpRuntimeSection.MaxRequestLength*> </xref:System.IO.Stream>"
  remarks: "如需有關這個方法的詳細資訊，請參閱<xref:System.Web.HttpRequest.GetBufferlessInputStream>多載。</xref:System.Web.HttpRequest.GetBufferlessInputStream>"
  syntax:
    content: public System.IO.Stream GetBufferlessInputStream (bool disableMaxRequestLength);
    parameters:
    - id: disableMaxRequestLength
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要停用要求長度限制;否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.IO.Stream
      description: "A<xref:System.IO.Stream>可以用來讀取傳入 HTTP 實體內容的物件。</xref:System.IO.Stream>"
  overload: System.Web.HttpRequest.GetBufferlessInputStream*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "已經載入和剖析要求實體本文。 這個屬性可讓要載入及剖析的實體主體的範例包括下列:- <> </> *> 屬性。     - <> </> *> 屬性。      - <> </> *> 屬性。     - <> </> *> 方法。       若要避免這個例外狀況，呼叫<xref:System.Web.HttpRequest.ReadEntityBodyMode*>方法第一次。</xref:System.Web.HttpRequest.ReadEntityBodyMode*> 如果用戶端中斷連接正在讀取實體內容時，也會擲回這個例外狀況。"
  platform:
  - net462
- uid: System.Web.HttpRequest.Headers
  id: Headers
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: Headers
  nameWithType: HttpRequest.Headers
  fullName: System.Web.HttpRequest.Headers
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "取得 HTTP 標頭的集合。"
  remarks: "如需所有可能的標頭的清單，請參閱[要求標頭欄位](http://go.microsoft.com/fwlink/?LinkId=73147)W3C 網站上。"
  example:
  - "The following code example displays the names and values of all headers in the HTTP request.  \n  \n [!code-cs[Classic HttpRequest.Headers Example#1](~/add/codesnippet/csharp/p-system.web.httprequest_24_1.cs)]\n [!code-vb[Classic HttpRequest.Headers Example#1](~/add/codesnippet/visualbasic/p-system.web.httprequest_24_1.vb)]"
  syntax:
    content: public System.Collections.Specialized.NameValueCollection Headers { get; }
    return:
      type: System.Collections.Specialized.NameValueCollection
      description: "A <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref>標頭。"
  overload: System.Web.HttpRequest.Headers*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.HttpChannelBinding
  id: HttpChannelBinding
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: HttpChannelBinding
  nameWithType: HttpRequest.HttpChannelBinding
  fullName: System.Web.HttpRequest.HttpChannelBinding
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "取得<xref:System.Security.Authentication.ExtendedProtection.ChannelBinding>物件目前的<xref href=&quot;System.Web.HttpWorkerRequest&quot;></xref>執行個體。</xref:System.Security.Authentication.ExtendedProtection.ChannelBinding>"
  syntax:
    content: public System.Security.Authentication.ExtendedProtection.ChannelBinding HttpChannelBinding { get; }
    return:
      type: System.Security.Authentication.ExtendedProtection.ChannelBinding
      description: "<xref:System.Security.Authentication.ExtendedProtection.ChannelBinding>物件目前的<xref href=&quot;System.Web.HttpWorkerRequest&quot;></xref>執行個體。</xref:System.Security.Authentication.ExtendedProtection.ChannelBinding>"
  overload: System.Web.HttpRequest.HttpChannelBinding*
  exceptions:
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "目前<xref href=&quot;System.Web.HttpWorkerRequest&quot;></xref>物件不是<xref uid=&quot;langword_csharp_System.Web.Hosting.IIS7WorkerRequest&quot; name=&quot;System.Web.Hosting.IIS7WorkerRequest&quot; href=&quot;&quot;></xref>物件或<xref uid=&quot;langword_csharp_System.Web.Hosting.ISAPIWorkerRequestInProc&quot; name=&quot;System.Web.Hosting.ISAPIWorkerRequestInProc&quot; href=&quot;&quot;></xref>物件。"
  platform:
  - net462
- uid: System.Web.HttpRequest.HttpMethod
  id: HttpMethod
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: HttpMethod
  nameWithType: HttpRequest.HttpMethod
  fullName: System.Web.HttpRequest.HttpMethod
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "取得 HTTP 資料傳輸方法 (例如<xref uid=&quot;langword_csharp_GET&quot; name=&quot;GET&quot; href=&quot;&quot;> </xref>， <xref uid=&quot;langword_csharp_POST&quot; name=&quot;POST&quot; href=&quot;&quot;> </xref>，或<xref uid=&quot;langword_csharp_HEAD&quot; name=&quot;HEAD&quot; href=&quot;&quot;> </xref>) 用戶端使用。"
  remarks: ''
  example:
  - "The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the HttpMethod property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file. This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.  \n  \n [!code-vb[System.Web.HttpRequest_Sample1#7](~/add/codesnippet/visualbasic/p-system.web.httprequest_2_1.aspx)]\n [!code-cs[System.Web.HttpRequest_Sample1#7](~/add/codesnippet/csharp/p-system.web.httprequest_2_1.aspx)]  \n  \n The following example shows output that is produced by this code.  \n  \n `GET`  \n  \n `127.0.0.1`  \n  \n `127.0.0.1`  \n  \n `GET`"
  syntax:
    content: public string HttpMethod { get; }
    return:
      type: System.String
      description: "HTTP 資料傳輸用戶端使用的方法。"
  overload: System.Web.HttpRequest.HttpMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.InputStream
  id: InputStream
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: InputStream
  nameWithType: HttpRequest.InputStream
  fullName: System.Web.HttpRequest.InputStream
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "取得傳入 HTTP 實體內容的內容。"
  remarks: ''
  example:
  - "The following code example copies the contents of an InputStream into a string.  \n  \n [!code-cs[Classic HttpRequest.InputStream Example#1](~/add/codesnippet/csharp/p-system.web.httprequest_10_1.aspx)]\n [!code-vb[Classic HttpRequest.InputStream Example#1](~/add/codesnippet/visualbasic/p-system.web.httprequest_10_1.vb)]"
  syntax:
    content: public System.IO.Stream InputStream { get; }
    return:
      type: System.IO.Stream
      description: "A<xref:System.IO.Stream>物件，代表內容的內送 HTTP 內容主體。</xref:System.IO.Stream>"
  overload: System.Web.HttpRequest.InputStream*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.InsertEntityBody
  id: InsertEntityBody
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: InsertEntityBody()
  nameWithType: HttpRequest.InsertEntityBody()
  fullName: System.Web.HttpRequest.InsertEntityBody()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "HTTP 要求實體本文的複本提供給 IIS。"
  remarks: "IIS 不會維護一份要求之後已讀取。 因此，建議只在 HTTP 要求的處理常式應該讀取要求實體。       InsertEntityBody 方法多載提供給 IIS 要求實體的複本，如果它先前由 ASP.NET 所讀取。 這個方法多載可用於 ASP.NET 已讀取要求實體，而且您想要重複使用現有的要求資料。"
  syntax:
    content: public void InsertEntityBody ();
    parameters: []
  overload: System.Web.HttpRequest.InsertEntityBody*
  exceptions:
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "IIS 的版本早於 IIS 7.0 上叫用方法。"
  platform:
  - net462
- uid: System.Web.HttpRequest.InsertEntityBody(System.Byte[],System.Int32,System.Int32)
  id: InsertEntityBody(System.Byte[],System.Int32,System.Int32)
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: InsertEntityBody(Byte[],Int32,Int32)
  nameWithType: HttpRequest.InsertEntityBody(Byte[],Int32,Int32)
  fullName: System.Web.HttpRequest.InsertEntityBody(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "HTTP 要求實體本文的複本及該要求實體物件的相關資訊，請提供給 IIS。"
  remarks: "IIS 不會維護一份要求之後已讀取。 因此，建議只在 HTTP 要求的處理常式應該讀取要求實體。       InsertEntityBody 方法多載時，您想要執行自訂處理，例如，將不同的實體本文插入記憶體。"
  syntax:
    content: public void InsertEntityBody (byte[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "陣列，其中包含要求實體資料。"
    - id: offset
      type: System.Int32
      description: "中以零為起始的位置`buffer`即開始儲存該要求實體資料。"
    - id: count
      type: System.Int32
      description: "要讀取的位元組數目`buffer`陣列。"
  overload: System.Web.HttpRequest.InsertEntityBody*
  exceptions:
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "IIS 的版本早於 IIS 7.0 上叫用方法。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>是一個負數值。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "中的項目數<code> count </code>大於中可用的空間<code> buffer </code>，並指定<code> offset </code>值。"
  platform:
  - net462
- uid: System.Web.HttpRequest.IsAuthenticated
  id: IsAuthenticated
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: IsAuthenticated
  nameWithType: HttpRequest.IsAuthenticated
  fullName: System.Web.HttpRequest.IsAuthenticated
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "取得值，指出是否已驗證要求。"
  remarks: ''
  example:
  - "The following code example uses the IsAuthenticated property to determine whether the current request has been authenticated. If it has not been authenticated, the request is redirected to another page where users can enter their credentials into the Web application. This is a common technique used in the default page for an application.  \n  \n [!code-vb[System.Web.HttpRequest_Sample3#1](~/add/codesnippet/visualbasic/p-system.web.httprequest_15_1.aspx)]\n [!code-cs[System.Web.HttpRequest_Sample3#1](~/add/codesnippet/csharp/p-system.web.httprequest_15_1.aspx)]"
  syntax:
    content: public bool IsAuthenticated { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果要求已經過驗證。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.HttpRequest.IsAuthenticated*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.IsLocal
  id: IsLocal
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: IsLocal
  nameWithType: HttpRequest.IsLocal
  fullName: System.Web.HttpRequest.IsLocal
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "取得值，指出要求是否來自本機電腦。"
  remarks: "IsLocal 屬性會傳回`true`如果要求的建立者的 IP 位址 127.0.0.1 或要求的 IP 位址是否與伺服器的 IP 位址相同。"
  syntax:
    content: public bool IsLocal { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果要求是從本機電腦。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.HttpRequest.IsLocal*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.IsSecureConnection
  id: IsSecureConnection
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: IsSecureConnection
  nameWithType: HttpRequest.IsSecureConnection
  fullName: System.Web.HttpRequest.IsSecureConnection
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "取得值，指出 HTTP 連接是否使用安全通訊端 (亦即，HTTPS)。"
  remarks: ''
  example:
  - "The following code example determines whether the IsSecureConnection property is set to false. If it is, the <xref:System.Web.HttpResponse.SuppressContent%2A> property is set to true to stop the response from being sent.  \n  \n [!code-cs[System.Web.HttpResponse_Sample5#3](~/add/codesnippet/csharp/p-system.web.httprequest_13_1.aspx)]\n [!code-vb[System.Web.HttpResponse_Sample5#3](~/add/codesnippet/visualbasic/p-system.web.httprequest_13_1.aspx)]"
  syntax:
    content: public bool IsSecureConnection { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果連接為 SSL 連線，否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.HttpRequest.IsSecureConnection*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.Item(System.String)
  id: Item(System.String)
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: Item(String)
  nameWithType: HttpRequest.Item(String)
  fullName: System.Web.HttpRequest.Item(String)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "取得指定的物件從<> *>， <> </> *>， <> </> *>，或<> *> 集合。"
  syntax:
    content: public string this[string key] { get; }
    parameters:
    - id: key
      type: System.String
      description: "若要取得之集合成員的名稱。"
    return:
      type: System.String
      description: "<> </> *>， <> </> *>， <> </> *>，或<> *> 中所指定的集合成員<code> key </code>參數。 如果指定<code> key </code>找不到，然後<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>傳回。"
  overload: System.Web.HttpRequest.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.LogonUserIdentity
  id: LogonUserIdentity
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: LogonUserIdentity
  nameWithType: HttpRequest.LogonUserIdentity
  fullName: System.Web.HttpRequest.LogonUserIdentity
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "取得<xref href=&quot;System.Security.Principal.WindowsIdentity&quot;></xref>目前使用者的類型。"
  remarks: "LogonUserIdentity 屬性公開的屬性和方法的<xref:System.Security.Principal.WindowsIdentity>目前連線使用者到 Microsoft 網際網路資訊服務 (IIS) 的物件。</xref:System.Security.Principal.WindowsIdentity> 執行個體<xref:System.Security.Principal.WindowsIdentity>LogonUserIdentity 所公開的類別會追蹤 IIS 要求語彙基元，並提供簡易存取此語彙基元 ASP.NET 內正在處理目前的 HTTP 要求。</xref:System.Security.Principal.WindowsIdentity> 執行個體<xref:System.Security.Principal.WindowsIdentity>類別會自動建立，因此不需要為建構為了要能夠存取其方法和屬性。</xref:System.Security.Principal.WindowsIdentity>"
  example:
  - "The following code example shows how to retrieve the LogonUserIdentity property for the current user and write out the values of each item in a text file. Place this code on the ASP.NET page referenced by the form's `ACTION` attribute.  \n  \n [!code-vb[System.Web.HttpRequest_LogonUserIdentity#1](~/add/codesnippet/visualbasic/p-system.web.httprequest_35_1.aspx)]\n [!code-cs[System.Web.HttpRequest_LogonUserIdentity#1](~/add/codesnippet/csharp/p-system.web.httprequest_35_1.aspx)]"
  syntax:
    content: public System.Security.Principal.WindowsIdentity LogonUserIdentity { get; }
    return:
      type: System.Security.Principal.WindowsIdentity
      description: "A <xref href=&quot;System.Security.Principal.WindowsIdentity&quot;> </xref>物件目前的 Microsoft Internet Information Services (IIS) 驗證設定。"
  overload: System.Web.HttpRequest.LogonUserIdentity*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "在 IIS 7 整合模式下執行 Web 應用程式和<xref href=&quot;System.Web.HttpApplication.PostAuthenticateRequest&quot;></xref>不尚未已經引發事件。"
  platform:
  - net462
- uid: System.Web.HttpRequest.MapImageCoordinates(System.String)
  id: MapImageCoordinates(System.String)
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: MapImageCoordinates(String)
  nameWithType: HttpRequest.MapImageCoordinates(String)
  fullName: System.Web.HttpRequest.MapImageCoordinates(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "表單參數對應傳入影像欄位至適當的 x 座標和 y 座標值。"
  syntax:
    content: public int[] MapImageCoordinates (string imageFieldName);
    parameters:
    - id: imageFieldName
      type: System.String
      description: "表單影像對應的名稱。"
    return:
      type: System.Int32[]
      description: "整數的二維陣列。"
  overload: System.Web.HttpRequest.MapImageCoordinates*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.MapPath(System.String)
  id: MapPath(System.String)
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: MapPath(String)
  nameWithType: HttpRequest.MapPath(String)
  fullName: System.Web.HttpRequest.MapPath(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "將指定的虛擬路徑對應至實體路徑。"
  remarks: >-
    > [!CAUTION]

    >  The MapPath property potentially contains sensitive information about the hosting environment. The return value should not be displayed to users.
  example:
  - "The following code example uses the MapPath method to convert a virtual path to a fully qualified physical path on the server. This example has two parts:  \n  \n-   An .aspx page maps the path, reads the file, and displays results of the read operation.  \n  \n-   A class, `UpperCaseFilterStream`, that changes all characters passed through it to uppercase.  \n  \n The first part of the example shows how to convert a virtual path to a fully qualified physical path using the MapPath method. This physical path is then passed to a <xref:System.IO.StreamReader> object, which obtains the contents of the file. The <xref:System.Web.HttpResponse.Write%2A> method is then called to display the content of the file on the page. The <xref:System.Web.HttpResponse.Filter%2A> property is used to attach a filter to the response stream that makes the text displayed to the page all uppercase.  \n  \n [!code-vb[System.Web.HttpRequest_Samples2#1](~/add/codesnippet/visualbasic/m-system.web.httprequest_0_1.aspx)]\n [!code-cs[System.Web.HttpRequest_Samples2#1](~/add/codesnippet/csharp/m-system.web.httprequest_0_1.aspx)]  \n  \n The second part of the example shows a class that inherits from <xref:System.IO.Stream> and converts all characters in a stream to uppercase. Put this code in the `App_Code` folder for your application.  \n  \n [!code-cs[System.Web.HttpRequest_Samples2#2](~/add/codesnippet/csharp/m-system.web.httprequest_0_2.cs)]\n [!code-vb[System.Web.HttpRequest_Samples2#2](~/add/codesnippet/visualbasic/m-system.web.httprequest_0_2.vb)]"
  syntax:
    content: public string MapPath (string virtualPath);
    parameters:
    - id: virtualPath
      type: System.String
      description: "虛擬路徑 （絕對或相對） 目前的要求。"
    return:
      type: System.String
      description: "所指定的伺服器上的實體路徑<code> virtualPath </code>。"
  overload: System.Web.HttpRequest.MapPath*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "否<xref href=&quot;System.Web.HttpContext&quot;></xref>要求定義物件。"
  platform:
  - net462
- uid: System.Web.HttpRequest.MapPath(System.String,System.String,System.Boolean)
  id: MapPath(System.String,System.String,System.Boolean)
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: MapPath(String,String,Boolean)
  nameWithType: HttpRequest.MapPath(String,String,Boolean)
  fullName: System.Web.HttpRequest.MapPath(String,String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "將指定的虛擬路徑對應至實體路徑。"
  remarks: >-
    > [!CAUTION]

    >  The MapPath property potentially contains sensitive information about the hosting environment. The return value should not be displayed to users.
  syntax:
    content: public string MapPath (string virtualPath, string baseVirtualDir, bool allowCrossAppMapping);
    parameters:
    - id: virtualPath
      type: System.String
      description: "虛擬路徑 （絕對或相對） 目前的要求。"
    - id: baseVirtualDir
      type: System.String
      description: "用於相對解析的虛擬基底目錄路徑。"
    - id: allowCrossAppMapping
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>表示`virtualPath`可能屬於另一個應用程式; 否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.String
      description: "伺服器上的實體路徑。"
  overload: System.Web.HttpRequest.MapPath*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "否<xref href=&quot;System.Web.HttpContext&quot;></xref>要求定義物件。"
  platform:
  - net462
- uid: System.Web.HttpRequest.MapRawImageCoordinates(System.String)
  id: MapRawImageCoordinates(System.String)
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: MapRawImageCoordinates(String)
  nameWithType: HttpRequest.MapRawImageCoordinates(String)
  fullName: System.Web.HttpRequest.MapRawImageCoordinates(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "將傳入影像欄位表單參數對應至適當的 x 和 y 座標值。"
  syntax:
    content: public double[] MapRawImageCoordinates (string imageFieldName);
    parameters:
    - id: imageFieldName
      type: System.String
      description: "影像欄位的名稱。"
    return:
      type: System.Double[]
      description: "X 和 y 座標值。"
  overload: System.Web.HttpRequest.MapRawImageCoordinates*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.Params
  id: Params
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: Params
  nameWithType: HttpRequest.Params
  fullName: System.Web.HttpRequest.Params
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "取得組合的集合<> *>， <> </> *>， <> </> *>，以及<> *> 項目。"
  remarks: "名稱 / 值組加入至集合中以下列順序︰ 1。  查詢字串參數。      2.  表單欄位。      3.  Cookie。      4.  伺服器變數。"
  example:
  - "The following code example shows how to loop through the Params property for a page and how to display each key/value pair.  \n  \n [!code-cs[System.Web.HttpRequest.Params#1](~/add/codesnippet/csharp/p-system.web.httprequest_7_1.aspx)]\n [!code-vb[System.Web.HttpRequest.Params#1](~/add/codesnippet/visualbasic/p-system.web.httprequest_7_1.aspx)]"
  syntax:
    content: public System.Collections.Specialized.NameValueCollection Params { get; }
    return:
      type: System.Collections.Specialized.NameValueCollection
      description: "A <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;></xref> object."
  overload: System.Web.HttpRequest.Params*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.Path
  id: Path
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: Path
  nameWithType: HttpRequest.Path
  fullName: System.Web.HttpRequest.Path
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "取得目前要求的虛擬路徑。"
  remarks: "路徑是串連<xref:System.Web.HttpRequest.FilePath%2A>和<xref:System.Web.HttpRequest.PathInfo%2A>結尾。</xref:System.Web.HttpRequest.PathInfo%2A> </xref:System.Web.HttpRequest.FilePath%2A> 例如，為 URL http://www.contoso.com/virdir/page.html/tail，則路徑是 /virdir/page.html/tail。"
  example:
  - "The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the Path property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file. This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.  \n  \n [!code-vb[System.Web.HttpRequest_Sample1#2](~/add/codesnippet/visualbasic/p-system.web.httprequest_29_1.aspx)]\n [!code-cs[System.Web.HttpRequest_Sample1#2](~/add/codesnippet/csharp/p-system.web.httprequest_29_1.aspx)]"
  syntax:
    content: public string Path { get; }
    return:
      type: System.String
      description: "目前要求的虛擬路徑。"
  overload: System.Web.HttpRequest.Path*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.PathInfo
  id: PathInfo
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: PathInfo
  nameWithType: HttpRequest.PathInfo
  fullName: System.Web.HttpRequest.PathInfo
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "取得具有 URL 副檔名之資源的額外路徑資訊。"
  remarks: "對於 URL Http://www.contoso.com/virdir/page.html/tail，PathInfo 值會是 /tail。"
  example:
  - "The following code example determines whether the PathInfo property contains an empty string. If it does, the <xref:System.IO.StreamWriter.Write%2A> method writes a string indicating this to a file. If it does not, the <xref:System.Web.HttpUtility.HtmlEncode%2A> method HTML-encodes the value of the PathInfo property and the <xref:System.IO.TextWriter.WriteLine%2A> method writes the encoded value to the file. This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.  \n  \n [!code-vb[System.Web.HttpRequest_Sample1#4](~/add/codesnippet/visualbasic/p-system.web.httprequest_19_1.aspx)]\n [!code-cs[System.Web.HttpRequest_Sample1#4](~/add/codesnippet/csharp/p-system.web.httprequest_19_1.aspx)]"
  syntax:
    content: public string PathInfo { get; }
    return:
      type: System.String
      description: "資源的額外路徑資訊。"
  overload: System.Web.HttpRequest.PathInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.PhysicalApplicationPath
  id: PhysicalApplicationPath
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: PhysicalApplicationPath
  nameWithType: HttpRequest.PhysicalApplicationPath
  fullName: System.Web.HttpRequest.PhysicalApplicationPath
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "取得目前正在執行伺服器應用程式根目錄的實體檔案系統路徑。"
  remarks: ''
  example:
  - "The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the PhysicalApplicationPath property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file. This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.  \n  \n [!code-vb[System.Web.HttpRequest_Sample1#5](~/add/codesnippet/visualbasic/p-system.web.httprequest_1_1.aspx)]\n [!code-cs[System.Web.HttpRequest_Sample1#5](~/add/codesnippet/csharp/p-system.web.httprequest_1_1.aspx)]"
  syntax:
    content: public string PhysicalApplicationPath { get; }
    return:
      type: System.String
      description: "目前的應用程式根目錄的檔案系統路徑。"
  overload: System.Web.HttpRequest.PhysicalApplicationPath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.PhysicalPath
  id: PhysicalPath
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: PhysicalPath
  nameWithType: HttpRequest.PhysicalPath
  fullName: System.Web.HttpRequest.PhysicalPath
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "取得對應到要求的 URL 之實體檔案系統路徑。"
  remarks: "在重新導向情節使用<xref:System.Web.HttpServerUtility.Execute%2A>和<xref:System.Web.HttpServerUtility.Transfer%2A>，PhysicalPath 屬性傳回至原始網頁的路徑。</xref:System.Web.HttpServerUtility.Transfer%2A> </xref:System.Web.HttpServerUtility.Execute%2A> 若要尋找目前正在執行的頁面使用的實體路徑<xref:System.Web.HttpRequest.MapPath%2A>方法的輸入引數設定為<xref:System.Web.HttpRequest.CurrentExecutionFilePath%2A>屬性。</xref:System.Web.HttpRequest.CurrentExecutionFilePath%2A> </xref:System.Web.HttpRequest.MapPath%2A>"
  example:
  - "The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the PhysicalPath property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file. This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.  \n  \n [!code-vb[System.Web.HttpRequest_Sample1#5](~/add/codesnippet/visualbasic/p-system.web.httprequest_20_1.aspx)]\n [!code-cs[System.Web.HttpRequest_Sample1#5](~/add/codesnippet/csharp/p-system.web.httprequest_20_1.aspx)]"
  syntax:
    content: public string PhysicalPath { get; }
    return:
      type: System.String
      description: "目前要求的檔案系統路徑。"
  overload: System.Web.HttpRequest.PhysicalPath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.QueryString
  id: QueryString
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: QueryString
  nameWithType: HttpRequest.QueryString
  fullName: System.Web.HttpRequest.QueryString
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "取得 HTTP 查詢字串變數的集合。"
  remarks: ''
  example:
  - "The following code example shows two ways to get the value of a query string variable named “fullname”. In each case, if the URL is `http://www.contoso.com/default.aspx?fullname=Fadi%20Fakhouri`, then the value returned is \"Fadi Fakhouri\" because the `%20` is URL-decoded into a space character. If the URL doesn’t have a `fullname` query string ID, the returned value would be `null`.  \n  \n The first line of code looks for the key “fullname” only in the query string; the second line looks for the key “fullname” in all of the HTTP request collections. For more information about the second line, see <xref:System.Web.HttpRequest.Item%2A>.  \n  \n```c#  \nstring fullname1 = Request.QueryString[\"fullname\"];  \nstring fullname2 = Request[\"fullname\"];  \n  \n```  \n  \n```vb  \nDim fullname1 As String = Request.QueryString(\"fullname\")  \nDim fullname2 As String = Request(\"fullname\")  \n```"
  syntax:
    content: public System.Collections.Specialized.NameValueCollection QueryString { get; }
    return:
      type: System.Collections.Specialized.NameValueCollection
      description: "用戶端傳送查詢字串變數。 索引鍵和值已做 URL 解碼。"
  overload: System.Web.HttpRequest.QueryString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.RawUrl
  id: RawUrl
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: RawUrl
  nameWithType: HttpRequest.RawUrl
  fullName: System.Web.HttpRequest.RawUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "取得目前要求的原始 URL。"
  remarks: "原始 URL 定義為下列網域資訊的 URL 的一部分。 在 URL 字串 http://www.contoso.com/articles/recent.aspx，原始的 URL 會是 /articles/recent.aspx。 如果有的話，原始 URL 會包含查詢字串。"
  example:
  - "The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the RawUrl property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file. This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.  \n  \n [!code-vb[System.Web.HttpRequest_Sample1#5](~/add/codesnippet/visualbasic/p-system.web.httprequest_22_1.aspx)]\n [!code-cs[System.Web.HttpRequest_Sample1#5](~/add/codesnippet/csharp/p-system.web.httprequest_22_1.aspx)]"
  syntax:
    content: public string RawUrl { get; }
    return:
      type: System.String
      description: "目前要求的原始 URL。"
  overload: System.Web.HttpRequest.RawUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.ReadEntityBodyMode
  id: ReadEntityBodyMode
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: ReadEntityBodyMode
  nameWithType: HttpRequest.ReadEntityBodyMode
  fullName: System.Web.HttpRequest.ReadEntityBodyMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "取得值，指出是否已讀取要求實體主體，而且如果是，如何讀取。"
  remarks: "這個方法用來避免已讀取的實體主體，及嘗試讀取使用不相容的方法會擲回的例外狀況。 包括下列方法和讀取實體內容的屬性:-<xref:System.Web.HttpRequest.Form%2A>屬性。</xref:System.Web.HttpRequest.Form%2A>      -<xref:System.Web.HttpRequest.Files%2A>屬性。</xref:System.Web.HttpRequest.Files%2A>      -<xref:System.Web.HttpRequest.InputStream%2A>屬性。</xref:System.Web.HttpRequest.InputStream%2A>      -<xref:System.Web.HttpRequest.GetBufferedInputStream%2A>方法。</xref:System.Web.HttpRequest.GetBufferedInputStream%2A>      -<xref:System.Web.HttpRequest.GetBufferlessInputStream%2A>方法。</xref:System.Web.HttpRequest.GetBufferlessInputStream%2A>"
  syntax:
    content: public System.Web.ReadEntityBodyMode ReadEntityBodyMode { get; }
    return:
      type: System.Web.ReadEntityBodyMode
      description: "值，指出要求實體內容的讀取方式，或尚未被讀取。"
  overload: System.Web.HttpRequest.ReadEntityBodyMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.RequestContext
  id: RequestContext
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: RequestContext
  nameWithType: HttpRequest.RequestContext
  fullName: System.Web.HttpRequest.RequestContext
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "取得<xref:System.Web.Routing.RequestContext>目前要求的執行個體。</xref:System.Web.Routing.RequestContext>"
  remarks: "此屬性可存取<xref:System.Web.Routing.RouteData>目前要求的物件。</xref:System.Web.Routing.RouteData> 如需 ASP.NET 路由的詳細資訊，請參閱。[ASP.NET 路由](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public System.Web.Routing.RequestContext RequestContext { get; set; }
    return:
      type: System.Web.Routing.RequestContext
      description: "<xref:System.Web.Routing.RequestContext>目前要求的執行個體。</xref:System.Web.Routing.RequestContext> 為非路由的要求<xref:System.Web.Routing.RequestContext>傳回的物件是空的。</xref:System.Web.Routing.RequestContext>"
  overload: System.Web.HttpRequest.RequestContext*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.RequestType
  id: RequestType
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: RequestType
  nameWithType: HttpRequest.RequestType
  fullName: System.Web.HttpRequest.RequestType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "取得或設定 HTTP 資料傳輸方法 (<xref uid=&quot;langword_csharp_GET&quot; name=&quot;GET&quot; href=&quot;&quot;> </xref>或<xref uid=&quot;langword_csharp_POST&quot; name=&quot;POST&quot; href=&quot;&quot;> </xref>) 用戶端使用。"
  remarks: ''
  example:
  - "The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the RequestType property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file. This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.  \n  \n [!code-vb[System.Web.HttpRequest_Sample1#7](~/add/codesnippet/visualbasic/p-system.web.httprequest_25_1.aspx)]\n [!code-cs[System.Web.HttpRequest_Sample1#7](~/add/codesnippet/csharp/p-system.web.httprequest_25_1.aspx)]"
  syntax:
    content: public string RequestType { get; set; }
    return:
      type: System.String
      description: "字串，表示用戶端傳送的 HTTP 叫用類型。"
  overload: System.Web.HttpRequest.RequestType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.SaveAs(System.String,System.Boolean)
  id: SaveAs(System.String,System.Boolean)
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: SaveAs(String,Boolean)
  nameWithType: HttpRequest.SaveAs(String,Boolean)
  fullName: System.Web.HttpRequest.SaveAs(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "將 HTTP 要求儲存至磁碟。"
  remarks: "要求內容儲存至磁碟可用於偵錯。"
  example:
  - "The following code example calls the SaveAs method when a page is loaded. The call specifies that the request be saved as a text file in a directory where the ASP.NET process identity has been granted write permissions, and that any header information included in the request is included in the file.  \n  \n [!code-cs[System.Web.HttpRequest_Sample6#1](~/add/codesnippet/csharp/m-system.web.httprequest_1_1.aspx)]\n [!code-vb[System.Web.HttpRequest_Sample6#1](~/add/codesnippet/visualbasic/m-system.web.httprequest_1_1.aspx)]"
  syntax:
    content: public void SaveAs (string filename, bool includeHeaders);
    parameters:
    - id: filename
      type: System.String
      description: "實體磁碟機路徑。"
    - id: includeHeaders
      type: System.Boolean
      description: "布林值，指定 HTTP 標頭是否應該儲存至磁碟。"
  overload: System.Web.HttpRequest.SaveAs*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<xref:System.Web.Configuration.HttpRuntimeSection.RequireRootedSaveAsPath*>屬性<xref href=&quot;System.Web.Configuration.HttpRuntimeSection&quot;></xref>設<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>但<code> filename </code>不是絕對路徑。</xref:System.Web.Configuration.HttpRuntimeSection.RequireRootedSaveAsPath*>"
  platform:
  - net462
- uid: System.Web.HttpRequest.ServerVariables
  id: ServerVariables
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: ServerVariables
  nameWithType: HttpRequest.ServerVariables
  fullName: System.Web.HttpRequest.ServerVariables
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "取得 Web 伺服器變數的集合。"
  remarks: "如需支援的 IIS 伺服器變數的清單，請參閱[IIS 伺服器變數](http://go.microsoft.com/fwlink/?LinkId=52471)。"
  example:
  - "The following code example displays the names and values of all named server variables.  \n  \n [!code-cs[Classic HttpRequest.ServerVariables Example#1](~/add/codesnippet/csharp/p-system.web.httprequest_30_1.cs)]\n [!code-vb[Classic HttpRequest.ServerVariables Example#1](~/add/codesnippet/visualbasic/p-system.web.httprequest_30_1.vb)]"
  syntax:
    content: public System.Collections.Specialized.NameValueCollection ServerVariables { get; }
    return:
      type: System.Collections.Specialized.NameValueCollection
      description: "A <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref>伺服器變數。"
  overload: System.Web.HttpRequest.ServerVariables*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.TimedOutToken
  id: TimedOutToken
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: TimedOutToken
  nameWithType: HttpRequest.TimedOutToken
  fullName: System.Web.HttpRequest.TimedOutToken
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "取得<xref:System.Threading.CancellationToken>要求逾時錯誤的物件。</xref:System.Threading.CancellationToken>"
  remarks: "可以在 Web.config 檔案中指定的逾時期限 (請參閱<xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A?displayProperty=fullName>) 或以程式設計方式 (請參閱<xref:System.Web.HttpServerUtility.ScriptTimeout%2A?displayProperty=fullName>)。</xref:System.Web.HttpServerUtility.ScriptTimeout%2A?displayProperty=fullName> </xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A?displayProperty=fullName> 逾時期限是從要求進入時開始計算。 如果實際上是 110 秒的預設逾時，將不得早於開始處理要求之後，110 秒內觸動的取消語彙基元。 您可以變更<xref:System.Web.HttpServerUtility.ScriptTimeout%2A?displayProperty=fullName>屬性值和新的逾時值為尚未尚未達到長這個語彙基元，會遵守。</xref:System.Web.HttpServerUtility.ScriptTimeout%2A?displayProperty=fullName>       目前的語彙基元僅提供 15 的第二個資料粒度，這表示如果逾時值是 110 秒，語彙基元會達到一段時間之間 110 和 125 秒之後就會開始處理要求。 資料粒度可能會在未來變更。       即使這個屬性是安全執行緒，有其限制。 如需詳細資訊，請參閱<xref:System.Web.HttpResponse.ClientDisconnectedToken%2A?displayProperty=fullName>.</xref:System.Web.HttpResponse.ClientDisconnectedToken%2A?displayProperty=fullName>       這個屬性是無意義，如果 Websocket 要求處理已開始。"
  syntax:
    content: public System.Threading.CancellationToken TimedOutToken { get; }
    return:
      type: System.Threading.CancellationToken
      description: "取消語彙基元。"
  overload: System.Web.HttpRequest.TimedOutToken*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.TlsTokenBindingInfo
  id: TlsTokenBindingInfo
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: TlsTokenBindingInfo
  nameWithType: HttpRequest.TlsTokenBindingInfo
  fullName: System.Web.HttpRequest.TlsTokenBindingInfo
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "取得 TLS 語彙基元繫結資訊。 這個屬性可讓應用程式從增強式驗證內送 HTTP 要求擷取語彙基元的資訊。"
  remarks: "這個屬性會傳回`null`非 windows10 平台上。"
  syntax:
    content: public System.Web.ITlsTokenBindingInfo TlsTokenBindingInfo { get; }
    return:
      type: System.Web.ITlsTokenBindingInfo
      description: "目前連接的繫結語彙基元。"
  overload: System.Web.HttpRequest.TlsTokenBindingInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.TotalBytes
  id: TotalBytes
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: TotalBytes
  nameWithType: HttpRequest.TotalBytes
  fullName: System.Web.HttpRequest.TotalBytes
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "取得目前輸入資料流的位元組數目。"
  remarks: ''
  example:
  - "The following code example determines whether the TotalBytes property value is greater than 1000 bytes and writes that information to a file.  \n  \n [!code-vb[System.Web.HttpRequest_Sample1#6](~/add/codesnippet/visualbasic/p-system.web.httprequest_23_1.aspx)]\n [!code-cs[System.Web.HttpRequest_Sample1#6](~/add/codesnippet/csharp/p-system.web.httprequest_23_1.aspx)]"
  syntax:
    content: public int TotalBytes { get; }
    return:
      type: System.Int32
      description: "輸入資料流的位元組數目。"
  overload: System.Web.HttpRequest.TotalBytes*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.Unvalidated
  id: Unvalidated
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: Unvalidated
  nameWithType: HttpRequest.Unvalidated
  fullName: System.Web.HttpRequest.Unvalidated
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "取得 HTTP 要求值，而不觸發要求驗證。"
  remarks: "要求驗證檢查 HTML 標記和指令碼，可能表示潛在的跨網站指令碼處理攻擊。 根據預設，所有的值會檢查使用要求驗證，而且如果任何值包含標記或指令碼，ASP.NET 會擲回<xref:System.Web.HttpRequestValidationException>例外狀況。</xref:System.Web.HttpRequestValidationException> 使用這個方法，如果您預期的要求將會包含標記 （例如，您允許使用者張貼的內容，其中包含標記） 和您想要取得要求的原始值。      > [!IMPORTANT] > 如果您使用這個屬性時，您必須手動檢查潛在的跨網站指令碼攻擊的資料。"
  syntax:
    content: public System.Web.UnvalidatedRequestValues Unvalidated { get; }
    return:
      type: System.Web.UnvalidatedRequestValues
      description: "已使用要求驗證未曾檢查的 HTTP 要求值。"
  overload: System.Web.HttpRequest.Unvalidated*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.Url
  id: Url
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: Url
  nameWithType: HttpRequest.Url
  fullName: System.Web.HttpRequest.Url
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "取得目前要求 URL 的相關資訊。"
  remarks: ''
  example:
  - "The following code example assigns the <xref:System.Uri> object of the current request to an object variable and displays the value of two properties of the URL object to the HTTP output.  \n  \n [!code-cs[Classic HttpRequest.Url Example#1](~/add/codesnippet/csharp/p-system.web.httprequest_34_1.cs)]\n [!code-vb[Classic HttpRequest.Url Example#1](~/add/codesnippet/visualbasic/p-system.web.httprequest_34_1.vb)]"
  syntax:
    content: public Uri Url { get; }
    return:
      type: System.Uri
      description: "A<xref:System.Uri>物件，其中包含目前要求的 URL。</xref:System.Uri>"
  overload: System.Web.HttpRequest.Url*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.UrlReferrer
  id: UrlReferrer
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: UrlReferrer
  nameWithType: HttpRequest.UrlReferrer
  fullName: System.Web.HttpRequest.UrlReferrer
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "取得連結至目前 URL 的用戶端的先前要求 URL 的相關資訊。"
  remarks: ''
  example:
  - "The following code example displays the value of two properties of the URL that referred the client to the current application.  \n  \n [!code-cs[Classic HttpRequest.UrlReferrer Example#1](~/add/codesnippet/csharp/p-system.web.httprequest_8_1.cs)]\n [!code-vb[Classic HttpRequest.UrlReferrer Example#1](~/add/codesnippet/visualbasic/p-system.web.httprequest_8_1.vb)]"
  syntax:
    content: public Uri UrlReferrer { get; }
    return:
      type: System.Uri
      description: "A<xref:System.Uri>物件。</xref:System.Uri>"
  overload: System.Web.HttpRequest.UrlReferrer*
  exceptions:
  - type: System.UriFormatException
    commentId: T:System.UriFormatException
    description: "HTTP <xref uid=&quot;langword_csharp_Referer&quot; name=&quot;Referer&quot; href=&quot;&quot;> </xref>要求標頭不正確，因此無法轉換成<xref:System.Uri>物件。</xref:System.Uri>"
  platform:
  - net462
- uid: System.Web.HttpRequest.UserAgent
  id: UserAgent
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: UserAgent
  nameWithType: HttpRequest.UserAgent
  fullName: System.Web.HttpRequest.UserAgent
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "取得用戶端瀏覽器的原始使用者代理字串。"
  remarks: ''
  example:
  - "The following code example assigns the type identification of the requesting browser to a string variable.  \n  \n [!code-cs[Classic HttpRequest.UserAgent Example#1](~/add/codesnippet/csharp/p-system.web.httprequest_26_1.cs)]\n [!code-vb[Classic HttpRequest.UserAgent Example#1](~/add/codesnippet/visualbasic/p-system.web.httprequest_26_1.vb)]"
  syntax:
    content: public string UserAgent { get; }
    return:
      type: System.String
      description: "用戶端瀏覽器的原始使用者代理字串。"
  overload: System.Web.HttpRequest.UserAgent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.UserHostAddress
  id: UserHostAddress
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: UserHostAddress
  nameWithType: HttpRequest.UserHostAddress
  fullName: System.Web.HttpRequest.UserHostAddress
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "取得遠端用戶端的 IP 主機位址。"
  remarks: ''
  example:
  - "The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the UserHostAddress property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file. This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.  \n  \n [!code-vb[System.Web.HttpRequest_Sample1#7](~/add/codesnippet/visualbasic/p-system.web.httprequest_9_1.aspx)]\n [!code-cs[System.Web.HttpRequest_Sample1#7](~/add/codesnippet/csharp/p-system.web.httprequest_9_1.aspx)]"
  syntax:
    content: public string UserHostAddress { get; }
    return:
      type: System.String
      description: "遠端用戶端 IP 位址。"
  overload: System.Web.HttpRequest.UserHostAddress*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.UserHostName
  id: UserHostName
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: UserHostName
  nameWithType: HttpRequest.UserHostName
  fullName: System.Web.HttpRequest.UserHostName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "取得遠端用戶端的 DNS 名稱。"
  remarks: ''
  example:
  - "The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the UserHostName property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file. This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.  \n  \n [!code-vb[System.Web.HttpRequest_Sample1#7](~/add/codesnippet/visualbasic/p-system.web.httprequest_11_1.aspx)]\n [!code-cs[System.Web.HttpRequest_Sample1#7](~/add/codesnippet/csharp/p-system.web.httprequest_11_1.aspx)]"
  syntax:
    content: public string UserHostName { get; }
    return:
      type: System.String
      description: "遠端用戶端的 DNS 名稱。"
  overload: System.Web.HttpRequest.UserHostName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.UserLanguages
  id: UserLanguages
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: UserLanguages
  nameWithType: HttpRequest.UserLanguages
  fullName: System.Web.HttpRequest.UserLanguages
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "取得用戶端語言喜好設定的已排序的字串陣列。"
  remarks: ''
  example:
  - "The following code example captures the multiple values returned by the UserLanguages property into a string array and writes each language name to a separate line of HTTP output.  \n  \n The language names are provided by the browser, and there is no definitive list of all possible codes.  Typically these consist of a two-character codes for the language, a hyphen, and a two-character code for the culture, such as \"en-us\" for U.S. English and \"fr-ca\" for Canadian French.  \n  \n [!code-vb[Classic HttpRequest.UserLanguages Example#1](~/add/codesnippet/visualbasic/p-system.web.httprequest_16_1.vb)]\n [!code-cs[Classic HttpRequest.UserLanguages Example#1](~/add/codesnippet/csharp/p-system.web.httprequest_16_1.cs)]"
  syntax:
    content: public string[] UserLanguages { get; }
    return:
      type: System.String[]
      description: "用戶端語言喜好設定，已排序的字串陣列或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果是空的。"
  overload: System.Web.HttpRequest.UserLanguages*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.ValidateInput
  id: ValidateInput
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: ValidateInput()
  nameWithType: HttpRequest.ValidateInput()
  fullName: System.Web.HttpRequest.ValidateInput()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "透過集合進行驗證， <> </> *>， <> </> *>，以及<xref:System.Web.HttpRequest.QueryString*>屬性。</xref:System.Web.HttpRequest.QueryString*>"
  remarks: "<xref:System.Web.HttpRequest>類別使用的輸入的驗證旗標來追蹤是否要透過存取的要求集合上執行驗證<xref:System.Web.HttpRequest.Cookies%2A>， <xref:System.Web.HttpRequest.Form%2A>，和<xref:System.Web.HttpRequest.QueryString%2A>屬性。</xref:System.Web.HttpRequest.QueryString%2A> </xref:System.Web.HttpRequest.Form%2A> </xref:System.Web.HttpRequest.Cookies%2A> </xref:System.Web.HttpRequest> ValidateInput 方法設定這些旗標，因此，當的 get 存取子<xref:System.Web.HttpRequest.Cookies%2A>， <xref:System.Web.HttpRequest.Form%2A>，或<xref:System.Web.HttpRequest.QueryString%2A>叫用屬性，則會執行輸入的驗證。</xref:System.Web.HttpRequest.QueryString%2A> </xref:System.Web.HttpRequest.Form%2A> </xref:System.Web.HttpRequest.Cookies%2A> 驗證的運作方式是檢查所有的輸入的資料的硬式編碼有潛在危險的資料清單。       如果頁面指示詞或組態來啟用驗證功能，在頁面的期間呼叫這個方法`ProcessRequest`處理階段。 您的程式碼可以呼叫 ValidateInput 方法，如果未啟用驗證功能。"
  syntax:
    content: public void ValidateInput ();
    parameters: []
  overload: System.Web.HttpRequest.ValidateInput*
  exceptions:
  - type: System.Web.HttpRequestValidationException
    commentId: T:System.Web.HttpRequestValidationException
    description: "已從用戶端收到有潛在危險的資料。"
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.PlatformNotSupportedException
  isExternal: true
  name: System.PlatformNotSupportedException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.UriFormatException
  isExternal: true
  name: System.UriFormatException
- uid: System.Web.HttpRequestValidationException
  parent: System.Web
  isExternal: false
  name: HttpRequestValidationException
  nameWithType: HttpRequestValidationException
  fullName: System.Web.HttpRequestValidationException
- uid: System.Web.HttpRequest.#ctor(System.String,System.String,System.String)
  parent: System.Web.HttpRequest
  isExternal: false
  name: HttpRequest(String,String,String)
  nameWithType: HttpRequest.HttpRequest(String,String,String)
  fullName: System.Web.HttpRequest.HttpRequest(String,String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.HttpRequest.Abort
  parent: System.Web.HttpRequest
  isExternal: false
  name: Abort()
  nameWithType: HttpRequest.Abort()
  fullName: System.Web.HttpRequest.Abort()
- uid: System.Web.HttpRequest.AcceptTypes
  parent: System.Web.HttpRequest
  isExternal: false
  name: AcceptTypes
  nameWithType: HttpRequest.AcceptTypes
  fullName: System.Web.HttpRequest.AcceptTypes
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.HttpRequest.AnonymousID
  parent: System.Web.HttpRequest
  isExternal: false
  name: AnonymousID
  nameWithType: HttpRequest.AnonymousID
  fullName: System.Web.HttpRequest.AnonymousID
- uid: System.Web.HttpRequest.ApplicationPath
  parent: System.Web.HttpRequest
  isExternal: false
  name: ApplicationPath
  nameWithType: HttpRequest.ApplicationPath
  fullName: System.Web.HttpRequest.ApplicationPath
- uid: System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath
  parent: System.Web.HttpRequest
  isExternal: false
  name: AppRelativeCurrentExecutionFilePath
  nameWithType: HttpRequest.AppRelativeCurrentExecutionFilePath
  fullName: System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath
- uid: System.Web.HttpRequest.BinaryRead(System.Int32)
  parent: System.Web.HttpRequest
  isExternal: false
  name: BinaryRead(Int32)
  nameWithType: HttpRequest.BinaryRead(Int32)
  fullName: System.Web.HttpRequest.BinaryRead(Int32)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.HttpRequest.Browser
  parent: System.Web.HttpRequest
  isExternal: false
  name: Browser
  nameWithType: HttpRequest.Browser
  fullName: System.Web.HttpRequest.Browser
- uid: System.Web.HttpBrowserCapabilities
  parent: System.Web
  isExternal: false
  name: HttpBrowserCapabilities
  nameWithType: HttpBrowserCapabilities
  fullName: System.Web.HttpBrowserCapabilities
- uid: System.Web.HttpRequest.ClientCertificate
  parent: System.Web.HttpRequest
  isExternal: false
  name: ClientCertificate
  nameWithType: HttpRequest.ClientCertificate
  fullName: System.Web.HttpRequest.ClientCertificate
- uid: System.Web.HttpClientCertificate
  parent: System.Web
  isExternal: false
  name: HttpClientCertificate
  nameWithType: HttpClientCertificate
  fullName: System.Web.HttpClientCertificate
- uid: System.Web.HttpRequest.ContentEncoding
  parent: System.Web.HttpRequest
  isExternal: false
  name: ContentEncoding
  nameWithType: HttpRequest.ContentEncoding
  fullName: System.Web.HttpRequest.ContentEncoding
- uid: System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: System.Web.HttpRequest.ContentLength
  parent: System.Web.HttpRequest
  isExternal: false
  name: ContentLength
  nameWithType: HttpRequest.ContentLength
  fullName: System.Web.HttpRequest.ContentLength
- uid: System.Web.HttpRequest.ContentType
  parent: System.Web.HttpRequest
  isExternal: false
  name: ContentType
  nameWithType: HttpRequest.ContentType
  fullName: System.Web.HttpRequest.ContentType
- uid: System.Web.HttpRequest.Cookies
  parent: System.Web.HttpRequest
  isExternal: false
  name: Cookies
  nameWithType: HttpRequest.Cookies
  fullName: System.Web.HttpRequest.Cookies
- uid: System.Web.HttpCookieCollection
  parent: System.Web
  isExternal: false
  name: HttpCookieCollection
  nameWithType: HttpCookieCollection
  fullName: System.Web.HttpCookieCollection
- uid: System.Web.HttpRequest.CurrentExecutionFilePath
  parent: System.Web.HttpRequest
  isExternal: false
  name: CurrentExecutionFilePath
  nameWithType: HttpRequest.CurrentExecutionFilePath
  fullName: System.Web.HttpRequest.CurrentExecutionFilePath
- uid: System.Web.HttpRequest.CurrentExecutionFilePathExtension
  parent: System.Web.HttpRequest
  isExternal: false
  name: CurrentExecutionFilePathExtension
  nameWithType: HttpRequest.CurrentExecutionFilePathExtension
  fullName: System.Web.HttpRequest.CurrentExecutionFilePathExtension
- uid: System.Web.HttpRequest.FilePath
  parent: System.Web.HttpRequest
  isExternal: false
  name: FilePath
  nameWithType: HttpRequest.FilePath
  fullName: System.Web.HttpRequest.FilePath
- uid: System.Web.HttpRequest.Files
  parent: System.Web.HttpRequest
  isExternal: false
  name: Files
  nameWithType: HttpRequest.Files
  fullName: System.Web.HttpRequest.Files
- uid: System.Web.HttpFileCollection
  parent: System.Web
  isExternal: false
  name: HttpFileCollection
  nameWithType: HttpFileCollection
  fullName: System.Web.HttpFileCollection
- uid: System.Web.HttpRequest.Filter
  parent: System.Web.HttpRequest
  isExternal: false
  name: Filter
  nameWithType: HttpRequest.Filter
  fullName: System.Web.HttpRequest.Filter
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Web.HttpRequest.Form
  parent: System.Web.HttpRequest
  isExternal: false
  name: Form
  nameWithType: HttpRequest.Form
  fullName: System.Web.HttpRequest.Form
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Web.HttpRequest.GetBufferedInputStream
  parent: System.Web.HttpRequest
  isExternal: false
  name: GetBufferedInputStream()
  nameWithType: HttpRequest.GetBufferedInputStream()
  fullName: System.Web.HttpRequest.GetBufferedInputStream()
- uid: System.Web.HttpRequest.GetBufferlessInputStream
  parent: System.Web.HttpRequest
  isExternal: false
  name: GetBufferlessInputStream()
  nameWithType: HttpRequest.GetBufferlessInputStream()
  fullName: System.Web.HttpRequest.GetBufferlessInputStream()
- uid: System.Web.HttpRequest.GetBufferlessInputStream(System.Boolean)
  parent: System.Web.HttpRequest
  isExternal: false
  name: GetBufferlessInputStream(Boolean)
  nameWithType: HttpRequest.GetBufferlessInputStream(Boolean)
  fullName: System.Web.HttpRequest.GetBufferlessInputStream(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.HttpRequest.Headers
  parent: System.Web.HttpRequest
  isExternal: false
  name: Headers
  nameWithType: HttpRequest.Headers
  fullName: System.Web.HttpRequest.Headers
- uid: System.Web.HttpRequest.HttpChannelBinding
  parent: System.Web.HttpRequest
  isExternal: false
  name: HttpChannelBinding
  nameWithType: HttpRequest.HttpChannelBinding
  fullName: System.Web.HttpRequest.HttpChannelBinding
- uid: System.Security.Authentication.ExtendedProtection.ChannelBinding
  parent: System.Security.Authentication.ExtendedProtection
  isExternal: true
  name: ChannelBinding
  nameWithType: ChannelBinding
  fullName: System.Security.Authentication.ExtendedProtection.ChannelBinding
- uid: System.Web.HttpRequest.HttpMethod
  parent: System.Web.HttpRequest
  isExternal: false
  name: HttpMethod
  nameWithType: HttpRequest.HttpMethod
  fullName: System.Web.HttpRequest.HttpMethod
- uid: System.Web.HttpRequest.InputStream
  parent: System.Web.HttpRequest
  isExternal: false
  name: InputStream
  nameWithType: HttpRequest.InputStream
  fullName: System.Web.HttpRequest.InputStream
- uid: System.Web.HttpRequest.InsertEntityBody
  parent: System.Web.HttpRequest
  isExternal: false
  name: InsertEntityBody()
  nameWithType: HttpRequest.InsertEntityBody()
  fullName: System.Web.HttpRequest.InsertEntityBody()
- uid: System.Web.HttpRequest.InsertEntityBody(System.Byte[],System.Int32,System.Int32)
  parent: System.Web.HttpRequest
  isExternal: false
  name: InsertEntityBody(Byte[],Int32,Int32)
  nameWithType: HttpRequest.InsertEntityBody(Byte[],Int32,Int32)
  fullName: System.Web.HttpRequest.InsertEntityBody(Byte[],Int32,Int32)
- uid: System.Web.HttpRequest.IsAuthenticated
  parent: System.Web.HttpRequest
  isExternal: false
  name: IsAuthenticated
  nameWithType: HttpRequest.IsAuthenticated
  fullName: System.Web.HttpRequest.IsAuthenticated
- uid: System.Web.HttpRequest.IsLocal
  parent: System.Web.HttpRequest
  isExternal: false
  name: IsLocal
  nameWithType: HttpRequest.IsLocal
  fullName: System.Web.HttpRequest.IsLocal
- uid: System.Web.HttpRequest.IsSecureConnection
  parent: System.Web.HttpRequest
  isExternal: false
  name: IsSecureConnection
  nameWithType: HttpRequest.IsSecureConnection
  fullName: System.Web.HttpRequest.IsSecureConnection
- uid: System.Web.HttpRequest.Item(System.String)
  parent: System.Web.HttpRequest
  isExternal: false
  name: Item(String)
  nameWithType: HttpRequest.Item(String)
  fullName: System.Web.HttpRequest.Item(String)
- uid: System.Web.HttpRequest.LogonUserIdentity
  parent: System.Web.HttpRequest
  isExternal: false
  name: LogonUserIdentity
  nameWithType: HttpRequest.LogonUserIdentity
  fullName: System.Web.HttpRequest.LogonUserIdentity
- uid: System.Security.Principal.WindowsIdentity
  parent: System.Security.Principal
  isExternal: false
  name: WindowsIdentity
  nameWithType: WindowsIdentity
  fullName: System.Security.Principal.WindowsIdentity
- uid: System.Web.HttpRequest.MapImageCoordinates(System.String)
  parent: System.Web.HttpRequest
  isExternal: false
  name: MapImageCoordinates(String)
  nameWithType: HttpRequest.MapImageCoordinates(String)
  fullName: System.Web.HttpRequest.MapImageCoordinates(String)
- uid: System.Int32[]
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32[]
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: Int32[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.HttpRequest.MapPath(System.String)
  parent: System.Web.HttpRequest
  isExternal: false
  name: MapPath(String)
  nameWithType: HttpRequest.MapPath(String)
  fullName: System.Web.HttpRequest.MapPath(String)
- uid: System.Web.HttpRequest.MapPath(System.String,System.String,System.Boolean)
  parent: System.Web.HttpRequest
  isExternal: false
  name: MapPath(String,String,Boolean)
  nameWithType: HttpRequest.MapPath(String,String,Boolean)
  fullName: System.Web.HttpRequest.MapPath(String,String,Boolean)
- uid: System.Web.HttpRequest.MapRawImageCoordinates(System.String)
  parent: System.Web.HttpRequest
  isExternal: false
  name: MapRawImageCoordinates(String)
  nameWithType: HttpRequest.MapRawImageCoordinates(String)
  fullName: System.Web.HttpRequest.MapRawImageCoordinates(String)
- uid: System.Double[]
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double[]
  spec.csharp:
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: Double[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.HttpRequest.Params
  parent: System.Web.HttpRequest
  isExternal: false
  name: Params
  nameWithType: HttpRequest.Params
  fullName: System.Web.HttpRequest.Params
- uid: System.Web.HttpRequest.Path
  parent: System.Web.HttpRequest
  isExternal: false
  name: Path
  nameWithType: HttpRequest.Path
  fullName: System.Web.HttpRequest.Path
- uid: System.Web.HttpRequest.PathInfo
  parent: System.Web.HttpRequest
  isExternal: false
  name: PathInfo
  nameWithType: HttpRequest.PathInfo
  fullName: System.Web.HttpRequest.PathInfo
- uid: System.Web.HttpRequest.PhysicalApplicationPath
  parent: System.Web.HttpRequest
  isExternal: false
  name: PhysicalApplicationPath
  nameWithType: HttpRequest.PhysicalApplicationPath
  fullName: System.Web.HttpRequest.PhysicalApplicationPath
- uid: System.Web.HttpRequest.PhysicalPath
  parent: System.Web.HttpRequest
  isExternal: false
  name: PhysicalPath
  nameWithType: HttpRequest.PhysicalPath
  fullName: System.Web.HttpRequest.PhysicalPath
- uid: System.Web.HttpRequest.QueryString
  parent: System.Web.HttpRequest
  isExternal: false
  name: QueryString
  nameWithType: HttpRequest.QueryString
  fullName: System.Web.HttpRequest.QueryString
- uid: System.Web.HttpRequest.RawUrl
  parent: System.Web.HttpRequest
  isExternal: false
  name: RawUrl
  nameWithType: HttpRequest.RawUrl
  fullName: System.Web.HttpRequest.RawUrl
- uid: System.Web.HttpRequest.ReadEntityBodyMode
  parent: System.Web.HttpRequest
  isExternal: false
  name: ReadEntityBodyMode
  nameWithType: HttpRequest.ReadEntityBodyMode
  fullName: System.Web.HttpRequest.ReadEntityBodyMode
- uid: System.Web.ReadEntityBodyMode
  parent: System.Web
  isExternal: false
  name: ReadEntityBodyMode
  nameWithType: ReadEntityBodyMode
  fullName: System.Web.ReadEntityBodyMode
- uid: System.Web.HttpRequest.RequestContext
  parent: System.Web.HttpRequest
  isExternal: false
  name: RequestContext
  nameWithType: HttpRequest.RequestContext
  fullName: System.Web.HttpRequest.RequestContext
- uid: System.Web.Routing.RequestContext
  parent: System.Web.Routing
  isExternal: true
  name: RequestContext
  nameWithType: RequestContext
  fullName: System.Web.Routing.RequestContext
- uid: System.Web.HttpRequest.RequestType
  parent: System.Web.HttpRequest
  isExternal: false
  name: RequestType
  nameWithType: HttpRequest.RequestType
  fullName: System.Web.HttpRequest.RequestType
- uid: System.Web.HttpRequest.SaveAs(System.String,System.Boolean)
  parent: System.Web.HttpRequest
  isExternal: false
  name: SaveAs(String,Boolean)
  nameWithType: HttpRequest.SaveAs(String,Boolean)
  fullName: System.Web.HttpRequest.SaveAs(String,Boolean)
- uid: System.Web.HttpRequest.ServerVariables
  parent: System.Web.HttpRequest
  isExternal: false
  name: ServerVariables
  nameWithType: HttpRequest.ServerVariables
  fullName: System.Web.HttpRequest.ServerVariables
- uid: System.Web.HttpRequest.TimedOutToken
  parent: System.Web.HttpRequest
  isExternal: false
  name: TimedOutToken
  nameWithType: HttpRequest.TimedOutToken
  fullName: System.Web.HttpRequest.TimedOutToken
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Web.HttpRequest.TlsTokenBindingInfo
  parent: System.Web.HttpRequest
  isExternal: false
  name: TlsTokenBindingInfo
  nameWithType: HttpRequest.TlsTokenBindingInfo
  fullName: System.Web.HttpRequest.TlsTokenBindingInfo
- uid: System.Web.ITlsTokenBindingInfo
  parent: System.Web
  isExternal: false
  name: ITlsTokenBindingInfo
  nameWithType: ITlsTokenBindingInfo
  fullName: System.Web.ITlsTokenBindingInfo
- uid: System.Web.HttpRequest.TotalBytes
  parent: System.Web.HttpRequest
  isExternal: false
  name: TotalBytes
  nameWithType: HttpRequest.TotalBytes
  fullName: System.Web.HttpRequest.TotalBytes
- uid: System.Web.HttpRequest.Unvalidated
  parent: System.Web.HttpRequest
  isExternal: false
  name: Unvalidated
  nameWithType: HttpRequest.Unvalidated
  fullName: System.Web.HttpRequest.Unvalidated
- uid: System.Web.UnvalidatedRequestValues
  parent: System.Web
  isExternal: false
  name: UnvalidatedRequestValues
  nameWithType: UnvalidatedRequestValues
  fullName: System.Web.UnvalidatedRequestValues
- uid: System.Web.HttpRequest.Url
  parent: System.Web.HttpRequest
  isExternal: false
  name: Url
  nameWithType: HttpRequest.Url
  fullName: System.Web.HttpRequest.Url
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Web.HttpRequest.UrlReferrer
  parent: System.Web.HttpRequest
  isExternal: false
  name: UrlReferrer
  nameWithType: HttpRequest.UrlReferrer
  fullName: System.Web.HttpRequest.UrlReferrer
- uid: System.Web.HttpRequest.UserAgent
  parent: System.Web.HttpRequest
  isExternal: false
  name: UserAgent
  nameWithType: HttpRequest.UserAgent
  fullName: System.Web.HttpRequest.UserAgent
- uid: System.Web.HttpRequest.UserHostAddress
  parent: System.Web.HttpRequest
  isExternal: false
  name: UserHostAddress
  nameWithType: HttpRequest.UserHostAddress
  fullName: System.Web.HttpRequest.UserHostAddress
- uid: System.Web.HttpRequest.UserHostName
  parent: System.Web.HttpRequest
  isExternal: false
  name: UserHostName
  nameWithType: HttpRequest.UserHostName
  fullName: System.Web.HttpRequest.UserHostName
- uid: System.Web.HttpRequest.UserLanguages
  parent: System.Web.HttpRequest
  isExternal: false
  name: UserLanguages
  nameWithType: HttpRequest.UserLanguages
  fullName: System.Web.HttpRequest.UserLanguages
- uid: System.Web.HttpRequest.ValidateInput
  parent: System.Web.HttpRequest
  isExternal: false
  name: ValidateInput()
  nameWithType: HttpRequest.ValidateInput()
  fullName: System.Web.HttpRequest.ValidateInput()
- uid: System.Web.HttpRequest.#ctor*
  parent: System.Web.HttpRequest
  isExternal: false
  name: HttpRequest
  nameWithType: HttpRequest.HttpRequest
- uid: System.Web.HttpRequest.Abort*
  parent: System.Web.HttpRequest
  isExternal: false
  name: Abort
  nameWithType: HttpRequest.Abort
- uid: System.Web.HttpRequest.AcceptTypes*
  parent: System.Web.HttpRequest
  isExternal: false
  name: AcceptTypes
  nameWithType: HttpRequest.AcceptTypes
- uid: System.Web.HttpRequest.AnonymousID*
  parent: System.Web.HttpRequest
  isExternal: false
  name: AnonymousID
  nameWithType: HttpRequest.AnonymousID
- uid: System.Web.HttpRequest.ApplicationPath*
  parent: System.Web.HttpRequest
  isExternal: false
  name: ApplicationPath
  nameWithType: HttpRequest.ApplicationPath
- uid: System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath*
  parent: System.Web.HttpRequest
  isExternal: false
  name: AppRelativeCurrentExecutionFilePath
  nameWithType: HttpRequest.AppRelativeCurrentExecutionFilePath
- uid: System.Web.HttpRequest.BinaryRead*
  parent: System.Web.HttpRequest
  isExternal: false
  name: BinaryRead
  nameWithType: HttpRequest.BinaryRead
- uid: System.Web.HttpRequest.Browser*
  parent: System.Web.HttpRequest
  isExternal: false
  name: Browser
  nameWithType: HttpRequest.Browser
- uid: System.Web.HttpRequest.ClientCertificate*
  parent: System.Web.HttpRequest
  isExternal: false
  name: ClientCertificate
  nameWithType: HttpRequest.ClientCertificate
- uid: System.Web.HttpRequest.ContentEncoding*
  parent: System.Web.HttpRequest
  isExternal: false
  name: ContentEncoding
  nameWithType: HttpRequest.ContentEncoding
- uid: System.Web.HttpRequest.ContentLength*
  parent: System.Web.HttpRequest
  isExternal: false
  name: ContentLength
  nameWithType: HttpRequest.ContentLength
- uid: System.Web.HttpRequest.ContentType*
  parent: System.Web.HttpRequest
  isExternal: false
  name: ContentType
  nameWithType: HttpRequest.ContentType
- uid: System.Web.HttpRequest.Cookies*
  parent: System.Web.HttpRequest
  isExternal: false
  name: Cookies
  nameWithType: HttpRequest.Cookies
- uid: System.Web.HttpRequest.CurrentExecutionFilePath*
  parent: System.Web.HttpRequest
  isExternal: false
  name: CurrentExecutionFilePath
  nameWithType: HttpRequest.CurrentExecutionFilePath
- uid: System.Web.HttpRequest.CurrentExecutionFilePathExtension*
  parent: System.Web.HttpRequest
  isExternal: false
  name: CurrentExecutionFilePathExtension
  nameWithType: HttpRequest.CurrentExecutionFilePathExtension
- uid: System.Web.HttpRequest.FilePath*
  parent: System.Web.HttpRequest
  isExternal: false
  name: FilePath
  nameWithType: HttpRequest.FilePath
- uid: System.Web.HttpRequest.Files*
  parent: System.Web.HttpRequest
  isExternal: false
  name: Files
  nameWithType: HttpRequest.Files
- uid: System.Web.HttpRequest.Filter*
  parent: System.Web.HttpRequest
  isExternal: false
  name: Filter
  nameWithType: HttpRequest.Filter
- uid: System.Web.HttpRequest.Form*
  parent: System.Web.HttpRequest
  isExternal: false
  name: Form
  nameWithType: HttpRequest.Form
- uid: System.Web.HttpRequest.GetBufferedInputStream*
  parent: System.Web.HttpRequest
  isExternal: false
  name: GetBufferedInputStream
  nameWithType: HttpRequest.GetBufferedInputStream
- uid: System.Web.HttpRequest.GetBufferlessInputStream*
  parent: System.Web.HttpRequest
  isExternal: false
  name: GetBufferlessInputStream
  nameWithType: HttpRequest.GetBufferlessInputStream
- uid: System.Web.HttpRequest.Headers*
  parent: System.Web.HttpRequest
  isExternal: false
  name: Headers
  nameWithType: HttpRequest.Headers
- uid: System.Web.HttpRequest.HttpChannelBinding*
  parent: System.Web.HttpRequest
  isExternal: false
  name: HttpChannelBinding
  nameWithType: HttpRequest.HttpChannelBinding
- uid: System.Web.HttpRequest.HttpMethod*
  parent: System.Web.HttpRequest
  isExternal: false
  name: HttpMethod
  nameWithType: HttpRequest.HttpMethod
- uid: System.Web.HttpRequest.InputStream*
  parent: System.Web.HttpRequest
  isExternal: false
  name: InputStream
  nameWithType: HttpRequest.InputStream
- uid: System.Web.HttpRequest.InsertEntityBody*
  parent: System.Web.HttpRequest
  isExternal: false
  name: InsertEntityBody
  nameWithType: HttpRequest.InsertEntityBody
- uid: System.Web.HttpRequest.IsAuthenticated*
  parent: System.Web.HttpRequest
  isExternal: false
  name: IsAuthenticated
  nameWithType: HttpRequest.IsAuthenticated
- uid: System.Web.HttpRequest.IsLocal*
  parent: System.Web.HttpRequest
  isExternal: false
  name: IsLocal
  nameWithType: HttpRequest.IsLocal
- uid: System.Web.HttpRequest.IsSecureConnection*
  parent: System.Web.HttpRequest
  isExternal: false
  name: IsSecureConnection
  nameWithType: HttpRequest.IsSecureConnection
- uid: System.Web.HttpRequest.Item*
  parent: System.Web.HttpRequest
  isExternal: false
  name: Item
  nameWithType: HttpRequest.Item
- uid: System.Web.HttpRequest.LogonUserIdentity*
  parent: System.Web.HttpRequest
  isExternal: false
  name: LogonUserIdentity
  nameWithType: HttpRequest.LogonUserIdentity
- uid: System.Web.HttpRequest.MapImageCoordinates*
  parent: System.Web.HttpRequest
  isExternal: false
  name: MapImageCoordinates
  nameWithType: HttpRequest.MapImageCoordinates
- uid: System.Web.HttpRequest.MapPath*
  parent: System.Web.HttpRequest
  isExternal: false
  name: MapPath
  nameWithType: HttpRequest.MapPath
- uid: System.Web.HttpRequest.MapRawImageCoordinates*
  parent: System.Web.HttpRequest
  isExternal: false
  name: MapRawImageCoordinates
  nameWithType: HttpRequest.MapRawImageCoordinates
- uid: System.Web.HttpRequest.Params*
  parent: System.Web.HttpRequest
  isExternal: false
  name: Params
  nameWithType: HttpRequest.Params
- uid: System.Web.HttpRequest.Path*
  parent: System.Web.HttpRequest
  isExternal: false
  name: Path
  nameWithType: HttpRequest.Path
- uid: System.Web.HttpRequest.PathInfo*
  parent: System.Web.HttpRequest
  isExternal: false
  name: PathInfo
  nameWithType: HttpRequest.PathInfo
- uid: System.Web.HttpRequest.PhysicalApplicationPath*
  parent: System.Web.HttpRequest
  isExternal: false
  name: PhysicalApplicationPath
  nameWithType: HttpRequest.PhysicalApplicationPath
- uid: System.Web.HttpRequest.PhysicalPath*
  parent: System.Web.HttpRequest
  isExternal: false
  name: PhysicalPath
  nameWithType: HttpRequest.PhysicalPath
- uid: System.Web.HttpRequest.QueryString*
  parent: System.Web.HttpRequest
  isExternal: false
  name: QueryString
  nameWithType: HttpRequest.QueryString
- uid: System.Web.HttpRequest.RawUrl*
  parent: System.Web.HttpRequest
  isExternal: false
  name: RawUrl
  nameWithType: HttpRequest.RawUrl
- uid: System.Web.HttpRequest.ReadEntityBodyMode*
  parent: System.Web.HttpRequest
  isExternal: false
  name: ReadEntityBodyMode
  nameWithType: HttpRequest.ReadEntityBodyMode
- uid: System.Web.HttpRequest.RequestContext*
  parent: System.Web.HttpRequest
  isExternal: false
  name: RequestContext
  nameWithType: HttpRequest.RequestContext
- uid: System.Web.HttpRequest.RequestType*
  parent: System.Web.HttpRequest
  isExternal: false
  name: RequestType
  nameWithType: HttpRequest.RequestType
- uid: System.Web.HttpRequest.SaveAs*
  parent: System.Web.HttpRequest
  isExternal: false
  name: SaveAs
  nameWithType: HttpRequest.SaveAs
- uid: System.Web.HttpRequest.ServerVariables*
  parent: System.Web.HttpRequest
  isExternal: false
  name: ServerVariables
  nameWithType: HttpRequest.ServerVariables
- uid: System.Web.HttpRequest.TimedOutToken*
  parent: System.Web.HttpRequest
  isExternal: false
  name: TimedOutToken
  nameWithType: HttpRequest.TimedOutToken
- uid: System.Web.HttpRequest.TlsTokenBindingInfo*
  parent: System.Web.HttpRequest
  isExternal: false
  name: TlsTokenBindingInfo
  nameWithType: HttpRequest.TlsTokenBindingInfo
- uid: System.Web.HttpRequest.TotalBytes*
  parent: System.Web.HttpRequest
  isExternal: false
  name: TotalBytes
  nameWithType: HttpRequest.TotalBytes
- uid: System.Web.HttpRequest.Unvalidated*
  parent: System.Web.HttpRequest
  isExternal: false
  name: Unvalidated
  nameWithType: HttpRequest.Unvalidated
- uid: System.Web.HttpRequest.Url*
  parent: System.Web.HttpRequest
  isExternal: false
  name: Url
  nameWithType: HttpRequest.Url
- uid: System.Web.HttpRequest.UrlReferrer*
  parent: System.Web.HttpRequest
  isExternal: false
  name: UrlReferrer
  nameWithType: HttpRequest.UrlReferrer
- uid: System.Web.HttpRequest.UserAgent*
  parent: System.Web.HttpRequest
  isExternal: false
  name: UserAgent
  nameWithType: HttpRequest.UserAgent
- uid: System.Web.HttpRequest.UserHostAddress*
  parent: System.Web.HttpRequest
  isExternal: false
  name: UserHostAddress
  nameWithType: HttpRequest.UserHostAddress
- uid: System.Web.HttpRequest.UserHostName*
  parent: System.Web.HttpRequest
  isExternal: false
  name: UserHostName
  nameWithType: HttpRequest.UserHostName
- uid: System.Web.HttpRequest.UserLanguages*
  parent: System.Web.HttpRequest
  isExternal: false
  name: UserLanguages
  nameWithType: HttpRequest.UserLanguages
- uid: System.Web.HttpRequest.ValidateInput*
  parent: System.Web.HttpRequest
  isExternal: false
  name: ValidateInput
  nameWithType: HttpRequest.ValidateInput
