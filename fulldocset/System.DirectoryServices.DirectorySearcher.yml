### YamlMime:ManagedReference
items:
- uid: System.DirectoryServices.DirectorySearcher
  id: DirectorySearcher
  children:
  - System.DirectoryServices.DirectorySearcher.#ctor
  - System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry)
  - System.DirectoryServices.DirectorySearcher.#ctor(System.String)
  - System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String)
  - System.DirectoryServices.DirectorySearcher.#ctor(System.String,System.String[])
  - System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String,System.String[])
  - System.DirectoryServices.DirectorySearcher.#ctor(System.String,System.String[],System.DirectoryServices.SearchScope)
  - System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String,System.String[],System.DirectoryServices.SearchScope)
  - System.DirectoryServices.DirectorySearcher.Asynchronous
  - System.DirectoryServices.DirectorySearcher.AttributeScopeQuery
  - System.DirectoryServices.DirectorySearcher.CacheResults
  - System.DirectoryServices.DirectorySearcher.ClientTimeout
  - System.DirectoryServices.DirectorySearcher.DerefAlias
  - System.DirectoryServices.DirectorySearcher.DirectorySynchronization
  - System.DirectoryServices.DirectorySearcher.Dispose(System.Boolean)
  - System.DirectoryServices.DirectorySearcher.ExtendedDN
  - System.DirectoryServices.DirectorySearcher.Filter
  - System.DirectoryServices.DirectorySearcher.FindAll
  - System.DirectoryServices.DirectorySearcher.FindOne
  - System.DirectoryServices.DirectorySearcher.PageSize
  - System.DirectoryServices.DirectorySearcher.PropertiesToLoad
  - System.DirectoryServices.DirectorySearcher.PropertyNamesOnly
  - System.DirectoryServices.DirectorySearcher.ReferralChasing
  - System.DirectoryServices.DirectorySearcher.SearchRoot
  - System.DirectoryServices.DirectorySearcher.SearchScope
  - System.DirectoryServices.DirectorySearcher.SecurityMasks
  - System.DirectoryServices.DirectorySearcher.ServerPageTimeLimit
  - System.DirectoryServices.DirectorySearcher.ServerTimeLimit
  - System.DirectoryServices.DirectorySearcher.SizeLimit
  - System.DirectoryServices.DirectorySearcher.Sort
  - System.DirectoryServices.DirectorySearcher.Tombstone
  - System.DirectoryServices.DirectorySearcher.VirtualListView
  langs:
  - csharp
  name: DirectorySearcher
  nameWithType: DirectorySearcher
  fullName: System.DirectoryServices.DirectorySearcher
  type: Class
  summary: "執行 Active Directory 網域服務查詢。"
  remarks: "您可以使用 DirectorySearcher 物件來搜尋並執行的 Active Directory 網域服務階層使用輕量型目錄存取通訊協定 (LDAP) 查詢。 LDAP 是唯一系統提供 Active Directory 服務介面 (ADSI) 支援的提供者目錄搜尋。 系統管理員可以進行、 變更和刪除階層中找到的物件。 如需詳細資訊，請參閱[使用 System.DirectoryServices](http://msdn.microsoft.com/en-us/ffa2f003-3a9a-4e2a-815e-825c8ddd7949)。       當您建立 DirectorySearcher 的執行個體時，您可以指定您想要擷取，根和選擇性的屬性，以擷取清單。 <xref:System.DirectoryServices.DirectorySearcher.SearchRoot%2A>屬性可讓您設定其他屬性來執行下列工作:-快取在本機電腦上的搜尋結果。</xref:System.DirectoryServices.DirectorySearcher.SearchRoot%2A> 設定<xref:System.DirectoryServices.DirectorySearcher.CacheResults%2A>屬性`true`儲存在本機電腦上的目錄資訊。</xref:System.DirectoryServices.DirectorySearcher.CacheResults%2A> 對此本機快取並認可至 Active Directory 網域服務更新時，才<xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A?displayProperty=fullName>方法呼叫。</xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A?displayProperty=fullName>      -指定時間長度的搜尋，請使用<xref:System.DirectoryServices.DirectorySearcher.ServerTimeLimit%2A>屬性。</xref:System.DirectoryServices.DirectorySearcher.ServerTimeLimit%2A>      -只擷取屬性名稱。 設定<xref:System.DirectoryServices.DirectorySearcher.PropertyNamesOnly%2A>屬性`true`来擷取的值已指派給的屬性的名稱。</xref:System.DirectoryServices.DirectorySearcher.PropertyNamesOnly%2A>      -執行分頁的搜尋。 設定<xref:System.DirectoryServices.DirectorySearcher.PageSize%2A>屬性，以指定的分頁搜尋中傳回的物件數目上限。</xref:System.DirectoryServices.DirectorySearcher.PageSize%2A> 如果您不想進行分頁的搜尋，設定<xref:System.DirectoryServices.DirectorySearcher.PageSize%2A>屬性為其預設值是零。</xref:System.DirectoryServices.DirectorySearcher.PageSize%2A>      -指定要傳回的項目數目上限使用<xref:System.DirectoryServices.DirectorySearcher.SizeLimit%2A>屬性。</xref:System.DirectoryServices.DirectorySearcher.SizeLimit%2A> 如果您設定<xref:System.DirectoryServices.DirectorySearcher.SizeLimit%2A>屬性為其預設值是零，由伺服器決定預設值是 1000 個項目。</xref:System.DirectoryServices.DirectorySearcher.SizeLimit%2A>      > [!NOTE] > 傳回的項目和時間限制的最大數目超過伺服器設定的限制，如果伺服器設定會覆寫元件設定。       如需 DirectorySearcher 類別的執行個體的初始屬性值的清單，請參閱<xref:System.DirectoryServices.DirectorySearcher.%23ctor>建構函式。</xref:System.DirectoryServices.DirectorySearcher.%23ctor>      > [!NOTE] > 假設您有使用這個類別之前有基本認識的 Active Directory 網域服務。 如需詳細資訊，請參閱<xref:System.DirectoryServices?displayProperty=fullName>概觀。</xref:System.DirectoryServices?displayProperty=fullName>"
  syntax:
    content: >-
      [System.DirectoryServices.DSDescription("DirectorySearcherDesc")]

      public class DirectorySearcher : System.ComponentModel.Component
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  implements: []
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.#ctor
  id: '#ctor'
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: DirectorySearcher()
  nameWithType: DirectorySearcher.DirectorySearcher()
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher()
  type: Constructor
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "初始化的新執行個體<xref href=&quot;System.DirectoryServices.DirectorySearcher&quot;></xref>類別具有預設值。"
  remarks: "下表顯示的初始屬性值<xref:System.DirectoryServices.DirectorySearcher>物件。</xref:System.DirectoryServices.DirectorySearcher>      |屬性 |初始值 |  |--------------|-------------------|  |<xref:System.DirectoryServices.DirectorySearcher.SearchRoot%2A>|Null 參考 (`Nothing`在 Visual Basic 中) |  |<xref:System.DirectoryServices.DirectorySearcher.Filter%2A>|&quot;(objectClass = *)&quot;|  |<xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad%2A>|空的<xref:System.Collections.Specialized.StringCollection>物件 |  |<xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A>|<xref:System.DirectoryServices.SearchScope>|</xref:System.DirectoryServices.SearchScope></xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A></xref:System.Collections.Specialized.StringCollection></xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad%2A></xref:System.DirectoryServices.DirectorySearcher.Filter%2A></xref:System.DirectoryServices.DirectorySearcher.SearchRoot%2A>"
  syntax:
    content: public DirectorySearcher ();
    parameters: []
  overload: System.DirectoryServices.DirectorySearcher.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry)
  id: '#ctor(System.DirectoryServices.DirectoryEntry)'
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: DirectorySearcher(DirectoryEntry)
  nameWithType: DirectorySearcher.DirectorySearcher(DirectoryEntry)
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher(DirectoryEntry)
  type: Constructor
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "初始化的新執行個體<xref href=&quot;System.DirectoryServices.DirectorySearcher&quot;></xref>類別使用指定的搜尋根目錄。"
  remarks: "下表顯示的初始屬性值<xref:System.DirectoryServices.DirectorySearcher>物件。</xref:System.DirectoryServices.DirectorySearcher>      |屬性 |初始值 |  |--------------|-------------------|  |<xref:System.DirectoryServices.DirectorySearcher.Filter%2A>|&quot;(objectClass = *)&quot;|  |<xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad%2A>|空的<xref:System.Collections.Specialized.StringCollection>物件 |  |<xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A>|<xref:System.DirectoryServices.SearchScope>|</xref:System.DirectoryServices.SearchScope></xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A></xref:System.Collections.Specialized.StringCollection></xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad%2A></xref:System.DirectoryServices.DirectorySearcher.Filter%2A>"
  syntax:
    content: public DirectorySearcher (System.DirectoryServices.DirectoryEntry searchRoot);
    parameters:
    - id: searchRoot
      type: System.DirectoryServices.DirectoryEntry
      description: "搜尋開始位置的 Active Directory 網域服務階層架構中的節點。 <xref:System.DirectoryServices.DirectorySearcher.SearchRoot*>屬性會初始化為這個值。</xref:System.DirectoryServices.DirectorySearcher.SearchRoot*>"
  overload: System.DirectoryServices.DirectorySearcher.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: DirectorySearcher(String)
  nameWithType: DirectorySearcher.DirectorySearcher(String)
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher(String)
  type: Constructor
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "初始化的新執行個體<xref href=&quot;System.DirectoryServices.DirectorySearcher&quot;></xref>與指定的搜尋篩選器的類別。"
  remarks: "下表顯示的初始屬性值<xref:System.DirectoryServices.DirectorySearcher>物件。</xref:System.DirectoryServices.DirectorySearcher>      |屬性 |初始值 |  |--------------|-------------------|  |<xref:System.DirectoryServices.DirectorySearcher.SearchRoot%2A>|Null 參考 (`Nothing`在 Visual Basic 中) |  |<xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad%2A>|空的<xref:System.Collections.Specialized.StringCollection>物件 |  |<xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A>|<xref:System.DirectoryServices.SearchScope>|</xref:System.DirectoryServices.SearchScope></xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A></xref:System.Collections.Specialized.StringCollection></xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad%2A></xref:System.DirectoryServices.DirectorySearcher.SearchRoot%2A>"
  syntax:
    content: public DirectorySearcher (string filter);
    parameters:
    - id: filter
      type: System.String
      description: "輕量型目錄存取通訊協定 (LDAP) 格式中的搜尋篩選字串。 <xref:System.DirectoryServices.DirectorySearcher.Filter*>屬性會初始化為這個值。</xref:System.DirectoryServices.DirectorySearcher.Filter*>"
  overload: System.DirectoryServices.DirectorySearcher.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String)
  id: '#ctor(System.DirectoryServices.DirectoryEntry,System.String)'
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: DirectorySearcher(DirectoryEntry,String)
  nameWithType: DirectorySearcher.DirectorySearcher(DirectoryEntry,String)
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher(DirectoryEntry,String)
  type: Constructor
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "初始化的新執行個體<xref href=&quot;System.DirectoryServices.DirectorySearcher&quot;></xref>與指定的搜尋根和搜尋篩選器的類別。"
  remarks: "下表顯示的初始屬性值<xref:System.DirectoryServices.DirectorySearcher>物件。</xref:System.DirectoryServices.DirectorySearcher>      |屬性 |初始值 |  |--------------|-------------------|  |<xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad%2A>|空的<xref:System.Collections.Specialized.StringCollection>物件。 |  |<xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A>|<xref:System.DirectoryServices.SearchScope>|</xref:System.DirectoryServices.SearchScope></xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A></xref:System.Collections.Specialized.StringCollection></xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad%2A>"
  syntax:
    content: public DirectorySearcher (System.DirectoryServices.DirectoryEntry searchRoot, string filter);
    parameters:
    - id: searchRoot
      type: System.DirectoryServices.DirectoryEntry
      description: "搜尋開始位置的 Active Directory 網域服務階層架構中的節點。 <xref:System.DirectoryServices.DirectorySearcher.SearchRoot*>屬性會初始化為這個值。</xref:System.DirectoryServices.DirectorySearcher.SearchRoot*>"
    - id: filter
      type: System.String
      description: "輕量型目錄存取通訊協定 (LDAP) 格式中的搜尋篩選字串。 <xref:System.DirectoryServices.DirectorySearcher.Filter*>屬性會初始化為這個值。</xref:System.DirectoryServices.DirectorySearcher.Filter*>"
  overload: System.DirectoryServices.DirectorySearcher.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.#ctor(System.String,System.String[])
  id: '#ctor(System.String,System.String[])'
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: DirectorySearcher(String,String[])
  nameWithType: DirectorySearcher.DirectorySearcher(String,String[])
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher(String,String[])
  type: Constructor
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "初始化的新執行個體<xref href=&quot;System.DirectoryServices.DirectorySearcher&quot;></xref>具有指定的搜尋篩選和要擷取屬性類別。"
  remarks: "下表顯示的初始屬性值<xref:System.DirectoryServices.DirectorySearcher>物件。</xref:System.DirectoryServices.DirectorySearcher>      |屬性 |初始值 |  |--------------|-------------------|  |<xref:System.DirectoryServices.DirectorySearcher.SearchRoot%2A>|Null 參考 (`Nothing`在 Visual Basic 中) |  |<xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A>|<xref:System.DirectoryServices.SearchScope>|</xref:System.DirectoryServices.SearchScope></xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A></xref:System.DirectoryServices.DirectorySearcher.SearchRoot%2A>"
  syntax:
    content: public DirectorySearcher (string filter, string[] propertiesToLoad);
    parameters:
    - id: filter
      type: System.String
      description: "輕量型目錄存取通訊協定 (LDAP) 格式中的搜尋篩選字串。 <xref:System.DirectoryServices.DirectorySearcher.Filter*>屬性會初始化為這個值。</xref:System.DirectoryServices.DirectorySearcher.Filter*>"
    - id: propertiesToLoad
      type: System.String[]
      description: "要在搜尋期間所擷取的屬性集。 <xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad*>屬性會初始化為這個值。</xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad*>"
  overload: System.DirectoryServices.DirectorySearcher.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String,System.String[])
  id: '#ctor(System.DirectoryServices.DirectoryEntry,System.String,System.String[])'
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: DirectorySearcher(DirectoryEntry,String,String[])
  nameWithType: DirectorySearcher.DirectorySearcher(DirectoryEntry,String,String[])
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher(DirectoryEntry,String,String[])
  type: Constructor
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "初始化的新執行個體<xref href=&quot;System.DirectoryServices.DirectorySearcher&quot;></xref>類別，其中包含指定的搜尋根搜尋篩選器中，內容以擷取資料庫..."
  remarks: "下表顯示的初始屬性值<xref:System.DirectoryServices.DirectorySearcher>物件。</xref:System.DirectoryServices.DirectorySearcher>      |屬性 |初始值 |  |--------------|-------------------|  |<xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A>|<xref:System.DirectoryServices.SearchScope>|</xref:System.DirectoryServices.SearchScope></xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A>"
  syntax:
    content: public DirectorySearcher (System.DirectoryServices.DirectoryEntry searchRoot, string filter, string[] propertiesToLoad);
    parameters:
    - id: searchRoot
      type: System.DirectoryServices.DirectoryEntry
      description: "搜尋開始位置的 Active Directory 網域服務階層架構中的節點。 <xref:System.DirectoryServices.DirectorySearcher.SearchRoot*>屬性會初始化為這個值。</xref:System.DirectoryServices.DirectorySearcher.SearchRoot*>"
    - id: filter
      type: System.String
      description: "輕量型目錄存取通訊協定 (LDAP) 格式中的搜尋篩選字串。 <xref:System.DirectoryServices.DirectorySearcher.Filter*>屬性會初始化為這個值。</xref:System.DirectoryServices.DirectorySearcher.Filter*>"
    - id: propertiesToLoad
      type: System.String[]
      description: "在搜尋期間所擷取的屬性集。 <xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad*>屬性會初始化為這個值。</xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad*>"
  overload: System.DirectoryServices.DirectorySearcher.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.#ctor(System.String,System.String[],System.DirectoryServices.SearchScope)
  id: '#ctor(System.String,System.String[],System.DirectoryServices.SearchScope)'
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: DirectorySearcher(String,String[],SearchScope)
  nameWithType: DirectorySearcher.DirectorySearcher(String,String[],SearchScope)
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher(String,String[],SearchScope)
  type: Constructor
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "初始化的新執行個體<xref href=&quot;System.DirectoryServices.DirectorySearcher&quot;></xref>類別指定的搜尋篩選器的屬性，以擷取和搜尋範圍。"
  remarks: "下表顯示的初始屬性值<xref:System.DirectoryServices.DirectorySearcher>物件。</xref:System.DirectoryServices.DirectorySearcher>      |屬性 |初始值 |  |--------------|-------------------|  |<xref:System.DirectoryServices.DirectorySearcher.SearchRoot%2A>|Null 參考 (`Nothing`在 Visual Basic 中) |</xref:System.DirectoryServices.DirectorySearcher.SearchRoot%2A>"
  syntax:
    content: public DirectorySearcher (string filter, string[] propertiesToLoad, System.DirectoryServices.SearchScope scope);
    parameters:
    - id: filter
      type: System.String
      description: "輕量型目錄存取通訊協定 (LDAP) 格式中的搜尋篩選字串。 <xref:System.DirectoryServices.DirectorySearcher.Filter*>屬性會初始化為這個值。</xref:System.DirectoryServices.DirectorySearcher.Filter*>"
    - id: propertiesToLoad
      type: System.String[]
      description: "要在搜尋期間所擷取的屬性集。 <xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad*>屬性會初始化為這個值。</xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad*>"
    - id: scope
      type: System.DirectoryServices.SearchScope
      description: "伺服器會觀察的搜尋範圍。 <xref href=&quot;System.DirectoryServices.SearchScope&quot;> </xref>屬性會初始化為這個值。"
  overload: System.DirectoryServices.DirectorySearcher.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String,System.String[],System.DirectoryServices.SearchScope)
  id: '#ctor(System.DirectoryServices.DirectoryEntry,System.String,System.String[],System.DirectoryServices.SearchScope)'
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: DirectorySearcher(DirectoryEntry,String,String[],SearchScope)
  nameWithType: DirectorySearcher.DirectorySearcher(DirectoryEntry,String,String[],SearchScope)
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher(DirectoryEntry,String,String[],SearchScope)
  type: Constructor
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "初始化的新執行個體<xref href=&quot;System.DirectoryServices.DirectorySearcher&quot;></xref>類別使用指定的搜尋根、 搜尋篩選器、 擷取和搜尋範圍的屬性。"
  syntax:
    content: public DirectorySearcher (System.DirectoryServices.DirectoryEntry searchRoot, string filter, string[] propertiesToLoad, System.DirectoryServices.SearchScope scope);
    parameters:
    - id: searchRoot
      type: System.DirectoryServices.DirectoryEntry
      description: "搜尋開始位置的 Active Directory 網域服務階層架構中的節點。 <xref:System.DirectoryServices.DirectorySearcher.SearchRoot*>屬性會初始化為這個值。</xref:System.DirectoryServices.DirectorySearcher.SearchRoot*>"
    - id: filter
      type: System.String
      description: "輕量型目錄存取通訊協定 (LDAP) 格式中的搜尋篩選字串。 <xref:System.DirectoryServices.DirectorySearcher.Filter*>屬性會初始化為這個值。</xref:System.DirectoryServices.DirectorySearcher.Filter*>"
    - id: propertiesToLoad
      type: System.String[]
      description: "要在搜尋期間所擷取的屬性集。 <xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad*>屬性會初始化為這個值。</xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad*>"
    - id: scope
      type: System.DirectoryServices.SearchScope
      description: "伺服器會觀察的搜尋範圍。 <xref href=&quot;System.DirectoryServices.SearchScope&quot;> </xref>屬性會初始化為這個值。"
  overload: System.DirectoryServices.DirectorySearcher.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.Asynchronous
  id: Asynchronous
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: Asynchronous
  nameWithType: DirectorySearcher.Asynchronous
  fullName: System.DirectoryServices.DirectorySearcher.Asynchronous
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "取得或設定值，指出以非同步方式執行搜尋。"
  remarks: "它們也同時搜尋其他結果時發現的非同步搜尋可以顯示結果。 這非常有用的工作，例如填入清單方塊。       這個屬性的預設設定`false`。"
  example:
  - "The following C# example shows how to create an asynchronous search.  \n  \n```c#  \nusing System.DirectoryServices;  \n...  \n// Bind to the users container.  \nDirectoryEntry entry = new DirectoryEntry(\"LDAP://CN=users,DC=fabrikam,DC=com\");  \n// Create a DirectorySearcher object.  \nDirectorySearcher mySearcher = new DirectorySearcher(entry);  \n//Set the Asynchronous property to true.  \nsrc.Asynchronous = true;  \n//Use the FindAll method to get search results.  \nSearchResultCollection res = src.FindAll();  \n  \n```"
  syntax:
    content: public bool Asynchronous { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果該搜尋是非同步的;<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>否則。"
  overload: System.DirectoryServices.DirectorySearcher.Asynchronous*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.AttributeScopeQuery
  id: AttributeScopeQuery
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: AttributeScopeQuery
  nameWithType: DirectorySearcher.AttributeScopeQuery
  fullName: System.DirectoryServices.DirectorySearcher.AttributeScopeQuery
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "取得或設定要搜尋的辨別的名稱屬性的 LDAP 顯示名稱。 只有一個屬性可用於此搜尋類型。"
  remarks: "這個屬性設定為屬性必須是辨別的名稱屬性，例如成員或亦。 屬性可以是單一或多重值。 如需詳細資訊，請參閱 adschema 主題&quot;[成員](http://msdn.microsoft.com/library/default.asp?url=/library/en-us/adschema/adschema/a_member.asp)&quot;和&quot;[受管理的](http://msdn.microsoft.com/library/default.asp?url=/library/en-us/adschema/adschema/a_managedby.asp)&quot;在 MSDN Library 中[http://msdn.microsoft.com/library](http://msdn.microsoft.com/library)。       搜尋會針對基底物件的屬性中指定的辨別名稱所識別的物件執行。 例如，如果基底物件是 adschema 群組類別 AttributeScopeQuery 設為 「 成員 」，則搜尋會執行群組的成員之所有物件。 如需詳細資訊，請參閱 adschema 「 群組 」 類別中的主題在 MSDN Library [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library)。       AttributeScopeQuery 屬性使用時，<xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A>屬性必須設定為<xref:System.DirectoryServices.SearchScope>.</xref:System.DirectoryServices.SearchScope> </xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A> 如果<xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A>屬性設定為任何其他值，設定 AttributeScopeQuery 屬性將會擲回<xref:System.ArgumentException>.</xref:System.ArgumentException> </xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A>       如需詳細資訊，請參閱 MSDN Library 中的 「 執行屬性範圍查詢 」 主題[http://msdn.microsoft.com/library](http://msdn.microsoft.com/library))。"
  example:
  - "The following example shows how to use the AttributeScopeQuery property with the member attribute to get the members of a group. It then prints out the first and last names of the members and their telephone numbers.  \n  \n```c#  \nusing System.DirectoryServices;  \nDirectoryEntry group = new DirectoryEntry(\"LDAP://CN=MyGroup, …\");  \nDirectorySearcher src = new DirectorySearcher(group \"(&(objectClass=user)(objectCategory=Person))\");  \nsrc.AttributeScopedQuery = \"member\";  \nsrc.PropertiesToLoad.Add(\"sn\");  \nsrc.PropertiesToLoad.Add(\"givenName\");  \nsrc.PropertiesToLoad.Add(\"telephoneNumber\");  \nforeach(SearchResult res in src.FindAll())  \n{  \n    Console.WriteLine(\"…\");  \n}  \n```"
  syntax:
    content: public string AttributeScopeQuery { get; set; }
    return:
      type: System.String
      description: "LDAP 顯示名稱的屬性來執行搜尋的目標，或設定任何屬性範圍查詢的空白字串。"
  overload: System.DirectoryServices.DirectorySearcher.AttributeScopeQuery*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<xref:System.DirectoryServices.DirectorySearcher.SearchScope*>以外屬性設定為值<xref href=&quot;System.DirectoryServices.SearchScope&quot;> </xref>。</xref:System.DirectoryServices.DirectorySearcher.SearchScope*>"
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.CacheResults
  id: CacheResults
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: CacheResults
  nameWithType: DirectorySearcher.CacheResults
  fullName: System.DirectoryServices.DirectorySearcher.CacheResults
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "取得或設定值，指出是否結果會快取在用戶端電腦上。"
  remarks: "如果搜尋會傳回大型結果集，搜尋將會更有效率，如果這個屬性設定為`false`若要避免將結果集的用戶端電腦的傳輸。  如果您這樣做，不過，您將無法列舉結果兩次，因為<xref:System.DirectoryServices.SearchResultCollection>物件就會建立新的列舉值物件，每次呼叫時。</xref:System.DirectoryServices.SearchResultCollection>"
  syntax:
    content: public bool CacheResults { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果結果為用戶端電腦上快取，否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.DirectoryServices.DirectorySearcher.CacheResults*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.ClientTimeout
  id: ClientTimeout
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: ClientTimeout
  nameWithType: DirectorySearcher.ClientTimeout
  fullName: System.DirectoryServices.DirectorySearcher.ClientTimeout
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "取得或設定用戶端等待伺服器傳回結果的時間的最大數量。 如果伺服器沒有回應此時間內，搜尋就會中止，並會傳回任何結果。"
  remarks: "這個屬性的最小解析為一秒。 秒數片段都會被忽略。       如果<xref:System.DirectoryServices.DirectorySearcher.ServerTimeLimit%2A>之前用戶端逾時，伺服器會傳回其結果，而且用戶端停止等候，便到達。</xref:System.DirectoryServices.DirectorySearcher.ServerTimeLimit%2A> 最大伺服器時間限制為 120 秒。"
  syntax:
    content: public TimeSpan ClientTimeout { get; set; }
    return:
      type: System.TimeSpan
      description: "A<xref:System.TimeSpan>結構，其中包含最大用戶端等待伺服器傳回結果的時間量。</xref:System.TimeSpan>       預設值是-1 秒，表示無限期地等待。"
  overload: System.DirectoryServices.DirectorySearcher.ClientTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.DerefAlias
  id: DerefAlias
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: DerefAlias
  nameWithType: DirectorySearcher.DerefAlias
  fullName: System.DirectoryServices.DirectorySearcher.DerefAlias
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "取得或設定值，指出應如何解決在搜尋期間找到的物件的別名。"
  remarks: ''
  example:
  - "The following C# example shows how to set the DerefAlias property to <xref:System.DirectoryServices.DereferenceAlias> , so that it dereferences aliases when both searching subordinates and locating base objects.  \n  \n```  \nusing System.DirectoryServices;  \n...  \n// Bind to the users container.  \nDirectoryEntry entry = new DirectoryEntry(\"LDAP://CN=users,DC=fabrikam,DC=com\");  \n// Create a DirectorySearcher object.  \nDirectorySearcher mySearcher = new DirectorySearcher(entry);  \n// Set DerefAlias to Always.  \nsrc.DerefAlias = DerefenceAlias.Always;  \n//Use the FindAll method to get search results.  \nSearchResultCollection res = src.FindAll();  \n  \n```"
  syntax:
    content: public System.DirectoryServices.DereferenceAlias DerefAlias { get; set; }
    return:
      type: System.DirectoryServices.DereferenceAlias
      description: "A <xref href=&quot;System.DirectoryServices.DereferenceAlias&quot;> </xref>值，指定別名有取值的行為。 這個屬性的預設設定<xref href=&quot;System.DirectoryServices.DereferenceAlias&quot;> </xref>。"
  overload: System.DirectoryServices.DirectorySearcher.DerefAlias*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.DirectorySynchronization
  id: DirectorySynchronization
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: DirectorySynchronization
  nameWithType: DirectorySearcher.DirectorySynchronization
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySynchronization
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "取得或設定物件，代表要用於搜尋的目錄同步處理控制項。"
  remarks: "目錄同步處理控制，通常稱為 DirSync 控制，是因為先前的狀態已變更的物件用來搜尋 LDAP 控制項。       如需詳細資訊，請參閱本主題 「[輪詢變更使用 DirSync 控制](http://msdn.microsoft.com/library/default.asp?url=/library/en-us/ad/ad/polling_for_changes_using_the_dirsync_control.asp)&quot;在 MSDN Library 中[http://msdn.microsoft.com/library](http://msdn.microsoft.com/library)。"
  syntax:
    content: public System.DirectoryServices.DirectorySynchronization DirectorySynchronization { get; set; }
    return:
      type: System.DirectoryServices.DirectorySynchronization
      description: "<xref href=&quot;System.DirectoryServices.DirectorySynchronization&quot;> </xref>搜尋的物件。 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果不應該使用目錄同步處理控制項。"
  overload: System.DirectoryServices.DirectorySearcher.DirectorySynchronization*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: DirectorySearcher.Dispose(Boolean)
  fullName: System.DirectoryServices.DirectorySearcher.Dispose(Boolean)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "釋放 managed 的資源，可供<xref href=&quot;System.DirectoryServices.DirectorySearcher&quot;></xref>物件，並選擇性地釋放 unmanaged 資源。"
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果這個方法會釋放 managed 和 unmanaged 資源;，<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>如果它僅會釋放 unmanaged 的資源。"
  overload: System.DirectoryServices.DirectorySearcher.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.ExtendedDN
  id: ExtendedDN
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: ExtendedDN
  nameWithType: DirectorySearcher.ExtendedDN
  fullName: System.DirectoryServices.DirectorySearcher.ExtendedDN
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "取得或設定值，指出辨別名稱的格式。"
  remarks: ''
  example:
  - "The following example shows how to return a collection of distinguished names in hexadecimal format.  \n  \n```c#  \nusing System.DirectoryServices;  \n...  \nDirectorySearcher src = new DirectorySearcher(\"…\");  \nsrc.PropertiesToLoad = new string[] {ntSecurityDescriptor,…};  \nsrc.ExtendedDN = ExtendedDN.HexString;  \nSearchResultCollection res = src.FindAll();  \n  \n```"
  syntax:
    content: public System.DirectoryServices.ExtendedDN ExtendedDN { get; set; }
    return:
      type: System.DirectoryServices.ExtendedDN
      description: "其中一個<xref href=&quot;System.DirectoryServices.ExtendedDN&quot;></xref>值。"
  overload: System.DirectoryServices.DirectorySearcher.ExtendedDN*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.Filter
  id: Filter
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: Filter
  nameWithType: DirectorySearcher.Filter
  fullName: System.DirectoryServices.DirectorySearcher.Filter
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "取得或設定值，指出輕量型目錄存取通訊協定 (LDAP) 格式的篩選條件字串。"
  remarks: "The filter uses the following guidelines:  \n  \n1.  The string must be enclosed in parentheses.  \n  \n2.  Expressions can use the relational operators: <, \\<=, =, >=, and >. An example is \"(objectClass=user)\". Another example is \"(lastName>=Davis)\".  \n  \n3.  Compound expressions are formed with the prefix operators & and &#124;. An example is \"(&(objectClass=user)(lastName= Davis))\". Another example is \"(&(objectClass=printer)(&#124;(building=42)(building=43)))\".  \n  \n When the filter contains an attribute of ADS_UTC_TIME type, its value must be of the yyyymmddhhmmssZ format where y, m, d, h, m, and s stand for year, month, day, hour, minute, and second, respectively. The seconds (ss) value is optional. The final letter Z means there is no time differential. In this format, \"10:20:00 A.M. May 13, 1999\" becomes \"19990513102000Z\". Note that Active Directory Domain Services stores date and time as Coordinated Universal Time (Greenwich Mean Time). If you specify a time with no time differential, you are specifying the time in GMT time.  \n  \n If you are not in the Coordinated Universal Time time zone, you can add a differential value to the Coordinated Universal Time (instead of specifying Z) to specify a time according to your time zone. The differential is based on the following: differential = Coordinated Universal Time- Local. To specify a differential, use the following format: yyyymmddhhmmss[+/-]hhmm. For example, \"8:52:58 P.M. March 23, 1999\" New Zealand Standard Time (the differential is 12 hours) is specified as \"19990323205258.0+1200\".  \n  \n For more information about the LDAP search string format, see \"Search Filter Syntax\" in the MSDN Library at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library)."
  syntax:
    content: public string Filter { get; set; }
    return:
      type: System.String
      description: "在 LDAP 搜尋篩選字串格式，例如&quot;(objectClass=user)&quot;。 預設值是&quot;(objectClass=*)&quot;，這會擷取所有物件。"
  overload: System.DirectoryServices.DirectorySearcher.Filter*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.FindAll
  id: FindAll
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: FindAll()
  nameWithType: DirectorySearcher.FindAll()
  fullName: System.DirectoryServices.DirectorySearcher.FindAll()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "執行搜尋，並傳回所找到的項目集合。"
  remarks: "因為實作限制<xref:System.DirectoryServices.SearchResultCollection>類別無法釋放其所有 unmanaged 資源時回收。</xref:System.DirectoryServices.SearchResultCollection> 若要避免記憶體流失，您必須呼叫<xref:System.DirectoryServices.SearchResultCollection.Dispose%2A>方法時<xref:System.DirectoryServices.SearchResultCollection>物件已不再需要。</xref:System.DirectoryServices.SearchResultCollection> </xref:System.DirectoryServices.SearchResultCollection.Dispose%2A>"
  syntax:
    content: public System.DirectoryServices.SearchResultCollection FindAll ();
    parameters: []
    return:
      type: System.DirectoryServices.SearchResultCollection
      description: "A <xref href=&quot;System.DirectoryServices.SearchResultCollection&quot;> </xref>物件，包含搜尋結果。"
  overload: System.DirectoryServices.DirectorySearcher.FindAll*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "指定<xref href=&quot;System.DirectoryServices.DirectoryEntry&quot;></xref>不是一個容器。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "正在使用的提供者不支援搜尋。"
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.FindOne
  id: FindOne
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: FindOne()
  nameWithType: DirectorySearcher.FindOne()
  fullName: System.DirectoryServices.DirectorySearcher.FindOne()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "執行搜尋，並傳回的第一個項目找到。"
  remarks: "如果在搜尋期間找到多個項目，則會傳回第一個項目。 如果發現任何項目符合搜尋條件，為 null 參考 (`Nothing`在 Visual Basic 中) 會傳回。"
  syntax:
    content: public System.DirectoryServices.SearchResult FindOne ();
    parameters: []
    return:
      type: System.DirectoryServices.SearchResult
      description: "A <xref href=&quot;System.DirectoryServices.SearchResult&quot;> </xref>物件，其中包含在搜尋中找到的第一個項目。"
  overload: System.DirectoryServices.DirectorySearcher.FindOne*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.PageSize
  id: PageSize
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: PageSize
  nameWithType: DirectorySearcher.PageSize
  fullName: System.DirectoryServices.DirectorySearcher.PageSize
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "取得或設定值，指出分頁搜尋中的頁面大小。"
  remarks: "伺服器找到的 PageSize 屬性所指定的物件數目後，它將會停止搜尋，並將結果傳回至用戶端。 當用戶端要求更多資料時，伺服器會重新啟動中斷的位置搜尋。"
  syntax:
    content: public int PageSize { get; set; }
    return:
      type: System.Int32
      description: "伺服器可以分頁搜尋中傳回的物件數目上限。 預設值為零，表示不會執行分頁的搜尋。"
  overload: System.DirectoryServices.DirectorySearcher.PageSize*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "新的值小於零。"
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.PropertiesToLoad
  id: PropertiesToLoad
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: PropertiesToLoad
  nameWithType: DirectorySearcher.PropertiesToLoad
  fullName: System.DirectoryServices.DirectorySearcher.PropertiesToLoad
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "取得值，指出要在搜尋期間所擷取的屬性清單。"
  remarks: "若要擷取特定的屬性，將其加入至這個集合之前開始搜尋。 例如，`searcher.PropertiesToLoad.Add(&quot;phone&quot;);`將電話屬性加入要在搜尋中所擷取的屬性清單。       在搜尋期間一律擷取屬性&quot;ADsPath&quot;。 在[!INCLUDE[Win2kFamily](~/add/includes/win2kfamily-md.md)]和舊版作業系統，執行搜尋的帳戶必須是 Administrators 群組，以擷取 ntSecurityDescriptor 屬性的成員。 如果這不是大小寫，就會傳回 ntSecurityDescriptor 屬性值會`null`。 如需詳細資訊，請參閱本主題 「 NT-安全性-描述元 」 MSDN Library 中，在[http://msdn.microsoft.com/library](http://msdn.microsoft.com/library)。"
  syntax:
    content: public System.Collections.Specialized.StringCollection PropertiesToLoad { get; }
    return:
      type: System.Collections.Specialized.StringCollection
      description: "A <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>物件，其中包含要在搜尋期間所擷取的屬性集。       預設為空<xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>，這會擷取所有的屬性。"
  overload: System.DirectoryServices.DirectorySearcher.PropertiesToLoad*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.PropertyNamesOnly
  id: PropertyNamesOnly
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: PropertyNamesOnly
  nameWithType: DirectorySearcher.PropertyNamesOnly
  fullName: System.DirectoryServices.DirectorySearcher.PropertyNamesOnly
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "取得或設定值，指出搜尋是否擷取的值已指派給的屬性的名稱。"
  syntax:
    content: public bool PropertyNamesOnly { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果搜尋會取得已指派值給; 屬性的名稱<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>如果搜尋取得的名稱和值的所有要求的屬性。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.DirectoryServices.DirectorySearcher.PropertyNamesOnly*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.ReferralChasing
  id: ReferralChasing
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: ReferralChasing
  nameWithType: DirectorySearcher.ReferralChasing
  fullName: System.DirectoryServices.DirectorySearcher.ReferralChasing
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "取得或設定值，指出如何搜尋轉介。"
  remarks: "如果伺服器的命名內容中沒有指定根搜尋，或當搜尋結果十字形狀 （例如，當您擁有的子網域搜尋父系網域中） 的命名內容，伺服器就會傳送參考訊息給用戶端可以用戶端忽略或搜尋。"
  syntax:
    content: public System.DirectoryServices.ReferralChasingOption ReferralChasing { get; set; }
    return:
      type: System.DirectoryServices.ReferralChasingOption
      description: "其中一個<xref href=&quot;System.DirectoryServices.ReferralChasingOption&quot;></xref>值。 預設值是<xref href=&quot;System.DirectoryServices.ReferralChasingOption&quot;> </xref>。"
  overload: System.DirectoryServices.DirectorySearcher.ReferralChasing*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "值不是其中一個<xref href=&quot;System.DirectoryServices.ReferralChasingOption&quot;></xref>值。"
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.SearchRoot
  id: SearchRoot
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: SearchRoot
  nameWithType: DirectorySearcher.SearchRoot
  fullName: System.DirectoryServices.DirectorySearcher.SearchRoot
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "取得或設定值，指出 Active Directory 網域服務階層中的節點開始搜尋。"
  remarks: "如果 SearchRoot 為 null 參考 (`Nothing`在 Visual Basic 中)，搜尋根目錄設定為您的伺服器目前使用之網域的根目錄。       有數種方式可在通用類別目錄搜尋:-列舉通用類別目錄，並挑選第一個子系。      -指定伺服器名稱。 若要尋找通用類別目錄使用 DsGetDcName 函式。  DsGetDcName 函式的詳細資訊，請參閱主題&quot;DsGetDcName 」，在 MSDN Library 中[http://msdn.microsoft.com/library](http://msdn.microsoft.com/library)。      -取得 RootDSE 通用類別目錄，並詢問 「 rootNamingContext&quot;。      -使用指定的搜尋路徑，如同使用 LDAP 的通用類別目錄。 例如，&quot;GC: / / OU =...，DC =...，DC =...&quot;。      -下列 C# 程式碼會示範如何列舉通用類別目錄，並挑選第一個子系。          ```c#       DirectoryEntry entry = new DirectoryEntry(&quot;GC://forestname&quot;);       IEnumerator ie = entry.Children.GetEnumerator();       ie.MoveNext();       entry = (DirectoryEntry)ie.Current;       DirectorySearcher search = new DirectorySearcher(entry);       ```"
  syntax:
    content: public System.DirectoryServices.DirectoryEntry SearchRoot { get; set; }
    return:
      type: System.DirectoryServices.DirectoryEntry
      description: "<xref href=&quot;System.DirectoryServices.DirectoryEntry&quot;> </xref>搜尋開始位置的 Active Directory 網域服務階層中的物件。 預設值是 null 參考 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>在 Visual Basic 中)。"
  overload: System.DirectoryServices.DirectorySearcher.SearchRoot*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.SearchScope
  id: SearchScope
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: SearchScope
  nameWithType: DirectorySearcher.SearchScope
  fullName: System.DirectoryServices.DirectorySearcher.SearchScope
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "取得或設定值，指出伺服器所觀察到的搜尋範圍。"
  syntax:
    content: public System.DirectoryServices.SearchScope SearchScope { get; set; }
    return:
      type: System.DirectoryServices.SearchScope
      description: "其中一個<xref href=&quot;System.DirectoryServices.SearchScope&quot;></xref>值。 預設值是<xref href=&quot;System.DirectoryServices.SearchScope&quot;> </xref>。"
  overload: System.DirectoryServices.DirectorySearcher.SearchScope*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "值不是其中一個<xref href=&quot;System.DirectoryServices.ReferralChasingOption&quot;></xref>值。"
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.SecurityMasks
  id: SecurityMasks
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: SecurityMasks
  nameWithType: DirectorySearcher.SecurityMasks
  fullName: System.DirectoryServices.DirectorySearcher.SecurityMasks
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "取得或設定值，指出應該搜尋傳回的指定屬性的哪一個安全性存取資訊。"
  remarks: ''
  example:
  - "```c#  \nusing System.DirectoryServices;  \n...  \nDirectorySearcher src = new DirectorySearcher(\"…\");  \nsrc.PropertiesToLoad = new string[] {ntSecurityDescriptor,…};  \nsrc.SecurityMasks = SecurityMasks.Dacl | SecurityMasks.Owner;  \nSearchResultCollection res = src.FindAll();  \n  \n```"
  syntax:
    content: public System.DirectoryServices.SecurityMasks SecurityMasks { get; set; }
    return:
      type: System.DirectoryServices.SecurityMasks
      description: "其中一個<xref href=&quot;System.DirectoryServices.SecurityMasks&quot;></xref>值。"
  overload: System.DirectoryServices.DirectorySearcher.SecurityMasks*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.ServerPageTimeLimit
  id: ServerPageTimeLimit
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: ServerPageTimeLimit
  nameWithType: DirectorySearcher.ServerPageTimeLimit
  fullName: System.DirectoryServices.DirectorySearcher.ServerPageTimeLimit
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "取得或設定值，指出最大伺服器應該搜尋的結果的個別頁面的時間量。 這不是時間限制，對於整個搜尋相同。"
  remarks: "這個屬性的最小解析為一秒。 秒數片段都會被忽略。       當達到時間限制時，伺服器會停止搜尋，並傳回累積的結果有最多的點，以及包含有關哪裡繼續搜尋資訊的 cookie。      > [!NOTE] > 這個屬性只適用於搜尋其中<xref:System.DirectoryServices.DirectorySearcher.PageSize%2A>設為不是預設值為-1 的值。</xref:System.DirectoryServices.DirectorySearcher.PageSize%2A>"
  syntax:
    content: public TimeSpan ServerPageTimeLimit { get; set; }
    return:
      type: System.TimeSpan
      description: "A<xref:System.TimeSpan>表示的時間伺服器應該搜尋的結果頁面。</xref:System.TimeSpan>       預設值為-1 秒，表示無限期地搜尋。"
  overload: System.DirectoryServices.DirectorySearcher.ServerPageTimeLimit*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.ServerTimeLimit
  id: ServerTimeLimit
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: ServerTimeLimit
  nameWithType: DirectorySearcher.ServerTimeLimit
  fullName: System.DirectoryServices.DirectorySearcher.ServerTimeLimit
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "屬性會取得或設定值，指出最大時間量伺服器 ServerTimeLimit 花搜尋。 如果達到時間限制時，會傳回只包含項目最多所找到的點。"
  remarks: "這個屬性的最小解析為一秒。 秒數片段都會被忽略。       不同於<xref:System.DirectoryServices.DirectorySearcher.ServerPageTimeLimit%2A>屬性，ServerTimeLimit 屬性會指出上搜尋的伺服器將會花費的時間總數量。</xref:System.DirectoryServices.DirectorySearcher.ServerPageTimeLimit%2A> 當達到時間限制時，伺服器會停止搜尋，並傳回具有為止所累積的結果。       ServerTimeLimit 設為-1 秒，使用由伺服器決定預設值。      > [!NOTE] > 如果 ServerTimeLimit 設為大於伺服器決定預設值為 120 秒的值時，會使用由伺服器決定預設值。 達到伺服器時間限制之後，您無法繼續搜尋，以從中斷的位置。"
  syntax:
    content: public TimeSpan ServerTimeLimit { get; set; }
    return:
      type: System.TimeSpan
      description: "A<xref:System.TimeSpan>代表的伺服器應該搜尋的時間量。</xref:System.TimeSpan>       預設值為-1 秒，表示要使用由伺服器決定預設值為 120 秒。"
  overload: System.DirectoryServices.DirectorySearcher.ServerTimeLimit*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.SizeLimit
  id: SizeLimit
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: SizeLimit
  nameWithType: DirectorySearcher.SizeLimit
  fullName: System.DirectoryServices.DirectorySearcher.SizeLimit
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "取得或設定值，指出伺服器在搜尋中傳回的物件數目上限。"
  remarks: "搜尋後的大小上限為止，並傳回結果時，伺服器會停止累積到該點為止。      > [!NOTE] > 如果 SizeLimit 設值超過 1000 個項目由伺服器決定預設值，這個值時，會使用由伺服器決定預設值。"
  syntax:
    content: public int SizeLimit { get; set; }
    return:
      type: System.Int32
      description: "伺服器會在搜尋中傳回的物件數目上限。 預設值是零，表示要使用由伺服器決定預設的大小限制的 1000 個項目。"
  overload: System.DirectoryServices.DirectorySearcher.SizeLimit*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "新的值小於零。"
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.Sort
  id: Sort
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: Sort
  nameWithType: DirectorySearcher.Sort
  fullName: System.DirectoryServices.DirectorySearcher.Sort
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "取得或設定值，指出結果會先後排序的屬性。"
  syntax:
    content: public System.DirectoryServices.SortOption Sort { get; set; }
    return:
      type: System.DirectoryServices.SortOption
      description: "A <xref href=&quot;System.DirectoryServices.SortOption&quot;> </xref>物件，指定的屬性和搜尋結果應該以排序的方向。"
  overload: System.DirectoryServices.DirectorySearcher.Sort*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "屬性值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> （在 Visual Basic)。"
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.Tombstone
  id: Tombstone
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: Tombstone
  nameWithType: DirectorySearcher.Tombstone
  fullName: System.DirectoryServices.DirectorySearcher.Tombstone
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "取得或設定值，指出搜尋是否應該也傳回符合搜尋篩選器的刪除物件。"
  remarks: ''
  example:
  - "The following C# example shows how to set the Tombstone property to `true`.  \n  \n```c#  \nusing System.DirectoryServices;  \n...  \n// Create a DirectorySearcher object.  \nDirectorySearcher src = new DirectorySearcher(\"(isDeleted=true)\");  \n//Set the Tombstone property to true.  \nsrc.Tombstone = true;  \n//Use the FindAll method to get search results.  \nSearchResultCollection res = src.FindAll();  \n  \n```"
  syntax:
    content: public bool Tombstone { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果已刪除的物件應該要包含在搜尋中。<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>否則。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.DirectoryServices.DirectorySearcher.Tombstone*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.VirtualListView
  id: VirtualListView
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: VirtualListView
  nameWithType: DirectorySearcher.VirtualListView
  fullName: System.DirectoryServices.DirectorySearcher.VirtualListView
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "取得或設定值，指出虛擬清單檢視選項搜尋。"
  syntax:
    content: public System.DirectoryServices.DirectoryVirtualListView VirtualListView { get; set; }
    return:
      type: System.DirectoryServices.DirectoryVirtualListView
      description: "A <xref href=&quot;System.DirectoryServices.DirectoryVirtualListView&quot;> </xref>包含虛擬清單檢視搜尋資訊的物件。 這個屬性的預設值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>，這表示不會使用虛擬清單檢視搜尋選項。"
  overload: System.DirectoryServices.DirectorySearcher.VirtualListView*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.Component
  isExternal: false
  name: System.ComponentModel.Component
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ComponentModel.InvalidEnumArgumentException
  parent: System.ComponentModel
  isExternal: false
  name: InvalidEnumArgumentException
  nameWithType: InvalidEnumArgumentException
  fullName: System.ComponentModel.InvalidEnumArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.DirectoryServices.DirectorySearcher.#ctor
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: DirectorySearcher()
  nameWithType: DirectorySearcher.DirectorySearcher()
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher()
- uid: System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry)
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: DirectorySearcher(DirectoryEntry)
  nameWithType: DirectorySearcher.DirectorySearcher(DirectoryEntry)
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher(DirectoryEntry)
- uid: System.DirectoryServices.DirectoryEntry
  parent: System.DirectoryServices
  isExternal: false
  name: DirectoryEntry
  nameWithType: DirectoryEntry
  fullName: System.DirectoryServices.DirectoryEntry
- uid: System.DirectoryServices.DirectorySearcher.#ctor(System.String)
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: DirectorySearcher(String)
  nameWithType: DirectorySearcher.DirectorySearcher(String)
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String)
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: DirectorySearcher(DirectoryEntry,String)
  nameWithType: DirectorySearcher.DirectorySearcher(DirectoryEntry,String)
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher(DirectoryEntry,String)
- uid: System.DirectoryServices.DirectorySearcher.#ctor(System.String,System.String[])
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: DirectorySearcher(String,String[])
  nameWithType: DirectorySearcher.DirectorySearcher(String,String[])
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher(String,String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String,System.String[])
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: DirectorySearcher(DirectoryEntry,String,String[])
  nameWithType: DirectorySearcher.DirectorySearcher(DirectoryEntry,String,String[])
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher(DirectoryEntry,String,String[])
- uid: System.DirectoryServices.DirectorySearcher.#ctor(System.String,System.String[],System.DirectoryServices.SearchScope)
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: DirectorySearcher(String,String[],SearchScope)
  nameWithType: DirectorySearcher.DirectorySearcher(String,String[],SearchScope)
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher(String,String[],SearchScope)
- uid: System.DirectoryServices.SearchScope
  parent: System.DirectoryServices
  isExternal: false
  name: SearchScope
  nameWithType: SearchScope
  fullName: System.DirectoryServices.SearchScope
- uid: System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String,System.String[],System.DirectoryServices.SearchScope)
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: DirectorySearcher(DirectoryEntry,String,String[],SearchScope)
  nameWithType: DirectorySearcher.DirectorySearcher(DirectoryEntry,String,String[],SearchScope)
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher(DirectoryEntry,String,String[],SearchScope)
- uid: System.DirectoryServices.DirectorySearcher.Asynchronous
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: Asynchronous
  nameWithType: DirectorySearcher.Asynchronous
  fullName: System.DirectoryServices.DirectorySearcher.Asynchronous
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.DirectoryServices.DirectorySearcher.AttributeScopeQuery
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: AttributeScopeQuery
  nameWithType: DirectorySearcher.AttributeScopeQuery
  fullName: System.DirectoryServices.DirectorySearcher.AttributeScopeQuery
- uid: System.DirectoryServices.DirectorySearcher.CacheResults
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: CacheResults
  nameWithType: DirectorySearcher.CacheResults
  fullName: System.DirectoryServices.DirectorySearcher.CacheResults
- uid: System.DirectoryServices.DirectorySearcher.ClientTimeout
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: ClientTimeout
  nameWithType: DirectorySearcher.ClientTimeout
  fullName: System.DirectoryServices.DirectorySearcher.ClientTimeout
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.DirectoryServices.DirectorySearcher.DerefAlias
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: DerefAlias
  nameWithType: DirectorySearcher.DerefAlias
  fullName: System.DirectoryServices.DirectorySearcher.DerefAlias
- uid: System.DirectoryServices.DereferenceAlias
  parent: System.DirectoryServices
  isExternal: false
  name: DereferenceAlias
  nameWithType: DereferenceAlias
  fullName: System.DirectoryServices.DereferenceAlias
- uid: System.DirectoryServices.DirectorySearcher.DirectorySynchronization
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: DirectorySynchronization
  nameWithType: DirectorySearcher.DirectorySynchronization
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySynchronization
- uid: System.DirectoryServices.DirectorySynchronization
  parent: System.DirectoryServices
  isExternal: false
  name: DirectorySynchronization
  nameWithType: DirectorySynchronization
  fullName: System.DirectoryServices.DirectorySynchronization
- uid: System.DirectoryServices.DirectorySearcher.Dispose(System.Boolean)
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: DirectorySearcher.Dispose(Boolean)
  fullName: System.DirectoryServices.DirectorySearcher.Dispose(Boolean)
- uid: System.DirectoryServices.DirectorySearcher.ExtendedDN
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: ExtendedDN
  nameWithType: DirectorySearcher.ExtendedDN
  fullName: System.DirectoryServices.DirectorySearcher.ExtendedDN
- uid: System.DirectoryServices.ExtendedDN
  parent: System.DirectoryServices
  isExternal: false
  name: ExtendedDN
  nameWithType: ExtendedDN
  fullName: System.DirectoryServices.ExtendedDN
- uid: System.DirectoryServices.DirectorySearcher.Filter
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: Filter
  nameWithType: DirectorySearcher.Filter
  fullName: System.DirectoryServices.DirectorySearcher.Filter
- uid: System.DirectoryServices.DirectorySearcher.FindAll
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: FindAll()
  nameWithType: DirectorySearcher.FindAll()
  fullName: System.DirectoryServices.DirectorySearcher.FindAll()
- uid: System.DirectoryServices.SearchResultCollection
  parent: System.DirectoryServices
  isExternal: false
  name: SearchResultCollection
  nameWithType: SearchResultCollection
  fullName: System.DirectoryServices.SearchResultCollection
- uid: System.DirectoryServices.DirectorySearcher.FindOne
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: FindOne()
  nameWithType: DirectorySearcher.FindOne()
  fullName: System.DirectoryServices.DirectorySearcher.FindOne()
- uid: System.DirectoryServices.SearchResult
  parent: System.DirectoryServices
  isExternal: false
  name: SearchResult
  nameWithType: SearchResult
  fullName: System.DirectoryServices.SearchResult
- uid: System.DirectoryServices.DirectorySearcher.PageSize
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: PageSize
  nameWithType: DirectorySearcher.PageSize
  fullName: System.DirectoryServices.DirectorySearcher.PageSize
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.DirectoryServices.DirectorySearcher.PropertiesToLoad
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: PropertiesToLoad
  nameWithType: DirectorySearcher.PropertiesToLoad
  fullName: System.DirectoryServices.DirectorySearcher.PropertiesToLoad
- uid: System.Collections.Specialized.StringCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: StringCollection
  nameWithType: StringCollection
  fullName: System.Collections.Specialized.StringCollection
- uid: System.DirectoryServices.DirectorySearcher.PropertyNamesOnly
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: PropertyNamesOnly
  nameWithType: DirectorySearcher.PropertyNamesOnly
  fullName: System.DirectoryServices.DirectorySearcher.PropertyNamesOnly
- uid: System.DirectoryServices.DirectorySearcher.ReferralChasing
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: ReferralChasing
  nameWithType: DirectorySearcher.ReferralChasing
  fullName: System.DirectoryServices.DirectorySearcher.ReferralChasing
- uid: System.DirectoryServices.ReferralChasingOption
  parent: System.DirectoryServices
  isExternal: false
  name: ReferralChasingOption
  nameWithType: ReferralChasingOption
  fullName: System.DirectoryServices.ReferralChasingOption
- uid: System.DirectoryServices.DirectorySearcher.SearchRoot
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: SearchRoot
  nameWithType: DirectorySearcher.SearchRoot
  fullName: System.DirectoryServices.DirectorySearcher.SearchRoot
- uid: System.DirectoryServices.DirectorySearcher.SearchScope
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: SearchScope
  nameWithType: DirectorySearcher.SearchScope
  fullName: System.DirectoryServices.DirectorySearcher.SearchScope
- uid: System.DirectoryServices.DirectorySearcher.SecurityMasks
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: SecurityMasks
  nameWithType: DirectorySearcher.SecurityMasks
  fullName: System.DirectoryServices.DirectorySearcher.SecurityMasks
- uid: System.DirectoryServices.SecurityMasks
  parent: System.DirectoryServices
  isExternal: false
  name: SecurityMasks
  nameWithType: SecurityMasks
  fullName: System.DirectoryServices.SecurityMasks
- uid: System.DirectoryServices.DirectorySearcher.ServerPageTimeLimit
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: ServerPageTimeLimit
  nameWithType: DirectorySearcher.ServerPageTimeLimit
  fullName: System.DirectoryServices.DirectorySearcher.ServerPageTimeLimit
- uid: System.DirectoryServices.DirectorySearcher.ServerTimeLimit
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: ServerTimeLimit
  nameWithType: DirectorySearcher.ServerTimeLimit
  fullName: System.DirectoryServices.DirectorySearcher.ServerTimeLimit
- uid: System.DirectoryServices.DirectorySearcher.SizeLimit
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: SizeLimit
  nameWithType: DirectorySearcher.SizeLimit
  fullName: System.DirectoryServices.DirectorySearcher.SizeLimit
- uid: System.DirectoryServices.DirectorySearcher.Sort
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: Sort
  nameWithType: DirectorySearcher.Sort
  fullName: System.DirectoryServices.DirectorySearcher.Sort
- uid: System.DirectoryServices.SortOption
  parent: System.DirectoryServices
  isExternal: false
  name: SortOption
  nameWithType: SortOption
  fullName: System.DirectoryServices.SortOption
- uid: System.DirectoryServices.DirectorySearcher.Tombstone
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: Tombstone
  nameWithType: DirectorySearcher.Tombstone
  fullName: System.DirectoryServices.DirectorySearcher.Tombstone
- uid: System.DirectoryServices.DirectorySearcher.VirtualListView
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: VirtualListView
  nameWithType: DirectorySearcher.VirtualListView
  fullName: System.DirectoryServices.DirectorySearcher.VirtualListView
- uid: System.DirectoryServices.DirectoryVirtualListView
  parent: System.DirectoryServices
  isExternal: false
  name: DirectoryVirtualListView
  nameWithType: DirectoryVirtualListView
  fullName: System.DirectoryServices.DirectoryVirtualListView
- uid: System.DirectoryServices.DirectorySearcher.#ctor*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: DirectorySearcher
  nameWithType: DirectorySearcher.DirectorySearcher
- uid: System.DirectoryServices.DirectorySearcher.Asynchronous*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: Asynchronous
  nameWithType: DirectorySearcher.Asynchronous
- uid: System.DirectoryServices.DirectorySearcher.AttributeScopeQuery*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: AttributeScopeQuery
  nameWithType: DirectorySearcher.AttributeScopeQuery
- uid: System.DirectoryServices.DirectorySearcher.CacheResults*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: CacheResults
  nameWithType: DirectorySearcher.CacheResults
- uid: System.DirectoryServices.DirectorySearcher.ClientTimeout*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: ClientTimeout
  nameWithType: DirectorySearcher.ClientTimeout
- uid: System.DirectoryServices.DirectorySearcher.DerefAlias*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: DerefAlias
  nameWithType: DirectorySearcher.DerefAlias
- uid: System.DirectoryServices.DirectorySearcher.DirectorySynchronization*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: DirectorySynchronization
  nameWithType: DirectorySearcher.DirectorySynchronization
- uid: System.DirectoryServices.DirectorySearcher.Dispose*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: Dispose
  nameWithType: DirectorySearcher.Dispose
- uid: System.DirectoryServices.DirectorySearcher.ExtendedDN*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: ExtendedDN
  nameWithType: DirectorySearcher.ExtendedDN
- uid: System.DirectoryServices.DirectorySearcher.Filter*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: Filter
  nameWithType: DirectorySearcher.Filter
- uid: System.DirectoryServices.DirectorySearcher.FindAll*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: FindAll
  nameWithType: DirectorySearcher.FindAll
- uid: System.DirectoryServices.DirectorySearcher.FindOne*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: FindOne
  nameWithType: DirectorySearcher.FindOne
- uid: System.DirectoryServices.DirectorySearcher.PageSize*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: PageSize
  nameWithType: DirectorySearcher.PageSize
- uid: System.DirectoryServices.DirectorySearcher.PropertiesToLoad*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: PropertiesToLoad
  nameWithType: DirectorySearcher.PropertiesToLoad
- uid: System.DirectoryServices.DirectorySearcher.PropertyNamesOnly*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: PropertyNamesOnly
  nameWithType: DirectorySearcher.PropertyNamesOnly
- uid: System.DirectoryServices.DirectorySearcher.ReferralChasing*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: ReferralChasing
  nameWithType: DirectorySearcher.ReferralChasing
- uid: System.DirectoryServices.DirectorySearcher.SearchRoot*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: SearchRoot
  nameWithType: DirectorySearcher.SearchRoot
- uid: System.DirectoryServices.DirectorySearcher.SearchScope*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: SearchScope
  nameWithType: DirectorySearcher.SearchScope
- uid: System.DirectoryServices.DirectorySearcher.SecurityMasks*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: SecurityMasks
  nameWithType: DirectorySearcher.SecurityMasks
- uid: System.DirectoryServices.DirectorySearcher.ServerPageTimeLimit*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: ServerPageTimeLimit
  nameWithType: DirectorySearcher.ServerPageTimeLimit
- uid: System.DirectoryServices.DirectorySearcher.ServerTimeLimit*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: ServerTimeLimit
  nameWithType: DirectorySearcher.ServerTimeLimit
- uid: System.DirectoryServices.DirectorySearcher.SizeLimit*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: SizeLimit
  nameWithType: DirectorySearcher.SizeLimit
- uid: System.DirectoryServices.DirectorySearcher.Sort*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: Sort
  nameWithType: DirectorySearcher.Sort
- uid: System.DirectoryServices.DirectorySearcher.Tombstone*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: Tombstone
  nameWithType: DirectorySearcher.Tombstone
- uid: System.DirectoryServices.DirectorySearcher.VirtualListView*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: VirtualListView
  nameWithType: DirectorySearcher.VirtualListView
