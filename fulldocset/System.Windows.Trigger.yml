### YamlMime:ManagedReference
items:
- uid: System.Windows.Trigger
  id: Trigger
  children:
  - System.Windows.Trigger.#ctor
  - System.Windows.Trigger.Property
  - System.Windows.Trigger.ReceiveTypeConverter(System.Object,System.Windows.Markup.XamlSetTypeConverterEventArgs)
  - System.Windows.Trigger.Setters
  - System.Windows.Trigger.SourceName
  - System.Windows.Trigger.System#ComponentModel#ISupportInitialize#BeginInit
  - System.Windows.Trigger.System#ComponentModel#ISupportInitialize#EndInit
  - System.Windows.Trigger.System#Windows#Markup#IAddChild#AddChild(System.Object)
  - System.Windows.Trigger.System#Windows#Markup#IAddChild#AddText(System.String)
  - System.Windows.Trigger.Value
  langs:
  - csharp
  name: Trigger
  nameWithType: Trigger
  fullName: System.Windows.Trigger
  type: Class
  summary: "表示套用屬性值或有條件地執行動作的觸發程序。"
  remarks: "[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]定義屬性的對應使用者動作，例如<xref:System.Windows.UIElement.IsMouseOver%2A>屬性設為`true`當使用者停留在資料指標<xref:System.Windows.UIElement>或對應的<xref:System.Windows.ContentElement.IsMouseOver%2A>屬性<xref:System.Windows.ContentElement>.</xref:System.Windows.ContentElement> </xref:System.Windows.ContentElement.IsMouseOver%2A> </xref:System.Windows.UIElement> </xref:System.Windows.UIElement.IsMouseOver%2A> 表示屬性值，以及觸發程序項目中的使用者動作可讓[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]樣式來變更屬性值根據這些使用者的動作，全部從標記內。       變更觸發程序的屬性會自動重設其先前的值無法再滿足觸發的條件時。 觸發程序最佳化的暫時性狀態預期的變更並返回原始的狀態，例如<xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A>和<xref:System.Windows.Controls.Button><xref:System.Windows.Controls.ListBoxItem.IsSelected%2A><xref:System.Windows.Controls.ListBoxItem>。</xref:System.Windows.Controls.ListBoxItem> </xref:System.Windows.Controls.ListBoxItem.IsSelected%2A> </xref:System.Windows.Controls.Button> </xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> <xref:System.Windows.Trigger.Property%2A>感興趣的必須是相依性屬性。</xref:System.Windows.Trigger.Property%2A>       請注意，您必須同時指定<xref:System.Windows.Trigger.Property%2A>和<xref:System.Windows.Trigger.Value%2A>上的觸發程序的觸發程序為有意義的屬性。</xref:System.Windows.Trigger.Value%2A> </xref:System.Windows.Trigger.Property%2A> 如果未設定一或兩個屬性，則會擲回例外狀況。       <xref:System.Windows.Trigger.Setters%2A>觸發程序物件的屬性只可包含數<xref:System.Windows.Setter>物件。</xref:System.Windows.Setter> </xref:System.Windows.Trigger.Setters%2A> 加入<xref:System.Windows.Setter>觸發程序物件的子系以隱含方式將它加入至<xref:System.Windows.SetterBaseCollection>觸發程序物件。</xref:System.Windows.SetterBaseCollection> </xref:System.Windows.Setter> <xref:System.Windows.EventSetter>不支援物件。只有<xref:System.Windows.Style.Setters%2A?displayProperty=fullName>支援<xref:System.Windows.EventSetter>物件。</xref:System.Windows.EventSetter> </xref:System.Windows.Style.Setters%2A?displayProperty=fullName></xref:System.Windows.EventSetter>       有其他類型的觸發程序。 <xref:System.Windows.MultiTrigger>可讓您套用根據多個屬性狀態的變更。</xref:System.Windows.MultiTrigger> <xref:System.Windows.EventTrigger>可讓您在事件發生時套用變更。</xref:System.Windows.EventTrigger> <xref:System.Windows.DataTrigger>和<xref:System.Windows.MultiDataTrigger>適用於資料繫結屬性。</xref:System.Windows.MultiDataTrigger></xref:System.Windows.DataTrigger>"
  example:
  - "The following example shows a named <xref:System.Windows.Style> available to <xref:System.Windows.Controls.Button> controls. The <xref:System.Windows.Style> defines a Trigger element that changes the <xref:System.Windows.Controls.Control.Foreground%2A> property of a button when the <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> property is `true`.  \n  \n [!code-xml[BtnStyles#2](~/add/codesnippet/xaml/ButtonStyles2/app.xaml#2)]"
  syntax:
    content: >-
      [System.Windows.Markup.ContentProperty("Setters")]

      [System.Windows.Markup.XamlSetTypeConverter("ReceiveTypeConverter")]

      public class Trigger : System.Windows.TriggerBase, System.ComponentModel.ISupportInitialize, System.Windows.Markup.IAddChild
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  - System.Windows.TriggerBase
  implements:
  - System.ComponentModel.ISupportInitialize
  - System.Windows.Markup.IAddChild
  inheritedMembers:
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  - System.Windows.TriggerBase.EnterActions
  - System.Windows.TriggerBase.ExitActions
  platform:
  - net462
- uid: System.Windows.Trigger.#ctor
  id: '#ctor'
  parent: System.Windows.Trigger
  langs:
  - csharp
  name: Trigger()
  nameWithType: Trigger.Trigger()
  fullName: System.Windows.Trigger.Trigger()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "初始化的新執行個體<xref href=&quot;System.Windows.Trigger&quot;></xref>類別。"
  syntax:
    content: public Trigger ();
    parameters: []
  overload: System.Windows.Trigger.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Trigger.Property
  id: Property
  parent: System.Windows.Trigger
  langs:
  - csharp
  name: Property
  nameWithType: Trigger.Property
  fullName: System.Windows.Trigger.Property
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "取得或設定屬性，傳回的值相較於<xref:System.Windows.Trigger.Value*>屬性觸發程序。</xref:System.Windows.Trigger.Value*> 比較會參考相等檢查。"
  remarks: "這個屬性所傳回的值會與所指定的值相比<xref:System.Windows.Trigger.Value%2A>屬性。</xref:System.Windows.Trigger.Value%2A> 執行的比較是參考相等檢查。 如果兩個值相符，然後相關聯<xref:System.Windows.Setter>s 套用指定的屬性值。</xref:System.Windows.Setter>       使用`ClassName.PropertyName`語法來限定的屬性，指定是否樣式或範本，其中包含這個觸發程序沒有`TargetType`屬性集。       請注意，您必須指定這兩個屬性和<xref:System.Windows.Trigger.Value%2A>屬性<xref:System.Windows.Trigger>為有意義的觸發程序。</xref:System.Windows.Trigger> </xref:System.Windows.Trigger.Value%2A> 如果未設定一或兩個屬性，則會擲回例外狀況。"
  example:
  - "The following example contains two triggers. The first changes the <xref:System.Windows.Controls.Control.Background%2A> property of a <xref:System.Windows.Controls.Button> when the <xref:System.Windows.UIElement.IsMouseOver%2A> property is **true**. The second changes the <xref:System.Windows.Controls.Control.Foreground%2A> property of a button when the <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> property is **true**. The <xref:System.Windows.Style.TargetType%2A> of the <xref:System.Windows.Style> is set to <xref:System.Windows.Controls.Button> and therefore there is no need to qualify the `Property` properties with the class name.  \n  \n [!code-xml[BtnStyles#2](~/add/codesnippet/xaml/ButtonStyles2/app.xaml#2)]"
  syntax:
    content: public System.Windows.DependencyProperty Property { get; set; }
    return:
      type: System.Windows.DependencyProperty
      description: "A <xref href=&quot;System.Windows.DependencyProperty&quot;> </xref>可傳回項目的屬性值。 預設值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Trigger.Property*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A <xref href=&quot;System.Windows.Style&quot;> </xref>不能包含<xref href=&quot;System.Windows.Trigger&quot;></xref>參考<xref href=&quot;System.Windows.Style&quot;></xref>屬性。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "之後<xref href=&quot;System.Windows.Trigger&quot;></xref>是在使用中，無法修改。"
  platform:
  - net462
- uid: System.Windows.Trigger.ReceiveTypeConverter(System.Object,System.Windows.Markup.XamlSetTypeConverterEventArgs)
  id: ReceiveTypeConverter(System.Object,System.Windows.Markup.XamlSetTypeConverterEventArgs)
  parent: System.Windows.Trigger
  langs:
  - csharp
  name: ReceiveTypeConverter(Object,XamlSetTypeConverterEventArgs)
  nameWithType: Trigger.ReceiveTypeConverter(Object,XamlSetTypeConverterEventArgs)
  fullName: System.Windows.Trigger.ReceiveTypeConverter(Object,XamlSetTypeConverterEventArgs)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "處理的案例，其中型別轉換子的屬性中提供的值<xref href=&quot;System.Windows.Trigger&quot;></xref>物件。"
  remarks: "這是套用所參考方法<xref:System.Windows.Markup.XamlSetTypeConverterAttribute>類別層級，這表示這個方法會處理所有嘗試都將值設定屬性<xref:System.Windows.Trigger>具有型別轉換子。</xref:System.Windows.Trigger> </xref:System.Windows.Markup.XamlSetTypeConverterAttribute> 您沒有不通常直接呼叫這個方法。"
  syntax:
    content: public static void ReceiveTypeConverter (object targetObject, System.Windows.Markup.XamlSetTypeConverterEventArgs eventArgs);
    parameters:
    - id: targetObject
      type: System.Object
      description: "物件，其中型別轉換子設定的值。"
    - id: eventArgs
      type: System.Windows.Markup.XamlSetTypeConverterEventArgs
      description: "相關的資料型別轉換器處理。"
  overload: System.Windows.Trigger.ReceiveTypeConverter*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Trigger.Setters
  id: Setters
  parent: System.Windows.Trigger
  langs:
  - csharp
  name: Setters
  nameWithType: Trigger.Setters
  fullName: System.Windows.Trigger.Setters
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "取得集合的<xref href=&quot;System.Windows.Setter&quot;></xref>物件，描述在符合指定的條件時要套用的屬性值。"
  remarks: "<a name=&quot;xamlPropertyElementUsage_Setters&quot;></a># # XAML 屬性項目用法```   <object>     <object.Setters>       ZeroOrMoreSetters     </object.Setters>   </object>   ``` <a name=&quot;xamlValues_Setters&quot;> </a> # # XAML 值*ZeroOrMoreSetters*零或多個<xref:System.Windows.Setter>物件。</xref:System.Windows.Setter>       這不支援<xref:System.Windows.EventSetter>物件。</xref:System.Windows.EventSetter>       A<xref:System.Windows.Trigger>可讓您使用<xref:System.Windows.Setter>s 套用屬性值的項目符合指定的條件時。</xref:System.Windows.Setter> </xref:System.Windows.Trigger> 例如，您可能要變更背景色彩的項目，在焦點時。       如果超過一次設定相同的屬性，將會套用最後一個屬性值。       Setter 屬性<xref:System.Windows.Trigger>物件只可包含數<xref:System.Windows.Setter>物件。</xref:System.Windows.Setter> </xref:System.Windows.Trigger> 加入<xref:System.Windows.Setter>子系<xref:System.Windows.Trigger>物件隱含地將它加入至<xref:System.Windows.SetterBaseCollection>如<xref:System.Windows.Trigger>物件。</xref:System.Windows.Trigger> </xref:System.Windows.SetterBaseCollection> </xref:System.Windows.Trigger> </xref:System.Windows.Setter> <xref:System.Windows.EventSetter>不支援物件。只有<xref:System.Windows.Style.Setters%2A?displayProperty=fullName>支援<xref:System.Windows.EventSetter>物件。</xref:System.Windows.EventSetter> </xref:System.Windows.Style.Setters%2A?displayProperty=fullName></xref:System.Windows.EventSetter>"
  example:
  - "As mentioned above, adding a <xref:System.Windows.Setter> child to a <xref:System.Windows.Trigger> object implicitly adds it to the <xref:System.Windows.SetterBaseCollection> for the <xref:System.Windows.Trigger> object. In the following example, `<Trigger.Setters>` is implicit.  \n  \n [!code-xml[PhotoStoreDemoStyled#TriggerSettersRef](~/add/codesnippet/xaml/photostore/window1.xaml#triggersettersref)]\n [!code-xml[PhotoStoreDemoStyled#TriggerSettersRef](~/add/codesnippet/xaml/p-system.windows.trigger_3_1.xaml)]"
  syntax:
    content: public System.Windows.SetterBaseCollection Setters { get; }
    return:
      type: System.Windows.SetterBaseCollection
      description: "預設值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Trigger.Setters*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Trigger.SourceName
  id: SourceName
  parent: System.Windows.Trigger
  langs:
  - csharp
  name: SourceName
  nameWithType: Trigger.SourceName
  fullName: System.Windows.Trigger.SourceName
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "取得或設定要套用 setter 相關聯的屬性物件的名稱。"
  remarks: "您可以設定此屬性所在的範圍內的任何項目名稱以觸發程序集合 (集合這個<xref:System.Windows.Trigger>屬於) 會套用。</xref:System.Windows.Trigger> 這通常是具名的項目內包含此<xref:System.Windows.Trigger>.</xref:System.Windows.Trigger>的範本       您可以使用物件的名稱[X:name 指示詞](~/add/includes/ajax-current-ext-md.md)語法。"
  example:
  - "One scenario when you would use the SourceName property is when the property of interest is not a property of the templated parent, as in the following example:  \n  \n [!code-xml[ControlTemplateExamples#TriggerSourceName](~/add/codesnippet/xaml/controltemplateexamples/resources/menu.xaml#triggersourcename)]"
  syntax:
    content: public string SourceName { get; set; }
    return:
      type: System.String
      description: "預設屬性是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。 如果這個屬性是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>，然後在<xref:System.Windows.Trigger.Property*>屬性相對於此樣式或範本套用至 （已設定樣式的父成員或樣板化的父代） 的項目進行評估。</xref:System.Windows.Trigger.Property*>"
  overload: System.Windows.Trigger.SourceName*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "之後<xref href=&quot;System.Windows.Trigger&quot;></xref>是在使用中，無法修改。"
  platform:
  - net462
- uid: System.Windows.Trigger.System#ComponentModel#ISupportInitialize#BeginInit
  id: System#ComponentModel#ISupportInitialize#BeginInit
  isEii: true
  parent: System.Windows.Trigger
  langs:
  - csharp
  name: System.ComponentModel.ISupportInitialize.BeginInit()
  nameWithType: Trigger.System.ComponentModel.ISupportInitialize.BeginInit()
  fullName: System.Windows.Trigger.System.ComponentModel.ISupportInitialize.BeginInit()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "表示物件正在啟動初始設定。"
  remarks: "這個成員是明確介面成員實作。 它可用時，才<xref:System.Windows.Setter>執行個體轉換成<xref:System.ComponentModel.ISupportInitialize>介面。</xref:System.ComponentModel.ISupportInitialize> </xref:System.Windows.Setter>"
  syntax:
    content: void ISupportInitialize.BeginInit ();
    parameters: []
  overload: System.Windows.Trigger.System#ComponentModel#ISupportInitialize#BeginInit*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Trigger.System#ComponentModel#ISupportInitialize#EndInit
  id: System#ComponentModel#ISupportInitialize#EndInit
  isEii: true
  parent: System.Windows.Trigger
  langs:
  - csharp
  name: System.ComponentModel.ISupportInitialize.EndInit()
  nameWithType: Trigger.System.ComponentModel.ISupportInitialize.EndInit()
  fullName: System.Windows.Trigger.System.ComponentModel.ISupportInitialize.EndInit()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "表示物件已完成初始設定。"
  remarks: "這個成員是明確介面成員實作。 它可用時，才<xref:System.Windows.Setter>執行個體轉換成<xref:System.ComponentModel.ISupportInitialize>介面。</xref:System.ComponentModel.ISupportInitialize> </xref:System.Windows.Setter>"
  syntax:
    content: void ISupportInitialize.EndInit ();
    parameters: []
  overload: System.Windows.Trigger.System#ComponentModel#ISupportInitialize#EndInit*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Trigger.System#Windows#Markup#IAddChild#AddChild(System.Object)
  id: System#Windows#Markup#IAddChild#AddChild(System.Object)
  isEii: true
  parent: System.Windows.Trigger
  langs:
  - csharp
  name: System.Windows.Markup.IAddChild.AddChild(Object)
  nameWithType: Trigger.System.Windows.Markup.IAddChild.AddChild(Object)
  fullName: System.Windows.Trigger.System.Windows.Markup.IAddChild.AddChild(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "加入子物件。"
  remarks: "這個成員是明確介面成員實作。 它可用時，才<xref:System.Windows.Trigger>執行個體轉換成<xref:System.Windows.Markup.IAddChild>介面。</xref:System.Windows.Markup.IAddChild> </xref:System.Windows.Trigger>"
  syntax:
    content: void IAddChild.AddChild (object value);
    parameters:
    - id: value
      type: System.Object
      description: "要加入子物件。"
  overload: System.Windows.Trigger.System#Windows#Markup#IAddChild#AddChild*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Trigger.System#Windows#Markup#IAddChild#AddText(System.String)
  id: System#Windows#Markup#IAddChild#AddText(System.String)
  isEii: true
  parent: System.Windows.Trigger
  langs:
  - csharp
  name: System.Windows.Markup.IAddChild.AddText(String)
  nameWithType: Trigger.System.Windows.Markup.IAddChild.AddText(String)
  fullName: System.Windows.Trigger.System.Windows.Markup.IAddChild.AddText(String)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "將節點的文字內容加入物件中。"
  remarks: "這個成員是明確介面成員實作。 它可用時，才<xref:System.Windows.Trigger>執行個體轉換成<xref:System.Windows.Markup.IAddChild>介面。</xref:System.Windows.Markup.IAddChild> </xref:System.Windows.Trigger>"
  syntax:
    content: void IAddChild.AddText (string text);
    parameters:
    - id: text
      type: System.String
      description: "要新增至物件的文字。"
  overload: System.Windows.Trigger.System#Windows#Markup#IAddChild#AddText*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Trigger.Value
  id: Value
  parent: System.Windows.Trigger
  langs:
  - csharp
  name: Value
  nameWithType: Trigger.Value
  fullName: System.Windows.Trigger.Value
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "取得或設定要與屬性值的項目比較的值。 比較會參考相等檢查。"
  remarks: "這個值會與比較<xref:System.Windows.Trigger.Property%2A><xref:System.Windows.Trigger>.</xref:System.Windows.Trigger>屬性</xref:System.Windows.Trigger.Property%2A>所傳回的屬性值 執行的比較是參考相等檢查。 如果兩個值相等，則相關聯<xref:System.Windows.Setter>s 套用指定的屬性值。</xref:System.Windows.Setter>       請注意，您必須同時指定<xref:System.Windows.Trigger.Property%2A>和 Value 屬性上<xref:System.Windows.Trigger>為有意義的觸發程序。</xref:System.Windows.Trigger> </xref:System.Windows.Trigger.Property%2A> 因此，如果未指定一或兩個屬性，則例外狀況會擲回。      <a name=&quot;xamlPropertyElementUsage_Value&quot;></a># # XAML 屬性項目用法```   <object>     <object.Value>       Value     </object.Value>   </object>   ```"
  example:
  - "The following example changes the <xref:System.Windows.Controls.Control.Foreground%2A> property of a button when the <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> property is **true**.  \n  \n [!code-xml[BtnStyles#2](~/add/codesnippet/xaml/ButtonStyles2/app.xaml#2)]"
  syntax:
    content: public object Value { get; set; }
    return:
      type: System.Object
      description: "預設值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。 另請參閱例外狀況 > 一節。"
  overload: System.Windows.Trigger.Value*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "不支援例如繫結運算式。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "之後<xref href=&quot;System.Windows.Trigger&quot;></xref>是在使用中，無法修改。"
  platform:
  - net462
references:
- uid: System.Windows.TriggerBase
  isExternal: false
  name: System.Windows.TriggerBase
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Windows.Trigger.#ctor
  parent: System.Windows.Trigger
  isExternal: false
  name: Trigger()
  nameWithType: Trigger.Trigger()
  fullName: System.Windows.Trigger.Trigger()
- uid: System.Windows.Trigger.Property
  parent: System.Windows.Trigger
  isExternal: false
  name: Property
  nameWithType: Trigger.Property
  fullName: System.Windows.Trigger.Property
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Windows.Trigger.ReceiveTypeConverter(System.Object,System.Windows.Markup.XamlSetTypeConverterEventArgs)
  parent: System.Windows.Trigger
  isExternal: false
  name: ReceiveTypeConverter(Object,XamlSetTypeConverterEventArgs)
  nameWithType: Trigger.ReceiveTypeConverter(Object,XamlSetTypeConverterEventArgs)
  fullName: System.Windows.Trigger.ReceiveTypeConverter(Object,XamlSetTypeConverterEventArgs)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Markup.XamlSetTypeConverterEventArgs
  parent: System.Windows.Markup
  isExternal: false
  name: XamlSetTypeConverterEventArgs
  nameWithType: XamlSetTypeConverterEventArgs
  fullName: System.Windows.Markup.XamlSetTypeConverterEventArgs
- uid: System.Windows.Trigger.Setters
  parent: System.Windows.Trigger
  isExternal: false
  name: Setters
  nameWithType: Trigger.Setters
  fullName: System.Windows.Trigger.Setters
- uid: System.Windows.SetterBaseCollection
  parent: System.Windows
  isExternal: false
  name: SetterBaseCollection
  nameWithType: SetterBaseCollection
  fullName: System.Windows.SetterBaseCollection
- uid: System.Windows.Trigger.SourceName
  parent: System.Windows.Trigger
  isExternal: false
  name: SourceName
  nameWithType: Trigger.SourceName
  fullName: System.Windows.Trigger.SourceName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Trigger.System#ComponentModel#ISupportInitialize#BeginInit
  parent: System.Windows.Trigger
  isExternal: false
  name: System.ComponentModel.ISupportInitialize.BeginInit()
  nameWithType: Trigger.System.ComponentModel.ISupportInitialize.BeginInit()
  fullName: System.Windows.Trigger.System.ComponentModel.ISupportInitialize.BeginInit()
- uid: System.Windows.Trigger.System#ComponentModel#ISupportInitialize#EndInit
  parent: System.Windows.Trigger
  isExternal: false
  name: System.ComponentModel.ISupportInitialize.EndInit()
  nameWithType: Trigger.System.ComponentModel.ISupportInitialize.EndInit()
  fullName: System.Windows.Trigger.System.ComponentModel.ISupportInitialize.EndInit()
- uid: System.Windows.Trigger.System#Windows#Markup#IAddChild#AddChild(System.Object)
  parent: System.Windows.Trigger
  isExternal: false
  name: System.Windows.Markup.IAddChild.AddChild(Object)
  nameWithType: Trigger.System.Windows.Markup.IAddChild.AddChild(Object)
  fullName: System.Windows.Trigger.System.Windows.Markup.IAddChild.AddChild(Object)
- uid: System.Windows.Trigger.System#Windows#Markup#IAddChild#AddText(System.String)
  parent: System.Windows.Trigger
  isExternal: false
  name: System.Windows.Markup.IAddChild.AddText(String)
  nameWithType: Trigger.System.Windows.Markup.IAddChild.AddText(String)
  fullName: System.Windows.Trigger.System.Windows.Markup.IAddChild.AddText(String)
- uid: System.Windows.Trigger.Value
  parent: System.Windows.Trigger
  isExternal: false
  name: Value
  nameWithType: Trigger.Value
  fullName: System.Windows.Trigger.Value
- uid: System.Windows.Trigger.#ctor*
  parent: System.Windows.Trigger
  isExternal: false
  name: Trigger
  nameWithType: Trigger.Trigger
- uid: System.Windows.Trigger.Property*
  parent: System.Windows.Trigger
  isExternal: false
  name: Property
  nameWithType: Trigger.Property
- uid: System.Windows.Trigger.ReceiveTypeConverter*
  parent: System.Windows.Trigger
  isExternal: false
  name: ReceiveTypeConverter
  nameWithType: Trigger.ReceiveTypeConverter
- uid: System.Windows.Trigger.Setters*
  parent: System.Windows.Trigger
  isExternal: false
  name: Setters
  nameWithType: Trigger.Setters
- uid: System.Windows.Trigger.SourceName*
  parent: System.Windows.Trigger
  isExternal: false
  name: SourceName
  nameWithType: Trigger.SourceName
- uid: System.Windows.Trigger.System#ComponentModel#ISupportInitialize#BeginInit*
  parent: System.Windows.Trigger
  isExternal: false
  name: System.ComponentModel.ISupportInitialize.BeginInit
  nameWithType: Trigger.System.ComponentModel.ISupportInitialize.BeginInit
- uid: System.Windows.Trigger.System#ComponentModel#ISupportInitialize#EndInit*
  parent: System.Windows.Trigger
  isExternal: false
  name: System.ComponentModel.ISupportInitialize.EndInit
  nameWithType: Trigger.System.ComponentModel.ISupportInitialize.EndInit
- uid: System.Windows.Trigger.System#Windows#Markup#IAddChild#AddChild*
  parent: System.Windows.Trigger
  isExternal: false
  name: System.Windows.Markup.IAddChild.AddChild
  nameWithType: Trigger.System.Windows.Markup.IAddChild.AddChild
- uid: System.Windows.Trigger.System#Windows#Markup#IAddChild#AddText*
  parent: System.Windows.Trigger
  isExternal: false
  name: System.Windows.Markup.IAddChild.AddText
  nameWithType: Trigger.System.Windows.Markup.IAddChild.AddText
- uid: System.Windows.Trigger.Value*
  parent: System.Windows.Trigger
  isExternal: false
  name: Value
  nameWithType: Trigger.Value
