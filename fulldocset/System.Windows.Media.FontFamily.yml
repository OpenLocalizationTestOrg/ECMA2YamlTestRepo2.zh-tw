### YamlMime:ManagedReference
items:
- uid: System.Windows.Media.FontFamily
  id: FontFamily
  children:
  - System.Windows.Media.FontFamily.#ctor
  - System.Windows.Media.FontFamily.#ctor(System.String)
  - System.Windows.Media.FontFamily.#ctor(System.Uri,System.String)
  - System.Windows.Media.FontFamily.Baseline
  - System.Windows.Media.FontFamily.BaseUri
  - System.Windows.Media.FontFamily.Equals(System.Object)
  - System.Windows.Media.FontFamily.FamilyMaps
  - System.Windows.Media.FontFamily.FamilyNames
  - System.Windows.Media.FontFamily.FamilyTypefaces
  - System.Windows.Media.FontFamily.GetHashCode
  - System.Windows.Media.FontFamily.GetTypefaces
  - System.Windows.Media.FontFamily.LineSpacing
  - System.Windows.Media.FontFamily.Source
  - System.Windows.Media.FontFamily.ToString
  langs:
  - csharp
  name: FontFamily
  nameWithType: FontFamily
  fullName: System.Windows.Media.FontFamily
  type: Class
  summary: "代表一系列的相關字型。"
  remarks: "A font family is a set of typefaces that share the same family name, such as \"Times New Roman\", but that differ in features. These feature differences include <xref:System.Windows.Media.Typeface.Style%2A>, such as italic, and <xref:System.Windows.Media.Typeface.Weight%2A>, such as bold.  \n  \n ![Fonts](~/add/media/fonts.PNG \"Fonts\")  \nExample of typefaces that are members of the \"Times New Roman\" font family  \n  \n Most [!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)] elements, such as <xref:System.Windows.Controls.Button> and <xref:System.Windows.Controls.TextBlock>, provide a <xref:System.Windows.Controls.Control.FontFamily%2A> property that can be used to specify a font for the text content of a control. You define the font by setting that property with a FontFamily value. The following examples show how to reference a font, in [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)] and in code.  \n  \n [!code-vb[FontSnippets#FontFallbackSnippet3](~/add/codesnippet/visualbasic/fontsnippets/fontfamilysnippets.xaml.vb#fontfallbacksnippet3)]\n [!code-cs[FontSnippets#FontFallbackSnippet3](~/add/codesnippet/csharp/FontSnippets/FontFamilySnippets.xaml.cs#fontfallbacksnippet3)]\n [!code-xml[FontSnippets#FontFallbackSnippet3](~/add/codesnippet/xaml/FontSnippets/FontFamilySnippets.xaml#fontfallbacksnippet3)]  \n  \n In the preceding example, the font that is referenced, \"Comic Sans MS\", is referred to by its *friendly name*. Also, in this example the font is assumed to be in the system font collection.  \n  \n## Specifying Fonts in Alternate Directories  \n A [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] application can specify a directory, other than the directory that contains the systems font collection, for resolving font references. The friendly name of the font can specify an absolute [!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)] value to resolve the font reference, as shown in the following [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)] and code examples.  \n  \n [!code-xml[FontSnippets#FontPackageSnippet6](~/add/codesnippet/xaml/FontSnippets/FontPackageSnippets.xaml#fontpackagesnippet6)]\n [!code-vb[FontSnippets#FontPackageSnippet6](~/add/codesnippet/visualbasic/fontsnippets/fontpackagesnippets.xaml.vb#fontpackagesnippet6)]\n [!code-cs[FontSnippets#FontPackageSnippet6](~/add/codesnippet/csharp/FontSnippets/FontPackageSnippets.xaml.cs#fontpackagesnippet6)]  \n  \n The friendly name of the font can also specify a relative [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] value, which requires a base [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] to resolve the font reference. The <xref:System.Windows.Media.FontFamily.BaseUri%2A> property of the FontFamily object corresponds to the base [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] value. The following code example shows how to create a font reference that is composed of a base [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] value and a relative [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] value.  \n  \n [!code-vb[FontSnippets#FontPackageSnippet7](~/add/codesnippet/visualbasic/fontsnippets/fontpackagesnippets.xaml.vb#fontpackagesnippet7)]\n [!code-cs[FontSnippets#FontPackageSnippet7](~/add/codesnippet/csharp/FontSnippets/FontPackageSnippets.xaml.cs#fontpackagesnippet7)]  \n  \n You can use a base [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] value when you reference a font that is packaged as part of the application. For example, the base [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] value can be a \"pack://application\" [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)], which lets you reference fonts that are packaged as application resources. The following code example shows a font reference that is composed of a base [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] value and a relative [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] value.  \n  \n [!code-vb[FontSnippets#FontPackageSnippet2](~/add/codesnippet/visualbasic/fontsnippets/fontpackagesnippets.xaml.vb#fontpackagesnippet2)]\n [!code-cs[FontSnippets#FontPackageSnippet2](~/add/codesnippet/csharp/FontSnippets/FontPackageSnippets.xaml.cs#fontpackagesnippet2)]  \n  \n When a FontFamily is specified as an attribute in markup, the base [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] value is always implied—its value is the [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] of the [!INCLUDE[TLA#tla_titlexaml](~/add/includes/ajax-current-ext-md.md)] page. The implied base [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] value is used with the relative [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] value in the friendly name string to obtain the location of the font. In the following [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)] example, notice that the relative [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] value uses the \"./\" notation, which means \"in the current folder\" of the base [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] value.  \n  \n [!code-xml[FontSnippets#FontPackageSnippet1](~/add/codesnippet/xaml/FontSnippets/FontPackageSnippets.xaml#fontpackagesnippet1)]  \n  \n A [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] application can package fonts as either a content item, a resource item, or a library resource item. For more information, see [Packaging Fonts with Applications](~/add/includes/ajax-current-ext-md.md).  \n  \n## Font Fallback  \n Font fallback refers to the automatic substitution of a font other than the font that is selected by the client application. There are two primary reasons why font fallback is invoked:  \n  \n-   The font that is specified by the client application does not exist on the system.  \n  \n-   The font that is specified by the client application does not contain the glyphs that are required to render text.  \n  \n In[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)], the font fallback mechanism uses the default fallback font family, \"Global User Interface\", as the substitute font. This font is defined as a composite font, whose file name is \"GlobalUserInterface.CompositeFont\". For more information about composite fonts, see the Composite Fonts section in this topic.  \n  \n The [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] font fallback mechanism replaces previous [!INCLUDE[TLA#tla_win32](~/add/includes/tlasharptla-win32-md.md)] font substitution technologies.  \n  \n## Defining a Font Fallback Sequence in Code  \n You can define a font fallback sequence in your code, which lets you define an alternate font. When you create a FontFamily object, provide multiple font family names, separated by commas, for the <xref:System.String> parameter, such as \"Comic Sans MS, Verdana\". In this case, if the glyphs from the \"Comic Sans MS\" typeface are not available, glyphs from the \"Verdana\" typeface are used. If neither \"Comic Sans MS\" nor \"Verdana\" have the required glyphs, the fallback font family of the typeface is used, which is \"Global User Interface\" by default.  \n  \n The following examples show how to define a font fallback sequence, in [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)] and in code.  \n  \n [!code-vb[FontSnippets#FontFallbackSnippet1](~/add/codesnippet/visualbasic/fontsnippets/fontfamilysnippets.xaml.vb#fontfallbacksnippet1)]\n [!code-cs[FontSnippets#FontFallbackSnippet1](~/add/codesnippet/csharp/FontSnippets/FontFamilySnippets.xaml.cs#fontfallbacksnippet1)]\n [!code-xml[FontSnippets#FontFallbackSnippet1](~/add/codesnippet/xaml/FontSnippets/FontFamilySnippets.xaml#fontfallbacksnippet1)]  \n  \n Any one of the fonts in the fallback sequence can specify font locations. In the following examples, \"Pericles Light\" is referenced as an application resource, and \"Verdana\" is referenced as a system font collection member.  \n  \n [!code-vb[FontSnippets#FontFallbackSnippet2](~/add/codesnippet/visualbasic/fontsnippets/fontfamilysnippets.xaml.vb#fontfallbacksnippet2)]\n [!code-cs[FontSnippets#FontFallbackSnippet2](~/add/codesnippet/csharp/FontSnippets/FontFamilySnippets.xaml.cs#fontfallbacksnippet2)]\n [!code-xml[FontSnippets#FontFallbackSnippet2](~/add/codesnippet/xaml/FontSnippets/FontFamilySnippets.xaml#fontfallbacksnippet2)]  \n  \n## Composite Fonts  \n The [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] platform provides a composite font feature to allow the construction of full range multilingual fonts, and to avoid displaying missing glyphs. Composite fonts replace the [!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)] font linking, font fallback, font binding, font association, and end-user-defined characters (EUDC) mechanisms.  \n  \n A composite font family is available to applications through the FontFamily and <xref:System.Windows.Media.Typeface> constructors just like any other font family. Each composite font family is named, and, as with other fonts, can provide localized variants of its name in multiple languages.  \n  \n The following markup example shows how a composite font family can be defined as a disk file. This file can be stored in the default [!INCLUDE[TLA#tla_mswin](~/add/includes/tlasharptla-mswin-md.md)] font directory as with any other installed font, or can be referenced in any location by including its [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] when referencing the family by name.  \n  \n The following example shows the font family markup in a \".CompositeFont\" file.  \n  \n [!code-xml[CompositeFontMarkup#CF](~/add/codesnippet/xaml/compositefontmarkup/comp.xaml#cf)]  \n  \n The following four composite fonts appear in the default [!INCLUDE[TLA2#tla_win](~/add/includes/tla2sharptla-win-md.md)] font directory as part of the [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] installation.  \n  \n|Font|Notes|  \n|----------|-----------|  \n|GlobalMonospace.CompositeFont|Renders text by using a monospace font, for example, \"Courier New\" for Latin characters.|  \n|GlobalSanSerif.CompositeFont|Renders text by using a sans serif font, for example, \"Arial\" for Latin characters.|  \n|GlobalSerif.CompositeFont|Renders text by using a serif font, for example, \"Times New Roman\" for Latin characters.|  \n|GlobalUserInterface.CompositeFont|Renders text by using a default font, for example, \"Times New Roman\" for Latin characters.|  \n  \n<a name=\"xamlAttributeUsage_FontFamily\"></a>   \n## XAML Attribute Usage  \n  \n```  \n<object FontFamily=\"fontFamilyName\"/>  \n- or -  \n<object FontFamily=\"fontFamilyNamesList\"/>  \n- or -  \n<object FontFamily=\"fontFamilyFolderReference\"/>  \n- or -  \n<object FontFamily=\"fontFamilyUriReference\"/>  \n```  \n  \n<a name=\"xamlValues_FontFamily\"></a>   \n## XAML Values  \n *fontFamilyName*  \n A string specifying a font family name.  For example, `\"Arial\"` or `\"Century Gothic\"`.  \n  \n *fontFamilyNamesList*  \n A string specifying multiple font family names, each separated by a comma (any whitespace following a comma is ignored).  The first font family specified serves as the primary font family; subsequent font families serve as fallback families to be used in cases where the primary font family is unavailable or not applicable.  For example, `\"Arial, Century Gothic\"` specifies Arial as the primary font family, with Century Gothic as the fallback font family.  \n  \n *fontFamilyFolderReference*  \n A string specifying a folder containing the font, along with a font family name.  The folder and font family name are delimited by a # character.  The folder reference may be absolute, or relative.  For example, `\"Custom Fonts\\#My Custom Font\"`.  \n  \n *fontFamilyUriReference*  \n A string specifying a [!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)] for the font, along with a font family name.  The [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] and font family name are delimited by a # character.  For example, `\"http://MyFontServer/Fonts/#My Custom Font\"`."
  syntax:
    content: >-
      [System.ComponentModel.TypeConverter(typeof(System.Windows.Media.FontFamilyConverter))]

      [System.Windows.Localizability(System.Windows.LocalizationCategory.Font)]

      [System.Windows.Markup.ValueSerializer(typeof(System.Windows.Media.FontFamilyValueSerializer))]

      public class FontFamily
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Media.FontFamily.#ctor
  id: '#ctor'
  parent: System.Windows.Media.FontFamily
  langs:
  - csharp
  name: FontFamily()
  nameWithType: FontFamily.FontFamily()
  fullName: System.Windows.Media.FontFamily.FontFamily()
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "初始化匿名的新執行個體<xref href=&quot;System.Windows.Media.FontFamily&quot;></xref>類別。"
  remarks: "當您想要以程式設計方式建立複合的字型，請使用此預設建構函式。 這表示您沒有指定字型家族名稱的建構函式，但您必須擴展中的集合<xref:System.Windows.Media.FontFamily.FamilyMaps%2A>和<xref:System.Windows.Media.FontFamily.FamilyNames%2A>之前使用建構的執行個體的集合。</xref:System.Windows.Media.FontFamily.FamilyNames%2A> </xref:System.Windows.Media.FontFamily.FamilyMaps%2A>"
  syntax:
    content: public FontFamily ();
    parameters: []
  overload: System.Windows.Media.FontFamily.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.FontFamily.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Windows.Media.FontFamily
  langs:
  - csharp
  name: FontFamily(String)
  nameWithType: FontFamily.FontFamily(String)
  fullName: System.Windows.Media.FontFamily.FontFamily(String)
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "初始化的新執行個體<xref href=&quot;System.Windows.Media.FontFamily&quot;></xref>從指定的字型家族名稱的類別。"
  remarks: "指定在每個系列名稱`familyName`前面參數可以是任一個目錄的位置參考或[!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)]。 位置參考以井字號分隔系列名稱 (`#`) 字元。 中所指定的多個系列名稱`familyName`參數必須以逗號分隔。       每個系列可以是實際的字型直接代表一組共用相同的系列名稱，字型檔案，或可以是複合字型檔案中定義的系列名稱的參考。       有多個家族識別時，第二個和後續的字型系列會做為後援系列，處理第一個字型系列不支援的字碼指標。 不支援第一個字型家族的每個字碼指標，會接著檢查每個後續的系列。"
  example:
  - >-
    [!code-cs[FontSnippets#103](~/add/codesnippet/csharp/FontSnippets/Window1.xaml.cs#103)]
     [!code-vb[FontSnippets#103](~/add/codesnippet/visualbasic/fontsnippets/window1.xaml.vb#103)]
  syntax:
    content: public FontFamily (string familyName);
    parameters:
    - id: familyName
      type: System.String
      description: "包含新的系列名稱<xref href=&quot;System.Windows.Media.FontFamily&quot;> </xref>。 應該以逗號分隔多個系列名稱。"
  overload: System.Windows.Media.FontFamily.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>familyName</code>不能<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  platform:
  - net462
- uid: System.Windows.Media.FontFamily.#ctor(System.Uri,System.String)
  id: '#ctor(System.Uri,System.String)'
  parent: System.Windows.Media.FontFamily
  langs:
  - csharp
  name: FontFamily(Uri,String)
  nameWithType: FontFamily.FontFamily(Uri,String)
  fullName: System.Windows.Media.FontFamily.FontFamily(Uri,String)
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "初始化的新執行個體<xref href=&quot;System.Windows.Media.FontFamily&quot;></xref>從指定的字型系列名稱和選擇性的基底類別[!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)]值。"
  remarks: "`familyName`值可以指定相對[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]值，這需要基底[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]字型參考解析。 `baseUri`值可以是`null`。"
  example:
  - "The following code shows a font reference that is composed of a base [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] value and a relative [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] value.  \n  \n [!code-vb[FontSnippets#FontPackageSnippet2](~/add/codesnippet/visualbasic/fontsnippets/fontpackagesnippets.xaml.vb#fontpackagesnippet2)]\n [!code-cs[FontSnippets#FontPackageSnippet2](~/add/codesnippet/csharp/FontSnippets/FontPackageSnippets.xaml.cs#fontpackagesnippet2)]"
  syntax:
    content: public FontFamily (Uri baseUri, string familyName);
    parameters:
    - id: baseUri
      type: System.Uri
      description: "指定的基底[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]，用來解析`familyName`。"
    - id: familyName
      type: System.String
      description: "包含新的系列名稱<xref href=&quot;System.Windows.Media.FontFamily&quot;> </xref>。 應該以逗號分隔多個系列名稱。"
  overload: System.Windows.Media.FontFamily.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.FontFamily.Baseline
  id: Baseline
  parent: System.Windows.Media.FontFamily
  langs:
  - csharp
  name: Baseline
  nameWithType: FontFamily.Baseline
  fullName: System.Windows.Media.FontFamily.Baseline
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "取得或設定基準和字元儲存格上方之間的距離。"
  syntax:
    content: public double Baseline { get; set; }
    return:
      type: System.Double
      description: "A<xref:System.Double>表示基準和字元儲存格上方，之間的距離表示字型的 em 大小的比例。</xref:System.Double>"
  overload: System.Windows.Media.FontFamily.Baseline*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.FontFamily.BaseUri
  id: BaseUri
  parent: System.Windows.Media.FontFamily
  langs:
  - csharp
  name: BaseUri
  nameWithType: FontFamily.BaseUri
  fullName: System.Windows.Media.FontFamily.BaseUri
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "取得基底[!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)]，用來解析字型家族名稱。"
  remarks: "傳回值是`null`如果字型家族名稱不會依賴基底[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]解決字型參考。 若要擷取用來建構字型家族名稱<xref:System.Windows.Media.FontFamily>物件，請使用<xref:System.Windows.Media.FontFamily.Source%2A>屬性。</xref:System.Windows.Media.FontFamily.Source%2A> </xref:System.Windows.Media.FontFamily>"
  example:
  - "The following example shows the results of retrieving the BaseUri property from a <xref:System.Windows.Media.FontFamily> object.  \n  \n [!code-vb[FontSnippets#FontPackageSnippet9](~/add/codesnippet/visualbasic/fontsnippets/fontpackagesnippets.xaml.vb#fontpackagesnippet9)]\n [!code-cs[FontSnippets#FontPackageSnippet9](~/add/codesnippet/csharp/FontSnippets/FontPackageSnippets.xaml.cs#fontpackagesnippet9)]"
  syntax:
    content: public Uri BaseUri { get; }
    return:
      type: System.Uri
      description: "型別<xref:System.Uri>.</xref:System.Uri>值"
  overload: System.Windows.Media.FontFamily.BaseUri*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.FontFamily.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Windows.Media.FontFamily
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: FontFamily.Equals(Object)
  fullName: System.Windows.Media.FontFamily.Equals(Object)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "取得值，指出目前的字型家族的物件和指定的字型系列物件是否相同。"
  syntax:
    content: public override bool Equals (object o);
    parameters:
    - id: o
      type: System.Object
      description: "<xref href=&quot;System.Windows.Media.FontFamily&quot;> </xref>来比較的物件。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<code> o </code>是否等於目前<xref href=&quot;System.Windows.Media.FontFamily&quot;></xref>物件; 否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 If <code>o</code> is not a <xref href=&quot;System.Windows.Media.FontFamily&quot;></xref> object, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> is returned."
  overload: System.Windows.Media.FontFamily.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.FontFamily.FamilyMaps
  id: FamilyMaps
  parent: System.Windows.Media.FontFamily
  langs:
  - csharp
  name: FamilyMaps
  nameWithType: FontFamily.FamilyMaps
  fullName: System.Windows.Media.FontFamily.FamilyMaps
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "取得集合<xref href=&quot;System.Windows.Media.FontFamilyMap&quot;></xref>物件。"
  remarks: "如<xref:System.Windows.Media.FontFamily>使用字型家族名稱所建立的物件，FamilyMaps 屬性會傳回空白、 唯讀集合。</xref:System.Windows.Media.FontFamily>       <xref:System.Windows.Media.FontFamilyMap>物件會定義用來顯示一組指定的 Unicode 字元指定的文化特性的哪一種字型。</xref:System.Windows.Media.FontFamilyMap>"
  syntax:
    content: public System.Windows.Media.FontFamilyMapCollection FamilyMaps { get; }
    return:
      type: System.Windows.Media.FontFamilyMapCollection
      description: "A <xref href=&quot;System.Windows.Media.FontFamilyMapCollection&quot;> </xref>包含<xref href=&quot;System.Windows.Media.FontFamilyMap&quot;></xref>物件。"
  overload: System.Windows.Media.FontFamily.FamilyMaps*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.FontFamily.FamilyNames
  id: FamilyNames
  parent: System.Windows.Media.FontFamily
  langs:
  - csharp
  name: FamilyNames
  nameWithType: FontFamily.FamilyNames
  fullName: System.Windows.Media.FontFamily.FamilyNames
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "取得字串的集合和<xref:System.Globalization.CultureInfo>值，表示字型家族名稱<xref href=&quot;System.Windows.Media.FontFamily&quot;></xref>物件。</xref:System.Globalization.CultureInfo>"
  remarks: ''
  example:
  - >-
    [!code-cs[FontSnippets#106](~/add/codesnippet/csharp/FontSnippets/Window1.xaml.cs#106)]
     [!code-vb[FontSnippets#106](~/add/codesnippet/visualbasic/fontsnippets/window1.xaml.vb#106)]
  syntax:
    content: public System.Windows.Media.LanguageSpecificStringDictionary FamilyNames { get; }
    return:
      type: System.Windows.Media.LanguageSpecificStringDictionary
      description: "A <xref href=&quot;System.Windows.Media.LanguageSpecificStringDictionary&quot;> </xref>表示字型家族名稱。"
  overload: System.Windows.Media.FontFamily.FamilyNames*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.FontFamily.FamilyTypefaces
  id: FamilyTypefaces
  parent: System.Windows.Media.FontFamily
  langs:
  - csharp
  name: FamilyTypefaces
  nameWithType: FontFamily.FamilyTypefaces
  fullName: System.Windows.Media.FontFamily.FamilyTypefaces
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "取得集合的字樣<xref href=&quot;System.Windows.Media.FontFamily&quot;></xref>物件。"
  remarks: "<a name=&quot;xamlPropertyElementUsage_FamilyTypefaces&quot;></a># # XAML 屬性項目用法```   <object>     <object.FamilyTypefaces>       <OneOrMoreFontFamilyTypefaces/>     </object.FamilyTypefaces>   </object>   ``` <a name=&quot;xamlValues_FamilyTypefaces&quot;> </a> # # XAML 值*OneOrMoreFontFamilyTypefaces*一或多個字樣<xref:System.Windows.Media.FontFamily>物件。</xref:System.Windows.Media.FontFamily>      "
  example:
  - >-
    [!code-cs[FontSnippets#107](~/add/codesnippet/csharp/FontSnippets/Window1.xaml.cs#107)]
     [!code-vb[FontSnippets#107](~/add/codesnippet/visualbasic/fontsnippets/window1.xaml.vb#107)]
  syntax:
    content: public System.Windows.Media.FamilyTypefaceCollection FamilyTypefaces { get; }
    return:
      type: System.Windows.Media.FamilyTypefaceCollection
      description: "A <xref href=&quot;System.Windows.Media.FamilyTypefaceCollection&quot;> </xref> ，表示集合的字樣<xref href=&quot;System.Windows.Media.FontFamily&quot;></xref>物件。"
  overload: System.Windows.Media.FontFamily.FamilyTypefaces*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.FontFamily.GetHashCode
  id: GetHashCode
  parent: System.Windows.Media.FontFamily
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: FontFamily.GetHashCode()
  fullName: System.Windows.Media.FontFamily.GetHashCode()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "做為雜湊函式<xref href=&quot;System.Windows.Media.FontFamily&quot;> </xref>。 很適合用於雜湊演算法和資料結構，例如雜湊表。"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "<xref:System.Int32>值，表示目前物件的雜湊碼。</xref:System.Int32>"
  overload: System.Windows.Media.FontFamily.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.FontFamily.GetTypefaces
  id: GetTypefaces
  parent: System.Windows.Media.FontFamily
  langs:
  - csharp
  name: GetTypefaces()
  nameWithType: FontFamily.GetTypefaces()
  fullName: System.Windows.Media.FontFamily.GetTypefaces()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "傳回的集合<xref href=&quot;System.Windows.Media.Typeface&quot;></xref>代表字體預設系統字型位置中的物件。"
  remarks: ''
  example:
  - >-
    [!code-cs[FontSnippets#104](~/add/codesnippet/csharp/FontSnippets/Window1.xaml.cs#104)]
     [!code-vb[FontSnippets#104](~/add/codesnippet/visualbasic/fontsnippets/window1.xaml.vb#104)]
  syntax:
    content: public System.Collections.Generic.ICollection<System.Windows.Media.Typeface> GetTypefaces ();
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{System.Windows.Media.Typeface}
      description: "&lt;Xref:System.Collections.Generic.ICollection%601&gt;的<xref href=&quot;System.Windows.Media.Typeface&quot;></xref>物件。"
  overload: System.Windows.Media.FontFamily.GetTypefaces*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.FontFamily.LineSpacing
  id: LineSpacing
  parent: System.Windows.Media.FontFamily
  langs:
  - csharp
  name: LineSpacing
  nameWithType: FontFamily.LineSpacing
  fullName: System.Windows.Media.FontFamily.LineSpacing
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "取得或設定列間距值<xref href=&quot;System.Windows.Media.FontFamily&quot;></xref>物件。 行距是建議的基準-基準距離中這種字型的 em 大小與文字。"
  syntax:
    content: public double LineSpacing { get; set; }
    return:
      type: System.Double
      description: "A<xref:System.Double>表示行距<xref href=&quot;System.Windows.Media.FontFamily&quot;></xref>物件。</xref:System.Double>"
  overload: System.Windows.Media.FontFamily.LineSpacing*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.FontFamily.Source
  id: Source
  parent: System.Windows.Media.FontFamily
  langs:
  - csharp
  name: Source
  nameWithType: FontFamily.Source
  fullName: System.Windows.Media.FontFamily.Source
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "取得用來建構字型家族名稱<xref href=&quot;System.Windows.Media.FontFamily&quot;></xref>物件。"
  remarks: "若要傳回基底[!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)]的<xref:System.Windows.Media.FontFamily>物件，使用<xref:System.Windows.Media.FontFamily.BaseUri%2A>.</xref:System.Windows.Media.FontFamily.BaseUri%2A></xref:System.Windows.Media.FontFamily>值       如果<xref:System.Windows.Media.FontFamily>已建立物件，而不指定字型家族名稱、 傳回值為<xref:System.String.Empty>。</xref:System.String.Empty> </xref:System.Windows.Media.FontFamily>"
  example:
  - "The following example shows the results of retrieving the <xref:System.Windows.Media.FontFamily.BaseUri%2A> and Source property values from a <xref:System.Windows.Media.FontFamily> object.  \n  \n [!code-vb[FontSnippets#FontPackageSnippet10](~/add/codesnippet/visualbasic/fontsnippets/fontpackagesnippets.xaml.vb#fontpackagesnippet10)]\n [!code-cs[FontSnippets#FontPackageSnippet10](~/add/codesnippet/csharp/FontSnippets/FontPackageSnippets.xaml.cs#fontpackagesnippet10)]"
  syntax:
    content: public string Source { get; }
    return:
      type: System.String
      description: "字型家族名稱<xref href=&quot;System.Windows.Media.FontFamily&quot;></xref>物件。"
  overload: System.Windows.Media.FontFamily.Source*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.FontFamily.ToString
  id: ToString
  parent: System.Windows.Media.FontFamily
  langs:
  - csharp
  name: ToString()
  nameWithType: FontFamily.ToString()
  fullName: System.Windows.Media.FontFamily.ToString()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "傳回的值<xref:System.Windows.Media.FontFamily.Source*>屬性。</xref:System.Windows.Media.FontFamily.Source*>"
  remarks: "如果<xref:System.Windows.Media.FontFamily>已建立物件，而不指定字型家族名稱、 傳回值為<xref:System.String.Empty>。</xref:System.String.Empty> </xref:System.Windows.Media.FontFamily>"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "來源位置<xref href=&quot;System.Windows.Media.FontFamily&quot;></xref>物件，包括目錄或[!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)]位置參考。"
  overload: System.Windows.Media.FontFamily.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Windows.Media.FontFamily.#ctor
  parent: System.Windows.Media.FontFamily
  isExternal: false
  name: FontFamily()
  nameWithType: FontFamily.FontFamily()
  fullName: System.Windows.Media.FontFamily.FontFamily()
- uid: System.Windows.Media.FontFamily.#ctor(System.String)
  parent: System.Windows.Media.FontFamily
  isExternal: false
  name: FontFamily(String)
  nameWithType: FontFamily.FontFamily(String)
  fullName: System.Windows.Media.FontFamily.FontFamily(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Media.FontFamily.#ctor(System.Uri,System.String)
  parent: System.Windows.Media.FontFamily
  isExternal: false
  name: FontFamily(Uri,String)
  nameWithType: FontFamily.FontFamily(Uri,String)
  fullName: System.Windows.Media.FontFamily.FontFamily(Uri,String)
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Windows.Media.FontFamily.Baseline
  parent: System.Windows.Media.FontFamily
  isExternal: false
  name: Baseline
  nameWithType: FontFamily.Baseline
  fullName: System.Windows.Media.FontFamily.Baseline
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Windows.Media.FontFamily.BaseUri
  parent: System.Windows.Media.FontFamily
  isExternal: false
  name: BaseUri
  nameWithType: FontFamily.BaseUri
  fullName: System.Windows.Media.FontFamily.BaseUri
- uid: System.Windows.Media.FontFamily.Equals(System.Object)
  parent: System.Windows.Media.FontFamily
  isExternal: false
  name: Equals(Object)
  nameWithType: FontFamily.Equals(Object)
  fullName: System.Windows.Media.FontFamily.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Media.FontFamily.FamilyMaps
  parent: System.Windows.Media.FontFamily
  isExternal: false
  name: FamilyMaps
  nameWithType: FontFamily.FamilyMaps
  fullName: System.Windows.Media.FontFamily.FamilyMaps
- uid: System.Windows.Media.FontFamilyMapCollection
  parent: System.Windows.Media
  isExternal: false
  name: FontFamilyMapCollection
  nameWithType: FontFamilyMapCollection
  fullName: System.Windows.Media.FontFamilyMapCollection
- uid: System.Windows.Media.FontFamily.FamilyNames
  parent: System.Windows.Media.FontFamily
  isExternal: false
  name: FamilyNames
  nameWithType: FontFamily.FamilyNames
  fullName: System.Windows.Media.FontFamily.FamilyNames
- uid: System.Windows.Media.LanguageSpecificStringDictionary
  parent: System.Windows.Media
  isExternal: false
  name: LanguageSpecificStringDictionary
  nameWithType: LanguageSpecificStringDictionary
  fullName: System.Windows.Media.LanguageSpecificStringDictionary
- uid: System.Windows.Media.FontFamily.FamilyTypefaces
  parent: System.Windows.Media.FontFamily
  isExternal: false
  name: FamilyTypefaces
  nameWithType: FontFamily.FamilyTypefaces
  fullName: System.Windows.Media.FontFamily.FamilyTypefaces
- uid: System.Windows.Media.FamilyTypefaceCollection
  parent: System.Windows.Media
  isExternal: false
  name: FamilyTypefaceCollection
  nameWithType: FamilyTypefaceCollection
  fullName: System.Windows.Media.FamilyTypefaceCollection
- uid: System.Windows.Media.FontFamily.GetHashCode
  parent: System.Windows.Media.FontFamily
  isExternal: false
  name: GetHashCode()
  nameWithType: FontFamily.GetHashCode()
  fullName: System.Windows.Media.FontFamily.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Media.FontFamily.GetTypefaces
  parent: System.Windows.Media.FontFamily
  isExternal: false
  name: GetTypefaces()
  nameWithType: FontFamily.GetTypefaces()
  fullName: System.Windows.Media.FontFamily.GetTypefaces()
- uid: System.Collections.Generic.ICollection{System.Windows.Media.Typeface}
  parent: System.Collections.Generic
  isExternal: true
  name: ICollection<Typeface>
  nameWithType: ICollection<Typeface>
  fullName: System.Collections.Generic.ICollection<System.Windows.Media.Typeface>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection<System.Windows.Media.Typeface>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Media.Typeface
    name: Typeface
    nameWithType: Typeface
    fullName: Typeface
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Media.FontFamily.LineSpacing
  parent: System.Windows.Media.FontFamily
  isExternal: false
  name: LineSpacing
  nameWithType: FontFamily.LineSpacing
  fullName: System.Windows.Media.FontFamily.LineSpacing
- uid: System.Windows.Media.FontFamily.Source
  parent: System.Windows.Media.FontFamily
  isExternal: false
  name: Source
  nameWithType: FontFamily.Source
  fullName: System.Windows.Media.FontFamily.Source
- uid: System.Windows.Media.FontFamily.ToString
  parent: System.Windows.Media.FontFamily
  isExternal: false
  name: ToString()
  nameWithType: FontFamily.ToString()
  fullName: System.Windows.Media.FontFamily.ToString()
- uid: System.Windows.Media.FontFamily.#ctor*
  parent: System.Windows.Media.FontFamily
  isExternal: false
  name: FontFamily
  nameWithType: FontFamily.FontFamily
- uid: System.Windows.Media.FontFamily.Baseline*
  parent: System.Windows.Media.FontFamily
  isExternal: false
  name: Baseline
  nameWithType: FontFamily.Baseline
- uid: System.Windows.Media.FontFamily.BaseUri*
  parent: System.Windows.Media.FontFamily
  isExternal: false
  name: BaseUri
  nameWithType: FontFamily.BaseUri
- uid: System.Windows.Media.FontFamily.Equals*
  parent: System.Windows.Media.FontFamily
  isExternal: false
  name: Equals
  nameWithType: FontFamily.Equals
- uid: System.Windows.Media.FontFamily.FamilyMaps*
  parent: System.Windows.Media.FontFamily
  isExternal: false
  name: FamilyMaps
  nameWithType: FontFamily.FamilyMaps
- uid: System.Windows.Media.FontFamily.FamilyNames*
  parent: System.Windows.Media.FontFamily
  isExternal: false
  name: FamilyNames
  nameWithType: FontFamily.FamilyNames
- uid: System.Windows.Media.FontFamily.FamilyTypefaces*
  parent: System.Windows.Media.FontFamily
  isExternal: false
  name: FamilyTypefaces
  nameWithType: FontFamily.FamilyTypefaces
- uid: System.Windows.Media.FontFamily.GetHashCode*
  parent: System.Windows.Media.FontFamily
  isExternal: false
  name: GetHashCode
  nameWithType: FontFamily.GetHashCode
- uid: System.Windows.Media.FontFamily.GetTypefaces*
  parent: System.Windows.Media.FontFamily
  isExternal: false
  name: GetTypefaces
  nameWithType: FontFamily.GetTypefaces
- uid: System.Windows.Media.FontFamily.LineSpacing*
  parent: System.Windows.Media.FontFamily
  isExternal: false
  name: LineSpacing
  nameWithType: FontFamily.LineSpacing
- uid: System.Windows.Media.FontFamily.Source*
  parent: System.Windows.Media.FontFamily
  isExternal: false
  name: Source
  nameWithType: FontFamily.Source
- uid: System.Windows.Media.FontFamily.ToString*
  parent: System.Windows.Media.FontFamily
  isExternal: false
  name: ToString
  nameWithType: FontFamily.ToString
