### YamlMime:ManagedReference
items:
- uid: System.Security.Permissions.WebBrowserPermissionAttribute
  id: WebBrowserPermissionAttribute
  children:
  - System.Security.Permissions.WebBrowserPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)
  - System.Security.Permissions.WebBrowserPermissionAttribute.CreatePermission
  - System.Security.Permissions.WebBrowserPermissionAttribute.Level
  langs:
  - csharp
  name: WebBrowserPermissionAttribute
  nameWithType: WebBrowserPermissionAttribute
  fullName: System.Security.Permissions.WebBrowserPermissionAttribute
  type: Class
  summary: "可讓安全性動作<xref href=&quot;System.Security.Permissions.WebBrowserPermission&quot;></xref>来套用至使用宣告式安全性的程式碼。"
  remarks: "WebBrowserPermissionAttribute 控制網頁瀏覽器控制項能夠在 Windows Presentation Foundation (WPF) 應用程式中執行。 宣告所允許的範圍需視<xref:System.Security.Permissions.SecurityAction>用。</xref:System.Security.Permissions.SecurityAction>       安全性屬性所宣告的安全性資訊儲存在屬性目標的中繼資料，而且由系統在執行階段存取。 安全性屬性僅用於宣告式安全性。 命令式安全性，使用對應的權限類別<xref:System.Security.Permissions.WebBrowserPermission>.</xref:System.Security.Permissions.WebBrowserPermission>      ## XAML 屬性使用此類別通常不是在 XAML 中使用。"
  example:
  - "The following example shows how to demand that the calling code has unrestricted permission to create a Web browser control.  \n  \n [!code-cs[WebBrowserPermissionsSnippets#WebBrowserPermissionAttribute3](~/add/codesnippet/csharp/WebBrowserPermissionsSnippets/Window1.xaml.cs#webbrowserpermissionattribute3)]\n [!code-vb[WebBrowserPermissionsSnippets#WebBrowserPermissionAttribute3](~/add/codesnippet/visualbasic/webbrowserpermissionssnippets/window1.xaml.vb#webbrowserpermissionattribute3)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Assembly | System.AttributeTargets.Class | System.AttributeTargets.Struct | System.AttributeTargets.Constructor | System.AttributeTargets.Method, AllowMultiple=true, Inherited=false)]

      public sealed class WebBrowserPermissionAttribute : System.Security.Permissions.CodeAccessSecurityAttribute
  inheritance:
  - System.Attribute
  - System.Security.Permissions.SecurityAttribute
  - System.Security.Permissions.CodeAccessSecurityAttribute
  implements: []
  inheritedMembers:
  - System.Security.Permissions.SecurityAttribute.Action
  - System.Security.Permissions.SecurityAttribute.Unrestricted
  platform:
  - net462
- uid: System.Security.Permissions.WebBrowserPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)
  id: '#ctor(System.Security.Permissions.SecurityAction)'
  parent: System.Security.Permissions.WebBrowserPermissionAttribute
  langs:
  - csharp
  name: WebBrowserPermissionAttribute(SecurityAction)
  nameWithType: WebBrowserPermissionAttribute.WebBrowserPermissionAttribute(SecurityAction)
  fullName: System.Security.Permissions.WebBrowserPermissionAttribute.WebBrowserPermissionAttribute(SecurityAction)
  type: Constructor
  assemblies:
  - WindowsBase
  namespace: System.Security.Permissions
  summary: "初始化的新執行個體<xref href=&quot;System.Security.Permissions.WebBrowserPermissionAttribute&quot;></xref>類別具有指定<xref href=&quot;System.Security.Permissions.SecurityAction&quot;> </xref>。"
  remarks: "預設值的<xref:System.Security.Permissions.WebBrowserPermissionAttribute.Level%2A>屬性是<xref:System.Security.Permissions.WebBrowserPermissionLevel>.</xref:System.Security.Permissions.WebBrowserPermissionLevel> </xref:System.Security.Permissions.WebBrowserPermissionAttribute.Level%2A>      ## 這個類別的 XAML 屬性使用方式的成員不常使用中[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]，或不能用於在[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]。"
  example:
  - "The following example shows how to define a <xref:System.Security.Permissions.WebBrowserPermissionAttribute>.  \n  \n [!code-cs[WebBrowserPermissionsSnippets#WebBrowserPermissionAttribute4](~/add/codesnippet/csharp/WebBrowserPermissionsSnippets/Window1.xaml.cs#webbrowserpermissionattribute4)]\n [!code-vb[WebBrowserPermissionsSnippets#WebBrowserPermissionAttribute4](~/add/codesnippet/visualbasic/webbrowserpermissionssnippets/window1.xaml.vb#webbrowserpermissionattribute4)]"
  syntax:
    content: public WebBrowserPermissionAttribute (System.Security.Permissions.SecurityAction action);
    parameters:
    - id: action
      type: System.Security.Permissions.SecurityAction
      description: "其中一個<xref href=&quot;System.Security.Permissions.SecurityAction&quot;></xref>值。"
  overload: System.Security.Permissions.WebBrowserPermissionAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.WebBrowserPermissionAttribute.CreatePermission
  id: CreatePermission
  parent: System.Security.Permissions.WebBrowserPermissionAttribute
  langs:
  - csharp
  name: CreatePermission()
  nameWithType: WebBrowserPermissionAttribute.CreatePermission()
  fullName: System.Security.Permissions.WebBrowserPermissionAttribute.CreatePermission()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Security.Permissions
  summary: "建立並傳回的新執行個體<xref href=&quot;System.Security.Permissions.WebBrowserPermission&quot;></xref>類別。"
  remarks: "CreatePermission 方法是由安全性系統呼叫，不是由應用程式程式碼。       所描述的安全性資訊<xref:System.Security.Permissions.WebBrowserPermissionAttribute>屬性目標的類別的中繼資料內儲存<xref:System.Security.Permissions.WebBrowserPermissionAttribute>套用。</xref:System.Security.Permissions.WebBrowserPermissionAttribute> </xref:System.Security.Permissions.WebBrowserPermissionAttribute> 系統會存取執行階段資訊。 系統會使用<xref:System.Security.Permissions.WebBrowserPermission>CreatePermission 將屬性目標的安全性資訊儲存在中繼資料的可序列化形式，為所傳回。</xref:System.Security.Permissions.WebBrowserPermission>      ## 這個類別的 XAML 屬性使用方式的成員不常使用中[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]，或不能用於在[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]。"
  syntax:
    content: public override System.Security.IPermission CreatePermission ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: "A <xref href=&quot;System.Security.Permissions.WebBrowserPermission&quot;> </xref>對應到安全性宣告。"
  overload: System.Security.Permissions.WebBrowserPermissionAttribute.CreatePermission*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.WebBrowserPermissionAttribute.Level
  id: Level
  parent: System.Security.Permissions.WebBrowserPermissionAttribute
  langs:
  - csharp
  name: Level
  nameWithType: WebBrowserPermissionAttribute.Level
  fullName: System.Security.Permissions.WebBrowserPermissionAttribute.Level
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Security.Permissions
  summary: "取得或設定目前 Web 瀏覽器權限層級<xref href=&quot;System.Security.Permissions.WebBrowserPermissionAttribute&quot;> </xref>。"
  remarks: "預設值是<xref:System.Security.Permissions.WebBrowserPermissionLevel>.</xref:System.Security.Permissions.WebBrowserPermissionLevel>      ## 這個類別的 XAML 屬性使用方式的成員不常使用中[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]，或不能用於在[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]。"
  example:
  - "The following example shows how to demand that the calling code has permission to create a Web browser control that runs at a safe level.  \n  \n [!code-cs[WebBrowserPermissionsSnippets#WebBrowserPermissionAttribute2](~/add/codesnippet/csharp/WebBrowserPermissionsSnippets/Window1.xaml.cs#webbrowserpermissionattribute2)]\n [!code-vb[WebBrowserPermissionsSnippets#WebBrowserPermissionAttribute2](~/add/codesnippet/visualbasic/webbrowserpermissionssnippets/window1.xaml.vb#webbrowserpermissionattribute2)]"
  syntax:
    content: public System.Security.Permissions.WebBrowserPermissionLevel Level { get; set; }
    return:
      type: System.Security.Permissions.WebBrowserPermissionLevel
      description: "目前 Web 瀏覽器權限層級的狀態。"
  overload: System.Security.Permissions.WebBrowserPermissionAttribute.Level*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.Permissions.CodeAccessSecurityAttribute
  isExternal: false
  name: System.Security.Permissions.CodeAccessSecurityAttribute
- uid: System.Security.Permissions.WebBrowserPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)
  parent: System.Security.Permissions.WebBrowserPermissionAttribute
  isExternal: false
  name: WebBrowserPermissionAttribute(SecurityAction)
  nameWithType: WebBrowserPermissionAttribute.WebBrowserPermissionAttribute(SecurityAction)
  fullName: System.Security.Permissions.WebBrowserPermissionAttribute.WebBrowserPermissionAttribute(SecurityAction)
- uid: System.Security.Permissions.SecurityAction
  parent: System.Security.Permissions
  isExternal: false
  name: SecurityAction
  nameWithType: SecurityAction
  fullName: System.Security.Permissions.SecurityAction
- uid: System.Security.Permissions.WebBrowserPermissionAttribute.CreatePermission
  parent: System.Security.Permissions.WebBrowserPermissionAttribute
  isExternal: false
  name: CreatePermission()
  nameWithType: WebBrowserPermissionAttribute.CreatePermission()
  fullName: System.Security.Permissions.WebBrowserPermissionAttribute.CreatePermission()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Security.Permissions.WebBrowserPermissionAttribute.Level
  parent: System.Security.Permissions.WebBrowserPermissionAttribute
  isExternal: false
  name: Level
  nameWithType: WebBrowserPermissionAttribute.Level
  fullName: System.Security.Permissions.WebBrowserPermissionAttribute.Level
- uid: System.Security.Permissions.WebBrowserPermissionLevel
  parent: System.Security.Permissions
  isExternal: false
  name: WebBrowserPermissionLevel
  nameWithType: WebBrowserPermissionLevel
  fullName: System.Security.Permissions.WebBrowserPermissionLevel
- uid: System.Security.Permissions.WebBrowserPermissionAttribute.#ctor*
  parent: System.Security.Permissions.WebBrowserPermissionAttribute
  isExternal: false
  name: WebBrowserPermissionAttribute
  nameWithType: WebBrowserPermissionAttribute.WebBrowserPermissionAttribute
- uid: System.Security.Permissions.WebBrowserPermissionAttribute.CreatePermission*
  parent: System.Security.Permissions.WebBrowserPermissionAttribute
  isExternal: false
  name: CreatePermission
  nameWithType: WebBrowserPermissionAttribute.CreatePermission
- uid: System.Security.Permissions.WebBrowserPermissionAttribute.Level*
  parent: System.Security.Permissions.WebBrowserPermissionAttribute
  isExternal: false
  name: Level
  nameWithType: WebBrowserPermissionAttribute.Level
