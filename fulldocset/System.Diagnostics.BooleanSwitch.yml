### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.BooleanSwitch
  id: BooleanSwitch
  children:
  - System.Diagnostics.BooleanSwitch.#ctor(System.String,System.String)
  - System.Diagnostics.BooleanSwitch.#ctor(System.String,System.String,System.String)
  - System.Diagnostics.BooleanSwitch.Enabled
  - System.Diagnostics.BooleanSwitch.OnValueChanged
  langs:
  - csharp
  name: BooleanSwitch
  nameWithType: BooleanSwitch
  fullName: System.Diagnostics.BooleanSwitch
  type: Class
  summary: "提供簡單的開啟/關閉參數，可控制偵錯和追蹤輸出。"
  remarks: "您可以使用布林追蹤參數，以啟用或停用根據其重要性排序訊息。 使用<xref:System.Diagnostics.BooleanSwitch.Enabled%2A>屬性來取得參數的目前值。</xref:System.Diagnostics.BooleanSwitch.Enabled%2A>       您可以啟用或透過應用程式組態檔停用 BooleanSwitch，然後使用 應用程式中的 設定的 BooleanSwitch 值。 或者，您可以在您的程式碼中建立 BooleanSwitch 和設定<xref:System.Diagnostics.BooleanSwitch.Enabled%2A>直接來檢測程式碼的特定區段的屬性。</xref:System.Diagnostics.BooleanSwitch.Enabled%2A>       若要設定 BooleanSwitch，編輯組態檔對應到您的應用程式的名稱。 在這個檔案中，您可以新增或移除參數、 設定參數的值，或清除所有應用程式先前設定的參數。 組態檔應該格式如下列範例所示。      ```   <configuration>     <system.diagnostics>       <switches>         <add name=&quot;mySwitch&quot; value=&quot;1&quot;/>       </switches>     </system.diagnostics>   </configuration>   ```這個範例組態區段會定義與 BooleanSwitch<xref:System.Diagnostics.Switch.DisplayName%2A>屬性設定為`mySwitch`和<xref:System.Diagnostics.BooleanSwitch.Enabled%2A>值設定為`true`。</xref:System.Diagnostics.BooleanSwitch.Enabled%2A> </xref:System.Diagnostics.Switch.DisplayName%2A> 應用程式中您可以藉由使用相同的名稱，建立 BooleanSwitch 使用設定的參數值，如下列程式碼範例所示。       [!code-cpp[傳統 BooleanSwitch.BooleanSwitch 範例&#2;](~/add/codesnippet/cpp/t-system.diagnostics.boo_1.cpp)][!code-vb[傳統 BooleanSwitch.BooleanSwitch 範例&#2;](~/add/codesnippet/visualbasic/t-system.diagnostics.boo_1.vb)][!code-cs[傳統 BooleanSwitch.BooleanSwitch 範例&#2;](~/add/codesnippet/csharp/t-system.diagnostics.boo_1.cs) ]根據預設，<xref:System.Diagnostics.BooleanSwitch.Enabled%2A>屬性會設定使用組態檔中指定的值。</xref:System.Diagnostics.BooleanSwitch.Enabled%2A>     設定參數值為 0 時可設定<xref:System.Diagnostics.BooleanSwitch.Enabled%2A>屬性`false`; 設定為非零值以設定參數<xref:System.Diagnostics.BooleanSwitch.Enabled%2A>屬性`true`。</xref:System.Diagnostics.BooleanSwitch.Enabled%2A> </xref:System.Diagnostics.BooleanSwitch.Enabled%2A> 如果 BooleanSwitch 建構函式組態檔中找不到初始參數設定<xref:System.Diagnostics.BooleanSwitch.Enabled%2A>屬性的新參數設定為`false`預設。</xref:System.Diagnostics.BooleanSwitch.Enabled%2A>       您必須啟用追蹤或偵錯，以使用參數。 下列語法是特定的編譯器。 如果您使用 C# 或 Visual Basic 以外的編譯器，請參閱編譯器的文件。      -若要啟用偵錯 C# 中，加入`/d:DEBUG`旗標設為編譯器命令列，當您編譯程式碼，或者您可以加入`#define DEBUG`加入您的檔案頂端。 在 Visual Basic 中，加入`/d:DEBUG=True`編譯器命令列的旗標。      -若要啟用追蹤，在 C# 中的，加入`/d:TRACE`旗標設為編譯器命令列，當您編譯程式碼，或新增`#define TRACE`加入您的檔案頂端。 在 Visual Basic 中，加入`/d:TRACE=True`編譯器命令列的旗標。      > [!NOTE] > 這些偵錯和追蹤編譯器參數時不需要的隔離中使用 BooleanSwitch 類別。 它們只需要搭配<xref:System.Diagnostics.Trace>或<xref:System.Diagnostics.Debug>有條件地編譯的方法。</xref:System.Diagnostics.Debug> </xref:System.Diagnostics.Trace>       如需有關如何檢測您的應用程式的詳細資訊，請參閱<xref:System.Diagnostics.Debug>和<xref:System.Diagnostics.Trace>。</xref:System.Diagnostics.Trace> </xref:System.Diagnostics.Debug> 如需有關設定和使用追蹤參數的詳細資訊，請參閱[追蹤參數](~/add/includes/ajax-current-ext-md.md)。      > [!NOTE] > 來改善效能，您可以進行 BooleanSwitch 成員`static`在您的類別。"
  example:
  - "The following example creates a BooleanSwitch and uses the switch to determine whether to print an error message. You create the switch at the class level. The `Main` method passes its location to `MyMethod`, which prints an error message and where the error occurred.  \n  \n [!code-vb[Classic BooleanSwitch.BooleanSwitch Example#1](~/add/codesnippet/visualbasic/t-system.diagnostics.boo_2.vb)]\n [!code-cpp[Classic BooleanSwitch.BooleanSwitch Example#1](~/add/codesnippet/cpp/t-system.diagnostics.boo_2.cpp)]\n [!code-cs[Classic BooleanSwitch.BooleanSwitch Example#1](~/add/codesnippet/csharp/t-system.diagnostics.boo_2.cs)]"
  syntax:
    content: >-
      [System.Diagnostics.SwitchLevel(typeof(System.Boolean))]

      public class BooleanSwitch : System.Diagnostics.Switch
  inheritance:
  - System.Object
  - System.Diagnostics.Switch
  implements: []
  inheritedMembers:
  - System.Diagnostics.Switch.Attributes
  - System.Diagnostics.Switch.Description
  - System.Diagnostics.Switch.DisplayName
  - System.Diagnostics.Switch.GetSupportedAttributes
  - System.Diagnostics.Switch.OnSwitchSettingChanged
  - System.Diagnostics.Switch.SwitchSetting
  - System.Diagnostics.Switch.Value
  platform:
  - net462
- uid: System.Diagnostics.BooleanSwitch.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Diagnostics.BooleanSwitch
  langs:
  - csharp
  name: BooleanSwitch(String,String)
  nameWithType: BooleanSwitch.BooleanSwitch(String,String)
  fullName: System.Diagnostics.BooleanSwitch.BooleanSwitch(String,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "初始化的新執行個體<xref href=&quot;System.Diagnostics.BooleanSwitch&quot;></xref>類別具有指定的顯示名稱和描述。"
  remarks: "當您建立<xref:System.Diagnostics.BooleanSwitch>、`displayName`參數用來尋找初始參數設定。</xref:System.Diagnostics.BooleanSwitch> 如果建構函式找不到初始設定，<xref:System.Diagnostics.BooleanSwitch.Enabled%2A>屬性設定為`false`（停用）。</xref:System.Diagnostics.BooleanSwitch.Enabled%2A>       若要設定的層級您<xref:System.Diagnostics.BooleanSwitch>，編輯組態檔對應到您的應用程式的名稱。</xref:System.Diagnostics.BooleanSwitch> 在這個檔案中，可以加入某個參數，並將其值設定、 移除參數，或清除所有先前設定的應用程式的參數。 組態檔的格式應類似下列的範例︰ ```   <configuration>       <system.diagnostics>          <switches>             <add name=&quot;mySwitch&quot; value=&quot;10&quot; />             <add name=&quot;myNewSwitch&quot; value=&quot;20&quot; />             <remove name=&quot;mySwitch&quot; />             <clear/>          </switches>       </system.diagnostics>    </configuration>   ```       >  [!NOTE] > 所建立的參數應該是`static`。"
  example:
  - "The following example creates a <xref:System.Diagnostics.BooleanSwitch> and uses the switch to determine whether to print an error message. The switch is created at the class level. The `Main` method passes its location to `MyMethod`, which prints an error message and where the error occurred.  \n  \n [!code-vb[Classic BooleanSwitch.BooleanSwitch Example#1](~/add/codesnippet/visualbasic/m-system.diagnostics.boo_1.vb)]\n [!code-cpp[Classic BooleanSwitch.BooleanSwitch Example#1](~/add/codesnippet/cpp/m-system.diagnostics.boo_1.cpp)]\n [!code-cs[Classic BooleanSwitch.BooleanSwitch Example#1](~/add/codesnippet/csharp/m-system.diagnostics.boo_1.cs)]"
  syntax:
    content: public BooleanSwitch (string displayName, string description);
    parameters:
    - id: displayName
      type: System.String
      description: "要在使用者介面上顯示的名稱。"
    - id: description
      type: System.String
      description: "參數的描述。"
  overload: System.Diagnostics.BooleanSwitch.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.BooleanSwitch.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: System.Diagnostics.BooleanSwitch
  langs:
  - csharp
  name: BooleanSwitch(String,String,String)
  nameWithType: BooleanSwitch.BooleanSwitch(String,String,String)
  fullName: System.Diagnostics.BooleanSwitch.BooleanSwitch(String,String,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "初始化的新執行個體<xref href=&quot;System.Diagnostics.BooleanSwitch&quot;></xref>類別，以指定的顯示名稱、 描述以及預設參數值。"
  remarks: "`displayName`參數用來設定的值<xref:System.Diagnostics.Switch.DisplayName%2A>屬性，而`description`參數用來設定的值<xref:System.Diagnostics.Switch.Description%2A>屬性。</xref:System.Diagnostics.Switch.Description%2A> </xref:System.Diagnostics.Switch.DisplayName%2A> `defaultSwitchValue`參數是儲存為欄位，用來初始化<xref:System.Diagnostics.Switch.Value%2A>上第一個參考的屬性。</xref:System.Diagnostics.Switch.Value%2A> 如需使用建構函式的詳細資訊，請參閱<xref:System.Diagnostics.BooleanSwitch.%23ctor%28System.String%2CSystem.String%29>建構函式。</xref:System.Diagnostics.BooleanSwitch.%23ctor%28System.String%2CSystem.String%29>"
  syntax:
    content: public BooleanSwitch (string displayName, string description, string defaultSwitchValue);
    parameters:
    - id: displayName
      type: System.String
      description: "要在使用者介面上顯示的名稱。"
    - id: description
      type: System.String
      description: "參數的描述。"
    - id: defaultSwitchValue
      type: System.String
      description: "參數的預設值。"
  overload: System.Diagnostics.BooleanSwitch.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.BooleanSwitch.Enabled
  id: Enabled
  parent: System.Diagnostics.BooleanSwitch
  langs:
  - csharp
  name: Enabled
  nameWithType: BooleanSwitch.Enabled
  fullName: System.Diagnostics.BooleanSwitch.Enabled
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "取得或設定值，指出參數是否要啟用或停用。"
  remarks: "根據預設，這個欄位設定為`false`（停用）。 若要啟用此參數，此欄位的值指派`true`。 若要停用此參數，將值指定給`false`。  這個屬性的值取決於基底類別屬性<xref:System.Diagnostics.Switch.SwitchSetting%2A>.</xref:System.Diagnostics.Switch.SwitchSetting%2A>的值      > [!NOTE] > 這個方法會使用<xref:System.Security.Permissions.SecurityAction?displayProperty=fullName>以防止從信任的程式碼呼叫的旗標; 立即呼叫端必須要有<xref:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode%2A?displayProperty=fullName>權限。</xref:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode%2A?displayProperty=fullName> </xref:System.Security.Permissions.SecurityAction?displayProperty=fullName> 如果您的程式碼可以呼叫從部分信任程式碼，不要傳遞的使用者輸入<xref:System.Runtime.InteropServices.Marshal>類別而不需驗證方法。</xref:System.Runtime.InteropServices.Marshal>"
  example:
  - "The following code example creates a <xref:System.Diagnostics.BooleanSwitch> and uses the switch to determine whether to print an error message. The switch is created at the class level. The `Main` method passes its location to `MyMethod`, which prints an error message and the location where the error occurred.  \n  \n [!code-cpp[Classic BooleanSwitch.Enabled Example#1](~/add/codesnippet/cpp/p-system.diagnostics.boo_1.cpp)]\n [!code-cs[Classic BooleanSwitch.Enabled Example#1](~/add/codesnippet/csharp/p-system.diagnostics.boo_1.cs)]\n [!code-vb[Classic BooleanSwitch.Enabled Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.boo_1.vb)]"
  syntax:
    content: public bool Enabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果參數啟用。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Diagnostics.BooleanSwitch.Enabled*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "呼叫端沒有正確的權限。"
  platform:
  - net462
- uid: System.Diagnostics.BooleanSwitch.OnValueChanged
  id: OnValueChanged
  parent: System.Diagnostics.BooleanSwitch
  langs:
  - csharp
  name: OnValueChanged()
  nameWithType: BooleanSwitch.OnValueChanged()
  fullName: System.Diagnostics.BooleanSwitch.OnValueChanged()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "決定是否的新值<xref:System.Diagnostics.Switch.Value*>屬性可以剖析為布林值。</xref:System.Diagnostics.Switch.Value*>"
  remarks: "OnValueChanged 方法判斷新的值是否為布林值 （&quot;false&quot;或&quot;true&quot;） 的有效字串表示。 如果該方法的設定，<xref:System.Diagnostics.Switch.SwitchSetting%2A>屬性為 0 或 1。</xref:System.Diagnostics.Switch.SwitchSetting%2A>  否則，呼叫基底方法，可將字串值轉換成整數值，然後用來設定<xref:System.Diagnostics.Switch.SwitchSetting%2A>屬性。</xref:System.Diagnostics.Switch.SwitchSetting%2A>"
  syntax:
    content: protected override void OnValueChanged ();
    parameters: []
  overload: System.Diagnostics.BooleanSwitch.OnValueChanged*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Diagnostics.Switch
  isExternal: false
  name: System.Diagnostics.Switch
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.Diagnostics.BooleanSwitch.#ctor(System.String,System.String)
  parent: System.Diagnostics.BooleanSwitch
  isExternal: false
  name: BooleanSwitch(String,String)
  nameWithType: BooleanSwitch.BooleanSwitch(String,String)
  fullName: System.Diagnostics.BooleanSwitch.BooleanSwitch(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Diagnostics.BooleanSwitch.#ctor(System.String,System.String,System.String)
  parent: System.Diagnostics.BooleanSwitch
  isExternal: false
  name: BooleanSwitch(String,String,String)
  nameWithType: BooleanSwitch.BooleanSwitch(String,String,String)
  fullName: System.Diagnostics.BooleanSwitch.BooleanSwitch(String,String,String)
- uid: System.Diagnostics.BooleanSwitch.Enabled
  parent: System.Diagnostics.BooleanSwitch
  isExternal: false
  name: Enabled
  nameWithType: BooleanSwitch.Enabled
  fullName: System.Diagnostics.BooleanSwitch.Enabled
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Diagnostics.BooleanSwitch.OnValueChanged
  parent: System.Diagnostics.BooleanSwitch
  isExternal: false
  name: OnValueChanged()
  nameWithType: BooleanSwitch.OnValueChanged()
  fullName: System.Diagnostics.BooleanSwitch.OnValueChanged()
- uid: System.Diagnostics.BooleanSwitch.#ctor*
  parent: System.Diagnostics.BooleanSwitch
  isExternal: false
  name: BooleanSwitch
  nameWithType: BooleanSwitch.BooleanSwitch
- uid: System.Diagnostics.BooleanSwitch.Enabled*
  parent: System.Diagnostics.BooleanSwitch
  isExternal: false
  name: Enabled
  nameWithType: BooleanSwitch.Enabled
- uid: System.Diagnostics.BooleanSwitch.OnValueChanged*
  parent: System.Diagnostics.BooleanSwitch
  isExternal: false
  name: OnValueChanged
  nameWithType: BooleanSwitch.OnValueChanged
