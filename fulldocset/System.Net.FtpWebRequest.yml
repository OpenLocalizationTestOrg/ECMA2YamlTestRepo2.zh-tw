### YamlMime:ManagedReference
items:
- uid: System.Net.FtpWebRequest
  id: FtpWebRequest
  children:
  - System.Net.FtpWebRequest.Abort
  - System.Net.FtpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)
  - System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)
  - System.Net.FtpWebRequest.ClientCertificates
  - System.Net.FtpWebRequest.ConnectionGroupName
  - System.Net.FtpWebRequest.ContentLength
  - System.Net.FtpWebRequest.ContentOffset
  - System.Net.FtpWebRequest.ContentType
  - System.Net.FtpWebRequest.Credentials
  - System.Net.FtpWebRequest.DefaultCachePolicy
  - System.Net.FtpWebRequest.EnableSsl
  - System.Net.FtpWebRequest.EndGetRequestStream(System.IAsyncResult)
  - System.Net.FtpWebRequest.EndGetResponse(System.IAsyncResult)
  - System.Net.FtpWebRequest.GetRequestStream
  - System.Net.FtpWebRequest.GetResponse
  - System.Net.FtpWebRequest.Headers
  - System.Net.FtpWebRequest.KeepAlive
  - System.Net.FtpWebRequest.Method
  - System.Net.FtpWebRequest.PreAuthenticate
  - System.Net.FtpWebRequest.Proxy
  - System.Net.FtpWebRequest.ReadWriteTimeout
  - System.Net.FtpWebRequest.RenameTo
  - System.Net.FtpWebRequest.RequestUri
  - System.Net.FtpWebRequest.ServicePoint
  - System.Net.FtpWebRequest.Timeout
  - System.Net.FtpWebRequest.UseBinary
  - System.Net.FtpWebRequest.UseDefaultCredentials
  - System.Net.FtpWebRequest.UsePassive
  langs:
  - csharp
  name: FtpWebRequest
  nameWithType: FtpWebRequest
  fullName: System.Net.FtpWebRequest
  type: Class
  summary: "實作檔案傳輸通訊協定 (FTP) 用戶端。"
  remarks: "若要取得 FtpWebRequest 的執行個體，請使用<xref:System.Net.WebRequest.Create%2A>方法。</xref:System.Net.WebRequest.Create%2A> 您也可以使用<xref:System.Net.WebClient>類別上傳和下載資訊從 FTP 伺服器。</xref:System.Net.WebClient> 使用任一種方法，當您指定使用 FTP 配置網路資源 (例如， `&quot;ftp://contoso.com&quot;`) FtpWebRequest 類別可讓您以程式設計的方式與 FTP 伺服器互動。       URI 可能是相對或絕對。 如果 URI 的格式是`&quot;ftp://contoso.com/%2fpath&quot;`(%2f 是逸出 &quot;/&quot;)、 URI 為絕對的然後和目前的目錄是`/path`。 如果，不過，URI 的格式是`&quot;ftp://contoso.com/path&quot;`，.NET Framework 第一次登入 FTP 伺服器 (使用使用者名稱和密碼設定<xref:System.Net.FtpWebRequest.Credentials%2A>屬性)，則會設定目前的目錄`<UserLoginDirectory>/path`。</xref:System.Net.FtpWebRequest.Credentials%2A>       您必須擁有有效的使用者名稱和密碼的伺服器或伺服器必須允許匿名登入。 您可以指定用來設定連線到伺服器的認證<xref:System.Net.FtpWebRequest.Credentials%2A>屬性，或者您可以將其併入<xref:System.Uri.UserInfo%2A>URI 部分傳遞至<xref:System.Net.WebRequest.Create%2A>方法。</xref:System.Net.WebRequest.Create%2A> </xref:System.Uri.UserInfo%2A> </xref:System.Net.FtpWebRequest.Credentials%2A> 如果您包含<xref:System.Uri.UserInfo%2A>URI 中的資訊<xref:System.Net.FtpWebRequest.Credentials%2A>屬性設定為新的網路認證，而且指定的使用者名稱和密碼資訊。</xref:System.Net.FtpWebRequest.Credentials%2A> </xref:System.Uri.UserInfo%2A>      > [!CAUTION] > 除非<xref:System.Net.FtpWebRequest.EnableSsl%2A>屬性是`true`，所有資料和命令，包括您的使用者名稱和密碼資訊，都傳送到伺服器以純文字。</xref:System.Net.FtpWebRequest.EnableSsl%2A> 監視網路流量的任何人都可以檢視您的認證，並使用它們來連接到伺服器。 如果您要連接到 FTP 伺服器需要認證且支援安全通訊端層 (SSL)，您應該設定<xref:System.Net.FtpWebRequest.EnableSsl%2A>至`true`。</xref:System.Net.FtpWebRequest.EnableSsl%2A>       您必須擁有<xref:System.Net.WebPermission>存取 FTP 資源; 否則<xref:System.Security.SecurityException>擲回例外狀況。</xref:System.Security.SecurityException> </xref:System.Net.WebPermission>       指定要設定傳送到伺服器的 FTP 命令<xref:System.Net.FtpWebRequest.Method%2A>屬性中定義的值為<xref:System.Net.WebRequestMethods.Ftp>結構。</xref:System.Net.WebRequestMethods.Ftp> </xref:System.Net.FtpWebRequest.Method%2A> 若要傳送的文字資料，請變更<xref:System.Net.FtpWebRequest.UseBinary%2A>從其預設值的屬性 (`true`) 至`false`。</xref:System.Net.FtpWebRequest.UseBinary%2A> 如需詳細資訊和限制，請參閱<xref:System.Net.FtpWebRequest.Method%2A>.</xref:System.Net.FtpWebRequest.Method%2A>       使用時 FtpWebRequest 物件檔案上傳至伺服器，您必須撰寫的檔案內容取得呼叫來要求資料流<xref:System.Net.FtpWebRequest.GetRequestStream%2A>方法或其非同步對應項目<xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>和<xref:System.Net.FtpWebRequest.EndGetRequestStream%2A>方法。</xref:System.Net.FtpWebRequest.EndGetRequestStream%2A> </xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A> </xref:System.Net.FtpWebRequest.GetRequestStream%2A> 您必須寫入資料流，並傳送要求之前關閉資料流。       藉由呼叫要求傳送到伺服器<xref:System.Net.FtpWebRequest.GetResponse%2A>方法或其非同步對應項目<xref:System.Net.FtpWebRequest.BeginGetResponse%2A>和<xref:System.Net.FtpWebRequest.EndGetResponse%2A>方法。</xref:System.Net.FtpWebRequest.EndGetResponse%2A> </xref:System.Net.FtpWebRequest.BeginGetResponse%2A> </xref:System.Net.FtpWebRequest.GetResponse%2A> 要求的作業完成時，<xref:System.Net.FtpWebResponse>物件傳回。</xref:System.Net.FtpWebResponse> <xref:System.Net.FtpWebResponse>物件會提供狀態的作業以及從伺服器下載的任何資料。</xref:System.Net.FtpWebResponse>       您可以設定的讀取或寫入使用的伺服器逾時值<xref:System.Net.FtpWebRequest.ReadWriteTimeout%2A>屬性。</xref:System.Net.FtpWebRequest.ReadWriteTimeout%2A> 如果超過逾時期限時，呼叫的方法會擲回<xref:System.Net.WebException>設<xref:System.Net.WebExceptionStatus>為<xref:System.Net.WebExceptionStatus>.</xref:System.Net.WebExceptionStatus> </xref:System.Net.WebExceptionStatus> </xref:System.Net.WebException>       如果命令執行成功，請從 FTP 伺服器下載檔案，回應物件的資料流中是使用 要求檔案的內容。 您可以藉由呼叫來存取此資料流<xref:System.Net.FtpWebResponse.GetResponseStream%2A>方法。</xref:System.Net.FtpWebResponse.GetResponseStream%2A> 如需詳細資訊，請參閱<xref:System.Net.FtpWebResponse>.</xref:System.Net.FtpWebResponse>       如果<xref:System.Net.FtpWebRequest.Proxy%2A>屬性設定，可能是直接或組態檔中，與 FTP 伺服器的通訊透過指定的 proxy。</xref:System.Net.FtpWebRequest.Proxy%2A> 如果指定的 proxy，則 HTTP proxy，僅<xref:System.Net.WebRequestMethods.Ftp.DownloadFile>， <xref:System.Net.WebRequestMethods.Ftp.ListDirectory>，和<xref:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails>支援命令。</xref:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails> </xref:System.Net.WebRequestMethods.Ftp.ListDirectory> </xref:System.Net.WebRequestMethods.Ftp.DownloadFile>       僅限下載的二進位內容會快取。也就是使用接收內容<xref:System.Net.WebRequestMethods.Ftp.DownloadFile>命令搭配<xref:System.Net.FtpWebRequest.UseBinary%2A>屬性設定為`true`。</xref:System.Net.FtpWebRequest.UseBinary%2A> </xref:System.Net.WebRequestMethods.Ftp.DownloadFile>       多個 FtpWebRequests 盡可能重複使用現有的連接。       如需 FTP 通訊協定的詳細資訊，請參閱 RFC 959，「 檔案傳輸通訊協定，「 位於[http://www.rfc-editor.org/](http://www.ietf.org/rfc/rfc959.txt)。"
  example:
  - "The following code example demonstrates deleting a file from an FTP server.  \n  \n [!code-cpp[NCLFtpClient#4](~/add/codesnippet/cpp/t-system.net.ftpwebrequest_1.cpp)]\n [!code-cs[NCLFtpClient#4](~/add/codesnippet/csharp/t-system.net.ftpwebrequest_1.cs)]  \n  \n The following code example demonstrates downloading a file from an FTP server by using the <xref:System.Net.WebClient> class.  \n  \n [!code-cpp[NCLFtpClient#5](~/add/codesnippet/cpp/t-system.net.ftpwebrequest_2.cpp)]\n [!code-cs[NCLFtpClient#5](~/add/codesnippet/csharp/t-system.net.ftpwebrequest_2.cs)]  \n  \n The following code example demonstrates using asynchronous operations to upload a file to an FTP server.  \n  \n [!code-cs[NCLFtpAsync#1](~/add/codesnippet/csharp/t-system.net.ftpwebrequest_3.cs)]\n [!code-cpp[NCLFtpAsync#1](~/add/codesnippet/cpp/t-system.net.ftpwebrequest_3.cpp)]"
  syntax:
    content: 'public sealed class FtpWebRequest : System.Net.WebRequest'
  inheritance:
  - System.Net.WebRequest
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.FtpWebRequest.Abort
  id: Abort
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: Abort()
  nameWithType: FtpWebRequest.Abort()
  fullName: System.Net.FtpWebRequest.Abort()
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "結束非同步 FTP 作業。"
  remarks: "如果沒有任何作業正在進行中的，這個方法任何作用。 如果檔案傳輸正在進行中，這個方法會結束此傳輸。      > [!NOTE] > 應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。 如需詳細資訊，請參閱[網路追蹤.NET Framework 中](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following code example demonstrates how the user can terminate an asynchronous upload of a file from the local directory to the server.  \n  \n [!code-cpp[NCLFtpClient#10](~/add/codesnippet/cpp/m-system.net.ftpwebreque_3_1.cpp)]\n [!code-cs[NCLFtpClient#10](~/add/codesnippet/csharp/m-system.net.ftpwebreque_3_1.cs)]"
  syntax:
    content: public override void Abort ();
    parameters: []
  overload: System.Net.FtpWebRequest.Abort*
  exceptions: []
  platform:
  - net462
- uid: System.Net.FtpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)
  id: BeginGetRequestStream(System.AsyncCallback,System.Object)
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: BeginGetRequestStream(AsyncCallback,Object)
  nameWithType: FtpWebRequest.BeginGetRequestStream(AsyncCallback,Object)
  fullName: System.Net.FtpWebRequest.BeginGetRequestStream(AsyncCallback,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "開始以非同步方式開啟要求的內容寫入資料流。"
  remarks: "您必須完成非同步作業，藉由呼叫<xref:System.Net.FtpWebRequest.EndGetRequestStream%2A>方法。</xref:System.Net.FtpWebRequest.EndGetRequestStream%2A> 一般而言，<xref:System.Net.FtpWebRequest.EndGetRequestStream%2A>所參考的方法呼叫`callback`。</xref:System.Net.FtpWebRequest.EndGetRequestStream%2A> 若要判斷作業的狀態，請查看內容中<xref:System.IAsyncResult>這個方法所傳回的物件。</xref:System.IAsyncResult>       這個方法不會封鎖等候資料流。 若要封鎖，請呼叫<xref:System.Net.FtpWebRequest.GetRequestStream%2A>取代此方法。</xref:System.Net.FtpWebRequest.GetRequestStream%2A>       如需使用非同步程式設計模型的詳細資訊，請參閱[呼叫同步方法以非同步方式](~/add/includes/ajax-current-ext-md.md)。      > [!NOTE] > 應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。 如需詳細資訊，請參閱[網路追蹤.NET Framework 中](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following code example demonstrates beginning an asynchronous operation to get a request's stream. This code example is part of a larger example provided for the <xref:System.Net.FtpWebRequest> class overview.  \n  \n [!code-cs[NCLFtpAsync#4](~/add/codesnippet/csharp/7dded3fc-ce2a-466f-b201-_1.cs)]\n [!code-cpp[NCLFtpAsync#4](~/add/codesnippet/cpp/7dded3fc-ce2a-466f-b201-_1.cpp)]"
  syntax:
    content: public override IAsyncResult BeginGetRequestStream (AsyncCallback callback, object state);
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: "<xref:System.AsyncCallback>委派，參考要叫用作業完成時的方法。</xref:System.AsyncCallback>"
    - id: state
      type: System.Object
      description: "使用者定義的物件，其中包含作業的相關資訊。 這個物件傳遞至`callback`委派作業完成時。"
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>執行個體，表示作業的狀態。</xref:System.IAsyncResult>"
  overload: System.Net.FtpWebRequest.BeginGetRequestStream*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "先前呼叫這個方法或<xref:System.Net.FtpWebRequest.GetRequestStream*>尚未完成。</xref:System.Net.FtpWebRequest.GetRequestStream*>"
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "無法建立與 FTP 伺服器的連接。"
  - type: System.Net.ProtocolViolationException
    commentId: T:System.Net.ProtocolViolationException
    description: "<xref:System.Net.FtpWebRequest.Method*>屬性未設定至<xref:System.Net.WebRequestMethods.Ftp.UploadFile>。</xref:System.Net.WebRequestMethods.Ftp.UploadFile> </xref:System.Net.FtpWebRequest.Method*>"
  platform:
  - net462
- uid: System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)
  id: BeginGetResponse(System.AsyncCallback,System.Object)
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: BeginGetResponse(AsyncCallback,Object)
  nameWithType: FtpWebRequest.BeginGetResponse(AsyncCallback,Object)
  fullName: System.Net.FtpWebRequest.BeginGetResponse(AsyncCallback,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "開始傳送要求，並以非同步方式接收來自 FTP 伺服器的回應。"
  remarks: "您必須完成非同步作業，藉由呼叫<xref:System.Net.FtpWebRequest.EndGetResponse%2A>方法。</xref:System.Net.FtpWebRequest.EndGetResponse%2A> 一般而言，<xref:System.Net.FtpWebRequest.EndGetResponse%2A>所參考的方法呼叫`callback`。</xref:System.Net.FtpWebRequest.EndGetResponse%2A> 若要判斷作業的狀態，請查看內容中<xref:System.IAsyncResult>BeginGetResponse 方法所傳回的物件。</xref:System.IAsyncResult>       如果<xref:System.Net.FtpWebRequest.Proxy%2A>屬性設定，可能是直接或組態檔中，與 FTP 伺服器的通訊透過指定的 proxy。</xref:System.Net.FtpWebRequest.Proxy%2A>       BeginGetResponse 不會封鎖在等候來自伺服器的回應時。 若要封鎖，請呼叫<xref:System.Net.FtpWebRequest.GetResponse%2A>方法取代 BeginGetResponse。</xref:System.Net.FtpWebRequest.GetResponse%2A>       如需有關使用非同步程式設計模型的詳細資訊，請參閱[呼叫同步方法以非同步方式](~/add/includes/ajax-current-ext-md.md)。       您的應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。 如需詳細資訊，請參閱[網路追蹤.NET Framework 中](~/add/includes/ajax-current-ext-md.md)。      > [!NOTE] > 如果<xref:System.Net.WebException>會擲回，使用<xref:System.Net.WebException.Response%2A>和<xref:System.Net.WebException.Status%2A>屬性來判斷伺服器的回應例外狀況。</xref:System.Net.WebException.Status%2A> </xref:System.Net.WebException.Response%2A> </xref:System.Net.WebException>"
  example:
  - "The following code example demonstrates ending an asynchronous operation to get a request's stream, and then starting a request to get the response. This code example is part of a larger example provided for the <xref:System.Net.FtpWebRequest> class overview.  \n  \n [!code-cs[NCLFtpAsync#5](~/add/codesnippet/csharp/m-system.net.ftpwebreque_0_1.cs)]\n [!code-cpp[NCLFtpAsync#5](~/add/codesnippet/cpp/m-system.net.ftpwebreque_0_1.cpp)]"
  syntax:
    content: public override IAsyncResult BeginGetResponse (AsyncCallback callback, object state);
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: "<xref:System.AsyncCallback>委派，參考要叫用作業完成時的方法。</xref:System.AsyncCallback>"
    - id: state
      type: System.Object
      description: "使用者定義的物件，其中包含作業的相關資訊。 這個物件傳遞至`callback`委派作業完成時。"
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>執行個體，表示作業的狀態。</xref:System.IAsyncResult>"
  overload: System.Net.FtpWebRequest.BeginGetResponse*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:System.Net.FtpWebRequest.GetResponse*>或 BeginGetResponse 已經呼叫這個執行個體。</xref:System.Net.FtpWebRequest.GetResponse*>"
  platform:
  - net462
- uid: System.Net.FtpWebRequest.ClientCertificates
  id: ClientCertificates
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: ClientCertificates
  nameWithType: FtpWebRequest.ClientCertificates
  fullName: System.Net.FtpWebRequest.ClientCertificates
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "取得或設定用來建立與 FTP 伺服器之加密的連接的憑證。"
  remarks: "用戶端憑證用來驗證用戶端在起始 SSL 連線的交涉期間。 如需詳細資訊，請參閱<xref:System.Net.FtpWebRequest.EnableSsl%2A>.</xref:System.Net.FtpWebRequest.EnableSsl%2A>      > [!NOTE] > 的.NET Framework 它們建立時，會快取的 SSL 工作階段，並嘗試盡可能重複使用快取的工作階段為新的要求。 嘗試重複使用的 SSL 工作階段，.NET Framework 會使用第一個項目<xref:System.Net.HttpWebRequest.ClientCertificates%2A>（如果有一個），或嘗試重複使用匿名的工作階段，如果<xref:System.Net.HttpWebRequest.ClientCertificates%2A>是空的。</xref:System.Net.HttpWebRequest.ClientCertificates%2A> </xref:System.Net.HttpWebRequest.ClientCertificates%2A>"
  syntax:
    content: public System.Security.Cryptography.X509Certificates.X509CertificateCollection ClientCertificates { get; set; }
    return:
      type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
      description: "<xref href=&quot;System.Security.Cryptography.X509Certificates.X509CertificateCollection&quot;> </xref>物件，其中包含用戶端憑證。"
  overload: System.Net.FtpWebRequest.ClientCertificates*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "設定作業指定的值<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  platform:
  - net462
- uid: System.Net.FtpWebRequest.ConnectionGroupName
  id: ConnectionGroupName
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: ConnectionGroupName
  nameWithType: FtpWebRequest.ConnectionGroupName
  fullName: System.Net.FtpWebRequest.ConnectionGroupName
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "取得或設定包含用來傳送目前要求的服務點的連接群組名稱。"
  remarks: "連線群組會要求一組關聯的特定連線或連線集。 可重複使用連接群組中的連接，只能由來自相同的應用程式定義域中，當要求的認證相同，而要求指定的連接群組名稱的要求。 當要求未指定連接群組名稱時，就可以使用任何現有的連接，來要求所關聯的連接群組的伺服器。 認證不相同時，現有的連接會關閉，而必須重新驗證新的要求。       使用連接群組可以改善效能，因為這可讓所有使用者重複使用已驗證使用者的認證與連線要求。       ConnectionGroupName 屬性變更之後呼叫<xref:System.Net.FtpWebRequest.GetRequestStream%2A>， <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>， <xref:System.Net.FtpWebRequest.GetResponse%2A>，或<xref:System.Net.FtpWebRequest.BeginGetResponse%2A>方法會使<xref:System.InvalidOperationException>例外狀況。</xref:System.InvalidOperationException> </xref:System.Net.FtpWebRequest.BeginGetResponse%2A> </xref:System.Net.FtpWebRequest.GetResponse%2A> </xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A> </xref:System.Net.FtpWebRequest.GetRequestStream%2A>"
  example:
  - "The following code example retrieves the value of this property.  \n  \n [!code-cpp[NCLFtpClient#16](~/add/codesnippet/cpp/p-system.net.ftpwebreque_8_1.cpp)]\n [!code-cs[NCLFtpClient#16](~/add/codesnippet/csharp/p-system.net.ftpwebreque_8_1.cs)]"
  syntax:
    content: public override string ConnectionGroupName { get; set; }
    return:
      type: System.String
      description: "A<xref:System.String>值，其中包含連接群組名稱。</xref:System.String>"
  overload: System.Net.FtpWebRequest.ConnectionGroupName*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "這個屬性的要求已經在進行中，指定新的值。"
  platform:
  - net462
- uid: System.Net.FtpWebRequest.ContentLength
  id: ContentLength
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: ContentLength
  nameWithType: FtpWebRequest.ContentLength
  fullName: System.Net.FtpWebRequest.ContentLength
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "取得或設定值，會忽略<xref href=&quot;System.Net.FtpWebRequest&quot;></xref>類別。"
  remarks: "僅為與其他實作相容性而提供的 ContentLength 屬性<xref:System.Net.WebRequest>和<xref:System.Net.WebResponse>類別。</xref:System.Net.WebResponse> </xref:System.Net.WebRequest> 沒有理由来使用 ContentLength。"
  syntax:
    content: public override long ContentLength { get; set; }
    return:
      type: System.Int64
      description: "<xref:System.Int64>應該忽略的值。</xref:System.Int64>"
  overload: System.Net.FtpWebRequest.ContentLength*
  exceptions: []
  platform:
  - net462
- uid: System.Net.FtpWebRequest.ContentOffset
  id: ContentOffset
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: ContentOffset
  nameWithType: FtpWebRequest.ContentOffset
  fullName: System.Net.FtpWebRequest.ContentOffset
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "取得或設定此要求所下載之檔案的位元組位移。"
  remarks: "從 FTP 伺服器下載檔案時，請設定 ContentOffset 屬性。 這個位移會指出伺服器的檔案中，將標示要下載資料的開始位置。 位移指定為 從檔案; 開頭的位元組數目第一個位元組的位移為零。       設定的 ContentOffset 原因<xref:System.Net.FtpWebRequest>傳送重新啟動 (`REST`) 命令至伺服器。</xref:System.Net.FtpWebRequest> 如果您要將資料上傳到伺服器，則大多數的 FTP 伺服器實作會忽略這個命令。       在呼叫之後變更的 ContentOffset <xref:System.Net.FtpWebRequest.GetRequestStream%2A>， <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>， <xref:System.Net.FtpWebRequest.GetResponse%2A>，或<xref:System.Net.FtpWebRequest.BeginGetResponse%2A>方法會使<xref:System.InvalidOperationException>例外狀況。</xref:System.InvalidOperationException> </xref:System.Net.FtpWebRequest.BeginGetResponse%2A> </xref:System.Net.FtpWebRequest.GetResponse%2A> </xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A> </xref:System.Net.FtpWebRequest.GetRequestStream%2A>"
  example:
  - "The following code example demonstrates downloading part of a file from a server and appending the downloaded data to a local file.  \n  \n [!code-cpp[NclFtpClient#7](~/add/codesnippet/cpp/p-system.net.ftpwebreque_4_1.cpp)]\n [!code-cs[NclFtpClient#7](~/add/codesnippet/csharp/p-system.net.ftpwebreque_4_1.cs)]"
  syntax:
    content: public long ContentOffset { get; set; }
    return:
      type: System.Int64
      description: "<xref:System.Int64>指定檔案位移，以位元組為單位的執行個體。</xref:System.Int64> 預設值為零。"
  overload: System.Net.FtpWebRequest.ContentOffset*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "這個屬性的要求已經在進行中，指定新的值。"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "指定給這個屬性的值小於零。"
  platform:
  - net462
- uid: System.Net.FtpWebRequest.ContentType
  id: ContentType
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: ContentType
  nameWithType: FtpWebRequest.ContentType
  fullName: System.Net.FtpWebRequest.ContentType
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "一律會擲回<xref:System.NotSupportedException>.</xref:System.NotSupportedException>"
  remarks: "ContentType 屬性僅供使用的其他實作相容性<xref:System.Net.WebRequest>和<xref:System.Net.WebResponse>類別。</xref:System.Net.WebResponse> </xref:System.Net.WebRequest> 沒有理由来使用的 ContentType。"
  syntax:
    content: public override string ContentType { get; set; }
    return:
      type: System.String
      description: "一律會擲回<xref:System.NotSupportedException>.</xref:System.NotSupportedException>"
  overload: System.Net.FtpWebRequest.ContentType*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "FTP 不支援內容類型資訊。"
  platform:
  - net462
- uid: System.Net.FtpWebRequest.Credentials
  id: Credentials
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: Credentials
  nameWithType: FtpWebRequest.Credentials
  fullName: System.Net.FtpWebRequest.Credentials
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "取得或設定用來與 FTP 伺服器通訊的認證。"
  remarks: "您不需要使用匿名登入連接時指定的認證。 您必須設定認證屬性使用的認證類型的<xref:System.Net.NetworkCredential>; 這可確保該使用者名稱和密碼可以讀取及傳送至伺服器。</xref:System.Net.NetworkCredential>      > [!CAUTION] > 認證資訊時不會加密傳送到伺服器，除非<xref:System.Net.FtpWebRequest.EnableSsl%2A>屬性設定為`true`。</xref:System.Net.FtpWebRequest.EnableSsl%2A>       變更認證之後呼叫<xref:System.Net.FtpWebRequest.GetRequestStream%2A>， <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>， <xref:System.Net.FtpWebRequest.GetResponse%2A>，或<xref:System.Net.FtpWebRequest.BeginGetResponse%2A>方法會使<xref:System.InvalidOperationException>例外狀況。</xref:System.InvalidOperationException> </xref:System.Net.FtpWebRequest.BeginGetResponse%2A> </xref:System.Net.FtpWebRequest.GetResponse%2A> </xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A> </xref:System.Net.FtpWebRequest.GetRequestStream%2A>"
  example:
  - "The following code example retrieves the value of this property and uses it to display the user name.  \n  \n [!code-cpp[NCLFtpClient#14](~/add/codesnippet/cpp/p-system.net.ftpwebreque_6_1.cpp)]\n [!code-cs[NCLFtpClient#14](~/add/codesnippet/csharp/p-system.net.ftpwebreque_6_1.cs)]"
  syntax:
    content: public override System.Net.ICredentials Credentials { get; set; }
    return:
      type: System.Net.ICredentials
      description: "<xref:System.Net.ICredentials>執行個體; 否則<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果未設定的屬性。</xref:System.Net.ICredentials>"
  overload: System.Net.FtpWebRequest.Credentials*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "設定作業指定的值<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<xref:System.Net.ICredentials>以外型別的<xref:System.Net.NetworkCredential>為設定作業中指定。</xref:System.Net.NetworkCredential> </xref:System.Net.ICredentials>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "這個屬性的要求已經在進行中，指定新的值。"
  platform:
  - net462
- uid: System.Net.FtpWebRequest.DefaultCachePolicy
  id: DefaultCachePolicy
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: DefaultCachePolicy
  nameWithType: FtpWebRequest.DefaultCachePolicy
  fullName: System.Net.FtpWebRequest.DefaultCachePolicy
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "定義所有 FTP 要求的預設快取原則。"
  remarks: "使用所接收的內容<xref:System.Net.WebRequestMethods.Ftp.DownloadFile>命令會快取。</xref:System.Net.WebRequestMethods.Ftp.DownloadFile>       下表描述 FTP 快取於<xref:System.Net.FtpWebRequest>。</xref:System.Net.FtpWebRequest>原則的效果      |原則 |效果 |  |------------|------------|  |<xref:System.Net.Cache.RequestCacheLevel>|如果資源是新，內容長度正確無誤，而且到期、 修改和內容長度屬性會傳回快取的資源。 |  |<xref:System.Net.Cache.RequestCacheLevel>|從伺服器傳回的資源。 |  |<xref:System.Net.Cache.RequestCacheLevel>|如果內容的長度且相符的項目大小;，傳回的快取的資源否則，擲回<xref:System.Net.WebException>。 |  |<xref:System.Net.Cache.RequestCacheLevel>|如果已提供的內容長度，而相符的項目大小;，傳回的快取的資源否則，會從伺服器下載資源，以及傳回給呼叫者。 |  |<xref:System.Net.Cache.RequestCacheLevel>|如果快取資源的時間戳記為相同伺服器上資源的時間戳記會傳回快取的資源否則，從伺服器下載，儲存在快取，而傳回呼叫端資源。 |  |<xref:System.Net.Cache.RequestCacheLevel>|從伺服器下載的資源、 將它儲存在快取，並傳回給呼叫端。 |  |<xref:System.Net.Cache.RequestCacheLevel>|如果快取的資源存在，就會刪除。</xref:System.Net.Cache.RequestCacheLevel> </xref:System.Net.Cache.RequestCacheLevel> </xref:System.Net.Cache.RequestCacheLevel> </xref:System.Net.Cache.RequestCacheLevel> </xref:System.Net.WebException> </xref:System.Net.Cache.RequestCacheLevel> </xref:System.Net.Cache.RequestCacheLevel> </xref:System.Net.Cache.RequestCacheLevel> 資源從伺服器下載，並傳回給呼叫者。 |     > [!NOTE] > 設定 DefaultCachePolicy 覆寫任何組態設定。"
  syntax:
    content: public static System.Net.Cache.RequestCachePolicy DefaultCachePolicy { get; set; }
    return:
      type: System.Net.Cache.RequestCachePolicy
      description: "A <xref href=&quot;System.Net.Cache.RequestCachePolicy&quot;> </xref> ，定義 FTP 要求的快取原則。"
  overload: System.Net.FtpWebRequest.DefaultCachePolicy*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "呼叫端嘗試將此屬性設定為<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  platform:
  - net462
- uid: System.Net.FtpWebRequest.EnableSsl
  id: EnableSsl
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: EnableSsl
  nameWithType: FtpWebRequest.EnableSsl
  fullName: System.Net.FtpWebRequest.EnableSsl
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "取得或設定<xref:System.Boolean>，指定是否應使用 SSL 連線。</xref:System.Boolean>"
  remarks: "> [!CAUTION]> 除非 EnableSsl 屬性是`true`，所有資料和命令，包括您的使用者名稱和密碼資訊，都傳送到伺服器以純文字。 監視網路流量的任何人都可以檢視您的認證，並使用它們來連接到伺服器。 如果您要連接到 FTP 伺服器需要認證，並支援 SSL，您應該設定為 EnableSsl `true`。       `&quot;AUTH TLS&quot;`命令，會要求加密的工作階段傳送至伺服器。 如果伺服器無法辨識此命令，您會收到<xref:System.Net.WebException>例外狀況。</xref:System.Net.WebException>"
  example:
  - "The following code example uses an encrypted connection to download the directory listing from an FTP server.  \n  \n [!code-cpp[NCLFtpClient#8](~/add/codesnippet/cpp/p-system.net.ftpwebreque_11_1.cpp)]\n [!code-cs[NCLFtpClient#8](~/add/codesnippet/csharp/p-system.net.ftpwebreque_11_1.cs)]"
  syntax:
    content: public bool EnableSsl { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果控制和資料傳輸均受加密。，否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Net.FtpWebRequest.EnableSsl*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "已建立連線到 FTP 伺服器。"
  platform:
  - net462
- uid: System.Net.FtpWebRequest.EndGetRequestStream(System.IAsyncResult)
  id: EndGetRequestStream(System.IAsyncResult)
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: EndGetRequestStream(IAsyncResult)
  nameWithType: FtpWebRequest.EndGetRequestStream(IAsyncResult)
  fullName: System.Net.FtpWebRequest.EndGetRequestStream(IAsyncResult)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "結束入門<xref:System.Net.FtpWebRequest.BeginGetRequestStream*>.</xref:System.Net.FtpWebRequest.BeginGetRequestStream*>暫止的非同步作業"
  remarks: "如果作業尚未完成，EndGetRequestStream 方法會封鎖直到作業完成為止。 若要判斷是否已完成作業，請檢查<xref:System.IAsyncResult.IsCompleted%2A>屬性再呼叫 EndGetRequestStream。</xref:System.IAsyncResult.IsCompleted%2A>       除了 < 例外狀況 > 中所述的例外狀況，EndGetRequestStream 重新擲回開啟供寫入資料流時所擲回的例外狀況。      > [!NOTE] > 應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。 如需詳細資訊，請參閱[網路追蹤.NET Framework 中](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following code example demonstrates ending an asynchronous operation to get a request's stream. This code example is part of a larger example provided for the <xref:System.Net.FtpWebRequest> class overview.  \n  \n [!code-cs[NCLFtpAsync#5](~/add/codesnippet/csharp/m-system.net.ftpwebreque_1_1.cs)]\n [!code-cpp[NCLFtpAsync#5](~/add/codesnippet/cpp/m-system.net.ftpwebreque_1_1.cpp)]"
  syntax:
    content: public override System.IO.Stream EndGetRequestStream (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>作業啟動時所傳回的物件。</xref:System.IAsyncResult>"
    return:
      type: System.IO.Stream
      description: "可寫入<xref:System.IO.Stream>與這個執行個體相關聯的執行個體。</xref:System.IO.Stream>"
  overload: System.Net.FtpWebRequest.EndGetRequestStream*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>asyncResult</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>asyncResult</code>藉由呼叫未取得<xref:System.Net.FtpWebRequest.BeginGetRequestStream*>。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "所識別的作業已經呼叫過這個方法<code> asyncResult </code>。"
  platform:
  - net462
- uid: System.Net.FtpWebRequest.EndGetResponse(System.IAsyncResult)
  id: EndGetResponse(System.IAsyncResult)
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: EndGetResponse(IAsyncResult)
  nameWithType: FtpWebRequest.EndGetResponse(IAsyncResult)
  fullName: System.Net.FtpWebRequest.EndGetResponse(IAsyncResult)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "結束入門<xref:System.Net.FtpWebRequest.BeginGetResponse*>.</xref:System.Net.FtpWebRequest.BeginGetResponse*>暫止的非同步作業"
  remarks: "如果作業尚未完成時 EndGetResponse 方法會呼叫，EndGetResponse 封鎖直到作業完成為止。 若要防止封鎖，請檢查<xref:System.IAsyncResult.IsCompleted%2A>屬性再呼叫 EndGetResponse。</xref:System.IAsyncResult.IsCompleted%2A>       除了 < 例外狀況 > 中所述的例外狀況，EndGetResponse 重新擲回與伺服器通訊時所擲回的例外狀況。      > [!NOTE] > 應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。 如需詳細資訊，請參閱[網路追蹤.NET Framework 中](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following code example demonstrates ending an asynchronous operation to get a response. This code example is part of a larger example provided for the <xref:System.Net.FtpWebRequest> class overview.  \n  \n [!code-cs[NCLFtpAsync#6](~/add/codesnippet/csharp/m-system.net.ftpwebreque_5_1.cs)]\n [!code-cpp[NCLFtpAsync#6](~/add/codesnippet/cpp/m-system.net.ftpwebreque_5_1.cpp)]"
  syntax:
    content: public override System.Net.WebResponse EndGetResponse (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>作業啟動時所傳回。</xref:System.IAsyncResult>"
    return:
      type: System.Net.WebResponse
      description: "A<xref:System.Net.WebResponse>包含參考<xref href=&quot;System.Net.FtpWebResponse&quot;></xref>執行個體。</xref:System.Net.WebResponse> 此物件包含 FTP 伺服器的回應要求。"
  overload: System.Net.FtpWebRequest.EndGetResponse*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>asyncResult</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>asyncResult</code>藉由呼叫未取得<xref:System.Net.FtpWebRequest.BeginGetResponse*>。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "所識別的作業已經呼叫過這個方法<code> asyncResult </code>。"
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "使用 HTTP proxy 時發生錯誤。"
  platform:
  - net462
- uid: System.Net.FtpWebRequest.GetRequestStream
  id: GetRequestStream
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: GetRequestStream()
  nameWithType: FtpWebRequest.GetRequestStream()
  fullName: System.Net.FtpWebRequest.GetRequestStream()
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "擷取用來將資料上傳至 FTP 伺服器的資料流。"
  remarks: "呼叫 getrequeststream 然後方法之前設定的要求屬性。 之後將資料寫入資料流中，您必須關閉再傳送要求資料流。       如果您沒有設定<xref:System.Net.FtpWebRequest.Method%2A>屬性<xref:System.Net.WebRequestMethods.Ftp.UploadFile>或<xref:System.Net.WebRequestMethods.Ftp.AppendFile>，您無法取得資料流。</xref:System.Net.WebRequestMethods.Ftp.AppendFile> </xref:System.Net.WebRequestMethods.Ftp.UploadFile> </xref:System.Net.FtpWebRequest.Method%2A>       Getrequeststream 然後區塊等待資料流。 若要避免此狀況，呼叫<xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>getrequeststream 然後取代的方法。</xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>      > [!NOTE] > 應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。 如需詳細資訊，請參閱[網路追蹤.NET Framework 中](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following code example demonstrates copying a file to a request's data stream and sending a request to the server to upload the data and append it to a file.  \n  \n [!code-cpp[NCLFtpClient#3](~/add/codesnippet/cpp/m-system.net.ftpwebreque_4_1.cpp)]\n [!code-cs[NCLFtpClient#3](~/add/codesnippet/csharp/m-system.net.ftpwebreque_4_1.cs)]"
  syntax:
    content: public override System.IO.Stream GetRequestStream ();
    parameters: []
    return:
      type: System.IO.Stream
      description: "可寫入<xref:System.IO.Stream>用來將資料儲存到目前的要求傳送到伺服器執行個體。</xref:System.IO.Stream>"
  overload: System.Net.FtpWebRequest.GetRequestStream*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:System.Net.FtpWebRequest.BeginGetRequestStream*> has been called and has not completed.  \n  \n \\- or -  \n  \n An HTTP proxy is enabled, and you attempted to use an FTP command other than &lt;xref:System.Net.WebRequestMethods.Ftp.DownloadFile?displayProperty=fullName&gt;, &lt;xref:System.Net.WebRequestMethods.Ftp.ListDirectory?displayProperty=fullName&gt;, or &lt;xref:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails?displayProperty=fullName&gt;."
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "無法建立與 FTP 伺服器的連接。"
  - type: System.Net.ProtocolViolationException
    commentId: T:System.Net.ProtocolViolationException
    description: "<xref:System.Net.FtpWebRequest.Method*>屬性未設定為&lt;xref:System.Net.WebRequestMethods.Ftp.UploadFile?displayProperty=fullName&gt;或&lt;xref:System.Net.WebRequestMethods.Ftp.AppendFile?displayProperty=fullName&gt;。</xref:System.Net.FtpWebRequest.Method*>"
  platform:
  - net462
- uid: System.Net.FtpWebRequest.GetResponse
  id: GetResponse
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: GetResponse()
  nameWithType: FtpWebRequest.GetResponse()
  fullName: System.Net.FtpWebRequest.GetResponse()
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "傳回 FTP 伺服器的回應。"
  remarks: "若要存取的 FTP 特定屬性，您必須轉換<xref:System.Net.WebResponse>至<xref:System.Net.FtpWebResponse>。</xref:System.Net.FtpWebResponse>這個方法所傳回的物件</xref:System.Net.WebResponse>       GetResponse 導致控制連線建立，也可能會建立資料連接。 GetResponse 封鎖，直到收到的回應。 若要避免這個問題，您可以執行這項作業以非同步方式呼叫<xref:System.Net.FtpWebRequest.BeginGetResponse%2A>和<xref:System.Net.FtpWebRequest.EndGetResponse%2A>方法取代 GetResponse。</xref:System.Net.FtpWebRequest.EndGetResponse%2A> </xref:System.Net.FtpWebRequest.BeginGetResponse%2A>       如果<xref:System.Net.FtpWebRequest.Proxy%2A>屬性設定，可能是直接或組態檔中，與 FTP 伺服器通訊都會經過 proxy。</xref:System.Net.FtpWebRequest.Proxy%2A>       如果<xref:System.Net.WebException>會擲回，使用<xref:System.Net.WebException.Response%2A>和<xref:System.Net.WebException.Status%2A>屬性來判斷伺服器的回應例外狀況。</xref:System.Net.WebException.Status%2A> </xref:System.Net.WebException.Response%2A> </xref:System.Net.WebException>       您的應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。 如需詳細資訊，請參閱[網路追蹤.NET Framework 中](~/add/includes/ajax-current-ext-md.md)。      > [!NOTE] > GetResponse 的多個呼叫會傳回相同的回應物件，則不會重新發出要求。"
  example:
  - "The following code example demonstrates copying a file to a request's data stream and sending a request to append data to a file to the server. The example calls GetResponse to send the request and block until the response is returned by the server.  \n  \n [!code-cpp[NCLFtpClient#3](~/add/codesnippet/cpp/m-system.net.ftpwebreque_2_1.cpp)]\n [!code-cs[NCLFtpClient#3](~/add/codesnippet/csharp/m-system.net.ftpwebreque_2_1.cs)]"
  syntax:
    content: public override System.Net.WebResponse GetResponse ();
    parameters: []
    return:
      type: System.Net.WebResponse
      description: "A<xref:System.Net.WebResponse>包含參考<xref href=&quot;System.Net.FtpWebResponse&quot;></xref>執行個體。</xref:System.Net.WebResponse> 此物件包含 FTP 伺服器的回應要求。"
  overload: System.Net.FtpWebRequest.GetResponse*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "GetResponse or <xref:System.Net.FtpWebRequest.BeginGetResponse*> has already been called for this instance.  \n  \n \\- or -  \n  \n An HTTP proxy is enabled, and you attempted to use an FTP command other than &lt;xref:System.Net.WebRequestMethods.Ftp.DownloadFile?displayProperty=fullName&gt;, &lt;xref:System.Net.WebRequestMethods.Ftp.ListDirectory?displayProperty=fullName&gt;, or &lt;xref:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails?displayProperty=fullName&gt;."
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "<xref:System.Net.FtpWebRequest.EnableSsl*> is set to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, but the server does not support this feature.  \n  \n \\- or -  \n  \n A <xref:System.Net.FtpWebRequest.Timeout*> was specified and the timeout has expired."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.Headers
  id: Headers
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: Headers
  nameWithType: FtpWebRequest.Headers
  fullName: System.Net.FtpWebRequest.Headers
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "取得空<xref:System.Net.WebHeaderCollection>物件。</xref:System.Net.WebHeaderCollection>"
  remarks: "僅為與其他實作相容性而提供的標頭屬性<xref:System.Net.WebRequest>和<xref:System.Net.WebResponse>類別。</xref:System.Net.WebResponse> </xref:System.Net.WebRequest> 沒有理由来使用的標頭。"
  syntax:
    content: public override System.Net.WebHeaderCollection Headers { get; set; }
    return:
      type: System.Net.WebHeaderCollection
      description: "空白<xref:System.Net.WebHeaderCollection>物件。</xref:System.Net.WebHeaderCollection>"
  overload: System.Net.FtpWebRequest.Headers*
  exceptions: []
  platform:
  - net462
- uid: System.Net.FtpWebRequest.KeepAlive
  id: KeepAlive
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: KeepAlive
  nameWithType: FtpWebRequest.KeepAlive
  fullName: System.Net.FtpWebRequest.KeepAlive
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "取得或設定<xref:System.Boolean>值，指定是否要在要求完成之後，關閉與 FTP 伺服器的控制連接。</xref:System.Boolean>"
  remarks: "當 KeepAlive 屬性設定為`false`，當您呼叫關閉控制連接<xref:System.Net.FtpWebResponse.Close%2A>方法。</xref:System.Net.FtpWebResponse.Close%2A>       變更之後呼叫 KeepAlive <xref:System.Net.FtpWebRequest.GetRequestStream%2A>， <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>， <xref:System.Net.FtpWebRequest.GetResponse%2A>，或<xref:System.Net.FtpWebRequest.BeginGetResponse%2A>方法會使<xref:System.InvalidOperationException>例外狀況。</xref:System.InvalidOperationException> </xref:System.Net.FtpWebRequest.BeginGetResponse%2A> </xref:System.Net.FtpWebRequest.GetResponse%2A> </xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A> </xref:System.Net.FtpWebRequest.GetRequestStream%2A>"
  example:
  - "The following code example retrieves and displays property values for a specified <xref:System.Net.FtpWebRequest> object.  \n  \n [!code-cpp[NCLFtpClient#15](~/add/codesnippet/cpp/p-system.net.ftpwebreque_0_1.cpp)]\n [!code-cs[NCLFtpClient#15](~/add/codesnippet/csharp/p-system.net.ftpwebreque_0_1.cs)]"
  syntax:
    content: public bool KeepAlive { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果伺服器的連線不會終結。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Net.FtpWebRequest.KeepAlive*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "這個屬性的要求已經在進行中，指定新的值。"
  platform:
  - net462
- uid: System.Net.FtpWebRequest.Method
  id: Method
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: Method
  nameWithType: FtpWebRequest.Method
  fullName: System.Net.FtpWebRequest.Method
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "取得或設定要傳送至 FTP 伺服器的命令。"
  remarks: "方法屬性會決定哪一個命令傳送到伺服器。 使用<xref:System.Net.WebRequestMethods.Ftp>類別</xref:System.Net.WebRequestMethods.Ftp>的公用欄位成員中定義的字串，您將方法 請注意，在中定義的字串<xref:System.Net.WebRequestMethods.Ftp>類別是方法屬性唯一支援的選項。</xref:System.Net.WebRequestMethods.Ftp> 方法屬性設定為任何其他值會導致<xref:System.ArgumentException>例外狀況。</xref:System.ArgumentException>       當設為方法<xref:System.Net.WebRequestMethods.Ftp.UploadFile>，您必須先呼叫執行<xref:System.Net.FtpWebRequest.GetRequestStream%2A>方法。</xref:System.Net.FtpWebRequest.GetRequestStream%2A> </xref:System.Net.WebRequestMethods.Ftp.UploadFile> 無法呼叫正確的順序會導致這些成員<xref:System.Net.ProtocolViolationException>例外狀況，當您嘗試取得要求資料流。</xref:System.Net.ProtocolViolationException>       認證提供給<xref:System.Net.FtpWebRequest>物件必須具有權限可以執行指定的方法。</xref:System.Net.FtpWebRequest> 如果沒有，則 FTP 命令會失敗。       若要判斷成功或失敗的命令，檢查<xref:System.Net.FtpWebResponse.StatusCode%2A>和<xref:System.Net.FtpWebResponse.StatusDescription%2A>屬性。</xref:System.Net.FtpWebResponse.StatusDescription%2A> </xref:System.Net.FtpWebResponse.StatusCode%2A>"
  example:
  - "The following code example sets this property to <xref:System.Net.WebRequestMethods.Ftp.DeleteFile>.  \n  \n [!code-cpp[NCLFtpClient#4](~/add/codesnippet/cpp/p-system.net.ftpwebreque_2_1.cpp)]\n [!code-cs[NCLFtpClient#4](~/add/codesnippet/csharp/p-system.net.ftpwebreque_2_1.cs)]"
  syntax:
    content: public override string Method { get; set; }
    return:
      type: System.String
      description: "A<xref:System.String>值，包含要傳送至伺服器的 FTP 命令。</xref:System.String> 預設值是<xref:System.Net.WebRequestMethods.Ftp.DownloadFile>.</xref:System.Net.WebRequestMethods.Ftp.DownloadFile>"
  overload: System.Net.FtpWebRequest.Method*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "這個屬性的要求已經在進行中，指定新的值。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The method is invalid.  \n  \n \\- or -  \n  \n The method is not supported.  \n  \n \\- or -  \n  \n Multiple methods were specified."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.PreAuthenticate
  id: PreAuthenticate
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: PreAuthenticate
  nameWithType: FtpWebRequest.PreAuthenticate
  fullName: System.Net.FtpWebRequest.PreAuthenticate
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "一律會擲回<xref:System.NotSupportedException>.</xref:System.NotSupportedException>"
  remarks: "PreAuthenticate 屬性僅供使用的其他實作相容性<xref:System.Net.WebRequest>和<xref:System.Net.WebResponse>類別。</xref:System.Net.WebResponse> </xref:System.Net.WebRequest>"
  syntax:
    content: public override bool PreAuthenticate { get; set; }
    return:
      type: System.Boolean
      description: "一律會擲回<xref:System.NotSupportedException>.</xref:System.NotSupportedException>"
  overload: System.Net.FtpWebRequest.PreAuthenticate*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "FTP 不支援預先驗證。"
  platform:
  - net462
- uid: System.Net.FtpWebRequest.Proxy
  id: Proxy
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: Proxy
  nameWithType: FtpWebRequest.Proxy
  fullName: System.Net.FtpWebRequest.Proxy
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "取得或設定用來與 FTP 伺服器通訊的 proxy。"
  remarks: "Proxy 屬性會識別<xref:System.Net.IWebProxy>與 FTP 伺服器通訊的執行個體。</xref:System.Net.IWebProxy> Proxy 是由系統設定使用組態檔和 Internet Explorer 區域網路設定。 指定應沒有任何 proxy，請設定 Proxy proxy 執行個體所傳回<xref:System.Net.GlobalProxySelection.GetEmptyWebProxy%2A?displayProperty=fullName>方法。</xref:System.Net.GlobalProxySelection.GetEmptyWebProxy%2A?displayProperty=fullName> 如需自動 proxy 偵測的詳細資訊，請參閱[自動 Proxy 偵測](~/add/includes/ajax-current-ext-md.md)。       您必須設定 Proxy，然後再將資料寫入至要求的資料流或取得回應。 在呼叫之後變更 Proxy <xref:System.Net.FtpWebRequest.GetRequestStream%2A>， <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>， <xref:System.Net.FtpWebRequest.GetResponse%2A>，或<xref:System.Net.FtpWebRequest.BeginGetResponse%2A>方法會使<xref:System.InvalidOperationException>例外狀況。</xref:System.InvalidOperationException> </xref:System.Net.FtpWebRequest.BeginGetResponse%2A> </xref:System.Net.FtpWebRequest.GetResponse%2A> </xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A> </xref:System.Net.FtpWebRequest.GetRequestStream%2A>       <xref:System.Net.FtpWebRequest>類別支援 HTTP 和 ISA 防火牆用戶端 proxy。</xref:System.Net.FtpWebRequest>       如果指定的 proxy，則 HTTP proxy，僅<xref:System.Net.WebRequestMethods.Ftp.DownloadFile>， <xref:System.Net.WebRequestMethods.Ftp.ListDirectory>，和<xref:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails>支援命令。</xref:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails> </xref:System.Net.WebRequestMethods.Ftp.ListDirectory> </xref:System.Net.WebRequestMethods.Ftp.DownloadFile>"
  example:
  - "The following code example displays this property value.  \n  \n [!code-cpp[NCLFtpClient#16](~/add/codesnippet/cpp/p-system.net.ftpwebreque_1_1.cpp)]\n [!code-cs[NCLFtpClient#16](~/add/codesnippet/csharp/p-system.net.ftpwebreque_1_1.cs)]"
  syntax:
    content: public override System.Net.IWebProxy Proxy { get; set; }
    return:
      type: System.Net.IWebProxy
      description: "<xref:System.Net.IWebProxy>負責與 FTP 伺服器通訊的執行個體。</xref:System.Net.IWebProxy>"
  overload: System.Net.FtpWebRequest.Proxy*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "這個屬性不能設定為<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "這個屬性的要求已經在進行中，指定新的值。"
  platform:
  - net462
- uid: System.Net.FtpWebRequest.ReadWriteTimeout
  id: ReadWriteTimeout
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: ReadWriteTimeout
  nameWithType: FtpWebRequest.ReadWriteTimeout
  fullName: System.Net.FtpWebRequest.ReadWriteTimeout
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "取得或設定讀取或寫入資料流的逾時。"
  remarks: "寫入至所傳回的資料流時使用 ReadWriteTimeout<xref:System.Net.FtpWebRequest.GetRequestStream%2A>方法或從傳回的資料流讀取<xref:System.Net.FtpWebResponse.GetResponseStream%2A>方法。</xref:System.Net.FtpWebResponse.GetResponseStream%2A> </xref:System.Net.FtpWebRequest.GetRequestStream%2A>       具體來說，ReadWriteTimeout 屬性控制的逾時值<xref:System.IO.Stream.Read%2A>方法，用來讀取傳回之資料流<xref:System.Net.FtpWebResponse.GetResponseStream%2A>方法，以及<xref:System.IO.Stream.Write%2A>方法，用來寫入資料流所傳回<xref:System.Net.FtpWebRequest.GetRequestStream%2A>方法。</xref:System.Net.FtpWebRequest.GetRequestStream%2A> </xref:System.IO.Stream.Write%2A> </xref:System.Net.FtpWebResponse.GetResponseStream%2A> </xref:System.IO.Stream.Read%2A> 如果超過逾時期限時，呼叫的方法會擲回<xref:System.Net.WebException>設<xref:System.Net.WebExceptionStatus>為<xref:System.Net.WebExceptionStatus>.</xref:System.Net.WebExceptionStatus> </xref:System.Net.WebExceptionStatus> </xref:System.Net.WebException>       若要指定要完成之要求的等待時間，請使用<xref:System.Net.FtpWebRequest.Timeout%2A>屬性。</xref:System.Net.FtpWebRequest.Timeout%2A>"
  syntax:
    content: public int ReadWriteTimeout { get; set; }
    return:
      type: System.Int32
      description: "正在讀取或寫入逾時之前的毫秒數。 預設值為 300,000 毫秒 （5 分鐘）。"
  overload: System.Net.FtpWebRequest.ReadWriteTimeout*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "已傳送要求。"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "設定作業是小於或等於零，且不等於指定的值&lt;xref:System.Threading.Timeout.Infinite?displayProperty=fullName&gt;。"
  platform:
  - net462
- uid: System.Net.FtpWebRequest.RenameTo
  id: RenameTo
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: RenameTo
  nameWithType: FtpWebRequest.RenameTo
  fullName: System.Net.FtpWebRequest.RenameTo
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "取得或設定要重新命名檔案的新名稱。"
  syntax:
    content: public string RenameTo { get; set; }
    return:
      type: System.String
      description: "要重新命名檔案的新名稱。"
  overload: System.Net.FtpWebRequest.RenameTo*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "設定作業指定的值<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>或空字串。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "這個屬性的要求已經在進行中，指定新的值。"
  platform:
  - net462
- uid: System.Net.FtpWebRequest.RequestUri
  id: RequestUri
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: RequestUri
  nameWithType: FtpWebRequest.RequestUri
  fullName: System.Net.FtpWebRequest.RequestUri
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "取得這個執行個體所要求的 URI。"
  remarks: "RequestUri 屬性的值為的 URI 時指定<xref:System.Net.WebRequest.Create%2A>方法呼叫來取得這個執行個體。</xref:System.Net.WebRequest.Create%2A>"
  example:
  - "The following code example displays this property value.  \n  \n [!code-cpp[NCLFtpClient#14](~/add/codesnippet/cpp/p-system.net.ftpwebreque_5_1.cpp)]\n [!code-cs[NCLFtpClient#14](~/add/codesnippet/csharp/p-system.net.ftpwebreque_5_1.cs)]"
  syntax:
    content: public override Uri RequestUri { get; }
    return:
      type: System.Uri
      description: "A<xref:System.Uri>識別使用檔案傳輸通訊協定來存取資源的執行個體。</xref:System.Uri>"
  overload: System.Net.FtpWebRequest.RequestUri*
  exceptions: []
  platform:
  - net462
- uid: System.Net.FtpWebRequest.ServicePoint
  id: ServicePoint
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: ServicePoint
  nameWithType: FtpWebRequest.ServicePoint
  fullName: System.Net.FtpWebRequest.ServicePoint
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "取得<xref href=&quot;System.Net.ServicePoint&quot;></xref>用來連接到 FTP 伺服器的物件。"
  remarks: "如果沒有<xref:System.Net.ServicePoint>物件存在，便會建立一個 FTP 伺服器。</xref:System.Net.ServicePoint> 若要設定的開啟 FTP 伺服器的連線數目上限，設定<xref:System.Net.ServicePoint.ConnectionLimit%2A>屬性<xref:System.Net.ServicePoint>這個屬性所傳回的執行個體。</xref:System.Net.ServicePoint> </xref:System.Net.ServicePoint.ConnectionLimit%2A>"
  example:
  - "The following code example retrieves the service point from a request and sets the maximum number of connections to one.  \n  \n [!code-cpp[NCLFtpClient#1](~/add/codesnippet/cpp/p-system.net.ftpwebreque_9_1.cpp)]\n [!code-cs[NCLFtpClient#1](~/add/codesnippet/csharp/p-system.net.ftpwebreque_9_1.cs)]"
  syntax:
    content: public System.Net.ServicePoint ServicePoint { get; }
    return:
      type: System.Net.ServicePoint
      description: "A <xref href=&quot;System.Net.ServicePoint&quot;> </xref>可以用來自訂連接行為的物件。"
  overload: System.Net.FtpWebRequest.ServicePoint*
  exceptions: []
  platform:
  - net462
- uid: System.Net.FtpWebRequest.Timeout
  id: Timeout
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: Timeout
  nameWithType: FtpWebRequest.Timeout
  fullName: System.Net.FtpWebRequest.Timeout
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "取得或設定要等待要求的毫秒數。"
  remarks: "若要指定無限值，將逾時屬性設定為<xref:System.Threading.Timeout.Infinite>(-1)。</xref:System.Threading.Timeout.Infinite> 這是預設值。       逾時是提出同步要求的毫秒數<xref:System.Net.FtpWebRequest.GetResponse%2A>方法會等候回應且<xref:System.Net.FtpWebRequest.GetRequestStream%2A>方法會等候資料流。</xref:System.Net.FtpWebRequest.GetRequestStream%2A> </xref:System.Net.FtpWebRequest.GetResponse%2A> 如果資源不會逾時期限之內回應，要求會擲回<xref:System.Net.WebException>的<xref:System.Net.WebException.Status%2A>屬性設定為<xref:System.Net.WebExceptionStatus>.</xref:System.Net.WebExceptionStatus> </xref:System.Net.WebException.Status%2A> </xref:System.Net.WebException>       變更之後呼叫的逾時<xref:System.Net.FtpWebRequest.GetRequestStream%2A>， <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>， <xref:System.Net.FtpWebRequest.GetResponse%2A>，或<xref:System.Net.FtpWebRequest.BeginGetResponse%2A>方法會使<xref:System.InvalidOperationException>例外狀況。</xref:System.InvalidOperationException> </xref:System.Net.FtpWebRequest.BeginGetResponse%2A> </xref:System.Net.FtpWebRequest.GetResponse%2A> </xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A> </xref:System.Net.FtpWebRequest.GetRequestStream%2A>       最多為 15 秒才傳回或逾時，可能需要網域名稱系統 (DNS) 查詢。 如果您的要求包含需要解析主機名稱，而且設定逾時的值不超過 15 秒，可能需要 15 秒以上才能<xref:System.Net.WebException>就會擲回，表示您的要求逾時。</xref:System.Net.WebException>"
  example:
  - "The following code example sets this property.  \n  \n [!code-cpp[NCLFtpClient#23](~/add/codesnippet/cpp/p-system.net.ftpwebreque_3_1.cpp)]\n [!code-cs[NCLFtpClient#23](~/add/codesnippet/csharp/p-system.net.ftpwebreque_3_1.cs)]"
  syntax:
    content: public override int Timeout { get; set; }
    return:
      type: System.Int32
      description: "<xref:System.Int32>值，包含要要求逾時前等候的毫秒數。</xref:System.Int32> 預設值是<xref:System.Threading.Timeout.Infinite>.</xref:System.Threading.Timeout.Infinite>"
  overload: System.Net.FtpWebRequest.Timeout*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "指定的值是小於零且不是<xref:System.Threading.Timeout.Infinite>.</xref:System.Threading.Timeout.Infinite>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "這個屬性的要求已經在進行中，指定新的值。"
  platform:
  - net462
- uid: System.Net.FtpWebRequest.UseBinary
  id: UseBinary
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: UseBinary
  nameWithType: FtpWebRequest.UseBinary
  fullName: System.Net.FtpWebRequest.UseBinary
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "取得或設定<xref:System.Boolean>指定檔案傳輸的資料類型的值。</xref:System.Boolean>"
  remarks: "如果您要傳送二進位資料，例如影像，會將此屬性設定為`true`。 如果您要傳送的文字，將屬性設定為`false`。 指定`true`導致<xref:System.Net.FtpWebRequest>傳送`&quot;TYPE I&quot;`命令至伺服器。</xref:System.Net.FtpWebRequest> 指定`false`導致<xref:System.Net.FtpWebRequest>傳送`&quot;Type A&quot;`命令至伺服器。</xref:System.Net.FtpWebRequest> FTP 伺服器可以忽略這些命令。       在呼叫之後變更 UseBinary <xref:System.Net.FtpWebRequest.GetRequestStream%2A>， <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>， <xref:System.Net.FtpWebRequest.GetResponse%2A>，或<xref:System.Net.FtpWebRequest.BeginGetResponse%2A>方法會使<xref:System.InvalidOperationException>例外狀況。</xref:System.InvalidOperationException> </xref:System.Net.FtpWebRequest.BeginGetResponse%2A> </xref:System.Net.FtpWebRequest.GetResponse%2A> </xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A> </xref:System.Net.FtpWebRequest.GetRequestStream%2A>"
  example:
  - "The following code example retrieves and displays property values for a specified <xref:System.Net.FtpWebRequest> object.  \n  \n [!code-cpp[NCLFtpClient#15](~/add/codesnippet/cpp/p-system.net.ftpwebreque_7_1.cpp)]\n [!code-cs[NCLFtpClient#15](~/add/codesnippet/csharp/p-system.net.ftpwebreque_7_1.cs)]"
  syntax:
    content: public bool UseBinary { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>表示伺服器来傳輸的資料是二進位檔案。<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>以指出資料是否為文字。 預設值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Net.FtpWebRequest.UseBinary*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "這個屬性的要求已經在進行中，指定新的值。"
  platform:
  - net462
- uid: System.Net.FtpWebRequest.UseDefaultCredentials
  id: UseDefaultCredentials
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: UseDefaultCredentials
  nameWithType: FtpWebRequest.UseDefaultCredentials
  fullName: System.Net.FtpWebRequest.UseDefaultCredentials
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "一律會擲回<xref:System.NotSupportedException>.</xref:System.NotSupportedException>"
  remarks: "UseDefaultCredentials 屬性僅供使用的其他實作相容性<xref:System.Net.WebRequest>和<xref:System.Net.WebResponse>類別。</xref:System.Net.WebResponse> </xref:System.Net.WebRequest> 沒有理由来使用 UseDefaultCredentials。"
  syntax:
    content: public override bool UseDefaultCredentials { get; set; }
    return:
      type: System.Boolean
      description: "一律會擲回<xref:System.NotSupportedException>.</xref:System.NotSupportedException>"
  overload: System.Net.FtpWebRequest.UseDefaultCredentials*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "FTP 不支援預設的認證。"
  platform:
  - net462
- uid: System.Net.FtpWebRequest.UsePassive
  id: UsePassive
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: UsePassive
  nameWithType: FtpWebRequest.UsePassive
  fullName: System.Net.FtpWebRequest.UsePassive
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "取得或設定用戶端應用程式的資料傳輸程序的行為。"
  remarks: "UsePassive 屬性設定為`true`傳送 「`PASV&quot;`命令至伺服器。 此命令會要求伺服器資料連接埠上接聽，等候連接，而不是啟始接收傳輸命令時。       如需使用 UsePassive 指定行為的說明，請參閱 RFC 959，「 檔案傳輸通訊協定，「 一節 3.2、 [建立資料連線] 和區段 4.1.2，」 傳送參數可用的命令，「 在[http://www.rfc-editor.org/](http://www.ietf.org/rfc/rfc959.txt)。       在呼叫之後變更 UsePassive <xref:System.Net.FtpWebRequest.GetRequestStream%2A>， <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>， <xref:System.Net.FtpWebRequest.GetResponse%2A>，或<xref:System.Net.FtpWebRequest.BeginGetResponse%2A>方法會使<xref:System.InvalidOperationException>例外狀況。</xref:System.InvalidOperationException> </xref:System.Net.FtpWebRequest.BeginGetResponse%2A> </xref:System.Net.FtpWebRequest.GetResponse%2A> </xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A> </xref:System.Net.FtpWebRequest.GetRequestStream%2A>       如果設為 UsePassive `true`、 FTP 伺服器可能不會傳送檔案的大小和下載進度可以永遠是零。 如果設為 UsePassive `false`，防火牆可以引發警示，並封鎖檔案下載。"
  example:
  - "The following code example retrieves and displays property values for a specified <xref:System.Net.FtpWebRequest> object.  \n  \n [!code-cpp[NCLFtpClient#6](~/add/codesnippet/cpp/p-system.net.ftpwebreque_10_1.cpp)]\n [!code-cs[NCLFtpClient#6](~/add/codesnippet/csharp/p-system.net.ftpwebreque_10_1.cs)]"
  syntax:
    content: public bool UsePassive { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>如果用戶端應用程式的資料傳輸程序會接聽資料連接埠; 上的連線否則， <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>如果用戶端應該起始資料連接埠上的連線。 預設值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Net.FtpWebRequest.UsePassive*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "這個屬性的要求已經在進行中，指定新的值。"
  platform:
  - net462
references:
- uid: System.Net.WebRequest
  isExternal: false
  name: System.Net.WebRequest
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Net.WebException
  isExternal: true
  name: System.Net.WebException
- uid: System.Net.ProtocolViolationException
  isExternal: true
  name: System.Net.ProtocolViolationException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Net.FtpWebRequest.Abort
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: Abort()
  nameWithType: FtpWebRequest.Abort()
  fullName: System.Net.FtpWebRequest.Abort()
- uid: System.Net.FtpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: BeginGetRequestStream(AsyncCallback,Object)
  nameWithType: FtpWebRequest.BeginGetRequestStream(AsyncCallback,Object)
  fullName: System.Net.FtpWebRequest.BeginGetRequestStream(AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: BeginGetResponse(AsyncCallback,Object)
  nameWithType: FtpWebRequest.BeginGetResponse(AsyncCallback,Object)
  fullName: System.Net.FtpWebRequest.BeginGetResponse(AsyncCallback,Object)
- uid: System.Net.FtpWebRequest.ClientCertificates
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: ClientCertificates
  nameWithType: FtpWebRequest.ClientCertificates
  fullName: System.Net.FtpWebRequest.ClientCertificates
- uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509CertificateCollection
  nameWithType: X509CertificateCollection
  fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection
- uid: System.Net.FtpWebRequest.ConnectionGroupName
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: ConnectionGroupName
  nameWithType: FtpWebRequest.ConnectionGroupName
  fullName: System.Net.FtpWebRequest.ConnectionGroupName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.FtpWebRequest.ContentLength
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: ContentLength
  nameWithType: FtpWebRequest.ContentLength
  fullName: System.Net.FtpWebRequest.ContentLength
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Net.FtpWebRequest.ContentOffset
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: ContentOffset
  nameWithType: FtpWebRequest.ContentOffset
  fullName: System.Net.FtpWebRequest.ContentOffset
- uid: System.Net.FtpWebRequest.ContentType
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: ContentType
  nameWithType: FtpWebRequest.ContentType
  fullName: System.Net.FtpWebRequest.ContentType
- uid: System.Net.FtpWebRequest.Credentials
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: Credentials
  nameWithType: FtpWebRequest.Credentials
  fullName: System.Net.FtpWebRequest.Credentials
- uid: System.Net.ICredentials
  parent: System.Net
  isExternal: true
  name: ICredentials
  nameWithType: ICredentials
  fullName: System.Net.ICredentials
- uid: System.Net.FtpWebRequest.DefaultCachePolicy
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: DefaultCachePolicy
  nameWithType: FtpWebRequest.DefaultCachePolicy
  fullName: System.Net.FtpWebRequest.DefaultCachePolicy
- uid: System.Net.Cache.RequestCachePolicy
  parent: System.Net.Cache
  isExternal: false
  name: RequestCachePolicy
  nameWithType: RequestCachePolicy
  fullName: System.Net.Cache.RequestCachePolicy
- uid: System.Net.FtpWebRequest.EnableSsl
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: EnableSsl
  nameWithType: FtpWebRequest.EnableSsl
  fullName: System.Net.FtpWebRequest.EnableSsl
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.FtpWebRequest.EndGetRequestStream(System.IAsyncResult)
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: EndGetRequestStream(IAsyncResult)
  nameWithType: FtpWebRequest.EndGetRequestStream(IAsyncResult)
  fullName: System.Net.FtpWebRequest.EndGetRequestStream(IAsyncResult)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Net.FtpWebRequest.EndGetResponse(System.IAsyncResult)
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: EndGetResponse(IAsyncResult)
  nameWithType: FtpWebRequest.EndGetResponse(IAsyncResult)
  fullName: System.Net.FtpWebRequest.EndGetResponse(IAsyncResult)
- uid: System.Net.WebResponse
  parent: System.Net
  isExternal: true
  name: WebResponse
  nameWithType: WebResponse
  fullName: System.Net.WebResponse
- uid: System.Net.FtpWebRequest.GetRequestStream
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: GetRequestStream()
  nameWithType: FtpWebRequest.GetRequestStream()
  fullName: System.Net.FtpWebRequest.GetRequestStream()
- uid: System.Net.FtpWebRequest.GetResponse
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: GetResponse()
  nameWithType: FtpWebRequest.GetResponse()
  fullName: System.Net.FtpWebRequest.GetResponse()
- uid: System.Net.FtpWebRequest.Headers
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: Headers
  nameWithType: FtpWebRequest.Headers
  fullName: System.Net.FtpWebRequest.Headers
- uid: System.Net.WebHeaderCollection
  parent: System.Net
  isExternal: true
  name: WebHeaderCollection
  nameWithType: WebHeaderCollection
  fullName: System.Net.WebHeaderCollection
- uid: System.Net.FtpWebRequest.KeepAlive
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: KeepAlive
  nameWithType: FtpWebRequest.KeepAlive
  fullName: System.Net.FtpWebRequest.KeepAlive
- uid: System.Net.FtpWebRequest.Method
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: Method
  nameWithType: FtpWebRequest.Method
  fullName: System.Net.FtpWebRequest.Method
- uid: System.Net.FtpWebRequest.PreAuthenticate
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: PreAuthenticate
  nameWithType: FtpWebRequest.PreAuthenticate
  fullName: System.Net.FtpWebRequest.PreAuthenticate
- uid: System.Net.FtpWebRequest.Proxy
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: Proxy
  nameWithType: FtpWebRequest.Proxy
  fullName: System.Net.FtpWebRequest.Proxy
- uid: System.Net.IWebProxy
  parent: System.Net
  isExternal: true
  name: IWebProxy
  nameWithType: IWebProxy
  fullName: System.Net.IWebProxy
- uid: System.Net.FtpWebRequest.ReadWriteTimeout
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: ReadWriteTimeout
  nameWithType: FtpWebRequest.ReadWriteTimeout
  fullName: System.Net.FtpWebRequest.ReadWriteTimeout
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.FtpWebRequest.RenameTo
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: RenameTo
  nameWithType: FtpWebRequest.RenameTo
  fullName: System.Net.FtpWebRequest.RenameTo
- uid: System.Net.FtpWebRequest.RequestUri
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: RequestUri
  nameWithType: FtpWebRequest.RequestUri
  fullName: System.Net.FtpWebRequest.RequestUri
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Net.FtpWebRequest.ServicePoint
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: ServicePoint
  nameWithType: FtpWebRequest.ServicePoint
  fullName: System.Net.FtpWebRequest.ServicePoint
- uid: System.Net.ServicePoint
  parent: System.Net
  isExternal: false
  name: ServicePoint
  nameWithType: ServicePoint
  fullName: System.Net.ServicePoint
- uid: System.Net.FtpWebRequest.Timeout
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: Timeout
  nameWithType: FtpWebRequest.Timeout
  fullName: System.Net.FtpWebRequest.Timeout
- uid: System.Net.FtpWebRequest.UseBinary
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: UseBinary
  nameWithType: FtpWebRequest.UseBinary
  fullName: System.Net.FtpWebRequest.UseBinary
- uid: System.Net.FtpWebRequest.UseDefaultCredentials
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: UseDefaultCredentials
  nameWithType: FtpWebRequest.UseDefaultCredentials
  fullName: System.Net.FtpWebRequest.UseDefaultCredentials
- uid: System.Net.FtpWebRequest.UsePassive
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: UsePassive
  nameWithType: FtpWebRequest.UsePassive
  fullName: System.Net.FtpWebRequest.UsePassive
- uid: System.Net.FtpWebRequest.Abort*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: Abort
  nameWithType: FtpWebRequest.Abort
- uid: System.Net.FtpWebRequest.BeginGetRequestStream*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: BeginGetRequestStream
  nameWithType: FtpWebRequest.BeginGetRequestStream
- uid: System.Net.FtpWebRequest.BeginGetResponse*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: BeginGetResponse
  nameWithType: FtpWebRequest.BeginGetResponse
- uid: System.Net.FtpWebRequest.ClientCertificates*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: ClientCertificates
  nameWithType: FtpWebRequest.ClientCertificates
- uid: System.Net.FtpWebRequest.ConnectionGroupName*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: ConnectionGroupName
  nameWithType: FtpWebRequest.ConnectionGroupName
- uid: System.Net.FtpWebRequest.ContentLength*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: ContentLength
  nameWithType: FtpWebRequest.ContentLength
- uid: System.Net.FtpWebRequest.ContentOffset*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: ContentOffset
  nameWithType: FtpWebRequest.ContentOffset
- uid: System.Net.FtpWebRequest.ContentType*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: ContentType
  nameWithType: FtpWebRequest.ContentType
- uid: System.Net.FtpWebRequest.Credentials*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: Credentials
  nameWithType: FtpWebRequest.Credentials
- uid: System.Net.FtpWebRequest.DefaultCachePolicy*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: DefaultCachePolicy
  nameWithType: FtpWebRequest.DefaultCachePolicy
- uid: System.Net.FtpWebRequest.EnableSsl*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: EnableSsl
  nameWithType: FtpWebRequest.EnableSsl
- uid: System.Net.FtpWebRequest.EndGetRequestStream*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: EndGetRequestStream
  nameWithType: FtpWebRequest.EndGetRequestStream
- uid: System.Net.FtpWebRequest.EndGetResponse*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: EndGetResponse
  nameWithType: FtpWebRequest.EndGetResponse
- uid: System.Net.FtpWebRequest.GetRequestStream*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: GetRequestStream
  nameWithType: FtpWebRequest.GetRequestStream
- uid: System.Net.FtpWebRequest.GetResponse*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: GetResponse
  nameWithType: FtpWebRequest.GetResponse
- uid: System.Net.FtpWebRequest.Headers*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: Headers
  nameWithType: FtpWebRequest.Headers
- uid: System.Net.FtpWebRequest.KeepAlive*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: KeepAlive
  nameWithType: FtpWebRequest.KeepAlive
- uid: System.Net.FtpWebRequest.Method*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: Method
  nameWithType: FtpWebRequest.Method
- uid: System.Net.FtpWebRequest.PreAuthenticate*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: PreAuthenticate
  nameWithType: FtpWebRequest.PreAuthenticate
- uid: System.Net.FtpWebRequest.Proxy*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: Proxy
  nameWithType: FtpWebRequest.Proxy
- uid: System.Net.FtpWebRequest.ReadWriteTimeout*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: ReadWriteTimeout
  nameWithType: FtpWebRequest.ReadWriteTimeout
- uid: System.Net.FtpWebRequest.RenameTo*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: RenameTo
  nameWithType: FtpWebRequest.RenameTo
- uid: System.Net.FtpWebRequest.RequestUri*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: RequestUri
  nameWithType: FtpWebRequest.RequestUri
- uid: System.Net.FtpWebRequest.ServicePoint*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: ServicePoint
  nameWithType: FtpWebRequest.ServicePoint
- uid: System.Net.FtpWebRequest.Timeout*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: Timeout
  nameWithType: FtpWebRequest.Timeout
- uid: System.Net.FtpWebRequest.UseBinary*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: UseBinary
  nameWithType: FtpWebRequest.UseBinary
- uid: System.Net.FtpWebRequest.UseDefaultCredentials*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: UseDefaultCredentials
  nameWithType: FtpWebRequest.UseDefaultCredentials
- uid: System.Net.FtpWebRequest.UsePassive*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: UsePassive
  nameWithType: FtpWebRequest.UsePassive
