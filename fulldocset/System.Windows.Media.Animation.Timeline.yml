### YamlMime:ManagedReference
items:
- uid: System.Windows.Media.Animation.Timeline
  id: Timeline
  children:
  - System.Windows.Media.Animation.Timeline.#ctor
  - System.Windows.Media.Animation.Timeline.#ctor(System.Nullable{System.TimeSpan})
  - System.Windows.Media.Animation.Timeline.#ctor(System.Nullable{System.TimeSpan},System.Windows.Duration)
  - System.Windows.Media.Animation.Timeline.#ctor(System.Nullable{System.TimeSpan},System.Windows.Duration,System.Windows.Media.Animation.RepeatBehavior)
  - System.Windows.Media.Animation.Timeline.AccelerationRatio
  - System.Windows.Media.Animation.Timeline.AccelerationRatioProperty
  - System.Windows.Media.Animation.Timeline.AllocateClock
  - System.Windows.Media.Animation.Timeline.AutoReverse
  - System.Windows.Media.Animation.Timeline.AutoReverseProperty
  - System.Windows.Media.Animation.Timeline.BeginTime
  - System.Windows.Media.Animation.Timeline.BeginTimeProperty
  - System.Windows.Media.Animation.Timeline.Clone
  - System.Windows.Media.Animation.Timeline.CloneCurrentValue
  - System.Windows.Media.Animation.Timeline.Completed
  - System.Windows.Media.Animation.Timeline.CreateClock
  - System.Windows.Media.Animation.Timeline.CreateClock(System.Boolean)
  - System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated
  - System.Windows.Media.Animation.Timeline.CurrentStateInvalidated
  - System.Windows.Media.Animation.Timeline.CurrentTimeInvalidated
  - System.Windows.Media.Animation.Timeline.DecelerationRatio
  - System.Windows.Media.Animation.Timeline.DecelerationRatioProperty
  - System.Windows.Media.Animation.Timeline.DesiredFrameRateProperty
  - System.Windows.Media.Animation.Timeline.Duration
  - System.Windows.Media.Animation.Timeline.DurationProperty
  - System.Windows.Media.Animation.Timeline.FillBehavior
  - System.Windows.Media.Animation.Timeline.FillBehaviorProperty
  - System.Windows.Media.Animation.Timeline.FreezeCore(System.Boolean)
  - System.Windows.Media.Animation.Timeline.GetAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Media.Animation.Timeline.GetCurrentValueAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Media.Animation.Timeline.GetDesiredFrameRate(System.Windows.Media.Animation.Timeline)
  - System.Windows.Media.Animation.Timeline.GetNaturalDuration(System.Windows.Media.Animation.Clock)
  - System.Windows.Media.Animation.Timeline.GetNaturalDurationCore(System.Windows.Media.Animation.Clock)
  - System.Windows.Media.Animation.Timeline.Name
  - System.Windows.Media.Animation.Timeline.NameProperty
  - System.Windows.Media.Animation.Timeline.RemoveRequested
  - System.Windows.Media.Animation.Timeline.RepeatBehavior
  - System.Windows.Media.Animation.Timeline.RepeatBehaviorProperty
  - System.Windows.Media.Animation.Timeline.SetDesiredFrameRate(System.Windows.Media.Animation.Timeline,System.Nullable{System.Int32})
  - System.Windows.Media.Animation.Timeline.SpeedRatio
  - System.Windows.Media.Animation.Timeline.SpeedRatioProperty
  langs:
  - csharp
  name: Timeline
  nameWithType: Timeline
  fullName: System.Windows.Media.Animation.Timeline
  type: Class
  summary: "定義時間區段。"
  remarks: "時間軸代表一段時間。  它提供可讓您指定的區段的長度，開始時間，它會重複的次數中區段的時間進行的速度時的屬性。       從時間軸類別繼承的類別會提供其他功能，例如動畫和媒體播放。 以下是一些可用的特定時間軸的不同類型的範例。      -**動畫**:<xref:System.Windows.Media.Animation.AnimationTimeline>是一種產生輸出值的時間軸。</xref:System.Windows.Media.Animation.AnimationTimeline> 當您關聯屬性的動畫時，動畫播放，藉此 「 動畫&quot;，就會更新屬性的值。 動畫的簡介，請參閱[動畫概觀](~/add/includes/ajax-current-ext-md.md)。 將動畫套用不同的方式的相關資訊，請參閱[屬性動畫技術概觀](~/add/includes/ajax-current-ext-md.md)。      - **MediaTimelines**: A<xref:System.Windows.Media.MediaTimeline>是一種控制播放的媒體檔案的時間軸。</xref:System.Windows.Media.MediaTimeline>      - **ParallelTimelines**: A<xref:System.Windows.Media.Animation.ParallelTimeline>是分組其他砸下大筆花費的時間軸的類型。</xref:System.Windows.Media.Animation.ParallelTimeline>      -**分鏡腳本**: A<xref:System.Windows.Media.Animation.Storyboard>是一種特殊型別的<xref:System.Windows.Media.Animation.ParallelTimeline>，提供物件和目標的時間軸包含資訊的屬性。</xref:System.Windows.Media.Animation.ParallelTimeline> </xref:System.Windows.Media.Animation.Storyboard> 如需有關<xref:System.Windows.Media.Animation.Storyboard>物件，請參閱[概觀腳本](~/add/includes/ajax-current-ext-md.md)。</xref:System.Windows.Media.Animation.Storyboard>       如需使用時間軸的詳細資訊，請參閱[動畫概觀](../Topic/Animation%20Overview.md)。 計時功能時間軸的簡介，請參閱[計時行為概觀](~/add/includes/ajax-current-ext-md.md)。      ## 資料繫結和最動畫時間軸的時間軸屬性可以是資料繫結或以動畫顯示。不過，由於計時系統的運作的方式，繫結或動畫時間軸行為不像其他資料的資料繫結，或建立動畫的物件。 若要了解其行為，它有助於了解啟用時間軸的意義。       套用時間軸時，會在時間軸和子時刻表製作複本。 這些複本會凍結 （對唯讀） 和<xref:System.Windows.Media.Animation.Clock>從中建立物件。</xref:System.Windows.Media.Animation.Clock> 這些執行動畫目標的屬性的實際工作的時鐘它。 如果時間表是資料繫結，或有動畫效果，其目前值的快照集已建立時鐘的時間。 即使原始時間軸可能繼續變更，其時鐘卻不符合。       時間軸以反映資料繫結或動畫變更，必須重新產生它的時鐘。 時鐘會不自動產生。 以下是幾種方式可以套用時間軸變更:-如果時間表是或屬於<xref:System.Windows.Media.Animation.Storyboard>，您可以將它重新套用其分鏡腳本使用反映變更<xref:System.Windows.Media.Animation.BeginStoryboard>或<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法。</xref:System.Windows.Media.Animation.Storyboard.Begin%2A> </xref:System.Windows.Media.Animation.BeginStoryboard> </xref:System.Windows.Media.Animation.Storyboard> 這有副作用，也重新啟動動畫。 在程式碼中，您可以使用<xref:System.Windows.Media.Animation.Storyboard.Seek%2A>前進分鏡腳本方法回它先前的位置。</xref:System.Windows.Media.Animation.Storyboard.Seek%2A>      -如果您動畫直接套用到屬性，使用<xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A>方法，請呼叫<xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A>方法一次，並將它傳遞已修改的動畫。</xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A> </xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A>      -如果您正在直接在時鐘層級，建立和套用一組新的時鐘和使用它們來取代先前組產生的時鐘。       如範例的資料繫結動畫，請參閱 <<c0> [ 金鑰曲線動畫範例](http://go.microsoft.com/fwlink/?LinkID=160011)。      ## 使用事件處理常式時，只將進度計時器的時間軸的時鐘時間表與它相關聯或 (如果是<xref:System.Windows.Media.Animation.AnimationClock>物件) 相關聯的屬性。</xref:System.Windows.Media.Animation.AnimationClock> 因此 （和其他項目），不建議您使用時間軸，做為計時器。"
  syntax:
    content: >-
      [System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)]

      [System.Windows.Markup.RuntimeNameProperty("Name")]

      public abstract class Timeline : System.Windows.Media.Animation.Animatable
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  - System.Windows.Freezable
  - System.Windows.Media.Animation.Animatable
  implements: []
  inheritedMembers:
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.Freezable.CanFreeze
  - System.Windows.Freezable.Changed
  - System.Windows.Freezable.CloneCore(System.Windows.Freezable)
  - System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)
  - System.Windows.Freezable.CreateInstance
  - System.Windows.Freezable.CreateInstanceCore
  - System.Windows.Freezable.Freeze
  - System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)
  - System.Windows.Freezable.GetAsFrozen
  - System.Windows.Freezable.GetCurrentValueAsFrozen
  - System.Windows.Freezable.IsFrozen
  - System.Windows.Freezable.OnChanged
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)
  - System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.Freezable.ReadPreamble
  - System.Windows.Freezable.WritePostscript
  - System.Windows.Freezable.WritePreamble
  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)
  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)
  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)
  - System.Windows.Media.Animation.Animatable.HasAnimatedProperties
  - System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.#ctor
  id: '#ctor'
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: Timeline()
  nameWithType: Timeline.Timeline()
  fullName: System.Windows.Media.Animation.Timeline.Timeline()
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "初始化的新執行個體<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;></xref>類別。"
  syntax:
    content: protected Timeline ();
    parameters: []
  overload: System.Windows.Media.Animation.Timeline.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.#ctor(System.Nullable{System.TimeSpan})
  id: '#ctor(System.Nullable{System.TimeSpan})'
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: Timeline(Nullable<TimeSpan>)
  nameWithType: Timeline.Timeline(Nullable<TimeSpan>)
  fullName: System.Windows.Media.Animation.Timeline.Timeline(Nullable<TimeSpan>)
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "初始化的新執行個體<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;></xref>指定<xref:System.Windows.Media.Animation.Timeline.BeginTime*>.</xref:System.Windows.Media.Animation.Timeline.BeginTime*>類別"
  syntax:
    content: protected Timeline (Nullable<TimeSpan> beginTime);
    parameters:
    - id: beginTime
      type: System.Nullable{System.TimeSpan}
      description: "在這個時間<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;></xref>應該開始。 請參閱<xref:System.Windows.Media.Animation.Timeline.BeginTime*>屬性，如需詳細資訊。</xref:System.Windows.Media.Animation.Timeline.BeginTime*>"
  overload: System.Windows.Media.Animation.Timeline.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.#ctor(System.Nullable{System.TimeSpan},System.Windows.Duration)
  id: '#ctor(System.Nullable{System.TimeSpan},System.Windows.Duration)'
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: Timeline(Nullable<TimeSpan>,Duration)
  nameWithType: Timeline.Timeline(Nullable<TimeSpan>,Duration)
  fullName: System.Windows.Media.Animation.Timeline.Timeline(Nullable<TimeSpan>,Duration)
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "初始化的新執行個體<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;></xref>類別具有指定<> *> 和<> *>。"
  remarks: ''
  example:
  - "<xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>  \n  \n <xref:System.Windows.Media.Animation.Timeline.Duration%2A>"
  syntax:
    content: protected Timeline (Nullable<TimeSpan> beginTime, System.Windows.Duration duration);
    parameters:
    - id: beginTime
      type: System.Nullable{System.TimeSpan}
      description: "在這個時間<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;></xref>應該開始。 請參閱<xref:System.Windows.Media.Animation.Timeline.BeginTime*>屬性，如需詳細資訊。</xref:System.Windows.Media.Animation.Timeline.BeginTime*>"
    - id: duration
      type: System.Windows.Duration
      description: "這個時間軸播放時，不計算重複的時間長度。 請參閱<xref:System.Windows.Media.Animation.Timeline.Duration*>屬性，如需詳細資訊。</xref:System.Windows.Media.Animation.Timeline.Duration*>"
  overload: System.Windows.Media.Animation.Timeline.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.#ctor(System.Nullable{System.TimeSpan},System.Windows.Duration,System.Windows.Media.Animation.RepeatBehavior)
  id: '#ctor(System.Nullable{System.TimeSpan},System.Windows.Duration,System.Windows.Media.Animation.RepeatBehavior)'
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: Timeline(Nullable<TimeSpan>,Duration,RepeatBehavior)
  nameWithType: Timeline.Timeline(Nullable<TimeSpan>,Duration,RepeatBehavior)
  fullName: System.Windows.Media.Animation.Timeline.Timeline(Nullable<TimeSpan>,Duration,RepeatBehavior)
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "初始化的新執行個體<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;></xref>類別具有指定<> *>， <> </> *>，和<xref:System.Windows.Media.Animation.Timeline.RepeatBehavior*>。</xref:System.Windows.Media.Animation.Timeline.RepeatBehavior*>"
  remarks: ''
  example:
  - "<xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>  \n  \n <xref:System.Windows.Media.Animation.Timeline.Duration%2A>"
  syntax:
    content: protected Timeline (Nullable<TimeSpan> beginTime, System.Windows.Duration duration, System.Windows.Media.Animation.RepeatBehavior repeatBehavior);
    parameters:
    - id: beginTime
      type: System.Nullable{System.TimeSpan}
      description: "在這個時間<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;></xref>應該開始。 請參閱<xref:System.Windows.Media.Animation.Timeline.BeginTime*>屬性，如需詳細資訊。</xref:System.Windows.Media.Animation.Timeline.BeginTime*>"
    - id: duration
      type: System.Windows.Duration
      description: "這個時間軸播放時，不計算重複的時間長度。 請參閱<xref:System.Windows.Media.Animation.Timeline.Duration*>屬性，如需詳細資訊。</xref:System.Windows.Media.Animation.Timeline.Duration*>"
    - id: repeatBehavior
      type: System.Windows.Media.Animation.RepeatBehavior
      description: "反覆項目為這個時間軸的重複行為<> *> 或重複<> *>。 請參閱<xref:System.Windows.Media.Animation.Timeline.RepeatBehavior*>屬性，如需詳細資訊。</xref:System.Windows.Media.Animation.Timeline.RepeatBehavior*>"
  overload: System.Windows.Media.Animation.Timeline.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.AccelerationRatio
  id: AccelerationRatio
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: AccelerationRatio
  nameWithType: Timeline.AccelerationRatio
  fullName: System.Windows.Media.Animation.Timeline.AccelerationRatio
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "取得或設定值，指定時間軸的百分比<xref:System.Windows.Media.Animation.Timeline.Duration*>所花費的經過時間從零加速至其最大速率。</xref:System.Windows.Media.Animation.Timeline.Duration*>"
  remarks: "若要建立動畫，啟動緩慢，且隨著時間過去然後加速使用 AccelerationRatio 屬性。 AccelerationRatio 屬性適用於建立緩效果或進行看起來更自然的移動。 使用 AccelerationRatio 和<xref:System.Windows.Media.Animation.Timeline.DecelerationRatio%2A>一起以建立動畫的速度緩慢，開頭的屬性加速，並完成前一次會降低。</xref:System.Windows.Media.Animation.Timeline.DecelerationRatio%2A>      <a name=&quot;dependencyPropertyInfo_AccelerationRatio&quot;></a># # 相依性屬性資訊 | | |  |-|-|  |識別項欄位 |<xref:System.Windows.Media.Animation.Timeline.AccelerationRatioProperty>|  |中繼資料屬性設定為`true`|None |</xref:System.Windows.Media.Animation.Timeline.AccelerationRatioProperty>"
  syntax:
    content: public double AccelerationRatio { get; set; }
    return:
      type: System.Double
      description: "指定的時間軸的百分比的值介於 0 到 1 (含)， <> </> *> 所花費的經過時間從零加速至其最大速率。如果時間軸的<> *> 也設定屬性，則總和 AccelerationRatio 和<xref:System.Windows.Media.Animation.Timeline.DecelerationRatio*>必須小於或等於 1。</xref:System.Windows.Media.Animation.Timeline.DecelerationRatio*> 預設值為 0。"
  overload: System.Windows.Media.Animation.Timeline.AccelerationRatio*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "AccelerationRatio 為小於 0 或大於 1。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "AccelerationRatio 總和和<xref:System.Windows.Media.Animation.Timeline.DecelerationRatio*>超過 1。</xref:System.Windows.Media.Animation.Timeline.DecelerationRatio*>"
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.AccelerationRatioProperty
  id: AccelerationRatioProperty
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: AccelerationRatioProperty
  nameWithType: Timeline.AccelerationRatioProperty
  fullName: System.Windows.Media.Animation.Timeline.AccelerationRatioProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "識別<xref:System.Windows.Media.Animation.Timeline.AccelerationRatio*>相依性屬性。</xref:System.Windows.Media.Animation.Timeline.AccelerationRatio*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty AccelerationRatioProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.AllocateClock
  id: AllocateClock
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: AllocateClock()
  nameWithType: Timeline.AllocateClock()
  fullName: System.Windows.Media.Animation.Timeline.AllocateClock()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "Creates a <xref href=&quot;System.Windows.Media.Animation.Clock&quot;></xref> for this <xref href=&quot;System.Windows.Media.Animation.Timeline&quot;></xref>."
  remarks: "這個方法會呼叫<xref:System.Windows.Media.Animation.Timeline.CreateClock%2A>方法，且不應直接由您的程式碼呼叫。</xref:System.Windows.Media.Animation.Timeline.CreateClock%2A>"
  syntax:
    content: protected virtual System.Windows.Media.Animation.Clock AllocateClock ();
    parameters: []
    return:
      type: System.Windows.Media.Animation.Clock
      description: "這個時鐘<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;> </xref>。"
  overload: System.Windows.Media.Animation.Timeline.AllocateClock*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.AutoReverse
  id: AutoReverse
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: AutoReverse
  nameWithType: Timeline.AutoReverse
  fullName: System.Windows.Media.Animation.Timeline.AutoReverse
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "取得或設定值，指出是否在時間軸在後反向播放完成向前反覆項目。"
  remarks: "如果包含 AutoReverse 屬性設定為`true`，兩次指定的時間長度的時間軸播放其<xref:System.Windows.Media.Animation.Timeline.Duration%2A>屬性。</xref:System.Windows.Media.Animation.Timeline.Duration%2A>      ### 包含 AutoReverse 和重複項目時的時間軸包含 AutoReverse 屬性設定為`true`及其<xref:System.Windows.Media.Animation.Timeline.RepeatBehavior%2A>屬性造成動畫重複，每個向前反覆項目後面接著回溯的反覆項目。</xref:System.Windows.Media.Animation.Timeline.RepeatBehavior%2A> 這可讓重複一次。 例如，具有 AutoReverse 值的時間軸`true`反覆項目與<xref:System.Windows.Media.Animation.RepeatBehavior.Count%2A>為 2 會播放轉送一次，則回溯，一次，然後轉送，然後向後一次。</xref:System.Windows.Media.Animation.RepeatBehavior.Count%2A>      <a name=&quot;dependencyPropertyInfo_AutoReverse&quot;></a># # 相依性屬性資訊 | | |  |-|-|  |識別項欄位 |<xref:System.Windows.Media.Animation.Timeline.AutoReverseProperty>|  |中繼資料屬性設定為`true`|None |</xref:System.Windows.Media.Animation.Timeline.AutoReverseProperty>"
  syntax:
    content: public bool AutoReverse { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果時間軸會在每個反覆項目; 結尾時反向播放否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Media.Animation.Timeline.AutoReverse*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.AutoReverseProperty
  id: AutoReverseProperty
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: AutoReverseProperty
  nameWithType: Timeline.AutoReverseProperty
  fullName: System.Windows.Media.Animation.Timeline.AutoReverseProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "識別<xref:System.Windows.Media.Animation.Timeline.AutoReverse*>相依性屬性。</xref:System.Windows.Media.Animation.Timeline.AutoReverse*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty AutoReverseProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.BeginTime
  id: BeginTime
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: BeginTime
  nameWithType: Timeline.BeginTime
  fullName: System.Windows.Media.Animation.Timeline.BeginTime
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "取得或設定這個時間<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;></xref>應該開始。"
  remarks: "The BeginTime property is useful for creating timelines that play in a sequence: by increasing the BeginTime of successive timelines that share the same parent, you can stagger their play times.  \n  \n## Negative Values  \n A negative BeginTime value causes a <xref:System.Windows.Media.Animation.Timeline> to behave as though it started at some time in the past. For example, a <xref:System.Windows.Media.Animation.Timeline> with a BeginTime of negative 2.5 seconds and a <xref:System.Windows.Media.Animation.Timeline.Duration%2A> of 5 seconds will appear to be half-way finished when it starts.  \n  \n## BeginTime and SpeedRatio  \n The time described by the BeginTime property is measured in the timeline's parent's time. For example, a timeline with a BeginTime of 5 whose parent has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 2 actually starts after 2.5 seconds.  \n  \n A timeline's own <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> setting does not affect its BeginTime. For example, a timeline with a BeginTime of 5 seconds, a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 2, and a parent timeline with a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 starts after 5 seconds, not 2.5.  \n  \n<a name=\"dependencyPropertyInfo_BeginTime\"></a>   \n## Dependency Property Information  \n  \n|||  \n|-|-|  \n|Identifier field|<xref:System.Windows.Media.Animation.Timeline.BeginTimeProperty>|  \n|Metadata properties set to `true`|None|  \n  \n<a name=\"xamlAttributeUsage_BeginTime\"></a>   \n## XAML Attribute Usage  \n \\<*object* BeginTime=\"[-][*days*.]*hours*:*minutes*:*seconds*[.*fractionalSeconds*]\"/>  \n  \n \\- or -  \n  \n \\<*object* BeginTime=\"[-][*days*.]*hours*:*minutes*\"/>  \n  \n \\- or -  \n  \n \\<*object* BeginTime=\"[-]*days*\"/>  \n  \n \\- or -  \n  \n \\<*object* BeginTime=\"{[x:Null Markup Extension](~/add/includes/ajax-current-ext-md.md)}\"/>  \n  \n<a name=\"xamlValues_BeginTime\"></a>   \n## XAML Values  \n Items in square brackets (`[` and `]`) are optional.  \n  \n *days*  \n <xref:System.Int32?displayProperty=fullName>  \n  \n A value greater than or equal to 0 that describes the number of days spanned by this begin time.  \n  \n *hours*  \n <xref:System.Int32?displayProperty=fullName>  \n  \n A value between 0 and 23 that represents the number of hours spanned by this begin time.  \n  \n *minutes*  \n <xref:System.Int32?displayProperty=fullName>  \n  \n A value between 0 and 59 that represents the number of minutes spanned by this begin time.  \n  \n *seconds*  \n <xref:System.Int32?displayProperty=fullName>  \n  \n A value between 0 and 59 that represents the number of seconds spanned by this begin time.  \n  \n *fractionalSeconds*  \n <xref:System.Int32?displayProperty=fullName>  \n  \n A value consisting of 1 to 7 digits that represents fractional seconds.  \n  \n For the complete <xref:System.TimeSpan> syntax, see the Remarks section of the <xref:System.TimeSpan.Parse%2A> page."
  example:
  - "A timeline's BeginTime property determines the beginning of a timeline's active period. If the timeline has a parent timeline, the BeginTime property determines how long it takes the timeline to start after its parent starts. If the timeline is a root timeline (a <xref:System.Windows.Media.Animation.Storyboard>, for example), the BeginTime property determines how long the timeline takes to start playing after it is triggered.  \n  \n The following example shows several different timelines with different BeginTime settings.  \n  \n [!code-xml[timingbehaviors_snip#_graphicsmm_BeginTimeExampleWholePage](~/add/codesnippet/xaml/timingbehaviors_snip.project/BeginTimeExample.xaml#_graphicsmm_begintimeexamplewholepage)]"
  syntax:
    content: public Nullable<TimeSpan> BeginTime { get; set; }
    return:
      type: System.Nullable{System.TimeSpan}
      description: "在這個時間<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;></xref>應該開始，相對於其父代 BeginTime。 如果這個時間表是根時間表，時間是相對於其互動開始時間 （觸發時間表的）。 這個值可以是正數、 負數或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>; <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>值表示在時間軸永遠不會播放。 預設值為零。"
  overload: System.Windows.Media.Animation.Timeline.BeginTime*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.BeginTimeProperty
  id: BeginTimeProperty
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: BeginTimeProperty
  nameWithType: Timeline.BeginTimeProperty
  fullName: System.Windows.Media.Animation.Timeline.BeginTimeProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "識別<xref:System.Windows.Media.Animation.Timeline.BeginTime*>相依性屬性。</xref:System.Windows.Media.Animation.Timeline.BeginTime*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty BeginTimeProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.Clone
  id: Clone
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: Clone()
  nameWithType: Timeline.Clone()
  fullName: System.Windows.Media.Animation.Timeline.Clone()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "建立可修改複製品這個<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;> </xref>，製作這個物件值的深層複本。"
  remarks: "這個方法用來產生的可修改複本凍結<xref:System.Windows.Freezable>物件 (或任何<xref:System.Windows.Freezable>物件)。</xref:System.Windows.Freezable> </xref:System.Windows.Freezable> 為了方便起見，這個方法會遮蔽強型別實作繼承的版本。       如需詳細資訊，請參閱<xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>.</xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>       當複製相依性屬性時，這個方法會複製資源參考和資料繫結 （但可能已不能再解析），但不是動畫或它們目前的值。"
  syntax:
    content: public System.Windows.Media.Animation.Timeline Clone ();
    parameters: []
    return:
      type: System.Windows.Media.Animation.Timeline
      description: "目前物件的可修改複本。 複製的物件<> *> 屬性是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>即使來源的<> *> 屬性<xref uid=&quot;langword_csharp_true.&quot; name=&quot;true.&quot; href=&quot;&quot;></xref>"
  overload: System.Windows.Media.Animation.Timeline.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.CloneCurrentValue
  id: CloneCurrentValue
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: CloneCurrentValue()
  nameWithType: Timeline.CloneCurrentValue()
  fullName: System.Windows.Media.Animation.Timeline.CloneCurrentValue()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "建立可修改複製品這個<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;></xref>物件，製作這個物件目前值的深層複本。"
  remarks: "這個方法用來產生的可修改複本凍結<xref:System.Windows.Freezable>物件 (或任何<xref:System.Windows.Freezable>物件)。</xref:System.Windows.Freezable> </xref:System.Windows.Freezable> 為了方便起見，這個方法會遮蔽強型別實作繼承的版本。       如需詳細資訊，請參閱<xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName>.</xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName>       不會複製資源參考、 資料繫結和動畫，但是其目前值。"
  syntax:
    content: public System.Windows.Media.Animation.Timeline CloneCurrentValue ();
    parameters: []
    return:
      type: System.Windows.Media.Animation.Timeline
      description: "目前物件的可修改複本。 複製的物件<> *> 屬性是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>即使來源的<> *> 屬性是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Media.Animation.Timeline.CloneCurrentValue*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.Completed
  id: Completed
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: Completed
  nameWithType: Timeline.Completed
  fullName: System.Windows.Media.Animation.Timeline.Completed
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: '這個時間軸完全完成播放時發生︰ 它不會再進入作用期。'
  remarks: "如果這個時間表是根時間表的時間軸的樹狀結構，它已完成播放 （其中包含重複） 作用期結束及所有子系已達到其作用中期間結束之後。 如果這個時間表是子時刻表，認定為完全結束播放時所屬到達時間表樹狀結構的根時間表作用期和所有子時刻表的結尾已完成播放。       停止時間軸不會觸發已完成的事件，但略過它到其填滿期間。       <xref:System.Object>參數的<xref:System.EventHandler>事件處理常式是時間軸的<xref:System.Windows.Media.Animation.Clock>.</xref:System.Windows.Media.Animation.Clock> </xref:System.EventHandler> </xref:System.Object>       雖然這個事件處理常式似乎是相關聯時間軸，但它實際上會向註冊<xref:System.Windows.Media.Animation.Clock>建立這個時間軸。</xref:System.Windows.Media.Animation.Clock>  如需詳細資訊，請參閱[計時事件概觀](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "In the following example, two <xref:System.Windows.Media.Animation.Storyboard> objects are used to create an animation transition between two images, stored using <xref:System.Windows.Media.ImageSource> objects and displayed using an <xref:System.Windows.Controls.Image> control. One storyboard shrinks the image control until it disappears. After it completes, the old <xref:System.Windows.Media.ImageSource> is swapped with the other <xref:System.Windows.Media.ImageSource>, and a second storyboard that expands the image control until it is full-sized again.  \n  \n [!code-xml[timingbehaviors_snip#TimelineCompletedExampleMarkupUsingWholePage](~/add/codesnippet/xaml/timingbehaviors_snip.project/TimelineCompletedExample.xaml#timelinecompletedexamplemarkupusingwholepage)]  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public event EventHandler Completed;
    return:
      type: System.EventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.CreateClock
  id: CreateClock
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: CreateClock()
  nameWithType: Timeline.CreateClock()
  fullName: System.Windows.Media.Animation.Timeline.CreateClock()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "建立新的可控制<xref href=&quot;System.Windows.Media.Animation.Clock&quot;></xref>從此<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;> </xref>。 如果這個<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;></xref>子系，時鐘的樹狀結構會建立與這個<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;></xref>作為根。"
  remarks: '雖然這<xref:System.Windows.Media.Animation.Timeline>可以是子工作的一或多個<xref:System.Windows.Media.Animation.TimelineGroup>物件，這項資訊會被忽略︰ 這個方法會將目前<xref:System.Windows.Media.Animation.Timeline>為根<xref:System.Windows.Media.Animation.Timeline>.</xref:System.Windows.Media.Animation.Timeline> </xref:System.Windows.Media.Animation.Timeline> </xref:System.Windows.Media.Animation.TimelineGroup> </xref:System.Windows.Media.Animation.Timeline>'
  syntax:
    content: public System.Windows.Media.Animation.Clock CreateClock ();
    parameters: []
    return:
      type: System.Windows.Media.Animation.Clock
      description: "新的、 可控制<xref href=&quot;System.Windows.Media.Animation.Clock&quot;></xref>建構<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;> </xref>。 如果這個<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;></xref>是<xref href=&quot;System.Windows.Media.Animation.TimelineGroup&quot;> </xref> ，其中包含子時間表的樹狀結構<xref href=&quot;System.Windows.Media.Animation.Clock&quot;></xref>物件會透過可控制<xref href=&quot;System.Windows.Media.Animation.Clock&quot;></xref>建立從這個<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;></xref>作為根。"
  overload: System.Windows.Media.Animation.Timeline.CreateClock*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.CreateClock(System.Boolean)
  id: CreateClock(System.Boolean)
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: CreateClock(Boolean)
  nameWithType: Timeline.CreateClock(Boolean)
  fullName: System.Windows.Media.Animation.Timeline.CreateClock(Boolean)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "建立新<xref href=&quot;System.Windows.Media.Animation.Clock&quot;></xref>從此<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;> </xref> ，並指定是否新<xref href=&quot;System.Windows.Media.Animation.Clock&quot;></xref>是控制。 如果這個<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;></xref>子系，時鐘的樹狀結構會建立與這個<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;></xref>作為根。"
  remarks: '雖然這<xref:System.Windows.Media.Animation.Timeline>可以是子工作的一或多個<xref:System.Windows.Media.Animation.TimelineGroup>物件，這項資訊會被忽略︰ 這個方法會將目前<xref:System.Windows.Media.Animation.Timeline>為根<xref:System.Windows.Media.Animation.Timeline>.</xref:System.Windows.Media.Animation.Timeline> </xref:System.Windows.Media.Animation.Timeline> </xref:System.Windows.Media.Animation.TimelineGroup> </xref:System.Windows.Media.Animation.Timeline>'
  syntax:
    content: public System.Windows.Media.Animation.Clock CreateClock (bool hasControllableRoot);
    parameters:
    - id: hasControllableRoot
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果根<xref href=&quot;System.Windows.Media.Animation.Clock&quot;></xref>傳回應傳回<xref href=&quot;System.Windows.Media.Animation.ClockController&quot;></xref>從其<xref:System.Windows.Media.Animation.Clock.Controller*>屬性以便<xref href=&quot;System.Windows.Media.Animation.Clock&quot;></xref>樹狀結構可以是以互動方式控制，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Windows.Media.Animation.Clock.Controller*>"
    return:
      type: System.Windows.Media.Animation.Clock
      description: "新<xref href=&quot;System.Windows.Media.Animation.Clock&quot;></xref>建構<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;> </xref>。 如果這個<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;></xref>是<xref href=&quot;System.Windows.Media.Animation.TimelineGroup&quot;> </xref> ，其中包含子時間表的樹狀結構<xref href=&quot;System.Windows.Media.Animation.Clock&quot;></xref>物件會透過可控制<xref href=&quot;System.Windows.Media.Animation.Clock&quot;></xref>建立從這個<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;></xref>作為根。"
  overload: System.Windows.Media.Animation.Timeline.CreateClock*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated
  id: CurrentGlobalSpeedInvalidated
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: CurrentGlobalSpeedInvalidated
  nameWithType: Timeline.CurrentGlobalSpeedInvalidated
  fullName: System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "發生於進展時間軸的時鐘變更到哪個時段的速率。"
  remarks: "在下列情況下變更的時間軸的時鐘的目前全域速度:-時鐘變更方向，因為它的時間軸<xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A>設定。</xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A>      -時鐘加速或減速由於其時間表<xref:System.Windows.Media.Animation.Timeline.AccelerationRatio%2A>或<xref:System.Windows.Media.Animation.Timeline.DecelerationRatio%2A>屬性設定。</xref:System.Windows.Media.Animation.Timeline.DecelerationRatio%2A> </xref:System.Windows.Media.Animation.Timeline.AccelerationRatio%2A>      -時鐘連接而暫停或繼續。      -時鐘變成非使用中，或重新啟動。      -<xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A>的一種時鐘的父代的變更。</xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A>       CurrentGlobalSpeedInvalidated 事件可用於追蹤時間軸的時鐘會變成已暫停;在您的事件處理常式，使用 分鏡腳本的<xref:System.Windows.Media.Animation.Storyboard.GetCurrentGlobalSpeed%2A>方法或時鐘核取<xref:System.Windows.Media.Animation.Clock.IsPaused%2A>屬性來判斷是否要暫停其時鐘; 這比較先前快取的值，以判斷是否已變更。</xref:System.Windows.Media.Animation.Clock.IsPaused%2A> </xref:System.Windows.Media.Animation.Storyboard.GetCurrentGlobalSpeed%2A>       <xref:System.Object>參數的<xref:System.EventHandler>事件處理常式是時間軸的<xref:System.Windows.Media.Animation.Clock>.</xref:System.Windows.Media.Animation.Clock> </xref:System.EventHandler> </xref:System.Object>       雖然這個事件處理常式似乎是相關聯時間軸，但它實際上會向註冊<xref:System.Windows.Media.Animation.Clock>建立這個時間軸。</xref:System.Windows.Media.Animation.Clock>  如需詳細資訊，請參閱[計時事件概觀](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following example shows how to register for the CurrentGlobalSpeedInvalidated event.  \n  \n [!code-cs[timingbehaviors_procedural_snip#TimelineCurrentGlobalSpeedInvalidatedExampleWholePage](~/add/codesnippet/csharp/TimingBehavior_csharp/TimelineCurrentGlobalSpeedInvalidatedExample.cs#timelinecurrentglobalspeedinvalidatedexamplewholepage)]\n [!code-vb[timingbehaviors_procedural_snip#TimelineCurrentGlobalSpeedInvalidatedExampleWholePage](~/add/codesnippet/visualbasic/timingbehavior_vb/timelinecurrentglobalspeedinvalidatedexample.vb#timelinecurrentglobalspeedinvalidatedexamplewholepage)]"
  syntax:
    content: public event EventHandler CurrentGlobalSpeedInvalidated;
    return:
      type: System.EventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.CurrentStateInvalidated
  id: CurrentStateInvalidated
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: CurrentStateInvalidated
  nameWithType: Timeline.CurrentStateInvalidated
  fullName: System.Windows.Media.Animation.Timeline.CurrentStateInvalidated
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "發生時<xref:System.Windows.Media.Animation.Clock.CurrentState*>屬性的時間軸的<xref href=&quot;System.Windows.Media.Animation.Clock&quot;></xref>會更新。</xref:System.Windows.Media.Animation.Clock.CurrentState*>"
  remarks: "使用 CurrentStateInvalidated 事件，當您想要在時間軸時收到通知<xref:System.Windows.Media.Animation.Clock>啟動、 停止或填滿。</xref:System.Windows.Media.Animation.Clock>       暫停<xref:System.Windows.Media.Animation.Clock>不會變更其<xref:System.Windows.Media.Animation.Clock.CurrentState%2A>.</xref:System.Windows.Media.Animation.Clock.CurrentState%2A> </xref:System.Windows.Media.Animation.Clock> 若要收到通知的時鐘會變成暫停時，要使用<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>事件。</xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>       雖然就會發生此事件時<xref:System.Windows.Media.Animation.ClockState>會變成無效，不一定表示<xref:System.Windows.Media.Animation.ClockState>變更︰<xref:System.Windows.Media.Animation.Clock>切換從<xref:System.Windows.Media.Animation.ClockState>至<xref:System.Windows.Media.Animation.ClockState>然後再設回<xref:System.Windows.Media.Animation.ClockState>在相同刻度將會導致引發此事件，但其<xref:System.Windows.Media.Animation.Clock.CurrentState%2A>屬性實際上不會變更。</xref:System.Windows.Media.Animation.Clock.CurrentState%2A> </xref:System.Windows.Media.Animation.ClockState> </xref:System.Windows.Media.Animation.ClockState> </xref:System.Windows.Media.Animation.ClockState> </xref:System.Windows.Media.Animation.Clock> </xref:System.Windows.Media.Animation.ClockState> </xref:System.Windows.Media.Animation.ClockState>       <xref:System.Object>參數<xref:System.EventHandler>事件處理常式是<xref:System.Windows.Media.Animation.Clock>這個時間軸所建立之。</xref:System.Windows.Media.Animation.Clock> </xref:System.EventHandler> </xref:System.Object>       雖然這個事件處理常式似乎是相關聯時間軸，但它實際上會向註冊<xref:System.Windows.Media.Animation.Clock>建立這個時間軸。</xref:System.Windows.Media.Animation.Clock>  如需詳細資訊，請參閱[計時事件概觀](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public event EventHandler CurrentStateInvalidated;
    return:
      type: System.EventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.CurrentTimeInvalidated
  id: CurrentTimeInvalidated
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: CurrentTimeInvalidated
  nameWithType: Timeline.CurrentTimeInvalidated
  fullName: System.Windows.Media.Animation.Timeline.CurrentTimeInvalidated
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "發生時<xref:System.Windows.Media.Animation.Clock.CurrentTime*>屬性的時間軸的<xref href=&quot;System.Windows.Media.Animation.Clock&quot;></xref>會更新。</xref:System.Windows.Media.Animation.Clock.CurrentTime*>"
  remarks: "使用<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated>當您想要的事件時收到通知<xref:System.Windows.Media.Animation.Clock.CurrentTime%2A>以時間表的<xref:System.Windows.Media.Animation.Clock>會更新。</xref:System.Windows.Media.Animation.Clock> </xref:System.Windows.Media.Animation.Clock.CurrentTime%2A> </xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated>       <xref:System.Object>參數的<xref:System.EventHandler>事件處理常式是時間軸的<xref:System.Windows.Media.Animation.Clock>.</xref:System.Windows.Media.Animation.Clock> </xref:System.EventHandler> </xref:System.Object>       雖然這個事件處理常式似乎是相關聯時間軸，但它實際上會向註冊<xref:System.Windows.Media.Animation.Clock>建立這個時間軸。</xref:System.Windows.Media.Animation.Clock>  如需詳細資訊，請參閱[計時事件概觀](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following example shows how to register for the CurrentTimeInvalidated event.  \n  \n [!code-cs[timingbehaviors_procedural_snip#TimelineCurrentTimeInvalidatedExampleWholePage](~/add/codesnippet/csharp/TimingBehavior_csharp/TimelineCurrentTimeInvalidatedExample.cs#timelinecurrenttimeinvalidatedexamplewholepage)]\n [!code-vb[timingbehaviors_procedural_snip#TimelineCurrentTimeInvalidatedExampleWholePage](~/add/codesnippet/visualbasic/timingbehavior_vb/timelinecurrenttimeinvalidatedexample.vb#timelinecurrenttimeinvalidatedexamplewholepage)]"
  syntax:
    content: public event EventHandler CurrentTimeInvalidated;
    return:
      type: System.EventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.DecelerationRatio
  id: DecelerationRatio
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: DecelerationRatio
  nameWithType: Timeline.DecelerationRatio
  fullName: System.Windows.Media.Animation.Timeline.DecelerationRatio
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "取得或設定值，指定時間軸的百分比<xref:System.Windows.Media.Animation.Timeline.Duration*>在從其最大速率減速所經過時間，為零。</xref:System.Windows.Media.Animation.Timeline.Duration*>"
  remarks: "若要建立動畫的速度很慢關閉之前停止使用 DecelerationRatio 屬性。 DecelerationRatio 屬性適用於建立緩效果或進行看起來更自然的移動。 使用<xref:System.Windows.Media.Animation.Timeline.AccelerationRatio%2A>DecelerationRatio 屬性一起以建立的速度緩慢，開始的動畫加速，並完成前一次會降低。</xref:System.Windows.Media.Animation.Timeline.AccelerationRatio%2A>      <a name=&quot;dependencyPropertyInfo_DecelerationRatio&quot;></a># # 相依性屬性資訊 | | |  |-|-|  |識別項欄位 |<xref:System.Windows.Media.Animation.Timeline.DecelerationRatioProperty>|  |中繼資料屬性設定為`true`|None |</xref:System.Windows.Media.Animation.Timeline.DecelerationRatioProperty>"
  syntax:
    content: public double DecelerationRatio { get; set; }
    return:
      type: System.Double
      description: "指定的時間軸的百分比的值介於 0 到 1 (含)， <> </> *> 在從其最大速率減速所經過時間，為零。如果時間軸的<> *> 也設定屬性，則 DecelerationRatio 的加總和<xref:System.Windows.Media.Animation.Timeline.AccelerationRatio*>必須小於或等於 1。</xref:System.Windows.Media.Animation.Timeline.AccelerationRatio*> 預設值為 0。"
  overload: System.Windows.Media.Animation.Timeline.DecelerationRatio*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "DecelerationRatio 為小於 0 或大於 1。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "總和<xref:System.Windows.Media.Animation.Timeline.AccelerationRatio*>和 DecelerationRatio 超過 1。</xref:System.Windows.Media.Animation.Timeline.AccelerationRatio*>"
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.DecelerationRatioProperty
  id: DecelerationRatioProperty
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: DecelerationRatioProperty
  nameWithType: Timeline.DecelerationRatioProperty
  fullName: System.Windows.Media.Animation.Timeline.DecelerationRatioProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "用來識別的<xref:System.Windows.Media.Animation.Timeline.DecelerationRatio*>相依性屬性。</xref:System.Windows.Media.Animation.Timeline.DecelerationRatio*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty DecelerationRatioProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.DesiredFrameRateProperty
  id: DesiredFrameRateProperty
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: DesiredFrameRateProperty
  nameWithType: Timeline.DesiredFrameRateProperty
  fullName: System.Windows.Media.Animation.Timeline.DesiredFrameRateProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "識別<xref:System.Windows.Media.Animation.Timeline.DesiredFrameRate*>附加屬性。</xref:System.Windows.Media.Animation.Timeline.DesiredFrameRate*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty DesiredFrameRateProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.Duration
  id: Duration
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: Duration
  nameWithType: Timeline.Duration
  fullName: System.Windows.Media.Animation.Timeline.Duration
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "取得或設定的這個時間軸播放時，不計算重複的時間長度。"
  remarks: "A timeline's simple duration constitutes the time for a single forward iteration versus the total play time, which includes repetitions.  \n  \n## Default Duration Behavior  \n The behavior of a Duration structure with a value of <xref:System.Windows.Duration.Automatic%2A> depends on the type of timeline:  \n  \n|||  \n|-|-|  \n|**Timeline**|**Behavior**|  \n|<xref:System.Windows.Media.Animation.Timeline>|Undetermined (<xref:System.Windows.Media.Animation.Timeline> is abstract)|  \n|<xref:System.Windows.Media.Animation.ParallelTimeline>,<br /><br /> <xref:System.Windows.Media.Animation.Storyboard>,<br /><br /> <xref:System.Windows.Media.Animation.TimelineGroup>|Expands to fit child timelines|  \n|\\<*Type*>Animation (Known as a \"From/To/By\" or \"basic\" animations)|1 second|  \n|\\<*Type*>AnimationUsingKeyFrames (Known as key frame animations)|Sum of all key frame <xref:System.Windows.Media.Animation.KeyTime> values|  \n  \n<a name=\"dependencyPropertyInfo_Duration\"></a>   \n## Dependency Property Information  \n  \n|||  \n|-|-|  \n|Identifier field|<xref:System.Windows.Media.Animation.Timeline.DurationProperty>|  \n|Metadata properties set to `true`|None|"
  example:
  - "<xref:System.Windows.Media.Animation.ParallelTimeline> and <xref:System.Windows.Media.Animation.Storyboard> are types of <xref:System.Windows.Media.Animation.TimelineGroup> objects. The duration of a <xref:System.Windows.Media.Animation.TimelineGroup> is determined by the duration of its child timelines. For example, the <xref:System.Windows.Media.Animation.Storyboard> below will run for six seconds (duration of 6 seconds) because that is when its last child Timeline (<xref:System.Windows.Media.Animation.DoubleAnimation>) ends.  \n  \n> [!NOTE]\n>  Note: code has been omitted from the following examples, which are provided for illustrative purposed only.  \n  \n [xaml]  \n  \n```  \n...  \n  <Storyboard>  \n    <DoubleAnimation Duration=\"0:0:2\" …/>  \n    <DoubleAnimation Duration=\"0:0:4\" BeginTime=\"0:0:2\" …/>  \n  </Storyboard>   \n...  \n```  \n  \n Examples of \\<*Type*>Animations include <xref:System.Windows.Media.Animation.DoubleAnimation>, <xref:System.Windows.Media.Animation.PointAnimation>, <xref:System.Windows.Media.Animation.ColorAnimation>, etc. If no Duration is specified for these types of animations, they will run for one second.  \n  \n [xaml]  \n  \n```  \n...  \n  <!-- With no Duration specified, this animation will run for   \n       one second -->  \n  <DoubleAnimation .../>  \n...  \n```  \n  \n Examples of \\<*Type*>AnimationUsingKeyFrames include <xref:System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames>, <xref:System.Windows.Media.Animation.PointAnimationUsingKeyFrames>, etc. If no Duration is specified for these types of animations they will run until all key frames are finished.  \n  \n [xaml]  \n  \n```  \n...  \n  <Storyboard>  \n  \n    <!-- This key frame animation will end at 4.5 seconds  \n         Because that is when its last KeyFrame KeyTime ends. -->  \n    <DoubleAnimationUsingKeyFrames ...>  \n      <LinearDoubleKeyFrame ... KeyTime=\"0:0:3\" />  \n      <DiscreteDoubleKeyFrame ... KeyTime=\"0:0:3.5\" />  \n      <DiscreteDoubleKeyFrame ... KeyTime=\"0:0:4\" />  \n      <DiscreteDoubleKeyFrame ... KeyTime=\"0:0:4.5\" />  \n    </DoubleAnimationUsingKeyFrames>  \n  </Storyboard>   \n...  \n```"
  syntax:
    content: public System.Windows.Duration Duration { get; set; }
    return:
      type: System.Windows.Duration
      description: 'The timeline''s simple duration: the amount of time this timeline takes to complete a single forward iteration. The default value is <xref:System.Windows.Duration.Automatic*>.'
  overload: System.Windows.Media.Animation.Timeline.Duration*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.DurationProperty
  id: DurationProperty
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: DurationProperty
  nameWithType: Timeline.DurationProperty
  fullName: System.Windows.Media.Animation.Timeline.DurationProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "識別<xref:System.Windows.Media.Animation.Timeline.Duration*>相依性屬性。</xref:System.Windows.Media.Animation.Timeline.Duration*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty DurationProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.FillBehavior
  id: FillBehavior
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: FillBehavior
  nameWithType: Timeline.FillBehavior
  fullName: System.Windows.Media.Animation.Timeline.FillBehavior
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "取得或設定值，指定如何<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;></xref>作用期結束後行為。"
  remarks: "將動畫 FillBehavior 屬性設定為<xref:System.Windows.Media.Animation.FillBehavior>當您想保留其值，其作用期結束後動畫。</xref:System.Windows.Media.Animation.FillBehavior> 已達到其作用期結束之動畫的 FillBehavior 設<xref:System.Windows.Media.Animation.FillBehavior>即為其填滿期間。</xref:System.Windows.Media.Animation.FillBehavior> 當您不想保留其值，其作用期結束後的動畫時，其 FillBehavior 將屬性設定為<xref:System.Windows.Media.Animation.FillBehavior>.</xref:System.Windows.Media.Animation.FillBehavior>       在填滿期間動畫持續覆寫其目標屬性的值，因為嘗試將目標屬性的值，透過其他方式設定可能會不有任何作用。 如需顯示如何設定之後已經建立動畫的屬性值的範例，請參閱[How to︰ 設定屬性之後建立的動畫它使用分鏡腳本](~/add/includes/ajax-current-ext-md.md)。       子時刻表會停止播放，並填滿時就會停止其父時間軸。如果您想子時刻表來填滿，，請確定其父時間軸具有的<xref:System.Windows.Media.Animation.FillBehavior>。</xref:System.Windows.Media.Animation.FillBehavior> FillBehavior      <a name=&quot;dependencyPropertyInfo_FillBehavior&quot;></a># # 相依性屬性資訊 | | |  |-|-|  |識別項欄位 |<xref:System.Windows.Media.Animation.Timeline.FillBehaviorProperty>|  |中繼資料屬性設定為`true`|None |</xref:System.Windows.Media.Animation.Timeline.FillBehaviorProperty>"
  syntax:
    content: public System.Windows.Media.Animation.FillBehavior FillBehavior { get; set; }
    return:
      type: System.Windows.Media.Animation.FillBehavior
      description: "值，指定時間軸的行為之後，其作用期結束，但它的父系已在作用或填滿期間。 預設值是<xref href=&quot;System.Windows.Media.Animation.FillBehavior&quot;> </xref>。"
  overload: System.Windows.Media.Animation.Timeline.FillBehavior*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.FillBehaviorProperty
  id: FillBehaviorProperty
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: FillBehaviorProperty
  nameWithType: Timeline.FillBehaviorProperty
  fullName: System.Windows.Media.Animation.Timeline.FillBehaviorProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "識別<xref:System.Windows.Media.Animation.Timeline.FillBehavior*>相依性屬性。</xref:System.Windows.Media.Animation.Timeline.FillBehavior*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty FillBehaviorProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.FreezeCore(System.Boolean)
  id: FreezeCore(System.Boolean)
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: FreezeCore(Boolean)
  nameWithType: Timeline.FreezeCore(Boolean)
  fullName: System.Windows.Media.Animation.Timeline.FreezeCore(Boolean)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "使這個成為<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;></xref>為不可修改，或決定是否可以設為不可修改。"
  remarks: "請勿呼叫這個方法，直接 （只是呼叫基底實作中）。 這個方法會在內部呼叫<xref:System.Windows.Freezable.Freeze%2A>.</xref:System.Windows.Freezable.Freeze%2A>"
  syntax:
    content: protected override bool FreezeCore (bool isChecking);
    parameters:
    - id: isChecking
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要檢查是否可以凍結這個執行個體。<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>凍結這個執行個體。"
    return:
      type: System.Boolean
      description: "如果<code> isChecking </code>為 true，這個方法會傳回<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果這個執行個體可以設為唯讀，或<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>如果無法設為唯讀。       如果<code> isChecking </code>為 false，這個方法會傳回<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果這個執行個體現在是唯讀的或<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>如果無法設為唯讀，具有副作用，即開始變更這個物件的已凍結的狀態。"
  overload: System.Windows.Media.Animation.Timeline.FreezeCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.GetAsFrozenCore(System.Windows.Freezable)
  id: GetAsFrozenCore(System.Windows.Freezable)
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: GetAsFrozenCore(Freezable)
  nameWithType: Timeline.GetAsFrozenCore(Freezable)
  fullName: System.Windows.Media.Animation.Timeline.GetAsFrozenCore(Freezable)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "使這個執行個體的指定複製品<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;></xref>物件。"
  remarks: "當複製相依性屬性時，這個方法會複製資源參考和資料繫結 （但可能已不能再解析），但不是動畫或它們目前的值。 請注意，如果這些屬性包含資源的參考或資料繫結<xref:System.Windows.Freezable.GetAsFrozen%2A>失敗時嘗試凍結物件，並將擲回<xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> </xref:System.Windows.Freezable.GetAsFrozen%2A>       這個方法會呼叫<xref:System.Windows.Freezable.GetAsFrozen%2A>方法並不應該呼叫直接從程式碼中，除了當呼叫時覆寫這個方法的基底實作。</xref:System.Windows.Freezable.GetAsFrozen%2A> 若要建立目前物件的凍結的複本，請呼叫<xref:System.Windows.Freezable.GetAsFrozen%2A>而不是直接呼叫這個方法。</xref:System.Windows.Freezable.GetAsFrozen%2A>       如需詳細資訊，請參閱<xref:System.Windows.Freezable.GetAsFrozenCore%2A?displayProperty=fullName>.</xref:System.Windows.Freezable.GetAsFrozenCore%2A?displayProperty=fullName>"
  syntax:
    content: protected override void GetAsFrozenCore (System.Windows.Freezable sourceFreezable);
    parameters:
    - id: sourceFreezable
      type: System.Windows.Freezable
      description: "<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;> </xref>来複製的執行個體。"
  overload: System.Windows.Media.Animation.Timeline.GetAsFrozenCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.GetCurrentValueAsFrozenCore(System.Windows.Freezable)
  id: GetCurrentValueAsFrozenCore(System.Windows.Freezable)
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: GetCurrentValueAsFrozenCore(Freezable)
  nameWithType: Timeline.GetCurrentValueAsFrozenCore(Freezable)
  fullName: System.Windows.Media.Animation.Timeline.GetCurrentValueAsFrozenCore(Freezable)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "使這個執行個體指定的凍結的複製品<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;> </xref>。 不會複製資源參考、 資料繫結和動畫，但是其目前值。"
  remarks: "這個方法會呼叫<xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A>方法並不應該呼叫直接從程式碼中，除了當呼叫時覆寫這個方法的基底實作。</xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> 若要建立目前物件的凍結的複本，請呼叫<xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A>而不是直接呼叫這個方法。</xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A>       如需詳細資訊，請參閱<xref:System.Windows.Freezable.GetCurrentValueAsFrozenCore%2A?displayProperty=fullName>.</xref:System.Windows.Freezable.GetCurrentValueAsFrozenCore%2A?displayProperty=fullName>"
  syntax:
    content: protected override void GetCurrentValueAsFrozenCore (System.Windows.Freezable sourceFreezable);
    parameters:
    - id: sourceFreezable
      type: System.Windows.Freezable
      description: "<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;> </xref>来複製和凍結。"
  overload: System.Windows.Media.Animation.Timeline.GetCurrentValueAsFrozenCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.GetDesiredFrameRate(System.Windows.Media.Animation.Timeline)
  id: GetDesiredFrameRate(System.Windows.Media.Animation.Timeline)
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: GetDesiredFrameRate(Timeline)
  nameWithType: Timeline.GetDesiredFrameRate(Timeline)
  fullName: System.Windows.Media.Animation.Timeline.GetDesiredFrameRate(Timeline)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "取得指定的所需的畫面播放速率<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;> </xref>。"
  remarks: "這個方法提供的讀取權限<xref:System.Windows.Media.Animation.Timeline.DesiredFrameRate%2A>附加屬性。</xref:System.Windows.Media.Animation.Timeline.DesiredFrameRate%2A> 如需詳細資訊，請參閱<xref:System.Windows.Media.Animation.Timeline.DesiredFrameRate%2A>頁面。</xref:System.Windows.Media.Animation.Timeline.DesiredFrameRate%2A>"
  syntax:
    content: public static Nullable<int> GetDesiredFrameRate (System.Windows.Media.Animation.Timeline timeline);
    parameters:
    - id: timeline
      type: System.Windows.Media.Animation.Timeline
      description: "要從中擷取所需的畫面播放速率時間軸。"
    return:
      type: System.Nullable{System.Int32}
      description: "這個時間軸所需的畫面播放速率。 預設值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Media.Animation.Timeline.GetDesiredFrameRate*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.GetNaturalDuration(System.Windows.Media.Animation.Clock)
  id: GetNaturalDuration(System.Windows.Media.Animation.Clock)
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: GetNaturalDuration(Clock)
  nameWithType: Timeline.GetNaturalDuration(Clock)
  fullName: System.Windows.Media.Animation.Timeline.GetNaturalDuration(Clock)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "傳回單一的反覆項目，這個長度<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;> </xref>。"
  remarks: "這個方法只能呼叫時的<xref:System.Windows.Media.Animation.Timeline.Duration%2A>屬性設定為<xref:System.Windows.Duration.Automatic%2A>.</xref:System.Windows.Duration.Automatic%2A> </xref:System.Windows.Media.Animation.Timeline.Duration%2A> 如果<xref:System.Windows.Media.Animation.Timeline.Duration%2A>是<xref:System.Windows.Duration.Automatic%2A>自然持續期間由<xref:System.Windows.Media.Animation.Timeline.GetNaturalDurationCore%2A>.</xref:System.Windows.Media.Animation.Timeline.GetNaturalDurationCore%2A>該特定類別的實作，</xref:System.Windows.Duration.Automatic%2A> </xref:System.Windows.Media.Animation.Timeline.Duration%2A>       如果 GetNaturalDuration 傳回<xref:System.Windows.Duration.Automatic%2A>，這表示自然持續期間為的 unknown，這表示<xref:System.Windows.Duration.Forever%2A>.</xref:System.Windows.Duration.Forever%2A>自然持續期間</xref:System.Windows.Duration.Automatic%2A> 就是這種串流處理媒體的情況。       請注意，這個時間軸的時鐘不建立一個傳遞此方法，但會提供不可靠的結果。"
  syntax:
    content: protected System.Windows.Duration GetNaturalDuration (System.Windows.Media.Animation.Clock clock);
    parameters:
    - id: clock
      type: System.Windows.Media.Animation.Clock
      description: "<xref href=&quot;System.Windows.Media.Animation.Clock&quot;> </xref>所建立之此<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;> </xref>。"
    return:
      type: System.Windows.Duration
      description: "單一的反覆項目，這個長度<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;> </xref>，或<xref:System.Windows.Duration.Automatic*>如果自然持續期間為未知。</xref:System.Windows.Duration.Automatic*>"
  overload: System.Windows.Media.Animation.Timeline.GetNaturalDuration*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.GetNaturalDurationCore(System.Windows.Media.Animation.Clock)
  id: GetNaturalDurationCore(System.Windows.Media.Animation.Clock)
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: GetNaturalDurationCore(Clock)
  nameWithType: Timeline.GetNaturalDurationCore(Clock)
  fullName: System.Windows.Media.Animation.Timeline.GetNaturalDurationCore(Clock)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "傳回單一的反覆項目，這個長度<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;> </xref>。 這個方法提供<xref:System.Windows.Media.Animation.Timeline.GetNaturalDuration*>.</xref:System.Windows.Media.Animation.Timeline.GetNaturalDuration*>的實作"
  remarks: "這個方法提供實作<xref:System.Windows.Media.Animation.Timeline.GetNaturalDuration%2A>，且不應該直接從程式碼呼叫。</xref:System.Windows.Media.Animation.Timeline.GetNaturalDuration%2A> 使用<xref:System.Windows.Media.Animation.Timeline.GetNaturalDuration%2A>改用。</xref:System.Windows.Media.Animation.Timeline.GetNaturalDuration%2A>"
  syntax:
    content: protected virtual System.Windows.Duration GetNaturalDurationCore (System.Windows.Media.Animation.Clock clock);
    parameters:
    - id: clock
      type: System.Windows.Media.Animation.Clock
      description: "<xref href=&quot;System.Windows.Media.Animation.Clock&quot;> </xref>所建立之此<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;> </xref>。"
    return:
      type: System.Windows.Duration
      description: "單一的反覆項目，這個長度<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;> </xref>，或<xref:System.Windows.Duration.Automatic*>如果自然持續期間為未知。</xref:System.Windows.Duration.Automatic*>"
  overload: System.Windows.Media.Animation.Timeline.GetNaturalDurationCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.Name
  id: Name
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: Name
  nameWithType: Timeline.Name
  fullName: System.Windows.Media.Animation.Timeline.Name
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "取得或設定這個名稱<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;> </xref>。"
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "這個時間軸的名稱。 預設值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Media.Animation.Timeline.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.NameProperty
  id: NameProperty
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: NameProperty
  nameWithType: Timeline.NameProperty
  fullName: System.Windows.Media.Animation.Timeline.NameProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "識別<xref:System.Windows.Media.Animation.Timeline.Name*>相依性屬性。</xref:System.Windows.Media.Animation.Timeline.Name*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty NameProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.RemoveRequested
  id: RemoveRequested
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: RemoveRequested
  nameWithType: Timeline.RemoveRequested
  fullName: System.Windows.Media.Animation.Timeline.RemoveRequested
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "針對這個時間軸建立時鐘或其父時間軸的其中一個移除時發生。"
  remarks: "藉由套用引發這個事件<xref:System.Windows.Media.Animation.RemoveStoryboard>動作使用分鏡腳本的分鏡腳本<xref:System.Windows.Media.Animation.Storyboard.Remove%2A>方法，或 （當直接使用時鐘） 呼叫<xref:System.Windows.Media.Animation.ClockController.Remove%2A?displayProperty=fullName>方法。</xref:System.Windows.Media.Animation.ClockController.Remove%2A?displayProperty=fullName> </xref:System.Windows.Media.Animation.Storyboard.Remove%2A> </xref:System.Windows.Media.Animation.RemoveStoryboard>       雖然這個事件處理常式似乎是相關聯時間軸，但它實際上會向註冊<xref:System.Windows.Media.Animation.Clock>建立這個時間軸。</xref:System.Windows.Media.Animation.Clock>  如需詳細資訊，請參閱[計時事件概觀](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public event EventHandler RemoveRequested;
    return:
      type: System.EventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.RepeatBehavior
  id: RepeatBehavior
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: RepeatBehavior
  nameWithType: Timeline.RepeatBehavior
  fullName: System.Windows.Media.Animation.Timeline.RepeatBehavior
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "取得或設定這個時間軸的重複行為。"
  remarks: "如果反覆項目<xref:System.Windows.Media.Animation.RepeatBehavior.Count%2A>指定與時間軸的<xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A>屬性設定為`true`，一個向前反覆項目和一個回溯的反覆項目組成的單一重複。</xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A> </xref:System.Windows.Media.Animation.RepeatBehavior.Count%2A> 將時間表與<xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A>屬性設為 true 反覆項目<xref:System.Windows.Media.Animation.RepeatBehavior.Count%2A>為 2 會播放轉寄，則回溯，一次，然後轉送，然後向後一次。</xref:System.Windows.Media.Animation.RepeatBehavior.Count%2A> </xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A>       您也可以指定您想要播放的時間軸的時間的總長度，而非指定的時間軸播放的次數。 若要重複，這個<xref:System.Windows.Media.Animation.RepeatBehavior.Duration%2A?displayProperty=fullName>值應該大於時間軸的<xref:System.Windows.Media.Animation.Timeline.Duration%2A>.</xref:System.Windows.Media.Animation.Timeline.Duration%2A></xref:System.Windows.Media.Animation.RepeatBehavior.Duration%2A?displayProperty=fullName>時刻表的 例如，使用時間軸<xref:System.Windows.Media.Animation.Timeline.Duration%2A>2 秒的和<xref:System.Windows.Media.Animation.RepeatBehavior.Duration%2A?displayProperty=fullName>的 4 秒會兩次播放。</xref:System.Windows.Media.Animation.RepeatBehavior.Duration%2A?displayProperty=fullName> </xref:System.Windows.Media.Animation.Timeline.Duration%2A> 如果<xref:System.Windows.Media.Animation.RepeatBehavior.Duration%2A?displayProperty=fullName>小於時間軸的<xref:System.Windows.Media.Animation.Timeline.Duration%2A>，時間軸的作用期間縮短。</xref:System.Windows.Media.Animation.Timeline.Duration%2A> </xref:System.Windows.Media.Animation.RepeatBehavior.Duration%2A?displayProperty=fullName>       如需重複時間表的詳細資訊，請參閱[動畫概觀](~/add/includes/ajax-current-ext-md.md)。      <a name=&quot;dependencyPropertyInfo_RepeatBehavior&quot;></a># # 相依性屬性資訊 | | |  |-|-|  |識別項欄位 |<xref:System.Windows.Media.Animation.Timeline.RepeatBehaviorProperty>|  |中繼資料屬性設定為`true`|None |</xref:System.Windows.Media.Animation.Timeline.RepeatBehaviorProperty>"
  syntax:
    content: public System.Windows.Media.Animation.RepeatBehavior RepeatBehavior { get; set; }
    return:
      type: System.Windows.Media.Animation.RepeatBehavior
      description: "反覆項目<> *> 指定的時間軸應該播放，次數<xref:System.TimeSpan>值，指定這個時間軸作用期間，長度總和或特殊值<> *>，以指定時間軸應該無限期地重複。</xref:System.TimeSpan> 預設值是<xref href=&quot;System.Windows.Media.Animation.RepeatBehavior&quot;></xref>與<xref:System.Windows.Media.Animation.RepeatBehavior.Count*>的`1`，指出時間軸播放一次。</xref:System.Windows.Media.Animation.RepeatBehavior.Count*>"
  overload: System.Windows.Media.Animation.Timeline.RepeatBehavior*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.RepeatBehaviorProperty
  id: RepeatBehaviorProperty
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: RepeatBehaviorProperty
  nameWithType: Timeline.RepeatBehaviorProperty
  fullName: System.Windows.Media.Animation.Timeline.RepeatBehaviorProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "識別<xref:System.Windows.Media.Animation.Timeline.RepeatBehavior*>相依性屬性。</xref:System.Windows.Media.Animation.Timeline.RepeatBehavior*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty RepeatBehaviorProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.SetDesiredFrameRate(System.Windows.Media.Animation.Timeline,System.Nullable{System.Int32})
  id: SetDesiredFrameRate(System.Windows.Media.Animation.Timeline,System.Nullable{System.Int32})
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: SetDesiredFrameRate(Timeline,Nullable<Int32>)
  nameWithType: Timeline.SetDesiredFrameRate(Timeline,Nullable<Int32>)
  fullName: System.Windows.Media.Animation.Timeline.SetDesiredFrameRate(Timeline,Nullable<Int32>)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "設定指定的所需的畫面播放速率<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;> </xref>。"
  remarks: "這個方法會設定<xref:System.Windows.Media.Animation.Timeline.DesiredFrameRate%2A>附加屬性。</xref:System.Windows.Media.Animation.Timeline.DesiredFrameRate%2A> 如需詳細資訊，請參閱<xref:System.Windows.Media.Animation.Timeline.DesiredFrameRate%2A>頁面。</xref:System.Windows.Media.Animation.Timeline.DesiredFrameRate%2A>"
  syntax:
    content: public static void SetDesiredFrameRate (System.Windows.Media.Animation.Timeline timeline, Nullable<int> desiredFrameRate);
    parameters:
    - id: timeline
      type: System.Windows.Media.Animation.Timeline
      description: "<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;> </xref>的`desiredFrameRate`指派。"
    - id: desiredFrameRate
      type: System.Nullable{System.Int32}
      description: "這個時間軸應該產生每個第二個畫面格的數目上限或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果系統應控制的框架數。"
  overload: System.Windows.Media.Animation.Timeline.SetDesiredFrameRate*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.SpeedRatio
  id: SpeedRatio
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: SpeedRatio
  nameWithType: Timeline.SpeedRatio
  fullName: System.Windows.Media.Animation.Timeline.SpeedRatio
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "取得或設定這個時間進行的速度，相對於其父代， <xref href=&quot;System.Windows.Media.Animation.Timeline&quot;> </xref>。"
  remarks: "時間軸的 SpeedRatio 設定沒有影響其<xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>; 該時間是相對於其父代，或如果時間表是根時間表，的目前的開始時間軸的時鐘。</xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>       如果<xref:System.Windows.Media.Animation.Timeline.AccelerationRatio%2A>或<xref:System.Windows.Media.Animation.Timeline.DecelerationRatio%2A>指定，此 SpeedRatio 透過自然的長度，在時間軸的是平均的比例。</xref:System.Windows.Media.Animation.Timeline.DecelerationRatio%2A> </xref:System.Windows.Media.Animation.Timeline.AccelerationRatio%2A>      <a name=&quot;dependencyPropertyInfo_SpeedRatio&quot;></a># # 相依性屬性資訊 | | |  |-|-|  |識別項欄位 |<xref:System.Windows.Media.Animation.Timeline.SpeedRatioProperty>|  |中繼資料屬性設定為`true`|None |</xref:System.Windows.Media.Animation.Timeline.SpeedRatioProperty>"
  example:
  - "A timeline's SpeedRatio property controls its rate of progress, relative to its parent. If the timeline is a root, its <xref:System.Windows.Media.MediaPlayer.SpeedRatio%2A> is relative to the default timeline speed. The following example shows several timelines with different SpeedRatio settings.  \n  \n [!code-xml[timingbehaviors_snip#_graphicsmm_SpeedExampleWholePage](~/add/codesnippet/xaml/timingbehaviors_snip.project/SpeedExample.xaml#_graphicsmm_speedexamplewholepage)]"
  syntax:
    content: public double SpeedRatio { get; set; }
    return:
      type: System.Double
      description: "有限的值大於 0，描述這個時間軸，相對於其父代的速度時間進行速率或，如果這是根時間表，預設的時間表速度。 預設值為 1。"
  overload: System.Windows.Media.Animation.Timeline.SpeedRatio*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "SpeedRatio 小於 0 或不是有限值。"
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.SpeedRatioProperty
  id: SpeedRatioProperty
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: SpeedRatioProperty
  nameWithType: Timeline.SpeedRatioProperty
  fullName: System.Windows.Media.Animation.Timeline.SpeedRatioProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "用來識別的<xref:System.Windows.Media.Animation.Timeline.SpeedRatio*>相依性屬性。</xref:System.Windows.Media.Animation.Timeline.SpeedRatio*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty SpeedRatioProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Media.Animation.Animatable
  isExternal: false
  name: System.Windows.Media.Animation.Animatable
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Windows.Media.Animation.Timeline.#ctor
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: Timeline()
  nameWithType: Timeline.Timeline()
  fullName: System.Windows.Media.Animation.Timeline.Timeline()
- uid: System.Windows.Media.Animation.Timeline.#ctor(System.Nullable{System.TimeSpan})
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: Timeline(Nullable<TimeSpan>)
  nameWithType: Timeline.Timeline(Nullable<TimeSpan>)
  fullName: System.Windows.Media.Animation.Timeline.Timeline(Nullable<TimeSpan>)
- uid: System.Nullable{System.TimeSpan}
  parent: System
  isExternal: true
  name: Nullable<TimeSpan>
  nameWithType: Nullable<TimeSpan>
  fullName: System.Nullable<System.TimeSpan>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.TimeSpan>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: TimeSpan
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Media.Animation.Timeline.#ctor(System.Nullable{System.TimeSpan},System.Windows.Duration)
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: Timeline(Nullable<TimeSpan>,Duration)
  nameWithType: Timeline.Timeline(Nullable<TimeSpan>,Duration)
  fullName: System.Windows.Media.Animation.Timeline.Timeline(Nullable<TimeSpan>,Duration)
- uid: System.Windows.Duration
  parent: System.Windows
  isExternal: false
  name: Duration
  nameWithType: Duration
  fullName: System.Windows.Duration
- uid: System.Windows.Media.Animation.Timeline.#ctor(System.Nullable{System.TimeSpan},System.Windows.Duration,System.Windows.Media.Animation.RepeatBehavior)
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: Timeline(Nullable<TimeSpan>,Duration,RepeatBehavior)
  nameWithType: Timeline.Timeline(Nullable<TimeSpan>,Duration,RepeatBehavior)
  fullName: System.Windows.Media.Animation.Timeline.Timeline(Nullable<TimeSpan>,Duration,RepeatBehavior)
- uid: System.Windows.Media.Animation.RepeatBehavior
  parent: System.Windows.Media.Animation
  isExternal: false
  name: RepeatBehavior
  nameWithType: RepeatBehavior
  fullName: System.Windows.Media.Animation.RepeatBehavior
- uid: System.Windows.Media.Animation.Timeline.AccelerationRatio
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: AccelerationRatio
  nameWithType: Timeline.AccelerationRatio
  fullName: System.Windows.Media.Animation.Timeline.AccelerationRatio
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Windows.Media.Animation.Timeline.AccelerationRatioProperty
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: AccelerationRatioProperty
  nameWithType: Timeline.AccelerationRatioProperty
  fullName: System.Windows.Media.Animation.Timeline.AccelerationRatioProperty
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Windows.Media.Animation.Timeline.AllocateClock
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: AllocateClock()
  nameWithType: Timeline.AllocateClock()
  fullName: System.Windows.Media.Animation.Timeline.AllocateClock()
- uid: System.Windows.Media.Animation.Clock
  parent: System.Windows.Media.Animation
  isExternal: false
  name: Clock
  nameWithType: Clock
  fullName: System.Windows.Media.Animation.Clock
- uid: System.Windows.Media.Animation.Timeline.AutoReverse
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: AutoReverse
  nameWithType: Timeline.AutoReverse
  fullName: System.Windows.Media.Animation.Timeline.AutoReverse
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Media.Animation.Timeline.AutoReverseProperty
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: AutoReverseProperty
  nameWithType: Timeline.AutoReverseProperty
  fullName: System.Windows.Media.Animation.Timeline.AutoReverseProperty
- uid: System.Windows.Media.Animation.Timeline.BeginTime
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: BeginTime
  nameWithType: Timeline.BeginTime
  fullName: System.Windows.Media.Animation.Timeline.BeginTime
- uid: System.Windows.Media.Animation.Timeline.BeginTimeProperty
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: BeginTimeProperty
  nameWithType: Timeline.BeginTimeProperty
  fullName: System.Windows.Media.Animation.Timeline.BeginTimeProperty
- uid: System.Windows.Media.Animation.Timeline.Clone
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: Clone()
  nameWithType: Timeline.Clone()
  fullName: System.Windows.Media.Animation.Timeline.Clone()
- uid: System.Windows.Media.Animation.Timeline
  parent: System.Windows.Media.Animation
  isExternal: false
  name: Timeline
  nameWithType: Timeline
  fullName: System.Windows.Media.Animation.Timeline
- uid: System.Windows.Media.Animation.Timeline.CloneCurrentValue
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: CloneCurrentValue()
  nameWithType: Timeline.CloneCurrentValue()
  fullName: System.Windows.Media.Animation.Timeline.CloneCurrentValue()
- uid: System.Windows.Media.Animation.Timeline.Completed
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: Completed
  nameWithType: Timeline.Completed
  fullName: System.Windows.Media.Animation.Timeline.Completed
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Windows.Media.Animation.Timeline.CreateClock
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: CreateClock()
  nameWithType: Timeline.CreateClock()
  fullName: System.Windows.Media.Animation.Timeline.CreateClock()
- uid: System.Windows.Media.Animation.Timeline.CreateClock(System.Boolean)
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: CreateClock(Boolean)
  nameWithType: Timeline.CreateClock(Boolean)
  fullName: System.Windows.Media.Animation.Timeline.CreateClock(Boolean)
- uid: System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: CurrentGlobalSpeedInvalidated
  nameWithType: Timeline.CurrentGlobalSpeedInvalidated
  fullName: System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated
- uid: System.Windows.Media.Animation.Timeline.CurrentStateInvalidated
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: CurrentStateInvalidated
  nameWithType: Timeline.CurrentStateInvalidated
  fullName: System.Windows.Media.Animation.Timeline.CurrentStateInvalidated
- uid: System.Windows.Media.Animation.Timeline.CurrentTimeInvalidated
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: CurrentTimeInvalidated
  nameWithType: Timeline.CurrentTimeInvalidated
  fullName: System.Windows.Media.Animation.Timeline.CurrentTimeInvalidated
- uid: System.Windows.Media.Animation.Timeline.DecelerationRatio
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: DecelerationRatio
  nameWithType: Timeline.DecelerationRatio
  fullName: System.Windows.Media.Animation.Timeline.DecelerationRatio
- uid: System.Windows.Media.Animation.Timeline.DecelerationRatioProperty
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: DecelerationRatioProperty
  nameWithType: Timeline.DecelerationRatioProperty
  fullName: System.Windows.Media.Animation.Timeline.DecelerationRatioProperty
- uid: System.Windows.Media.Animation.Timeline.DesiredFrameRateProperty
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: DesiredFrameRateProperty
  nameWithType: Timeline.DesiredFrameRateProperty
  fullName: System.Windows.Media.Animation.Timeline.DesiredFrameRateProperty
- uid: System.Windows.Media.Animation.Timeline.Duration
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: Duration
  nameWithType: Timeline.Duration
  fullName: System.Windows.Media.Animation.Timeline.Duration
- uid: System.Windows.Media.Animation.Timeline.DurationProperty
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: DurationProperty
  nameWithType: Timeline.DurationProperty
  fullName: System.Windows.Media.Animation.Timeline.DurationProperty
- uid: System.Windows.Media.Animation.Timeline.FillBehavior
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: FillBehavior
  nameWithType: Timeline.FillBehavior
  fullName: System.Windows.Media.Animation.Timeline.FillBehavior
- uid: System.Windows.Media.Animation.FillBehavior
  parent: System.Windows.Media.Animation
  isExternal: false
  name: FillBehavior
  nameWithType: FillBehavior
  fullName: System.Windows.Media.Animation.FillBehavior
- uid: System.Windows.Media.Animation.Timeline.FillBehaviorProperty
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: FillBehaviorProperty
  nameWithType: Timeline.FillBehaviorProperty
  fullName: System.Windows.Media.Animation.Timeline.FillBehaviorProperty
- uid: System.Windows.Media.Animation.Timeline.FreezeCore(System.Boolean)
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: FreezeCore(Boolean)
  nameWithType: Timeline.FreezeCore(Boolean)
  fullName: System.Windows.Media.Animation.Timeline.FreezeCore(Boolean)
- uid: System.Windows.Media.Animation.Timeline.GetAsFrozenCore(System.Windows.Freezable)
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: GetAsFrozenCore(Freezable)
  nameWithType: Timeline.GetAsFrozenCore(Freezable)
  fullName: System.Windows.Media.Animation.Timeline.GetAsFrozenCore(Freezable)
- uid: System.Windows.Freezable
  parent: System.Windows
  isExternal: false
  name: Freezable
  nameWithType: Freezable
  fullName: System.Windows.Freezable
- uid: System.Windows.Media.Animation.Timeline.GetCurrentValueAsFrozenCore(System.Windows.Freezable)
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: GetCurrentValueAsFrozenCore(Freezable)
  nameWithType: Timeline.GetCurrentValueAsFrozenCore(Freezable)
  fullName: System.Windows.Media.Animation.Timeline.GetCurrentValueAsFrozenCore(Freezable)
- uid: System.Windows.Media.Animation.Timeline.GetDesiredFrameRate(System.Windows.Media.Animation.Timeline)
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: GetDesiredFrameRate(Timeline)
  nameWithType: Timeline.GetDesiredFrameRate(Timeline)
  fullName: System.Windows.Media.Animation.Timeline.GetDesiredFrameRate(Timeline)
- uid: System.Nullable{System.Int32}
  parent: System
  isExternal: true
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.Int32>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: Int32
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Media.Animation.Timeline.GetNaturalDuration(System.Windows.Media.Animation.Clock)
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: GetNaturalDuration(Clock)
  nameWithType: Timeline.GetNaturalDuration(Clock)
  fullName: System.Windows.Media.Animation.Timeline.GetNaturalDuration(Clock)
- uid: System.Windows.Media.Animation.Timeline.GetNaturalDurationCore(System.Windows.Media.Animation.Clock)
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: GetNaturalDurationCore(Clock)
  nameWithType: Timeline.GetNaturalDurationCore(Clock)
  fullName: System.Windows.Media.Animation.Timeline.GetNaturalDurationCore(Clock)
- uid: System.Windows.Media.Animation.Timeline.Name
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: Name
  nameWithType: Timeline.Name
  fullName: System.Windows.Media.Animation.Timeline.Name
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Media.Animation.Timeline.NameProperty
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: NameProperty
  nameWithType: Timeline.NameProperty
  fullName: System.Windows.Media.Animation.Timeline.NameProperty
- uid: System.Windows.Media.Animation.Timeline.RemoveRequested
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: RemoveRequested
  nameWithType: Timeline.RemoveRequested
  fullName: System.Windows.Media.Animation.Timeline.RemoveRequested
- uid: System.Windows.Media.Animation.Timeline.RepeatBehavior
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: RepeatBehavior
  nameWithType: Timeline.RepeatBehavior
  fullName: System.Windows.Media.Animation.Timeline.RepeatBehavior
- uid: System.Windows.Media.Animation.Timeline.RepeatBehaviorProperty
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: RepeatBehaviorProperty
  nameWithType: Timeline.RepeatBehaviorProperty
  fullName: System.Windows.Media.Animation.Timeline.RepeatBehaviorProperty
- uid: System.Windows.Media.Animation.Timeline.SetDesiredFrameRate(System.Windows.Media.Animation.Timeline,System.Nullable{System.Int32})
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: SetDesiredFrameRate(Timeline,Nullable<Int32>)
  nameWithType: Timeline.SetDesiredFrameRate(Timeline,Nullable<Int32>)
  fullName: System.Windows.Media.Animation.Timeline.SetDesiredFrameRate(Timeline,Nullable<Int32>)
- uid: System.Windows.Media.Animation.Timeline.SpeedRatio
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: SpeedRatio
  nameWithType: Timeline.SpeedRatio
  fullName: System.Windows.Media.Animation.Timeline.SpeedRatio
- uid: System.Windows.Media.Animation.Timeline.SpeedRatioProperty
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: SpeedRatioProperty
  nameWithType: Timeline.SpeedRatioProperty
  fullName: System.Windows.Media.Animation.Timeline.SpeedRatioProperty
- uid: System.Windows.Media.Animation.Timeline.#ctor*
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: Timeline
  nameWithType: Timeline.Timeline
- uid: System.Windows.Media.Animation.Timeline.AccelerationRatio*
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: AccelerationRatio
  nameWithType: Timeline.AccelerationRatio
- uid: System.Windows.Media.Animation.Timeline.AllocateClock*
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: AllocateClock
  nameWithType: Timeline.AllocateClock
- uid: System.Windows.Media.Animation.Timeline.AutoReverse*
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: AutoReverse
  nameWithType: Timeline.AutoReverse
- uid: System.Windows.Media.Animation.Timeline.BeginTime*
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: BeginTime
  nameWithType: Timeline.BeginTime
- uid: System.Windows.Media.Animation.Timeline.Clone*
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: Clone
  nameWithType: Timeline.Clone
- uid: System.Windows.Media.Animation.Timeline.CloneCurrentValue*
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: CloneCurrentValue
  nameWithType: Timeline.CloneCurrentValue
- uid: System.Windows.Media.Animation.Timeline.CreateClock*
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: CreateClock
  nameWithType: Timeline.CreateClock
- uid: System.Windows.Media.Animation.Timeline.DecelerationRatio*
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: DecelerationRatio
  nameWithType: Timeline.DecelerationRatio
- uid: System.Windows.Media.Animation.Timeline.Duration*
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: Duration
  nameWithType: Timeline.Duration
- uid: System.Windows.Media.Animation.Timeline.FillBehavior*
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: FillBehavior
  nameWithType: Timeline.FillBehavior
- uid: System.Windows.Media.Animation.Timeline.FreezeCore*
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: FreezeCore
  nameWithType: Timeline.FreezeCore
- uid: System.Windows.Media.Animation.Timeline.GetAsFrozenCore*
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: GetAsFrozenCore
  nameWithType: Timeline.GetAsFrozenCore
- uid: System.Windows.Media.Animation.Timeline.GetCurrentValueAsFrozenCore*
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: GetCurrentValueAsFrozenCore
  nameWithType: Timeline.GetCurrentValueAsFrozenCore
- uid: System.Windows.Media.Animation.Timeline.GetDesiredFrameRate*
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: GetDesiredFrameRate
  nameWithType: Timeline.GetDesiredFrameRate
- uid: System.Windows.Media.Animation.Timeline.GetNaturalDuration*
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: GetNaturalDuration
  nameWithType: Timeline.GetNaturalDuration
- uid: System.Windows.Media.Animation.Timeline.GetNaturalDurationCore*
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: GetNaturalDurationCore
  nameWithType: Timeline.GetNaturalDurationCore
- uid: System.Windows.Media.Animation.Timeline.Name*
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: Name
  nameWithType: Timeline.Name
- uid: System.Windows.Media.Animation.Timeline.RepeatBehavior*
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: RepeatBehavior
  nameWithType: Timeline.RepeatBehavior
- uid: System.Windows.Media.Animation.Timeline.SetDesiredFrameRate*
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: SetDesiredFrameRate
  nameWithType: Timeline.SetDesiredFrameRate
- uid: System.Windows.Media.Animation.Timeline.SpeedRatio*
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: SpeedRatio
  nameWithType: Timeline.SpeedRatio
