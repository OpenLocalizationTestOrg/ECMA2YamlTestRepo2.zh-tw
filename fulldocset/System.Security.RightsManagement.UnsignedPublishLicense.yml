### YamlMime:ManagedReference
items:
- uid: System.Security.RightsManagement.UnsignedPublishLicense
  id: UnsignedPublishLicense
  children:
  - System.Security.RightsManagement.UnsignedPublishLicense.#ctor
  - System.Security.RightsManagement.UnsignedPublishLicense.#ctor(System.String)
  - System.Security.RightsManagement.UnsignedPublishLicense.ContentId
  - System.Security.RightsManagement.UnsignedPublishLicense.Grants
  - System.Security.RightsManagement.UnsignedPublishLicense.LocalizedNameDescriptionDictionary
  - System.Security.RightsManagement.UnsignedPublishLicense.Owner
  - System.Security.RightsManagement.UnsignedPublishLicense.ReferralInfoName
  - System.Security.RightsManagement.UnsignedPublishLicense.ReferralInfoUri
  - System.Security.RightsManagement.UnsignedPublishLicense.Sign(System.Security.RightsManagement.SecureEnvironment,System.Security.RightsManagement.UseLicense@)
  - System.Security.RightsManagement.UnsignedPublishLicense.ToString
  langs:
  - csharp
  name: UnsignedPublishLicense
  nameWithType: UnsignedPublishLicense
  fullName: System.Security.RightsManagement.UnsignedPublishLicense
  type: Class
  summary: "代表不帶正負號的版權管理<xref href=&quot;System.Security.RightsManagement.PublishLicense&quot;></xref>或不帶正負號<xref href=&quot;System.Security.RightsManagement.PublishLicense&quot;></xref>範本。"
  remarks: "<xref:System.Security.RightsManagement.PublishLicense>定義安全性權限、 使用者和相關資料，其他安全性相關的資訊。</xref:System.Security.RightsManagement.PublishLicense>  授權會定義如何在特定電腦上的特定使用者可以使用指定的權限管理內容。       在發佈程序的開頭的文件作者，UnsignedPublishLicense 中定義的權限資訊。  接下來，撰寫的應用程式呼叫 UnsignedPublishLicense。<xref:System.Security.RightsManagement.UnsignedPublishLicense.Sign%2A>若要建立帶正負號的<xref:System.Security.RightsManagement.PublishLicense>.</xref:System.Security.RightsManagement.PublishLicense>方法</xref:System.Security.RightsManagement.UnsignedPublishLicense.Sign%2A>  <xref:System.Security.RightsManagement.PublishLicense>然後可以提供給使用者用戶端應用程式的程式可以呼叫<xref:System.Security.RightsManagement.PublishLicense.AcquireUseLicense%2A>來要求使用者<xref:System.Security.RightsManagement.UseLicense>.</xref:System.Security.RightsManagement.UseLicense></xref:System.Security.RightsManagement.PublishLicense.AcquireUseLicense%2A></xref:System.Security.RightsManagement.PublishLicense>帶正負號  傳回<xref:System.Security.RightsManagement.UseLicense>然後允許用戶端應用程式，才能施行授與使用者的權限。</xref:System.Security.RightsManagement.UseLicense>       文件作者可以使用 UnsignedPublishLicense 類別可能是建立帶正負號<xref:System.Security.RightsManagement.PublishLicense>，或若要建置和序列化<xref:System.Security.RightsManagement.PublishLicense>範本。</xref:System.Security.RightsManagement.PublishLicense> </xref:System.Security.RightsManagement.PublishLicense>       如同其他<xref:System.Security.RightsManagement>型別，UnsignedPublishLicense 才可用於完全信任應用程式。</xref:System.Security.RightsManagement>      <a name=&quot;xamlTextUsage_UnsignedPublishLicense&quot;></a># # 此類型通常不會使用在 XAML 文字用法[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]。"
  syntax:
    content: >-
      [System.Security.SecurityCritical(System.Security.SecurityCriticalScope.Everything)]

      public class UnsignedPublishLicense
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.RightsManagement.UnsignedPublishLicense.#ctor
  id: '#ctor'
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  langs:
  - csharp
  name: UnsignedPublishLicense()
  nameWithType: UnsignedPublishLicense.UnsignedPublishLicense()
  fullName: System.Security.RightsManagement.UnsignedPublishLicense.UnsignedPublishLicense()
  type: Constructor
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: "初始化的新執行個體<xref href=&quot;System.Security.RightsManagement.UnsignedPublishLicense&quot;></xref>類別。"
  remarks: "<xref:System.Security.RightsManagement.UnsignedPublishLicense>建立空白且不帶正負號發行授權。</xref:System.Security.RightsManagement.UnsignedPublishLicense>"
  syntax:
    content: public UnsignedPublishLicense ();
    parameters: []
  overload: System.Security.RightsManagement.UnsignedPublishLicense.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.RightsManagement.UnsignedPublishLicense.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  langs:
  - csharp
  name: UnsignedPublishLicense(String)
  nameWithType: UnsignedPublishLicense.UnsignedPublishLicense(String)
  fullName: System.Security.RightsManagement.UnsignedPublishLicense.UnsignedPublishLicense(String)
  type: Constructor
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: "初始化的新執行個體<xref href=&quot;System.Security.RightsManagement.UnsignedPublishLicense&quot;></xref>從指定的類別[!INCLUDE[TLA2#tla_xrml](~/add/includes/tla2sharptla-xrml-md.md)]發行授權範本。"
  remarks: "`publishLicenseTemplate` [!INCLUDE[TLA2#tla_xrml](~/add/includes/tla2sharptla-xrml-md.md)] `<RANGETIME>`或`<INTERVALTIME>`元素會被忽略時<xref:System.Security.RightsManagement.UnsignedPublishLicense>UnsignedPublishLicense(String) 建構函式所建立。</xref:System.Security.RightsManagement.UnsignedPublishLicense>  若要指定發行授權，這些值<xref:System.Security.RightsManagement.ContentGrant>屬性<xref:System.Security.RightsManagement.ContentGrant.ValidFrom%2A>和<xref:System.Security.RightsManagement.ContentGrant.ValidUntil%2A>必須明確設定。</xref:System.Security.RightsManagement.ContentGrant.ValidUntil%2A> </xref:System.Security.RightsManagement.ContentGrant.ValidFrom%2A> </xref:System.Security.RightsManagement.ContentGrant>  下列範例示範如何明確設定<xref:System.Security.RightsManagement.ContentGrant.ValidFrom%2A>和<xref:System.Security.RightsManagement.ContentGrant.ValidUntil%2A>屬性。</xref:System.Security.RightsManagement.ContentGrant.ValidUntil%2A> </xref:System.Security.RightsManagement.ContentGrant.ValidFrom%2A>       [!code-vb[UnsignedPubLicense_snip #RmPkgPubGrants](~/add/codesnippet/visualbasic/unsignedpublicense/window1.xaml.vb#rmpkgpubgrants)][!code-cs[UnsignedPubLicense_snip #RmPkgPubGrants  ](~/add/codesnippet/csharp/UnsignedPubLicense/Window1.xaml.cs#rmpkgpubgrants)]"
  example:
  - "The following example shows how to use this constructor.  \n  \n [!code-vb[RightsManagedPackagePublish#RmPkgPubUnPubLic](~/add/codesnippet/visualbasic/rmpackagepublish/window1.xaml.vb#rmpkgpubunpublic)]\n [!code-cs[RightsManagedPackagePublish#RmPkgPubUnPubLic](~/add/codesnippet/csharp/RmPackagePublish/Window1.xaml.cs#rmpkgpubunpublic)]"
  syntax:
    content: public UnsignedPublishLicense (string publishLicenseTemplate);
    parameters:
    - id: publishLicenseTemplate
      type: System.String
      description: "[!INCLUDE[TLA#tla_xrml](~/add/includes/ajax-current-ext-md.md)]用來建立此授權發佈授權範本。"
  overload: System.Security.RightsManagement.UnsignedPublishLicense.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.RightsManagement.UnsignedPublishLicense.ContentId
  id: ContentId
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  langs:
  - csharp
  name: ContentId
  nameWithType: UnsignedPublishLicense.ContentId
  fullName: System.Security.RightsManagement.UnsignedPublishLicense.ContentId
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: "取得或設定發行者建立的內容識別項。"
  remarks: "「 發行者 」 建立來識別權限管理內容<xref:System.Security.RightsManagement.UseLicense>和<xref:System.Security.RightsManagement.PublishLicense>。</xref:System.Security.RightsManagement.PublishLicense> </xref:System.Security.RightsManagement.UseLicense> ContentId"
  syntax:
    content: public Guid ContentId { get; set; }
    return:
      type: System.Guid
      description: "發行者建立版權管理內容的識別項。"
  overload: System.Security.RightsManagement.UnsignedPublishLicense.ContentId*
  exceptions: []
  platform:
  - net462
- uid: System.Security.RightsManagement.UnsignedPublishLicense.Grants
  id: Grants
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  langs:
  - csharp
  name: Grants
  nameWithType: UnsignedPublishLicense.Grants
  fullName: System.Security.RightsManagement.UnsignedPublishLicense.Grants
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: "取得指派的使用者權限的集合。"
  syntax:
    content: public System.Collections.Generic.ICollection<System.Security.RightsManagement.ContentGrant> Grants { get; }
    return:
      type: System.Collections.Generic.ICollection{System.Security.RightsManagement.ContentGrant}
      description: "提供此授權指派的使用者權限的集合。"
  overload: System.Security.RightsManagement.UnsignedPublishLicense.Grants*
  exceptions: []
  platform:
  - net462
- uid: System.Security.RightsManagement.UnsignedPublishLicense.LocalizedNameDescriptionDictionary
  id: LocalizedNameDescriptionDictionary
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  langs:
  - csharp
  name: LocalizedNameDescriptionDictionary
  nameWithType: UnsignedPublishLicense.LocalizedNameDescriptionDictionary
  fullName: System.Security.RightsManagement.UnsignedPublishLicense.LocalizedNameDescriptionDictionary
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: "取得名稱與描述配對的集合。"
  syntax:
    content: public System.Collections.Generic.IDictionary<int,System.Security.RightsManagement.LocalizedNameDescriptionPair> LocalizedNameDescriptionDictionary { get; }
    return:
      type: System.Collections.Generic.IDictionary{System.Int32,System.Security.RightsManagement.LocalizedNameDescriptionPair}
      description: "名稱與描述配對的集合。"
  overload: System.Security.RightsManagement.UnsignedPublishLicense.LocalizedNameDescriptionDictionary*
  exceptions: []
  platform:
  - net462
- uid: System.Security.RightsManagement.UnsignedPublishLicense.Owner
  id: Owner
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  langs:
  - csharp
  name: Owner
  nameWithType: UnsignedPublishLicense.Owner
  fullName: System.Security.RightsManagement.UnsignedPublishLicense.Owner
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: "取得或設定內容的擁有者。"
  remarks: "擁有者會指定擁有<xref:System.Security.RightsManagement.PublishLicense>.</xref:System.Security.RightsManagement.PublishLicense>的使用者       擁有者也會與在發行授權擁有者節點相關聯[!INCLUDE[TLA#tla_xrml](~/add/includes/ajax-current-ext-md.md)]。"
  example:
  - "The following example shows how to use this property to assign a <xref:System.Security.RightsManagement.ContentUser>.  \n  \n [!code-vb[RightsManagedPackagePublish#RmPkgPubUnPubLic](~/add/codesnippet/visualbasic/rmpackagepublish/window1.xaml.vb#rmpkgpubunpublic)]\n [!code-cs[RightsManagedPackagePublish#RmPkgPubUnPubLic](~/add/codesnippet/csharp/RmPackagePublish/Window1.xaml.cs#rmpkgpubunpublic)]"
  syntax:
    content: public System.Security.RightsManagement.ContentUser Owner { get; set; }
    return:
      type: System.Security.RightsManagement.ContentUser
      description: "擁有已發佈的內容的使用者。"
  overload: System.Security.RightsManagement.UnsignedPublishLicense.Owner*
  exceptions: []
  platform:
  - net462
- uid: System.Security.RightsManagement.UnsignedPublishLicense.ReferralInfoName
  id: ReferralInfoName
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  langs:
  - csharp
  name: ReferralInfoName
  nameWithType: UnsignedPublishLicense.ReferralInfoName
  fullName: System.Security.RightsManagement.UnsignedPublishLicense.ReferralInfoName
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: "取得或設定連絡作者或內容的發行者名稱。"
  remarks: "<a name=&quot;xamlTextUsage_ReferralInfoName&quot;></a># # XAML 文字使用這個類型的成員不通常會以[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]。"
  syntax:
    content: public string ReferralInfoName { get; set; }
    return:
      type: System.String
      description: "連絡作者或內容的發行者名稱。"
  overload: System.Security.RightsManagement.UnsignedPublishLicense.ReferralInfoName*
  exceptions: []
  platform:
  - net462
- uid: System.Security.RightsManagement.UnsignedPublishLicense.ReferralInfoUri
  id: ReferralInfoUri
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  langs:
  - csharp
  name: ReferralInfoUri
  nameWithType: UnsignedPublishLicense.ReferralInfoUri
  fullName: System.Security.RightsManagement.UnsignedPublishLicense.ReferralInfoUri
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: "取得或設定連絡人[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]作者或發行者的內容。"
  remarks: "<a name=&quot;xamlTextUsage_ReferralInfoUri&quot;></a># # XAML 文字使用這個類型的成員不通常會以[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]。"
  syntax:
    content: public Uri ReferralInfoUri { get; set; }
    return:
      type: System.Uri
      description: "連絡人[!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)]作者或發行者的內容。"
  overload: System.Security.RightsManagement.UnsignedPublishLicense.ReferralInfoUri*
  exceptions: []
  platform:
  - net462
- uid: System.Security.RightsManagement.UnsignedPublishLicense.Sign(System.Security.RightsManagement.SecureEnvironment,System.Security.RightsManagement.UseLicense@)
  id: Sign(System.Security.RightsManagement.SecureEnvironment,System.Security.RightsManagement.UseLicense@)
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  langs:
  - csharp
  name: Sign(SecureEnvironment,UseLicense)
  nameWithType: UnsignedPublishLicense.Sign(SecureEnvironment,UseLicense)
  fullName: System.Security.RightsManagement.UnsignedPublishLicense.Sign(SecureEnvironment,UseLicense)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: "建立帶正負號<xref href=&quot;System.Security.RightsManagement.PublishLicense&quot;></xref>並傳回<xref href=&quot;System.Security.RightsManagement.UseLicense&quot;></xref>的文件的作者。"
  remarks: ''
  example:
  - "The following example shows how to use this class to initialize a <xref:System.Security.RightsManagement.PublishLicense>.  \n  \n [!code-vb[RightsManagedPackagePublish#RmPkgPubEncrypt](~/add/codesnippet/visualbasic/rmpackagepublish/window1.xaml.vb#rmpkgpubencrypt)]\n [!code-cs[RightsManagedPackagePublish#RmPkgPubEncrypt](~/add/codesnippet/csharp/RmPackagePublish/Window1.xaml.cs#rmpkgpubencrypt)]"
  syntax:
    content: public System.Security.RightsManagement.PublishLicense Sign (System.Security.RightsManagement.SecureEnvironment secureEnvironment, out System.Security.RightsManagement.UseLicense authorUseLicense);
    parameters:
    - id: secureEnvironment
      type: System.Security.RightsManagement.SecureEnvironment
      description: "啟用授權和繫結至安全的環境。"
    - id: authorUseLicense
      type: System.Security.RightsManagement.UseLicense
      description: "傳回<xref href=&quot;System.Security.RightsManagement.UseLicense&quot;></xref>的文件的作者。"
    return:
      type: System.Security.RightsManagement.PublishLicense
      description: "帶正負號<xref href=&quot;System.Security.RightsManagement.PublishLicense&quot;> </xref> ，它由簽署此<xref href=&quot;System.Security.RightsManagement.UnsignedPublishLicense&quot;> </xref>。"
  overload: System.Security.RightsManagement.UnsignedPublishLicense.Sign*
  exceptions: []
  platform:
  - net462
- uid: System.Security.RightsManagement.UnsignedPublishLicense.ToString
  id: ToString
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  langs:
  - csharp
  name: ToString()
  nameWithType: UnsignedPublishLicense.ToString()
  fullName: System.Security.RightsManagement.UnsignedPublishLicense.ToString()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: "傳回所建立的序列化的範本[!INCLUDE[TLA2#tla_xrml](~/add/includes/tla2sharptla-xrml-md.md)]的<xref href=&quot;System.Security.RightsManagement.UnsignedPublishLicense&quot;> </xref>。"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "從建立的序列化的範本[!INCLUDE[TLA2#tla_xrml](~/add/includes/tla2sharptla-xrml-md.md)]的<xref href=&quot;System.Security.RightsManagement.UnsignedPublishLicense&quot;> </xref>。"
  overload: System.Security.RightsManagement.UnsignedPublishLicense.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Security.RightsManagement.UnsignedPublishLicense.#ctor
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  isExternal: false
  name: UnsignedPublishLicense()
  nameWithType: UnsignedPublishLicense.UnsignedPublishLicense()
  fullName: System.Security.RightsManagement.UnsignedPublishLicense.UnsignedPublishLicense()
- uid: System.Security.RightsManagement.UnsignedPublishLicense.#ctor(System.String)
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  isExternal: false
  name: UnsignedPublishLicense(String)
  nameWithType: UnsignedPublishLicense.UnsignedPublishLicense(String)
  fullName: System.Security.RightsManagement.UnsignedPublishLicense.UnsignedPublishLicense(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.RightsManagement.UnsignedPublishLicense.ContentId
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  isExternal: false
  name: ContentId
  nameWithType: UnsignedPublishLicense.ContentId
  fullName: System.Security.RightsManagement.UnsignedPublishLicense.ContentId
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Security.RightsManagement.UnsignedPublishLicense.Grants
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  isExternal: false
  name: Grants
  nameWithType: UnsignedPublishLicense.Grants
  fullName: System.Security.RightsManagement.UnsignedPublishLicense.Grants
- uid: System.Collections.Generic.ICollection{System.Security.RightsManagement.ContentGrant}
  parent: System.Collections.Generic
  isExternal: true
  name: ICollection<ContentGrant>
  nameWithType: ICollection<ContentGrant>
  fullName: System.Collections.Generic.ICollection<System.Security.RightsManagement.ContentGrant>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection<System.Security.RightsManagement.ContentGrant>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Security.RightsManagement.ContentGrant
    name: ContentGrant
    nameWithType: ContentGrant
    fullName: ContentGrant
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Security.RightsManagement.UnsignedPublishLicense.LocalizedNameDescriptionDictionary
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  isExternal: false
  name: LocalizedNameDescriptionDictionary
  nameWithType: UnsignedPublishLicense.LocalizedNameDescriptionDictionary
  fullName: System.Security.RightsManagement.UnsignedPublishLicense.LocalizedNameDescriptionDictionary
- uid: System.Collections.Generic.IDictionary{System.Int32,System.Security.RightsManagement.LocalizedNameDescriptionPair}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<Int32,LocalizedNameDescriptionPair>
  nameWithType: IDictionary<Int32,LocalizedNameDescriptionPair>
  fullName: System.Collections.Generic.IDictionary<System.Int32,System.Security.RightsManagement.LocalizedNameDescriptionPair>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.Int32,System.Security.RightsManagement.LocalizedNameDescriptionPair>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: Int32
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Security.RightsManagement.LocalizedNameDescriptionPair
    name: LocalizedNameDescriptionPair
    nameWithType: LocalizedNameDescriptionPair
    fullName: LocalizedNameDescriptionPair
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Security.RightsManagement.UnsignedPublishLicense.Owner
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  isExternal: false
  name: Owner
  nameWithType: UnsignedPublishLicense.Owner
  fullName: System.Security.RightsManagement.UnsignedPublishLicense.Owner
- uid: System.Security.RightsManagement.ContentUser
  parent: System.Security.RightsManagement
  isExternal: false
  name: ContentUser
  nameWithType: ContentUser
  fullName: System.Security.RightsManagement.ContentUser
- uid: System.Security.RightsManagement.UnsignedPublishLicense.ReferralInfoName
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  isExternal: false
  name: ReferralInfoName
  nameWithType: UnsignedPublishLicense.ReferralInfoName
  fullName: System.Security.RightsManagement.UnsignedPublishLicense.ReferralInfoName
- uid: System.Security.RightsManagement.UnsignedPublishLicense.ReferralInfoUri
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  isExternal: false
  name: ReferralInfoUri
  nameWithType: UnsignedPublishLicense.ReferralInfoUri
  fullName: System.Security.RightsManagement.UnsignedPublishLicense.ReferralInfoUri
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Security.RightsManagement.UnsignedPublishLicense.Sign(System.Security.RightsManagement.SecureEnvironment,System.Security.RightsManagement.UseLicense@)
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  isExternal: false
  name: Sign(SecureEnvironment,UseLicense)
  nameWithType: UnsignedPublishLicense.Sign(SecureEnvironment,UseLicense)
  fullName: System.Security.RightsManagement.UnsignedPublishLicense.Sign(SecureEnvironment,UseLicense)
- uid: System.Security.RightsManagement.PublishLicense
  parent: System.Security.RightsManagement
  isExternal: false
  name: PublishLicense
  nameWithType: PublishLicense
  fullName: System.Security.RightsManagement.PublishLicense
- uid: System.Security.RightsManagement.SecureEnvironment
  parent: System.Security.RightsManagement
  isExternal: false
  name: SecureEnvironment
  nameWithType: SecureEnvironment
  fullName: System.Security.RightsManagement.SecureEnvironment
- uid: System.Security.RightsManagement.UseLicense
  parent: System.Security.RightsManagement
  isExternal: false
  name: UseLicense
  nameWithType: UseLicense
  fullName: System.Security.RightsManagement.UseLicense
- uid: System.Security.RightsManagement.UnsignedPublishLicense.ToString
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  isExternal: false
  name: ToString()
  nameWithType: UnsignedPublishLicense.ToString()
  fullName: System.Security.RightsManagement.UnsignedPublishLicense.ToString()
- uid: System.Security.RightsManagement.UnsignedPublishLicense.#ctor*
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  isExternal: false
  name: UnsignedPublishLicense
  nameWithType: UnsignedPublishLicense.UnsignedPublishLicense
- uid: System.Security.RightsManagement.UnsignedPublishLicense.ContentId*
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  isExternal: false
  name: ContentId
  nameWithType: UnsignedPublishLicense.ContentId
- uid: System.Security.RightsManagement.UnsignedPublishLicense.Grants*
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  isExternal: false
  name: Grants
  nameWithType: UnsignedPublishLicense.Grants
- uid: System.Security.RightsManagement.UnsignedPublishLicense.LocalizedNameDescriptionDictionary*
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  isExternal: false
  name: LocalizedNameDescriptionDictionary
  nameWithType: UnsignedPublishLicense.LocalizedNameDescriptionDictionary
- uid: System.Security.RightsManagement.UnsignedPublishLicense.Owner*
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  isExternal: false
  name: Owner
  nameWithType: UnsignedPublishLicense.Owner
- uid: System.Security.RightsManagement.UnsignedPublishLicense.ReferralInfoName*
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  isExternal: false
  name: ReferralInfoName
  nameWithType: UnsignedPublishLicense.ReferralInfoName
- uid: System.Security.RightsManagement.UnsignedPublishLicense.ReferralInfoUri*
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  isExternal: false
  name: ReferralInfoUri
  nameWithType: UnsignedPublishLicense.ReferralInfoUri
- uid: System.Security.RightsManagement.UnsignedPublishLicense.Sign*
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  isExternal: false
  name: Sign
  nameWithType: UnsignedPublishLicense.Sign
- uid: System.Security.RightsManagement.UnsignedPublishLicense.ToString*
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  isExternal: false
  name: ToString
  nameWithType: UnsignedPublishLicense.ToString
