### YamlMime:ManagedReference
items:
- uid: System.Data.SqlClient.SqlParameter
  id: SqlParameter
  children:
  - System.Data.SqlClient.SqlParameter.#ctor
  - System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType)
  - System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Object)
  - System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32)
  - System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32,System.String)
  - System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)
  - System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32,System.Data.ParameterDirection,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Boolean,System.Object,System.String,System.String,System.String)
  - System.Data.SqlClient.SqlParameter.CompareInfo
  - System.Data.SqlClient.SqlParameter.DbType
  - System.Data.SqlClient.SqlParameter.Direction
  - System.Data.SqlClient.SqlParameter.ForceColumnEncryption
  - System.Data.SqlClient.SqlParameter.IsNullable
  - System.Data.SqlClient.SqlParameter.LocaleId
  - System.Data.SqlClient.SqlParameter.Offset
  - System.Data.SqlClient.SqlParameter.ParameterName
  - System.Data.SqlClient.SqlParameter.Precision
  - System.Data.SqlClient.SqlParameter.ResetDbType
  - System.Data.SqlClient.SqlParameter.ResetSqlDbType
  - System.Data.SqlClient.SqlParameter.Scale
  - System.Data.SqlClient.SqlParameter.Size
  - System.Data.SqlClient.SqlParameter.SourceColumn
  - System.Data.SqlClient.SqlParameter.SourceColumnNullMapping
  - System.Data.SqlClient.SqlParameter.SourceVersion
  - System.Data.SqlClient.SqlParameter.SqlDbType
  - System.Data.SqlClient.SqlParameter.SqlValue
  - System.Data.SqlClient.SqlParameter.System#ICloneable#Clone
  - System.Data.SqlClient.SqlParameter.ToString
  - System.Data.SqlClient.SqlParameter.TypeName
  - System.Data.SqlClient.SqlParameter.UdtTypeName
  - System.Data.SqlClient.SqlParameter.Value
  - System.Data.SqlClient.SqlParameter.XmlSchemaCollectionDatabase
  - System.Data.SqlClient.SqlParameter.XmlSchemaCollectionName
  - System.Data.SqlClient.SqlParameter.XmlSchemaCollectionOwningSchema
  langs:
  - csharp
  name: SqlParameter
  nameWithType: SqlParameter
  fullName: System.Data.SqlClient.SqlParameter
  type: Class
  summary: "代表參數<xref href=&quot;System.Data.SqlClient.SqlCommand&quot;></xref>和 （選擇性） 其對應<xref href=&quot;System.Data.DataSet&quot;></xref>資料行。 這個類別無法被繼承。 如需有關參數的詳細資訊，請參閱[設定參數和參數資料型別](~/add/includes/ajax-current-ext-md.md)。"
  remarks: "參數名稱不區分大小寫。      > [!NOTE] > Nameless，也稱為 序數，不支援參數由.NET Framework Data Provider for SQL Server。       如需詳細資訊，以及其他範例程式碼示範如何使用參數，請參閱[命令和參數](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following example creates multiple instances of SqlParameter through the <xref:System.Data.SqlClient.SqlParameterCollection> collection within the <xref:System.Data.SqlClient.SqlDataAdapter>. These parameters are used to select data from the data source and put the data in the <xref:System.Data.DataSet>. This example assumes that a <xref:System.Data.DataSet> and a <xref:System.Data.SqlClient.SqlDataAdapter> have already been created by using the appropriate schema, commands, and connection. For more information and additional examples on using parameters, see [Retrieving and Modifying Data in ADO.NET](~/add/includes/ajax-current-ext-md.md) and [Configuring Parameters and Parameter Data Types](../Topic/Configuring%20Parameters%20and%20Parameter%20Data%20Types.md).  \n  \n [!code-cs[Classic WebData SqlParameter Example#1](~/add/codesnippet/csharp/t-system.data.sqlclient._0_1.cs)]\n [!code-vb[Classic WebData SqlParameter Example#1](~/add/codesnippet/visualbasic/t-system.data.sqlclient._0_1.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.TypeConverter(typeof(System.Data.SqlClient.SqlParameter/SqlParameterConverter))]

      public sealed class SqlParameter : System.Data.Common.DbParameter, ICloneable
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.Data.Common.DbParameter
  implements:
  - System.ICloneable
  inheritedMembers:
  - System.Data.Common.DbParameter.System#Data#IDbDataParameter#Precision
  - System.Data.Common.DbParameter.System#Data#IDbDataParameter#Scale
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.#ctor
  id: '#ctor'
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: SqlParameter()
  nameWithType: SqlParameter.SqlParameter()
  fullName: System.Data.SqlClient.SqlParameter.SqlParameter()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "初始化的新執行個體<xref href=&quot;System.Data.SqlClient.SqlParameter&quot;></xref>類別。"
  remarks: ''
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlParameter> and sets some of its properties.  \n  \n [!code-vb[Classic WebData SqlParameter.SqlParameter Example#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._24_1.vb)]\n [!code-cs[Classic WebData SqlParameter.SqlParameter Example#1](~/add/codesnippet/csharp/m-system.data.sqlclient._24_1.cs)]"
  syntax:
    content: public SqlParameter ();
    parameters: []
  overload: System.Data.SqlClient.SqlParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType)
  id: '#ctor(System.String,System.Data.SqlDbType)'
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: SqlParameter(String,SqlDbType)
  nameWithType: SqlParameter.SqlParameter(String,SqlDbType)
  fullName: System.Data.SqlClient.SqlParameter.SqlParameter(String,SqlDbType)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "初始化的新執行個體<xref href=&quot;System.Data.SqlClient.SqlParameter&quot;></xref>使用參數名稱和資料類型的類別。"
  remarks: "資料類型並視情況**大小**和<xref:System.Data.SqlClient.SqlParameter.Precision%2A>會推斷的值從`dbType`參數。</xref:System.Data.SqlClient.SqlParameter.Precision%2A>"
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlParameter> and sets some of its properties.  \n  \n [!code-cs[Classic WebData SqlParameter.SqlParameter2 Example#1](~/add/codesnippet/csharp/4c1dfa04-4b19-4ef9-bf3e-_1.cs)]\n [!code-vb[Classic WebData SqlParameter.SqlParameter2 Example#1](~/add/codesnippet/visualbasic/4c1dfa04-4b19-4ef9-bf3e-_1.vb)]"
  syntax:
    content: public SqlParameter (string parameterName, System.Data.SqlDbType dbType);
    parameters:
    - id: parameterName
      type: System.String
      description: "要對應的參數名稱。"
    - id: dbType
      type: System.Data.SqlDbType
      description: "其中一個<xref href=&quot;System.Data.SqlDbType&quot;></xref>值。"
  overload: System.Data.SqlClient.SqlParameter.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "中提供的值<code> dbType </code>參數是無效的後端資料類型。"
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Object)
  id: '#ctor(System.String,System.Object)'
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: SqlParameter(String,Object)
  nameWithType: SqlParameter.SqlParameter(String,Object)
  fullName: System.Data.SqlClient.SqlParameter.SqlParameter(String,Object)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "初始化的新執行個體<xref href=&quot;System.Data.SqlClient.SqlParameter&quot;></xref>使用參數名稱和新值的類別<xref href=&quot;System.Data.SqlClient.SqlParameter&quot;> </xref>。"
  remarks: "當您指定<xref:System.Object>中`value`參數、 <xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A> <xref:System.Object>.</xref:System.Object>的 Microsoft.NET Framework 型別推斷</xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A></xref:System.Object>       當您使用的這個多載時請特別小心<xref:System.Data.SqlClient.SqlParameter>建構函式指定整數參數值。</xref:System.Data.SqlClient.SqlParameter> 因為此多載會採用`value`型別的<xref:System.Object>，您必須將整數值轉換<xref:System.Object>時輸入的值為零，如下列 C# 範例所示。</xref:System.Object> </xref:System.Object>      ```   Parameter = new SqlParameter(&quot;@pname&quot;, (object)0);   ```如果您不會執行這項轉換，則編譯器會假設您嘗試呼叫`SqlParameter`(`string`， `SqlDbType`) 建構函式多載。"
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlParameter> and sets some of its properties.  \n  \n [!code-cs[Classic WebData SqlParameter.SqlParameter6 Example#1](~/add/codesnippet/csharp/m-system.data.sqlclient._12_1.cs)]\n [!code-vb[Classic WebData SqlParameter.SqlParameter6 Example#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._12_1.vb)]"
  syntax:
    content: public SqlParameter (string parameterName, object value);
    parameters:
    - id: parameterName
      type: System.String
      description: "要對應的參數名稱。"
    - id: value
      type: System.Object
      description: "<xref:System.Object>也就是值<xref href=&quot;System.Data.SqlClient.SqlParameter&quot;> </xref>。</xref:System.Object>"
  overload: System.Data.SqlClient.SqlParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32)
  id: '#ctor(System.String,System.Data.SqlDbType,System.Int32)'
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: SqlParameter(String,SqlDbType,Int32)
  nameWithType: SqlParameter.SqlParameter(String,SqlDbType,Int32)
  fullName: System.Data.SqlClient.SqlParameter.SqlParameter(String,SqlDbType,Int32)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "初始化的新執行個體<xref href=&quot;System.Data.SqlClient.SqlParameter&quot;></xref>使用參數名稱、 類別<xref href=&quot;System.Data.SqlDbType&quot;> </xref>，和大小。"
  remarks: "**大小**推斷的值從`dbType`參數，如果未明確設定`size`參數。"
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlParameter> and sets some of its properties.  \n  \n [!code-cs[Classic WebData SqlParameter.SqlParameter4 Example#1](~/add/codesnippet/csharp/63cca4fc-f4fc-4270-865a-_1.cs)]\n [!code-vb[Classic WebData SqlParameter.SqlParameter4 Example#1](~/add/codesnippet/visualbasic/63cca4fc-f4fc-4270-865a-_1.vb)]"
  syntax:
    content: public SqlParameter (string parameterName, System.Data.SqlDbType dbType, int size);
    parameters:
    - id: parameterName
      type: System.String
      description: "要對應的參數名稱。"
    - id: dbType
      type: System.Data.SqlDbType
      description: "其中一個<xref href=&quot;System.Data.SqlDbType&quot;></xref>值。"
    - id: size
      type: System.Int32
      description: "參數的長度。"
  overload: System.Data.SqlClient.SqlParameter.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "中提供的值<code> dbType </code>參數是無效的後端資料類型。"
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32,System.String)
  id: '#ctor(System.String,System.Data.SqlDbType,System.Int32,System.String)'
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: SqlParameter(String,SqlDbType,Int32,String)
  nameWithType: SqlParameter.SqlParameter(String,SqlDbType,Int32,String)
  fullName: System.Data.SqlClient.SqlParameter.SqlParameter(String,SqlDbType,Int32,String)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "初始化的新執行個體<xref href=&quot;System.Data.SqlClient.SqlParameter&quot;></xref>使用參數名稱、 類別<xref href=&quot;System.Data.SqlDbType&quot;> </xref>、 大小和來源資料行名稱。"
  remarks: "**大小**推斷的值從`dbType`參數，如果未明確設定`size`參數。"
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlParameter> and sets some of its properties.  \n  \n [!code-vb[Classic WebData SqlParameter.SqlParameter5 Example#1](~/add/codesnippet/visualbasic/90f2fc39-217a-4d4f-ba7a-_1.vb)]\n [!code-cs[Classic WebData SqlParameter.SqlParameter5 Example#1](~/add/codesnippet/csharp/90f2fc39-217a-4d4f-ba7a-_1.cs)]"
  syntax:
    content: public SqlParameter (string parameterName, System.Data.SqlDbType dbType, int size, string sourceColumn);
    parameters:
    - id: parameterName
      type: System.String
      description: "要對應的參數名稱。"
    - id: dbType
      type: System.Data.SqlDbType
      description: "其中一個<xref href=&quot;System.Data.SqlDbType&quot;></xref>值。"
    - id: size
      type: System.Int32
      description: "參數的長度。"
    - id: sourceColumn
      type: System.String
      description: "來源資料行的名稱 (<>*>) 如果此<xref href=&quot;System.Data.SqlClient.SqlParameter&quot;></xref>用於呼叫<> *>。"
  overload: System.Data.SqlClient.SqlParameter.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "中提供的值<code> dbType </code>參數是無效的後端資料類型。"
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)
  id: '#ctor(System.String,System.Data.SqlDbType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)'
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: SqlParameter(String,SqlDbType,Int32,ParameterDirection,Boolean,Byte,Byte,String,DataRowVersion,Object)
  nameWithType: SqlParameter.SqlParameter(String,SqlDbType,Int32,ParameterDirection,Boolean,Byte,Byte,String,DataRowVersion,Object)
  fullName: System.Data.SqlClient.SqlParameter.SqlParameter(String,SqlDbType,Int32,ParameterDirection,Boolean,Byte,Byte,String,DataRowVersion,Object)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "初始化的新執行個體<xref href=&quot;System.Data.SqlClient.SqlParameter&quot;></xref>使用參數名稱、 參數類型、 參數大小的類別<xref href=&quot;System.Data.ParameterDirection&quot;> </xref>，參數的小數位數參數，來源資料行的有效位數<xref href=&quot;System.Data.DataRowVersion&quot;></xref>來使用和參數的值。"
  remarks: "**大小**和<xref:System.Data.SqlClient.SqlParameter.Precision%2A>會推斷的值從`dbType`參數，如果沒有明確設定`size`和`precision`參數。</xref:System.Data.SqlClient.SqlParameter.Precision%2A>"
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlParameter> and sets some of its properties.  \n  \n [!code-cs[Classic WebData SqlParameter.SqlParameter1 Example#1](~/add/codesnippet/csharp/ebcbbbdb-fcc0-4579-9b6d-_1.cs)]\n [!code-vb[Classic WebData SqlParameter.SqlParameter1 Example#1](~/add/codesnippet/visualbasic/ebcbbbdb-fcc0-4579-9b6d-_1.vb)]"
  syntax:
    content: public SqlParameter (string parameterName, System.Data.SqlDbType dbType, int size, System.Data.ParameterDirection direction, bool isNullable, byte precision, byte scale, string sourceColumn, System.Data.DataRowVersion sourceVersion, object value);
    parameters:
    - id: parameterName
      type: System.String
      description: "要對應的參數名稱。"
    - id: dbType
      type: System.Data.SqlDbType
      description: "其中一個<xref href=&quot;System.Data.SqlDbType&quot;></xref>值。"
    - id: size
      type: System.Int32
      description: "參數的長度。"
    - id: direction
      type: System.Data.ParameterDirection
      description: "其中一個<xref href=&quot;System.Data.ParameterDirection&quot;></xref>值。"
    - id: isNullable
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果欄位的值可為 null。否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    - id: precision
      type: System.Byte
      description: "總數的左邊的數字的小數點右邊<xref:System.Data.SqlClient.SqlParameter.Value*>已解決。</xref:System.Data.SqlClient.SqlParameter.Value*>"
    - id: scale
      type: System.Byte
      description: "小數點位數的總數<xref:System.Data.SqlClient.SqlParameter.Value*>已解決。</xref:System.Data.SqlClient.SqlParameter.Value*>"
    - id: sourceColumn
      type: System.String
      description: "來源資料行的名稱 (<>*>) 如果此<xref href=&quot;System.Data.SqlClient.SqlParameter&quot;></xref>用於呼叫<> *>。"
    - id: sourceVersion
      type: System.Data.DataRowVersion
      description: "其中一個<xref href=&quot;System.Data.DataRowVersion&quot;></xref>值。"
    - id: value
      type: System.Object
      description: "<xref:System.Object>也就是值<xref href=&quot;System.Data.SqlClient.SqlParameter&quot;> </xref>。</xref:System.Object>"
  overload: System.Data.SqlClient.SqlParameter.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "中提供的值<code> dbType </code>參數是無效的後端資料類型。"
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32,System.Data.ParameterDirection,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Boolean,System.Object,System.String,System.String,System.String)
  id: '#ctor(System.String,System.Data.SqlDbType,System.Int32,System.Data.ParameterDirection,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Boolean,System.Object,System.String,System.String,System.String)'
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: SqlParameter(String,SqlDbType,Int32,ParameterDirection,Byte,Byte,String,DataRowVersion,Boolean,Object,String,String,String)
  nameWithType: SqlParameter.SqlParameter(String,SqlDbType,Int32,ParameterDirection,Byte,Byte,String,DataRowVersion,Boolean,Object,String,String,String)
  fullName: System.Data.SqlClient.SqlParameter.SqlParameter(String,SqlDbType,Int32,ParameterDirection,Byte,Byte,String,DataRowVersion,Boolean,Object,String,String,String)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "初始化的新執行個體<xref href=&quot;System.Data.SqlClient.SqlParameter&quot;></xref>類別會使用參數名稱、 參數類型、 參數方向的長度，有效位數、 小數位數、 來源資料行，其中名稱<xref href=&quot;System.Data.DataRowVersion&quot;></xref>數值、 布林值，對應的值來源資料行<xref uid=&quot;langword_csharp_SqlParameter&quot; name=&quot;SqlParameter&quot; href=&quot;&quot;> </xref>，這個 XML 執行個體的結構描述集合所在的資料庫名稱這個 XML 執行個體的結構描述集合所在的主控關聯式結構描述和結構描述集合，這個參數的名稱。"
  remarks: "<xref:System.Data.SqlClient.SqlParameter.Size%2A>和<xref:System.Data.SqlClient.SqlParameter.Precision%2A>會推斷的值從`dbType`參數，如果沒有明確設定`size`和`precision`參數。</xref:System.Data.SqlClient.SqlParameter.Precision%2A> </xref:System.Data.SqlClient.SqlParameter.Size%2A>"
  syntax:
    content: public SqlParameter (string parameterName, System.Data.SqlDbType dbType, int size, System.Data.ParameterDirection direction, byte precision, byte scale, string sourceColumn, System.Data.DataRowVersion sourceVersion, bool sourceColumnNullMapping, object value, string xmlSchemaCollectionDatabase, string xmlSchemaCollectionOwningSchema, string xmlSchemaCollectionName);
    parameters:
    - id: parameterName
      type: System.String
      description: "要對應的參數名稱。"
    - id: dbType
      type: System.Data.SqlDbType
      description: "其中一個<xref href=&quot;System.Data.SqlDbType&quot;></xref>值。"
    - id: size
      type: System.Int32
      description: "參數的長度。"
    - id: direction
      type: System.Data.ParameterDirection
      description: "其中一個<xref href=&quot;System.Data.ParameterDirection&quot;></xref>值。"
    - id: precision
      type: System.Byte
      description: "總數的左邊的數字的小數點右邊<xref:System.Data.SqlClient.SqlParameter.Value*>已解決。</xref:System.Data.SqlClient.SqlParameter.Value*>"
    - id: scale
      type: System.Byte
      description: "小數點位數的總數<xref:System.Data.SqlClient.SqlParameter.Value*>已解決。</xref:System.Data.SqlClient.SqlParameter.Value*>"
    - id: sourceColumn
      type: System.String
      description: "來源資料行的名稱 (<>*>) 如果此<xref href=&quot;System.Data.SqlClient.SqlParameter&quot;></xref>用於呼叫<> *>。"
    - id: sourceVersion
      type: System.Data.DataRowVersion
      description: "其中一個<xref href=&quot;System.Data.DataRowVersion&quot;></xref>值。"
    - id: sourceColumnNullMapping
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果來源資料行可為 null。<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>如果不是。"
    - id: value
      type: System.Object
      description: "<xref:System.Object>也就是值<xref href=&quot;System.Data.SqlClient.SqlParameter&quot;> </xref>。</xref:System.Object>"
    - id: xmlSchemaCollectionDatabase
      type: System.String
      description: "這個 XML 執行個體的結構描述集合所在的資料庫名稱。"
    - id: xmlSchemaCollectionOwningSchema
      type: System.String
      description: "這個 XML 執行個體的結構描述集合所在主控關聯式結構描述。"
    - id: xmlSchemaCollectionName
      type: System.String
      description: "這個參數的結構描述集合名稱。"
  overload: System.Data.SqlClient.SqlParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.CompareInfo
  id: CompareInfo
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: CompareInfo
  nameWithType: SqlParameter.CompareInfo
  fullName: System.Data.SqlClient.SqlParameter.CompareInfo
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "取得或設定<xref:System.Globalization.CompareInfo>定義如何為此參數執行字串比較的物件。</xref:System.Globalization.CompareInfo>"
  syntax:
    content: public System.Data.SqlTypes.SqlCompareOptions CompareInfo { get; set; }
    return:
      type: System.Data.SqlTypes.SqlCompareOptions
      description: "A<xref:System.Globalization.CompareInfo>定義此參數的字串比較的物件。</xref:System.Globalization.CompareInfo>"
  overload: System.Data.SqlClient.SqlParameter.CompareInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.DbType
  id: DbType
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: DbType
  nameWithType: SqlParameter.DbType
  fullName: System.Data.SqlClient.SqlParameter.DbType
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "取得或設定<xref href=&quot;System.Data.SqlDbType&quot;></xref>的參數。"
  remarks: "<xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A>且已連結的 DbType。</xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A> 因此，設定 DbType 變更<xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A>為支援<xref:System.Data.SqlDbType>。</xref:System.Data.SqlDbType> </xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A>       如需支援的資料類型的清單，請參閱適當<xref:System.Data.SqlDbType>成員。</xref:System.Data.SqlDbType> 如需詳細資訊，請參閱[DataAdapter 的參數](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlParameter> and sets some of its properties.  \n  \n [!code-cs[Classic WebData SqlParameter.IsNullable Example#1](~/add/codesnippet/csharp/p-system.data.sqlclient._41_1.cs)]\n [!code-vb[Classic WebData SqlParameter.IsNullable Example#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._41_1.vb)]"
  syntax:
    content: public override System.Data.DbType DbType { get; set; }
    return:
      type: System.Data.DbType
      description: "其中一個<xref href=&quot;System.Data.SqlDbType&quot;></xref>值。 預設值是<xref uid=&quot;langword_csharp_NVarChar&quot; name=&quot;NVarChar&quot; href=&quot;&quot;> </xref>。"
  overload: System.Data.SqlClient.SqlParameter.DbType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.Direction
  id: Direction
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: Direction
  nameWithType: SqlParameter.Direction
  fullName: System.Data.SqlClient.SqlParameter.Direction
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "取得或設定值，指出參數是否只能輸入、 僅限輸出、 雙向或預存程序傳回值參數。"
  remarks: "如果<xref:System.Data.ParameterDirection>是輸出，以及執行相關聯的<xref:System.Data.SqlClient.SqlCommand>沒有傳回值，<xref:System.Data.SqlClient.SqlParameter>包含 null 值。</xref:System.Data.SqlClient.SqlParameter> </xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.ParameterDirection>       `Output``InputOut`，和`ReturnValue`透過呼叫<xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>關閉<xref:System.Data.SqlClient.SqlDataReader>.</xref:System.Data.SqlClient.SqlDataReader>之前，無法存取</xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>所傳回的參數"
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlParameter> and sets some of its properties.  \n  \n [Commands and Parameters](~/add/includes/ajax-current-ext-md.md)  \n  \n [DataAdapter Parameters](~/add/includes/ajax-current-ext-md.md)  \n  \n [SQL Server and ADO.NET](~/add/includes/ajax-current-ext-md.md)"
  syntax:
    content: public override System.Data.ParameterDirection Direction { get; set; }
    return:
      type: System.Data.ParameterDirection
      description: "其中一個<xref href=&quot;System.Data.ParameterDirection&quot;></xref>值。 預設值是<xref uid=&quot;langword_csharp_Input&quot; name=&quot;Input&quot; href=&quot;&quot;> </xref>。"
  overload: System.Data.SqlClient.SqlParameter.Direction*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "屬性未設定為其中一個有效<xref href=&quot;System.Data.ParameterDirection&quot;></xref>值。"
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.ForceColumnEncryption
  id: ForceColumnEncryption
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: ForceColumnEncryption
  nameWithType: SqlParameter.ForceColumnEncryption
  fullName: System.Data.SqlClient.SqlParameter.ForceColumnEncryption
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "使用時，會強制將參數加密[永遠加密](https://msdn.microsoft.com/library/mt163865.aspx)。 如果 SQL Server 通知驅動程式的參數不需要加密，使用參數的查詢將會失敗。 這個屬性會提供額外的防護措施安全性攻擊，事關受危害的 SQL Server 提供不正確的加密中繼資料給用戶端，可能會導致資料洩漏。"
  syntax:
    content: public bool ForceColumnEncryption { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果參數有強制資料行加密。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Data.SqlClient.SqlParameter.ForceColumnEncryption*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.IsNullable
  id: IsNullable
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: IsNullable
  nameWithType: SqlParameter.IsNullable
  fullName: System.Data.SqlClient.SqlParameter.IsNullable
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "取得或設定值，指出該參數是否接受 null 值。 IsNullable 不會用來驗證參數的值，並不會阻止傳送或接收 null 值，執行命令時。"
  remarks: "使用<xref:System.DBNull>類別</xref:System.DBNull>處理 null 值"
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlParameter> and sets some of its properties.  \n  \n [!code-vb[DataWorks SqlParam.Properties#2](~/add/codesnippet/visualbasic/p-system.data.sqlclient._27_1.vb)]\n [!code-cs[DataWorks SqlParam.Properties#2](~/add/codesnippet/csharp/p-system.data.sqlclient._27_1.cs)]"
  syntax:
    content: public override bool IsNullable { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果接受 null 值;否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Data.SqlClient.SqlParameter.IsNullable*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.LocaleId
  id: LocaleId
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: LocaleId
  nameWithType: SqlParameter.LocaleId
  fullName: System.Data.SqlClient.SqlParameter.LocaleId
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "取得或設定決定慣例和語言特定地區的地區設定識別碼。"
  remarks: "地區設定識別的慣例和語言特定地理區域。 用來編碼 （字元集） 的特定字串的字碼頁根據該字串或產生它的環境所使用的地區設定。 此屬性設定 （適用於輸入參數） 或者 （適用於輸出參數） 取得要與伺服器交換資料時，附加至字串的地區設定。 這個屬性通常是與搭配<xref:System.Data.SqlClient.SqlParameter.CompareInfo%2A>屬性。</xref:System.Data.SqlClient.SqlParameter.CompareInfo%2A>      ```   static void CreateSqlParameterLocaleId(){      SqlParameter parameter = new SqlParameter(&quot;pName&quot;, SqlDbType.VarChar);      parameter.LocaleId = 1033;   // English - United States   }   ```"
  syntax:
    content: public int LocaleId { get; set; }
    return:
      type: System.Int32
      description: "傳回參數相關聯的地區設定識別碼。"
  overload: System.Data.SqlClient.SqlParameter.LocaleId*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.Offset
  id: Offset
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: Offset
  nameWithType: SqlParameter.Offset
  fullName: System.Data.SqlClient.SqlParameter.Offset
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "取得或設定位移<xref:System.Data.SqlClient.SqlParameter.Value*>屬性。</xref:System.Data.SqlClient.SqlParameter.Value*>"
  remarks: "`Offset`屬性適用於用戶端區塊處理的二進位和字串資料。 比方說，若要插入的伺服器上的資料行中的 10 MB 的文字，使用者可能會執行 10 個參數化的插入的 1 MB 的區塊，移位的值`Offset`上每個反覆項目 1 mb。       `Offset`指定的二進位型別，位元組數目以及字串的字元數目。 字串的計數不包括結束的字元。"
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlParameter> and sets some of its properties.  \n  \n [!code-vb[DataWorks SqlParam.Properties#3](~/add/codesnippet/visualbasic/p-system.data.sqlclient._43_1.vb)]\n [!code-cs[DataWorks SqlParam.Properties#3](~/add/codesnippet/csharp/p-system.data.sqlclient._43_1.cs)]"
  syntax:
    content: public int Offset { get; set; }
    return:
      type: System.Int32
      description: "至<xref:System.Data.SqlClient.SqlParameter.Value*>。</xref:System.Data.SqlClient.SqlParameter.Value*>位移 預設值為 0。"
  overload: System.Data.SqlClient.SqlParameter.Offset*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.ParameterName
  id: ParameterName
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: ParameterName
  nameWithType: SqlParameter.ParameterName
  fullName: System.Data.SqlClient.SqlParameter.ParameterName
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "取得或設定名稱<xref href=&quot;System.Data.SqlClient.SqlParameter&quot;> </xref>。"
  remarks: "在表單中指定參數名稱@paramname。 執行前，您必須設定 ParameterName<xref:System.Data.SqlClient.SqlCommand>參數相依於。</xref:System.Data.SqlClient.SqlCommand>"
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlParameter> and sets some of its properties.  \n  \n [!code-vb[Classic WebData SqlParameter.ParameterName Example#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._1_1.vb)]\n [!code-cs[Classic WebData SqlParameter.ParameterName Example#1](~/add/codesnippet/csharp/p-system.data.sqlclient._1_1.cs)]"
  syntax:
    content: public override string ParameterName { get; set; }
    return:
      type: System.String
      description: "名稱<xref href=&quot;System.Data.SqlClient.SqlParameter&quot;> </xref>。 預設為空字串。"
  overload: System.Data.SqlClient.SqlParameter.ParameterName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.Precision
  id: Precision
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: Precision
  nameWithType: SqlParameter.Precision
  fullName: System.Data.SqlClient.SqlParameter.Precision
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "取得或設定用來表示最大位數<xref:System.Data.SqlClient.SqlParameter.Value*>屬性。</xref:System.Data.SqlClient.SqlParameter.Value*>"
  remarks: "有效位數屬性由具有參數的<xref:System.Data.SqlDbType>的`Decimal`。</xref:System.Data.SqlDbType>       您不需要指定有效位數的值和<xref:System.Data.SqlClient.SqlParameter.Scale%2A>屬性輸入參數，因為它們可以從參數值推斷。</xref:System.Data.SqlClient.SqlParameter.Scale%2A> `Precision`和`Scale`輸出參數以及您要指定不含值，例如特定的有效位數和小數位數指定 null 值，指出參數的完整中繼資料的案例都需要。      > [!NOTE] > 不支援使用這個屬性的強制轉型至資料庫的資料。 Round 截斷，或否則 coerce 資料傳遞至資料庫之前，請使用<xref:System.Math>類別屬於`System`之前指派值給參數的命名空間`Value`屬性。</xref:System.Math>      > [!NOTE] > 隨附於.NET Framework 1.0 版的 Microsoft.NET Framework 資料提供者不會確認有效位數或<xref:System.Data.SqlClient.SqlParameter.Scale%2A>的<xref:System.Decimal>參數值。</xref:System.Decimal> </xref:System.Data.SqlClient.SqlParameter.Scale%2A> 這會造成插入資料來源上的截斷的資料。 如果您使用.NET Framework 1.0 版，驗證的有效位數和<xref:System.Data.SqlClient.SqlParameter.Scale%2A>的<xref:System.Decimal>設定參數值之前的值。</xref:System.Decimal> </xref:System.Data.SqlClient.SqlParameter.Scale%2A> 當您使用.NET Framework 1.1 版或更新版本時，如果將擲回例外狀況<xref:System.Decimal>參數值會設定具有無效的有效位數。</xref:System.Decimal> <xref:System.Data.SqlClient.SqlParameter.Scale%2A>值超過<xref:System.Decimal>參數的小數點位數仍然會被截斷。</xref:System.Decimal></xref:System.Data.SqlClient.SqlParameter.Scale%2A>"
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlParameter> and sets some of its properties.  \n  \n [!code-vb[Classic WebData SqlParameter.Precision Example#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._18_1.vb)]\n [!code-cs[Classic WebData SqlParameter.Precision Example#1](~/add/codesnippet/csharp/p-system.data.sqlclient._18_1.cs)]"
  syntax:
    content: public byte Precision { get; set; }
    return:
      type: System.Byte
      description: "用來表示最大位數<> *> 屬性。預設值為 0。這表示此資料提供者設定的有效位數<> *>。"
  overload: System.Data.SqlClient.SqlParameter.Precision*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.ResetDbType
  id: ResetDbType
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: ResetDbType()
  nameWithType: SqlParameter.ResetDbType()
  fullName: System.Data.SqlClient.SqlParameter.ResetDbType()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "重設與此相關聯的類型<xref href=&quot;System.Data.SqlClient.SqlParameter&quot;> </xref>。"
  remarks: "執行命令時，其中包含參數值、 程式碼可以明確地設定參數的型別或參數可以推斷其類型的值。 呼叫這個方法，使推斷其類型，從傳入參數中的值時，一次，會重設參數。 呼叫這個方法會影響這兩個<xref:System.Data.SqlClient.SqlParameter.DbType%2A>的<xref:System.Data.SqlClient.SqlParameter>.</xref:System.Data.SqlClient.SqlParameter>和<xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A>屬性</xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A></xref:System.Data.SqlClient.SqlParameter.DbType%2A>"
  syntax:
    content: public override void ResetDbType ();
    parameters: []
  overload: System.Data.SqlClient.SqlParameter.ResetDbType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.ResetSqlDbType
  id: ResetSqlDbType
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: ResetSqlDbType()
  nameWithType: SqlParameter.ResetSqlDbType()
  fullName: System.Data.SqlClient.SqlParameter.ResetSqlDbType()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "重設與此相關聯的類型<xref href=&quot;System.Data.SqlClient.SqlParameter&quot;> </xref>。"
  remarks: "執行命令時，其中包含參數值、 程式碼可以明確地設定參數的型別或參數可以推斷其類型的值。 呼叫這個方法，使推斷其類型，從傳入參數中的值時，一次，會重設參數。 呼叫這個方法會影響這兩個<xref:System.Data.SqlClient.SqlParameter.DbType%2A>的<xref:System.Data.SqlClient.SqlParameter>.</xref:System.Data.SqlClient.SqlParameter>和<xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A>屬性</xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A></xref:System.Data.SqlClient.SqlParameter.DbType%2A>"
  syntax:
    content: public void ResetSqlDbType ();
    parameters: []
  overload: System.Data.SqlClient.SqlParameter.ResetSqlDbType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.Scale
  id: Scale
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: Scale
  nameWithType: SqlParameter.Scale
  fullName: System.Data.SqlClient.SqlParameter.Scale
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "取得或設定小數位數的<xref:System.Data.SqlClient.SqlParameter.Value*>已解決。</xref:System.Data.SqlClient.SqlParameter.Value*>"
  remarks: "小數位數屬性由具有參數的<xref:System.Data.SqlDbType>的`Decimal`。</xref:System.Data.SqlDbType>      > [!WARNING] > 如果小數位數屬性未明確指定與伺服器上的資料不適合標尺為 0 （預設值），資料可能被截斷。       您不需要指定的值<xref:System.Data.SqlClient.SqlParameter.Precision%2A>和參數值推斷出隨著輸入參數的屬性。</xref:System.Data.SqlClient.SqlParameter.Precision%2A> `Precision`和`Scale`輸出參數以及您要指定不含值，例如特定的有效位數和小數位數指定 null 值，指出參數的完整中繼資料的案例都需要。      > [!NOTE] > 不支援使用這個屬性的強制轉型至資料庫的資料。 Round 截斷，或否則 coerce 資料傳遞至資料庫之前，請使用<xref:System.Math>類別屬於`System`之前指派值給參數的命名空間`Value`屬性。</xref:System.Math>      > [!NOTE] > 隨附於.NET Framework 1.0 版的.NET framework 資料提供者不會驗證<xref:System.Data.SqlClient.SqlParameter.Precision%2A>或小數位數<xref:System.Decimal>參數值。</xref:System.Decimal> </xref:System.Data.SqlClient.SqlParameter.Precision%2A> 這可能會導致截斷的資料插入到資料來源。 如果您使用.NET Framework 1.0 版，驗證<xref:System.Data.SqlClient.SqlParameter.Precision%2A>和<xref:System.Data.SqlClient.SqlParameter>的<xref:System.Decimal>設定參數值之前的值。</xref:System.Decimal> </xref:System.Data.SqlClient.SqlParameter> </xref:System.Data.SqlClient.SqlParameter.Precision%2A> 縮放值超過<xref:System.Decimal>參數的小數點位數仍然會被截斷。</xref:System.Decimal>"
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlParameter> and sets some of its properties.  \n  \n [!code-vb[DataWorks SqlParam.Properties#4](~/add/codesnippet/visualbasic/p-system.data.sqlclient._60_1.vb)]\n [!code-cs[DataWorks SqlParam.Properties#4](~/add/codesnippet/csharp/p-system.data.sqlclient._60_1.cs)]"
  syntax:
    content: public byte Scale { get; set; }
    return:
      type: System.Byte
      description: "要的小數位數<xref:System.Data.SqlClient.SqlParameter.Value*>已解決。</xref:System.Data.SqlClient.SqlParameter.Value*> 預設值為 0。"
  overload: System.Data.SqlClient.SqlParameter.Scale*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.Size
  id: Size
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: Size
  nameWithType: SqlParameter.Size
  fullName: System.Data.SqlClient.SqlParameter.Size
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "取得或設定大小上限，以位元組為單位的資料行中的資料。"
  remarks: "此屬性則不會影響傳回值從預存程序傳回參數一律為固定大小的整數。       變數長度類型 (例如 nvarchar) 的輸出參數，參數的大小定義輸出參數的緩衝區的大小。 輸出參數會截斷為指定大小的大小。 字元類型的指定大小的大小是以字元為單位。       Size 屬性用於二進位和字串類型。 類型參數`SqlType.String`，`Size`表示 Unicode 字元長度。 類型參數`SqlType.Xml`，`Size`會被忽略。       針對非字串資料類型和 ANSI 字串資料，[大小] 屬性表示的位元組數目。 Unicode 字串資料，大小是指的字元數。 字串的計數不包括結束的字元。       可變長度資料類型的大小會描述資料傳送到伺服器的最大數量。 例如，如果 Unicode 字串值，大小無法用來限制傳送到伺服器的第一次一百個字元的資料量。       如果未明確設定，則會從指定的參數值的實際大小中推斷。       如果大於大小參數值的小數部分，值會被截斷以符合大小。       固定的長度資料類型，會忽略大小的值。 它可以擷取僅供參考之用，並且會傳回的位元組的提供者會使用傳輸伺服器參數的值時的最大數量。       如需串流的資訊，請參閱[SqlClient 串流支援](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlParameter> and sets some of its properties.  \n  \n [!code-vb[DataWorks SqlParam.Properties#5](~/add/codesnippet/visualbasic/p-system.data.sqlclient._19_1.vb)]\n [!code-cs[DataWorks SqlParam.Properties#5](~/add/codesnippet/csharp/p-system.data.sqlclient._19_1.cs)]"
  syntax:
    content: public override int Size { get; set; }
    return:
      type: System.Int32
      description: "大小上限，以位元組為單位的資料行中的資料。 預設值是由參數值推斷。"
  overload: System.Data.SqlClient.SqlParameter.Size*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.SourceColumn
  id: SourceColumn
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: SourceColumn
  nameWithType: SqlParameter.SourceColumn
  fullName: System.Data.SqlClient.SqlParameter.SourceColumn
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "取得或設定對應至來源資料行名稱<xref href=&quot;System.Data.DataSet&quot;></xref>並且用於載入或傳回<xref:System.Data.SqlClient.SqlParameter.Value*></xref:System.Data.SqlClient.SqlParameter.Value*>"
  remarks: "當 SourceColumn 設定為空字串以外的任何項目時，從 SourceColumn 名稱的資料行擷取參數的值。 如果<xref:System.Data.SqlClient.SqlParameter.Direction%2A>設`Input`，值取自<xref:System.Data.DataSet>.</xref:System.Data.DataSet> </xref:System.Data.SqlClient.SqlParameter.Direction%2A> 如果<xref:System.Data.SqlClient.SqlParameter.Direction%2A>設`Output`，值取自資料來源。</xref:System.Data.SqlClient.SqlParameter.Direction%2A> A<xref:System.Data.SqlClient.SqlParameter.Direction%2A>的`InputOutput`是兩者的組合。</xref:System.Data.SqlClient.SqlParameter.Direction%2A>       如需如何使用的 SourceColumn 屬性的詳細資訊，請參閱[DataAdapter 的參數](~/add/includes/ajax-current-ext-md.md)和[以 Dataadapter 更新資料來源](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlParameter> and sets some of its properties.  \n  \n [!code-vb[DataWorks SqlParam.Properties#6](~/add/codesnippet/visualbasic/p-system.data.sqlclient._48_1.vb)]\n [!code-cs[DataWorks SqlParam.Properties#6](~/add/codesnippet/csharp/p-system.data.sqlclient._48_1.cs)]"
  syntax:
    content: public override string SourceColumn { get; set; }
    return:
      type: System.String
      description: "對應至來源資料行名稱<xref href=&quot;System.Data.DataSet&quot;> </xref>。 預設為空字串。"
  overload: System.Data.SqlClient.SqlParameter.SourceColumn*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.SourceColumnNullMapping
  id: SourceColumnNullMapping
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: SourceColumnNullMapping
  nameWithType: SqlParameter.SourceColumnNullMapping
  fullName: System.Data.SqlClient.SqlParameter.SourceColumnNullMapping
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "設定或取得值，這個值指出來源資料行是否可為 null。 這可讓<xref href=&quot;System.Data.SqlClient.SqlCommandBuilder&quot;></xref>正確產生可為 null 的資料行的 Update 陳述式。"
  remarks: "使用 SourceColumnNullMapping<xref:System.Data.SqlClient.SqlCommandBuilder>正確處理可為 null 的資料行時，產生更新命令。</xref:System.Data.SqlClient.SqlCommandBuilder> 一般而言，使用 SourceColumnNullMapping 限於繼承自<xref:System.Data.SqlClient.SqlCommandBuilder>.</xref:System.Data.SqlClient.SqlCommandBuilder>的開發人員       <xref:System.Data.Common.DbCommandBuilder>使用這個屬性來判斷來源資料行是否可為 null，並將此屬性設定為`true`是否可為 null，和`false`如果不是。</xref:System.Data.Common.DbCommandBuilder> 當<xref:System.Data.SqlClient.SqlCommandBuilder>會產生其 Update 陳述式，它會檢查每個參數 SourceColumnNullMapping。</xref:System.Data.SqlClient.SqlCommandBuilder> 如果屬性是`true`，<xref:System.Data.SqlClient.SqlCommandBuilder>會產生類似下面的 WHERE 子句 （在這個查詢運算式中，&quot;FieldName&quot;代表欄位的名稱）︰```   ((@IsNull_FieldName = 1 AND FieldName IS NULL) OR      (FieldName = @Original_FieldName))   ```如果 SourceColumnNullMapping 欄位為 false，<xref:System.Data.SqlClient.SqlCommandBuilder>會產生下列 WHERE 子句︰```   FieldName = @OriginalFieldName   ```颾魤 ㄛ@IsNull_FieldName包含 1，如果來源欄位包含 null 和 0 如果不存在。</xref:System.Data.SqlClient.SqlCommandBuilder> </xref:System.Data.SqlClient.SqlCommandBuilder> 這項機制可讓 SQL Server 中的效能最佳化，並提供可跨多個提供者的通用程式碼。"
  syntax:
    content: public override bool SourceColumnNullMapping { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果來源資料行可為 null。<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>如果不是。"
  overload: System.Data.SqlClient.SqlParameter.SourceColumnNullMapping*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.SourceVersion
  id: SourceVersion
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: SourceVersion
  nameWithType: SqlParameter.SourceVersion
  fullName: System.Data.SqlClient.SqlParameter.SourceVersion
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "取得或設定<xref href=&quot;System.Data.DataRowVersion&quot;></xref>使用當您載入<xref:System.Data.SqlClient.SqlParameter.Value*></xref:System.Data.SqlClient.SqlParameter.Value*>"
  remarks: "這個屬性供`SqlDataAdapter.UpdateCommand`以判斷原始或目前的值是否用於參數值更新期間。 這可讓更新的主索引鍵。 此屬性設定為版本<xref:System.Data.DataRow>供`DataRow.Item`屬性，或其中一個`DataRow.GetChildRows`方法<xref:System.Data.DataRow>物件。</xref:System.Data.DataRow> </xref:System.Data.DataRow>"
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlParameter> and sets some of its properties.  \n  \n [!code-vb[DataWorks SqlParam.Properties#7](~/add/codesnippet/visualbasic/p-system.data.sqlclient._64_1.vb)]\n [!code-cs[DataWorks SqlParam.Properties#7](~/add/codesnippet/csharp/p-system.data.sqlclient._64_1.cs)]"
  syntax:
    content: public override System.Data.DataRowVersion SourceVersion { get; set; }
    return:
      type: System.Data.DataRowVersion
      description: "其中一個<xref href=&quot;System.Data.DataRowVersion&quot;></xref>值。 預設值是<xref uid=&quot;langword_csharp_Current&quot; name=&quot;Current&quot; href=&quot;&quot;> </xref>。"
  overload: System.Data.SqlClient.SqlParameter.SourceVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.SqlDbType
  id: SqlDbType
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: SqlDbType
  nameWithType: SqlParameter.SqlDbType
  fullName: System.Data.SqlClient.SqlParameter.SqlDbType
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "取得或設定<xref href=&quot;System.Data.SqlDbType&quot;></xref>的參數。"
  remarks: "SqlDbType 和<xref:System.Data.SqlClient.SqlParameter.DbType%2A>連結。</xref:System.Data.SqlClient.SqlParameter.DbType%2A> 因此，設定<xref:System.Data.SqlClient.SqlParameter.DbType%2A>變更為支援<xref:System.Data.SqlDbType>。</xref:System.Data.SqlDbType> SqlDbType</xref:System.Data.SqlClient.SqlParameter.DbType%2A>       如需支援的資料類型的清單，請參閱適當<xref:System.Data.SqlDbType>成員。</xref:System.Data.SqlDbType> 如需詳細資訊，請參閱[DataAdapter 的參數](~/add/includes/ajax-current-ext-md.md)。       如需串流的資訊，請參閱[SqlClient 串流支援](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public System.Data.SqlDbType SqlDbType { get; set; }
    return:
      type: System.Data.SqlDbType
      description: "其中一個<xref href=&quot;System.Data.SqlDbType&quot;></xref>值。 預設值是<xref uid=&quot;langword_csharp_NVarChar&quot; name=&quot;NVarChar&quot; href=&quot;&quot;> </xref>。"
  overload: System.Data.SqlClient.SqlParameter.SqlDbType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.SqlValue
  id: SqlValue
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: SqlValue
  nameWithType: SqlParameter.SqlValue
  fullName: System.Data.SqlClient.SqlParameter.SqlValue
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "取得或設定參數的值做為 SQL 類型。"
  remarks: "輸入參數的值繫結至<xref:System.Data.SqlClient.SqlCommand>傳送到伺服器。</xref:System.Data.SqlClient.SqlCommand> 輸出和傳回值參數，在完成設定值<xref:System.Data.SqlClient.SqlCommand>及之後<xref:System.Data.SqlClient.SqlDataReader>已關閉。</xref:System.Data.SqlClient.SqlDataReader> </xref:System.Data.SqlClient.SqlCommand>       這個屬性可以設定為 null 或<xref:System.DBNull.Value>.</xref:System.DBNull.Value> 使用<xref:System.DBNull.Value>傳送 NULL 值做為參數的值。</xref:System.DBNull.Value> 使用 null 或未設定 SqlValue 来用於參數的預設值。       如果應用程式指定的資料庫型別，繫結的值會轉換成該類型，提供者將資料傳送到伺服器時。 提供者會嘗試將值的任何類型的轉換，如果支援<xref:System.IConvertible>介面。</xref:System.IConvertible> 如果指定的型別不相容的值，可能導致轉換錯誤。       這兩個的<xref:System.Data.SqlClient.SqlParameter.DbType%2A>而且<xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A>可以藉由設定<xref:System.Data.SqlClient.SqlParameter.Value%2A>.</xref:System.Data.SqlClient.SqlParameter.Value%2A>推斷屬性</xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A></xref:System.Data.SqlClient.SqlParameter.DbType%2A>       <xref:System.Data.SqlClient.SqlParameter.Value%2A>屬性覆寫`SqlDataAdapter.UpdateCommand`。</xref:System.Data.SqlClient.SqlParameter.Value%2A>       使用<xref:System.Data.SqlClient.SqlParameter.Value%2A>屬性設為 common language runtime (CLR) 型別傳回參數值。</xref:System.Data.SqlClient.SqlParameter.Value%2A>       如需串流的資訊，請參閱[SqlClient 串流支援](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public object SqlValue { get; set; }
    return:
      type: System.Object
      description: "<xref:System.Object>也就是使用 SQL 型別參數的值。</xref:System.Object> 預設值為 null。"
  overload: System.Data.SqlClient.SqlParameter.SqlValue*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.System#ICloneable#Clone
  id: System#ICloneable#Clone
  isEii: true
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: System.ICloneable.Clone()
  nameWithType: SqlParameter.System.ICloneable.Clone()
  fullName: System.Data.SqlClient.SqlParameter.System.ICloneable.Clone()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "如需這個成員的說明，請參閱<xref:System.ICloneable.Clone*>.</xref:System.ICloneable.Clone*>"
  remarks: "這個成員是明確介面成員實作。 它可用時，才<xref:System.Data.SqlClient.SqlParameter>執行個體轉換成<xref:System.ICloneable>介面。</xref:System.ICloneable> </xref:System.Data.SqlClient.SqlParameter>"
  syntax:
    content: object ICloneable.Clone ();
    parameters: []
    return:
      type: System.Object
      description: "新<xref:System.Object>也就是這個執行個體的複本。</xref:System.Object>"
  overload: System.Data.SqlClient.SqlParameter.System#ICloneable#Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.ToString
  id: ToString
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: ToString()
  nameWithType: SqlParameter.ToString()
  fullName: System.Data.SqlClient.SqlParameter.ToString()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "取得字串，包含<xref:System.Data.SqlClient.SqlParameter.ParameterName*>.</xref:System.Data.SqlClient.SqlParameter.ParameterName*>"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "字串，包含<xref:System.Data.SqlClient.SqlParameter.ParameterName*>.</xref:System.Data.SqlClient.SqlParameter.ParameterName*>"
  overload: System.Data.SqlClient.SqlParameter.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.TypeName
  id: TypeName
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: TypeName
  nameWithType: SqlParameter.TypeName
  fullName: System.Data.SqlClient.SqlParameter.TypeName
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "取得或設定資料表值參數的型別名稱。"
  syntax:
    content: public string TypeName { get; set; }
    return:
      type: System.String
      description: "指定的資料表值參數的型別名稱。"
  overload: System.Data.SqlClient.SqlParameter.TypeName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.UdtTypeName
  id: UdtTypeName
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: UdtTypeName
  nameWithType: SqlParameter.UdtTypeName
  fullName: System.Data.SqlClient.SqlParameter.UdtTypeName
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "取得或設定<xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;> </xref> ，表示使用者定義類型做為參數。"
  remarks: "如需示範 UdtTypeName 的範例，請參閱[擷取 UDT 資料](http://msdn.microsoft.com/library/ms131080.aspx)。"
  syntax:
    content: public string UdtTypeName { get; set; }
    return:
      type: System.String
      description: "A <xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;> </xref> ，代表在資料庫中使用者定義型別的完整的名稱。"
  overload: System.Data.SqlClient.SqlParameter.UdtTypeName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.Value
  id: Value
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: Value
  nameWithType: SqlParameter.Value
  fullName: System.Data.SqlClient.SqlParameter.Value
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "取得或設定參數的值。"
  remarks: "輸入參數的值繫結至<xref:System.Data.SqlClient.SqlCommand>傳送到伺服器。</xref:System.Data.SqlClient.SqlCommand> 輸出和傳回值參數，在完成設定值<xref:System.Data.SqlClient.SqlCommand>及之後<xref:System.Data.SqlClient.SqlDataReader>已關閉。</xref:System.Data.SqlClient.SqlDataReader> </xref:System.Data.SqlClient.SqlCommand>       這個屬性可以設定為 null 或<xref:System.DBNull.Value>.</xref:System.DBNull.Value> 使用<xref:System.DBNull.Value>傳送 NULL 值做為參數的值。</xref:System.DBNull.Value> 使用 null 或未設定要用於參數的預設值的值。       如果非 Unicode XML 資料傳送為字串，則會擲回例外狀況。       如果應用程式指定的資料庫型別，繫結的值會轉換成該類型，提供者將資料傳送到伺服器時。 提供者會嘗試將值的任何類型的轉換，如果支援<xref:System.IConvertible>介面。</xref:System.IConvertible> 如果指定的型別不相容的值，可能導致轉換錯誤。       同時<xref:System.Data.SqlClient.SqlParameter.DbType%2A>和<xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A>屬性所設定的值來推斷。</xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A> </xref:System.Data.SqlClient.SqlParameter.DbType%2A>       Value 屬性覆寫`SqlDataAdapter.UpdateCommand`。       如需串流的資訊，請參閱[SqlClient 串流支援](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlParameter> and sets some of its properties.  \n  \n [!code-vb[DataWorks SqlParam.Properties#8](~/add/codesnippet/visualbasic/p-system.data.sqlclient._17_1.vb)]\n [!code-cs[DataWorks SqlParam.Properties#8](~/add/codesnippet/csharp/p-system.data.sqlclient._17_1.cs)]"
  syntax:
    content: public override object Value { get; set; }
    return:
      type: System.Object
      description: "<xref:System.Object>也就是參數的值。</xref:System.Object> 預設值為 null。"
  overload: System.Data.SqlClient.SqlParameter.Value*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.XmlSchemaCollectionDatabase
  id: XmlSchemaCollectionDatabase
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: XmlSchemaCollectionDatabase
  nameWithType: SqlParameter.XmlSchemaCollectionDatabase
  fullName: System.Data.SqlClient.SqlParameter.XmlSchemaCollectionDatabase
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "取得這個 XML 執行個體的結構描述集合所在的資料庫名稱。"
  remarks: "這個值為 null (`Nothing`在 Microsoft Visual Basic) 如果在目前資料庫中定義之集合。 它也是 null 是否有任何結構描述集合，在此情況下<xref:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionName%2A>和<xref:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionOwningSchema%2A>也是 null。</xref:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionOwningSchema%2A> </xref:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionName%2A>"
  syntax:
    content: public string XmlSchemaCollectionDatabase { get; set; }
    return:
      type: System.String
      description: "這個 XML 執行個體的結構描述集合所在的資料庫名稱。"
  overload: System.Data.SqlClient.SqlParameter.XmlSchemaCollectionDatabase*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.XmlSchemaCollectionName
  id: XmlSchemaCollectionName
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: XmlSchemaCollectionName
  nameWithType: SqlParameter.XmlSchemaCollectionName
  fullName: System.Data.SqlClient.SqlParameter.XmlSchemaCollectionName
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "取得這個 XML 執行個體的結構描述集合的名稱。"
  remarks: "這個值為 null (`Nothing`在 Microsoft Visual Basic) 如果沒有相關聯的結構描述集合。 如果值為 null，則<xref:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionDatabase%2A>和<xref:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionOwningSchema%2A>也是 null。</xref:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionOwningSchema%2A> </xref:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionDatabase%2A>"
  syntax:
    content: public string XmlSchemaCollectionName { get; set; }
    return:
      type: System.String
      description: "這個 XML 執行個體的結構描述集合名稱。"
  overload: System.Data.SqlClient.SqlParameter.XmlSchemaCollectionName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.XmlSchemaCollectionOwningSchema
  id: XmlSchemaCollectionOwningSchema
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: XmlSchemaCollectionOwningSchema
  nameWithType: SqlParameter.XmlSchemaCollectionOwningSchema
  fullName: System.Data.SqlClient.SqlParameter.XmlSchemaCollectionOwningSchema
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "這個 XML 執行個體的結構描述集合所在主控關聯式結構描述。"
  remarks: "這個值為 null (`Nothing`在 Microsoft Visual Basic) 如果在目前資料庫中定義之集合。 它也是 null 是否有任何結構描述集合，在此情況下<xref:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionDatabase%2A>和<xref:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionName%2A>也是 null。</xref:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionName%2A> </xref:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionDatabase%2A>"
  syntax:
    content: public string XmlSchemaCollectionOwningSchema { get; set; }
    return:
      type: System.String
      description: "這個 XML 執行個體主控關聯式結構描述。"
  overload: System.Data.SqlClient.SqlParameter.XmlSchemaCollectionOwningSchema*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Common.DbParameter
  isExternal: false
  name: System.Data.Common.DbParameter
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Data.SqlClient.SqlParameter.#ctor
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: SqlParameter()
  nameWithType: SqlParameter.SqlParameter()
  fullName: System.Data.SqlClient.SqlParameter.SqlParameter()
- uid: System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType)
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: SqlParameter(String,SqlDbType)
  nameWithType: SqlParameter.SqlParameter(String,SqlDbType)
  fullName: System.Data.SqlClient.SqlParameter.SqlParameter(String,SqlDbType)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.SqlDbType
  parent: System.Data
  isExternal: false
  name: SqlDbType
  nameWithType: SqlDbType
  fullName: System.Data.SqlDbType
- uid: System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Object)
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: SqlParameter(String,Object)
  nameWithType: SqlParameter.SqlParameter(String,Object)
  fullName: System.Data.SqlClient.SqlParameter.SqlParameter(String,Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32)
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: SqlParameter(String,SqlDbType,Int32)
  nameWithType: SqlParameter.SqlParameter(String,SqlDbType,Int32)
  fullName: System.Data.SqlClient.SqlParameter.SqlParameter(String,SqlDbType,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32,System.String)
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: SqlParameter(String,SqlDbType,Int32,String)
  nameWithType: SqlParameter.SqlParameter(String,SqlDbType,Int32,String)
  fullName: System.Data.SqlClient.SqlParameter.SqlParameter(String,SqlDbType,Int32,String)
- uid: System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: SqlParameter(String,SqlDbType,Int32,ParameterDirection,Boolean,Byte,Byte,String,DataRowVersion,Object)
  nameWithType: SqlParameter.SqlParameter(String,SqlDbType,Int32,ParameterDirection,Boolean,Byte,Byte,String,DataRowVersion,Object)
  fullName: System.Data.SqlClient.SqlParameter.SqlParameter(String,SqlDbType,Int32,ParameterDirection,Boolean,Byte,Byte,String,DataRowVersion,Object)
- uid: System.Data.ParameterDirection
  parent: System.Data
  isExternal: false
  name: ParameterDirection
  nameWithType: ParameterDirection
  fullName: System.Data.ParameterDirection
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Data.DataRowVersion
  parent: System.Data
  isExternal: false
  name: DataRowVersion
  nameWithType: DataRowVersion
  fullName: System.Data.DataRowVersion
- uid: System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32,System.Data.ParameterDirection,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Boolean,System.Object,System.String,System.String,System.String)
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: SqlParameter(String,SqlDbType,Int32,ParameterDirection,Byte,Byte,String,DataRowVersion,Boolean,Object,String,String,String)
  nameWithType: SqlParameter.SqlParameter(String,SqlDbType,Int32,ParameterDirection,Byte,Byte,String,DataRowVersion,Boolean,Object,String,String,String)
  fullName: System.Data.SqlClient.SqlParameter.SqlParameter(String,SqlDbType,Int32,ParameterDirection,Byte,Byte,String,DataRowVersion,Boolean,Object,String,String,String)
- uid: System.Data.SqlClient.SqlParameter.CompareInfo
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: CompareInfo
  nameWithType: SqlParameter.CompareInfo
  fullName: System.Data.SqlClient.SqlParameter.CompareInfo
- uid: System.Data.SqlTypes.SqlCompareOptions
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlCompareOptions
  nameWithType: SqlCompareOptions
  fullName: System.Data.SqlTypes.SqlCompareOptions
- uid: System.Data.SqlClient.SqlParameter.DbType
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: DbType
  nameWithType: SqlParameter.DbType
  fullName: System.Data.SqlClient.SqlParameter.DbType
- uid: System.Data.DbType
  parent: System.Data
  isExternal: false
  name: DbType
  nameWithType: DbType
  fullName: System.Data.DbType
- uid: System.Data.SqlClient.SqlParameter.Direction
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: Direction
  nameWithType: SqlParameter.Direction
  fullName: System.Data.SqlClient.SqlParameter.Direction
- uid: System.Data.SqlClient.SqlParameter.ForceColumnEncryption
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: ForceColumnEncryption
  nameWithType: SqlParameter.ForceColumnEncryption
  fullName: System.Data.SqlClient.SqlParameter.ForceColumnEncryption
- uid: System.Data.SqlClient.SqlParameter.IsNullable
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: IsNullable
  nameWithType: SqlParameter.IsNullable
  fullName: System.Data.SqlClient.SqlParameter.IsNullable
- uid: System.Data.SqlClient.SqlParameter.LocaleId
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: LocaleId
  nameWithType: SqlParameter.LocaleId
  fullName: System.Data.SqlClient.SqlParameter.LocaleId
- uid: System.Data.SqlClient.SqlParameter.Offset
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: Offset
  nameWithType: SqlParameter.Offset
  fullName: System.Data.SqlClient.SqlParameter.Offset
- uid: System.Data.SqlClient.SqlParameter.ParameterName
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: ParameterName
  nameWithType: SqlParameter.ParameterName
  fullName: System.Data.SqlClient.SqlParameter.ParameterName
- uid: System.Data.SqlClient.SqlParameter.Precision
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: Precision
  nameWithType: SqlParameter.Precision
  fullName: System.Data.SqlClient.SqlParameter.Precision
- uid: System.Data.SqlClient.SqlParameter.ResetDbType
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: ResetDbType()
  nameWithType: SqlParameter.ResetDbType()
  fullName: System.Data.SqlClient.SqlParameter.ResetDbType()
- uid: System.Data.SqlClient.SqlParameter.ResetSqlDbType
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: ResetSqlDbType()
  nameWithType: SqlParameter.ResetSqlDbType()
  fullName: System.Data.SqlClient.SqlParameter.ResetSqlDbType()
- uid: System.Data.SqlClient.SqlParameter.Scale
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: Scale
  nameWithType: SqlParameter.Scale
  fullName: System.Data.SqlClient.SqlParameter.Scale
- uid: System.Data.SqlClient.SqlParameter.Size
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: Size
  nameWithType: SqlParameter.Size
  fullName: System.Data.SqlClient.SqlParameter.Size
- uid: System.Data.SqlClient.SqlParameter.SourceColumn
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: SourceColumn
  nameWithType: SqlParameter.SourceColumn
  fullName: System.Data.SqlClient.SqlParameter.SourceColumn
- uid: System.Data.SqlClient.SqlParameter.SourceColumnNullMapping
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: SourceColumnNullMapping
  nameWithType: SqlParameter.SourceColumnNullMapping
  fullName: System.Data.SqlClient.SqlParameter.SourceColumnNullMapping
- uid: System.Data.SqlClient.SqlParameter.SourceVersion
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: SourceVersion
  nameWithType: SqlParameter.SourceVersion
  fullName: System.Data.SqlClient.SqlParameter.SourceVersion
- uid: System.Data.SqlClient.SqlParameter.SqlDbType
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: SqlDbType
  nameWithType: SqlParameter.SqlDbType
  fullName: System.Data.SqlClient.SqlParameter.SqlDbType
- uid: System.Data.SqlClient.SqlParameter.SqlValue
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: SqlValue
  nameWithType: SqlParameter.SqlValue
  fullName: System.Data.SqlClient.SqlParameter.SqlValue
- uid: System.Data.SqlClient.SqlParameter.System#ICloneable#Clone
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: System.ICloneable.Clone()
  nameWithType: SqlParameter.System.ICloneable.Clone()
  fullName: System.Data.SqlClient.SqlParameter.System.ICloneable.Clone()
- uid: System.Data.SqlClient.SqlParameter.ToString
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: ToString()
  nameWithType: SqlParameter.ToString()
  fullName: System.Data.SqlClient.SqlParameter.ToString()
- uid: System.Data.SqlClient.SqlParameter.TypeName
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: TypeName
  nameWithType: SqlParameter.TypeName
  fullName: System.Data.SqlClient.SqlParameter.TypeName
- uid: System.Data.SqlClient.SqlParameter.UdtTypeName
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: UdtTypeName
  nameWithType: SqlParameter.UdtTypeName
  fullName: System.Data.SqlClient.SqlParameter.UdtTypeName
- uid: System.Data.SqlClient.SqlParameter.Value
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: Value
  nameWithType: SqlParameter.Value
  fullName: System.Data.SqlClient.SqlParameter.Value
- uid: System.Data.SqlClient.SqlParameter.XmlSchemaCollectionDatabase
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: XmlSchemaCollectionDatabase
  nameWithType: SqlParameter.XmlSchemaCollectionDatabase
  fullName: System.Data.SqlClient.SqlParameter.XmlSchemaCollectionDatabase
- uid: System.Data.SqlClient.SqlParameter.XmlSchemaCollectionName
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: XmlSchemaCollectionName
  nameWithType: SqlParameter.XmlSchemaCollectionName
  fullName: System.Data.SqlClient.SqlParameter.XmlSchemaCollectionName
- uid: System.Data.SqlClient.SqlParameter.XmlSchemaCollectionOwningSchema
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: XmlSchemaCollectionOwningSchema
  nameWithType: SqlParameter.XmlSchemaCollectionOwningSchema
  fullName: System.Data.SqlClient.SqlParameter.XmlSchemaCollectionOwningSchema
- uid: System.Data.SqlClient.SqlParameter.#ctor*
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: SqlParameter
  nameWithType: SqlParameter.SqlParameter
- uid: System.Data.SqlClient.SqlParameter.CompareInfo*
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: CompareInfo
  nameWithType: SqlParameter.CompareInfo
- uid: System.Data.SqlClient.SqlParameter.DbType*
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: DbType
  nameWithType: SqlParameter.DbType
- uid: System.Data.SqlClient.SqlParameter.Direction*
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: Direction
  nameWithType: SqlParameter.Direction
- uid: System.Data.SqlClient.SqlParameter.ForceColumnEncryption*
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: ForceColumnEncryption
  nameWithType: SqlParameter.ForceColumnEncryption
- uid: System.Data.SqlClient.SqlParameter.IsNullable*
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: IsNullable
  nameWithType: SqlParameter.IsNullable
- uid: System.Data.SqlClient.SqlParameter.LocaleId*
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: LocaleId
  nameWithType: SqlParameter.LocaleId
- uid: System.Data.SqlClient.SqlParameter.Offset*
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: Offset
  nameWithType: SqlParameter.Offset
- uid: System.Data.SqlClient.SqlParameter.ParameterName*
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: ParameterName
  nameWithType: SqlParameter.ParameterName
- uid: System.Data.SqlClient.SqlParameter.Precision*
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: Precision
  nameWithType: SqlParameter.Precision
- uid: System.Data.SqlClient.SqlParameter.ResetDbType*
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: ResetDbType
  nameWithType: SqlParameter.ResetDbType
- uid: System.Data.SqlClient.SqlParameter.ResetSqlDbType*
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: ResetSqlDbType
  nameWithType: SqlParameter.ResetSqlDbType
- uid: System.Data.SqlClient.SqlParameter.Scale*
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: Scale
  nameWithType: SqlParameter.Scale
- uid: System.Data.SqlClient.SqlParameter.Size*
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: Size
  nameWithType: SqlParameter.Size
- uid: System.Data.SqlClient.SqlParameter.SourceColumn*
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: SourceColumn
  nameWithType: SqlParameter.SourceColumn
- uid: System.Data.SqlClient.SqlParameter.SourceColumnNullMapping*
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: SourceColumnNullMapping
  nameWithType: SqlParameter.SourceColumnNullMapping
- uid: System.Data.SqlClient.SqlParameter.SourceVersion*
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: SourceVersion
  nameWithType: SqlParameter.SourceVersion
- uid: System.Data.SqlClient.SqlParameter.SqlDbType*
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: SqlDbType
  nameWithType: SqlParameter.SqlDbType
- uid: System.Data.SqlClient.SqlParameter.SqlValue*
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: SqlValue
  nameWithType: SqlParameter.SqlValue
- uid: System.Data.SqlClient.SqlParameter.System#ICloneable#Clone*
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: System.ICloneable.Clone
  nameWithType: SqlParameter.System.ICloneable.Clone
- uid: System.Data.SqlClient.SqlParameter.ToString*
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: ToString
  nameWithType: SqlParameter.ToString
- uid: System.Data.SqlClient.SqlParameter.TypeName*
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: TypeName
  nameWithType: SqlParameter.TypeName
- uid: System.Data.SqlClient.SqlParameter.UdtTypeName*
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: UdtTypeName
  nameWithType: SqlParameter.UdtTypeName
- uid: System.Data.SqlClient.SqlParameter.Value*
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: Value
  nameWithType: SqlParameter.Value
- uid: System.Data.SqlClient.SqlParameter.XmlSchemaCollectionDatabase*
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: XmlSchemaCollectionDatabase
  nameWithType: SqlParameter.XmlSchemaCollectionDatabase
- uid: System.Data.SqlClient.SqlParameter.XmlSchemaCollectionName*
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: XmlSchemaCollectionName
  nameWithType: SqlParameter.XmlSchemaCollectionName
- uid: System.Data.SqlClient.SqlParameter.XmlSchemaCollectionOwningSchema*
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: XmlSchemaCollectionOwningSchema
  nameWithType: SqlParameter.XmlSchemaCollectionOwningSchema
