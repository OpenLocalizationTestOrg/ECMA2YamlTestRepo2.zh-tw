### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.HMACSHA512
  id: HMACSHA512
  children:
  - System.Security.Cryptography.HMACSHA512.#ctor
  - System.Security.Cryptography.HMACSHA512.#ctor(System.Byte[])
  - System.Security.Cryptography.HMACSHA512.ProduceLegacyHmacValues
  langs:
  - csharp
  name: HMACSHA512
  nameWithType: HMACSHA512
  fullName: System.Security.Cryptography.HMACSHA512
  type: Class
  summary: "計算雜湊式訊息驗證碼 (HMAC) 使用<xref href=&quot;System.Security.Cryptography.SHA512&quot;></xref>雜湊函式。"
  remarks: "HMACSHA512 是一種金鑰雜湊演算法，與 sha-512 雜湊函式建構並用做為雜湊式訊息驗證碼 (HMAC)。 HMAC 程序與訊息資料混合秘密金鑰，以及結果雜湊。 雜湊值是一次，混與秘密金鑰，而且第二次進行雜湊處理。 輸出雜湊是 512 位元長度。       HMAC 可用來判斷透過安全通道傳送的訊息是否遭竄改的寄件者和收件者共用秘密金鑰。 寄件者會計算原始資料的雜湊值，並將原始資料和雜湊值傳送為單一訊息。 收件者所接收訊息的雜湊值將會重新計算，並檢查計算的 HMAC 符合傳輸的 HMAC。       如果原始和計算的雜湊值相符，驗證訊息。 如果不符，已變更資料或雜湊值。 Hmac 提供安全性，以防止遭到竄改，因為知識祕密金鑰，才能變更訊息及重新產生正確的雜湊值。       HMACSHA512 接受任何大小的索引鍵，並產生 512 位元的雜湊序列的長度。"
  example:
  - "The following example shows how to sign a file by using the HMACSHA512 object and then how to verify the file.  \n  \n [!code-cpp[HMACSHA512#1](~/add/codesnippet/cpp/t-system.security.crypto_83_1.cpp)]\n [!code-vb[HMACSHA512#1](~/add/codesnippet/visualbasic/t-system.security.crypto_83_1.vb)]\n [!code-cs[HMACSHA512#1](~/add/codesnippet/csharp/t-system.security.crypto_83_1.cs)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class HMACSHA512 : System.Security.Cryptography.HMAC
  inheritance:
  - System.Object
  - System.Security.Cryptography.HashAlgorithm
  - System.Security.Cryptography.KeyedHashAlgorithm
  - System.Security.Cryptography.HMAC
  implements: []
  inheritedMembers:
  - System.Security.Cryptography.HashAlgorithm.CanReuseTransform
  - System.Security.Cryptography.HashAlgorithm.CanTransformMultipleBlocks
  - System.Security.Cryptography.HashAlgorithm.Clear
  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])
  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)
  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)
  - System.Security.Cryptography.HashAlgorithm.Dispose
  - System.Security.Cryptography.HashAlgorithm.Hash
  - System.Security.Cryptography.HashAlgorithm.HashSize
  - System.Security.Cryptography.HashAlgorithm.HashSizeValue
  - System.Security.Cryptography.HashAlgorithm.HashValue
  - System.Security.Cryptography.HashAlgorithm.InputBlockSize
  - System.Security.Cryptography.HashAlgorithm.OutputBlockSize
  - System.Security.Cryptography.HashAlgorithm.State
  - System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)
  - System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)
  - System.Security.Cryptography.HMAC.BlockSizeValue
  - System.Security.Cryptography.HMAC.Create
  - System.Security.Cryptography.HMAC.Create(System.String)
  - System.Security.Cryptography.HMAC.Dispose(System.Boolean)
  - System.Security.Cryptography.HMAC.HashCore(System.Byte[],System.Int32,System.Int32)
  - System.Security.Cryptography.HMAC.HashFinal
  - System.Security.Cryptography.HMAC.HashName
  - System.Security.Cryptography.HMAC.Initialize
  - System.Security.Cryptography.HMAC.Key
  - System.Security.Cryptography.KeyedHashAlgorithm.KeyValue
  platform:
  - net462
- uid: System.Security.Cryptography.HMACSHA512.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.HMACSHA512
  langs:
  - csharp
  name: HMACSHA512()
  nameWithType: HMACSHA512.HMACSHA512()
  fullName: System.Security.Cryptography.HMACSHA512.HMACSHA512()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "初始化的新執行個體<xref href=&quot;System.Security.Cryptography.HMACSHA512&quot;></xref>具有隨機產生的索引鍵的類別。"
  remarks: "使用這個建構函式，會使用 64 位元隨機產生的金鑰。"
  syntax:
    content: public HMACSHA512 ();
    parameters: []
  overload: System.Security.Cryptography.HMACSHA512.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.HMACSHA512.#ctor(System.Byte[])
  id: '#ctor(System.Byte[])'
  parent: System.Security.Cryptography.HMACSHA512
  langs:
  - csharp
  name: HMACSHA512(Byte[])
  nameWithType: HMACSHA512.HMACSHA512(Byte[])
  fullName: System.Security.Cryptography.HMACSHA512.HMACSHA512(Byte[])
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "初始化的新執行個體<xref href=&quot;System.Security.Cryptography.HMACSHA512&quot;></xref>類別具有指定索引鍵的資料。"
  remarks: ''
  example:
  - For an example of how to use this constructor, see the <xref:System.Security.Cryptography.HMACSHA512> class.
  syntax:
    content: public HMACSHA512 (byte[] key);
    parameters:
    - id: key
      type: System.Byte[]
      description: "祕密金鑰<xref href=&quot;System.Security.Cryptography.HMACSHA512&quot;></xref>加密。 索引鍵可以是任何長度。 不過，建議的大小為 128 個位元組。 如果是 128 位元組長的金鑰，它使用雜湊 （sha-512） 來衍生 128 位元組的索引鍵。 如果是少於 128 個位元組長，它會填補到 128 個位元組。"
  overload: System.Security.Cryptography.HMACSHA512.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>key</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.HMACSHA512.ProduceLegacyHmacValues
  id: ProduceLegacyHmacValues
  parent: System.Security.Cryptography.HMACSHA512
  langs:
  - csharp
  name: ProduceLegacyHmacValues
  nameWithType: HMACSHA512.ProduceLegacyHmacValues
  fullName: System.Security.Cryptography.HMACSHA512.ProduceLegacyHmacValues
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "提供因應措施[!INCLUDE[dnprdnext](~/add/includes/dnprdnext-md.md)]實作<xref href=&quot;System.Security.Cryptography.HMACSHA512&quot;></xref>演算法，這是不一致，有[!INCLUDE[net_v20sp1_long](~/add/includes/net-v20sp1-long-md.md)]實作。"
  remarks: "ProduceLegacyHmacValues 布林值屬性的目的是要啟用[!INCLUDE[net_v20sp1_long](~/add/includes/net-v20sp1-long-md.md)]應用程式與互動[!INCLUDE[dnprdnlong](~/add/includes/dnprdnlong-md.md)]應用程式。 當您將此屬性設定為`true`、<xref:System.Security.Cryptography.HMACSHA512>物件會產生所產生的值相符的值[!INCLUDE[dnprdnlong](~/add/includes/dnprdnlong-md.md)]。</xref:System.Security.Cryptography.HMACSHA512> 一次建立 HMAC 物件之後，您應該設定這個屬性。 您將需要重設您的金鑰之後，如下列範例所示。      ```   public static void Test()       {       HMACSHA512 hmac = new HMACSHA512();       hmac.ProduceLegacyHmacValues = true;       hmac.Key = // ...Get the HMAC key.       // ...       // Use the HMAC algorithm.       // ...       }   ```"
  syntax:
    content: public bool ProduceLegacyHmacValues { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要啟用[!INCLUDE[net_v20sp1_long](~/add/includes/net-v20sp1-long-md.md)]應用程式與互動[!INCLUDE[dnprdnlong](~/add/includes/dnprdnlong-md.md)]應用程式，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Security.Cryptography.HMACSHA512.ProduceLegacyHmacValues*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.Cryptography.HMAC
  isExternal: false
  name: System.Security.Cryptography.HMAC
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Cryptography.HMACSHA512.#ctor
  parent: System.Security.Cryptography.HMACSHA512
  isExternal: false
  name: HMACSHA512()
  nameWithType: HMACSHA512.HMACSHA512()
  fullName: System.Security.Cryptography.HMACSHA512.HMACSHA512()
- uid: System.Security.Cryptography.HMACSHA512.#ctor(System.Byte[])
  parent: System.Security.Cryptography.HMACSHA512
  isExternal: false
  name: HMACSHA512(Byte[])
  nameWithType: HMACSHA512.HMACSHA512(Byte[])
  fullName: System.Security.Cryptography.HMACSHA512.HMACSHA512(Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.HMACSHA512.ProduceLegacyHmacValues
  parent: System.Security.Cryptography.HMACSHA512
  isExternal: false
  name: ProduceLegacyHmacValues
  nameWithType: HMACSHA512.ProduceLegacyHmacValues
  fullName: System.Security.Cryptography.HMACSHA512.ProduceLegacyHmacValues
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.HMACSHA512.#ctor*
  parent: System.Security.Cryptography.HMACSHA512
  isExternal: false
  name: HMACSHA512
  nameWithType: HMACSHA512.HMACSHA512
- uid: System.Security.Cryptography.HMACSHA512.ProduceLegacyHmacValues*
  parent: System.Security.Cryptography.HMACSHA512
  isExternal: false
  name: ProduceLegacyHmacValues
  nameWithType: HMACSHA512.ProduceLegacyHmacValues
