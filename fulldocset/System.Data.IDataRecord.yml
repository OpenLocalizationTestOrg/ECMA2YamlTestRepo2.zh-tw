### YamlMime:ManagedReference
items:
- uid: System.Data.IDataRecord
  id: IDataRecord
  children:
  - System.Data.IDataRecord.FieldCount
  - System.Data.IDataRecord.GetBoolean(System.Int32)
  - System.Data.IDataRecord.GetByte(System.Int32)
  - System.Data.IDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  - System.Data.IDataRecord.GetChar(System.Int32)
  - System.Data.IDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  - System.Data.IDataRecord.GetData(System.Int32)
  - System.Data.IDataRecord.GetDataTypeName(System.Int32)
  - System.Data.IDataRecord.GetDateTime(System.Int32)
  - System.Data.IDataRecord.GetDecimal(System.Int32)
  - System.Data.IDataRecord.GetDouble(System.Int32)
  - System.Data.IDataRecord.GetFieldType(System.Int32)
  - System.Data.IDataRecord.GetFloat(System.Int32)
  - System.Data.IDataRecord.GetGuid(System.Int32)
  - System.Data.IDataRecord.GetInt16(System.Int32)
  - System.Data.IDataRecord.GetInt32(System.Int32)
  - System.Data.IDataRecord.GetInt64(System.Int32)
  - System.Data.IDataRecord.GetName(System.Int32)
  - System.Data.IDataRecord.GetOrdinal(System.String)
  - System.Data.IDataRecord.GetString(System.Int32)
  - System.Data.IDataRecord.GetValue(System.Int32)
  - System.Data.IDataRecord.GetValues(System.Object[])
  - System.Data.IDataRecord.IsDBNull(System.Int32)
  - System.Data.IDataRecord.Item(System.Int32)
  - System.Data.IDataRecord.Item(System.String)
  langs:
  - csharp
  name: IDataRecord
  nameWithType: IDataRecord
  fullName: System.Data.IDataRecord
  type: Interface
  summary: "提供存取權的每個資料列中的資料行值<xref uid=&quot;langword_csharp_DataReader&quot; name=&quot;DataReader&quot; href=&quot;&quot;> </xref>，而且存取關聯式資料庫的.NET Framework 資料提供者所實作。"
  remarks: "<xref:System.Data.IDataReader>IDataRecord 介面可讓繼承的類別來實作和`DataReader`類別</xref:System.Data.IDataReader> 這提供讀取一或多個順向資料流之結果集的方式。 如需有關`DataReader`類別，請參閱[使用擷取資料 DataReader](~/add/includes/ajax-current-ext-md.md)。       應用程式不會直接建立 IDataRecord 介面的執行個體，但是會建立繼承 IDataRecord 類別的執行個體。 一般而言，您可以取得`DataReader`透過`ExecuteReader`方法`Command`物件。       繼承 IDataRecord 的類別必須實作所有繼承的成員，並且通常會定義要加入提供者特有的功能的其他成員。       提供者實作`DataReader`才能公開 common language runtime (CLR) 型別中的資料。 在 CLR 中未包含某些類型的定義類型強制型轉。 這些值可能會存取為 CLR 型別具有符合替代類型。 例如下, 表列出從 OLE DB 資料類型的建議的對應至 CLR 型別，與括號括住的替代類型。      |OLE DB 類型 |CLR 型別 |  |-----------------|--------------|  |DBTYPE_BOOL |Int16 |  |DBTYPE_BSTR | 字串 |  |DBTYPE_BYTES | byte [] |  |DBTYPE_CY |十進位 |  |DBTYPE_DATE |DateTime |  |DBTYPE_DBDATE |DateTime |  |DBTYPE_DBTIME |DateTime |  |DBTYPE_DBTIMESTAMP |DateTime |  |DBTYPE_DECIMAL |十進位 |  |DBTYPE_EMPTY | null |  |DBTYPE_ERROR |ExternalException |  |DBTYPE_FILETIME |DateTime |  |DBTYPE_GUID |Guid |  |DBTYPE_HCHAPTER | 不支援 |  |DBTYPE_I1 |SByte |  |DBTYPE_I2 |Int16 |  |DBTYPE_I4 |Int32 |  |DBTYPE_I8 |Int64 |  |DBTYPE_IDISPATCH | 物件 |  |DBTYPE_IUNKNOWN | 物件 |  |DBTYPE_NULL |DBNull.Value|  |DBTYPE_NUMERIC |十進位 |  |DBTYPE_PROPVARIANT | 物件 |  |DBTYPE_R4 |單一 |  |DBTYPE_R8 |Double |  |DBTYPE_STR | 字串 |  |DBTYPE_UDT | 不支援 |  |DBTYPE_UI1 | 位元組 (Int16) |  |DBTYPE_UI2 |UInt16 (Int32) |  |DBTYPE_UI4 |UInt32 (Int64) |  |DBTYPE_UI8 |UInt64 （十進位） |  |DBTYPE_VARIANT | 物件 |  |DBTYPE_VARNUMERIC | 不支援 |  |DBTYPE_WSTR | 字串 |"
  example:
  - "The following example creates instances of the derived classes, <xref:System.Data.SqlClient.SqlConnection>, <xref:System.Data.SqlClient.SqlCommand>, and <xref:System.Data.SqlClient.SqlDataReader>. The example reads through the data, writing it out to the console. Finally, the example closes the <xref:System.Data.SqlClient.SqlDataReader>, and then the <xref:System.Data.SqlClient.SqlConnection>.  \n  \n [!code-cs[Classic WebData SqlDataReader.Read Example#1](~/add/codesnippet/csharp/t-system.data.idatarecord_1.cs)]\n [!code-vb[Classic WebData SqlDataReader.Read Example#1](~/add/codesnippet/visualbasic/t-system.data.idatarecord_1.vb)]"
  syntax:
    content: public interface IDataRecord
  implements: []
  platform:
  - net462
- uid: System.Data.IDataRecord.FieldCount
  id: FieldCount
  parent: System.Data.IDataRecord
  langs:
  - csharp
  name: FieldCount
  nameWithType: IDataRecord.FieldCount
  fullName: System.Data.IDataRecord.FieldCount
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "取得目前資料列中的資料行數目。"
  remarks: "不會傳回資料列在查詢執行之後 (例如，使用<xref:System.Data.IDbCommand.ExecuteNonQuery%2A>方法)，FieldCount 傳回-1。</xref:System.Data.IDbCommand.ExecuteNonQuery%2A>"
  syntax:
    content: public int FieldCount { get; }
    return:
      type: System.Int32
      description: "當未置於有效資料錄集，0;否則，目前的記錄中的資料行數目。 預設值為-1。"
  overload: System.Data.IDataRecord.FieldCount*
  exceptions: []
  platform:
  - net462
- uid: System.Data.IDataRecord.GetBoolean(System.Int32)
  id: GetBoolean(System.Int32)
  parent: System.Data.IDataRecord
  langs:
  - csharp
  name: GetBoolean(Int32)
  nameWithType: IDataRecord.GetBoolean(Int32)
  fullName: System.Data.IDataRecord.GetBoolean(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "取得指定資料行的值做為布林值。"
  remarks: "不會進行轉換。 因此，擷取的資料必須已經是布林值。否則會產生例外狀況。"
  syntax:
    content: public bool GetBoolean (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "以零為起始的資料行序數。"
    return:
      type: System.Boolean
      description: "資料行的值。"
  overload: System.Data.IDataRecord.GetBoolean*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "傳遞的索引超出範圍 0- <xref:System.Data.IDataRecord.FieldCount*>.</xref:System.Data.IDataRecord.FieldCount*>"
  platform:
  - net462
- uid: System.Data.IDataRecord.GetByte(System.Int32)
  id: GetByte(System.Int32)
  parent: System.Data.IDataRecord
  langs:
  - csharp
  name: GetByte(Int32)
  nameWithType: IDataRecord.GetByte(Int32)
  fullName: System.Data.IDataRecord.GetByte(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "取得指定資料行的 8 位元不帶正負號的整數值。"
  syntax:
    content: public byte GetByte (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "以零為起始的資料行序數。"
    return:
      type: System.Byte
      description: "8 位元不帶正負號的整數值，指定資料行。"
  overload: System.Data.IDataRecord.GetByte*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "傳遞的索引超出範圍 0- <xref:System.Data.IDataRecord.FieldCount*>.</xref:System.Data.IDataRecord.FieldCount*>"
  platform:
  - net462
- uid: System.Data.IDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  id: GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  parent: System.Data.IDataRecord
  langs:
  - csharp
  name: GetBytes(Int32,Int64,Byte[],Int32,Int32)
  nameWithType: IDataRecord.GetBytes(Int32,Int64,Byte[],Int32,Int32)
  fullName: System.Data.IDataRecord.GetBytes(Int32,Int64,Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "位元組資料流從指定的資料行位移讀取到緩衝區陣列，指定的緩衝區位移處開始。"
  remarks: "GetBytes 欄位中傳回可用位元組的數。 這通常是欄位的確切的長度。 不過，傳回的數字可能小於欄位的實際長度如果`GetBytes`已經使用來取得位元組的欄位。       如果您要傳入的緩衝區`null`，GetBytes 傳回資料列的長度，以位元組為單位。       不會進行轉換;因此擷取的資料必須已經是位元組陣列。"
  syntax:
    content: public long GetBytes (int i, long fieldOffset, byte[] buffer, int bufferoffset, int length);
    parameters:
    - id: i
      type: System.Int32
      description: "以零為起始的資料行序數。"
    - id: fieldOffset
      type: System.Int64
      description: "要從其中開始讀取的作業的欄位內的索引。"
    - id: buffer
      type: System.Byte[]
      description: "要讀入位元組資料流緩衝區。"
    - id: bufferoffset
      type: System.Int32
      description: "索引`buffer`開始讀取的作業。"
    - id: length
      type: System.Int32
      description: "要讀取的位元組數目。"
    return:
      type: System.Int64
      description: "實際讀取的位元組數目。"
  overload: System.Data.IDataRecord.GetBytes*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "傳遞的索引超出範圍 0- <xref:System.Data.IDataRecord.FieldCount*>.</xref:System.Data.IDataRecord.FieldCount*>"
  platform:
  - net462
- uid: System.Data.IDataRecord.GetChar(System.Int32)
  id: GetChar(System.Int32)
  parent: System.Data.IDataRecord
  langs:
  - csharp
  name: GetChar(Int32)
  nameWithType: IDataRecord.GetChar(Int32)
  fullName: System.Data.IDataRecord.GetChar(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "取得指定之資料行的字元值。"
  syntax:
    content: public char GetChar (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "以零為起始的資料行序數。"
    return:
      type: System.Char
      description: "指定的資料行的字元值。"
  overload: System.Data.IDataRecord.GetChar*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "傳遞的索引超出範圍 0- <xref:System.Data.IDataRecord.FieldCount*>.</xref:System.Data.IDataRecord.FieldCount*>"
  platform:
  - net462
- uid: System.Data.IDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  id: GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  parent: System.Data.IDataRecord
  langs:
  - csharp
  name: GetChars(Int32,Int64,Char[],Int32,Int32)
  nameWithType: IDataRecord.GetChars(Int32,Int64,Char[],Int32,Int32)
  fullName: System.Data.IDataRecord.GetChars(Int32,Int64,Char[],Int32,Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "字元資料流從指定的資料行位移讀取到緩衝區陣列，指定的緩衝區位移處開始。"
  remarks: "GetChars 欄位中傳回可用字元的數。 這通常是欄位的確切的長度。 不過，傳回的數字可能小於欄位的確切長度如果`GetChars`已經使用從欄位取得字元。       如果您要傳入的緩衝區`null`，`GetChars`以字元為單位傳回欄位的長度。       不會進行轉換;因此擷取的資料必須已經是字元陣列。"
  syntax:
    content: public long GetChars (int i, long fieldoffset, char[] buffer, int bufferoffset, int length);
    parameters:
    - id: i
      type: System.Int32
      description: "以零為起始的資料行序數。"
    - id: fieldoffset
      type: System.Int64
      description: "內要開始讀取的作業的資料列的索引。"
    - id: buffer
      type: System.Char[]
      description: "要讀入位元組資料流緩衝區。"
    - id: bufferoffset
      type: System.Int32
      description: "索引`buffer`開始讀取的作業。"
    - id: length
      type: System.Int32
      description: "要讀取的位元組數目。"
    return:
      type: System.Int64
      description: "實際讀取的字元數目。"
  overload: System.Data.IDataRecord.GetChars*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "傳遞的索引超出範圍 0- <xref:System.Data.IDataRecord.FieldCount*>.</xref:System.Data.IDataRecord.FieldCount*>"
  platform:
  - net462
- uid: System.Data.IDataRecord.GetData(System.Int32)
  id: GetData(System.Int32)
  parent: System.Data.IDataRecord
  langs:
  - csharp
  name: GetData(Int32)
  nameWithType: IDataRecord.GetData(Int32)
  fullName: System.Data.IDataRecord.GetData(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "傳回<xref href=&quot;System.Data.IDataReader&quot;></xref>所指定的資料行序數。"
  syntax:
    content: public System.Data.IDataReader GetData (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "要尋找的欄位索引。"
    return:
      type: System.Data.IDataReader
      description: "<xref href=&quot;System.Data.IDataReader&quot;> </xref>所指定的資料行序數。"
  overload: System.Data.IDataRecord.GetData*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "傳遞的索引超出範圍 0- <xref:System.Data.IDataRecord.FieldCount*>.</xref:System.Data.IDataRecord.FieldCount*>"
  platform:
  - net462
- uid: System.Data.IDataRecord.GetDataTypeName(System.Int32)
  id: GetDataTypeName(System.Int32)
  parent: System.Data.IDataRecord
  langs:
  - csharp
  name: GetDataTypeName(Int32)
  nameWithType: IDataRecord.GetDataTypeName(Int32)
  fullName: System.Data.IDataRecord.GetDataTypeName(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "取得指定之欄位的資料類型資訊。"
  remarks: "資料型別資訊可能不同於所傳回的型別資訊`GetFieldType`，特別是其中的基礎資料類型不會將其中一個支援的語言執行階段型別。 (例如，`DataTypeName`可能是&quot;integer&quot;，而`Type.Name`可能是&quot;Int32&quot;。)"
  syntax:
    content: public string GetDataTypeName (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "要尋找的欄位索引。"
    return:
      type: System.String
      description: "資料型別指定之欄位的資訊。"
  overload: System.Data.IDataRecord.GetDataTypeName*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "傳遞的索引超出範圍 0- <xref:System.Data.IDataRecord.FieldCount*>.</xref:System.Data.IDataRecord.FieldCount*>"
  platform:
  - net462
- uid: System.Data.IDataRecord.GetDateTime(System.Int32)
  id: GetDateTime(System.Int32)
  parent: System.Data.IDataRecord
  langs:
  - csharp
  name: GetDateTime(Int32)
  nameWithType: IDataRecord.GetDateTime(Int32)
  fullName: System.Data.IDataRecord.GetDateTime(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "取得指定之欄位的日期和時間資料值。"
  syntax:
    content: public DateTime GetDateTime (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "要尋找的欄位索引。"
    return:
      type: System.DateTime
      description: "指定之欄位的日期和時間資料值。"
  overload: System.Data.IDataRecord.GetDateTime*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "傳遞的索引超出範圍 0- <xref:System.Data.IDataRecord.FieldCount*>.</xref:System.Data.IDataRecord.FieldCount*>"
  platform:
  - net462
- uid: System.Data.IDataRecord.GetDecimal(System.Int32)
  id: GetDecimal(System.Int32)
  parent: System.Data.IDataRecord
  langs:
  - csharp
  name: GetDecimal(Int32)
  nameWithType: IDataRecord.GetDecimal(Int32)
  fullName: System.Data.IDataRecord.GetDecimal(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "取得指定之欄位的固定位置數值。"
  syntax:
    content: public decimal GetDecimal (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "要尋找的欄位索引。"
    return:
      type: System.Decimal
      description: "指定欄位的固定位置數值的值。"
  overload: System.Data.IDataRecord.GetDecimal*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "傳遞的索引超出範圍 0- <xref:System.Data.IDataRecord.FieldCount*>.</xref:System.Data.IDataRecord.FieldCount*>"
  platform:
  - net462
- uid: System.Data.IDataRecord.GetDouble(System.Int32)
  id: GetDouble(System.Int32)
  parent: System.Data.IDataRecord
  langs:
  - csharp
  name: GetDouble(Int32)
  nameWithType: IDataRecord.GetDouble(Int32)
  fullName: System.Data.IDataRecord.GetDouble(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "取得指定之欄位的雙精確度浮點數。"
  syntax:
    content: public double GetDouble (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "要尋找的欄位索引。"
    return:
      type: System.Double
      description: "指定之欄位的雙精確度浮點數。"
  overload: System.Data.IDataRecord.GetDouble*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "傳遞的索引超出範圍 0- <xref:System.Data.IDataRecord.FieldCount*>.</xref:System.Data.IDataRecord.FieldCount*>"
  platform:
  - net462
- uid: System.Data.IDataRecord.GetFieldType(System.Int32)
  id: GetFieldType(System.Int32)
  parent: System.Data.IDataRecord
  langs:
  - csharp
  name: GetFieldType(Int32)
  nameWithType: IDataRecord.GetFieldType(Int32)
  fullName: System.Data.IDataRecord.GetFieldType(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "取得<xref:System.Type>對應的型別<xref:System.Object>，會傳回從<xref:System.Data.IDataRecord.GetValue*>.</xref:System.Data.IDataRecord.GetValue*></xref:System.Object>資訊</xref:System.Type>"
  remarks: "這項資訊可以用來指出強型別存取子，呼叫以提升效能。 (例如，使用`GetInt32`大致上是比使用更快的十倍`GetValue`。)"
  syntax:
    content: public Type GetFieldType (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "要尋找的欄位索引。"
    return:
      type: System.Type
      description: "<xref:System.Type><xref:System.Object>會傳回從<xref:System.Data.IDataRecord.GetValue*>.</xref:System.Data.IDataRecord.GetValue*></xref:System.Object>的型別對應資訊</xref:System.Type>"
  overload: System.Data.IDataRecord.GetFieldType*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "傳遞的索引超出範圍 0- <xref:System.Data.IDataRecord.FieldCount*>.</xref:System.Data.IDataRecord.FieldCount*>"
  platform:
  - net462
- uid: System.Data.IDataRecord.GetFloat(System.Int32)
  id: GetFloat(System.Int32)
  parent: System.Data.IDataRecord
  langs:
  - csharp
  name: GetFloat(Int32)
  nameWithType: IDataRecord.GetFloat(Int32)
  fullName: System.Data.IDataRecord.GetFloat(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "取得指定之欄位的單精確度浮點數。"
  syntax:
    content: public float GetFloat (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "要尋找的欄位索引。"
    return:
      type: System.Single
      description: "指定之欄位的單精確度浮點數。"
  overload: System.Data.IDataRecord.GetFloat*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "傳遞的索引超出範圍 0- <xref:System.Data.IDataRecord.FieldCount*>.</xref:System.Data.IDataRecord.FieldCount*>"
  platform:
  - net462
- uid: System.Data.IDataRecord.GetGuid(System.Int32)
  id: GetGuid(System.Int32)
  parent: System.Data.IDataRecord
  langs:
  - csharp
  name: GetGuid(Int32)
  nameWithType: IDataRecord.GetGuid(Int32)
  fullName: System.Data.IDataRecord.GetGuid(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "傳回指定之欄位的 GUID 值。"
  syntax:
    content: public Guid GetGuid (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "要尋找的欄位索引。"
    return:
      type: System.Guid
      description: "指定之欄位的 GUID 值。"
  overload: System.Data.IDataRecord.GetGuid*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "傳遞的索引超出範圍 0- <xref:System.Data.IDataRecord.FieldCount*>.</xref:System.Data.IDataRecord.FieldCount*>"
  platform:
  - net462
- uid: System.Data.IDataRecord.GetInt16(System.Int32)
  id: GetInt16(System.Int32)
  parent: System.Data.IDataRecord
  langs:
  - csharp
  name: GetInt16(Int32)
  nameWithType: IDataRecord.GetInt16(Int32)
  fullName: System.Data.IDataRecord.GetInt16(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "取得指定之欄位的 16 位元帶正負號的整數值。"
  syntax:
    content: public short GetInt16 (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "要尋找的欄位索引。"
    return:
      type: System.Int16
      description: "指定之欄位的 16 位元帶正負號的整數值。"
  overload: System.Data.IDataRecord.GetInt16*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "傳遞的索引超出範圍 0- <xref:System.Data.IDataRecord.FieldCount*>.</xref:System.Data.IDataRecord.FieldCount*>"
  platform:
  - net462
- uid: System.Data.IDataRecord.GetInt32(System.Int32)
  id: GetInt32(System.Int32)
  parent: System.Data.IDataRecord
  langs:
  - csharp
  name: GetInt32(Int32)
  nameWithType: IDataRecord.GetInt32(Int32)
  fullName: System.Data.IDataRecord.GetInt32(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "取得指定之欄位的 32 位元帶正負號的整數值。"
  syntax:
    content: public int GetInt32 (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "要尋找的欄位索引。"
    return:
      type: System.Int32
      description: "指定之欄位的 32 位元帶正負號的整數值。"
  overload: System.Data.IDataRecord.GetInt32*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "傳遞的索引超出範圍 0- <xref:System.Data.IDataRecord.FieldCount*>.</xref:System.Data.IDataRecord.FieldCount*>"
  platform:
  - net462
- uid: System.Data.IDataRecord.GetInt64(System.Int32)
  id: GetInt64(System.Int32)
  parent: System.Data.IDataRecord
  langs:
  - csharp
  name: GetInt64(Int32)
  nameWithType: IDataRecord.GetInt64(Int32)
  fullName: System.Data.IDataRecord.GetInt64(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "取得指定之欄位的 64 位元帶正負號的整數值。"
  syntax:
    content: public long GetInt64 (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "要尋找的欄位索引。"
    return:
      type: System.Int64
      description: "指定之欄位的 64 位元帶正負號的整數值。"
  overload: System.Data.IDataRecord.GetInt64*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "傳遞的索引超出範圍 0- <xref:System.Data.IDataRecord.FieldCount*>.</xref:System.Data.IDataRecord.FieldCount*>"
  platform:
  - net462
- uid: System.Data.IDataRecord.GetName(System.Int32)
  id: GetName(System.Int32)
  parent: System.Data.IDataRecord
  langs:
  - csharp
  name: GetName(Int32)
  nameWithType: IDataRecord.GetName(Int32)
  fullName: System.Data.IDataRecord.GetName(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "取得要尋找之欄位的名稱。"
  syntax:
    content: public string GetName (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "要尋找的欄位索引。"
    return:
      type: System.String
      description: "名稱的欄位或空字串 (&quot;&quot;)，如果沒有傳回值。"
  overload: System.Data.IDataRecord.GetName*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "傳遞的索引超出範圍 0- <xref:System.Data.IDataRecord.FieldCount*>.</xref:System.Data.IDataRecord.FieldCount*>"
  platform:
  - net462
- uid: System.Data.IDataRecord.GetOrdinal(System.String)
  id: GetOrdinal(System.String)
  parent: System.Data.IDataRecord
  langs:
  - csharp
  name: GetOrdinal(String)
  nameWithType: IDataRecord.GetOrdinal(String)
  fullName: System.Data.IDataRecord.GetOrdinal(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "傳回具名欄位的索引。"
  remarks: "`GetOrdinal`第一次執行區分大小寫的查閱。 如果失敗，則會在第二個不區分大小寫的搜尋。 `GetOrdinal`不會區分假名寬度。 如果找不到具名欄位的索引，`IndexOutOfRangeException`就會擲回。       因為根據序數進行查閱比具名查閱更有效率，很效率不佳，呼叫`GetOrdinal`在迴圈內。 呼叫以節省時間`GetOrdinal`一次，並將結果指派給整數變數在迴圈中使用。"
  example:
  - "The following example demonstrates how to use the inherited <xref:System.Data.Odbc.OdbcDataReader.GetOrdinal%2A> method.  \n  \n [!code-vb[Classic WebData OdbcDataReader.GetOrdinal#1](~/add/codesnippet/visualbasic/m-system.data.idatarecor_1.vb)]\n [!code-cs[Classic WebData OdbcDataReader.GetOrdinal#1](~/add/codesnippet/csharp/m-system.data.idatarecor_1.cs)]"
  syntax:
    content: public int GetOrdinal (string name);
    parameters:
    - id: name
      type: System.String
      description: "要尋找的欄位名稱。"
    return:
      type: System.Int32
      description: "具名欄位的索引。"
  overload: System.Data.IDataRecord.GetOrdinal*
  exceptions: []
  platform:
  - net462
- uid: System.Data.IDataRecord.GetString(System.Int32)
  id: GetString(System.Int32)
  parent: System.Data.IDataRecord
  langs:
  - csharp
  name: GetString(Int32)
  nameWithType: IDataRecord.GetString(Int32)
  fullName: System.Data.IDataRecord.GetString(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "取得指定之欄位的字串值。"
  syntax:
    content: public string GetString (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "要尋找的欄位索引。"
    return:
      type: System.String
      description: "指定之欄位的字串值。"
  overload: System.Data.IDataRecord.GetString*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "傳遞的索引超出範圍 0- <xref:System.Data.IDataRecord.FieldCount*>.</xref:System.Data.IDataRecord.FieldCount*>"
  platform:
  - net462
- uid: System.Data.IDataRecord.GetValue(System.Int32)
  id: GetValue(System.Int32)
  parent: System.Data.IDataRecord
  langs:
  - csharp
  name: GetValue(Int32)
  nameWithType: IDataRecord.GetValue(Int32)
  fullName: System.Data.IDataRecord.GetValue(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "傳回指定之欄位的值。"
  syntax:
    content: public object GetValue (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "要尋找的欄位索引。"
    return:
      type: System.Object
      description: "<xref:System.Object>其中會包含欄位值傳回時。</xref:System.Object>"
  overload: System.Data.IDataRecord.GetValue*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "傳遞的索引超出範圍 0- <xref:System.Data.IDataRecord.FieldCount*>.</xref:System.Data.IDataRecord.FieldCount*>"
  platform:
  - net462
- uid: System.Data.IDataRecord.GetValues(System.Object[])
  id: GetValues(System.Object[])
  parent: System.Data.IDataRecord
  langs:
  - csharp
  name: GetValues(Object[])
  nameWithType: IDataRecord.GetValues(Object[])
  fullName: System.Data.IDataRecord.GetValues(Object[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "填入物件的陣列與目前記錄的資料行值。"
  remarks: "對於大部分的應用程式，GetValues 方法會提供有效率的方法，用於擷取所有資料行，而不是個別擷取每個資料行。       您可以傳遞<xref:System.Object>陣列，其中包含產生的資料列中所包含的資料行數目少於。</xref:System.Object> 資料量<xref:System.Object>陣列，含有複製到陣列。</xref:System.Object> 您也可以傳遞<xref:System.Object>陣列的長度大於包含在產生的資料列中的資料行數目。</xref:System.Object>"
  syntax:
    content: public int GetValues (object[] values);
    parameters:
    - id: values
      type: System.Object[]
      description: "陣列<xref:System.Object>複製到的屬性欄位。</xref:System.Object>"
    return:
      type: System.Int32
      description: "執行個體數目<xref:System.Object>陣列中。</xref:System.Object>"
  overload: System.Data.IDataRecord.GetValues*
  exceptions: []
  platform:
  - net462
- uid: System.Data.IDataRecord.IsDBNull(System.Int32)
  id: IsDBNull(System.Int32)
  parent: System.Data.IDataRecord
  langs:
  - csharp
  name: IsDBNull(Int32)
  nameWithType: IDataRecord.IsDBNull(Int32)
  fullName: System.Data.IDataRecord.IsDBNull(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "傳回指定的欄位是否已設定為 null。"
  remarks: "呼叫這個方法來呼叫具類型的 get 方法之前是否有 null 資料行值 (例如， <xref:System.Data.SqlClient.SqlDataReader.GetByte%2A>， <xref:System.Data.SqlClient.SqlDataReader.GetChar%2A>，依此類推) 以避免引發錯誤。</xref:System.Data.SqlClient.SqlDataReader.GetChar%2A> </xref:System.Data.SqlClient.SqlDataReader.GetByte%2A>"
  syntax:
    content: public bool IsDBNull (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "要尋找的欄位索引。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果指定的欄位設定為 null。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Data.IDataRecord.IsDBNull*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "傳遞的索引超出範圍 0- <xref:System.Data.IDataRecord.FieldCount*>.</xref:System.Data.IDataRecord.FieldCount*>"
  platform:
  - net462
- uid: System.Data.IDataRecord.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Data.IDataRecord
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: IDataRecord.Item(Int32)
  fullName: System.Data.IDataRecord.Item(Int32)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "取得位於指定索引處的資料行。"
  syntax:
    content: public object this[int i] { get; }
    parameters:
    - id: i
      type: System.Int32
      description: "若要取得的資料行以零為起始的索引。"
    return:
      type: System.Object
      description: "位於<xref:System.Object>.</xref:System.Object>為指定索引處的資料行"
  overload: System.Data.IDataRecord.Item*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "傳遞的索引超出範圍 0- <xref:System.Data.IDataRecord.FieldCount*>.</xref:System.Data.IDataRecord.FieldCount*>"
  platform:
  - net462
- uid: System.Data.IDataRecord.Item(System.String)
  id: Item(System.String)
  parent: System.Data.IDataRecord
  langs:
  - csharp
  name: Item(String)
  nameWithType: IDataRecord.Item(String)
  fullName: System.Data.IDataRecord.Item(String)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "取得具有指定名稱資料行。"
  remarks: "第一次執行區分大小寫的查閱。 如果失敗，則會在第二個不區分大小寫的搜尋。       這個方法是區分假名寬度。"
  syntax:
    content: public object this[string name] { get; }
    parameters:
    - id: name
      type: System.String
      description: "若要尋找的資料行名稱。"
    return:
      type: System.Object
      description: "具有指定之名稱為<xref:System.Object>.</xref:System.Object>資料行"
  overload: System.Data.IDataRecord.Item*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "找不到具有指定名稱的任何資料行。"
  platform:
  - net462
references:
- uid: System.IndexOutOfRangeException
  isExternal: true
  name: System.IndexOutOfRangeException
- uid: System.Data.IDataRecord.FieldCount
  parent: System.Data.IDataRecord
  isExternal: false
  name: FieldCount
  nameWithType: IDataRecord.FieldCount
  fullName: System.Data.IDataRecord.FieldCount
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.IDataRecord.GetBoolean(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetBoolean(Int32)
  nameWithType: IDataRecord.GetBoolean(Int32)
  fullName: System.Data.IDataRecord.GetBoolean(Int32)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.IDataRecord.GetByte(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetByte(Int32)
  nameWithType: IDataRecord.GetByte(Int32)
  fullName: System.Data.IDataRecord.GetByte(Int32)
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Data.IDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetBytes(Int32,Int64,Byte[],Int32,Int32)
  nameWithType: IDataRecord.GetBytes(Int32,Int64,Byte[],Int32,Int32)
  fullName: System.Data.IDataRecord.GetBytes(Int32,Int64,Byte[],Int32,Int32)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.IDataRecord.GetChar(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetChar(Int32)
  nameWithType: IDataRecord.GetChar(Int32)
  fullName: System.Data.IDataRecord.GetChar(Int32)
- uid: System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Data.IDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetChars(Int32,Int64,Char[],Int32,Int32)
  nameWithType: IDataRecord.GetChars(Int32,Int64,Char[],Int32,Int32)
  fullName: System.Data.IDataRecord.GetChars(Int32,Int64,Char[],Int32,Int32)
- uid: System.Char[]
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char[]
  spec.csharp:
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: Char[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.IDataRecord.GetData(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetData(Int32)
  nameWithType: IDataRecord.GetData(Int32)
  fullName: System.Data.IDataRecord.GetData(Int32)
- uid: System.Data.IDataReader
  parent: System.Data
  isExternal: false
  name: IDataReader
  nameWithType: IDataReader
  fullName: System.Data.IDataReader
- uid: System.Data.IDataRecord.GetDataTypeName(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetDataTypeName(Int32)
  nameWithType: IDataRecord.GetDataTypeName(Int32)
  fullName: System.Data.IDataRecord.GetDataTypeName(Int32)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.IDataRecord.GetDateTime(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetDateTime(Int32)
  nameWithType: IDataRecord.GetDateTime(Int32)
  fullName: System.Data.IDataRecord.GetDateTime(Int32)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Data.IDataRecord.GetDecimal(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetDecimal(Int32)
  nameWithType: IDataRecord.GetDecimal(Int32)
  fullName: System.Data.IDataRecord.GetDecimal(Int32)
- uid: System.Decimal
  parent: System
  isExternal: true
  name: Decimal
  nameWithType: Decimal
  fullName: System.Decimal
- uid: System.Data.IDataRecord.GetDouble(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetDouble(Int32)
  nameWithType: IDataRecord.GetDouble(Int32)
  fullName: System.Data.IDataRecord.GetDouble(Int32)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Data.IDataRecord.GetFieldType(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetFieldType(Int32)
  nameWithType: IDataRecord.GetFieldType(Int32)
  fullName: System.Data.IDataRecord.GetFieldType(Int32)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Data.IDataRecord.GetFloat(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetFloat(Int32)
  nameWithType: IDataRecord.GetFloat(Int32)
  fullName: System.Data.IDataRecord.GetFloat(Int32)
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Data.IDataRecord.GetGuid(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetGuid(Int32)
  nameWithType: IDataRecord.GetGuid(Int32)
  fullName: System.Data.IDataRecord.GetGuid(Int32)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Data.IDataRecord.GetInt16(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetInt16(Int32)
  nameWithType: IDataRecord.GetInt16(Int32)
  fullName: System.Data.IDataRecord.GetInt16(Int32)
- uid: System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Data.IDataRecord.GetInt32(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetInt32(Int32)
  nameWithType: IDataRecord.GetInt32(Int32)
  fullName: System.Data.IDataRecord.GetInt32(Int32)
- uid: System.Data.IDataRecord.GetInt64(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetInt64(Int32)
  nameWithType: IDataRecord.GetInt64(Int32)
  fullName: System.Data.IDataRecord.GetInt64(Int32)
- uid: System.Data.IDataRecord.GetName(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetName(Int32)
  nameWithType: IDataRecord.GetName(Int32)
  fullName: System.Data.IDataRecord.GetName(Int32)
- uid: System.Data.IDataRecord.GetOrdinal(System.String)
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetOrdinal(String)
  nameWithType: IDataRecord.GetOrdinal(String)
  fullName: System.Data.IDataRecord.GetOrdinal(String)
- uid: System.Data.IDataRecord.GetString(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetString(Int32)
  nameWithType: IDataRecord.GetString(Int32)
  fullName: System.Data.IDataRecord.GetString(Int32)
- uid: System.Data.IDataRecord.GetValue(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetValue(Int32)
  nameWithType: IDataRecord.GetValue(Int32)
  fullName: System.Data.IDataRecord.GetValue(Int32)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.IDataRecord.GetValues(System.Object[])
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetValues(Object[])
  nameWithType: IDataRecord.GetValues(Object[])
  fullName: System.Data.IDataRecord.GetValues(Object[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.IDataRecord.IsDBNull(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: false
  name: IsDBNull(Int32)
  nameWithType: IDataRecord.IsDBNull(Int32)
  fullName: System.Data.IDataRecord.IsDBNull(Int32)
- uid: System.Data.IDataRecord.Item(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: false
  name: Item(Int32)
  nameWithType: IDataRecord.Item(Int32)
  fullName: System.Data.IDataRecord.Item(Int32)
- uid: System.Data.IDataRecord.Item(System.String)
  parent: System.Data.IDataRecord
  isExternal: false
  name: Item(String)
  nameWithType: IDataRecord.Item(String)
  fullName: System.Data.IDataRecord.Item(String)
- uid: System.Data.IDataRecord.FieldCount*
  parent: System.Data.IDataRecord
  isExternal: false
  name: FieldCount
  nameWithType: IDataRecord.FieldCount
- uid: System.Data.IDataRecord.GetBoolean*
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetBoolean
  nameWithType: IDataRecord.GetBoolean
- uid: System.Data.IDataRecord.GetByte*
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetByte
  nameWithType: IDataRecord.GetByte
- uid: System.Data.IDataRecord.GetBytes*
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetBytes
  nameWithType: IDataRecord.GetBytes
- uid: System.Data.IDataRecord.GetChar*
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetChar
  nameWithType: IDataRecord.GetChar
- uid: System.Data.IDataRecord.GetChars*
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetChars
  nameWithType: IDataRecord.GetChars
- uid: System.Data.IDataRecord.GetData*
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetData
  nameWithType: IDataRecord.GetData
- uid: System.Data.IDataRecord.GetDataTypeName*
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetDataTypeName
  nameWithType: IDataRecord.GetDataTypeName
- uid: System.Data.IDataRecord.GetDateTime*
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetDateTime
  nameWithType: IDataRecord.GetDateTime
- uid: System.Data.IDataRecord.GetDecimal*
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetDecimal
  nameWithType: IDataRecord.GetDecimal
- uid: System.Data.IDataRecord.GetDouble*
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetDouble
  nameWithType: IDataRecord.GetDouble
- uid: System.Data.IDataRecord.GetFieldType*
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetFieldType
  nameWithType: IDataRecord.GetFieldType
- uid: System.Data.IDataRecord.GetFloat*
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetFloat
  nameWithType: IDataRecord.GetFloat
- uid: System.Data.IDataRecord.GetGuid*
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetGuid
  nameWithType: IDataRecord.GetGuid
- uid: System.Data.IDataRecord.GetInt16*
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetInt16
  nameWithType: IDataRecord.GetInt16
- uid: System.Data.IDataRecord.GetInt32*
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetInt32
  nameWithType: IDataRecord.GetInt32
- uid: System.Data.IDataRecord.GetInt64*
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetInt64
  nameWithType: IDataRecord.GetInt64
- uid: System.Data.IDataRecord.GetName*
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetName
  nameWithType: IDataRecord.GetName
- uid: System.Data.IDataRecord.GetOrdinal*
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetOrdinal
  nameWithType: IDataRecord.GetOrdinal
- uid: System.Data.IDataRecord.GetString*
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetString
  nameWithType: IDataRecord.GetString
- uid: System.Data.IDataRecord.GetValue*
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetValue
  nameWithType: IDataRecord.GetValue
- uid: System.Data.IDataRecord.GetValues*
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetValues
  nameWithType: IDataRecord.GetValues
- uid: System.Data.IDataRecord.IsDBNull*
  parent: System.Data.IDataRecord
  isExternal: false
  name: IsDBNull
  nameWithType: IDataRecord.IsDBNull
- uid: System.Data.IDataRecord.Item*
  parent: System.Data.IDataRecord
  isExternal: false
  name: Item
  nameWithType: IDataRecord.Item
