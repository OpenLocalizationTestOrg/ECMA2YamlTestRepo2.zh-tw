### YamlMime:ManagedReference
items:
- uid: System.Web.UI.HtmlTextWriter
  id: HtmlTextWriter
  children:
  - System.Web.UI.HtmlTextWriter.#ctor(System.IO.TextWriter)
  - System.Web.UI.HtmlTextWriter.#ctor(System.IO.TextWriter,System.String)
  - System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String)
  - System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String)
  - System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Boolean)
  - System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)
  - System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)
  - System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String)
  - System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.Web.UI.HtmlTextWriterStyle,System.String)
  - System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)
  - System.Web.UI.HtmlTextWriter.BeginRender
  - System.Web.UI.HtmlTextWriter.Close
  - System.Web.UI.HtmlTextWriter.DefaultTabString
  - System.Web.UI.HtmlTextWriter.DoubleQuoteChar
  - System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.String,System.Boolean)
  - System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.Web.UI.HtmlTextWriterAttribute,System.String)
  - System.Web.UI.HtmlTextWriter.EncodeUrl(System.String)
  - System.Web.UI.HtmlTextWriter.Encoding
  - System.Web.UI.HtmlTextWriter.EndRender
  - System.Web.UI.HtmlTextWriter.EndTagLeftChars
  - System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style)
  - System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)
  - System.Web.UI.HtmlTextWriter.EqualsChar
  - System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString
  - System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style)
  - System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)
  - System.Web.UI.HtmlTextWriter.FilterAttributes
  - System.Web.UI.HtmlTextWriter.Flush
  - System.Web.UI.HtmlTextWriter.GetAttributeKey(System.String)
  - System.Web.UI.HtmlTextWriter.GetAttributeName(System.Web.UI.HtmlTextWriterAttribute)
  - System.Web.UI.HtmlTextWriter.GetStyleKey(System.String)
  - System.Web.UI.HtmlTextWriter.GetStyleName(System.Web.UI.HtmlTextWriterStyle)
  - System.Web.UI.HtmlTextWriter.GetTagKey(System.String)
  - System.Web.UI.HtmlTextWriter.GetTagName(System.Web.UI.HtmlTextWriterTag)
  - System.Web.UI.HtmlTextWriter.Indent
  - System.Web.UI.HtmlTextWriter.InnerWriter
  - System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute)
  - System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute,System.String@)
  - System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle)
  - System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle,System.String@)
  - System.Web.UI.HtmlTextWriter.IsValidFormAttribute(System.String)
  - System.Web.UI.HtmlTextWriter.NewLine
  - System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)
  - System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)
  - System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)
  - System.Web.UI.HtmlTextWriter.OutputTabs
  - System.Web.UI.HtmlTextWriter.PopEndTag
  - System.Web.UI.HtmlTextWriter.PushEndTag(System.String)
  - System.Web.UI.HtmlTextWriter.RegisterAttribute(System.String,System.Web.UI.HtmlTextWriterAttribute)
  - System.Web.UI.HtmlTextWriter.RegisterStyle(System.String,System.Web.UI.HtmlTextWriterStyle)
  - System.Web.UI.HtmlTextWriter.RegisterTag(System.String,System.Web.UI.HtmlTextWriterTag)
  - System.Web.UI.HtmlTextWriter.RenderAfterContent
  - System.Web.UI.HtmlTextWriter.RenderAfterTag
  - System.Web.UI.HtmlTextWriter.RenderBeforeContent
  - System.Web.UI.HtmlTextWriter.RenderBeforeTag
  - System.Web.UI.HtmlTextWriter.RenderBeginTag(System.String)
  - System.Web.UI.HtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)
  - System.Web.UI.HtmlTextWriter.RenderEndTag
  - System.Web.UI.HtmlTextWriter.SelfClosingChars
  - System.Web.UI.HtmlTextWriter.SelfClosingTagEnd
  - System.Web.UI.HtmlTextWriter.SemicolonChar
  - System.Web.UI.HtmlTextWriter.SingleQuoteChar
  - System.Web.UI.HtmlTextWriter.SlashChar
  - System.Web.UI.HtmlTextWriter.SpaceChar
  - System.Web.UI.HtmlTextWriter.StyleEqualsChar
  - System.Web.UI.HtmlTextWriter.TagKey
  - System.Web.UI.HtmlTextWriter.TagLeftChar
  - System.Web.UI.HtmlTextWriter.TagName
  - System.Web.UI.HtmlTextWriter.TagRightChar
  - System.Web.UI.HtmlTextWriter.Write(System.Boolean)
  - System.Web.UI.HtmlTextWriter.Write(System.Char)
  - System.Web.UI.HtmlTextWriter.Write(System.Char[])
  - System.Web.UI.HtmlTextWriter.Write(System.Double)
  - System.Web.UI.HtmlTextWriter.Write(System.Int32)
  - System.Web.UI.HtmlTextWriter.Write(System.Int64)
  - System.Web.UI.HtmlTextWriter.Write(System.Object)
  - System.Web.UI.HtmlTextWriter.Write(System.Single)
  - System.Web.UI.HtmlTextWriter.Write(System.String)
  - System.Web.UI.HtmlTextWriter.Write(System.String,System.Object)
  - System.Web.UI.HtmlTextWriter.Write(System.String,System.Object[])
  - System.Web.UI.HtmlTextWriter.Write(System.Char[],System.Int32,System.Int32)
  - System.Web.UI.HtmlTextWriter.Write(System.String,System.Object,System.Object)
  - System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)
  - System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)
  - System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)
  - System.Web.UI.HtmlTextWriter.WriteBreak
  - System.Web.UI.HtmlTextWriter.WriteEncodedText(System.String)
  - System.Web.UI.HtmlTextWriter.WriteEncodedUrl(System.String)
  - System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter(System.String)
  - System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)
  - System.Web.UI.HtmlTextWriter.WriteFullBeginTag(System.String)
  - System.Web.UI.HtmlTextWriter.WriteLine
  - System.Web.UI.HtmlTextWriter.WriteLine(System.Boolean)
  - System.Web.UI.HtmlTextWriter.WriteLine(System.Char)
  - System.Web.UI.HtmlTextWriter.WriteLine(System.Char[])
  - System.Web.UI.HtmlTextWriter.WriteLine(System.Double)
  - System.Web.UI.HtmlTextWriter.WriteLine(System.Int32)
  - System.Web.UI.HtmlTextWriter.WriteLine(System.Int64)
  - System.Web.UI.HtmlTextWriter.WriteLine(System.Object)
  - System.Web.UI.HtmlTextWriter.WriteLine(System.Single)
  - System.Web.UI.HtmlTextWriter.WriteLine(System.String)
  - System.Web.UI.HtmlTextWriter.WriteLine(System.UInt32)
  - System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object)
  - System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object[])
  - System.Web.UI.HtmlTextWriter.WriteLine(System.Char[],System.Int32,System.Int32)
  - System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object,System.Object)
  - System.Web.UI.HtmlTextWriter.WriteLineNoTabs(System.String)
  - System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String)
  - System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String,System.Boolean)
  - System.Web.UI.HtmlTextWriter.WriteUrlEncodedString(System.String,System.Boolean)
  langs:
  - csharp
  name: HtmlTextWriter
  nameWithType: HtmlTextWriter
  fullName: System.Web.UI.HtmlTextWriter
  type: Class
  summary: "ASP.NET 伺服器控制項輸出資料流寫入標記字元和文字。 這個類別會提供給用戶端呈現標記時，ASP.NET 伺服器控制項使用的格式化功能。"
  remarks: "HtmlTextWriter 類別用於將 HTML 4.0 轉譯為桌面瀏覽器。 HtmlTextWriter 也是在所有的標記寫入器的基底類別<xref:System.Web.UI>命名空間，包括<xref:System.Web.UI.ChtmlTextWriter>， <xref:System.Web.UI.Html32TextWriter>，和<xref:System.Web.UI.XhtmlTextWriter>類別。</xref:System.Web.UI.XhtmlTextWriter> </xref:System.Web.UI.Html32TextWriter> </xref:System.Web.UI.ChtmlTextWriter> </xref:System.Web.UI> 這些類別用來寫入項目、 屬性和不同類型的標記樣式和配置資訊。 此外，這些類別會使用每一種標記語言相關聯的頁面和控制項的配接器類別。       在大部分情況下，ASP.NET 會自動使用適當的寫入器為要求的裝置。 不過，如果您建立自訂的文字寫入器，或者您想要指定特定的寫入器來呈現特定裝置的網頁，您必須將對應的寫入器中的頁面`controlAdapters`應用程式.browser 檔案區段。"
  example:
  - "The following code example shows how to override the <xref:System.Web.UI.Control.Render%2A> method of a custom control that is derived from the <xref:System.Web.UI.Control> class. The code example illustrates how to use various HtmlTextWriter methods, properties, and fields.  \n  \n [!code-cs[MarkupTextWriter_Samples1#1](~/add/codesnippet/csharp/t-system.web.ui.htmltext_1_1.cs)]\n [!code-vb[MarkupTextWriter_Samples1#1](~/add/codesnippet/visualbasic/t-system.web.ui.htmltext_1_1.vb)]"
  syntax:
    content: 'public class HtmlTextWriter : System.IO.TextWriter'
  inheritance:
  - System.IO.TextWriter
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.#ctor(System.IO.TextWriter)
  id: '#ctor(System.IO.TextWriter)'
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: HtmlTextWriter(TextWriter)
  nameWithType: HtmlTextWriter.HtmlTextWriter(TextWriter)
  fullName: System.Web.UI.HtmlTextWriter.HtmlTextWriter(TextWriter)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "初始化的新執行個體<xref href=&quot;System.Web.UI.HtmlTextWriter&quot;></xref>類別所使用的預設索引標籤的字串。"
  remarks: "HtmlTextWriter 的多載建構函式使用 HtmlTextWriter<xref:System.Web.UI.HtmlTextWriter.DefaultTabString>常數需要的行縮排時。</xref:System.Web.UI.HtmlTextWriter.DefaultTabString> 它會呼叫<xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29>來初始化新執行個體的多載。</xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29>"
  example:
  - "The following code example demonstrates how to use the HtmlTextWriter constructor to create a custom <xref:System.Web.UI.HtmlTextWriter> object named `StyledLabelHtmlWriter.` When the `MyPage` custom class, which is derived from the <xref:System.Web.UI.Page> class, is requested by a client browser, it uses the `StyledLabelHtmlWriter` class to render its content to the output stream.  \n  \n [!code-vb[HtmlTextWriter_Methods3#10](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_26_1.vb)]\n [!code-cpp[HtmlTextWriter_Methods3#10](~/add/codesnippet/cpp/m-system.web.ui.htmltext_26_1.cpp)]\n [!code-cs[HtmlTextWriter_Methods3#10](~/add/codesnippet/csharp/m-system.web.ui.htmltext_26_1.cs)]"
  syntax:
    content: public HtmlTextWriter (System.IO.TextWriter writer);
    parameters:
    - id: writer
      type: System.IO.TextWriter
      description: "<xref:System.IO.TextWriter>呈現標記內容的執行個體。</xref:System.IO.TextWriter>"
  overload: System.Web.UI.HtmlTextWriter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.#ctor(System.IO.TextWriter,System.String)
  id: '#ctor(System.IO.TextWriter,System.String)'
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: HtmlTextWriter(TextWriter,String)
  nameWithType: HtmlTextWriter.HtmlTextWriter(TextWriter,String)
  fullName: System.Web.UI.HtmlTextWriter.HtmlTextWriter(TextWriter,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "初始化的新執行個體<xref href=&quot;System.Web.UI.HtmlTextWriter&quot;></xref>類別，以指定的索引標籤的字串字元。"
  remarks: "HtmlTextWriter 的多載建構函式使用 HtmlTextWriter`tabString`時必要的行縮排。 它會呼叫<xref:System.IO.TextWriter.%23ctor%28System.IFormatProvider%29?displayProperty=fullName>基底建構函式來初始化新執行個體。</xref:System.IO.TextWriter.%23ctor%28System.IFormatProvider%29?displayProperty=fullName>"
  example:
  - "The following code example demonstrates how to use the <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%29> constructor to create a custom <xref:System.Web.UI.HtmlTextWriter> object named `StyledLabelHtmlWriter.` When the `MyPage` custom class, which is derived from the <xref:System.Web.UI.Page> class, is requested by a client browser, it uses the `StyledLabelHtmlWriter` class to render its content to the output stream.  \n  \n [!code-vb[HtmlTextWriter_Methods3#10](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_31_1.vb)]\n [!code-cpp[HtmlTextWriter_Methods3#10](~/add/codesnippet/cpp/m-system.web.ui.htmltext_31_1.cpp)]\n [!code-cs[HtmlTextWriter_Methods3#10](~/add/codesnippet/csharp/m-system.web.ui.htmltext_31_1.cs)]"
  syntax:
    content: public HtmlTextWriter (System.IO.TextWriter writer, string tabString);
    parameters:
    - id: writer
      type: System.IO.TextWriter
      description: "<xref:System.IO.TextWriter>呈現標記內容。</xref:System.IO.TextWriter>"
    - id: tabString
      type: System.String
      description: "要用來呈現行縮排的字串。"
  overload: System.Web.UI.HtmlTextWriter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String)
  id: AddAttribute(System.String,System.String)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: AddAttribute(String,String)
  nameWithType: HtmlTextWriter.AddAttribute(String,String)
  fullName: System.Web.UI.HtmlTextWriter.AddAttribute(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "將指定的標記屬性和值加入至項目開頭標記， <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref>物件建立的後續呼叫<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*>方法。</xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*>"
  remarks: "如果屬性不是其中一個使用 AddAttribute 方法的多載 AddAttribute<xref:System.Web.UI.HtmlTextWriterAttribute>值，或如果屬性不會知道直到執行階段。</xref:System.Web.UI.HtmlTextWriterAttribute>       任何給定的標記項目，執行個體<xref:System.Web.UI.HtmlTextWriter>類別會維護一份該元素的屬性。</xref:System.Web.UI.HtmlTextWriter> 當<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>呼叫方法時，新增的任何屬性<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>方法呈現的項目開頭標記。</xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> </xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> 屬性清單然後從右鍵<xref:System.Web.UI.HtmlTextWriter>物件。</xref:System.Web.UI.HtmlTextWriter>       轉譯標記項目的程式碼撰寫的模式如下:-使用<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>方法，以將任何屬性的項目。</xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>      -使用<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>方法。</xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>      -使用其他方法視需要來呈現項目的開頭和結尾標記之間的內容。      -使用<xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>方法。</xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>"
  example:
  - "The following code example demonstrates how to call the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method before calling the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method. The code calls two different overloads of <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> and two different overloads of <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> before it calls the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method to render a `<span>` element to the output stream. The AddAttribute method is used to define the custom attribute named `CustomAttribute` and the custom value named `CustomAttributeValue` for the `<span>` element that this code renders.  \n  \n [!code-cs[MarkupTextWriter_Samples1#2](~/add/codesnippet/csharp/m-system.web.ui.htmltext_42_1.cs)]\n [!code-vb[MarkupTextWriter_Samples1#2](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_42_1.vb)]"
  syntax:
    content: public virtual void AddAttribute (string name, string value);
    parameters:
    - id: name
      type: System.String
      description: "字串，包含要加入的屬性名稱。"
    - id: value
      type: System.String
      description: "字串，包含要指派給屬性的值。"
  overload: System.Web.UI.HtmlTextWriter.AddAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String)
  id: AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: AddAttribute(HtmlTextWriterAttribute,String)
  nameWithType: HtmlTextWriter.AddAttribute(HtmlTextWriterAttribute,String)
  fullName: System.Web.UI.HtmlTextWriter.AddAttribute(HtmlTextWriterAttribute,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "加入標記屬性和屬性值的項目開頭標記， <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref>物件建立的後續呼叫<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*>方法。</xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*>"
  remarks: "您可以使用 AddAttribute 方法的多載 AddAttribute 轉譯標準標記屬性。       任何給定的標記項目，執行個體<xref:System.Web.UI.HtmlTextWriter>類別會維護一份該元素的屬性。</xref:System.Web.UI.HtmlTextWriter> 當<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>呼叫方法時，所新增的任何屬性<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>方法呈現的項目開頭標記。</xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> </xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> 屬性清單是從<xref:System.Web.UI.HtmlTextWriter>.</xref:System.Web.UI.HtmlTextWriter>中清除       轉譯標記項目的程式碼撰寫的模式如下:-使用<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>方法，以將任何屬性的項目。</xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>      -使用<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>方法。</xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>      -使用其他方法視需要來呈現項目的開頭和結尾標記之間的內容。      -使用<xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>方法。</xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>"
  example:
  - "The following code example shows how to use the AddAttribute overload of the AddAttribute method to add an `Onclick` attribute to a markup element, and then set its value to the following ECMAScript code:  \n  \n```  \nalert('Hello');  \n```  \n  \n [!code-vb[System.Web.UI.HtmlTextWriter#1](~/add/codesnippet/visualbasic/f7056fa3-ef89-45d7-9cdd-_1.vb)]\n [!code-cs[System.Web.UI.HtmlTextWriter#1](~/add/codesnippet/csharp/f7056fa3-ef89-45d7-9cdd-_1.cs)]\n [!code-cpp[System.Web.UI.HtmlTextWriter#1](~/add/codesnippet/cpp/f7056fa3-ef89-45d7-9cdd-_1.cpp)]"
  syntax:
    content: public virtual void AddAttribute (System.Web.UI.HtmlTextWriterAttribute key, string value);
    parameters:
    - id: key
      type: System.Web.UI.HtmlTextWriterAttribute
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriterAttribute&quot;> </xref> ，代表要加入輸出資料流的標記屬性。"
    - id: value
      type: System.String
      description: "字串，包含要指派給屬性的值。"
  overload: System.Web.UI.HtmlTextWriter.AddAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Boolean)
  id: AddAttribute(System.String,System.String,System.Boolean)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: AddAttribute(String,String,Boolean)
  nameWithType: HtmlTextWriter.AddAttribute(String,String,Boolean)
  fullName: System.Web.UI.HtmlTextWriter.AddAttribute(String,String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "將指定的標記屬性和值加入至項目開頭標記， <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref>物件建立的後續呼叫<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*>方法，並有選擇性的編碼方式。</xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*>"
  remarks: "如果屬性不是其中一個使用 AddAttribute 方法的多載 AddAttribute<xref:System.Web.UI.HtmlTextWriterAttribute>值，或是如果屬性不會知道直到執行的階段和編碼所需。</xref:System.Web.UI.HtmlTextWriterAttribute>       任何給定的標記項目，執行個體<xref:System.Web.UI.HtmlTextWriter>類別會維護一份該元素的屬性。</xref:System.Web.UI.HtmlTextWriter> 當<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>呼叫方法時，新增的任何屬性<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>方法呈現的項目開頭標記。</xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> </xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> 屬性清單然後從右鍵<xref:System.Web.UI.HtmlTextWriter>物件。</xref:System.Web.UI.HtmlTextWriter>       使用 AddAttribute 方法加`fEncode`設`true`，屬性可能包含引號 （&quot;）、 小於號 （如果<), or an ampersand (&). or=&quot;&quot; an=&quot;&quot; ampersand=&quot;&quot;></), or an ampersand (&).> 方法呼叫會編碼成需求提出要求的裝置屬性。 您可以設定`fEncode`至`false`、 如果您知道沒有任何這些字元將會產生的或如果您知道該屬性已編碼。       轉譯標記項目的程式碼撰寫的模式如下:-使用<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>方法，以將任何屬性的項目。</xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>      -使用<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>方法。</xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>      -使用其他方法視需要來呈現項目的開頭和結尾標記之間的內容。      -使用<xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>方法。</xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>"
  example:
  - "The following code example shows how to use the AddAttribute overload of the AddAttribute method to ensure that a custom attribute, named `myattribute`, and its value are not encoded for an `<img>` element.  \n  \n [!code-vb[System.Web.UI.HtmlTextWriter#3](~/add/codesnippet/visualbasic/42cbe4de-f3a3-40dc-8e06-_1.vb)]\n [!code-cs[System.Web.UI.HtmlTextWriter#3](~/add/codesnippet/csharp/42cbe4de-f3a3-40dc-8e06-_1.cs)]\n [!code-cpp[System.Web.UI.HtmlTextWriter#3](~/add/codesnippet/cpp/42cbe4de-f3a3-40dc-8e06-_1.cpp)]"
  syntax:
    content: public virtual void AddAttribute (string name, string value, bool fEndode);
    parameters:
    - id: name
      type: System.String
      description: "字串，包含要加入的屬性名稱。"
    - id: value
      type: System.String
      description: "字串，包含要指派給屬性的值。"
    - id: fEndode
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要編碼屬性及其值。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.HtmlTextWriter.AddAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)
  id: AddAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: AddAttribute(String,String,HtmlTextWriterAttribute)
  nameWithType: HtmlTextWriter.AddAttribute(String,String,HtmlTextWriterAttribute)
  fullName: System.Web.UI.HtmlTextWriter.AddAttribute(String,String,HtmlTextWriterAttribute)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "將指定的標記屬性和值，連同<xref href=&quot;System.Web.UI.HtmlTextWriterAttribute&quot;></xref>列舉值的項目開頭標記， <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref>物件建立的後續呼叫<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*>方法。</xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*>"
  remarks: "從<xref:System.Web.UI.HtmlTextWriter>類別</xref:System.Web.UI.HtmlTextWriter>繼承時，才使用 AddAttribute 方法的多載 AddAttribute 它可讓您建立新`name`和`key`屬性組。"
  syntax:
    content: protected virtual void AddAttribute (string name, string value, System.Web.UI.HtmlTextWriterAttribute key);
    parameters:
    - id: name
      type: System.String
      description: "字串，包含要加入的屬性名稱。"
    - id: value
      type: System.String
      description: "字串，包含要指派給屬性的值。"
    - id: key
      type: System.Web.UI.HtmlTextWriterAttribute
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriterAttribute&quot;> </xref>所代表的屬性。"
  overload: System.Web.UI.HtmlTextWriter.AddAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)
  id: AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: AddAttribute(HtmlTextWriterAttribute,String,Boolean)
  nameWithType: HtmlTextWriter.AddAttribute(HtmlTextWriterAttribute,String,Boolean)
  fullName: System.Web.UI.HtmlTextWriter.AddAttribute(HtmlTextWriterAttribute,String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "加入標記屬性和屬性值的項目開頭標記， <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref>物件建立的後續呼叫<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*>方法，並有選擇性的編碼方式。</xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*>"
  remarks: "您可以使用 AddAttribute 方法的多載 AddAttribute 轉譯具有選擇性的編碼方式的標準標記屬性。       任何給定的標記項目，執行個體<xref:System.Web.UI.HtmlTextWriter>類別會維護一份該元素的屬性。</xref:System.Web.UI.HtmlTextWriter> 當<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>呼叫方法時，新增的任何屬性<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>會轉譯為項目開頭標記。</xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> </xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> 屬性清單然後從右鍵<xref:System.Web.UI.HtmlTextWriter>物件。</xref:System.Web.UI.HtmlTextWriter>       使用 AddAttribute 方法加`fEncode`設`true`，屬性可能包含引號 （&quot;）、 小於號 （如果<), or an ampersand (&). or=&quot;&quot; an=&quot;&quot; ampersand=&quot;&quot;></), or an ampersand (&).> 方法呼叫會編碼成需求提出要求的裝置屬性。 您可以設定`fEncode`至`false`、 如果您知道沒有任何這些字元將會產生的或如果您知道該屬性已編碼。       轉譯標記項目的程式碼撰寫的模式如下:-使用<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>方法，以將任何屬性的項目。</xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>      -使用<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>方法。</xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>      -使用其他方法視需要來呈現項目的開頭和結尾標記之間的內容。      -使用<xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>方法。</xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>"
  example:
  - "The following code example demonstrates how to use the AddAttribute method to ensure that the string value that is assigned to an `Alt` attribute for an `<img>` element is encoded for the requesting device.  \n  \n [!code-vb[System.Web.UI.HtmlTextWriter#3](~/add/codesnippet/visualbasic/5fc4f314-c4b1-473d-abfa-_1.vb)]\n [!code-cs[System.Web.UI.HtmlTextWriter#3](~/add/codesnippet/csharp/5fc4f314-c4b1-473d-abfa-_1.cs)]\n [!code-cpp[System.Web.UI.HtmlTextWriter#3](~/add/codesnippet/cpp/5fc4f314-c4b1-473d-abfa-_1.cpp)]"
  syntax:
    content: public virtual void AddAttribute (System.Web.UI.HtmlTextWriterAttribute key, string value, bool fEncode);
    parameters:
    - id: key
      type: System.Web.UI.HtmlTextWriterAttribute
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriterAttribute&quot;> </xref> ，代表要加入輸出資料流的標記屬性。"
    - id: value
      type: System.String
      description: "字串，包含要指派給屬性的值。"
    - id: fEncode
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要編碼屬性及其值。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.HtmlTextWriter.AddAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String)
  id: AddStyleAttribute(System.String,System.String)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: AddStyleAttribute(String,String)
  nameWithType: HtmlTextWriter.AddStyleAttribute(String,String)
  fullName: System.Web.UI.HtmlTextWriter.AddStyleAttribute(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "將指定的標記樣式屬性和屬性值的開頭標記加入至後續呼叫所建立的標記<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*>方法。</xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*>"
  remarks: "樣式不是的成員時，使用 AddStyleAttribute 方法的多載 AddStyleAttribute<xref:System.Web.UI.HtmlTextWriterStyle>列舉型別或不知道直到執行階段。</xref:System.Web.UI.HtmlTextWriterStyle>       <xref:System.Web.UI.HtmlTextWriter>類別會維護一份標記項目呈現的樣式。</xref:System.Web.UI.HtmlTextWriter> 當<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>呼叫方法時，所新增的任何樣式<xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A>方法呈現的項目開頭標記。</xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> </xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> 則清除的樣式清單。       轉譯標記項目的程式碼撰寫的模式如下:-使用<xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A>方法，將任何樣式屬性的項目。</xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A>      -使用<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>方法。</xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>      -使用其他方法視需要來呈現項目的開頭和結尾標記之間所找到的內容。      -使用<xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>方法。</xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>"
  example:
  - "The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> overload of the AddStyleAttribute method to render `font-size` and `color` style attributes on a `<p>` element. This code example uses the <xref:System.Web.UI.HtmlTextWriter> class to render the contents of the control.  \n  \n [!code-cpp[HtmlTextWriter_AddStyleAttribute#1](~/add/codesnippet/cpp/m-system.web.ui.htmltext_13_1.cpp)]\n [!code-cs[HtmlTextWriter_AddStyleAttribute#1](~/add/codesnippet/csharp/m-system.web.ui.htmltext_13_1.cs)]\n [!code-vb[HtmlTextWriter_AddStyleAttribute#1](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_13_1.vb)]"
  syntax:
    content: public virtual void AddStyleAttribute (string name, string value);
    parameters:
    - id: name
      type: System.String
      description: "字串，包含要加入的樣式屬性。"
    - id: value
      type: System.String
      description: "字串，包含要指派給屬性的值。"
  overload: System.Web.UI.HtmlTextWriter.AddStyleAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.Web.UI.HtmlTextWriterStyle,System.String)
  id: AddStyleAttribute(System.Web.UI.HtmlTextWriterStyle,System.String)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: AddStyleAttribute(HtmlTextWriterStyle,String)
  nameWithType: HtmlTextWriter.AddStyleAttribute(HtmlTextWriterStyle,String)
  fullName: System.Web.UI.HtmlTextWriter.AddStyleAttribute(HtmlTextWriterStyle,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "將指定相關聯的標記樣式屬性<xref href=&quot;System.Web.UI.HtmlTextWriterStyle&quot;></xref>值和開頭標記的屬性值的後續呼叫所建立的標記<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*>方法。</xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*>"
  remarks: "樣式時的成員，請使用 AddStyleAttribute 方法的多載 AddStyleAttribute<xref:System.Web.UI.HtmlTextWriterStyle>列舉型別和已知的執行階段之前。</xref:System.Web.UI.HtmlTextWriterStyle>       <xref:System.Web.UI.HtmlTextWriter>類別會維護一份標記項目呈現的樣式。</xref:System.Web.UI.HtmlTextWriter> 當<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>呼叫方法時，所加入的任何樣式<xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A>方法呈現的項目開頭標記。</xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> </xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> 則清除的樣式清單。       轉譯標記項目的程式碼撰寫的模式如下:-使用<xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A>方法，將任何樣式屬性的項目。</xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A>      -使用<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>方法。</xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>      -使用其他方法視需要來呈現項目的開頭和結尾標記之間所找到的內容。      -使用<xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>方法。</xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>"
  example:
  - "The following code example demonstrates how to use part of an override of the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method in a class derived from the <xref:System.Web.UI.HtmlTextWriter> class. The code checks whether a `<Label>` element is being rendered. If so, the <xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A> method is called to check whether a `Color` style attribute has been defined for the `<Label>` element. If a `Color` attribute has not been defined, the code calls this overload of the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method to add the `Color` attribute to the style attribute, and then set its value to `red`.  \n  \n [!code-vb[HtmlTextWriter_Methods3#4](~/add/codesnippet/visualbasic/da7f284f-e06a-4e07-bda6-_1.vb)]\n [!code-cpp[HtmlTextWriter_Methods3#4](~/add/codesnippet/cpp/da7f284f-e06a-4e07-bda6-_1.cpp)]\n [!code-cs[HtmlTextWriter_Methods3#4](~/add/codesnippet/csharp/da7f284f-e06a-4e07-bda6-_1.cs)]"
  syntax:
    content: public virtual void AddStyleAttribute (System.Web.UI.HtmlTextWriterStyle key, string value);
    parameters:
    - id: key
      type: System.Web.UI.HtmlTextWriterStyle
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriterStyle&quot;> </xref> ，代表要加入輸出資料流之樣式屬性。"
    - id: value
      type: System.String
      description: "字串，包含要指派給屬性的值。"
  overload: System.Web.UI.HtmlTextWriter.AddStyleAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)
  id: AddStyleAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: AddStyleAttribute(String,String,HtmlTextWriterStyle)
  nameWithType: HtmlTextWriter.AddStyleAttribute(String,String,HtmlTextWriterStyle)
  fullName: System.Web.UI.HtmlTextWriter.AddStyleAttribute(String,String,HtmlTextWriterStyle)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "將指定的標記樣式屬性和屬性值，連同<xref href=&quot;System.Web.UI.HtmlTextWriterStyle&quot;></xref>開頭標記的列舉值的後續呼叫所建立的標記<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*>方法。</xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*>"
  remarks: "從<xref:System.Web.UI.HtmlTextWriter>類別</xref:System.Web.UI.HtmlTextWriter>繼承時，才使用 AddStyleAttribute 方法的多載 AddStyleAttribute 它可讓您建立新`name`和`value`配對的<xref:System.Web.UI.HtmlTextWriterStyle>屬性。</xref:System.Web.UI.HtmlTextWriterStyle>"
  syntax:
    content: protected virtual void AddStyleAttribute (string name, string value, System.Web.UI.HtmlTextWriterStyle key);
    parameters:
    - id: name
      type: System.String
      description: "字串，包含要加入之樣式屬性。"
    - id: value
      type: System.String
      description: "字串，包含要指派給屬性的值。"
    - id: key
      type: System.Web.UI.HtmlTextWriterStyle
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriterStyle&quot;> </xref> ，代表要加入的樣式屬性。"
  overload: System.Web.UI.HtmlTextWriter.AddStyleAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.BeginRender
  id: BeginRender
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: BeginRender()
  nameWithType: HtmlTextWriter.BeginRender()
  fullName: System.Web.UI.HtmlTextWriter.BeginRender()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "通知<xref href=&quot;System.Web.UI.HtmlTextWriter&quot;></xref>物件或衍生類別中，即將要呈現控制項的物件。"
  remarks: "<xref:System.Web.UI.HtmlTextWriter>BeginRender 方法類別實作沒有任何功能。</xref:System.Web.UI.HtmlTextWriter> 您必須將 BeginRender 方法，從衍生類別中的覆寫<xref:System.Web.UI.HtmlTextWriter>以提供您自己的轉譯功能。</xref:System.Web.UI.HtmlTextWriter> 例如，在可能需要的標記語言`<p>`立即呈現控制項，但前面的項目需要`<p>`先前決定項目，您無法使用 BeginRender 覆寫。"
  syntax:
    content: public virtual void BeginRender ();
    parameters: []
  overload: System.Web.UI.HtmlTextWriter.BeginRender*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.Close
  id: Close
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: Close()
  nameWithType: HtmlTextWriter.Close()
  fullName: System.Web.UI.HtmlTextWriter.Close()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "關閉<xref href=&quot;System.Web.UI.HtmlTextWriter&quot;></xref>物件，並釋放任何與它相關聯的系統資源。"
  remarks: "Close 方法呼叫的這個實作<xref:System.IO.TextWriter.Close%2A?displayProperty=fullName>基底方法。</xref:System.IO.TextWriter.Close%2A?displayProperty=fullName>       Close 方法，也就是任何作業呼叫之後<xref:System.Web.UI.HtmlTextWriter>物件可能會擲回例外狀況，因為其所有資源都已都釋放。</xref:System.Web.UI.HtmlTextWriter>"
  syntax:
    content: public override void Close ();
    parameters: []
  overload: System.Web.UI.HtmlTextWriter.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.DefaultTabString
  id: DefaultTabString
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: DefaultTabString
  nameWithType: HtmlTextWriter.DefaultTabString
  fullName: System.Web.UI.HtmlTextWriter.DefaultTabString
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "表示單一索引標籤的字元。"
  remarks: "[單一] 索引標籤會以 ASCII 9 字元。"
  example:
  - "The following code example demonstrates how to create a constructor that takes a <xref:System.IO.TextWriter> object as a parameter and passes the DefaultTabString field as a parameter argument to a second version of the constructor. When this constructor is called from code, the DefaultTabString field defines the indentation policy for the instance of the markup writer that is used by a page or an adapter.  \n  \n [!code-cs[MarkupTextWriter_Methods3#1](~/add/codesnippet/csharp/f-system.web.ui.htmltext_8_1.cs)]\n [!code-vb[MarkupTextWriter_Methods3#1](~/add/codesnippet/visualbasic/f-system.web.ui.htmltext_8_1.vb)]"
  syntax:
    content: public const string DefaultTabString;
    return:
      type: System.String
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.DoubleQuoteChar
  id: DoubleQuoteChar
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: DoubleQuoteChar
  nameWithType: HtmlTextWriter.DoubleQuoteChar
  fullName: System.Web.UI.HtmlTextWriter.DoubleQuoteChar
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "表示引號 （&quot;） 字元。"
  remarks: "DoubleQuoteChar 欄位由<xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A>方法，關閉屬性。</xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A>"
  example:
  - "The following code example shows how to render a `border` attribute for a `<table>` element. The code calls the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render the attribute and its value and uses the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render the <xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString> and DoubleQuoteChar fields.  \n  \n This code example renders the following markup:  \n  \n `border=\"1\"`  \n  \n [!code-vb[MarkupTextWriter_Constants#6](~/add/codesnippet/visualbasic/f-system.web.ui.htmltext_7_1.vb)]\n [!code-cs[MarkupTextWriter_Constants#6](~/add/codesnippet/csharp/f-system.web.ui.htmltext_7_1.cs)]"
  syntax:
    content: public const char DoubleQuoteChar;
    return:
      type: System.Char
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.String,System.Boolean)
  id: EncodeAttributeValue(System.String,System.Boolean)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: EncodeAttributeValue(String,Boolean)
  nameWithType: HtmlTextWriter.EncodeAttributeValue(String,Boolean)
  fullName: System.Web.UI.HtmlTextWriter.EncodeAttributeValue(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "根據需求指定的標記屬性的值會將編碼<xref href=&quot;System.Web.HttpRequest&quot;></xref>目前內容的物件。"
  remarks: "使用的 EncodeAttributeValue 多載<xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%29>方法如果屬性不是<xref:System.Web.UI.HtmlTextWriterAttribute>列舉值或執行階段之前都無法得知。</xref:System.Web.UI.HtmlTextWriterAttribute> </xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%29>       <xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A>方法會移除雙引號 （&quot;）、 連字號 （&），且小於符號 (<) so that invalid tags are not generated, regardless of the input. so=&quot;&quot; that=&quot;&quot; invalid=&quot;&quot; tags=&quot;&quot; are=&quot;&quot; not=&quot;&quot; generated,=&quot;&quot; regardless=&quot;&quot; of=&quot;&quot; the=&quot;&quot;> </) so that invalid tags are not generated, regardless of the input.> </xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A> 實際的編碼由執行<xref:System.Web.HttpUtility.HtmlAttributeEncode%2A>方法。</xref:System.Web.HttpUtility.HtmlAttributeEncode%2A>"
  example:
  - "The following code example shows how to call the EncodeAttributeValue method as a parameter in an <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method call, and then encodes a `color:blue` style attribute value.  \n  \n [!code-cs[HtmlTextWriter_Methods#5](~/add/codesnippet/csharp/ca3d7869-90f7-46e1-a9f1-_1.cs)]\n [!code-vb[HtmlTextWriter_Methods#5](~/add/codesnippet/visualbasic/ca3d7869-90f7-46e1-a9f1-_1.vb)]\n [!code-cpp[HtmlTextWriter_Methods#5](~/add/codesnippet/cpp/ca3d7869-90f7-46e1-a9f1-_1.cpp)]"
  syntax:
    content: protected string EncodeAttributeValue (string value, bool fEncode);
    parameters:
    - id: value
      type: System.String
      description: "字串，包含要編碼的屬性值。"
    - id: fEncode
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要編碼屬性的值;否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.String
      description: "字串，包含已編碼的屬性值中， <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>如果<code> value </code>是空的或未編碼的屬性值，如果<code> fEncode </code>是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.HtmlTextWriter.EncodeAttributeValue*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.Web.UI.HtmlTextWriterAttribute,System.String)
  id: EncodeAttributeValue(System.Web.UI.HtmlTextWriterAttribute,System.String)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: EncodeAttributeValue(HtmlTextWriterAttribute,String)
  nameWithType: HtmlTextWriter.EncodeAttributeValue(HtmlTextWriterAttribute,String)
  fullName: System.Web.UI.HtmlTextWriter.EncodeAttributeValue(HtmlTextWriterAttribute,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "根據需求指定的標記屬性的值會將編碼<xref href=&quot;System.Web.HttpRequest&quot;></xref>目前內容的物件。"
  remarks: "EncodeAttributeValue 方法移除雙引號 （&quot;）、 連字號 （&），及小於簽署 （<) so that invalid tags are not generated, regardless of the input. so=&quot;&quot; that=&quot;&quot; invalid=&quot;&quot; tags=&quot;&quot; are=&quot;&quot; not=&quot;&quot; generated,=&quot;&quot; regardless=&quot;&quot; of=&quot;&quot; the=&quot;&quot;></) so that invalid tags are not generated, regardless of the input.> 實際的編碼由執行<xref:System.Web.HttpUtility.HtmlAttributeEncode%2A>方法。</xref:System.Web.HttpUtility.HtmlAttributeEncode%2A>"
  syntax:
    content: protected virtual string EncodeAttributeValue (System.Web.UI.HtmlTextWriterAttribute attrKey, string value);
    parameters:
    - id: attrKey
      type: System.Web.UI.HtmlTextWriterAttribute
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriterAttribute&quot;> </xref>代表標記屬性。"
    - id: value
      type: System.String
      description: "字串，包含要編碼的屬性值。"
    return:
      type: System.String
      description: "字串，包含已編碼的屬性值。"
  overload: System.Web.UI.HtmlTextWriter.EncodeAttributeValue*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.EncodeUrl(System.String)
  id: EncodeUrl(System.String)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: EncodeUrl(String)
  nameWithType: HtmlTextWriter.EncodeUrl(String)
  fullName: System.Web.UI.HtmlTextWriter.EncodeUrl(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "執行基本 URL 編碼方式將指定的 URL 中的空格轉換成字串&quot;%20&quot;。"
  remarks: "URL 編碼的字元包括百分比符號 （%），後面接著的兩位數十六進位表示法 （不區分大小寫） 字元的 ISO-拉丁文字碼指標。 空格的十六進位表示法是 20。"
  example:
  - "The following code example demonstrates how to call the EncodeUrl method to convert any spaces in the URL that is passed as a parameter in an <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method call.  \n  \n [!code-cs[HtmlTextWriter_Methods#6](~/add/codesnippet/csharp/m-system.web.ui.htmltext_41_1.cs)]\n [!code-vb[HtmlTextWriter_Methods#6](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_41_1.vb)]\n [!code-cpp[HtmlTextWriter_Methods#6](~/add/codesnippet/cpp/m-system.web.ui.htmltext_41_1.cpp)]"
  syntax:
    content: protected string EncodeUrl (string url);
    parameters:
    - id: url
      type: System.String
      description: "字串，包含要編碼的 URL。"
    return:
      type: System.String
      description: "字串，包含已編碼的 URL。"
  overload: System.Web.UI.HtmlTextWriter.EncodeUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.Encoding
  id: Encoding
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: Encoding
  nameWithType: HtmlTextWriter.Encoding
  fullName: System.Web.UI.HtmlTextWriter.Encoding
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得的編碼方式<xref href=&quot;System.Web.UI.HtmlTextWriter&quot;></xref>物件用來寫入網頁內容。"
  remarks: "Encoding 屬性取得其值的基底<xref:System.IO.TextWriter>物件。</xref:System.IO.TextWriter>"
  example:
  - "The following code example shows how to use the Encoding property to write the type of encoding that a custom control uses to render text to the page that contains it.  \n  \n [!code-cpp[HtmlTextWriter_Properties#2](~/add/codesnippet/cpp/p-system.web.ui.htmltext_3_1.cpp)]\n [!code-cs[HtmlTextWriter_Properties#2](~/add/codesnippet/csharp/p-system.web.ui.htmltext_3_1.cs)]\n [!code-vb[HtmlTextWriter_Properties#2](~/add/codesnippet/visualbasic/p-system.web.ui.htmltext_3_1.vb)]"
  syntax:
    content: public override System.Text.Encoding Encoding { get; }
    return:
      type: System.Text.Encoding
      description: "<xref:System.Text.Encoding>標記寫入至頁面。</xref:System.Text.Encoding>"
  overload: System.Web.UI.HtmlTextWriter.Encoding*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.EndRender
  id: EndRender
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: EndRender()
  nameWithType: HtmlTextWriter.EndRender()
  fullName: System.Web.UI.HtmlTextWriter.EndRender()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "通知<xref href=&quot;System.Web.UI.HtmlTextWriter&quot;></xref>物件或衍生的類別，控制已完成轉譯的物件。 您可以使用這個方法，以關閉任何開啟中的標記項目<xref:System.Web.UI.HtmlTextWriter.BeginRender*>方法。</xref:System.Web.UI.HtmlTextWriter.BeginRender*>"
  remarks: "<xref:System.Web.UI.HtmlTextWriter>EndRender 方法類別實作沒有任何功能。</xref:System.Web.UI.HtmlTextWriter> 您必須從衍生類別中覆寫 EndRender<xref:System.Web.UI.HtmlTextWriter>類別，以提供您自己的轉譯功能。</xref:System.Web.UI.HtmlTextWriter>       您可以使用 EndRender 方法，以關閉任何開啟中的標記項目<xref:System.Web.UI.HtmlTextWriter.BeginRender%2A>方法。</xref:System.Web.UI.HtmlTextWriter.BeginRender%2A>"
  syntax:
    content: public virtual void EndRender ();
    parameters: []
  overload: System.Web.UI.HtmlTextWriter.EndRender*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.EndTagLeftChars
  id: EndTagLeftChars
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: EndTagLeftChars
  nameWithType: HtmlTextWriter.EndTagLeftChars
  fullName: System.Web.UI.HtmlTextWriter.EndTagLeftChars
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "代表左的角括號和斜線符號 (&lt;/) 標記項目的結尾標記。"
  remarks: "EndTagLeftChars 欄位由<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>方法來建構標記項目結束標記。</xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>"
  example:
  - "The following code example shows how to render the closing tag of a `<table>` markup element by using the EndTagLeftChars and the <xref:System.Web.UI.HtmlTextWriter.TagRightChar> fields as parameter values in calls to the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method.  \n  \n This code example renders the following markup:  \n  \n `</table>`  \n  \n [!code-vb[MarkupTextWriter_Constants#4](~/add/codesnippet/visualbasic/f-system.web.ui.htmltext_10_1.vb)]\n [!code-cs[MarkupTextWriter_Constants#4](~/add/codesnippet/csharp/f-system.web.ui.htmltext_10_1.cs)]"
  syntax:
    content: public const string EndTagLeftChars;
    return:
      type: System.String
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style)
  id: EnterStyle(System.Web.UI.WebControls.Style)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: EnterStyle(Style)
  nameWithType: HtmlTextWriter.EnterStyle(Style)
  fullName: System.Web.UI.HtmlTextWriter.EnterStyle(Style)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "寫入的開頭標記<xref uid=&quot;langword_csharp_&lt;span&gt;&quot; name=&quot;&lt;span&gt;&quot; href=&quot;&quot;></xref>項目，其中包含實作的配置和字元格式的指定樣式的屬性。"
  remarks: "使用 EnterStyle 方法套用至標記的區塊的樣式，例如 背景色彩或框線寬度。       EnterStyle 和<xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A>方法可讓裝置配接器或控制項，來建立使用指定樣式的字元格式的標記。</xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> 使用相同的值為`style`EnterStyle 方法讓您在對應中<xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A>方法。</xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A>       EnterStyle 方法的多載 EnterStyle 呈現的開頭標記`<span>`項目。 這個方法將其加入必要的屬性和樣式屬性的開頭標記`<span>`項目以顯示所指定的設定<xref:System.Web.UI.WebControls.Style>物件。</xref:System.Web.UI.WebControls.Style> 如果您想要呈現包含屬性和樣式屬性，請使用不同的標記項目<xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29>多載。</xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29>"
  example:
  - "The following code example demonstrates how to use a custom class named `TextSample`, derived from the <xref:System.Web.UI.WebControls.WebControl> class, that uses the EnterStyle method to apply a <xref:System.Web.UI.WebControls.Style.ForeColor%2A> style to a string of text.  \n  \n The EnterStyle method renders the HTML `<span style=\"color:Navy;\">`. The <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> method call closes the `<span>` element after the text has been rendered.  \n  \n [!code-vb[System.Web.UI.HtmlTextWriter_EnterStyle#1](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_43_1.vb)]"
  syntax:
    content: public virtual void EnterStyle (System.Web.UI.WebControls.Style style);
    parameters:
    - id: style
      type: System.Web.UI.WebControls.Style
      description: "A <xref href=&quot;System.Web.UI.WebControls.Style&quot;> </xref>指定的配置和格式開始套用區塊的標記。"
  overload: System.Web.UI.HtmlTextWriter.EnterStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)
  id: EnterStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: EnterStyle(Style,HtmlTextWriterTag)
  nameWithType: HtmlTextWriter.EnterStyle(Style,HtmlTextWriterTag)
  fullName: System.Web.UI.HtmlTextWriter.EnterStyle(Style,HtmlTextWriterTag)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "寫入標記項目開頭標記，其中包含實作版面配置的屬性和字元格式的指定樣式。"
  remarks: "使用 EnterStyle 方法套用至標記的區塊的樣式，例如 背景色彩或框線寬度。       EnterStyle 和<xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A>方法可讓裝置配接器或控制項，來建立使用指定樣式的字元格式的標記。</xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> 使用相同的值為`style`EnterStyle 方法讓您在對應中<xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A>方法。</xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A>       <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A>EnterStyle 方法的多載會呈現指定的項目之開頭標記`tag`參數。</xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> EnterStyle 方法接著會將必要屬性和樣式屬性所指定要顯示的設定項目開頭標記<xref:System.Web.UI.WebControls.Style>物件。</xref:System.Web.UI.WebControls.Style> 使用<xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%29>多載來呈現的開頭標記`<span>`項目。</xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%29>"
  example:
  - "The following code example demonstrates how to use a custom class named `TextSample`, derived from the <xref:System.Web.UI.WebControls.WebControl> class, that uses the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method to apply a <xref:System.Web.UI.WebControls.Style.ForeColor%2A> style to a string of text.  \n  \n The <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method renders the HTML`<span style=\"color:Navy;\">`. The <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> method call closes the `<span>` element after the text has been rendered.  \n  \n [!code-vb[System.Web.UI.HtmlTextWriter_EnterStyle#1](~/add/codesnippet/visualbasic/92807ec1-50d1-4344-bc65-_1.vb)]"
  syntax:
    content: public virtual void EnterStyle (System.Web.UI.WebControls.Style style, System.Web.UI.HtmlTextWriterTag tag);
    parameters:
    - id: style
      type: System.Web.UI.WebControls.Style
      description: "A <xref href=&quot;System.Web.UI.WebControls.Style&quot;> </xref>指定的配置和格式開始套用區塊的標記。"
    - id: tag
      type: System.Web.UI.HtmlTextWriterTag
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriterTag&quot;> </xref> ，指定將包含樣式物件中指定的標記項目之開頭標記`style`。"
  overload: System.Web.UI.HtmlTextWriter.EnterStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.EqualsChar
  id: EqualsChar
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: EqualsChar
  nameWithType: HtmlTextWriter.EqualsChar
  fullName: System.Web.UI.HtmlTextWriter.EqualsChar
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "表示等號 (<xref uid=&quot;langword_csharp_=&quot; name=&quot;=&quot; href=&quot;&quot;></xref>)。"
  remarks: "您可能想要使用<xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString>欄位，而不是建構屬性值的開始分隔符號時 EqualsChar 欄位。</xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString>"
  example:
  - "The following code example shows how to render the `src` attribute and part of its value for an `<img>` element. The code uses the EqualsChar field in a <xref:System.Web.UI.HtmlTextWriter.Write%2A> method call to render the equal sign (=) between the `src` attribute and its value.  \n  \n This code example renders the following markup:  \n  \n `src=\"/images/`  \n  \n [!code-cs[MarkupTextWriter_Constants#10](~/add/codesnippet/csharp/f-system.web.ui.htmltext_2_1.cs)]\n [!code-vb[MarkupTextWriter_Constants#10](~/add/codesnippet/visualbasic/f-system.web.ui.htmltext_2_1.vb)]"
  syntax:
    content: public const char EqualsChar;
    return:
      type: System.Char
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString
  id: EqualsDoubleQuoteString
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: EqualsDoubleQuoteString
  nameWithType: HtmlTextWriter.EqualsDoubleQuoteString
  fullName: System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "表示等號 （=） 和雙引號 （&quot;） 中的字串一起 (=&quot;)。"
  remarks: "EqualsDoubleQuoteString 欄位由<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>和<xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A>方法，來建構屬性值的開始分隔符號。</xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> </xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>"
  example:
  - "The following code example shows how to render a `border` attribute for a `<table>` element. The code calls the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render the attribute and its value and uses the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render the EqualsDoubleQuoteString and <xref:System.Web.UI.HtmlTextWriter.DoubleQuoteChar> fields.  \n  \n This code example renders the following markup:  \n  \n `border=\"1\"`  \n  \n [!code-vb[MarkupTextWriter_Constants#6](~/add/codesnippet/visualbasic/f-system.web.ui.htmltext_5_1.vb)]\n [!code-cs[MarkupTextWriter_Constants#6](~/add/codesnippet/csharp/f-system.web.ui.htmltext_5_1.cs)]"
  syntax:
    content: public const string EqualsDoubleQuoteString;
    return:
      type: System.String
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style)
  id: ExitStyle(System.Web.UI.WebControls.Style)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: ExitStyle(Style)
  nameWithType: HtmlTextWriter.ExitStyle(Style)
  fullName: System.Web.UI.HtmlTextWriter.ExitStyle(Style)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "寫入結尾標記的<xref uid=&quot;langword_csharp_&lt;span&gt;&quot; name=&quot;&lt;span&gt;&quot; href=&quot;&quot;></xref>結尾指定的配置與字元格式的項目。"
  remarks: "ExitStyle 方法的多載 ExitStyle 呈現的結尾標記`<span>`項目的結尾標記的控制項之後，關閉項目開啟由相對應<xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A>呼叫。</xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A>       ExitStyle 和<xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A>方法讓裝置配接器或控制項建立的開始和結束使用指定樣式的字元格式的區塊的標記。</xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> 使用相同的值為`style`中<xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A>您在對應的 ExitStyle 方法中使用的方法。</xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A>"
  example:
  - "The following code example demonstrates how to use a custom class named `TextSample`, derived from the <xref:System.Web.UI.WebControls.WebControl> class, that uses the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method to apply a <xref:System.Web.UI.WebControls.Style.ForeColor%2A> style to a string of text.  \n  \n The <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method renders the HTML `<span style=\"color:Navy;\">`. The ExitStyle method call closes the `<span>` element after the text has been rendered.  \n  \n [!code-vb[System.Web.UI.HtmlTextWriter_EnterStyle#1](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_32_1.vb)]"
  syntax:
    content: public virtual void ExitStyle (System.Web.UI.WebControls.Style style);
    parameters:
    - id: style
      type: System.Web.UI.WebControls.Style
      description: "A <xref href=&quot;System.Web.UI.WebControls.Style&quot;> </xref>指定關閉的版面配置和格式。"
  overload: System.Web.UI.HtmlTextWriter.ExitStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)
  id: ExitStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: ExitStyle(Style,HtmlTextWriterTag)
  nameWithType: HtmlTextWriter.ExitStyle(Style,HtmlTextWriterTag)
  fullName: System.Web.UI.HtmlTextWriter.ExitStyle(Style,HtmlTextWriterTag)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "寫入項目的結尾標記指定的標記以結束指定的配置與字元格式。"
  remarks: "ExitStyle 方法的多載 ExitStyle 呈現所指定項目的結尾標記`tag`控制項的結尾標記之後, 關閉已開啟由相對應的項目<xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29>方法呼叫。</xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29>       ExitStyle 和<xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A>方法讓裝置配接器或控制項建立的開始和結束使用指定樣式的字元格式的區塊的標記。</xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> 使用相同的值為`style`中<xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A>您在對應的 ExitStyle 方法中使用的方法。</xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A>"
  example:
  - "The following code example demonstrates how to use a custom class named `TextSample`, derived from the <xref:System.Web.UI.WebControls.WebControl> class, that uses the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method to apply a <xref:System.Web.UI.WebControls.Style.ForeColor%2A> style to a string of text.  \n  \n The <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method renders the HTML `<span style=\"color:Navy;\">`. The <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> method call closes the `<span>` element after the text has been rendered.  \n  \n [!code-vb[System.Web.UI.HtmlTextWriter_EnterStyle#1](~/add/codesnippet/visualbasic/5d790280-f115-4c9e-8ee8-_1.vb)]"
  syntax:
    content: public virtual void ExitStyle (System.Web.UI.WebControls.Style style, System.Web.UI.HtmlTextWriterTag tag);
    parameters:
    - id: style
      type: System.Web.UI.WebControls.Style
      description: "A <xref href=&quot;System.Web.UI.WebControls.Style&quot;> </xref>指定的配置和停止將套用至輸出文字格式。"
    - id: tag
      type: System.Web.UI.HtmlTextWriterTag
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriterTag&quot;> </xref> ，指定包含套用指定的樣式屬性的標記項目的結尾標記。 這必須符合傳入對應的索引鍵<xref:System.Web.UI.HtmlTextWriter.EnterStyle*>呼叫。</xref:System.Web.UI.HtmlTextWriter.EnterStyle*>"
  overload: System.Web.UI.HtmlTextWriter.ExitStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.FilterAttributes
  id: FilterAttributes
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: FilterAttributes()
  nameWithType: HtmlTextWriter.FilterAttributes()
  fullName: System.Web.UI.HtmlTextWriter.FilterAttributes()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "移除所有的頁面或 Web 伺服器控制項內容的所有標記和樣式屬性。"
  remarks: "標記項目上所呈現的屬性之前，會呼叫 FilterAttributes 方法。 FilterAttributes 方法又呼叫<xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A>和<xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A>方法對於每個屬性和樣式，來呈現。</xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A> </xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A>"
  example:
  - "The following code example shows how to use a custom class, derived from the <xref:System.Web.UI.HtmlTextWriter> class, that overrides the FilterAttributes method. When called, the FilterAttributes override checks whether the text writer renders any `<label>` or `<a>` elements:  \n  \n-   If a `<label>` element is being rendered, the FilterAttributes method checks whether a `style` attribute is rendered on the element and, if not, creates a `style` attribute and sets it to `color: blue`.  \n  \n-   If an `<a>` element is being rendered, the FilterAttributes method determines whether an `href` attribute is included and, if not, adds an `href` to the URL http://www.cohowinery.com.  \n  \n [!code-cs[HtmlTextWriter_Methods#4](~/add/codesnippet/csharp/m-system.web.ui.htmltext_16_1.cs)]\n [!code-vb[HtmlTextWriter_Methods#4](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_16_1.vb)]\n [!code-cpp[HtmlTextWriter_Methods#4](~/add/codesnippet/cpp/m-system.web.ui.htmltext_16_1.cpp)]"
  syntax:
    content: protected virtual void FilterAttributes ();
    parameters: []
  overload: System.Web.UI.HtmlTextWriter.FilterAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.Flush
  id: Flush
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: Flush()
  nameWithType: HtmlTextWriter.Flush()
  fullName: System.Web.UI.HtmlTextWriter.Flush()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "清除目前的所有緩衝區<xref href=&quot;System.Web.UI.HtmlTextWriter&quot;></xref>物件和任何緩衝資料全部寫入輸出資料流的原因。"
  remarks: "<xref:System.Web.UI.HtmlTextWriter>排清方法類別實作只會呼叫<xref:System.IO.TextWriter.Flush%2A>基底方法。</xref:System.IO.TextWriter.Flush%2A> </xref:System.Web.UI.HtmlTextWriter>"
  syntax:
    content: public override void Flush ();
    parameters: []
  overload: System.Web.UI.HtmlTextWriter.Flush*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.GetAttributeKey(System.String)
  id: GetAttributeKey(System.String)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: GetAttributeKey(String)
  nameWithType: HtmlTextWriter.GetAttributeKey(String)
  fullName: System.Web.UI.HtmlTextWriter.GetAttributeKey(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得對應<xref href=&quot;System.Web.UI.HtmlTextWriterAttribute&quot;></xref>指定之屬性的列舉值。"
  remarks: "如果`attrName`是`null`或空字串 (&quot;&quot;)，或輸入值-1，屬性名稱的資料表中找不到<xref:System.Web.UI.HtmlTextWriterAttribute>物件，就會傳回。</xref:System.Web.UI.HtmlTextWriterAttribute>"
  example:
  - "The following code example demonstrates how to use a class, derived from the <xref:System.Web.UI.HtmlTextWriter> class, that overrides the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method. The override checks whether `tagKey` is equal to the <xref:System.Web.UI.HtmlTextWriterTag> field, which indicates that a `<font>` markup element will be rendered. If so, the override calls the <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A> method to find out whether the `<font>` element contains a <xref:System.Web.UI.HtmlTextWriterAttribute> attribute. If the <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A> returns `false`, the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method calls the GetAttributeKey method, which defines the <xref:System.Web.UI.HtmlTextWriterAttribute> and sets its value to `30pt`.  \n  \n [!code-cs[HtmlTextWriter_Methods#3](~/add/codesnippet/csharp/m-system.web.ui.htmltext_9_1.cs)]\n [!code-vb[HtmlTextWriter_Methods#3](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_9_1.vb)]\n [!code-cpp[HtmlTextWriter_Methods#3](~/add/codesnippet/cpp/m-system.web.ui.htmltext_9_1.cpp)]"
  syntax:
    content: protected System.Web.UI.HtmlTextWriterAttribute GetAttributeKey (string attrName);
    parameters:
    - id: attrName
      type: System.String
      description: "字串，包含要取得屬性<xref href=&quot;System.Web.UI.HtmlTextWriterAttribute&quot;> </xref>。"
    return:
      type: System.Web.UI.HtmlTextWriterAttribute
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriterAttribute&quot;> </xref>列舉值，指定的屬性; 否則無效<xref href=&quot;System.Web.UI.HtmlTextWriterAttribute&quot;></xref>值如果屬性不是列舉的成員。"
  overload: System.Web.UI.HtmlTextWriter.GetAttributeKey*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.GetAttributeName(System.Web.UI.HtmlTextWriterAttribute)
  id: GetAttributeName(System.Web.UI.HtmlTextWriterAttribute)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: GetAttributeName(HtmlTextWriterAttribute)
  nameWithType: HtmlTextWriter.GetAttributeName(HtmlTextWriterAttribute)
  fullName: System.Web.UI.HtmlTextWriter.GetAttributeName(HtmlTextWriterAttribute)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得與指定相關聯的標記屬性的名稱<xref href=&quot;System.Web.UI.HtmlTextWriterAttribute&quot;></xref>值。"
  remarks: "GetAttributeName 方法會傳回空字串 (&quot;&quot;)，如果`attrKey`不是有效<xref:System.Web.UI.HtmlTextWriterAttribute>值。</xref:System.Web.UI.HtmlTextWriterAttribute>"
  example:
  - "The following code example shows how to use the GetAttributeName method to convert a <xref:System.Web.UI.HtmlTextWriterAttribute> enumeration value to its string name.  \n  \n [!code-vb[HtmlTextWriter_Methods3#6](~/add/codesnippet/visualbasic/fd0863d4-1999-4326-849f-_1.vb)]\n [!code-cpp[HtmlTextWriter_Methods3#6](~/add/codesnippet/cpp/fd0863d4-1999-4326-849f-_1.cpp)]\n [!code-cs[HtmlTextWriter_Methods3#6](~/add/codesnippet/csharp/fd0863d4-1999-4326-849f-_1.cs)]"
  syntax:
    content: protected string GetAttributeName (System.Web.UI.HtmlTextWriterAttribute attrKey);
    parameters:
    - id: attrKey
      type: System.Web.UI.HtmlTextWriterAttribute
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriterAttribute&quot;> </xref>取得標記屬性名稱。"
    return:
      type: System.String
      description: "字串，包含標記屬性的名稱。"
  overload: System.Web.UI.HtmlTextWriter.GetAttributeName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.GetStyleKey(System.String)
  id: GetStyleKey(System.String)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: GetStyleKey(String)
  nameWithType: HtmlTextWriter.GetStyleKey(String)
  fullName: System.Web.UI.HtmlTextWriter.GetStyleKey(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得<xref href=&quot;System.Web.UI.HtmlTextWriterStyle&quot;></xref>指定樣式的列舉值。"
  remarks: "GetStyleKey 方法會傳回值-1 的型別為<xref:System.Web.UI.HtmlTextWriterStyle>值，如果`styleName`並未對應到任何<xref:System.Web.UI.HtmlTextWriterStyle>列舉值。</xref:System.Web.UI.HtmlTextWriterStyle> </xref:System.Web.UI.HtmlTextWriterStyle>"
  example:
  - "The following code example demonstrates how to override the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method in a class derived from the <xref:System.Web.UI.HtmlTextWriter> class. The <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> override determines whether a `<label>` markup will be rendered, and, if so, checks the element for a <xref:System.Web.UI.HtmlTextWriterStyle> attribute. If a <xref:System.Web.UI.HtmlTextWriterStyle> attribute has not been defined, the GetStyleKey method is used as the first parameter in a call to the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method to add a <xref:System.Web.UI.HtmlTextWriterStyle> attribute to a `<label>` markup element and set the <xref:System.Web.UI.HtmlTextWriterStyle> attribute to `red`.  \n  \n [!code-cs[HtmlTextWriter_Methods#1](~/add/codesnippet/csharp/m-system.web.ui.htmltext_14_1.cs)]\n [!code-vb[HtmlTextWriter_Methods#1](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_14_1.vb)]\n [!code-cpp[HtmlTextWriter_Methods#1](~/add/codesnippet/cpp/m-system.web.ui.htmltext_14_1.cpp)]"
  syntax:
    content: protected System.Web.UI.HtmlTextWriterStyle GetStyleKey (string styleName);
    parameters:
    - id: styleName
      type: System.String
      description: "要取得之樣式屬性<xref href=&quot;System.Web.UI.HtmlTextWriterStyle&quot;> </xref>。"
    return:
      type: System.Web.UI.HtmlTextWriterStyle
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriterStyle&quot;> </xref>列舉值對應至<code> styleName </code>。"
  overload: System.Web.UI.HtmlTextWriter.GetStyleKey*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.GetStyleName(System.Web.UI.HtmlTextWriterStyle)
  id: GetStyleName(System.Web.UI.HtmlTextWriterStyle)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: GetStyleName(HtmlTextWriterStyle)
  nameWithType: HtmlTextWriter.GetStyleName(HtmlTextWriterStyle)
  fullName: System.Web.UI.HtmlTextWriter.GetStyleName(HtmlTextWriterStyle)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得與指定相關聯的標記樣式屬性名稱<xref href=&quot;System.Web.UI.HtmlTextWriterStyle&quot;></xref>列舉值。"
  remarks: "如果`styleKey`不是有效<xref:System.Web.UI.HtmlTextWriterStyle>物件 GetStyleName 方法會傳回空字串 (&quot;&quot;)。</xref:System.Web.UI.HtmlTextWriterStyle>"
  example:
  - "The following code example shows how to check whether a `<label>` element is being rendered. If so, it checks whether a <xref:System.Web.UI.HtmlTextWriterStyle> style attribute has been defined on the element. If the attribute has not been defined, the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method is called and the GetStyleName method converts the <xref:System.Web.UI.HtmlTextWriterStyle> enumeration member into its string representation to pass to the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method.  \n  \n [!code-vb[HtmlTextWriter_Methods3#4](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_29_1.vb)]\n [!code-cpp[HtmlTextWriter_Methods3#4](~/add/codesnippet/cpp/m-system.web.ui.htmltext_29_1.cpp)]\n [!code-cs[HtmlTextWriter_Methods3#4](~/add/codesnippet/csharp/m-system.web.ui.htmltext_29_1.cs)]"
  syntax:
    content: protected string GetStyleName (System.Web.UI.HtmlTextWriterStyle styleKey);
    parameters:
    - id: styleKey
      type: System.Web.UI.HtmlTextWriterStyle
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriterStyle&quot;> </xref>取得樣式屬性名稱。"
    return:
      type: System.String
      description: "與相關聯之樣式屬性名稱<xref href=&quot;System.Web.UI.HtmlTextWriterStyle&quot;></xref>中指定的列舉值<code> styleKey </code>。"
  overload: System.Web.UI.HtmlTextWriter.GetStyleName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.GetTagKey(System.String)
  id: GetTagKey(System.String)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: GetTagKey(String)
  nameWithType: HtmlTextWriter.GetTagKey(String)
  fullName: System.Web.UI.HtmlTextWriter.GetTagKey(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得<xref href=&quot;System.Web.UI.HtmlTextWriterTag&quot;></xref>與指定的標記項目相關聯的列舉值。"
  remarks: "如果`tagName`是`null`，空字串 (&quot;&quot;)，或找不標記的標記名稱的資料表中 GetTagKey 方法會傳回<xref:System.Web.UI.HtmlTextWriterTag>欄位。</xref:System.Web.UI.HtmlTextWriterTag>"
  example:
  - "The following code example shows how to override the overload of the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method that takes a string as its parameter. The string is passed to the GetTagKey method, which converts it to the corresponding <xref:System.Web.UI.HtmlTextWriterTag> enumeration member, and then passes that to the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> overload that takes a <xref:System.Web.UI.HtmlTextWriterTag> enumeration value as a parameter.  \n  \n [!code-vb[HtmlTextWriter_Methods3#8](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_17_1.vb)]\n [!code-cpp[HtmlTextWriter_Methods3#8](~/add/codesnippet/cpp/m-system.web.ui.htmltext_17_1.cpp)]\n [!code-cs[HtmlTextWriter_Methods3#8](~/add/codesnippet/csharp/m-system.web.ui.htmltext_17_1.cs)]"
  syntax:
    content: protected virtual System.Web.UI.HtmlTextWriterTag GetTagKey (string tagName);
    parameters:
    - id: tagName
      type: System.String
      description: "要取得的標記項目<xref href=&quot;System.Web.UI.HtmlTextWriterTag&quot;> </xref>。"
    return:
      type: System.Web.UI.HtmlTextWriterTag
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriterTag&quot;> </xref>列舉值; 否則如果<code> tagName </code>所關聯的特定<xref href=&quot;System.Web.UI.HtmlTextWriterTag&quot;></xref>值<xref href=&quot;System.Web.UI.HtmlTextWriterTag&quot;> </xref>。"
  overload: System.Web.UI.HtmlTextWriter.GetTagKey*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.GetTagName(System.Web.UI.HtmlTextWriterTag)
  id: GetTagName(System.Web.UI.HtmlTextWriterTag)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: GetTagName(HtmlTextWriterTag)
  nameWithType: HtmlTextWriter.GetTagName(HtmlTextWriterTag)
  fullName: System.Web.UI.HtmlTextWriter.GetTagName(HtmlTextWriterTag)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得與指定相關聯的標記項目<xref href=&quot;System.Web.UI.HtmlTextWriterTag&quot;></xref>列舉值。"
  remarks: "如果`tagKey`不是有效<xref:System.Web.UI.HtmlTextWriterTag>值，GetTagName 方法會傳回空字串 (&quot;&quot;)。</xref:System.Web.UI.HtmlTextWriterTag>"
  example:
  - "The following code example demonstrates how to close a `<font>` element by using the <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> method. The <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> method calls the GetTagName method to convert the <xref:System.Web.UI.HtmlTextWriterTag> value to a string.  \n  \n [!code-vb[HtmlTextWriter_Methods3#7](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_40_1.vb)]\n [!code-cpp[HtmlTextWriter_Methods3#7](~/add/codesnippet/cpp/m-system.web.ui.htmltext_40_1.cpp)]\n [!code-cs[HtmlTextWriter_Methods3#7](~/add/codesnippet/csharp/m-system.web.ui.htmltext_40_1.cs)]"
  syntax:
    content: protected virtual string GetTagName (System.Web.UI.HtmlTextWriterTag tagKey);
    parameters:
    - id: tagKey
      type: System.Web.UI.HtmlTextWriterTag
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriterTag&quot;> </xref>取得標記項目。"
    return:
      type: System.String
      description: "字串，表示標記的項目。"
  overload: System.Web.UI.HtmlTextWriter.GetTagName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.Indent
  id: Indent
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: Indent
  nameWithType: HtmlTextWriter.Indent
  fullName: System.Web.UI.HtmlTextWriter.Indent
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得或設定縮排每一行標記開頭的索引標籤位置的數目。"
  remarks: "縮排由所指定的字串寫入`tabString`參數<xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29>建構函式的縮排屬性所指定的次數。</xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29>       Indent 屬性設定為負數值，如果在儲存之前會變更為 0。"
  example:
  - "The following code example demonstrates how to increment the value that is assigned to the Indent property when attributes have been added to the opening tag of a `<span>` element and the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method has been called. This increases the indentation for any markup that is rendered inside the `<span>` element.  \n  \n [!code-cs[MarkupTextWriter_Samples1#2](~/add/codesnippet/csharp/p-system.web.ui.htmltext_1_1.cs)]\n [!code-vb[MarkupTextWriter_Samples1#2](~/add/codesnippet/visualbasic/p-system.web.ui.htmltext_1_1.vb)]"
  syntax:
    content: public int Indent { get; set; }
    return:
      type: System.Int32
      description: "若要縮排每一行的索引標籤位置數目。"
  overload: System.Web.UI.HtmlTextWriter.Indent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.InnerWriter
  id: InnerWriter
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: InnerWriter
  nameWithType: HtmlTextWriter.InnerWriter
  fullName: System.Web.UI.HtmlTextWriter.InnerWriter
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得或設定文字寫入器寫入的標記項目的內部的內容。"
  remarks: "內部標記的內容是找到開頭和結尾標記的標記語言項目之間的文字。       如果 InnerWriter 屬性設定為<xref:System.IO.TextWriter>的執行個體的物件<xref:System.Web.HttpWriter>類別，會說明這項事實並儲存個別的參考。</xref:System.Web.HttpWriter> </xref:System.IO.TextWriter>"
  example:
  - "The following code example shows how to use a custom Web server control, derived from the <xref:System.Web.UI.WebControls.WebControl> class, that overrides the <xref:System.Web.UI.Control.Render%2A> method. It uses the <xref:System.Web.UI.HtmlTextWriter> class to write a `<font>` element. After it writes the opening tag of the element, it uses the InnerWriter property to write the string `\"<br> The time on the server:\"` and concatenates this string with the value of the <xref:System.DateTime.Now%2A?displayProperty=fullName> property.  \n  \n [!code-cpp[HtmlTextWriter_Properties#3](~/add/codesnippet/cpp/p-system.web.ui.htmltext_0_1.cpp)]\n [!code-cs[HtmlTextWriter_Properties#3](~/add/codesnippet/csharp/p-system.web.ui.htmltext_0_1.cs)]\n [!code-vb[HtmlTextWriter_Properties#3](~/add/codesnippet/visualbasic/p-system.web.ui.htmltext_0_1.vb)]"
  syntax:
    content: public System.IO.TextWriter InnerWriter { get; set; }
    return:
      type: System.IO.TextWriter
      description: "A<xref:System.IO.TextWriter>寫入內部標記內容。</xref:System.IO.TextWriter>"
  overload: System.Web.UI.HtmlTextWriter.InnerWriter*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute)
  id: IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: IsAttributeDefined(HtmlTextWriterAttribute)
  nameWithType: HtmlTextWriter.IsAttributeDefined(HtmlTextWriterAttribute)
  fullName: System.Web.UI.HtmlTextWriter.IsAttributeDefined(HtmlTextWriterAttribute)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "決定是否呈現指定的標記屬性和其值的下一個呼叫期間<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*>方法。</xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*>"
  remarks: "若要取得的值指派給<xref:System.Web.UI.HtmlTextWriterAttribute>物件，請使用<xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%40%29>而不是在這個多載。</xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%40%29> </xref:System.Web.UI.HtmlTextWriterAttribute>"
  example:
  - "The following code example shows how to use an override of the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method in a class that inherits from the <xref:System.Web.UI.HtmlTextWriter> class. The <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> override checks whether a `<font>` markup element will be rendered. If so, the override calls the IsAttributeDefined method to check whether the `<font>` element contains a <xref:System.Web.UI.HtmlTextWriterAttribute> attribute. If not, the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method calls the <xref:System.Web.UI.HtmlTextWriter.GetAttributeKey%2A> method, which defines the <xref:System.Web.UI.HtmlTextWriterAttribute> attribute and sets its value to `30pt`.  \n  \n [!code-cs[HtmlTextWriter_Methods#3](~/add/codesnippet/csharp/cbdca703-4aa0-4111-9334-_1.cs)]\n [!code-vb[HtmlTextWriter_Methods#3](~/add/codesnippet/visualbasic/cbdca703-4aa0-4111-9334-_1.vb)]\n [!code-cpp[HtmlTextWriter_Methods#3](~/add/codesnippet/cpp/cbdca703-4aa0-4111-9334-_1.cpp)]"
  syntax:
    content: protected bool IsAttributeDefined (System.Web.UI.HtmlTextWriterAttribute key);
    parameters:
    - id: key
      type: System.Web.UI.HtmlTextWriterAttribute
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriterAttribute&quot;> </xref>標記屬性相關聯。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果要將屬性轉譯的下一個呼叫期間<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*>方法，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*>"
  overload: System.Web.UI.HtmlTextWriter.IsAttributeDefined*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute,System.String@)
  id: IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute,System.String@)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: IsAttributeDefined(HtmlTextWriterAttribute,String)
  nameWithType: HtmlTextWriter.IsAttributeDefined(HtmlTextWriterAttribute,String)
  fullName: System.Web.UI.HtmlTextWriter.IsAttributeDefined(HtmlTextWriterAttribute,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "決定是否呈現指定的標記屬性和其值的下一個呼叫期間<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*>方法。</xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*>"
  remarks: "如果 IsAttributeDefined 方法傳回`true`，指派給值<xref:System.Web.UI.HtmlTextWriterAttribute>中傳回物件`value`參數。</xref:System.Web.UI.HtmlTextWriterAttribute>"
  syntax:
    content: protected bool IsAttributeDefined (System.Web.UI.HtmlTextWriterAttribute key, out string value);
    parameters:
    - id: key
      type: System.Web.UI.HtmlTextWriterAttribute
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriterAttribute&quot;> </xref>標記屬性相關聯。"
    - id: value
      type: System.String
      description: "指派給屬性的值。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果要將屬性轉譯的下一個呼叫期間<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*>方法，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*>"
  overload: System.Web.UI.HtmlTextWriter.IsAttributeDefined*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle)
  id: IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: IsStyleAttributeDefined(HtmlTextWriterStyle)
  nameWithType: HtmlTextWriter.IsStyleAttributeDefined(HtmlTextWriterStyle)
  fullName: System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(HtmlTextWriterStyle)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "判斷指定的標記樣式屬性，是否要呈現的下一個呼叫期間<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*>方法。</xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*>"
  remarks: "若要取得使用指定的樣式屬性呈現的值，請使用<xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%28System.Web.UI.HtmlTextWriterStyle%2CSystem.String%40%29>IsStyleAttributeDefined 方法的多載。</xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%28System.Web.UI.HtmlTextWriterStyle%2CSystem.String%40%29>"
  example:
  - "The following code example shows how to check whether a `<label>` element is being rendered. If so, the IsStyleAttributeDefined method checks whether a <xref:System.Web.UI.HtmlTextWriterStyle> style attribute has been defined on the element. If the <xref:System.Web.UI.HtmlTextWriterStyle> attribute has not been defined, the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method defines the <xref:System.Web.UI.HtmlTextWriterStyle> attribute and sets its value to `red`.  \n  \n [!code-vb[HtmlTextWriter_Methods3#4](~/add/codesnippet/visualbasic/47188de5-abf6-4bc4-9c12-_1.vb)]\n [!code-cpp[HtmlTextWriter_Methods3#4](~/add/codesnippet/cpp/47188de5-abf6-4bc4-9c12-_1.cpp)]\n [!code-cs[HtmlTextWriter_Methods3#4](~/add/codesnippet/csharp/47188de5-abf6-4bc4-9c12-_1.cs)]"
  syntax:
    content: protected bool IsStyleAttributeDefined (System.Web.UI.HtmlTextWriterStyle key);
    parameters:
    - id: key
      type: System.Web.UI.HtmlTextWriterStyle
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriterStyle&quot;> </xref>屬性相關聯。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果屬性將會在下次呼叫期間轉譯<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*>方法，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*>"
  overload: System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle,System.String@)
  id: IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle,System.String@)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: IsStyleAttributeDefined(HtmlTextWriterStyle,String)
  nameWithType: HtmlTextWriter.IsStyleAttributeDefined(HtmlTextWriterStyle,String)
  fullName: System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(HtmlTextWriterStyle,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "決定是否呈現指定的標記樣式屬性和其值的下一個呼叫期間<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*>方法。</xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*>"
  remarks: "如果 IsStyleAttributeDefined 方法傳回`true`，指派給值<xref:System.Web.UI.HtmlTextWriterStyle>屬性中傳回`value`參數。</xref:System.Web.UI.HtmlTextWriterStyle>"
  syntax:
    content: protected bool IsStyleAttributeDefined (System.Web.UI.HtmlTextWriterStyle key, out string value);
    parameters:
    - id: key
      type: System.Web.UI.HtmlTextWriterStyle
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriterStyle&quot;> </xref>屬性相關聯。"
    - id: value
      type: System.String
      description: "指派給之樣式屬性的值。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果將呈現的屬性和其值的下一個呼叫期間<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*>方法，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*>"
  overload: System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.IsValidFormAttribute(System.String)
  id: IsValidFormAttribute(System.String)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: IsValidFormAttribute(String)
  nameWithType: HtmlTextWriter.IsValidFormAttribute(String)
  fullName: System.Web.UI.HtmlTextWriter.IsValidFormAttribute(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "檢查以確保它可以在開頭標記內會呈現屬性<xref uid=&quot;langword_csharp_&lt;form&gt;&quot; name=&quot;&lt;form&gt;&quot; href=&quot;&quot;></xref>標記項目。"
  remarks: "<xref:System.Web.UI.HtmlTextWriter>IsValidFormAttribute 方法類別實作會傳回`true`所有屬性。</xref:System.Web.UI.HtmlTextWriter> 覆寫來限制可以轉譯開頭標記內的屬性 IsValidFormAttribute`<form>`項目。"
  syntax:
    content: public virtual bool IsValidFormAttribute (string attribute);
    parameters:
    - id: attribute
      type: System.String
      description: "字串，其中包含要檢查的屬性名稱。"
    return:
      type: System.Boolean
      description: "Always <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.HtmlTextWriter.IsValidFormAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.NewLine
  id: NewLine
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: NewLine
  nameWithType: HtmlTextWriter.NewLine
  fullName: System.Web.UI.HtmlTextWriter.NewLine
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得或設定所使用的行結束字元字串<xref href=&quot;System.Web.UI.HtmlTextWriter&quot;></xref>物件。"
  remarks: "The default line terminator string is a carriage return, followed by a line feed (\"\\r\\n\").  \n  \n The line terminator string is written to the output stream whenever one of the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> methods is called. If the NewLine property is set to `null`, the default new line character is used."
  example:
  - "The following code example shows how to use a custom class, derived from the <xref:System.Web.UI.HtmlTextWriter> class, that overrides the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> method. When called, the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> override checks whether the text writer renders any `<label>` or `<a>` elements. If so, the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> method determines whether a style attribute is defined for the label. If no style is defined, the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> method sets the default value for the `style:color` attribute to blue. The <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> method then uses the NewLine property to insert a line break in the markup tag and writes any other defined attributes.  \n  \n [!code-cs[HtmlTextWriter_Methods#4](~/add/codesnippet/csharp/p-system.web.ui.htmltext_2_1.cs)]\n [!code-vb[HtmlTextWriter_Methods#4](~/add/codesnippet/visualbasic/p-system.web.ui.htmltext_2_1.vb)]\n [!code-cpp[HtmlTextWriter_Methods#4](~/add/codesnippet/cpp/p-system.web.ui.htmltext_2_1.cpp)]"
  syntax:
    content: public override string NewLine { get; set; }
    return:
      type: System.String
      description: "使用目前的行結束字元字串<xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref>。"
  overload: System.Web.UI.HtmlTextWriter.NewLine*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)
  id: OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: OnAttributeRender(String,String,HtmlTextWriterAttribute)
  nameWithType: HtmlTextWriter.OnAttributeRender(String,String,HtmlTextWriterAttribute)
  fullName: System.Web.UI.HtmlTextWriter.OnAttributeRender(String,String,HtmlTextWriterAttribute)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "判斷是否呈現指定的標記屬性和其值在目前的標記項目。"
  remarks: "<xref:System.Web.UI.HtmlTextWriter>類別實作的 OnAttributeRender 方法一律會傳回`true`。</xref:System.Web.UI.HtmlTextWriter> OnAttributeRender 覆寫，可以判斷屬性是否將呈現的頁面。"
  example:
  - "The following code example shows how to override the OnAttributeRender method. If a <xref:System.Web.UI.HtmlTextWriterAttribute> attribute is rendered, but the <xref:System.Web.UI.HtmlTextWriterAttribute> value is not `30pt`, the OnAttributeRender override calls the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method to add a <xref:System.Web.UI.HtmlTextWriterAttribute> attribute and set its value to `30pt`.  \n  \n [!code-cs[MarkupTextWriter_Methods3#5](~/add/codesnippet/csharp/d0e562f6-9a39-4246-a984-_1.cs)]\n [!code-vb[MarkupTextWriter_Methods3#5](~/add/codesnippet/visualbasic/d0e562f6-9a39-4246-a984-_1.vb)]"
  syntax:
    content: protected virtual bool OnAttributeRender (string name, string value, System.Web.UI.HtmlTextWriterAttribute key);
    parameters:
    - id: name
      type: System.String
      description: "字串，包含要呈現的屬性名稱。"
    - id: value
      type: System.String
      description: "字串，包含指派給屬性的值。"
    - id: key
      type: System.Web.UI.HtmlTextWriterAttribute
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriterAttribute&quot;> </xref>標記屬性相關聯。"
    return:
      type: System.Boolean
      description: "Always <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.HtmlTextWriter.OnAttributeRender*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)
  id: OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: OnStyleAttributeRender(String,String,HtmlTextWriterStyle)
  nameWithType: HtmlTextWriter.OnStyleAttributeRender(String,String,HtmlTextWriterStyle)
  fullName: System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(String,String,HtmlTextWriterStyle)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "判斷是否呈現指定的標記樣式屬性和其值在目前的標記項目。"
  remarks: "<xref:System.Web.UI.HtmlTextWriter>類別實作的 OnStyleAttributeRender 方法一律會傳回`true`。</xref:System.Web.UI.HtmlTextWriter> OnStyleAttributeRender 覆寫，可以判斷是否要呈現的樣式屬性頁面。"
  example:
  - "The following code example shows how to override the OnStyleAttributeRender method. If a <xref:System.Web.UI.HtmlTextWriterStyle> style attribute is rendered, but the <xref:System.Web.UI.HtmlTextWriterStyle> value is not `purple`, the OnStyleAttributeRender override uses the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method to set the <xref:System.Web.UI.HtmlTextWriterStyle> attribute to `purple`.  \n  \n [!code-cs[MarkupTextWriter_Methods3#6](~/add/codesnippet/csharp/d9590f65-fa57-44a8-99c7-_1.cs)]\n [!code-vb[MarkupTextWriter_Methods3#6](~/add/codesnippet/visualbasic/d9590f65-fa57-44a8-99c7-_1.vb)]"
  syntax:
    content: protected virtual bool OnStyleAttributeRender (string name, string value, System.Web.UI.HtmlTextWriterStyle key);
    parameters:
    - id: name
      type: System.String
      description: "字串，包含要呈現的樣式屬性名稱。"
    - id: value
      type: System.String
      description: "字串，包含指派給之樣式屬性的值。"
    - id: key
      type: System.Web.UI.HtmlTextWriterStyle
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriterStyle&quot;> </xref>相關聯之樣式屬性。"
    return:
      type: System.Boolean
      description: "Always <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.HtmlTextWriter.OnStyleAttributeRender*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)
  id: OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: OnTagRender(String,HtmlTextWriterTag)
  nameWithType: HtmlTextWriter.OnTagRender(String,HtmlTextWriterTag)
  fullName: System.Web.UI.HtmlTextWriter.OnTagRender(String,HtmlTextWriterTag)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "決定是否要呈現在指定的標記項目提出要求的網頁。"
  remarks: "<xref:System.Web.UI.HtmlTextWriter>類別實作的 OnTagRender 方法一律會傳回`true`。</xref:System.Web.UI.HtmlTextWriter> OnTagRender 覆寫，可以判斷是否要呈現的項目到頁面。"
  example:
  - "The following code example shows how to override the OnTagRender method. If a <xref:System.Web.UI.HtmlTextWriterTag> element is being rendered, the OnTagRender override uses the <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A> method to determine whether a <xref:System.Web.UI.HtmlTextWriterAttribute> attribute is being rendered. If not, it uses the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method to create a <xref:System.Web.UI.HtmlTextWriterAttribute> attribute and set its value to `20pt`.  \n  \n [!code-cs[MarkupTextWriter_Methods3#4](~/add/codesnippet/csharp/e717512e-2198-4ad0-a7c8-_1.cs)]\n [!code-vb[MarkupTextWriter_Methods3#4](~/add/codesnippet/visualbasic/e717512e-2198-4ad0-a7c8-_1.vb)]"
  syntax:
    content: protected virtual bool OnTagRender (string name, System.Web.UI.HtmlTextWriterTag key);
    parameters:
    - id: name
      type: System.String
      description: "字串，包含要呈現的項目名稱。"
    - id: key
      type: System.Web.UI.HtmlTextWriterTag
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriterTag&quot;> </xref>項目相關聯。"
    return:
      type: System.Boolean
      description: "Always <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.HtmlTextWriter.OnTagRender*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.OutputTabs
  id: OutputTabs
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: OutputTabs()
  nameWithType: HtmlTextWriter.OutputTabs()
  fullName: System.Web.UI.HtmlTextWriter.OutputTabs()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "寫入一系列的索引標籤的字串表示一行標記字元的縮排層級。"
  remarks: "The OutputTabs method uses the <xref:System.Web.UI.HtmlTextWriter.Indent%2A> property to determine how many tab strings to write to obtain the desired indentation.  \n  \n The tab string is specified with the <xref:System.Web.UI.HtmlTextWriter.%23ctor%2A> constructor. If no tab string is specified, the <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> constant (`\\t`) is used."
  example:
  - "The following code example shows how to override the OutputTabs method in a class that is derived from the <xref:System.Web.UI.HtmlTextWriter> class. The OutputTabs override always uses the <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> constant to perform the indentation.  \n  \n [!code-cs[HtmlTextWriter_Methods#7](~/add/codesnippet/csharp/m-system.web.ui.htmltext_34_1.cs)]\n [!code-vb[HtmlTextWriter_Methods#7](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_34_1.vb)]\n [!code-cpp[HtmlTextWriter_Methods#7](~/add/codesnippet/cpp/m-system.web.ui.htmltext_34_1.cpp)]"
  syntax:
    content: protected virtual void OutputTabs ();
    parameters: []
  overload: System.Web.UI.HtmlTextWriter.OutputTabs*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.PopEndTag
  id: PopEndTag
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: PopEndTag()
  nameWithType: HtmlTextWriter.PopEndTag()
  fullName: System.Web.UI.HtmlTextWriter.PopEndTag()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "在最近儲存的標記項目移除呈現項目的清單。"
  remarks: "項目會加入所呈現的標記項目的清單<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>方法。</xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>方法的標記項目從清單中移除藉由呼叫沒有方法。</xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>"
  syntax:
    content: protected string PopEndTag ();
    parameters: []
    return:
      type: System.String
      description: "A<xref:System.String>包含最近呈現標記項目。</xref:System.String>"
  overload: System.Web.UI.HtmlTextWriter.PopEndTag*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "呈現項目的清單是空的。"
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.PushEndTag(System.String)
  id: PushEndTag(System.String)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: PushEndTag(String)
  nameWithType: HtmlTextWriter.PushEndTag(String)
  fullName: System.Web.UI.HtmlTextWriter.PushEndTag(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "產生標記項目結束標記時，將儲存在指定的標記項目，以供稍後使用。"
  remarks: "項目會加入至呈現的標記項目清單時<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>方法會呼叫 PushEndTag 方法。</xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>方法的標記項目從清單中移除之後，它會呈現項目的結束標記。</xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>"
  syntax:
    content: protected void PushEndTag (string endTag);
    parameters:
    - id: endTag
      type: System.String
      description: "標記項目的結尾標記。"
  overload: System.Web.UI.HtmlTextWriter.PushEndTag*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.RegisterAttribute(System.String,System.Web.UI.HtmlTextWriterAttribute)
  id: RegisterAttribute(System.String,System.Web.UI.HtmlTextWriterAttribute)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: RegisterAttribute(String,HtmlTextWriterAttribute)
  nameWithType: HtmlTextWriter.RegisterAttribute(String,HtmlTextWriterAttribute)
  fullName: System.Web.UI.HtmlTextWriter.RegisterAttribute(String,HtmlTextWriterAttribute)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "註冊標記屬性是否常值或動態方式產生，從原始程式檔以便可以適當地要求的用戶端呈現。"
  remarks: "預先定義的屬性的 HTML 標記語言所登錄的 RegisterAttribute 方法的呼叫時的第一個<xref:System.Web.UI.HtmlTextWriter>建立物件。</xref:System.Web.UI.HtmlTextWriter> 動態屬性可以在其他時間使用 RegisterAttribute 方法來註冊。       註冊資料表 RegisterAttribute 方法所使用的是`static`，因此註冊的屬性會套用至所有<xref:System.Web.UI.HtmlTextWriter>主機電腦上的物件。</xref:System.Web.UI.HtmlTextWriter>"
  syntax:
    content: protected static void RegisterAttribute (string name, System.Web.UI.HtmlTextWriterAttribute key);
    parameters:
    - id: name
      type: System.String
      description: "字串，包含要註冊的標記屬性的名稱。"
    - id: key
      type: System.Web.UI.HtmlTextWriterAttribute
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriterAttribute&quot;> </xref>對應具有屬性名稱。"
  overload: System.Web.UI.HtmlTextWriter.RegisterAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.RegisterStyle(System.String,System.Web.UI.HtmlTextWriterStyle)
  id: RegisterStyle(System.String,System.Web.UI.HtmlTextWriterStyle)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: RegisterStyle(String,HtmlTextWriterStyle)
  nameWithType: HtmlTextWriter.RegisterStyle(String,HtmlTextWriterStyle)
  fullName: System.Web.UI.HtmlTextWriter.RegisterStyle(String,HtmlTextWriterStyle)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "是否註冊標記樣式屬性在內常值或動態方式產生，從原始程式檔以便可以適當地要求的用戶端呈現。"
  remarks: "HTML 標記語言的預先定義階層式樣式表 (CSS) 屬性所登錄的 RegisterStyle 方法的呼叫時的第一個<xref:System.Web.UI.HtmlTextWriter>建立物件。</xref:System.Web.UI.HtmlTextWriter> 動態樣式屬性可以在其他時間使用 RegisterStyle 方法來註冊。       註冊資料表 RegisterStyle 方法所使用的是`static`，因此註冊的屬性會套用至所有<xref:System.Web.UI.HtmlTextWriter>主機電腦上的物件。</xref:System.Web.UI.HtmlTextWriter>"
  syntax:
    content: protected static void RegisterStyle (string name, System.Web.UI.HtmlTextWriterStyle key);
    parameters:
    - id: name
      type: System.String
      description: "從指定之樣式名稱的來源檔案傳遞的字串。"
    - id: key
      type: System.Web.UI.HtmlTextWriterStyle
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriterStyle&quot;> </xref> ，對應於指定的樣式。"
  overload: System.Web.UI.HtmlTextWriter.RegisterStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.RegisterTag(System.String,System.Web.UI.HtmlTextWriterTag)
  id: RegisterTag(System.String,System.Web.UI.HtmlTextWriterTag)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: RegisterTag(String,HtmlTextWriterTag)
  nameWithType: HtmlTextWriter.RegisterTag(String,HtmlTextWriterTag)
  fullName: System.Web.UI.HtmlTextWriter.RegisterTag(String,HtmlTextWriterTag)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "是否註冊標記，常值或動態方式產生，從原始程式檔以便可以適當地要求的用戶端呈現。"
  remarks: "預先定義的標記的 HTML 語言所登錄的 RegisterTag 方法的呼叫時的第一個<xref:System.Web.UI.HtmlTextWriter>建立物件。</xref:System.Web.UI.HtmlTextWriter> 動態標記可以註冊使用 RegisterTag 方法，在其他時間。       註冊資料表 RegisterTag 方法所使用的是`static`，因此註冊的標記會套用至所有<xref:System.Web.UI.HtmlTextWriter>主機電腦上的物件。</xref:System.Web.UI.HtmlTextWriter>"
  syntax:
    content: protected static void RegisterTag (string name, System.Web.UI.HtmlTextWriterTag key);
    parameters:
    - id: name
      type: System.String
      description: "字串，包含 HTML 標記。"
    - id: key
      type: System.Web.UI.HtmlTextWriterTag
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriterTag&quot;> </xref> ，指定要呈現的項目。"
  overload: System.Web.UI.HtmlTextWriter.RegisterTag*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.RenderAfterContent
  id: RenderAfterContent
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: RenderAfterContent()
  nameWithType: HtmlTextWriter.RenderAfterContent()
  fullName: System.Web.UI.HtmlTextWriter.RenderAfterContent()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "寫入任何文字或標記的輸出資料流發生之後內容和結尾標記的標記項目之前的間距。"
  remarks: "RenderAfterContent 方法很有用，如果您想要將子系項目插入目前的標記項目。"
  example:
  - "The following code example shows how to override the RenderAfterContent method in a class derived from the <xref:System.Web.UI.HtmlTextWriter> class to determine whether a `<label>` element is being rendered. If so, the RenderAfterContent override inserts the closing tag of a `<font>` element immediately before the closing tag of the `<label>` element. If an element other than `<label>` is being rendered, the RenderAfterContent base method is used.  \n  \n [!code-vb[HtmlTextWriter_Methods1#3](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_6_1.vb)]\n [!code-cs[HtmlTextWriter_Methods1#3](~/add/codesnippet/csharp/m-system.web.ui.htmltext_6_1.cs)]\n [!code-cpp[HtmlTextWriter_Methods1#3](~/add/codesnippet/cpp/m-system.web.ui.htmltext_6_1.cpp)]"
  syntax:
    content: protected virtual string RenderAfterContent ();
    parameters: []
    return:
      type: System.String
      description: "字串，包含空格或之後項目的內容寫入的文字。"
  overload: System.Web.UI.HtmlTextWriter.RenderAfterContent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.RenderAfterTag
  id: RenderAfterTag
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: RenderAfterTag()
  nameWithType: HtmlTextWriter.RenderAfterTag()
  fullName: System.Web.UI.HtmlTextWriter.RenderAfterTag()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "寫入任何間距或結尾標記的標記項目之後，就會發生的文字。"
  remarks: "RenderAfterTag 方法很有用，如果您想要的項目標記後轉譯其他結尾標記。"
  example:
  - "The following code example shows how to override the RenderAfterTag method to determine whether a class derived from the <xref:System.Web.UI.HtmlTextWriter> class is rendering a `<label>` element. If so, the RenderAfterTag override inserts the closing tag of a `<font>` element immediately after the `<label>` element. If it is not a `<label>` element, the RenderAfterTag base method is used.  \n  \n [!code-cs[HtmlTextWriter_Methods4#2](~/add/codesnippet/csharp/m-system.web.ui.htmltext_7_1.cs)]\n [!code-vb[HtmlTextWriter_Methods4#2](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_7_1.vb)]\n [!code-cpp[HtmlTextWriter_Methods4#2](~/add/codesnippet/cpp/m-system.web.ui.htmltext_7_1.cpp)]"
  syntax:
    content: protected virtual string RenderAfterTag ();
    parameters: []
    return:
      type: System.String
      description: "間距或要寫入項目的結尾標記之後的文字。"
  overload: System.Web.UI.HtmlTextWriter.RenderAfterTag*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.RenderBeforeContent
  id: RenderBeforeContent
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: RenderBeforeContent()
  nameWithType: HtmlTextWriter.RenderBeforeContent()
  fullName: System.Web.UI.HtmlTextWriter.RenderBeforeContent()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "寫入任何文字或間距的內容之前和之後的標記項目之開頭標記。"
  remarks: "RenderBeforeContent 方法很有用，如果您想要插入目前的標記項目之前的內部標記中的子項目。"
  example:
  - "The following code example shows how to override the RenderBeforeContent method to determine whether a class derived from the <xref:System.Web.UI.HtmlTextWriter> class is about to render a `<label>` element. If so, the RenderBeforeContent override inserts the opening tag of a `<font>` element immediately after the opening tag of the `<label>` element. If it is not a `<label>` element, the RenderBeforeContent base method is used.  \n  \n [!code-vb[HtmlTextWriter_Methods1#2](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_0_1.vb)]\n [!code-cs[HtmlTextWriter_Methods1#2](~/add/codesnippet/csharp/m-system.web.ui.htmltext_0_1.cs)]\n [!code-cpp[HtmlTextWriter_Methods1#2](~/add/codesnippet/cpp/m-system.web.ui.htmltext_0_1.cpp)]"
  syntax:
    content: protected virtual string RenderBeforeContent ();
    parameters: []
    return:
      type: System.String
      description: "文字或寫入項目的內容前的間距。 如果未覆寫，會傳回 RenderBeforeContent <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.HtmlTextWriter.RenderBeforeContent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.RenderBeforeTag
  id: RenderBeforeTag
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: RenderBeforeTag()
  nameWithType: HtmlTextWriter.RenderBeforeTag()
  fullName: System.Web.UI.HtmlTextWriter.RenderBeforeTag()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "寫入任何文字或標記項目之開頭標記之前發生的間距。"
  remarks: "RenderBeforeTag 方法很有用，如果您想要呈現的預期項目開頭標記之前的額外的開頭標記。"
  example:
  - "The following code example shows how to override the RenderBeforeTag method to determine whether a class that is derived from the <xref:System.Web.UI.HtmlTextWriter> class is about to render a `<label>` element. If so, the RenderBeforeTag override inserts the opening tag of a `<font>` element immediately before the `<label>` element. If it is not rendering a `<label>` element, the RenderBeforeTag base method is used.  \n  \n [!code-cs[HtmlTextWriter_Methods4#1](~/add/codesnippet/csharp/m-system.web.ui.htmltext_20_1.cs)]\n [!code-vb[HtmlTextWriter_Methods4#1](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_20_1.vb)]\n [!code-cpp[HtmlTextWriter_Methods4#1](~/add/codesnippet/cpp/m-system.web.ui.htmltext_20_1.cpp)]"
  syntax:
    content: protected virtual string RenderBeforeTag ();
    parameters: []
    return:
      type: System.String
      description: "文字或寫入標記項目開頭標記，然後再間距。 如果未覆寫， <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.HtmlTextWriter.RenderBeforeTag*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.RenderBeginTag(System.String)
  id: RenderBeginTag(System.String)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: RenderBeginTag(String)
  nameWithType: HtmlTextWriter.RenderBeginTag(String)
  fullName: System.Web.UI.HtmlTextWriter.RenderBeginTag(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "將指定的標記項目之開頭標記寫入至輸出資料流。"
  remarks: "如果標記項目不是其中一個使用 RenderBeginTag 方法的覆寫 RenderBeginTag，<xref:System.Web.UI.HtmlTextWriterTag>列舉值。</xref:System.Web.UI.HtmlTextWriterTag>       若要使用 RenderBeginTag 方法產生標記項目，請先呼叫<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>和<xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A>方法，如有必要，來指定任何項目屬性或項目開頭標記中出現的樣式屬性。</xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> </xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> 在產生的內部標記之後, 呼叫<xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>方法來產生了結尾標記。</xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>"
  example:
  - "The following code example shows how to call the RenderBeginTag method in a custom control to render the opening tag of a non-standard `MyTag` element. The code example then calls the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render inner markup, and then calls the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method to close the element.  \n  \n This code example generates the following markup:  \n  \n `<MyTag>`  \n  \n `Contents of MyTag`  \n  \n `</MyTag>`  \n  \n [!code-vb[System.Web.UI.HtmlTextWriter#4](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_35_1.vb)]\n [!code-cs[System.Web.UI.HtmlTextWriter#4](~/add/codesnippet/csharp/m-system.web.ui.htmltext_35_1.cs)]\n [!code-cpp[System.Web.UI.HtmlTextWriter#4](~/add/codesnippet/cpp/m-system.web.ui.htmltext_35_1.cpp)]"
  syntax:
    content: public virtual void RenderBeginTag (string tagName);
    parameters:
    - id: tagName
      type: System.String
      description: "字串，包含要呈現的開頭標記的標記項目的名稱。"
  overload: System.Web.UI.HtmlTextWriter.RenderBeginTag*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)
  id: RenderBeginTag(System.Web.UI.HtmlTextWriterTag)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: RenderBeginTag(HtmlTextWriterTag)
  nameWithType: HtmlTextWriter.RenderBeginTag(HtmlTextWriterTag)
  fullName: System.Web.UI.HtmlTextWriter.RenderBeginTag(HtmlTextWriterTag)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "寫入具有指定相關聯的標記項目之開頭標記<xref href=&quot;System.Web.UI.HtmlTextWriterTag&quot;></xref>輸出資料流的列舉值。"
  remarks: "如果標記項目是其中一個已知型別使用 RenderBeginTag 方法的多載 RenderBeginTag<xref:System.Web.UI.HtmlTextWriterTag>列舉值。</xref:System.Web.UI.HtmlTextWriterTag>       若要使用產生的標記項目<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>方法，請先呼叫<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>和<xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A>方法，如有必要，來指定任何項目屬性或項目開頭標記中出現的樣式屬性。</xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> </xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> </xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> 在產生的內部標記之後, 呼叫<xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>方法來產生了結尾標記。</xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>"
  example:
  - "The following code example shows how to use the RenderBeginTag method to output the opening tag of an `<img>` element. The attributes that are added to the element by the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method will be in the opening `<img>` tag. The <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method is used to generate the closing tag.  \n  \n This code example generates the following markup:  \n  \n `<img alt=\"Encoding \"Required\"\" myattribute=\"No \"encoding\" required\">`  \n  \n `</img>`  \n  \n [!code-vb[System.Web.UI.HtmlTextWriter#3](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_36_1.vb)]\n [!code-cs[System.Web.UI.HtmlTextWriter#3](~/add/codesnippet/csharp/m-system.web.ui.htmltext_36_1.cs)]\n [!code-cpp[System.Web.UI.HtmlTextWriter#3](~/add/codesnippet/cpp/m-system.web.ui.htmltext_36_1.cpp)]"
  syntax:
    content: public virtual void RenderBeginTag (System.Web.UI.HtmlTextWriterTag tagKey);
    parameters:
    - id: tagKey
      type: System.Web.UI.HtmlTextWriterTag
      description: "其中一個<xref href=&quot;System.Web.UI.HtmlTextWriterTag&quot;></xref>定義標記項目開頭標記來呈現的值。"
  overload: System.Web.UI.HtmlTextWriter.RenderBeginTag*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.RenderEndTag
  id: RenderEndTag
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: RenderEndTag()
  nameWithType: HtmlTextWriter.RenderEndTag()
  fullName: System.Web.UI.HtmlTextWriter.RenderEndTag()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "寫入輸出資料流中的標記項目的結束標記。"
  remarks: "呼叫之後 RenderEndTag 方法<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>呼叫的多載，開頭和結尾標記 （內部標記） 的項目之間的所有內容都呈現後。</xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>"
  example:
  - "The following code example demonstrates how to call the RenderEndTag method after both the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method that generates the opening tag and the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method that renders the inner markup between the opening and closing tags of the custom `MyTag` element have been called.  \n  \n This code example generates the following markup:  \n  \n `<MyTag>`  \n  \n `Contents of MyTag`  \n  \n `</MyTag>`  \n  \n [!code-vb[System.Web.UI.HtmlTextWriter#4](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_1_1.vb)]\n [!code-cs[System.Web.UI.HtmlTextWriter#4](~/add/codesnippet/csharp/m-system.web.ui.htmltext_1_1.cs)]\n [!code-cpp[System.Web.UI.HtmlTextWriter#4](~/add/codesnippet/cpp/m-system.web.ui.htmltext_1_1.cpp)]"
  syntax:
    content: public virtual void RenderEndTag ();
    parameters: []
  overload: System.Web.UI.HtmlTextWriter.RenderEndTag*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.SelfClosingChars
  id: SelfClosingChars
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: SelfClosingChars
  nameWithType: HtmlTextWriter.SelfClosingChars
  fullName: System.Web.UI.HtmlTextWriter.SelfClosingChars
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "表示空間和自我結尾的斜線符號 （/） 的標記。"
  remarks: "SelfClosingChars 欄位用於自我封閉的標記項目。 例如︰`<input type=&quot;submit&quot; value=&quot;go&quot;  />`"
  syntax:
    content: public const string SelfClosingChars;
    return:
      type: System.String
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.SelfClosingTagEnd
  id: SelfClosingTagEnd
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: SelfClosingTagEnd
  nameWithType: HtmlTextWriter.SelfClosingTagEnd
  fullName: System.Web.UI.HtmlTextWriter.SelfClosingTagEnd
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "代表關閉斜線符號和右角括號 (/&gt;) 的自我結尾的標記項目。"
  remarks: "SelfClosingTagEnd 欄位由<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>方法建構自我結尾的標記項目時。</xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>"
  example:
  - "The following code example shows how to render the value of a custom `FileName` property followed by a quotation mark and the characters represented by the SelfClosingTagEnd field. The code example calls the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method and passes the SelfClosingTagEnd field as the parameter argument to close the element.  \n  \n This code example renders the `FileName` property value, and then the following markup:  \n  \n `\" />`  \n  \n [!code-cs[MarkupTextWriter_Constants#11](~/add/codesnippet/csharp/f-system.web.ui.htmltext_3_1.cs)]\n [!code-vb[MarkupTextWriter_Constants#11](~/add/codesnippet/visualbasic/f-system.web.ui.htmltext_3_1.vb)]"
  syntax:
    content: public const string SelfClosingTagEnd;
    return:
      type: System.String
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.SemicolonChar
  id: SemicolonChar
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: SemicolonChar
  nameWithType: HtmlTextWriter.SemicolonChar
  fullName: System.Web.UI.HtmlTextWriter.SemicolonChar
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "表示分號 （;）。"
  remarks: "做為參數引數傳遞 SemicolonChar 欄位<xref:System.Web.UI.HtmlTextWriter.Write%2A>方法呼叫，當您想要呈現的自訂控制項或配接器從分號。</xref:System.Web.UI.HtmlTextWriter.Write%2A>"
  example:
  - "The following code example demonstrates how to manually render a series of styles on a markup element. The code example uses the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render `font-size` and `border-style` style attributes. The SemicolonChar field is used as a parameter of the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to separate the value of the `font-size` attribute from the beginning of the `border-style` attribute.  \n  \n This code example renders the following markup:  \n  \n `style=\"font-size:12pt;border-style:ridge\"`  \n  \n [!code-cs[MarkupTextWriter_Constants#7](~/add/codesnippet/csharp/f-system.web.ui.htmltext_4_1.cs)]\n [!code-vb[MarkupTextWriter_Constants#7](~/add/codesnippet/visualbasic/f-system.web.ui.htmltext_4_1.vb)]"
  syntax:
    content: public const char SemicolonChar;
    return:
      type: System.Char
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.SingleQuoteChar
  id: SingleQuoteChar
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: SingleQuoteChar
  nameWithType: HtmlTextWriter.SingleQuoteChar
  fullName: System.Web.UI.HtmlTextWriter.SingleQuoteChar
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "表示一個單引號 （&quot;）。"
  remarks: "需要呈現所有格符號時，請使用 SingleQuoteChar 欄位。"
  syntax:
    content: public const char SingleQuoteChar;
    return:
      type: System.Char
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.SlashChar
  id: SlashChar
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: SlashChar
  nameWithType: HtmlTextWriter.SlashChar
  fullName: System.Web.UI.HtmlTextWriter.SlashChar
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "代表斜線 （/）。"
  remarks: "使用 SlashChar 欄位轉譯斜線標記，當您撰寫的 URL。 <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A>方法會寫入結尾標記的標記項目時，會使用 SlashChar 欄位。</xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A>"
  example:
  - "The following code example demonstrates how to manually render the `src` attribute of an `<img>` element. The code example uses the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method with the SlashChar field as its parameter to render slash marks in the path that is applied to the `src` attribute.  \n  \n This code example renders the following markup:  \n  \n `src=\"/images/`  \n  \n [!code-cs[MarkupTextWriter_Constants#10](~/add/codesnippet/csharp/f-system.web.ui.htmltext_11_1.cs)]\n [!code-vb[MarkupTextWriter_Constants#10](~/add/codesnippet/visualbasic/f-system.web.ui.htmltext_11_1.vb)]"
  syntax:
    content: public const char SlashChar;
    return:
      type: System.Char
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.SpaceChar
  id: SpaceChar
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: SpaceChar
  nameWithType: HtmlTextWriter.SpaceChar
  fullName: System.Web.UI.HtmlTextWriter.SpaceChar
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "表示空白字元 （）。"
  remarks: "SpaceChar 欄位由<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>和<xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A>方法寫入項目和屬性之間的分隔符號時。</xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> </xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>"
  example:
  - "This section provides two code examples. The first one demonstrates how to create a character array. The second one demonstrates how to use the array.  \n  \n These code examples generate the following markup:  \n  \n `<label>`  \n  \n `hello world`  \n  \n `</label>`  \n  \n The following code example shows how to create a <xref:System.Char> array that contains the SpaceChar field.  \n  \n [!code-cs[MarkupTextWriter_Methods2#13](~/add/codesnippet/csharp/f-system.web.ui.htmltext_0_1.cs)]\n [!code-vb[MarkupTextWriter_Methods2#13](~/add/codesnippet/visualbasic/f-system.web.ui.htmltext_0_1.vb)]  \n  \n The following code example shows how to use the array that was created in the preceding code example as a parameter when calling the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method.  \n  \n [!code-cs[MarkupTextWriter_Methods2#12](~/add/codesnippet/csharp/f-system.web.ui.htmltext_0_2.cs)]\n [!code-vb[MarkupTextWriter_Methods2#12](~/add/codesnippet/visualbasic/f-system.web.ui.htmltext_0_2.vb)]"
  syntax:
    content: public const char SpaceChar;
    return:
      type: System.Char
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.StyleEqualsChar
  id: StyleEqualsChar
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: StyleEqualsChar
  nameWithType: HtmlTextWriter.StyleEqualsChar
  fullName: System.Web.UI.HtmlTextWriter.StyleEqualsChar
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "表示樣式 equals (<xref uid=&quot;langword_csharp_:&quot; name=&quot;:&quot; href=&quot;&quot;></xref>) 字元，用來設定樣式屬性等同於值。"
  remarks: "StyleEqualsChar 欄位由<xref:System.Web.UI.HtmlTextWriter.WriteStyleAttribute%2A>來分隔樣式名稱和值的方法。</xref:System.Web.UI.HtmlTextWriter.WriteStyleAttribute%2A>"
  example:
  - "The following code example demonstrates how to render a `FontWeight` attribute and value of `bold` to the opening tag of an element. The code example uses the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method with the StyleEqualsChar field as the parameter to render the character that sets the value of each style attribute.  \n  \n This code example renders the following markup:  \n  \n `FontWeight:\"bold\"`  \n  \n [!code-vb[MarkupTextWriter_Constants#5](~/add/codesnippet/visualbasic/f-system.web.ui.htmltext_1_1.vb)]\n [!code-cs[MarkupTextWriter_Constants#5](~/add/codesnippet/csharp/f-system.web.ui.htmltext_1_1.cs)]"
  syntax:
    content: public const char StyleEqualsChar;
    return:
      type: System.Char
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.TagKey
  id: TagKey
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: TagKey
  nameWithType: HtmlTextWriter.TagKey
  fullName: System.Web.UI.HtmlTextWriter.TagKey
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得或設定<xref href=&quot;System.Web.UI.HtmlTextWriterTag&quot;></xref>指定的標記項目的值。"
  remarks: "TagKey 屬性時才適用只對繼承自<xref:System.Web.UI.HtmlTextWriter>類別</xref:System.Web.UI.HtmlTextWriter>的類別 您應該在讀取或設定 TagKey 屬性只呼叫<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>方法; 這是唯一的時間設定為一致的值。</xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>"
  example:
  - "The following code example demonstrates an overridden version of the <xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A> method in a class that derives from the <xref:System.Web.UI.HtmlTextWriter> class. It uses the value of the TagKey property to determine whether a server control using the custom <xref:System.Web.UI.HtmlTextWriter> object is rendering a `<label>` markup element. If it is, a `<font>` element with a `color` attribute set to `red` is returned to modify the formatting of the `<label>` element's text.  \n  \n [!code-vb[HtmlTextWriter_Methods1#2](~/add/codesnippet/visualbasic/p-system.web.ui.htmltext_4_1.vb)]\n [!code-cs[HtmlTextWriter_Methods1#2](~/add/codesnippet/csharp/p-system.web.ui.htmltext_4_1.cs)]\n [!code-cpp[HtmlTextWriter_Methods1#2](~/add/codesnippet/cpp/p-system.web.ui.htmltext_4_1.cpp)]"
  syntax:
    content: protected System.Web.UI.HtmlTextWriterTag TagKey { get; set; }
    return:
      type: System.Web.UI.HtmlTextWriterTag
      description: "為開頭標記呈現標記項目。"
  overload: System.Web.UI.HtmlTextWriter.TagKey*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "無法設定屬性值。"
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.TagLeftChar
  id: TagLeftChar
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: TagLeftChar
  nameWithType: HtmlTextWriter.TagLeftChar
  fullName: System.Web.UI.HtmlTextWriter.TagLeftChar
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "代表左角括號 (&lt;) 的標記。"
  remarks: "TagLeftChar 欄位由<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>， <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A>， <xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A>，和<xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A>方法寫入標記時。</xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> </xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A> </xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> </xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>"
  example:
  - "The following code example renders the first character of the opening tag of a `<table>` element with the element name. The code example uses the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method with the TagLeftChar field as a parameter.  \n  \n This code example renders the following markup:  \n  \n `<table`  \n  \n [!code-vb[MarkupTextWriter_Constants#9](~/add/codesnippet/visualbasic/f-system.web.ui.htmltext_9_1.vb)]\n [!code-cs[MarkupTextWriter_Constants#9](~/add/codesnippet/csharp/f-system.web.ui.htmltext_9_1.cs)]"
  syntax:
    content: public const char TagLeftChar;
    return:
      type: System.Char
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.TagName
  id: TagName
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: TagName
  nameWithType: HtmlTextWriter.TagName
  fullName: System.Web.UI.HtmlTextWriter.TagName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得或設定所呈現標記項目的標記名稱。"
  remarks: "TagName 屬性時才適用只對繼承自<xref:System.Web.UI.HtmlTextWriter>類別</xref:System.Web.UI.HtmlTextWriter>的類別 您應該讀取或設定標記名稱屬性只在<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>方法呼叫; 這是唯一的時間設定為一致的值。</xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>"
  example:
  - "The following code example demonstrates an overridden version of the <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> method in a class that derives from the <xref:System.Web.UI.HtmlTextWriter> class. The code example checks whether the element to render is a `<label>` element by calling the <xref:System.String.Compare%2A?displayProperty=fullName> method, and then passing the TagName property value and a string, `\"label\"`, as the parameter arguments. If a `<label>` element is about to be rendered, the opening tag of a `<font>` element, with a `color` attribute set to `red`, is rendered before the `<label>` element's opening tag. If the element to render is not a `<label>` element, the base class's version of the <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> method is called.  \n  \n [!code-cs[HtmlTextWriter_Methods4#1](~/add/codesnippet/csharp/p-system.web.ui.htmltext_5_1.cs)]\n [!code-vb[HtmlTextWriter_Methods4#1](~/add/codesnippet/visualbasic/p-system.web.ui.htmltext_5_1.vb)]\n [!code-cpp[HtmlTextWriter_Methods4#1](~/add/codesnippet/cpp/p-system.web.ui.htmltext_5_1.cpp)]"
  syntax:
    content: protected string TagName { get; set; }
    return:
      type: System.String
      description: "所呈現標記項目的標記名稱。"
  overload: System.Web.UI.HtmlTextWriter.TagName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.TagRightChar
  id: TagRightChar
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: TagRightChar
  nameWithType: HtmlTextWriter.TagRightChar
  fullName: System.Web.UI.HtmlTextWriter.TagRightChar
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "代表右角括號 (&gt;) 的標記。"
  remarks: "TagRightChar 欄位由<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>， <xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A>，和<xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A>方法寫入標記時。</xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> </xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A> </xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>"
  example:
  - "The following code example shows how to render the closing tag of a `<table>` element by making calls to overloads of the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method. To render the final character of the tag, the code example uses the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method with the TagRightChar field as a parameter.  \n  \n This code example renders the following markup:  \n  \n `</table>`  \n  \n [!code-vb[MarkupTextWriter_Constants#4](~/add/codesnippet/visualbasic/f-system.web.ui.htmltext_6_1.vb)]\n [!code-cs[MarkupTextWriter_Constants#4](~/add/codesnippet/csharp/f-system.web.ui.htmltext_6_1.cs)]"
  syntax:
    content: public const char TagRightChar;
    return:
      type: System.Char
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.Write(System.Boolean)
  id: Write(System.Boolean)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: Write(Boolean)
  nameWithType: HtmlTextWriter.Write(Boolean)
  fullName: System.Web.UI.HtmlTextWriter.Write(Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "布林值的文字表示寫入輸出資料流，以及任何擱置中 索引標籤的間距。"
  remarks: "Write 方法會產生任何擱置中的索引標籤，然後呼叫<xref:System.IO.TextWriter.Write%2A>基底方法。</xref:System.IO.TextWriter.Write%2A>"
  syntax:
    content: public override void Write (bool value);
    parameters:
    - id: value
      type: System.Boolean
      description: "<xref:System.Boolean>寫入輸出資料流。</xref:System.Boolean>"
  overload: System.Web.UI.HtmlTextWriter.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.Write(System.Char)
  id: Write(System.Char)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: Write(Char)
  nameWithType: HtmlTextWriter.Write(Char)
  fullName: System.Web.UI.HtmlTextWriter.Write(Char)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Unicode 字元的文字表示寫入輸出資料流，以及任何擱置中 索引標籤的間距。"
  remarks: "Write 方法會產生任何擱置中的索引標籤，然後呼叫<xref:System.IO.TextWriter.Write%2A>基底方法。</xref:System.IO.TextWriter.Write%2A>"
  example:
  - "The following code example demonstrates using the Write method to end the opening tag of an `<img>` element by using the <xref:System.Web.UI.HtmlTextWriter.TagRightChar> constant.  \n  \n This code example renders the following markup:  \n  \n `<img alt=\"A custom image\">`  \n  \n `</img>`  \n  \n [!code-cs[MarkupTextWriter_Samples1#5](~/add/codesnippet/csharp/m-system.web.ui.htmltext_21_1.cs)]\n [!code-vb[MarkupTextWriter_Samples1#5](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_21_1.vb)]"
  syntax:
    content: public override void Write (char value);
    parameters:
    - id: value
      type: System.Char
      description: "要寫入輸出資料流的 Unicode 字元。"
  overload: System.Web.UI.HtmlTextWriter.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.Write(System.Char[])
  id: Write(System.Char[])
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: Write(Char[])
  nameWithType: HtmlTextWriter.Write(Char[])
  fullName: System.Web.UI.HtmlTextWriter.Write(Char[])
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Unicode 字元陣列的文字表示寫入輸出資料流，以及任何擱置中 索引標籤的間距。"
  remarks: "Write 方法會產生任何擱置中的索引標籤，然後呼叫<xref:System.IO.TextWriter.Write%2A>基底方法。</xref:System.IO.TextWriter.Write%2A>"
  example:
  - "This section provides two code examples. The first one demonstrates how to create an array of characters. The second one demonstrates how to use the array.  \n  \n These code examples generate the following markup:  \n  \n `<label>`  \n  \n `hello world`  \n  \n `</label>`  \n  \n The following code example demonstrates how to create an array of characters that spell out `hello world`. Included in the array is the <xref:System.Web.UI.HtmlTextWriter.SpaceChar> field, which creates a space between the two words.  \n  \n [!code-cs[MarkupTextWriter_Methods2#13](~/add/codesnippet/csharp/m-system.web.ui.htmltext_22_1.cs)]\n [!code-vb[MarkupTextWriter_Methods2#13](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_22_1.vb)]  \n  \n The following code example demonstrates how to use the Write method to render the `hello world` character array created in the preceding code example to a page, when the control that contains this example code is included in a page.  \n  \n [!code-cs[MarkupTextWriter_Methods2#12](~/add/codesnippet/csharp/m-system.web.ui.htmltext_22_2.cs)]\n [!code-vb[MarkupTextWriter_Methods2#12](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_22_2.vb)]"
  syntax:
    content: public override void Write (char[] buffer);
    parameters:
    - id: buffer
      type: System.Char[]
      description: "要寫入輸出資料流的 Unicode 字元陣列。"
  overload: System.Web.UI.HtmlTextWriter.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.Write(System.Double)
  id: Write(System.Double)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: Write(Double)
  nameWithType: HtmlTextWriter.Write(Double)
  fullName: System.Web.UI.HtmlTextWriter.Write(Double)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "雙精確度浮點數的文字表示寫入輸出資料流，以及任何擱置中 索引標籤的間距。"
  remarks: "Write 方法會產生任何擱置中的索引標籤，然後呼叫<xref:System.IO.TextWriter.Write%2A>基底方法。</xref:System.IO.TextWriter.Write%2A>"
  example:
  - "The following code example shows how to use the Write method to render the value of the <xref:System.Double.MaxValue?displayProperty=fullName> field.  \n  \n This code example generates the following markup:  \n  \n `<label>`  \n  \n `1.79769313486232E+308`  \n  \n `</label>`  \n  \n [!code-cs[MarkupTextWriter_Methods1#7](~/add/codesnippet/csharp/m-system.web.ui.htmltext_10_1.cs)]\n [!code-vb[MarkupTextWriter_Methods1#7](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_10_1.vb)]"
  syntax:
    content: public override void Write (double value);
    parameters:
    - id: value
      type: System.Double
      description: "要寫入輸出資料流中的雙精確度浮點數。"
  overload: System.Web.UI.HtmlTextWriter.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.Write(System.Int32)
  id: Write(System.Int32)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: Write(Int32)
  nameWithType: HtmlTextWriter.Write(Int32)
  fullName: System.Web.UI.HtmlTextWriter.Write(Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "32 位元帶正負號的整數的文字表示寫入輸出資料流，以及任何暫止的索引標籤的間距。"
  remarks: "Write 方法會產生任何擱置中的索引標籤，然後呼叫<xref:System.IO.TextWriter.Write%2A>基底方法。</xref:System.IO.TextWriter.Write%2A>"
  syntax:
    content: public override void Write (int value);
    parameters:
    - id: value
      type: System.Int32
      description: "要寫入輸出資料流的 32 位元帶正負號的整數。"
  overload: System.Web.UI.HtmlTextWriter.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.Write(System.Int64)
  id: Write(System.Int64)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: Write(Int64)
  nameWithType: HtmlTextWriter.Write(Int64)
  fullName: System.Web.UI.HtmlTextWriter.Write(Int64)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "64 位元帶正負號的整數的文字表示寫入輸出資料流，以及任何暫止的索引標籤的間距。"
  remarks: "Write 方法會產生任何擱置中的索引標籤，然後呼叫<xref:System.IO.TextWriter.Write%2A>基底方法。</xref:System.IO.TextWriter.Write%2A>"
  syntax:
    content: public override void Write (long value);
    parameters:
    - id: value
      type: System.Int64
      description: "要寫入輸出資料流的 64 位元帶正負號的整數。"
  overload: System.Web.UI.HtmlTextWriter.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.Write(System.Object)
  id: Write(System.Object)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: Write(Object)
  nameWithType: HtmlTextWriter.Write(Object)
  fullName: System.Web.UI.HtmlTextWriter.Write(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "物件的文字表示寫入輸出資料流，以及任何擱置中 索引標籤的間距。"
  remarks: "Write 方法會產生任何擱置中的索引標籤，然後呼叫<xref:System.IO.TextWriter.Write%2A>基底方法。</xref:System.IO.TextWriter.Write%2A>"
  example:
  - "The following code example shows how to use the Write method to render the value of the <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=fullName> property.  \n  \n This code example generates the following markup:  \n  \n `This is a rendered CultureInfo object.`  \n  \n `<bold>`  \n  \n The value of the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property:  \n  \n `</bold>`  \n  \n [!code-cs[MarkupTextWriter_Methods1#8](~/add/codesnippet/csharp/m-system.web.ui.htmltext_19_1.cs)]\n [!code-vb[MarkupTextWriter_Methods1#8](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_19_1.vb)]"
  syntax:
    content: public override void Write (object value);
    parameters:
    - id: value
      type: System.Object
      description: "要寫入輸出資料流的物件。"
  overload: System.Web.UI.HtmlTextWriter.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.Write(System.Single)
  id: Write(System.Single)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: Write(Single)
  nameWithType: HtmlTextWriter.Write(Single)
  fullName: System.Web.UI.HtmlTextWriter.Write(Single)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "單精確度浮點數的文字表示寫入輸出資料流，以及任何擱置中 索引標籤的間距。"
  remarks: "Write 方法會產生任何擱置中的索引標籤，然後呼叫<xref:System.IO.TextWriter.Write%2A>基底方法。</xref:System.IO.TextWriter.Write%2A>"
  example:
  - "The following code example demonstrates how to use the Write method to render the value of the <xref:System.Single.Epsilon?displayProperty=fullName> field, which is the smallest possible value of the <xref:System.Single> structure.  \n  \n This code example generates the following markup:  \n  \n `<b>`  \n  \n `1.401298E-45`  \n  \n `</b>`  \n  \n [!code-cs[MarkupTextWriter_Methods1#10](~/add/codesnippet/csharp/m-system.web.ui.htmltext_28_1.cs)]\n [!code-vb[MarkupTextWriter_Methods1#10](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_28_1.vb)]"
  syntax:
    content: public override void Write (float value);
    parameters:
    - id: value
      type: System.Single
      description: "要寫入輸出資料流中的單精確度浮點數。"
  overload: System.Web.UI.HtmlTextWriter.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.Write(System.String)
  id: Write(System.String)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: Write(String)
  nameWithType: HtmlTextWriter.Write(String)
  fullName: System.Web.UI.HtmlTextWriter.Write(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "將指定的字串寫入輸出資料流，以及任何擱置中 索引標籤的空格。"
  remarks: "Write 方法會產生任何擱置中的索引標籤，然後呼叫<xref:System.IO.TextWriter.Write%2A>基底方法。</xref:System.IO.TextWriter.Write%2A>"
  example:
  - "The following code example demonstrates how to use the Write method to render a string between the opening and closing tags of a custom markup element.  \n  \n This code example generates the following markup:  \n  \n `<MyTag>`  \n  \n `Contents of MyTag`  \n  \n `</MyTag>`  \n  \n [!code-vb[System.Web.UI.HtmlTextWriter#4](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_25_1.vb)]\n [!code-cs[System.Web.UI.HtmlTextWriter#4](~/add/codesnippet/csharp/m-system.web.ui.htmltext_25_1.cs)]\n [!code-cpp[System.Web.UI.HtmlTextWriter#4](~/add/codesnippet/cpp/m-system.web.ui.htmltext_25_1.cpp)]"
  syntax:
    content: public override void Write (string s);
    parameters:
    - id: s
      type: System.String
      description: "要寫入輸出資料流的字串。"
  overload: System.Web.UI.HtmlTextWriter.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.Write(System.String,System.Object)
  id: Write(System.String,System.Object)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: Write(String,Object)
  nameWithType: HtmlTextWriter.Write(String,Object)
  fullName: System.Web.UI.HtmlTextWriter.Write(String,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "將索引標籤字串和格式化的字串寫入至輸出資料流，使用相同的語意&lt;xref:System.String.Format%2A?displayProperty=fullName&gt;方法，以及任何暫止的索引標籤的間距。"
  remarks: "Write 方法會產生任何擱置中的索引標籤，然後呼叫<xref:System.IO.TextWriter.Write%2A>基底方法。</xref:System.IO.TextWriter.Write%2A>"
  example:
  - "The following code example shows how to use the Write method to render a formatted string with the value of the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property.  \n  \n [!code-cs[MarkupTextWriter_Methods1#5](~/add/codesnippet/csharp/m-system.web.ui.htmltext_18_1.cs)]\n [!code-vb[MarkupTextWriter_Methods1#5](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_18_1.vb)]"
  syntax:
    content: public override void Write (string format, object arg0);
    parameters:
    - id: format
      type: System.String
      description: "字串，包含零或多個格式項目。"
    - id: arg0
      type: System.Object
      description: "要格式化的物件。"
  overload: System.Web.UI.HtmlTextWriter.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.Write(System.String,System.Object[])
  id: Write(System.String,System.Object[])
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: Write(String,Object[])
  nameWithType: HtmlTextWriter.Write(String,Object[])
  fullName: System.Web.UI.HtmlTextWriter.Write(String,Object[])
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "將格式化的字串，其中包含輸出資料流，以及任何暫止定位空格物件陣列的文字表示。 這個方法會使用相同的語意&lt;xref:System.String.Format%2A?displayProperty=fullName&gt;方法。"
  remarks: "Write 方法會產生任何擱置中的索引標籤，然後呼叫<xref:System.IO.TextWriter.Write%2A>基底方法。</xref:System.IO.TextWriter.Write%2A>"
  example:
  - "This section contains two code examples. The first one demonstrates how to render a formatted string and the contents of an array. The second one demonstrates how to declare the array.  \n  \n The following code example shows how to use the Write method to render a formatted string and the contents of an object array, named `curPriceTime`. The method call renders the second member of the array before it renders the first member.  \n  \n [!code-cs[MarkupTextWriter_Methods2#9](~/add/codesnippet/csharp/m-system.web.ui.htmltext_12_1.cs)]\n [!code-vb[MarkupTextWriter_Methods2#9](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_12_1.vb)]  \n  \n The following code example demonstrates declaring the `curPriceTime` object array.  \n  \n [!code-cs[MarkupTextWriter_Methods2#14](~/add/codesnippet/csharp/m-system.web.ui.htmltext_12_2.cs)]\n [!code-vb[MarkupTextWriter_Methods2#14](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_12_2.vb)]"
  syntax:
    content: public override void Write (string format, object[] arg);
    parameters:
    - id: format
      type: System.String
      description: "字串，包含零或多個格式項目。"
    - id: arg
      type: System.Object[]
      description: "若要格式化物件陣列。"
  overload: System.Web.UI.HtmlTextWriter.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.Write(System.Char[],System.Int32,System.Int32)
  id: Write(System.Char[],System.Int32,System.Int32)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: Write(Char[],Int32,Int32)
  nameWithType: HtmlTextWriter.Write(Char[],Int32,Int32)
  fullName: System.Web.UI.HtmlTextWriter.Write(Char[],Int32,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Unicode 字元子陣列的文字表示寫入輸出資料流，以及任何擱置中 索引標籤的間距。"
  remarks: "Write 方法會產生任何擱置中的索引標籤，然後呼叫<xref:System.IO.TextWriter.Write%2A>基底方法。</xref:System.IO.TextWriter.Write%2A>"
  example:
  - "This section provides two code examples. The first one demonstrates how to create a character array. The second one demonstrates how to use the array.  \n  \n These code examples generate the following markup:  \n  \n `<label>`  \n  \n `hello`  \n  \n `</label>`  \n  \n The following code example shows how to create an array of characters that spell out `hello world`. Included in the array is the <xref:System.Web.UI.HtmlTextWriter.SpaceChar> field, which creates a space between the two words.  \n  \n [!code-cs[MarkupTextWriter_Methods2#13](~/add/codesnippet/csharp/m-system.web.ui.htmltext_5_1.cs)]\n [!code-vb[MarkupTextWriter_Methods2#13](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_5_1.vb)]  \n  \n The following portion of the code example uses the `index` and `count` parameters of the Write method to render the first five characters of the array created in the preceding example.  \n  \n [!code-cs[MarkupTextWriter_Methods2#11](~/add/codesnippet/csharp/m-system.web.ui.htmltext_5_2.cs)]\n [!code-vb[MarkupTextWriter_Methods2#11](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_5_2.vb)]"
  syntax:
    content: public override void Write (char[] buffer, int index, int count);
    parameters:
    - id: buffer
      type: System.Char[]
      description: "要從中將文字寫入至輸出資料流的字元陣列。"
    - id: index
      type: System.Int32
      description: "陣列中開始寫入的索引位置。"
    - id: count
      type: System.Int32
      description: "要寫入輸出資料流的字元數。"
  overload: System.Web.UI.HtmlTextWriter.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.Write(System.String,System.Object,System.Object)
  id: Write(System.String,System.Object,System.Object)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: Write(String,Object,Object)
  nameWithType: HtmlTextWriter.Write(String,Object,Object)
  fullName: System.Web.UI.HtmlTextWriter.Write(String,Object,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "寫入包含兩個物件至輸出資料流，以及任何暫止定位空格的文字表示的格式化的字串。 這個方法會使用相同的語意&lt;xref:System.String.Format%2A?displayProperty=fullName&gt;方法。"
  remarks: "Write 方法會產生任何擱置中的索引標籤，然後呼叫<xref:System.IO.TextWriter.Write%2A>基底方法。</xref:System.IO.TextWriter.Write%2A>"
  example:
  - "The following code example shows how to use the Write method to render a formatted string and the values of the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> and <xref:System.DateTime.Today%2A> properties.  \n  \n [!code-cs[MarkupTextWriter_Methods1#6](~/add/codesnippet/csharp/m-system.web.ui.htmltext_39_1.cs)]\n [!code-vb[MarkupTextWriter_Methods1#6](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_39_1.vb)]"
  syntax:
    content: public override void Write (string format, object arg0, object arg1);
    parameters:
    - id: format
      type: System.String
      description: "字串，包含零或多個格式項目。"
    - id: arg0
      type: System.Object
      description: "要格式化的物件。"
    - id: arg1
      type: System.Object
      description: "要格式化的物件。"
  overload: System.Web.UI.HtmlTextWriter.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)
  id: WriteAttribute(System.String,System.String)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: WriteAttribute(String,String)
  nameWithType: HtmlTextWriter.WriteAttribute(String,String)
  fullName: System.Web.UI.HtmlTextWriter.WriteAttribute(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "指定的標記屬性和值寫入輸出資料流。"
  remarks: "您可以使用 WriteAttribute 方法來寫入標記屬性與無編碼的值。 WriteAttribute 方法會將雙引號 （&quot;） 括住屬性值。 如果`value`是`null`，WriteAttribute 方法寫入屬性名稱。"
  example:
  - "The following code example demonstrates rendering an `<img>` element in which both overloads of the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method are called. The code example uses the following process:  \n  \n-   Calls the <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> method, which renders the opening characters of the element.  \n  \n-   Calls the WriteAttribute overload, which writes an `alt` attribute and its value to the `<img>` element.  \n  \n-   Calls the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> overload to render a custom `myattribute` attribute, with a value of `No \"encoding\" required`, and then sets `fEncode` to `false`.  \n  \n-   Closes the opening tag of the element, and then calls the <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> method to close the `<img>` element.  \n  \n This code example generates the following markup:  \n  \n `<img alt=\"AtlValue\" myattribute=\"No \"encoding\" required\">`  \n  \n `</img>`  \n  \n [!code-vb[System.Web.UI.HtmlTextWriter#5](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_8_1.vb)]\n [!code-cs[System.Web.UI.HtmlTextWriter#5](~/add/codesnippet/csharp/m-system.web.ui.htmltext_8_1.cs)]\n [!code-cpp[System.Web.UI.HtmlTextWriter#5](~/add/codesnippet/cpp/m-system.web.ui.htmltext_8_1.cpp)]"
  syntax:
    content: public virtual void WriteAttribute (string name, string value);
    parameters:
    - id: name
      type: System.String
      description: "要寫入輸出資料流的屬性。"
    - id: value
      type: System.String
      description: "指派給屬性的值。"
  overload: System.Web.UI.HtmlTextWriter.WriteAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)
  id: WriteAttribute(System.String,System.String,System.Boolean)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: WriteAttribute(String,String,Boolean)
  nameWithType: HtmlTextWriter.WriteAttribute(String,String,Boolean)
  fullName: System.Web.UI.HtmlTextWriter.WriteAttribute(String,String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "將指定的標記屬性和值寫入至輸出資料流，並在指定時寫入編碼的值。"
  remarks: "使用 WriteAttribute 方法寫入標記屬性和其值或不進行編碼。 WriteAttribute 方法會使用<xref:System.Web.HttpUtility.HtmlAttributeEncode%2A>方法來執行的編碼方式。</xref:System.Web.HttpUtility.HtmlAttributeEncode%2A>       WriteAttribute 方法會將雙引號 （&quot;） 括住屬性值。 如果`value`是`null`，WriteAttribute 方法寫入屬性名稱。"
  example:
  - "The following code example demonstrates rendering an `<img>` element in which both overloads of the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method are called. The code example uses the following process:  \n  \n-   Calls the <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> method, which renders the opening characters of the element.  \n  \n-   Calls the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%29> overload, which writes an `alt` attribute and its value to the `<img>` element.  \n  \n-   Calls the WriteAttribute overload to render a custom `myattribute` attribute, with a value of `No \"encoding\" required`, and then sets `fEncode` to `false`.  \n  \n-   Closes the opening tag of the element, and then calls the <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> method to close the `<img>` element.  \n  \n This code example generates the following markup:  \n  \n `<img alt=\"AtlValue\" myattribute=\"No \"encoding\" required\">`  \n  \n `</img>`  \n  \n [!code-vb[System.Web.UI.HtmlTextWriter#5](~/add/codesnippet/visualbasic/be7115c4-7933-43ab-93e3-_1.vb)]\n [!code-cs[System.Web.UI.HtmlTextWriter#5](~/add/codesnippet/csharp/be7115c4-7933-43ab-93e3-_1.cs)]\n [!code-cpp[System.Web.UI.HtmlTextWriter#5](~/add/codesnippet/cpp/be7115c4-7933-43ab-93e3-_1.cpp)]"
  syntax:
    content: public virtual void WriteAttribute (string name, string value, bool fEncode);
    parameters:
    - id: name
      type: System.String
      description: "要寫入輸出資料流的標記屬性。"
    - id: value
      type: System.String
      description: "指派給屬性的值。"
    - id: fEncode
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要編碼屬性及其指派的值;否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.HtmlTextWriter.WriteAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)
  id: WriteBeginTag(System.String)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: WriteBeginTag(String)
  nameWithType: HtmlTextWriter.WriteBeginTag(String)
  fullName: System.Web.UI.HtmlTextWriter.WriteBeginTag(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "寫入輸出資料流的任何索引標籤間距和指定的標記項目之開頭標記。"
  remarks: "WriteBeginTag 方法不會寫入的標記項目開頭標記在右角括弧 (>)。 這可讓正在寫入的項目開頭標記的標記屬性。 使用<xref:System.Web.UI.HtmlTextWriter.TagRightChar>常數，以呼叫 WriteBeginTag 方法時，關閉開頭標記。</xref:System.Web.UI.HtmlTextWriter.TagRightChar> 使用 WriteBeginTag 方法加<xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd>常數，當您撰寫自我結尾的標記項目。</xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd>       WriteBeginTag 方法會使用自訂的伺服器控制項，不允許標記或屬性對應，針對每個要求相同的方式呈現標記項目。"
  example:
  - "The following code example demonstrates rendering an `<img>` element in which both overloads of the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method are called. The code example uses the following process:  \n  \n-   Calls the WriteBeginTag method, which renders the opening characters of the element.  \n  \n-   Calls the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%29> overload, which writes an `alt` attribute and its value to the `<img>` element.  \n  \n-   Calls the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> overload to render a custom `myattribute` attribute, with a value of `No \"encoding\" required`, and then sets `fEncode` to `false`.  \n  \n-   Closes the opening tag of the element, and then calls the <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> method to close the `<img>` element.  \n  \n This code example generates the following markup:  \n  \n `<img alt=\"AtlValue\" myattribute=\"No \"encoding\" required\">`  \n  \n `</img>`  \n  \n [!code-vb[System.Web.UI.HtmlTextWriter#5](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_15_1.vb)]\n [!code-cs[System.Web.UI.HtmlTextWriter#5](~/add/codesnippet/csharp/m-system.web.ui.htmltext_15_1.cs)]\n [!code-cpp[System.Web.UI.HtmlTextWriter#5](~/add/codesnippet/cpp/m-system.web.ui.htmltext_15_1.cpp)]"
  syntax:
    content: public virtual void WriteBeginTag (string tagName);
    parameters:
    - id: tagName
      type: System.String
      description: "要寫入的開頭標記的標記項目。"
  overload: System.Web.UI.HtmlTextWriter.WriteBeginTag*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.WriteBreak
  id: WriteBreak
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: WriteBreak()
  nameWithType: HtmlTextWriter.WriteBreak()
  fullName: System.Web.UI.HtmlTextWriter.WriteBreak()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "寫入<xref uid=&quot;langword_csharp_&lt;br /&gt;&quot; name=&quot;&lt;br /&gt;&quot; href=&quot;&quot;></xref>輸出資料流的標記項目。"
  remarks: "使用 WriteBreak 方法中的自訂控制項或配接器的標記呈現分行符號。 WriteBreak 方法寫入之間的空格`br`和`/`改善 HTML 相容性。"
  example:
  - "The following code example shows how to call the WriteBreak method to write a `<br />` element to the requesting browser after the <xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A> method writes the encoded `<custID> & <invoice#>` markup.  \n  \n [!code-cs[System.Web.UI.MarkupTextWriter_Samples1#2](~/add/codesnippet/csharp/m-system.web.ui.htmltext_38_1.cs)]\n [!code-vb[System.Web.UI.MarkupTextWriter_Samples1#2](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_38_1.vb)]"
  syntax:
    content: public virtual void WriteBreak ();
    parameters: []
  overload: System.Web.UI.HtmlTextWriter.WriteBreak*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.WriteEncodedText(System.String)
  id: WriteEncodedText(System.String)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: WriteEncodedText(String)
  nameWithType: HtmlTextWriter.WriteEncodedText(String)
  fullName: System.Web.UI.HtmlTextWriter.WriteEncodedText(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "編碼為要求的裝置指定的文字，然後將其寫入輸出資料流。"
  remarks: "Use the WriteEncodedText method when a string contains angle brackets (\\< or >) or an ampersand (&).  \n  \n The WriteEncodedText method uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to perform the encoding and also converts Unicode character `00A0` to ` `."
  example:
  - "The following code example shows how to use the WriteEncodedText method to write the encoded markup `<custID> & \\<invoice#>` to the output stream. The <xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A> method writes `<br />`.  \n  \n [!code-cs[System.Web.UI.MarkupTextWriter_Samples1#2](~/add/codesnippet/csharp/m-system.web.ui.htmltext_44_1.cs)]\n [!code-vb[System.Web.UI.MarkupTextWriter_Samples1#2](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_44_1.vb)]"
  syntax:
    content: public virtual void WriteEncodedText (string text);
    parameters:
    - id: text
      type: System.String
      description: "要編碼及寫入輸出資料流的文字字串。"
  overload: System.Web.UI.HtmlTextWriter.WriteEncodedText*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>text</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.WriteEncodedUrl(System.String)
  id: WriteEncodedUrl(System.String)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: WriteEncodedUrl(String)
  nameWithType: HtmlTextWriter.WriteEncodedUrl(String)
  fullName: System.Web.UI.HtmlTextWriter.WriteEncodedUrl(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "指定的 URL 編碼，然後將其寫入輸出資料流。 URL 可能包含參數。"
  remarks: "WriteEncodedUrl 方法，在將字串編碼`url`參數根據 URL 編碼的規格。 不會經過編碼之後的問號 （？） 分隔的參數。"
  example:
  - "The following code example shows how to use the WriteEncodedUrl method, which generates the following output:  \n  \n `http://localhost/Sample%20Folder/Sample%20%2b%20File.txt`  \n  \n [!code-cs[System.Web.UI.MarkupTextWriter_Samples1#3](~/add/codesnippet/csharp/m-system.web.ui.htmltext_30_1.cs)]\n [!code-vb[System.Web.UI.MarkupTextWriter_Samples1#3](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_30_1.vb)]"
  syntax:
    content: public virtual void WriteEncodedUrl (string url);
    parameters:
    - id: url
      type: System.String
      description: "要編碼及寫入輸出資料流的 URL 字串。"
  overload: System.Web.UI.HtmlTextWriter.WriteEncodedUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter(System.String)
  id: WriteEncodedUrlParameter(System.String)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: WriteEncodedUrlParameter(String)
  nameWithType: HtmlTextWriter.WriteEncodedUrlParameter(String)
  fullName: System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "編碼指定的 URL 參數，針對要求的裝置，然後將其寫入輸出資料流。"
  remarks: "URL 參數部分中的空格會被編碼為加號 （+）、 和等號 （=） 會編碼為`%3d`。"
  example:
  - "The following code example shows how to use the WriteEncodedUrlParameter method, which generates the following output:  \n  \n `ID%3dCity+State`  \n  \n [!code-cs[System.Web.UI.MarkupTextWriter_Samples1#4](~/add/codesnippet/csharp/m-system.web.ui.htmltext_2_1.cs)]\n [!code-vb[System.Web.UI.MarkupTextWriter_Samples1#4](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_2_1.vb)]"
  syntax:
    content: public virtual void WriteEncodedUrlParameter (string urlText);
    parameters:
    - id: urlText
      type: System.String
      description: "要編碼及寫入輸出資料流的 URL 參數字串。"
  overload: System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)
  id: WriteEndTag(System.String)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: WriteEndTag(String)
  nameWithType: HtmlTextWriter.WriteEndTag(String)
  fullName: System.Web.UI.HtmlTextWriter.WriteEndTag(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "寫入任何定位間距和指定的標記項目的結尾標記。"
  remarks: "不同於<xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>方法，WriteEndTag 方法有沒有邏輯可進行比對對應的開頭標記的項目結束標記。</xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>"
  example:
  - "The following code example demonstrates rendering an `<img>` element. The code example uses the following process:  \n  \n-   Calls the <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> method to render the opening characters of the element.  \n  \n-   Calls the two overloads of the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method to write attributes to the `<img>` element.  \n  \n-   Calls the WriteEndTag method to close the `<img>` element.  \n  \n [!code-vb[System.Web.UI.HtmlTextWriter#5](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_4_1.vb)]\n [!code-cs[System.Web.UI.HtmlTextWriter#5](~/add/codesnippet/csharp/m-system.web.ui.htmltext_4_1.cs)]\n [!code-cpp[System.Web.UI.HtmlTextWriter#5](~/add/codesnippet/cpp/m-system.web.ui.htmltext_4_1.cpp)]"
  syntax:
    content: public virtual void WriteEndTag (string tagName);
    parameters:
    - id: tagName
      type: System.String
      description: "要寫入結尾標記的項目。"
  overload: System.Web.UI.HtmlTextWriter.WriteEndTag*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.WriteFullBeginTag(System.String)
  id: WriteFullBeginTag(System.String)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: WriteFullBeginTag(String)
  nameWithType: HtmlTextWriter.WriteFullBeginTag(String)
  fullName: System.Web.UI.HtmlTextWriter.WriteFullBeginTag(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "寫入輸出資料流的任何索引標籤間距和指定的標記項目之開頭標記。"
  remarks: "不同於 WriteFullBeginTag 方法會自動寫入的右角括弧 (>) 中的項目開頭標記<xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A>方法，不會寫入右角括號。</xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> WriteFullBeginTag 用於不含任何屬性的標記項目。"
  syntax:
    content: public virtual void WriteFullBeginTag (string tagName);
    parameters:
    - id: tagName
      type: System.String
      description: "要寫入輸出資料流的項目。"
  overload: System.Web.UI.HtmlTextWriter.WriteFullBeginTag*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.WriteLine
  id: WriteLine
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: WriteLine()
  nameWithType: HtmlTextWriter.WriteLine()
  fullName: System.Web.UI.HtmlTextWriter.WriteLine()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "寫入輸出資料流中的行結束字元字串。"
  remarks: "預設行結束字元字串是歸位字元後面接著換行字元 (&quot;\\r&quot;)。 如需詳細資訊，請參閱<xref:System.IO.TextWriter.WriteLine%2A>.</xref:System.IO.TextWriter.WriteLine%2A>"
  example:
  - "The following code example demonstrates how to use the WriteLine method to insert a line after an `<img>` element is rendered.  \n  \n [!code-vb[System.Web.UI.HtmlTextWriter#3](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_27_1.vb)]\n [!code-cs[System.Web.UI.HtmlTextWriter#3](~/add/codesnippet/csharp/m-system.web.ui.htmltext_27_1.cs)]\n [!code-cpp[System.Web.UI.HtmlTextWriter#3](~/add/codesnippet/cpp/m-system.web.ui.htmltext_27_1.cpp)]"
  syntax:
    content: public override void WriteLine ();
    parameters: []
  overload: System.Web.UI.HtmlTextWriter.WriteLine*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.WriteLine(System.Boolean)
  id: WriteLine(System.Boolean)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: WriteLine(Boolean)
  nameWithType: HtmlTextWriter.WriteLine(Boolean)
  fullName: System.Web.UI.HtmlTextWriter.WriteLine(Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "將任何暫止 索引標籤的間距和布林值，後面接著行結束字元字串，輸出資料流的文字表示。"
  remarks: "預設行結束字元字串是歸位字元後面接著換行字元 (&quot;\\r&quot;)。 <xref:System.IO.TextWriter.WriteLine%2A>基底的方法用來寫入`value`參數。</xref:System.IO.TextWriter.WriteLine%2A>"
  syntax:
    content: public override void WriteLine (bool value);
    parameters:
    - id: value
      type: System.Boolean
      description: "要寫入輸出資料流的布林值。"
  overload: System.Web.UI.HtmlTextWriter.WriteLine*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.WriteLine(System.Char)
  id: WriteLine(System.Char)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: WriteLine(Char)
  nameWithType: HtmlTextWriter.WriteLine(Char)
  fullName: System.Web.UI.HtmlTextWriter.WriteLine(Char)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "將任何擱置中 索引標籤的間距和 Unicode 字元，後面接著行結束字元字串，輸出資料流。"
  remarks: "預設行結束字元字串是歸位字元後面接著換行字元 (&quot;\\r&quot;)。 <xref:System.IO.TextWriter.WriteLine%2A>基底的方法用來寫入`value`參數。</xref:System.IO.TextWriter.WriteLine%2A>"
  syntax:
    content: public override void WriteLine (char value);
    parameters:
    - id: value
      type: System.Char
      description: "要寫入輸出資料流的字元。"
  overload: System.Web.UI.HtmlTextWriter.WriteLine*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.WriteLine(System.Char[])
  id: WriteLine(System.Char[])
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: WriteLine(Char[])
  nameWithType: HtmlTextWriter.WriteLine(Char[])
  fullName: System.Web.UI.HtmlTextWriter.WriteLine(Char[])
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "將任何暫止 索引標籤的間距和 Unicode 字元，後面接著行結束字元字串，輸出資料流的陣列。"
  remarks: "預設行結束字元字串是歸位字元後面接著換行字元 (&quot;\\r&quot;)。 <xref:System.IO.TextWriter.WriteLine%2A>基底的方法用來寫入`value`參數。</xref:System.IO.TextWriter.WriteLine%2A>"
  example:
  - "This section provides two code examples. The first one demonstrates how to create an array. The second one demonstrates how to use that array.  \n  \n These code examples generate the following markup:  \n  \n `<label>`  \n  \n `hello world`  \n  \n `</label>`  \n  \n The following code example shows how to create an array of characters that spell out `hello world`. Included in the array is the <xref:System.Web.UI.HtmlTextWriter.SpaceChar> field, which creates a space between the two words.  \n  \n [!code-cs[MarkupTextWriter_Methods2#6](~/add/codesnippet/csharp/m-system.web.ui.htmltext_37_1.cs)]\n [!code-vb[MarkupTextWriter_Methods2#6](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_37_1.vb)]  \n  \n The following code example renders the `hello world` character array that was created in the preceding example by using the WriteLine method.  \n  \n [!code-cs[MarkupTextWriter_Methods2#5](~/add/codesnippet/csharp/m-system.web.ui.htmltext_37_2.cs)]\n [!code-vb[MarkupTextWriter_Methods2#5](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_37_2.vb)]"
  syntax:
    content: public override void WriteLine (char[] buffer);
    parameters:
    - id: buffer
      type: System.Char[]
      description: "要寫入輸出資料流的字元陣列。"
  overload: System.Web.UI.HtmlTextWriter.WriteLine*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.WriteLine(System.Double)
  id: WriteLine(System.Double)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: WriteLine(Double)
  nameWithType: HtmlTextWriter.WriteLine(Double)
  fullName: System.Web.UI.HtmlTextWriter.WriteLine(Double)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "將任何暫止 索引標籤的間距和雙精確度浮點數，後面接著行結束字元字串，輸出資料流的文字表示。"
  remarks: "預設行結束字元字串是歸位字元後面接著換行字元 (&quot;\\r&quot;)。 <xref:System.IO.TextWriter.WriteLine%2A>基底的方法用來寫入`value`參數。</xref:System.IO.TextWriter.WriteLine%2A>"
  example:
  - "The following code example shows how to use the WriteLine method to render the value of the <xref:System.Double.MaxValue?displayProperty=fullName> field.  \n  \n This code example generates the following markup:  \n  \n `<label>`  \n  \n `1.79769313486232E+308`  \n  \n `</label>`  \n  \n [!code-cs[MarkupTextWriter_Methods1#3](~/add/codesnippet/csharp/m-system.web.ui.htmltext_33_1.cs)]\n [!code-vb[MarkupTextWriter_Methods1#3](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_33_1.vb)]"
  syntax:
    content: public override void WriteLine (double value);
    parameters:
    - id: value
      type: System.Double
      description: "要寫入輸出資料流中的雙精確度浮點數。"
  overload: System.Web.UI.HtmlTextWriter.WriteLine*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.WriteLine(System.Int32)
  id: WriteLine(System.Int32)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: WriteLine(Int32)
  nameWithType: HtmlTextWriter.WriteLine(Int32)
  fullName: System.Web.UI.HtmlTextWriter.WriteLine(Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "將任何暫止 索引標籤的間距和 32 位元帶正負號整數，後面接著行結束字元字串，輸出資料流的文字表示。"
  remarks: "預設行結束字元字串是歸位字元後面接著換行字元 (&quot;\\r&quot;)。 <xref:System.IO.TextWriter.WriteLine%2A>基底的方法用來寫入`value`參數。</xref:System.IO.TextWriter.WriteLine%2A>"
  syntax:
    content: public override void WriteLine (int value);
    parameters:
    - id: value
      type: System.Int32
      description: "要寫入輸出資料流的 32 位元帶正負號的整數。"
  overload: System.Web.UI.HtmlTextWriter.WriteLine*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.WriteLine(System.Int64)
  id: WriteLine(System.Int64)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: WriteLine(Int64)
  nameWithType: HtmlTextWriter.WriteLine(Int64)
  fullName: System.Web.UI.HtmlTextWriter.WriteLine(Int64)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "將任何暫止 索引標籤的間距和 64 位元帶正負號整數，後面接著行結束字元字串，輸出資料流的文字表示。"
  remarks: "預設行結束字元字串是歸位字元後面接著換行字元 (&quot;\\r&quot;)。 <xref:System.IO.TextWriter.WriteLine%2A>基底的方法用來寫入`value`參數。</xref:System.IO.TextWriter.WriteLine%2A>"
  syntax:
    content: public override void WriteLine (long value);
    parameters:
    - id: value
      type: System.Int64
      description: "要寫入輸出資料流的 64 位元帶正負號的整數。"
  overload: System.Web.UI.HtmlTextWriter.WriteLine*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.WriteLine(System.Object)
  id: WriteLine(System.Object)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: WriteLine(Object)
  nameWithType: HtmlTextWriter.WriteLine(Object)
  fullName: System.Web.UI.HtmlTextWriter.WriteLine(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "將任何暫止 索引標籤的間距和物件，後面接著行結束字元字串，輸出資料流的文字表示。"
  remarks: "預設行結束字元字串是歸位字元後面接著換行字元 (&quot;\\r&quot;)。 <xref:System.IO.TextWriter.WriteLine%2A>基底的方法用來寫入`value`參數。</xref:System.IO.TextWriter.WriteLine%2A>"
  example:
  - "The following code example shows how to use the WriteLine method to render the value of the <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=fullName> property to a control.  \n  \n [!code-cs[MarkupTextWriter_Methods1#4](~/add/codesnippet/csharp/m-system.web.ui.htmltext_3_1.cs)]\n [!code-vb[MarkupTextWriter_Methods1#4](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_3_1.vb)]"
  syntax:
    content: public override void WriteLine (object value);
    parameters:
    - id: value
      type: System.Object
      description: "要寫入輸出資料流的物件。"
  overload: System.Web.UI.HtmlTextWriter.WriteLine*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.WriteLine(System.Single)
  id: WriteLine(System.Single)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: WriteLine(Single)
  nameWithType: HtmlTextWriter.WriteLine(Single)
  fullName: System.Web.UI.HtmlTextWriter.WriteLine(Single)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "將任何暫止 索引標籤的間距和單精確度浮點數，後面接著行結束字元字串，輸出資料流的文字表示。"
  remarks: "預設行結束字元字串是歸位字元後面接著換行字元 (&quot;\\r&quot;)。 <xref:System.IO.TextWriter.WriteLine%2A>基底的方法用來寫入`value`參數。</xref:System.IO.TextWriter.WriteLine%2A>"
  example:
  - "The following code example shows how to use the WriteLine method to render the value of the <xref:System.Single.Epsilon?displayProperty=fullName> field, which is the smallest possible value of the <xref:System.Single> structure.  \n  \n This code example generates the following markup:  \n  \n `<b>`  \n  \n `1.401298E-45`  \n  \n `</b>`  \n  \n [!code-cs[MarkupTextWriter_Methods1#9](~/add/codesnippet/csharp/m-system.web.ui.htmltext_11_1.cs)]\n [!code-vb[MarkupTextWriter_Methods1#9](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_11_1.vb)]"
  syntax:
    content: public override void WriteLine (float value);
    parameters:
    - id: value
      type: System.Single
      description: "要寫入輸出資料流中的單精確度浮點數。"
  overload: System.Web.UI.HtmlTextWriter.WriteLine*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.WriteLine(System.String)
  id: WriteLine(System.String)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: WriteLine(String)
  nameWithType: HtmlTextWriter.WriteLine(String)
  fullName: System.Web.UI.HtmlTextWriter.WriteLine(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "將任何擱置中 索引標籤的間距和文字字串，後面接著行結束字元字串，輸出資料流。"
  remarks: "預設行結束字元字串是歸位字元後面接著換行字元 (&quot;\\r&quot;)。 <xref:System.IO.TextWriter.WriteLine%2A>基底的方法用來寫入`value`參數。</xref:System.IO.TextWriter.WriteLine%2A>"
  syntax:
    content: public override void WriteLine (string s);
    parameters:
    - id: s
      type: System.String
      description: "要寫入輸出資料流的字串。"
  overload: System.Web.UI.HtmlTextWriter.WriteLine*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.WriteLine(System.UInt32)
  id: WriteLine(System.UInt32)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: WriteLine(UInt32)
  nameWithType: HtmlTextWriter.WriteLine(UInt32)
  fullName: System.Web.UI.HtmlTextWriter.WriteLine(UInt32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "將任何暫止 索引標籤的間距和的 4 位元組不帶正負號的整數，後面接著行結束字元字串，輸出資料流的文字表示。"
  remarks: "預設行結束字元字串是歸位字元後面接著換行字元 (&quot;\\r&quot;)。 <xref:System.IO.TextWriter.WriteLine%2A>基底的方法用來寫入`value`參數。</xref:System.IO.TextWriter.WriteLine%2A>"
  syntax:
    content: public override void WriteLine (uint value);
    parameters:
    - id: value
      type: System.UInt32
      description: "要寫入輸出資料流的 4 位元組不帶正負號的整數。"
  overload: System.Web.UI.HtmlTextWriter.WriteLine*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object)
  id: WriteLine(System.String,System.Object)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: WriteLine(String,Object)
  nameWithType: HtmlTextWriter.WriteLine(String,Object)
  fullName: System.Web.UI.HtmlTextWriter.WriteLine(String,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "將任何暫止 索引標籤的間距和包含的物件，後面接著行結束字元字串，輸出資料流的文字表示的格式化的字串。"
  remarks: "預設行結束字元字串是歸位字元後面接著換行字元 (&quot;\\r&quot;)。 WriteLine 方法會使用相同的語意<xref:System.String.Format%28System.String%2CSystem.Object%29>方法。</xref:System.String.Format%28System.String%2CSystem.Object%29> <xref:System.IO.TextWriter.WriteLine%2A>基底的方法用來寫入`value`參數。</xref:System.IO.TextWriter.WriteLine%2A>"
  example:
  - "The following code example shows how to use the WriteLine method to render a formatted string with the value of the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property.  \n  \n [!code-cs[MarkupTextWriter_Methods1#1](~/add/codesnippet/csharp/m-system.web.ui.htmltext_23_1.cs)]\n [!code-vb[MarkupTextWriter_Methods1#1](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_23_1.vb)]"
  syntax:
    content: public override void WriteLine (string format, object arg0);
    parameters:
    - id: format
      type: System.String
      description: "字串，包含零或多個格式項目。"
    - id: arg0
      type: System.Object
      description: "要格式化的物件。"
  overload: System.Web.UI.HtmlTextWriter.WriteLine*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object[])
  id: WriteLine(System.String,System.Object[])
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: WriteLine(String,Object[])
  nameWithType: HtmlTextWriter.WriteLine(String,Object[])
  fullName: System.Web.UI.HtmlTextWriter.WriteLine(String,Object[])
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "將任何暫止 索引標籤的間距和包含的物件陣列，後面接著行結束字元字串，輸出資料流的文字表示的格式化的字串。"
  remarks: "預設行結束字元字串是歸位字元後面接著換行字元 (&quot;\\r&quot;)。 WriteLine 方法會使用相同的語意[格式 (字串、 物件\\[\\])](assetId:///M:System.String.Format(System.String,System.Object[])?qualifyHint=False&autoUpgrade=False)方法。 <xref:System.IO.TextWriter.WriteLine%2A>基底的方法用來寫入`value`方法。</xref:System.IO.TextWriter.WriteLine%2A>"
  example:
  - "This section contains two code examples. The first one demonstrates how to render a string and an array to the output stream. The second one shows how to declare the array.  \n  \n The following code example demonstrates how to use the WriteLine method to render a formatted string and the contents of an object array to the output stream.  \n  \n [!code-cs[MarkupTextWriter_Methods2#2](~/add/codesnippet/csharp/m-system.web.ui.htmltext_24_1.cs)]\n [!code-vb[MarkupTextWriter_Methods2#2](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_24_1.vb)]  \n  \n The following code example shows how to declare the object array that was rendered in the preceding code example.  \n  \n [!code-cs[MarkupTextWriter_Methods2#7](~/add/codesnippet/csharp/m-system.web.ui.htmltext_24_2.cs)]\n [!code-vb[MarkupTextWriter_Methods2#7](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_24_2.vb)]"
  syntax:
    content: public override void WriteLine (string format, object[] arg);
    parameters:
    - id: format
      type: System.String
      description: "字串，包含零或多個格式項目。"
    - id: arg
      type: System.Object[]
      description: "若要格式化物件陣列。"
  overload: System.Web.UI.HtmlTextWriter.WriteLine*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.WriteLine(System.Char[],System.Int32,System.Int32)
  id: WriteLine(System.Char[],System.Int32,System.Int32)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: WriteLine(Char[],Int32,Int32)
  nameWithType: HtmlTextWriter.WriteLine(Char[],Int32,Int32)
  fullName: System.Web.UI.HtmlTextWriter.WriteLine(Char[],Int32,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "將任何暫止 索引標籤的間距和 Unicode 字元，後面接著行結束字元字串，輸出資料流的子陣列。"
  remarks: "預設行結束字元字串是歸位字元後面接著換行字元 (&quot;\\r&quot;)。 <xref:System.IO.TextWriter.WriteLine%2A>基底的方法用來寫入`value`參數。</xref:System.IO.TextWriter.WriteLine%2A>"
  example:
  - "This section contains two code examples. The first one demonstrates how to create a character array. The second one demonstrates how to use the array.  \n  \n These code examples generate the following markup:  \n  \n `<label>`  \n  \n `hello`  \n  \n `</label>`  \n  \n The following code example demonstrates how to create an array of characters that spell out `hello world`. Included in the array is the <xref:System.Web.UI.HtmlTextWriter.SpaceChar> field, which creates a space between the two words.  \n  \n [!code-cs[MarkupTextWriter_Methods2#6](~/add/codesnippet/csharp/6b13e0ca-ed56-413e-b392-_1.cs)]\n [!code-vb[MarkupTextWriter_Methods2#6](~/add/codesnippet/visualbasic/6b13e0ca-ed56-413e-b392-_1.vb)]  \n  \n The following code example uses the `index` and `count` parameters of the WriteLine method to render the first five characters of the array created in the preceding code example.  \n  \n [!code-cs[MarkupTextWriter_Methods2#4](~/add/codesnippet/csharp/6b13e0ca-ed56-413e-b392-_2.cs)]\n [!code-vb[MarkupTextWriter_Methods2#4](~/add/codesnippet/visualbasic/6b13e0ca-ed56-413e-b392-_2.vb)]"
  syntax:
    content: public override void WriteLine (char[] buffer, int index, int count);
    parameters:
    - id: buffer
      type: System.Char[]
      description: "要從中將文字寫入至輸出資料流的字元陣列。"
    - id: index
      type: System.Int32
      description: "字元陣列中開始寫入的位置。"
    - id: count
      type: System.Int32
      description: "陣列中要寫入輸出資料流的字元數。"
  overload: System.Web.UI.HtmlTextWriter.WriteLine*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object,System.Object)
  id: WriteLine(System.String,System.Object,System.Object)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: WriteLine(String,Object,Object)
  nameWithType: HtmlTextWriter.WriteLine(String,Object,Object)
  fullName: System.Web.UI.HtmlTextWriter.WriteLine(String,Object,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "將任何暫止 索引標籤的間距和格式化的字串，其中包含兩個物件，後面接著行結束字元字串，輸出資料流的文字表示。"
  remarks: "預設行結束字元字串是歸位字元後面接著換行字元 (&quot;\\r&quot;)。 WriteLine 方法會使用相同的語意<xref:System.String.Format%28System.String%2CSystem.Object%2CSystem.Object%29>方法。</xref:System.String.Format%28System.String%2CSystem.Object%2CSystem.Object%29> <xref:System.IO.TextWriter.WriteLine%2A>基底的方法用來寫入`value`參數。</xref:System.IO.TextWriter.WriteLine%2A>"
  example:
  - "The following code example demonstrates how to use the WriteLine method to render a formatted string and the values of the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property and the <xref:System.DateTime.Today%2A> property.  \n  \n [!code-cs[MarkupTextWriter_Methods1#2](~/add/codesnippet/csharp/efeeb384-c97a-43fc-baf0-_1.cs)]\n [!code-vb[MarkupTextWriter_Methods1#2](~/add/codesnippet/visualbasic/efeeb384-c97a-43fc-baf0-_1.vb)]"
  syntax:
    content: public override void WriteLine (string format, object arg0, object arg1);
    parameters:
    - id: format
      type: System.String
      description: "字串，包含零或多個格式項目。"
    - id: arg0
      type: System.Object
      description: "要格式化的物件。"
    - id: arg1
      type: System.Object
      description: "要格式化的物件。"
  overload: System.Web.UI.HtmlTextWriter.WriteLine*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.WriteLineNoTabs(System.String)
  id: WriteLineNoTabs(System.String)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: WriteLineNoTabs(String)
  nameWithType: HtmlTextWriter.WriteLineNoTabs(String)
  fullName: System.Web.UI.HtmlTextWriter.WriteLineNoTabs(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "寫入的字串，後面接著行結束字元字串，輸出資料流。 這個方法會忽略任何指定的索引標籤的間距。"
  remarks: "Use the WriteLineNoTabs method rather than the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method when you do not want to render any tab spacing ahead of the rendered string `s`.  \n  \n The default line terminator string is a carriage return followed by a line feed (\"\\r\\n\"). The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter."
  syntax:
    content: public void WriteLineNoTabs (string s);
    parameters:
    - id: s
      type: System.String
      description: "要寫入輸出資料流的字串。"
  overload: System.Web.UI.HtmlTextWriter.WriteLineNoTabs*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String)
  id: WriteStyleAttribute(System.String,System.String)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: WriteStyleAttribute(String,String)
  nameWithType: HtmlTextWriter.WriteStyleAttribute(String,String)
  fullName: System.Web.UI.HtmlTextWriter.WriteStyleAttribute(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "將指定的樣式屬性寫入至輸出資料流。"
  remarks: "WriteStyleAttribute 方法會將之樣式屬性寫入下列形式︰ `name` `=` `value``;`"
  syntax:
    content: public virtual void WriteStyleAttribute (string name, string value);
    parameters:
    - id: name
      type: System.String
      description: "要寫入輸出資料流的樣式屬性。"
    - id: value
      type: System.String
      description: "指派給之樣式屬性的值。"
  overload: System.Web.UI.HtmlTextWriter.WriteStyleAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String,System.Boolean)
  id: WriteStyleAttribute(System.String,System.String,System.Boolean)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: WriteStyleAttribute(String,String,Boolean)
  nameWithType: HtmlTextWriter.WriteStyleAttribute(String,String,Boolean)
  fullName: System.Web.UI.HtmlTextWriter.WriteStyleAttribute(String,String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "將指定的樣式屬性和值寫入至輸出資料流，並將編碼值，如果指定。"
  remarks: "WriteStyleAttribute 方法會將之樣式屬性寫入下列形式︰ `name` `=` `value` `;` <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A>方法用來編碼`value`參數。</xref:System.Web.HttpUtility.HtmlAttributeEncode%2A>"
  syntax:
    content: public virtual void WriteStyleAttribute (string name, string value, bool fEncode);
    parameters:
    - id: name
      type: System.String
      description: "要寫入輸出資料流的樣式屬性。"
    - id: value
      type: System.String
      description: "指派給之樣式屬性的值。"
    - id: fEncode
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>表示要編碼的樣式屬性及其指派的值;否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.HtmlTextWriter.WriteStyleAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.WriteUrlEncodedString(System.String,System.Boolean)
  id: WriteUrlEncodedString(System.String,System.Boolean)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: WriteUrlEncodedString(String,Boolean)
  nameWithType: HtmlTextWriter.WriteUrlEncodedString(String,Boolean)
  fullName: System.Web.UI.HtmlTextWriter.WriteUrlEncodedString(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "將指定的字串，並根據需求 URL 編碼。"
  remarks: "WriteUrlEncodedString 方法將會被視為 URL 分隔符號的字元編碼成 (取決於設定的`argument`) 成字串格式的`%``xx`，ASCII 碼小於 128; 否則如果`%u``xxxx`，其中`x`是十六進位數字。       <xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrl%2A>和<xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter%2A>方法 WriteUrlEncodedString 方法做為公用程式方法。</xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter%2A> </xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrl%2A>"
  syntax:
    content: protected void WriteUrlEncodedString (string text, bool argument);
    parameters:
    - id: text
      type: System.String
      description: "要編碼及寫入輸出資料流的字串。"
    - id: argument
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>要編碼的字串 URL; 的參數區段的一部分<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>表示 URL 的路徑區段一部分編碼字串。"
  overload: System.Web.UI.HtmlTextWriter.WriteUrlEncodedString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.IO.TextWriter
  isExternal: false
  name: System.IO.TextWriter
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.UI.HtmlTextWriter.#ctor(System.IO.TextWriter)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: HtmlTextWriter(TextWriter)
  nameWithType: HtmlTextWriter.HtmlTextWriter(TextWriter)
  fullName: System.Web.UI.HtmlTextWriter.HtmlTextWriter(TextWriter)
- uid: System.Web.UI.HtmlTextWriter.#ctor(System.IO.TextWriter,System.String)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: HtmlTextWriter(TextWriter,String)
  nameWithType: HtmlTextWriter.HtmlTextWriter(TextWriter,String)
  fullName: System.Web.UI.HtmlTextWriter.HtmlTextWriter(TextWriter,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: AddAttribute(String,String)
  nameWithType: HtmlTextWriter.AddAttribute(String,String)
  fullName: System.Web.UI.HtmlTextWriter.AddAttribute(String,String)
- uid: System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: AddAttribute(HtmlTextWriterAttribute,String)
  nameWithType: HtmlTextWriter.AddAttribute(HtmlTextWriterAttribute,String)
  fullName: System.Web.UI.HtmlTextWriter.AddAttribute(HtmlTextWriterAttribute,String)
- uid: System.Web.UI.HtmlTextWriterAttribute
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriterAttribute
  nameWithType: HtmlTextWriterAttribute
  fullName: System.Web.UI.HtmlTextWriterAttribute
- uid: System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Boolean)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: AddAttribute(String,String,Boolean)
  nameWithType: HtmlTextWriter.AddAttribute(String,String,Boolean)
  fullName: System.Web.UI.HtmlTextWriter.AddAttribute(String,String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: AddAttribute(String,String,HtmlTextWriterAttribute)
  nameWithType: HtmlTextWriter.AddAttribute(String,String,HtmlTextWriterAttribute)
  fullName: System.Web.UI.HtmlTextWriter.AddAttribute(String,String,HtmlTextWriterAttribute)
- uid: System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: AddAttribute(HtmlTextWriterAttribute,String,Boolean)
  nameWithType: HtmlTextWriter.AddAttribute(HtmlTextWriterAttribute,String,Boolean)
  fullName: System.Web.UI.HtmlTextWriter.AddAttribute(HtmlTextWriterAttribute,String,Boolean)
- uid: System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: AddStyleAttribute(String,String)
  nameWithType: HtmlTextWriter.AddStyleAttribute(String,String)
  fullName: System.Web.UI.HtmlTextWriter.AddStyleAttribute(String,String)
- uid: System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.Web.UI.HtmlTextWriterStyle,System.String)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: AddStyleAttribute(HtmlTextWriterStyle,String)
  nameWithType: HtmlTextWriter.AddStyleAttribute(HtmlTextWriterStyle,String)
  fullName: System.Web.UI.HtmlTextWriter.AddStyleAttribute(HtmlTextWriterStyle,String)
- uid: System.Web.UI.HtmlTextWriterStyle
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriterStyle
  nameWithType: HtmlTextWriterStyle
  fullName: System.Web.UI.HtmlTextWriterStyle
- uid: System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: AddStyleAttribute(String,String,HtmlTextWriterStyle)
  nameWithType: HtmlTextWriter.AddStyleAttribute(String,String,HtmlTextWriterStyle)
  fullName: System.Web.UI.HtmlTextWriter.AddStyleAttribute(String,String,HtmlTextWriterStyle)
- uid: System.Web.UI.HtmlTextWriter.BeginRender
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: BeginRender()
  nameWithType: HtmlTextWriter.BeginRender()
  fullName: System.Web.UI.HtmlTextWriter.BeginRender()
- uid: System.Web.UI.HtmlTextWriter.Close
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: Close()
  nameWithType: HtmlTextWriter.Close()
  fullName: System.Web.UI.HtmlTextWriter.Close()
- uid: System.Web.UI.HtmlTextWriter.DefaultTabString
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: DefaultTabString
  nameWithType: HtmlTextWriter.DefaultTabString
  fullName: System.Web.UI.HtmlTextWriter.DefaultTabString
- uid: System.Web.UI.HtmlTextWriter.DoubleQuoteChar
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: DoubleQuoteChar
  nameWithType: HtmlTextWriter.DoubleQuoteChar
  fullName: System.Web.UI.HtmlTextWriter.DoubleQuoteChar
- uid: System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.String,System.Boolean)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: EncodeAttributeValue(String,Boolean)
  nameWithType: HtmlTextWriter.EncodeAttributeValue(String,Boolean)
  fullName: System.Web.UI.HtmlTextWriter.EncodeAttributeValue(String,Boolean)
- uid: System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.Web.UI.HtmlTextWriterAttribute,System.String)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: EncodeAttributeValue(HtmlTextWriterAttribute,String)
  nameWithType: HtmlTextWriter.EncodeAttributeValue(HtmlTextWriterAttribute,String)
  fullName: System.Web.UI.HtmlTextWriter.EncodeAttributeValue(HtmlTextWriterAttribute,String)
- uid: System.Web.UI.HtmlTextWriter.EncodeUrl(System.String)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: EncodeUrl(String)
  nameWithType: HtmlTextWriter.EncodeUrl(String)
  fullName: System.Web.UI.HtmlTextWriter.EncodeUrl(String)
- uid: System.Web.UI.HtmlTextWriter.Encoding
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: Encoding
  nameWithType: HtmlTextWriter.Encoding
  fullName: System.Web.UI.HtmlTextWriter.Encoding
- uid: System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: System.Web.UI.HtmlTextWriter.EndRender
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: EndRender()
  nameWithType: HtmlTextWriter.EndRender()
  fullName: System.Web.UI.HtmlTextWriter.EndRender()
- uid: System.Web.UI.HtmlTextWriter.EndTagLeftChars
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: EndTagLeftChars
  nameWithType: HtmlTextWriter.EndTagLeftChars
  fullName: System.Web.UI.HtmlTextWriter.EndTagLeftChars
- uid: System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: EnterStyle(Style)
  nameWithType: HtmlTextWriter.EnterStyle(Style)
  fullName: System.Web.UI.HtmlTextWriter.EnterStyle(Style)
- uid: System.Web.UI.WebControls.Style
  parent: System.Web.UI.WebControls
  isExternal: false
  name: Style
  nameWithType: Style
  fullName: System.Web.UI.WebControls.Style
- uid: System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: EnterStyle(Style,HtmlTextWriterTag)
  nameWithType: HtmlTextWriter.EnterStyle(Style,HtmlTextWriterTag)
  fullName: System.Web.UI.HtmlTextWriter.EnterStyle(Style,HtmlTextWriterTag)
- uid: System.Web.UI.HtmlTextWriterTag
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriterTag
  nameWithType: HtmlTextWriterTag
  fullName: System.Web.UI.HtmlTextWriterTag
- uid: System.Web.UI.HtmlTextWriter.EqualsChar
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: EqualsChar
  nameWithType: HtmlTextWriter.EqualsChar
  fullName: System.Web.UI.HtmlTextWriter.EqualsChar
- uid: System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: EqualsDoubleQuoteString
  nameWithType: HtmlTextWriter.EqualsDoubleQuoteString
  fullName: System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString
- uid: System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: ExitStyle(Style)
  nameWithType: HtmlTextWriter.ExitStyle(Style)
  fullName: System.Web.UI.HtmlTextWriter.ExitStyle(Style)
- uid: System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: ExitStyle(Style,HtmlTextWriterTag)
  nameWithType: HtmlTextWriter.ExitStyle(Style,HtmlTextWriterTag)
  fullName: System.Web.UI.HtmlTextWriter.ExitStyle(Style,HtmlTextWriterTag)
- uid: System.Web.UI.HtmlTextWriter.FilterAttributes
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: FilterAttributes()
  nameWithType: HtmlTextWriter.FilterAttributes()
  fullName: System.Web.UI.HtmlTextWriter.FilterAttributes()
- uid: System.Web.UI.HtmlTextWriter.Flush
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: Flush()
  nameWithType: HtmlTextWriter.Flush()
  fullName: System.Web.UI.HtmlTextWriter.Flush()
- uid: System.Web.UI.HtmlTextWriter.GetAttributeKey(System.String)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: GetAttributeKey(String)
  nameWithType: HtmlTextWriter.GetAttributeKey(String)
  fullName: System.Web.UI.HtmlTextWriter.GetAttributeKey(String)
- uid: System.Web.UI.HtmlTextWriter.GetAttributeName(System.Web.UI.HtmlTextWriterAttribute)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: GetAttributeName(HtmlTextWriterAttribute)
  nameWithType: HtmlTextWriter.GetAttributeName(HtmlTextWriterAttribute)
  fullName: System.Web.UI.HtmlTextWriter.GetAttributeName(HtmlTextWriterAttribute)
- uid: System.Web.UI.HtmlTextWriter.GetStyleKey(System.String)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: GetStyleKey(String)
  nameWithType: HtmlTextWriter.GetStyleKey(String)
  fullName: System.Web.UI.HtmlTextWriter.GetStyleKey(String)
- uid: System.Web.UI.HtmlTextWriter.GetStyleName(System.Web.UI.HtmlTextWriterStyle)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: GetStyleName(HtmlTextWriterStyle)
  nameWithType: HtmlTextWriter.GetStyleName(HtmlTextWriterStyle)
  fullName: System.Web.UI.HtmlTextWriter.GetStyleName(HtmlTextWriterStyle)
- uid: System.Web.UI.HtmlTextWriter.GetTagKey(System.String)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: GetTagKey(String)
  nameWithType: HtmlTextWriter.GetTagKey(String)
  fullName: System.Web.UI.HtmlTextWriter.GetTagKey(String)
- uid: System.Web.UI.HtmlTextWriter.GetTagName(System.Web.UI.HtmlTextWriterTag)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: GetTagName(HtmlTextWriterTag)
  nameWithType: HtmlTextWriter.GetTagName(HtmlTextWriterTag)
  fullName: System.Web.UI.HtmlTextWriter.GetTagName(HtmlTextWriterTag)
- uid: System.Web.UI.HtmlTextWriter.Indent
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: Indent
  nameWithType: HtmlTextWriter.Indent
  fullName: System.Web.UI.HtmlTextWriter.Indent
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.HtmlTextWriter.InnerWriter
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: InnerWriter
  nameWithType: HtmlTextWriter.InnerWriter
  fullName: System.Web.UI.HtmlTextWriter.InnerWriter
- uid: System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: IsAttributeDefined(HtmlTextWriterAttribute)
  nameWithType: HtmlTextWriter.IsAttributeDefined(HtmlTextWriterAttribute)
  fullName: System.Web.UI.HtmlTextWriter.IsAttributeDefined(HtmlTextWriterAttribute)
- uid: System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute,System.String@)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: IsAttributeDefined(HtmlTextWriterAttribute,String)
  nameWithType: HtmlTextWriter.IsAttributeDefined(HtmlTextWriterAttribute,String)
  fullName: System.Web.UI.HtmlTextWriter.IsAttributeDefined(HtmlTextWriterAttribute,String)
- uid: System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: IsStyleAttributeDefined(HtmlTextWriterStyle)
  nameWithType: HtmlTextWriter.IsStyleAttributeDefined(HtmlTextWriterStyle)
  fullName: System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(HtmlTextWriterStyle)
- uid: System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle,System.String@)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: IsStyleAttributeDefined(HtmlTextWriterStyle,String)
  nameWithType: HtmlTextWriter.IsStyleAttributeDefined(HtmlTextWriterStyle,String)
  fullName: System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(HtmlTextWriterStyle,String)
- uid: System.Web.UI.HtmlTextWriter.IsValidFormAttribute(System.String)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: IsValidFormAttribute(String)
  nameWithType: HtmlTextWriter.IsValidFormAttribute(String)
  fullName: System.Web.UI.HtmlTextWriter.IsValidFormAttribute(String)
- uid: System.Web.UI.HtmlTextWriter.NewLine
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: NewLine
  nameWithType: HtmlTextWriter.NewLine
  fullName: System.Web.UI.HtmlTextWriter.NewLine
- uid: System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: OnAttributeRender(String,String,HtmlTextWriterAttribute)
  nameWithType: HtmlTextWriter.OnAttributeRender(String,String,HtmlTextWriterAttribute)
  fullName: System.Web.UI.HtmlTextWriter.OnAttributeRender(String,String,HtmlTextWriterAttribute)
- uid: System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: OnStyleAttributeRender(String,String,HtmlTextWriterStyle)
  nameWithType: HtmlTextWriter.OnStyleAttributeRender(String,String,HtmlTextWriterStyle)
  fullName: System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(String,String,HtmlTextWriterStyle)
- uid: System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: OnTagRender(String,HtmlTextWriterTag)
  nameWithType: HtmlTextWriter.OnTagRender(String,HtmlTextWriterTag)
  fullName: System.Web.UI.HtmlTextWriter.OnTagRender(String,HtmlTextWriterTag)
- uid: System.Web.UI.HtmlTextWriter.OutputTabs
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: OutputTabs()
  nameWithType: HtmlTextWriter.OutputTabs()
  fullName: System.Web.UI.HtmlTextWriter.OutputTabs()
- uid: System.Web.UI.HtmlTextWriter.PopEndTag
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: PopEndTag()
  nameWithType: HtmlTextWriter.PopEndTag()
  fullName: System.Web.UI.HtmlTextWriter.PopEndTag()
- uid: System.Web.UI.HtmlTextWriter.PushEndTag(System.String)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: PushEndTag(String)
  nameWithType: HtmlTextWriter.PushEndTag(String)
  fullName: System.Web.UI.HtmlTextWriter.PushEndTag(String)
- uid: System.Web.UI.HtmlTextWriter.RegisterAttribute(System.String,System.Web.UI.HtmlTextWriterAttribute)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: RegisterAttribute(String,HtmlTextWriterAttribute)
  nameWithType: HtmlTextWriter.RegisterAttribute(String,HtmlTextWriterAttribute)
  fullName: System.Web.UI.HtmlTextWriter.RegisterAttribute(String,HtmlTextWriterAttribute)
- uid: System.Web.UI.HtmlTextWriter.RegisterStyle(System.String,System.Web.UI.HtmlTextWriterStyle)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: RegisterStyle(String,HtmlTextWriterStyle)
  nameWithType: HtmlTextWriter.RegisterStyle(String,HtmlTextWriterStyle)
  fullName: System.Web.UI.HtmlTextWriter.RegisterStyle(String,HtmlTextWriterStyle)
- uid: System.Web.UI.HtmlTextWriter.RegisterTag(System.String,System.Web.UI.HtmlTextWriterTag)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: RegisterTag(String,HtmlTextWriterTag)
  nameWithType: HtmlTextWriter.RegisterTag(String,HtmlTextWriterTag)
  fullName: System.Web.UI.HtmlTextWriter.RegisterTag(String,HtmlTextWriterTag)
- uid: System.Web.UI.HtmlTextWriter.RenderAfterContent
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: RenderAfterContent()
  nameWithType: HtmlTextWriter.RenderAfterContent()
  fullName: System.Web.UI.HtmlTextWriter.RenderAfterContent()
- uid: System.Web.UI.HtmlTextWriter.RenderAfterTag
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: RenderAfterTag()
  nameWithType: HtmlTextWriter.RenderAfterTag()
  fullName: System.Web.UI.HtmlTextWriter.RenderAfterTag()
- uid: System.Web.UI.HtmlTextWriter.RenderBeforeContent
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: RenderBeforeContent()
  nameWithType: HtmlTextWriter.RenderBeforeContent()
  fullName: System.Web.UI.HtmlTextWriter.RenderBeforeContent()
- uid: System.Web.UI.HtmlTextWriter.RenderBeforeTag
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: RenderBeforeTag()
  nameWithType: HtmlTextWriter.RenderBeforeTag()
  fullName: System.Web.UI.HtmlTextWriter.RenderBeforeTag()
- uid: System.Web.UI.HtmlTextWriter.RenderBeginTag(System.String)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: RenderBeginTag(String)
  nameWithType: HtmlTextWriter.RenderBeginTag(String)
  fullName: System.Web.UI.HtmlTextWriter.RenderBeginTag(String)
- uid: System.Web.UI.HtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: RenderBeginTag(HtmlTextWriterTag)
  nameWithType: HtmlTextWriter.RenderBeginTag(HtmlTextWriterTag)
  fullName: System.Web.UI.HtmlTextWriter.RenderBeginTag(HtmlTextWriterTag)
- uid: System.Web.UI.HtmlTextWriter.RenderEndTag
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: RenderEndTag()
  nameWithType: HtmlTextWriter.RenderEndTag()
  fullName: System.Web.UI.HtmlTextWriter.RenderEndTag()
- uid: System.Web.UI.HtmlTextWriter.SelfClosingChars
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: SelfClosingChars
  nameWithType: HtmlTextWriter.SelfClosingChars
  fullName: System.Web.UI.HtmlTextWriter.SelfClosingChars
- uid: System.Web.UI.HtmlTextWriter.SelfClosingTagEnd
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: SelfClosingTagEnd
  nameWithType: HtmlTextWriter.SelfClosingTagEnd
  fullName: System.Web.UI.HtmlTextWriter.SelfClosingTagEnd
- uid: System.Web.UI.HtmlTextWriter.SemicolonChar
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: SemicolonChar
  nameWithType: HtmlTextWriter.SemicolonChar
  fullName: System.Web.UI.HtmlTextWriter.SemicolonChar
- uid: System.Web.UI.HtmlTextWriter.SingleQuoteChar
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: SingleQuoteChar
  nameWithType: HtmlTextWriter.SingleQuoteChar
  fullName: System.Web.UI.HtmlTextWriter.SingleQuoteChar
- uid: System.Web.UI.HtmlTextWriter.SlashChar
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: SlashChar
  nameWithType: HtmlTextWriter.SlashChar
  fullName: System.Web.UI.HtmlTextWriter.SlashChar
- uid: System.Web.UI.HtmlTextWriter.SpaceChar
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: SpaceChar
  nameWithType: HtmlTextWriter.SpaceChar
  fullName: System.Web.UI.HtmlTextWriter.SpaceChar
- uid: System.Web.UI.HtmlTextWriter.StyleEqualsChar
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: StyleEqualsChar
  nameWithType: HtmlTextWriter.StyleEqualsChar
  fullName: System.Web.UI.HtmlTextWriter.StyleEqualsChar
- uid: System.Web.UI.HtmlTextWriter.TagKey
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: TagKey
  nameWithType: HtmlTextWriter.TagKey
  fullName: System.Web.UI.HtmlTextWriter.TagKey
- uid: System.Web.UI.HtmlTextWriter.TagLeftChar
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: TagLeftChar
  nameWithType: HtmlTextWriter.TagLeftChar
  fullName: System.Web.UI.HtmlTextWriter.TagLeftChar
- uid: System.Web.UI.HtmlTextWriter.TagName
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: TagName
  nameWithType: HtmlTextWriter.TagName
  fullName: System.Web.UI.HtmlTextWriter.TagName
- uid: System.Web.UI.HtmlTextWriter.TagRightChar
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: TagRightChar
  nameWithType: HtmlTextWriter.TagRightChar
  fullName: System.Web.UI.HtmlTextWriter.TagRightChar
- uid: System.Web.UI.HtmlTextWriter.Write(System.Boolean)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: Write(Boolean)
  nameWithType: HtmlTextWriter.Write(Boolean)
  fullName: System.Web.UI.HtmlTextWriter.Write(Boolean)
- uid: System.Web.UI.HtmlTextWriter.Write(System.Char)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: Write(Char)
  nameWithType: HtmlTextWriter.Write(Char)
  fullName: System.Web.UI.HtmlTextWriter.Write(Char)
- uid: System.Web.UI.HtmlTextWriter.Write(System.Char[])
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: Write(Char[])
  nameWithType: HtmlTextWriter.Write(Char[])
  fullName: System.Web.UI.HtmlTextWriter.Write(Char[])
- uid: System.Char[]
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char[]
  spec.csharp:
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: Char[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.UI.HtmlTextWriter.Write(System.Double)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: Write(Double)
  nameWithType: HtmlTextWriter.Write(Double)
  fullName: System.Web.UI.HtmlTextWriter.Write(Double)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Web.UI.HtmlTextWriter.Write(System.Int32)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: Write(Int32)
  nameWithType: HtmlTextWriter.Write(Int32)
  fullName: System.Web.UI.HtmlTextWriter.Write(Int32)
- uid: System.Web.UI.HtmlTextWriter.Write(System.Int64)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: Write(Int64)
  nameWithType: HtmlTextWriter.Write(Int64)
  fullName: System.Web.UI.HtmlTextWriter.Write(Int64)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Web.UI.HtmlTextWriter.Write(System.Object)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: Write(Object)
  nameWithType: HtmlTextWriter.Write(Object)
  fullName: System.Web.UI.HtmlTextWriter.Write(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.HtmlTextWriter.Write(System.Single)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: Write(Single)
  nameWithType: HtmlTextWriter.Write(Single)
  fullName: System.Web.UI.HtmlTextWriter.Write(Single)
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Web.UI.HtmlTextWriter.Write(System.String)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: Write(String)
  nameWithType: HtmlTextWriter.Write(String)
  fullName: System.Web.UI.HtmlTextWriter.Write(String)
- uid: System.Web.UI.HtmlTextWriter.Write(System.String,System.Object)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: Write(String,Object)
  nameWithType: HtmlTextWriter.Write(String,Object)
  fullName: System.Web.UI.HtmlTextWriter.Write(String,Object)
- uid: System.Web.UI.HtmlTextWriter.Write(System.String,System.Object[])
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: Write(String,Object[])
  nameWithType: HtmlTextWriter.Write(String,Object[])
  fullName: System.Web.UI.HtmlTextWriter.Write(String,Object[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.UI.HtmlTextWriter.Write(System.Char[],System.Int32,System.Int32)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: Write(Char[],Int32,Int32)
  nameWithType: HtmlTextWriter.Write(Char[],Int32,Int32)
  fullName: System.Web.UI.HtmlTextWriter.Write(Char[],Int32,Int32)
- uid: System.Web.UI.HtmlTextWriter.Write(System.String,System.Object,System.Object)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: Write(String,Object,Object)
  nameWithType: HtmlTextWriter.Write(String,Object,Object)
  fullName: System.Web.UI.HtmlTextWriter.Write(String,Object,Object)
- uid: System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteAttribute(String,String)
  nameWithType: HtmlTextWriter.WriteAttribute(String,String)
  fullName: System.Web.UI.HtmlTextWriter.WriteAttribute(String,String)
- uid: System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteAttribute(String,String,Boolean)
  nameWithType: HtmlTextWriter.WriteAttribute(String,String,Boolean)
  fullName: System.Web.UI.HtmlTextWriter.WriteAttribute(String,String,Boolean)
- uid: System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteBeginTag(String)
  nameWithType: HtmlTextWriter.WriteBeginTag(String)
  fullName: System.Web.UI.HtmlTextWriter.WriteBeginTag(String)
- uid: System.Web.UI.HtmlTextWriter.WriteBreak
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteBreak()
  nameWithType: HtmlTextWriter.WriteBreak()
  fullName: System.Web.UI.HtmlTextWriter.WriteBreak()
- uid: System.Web.UI.HtmlTextWriter.WriteEncodedText(System.String)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteEncodedText(String)
  nameWithType: HtmlTextWriter.WriteEncodedText(String)
  fullName: System.Web.UI.HtmlTextWriter.WriteEncodedText(String)
- uid: System.Web.UI.HtmlTextWriter.WriteEncodedUrl(System.String)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteEncodedUrl(String)
  nameWithType: HtmlTextWriter.WriteEncodedUrl(String)
  fullName: System.Web.UI.HtmlTextWriter.WriteEncodedUrl(String)
- uid: System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter(System.String)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteEncodedUrlParameter(String)
  nameWithType: HtmlTextWriter.WriteEncodedUrlParameter(String)
  fullName: System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter(String)
- uid: System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteEndTag(String)
  nameWithType: HtmlTextWriter.WriteEndTag(String)
  fullName: System.Web.UI.HtmlTextWriter.WriteEndTag(String)
- uid: System.Web.UI.HtmlTextWriter.WriteFullBeginTag(System.String)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteFullBeginTag(String)
  nameWithType: HtmlTextWriter.WriteFullBeginTag(String)
  fullName: System.Web.UI.HtmlTextWriter.WriteFullBeginTag(String)
- uid: System.Web.UI.HtmlTextWriter.WriteLine
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteLine()
  nameWithType: HtmlTextWriter.WriteLine()
  fullName: System.Web.UI.HtmlTextWriter.WriteLine()
- uid: System.Web.UI.HtmlTextWriter.WriteLine(System.Boolean)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteLine(Boolean)
  nameWithType: HtmlTextWriter.WriteLine(Boolean)
  fullName: System.Web.UI.HtmlTextWriter.WriteLine(Boolean)
- uid: System.Web.UI.HtmlTextWriter.WriteLine(System.Char)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteLine(Char)
  nameWithType: HtmlTextWriter.WriteLine(Char)
  fullName: System.Web.UI.HtmlTextWriter.WriteLine(Char)
- uid: System.Web.UI.HtmlTextWriter.WriteLine(System.Char[])
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteLine(Char[])
  nameWithType: HtmlTextWriter.WriteLine(Char[])
  fullName: System.Web.UI.HtmlTextWriter.WriteLine(Char[])
- uid: System.Web.UI.HtmlTextWriter.WriteLine(System.Double)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteLine(Double)
  nameWithType: HtmlTextWriter.WriteLine(Double)
  fullName: System.Web.UI.HtmlTextWriter.WriteLine(Double)
- uid: System.Web.UI.HtmlTextWriter.WriteLine(System.Int32)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteLine(Int32)
  nameWithType: HtmlTextWriter.WriteLine(Int32)
  fullName: System.Web.UI.HtmlTextWriter.WriteLine(Int32)
- uid: System.Web.UI.HtmlTextWriter.WriteLine(System.Int64)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteLine(Int64)
  nameWithType: HtmlTextWriter.WriteLine(Int64)
  fullName: System.Web.UI.HtmlTextWriter.WriteLine(Int64)
- uid: System.Web.UI.HtmlTextWriter.WriteLine(System.Object)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteLine(Object)
  nameWithType: HtmlTextWriter.WriteLine(Object)
  fullName: System.Web.UI.HtmlTextWriter.WriteLine(Object)
- uid: System.Web.UI.HtmlTextWriter.WriteLine(System.Single)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteLine(Single)
  nameWithType: HtmlTextWriter.WriteLine(Single)
  fullName: System.Web.UI.HtmlTextWriter.WriteLine(Single)
- uid: System.Web.UI.HtmlTextWriter.WriteLine(System.String)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteLine(String)
  nameWithType: HtmlTextWriter.WriteLine(String)
  fullName: System.Web.UI.HtmlTextWriter.WriteLine(String)
- uid: System.Web.UI.HtmlTextWriter.WriteLine(System.UInt32)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteLine(UInt32)
  nameWithType: HtmlTextWriter.WriteLine(UInt32)
  fullName: System.Web.UI.HtmlTextWriter.WriteLine(UInt32)
- uid: System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteLine(String,Object)
  nameWithType: HtmlTextWriter.WriteLine(String,Object)
  fullName: System.Web.UI.HtmlTextWriter.WriteLine(String,Object)
- uid: System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object[])
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteLine(String,Object[])
  nameWithType: HtmlTextWriter.WriteLine(String,Object[])
  fullName: System.Web.UI.HtmlTextWriter.WriteLine(String,Object[])
- uid: System.Web.UI.HtmlTextWriter.WriteLine(System.Char[],System.Int32,System.Int32)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteLine(Char[],Int32,Int32)
  nameWithType: HtmlTextWriter.WriteLine(Char[],Int32,Int32)
  fullName: System.Web.UI.HtmlTextWriter.WriteLine(Char[],Int32,Int32)
- uid: System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object,System.Object)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteLine(String,Object,Object)
  nameWithType: HtmlTextWriter.WriteLine(String,Object,Object)
  fullName: System.Web.UI.HtmlTextWriter.WriteLine(String,Object,Object)
- uid: System.Web.UI.HtmlTextWriter.WriteLineNoTabs(System.String)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteLineNoTabs(String)
  nameWithType: HtmlTextWriter.WriteLineNoTabs(String)
  fullName: System.Web.UI.HtmlTextWriter.WriteLineNoTabs(String)
- uid: System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteStyleAttribute(String,String)
  nameWithType: HtmlTextWriter.WriteStyleAttribute(String,String)
  fullName: System.Web.UI.HtmlTextWriter.WriteStyleAttribute(String,String)
- uid: System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String,System.Boolean)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteStyleAttribute(String,String,Boolean)
  nameWithType: HtmlTextWriter.WriteStyleAttribute(String,String,Boolean)
  fullName: System.Web.UI.HtmlTextWriter.WriteStyleAttribute(String,String,Boolean)
- uid: System.Web.UI.HtmlTextWriter.WriteUrlEncodedString(System.String,System.Boolean)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteUrlEncodedString(String,Boolean)
  nameWithType: HtmlTextWriter.WriteUrlEncodedString(String,Boolean)
  fullName: System.Web.UI.HtmlTextWriter.WriteUrlEncodedString(String,Boolean)
- uid: System.Web.UI.HtmlTextWriter.#ctor*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: HtmlTextWriter
  nameWithType: HtmlTextWriter.HtmlTextWriter
- uid: System.Web.UI.HtmlTextWriter.AddAttribute*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: AddAttribute
  nameWithType: HtmlTextWriter.AddAttribute
- uid: System.Web.UI.HtmlTextWriter.AddStyleAttribute*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: AddStyleAttribute
  nameWithType: HtmlTextWriter.AddStyleAttribute
- uid: System.Web.UI.HtmlTextWriter.BeginRender*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: BeginRender
  nameWithType: HtmlTextWriter.BeginRender
- uid: System.Web.UI.HtmlTextWriter.Close*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: Close
  nameWithType: HtmlTextWriter.Close
- uid: System.Web.UI.HtmlTextWriter.EncodeAttributeValue*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: EncodeAttributeValue
  nameWithType: HtmlTextWriter.EncodeAttributeValue
- uid: System.Web.UI.HtmlTextWriter.EncodeUrl*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: EncodeUrl
  nameWithType: HtmlTextWriter.EncodeUrl
- uid: System.Web.UI.HtmlTextWriter.Encoding*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: Encoding
  nameWithType: HtmlTextWriter.Encoding
- uid: System.Web.UI.HtmlTextWriter.EndRender*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: EndRender
  nameWithType: HtmlTextWriter.EndRender
- uid: System.Web.UI.HtmlTextWriter.EnterStyle*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: EnterStyle
  nameWithType: HtmlTextWriter.EnterStyle
- uid: System.Web.UI.HtmlTextWriter.ExitStyle*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: ExitStyle
  nameWithType: HtmlTextWriter.ExitStyle
- uid: System.Web.UI.HtmlTextWriter.FilterAttributes*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: FilterAttributes
  nameWithType: HtmlTextWriter.FilterAttributes
- uid: System.Web.UI.HtmlTextWriter.Flush*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: Flush
  nameWithType: HtmlTextWriter.Flush
- uid: System.Web.UI.HtmlTextWriter.GetAttributeKey*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: GetAttributeKey
  nameWithType: HtmlTextWriter.GetAttributeKey
- uid: System.Web.UI.HtmlTextWriter.GetAttributeName*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: GetAttributeName
  nameWithType: HtmlTextWriter.GetAttributeName
- uid: System.Web.UI.HtmlTextWriter.GetStyleKey*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: GetStyleKey
  nameWithType: HtmlTextWriter.GetStyleKey
- uid: System.Web.UI.HtmlTextWriter.GetStyleName*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: GetStyleName
  nameWithType: HtmlTextWriter.GetStyleName
- uid: System.Web.UI.HtmlTextWriter.GetTagKey*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: GetTagKey
  nameWithType: HtmlTextWriter.GetTagKey
- uid: System.Web.UI.HtmlTextWriter.GetTagName*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: GetTagName
  nameWithType: HtmlTextWriter.GetTagName
- uid: System.Web.UI.HtmlTextWriter.Indent*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: Indent
  nameWithType: HtmlTextWriter.Indent
- uid: System.Web.UI.HtmlTextWriter.InnerWriter*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: InnerWriter
  nameWithType: HtmlTextWriter.InnerWriter
- uid: System.Web.UI.HtmlTextWriter.IsAttributeDefined*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: IsAttributeDefined
  nameWithType: HtmlTextWriter.IsAttributeDefined
- uid: System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: IsStyleAttributeDefined
  nameWithType: HtmlTextWriter.IsStyleAttributeDefined
- uid: System.Web.UI.HtmlTextWriter.IsValidFormAttribute*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: IsValidFormAttribute
  nameWithType: HtmlTextWriter.IsValidFormAttribute
- uid: System.Web.UI.HtmlTextWriter.NewLine*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: NewLine
  nameWithType: HtmlTextWriter.NewLine
- uid: System.Web.UI.HtmlTextWriter.OnAttributeRender*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: OnAttributeRender
  nameWithType: HtmlTextWriter.OnAttributeRender
- uid: System.Web.UI.HtmlTextWriter.OnStyleAttributeRender*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: OnStyleAttributeRender
  nameWithType: HtmlTextWriter.OnStyleAttributeRender
- uid: System.Web.UI.HtmlTextWriter.OnTagRender*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: OnTagRender
  nameWithType: HtmlTextWriter.OnTagRender
- uid: System.Web.UI.HtmlTextWriter.OutputTabs*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: OutputTabs
  nameWithType: HtmlTextWriter.OutputTabs
- uid: System.Web.UI.HtmlTextWriter.PopEndTag*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: PopEndTag
  nameWithType: HtmlTextWriter.PopEndTag
- uid: System.Web.UI.HtmlTextWriter.PushEndTag*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: PushEndTag
  nameWithType: HtmlTextWriter.PushEndTag
- uid: System.Web.UI.HtmlTextWriter.RegisterAttribute*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: RegisterAttribute
  nameWithType: HtmlTextWriter.RegisterAttribute
- uid: System.Web.UI.HtmlTextWriter.RegisterStyle*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: RegisterStyle
  nameWithType: HtmlTextWriter.RegisterStyle
- uid: System.Web.UI.HtmlTextWriter.RegisterTag*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: RegisterTag
  nameWithType: HtmlTextWriter.RegisterTag
- uid: System.Web.UI.HtmlTextWriter.RenderAfterContent*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: RenderAfterContent
  nameWithType: HtmlTextWriter.RenderAfterContent
- uid: System.Web.UI.HtmlTextWriter.RenderAfterTag*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: RenderAfterTag
  nameWithType: HtmlTextWriter.RenderAfterTag
- uid: System.Web.UI.HtmlTextWriter.RenderBeforeContent*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: RenderBeforeContent
  nameWithType: HtmlTextWriter.RenderBeforeContent
- uid: System.Web.UI.HtmlTextWriter.RenderBeforeTag*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: RenderBeforeTag
  nameWithType: HtmlTextWriter.RenderBeforeTag
- uid: System.Web.UI.HtmlTextWriter.RenderBeginTag*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: RenderBeginTag
  nameWithType: HtmlTextWriter.RenderBeginTag
- uid: System.Web.UI.HtmlTextWriter.RenderEndTag*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: RenderEndTag
  nameWithType: HtmlTextWriter.RenderEndTag
- uid: System.Web.UI.HtmlTextWriter.TagKey*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: TagKey
  nameWithType: HtmlTextWriter.TagKey
- uid: System.Web.UI.HtmlTextWriter.TagName*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: TagName
  nameWithType: HtmlTextWriter.TagName
- uid: System.Web.UI.HtmlTextWriter.Write*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: Write
  nameWithType: HtmlTextWriter.Write
- uid: System.Web.UI.HtmlTextWriter.WriteAttribute*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteAttribute
  nameWithType: HtmlTextWriter.WriteAttribute
- uid: System.Web.UI.HtmlTextWriter.WriteBeginTag*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteBeginTag
  nameWithType: HtmlTextWriter.WriteBeginTag
- uid: System.Web.UI.HtmlTextWriter.WriteBreak*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteBreak
  nameWithType: HtmlTextWriter.WriteBreak
- uid: System.Web.UI.HtmlTextWriter.WriteEncodedText*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteEncodedText
  nameWithType: HtmlTextWriter.WriteEncodedText
- uid: System.Web.UI.HtmlTextWriter.WriteEncodedUrl*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteEncodedUrl
  nameWithType: HtmlTextWriter.WriteEncodedUrl
- uid: System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteEncodedUrlParameter
  nameWithType: HtmlTextWriter.WriteEncodedUrlParameter
- uid: System.Web.UI.HtmlTextWriter.WriteEndTag*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteEndTag
  nameWithType: HtmlTextWriter.WriteEndTag
- uid: System.Web.UI.HtmlTextWriter.WriteFullBeginTag*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteFullBeginTag
  nameWithType: HtmlTextWriter.WriteFullBeginTag
- uid: System.Web.UI.HtmlTextWriter.WriteLine*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteLine
  nameWithType: HtmlTextWriter.WriteLine
- uid: System.Web.UI.HtmlTextWriter.WriteLineNoTabs*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteLineNoTabs
  nameWithType: HtmlTextWriter.WriteLineNoTabs
- uid: System.Web.UI.HtmlTextWriter.WriteStyleAttribute*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteStyleAttribute
  nameWithType: HtmlTextWriter.WriteStyleAttribute
- uid: System.Web.UI.HtmlTextWriter.WriteUrlEncodedString*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteUrlEncodedString
  nameWithType: HtmlTextWriter.WriteUrlEncodedString
