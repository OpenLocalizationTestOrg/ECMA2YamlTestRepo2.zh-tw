### YamlMime:ManagedReference
items:
- uid: System.Drawing.Graphics
  id: Graphics
  children:
  - System.Drawing.Graphics.AddMetafileComment(System.Byte[])
  - System.Drawing.Graphics.BeginContainer
  - System.Drawing.Graphics.BeginContainer(System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)
  - System.Drawing.Graphics.BeginContainer(System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)
  - System.Drawing.Graphics.Clear(System.Drawing.Color)
  - System.Drawing.Graphics.Clip
  - System.Drawing.Graphics.ClipBounds
  - System.Drawing.Graphics.CompositingMode
  - System.Drawing.Graphics.CompositingQuality
  - System.Drawing.Graphics.CopyFromScreen(System.Drawing.Point,System.Drawing.Point,System.Drawing.Size)
  - System.Drawing.Graphics.CopyFromScreen(System.Drawing.Point,System.Drawing.Point,System.Drawing.Size,System.Drawing.CopyPixelOperation)
  - System.Drawing.Graphics.CopyFromScreen(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Size)
  - System.Drawing.Graphics.CopyFromScreen(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Size,System.Drawing.CopyPixelOperation)
  - System.Drawing.Graphics.Dispose
  - System.Drawing.Graphics.DpiX
  - System.Drawing.Graphics.DpiY
  - System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Drawing.Rectangle,System.Single,System.Single)
  - System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Drawing.RectangleF,System.Single,System.Single)
  - System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  - System.Drawing.Graphics.DrawBezier(System.Drawing.Pen,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)
  - System.Drawing.Graphics.DrawBezier(System.Drawing.Pen,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)
  - System.Drawing.Graphics.DrawBezier(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  - System.Drawing.Graphics.DrawBeziers(System.Drawing.Pen,System.Drawing.Point[])
  - System.Drawing.Graphics.DrawBeziers(System.Drawing.Pen,System.Drawing.PointF[])
  - System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.Point[])
  - System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.PointF[])
  - System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.Point[],System.Single,System.Drawing.Drawing2D.FillMode)
  - System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Single,System.Drawing.Drawing2D.FillMode)
  - System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[])
  - System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[])
  - System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Single)
  - System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Single)
  - System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32)
  - System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Int32,System.Int32,System.Single)
  - System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32,System.Single)
  - System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Drawing.Rectangle)
  - System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Drawing.RectangleF)
  - System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)
  - System.Drawing.Graphics.DrawIcon(System.Drawing.Icon,System.Drawing.Rectangle)
  - System.Drawing.Graphics.DrawIcon(System.Drawing.Icon,System.Int32,System.Int32)
  - System.Drawing.Graphics.DrawIconUnstretched(System.Drawing.Icon,System.Drawing.Rectangle)
  - System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point)
  - System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[])
  - System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF)
  - System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[])
  - System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle)
  - System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.RectangleF)
  - System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32)
  - System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Single,System.Single)
  - System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit)
  - System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit)
  - System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)
  - System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)
  - System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)
  - System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)
  - System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)
  - System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Single,System.Single,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)
  - System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Single,System.Single,System.Single,System.Single)
  - System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)
  - System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)
  - System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)
  - System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)
  - System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit)
  - System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit)
  - System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)
  - System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)
  - System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)
  - System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)
  - System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)
  - System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)
  - System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Drawing.Point)
  - System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Drawing.Rectangle)
  - System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Int32,System.Int32)
  - System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Drawing.Graphics.DrawImageUnscaledAndClipped(System.Drawing.Image,System.Drawing.Rectangle)
  - System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Drawing.Point,System.Drawing.Point)
  - System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Drawing.PointF,System.Drawing.PointF)
  - System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)
  - System.Drawing.Graphics.DrawLines(System.Drawing.Pen,System.Drawing.Point[])
  - System.Drawing.Graphics.DrawLines(System.Drawing.Pen,System.Drawing.PointF[])
  - System.Drawing.Graphics.DrawPath(System.Drawing.Pen,System.Drawing.Drawing2D.GraphicsPath)
  - System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Drawing.Rectangle,System.Single,System.Single)
  - System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Drawing.RectangleF,System.Single,System.Single)
  - System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  - System.Drawing.Graphics.DrawPolygon(System.Drawing.Pen,System.Drawing.Point[])
  - System.Drawing.Graphics.DrawPolygon(System.Drawing.Pen,System.Drawing.PointF[])
  - System.Drawing.Graphics.DrawRectangle(System.Drawing.Pen,System.Drawing.Rectangle)
  - System.Drawing.Graphics.DrawRectangle(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Drawing.Graphics.DrawRectangle(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)
  - System.Drawing.Graphics.DrawRectangles(System.Drawing.Pen,System.Drawing.Rectangle[])
  - System.Drawing.Graphics.DrawRectangles(System.Drawing.Pen,System.Drawing.RectangleF[])
  - System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.PointF)
  - System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF)
  - System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.PointF,System.Drawing.StringFormat)
  - System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF,System.Drawing.StringFormat)
  - System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Single,System.Single)
  - System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Single,System.Single,System.Drawing.StringFormat)
  - System.Drawing.Graphics.EndContainer(System.Drawing.Drawing2D.GraphicsContainer)
  - System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc)
  - System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Graphics.EnumerateMetafileProc)
  - System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.Graphics.EnumerateMetafileProc)
  - System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc)
  - System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Graphics.EnumerateMetafileProc)
  - System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.Graphics.EnumerateMetafileProc)
  - System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  - System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  - System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  - System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  - System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  - System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  - System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  - System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)
  - System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  - System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)
  - System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  - System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)
  - System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  - System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)
  - System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  - System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)
  - System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  - System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)
  - System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  - System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  - System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  - System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  - System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  - System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  - System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  - System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  - System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  - System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  - System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  - System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  - System.Drawing.Graphics.ExcludeClip(System.Drawing.Rectangle)
  - System.Drawing.Graphics.ExcludeClip(System.Drawing.Region)
  - System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[])
  - System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[])
  - System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode)
  - System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode)
  - System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode,System.Single)
  - System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode,System.Single)
  - System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Drawing.Rectangle)
  - System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Drawing.RectangleF)
  - System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single)
  - System.Drawing.Graphics.FillPath(System.Drawing.Brush,System.Drawing.Drawing2D.GraphicsPath)
  - System.Drawing.Graphics.FillPie(System.Drawing.Brush,System.Drawing.Rectangle,System.Single,System.Single)
  - System.Drawing.Graphics.FillPie(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Drawing.Graphics.FillPie(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  - System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.Point[])
  - System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.PointF[])
  - System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode)
  - System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode)
  - System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Drawing.Rectangle)
  - System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Drawing.RectangleF)
  - System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single)
  - System.Drawing.Graphics.FillRectangles(System.Drawing.Brush,System.Drawing.Rectangle[])
  - System.Drawing.Graphics.FillRectangles(System.Drawing.Brush,System.Drawing.RectangleF[])
  - System.Drawing.Graphics.FillRegion(System.Drawing.Brush,System.Drawing.Region)
  - System.Drawing.Graphics.Finalize
  - System.Drawing.Graphics.Flush
  - System.Drawing.Graphics.Flush(System.Drawing.Drawing2D.FlushIntention)
  - System.Drawing.Graphics.FromHdc(System.IntPtr)
  - System.Drawing.Graphics.FromHdc(System.IntPtr,System.IntPtr)
  - System.Drawing.Graphics.FromHdcInternal(System.IntPtr)
  - System.Drawing.Graphics.FromHwnd(System.IntPtr)
  - System.Drawing.Graphics.FromHwndInternal(System.IntPtr)
  - System.Drawing.Graphics.FromImage(System.Drawing.Image)
  - System.Drawing.Graphics.GetContextInfo
  - System.Drawing.Graphics.GetHalftonePalette
  - System.Drawing.Graphics.GetHdc
  - System.Drawing.Graphics.GetNearestColor(System.Drawing.Color)
  - System.Drawing.Graphics.InterpolationMode
  - System.Drawing.Graphics.IntersectClip(System.Drawing.Rectangle)
  - System.Drawing.Graphics.IntersectClip(System.Drawing.RectangleF)
  - System.Drawing.Graphics.IntersectClip(System.Drawing.Region)
  - System.Drawing.Graphics.IsClipEmpty
  - System.Drawing.Graphics.IsVisible(System.Drawing.Point)
  - System.Drawing.Graphics.IsVisible(System.Drawing.PointF)
  - System.Drawing.Graphics.IsVisible(System.Drawing.Rectangle)
  - System.Drawing.Graphics.IsVisible(System.Drawing.RectangleF)
  - System.Drawing.Graphics.IsVisible(System.Int32,System.Int32)
  - System.Drawing.Graphics.IsVisible(System.Single,System.Single)
  - System.Drawing.Graphics.IsVisible(System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Drawing.Graphics.IsVisible(System.Single,System.Single,System.Single,System.Single)
  - System.Drawing.Graphics.IsVisibleClipEmpty
  - System.Drawing.Graphics.MeasureCharacterRanges(System.String,System.Drawing.Font,System.Drawing.RectangleF,System.Drawing.StringFormat)
  - System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font)
  - System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF)
  - System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Int32)
  - System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.PointF,System.Drawing.StringFormat)
  - System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat)
  - System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Int32,System.Drawing.StringFormat)
  - System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat,System.Int32@,System.Int32@)
  - System.Drawing.Graphics.MultiplyTransform(System.Drawing.Drawing2D.Matrix)
  - System.Drawing.Graphics.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)
  - System.Drawing.Graphics.PageScale
  - System.Drawing.Graphics.PageUnit
  - System.Drawing.Graphics.PixelOffsetMode
  - System.Drawing.Graphics.ReleaseHdc
  - System.Drawing.Graphics.ReleaseHdc(System.IntPtr)
  - System.Drawing.Graphics.ReleaseHdcInternal(System.IntPtr)
  - System.Drawing.Graphics.RenderingOrigin
  - System.Drawing.Graphics.ResetClip
  - System.Drawing.Graphics.ResetTransform
  - System.Drawing.Graphics.Restore(System.Drawing.Drawing2D.GraphicsState)
  - System.Drawing.Graphics.RotateTransform(System.Single)
  - System.Drawing.Graphics.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)
  - System.Drawing.Graphics.Save
  - System.Drawing.Graphics.ScaleTransform(System.Single,System.Single)
  - System.Drawing.Graphics.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  - System.Drawing.Graphics.SetClip(System.Drawing.Drawing2D.GraphicsPath)
  - System.Drawing.Graphics.SetClip(System.Drawing.Graphics)
  - System.Drawing.Graphics.SetClip(System.Drawing.Rectangle)
  - System.Drawing.Graphics.SetClip(System.Drawing.RectangleF)
  - System.Drawing.Graphics.SetClip(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.CombineMode)
  - System.Drawing.Graphics.SetClip(System.Drawing.Graphics,System.Drawing.Drawing2D.CombineMode)
  - System.Drawing.Graphics.SetClip(System.Drawing.Rectangle,System.Drawing.Drawing2D.CombineMode)
  - System.Drawing.Graphics.SetClip(System.Drawing.RectangleF,System.Drawing.Drawing2D.CombineMode)
  - System.Drawing.Graphics.SetClip(System.Drawing.Region,System.Drawing.Drawing2D.CombineMode)
  - System.Drawing.Graphics.SmoothingMode
  - System.Drawing.Graphics.TextContrast
  - System.Drawing.Graphics.TextRenderingHint
  - System.Drawing.Graphics.Transform
  - System.Drawing.Graphics.TransformPoints(System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.Point[])
  - System.Drawing.Graphics.TransformPoints(System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.PointF[])
  - System.Drawing.Graphics.TranslateClip(System.Int32,System.Int32)
  - System.Drawing.Graphics.TranslateClip(System.Single,System.Single)
  - System.Drawing.Graphics.TranslateTransform(System.Single,System.Single)
  - System.Drawing.Graphics.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  - System.Drawing.Graphics.VisibleClipBounds
  langs:
  - csharp
  name: Graphics
  nameWithType: Graphics
  fullName: System.Drawing.Graphics
  type: Class
  summary: "封裝[!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)]繪圖介面。 這個類別無法被繼承。"
  remarks: "圖形類別提供方法給顯示裝置繪圖物件。 圖形都與特定的裝置內容。       您可以藉由呼叫取得圖形物件<xref:System.Windows.Forms.Control.CreateGraphics%2A?displayProperty=fullName>方法繼承自物件上的<xref:System.Windows.Forms.Control?displayProperty=fullName>，或藉由處理控制項的<xref:System.Windows.Forms.Control.Paint?displayProperty=fullName>事件及存取<xref:System.Windows.Forms.PaintEventArgs.Graphics%2A>屬性的<xref:System.Windows.Forms.PaintEventArgs?displayProperty=fullName>類別。</xref:System.Windows.Forms.PaintEventArgs?displayProperty=fullName> </xref:System.Windows.Forms.PaintEventArgs.Graphics%2A> </xref:System.Windows.Forms.Control.Paint?displayProperty=fullName> </xref:System.Windows.Forms.Control?displayProperty=fullName> </xref:System.Windows.Forms.Control.CreateGraphics%2A?displayProperty=fullName> 您也可以建立從映像的圖形物件，使用<xref:System.Drawing.Graphics.FromImage%2A>方法。</xref:System.Drawing.Graphics.FromImage%2A> 如需建立圖形物件的詳細資訊，請參閱[How to︰ 建立繪製的圖形物件](~/add/includes/ajax-current-ext-md.md)。       您可以使用 圖形物件，以繪製許多不同的圖案和線條。 如需如何繪製線條和圖案的詳細資訊，請參閱特定`Draw` *GraphicalElement*行或您想要繪製的圖形的方法。 這些方法包括<xref:System.Drawing.Graphics.DrawLine%2A>， <xref:System.Drawing.Graphics.DrawArc%2A>， <xref:System.Drawing.Graphics.DrawClosedCurve%2A>， <xref:System.Drawing.Graphics.DrawPolygon%2A>，和<xref:System.Drawing.Graphics.DrawRectangle%2A>。</xref:System.Drawing.Graphics.DrawRectangle%2A> </xref:System.Drawing.Graphics.DrawPolygon%2A> </xref:System.Drawing.Graphics.DrawClosedCurve%2A> </xref:System.Drawing.Graphics.DrawArc%2A> </xref:System.Drawing.Graphics.DrawLine%2A> 如需如何繪製線條和圖案的詳細資訊，請參閱[使用畫筆繪製線條和圖案](~/add/includes/ajax-current-ext-md.md)和[使用筆刷填滿圖形](~/add/includes/ajax-current-ext-md.md)。       您也可以藉由繪製影像和圖示<xref:System.Drawing.Graphics.DrawImage%2A>和<xref:System.Drawing.Graphics.DrawIcon%2A>方法，分別。</xref:System.Drawing.Graphics.DrawIcon%2A> </xref:System.Drawing.Graphics.DrawImage%2A> 若要從螢幕的色彩資料位元區塊傳輸執行的圖形物件之繪圖介面中，請參閱<xref:System.Drawing.Graphics.CopyFromScreen%2A>.</xref:System.Drawing.Graphics.CopyFromScreen%2A> 如需如何繪製圖形物件包含的映像的詳細資訊，請參閱[使用影像、 點陣圖、 圖示和中繼檔](~/add/includes/ajax-current-ext-md.md)。       此外，您可以管理圖形物件所使用的座標系統。 如需有關座標系統以及如何操作的詳細資訊，請參閱[座標系統和轉換](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following code example is designed for use with Windows Forms and requires a <xref:System.Windows.Forms.PaintEventArgs> object. The <xref:System.Windows.Forms.PaintEventArgs> object is named `e` and is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates an image from a JPEG file. The file is named SampImag.jpg and is located in the folder of the example.  \n  \n-   Creates a point at which to draw the upper-left corner of the image.  \n  \n-   Draws the unscaled image to the screen by using a Graphics object.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#40](~/add/codesnippet/cpp/t-system.drawing.graphics_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#40](~/add/codesnippet/csharp/t-system.drawing.graphics_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#40](~/add/codesnippet/visualbasic/t-system.drawing.graphics_1.vb)]"
  syntax:
    content: 'public sealed class Graphics : MarshalByRefObject, IDisposable, System.Drawing.IDeviceContext'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  implements:
  - System.Drawing.IDeviceContext
  - System.IDisposable
  inheritedMembers:
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Drawing.Graphics.AddMetafileComment(System.Byte[])
  id: AddMetafileComment(System.Byte[])
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: AddMetafileComment(Byte[])
  nameWithType: Graphics.AddMetafileComment(Byte[])
  fullName: System.Drawing.Graphics.AddMetafileComment(Byte[])
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "將註解加入至目前<xref href=&quot;System.Drawing.Imaging.Metafile&quot;> </xref>。"
  remarks: "這個方法是<xref:System.Drawing.Graphics><xref:System.Drawing.Imaging.Metafile>.</xref:System.Drawing.Imaging.Metafile>相關聯</xref:System.Drawing.Graphics>時才有效此"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler, as well as `thisForm`, the <xref:System.Windows.Forms.Form> for the example. The code performs the following actions:  \n  \n-   Creates a temporary <xref:System.Drawing.Graphics> for creating the metafile and gets an `hdc`, a handle to its device context.  \n  \n-   Creates a new metafile using the `hdc`.  \n  \n-   Creates a <xref:System.Drawing.Graphics> for display of the metafile from the <xref:System.Drawing.Imaging.Metafile>.  \n  \n-   Draws a rectangle to the metafile.  \n  \n-   Adds a comment to the metafile.  \n  \n-   Disposes the <xref:System.Drawing.Graphics> for the metafile-which closes the metafile.  \n  \n-   Disposes the metafile.  \n  \n-   Releases the temporary `hdc`.  \n  \n-   Disposes the temporary <xref:System.Drawing.Graphics>.  \n  \n-   Creates a second metafile from the previously created file.  \n  \n-   Draws the metafile to the screen.  \n  \n-   Disposes the metafile.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#1](~/add/codesnippet/cpp/m-system.drawing.graphic_35_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#1](~/add/codesnippet/csharp/m-system.drawing.graphic_35_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#1](~/add/codesnippet/visualbasic/m-system.drawing.graphic_35_1.vb)]"
  syntax:
    content: public void AddMetafileComment (byte[] data);
    parameters:
    - id: data
      type: System.Byte[]
      description: "包含註解的位元組陣列。"
  overload: System.Drawing.Graphics.AddMetafileComment*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.BeginContainer
  id: BeginContainer
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: BeginContainer()
  nameWithType: Graphics.BeginContainer()
  fullName: System.Drawing.Graphics.BeginContainer()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "目前的狀態儲存圖形容器<xref href=&quot;System.Drawing.Graphics&quot;></xref>並開啟及使用新的圖形容器。"
  remarks: "使用此方法加<xref:System.Drawing.Graphics.EndContainer%2A>方法，以建立巢狀的圖形容器。</xref:System.Drawing.Graphics.EndContainer%2A> 圖形容器保留圖形的狀態，例如轉換、 裁剪區域和呈現屬性。       當您呼叫的 BeginContainer 方法<xref:System.Drawing.Graphics>，保留狀態的資訊區塊<xref:System.Drawing.Graphics>放在堆疊上。</xref:System.Drawing.Graphics> </xref:System.Drawing.Graphics> BeginContainer 方法會傳回<xref:System.Drawing.Drawing2D.GraphicsContainer>可識別該資訊區塊。</xref:System.Drawing.Drawing2D.GraphicsContainer> 當您識別物件傳遞至<xref:System.Drawing.Graphics.EndContainer%2A>方法，資訊區塊會從堆疊移除，且用來還原<xref:System.Drawing.Graphics>狀態當時 BeginContainer 方法呼叫的時間。</xref:System.Drawing.Graphics> </xref:System.Drawing.Graphics.EndContainer%2A>       可以是巢狀容器。也就是說，您可以呼叫 BeginContainer 方法多次呼叫之前<xref:System.Drawing.Graphics.EndContainer%2A>方法。</xref:System.Drawing.Graphics.EndContainer%2A> 每當您呼叫 BeginContainer 方法，一個資訊區塊會放在堆疊上，而且您收到<xref:System.Drawing.Drawing2D.GraphicsContainer>資訊區塊。</xref:System.Drawing.Drawing2D.GraphicsContainer> 當您將傳遞的其中一個物件的<xref:System.Drawing.Graphics.EndContainer%2A>方法，<xref:System.Drawing.Graphics>會回復成傳回該特定<xref:System.Drawing.Drawing2D.GraphicsContainer>.</xref:System.Drawing.Drawing2D.GraphicsContainer>狀態它已在 BeginContainer 方法時呼叫</xref:System.Drawing.Graphics></xref:System.Drawing.Graphics.EndContainer%2A> 資訊區塊放上的堆疊 BeginContainer 方法呼叫會從堆疊移除，也會移除該 BeginContainer 方法呼叫之後，該堆疊置於所有資訊區塊。       呼叫<xref:System.Drawing.Graphics.Save%2A>相同 BeginContainer 方法的呼叫堆疊上方法的位置資訊區塊。</xref:System.Drawing.Graphics.Save%2A> 就像<xref:System.Drawing.Graphics.EndContainer%2A>方法呼叫搭配 BeginContainer 方法呼叫，<xref:System.Drawing.Graphics.Restore%2A>方法呼叫搭配<xref:System.Drawing.Graphics.Save%2A>方法呼叫。</xref:System.Drawing.Graphics.Save%2A> </xref:System.Drawing.Graphics.Restore%2A> </xref:System.Drawing.Graphics.EndContainer%2A>       當您呼叫<xref:System.Drawing.Graphics.EndContainer%2A>方法中，放置在堆疊上的所有資訊區塊 (由<xref:System.Drawing.Graphics.Save%2A>方法或 BeginContainer 方法) 從堆疊移除對應至 BeginContainer 方法呼叫之後。</xref:System.Drawing.Graphics.Save%2A> </xref:System.Drawing.Graphics.EndContainer%2A> 同樣地，當您呼叫<xref:System.Drawing.Graphics.Restore%2A>方法中，放置在堆疊上的所有資訊區塊 (由<xref:System.Drawing.Graphics.Save%2A>方法或 BeginContainer 方法) 之後的對應呼叫<xref:System.Drawing.Graphics.Save%2A>方法會從堆疊移除。</xref:System.Drawing.Graphics.Save%2A> </xref:System.Drawing.Graphics.Save%2A> </xref:System.Drawing.Graphics.Restore%2A>       BeginContainer 方法所建立的圖形狀態包括預設圖形狀態; 的呈現品質任何現有的呼叫方法時的呈現品質狀態變更會重設為預設值。"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Opens a new graphics container and saves the old container.  \n  \n-   Translates the world coordinates in the container.  \n  \n-   Fills a red rectangle in the (translated coordinates of the) new container.  \n  \n-   Closes the new container and restores the saved container.  \n  \n-   Fills a green rectangle (to the untranslated coordinates) of the saved container.  \n  \n The result is a green rectangle that overlies a red rectangle of the same size.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#2](~/add/codesnippet/cpp/m-system.drawing.graphic_7_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#2](~/add/codesnippet/csharp/m-system.drawing.graphic_7_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#2](~/add/codesnippet/visualbasic/m-system.drawing.graphic_7_1.vb)]"
  syntax:
    content: public System.Drawing.Drawing2D.GraphicsContainer BeginContainer ();
    parameters: []
    return:
      type: System.Drawing.Drawing2D.GraphicsContainer
      description: "這個方法會傳回<xref href=&quot;System.Drawing.Drawing2D.GraphicsContainer&quot;></xref>這個狀態表示<xref href=&quot;System.Drawing.Graphics&quot;></xref>在方法呼叫的時間。"
  overload: System.Drawing.Graphics.BeginContainer*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.BeginContainer(System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)
  id: BeginContainer(System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: BeginContainer(Rectangle,Rectangle,GraphicsUnit)
  nameWithType: Graphics.BeginContainer(Rectangle,Rectangle,GraphicsUnit)
  fullName: System.Drawing.Graphics.BeginContainer(Rectangle,Rectangle,GraphicsUnit)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "目前的狀態儲存圖形容器<xref href=&quot;System.Drawing.Graphics&quot;></xref>並開啟和使用新的圖形容器，使用指定之縮放變換。"
  remarks: "使用此方法加<xref:System.Drawing.Graphics.EndContainer%2A>方法，以建立巢狀的圖形容器。</xref:System.Drawing.Graphics.EndContainer%2A> 圖形容器保留圖形的狀態，例如轉換、 裁剪區域和呈現屬性。       當您呼叫<xref:System.Drawing.Graphics.BeginContainer%2A>方法<xref:System.Drawing.Graphics>，保留狀態的資訊區塊<xref:System.Drawing.Graphics>放在堆疊上。</xref:System.Drawing.Graphics> </xref:System.Drawing.Graphics> </xref:System.Drawing.Graphics.BeginContainer%2A> <xref:System.Drawing.Graphics.BeginContainer%2A>方法會傳回<xref:System.Drawing.Drawing2D.GraphicsContainer>可識別該資訊區塊。</xref:System.Drawing.Drawing2D.GraphicsContainer> </xref:System.Drawing.Graphics.BeginContainer%2A> 當您識別物件傳遞至<xref:System.Drawing.Graphics.EndContainer%2A>方法，資訊區塊會從堆疊移除，且用來還原<xref:System.Drawing.Graphics>的時間當時的狀態<xref:System.Drawing.Graphics.BeginContainer%2A>方法呼叫。</xref:System.Drawing.Graphics.BeginContainer%2A> </xref:System.Drawing.Graphics> </xref:System.Drawing.Graphics.EndContainer%2A>       可以是巢狀容器。也就是說，您可以呼叫<xref:System.Drawing.Graphics.BeginContainer%2A>方法多次，才能呼叫<xref:System.Drawing.Graphics.EndContainer%2A>方法。</xref:System.Drawing.Graphics.EndContainer%2A> </xref:System.Drawing.Graphics.BeginContainer%2A> 每次呼叫<xref:System.Drawing.Graphics.BeginContainer%2A>方法，一個資訊區塊會放在堆疊上，而且您收到<xref:System.Drawing.Drawing2D.GraphicsContainer>資訊區塊。</xref:System.Drawing.Drawing2D.GraphicsContainer> </xref:System.Drawing.Graphics.BeginContainer%2A> 當您將傳遞的其中一個物件的<xref:System.Drawing.Graphics.EndContainer%2A>方法，<xref:System.Drawing.Graphics>傳回給<xref:System.Drawing.Graphics.BeginContainer%2A>方法呼叫傳回<xref:System.Drawing.Drawing2D.GraphicsContainer>.</xref:System.Drawing.Drawing2D.GraphicsContainer>該特定</xref:System.Drawing.Graphics.BeginContainer%2A>的時間當時的狀態</xref:System.Drawing.Graphics></xref:System.Drawing.Graphics.EndContainer%2A> 資訊區塊放置在堆疊上的<xref:System.Drawing.Graphics.BeginContainer%2A>方法呼叫會從堆疊移除，且之後的所有資訊區塊放都置於該堆疊上<xref:System.Drawing.Graphics.BeginContainer%2A>方法呼叫也會移除。</xref:System.Drawing.Graphics.BeginContainer%2A> </xref:System.Drawing.Graphics.BeginContainer%2A>       呼叫<xref:System.Drawing.Graphics.Save%2A>相同呼叫堆疊上方法的位置資訊區塊<xref:System.Drawing.Graphics.BeginContainer%2A>方法。</xref:System.Drawing.Graphics.BeginContainer%2A> </xref:System.Drawing.Graphics.Save%2A> 就像<xref:System.Drawing.Graphics.EndContainer%2A>方法呼叫搭配<xref:System.Drawing.Graphics.BeginContainer%2A>方法呼叫<xref:System.Drawing.Graphics.Restore%2A>方法呼叫搭配<xref:System.Drawing.Graphics.Save%2A>方法呼叫。</xref:System.Drawing.Graphics.Save%2A> </xref:System.Drawing.Graphics.Restore%2A> </xref:System.Drawing.Graphics.BeginContainer%2A> </xref:System.Drawing.Graphics.EndContainer%2A>       當您呼叫<xref:System.Drawing.Graphics.EndContainer%2A>方法中，放置在堆疊上的所有資訊區塊 (由<xref:System.Drawing.Graphics.Save%2A>方法或由<xref:System.Drawing.Graphics.BeginContainer%2A>方法) 之後的對應呼叫<xref:System.Drawing.Graphics.BeginContainer%2A>方法會從堆疊移除。</xref:System.Drawing.Graphics.BeginContainer%2A> </xref:System.Drawing.Graphics.BeginContainer%2A> </xref:System.Drawing.Graphics.Save%2A> </xref:System.Drawing.Graphics.EndContainer%2A> 同樣地，當您呼叫<xref:System.Drawing.Graphics.Restore%2A>方法中，放置在堆疊上的所有資訊區塊 (由<xref:System.Drawing.Graphics.Save%2A>方法或由<xref:System.Drawing.Graphics.BeginContainer%2A>方法) 之後的對應呼叫<xref:System.Drawing.Graphics.Save%2A>方法會從堆疊移除。</xref:System.Drawing.Graphics.Save%2A> </xref:System.Drawing.Graphics.BeginContainer%2A> </xref:System.Drawing.Graphics.Save%2A> </xref:System.Drawing.Graphics.Restore%2A>       這個方法會指定與新的圖形容器的縮放變換`dstrect`和`srcrect`參數。 小數位數等於轉換，當套用至`srcrect`，導致`dstrect`。       所建立的圖形狀態<xref:System.Drawing.Graphics.BeginContainer%2A>方法包含預設的圖形狀態的呈現品質，則任何現有的呼叫方法時的呈現品質狀態變更會重設為預設值。</xref:System.Drawing.Graphics.BeginContainer%2A>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates two rectangles to specify a scale transformation for the new container.  \n  \n-   Opens the new graphics container and saves the old container.  \n  \n-   Fills a red rectangle in the (scaled coordinates of the) new container.  \n  \n-   Closes the new container and restores the saved container.  \n  \n-   Fills a green rectangle (to the unscaled coordinates) of the saved container.  \n  \n The result is a green rectangle that overlies a smaller red rectangle.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#3](~/add/codesnippet/cpp/87d94b02-87d7-4889-aab2-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#3](~/add/codesnippet/csharp/87d94b02-87d7-4889-aab2-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#3](~/add/codesnippet/visualbasic/87d94b02-87d7-4889-aab2-_1.vb)]"
  syntax:
    content: public System.Drawing.Drawing2D.GraphicsContainer BeginContainer (System.Drawing.Rectangle dstrect, System.Drawing.Rectangle srcrect, System.Drawing.GraphicsUnit unit);
    parameters:
    - id: dstrect
      type: System.Drawing.Rectangle
      description: "<xref href=&quot;System.Drawing.Rectangle&quot;></xref>結構，並搭配`srcrect`參數，指定容器的縮放變換。"
    - id: srcrect
      type: System.Drawing.Rectangle
      description: "<xref href=&quot;System.Drawing.Rectangle&quot;></xref>結構，並搭配`dstrect`參數，指定容器的縮放變換。"
    - id: unit
      type: System.Drawing.GraphicsUnit
      description: "成員的<xref href=&quot;System.Drawing.GraphicsUnit&quot;></xref>列舉，指定容器的測量單位。"
    return:
      type: System.Drawing.Drawing2D.GraphicsContainer
      description: "這個方法會傳回<xref href=&quot;System.Drawing.Drawing2D.GraphicsContainer&quot;></xref>這個狀態表示<xref href=&quot;System.Drawing.Graphics&quot;></xref>在方法呼叫的時間。"
  overload: System.Drawing.Graphics.BeginContainer*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.BeginContainer(System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)
  id: BeginContainer(System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: BeginContainer(RectangleF,RectangleF,GraphicsUnit)
  nameWithType: Graphics.BeginContainer(RectangleF,RectangleF,GraphicsUnit)
  fullName: System.Drawing.Graphics.BeginContainer(RectangleF,RectangleF,GraphicsUnit)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "目前的狀態儲存圖形容器<xref href=&quot;System.Drawing.Graphics&quot;></xref>並開啟和使用新的圖形容器，使用指定之縮放變換。"
  remarks: "使用此方法加<xref:System.Drawing.Graphics.EndContainer%2A>方法，以建立巢狀的圖形容器。</xref:System.Drawing.Graphics.EndContainer%2A> 圖形容器保留圖形的狀態，例如轉換、 裁剪區域和呈現屬性。       當您呼叫<xref:System.Drawing.Graphics.BeginContainer%2A>方法<xref:System.Drawing.Graphics>，保留狀態的資訊區塊<xref:System.Drawing.Graphics>放在堆疊上。</xref:System.Drawing.Graphics> </xref:System.Drawing.Graphics> </xref:System.Drawing.Graphics.BeginContainer%2A> <xref:System.Drawing.Graphics.BeginContainer%2A>方法會傳回<xref:System.Drawing.Drawing2D.GraphicsContainer>可識別該資訊區塊。</xref:System.Drawing.Drawing2D.GraphicsContainer> </xref:System.Drawing.Graphics.BeginContainer%2A> 當您識別物件傳遞至<xref:System.Drawing.Graphics.EndContainer%2A>方法，資訊區塊會從堆疊移除，且用來還原<xref:System.Drawing.Graphics>的時間當時的狀態<xref:System.Drawing.Graphics.BeginContainer%2A>方法呼叫。</xref:System.Drawing.Graphics.BeginContainer%2A> </xref:System.Drawing.Graphics> </xref:System.Drawing.Graphics.EndContainer%2A>       可以是巢狀容器。也就是說，您可以呼叫<xref:System.Drawing.Graphics.BeginContainer%2A>方法多次，才能呼叫<xref:System.Drawing.Graphics.EndContainer%2A>方法。</xref:System.Drawing.Graphics.EndContainer%2A> </xref:System.Drawing.Graphics.BeginContainer%2A> 每次呼叫<xref:System.Drawing.Graphics.BeginContainer%2A>方法，一個資訊區塊會放在堆疊上，而且您收到<xref:System.Drawing.Drawing2D.GraphicsContainer>資訊區塊。</xref:System.Drawing.Drawing2D.GraphicsContainer> </xref:System.Drawing.Graphics.BeginContainer%2A> 當您將傳遞的其中一個物件的<xref:System.Drawing.Graphics.EndContainer%2A>方法，<xref:System.Drawing.Graphics>傳回給<xref:System.Drawing.Graphics.BeginContainer%2A>方法呼叫傳回<xref:System.Drawing.Drawing2D.GraphicsContainer>.</xref:System.Drawing.Drawing2D.GraphicsContainer>該特定</xref:System.Drawing.Graphics.BeginContainer%2A>的時間當時的狀態</xref:System.Drawing.Graphics></xref:System.Drawing.Graphics.EndContainer%2A> 資訊區塊放置在堆疊上的<xref:System.Drawing.Graphics.BeginContainer%2A>方法呼叫會從堆疊移除，且之後的所有資訊區塊放都置於該堆疊上<xref:System.Drawing.Graphics.BeginContainer%2A>方法呼叫也會移除。</xref:System.Drawing.Graphics.BeginContainer%2A> </xref:System.Drawing.Graphics.BeginContainer%2A>       呼叫<xref:System.Drawing.Graphics.Save%2A>相同呼叫堆疊上方法的位置資訊區塊<xref:System.Drawing.Graphics.BeginContainer%2A>方法。</xref:System.Drawing.Graphics.BeginContainer%2A> </xref:System.Drawing.Graphics.Save%2A> 就像<xref:System.Drawing.Graphics.EndContainer%2A>方法呼叫搭配<xref:System.Drawing.Graphics.BeginContainer%2A>方法呼叫<xref:System.Drawing.Graphics.Restore%2A>方法呼叫搭配<xref:System.Drawing.Graphics.Save%2A>方法呼叫。</xref:System.Drawing.Graphics.Save%2A> </xref:System.Drawing.Graphics.Restore%2A> </xref:System.Drawing.Graphics.BeginContainer%2A> </xref:System.Drawing.Graphics.EndContainer%2A>       當您呼叫<xref:System.Drawing.Graphics.EndContainer%2A>方法中，放置在堆疊上的所有資訊區塊 (由`Save`方法或由<xref:System.Drawing.Graphics.BeginContainer%2A>方法) 之後的對應呼叫<xref:System.Drawing.Graphics.BeginContainer%2A>方法會從堆疊移除。</xref:System.Drawing.Graphics.BeginContainer%2A> </xref:System.Drawing.Graphics.BeginContainer%2A> </xref:System.Drawing.Graphics.EndContainer%2A> 同樣地，當您呼叫<xref:System.Drawing.Graphics.Restore%2A>方法中，放置在堆疊上的所有資訊區塊 (由<xref:System.Drawing.Graphics.Save%2A>方法或由<xref:System.Drawing.Graphics.BeginContainer%2A>方法) 之後的對應呼叫<xref:System.Drawing.Graphics.Save%2A>方法會從堆疊移除。</xref:System.Drawing.Graphics.Save%2A> </xref:System.Drawing.Graphics.BeginContainer%2A> </xref:System.Drawing.Graphics.Save%2A> </xref:System.Drawing.Graphics.Restore%2A>       這個方法會指定與新的圖形容器的縮放變換`dstrect`和`srcrect`參數。 小數位數等於轉換，當套用至`srcrect`，導致`dstrect`。       所建立的圖形狀態<xref:System.Drawing.Graphics.BeginContainer%2A>方法包含預設的圖形狀態的呈現品質，則任何現有的呼叫方法時的呈現品質狀態變更會重設為預設值。</xref:System.Drawing.Graphics.BeginContainer%2A>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates two rectangles to specify a scale transformation for the new container.  \n  \n-   Opens the new graphics container and saves the old container.  \n  \n-   Fills a red rectangle in the (scaled coordinates of the) new container.  \n  \n-   Closes the new container and restores the saved container.  \n  \n-   Fills a green rectangle (to the unscaled coordinates) of the saved container.  \n  \n The result is a green rectangle that overlies a smaller red rectangle.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#4](~/add/codesnippet/cpp/5890f59d-213c-41f2-9949-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#4](~/add/codesnippet/csharp/5890f59d-213c-41f2-9949-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#4](~/add/codesnippet/visualbasic/5890f59d-213c-41f2-9949-_1.vb)]"
  syntax:
    content: public System.Drawing.Drawing2D.GraphicsContainer BeginContainer (System.Drawing.RectangleF dstrect, System.Drawing.RectangleF srcrect, System.Drawing.GraphicsUnit unit);
    parameters:
    - id: dstrect
      type: System.Drawing.RectangleF
      description: "<xref href=&quot;System.Drawing.RectangleF&quot;></xref>結構，並搭配`srcrect`參數，指定新圖形容器的縮放變換。"
    - id: srcrect
      type: System.Drawing.RectangleF
      description: "<xref href=&quot;System.Drawing.RectangleF&quot;></xref>結構，並搭配`dstrect`參數，指定新圖形容器的縮放變換。"
    - id: unit
      type: System.Drawing.GraphicsUnit
      description: "成員的<xref href=&quot;System.Drawing.GraphicsUnit&quot;></xref>列舉，指定容器的測量單位。"
    return:
      type: System.Drawing.Drawing2D.GraphicsContainer
      description: "這個方法會傳回<xref href=&quot;System.Drawing.Drawing2D.GraphicsContainer&quot;></xref>這個狀態表示<xref href=&quot;System.Drawing.Graphics&quot;></xref>在方法呼叫的時間。"
  overload: System.Drawing.Graphics.BeginContainer*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.Clear(System.Drawing.Color)
  id: Clear(System.Drawing.Color)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: Clear(Color)
  nameWithType: Graphics.Clear(Color)
  fullName: System.Drawing.Graphics.Clear(Color)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "清除整個繪圖介面，並填滿指定的背景色彩。"
  remarks: "清除方法清除圖形物件的狀態，並不應該呼叫時的圖形物件無法更新。 比方說，如果在終端機伺服器工作階段中，呼叫 Clear 方法在安全桌面上<xref:System.Runtime.InteropServices.ExternalException>可能會發生，離開<xref:System.Drawing.Graphics>物件不一致的狀態。</xref:System.Drawing.Graphics> </xref:System.Runtime.InteropServices.ExternalException>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code clears the drawing surface of the <xref:System.Drawing.Graphics> and sets the background color to the system-defined teal color.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#5](~/add/codesnippet/cpp/m-system.drawing.graphic_11_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#5](~/add/codesnippet/csharp/m-system.drawing.graphic_11_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#5](~/add/codesnippet/visualbasic/m-system.drawing.graphic_11_1.vb)]"
  syntax:
    content: public void Clear (System.Drawing.Color color);
    parameters:
    - id: color
      type: System.Drawing.Color
      description: "<xref href=&quot;System.Drawing.Color&quot;></xref>結構，表示繪圖介面的背景色彩。"
  overload: System.Drawing.Graphics.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.Clip
  id: Clip
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: Clip
  nameWithType: Graphics.Clip
  fullName: System.Drawing.Graphics.Clip
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "取得或設定<xref href=&quot;System.Drawing.Region&quot;> </xref> ，它會限制的繪圖區域<xref href=&quot;System.Drawing.Graphics&quot;> </xref>。"
  remarks: "修改<xref:System.Drawing.Region>剪輯屬性所傳回的物件不會影響後續的繪圖<xref:System.Drawing.Graphics>物件。</xref:System.Drawing.Graphics> </xref:System.Drawing.Region> 若要變更的裁剪區域，取代剪輯屬性值與新<xref:System.Drawing.Region>物件。</xref:System.Drawing.Region> 若要判斷是否為無限的裁剪區域，擷取剪輯屬性並呼叫其<xref:System.Drawing.Region.IsInfinite%2A>方法。</xref:System.Drawing.Region.IsInfinite%2A>"
  example:
  - "The following code example demonstrates the use of the Clip property. This example is designed to be used with Windows Forms. Paste the code into a form and call the `SetAndFillClip` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cpp[System.Drawing.GraphicsProperties#4](~/add/codesnippet/cpp/p-system.drawing.graphic_6_1.cpp)]\n [!code-vb[System.Drawing.GraphicsProperties#4](~/add/codesnippet/visualbasic/p-system.drawing.graphic_6_1.vb)]\n [!code-cs[System.Drawing.GraphicsProperties#4](~/add/codesnippet/csharp/p-system.drawing.graphic_6_1.cs)]"
  syntax:
    content: public System.Drawing.Region Clip { get; set; }
    return:
      type: System.Drawing.Region
      description: "A <xref href=&quot;System.Drawing.Region&quot;> </xref> ，它會限制這個部分<xref href=&quot;System.Drawing.Graphics&quot;></xref>目前可用於繪圖。"
  overload: System.Drawing.Graphics.Clip*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.ClipBounds
  id: ClipBounds
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: ClipBounds
  nameWithType: Graphics.ClipBounds
  fullName: System.Drawing.Graphics.ClipBounds
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "取得<xref href=&quot;System.Drawing.RectangleF&quot;></xref>結構會框住的裁剪區域<xref href=&quot;System.Drawing.Graphics&quot;> </xref>。"
  remarks: "產生的矩形的單位由所指定<xref:System.Drawing.Graphics.PageUnit%2A>屬性。</xref:System.Drawing.Graphics.PageUnit%2A> 預設單位為像素。 A<xref:System.Drawing.Graphics>通常與控制項相關聯的來源矩形將會相對於該控制項的用戶端區域。</xref:System.Drawing.Graphics>       如果是無限的裁剪區域，ClipBounds 屬性會傳回一個無意義的大矩形。 若要判斷是否為無限的裁剪區域，擷取<xref:System.Drawing.Graphics.Clip%2A>屬性並呼叫其<xref:System.Drawing.Region.IsInfinite%2A>方法。</xref:System.Drawing.Region.IsInfinite%2A> </xref:System.Drawing.Graphics.Clip%2A>"
  syntax:
    content: public System.Drawing.RectangleF ClipBounds { get; }
    return:
      type: System.Drawing.RectangleF
      description: "A <xref href=&quot;System.Drawing.RectangleF&quot;> </xref>結構，表示這個之裁剪區域的周框<xref href=&quot;System.Drawing.Graphics&quot;> </xref>。"
  overload: System.Drawing.Graphics.ClipBounds*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.CompositingMode
  id: CompositingMode
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: CompositingMode
  nameWithType: Graphics.CompositingMode
  fullName: System.Drawing.Graphics.CompositingMode
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "取得值，指定如何將複合影像繪製至這個<xref href=&quot;System.Drawing.Graphics&quot;> </xref>。"
  remarks: "複合模式決定是否從來源映像素為單位覆寫，或會結合背景像素為單位。      > [!NOTE] > 您不應該使用的屬性值 CompositingMode<xref:System.Drawing.Drawing2D.CompositingMode>時的<xref:System.Drawing.Graphics.TextRenderingHint%2A>屬性設定為<xref:System.Drawing.Text.TextRenderingHint>.</xref:System.Drawing.Text.TextRenderingHint> </xref:System.Drawing.Graphics.TextRenderingHint%2A> </xref:System.Drawing.Drawing2D.CompositingMode> 無法在發生例外狀況或映像可能無法正確呈現。"
  syntax:
    content: public System.Drawing.Drawing2D.CompositingMode CompositingMode { get; set; }
    return:
      type: System.Drawing.Drawing2D.CompositingMode
      description: "此屬性指定的成員<xref href=&quot;System.Drawing.Drawing2D.CompositingMode&quot;></xref>列舉型別。 預設值是<xref href=&quot;System.Drawing.Drawing2D.CompositingMode&quot;> </xref>。"
  overload: System.Drawing.Graphics.CompositingMode*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.CompositingQuality
  id: CompositingQuality
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: CompositingQuality
  nameWithType: Graphics.CompositingQuality
  fullName: System.Drawing.Graphics.CompositingQuality
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "取得或設定之複合影像繪製至這個的呈現品質<xref href=&quot;System.Drawing.Graphics&quot;> </xref>。"
  remarks: "複合品質決定之複合影像的呈現品質等級。"
  syntax:
    content: public System.Drawing.Drawing2D.CompositingQuality CompositingQuality { get; set; }
    return:
      type: System.Drawing.Drawing2D.CompositingQuality
      description: "此屬性指定的成員<xref href=&quot;System.Drawing.Drawing2D.CompositingQuality&quot;></xref>列舉型別。 預設值是<xref href=&quot;System.Drawing.Drawing2D.CompositingQuality&quot;> </xref>。"
  overload: System.Drawing.Graphics.CompositingQuality*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.CopyFromScreen(System.Drawing.Point,System.Drawing.Point,System.Drawing.Size)
  id: CopyFromScreen(System.Drawing.Point,System.Drawing.Point,System.Drawing.Size)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: CopyFromScreen(Point,Point,Size)
  nameWithType: Graphics.CopyFromScreen(Point,Point,Size)
  fullName: System.Drawing.Graphics.CopyFromScreen(Point,Point,Size)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "執行從之繪圖介面的螢幕的像素矩形相對應的色彩資料位元區塊傳輸<xref href=&quot;System.Drawing.Graphics&quot;> </xref>。"
  remarks: "CopyFromScreen 方法可用於分層之上另一個映像。 若要指定來源和目的地的色彩混合的方式，使用其中一種<xref:System.Drawing.Graphics.CopyFromScreen%2A>方法，取得<xref:System.Drawing.CopyPixelOperation>參數。</xref:System.Drawing.CopyPixelOperation> </xref:System.Drawing.Graphics.CopyFromScreen%2A>"
  example:
  - "The following example demonstrates how to use the CopyFromScreen method. To run this example, paste it into a Windows Form. Handle the form’s <xref:System.Windows.Forms.Control.Paint> event and call the `CopyPixels1` method from the <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-vb[System.Drawing.MiscWhidbeySnippets#4](~/add/codesnippet/visualbasic/f034ccae-68c0-49a1-b18f-_1.vb)]\n [!code-cs[System.Drawing.MiscWhidbeySnippets#4](~/add/codesnippet/csharp/f034ccae-68c0-49a1-b18f-_1.cs)]"
  syntax:
    content: public void CopyFromScreen (System.Drawing.Point upperLeftSource, System.Drawing.Point upperLeftDestination, System.Drawing.Size blockRegionSize);
    parameters:
    - id: upperLeftSource
      type: System.Drawing.Point
      description: "來源矩形左上角的點。"
    - id: upperLeftDestination
      type: System.Drawing.Point
      description: "目的矩形左上角的點。"
    - id: blockRegionSize
      type: System.Drawing.Size
      description: "要傳送的區域大小。"
  overload: System.Drawing.Graphics.CopyFromScreen*
  exceptions:
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "作業失敗。"
  platform:
  - net462
- uid: System.Drawing.Graphics.CopyFromScreen(System.Drawing.Point,System.Drawing.Point,System.Drawing.Size,System.Drawing.CopyPixelOperation)
  id: CopyFromScreen(System.Drawing.Point,System.Drawing.Point,System.Drawing.Size,System.Drawing.CopyPixelOperation)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: CopyFromScreen(Point,Point,Size,CopyPixelOperation)
  nameWithType: Graphics.CopyFromScreen(Point,Point,Size,CopyPixelOperation)
  fullName: System.Drawing.Graphics.CopyFromScreen(Point,Point,Size,CopyPixelOperation)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "執行從之繪圖介面的螢幕的像素矩形相對應的色彩資料位元區塊傳輸<xref href=&quot;System.Drawing.Graphics&quot;> </xref>。"
  remarks: "<xref:System.Drawing.Graphics.CopyFromScreen%2A>方法可用於分層之上另一個映像。</xref:System.Drawing.Graphics.CopyFromScreen%2A> `copyPixelOperation`參數可讓您可以指定如果及來源色彩應該如何混合使用之目標區域中的色彩。"
  example:
  - "The following example demonstrates how to use the CopyFromScreen method. To run this example, paste it into a Windows Form. Handle the form’s <xref:System.Windows.Forms.Control.Paint> event and call the `CopyPixels2` method from the <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-vb[System.Drawing.MiscWhidbeySnippets#5](~/add/codesnippet/visualbasic/4f8cba74-e878-4407-b71b-_1.vb)]\n [!code-cs[System.Drawing.MiscWhidbeySnippets#5](~/add/codesnippet/csharp/4f8cba74-e878-4407-b71b-_1.cs)]"
  syntax:
    content: public void CopyFromScreen (System.Drawing.Point upperLeftSource, System.Drawing.Point upperLeftDestination, System.Drawing.Size blockRegionSize, System.Drawing.CopyPixelOperation copyPixelOperation);
    parameters:
    - id: upperLeftSource
      type: System.Drawing.Point
      description: "來源矩形左上角的點。"
    - id: upperLeftDestination
      type: System.Drawing.Point
      description: "目的矩形左上角的點。"
    - id: blockRegionSize
      type: System.Drawing.Size
      description: "要傳送的區域大小。"
    - id: copyPixelOperation
      type: System.Drawing.CopyPixelOperation
      description: "其中一個<xref href=&quot;System.Drawing.CopyPixelOperation&quot;></xref>值。"
  overload: System.Drawing.Graphics.CopyFromScreen*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "<code>copyPixelOperation</code>不是成員的<xref href=&quot;System.Drawing.CopyPixelOperation&quot;> </xref>。"
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "作業失敗。"
  platform:
  - net462
- uid: System.Drawing.Graphics.CopyFromScreen(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Size)
  id: CopyFromScreen(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Size)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: CopyFromScreen(Int32,Int32,Int32,Int32,Size)
  nameWithType: Graphics.CopyFromScreen(Int32,Int32,Int32,Int32,Size)
  fullName: System.Drawing.Graphics.CopyFromScreen(Int32,Int32,Int32,Int32,Size)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "執行從之繪圖介面的螢幕的像素矩形相對應的色彩資料位元區塊傳輸<xref href=&quot;System.Drawing.Graphics&quot;> </xref>。"
  remarks: "<xref:System.Drawing.Graphics.CopyFromScreen%2A>方法可用於分層之上另一個映像。</xref:System.Drawing.Graphics.CopyFromScreen%2A> 若要指定來源和目的地的色彩混合的方式，使用其中一個會採用 CopyFromScreen 方法<xref:System.Drawing.CopyPixelOperation>參數。</xref:System.Drawing.CopyPixelOperation>"
  example:
  - "The following code example demonstrates how to use the <xref:System.Drawing.Graphics.CopyFromScreen%2A> for printing a copy of the current form.  \n  \n [!code-cs[System.Drawing.Graphics.CopyFromScreen#1](~/add/codesnippet/csharp/374af905-18c0-4d48-aa6c-_1.cs)]\n [!code-vb[System.Drawing.Graphics.CopyFromScreen#1](~/add/codesnippet/visualbasic/374af905-18c0-4d48-aa6c-_1.vb)]"
  syntax:
    content: public void CopyFromScreen (int sourceX, int sourceY, int destinationX, int destinationY, System.Drawing.Size blockRegionSize);
    parameters:
    - id: sourceX
      type: System.Int32
      description: "來源矩形左上角之點的 x 座標。"
    - id: sourceY
      type: System.Int32
      description: "來源矩形左上角之點的 y 座標。"
    - id: destinationX
      type: System.Int32
      description: "目的矩形左上角之點的 x 座標。"
    - id: destinationY
      type: System.Int32
      description: "目的矩形左上角之點的 y 座標。"
    - id: blockRegionSize
      type: System.Drawing.Size
      description: "要傳送的區域大小。"
  overload: System.Drawing.Graphics.CopyFromScreen*
  exceptions:
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "作業失敗。"
  platform:
  - net462
- uid: System.Drawing.Graphics.CopyFromScreen(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Size,System.Drawing.CopyPixelOperation)
  id: CopyFromScreen(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Size,System.Drawing.CopyPixelOperation)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: CopyFromScreen(Int32,Int32,Int32,Int32,Size,CopyPixelOperation)
  nameWithType: Graphics.CopyFromScreen(Int32,Int32,Int32,Int32,Size,CopyPixelOperation)
  fullName: System.Drawing.Graphics.CopyFromScreen(Int32,Int32,Int32,Int32,Size,CopyPixelOperation)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "執行從之繪圖介面的螢幕的像素矩形相對應的色彩資料位元區塊傳輸<xref href=&quot;System.Drawing.Graphics&quot;> </xref>。"
  remarks: "<xref:System.Drawing.Graphics.CopyFromScreen%2A>方法可用於分層之上另一個映像。</xref:System.Drawing.Graphics.CopyFromScreen%2A> `copyPixelOperation`參數可讓您可以指定如果及來源色彩應該如何混合使用之目標區域中的色彩。"
  example:
  - "The following example demonstrates how to use the CopyFromScreen method. To run this example, paste it into a Windows Form. Handle the form’s <xref:System.Windows.Forms.Control.Paint> event and call the `CopyPixels4` method from the <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-vb[System.Drawing.MiscWhidbeySnippets#7](~/add/codesnippet/visualbasic/f1d5c2c4-f05b-4fb9-a6ef-_1.vb)]\n [!code-cs[System.Drawing.MiscWhidbeySnippets#7](~/add/codesnippet/csharp/f1d5c2c4-f05b-4fb9-a6ef-_1.cs)]"
  syntax:
    content: public void CopyFromScreen (int sourceX, int sourceY, int destinationX, int destinationY, System.Drawing.Size blockRegionSize, System.Drawing.CopyPixelOperation copyPixelOperation);
    parameters:
    - id: sourceX
      type: System.Int32
      description: "來源矩形左上角之點的 x 座標。"
    - id: sourceY
      type: System.Int32
      description: "來源矩形左上角之點的 y 座標"
    - id: destinationX
      type: System.Int32
      description: "目的矩形左上角之點的 x 座標。"
    - id: destinationY
      type: System.Int32
      description: "目的矩形左上角之點的 y 座標。"
    - id: blockRegionSize
      type: System.Drawing.Size
      description: "要傳送的區域大小。"
    - id: copyPixelOperation
      type: System.Drawing.CopyPixelOperation
      description: "其中一個<xref href=&quot;System.Drawing.CopyPixelOperation&quot;></xref>值。"
  overload: System.Drawing.Graphics.CopyFromScreen*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "<code>copyPixelOperation</code>不是成員的<xref href=&quot;System.Drawing.CopyPixelOperation&quot;> </xref>。"
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "作業失敗。"
  platform:
  - net462
- uid: System.Drawing.Graphics.Dispose
  id: Dispose
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: Dispose()
  nameWithType: Graphics.Dispose()
  fullName: System.Drawing.Graphics.Dispose()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "所使用的資源全部釋出<xref href=&quot;System.Drawing.Graphics&quot;> </xref>。"
  remarks: "呼叫 Dispose 允許所使用的資源<xref:System.Drawing.Graphics>都重新配置用於其他用途。</xref:System.Drawing.Graphics>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates an <xref:System.Drawing.Image> from a graphics file SampImag.jpg in the example directory.  \n  \n-   Creates a <xref:System.Drawing.Graphics> from the <xref:System.Drawing.Image>.  \n  \n-   Alters the image by filling a rectangle within it.  \n  \n-   Draws the <xref:System.Drawing.Image> to the screen.  \n  \n-   Releases the created <xref:System.Drawing.Graphics>.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#6](~/add/codesnippet/cpp/m-system.drawing.graphic_23_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#6](~/add/codesnippet/csharp/m-system.drawing.graphic_23_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#6](~/add/codesnippet/visualbasic/m-system.drawing.graphic_23_1.vb)]"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Drawing.Graphics.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.DpiX
  id: DpiX
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DpiX
  nameWithType: Graphics.DpiX
  fullName: System.Drawing.Graphics.DpiX
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "取得這個的水平解析度<xref href=&quot;System.Drawing.Graphics&quot;> </xref>。"
  remarks: "如需有關建立高解析度的應用程式的詳細資訊，請參閱[高 DPI](http://go.microsoft.com/fwlink/?LinkId=159804)。"
  example:
  - "The following method shows the use of the DpiX and <xref:System.Drawing.Graphics.DpiY%2A> properties. This example is designed for use with a Windows Form. To run this example, paste it into a form that contains a <xref:System.Windows.Forms.ListBox> named listBox1 and call this method from the form's constructor.  \n  \n [!code-cs[System.Drawing.MiscExamples#4](~/add/codesnippet/csharp/p-system.drawing.graphic_5_1.cs)]\n [!code-cpp[System.Drawing.MiscExamples#4](~/add/codesnippet/cpp/p-system.drawing.graphic_5_1.cpp)]\n [!code-vb[System.Drawing.MiscExamples#4](~/add/codesnippet/visualbasic/p-system.drawing.graphic_5_1.vb)]"
  syntax:
    content: public float DpiX { get; }
    return:
      type: System.Single
      description: "值，以每英吋，這支援的水平解析度<xref href=&quot;System.Drawing.Graphics&quot;> </xref>。"
  overload: System.Drawing.Graphics.DpiX*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.DpiY
  id: DpiY
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DpiY
  nameWithType: Graphics.DpiY
  fullName: System.Drawing.Graphics.DpiY
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "取得這個的垂直解析度<xref href=&quot;System.Drawing.Graphics&quot;> </xref>。"
  remarks: "如需有關建立高解析度的應用程式的詳細資訊，請參閱[高 DPI](http://go.microsoft.com/fwlink/?LinkId=159804)。"
  example:
  - "The following method shows the use of the <xref:System.Drawing.Graphics.DpiX%2A> and DpiY properties. This example is designed for use with a Windows Form. To run this example, paste it into a form that contains a <xref:System.Windows.Forms.ListBox> named listBox1 and call this method from the form's constructor.  \n  \n [!code-cs[System.Drawing.MiscExamples#4](~/add/codesnippet/csharp/p-system.drawing.graphic_0_1.cs)]\n [!code-cpp[System.Drawing.MiscExamples#4](~/add/codesnippet/cpp/p-system.drawing.graphic_0_1.cpp)]\n [!code-vb[System.Drawing.MiscExamples#4](~/add/codesnippet/visualbasic/p-system.drawing.graphic_0_1.vb)]"
  syntax:
    content: public float DpiY { get; }
    return:
      type: System.Single
      description: "值，以每英吋，這支援的垂直解析度<xref href=&quot;System.Drawing.Graphics&quot;> </xref>。"
  overload: System.Drawing.Graphics.DpiY*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Drawing.Rectangle,System.Single,System.Single)
  id: DrawArc(System.Drawing.Pen,System.Drawing.Rectangle,System.Single,System.Single)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawArc(Pen,Rectangle,Single,Single)
  nameWithType: Graphics.DrawArc(Pen,Rectangle,Single,Single)
  fullName: System.Drawing.Graphics.DrawArc(Pen,Rectangle,Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "繪製弧形，表示所指定的橢圓形的一部分<xref href=&quot;System.Drawing.Rectangle&quot;></xref>結構。"
  remarks: "這個方法會繪製弧形，是周邊的橢圓形的一部分。 定義橢圓形的矩形界限。 弧線是部分之間的橢圓形周邊`startAngle`參數和`startAngle`  +  `sweepAngle`參數。"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a black pen.  \n  \n-   Creates a rectangle to bound an ellipse.  \n  \n-   Defines the start (45 degrees) and sweep (270 degrees) angles.  \n  \n-   Draws the elliptical arc to the screen.  \n  \n The result is a partial ellipse missing a segment between + and - 45 degrees of the x axis.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#7](~/add/codesnippet/cpp/6b29678d-50bf-4f47-b318-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#7](~/add/codesnippet/csharp/6b29678d-50bf-4f47-b318-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#7](~/add/codesnippet/visualbasic/6b29678d-50bf-4f47-b318-_1.vb)]"
  syntax:
    content: public void DrawArc (System.Drawing.Pen pen, System.Drawing.Rectangle rect, float startAngle, float sweepAngle);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>決定色彩、 寬度和樣式的弧形。"
    - id: rect
      type: System.Drawing.Rectangle
      description: "<xref href=&quot;System.Drawing.RectangleF&quot;></xref>結構，定義橢圓形的邊界。"
    - id: startAngle
      type: System.Single
      description: "以度為單位的角度測量朝順時針方向從 x 軸弧線的起點。"
    - id: sweepAngle
      type: System.Single
      description: "以度為單位的角度測量朝順時針方向從`startAngle`弧線的終點的參數。"
  overload: System.Drawing.Graphics.DrawArc*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Drawing.RectangleF,System.Single,System.Single)
  id: DrawArc(System.Drawing.Pen,System.Drawing.RectangleF,System.Single,System.Single)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawArc(Pen,RectangleF,Single,Single)
  nameWithType: Graphics.DrawArc(Pen,RectangleF,Single,Single)
  fullName: System.Drawing.Graphics.DrawArc(Pen,RectangleF,Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "繪製弧形，表示所指定的橢圓形的一部分<xref href=&quot;System.Drawing.RectangleF&quot;></xref>結構。"
  remarks: "這個方法會繪製弧形，是周邊的橢圓形的一部分。 定義橢圓形的矩形界限。 弧線是部分之間的橢圓形周邊`startAngle`參數和`startAngle`  +  `sweepAngle`參數。"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a black pen.  \n  \n-   Creates a rectangle to bound an ellipse.  \n  \n-   Defines the start (45 degrees) and sweep (270 degrees) angles.  \n  \n-   Draws the elliptical arc to the screen.  \n  \n The result is a partial ellipse missing a segment between + and - 45 degrees of the x axis.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#8](~/add/codesnippet/cpp/f55c55b1-d88f-4896-ae59-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#8](~/add/codesnippet/csharp/f55c55b1-d88f-4896-ae59-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#8](~/add/codesnippet/visualbasic/f55c55b1-d88f-4896-ae59-_1.vb)]"
  syntax:
    content: public void DrawArc (System.Drawing.Pen pen, System.Drawing.RectangleF rect, float startAngle, float sweepAngle);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>決定色彩、 寬度和樣式的弧形。"
    - id: rect
      type: System.Drawing.RectangleF
      description: "<xref href=&quot;System.Drawing.RectangleF&quot;></xref>結構，定義橢圓形的邊界。"
    - id: startAngle
      type: System.Single
      description: "以度為單位的角度測量朝順時針方向從 x 軸弧線的起點。"
    - id: sweepAngle
      type: System.Single
      description: "以度為單位的角度測量朝順時針方向從`startAngle`弧線的終點的參數。"
  overload: System.Drawing.Graphics.DrawArc*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>"
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: DrawArc(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawArc(Pen,Int32,Int32,Int32,Int32,Int32,Int32)
  nameWithType: Graphics.DrawArc(Pen,Int32,Int32,Int32,Int32,Int32,Int32)
  fullName: System.Drawing.Graphics.DrawArc(Pen,Int32,Int32,Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "繪製弧形，表示由一對座標、 寬度和高度所指定的橢圓形的一部分。"
  remarks: "這個方法會繪製弧形，是周邊的橢圓形的一部分。 定義橢圓形的矩形界限。 弧線是部分之間的橢圓形周邊`startAngle`參數和`startAngle`  +  `sweepAngle`參數。"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a black pen.  \n  \n-   Creates the position and size of a rectangle to bound an ellipse.  \n  \n-   Defines the start (45 degrees) and sweep (270 degrees) angles.  \n  \n-   Draws the elliptical arc to the screen.  \n  \n The result is a partial ellipse missing a segment between + and - 45 degrees of the x axis.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#9](~/add/codesnippet/cpp/3589ea58-fd85-4ba4-9361-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#9](~/add/codesnippet/csharp/3589ea58-fd85-4ba4-9361-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#9](~/add/codesnippet/visualbasic/3589ea58-fd85-4ba4-9361-_1.vb)]"
  syntax:
    content: public void DrawArc (System.Drawing.Pen pen, int x, int y, int width, int height, int startAngle, int sweepAngle);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>決定色彩、 寬度和樣式的弧形。"
    - id: x
      type: System.Int32
      description: "定義橢圓形的矩形的左上角 x 座標。"
    - id: y
      type: System.Int32
      description: "定義橢圓形的矩形的左上角 y 座標。"
    - id: width
      type: System.Int32
      description: "定義橢圓形的矩形的寬度。"
    - id: height
      type: System.Int32
      description: "定義橢圓形的矩形的高度。"
    - id: startAngle
      type: System.Int32
      description: "以度為單位的角度測量朝順時針方向從 x 軸弧線的起點。"
    - id: sweepAngle
      type: System.Int32
      description: "以度為單位的角度測量朝順時針方向從`startAngle`弧線的終點的參數。"
  overload: System.Drawing.Graphics.DrawArc*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>rects</code>為零長度陣列。"
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  id: DrawArc(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawArc(Pen,Single,Single,Single,Single,Single,Single)
  nameWithType: Graphics.DrawArc(Pen,Single,Single,Single,Single,Single,Single)
  fullName: System.Drawing.Graphics.DrawArc(Pen,Single,Single,Single,Single,Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "繪製弧形，表示由一對座標、 寬度和高度所指定的橢圓形的一部分。"
  remarks: "這個方法會繪製弧形，是周邊的橢圓形的一部分。 定義橢圓形的矩形界限。 弧線是部分之間的橢圓形周邊`startAngle`參數和`startAngle`  +  `sweepAngle`參數。"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a black pen.  \n  \n-   Creates the position and size of a rectangle to bound an ellipse.  \n  \n-   Defines the start (45 degrees) and sweep (270 degrees) angles.  \n  \n-   Draws the elliptical arc to the screen.  \n  \n The result is a partial ellipse missing a segment between + and - 45 degrees of the x axis.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#10](~/add/codesnippet/cpp/066bd569-1a5d-4fa1-9898-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#10](~/add/codesnippet/csharp/066bd569-1a5d-4fa1-9898-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#10](~/add/codesnippet/visualbasic/066bd569-1a5d-4fa1-9898-_1.vb)]"
  syntax:
    content: public void DrawArc (System.Drawing.Pen pen, float x, float y, float width, float height, float startAngle, float sweepAngle);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>決定色彩、 寬度和樣式的弧形。"
    - id: x
      type: System.Single
      description: "定義橢圓形的矩形的左上角 x 座標。"
    - id: y
      type: System.Single
      description: "定義橢圓形的矩形的左上角 y 座標。"
    - id: width
      type: System.Single
      description: "定義橢圓形的矩形的寬度。"
    - id: height
      type: System.Single
      description: "定義橢圓形的矩形的高度。"
    - id: startAngle
      type: System.Single
      description: "以度為單位的角度測量朝順時針方向從 x 軸弧線的起點。"
    - id: sweepAngle
      type: System.Single
      description: "以度為單位的角度測量朝順時針方向從`startAngle`弧線的終點的參數。"
  overload: System.Drawing.Graphics.DrawArc*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawBezier(System.Drawing.Pen,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)
  id: DrawBezier(System.Drawing.Pen,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawBezier(Pen,Point,Point,Point,Point)
  nameWithType: Graphics.DrawBezier(Pen,Point,Point,Point,Point)
  fullName: System.Drawing.Graphics.DrawBezier(Pen,Point,Point,Point,Point)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "繪製由四個定義的貝茲曲線<xref href=&quot;System.Drawing.Point&quot;></xref>結構。"
  remarks: "第四個點會從第一個點繪製貝茲曲線。 第二個和第三個點都控制點，決定曲線的形狀。"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a black pen.  \n  \n-   Creates the start, end, and two control points for the curve.  \n  \n-   Draws the Bézier curve to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#11](~/add/codesnippet/cpp/64d14328-9929-49d1-880b-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#11](~/add/codesnippet/csharp/64d14328-9929-49d1-880b-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#11](~/add/codesnippet/visualbasic/64d14328-9929-49d1-880b-_1.vb)]"
  syntax:
    content: public void DrawBezier (System.Drawing.Pen pen, System.Drawing.Point pt1, System.Drawing.Point pt2, System.Drawing.Point pt3, System.Drawing.Point pt4);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>結構，決定色彩、 寬度和樣式的曲線。"
    - id: pt1
      type: System.Drawing.Point
      description: "<xref href=&quot;System.Drawing.Point&quot;></xref>結構，表示曲線的起點。"
    - id: pt2
      type: System.Drawing.Point
      description: "<xref href=&quot;System.Drawing.Point&quot;></xref>結構，表示曲線的第一個控制點。"
    - id: pt3
      type: System.Drawing.Point
      description: "<xref href=&quot;System.Drawing.Point&quot;></xref>結構，表示曲線的第二個控制點。"
    - id: pt4
      type: System.Drawing.Point
      description: "<xref href=&quot;System.Drawing.Point&quot;></xref>結構，表示曲線的結束點。"
  overload: System.Drawing.Graphics.DrawBezier*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawBezier(System.Drawing.Pen,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)
  id: DrawBezier(System.Drawing.Pen,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawBezier(Pen,PointF,PointF,PointF,PointF)
  nameWithType: Graphics.DrawBezier(Pen,PointF,PointF,PointF,PointF)
  fullName: System.Drawing.Graphics.DrawBezier(Pen,PointF,PointF,PointF,PointF)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "繪製由四個定義的貝茲曲線<xref href=&quot;System.Drawing.PointF&quot;></xref>結構。"
  remarks: "第四個點會從第一個點繪製貝茲曲線。 第二個和第三個點都控制點，決定曲線的形狀。"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a black pen.  \n  \n-   Creates the start, end, and two control points for the curve.  \n  \n-   Draws the Bézier curve to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#12](~/add/codesnippet/cpp/f50f06d6-012a-49b5-bdea-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#12](~/add/codesnippet/csharp/f50f06d6-012a-49b5-bdea-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#12](~/add/codesnippet/visualbasic/f50f06d6-012a-49b5-bdea-_1.vb)]"
  syntax:
    content: public void DrawBezier (System.Drawing.Pen pen, System.Drawing.PointF pt1, System.Drawing.PointF pt2, System.Drawing.PointF pt3, System.Drawing.PointF pt4);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>決定色彩、 寬度和樣式的曲線。"
    - id: pt1
      type: System.Drawing.PointF
      description: "<xref href=&quot;System.Drawing.PointF&quot;></xref>結構，表示曲線的起點。"
    - id: pt2
      type: System.Drawing.PointF
      description: "<xref href=&quot;System.Drawing.PointF&quot;></xref>結構，表示曲線的第一個控制點。"
    - id: pt3
      type: System.Drawing.PointF
      description: "<xref href=&quot;System.Drawing.PointF&quot;></xref>結構，表示曲線的第二個控制點。"
    - id: pt4
      type: System.Drawing.PointF
      description: "<xref href=&quot;System.Drawing.PointF&quot;></xref>結構，表示曲線的結束點。"
  overload: System.Drawing.Graphics.DrawBezier*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawBezier(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  id: DrawBezier(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawBezier(Pen,Single,Single,Single,Single,Single,Single,Single,Single)
  nameWithType: Graphics.DrawBezier(Pen,Single,Single,Single,Single,Single,Single,Single,Single)
  fullName: System.Drawing.Graphics.DrawBezier(Pen,Single,Single,Single,Single,Single,Single,Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "繪製由四個的排序配對，代表點之座標所定義的貝茲曲線。"
  remarks: "第四個點會從第一個點繪製貝茲曲線。 第二個和第三個點都控制點，決定曲線的形狀。"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a black pen.  \n  \n-   Creates the coordinates of the start, end, and two control points for the curve.  \n  \n-   Draws the Bézier curve to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#13](~/add/codesnippet/cpp/baa8b588-7355-4d59-ad6c-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#13](~/add/codesnippet/csharp/baa8b588-7355-4d59-ad6c-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#13](~/add/codesnippet/visualbasic/baa8b588-7355-4d59-ad6c-_1.vb)]"
  syntax:
    content: public void DrawBezier (System.Drawing.Pen pen, float x1, float y1, float x2, float y2, float x3, float y3, float x4, float y4);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>決定色彩、 寬度和樣式的曲線。"
    - id: x1
      type: System.Single
      description: "曲線開始點的 x 座標。"
    - id: y1
      type: System.Single
      description: "曲線開始點的 y 座標。"
    - id: x2
      type: System.Single
      description: "曲線的第一個控制點的 x 座標。"
    - id: y2
      type: System.Single
      description: "曲線的第一個控制點的 y 座標。"
    - id: x3
      type: System.Single
      description: "曲線的第二個控制點的 x 座標。"
    - id: y3
      type: System.Single
      description: "曲線的第二個控制點的 y 座標。"
    - id: x4
      type: System.Single
      description: "曲線結束點的 x 座標。"
    - id: y4
      type: System.Single
      description: "曲線結束點的 y 座標。"
  overload: System.Drawing.Graphics.DrawBezier*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawBeziers(System.Drawing.Pen,System.Drawing.Point[])
  id: DrawBeziers(System.Drawing.Pen,System.Drawing.Point[])
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawBeziers(Pen,Point[])
  nameWithType: Graphics.DrawBeziers(Pen,Point[])
  fullName: System.Drawing.Graphics.DrawBeziers(Pen,Point[])
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "從陣列繪製一系列的貝茲曲線<xref href=&quot;System.Drawing.Point&quot;></xref>結構。"
  remarks: '陣列中的點數應該是 3 的倍數加 1，因為第一個曲線需要有 4 個點，而且任何其他曲線需要 3 點。 第一個貝茲曲線的點陣列中的第四個點會繪製從第一個點。 第二個和第三個點都控制點，決定曲線的形狀。 每個後續的曲線需要正好是三個的多個點︰ 兩個控制點和結束點。 前一個曲線的結束點作為起始點，為每個額外的曲線。'
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a black pen.  \n  \n-   Creates the start, end, and two control points for a first curve and endpoint and two control points for a second curve.  \n  \n-   Draws the successive Bézier curves to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#14](~/add/codesnippet/cpp/m-system.drawing.graphic_46_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#14](~/add/codesnippet/csharp/m-system.drawing.graphic_46_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#14](~/add/codesnippet/visualbasic/m-system.drawing.graphic_46_1.vb)]"
  syntax:
    content: public void DrawBeziers (System.Drawing.Pen pen, System.Drawing.Point[] points);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>決定色彩、 寬度和樣式的曲線。"
    - id: points
      type: System.Drawing.Point[]
      description: "陣列<xref href=&quot;System.Drawing.Point&quot;> </xref> ，此結構表示決定曲線的點。 陣列中的點數應該是 3 的倍數加 1，例如 4、 7 或 10。"
  overload: System.Drawing.Graphics.DrawBeziers*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>points</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawBeziers(System.Drawing.Pen,System.Drawing.PointF[])
  id: DrawBeziers(System.Drawing.Pen,System.Drawing.PointF[])
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawBeziers(Pen,PointF[])
  nameWithType: Graphics.DrawBeziers(Pen,PointF[])
  fullName: System.Drawing.Graphics.DrawBeziers(Pen,PointF[])
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "從陣列繪製一系列的貝茲曲線<xref href=&quot;System.Drawing.PointF&quot;></xref>結構。"
  remarks: '陣列中的點數應該是 3 的倍數加 1，因為第一個曲線需要有 4 個點，而且任何其他曲線需要 3 點。 貝茲曲線的第一個會從第一個點繪製的點陣列中的第四個點。 第二個和第三個點都控制點，決定曲線的形狀。 每個後續的曲線需要正好是三個的多個點︰ 兩個控制點和結束點。 前一個曲線的結束點作為起始點，為每個額外的曲線。'
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a black pen.  \n  \n-   Creates the start, end, and two control points for a first curve and endpoint and two control points for a second curve.  \n  \n-   Draws the successive Bézier curves to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#15](~/add/codesnippet/cpp/6d8590a5-9b64-4d74-acab-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#15](~/add/codesnippet/csharp/6d8590a5-9b64-4d74-acab-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#15](~/add/codesnippet/visualbasic/6d8590a5-9b64-4d74-acab-_1.vb)]"
  syntax:
    content: public void DrawBeziers (System.Drawing.Pen pen, System.Drawing.PointF[] points);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>決定色彩、 寬度和樣式的曲線。"
    - id: points
      type: System.Drawing.PointF[]
      description: "陣列<xref href=&quot;System.Drawing.PointF&quot;> </xref> ，此結構表示決定曲線的點。 陣列中的點數應該是 3 的倍數加 1，例如 4、 7 或 10。"
  overload: System.Drawing.Graphics.DrawBeziers*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>points</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.Point[])
  id: DrawClosedCurve(System.Drawing.Pen,System.Drawing.Point[])
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawClosedCurve(Pen,Point[])
  nameWithType: Graphics.DrawClosedCurve(Pen,Point[])
  fullName: System.Drawing.Graphics.DrawClosedCurve(Pen,Point[])
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "繪製的陣列所定義的封閉基線曲線<xref href=&quot;System.Drawing.Point&quot;></xref>結構。"
  remarks: "這個方法會繪製通過陣列中的每個點的封閉基本曲線。 如果最後一個點不符合第一個點，會將額外的曲線線段加入的最後一個點表示關閉圖形的第一個點。       點陣列必須包含至少&4; 個<xref:System.Drawing.Point>結構。</xref:System.Drawing.Point>       這個方法會使用預設張力為 0.5。"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates red and green pens.  \n  \n-   Creates seven points to define a curve.  \n  \n-   Draws seven red straight lines between the seven points to form a closed polygon.  \n  \n-   Draws a green closed curve through the seven points.  \n  \n The method uses a default tension of 0.5.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#16](~/add/codesnippet/cpp/fec8cc4c-2307-4c6d-92d0-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#16](~/add/codesnippet/csharp/fec8cc4c-2307-4c6d-92d0-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#16](~/add/codesnippet/visualbasic/fec8cc4c-2307-4c6d-92d0-_1.vb)]"
  syntax:
    content: public void DrawClosedCurve (System.Drawing.Pen pen, System.Drawing.Point[] points);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>決定色彩、 寬度和高度的曲線。"
    - id: points
      type: System.Drawing.Point[]
      description: "陣列<xref href=&quot;System.Drawing.Point&quot;></xref>定義曲線的結構。"
  overload: System.Drawing.Graphics.DrawClosedCurve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>points</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.PointF[])
  id: DrawClosedCurve(System.Drawing.Pen,System.Drawing.PointF[])
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawClosedCurve(Pen,PointF[])
  nameWithType: Graphics.DrawClosedCurve(Pen,PointF[])
  fullName: System.Drawing.Graphics.DrawClosedCurve(Pen,PointF[])
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "繪製的陣列所定義的封閉基線曲線<xref href=&quot;System.Drawing.PointF&quot;></xref>結構。"
  remarks: "這個方法會繪製通過陣列中的每個點的封閉基本曲線。 如果最後一個點不符合第一個點，會將額外的曲線線段加入的最後一個點的第一個點，以將它關閉。       點陣列必須包含至少&4; 個<xref:System.Drawing.PointF>結構。</xref:System.Drawing.PointF>       這個方法會使用預設張力為 0.5。"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates red and green pens.  \n  \n-   Creates seven points to define a curve.  \n  \n-   Draws seven red straight lines between the seven points to form a closed polygon.  \n  \n-   Draws a green closed curve through the seven points.  \n  \n The method uses a default tension of 0.5.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#18](~/add/codesnippet/cpp/67309f1b-9d1b-4f3b-a3af-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#18](~/add/codesnippet/csharp/67309f1b-9d1b-4f3b-a3af-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#18](~/add/codesnippet/visualbasic/67309f1b-9d1b-4f3b-a3af-_1.vb)]"
  syntax:
    content: public void DrawClosedCurve (System.Drawing.Pen pen, System.Drawing.PointF[] points);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>決定色彩、 寬度和高度的曲線。"
    - id: points
      type: System.Drawing.PointF[]
      description: "陣列<xref href=&quot;System.Drawing.PointF&quot;></xref>定義曲線的結構。"
  overload: System.Drawing.Graphics.DrawClosedCurve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>points</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.Point[],System.Single,System.Drawing.Drawing2D.FillMode)
  id: DrawClosedCurve(System.Drawing.Pen,System.Drawing.Point[],System.Single,System.Drawing.Drawing2D.FillMode)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawClosedCurve(Pen,Point[],Single,FillMode)
  nameWithType: Graphics.DrawClosedCurve(Pen,Point[],Single,FillMode)
  fullName: System.Drawing.Graphics.DrawClosedCurve(Pen,Point[],Single,FillMode)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "繪製的陣列所定義的封閉基線曲線<xref href=&quot;System.Drawing.Point&quot;></xref>結構使用指定的張力。"
  remarks: "這個方法會繪製通過陣列中的每個點的封閉基本曲線。 如果最後一個點不符合第一個點，會將額外的曲線線段加入的最後一個點的第一個點，以將它關閉。       點陣列必須包含至少&4; 個<xref:System.Drawing.Point>結構。</xref:System.Drawing.Point>       `tension`參數會決定曲線的形狀。 如果值`tension`參數是 0.0，這個方法會繪製的直線線段連接的點。 通常，`tension`參數小於或等於 1.0 f。 透過 1.0 f 的值不會產生不尋常的結果。"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates red and green pens.  \n  \n-   Creates seven points to define the curve.  \n  \n-   Draws seven red straight lines between the seven points to form a polygon.  \n  \n-   Creates tension and fill mode settings.  \n  \n-   Draws a green closed curve through the seven points.  \n  \n The method uses a tension of 1.0 and sets the fill mode to `FillMode.Alternate`.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#17](~/add/codesnippet/cpp/cc1f225a-0c69-45b9-a725-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#17](~/add/codesnippet/csharp/cc1f225a-0c69-45b9-a725-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#17](~/add/codesnippet/visualbasic/cc1f225a-0c69-45b9-a725-_1.vb)]"
  syntax:
    content: public void DrawClosedCurve (System.Drawing.Pen pen, System.Drawing.Point[] points, float tension, System.Drawing.Drawing2D.FillMode fillmode);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>決定色彩、 寬度和高度的曲線。"
    - id: points
      type: System.Drawing.Point[]
      description: "陣列<xref href=&quot;System.Drawing.Point&quot;></xref>定義曲線的結構。"
    - id: tension
      type: System.Single
      description: "值大於或等於 0.0 f，指定曲線的張力。"
    - id: fillmode
      type: System.Drawing.Drawing2D.FillMode
      description: "成員的<xref href=&quot;System.Drawing.Drawing2D.FillMode&quot;></xref>列舉，可判斷填滿曲線的方法。 這個參數是必要，但是被忽略。"
  overload: System.Drawing.Graphics.DrawClosedCurve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>points</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Single,System.Drawing.Drawing2D.FillMode)
  id: DrawClosedCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Single,System.Drawing.Drawing2D.FillMode)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawClosedCurve(Pen,PointF[],Single,FillMode)
  nameWithType: Graphics.DrawClosedCurve(Pen,PointF[],Single,FillMode)
  fullName: System.Drawing.Graphics.DrawClosedCurve(Pen,PointF[],Single,FillMode)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "繪製的陣列所定義的封閉基線曲線<xref href=&quot;System.Drawing.PointF&quot;></xref>結構使用指定的張力。"
  remarks: "這個方法會繪製通過陣列中的每個點的封閉基本曲線。 如果最後一個點不符合第一個點，會將額外的曲線線段加入的最後一個點的第一個點，以將它關閉。       點陣列必須包含至少&4; 個<xref:System.Drawing.PointF>結構。</xref:System.Drawing.PointF>       `tension`參數會決定曲線的形狀。 如果值`tension`參數是 0.0，這個方法會繪製的直線線段連接的點。 通常，`tension`參數小於或等於 1.0 f。 透過 1.0 f 的值不會產生不尋常的結果。"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates red and green pens.  \n  \n-   Creates seven points to define the curve.  \n  \n-   Draws seven red straight lines between the seven points to form a polygon.  \n  \n-   Creates tension and fill mode settings.  \n  \n-   Draws a green closed curve through the seven points.  \n  \n The method uses a tension of 1.0 and sets the fill mode to `FillMode.Alternate`.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#19](~/add/codesnippet/cpp/0472ed0c-ecfc-4bdd-b3f2-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#19](~/add/codesnippet/csharp/0472ed0c-ecfc-4bdd-b3f2-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#19](~/add/codesnippet/visualbasic/0472ed0c-ecfc-4bdd-b3f2-_1.vb)]"
  syntax:
    content: public void DrawClosedCurve (System.Drawing.Pen pen, System.Drawing.PointF[] points, float tension, System.Drawing.Drawing2D.FillMode fillmode);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>決定色彩、 寬度和高度的曲線。"
    - id: points
      type: System.Drawing.PointF[]
      description: "陣列<xref href=&quot;System.Drawing.PointF&quot;></xref>定義曲線的結構。"
    - id: tension
      type: System.Single
      description: "值大於或等於 0.0 f，指定曲線的張力。"
    - id: fillmode
      type: System.Drawing.Drawing2D.FillMode
      description: "成員的<xref href=&quot;System.Drawing.Drawing2D.FillMode&quot;></xref>列舉，可判斷填滿曲線的方法。 這個參數是必要，但是會被忽略。"
  overload: System.Drawing.Graphics.DrawClosedCurve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>points</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[])
  id: DrawCurve(System.Drawing.Pen,System.Drawing.Point[])
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawCurve(Pen,Point[])
  nameWithType: Graphics.DrawCurve(Pen,Point[])
  fullName: System.Drawing.Graphics.DrawCurve(Pen,Point[])
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "繪製穿過指定陣列的<xref href=&quot;System.Drawing.Point&quot;></xref>結構。"
  remarks: "這個方法會繪製在通過陣列中每個點的基本曲線。       點陣列必須包含至少三個<xref:System.Drawing.Point>曲線要繪製的結構。</xref:System.Drawing.Point>       這個方法會使用預設張力為 0.5。"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates red and green pens.  \n  \n-   Creates seven points to define a curve.  \n  \n-   Draws six red straight lines between the seven points to form an incomplete polygon.  \n  \n-   Draws an open green curve through the seven points.  \n  \n The method uses a default tension of 0.5.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#20](~/add/codesnippet/cpp/m-system.drawing.graphic_47_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#20](~/add/codesnippet/csharp/m-system.drawing.graphic_47_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#20](~/add/codesnippet/visualbasic/m-system.drawing.graphic_47_1.vb)]"
  syntax:
    content: public void DrawCurve (System.Drawing.Pen pen, System.Drawing.Point[] points);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>決定色彩、 寬度和高度的曲線。"
    - id: points
      type: System.Drawing.Point[]
      description: "陣列<xref href=&quot;System.Drawing.Point&quot;></xref>定義曲線的結構。"
  overload: System.Drawing.Graphics.DrawCurve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>points</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[])
  id: DrawCurve(System.Drawing.Pen,System.Drawing.PointF[])
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawCurve(Pen,PointF[])
  nameWithType: Graphics.DrawCurve(Pen,PointF[])
  fullName: System.Drawing.Graphics.DrawCurve(Pen,PointF[])
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "繪製穿過指定陣列的<xref href=&quot;System.Drawing.PointF&quot;></xref>結構。"
  remarks: "這個方法會繪製在通過陣列中每個點的基本曲線。       點陣列必須包含至少三個<xref:System.Drawing.PointF>曲線要繪製的結構。</xref:System.Drawing.PointF>       這個方法會使用預設張力為 0.5。"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates red and green pens.  \n  \n-   Creates seven points to define a curve.  \n  \n-   Draws six red straight lines between the seven points to form an incomplete polygon.  \n  \n-   Draws an open green curve through the seven points.  \n  \n The method uses a default tension of 0.5.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#23](~/add/codesnippet/cpp/m-system.drawing.graphic_20_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#23](~/add/codesnippet/csharp/m-system.drawing.graphic_20_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#23](~/add/codesnippet/visualbasic/m-system.drawing.graphic_20_1.vb)]"
  syntax:
    content: public void DrawCurve (System.Drawing.Pen pen, System.Drawing.PointF[] points);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>決定色彩、 寬度和樣式的曲線。"
    - id: points
      type: System.Drawing.PointF[]
      description: "陣列<xref href=&quot;System.Drawing.PointF&quot;></xref>定義曲線的結構。"
  overload: System.Drawing.Graphics.DrawCurve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>points</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Single)
  id: DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Single)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawCurve(Pen,Point[],Single)
  nameWithType: Graphics.DrawCurve(Pen,Point[],Single)
  fullName: System.Drawing.Graphics.DrawCurve(Pen,Point[],Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "繪製穿過指定陣列的<xref href=&quot;System.Drawing.Point&quot;></xref>結構使用指定的張力。"
  remarks: "這個方法會繪製在通過陣列中每個點的基本曲線。       點陣列必須包含至少三個<xref:System.Drawing.Point>曲線要繪製的結構。</xref:System.Drawing.Point>       `tension`參數會決定曲線的形狀。 如果值`tension`參數是 0.0，這個方法會繪製的直線線段連接的點。 通常，`tension`參數小於或等於 1.0 f。 透過 1.0 f 的值不會產生不尋常的結果。"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates red and green pens.  \n  \n-   Creates seven points to define the curve.  \n  \n-   Draws six red straight lines between the seven points to form an incomplete polygon.  \n  \n-   Creates a tension setting.  \n  \n-   Draws an open green closed curve through the seven points.  \n  \n The method uses a tension of 1.0.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#22](~/add/codesnippet/cpp/6180a257-cc1e-4474-b752-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#22](~/add/codesnippet/csharp/6180a257-cc1e-4474-b752-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#22](~/add/codesnippet/visualbasic/6180a257-cc1e-4474-b752-_1.vb)]"
  syntax:
    content: public void DrawCurve (System.Drawing.Pen pen, System.Drawing.Point[] points, float tension);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>決定色彩、 寬度和樣式的曲線。"
    - id: points
      type: System.Drawing.Point[]
      description: "陣列<xref href=&quot;System.Drawing.Point&quot;></xref>定義曲線的結構。"
    - id: tension
      type: System.Single
      description: "值大於或等於 0.0 f，指定曲線的張力。"
  overload: System.Drawing.Graphics.DrawCurve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>points</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Single)
  id: DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Single)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawCurve(Pen,PointF[],Single)
  nameWithType: Graphics.DrawCurve(Pen,PointF[],Single)
  fullName: System.Drawing.Graphics.DrawCurve(Pen,PointF[],Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "繪製穿過指定陣列的<xref href=&quot;System.Drawing.PointF&quot;></xref>結構使用指定的張力。"
  remarks: "這個方法會繪製在通過陣列中每個點的基本曲線。       點陣列必須包含至少三個<xref:System.Drawing.PointF>曲線要繪製的結構。</xref:System.Drawing.PointF>       `tension`參數會決定曲線的形狀。 如果值`tension`參數是 0.0，這個方法會繪製的直線線段連接的點。 通常，`tension`參數小於或等於 1.0 f。 透過 1.0 f 的值不會產生不尋常的結果。"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates red and green pens.  \n  \n-   Creates seven points to define the curve.  \n  \n-   Draws six red straight lines between the seven points to form an incomplete polygon.  \n  \n-   Creates a tension setting.  \n  \n-   Draws an open green closed curve through the seven points.  \n  \n The method uses a tension of 1.0.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#26](~/add/codesnippet/cpp/dfe0ec8e-90de-4e02-8192-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#26](~/add/codesnippet/csharp/dfe0ec8e-90de-4e02-8192-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#26](~/add/codesnippet/visualbasic/dfe0ec8e-90de-4e02-8192-_1.vb)]"
  syntax:
    content: public void DrawCurve (System.Drawing.Pen pen, System.Drawing.PointF[] points, float tension);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>決定色彩、 寬度和樣式的曲線。"
    - id: points
      type: System.Drawing.PointF[]
      description: "陣列<xref href=&quot;System.Drawing.PointF&quot;> </xref> ，此結構表示定義曲線的點。"
    - id: tension
      type: System.Single
      description: "值大於或等於 0.0 f，指定曲線的張力。"
  overload: System.Drawing.Graphics.DrawCurve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>points</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32)
  id: DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawCurve(Pen,PointF[],Int32,Int32)
  nameWithType: Graphics.DrawCurve(Pen,PointF[],Int32,Int32)
  fullName: System.Drawing.Graphics.DrawCurve(Pen,PointF[],Int32,Int32)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "繪製穿過指定陣列的<xref href=&quot;System.Drawing.PointF&quot;></xref>結構。 從陣列開頭位移開始繪製。"
  remarks: "這個方法會繪製在通過陣列中每個點的基本曲線。       點陣列必須包含至少三個<xref:System.Drawing.PointF>曲線要繪製的結構。</xref:System.Drawing.PointF>       值`offset`參數指定要在陣列中略過的項目數目。 已略過的項目之後的第一個項目代表曲線開始點。       值`numberOfSegments`參數之後的起點，若要在曲線中繪製指定的區段數目。 值`numberOfSegments`參數必須至少為 1。 值`offset`參數加上值`numberOfSegments`參數必須是少於陣列中的項目數目`points`參數。       這個方法會使用預設張力為 0.5。"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates red and green pens.  \n  \n-   Creates seven points to define a curve.  \n  \n-   Draws six red straight lines between the seven points to form an incomplete polygon.  \n  \n-   Defines the starting point offset and number of segments.  \n  \n-   Draws an open green curve (starting at the third point) through the last five points.  \n  \n The method uses a default tension of 0.5.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#24](~/add/codesnippet/cpp/f4f8f79d-25e2-48b4-ba79-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#24](~/add/codesnippet/csharp/f4f8f79d-25e2-48b4-ba79-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#24](~/add/codesnippet/visualbasic/f4f8f79d-25e2-48b4-ba79-_1.vb)]"
  syntax:
    content: public void DrawCurve (System.Drawing.Pen pen, System.Drawing.PointF[] points, int offset, int numberOfSegments);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>決定色彩、 寬度和樣式的曲線。"
    - id: points
      type: System.Drawing.PointF[]
      description: "陣列<xref href=&quot;System.Drawing.PointF&quot;></xref>定義曲線的結構。"
    - id: offset
      type: System.Int32
      description: "從陣列中的第一個項目位移`points`參數在曲線中的起始點。"
    - id: numberOfSegments
      type: System.Int32
      description: "若要在曲線中包括的起點後的線段數目。"
  overload: System.Drawing.Graphics.DrawCurve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>points</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Int32,System.Int32,System.Single)
  id: DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Int32,System.Int32,System.Single)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawCurve(Pen,Point[],Int32,Int32,Single)
  nameWithType: Graphics.DrawCurve(Pen,Point[],Int32,Int32,Single)
  fullName: System.Drawing.Graphics.DrawCurve(Pen,Point[],Int32,Int32,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "繪製穿過指定陣列的<xref href=&quot;System.Drawing.Point&quot;></xref>結構使用指定的張力。"
  remarks: "這個方法會繪製在通過陣列中每個點的基本曲線。       點陣列必須包含至少三個<xref:System.Drawing.Point>曲線要繪製的結構。</xref:System.Drawing.Point>       值`offset`參數指定要在陣列中略過的項目數目。 已略過的項目之後的第一個項目代表曲線開始點。       值`numberOfSegments`參數之後的起點，若要在曲線中繪製指定的區段數目。 值`numberOfSegments`參數必須至少為 1。 值`offset`參數加上值`numberOfSegments`參數必須是少於陣列中的項目數目`points`參數。       `tension`參數會決定曲線的形狀。 如果值`tension`參數是 0.0，這個方法會繪製的直線線段連接的點。 通常，`tension`參數小於或等於 1.0 f。 透過 1.0 f 的值不會產生不尋常的結果。"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates red and green pens.  \n  \n-   Creates seven points to define a curve.  \n  \n-   Draws six red straight lines between the seven points to form an incomplete polygon.  \n  \n-   Defines the starting point offset and number of segments.  \n  \n-   Defines the tension.  \n  \n-   Draws an open green curve (starting at the third point) through the last five points.  \n  \n The method sets the tension to 1.0.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#21](~/add/codesnippet/cpp/ed232e1e-25c0-4d3a-a280-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#21](~/add/codesnippet/csharp/ed232e1e-25c0-4d3a-a280-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#21](~/add/codesnippet/visualbasic/ed232e1e-25c0-4d3a-a280-_1.vb)]"
  syntax:
    content: public void DrawCurve (System.Drawing.Pen pen, System.Drawing.Point[] points, int offset, int numberOfSegments, float tension);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>決定色彩、 寬度和樣式的曲線。"
    - id: points
      type: System.Drawing.Point[]
      description: "陣列<xref href=&quot;System.Drawing.Point&quot;></xref>定義曲線的結構。"
    - id: offset
      type: System.Int32
      description: "從陣列中的第一個項目位移`points`參數在曲線中的起始點。"
    - id: numberOfSegments
      type: System.Int32
      description: "若要在曲線中包括的起點後的線段數目。"
    - id: tension
      type: System.Single
      description: "值大於或等於 0.0 f，指定曲線的張力。"
  overload: System.Drawing.Graphics.DrawCurve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>points</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32,System.Single)
  id: DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32,System.Single)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawCurve(Pen,PointF[],Int32,Int32,Single)
  nameWithType: Graphics.DrawCurve(Pen,PointF[],Int32,Int32,Single)
  fullName: System.Drawing.Graphics.DrawCurve(Pen,PointF[],Int32,Int32,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "繪製穿過指定陣列的<xref href=&quot;System.Drawing.PointF&quot;></xref>結構使用指定的張力。 從陣列開頭位移開始繪製。"
  remarks: "這個方法會繪製在通過陣列中每個點的基本曲線。       點陣列必須包含至少三個<xref:System.Drawing.PointF>曲線要繪製的結構。</xref:System.Drawing.PointF>       值`offset`參數指定要在陣列中略過的項目數目。 已略過的項目之後的第一個項目代表曲線開始點。       值`numberOfSegments`參數之後的起點，若要在曲線中繪製指定的區段數目。 值`numberOfSegments`參數必須至少為 1。 值`offset`參數加上值`numberOfSegments`參數必須是少於陣列中的項目數目`points`參數。       `tension`參數會決定曲線的形狀。 如果值`tension`參數是 0.0，這個方法會繪製的直線線段連接的點。 通常，`tension`參數小於或等於 1.0 f。 透過 1.0 f 的值不會產生不尋常的結果。"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates red and green pens.  \n  \n-   Creates seven points to define a curve.  \n  \n-   Draws six red straight lines between the seven points to form an incomplete polygon.  \n  \n-   Defines the starting point offset and number of segments.  \n  \n-   Defines the tension.  \n  \n-   Draws an open green curve (starting at the third point) through the last five points.  \n  \n The method sets the tension to 1.0.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#25](~/add/codesnippet/cpp/e4652aea-fc05-4bd2-9300-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#25](~/add/codesnippet/csharp/e4652aea-fc05-4bd2-9300-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#25](~/add/codesnippet/visualbasic/e4652aea-fc05-4bd2-9300-_1.vb)]"
  syntax:
    content: public void DrawCurve (System.Drawing.Pen pen, System.Drawing.PointF[] points, int offset, int numberOfSegments, float tension);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>決定色彩、 寬度和樣式的曲線。"
    - id: points
      type: System.Drawing.PointF[]
      description: "陣列<xref href=&quot;System.Drawing.PointF&quot;></xref>定義曲線的結構。"
    - id: offset
      type: System.Int32
      description: "從陣列中的第一個項目位移`points`參數在曲線中的起始點。"
    - id: numberOfSegments
      type: System.Int32
      description: "若要在曲線中包括的起點後的線段數目。"
    - id: tension
      type: System.Single
      description: "值大於或等於 0.0 f，指定曲線的張力。"
  overload: System.Drawing.Graphics.DrawCurve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>points</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Drawing.Rectangle)
  id: DrawEllipse(System.Drawing.Pen,System.Drawing.Rectangle)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawEllipse(Pen,Rectangle)
  nameWithType: Graphics.DrawEllipse(Pen,Rectangle)
  fullName: System.Drawing.Graphics.DrawEllipse(Pen,Rectangle)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "繪製由界限指定的橢圓形<xref href=&quot;System.Drawing.Rectangle&quot;></xref>結構。"
  remarks: "這個方法會繪製由指定的周框所定義的橢圓形`rect`參數。"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a black pen.  \n  \n-   Creates a rectangle to bound an ellipse.  \n  \n-   Draws the ellipse to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#27](~/add/codesnippet/cpp/4155a034-950c-4182-bd85-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#27](~/add/codesnippet/csharp/4155a034-950c-4182-bd85-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#27](~/add/codesnippet/visualbasic/4155a034-950c-4182-bd85-_1.vb)]"
  syntax:
    content: public void DrawEllipse (System.Drawing.Pen pen, System.Drawing.Rectangle rect);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>決定色彩、 寬度和樣式的橢圓形。"
    - id: rect
      type: System.Drawing.Rectangle
      description: "<xref href=&quot;System.Drawing.Rectangle&quot;></xref>結構，定義橢圓形的邊界。"
  overload: System.Drawing.Graphics.DrawEllipse*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Drawing.RectangleF)
  id: DrawEllipse(System.Drawing.Pen,System.Drawing.RectangleF)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawEllipse(Pen,RectangleF)
  nameWithType: Graphics.DrawEllipse(Pen,RectangleF)
  fullName: System.Drawing.Graphics.DrawEllipse(Pen,RectangleF)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "繪製由界限所定義的橢圓形<xref href=&quot;System.Drawing.RectangleF&quot;> </xref>。"
  remarks: "這個方法會繪製由指定的周框所定義的橢圓形`rect`參數。"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a black pen.  \n  \n-   Creates a rectangle to bound an ellipse.  \n  \n-   Draws the ellipse to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#28](~/add/codesnippet/cpp/c36ab4a5-56d0-4c3b-ab8b-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#28](~/add/codesnippet/csharp/c36ab4a5-56d0-4c3b-ab8b-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#28](~/add/codesnippet/visualbasic/c36ab4a5-56d0-4c3b-ab8b-_1.vb)]"
  syntax:
    content: public void DrawEllipse (System.Drawing.Pen pen, System.Drawing.RectangleF rect);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>決定色彩、 寬度和樣式的橢圓形。"
    - id: rect
      type: System.Drawing.RectangleF
      description: "<xref href=&quot;System.Drawing.RectangleF&quot;></xref>結構，定義橢圓形的邊界。"
  overload: System.Drawing.Graphics.DrawEllipse*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)
  id: DrawEllipse(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawEllipse(Pen,Int32,Int32,Int32,Int32)
  nameWithType: Graphics.DrawEllipse(Pen,Int32,Int32,Int32,Int32)
  fullName: System.Drawing.Graphics.DrawEllipse(Pen,Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "繪製由矩形、 高度和寬度的左上角的座標指定的周框所定義的橢圓形。"
  remarks: "這個方法會繪製所描述之周框所定義的橢圓形`x`， `y`， `width`，和`height`參數。"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a black pen.  \n  \n-   Creates the position and size of a rectangle to bound an ellipse.  \n  \n-   Draws the ellipse to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#29](~/add/codesnippet/cpp/72dbe1e1-2974-4511-8ef1-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#29](~/add/codesnippet/csharp/72dbe1e1-2974-4511-8ef1-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#29](~/add/codesnippet/visualbasic/72dbe1e1-2974-4511-8ef1-_1.vb)]"
  syntax:
    content: public void DrawEllipse (System.Drawing.Pen pen, int x, int y, int width, int height);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>決定色彩、 寬度和樣式的橢圓形。"
    - id: x
      type: System.Int32
      description: "週框定義橢圓形的矩形的左上角的 x 座標。"
    - id: y
      type: System.Int32
      description: "週框定義橢圓形的矩形的左上角的 y 座標。"
    - id: width
      type: System.Int32
      description: "週框定義橢圓形的矩形的寬度。"
    - id: height
      type: System.Int32
      description: "週框定義橢圓形的矩形的高度。"
  overload: System.Drawing.Graphics.DrawEllipse*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)
  id: DrawEllipse(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawEllipse(Pen,Single,Single,Single,Single)
  nameWithType: Graphics.DrawEllipse(Pen,Single,Single,Single,Single)
  fullName: System.Drawing.Graphics.DrawEllipse(Pen,Single,Single,Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "繪製由一對座標、 高度和寬度所指定的周框所定義的橢圓形。"
  remarks: "這個方法會繪製所描述之周框所定義的橢圓形`x`， `y`， `width`，和`height`參數。"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a black pen.  \n  \n-   Creates the position and size of a rectangle to bound an ellipse.  \n  \n-   Draws the ellipse to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#30](~/add/codesnippet/cpp/b63a980e-47de-4888-8a36-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#30](~/add/codesnippet/csharp/b63a980e-47de-4888-8a36-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#30](~/add/codesnippet/visualbasic/b63a980e-47de-4888-8a36-_1.vb)]"
  syntax:
    content: public void DrawEllipse (System.Drawing.Pen pen, float x, float y, float width, float height);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>決定色彩、 寬度和樣式的橢圓形。"
    - id: x
      type: System.Single
      description: "週框定義橢圓形的矩形的左上角的 x 座標。"
    - id: y
      type: System.Single
      description: "週框定義橢圓形的矩形的左上角的 y 座標。"
    - id: width
      type: System.Single
      description: "週框定義橢圓形的矩形的寬度。"
    - id: height
      type: System.Single
      description: "週框定義橢圓形的矩形的高度。"
  overload: System.Drawing.Graphics.DrawEllipse*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawIcon(System.Drawing.Icon,System.Drawing.Rectangle)
  id: DrawIcon(System.Drawing.Icon,System.Drawing.Rectangle)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawIcon(Icon,Rectangle)
  nameWithType: Graphics.DrawIcon(Icon,Rectangle)
  fullName: System.Drawing.Graphics.DrawIcon(Icon,Rectangle)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "繪製由指定的映像<xref href=&quot;System.Drawing.Icon&quot;></xref>內所指定的區域<xref href=&quot;System.Drawing.Rectangle&quot;></xref>結構。"
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates an icon from a standard Windows icon file SampIcon.ico in the example folder.  \n  \n-   Creates a rectangle in which to draw the icon.  \n  \n-   Draws the icon to the screen.  \n  \n The position of the rectangle locates the icon on the screen, and the size of the rectangle determines the scaling of the drawn icon.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#31](~/add/codesnippet/cpp/m-system.drawing.graphic_44_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#31](~/add/codesnippet/csharp/m-system.drawing.graphic_44_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#31](~/add/codesnippet/visualbasic/m-system.drawing.graphic_44_1.vb)]"
  syntax:
    content: public void DrawIcon (System.Drawing.Icon icon, System.Drawing.Rectangle targetRect);
    parameters:
    - id: icon
      type: System.Drawing.Icon
      description: "<xref href=&quot;System.Drawing.Icon&quot;></xref>若要繪製。"
    - id: targetRect
      type: System.Drawing.Rectangle
      description: "<xref href=&quot;System.Drawing.Rectangle&quot;></xref>結構，在顯示介面上指定的位置和所產生影像的大小。 映像中包含`icon`參數會調整為這個矩形區域的維度。"
  overload: System.Drawing.Graphics.DrawIcon*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>icon</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawIcon(System.Drawing.Icon,System.Int32,System.Int32)
  id: DrawIcon(System.Drawing.Icon,System.Int32,System.Int32)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawIcon(Icon,Int32,Int32)
  nameWithType: Graphics.DrawIcon(Icon,Int32,Int32)
  fullName: System.Drawing.Graphics.DrawIcon(Icon,Int32,Int32)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "繪製由指定的映像<xref href=&quot;System.Drawing.Icon&quot;></xref>位於指定座標。"
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates an icon from a standard Windows icon file SampIcon.ico in the example folder.  \n  \n-   Creates the coordinates of the upper-left corner at which to draw the icon.  \n  \n-   Draws the icon to the screen.  \n  \n The drawn icon is unscaled.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#32](~/add/codesnippet/cpp/eacdb009-057e-4fdc-abff-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#32](~/add/codesnippet/csharp/eacdb009-057e-4fdc-abff-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#32](~/add/codesnippet/visualbasic/eacdb009-057e-4fdc-abff-_1.vb)]"
  syntax:
    content: public void DrawIcon (System.Drawing.Icon icon, int x, int y);
    parameters:
    - id: icon
      type: System.Drawing.Icon
      description: "<xref href=&quot;System.Drawing.Icon&quot;></xref>若要繪製。"
    - id: x
      type: System.Int32
      description: "繪製影像左上角的 x 座標。"
    - id: y
      type: System.Int32
      description: "繪製影像左上角的 y 座標。"
  overload: System.Drawing.Graphics.DrawIcon*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>icon</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawIconUnstretched(System.Drawing.Icon,System.Drawing.Rectangle)
  id: DrawIconUnstretched(System.Drawing.Icon,System.Drawing.Rectangle)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawIconUnstretched(Icon,Rectangle)
  nameWithType: Graphics.DrawIconUnstretched(Icon,Rectangle)
  fullName: System.Drawing.Graphics.DrawIconUnstretched(Icon,Rectangle)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "繪製由指定的映像<xref href=&quot;System.Drawing.Icon&quot;></xref>不縮放影像。"
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates an icon from a standard Windows icon file SampIcon.ico in the example folder.  \n  \n-   Creates a rectangle in which to draw the icon.  \n  \n-   Draws the icon to the screen.  \n  \n The position of the rectangle locates the icon on the screen, and the drawn icon is unscaled and unclipped.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#33](~/add/codesnippet/cpp/3bd2037f-76e5-4588-a42d-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#33](~/add/codesnippet/csharp/3bd2037f-76e5-4588-a42d-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#33](~/add/codesnippet/visualbasic/3bd2037f-76e5-4588-a42d-_1.vb)]"
  syntax:
    content: public void DrawIconUnstretched (System.Drawing.Icon icon, System.Drawing.Rectangle targetRect);
    parameters:
    - id: icon
      type: System.Drawing.Icon
      description: "<xref href=&quot;System.Drawing.Icon&quot;></xref>若要繪製。"
    - id: targetRect
      type: System.Drawing.Rectangle
      description: "<xref href=&quot;System.Drawing.Rectangle&quot;></xref>結構，指定產生的映像的大小與位置。 映像不會縮放以符合這個矩形，但會保留其原始大小。 如果影像比矩形大，則會裁剪以納入內文。"
  overload: System.Drawing.Graphics.DrawIconUnstretched*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>icon</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point)
  id: DrawImage(System.Drawing.Image,System.Drawing.Point)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawImage(Image,Point)
  nameWithType: Graphics.DrawImage(Image,Point)
  fullName: System.Drawing.Graphics.DrawImage(Image,Point)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "繪製指定<xref href=&quot;System.Drawing.Image&quot;> </xref>，原始的實體大小，使用指定的位置。"
  remarks: "<xref:System.Drawing.Image>儲存值，以像素寬度和水平解析度 （每英吋點數） 的值。</xref:System.Drawing.Image> 實體的寬度，以英吋，映像的單位是像素寬度除以水平解析度。 例如，216 像素寬度和水平解析度每 72 英吋的映像有實體 3 英吋的寬度。 類似的備註適用於像素高度和實體的高度。       這個方法會繪製影像使用的實體大小，讓映像將會擁有正確的大小是以英吋，不論顯示裝置的解析度 （每英吋點數）。 例如，假設映像有 216 像素寬度和水平解析度 72 每英吋的點數。 如果您呼叫此方法以繪製該映像的裝置解析度為 96 dpi 上時，所呈現影像的像素寬度會 (216/72) * 96 = 288。"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates an image from a JPEG file SampImag.jpg in the folder of the example.  \n  \n-   Creates a point at which to draw the upper-left corner of the image.  \n  \n-   Draws the unscaled image to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#34](~/add/codesnippet/cpp/m-system.drawing.graphic_18_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#34](~/add/codesnippet/csharp/m-system.drawing.graphic_18_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#34](~/add/codesnippet/visualbasic/m-system.drawing.graphic_18_1.vb)]"
  syntax:
    content: public void DrawImage (System.Drawing.Image image, System.Drawing.Point point);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "<xref href=&quot;System.Drawing.Image&quot;></xref>若要繪製。"
    - id: point
      type: System.Drawing.Point
      description: "<xref href=&quot;System.Drawing.Point&quot;></xref>結構，表示繪製影像的左上角的位置。"
  overload: System.Drawing.Graphics.DrawImage*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>image</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[])
  id: DrawImage(System.Drawing.Image,System.Drawing.Point[])
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawImage(Image,Point[])
  nameWithType: Graphics.DrawImage(Image,Point[])
  fullName: System.Drawing.Graphics.DrawImage(Image,Point[])
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "繪製指定<xref href=&quot;System.Drawing.Image&quot;></xref>以指定的形狀和大小，在指定的位置。"
  remarks: "`destPoints`參數會指定三個平行四邊形的點。 三個<xref:System.Drawing.Point>結構代表平行四邊形左上角、 右上角和左下角。</xref:System.Drawing.Point> 第四個點會從前前三個以形成平行四邊形。       所表示的影像`image`參數可調整且修剪來符合所指定的平行四邊形的圖形`destPoints`參數。"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates an image from a JPEG file SampImag.jpg in the folder of the example.  \n  \n-   Creates points that define a parallelogram in which to draw the image.  \n  \n-   Draws the image to the screen.  \n  \n The position of the parallelogram locates the image on the screen, and the size of the original image and the size and shape of the parallelogram determines the scaling and shearing of the drawn image.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#35](~/add/codesnippet/cpp/m-system.drawing.graphic_42_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#35](~/add/codesnippet/csharp/m-system.drawing.graphic_42_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#35](~/add/codesnippet/visualbasic/m-system.drawing.graphic_42_1.vb)]"
  syntax:
    content: public void DrawImage (System.Drawing.Image image, System.Drawing.Point[] destPoints);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "<xref href=&quot;System.Drawing.Image&quot;></xref>若要繪製。"
    - id: destPoints
      type: System.Drawing.Point[]
      description: "陣列的三個<xref href=&quot;System.Drawing.Point&quot;></xref>定義平行四邊形的結構。"
  overload: System.Drawing.Graphics.DrawImage*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>image</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF)
  id: DrawImage(System.Drawing.Image,System.Drawing.PointF)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawImage(Image,PointF)
  nameWithType: Graphics.DrawImage(Image,PointF)
  fullName: System.Drawing.Graphics.DrawImage(Image,PointF)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "繪製指定<xref href=&quot;System.Drawing.Image&quot;> </xref>，原始的實體大小，使用指定的位置。"
  remarks: "<xref:System.Drawing.Image>儲存值，以像素寬度和水平解析度 （每英吋點數） 的值。</xref:System.Drawing.Image> 實體的寬度，以英吋，映像的單位是像素寬度除以水平解析度。 例如，216 像素寬度和水平解析度每 72 英吋的映像有實體 3 英吋的寬度。 類似的備註適用於像素高度和實體的高度。       這個方法會繪製影像使用的實體大小，讓映像將會擁有正確的大小是以英吋，不論顯示裝置的解析度 （每英吋點數）。 例如，假設映像有 216 像素寬度和水平解析度 72 每英吋的點數。 如果您呼叫此方法以繪製該映像的裝置解析度為 96 dpi 上時，所呈現影像的像素寬度會 (216/72) * 96 = 288。"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates an image from a JPEG file SampImag.jpg in the folder of the example.  \n  \n-   Creates a point at which to draw the upper-left corner of the image.  \n  \n-   Draws the unscaled image to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#40](~/add/codesnippet/cpp/m-system.drawing.graphic_19_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#40](~/add/codesnippet/csharp/m-system.drawing.graphic_19_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#40](~/add/codesnippet/visualbasic/m-system.drawing.graphic_19_1.vb)]"
  syntax:
    content: public void DrawImage (System.Drawing.Image image, System.Drawing.PointF point);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "<xref href=&quot;System.Drawing.Image&quot;></xref>若要繪製。"
    - id: point
      type: System.Drawing.PointF
      description: "<xref href=&quot;System.Drawing.PointF&quot;></xref>結構，表示繪製影像的左上角。"
  overload: System.Drawing.Graphics.DrawImage*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>image</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[])
  id: DrawImage(System.Drawing.Image,System.Drawing.PointF[])
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawImage(Image,PointF[])
  nameWithType: Graphics.DrawImage(Image,PointF[])
  fullName: System.Drawing.Graphics.DrawImage(Image,PointF[])
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "繪製指定<xref href=&quot;System.Drawing.Image&quot;></xref>以指定的形狀和大小，在指定的位置。"
  remarks: "`destPoints`參數會指定三個平行四邊形的點。 三個<xref:System.Drawing.PointF>結構代表平行四邊形左上角、 右上角和左下角。</xref:System.Drawing.PointF> 第四個點會從前前三個以形成平行四邊形。       所表示的影像`image`物件是調整及修剪來符合所指定的平行四邊形的圖形`destPoints`參數。"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates an image from a JPEG file SampImag.jpg in the folder of the example.  \n  \n-   Creates points that define a parallelogram in which to draw the image.  \n  \n-   Draws the image to the screen.  \n  \n The position of the parallelogram locates the image on the screen, and the size of the original image and the size and shape of the parallelogram determines the scaling and shearing of the drawn image.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#41](~/add/codesnippet/cpp/d1011ba3-7a66-459f-8c2e-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#41](~/add/codesnippet/csharp/d1011ba3-7a66-459f-8c2e-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#41](~/add/codesnippet/visualbasic/d1011ba3-7a66-459f-8c2e-_1.vb)]"
  syntax:
    content: public void DrawImage (System.Drawing.Image image, System.Drawing.PointF[] destPoints);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "<xref href=&quot;System.Drawing.Image&quot;></xref>若要繪製。"
    - id: destPoints
      type: System.Drawing.PointF[]
      description: "陣列的三個<xref href=&quot;System.Drawing.PointF&quot;></xref>定義平行四邊形的結構。"
  overload: System.Drawing.Graphics.DrawImage*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>image</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle)
  id: DrawImage(System.Drawing.Image,System.Drawing.Rectangle)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawImage(Image,Rectangle)
  nameWithType: Graphics.DrawImage(Image,Rectangle)
  fullName: System.Drawing.Graphics.DrawImage(Image,Rectangle)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "繪製指定<xref href=&quot;System.Drawing.Image&quot;></xref>以指定的大小，在指定的位置。"
  remarks: "所表示的影像`image`物件會調整的尺寸為`rect`矩形。"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates an image from a JPEG file SampImag.jpg in the folder of the example.  \n  \n-   Creates a rectangle in which to draw the image.  \n  \n-   Draws the image to the screen.  \n  \n The position of the rectangle locates the image on the screen, and the size of the original image and the size of the rectangle determines the scaling of the drawn image.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#46](~/add/codesnippet/cpp/b2a72c58-befd-40af-b6a8-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#46](~/add/codesnippet/csharp/b2a72c58-befd-40af-b6a8-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#46](~/add/codesnippet/visualbasic/b2a72c58-befd-40af-b6a8-_1.vb)]"
  syntax:
    content: public void DrawImage (System.Drawing.Image image, System.Drawing.Rectangle rect);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "<xref href=&quot;System.Drawing.Image&quot;></xref>若要繪製。"
    - id: rect
      type: System.Drawing.Rectangle
      description: "<xref href=&quot;System.Drawing.Rectangle&quot;></xref>結構，指定繪製影像的大小與位置。"
  overload: System.Drawing.Graphics.DrawImage*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>image</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.RectangleF)
  id: DrawImage(System.Drawing.Image,System.Drawing.RectangleF)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawImage(Image,RectangleF)
  nameWithType: Graphics.DrawImage(Image,RectangleF)
  fullName: System.Drawing.Graphics.DrawImage(Image,RectangleF)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "繪製指定<xref href=&quot;System.Drawing.Image&quot;></xref>以指定的大小，在指定的位置。"
  remarks: "所表示的影像`image`物件會調整的尺寸為`rect`矩形。"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates an image from a JPEG file SampImag.jpg in the folder of the example.  \n  \n-   Creates a rectangle in which to draw the image.  \n  \n-   Draws the image to the screen.  \n  \n The position of the rectangle locates the image on the screen, and the original size of the image and the size of the rectangle determines the scaling of the drawn image.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#56](~/add/codesnippet/cpp/6f0c41d2-6855-4f5b-b775-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#56](~/add/codesnippet/csharp/6f0c41d2-6855-4f5b-b775-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#56](~/add/codesnippet/visualbasic/6f0c41d2-6855-4f5b-b775-_1.vb)]"
  syntax:
    content: public void DrawImage (System.Drawing.Image image, System.Drawing.RectangleF rect);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "<xref href=&quot;System.Drawing.Image&quot;></xref>若要繪製。"
    - id: rect
      type: System.Drawing.RectangleF
      description: "<xref href=&quot;System.Drawing.RectangleF&quot;></xref>結構，指定繪製影像的大小與位置。"
  overload: System.Drawing.Graphics.DrawImage*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>image</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32)
  id: DrawImage(System.Drawing.Image,System.Int32,System.Int32)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawImage(Image,Int32,Int32)
  nameWithType: Graphics.DrawImage(Image,Int32,Int32)
  fullName: System.Drawing.Graphics.DrawImage(Image,Int32,Int32)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "繪製由座標對所指定的位置使用原始的實體大小，將指定的影像。"
  remarks: "<xref:System.Drawing.Image>儲存值，以像素寬度和水平解析度 （每英吋點數） 的值。</xref:System.Drawing.Image> 實體的寬度，以英吋，映像的單位是像素寬度除以水平解析度。 例如，216 像素寬度和水平解析度每 72 英吋的映像有實體 3 英吋的寬度。 類似的備註適用於像素高度和實體的高度。       DrawImage 方法繪製影像使用的實體大小，讓映像將會擁有正確的大小是以英吋，不論顯示裝置的解析度 （每英吋點數）。 例如，假設映像有 216 像素寬度和水平解析度 72 每英吋的點數。 如果您呼叫 DrawImage 解析度為 96 dpi 的裝置上繪製該映像時，所呈現影像的像素寬度會 (216/72) * 96 = 288。"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates an image from a JPEG file SampImag.jpg in the folder of the example SampImag.jpg in the folder of the example.  \n  \n-   Creates the coordinates of a point at which to draw the upper-left corner of the image.  \n  \n-   Draws the unscaled image.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#58](~/add/codesnippet/cpp/ab9189bb-a438-4f96-9c99-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#58](~/add/codesnippet/csharp/ab9189bb-a438-4f96-9c99-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#58](~/add/codesnippet/visualbasic/ab9189bb-a438-4f96-9c99-_1.vb)]"
  syntax:
    content: public void DrawImage (System.Drawing.Image image, int x, int y);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "<xref href=&quot;System.Drawing.Image&quot;></xref>若要繪製。"
    - id: x
      type: System.Int32
      description: "繪製影像左上角的 x 座標。"
    - id: y
      type: System.Int32
      description: "繪製影像左上角的 y 座標。"
  overload: System.Drawing.Graphics.DrawImage*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>image</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Single,System.Single)
  id: DrawImage(System.Drawing.Image,System.Single,System.Single)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawImage(Image,Single,Single)
  nameWithType: Graphics.DrawImage(Image,Single,Single)
  fullName: System.Drawing.Graphics.DrawImage(Image,Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "繪製指定<xref href=&quot;System.Drawing.Image&quot;> </xref>，原始的實體大小，使用指定的位置。"
  remarks: "<xref:System.Drawing.Image>儲存值，以像素寬度和水平解析度 （每英吋點數） 的值。</xref:System.Drawing.Image> 實體的寬度，以英吋，映像的單位是像素寬度除以水平解析度。 例如，216 像素寬度和水平解析度每 72 英吋的映像有實體 3 英吋的寬度。 類似的備註適用於像素高度和實體的高度。       這個方法會繪製影像使用的實體大小，讓映像將會擁有正確的大小是以英吋，不論顯示裝置的解析度 （每英吋點數）。 例如，假設映像有 216 像素寬度和水平解析度 72 每英吋的點數。 如果您呼叫此方法以繪製該映像的裝置解析度為 96 dpi 上時，所呈現影像的像素寬度會 (216/72) * 96 = 288。"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates an image from a JPEG file SampImag.jpg in the folder of the example.  \n  \n-   Creates the coordinates of a point at which to draw the upper-left corner of the image.  \n  \n-   Draws the unscaled image to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#61](~/add/codesnippet/cpp/84c935d5-87a0-43c2-8402-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#61](~/add/codesnippet/csharp/84c935d5-87a0-43c2-8402-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#61](~/add/codesnippet/visualbasic/84c935d5-87a0-43c2-8402-_1.vb)]"
  syntax:
    content: public void DrawImage (System.Drawing.Image image, float x, float y);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "<xref href=&quot;System.Drawing.Image&quot;></xref>若要繪製。"
    - id: x
      type: System.Single
      description: "繪製影像左上角的 x 座標。"
    - id: y
      type: System.Single
      description: "繪製影像左上角的 y 座標。"
  overload: System.Drawing.Graphics.DrawImage*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>image</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit)
  id: DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawImage(Image,Point[],Rectangle,GraphicsUnit)
  nameWithType: Graphics.DrawImage(Image,Point[],Rectangle,GraphicsUnit)
  fullName: System.Drawing.Graphics.DrawImage(Image,Point[],Rectangle,GraphicsUnit)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "繪製指定的指定的部分<xref href=&quot;System.Drawing.Image&quot;></xref>以指定的大小，在指定的位置。"
  remarks: "`destPoints`參數會指定三個平行四邊形的點。 三個<xref:System.Drawing.Point>結構代表平行四邊形左上角、 右上角和左下角。</xref:System.Drawing.Point> 第四個點會從前前三個以形成平行四邊形。       `srcRect`參數指定的矩形部分`image`繪製的物件。 這個部分會調整及修剪來配合所指定的平行四邊形`destPoints`參數。"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates an image from a JPEG file SampImag.jpg in the folder of the example.  \n  \n-   Creates points that define a parallelogram in which to draw the image.  \n  \n-   Creates a rectangle to select the portion of the image to draw.  \n  \n-   Sets the graphics drawing unit to pixel.  \n  \n-   Draws the image to the screen.  \n  \n The position of the parallelogram locates the image on the screen, and the size of the rectangle and the size and shape of the parallelogram determines the scaling and shearing of the drawn image.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#36](~/add/codesnippet/cpp/6dd53b7b-1b38-4016-b9e0-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#36](~/add/codesnippet/csharp/6dd53b7b-1b38-4016-b9e0-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#36](~/add/codesnippet/visualbasic/6dd53b7b-1b38-4016-b9e0-_1.vb)]"
  syntax:
    content: public void DrawImage (System.Drawing.Image image, System.Drawing.Point[] destPoints, System.Drawing.Rectangle srcRect, System.Drawing.GraphicsUnit srcUnit);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "<xref href=&quot;System.Drawing.Image&quot;></xref>若要繪製。"
    - id: destPoints
      type: System.Drawing.Point[]
      description: "陣列的三個<xref href=&quot;System.Drawing.Point&quot;></xref>定義平行四邊形的結構。"
    - id: srcRect
      type: System.Drawing.Rectangle
      description: "<xref href=&quot;System.Drawing.Rectangle&quot;></xref>結構，指定的部分`image`繪製的物件。"
    - id: srcUnit
      type: System.Drawing.GraphicsUnit
      description: "成員的<xref href=&quot;System.Drawing.GraphicsUnit&quot;></xref>列舉，指定所使用的測量單位`srcRect`參數。"
  overload: System.Drawing.Graphics.DrawImage*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>image</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit)
  id: DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawImage(Image,PointF[],RectangleF,GraphicsUnit)
  nameWithType: Graphics.DrawImage(Image,PointF[],RectangleF,GraphicsUnit)
  fullName: System.Drawing.Graphics.DrawImage(Image,PointF[],RectangleF,GraphicsUnit)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "繪製指定的指定的部分<xref href=&quot;System.Drawing.Image&quot;></xref>以指定的大小，在指定的位置。"
  remarks: "`destPoints`參數會指定三個平行四邊形的點。 三個<xref:System.Drawing.PointF>結構代表平行四邊形左上角、 右上角和左下角。</xref:System.Drawing.PointF> 第四個點會從前前三個以形成平行四邊形。       `srcRect`參數指定的矩形部分`image`繪製的物件。 這個部分會調整及修剪來配合所指定的平行四邊形`destPoints`參數。"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates an image from a JPEG file SampImag.jpg in the folder of the example.  \n  \n-   Creates points that define a destination parallelogram in which to draw the image.  \n  \n-   Creates a source rectangle from which to extract a portion of the image.  \n  \n-   Sets the unit of measure of the source rectangle to pixels.  \n  \n-   Draws the image to the screen.  \n  \n The position of the destination parallelogram locates the image on the screen, the size of the source rectangle and the size and shape of the destination parallelogram determines the scaling and shearing of the drawn image, and the size of the rectangle determines what portion of the original image is drawn to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#42](~/add/codesnippet/cpp/bc8f7cbd-f1b7-4dce-b971-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#42](~/add/codesnippet/csharp/bc8f7cbd-f1b7-4dce-b971-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#42](~/add/codesnippet/visualbasic/bc8f7cbd-f1b7-4dce-b971-_1.vb)]"
  syntax:
    content: public void DrawImage (System.Drawing.Image image, System.Drawing.PointF[] destPoints, System.Drawing.RectangleF srcRect, System.Drawing.GraphicsUnit srcUnit);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "<xref href=&quot;System.Drawing.Image&quot;></xref>若要繪製。"
    - id: destPoints
      type: System.Drawing.PointF[]
      description: "陣列的三個<xref href=&quot;System.Drawing.PointF&quot;></xref>定義平行四邊形的結構。"
    - id: srcRect
      type: System.Drawing.RectangleF
      description: "<xref href=&quot;System.Drawing.RectangleF&quot;></xref>結構，指定的部分`image`繪製的物件。"
    - id: srcUnit
      type: System.Drawing.GraphicsUnit
      description: "成員的<xref href=&quot;System.Drawing.GraphicsUnit&quot;></xref>列舉，指定所使用的測量單位`srcRect`參數。"
  overload: System.Drawing.Graphics.DrawImage*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>image</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)
  id: DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawImage(Image,Rectangle,Rectangle,GraphicsUnit)
  nameWithType: Graphics.DrawImage(Image,Rectangle,Rectangle,GraphicsUnit)
  fullName: System.Drawing.Graphics.DrawImage(Image,Rectangle,Rectangle,GraphicsUnit)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "繪製指定的指定的部分<xref href=&quot;System.Drawing.Image&quot;></xref>以指定的大小，在指定的位置。"
  remarks: "`srcRect`參數指定的矩形部分`image`繪製的物件。 這個部分會調整為適合所指定的矩形內`destRect`參數。"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates an image from a JPEG file SampImag.jpg in the folder of the example.  \n  \n-   Creates a destination rectangle in which to draw the image.  \n  \n-   Creates a source rectangle from which to extract a portion of the image.  \n  \n-   Sets the unit of measure of the source rectangle to pixels.  \n  \n-   Draws the image to the screen.  \n  \n The position of the destination rectangle locates the image on the screen, the sizes of the source and destination rectangles determine the scaling of the drawn image, and the size of the source rectangle determines what portion of the original image is drawn to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#47](~/add/codesnippet/cpp/c5d7b66c-1518-48ae-83a4-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#47](~/add/codesnippet/csharp/c5d7b66c-1518-48ae-83a4-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#47](~/add/codesnippet/visualbasic/c5d7b66c-1518-48ae-83a4-_1.vb)]"
  syntax:
    content: public void DrawImage (System.Drawing.Image image, System.Drawing.Rectangle destRect, System.Drawing.Rectangle srcRect, System.Drawing.GraphicsUnit srcUnit);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "<xref href=&quot;System.Drawing.Image&quot;></xref>若要繪製。"
    - id: destRect
      type: System.Drawing.Rectangle
      description: "<xref href=&quot;System.Drawing.Rectangle&quot;></xref>結構，指定繪製影像的大小與位置。 縮放影像來符合矩形。"
    - id: srcRect
      type: System.Drawing.Rectangle
      description: "<xref href=&quot;System.Drawing.Rectangle&quot;></xref>結構，指定的部分`image`繪製的物件。"
    - id: srcUnit
      type: System.Drawing.GraphicsUnit
      description: "成員的<xref href=&quot;System.Drawing.GraphicsUnit&quot;></xref>列舉，指定所使用的測量單位`srcRect`參數。"
  overload: System.Drawing.Graphics.DrawImage*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>image</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)
  id: DrawImage(System.Drawing.Image,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawImage(Image,RectangleF,RectangleF,GraphicsUnit)
  nameWithType: Graphics.DrawImage(Image,RectangleF,RectangleF,GraphicsUnit)
  fullName: System.Drawing.Graphics.DrawImage(Image,RectangleF,RectangleF,GraphicsUnit)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "繪製指定的指定的部分<xref href=&quot;System.Drawing.Image&quot;></xref>以指定的大小，在指定的位置。"
  remarks: "`srcRect`參數指定的矩形部分`image`繪製的物件。 這個部分會調整為適合所指定的矩形內`destRect`參數。"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates an image from a JPEG file SampImag.jpg in the folder of the example.  \n  \n-   Creates a destination rectangle in which to draw the image.  \n  \n-   Creates a source rectangle from which to extract a portion of the image.  \n  \n-   Sets the unit of measure of the source rectangle to pixels.  \n  \n-   Draws the image to the screen.  \n  \n The position of the destination rectangle locates the image on the screen, the sizes of the source and destination rectangles determine the scaling of the drawn image, and the size of the source rectangle determines what portion of the original image is drawn to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#57](~/add/codesnippet/cpp/d16e9371-9711-4277-9719-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#57](~/add/codesnippet/csharp/d16e9371-9711-4277-9719-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#57](~/add/codesnippet/visualbasic/d16e9371-9711-4277-9719-_1.vb)]"
  syntax:
    content: public void DrawImage (System.Drawing.Image image, System.Drawing.RectangleF destRect, System.Drawing.RectangleF srcRect, System.Drawing.GraphicsUnit srcUnit);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "<xref href=&quot;System.Drawing.Image&quot;></xref>若要繪製。"
    - id: destRect
      type: System.Drawing.RectangleF
      description: "<xref href=&quot;System.Drawing.RectangleF&quot;></xref>結構，指定繪製影像的大小與位置。 縮放影像來符合矩形。"
    - id: srcRect
      type: System.Drawing.RectangleF
      description: "<xref href=&quot;System.Drawing.RectangleF&quot;></xref>結構，指定的部分`image`繪製的物件。"
    - id: srcUnit
      type: System.Drawing.GraphicsUnit
      description: "成員的<xref href=&quot;System.Drawing.GraphicsUnit&quot;></xref>列舉，指定所使用的測量單位`srcRect`參數。"
  overload: System.Drawing.Graphics.DrawImage*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>image</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)
  id: DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawImage(Image,Point[],Rectangle,GraphicsUnit,ImageAttributes)
  nameWithType: Graphics.DrawImage(Image,Point[],Rectangle,GraphicsUnit,ImageAttributes)
  fullName: System.Drawing.Graphics.DrawImage(Image,Point[],Rectangle,GraphicsUnit,ImageAttributes)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "繪製指定的指定的部分<xref href=&quot;System.Drawing.Image&quot;></xref>在指定的位置。"
  remarks: "`destPoints`參數會指定三個平行四邊形的點。 三個<xref:System.Drawing.Point>結構代表平行四邊形左上角、 右上角和左下角。</xref:System.Drawing.Point> 第四個點會從前前三個以形成平行四邊形。       `srcRect`參數指定的矩形部分`image`繪製的物件。 這個部分會調整及修剪來配合所指定的平行四邊形`destPoints`參數。"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates an image from a JPEG file SampImag.jpg in the folder of the example.  \n  \n-   Creates points that define a parallelogram in which to draw the image.  \n  \n-   Creates a rectangle to select the portion of the image to draw.  \n  \n-   Sets the graphics drawing unit to pixel.  \n  \n-   Draws the original image to the screen.  \n  \n-   Creates an additional parallelogram in which to draw an adjusted image.  \n  \n-   Creates and sets the attributes of the adjusted image to have a larger-than-usual gamma value.  \n  \n-   Draws the adjusted image to the screen.  \n  \n For the original, unadjusted parallelogram, the position locates the image on the screen, and the size of the rectangle and the size and shape of the parallelogram determines the scaling and shearing of the drawn image.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#37](~/add/codesnippet/cpp/fd322d76-6837-44d1-9e35-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#37](~/add/codesnippet/csharp/fd322d76-6837-44d1-9e35-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#37](~/add/codesnippet/visualbasic/fd322d76-6837-44d1-9e35-_1.vb)]"
  syntax:
    content: public void DrawImage (System.Drawing.Image image, System.Drawing.Point[] destPoints, System.Drawing.Rectangle srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Imaging.ImageAttributes imageAttr);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "<xref href=&quot;System.Drawing.Image&quot;></xref>若要繪製。"
    - id: destPoints
      type: System.Drawing.Point[]
      description: "陣列的三個<xref href=&quot;System.Drawing.Point&quot;></xref>定義平行四邊形的結構。"
    - id: srcRect
      type: System.Drawing.Rectangle
      description: "<xref href=&quot;System.Drawing.Rectangle&quot;></xref>結構，指定的部分`image`繪製的物件。"
    - id: srcUnit
      type: System.Drawing.GraphicsUnit
      description: "成員的<xref href=&quot;System.Drawing.GraphicsUnit&quot;></xref>列舉，指定所使用的測量單位`srcRect`參數。"
    - id: imageAttr
      type: System.Drawing.Imaging.ImageAttributes
      description: "<xref href=&quot;System.Drawing.Imaging.ImageAttributes&quot;></xref>指定的重新著色和 gamma 資訊`image`物件。"
  overload: System.Drawing.Graphics.DrawImage*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>image</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)
  id: DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawImage(Image,PointF[],RectangleF,GraphicsUnit,ImageAttributes)
  nameWithType: Graphics.DrawImage(Image,PointF[],RectangleF,GraphicsUnit,ImageAttributes)
  fullName: System.Drawing.Graphics.DrawImage(Image,PointF[],RectangleF,GraphicsUnit,ImageAttributes)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "繪製指定的指定的部分<xref href=&quot;System.Drawing.Image&quot;></xref>以指定的大小，在指定的位置。"
  remarks: "`destPoints`參數會指定三個平行四邊形的點。 三個<xref:System.Drawing.PointF>結構代表平行四邊形左上角、 右上角和左下角。</xref:System.Drawing.PointF> 第四個點會從前前三個以形成平行四邊形。       `srcRect`參數指定的矩形部分`image`繪製的物件。 這個部分會調整及修剪來配合所指定的平行四邊形`destPoints`參數。"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates an image from a JPEG file SampImag.jpg in the folder of the example.  \n  \n-   Creates points that define a destination parallelogram in which to draw the image.  \n  \n-   Creates a source rectangle from which to extract a portion of the image.  \n  \n-   Sets the unit of measure of the source rectangle to pixels.  \n  \n-   Draws the original image to the screen.  \n  \n-   Creates an additional parallelogram in which to draw an adjusted image.  \n  \n-   Creates and sets the attributes of the adjusted image to have a larger-than-usual gamma value.  \n  \n-   Draws the adjusted image to the screen.  \n  \n For the original, unadjusted destination parallelogram, the position locates the image on the screen, the size of the source rectangle and the size and shape of the destination parallelogram determines the scaling and shearing of the drawn image, and the size of the rectangle determines what portion of the original image is drawn to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#43](~/add/codesnippet/cpp/6b0afdfb-af32-486b-87bf-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#43](~/add/codesnippet/csharp/6b0afdfb-af32-486b-87bf-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#43](~/add/codesnippet/visualbasic/6b0afdfb-af32-486b-87bf-_1.vb)]"
  syntax:
    content: public void DrawImage (System.Drawing.Image image, System.Drawing.PointF[] destPoints, System.Drawing.RectangleF srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Imaging.ImageAttributes imageAttr);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "<xref href=&quot;System.Drawing.Image&quot;></xref>若要繪製。"
    - id: destPoints
      type: System.Drawing.PointF[]
      description: "陣列的三個<xref href=&quot;System.Drawing.PointF&quot;></xref>定義平行四邊形的結構。"
    - id: srcRect
      type: System.Drawing.RectangleF
      description: "<xref href=&quot;System.Drawing.RectangleF&quot;></xref>結構，指定的部分`image`繪製的物件。"
    - id: srcUnit
      type: System.Drawing.GraphicsUnit
      description: "成員的<xref href=&quot;System.Drawing.GraphicsUnit&quot;></xref>列舉，指定所使用的測量單位`srcRect`參數。"
    - id: imageAttr
      type: System.Drawing.Imaging.ImageAttributes
      description: "<xref href=&quot;System.Drawing.Imaging.ImageAttributes&quot;></xref>指定的重新著色和 gamma 資訊`image`物件。"
  overload: System.Drawing.Graphics.DrawImage*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>image</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)
  id: DrawImage(System.Drawing.Image,System.Int32,System.Int32,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawImage(Image,Int32,Int32,Rectangle,GraphicsUnit)
  nameWithType: Graphics.DrawImage(Image,Int32,Int32,Rectangle,GraphicsUnit)
  fullName: System.Drawing.Graphics.DrawImage(Image,Int32,Int32,Rectangle,GraphicsUnit)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "映像的一部分繪製於指定的位置。"
  remarks: "<xref:System.Drawing.Image>儲存值，以像素寬度和水平解析度 （每英吋點數） 的值。</xref:System.Drawing.Image> 實體的寬度，以英吋，映像的單位是像素寬度除以水平解析度。 例如，像素寬度 360 和每 72 英吋的水平解析度的影像具有實體寬度為 5 英吋。 類似的備註適用於像素高度和實體的高度。       這個方法會繪製影像使用的實體大小，因此影像部分會有正確的大小是以英吋，不論顯示裝置的解析度 （每英吋點數） 的一部分。 例如，假設影像部分有 216 像素寬度和水平解析度 72 每英吋的點數。 如果您呼叫這個方法的裝置解析度為 96 dpi 上繪製影像部分時，所呈現的影像部分的像素寬度會 (216/72) * 96 = 288。"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates an image from a JPEG file SampImag.jpg in the folder of the example.  \n  \n-   Creates the coordinates at which to draw the upper-left corner of the image.  \n  \n-   Creates a source rectangle from which to extract a portion of the image.  \n  \n-   Sets the unit of measure of the source rectangle to pixels.  \n  \n-   Draws the image to the screen.  \n  \n The size of the source rectangle determines what portion of the unscaled original image is drawn to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#59](~/add/codesnippet/cpp/f904b742-3271-432e-b54b-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#59](~/add/codesnippet/csharp/f904b742-3271-432e-b54b-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#59](~/add/codesnippet/visualbasic/f904b742-3271-432e-b54b-_1.vb)]"
  syntax:
    content: public void DrawImage (System.Drawing.Image image, int x, int y, System.Drawing.Rectangle srcRect, System.Drawing.GraphicsUnit srcUnit);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "<xref href=&quot;System.Drawing.Image&quot;></xref>若要繪製。"
    - id: x
      type: System.Int32
      description: "繪製影像左上角的 x 座標。"
    - id: y
      type: System.Int32
      description: "繪製影像左上角的 y 座標。"
    - id: srcRect
      type: System.Drawing.Rectangle
      description: "<xref href=&quot;System.Drawing.Rectangle&quot;></xref>結構，指定的部分`image`繪製的物件。"
    - id: srcUnit
      type: System.Drawing.GraphicsUnit
      description: "成員的<xref href=&quot;System.Drawing.GraphicsUnit&quot;></xref>列舉，指定所使用的測量單位`srcRect`參數。"
  overload: System.Drawing.Graphics.DrawImage*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>image</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32,System.Int32,System.Int32)
  id: DrawImage(System.Drawing.Image,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawImage(Image,Int32,Int32,Int32,Int32)
  nameWithType: Graphics.DrawImage(Image,Int32,Int32,Int32,Int32)
  fullName: System.Drawing.Graphics.DrawImage(Image,Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "繪製指定<xref href=&quot;System.Drawing.Image&quot;></xref>以指定的大小，在指定的位置。"
  remarks: "所定義的矩形`x`， `y`， `width`，和`height`參數會決定所繪製影像的大小與位置。"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates an image from a JPEG file SampImag.jpg in the folder of the example.  \n  \n-   Creates the position and size of a rectangle in which to draw the image.  \n  \n-   Draws the image to the screen.  \n  \n The position of the rectangle locates the image on the screen, and the size of the original image and the size of the rectangle determines the scaling of the drawn image.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#60](~/add/codesnippet/cpp/dc519bdd-d8f5-446f-a257-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#60](~/add/codesnippet/csharp/dc519bdd-d8f5-446f-a257-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#60](~/add/codesnippet/visualbasic/dc519bdd-d8f5-446f-a257-_1.vb)]"
  syntax:
    content: public void DrawImage (System.Drawing.Image image, int x, int y, int width, int height);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "<xref href=&quot;System.Drawing.Image&quot;></xref>若要繪製。"
    - id: x
      type: System.Int32
      description: "繪製影像左上角的 x 座標。"
    - id: y
      type: System.Int32
      description: "繪製影像左上角的 y 座標。"
    - id: width
      type: System.Int32
      description: "繪製影像的寬度。"
    - id: height
      type: System.Int32
      description: "繪製影像的高度。"
  overload: System.Drawing.Graphics.DrawImage*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>image</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Single,System.Single,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)
  id: DrawImage(System.Drawing.Image,System.Single,System.Single,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawImage(Image,Single,Single,RectangleF,GraphicsUnit)
  nameWithType: Graphics.DrawImage(Image,Single,Single,RectangleF,GraphicsUnit)
  fullName: System.Drawing.Graphics.DrawImage(Image,Single,Single,RectangleF,GraphicsUnit)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "映像的一部分繪製於指定的位置。"
  remarks: "<xref:System.Drawing.Image>儲存值，以像素寬度和水平解析度 （每英吋點數） 的值。</xref:System.Drawing.Image> 實體的寬度，以英吋，映像的單位是像素寬度除以水平解析度。 例如，像素寬度 360 和每 72 英吋的水平解析度的影像具有實體寬度為 5 英吋。 類似的備註適用於像素高度和實體的高度。       這個方法會繪製影像使用的實體大小，因此影像部分會有正確的大小是以英吋，不論顯示裝置的解析度 （每英吋點數） 的一部分。 例如，假設影像部分有 216 像素寬度和水平解析度 72 每英吋的點數。 如果您呼叫這個方法的裝置解析度為 96 dpi 上繪製影像部分時，所呈現的影像部分的像素寬度會 (216/72) * 96 = 288。"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates an image from a JPEG file SampImag.jpg in the folder of the example.  \n  \n-   Creates the coordinates at which to draw the upper-left corner of the image.  \n  \n-   Creates a source rectangle from which to extract a portion of the image.  \n  \n-   Sets the unit of measure of the source rectangle to pixels.  \n  \n-   Draws the image to the screen.  \n  \n The size of the source rectangle determines what portion of the unscaled original image is drawn to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#62](~/add/codesnippet/cpp/9a0fe4d8-ea0f-4f65-9ec1-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#62](~/add/codesnippet/csharp/9a0fe4d8-ea0f-4f65-9ec1-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#62](~/add/codesnippet/visualbasic/9a0fe4d8-ea0f-4f65-9ec1-_1.vb)]"
  syntax:
    content: public void DrawImage (System.Drawing.Image image, float x, float y, System.Drawing.RectangleF srcRect, System.Drawing.GraphicsUnit srcUnit);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "<xref href=&quot;System.Drawing.Image&quot;></xref>若要繪製。"
    - id: x
      type: System.Single
      description: "繪製影像左上角的 x 座標。"
    - id: y
      type: System.Single
      description: "繪製影像左上角的 y 座標。"
    - id: srcRect
      type: System.Drawing.RectangleF
      description: "<xref href=&quot;System.Drawing.RectangleF&quot;></xref>結構，指定的部分<xref href=&quot;System.Drawing.Image&quot;></xref>繪製。"
    - id: srcUnit
      type: System.Drawing.GraphicsUnit
      description: "成員的<xref href=&quot;System.Drawing.GraphicsUnit&quot;></xref>列舉，指定所使用的測量單位`srcRect`參數。"
  overload: System.Drawing.Graphics.DrawImage*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>image</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Single,System.Single,System.Single,System.Single)
  id: DrawImage(System.Drawing.Image,System.Single,System.Single,System.Single,System.Single)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawImage(Image,Single,Single,Single,Single)
  nameWithType: Graphics.DrawImage(Image,Single,Single,Single,Single)
  fullName: System.Drawing.Graphics.DrawImage(Image,Single,Single,Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "繪製指定<xref href=&quot;System.Drawing.Image&quot;></xref>以指定的大小，在指定的位置。"
  remarks: "所定義的矩形`x`， `y`， `width`，和`height`參數會決定所繪製影像的大小與位置。"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates an image from a JPEG file SampImag.jpg in the folder of the example.  \n  \n-   Creates the position and size of a rectangle in which to draw the image.  \n  \n-   Draws the image to the screen.  \n  \n The position of the rectangle locates the image on the screen, and the size of the original image and the size of the rectangle determines the scaling of the drawn image.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#63](~/add/codesnippet/cpp/c499f938-82a0-46ba-ab2e-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#63](~/add/codesnippet/csharp/c499f938-82a0-46ba-ab2e-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#63](~/add/codesnippet/visualbasic/c499f938-82a0-46ba-ab2e-_1.vb)]"
  syntax:
    content: public void DrawImage (System.Drawing.Image image, float x, float y, float width, float height);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "<xref href=&quot;System.Drawing.Image&quot;></xref>若要繪製。"
    - id: x
      type: System.Single
      description: "繪製影像左上角的 x 座標。"
    - id: y
      type: System.Single
      description: "繪製影像左上角的 y 座標。"
    - id: width
      type: System.Single
      description: "繪製影像的寬度。"
    - id: height
      type: System.Single
      description: "繪製影像的高度。"
  overload: System.Drawing.Graphics.DrawImage*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>image</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)
  id: DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawImage(Image,Point[],Rectangle,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort)
  nameWithType: Graphics.DrawImage(Image,Point[],Rectangle,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort)
  fullName: System.Drawing.Graphics.DrawImage(Image,Point[],Rectangle,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void DrawImage (System.Drawing.Image image, System.Drawing.Point[] destPoints, System.Drawing.Rectangle srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Imaging.ImageAttributes imageAttr, System.Drawing.Graphics.DrawImageAbort callback);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "即將加入。"
    - id: destPoints
      type: System.Drawing.Point[]
      description: "即將加入。"
    - id: srcRect
      type: System.Drawing.Rectangle
      description: "即將加入。"
    - id: srcUnit
      type: System.Drawing.GraphicsUnit
      description: "即將加入。"
    - id: imageAttr
      type: System.Drawing.Imaging.ImageAttributes
      description: "即將加入。"
    - id: callback
      type: System.Drawing.Graphics.DrawImageAbort
      description: "即將加入。"
  overload: System.Drawing.Graphics.DrawImage*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)
  id: DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawImage(Image,PointF[],RectangleF,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort)
  nameWithType: Graphics.DrawImage(Image,PointF[],RectangleF,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort)
  fullName: System.Drawing.Graphics.DrawImage(Image,PointF[],RectangleF,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void DrawImage (System.Drawing.Image image, System.Drawing.PointF[] destPoints, System.Drawing.RectangleF srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Imaging.ImageAttributes imageAttr, System.Drawing.Graphics.DrawImageAbort callback);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "即將加入。"
    - id: destPoints
      type: System.Drawing.PointF[]
      description: "即將加入。"
    - id: srcRect
      type: System.Drawing.RectangleF
      description: "即將加入。"
    - id: srcUnit
      type: System.Drawing.GraphicsUnit
      description: "即將加入。"
    - id: imageAttr
      type: System.Drawing.Imaging.ImageAttributes
      description: "即將加入。"
    - id: callback
      type: System.Drawing.Graphics.DrawImageAbort
      description: "即將加入。"
  overload: System.Drawing.Graphics.DrawImage*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)
  id: DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawImage(Image,Point[],Rectangle,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort,Int32)
  nameWithType: Graphics.DrawImage(Image,Point[],Rectangle,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort,Int32)
  fullName: System.Drawing.Graphics.DrawImage(Image,Point[],Rectangle,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort,Int32)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void DrawImage (System.Drawing.Image image, System.Drawing.Point[] destPoints, System.Drawing.Rectangle srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Imaging.ImageAttributes imageAttr, System.Drawing.Graphics.DrawImageAbort callback, int callbackData);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "即將加入。"
    - id: destPoints
      type: System.Drawing.Point[]
      description: "即將加入。"
    - id: srcRect
      type: System.Drawing.Rectangle
      description: "即將加入。"
    - id: srcUnit
      type: System.Drawing.GraphicsUnit
      description: "即將加入。"
    - id: imageAttr
      type: System.Drawing.Imaging.ImageAttributes
      description: "即將加入。"
    - id: callback
      type: System.Drawing.Graphics.DrawImageAbort
      description: "即將加入。"
    - id: callbackData
      type: System.Int32
      description: "即將加入。"
  overload: System.Drawing.Graphics.DrawImage*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)
  id: DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawImage(Image,PointF[],RectangleF,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort,Int32)
  nameWithType: Graphics.DrawImage(Image,PointF[],RectangleF,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort,Int32)
  fullName: System.Drawing.Graphics.DrawImage(Image,PointF[],RectangleF,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort,Int32)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void DrawImage (System.Drawing.Image image, System.Drawing.PointF[] destPoints, System.Drawing.RectangleF srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Imaging.ImageAttributes imageAttr, System.Drawing.Graphics.DrawImageAbort callback, int callbackData);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "即將加入。"
    - id: destPoints
      type: System.Drawing.PointF[]
      description: "即將加入。"
    - id: srcRect
      type: System.Drawing.RectangleF
      description: "即將加入。"
    - id: srcUnit
      type: System.Drawing.GraphicsUnit
      description: "即將加入。"
    - id: imageAttr
      type: System.Drawing.Imaging.ImageAttributes
      description: "即將加入。"
    - id: callback
      type: System.Drawing.Graphics.DrawImageAbort
      description: "即將加入。"
    - id: callbackData
      type: System.Int32
      description: "即將加入。"
  overload: System.Drawing.Graphics.DrawImage*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit)
  id: DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawImage(Image,Rectangle,Int32,Int32,Int32,Int32,GraphicsUnit)
  nameWithType: Graphics.DrawImage(Image,Rectangle,Int32,Int32,Int32,Int32,GraphicsUnit)
  fullName: System.Drawing.Graphics.DrawImage(Image,Rectangle,Int32,Int32,Int32,Int32,GraphicsUnit)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "繪製指定的指定的部分<xref href=&quot;System.Drawing.Image&quot;></xref>以指定的大小，在指定的位置。"
  remarks: "`srcX`， `srcY`， `srcWidth`，和`srcHeight`參數指定矩形的部分，`image`繪製的物件。 矩形是相對於來源影像的左上角。 這個部分會調整為適合所指定的矩形內`destRect`參數。"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates an image from a JPEG file SampImag.jpg in the folder of the example.  \n  \n-   Creates a destination rectangle in which to draw the image.  \n  \n-   Creates the coordinates of a source rectangle from which to extract a portion of the image.  \n  \n-   Sets the unit of measure of the source rectangle to pixels.  \n  \n-   Draws the image to the screen.  \n  \n The position of the destination rectangle locates the image on the screen, and the sizes of the source and destination rectangles determine the scaling of the drawn image, and the size of the source rectangle determines what portion of the original image is drawn to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#48](~/add/codesnippet/cpp/223fb7be-dae4-4ad9-b0a7-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#48](~/add/codesnippet/csharp/223fb7be-dae4-4ad9-b0a7-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#48](~/add/codesnippet/visualbasic/223fb7be-dae4-4ad9-b0a7-_1.vb)]"
  syntax:
    content: public void DrawImage (System.Drawing.Image image, System.Drawing.Rectangle destRect, int srcX, int srcY, int srcWidth, int srcHeight, System.Drawing.GraphicsUnit srcUnit);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "<xref href=&quot;System.Drawing.Image&quot;></xref>若要繪製。"
    - id: destRect
      type: System.Drawing.Rectangle
      description: "<xref href=&quot;System.Drawing.Rectangle&quot;></xref>結構，指定繪製影像的大小與位置。 縮放影像來符合矩形。"
    - id: srcX
      type: System.Int32
      description: "要繪製之來源影像部分左上角的 x 座標。"
    - id: srcY
      type: System.Int32
      description: "要繪製之來源影像部分左上角的 y 座標。"
    - id: srcWidth
      type: System.Int32
      description: "要繪製之來源影像部分的寬度。"
    - id: srcHeight
      type: System.Int32
      description: "要繪製之來源影像部分的高度。"
    - id: srcUnit
      type: System.Drawing.GraphicsUnit
      description: "成員的<xref href=&quot;System.Drawing.GraphicsUnit&quot;></xref>列舉，指定用來判斷來源矩形的測量單位。"
  overload: System.Drawing.Graphics.DrawImage*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>image</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit)
  id: DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawImage(Image,Rectangle,Single,Single,Single,Single,GraphicsUnit)
  nameWithType: Graphics.DrawImage(Image,Rectangle,Single,Single,Single,Single,GraphicsUnit)
  fullName: System.Drawing.Graphics.DrawImage(Image,Rectangle,Single,Single,Single,Single,GraphicsUnit)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "繪製指定的指定的部分<xref href=&quot;System.Drawing.Image&quot;></xref>以指定的大小，在指定的位置。"
  remarks: "`srcX`， `srcY`， `srcWidth`，和`srcHeight`參數指定矩形的部分，`image`繪製的物件。 矩形是相對於來源影像的左上角。 這個部分會調整為適合所指定的矩形內`destRect`參數。"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates an image from a JPEG file SampImag.jpg in the folder of the example.  \n  \n-   Creates the coordinates of a destination rectangle in which to draw the image.  \n  \n-   Creates a source rectangle from which to extract a portion of the image.  \n  \n-   Sets the unit of measure of the source rectangle to pixels.  \n  \n-   Draws the image to the screen.  \n  \n The position of the destination rectangle locates the image on the screen, the sizes of the source and destination rectangles determine the scaling of the drawn image, and the size of the source rectangle determines what portion of the original image is drawn to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#52](~/add/codesnippet/cpp/6a64b030-f9b9-4136-9958-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#52](~/add/codesnippet/csharp/6a64b030-f9b9-4136-9958-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#52](~/add/codesnippet/visualbasic/6a64b030-f9b9-4136-9958-_1.vb)]"
  syntax:
    content: public void DrawImage (System.Drawing.Image image, System.Drawing.Rectangle destRect, float srcX, float srcY, float srcWidth, float srcHeight, System.Drawing.GraphicsUnit srcUnit);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "<xref href=&quot;System.Drawing.Image&quot;></xref>若要繪製。"
    - id: destRect
      type: System.Drawing.Rectangle
      description: "<xref href=&quot;System.Drawing.Rectangle&quot;></xref>結構，指定繪製影像的大小與位置。 縮放影像來符合矩形。"
    - id: srcX
      type: System.Single
      description: "要繪製之來源影像部分左上角的 x 座標。"
    - id: srcY
      type: System.Single
      description: "要繪製之來源影像部分左上角的 y 座標。"
    - id: srcWidth
      type: System.Single
      description: "要繪製之來源影像部分的寬度。"
    - id: srcHeight
      type: System.Single
      description: "要繪製之來源影像部分的高度。"
    - id: srcUnit
      type: System.Drawing.GraphicsUnit
      description: "成員的<xref href=&quot;System.Drawing.GraphicsUnit&quot;></xref>列舉，指定用來判斷來源矩形的測量單位。"
  overload: System.Drawing.Graphics.DrawImage*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>image</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)
  id: DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawImage(Image,Rectangle,Int32,Int32,Int32,Int32,GraphicsUnit,ImageAttributes)
  nameWithType: Graphics.DrawImage(Image,Rectangle,Int32,Int32,Int32,Int32,GraphicsUnit,ImageAttributes)
  fullName: System.Drawing.Graphics.DrawImage(Image,Rectangle,Int32,Int32,Int32,Int32,GraphicsUnit,ImageAttributes)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "繪製指定的指定的部分<xref href=&quot;System.Drawing.Image&quot;></xref>以指定的大小，在指定的位置。"
  remarks: "`srcX`， `srcY`， `srcWidth`，和`srcHeight`參數指定矩形的部分，`image`繪製的物件。 矩形是相對於來源影像的左上角。 這個部分會調整為適合所指定的矩形內`destRect`參數。"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates an image from a JPEG file SampImag.jpg in the folder of the example.  \n  \n-   Creates a destination rectangle in which to draw the image.  \n  \n-   Creates the coordinates of a source rectangle from which to extract a portion of the image.  \n  \n-   Sets the unit of measure of the source rectangle to pixels.  \n  \n-   Draws the original image to the screen.  \n  \n-   Creates an additional rectangle in which to draw an adjusted image.  \n  \n-   Creates and sets the attributes of the adjusted image to have a larger-than-usual gamma value.  \n  \n-   Draws the adjusted image to the screen.  \n  \n For the original, unadjusted destination rectangle, the position locates the image on the screen, and the sizes of the source and destination rectangles determine the scaling of the drawn image, and the size of the source rectangle determines what portion of the original image is drawn to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#49](~/add/codesnippet/cpp/e2928ae3-f4ea-4e28-84d2-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#49](~/add/codesnippet/csharp/e2928ae3-f4ea-4e28-84d2-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#49](~/add/codesnippet/visualbasic/e2928ae3-f4ea-4e28-84d2-_1.vb)]"
  syntax:
    content: public void DrawImage (System.Drawing.Image image, System.Drawing.Rectangle destRect, int srcX, int srcY, int srcWidth, int srcHeight, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Imaging.ImageAttributes imageAttr);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "<xref href=&quot;System.Drawing.Image&quot;></xref>若要繪製。"
    - id: destRect
      type: System.Drawing.Rectangle
      description: "<xref href=&quot;System.Drawing.Rectangle&quot;></xref>結構，指定繪製影像的大小與位置。 縮放影像來符合矩形。"
    - id: srcX
      type: System.Int32
      description: "要繪製之來源影像部分左上角的 x 座標。"
    - id: srcY
      type: System.Int32
      description: "要繪製之來源影像部分左上角的 y 座標。"
    - id: srcWidth
      type: System.Int32
      description: "要繪製之來源影像部分的寬度。"
    - id: srcHeight
      type: System.Int32
      description: "要繪製之來源影像部分的高度。"
    - id: srcUnit
      type: System.Drawing.GraphicsUnit
      description: "成員的<xref href=&quot;System.Drawing.GraphicsUnit&quot;></xref>列舉，指定用來判斷來源矩形的測量單位。"
    - id: imageAttr
      type: System.Drawing.Imaging.ImageAttributes
      description: "<xref href=&quot;System.Drawing.Imaging.ImageAttributes&quot;></xref>指定的重新著色和 gamma 資訊`image`物件。"
  overload: System.Drawing.Graphics.DrawImage*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>image</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)
  id: DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawImage(Image,Rectangle,Single,Single,Single,Single,GraphicsUnit,ImageAttributes)
  nameWithType: Graphics.DrawImage(Image,Rectangle,Single,Single,Single,Single,GraphicsUnit,ImageAttributes)
  fullName: System.Drawing.Graphics.DrawImage(Image,Rectangle,Single,Single,Single,Single,GraphicsUnit,ImageAttributes)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "繪製指定的指定的部分<xref href=&quot;System.Drawing.Image&quot;></xref>以指定的大小，在指定的位置。"
  remarks: "`srcX`， `srcY`， `srcWidth`，和`srcHeight`參數指定矩形的部分，`image`繪製的物件。 矩形是相對於來源影像的左上角。 這個部分會調整為適合所指定的矩形內`destRect`參數。"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates an image from a JPEG file SampImag.jpg in the folder of the example.  \n  \n-   Creates a destination rectangle in which to draw the image.  \n  \n-   Creates the coordinates of a source rectangle from which to extract a portion of the image.  \n  \n-   Sets the unit of measure of the source rectangle to pixels.  \n  \n-   Draws the original image to the screen.  \n  \n-   Creates an additional rectangle in which to draw an adjusted image.  \n  \n-   Creates and sets the attributes of the adjusted image to have a larger-than-usual gamma value.  \n  \n-   Draws the adjusted image to the screen.  \n  \n For the original, unadjusted destination rectangle, the position locates the image on the screen, and the sizes of the source and destination rectangles determine the scaling of the drawn image, and the size of the source rectangle determines what portion of the original image is drawn to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#53](~/add/codesnippet/cpp/8cbc1478-f554-4214-b657-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#53](~/add/codesnippet/csharp/8cbc1478-f554-4214-b657-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#53](~/add/codesnippet/visualbasic/8cbc1478-f554-4214-b657-_1.vb)]"
  syntax:
    content: public void DrawImage (System.Drawing.Image image, System.Drawing.Rectangle destRect, float srcX, float srcY, float srcWidth, float srcHeight, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Imaging.ImageAttributes imageAttrs);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "<xref href=&quot;System.Drawing.Image&quot;></xref>若要繪製。"
    - id: destRect
      type: System.Drawing.Rectangle
      description: "<xref href=&quot;System.Drawing.Rectangle&quot;></xref>結構，指定繪製影像的大小與位置。 縮放影像來符合矩形。"
    - id: srcX
      type: System.Single
      description: "要繪製之來源影像部分左上角的 x 座標。"
    - id: srcY
      type: System.Single
      description: "要繪製之來源影像部分左上角的 y 座標。"
    - id: srcWidth
      type: System.Single
      description: "要繪製之來源影像部分的寬度。"
    - id: srcHeight
      type: System.Single
      description: "要繪製之來源影像部分的高度。"
    - id: srcUnit
      type: System.Drawing.GraphicsUnit
      description: "成員的<xref href=&quot;System.Drawing.GraphicsUnit&quot;></xref>列舉，指定用來判斷來源矩形的測量單位。"
    - id: imageAttrs
      type: System.Drawing.Imaging.ImageAttributes
      description: "<xref href=&quot;System.Drawing.Imaging.ImageAttributes&quot;></xref>指定的重新著色和 gamma 資訊`image`物件。"
  overload: System.Drawing.Graphics.DrawImage*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>image</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)
  id: DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawImage(Image,Rectangle,Int32,Int32,Int32,Int32,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort)
  nameWithType: Graphics.DrawImage(Image,Rectangle,Int32,Int32,Int32,Int32,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort)
  fullName: System.Drawing.Graphics.DrawImage(Image,Rectangle,Int32,Int32,Int32,Int32,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void DrawImage (System.Drawing.Image image, System.Drawing.Rectangle destRect, int srcX, int srcY, int srcWidth, int srcHeight, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Imaging.ImageAttributes imageAttr, System.Drawing.Graphics.DrawImageAbort callback);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "即將加入。"
    - id: destRect
      type: System.Drawing.Rectangle
      description: "即將加入。"
    - id: srcX
      type: System.Int32
      description: "即將加入。"
    - id: srcY
      type: System.Int32
      description: "即將加入。"
    - id: srcWidth
      type: System.Int32
      description: "即將加入。"
    - id: srcHeight
      type: System.Int32
      description: "即將加入。"
    - id: srcUnit
      type: System.Drawing.GraphicsUnit
      description: "即將加入。"
    - id: imageAttr
      type: System.Drawing.Imaging.ImageAttributes
      description: "即將加入。"
    - id: callback
      type: System.Drawing.Graphics.DrawImageAbort
      description: "即將加入。"
  overload: System.Drawing.Graphics.DrawImage*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)
  id: DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawImage(Image,Rectangle,Single,Single,Single,Single,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort)
  nameWithType: Graphics.DrawImage(Image,Rectangle,Single,Single,Single,Single,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort)
  fullName: System.Drawing.Graphics.DrawImage(Image,Rectangle,Single,Single,Single,Single,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void DrawImage (System.Drawing.Image image, System.Drawing.Rectangle destRect, float srcX, float srcY, float srcWidth, float srcHeight, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Imaging.ImageAttributes imageAttrs, System.Drawing.Graphics.DrawImageAbort callback);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "即將加入。"
    - id: destRect
      type: System.Drawing.Rectangle
      description: "即將加入。"
    - id: srcX
      type: System.Single
      description: "即將加入。"
    - id: srcY
      type: System.Single
      description: "即將加入。"
    - id: srcWidth
      type: System.Single
      description: "即將加入。"
    - id: srcHeight
      type: System.Single
      description: "即將加入。"
    - id: srcUnit
      type: System.Drawing.GraphicsUnit
      description: "即將加入。"
    - id: imageAttrs
      type: System.Drawing.Imaging.ImageAttributes
      description: "即將加入。"
    - id: callback
      type: System.Drawing.Graphics.DrawImageAbort
      description: "即將加入。"
  overload: System.Drawing.Graphics.DrawImage*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)
  id: DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawImage(Image,Rectangle,Int32,Int32,Int32,Int32,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort,IntPtr)
  nameWithType: Graphics.DrawImage(Image,Rectangle,Int32,Int32,Int32,Int32,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort,IntPtr)
  fullName: System.Drawing.Graphics.DrawImage(Image,Rectangle,Int32,Int32,Int32,Int32,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort,IntPtr)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void DrawImage (System.Drawing.Image image, System.Drawing.Rectangle destRect, int srcX, int srcY, int srcWidth, int srcHeight, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Imaging.ImageAttributes imageAttrs, System.Drawing.Graphics.DrawImageAbort callback, IntPtr callbackData);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "即將加入。"
    - id: destRect
      type: System.Drawing.Rectangle
      description: "即將加入。"
    - id: srcX
      type: System.Int32
      description: "即將加入。"
    - id: srcY
      type: System.Int32
      description: "即將加入。"
    - id: srcWidth
      type: System.Int32
      description: "即將加入。"
    - id: srcHeight
      type: System.Int32
      description: "即將加入。"
    - id: srcUnit
      type: System.Drawing.GraphicsUnit
      description: "即將加入。"
    - id: imageAttrs
      type: System.Drawing.Imaging.ImageAttributes
      description: "即將加入。"
    - id: callback
      type: System.Drawing.Graphics.DrawImageAbort
      description: "即將加入。"
    - id: callbackData
      type: System.IntPtr
      description: "即將加入。"
  overload: System.Drawing.Graphics.DrawImage*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)
  id: DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawImage(Image,Rectangle,Single,Single,Single,Single,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort,IntPtr)
  nameWithType: Graphics.DrawImage(Image,Rectangle,Single,Single,Single,Single,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort,IntPtr)
  fullName: System.Drawing.Graphics.DrawImage(Image,Rectangle,Single,Single,Single,Single,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort,IntPtr)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void DrawImage (System.Drawing.Image image, System.Drawing.Rectangle destRect, float srcX, float srcY, float srcWidth, float srcHeight, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Imaging.ImageAttributes imageAttrs, System.Drawing.Graphics.DrawImageAbort callback, IntPtr callbackData);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "即將加入。"
    - id: destRect
      type: System.Drawing.Rectangle
      description: "即將加入。"
    - id: srcX
      type: System.Single
      description: "即將加入。"
    - id: srcY
      type: System.Single
      description: "即將加入。"
    - id: srcWidth
      type: System.Single
      description: "即將加入。"
    - id: srcHeight
      type: System.Single
      description: "即將加入。"
    - id: srcUnit
      type: System.Drawing.GraphicsUnit
      description: "即將加入。"
    - id: imageAttrs
      type: System.Drawing.Imaging.ImageAttributes
      description: "即將加入。"
    - id: callback
      type: System.Drawing.Graphics.DrawImageAbort
      description: "即將加入。"
    - id: callbackData
      type: System.IntPtr
      description: "即將加入。"
  overload: System.Drawing.Graphics.DrawImage*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Drawing.Point)
  id: DrawImageUnscaled(System.Drawing.Image,System.Drawing.Point)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawImageUnscaled(Image,Point)
  nameWithType: Graphics.DrawImageUnscaled(Image,Point)
  fullName: System.Drawing.Graphics.DrawImageUnscaled(Image,Point)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "將指定的影像繪製於指定位置中使用原始的實體大小。"
  remarks: "<xref:System.Drawing.Image>儲存值，以像素寬度和水平解析度 （每英吋點數） 的值。</xref:System.Drawing.Image> 實體的寬度，以英吋，映像的單位是像素寬度除以水平解析度。 例如，216 像素寬度和水平解析度每 72 英吋的映像有實體 3 英吋的寬度。 類似的備註適用於像素高度和實體的高度。       使用的實體大小，讓映像將會擁有正確的大小是以英吋，不論解析度 （每英吋） 顯示裝置的影像繪製 DrawImageUnscaled 方法。 例如，假設映像有 216 像素寬度和水平解析度 72 每英吋的點數。 如果您呼叫 DrawImageUnscaled 解析度為 96 dpi 的裝置上繪製該映像時，所呈現影像的像素寬度會 (216/72) * 96 = 288。"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates an image from a JPEG file SampImag.jpg in the folder of the example.  \n  \n-   Creates a point at which to draw the upper-left corner of the image.  \n  \n-   Draws the entire image using its physical size.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#64](~/add/codesnippet/cpp/e51ffdca-5554-49de-bd37-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#64](~/add/codesnippet/csharp/e51ffdca-5554-49de-bd37-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#64](~/add/codesnippet/visualbasic/e51ffdca-5554-49de-bd37-_1.vb)]"
  syntax:
    content: public void DrawImageUnscaled (System.Drawing.Image image, System.Drawing.Point point);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "<xref href=&quot;System.Drawing.Image&quot;></xref>若要繪製。"
    - id: point
      type: System.Drawing.Point
      description: "<xref href=&quot;System.Drawing.Point&quot;></xref>結構，指定繪製影像的左上角。"
  overload: System.Drawing.Graphics.DrawImageUnscaled*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>image</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Drawing.Rectangle)
  id: DrawImageUnscaled(System.Drawing.Image,System.Drawing.Rectangle)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawImageUnscaled(Image,Rectangle)
  nameWithType: Graphics.DrawImageUnscaled(Image,Rectangle)
  fullName: System.Drawing.Graphics.DrawImageUnscaled(Image,Rectangle)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "將指定的影像繪製於指定位置中使用原始的實體大小。"
  remarks: "<xref:System.Drawing.Image>儲存值，以像素寬度和水平解析度 （每英吋點數） 的值。</xref:System.Drawing.Image> 實體的寬度，以英吋，映像的單位是像素寬度除以水平解析度。 例如，216 像素寬度和水平解析度每 72 英吋的映像有實體 3 英吋的寬度。 類似的備註適用於像素高度和實體的高度。       使用的實體大小，讓映像將會擁有正確的大小是以英吋，不論解析度 （每英吋） 顯示裝置的影像繪製 DrawImageUnscaled 方法。 例如，假設映像有 216 像素寬度和水平解析度 72 每英吋的點數。 如果您呼叫 DrawImageUnscaled 解析度為 96 dpi 的裝置上繪製該映像時，所呈現影像的像素寬度會 (216/72) * 96 = 288。"
  syntax:
    content: public void DrawImageUnscaled (System.Drawing.Image image, System.Drawing.Rectangle rect);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "<xref href=&quot;System.Drawing.Image&quot;></xref>若要繪製。"
    - id: rect
      type: System.Drawing.Rectangle
      description: "<xref href=&quot;System.Drawing.Rectangle&quot;></xref>指定繪製影像的左上角。 矩形的 X 和 Y 屬性指定左上角。 Width 和 Height 屬性會被忽略。"
  overload: System.Drawing.Graphics.DrawImageUnscaled*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>image</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Int32,System.Int32)
  id: DrawImageUnscaled(System.Drawing.Image,System.Int32,System.Int32)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawImageUnscaled(Image,Int32,Int32)
  nameWithType: Graphics.DrawImageUnscaled(Image,Int32,Int32)
  fullName: System.Drawing.Graphics.DrawImageUnscaled(Image,Int32,Int32)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "指定的影像繪製於座標對所指定的位置使用原始的實體大小。"
  remarks: "<xref:System.Drawing.Image>儲存值，以像素寬度和水平解析度 （每英吋點數） 的值。</xref:System.Drawing.Image> 實體的寬度，以英吋，映像的單位是像素寬度除以水平解析度。 例如，216 像素寬度和水平解析度每 72 英吋的映像有實體 3 英吋的寬度。 類似的備註適用於像素高度和實體的高度。       使用的實體大小，讓映像將會擁有正確的大小是以英吋，不論解析度 （每英吋） 顯示裝置的影像繪製 DrawImageUnscaled 方法。 例如，假設映像有 216 像素寬度和水平解析度 72 每英吋的點數。 如果您呼叫 DrawImageUnscaled 解析度為 96 dpi 的裝置上繪製該映像時，所呈現影像的像素寬度會 (216/72) * 96 = 288。"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates an image from a JPEG file, SampImag.jpg, in the folder of the example.  \n  \n-   Creates a point at which to draw the upper-left corner of the image.  \n  \n-   Draws the entire image using its physical size.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#65](~/add/codesnippet/cpp/979e5b64-1221-4b16-aa62-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#65](~/add/codesnippet/csharp/979e5b64-1221-4b16-aa62-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#65](~/add/codesnippet/visualbasic/979e5b64-1221-4b16-aa62-_1.vb)]"
  syntax:
    content: public void DrawImageUnscaled (System.Drawing.Image image, int x, int y);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "<xref href=&quot;System.Drawing.Image&quot;></xref>若要繪製。"
    - id: x
      type: System.Int32
      description: "繪製影像左上角的 x 座標。"
    - id: y
      type: System.Int32
      description: "繪製影像左上角的 y 座標。"
  overload: System.Drawing.Graphics.DrawImageUnscaled*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>image</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Int32,System.Int32,System.Int32,System.Int32)
  id: DrawImageUnscaled(System.Drawing.Image,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawImageUnscaled(Image,Int32,Int32,Int32,Int32)
  nameWithType: Graphics.DrawImageUnscaled(Image,Int32,Int32,Int32,Int32)
  fullName: System.Drawing.Graphics.DrawImageUnscaled(Image,Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "將指定的影像繪製於指定位置中使用原始的實體大小。"
  remarks: "<xref:System.Drawing.Image>儲存值，以像素寬度和水平解析度 （每英吋點數） 的值。</xref:System.Drawing.Image> 實體的寬度，以英吋，映像的單位是像素寬度除以水平解析度。 例如，216 像素寬度和水平解析度每 72 英吋的映像有實體 3 英吋的寬度。 類似的備註適用於像素高度和實體的高度。       使用的實體大小，讓映像將會擁有正確的大小是以英吋，不論解析度 （每英吋） 顯示裝置的影像繪製 DrawImageUnscaled 方法。 例如，假設映像有 216 像素寬度和水平解析度 72 每英吋的點數。 如果您呼叫 DrawImageUnscaled 解析度為 96 dpi 的裝置上繪製該映像時，所呈現影像的像素寬度會 (216/72) * 96 = 288。"
  syntax:
    content: public void DrawImageUnscaled (System.Drawing.Image image, int x, int y, int width, int height);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "<xref href=&quot;System.Drawing.Image&quot;></xref>若要繪製。"
    - id: x
      type: System.Int32
      description: "繪製影像左上角的 x 座標。"
    - id: y
      type: System.Int32
      description: "繪製影像左上角的 y 座標。"
    - id: width
      type: System.Int32
      description: "未使用。"
    - id: height
      type: System.Int32
      description: "未使用。"
  overload: System.Drawing.Graphics.DrawImageUnscaled*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>image</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawImageUnscaledAndClipped(System.Drawing.Image,System.Drawing.Rectangle)
  id: DrawImageUnscaledAndClipped(System.Drawing.Image,System.Drawing.Rectangle)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawImageUnscaledAndClipped(Image,Rectangle)
  nameWithType: Graphics.DrawImageUnscaledAndClipped(Image,Rectangle)
  fullName: System.Drawing.Graphics.DrawImageUnscaledAndClipped(Image,Rectangle)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "繪製指定的影像，而不會縮放和裁剪，如有必要，以符合指定的矩形中。"
  remarks: ''
  example:
  - "The following example demonstrates how to use the DrawImageUnscaledAndClipped method. To run this example, paste it into a Windows Form. Handle the form’s <xref:System.Windows.Forms.Control.Paint> event and call the `DrawImageUnscaled` method from the <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-vb[System.Drawing.MiscWhidbeySnippets#8](~/add/codesnippet/visualbasic/8e586d21-d392-4457-b1a8-_1.vb)]\n [!code-cs[System.Drawing.MiscWhidbeySnippets#8](~/add/codesnippet/csharp/8e586d21-d392-4457-b1a8-_1.cs)]"
  syntax:
    content: public void DrawImageUnscaledAndClipped (System.Drawing.Image image, System.Drawing.Rectangle rect);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "<xref href=&quot;System.Drawing.Image&quot;> </xref>繪製。"
    - id: rect
      type: System.Drawing.Rectangle
      description: "<xref href=&quot;System.Drawing.Rectangle&quot;> </xref>要在其中繪製影像。"
  overload: System.Drawing.Graphics.DrawImageUnscaledAndClipped*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>image</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Drawing.Point,System.Drawing.Point)
  id: DrawLine(System.Drawing.Pen,System.Drawing.Point,System.Drawing.Point)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawLine(Pen,Point,Point)
  nameWithType: Graphics.DrawLine(Pen,Point,Point)
  fullName: System.Drawing.Graphics.DrawLine(Pen,Point,Point)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "繪製連接兩個直線<xref href=&quot;System.Drawing.Point&quot;></xref>結構。"
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a black pen.  \n  \n-   Creates points for the endpoints of the line.  \n  \n-   Draws the line to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#66](~/add/codesnippet/cpp/7a5f2393-b88a-42cd-943c-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#66](~/add/codesnippet/csharp/7a5f2393-b88a-42cd-943c-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#66](~/add/codesnippet/visualbasic/7a5f2393-b88a-42cd-943c-_1.vb)]"
  syntax:
    content: public void DrawLine (System.Drawing.Pen pen, System.Drawing.Point pt1, System.Drawing.Point pt2);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>決定色彩、 寬度和線條樣式。"
    - id: pt1
      type: System.Drawing.Point
      description: "<xref href=&quot;System.Drawing.Point&quot;></xref>結構，表示要連接的第一個點。"
    - id: pt2
      type: System.Drawing.Point
      description: "<xref href=&quot;System.Drawing.Point&quot;></xref>結構，表示要連接的第二個點。"
  overload: System.Drawing.Graphics.DrawLine*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Drawing.PointF,System.Drawing.PointF)
  id: DrawLine(System.Drawing.Pen,System.Drawing.PointF,System.Drawing.PointF)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawLine(Pen,PointF,PointF)
  nameWithType: Graphics.DrawLine(Pen,PointF,PointF)
  fullName: System.Drawing.Graphics.DrawLine(Pen,PointF,PointF)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "繪製連接兩個直線<xref href=&quot;System.Drawing.PointF&quot;></xref>結構。"
  remarks: "這個方法會繪製連接兩個點所指定的線條`pt1`和 p`2`參數。"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a black pen.  \n  \n-   Creates points for the endpoints of the line.  \n  \n-   Draws the line to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#67](~/add/codesnippet/cpp/eafdb748-e1a5-46b1-a524-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#67](~/add/codesnippet/csharp/eafdb748-e1a5-46b1-a524-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#67](~/add/codesnippet/visualbasic/eafdb748-e1a5-46b1-a524-_1.vb)]"
  syntax:
    content: public void DrawLine (System.Drawing.Pen pen, System.Drawing.PointF pt1, System.Drawing.PointF pt2);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>決定色彩、 寬度和線條樣式。"
    - id: pt1
      type: System.Drawing.PointF
      description: "<xref href=&quot;System.Drawing.PointF&quot;></xref>結構，表示要連接的第一個點。"
    - id: pt2
      type: System.Drawing.PointF
      description: "<xref href=&quot;System.Drawing.PointF&quot;></xref>結構，表示要連接的第二個點。"
  overload: System.Drawing.Graphics.DrawLine*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)
  id: DrawLine(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawLine(Pen,Int32,Int32,Int32,Int32)
  nameWithType: Graphics.DrawLine(Pen,Int32,Int32,Int32,Int32)
  fullName: System.Drawing.Graphics.DrawLine(Pen,Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "繪製連接由座標對所指定的兩個點之直線。"
  remarks: "這個方法會繪製連接兩個點所指定的線條`x1`， `y1`， `x2`，和`y2`參數。"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a black pen.  \n  \n-   Creates the coordinates of the endpoints of the line.  \n  \n-   Draws the line to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#68](~/add/codesnippet/cpp/0cb21819-9d21-4c0c-b7b3-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#68](~/add/codesnippet/csharp/0cb21819-9d21-4c0c-b7b3-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#68](~/add/codesnippet/visualbasic/0cb21819-9d21-4c0c-b7b3-_1.vb)]"
  syntax:
    content: public void DrawLine (System.Drawing.Pen pen, int x1, int y1, int x2, int y2);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>決定色彩、 寬度和線條樣式。"
    - id: x1
      type: System.Int32
      description: "第一個點的 x 座標。"
    - id: y1
      type: System.Int32
      description: "第一個點的 y 座標。"
    - id: x2
      type: System.Int32
      description: "第二個點的 x 座標。"
    - id: y2
      type: System.Int32
      description: "第二個點的 y 座標。"
  overload: System.Drawing.Graphics.DrawLine*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)
  id: DrawLine(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawLine(Pen,Single,Single,Single,Single)
  nameWithType: Graphics.DrawLine(Pen,Single,Single,Single,Single)
  fullName: System.Drawing.Graphics.DrawLine(Pen,Single,Single,Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "繪製連接由座標對所指定的兩個點之直線。"
  remarks: "這個方法會繪製連接兩個點所指定的線條`x1`， `y1`， `x2`，和`y2`參數。"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a black pen.  \n  \n-   Creates the coordinates of the endpoints of the line.  \n  \n-   Draws the line to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#69](~/add/codesnippet/cpp/cd23e492-13d6-4787-a27b-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#69](~/add/codesnippet/csharp/cd23e492-13d6-4787-a27b-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#69](~/add/codesnippet/visualbasic/cd23e492-13d6-4787-a27b-_1.vb)]"
  syntax:
    content: public void DrawLine (System.Drawing.Pen pen, float x1, float y1, float x2, float y2);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>決定色彩、 寬度和線條樣式。"
    - id: x1
      type: System.Single
      description: "第一個點的 x 座標。"
    - id: y1
      type: System.Single
      description: "第一個點的 y 座標。"
    - id: x2
      type: System.Single
      description: "第二個點的 x 座標。"
    - id: y2
      type: System.Single
      description: "第二個點的 y 座標。"
  overload: System.Drawing.Graphics.DrawLine*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawLines(System.Drawing.Pen,System.Drawing.Point[])
  id: DrawLines(System.Drawing.Pen,System.Drawing.Point[])
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawLines(Pen,Point[])
  nameWithType: Graphics.DrawLines(Pen,Point[])
  fullName: System.Drawing.Graphics.DrawLines(Pen,Point[])
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "繪製一系列連接的陣列的直線線段<xref href=&quot;System.Drawing.Point&quot;></xref>結構。"
  remarks: "這個方法會繪製一系列的連接線的結束點陣列。 陣列中的前兩個點指定的第一行。 每個額外的點指定直線線段的起點是先前的直線線段的結束點的結束。"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a black pen.  \n  \n-   Creates an array of points of segments of the line.  \n  \n-   Draws the connected line segments to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#70](~/add/codesnippet/cpp/m-system.drawing.graphic_5_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#70](~/add/codesnippet/csharp/m-system.drawing.graphic_5_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#70](~/add/codesnippet/visualbasic/m-system.drawing.graphic_5_1.vb)]"
  syntax:
    content: public void DrawLines (System.Drawing.Pen pen, System.Drawing.Point[] points);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>決定色彩、 寬度和樣式的直線線段。"
    - id: points
      type: System.Drawing.Point[]
      description: "陣列<xref href=&quot;System.Drawing.Point&quot;> </xref> ，此結構表示要連接的點。"
  overload: System.Drawing.Graphics.DrawLines*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>points</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawLines(System.Drawing.Pen,System.Drawing.PointF[])
  id: DrawLines(System.Drawing.Pen,System.Drawing.PointF[])
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawLines(Pen,PointF[])
  nameWithType: Graphics.DrawLines(Pen,PointF[])
  fullName: System.Drawing.Graphics.DrawLines(Pen,PointF[])
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "繪製一系列連接的陣列的直線線段<xref href=&quot;System.Drawing.PointF&quot;></xref>結構。"
  remarks: "這個方法會繪製一系列的連接線的結束點陣列。 陣列中的前兩個點指定的第一行。 每個額外的點指定直線線段的起點是先前的直線線段的結束點的結束。"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Code creates a black pen.  \n  \n-   Creates an array of points of segments of the line.  \n  \n-   Draws the connected line segments to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#71](~/add/codesnippet/cpp/m-system.drawing.graphic_27_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#71](~/add/codesnippet/csharp/m-system.drawing.graphic_27_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#71](~/add/codesnippet/visualbasic/m-system.drawing.graphic_27_1.vb)]"
  syntax:
    content: public void DrawLines (System.Drawing.Pen pen, System.Drawing.PointF[] points);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>決定色彩、 寬度和樣式的直線線段。"
    - id: points
      type: System.Drawing.PointF[]
      description: "陣列<xref href=&quot;System.Drawing.PointF&quot;> </xref> ，此結構表示要連接的點。"
  overload: System.Drawing.Graphics.DrawLines*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>points</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawPath(System.Drawing.Pen,System.Drawing.Drawing2D.GraphicsPath)
  id: DrawPath(System.Drawing.Pen,System.Drawing.Drawing2D.GraphicsPath)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawPath(Pen,GraphicsPath)
  nameWithType: Graphics.DrawPath(Pen,GraphicsPath)
  fullName: System.Drawing.Graphics.DrawPath(Pen,GraphicsPath)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Draws a <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;></xref>."
  remarks: "圖形內容中目前的轉換套用至<xref:System.Drawing.Drawing2D.GraphicsPath>繪製之前。</xref:System.Drawing.Drawing2D.GraphicsPath>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a graphics path object and adds an ellipse to it.  \n  \n-   Creates a black pen.  \n  \n-   Draws the graphics path to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#72](~/add/codesnippet/cpp/a718a784-9a44-4465-a94a-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#72](~/add/codesnippet/csharp/a718a784-9a44-4465-a94a-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#72](~/add/codesnippet/visualbasic/a718a784-9a44-4465-a94a-_1.vb)]"
  syntax:
    content: public void DrawPath (System.Drawing.Pen pen, System.Drawing.Drawing2D.GraphicsPath path);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>決定色彩、 寬度和樣式的路徑。"
    - id: path
      type: System.Drawing.Drawing2D.GraphicsPath
      description: "<xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;></xref>若要繪製。"
  overload: System.Drawing.Graphics.DrawPath*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>path</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Drawing.Rectangle,System.Single,System.Single)
  id: DrawPie(System.Drawing.Pen,System.Drawing.Rectangle,System.Single,System.Single)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawPie(Pen,Rectangle,Single,Single)
  nameWithType: Graphics.DrawPie(Pen,Rectangle,Single,Single)
  fullName: System.Drawing.Graphics.DrawPie(Pen,Rectangle,Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "繪製由橢圓形所定義的派形<xref href=&quot;System.Drawing.Rectangle&quot;></xref>結構和兩條放射線。"
  remarks: "這個方法會繪製由橢圓形和兩條放射線交集的弧形弧線的端點定義的派形。 周框定義橢圓形。 包含的兩條放射線所定義的派形`startAngle`和`sweepAngle`參數，以及這些放射線橢圓形交集之間的弧度。       如果`sweepAngle`參數大於 360 度或小於-360 度，它會被視為分別是 360 度或-360 度。"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a black pen.  \n  \n-   Creates a rectangle that bounds a complete ellipse.  \n  \n-   Defines the angles at which to start drawing (relative to the x axis) and through which to draw (both in a clockwise direction).  \n  \n-   Draws the pie segment to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#73](~/add/codesnippet/cpp/1a04a061-dceb-4fd4-b376-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#73](~/add/codesnippet/csharp/1a04a061-dceb-4fd4-b376-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#73](~/add/codesnippet/visualbasic/1a04a061-dceb-4fd4-b376-_1.vb)]"
  syntax:
    content: public void DrawPie (System.Drawing.Pen pen, System.Drawing.Rectangle rect, float startAngle, float sweepAngle);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>決定色彩、 寬度和樣式的派形。"
    - id: rect
      type: System.Drawing.Rectangle
      description: "<xref href=&quot;System.Drawing.Rectangle&quot;></xref>結構，表示定義派形的來源的橢圓形之周框。"
    - id: startAngle
      type: System.Single
      description: "角度測量派形的順時針方向從 x 軸到第一個邊的角度。"
    - id: sweepAngle
      type: System.Single
      description: "以順時針方向從的度為單位的角度`startAngle`參數到派形的第二個邊。"
  overload: System.Drawing.Graphics.DrawPie*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Drawing.RectangleF,System.Single,System.Single)
  id: DrawPie(System.Drawing.Pen,System.Drawing.RectangleF,System.Single,System.Single)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawPie(Pen,RectangleF,Single,Single)
  nameWithType: Graphics.DrawPie(Pen,RectangleF,Single,Single)
  fullName: System.Drawing.Graphics.DrawPie(Pen,RectangleF,Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "繪製由橢圓形所定義的派形<xref href=&quot;System.Drawing.RectangleF&quot;></xref>結構和兩條放射線。"
  remarks: "這個方法會繪製由橢圓形和兩條放射線交集的弧形弧線的端點定義的派形。 周框定義橢圓形。 包含的兩條放射線所定義的派形`startAngle`和`sweepAngle`參數，以及這些放射線橢圓形交集之間的弧度。       如果`sweepAngle`參數大於 360 度或小於-360 度，它會被視為分別是 360 度或-360 度。"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a black pen.  \n  \n-   Creates a rectangle that bounds a complete ellipse.  \n  \n-   Defines the angles at which to start drawing (relative to the x axis) and through which to draw (both in a clockwise direction).  \n  \n-   Draws the pie segment to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#74](~/add/codesnippet/cpp/2cc07759-8996-434e-ab19-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#74](~/add/codesnippet/csharp/2cc07759-8996-434e-ab19-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#74](~/add/codesnippet/visualbasic/2cc07759-8996-434e-ab19-_1.vb)]"
  syntax:
    content: public void DrawPie (System.Drawing.Pen pen, System.Drawing.RectangleF rect, float startAngle, float sweepAngle);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>決定色彩、 寬度和樣式的派形。"
    - id: rect
      type: System.Drawing.RectangleF
      description: "<xref href=&quot;System.Drawing.RectangleF&quot;></xref>結構，表示定義派形的來源的橢圓形之周框。"
    - id: startAngle
      type: System.Single
      description: "角度測量派形的順時針方向從 x 軸到第一個邊的角度。"
    - id: sweepAngle
      type: System.Single
      description: "以順時針方向從的度為單位的角度`startAngle`參數到派形的第二個邊。"
  overload: System.Drawing.Graphics.DrawPie*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: DrawPie(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawPie(Pen,Int32,Int32,Int32,Int32,Int32,Int32)
  nameWithType: Graphics.DrawPie(Pen,Int32,Int32,Int32,Int32,Int32,Int32)
  fullName: System.Drawing.Graphics.DrawPie(Pen,Int32,Int32,Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "繪製由座標對、 寬度、 高度和兩條放射線所指定的橢圓形所定義的派形。"
  remarks: "這個方法會繪製由橢圓形和兩條放射線交集的弧形弧線的端點定義的派形。 所描述的週框定義橢圓形`x`， `y`， `width`，和`height`參數。 包含的兩條放射線所定義的派形`startAngle`和`sweepAngle`參數，以及這些放射線橢圓形交集之間的弧度。       如果`sweepAngle`參數大於 360 度或小於-360 度，它會被視為分別是 360 度或-360 度。"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a black pen.  \n  \n-   Creates the position and size of a rectangle that bounds a complete ellipse.  \n  \n-   Defines the angles at which to start drawing (relative to the x axis) and through which to draw (both in a clockwise direction).  \n  \n-   Draws the pie shape to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#75](~/add/codesnippet/cpp/efda9570-fb8e-43e9-9bc9-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#75](~/add/codesnippet/csharp/efda9570-fb8e-43e9-9bc9-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#75](~/add/codesnippet/visualbasic/efda9570-fb8e-43e9-9bc9-_1.vb)]"
  syntax:
    content: public void DrawPie (System.Drawing.Pen pen, int x, int y, int width, int height, int startAngle, int sweepAngle);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>決定色彩、 寬度和樣式的派形。"
    - id: x
      type: System.Int32
      description: "週框定義派形的來源的橢圓形的矩形的左上角的 x 座標。"
    - id: y
      type: System.Int32
      description: "週框定義派形的來源的橢圓形的矩形的左上角的 y 座標。"
    - id: width
      type: System.Int32
      description: "週框定義派形的來源的橢圓形的矩形的寬度。"
    - id: height
      type: System.Int32
      description: "週框定義派形的來源的橢圓形的矩形的高度。"
    - id: startAngle
      type: System.Int32
      description: "角度測量派形的順時針方向從 x 軸到第一個邊的角度。"
    - id: sweepAngle
      type: System.Int32
      description: "以順時針方向從的度為單位的角度`startAngle`參數到派形的第二個邊。"
  overload: System.Drawing.Graphics.DrawPie*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  id: DrawPie(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawPie(Pen,Single,Single,Single,Single,Single,Single)
  nameWithType: Graphics.DrawPie(Pen,Single,Single,Single,Single,Single,Single)
  fullName: System.Drawing.Graphics.DrawPie(Pen,Single,Single,Single,Single,Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "繪製由座標對、 寬度、 高度和兩條放射線所指定的橢圓形所定義的派形。"
  remarks: "這個方法會繪製由橢圓形和兩條放射線交集的弧形弧線的端點定義的派形。 所描述的週框定義橢圓形`x`， `y`， `width`，和`height`參數。 包含的兩條放射線所定義的派形`startAngle`和`sweepAngle`參數，以及這些放射線橢圓形交集之間的弧度。       如果`sweepAngle`參數大於 360 度或小於-360 度，它會被視為分別是 360 度或-360 度。"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a black pen.  \n  \n-   Creates the position and size of a rectangle that bounds a complete ellipse.  \n  \n-   Defines the angles at which to start drawing (relative to the x axis) and through which to draw (both in a clockwise direction).  \n  \n-   Draws the pie segment to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#76](~/add/codesnippet/cpp/91960442-0c73-4809-a8b7-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#76](~/add/codesnippet/csharp/91960442-0c73-4809-a8b7-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#76](~/add/codesnippet/visualbasic/91960442-0c73-4809-a8b7-_1.vb)]"
  syntax:
    content: public void DrawPie (System.Drawing.Pen pen, float x, float y, float width, float height, float startAngle, float sweepAngle);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>決定色彩、 寬度和樣式的派形。"
    - id: x
      type: System.Single
      description: "週框定義派形的來源的橢圓形的矩形的左上角的 x 座標。"
    - id: y
      type: System.Single
      description: "週框定義派形的來源的橢圓形的矩形的左上角的 y 座標。"
    - id: width
      type: System.Single
      description: "週框定義派形的來源的橢圓形的矩形的寬度。"
    - id: height
      type: System.Single
      description: "週框定義派形的來源的橢圓形的矩形的高度。"
    - id: startAngle
      type: System.Single
      description: "角度測量派形的順時針方向從 x 軸到第一個邊的角度。"
    - id: sweepAngle
      type: System.Single
      description: "以順時針方向從的度為單位的角度`startAngle`參數到派形的第二個邊。"
  overload: System.Drawing.Graphics.DrawPie*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawPolygon(System.Drawing.Pen,System.Drawing.Point[])
  id: DrawPolygon(System.Drawing.Pen,System.Drawing.Point[])
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawPolygon(Pen,Point[])
  nameWithType: Graphics.DrawPolygon(Pen,Point[])
  fullName: System.Drawing.Graphics.DrawPolygon(Pen,Point[])
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "繪製的陣列所定義的多邊形<xref href=&quot;System.Drawing.Point&quot;></xref>結構。"
  remarks: "陣列中的兩個連續點的每一對指定的側邊的多邊形。 此外，如果不重疊的最後一個點和陣列的第一個點，它們會指定最後一個的側邊的多邊形。"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a black pen.  \n  \n-   Creates an array of seven points for the vertices of the polygon.  \n  \n-   Draws the polygon to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#78](~/add/codesnippet/cpp/m-system.drawing.graphic_24_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#78](~/add/codesnippet/csharp/m-system.drawing.graphic_24_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#78](~/add/codesnippet/visualbasic/m-system.drawing.graphic_24_1.vb)]"
  syntax:
    content: public void DrawPolygon (System.Drawing.Pen pen, System.Drawing.Point[] points);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>決定色彩、 寬度和樣式的多邊形。"
    - id: points
      type: System.Drawing.Point[]
      description: "陣列<xref href=&quot;System.Drawing.Point&quot;></xref>結構，表示多邊形的頂點。"
  overload: System.Drawing.Graphics.DrawPolygon*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawPolygon(System.Drawing.Pen,System.Drawing.PointF[])
  id: DrawPolygon(System.Drawing.Pen,System.Drawing.PointF[])
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawPolygon(Pen,PointF[])
  nameWithType: Graphics.DrawPolygon(Pen,PointF[])
  fullName: System.Drawing.Graphics.DrawPolygon(Pen,PointF[])
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "繪製的陣列所定義的多邊形<xref href=&quot;System.Drawing.PointF&quot;></xref>結構。"
  remarks: "陣列中的兩個連續點的每一對指定的側邊的多邊形。 此外，如果最後一個點和點陣列的第一個不一致，它們會指定最後一個的側邊的多邊形。"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a black pen.  \n  \n-   Creates an array of seven points for the vertices of the polygon.  \n  \n-   Draws the polygon to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#77](~/add/codesnippet/cpp/16b9f60c-1099-497e-96b6-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#77](~/add/codesnippet/csharp/16b9f60c-1099-497e-96b6-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#77](~/add/codesnippet/visualbasic/16b9f60c-1099-497e-96b6-_1.vb)]"
  syntax:
    content: public void DrawPolygon (System.Drawing.Pen pen, System.Drawing.PointF[] points);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>決定色彩、 寬度和樣式的多邊形。"
    - id: points
      type: System.Drawing.PointF[]
      description: "陣列<xref href=&quot;System.Drawing.PointF&quot;></xref>結構，表示多邊形的頂點。"
  overload: System.Drawing.Graphics.DrawPolygon*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>points</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawRectangle(System.Drawing.Pen,System.Drawing.Rectangle)
  id: DrawRectangle(System.Drawing.Pen,System.Drawing.Rectangle)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawRectangle(Pen,Rectangle)
  nameWithType: Graphics.DrawRectangle(Pen,Rectangle)
  fullName: System.Drawing.Graphics.DrawRectangle(Pen,Rectangle)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "繪製由指定的矩形<xref href=&quot;System.Drawing.Rectangle&quot;></xref>結構。"
  remarks: "如需如何繪製<xref:System.Drawing.RectangleF>，請參閱[DrawRectangles (畫筆、 RectangleF\\[\\])](assetId:///M:System.Drawing.Graphics.DrawRectangles(System.Drawing.Pen,System.Drawing.RectangleF[])?qualifyHint=False&autoUpgrade=False)。</xref:System.Drawing.RectangleF>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a black pen.  \n  \n-   Creates a rectangle.  \n  \n-   Draws the rectangle to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#79](~/add/codesnippet/cpp/7220a29d-c2cf-4eb5-a772-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#79](~/add/codesnippet/csharp/7220a29d-c2cf-4eb5-a772-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#79](~/add/codesnippet/visualbasic/7220a29d-c2cf-4eb5-a772-_1.vb)]"
  syntax:
    content: public void DrawRectangle (System.Drawing.Pen pen, System.Drawing.Rectangle rect);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "A <xref href=&quot;System.Drawing.Pen&quot;> </xref> ，決定色彩、 寬度和樣式的矩形。"
    - id: rect
      type: System.Drawing.Rectangle
      description: "A <xref href=&quot;System.Drawing.Rectangle&quot;> </xref>結構，表示要繪製的矩形。"
  overload: System.Drawing.Graphics.DrawRectangle*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawRectangle(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)
  id: DrawRectangle(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawRectangle(Pen,Int32,Int32,Int32,Int32)
  nameWithType: Graphics.DrawRectangle(Pen,Int32,Int32,Int32,Int32)
  fullName: System.Drawing.Graphics.DrawRectangle(Pen,Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "繪製由座標對、 寬度和高度指定的矩形。"
  remarks: "如需如何繪製<xref:System.Drawing.RectangleF>，請參閱[DrawRectangles (畫筆、 RectangleF\\[\\])](assetId:///M:System.Drawing.Graphics.DrawRectangles(System.Drawing.Pen,System.Drawing.RectangleF[])?qualifyHint=False&autoUpgrade=False)。</xref:System.Drawing.RectangleF>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a black pen.  \n  \n-   Creates the position and size of a rectangle.  \n  \n-   Draws the rectangle to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#80](~/add/codesnippet/cpp/7deab914-35e6-41bb-8525-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#80](~/add/codesnippet/csharp/7deab914-35e6-41bb-8525-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#80](~/add/codesnippet/visualbasic/7deab914-35e6-41bb-8525-_1.vb)]"
  syntax:
    content: public void DrawRectangle (System.Drawing.Pen pen, int x, int y, int width, int height);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>決定色彩、 寬度和樣式的矩形。"
    - id: x
      type: System.Int32
      description: "要繪製的矩形的左上角 x 座標。"
    - id: y
      type: System.Int32
      description: "要繪製的矩形的左上角 y 座標。"
    - id: width
      type: System.Int32
      description: "要繪製的矩形的寬度。"
    - id: height
      type: System.Int32
      description: "要繪製的矩形的高度。"
  overload: System.Drawing.Graphics.DrawRectangle*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawRectangle(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)
  id: DrawRectangle(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawRectangle(Pen,Single,Single,Single,Single)
  nameWithType: Graphics.DrawRectangle(Pen,Single,Single,Single,Single)
  fullName: System.Drawing.Graphics.DrawRectangle(Pen,Single,Single,Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "繪製由座標對、 寬度和高度指定的矩形。"
  remarks: "如需如何繪製<xref:System.Drawing.RectangleF>，請參閱[DrawRectangles (畫筆、 RectangleF\\[\\])](assetId:///M:System.Drawing.Graphics.DrawRectangles(System.Drawing.Pen,System.Drawing.RectangleF[])?qualifyHint=False&autoUpgrade=False)。</xref:System.Drawing.RectangleF>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a black pen.  \n  \n-   Creates the position and size of a rectangle.  \n  \n-   Draws the rectangle to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#81](~/add/codesnippet/cpp/02312e17-0d5f-4ea1-a1de-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#81](~/add/codesnippet/csharp/02312e17-0d5f-4ea1-a1de-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#81](~/add/codesnippet/visualbasic/02312e17-0d5f-4ea1-a1de-_1.vb)]"
  syntax:
    content: public void DrawRectangle (System.Drawing.Pen pen, float x, float y, float width, float height);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "A <xref href=&quot;System.Drawing.Pen&quot;> </xref> ，決定色彩、 寬度和樣式的矩形。"
    - id: x
      type: System.Single
      description: "要繪製的矩形的左上角 x 座標。"
    - id: y
      type: System.Single
      description: "要繪製的矩形的左上角 y 座標。"
    - id: width
      type: System.Single
      description: "要繪製的矩形的寬度。"
    - id: height
      type: System.Single
      description: "要繪製的矩形的高度。"
  overload: System.Drawing.Graphics.DrawRectangle*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawRectangles(System.Drawing.Pen,System.Drawing.Rectangle[])
  id: DrawRectangles(System.Drawing.Pen,System.Drawing.Rectangle[])
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawRectangles(Pen,Rectangle[])
  nameWithType: Graphics.DrawRectangles(Pen,Rectangle[])
  fullName: System.Drawing.Graphics.DrawRectangles(Pen,Rectangle[])
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "繪製矩形所指定的一系列<xref href=&quot;System.Drawing.Rectangle&quot;></xref>結構。"
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a black pen.  \n  \n-   Creates an array of three rectangles.  \n  \n-   Draws the rectangles to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#82](~/add/codesnippet/cpp/fbc2bd3d-0796-4b81-9906-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#82](~/add/codesnippet/csharp/fbc2bd3d-0796-4b81-9906-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#82](~/add/codesnippet/visualbasic/fbc2bd3d-0796-4b81-9906-_1.vb)]"
  syntax:
    content: public void DrawRectangles (System.Drawing.Pen pen, System.Drawing.Rectangle[] rects);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>決定色彩、 寬度和樣式的矩形外框。"
    - id: rects
      type: System.Drawing.Rectangle[]
      description: "陣列<xref href=&quot;System.Drawing.Rectangle&quot;></xref>結構，表示要繪製的矩形。"
  overload: System.Drawing.Graphics.DrawRectangles*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>rects</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>rects</code>為零長度陣列。"
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawRectangles(System.Drawing.Pen,System.Drawing.RectangleF[])
  id: DrawRectangles(System.Drawing.Pen,System.Drawing.RectangleF[])
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawRectangles(Pen,RectangleF[])
  nameWithType: Graphics.DrawRectangles(Pen,RectangleF[])
  fullName: System.Drawing.Graphics.DrawRectangles(Pen,RectangleF[])
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "繪製矩形所指定的一系列<xref href=&quot;System.Drawing.RectangleF&quot;></xref>結構。"
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a black pen.  \n  \n-   Creates an array of three rectangles.  \n  \n-   Draws the rectangles to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#83](~/add/codesnippet/cpp/6724fe05-90a2-4c2b-9273-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#83](~/add/codesnippet/csharp/6724fe05-90a2-4c2b-9273-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#83](~/add/codesnippet/visualbasic/6724fe05-90a2-4c2b-9273-_1.vb)]"
  syntax:
    content: public void DrawRectangles (System.Drawing.Pen pen, System.Drawing.RectangleF[] rects);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>決定色彩、 寬度和樣式的矩形外框。"
    - id: rects
      type: System.Drawing.RectangleF[]
      description: "陣列<xref href=&quot;System.Drawing.RectangleF&quot;></xref>結構，表示要繪製的矩形。"
  overload: System.Drawing.Graphics.DrawRectangles*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>rects</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>rects</code>為零長度陣列。"
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.PointF)
  id: DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.PointF)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawString(String,Font,Brush,PointF)
  nameWithType: Graphics.DrawString(String,Font,Brush,PointF)
  fullName: System.Drawing.Graphics.DrawString(String,Font,Brush,PointF)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "指定的文字字串繪製於指定的位置，以指定<xref href=&quot;System.Drawing.Brush&quot;></xref>和<xref href=&quot;System.Drawing.Font&quot;></xref>物件。"
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a text string to draw.  \n  \n-   Defines the font as Arial (16pt).  \n  \n-   Creates a solid, black brush to draw with.  \n  \n-   Creates a point for the upper-left corner at which to draw the text.  \n  \n-   Draws the string to the screen using the font, brush, and destination point.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#84](~/add/codesnippet/cpp/e8b9f7ba-fcb1-40c1-b944-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#84](~/add/codesnippet/csharp/e8b9f7ba-fcb1-40c1-b944-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#84](~/add/codesnippet/visualbasic/e8b9f7ba-fcb1-40c1-b944-_1.vb)]"
  syntax:
    content: public void DrawString (string s, System.Drawing.Font font, System.Drawing.Brush brush, System.Drawing.PointF point);
    parameters:
    - id: s
      type: System.String
      description: "要繪製的字串。"
    - id: font
      type: System.Drawing.Font
      description: "<xref href=&quot;System.Drawing.Font&quot;></xref>定義字串的文字格式。"
    - id: brush
      type: System.Drawing.Brush
      description: "<xref href=&quot;System.Drawing.Brush&quot;></xref>決定的色彩和紋理繪製文字。"
    - id: point
      type: System.Drawing.PointF
      description: "<xref href=&quot;System.Drawing.PointF&quot;></xref>結構，指定繪製文字左上角。"
  overload: System.Drawing.Graphics.DrawString*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>brush</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>s</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF)
  id: DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawString(String,Font,Brush,RectangleF)
  nameWithType: Graphics.DrawString(String,Font,Brush,RectangleF)
  fullName: System.Drawing.Graphics.DrawString(String,Font,Brush,RectangleF)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "將指定的文字字串繪製在指定的矩形，具有指定<xref href=&quot;System.Drawing.Brush&quot;></xref>和<xref href=&quot;System.Drawing.Font&quot;></xref>物件。"
  remarks: "所代表的文字`s`參數所表示的矩形內繪製`layoutRectangle`參數。 如果文字不符合置於矩形內，它會截斷在最接近的字。 若要進一步將字串置於矩形內繪製的方式來操作使用<xref:System.Drawing.Graphics.DrawString%2A>多載會採用<xref:System.Drawing.StringFormat>.</xref:System.Drawing.StringFormat> </xref:System.Drawing.Graphics.DrawString%2A>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a text string to draw.  \n  \n-   Defines the font as Arial (16pt).  \n  \n-   Creates a solid, black brush to draw with.  \n  \n-   Creates a rectangle in which to draw the text.  \n  \n-   Draws the rectangle to the screen.  \n  \n-   Draws the string to the screen using the font, brush, and destination rectangle.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#86](~/add/codesnippet/cpp/88dcbdf3-31ac-495d-b92e-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#86](~/add/codesnippet/csharp/88dcbdf3-31ac-495d-b92e-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#86](~/add/codesnippet/visualbasic/88dcbdf3-31ac-495d-b92e-_1.vb)]"
  syntax:
    content: public void DrawString (string s, System.Drawing.Font font, System.Drawing.Brush brush, System.Drawing.RectangleF layoutRectangle);
    parameters:
    - id: s
      type: System.String
      description: "要繪製的字串。"
    - id: font
      type: System.Drawing.Font
      description: "<xref href=&quot;System.Drawing.Font&quot;></xref>定義字串的文字格式。"
    - id: brush
      type: System.Drawing.Brush
      description: "<xref href=&quot;System.Drawing.Brush&quot;></xref>決定的色彩和紋理繪製文字。"
    - id: layoutRectangle
      type: System.Drawing.RectangleF
      description: "<xref href=&quot;System.Drawing.RectangleF&quot;></xref>結構，指定繪製文字的位置。"
  overload: System.Drawing.Graphics.DrawString*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>brush</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>s</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.PointF,System.Drawing.StringFormat)
  id: DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.PointF,System.Drawing.StringFormat)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawString(String,Font,Brush,PointF,StringFormat)
  nameWithType: Graphics.DrawString(String,Font,Brush,PointF,StringFormat)
  fullName: System.Drawing.Graphics.DrawString(String,Font,Brush,PointF,StringFormat)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "指定的文字字串繪製於指定的位置，以指定<xref href=&quot;System.Drawing.Brush&quot;></xref>和<xref href=&quot;System.Drawing.Font&quot;></xref>物件，使用指定的格式化屬性<xref href=&quot;System.Drawing.StringFormat&quot;> </xref>。"
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a text string to draw.  \n  \n-   Defines the font as Arial (16pt).  \n  \n-   Creates a solid, black brush to draw with.  \n  \n-   Creates a point for the upper-left corner at which to draw the text.  \n  \n-   Sets the format of the string to draw vertically.  \n  \n-   Draws the string to the screen using the font, brush, destination point, and format.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#85](~/add/codesnippet/cpp/9695d0f1-6916-4c96-a710-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#85](~/add/codesnippet/csharp/9695d0f1-6916-4c96-a710-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#85](~/add/codesnippet/visualbasic/9695d0f1-6916-4c96-a710-_1.vb)]"
  syntax:
    content: public void DrawString (string s, System.Drawing.Font font, System.Drawing.Brush brush, System.Drawing.PointF point, System.Drawing.StringFormat format);
    parameters:
    - id: s
      type: System.String
      description: "要繪製的字串。"
    - id: font
      type: System.Drawing.Font
      description: "<xref href=&quot;System.Drawing.Font&quot;></xref>定義字串的文字格式。"
    - id: brush
      type: System.Drawing.Brush
      description: "<xref href=&quot;System.Drawing.Brush&quot;></xref>決定的色彩和紋理繪製文字。"
    - id: point
      type: System.Drawing.PointF
      description: "<xref href=&quot;System.Drawing.PointF&quot;></xref>結構，指定繪製文字左上角。"
    - id: format
      type: System.Drawing.StringFormat
      description: "<xref href=&quot;System.Drawing.StringFormat&quot;></xref>指定的格式化屬性，例如行距和對齊方式，套用到所繪製文字。"
  overload: System.Drawing.Graphics.DrawString*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>brush</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>s</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF,System.Drawing.StringFormat)
  id: DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF,System.Drawing.StringFormat)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawString(String,Font,Brush,RectangleF,StringFormat)
  nameWithType: Graphics.DrawString(String,Font,Brush,RectangleF,StringFormat)
  fullName: System.Drawing.Graphics.DrawString(String,Font,Brush,RectangleF,StringFormat)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "將指定的文字字串繪製在指定的矩形，具有指定<xref href=&quot;System.Drawing.Brush&quot;></xref>和<xref href=&quot;System.Drawing.Font&quot;></xref>物件，使用指定的格式化屬性<xref href=&quot;System.Drawing.StringFormat&quot;> </xref>。"
  remarks: "所代表的文字`s`參數所表示的矩形內繪製`layoutRectangle`參數。 如果文字無法容納置於矩形內，則會截斷在最接近的字，除非另有指定`format`參數。"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a text string to draw.  \n  \n-   Defines the font as Arial (16pt).  \n  \n-   Creates a solid, black brush to draw with.  \n  \n-   Creates a rectangle in which to draw the text.  \n  \n-   Draws the rectangle to the screen.  \n  \n-   Sets the format of the string to center it within the rectangle.  \n  \n-   Draws the string to the screen using the font, brush, and destination rectangle.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#87](~/add/codesnippet/cpp/711c2875-30db-41dc-b400-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#87](~/add/codesnippet/csharp/711c2875-30db-41dc-b400-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#87](~/add/codesnippet/visualbasic/711c2875-30db-41dc-b400-_1.vb)]"
  syntax:
    content: public void DrawString (string s, System.Drawing.Font font, System.Drawing.Brush brush, System.Drawing.RectangleF layoutRectangle, System.Drawing.StringFormat format);
    parameters:
    - id: s
      type: System.String
      description: "要繪製的字串。"
    - id: font
      type: System.Drawing.Font
      description: "<xref href=&quot;System.Drawing.Font&quot;></xref>定義字串的文字格式。"
    - id: brush
      type: System.Drawing.Brush
      description: "<xref href=&quot;System.Drawing.Brush&quot;></xref>決定的色彩和紋理繪製文字。"
    - id: layoutRectangle
      type: System.Drawing.RectangleF
      description: "<xref href=&quot;System.Drawing.RectangleF&quot;></xref>結構，指定繪製文字的位置。"
    - id: format
      type: System.Drawing.StringFormat
      description: "<xref href=&quot;System.Drawing.StringFormat&quot;></xref>指定的格式化屬性，例如行距和對齊方式，套用到所繪製文字。"
  overload: System.Drawing.Graphics.DrawString*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>brush</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>s</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Single,System.Single)
  id: DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Single,System.Single)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawString(String,Font,Brush,Single,Single)
  nameWithType: Graphics.DrawString(String,Font,Brush,Single,Single)
  fullName: System.Drawing.Graphics.DrawString(String,Font,Brush,Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "指定的文字字串繪製於指定的位置，以指定<xref href=&quot;System.Drawing.Brush&quot;></xref>和<xref href=&quot;System.Drawing.Font&quot;></xref>物件。"
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a text string to draw.  \n  \n-   Defines the font as Arial (16pt).  \n  \n-   Creates a solid black brush to draw with.  \n  \n-   Creates a point for the upper-left corner at which to draw the text.  \n  \n-   Draws the string to the screen using the font, brush, and destination point.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#88](~/add/codesnippet/cpp/770eeee0-f64d-405f-a03c-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#88](~/add/codesnippet/csharp/770eeee0-f64d-405f-a03c-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#88](~/add/codesnippet/visualbasic/770eeee0-f64d-405f-a03c-_1.vb)]"
  syntax:
    content: public void DrawString (string s, System.Drawing.Font font, System.Drawing.Brush brush, float x, float y);
    parameters:
    - id: s
      type: System.String
      description: "要繪製的字串。"
    - id: font
      type: System.Drawing.Font
      description: "<xref href=&quot;System.Drawing.Font&quot;></xref>定義字串的文字格式。"
    - id: brush
      type: System.Drawing.Brush
      description: "<xref href=&quot;System.Drawing.Brush&quot;></xref>決定的色彩和紋理繪製文字。"
    - id: x
      type: System.Single
      description: "繪製文字左上角的 x 座標。"
    - id: y
      type: System.Single
      description: "繪製文字左上角的 y 座標。"
  overload: System.Drawing.Graphics.DrawString*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>brush</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>s</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Single,System.Single,System.Drawing.StringFormat)
  id: DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Single,System.Single,System.Drawing.StringFormat)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawString(String,Font,Brush,Single,Single,StringFormat)
  nameWithType: Graphics.DrawString(String,Font,Brush,Single,Single,StringFormat)
  fullName: System.Drawing.Graphics.DrawString(String,Font,Brush,Single,Single,StringFormat)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "指定的文字字串繪製於指定的位置，以指定<xref href=&quot;System.Drawing.Brush&quot;></xref>和<xref href=&quot;System.Drawing.Font&quot;></xref>物件，使用指定的格式化屬性<xref href=&quot;System.Drawing.StringFormat&quot;> </xref>。"
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a text string to draw.  \n  \n-   Defines the font as Arial (16pt).  \n  \n-   Creates a solid, black brush to draw with.  \n  \n-   Creates the coordinates of a point for the upper-left corner at which to draw the text.  \n  \n-   Sets the format of the string to draw vertically  \n  \n-   Draws the string to the screen using the font, brush, destination point, and format.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#89](~/add/codesnippet/cpp/d180666f-5277-4a3e-9c46-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#89](~/add/codesnippet/csharp/d180666f-5277-4a3e-9c46-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#89](~/add/codesnippet/visualbasic/d180666f-5277-4a3e-9c46-_1.vb)]"
  syntax:
    content: public void DrawString (string s, System.Drawing.Font font, System.Drawing.Brush brush, float x, float y, System.Drawing.StringFormat format);
    parameters:
    - id: s
      type: System.String
      description: "要繪製的字串。"
    - id: font
      type: System.Drawing.Font
      description: "<xref href=&quot;System.Drawing.Font&quot;></xref>定義字串的文字格式。"
    - id: brush
      type: System.Drawing.Brush
      description: "<xref href=&quot;System.Drawing.Brush&quot;></xref>決定的色彩和紋理繪製文字。"
    - id: x
      type: System.Single
      description: "繪製文字左上角的 x 座標。"
    - id: y
      type: System.Single
      description: "繪製文字左上角的 y 座標。"
    - id: format
      type: System.Drawing.StringFormat
      description: "<xref href=&quot;System.Drawing.StringFormat&quot;></xref>指定的格式化屬性，例如行距和對齊方式，套用到所繪製文字。"
  overload: System.Drawing.Graphics.DrawString*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>brush</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>s</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.EndContainer(System.Drawing.Drawing2D.GraphicsContainer)
  id: EndContainer(System.Drawing.Drawing2D.GraphicsContainer)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: EndContainer(GraphicsContainer)
  nameWithType: Graphics.EndContainer(GraphicsContainer)
  fullName: System.Drawing.Graphics.EndContainer(GraphicsContainer)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "關閉目前的圖形容器，並還原這個狀態<xref href=&quot;System.Drawing.Graphics&quot;></xref>呼叫所儲存的狀態<xref:System.Drawing.Graphics.BeginContainer*>方法。</xref:System.Drawing.Graphics.BeginContainer*>"
  remarks: "使用此方法加<xref:System.Drawing.Graphics.BeginContainer%2A>方法，以建立巢狀的圖形容器。</xref:System.Drawing.Graphics.BeginContainer%2A> 圖形容器保留圖形的狀態，例如轉換、 裁剪區域和呈現屬性。       當您呼叫<xref:System.Drawing.Graphics.BeginContainer%2A>方法<xref:System.Drawing.Graphics>，保留狀態的資訊區塊<xref:System.Drawing.Graphics>放在堆疊上。</xref:System.Drawing.Graphics> </xref:System.Drawing.Graphics> </xref:System.Drawing.Graphics.BeginContainer%2A> <xref:System.Drawing.Graphics.BeginContainer%2A>方法會傳回<xref:System.Drawing.Drawing2D.GraphicsContainer>可識別該資訊區塊。</xref:System.Drawing.Drawing2D.GraphicsContainer> </xref:System.Drawing.Graphics.BeginContainer%2A> 當您將識別的物件傳遞至 EndContainer 方法時，資訊區塊會從堆疊移除，且用來還原<xref:System.Drawing.Graphics>的時間當時的狀態<xref:System.Drawing.Graphics.BeginContainer%2A>方法呼叫。</xref:System.Drawing.Graphics.BeginContainer%2A> </xref:System.Drawing.Graphics>       可以是巢狀容器。也就是說，您可以呼叫<xref:System.Drawing.Graphics.BeginContainer%2A>數次，才能呼叫 EndContainer 方法的方法。</xref:System.Drawing.Graphics.BeginContainer%2A> 每次呼叫<xref:System.Drawing.Graphics.BeginContainer%2A>方法，一個資訊區塊會放在堆疊上，而且您收到<xref:System.Drawing.Drawing2D.GraphicsContainer>資訊區塊。</xref:System.Drawing.Drawing2D.GraphicsContainer> </xref:System.Drawing.Graphics.BeginContainer%2A> 當您將傳遞的其中一個物件 EndContainer 方法，<xref:System.Drawing.Graphics>傳回給<xref:System.Drawing.Graphics.BeginContainer%2A>方法呼叫傳回<xref:System.Drawing.Drawing2D.GraphicsContainer>.</xref:System.Drawing.Drawing2D.GraphicsContainer>該特定</xref:System.Drawing.Graphics.BeginContainer%2A>的時間當時的狀態</xref:System.Drawing.Graphics> 資訊區塊放置在堆疊上的<xref:System.Drawing.Graphics.BeginContainer%2A>方法呼叫會從堆疊移除，且之後的所有資訊區塊放都置於該堆疊上<xref:System.Drawing.Graphics.BeginContainer%2A>方法呼叫也會移除。</xref:System.Drawing.Graphics.BeginContainer%2A> </xref:System.Drawing.Graphics.BeginContainer%2A>       呼叫<xref:System.Drawing.Graphics.Save%2A>相同呼叫堆疊上方法的位置資訊區塊<xref:System.Drawing.Graphics.BeginContainer%2A>方法。</xref:System.Drawing.Graphics.BeginContainer%2A> </xref:System.Drawing.Graphics.Save%2A> 就像 EndContainer 方法呼叫搭配<xref:System.Drawing.Graphics.BeginContainer%2A>方法呼叫<xref:System.Drawing.Graphics.Restore%2A>方法呼叫搭配<xref:System.Drawing.Graphics.Save%2A>方法呼叫。</xref:System.Drawing.Graphics.Save%2A> </xref:System.Drawing.Graphics.Restore%2A> </xref:System.Drawing.Graphics.BeginContainer%2A>       當您呼叫 EndContainer 方法時，所有的資訊區塊會放置在堆疊上 (由<xref:System.Drawing.Graphics.Save%2A>方法或由<xref:System.Drawing.Graphics.BeginContainer%2A>方法) 之後的對應呼叫<xref:System.Drawing.Graphics.BeginContainer%2A>方法會從堆疊移除。</xref:System.Drawing.Graphics.BeginContainer%2A> </xref:System.Drawing.Graphics.BeginContainer%2A> </xref:System.Drawing.Graphics.Save%2A> 同樣地，當您呼叫<xref:System.Drawing.Graphics.Restore%2A>方法中，放置在堆疊上的所有資訊區塊 (由<xref:System.Drawing.Graphics.Save%2A>方法或由<xref:System.Drawing.Graphics.BeginContainer%2A>方法) 之後的對應呼叫<xref:System.Drawing.Graphics.Save%2A>方法會從堆疊移除。</xref:System.Drawing.Graphics.Save%2A> </xref:System.Drawing.Graphics.BeginContainer%2A> </xref:System.Drawing.Graphics.Save%2A> </xref:System.Drawing.Graphics.Restore%2A>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Opens a new graphics container and saves the old container.  \n  \n-   Translates the world coordinates in the container.  \n  \n-   Fills a red rectangle in the (translated coordinates of the) new container.  \n  \n-   Closes the new container and restores the saved container.  \n  \n-   Fills a green rectangle (to the untranslated coordinates) of the saved container.  \n  \n The result is a green rectangle that overlies a red rectangle of the same size.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#90](~/add/codesnippet/cpp/e4c99678-fc56-4e9c-af9b-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#90](~/add/codesnippet/csharp/e4c99678-fc56-4e9c-af9b-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#90](~/add/codesnippet/visualbasic/e4c99678-fc56-4e9c-af9b-_1.vb)]"
  syntax:
    content: public void EndContainer (System.Drawing.Drawing2D.GraphicsContainer container);
    parameters:
    - id: container
      type: System.Drawing.Drawing2D.GraphicsContainer
      description: "<xref href=&quot;System.Drawing.Drawing2D.GraphicsContainer&quot;></xref>表示這個方法會還原的容器。"
  overload: System.Drawing.Graphics.EndContainer*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc)
  id: EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: EnumerateMetafile(Metafile,Point,Graphics+EnumerateMetafileProc)
  nameWithType: Graphics.EnumerateMetafile(Metafile,Point,Graphics+EnumerateMetafileProc)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,Point,Graphics+EnumerateMetafileProc)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Point destPoint, System.Drawing.Graphics.EnumerateMetafileProc callback);
    parameters:
    - id: metafile
      type: System.Drawing.Imaging.Metafile
      description: "即將加入。"
    - id: destPoint
      type: System.Drawing.Point
      description: "即將加入。"
    - id: callback
      type: System.Drawing.Graphics.EnumerateMetafileProc
      description: "即將加入。"
  overload: System.Drawing.Graphics.EnumerateMetafile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Graphics.EnumerateMetafileProc)
  id: EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Graphics.EnumerateMetafileProc)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: EnumerateMetafile(Metafile,Point[],Graphics+EnumerateMetafileProc)
  nameWithType: Graphics.EnumerateMetafile(Metafile,Point[],Graphics+EnumerateMetafileProc)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,Point[],Graphics+EnumerateMetafileProc)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Point[] destPoints, System.Drawing.Graphics.EnumerateMetafileProc callback);
    parameters:
    - id: metafile
      type: System.Drawing.Imaging.Metafile
      description: "即將加入。"
    - id: destPoints
      type: System.Drawing.Point[]
      description: "即將加入。"
    - id: callback
      type: System.Drawing.Graphics.EnumerateMetafileProc
      description: "即將加入。"
  overload: System.Drawing.Graphics.EnumerateMetafile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.Graphics.EnumerateMetafileProc)
  id: EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.Graphics.EnumerateMetafileProc)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: EnumerateMetafile(Metafile,PointF,Graphics+EnumerateMetafileProc)
  nameWithType: Graphics.EnumerateMetafile(Metafile,PointF,Graphics+EnumerateMetafileProc)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,PointF,Graphics+EnumerateMetafileProc)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.PointF destPoint, System.Drawing.Graphics.EnumerateMetafileProc callback);
    parameters:
    - id: metafile
      type: System.Drawing.Imaging.Metafile
      description: "即將加入。"
    - id: destPoint
      type: System.Drawing.PointF
      description: "即將加入。"
    - id: callback
      type: System.Drawing.Graphics.EnumerateMetafileProc
      description: "即將加入。"
  overload: System.Drawing.Graphics.EnumerateMetafile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc)
  id: EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: EnumerateMetafile(Metafile,PointF[],Graphics+EnumerateMetafileProc)
  nameWithType: Graphics.EnumerateMetafile(Metafile,PointF[],Graphics+EnumerateMetafileProc)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,PointF[],Graphics+EnumerateMetafileProc)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.PointF[] destPoints, System.Drawing.Graphics.EnumerateMetafileProc callback);
    parameters:
    - id: metafile
      type: System.Drawing.Imaging.Metafile
      description: "即將加入。"
    - id: destPoints
      type: System.Drawing.PointF[]
      description: "即將加入。"
    - id: callback
      type: System.Drawing.Graphics.EnumerateMetafileProc
      description: "即將加入。"
  overload: System.Drawing.Graphics.EnumerateMetafile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Graphics.EnumerateMetafileProc)
  id: EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Graphics.EnumerateMetafileProc)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: EnumerateMetafile(Metafile,Rectangle,Graphics+EnumerateMetafileProc)
  nameWithType: Graphics.EnumerateMetafile(Metafile,Rectangle,Graphics+EnumerateMetafileProc)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,Rectangle,Graphics+EnumerateMetafileProc)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Rectangle destRect, System.Drawing.Graphics.EnumerateMetafileProc callback);
    parameters:
    - id: metafile
      type: System.Drawing.Imaging.Metafile
      description: "即將加入。"
    - id: destRect
      type: System.Drawing.Rectangle
      description: "即將加入。"
    - id: callback
      type: System.Drawing.Graphics.EnumerateMetafileProc
      description: "即將加入。"
  overload: System.Drawing.Graphics.EnumerateMetafile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.Graphics.EnumerateMetafileProc)
  id: EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.Graphics.EnumerateMetafileProc)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: EnumerateMetafile(Metafile,RectangleF,Graphics+EnumerateMetafileProc)
  nameWithType: Graphics.EnumerateMetafile(Metafile,RectangleF,Graphics+EnumerateMetafileProc)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,RectangleF,Graphics+EnumerateMetafileProc)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.RectangleF destRect, System.Drawing.Graphics.EnumerateMetafileProc callback);
    parameters:
    - id: metafile
      type: System.Drawing.Imaging.Metafile
      description: "即將加入。"
    - id: destRect
      type: System.Drawing.RectangleF
      description: "即將加入。"
    - id: callback
      type: System.Drawing.Graphics.EnumerateMetafileProc
      description: "即將加入。"
  overload: System.Drawing.Graphics.EnumerateMetafile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  id: EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: EnumerateMetafile(Metafile,Point,Graphics+EnumerateMetafileProc,IntPtr)
  nameWithType: Graphics.EnumerateMetafile(Metafile,Point,Graphics+EnumerateMetafileProc,IntPtr)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,Point,Graphics+EnumerateMetafileProc,IntPtr)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Point destPoint, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData);
    parameters:
    - id: metafile
      type: System.Drawing.Imaging.Metafile
      description: "即將加入。"
    - id: destPoint
      type: System.Drawing.Point
      description: "即將加入。"
    - id: callback
      type: System.Drawing.Graphics.EnumerateMetafileProc
      description: "即將加入。"
    - id: callbackData
      type: System.IntPtr
      description: "即將加入。"
  overload: System.Drawing.Graphics.EnumerateMetafile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  id: EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: EnumerateMetafile(Metafile,Point[],Graphics+EnumerateMetafileProc,IntPtr)
  nameWithType: Graphics.EnumerateMetafile(Metafile,Point[],Graphics+EnumerateMetafileProc,IntPtr)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,Point[],Graphics+EnumerateMetafileProc,IntPtr)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Point[] destPoints, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData);
    parameters:
    - id: metafile
      type: System.Drawing.Imaging.Metafile
      description: "即將加入。"
    - id: destPoints
      type: System.Drawing.Point[]
      description: "即將加入。"
    - id: callback
      type: System.Drawing.Graphics.EnumerateMetafileProc
      description: "即將加入。"
    - id: callbackData
      type: System.IntPtr
      description: "即將加入。"
  overload: System.Drawing.Graphics.EnumerateMetafile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  id: EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: EnumerateMetafile(Metafile,PointF,Graphics+EnumerateMetafileProc,IntPtr)
  nameWithType: Graphics.EnumerateMetafile(Metafile,PointF,Graphics+EnumerateMetafileProc,IntPtr)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,PointF,Graphics+EnumerateMetafileProc,IntPtr)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.PointF destPoint, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData);
    parameters:
    - id: metafile
      type: System.Drawing.Imaging.Metafile
      description: "即將加入。"
    - id: destPoint
      type: System.Drawing.PointF
      description: "即將加入。"
    - id: callback
      type: System.Drawing.Graphics.EnumerateMetafileProc
      description: "即將加入。"
    - id: callbackData
      type: System.IntPtr
      description: "即將加入。"
  overload: System.Drawing.Graphics.EnumerateMetafile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  id: EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: EnumerateMetafile(Metafile,PointF[],Graphics+EnumerateMetafileProc,IntPtr)
  nameWithType: Graphics.EnumerateMetafile(Metafile,PointF[],Graphics+EnumerateMetafileProc,IntPtr)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,PointF[],Graphics+EnumerateMetafileProc,IntPtr)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.PointF[] destPoints, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData);
    parameters:
    - id: metafile
      type: System.Drawing.Imaging.Metafile
      description: "即將加入。"
    - id: destPoints
      type: System.Drawing.PointF[]
      description: "即將加入。"
    - id: callback
      type: System.Drawing.Graphics.EnumerateMetafileProc
      description: "即將加入。"
    - id: callbackData
      type: System.IntPtr
      description: "即將加入。"
  overload: System.Drawing.Graphics.EnumerateMetafile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  id: EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: EnumerateMetafile(Metafile,Rectangle,Graphics+EnumerateMetafileProc,IntPtr)
  nameWithType: Graphics.EnumerateMetafile(Metafile,Rectangle,Graphics+EnumerateMetafileProc,IntPtr)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,Rectangle,Graphics+EnumerateMetafileProc,IntPtr)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Rectangle destRect, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData);
    parameters:
    - id: metafile
      type: System.Drawing.Imaging.Metafile
      description: "即將加入。"
    - id: destRect
      type: System.Drawing.Rectangle
      description: "即將加入。"
    - id: callback
      type: System.Drawing.Graphics.EnumerateMetafileProc
      description: "即將加入。"
    - id: callbackData
      type: System.IntPtr
      description: "即將加入。"
  overload: System.Drawing.Graphics.EnumerateMetafile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  id: EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: EnumerateMetafile(Metafile,RectangleF,Graphics+EnumerateMetafileProc,IntPtr)
  nameWithType: Graphics.EnumerateMetafile(Metafile,RectangleF,Graphics+EnumerateMetafileProc,IntPtr)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,RectangleF,Graphics+EnumerateMetafileProc,IntPtr)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.RectangleF destRect, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData);
    parameters:
    - id: metafile
      type: System.Drawing.Imaging.Metafile
      description: "即將加入。"
    - id: destRect
      type: System.Drawing.RectangleF
      description: "即將加入。"
    - id: callback
      type: System.Drawing.Graphics.EnumerateMetafileProc
      description: "即將加入。"
    - id: callbackData
      type: System.IntPtr
      description: "即將加入。"
  overload: System.Drawing.Graphics.EnumerateMetafile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  id: EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: EnumerateMetafile(Metafile,Point,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  nameWithType: Graphics.EnumerateMetafile(Metafile,Point,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,Point,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Point destPoint, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData, System.Drawing.Imaging.ImageAttributes imageAttr);
    parameters:
    - id: metafile
      type: System.Drawing.Imaging.Metafile
      description: "即將加入。"
    - id: destPoint
      type: System.Drawing.Point
      description: "即將加入。"
    - id: callback
      type: System.Drawing.Graphics.EnumerateMetafileProc
      description: "即將加入。"
    - id: callbackData
      type: System.IntPtr
      description: "即將加入。"
    - id: imageAttr
      type: System.Drawing.Imaging.ImageAttributes
      description: "即將加入。"
  overload: System.Drawing.Graphics.EnumerateMetafile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)
  id: EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: EnumerateMetafile(Metafile,Point,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc)
  nameWithType: Graphics.EnumerateMetafile(Metafile,Point,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,Point,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Point destPoint, System.Drawing.Rectangle srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Graphics.EnumerateMetafileProc callback);
    parameters:
    - id: metafile
      type: System.Drawing.Imaging.Metafile
      description: "即將加入。"
    - id: destPoint
      type: System.Drawing.Point
      description: "即將加入。"
    - id: srcRect
      type: System.Drawing.Rectangle
      description: "即將加入。"
    - id: srcUnit
      type: System.Drawing.GraphicsUnit
      description: "即將加入。"
    - id: callback
      type: System.Drawing.Graphics.EnumerateMetafileProc
      description: "即將加入。"
  overload: System.Drawing.Graphics.EnumerateMetafile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  id: EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: EnumerateMetafile(Metafile,Point[],Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  nameWithType: Graphics.EnumerateMetafile(Metafile,Point[],Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,Point[],Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Point[] destPoints, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData, System.Drawing.Imaging.ImageAttributes imageAttr);
    parameters:
    - id: metafile
      type: System.Drawing.Imaging.Metafile
      description: "即將加入。"
    - id: destPoints
      type: System.Drawing.Point[]
      description: "即將加入。"
    - id: callback
      type: System.Drawing.Graphics.EnumerateMetafileProc
      description: "即將加入。"
    - id: callbackData
      type: System.IntPtr
      description: "即將加入。"
    - id: imageAttr
      type: System.Drawing.Imaging.ImageAttributes
      description: "即將加入。"
  overload: System.Drawing.Graphics.EnumerateMetafile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)
  id: EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: EnumerateMetafile(Metafile,Point[],Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc)
  nameWithType: Graphics.EnumerateMetafile(Metafile,Point[],Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,Point[],Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Point[] destPoints, System.Drawing.Rectangle srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Graphics.EnumerateMetafileProc callback);
    parameters:
    - id: metafile
      type: System.Drawing.Imaging.Metafile
      description: "即將加入。"
    - id: destPoints
      type: System.Drawing.Point[]
      description: "即將加入。"
    - id: srcRect
      type: System.Drawing.Rectangle
      description: "即將加入。"
    - id: srcUnit
      type: System.Drawing.GraphicsUnit
      description: "即將加入。"
    - id: callback
      type: System.Drawing.Graphics.EnumerateMetafileProc
      description: "即將加入。"
  overload: System.Drawing.Graphics.EnumerateMetafile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  id: EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: EnumerateMetafile(Metafile,PointF,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  nameWithType: Graphics.EnumerateMetafile(Metafile,PointF,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,PointF,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.PointF destPoint, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData, System.Drawing.Imaging.ImageAttributes imageAttr);
    parameters:
    - id: metafile
      type: System.Drawing.Imaging.Metafile
      description: "即將加入。"
    - id: destPoint
      type: System.Drawing.PointF
      description: "即將加入。"
    - id: callback
      type: System.Drawing.Graphics.EnumerateMetafileProc
      description: "即將加入。"
    - id: callbackData
      type: System.IntPtr
      description: "即將加入。"
    - id: imageAttr
      type: System.Drawing.Imaging.ImageAttributes
      description: "即將加入。"
  overload: System.Drawing.Graphics.EnumerateMetafile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)
  id: EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: EnumerateMetafile(Metafile,PointF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc)
  nameWithType: Graphics.EnumerateMetafile(Metafile,PointF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,PointF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.PointF destPoint, System.Drawing.RectangleF srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Graphics.EnumerateMetafileProc callback);
    parameters:
    - id: metafile
      type: System.Drawing.Imaging.Metafile
      description: "即將加入。"
    - id: destPoint
      type: System.Drawing.PointF
      description: "即將加入。"
    - id: srcRect
      type: System.Drawing.RectangleF
      description: "即將加入。"
    - id: srcUnit
      type: System.Drawing.GraphicsUnit
      description: "即將加入。"
    - id: callback
      type: System.Drawing.Graphics.EnumerateMetafileProc
      description: "即將加入。"
  overload: System.Drawing.Graphics.EnumerateMetafile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  id: EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: EnumerateMetafile(Metafile,PointF[],Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  nameWithType: Graphics.EnumerateMetafile(Metafile,PointF[],Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,PointF[],Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.PointF[] destPoints, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData, System.Drawing.Imaging.ImageAttributes imageAttr);
    parameters:
    - id: metafile
      type: System.Drawing.Imaging.Metafile
      description: "即將加入。"
    - id: destPoints
      type: System.Drawing.PointF[]
      description: "即將加入。"
    - id: callback
      type: System.Drawing.Graphics.EnumerateMetafileProc
      description: "即將加入。"
    - id: callbackData
      type: System.IntPtr
      description: "即將加入。"
    - id: imageAttr
      type: System.Drawing.Imaging.ImageAttributes
      description: "即將加入。"
  overload: System.Drawing.Graphics.EnumerateMetafile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)
  id: EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: EnumerateMetafile(Metafile,PointF[],RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc)
  nameWithType: Graphics.EnumerateMetafile(Metafile,PointF[],RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,PointF[],RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.PointF[] destPoints, System.Drawing.RectangleF srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Graphics.EnumerateMetafileProc callback);
    parameters:
    - id: metafile
      type: System.Drawing.Imaging.Metafile
      description: "即將加入。"
    - id: destPoints
      type: System.Drawing.PointF[]
      description: "即將加入。"
    - id: srcRect
      type: System.Drawing.RectangleF
      description: "即將加入。"
    - id: srcUnit
      type: System.Drawing.GraphicsUnit
      description: "即將加入。"
    - id: callback
      type: System.Drawing.Graphics.EnumerateMetafileProc
      description: "即將加入。"
  overload: System.Drawing.Graphics.EnumerateMetafile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  id: EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: EnumerateMetafile(Metafile,Rectangle,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  nameWithType: Graphics.EnumerateMetafile(Metafile,Rectangle,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,Rectangle,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Rectangle destRect, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData, System.Drawing.Imaging.ImageAttributes imageAttr);
    parameters:
    - id: metafile
      type: System.Drawing.Imaging.Metafile
      description: "即將加入。"
    - id: destRect
      type: System.Drawing.Rectangle
      description: "即將加入。"
    - id: callback
      type: System.Drawing.Graphics.EnumerateMetafileProc
      description: "即將加入。"
    - id: callbackData
      type: System.IntPtr
      description: "即將加入。"
    - id: imageAttr
      type: System.Drawing.Imaging.ImageAttributes
      description: "即將加入。"
  overload: System.Drawing.Graphics.EnumerateMetafile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)
  id: EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: EnumerateMetafile(Metafile,Rectangle,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc)
  nameWithType: Graphics.EnumerateMetafile(Metafile,Rectangle,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,Rectangle,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Rectangle destRect, System.Drawing.Rectangle srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Graphics.EnumerateMetafileProc callback);
    parameters:
    - id: metafile
      type: System.Drawing.Imaging.Metafile
      description: "即將加入。"
    - id: destRect
      type: System.Drawing.Rectangle
      description: "即將加入。"
    - id: srcRect
      type: System.Drawing.Rectangle
      description: "即將加入。"
    - id: srcUnit
      type: System.Drawing.GraphicsUnit
      description: "即將加入。"
    - id: callback
      type: System.Drawing.Graphics.EnumerateMetafileProc
      description: "即將加入。"
  overload: System.Drawing.Graphics.EnumerateMetafile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  id: EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: EnumerateMetafile(Metafile,RectangleF,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  nameWithType: Graphics.EnumerateMetafile(Metafile,RectangleF,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,RectangleF,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.RectangleF destRect, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData, System.Drawing.Imaging.ImageAttributes imageAttr);
    parameters:
    - id: metafile
      type: System.Drawing.Imaging.Metafile
      description: "即將加入。"
    - id: destRect
      type: System.Drawing.RectangleF
      description: "即將加入。"
    - id: callback
      type: System.Drawing.Graphics.EnumerateMetafileProc
      description: "即將加入。"
    - id: callbackData
      type: System.IntPtr
      description: "即將加入。"
    - id: imageAttr
      type: System.Drawing.Imaging.ImageAttributes
      description: "即將加入。"
  overload: System.Drawing.Graphics.EnumerateMetafile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)
  id: EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: EnumerateMetafile(Metafile,RectangleF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc)
  nameWithType: Graphics.EnumerateMetafile(Metafile,RectangleF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,RectangleF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.RectangleF destRect, System.Drawing.RectangleF srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Graphics.EnumerateMetafileProc callback);
    parameters:
    - id: metafile
      type: System.Drawing.Imaging.Metafile
      description: "即將加入。"
    - id: destRect
      type: System.Drawing.RectangleF
      description: "即將加入。"
    - id: srcRect
      type: System.Drawing.RectangleF
      description: "即將加入。"
    - id: srcUnit
      type: System.Drawing.GraphicsUnit
      description: "即將加入。"
    - id: callback
      type: System.Drawing.Graphics.EnumerateMetafileProc
      description: "即將加入。"
  overload: System.Drawing.Graphics.EnumerateMetafile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  id: EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: EnumerateMetafile(Metafile,Point,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)
  nameWithType: Graphics.EnumerateMetafile(Metafile,Point,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,Point,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Point destPoint, System.Drawing.Rectangle srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData);
    parameters:
    - id: metafile
      type: System.Drawing.Imaging.Metafile
      description: "即將加入。"
    - id: destPoint
      type: System.Drawing.Point
      description: "即將加入。"
    - id: srcRect
      type: System.Drawing.Rectangle
      description: "即將加入。"
    - id: srcUnit
      type: System.Drawing.GraphicsUnit
      description: "即將加入。"
    - id: callback
      type: System.Drawing.Graphics.EnumerateMetafileProc
      description: "即將加入。"
    - id: callbackData
      type: System.IntPtr
      description: "即將加入。"
  overload: System.Drawing.Graphics.EnumerateMetafile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  id: EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: EnumerateMetafile(Metafile,Point[],Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)
  nameWithType: Graphics.EnumerateMetafile(Metafile,Point[],Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,Point[],Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Point[] destPoints, System.Drawing.Rectangle srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData);
    parameters:
    - id: metafile
      type: System.Drawing.Imaging.Metafile
      description: "即將加入。"
    - id: destPoints
      type: System.Drawing.Point[]
      description: "即將加入。"
    - id: srcRect
      type: System.Drawing.Rectangle
      description: "即將加入。"
    - id: srcUnit
      type: System.Drawing.GraphicsUnit
      description: "即將加入。"
    - id: callback
      type: System.Drawing.Graphics.EnumerateMetafileProc
      description: "即將加入。"
    - id: callbackData
      type: System.IntPtr
      description: "即將加入。"
  overload: System.Drawing.Graphics.EnumerateMetafile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  id: EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: EnumerateMetafile(Metafile,PointF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)
  nameWithType: Graphics.EnumerateMetafile(Metafile,PointF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,PointF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.PointF destPoint, System.Drawing.RectangleF srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData);
    parameters:
    - id: metafile
      type: System.Drawing.Imaging.Metafile
      description: "即將加入。"
    - id: destPoint
      type: System.Drawing.PointF
      description: "即將加入。"
    - id: srcRect
      type: System.Drawing.RectangleF
      description: "即將加入。"
    - id: srcUnit
      type: System.Drawing.GraphicsUnit
      description: "即將加入。"
    - id: callback
      type: System.Drawing.Graphics.EnumerateMetafileProc
      description: "即將加入。"
    - id: callbackData
      type: System.IntPtr
      description: "即將加入。"
  overload: System.Drawing.Graphics.EnumerateMetafile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  id: EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: EnumerateMetafile(Metafile,PointF[],RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)
  nameWithType: Graphics.EnumerateMetafile(Metafile,PointF[],RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,PointF[],RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.PointF[] destPoints, System.Drawing.RectangleF srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData);
    parameters:
    - id: metafile
      type: System.Drawing.Imaging.Metafile
      description: "即將加入。"
    - id: destPoints
      type: System.Drawing.PointF[]
      description: "即將加入。"
    - id: srcRect
      type: System.Drawing.RectangleF
      description: "即將加入。"
    - id: srcUnit
      type: System.Drawing.GraphicsUnit
      description: "即將加入。"
    - id: callback
      type: System.Drawing.Graphics.EnumerateMetafileProc
      description: "即將加入。"
    - id: callbackData
      type: System.IntPtr
      description: "即將加入。"
  overload: System.Drawing.Graphics.EnumerateMetafile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  id: EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: EnumerateMetafile(Metafile,Rectangle,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)
  nameWithType: Graphics.EnumerateMetafile(Metafile,Rectangle,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,Rectangle,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Rectangle destRect, System.Drawing.Rectangle srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData);
    parameters:
    - id: metafile
      type: System.Drawing.Imaging.Metafile
      description: "即將加入。"
    - id: destRect
      type: System.Drawing.Rectangle
      description: "即將加入。"
    - id: srcRect
      type: System.Drawing.Rectangle
      description: "即將加入。"
    - id: srcUnit
      type: System.Drawing.GraphicsUnit
      description: "即將加入。"
    - id: callback
      type: System.Drawing.Graphics.EnumerateMetafileProc
      description: "即將加入。"
    - id: callbackData
      type: System.IntPtr
      description: "即將加入。"
  overload: System.Drawing.Graphics.EnumerateMetafile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  id: EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: EnumerateMetafile(Metafile,RectangleF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)
  nameWithType: Graphics.EnumerateMetafile(Metafile,RectangleF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,RectangleF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.RectangleF destRect, System.Drawing.RectangleF srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData);
    parameters:
    - id: metafile
      type: System.Drawing.Imaging.Metafile
      description: "即將加入。"
    - id: destRect
      type: System.Drawing.RectangleF
      description: "即將加入。"
    - id: srcRect
      type: System.Drawing.RectangleF
      description: "即將加入。"
    - id: srcUnit
      type: System.Drawing.GraphicsUnit
      description: "即將加入。"
    - id: callback
      type: System.Drawing.Graphics.EnumerateMetafileProc
      description: "即將加入。"
    - id: callbackData
      type: System.IntPtr
      description: "即將加入。"
  overload: System.Drawing.Graphics.EnumerateMetafile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  id: EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: EnumerateMetafile(Metafile,Point,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  nameWithType: Graphics.EnumerateMetafile(Metafile,Point,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,Point,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Point destPoint, System.Drawing.Rectangle srcRect, System.Drawing.GraphicsUnit unit, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData, System.Drawing.Imaging.ImageAttributes imageAttr);
    parameters:
    - id: metafile
      type: System.Drawing.Imaging.Metafile
      description: "即將加入。"
    - id: destPoint
      type: System.Drawing.Point
      description: "即將加入。"
    - id: srcRect
      type: System.Drawing.Rectangle
      description: "即將加入。"
    - id: unit
      type: System.Drawing.GraphicsUnit
      description: "即將加入。"
    - id: callback
      type: System.Drawing.Graphics.EnumerateMetafileProc
      description: "即將加入。"
    - id: callbackData
      type: System.IntPtr
      description: "即將加入。"
    - id: imageAttr
      type: System.Drawing.Imaging.ImageAttributes
      description: "即將加入。"
  overload: System.Drawing.Graphics.EnumerateMetafile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  id: EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: EnumerateMetafile(Metafile,Point[],Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  nameWithType: Graphics.EnumerateMetafile(Metafile,Point[],Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,Point[],Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Point[] destPoints, System.Drawing.Rectangle srcRect, System.Drawing.GraphicsUnit unit, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData, System.Drawing.Imaging.ImageAttributes imageAttr);
    parameters:
    - id: metafile
      type: System.Drawing.Imaging.Metafile
      description: "即將加入。"
    - id: destPoints
      type: System.Drawing.Point[]
      description: "即將加入。"
    - id: srcRect
      type: System.Drawing.Rectangle
      description: "即將加入。"
    - id: unit
      type: System.Drawing.GraphicsUnit
      description: "即將加入。"
    - id: callback
      type: System.Drawing.Graphics.EnumerateMetafileProc
      description: "即將加入。"
    - id: callbackData
      type: System.IntPtr
      description: "即將加入。"
    - id: imageAttr
      type: System.Drawing.Imaging.ImageAttributes
      description: "即將加入。"
  overload: System.Drawing.Graphics.EnumerateMetafile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  id: EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: EnumerateMetafile(Metafile,PointF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  nameWithType: Graphics.EnumerateMetafile(Metafile,PointF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,PointF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.PointF destPoint, System.Drawing.RectangleF srcRect, System.Drawing.GraphicsUnit unit, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData, System.Drawing.Imaging.ImageAttributes imageAttr);
    parameters:
    - id: metafile
      type: System.Drawing.Imaging.Metafile
      description: "即將加入。"
    - id: destPoint
      type: System.Drawing.PointF
      description: "即將加入。"
    - id: srcRect
      type: System.Drawing.RectangleF
      description: "即將加入。"
    - id: unit
      type: System.Drawing.GraphicsUnit
      description: "即將加入。"
    - id: callback
      type: System.Drawing.Graphics.EnumerateMetafileProc
      description: "即將加入。"
    - id: callbackData
      type: System.IntPtr
      description: "即將加入。"
    - id: imageAttr
      type: System.Drawing.Imaging.ImageAttributes
      description: "即將加入。"
  overload: System.Drawing.Graphics.EnumerateMetafile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  id: EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: EnumerateMetafile(Metafile,PointF[],RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  nameWithType: Graphics.EnumerateMetafile(Metafile,PointF[],RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,PointF[],RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.PointF[] destPoints, System.Drawing.RectangleF srcRect, System.Drawing.GraphicsUnit unit, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData, System.Drawing.Imaging.ImageAttributes imageAttr);
    parameters:
    - id: metafile
      type: System.Drawing.Imaging.Metafile
      description: "即將加入。"
    - id: destPoints
      type: System.Drawing.PointF[]
      description: "即將加入。"
    - id: srcRect
      type: System.Drawing.RectangleF
      description: "即將加入。"
    - id: unit
      type: System.Drawing.GraphicsUnit
      description: "即將加入。"
    - id: callback
      type: System.Drawing.Graphics.EnumerateMetafileProc
      description: "即將加入。"
    - id: callbackData
      type: System.IntPtr
      description: "即將加入。"
    - id: imageAttr
      type: System.Drawing.Imaging.ImageAttributes
      description: "即將加入。"
  overload: System.Drawing.Graphics.EnumerateMetafile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  id: EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: EnumerateMetafile(Metafile,Rectangle,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  nameWithType: Graphics.EnumerateMetafile(Metafile,Rectangle,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,Rectangle,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Rectangle destRect, System.Drawing.Rectangle srcRect, System.Drawing.GraphicsUnit unit, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData, System.Drawing.Imaging.ImageAttributes imageAttr);
    parameters:
    - id: metafile
      type: System.Drawing.Imaging.Metafile
      description: "即將加入。"
    - id: destRect
      type: System.Drawing.Rectangle
      description: "即將加入。"
    - id: srcRect
      type: System.Drawing.Rectangle
      description: "即將加入。"
    - id: unit
      type: System.Drawing.GraphicsUnit
      description: "即將加入。"
    - id: callback
      type: System.Drawing.Graphics.EnumerateMetafileProc
      description: "即將加入。"
    - id: callbackData
      type: System.IntPtr
      description: "即將加入。"
    - id: imageAttr
      type: System.Drawing.Imaging.ImageAttributes
      description: "即將加入。"
  overload: System.Drawing.Graphics.EnumerateMetafile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  id: EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: EnumerateMetafile(Metafile,RectangleF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  nameWithType: Graphics.EnumerateMetafile(Metafile,RectangleF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,RectangleF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.RectangleF destRect, System.Drawing.RectangleF srcRect, System.Drawing.GraphicsUnit unit, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData, System.Drawing.Imaging.ImageAttributes imageAttr);
    parameters:
    - id: metafile
      type: System.Drawing.Imaging.Metafile
      description: "即將加入。"
    - id: destRect
      type: System.Drawing.RectangleF
      description: "即將加入。"
    - id: srcRect
      type: System.Drawing.RectangleF
      description: "即將加入。"
    - id: unit
      type: System.Drawing.GraphicsUnit
      description: "即將加入。"
    - id: callback
      type: System.Drawing.Graphics.EnumerateMetafileProc
      description: "即將加入。"
    - id: callbackData
      type: System.IntPtr
      description: "即將加入。"
    - id: imageAttr
      type: System.Drawing.Imaging.ImageAttributes
      description: "即將加入。"
  overload: System.Drawing.Graphics.EnumerateMetafile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.ExcludeClip(System.Drawing.Rectangle)
  id: ExcludeClip(System.Drawing.Rectangle)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: ExcludeClip(Rectangle)
  nameWithType: Graphics.ExcludeClip(Rectangle)
  fullName: System.Drawing.Graphics.ExcludeClip(Rectangle)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "這個的裁剪區域更新<xref href=&quot;System.Drawing.Graphics&quot;></xref>排除所指定的區域<xref href=&quot;System.Drawing.Rectangle&quot;></xref>結構。"
  remarks: "這個方法會排除所指定的區域`rect`從目前裁剪區域參數，並將產生的區域指派給<xref:System.Drawing.Graphics.Clip%2A>此<xref:System.Drawing.Graphics>.</xref:System.Drawing.Graphics>屬性</xref:System.Drawing.Graphics.Clip%2A>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a 100 pixel by 100 pixel rectangle whose upper-left corner is at the coordinate (100, 100).  \n  \n-   Creates a region defined by the rectangle.  \n  \n-   Sets the clipping region to exclude the rectangular region.  \n  \n-   Fills a 300 pixel by 300 pixel rectangle whose upper-left corner is at the coordinate (0, 0) with a solid blue brush.  \n  \n The result is a blue rectangle with a square region toward its lower-right corner missing.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#92](~/add/codesnippet/cpp/m-system.drawing.graphic_0_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#92](~/add/codesnippet/csharp/m-system.drawing.graphic_0_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#92](~/add/codesnippet/visualbasic/m-system.drawing.graphic_0_1.vb)]"
  syntax:
    content: public void ExcludeClip (System.Drawing.Rectangle rect);
    parameters:
    - id: rect
      type: System.Drawing.Rectangle
      description: "<xref href=&quot;System.Drawing.Rectangle&quot;></xref>結構，指定要從裁剪區域排除的矩形。"
  overload: System.Drawing.Graphics.ExcludeClip*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.ExcludeClip(System.Drawing.Region)
  id: ExcludeClip(System.Drawing.Region)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: ExcludeClip(Region)
  nameWithType: Graphics.ExcludeClip(Region)
  fullName: System.Drawing.Graphics.ExcludeClip(Region)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "這個的裁剪區域更新<xref href=&quot;System.Drawing.Graphics&quot;></xref>排除所指定的區域<xref href=&quot;System.Drawing.Region&quot;> </xref>。"
  remarks: "這個方法會排除所指定的區域`region`從目前裁剪區域參數，並將產生的區域指派給<xref:System.Drawing.Graphics.Clip%2A>此<xref:System.Drawing.Graphics>.</xref:System.Drawing.Graphics>屬性</xref:System.Drawing.Graphics.Clip%2A>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a 100 pixel by 100 pixel rectangle whose upper-left corner is at the coordinate (100, 100).  \n  \n-   Sets the clipping region to exclude the rectangle.  \n  \n-   Fills a 300 pixel by 300 pixel rectangle whose upper-left corner is at the coordinate (0, 0) with a solid blue brush.  \n  \n The result is a blue rectangle with a square area toward its lower-right corner missing.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#91](~/add/codesnippet/cpp/m-system.drawing.graphic_3_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#91](~/add/codesnippet/csharp/m-system.drawing.graphic_3_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#91](~/add/codesnippet/visualbasic/m-system.drawing.graphic_3_1.vb)]"
  syntax:
    content: public void ExcludeClip (System.Drawing.Region region);
    parameters:
    - id: region
      type: System.Drawing.Region
      description: "<xref href=&quot;System.Drawing.Region&quot;></xref>指定要從裁剪區域排除的區域。"
  overload: System.Drawing.Graphics.ExcludeClip*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[])
  id: FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[])
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: FillClosedCurve(Brush,Point[])
  nameWithType: Graphics.FillClosedCurve(Brush,Point[])
  fullName: System.Drawing.Graphics.FillClosedCurve(Brush,Point[])
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "填滿的陣列所定義之封閉的基本曲線內部<xref href=&quot;System.Drawing.Point&quot;></xref>結構。"
  remarks: "這個方法會填入通過陣列中的每個點的封閉基本曲線內部。 如果最後一個點不符合第一個點，會將額外的曲線線段加入的最後一個點的第一個點，以將它關閉。       點陣列必須包含至少&4; 個<xref:System.Drawing.Point>結構。</xref:System.Drawing.Point>       這個方法會使用預設張力為 0.5。"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a solid red brush.  \n  \n-   Creates an array of four points to define a spline.  \n  \n-   Fills the curve on the screen.  \n  \n The curve has a default tension of 0.5.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#93](~/add/codesnippet/cpp/c7de0d70-1d4a-415d-8e0a-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#93](~/add/codesnippet/csharp/c7de0d70-1d4a-415d-8e0a-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#93](~/add/codesnippet/visualbasic/c7de0d70-1d4a-415d-8e0a-_1.vb)]"
  syntax:
    content: public void FillClosedCurve (System.Drawing.Brush brush, System.Drawing.Point[] points);
    parameters:
    - id: brush
      type: System.Drawing.Brush
      description: "<xref href=&quot;System.Drawing.Brush&quot;></xref>決定填滿的特性。"
    - id: points
      type: System.Drawing.Point[]
      description: "陣列<xref href=&quot;System.Drawing.Point&quot;></xref>定義曲線的結構。"
  overload: System.Drawing.Graphics.FillClosedCurve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>brush</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>points</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[])
  id: FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[])
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: FillClosedCurve(Brush,PointF[])
  nameWithType: Graphics.FillClosedCurve(Brush,PointF[])
  fullName: System.Drawing.Graphics.FillClosedCurve(Brush,PointF[])
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "填滿的陣列所定義之封閉的基本曲線內部<xref href=&quot;System.Drawing.PointF&quot;></xref>結構。"
  remarks: "這個方法會填入通過陣列中的每個點的封閉基本曲線內部。 如果最後一個點不符合第一個點，會將額外的曲線線段加入的最後一個點的第一個點，以將它關閉。       點陣列必須包含至少&4; 個<xref:System.Drawing.PointF>結構。</xref:System.Drawing.PointF>       這個方法會使用預設張力為 0.5。"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a solid red brush.  \n  \n-   Creates an array of four points to define a spline.  \n  \n-   Fills the curve on the screen.  \n  \n The curve has a default tension of 0.5.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#96](~/add/codesnippet/cpp/27ae27b1-8fc7-46da-97c2-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#96](~/add/codesnippet/csharp/27ae27b1-8fc7-46da-97c2-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#96](~/add/codesnippet/visualbasic/27ae27b1-8fc7-46da-97c2-_1.vb)]"
  syntax:
    content: public void FillClosedCurve (System.Drawing.Brush brush, System.Drawing.PointF[] points);
    parameters:
    - id: brush
      type: System.Drawing.Brush
      description: "<xref href=&quot;System.Drawing.Brush&quot;></xref>決定填滿的特性。"
    - id: points
      type: System.Drawing.PointF[]
      description: "陣列<xref href=&quot;System.Drawing.PointF&quot;></xref>定義曲線的結構。"
  overload: System.Drawing.Graphics.FillClosedCurve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>brush</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>points</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode)
  id: FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: FillClosedCurve(Brush,Point[],FillMode)
  nameWithType: Graphics.FillClosedCurve(Brush,Point[],FillMode)
  fullName: System.Drawing.Graphics.FillClosedCurve(Brush,Point[],FillMode)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "填滿的陣列所定義之封閉的基本曲線內部<xref href=&quot;System.Drawing.Point&quot;></xref>結構使用指定的填滿模式。"
  remarks: "這個方法會填入通過陣列中的每個點的封閉基本曲線內部。 如果最後一個點不符合第一個點，會將額外的曲線線段加入的最後一個點的第一個點，以將它關閉。       點陣列必須包含至少&4; 個<xref:System.Drawing.Point>結構。</xref:System.Drawing.Point>       這個方法會使用預設張力為 0.5。"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a solid red brush.  \n  \n-   Creates an array of four points to define a spline.  \n  \n-   Sets the fill mode to <xref:System.Drawing.Drawing2D.FillMode>.  \n  \n-   Fills the curve on the screen.  \n  \n The curve has a default tension of 0.5.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#94](~/add/codesnippet/cpp/d8cdaeb5-d9cb-4113-8859-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#94](~/add/codesnippet/csharp/d8cdaeb5-d9cb-4113-8859-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#94](~/add/codesnippet/visualbasic/d8cdaeb5-d9cb-4113-8859-_1.vb)]"
  syntax:
    content: public void FillClosedCurve (System.Drawing.Brush brush, System.Drawing.Point[] points, System.Drawing.Drawing2D.FillMode fillmode);
    parameters:
    - id: brush
      type: System.Drawing.Brush
      description: "<xref href=&quot;System.Drawing.Brush&quot;></xref>決定填滿的特性。"
    - id: points
      type: System.Drawing.Point[]
      description: "陣列<xref href=&quot;System.Drawing.Point&quot;></xref>定義曲線的結構。"
    - id: fillmode
      type: System.Drawing.Drawing2D.FillMode
      description: "成員的<xref href=&quot;System.Drawing.Drawing2D.FillMode&quot;></xref>列舉，可判斷填滿曲線的方法。"
  overload: System.Drawing.Graphics.FillClosedCurve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>brush</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>points</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode)
  id: FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: FillClosedCurve(Brush,PointF[],FillMode)
  nameWithType: Graphics.FillClosedCurve(Brush,PointF[],FillMode)
  fullName: System.Drawing.Graphics.FillClosedCurve(Brush,PointF[],FillMode)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "填滿的陣列所定義之封閉的基本曲線內部<xref href=&quot;System.Drawing.PointF&quot;></xref>結構使用指定的填滿模式。"
  remarks: "這個方法會填入通過陣列中的每個點的封閉基本曲線內部。 如果最後一個點不符合第一個點，會將額外的曲線線段加入的最後一個點的第一個點，以將它關閉。       點陣列必須包含至少&4; 個<xref:System.Drawing.Point>結構。</xref:System.Drawing.Point>       這個方法會使用預設張力為 0.5。"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a solid red brush.  \n  \n-   Creates an array of four points to define a spline.  \n  \n-   Sets the fill mode to <xref:System.Drawing.Drawing2D.FillMode>.  \n  \n-   Fills the curve on the screen.  \n  \n The curve has a default tension of 0.5.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#97](~/add/codesnippet/cpp/eba35974-b853-45cc-982b-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#97](~/add/codesnippet/csharp/eba35974-b853-45cc-982b-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#97](~/add/codesnippet/visualbasic/eba35974-b853-45cc-982b-_1.vb)]"
  syntax:
    content: public void FillClosedCurve (System.Drawing.Brush brush, System.Drawing.PointF[] points, System.Drawing.Drawing2D.FillMode fillmode);
    parameters:
    - id: brush
      type: System.Drawing.Brush
      description: "<xref href=&quot;System.Drawing.Brush&quot;></xref>決定填滿的特性。"
    - id: points
      type: System.Drawing.PointF[]
      description: "陣列<xref href=&quot;System.Drawing.PointF&quot;></xref>定義曲線的結構。"
    - id: fillmode
      type: System.Drawing.Drawing2D.FillMode
      description: "成員的<xref href=&quot;System.Drawing.Drawing2D.FillMode&quot;></xref>列舉，可判斷填滿曲線的方法。"
  overload: System.Drawing.Graphics.FillClosedCurve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>brush</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>points</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode,System.Single)
  id: FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode,System.Single)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: FillClosedCurve(Brush,Point[],FillMode,Single)
  nameWithType: Graphics.FillClosedCurve(Brush,Point[],FillMode,Single)
  fullName: System.Drawing.Graphics.FillClosedCurve(Brush,Point[],FillMode,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "填滿的陣列所定義之封閉的基本曲線內部<xref href=&quot;System.Drawing.Point&quot;></xref>結構使用指定的填滿模式和張力。"
  remarks: "這個方法會填入通過陣列中的每個點的封閉基本曲線內部。 如果最後一個點不符合第一個點，會將額外的曲線線段加入的最後一個點的第一個點，以將它關閉。       點陣列必須包含至少&4; 個<xref:System.Drawing.Point>結構。</xref:System.Drawing.Point>       `tension`參數會決定曲線的形狀。 如果值`tension`參數是 0.0，這個方法會繪製的直線線段連接的點。 通常，`tension`參數小於或等於 1.0 f。 透過 1.0 f 的值不會產生不尋常的結果。"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a solid red brush.  \n  \n-   Creates an array of four points to define a spline.  \n  \n-   Sets the fill mode to <xref:System.Drawing.Drawing2D.FillMode>.  \n  \n-   Sets the tension to 1.0.  \n  \n-   Fills the curve on the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#95](~/add/codesnippet/cpp/a2a6c4a4-a444-44ec-86d2-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#95](~/add/codesnippet/csharp/a2a6c4a4-a444-44ec-86d2-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#95](~/add/codesnippet/visualbasic/a2a6c4a4-a444-44ec-86d2-_1.vb)]"
  syntax:
    content: public void FillClosedCurve (System.Drawing.Brush brush, System.Drawing.Point[] points, System.Drawing.Drawing2D.FillMode fillmode, float tension);
    parameters:
    - id: brush
      type: System.Drawing.Brush
      description: "<xref href=&quot;System.Drawing.Brush&quot;></xref>決定填滿的特性。"
    - id: points
      type: System.Drawing.Point[]
      description: "陣列<xref href=&quot;System.Drawing.Point&quot;></xref>定義曲線的結構。"
    - id: fillmode
      type: System.Drawing.Drawing2D.FillMode
      description: "成員的<xref href=&quot;System.Drawing.Drawing2D.FillMode&quot;></xref>列舉，可判斷填滿曲線的方法。"
    - id: tension
      type: System.Single
      description: "值大於或等於 0.0 f，指定曲線的張力。"
  overload: System.Drawing.Graphics.FillClosedCurve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>brush</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>points</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode,System.Single)
  id: FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode,System.Single)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: FillClosedCurve(Brush,PointF[],FillMode,Single)
  nameWithType: Graphics.FillClosedCurve(Brush,PointF[],FillMode,Single)
  fullName: System.Drawing.Graphics.FillClosedCurve(Brush,PointF[],FillMode,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "填滿的陣列所定義之封閉的基本曲線內部<xref href=&quot;System.Drawing.PointF&quot;></xref>結構使用指定的填滿模式和張力。"
  remarks: "這個方法會填入通過陣列中的每個點的封閉基本曲線內部。 如果最後一個點不符合第一個點，會將額外的曲線線段加入的最後一個點的第一個點，以將它關閉。       點陣列必須包含至少&4; 個<xref:System.Drawing.Point>結構。</xref:System.Drawing.Point>       `tension`參數會決定曲線的形狀。 如果值`tension`參數是 0.0，這個方法會繪製的直線線段連接的點。 通常，`tension`參數小於或等於 1.0 f。 透過 1.0 f 的值不會產生不尋常的結果。"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a solid red brush.  \n  \n-   Creates an array of four points to define a spline.  \n  \n-   Sets the fill mode to <xref:System.Drawing.Drawing2D.FillMode>.  \n  \n-   Sets the tension to 1.0.  \n  \n-   Fills the curve on the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#98](~/add/codesnippet/cpp/0df0de76-385f-475b-bd9e-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#98](~/add/codesnippet/csharp/0df0de76-385f-475b-bd9e-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#98](~/add/codesnippet/visualbasic/0df0de76-385f-475b-bd9e-_1.vb)]"
  syntax:
    content: public void FillClosedCurve (System.Drawing.Brush brush, System.Drawing.PointF[] points, System.Drawing.Drawing2D.FillMode fillmode, float tension);
    parameters:
    - id: brush
      type: System.Drawing.Brush
      description: "A <xref href=&quot;System.Drawing.Brush&quot;> </xref> ，決定填滿的特性。"
    - id: points
      type: System.Drawing.PointF[]
      description: "陣列<xref href=&quot;System.Drawing.PointF&quot;></xref>定義曲線的結構。"
    - id: fillmode
      type: System.Drawing.Drawing2D.FillMode
      description: "成員的<xref href=&quot;System.Drawing.Drawing2D.FillMode&quot;></xref>列舉，可判斷填滿曲線的方法。"
    - id: tension
      type: System.Single
      description: "值大於或等於 0.0 f，指定曲線的張力。"
  overload: System.Drawing.Graphics.FillClosedCurve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>brush</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>points</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Drawing.Rectangle)
  id: FillEllipse(System.Drawing.Brush,System.Drawing.Rectangle)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: FillEllipse(Brush,Rectangle)
  nameWithType: Graphics.FillEllipse(Brush,Rectangle)
  fullName: System.Drawing.Graphics.FillEllipse(Brush,Rectangle)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "填滿指定的周框所定義的橢圓形內部<xref href=&quot;System.Drawing.Rectangle&quot;></xref>結構。"
  remarks: "這個方法會填入與<xref:System.Drawing.Brush>.</xref:System.Drawing.Brush>的橢圓形內部 所代表的週框定義橢圓形`rect`參數。"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a solid red brush.  \n  \n-   Creates a rectangle that bounds an ellipse.  \n  \n-   Fills the ellipse on the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#99](~/add/codesnippet/cpp/1db3c93b-c561-45c2-82d1-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#99](~/add/codesnippet/csharp/1db3c93b-c561-45c2-82d1-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#99](~/add/codesnippet/visualbasic/1db3c93b-c561-45c2-82d1-_1.vb)]"
  syntax:
    content: public void FillEllipse (System.Drawing.Brush brush, System.Drawing.Rectangle rect);
    parameters:
    - id: brush
      type: System.Drawing.Brush
      description: "<xref href=&quot;System.Drawing.Brush&quot;></xref>決定填滿的特性。"
    - id: rect
      type: System.Drawing.Rectangle
      description: "<xref href=&quot;System.Drawing.Rectangle&quot;></xref>結構，表示定義橢圓形之周框。"
  overload: System.Drawing.Graphics.FillEllipse*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>brush</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Drawing.RectangleF)
  id: FillEllipse(System.Drawing.Brush,System.Drawing.RectangleF)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: FillEllipse(Brush,RectangleF)
  nameWithType: Graphics.FillEllipse(Brush,RectangleF)
  fullName: System.Drawing.Graphics.FillEllipse(Brush,RectangleF)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "填滿指定的周框所定義的橢圓形內部<xref href=&quot;System.Drawing.RectangleF&quot;></xref>結構。"
  remarks: "這個方法會填入與<xref:System.Drawing.Brush>.</xref:System.Drawing.Brush>的橢圓形內部 所代表的週框定義橢圓形`rect`參數。"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a solid red brush.  \n  \n-   Creates a rectangle that bounds an ellipse.  \n  \n-   Fills the ellipse on the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#100](~/add/codesnippet/cpp/beddd307-c00b-4344-8ad5-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#100](~/add/codesnippet/csharp/beddd307-c00b-4344-8ad5-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#100](~/add/codesnippet/visualbasic/beddd307-c00b-4344-8ad5-_1.vb)]"
  syntax:
    content: public void FillEllipse (System.Drawing.Brush brush, System.Drawing.RectangleF rect);
    parameters:
    - id: brush
      type: System.Drawing.Brush
      description: "<xref href=&quot;System.Drawing.Brush&quot;></xref>決定填滿的特性。"
    - id: rect
      type: System.Drawing.RectangleF
      description: "<xref href=&quot;System.Drawing.RectangleF&quot;></xref>結構，表示定義橢圓形之周框。"
  overload: System.Drawing.Graphics.FillEllipse*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>brush</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32)
  id: FillEllipse(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: FillEllipse(Brush,Int32,Int32,Int32,Int32)
  nameWithType: Graphics.FillEllipse(Brush,Int32,Int32,Int32,Int32)
  fullName: System.Drawing.Graphics.FillEllipse(Brush,Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "填滿由一對座標、 寬度和高度所指定的周框所定義的橢圓形內部。"
  remarks: "這個方法會填入與<xref:System.Drawing.Brush>.</xref:System.Drawing.Brush>的橢圓形內部 所代表的週框定義橢圓形`x`， `y`， `width`，和`height`參數。"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a solid red brush.  \n  \n-   Creates the location and size of a rectangle that bounds an ellipse.  \n  \n-   Fills the ellipse on the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#101](~/add/codesnippet/cpp/0631ab9a-0826-4ecd-a349-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#101](~/add/codesnippet/csharp/0631ab9a-0826-4ecd-a349-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#101](~/add/codesnippet/visualbasic/0631ab9a-0826-4ecd-a349-_1.vb)]"
  syntax:
    content: public void FillEllipse (System.Drawing.Brush brush, int x, int y, int width, int height);
    parameters:
    - id: brush
      type: System.Drawing.Brush
      description: "<xref href=&quot;System.Drawing.Brush&quot;></xref>決定填滿的特性。"
    - id: x
      type: System.Int32
      description: "週框定義橢圓形的矩形的左上角的 x 座標。"
    - id: y
      type: System.Int32
      description: "週框定義橢圓形的矩形的左上角的 y 座標。"
    - id: width
      type: System.Int32
      description: "週框定義橢圓形的矩形的寬度。"
    - id: height
      type: System.Int32
      description: "週框定義橢圓形的矩形的高度。"
  overload: System.Drawing.Graphics.FillEllipse*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>brush</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single)
  id: FillEllipse(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: FillEllipse(Brush,Single,Single,Single,Single)
  nameWithType: Graphics.FillEllipse(Brush,Single,Single,Single,Single)
  fullName: System.Drawing.Graphics.FillEllipse(Brush,Single,Single,Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "填滿由一對座標、 寬度和高度所指定的周框所定義的橢圓形內部。"
  remarks: "這個方法會填入與<xref:System.Drawing.Brush>.</xref:System.Drawing.Brush>的橢圓形內部 所代表的週框定義橢圓形`x`， `y`， `width`，和`height`參數。"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a solid red brush.  \n  \n-   Creates the location and size of a rectangle that bounds an ellipse.  \n  \n-   Fills the ellipse on the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#102](~/add/codesnippet/cpp/a7ad2be7-2424-4c4e-be93-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#102](~/add/codesnippet/csharp/a7ad2be7-2424-4c4e-be93-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#102](~/add/codesnippet/visualbasic/a7ad2be7-2424-4c4e-be93-_1.vb)]"
  syntax:
    content: public void FillEllipse (System.Drawing.Brush brush, float x, float y, float width, float height);
    parameters:
    - id: brush
      type: System.Drawing.Brush
      description: "<xref href=&quot;System.Drawing.Brush&quot;></xref>決定填滿的特性。"
    - id: x
      type: System.Single
      description: "週框定義橢圓形的矩形的左上角的 x 座標。"
    - id: y
      type: System.Single
      description: "週框定義橢圓形的矩形的左上角的 y 座標。"
    - id: width
      type: System.Single
      description: "週框定義橢圓形的矩形的寬度。"
    - id: height
      type: System.Single
      description: "週框定義橢圓形的矩形的高度。"
  overload: System.Drawing.Graphics.FillEllipse*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>brush</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.FillPath(System.Drawing.Brush,System.Drawing.Drawing2D.GraphicsPath)
  id: FillPath(System.Drawing.Brush,System.Drawing.Drawing2D.GraphicsPath)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: FillPath(Brush,GraphicsPath)
  nameWithType: Graphics.FillPath(Brush,GraphicsPath)
  fullName: System.Drawing.Graphics.FillPath(Brush,GraphicsPath)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "填滿內部<xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref>。"
  remarks: "A<xref:System.Drawing.Drawing2D.GraphicsPath>直線和曲線線段的一系列所組成。</xref:System.Drawing.Drawing2D.GraphicsPath> 如果路徑以表示`path`參數未關閉，額外的區段加入的最後一個點来關閉路徑的第一個點。"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a solid red brush.  \n  \n-   Creates a graphics path object.  \n  \n-   Adds an ellipse to the graphics path.  \n  \n-   Fills the path on the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#103](~/add/codesnippet/cpp/bd82f623-b5ed-4a80-9aac-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#103](~/add/codesnippet/csharp/bd82f623-b5ed-4a80-9aac-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#103](~/add/codesnippet/visualbasic/bd82f623-b5ed-4a80-9aac-_1.vb)]"
  syntax:
    content: public void FillPath (System.Drawing.Brush brush, System.Drawing.Drawing2D.GraphicsPath path);
    parameters:
    - id: brush
      type: System.Drawing.Brush
      description: "<xref href=&quot;System.Drawing.Brush&quot;></xref>決定填滿的特性。"
    - id: path
      type: System.Drawing.Drawing2D.GraphicsPath
      description: "<xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;></xref>表示要填滿的路徑。"
  overload: System.Drawing.Graphics.FillPath*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>brush</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>path</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.FillPie(System.Drawing.Brush,System.Drawing.Rectangle,System.Single,System.Single)
  id: FillPie(System.Drawing.Brush,System.Drawing.Rectangle,System.Single,System.Single)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: FillPie(Brush,Rectangle,Single,Single)
  nameWithType: Graphics.FillPie(Brush,Rectangle,Single,Single)
  fullName: System.Drawing.Graphics.FillPie(Brush,Rectangle,Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "填滿所指定的橢圓形所定義的派形區域內部<xref href=&quot;System.Drawing.RectangleF&quot;></xref>結構和兩條放射線。"
  remarks: "這個方法填滿橢圓形和兩條放射線交集的弧形弧線的端點所定義的派形區域內部。 周框定義橢圓形。 包含的兩條放射線所定義的派形區段`startAngle`和`sweepAngle`參數和之間交集的那些放射線橢圓形弧線。       如果`sweepAngle`參數大於 360 度或小於-360 度，它會被視為分別是 360 度或-360 度。"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a solid red brush.  \n  \n-   Creates a rectangle that bounds an ellipse.  \n  \n-   Defines the start angle (relative to the x axis) and the sweep angle (both in a clockwise direction).  \n  \n-   Fills the pie-shaped area of the ellipse on the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#104](~/add/codesnippet/cpp/35752974-fb8e-4190-89b3-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#104](~/add/codesnippet/csharp/35752974-fb8e-4190-89b3-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#104](~/add/codesnippet/visualbasic/35752974-fb8e-4190-89b3-_1.vb)]"
  syntax:
    content: public void FillPie (System.Drawing.Brush brush, System.Drawing.Rectangle rect, float startAngle, float sweepAngle);
    parameters:
    - id: brush
      type: System.Drawing.Brush
      description: "<xref href=&quot;System.Drawing.Brush&quot;></xref>決定填滿的特性。"
    - id: rect
      type: System.Drawing.Rectangle
      description: "<xref href=&quot;System.Drawing.Rectangle&quot;></xref>結構，表示定義派形區段的來源的橢圓形之周框。"
    - id: startAngle
      type: System.Single
      description: "以度為單位的角度測量朝順時針方向從 x 軸的派形區段的第一個邊。"
    - id: sweepAngle
      type: System.Single
      description: "以度為單位的角度測量朝順時針方向從`startAngle`參數到派形區段的第二個邊。"
  overload: System.Drawing.Graphics.FillPie*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>brush</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.FillPie(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: FillPie(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: FillPie(Brush,Int32,Int32,Int32,Int32,Int32,Int32)
  nameWithType: Graphics.FillPie(Brush,Int32,Int32,Int32,Int32,Int32,Int32)
  fullName: System.Drawing.Graphics.FillPie(Brush,Int32,Int32,Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "填滿由一對座標、 寬度、 高度和兩條放射線所指定的橢圓形所定義的派形區域內部。"
  remarks: "這個方法填滿橢圓形和兩條放射線交集的弧形弧線的端點所定義的派形區域內部。 周框定義橢圓形。 包含的兩條放射線所定義的派形區段`startAngle`和`sweepAngle`參數和之間交集的那些放射線橢圓形弧線。       如果`sweepAngle`參數大於 360 度或小於-360 度，它會被視為分別是 360 度或-360 度。"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a solid red brush.  \n  \n-   Creates the location and size of a rectangle that bounds an ellipse.  \n  \n-   Defines the start angle (relative to the x axis) and the sweep angle (both in a clockwise direction).  \n  \n-   Fills the pie-shaped area of the ellipse on the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#105](~/add/codesnippet/cpp/cd01f2a4-bda4-4661-8de0-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#105](~/add/codesnippet/csharp/cd01f2a4-bda4-4661-8de0-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#105](~/add/codesnippet/visualbasic/cd01f2a4-bda4-4661-8de0-_1.vb)]"
  syntax:
    content: public void FillPie (System.Drawing.Brush brush, int x, int y, int width, int height, int startAngle, int sweepAngle);
    parameters:
    - id: brush
      type: System.Drawing.Brush
      description: "<xref href=&quot;System.Drawing.Brush&quot;></xref>決定填滿的特性。"
    - id: x
      type: System.Int32
      description: "週框定義派形區段的來源的橢圓形的矩形的左上角的 x 座標。"
    - id: y
      type: System.Int32
      description: "週框定義派形區段的來源的橢圓形的矩形的左上角的 y 座標。"
    - id: width
      type: System.Int32
      description: "週框定義派形區段的來源的橢圓形的矩形的寬度。"
    - id: height
      type: System.Int32
      description: "週框定義派形區段的來源的橢圓形的矩形的高度。"
    - id: startAngle
      type: System.Int32
      description: "以度為單位的角度測量朝順時針方向從 x 軸的派形區段的第一個邊。"
    - id: sweepAngle
      type: System.Int32
      description: "以度為單位的角度測量朝順時針方向從`startAngle`參數到派形區段的第二個邊。"
  overload: System.Drawing.Graphics.FillPie*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>brush</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.FillPie(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  id: FillPie(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: FillPie(Brush,Single,Single,Single,Single,Single,Single)
  nameWithType: Graphics.FillPie(Brush,Single,Single,Single,Single,Single,Single)
  fullName: System.Drawing.Graphics.FillPie(Brush,Single,Single,Single,Single,Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "填滿由一對座標、 寬度、 高度和兩條放射線所指定的橢圓形所定義的派形區域內部。"
  remarks: "這個方法填滿橢圓形和兩條放射線交集的弧形弧線的端點所定義的派形區域內部。 周框定義橢圓形。 包含的兩條放射線所定義的派形區段`startAngle`和`sweepAngle`參數，以及這些放射線橢圓形交集之間的弧度。       如果`sweepAngle`參數大於 360 度或小於-360 度，它會被視為分別是 360 度或-360 度。"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a solid red brush.  \n  \n-   Creates the location and size of a rectangle that bounds an ellipse.  \n  \n-   Defines the start angle (relative to the x axis) and the sweep angle (both in a clockwise direction).  \n  \n-   Fills the pie-shaped area of the ellipse on the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#106](~/add/codesnippet/cpp/696347c5-468c-4f10-8ec4-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#106](~/add/codesnippet/csharp/696347c5-468c-4f10-8ec4-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#106](~/add/codesnippet/visualbasic/696347c5-468c-4f10-8ec4-_1.vb)]"
  syntax:
    content: public void FillPie (System.Drawing.Brush brush, float x, float y, float width, float height, float startAngle, float sweepAngle);
    parameters:
    - id: brush
      type: System.Drawing.Brush
      description: "<xref href=&quot;System.Drawing.Brush&quot;></xref>決定填滿的特性。"
    - id: x
      type: System.Single
      description: "週框定義派形區段的來源的橢圓形的矩形的左上角的 x 座標。"
    - id: y
      type: System.Single
      description: "週框定義派形區段的來源的橢圓形的矩形的左上角的 y 座標。"
    - id: width
      type: System.Single
      description: "週框定義派形區段的來源的橢圓形的矩形的寬度。"
    - id: height
      type: System.Single
      description: "週框定義派形區段的來源的橢圓形的矩形的高度。"
    - id: startAngle
      type: System.Single
      description: "以度為單位的角度測量朝順時針方向從 x 軸的派形區段的第一個邊。"
    - id: sweepAngle
      type: System.Single
      description: "以度為單位的角度測量朝順時針方向從`startAngle`參數到派形區段的第二個邊。"
  overload: System.Drawing.Graphics.FillPie*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>brush</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.Point[])
  id: FillPolygon(System.Drawing.Brush,System.Drawing.Point[])
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: FillPolygon(Brush,Point[])
  nameWithType: Graphics.FillPolygon(Brush,Point[])
  fullName: System.Drawing.Graphics.FillPolygon(Brush,Point[])
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "填滿指定的點陣列所定義的多邊形內部<xref href=&quot;System.Drawing.Point&quot;></xref>結構。"
  remarks: "每個陣列中的兩個連續點指定多邊形的一邊。 此外，如果不重疊的最後一個點和第一個點，它們會指定多邊形的右端。"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a solid blue brush.  \n  \n-   Creates an array of seven points to define a polygon.  \n  \n-   Fills the polygonal area on the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#107](~/add/codesnippet/cpp/8c42bd4c-a5b4-4787-a3af-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#107](~/add/codesnippet/csharp/8c42bd4c-a5b4-4787-a3af-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#107](~/add/codesnippet/visualbasic/8c42bd4c-a5b4-4787-a3af-_1.vb)]"
  syntax:
    content: public void FillPolygon (System.Drawing.Brush brush, System.Drawing.Point[] points);
    parameters:
    - id: brush
      type: System.Drawing.Brush
      description: "<xref href=&quot;System.Drawing.Brush&quot;></xref>決定填滿的特性。"
    - id: points
      type: System.Drawing.Point[]
      description: "陣列<xref href=&quot;System.Drawing.Point&quot;></xref>結構，表示要填滿的多邊形的頂點。"
  overload: System.Drawing.Graphics.FillPolygon*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>brush</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>points</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.PointF[])
  id: FillPolygon(System.Drawing.Brush,System.Drawing.PointF[])
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: FillPolygon(Brush,PointF[])
  nameWithType: Graphics.FillPolygon(Brush,PointF[])
  fullName: System.Drawing.Graphics.FillPolygon(Brush,PointF[])
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "填滿指定的點陣列所定義的多邊形內部<xref href=&quot;System.Drawing.PointF&quot;></xref>結構。"
  remarks: "每個陣列中的兩個連續點指定多邊形的一邊。 此外，如果不重疊的最後一個點和第一個點，它們會指定多邊形的右端。"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a solid blue brush.  \n  \n-   Creates an array of seven points to define a polygon.  \n  \n-   Fills the polygonal area on the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#109](~/add/codesnippet/cpp/ed54e036-19c0-4e81-8255-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#109](~/add/codesnippet/csharp/ed54e036-19c0-4e81-8255-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#109](~/add/codesnippet/visualbasic/ed54e036-19c0-4e81-8255-_1.vb)]"
  syntax:
    content: public void FillPolygon (System.Drawing.Brush brush, System.Drawing.PointF[] points);
    parameters:
    - id: brush
      type: System.Drawing.Brush
      description: "<xref href=&quot;System.Drawing.Brush&quot;></xref>決定填滿的特性。"
    - id: points
      type: System.Drawing.PointF[]
      description: "陣列<xref href=&quot;System.Drawing.PointF&quot;></xref>結構，表示要填滿的多邊形的頂點。"
  overload: System.Drawing.Graphics.FillPolygon*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>brush</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>points</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode)
  id: FillPolygon(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: FillPolygon(Brush,Point[],FillMode)
  nameWithType: Graphics.FillPolygon(Brush,Point[],FillMode)
  fullName: System.Drawing.Graphics.FillPolygon(Brush,Point[],FillMode)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "填滿指定的點陣列所定義的多邊形內部<xref href=&quot;System.Drawing.Point&quot;></xref>結構使用指定的填滿模式。"
  remarks: "每個陣列中的兩個連續點指定多邊形的一邊。 此外，如果不重疊的最後一個點和第一個點，它們會指定多邊形的右端。"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a solid blue brush.  \n  \n-   Creates an array of seven points to define a polygon.  \n  \n-   Sets the fill mode to <xref:System.Drawing.Drawing2D.FillMode>.  \n  \n-   Fills the polygonal area on the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#108](~/add/codesnippet/cpp/ad884b76-3209-4ec3-b1c6-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#108](~/add/codesnippet/csharp/ad884b76-3209-4ec3-b1c6-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#108](~/add/codesnippet/visualbasic/ad884b76-3209-4ec3-b1c6-_1.vb)]"
  syntax:
    content: public void FillPolygon (System.Drawing.Brush brush, System.Drawing.Point[] points, System.Drawing.Drawing2D.FillMode fillMode);
    parameters:
    - id: brush
      type: System.Drawing.Brush
      description: "<xref href=&quot;System.Drawing.Brush&quot;></xref>決定填滿的特性。"
    - id: points
      type: System.Drawing.Point[]
      description: "陣列<xref href=&quot;System.Drawing.Point&quot;></xref>結構，表示要填滿的多邊形的頂點。"
    - id: fillMode
      type: System.Drawing.Drawing2D.FillMode
      description: "成員的<xref href=&quot;System.Drawing.Drawing2D.FillMode&quot;></xref>列舉型別，決定填滿的樣式。"
  overload: System.Drawing.Graphics.FillPolygon*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>brush</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>points</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode)
  id: FillPolygon(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: FillPolygon(Brush,PointF[],FillMode)
  nameWithType: Graphics.FillPolygon(Brush,PointF[],FillMode)
  fullName: System.Drawing.Graphics.FillPolygon(Brush,PointF[],FillMode)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "填滿指定的點陣列所定義的多邊形內部<xref href=&quot;System.Drawing.PointF&quot;></xref>結構使用指定的填滿模式。"
  remarks: "每個陣列中的兩個連續點指定多邊形的一邊。 此外，如果不重疊的最後一個點和第一個點，它們會指定多邊形的右端。"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following action:  \n  \n-   Creates a solid blue brush.  \n  \n-   Creates an array of seven points to define a polygon.  \n  \n-   Sets the fill mode to <xref:System.Drawing.Drawing2D.FillMode>.  \n  \n-   Fills the polygonal area on the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#110](~/add/codesnippet/cpp/62d0b4ff-f244-4431-9034-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#110](~/add/codesnippet/csharp/62d0b4ff-f244-4431-9034-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#110](~/add/codesnippet/visualbasic/62d0b4ff-f244-4431-9034-_1.vb)]"
  syntax:
    content: public void FillPolygon (System.Drawing.Brush brush, System.Drawing.PointF[] points, System.Drawing.Drawing2D.FillMode fillMode);
    parameters:
    - id: brush
      type: System.Drawing.Brush
      description: "<xref href=&quot;System.Drawing.Brush&quot;></xref>決定填滿的特性。"
    - id: points
      type: System.Drawing.PointF[]
      description: "陣列<xref href=&quot;System.Drawing.PointF&quot;></xref>結構，表示要填滿的多邊形的頂點。"
    - id: fillMode
      type: System.Drawing.Drawing2D.FillMode
      description: "成員的<xref href=&quot;System.Drawing.Drawing2D.FillMode&quot;></xref>列舉型別，決定填滿的樣式。"
  overload: System.Drawing.Graphics.FillPolygon*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>brush</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>points</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Drawing.Rectangle)
  id: FillRectangle(System.Drawing.Brush,System.Drawing.Rectangle)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: FillRectangle(Brush,Rectangle)
  nameWithType: Graphics.FillRectangle(Brush,Rectangle)
  fullName: System.Drawing.Graphics.FillRectangle(Brush,Rectangle)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "填滿之矩形所指定的內部<xref href=&quot;System.Drawing.Rectangle&quot;></xref>結構。"
  remarks: "這個方法會填入所定義的矩形內部`rect`參數，包括指定的左上角和最多的計算降低、 下邊緣。"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following action:  \n  \n-   Creates a solid blue brush.  \n  \n-   Creates a rectangle.  \n  \n-   Fills the rectangular area on the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#111](~/add/codesnippet/cpp/6be38582-3c2a-4e5e-b5a0-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#111](~/add/codesnippet/csharp/6be38582-3c2a-4e5e-b5a0-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#111](~/add/codesnippet/visualbasic/6be38582-3c2a-4e5e-b5a0-_1.vb)]"
  syntax:
    content: public void FillRectangle (System.Drawing.Brush brush, System.Drawing.Rectangle rect);
    parameters:
    - id: brush
      type: System.Drawing.Brush
      description: "<xref href=&quot;System.Drawing.Brush&quot;></xref>決定填滿的特性。"
    - id: rect
      type: System.Drawing.Rectangle
      description: "<xref href=&quot;System.Drawing.Rectangle&quot;></xref>結構，表示要填滿的矩形。"
  overload: System.Drawing.Graphics.FillRectangle*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>brush</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Drawing.RectangleF)
  id: FillRectangle(System.Drawing.Brush,System.Drawing.RectangleF)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: FillRectangle(Brush,RectangleF)
  nameWithType: Graphics.FillRectangle(Brush,RectangleF)
  fullName: System.Drawing.Graphics.FillRectangle(Brush,RectangleF)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "填滿之矩形所指定的內部<xref href=&quot;System.Drawing.RectangleF&quot;></xref>結構。"
  remarks: "這個方法會填入所定義的矩形內部`rect`參數，包括指定的左上角和最多的計算降低、 下邊緣。"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following action:  \n  \n-   Creates a solid blue brush.  \n  \n-   Creates a rectangle.  \n  \n-   Fills the rectangular area on the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#112](~/add/codesnippet/cpp/e5a08c2a-7ade-4531-a080-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#112](~/add/codesnippet/csharp/e5a08c2a-7ade-4531-a080-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#112](~/add/codesnippet/visualbasic/e5a08c2a-7ade-4531-a080-_1.vb)]"
  syntax:
    content: public void FillRectangle (System.Drawing.Brush brush, System.Drawing.RectangleF rect);
    parameters:
    - id: brush
      type: System.Drawing.Brush
      description: "<xref href=&quot;System.Drawing.Brush&quot;></xref>決定填滿的特性。"
    - id: rect
      type: System.Drawing.RectangleF
      description: "<xref href=&quot;System.Drawing.RectangleF&quot;></xref>結構，表示要填滿的矩形。"
  overload: System.Drawing.Graphics.FillRectangle*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>brush</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32)
  id: FillRectangle(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: FillRectangle(Brush,Int32,Int32,Int32,Int32)
  nameWithType: Graphics.FillRectangle(Brush,Int32,Int32,Int32,Int32)
  fullName: System.Drawing.Graphics.FillRectangle(Brush,Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "填滿由一對座標、 寬度和高度所指定的矩形內部。"
  remarks: "這個方法會填入所定義的矩形內部`x`， `y`， `width`，和`height`參數，包括指定的左上角和最多的計算降低並下邊緣。"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following action:  \n  \n-   Creates a solid blue brush.  \n  \n-   Creates the location and size of a rectangle.  \n  \n-   Fills the rectangular area on the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#113](~/add/codesnippet/cpp/146a0316-72ff-4e5e-9cbc-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#113](~/add/codesnippet/csharp/146a0316-72ff-4e5e-9cbc-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#113](~/add/codesnippet/visualbasic/146a0316-72ff-4e5e-9cbc-_1.vb)]"
  syntax:
    content: public void FillRectangle (System.Drawing.Brush brush, int x, int y, int width, int height);
    parameters:
    - id: brush
      type: System.Drawing.Brush
      description: "<xref href=&quot;System.Drawing.Brush&quot;></xref>決定填滿的特性。"
    - id: x
      type: System.Int32
      description: "要填滿之矩形左上角的 x 座標。"
    - id: y
      type: System.Int32
      description: "要填滿之矩形左上角的 y 座標。"
    - id: width
      type: System.Int32
      description: "要填滿的矩形的寬度。"
    - id: height
      type: System.Int32
      description: "要填滿的矩形的高度。"
  overload: System.Drawing.Graphics.FillRectangle*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>brush</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single)
  id: FillRectangle(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: FillRectangle(Brush,Single,Single,Single,Single)
  nameWithType: Graphics.FillRectangle(Brush,Single,Single,Single,Single)
  fullName: System.Drawing.Graphics.FillRectangle(Brush,Single,Single,Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "填滿由一對座標、 寬度和高度所指定的矩形內部。"
  remarks: "這個方法會填入所定義的矩形內部`x`， `y`， `width`，和`height`參數，包括指定的左上角和最多的計算降低並下邊緣。"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following action:  \n  \n-   Creates a solid blue brush.  \n  \n-   Creates the location and size of a rectangle.  \n  \n-   Fills the rectangular area on the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#114](~/add/codesnippet/cpp/135842c8-bb57-4e26-91ec-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#114](~/add/codesnippet/csharp/135842c8-bb57-4e26-91ec-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#114](~/add/codesnippet/visualbasic/135842c8-bb57-4e26-91ec-_1.vb)]"
  syntax:
    content: public void FillRectangle (System.Drawing.Brush brush, float x, float y, float width, float height);
    parameters:
    - id: brush
      type: System.Drawing.Brush
      description: "<xref href=&quot;System.Drawing.Brush&quot;></xref>決定填滿的特性。"
    - id: x
      type: System.Single
      description: "要填滿之矩形左上角的 x 座標。"
    - id: y
      type: System.Single
      description: "要填滿之矩形左上角的 y 座標。"
    - id: width
      type: System.Single
      description: "要填滿的矩形的寬度。"
    - id: height
      type: System.Single
      description: "要填滿的矩形的高度。"
  overload: System.Drawing.Graphics.FillRectangle*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>brush</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.FillRectangles(System.Drawing.Brush,System.Drawing.Rectangle[])
  id: FillRectangles(System.Drawing.Brush,System.Drawing.Rectangle[])
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: FillRectangles(Brush,Rectangle[])
  nameWithType: Graphics.FillRectangles(Brush,Rectangle[])
  fullName: System.Drawing.Graphics.FillRectangles(Brush,Rectangle[])
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "填滿的一系列矩形所指定的內部互相<xref href=&quot;System.Drawing.Rectangle&quot;></xref>結構。"
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following action:  \n  \n-   Creates a solid blue brush.  \n  \n-   Creates an array of three rectangles.  \n  \n-   Fills the three rectangular areas on the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#115](~/add/codesnippet/cpp/4d10e835-c952-4b03-ba4f-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#115](~/add/codesnippet/csharp/4d10e835-c952-4b03-ba4f-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#115](~/add/codesnippet/visualbasic/4d10e835-c952-4b03-ba4f-_1.vb)]"
  syntax:
    content: public void FillRectangles (System.Drawing.Brush brush, System.Drawing.Rectangle[] rects);
    parameters:
    - id: brush
      type: System.Drawing.Brush
      description: "<xref href=&quot;System.Drawing.Brush&quot;></xref>決定填滿的特性。"
    - id: rects
      type: System.Drawing.Rectangle[]
      description: "陣列<xref href=&quot;System.Drawing.Rectangle&quot;> </xref> ，此結構表示要填滿的矩形。"
  overload: System.Drawing.Graphics.FillRectangles*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>brush</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>rects</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>rects</code>為零長度陣列。"
  platform:
  - net462
- uid: System.Drawing.Graphics.FillRectangles(System.Drawing.Brush,System.Drawing.RectangleF[])
  id: FillRectangles(System.Drawing.Brush,System.Drawing.RectangleF[])
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: FillRectangles(Brush,RectangleF[])
  nameWithType: Graphics.FillRectangles(Brush,RectangleF[])
  fullName: System.Drawing.Graphics.FillRectangles(Brush,RectangleF[])
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "填滿的一系列矩形所指定的內部互相<xref href=&quot;System.Drawing.RectangleF&quot;></xref>結構。"
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following action:  \n  \n-   Creates a solid blue brush.  \n  \n-   Creates an array of three rectangles.  \n  \n-   Fills the three rectangular areas on the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#116](~/add/codesnippet/cpp/8405bee3-4e81-48b5-91a1-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#116](~/add/codesnippet/csharp/8405bee3-4e81-48b5-91a1-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#116](~/add/codesnippet/visualbasic/8405bee3-4e81-48b5-91a1-_1.vb)]"
  syntax:
    content: public void FillRectangles (System.Drawing.Brush brush, System.Drawing.RectangleF[] rects);
    parameters:
    - id: brush
      type: System.Drawing.Brush
      description: "<xref href=&quot;System.Drawing.Brush&quot;></xref>決定填滿的特性。"
    - id: rects
      type: System.Drawing.RectangleF[]
      description: "陣列<xref href=&quot;System.Drawing.RectangleF&quot;> </xref> ，此結構表示要填滿的矩形。"
  overload: System.Drawing.Graphics.FillRectangles*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>brush</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>rects</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Rects</code>為零長度陣列。"
  platform:
  - net462
- uid: System.Drawing.Graphics.FillRegion(System.Drawing.Brush,System.Drawing.Region)
  id: FillRegion(System.Drawing.Brush,System.Drawing.Region)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: FillRegion(Brush,Region)
  nameWithType: Graphics.FillRegion(Brush,Region)
  fullName: System.Drawing.Graphics.FillRegion(Brush,Region)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "填滿內部<xref href=&quot;System.Drawing.Region&quot;> </xref>。"
  remarks: "A<xref:System.Drawing.Region>是矩形和路徑所組成。</xref:System.Drawing.Region> 如果未關閉的區域，會額外的區段加入的最後一個點的第一個點，以將它關閉。"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following action:  \n  \n-   Creates a solid blue brush.  \n  \n-   Creates a rectangle.  \n  \n-   Creates a rectangular region.  \n  \n-   Fills the rectangular region on the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#117](~/add/codesnippet/cpp/m-system.drawing.graphic_13_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#117](~/add/codesnippet/csharp/m-system.drawing.graphic_13_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#117](~/add/codesnippet/visualbasic/m-system.drawing.graphic_13_1.vb)]"
  syntax:
    content: public void FillRegion (System.Drawing.Brush brush, System.Drawing.Region region);
    parameters:
    - id: brush
      type: System.Drawing.Brush
      description: "<xref href=&quot;System.Drawing.Brush&quot;></xref>決定填滿的特性。"
    - id: region
      type: System.Drawing.Region
      description: "<xref href=&quot;System.Drawing.Region&quot;></xref>表示要填滿的區域。"
  overload: System.Drawing.Graphics.FillRegion*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>brush</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>region</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.Finalize
  id: Finalize
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: Finalize()
  nameWithType: Graphics.Finalize()
  fullName: System.Drawing.Graphics.Finalize()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "允許物件嘗試釋放資源，並透過記憶體回收開始前執行其他清除作業。"
  syntax:
    content: ~Graphics ();
    parameters: []
  overload: System.Drawing.Graphics.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.Flush
  id: Flush
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: Flush()
  nameWithType: Graphics.Flush()
  fullName: System.Drawing.Graphics.Flush()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "強制執行所有暫止圖形作業，並立即傳回而不等待作業完成。"
  remarks: "這個方法會開始清除，並立即傳回而不等候任何目前正在執行的圖形作業完成。"
  syntax:
    content: public void Flush ();
    parameters: []
  overload: System.Drawing.Graphics.Flush*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.Flush(System.Drawing.Drawing2D.FlushIntention)
  id: Flush(System.Drawing.Drawing2D.FlushIntention)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: Flush(FlushIntention)
  nameWithType: Graphics.Flush(FlushIntention)
  fullName: System.Drawing.Graphics.Flush(FlushIntention)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "強制執行所有暫止圖形作業的方法，等待或不等待，依指定，以傳回作業完成之前。"
  remarks: "值為<xref:System.Drawing.Drawing2D.FlushIntention>如`intention`參數會指定此方法傳回之後立即開始排清，而值為<xref:System.Drawing.Drawing2D.FlushIntention>指定的方法，返回之前等候任何現有的作業完成之前。</xref:System.Drawing.Drawing2D.FlushIntention> </xref:System.Drawing.Drawing2D.FlushIntention>"
  syntax:
    content: public void Flush (System.Drawing.Drawing2D.FlushIntention intention);
    parameters:
    - id: intention
      type: System.Drawing.Drawing2D.FlushIntention
      description: "成員的<xref href=&quot;System.Drawing.Drawing2D.FlushIntention&quot;></xref>列舉，指定此方法會立即傳回或等待任何現有的作業完成。"
  overload: System.Drawing.Graphics.Flush*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.FromHdc(System.IntPtr)
  id: FromHdc(System.IntPtr)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: FromHdc(IntPtr)
  nameWithType: Graphics.FromHdc(IntPtr)
  fullName: System.Drawing.Graphics.FromHdc(IntPtr)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "建立新<xref href=&quot;System.Drawing.Graphics&quot;></xref>從指定的裝置內容控制代碼。"
  remarks: "您應該一律呼叫<xref:System.Drawing.Graphics.Dispose%2A>方法，以釋放<xref:System.Drawing.Graphics>和相關聯的 FromHdc 方法所建立的資源。</xref:System.Drawing.Graphics> </xref:System.Drawing.Graphics.Dispose%2A>       顯示裝置在沒有關聯的 ICM 色彩設定檔，[!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)]預設不會使用該設定檔。 若要啟用的 ICM <xref:System.Drawing.Graphics>，建構<xref:System.Drawing.Graphics>HDC 之後您將 HDC （和 ICM_ON） 傳遞給從`SetICMMode`函式。</xref:System.Drawing.Graphics> </xref:System.Drawing.Graphics> 然後由任何繪圖<xref:System.Drawing.Graphics>根據顯示裝置與相關聯的 ICM 設定檔，將會調整。</xref:System.Drawing.Graphics> 啟用 ICM 會導致效能變慢。       裝置內容 （對應模式、 邏輯單元，等等） 呼叫 FromHdc 當時的狀態可能會影響轉譯完成<xref:System.Drawing.Graphics>。</xref:System.Drawing.Graphics>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following action:  \n  \n-   Creates an internal pointer type variable `hdc` and sets it to the handle to the device context of the graphics object of the form.  \n  \n-   Creates a new graphics object using `hdc`.  \n  \n-   Draws a rectangle with the new graphics object (on the screen).  \n  \n-   Releases the new graphics object using `hdc`.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#118](~/add/codesnippet/cpp/m-system.drawing.graphic_31_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#118](~/add/codesnippet/csharp/m-system.drawing.graphic_31_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#118](~/add/codesnippet/visualbasic/m-system.drawing.graphic_31_1.vb)]"
  syntax:
    content: public static System.Drawing.Graphics FromHdc (IntPtr hdc);
    parameters:
    - id: hdc
      type: System.IntPtr
      description: "裝置內容的控制代碼。"
    return:
      type: System.Drawing.Graphics
      description: "這個方法會傳回新<xref href=&quot;System.Drawing.Graphics&quot;></xref>指定之裝置內容。"
  overload: System.Drawing.Graphics.FromHdc*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.FromHdc(System.IntPtr,System.IntPtr)
  id: FromHdc(System.IntPtr,System.IntPtr)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: FromHdc(IntPtr,IntPtr)
  nameWithType: Graphics.FromHdc(IntPtr,IntPtr)
  fullName: System.Drawing.Graphics.FromHdc(IntPtr,IntPtr)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "建立新<xref href=&quot;System.Drawing.Graphics&quot;></xref>從裝置內容和裝置控制代碼指定的控制代碼。"
  remarks: "您應該一律呼叫<xref:System.Drawing.Graphics.Dispose%2A>方法，以釋放<xref:System.Drawing.Graphics>和相關聯的 FromHdc 方法所建立的資源。</xref:System.Drawing.Graphics> </xref:System.Drawing.Graphics.Dispose%2A>       顯示裝置在沒有關聯的 ICM 色彩設定檔，[!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)]預設不會使用該設定檔。 若要啟用的 ICM <xref:System.Drawing.Graphics>，建構<xref:System.Drawing.Graphics>HDC 之後您將 HDC （和 ICM_ON） 傳遞給從`SetICMMode`函式。</xref:System.Drawing.Graphics> </xref:System.Drawing.Graphics> 然後由任何繪圖<xref:System.Drawing.Graphics>根據顯示裝置與相關聯的 ICM 設定檔，將會調整。</xref:System.Drawing.Graphics> 啟用 ICM 會導致效能變慢。       裝置內容 （對應模式、 邏輯單元，等等） 呼叫 FromHdc 當時的狀態可能會影響轉譯完成<xref:System.Drawing.Graphics>。</xref:System.Drawing.Graphics>       裝置控制代碼通常用來查詢特定的印表機功能。"
  syntax:
    content: public static System.Drawing.Graphics FromHdc (IntPtr hdc, IntPtr hdevice);
    parameters:
    - id: hdc
      type: System.IntPtr
      description: "裝置內容的控制代碼。"
    - id: hdevice
      type: System.IntPtr
      description: "裝置的控制代碼。"
    return:
      type: System.Drawing.Graphics
      description: "這個方法會傳回新<xref href=&quot;System.Drawing.Graphics&quot;></xref>指定的裝置內容和裝置。"
  overload: System.Drawing.Graphics.FromHdc*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.FromHdcInternal(System.IntPtr)
  id: FromHdcInternal(System.IntPtr)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: FromHdcInternal(IntPtr)
  nameWithType: Graphics.FromHdcInternal(IntPtr)
  fullName: System.Drawing.Graphics.FromHdcInternal(IntPtr)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "傳回<xref href=&quot;System.Drawing.Graphics&quot;></xref>指定之裝置內容。"
  remarks: "不應該使用這個方法。"
  syntax:
    content: public static System.Drawing.Graphics FromHdcInternal (IntPtr hdc);
    parameters:
    - id: hdc
      type: System.IntPtr
      description: "裝置內容的控制代碼。"
    return:
      type: System.Drawing.Graphics
      description: "A <xref href=&quot;System.Drawing.Graphics&quot;> </xref>指定之裝置內容。"
  overload: System.Drawing.Graphics.FromHdcInternal*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.FromHwnd(System.IntPtr)
  id: FromHwnd(System.IntPtr)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: FromHwnd(IntPtr)
  nameWithType: Graphics.FromHwnd(IntPtr)
  fullName: System.Drawing.Graphics.FromHwnd(IntPtr)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "建立新<xref href=&quot;System.Drawing.Graphics&quot;></xref>從指定的視窗控制代碼。"
  remarks: "您應該一律呼叫<xref:System.Drawing.Graphics.Dispose%2A>方法，以釋放<xref:System.Drawing.Graphics>和相關聯的 FromHwnd 方法所建立的資源。</xref:System.Drawing.Graphics> </xref:System.Drawing.Graphics.Dispose%2A>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler, as well as `thisForm`, the <xref:System.Windows.Forms.Form> for the example. The code performs the following actions:  \n  \n-   Creates a new internal pointer variable `hwnd` and sets it to the handle of the example's form.  \n  \n-   Creates a new <xref:System.Drawing.Graphics> from the handle.  \n  \n-   Draws a rectangle to the new <xref:System.Drawing.Graphics> using a red pen.  \n  \n-   Disposes the new <xref:System.Drawing.Graphics>.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#119](~/add/codesnippet/cpp/m-system.drawing.graphic_17_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#119](~/add/codesnippet/csharp/m-system.drawing.graphic_17_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#119](~/add/codesnippet/visualbasic/m-system.drawing.graphic_17_1.vb)]"
  syntax:
    content: public static System.Drawing.Graphics FromHwnd (IntPtr hwnd);
    parameters:
    - id: hwnd
      type: System.IntPtr
      description: "視窗的控制代碼。"
    return:
      type: System.Drawing.Graphics
      description: "這個方法會傳回新<xref href=&quot;System.Drawing.Graphics&quot;></xref>指定之視窗控制代碼。"
  overload: System.Drawing.Graphics.FromHwnd*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.FromHwndInternal(System.IntPtr)
  id: FromHwndInternal(System.IntPtr)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: FromHwndInternal(IntPtr)
  nameWithType: Graphics.FromHwndInternal(IntPtr)
  fullName: System.Drawing.Graphics.FromHwndInternal(IntPtr)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "建立新<xref href=&quot;System.Drawing.Graphics&quot;></xref>針對指定的 windows 控制代碼。"
  remarks: "不應該使用這個方法。"
  syntax:
    content: public static System.Drawing.Graphics FromHwndInternal (IntPtr hwnd);
    parameters:
    - id: hwnd
      type: System.IntPtr
      description: "視窗的控制代碼。"
    return:
      type: System.Drawing.Graphics
      description: "A <xref href=&quot;System.Drawing.Graphics&quot;> </xref>指定之視窗控制代碼。"
  overload: System.Drawing.Graphics.FromHwndInternal*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.FromImage(System.Drawing.Image)
  id: FromImage(System.Drawing.Image)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: FromImage(Image)
  nameWithType: Graphics.FromImage(Image)
  fullName: System.Drawing.Graphics.FromImage(Image)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "建立新<xref href=&quot;System.Drawing.Graphics&quot;></xref>從指定<xref href=&quot;System.Drawing.Image&quot;> </xref>。"
  remarks: "如果影像具有索引像素格式，這個方法會擲回的例外狀況訊息、 「 從具有索引像素格式的映像不能建立圖形物件 」。 下列清單中，會顯示索引像素格式。      - <xref:System.Drawing.Imaging.PixelFormat>- <xref:System.Drawing.Imaging.PixelFormat>-<xref:System.Drawing.Imaging.PixelFormat>可以藉由將索引的映像儲存為另一種格式<xref:System.Drawing.Image.Save%28System.String%2CSystem.Drawing.Imaging.ImageFormat%29>方法，然後擷取<xref:System.Drawing.Graphics>新映像的物件。</xref:System.Drawing.Graphics> </xref:System.Drawing.Image.Save%28System.String%2CSystem.Drawing.Imaging.ImageFormat%29> </xref:System.Drawing.Imaging.PixelFormat> </xref:System.Drawing.Imaging.PixelFormat> </xref:System.Drawing.Imaging.PixelFormat>       這個方法也會擲回例外狀況如果該映像包含任何下列的像素格式。      - <xref:System.Drawing.Imaging.PixelFormat>- <xref:System.Drawing.Imaging.PixelFormat>- <xref:System.Drawing.Imaging.PixelFormat>-<xref:System.Drawing.Imaging.PixelFormat>應該一律呼叫<xref:System.Drawing.Graphics.Dispose%2A>方法，以釋放<xref:System.Drawing.Graphics>和相關聯的 FromImage 方法所建立的資源。</xref:System.Drawing.Graphics> </xref:System.Drawing.Graphics.Dispose%2A> </xref:System.Drawing.Imaging.PixelFormat> </xref:System.Drawing.Imaging.PixelFormat> </xref:System.Drawing.Imaging.PixelFormat> </xref:System.Drawing.Imaging.PixelFormat>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following action:  \n  \n-   Creates an <xref:System.Drawing.Image> from a graphics file SampImag.jpg in the example folder.  \n  \n-   Creates a <xref:System.Drawing.Graphics> from the <xref:System.Drawing.Image>.  \n  \n-   Alters the image by filling a rectangle within it.  \n  \n-   Draws the <xref:System.Drawing.Image> to the screen.  \n  \n-   Releases the created <xref:System.Drawing.Graphics>.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#120](~/add/codesnippet/cpp/m-system.drawing.graphic_8_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#120](~/add/codesnippet/csharp/m-system.drawing.graphic_8_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#120](~/add/codesnippet/visualbasic/m-system.drawing.graphic_8_1.vb)]"
  syntax:
    content: public static System.Drawing.Graphics FromImage (System.Drawing.Image image);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "<xref href=&quot;System.Drawing.Image&quot;></xref>用來建立新<xref href=&quot;System.Drawing.Graphics&quot;> </xref>。"
    return:
      type: System.Drawing.Graphics
      description: "這個方法會傳回新<xref href=&quot;System.Drawing.Graphics&quot;></xref>指定<xref href=&quot;System.Drawing.Image&quot;> </xref>。"
  overload: System.Drawing.Graphics.FromImage*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>image</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Exception
    commentId: T:System.Exception
    description: "<code>image</code>具有索引像素格式，或其格式是未定義。"
  platform:
  - net462
- uid: System.Drawing.Graphics.GetContextInfo
  id: GetContextInfo
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: GetContextInfo()
  nameWithType: Graphics.GetContextInfo()
  fullName: System.Drawing.Graphics.GetContextInfo()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "取得累計圖形內容。"
  remarks: "傳回值是物件陣列，其中第一個項目包含的累積的裁剪區域，而第二個元素包含累積轉譯/轉換的矩陣。"
  syntax:
    content: public object GetContextInfo ();
    parameters: []
    return:
      type: System.Object
      description: "<xref:System.Object>代表累計圖形內容。</xref:System.Object>"
  overload: System.Drawing.Graphics.GetContextInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.GetHalftonePalette
  id: GetHalftonePalette
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: GetHalftonePalette()
  nameWithType: Graphics.GetHalftonePalette()
  fullName: System.Drawing.Graphics.GetHalftonePalette()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "取得目前的 Windows 半色調調色盤的控制代碼。"
  remarks: "GetHalftonePalette 方法的目的是要啟用[!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)]顯示器使用的每個像素的 8 位元時，產生更好的品質半色調。 若要顯示使用半色調調色盤的映像，請使用下列程序。"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Defines interoperability <xref:System.Runtime.InteropServices.DllImportAttribute> attributes for the Windows DLL file gdi32.dll, which contains the necessary [!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)] functions.  \n  \n-   Defines the `SelectPalette` and `RealizePalette` functions in that DLL as external.  \n  \n-   Creates an image from an existing image file SampImag.jpg (which must be in the same folder as the example code file) and draws the image to the screen.  \n  \n-   Creates internal pointer type variables and sets their values to the handle to the graphics object and to the current Windows halftone palette, respectively.  \n  \n-   Selects and realizes the halftone palette.  \n  \n-   Creates a new graphics object using the `hdc` parameter.  \n  \n-   Draws the image again.  \n  \n-   Releases the handle to the device context.  \n  \n The result is two renderings of the sample image: one with the 16-bit palette and one with the 8-bit palette.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#121](~/add/codesnippet/cpp/m-system.drawing.graphic_40_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#121](~/add/codesnippet/csharp/m-system.drawing.graphic_40_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#121](~/add/codesnippet/visualbasic/m-system.drawing.graphic_40_1.vb)]"
  syntax:
    content: public static IntPtr GetHalftonePalette ();
    parameters: []
    return:
      type: System.IntPtr
      description: "指定調色盤的控制代碼的內部指標。"
  overload: System.Drawing.Graphics.GetHalftonePalette*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.GetHdc
  id: GetHdc
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: GetHdc()
  nameWithType: Graphics.GetHdc()
  fullName: System.Drawing.Graphics.GetHdc()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "取得與此相關聯的裝置內容的控制代碼<xref href=&quot;System.Drawing.Graphics&quot;> </xref>。"
  remarks: "裝置內容是根據 Windows 結構[!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)]，定義一組圖形物件和其相關聯的屬性，以及會影響輸出的圖形化模式。 這個方法會傳回字型的裝置內容。 因為未選取字型，則呼叫<xref:System.Drawing.Font.FromHdc%2A>方法使用 GetHdc 方法所傳回的控制代碼將會失敗。</xref:System.Drawing.Font.FromHdc%2A>       呼叫 GetHdc 和<xref:System.Drawing.Graphics.ReleaseHdc%2A>方法必須出現在配對。</xref:System.Drawing.Graphics.ReleaseHdc%2A> 在 GetHdc 範圍期間和<xref:System.Drawing.Graphics.ReleaseHdc%2A>方法組，您通常只對進行呼叫[!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)]函式。</xref:System.Drawing.Graphics.ReleaseHdc%2A> 呼叫，範圍對[!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)]方法<xref:System.Drawing.Graphics>產生`hdc`參數失敗，並`ObjectBusy`錯誤。</xref:System.Drawing.Graphics> 此外，[!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)]會忽略所做的狀態變更<xref:System.Drawing.Graphics>的`hdc`後續作業中的參數。</xref:System.Drawing.Graphics>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The example illustrates calling a Windows [!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)] function to perform the same task as a [!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)] <xref:System.Drawing.Graphics> method. The code performs the following actions:  \n  \n-   Defines the interoperability <xref:System.Runtime.InteropServices.DllImportAttribute> attribute for the Windows DLL file gdi32.dll. This DLL contains the desired [!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)] function.  \n  \n-   Defines the <xref:System.Drawing.Rectangle> function in that DLL as external.  \n  \n-   Creates a red pen.  \n  \n-   With the pen, draws a rectangle to the screen using the [!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)] <xref:System.Drawing.Graphics.DrawRectangle%2A> method.  \n  \n-   Defines an internal pointer type variable `hdc` and sets its value to the handle to the device context of the form.  \n  \n-   Draws a rectangle to the screen using the [!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)] <xref:System.Drawing.Rectangle> function.  \n  \n-   Releases the device context represented by the `hdc` parameter.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#122](~/add/codesnippet/cpp/m-system.drawing.graphic_12_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#122](~/add/codesnippet/csharp/m-system.drawing.graphic_12_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#122](~/add/codesnippet/visualbasic/m-system.drawing.graphic_12_1.vb)]"
  syntax:
    content: public IntPtr GetHdc ();
    parameters: []
    return:
      type: System.IntPtr
      description: "與此相關聯的裝置內容控制代碼<xref href=&quot;System.Drawing.Graphics&quot;> </xref>。"
  overload: System.Drawing.Graphics.GetHdc*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.GetNearestColor(System.Drawing.Color)
  id: GetNearestColor(System.Drawing.Color)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: GetNearestColor(Color)
  nameWithType: Graphics.GetNearestColor(Color)
  fullName: System.Drawing.Graphics.GetNearestColor(Color)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "取得指定的最接近色彩<xref href=&quot;System.Drawing.Color&quot;></xref>結構。"
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates an arbitrary color with ARGB coordinates (255, 165, 63, 136).  \n  \n-   Creates a solid brush and sets its color to the specified color.  \n  \n-   Fills an ellipse using the arbitrary color.  \n  \n-   Creates a second color and sets its value to the nearest system ARGB color.  \n  \n-   Fills a second ellipse with this color.  \n  \n The result is two ellipses: the first drawn with the arbitrary specified color and the second drawn with the system color nearest the specified color.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#123](~/add/codesnippet/cpp/m-system.drawing.graphic_43_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#123](~/add/codesnippet/csharp/m-system.drawing.graphic_43_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#123](~/add/codesnippet/visualbasic/m-system.drawing.graphic_43_1.vb)]"
  syntax:
    content: public System.Drawing.Color GetNearestColor (System.Drawing.Color color);
    parameters:
    - id: color
      type: System.Drawing.Color
      description: "<xref href=&quot;System.Drawing.Color&quot;></xref>結構，用來尋找相符項目。"
    return:
      type: System.Drawing.Color
      description: "A <xref href=&quot;System.Drawing.Color&quot;> </xref>結構，表示為與指定的最接近的色彩<code> color </code>參數。"
  overload: System.Drawing.Graphics.GetNearestColor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.InterpolationMode
  id: InterpolationMode
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: InterpolationMode
  nameWithType: Graphics.InterpolationMode
  fullName: System.Drawing.Graphics.InterpolationMode
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "取得或設定與此相關聯的插補模式<xref href=&quot;System.Drawing.Graphics&quot;> </xref>。"
  remarks: "插補模式可讓您判斷兩個之間的中間值計算端點。"
  syntax:
    content: public System.Drawing.Drawing2D.InterpolationMode InterpolationMode { get; set; }
    return:
      type: System.Drawing.Drawing2D.InterpolationMode
      description: "其中一個<xref href=&quot;System.Drawing.Drawing2D.InterpolationMode&quot;></xref>值。"
  overload: System.Drawing.Graphics.InterpolationMode*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.IntersectClip(System.Drawing.Rectangle)
  id: IntersectClip(System.Drawing.Rectangle)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: IntersectClip(Rectangle)
  nameWithType: Graphics.IntersectClip(Rectangle)
  fullName: System.Drawing.Graphics.IntersectClip(Rectangle)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "這個的裁剪區域更新<xref href=&quot;System.Drawing.Graphics&quot;></xref>為目前裁剪區域和所指定的交集<xref href=&quot;System.Drawing.Rectangle&quot;></xref>結構。"
  remarks: "這個方法會將指派給<xref:System.Drawing.Graphics.Clip%2A>屬性這<xref:System.Drawing.Graphics>為目前裁剪區域和所指定的矩形的交集的區域`rect`參數。</xref:System.Drawing.Graphics> </xref:System.Drawing.Graphics.Clip%2A>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a rectangle with upper-left corner at (0, 0) and sets the clipping region to this rectangle.  \n  \n-   Creates a second rectangle with upper-left corner at (100, 100) and sets the clipping region to the intersection of this rectangle and the current clipping region (the first rectangle).  \n  \n-   Fills a large rectangle that includes both previous rectangles with a solid blue brush.  \n  \n-   Resets the clipping region to infinite.  \n  \n-   Draws rectangles around the two clipping regions. It uses a black pen for the first clipping rectangle and a red pen for the second clipping region.  \n  \n The result is that only the intersection of the two rectangles is filled with blue.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#124](~/add/codesnippet/cpp/m-system.drawing.graphic_32_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#124](~/add/codesnippet/csharp/m-system.drawing.graphic_32_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#124](~/add/codesnippet/visualbasic/m-system.drawing.graphic_32_1.vb)]"
  syntax:
    content: public void IntersectClip (System.Drawing.Rectangle rect);
    parameters:
    - id: rect
      type: System.Drawing.Rectangle
      description: "<xref href=&quot;System.Drawing.Rectangle&quot;></xref>要與目前裁剪區域交集的結構。"
  overload: System.Drawing.Graphics.IntersectClip*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.IntersectClip(System.Drawing.RectangleF)
  id: IntersectClip(System.Drawing.RectangleF)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: IntersectClip(RectangleF)
  nameWithType: Graphics.IntersectClip(RectangleF)
  fullName: System.Drawing.Graphics.IntersectClip(RectangleF)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "這個的裁剪區域更新<xref href=&quot;System.Drawing.Graphics&quot;></xref>為目前裁剪區域和所指定的交集<xref href=&quot;System.Drawing.RectangleF&quot;></xref>結構。"
  remarks: "這個方法會將指派給<xref:System.Drawing.Graphics.Clip%2A>屬性這<xref:System.Drawing.Graphics>為目前裁剪區域和所指定的矩形的交集的區域`rect`參數。</xref:System.Drawing.Graphics> </xref:System.Drawing.Graphics.Clip%2A>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a rectangle with upper-left corner at (0, 0) and sets the clipping region to this rectangle.  \n  \n-   Creates a second rectangle with upper-left corner at (100, 100) and sets the clipping region to the intersection of this rectangle and the current clipping region (the first rectangle).  \n  \n-   Fills a large rectangle that includes both previous rectangles with a solid blue brush.  \n  \n-   Resets the clipping region to infinite.  \n  \n-   Draws rectangles around the two clipping regions. It uses a black pen for the first clipping rectangle and a red pen for the second clipping region.  \n  \n The result is that only the intersection of the two rectangles is filled with blue.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#125](~/add/codesnippet/cpp/m-system.drawing.graphic_36_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#125](~/add/codesnippet/csharp/m-system.drawing.graphic_36_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#125](~/add/codesnippet/visualbasic/m-system.drawing.graphic_36_1.vb)]"
  syntax:
    content: public void IntersectClip (System.Drawing.RectangleF rect);
    parameters:
    - id: rect
      type: System.Drawing.RectangleF
      description: "<xref href=&quot;System.Drawing.RectangleF&quot;></xref>要與目前裁剪區域交集的結構。"
  overload: System.Drawing.Graphics.IntersectClip*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.IntersectClip(System.Drawing.Region)
  id: IntersectClip(System.Drawing.Region)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: IntersectClip(Region)
  nameWithType: Graphics.IntersectClip(Region)
  fullName: System.Drawing.Graphics.IntersectClip(Region)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "這個的裁剪區域更新<xref href=&quot;System.Drawing.Graphics&quot;></xref>為目前裁剪區域和所指定的交集<xref href=&quot;System.Drawing.Region&quot;> </xref>。"
  remarks: "這個方法會將指派給<xref:System.Drawing.Graphics.Clip%2A>屬性這<xref:System.Drawing.Graphics>表示由目前裁剪區域和所指定區域交集的區域`region`參數。</xref:System.Drawing.Graphics> </xref:System.Drawing.Graphics.Clip%2A>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a rectangle with upper-left corner at (0, 0).  \n  \n-   Creates a region and sets it to the rectangle, and sets the clipping region to this region.  \n  \n-   Creates a second rectangle with upper-left corner at (100, 100).  \n  \n-   Creates a region and sets it to the second rectangle, and sets the clipping region to the intersection of this region and the current clipping region (the first rectangle) using a combine mode of <xref:System.Drawing.Drawing2D.CombineMode>.  \n  \n-   Fills a large rectangle that includes both previous regions with a solid blue brush.  \n  \n-   Resets the clipping region to infinite.  \n  \n-   Draws rectangles around the two clipping regions. It uses a black pen for the first clipping region and a red pen for the second clipping region.  \n  \n The result is that only the intersection of the two regions is filled with blue.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#126](~/add/codesnippet/cpp/m-system.drawing.graphic_9_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#126](~/add/codesnippet/csharp/m-system.drawing.graphic_9_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#126](~/add/codesnippet/visualbasic/m-system.drawing.graphic_9_1.vb)]"
  syntax:
    content: public void IntersectClip (System.Drawing.Region region);
    parameters:
    - id: region
      type: System.Drawing.Region
      description: "<xref href=&quot;System.Drawing.Region&quot;></xref>若要與目前區域交集。"
  overload: System.Drawing.Graphics.IntersectClip*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.IsClipEmpty
  id: IsClipEmpty
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: IsClipEmpty
  nameWithType: Graphics.IsClipEmpty
  fullName: System.Drawing.Graphics.IsClipEmpty
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "取得值，指出是否的裁剪區域<xref href=&quot;System.Drawing.Graphics&quot;></xref>是空的。"
  syntax:
    content: public bool IsClipEmpty { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果這個裁剪區域<xref href=&quot;System.Drawing.Graphics&quot;></xref>是空的否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Drawing.Graphics.IsClipEmpty*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.IsVisible(System.Drawing.Point)
  id: IsVisible(System.Drawing.Point)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: IsVisible(Point)
  nameWithType: Graphics.IsVisible(Point)
  fullName: System.Drawing.Graphics.IsVisible(Point)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "指出是否指定<xref href=&quot;System.Drawing.Point&quot;></xref>結構是否包含在這個的可見裁剪區域<xref href=&quot;System.Drawing.Graphics&quot;> </xref>。"
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a rectangular clipping region and sets it as the clipping region for the graphics object of the form using <xref:System.Drawing.Drawing2D.CombineMode>.  \n  \n-   Creates two points, one inside the clipping region and one outside.  \n  \n-   Tests each of the points for visibility and draws only the visible one.  \n  \n The result is one small red circle, which is within the clip region.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#127](~/add/codesnippet/cpp/m-system.drawing.graphic_6_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#127](~/add/codesnippet/csharp/m-system.drawing.graphic_6_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#127](~/add/codesnippet/visualbasic/m-system.drawing.graphic_6_1.vb)]"
  syntax:
    content: public bool IsVisible (System.Drawing.Point point);
    parameters:
    - id: point
      type: System.Drawing.Point
      description: "<xref href=&quot;System.Drawing.Point&quot;></xref>要測試可視性的結構。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果所指定的點<code> point </code>參數內含的可見裁剪區域<xref href=&quot;System.Drawing.Graphics&quot;> </xref>，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Drawing.Graphics.IsVisible*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.IsVisible(System.Drawing.PointF)
  id: IsVisible(System.Drawing.PointF)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: IsVisible(PointF)
  nameWithType: Graphics.IsVisible(PointF)
  fullName: System.Drawing.Graphics.IsVisible(PointF)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "指出是否指定<xref href=&quot;System.Drawing.PointF&quot;></xref>結構是否包含在這個的可見裁剪區域<xref href=&quot;System.Drawing.Graphics&quot;> </xref>。"
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a rectangular clipping region and sets it as the clipping region for the graphics of the form using <xref:System.Drawing.Drawing2D.CombineMode>.  \n  \n-   Creates two points, one inside the clipping region and one outside.  \n  \n-   Tests each of the points for visibility and draws only the visible one.  \n  \n The result is one small red circle, which is within the clip region.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#128](~/add/codesnippet/cpp/m-system.drawing.graphic_39_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#128](~/add/codesnippet/csharp/m-system.drawing.graphic_39_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#128](~/add/codesnippet/visualbasic/m-system.drawing.graphic_39_1.vb)]"
  syntax:
    content: public bool IsVisible (System.Drawing.PointF point);
    parameters:
    - id: point
      type: System.Drawing.PointF
      description: "<xref href=&quot;System.Drawing.PointF&quot;></xref>要測試可視性的結構。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果所指定的點<code> point </code>參數內含的可見裁剪區域<xref href=&quot;System.Drawing.Graphics&quot;> </xref>，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Drawing.Graphics.IsVisible*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.IsVisible(System.Drawing.Rectangle)
  id: IsVisible(System.Drawing.Rectangle)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: IsVisible(Rectangle)
  nameWithType: Graphics.IsVisible(Rectangle)
  fullName: System.Drawing.Graphics.IsVisible(Rectangle)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "指出所指定的矩形是否<xref href=&quot;System.Drawing.Rectangle&quot;></xref>結構是否包含在這個的可見裁剪區域<xref href=&quot;System.Drawing.Graphics&quot;> </xref>。"
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a rectangular clipping region and sets it as the clipping region for the graphics object of the form using<xref:System.Drawing.Drawing2D.CombineMode>.  \n  \n-   Creates the location and size of two rectangles, one inside the clipping region and one outside.  \n  \n-   Tests each of the rectangles for visibility and draws only the visible one.  \n  \n The result is one small red rectangle, which is within the clip region.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#129](~/add/codesnippet/cpp/m-system.drawing.graphic_28_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#129](~/add/codesnippet/csharp/m-system.drawing.graphic_28_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#129](~/add/codesnippet/visualbasic/m-system.drawing.graphic_28_1.vb)]"
  syntax:
    content: public bool IsVisible (System.Drawing.Rectangle rect);
    parameters:
    - id: rect
      type: System.Drawing.Rectangle
      description: "<xref href=&quot;System.Drawing.Rectangle&quot;></xref>要測試可視性的結構。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果所指定的矩形<code> rect </code>參數內含的可見裁剪區域<xref href=&quot;System.Drawing.Graphics&quot;> </xref>，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Drawing.Graphics.IsVisible*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.IsVisible(System.Drawing.RectangleF)
  id: IsVisible(System.Drawing.RectangleF)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: IsVisible(RectangleF)
  nameWithType: Graphics.IsVisible(RectangleF)
  fullName: System.Drawing.Graphics.IsVisible(RectangleF)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "指出所指定的矩形是否<xref href=&quot;System.Drawing.RectangleF&quot;></xref>結構是否包含在這個的可見裁剪區域<xref href=&quot;System.Drawing.Graphics&quot;> </xref>。"
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a rectangular clipping region and sets it as the clipping region for the graphics object of the form using <xref:System.Drawing.Drawing2D.CombineMode>.  \n  \n-   Creates two rectangles, one inside the clipping region and one outside.  \n  \n-   Tests each of the rectangles for visibility and draws only the visible one.  \n  \n The result is one small red rectangle, which is within the clip region.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#130](~/add/codesnippet/cpp/m-system.drawing.graphic_21_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#130](~/add/codesnippet/csharp/m-system.drawing.graphic_21_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#130](~/add/codesnippet/visualbasic/m-system.drawing.graphic_21_1.vb)]"
  syntax:
    content: public bool IsVisible (System.Drawing.RectangleF rect);
    parameters:
    - id: rect
      type: System.Drawing.RectangleF
      description: "<xref href=&quot;System.Drawing.RectangleF&quot;></xref>要測試可視性的結構。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果所指定的矩形<code> rect </code>參數內含的可見裁剪區域<xref href=&quot;System.Drawing.Graphics&quot;> </xref>，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Drawing.Graphics.IsVisible*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.IsVisible(System.Int32,System.Int32)
  id: IsVisible(System.Int32,System.Int32)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: IsVisible(Int32,Int32)
  nameWithType: Graphics.IsVisible(Int32,Int32)
  fullName: System.Drawing.Graphics.IsVisible(Int32,Int32)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "指出由一對座標指定的點是否包含在的可見裁剪區域<xref href=&quot;System.Drawing.Graphics&quot;> </xref>。"
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a rectangular clipping region and sets it as the clipping region for the graphics object of the form using <xref:System.Drawing.Drawing2D.CombineMode>.  \n  \n-   Creates two points, one inside the clipping region and one outside.  \n  \n-   Tests each of the points for visibility and draws only the visible one.  \n  \n The result is one small red circle, which is within the clip region.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#131](~/add/codesnippet/cpp/m-system.drawing.graphic_15_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#131](~/add/codesnippet/csharp/m-system.drawing.graphic_15_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#131](~/add/codesnippet/visualbasic/m-system.drawing.graphic_15_1.vb)]"
  syntax:
    content: public bool IsVisible (int x, int y);
    parameters:
    - id: x
      type: System.Int32
      description: "要測試可視性的點的 x 座標。"
    - id: y
      type: System.Int32
      description: "要測試可視性的點的 y 座標。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果所定義的點<code> x </code>和<code> y </code>參數內含的可見裁剪區域<xref href=&quot;System.Drawing.Graphics&quot;> </xref>，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Drawing.Graphics.IsVisible*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.IsVisible(System.Single,System.Single)
  id: IsVisible(System.Single,System.Single)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: IsVisible(Single,Single)
  nameWithType: Graphics.IsVisible(Single,Single)
  fullName: System.Drawing.Graphics.IsVisible(Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "指出由一對座標指定的點是否包含在的可見裁剪區域<xref href=&quot;System.Drawing.Graphics&quot;> </xref>。"
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a rectangular clipping region and sets it as the clipping region for the graphics object of the form using <xref:System.Drawing.Drawing2D.CombineMode>.  \n  \n-   Creates two points, one inside the clipping region and one outside.  \n  \n-   Tests each of the points for visibility and draws only the visible one.  \n  \n The result is one small red circle, which is within the clip region.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#133](~/add/codesnippet/cpp/m-system.drawing.graphic_16_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#133](~/add/codesnippet/csharp/m-system.drawing.graphic_16_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#133](~/add/codesnippet/visualbasic/m-system.drawing.graphic_16_1.vb)]"
  syntax:
    content: public bool IsVisible (float x, float y);
    parameters:
    - id: x
      type: System.Single
      description: "要測試可視性的點的 x 座標。"
    - id: y
      type: System.Single
      description: "要測試可視性的點的 y 座標。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果所定義的點<code> x </code>和<code> y </code>參數內含的可見裁剪區域<xref href=&quot;System.Drawing.Graphics&quot;> </xref>，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Drawing.Graphics.IsVisible*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.IsVisible(System.Int32,System.Int32,System.Int32,System.Int32)
  id: IsVisible(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: IsVisible(Int32,Int32,Int32,Int32)
  nameWithType: Graphics.IsVisible(Int32,Int32,Int32,Int32)
  fullName: System.Drawing.Graphics.IsVisible(Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "指出由一對座標、 寬度和高度所指定的矩形，是否要包含的可見裁剪區域內<xref href=&quot;System.Drawing.Graphics&quot;> </xref>。"
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a rectangular clipping region and sets it as the clipping region for the graphics object of the form using <xref:System.Drawing.Drawing2D.CombineMode>.  \n  \n-   Creates the location and size of two rectangles, one inside the clipping region and one outside.  \n  \n-   Tests each of the rectangles for visibility and draws only the visible one.  \n  \n The result is one small red rectangle, which is within the clip region.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#132](~/add/codesnippet/cpp/83916884-8aa7-484f-8684-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#132](~/add/codesnippet/csharp/83916884-8aa7-484f-8684-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#132](~/add/codesnippet/visualbasic/83916884-8aa7-484f-8684-_1.vb)]"
  syntax:
    content: public bool IsVisible (int x, int y, int width, int height);
    parameters:
    - id: x
      type: System.Int32
      description: "要測試可視性之矩形左上角的 x 座標。"
    - id: y
      type: System.Int32
      description: "要測試可視性之矩形左上角的 y 座標。"
    - id: width
      type: System.Int32
      description: "要測試可視性之矩形的寬度。"
    - id: height
      type: System.Int32
      description: "要測試可視性之矩形的高度。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果所定義之矩形<code> x </code>， <code> y </code>， <code> width </code>，和<code> height </code>參數內含的可見裁剪區域<xref href=&quot;System.Drawing.Graphics&quot;> </xref>，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Drawing.Graphics.IsVisible*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.IsVisible(System.Single,System.Single,System.Single,System.Single)
  id: IsVisible(System.Single,System.Single,System.Single,System.Single)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: IsVisible(Single,Single,Single,Single)
  nameWithType: Graphics.IsVisible(Single,Single,Single,Single)
  fullName: System.Drawing.Graphics.IsVisible(Single,Single,Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "指出由一對座標、 寬度和高度所指定的矩形，是否要包含的可見裁剪區域內<xref href=&quot;System.Drawing.Graphics&quot;> </xref>。"
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a rectangular clipping region and sets it as the clipping region for the graphics object of the form using <xref:System.Drawing.Drawing2D.CombineMode>.  \n  \n-   Creates the location and size of two rectangles, one inside the clipping region and one outside.  \n  \n-   Tests each of the rectangles for visibility and draws only the visible one.  \n  \n The result is one small red rectangle, which is within the clip region.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#134](~/add/codesnippet/cpp/26cd12b3-b0de-4137-a2c1-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#134](~/add/codesnippet/csharp/26cd12b3-b0de-4137-a2c1-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#134](~/add/codesnippet/visualbasic/26cd12b3-b0de-4137-a2c1-_1.vb)]"
  syntax:
    content: public bool IsVisible (float x, float y, float width, float height);
    parameters:
    - id: x
      type: System.Single
      description: "要測試可視性之矩形左上角的 x 座標。"
    - id: y
      type: System.Single
      description: "要測試可視性之矩形左上角的 y 座標。"
    - id: width
      type: System.Single
      description: "要測試可視性之矩形的寬度。"
    - id: height
      type: System.Single
      description: "要測試可視性之矩形的高度。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果所定義之矩形<code> x </code>， <code> y </code>， <code> width </code>，和<code> height </code>參數內含的可見裁剪區域<xref href=&quot;System.Drawing.Graphics&quot;> </xref>，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Drawing.Graphics.IsVisible*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.IsVisibleClipEmpty
  id: IsVisibleClipEmpty
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: IsVisibleClipEmpty
  nameWithType: Graphics.IsVisibleClipEmpty
  fullName: System.Drawing.Graphics.IsVisibleClipEmpty
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "取得值，指出是否的可見裁剪區域<xref href=&quot;System.Drawing.Graphics&quot;></xref>是空的。"
  remarks: "之可見裁剪區域是這樣的裁剪區域的交集`Graphics`和視窗的裁剪區域。"
  syntax:
    content: public bool IsVisibleClipEmpty { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果這個裁剪區域的可見部分<xref href=&quot;System.Drawing.Graphics&quot;></xref>是空的否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Drawing.Graphics.IsVisibleClipEmpty*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.MeasureCharacterRanges(System.String,System.Drawing.Font,System.Drawing.RectangleF,System.Drawing.StringFormat)
  id: MeasureCharacterRanges(System.String,System.Drawing.Font,System.Drawing.RectangleF,System.Drawing.StringFormat)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: MeasureCharacterRanges(String,Font,RectangleF,StringFormat)
  nameWithType: Graphics.MeasureCharacterRanges(String,Font,RectangleF,StringFormat)
  fullName: System.Drawing.Graphics.MeasureCharacterRanges(String,Font,RectangleF,StringFormat)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "取得陣列的<xref href=&quot;System.Drawing.Region&quot;></xref>物件，其中每一個框住指定字串中字元位置的範圍。"
  remarks: "這個方法所傳回的區域是精確度的解析度而定，因此可能會有些微遺失如果字串是精確度的一種解析度中繼檔中記錄，而且稍後播放不同解析度。"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Sets a string \"First and Second ranges\" and a font for display of the string (\"Times New Roman\", 16 point).  \n  \n-   Sets two character ranges within the string (which correspond to the words \"First\" and \"Second\").  \n  \n-   Creates a rectangle in which to display the string.  \n  \n-   Sets the formatting of the string ¾ including the two character ranges.  \n  \n-   Draws the string to the screen.  \n  \n-   Measures the character ranges, determines rectangles that bound the two specified ranges.  \n  \n-   Draws the two rectangles to the screen.  \n  \n The result is the displayed string with the first range (\"First\") bounded by a red rectangle and the second range (\"Second\") bounded by a blue rectangle.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#135](~/add/codesnippet/cpp/edc4cf5e-df25-4e32-9c4e-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#135](~/add/codesnippet/csharp/edc4cf5e-df25-4e32-9c4e-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#135](~/add/codesnippet/visualbasic/edc4cf5e-df25-4e32-9c4e-_1.vb)]"
  syntax:
    content: public System.Drawing.Region[] MeasureCharacterRanges (string text, System.Drawing.Font font, System.Drawing.RectangleF layoutRect, System.Drawing.StringFormat stringFormat);
    parameters:
    - id: text
      type: System.String
      description: "要測量的字串。"
    - id: font
      type: System.Drawing.Font
      description: "<xref href=&quot;System.Drawing.Font&quot;></xref>定義字串的文字格式。"
    - id: layoutRect
      type: System.Drawing.RectangleF
      description: "<xref href=&quot;System.Drawing.RectangleF&quot;></xref>結構，指定字串的配置矩形。"
    - id: stringFormat
      type: System.Drawing.StringFormat
      description: "<xref href=&quot;System.Drawing.StringFormat&quot;></xref>表示格式的資訊，例如行距字串。"
    return:
      type: System.Drawing.Region[]
      description: "這個方法傳回的陣列<xref href=&quot;System.Drawing.Region&quot;></xref>物件，其中每一個框住指定字串中字元位置的範圍。"
  overload: System.Drawing.Graphics.MeasureCharacterRanges*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font)
  id: MeasureString(System.String,System.Drawing.Font)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: MeasureString(String,Font)
  nameWithType: Graphics.MeasureString(String,Font)
  fullName: System.Drawing.Graphics.MeasureString(String,Font)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "測量指定的字串與指定物件繪製時<xref href=&quot;System.Drawing.Font&quot;> </xref>。"
  remarks: "<xref:System.Drawing.Graphics.MeasureString%2A>方法專為搭配個別字串和之前和之後要允許突出圖像 （glyph） 的字串，包含少量的額外空間設計。</xref:System.Drawing.Graphics.MeasureString%2A> 您也可以<xref:System.Drawing.Graphics.DrawString%2A>調整字符點以最佳化顯示品質的方法，並可能顯示比報告<xref:System.Drawing.Graphics.MeasureString%2A>。</xref:System.Drawing.Graphics.MeasureString%2A>窄字串</xref:System.Drawing.Graphics.DrawString%2A> 取得度量資訊適用於配置 （例如，實作格式化的文字） 中的相鄰字串，請使用<xref:System.Drawing.Graphics.MeasureCharacterRanges%2A>方法或其中一個<xref:System.Drawing.Graphics.MeasureString%2A>方法，取得<xref:System.Drawing.StringFormat>，並傳遞<xref:System.Drawing.StringFormat.GenericTypographic%2A>.</xref:System.Drawing.StringFormat.GenericTypographic%2A> </xref:System.Drawing.StringFormat> </xref:System.Drawing.Graphics.MeasureString%2A> </xref:System.Drawing.Graphics.MeasureCharacterRanges%2A> 此外，請<xref:System.Drawing.Graphics.TextRenderingHint%2A><xref:System.Drawing.Graphics>為<xref:System.Drawing.Text.TextRenderingHint>。</xref:System.Drawing.Text.TextRenderingHint> </xref:System.Drawing.Graphics> </xref:System.Drawing.Graphics.TextRenderingHint%2A>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a string to measure.  \n  \n-   Creates a font object and sets it to Arial (16 point).  \n  \n-   Creates a size object and uses it and the font object to measure the size of the string.  \n  \n-   Draws a red rectangle using the measured size of the string.  \n  \n-   Draws the string within the drawn rectangle.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#136](~/add/codesnippet/cpp/m-system.drawing.graphic_34_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#136](~/add/codesnippet/csharp/m-system.drawing.graphic_34_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#136](~/add/codesnippet/visualbasic/m-system.drawing.graphic_34_1.vb)]"
  syntax:
    content: public System.Drawing.SizeF MeasureString (string text, System.Drawing.Font font);
    parameters:
    - id: text
      type: System.String
      description: "要測量的字串。"
    - id: font
      type: System.Drawing.Font
      description: "<xref href=&quot;System.Drawing.Font&quot;></xref>定義字串的文字格式。"
    return:
      type: System.Drawing.SizeF
      description: "這個方法會傳回<xref href=&quot;System.Drawing.SizeF&quot;></xref>結構，表示的大小，以指定的單位<xref:System.Drawing.Graphics.PageUnit*>屬性所指定的字串<code> text </code>參數，以繪製<code> font </code>參數。</xref:System.Drawing.Graphics.PageUnit*>"
  overload: System.Drawing.Graphics.MeasureString*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>font</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF)
  id: MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: MeasureString(String,Font,SizeF)
  nameWithType: Graphics.MeasureString(String,Font,SizeF)
  fullName: System.Drawing.Graphics.MeasureString(String,Font,SizeF)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "測量指定的字串與指定物件繪製時<xref href=&quot;System.Drawing.Font&quot;></xref>內指定之配置區域。"
  remarks: "<xref:System.Drawing.Graphics.MeasureString%2A>方法專為搭配個別字串和之前和之後要允許突出圖像 （glyph） 的字串，包含少量的額外空間設計。</xref:System.Drawing.Graphics.MeasureString%2A> 您也可以<xref:System.Drawing.Graphics.DrawString%2A>調整字符點以最佳化顯示品質的方法，並可能顯示比報告<xref:System.Drawing.Graphics.MeasureString%2A>。</xref:System.Drawing.Graphics.MeasureString%2A>窄字串</xref:System.Drawing.Graphics.DrawString%2A> 取得度量資訊適用於配置 （例如，實作格式化的文字） 中的相鄰字串，請使用<xref:System.Drawing.Graphics.MeasureCharacterRanges%2A>方法或其中一個<xref:System.Drawing.Graphics.MeasureString%2A>方法，取得<xref:System.Drawing.StringFormat>，並傳遞<xref:System.Drawing.StringFormat.GenericTypographic%2A>.</xref:System.Drawing.StringFormat.GenericTypographic%2A> </xref:System.Drawing.StringFormat> </xref:System.Drawing.Graphics.MeasureString%2A> </xref:System.Drawing.Graphics.MeasureCharacterRanges%2A> 此外，請<xref:System.Drawing.Graphics.TextRenderingHint%2A><xref:System.Drawing.Graphics>為<xref:System.Drawing.Text.TextRenderingHint>。</xref:System.Drawing.Text.TextRenderingHint> </xref:System.Drawing.Graphics> </xref:System.Drawing.Graphics.TextRenderingHint%2A>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a string to measure and a font object set to Arial (16 point).  \n  \n-   Sets the maximum layout size of the string.  \n  \n-   Creates a size object and uses it, the font object, and the maximum layout size to measure the size of the string.  \n  \n-   Draws a red rectangle using the measured size of the string.  \n  \n-   Draws the string within the drawn rectangle.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#138](~/add/codesnippet/cpp/50dd89a3-bb2e-48a0-9927-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#138](~/add/codesnippet/csharp/50dd89a3-bb2e-48a0-9927-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#138](~/add/codesnippet/visualbasic/50dd89a3-bb2e-48a0-9927-_1.vb)]"
  syntax:
    content: public System.Drawing.SizeF MeasureString (string text, System.Drawing.Font font, System.Drawing.SizeF layoutArea);
    parameters:
    - id: text
      type: System.String
      description: "要測量的字串。"
    - id: font
      type: System.Drawing.Font
      description: "<xref href=&quot;System.Drawing.Font&quot;></xref>定義文字字串的格式。"
    - id: layoutArea
      type: System.Drawing.SizeF
      description: "<xref href=&quot;System.Drawing.SizeF&quot;></xref>指定文字的最大配置區域的結構。"
    return:
      type: System.Drawing.SizeF
      description: "這個方法會傳回<xref href=&quot;System.Drawing.SizeF&quot;></xref>結構，表示的大小，以指定的單位<xref:System.Drawing.Graphics.PageUnit*>屬性所指定的字串<code> text </code>參數，以繪製<code> font </code>參數。</xref:System.Drawing.Graphics.PageUnit*>"
  overload: System.Drawing.Graphics.MeasureString*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>font</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Int32)
  id: MeasureString(System.String,System.Drawing.Font,System.Int32)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: MeasureString(String,Font,Int32)
  nameWithType: Graphics.MeasureString(String,Font,Int32)
  fullName: System.Drawing.Graphics.MeasureString(String,Font,Int32)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "測量指定的字串與指定物件繪製時<xref href=&quot;System.Drawing.Font&quot;> </xref>。"
  remarks: "`width`參數指定的寬度元件所傳回的最大值<xref:System.Drawing.SizeF>結構 (<xref:System.Drawing.SizeF.Width%2A>)。</xref:System.Drawing.SizeF.Width%2A> </xref:System.Drawing.SizeF> 如果`width`參數是字串，傳回的實際寬度小於<xref:System.Drawing.SizeF.Width%2A>元件就會截斷為值，代表符合指定的寬度的字元的數目上限。</xref:System.Drawing.SizeF.Width%2A> 若要容納整個字串，傳回<xref:System.Drawing.SizeF.Height%2A>元件會調整為可讓顯示的字串字元換行的值。</xref:System.Drawing.SizeF.Height%2A>       <xref:System.Drawing.Graphics.MeasureString%2A>方法專為搭配個別字串和之前和之後要允許突出圖像 （glyph） 的字串，包含少量的額外空間設計。</xref:System.Drawing.Graphics.MeasureString%2A> 您也可以<xref:System.Drawing.Graphics.DrawString%2A>調整字符點以最佳化顯示品質的方法，並可能顯示比報告<xref:System.Drawing.Graphics.MeasureString%2A>。</xref:System.Drawing.Graphics.MeasureString%2A>窄字串</xref:System.Drawing.Graphics.DrawString%2A> 取得度量資訊適用於配置 （例如，實作格式化的文字） 中的相鄰字串，請使用<xref:System.Drawing.Graphics.MeasureCharacterRanges%2A>方法或其中一個<xref:System.Drawing.Graphics.MeasureString%2A>方法，取得<xref:System.Drawing.StringFormat>，並傳遞<xref:System.Drawing.StringFormat.GenericTypographic%2A>.</xref:System.Drawing.StringFormat.GenericTypographic%2A> </xref:System.Drawing.StringFormat> </xref:System.Drawing.Graphics.MeasureString%2A> </xref:System.Drawing.Graphics.MeasureCharacterRanges%2A> 此外，請<xref:System.Drawing.Graphics.TextRenderingHint%2A><xref:System.Drawing.Graphics>為<xref:System.Drawing.Text.TextRenderingHint>。</xref:System.Drawing.Text.TextRenderingHint> </xref:System.Drawing.Graphics> </xref:System.Drawing.Graphics.TextRenderingHint%2A>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a string to measure and a font object set to Arial (16 point).  \n  \n-   Sets the maximum width of the string.  \n  \n-   Creates a size object and uses it, the font object, and the maximum string width to measure the size of the string.  \n  \n-   Draws a red rectangle using the measured size of the string.  \n  \n-   Draws the string within the drawn rectangle.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#141](~/add/codesnippet/cpp/ff03a9b3-c4b1-47e3-8c4c-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#141](~/add/codesnippet/csharp/ff03a9b3-c4b1-47e3-8c4c-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#141](~/add/codesnippet/visualbasic/ff03a9b3-c4b1-47e3-8c4c-_1.vb)]"
  syntax:
    content: public System.Drawing.SizeF MeasureString (string text, System.Drawing.Font font, int width);
    parameters:
    - id: text
      type: System.String
      description: "要測量的字串。"
    - id: font
      type: System.Drawing.Font
      description: "<xref href=&quot;System.Drawing.Font&quot;></xref>定義字串的格式。"
    - id: width
      type: System.Int32
      description: "最大寬度的像素為單位的字串。"
    return:
      type: System.Drawing.SizeF
      description: "這個方法會傳回<xref href=&quot;System.Drawing.SizeF&quot;></xref>結構，表示的大小，以指定的單位<xref:System.Drawing.Graphics.PageUnit*>屬性中指定的字串<code> text </code>參數，以繪製<code> font </code>參數。</xref:System.Drawing.Graphics.PageUnit*>"
  overload: System.Drawing.Graphics.MeasureString*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>font</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.PointF,System.Drawing.StringFormat)
  id: MeasureString(System.String,System.Drawing.Font,System.Drawing.PointF,System.Drawing.StringFormat)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: MeasureString(String,Font,PointF,StringFormat)
  nameWithType: Graphics.MeasureString(String,Font,PointF,StringFormat)
  fullName: System.Drawing.Graphics.MeasureString(String,Font,PointF,StringFormat)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "測量指定的字串與指定物件繪製時<xref href=&quot;System.Drawing.Font&quot;></xref>格式的指定和<xref href=&quot;System.Drawing.StringFormat&quot;> </xref>。"
  remarks: "<xref:System.Drawing.Graphics.MeasureString%2A>方法專為搭配個別字串和之前和之後要允許突出圖像 （glyph） 的字串，包含少量的額外空間設計。</xref:System.Drawing.Graphics.MeasureString%2A> 您也可以<xref:System.Drawing.Graphics.DrawString%2A>調整字符點以最佳化顯示品質的方法，並可能顯示比報告<xref:System.Drawing.Graphics.MeasureString%2A>。</xref:System.Drawing.Graphics.MeasureString%2A>窄字串</xref:System.Drawing.Graphics.DrawString%2A> 取得度量資訊適用於配置 （例如，實作格式化的文字） 中的相鄰字串，請使用<xref:System.Drawing.Graphics.MeasureCharacterRanges%2A>方法或其中一個會採用基線的字母方法<xref:System.Drawing.StringFormat>，並傳遞<xref:System.Drawing.StringFormat.GenericTypographic%2A>.</xref:System.Drawing.StringFormat.GenericTypographic%2A> </xref:System.Drawing.StringFormat> </xref:System.Drawing.Graphics.MeasureCharacterRanges%2A> 此外，請<xref:System.Drawing.Graphics.TextRenderingHint%2A><xref:System.Drawing.Graphics>為<xref:System.Drawing.Text.TextRenderingHint>。</xref:System.Drawing.Text.TextRenderingHint> </xref:System.Drawing.Graphics> </xref:System.Drawing.Graphics.TextRenderingHint%2A>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a string to measure and a font object set to Arial (16 point)  \n  \n-   Creates a point to locate the upper-left corner of the string.  \n  \n-   Creates a string format object and sets its format flags to <xref:System.Drawing.StringFormatFlags>.  \n  \n-   Creates a size object to measure the string.  \n  \n-   Measures the size of the string, using the string, the font object, the locating point, and the string format.  \n  \n-   Draws a red rectangle using the locating point and the measured size of the string.  \n  \n-   Draws the string within the drawn rectangle.  \n  \n The result is a vertical rectangle enclosing a vertical string.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#137](~/add/codesnippet/cpp/bf732ea7-b026-45c6-903e-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#137](~/add/codesnippet/csharp/bf732ea7-b026-45c6-903e-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#137](~/add/codesnippet/visualbasic/bf732ea7-b026-45c6-903e-_1.vb)]"
  syntax:
    content: public System.Drawing.SizeF MeasureString (string text, System.Drawing.Font font, System.Drawing.PointF origin, System.Drawing.StringFormat stringFormat);
    parameters:
    - id: text
      type: System.String
      description: "要測量的字串。"
    - id: font
      type: System.Drawing.Font
      description: "<xref href=&quot;System.Drawing.Font&quot;></xref>定義文字字串的格式。"
    - id: origin
      type: System.Drawing.PointF
      description: "<xref href=&quot;System.Drawing.PointF&quot;></xref>結構，表示字串的左上角。"
    - id: stringFormat
      type: System.Drawing.StringFormat
      description: "<xref href=&quot;System.Drawing.StringFormat&quot;></xref>表示格式的資訊，例如行距字串。"
    return:
      type: System.Drawing.SizeF
      description: "這個方法會傳回<xref href=&quot;System.Drawing.SizeF&quot;></xref>結構，表示的大小，以指定的單位<xref:System.Drawing.Graphics.PageUnit*>屬性所指定的字串<code> text </code>參數，以繪製<code> font </code>參數和<code> stringFormat </code>參數。</xref:System.Drawing.Graphics.PageUnit*>"
  overload: System.Drawing.Graphics.MeasureString*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>font</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat)
  id: MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: MeasureString(String,Font,SizeF,StringFormat)
  nameWithType: Graphics.MeasureString(String,Font,SizeF,StringFormat)
  fullName: System.Drawing.Graphics.MeasureString(String,Font,SizeF,StringFormat)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "測量指定的字串與指定物件繪製時<xref href=&quot;System.Drawing.Font&quot;></xref>格式的指定和<xref href=&quot;System.Drawing.StringFormat&quot;> </xref>。"
  remarks: "<xref:System.Drawing.Graphics.MeasureString%2A>方法專為搭配個別字串和之前和之後要允許突出圖像 （glyph） 的字串，包含少量的額外空間設計。</xref:System.Drawing.Graphics.MeasureString%2A> 您也可以<xref:System.Drawing.Graphics.DrawString%2A>調整字符點以最佳化顯示品質的方法，並可能顯示比報告<xref:System.Drawing.Graphics.MeasureString%2A>。</xref:System.Drawing.Graphics.MeasureString%2A>窄字串</xref:System.Drawing.Graphics.DrawString%2A> 取得度量資訊適用於配置 （例如，實作格式化的文字） 中的相鄰字串，請使用<xref:System.Drawing.Graphics.MeasureCharacterRanges%2A>方法或其中一個<xref:System.Drawing.Graphics.MeasureString%2A>方法，取得<xref:System.Drawing.StringFormat>，並傳遞<xref:System.Drawing.StringFormat.GenericTypographic%2A>.</xref:System.Drawing.StringFormat.GenericTypographic%2A> </xref:System.Drawing.StringFormat> </xref:System.Drawing.Graphics.MeasureString%2A> </xref:System.Drawing.Graphics.MeasureCharacterRanges%2A> 此外，請<xref:System.Drawing.Graphics.TextRenderingHint%2A><xref:System.Drawing.Graphics>為<xref:System.Drawing.Text.TextRenderingHint>。</xref:System.Drawing.Text.TextRenderingHint> </xref:System.Drawing.Graphics> </xref:System.Drawing.Graphics.TextRenderingHint%2A>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a string to measure and a font object set to Arial (16 point).  \n  \n-   Sets the maximum layout size of the string, creating a size object to measure the string.  \n  \n-   Creates a string format object and sets its format flags to <xref:System.Drawing.StringFormatFlags>.  \n  \n-   Measures the size of the string, using the string, the font object, the maximum layout size, and the string format.  \n  \n-   Draws a red rectangle using the measured size of the string.  \n  \n-   Draws the string within the drawn rectangle.  \n  \n The result is a vertical rectangle enclosing a vertical string.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#139](~/add/codesnippet/cpp/c825d94b-4b0b-4b74-8f63-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#139](~/add/codesnippet/csharp/c825d94b-4b0b-4b74-8f63-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#139](~/add/codesnippet/visualbasic/c825d94b-4b0b-4b74-8f63-_1.vb)]"
  syntax:
    content: public System.Drawing.SizeF MeasureString (string text, System.Drawing.Font font, System.Drawing.SizeF layoutArea, System.Drawing.StringFormat stringFormat);
    parameters:
    - id: text
      type: System.String
      description: "要測量的字串。"
    - id: font
      type: System.Drawing.Font
      description: "<xref href=&quot;System.Drawing.Font&quot;></xref>定義文字字串的格式。"
    - id: layoutArea
      type: System.Drawing.SizeF
      description: "<xref href=&quot;System.Drawing.SizeF&quot;></xref>指定文字的最大配置區域的結構。"
    - id: stringFormat
      type: System.Drawing.StringFormat
      description: "<xref href=&quot;System.Drawing.StringFormat&quot;></xref>表示格式的資訊，例如行距字串。"
    return:
      type: System.Drawing.SizeF
      description: "這個方法會傳回<xref href=&quot;System.Drawing.SizeF&quot;></xref>結構，表示的大小，以指定的單位<xref:System.Drawing.Graphics.PageUnit*>屬性中指定的字串<code> text </code>參數，以繪製<code> font </code>參數和<code> stringFormat </code>參數。</xref:System.Drawing.Graphics.PageUnit*>"
  overload: System.Drawing.Graphics.MeasureString*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>font</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Int32,System.Drawing.StringFormat)
  id: MeasureString(System.String,System.Drawing.Font,System.Int32,System.Drawing.StringFormat)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: MeasureString(String,Font,Int32,StringFormat)
  nameWithType: Graphics.MeasureString(String,Font,Int32,StringFormat)
  fullName: System.Drawing.Graphics.MeasureString(String,Font,Int32,StringFormat)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "測量指定的字串與指定物件繪製時<xref href=&quot;System.Drawing.Font&quot;></xref>格式的指定和<xref href=&quot;System.Drawing.StringFormat&quot;> </xref>。"
  remarks: "<xref:System.Drawing.Graphics.MeasureString%2A>方法專為搭配個別字串和之前和之後要允許突出圖像 （glyph） 的字串，包含少量的額外空間設計。</xref:System.Drawing.Graphics.MeasureString%2A> 您也可以<xref:System.Drawing.Graphics.DrawString%2A>調整字符點以最佳化顯示品質的方法，並可能顯示比報告<xref:System.Drawing.Graphics.MeasureString%2A>。</xref:System.Drawing.Graphics.MeasureString%2A>窄字串</xref:System.Drawing.Graphics.DrawString%2A> 取得度量資訊適用於配置 （例如，實作格式化的文字） 中的相鄰字串，請使用<xref:System.Drawing.Graphics.MeasureCharacterRanges%2A>方法或其中一個<xref:System.Drawing.Graphics.MeasureString%2A>方法，取得<xref:System.Drawing.StringFormat>，並傳遞<xref:System.Drawing.StringFormat.GenericTypographic%2A>.</xref:System.Drawing.StringFormat.GenericTypographic%2A> </xref:System.Drawing.StringFormat> </xref:System.Drawing.Graphics.MeasureString%2A> </xref:System.Drawing.Graphics.MeasureCharacterRanges%2A> 此外，請<xref:System.Drawing.Graphics.TextRenderingHint%2A><xref:System.Drawing.Graphics>為<xref:System.Drawing.Text.TextRenderingHint>。</xref:System.Drawing.Text.TextRenderingHint> </xref:System.Drawing.Graphics> </xref:System.Drawing.Graphics.TextRenderingHint%2A>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a string to measure and a font object set it to Arial (16 point).  \n  \n-   Sets the maximum width of the string.  \n  \n-   Creates a string format object and sets its format flags to<xref:System.Drawing.StringFormatFlags>.  \n  \n-   Creates a size object to measure the string.  \n  \n-   Measures the size of the string, using the string, the font object, the maximum width, and the string format.  \n  \n-   Draws a red rectangle using the measured size of the string.  \n  \n-   Draws the string within the drawn rectangle.  \n  \n The result is a vertical rectangle enclosing a vertical string.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#142](~/add/codesnippet/cpp/75feefaf-ae55-4db8-a351-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#142](~/add/codesnippet/csharp/75feefaf-ae55-4db8-a351-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#142](~/add/codesnippet/visualbasic/75feefaf-ae55-4db8-a351-_1.vb)]"
  syntax:
    content: public System.Drawing.SizeF MeasureString (string text, System.Drawing.Font font, int width, System.Drawing.StringFormat format);
    parameters:
    - id: text
      type: System.String
      description: "要測量的字串。"
    - id: font
      type: System.Drawing.Font
      description: "<xref href=&quot;System.Drawing.Font&quot;></xref>定義字串的文字格式。"
    - id: width
      type: System.Int32
      description: "字串的最大寬度。"
    - id: format
      type: System.Drawing.StringFormat
      description: "<xref href=&quot;System.Drawing.StringFormat&quot;></xref>表示格式的資訊，例如行距字串。"
    return:
      type: System.Drawing.SizeF
      description: "這個方法會傳回<xref href=&quot;System.Drawing.SizeF&quot;></xref>結構，表示的大小，以指定的單位<xref:System.Drawing.Graphics.PageUnit*>屬性中指定的字串<code> text </code>參數，以繪製<code> font </code>參數和<code> stringFormat </code>參數。</xref:System.Drawing.Graphics.PageUnit*>"
  overload: System.Drawing.Graphics.MeasureString*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>font</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat,System.Int32@,System.Int32@)
  id: MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat,System.Int32@,System.Int32@)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: MeasureString(String,Font,SizeF,StringFormat,Int32,Int32)
  nameWithType: Graphics.MeasureString(String,Font,SizeF,StringFormat,Int32,Int32)
  fullName: System.Drawing.Graphics.MeasureString(String,Font,SizeF,StringFormat,Int32,Int32)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "測量指定的字串與指定物件繪製時<xref href=&quot;System.Drawing.Font&quot;></xref>格式的指定和<xref href=&quot;System.Drawing.StringFormat&quot;> </xref>。"
  remarks: "<xref:System.Drawing.Graphics.MeasureString%2A>方法專為搭配個別字串和之前和之後要允許突出圖像 （glyph） 的字串，包含少量的額外空間設計。</xref:System.Drawing.Graphics.MeasureString%2A> 您也可以<xref:System.Drawing.Graphics.DrawString%2A>調整字符點以最佳化顯示品質的方法，並可能顯示比報告<xref:System.Drawing.Graphics.MeasureString%2A>。</xref:System.Drawing.Graphics.MeasureString%2A>窄字串</xref:System.Drawing.Graphics.DrawString%2A> 取得度量資訊適用於配置 （例如，實作格式化的文字） 中的相鄰字串，請使用的<xref:System.Drawing.Graphics.MeasureCharacterRanges%2A>方法，或其中一種<xref:System.Drawing.Graphics.MeasureString%2A>方法<xref:System.Drawing.StringFormat>並傳遞<xref:System.Drawing.StringFormat.GenericTypographic%2A>.</xref:System.Drawing.StringFormat.GenericTypographic%2A></xref:System.Drawing.StringFormat>採用，</xref:System.Drawing.Graphics.MeasureString%2A> </xref:System.Drawing.Graphics.MeasureCharacterRanges%2A> 此外也請確認<xref:System.Drawing.Graphics.TextRenderingHint%2A><xref:System.Drawing.Graphics>為<xref:System.Drawing.Text.TextRenderingHint>。</xref:System.Drawing.Text.TextRenderingHint> </xref:System.Drawing.Graphics> </xref:System.Drawing.Graphics.TextRenderingHint%2A>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a string to measure and a font object set to Arial (16 point)  \n  \n-   Sets the maximum layout size of the string.  \n  \n-   Creates a string format object and sets its format flags to <xref:System.Drawing.StringFormatFlags>.  \n  \n-   Creates the integer variables `charactersFitted` and `linesFilled` and a size object to measure the string.  \n  \n-   Measures the size of the string and determines the number of characters fitted and lines filled, using the string, the font object, the maximum layout size, and the string format.  \n  \n-   Draws a red rectangle using the measured size of the string.  \n  \n-   Draws the string within the drawn rectangle.  \n  \n-   Draws the values of the number of characters fitted and lines filled.  \n  \n The result is a vertical rectangle enclosing a vertical string.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#140](~/add/codesnippet/cpp/bb658a94-1822-409c-9d7b-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#140](~/add/codesnippet/csharp/bb658a94-1822-409c-9d7b-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#140](~/add/codesnippet/visualbasic/bb658a94-1822-409c-9d7b-_1.vb)]"
  syntax:
    content: public System.Drawing.SizeF MeasureString (string text, System.Drawing.Font font, System.Drawing.SizeF layoutArea, System.Drawing.StringFormat stringFormat, out int charactersFitted, out int linesFilled);
    parameters:
    - id: text
      type: System.String
      description: "要測量的字串。"
    - id: font
      type: System.Drawing.Font
      description: "<xref href=&quot;System.Drawing.Font&quot;></xref>定義字串的文字格式。"
    - id: layoutArea
      type: System.Drawing.SizeF
      description: "<xref href=&quot;System.Drawing.SizeF&quot;></xref>指定文字的最大配置區域的結構。"
    - id: stringFormat
      type: System.Drawing.StringFormat
      description: "<xref href=&quot;System.Drawing.StringFormat&quot;></xref>表示格式的資訊，例如行距字串。"
    - id: charactersFitted
      type: System.Int32
      description: "在字串中的字元數。"
    - id: linesFilled
      type: System.Int32
      description: "在字串中的文字行數。"
    return:
      type: System.Drawing.SizeF
      description: "這個方法會傳回<xref href=&quot;System.Drawing.SizeF&quot;></xref>結構，表示字串中指定的單位的大小<xref:System.Drawing.Graphics.PageUnit*>屬性的<code> text </code>參數，以繪製<code> font </code>參數和<code> stringFormat </code>參數。</xref:System.Drawing.Graphics.PageUnit*>"
  overload: System.Drawing.Graphics.MeasureString*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>font</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.MultiplyTransform(System.Drawing.Drawing2D.Matrix)
  id: MultiplyTransform(System.Drawing.Drawing2D.Matrix)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: MultiplyTransform(Matrix)
  nameWithType: Graphics.MultiplyTransform(Matrix)
  fullName: System.Drawing.Graphics.MultiplyTransform(Matrix)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "乘以自然變換的這個<xref href=&quot;System.Drawing.Graphics&quot;></xref>和指定<xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref>。"
  remarks: "這個方法的前面加上所指定的矩陣`matrix`參數，使結果`matrix`x 全局轉換。"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a `transformMatrix` matrix (a two by two identity matrix plus a zero-translation vector).  \n  \n-   Translates the transform matrix by a vector (200, 100).  \n  \n-   Rotates the world transformation matrix of the Windows Form by 30 degrees, prepends the rotation matrix for 30 degrees to the form's transformation matrix.  \n  \n-   Multiplies the rotated world transformation matrix by the translated `transformMatrix`, and prepends the `transformMatrix` to the world transformation matrix.  \n  \n-   Draws a rotated, translated ellipse.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#143](~/add/codesnippet/cpp/m-system.drawing.graphic_10_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#143](~/add/codesnippet/csharp/m-system.drawing.graphic_10_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#143](~/add/codesnippet/visualbasic/m-system.drawing.graphic_10_1.vb)]"
  syntax:
    content: public void MultiplyTransform (System.Drawing.Drawing2D.Matrix matrix);
    parameters:
    - id: matrix
      type: System.Drawing.Drawing2D.Matrix
      description: "4 x&4; <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref>乘以自然變換。"
  overload: System.Drawing.Graphics.MultiplyTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)
  id: MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: MultiplyTransform(Matrix,MatrixOrder)
  nameWithType: Graphics.MultiplyTransform(Matrix,MatrixOrder)
  fullName: System.Drawing.Graphics.MultiplyTransform(Matrix,MatrixOrder)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "乘以自然變換的這個<xref href=&quot;System.Drawing.Graphics&quot;></xref>和指定<xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;></xref>指定的順序。"
  remarks: "值為<xref:System.Drawing.Drawing2D.MatrixOrder>如`order`參數指定的順序相乘的`matrix`x 全局轉換。</xref:System.Drawing.Drawing2D.MatrixOrder> 值為<xref:System.Drawing.Drawing2D.MatrixOrder>如`order`指定相乘的順序是全局轉換 x `matrix`。</xref:System.Drawing.Drawing2D.MatrixOrder>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a `transformMatrix` matrix (a two by two identity matrix plus a zero-translation vector).  \n  \n-   Translates the transform matrix by a vector (200, 100).  \n  \n-   Rotates the world transformation matrix of the Windows Form by 30 degrees, prepending the rotation matrix for 30 degrees to the form's transformation matrix.  \n  \n-   Multiplies the rotated world transformation matrix by the translated `transformMatrix`, appending the `transformMatrix` to the world transformation matrix.  \n  \n-   Draws a rotated, translated ellipse.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#144](~/add/codesnippet/cpp/cc5350a1-ed7f-4ad4-a876-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#144](~/add/codesnippet/csharp/cc5350a1-ed7f-4ad4-a876-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#144](~/add/codesnippet/visualbasic/cc5350a1-ed7f-4ad4-a876-_1.vb)]"
  syntax:
    content: public void MultiplyTransform (System.Drawing.Drawing2D.Matrix matrix, System.Drawing.Drawing2D.MatrixOrder order);
    parameters:
    - id: matrix
      type: System.Drawing.Drawing2D.Matrix
      description: "4 x&4; <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref>乘以自然變換。"
    - id: order
      type: System.Drawing.Drawing2D.MatrixOrder
      description: "成員的<xref href=&quot;System.Drawing.Drawing2D.MatrixOrder&quot;></xref>列舉型別，決定相乘的順序。"
  overload: System.Drawing.Graphics.MultiplyTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.PageScale
  id: PageScale
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: PageScale
  nameWithType: Graphics.PageScale
  fullName: System.Drawing.Graphics.PageScale
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "取得或設定自然單位和這個畫面單位之間的縮放<xref href=&quot;System.Drawing.Graphics&quot;> </xref>。"
  remarks: ''
  example:
  - "The following code example demonstrates how to use the PageScale and <xref:System.Drawing.Graphics.TranslateTransform%2A> members to change the scale and origin when you draw a rectangle.  \n  \n This example is designed to be used with Windows Forms. Paste the code into a form and call the `ChangePageScaleAndTranslateTransform` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cpp[System.Drawing.GraphicsProperties#2](~/add/codesnippet/cpp/p-system.drawing.graphic_1_1.cpp)]\n [!code-vb[System.Drawing.GraphicsProperties#2](~/add/codesnippet/visualbasic/p-system.drawing.graphic_1_1.vb)]\n [!code-cs[System.Drawing.GraphicsProperties#2](~/add/codesnippet/csharp/p-system.drawing.graphic_1_1.cs)]"
  syntax:
    content: public float PageScale { get; set; }
    return:
      type: System.Single
      description: "這個屬性會指定自然單位和畫面單位這個之間的縮放值<xref href=&quot;System.Drawing.Graphics&quot;> </xref>。"
  overload: System.Drawing.Graphics.PageScale*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.PageUnit
  id: PageUnit
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: PageUnit
  nameWithType: Graphics.PageUnit
  fullName: System.Drawing.Graphics.PageUnit
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "取得或設定在這個畫面座標使用的測量單位<xref href=&quot;System.Drawing.Graphics&quot;> </xref>。"
  remarks: "圖形單元是測量的此<xref:System.Drawing.Graphics>.</xref:System.Drawing.Graphics>中畫面座標使用單位"
  example:
  - "The following code example demonstrates the effect of changing the PageUnit property.  \n  \n This example is designed to be used with Windows Forms. Paste the code into a form and call the `ChangePageUnit` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cpp[System.Drawing.GraphicsProperties#3](~/add/codesnippet/cpp/p-system.drawing.graphic_3_1.cpp)]\n [!code-vb[System.Drawing.GraphicsProperties#3](~/add/codesnippet/visualbasic/p-system.drawing.graphic_3_1.vb)]\n [!code-cs[System.Drawing.GraphicsProperties#3](~/add/codesnippet/csharp/p-system.drawing.graphic_3_1.cs)]"
  syntax:
    content: public System.Drawing.GraphicsUnit PageUnit { get; set; }
    return:
      type: System.Drawing.GraphicsUnit
      description: "其中一個<xref href=&quot;System.Drawing.GraphicsUnit&quot;></xref>以外值<xref href=&quot;System.Drawing.GraphicsUnit&quot;> </xref>。"
  overload: System.Drawing.Graphics.PageUnit*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "PageUnit 設<xref href=&quot;System.Drawing.GraphicsUnit&quot;> </xref>，這不是實體裝置。"
  platform:
  - net462
- uid: System.Drawing.Graphics.PixelOffsetMode
  id: PixelOffsetMode
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: PixelOffsetMode
  nameWithType: Graphics.PixelOffsetMode
  fullName: System.Drawing.Graphics.PixelOffsetMode
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "取得或設定值，指定這個轉譯期間如何位移像素為單位<xref href=&quot;System.Drawing.Graphics&quot;> </xref>。"
  remarks: "使用這個屬性來指定這個內容的其中一個較高品質、 速度較慢的呈現方式或較低的品質、 更快速呈現<xref:System.Drawing.Graphics>物件。</xref:System.Drawing.Graphics>"
  syntax:
    content: public System.Drawing.Drawing2D.PixelOffsetMode PixelOffsetMode { get; set; }
    return:
      type: System.Drawing.Drawing2D.PixelOffsetMode
      description: "此屬性指定的成員<xref href=&quot;System.Drawing.Drawing2D.PixelOffsetMode&quot;></xref>列舉"
  overload: System.Drawing.Graphics.PixelOffsetMode*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.ReleaseHdc
  id: ReleaseHdc
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: ReleaseHdc()
  nameWithType: Graphics.ReleaseHdc()
  fullName: System.Drawing.Graphics.ReleaseHdc()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "釋放由先前呼叫所取得的裝置內容控制代碼<xref:System.Drawing.Graphics.GetHdc*>方法這個<xref href=&quot;System.Drawing.Graphics&quot;> </xref>。</xref:System.Drawing.Graphics.GetHdc*>"
  remarks: "<xref:System.Drawing.Graphics.GetHdc%2A>和<xref:System.Drawing.Graphics.ReleaseHdc%2A>兩種方法可讓您取得和釋放控制代碼的 Windows 裝置。</xref:System.Drawing.Graphics.ReleaseHdc%2A></xref:System.Drawing.Graphics.GetHdc%2A> 您應永遠遵循呼叫<xref:System.Drawing.Graphics.GetHdc%2A>呼叫<xref:System.Drawing.Graphics.ReleaseHdc%2A>完畢時使用的 Windows 控制代碼。</xref:System.Drawing.Graphics.ReleaseHdc%2A> </xref:System.Drawing.Graphics.GetHdc%2A>"
  syntax:
    content: public void ReleaseHdc ();
    parameters: []
  overload: System.Drawing.Graphics.ReleaseHdc*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.ReleaseHdc(System.IntPtr)
  id: ReleaseHdc(System.IntPtr)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: ReleaseHdc(IntPtr)
  nameWithType: Graphics.ReleaseHdc(IntPtr)
  fullName: System.Drawing.Graphics.ReleaseHdc(IntPtr)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "釋放由先前呼叫所取得的裝置內容控制代碼<xref:System.Drawing.Graphics.GetHdc*>方法這個<xref href=&quot;System.Drawing.Graphics&quot;> </xref>。</xref:System.Drawing.Graphics.GetHdc*>"
  remarks: "裝置內容是根據 Windows 結構[!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)]，定義一組圖形物件和其相關聯的屬性，以及會影響輸出的圖形化模式。       呼叫<xref:System.Drawing.Graphics.GetHdc%2A>ReleaseHdc 方法必須出現在配對。</xref:System.Drawing.Graphics.GetHdc%2A> 在範圍期間<xref:System.Drawing.Graphics.GetHdc%2A>並且 ReleaseHdc 方法組，通常進行呼叫只[!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)]函式。</xref:System.Drawing.Graphics.GetHdc%2A> 呼叫，範圍對[!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)]方法<xref:System.Drawing.Graphics>產生`hdc`參數失敗，並`ObjectBusy`錯誤。</xref:System.Drawing.Graphics> 此外，[!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)]會忽略所做的狀態變更<xref:System.Drawing.Graphics>的`hdc`後續作業中的參數。</xref:System.Drawing.Graphics>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The example illustrates calling a Windows [!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)] function to perform the same task as a [!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)] <xref:System.Drawing.Graphics> method. The code performs the following actions:  \n  \n-   Defines the interoperability <xref:System.Runtime.InteropServices.DllImportAttribute> attribute for the Windows DLL file gdi32.dll. This DLL contains the desired [!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)] function, and it defines the <xref:System.Drawing.Rectangle> function in that DLL as external.  \n  \n-   Creates a red pen.  \n  \n-   With the pen, draws a rectangle to the screen using the [!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)] <xref:System.Drawing.Graphics.DrawRectangle%2A> method.  \n  \n-   Defines an internal pointer type variable `hdc` and sets its value to the handle to the device context of the form.  \n  \n-   Draws a rectangle to the screen using the [!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)] <xref:System.Drawing.Rectangle> function.  \n  \n-   Releases the device context represented by the `hdc` parameter.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#145](~/add/codesnippet/cpp/m-system.drawing.graphic_14_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#145](~/add/codesnippet/csharp/m-system.drawing.graphic_14_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#145](~/add/codesnippet/visualbasic/m-system.drawing.graphic_14_1.vb)]"
  syntax:
    content: public void ReleaseHdc (IntPtr hdc);
    parameters:
    - id: hdc
      type: System.IntPtr
      description: "取得由先前呼叫的裝置內容控制代碼<xref:System.Drawing.Graphics.GetHdc*>方法這個<xref href=&quot;System.Drawing.Graphics&quot;> </xref>。</xref:System.Drawing.Graphics.GetHdc*>"
  overload: System.Drawing.Graphics.ReleaseHdc*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.ReleaseHdcInternal(System.IntPtr)
  id: ReleaseHdcInternal(System.IntPtr)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: ReleaseHdcInternal(IntPtr)
  nameWithType: Graphics.ReleaseHdcInternal(IntPtr)
  fullName: System.Drawing.Graphics.ReleaseHdcInternal(IntPtr)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "釋放裝置內容控制代碼。"
  syntax:
    content: public void ReleaseHdcInternal (IntPtr hdc);
    parameters:
    - id: hdc
      type: System.IntPtr
      description: "裝置內容的控制代碼。"
  overload: System.Drawing.Graphics.ReleaseHdcInternal*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.RenderingOrigin
  id: RenderingOrigin
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: RenderingOrigin
  nameWithType: Graphics.RenderingOrigin
  fullName: System.Drawing.Graphics.RenderingOrigin
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "取得或設定這個的呈現原點<xref href=&quot;System.Drawing.Graphics&quot;></xref>用於遞色和交錯筆刷。"
  syntax:
    content: public System.Drawing.Point RenderingOrigin { get; set; }
    return:
      type: System.Drawing.Point
      description: "A <xref href=&quot;System.Drawing.Point&quot;> </xref>結構表示的遞色原點 8-位元-每個像素和 16 位位元-每個像素遞色和也用來設定規劃筆刷的原點。"
  overload: System.Drawing.Graphics.RenderingOrigin*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.ResetClip
  id: ResetClip
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: ResetClip()
  nameWithType: Graphics.ResetClip()
  fullName: System.Drawing.Graphics.ResetClip()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "重設的裁剪區域<xref href=&quot;System.Drawing.Graphics&quot;></xref>為無限區域。"
  remarks: "當的裁剪區域<xref:System.Drawing.Graphics>為無限，這個項目<xref:System.Drawing.Graphics>繪製不裁剪。</xref:System.Drawing.Graphics> </xref:System.Drawing.Graphics>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a rectangle with upper-left corner at (0, 0) and sets the clipping region to this rectangle.  \n  \n-   Creates a second rectangle with upper-left corner at (100, 100) and sets the clipping region to the intersection of this rectangle and the current clipping region (the first rectangle).  \n  \n-   Fills a large rectangle that includes both previous rectangles with a solid blue brush.  \n  \n-   Resets the clipping region to infinite.  \n  \n-   Draws rectangles around the two clipping regions; it uses a black pen for the first clipping rectangle and a red pen for the second clipping region.  \n  \n The result is that only the intersection of the two rectangles is filled with blue.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#146](~/add/codesnippet/cpp/m-system.drawing.graphic_29_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#146](~/add/codesnippet/csharp/m-system.drawing.graphic_29_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#146](~/add/codesnippet/visualbasic/m-system.drawing.graphic_29_1.vb)]"
  syntax:
    content: public void ResetClip ();
    parameters: []
  overload: System.Drawing.Graphics.ResetClip*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.ResetTransform
  id: ResetTransform
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: ResetTransform()
  nameWithType: Graphics.ResetTransform()
  fullName: System.Drawing.Graphics.ResetTransform()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "重設這個的自然變換矩陣<xref href=&quot;System.Drawing.Graphics&quot;></xref>為識別矩陣。"
  remarks: "矩陣表示沒有縮放、 旋轉或轉移轉換。 重設這的自然變換<xref:System.Drawing.Graphics>為識別矩陣表示其全局轉換不會變更之幾何的已轉換的項目。</xref:System.Drawing.Graphics>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Translates the world transform of the Windows Form by a vector (100, 0).  \n  \n-   Saves the graphics state of the form.  \n  \n-   Resets the world transform of the form to an identity and fills a rectangle with a solid red brush.  \n  \n-   Restores the translated graphics state and fills a rectangle with a solid blue brush.  \n  \n The result is an untranslated red-filled rectangle and a translated blue-filled rectangle.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#147](~/add/codesnippet/cpp/m-system.drawing.graphic_4_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#147](~/add/codesnippet/csharp/m-system.drawing.graphic_4_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#147](~/add/codesnippet/visualbasic/m-system.drawing.graphic_4_1.vb)]"
  syntax:
    content: public void ResetTransform ();
    parameters: []
  overload: System.Drawing.Graphics.ResetTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.Restore(System.Drawing.Drawing2D.GraphicsState)
  id: Restore(System.Drawing.Drawing2D.GraphicsState)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: Restore(GraphicsState)
  nameWithType: Graphics.Restore(GraphicsState)
  fullName: System.Drawing.Graphics.Restore(GraphicsState)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "還原這個狀態<xref href=&quot;System.Drawing.Graphics&quot;></xref>所代表的狀態<xref href=&quot;System.Drawing.Drawing2D.GraphicsState&quot;> </xref>。"
  remarks: "當您呼叫<xref:System.Drawing.Graphics.Save%2A>方法<xref:System.Drawing.Graphics>，保留狀態的資訊區塊<xref:System.Drawing.Graphics>放在堆疊上。</xref:System.Drawing.Graphics> </xref:System.Drawing.Graphics> </xref:System.Drawing.Graphics.Save%2A> <xref:System.Drawing.Graphics.Save%2A>方法會傳回<xref:System.Drawing.Drawing2D.GraphicsState>可識別該資訊區塊。</xref:System.Drawing.Drawing2D.GraphicsState> </xref:System.Drawing.Graphics.Save%2A> 當您將傳遞識別<xref:System.Drawing.Drawing2D.GraphicsState>theRestore 方法資訊區塊從堆疊中移除，用來還原<xref:System.Drawing.Graphics>的時間當時的狀態<xref:System.Drawing.Graphics.Save%2A>方法呼叫。</xref:System.Drawing.Graphics.Save%2A> </xref:System.Drawing.Graphics> </xref:System.Drawing.Drawing2D.GraphicsState> 請注意，<xref:System.Drawing.Drawing2D.GraphicsState>給定呼叫所傳回的<xref:System.Drawing.Graphics.Save%2A>方法可以一次傳遞至`Restore`方法。</xref:System.Drawing.Graphics.Save%2A> </xref:System.Drawing.Drawing2D.GraphicsState>       呼叫<xref:System.Drawing.Graphics.Save%2A>方法可以巢狀結構; 也就是說，您可以呼叫<xref:System.Drawing.Graphics.Save%2A>多次呼叫之前的 Restore 方法的方法。</xref:System.Drawing.Graphics.Save%2A> </xref:System.Drawing.Graphics.Save%2A> 每次呼叫<xref:System.Drawing.Graphics.Save%2A>方法，一個資訊區塊會放在堆疊上，而且您收到<xref:System.Drawing.Drawing2D.GraphicsState>資訊區塊。</xref:System.Drawing.Drawing2D.GraphicsState> </xref:System.Drawing.Graphics.Save%2A> 當您將傳遞的其中一個物件的還原方法，<xref:System.Drawing.Graphics>傳回給<xref:System.Drawing.Graphics.Save%2A>方法呼叫傳回<xref:System.Drawing.Drawing2D.GraphicsState>.</xref:System.Drawing.Drawing2D.GraphicsState>該特定</xref:System.Drawing.Graphics.Save%2A>的時間當時的狀態</xref:System.Drawing.Graphics> 資訊區塊放置在堆疊上的<xref:System.Drawing.Graphics.Save%2A>方法呼叫會從堆疊移除，且之後的所有資訊區塊放都置於該堆疊上<xref:System.Drawing.Graphics.Save%2A>方法呼叫也會移除。</xref:System.Drawing.Graphics.Save%2A> </xref:System.Drawing.Graphics.Save%2A>       呼叫<xref:System.Drawing.Graphics.BeginContainer%2A>相同呼叫堆疊上方法的位置資訊區塊<xref:System.Drawing.Graphics.Save%2A>方法。</xref:System.Drawing.Graphics.Save%2A> </xref:System.Drawing.Graphics.BeginContainer%2A> 就像還原配對呼叫<xref:System.Drawing.Graphics.Save%2A>呼叫，<xref:System.Drawing.Graphics.EndContainer%2A>方法呼叫搭配<xref:System.Drawing.Graphics.BeginContainer%2A>方法呼叫。</xref:System.Drawing.Graphics.BeginContainer%2A> </xref:System.Drawing.Graphics.EndContainer%2A> </xref:System.Drawing.Graphics.Save%2A>       當您呼叫的 Restore 方法時，所有的資訊區塊會放置在堆疊上 (由<xref:System.Drawing.Graphics.Save%2A>方法或由<xref:System.Drawing.Graphics.BeginContainer%2A>方法) 之後的對應呼叫<xref:System.Drawing.Graphics.Save%2A>方法會從堆疊移除。</xref:System.Drawing.Graphics.Save%2A> </xref:System.Drawing.Graphics.BeginContainer%2A> </xref:System.Drawing.Graphics.Save%2A> 同樣地，當您呼叫<xref:System.Drawing.Graphics.EndContainer%2A>方法中，放置在堆疊上的所有資訊區塊 (由<xref:System.Drawing.Graphics.Save%2A>方法或由<xref:System.Drawing.Graphics.BeginContainer%2A>方法) 之後的對應呼叫<xref:System.Drawing.Graphics.BeginContainer%2A>方法會從堆疊移除。</xref:System.Drawing.Graphics.BeginContainer%2A> </xref:System.Drawing.Graphics.BeginContainer%2A> </xref:System.Drawing.Graphics.Save%2A> </xref:System.Drawing.Graphics.EndContainer%2A>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Translates the world transform of the Windows Form by a vector (100, 0).  \n  \n-   Saves the graphics state of the form.  \n  \n-   Resets the world transform of the form to an identity and fills a rectangle with a solid red brush.  \n  \n-   Restores the translated graphics state and fills a second rectangle with a solid blue brush.  \n  \n The result is an untranslated red-filled rectangle and a translated blue-filled rectangle.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#148](~/add/codesnippet/cpp/m-system.drawing.graphic_22_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#148](~/add/codesnippet/csharp/m-system.drawing.graphic_22_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#148](~/add/codesnippet/visualbasic/m-system.drawing.graphic_22_1.vb)]"
  syntax:
    content: public void Restore (System.Drawing.Drawing2D.GraphicsState gstate);
    parameters:
    - id: gstate
      type: System.Drawing.Drawing2D.GraphicsState
      description: "<xref href=&quot;System.Drawing.Drawing2D.GraphicsState&quot;></xref>代表要還原此狀態<xref href=&quot;System.Drawing.Graphics&quot;> </xref>。"
  overload: System.Drawing.Graphics.Restore*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.RotateTransform(System.Single)
  id: RotateTransform(System.Single)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: RotateTransform(Single)
  nameWithType: Graphics.RotateTransform(Single)
  fullName: System.Drawing.Graphics.RotateTransform(Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "指定的旋轉套用至這的變換矩陣<xref href=&quot;System.Drawing.Graphics&quot;> </xref>。"
  remarks: "旋轉作業包括將其項目衍生自矩陣轉換矩陣乘以`angle`參數。 這個方法會套用旋轉附加在它前面的轉換矩陣。"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Translates the world transformation matrix of the Windows Form by the vector (100, 0).  \n  \n-   Rotates the world transformation by an angle of 30 degrees, prepending the rotation matrix to the world transformation matrix.  \n  \n-   Draws a rotated, translated ellipse with a blue pen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#149](~/add/codesnippet/cpp/m-system.drawing.graphic_37_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#149](~/add/codesnippet/csharp/m-system.drawing.graphic_37_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#149](~/add/codesnippet/visualbasic/m-system.drawing.graphic_37_1.vb)]"
  syntax:
    content: public void RotateTransform (float angle);
    parameters:
    - id: angle
      type: System.Single
      description: "以度為單位的旋轉角度。"
  overload: System.Drawing.Graphics.RotateTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)
  id: RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: RotateTransform(Single,MatrixOrder)
  nameWithType: Graphics.RotateTransform(Single,MatrixOrder)
  fullName: System.Drawing.Graphics.RotateTransform(Single,MatrixOrder)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "指定的旋轉套用至這的變換矩陣<xref href=&quot;System.Drawing.Graphics&quot;></xref>指定的順序。"
  remarks: "旋轉作業包括將其項目衍生自矩陣轉換矩陣乘以`angle`參數。 這個方法會附加之前，或附加的變換矩陣<xref:System.Drawing.Graphics>根據旋轉的矩陣`order`參數。</xref:System.Drawing.Graphics>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Translates the world transformation matrix of the Windows Form by the vector (100, 0).  \n  \n-   Rotates the world transform by an angle of 30 degrees, appending the rotation matrix to the world transformation matrix with <xref:System.Drawing.Drawing2D.MatrixOrder>.  \n  \n-   Draws a translated, rotated ellipse with a blue pen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#150](~/add/codesnippet/cpp/7da2dce8-ff40-4659-a74e-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#150](~/add/codesnippet/csharp/7da2dce8-ff40-4659-a74e-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#150](~/add/codesnippet/visualbasic/7da2dce8-ff40-4659-a74e-_1.vb)]"
  syntax:
    content: public void RotateTransform (float angle, System.Drawing.Drawing2D.MatrixOrder order);
    parameters:
    - id: angle
      type: System.Single
      description: "以度為單位的旋轉角度。"
    - id: order
      type: System.Drawing.Drawing2D.MatrixOrder
      description: "成員的<xref href=&quot;System.Drawing.Drawing2D.MatrixOrder&quot;></xref>指定旋轉是附加或到矩陣變換之前加上的列舉。"
  overload: System.Drawing.Graphics.RotateTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.Save
  id: Save
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: Save()
  nameWithType: Graphics.Save()
  fullName: System.Drawing.Graphics.Save()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "儲存目前的狀態<xref href=&quot;System.Drawing.Graphics&quot;></xref>和識別儲存的狀態與<xref href=&quot;System.Drawing.Drawing2D.GraphicsState&quot;> </xref>。"
  remarks: "當您呼叫 Save 方法的<xref:System.Drawing.Graphics>，保留狀態的資訊區塊<xref:System.Drawing.Graphics>放在堆疊上。</xref:System.Drawing.Graphics> </xref:System.Drawing.Graphics> Save 方法會傳回<xref:System.Drawing.Drawing2D.GraphicsState>可識別該資訊區塊。</xref:System.Drawing.Drawing2D.GraphicsState> 傳遞時，用來識別<xref:System.Drawing.Drawing2D.GraphicsState>至<xref:System.Drawing.Graphics.Restore%2A>方法，資訊區塊會從堆疊移除，且用來還原<xref:System.Drawing.Graphics>狀態當時的儲存方法呼叫的時間。</xref:System.Drawing.Graphics> </xref:System.Drawing.Graphics.Restore%2A> </xref:System.Drawing.Drawing2D.GraphicsState> 請注意，<xref:System.Drawing.Drawing2D.GraphicsState>方法可以一次傳遞至儲存在特定呼叫所傳回<xref:System.Drawing.Graphics.Restore%2A>方法。</xref:System.Drawing.Graphics.Restore%2A> </xref:System.Drawing.Drawing2D.GraphicsState>       可以是巢狀呼叫 Save 方法;也就是說，您可以呼叫 Save 方法多次呼叫之前<xref:System.Drawing.Graphics.Restore%2A>方法。</xref:System.Drawing.Graphics.Restore%2A> 每當您呼叫 Save 方法，一個資訊區塊會放在堆疊上，而且您收到<xref:System.Drawing.Drawing2D.GraphicsState>資訊區塊。</xref:System.Drawing.Drawing2D.GraphicsState> 當您將傳遞的其中一個物件的<xref:System.Drawing.Graphics.Restore%2A>方法，<xref:System.Drawing.Graphics>回復成傳回該特定<xref:System.Drawing.Drawing2D.GraphicsState>.</xref:System.Drawing.Drawing2D.GraphicsState>儲存方法呼叫的時間當時的狀態</xref:System.Drawing.Graphics></xref:System.Drawing.Graphics.Restore%2A> Save 方法呼叫會從堆疊移除與所有的資訊區塊放之後該堆疊上的 Save 方法呼叫也會移除，資訊區塊會放在堆疊方式。       呼叫<xref:System.Drawing.Graphics.BeginContainer%2A>相同儲存方法的呼叫堆疊上方法的位置資訊區塊。</xref:System.Drawing.Graphics.BeginContainer%2A> 就像<xref:System.Drawing.Graphics.Restore%2A>配對呼叫 Save 呼叫，<xref:System.Drawing.Graphics.EndContainer%2A>方法呼叫搭配<xref:System.Drawing.Graphics.BeginContainer%2A>方法呼叫。</xref:System.Drawing.Graphics.BeginContainer%2A> </xref:System.Drawing.Graphics.EndContainer%2A> </xref:System.Drawing.Graphics.Restore%2A>       當您呼叫<xref:System.Drawing.Graphics.Restore%2A>方法中，放置在堆疊上的所有資訊區塊 (Save 方法或由<xref:System.Drawing.Graphics.BeginContainer%2A>方法) 的對應呼叫 Save 方法會從堆疊移除之後。</xref:System.Drawing.Graphics.BeginContainer%2A> </xref:System.Drawing.Graphics.Restore%2A> 同樣地，當您呼叫<xref:System.Drawing.Graphics.EndContainer%2A>方法中，放置在堆疊上的所有資訊區塊 (Save 方法或由<xref:System.Drawing.Graphics.BeginContainer%2A>方法) 之後的對應呼叫<xref:System.Drawing.Graphics.BeginContainer%2A>方法會從堆疊移除。</xref:System.Drawing.Graphics.BeginContainer%2A> </xref:System.Drawing.Graphics.BeginContainer%2A> </xref:System.Drawing.Graphics.EndContainer%2A>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Translates the world transform of the Windows Form by a vector (100, 0).  \n  \n-   Saves the graphics state of the form.  \n  \n-   Resets the world transform of the form to an identity (2x2 identity matrix plus a zero-vector translation) and fills a rectangle with a solid red brush.  \n  \n-   Restores the translated graphics state and fills a rectangle with a solid blue brush.  \n  \n The result is an untranslated red-filled rectangle on the left and a translated blue-filled rectangle on the right of the form.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#151](~/add/codesnippet/cpp/m-system.drawing.graphic_26_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#151](~/add/codesnippet/csharp/m-system.drawing.graphic_26_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#151](~/add/codesnippet/visualbasic/m-system.drawing.graphic_26_1.vb)]"
  syntax:
    content: public System.Drawing.Drawing2D.GraphicsState Save ();
    parameters: []
    return:
      type: System.Drawing.Drawing2D.GraphicsState
      description: "這個方法會傳回<xref href=&quot;System.Drawing.Drawing2D.GraphicsState&quot;></xref>的已儲存的狀態表示<xref href=&quot;System.Drawing.Graphics&quot;> </xref>。"
  overload: System.Drawing.Graphics.Save*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.ScaleTransform(System.Single,System.Single)
  id: ScaleTransform(System.Single,System.Single)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: ScaleTransform(Single,Single)
  nameWithType: Graphics.ScaleTransform(Single,Single)
  fullName: System.Drawing.Graphics.ScaleTransform(Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "指定的縮放作業套用至這的變換矩陣<xref href=&quot;System.Drawing.Graphics&quot;></xref>方式是將物件的轉換矩陣。"
  remarks: "調整作業包括將對角線矩陣，其元素也是轉換矩陣乘以 (`sx`， `sy`，1)。 這個方法的前面加上的變換矩陣<xref:System.Drawing.Graphics>由將縮放矩陣。</xref:System.Drawing.Graphics>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Rotates the world transformation matrix of the Windows Form by 30 degrees.  \n  \n-   Scales that matrix by a factor of 3 in the x direction and a factor of 1 in the y direction by prepending the scaling transformation.  \n  \n-   Draws a scaled, rotated rectangle with a blue pen.  \n  \n The result is still a rectangle.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#152](~/add/codesnippet/cpp/m-system.drawing.graphic_38_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#152](~/add/codesnippet/csharp/m-system.drawing.graphic_38_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#152](~/add/codesnippet/visualbasic/m-system.drawing.graphic_38_1.vb)]"
  syntax:
    content: public void ScaleTransform (float sx, float sy);
    parameters:
    - id: sx
      type: System.Single
      description: "X 方向的縮放比例。"
    - id: sy
      type: System.Single
      description: "在 y 方向的縮放比例。"
  overload: System.Drawing.Graphics.ScaleTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  id: ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: ScaleTransform(Single,Single,MatrixOrder)
  nameWithType: Graphics.ScaleTransform(Single,Single,MatrixOrder)
  fullName: System.Drawing.Graphics.ScaleTransform(Single,Single,MatrixOrder)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "指定的縮放作業套用至這的變換矩陣<xref href=&quot;System.Drawing.Graphics&quot;></xref>指定的順序。"
  remarks: "調整作業包括將對角線矩陣，其元素也是轉換矩陣乘以 (`sx`， `sy`，1)。 這個方法會附加之前，或附加的變換矩陣<xref:System.Drawing.Graphics>所根據的縮放矩陣`order`參數。</xref:System.Drawing.Graphics>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Rotates the world transformation matrix of the Windows Form by 30 degrees.  \n  \n-   Scales that matrix by a factor of 3 in the x direction and a factor of 1 in the y direction by appending the scaling transformation with the <xref:System.Drawing.Drawing2D.MatrixOrder> member.  \n  \n-   Draws a rotated, scaled rectangle with a blue pen.  \n  \n The result is a parallelogram.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#153](~/add/codesnippet/cpp/cafee882-3251-403e-970d-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#153](~/add/codesnippet/csharp/cafee882-3251-403e-970d-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#153](~/add/codesnippet/visualbasic/cafee882-3251-403e-970d-_1.vb)]"
  syntax:
    content: public void ScaleTransform (float sx, float sy, System.Drawing.Drawing2D.MatrixOrder order);
    parameters:
    - id: sx
      type: System.Single
      description: "X 方向的縮放比例。"
    - id: sy
      type: System.Single
      description: "在 y 方向的縮放比例。"
    - id: order
      type: System.Drawing.Drawing2D.MatrixOrder
      description: "成員的<xref href=&quot;System.Drawing.Drawing2D.MatrixOrder&quot;></xref>指定縮放作業是附加到變換矩陣之前或之後的列舉。"
  overload: System.Drawing.Graphics.ScaleTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.SetClip(System.Drawing.Drawing2D.GraphicsPath)
  id: SetClip(System.Drawing.Drawing2D.GraphicsPath)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: SetClip(GraphicsPath)
  nameWithType: Graphics.SetClip(GraphicsPath)
  fullName: System.Drawing.Graphics.SetClip(GraphicsPath)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "設定這個裁剪區域<xref href=&quot;System.Drawing.Graphics&quot;></xref>指定<xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref>。"
  remarks: "如果所代表的圖形路徑`path`參數未關閉，額外的區段加入的最後一個點来關閉路徑的第一個點。"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a graphics path and adds an ellipse to the path.  \n  \n-   Sets the clipping region to the elliptical path.  \n  \n-   Fills a large rectangle with a solid black brush.  \n  \n The result is a filled, black ellipse.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#154](~/add/codesnippet/cpp/m-system.drawing.graphic_2_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#154](~/add/codesnippet/csharp/m-system.drawing.graphic_2_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#154](~/add/codesnippet/visualbasic/m-system.drawing.graphic_2_1.vb)]"
  syntax:
    content: public void SetClip (System.Drawing.Drawing2D.GraphicsPath path);
    parameters:
    - id: path
      type: System.Drawing.Drawing2D.GraphicsPath
      description: "<xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;></xref>表示新裁剪區域。"
  overload: System.Drawing.Graphics.SetClip*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.SetClip(System.Drawing.Graphics)
  id: SetClip(System.Drawing.Graphics)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: SetClip(Graphics)
  nameWithType: Graphics.SetClip(Graphics)
  fullName: System.Drawing.Graphics.SetClip(Graphics)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "設定這個裁剪區域<xref href=&quot;System.Drawing.Graphics&quot;></xref>至<xref uid=&quot;langword_csharp_Clip&quot; name=&quot;Clip&quot; href=&quot;&quot;></xref>屬性指定的<xref href=&quot;System.Drawing.Graphics&quot;> </xref>。"
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler, as well as `thisForm`, the <xref:System.Windows.Forms.Form> for the example. The code performs the following actions:  \n  \n-   Creates a temporary <xref:System.Drawing.Graphics> from the `thisForm`<xref:System.Windows.Forms.Form> of the example.  \n  \n-   Sets the clipping region of the temporary <xref:System.Drawing.Graphics> to a small square.  \n  \n-   Updates the clipping region of the form's graphic object to that of the temporary <xref:System.Drawing.Graphics>.  \n  \n-   Fills a large rectangle with a solid black brush.  \n  \n The result is a small, filled, black square.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#156](~/add/codesnippet/cpp/m-system.drawing.graphic_41_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#156](~/add/codesnippet/csharp/m-system.drawing.graphic_41_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#156](~/add/codesnippet/visualbasic/m-system.drawing.graphic_41_1.vb)]"
  syntax:
    content: public void SetClip (System.Drawing.Graphics g);
    parameters:
    - id: g
      type: System.Drawing.Graphics
      description: "<xref href=&quot;System.Drawing.Graphics&quot;></xref>從中取得新裁剪區域。"
  overload: System.Drawing.Graphics.SetClip*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.SetClip(System.Drawing.Rectangle)
  id: SetClip(System.Drawing.Rectangle)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: SetClip(Rectangle)
  nameWithType: Graphics.SetClip(Rectangle)
  fullName: System.Drawing.Graphics.SetClip(Rectangle)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "設定這個裁剪區域<xref href=&quot;System.Drawing.Graphics&quot;></xref>到所指定的矩形<xref href=&quot;System.Drawing.Rectangle&quot;></xref>結構。"
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a small rectangle for the clipping region.  \n  \n-   Sets the clipping region to the rectangle.  \n  \n-   Fills a large rectangle with a solid black brush.  \n  \n The result is a small, filled, black rectangle.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#158](~/add/codesnippet/cpp/m-system.drawing.graphic_25_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#158](~/add/codesnippet/csharp/m-system.drawing.graphic_25_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#158](~/add/codesnippet/visualbasic/m-system.drawing.graphic_25_1.vb)]"
  syntax:
    content: public void SetClip (System.Drawing.Rectangle rect);
    parameters:
    - id: rect
      type: System.Drawing.Rectangle
      description: "<xref href=&quot;System.Drawing.Rectangle&quot;></xref>結構，表示新裁剪區域。"
  overload: System.Drawing.Graphics.SetClip*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.SetClip(System.Drawing.RectangleF)
  id: SetClip(System.Drawing.RectangleF)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: SetClip(RectangleF)
  nameWithType: Graphics.SetClip(RectangleF)
  fullName: System.Drawing.Graphics.SetClip(RectangleF)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "設定這個裁剪區域<xref href=&quot;System.Drawing.Graphics&quot;></xref>到所指定的矩形<xref href=&quot;System.Drawing.RectangleF&quot;></xref>結構。"
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a small rectangle for the clipping region.  \n  \n-   Sets the clipping region to the rectangle.  \n  \n-   Fills a large rectangle with a solid black brush.  \n  \n The result is a small, filled, black rectangle.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#160](~/add/codesnippet/cpp/m-system.drawing.graphic_1_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#160](~/add/codesnippet/csharp/m-system.drawing.graphic_1_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#160](~/add/codesnippet/visualbasic/m-system.drawing.graphic_1_1.vb)]"
  syntax:
    content: public void SetClip (System.Drawing.RectangleF rect);
    parameters:
    - id: rect
      type: System.Drawing.RectangleF
      description: "<xref href=&quot;System.Drawing.RectangleF&quot;></xref>結構，表示新裁剪區域。"
  overload: System.Drawing.Graphics.SetClip*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.SetClip(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.CombineMode)
  id: SetClip(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.CombineMode)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: SetClip(GraphicsPath,CombineMode)
  nameWithType: Graphics.SetClip(GraphicsPath,CombineMode)
  fullName: System.Drawing.Graphics.SetClip(GraphicsPath,CombineMode)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "設定這個裁剪區域<xref href=&quot;System.Drawing.Graphics&quot;></xref>的指定組合了目前裁剪區域和指定的作業結果<xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref>。"
  remarks: "如果所代表的圖形路徑`path`參數未關閉，額外的區段加入的最後一個點来關閉路徑的第一個點。"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a graphics path and adds an ellipse to the path.  \n  \n-   Sets the clipping region to the elliptical path with the <xref:System.Drawing.Drawing2D.CombineMode> member.  \n  \n-   Fills a large rectangle with a solid black brush.  \n  \n The result is a filled, black ellipse.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#155](~/add/codesnippet/cpp/13cc8f76-0e6b-45ee-a0ec-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#155](~/add/codesnippet/csharp/13cc8f76-0e6b-45ee-a0ec-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#155](~/add/codesnippet/visualbasic/13cc8f76-0e6b-45ee-a0ec-_1.vb)]"
  syntax:
    content: public void SetClip (System.Drawing.Drawing2D.GraphicsPath path, System.Drawing.Drawing2D.CombineMode combineMode);
    parameters:
    - id: path
      type: System.Drawing.Drawing2D.GraphicsPath
      description: "<xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;></xref>若要結合。"
    - id: combineMode
      type: System.Drawing.Drawing2D.CombineMode
      description: "成員的<xref href=&quot;System.Drawing.Drawing2D.CombineMode&quot;></xref>列舉，指定要使用的組合作業。"
  overload: System.Drawing.Graphics.SetClip*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.SetClip(System.Drawing.Graphics,System.Drawing.Drawing2D.CombineMode)
  id: SetClip(System.Drawing.Graphics,System.Drawing.Drawing2D.CombineMode)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: SetClip(Graphics,CombineMode)
  nameWithType: Graphics.SetClip(Graphics,CombineMode)
  fullName: System.Drawing.Graphics.SetClip(Graphics,CombineMode)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "設定這個裁剪區域<xref href=&quot;System.Drawing.Graphics&quot;></xref>設為指定的結果合併作業的目前裁剪區域和<xref:System.Drawing.Graphics.Clip*>屬性指定的<xref href=&quot;System.Drawing.Graphics&quot;> </xref>。</xref:System.Drawing.Graphics.Clip*>"
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler, as well as `thisForm`, the <xref:System.Windows.Forms.Form> for the example. The code performs the following actions:  \n  \n-   Creates a temporary <xref:System.Drawing.Graphics> from the `thisForm`<xref:System.Windows.Forms.Form> of the example.  \n  \n-   Sets the clipping region of the temporary <xref:System.Drawing.Graphics> to a small square.  \n  \n-   Updates the clipping region of the form's graphic object to that of the new <xref:System.Drawing.Graphics> with the <xref:System.Drawing.Drawing2D.CombineMode> member.  \n  \n-   Fills a large rectangle with a solid black brush.  \n  \n The result is a small, filled, black square.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#157](~/add/codesnippet/cpp/8bb7563e-771b-4cba-9f13-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#157](~/add/codesnippet/csharp/8bb7563e-771b-4cba-9f13-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#157](~/add/codesnippet/visualbasic/8bb7563e-771b-4cba-9f13-_1.vb)]"
  syntax:
    content: public void SetClip (System.Drawing.Graphics g, System.Drawing.Drawing2D.CombineMode combineMode);
    parameters:
    - id: g
      type: System.Drawing.Graphics
      description: "<xref href=&quot;System.Drawing.Graphics&quot;></xref>指定要合併的裁剪區域。"
    - id: combineMode
      type: System.Drawing.Drawing2D.CombineMode
      description: "成員的<xref href=&quot;System.Drawing.Drawing2D.CombineMode&quot;></xref>列舉，指定要使用的組合作業。"
  overload: System.Drawing.Graphics.SetClip*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.SetClip(System.Drawing.Rectangle,System.Drawing.Drawing2D.CombineMode)
  id: SetClip(System.Drawing.Rectangle,System.Drawing.Drawing2D.CombineMode)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: SetClip(Rectangle,CombineMode)
  nameWithType: Graphics.SetClip(Rectangle,CombineMode)
  fullName: System.Drawing.Graphics.SetClip(Rectangle,CombineMode)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "設定這個裁剪區域<xref href=&quot;System.Drawing.Graphics&quot;></xref>至指定的作業組合了目前裁剪區域和所指定的矩形結果<xref href=&quot;System.Drawing.Rectangle&quot;></xref>結構。"
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a small rectangle for the clipping region.  \n  \n-   Sets the clipping region to the rectangle with the <xref:System.Drawing.Drawing2D.CombineMode> member.  \n  \n-   Fills a large rectangle with a solid black brush.  \n  \n The result is a small, filled, black rectangle.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#159](~/add/codesnippet/cpp/f07a12db-73e5-41d7-82f8-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#159](~/add/codesnippet/csharp/f07a12db-73e5-41d7-82f8-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#159](~/add/codesnippet/visualbasic/f07a12db-73e5-41d7-82f8-_1.vb)]"
  syntax:
    content: public void SetClip (System.Drawing.Rectangle rect, System.Drawing.Drawing2D.CombineMode combineMode);
    parameters:
    - id: rect
      type: System.Drawing.Rectangle
      description: "<xref href=&quot;System.Drawing.Rectangle&quot;></xref>要合併的結構。"
    - id: combineMode
      type: System.Drawing.Drawing2D.CombineMode
      description: "成員的<xref href=&quot;System.Drawing.Drawing2D.CombineMode&quot;></xref>列舉，指定要使用的組合作業。"
  overload: System.Drawing.Graphics.SetClip*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.SetClip(System.Drawing.RectangleF,System.Drawing.Drawing2D.CombineMode)
  id: SetClip(System.Drawing.RectangleF,System.Drawing.Drawing2D.CombineMode)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: SetClip(RectangleF,CombineMode)
  nameWithType: Graphics.SetClip(RectangleF,CombineMode)
  fullName: System.Drawing.Graphics.SetClip(RectangleF,CombineMode)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "設定這個裁剪區域<xref href=&quot;System.Drawing.Graphics&quot;></xref>至指定的作業組合了目前裁剪區域和所指定的矩形結果<xref href=&quot;System.Drawing.RectangleF&quot;></xref>結構。"
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a small rectangle for the clipping region.  \n  \n-   Sets the clipping region to the rectangle with the <xref:System.Drawing.Drawing2D.CombineMode> member.  \n  \n-   Fills a large rectangle with a solid black brush.  \n  \n The result is a small, filled, black rectangle.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#161](~/add/codesnippet/cpp/f4e1c983-a6f4-4609-8adb-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#161](~/add/codesnippet/csharp/f4e1c983-a6f4-4609-8adb-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#161](~/add/codesnippet/visualbasic/f4e1c983-a6f4-4609-8adb-_1.vb)]"
  syntax:
    content: public void SetClip (System.Drawing.RectangleF rect, System.Drawing.Drawing2D.CombineMode combineMode);
    parameters:
    - id: rect
      type: System.Drawing.RectangleF
      description: "<xref href=&quot;System.Drawing.RectangleF&quot;></xref>要合併的結構。"
    - id: combineMode
      type: System.Drawing.Drawing2D.CombineMode
      description: "成員的<xref href=&quot;System.Drawing.Drawing2D.CombineMode&quot;></xref>列舉，指定要使用的組合作業。"
  overload: System.Drawing.Graphics.SetClip*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.SetClip(System.Drawing.Region,System.Drawing.Drawing2D.CombineMode)
  id: SetClip(System.Drawing.Region,System.Drawing.Drawing2D.CombineMode)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: SetClip(Region,CombineMode)
  nameWithType: Graphics.SetClip(Region,CombineMode)
  fullName: System.Drawing.Graphics.SetClip(Region,CombineMode)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "設定這個裁剪區域<xref href=&quot;System.Drawing.Graphics&quot;></xref>的指定組合了目前裁剪區域和指定的作業結果<xref href=&quot;System.Drawing.Region&quot;> </xref>。"
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a small rectangle for the clipping region.  \n  \n-   Sets the clipping region to the rectangle with the <xref:System.Drawing.Drawing2D.CombineMode> member.  \n  \n-   Fills a large rectangle with a solid black brush.  \n  \n The result is a small, filled, black rectangle.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#162](~/add/codesnippet/cpp/2a66fa51-570c-4e4a-8879-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#162](~/add/codesnippet/csharp/2a66fa51-570c-4e4a-8879-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#162](~/add/codesnippet/visualbasic/2a66fa51-570c-4e4a-8879-_1.vb)]"
  syntax:
    content: public void SetClip (System.Drawing.Region region, System.Drawing.Drawing2D.CombineMode combineMode);
    parameters:
    - id: region
      type: System.Drawing.Region
      description: "<xref href=&quot;System.Drawing.Region&quot;></xref>若要結合。"
    - id: combineMode
      type: System.Drawing.Drawing2D.CombineMode
      description: "從成員<xref href=&quot;System.Drawing.Drawing2D.CombineMode&quot;></xref>列舉，指定要使用的組合作業。"
  overload: System.Drawing.Graphics.SetClip*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.SmoothingMode
  id: SmoothingMode
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: SmoothingMode
  nameWithType: Graphics.SmoothingMode
  fullName: System.Drawing.Graphics.SmoothingMode
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "取得或設定這個的呈現品質<xref href=&quot;System.Drawing.Graphics&quot;> </xref>。"
  remarks: "平滑模式指定線條、 曲線和填滿區域的邊緣是否使用平滑效果 （也稱為反鋸齒功能）。 其中一個例外是路徑漸層筆刷不會遵照平滑模式。 填滿使用的區域<xref:System.Drawing.Drawing2D.PathGradientBrush>呈現不論 SmoothingMode 屬性相同的方式 （別名）。</xref:System.Drawing.Drawing2D.PathGradientBrush>"
  example:
  - "The following method demonstrates the effects of setting the <xref:System.Drawing.Pen.DashCap%2A>, <xref:System.Drawing.Pen.DashPattern%2A>, and SmoothingMode properties. The output of the example is shown in the following illustration.  \n  \n ![Lines with and without smoothing applied.](~/add/media/gdi-smoothingmode.png \"Lines with and without smoothing applied.\")  \n  \n This example is designed to be used with Windows Forms. Paste the code into a form and call the `ShowPensAndSmoothingMode` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.PensExample#3](~/add/codesnippet/csharp/p-system.drawing.graphic_4_1.cs)]\n [!code-vb[System.Drawing.PensExample#3](~/add/codesnippet/visualbasic/p-system.drawing.graphic_4_1.vb)]\n [!code-cpp[System.Drawing.PensExample#3](~/add/codesnippet/cpp/p-system.drawing.graphic_4_1.cpp)]"
  syntax:
    content: public System.Drawing.Drawing2D.SmoothingMode SmoothingMode { get; set; }
    return:
      type: System.Drawing.Drawing2D.SmoothingMode
      description: "其中一個<xref href=&quot;System.Drawing.Drawing2D.SmoothingMode&quot;></xref>值。"
  overload: System.Drawing.Graphics.SmoothingMode*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.TextContrast
  id: TextContrast
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: TextContrast
  nameWithType: Graphics.TextContrast
  fullName: System.Drawing.Graphics.TextContrast
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "取得或設定呈現文字的 gamma 修正值。"
  remarks: "Gamma 修正值必須是介於 0 到 12 之間。 預設值為 4。"
  example:
  - "The following code example demonstrates the use of the <xref:System.Drawing.Graphics.TextRenderingHint%2A> and TextContrast properties.  \n  \n This example is designed to be used with Windows Forms. Paste the code into a form and call the `ChangeTextRenderingHintAndTextContrast` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cpp[System.Drawing.GraphicsProperties#5](~/add/codesnippet/cpp/p-system.drawing.graphic_2_1.cpp)]\n [!code-vb[System.Drawing.GraphicsProperties#5](~/add/codesnippet/visualbasic/p-system.drawing.graphic_2_1.vb)]\n [!code-cs[System.Drawing.GraphicsProperties#5](~/add/codesnippet/csharp/p-system.drawing.graphic_2_1.cs)]"
  syntax:
    content: public int TextContrast { get; set; }
    return:
      type: System.Int32
      description: "用於呈現反鋸齒補償和 ClearType 文字 gamma 修正值。"
  overload: System.Drawing.Graphics.TextContrast*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.TextRenderingHint
  id: TextRenderingHint
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: TextRenderingHint
  nameWithType: Graphics.TextRenderingHint
  fullName: System.Drawing.Graphics.TextRenderingHint
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "取得或設定與這個關聯之文字的呈現模式<xref href=&quot;System.Drawing.Graphics&quot;> </xref>。"
  remarks: "這個文字呈現提示會指定使用反鋸齒功能是否呈現文字。      > [!NOTE] > 您不應該使用<xref:System.Drawing.Graphics.CompositingMode%2A><xref:System.Drawing.Drawing2D.CompositingMode>TextRenderingHint 屬性設定為<xref:System.Drawing.Text.TextRenderingHint>.</xref:System.Drawing.Text.TextRenderingHint>時</xref:System.Drawing.Drawing2D.CompositingMode>的屬性值</xref:System.Drawing.Graphics.CompositingMode%2A> 無法在發生例外狀況或映像可能無法正確呈現。"
  example:
  - "The following code example demonstrates the use of the TextRenderingHint and <xref:System.Drawing.Graphics.TextContrast%2A> properties.  \n  \n This example is designed to be used with Windows Forms. Paste the code into a form and call the `ChangeTextRenderingHintAndTextContrast` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cpp[System.Drawing.GraphicsProperties#5](~/add/codesnippet/cpp/p-system.drawing.graphic_7_1.cpp)]\n [!code-vb[System.Drawing.GraphicsProperties#5](~/add/codesnippet/visualbasic/p-system.drawing.graphic_7_1.vb)]\n [!code-cs[System.Drawing.GraphicsProperties#5](~/add/codesnippet/csharp/p-system.drawing.graphic_7_1.cs)]"
  syntax:
    content: public System.Drawing.Text.TextRenderingHint TextRenderingHint { get; set; }
    return:
      type: System.Drawing.Text.TextRenderingHint
      description: "其中一個<xref href=&quot;System.Drawing.Text.TextRenderingHint&quot;></xref>值。"
  overload: System.Drawing.Graphics.TextRenderingHint*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.Transform
  id: Transform
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: Transform
  nameWithType: Graphics.Transform
  fullName: System.Drawing.Graphics.Transform
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "取得或設定這個幾何自然轉換的複本<xref href=&quot;System.Drawing.Graphics&quot;> </xref>。"
  remarks: "GDI + 會使用三種座標空間︰ world、 頁面和裝置。 全局座標是用來建立模型特定的圖形範圍的座標，您將傳遞至方法在.NET Framework 中的座標。 頁面座標是指繪圖介面，例如表單或控制項所使用的座標系統。 裝置座標是實體裝置上，繪製在螢幕或印表機等所使用的座標。 Transform 屬性表示全局轉換，會對應至頁面座標全局座標。       因為矩陣傳回，而且根據轉換屬性的幾何轉換的複本，您應該處置矩陣當不再需要。"
  syntax:
    content: public System.Drawing.Drawing2D.Matrix Transform { get; set; }
    return:
      type: System.Drawing.Drawing2D.Matrix
      description: "一份<xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> ，表示這個幾何自然轉換<xref href=&quot;System.Drawing.Graphics&quot;> </xref>。"
  overload: System.Drawing.Graphics.Transform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.TransformPoints(System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.Point[])
  id: TransformPoints(System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.Point[])
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: TransformPoints(CoordinateSpace,CoordinateSpace,Point[])
  nameWithType: Graphics.TransformPoints(CoordinateSpace,CoordinateSpace,Point[])
  fullName: System.Drawing.Graphics.TransformPoints(CoordinateSpace,CoordinateSpace,Point[])
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "轉換點陣列從一個座標空間之間使用的目前全局和頁面轉換<xref href=&quot;System.Drawing.Graphics&quot;> </xref>。"
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates two points and draws a blue line between them.  \n  \n-   Sets the world transform to translate by amounts 40 in the x direction and 30 in the y direction.  \n  \n-   Transforms the points from world coordinates (<xref:System.Drawing.Drawing2D.CoordinateSpace>) to page coordinates (<xref:System.Drawing.Drawing2D.CoordinateSpace>).  \n  \n-   Resets the world transformation to the identity.  \n  \n-   Draws a red line between the transformed points.  \n  \n The result is a blue line and a translated red line below it.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#163](~/add/codesnippet/cpp/7346647a-cbf8-4ed4-9d18-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#163](~/add/codesnippet/csharp/7346647a-cbf8-4ed4-9d18-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#163](~/add/codesnippet/visualbasic/7346647a-cbf8-4ed4-9d18-_1.vb)]"
  syntax:
    content: public void TransformPoints (System.Drawing.Drawing2D.CoordinateSpace destSpace, System.Drawing.Drawing2D.CoordinateSpace srcSpace, System.Drawing.Point[] pts);
    parameters:
    - id: destSpace
      type: System.Drawing.Drawing2D.CoordinateSpace
      description: "成員的<xref href=&quot;System.Drawing.Drawing2D.CoordinateSpace&quot;></xref>列舉，指定目的座標空間。"
    - id: srcSpace
      type: System.Drawing.Drawing2D.CoordinateSpace
      description: "成員的<xref href=&quot;System.Drawing.Drawing2D.CoordinateSpace&quot;></xref>列舉，指定來源座標空間。"
    - id: pts
      type: System.Drawing.Point[]
      description: "陣列<xref href=&quot;System.Drawing.Point&quot;></xref>結構，表示要變換的點。"
  overload: System.Drawing.Graphics.TransformPoints*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.TransformPoints(System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.PointF[])
  id: TransformPoints(System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.PointF[])
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: TransformPoints(CoordinateSpace,CoordinateSpace,PointF[])
  nameWithType: Graphics.TransformPoints(CoordinateSpace,CoordinateSpace,PointF[])
  fullName: System.Drawing.Graphics.TransformPoints(CoordinateSpace,CoordinateSpace,PointF[])
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "轉換點陣列從一個座標空間之間使用的目前全局和頁面轉換<xref href=&quot;System.Drawing.Graphics&quot;> </xref>。"
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates two points and draws a blue line between them.  \n  \n-   Sets the world transform to translate by amounts 40 in the x direction and 30 in the y direction.  \n  \n-   Transforms the points from world coordinates (<xref:System.Drawing.Drawing2D.CoordinateSpace>) to page coordinates (<xref:System.Drawing.Drawing2D.CoordinateSpace>).  \n  \n-   Resets the world transformation to the identity and draws a red line between the transformed points.  \n  \n The result is a blue line and a translated red line below it.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#164](~/add/codesnippet/cpp/9caccfd4-27c9-4ec4-8e81-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#164](~/add/codesnippet/csharp/9caccfd4-27c9-4ec4-8e81-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#164](~/add/codesnippet/visualbasic/9caccfd4-27c9-4ec4-8e81-_1.vb)]"
  syntax:
    content: public void TransformPoints (System.Drawing.Drawing2D.CoordinateSpace destSpace, System.Drawing.Drawing2D.CoordinateSpace srcSpace, System.Drawing.PointF[] pts);
    parameters:
    - id: destSpace
      type: System.Drawing.Drawing2D.CoordinateSpace
      description: "成員的<xref href=&quot;System.Drawing.Drawing2D.CoordinateSpace&quot;></xref>列舉，指定目的座標空間。"
    - id: srcSpace
      type: System.Drawing.Drawing2D.CoordinateSpace
      description: "成員的<xref href=&quot;System.Drawing.Drawing2D.CoordinateSpace&quot;></xref>列舉，指定來源座標空間。"
    - id: pts
      type: System.Drawing.PointF[]
      description: "陣列<xref href=&quot;System.Drawing.PointF&quot;> </xref> ，此結構表示要變換的點。"
  overload: System.Drawing.Graphics.TransformPoints*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.TranslateClip(System.Int32,System.Int32)
  id: TranslateClip(System.Int32,System.Int32)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: TranslateClip(Int32,Int32)
  nameWithType: Graphics.TranslateClip(Int32,Int32)
  fullName: System.Drawing.Graphics.TranslateClip(Int32,Int32)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "將轉譯的裁剪區域<xref href=&quot;System.Drawing.Graphics&quot;></xref>所指定之水平和垂直方向的量。"
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a rectangle for the clipping region.  \n  \n-   Sets the clipping region to the rectangle.  \n  \n-   Translates the clipping region by a vector (50, 50).  \n  \n-   Fills a large rectangle with a solid black brush.  \n  \n The result is a translated, small, black rectangle.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#165](~/add/codesnippet/cpp/m-system.drawing.graphic_33_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#165](~/add/codesnippet/csharp/m-system.drawing.graphic_33_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#165](~/add/codesnippet/visualbasic/m-system.drawing.graphic_33_1.vb)]"
  syntax:
    content: public void TranslateClip (int dx, int dy);
    parameters:
    - id: dx
      type: System.Int32
      description: "翻譯的 x 座標。"
    - id: dy
      type: System.Int32
      description: "轉譯的 y 座標。"
  overload: System.Drawing.Graphics.TranslateClip*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.TranslateClip(System.Single,System.Single)
  id: TranslateClip(System.Single,System.Single)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: TranslateClip(Single,Single)
  nameWithType: Graphics.TranslateClip(Single,Single)
  fullName: System.Drawing.Graphics.TranslateClip(Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "將轉譯的裁剪區域<xref href=&quot;System.Drawing.Graphics&quot;></xref>所指定之水平和垂直方向的量。"
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a rectangle for the clipping region.  \n  \n-   Sets the clipping region to the rectangle.  \n  \n-   Translates the clipping region by a vector (50.0F, 50.0F).  \n  \n-   Fills a large rectangle with a solid black brush.  \n  \n The result is a translated, small, black rectangle.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#166](~/add/codesnippet/cpp/m-system.drawing.graphic_45_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#166](~/add/codesnippet/csharp/m-system.drawing.graphic_45_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#166](~/add/codesnippet/visualbasic/m-system.drawing.graphic_45_1.vb)]"
  syntax:
    content: public void TranslateClip (float dx, float dy);
    parameters:
    - id: dx
      type: System.Single
      description: "翻譯的 x 座標。"
    - id: dy
      type: System.Single
      description: "轉譯的 y 座標。"
  overload: System.Drawing.Graphics.TranslateClip*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.TranslateTransform(System.Single,System.Single)
  id: TranslateTransform(System.Single,System.Single)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: TranslateTransform(Single,Single)
  nameWithType: Graphics.TranslateTransform(Single,Single)
  fullName: System.Drawing.Graphics.TranslateTransform(Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "變更座標系統的原點前面加上指定的轉譯的轉換矩陣這<xref href=&quot;System.Drawing.Graphics&quot;> </xref>。"
  remarks: "來源通常是繪圖介面上限左上角。  轉譯作業包括將其轉譯部分是的矩陣轉換矩陣乘以`dx`和`dy`參數。 這個方法會將轉換套用附加在前面的轉換矩陣的轉移矩陣。"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Rotates the world transformation matrix of the Windows Form by 30.0F degrees.  \n  \n-   Moves the origin of the graphics object by calling TranslateTransform, prepending the translation to the transformation matrix.  \n  \n-   Draws a translated, rotated ellipse with a blue pen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#167](~/add/codesnippet/cpp/m-system.drawing.graphic_30_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#167](~/add/codesnippet/csharp/m-system.drawing.graphic_30_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#167](~/add/codesnippet/visualbasic/m-system.drawing.graphic_30_1.vb)]  \n  \n The following illustration shows the output of running the previous code example.  \n  \n ![Translated and transformed ellipse](~/add/media/ndp-tranlatetransform.png \"Translated and transformed ellipse\")"
  syntax:
    content: public void TranslateTransform (float dx, float dy);
    parameters:
    - id: dx
      type: System.Single
      description: "翻譯的 x 座標。"
    - id: dy
      type: System.Single
      description: "轉譯的 y 座標。"
  overload: System.Drawing.Graphics.TranslateTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  id: TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: TranslateTransform(Single,Single,MatrixOrder)
  nameWithType: Graphics.TranslateTransform(Single,Single,MatrixOrder)
  fullName: System.Drawing.Graphics.TranslateTransform(Single,Single,MatrixOrder)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "指定的轉換套用的轉換矩陣，此變更座標系統的原點<xref href=&quot;System.Drawing.Graphics&quot;></xref>指定的順序。"
  remarks: "轉譯作業包括將其轉譯部分是的矩陣轉換矩陣乘以`dx`和`dy`參數。 這個方法會附加之前，或附加的變換矩陣<xref:System.Drawing.Graphics>所根據的轉譯矩陣`order`參數。</xref:System.Drawing.Graphics>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Rotates the world transformation matrix of the Windows Form by 30.0F degrees.  \n  \n-   Moves the graphics object's origin by calling TranslateTransform, appending the translation to the world transformation matrix.  \n  \n-   Draws a rotated, translated ellipse with a blue pen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#168](~/add/codesnippet/cpp/3a1adcd8-df73-46ba-bf3e-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#168](~/add/codesnippet/csharp/3a1adcd8-df73-46ba-bf3e-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#168](~/add/codesnippet/visualbasic/3a1adcd8-df73-46ba-bf3e-_1.vb)]"
  syntax:
    content: public void TranslateTransform (float dx, float dy, System.Drawing.Drawing2D.MatrixOrder order);
    parameters:
    - id: dx
      type: System.Single
      description: "翻譯的 x 座標。"
    - id: dy
      type: System.Single
      description: "轉譯的 y 座標。"
    - id: order
      type: System.Drawing.Drawing2D.MatrixOrder
      description: "成員的<xref href=&quot;System.Drawing.Drawing2D.MatrixOrder&quot;></xref>列舉，指定轉換是附加到變換矩陣之前或之後。"
  overload: System.Drawing.Graphics.TranslateTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.VisibleClipBounds
  id: VisibleClipBounds
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: VisibleClipBounds
  nameWithType: Graphics.VisibleClipBounds
  fullName: System.Drawing.Graphics.VisibleClipBounds
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "取得這個之可見裁剪區域的周框矩形<xref href=&quot;System.Drawing.Graphics&quot;> </xref>。"
  remarks: "產生的矩形的單位由所指定<xref:System.Drawing.Graphics.PageUnit%2A>屬性。</xref:System.Drawing.Graphics.PageUnit%2A> 預設單位為像素。 A<xref:System.Drawing.Graphics>通常與控制項相關聯的來源矩形將會相對於該控制項的用戶端區域。</xref:System.Drawing.Graphics>       之可見裁剪區域是這樣的裁剪區域的交集<xref:System.Drawing.Graphics>和視窗的裁剪區域。</xref:System.Drawing.Graphics>"
  syntax:
    content: public System.Drawing.RectangleF VisibleClipBounds { get; }
    return:
      type: System.Drawing.RectangleF
      description: "A <xref href=&quot;System.Drawing.RectangleF&quot;> </xref>結構，表示這個之可見裁剪區域的周框<xref href=&quot;System.Drawing.Graphics&quot;> </xref>。"
  overload: System.Drawing.Graphics.VisibleClipBounds*
  exceptions: []
  platform:
  - net462
references:
- uid: System.MarshalByRefObject
  isExternal: false
  name: System.MarshalByRefObject
- uid: System.ComponentModel.Win32Exception
  parent: System.ComponentModel
  isExternal: false
  name: Win32Exception
  nameWithType: Win32Exception
  fullName: System.ComponentModel.Win32Exception
- uid: System.ComponentModel.InvalidEnumArgumentException
  parent: System.ComponentModel
  isExternal: false
  name: InvalidEnumArgumentException
  nameWithType: InvalidEnumArgumentException
  fullName: System.ComponentModel.InvalidEnumArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Exception
  isExternal: true
  name: System.Exception
- uid: System.Drawing.Graphics.AddMetafileComment(System.Byte[])
  parent: System.Drawing.Graphics
  isExternal: false
  name: AddMetafileComment(Byte[])
  nameWithType: Graphics.AddMetafileComment(Byte[])
  fullName: System.Drawing.Graphics.AddMetafileComment(Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Drawing.Graphics.BeginContainer
  parent: System.Drawing.Graphics
  isExternal: false
  name: BeginContainer()
  nameWithType: Graphics.BeginContainer()
  fullName: System.Drawing.Graphics.BeginContainer()
- uid: System.Drawing.Drawing2D.GraphicsContainer
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: GraphicsContainer
  nameWithType: GraphicsContainer
  fullName: System.Drawing.Drawing2D.GraphicsContainer
- uid: System.Drawing.Graphics.BeginContainer(System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)
  parent: System.Drawing.Graphics
  isExternal: false
  name: BeginContainer(Rectangle,Rectangle,GraphicsUnit)
  nameWithType: Graphics.BeginContainer(Rectangle,Rectangle,GraphicsUnit)
  fullName: System.Drawing.Graphics.BeginContainer(Rectangle,Rectangle,GraphicsUnit)
- uid: System.Drawing.Rectangle
  parent: System.Drawing
  isExternal: false
  name: Rectangle
  nameWithType: Rectangle
  fullName: System.Drawing.Rectangle
- uid: System.Drawing.GraphicsUnit
  parent: System.Drawing
  isExternal: false
  name: GraphicsUnit
  nameWithType: GraphicsUnit
  fullName: System.Drawing.GraphicsUnit
- uid: System.Drawing.Graphics.BeginContainer(System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)
  parent: System.Drawing.Graphics
  isExternal: false
  name: BeginContainer(RectangleF,RectangleF,GraphicsUnit)
  nameWithType: Graphics.BeginContainer(RectangleF,RectangleF,GraphicsUnit)
  fullName: System.Drawing.Graphics.BeginContainer(RectangleF,RectangleF,GraphicsUnit)
- uid: System.Drawing.RectangleF
  parent: System.Drawing
  isExternal: false
  name: RectangleF
  nameWithType: RectangleF
  fullName: System.Drawing.RectangleF
- uid: System.Drawing.Graphics.Clear(System.Drawing.Color)
  parent: System.Drawing.Graphics
  isExternal: false
  name: Clear(Color)
  nameWithType: Graphics.Clear(Color)
  fullName: System.Drawing.Graphics.Clear(Color)
- uid: System.Drawing.Color
  parent: System.Drawing
  isExternal: false
  name: Color
  nameWithType: Color
  fullName: System.Drawing.Color
- uid: System.Drawing.Graphics.Clip
  parent: System.Drawing.Graphics
  isExternal: false
  name: Clip
  nameWithType: Graphics.Clip
  fullName: System.Drawing.Graphics.Clip
- uid: System.Drawing.Region
  parent: System.Drawing
  isExternal: false
  name: Region
  nameWithType: Region
  fullName: System.Drawing.Region
- uid: System.Drawing.Graphics.ClipBounds
  parent: System.Drawing.Graphics
  isExternal: false
  name: ClipBounds
  nameWithType: Graphics.ClipBounds
  fullName: System.Drawing.Graphics.ClipBounds
- uid: System.Drawing.Graphics.CompositingMode
  parent: System.Drawing.Graphics
  isExternal: false
  name: CompositingMode
  nameWithType: Graphics.CompositingMode
  fullName: System.Drawing.Graphics.CompositingMode
- uid: System.Drawing.Drawing2D.CompositingMode
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: CompositingMode
  nameWithType: CompositingMode
  fullName: System.Drawing.Drawing2D.CompositingMode
- uid: System.Drawing.Graphics.CompositingQuality
  parent: System.Drawing.Graphics
  isExternal: false
  name: CompositingQuality
  nameWithType: Graphics.CompositingQuality
  fullName: System.Drawing.Graphics.CompositingQuality
- uid: System.Drawing.Drawing2D.CompositingQuality
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: CompositingQuality
  nameWithType: CompositingQuality
  fullName: System.Drawing.Drawing2D.CompositingQuality
- uid: System.Drawing.Graphics.CopyFromScreen(System.Drawing.Point,System.Drawing.Point,System.Drawing.Size)
  parent: System.Drawing.Graphics
  isExternal: false
  name: CopyFromScreen(Point,Point,Size)
  nameWithType: Graphics.CopyFromScreen(Point,Point,Size)
  fullName: System.Drawing.Graphics.CopyFromScreen(Point,Point,Size)
- uid: System.Drawing.Point
  parent: System.Drawing
  isExternal: false
  name: Point
  nameWithType: Point
  fullName: System.Drawing.Point
- uid: System.Drawing.Size
  parent: System.Drawing
  isExternal: false
  name: Size
  nameWithType: Size
  fullName: System.Drawing.Size
- uid: System.Drawing.Graphics.CopyFromScreen(System.Drawing.Point,System.Drawing.Point,System.Drawing.Size,System.Drawing.CopyPixelOperation)
  parent: System.Drawing.Graphics
  isExternal: false
  name: CopyFromScreen(Point,Point,Size,CopyPixelOperation)
  nameWithType: Graphics.CopyFromScreen(Point,Point,Size,CopyPixelOperation)
  fullName: System.Drawing.Graphics.CopyFromScreen(Point,Point,Size,CopyPixelOperation)
- uid: System.Drawing.CopyPixelOperation
  parent: System.Drawing
  isExternal: false
  name: CopyPixelOperation
  nameWithType: CopyPixelOperation
  fullName: System.Drawing.CopyPixelOperation
- uid: System.Drawing.Graphics.CopyFromScreen(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Size)
  parent: System.Drawing.Graphics
  isExternal: false
  name: CopyFromScreen(Int32,Int32,Int32,Int32,Size)
  nameWithType: Graphics.CopyFromScreen(Int32,Int32,Int32,Int32,Size)
  fullName: System.Drawing.Graphics.CopyFromScreen(Int32,Int32,Int32,Int32,Size)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Drawing.Graphics.CopyFromScreen(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Size,System.Drawing.CopyPixelOperation)
  parent: System.Drawing.Graphics
  isExternal: false
  name: CopyFromScreen(Int32,Int32,Int32,Int32,Size,CopyPixelOperation)
  nameWithType: Graphics.CopyFromScreen(Int32,Int32,Int32,Int32,Size,CopyPixelOperation)
  fullName: System.Drawing.Graphics.CopyFromScreen(Int32,Int32,Int32,Int32,Size,CopyPixelOperation)
- uid: System.Drawing.Graphics.Dispose
  parent: System.Drawing.Graphics
  isExternal: false
  name: Dispose()
  nameWithType: Graphics.Dispose()
  fullName: System.Drawing.Graphics.Dispose()
- uid: System.Drawing.Graphics.DpiX
  parent: System.Drawing.Graphics
  isExternal: false
  name: DpiX
  nameWithType: Graphics.DpiX
  fullName: System.Drawing.Graphics.DpiX
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Drawing.Graphics.DpiY
  parent: System.Drawing.Graphics
  isExternal: false
  name: DpiY
  nameWithType: Graphics.DpiY
  fullName: System.Drawing.Graphics.DpiY
- uid: System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Drawing.Rectangle,System.Single,System.Single)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawArc(Pen,Rectangle,Single,Single)
  nameWithType: Graphics.DrawArc(Pen,Rectangle,Single,Single)
  fullName: System.Drawing.Graphics.DrawArc(Pen,Rectangle,Single,Single)
- uid: System.Drawing.Pen
  parent: System.Drawing
  isExternal: false
  name: Pen
  nameWithType: Pen
  fullName: System.Drawing.Pen
- uid: System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Drawing.RectangleF,System.Single,System.Single)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawArc(Pen,RectangleF,Single,Single)
  nameWithType: Graphics.DrawArc(Pen,RectangleF,Single,Single)
  fullName: System.Drawing.Graphics.DrawArc(Pen,RectangleF,Single,Single)
- uid: System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawArc(Pen,Int32,Int32,Int32,Int32,Int32,Int32)
  nameWithType: Graphics.DrawArc(Pen,Int32,Int32,Int32,Int32,Int32,Int32)
  fullName: System.Drawing.Graphics.DrawArc(Pen,Int32,Int32,Int32,Int32,Int32,Int32)
- uid: System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawArc(Pen,Single,Single,Single,Single,Single,Single)
  nameWithType: Graphics.DrawArc(Pen,Single,Single,Single,Single,Single,Single)
  fullName: System.Drawing.Graphics.DrawArc(Pen,Single,Single,Single,Single,Single,Single)
- uid: System.Drawing.Graphics.DrawBezier(System.Drawing.Pen,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawBezier(Pen,Point,Point,Point,Point)
  nameWithType: Graphics.DrawBezier(Pen,Point,Point,Point,Point)
  fullName: System.Drawing.Graphics.DrawBezier(Pen,Point,Point,Point,Point)
- uid: System.Drawing.Graphics.DrawBezier(System.Drawing.Pen,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawBezier(Pen,PointF,PointF,PointF,PointF)
  nameWithType: Graphics.DrawBezier(Pen,PointF,PointF,PointF,PointF)
  fullName: System.Drawing.Graphics.DrawBezier(Pen,PointF,PointF,PointF,PointF)
- uid: System.Drawing.PointF
  parent: System.Drawing
  isExternal: false
  name: PointF
  nameWithType: PointF
  fullName: System.Drawing.PointF
- uid: System.Drawing.Graphics.DrawBezier(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawBezier(Pen,Single,Single,Single,Single,Single,Single,Single,Single)
  nameWithType: Graphics.DrawBezier(Pen,Single,Single,Single,Single,Single,Single,Single,Single)
  fullName: System.Drawing.Graphics.DrawBezier(Pen,Single,Single,Single,Single,Single,Single,Single,Single)
- uid: System.Drawing.Graphics.DrawBeziers(System.Drawing.Pen,System.Drawing.Point[])
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawBeziers(Pen,Point[])
  nameWithType: Graphics.DrawBeziers(Pen,Point[])
  fullName: System.Drawing.Graphics.DrawBeziers(Pen,Point[])
- uid: System.Drawing.Point[]
  parent: System.Drawing
  isExternal: false
  name: Point
  nameWithType: Point
  fullName: System.Drawing.Point[]
  spec.csharp:
  - uid: System.Drawing.Point
    name: Point
    nameWithType: Point
    fullName: Point[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Drawing.Graphics.DrawBeziers(System.Drawing.Pen,System.Drawing.PointF[])
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawBeziers(Pen,PointF[])
  nameWithType: Graphics.DrawBeziers(Pen,PointF[])
  fullName: System.Drawing.Graphics.DrawBeziers(Pen,PointF[])
- uid: System.Drawing.PointF[]
  parent: System.Drawing
  isExternal: false
  name: PointF
  nameWithType: PointF
  fullName: System.Drawing.PointF[]
  spec.csharp:
  - uid: System.Drawing.PointF
    name: PointF
    nameWithType: PointF
    fullName: PointF[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.Point[])
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawClosedCurve(Pen,Point[])
  nameWithType: Graphics.DrawClosedCurve(Pen,Point[])
  fullName: System.Drawing.Graphics.DrawClosedCurve(Pen,Point[])
- uid: System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.PointF[])
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawClosedCurve(Pen,PointF[])
  nameWithType: Graphics.DrawClosedCurve(Pen,PointF[])
  fullName: System.Drawing.Graphics.DrawClosedCurve(Pen,PointF[])
- uid: System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.Point[],System.Single,System.Drawing.Drawing2D.FillMode)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawClosedCurve(Pen,Point[],Single,FillMode)
  nameWithType: Graphics.DrawClosedCurve(Pen,Point[],Single,FillMode)
  fullName: System.Drawing.Graphics.DrawClosedCurve(Pen,Point[],Single,FillMode)
- uid: System.Drawing.Drawing2D.FillMode
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: FillMode
  nameWithType: FillMode
  fullName: System.Drawing.Drawing2D.FillMode
- uid: System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Single,System.Drawing.Drawing2D.FillMode)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawClosedCurve(Pen,PointF[],Single,FillMode)
  nameWithType: Graphics.DrawClosedCurve(Pen,PointF[],Single,FillMode)
  fullName: System.Drawing.Graphics.DrawClosedCurve(Pen,PointF[],Single,FillMode)
- uid: System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[])
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawCurve(Pen,Point[])
  nameWithType: Graphics.DrawCurve(Pen,Point[])
  fullName: System.Drawing.Graphics.DrawCurve(Pen,Point[])
- uid: System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[])
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawCurve(Pen,PointF[])
  nameWithType: Graphics.DrawCurve(Pen,PointF[])
  fullName: System.Drawing.Graphics.DrawCurve(Pen,PointF[])
- uid: System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Single)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawCurve(Pen,Point[],Single)
  nameWithType: Graphics.DrawCurve(Pen,Point[],Single)
  fullName: System.Drawing.Graphics.DrawCurve(Pen,Point[],Single)
- uid: System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Single)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawCurve(Pen,PointF[],Single)
  nameWithType: Graphics.DrawCurve(Pen,PointF[],Single)
  fullName: System.Drawing.Graphics.DrawCurve(Pen,PointF[],Single)
- uid: System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawCurve(Pen,PointF[],Int32,Int32)
  nameWithType: Graphics.DrawCurve(Pen,PointF[],Int32,Int32)
  fullName: System.Drawing.Graphics.DrawCurve(Pen,PointF[],Int32,Int32)
- uid: System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Int32,System.Int32,System.Single)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawCurve(Pen,Point[],Int32,Int32,Single)
  nameWithType: Graphics.DrawCurve(Pen,Point[],Int32,Int32,Single)
  fullName: System.Drawing.Graphics.DrawCurve(Pen,Point[],Int32,Int32,Single)
- uid: System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32,System.Single)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawCurve(Pen,PointF[],Int32,Int32,Single)
  nameWithType: Graphics.DrawCurve(Pen,PointF[],Int32,Int32,Single)
  fullName: System.Drawing.Graphics.DrawCurve(Pen,PointF[],Int32,Int32,Single)
- uid: System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Drawing.Rectangle)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawEllipse(Pen,Rectangle)
  nameWithType: Graphics.DrawEllipse(Pen,Rectangle)
  fullName: System.Drawing.Graphics.DrawEllipse(Pen,Rectangle)
- uid: System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Drawing.RectangleF)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawEllipse(Pen,RectangleF)
  nameWithType: Graphics.DrawEllipse(Pen,RectangleF)
  fullName: System.Drawing.Graphics.DrawEllipse(Pen,RectangleF)
- uid: System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawEllipse(Pen,Int32,Int32,Int32,Int32)
  nameWithType: Graphics.DrawEllipse(Pen,Int32,Int32,Int32,Int32)
  fullName: System.Drawing.Graphics.DrawEllipse(Pen,Int32,Int32,Int32,Int32)
- uid: System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawEllipse(Pen,Single,Single,Single,Single)
  nameWithType: Graphics.DrawEllipse(Pen,Single,Single,Single,Single)
  fullName: System.Drawing.Graphics.DrawEllipse(Pen,Single,Single,Single,Single)
- uid: System.Drawing.Graphics.DrawIcon(System.Drawing.Icon,System.Drawing.Rectangle)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawIcon(Icon,Rectangle)
  nameWithType: Graphics.DrawIcon(Icon,Rectangle)
  fullName: System.Drawing.Graphics.DrawIcon(Icon,Rectangle)
- uid: System.Drawing.Icon
  parent: System.Drawing
  isExternal: false
  name: Icon
  nameWithType: Icon
  fullName: System.Drawing.Icon
- uid: System.Drawing.Graphics.DrawIcon(System.Drawing.Icon,System.Int32,System.Int32)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawIcon(Icon,Int32,Int32)
  nameWithType: Graphics.DrawIcon(Icon,Int32,Int32)
  fullName: System.Drawing.Graphics.DrawIcon(Icon,Int32,Int32)
- uid: System.Drawing.Graphics.DrawIconUnstretched(System.Drawing.Icon,System.Drawing.Rectangle)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawIconUnstretched(Icon,Rectangle)
  nameWithType: Graphics.DrawIconUnstretched(Icon,Rectangle)
  fullName: System.Drawing.Graphics.DrawIconUnstretched(Icon,Rectangle)
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawImage(Image,Point)
  nameWithType: Graphics.DrawImage(Image,Point)
  fullName: System.Drawing.Graphics.DrawImage(Image,Point)
- uid: System.Drawing.Image
  parent: System.Drawing
  isExternal: false
  name: Image
  nameWithType: Image
  fullName: System.Drawing.Image
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[])
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawImage(Image,Point[])
  nameWithType: Graphics.DrawImage(Image,Point[])
  fullName: System.Drawing.Graphics.DrawImage(Image,Point[])
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawImage(Image,PointF)
  nameWithType: Graphics.DrawImage(Image,PointF)
  fullName: System.Drawing.Graphics.DrawImage(Image,PointF)
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[])
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawImage(Image,PointF[])
  nameWithType: Graphics.DrawImage(Image,PointF[])
  fullName: System.Drawing.Graphics.DrawImage(Image,PointF[])
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawImage(Image,Rectangle)
  nameWithType: Graphics.DrawImage(Image,Rectangle)
  fullName: System.Drawing.Graphics.DrawImage(Image,Rectangle)
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.RectangleF)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawImage(Image,RectangleF)
  nameWithType: Graphics.DrawImage(Image,RectangleF)
  fullName: System.Drawing.Graphics.DrawImage(Image,RectangleF)
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawImage(Image,Int32,Int32)
  nameWithType: Graphics.DrawImage(Image,Int32,Int32)
  fullName: System.Drawing.Graphics.DrawImage(Image,Int32,Int32)
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Single,System.Single)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawImage(Image,Single,Single)
  nameWithType: Graphics.DrawImage(Image,Single,Single)
  fullName: System.Drawing.Graphics.DrawImage(Image,Single,Single)
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawImage(Image,Point[],Rectangle,GraphicsUnit)
  nameWithType: Graphics.DrawImage(Image,Point[],Rectangle,GraphicsUnit)
  fullName: System.Drawing.Graphics.DrawImage(Image,Point[],Rectangle,GraphicsUnit)
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawImage(Image,PointF[],RectangleF,GraphicsUnit)
  nameWithType: Graphics.DrawImage(Image,PointF[],RectangleF,GraphicsUnit)
  fullName: System.Drawing.Graphics.DrawImage(Image,PointF[],RectangleF,GraphicsUnit)
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawImage(Image,Rectangle,Rectangle,GraphicsUnit)
  nameWithType: Graphics.DrawImage(Image,Rectangle,Rectangle,GraphicsUnit)
  fullName: System.Drawing.Graphics.DrawImage(Image,Rectangle,Rectangle,GraphicsUnit)
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawImage(Image,RectangleF,RectangleF,GraphicsUnit)
  nameWithType: Graphics.DrawImage(Image,RectangleF,RectangleF,GraphicsUnit)
  fullName: System.Drawing.Graphics.DrawImage(Image,RectangleF,RectangleF,GraphicsUnit)
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawImage(Image,Point[],Rectangle,GraphicsUnit,ImageAttributes)
  nameWithType: Graphics.DrawImage(Image,Point[],Rectangle,GraphicsUnit,ImageAttributes)
  fullName: System.Drawing.Graphics.DrawImage(Image,Point[],Rectangle,GraphicsUnit,ImageAttributes)
- uid: System.Drawing.Imaging.ImageAttributes
  parent: System.Drawing.Imaging
  isExternal: false
  name: ImageAttributes
  nameWithType: ImageAttributes
  fullName: System.Drawing.Imaging.ImageAttributes
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawImage(Image,PointF[],RectangleF,GraphicsUnit,ImageAttributes)
  nameWithType: Graphics.DrawImage(Image,PointF[],RectangleF,GraphicsUnit,ImageAttributes)
  fullName: System.Drawing.Graphics.DrawImage(Image,PointF[],RectangleF,GraphicsUnit,ImageAttributes)
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawImage(Image,Int32,Int32,Rectangle,GraphicsUnit)
  nameWithType: Graphics.DrawImage(Image,Int32,Int32,Rectangle,GraphicsUnit)
  fullName: System.Drawing.Graphics.DrawImage(Image,Int32,Int32,Rectangle,GraphicsUnit)
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawImage(Image,Int32,Int32,Int32,Int32)
  nameWithType: Graphics.DrawImage(Image,Int32,Int32,Int32,Int32)
  fullName: System.Drawing.Graphics.DrawImage(Image,Int32,Int32,Int32,Int32)
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Single,System.Single,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawImage(Image,Single,Single,RectangleF,GraphicsUnit)
  nameWithType: Graphics.DrawImage(Image,Single,Single,RectangleF,GraphicsUnit)
  fullName: System.Drawing.Graphics.DrawImage(Image,Single,Single,RectangleF,GraphicsUnit)
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Single,System.Single,System.Single,System.Single)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawImage(Image,Single,Single,Single,Single)
  nameWithType: Graphics.DrawImage(Image,Single,Single,Single,Single)
  fullName: System.Drawing.Graphics.DrawImage(Image,Single,Single,Single,Single)
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawImage(Image,Point[],Rectangle,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort)
  nameWithType: Graphics.DrawImage(Image,Point[],Rectangle,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort)
  fullName: System.Drawing.Graphics.DrawImage(Image,Point[],Rectangle,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort)
- uid: System.Drawing.Graphics.DrawImageAbort
  parent: System.Drawing
  isExternal: false
  name: Graphics+DrawImageAbort
  nameWithType: Graphics+DrawImageAbort
  fullName: System.Drawing.Graphics+DrawImageAbort
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawImage(Image,PointF[],RectangleF,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort)
  nameWithType: Graphics.DrawImage(Image,PointF[],RectangleF,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort)
  fullName: System.Drawing.Graphics.DrawImage(Image,PointF[],RectangleF,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort)
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawImage(Image,Point[],Rectangle,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort,Int32)
  nameWithType: Graphics.DrawImage(Image,Point[],Rectangle,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort,Int32)
  fullName: System.Drawing.Graphics.DrawImage(Image,Point[],Rectangle,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort,Int32)
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawImage(Image,PointF[],RectangleF,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort,Int32)
  nameWithType: Graphics.DrawImage(Image,PointF[],RectangleF,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort,Int32)
  fullName: System.Drawing.Graphics.DrawImage(Image,PointF[],RectangleF,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort,Int32)
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawImage(Image,Rectangle,Int32,Int32,Int32,Int32,GraphicsUnit)
  nameWithType: Graphics.DrawImage(Image,Rectangle,Int32,Int32,Int32,Int32,GraphicsUnit)
  fullName: System.Drawing.Graphics.DrawImage(Image,Rectangle,Int32,Int32,Int32,Int32,GraphicsUnit)
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawImage(Image,Rectangle,Single,Single,Single,Single,GraphicsUnit)
  nameWithType: Graphics.DrawImage(Image,Rectangle,Single,Single,Single,Single,GraphicsUnit)
  fullName: System.Drawing.Graphics.DrawImage(Image,Rectangle,Single,Single,Single,Single,GraphicsUnit)
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawImage(Image,Rectangle,Int32,Int32,Int32,Int32,GraphicsUnit,ImageAttributes)
  nameWithType: Graphics.DrawImage(Image,Rectangle,Int32,Int32,Int32,Int32,GraphicsUnit,ImageAttributes)
  fullName: System.Drawing.Graphics.DrawImage(Image,Rectangle,Int32,Int32,Int32,Int32,GraphicsUnit,ImageAttributes)
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawImage(Image,Rectangle,Single,Single,Single,Single,GraphicsUnit,ImageAttributes)
  nameWithType: Graphics.DrawImage(Image,Rectangle,Single,Single,Single,Single,GraphicsUnit,ImageAttributes)
  fullName: System.Drawing.Graphics.DrawImage(Image,Rectangle,Single,Single,Single,Single,GraphicsUnit,ImageAttributes)
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawImage(Image,Rectangle,Int32,Int32,Int32,Int32,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort)
  nameWithType: Graphics.DrawImage(Image,Rectangle,Int32,Int32,Int32,Int32,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort)
  fullName: System.Drawing.Graphics.DrawImage(Image,Rectangle,Int32,Int32,Int32,Int32,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort)
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawImage(Image,Rectangle,Single,Single,Single,Single,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort)
  nameWithType: Graphics.DrawImage(Image,Rectangle,Single,Single,Single,Single,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort)
  fullName: System.Drawing.Graphics.DrawImage(Image,Rectangle,Single,Single,Single,Single,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort)
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawImage(Image,Rectangle,Int32,Int32,Int32,Int32,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort,IntPtr)
  nameWithType: Graphics.DrawImage(Image,Rectangle,Int32,Int32,Int32,Int32,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort,IntPtr)
  fullName: System.Drawing.Graphics.DrawImage(Image,Rectangle,Int32,Int32,Int32,Int32,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort,IntPtr)
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawImage(Image,Rectangle,Single,Single,Single,Single,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort,IntPtr)
  nameWithType: Graphics.DrawImage(Image,Rectangle,Single,Single,Single,Single,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort,IntPtr)
  fullName: System.Drawing.Graphics.DrawImage(Image,Rectangle,Single,Single,Single,Single,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort,IntPtr)
- uid: System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Drawing.Point)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawImageUnscaled(Image,Point)
  nameWithType: Graphics.DrawImageUnscaled(Image,Point)
  fullName: System.Drawing.Graphics.DrawImageUnscaled(Image,Point)
- uid: System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Drawing.Rectangle)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawImageUnscaled(Image,Rectangle)
  nameWithType: Graphics.DrawImageUnscaled(Image,Rectangle)
  fullName: System.Drawing.Graphics.DrawImageUnscaled(Image,Rectangle)
- uid: System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Int32,System.Int32)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawImageUnscaled(Image,Int32,Int32)
  nameWithType: Graphics.DrawImageUnscaled(Image,Int32,Int32)
  fullName: System.Drawing.Graphics.DrawImageUnscaled(Image,Int32,Int32)
- uid: System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawImageUnscaled(Image,Int32,Int32,Int32,Int32)
  nameWithType: Graphics.DrawImageUnscaled(Image,Int32,Int32,Int32,Int32)
  fullName: System.Drawing.Graphics.DrawImageUnscaled(Image,Int32,Int32,Int32,Int32)
- uid: System.Drawing.Graphics.DrawImageUnscaledAndClipped(System.Drawing.Image,System.Drawing.Rectangle)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawImageUnscaledAndClipped(Image,Rectangle)
  nameWithType: Graphics.DrawImageUnscaledAndClipped(Image,Rectangle)
  fullName: System.Drawing.Graphics.DrawImageUnscaledAndClipped(Image,Rectangle)
- uid: System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Drawing.Point,System.Drawing.Point)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawLine(Pen,Point,Point)
  nameWithType: Graphics.DrawLine(Pen,Point,Point)
  fullName: System.Drawing.Graphics.DrawLine(Pen,Point,Point)
- uid: System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Drawing.PointF,System.Drawing.PointF)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawLine(Pen,PointF,PointF)
  nameWithType: Graphics.DrawLine(Pen,PointF,PointF)
  fullName: System.Drawing.Graphics.DrawLine(Pen,PointF,PointF)
- uid: System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawLine(Pen,Int32,Int32,Int32,Int32)
  nameWithType: Graphics.DrawLine(Pen,Int32,Int32,Int32,Int32)
  fullName: System.Drawing.Graphics.DrawLine(Pen,Int32,Int32,Int32,Int32)
- uid: System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawLine(Pen,Single,Single,Single,Single)
  nameWithType: Graphics.DrawLine(Pen,Single,Single,Single,Single)
  fullName: System.Drawing.Graphics.DrawLine(Pen,Single,Single,Single,Single)
- uid: System.Drawing.Graphics.DrawLines(System.Drawing.Pen,System.Drawing.Point[])
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawLines(Pen,Point[])
  nameWithType: Graphics.DrawLines(Pen,Point[])
  fullName: System.Drawing.Graphics.DrawLines(Pen,Point[])
- uid: System.Drawing.Graphics.DrawLines(System.Drawing.Pen,System.Drawing.PointF[])
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawLines(Pen,PointF[])
  nameWithType: Graphics.DrawLines(Pen,PointF[])
  fullName: System.Drawing.Graphics.DrawLines(Pen,PointF[])
- uid: System.Drawing.Graphics.DrawPath(System.Drawing.Pen,System.Drawing.Drawing2D.GraphicsPath)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawPath(Pen,GraphicsPath)
  nameWithType: Graphics.DrawPath(Pen,GraphicsPath)
  fullName: System.Drawing.Graphics.DrawPath(Pen,GraphicsPath)
- uid: System.Drawing.Drawing2D.GraphicsPath
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: GraphicsPath
  nameWithType: GraphicsPath
  fullName: System.Drawing.Drawing2D.GraphicsPath
- uid: System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Drawing.Rectangle,System.Single,System.Single)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawPie(Pen,Rectangle,Single,Single)
  nameWithType: Graphics.DrawPie(Pen,Rectangle,Single,Single)
  fullName: System.Drawing.Graphics.DrawPie(Pen,Rectangle,Single,Single)
- uid: System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Drawing.RectangleF,System.Single,System.Single)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawPie(Pen,RectangleF,Single,Single)
  nameWithType: Graphics.DrawPie(Pen,RectangleF,Single,Single)
  fullName: System.Drawing.Graphics.DrawPie(Pen,RectangleF,Single,Single)
- uid: System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawPie(Pen,Int32,Int32,Int32,Int32,Int32,Int32)
  nameWithType: Graphics.DrawPie(Pen,Int32,Int32,Int32,Int32,Int32,Int32)
  fullName: System.Drawing.Graphics.DrawPie(Pen,Int32,Int32,Int32,Int32,Int32,Int32)
- uid: System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawPie(Pen,Single,Single,Single,Single,Single,Single)
  nameWithType: Graphics.DrawPie(Pen,Single,Single,Single,Single,Single,Single)
  fullName: System.Drawing.Graphics.DrawPie(Pen,Single,Single,Single,Single,Single,Single)
- uid: System.Drawing.Graphics.DrawPolygon(System.Drawing.Pen,System.Drawing.Point[])
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawPolygon(Pen,Point[])
  nameWithType: Graphics.DrawPolygon(Pen,Point[])
  fullName: System.Drawing.Graphics.DrawPolygon(Pen,Point[])
- uid: System.Drawing.Graphics.DrawPolygon(System.Drawing.Pen,System.Drawing.PointF[])
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawPolygon(Pen,PointF[])
  nameWithType: Graphics.DrawPolygon(Pen,PointF[])
  fullName: System.Drawing.Graphics.DrawPolygon(Pen,PointF[])
- uid: System.Drawing.Graphics.DrawRectangle(System.Drawing.Pen,System.Drawing.Rectangle)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawRectangle(Pen,Rectangle)
  nameWithType: Graphics.DrawRectangle(Pen,Rectangle)
  fullName: System.Drawing.Graphics.DrawRectangle(Pen,Rectangle)
- uid: System.Drawing.Graphics.DrawRectangle(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawRectangle(Pen,Int32,Int32,Int32,Int32)
  nameWithType: Graphics.DrawRectangle(Pen,Int32,Int32,Int32,Int32)
  fullName: System.Drawing.Graphics.DrawRectangle(Pen,Int32,Int32,Int32,Int32)
- uid: System.Drawing.Graphics.DrawRectangle(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawRectangle(Pen,Single,Single,Single,Single)
  nameWithType: Graphics.DrawRectangle(Pen,Single,Single,Single,Single)
  fullName: System.Drawing.Graphics.DrawRectangle(Pen,Single,Single,Single,Single)
- uid: System.Drawing.Graphics.DrawRectangles(System.Drawing.Pen,System.Drawing.Rectangle[])
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawRectangles(Pen,Rectangle[])
  nameWithType: Graphics.DrawRectangles(Pen,Rectangle[])
  fullName: System.Drawing.Graphics.DrawRectangles(Pen,Rectangle[])
- uid: System.Drawing.Rectangle[]
  parent: System.Drawing
  isExternal: false
  name: Rectangle
  nameWithType: Rectangle
  fullName: System.Drawing.Rectangle[]
  spec.csharp:
  - uid: System.Drawing.Rectangle
    name: Rectangle
    nameWithType: Rectangle
    fullName: Rectangle[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Drawing.Graphics.DrawRectangles(System.Drawing.Pen,System.Drawing.RectangleF[])
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawRectangles(Pen,RectangleF[])
  nameWithType: Graphics.DrawRectangles(Pen,RectangleF[])
  fullName: System.Drawing.Graphics.DrawRectangles(Pen,RectangleF[])
- uid: System.Drawing.RectangleF[]
  parent: System.Drawing
  isExternal: false
  name: RectangleF
  nameWithType: RectangleF
  fullName: System.Drawing.RectangleF[]
  spec.csharp:
  - uid: System.Drawing.RectangleF
    name: RectangleF
    nameWithType: RectangleF
    fullName: RectangleF[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.PointF)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawString(String,Font,Brush,PointF)
  nameWithType: Graphics.DrawString(String,Font,Brush,PointF)
  fullName: System.Drawing.Graphics.DrawString(String,Font,Brush,PointF)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Drawing.Font
  parent: System.Drawing
  isExternal: false
  name: Font
  nameWithType: Font
  fullName: System.Drawing.Font
- uid: System.Drawing.Brush
  parent: System.Drawing
  isExternal: false
  name: Brush
  nameWithType: Brush
  fullName: System.Drawing.Brush
- uid: System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawString(String,Font,Brush,RectangleF)
  nameWithType: Graphics.DrawString(String,Font,Brush,RectangleF)
  fullName: System.Drawing.Graphics.DrawString(String,Font,Brush,RectangleF)
- uid: System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.PointF,System.Drawing.StringFormat)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawString(String,Font,Brush,PointF,StringFormat)
  nameWithType: Graphics.DrawString(String,Font,Brush,PointF,StringFormat)
  fullName: System.Drawing.Graphics.DrawString(String,Font,Brush,PointF,StringFormat)
- uid: System.Drawing.StringFormat
  parent: System.Drawing
  isExternal: false
  name: StringFormat
  nameWithType: StringFormat
  fullName: System.Drawing.StringFormat
- uid: System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF,System.Drawing.StringFormat)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawString(String,Font,Brush,RectangleF,StringFormat)
  nameWithType: Graphics.DrawString(String,Font,Brush,RectangleF,StringFormat)
  fullName: System.Drawing.Graphics.DrawString(String,Font,Brush,RectangleF,StringFormat)
- uid: System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Single,System.Single)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawString(String,Font,Brush,Single,Single)
  nameWithType: Graphics.DrawString(String,Font,Brush,Single,Single)
  fullName: System.Drawing.Graphics.DrawString(String,Font,Brush,Single,Single)
- uid: System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Single,System.Single,System.Drawing.StringFormat)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawString(String,Font,Brush,Single,Single,StringFormat)
  nameWithType: Graphics.DrawString(String,Font,Brush,Single,Single,StringFormat)
  fullName: System.Drawing.Graphics.DrawString(String,Font,Brush,Single,Single,StringFormat)
- uid: System.Drawing.Graphics.EndContainer(System.Drawing.Drawing2D.GraphicsContainer)
  parent: System.Drawing.Graphics
  isExternal: false
  name: EndContainer(GraphicsContainer)
  nameWithType: Graphics.EndContainer(GraphicsContainer)
  fullName: System.Drawing.Graphics.EndContainer(GraphicsContainer)
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc)
  parent: System.Drawing.Graphics
  isExternal: false
  name: EnumerateMetafile(Metafile,Point,Graphics+EnumerateMetafileProc)
  nameWithType: Graphics.EnumerateMetafile(Metafile,Point,Graphics+EnumerateMetafileProc)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,Point,Graphics+EnumerateMetafileProc)
- uid: System.Drawing.Imaging.Metafile
  parent: System.Drawing.Imaging
  isExternal: false
  name: Metafile
  nameWithType: Metafile
  fullName: System.Drawing.Imaging.Metafile
- uid: System.Drawing.Graphics.EnumerateMetafileProc
  parent: System.Drawing
  isExternal: false
  name: Graphics+EnumerateMetafileProc
  nameWithType: Graphics+EnumerateMetafileProc
  fullName: System.Drawing.Graphics+EnumerateMetafileProc
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Graphics.EnumerateMetafileProc)
  parent: System.Drawing.Graphics
  isExternal: false
  name: EnumerateMetafile(Metafile,Point[],Graphics+EnumerateMetafileProc)
  nameWithType: Graphics.EnumerateMetafile(Metafile,Point[],Graphics+EnumerateMetafileProc)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,Point[],Graphics+EnumerateMetafileProc)
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.Graphics.EnumerateMetafileProc)
  parent: System.Drawing.Graphics
  isExternal: false
  name: EnumerateMetafile(Metafile,PointF,Graphics+EnumerateMetafileProc)
  nameWithType: Graphics.EnumerateMetafile(Metafile,PointF,Graphics+EnumerateMetafileProc)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,PointF,Graphics+EnumerateMetafileProc)
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc)
  parent: System.Drawing.Graphics
  isExternal: false
  name: EnumerateMetafile(Metafile,PointF[],Graphics+EnumerateMetafileProc)
  nameWithType: Graphics.EnumerateMetafile(Metafile,PointF[],Graphics+EnumerateMetafileProc)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,PointF[],Graphics+EnumerateMetafileProc)
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Graphics.EnumerateMetafileProc)
  parent: System.Drawing.Graphics
  isExternal: false
  name: EnumerateMetafile(Metafile,Rectangle,Graphics+EnumerateMetafileProc)
  nameWithType: Graphics.EnumerateMetafile(Metafile,Rectangle,Graphics+EnumerateMetafileProc)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,Rectangle,Graphics+EnumerateMetafileProc)
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.Graphics.EnumerateMetafileProc)
  parent: System.Drawing.Graphics
  isExternal: false
  name: EnumerateMetafile(Metafile,RectangleF,Graphics+EnumerateMetafileProc)
  nameWithType: Graphics.EnumerateMetafile(Metafile,RectangleF,Graphics+EnumerateMetafileProc)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,RectangleF,Graphics+EnumerateMetafileProc)
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  parent: System.Drawing.Graphics
  isExternal: false
  name: EnumerateMetafile(Metafile,Point,Graphics+EnumerateMetafileProc,IntPtr)
  nameWithType: Graphics.EnumerateMetafile(Metafile,Point,Graphics+EnumerateMetafileProc,IntPtr)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,Point,Graphics+EnumerateMetafileProc,IntPtr)
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  parent: System.Drawing.Graphics
  isExternal: false
  name: EnumerateMetafile(Metafile,Point[],Graphics+EnumerateMetafileProc,IntPtr)
  nameWithType: Graphics.EnumerateMetafile(Metafile,Point[],Graphics+EnumerateMetafileProc,IntPtr)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,Point[],Graphics+EnumerateMetafileProc,IntPtr)
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  parent: System.Drawing.Graphics
  isExternal: false
  name: EnumerateMetafile(Metafile,PointF,Graphics+EnumerateMetafileProc,IntPtr)
  nameWithType: Graphics.EnumerateMetafile(Metafile,PointF,Graphics+EnumerateMetafileProc,IntPtr)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,PointF,Graphics+EnumerateMetafileProc,IntPtr)
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  parent: System.Drawing.Graphics
  isExternal: false
  name: EnumerateMetafile(Metafile,PointF[],Graphics+EnumerateMetafileProc,IntPtr)
  nameWithType: Graphics.EnumerateMetafile(Metafile,PointF[],Graphics+EnumerateMetafileProc,IntPtr)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,PointF[],Graphics+EnumerateMetafileProc,IntPtr)
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  parent: System.Drawing.Graphics
  isExternal: false
  name: EnumerateMetafile(Metafile,Rectangle,Graphics+EnumerateMetafileProc,IntPtr)
  nameWithType: Graphics.EnumerateMetafile(Metafile,Rectangle,Graphics+EnumerateMetafileProc,IntPtr)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,Rectangle,Graphics+EnumerateMetafileProc,IntPtr)
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  parent: System.Drawing.Graphics
  isExternal: false
  name: EnumerateMetafile(Metafile,RectangleF,Graphics+EnumerateMetafileProc,IntPtr)
  nameWithType: Graphics.EnumerateMetafile(Metafile,RectangleF,Graphics+EnumerateMetafileProc,IntPtr)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,RectangleF,Graphics+EnumerateMetafileProc,IntPtr)
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  parent: System.Drawing.Graphics
  isExternal: false
  name: EnumerateMetafile(Metafile,Point,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  nameWithType: Graphics.EnumerateMetafile(Metafile,Point,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,Point,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)
  parent: System.Drawing.Graphics
  isExternal: false
  name: EnumerateMetafile(Metafile,Point,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc)
  nameWithType: Graphics.EnumerateMetafile(Metafile,Point,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,Point,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc)
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  parent: System.Drawing.Graphics
  isExternal: false
  name: EnumerateMetafile(Metafile,Point[],Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  nameWithType: Graphics.EnumerateMetafile(Metafile,Point[],Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,Point[],Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)
  parent: System.Drawing.Graphics
  isExternal: false
  name: EnumerateMetafile(Metafile,Point[],Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc)
  nameWithType: Graphics.EnumerateMetafile(Metafile,Point[],Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,Point[],Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc)
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  parent: System.Drawing.Graphics
  isExternal: false
  name: EnumerateMetafile(Metafile,PointF,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  nameWithType: Graphics.EnumerateMetafile(Metafile,PointF,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,PointF,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)
  parent: System.Drawing.Graphics
  isExternal: false
  name: EnumerateMetafile(Metafile,PointF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc)
  nameWithType: Graphics.EnumerateMetafile(Metafile,PointF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,PointF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc)
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  parent: System.Drawing.Graphics
  isExternal: false
  name: EnumerateMetafile(Metafile,PointF[],Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  nameWithType: Graphics.EnumerateMetafile(Metafile,PointF[],Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,PointF[],Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)
  parent: System.Drawing.Graphics
  isExternal: false
  name: EnumerateMetafile(Metafile,PointF[],RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc)
  nameWithType: Graphics.EnumerateMetafile(Metafile,PointF[],RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,PointF[],RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc)
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  parent: System.Drawing.Graphics
  isExternal: false
  name: EnumerateMetafile(Metafile,Rectangle,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  nameWithType: Graphics.EnumerateMetafile(Metafile,Rectangle,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,Rectangle,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)
  parent: System.Drawing.Graphics
  isExternal: false
  name: EnumerateMetafile(Metafile,Rectangle,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc)
  nameWithType: Graphics.EnumerateMetafile(Metafile,Rectangle,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,Rectangle,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc)
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  parent: System.Drawing.Graphics
  isExternal: false
  name: EnumerateMetafile(Metafile,RectangleF,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  nameWithType: Graphics.EnumerateMetafile(Metafile,RectangleF,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,RectangleF,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)
  parent: System.Drawing.Graphics
  isExternal: false
  name: EnumerateMetafile(Metafile,RectangleF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc)
  nameWithType: Graphics.EnumerateMetafile(Metafile,RectangleF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,RectangleF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc)
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  parent: System.Drawing.Graphics
  isExternal: false
  name: EnumerateMetafile(Metafile,Point,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)
  nameWithType: Graphics.EnumerateMetafile(Metafile,Point,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,Point,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  parent: System.Drawing.Graphics
  isExternal: false
  name: EnumerateMetafile(Metafile,Point[],Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)
  nameWithType: Graphics.EnumerateMetafile(Metafile,Point[],Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,Point[],Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  parent: System.Drawing.Graphics
  isExternal: false
  name: EnumerateMetafile(Metafile,PointF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)
  nameWithType: Graphics.EnumerateMetafile(Metafile,PointF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,PointF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  parent: System.Drawing.Graphics
  isExternal: false
  name: EnumerateMetafile(Metafile,PointF[],RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)
  nameWithType: Graphics.EnumerateMetafile(Metafile,PointF[],RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,PointF[],RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  parent: System.Drawing.Graphics
  isExternal: false
  name: EnumerateMetafile(Metafile,Rectangle,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)
  nameWithType: Graphics.EnumerateMetafile(Metafile,Rectangle,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,Rectangle,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  parent: System.Drawing.Graphics
  isExternal: false
  name: EnumerateMetafile(Metafile,RectangleF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)
  nameWithType: Graphics.EnumerateMetafile(Metafile,RectangleF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,RectangleF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  parent: System.Drawing.Graphics
  isExternal: false
  name: EnumerateMetafile(Metafile,Point,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  nameWithType: Graphics.EnumerateMetafile(Metafile,Point,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,Point,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  parent: System.Drawing.Graphics
  isExternal: false
  name: EnumerateMetafile(Metafile,Point[],Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  nameWithType: Graphics.EnumerateMetafile(Metafile,Point[],Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,Point[],Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  parent: System.Drawing.Graphics
  isExternal: false
  name: EnumerateMetafile(Metafile,PointF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  nameWithType: Graphics.EnumerateMetafile(Metafile,PointF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,PointF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  parent: System.Drawing.Graphics
  isExternal: false
  name: EnumerateMetafile(Metafile,PointF[],RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  nameWithType: Graphics.EnumerateMetafile(Metafile,PointF[],RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,PointF[],RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  parent: System.Drawing.Graphics
  isExternal: false
  name: EnumerateMetafile(Metafile,Rectangle,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  nameWithType: Graphics.EnumerateMetafile(Metafile,Rectangle,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,Rectangle,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  parent: System.Drawing.Graphics
  isExternal: false
  name: EnumerateMetafile(Metafile,RectangleF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  nameWithType: Graphics.EnumerateMetafile(Metafile,RectangleF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,RectangleF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
- uid: System.Drawing.Graphics.ExcludeClip(System.Drawing.Rectangle)
  parent: System.Drawing.Graphics
  isExternal: false
  name: ExcludeClip(Rectangle)
  nameWithType: Graphics.ExcludeClip(Rectangle)
  fullName: System.Drawing.Graphics.ExcludeClip(Rectangle)
- uid: System.Drawing.Graphics.ExcludeClip(System.Drawing.Region)
  parent: System.Drawing.Graphics
  isExternal: false
  name: ExcludeClip(Region)
  nameWithType: Graphics.ExcludeClip(Region)
  fullName: System.Drawing.Graphics.ExcludeClip(Region)
- uid: System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[])
  parent: System.Drawing.Graphics
  isExternal: false
  name: FillClosedCurve(Brush,Point[])
  nameWithType: Graphics.FillClosedCurve(Brush,Point[])
  fullName: System.Drawing.Graphics.FillClosedCurve(Brush,Point[])
- uid: System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[])
  parent: System.Drawing.Graphics
  isExternal: false
  name: FillClosedCurve(Brush,PointF[])
  nameWithType: Graphics.FillClosedCurve(Brush,PointF[])
  fullName: System.Drawing.Graphics.FillClosedCurve(Brush,PointF[])
- uid: System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode)
  parent: System.Drawing.Graphics
  isExternal: false
  name: FillClosedCurve(Brush,Point[],FillMode)
  nameWithType: Graphics.FillClosedCurve(Brush,Point[],FillMode)
  fullName: System.Drawing.Graphics.FillClosedCurve(Brush,Point[],FillMode)
- uid: System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode)
  parent: System.Drawing.Graphics
  isExternal: false
  name: FillClosedCurve(Brush,PointF[],FillMode)
  nameWithType: Graphics.FillClosedCurve(Brush,PointF[],FillMode)
  fullName: System.Drawing.Graphics.FillClosedCurve(Brush,PointF[],FillMode)
- uid: System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode,System.Single)
  parent: System.Drawing.Graphics
  isExternal: false
  name: FillClosedCurve(Brush,Point[],FillMode,Single)
  nameWithType: Graphics.FillClosedCurve(Brush,Point[],FillMode,Single)
  fullName: System.Drawing.Graphics.FillClosedCurve(Brush,Point[],FillMode,Single)
- uid: System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode,System.Single)
  parent: System.Drawing.Graphics
  isExternal: false
  name: FillClosedCurve(Brush,PointF[],FillMode,Single)
  nameWithType: Graphics.FillClosedCurve(Brush,PointF[],FillMode,Single)
  fullName: System.Drawing.Graphics.FillClosedCurve(Brush,PointF[],FillMode,Single)
- uid: System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Drawing.Rectangle)
  parent: System.Drawing.Graphics
  isExternal: false
  name: FillEllipse(Brush,Rectangle)
  nameWithType: Graphics.FillEllipse(Brush,Rectangle)
  fullName: System.Drawing.Graphics.FillEllipse(Brush,Rectangle)
- uid: System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Drawing.RectangleF)
  parent: System.Drawing.Graphics
  isExternal: false
  name: FillEllipse(Brush,RectangleF)
  nameWithType: Graphics.FillEllipse(Brush,RectangleF)
  fullName: System.Drawing.Graphics.FillEllipse(Brush,RectangleF)
- uid: System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Drawing.Graphics
  isExternal: false
  name: FillEllipse(Brush,Int32,Int32,Int32,Int32)
  nameWithType: Graphics.FillEllipse(Brush,Int32,Int32,Int32,Int32)
  fullName: System.Drawing.Graphics.FillEllipse(Brush,Int32,Int32,Int32,Int32)
- uid: System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single)
  parent: System.Drawing.Graphics
  isExternal: false
  name: FillEllipse(Brush,Single,Single,Single,Single)
  nameWithType: Graphics.FillEllipse(Brush,Single,Single,Single,Single)
  fullName: System.Drawing.Graphics.FillEllipse(Brush,Single,Single,Single,Single)
- uid: System.Drawing.Graphics.FillPath(System.Drawing.Brush,System.Drawing.Drawing2D.GraphicsPath)
  parent: System.Drawing.Graphics
  isExternal: false
  name: FillPath(Brush,GraphicsPath)
  nameWithType: Graphics.FillPath(Brush,GraphicsPath)
  fullName: System.Drawing.Graphics.FillPath(Brush,GraphicsPath)
- uid: System.Drawing.Graphics.FillPie(System.Drawing.Brush,System.Drawing.Rectangle,System.Single,System.Single)
  parent: System.Drawing.Graphics
  isExternal: false
  name: FillPie(Brush,Rectangle,Single,Single)
  nameWithType: Graphics.FillPie(Brush,Rectangle,Single,Single)
  fullName: System.Drawing.Graphics.FillPie(Brush,Rectangle,Single,Single)
- uid: System.Drawing.Graphics.FillPie(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Drawing.Graphics
  isExternal: false
  name: FillPie(Brush,Int32,Int32,Int32,Int32,Int32,Int32)
  nameWithType: Graphics.FillPie(Brush,Int32,Int32,Int32,Int32,Int32,Int32)
  fullName: System.Drawing.Graphics.FillPie(Brush,Int32,Int32,Int32,Int32,Int32,Int32)
- uid: System.Drawing.Graphics.FillPie(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  parent: System.Drawing.Graphics
  isExternal: false
  name: FillPie(Brush,Single,Single,Single,Single,Single,Single)
  nameWithType: Graphics.FillPie(Brush,Single,Single,Single,Single,Single,Single)
  fullName: System.Drawing.Graphics.FillPie(Brush,Single,Single,Single,Single,Single,Single)
- uid: System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.Point[])
  parent: System.Drawing.Graphics
  isExternal: false
  name: FillPolygon(Brush,Point[])
  nameWithType: Graphics.FillPolygon(Brush,Point[])
  fullName: System.Drawing.Graphics.FillPolygon(Brush,Point[])
- uid: System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.PointF[])
  parent: System.Drawing.Graphics
  isExternal: false
  name: FillPolygon(Brush,PointF[])
  nameWithType: Graphics.FillPolygon(Brush,PointF[])
  fullName: System.Drawing.Graphics.FillPolygon(Brush,PointF[])
- uid: System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode)
  parent: System.Drawing.Graphics
  isExternal: false
  name: FillPolygon(Brush,Point[],FillMode)
  nameWithType: Graphics.FillPolygon(Brush,Point[],FillMode)
  fullName: System.Drawing.Graphics.FillPolygon(Brush,Point[],FillMode)
- uid: System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode)
  parent: System.Drawing.Graphics
  isExternal: false
  name: FillPolygon(Brush,PointF[],FillMode)
  nameWithType: Graphics.FillPolygon(Brush,PointF[],FillMode)
  fullName: System.Drawing.Graphics.FillPolygon(Brush,PointF[],FillMode)
- uid: System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Drawing.Rectangle)
  parent: System.Drawing.Graphics
  isExternal: false
  name: FillRectangle(Brush,Rectangle)
  nameWithType: Graphics.FillRectangle(Brush,Rectangle)
  fullName: System.Drawing.Graphics.FillRectangle(Brush,Rectangle)
- uid: System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Drawing.RectangleF)
  parent: System.Drawing.Graphics
  isExternal: false
  name: FillRectangle(Brush,RectangleF)
  nameWithType: Graphics.FillRectangle(Brush,RectangleF)
  fullName: System.Drawing.Graphics.FillRectangle(Brush,RectangleF)
- uid: System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Drawing.Graphics
  isExternal: false
  name: FillRectangle(Brush,Int32,Int32,Int32,Int32)
  nameWithType: Graphics.FillRectangle(Brush,Int32,Int32,Int32,Int32)
  fullName: System.Drawing.Graphics.FillRectangle(Brush,Int32,Int32,Int32,Int32)
- uid: System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single)
  parent: System.Drawing.Graphics
  isExternal: false
  name: FillRectangle(Brush,Single,Single,Single,Single)
  nameWithType: Graphics.FillRectangle(Brush,Single,Single,Single,Single)
  fullName: System.Drawing.Graphics.FillRectangle(Brush,Single,Single,Single,Single)
- uid: System.Drawing.Graphics.FillRectangles(System.Drawing.Brush,System.Drawing.Rectangle[])
  parent: System.Drawing.Graphics
  isExternal: false
  name: FillRectangles(Brush,Rectangle[])
  nameWithType: Graphics.FillRectangles(Brush,Rectangle[])
  fullName: System.Drawing.Graphics.FillRectangles(Brush,Rectangle[])
- uid: System.Drawing.Graphics.FillRectangles(System.Drawing.Brush,System.Drawing.RectangleF[])
  parent: System.Drawing.Graphics
  isExternal: false
  name: FillRectangles(Brush,RectangleF[])
  nameWithType: Graphics.FillRectangles(Brush,RectangleF[])
  fullName: System.Drawing.Graphics.FillRectangles(Brush,RectangleF[])
- uid: System.Drawing.Graphics.FillRegion(System.Drawing.Brush,System.Drawing.Region)
  parent: System.Drawing.Graphics
  isExternal: false
  name: FillRegion(Brush,Region)
  nameWithType: Graphics.FillRegion(Brush,Region)
  fullName: System.Drawing.Graphics.FillRegion(Brush,Region)
- uid: System.Drawing.Graphics.Finalize
  parent: System.Drawing.Graphics
  isExternal: false
  name: Finalize()
  nameWithType: Graphics.Finalize()
  fullName: System.Drawing.Graphics.Finalize()
- uid: System.Drawing.Graphics.Flush
  parent: System.Drawing.Graphics
  isExternal: false
  name: Flush()
  nameWithType: Graphics.Flush()
  fullName: System.Drawing.Graphics.Flush()
- uid: System.Drawing.Graphics.Flush(System.Drawing.Drawing2D.FlushIntention)
  parent: System.Drawing.Graphics
  isExternal: false
  name: Flush(FlushIntention)
  nameWithType: Graphics.Flush(FlushIntention)
  fullName: System.Drawing.Graphics.Flush(FlushIntention)
- uid: System.Drawing.Drawing2D.FlushIntention
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: FlushIntention
  nameWithType: FlushIntention
  fullName: System.Drawing.Drawing2D.FlushIntention
- uid: System.Drawing.Graphics.FromHdc(System.IntPtr)
  parent: System.Drawing.Graphics
  isExternal: false
  name: FromHdc(IntPtr)
  nameWithType: Graphics.FromHdc(IntPtr)
  fullName: System.Drawing.Graphics.FromHdc(IntPtr)
- uid: System.Drawing.Graphics
  parent: System.Drawing
  isExternal: false
  name: Graphics
  nameWithType: Graphics
  fullName: System.Drawing.Graphics
- uid: System.Drawing.Graphics.FromHdc(System.IntPtr,System.IntPtr)
  parent: System.Drawing.Graphics
  isExternal: false
  name: FromHdc(IntPtr,IntPtr)
  nameWithType: Graphics.FromHdc(IntPtr,IntPtr)
  fullName: System.Drawing.Graphics.FromHdc(IntPtr,IntPtr)
- uid: System.Drawing.Graphics.FromHdcInternal(System.IntPtr)
  parent: System.Drawing.Graphics
  isExternal: false
  name: FromHdcInternal(IntPtr)
  nameWithType: Graphics.FromHdcInternal(IntPtr)
  fullName: System.Drawing.Graphics.FromHdcInternal(IntPtr)
- uid: System.Drawing.Graphics.FromHwnd(System.IntPtr)
  parent: System.Drawing.Graphics
  isExternal: false
  name: FromHwnd(IntPtr)
  nameWithType: Graphics.FromHwnd(IntPtr)
  fullName: System.Drawing.Graphics.FromHwnd(IntPtr)
- uid: System.Drawing.Graphics.FromHwndInternal(System.IntPtr)
  parent: System.Drawing.Graphics
  isExternal: false
  name: FromHwndInternal(IntPtr)
  nameWithType: Graphics.FromHwndInternal(IntPtr)
  fullName: System.Drawing.Graphics.FromHwndInternal(IntPtr)
- uid: System.Drawing.Graphics.FromImage(System.Drawing.Image)
  parent: System.Drawing.Graphics
  isExternal: false
  name: FromImage(Image)
  nameWithType: Graphics.FromImage(Image)
  fullName: System.Drawing.Graphics.FromImage(Image)
- uid: System.Drawing.Graphics.GetContextInfo
  parent: System.Drawing.Graphics
  isExternal: false
  name: GetContextInfo()
  nameWithType: Graphics.GetContextInfo()
  fullName: System.Drawing.Graphics.GetContextInfo()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Drawing.Graphics.GetHalftonePalette
  parent: System.Drawing.Graphics
  isExternal: false
  name: GetHalftonePalette()
  nameWithType: Graphics.GetHalftonePalette()
  fullName: System.Drawing.Graphics.GetHalftonePalette()
- uid: System.Drawing.Graphics.GetHdc
  parent: System.Drawing.Graphics
  isExternal: false
  name: GetHdc()
  nameWithType: Graphics.GetHdc()
  fullName: System.Drawing.Graphics.GetHdc()
- uid: System.Drawing.Graphics.GetNearestColor(System.Drawing.Color)
  parent: System.Drawing.Graphics
  isExternal: false
  name: GetNearestColor(Color)
  nameWithType: Graphics.GetNearestColor(Color)
  fullName: System.Drawing.Graphics.GetNearestColor(Color)
- uid: System.Drawing.Graphics.InterpolationMode
  parent: System.Drawing.Graphics
  isExternal: false
  name: InterpolationMode
  nameWithType: Graphics.InterpolationMode
  fullName: System.Drawing.Graphics.InterpolationMode
- uid: System.Drawing.Drawing2D.InterpolationMode
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: InterpolationMode
  nameWithType: InterpolationMode
  fullName: System.Drawing.Drawing2D.InterpolationMode
- uid: System.Drawing.Graphics.IntersectClip(System.Drawing.Rectangle)
  parent: System.Drawing.Graphics
  isExternal: false
  name: IntersectClip(Rectangle)
  nameWithType: Graphics.IntersectClip(Rectangle)
  fullName: System.Drawing.Graphics.IntersectClip(Rectangle)
- uid: System.Drawing.Graphics.IntersectClip(System.Drawing.RectangleF)
  parent: System.Drawing.Graphics
  isExternal: false
  name: IntersectClip(RectangleF)
  nameWithType: Graphics.IntersectClip(RectangleF)
  fullName: System.Drawing.Graphics.IntersectClip(RectangleF)
- uid: System.Drawing.Graphics.IntersectClip(System.Drawing.Region)
  parent: System.Drawing.Graphics
  isExternal: false
  name: IntersectClip(Region)
  nameWithType: Graphics.IntersectClip(Region)
  fullName: System.Drawing.Graphics.IntersectClip(Region)
- uid: System.Drawing.Graphics.IsClipEmpty
  parent: System.Drawing.Graphics
  isExternal: false
  name: IsClipEmpty
  nameWithType: Graphics.IsClipEmpty
  fullName: System.Drawing.Graphics.IsClipEmpty
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Drawing.Graphics.IsVisible(System.Drawing.Point)
  parent: System.Drawing.Graphics
  isExternal: false
  name: IsVisible(Point)
  nameWithType: Graphics.IsVisible(Point)
  fullName: System.Drawing.Graphics.IsVisible(Point)
- uid: System.Drawing.Graphics.IsVisible(System.Drawing.PointF)
  parent: System.Drawing.Graphics
  isExternal: false
  name: IsVisible(PointF)
  nameWithType: Graphics.IsVisible(PointF)
  fullName: System.Drawing.Graphics.IsVisible(PointF)
- uid: System.Drawing.Graphics.IsVisible(System.Drawing.Rectangle)
  parent: System.Drawing.Graphics
  isExternal: false
  name: IsVisible(Rectangle)
  nameWithType: Graphics.IsVisible(Rectangle)
  fullName: System.Drawing.Graphics.IsVisible(Rectangle)
- uid: System.Drawing.Graphics.IsVisible(System.Drawing.RectangleF)
  parent: System.Drawing.Graphics
  isExternal: false
  name: IsVisible(RectangleF)
  nameWithType: Graphics.IsVisible(RectangleF)
  fullName: System.Drawing.Graphics.IsVisible(RectangleF)
- uid: System.Drawing.Graphics.IsVisible(System.Int32,System.Int32)
  parent: System.Drawing.Graphics
  isExternal: false
  name: IsVisible(Int32,Int32)
  nameWithType: Graphics.IsVisible(Int32,Int32)
  fullName: System.Drawing.Graphics.IsVisible(Int32,Int32)
- uid: System.Drawing.Graphics.IsVisible(System.Single,System.Single)
  parent: System.Drawing.Graphics
  isExternal: false
  name: IsVisible(Single,Single)
  nameWithType: Graphics.IsVisible(Single,Single)
  fullName: System.Drawing.Graphics.IsVisible(Single,Single)
- uid: System.Drawing.Graphics.IsVisible(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Drawing.Graphics
  isExternal: false
  name: IsVisible(Int32,Int32,Int32,Int32)
  nameWithType: Graphics.IsVisible(Int32,Int32,Int32,Int32)
  fullName: System.Drawing.Graphics.IsVisible(Int32,Int32,Int32,Int32)
- uid: System.Drawing.Graphics.IsVisible(System.Single,System.Single,System.Single,System.Single)
  parent: System.Drawing.Graphics
  isExternal: false
  name: IsVisible(Single,Single,Single,Single)
  nameWithType: Graphics.IsVisible(Single,Single,Single,Single)
  fullName: System.Drawing.Graphics.IsVisible(Single,Single,Single,Single)
- uid: System.Drawing.Graphics.IsVisibleClipEmpty
  parent: System.Drawing.Graphics
  isExternal: false
  name: IsVisibleClipEmpty
  nameWithType: Graphics.IsVisibleClipEmpty
  fullName: System.Drawing.Graphics.IsVisibleClipEmpty
- uid: System.Drawing.Graphics.MeasureCharacterRanges(System.String,System.Drawing.Font,System.Drawing.RectangleF,System.Drawing.StringFormat)
  parent: System.Drawing.Graphics
  isExternal: false
  name: MeasureCharacterRanges(String,Font,RectangleF,StringFormat)
  nameWithType: Graphics.MeasureCharacterRanges(String,Font,RectangleF,StringFormat)
  fullName: System.Drawing.Graphics.MeasureCharacterRanges(String,Font,RectangleF,StringFormat)
- uid: System.Drawing.Region[]
  parent: System.Drawing
  isExternal: false
  name: Region
  nameWithType: Region
  fullName: System.Drawing.Region[]
  spec.csharp:
  - uid: System.Drawing.Region
    name: Region
    nameWithType: Region
    fullName: Region[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font)
  parent: System.Drawing.Graphics
  isExternal: false
  name: MeasureString(String,Font)
  nameWithType: Graphics.MeasureString(String,Font)
  fullName: System.Drawing.Graphics.MeasureString(String,Font)
- uid: System.Drawing.SizeF
  parent: System.Drawing
  isExternal: false
  name: SizeF
  nameWithType: SizeF
  fullName: System.Drawing.SizeF
- uid: System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF)
  parent: System.Drawing.Graphics
  isExternal: false
  name: MeasureString(String,Font,SizeF)
  nameWithType: Graphics.MeasureString(String,Font,SizeF)
  fullName: System.Drawing.Graphics.MeasureString(String,Font,SizeF)
- uid: System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Int32)
  parent: System.Drawing.Graphics
  isExternal: false
  name: MeasureString(String,Font,Int32)
  nameWithType: Graphics.MeasureString(String,Font,Int32)
  fullName: System.Drawing.Graphics.MeasureString(String,Font,Int32)
- uid: System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.PointF,System.Drawing.StringFormat)
  parent: System.Drawing.Graphics
  isExternal: false
  name: MeasureString(String,Font,PointF,StringFormat)
  nameWithType: Graphics.MeasureString(String,Font,PointF,StringFormat)
  fullName: System.Drawing.Graphics.MeasureString(String,Font,PointF,StringFormat)
- uid: System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat)
  parent: System.Drawing.Graphics
  isExternal: false
  name: MeasureString(String,Font,SizeF,StringFormat)
  nameWithType: Graphics.MeasureString(String,Font,SizeF,StringFormat)
  fullName: System.Drawing.Graphics.MeasureString(String,Font,SizeF,StringFormat)
- uid: System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Int32,System.Drawing.StringFormat)
  parent: System.Drawing.Graphics
  isExternal: false
  name: MeasureString(String,Font,Int32,StringFormat)
  nameWithType: Graphics.MeasureString(String,Font,Int32,StringFormat)
  fullName: System.Drawing.Graphics.MeasureString(String,Font,Int32,StringFormat)
- uid: System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat,System.Int32@,System.Int32@)
  parent: System.Drawing.Graphics
  isExternal: false
  name: MeasureString(String,Font,SizeF,StringFormat,Int32,Int32)
  nameWithType: Graphics.MeasureString(String,Font,SizeF,StringFormat,Int32,Int32)
  fullName: System.Drawing.Graphics.MeasureString(String,Font,SizeF,StringFormat,Int32,Int32)
- uid: System.Drawing.Graphics.MultiplyTransform(System.Drawing.Drawing2D.Matrix)
  parent: System.Drawing.Graphics
  isExternal: false
  name: MultiplyTransform(Matrix)
  nameWithType: Graphics.MultiplyTransform(Matrix)
  fullName: System.Drawing.Graphics.MultiplyTransform(Matrix)
- uid: System.Drawing.Drawing2D.Matrix
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: Matrix
  nameWithType: Matrix
  fullName: System.Drawing.Drawing2D.Matrix
- uid: System.Drawing.Graphics.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Graphics
  isExternal: false
  name: MultiplyTransform(Matrix,MatrixOrder)
  nameWithType: Graphics.MultiplyTransform(Matrix,MatrixOrder)
  fullName: System.Drawing.Graphics.MultiplyTransform(Matrix,MatrixOrder)
- uid: System.Drawing.Drawing2D.MatrixOrder
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: MatrixOrder
  nameWithType: MatrixOrder
  fullName: System.Drawing.Drawing2D.MatrixOrder
- uid: System.Drawing.Graphics.PageScale
  parent: System.Drawing.Graphics
  isExternal: false
  name: PageScale
  nameWithType: Graphics.PageScale
  fullName: System.Drawing.Graphics.PageScale
- uid: System.Drawing.Graphics.PageUnit
  parent: System.Drawing.Graphics
  isExternal: false
  name: PageUnit
  nameWithType: Graphics.PageUnit
  fullName: System.Drawing.Graphics.PageUnit
- uid: System.Drawing.Graphics.PixelOffsetMode
  parent: System.Drawing.Graphics
  isExternal: false
  name: PixelOffsetMode
  nameWithType: Graphics.PixelOffsetMode
  fullName: System.Drawing.Graphics.PixelOffsetMode
- uid: System.Drawing.Drawing2D.PixelOffsetMode
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: PixelOffsetMode
  nameWithType: PixelOffsetMode
  fullName: System.Drawing.Drawing2D.PixelOffsetMode
- uid: System.Drawing.Graphics.ReleaseHdc
  parent: System.Drawing.Graphics
  isExternal: false
  name: ReleaseHdc()
  nameWithType: Graphics.ReleaseHdc()
  fullName: System.Drawing.Graphics.ReleaseHdc()
- uid: System.Drawing.Graphics.ReleaseHdc(System.IntPtr)
  parent: System.Drawing.Graphics
  isExternal: false
  name: ReleaseHdc(IntPtr)
  nameWithType: Graphics.ReleaseHdc(IntPtr)
  fullName: System.Drawing.Graphics.ReleaseHdc(IntPtr)
- uid: System.Drawing.Graphics.ReleaseHdcInternal(System.IntPtr)
  parent: System.Drawing.Graphics
  isExternal: false
  name: ReleaseHdcInternal(IntPtr)
  nameWithType: Graphics.ReleaseHdcInternal(IntPtr)
  fullName: System.Drawing.Graphics.ReleaseHdcInternal(IntPtr)
- uid: System.Drawing.Graphics.RenderingOrigin
  parent: System.Drawing.Graphics
  isExternal: false
  name: RenderingOrigin
  nameWithType: Graphics.RenderingOrigin
  fullName: System.Drawing.Graphics.RenderingOrigin
- uid: System.Drawing.Graphics.ResetClip
  parent: System.Drawing.Graphics
  isExternal: false
  name: ResetClip()
  nameWithType: Graphics.ResetClip()
  fullName: System.Drawing.Graphics.ResetClip()
- uid: System.Drawing.Graphics.ResetTransform
  parent: System.Drawing.Graphics
  isExternal: false
  name: ResetTransform()
  nameWithType: Graphics.ResetTransform()
  fullName: System.Drawing.Graphics.ResetTransform()
- uid: System.Drawing.Graphics.Restore(System.Drawing.Drawing2D.GraphicsState)
  parent: System.Drawing.Graphics
  isExternal: false
  name: Restore(GraphicsState)
  nameWithType: Graphics.Restore(GraphicsState)
  fullName: System.Drawing.Graphics.Restore(GraphicsState)
- uid: System.Drawing.Drawing2D.GraphicsState
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: GraphicsState
  nameWithType: GraphicsState
  fullName: System.Drawing.Drawing2D.GraphicsState
- uid: System.Drawing.Graphics.RotateTransform(System.Single)
  parent: System.Drawing.Graphics
  isExternal: false
  name: RotateTransform(Single)
  nameWithType: Graphics.RotateTransform(Single)
  fullName: System.Drawing.Graphics.RotateTransform(Single)
- uid: System.Drawing.Graphics.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Graphics
  isExternal: false
  name: RotateTransform(Single,MatrixOrder)
  nameWithType: Graphics.RotateTransform(Single,MatrixOrder)
  fullName: System.Drawing.Graphics.RotateTransform(Single,MatrixOrder)
- uid: System.Drawing.Graphics.Save
  parent: System.Drawing.Graphics
  isExternal: false
  name: Save()
  nameWithType: Graphics.Save()
  fullName: System.Drawing.Graphics.Save()
- uid: System.Drawing.Graphics.ScaleTransform(System.Single,System.Single)
  parent: System.Drawing.Graphics
  isExternal: false
  name: ScaleTransform(Single,Single)
  nameWithType: Graphics.ScaleTransform(Single,Single)
  fullName: System.Drawing.Graphics.ScaleTransform(Single,Single)
- uid: System.Drawing.Graphics.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Graphics
  isExternal: false
  name: ScaleTransform(Single,Single,MatrixOrder)
  nameWithType: Graphics.ScaleTransform(Single,Single,MatrixOrder)
  fullName: System.Drawing.Graphics.ScaleTransform(Single,Single,MatrixOrder)
- uid: System.Drawing.Graphics.SetClip(System.Drawing.Drawing2D.GraphicsPath)
  parent: System.Drawing.Graphics
  isExternal: false
  name: SetClip(GraphicsPath)
  nameWithType: Graphics.SetClip(GraphicsPath)
  fullName: System.Drawing.Graphics.SetClip(GraphicsPath)
- uid: System.Drawing.Graphics.SetClip(System.Drawing.Graphics)
  parent: System.Drawing.Graphics
  isExternal: false
  name: SetClip(Graphics)
  nameWithType: Graphics.SetClip(Graphics)
  fullName: System.Drawing.Graphics.SetClip(Graphics)
- uid: System.Drawing.Graphics.SetClip(System.Drawing.Rectangle)
  parent: System.Drawing.Graphics
  isExternal: false
  name: SetClip(Rectangle)
  nameWithType: Graphics.SetClip(Rectangle)
  fullName: System.Drawing.Graphics.SetClip(Rectangle)
- uid: System.Drawing.Graphics.SetClip(System.Drawing.RectangleF)
  parent: System.Drawing.Graphics
  isExternal: false
  name: SetClip(RectangleF)
  nameWithType: Graphics.SetClip(RectangleF)
  fullName: System.Drawing.Graphics.SetClip(RectangleF)
- uid: System.Drawing.Graphics.SetClip(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.CombineMode)
  parent: System.Drawing.Graphics
  isExternal: false
  name: SetClip(GraphicsPath,CombineMode)
  nameWithType: Graphics.SetClip(GraphicsPath,CombineMode)
  fullName: System.Drawing.Graphics.SetClip(GraphicsPath,CombineMode)
- uid: System.Drawing.Drawing2D.CombineMode
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: CombineMode
  nameWithType: CombineMode
  fullName: System.Drawing.Drawing2D.CombineMode
- uid: System.Drawing.Graphics.SetClip(System.Drawing.Graphics,System.Drawing.Drawing2D.CombineMode)
  parent: System.Drawing.Graphics
  isExternal: false
  name: SetClip(Graphics,CombineMode)
  nameWithType: Graphics.SetClip(Graphics,CombineMode)
  fullName: System.Drawing.Graphics.SetClip(Graphics,CombineMode)
- uid: System.Drawing.Graphics.SetClip(System.Drawing.Rectangle,System.Drawing.Drawing2D.CombineMode)
  parent: System.Drawing.Graphics
  isExternal: false
  name: SetClip(Rectangle,CombineMode)
  nameWithType: Graphics.SetClip(Rectangle,CombineMode)
  fullName: System.Drawing.Graphics.SetClip(Rectangle,CombineMode)
- uid: System.Drawing.Graphics.SetClip(System.Drawing.RectangleF,System.Drawing.Drawing2D.CombineMode)
  parent: System.Drawing.Graphics
  isExternal: false
  name: SetClip(RectangleF,CombineMode)
  nameWithType: Graphics.SetClip(RectangleF,CombineMode)
  fullName: System.Drawing.Graphics.SetClip(RectangleF,CombineMode)
- uid: System.Drawing.Graphics.SetClip(System.Drawing.Region,System.Drawing.Drawing2D.CombineMode)
  parent: System.Drawing.Graphics
  isExternal: false
  name: SetClip(Region,CombineMode)
  nameWithType: Graphics.SetClip(Region,CombineMode)
  fullName: System.Drawing.Graphics.SetClip(Region,CombineMode)
- uid: System.Drawing.Graphics.SmoothingMode
  parent: System.Drawing.Graphics
  isExternal: false
  name: SmoothingMode
  nameWithType: Graphics.SmoothingMode
  fullName: System.Drawing.Graphics.SmoothingMode
- uid: System.Drawing.Drawing2D.SmoothingMode
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: SmoothingMode
  nameWithType: SmoothingMode
  fullName: System.Drawing.Drawing2D.SmoothingMode
- uid: System.Drawing.Graphics.TextContrast
  parent: System.Drawing.Graphics
  isExternal: false
  name: TextContrast
  nameWithType: Graphics.TextContrast
  fullName: System.Drawing.Graphics.TextContrast
- uid: System.Drawing.Graphics.TextRenderingHint
  parent: System.Drawing.Graphics
  isExternal: false
  name: TextRenderingHint
  nameWithType: Graphics.TextRenderingHint
  fullName: System.Drawing.Graphics.TextRenderingHint
- uid: System.Drawing.Text.TextRenderingHint
  parent: System.Drawing.Text
  isExternal: false
  name: TextRenderingHint
  nameWithType: TextRenderingHint
  fullName: System.Drawing.Text.TextRenderingHint
- uid: System.Drawing.Graphics.Transform
  parent: System.Drawing.Graphics
  isExternal: false
  name: Transform
  nameWithType: Graphics.Transform
  fullName: System.Drawing.Graphics.Transform
- uid: System.Drawing.Graphics.TransformPoints(System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.Point[])
  parent: System.Drawing.Graphics
  isExternal: false
  name: TransformPoints(CoordinateSpace,CoordinateSpace,Point[])
  nameWithType: Graphics.TransformPoints(CoordinateSpace,CoordinateSpace,Point[])
  fullName: System.Drawing.Graphics.TransformPoints(CoordinateSpace,CoordinateSpace,Point[])
- uid: System.Drawing.Drawing2D.CoordinateSpace
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: CoordinateSpace
  nameWithType: CoordinateSpace
  fullName: System.Drawing.Drawing2D.CoordinateSpace
- uid: System.Drawing.Graphics.TransformPoints(System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.PointF[])
  parent: System.Drawing.Graphics
  isExternal: false
  name: TransformPoints(CoordinateSpace,CoordinateSpace,PointF[])
  nameWithType: Graphics.TransformPoints(CoordinateSpace,CoordinateSpace,PointF[])
  fullName: System.Drawing.Graphics.TransformPoints(CoordinateSpace,CoordinateSpace,PointF[])
- uid: System.Drawing.Graphics.TranslateClip(System.Int32,System.Int32)
  parent: System.Drawing.Graphics
  isExternal: false
  name: TranslateClip(Int32,Int32)
  nameWithType: Graphics.TranslateClip(Int32,Int32)
  fullName: System.Drawing.Graphics.TranslateClip(Int32,Int32)
- uid: System.Drawing.Graphics.TranslateClip(System.Single,System.Single)
  parent: System.Drawing.Graphics
  isExternal: false
  name: TranslateClip(Single,Single)
  nameWithType: Graphics.TranslateClip(Single,Single)
  fullName: System.Drawing.Graphics.TranslateClip(Single,Single)
- uid: System.Drawing.Graphics.TranslateTransform(System.Single,System.Single)
  parent: System.Drawing.Graphics
  isExternal: false
  name: TranslateTransform(Single,Single)
  nameWithType: Graphics.TranslateTransform(Single,Single)
  fullName: System.Drawing.Graphics.TranslateTransform(Single,Single)
- uid: System.Drawing.Graphics.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Graphics
  isExternal: false
  name: TranslateTransform(Single,Single,MatrixOrder)
  nameWithType: Graphics.TranslateTransform(Single,Single,MatrixOrder)
  fullName: System.Drawing.Graphics.TranslateTransform(Single,Single,MatrixOrder)
- uid: System.Drawing.Graphics.VisibleClipBounds
  parent: System.Drawing.Graphics
  isExternal: false
  name: VisibleClipBounds
  nameWithType: Graphics.VisibleClipBounds
  fullName: System.Drawing.Graphics.VisibleClipBounds
- uid: System.Drawing.Graphics.AddMetafileComment*
  parent: System.Drawing.Graphics
  isExternal: false
  name: AddMetafileComment
  nameWithType: Graphics.AddMetafileComment
- uid: System.Drawing.Graphics.BeginContainer*
  parent: System.Drawing.Graphics
  isExternal: false
  name: BeginContainer
  nameWithType: Graphics.BeginContainer
- uid: System.Drawing.Graphics.Clear*
  parent: System.Drawing.Graphics
  isExternal: false
  name: Clear
  nameWithType: Graphics.Clear
- uid: System.Drawing.Graphics.Clip*
  parent: System.Drawing.Graphics
  isExternal: false
  name: Clip
  nameWithType: Graphics.Clip
- uid: System.Drawing.Graphics.ClipBounds*
  parent: System.Drawing.Graphics
  isExternal: false
  name: ClipBounds
  nameWithType: Graphics.ClipBounds
- uid: System.Drawing.Graphics.CompositingMode*
  parent: System.Drawing.Graphics
  isExternal: false
  name: CompositingMode
  nameWithType: Graphics.CompositingMode
- uid: System.Drawing.Graphics.CompositingQuality*
  parent: System.Drawing.Graphics
  isExternal: false
  name: CompositingQuality
  nameWithType: Graphics.CompositingQuality
- uid: System.Drawing.Graphics.CopyFromScreen*
  parent: System.Drawing.Graphics
  isExternal: false
  name: CopyFromScreen
  nameWithType: Graphics.CopyFromScreen
- uid: System.Drawing.Graphics.Dispose*
  parent: System.Drawing.Graphics
  isExternal: false
  name: Dispose
  nameWithType: Graphics.Dispose
- uid: System.Drawing.Graphics.DpiX*
  parent: System.Drawing.Graphics
  isExternal: false
  name: DpiX
  nameWithType: Graphics.DpiX
- uid: System.Drawing.Graphics.DpiY*
  parent: System.Drawing.Graphics
  isExternal: false
  name: DpiY
  nameWithType: Graphics.DpiY
- uid: System.Drawing.Graphics.DrawArc*
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawArc
  nameWithType: Graphics.DrawArc
- uid: System.Drawing.Graphics.DrawBezier*
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawBezier
  nameWithType: Graphics.DrawBezier
- uid: System.Drawing.Graphics.DrawBeziers*
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawBeziers
  nameWithType: Graphics.DrawBeziers
- uid: System.Drawing.Graphics.DrawClosedCurve*
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawClosedCurve
  nameWithType: Graphics.DrawClosedCurve
- uid: System.Drawing.Graphics.DrawCurve*
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawCurve
  nameWithType: Graphics.DrawCurve
- uid: System.Drawing.Graphics.DrawEllipse*
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawEllipse
  nameWithType: Graphics.DrawEllipse
- uid: System.Drawing.Graphics.DrawIcon*
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawIcon
  nameWithType: Graphics.DrawIcon
- uid: System.Drawing.Graphics.DrawIconUnstretched*
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawIconUnstretched
  nameWithType: Graphics.DrawIconUnstretched
- uid: System.Drawing.Graphics.DrawImage*
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawImage
  nameWithType: Graphics.DrawImage
- uid: System.Drawing.Graphics.DrawImageUnscaled*
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawImageUnscaled
  nameWithType: Graphics.DrawImageUnscaled
- uid: System.Drawing.Graphics.DrawImageUnscaledAndClipped*
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawImageUnscaledAndClipped
  nameWithType: Graphics.DrawImageUnscaledAndClipped
- uid: System.Drawing.Graphics.DrawLine*
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawLine
  nameWithType: Graphics.DrawLine
- uid: System.Drawing.Graphics.DrawLines*
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawLines
  nameWithType: Graphics.DrawLines
- uid: System.Drawing.Graphics.DrawPath*
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawPath
  nameWithType: Graphics.DrawPath
- uid: System.Drawing.Graphics.DrawPie*
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawPie
  nameWithType: Graphics.DrawPie
- uid: System.Drawing.Graphics.DrawPolygon*
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawPolygon
  nameWithType: Graphics.DrawPolygon
- uid: System.Drawing.Graphics.DrawRectangle*
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawRectangle
  nameWithType: Graphics.DrawRectangle
- uid: System.Drawing.Graphics.DrawRectangles*
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawRectangles
  nameWithType: Graphics.DrawRectangles
- uid: System.Drawing.Graphics.DrawString*
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawString
  nameWithType: Graphics.DrawString
- uid: System.Drawing.Graphics.EndContainer*
  parent: System.Drawing.Graphics
  isExternal: false
  name: EndContainer
  nameWithType: Graphics.EndContainer
- uid: System.Drawing.Graphics.EnumerateMetafile*
  parent: System.Drawing.Graphics
  isExternal: false
  name: EnumerateMetafile
  nameWithType: Graphics.EnumerateMetafile
- uid: System.Drawing.Graphics.ExcludeClip*
  parent: System.Drawing.Graphics
  isExternal: false
  name: ExcludeClip
  nameWithType: Graphics.ExcludeClip
- uid: System.Drawing.Graphics.FillClosedCurve*
  parent: System.Drawing.Graphics
  isExternal: false
  name: FillClosedCurve
  nameWithType: Graphics.FillClosedCurve
- uid: System.Drawing.Graphics.FillEllipse*
  parent: System.Drawing.Graphics
  isExternal: false
  name: FillEllipse
  nameWithType: Graphics.FillEllipse
- uid: System.Drawing.Graphics.FillPath*
  parent: System.Drawing.Graphics
  isExternal: false
  name: FillPath
  nameWithType: Graphics.FillPath
- uid: System.Drawing.Graphics.FillPie*
  parent: System.Drawing.Graphics
  isExternal: false
  name: FillPie
  nameWithType: Graphics.FillPie
- uid: System.Drawing.Graphics.FillPolygon*
  parent: System.Drawing.Graphics
  isExternal: false
  name: FillPolygon
  nameWithType: Graphics.FillPolygon
- uid: System.Drawing.Graphics.FillRectangle*
  parent: System.Drawing.Graphics
  isExternal: false
  name: FillRectangle
  nameWithType: Graphics.FillRectangle
- uid: System.Drawing.Graphics.FillRectangles*
  parent: System.Drawing.Graphics
  isExternal: false
  name: FillRectangles
  nameWithType: Graphics.FillRectangles
- uid: System.Drawing.Graphics.FillRegion*
  parent: System.Drawing.Graphics
  isExternal: false
  name: FillRegion
  nameWithType: Graphics.FillRegion
- uid: System.Drawing.Graphics.Finalize*
  parent: System.Drawing.Graphics
  isExternal: false
  name: Finalize
  nameWithType: Graphics.Finalize
- uid: System.Drawing.Graphics.Flush*
  parent: System.Drawing.Graphics
  isExternal: false
  name: Flush
  nameWithType: Graphics.Flush
- uid: System.Drawing.Graphics.FromHdc*
  parent: System.Drawing.Graphics
  isExternal: false
  name: FromHdc
  nameWithType: Graphics.FromHdc
- uid: System.Drawing.Graphics.FromHdcInternal*
  parent: System.Drawing.Graphics
  isExternal: false
  name: FromHdcInternal
  nameWithType: Graphics.FromHdcInternal
- uid: System.Drawing.Graphics.FromHwnd*
  parent: System.Drawing.Graphics
  isExternal: false
  name: FromHwnd
  nameWithType: Graphics.FromHwnd
- uid: System.Drawing.Graphics.FromHwndInternal*
  parent: System.Drawing.Graphics
  isExternal: false
  name: FromHwndInternal
  nameWithType: Graphics.FromHwndInternal
- uid: System.Drawing.Graphics.FromImage*
  parent: System.Drawing.Graphics
  isExternal: false
  name: FromImage
  nameWithType: Graphics.FromImage
- uid: System.Drawing.Graphics.GetContextInfo*
  parent: System.Drawing.Graphics
  isExternal: false
  name: GetContextInfo
  nameWithType: Graphics.GetContextInfo
- uid: System.Drawing.Graphics.GetHalftonePalette*
  parent: System.Drawing.Graphics
  isExternal: false
  name: GetHalftonePalette
  nameWithType: Graphics.GetHalftonePalette
- uid: System.Drawing.Graphics.GetHdc*
  parent: System.Drawing.Graphics
  isExternal: false
  name: GetHdc
  nameWithType: Graphics.GetHdc
- uid: System.Drawing.Graphics.GetNearestColor*
  parent: System.Drawing.Graphics
  isExternal: false
  name: GetNearestColor
  nameWithType: Graphics.GetNearestColor
- uid: System.Drawing.Graphics.InterpolationMode*
  parent: System.Drawing.Graphics
  isExternal: false
  name: InterpolationMode
  nameWithType: Graphics.InterpolationMode
- uid: System.Drawing.Graphics.IntersectClip*
  parent: System.Drawing.Graphics
  isExternal: false
  name: IntersectClip
  nameWithType: Graphics.IntersectClip
- uid: System.Drawing.Graphics.IsClipEmpty*
  parent: System.Drawing.Graphics
  isExternal: false
  name: IsClipEmpty
  nameWithType: Graphics.IsClipEmpty
- uid: System.Drawing.Graphics.IsVisible*
  parent: System.Drawing.Graphics
  isExternal: false
  name: IsVisible
  nameWithType: Graphics.IsVisible
- uid: System.Drawing.Graphics.IsVisibleClipEmpty*
  parent: System.Drawing.Graphics
  isExternal: false
  name: IsVisibleClipEmpty
  nameWithType: Graphics.IsVisibleClipEmpty
- uid: System.Drawing.Graphics.MeasureCharacterRanges*
  parent: System.Drawing.Graphics
  isExternal: false
  name: MeasureCharacterRanges
  nameWithType: Graphics.MeasureCharacterRanges
- uid: System.Drawing.Graphics.MeasureString*
  parent: System.Drawing.Graphics
  isExternal: false
  name: MeasureString
  nameWithType: Graphics.MeasureString
- uid: System.Drawing.Graphics.MultiplyTransform*
  parent: System.Drawing.Graphics
  isExternal: false
  name: MultiplyTransform
  nameWithType: Graphics.MultiplyTransform
- uid: System.Drawing.Graphics.PageScale*
  parent: System.Drawing.Graphics
  isExternal: false
  name: PageScale
  nameWithType: Graphics.PageScale
- uid: System.Drawing.Graphics.PageUnit*
  parent: System.Drawing.Graphics
  isExternal: false
  name: PageUnit
  nameWithType: Graphics.PageUnit
- uid: System.Drawing.Graphics.PixelOffsetMode*
  parent: System.Drawing.Graphics
  isExternal: false
  name: PixelOffsetMode
  nameWithType: Graphics.PixelOffsetMode
- uid: System.Drawing.Graphics.ReleaseHdc*
  parent: System.Drawing.Graphics
  isExternal: false
  name: ReleaseHdc
  nameWithType: Graphics.ReleaseHdc
- uid: System.Drawing.Graphics.ReleaseHdcInternal*
  parent: System.Drawing.Graphics
  isExternal: false
  name: ReleaseHdcInternal
  nameWithType: Graphics.ReleaseHdcInternal
- uid: System.Drawing.Graphics.RenderingOrigin*
  parent: System.Drawing.Graphics
  isExternal: false
  name: RenderingOrigin
  nameWithType: Graphics.RenderingOrigin
- uid: System.Drawing.Graphics.ResetClip*
  parent: System.Drawing.Graphics
  isExternal: false
  name: ResetClip
  nameWithType: Graphics.ResetClip
- uid: System.Drawing.Graphics.ResetTransform*
  parent: System.Drawing.Graphics
  isExternal: false
  name: ResetTransform
  nameWithType: Graphics.ResetTransform
- uid: System.Drawing.Graphics.Restore*
  parent: System.Drawing.Graphics
  isExternal: false
  name: Restore
  nameWithType: Graphics.Restore
- uid: System.Drawing.Graphics.RotateTransform*
  parent: System.Drawing.Graphics
  isExternal: false
  name: RotateTransform
  nameWithType: Graphics.RotateTransform
- uid: System.Drawing.Graphics.Save*
  parent: System.Drawing.Graphics
  isExternal: false
  name: Save
  nameWithType: Graphics.Save
- uid: System.Drawing.Graphics.ScaleTransform*
  parent: System.Drawing.Graphics
  isExternal: false
  name: ScaleTransform
  nameWithType: Graphics.ScaleTransform
- uid: System.Drawing.Graphics.SetClip*
  parent: System.Drawing.Graphics
  isExternal: false
  name: SetClip
  nameWithType: Graphics.SetClip
- uid: System.Drawing.Graphics.SmoothingMode*
  parent: System.Drawing.Graphics
  isExternal: false
  name: SmoothingMode
  nameWithType: Graphics.SmoothingMode
- uid: System.Drawing.Graphics.TextContrast*
  parent: System.Drawing.Graphics
  isExternal: false
  name: TextContrast
  nameWithType: Graphics.TextContrast
- uid: System.Drawing.Graphics.TextRenderingHint*
  parent: System.Drawing.Graphics
  isExternal: false
  name: TextRenderingHint
  nameWithType: Graphics.TextRenderingHint
- uid: System.Drawing.Graphics.Transform*
  parent: System.Drawing.Graphics
  isExternal: false
  name: Transform
  nameWithType: Graphics.Transform
- uid: System.Drawing.Graphics.TransformPoints*
  parent: System.Drawing.Graphics
  isExternal: false
  name: TransformPoints
  nameWithType: Graphics.TransformPoints
- uid: System.Drawing.Graphics.TranslateClip*
  parent: System.Drawing.Graphics
  isExternal: false
  name: TranslateClip
  nameWithType: Graphics.TranslateClip
- uid: System.Drawing.Graphics.TranslateTransform*
  parent: System.Drawing.Graphics
  isExternal: false
  name: TranslateTransform
  nameWithType: Graphics.TranslateTransform
- uid: System.Drawing.Graphics.VisibleClipBounds*
  parent: System.Drawing.Graphics
  isExternal: false
  name: VisibleClipBounds
  nameWithType: Graphics.VisibleClipBounds
