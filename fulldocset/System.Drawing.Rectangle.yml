### YamlMime:ManagedReference
items:
- uid: System.Drawing.Rectangle
  id: Rectangle
  children:
  - System.Drawing.Rectangle.#ctor(System.Drawing.Point,System.Drawing.Size)
  - System.Drawing.Rectangle.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Drawing.Rectangle.Bottom
  - System.Drawing.Rectangle.Ceiling(System.Drawing.RectangleF)
  - System.Drawing.Rectangle.Contains(System.Drawing.Point)
  - System.Drawing.Rectangle.Contains(System.Drawing.Rectangle)
  - System.Drawing.Rectangle.Contains(System.Int32,System.Int32)
  - System.Drawing.Rectangle.Empty
  - System.Drawing.Rectangle.Equals(System.Object)
  - System.Drawing.Rectangle.FromLTRB(System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Drawing.Rectangle.GetHashCode
  - System.Drawing.Rectangle.Height
  - System.Drawing.Rectangle.Inflate(System.Drawing.Size)
  - System.Drawing.Rectangle.Inflate(System.Int32,System.Int32)
  - System.Drawing.Rectangle.Inflate(System.Drawing.Rectangle,System.Int32,System.Int32)
  - System.Drawing.Rectangle.Intersect(System.Drawing.Rectangle)
  - System.Drawing.Rectangle.Intersect(System.Drawing.Rectangle,System.Drawing.Rectangle)
  - System.Drawing.Rectangle.IntersectsWith(System.Drawing.Rectangle)
  - System.Drawing.Rectangle.IsEmpty
  - System.Drawing.Rectangle.Left
  - System.Drawing.Rectangle.Location
  - System.Drawing.Rectangle.Offset(System.Drawing.Point)
  - System.Drawing.Rectangle.Offset(System.Int32,System.Int32)
  - System.Drawing.Rectangle.op_Equality(System.Drawing.Rectangle,System.Drawing.Rectangle)
  - System.Drawing.Rectangle.op_Inequality(System.Drawing.Rectangle,System.Drawing.Rectangle)
  - System.Drawing.Rectangle.Right
  - System.Drawing.Rectangle.Round(System.Drawing.RectangleF)
  - System.Drawing.Rectangle.Size
  - System.Drawing.Rectangle.Top
  - System.Drawing.Rectangle.ToString
  - System.Drawing.Rectangle.Truncate(System.Drawing.RectangleF)
  - System.Drawing.Rectangle.Union(System.Drawing.Rectangle,System.Drawing.Rectangle)
  - System.Drawing.Rectangle.Width
  - System.Drawing.Rectangle.X
  - System.Drawing.Rectangle.Y
  langs:
  - csharp
  name: Rectangle
  nameWithType: Rectangle
  fullName: System.Drawing.Rectangle
  type: Struct
  summary: "儲存一組的四個整數，表示位置和大小的矩形"
  remarks: "矩形由定義其<xref:System.Drawing.Rectangle.Width%2A>， <xref:System.Drawing.Rectangle.Height%2A>，以及所代表的左上角<xref:System.Drawing.Rectangle.Location%2A>屬性。</xref:System.Drawing.Rectangle.Location%2A> </xref:System.Drawing.Rectangle.Height%2A> </xref:System.Drawing.Rectangle.Width%2A>       若要繪製的矩形，您需要<xref:System.Drawing.Graphics>物件和<xref:System.Drawing.Pen>物件。</xref:System.Drawing.Pen> </xref:System.Drawing.Graphics> <xref:System.Drawing.Graphics>物件提供<xref:System.Drawing.Graphics.DrawRectangle%2A>方法，而<xref:System.Drawing.Pen>物件儲存的行，例如色彩和寬度的功能。</xref:System.Drawing.Pen> </xref:System.Drawing.Graphics.DrawRectangle%2A> </xref:System.Drawing.Graphics> 在繪製矩形的單位由<xref:System.Drawing.Graphics.PageUnit%2A>和<xref:System.Drawing.Graphics.PageScale%2A>用於繪製物件的圖形的屬性。</xref:System.Drawing.Graphics.PageScale%2A> </xref:System.Drawing.Graphics.PageUnit%2A> 預設單位為像素。       若要繪製矩形填滿色彩，您需要的<xref:System.Drawing.Graphics>物件和衍生自<xref:System.Drawing.Brush><xref:System.Drawing.SolidBrush>或<xref:System.Drawing.Drawing2D.LinearGradientBrush>.</xref:System.Drawing.Drawing2D.LinearGradientBrush></xref:System.Drawing.SolidBrush>等</xref:System.Drawing.Brush>的物件</xref:System.Drawing.Graphics> <xref:System.Drawing.Graphics>物件提供<xref:System.Drawing.Graphics.FillRectangle%2A>方法和<xref:System.Drawing.Brush>物件會提供色彩和填滿的資訊。</xref:System.Drawing.Brush> </xref:System.Drawing.Graphics.FillRectangle%2A> </xref:System.Drawing.Graphics>       更進階的形狀，使用<xref:System.Drawing.Region>物件。</xref:System.Drawing.Region>"
  example:
  - "The following example draws a rectangle with its upper-left corner at (10, 10). The rectangle has a width of 100 and a height of 50. The second argument passed to the <xref:System.Drawing.Pen.%23ctor%2A> constructor indicates that the pen width is 5 pixels.  \n  \n When the rectangle is drawn, the pen is centered on the rectangle's boundary. Because the pen width is 5, the sides of the rectangle are drawn 5 pixels wide, such that 1 pixel is drawn on the boundary itself, 2 pixels are drawn on the inside, and 2 pixels are drawn on the outside. For more details on pen alignment, see [How to: Set Pen Width and Alignment](~/add/includes/ajax-current-ext-md.md).  \n  \n The following illustration shows the resulting rectangle. The dotted lines show where the rectangle would have been drawn if the pen width had been one pixel. The enlarged view of the upper-left corner of the rectangle shows that the thick black lines are centered on those dotted lines.  \n  \n ![Pens](~/add/media/pens1.gif \"Pens\")  \n  \n The example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.  \n  \n [!code-vb[System.Drawing.UsingAPen#21](~/add/codesnippet/visualbasic/t-system.drawing.rectangle_1.vb)]\n [!code-cs[System.Drawing.UsingAPen#21](~/add/codesnippet/csharp/t-system.drawing.rectangle_1.cs)]"
  syntax:
    content: >-
      [System.ComponentModel.TypeConverter(typeof(System.Drawing.RectangleConverter))]

      [System.Runtime.InteropServices.ComVisible(true)]

      public struct Rectangle
  inheritance:
  - System.ValueType
  implements: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.#ctor(System.Drawing.Point,System.Drawing.Size)
  id: '#ctor(System.Drawing.Point,System.Drawing.Size)'
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: Rectangle(Point,Size)
  nameWithType: Rectangle.Rectangle(Point,Size)
  fullName: System.Drawing.Rectangle.Rectangle(Point,Size)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "初始化的新執行個體<xref href=&quot;System.Drawing.Rectangle&quot;></xref>類別，以指定的位置和大小。"
  syntax:
    content: public Rectangle (System.Drawing.Point location, System.Drawing.Size size);
    parameters:
    - id: location
      type: System.Drawing.Point
      description: "A <xref href=&quot;System.Drawing.Point&quot;> </xref> ，代表矩形區域的左上角。"
    - id: size
      type: System.Drawing.Size
      description: "A <xref href=&quot;System.Drawing.Size&quot;> </xref> ，代表矩形區域的高度與寬度。"
  overload: System.Drawing.Rectangle.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32,System.Int32,System.Int32)'
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: Rectangle(Int32,Int32,Int32,Int32)
  nameWithType: Rectangle.Rectangle(Int32,Int32,Int32,Int32)
  fullName: System.Drawing.Rectangle.Rectangle(Int32,Int32,Int32,Int32)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "初始化的新執行個體<xref href=&quot;System.Drawing.Rectangle&quot;></xref>類別，以指定的位置和大小。"
  remarks: ''
  example:
  - "The following code example demonstrates the Rectangle, <xref:System.Drawing.Rectangle.Intersect%2A>, <xref:System.Drawing.Rectangle.IsEmpty%2A>, and <xref:System.Drawing.Rectangle.IntersectsWith%2A> members. This example should be used with a Windows Form. Paste this code into a form and call this method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.RectanglesAndPoints#2](~/add/codesnippet/csharp/eee26612-4d30-4e2f-a9c7-_1.cs)]\n [!code-cpp[System.Drawing.RectanglesAndPoints#2](~/add/codesnippet/cpp/eee26612-4d30-4e2f-a9c7-_1.cpp)]\n [!code-vb[System.Drawing.RectanglesAndPoints#2](~/add/codesnippet/visualbasic/eee26612-4d30-4e2f-a9c7-_1.vb)]"
  syntax:
    content: public Rectangle (int x, int y, int width, int height);
    parameters:
    - id: x
      type: System.Int32
      description: "矩形左上角 x 座標。"
    - id: y
      type: System.Int32
      description: "矩形左上角 y 座標。"
    - id: width
      type: System.Int32
      description: "矩形的寬度。"
    - id: height
      type: System.Int32
      description: "矩形的高度。"
  overload: System.Drawing.Rectangle.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.Bottom
  id: Bottom
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: Bottom
  nameWithType: Rectangle.Bottom
  fullName: System.Drawing.Rectangle.Bottom
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "取得 y 座標的加總<> *> 和<> *> 屬性值，這個<xref href=&quot;System.Drawing.Rectangle&quot;></xref>結構。"
  remarks: "底端屬性的值代表的<xref:System.Drawing.Rectangle>不包含在<xref:System.Drawing.Rectangle>.</xref:System.Drawing.Rectangle></xref:System.Drawing.Rectangle>下邊緣的第一個點的 y 座標"
  syntax:
    content: public int Bottom { get; }
    return:
      type: System.Int32
      description: "加總的 y 座標<> *> 和<> *> 這個<xref href=&quot;System.Drawing.Rectangle&quot;> </xref>。"
  overload: System.Drawing.Rectangle.Bottom*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.Ceiling(System.Drawing.RectangleF)
  id: Ceiling(System.Drawing.RectangleF)
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: Ceiling(RectangleF)
  nameWithType: Rectangle.Ceiling(RectangleF)
  fullName: System.Drawing.Rectangle.Ceiling(RectangleF)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "將指定的轉換<xref href=&quot;System.Drawing.RectangleF&quot;></xref>結構以<xref href=&quot;System.Drawing.Rectangle&quot;></xref>結構捨入<xref href=&quot;System.Drawing.RectangleF&quot;></xref>下一個較高的整數值的值。"
  syntax:
    content: public static System.Drawing.Rectangle Ceiling (System.Drawing.RectangleF value);
    parameters:
    - id: value
      type: System.Drawing.RectangleF
      description: "<xref href=&quot;System.Drawing.RectangleF&quot;> </xref>来轉換的結構。"
    return:
      type: System.Drawing.Rectangle
      description: "傳回<xref href=&quot;System.Drawing.Rectangle&quot;> </xref>。"
  overload: System.Drawing.Rectangle.Ceiling*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.Contains(System.Drawing.Point)
  id: Contains(System.Drawing.Point)
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: Contains(Point)
  nameWithType: Rectangle.Contains(Point)
  fullName: System.Drawing.Rectangle.Contains(Point)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "判斷指定的點是否包含在這個<xref href=&quot;System.Drawing.Rectangle&quot;></xref>結構。"
  remarks: "包含矩形必須正規化，此方法以傳回精確的結果。"
  syntax:
    content: public bool Contains (System.Drawing.Point pt);
    parameters:
    - id: pt
      type: System.Drawing.Point
      description: "<xref href=&quot;System.Drawing.Point&quot;> </xref>測試。"
    return:
      type: System.Boolean
      description: "這個方法會傳回<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果所表示的點<code> pt </code>包含在這個<xref href=&quot;System.Drawing.Rectangle&quot;></xref>結構; 否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Drawing.Rectangle.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.Contains(System.Drawing.Rectangle)
  id: Contains(System.Drawing.Rectangle)
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: Contains(Rectangle)
  nameWithType: Rectangle.Contains(Rectangle)
  fullName: System.Drawing.Rectangle.Contains(Rectangle)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "決定所表示的矩形區域<code> rect </code>完全包含在這個<xref href=&quot;System.Drawing.Rectangle&quot;></xref>結構。"
  remarks: "包含矩形必須正規化，此方法以傳回精確的結果。"
  example:
  - "The following code example demonstrates the Contains method and the <xref:System.Drawing.SystemPens> class. This example is designed for use with a Windows Form. Paste this code into a form that contains a button named `Button1`, call `DrawFirstRectangle` from the form's constructor or <xref:System.Windows.Forms.Form.Load> method, and associate the `Button1_Click` method with the button's <xref:System.Windows.Forms.Control.Click> event.  \n  \n [!code-cs[System.Drawing.RectanglesAndPoints#3](~/add/codesnippet/csharp/m-system.drawing.rectang_8_1.cs)]\n [!code-cpp[System.Drawing.RectanglesAndPoints#3](~/add/codesnippet/cpp/m-system.drawing.rectang_8_1.cpp)]\n [!code-vb[System.Drawing.RectanglesAndPoints#3](~/add/codesnippet/visualbasic/m-system.drawing.rectang_8_1.vb)]"
  syntax:
    content: public bool Contains (System.Drawing.Rectangle rect);
    parameters:
    - id: rect
      type: System.Drawing.Rectangle
      description: "<xref href=&quot;System.Drawing.Rectangle&quot;> </xref>測試。"
    return:
      type: System.Boolean
      description: "這個方法會傳回<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果所表示的矩形區域<code> rect </code>完全包含在這個<xref href=&quot;System.Drawing.Rectangle&quot;></xref>結構; 否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Drawing.Rectangle.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.Contains(System.Int32,System.Int32)
  id: Contains(System.Int32,System.Int32)
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: Contains(Int32,Int32)
  nameWithType: Rectangle.Contains(Int32,Int32)
  fullName: System.Drawing.Rectangle.Contains(Int32,Int32)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "判斷指定的點是否包含在這個<xref href=&quot;System.Drawing.Rectangle&quot;></xref>結構。"
  remarks: "包含矩形必須正規化，此方法以傳回精確的結果。"
  syntax:
    content: public bool Contains (int x, int y);
    parameters:
    - id: x
      type: System.Int32
      description: "要測試的點的 x 座標。"
    - id: y
      type: System.Int32
      description: "要測試的點的 y 座標。"
    return:
      type: System.Boolean
      description: "這個方法會傳回<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果所定義的點<code> x </code>和<code> y </code>包含在這個<xref href=&quot;System.Drawing.Rectangle&quot;></xref>結構; 否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Drawing.Rectangle.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.Empty
  id: Empty
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: Empty
  nameWithType: Rectangle.Empty
  fullName: System.Drawing.Rectangle.Empty
  type: Field
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "代表<xref href=&quot;System.Drawing.Rectangle&quot;></xref>具有其屬性未初始化的結構。"
  remarks: "矩形均由其寬度、 高度和左上角。"
  syntax:
    content: public static readonly System.Drawing.Rectangle Empty;
    return:
      type: System.Drawing.Rectangle
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: Rectangle.Equals(Object)
  fullName: System.Drawing.Rectangle.Equals(Object)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "測試是否<code> obj </code>是<xref href=&quot;System.Drawing.Rectangle&quot;></xref>結構具有相同的位置和大小，這個<xref href=&quot;System.Drawing.Rectangle&quot;></xref>結構。"
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "<xref:System.Object>若要測試。</xref:System.Object>"
    return:
      type: System.Boolean
      description: "這個方法會傳回<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<code> obj </code>是<xref href=&quot;System.Drawing.Rectangle&quot;></xref>結構及其<> *>， <> </> *>， <> </> *>，以及<> *> 屬性則為相等的對應屬性，這個<xref href=&quot;System.Drawing.Rectangle&quot;></xref>結構; 否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Drawing.Rectangle.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.FromLTRB(System.Int32,System.Int32,System.Int32,System.Int32)
  id: FromLTRB(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: FromLTRB(Int32,Int32,Int32,Int32)
  nameWithType: Rectangle.FromLTRB(Int32,Int32,Int32,Int32)
  fullName: System.Drawing.Rectangle.FromLTRB(Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "建立<xref href=&quot;System.Drawing.Rectangle&quot;></xref>結構指定的邊緣位置。"
  remarks: "這個方法會建立<xref:System.Drawing.Rectangle>具有指定的左上角和右下角。</xref:System.Drawing.Rectangle>"
  example:
  - "The following code example demonstrates how to create a rectangle using the FromLTRB method. This example is designed to be used with a Windows Form. Paste this code into a form and call the `CreateARectangleFromLTRB` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.RectanglesAndPoints#7](~/add/codesnippet/csharp/b6a82677-d61c-473b-ae93-_1.cs)]\n [!code-cpp[System.Drawing.RectanglesAndPoints#7](~/add/codesnippet/cpp/b6a82677-d61c-473b-ae93-_1.cpp)]\n [!code-vb[System.Drawing.RectanglesAndPoints#7](~/add/codesnippet/visualbasic/b6a82677-d61c-473b-ae93-_1.vb)]"
  syntax:
    content: public static System.Drawing.Rectangle FromLTRB (int left, int top, int right, int bottom);
    parameters:
    - id: left
      type: System.Int32
      description: "這個左上角 x 座標<xref href=&quot;System.Drawing.Rectangle&quot;></xref>結構。"
    - id: top
      type: System.Int32
      description: "這個左上角 y 座標<xref href=&quot;System.Drawing.Rectangle&quot;></xref>結構。"
    - id: right
      type: System.Int32
      description: "這個右下角的 x 座標<xref href=&quot;System.Drawing.Rectangle&quot;></xref>結構。"
    - id: bottom
      type: System.Int32
      description: "這個右下角的 y 座標<xref href=&quot;System.Drawing.Rectangle&quot;></xref>結構。"
    return:
      type: System.Drawing.Rectangle
      description: "新<xref href=&quot;System.Drawing.Rectangle&quot;></xref>這個方法建立。"
  overload: System.Drawing.Rectangle.FromLTRB*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.GetHashCode
  id: GetHashCode
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: Rectangle.GetHashCode()
  fullName: System.Drawing.Rectangle.GetHashCode()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "傳回這個雜湊程式碼<xref href=&quot;System.Drawing.Rectangle&quot;></xref>結構。 雜湊程式碼使用的相關資訊，請參閱<xref:System.Object.GetHashCode*>.</xref:System.Object.GetHashCode*>"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "整數，代表這個矩形的雜湊碼。"
  overload: System.Drawing.Rectangle.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.Height
  id: Height
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: Height
  nameWithType: Rectangle.Height
  fullName: System.Drawing.Rectangle.Height
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "取得或設定這個高度<xref href=&quot;System.Drawing.Rectangle&quot;></xref>結構。"
  remarks: "變更高度屬性也會造成變更<xref:System.Drawing.Rectangle.Bottom%2A>的<xref:System.Drawing.Rectangle>。</xref:System.Drawing.Rectangle>屬性</xref:System.Drawing.Rectangle.Bottom%2A> 在繪製矩形的單位由<xref:System.Drawing.Graphics.PageUnit%2A>和<xref:System.Drawing.Graphics.PageScale%2A>用於繪製物件的圖形的屬性。</xref:System.Drawing.Graphics.PageScale%2A> </xref:System.Drawing.Graphics.PageUnit%2A> 預設單位為像素。"
  syntax:
    content: public int Height { get; set; }
    return:
      type: System.Int32
      description: "這個高度<xref href=&quot;System.Drawing.Rectangle&quot;></xref>結構。 預設值為 0。"
  overload: System.Drawing.Rectangle.Height*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.Inflate(System.Drawing.Size)
  id: Inflate(System.Drawing.Size)
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: Inflate(Size)
  nameWithType: Rectangle.Inflate(Size)
  fullName: System.Drawing.Rectangle.Inflate(Size)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "來放大這個<xref href=&quot;System.Drawing.Rectangle&quot;></xref>根據指定的數量。"
  remarks: "這個方法來放大這個矩形，而不是它的複本。 矩形變大時雙向沿座標軸。  例如，如果 50 x 50 矩形在 x 軸的 50 變大時，產生的矩形將 150 單位長 （原始 50、 負方向 50 和方向會加上 50） 維護矩形的幾何中心。"
  example:
  - "The following example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code creates a <xref:System.Drawing.Rectangle> and enlarges it by 50 units in both axes. The rectangle is drawn to screen before inflation (black) and after inflation (red).  \n  \n [!code-cs[System.Drawing.ClassicRectangleExamples#2](~/add/codesnippet/csharp/m-system.drawing.rectang_2_1.cs)]\n [!code-cpp[System.Drawing.ClassicRectangleExamples#2](~/add/codesnippet/cpp/m-system.drawing.rectang_2_1.cpp)]\n [!code-vb[System.Drawing.ClassicRectangleExamples#2](~/add/codesnippet/visualbasic/m-system.drawing.rectang_2_1.vb)]"
  syntax:
    content: public void Inflate (System.Drawing.Size size);
    parameters:
    - id: size
      type: System.Drawing.Size
      description: "要擴大這個矩形的數量。"
  overload: System.Drawing.Rectangle.Inflate*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.Inflate(System.Int32,System.Int32)
  id: Inflate(System.Int32,System.Int32)
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: Inflate(Int32,Int32)
  nameWithType: Rectangle.Inflate(Int32,Int32)
  fullName: System.Drawing.Rectangle.Inflate(Int32,Int32)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "來放大這個<xref href=&quot;System.Drawing.Rectangle&quot;></xref>根據指定的數量。"
  remarks: "這個方法來放大這個矩形，而不是它的複本。 矩形變大時雙向沿座標軸。 例如，如果 50 x 50 矩形在 x 軸的 50 變大時，產生的矩形將 150 單位長 （原始 50、 負方向 50 和方向會加上 50） 維護矩形的幾何中心。       如果有任一個`x`或`y`是負數，<xref:System.Drawing.Rectangle>結構縮小對應方向。</xref:System.Drawing.Rectangle>"
  example:
  - "The following example creates a <xref:System.Drawing.Rectangle> structure and enlarges it by 100 units in the x-axis direction:  \n  \n [!code-cs[System.Drawing.ClassicRectangleExamples#3](~/add/codesnippet/csharp/m-system.drawing.rectang_7_1.cs)]\n [!code-cpp[System.Drawing.ClassicRectangleExamples#3](~/add/codesnippet/cpp/m-system.drawing.rectang_7_1.cpp)]\n [!code-vb[System.Drawing.ClassicRectangleExamples#3](~/add/codesnippet/visualbasic/m-system.drawing.rectang_7_1.vb)]"
  syntax:
    content: public void Inflate (int width, int height);
    parameters:
    - id: width
      type: System.Int32
      description: "擴大此數量<xref href=&quot;System.Drawing.Rectangle&quot;></xref>水平。"
    - id: height
      type: System.Int32
      description: "擴大此數量<xref href=&quot;System.Drawing.Rectangle&quot;></xref>垂直。"
  overload: System.Drawing.Rectangle.Inflate*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.Inflate(System.Drawing.Rectangle,System.Int32,System.Int32)
  id: Inflate(System.Drawing.Rectangle,System.Int32,System.Int32)
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: Inflate(Rectangle,Int32,Int32)
  nameWithType: Rectangle.Inflate(Rectangle,Int32,Int32)
  fullName: System.Drawing.Rectangle.Inflate(Rectangle,Int32,Int32)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "建立並傳回指定的放大的複本<xref href=&quot;System.Drawing.Rectangle&quot;></xref>結構。 複本會變大時，根據指定的數量。 原始<xref href=&quot;System.Drawing.Rectangle&quot;></xref>結構則維持不變。"
  remarks: "這個方法會建立一份`rect`、 放大複本，然後傳回 放大的複本。 矩形變大時雙向沿座標軸。 例如，如果 50 x 50 矩形在 x 軸的 50 變大時，產生的矩形將 150 單位長 （原始 50、 負方向 50 和方向會加上 50） 維護矩形的幾何中心。"
  example:
  - "The following example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code creates a <xref:System.Drawing.Rectangle> and enlarges it by 50 units in both axes. Notice that the resulting rectangle (red) is 150 units in both axes.  \n  \n [!code-cs[System.Drawing.ClassicRectangleExamples#1](~/add/codesnippet/csharp/29159456-f586-460b-ac33-_1.cs)]\n [!code-cpp[System.Drawing.ClassicRectangleExamples#1](~/add/codesnippet/cpp/29159456-f586-460b-ac33-_1.cpp)]\n [!code-vb[System.Drawing.ClassicRectangleExamples#1](~/add/codesnippet/visualbasic/29159456-f586-460b-ac33-_1.vb)]"
  syntax:
    content: public static System.Drawing.Rectangle Inflate (System.Drawing.Rectangle rect, int x, int y);
    parameters:
    - id: rect
      type: System.Drawing.Rectangle
      description: "<xref href=&quot;System.Drawing.Rectangle&quot;> </xref>用來啟動。 這個矩形不會修改。"
    - id: x
      type: System.Int32
      description: "擴大此數量<xref href=&quot;System.Drawing.Rectangle&quot;></xref>水平。"
    - id: y
      type: System.Int32
      description: "擴大此數量<xref href=&quot;System.Drawing.Rectangle&quot;></xref>垂直。"
    return:
      type: System.Drawing.Rectangle
      description: "放大<xref href=&quot;System.Drawing.Rectangle&quot;> </xref>。"
  overload: System.Drawing.Rectangle.Inflate*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.Intersect(System.Drawing.Rectangle)
  id: Intersect(System.Drawing.Rectangle)
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: Intersect(Rectangle)
  nameWithType: Rectangle.Intersect(Rectangle)
  fullName: System.Drawing.Rectangle.Intersect(Rectangle)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "這會取代<xref href=&quot;System.Drawing.Rectangle&quot;></xref>本身和所指定的交集<xref href=&quot;System.Drawing.Rectangle&quot;> </xref>。"
  remarks: ''
  example:
  - "The following code example demonstrates the Intersect, <xref:System.Drawing.Rectangle.IsEmpty%2A> and the <xref:System.Drawing.Rectangle.IntersectsWith%2A> members. This example should be used with a Windows Form. Paste this code into a form and call this method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.RectanglesAndPoints#2](~/add/codesnippet/csharp/m-system.drawing.rectang_1_1.cs)]\n [!code-cpp[System.Drawing.RectanglesAndPoints#2](~/add/codesnippet/cpp/m-system.drawing.rectang_1_1.cpp)]\n [!code-vb[System.Drawing.RectanglesAndPoints#2](~/add/codesnippet/visualbasic/m-system.drawing.rectang_1_1.vb)]"
  syntax:
    content: public void Intersect (System.Drawing.Rectangle rect);
    parameters:
    - id: rect
      type: System.Drawing.Rectangle
      description: "<xref href=&quot;System.Drawing.Rectangle&quot;> </xref>要相交。"
  overload: System.Drawing.Rectangle.Intersect*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.Intersect(System.Drawing.Rectangle,System.Drawing.Rectangle)
  id: Intersect(System.Drawing.Rectangle,System.Drawing.Rectangle)
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: Intersect(Rectangle,Rectangle)
  nameWithType: Rectangle.Intersect(Rectangle,Rectangle)
  fullName: System.Drawing.Rectangle.Intersect(Rectangle,Rectangle)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "傳回第三個<xref href=&quot;System.Drawing.Rectangle&quot;></xref>結構代表其他兩個交集<xref href=&quot;System.Drawing.Rectangle&quot;></xref>結構。 如果沒有交集，空<xref href=&quot;System.Drawing.Rectangle&quot;></xref>傳回。"
  remarks: ''
  example:
  - "The following code example demonstrates the <xref:System.Drawing.Rectangle.Intersect%2A>, <xref:System.Drawing.Rectangle.IsEmpty%2A> and the <xref:System.Drawing.Rectangle.IntersectsWith%2A> members. This example should be used with a Windows Form. Paste this code into a form and call this method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.RectanglesAndPoints#1](~/add/codesnippet/csharp/220e8ffb-cf8f-48fb-bbcf-_1.cs)]\n [!code-cpp[System.Drawing.RectanglesAndPoints#1](~/add/codesnippet/cpp/220e8ffb-cf8f-48fb-bbcf-_1.cpp)]\n [!code-vb[System.Drawing.RectanglesAndPoints#1](~/add/codesnippet/visualbasic/220e8ffb-cf8f-48fb-bbcf-_1.vb)]"
  syntax:
    content: public static System.Drawing.Rectangle Intersect (System.Drawing.Rectangle a, System.Drawing.Rectangle b);
    parameters:
    - id: a
      type: System.Drawing.Rectangle
      description: "要交集的矩形。"
    - id: b
      type: System.Drawing.Rectangle
      description: "要交集的矩形。"
    return:
      type: System.Drawing.Rectangle
      description: "A <xref href=&quot;System.Drawing.Rectangle&quot;> </xref>表示的交集<code> a </code>和<code> b </code>。"
  overload: System.Drawing.Rectangle.Intersect*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.IntersectsWith(System.Drawing.Rectangle)
  id: IntersectsWith(System.Drawing.Rectangle)
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: IntersectsWith(Rectangle)
  nameWithType: Rectangle.IntersectsWith(Rectangle)
  fullName: System.Drawing.Rectangle.IntersectsWith(Rectangle)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "判斷這個矩形是否與交集<code> rect </code>。"
  remarks: ''
  example:
  - "The following code example demonstrates the <xref:System.Drawing.Rectangle.Intersect%2A>, <xref:System.Drawing.Rectangle.IsEmpty%2A> and the IntersectsWith members. This example should be used with a Windows Form. Paste this code into a form and call this method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.RectanglesAndPoints#2](~/add/codesnippet/csharp/m-system.drawing.rectang_6_1.cs)]\n [!code-cpp[System.Drawing.RectanglesAndPoints#2](~/add/codesnippet/cpp/m-system.drawing.rectang_6_1.cpp)]\n [!code-vb[System.Drawing.RectanglesAndPoints#2](~/add/codesnippet/visualbasic/m-system.drawing.rectang_6_1.vb)]"
  syntax:
    content: public bool IntersectsWith (System.Drawing.Rectangle rect);
    parameters:
    - id: rect
      type: System.Drawing.Rectangle
      description: "要測試的矩形。"
    return:
      type: System.Boolean
      description: "這個方法會傳回<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果有任何交集，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Drawing.Rectangle.IntersectsWith*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.IsEmpty
  id: IsEmpty
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: IsEmpty
  nameWithType: Rectangle.IsEmpty
  fullName: System.Drawing.Rectangle.IsEmpty
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "測試是否所有的數值屬性，這個<xref href=&quot;System.Drawing.Rectangle&quot;></xref>具有零值。"
  remarks: ''
  example:
  - "The following code example demonstrates the <xref:System.Drawing.Rectangle.Intersect%2A>, IsEmpty and the <xref:System.Drawing.Rectangle.IntersectsWith%2A> members. This example should be used with a Windows Form. Paste this code into a form and call this method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.RectanglesAndPoints#2](~/add/codesnippet/csharp/p-system.drawing.rectang_1.cs)]\n [!code-cpp[System.Drawing.RectanglesAndPoints#2](~/add/codesnippet/cpp/p-system.drawing.rectang_1.cpp)]\n [!code-vb[System.Drawing.RectanglesAndPoints#2](~/add/codesnippet/visualbasic/p-system.drawing.rectang_1.vb)]"
  syntax:
    content: public bool IsEmpty { get; }
    return:
      type: System.Boolean
      description: "這個屬性會傳回<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<> *>， <> </> *>， <> </> *>，以及<> *> 這個屬性<xref href=&quot;System.Drawing.Rectangle&quot;></xref>都具有零值，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Drawing.Rectangle.IsEmpty*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.Left
  id: Left
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: Left
  nameWithType: Rectangle.Left
  fullName: System.Drawing.Rectangle.Left
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "取得這個左邊緣的 x 座標<xref href=&quot;System.Drawing.Rectangle&quot;></xref>結構。"
  syntax:
    content: public int Left { get; }
    return:
      type: System.Int32
      description: "這樣的左邊緣的 x 座標<xref href=&quot;System.Drawing.Rectangle&quot;></xref>結構。"
  overload: System.Drawing.Rectangle.Left*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.Location
  id: Location
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: Location
  nameWithType: Rectangle.Location
  fullName: System.Drawing.Rectangle.Location
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "取得或設定這個左上角的座標<xref href=&quot;System.Drawing.Rectangle&quot;></xref>結構。"
  syntax:
    content: public System.Drawing.Point Location { get; set; }
    return:
      type: System.Drawing.Point
      description: "A <xref href=&quot;System.Drawing.Point&quot;> </xref> ，代表這個左上角<xref href=&quot;System.Drawing.Rectangle&quot;></xref>結構。"
  overload: System.Drawing.Rectangle.Location*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.Offset(System.Drawing.Point)
  id: Offset(System.Drawing.Point)
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: Offset(Point)
  nameWithType: Rectangle.Offset(Point)
  fullName: System.Drawing.Rectangle.Offset(Point)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "根據指定的數量調整這個矩形的位置。"
  remarks: "這個方法會在所指定的點的 x 座標和垂直指定點的 y 座標的水平調整左上角的位置。"
  example:
  - "The following code example demonstrates the <xref:System.Drawing.Rectangle.Contains%2A>, and <xref:System.Drawing.Rectangle.Offset%2A> methods and the <xref:System.Drawing.SystemPens> class. This example is designed for use with a Windows Form. Paste this code into a form that contains a button named `Button1`, call `DrawFirstRectangle` from the form's constructor or <xref:System.Windows.Forms.Form.Load> method, and associate the `Button1_Click` method with the button's <xref:System.Windows.Forms.Control.Click> event.  \n  \n [!code-cs[System.Drawing.RectanglesAndPoints#3](~/add/codesnippet/csharp/m-system.drawing.rectang_0_1.cs)]\n [!code-cpp[System.Drawing.RectanglesAndPoints#3](~/add/codesnippet/cpp/m-system.drawing.rectang_0_1.cpp)]\n [!code-vb[System.Drawing.RectanglesAndPoints#3](~/add/codesnippet/visualbasic/m-system.drawing.rectang_0_1.vb)]"
  syntax:
    content: public void Offset (System.Drawing.Point pos);
    parameters:
    - id: pos
      type: System.Drawing.Point
      description: "要位移位置的數量。"
  overload: System.Drawing.Rectangle.Offset*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.Offset(System.Int32,System.Int32)
  id: Offset(System.Int32,System.Int32)
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: Offset(Int32,Int32)
  nameWithType: Rectangle.Offset(Int32,Int32)
  fullName: System.Drawing.Rectangle.Offset(Int32,Int32)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "根據指定的數量調整這個矩形的位置。"
  syntax:
    content: public void Offset (int x, int y);
    parameters:
    - id: x
      type: System.Int32
      description: "水平位移。"
    - id: y
      type: System.Int32
      description: "垂直位移。"
  overload: System.Drawing.Rectangle.Offset*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.op_Equality(System.Drawing.Rectangle,System.Drawing.Rectangle)
  id: op_Equality(System.Drawing.Rectangle,System.Drawing.Rectangle)
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: op_Equality(Rectangle,Rectangle)
  nameWithType: Rectangle.op_Equality(Rectangle,Rectangle)
  fullName: System.Drawing.Rectangle.op_Equality(Rectangle,Rectangle)
  type: Operator
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "測試兩個<xref href=&quot;System.Drawing.Rectangle&quot;></xref>結構具有相等的位置和大小。"
  syntax:
    content: public static bool op_Equality (System.Drawing.Rectangle left, System.Drawing.Rectangle right);
    parameters:
    - id: left
      type: System.Drawing.Rectangle
      description: "<xref href=&quot;System.Drawing.Rectangle&quot;> </xref>等號比較運算子左邊的結構。"
    - id: right
      type: System.Drawing.Rectangle
      description: "<xref href=&quot;System.Drawing.Rectangle&quot;> </xref>等號比較運算子右邊的結構。"
    return:
      type: System.Boolean
      description: "這個運算子會傳回<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果兩個<xref href=&quot;System.Drawing.Rectangle&quot;></xref>結構具有相等<> *>， <> </> *>， <> </> *>，以及<> *> 屬性。"
  overload: System.Drawing.Rectangle.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.op_Inequality(System.Drawing.Rectangle,System.Drawing.Rectangle)
  id: op_Inequality(System.Drawing.Rectangle,System.Drawing.Rectangle)
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: op_Inequality(Rectangle,Rectangle)
  nameWithType: Rectangle.op_Inequality(Rectangle,Rectangle)
  fullName: System.Drawing.Rectangle.op_Inequality(Rectangle,Rectangle)
  type: Operator
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "測試兩個<xref href=&quot;System.Drawing.Rectangle&quot;></xref>大小或位置不同的結構。"
  syntax:
    content: public static bool op_Inequality (System.Drawing.Rectangle left, System.Drawing.Rectangle right);
    parameters:
    - id: left
      type: System.Drawing.Rectangle
      description: "<xref href=&quot;System.Drawing.Rectangle&quot;> </xref>不等比較運算子左邊的結構。"
    - id: right
      type: System.Drawing.Rectangle
      description: "<xref href=&quot;System.Drawing.Rectangle&quot;> </xref>不等比較運算子右邊的結構。"
    return:
      type: System.Boolean
      description: "這個運算子會傳回<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若有任何<> *>， <> </> *>， <> </> *> 或<> *> 兩個屬性<xref href=&quot;System.Drawing.Rectangle&quot;></xref>結構是不相等，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Drawing.Rectangle.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.Right
  id: Right
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: Right
  nameWithType: Rectangle.Right
  fullName: System.Drawing.Rectangle.Right
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "取得 x 座標的加總<> *> 和<> *> 屬性值，這個<xref href=&quot;System.Drawing.Rectangle&quot;></xref>結構。"
  remarks: "右屬性的值表示的右邊緣的矩形不包含在矩形中的第一個點的 x 座標。"
  syntax:
    content: public int Right { get; }
    return:
      type: System.Int32
      description: "加總的 x 座標<> *> 和<> *> 這個<xref href=&quot;System.Drawing.Rectangle&quot;> </xref>。"
  overload: System.Drawing.Rectangle.Right*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.Round(System.Drawing.RectangleF)
  id: Round(System.Drawing.RectangleF)
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: Round(RectangleF)
  nameWithType: Rectangle.Round(RectangleF)
  fullName: System.Drawing.Rectangle.Round(RectangleF)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "將指定的轉換<xref href=&quot;System.Drawing.RectangleF&quot;></xref>至<xref href=&quot;System.Drawing.Rectangle&quot;></xref>所捨入<xref href=&quot;System.Drawing.RectangleF&quot;></xref>最接近的整數值的值。"
  remarks: ''
  example:
  - "The following code example demonstrates how to use the Round and <xref:System.Drawing.Rectangle.Truncate%2A> methods. This example is designed for use with a Windows Form.  Paste this code into a form and call the `RoundingAndTruncatingRectangles` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.RectanglesAndPoints#5](~/add/codesnippet/csharp/m-system.drawing.rectang_3_1.cs)]\n [!code-cpp[System.Drawing.RectanglesAndPoints#5](~/add/codesnippet/cpp/m-system.drawing.rectang_3_1.cpp)]\n [!code-vb[System.Drawing.RectanglesAndPoints#5](~/add/codesnippet/visualbasic/m-system.drawing.rectang_3_1.vb)]"
  syntax:
    content: public static System.Drawing.Rectangle Round (System.Drawing.RectangleF value);
    parameters:
    - id: value
      type: System.Drawing.RectangleF
      description: "<xref href=&quot;System.Drawing.RectangleF&quot;> </xref>轉換。"
    return:
      type: System.Drawing.Rectangle
      description: "四捨五入的整數值<xref href=&quot;System.Drawing.Rectangle&quot;> </xref>。"
  overload: System.Drawing.Rectangle.Round*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.Size
  id: Size
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: Size
  nameWithType: Rectangle.Size
  fullName: System.Drawing.Rectangle.Size
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "取得或設定這個大小<xref href=&quot;System.Drawing.Rectangle&quot;> </xref>。"
  syntax:
    content: public System.Drawing.Size Size { get; set; }
    return:
      type: System.Drawing.Size
      description: "A <xref href=&quot;System.Drawing.Size&quot;> </xref> ，代表這個高度與寬度<xref href=&quot;System.Drawing.Rectangle&quot;></xref>結構。"
  overload: System.Drawing.Rectangle.Size*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.Top
  id: Top
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: Top
  nameWithType: Rectangle.Top
  fullName: System.Drawing.Rectangle.Top
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "取得這個邊緣的 y 座標<xref href=&quot;System.Drawing.Rectangle&quot;></xref>結構。"
  syntax:
    content: public int Top { get; }
    return:
      type: System.Int32
      description: "這個邊緣的 y 座標<xref href=&quot;System.Drawing.Rectangle&quot;></xref>結構。"
  overload: System.Drawing.Rectangle.Top*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.ToString
  id: ToString
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: ToString()
  nameWithType: Rectangle.ToString()
  fullName: System.Drawing.Rectangle.ToString()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "這個屬性會將轉換<xref href=&quot;System.Drawing.Rectangle&quot;></xref>人類看得懂的字串。"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "字串，包含位置、 寬度和高度，這個<xref href=&quot;System.Drawing.Rectangle&quot;></xref>結構 ¾，例如 {X = Y =&20;，20 寬度 =&100;，Height =&50;}"
  overload: System.Drawing.Rectangle.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.Truncate(System.Drawing.RectangleF)
  id: Truncate(System.Drawing.RectangleF)
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: Truncate(RectangleF)
  nameWithType: Rectangle.Truncate(RectangleF)
  fullName: System.Drawing.Rectangle.Truncate(RectangleF)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "將指定的轉換<xref href=&quot;System.Drawing.RectangleF&quot;></xref>至<xref href=&quot;System.Drawing.Rectangle&quot;></xref>藉由截斷<xref href=&quot;System.Drawing.RectangleF&quot;></xref>值。"
  remarks: ''
  example:
  - "The following code example demonstrates how to use the <xref:System.Drawing.Rectangle.Round%2A> and Truncate methods. This example is designed for use with a Windows Form. Paste this code into a form and call the `RoundingAndTruncatingRectangles` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.RectanglesAndPoints#5](~/add/codesnippet/csharp/m-system.drawing.rectang_4_1.cs)]\n [!code-cpp[System.Drawing.RectanglesAndPoints#5](~/add/codesnippet/cpp/m-system.drawing.rectang_4_1.cpp)]\n [!code-vb[System.Drawing.RectanglesAndPoints#5](~/add/codesnippet/visualbasic/m-system.drawing.rectang_4_1.vb)]"
  syntax:
    content: public static System.Drawing.Rectangle Truncate (System.Drawing.RectangleF value);
    parameters:
    - id: value
      type: System.Drawing.RectangleF
      description: "<xref href=&quot;System.Drawing.RectangleF&quot;> </xref>轉換。"
    return:
      type: System.Drawing.Rectangle
      description: "已截斷的值<xref href=&quot;System.Drawing.Rectangle&quot;> </xref>。"
  overload: System.Drawing.Rectangle.Truncate*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.Union(System.Drawing.Rectangle,System.Drawing.Rectangle)
  id: Union(System.Drawing.Rectangle,System.Drawing.Rectangle)
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: Union(Rectangle,Rectangle)
  nameWithType: Rectangle.Union(Rectangle,Rectangle)
  fullName: System.Drawing.Rectangle.Union(Rectangle,Rectangle)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "取得<xref href=&quot;System.Drawing.Rectangle&quot;></xref>結構，其中包含兩個 union <xref href=&quot;System.Drawing.Rectangle&quot;> </xref>結構。"
  remarks: '當兩個矩形的其中一個是空的這表示所有的值零，聯集的方法會傳回起點的矩形 （0，0） 高度和非空白矩形的寬度。 例如，如果您有兩個矩形︰ A = （0，0，則為 0，0） 和 B = （1，1，2，2），然後 A 的聯集，而 B 是 （0，0，則為 2，2）。'
  example:
  - "The following code example demonstrates how to use the Union method. This example is designed for use with a Windows Form. Paste this code into a form and call the `ShowRectangleUnion` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.RectanglesAndPoints#4](~/add/codesnippet/csharp/dbe79589-a969-4d01-95b2-_1.cs)]\n [!code-cpp[System.Drawing.RectanglesAndPoints#4](~/add/codesnippet/cpp/dbe79589-a969-4d01-95b2-_1.cpp)]\n [!code-vb[System.Drawing.RectanglesAndPoints#4](~/add/codesnippet/visualbasic/dbe79589-a969-4d01-95b2-_1.vb)]"
  syntax:
    content: public static System.Drawing.Rectangle Union (System.Drawing.Rectangle a, System.Drawing.Rectangle b);
    parameters:
    - id: a
      type: System.Drawing.Rectangle
      description: "要聯集的矩形。"
    - id: b
      type: System.Drawing.Rectangle
      description: "要聯集的矩形。"
    return:
      type: System.Drawing.Rectangle
      description: "A <xref href=&quot;System.Drawing.Rectangle&quot;> </xref>結構會框住的聯集兩個<xref href=&quot;System.Drawing.Rectangle&quot;></xref>結構。"
  overload: System.Drawing.Rectangle.Union*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.Width
  id: Width
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: Width
  nameWithType: Rectangle.Width
  fullName: System.Drawing.Rectangle.Width
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "取得或設定此寬度<xref href=&quot;System.Drawing.Rectangle&quot;></xref>結構。"
  remarks: "變更 [寬度] 屬性也會造成變更<xref:System.Drawing.Rectangle.Right%2A>的<xref:System.Drawing.Rectangle>。</xref:System.Drawing.Rectangle>屬性</xref:System.Drawing.Rectangle.Right%2A> 在繪製矩形的單位由<xref:System.Drawing.Graphics.PageUnit%2A>和<xref:System.Drawing.Graphics.PageScale%2A>用於繪製物件的圖形的屬性。</xref:System.Drawing.Graphics.PageScale%2A> </xref:System.Drawing.Graphics.PageUnit%2A> 預設單位為像素。"
  syntax:
    content: public int Width { get; set; }
    return:
      type: System.Int32
      description: "這個寬度<xref href=&quot;System.Drawing.Rectangle&quot;></xref>結構。 預設值為 0。"
  overload: System.Drawing.Rectangle.Width*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.X
  id: X
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: X
  nameWithType: Rectangle.X
  fullName: System.Drawing.Rectangle.X
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "取得或設定這個左上角的 x 座標<xref href=&quot;System.Drawing.Rectangle&quot;></xref>結構。"
  remarks: "變更 X 屬性也會造成變更<xref:System.Drawing.Rectangle.Right%2A>的<xref:System.Drawing.Rectangle>。</xref:System.Drawing.Rectangle>屬性</xref:System.Drawing.Rectangle.Right%2A>"
  syntax:
    content: public int X { get; set; }
    return:
      type: System.Int32
      description: "這個左上角 x 座標<xref href=&quot;System.Drawing.Rectangle&quot;></xref>結構。 預設值為 0。"
  overload: System.Drawing.Rectangle.X*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.Y
  id: Y
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: Y
  nameWithType: Rectangle.Y
  fullName: System.Drawing.Rectangle.Y
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "取得或設定這個左上角的 y 座標<xref href=&quot;System.Drawing.Rectangle&quot;></xref>結構。"
  remarks: "變更 Y 屬性也會造成變更<xref:System.Drawing.Rectangle.Bottom%2A>的<xref:System.Drawing.Rectangle>。</xref:System.Drawing.Rectangle>屬性</xref:System.Drawing.Rectangle.Bottom%2A>"
  syntax:
    content: public int Y { get; set; }
    return:
      type: System.Int32
      description: "這個左上角 y 座標<xref href=&quot;System.Drawing.Rectangle&quot;></xref>結構。 預設值為 0。"
  overload: System.Drawing.Rectangle.Y*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.Drawing.Rectangle.#ctor(System.Drawing.Point,System.Drawing.Size)
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Rectangle(Point,Size)
  nameWithType: Rectangle.Rectangle(Point,Size)
  fullName: System.Drawing.Rectangle.Rectangle(Point,Size)
- uid: System.Drawing.Point
  parent: System.Drawing
  isExternal: false
  name: Point
  nameWithType: Point
  fullName: System.Drawing.Point
- uid: System.Drawing.Size
  parent: System.Drawing
  isExternal: false
  name: Size
  nameWithType: Size
  fullName: System.Drawing.Size
- uid: System.Drawing.Rectangle.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Rectangle(Int32,Int32,Int32,Int32)
  nameWithType: Rectangle.Rectangle(Int32,Int32,Int32,Int32)
  fullName: System.Drawing.Rectangle.Rectangle(Int32,Int32,Int32,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Drawing.Rectangle.Bottom
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Bottom
  nameWithType: Rectangle.Bottom
  fullName: System.Drawing.Rectangle.Bottom
- uid: System.Drawing.Rectangle.Ceiling(System.Drawing.RectangleF)
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Ceiling(RectangleF)
  nameWithType: Rectangle.Ceiling(RectangleF)
  fullName: System.Drawing.Rectangle.Ceiling(RectangleF)
- uid: System.Drawing.Rectangle
  parent: System.Drawing
  isExternal: false
  name: Rectangle
  nameWithType: Rectangle
  fullName: System.Drawing.Rectangle
- uid: System.Drawing.RectangleF
  parent: System.Drawing
  isExternal: false
  name: RectangleF
  nameWithType: RectangleF
  fullName: System.Drawing.RectangleF
- uid: System.Drawing.Rectangle.Contains(System.Drawing.Point)
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Contains(Point)
  nameWithType: Rectangle.Contains(Point)
  fullName: System.Drawing.Rectangle.Contains(Point)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Drawing.Rectangle.Contains(System.Drawing.Rectangle)
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Contains(Rectangle)
  nameWithType: Rectangle.Contains(Rectangle)
  fullName: System.Drawing.Rectangle.Contains(Rectangle)
- uid: System.Drawing.Rectangle.Contains(System.Int32,System.Int32)
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Contains(Int32,Int32)
  nameWithType: Rectangle.Contains(Int32,Int32)
  fullName: System.Drawing.Rectangle.Contains(Int32,Int32)
- uid: System.Drawing.Rectangle.Empty
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Empty
  nameWithType: Rectangle.Empty
  fullName: System.Drawing.Rectangle.Empty
- uid: System.Drawing.Rectangle.Equals(System.Object)
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Equals(Object)
  nameWithType: Rectangle.Equals(Object)
  fullName: System.Drawing.Rectangle.Equals(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Drawing.Rectangle.FromLTRB(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Drawing.Rectangle
  isExternal: false
  name: FromLTRB(Int32,Int32,Int32,Int32)
  nameWithType: Rectangle.FromLTRB(Int32,Int32,Int32,Int32)
  fullName: System.Drawing.Rectangle.FromLTRB(Int32,Int32,Int32,Int32)
- uid: System.Drawing.Rectangle.GetHashCode
  parent: System.Drawing.Rectangle
  isExternal: false
  name: GetHashCode()
  nameWithType: Rectangle.GetHashCode()
  fullName: System.Drawing.Rectangle.GetHashCode()
- uid: System.Drawing.Rectangle.Height
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Height
  nameWithType: Rectangle.Height
  fullName: System.Drawing.Rectangle.Height
- uid: System.Drawing.Rectangle.Inflate(System.Drawing.Size)
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Inflate(Size)
  nameWithType: Rectangle.Inflate(Size)
  fullName: System.Drawing.Rectangle.Inflate(Size)
- uid: System.Drawing.Rectangle.Inflate(System.Int32,System.Int32)
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Inflate(Int32,Int32)
  nameWithType: Rectangle.Inflate(Int32,Int32)
  fullName: System.Drawing.Rectangle.Inflate(Int32,Int32)
- uid: System.Drawing.Rectangle.Inflate(System.Drawing.Rectangle,System.Int32,System.Int32)
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Inflate(Rectangle,Int32,Int32)
  nameWithType: Rectangle.Inflate(Rectangle,Int32,Int32)
  fullName: System.Drawing.Rectangle.Inflate(Rectangle,Int32,Int32)
- uid: System.Drawing.Rectangle.Intersect(System.Drawing.Rectangle)
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Intersect(Rectangle)
  nameWithType: Rectangle.Intersect(Rectangle)
  fullName: System.Drawing.Rectangle.Intersect(Rectangle)
- uid: System.Drawing.Rectangle.Intersect(System.Drawing.Rectangle,System.Drawing.Rectangle)
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Intersect(Rectangle,Rectangle)
  nameWithType: Rectangle.Intersect(Rectangle,Rectangle)
  fullName: System.Drawing.Rectangle.Intersect(Rectangle,Rectangle)
- uid: System.Drawing.Rectangle.IntersectsWith(System.Drawing.Rectangle)
  parent: System.Drawing.Rectangle
  isExternal: false
  name: IntersectsWith(Rectangle)
  nameWithType: Rectangle.IntersectsWith(Rectangle)
  fullName: System.Drawing.Rectangle.IntersectsWith(Rectangle)
- uid: System.Drawing.Rectangle.IsEmpty
  parent: System.Drawing.Rectangle
  isExternal: false
  name: IsEmpty
  nameWithType: Rectangle.IsEmpty
  fullName: System.Drawing.Rectangle.IsEmpty
- uid: System.Drawing.Rectangle.Left
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Left
  nameWithType: Rectangle.Left
  fullName: System.Drawing.Rectangle.Left
- uid: System.Drawing.Rectangle.Location
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Location
  nameWithType: Rectangle.Location
  fullName: System.Drawing.Rectangle.Location
- uid: System.Drawing.Rectangle.Offset(System.Drawing.Point)
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Offset(Point)
  nameWithType: Rectangle.Offset(Point)
  fullName: System.Drawing.Rectangle.Offset(Point)
- uid: System.Drawing.Rectangle.Offset(System.Int32,System.Int32)
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Offset(Int32,Int32)
  nameWithType: Rectangle.Offset(Int32,Int32)
  fullName: System.Drawing.Rectangle.Offset(Int32,Int32)
- uid: System.Drawing.Rectangle.op_Equality(System.Drawing.Rectangle,System.Drawing.Rectangle)
  parent: System.Drawing.Rectangle
  isExternal: false
  name: op_Equality(Rectangle,Rectangle)
  nameWithType: Rectangle.op_Equality(Rectangle,Rectangle)
  fullName: System.Drawing.Rectangle.op_Equality(Rectangle,Rectangle)
- uid: System.Drawing.Rectangle.op_Inequality(System.Drawing.Rectangle,System.Drawing.Rectangle)
  parent: System.Drawing.Rectangle
  isExternal: false
  name: op_Inequality(Rectangle,Rectangle)
  nameWithType: Rectangle.op_Inequality(Rectangle,Rectangle)
  fullName: System.Drawing.Rectangle.op_Inequality(Rectangle,Rectangle)
- uid: System.Drawing.Rectangle.Right
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Right
  nameWithType: Rectangle.Right
  fullName: System.Drawing.Rectangle.Right
- uid: System.Drawing.Rectangle.Round(System.Drawing.RectangleF)
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Round(RectangleF)
  nameWithType: Rectangle.Round(RectangleF)
  fullName: System.Drawing.Rectangle.Round(RectangleF)
- uid: System.Drawing.Rectangle.Size
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Size
  nameWithType: Rectangle.Size
  fullName: System.Drawing.Rectangle.Size
- uid: System.Drawing.Rectangle.Top
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Top
  nameWithType: Rectangle.Top
  fullName: System.Drawing.Rectangle.Top
- uid: System.Drawing.Rectangle.ToString
  parent: System.Drawing.Rectangle
  isExternal: false
  name: ToString()
  nameWithType: Rectangle.ToString()
  fullName: System.Drawing.Rectangle.ToString()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Drawing.Rectangle.Truncate(System.Drawing.RectangleF)
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Truncate(RectangleF)
  nameWithType: Rectangle.Truncate(RectangleF)
  fullName: System.Drawing.Rectangle.Truncate(RectangleF)
- uid: System.Drawing.Rectangle.Union(System.Drawing.Rectangle,System.Drawing.Rectangle)
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Union(Rectangle,Rectangle)
  nameWithType: Rectangle.Union(Rectangle,Rectangle)
  fullName: System.Drawing.Rectangle.Union(Rectangle,Rectangle)
- uid: System.Drawing.Rectangle.Width
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Width
  nameWithType: Rectangle.Width
  fullName: System.Drawing.Rectangle.Width
- uid: System.Drawing.Rectangle.X
  parent: System.Drawing.Rectangle
  isExternal: false
  name: X
  nameWithType: Rectangle.X
  fullName: System.Drawing.Rectangle.X
- uid: System.Drawing.Rectangle.Y
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Y
  nameWithType: Rectangle.Y
  fullName: System.Drawing.Rectangle.Y
- uid: System.Drawing.Rectangle.#ctor*
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Rectangle
  nameWithType: Rectangle.Rectangle
- uid: System.Drawing.Rectangle.Bottom*
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Bottom
  nameWithType: Rectangle.Bottom
- uid: System.Drawing.Rectangle.Ceiling*
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Ceiling
  nameWithType: Rectangle.Ceiling
- uid: System.Drawing.Rectangle.Contains*
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Contains
  nameWithType: Rectangle.Contains
- uid: System.Drawing.Rectangle.Equals*
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Equals
  nameWithType: Rectangle.Equals
- uid: System.Drawing.Rectangle.FromLTRB*
  parent: System.Drawing.Rectangle
  isExternal: false
  name: FromLTRB
  nameWithType: Rectangle.FromLTRB
- uid: System.Drawing.Rectangle.GetHashCode*
  parent: System.Drawing.Rectangle
  isExternal: false
  name: GetHashCode
  nameWithType: Rectangle.GetHashCode
- uid: System.Drawing.Rectangle.Height*
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Height
  nameWithType: Rectangle.Height
- uid: System.Drawing.Rectangle.Inflate*
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Inflate
  nameWithType: Rectangle.Inflate
- uid: System.Drawing.Rectangle.Intersect*
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Intersect
  nameWithType: Rectangle.Intersect
- uid: System.Drawing.Rectangle.IntersectsWith*
  parent: System.Drawing.Rectangle
  isExternal: false
  name: IntersectsWith
  nameWithType: Rectangle.IntersectsWith
- uid: System.Drawing.Rectangle.IsEmpty*
  parent: System.Drawing.Rectangle
  isExternal: false
  name: IsEmpty
  nameWithType: Rectangle.IsEmpty
- uid: System.Drawing.Rectangle.Left*
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Left
  nameWithType: Rectangle.Left
- uid: System.Drawing.Rectangle.Location*
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Location
  nameWithType: Rectangle.Location
- uid: System.Drawing.Rectangle.Offset*
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Offset
  nameWithType: Rectangle.Offset
- uid: System.Drawing.Rectangle.op_Equality*
  parent: System.Drawing.Rectangle
  isExternal: false
  name: op_Equality
  nameWithType: Rectangle.op_Equality
- uid: System.Drawing.Rectangle.op_Inequality*
  parent: System.Drawing.Rectangle
  isExternal: false
  name: op_Inequality
  nameWithType: Rectangle.op_Inequality
- uid: System.Drawing.Rectangle.Right*
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Right
  nameWithType: Rectangle.Right
- uid: System.Drawing.Rectangle.Round*
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Round
  nameWithType: Rectangle.Round
- uid: System.Drawing.Rectangle.Size*
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Size
  nameWithType: Rectangle.Size
- uid: System.Drawing.Rectangle.Top*
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Top
  nameWithType: Rectangle.Top
- uid: System.Drawing.Rectangle.ToString*
  parent: System.Drawing.Rectangle
  isExternal: false
  name: ToString
  nameWithType: Rectangle.ToString
- uid: System.Drawing.Rectangle.Truncate*
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Truncate
  nameWithType: Rectangle.Truncate
- uid: System.Drawing.Rectangle.Union*
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Union
  nameWithType: Rectangle.Union
- uid: System.Drawing.Rectangle.Width*
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Width
  nameWithType: Rectangle.Width
- uid: System.Drawing.Rectangle.X*
  parent: System.Drawing.Rectangle
  isExternal: false
  name: X
  nameWithType: Rectangle.X
- uid: System.Drawing.Rectangle.Y*
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Y
  nameWithType: Rectangle.Y
