### YamlMime:ManagedReference
items:
- uid: System.Data.Common.DataAdapter
  id: DataAdapter
  children:
  - System.Data.Common.DataAdapter.#ctor
  - System.Data.Common.DataAdapter.#ctor(System.Data.Common.DataAdapter)
  - System.Data.Common.DataAdapter.AcceptChangesDuringFill
  - System.Data.Common.DataAdapter.AcceptChangesDuringUpdate
  - System.Data.Common.DataAdapter.CloneInternals
  - System.Data.Common.DataAdapter.ContinueUpdateOnError
  - System.Data.Common.DataAdapter.CreateTableMappings
  - System.Data.Common.DataAdapter.Dispose(System.Boolean)
  - System.Data.Common.DataAdapter.Fill(System.Data.DataSet)
  - System.Data.Common.DataAdapter.Fill(System.Data.DataTable,System.Data.IDataReader)
  - System.Data.Common.DataAdapter.Fill(System.Data.DataTable[],System.Data.IDataReader,System.Int32,System.Int32)
  - System.Data.Common.DataAdapter.Fill(System.Data.DataSet,System.String,System.Data.IDataReader,System.Int32,System.Int32)
  - System.Data.Common.DataAdapter.FillError
  - System.Data.Common.DataAdapter.FillLoadOption
  - System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)
  - System.Data.Common.DataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDataReader)
  - System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String,System.Data.IDataReader)
  - System.Data.Common.DataAdapter.GetFillParameters
  - System.Data.Common.DataAdapter.HasTableMappings
  - System.Data.Common.DataAdapter.MissingMappingAction
  - System.Data.Common.DataAdapter.MissingSchemaAction
  - System.Data.Common.DataAdapter.OnFillError(System.Data.FillErrorEventArgs)
  - System.Data.Common.DataAdapter.ResetFillLoadOption
  - System.Data.Common.DataAdapter.ReturnProviderSpecificTypes
  - System.Data.Common.DataAdapter.ShouldSerializeAcceptChangesDuringFill
  - System.Data.Common.DataAdapter.ShouldSerializeFillLoadOption
  - System.Data.Common.DataAdapter.ShouldSerializeTableMappings
  - System.Data.Common.DataAdapter.System#Data#IDataAdapter#TableMappings
  - System.Data.Common.DataAdapter.TableMappings
  - System.Data.Common.DataAdapter.Update(System.Data.DataSet)
  langs:
  - csharp
  name: DataAdapter
  nameWithType: DataAdapter
  fullName: System.Data.Common.DataAdapter
  type: Class
  summary: "代表一組 SQL 命令和資料庫連接，用來填滿<xref href=&quot;System.Data.DataSet&quot;></xref>並更新資料來源。"
  remarks: "資料配接器做為之間的橋樑<xref:System.Data.DataSet>以及用來擷取並儲存資料的資料來源。</xref:System.Data.DataSet> 資料配接器藉由對應<xref:System.Data.Common.DataAdapter.Fill%2A>的變更<xref:System.Data.DataSet>以符合資料來源和<xref:System.Data.IDataAdapter.Update%2A>、 變更資料來源，以符合在<xref:System.Data.DataSet>.</xref:System.Data.DataSet>資料中的資料</xref:System.Data.IDataAdapter.Update%2A>中的資料</xref:System.Data.DataSet>中的資料，</xref:System.Data.Common.DataAdapter.Fill%2A>提供這個橋接器       如果您要連接到 SQL Server 資料庫，您可以藉由提高整體效能<xref:System.Data.SqlClient.SqlDataAdapter>以及與其相關聯<xref:System.Data.SqlClient.SqlCommand>和<xref:System.Data.SqlClient.SqlConnection>物件。</xref:System.Data.SqlClient.SqlConnection> </xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlDataAdapter> 對於 OLE DB 支援的資料來源，使用資料配接器相關聯的<xref:System.Data.OleDb.OleDbCommand>和<xref:System.Data.OleDb.OleDbConnection>物件。</xref:System.Data.OleDb.OleDbConnection> </xref:System.Data.OleDb.OleDbCommand> ODBC 支援的資料來源使用資料配接器相關聯的<xref:System.Data.Odbc.OdbcCommand>和<xref:System.Data.Odbc.OdbcConnection>物件。</xref:System.Data.Odbc.OdbcConnection> </xref:System.Data.Odbc.OdbcCommand> 針對 Oracle 資料庫使用資料配接器相關聯的<xref:System.Data.OracleClient.OracleCommand>和<xref:System.Data.OracleClient.OracleConnection>物件。</xref:System.Data.OracleClient.OracleConnection> </xref:System.Data.OracleClient.OracleCommand>       建立資料配接器的執行個體時，讀取/寫入屬性會設為初始的值。 如需這些值的清單，請參閱資料配接器建構函式。"
  syntax:
    content: 'public class DataAdapter : System.ComponentModel.Component, System.Data.IDataAdapter'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  implements:
  - System.Data.IDataAdapter
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.#ctor
  id: '#ctor'
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: DataAdapter()
  nameWithType: DataAdapter.DataAdapter()
  fullName: System.Data.Common.DataAdapter.DataAdapter()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "初始化的新執行個體<xref href=&quot;System.Data.Common.DataAdapter&quot;></xref>類別。"
  remarks: "執行個體時<xref:System.Data.Common.DataAdapter>會建立下列讀取/寫入屬性會設為下列的初始值。</xref:System.Data.Common.DataAdapter>      |屬性 |初始值 |  |----------------|-------------------|  |<xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>|`MissingMappingAction.Passthrough`|  |<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>|`MissingSchemaAction.Add`|  |<xref:System.Data.Common.DataAdapter.TableMappings%2A>|<xref:System.Data.Common.DataAdapter.TableMappings%2A>物件的陣列。 |      您可以變更任何這些屬性，透過呼叫另一個屬性的值。</xref:System.Data.Common.DataAdapter.TableMappings%2A> </xref:System.Data.Common.DataAdapter.TableMappings%2A> </xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> </xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>"
  syntax:
    content: protected DataAdapter ();
    parameters: []
  overload: System.Data.Common.DataAdapter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.#ctor(System.Data.Common.DataAdapter)
  id: '#ctor(System.Data.Common.DataAdapter)'
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: DataAdapter(DataAdapter)
  nameWithType: DataAdapter.DataAdapter(DataAdapter)
  fullName: System.Data.Common.DataAdapter.DataAdapter(DataAdapter)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "初始化的新執行個體<xref href=&quot;System.Data.Common.DataAdapter&quot;></xref>從現有的物件相同類型的類別。"
  remarks: "這個多載<xref:System.Data.Common.DataAdapter>建構函式適用於.NET Framework 資料提供者實作 clone 實作中使用類似的建構函式時。</xref:System.Data.Common.DataAdapter>"
  syntax:
    content: protected DataAdapter (System.Data.Common.DataAdapter from);
    parameters:
    - id: from
      type: System.Data.Common.DataAdapter
      description: "A <xref href=&quot;System.Data.Common.DataAdapter&quot;> </xref>用來建立新物件<xref href=&quot;System.Data.Common.DataAdapter&quot;> </xref>。"
  overload: System.Data.Common.DataAdapter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.AcceptChangesDuringFill
  id: AcceptChangesDuringFill
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: AcceptChangesDuringFill
  nameWithType: DataAdapter.AcceptChangesDuringFill
  fullName: System.Data.Common.DataAdapter.AcceptChangesDuringFill
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "取得或設定值，指出是否<> *> 上呼叫<xref href=&quot;System.Data.DataRow&quot;></xref>加入至之後<xref href=&quot;System.Data.DataTable&quot;></xref>的任何一個期間**填滿** 作業。"
  remarks: "如果`false`，<xref:System.Data.DataRow.AcceptChanges%2A>未呼叫 vspackage，以及新加入的資料列視為插入的資料列。</xref:System.Data.DataRow.AcceptChanges%2A>"
  syntax:
    content: public bool AcceptChangesDuringFill { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref:System.Data.DataRow.AcceptChanges*>上呼叫<xref href=&quot;System.Data.DataRow&quot;> </xref>，否則為<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Data.DataRow.AcceptChanges*> 預設值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Data.Common.DataAdapter.AcceptChangesDuringFill*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.AcceptChangesDuringUpdate
  id: AcceptChangesDuringUpdate
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: AcceptChangesDuringUpdate
  nameWithType: DataAdapter.AcceptChangesDuringUpdate
  fullName: System.Data.Common.DataAdapter.AcceptChangesDuringUpdate
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "取得或設定是否<> *> 期間會呼叫<> *>。"
  remarks: "在呼叫`Update`方法`DataAdapter`，資料庫可以傳送資料回 ADO.NET 應用程式做為輸出參數或做為第一個傳回結果集的記錄。 ADO.NET 可以擷取這些值，並更新中的對應資料行<xref:System.Data.DataRow>正在更新。</xref:System.Data.DataRow> 根據預設，ADO.NET 呼叫`AcceptChanges`方法`DataRow`更新之後。 不過，如果您想要合併更新的資料列放回另一個<xref:System.Data.DataTable>，您可能想要保留主要索引鍵資料行的原始值。</xref:System.Data.DataTable> 例如，主索引鍵資料行對應至資料庫，例如識別資料行中的自動遞增資料行可以包含新值指派資料庫的不符合中指派的原始值`DataRow`。 根據預設，`AcceptChanges`之後更新和原始值的資料列可能已在隱含地呼叫<xref:System.Data.DataColumn.AutoIncrement%2A>ADO.NET 中，所指派的值會遺失。</xref:System.Data.DataColumn.AutoIncrement%2A> 您可以保留中的原始值`DataRow`藉由防止`ADO.NET`呼叫`AcceptChanges`它 AcceptChangesDuringUpdate 屬性設定為執行資料列更新之後`false`，保留原始值。      > [!NOTE] > 設定`AcceptChangesDuringUpdate`屬性`false`適用於所有資料修改，不只會插入。 如果您想要編輯或刪除資料列，在相同的更新中，而且您想要隱藏呼叫`AcceptChanges`只會針對插入，則不會設定`AccceptChangesDuringUpdate`至`false`，使用的事件處理常式`RowUpdated`事件`DataAdapter`。 在事件處理常式可以檢查<xref:System.Data.Common.RowUpdatedEventArgs.StatementType%2A>可判斷資料的修改是插入、 以及如果`true`，設定<xref:System.Data.Common.RowUpdatedEventArgs.Status%2A>屬性<xref:System.Data.Common.RowUpdatedEventArgs>至<xref:System.Data.UpdateStatus>。</xref:System.Data.UpdateStatus> </xref:System.Data.Common.RowUpdatedEventArgs> </xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> </xref:System.Data.Common.RowUpdatedEventArgs.StatementType%2A> 如需詳細資訊和範例，請參閱[擷取識別或自動編號值](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "This example demonstrates extracting changed rows from a `DataTable` and using a <xref:System.Data.SqlClient.SqlDataAdapter> to update the data source and retrieve a new identity column value. By setting the `AcceptChangesDuringUpdate` property of the <xref:System.Data.SqlClient.SqlDataAdapter> to `false` to preserve the original auto increment value, the new data can then be merged into the original <xref:System.Data.DataTable>, even if the new identity value does not match the original auto increment value in the `DataTable`.  \n  \n [!code-vb[DataWorks SqlClient.AcceptChangesDuringUpdate#1](~/add/codesnippet/visualbasic/p-system.data.common.dat_7_1.vb)]\n [!code-cs[DataWorks SqlClient.AcceptChangesDuringUpdate#1](~/add/codesnippet/csharp/p-system.data.common.dat_7_1.cs)]"
  syntax:
    content: public bool AcceptChangesDuringUpdate { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<> *> 期間會呼叫<> *>，否則為<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Data.Common.DataAdapter.AcceptChangesDuringUpdate*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.CloneInternals
  id: CloneInternals
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: CloneInternals()
  nameWithType: DataAdapter.CloneInternals()
  fullName: System.Data.Common.DataAdapter.CloneInternals()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "建立的這個執行個體的複本<xref href=&quot;System.Data.Common.DataAdapter&quot;> </xref>。"
  remarks: "這個方法已被取代。 <xref:System.Data.Common.DataAdapter.%23ctor%2A>應該使用建構函式，而不是此方法。</xref:System.Data.Common.DataAdapter.%23ctor%2A>       所有命令， <xref:System.Data.Common.DataAdapter.TableMappings%2A>、 <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>，而<xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>就會遭到複製。</xref:System.Data.Common.DataAdapter.MissingMappingAction%2A> </xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> </xref:System.Data.Common.DataAdapter.TableMappings%2A> 不過，命令的連接不會複製，而共用。 因此，複製<xref:System.Data.Common.DataAdapter>可針對與原始連線相同。</xref:System.Data.Common.DataAdapter>"
  syntax:
    content: protected virtual System.Data.Common.DataAdapter CloneInternals ();
    parameters: []
    return:
      type: System.Data.Common.DataAdapter
      description: "複製的執行個體的<xref href=&quot;System.Data.Common.DataAdapter&quot;> </xref>。"
  overload: System.Data.Common.DataAdapter.CloneInternals*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.ContinueUpdateOnError
  id: ContinueUpdateOnError
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: ContinueUpdateOnError
  nameWithType: DataAdapter.ContinueUpdateOnError
  fullName: System.Data.Common.DataAdapter.ContinueUpdateOnError
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "取得或設定值，指定是否要產生例外狀況錯誤時遇到期間更新的資料列。"
  remarks: "如果`ContinueUpdateOnError`設`true`，一個資料列更新期間發生錯誤時，會擲回任何例外狀況。 已略過資料列的更新和錯誤資訊置於<xref:System.Data.DataRow.RowError%2A>中錯誤的資料列的屬性。</xref:System.Data.DataRow.RowError%2A> <xref:System.Data.Common.DataAdapter>繼續更新後續資料列。</xref:System.Data.Common.DataAdapter>       如果`ContinueUpdateOnError`設`false`，一個資料列更新期間發生錯誤時，會擲回例外狀況。"
  syntax:
    content: public bool ContinueUpdateOnError { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要繼續更新，而不會產生例外狀況;否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Data.Common.DataAdapter.ContinueUpdateOnError*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.CreateTableMappings
  id: CreateTableMappings
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: CreateTableMappings()
  nameWithType: DataAdapter.CreateTableMappings()
  fullName: System.Data.Common.DataAdapter.CreateTableMappings()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "建立新<xref href=&quot;System.Data.Common.DataTableMappingCollection&quot;> </xref>。"
  syntax:
    content: protected virtual System.Data.Common.DataTableMappingCollection CreateTableMappings ();
    parameters: []
    return:
      type: System.Data.Common.DataTableMappingCollection
      description: "新的資料表的對應集合。"
  overload: System.Data.Common.DataAdapter.CreateTableMappings*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: DataAdapter.Dispose(Boolean)
  fullName: System.Data.Common.DataAdapter.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "所使用的 unmanaged 的資源釋出<xref href=&quot;System.Data.Common.DataAdapter&quot;></xref>並選擇性釋放 managed 的資源。"
  remarks: "這個方法會呼叫公用<xref:System.IDisposable.Dispose%2A>方法和<xref:System.Object.Finalize%2A>方法。</xref:System.Object.Finalize%2A> </xref:System.IDisposable.Dispose%2A> `Dispose`叫用受保護`Dispose(Boolean)`方法`disposing`參數設定為`true`。 <xref:System.Object.Finalize%2A>叫用`Dispose`與`disposing`設`false`。</xref:System.Object.Finalize%2A>       當`disposing`參數是`true`，這個方法的任何 managed 物件所持有的資源全部釋出這個<xref:System.Data.Common.DataAdapter>參考。</xref:System.Data.Common.DataAdapter> 這個方法會叫用`Dispose`每個參考物件的方法。"
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>表示釋放 managed 和 unmanaged 資源，<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>表示只釋放 unmanaged 的資源。"
  overload: System.Data.Common.DataAdapter.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.Fill(System.Data.DataSet)
  id: Fill(System.Data.DataSet)
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: Fill(DataSet)
  nameWithType: DataAdapter.Fill(DataSet)
  fullName: System.Data.Common.DataAdapter.Fill(DataSet)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "加入或重新整理中的資料列<xref href=&quot;System.Data.DataSet&quot;></xref>以符合資料來源。"
  remarks: "Fill 方法從使用 SELECT 陳述式指定由相關聯的資料來源擷取資料列<xref:System.Data.IDbDataAdapter.SelectCommand%2A>屬性。</xref:System.Data.IDbDataAdapter.SelectCommand%2A> SELECT 陳述式相關聯的連接物件必須有效，但它不需要開啟。 如果連接已關閉，會在呼叫填滿之前，它會開啟擷取資料，然後關閉。 如果連接為開啟，會在呼叫填滿之前，它會保持開啟。       填滿作業接著會將資料列加入到目的地<xref:System.Data.DataTable>中的物件<xref:System.Data.DataSet>、 建立<xref:System.Data.DataTable>如果它們尚不存在的物件。</xref:System.Data.DataTable> </xref:System.Data.DataSet> </xref:System.Data.DataTable> 建立時<xref:System.Data.DataTable>物件填入作業通常會建立只有資料行名稱中繼資料。</xref:System.Data.DataTable> 不過，如果<xref:System.Data.IDataAdapter.MissingSchemaAction%2A>屬性設定為`AddWithKey`，也會建立適當的主索引鍵和條件約束。</xref:System.Data.IDataAdapter.MissingSchemaAction%2A>       如果`SelectCommand`傳回結果的 OUTER JOIN，`DataAdapter`未設定<xref:System.Data.DataTable.PrimaryKey%2A>值，產生<xref:System.Data.DataTable>。</xref:System.Data.DataTable> </xref:System.Data.DataTable.PrimaryKey%2A> 您必須明確定義主索引鍵，以確保正確解析重複的資料列。 如需詳細資訊，請參閱[定義主索引鍵](~/add/includes/ajax-current-ext-md.md)。       如果資料配接器遇到重複的資料行在填入<xref:System.Data.DataTable>，它會產生名稱，後續的資料行，並使用模式 」 columnname1&quot;、&quot;columnname2&quot;、&quot;columnname3&quot;，等等。</xref:System.Data.DataTable> 如果內送資料中包含未命名資料行，它們會放置於<xref:System.Data.DataSet>根據模式&quot;Column1&quot;、&quot;Column2&quot;，等等。</xref:System.Data.DataSet> 當多個結果集加入至<xref:System.Data.DataSet>放置於個別的資料表中每個結果集。</xref:System.Data.DataSet> 其他結果集的命名方式是附加至指定的資料表名稱 （例如，&quot;Table&quot;、&quot;Table1&quot;、&quot;Table2&quot;等等） 的整數值。 使用資料行和資料表名稱的應用程式應確保這些命名模式衝突不會發生。       當 SELECT 陳述式用來填入<xref:System.Data.DataSet>傳回多個結果，例如批次 SQL 陳述式中，如果其中一個結果包含錯誤，所有後續的結果會略過，不會加入至<xref:System.Data.DataSet>。</xref:System.Data.DataSet> </xref:System.Data.DataSet>       您可以使用的填滿方法多次於相同<xref:System.Data.DataTable>。</xref:System.Data.DataTable> 如果主索引鍵存在，內送資料列會合併具有相符的資料列已經存在。 如果沒有主索引鍵存在，內送資料列會附加至<xref:System.Data.DataTable>。</xref:System.Data.DataTable>      > [!NOTE] > 時處理批次 SQL 陳述式會傳回多個結果，實作<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>的.NET Framework Data Provider for OLE DB 擷取結構描述資訊，只有第一個結果。</xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 若要擷取多個結果的結構描述資訊，請使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>與<xref:System.Data.MissingSchemaAction>設`AddWithKey`。</xref:System.Data.MissingSchemaAction> </xref:System.Data.Common.DbDataAdapter.Fill%2A>"
  syntax:
    content: public virtual int Fill (System.Data.DataSet dataSet);
    parameters:
    - id: dataSet
      type: System.Data.DataSet
      description: "A <xref href=&quot;System.Data.DataSet&quot;> </xref>填滿記錄，如有必要，結構描述。"
    return:
      type: System.Int32
      description: "資料列數目已成功加入，或在中重新整理<xref href=&quot;System.Data.DataSet&quot;> </xref>。 這不包括不傳回資料列的陳述式所影響的資料列。"
  overload: System.Data.Common.DataAdapter.Fill*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.Fill(System.Data.DataTable,System.Data.IDataReader)
  id: Fill(System.Data.DataTable,System.Data.IDataReader)
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: Fill(DataTable,IDataReader)
  nameWithType: DataAdapter.Fill(DataTable,IDataReader)
  fullName: System.Data.Common.DataAdapter.Fill(DataTable,IDataReader)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "加入或重新整理中的資料列<xref href=&quot;System.Data.DataTable&quot;></xref>以符合資料來源使用<xref href=&quot;System.Data.DataTable&quot;></xref>名稱，而指定<xref href=&quot;System.Data.IDataReader&quot;> </xref>。"
  remarks: "請參閱備註`System.Data.Common.DataAdapter.Fill(System.Data.DataSet)`如需詳細資訊。"
  syntax:
    content: protected virtual int Fill (System.Data.DataTable dataTable, System.Data.IDataReader dataReader);
    parameters:
    - id: dataTable
      type: System.Data.DataTable
      description: "A <xref href=&quot;System.Data.DataTable&quot;> </xref>填滿記錄。"
    - id: dataReader
      type: System.Data.IDataReader
      description: "執行個體<xref href=&quot;System.Data.IDataReader&quot;> </xref>。"
    return:
      type: System.Int32
      description: "資料列數目已成功加入，或在中重新整理<xref href=&quot;System.Data.DataTable&quot;> </xref>。 這不包括不傳回資料列的陳述式所影響的資料列。"
  overload: System.Data.Common.DataAdapter.Fill*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.Fill(System.Data.DataTable[],System.Data.IDataReader,System.Int32,System.Int32)
  id: Fill(System.Data.DataTable[],System.Data.IDataReader,System.Int32,System.Int32)
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: Fill(DataTable[],IDataReader,Int32,Int32)
  nameWithType: DataAdapter.Fill(DataTable[],IDataReader,Int32,Int32)
  fullName: System.Data.Common.DataAdapter.Fill(DataTable[],IDataReader,Int32,Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "加入或重新整理的集合中的指定範圍中的資料列<xref href=&quot;System.Data.DataTable&quot;></xref>以符合資料來源中的物件。"
  remarks: "請參閱備註`System.Data.Common.DataAdapter.Fill(System.Data.DataSet)`如需詳細資訊。"
  syntax:
    content: protected virtual int Fill (System.Data.DataTable[] dataTables, System.Data.IDataReader dataReader, int startRecord, int maxRecords);
    parameters:
    - id: dataTables
      type: System.Data.DataTable[]
      description: "集合<xref href=&quot;System.Data.DataTable&quot;></xref>填滿記錄物件。"
    - id: dataReader
      type: System.Data.IDataReader
      description: "執行個體<xref href=&quot;System.Data.IDataReader&quot;> </xref>。"
    - id: startRecord
      type: System.Int32
      description: "起始記錄的以零為起始的索引。"
    - id: maxRecords
      type: System.Int32
      description: "表示最大記錄數目的整數。"
    return:
      type: System.Int32
      description: "資料列數目已成功加入，或在中重新整理<xref href=&quot;System.Data.DataTable&quot;> </xref>。 這不包括不傳回資料列的陳述式所影響的資料列。"
  overload: System.Data.Common.DataAdapter.Fill*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.Fill(System.Data.DataSet,System.String,System.Data.IDataReader,System.Int32,System.Int32)
  id: Fill(System.Data.DataSet,System.String,System.Data.IDataReader,System.Int32,System.Int32)
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: Fill(DataSet,String,IDataReader,Int32,Int32)
  nameWithType: DataAdapter.Fill(DataSet,String,IDataReader,Int32,Int32)
  fullName: System.Data.Common.DataAdapter.Fill(DataSet,String,IDataReader,Int32,Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "加入或重新整理指定範圍中的資料列<xref href=&quot;System.Data.DataSet&quot;></xref>以符合資料來源使用<xref href=&quot;System.Data.DataSet&quot;></xref>和<xref href=&quot;System.Data.DataTable&quot;></xref>名稱。"
  remarks: "請參閱備註`System.Data.Common.DataAdapter.Fill(System.Data.DataSet)`如需詳細資訊。"
  syntax:
    content: protected virtual int Fill (System.Data.DataSet dataSet, string srcTable, System.Data.IDataReader dataReader, int startRecord, int maxRecords);
    parameters:
    - id: dataSet
      type: System.Data.DataSet
      description: "A <xref href=&quot;System.Data.DataSet&quot;> </xref>填滿記錄。"
    - id: srcTable
      type: System.String
      description: "字串，表示來源資料表的名稱。"
    - id: dataReader
      type: System.Data.IDataReader
      description: "執行個體<xref href=&quot;System.Data.IDataReader&quot;> </xref>。"
    - id: startRecord
      type: System.Int32
      description: "起始記錄的以零為起始的索引。"
    - id: maxRecords
      type: System.Int32
      description: "表示最大記錄數目的整數。"
    return:
      type: System.Int32
      description: "資料列數目已成功加入，或在中重新整理<xref href=&quot;System.Data.DataSet&quot;> </xref>。 這不包括不傳回資料列的陳述式所影響的資料列。"
  overload: System.Data.Common.DataAdapter.Fill*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.FillError
  id: FillError
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: FillError
  nameWithType: DataAdapter.FillError
  fullName: System.Data.Common.DataAdapter.FillError
  type: Event
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "填滿作業期間發生錯誤時傳回。"
  remarks: "**FillError**事件可讓使用者決定是否填滿作業應該繼續之後就會發生錯誤。 範例**FillError**事件可能是:-正在加入的資料`DataSet`無法轉換成 common language runtime 類型，而不會遺失有效位數。      -正在加入的資料列包含違反條件約束必須強制執行上的資料`DataColumn`中`DataSet`。"
  syntax:
    content: public event System.Data.FillErrorEventHandler FillError;
    return:
      type: System.Data.FillErrorEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.FillLoadOption
  id: FillLoadOption
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: FillLoadOption
  nameWithType: DataAdapter.FillLoadOption
  fullName: System.Data.Common.DataAdapter.FillLoadOption
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "取得或設定<xref href=&quot;System.Data.LoadOption&quot;> </xref> ，決定配接器的填滿<xref href=&quot;System.Data.DataTable&quot;></xref>從<xref href=&quot;System.Data.Common.DbDataReader&quot;> </xref>。"
  syntax:
    content: public System.Data.LoadOption FillLoadOption { get; set; }
    return:
      type: System.Data.LoadOption
      description: "A <xref href=&quot;System.Data.LoadOption&quot;></xref> value."
  overload: System.Data.Common.DataAdapter.FillLoadOption*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)
  id: FillSchema(System.Data.DataSet,System.Data.SchemaType)
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: FillSchema(DataSet,SchemaType)
  nameWithType: DataAdapter.FillSchema(DataSet,SchemaType)
  fullName: System.Data.Common.DataAdapter.FillSchema(DataSet,SchemaType)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "新增<xref href=&quot;System.Data.DataTable&quot;></xref>指定<xref href=&quot;System.Data.DataSet&quot;></xref>並設定基礎結構描述要比對資料來源中指定<xref href=&quot;System.Data.SchemaType&quot;> </xref>。"
  remarks: "FillSchema 方法從資料來源使用<xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</xref:System.Data.IDbDataAdapter.SelectCommand%2A>擷取結構描述 連接物件相關聯<xref:System.Data.IDbDataAdapter.SelectCommand%2A>必須有效，但它不需要開啟。</xref:System.Data.IDbDataAdapter.SelectCommand%2A> 如果連接已關閉 FillSchema 呼叫之前，擷取資料開啟和關閉。 如果連接為開啟，會在呼叫 FillSchema 之前，它會保持開啟。       FillSchema 作業新增<xref:System.Data.DataTable>至目的地<xref:System.Data.DataSet>.</xref:System.Data.DataSet> </xref:System.Data.DataTable> 接著它會加入至資料行<xref:System.Data.DataColumnCollection>的<xref:System.Data.DataTable>，並設定下列<xref:System.Data.DataColumn>屬性如果存在於資料來源:- <xref:System.Data.DataColumn.AllowDBNull%2A>- <xref:System.Data.DataColumn.AutoIncrement%2A>.</xref:System.Data.DataColumn.AutoIncrement%2A> </xref:System.Data.DataColumn.AllowDBNull%2A> </xref:System.Data.DataColumn> </xref:System.Data.DataTable> </xref:System.Data.DataColumnCollection> 您必須設定<xref:System.Data.DataColumn.AutoIncrementStep%2A>和<xref:System.Data.DataColumn.AutoIncrementSeed%2A>個別。</xref:System.Data.DataColumn.AutoIncrementSeed%2A> </xref:System.Data.DataColumn.AutoIncrementStep%2A>      - <xref:System.Data.DataColumn.MaxLength%2A>- <xref:System.Data.DataColumn.ReadOnly%2A>- <xref:System.Data.DataColumn.Unique%2A>FillSchema 也會設定<xref:System.Data.DataTable.PrimaryKey%2A>和<xref:System.Data.DataTable.Constraints%2A>屬性根據下列規則:-如果一或多個主索引鍵資料行所傳回的<xref:System.Data.IDbDataAdapter.SelectCommand%2A>，它們會當做<xref:System.Data.DataTable>.</xref:System.Data.DataTable>的主索引鍵資料行</xref:System.Data.IDbDataAdapter.SelectCommand%2A></xref:System.Data.DataTable.Constraints%2A></xref:System.Data.DataTable.PrimaryKey%2A></xref:System.Data.DataColumn.Unique%2A></xref:System.Data.DataColumn.ReadOnly%2A></xref:System.Data.DataColumn.MaxLength%2A>      -如果傳回沒有主索引鍵資料行，但是唯一的資料行，唯一的資料行可用的主索引鍵，如果且只有唯一的資料行都不可為 null。 如果任何資料行可為 null，<xref:System.Data.UniqueConstraint>加入至<xref:System.Data.ConstraintCollection>，但<xref:System.Data.DataTable.PrimaryKey%2A>屬性未設定。</xref:System.Data.DataTable.PrimaryKey%2A> </xref:System.Data.ConstraintCollection> </xref:System.Data.UniqueConstraint>      -如果傳回主要索引鍵資料行，唯一的資料行，主索引鍵資料行作為主索引鍵資料行<xref:System.Data.DataTable>.</xref:System.Data.DataTable>      > [!NOTE] > 基礎資料存放區可能會允許不支援的資料行屬性<xref:System.Data.DataColumn>，因而導致不正確轉譯的某些資料行屬性。</xref:System.Data.DataColumn> 例如，[!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]允許 tinyint 資料類型的識別欄位，而<xref:System.Data.DataColumn>只允許 Int16、 Int32、 以及具有 Int64<xref:System.Data.DataColumn.AutoIncrement%2A>屬性集。</xref:System.Data.DataColumn.AutoIncrement%2A> </xref:System.Data.DataColumn> `FillSchema`以無訊息方式略過的情況下其中<xref:System.Data.DataColumn>無法精確地反映資料來源，並擲回任何例外狀況。</xref:System.Data.DataColumn>       請注意，會將主索引鍵和唯一條件約束加入至<xref:System.Data.ConstraintCollection>根據前述規則，但其他條件約束類型不會加入。</xref:System.Data.ConstraintCollection>       如果唯一叢集索引上的資料行或 SQL Server 資料表中的資料行定義和叢集索引中的資料行的名稱將會傳回一組個別的資料行上定義主索引鍵條件約束。 若要傳回的主索引鍵資料行的名稱，使用指定名稱的主索引鍵的 SELECT 陳述式中的查詢提示。 如需有關指定查詢提示的詳細資訊，請參閱[查詢提示 (TRANSACT-SQL)](http://msdn.microsoft.com/library/ms181714.aspx)。       如果<xref:System.Data.Common.DataAdapter>遇到重複的資料行在填入<xref:System.Data.DataTable>，它會產生後續的資料行，並使用模式的名稱&quot;*columnname*1&quot;，&quot;*columnname*2&quot;，&quot;*columnname*3 」，依此類推。</xref:System.Data.DataTable> </xref:System.Data.Common.DataAdapter> 如果內送資料中包含未命名資料行，它們會放置於<xref:System.Data.DataSet>根據模式&quot;Column1&quot;、&quot;Column2&quot;，等等。</xref:System.Data.DataSet> 當多個結果集加入至<xref:System.Data.DataSet>放置於個別的資料表中每個結果集。</xref:System.Data.DataSet> 其他結果集的命名方式是附加至指定的資料表名稱 （例如，&quot;Table&quot;、&quot;Table1&quot;、&quot;Table2&quot;等等） 的整數值。 使用資料行和資料表名稱的應用程式應確保這些命名模式衝突不會發生。       FillSchema 不傳回任何資料列。 使用<xref:System.Data.Common.DataAdapter.Fill%2A>要加入資料列至<xref:System.Data.DataTable>。</xref:System.Data.DataTable>方法</xref:System.Data.Common.DataAdapter.Fill%2A>      > [!NOTE] > 時處理批次 SQL 陳述式會傳回多個結果，實作<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>的.NET Framework Data Provider for OLE DB 擷取結構描述資訊，只有第一個結果。</xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 若要擷取多個結果的結構描述資訊，請使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>與<xref:System.Data.MissingSchemaAction>設`AddWithKey`。</xref:System.Data.MissingSchemaAction> </xref:System.Data.Common.DbDataAdapter.Fill%2A>"
  syntax:
    content: public virtual System.Data.DataTable[] FillSchema (System.Data.DataSet dataSet, System.Data.SchemaType schemaType);
    parameters:
    - id: dataSet
      type: System.Data.DataSet
      description: "<xref href=&quot;System.Data.DataSet&quot;> </xref>来填入資料來源的結構描述。"
    - id: schemaType
      type: System.Data.SchemaType
      description: "其中一個<xref href=&quot;System.Data.SchemaType&quot;></xref>值。"
    return:
      type: System.Data.DataTable[]
      description: "A <xref href=&quot;System.Data.DataTable&quot;> </xref>從資料來源傳回的物件，其中包含結構描述資訊。"
  overload: System.Data.Common.DataAdapter.FillSchema*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDataReader)
  id: FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDataReader)
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: FillSchema(DataTable,SchemaType,IDataReader)
  nameWithType: DataAdapter.FillSchema(DataTable,SchemaType,IDataReader)
  fullName: System.Data.Common.DataAdapter.FillSchema(DataTable,SchemaType,IDataReader)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "新增<xref href=&quot;System.Data.DataTable&quot;></xref>指定<xref href=&quot;System.Data.DataSet&quot;> </xref>。"
  syntax:
    content: protected virtual System.Data.DataTable FillSchema (System.Data.DataTable dataTable, System.Data.SchemaType schemaType, System.Data.IDataReader dataReader);
    parameters:
    - id: dataTable
      type: System.Data.DataTable
      description: "<xref href=&quot;System.Data.DataTable&quot;> </xref>要填滿從<xref href=&quot;System.Data.IDataReader&quot;> </xref>。"
    - id: schemaType
      type: System.Data.SchemaType
      description: "其中一個<xref href=&quot;System.Data.SchemaType&quot;></xref>值。"
    - id: dataReader
      type: System.Data.IDataReader
      description: "<xref href=&quot;System.Data.IDataReader&quot;> </xref>填滿時，做為資料來源使用<xref href=&quot;System.Data.DataTable&quot;> </xref>。"
    return:
      type: System.Data.DataTable
      description: "A <xref href=&quot;System.Data.DataTable&quot;> </xref>從資料來源傳回的物件，其中包含結構描述資訊。"
  overload: System.Data.Common.DataAdapter.FillSchema*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String,System.Data.IDataReader)
  id: FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String,System.Data.IDataReader)
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: FillSchema(DataSet,SchemaType,String,IDataReader)
  nameWithType: DataAdapter.FillSchema(DataSet,SchemaType,String,IDataReader)
  fullName: System.Data.Common.DataAdapter.FillSchema(DataSet,SchemaType,String,IDataReader)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "新增<xref href=&quot;System.Data.DataTable&quot;></xref>指定<xref href=&quot;System.Data.DataSet&quot;> </xref>。"
  syntax:
    content: protected virtual System.Data.DataTable[] FillSchema (System.Data.DataSet dataSet, System.Data.SchemaType schemaType, string srcTable, System.Data.IDataReader dataReader);
    parameters:
    - id: dataSet
      type: System.Data.DataSet
      description: "<xref href=&quot;System.Data.DataTable&quot;> </xref>要填滿從<xref href=&quot;System.Data.IDataReader&quot;> </xref>。"
    - id: schemaType
      type: System.Data.SchemaType
      description: "其中一個<xref href=&quot;System.Data.SchemaType&quot;></xref>值。"
    - id: srcTable
      type: System.String
      description: "要用於資料表對應的來源資料表的名稱。"
    - id: dataReader
      type: System.Data.IDataReader
      description: "<xref href=&quot;System.Data.IDataReader&quot;> </xref>填滿時，做為資料來源使用<xref href=&quot;System.Data.DataTable&quot;> </xref>。"
    return:
      type: System.Data.DataTable[]
      description: "集合的參考<xref href=&quot;System.Data.DataTable&quot;></xref>物件新增至<xref href=&quot;System.Data.DataSet&quot;> </xref>。"
  overload: System.Data.Common.DataAdapter.FillSchema*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.GetFillParameters
  id: GetFillParameters
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: GetFillParameters()
  nameWithType: DataAdapter.GetFillParameters()
  fullName: System.Data.Common.DataAdapter.GetFillParameters()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "取得執行的 SQL SELECT 陳述式時，使用者所設定的參數。"
  syntax:
    content: public virtual System.Data.IDataParameter[] GetFillParameters ();
    parameters: []
    return:
      type: System.Data.IDataParameter[]
      description: "陣列<xref href=&quot;System.Data.IDataParameter&quot;></xref>使用者設定物件，包含的參數。"
  overload: System.Data.Common.DataAdapter.GetFillParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.HasTableMappings
  id: HasTableMappings
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: HasTableMappings()
  nameWithType: DataAdapter.HasTableMappings()
  fullName: System.Data.Common.DataAdapter.HasTableMappings()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "指出是否<xref href=&quot;System.Data.Common.DataTableMappingCollection&quot;></xref>已建立。"
  syntax:
    content: protected bool HasTableMappings ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref href=&quot;System.Data.Common.DataTableMappingCollection&quot;></xref>已建立; 否則為<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Data.Common.DataAdapter.HasTableMappings*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.MissingMappingAction
  id: MissingMappingAction
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: MissingMappingAction
  nameWithType: DataAdapter.MissingMappingAction
  fullName: System.Data.Common.DataAdapter.MissingMappingAction
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "決定內送資料並沒有相符的資料表或資料行時要採取的動作。"
  remarks: "<xref:System.Data.Common.DataAdapter.TableMappings%2A>屬性會提供傳回的記錄和<xref:System.Data.DataSet>.</xref:System.Data.DataSet>之間的主要對應</xref:System.Data.Common.DataAdapter.TableMappings%2A>"
  example:
  - "The following example creates a derived class, <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.  \n  \n [!code-vb[Classic WebData DataAdapter.MissingMappingAction Example#1](~/add/codesnippet/visualbasic/p-system.data.common.dat_4_1.vb)]\n [!code-cs[Classic WebData DataAdapter.MissingMappingAction Example#1](~/add/codesnippet/csharp/p-system.data.common.dat_4_1.cs)]"
  syntax:
    content: public System.Data.MissingMappingAction MissingMappingAction { get; set; }
    return:
      type: System.Data.MissingMappingAction
      description: "其中一個<xref href=&quot;System.Data.MissingMappingAction&quot;></xref>值。 預設值是<xref uid=&quot;langword_csharp_Passthrough&quot; name=&quot;Passthrough&quot; href=&quot;&quot;> </xref>。"
  overload: System.Data.Common.DataAdapter.MissingMappingAction*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "設定的值不是其中一個<xref href=&quot;System.Data.MissingMappingAction&quot;></xref>值。"
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.MissingSchemaAction
  id: MissingSchemaAction
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: MissingSchemaAction
  nameWithType: DataAdapter.MissingSchemaAction
  fullName: System.Data.Common.DataAdapter.MissingSchemaAction
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "決定現有時要採取的動作<xref href=&quot;System.Data.DataSet&quot;></xref>結構描述內送的資料不相符。"
  remarks: ''
  example:
  - "The following example creates a derived class, <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.  \n  \n [!code-vb[Classic WebData DataAdapter.MissingMappingAction Example#1](~/add/codesnippet/visualbasic/p-system.data.common.dat_9_1.vb)]\n [!code-cs[Classic WebData DataAdapter.MissingMappingAction Example#1](~/add/codesnippet/csharp/p-system.data.common.dat_9_1.cs)]"
  syntax:
    content: public System.Data.MissingSchemaAction MissingSchemaAction { get; set; }
    return:
      type: System.Data.MissingSchemaAction
      description: "其中一個<xref href=&quot;System.Data.MissingSchemaAction&quot;></xref>值。 預設值是<xref uid=&quot;langword_csharp_Add&quot; name=&quot;Add&quot; href=&quot;&quot;> </xref>。"
  overload: System.Data.Common.DataAdapter.MissingSchemaAction*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "設定的值不是其中一個<xref href=&quot;System.Data.MissingSchemaAction&quot;></xref>值。"
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.OnFillError(System.Data.FillErrorEventArgs)
  id: OnFillError(System.Data.FillErrorEventArgs)
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: OnFillError(FillErrorEventArgs)
  nameWithType: DataAdapter.OnFillError(FillErrorEventArgs)
  fullName: System.Data.Common.DataAdapter.OnFillError(FillErrorEventArgs)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "期間發生錯誤時叫用<xref uid=&quot;langword_csharp_Fill&quot; name=&quot;Fill&quot; href=&quot;&quot;> </xref>。"
  syntax:
    content: protected virtual void OnFillError (System.Data.FillErrorEventArgs value);
    parameters:
    - id: value
      type: System.Data.FillErrorEventArgs
      description: "A <xref href=&quot;System.Data.FillErrorEventArgs&quot;></xref> object."
  overload: System.Data.Common.DataAdapter.OnFillError*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.ResetFillLoadOption
  id: ResetFillLoadOption
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: ResetFillLoadOption()
  nameWithType: DataAdapter.ResetFillLoadOption()
  fullName: System.Data.Common.DataAdapter.ResetFillLoadOption()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "重設<> *> 其預設狀態和原因&lt;xref:System.Data.Common.DataAdapter.Fill%2A?displayProperty=fullName&gt;遵守<> *>。"
  syntax:
    content: public void ResetFillLoadOption ();
    parameters: []
  overload: System.Data.Common.DataAdapter.ResetFillLoadOption*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.ReturnProviderSpecificTypes
  id: ReturnProviderSpecificTypes
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: ReturnProviderSpecificTypes
  nameWithType: DataAdapter.ReturnProviderSpecificTypes
  fullName: System.Data.Common.DataAdapter.ReturnProviderSpecificTypes
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "取得或設定是否<xref uid=&quot;langword_csharp_Fill&quot; name=&quot;Fill&quot; href=&quot;&quot;></xref>方法應傳回提供者特定值或符合 CLS 標準的通用值。"
  remarks: "預設值為 `false`。"
  syntax:
    content: public virtual bool ReturnProviderSpecificTypes { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref uid=&quot;langword_csharp_Fill&quot; name=&quot;Fill&quot; href=&quot;&quot;></xref>方法應傳回提供者專屬的值，否則為<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>傳回符合 CLS 標準的通用值。"
  overload: System.Data.Common.DataAdapter.ReturnProviderSpecificTypes*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.ShouldSerializeAcceptChangesDuringFill
  id: ShouldSerializeAcceptChangesDuringFill
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: ShouldSerializeAcceptChangesDuringFill()
  nameWithType: DataAdapter.ShouldSerializeAcceptChangesDuringFill()
  fullName: System.Data.Common.DataAdapter.ShouldSerializeAcceptChangesDuringFill()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "決定是否<xref:System.Data.Common.DataAdapter.AcceptChangesDuringFill*>屬性必須永續性。</xref:System.Data.Common.DataAdapter.AcceptChangesDuringFill*>"
  syntax:
    content: public virtual bool ShouldSerializeAcceptChangesDuringFill ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref:System.Data.Common.DataAdapter.AcceptChangesDuringFill*>屬性會保存，否則為<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Data.Common.DataAdapter.AcceptChangesDuringFill*>"
  overload: System.Data.Common.DataAdapter.ShouldSerializeAcceptChangesDuringFill*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.ShouldSerializeFillLoadOption
  id: ShouldSerializeFillLoadOption
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: ShouldSerializeFillLoadOption()
  nameWithType: DataAdapter.ShouldSerializeFillLoadOption()
  fullName: System.Data.Common.DataAdapter.ShouldSerializeFillLoadOption()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "決定是否<xref:System.Data.Common.DataAdapter.FillLoadOption*>屬性必須永續性。</xref:System.Data.Common.DataAdapter.FillLoadOption*>"
  syntax:
    content: public virtual bool ShouldSerializeFillLoadOption ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref:System.Data.Common.DataAdapter.FillLoadOption*>屬性會保存，否則為<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Data.Common.DataAdapter.FillLoadOption*>"
  overload: System.Data.Common.DataAdapter.ShouldSerializeFillLoadOption*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.ShouldSerializeTableMappings
  id: ShouldSerializeTableMappings
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: ShouldSerializeTableMappings()
  nameWithType: DataAdapter.ShouldSerializeTableMappings()
  fullName: System.Data.Common.DataAdapter.ShouldSerializeTableMappings()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "判斷是否有一個或多個<xref href=&quot;System.Data.Common.DataTableMapping&quot;></xref>物件存在，而且應該保存。"
  syntax:
    content: protected virtual bool ShouldSerializeTableMappings ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果一或多個<xref href=&quot;System.Data.Common.DataTableMapping&quot;></xref>存在的物件; 否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Data.Common.DataAdapter.ShouldSerializeTableMappings*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.System#Data#IDataAdapter#TableMappings
  id: System#Data#IDataAdapter#TableMappings
  isEii: true
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: System.Data.IDataAdapter.TableMappings
  nameWithType: DataAdapter.System.Data.IDataAdapter.TableMappings
  fullName: System.Data.Common.DataAdapter.System.Data.IDataAdapter.TableMappings
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "表示來源資料表對應至 dataset 資料表的方式。"
  remarks: "這個成員是明確介面成員實作。 它可用時，才<xref:System.Data.Common.DataAdapter>執行個體轉換成<xref:System.Data.IDataAdapter>介面。</xref:System.Data.IDataAdapter> </xref:System.Data.Common.DataAdapter>       如需詳細資訊，請參閱<xref:System.Data.IDataAdapter.TableMappings%2A>.</xref:System.Data.IDataAdapter.TableMappings%2A>"
  syntax:
    content: System.Data.ITableMappingCollection System.Data.IDataAdapter.TableMappings { get; }
    return:
      type: System.Data.ITableMappingCollection
      description: "提供傳回的記錄之間的主要對應的集合和<xref href=&quot;System.Data.DataSet&quot;> </xref>。 預設值為空集合。"
  overload: System.Data.Common.DataAdapter.System#Data#IDataAdapter#TableMappings*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.TableMappings
  id: TableMappings
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: TableMappings
  nameWithType: DataAdapter.TableMappings
  fullName: System.Data.Common.DataAdapter.TableMappings
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "取得集合，其中提供來源資料表之間的主要對應和<xref href=&quot;System.Data.DataTable&quot;> </xref>。"
  remarks: "當重新調整變更時，<xref:System.Data.Common.DataAdapter>使用該<xref:System.Data.Common.DataTableMappingCollection>集合相關聯<xref:System.Data.DataSet>.</xref:System.Data.DataSet>所使用的資料行名稱的資料來源所使用的資料行名稱</xref:System.Data.Common.DataTableMappingCollection></xref:System.Data.Common.DataAdapter>"
  example:
  - "The following example uses a derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to add <xref:System.Data.Common.DataTableMapping> objects to its TableMappings collection and display a list of those mapped source tables. This example assumes that an <xref:System.Data.OleDb.OleDbDataAdapter> has already been created.  \n  \n [!code-vb[Classic WebData DataAdapter.TableMappings Example#1](~/add/codesnippet/visualbasic/p-system.data.common.dat_14_1.vb)]\n [!code-cs[Classic WebData DataAdapter.TableMappings Example#1](~/add/codesnippet/csharp/p-system.data.common.dat_14_1.cs)]"
  syntax:
    content: public System.Data.Common.DataTableMappingCollection TableMappings { get; }
    return:
      type: System.Data.Common.DataTableMappingCollection
      description: "提供傳回的記錄之間的主要對應的集合和<xref href=&quot;System.Data.DataSet&quot;> </xref>。 預設值為空集合。"
  overload: System.Data.Common.DataAdapter.TableMappings*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.Update(System.Data.DataSet)
  id: Update(System.Data.DataSet)
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: Update(DataSet)
  nameWithType: DataAdapter.Update(DataSet)
  fullName: System.Data.Common.DataAdapter.Update(DataSet)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "呼叫個別的 INSERT、 UPDATE 或 DELETE 陳述式，針對每個插入、 更新或刪除資料列中指定<xref href=&quot;System.Data.DataSet&quot;></xref>從<xref href=&quot;System.Data.DataTable&quot;></xref>名為&quot;Table&quot;。"
  remarks: "執行更新時，為基礎的資料列。 每個插入、 修改和刪除資料列，更新方法會判斷已在其上執行變更的類型 （插入、 更新或刪除）。 根據變更的類型`Insert`，`Update,`或`Delete`傳播修改過的資料列至資料來源執行命令範本。 當應用程式呼叫更新方法時，<xref:System.Data.Common.DataAdapter>檢查<xref:System.Data.DataRow.RowState%2A>屬性，並執行必要的 INSERT、 UPDATE 或 DELETE 陳述式，反覆地針對每個資料列，並根據<xref:System.Data.DataSet>.</xref:System.Data.DataSet>中設定的索引順序</xref:System.Data.DataRow.RowState%2A></xref:System.Data.Common.DataAdapter> 比方說，更新可能會執行 DELETE 陳述式，後面接著 INSERT 陳述式和另一個的 DELETE 陳述式，因為<xref:System.Data.DataTable>.</xref:System.Data.DataTable>中的資料列的順序       請注意這些陳述式不會執行以批次的處理程序。個別更新每個資料列。 應用程式可以呼叫<xref:System.Data.DataSet.GetChanges%2A>情況下，您必須在其中控制陳述式型別序列中的方法 （例如，更新之前插入）。</xref:System.Data.DataSet.GetChanges%2A> 如需詳細資訊，請參閱[以 Dataadapter 更新資料來源](~/add/includes/ajax-current-ext-md.md)。       如果 INSERT、 UPDATE 或 DELETE 陳述式未指定，更新方法會產生例外狀況。 不過，您可以建立<xref:System.Data.SqlClient.SqlCommandBuilder>或<xref:System.Data.OleDb.OleDbCommandBuilder>物件來自動產生的單一資料表更新 SQL 陳述式，如果您設定`SelectCommand`.NET Framework 資料提供者的屬性。</xref:System.Data.OleDb.OleDbCommandBuilder> </xref:System.Data.SqlClient.SqlCommandBuilder> 然後，您未設定任何其他 SQL 陳述式由產生**CommandBuilder**。 此產生邏輯需要存在於<xref:System.Data.DataSet>.</xref:System.Data.DataSet>的索引鍵資料行資訊 如需詳細資訊，請參閱[Commandbuilder 產生命令](~/add/includes/ajax-current-ext-md.md)。       Update 方法之前執行更新的第一個對應中所列的資料表中擷取資料列。 更新會再重新整理使用的值的資料列<xref:System.Data.IDbCommand.UpdatedRowSource%2A>屬性。</xref:System.Data.IDbCommand.UpdatedRowSource%2A> 傳回的任何其他資料列都會被忽略。       任何資料會載入回後<xref:System.Data.DataSet>、<xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>引發事件，讓使用者檢查調解<xref:System.Data.DataSet>資料列和任何輸出命令所傳回的參數。</xref:System.Data.DataSet> </xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> </xref:System.Data.DataSet> 已成功更新資料列之後，會接受該資料列所做的變更。       使用 Update，執行的順序時，如下所示︰ 1。  中的值<xref:System.Data.DataRow>移到參數值。</xref:System.Data.DataRow>      2.  <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A>就會引發事件。</xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A>      3.  執行命令。      4.  如果命令設定為`FirstReturnedRecord`，則第一個傳回結果會放在<xref:System.Data.DataRow>.</xref:System.Data.DataRow>      5.  如果沒有輸出參數，它們會放置於<xref:System.Data.DataRow>.</xref:System.Data.DataRow>      6.  <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>就會引發事件。</xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>      7.  <xref:System.Data.DataRow.AcceptChanges%2A?displayProperty=fullName>會呼叫。</xref:System.Data.DataRow.AcceptChanges%2A?displayProperty=fullName> 這會引發兩個的<xref:System.Data.DataTable.RowChanging?displayProperty=fullName>和<xref:System.Data.DataTable.RowChanged?displayProperty=fullName>更新<xref:System.Data.DataRow>。</xref:System.Data.DataRow>事件</xref:System.Data.DataTable.RowChanged?displayProperty=fullName></xref:System.Data.DataTable.RowChanging?displayProperty=fullName>       關聯<xref:System.Data.Common.DataAdapter>通常會有與其相關聯的參數集合</xref:System.Data.Common.DataAdapter>的每個命令 參數對應到目前的資料列，透過`SourceColumn`和`SourceVersion`的.net 資料提供者的屬性`Parameter`類別。 `SourceColumn`是指<xref:System.Data.DataTable>資料行，<xref:System.Data.Common.DataAdapter>以取得目前資料列的參數值的參考。</xref:System.Data.Common.DataAdapter> </xref:System.Data.DataTable>       `SourceColumn`在套用任何資料表對應之前，是指未對應的資料行名稱。 如果`SourceColumn`參考到不存在的資料行中，所採取的動作取決於下列其中一種<xref:System.Data.MissingMappingAction>值。</xref:System.Data.MissingMappingAction>      |列舉值 |採取動作 |  |-----------------------|------------------|  |`MissingMappingAction.Passthrough`|來源資料行名稱和資料表名稱使用<xref:System.Data.DataSet>中，如果不不存在任何對應。 |  |`MissingMappingAction.Ignore`|A<xref:System.SystemException>產生。</xref:System.SystemException> </xref:System.Data.DataSet> 對應會明確設定時，遺失對應的輸入的參數通常錯誤的結果。 |  |`MissingMappingAction.Error`|產生<xref:System.SystemException>。 |      `SourceColumn`屬性也用來對應輸出的值，或輸入/輸出參數回`DataSet`。</xref:System.SystemException> 如果它是指不存在的資料行，會產生例外狀況。       `SourceVersion` .NET 資料提供者的屬性`Parameter`類別會決定是否要使用的資料行值的原始、 Current 或 Proposed 版本。 這項功能通常用於在 UPDATE 陳述式來檢查有開放式同步存取違規的 WHERE 子句中包含原始值。       呼叫<xref:System.Data.DataSet.AcceptChanges%2A>方法<xref:System.Data.DataTable.AcceptChanges%2A>將會認可所有變更<xref:System.Data.DataSet>或<xref:System.Data.DataTable>.</xref:System.Data.DataTable> </xref:System.Data.DataSet> </xref:System.Data.DataTable.AcceptChanges%2A> </xref:System.Data.DataSet.AcceptChanges%2A> 如果其中一種方法呼叫之前<xref:System.Data.Common.DbDataAdapter.Update%2A>呼叫方法時，不會認可變更時<xref:System.Data.Common.DbDataAdapter.Update%2A>呼叫方法時，除非後進行進一步變更<xref:System.Data.DataSet.AcceptChanges%2A>或<xref:System.Data.DataTable.AcceptChanges%2A>呼叫。</xref:System.Data.DataTable.AcceptChanges%2A> </xref:System.Data.DataSet.AcceptChanges%2A> </xref:System.Data.Common.DbDataAdapter.Update%2A> </xref:System.Data.Common.DbDataAdapter.Update%2A>      > [!NOTE] > 如果更新的資料列時發生錯誤，擲回例外狀況和已停止執行更新。 若要繼續更新作業，而不會產生例外狀況，當發生錯誤時，設定<xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A>屬性`true`之前呼叫<xref:System.Data.Common.DbDataAdapter.Update%2A>.</xref:System.Data.Common.DbDataAdapter.Update%2A> </xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> 您可能也會回應內的每個資料列基礎上的錯誤`RowUpdated`DataAdapter 的事件。 若要繼續更新作業，而不會產生例外狀況中的`RowUpdated`事件時，設定<xref:System.Data.Common.RowUpdatedEventArgs.Status%2A><xref:System.Data.Common.RowUpdatedEventArgs>至<xref:System.Data.UpdateStatus>。</xref:System.Data.UpdateStatus></xref:System.Data.Common.RowUpdatedEventArgs>屬性</xref:System.Data.Common.RowUpdatedEventArgs.Status%2A>   >> 每個資料行，您將傳播到資料來源 onUpdate，參數應該加入至`InsertCommand`， `UpdateCommand`，或`DeleteCommand`。 `SourceColumn`參數的屬性應該設定為資料行的名稱。 此設定表示參數的值未以手動方式設定，但會從目前所處理的資料列中的特定資料行中取得。"
  example:
  - "The following example uses the derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to Update the data source.  \n  \n [!code-cs[Classic WebData DataAdapter.IDataAdapter.Update Example#1](~/add/codesnippet/csharp/m-system.data.common.dat_26_1.cs)]\n [!code-vb[Classic WebData DataAdapter.IDataAdapter.Update Example#1](~/add/codesnippet/visualbasic/m-system.data.common.dat_26_1.vb)]"
  syntax:
    content: public virtual int Update (System.Data.DataSet dataSet);
    parameters:
    - id: dataSet
      type: System.Data.DataSet
      description: "<xref href=&quot;System.Data.DataSet&quot;> </xref>用來更新資料來源。"
    return:
      type: System.Int32
      description: "已成功從更新的資料列數目<xref href=&quot;System.Data.DataSet&quot;> </xref>。"
  overload: System.Data.Common.DataAdapter.Update*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "無效的來源資料表。"
  - type: System.Data.DBConcurrencyException
    commentId: T:System.Data.DBConcurrencyException
    description: "嘗試執行的 INSERT、 UPDATE 或 DELETE 陳述式產生零個受影響的記錄。"
  platform:
  - net462
references:
- uid: System.ComponentModel.Component
  isExternal: false
  name: System.ComponentModel.Component
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Data.DBConcurrencyException
  parent: System.Data
  isExternal: false
  name: DBConcurrencyException
  nameWithType: DBConcurrencyException
  fullName: System.Data.DBConcurrencyException
- uid: System.Data.Common.DataAdapter.#ctor
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: DataAdapter()
  nameWithType: DataAdapter.DataAdapter()
  fullName: System.Data.Common.DataAdapter.DataAdapter()
- uid: System.Data.Common.DataAdapter.#ctor(System.Data.Common.DataAdapter)
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: DataAdapter(DataAdapter)
  nameWithType: DataAdapter.DataAdapter(DataAdapter)
  fullName: System.Data.Common.DataAdapter.DataAdapter(DataAdapter)
- uid: System.Data.Common.DataAdapter
  parent: System.Data.Common
  isExternal: false
  name: DataAdapter
  nameWithType: DataAdapter
  fullName: System.Data.Common.DataAdapter
- uid: System.Data.Common.DataAdapter.AcceptChangesDuringFill
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: AcceptChangesDuringFill
  nameWithType: DataAdapter.AcceptChangesDuringFill
  fullName: System.Data.Common.DataAdapter.AcceptChangesDuringFill
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Common.DataAdapter.AcceptChangesDuringUpdate
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: AcceptChangesDuringUpdate
  nameWithType: DataAdapter.AcceptChangesDuringUpdate
  fullName: System.Data.Common.DataAdapter.AcceptChangesDuringUpdate
- uid: System.Data.Common.DataAdapter.CloneInternals
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: CloneInternals()
  nameWithType: DataAdapter.CloneInternals()
  fullName: System.Data.Common.DataAdapter.CloneInternals()
- uid: System.Data.Common.DataAdapter.ContinueUpdateOnError
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: ContinueUpdateOnError
  nameWithType: DataAdapter.ContinueUpdateOnError
  fullName: System.Data.Common.DataAdapter.ContinueUpdateOnError
- uid: System.Data.Common.DataAdapter.CreateTableMappings
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: CreateTableMappings()
  nameWithType: DataAdapter.CreateTableMappings()
  fullName: System.Data.Common.DataAdapter.CreateTableMappings()
- uid: System.Data.Common.DataTableMappingCollection
  parent: System.Data.Common
  isExternal: false
  name: DataTableMappingCollection
  nameWithType: DataTableMappingCollection
  fullName: System.Data.Common.DataTableMappingCollection
- uid: System.Data.Common.DataAdapter.Dispose(System.Boolean)
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: DataAdapter.Dispose(Boolean)
  fullName: System.Data.Common.DataAdapter.Dispose(Boolean)
- uid: System.Data.Common.DataAdapter.Fill(System.Data.DataSet)
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: Fill(DataSet)
  nameWithType: DataAdapter.Fill(DataSet)
  fullName: System.Data.Common.DataAdapter.Fill(DataSet)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.DataSet
  parent: System.Data
  isExternal: false
  name: DataSet
  nameWithType: DataSet
  fullName: System.Data.DataSet
- uid: System.Data.Common.DataAdapter.Fill(System.Data.DataTable,System.Data.IDataReader)
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: Fill(DataTable,IDataReader)
  nameWithType: DataAdapter.Fill(DataTable,IDataReader)
  fullName: System.Data.Common.DataAdapter.Fill(DataTable,IDataReader)
- uid: System.Data.DataTable
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: System.Data.IDataReader
  parent: System.Data
  isExternal: false
  name: IDataReader
  nameWithType: IDataReader
  fullName: System.Data.IDataReader
- uid: System.Data.Common.DataAdapter.Fill(System.Data.DataTable[],System.Data.IDataReader,System.Int32,System.Int32)
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: Fill(DataTable[],IDataReader,Int32,Int32)
  nameWithType: DataAdapter.Fill(DataTable[],IDataReader,Int32,Int32)
  fullName: System.Data.Common.DataAdapter.Fill(DataTable[],IDataReader,Int32,Int32)
- uid: System.Data.DataTable[]
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable[]
  spec.csharp:
  - uid: System.Data.DataTable
    name: DataTable
    nameWithType: DataTable
    fullName: DataTable[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.Common.DataAdapter.Fill(System.Data.DataSet,System.String,System.Data.IDataReader,System.Int32,System.Int32)
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: Fill(DataSet,String,IDataReader,Int32,Int32)
  nameWithType: DataAdapter.Fill(DataSet,String,IDataReader,Int32,Int32)
  fullName: System.Data.Common.DataAdapter.Fill(DataSet,String,IDataReader,Int32,Int32)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Common.DataAdapter.FillError
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: FillError
  nameWithType: DataAdapter.FillError
  fullName: System.Data.Common.DataAdapter.FillError
- uid: System.Data.FillErrorEventHandler
  parent: System.Data
  isExternal: false
  name: FillErrorEventHandler
  nameWithType: FillErrorEventHandler
  fullName: System.Data.FillErrorEventHandler
- uid: System.Data.Common.DataAdapter.FillLoadOption
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: FillLoadOption
  nameWithType: DataAdapter.FillLoadOption
  fullName: System.Data.Common.DataAdapter.FillLoadOption
- uid: System.Data.LoadOption
  parent: System.Data
  isExternal: false
  name: LoadOption
  nameWithType: LoadOption
  fullName: System.Data.LoadOption
- uid: System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: FillSchema(DataSet,SchemaType)
  nameWithType: DataAdapter.FillSchema(DataSet,SchemaType)
  fullName: System.Data.Common.DataAdapter.FillSchema(DataSet,SchemaType)
- uid: System.Data.SchemaType
  parent: System.Data
  isExternal: false
  name: SchemaType
  nameWithType: SchemaType
  fullName: System.Data.SchemaType
- uid: System.Data.Common.DataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDataReader)
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: FillSchema(DataTable,SchemaType,IDataReader)
  nameWithType: DataAdapter.FillSchema(DataTable,SchemaType,IDataReader)
  fullName: System.Data.Common.DataAdapter.FillSchema(DataTable,SchemaType,IDataReader)
- uid: System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String,System.Data.IDataReader)
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: FillSchema(DataSet,SchemaType,String,IDataReader)
  nameWithType: DataAdapter.FillSchema(DataSet,SchemaType,String,IDataReader)
  fullName: System.Data.Common.DataAdapter.FillSchema(DataSet,SchemaType,String,IDataReader)
- uid: System.Data.Common.DataAdapter.GetFillParameters
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: GetFillParameters()
  nameWithType: DataAdapter.GetFillParameters()
  fullName: System.Data.Common.DataAdapter.GetFillParameters()
- uid: System.Data.IDataParameter[]
  parent: System.Data
  isExternal: false
  name: IDataParameter
  nameWithType: IDataParameter
  fullName: System.Data.IDataParameter[]
  spec.csharp:
  - uid: System.Data.IDataParameter
    name: IDataParameter
    nameWithType: IDataParameter
    fullName: IDataParameter[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.Common.DataAdapter.HasTableMappings
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: HasTableMappings()
  nameWithType: DataAdapter.HasTableMappings()
  fullName: System.Data.Common.DataAdapter.HasTableMappings()
- uid: System.Data.Common.DataAdapter.MissingMappingAction
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: MissingMappingAction
  nameWithType: DataAdapter.MissingMappingAction
  fullName: System.Data.Common.DataAdapter.MissingMappingAction
- uid: System.Data.MissingMappingAction
  parent: System.Data
  isExternal: false
  name: MissingMappingAction
  nameWithType: MissingMappingAction
  fullName: System.Data.MissingMappingAction
- uid: System.Data.Common.DataAdapter.MissingSchemaAction
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: MissingSchemaAction
  nameWithType: DataAdapter.MissingSchemaAction
  fullName: System.Data.Common.DataAdapter.MissingSchemaAction
- uid: System.Data.MissingSchemaAction
  parent: System.Data
  isExternal: false
  name: MissingSchemaAction
  nameWithType: MissingSchemaAction
  fullName: System.Data.MissingSchemaAction
- uid: System.Data.Common.DataAdapter.OnFillError(System.Data.FillErrorEventArgs)
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: OnFillError(FillErrorEventArgs)
  nameWithType: DataAdapter.OnFillError(FillErrorEventArgs)
  fullName: System.Data.Common.DataAdapter.OnFillError(FillErrorEventArgs)
- uid: System.Data.FillErrorEventArgs
  parent: System.Data
  isExternal: false
  name: FillErrorEventArgs
  nameWithType: FillErrorEventArgs
  fullName: System.Data.FillErrorEventArgs
- uid: System.Data.Common.DataAdapter.ResetFillLoadOption
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: ResetFillLoadOption()
  nameWithType: DataAdapter.ResetFillLoadOption()
  fullName: System.Data.Common.DataAdapter.ResetFillLoadOption()
- uid: System.Data.Common.DataAdapter.ReturnProviderSpecificTypes
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: ReturnProviderSpecificTypes
  nameWithType: DataAdapter.ReturnProviderSpecificTypes
  fullName: System.Data.Common.DataAdapter.ReturnProviderSpecificTypes
- uid: System.Data.Common.DataAdapter.ShouldSerializeAcceptChangesDuringFill
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: ShouldSerializeAcceptChangesDuringFill()
  nameWithType: DataAdapter.ShouldSerializeAcceptChangesDuringFill()
  fullName: System.Data.Common.DataAdapter.ShouldSerializeAcceptChangesDuringFill()
- uid: System.Data.Common.DataAdapter.ShouldSerializeFillLoadOption
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: ShouldSerializeFillLoadOption()
  nameWithType: DataAdapter.ShouldSerializeFillLoadOption()
  fullName: System.Data.Common.DataAdapter.ShouldSerializeFillLoadOption()
- uid: System.Data.Common.DataAdapter.ShouldSerializeTableMappings
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: ShouldSerializeTableMappings()
  nameWithType: DataAdapter.ShouldSerializeTableMappings()
  fullName: System.Data.Common.DataAdapter.ShouldSerializeTableMappings()
- uid: System.Data.Common.DataAdapter.System#Data#IDataAdapter#TableMappings
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: System.Data.IDataAdapter.TableMappings
  nameWithType: DataAdapter.System.Data.IDataAdapter.TableMappings
  fullName: System.Data.Common.DataAdapter.System.Data.IDataAdapter.TableMappings
- uid: System.Data.ITableMappingCollection
  parent: System.Data
  isExternal: false
  name: ITableMappingCollection
  nameWithType: ITableMappingCollection
  fullName: System.Data.ITableMappingCollection
- uid: System.Data.Common.DataAdapter.TableMappings
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: TableMappings
  nameWithType: DataAdapter.TableMappings
  fullName: System.Data.Common.DataAdapter.TableMappings
- uid: System.Data.Common.DataAdapter.Update(System.Data.DataSet)
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: Update(DataSet)
  nameWithType: DataAdapter.Update(DataSet)
  fullName: System.Data.Common.DataAdapter.Update(DataSet)
- uid: System.Data.Common.DataAdapter.#ctor*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: DataAdapter
  nameWithType: DataAdapter.DataAdapter
- uid: System.Data.Common.DataAdapter.AcceptChangesDuringFill*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: AcceptChangesDuringFill
  nameWithType: DataAdapter.AcceptChangesDuringFill
- uid: System.Data.Common.DataAdapter.AcceptChangesDuringUpdate*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: AcceptChangesDuringUpdate
  nameWithType: DataAdapter.AcceptChangesDuringUpdate
- uid: System.Data.Common.DataAdapter.CloneInternals*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: CloneInternals
  nameWithType: DataAdapter.CloneInternals
- uid: System.Data.Common.DataAdapter.ContinueUpdateOnError*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: ContinueUpdateOnError
  nameWithType: DataAdapter.ContinueUpdateOnError
- uid: System.Data.Common.DataAdapter.CreateTableMappings*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: CreateTableMappings
  nameWithType: DataAdapter.CreateTableMappings
- uid: System.Data.Common.DataAdapter.Dispose*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: Dispose
  nameWithType: DataAdapter.Dispose
- uid: System.Data.Common.DataAdapter.Fill*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: Fill
  nameWithType: DataAdapter.Fill
- uid: System.Data.Common.DataAdapter.FillLoadOption*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: FillLoadOption
  nameWithType: DataAdapter.FillLoadOption
- uid: System.Data.Common.DataAdapter.FillSchema*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: FillSchema
  nameWithType: DataAdapter.FillSchema
- uid: System.Data.Common.DataAdapter.GetFillParameters*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: GetFillParameters
  nameWithType: DataAdapter.GetFillParameters
- uid: System.Data.Common.DataAdapter.HasTableMappings*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: HasTableMappings
  nameWithType: DataAdapter.HasTableMappings
- uid: System.Data.Common.DataAdapter.MissingMappingAction*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: MissingMappingAction
  nameWithType: DataAdapter.MissingMappingAction
- uid: System.Data.Common.DataAdapter.MissingSchemaAction*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: MissingSchemaAction
  nameWithType: DataAdapter.MissingSchemaAction
- uid: System.Data.Common.DataAdapter.OnFillError*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: OnFillError
  nameWithType: DataAdapter.OnFillError
- uid: System.Data.Common.DataAdapter.ResetFillLoadOption*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: ResetFillLoadOption
  nameWithType: DataAdapter.ResetFillLoadOption
- uid: System.Data.Common.DataAdapter.ReturnProviderSpecificTypes*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: ReturnProviderSpecificTypes
  nameWithType: DataAdapter.ReturnProviderSpecificTypes
- uid: System.Data.Common.DataAdapter.ShouldSerializeAcceptChangesDuringFill*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: ShouldSerializeAcceptChangesDuringFill
  nameWithType: DataAdapter.ShouldSerializeAcceptChangesDuringFill
- uid: System.Data.Common.DataAdapter.ShouldSerializeFillLoadOption*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: ShouldSerializeFillLoadOption
  nameWithType: DataAdapter.ShouldSerializeFillLoadOption
- uid: System.Data.Common.DataAdapter.ShouldSerializeTableMappings*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: ShouldSerializeTableMappings
  nameWithType: DataAdapter.ShouldSerializeTableMappings
- uid: System.Data.Common.DataAdapter.System#Data#IDataAdapter#TableMappings*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: System.Data.IDataAdapter.TableMappings
  nameWithType: DataAdapter.System.Data.IDataAdapter.TableMappings
- uid: System.Data.Common.DataAdapter.TableMappings*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: TableMappings
  nameWithType: DataAdapter.TableMappings
- uid: System.Data.Common.DataAdapter.Update*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: Update
  nameWithType: DataAdapter.Update
