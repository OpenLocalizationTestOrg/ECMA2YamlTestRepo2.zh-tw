### YamlMime:ManagedReference
items:
- uid: System.Windows.Int32Rect
  id: Int32Rect
  children:
  - System.Windows.Int32Rect.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Windows.Int32Rect.Empty
  - System.Windows.Int32Rect.Equals(System.Object)
  - System.Windows.Int32Rect.Equals(System.Windows.Int32Rect)
  - System.Windows.Int32Rect.Equals(System.Windows.Int32Rect,System.Windows.Int32Rect)
  - System.Windows.Int32Rect.GetHashCode
  - System.Windows.Int32Rect.HasArea
  - System.Windows.Int32Rect.Height
  - System.Windows.Int32Rect.IsEmpty
  - System.Windows.Int32Rect.op_Equality(System.Windows.Int32Rect,System.Windows.Int32Rect)
  - System.Windows.Int32Rect.op_Inequality(System.Windows.Int32Rect,System.Windows.Int32Rect)
  - System.Windows.Int32Rect.Parse(System.String)
  - System.Windows.Int32Rect.System#IFormattable#ToString(System.String,System.IFormatProvider)
  - System.Windows.Int32Rect.ToString
  - System.Windows.Int32Rect.ToString(System.IFormatProvider)
  - System.Windows.Int32Rect.Width
  - System.Windows.Int32Rect.X
  - System.Windows.Int32Rect.Y
  langs:
  - csharp
  name: Int32Rect
  nameWithType: Int32Rect
  fullName: System.Windows.Int32Rect
  type: Struct
  summary: "描述寬度、 高度和整數矩形的位置。"
  remarks: "<a name=&quot;xamlAttributeUsage_Duration&quot;></a># # XAML 屬性使用方式```   <object property=&quot;X,Y,Width,Height&quot;/>   - or    <object property=&quot;Empty&quot;/>   ``` <a name=&quot;xamlValues_MinWidth&quot;> </a> # # XAML 值*X* <xref:System.Int32?displayProperty=fullName>矩形左上角的 x 座標。</xref:System.Int32?displayProperty=fullName>                 *Y* <xref:System.Int32?displayProperty=fullName>矩形左上角的 y 座標。</xref:System.Int32?displayProperty=fullName>           *寬度*<xref:System.Int32?displayProperty=fullName>矩形的寬度。</xref:System.Int32?displayProperty=fullName>           *高度*<xref:System.Int32?displayProperty=fullName>矩形的高度。</xref:System.Int32?displayProperty=fullName>          <a name=&quot;xamlTextUsage_Int32Rect&quot;></a># # XAML 文字使用量您也可以使用空格而不是逗號分隔值。 空白字元也可用以逗號分隔值集。"
  syntax:
    content: >-
      [System.ComponentModel.TypeConverter(typeof(System.Windows.Int32RectConverter))]

      [System.Windows.Markup.ValueSerializer(typeof(System.Windows.Converters.Int32RectValueSerializer))]

      public struct Int32Rect : IFormattable
  inheritance:
  - System.ValueType
  implements:
  - System.IFormattable
  platform:
  - net462
- uid: System.Windows.Int32Rect.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32,System.Int32,System.Int32)'
  parent: System.Windows.Int32Rect
  langs:
  - csharp
  name: Int32Rect(Int32,Int32,Int32,Int32)
  nameWithType: Int32Rect.Int32Rect(Int32,Int32,Int32,Int32)
  fullName: System.Windows.Int32Rect.Int32Rect(Int32,Int32,Int32,Int32)
  type: Constructor
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "初始化的新執行個體<xref href=&quot;System.Windows.Int32Rect&quot;></xref>具有指定<> *> 和<> *> 座標和指定<> *> 和<> *>。"
  syntax:
    content: public Int32Rect (int x, int y, int width, int height);
    parameters:
    - id: x
      type: System.Int32
      description: "<xref:System.Windows.Int32Rect.X*>新<xref href=&quot;System.Windows.Int32Rect&quot;></xref>執行個體的指定矩形左上角的 x 座標。</xref:System.Windows.Int32Rect.X*>"
    - id: y
      type: System.Int32
      description: "<xref:System.Windows.Int32Rect.Y*>新<xref href=&quot;System.Windows.Int32Rect&quot;></xref>執行個體的指定矩形左上角的 y 座標。</xref:System.Windows.Int32Rect.Y*>"
    - id: width
      type: System.Int32
      description: "<xref:System.Windows.Int32Rect.Width*>新<xref href=&quot;System.Windows.Int32Rect&quot;></xref>執行個體指定的矩形的寬度。</xref:System.Windows.Int32Rect.Width*>"
    - id: height
      type: System.Int32
      description: "<xref:System.Windows.Int32Rect.Height*>新<xref href=&quot;System.Windows.Int32Rect&quot;></xref>執行個體指定的矩形的高度。</xref:System.Windows.Int32Rect.Height*>"
  overload: System.Windows.Int32Rect.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Int32Rect.Empty
  id: Empty
  parent: System.Windows.Int32Rect
  langs:
  - csharp
  name: Empty
  nameWithType: Int32Rect.Empty
  fullName: System.Windows.Int32Rect.Empty
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "取得空的矩形，表示沒有位置或區域的矩形的特殊值。"
  remarks: "這個屬性等同於呼叫建構函式的所有參數值使用 0。      <a name=&quot;xamlAttributeUsage_Automatic&quot;></a># # XAML 屬性使用方式```   <object property=&quot;Empty&quot; />   ``` <a name=&quot;xamlValues_Automatic&quot;> </a> # # XAML 值*屬性*屬性，可以接受<xref:System.Windows.Int32Rect>值。</xref:System.Windows.Int32Rect>      "
  syntax:
    content: public static System.Windows.Int32Rect Empty { get; }
    return:
      type: System.Windows.Int32Rect
      description: "沒有位置或區域為空的矩形。"
  overload: System.Windows.Int32Rect.Empty*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Int32Rect.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Windows.Int32Rect
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: Int32Rect.Equals(Object)
  fullName: System.Windows.Int32Rect.Equals(Object)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "判斷指定的矩形是否等於這個矩形。"
  remarks: "這項作業會測試物件相等。"
  syntax:
    content: public override bool Equals (object o);
    parameters:
    - id: o
      type: System.Object
      description: "要與目前的矩形相比較的物件。"
    return:
      type: System.Boolean
      description: '**true** if *o* is an <xref href=&quot;System.Windows.Int32Rect&quot;></xref> and the same <>*>, <>*>, <>*>, and <>*> as this rectangle; otherwise, **false**.'
  overload: System.Windows.Int32Rect.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Int32Rect.Equals(System.Windows.Int32Rect)
  id: Equals(System.Windows.Int32Rect)
  parent: System.Windows.Int32Rect
  langs:
  - csharp
  name: Equals(Int32Rect)
  nameWithType: Int32Rect.Equals(Int32Rect)
  fullName: System.Windows.Int32Rect.Equals(Int32Rect)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "判斷指定的矩形是否等於這個矩形。"
  remarks: "這項作業會測試物件相等。"
  syntax:
    content: public bool Equals (System.Windows.Int32Rect value);
    parameters:
    - id: value
      type: System.Windows.Int32Rect
      description: "要比較目前的矩形的矩形。"
    return:
      type: System.Boolean
      description: '**true**如果兩個矩形具有相同<> *>， <> </> *>， <> </> *>，和<> *> 為這個矩形中; 否則**false**。'
  overload: System.Windows.Int32Rect.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Int32Rect.Equals(System.Windows.Int32Rect,System.Windows.Int32Rect)
  id: Equals(System.Windows.Int32Rect,System.Windows.Int32Rect)
  parent: System.Windows.Int32Rect
  langs:
  - csharp
  name: Equals(Int32Rect,Int32Rect)
  nameWithType: Int32Rect.Equals(Int32Rect,Int32Rect)
  fullName: System.Windows.Int32Rect.Equals(Int32Rect,Int32Rect)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "判斷指定的矩形是否相等。"
  remarks: "這項作業會測試物件相等。"
  syntax:
    content: public static bool Equals (System.Windows.Int32Rect int32Rect1, System.Windows.Int32Rect int32Rect2);
    parameters:
    - id: int32Rect1
      type: System.Windows.Int32Rect
      description: "要比較的第一個矩形。"
    - id: int32Rect2
      type: System.Windows.Int32Rect
      description: "要比較的第二個矩形。"
    return:
      type: System.Boolean
      description: '**true** if *int32Rect1* and *int32Rect2* have the same <>*>, <>*>, <>*>, and <>*>; otherwise, **false**.'
  overload: System.Windows.Int32Rect.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Int32Rect.GetHashCode
  id: GetHashCode
  parent: System.Windows.Int32Rect
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: Int32Rect.GetHashCode()
  fullName: System.Windows.Int32Rect.GetHashCode()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "建立雜湊程式碼從這個矩形<> *>， <> </> *>， <> </> *>，以及<> *> 值。"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "這個矩形的雜湊碼。"
  overload: System.Windows.Int32Rect.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Int32Rect.HasArea
  id: HasArea
  parent: System.Windows.Int32Rect
  langs:
  - csharp
  name: HasArea
  nameWithType: Int32Rect.HasArea
  fullName: System.Windows.Int32Rect.HasArea
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "取得值，指出是否<> *> 和<> *> 的內容<xref href=&quot;System.Windows.Int32Rect&quot;></xref>大於 0。"
  syntax:
    content: public bool HasArea { get; }
    return:
      type: System.Boolean
      description: "true，否則<> *> 和<> *> 的內容<xref href=&quot;System.Windows.Int32Rect&quot;></xref>大於 0，否則<code> false </code>。"
  overload: System.Windows.Int32Rect.HasArea*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Int32Rect.Height
  id: Height
  parent: System.Windows.Int32Rect
  langs:
  - csharp
  name: Height
  nameWithType: Int32Rect.Height
  fullName: System.Windows.Int32Rect.Height
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "取得或設定矩形的高度。"
  syntax:
    content: public int Height { get; set; }
    return:
      type: System.Int32
      description: "矩形的高度。 預設值為 `0`。"
  overload: System.Windows.Int32Rect.Height*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Int32Rect.IsEmpty
  id: IsEmpty
  parent: System.Windows.Int32Rect
  langs:
  - csharp
  name: IsEmpty
  nameWithType: Int32Rect.IsEmpty
  fullName: System.Windows.Int32Rect.IsEmpty
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "取得值，指出矩形是否為空白。"
  syntax:
    content: public bool IsEmpty { get; }
    return:
      type: System.Boolean
      description: '**true**矩形是空的否則如果**false**。 預設值是**true**。'
  overload: System.Windows.Int32Rect.IsEmpty*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Int32Rect.op_Equality(System.Windows.Int32Rect,System.Windows.Int32Rect)
  id: op_Equality(System.Windows.Int32Rect,System.Windows.Int32Rect)
  parent: System.Windows.Int32Rect
  langs:
  - csharp
  name: op_Equality(Int32Rect,Int32Rect)
  nameWithType: Int32Rect.op_Equality(Int32Rect,Int32Rect)
  fullName: System.Windows.Int32Rect.op_Equality(Int32Rect,Int32Rect)
  type: Operator
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "比較兩個矩形完全相等。"
  syntax:
    content: public static bool op_Equality (System.Windows.Int32Rect int32Rect1, System.Windows.Int32Rect int32Rect2);
    parameters:
    - id: int32Rect1
      type: System.Windows.Int32Rect
      description: "要比較的第一個矩形。"
    - id: int32Rect2
      type: System.Windows.Int32Rect
      description: "要比較的第二個矩形。"
    return:
      type: System.Boolean
      description: '**true** if *int32Rect1* and *int32Rect2* have the same <>*>, <>*>, <>*>, and <>*>; otherwise, **false**.'
  overload: System.Windows.Int32Rect.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Int32Rect.op_Inequality(System.Windows.Int32Rect,System.Windows.Int32Rect)
  id: op_Inequality(System.Windows.Int32Rect,System.Windows.Int32Rect)
  parent: System.Windows.Int32Rect
  langs:
  - csharp
  name: op_Inequality(Int32Rect,Int32Rect)
  nameWithType: Int32Rect.op_Inequality(Int32Rect,Int32Rect)
  fullName: System.Windows.Int32Rect.op_Inequality(Int32Rect,Int32Rect)
  type: Operator
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "比較兩個矩形不相等。"
  syntax:
    content: public static bool op_Inequality (System.Windows.Int32Rect int32Rect1, System.Windows.Int32Rect int32Rect2);
    parameters:
    - id: int32Rect1
      type: System.Windows.Int32Rect
      description: "要比較的第一個矩形。"
    - id: int32Rect2
      type: System.Windows.Int32Rect
      description: "要比較的第二個矩形。"
    return:
      type: System.Boolean
      description: '**false**如果*int32Rect1*和*int32Rect2*具有相同<> *>， <> </> *>， <> </> *>，以及<> *>; 否則如果所有的這些值都相同，然後**true**。'
  overload: System.Windows.Int32Rect.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Int32Rect.Parse(System.String)
  id: Parse(System.String)
  parent: System.Windows.Int32Rect
  langs:
  - csharp
  name: Parse(String)
  nameWithType: Int32Rect.Parse(String)
  fullName: System.Windows.Int32Rect.Parse(String)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "建立<xref href=&quot;System.Windows.Int32Rect&quot;></xref>從指定的結構<xref:System.String>表示法。</xref:System.String>"
  syntax:
    content: public static System.Windows.Int32Rect Parse (string source);
    parameters:
    - id: source
      type: System.String
      description: "字串表示法<xref href=&quot;System.Windows.Int32Rect&quot;> </xref>。"
    return:
      type: System.Windows.Int32Rect
      description: "對等項目<xref href=&quot;System.Windows.Int32Rect&quot;></xref>結構。"
  overload: System.Windows.Int32Rect.Parse*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Int32Rect.System#IFormattable#ToString(System.String,System.IFormatProvider)
  id: System#IFormattable#ToString(System.String,System.IFormatProvider)
  isEii: true
  parent: System.Windows.Int32Rect
  langs:
  - csharp
  name: System.IFormattable.ToString(String,IFormatProvider)
  nameWithType: Int32Rect.System.IFormattable.ToString(String,IFormatProvider)
  fullName: System.Windows.Int32Rect.System.IFormattable.ToString(String,IFormatProvider)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "目前的執行個體使用指定的格式將值格式化。"
  remarks: "這個成員是明確介面成員實作。 它可用時，才<xref:System.Windows.Int32Rect>執行個體轉換成<xref:System.IFormattable>介面。</xref:System.IFormattable> </xref:System.Windows.Int32Rect>"
  syntax:
    content: string IFormattable.ToString (string format, IFormatProvider provider);
    parameters:
    - id: format
      type: System.String
      description: "要使用的格式。"
    - id: provider
      type: System.IFormatProvider
      description: "要用來格式化值提供者"
    return:
      type: System.String
      description: "目前的執行個體中指定的格式的值。"
  overload: System.Windows.Int32Rect.System#IFormattable#ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Int32Rect.ToString
  id: ToString
  parent: System.Windows.Int32Rect
  langs:
  - csharp
  name: ToString()
  nameWithType: Int32Rect.ToString()
  fullName: System.Windows.Int32Rect.ToString()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "建立這個字串表示法<xref href=&quot;System.Windows.Int32Rect&quot;> </xref>。"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "字串，包含相同<> *>， <> </> *>， <> </> *>，以及<> *> 值，這個<xref href=&quot;System.Windows.Int32Rect&quot;></xref>結構。"
  overload: System.Windows.Int32Rect.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Int32Rect.ToString(System.IFormatProvider)
  id: ToString(System.IFormatProvider)
  parent: System.Windows.Int32Rect
  langs:
  - csharp
  name: ToString(IFormatProvider)
  nameWithType: Int32Rect.ToString(IFormatProvider)
  fullName: System.Windows.Int32Rect.ToString(IFormatProvider)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "建立這個字串表示法<xref href=&quot;System.Windows.Int32Rect&quot;></xref>根據提供的<xref:System.IFormatProvider>.</xref:System.IFormatProvider>"
  syntax:
    content: public string ToString (IFormatProvider provider);
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: "若要使用的格式提供者。 如果提供者<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>，會使用目前文化特性。"
    return:
      type: System.String
      description: "這個執行個體的字串表示<xref href=&quot;System.Windows.Int32Rect&quot;> </xref>。"
  overload: System.Windows.Int32Rect.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Int32Rect.Width
  id: Width
  parent: System.Windows.Int32Rect
  langs:
  - csharp
  name: Width
  nameWithType: Int32Rect.Width
  fullName: System.Windows.Int32Rect.Width
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "取得或設定矩形的寬度。"
  syntax:
    content: public int Width { get; set; }
    return:
      type: System.Int32
      description: "矩形的寬度。 預設值為 `0`。"
  overload: System.Windows.Int32Rect.Width*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Int32Rect.X
  id: X
  parent: System.Windows.Int32Rect
  langs:
  - csharp
  name: X
  nameWithType: Int32Rect.X
  fullName: System.Windows.Int32Rect.X
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "取得或設定矩形左上角的 x 座標。"
  syntax:
    content: public int X { get; set; }
    return:
      type: System.Int32
      description: "矩形左上角 x 座標。 預設值為 `0`。"
  overload: System.Windows.Int32Rect.X*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Int32Rect.Y
  id: Y
  parent: System.Windows.Int32Rect
  langs:
  - csharp
  name: Y
  nameWithType: Int32Rect.Y
  fullName: System.Windows.Int32Rect.Y
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "取得或設定矩形左上角的 y 座標。"
  syntax:
    content: public int Y { get; set; }
    return:
      type: System.Int32
      description: "矩形左上角 y 座標。 預設值為 `0`。"
  overload: System.Windows.Int32Rect.Y*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.Windows.Int32Rect.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Windows.Int32Rect
  isExternal: false
  name: Int32Rect(Int32,Int32,Int32,Int32)
  nameWithType: Int32Rect.Int32Rect(Int32,Int32,Int32,Int32)
  fullName: System.Windows.Int32Rect.Int32Rect(Int32,Int32,Int32,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Int32Rect.Empty
  parent: System.Windows.Int32Rect
  isExternal: false
  name: Empty
  nameWithType: Int32Rect.Empty
  fullName: System.Windows.Int32Rect.Empty
- uid: System.Windows.Int32Rect
  parent: System.Windows
  isExternal: false
  name: Int32Rect
  nameWithType: Int32Rect
  fullName: System.Windows.Int32Rect
- uid: System.Windows.Int32Rect.Equals(System.Object)
  parent: System.Windows.Int32Rect
  isExternal: false
  name: Equals(Object)
  nameWithType: Int32Rect.Equals(Object)
  fullName: System.Windows.Int32Rect.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Int32Rect.Equals(System.Windows.Int32Rect)
  parent: System.Windows.Int32Rect
  isExternal: false
  name: Equals(Int32Rect)
  nameWithType: Int32Rect.Equals(Int32Rect)
  fullName: System.Windows.Int32Rect.Equals(Int32Rect)
- uid: System.Windows.Int32Rect.Equals(System.Windows.Int32Rect,System.Windows.Int32Rect)
  parent: System.Windows.Int32Rect
  isExternal: false
  name: Equals(Int32Rect,Int32Rect)
  nameWithType: Int32Rect.Equals(Int32Rect,Int32Rect)
  fullName: System.Windows.Int32Rect.Equals(Int32Rect,Int32Rect)
- uid: System.Windows.Int32Rect.GetHashCode
  parent: System.Windows.Int32Rect
  isExternal: false
  name: GetHashCode()
  nameWithType: Int32Rect.GetHashCode()
  fullName: System.Windows.Int32Rect.GetHashCode()
- uid: System.Windows.Int32Rect.HasArea
  parent: System.Windows.Int32Rect
  isExternal: false
  name: HasArea
  nameWithType: Int32Rect.HasArea
  fullName: System.Windows.Int32Rect.HasArea
- uid: System.Windows.Int32Rect.Height
  parent: System.Windows.Int32Rect
  isExternal: false
  name: Height
  nameWithType: Int32Rect.Height
  fullName: System.Windows.Int32Rect.Height
- uid: System.Windows.Int32Rect.IsEmpty
  parent: System.Windows.Int32Rect
  isExternal: false
  name: IsEmpty
  nameWithType: Int32Rect.IsEmpty
  fullName: System.Windows.Int32Rect.IsEmpty
- uid: System.Windows.Int32Rect.op_Equality(System.Windows.Int32Rect,System.Windows.Int32Rect)
  parent: System.Windows.Int32Rect
  isExternal: false
  name: op_Equality(Int32Rect,Int32Rect)
  nameWithType: Int32Rect.op_Equality(Int32Rect,Int32Rect)
  fullName: System.Windows.Int32Rect.op_Equality(Int32Rect,Int32Rect)
- uid: System.Windows.Int32Rect.op_Inequality(System.Windows.Int32Rect,System.Windows.Int32Rect)
  parent: System.Windows.Int32Rect
  isExternal: false
  name: op_Inequality(Int32Rect,Int32Rect)
  nameWithType: Int32Rect.op_Inequality(Int32Rect,Int32Rect)
  fullName: System.Windows.Int32Rect.op_Inequality(Int32Rect,Int32Rect)
- uid: System.Windows.Int32Rect.Parse(System.String)
  parent: System.Windows.Int32Rect
  isExternal: false
  name: Parse(String)
  nameWithType: Int32Rect.Parse(String)
  fullName: System.Windows.Int32Rect.Parse(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Int32Rect.System#IFormattable#ToString(System.String,System.IFormatProvider)
  parent: System.Windows.Int32Rect
  isExternal: false
  name: System.IFormattable.ToString(String,IFormatProvider)
  nameWithType: Int32Rect.System.IFormattable.ToString(String,IFormatProvider)
  fullName: System.Windows.Int32Rect.System.IFormattable.ToString(String,IFormatProvider)
- uid: System.IFormatProvider
  parent: System
  isExternal: true
  name: IFormatProvider
  nameWithType: IFormatProvider
  fullName: System.IFormatProvider
- uid: System.Windows.Int32Rect.ToString
  parent: System.Windows.Int32Rect
  isExternal: false
  name: ToString()
  nameWithType: Int32Rect.ToString()
  fullName: System.Windows.Int32Rect.ToString()
- uid: System.Windows.Int32Rect.ToString(System.IFormatProvider)
  parent: System.Windows.Int32Rect
  isExternal: false
  name: ToString(IFormatProvider)
  nameWithType: Int32Rect.ToString(IFormatProvider)
  fullName: System.Windows.Int32Rect.ToString(IFormatProvider)
- uid: System.Windows.Int32Rect.Width
  parent: System.Windows.Int32Rect
  isExternal: false
  name: Width
  nameWithType: Int32Rect.Width
  fullName: System.Windows.Int32Rect.Width
- uid: System.Windows.Int32Rect.X
  parent: System.Windows.Int32Rect
  isExternal: false
  name: X
  nameWithType: Int32Rect.X
  fullName: System.Windows.Int32Rect.X
- uid: System.Windows.Int32Rect.Y
  parent: System.Windows.Int32Rect
  isExternal: false
  name: Y
  nameWithType: Int32Rect.Y
  fullName: System.Windows.Int32Rect.Y
- uid: System.Windows.Int32Rect.#ctor*
  parent: System.Windows.Int32Rect
  isExternal: false
  name: Int32Rect
  nameWithType: Int32Rect.Int32Rect
- uid: System.Windows.Int32Rect.Empty*
  parent: System.Windows.Int32Rect
  isExternal: false
  name: Empty
  nameWithType: Int32Rect.Empty
- uid: System.Windows.Int32Rect.Equals*
  parent: System.Windows.Int32Rect
  isExternal: false
  name: Equals
  nameWithType: Int32Rect.Equals
- uid: System.Windows.Int32Rect.GetHashCode*
  parent: System.Windows.Int32Rect
  isExternal: false
  name: GetHashCode
  nameWithType: Int32Rect.GetHashCode
- uid: System.Windows.Int32Rect.HasArea*
  parent: System.Windows.Int32Rect
  isExternal: false
  name: HasArea
  nameWithType: Int32Rect.HasArea
- uid: System.Windows.Int32Rect.Height*
  parent: System.Windows.Int32Rect
  isExternal: false
  name: Height
  nameWithType: Int32Rect.Height
- uid: System.Windows.Int32Rect.IsEmpty*
  parent: System.Windows.Int32Rect
  isExternal: false
  name: IsEmpty
  nameWithType: Int32Rect.IsEmpty
- uid: System.Windows.Int32Rect.op_Equality*
  parent: System.Windows.Int32Rect
  isExternal: false
  name: op_Equality
  nameWithType: Int32Rect.op_Equality
- uid: System.Windows.Int32Rect.op_Inequality*
  parent: System.Windows.Int32Rect
  isExternal: false
  name: op_Inequality
  nameWithType: Int32Rect.op_Inequality
- uid: System.Windows.Int32Rect.Parse*
  parent: System.Windows.Int32Rect
  isExternal: false
  name: Parse
  nameWithType: Int32Rect.Parse
- uid: System.Windows.Int32Rect.System#IFormattable#ToString*
  parent: System.Windows.Int32Rect
  isExternal: false
  name: System.IFormattable.ToString
  nameWithType: Int32Rect.System.IFormattable.ToString
- uid: System.Windows.Int32Rect.ToString*
  parent: System.Windows.Int32Rect
  isExternal: false
  name: ToString
  nameWithType: Int32Rect.ToString
- uid: System.Windows.Int32Rect.Width*
  parent: System.Windows.Int32Rect
  isExternal: false
  name: Width
  nameWithType: Int32Rect.Width
- uid: System.Windows.Int32Rect.X*
  parent: System.Windows.Int32Rect
  isExternal: false
  name: X
  nameWithType: Int32Rect.X
- uid: System.Windows.Int32Rect.Y*
  parent: System.Windows.Int32Rect
  isExternal: false
  name: Y
  nameWithType: Int32Rect.Y
