### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.LinqDataSourceContextEventArgs
  id: LinqDataSourceContextEventArgs
  children:
  - System.Web.UI.WebControls.LinqDataSourceContextEventArgs.#ctor
  - System.Web.UI.WebControls.LinqDataSourceContextEventArgs.#ctor(System.Web.UI.DataSourceOperation)
  - System.Web.UI.WebControls.LinqDataSourceContextEventArgs.ObjectInstance
  - System.Web.UI.WebControls.LinqDataSourceContextEventArgs.Operation
  langs:
  - csharp
  name: LinqDataSourceContextEventArgs
  nameWithType: LinqDataSourceContextEventArgs
  fullName: System.Web.UI.WebControls.LinqDataSourceContextEventArgs
  type: Class
  summary: "提供資料給<xref href=&quot;System.Web.UI.WebControls.LinqDataSource.ContextCreating&quot;></xref>事件。"
  remarks: "根據預設，<xref:System.Web.UI.WebControls.LinqDataSource>控制項建立執行個體中指定的型別<xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A>屬性。</xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> </xref:System.Web.UI.WebControls.LinqDataSource> <xref:System.Web.UI.WebControls.LinqDataSource>控制項會呼叫來建立物件的執行個體的資料內容物件的預設建構函式。</xref:System.Web.UI.WebControls.LinqDataSource>       您可以手動建立的資料內容物件處理<xref:System.Web.UI.WebControls.LinqDataSource.ContextCreating>事件。</xref:System.Web.UI.WebControls.LinqDataSource.ContextCreating> 如果您想要使用非預設的建構函式，您可以這麼做。       您也可以處理<xref:System.Web.UI.WebControls.LinqDataSource.ContextCreating>事件，如果您想要建立與所指定的不同資料內容物件<xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A>屬性。</xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> </xref:System.Web.UI.WebControls.LinqDataSource.ContextCreating> 在此情況下，您將設定<xref:System.Web.UI.WebControls.LinqDataSourceContextEventArgs.ObjectInstance%2A>您所建立之物件的屬性。</xref:System.Web.UI.WebControls.LinqDataSourceContextEventArgs.ObjectInstance%2A> <xref:System.Web.UI.WebControls.LinqDataSource>控制項將會使用您建立的物件中選取的資料。</xref:System.Web.UI.WebControls.LinqDataSource> 當您更新、 插入或刪除資料時，您必須設定<xref:System.Web.UI.WebControls.LinqDataSourceContextEventArgs.ObjectInstance%2A>屬性，以衍生自<xref:System.Data.Linq.DataContext>類別</xref:System.Data.Linq.DataContext>的物件</xref:System.Web.UI.WebControls.LinqDataSourceContextEventArgs.ObjectInstance%2A>"
  example:
  - "The following example shows how to create the data context object by calling a non-default constructor in an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreating> event. The code assigns the custom object to the <xref:System.Web.UI.WebControls.LinqDataSourceContextEventArgs.ObjectInstance%2A> property.  \n  \n [!code-cs[System.Web.UI.WebControls.LinqDataSource.ContextCreating#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_133_1.cs)]\n [!code-vb[System.Web.UI.WebControls.LinqDataSource.ContextCreating#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_133_1.vb)]"
  syntax:
    content: 'public class LinqDataSourceContextEventArgs : EventArgs'
  inheritance:
  - System.EventArgs
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceContextEventArgs.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.LinqDataSourceContextEventArgs
  langs:
  - csharp
  name: LinqDataSourceContextEventArgs()
  nameWithType: LinqDataSourceContextEventArgs.LinqDataSourceContextEventArgs()
  fullName: System.Web.UI.WebControls.LinqDataSourceContextEventArgs.LinqDataSourceContextEventArgs()
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "初始化的新執行個體<xref href=&quot;System.Web.UI.WebControls.LinqDataSourceContextEventArgs&quot;></xref>類別。"
  syntax:
    content: public LinqDataSourceContextEventArgs ();
    parameters: []
  overload: System.Web.UI.WebControls.LinqDataSourceContextEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceContextEventArgs.#ctor(System.Web.UI.DataSourceOperation)
  id: '#ctor(System.Web.UI.DataSourceOperation)'
  parent: System.Web.UI.WebControls.LinqDataSourceContextEventArgs
  langs:
  - csharp
  name: LinqDataSourceContextEventArgs(DataSourceOperation)
  nameWithType: LinqDataSourceContextEventArgs.LinqDataSourceContextEventArgs(DataSourceOperation)
  fullName: System.Web.UI.WebControls.LinqDataSourceContextEventArgs.LinqDataSourceContextEventArgs(DataSourceOperation)
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "初始化的新執行個體<xref href=&quot;System.Web.UI.WebControls.LinqDataSourceContextEventArgs&quot;></xref>類別指定的資料作業。"
  syntax:
    content: public LinqDataSourceContextEventArgs (System.Web.UI.DataSourceOperation operation);
    parameters:
    - id: operation
      type: System.Web.UI.DataSourceOperation
      description: "正在執行資料作業。"
  overload: System.Web.UI.WebControls.LinqDataSourceContextEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceContextEventArgs.ObjectInstance
  id: ObjectInstance
  parent: System.Web.UI.WebControls.LinqDataSourceContextEventArgs
  langs:
  - csharp
  name: ObjectInstance
  nameWithType: LinqDataSourceContextEventArgs.ObjectInstance
  fullName: System.Web.UI.WebControls.LinqDataSourceContextEventArgs.ObjectInstance
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "取得或設定要建立的資料內容物件。"
  remarks: "根據預設，<xref:System.Web.UI.WebControls.LinqDataSource>控制項建立執行個體中指定的類別<xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A>屬性。</xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> </xref:System.Web.UI.WebControls.LinqDataSource> 它會呼叫該類別的預設建構函式。       您可以手動建立的資料作業的物件處理<xref:System.Web.UI.WebControls.LinqDataSource.ContextCreating>事件並 ObjectInstance 屬性設定為您建立的物件。</xref:System.Web.UI.WebControls.LinqDataSource.ContextCreating>       您手動建立物件，如果您想要使用非預設建構函式，或如果您想要建立不同的物件中指定一個<xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A>屬性。</xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A>       ObjectInstance 屬性不包含在指定之類型的執行個體<xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A>屬性，因為該執行個體之後，會建立<xref:System.Web.UI.WebControls.LinqDataSource.ContextCreating>事件。</xref:System.Web.UI.WebControls.LinqDataSource.ContextCreating> </xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> 只有在您手動建立期間的資料內容物件時，才使用 ObjectInstance 屬性<xref:System.Web.UI.WebControls.LinqDataSource.ContextCreating>事件。</xref:System.Web.UI.WebControls.LinqDataSource.ContextCreating> 當您更新、 插入或刪除資料時，您必須設定 ObjectInstance 屬性的物件，衍生自<xref:System.Data.Linq.DataContext>類別。</xref:System.Data.Linq.DataContext>"
  example:
  - "The following example shows how to create the data context object by calling a non-default constructor in an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreating> event. The code assigns the custom object to the ObjectInstance property.  \n  \n [!code-cs[System.Web.UI.WebControls.LinqDataSource.ContextCreating#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_590_1.cs)]\n [!code-vb[System.Web.UI.WebControls.LinqDataSource.ContextCreating#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_590_1.vb)]"
  syntax:
    content: public object ObjectInstance { get; set; }
    return:
      type: System.Object
      description: "您已設定為 ObjectInstance 屬性; 資料內容物件否則， <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.LinqDataSourceContextEventArgs.ObjectInstance*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceContextEventArgs.Operation
  id: Operation
  parent: System.Web.UI.WebControls.LinqDataSourceContextEventArgs
  langs:
  - csharp
  name: Operation
  nameWithType: LinqDataSourceContextEventArgs.Operation
  fullName: System.Web.UI.WebControls.LinqDataSourceContextEventArgs.Operation
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "取得正在執行的資料作業。"
  syntax:
    content: public System.Web.UI.DataSourceOperation Operation { get; }
    return:
      type: System.Web.UI.DataSourceOperation
      description: "值，表示正在執行的資料作業的類型。"
  overload: System.Web.UI.WebControls.LinqDataSourceContextEventArgs.Operation*
  exceptions: []
  platform:
  - net462
references:
- uid: System.EventArgs
  isExternal: false
  name: System.EventArgs
- uid: System.Web.UI.WebControls.LinqDataSourceContextEventArgs.#ctor
  parent: System.Web.UI.WebControls.LinqDataSourceContextEventArgs
  isExternal: false
  name: LinqDataSourceContextEventArgs()
  nameWithType: LinqDataSourceContextEventArgs.LinqDataSourceContextEventArgs()
  fullName: System.Web.UI.WebControls.LinqDataSourceContextEventArgs.LinqDataSourceContextEventArgs()
- uid: System.Web.UI.WebControls.LinqDataSourceContextEventArgs.#ctor(System.Web.UI.DataSourceOperation)
  parent: System.Web.UI.WebControls.LinqDataSourceContextEventArgs
  isExternal: false
  name: LinqDataSourceContextEventArgs(DataSourceOperation)
  nameWithType: LinqDataSourceContextEventArgs.LinqDataSourceContextEventArgs(DataSourceOperation)
  fullName: System.Web.UI.WebControls.LinqDataSourceContextEventArgs.LinqDataSourceContextEventArgs(DataSourceOperation)
- uid: System.Web.UI.DataSourceOperation
  parent: System.Web.UI
  isExternal: false
  name: DataSourceOperation
  nameWithType: DataSourceOperation
  fullName: System.Web.UI.DataSourceOperation
- uid: System.Web.UI.WebControls.LinqDataSourceContextEventArgs.ObjectInstance
  parent: System.Web.UI.WebControls.LinqDataSourceContextEventArgs
  isExternal: false
  name: ObjectInstance
  nameWithType: LinqDataSourceContextEventArgs.ObjectInstance
  fullName: System.Web.UI.WebControls.LinqDataSourceContextEventArgs.ObjectInstance
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.LinqDataSourceContextEventArgs.Operation
  parent: System.Web.UI.WebControls.LinqDataSourceContextEventArgs
  isExternal: false
  name: Operation
  nameWithType: LinqDataSourceContextEventArgs.Operation
  fullName: System.Web.UI.WebControls.LinqDataSourceContextEventArgs.Operation
- uid: System.Web.UI.WebControls.LinqDataSourceContextEventArgs.#ctor*
  parent: System.Web.UI.WebControls.LinqDataSourceContextEventArgs
  isExternal: false
  name: LinqDataSourceContextEventArgs
  nameWithType: LinqDataSourceContextEventArgs.LinqDataSourceContextEventArgs
- uid: System.Web.UI.WebControls.LinqDataSourceContextEventArgs.ObjectInstance*
  parent: System.Web.UI.WebControls.LinqDataSourceContextEventArgs
  isExternal: false
  name: ObjectInstance
  nameWithType: LinqDataSourceContextEventArgs.ObjectInstance
- uid: System.Web.UI.WebControls.LinqDataSourceContextEventArgs.Operation*
  parent: System.Web.UI.WebControls.LinqDataSourceContextEventArgs
  isExternal: false
  name: Operation
  nameWithType: LinqDataSourceContextEventArgs.Operation
