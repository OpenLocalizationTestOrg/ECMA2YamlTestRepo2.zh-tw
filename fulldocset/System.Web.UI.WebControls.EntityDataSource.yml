### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.EntityDataSource
  id: EntityDataSource
  children:
  - System.Web.UI.WebControls.EntityDataSource.#ctor
  - System.Web.UI.WebControls.EntityDataSource.#ctor(System.Data.EntityClient.EntityConnection)
  - System.Web.UI.WebControls.EntityDataSource.AutoGenerateOrderByClause
  - System.Web.UI.WebControls.EntityDataSource.AutoGenerateWhereClause
  - System.Web.UI.WebControls.EntityDataSource.AutoPage
  - System.Web.UI.WebControls.EntityDataSource.AutoSort
  - System.Web.UI.WebControls.EntityDataSource.CommandParameters
  - System.Web.UI.WebControls.EntityDataSource.CommandText
  - System.Web.UI.WebControls.EntityDataSource.ConnectionString
  - System.Web.UI.WebControls.EntityDataSource.ContextCreated
  - System.Web.UI.WebControls.EntityDataSource.ContextCreating
  - System.Web.UI.WebControls.EntityDataSource.ContextDisposing
  - System.Web.UI.WebControls.EntityDataSource.ContextType
  - System.Web.UI.WebControls.EntityDataSource.ContextTypeName
  - System.Web.UI.WebControls.EntityDataSource.CreateView
  - System.Web.UI.WebControls.EntityDataSource.DefaultContainerName
  - System.Web.UI.WebControls.EntityDataSource.Deleted
  - System.Web.UI.WebControls.EntityDataSource.DeleteParameters
  - System.Web.UI.WebControls.EntityDataSource.Deleting
  - System.Web.UI.WebControls.EntityDataSource.EnableDelete
  - System.Web.UI.WebControls.EntityDataSource.EnableFlattening
  - System.Web.UI.WebControls.EntityDataSource.EnableInsert
  - System.Web.UI.WebControls.EntityDataSource.EnableUpdate
  - System.Web.UI.WebControls.EntityDataSource.EntitySetName
  - System.Web.UI.WebControls.EntityDataSource.EntityTypeFilter
  - System.Web.UI.WebControls.EntityDataSource.GetView(System.String)
  - System.Web.UI.WebControls.EntityDataSource.GetViewNames
  - System.Web.UI.WebControls.EntityDataSource.GroupBy
  - System.Web.UI.WebControls.EntityDataSource.Include
  - System.Web.UI.WebControls.EntityDataSource.Inserted
  - System.Web.UI.WebControls.EntityDataSource.Inserting
  - System.Web.UI.WebControls.EntityDataSource.InsertParameters
  - System.Web.UI.WebControls.EntityDataSource.LoadControlState(System.Object)
  - System.Web.UI.WebControls.EntityDataSource.OnInit(System.EventArgs)
  - System.Web.UI.WebControls.EntityDataSource.OnUnload(System.EventArgs)
  - System.Web.UI.WebControls.EntityDataSource.OrderBy
  - System.Web.UI.WebControls.EntityDataSource.OrderByParameters
  - System.Web.UI.WebControls.EntityDataSource.QueryCreated
  - System.Web.UI.WebControls.EntityDataSource.SaveControlState
  - System.Web.UI.WebControls.EntityDataSource.Select
  - System.Web.UI.WebControls.EntityDataSource.Selected
  - System.Web.UI.WebControls.EntityDataSource.Selecting
  - System.Web.UI.WebControls.EntityDataSource.SelectParameters
  - System.Web.UI.WebControls.EntityDataSource.StoreOriginalValuesInViewState
  - System.Web.UI.WebControls.EntityDataSource.System#Web#UI#WebControls#IQueryableDataSource#RaiseViewChanged
  - System.Web.UI.WebControls.EntityDataSource.TrackViewState
  - System.Web.UI.WebControls.EntityDataSource.Updated
  - System.Web.UI.WebControls.EntityDataSource.UpdateParameters
  - System.Web.UI.WebControls.EntityDataSource.Updating
  - System.Web.UI.WebControls.EntityDataSource.Where
  - System.Web.UI.WebControls.EntityDataSource.WhereParameters
  langs:
  - csharp
  name: EntityDataSource
  nameWithType: EntityDataSource
  fullName: System.Web.UI.WebControls.EntityDataSource
  type: Class
  summary: "表示實體資料模型 (EDM) 至 ASP.NET 應用程式中的資料繫結控制項。"
  remarks: "本主題內容:-[簡介](#introduction)      -   [宣告式語法](#declarative_syntax)<a name=&quot;introduction&quot;> </a> # # 介紹您可以使用 EntityDataSource 控制項以及在資料繫結控制項擷取 EDM 中的資料和顯示，請編輯，以及使用幾乎任何的程式碼來排序在網頁上的資料。       如需詳細資訊，請參閱[EntityDataSource Web 伺服器控制項概觀](~/add/includes/ajax-current-ext-md.md)。      <a name=&quot;declarative_syntax&quot;></a># # 宣告式語法```   <asp:EntityDataSource       AutoGenerateOrderByClause=&quot;True|False&quot;       AutoGenerateWhereClause=&quot;True|False&quot;       AutoPage=&quot;True|False&quot;       AutoSort=&quot;True|False&quot;       CommandText=&quot;string&quot;       ConnectionString=&quot;string&quot;       ContextType=&quot;typed ObjectContext&quot;       ContextTypeName=&quot;string&quot;       DefaultContainerName=&quot;string&quot;       EnableDelete=&quot;True|False&quot;       EnableInsert=&quot;True|False&quot;       EnableUpdate=&quot;True|False&quot;       EnableViewState=&quot;True|False&quot;       EntitySetName=&quot;string&quot;       EntityTypeFilter=&quot;string&quot;       GroupBy=&quot;string&quot;       Include=&quot;string&quot;       OnContextCreated=&quot;ContextCreated event handler&quot;       OnContextCreating=&quot;ContextCreating event handler&quot;       OnContextDisposing=&quot;ContextDisposing event handler&quot;       OnDataBinding=&quot;DataBinding event handler&quot;       OnDeleted=&quot;Deleted event handler&quot;       OnDeleting=&quot;Deleting event handler&quot;       OnException=&quot;IDynamicDataSource.Exception event handler&quot;       OnInserted=&quot;Inserted event handler&quot;       OnInserting=&quot;Inserting event handler&quot;       OnSelected=&quot;Selected event handler&quot;       OnSelecting=&quot;Selecting event handler&quot;       OnUpdated=&quot;Updated event handler&quot;       OnUpdating=&quot;Updating event handler&quot;       OrderBy=&quot;string&quot;       runat=&quot;server&quot;       Select=&quot;string&quot;       StoreOriginalValuesInViewState=&quot;True|False&quot;       Where=&quot;string&quot;   >           <CommandParameters />           <DeleteParameters />           <GroupByParameters />           <InsertParameters />           <OrderByParameters />           <SelectParameters />           <UpdateParameters />           <WhereParameters />   </asp:EntityDataSource>   ```"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("Selecting")]

      [System.ComponentModel.DefaultProperty("EntitySetName")]

      [System.ComponentModel.Designer("System.Web.UI.Design.WebControls.EntityDataSourceDesigner, System.Web.Entity.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089")]

      [System.Drawing.ToolboxBitmap(typeof(System.Web.UI.WebControls.EntityDataSource), "EntityDataSource.ico")]

      [System.Web.UI.ParseChildren(true)]

      [System.Web.UI.PersistChildren(false)]

      public class EntityDataSource : System.Web.UI.DataSourceControl, System.Web.DynamicData.IDynamicDataSource, System.Web.UI.WebControls.IQueryableDataSource
  inheritance:
  - System.Object
  - System.Web.UI.Control
  - System.Web.UI.DataSourceControl
  implements:
  - System.Web.DynamicData.IDynamicDataSource
  - System.Web.UI.WebControls.IQueryableDataSource
  inheritedMembers:
  - System.Web.UI.Control.Adapter
  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  - System.Web.UI.Control.AddParsedSubObject(System.Object)
  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.BindingContainer
  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  - System.Web.UI.Control.ChildControlsCreated
  - System.Web.UI.Control.ClearCachedClientID
  - System.Web.UI.Control.ClearChildControlState
  - System.Web.UI.Control.ClearChildState
  - System.Web.UI.Control.ClearChildViewState
  - System.Web.UI.Control.ClearEffectiveClientIDMode
  - System.Web.UI.Control.ClientIDSeparator
  - System.Web.UI.Control.Context
  - System.Web.UI.Control.CreateChildControls
  - System.Web.UI.Control.DataBind
  - System.Web.UI.Control.DataBind(System.Boolean)
  - System.Web.UI.Control.DataBindChildren
  - System.Web.UI.Control.DataBinding
  - System.Web.UI.Control.DataItemContainer
  - System.Web.UI.Control.DataKeysContainer
  - System.Web.UI.Control.DesignMode
  - System.Web.UI.Control.Dispose
  - System.Web.UI.Control.Disposed
  - System.Web.UI.Control.EnableViewState
  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.EnsureChildControls
  - System.Web.UI.Control.EnsureID
  - System.Web.UI.Control.Events
  - System.Web.UI.Control.FindControl(System.String,System.Int32)
  - System.Web.UI.Control.GetDesignModeState
  - System.Web.UI.Control.GetRouteUrl(System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  - System.Web.UI.Control.HasChildViewState
  - System.Web.UI.Control.HasEvents
  - System.Web.UI.Control.ID
  - System.Web.UI.Control.IdSeparator
  - System.Web.UI.Control.Init
  - System.Web.UI.Control.IsChildControlStateCleared
  - System.Web.UI.Control.IsLiteralContent
  - System.Web.UI.Control.IsTrackingViewState
  - System.Web.UI.Control.IsViewStateEnabled
  - System.Web.UI.Control.Load
  - System.Web.UI.Control.LoadViewState(System.Object)
  - System.Web.UI.Control.LoadViewStateByID
  - System.Web.UI.Control.MapPathSecure(System.String)
  - System.Web.UI.Control.NamingContainer
  - System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.OnDataBinding(System.EventArgs)
  - System.Web.UI.Control.OnLoad(System.EventArgs)
  - System.Web.UI.Control.OnPreRender(System.EventArgs)
  - System.Web.UI.Control.OpenFile(System.String)
  - System.Web.UI.Control.Page
  - System.Web.UI.Control.Parent
  - System.Web.UI.Control.PreRender
  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)
  - System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  - System.Web.UI.Control.RenderingCompatibility
  - System.Web.UI.Control.ResolveAdapter
  - System.Web.UI.Control.ResolveClientUrl(System.String)
  - System.Web.UI.Control.ResolveUrl(System.String)
  - System.Web.UI.Control.SaveViewState
  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  - System.Web.UI.Control.Site
  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  - System.Web.UI.Control.TemplateControl
  - System.Web.UI.Control.TemplateSourceDirectory
  - System.Web.UI.Control.UniqueID
  - System.Web.UI.Control.Unload
  - System.Web.UI.Control.ValidateRequestMode
  - System.Web.UI.Control.ViewState
  - System.Web.UI.Control.ViewStateIgnoresCase
  - System.Web.UI.Control.ViewStateMode
  - System.Web.UI.DataSourceControl.ApplyStyleSheetSkin(System.Web.UI.Page)
  - System.Web.UI.DataSourceControl.ClientID
  - System.Web.UI.DataSourceControl.ClientIDMode
  - System.Web.UI.DataSourceControl.Controls
  - System.Web.UI.DataSourceControl.CreateControlCollection
  - System.Web.UI.DataSourceControl.EnableTheming
  - System.Web.UI.DataSourceControl.FindControl(System.String)
  - System.Web.UI.DataSourceControl.Focus
  - System.Web.UI.DataSourceControl.HasControls
  - System.Web.UI.DataSourceControl.RaiseDataSourceChangedEvent(System.EventArgs)
  - System.Web.UI.DataSourceControl.RenderControl(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.DataSourceControl.SkinID
  - System.Web.UI.DataSourceControl.System#ComponentModel#IListSource#ContainsListCollection
  - System.Web.UI.DataSourceControl.System#ComponentModel#IListSource#GetList
  - System.Web.UI.DataSourceControl.System#Web#UI#IDataSource#GetView(System.String)
  - System.Web.UI.DataSourceControl.System#Web#UI#IDataSource#GetViewNames
  - System.Web.UI.DataSourceControl.Visible
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: EntityDataSource()
  nameWithType: EntityDataSource.EntityDataSource()
  fullName: System.Web.UI.WebControls.EntityDataSource.EntityDataSource()
  type: Constructor
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "初始化的新執行個體<xref href=&quot;System.Web.UI.WebControls.EntityDataSource&quot;></xref>類別。"
  syntax:
    content: public EntityDataSource ();
    parameters: []
  overload: System.Web.UI.WebControls.EntityDataSource.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.#ctor(System.Data.EntityClient.EntityConnection)
  id: '#ctor(System.Data.EntityClient.EntityConnection)'
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: EntityDataSource(EntityConnection)
  nameWithType: EntityDataSource.EntityDataSource(EntityConnection)
  fullName: System.Web.UI.WebControls.EntityDataSource.EntityDataSource(EntityConnection)
  type: Constructor
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "初始化的新執行個體<xref href=&quot;System.Web.UI.WebControls.EntityDataSource&quot;></xref>類別所提供的連接。"
  syntax:
    content: public EntityDataSource (System.Data.EntityClient.EntityConnection connection);
    parameters:
    - id: connection
      type: System.Data.EntityClient.EntityConnection
      description: "<xref href=&quot;System.Data.EntityClient.EntityConnection&quot;> </xref>至實體資料模型 (EDM)。"
  overload: System.Web.UI.WebControls.EntityDataSource.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.AutoGenerateOrderByClause
  id: AutoGenerateOrderByClause
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: AutoGenerateOrderByClause
  nameWithType: EntityDataSource.AutoGenerateOrderByClause
  fullName: System.Web.UI.WebControls.EntityDataSource.AutoGenerateOrderByClause
  type: Property
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "取得或設定值，指出是否<xref href=&quot;System.Web.UI.WebControls.EntityDataSource&quot;></xref>控制項會以動態方式建立 ORDER BY 子句中的值為基礎<xref:System.Web.UI.WebControls.EntityDataSource.OrderByParameters*>集合。</xref:System.Web.UI.WebControls.EntityDataSource.OrderByParameters*>"
  remarks: "當 AutoGenerateOrderByClause 屬性<xref:System.Web.UI.WebControls.EntityDataSource>控制設為  `true`，控制項自動產生 ORDER BY 子句中的參數從<xref:System.Web.UI.WebControls.ParameterCollection>指派給<xref:System.Web.UI.WebControls.EntityDataSource.OrderByParameters%2A>屬性。</xref:System.Web.UI.WebControls.EntityDataSource.OrderByParameters%2A> </xref:System.Web.UI.WebControls.ParameterCollection> </xref:System.Web.UI.WebControls.EntityDataSource> 這就不需要明確地指派至 ORDER BY 子句<xref:System.Web.UI.WebControls.EntityDataSource.OrderBy%2A>屬性。</xref:System.Web.UI.WebControls.EntityDataSource.OrderBy%2A>       如果您將 AutoGenerateOrderByClause 屬性設定為`true`，您不應明確指派值給<xref:System.Web.UI.WebControls.EntityDataSource.OrderBy%2A>屬性。</xref:System.Web.UI.WebControls.EntityDataSource.OrderBy%2A>"
  example:
  - "The following example automatically generates the ORDER BY clause and uses the value of the `OrderByDropDownList` to set the value of the parameter.  \n  \n```  \n<asp:DropDownList AutoPostBack=\"true\" ID=\"OrderByDropDownList\" runat=\"server\">  \n    <asp:ListItem Value=\"TotalDue\"></asp:ListItem>  \n    <asp:ListItem Value=\"OrderDate\"></asp:ListItem>  \n</asp:DropDownList>  \n  \n<asp:EntityDataSource ID=\"EntityDataSourceWithAutoGenOrderBy\" runat=\"server\"   \nConnectionString=\"name=AdventureWorksEntities\"   \nDefaultContainerName=\"AdventureWorksEntities\"   \nEntitySetName=\"SalesOrderHeaders\"   \nSelect=\"it.SalesOrderID, it.TotalDue, it.OrderDate\"  \nAutoGenerateOrderByClause=\"True\">  \n<OrderByParameters>  \n    <asp:ControlParameter  \n    ControlID=\"OrderByDropDownList\"/>  \n</OrderByParameters>  \n</asp:EntityDataSource>  \n```  \n  \n The following example automatically generates the ORDER BY clause and uses the `DefaultValue` attribute of the `Parameter` element to set the value of the parameter.  \n  \n```  \n<asp:EntityDataSource ID=\"EntityDataSourceWithAutoGenOrderBy\" runat=\"server\"   \nConnectionString=\"name=AdventureWorksEntities\"   \nDefaultContainerName=\"AdventureWorksEntities\"   \nEntitySetName=\"SalesOrderHeaders\"   \nSelect=\"it.SalesOrderID, it.TotalDue, it.OrderDate\"  \nAutoGenerateOrderByClause=\"True\">  \n<OrderByParameters>  \n    <asp:Parameter  \n    DefaultValue=\"TotalDue\"/>  \n</OrderByParameters>  \n</asp:EntityDataSource>  \n```"
  syntax:
    content: public bool AutoGenerateOrderByClause { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref href=&quot;System.Web.UI.WebControls.EntityDataSource&quot;></xref>控制項建立 ORDER BY 子句，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.EntityDataSource.AutoGenerateOrderByClause*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "當 AutoGenerateOrderByClause 屬性設定為<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>和<xref:System.Web.UI.WebControls.EntityDataSource.OrderBy*>屬性不是 null。</xref:System.Web.UI.WebControls.EntityDataSource.OrderBy*>"
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.AutoGenerateWhereClause
  id: AutoGenerateWhereClause
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: AutoGenerateWhereClause
  nameWithType: EntityDataSource.AutoGenerateWhereClause
  fullName: System.Web.UI.WebControls.EntityDataSource.AutoGenerateWhereClause
  type: Property
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "取得或設定值，指出是否<xref href=&quot;System.Web.UI.WebControls.EntityDataSource&quot;></xref>控制項會以動態方式建立 WHERE 子句中定義的值為基礎<xref:System.Web.UI.WebControls.EntityDataSource.WhereParameters*>集合。</xref:System.Web.UI.WebControls.EntityDataSource.WhereParameters*>"
  remarks: "若要篩選查詢結果所納入方程式實體類型屬性的運算式，您可以使用 AutoGenerateWhereClause 屬性。 當 AutoGenerateWhereClause 屬性<xref:System.Web.UI.WebControls.EntityDataSource>控制設為  `true`，控制項自動產生`WHERE`子句中的參數從<xref:System.Web.UI.WebControls.ParameterCollection>的<xref:System.Web.UI.WebControls.EntityDataSource.WhereParameters%2A>屬性。</xref:System.Web.UI.WebControls.EntityDataSource.WhereParameters%2A> </xref:System.Web.UI.WebControls.ParameterCollection> </xref:System.Web.UI.WebControls.EntityDataSource> <xref:System.Web.UI.WebControls.Parameter.Name%2A>每個參數的屬性必須符合包含在查詢結果的實體類型屬性名稱。</xref:System.Web.UI.WebControls.Parameter.Name%2A> 如果您將 AutoGenerateWhereClause 屬性設定為`true`，您應該明確地指派`WHERE`子句<xref:System.Web.UI.WebControls.EntityDataSource.Where%2A>屬性。</xref:System.Web.UI.WebControls.EntityDataSource.Where%2A>      ## 範例在下列範例 AutoGenerateWhereClause 屬性設定為`true`。 因此，<xref:System.Web.UI.WebControls.Parameter.Name%2A>的屬性必須符合包含在查詢結果的實體類型屬性名稱。</xref:System.Web.UI.WebControls.Parameter.Name%2A> 查詢會選取 SalesOrderID 和 TotalDue SalesOrderHeader 實體類型的屬性。 自動產生`WHERE`子句會藉由比較 TotalDue 值 TotalDueList 清單方塊控制項中選取值篩選查詢結果。      ```   <asp:EntityDataSource ID=&quot;SalesOrderHeaderWithAutoParam&quot; runat=&quot;server&quot;       ConnectionString=&quot;name=AdventureWorksEntities&quot;       DefaultContainerName=&quot;AdventureWorksEntities&quot;       EntitySetName=&quot;SalesOrderHeaders&quot;       Select=&quot;it.SalesOrderID, it.TotalDue&quot;       AutoGenerateWhereClause=&quot;True&quot;>       <WhereParameters>           <asp:ControlParameter ControlID=&quot;TotalDueList&quot;               Name=&quot;TotalDue&quot; PropertyName=&quot;SelectedValue&quot; DbType=&quot;Decimal&quot; />       </WhereParameters>   </asp:EntityDataSource>   ```# # 範例根據預設，AutoGenerateWhereClause 屬性設定為`false`。 這表示我們必須提供`WHERE`子句。 在下列範例中，`WHERE`子句是`Where=&quot;it.TotalDue < @totalDueParam&quot;`totalDueParam 且參數名稱。      ```   <asp:EntityDataSource ID=&quot;SalesOrderHeaderWithOutAutoParam&quot; runat=&quot;server&quot;       ConnectionString=&quot;name=AdventureWorksEntities&quot;       DefaultContainerName=&quot;AdventureWorksEntities&quot;       EntitySetName=&quot;SalesOrderHeaders&quot;       Where=&quot;it.TotalDue < @totalDueParam&quot;        Select=&quot;it.SalesOrderID, it.TotalDue&quot;>       <WhereParameters>           <asp:ControlParameter ControlID=&quot;TotalDueList&quot;               Name=&quot;totalDueParam&quot; PropertyName=&quot;SelectedValue&quot; DbType=&quot;Decimal&quot; />       </WhereParameters>   </asp:EntityDataSource>   ```"
  syntax:
    content: public bool AutoGenerateWhereClause { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref href=&quot;System.Web.UI.WebControls.EntityDataSource&quot;></xref>控制項建立的 WHERE 子句，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.EntityDataSource.AutoGenerateWhereClause*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "當 AutoGenerateWhereClause 屬性設定為<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>和<xref:System.Web.UI.WebControls.EntityDataSource.Where*>屬性不是 null。</xref:System.Web.UI.WebControls.EntityDataSource.Where*>"
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.AutoPage
  id: AutoPage
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: AutoPage
  nameWithType: EntityDataSource.AutoPage
  fullName: System.Web.UI.WebControls.EntityDataSource.AutoPage
  type: Property
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "取得或設定值，指出是否<xref href=&quot;System.Web.UI.WebControls.EntityDataSource&quot;></xref>控制項支援的資料區段的執行階段導覽。"
  remarks: "<xref:System.Web.UI.WebControls.EntityDataSource>控制項支援自動查詢所傳回的資料進行分頁。</xref:System.Web.UI.WebControls.EntityDataSource> AutoPage 屬性是布林值屬性，指出是否啟用繫結至資料控制項的查詢所傳回的資料分頁。 當這個屬性設定為`true`、<xref:System.Web.UI.WebControls.EntityDataSource>控制項新增至適當的查詢產生器方法<xref:System.Data.Objects.ObjectQuery%601>根據資訊提供給<xref:System.Web.UI.WebControls.EntityDataSourceView>資料繫結控制項。</xref:System.Web.UI.WebControls.EntityDataSourceView> </xref:System.Data.Objects.ObjectQuery%601> </xref:System.Web.UI.WebControls.EntityDataSource>       自動產生資料頁屬性的值會決定是否<xref:System.Web.UI.WebControls.EntityDataSourceView.CanPage%2A>屬性<xref:System.Web.UI.WebControls.EntityDataSourceView>支援資料來源的控制項是`true`或`false`。</xref:System.Web.UI.WebControls.EntityDataSourceView> </xref:System.Web.UI.WebControls.EntityDataSourceView.CanPage%2A>       當您定義投影啟用分頁時，您必須定義排序結果所依據的屬性。 這表示當您設定<xref:System.Web.UI.WebControls.EntityDataSource.Select%2A>屬性來定義投影，並讓 AutoPage 設`true`，您也必須設定<xref:System.Web.UI.WebControls.EntityDataSource.OrderBy%2A>屬性來定義的順序，或設定<xref:System.Web.UI.WebControls.EntityDataSource.AutoGenerateOrderByClause%2A>屬性`true`和加入 ORDER BY 參數，以<xref:System.Web.UI.WebControls.EntityDataSource.OrderByParameters%2A>集合。</xref:System.Web.UI.WebControls.EntityDataSource.OrderByParameters%2A> </xref:System.Web.UI.WebControls.EntityDataSource.AutoGenerateOrderByClause%2A> </xref:System.Web.UI.WebControls.EntityDataSource.OrderBy%2A> </xref:System.Web.UI.WebControls.EntityDataSource.Select%2A>"
  syntax:
    content: public bool AutoPage { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果使用者可以逐頁查看資料。，否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.EntityDataSource.AutoPage*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.AutoSort
  id: AutoSort
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: AutoSort
  nameWithType: EntityDataSource.AutoSort
  fullName: System.Web.UI.WebControls.EntityDataSource.AutoSort
  type: Property
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "取得或設定值，指出是否<xref href=&quot;System.Web.UI.WebControls.EntityDataSource&quot;></xref>控制項支援在執行階段中排序資料。"
  remarks: "<xref:System.Web.UI.WebControls.EntityDataSource>控制項支援自動排序查詢所傳回的資料。</xref:System.Web.UI.WebControls.EntityDataSource> 自動排序屬性<xref:System.Web.UI.WebControls.EntityDataSource>控制項是布林值的屬性，指出是否啟用繫結至資料控制項的查詢所傳回之資料的排序。</xref:System.Web.UI.WebControls.EntityDataSource> 當這個屬性設定為`true`、<xref:System.Web.UI.WebControls.EntityDataSource>控制項新增至適當的查詢產生器方法<xref:System.Data.Objects.ObjectQuery%601>根據資訊提供給<xref:System.Web.UI.WebControls.EntityDataSourceView>資料繫結控制項。</xref:System.Web.UI.WebControls.EntityDataSourceView> </xref:System.Data.Objects.ObjectQuery%601> </xref:System.Web.UI.WebControls.EntityDataSource>       自動排序屬性的值會決定是否<xref:System.Web.UI.WebControls.EntityDataSourceView.CanSort%2A>和<xref:System.Web.UI.WebControls.EntityDataSourceView.CanRetrieveTotalRowCount%2A>屬性<xref:System.Web.UI.WebControls.EntityDataSourceView>支援資料來源的控制項是`true`或`false`。</xref:System.Web.UI.WebControls.EntityDataSourceView> </xref:System.Web.UI.WebControls.EntityDataSourceView.CanRetrieveTotalRowCount%2A> </xref:System.Web.UI.WebControls.EntityDataSourceView.CanSort%2A>"
  syntax:
    content: public bool AutoSort { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果使用者可以排序資料。，否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.EntityDataSource.AutoSort*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.CommandParameters
  id: CommandParameters
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: CommandParameters
  nameWithType: EntityDataSource.CommandParameters
  fullName: System.Web.UI.WebControls.EntityDataSource.CommandParameters
  type: Property
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "取得查詢的參數集合。"
  remarks: "CommandParameters 屬性用來存取<xref:System.Web.UI.WebControls.ParameterCollection>參數傳遞至使用指定的明確 Entity SQL 查詢的<xref:System.Web.UI.WebControls.EntityDataSource.CommandText%2A>屬性。</xref:System.Web.UI.WebControls.EntityDataSource.CommandText%2A> </xref:System.Web.UI.WebControls.ParameterCollection>"
  example:
  - "The following example supplies Entity SQL command text that returns a collection of Product objects.  \n  \n```  \n<asp:EntityDataSource ID=\"ProductDataSource\" runat=\"server\"   \n    CommandText=\"SELECT value p FROM Products AS p  \n        WHERE p.ProductID  \n        BETWEEN @OrderIdMin AND @OrderIdMax\"  \n    ConnectionString=\"name=AdventureWorksEntities\"   \n    DefaultContainerName=\"AdventureWorksEntities\" >  \n    <CommandParameters>  \n        <asp:ControlParameter Name=\"OrderIdMin\"   \n            ControlID=\"ProductIdMin\" Type=\"Int32\"/>  \n        <asp:ControlParameter Name=\"OrderIdMax\"   \n            ControlID=\"ProductIdMax\" Type=\"Int32\" />  \n    </CommandParameters>  \n</asp:EntityDataSource>  \n  \n```  \n  \n The following example returns a projected series of columns:  \n  \n```  \n<asp:EntityDataSource ID=\"ProductDataSource\" runat=\"server\"   \n    CommandText=\"SELECT p.ProductID, p.ProductName, p.UnitsOnOrder  \n         FROM Products AS p   \n         WHERE p.ProductID BETWEEN @OrderIDMin AND @OrderIDMax\"   \n         ContextTypeName=\"AdventureWorksModel. AdventureWorksEntities\">  \n    <CommandParameters>  \n        <asp:ControlParameter Name=\"OrderIDMin\"   \n               ControlID=\"ProductIDMinTextBox\" Type=\"Int32\"/>  \n        <asp:ControlParameter Name=\"OrderIDMax\"   \n               ControlID=\"ProductIDMaxTextBox\" Type=\"Int32\" />  \n    </CommandParameters>  \n</asp:EntityDataSource>  \n  \n```"
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection CommandParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.ParameterCollection&quot;> </xref> ，其中包含傳遞至查詢命令的參數。"
  overload: System.Web.UI.WebControls.EntityDataSource.CommandParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.CommandText
  id: CommandText
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: CommandText
  nameWithType: EntityDataSource.CommandText
  fullName: System.Web.UI.WebControls.EntityDataSource.CommandText
  type: Property
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "取得或設定 Entity SQL 命令定義查詢。"
  remarks: "CommandText 屬性<xref:System.Web.UI.WebControls.EntityDataSource>控制項可讓您指定使用自訂的 Entity SQL 運算式的查詢。</xref:System.Web.UI.WebControls.EntityDataSource> SELECT 陳述式，例如 CommandText 建立不是可更新的原始資料的預測。       當指派的 CommandText 屬性時，則會停用更新、 插入和刪除功能。 在此情況下，方法<xref:System.Web.UI.WebControls.EntityDataSourceView.CanDelete%2A>， <xref:System.Web.UI.WebControls.EntityDataSourceView.CanInsert%2A>，和<xref:System.Web.UI.WebControls.EntityDataSourceView.CanUpdate%2A>將相關<xref:System.Web.UI.WebControls.EntityDataSourceView>控制所有傳回`false`。</xref:System.Web.UI.WebControls.EntityDataSourceView> </xref:System.Web.UI.WebControls.EntityDataSourceView.CanUpdate%2A> </xref:System.Web.UI.WebControls.EntityDataSourceView.CanInsert%2A> </xref:System.Web.UI.WebControls.EntityDataSourceView.CanDelete%2A>       當設定 CommandText 屬性時，發生例外狀況時擲回<xref:System.Web.UI.DataSourceView.ExecuteSelect%2A>資料繫結至控制項所呼叫方法<xref:System.Web.UI.WebControls.EntityDataSource>控制如果的值<xref:System.Web.UI.WebControls.EntityDataSource.EnableInsert%2A>， <xref:System.Web.UI.WebControls.EntityDataSource.EnableUpdate%2A>，或<xref:System.Web.UI.WebControls.EntityDataSource.EnableDelete%2A>設`true`。</xref:System.Web.UI.WebControls.EntityDataSource.EnableDelete%2A> </xref:System.Web.UI.WebControls.EntityDataSource.EnableUpdate%2A> </xref:System.Web.UI.WebControls.EntityDataSource.EnableInsert%2A> </xref:System.Web.UI.WebControls.EntityDataSource> </xref:System.Web.UI.DataSourceView.ExecuteSelect%2A>       CommandText 的查詢，傳回的投影的屬性設 (例如，&quot;`SELECT p.ProductID, p. Name FROM AdventureWorksEntities.Products AS p`&quot;)、<xref:System.Data.Common.DbDataRecord>會傳回。</xref:System.Data.Common.DbDataRecord>"
  example:
  - "The following example uses the supplied Entity SQL command to returns a collection of Product objects.  \n  \n```  \n<asp:EntityDataSource ID=\"ProductDataSource\" runat=\"server\"   \n    CommandText=\"SELECT value p FROM Products AS p  \n        WHERE p.ProductID  \n        BETWEEN @OrderIdMin AND @OrderIdMax\"  \n    ConnectionString=\"name=AdventureWorksEntities\"   \n    DefaultContainerName=\"AdventureWorksEntities\" >  \n    <CommandParameters>  \n        <asp:ControlParameter Name=\"OrderIdMin\"   \n            ControlID=\"ProductIdMin\" Type=\"Int32\"/>  \n        <asp:ControlParameter Name=\"OrderIdMax\"   \n            ControlID=\"ProductIdMax\" Type=\"Int32\" />  \n    </CommandParameters>  \n</asp:EntityDataSource>  \n  \n```  \n  \n The following example returns a projected series of columns:  \n  \n```  \n<asp:EntityDataSource ID=\"ProductDataSource\" runat=\"server\"   \n    CommandText=\"SELECT p.ProductID, p.ProductName, p.UnitsOnOrder  \n          FROM Products AS p   \n          WHERE p.ProductID BETWEEN @OrderIDMin AND @OrderIDMax\"   \n          ContextTypeName=\"AdventureWorksModel. AdventureWorksEntities\">  \n    <CommandParameters>  \n        <asp:ControlParameter Name=\"OrderIDMin\"   \n                ControlID=\"ProductIDMinTextBox\" Type=\"Int32\"/>  \n        <asp:ControlParameter Name=\"OrderIDMax\"   \n                ControlID=\"ProductIDMaxTextBox\" Type=\"Int32\" />  \n    </CommandParameters>  \n</asp:EntityDataSource>  \n  \n```"
  syntax:
    content: public string CommandText { get; set; }
    return:
      type: System.String
      description: "A <xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;> </xref> Entity SQL 查詢的值。"
  overload: System.Web.UI.WebControls.EntityDataSource.CommandText*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.ConnectionString
  id: ConnectionString
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: ConnectionString
  nameWithType: EntityDataSource.ConnectionString
  fullName: System.Web.UI.WebControls.EntityDataSource.ConnectionString
  type: Property
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "取得或設定用來執行查詢的連接字串。"
  remarks: "ConnectionString 屬性<xref:System.Web.UI.WebControls.EntityDataSource>可以從具名的 EDM 連接字串儲存在應用程式組態檔的項目中初始化控制項。</xref:System.Web.UI.WebControls.EntityDataSource> 使用實體資料模型精靈建立 EDM 時，應用程式組態檔中建立具名的 EDM 連接。 當應用程式組態檔中找到具名的 EDM 連接字串時，連線就會顯示為 EntityDataSource 設計工具中設定資料來源精靈的選項。 如需詳細資訊，請參閱[設定資料來源精靈 （EntityDataSource 控制項）](http://msdn.microsoft.com/en-us/263976a5-2406-47c0-8919-c6af6e76d78e)。       如果<xref:System.Web.UI.WebControls.EntityDataSource.ContextTypeName%2A>未指定屬性，這兩個的<xref:System.Web.UI.WebControls.EntityDataSource.DefaultContainerName%2A>ConnectionString 屬性必須設定為控制項建立<xref:System.Data.Objects.ObjectContext>.</xref:System.Data.Objects.ObjectContext>和</xref:System.Web.UI.WebControls.EntityDataSource.DefaultContainerName%2A></xref:System.Web.UI.WebControls.EntityDataSource.ContextTypeName%2A>"
  syntax:
    content: public string ConnectionString { get; set; }
    return:
      type: System.String
      description: "查詢的連接字串。"
  overload: System.Web.UI.WebControls.EntityDataSource.ConnectionString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.ContextCreated
  id: ContextCreated
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: ContextCreated
  nameWithType: EntityDataSource.ContextCreated
  fullName: System.Web.UI.WebControls.EntityDataSource.ContextCreated
  type: Event
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "發生時<xref href=&quot;System.Web.UI.WebControls.EntityDataSource&quot;></xref>完成建立<xref href=&quot;System.Data.Objects.ObjectContext&quot;></xref>用來搭配實體資料物件。"
  remarks: "處理這個事件來存取<xref:System.Data.Objects.ObjectContext>，會由<xref:System.Web.UI.WebControls.EntityDataSource>執行查詢及追蹤變更的控制項。</xref:System.Web.UI.WebControls.EntityDataSource> </xref:System.Data.Objects.ObjectContext> 可儲存及<xref:System.Web.UI.WebControls.EntityDataSource>.</xref:System.Web.UI.WebControls.EntityDataSource>之外的後續作業所使用的這個內容物件 <xref:System.Data.Objects.ObjectContext>取自<xref:System.Web.UI.WebControls.EntityDataSourceContextCreatedEventArgs>ContextCreated 事件由。</xref:System.Web.UI.WebControls.EntityDataSourceContextCreatedEventArgs> </xref:System.Data.Objects.ObjectContext> 如需詳細資訊，請參閱[物件內容生命週期管理 (EntityDataSource)](http://msdn.microsoft.com/en-us/67bc2486-112c-47c3-b23f-0297f7ac2160)。 如需有關物件內容的詳細資訊，請參閱[識別解析、 狀態管理和變更追蹤](http://msdn.microsoft.com/en-us/3bd49311-0e72-4ea4-8355-38fe57036ba0)。       ContextCreated 事件可讓您指派<xref:System.Data.Objects.ObjectContext>給<xref:System.Web.UI.WebControls.EntityDataSource>.</xref:System.Web.UI.WebControls.EntityDataSource>之外的後續作業的變數已建立的</xref:System.Data.Objects.ObjectContext> <xref:System.Web.UI.WebControls.EntityDataSourceContextCreatedEventArgs.Context%2A?displayProperty=fullName>屬性包含已在中建立的內容<xref:System.Web.UI.WebControls.EntityDataSource.ContextCreating>事件。</xref:System.Web.UI.WebControls.EntityDataSource.ContextCreating> </xref:System.Web.UI.WebControls.EntityDataSourceContextCreatedEventArgs.Context%2A?displayProperty=fullName> 如果使用者不能指派期間的內容<xref:System.Web.UI.WebControls.EntityDataSource.ContextCreating>中包含的事件，內容執行個體<xref:System.Web.UI.WebControls.EntityDataSourceContextCreatedEventArgs.Context%2A?displayProperty=fullName>是一個由<xref:System.Web.UI.WebControls.EntityDataSource>根據<xref:System.Web.UI.WebControls.EntityDataSource.ContextTypeName%2A?displayProperty=fullName>， <xref:System.Web.UI.WebControls.EntityDataSource.DefaultContainerName%2A?displayProperty=fullName>，或<xref:System.Web.UI.WebControls.EntityDataSource.ConnectionString%2A?displayProperty=fullName>屬性。</xref:System.Web.UI.WebControls.EntityDataSource.ConnectionString%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.EntityDataSource.DefaultContainerName%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.EntityDataSource.ContextTypeName%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.EntityDataSource> </xref:System.Web.UI.WebControls.EntityDataSourceContextCreatedEventArgs.Context%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.EntityDataSource.ContextCreating>"
  syntax:
    content: public event EventHandler<System.Web.UI.WebControls.EntityDataSourceContextCreatedEventArgs> ContextCreated;
    return:
      type: System.EventHandler{System.Web.UI.WebControls.EntityDataSourceContextCreatedEventArgs}
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.ContextCreating
  id: ContextCreating
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: ContextCreating
  nameWithType: EntityDataSource.ContextCreating
  fullName: System.Web.UI.WebControls.EntityDataSource.ContextCreating
  type: Event
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "發生時<xref href=&quot;System.Web.UI.WebControls.EntityDataSource&quot;></xref>建立<xref href=&quot;System.Data.Objects.ObjectContext&quot;></xref>用來搭配實體資料物件。"
  remarks: "處理 ContextCreating 事件以提供您自己<xref:System.Data.Objects.ObjectContext>而不需要新<xref:System.Data.Objects.ObjectContext>建立。</xref:System.Data.Objects.ObjectContext> </xref:System.Data.Objects.ObjectContext> 如果不處理 ContextCreating 事件或處理常式未提供<xref:System.Data.Objects.ObjectContext>、<xref:System.Web.UI.WebControls.EntityDataSource>會建立一個根據其組態。</xref:System.Web.UI.WebControls.EntityDataSource> </xref:System.Data.Objects.ObjectContext> 當<xref:System.Data.Objects.ObjectContext>係 ContextCreating 事件中，相同的執行個體指派給`Context`後續事件的事件物件的屬性。</xref:System.Data.Objects.ObjectContext> 如需詳細資訊，請參閱[物件內容生命週期管理 (EntityDataSource)](http://msdn.microsoft.com/en-us/67bc2486-112c-47c3-b23f-0297f7ac2160)。 如需有關物件內容的詳細資訊，請參閱[識別解析、 狀態管理和變更追蹤](http://msdn.microsoft.com/en-us/3bd49311-0e72-4ea4-8355-38fe57036ba0)。"
  example:
  - "The following example shows how to create an <xref:System.Data.Objects.ObjectContext> variable of the <xref:System.Web.UI.Page> object and assign it to the <xref:System.Web.UI.WebControls.EntityDataSourceContextCreatingEventArgs.Context%2A> property of the <xref:System.Web.UI.WebControls.EntityDataSourceContextCreatingEventArgs> object.  \n  \n```c#  \npublic partial class _Default : System.Web.UI.Page  \n    {  \n        AdventureWorksModel.AdventureWorksEntities objCtx =  \n            new AdventureWorksModel.AdventureWorksEntities();  \n  \n        protected void EntityDataSource2_ContextCreating(object sender,   \n            EntityDataSourceContextCreatingEventArgs e)  \n        {  \n            e.Context = objCtx;  \n        }  \n    }  \n```"
  syntax:
    content: public event EventHandler<System.Web.UI.WebControls.EntityDataSourceContextCreatingEventArgs> ContextCreating;
    return:
      type: System.EventHandler{System.Web.UI.WebControls.EntityDataSourceContextCreatingEventArgs}
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.ContextDisposing
  id: ContextDisposing
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: ContextDisposing
  nameWithType: EntityDataSource.ContextDisposing
  fullName: System.Web.UI.WebControls.EntityDataSource.ContextDisposing
  type: Event
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "發生於之前<xref href=&quot;System.Data.Objects.ObjectContext&quot;></xref>會處置。"
  remarks: "處理這個事件以防止<xref:System.Data.Objects.ObjectContext>供<xref:System.Web.UI.WebControls.EntityDataSource>正在處置的控制項。</xref:System.Web.UI.WebControls.EntityDataSource> </xref:System.Data.Objects.ObjectContext> 這樣做，當您想要使用單一<xref:System.Data.Objects.ObjectContext>中您的頁面數個控制項或執行個體的執行個體<xref:System.Web.UI.WebControls.EntityDataSource>控制項。</xref:System.Web.UI.WebControls.EntityDataSource> </xref:System.Data.Objects.ObjectContext> 若要避免<xref:System.Data.Objects.ObjectContext>從正在處置，設定<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>屬性<xref:System.Web.UI.WebControls.EntityDataSourceContextDisposingEventArgs>物件`true`。</xref:System.Web.UI.WebControls.EntityDataSourceContextDisposingEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A> </xref:System.Data.Objects.ObjectContext> 如需詳細資訊，請參閱[物件內容生命週期管理 (EntityDataSource)](http://msdn.microsoft.com/en-us/67bc2486-112c-47c3-b23f-0297f7ac2160)。 如需有關物件內容的詳細資訊，請參閱[識別解析、 狀態管理和變更追蹤](http://msdn.microsoft.com/en-us/3bd49311-0e72-4ea4-8355-38fe57036ba0)。"
  example:
  - "To keep an existing <xref:System.Data.Objects.ObjectContext> instance member for future reference cancel the <xref:System.Web.UI.WebControls.EntityDataSource.ContextCreated> event as shown by the following code.  \n  \n```c#  \nprotected void EntityDataSource2_ContextDisposing(object sender,   \n    EntityDataSourceContextDisposingEventArgs e)  \n{  \n    e.Cancel = true;  \n}  \n  \n```"
  syntax:
    content: public event EventHandler<System.Web.UI.WebControls.EntityDataSourceContextDisposingEventArgs> ContextDisposing;
    return:
      type: System.EventHandler{System.Web.UI.WebControls.EntityDataSourceContextDisposingEventArgs}
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.ContextType
  id: ContextType
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: ContextType
  nameWithType: EntityDataSource.ContextType
  fullName: System.Web.UI.WebControls.EntityDataSource.ContextType
  type: Property
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "取得或設定具型別的<xref href=&quot;System.Data.Objects.ObjectContext&quot;></xref>供<xref href=&quot;System.Web.UI.WebControls.EntityDataSource&quot;></xref>控制項。"
  remarks: "<xref:System.Data.Objects.ObjectContext>供<xref:System.Web.UI.WebControls.EntityDataSource>ContextType 屬性，就可以存取控制項。</xref:System.Web.UI.WebControls.EntityDataSource> </xref:System.Data.Objects.ObjectContext> 如需詳細資訊，請參閱[物件內容生命週期管理 (EntityDataSource)](http://msdn.microsoft.com/en-us/67bc2486-112c-47c3-b23f-0297f7ac2160)。"
  syntax:
    content: public Type ContextType { get; set; }
    return:
      type: System.Type
      description: "物件，衍生自<xref href=&quot;System.Data.Objects.ObjectContext&quot;> </xref>。"
  overload: System.Web.UI.WebControls.EntityDataSource.ContextType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.ContextTypeName
  id: ContextTypeName
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: ContextTypeName
  nameWithType: EntityDataSource.ContextTypeName
  fullName: System.Web.UI.WebControls.EntityDataSource.ContextTypeName
  type: Property
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "取得或設定的具類型的完整限定的名稱<xref href=&quot;System.Data.Objects.ObjectContext&quot;> </xref> ，會由<xref href=&quot;System.Web.UI.WebControls.EntityDataSource&quot;></xref>控制項。"
  remarks: "ContextTypeName 屬性<xref:System.Web.UI.WebControls.EntityDataSource>控制項是指定具類型的完整限定的類型名稱的字串<xref:System.Data.Objects.ObjectContext>，會由<xref:System.Web.UI.WebControls.EntityDataSource>控制項。</xref:System.Web.UI.WebControls.EntityDataSource> </xref:System.Data.Objects.ObjectContext> </xref:System.Web.UI.WebControls.EntityDataSource> 如果屬性不是 ContextTypeName 指定，這兩個<xref:System.Web.UI.WebControls.EntityDataSource.DefaultContainerName%2A><xref:System.Web.UI.WebControls.EntityDataSource.ConnectionString%2A>屬性必須設定為控制項建立<xref:System.Data.Objects.ObjectContext>.</xref:System.Data.Objects.ObjectContext></xref:System.Web.UI.WebControls.EntityDataSource.ConnectionString%2A>和</xref:System.Web.UI.WebControls.EntityDataSource.DefaultContainerName%2A>"
  syntax:
    content: public string ContextTypeName { get; set; }
    return:
      type: System.String
      description: "A<xref:System.String>也就是類型的完整的名稱。</xref:System.String>"
  overload: System.Web.UI.WebControls.EntityDataSource.ContextTypeName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.CreateView
  id: CreateView
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: CreateView()
  nameWithType: EntityDataSource.CreateView()
  fullName: System.Web.UI.WebControls.EntityDataSource.CreateView()
  type: Method
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "建立的新執行個體<xref href=&quot;System.Web.UI.WebControls.EntityDataSourceView&quot;></xref>與這個控制項相關聯。"
  remarks: "若要提供自訂的檢視，您可以覆寫這個方法在衍生類別中。"
  syntax:
    content: protected virtual System.Web.UI.WebControls.EntityDataSourceView CreateView ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.EntityDataSourceView
      description: "物件，可做為資料繫結控制項的介面。"
  overload: System.Web.UI.WebControls.EntityDataSource.CreateView*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.DefaultContainerName
  id: DefaultContainerName
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: DefaultContainerName
  nameWithType: EntityDataSource.DefaultContainerName
  fullName: System.Web.UI.WebControls.EntityDataSource.DefaultContainerName
  type: Property
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "取得或設定預設容器名稱。"
  remarks: "如果<xref:System.Web.UI.WebControls.EntityDataSource.ContextTypeName%2A>未指定屬性，為 DefaultContainerName 和<xref:System.Web.UI.WebControls.EntityDataSource.ConnectionString%2A>屬性必須設定為控制項建立<xref:System.Data.Objects.ObjectContext>.</xref:System.Data.Objects.ObjectContext> </xref:System.Web.UI.WebControls.EntityDataSource.ConnectionString%2A> </xref:System.Web.UI.WebControls.EntityDataSource.ContextTypeName%2A>"
  syntax:
    content: public string DefaultContainerName { get; set; }
    return:
      type: System.String
      description: "A<xref:System.String>也就是預設容器名稱。</xref:System.String>"
  overload: System.Web.UI.WebControls.EntityDataSource.DefaultContainerName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.Deleted
  id: Deleted
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: Deleted
  nameWithType: EntityDataSource.Deleted
  fullName: System.Web.UI.WebControls.EntityDataSource.Deleted
  type: Event
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "發生於之後已刪除資料來源的物件。"
  remarks: "刪除事件引發之後<xref:System.Data.Objects.ObjectContext.SaveChanges%2A>方法被成功呼叫上<xref:System.Data.Objects.ObjectContext>刪除的物件。</xref:System.Data.Objects.ObjectContext> </xref:System.Data.Objects.ObjectContext.SaveChanges%2A> <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Entity%2A>屬性<xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs>物件用來存取已刪除的物件。</xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs> </xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Entity%2A> 此物件是處於<xref:System.Data.EntityState>狀態。</xref:System.Data.EntityState>       如果在刪除物件時發生錯誤，就會刪除事件引發，<xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.Exception%2A>屬性<xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs>物件設為所傳回<xref:System.Exception>，而<xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.Entity%2A>屬性設定為`null`。</xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.Entity%2A> </xref:System.Exception> </xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs> </xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.Exception%2A> 如果您處理的例外狀況已刪除的事件處理常式中，設定<xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.ExceptionHandled%2A>屬性`true`。</xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.ExceptionHandled%2A> 這可防止再次引發的例外狀況。 當您指定的值`false`如<xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.ExceptionHandled%2A>屬性，<xref:System.Web.UI.WebControls.EntityDataSource>重新引發例外狀況。</xref:System.Web.UI.WebControls.EntityDataSource> </xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.ExceptionHandled%2A>"
  syntax:
    content: public event EventHandler<System.Web.UI.WebControls.EntityDataSourceChangedEventArgs> Deleted;
    return:
      type: System.EventHandler{System.Web.UI.WebControls.EntityDataSourceChangedEventArgs}
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.DeleteParameters
  id: DeleteParameters
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: DeleteParameters
  nameWithType: EntityDataSource.DeleteParameters
  fullName: System.Web.UI.WebControls.EntityDataSource.DeleteParameters
  type: Property
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "取得 delete 作業期間所使用的參數的集合。"
  remarks: "ASP.NET 4 或更早版本為目標的 web 應用程式，屬性值會儲存在檢視狀態，並自動回傳之間維護。 ASP.NET 4.5 為目標的 web 應用程式，屬性值不會儲存檢視狀態中，您必須設定每個 HTTP 要求值。"
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection DeleteParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "刪除作業期間所使用的參數。"
  overload: System.Web.UI.WebControls.EntityDataSource.DeleteParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.Deleting
  id: Deleting
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: Deleting
  nameWithType: EntityDataSource.Deleting
  fullName: System.Web.UI.WebControls.EntityDataSource.Deleting
  type: Event
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "從資料來源刪除物件之前發生。"
  remarks: "正在刪除引發之前<xref:System.Data.Objects.ObjectContext.SaveChanges%2A>上呼叫方法<xref:System.Data.Objects.ObjectContext>刪除的物件。</xref:System.Data.Objects.ObjectContext> </xref:System.Data.Objects.ObjectContext.SaveChanges%2A> <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Entity%2A>屬性<xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs>物件用來存取要刪除的物件。</xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs> </xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Entity%2A> 此物件的屬性可能未完全設定。 必須設定只能識別此物件所需的屬性。       若要停止刪除物件，設定<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>屬性<xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs>物件`true`。</xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A>       如果準備的刪除的物件，正在刪除事件，就會引發和<xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Exception%2A>屬性的<xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs>物件是設定為傳回<xref:System.Exception>.</xref:System.Exception></xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs></xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Exception%2A>時發生錯誤       當您處理的例外狀況，正在刪除事件處理常式中時，設定<xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.ExceptionHandled%2A>屬性`true`。</xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.ExceptionHandled%2A> 這可防止再次引發的例外狀況。 當您指定的值`false`如<xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.ExceptionHandled%2A>屬性，<xref:System.Web.UI.WebControls.EntityDataSource>重新引發例外狀況。</xref:System.Web.UI.WebControls.EntityDataSource> </xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.ExceptionHandled%2A>"
  syntax:
    content: public event EventHandler<System.Web.UI.WebControls.EntityDataSourceChangingEventArgs> Deleting;
    return:
      type: System.EventHandler{System.Web.UI.WebControls.EntityDataSourceChangingEventArgs}
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.EnableDelete
  id: EnableDelete
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: EnableDelete
  nameWithType: EntityDataSource.EnableDelete
  fullName: System.Web.UI.WebControls.EntityDataSource.EnableDelete
  type: Property
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "取得或設定值，指出物件是否可以透過刪除<xref href=&quot;System.Web.UI.WebControls.EntityDataSource&quot;></xref>控制項。"
  remarks: "<xref:System.Web.UI.WebControls.EntityDataSource.Select%2A>如果啟用 EnableDelete 屬性無法設定。</xref:System.Web.UI.WebControls.EntityDataSource.Select%2A>       A`false`值指派給 EnableDelete 屬性上<xref:System.Web.UI.WebControls.EntityDataSource>強制<xref:System.Web.UI.WebControls.EntityDataSourceView.CanDelete%2A>將相關的屬性<xref:System.Web.UI.WebControls.EntityDataSourceView>要傳回物件`false`。</xref:System.Web.UI.WebControls.EntityDataSourceView> </xref:System.Web.UI.WebControls.EntityDataSourceView.CanDelete%2A> </xref:System.Web.UI.WebControls.EntityDataSource> 當 EnableDelete 屬性設定為`false`，<xref:System.NotSupportedException>如果資料繫結控制項呼叫<xref:System.Web.UI.DataSourceView.ExecuteDelete%2A><xref:System.Web.UI.WebControls.EntityDataSourceView>。</xref:System.Web.UI.WebControls.EntityDataSourceView>方法</xref:System.Web.UI.DataSourceView.ExecuteDelete%2A>就會引發</xref:System.NotSupportedException>       如果不符合任何可更新性條件，而且 EnableDelete 屬性設定為`true`、<xref:System.Web.UI.WebControls.EntityDataSource>引發例外狀況。</xref:System.Web.UI.WebControls.EntityDataSource>"
  syntax:
    content: public bool EnableDelete { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果已啟用自動刪除作業。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.EntityDataSource.EnableDelete*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.EnableFlattening
  id: EnableFlattening
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: EnableFlattening
  nameWithType: EntityDataSource.EnableFlattening
  fullName: System.Web.UI.WebControls.EntityDataSource.EnableFlattening
  type: Property
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "取得或設定值，指出您是否要關閉包裝函式建立。"
  remarks: "當您初始化<xref:System.Web.UI.WebControls.EntityDataSource>控制項使用<xref:System.Web.UI.WebControls.EntityDataSource.EntitySetName%2A>屬性，<xref:System.Web.UI.WebControls.EntityDataSource>包裝在結果中的物件中的每個實體執行個體<xref:System.ComponentModel.ICustomTypeDescriptor>型別。</xref:System.ComponentModel.ICustomTypeDescriptor> </xref:System.Web.UI.WebControls.EntityDataSource> </xref:System.Web.UI.WebControls.EntityDataSource.EntitySetName%2A> </xref:System.Web.UI.WebControls.EntityDataSource> 如需詳細資訊，請參閱[簡維物件 (EntityDataSource)](http://msdn.microsoft.com/en-us/08a30ef3-1132-4ac4-856c-5ed3d65eaf16)。"
  syntax:
    content: public bool EnableFlattening { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>如果將簡維屬性;，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.EntityDataSource.EnableFlattening*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.EnableInsert
  id: EnableInsert
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: EnableInsert
  nameWithType: EntityDataSource.EnableInsert
  fullName: System.Web.UI.WebControls.EntityDataSource.EnableInsert
  type: Property
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "取得或設定值，指出物件是否可以透過加入<xref href=&quot;System.Web.UI.WebControls.EntityDataSource&quot;></xref>控制項。"
  remarks: "<xref:System.Web.UI.WebControls.EntityDataSource.Select%2A>如果 EnableInsert 屬性設定為不能設定`true`。</xref:System.Web.UI.WebControls.EntityDataSource.Select%2A>       A`false`值指派給 EnableInsert 屬性上<xref:System.Web.UI.WebControls.EntityDataSource>強制<xref:System.Web.UI.WebControls.EntityDataSourceView.CanInsert%2A>將相關的屬性<xref:System.Web.UI.WebControls.EntityDataSourceView>要傳回物件`false`。</xref:System.Web.UI.WebControls.EntityDataSourceView> </xref:System.Web.UI.WebControls.EntityDataSourceView.CanInsert%2A> </xref:System.Web.UI.WebControls.EntityDataSource> 當 EnableInsert 屬性設定為`false`，<xref:System.NotSupportedException>如果資料繫結控制項呼叫<xref:System.Web.UI.DataSourceView.ExecuteInsert%2A><xref:System.Web.UI.WebControls.EntityDataSourceView>。</xref:System.Web.UI.WebControls.EntityDataSourceView>方法</xref:System.Web.UI.DataSourceView.ExecuteInsert%2A>就會引發</xref:System.NotSupportedException>       如果不符合任何可更新性條件，而且 EnableInsert 屬性設定為`true`、<xref:System.Web.UI.WebControls.EntityDataSource>引發例外狀況。</xref:System.Web.UI.WebControls.EntityDataSource>"
  syntax:
    content: public bool EnableInsert { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果已啟用自動插入作業;否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.EntityDataSource.EnableInsert*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.EnableUpdate
  id: EnableUpdate
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: EnableUpdate
  nameWithType: EntityDataSource.EnableUpdate
  fullName: System.Web.UI.WebControls.EntityDataSource.EnableUpdate
  type: Property
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "取得或設定值，指出物件是否可以透過修改<xref href=&quot;System.Web.UI.WebControls.EntityDataSource&quot;></xref>控制項。"
  remarks: "<xref:System.Web.UI.WebControls.EntityDataSource.Select%2A>如果 EnableUpdate 屬性設定為不能設定`true`。</xref:System.Web.UI.WebControls.EntityDataSource.Select%2A>       A`false`值指派給 EnableUpdate 屬性強制<xref:System.Web.UI.WebControls.EntityDataSourceView.CanUpdate%2A>將相關的屬性<xref:System.Web.UI.WebControls.EntityDataSourceView>要傳回物件`false`。</xref:System.Web.UI.WebControls.EntityDataSourceView> </xref:System.Web.UI.WebControls.EntityDataSourceView.CanUpdate%2A> 當 EnableUpdate 屬性設定為`false`，<xref:System.NotSupportedException>如果資料繫結控制項呼叫<xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A><xref:System.Web.UI.WebControls.EntityDataSourceView>。</xref:System.Web.UI.WebControls.EntityDataSourceView>方法</xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A>就會引發</xref:System.NotSupportedException>       EnableUpdate 屬性設定為`true`不保證可更新性。       如果不符合任何可更新性條件，而且 EnableUpdate 屬性設定為`true`、<xref:System.Web.UI.WebControls.EntityDataSource>引發例外狀況。</xref:System.Web.UI.WebControls.EntityDataSource>"
  syntax:
    content: public bool EnableUpdate { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果已啟用自動更新作業。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.EntityDataSource.EnableUpdate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.EntitySetName
  id: EntitySetName
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: EntitySetName
  nameWithType: EntityDataSource.EntitySetName
  fullName: System.Web.UI.WebControls.EntityDataSource.EntitySetName
  type: Property
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "取得或設定所使用的實體集名稱<xref href=&quot;System.Web.UI.WebControls.EntityDataSource&quot;></xref>控制項。"
  remarks: "EntitySetName 屬性<xref:System.Web.UI.WebControls.EntityDataSource>控制項用來指定控制項所存取的物件類型的實體集。</xref:System.Web.UI.WebControls.EntityDataSource> EntitySetName 屬性的值是預設的選取陳述式所使用的控制項。 如果設定為不必要的查詢會指定為 Entity SQL 運算式是提供給<xref:System.Web.UI.WebControls.EntityDataSource.CommandText%2A>屬性。</xref:System.Web.UI.WebControls.EntityDataSource.CommandText%2A> 如需詳細資訊，請參閱[自訂命令文字 (EntityDataSource)](http://msdn.microsoft.com/en-us/d42e90d0-1443-474e-8940-53f504d6fc91)。"
  syntax:
    content: public string EntitySetName { get; set; }
    return:
      type: System.String
      description: "實體集名稱。"
  overload: System.Web.UI.WebControls.EntityDataSource.EntitySetName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.EntityTypeFilter
  id: EntityTypeFilter
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: EntityTypeFilter
  nameWithType: EntityDataSource.EntityTypeFilter
  fullName: System.Web.UI.WebControls.EntityDataSource.EntityTypeFilter
  type: Property
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "取得或設定運算式，將查詢限制為只有特定衍生類型的結果。"
  remarks: "當<xref:System.Web.UI.WebControls.EntityDataSource>控制項必須傳回特定的衍生型別、 EntityTypeFilter 屬性也必須設定為指定此衍生型別的名稱。</xref:System.Web.UI.WebControls.EntityDataSource> 如果<xref:System.Web.UI.WebControls.EntityDataSource.EntitySetName%2A>屬性會指定實體集可能會產生多型結果，所以必須 EntityTypeFilter 屬性無法編輯資料。</xref:System.Web.UI.WebControls.EntityDataSource.EntitySetName%2A> 這會有相同的效果套用<xref:System.Data.Objects.ObjectQuery%601.OfType%2A>至<xref:System.Data.Objects.ObjectQuery%601>。</xref:System.Data.Objects.ObjectQuery%601>方法</xref:System.Data.Objects.ObjectQuery%601.OfType%2A> 如果資料繫結是唯讀，，則不需要 EntityTypeFilter 屬性。 在此情況下，查詢所傳回之物件的屬性將會是 theentity 集的預設實體類型。"
  syntax:
    content: public string EntityTypeFilter { get; set; }
    return:
      type: System.String
      description: "篩選運算式。"
  overload: System.Web.UI.WebControls.EntityDataSource.EntityTypeFilter*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.GetView(System.String)
  id: GetView(System.String)
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: GetView(String)
  nameWithType: EntityDataSource.GetView(String)
  fullName: System.Web.UI.WebControls.EntityDataSource.GetView(String)
  type: Method
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "取得與資料來源控制項相關聯的具名的資料來源檢視。"
  remarks: "<xref:System.Web.UI.WebControls.EntityDataSource>控制項支援只有一個資料來源檢視。</xref:System.Web.UI.WebControls.EntityDataSource> 就像所有的資料來源檢視物件，<xref:System.Web.UI.WebControls.EntityDataSourceView>定義其功能與資料來源控制項相關聯的物件時，會執行所有的工作都是從基礎資料庫中，擷取資料所需，且執行作業，例如排序、 插入、 刪除和更新。</xref:System.Web.UI.WebControls.EntityDataSourceView>"
  syntax:
    content: protected override System.Web.UI.DataSourceView GetView (string viewName);
    parameters:
    - id: viewName
      type: System.String
      description: "要擷取之檢視的名稱。 因為<xref href=&quot;System.Web.UI.WebControls.EntityDataSource&quot;></xref>控制項只支援一個檢視，`viewName`會被忽略。"
    return:
      type: System.Web.UI.DataSourceView
      description: "<xref href=&quot;System.Web.UI.WebControls.EntityDataSourceView&quot;> </xref>相關聯<xref href=&quot;System.Web.UI.WebControls.EntityDataSource&quot;></xref>控制項。"
  overload: System.Web.UI.WebControls.EntityDataSource.GetView*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.GetViewNames
  id: GetViewNames
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: GetViewNames()
  nameWithType: EntityDataSource.GetViewNames()
  fullName: System.Web.UI.WebControls.EntityDataSource.GetViewNames()
  type: Method
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "取得集合，表示清單的檢視表物件的名稱相關聯的<xref href=&quot;System.Web.UI.WebControls.EntityDataSource&quot;></xref>控制項。"
  remarks: "<xref:System.Web.UI.WebControls.EntityDataSource>控制項只支援一個檢視其基礎資料。</xref:System.Web.UI.WebControls.EntityDataSource> GetViewNames 方法會傳回此一檢視名稱的單一項目集合，做為字串。"
  syntax:
    content: protected override System.Collections.ICollection GetViewNames ();
    parameters: []
    return:
      type: System.Collections.ICollection
      description: "<xref:System.Collections.ICollection>，其中包含相關聯的檢視表名稱<xref href=&quot;System.Web.UI.WebControls.EntityDataSource&quot;></xref>控制項。</xref:System.Collections.ICollection>"
  overload: System.Web.UI.WebControls.EntityDataSource.GetViewNames*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.GroupBy
  id: GroupBy
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: GroupBy
  nameWithType: EntityDataSource.GroupBy
  fullName: System.Web.UI.WebControls.EntityDataSource.GroupBy
  type: Property
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "取得或設定指定如何分組查詢結果的 Entity SQL 運算式。"
  syntax:
    content: public string GroupBy { get; set; }
    return:
      type: System.String
      description: "GROUP BY 子句。"
  overload: System.Web.UI.WebControls.EntityDataSource.GroupBy*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.Include
  id: Include
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: Include
  nameWithType: EntityDataSource.Include
  fullName: System.Web.UI.WebControls.EntityDataSource.Include
  type: Property
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "取得或設定指定要在查詢結果中包含的相關的物件的運算式。"
  remarks: "Include 屬性<xref:System.Web.UI.WebControls.EntityDataSource>控制項指定以逗號分隔清單的查詢路徑的定義以及特別是查詢的物件傳回的物件 thatare。</xref:System.Web.UI.WebControls.EntityDataSource> 傳遞字串中每個以逗號分隔的值，而不需修改，為個別呼叫<xref:System.Data.Objects.ObjectQuery%601.Include%2A>方法<xref:System.Data.Objects.ObjectQuery%601>執行由[!INCLUDE[adonet_ef](~/add/includes/adonet-ef-md.md)]。</xref:System.Data.Objects.ObjectQuery%601> </xref:System.Data.Objects.ObjectQuery%601.Include%2A> 此查詢是藉由調節資料的來源<xref:System.Web.UI.WebControls.EntityDataSource>控制項。</xref:System.Web.UI.WebControls.EntityDataSource> 包含屬性是套用至引數<xref:System.Data.Objects.ObjectQuery%601>執行前。</xref:System.Data.Objects.ObjectQuery%601>       提供給包含屬性的字串以字串傳遞給<xref:System.Data.Objects.ObjectQuery%601.Include%2A>方法的<xref:System.Data.Objects.ObjectQuery%601>。</xref:System.Data.Objects.ObjectQuery%601></xref:System.Data.Objects.ObjectQuery%601.Include%2A>使用相同的格式 如需如何使用查詢路徑以自動載入相關的物件的範例，請參閱[How to︰ 使用圖形結果的查詢路徑](http://msdn.microsoft.com/en-us/100bf7f5-00ba-4c17-8e27-7a8a14831093)。       當包含屬性用來指定查詢路徑中時，相關實體的屬性可以只用於唯讀資料繫結。 如果相關的物件沒有明確包含在查詢路徑中，屬性描述元是否仍然可供資料繫結，但屬性本身會傳回 null 值。 在此情況下，您必須明確地以顯示其值載入相關的物件。 如需詳細資訊，請參閱[載入相關物件](http://msdn.microsoft.com/en-us/452347d2-7b3b-44cd-9001-231299a28cb1)。"
  example:
  - "The following XML markup defines a query path that returns `SalesOrderHeader` objects related to the returned `Contact` object. With each `SalesOrderHeader`, the related `SalesOrderDetail` and `Address` objects are also returned.  \n  \n<CodeContentPlaceHolder>0</CodeContentPlaceHolder>  \n The previous XML example is the same as the following <xref:System.Data.Objects.ObjectQuery%601> named `customers`:  \n  \n```  \nObjectQuery<Contact> customers =  \n      context.Contact  \n       .Where(\"it.ContactID = @ContactID\",  \n         new ObjectParameter(\"ContactID\", customerId))  \n        .Include(\"SalesOrderHeader.SalesOrderDetail\")  \n        .Include(\"SalesOrderHeader.Address\");  \n  \n```"
  syntax:
    content: public string Include { get; set; }
    return:
      type: System.String
      description: "在查詢結果中傳回查詢路徑的逗號分隔清單。"
  overload: System.Web.UI.WebControls.EntityDataSource.Include*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.Inserted
  id: Inserted
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: Inserted
  nameWithType: EntityDataSource.Inserted
  fullName: System.Web.UI.WebControls.EntityDataSource.Inserted
  type: Event
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "在資料來源建立新的物件之後發生。"
  remarks: "建立資料來源中加入的物件時，或將物件資料保存到資料來源時，發生錯誤，就會發生插入事件。 <xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.Entity%2A>屬性<xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs>物件用來存取已加入的物件。</xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs> </xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.Entity%2A>       此物件的屬性會包含從資料來源，包括任何與資料來源產生的值傳回的值。       如果物件會保存到資料來源時發生錯誤，引發插入事件和<xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.Exception%2A>屬性的<xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs>物件設定為傳回<xref:System.Exception>.</xref:System.Exception> </xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs> </xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.Exception%2A> 如果您處理插入的事件處理常式的例外狀況時，設定<xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.ExceptionHandled%2A>屬性`true`。</xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.ExceptionHandled%2A> 這可防止再次引發的例外狀況。 當您指定的值`false`如<xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.ExceptionHandled%2A>屬性，<xref:System.Web.UI.WebControls.EntityDataSource>重新引發例外狀況。</xref:System.Web.UI.WebControls.EntityDataSource> </xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.ExceptionHandled%2A>"
  syntax:
    content: public event EventHandler<System.Web.UI.WebControls.EntityDataSourceChangedEventArgs> Inserted;
    return:
      type: System.EventHandler{System.Web.UI.WebControls.EntityDataSourceChangedEventArgs}
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.Inserting
  id: Inserting
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: Inserting
  nameWithType: EntityDataSource.Inserting
  fullName: System.Web.UI.WebControls.EntityDataSource.Inserting
  type: Event
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "在新的物件會保存到資料來源之前發生。"
  remarks: "新的物件會保存到資料來源之前引發插入事件。 插入事件可讓您修改或確認要加入之物件、 新增不同的物件，或取消作業。 您可以存取的物件加入從<xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Entity%2A>屬性<xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs>物件。</xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs> </xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Entity%2A> 如果提供不同的物件，使用者會負責設定正確的實體類型<xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Entity%2A>屬性。</xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Entity%2A>       若要停止從所加入的物件，設定<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>屬性<xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs>物件`true`。</xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A>       如果建立新的物件時，就會發生錯誤，引發插入事件和<xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Exception%2A>屬性的<xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs>物件設定為傳回<xref:System.Exception>.</xref:System.Exception> </xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs> </xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Exception%2A>       當您處理插入的事件處理常式的例外狀況時，設定<xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.ExceptionHandled%2A>屬性`true`。</xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.ExceptionHandled%2A> 這可防止再次引發的例外狀況。 當您指定的值`false`如<xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.ExceptionHandled%2A>屬性，<xref:System.Web.UI.WebControls.EntityDataSource>重新引發例外狀況。</xref:System.Web.UI.WebControls.EntityDataSource> </xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.ExceptionHandled%2A>"
  syntax:
    content: public event EventHandler<System.Web.UI.WebControls.EntityDataSourceChangingEventArgs> Inserting;
    return:
      type: System.EventHandler{System.Web.UI.WebControls.EntityDataSourceChangingEventArgs}
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.InsertParameters
  id: InsertParameters
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: InsertParameters
  nameWithType: EntityDataSource.InsertParameters
  fullName: System.Web.UI.WebControls.EntityDataSource.InsertParameters
  type: Property
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "取得插入作業期間所使用的參數的集合。"
  remarks: "ASP.NET 4 或更早版本為目標的 web 應用程式，屬性值會儲存在檢視狀態，並自動回傳之間維護。 ASP.NET 4.5 為目標的 web 應用程式，屬性值不會儲存檢視狀態中，您必須設定每個 HTTP 要求值。"
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection InsertParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "插入作業期間所使用的參數。"
  overload: System.Web.UI.WebControls.EntityDataSource.InsertParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.LoadControlState(System.Object)
  id: LoadControlState(System.Object)
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: LoadControlState(Object)
  nameWithType: EntityDataSource.LoadControlState(Object)
  fullName: System.Web.UI.WebControls.EntityDataSource.LoadControlState(Object)
  type: Method
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "載入中的屬性狀態<xref href=&quot;System.Web.UI.WebControls.EntityDataSource&quot;></xref>需要保存的控制項。"
  syntax:
    content: protected override void LoadControlState (object savedState);
    parameters:
    - id: savedState
      type: System.Object
      description: "<xref:System.Object>，其中包含狀態資訊。</xref:System.Object>"
  overload: System.Web.UI.WebControls.EntityDataSource.LoadControlState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.OnInit(System.EventArgs)
  id: OnInit(System.EventArgs)
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: OnInit(EventArgs)
  nameWithType: EntityDataSource.OnInit(EventArgs)
  fullName: System.Web.UI.WebControls.EntityDataSource.OnInit(EventArgs)
  type: Method
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "新增<xref href=&quot;System.Web.UI.Page.LoadComplete&quot;></xref>事件處理常式來<xref href=&quot;System.Web.UI.Page&quot;></xref>包含控制項<xref href=&quot;System.Web.UI.WebControls.EntityDataSource&quot;></xref>控制項。"
  syntax:
    content: protected override void OnInit (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>物件，其中包含事件資料。</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.EntityDataSource.OnInit*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.OnUnload(System.EventArgs)
  id: OnUnload(System.EventArgs)
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: OnUnload(EventArgs)
  nameWithType: EntityDataSource.OnUnload(EventArgs)
  fullName: System.Web.UI.WebControls.EntityDataSource.OnUnload(EventArgs)
  type: Method
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "引發<xref href=&quot;System.Web.UI.Control.Unload&quot;></xref>事件。"
  syntax:
    content: protected override void OnUnload (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>物件，其中包含事件資料。</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.EntityDataSource.OnUnload*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.OrderBy
  id: OrderBy
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: OrderBy
  nameWithType: EntityDataSource.OrderBy
  fullName: System.Web.UI.WebControls.EntityDataSource.OrderBy
  type: Property
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "取得或設定指定如何排序查詢結果的 Entity SQL 運算式。"
  remarks: 'OrderBy 屬性<xref:System.Web.UI.WebControls.EntityDataSource>控制項是一個字串，代表 Entity SQL 查詢的運算式。</xref:System.Web.UI.WebControls.EntityDataSource> 這個字串會傳遞，而不需修改，為<xref:System.Data.Objects.ObjectQuery%601>執行由[!INCLUDE[adonet_ef](~/add/includes/adonet-ef-md.md)]。</xref:System.Data.Objects.ObjectQuery%601> 此查詢是藉由調節資料的來源<xref:System.Web.UI.WebControls.EntityDataSource>控制項。</xref:System.Web.UI.WebControls.EntityDataSource> 提供給 OrderBy 屬性的字串以字串傳遞給<xref:System.Data.Objects.ObjectQuery%601.OrderBy%2A>方法的<xref:System.Data.Objects.ObjectQuery%601>。</xref:System.Data.Objects.ObjectQuery%601></xref:System.Data.Objects.ObjectQuery%601.OrderBy%2A>使用相同的格式 如需如何使用子句來排序查詢結果的範例，請參閱[如何︰ 排序資料](http://msdn.microsoft.com/en-us/c05f2506-cb9d-4ebc-822b-300042ad53e7)。'
  example:
  - "The XML markup in the following example, in an .aspx file, retrieves a value from a control and passes it as a parameter to the <xref:System.Web.UI.WebControls.EntityDataSource.Where%2A> property.  \n  \n<CodeContentPlaceHolder>0</CodeContentPlaceHolder>  \n The previous XML example is equivalent to the following <xref:System.Data.Objects.ObjectQuery%601> named `onlineOrders`:  \n  \n```  \nObjectQuery<SalesOrderHeader> onlineOrders =  \n      context.SalesOrderHeader  \n       .Where(\"it.OnlineOrderFlag = TRUE AND it.TotalDue > @ordercost\",  \n         new ObjectParameter(\"ordercost\", orderCost))  \n        .OrderBy(\"it.TotalDue DESC\");  \n  \n```"
  syntax:
    content: public string OrderBy { get; set; }
    return:
      type: System.String
      description: "ORDER BY 子句。"
  overload: System.Web.UI.WebControls.EntityDataSource.OrderBy*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.OrderByParameters
  id: OrderByParameters
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: OrderByParameters
  nameWithType: EntityDataSource.OrderByParameters
  fullName: System.Web.UI.WebControls.EntityDataSource.OrderByParameters
  type: Property
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "取得用來建立 ORDER BY 子句的參數集合。"
  remarks: "當<xref:System.Web.UI.WebControls.EntityDataSource.AutoGenerateOrderByClause%2A>屬性<xref:System.Web.UI.WebControls.EntityDataSource>控制設為  `true`，控制項自動產生 ORDER BY 子句中的參數從<xref:System.Web.UI.WebControls.ParameterCollection>指派給 OrderByParameters 屬性。</xref:System.Web.UI.WebControls.ParameterCollection> </xref:System.Web.UI.WebControls.EntityDataSource> </xref:System.Web.UI.WebControls.EntityDataSource.AutoGenerateOrderByClause%2A> 這就不需要明確地指派至 ORDER BY 子句<xref:System.Web.UI.WebControls.EntityDataSource.OrderBy%2A>屬性。</xref:System.Web.UI.WebControls.EntityDataSource.OrderBy%2A> ORDER BY 子句，從 OrderByParameters 屬性建構要求<xref:System.Web.UI.WebControls.Parameter.Name%2A>參數集合中屬性的識別從查詢傳回之項目的單一屬性。</xref:System.Web.UI.WebControls.Parameter.Name%2A>"
  example:
  - "The following example automatically generates the ORDER BY clause and uses the value of the `orderByDropDownList` to set the value of the parameter.  \n  \n```  \n<asp:EntityDataSource ID=\"SalesOrderHeader\" runat=\"server\"   \n    ConnectionString=\"name=AdventureWorksEntities\"  \n    DefaultContainerName=\"AdventureWorksEntities\" EnableDelete=\"True\"   \n    EnableInsert=\"True\" EnableUpdate=\"True\" EntitySetName=\"SalesOrderHeader\"   \n    Where=\"it.OnlineOrderFlag = true\" AutoGenerateOrderByClause=\"True\">  \n    <OrderByParameters>  \n        <asp:ControlParameter Name=\"OrderByParameter\"   \n            ControlID=\"orderByDropDownList\" Type=\"String\" />  \n    </OrderByParameters>  \n</asp:EntityDataSource>  \n  \n```"
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection OrderByParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "用於建立 ORDER BY 子句的參數。"
  overload: System.Web.UI.WebControls.EntityDataSource.OrderByParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.QueryCreated
  id: QueryCreated
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: QueryCreated
  nameWithType: EntityDataSource.QueryCreated
  fullName: System.Web.UI.WebControls.EntityDataSource.QueryCreated
  type: Event
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "之後，就會發生<xref href=&quot;System.Web.UI.WebControls.EntityDataSource&quot;> </xref> Entity SQL 查詢所指定的組態期間，會建立<xref href=&quot;System.Web.UI.WebControls.EntityDataSource&quot;></xref>控制項。"
  remarks: "如需詳細資訊，請參閱[套用 LINQ 查詢以 EntityDataSource](http://msdn.microsoft.com/en-us/cb70db56-9f9d-4b79-98fe-f03dd5ad1e38)。"
  syntax:
    content: public event EventHandler<System.Web.UI.WebControls.QueryCreatedEventArgs> QueryCreated;
    return:
      type: System.EventHandler{System.Web.UI.WebControls.QueryCreatedEventArgs}
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.SaveControlState
  id: SaveControlState
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: SaveControlState()
  nameWithType: EntityDataSource.SaveControlState()
  fullName: System.Web.UI.WebControls.EntityDataSource.SaveControlState()
  type: Method
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "儲存中的屬性狀態<xref href=&quot;System.Web.UI.WebControls.EntityDataSource&quot;></xref>需要保存的控制項。"
  syntax:
    content: protected override object SaveControlState ();
    parameters: []
    return:
      type: System.Object
      description: "<xref:System.Object>，其中包含狀態資訊。</xref:System.Object>"
  overload: System.Web.UI.WebControls.EntityDataSource.SaveControlState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.Select
  id: Select
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: Select
  nameWithType: EntityDataSource.Select
  fullName: System.Web.UI.WebControls.EntityDataSource.Select
  type: Property
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "取得或設定投射，可定義要在查詢結果中包含的屬性。"
  remarks: "選取屬性<xref:System.Web.UI.WebControls.EntityDataSource>控制項包含表示 Entity SQL 查詢的陳述式的字串。</xref:System.Web.UI.WebControls.EntityDataSource> 這可讓您預測一組指定的查詢所傳回物件的屬性。       這個字串會傳遞，而不需修改，為<xref:System.Data.Objects.ObjectQuery%601>執行由[!INCLUDE[adonet_ef](~/add/includes/adonet-ef-md.md)]。</xref:System.Data.Objects.ObjectQuery%601> 此查詢是藉由調節資料的來源<xref:System.Web.UI.WebControls.EntityDataSource>控制項。</xref:System.Web.UI.WebControls.EntityDataSource> 為選取的屬性提供該字串使用相同的格式為傳遞給<xref:System.Data.Objects.ObjectQuery%601.Select%2A>方法的<xref:System.Data.Objects.ObjectQuery%601>。</xref:System.Data.Objects.ObjectQuery%601></xref:System.Data.Objects.ObjectQuery%601.Select%2A>字串 如需如何使用子句來定義查詢投影的範例，請參閱[如何︰ 執行查詢，傳回匿名類型的物件](http://msdn.microsoft.com/en-us/3b264025-e911-4d73-90ce-992d2b9d189d)。       預計的資料不支援更新。 這表示，當您使用選取的屬性來指定投影，繫結的資料繫結不支援更新。       當您定義投影啟用分頁時，您必須定義排序結果所依據的屬性。 這表示當您設定要定義投影之選取屬性，而且有<xref:System.Web.UI.WebControls.EntityDataSource.AutoPage%2A>設`true`，您也必須設定<xref:System.Web.UI.WebControls.EntityDataSource.OrderBy%2A>屬性來定義的順序，或設定<xref:System.Web.UI.WebControls.EntityDataSource.AutoGenerateOrderByClause%2A>屬性`true`和加入 ORDER BY 參數，以<xref:System.Web.UI.WebControls.EntityDataSource.OrderByParameters%2A>集合。</xref:System.Web.UI.WebControls.EntityDataSource.OrderByParameters%2A> </xref:System.Web.UI.WebControls.EntityDataSource.AutoGenerateOrderByClause%2A> </xref:System.Web.UI.WebControls.EntityDataSource.OrderBy%2A> </xref:System.Web.UI.WebControls.EntityDataSource.AutoPage%2A>       如果無法設定選取<xref:System.Web.UI.WebControls.EntityDataSource.EnableUpdate%2A>， <xref:System.Web.UI.WebControls.EntityDataSource.EnableDelete%2A>，或<xref:System.Web.UI.WebControls.EntityDataSource.EnableInsert%2A>已啟用。</xref:System.Web.UI.WebControls.EntityDataSource.EnableInsert%2A> </xref:System.Web.UI.WebControls.EntityDataSource.EnableDelete%2A> </xref:System.Web.UI.WebControls.EntityDataSource.EnableUpdate%2A>       如果選取設定為傳回屬性之預測的查詢 (例如， `SELECT p.ProductID, p. Name FROM AdventureWorksEntities.Products AS p`)、<xref:System.Data.Common.DbDataRecord>會傳回。</xref:System.Data.Common.DbDataRecord>"
  example:
  - "The following XML markup uses the Select property to specify a projection with six of the properties of the Product type:  \n  \n<CodeContentPlaceHolder>0</CodeContentPlaceHolder>  \n The previous XML example is the same as the following <xref:System.Data.Objects.ObjectQuery%601> named `products`:  \n  \n```  \nObjectQuery<Product> products = context.Product  \n    .Select(it.[ProductID], it.[Name], it.[ListPrice],   \n      it.[Size], it.[Style], it.[Weight])  \n    .OrderBy(\"it.[ProductID]\");  \n  \n```"
  syntax:
    content: public string Select { get; set; }
    return:
      type: System.String
      description: "用於建立 ORDER BY 子句的參數。"
  overload: System.Web.UI.WebControls.EntityDataSource.Select*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "當選取的屬性會指定查詢投影，而<> *>， <> </> *>，或<xref:System.Web.UI.WebControls.EntityDataSource.EnableInsert*>是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。</xref:System.Web.UI.WebControls.EntityDataSource.EnableInsert*>"
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.Selected
  id: Selected
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: Selected
  nameWithType: EntityDataSource.Selected
  fullName: System.Web.UI.WebControls.EntityDataSource.Selected
  type: Event
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "在執行查詢之後，就會發生。"
  remarks: "在執行查詢，並在傳回資料之後，就會引發選取事件。 如果查詢準備或執行期間發生錯誤時，它也會引發。       <xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs.Results%2A>屬性<xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs>物件包含<xref:System.Collections.IEnumerable>的查詢所傳回的物件。</xref:System.Collections.IEnumerable> </xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs> </xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs.Results%2A> 控制代碼選取事件，擷取和儲存在<xref:System.Web.UI.Control.ViewState%2A>.</xref:System.Web.UI.Control.ViewState%2A>傳回實體 這樣做可以保存的頁面上的物件變更。       <xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs.TotalRowCount%2A>屬性<xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs>物件中所有頁面，不論分頁的資料繫結控制項所傳送的值顯示的物件總數。</xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs> </xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs.TotalRowCount%2A> <xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs.TotalRowCount%2A>是只擷取資料繫結控制項需要它，例如，如果啟用分頁。</xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs.TotalRowCount%2A>       如果準備或執行查詢時，就會發生錯誤，則會引發選取事件，<xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs.Exception%2A>屬性<xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs>物件設為所傳回<xref:System.Exception>，而<xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs.Results%2A>屬性設定為`null`。</xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs.Results%2A> </xref:System.Exception> </xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs> </xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs.Exception%2A> 如果您處理選取的事件處理常式的例外狀況時，設定<xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs.ExceptionHandled%2A>屬性`true`。</xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs.ExceptionHandled%2A> 這可防止再次引發的例外狀況。 當您指定的值`false`如<xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.ExceptionHandled%2A>屬性，<xref:System.Web.UI.WebControls.EntityDataSource>重新引發例外狀況。</xref:System.Web.UI.WebControls.EntityDataSource> </xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.ExceptionHandled%2A>"
  syntax:
    content: public event EventHandler<System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs> Selected;
    return:
      type: System.EventHandler{System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs}
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.Selecting
  id: Selecting
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: Selecting
  nameWithType: EntityDataSource.Selecting
  fullName: System.Web.UI.WebControls.EntityDataSource.Selecting
  type: Event
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "在建構及執行查詢之前發生。"
  remarks: "建構及執行查詢之前，會引發在 Selecting 事件。 處理在 Selecting 事件，若要修改的組態<xref:System.Web.UI.WebControls.EntityDataSource>或讀取或建構及執行查詢之前，變更引數，從資料繫結控制項。</xref:System.Web.UI.WebControls.EntityDataSource>       設定<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>屬性<xref:System.Web.UI.WebControls.EntityDataSourceSelectingEventArgs>物件`true`以取消查詢。</xref:System.Web.UI.WebControls.EntityDataSourceSelectingEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 取消選取的作業時，會不傳回任何資料，資料繫結控制項。       如果`AllowPaging`設`true`在資料繫結控制項中，<xref:System.Web.UI.WebControls.EntityDataSource>叫用<xref:System.Data.Objects.ObjectQuery%601.Skip%2A>和<xref:System.Data.Objects.ObjectQuery%601.Top%2A>查詢產生器方法上<xref:System.Data.Objects.ObjectQuery%601>上使用的值<xref:System.Web.UI.DataSourceSelectArguments.StartRowIndex%2A>和<xref:System.Web.UI.DataSourceSelectArguments.MaximumRows%2A>屬性<xref:System.Web.UI.DataSourceSelectArguments>物件。</xref:System.Web.UI.DataSourceSelectArguments> </xref:System.Web.UI.DataSourceSelectArguments.MaximumRows%2A> </xref:System.Web.UI.DataSourceSelectArguments.StartRowIndex%2A> </xref:System.Data.Objects.ObjectQuery%601> </xref:System.Data.Objects.ObjectQuery%601.Top%2A> </xref:System.Data.Objects.ObjectQuery%601.Skip%2A> </xref:System.Web.UI.WebControls.EntityDataSource>       如果`AllowSorting`設`true`在資料繫結控制項中，<xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A>的<xref:System.Web.UI.DataSourceSelectArguments>物件可以處理在 Selecting 事件時變更。</xref:System.Web.UI.DataSourceSelectArguments> </xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A> 任何其他查詢運算子，例如 WHERE 或 ORDER BY、 網頁標記中指定會套用在 Selecting 事件引發之後。"
  syntax:
    content: public event EventHandler<System.Web.UI.WebControls.EntityDataSourceSelectingEventArgs> Selecting;
    return:
      type: System.EventHandler{System.Web.UI.WebControls.EntityDataSourceSelectingEventArgs}
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.SelectParameters
  id: SelectParameters
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: SelectParameters
  nameWithType: EntityDataSource.SelectParameters
  fullName: System.Web.UI.WebControls.EntityDataSource.SelectParameters
  type: Property
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "取得用來建立投影的參數集合。"
  remarks: "像<xref:System.Data.Objects.ObjectQuery%601.Select%2A>方法<xref:System.Data.Objects.ObjectQuery%601>類別，參數可以傳遞至所定義的投影<xref:System.Web.UI.WebControls.EntityDataSource.Select%2A>屬性。</xref:System.Web.UI.WebControls.EntityDataSource.Select%2A> </xref:System.Data.Objects.ObjectQuery%601> </xref:System.Data.Objects.ObjectQuery%601.Select%2A> SelectParameters 屬性<xref:System.Web.UI.WebControls.EntityDataSource>控制項指定<xref:System.Web.UI.WebControls.ParameterCollection>，其中包含要提供資訊給查詢的 SELECT 陳述式的參數。</xref:System.Web.UI.WebControls.ParameterCollection> </xref:System.Web.UI.WebControls.EntityDataSource> SelectParameters 屬性用於具名引數提供給字串中所指定的參數是指<xref:System.Web.UI.WebControls.EntityDataSource.Select%2A>屬性。</xref:System.Web.UI.WebControls.EntityDataSource.Select%2A>       如果未設定 SelectParametersproperty，會使用參數替代。 在 SELECT 陳述式前面加上的所有參數名稱&quot;`@&quot;`符號`,` <xref:System.Web.UI.WebControls.ParameterCollection>。</xref:System.Web.UI.WebControls.ParameterCollection>必須符合的名稱 <xref:System.Web.UI.WebControls.ParameterCollection>.</xref:System.Web.UI.WebControls.ParameterCollection>中的參數不允許 null 值"
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection SelectParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "用來建立投影參數。"
  overload: System.Web.UI.WebControls.EntityDataSource.SelectParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.StoreOriginalValuesInViewState
  id: StoreOriginalValuesInViewState
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: StoreOriginalValuesInViewState
  nameWithType: EntityDataSource.StoreOriginalValuesInViewState
  fullName: System.Web.UI.WebControls.EntityDataSource.StoreOriginalValuesInViewState
  type: Property
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "取得或設定值，指出是否應該將資料來源的資料儲存在檢視狀態，以確定到資料已不變更另一個處理序之前更新或刪除。"
  remarks: "若要追蹤變更時更新和刪除啟用作業時，<xref:System.Web.UI.WebControls.EntityDataSource>控制項必須儲存在<xref:System.Web.UI.PageStatePersister.ControlState%2A>.</xref:System.Web.UI.PageStatePersister.ControlState%2A>載入物件的原始值的相關資訊</xref:System.Web.UI.WebControls.EntityDataSource> 此必要的資訊儲存檢視狀態中，會增加的分頁大小。 您可以停用檢視狀態中，儲存原始值，StoreOriginalValuesInViewState 屬性設定為`false`。 如果這樣做，請[!INCLUDE[adonet_ef](~/add/includes/adonet-ef-md.md)]無法追蹤更新的物件中的並行存取。 如需詳細資訊，請參閱[更新資料 (EntityDataSource)](http://msdn.microsoft.com/en-us/ca153eec-6817-4c1d-b262-efd6d35b0246)。"
  syntax:
    content: public bool StoreOriginalValuesInViewState { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果值會儲存在檢視，狀態。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.EntityDataSource.StoreOriginalValuesInViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.System#Web#UI#WebControls#IQueryableDataSource#RaiseViewChanged
  id: System#Web#UI#WebControls#IQueryableDataSource#RaiseViewChanged
  isEii: true
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: System.Web.UI.WebControls.IQueryableDataSource.RaiseViewChanged()
  nameWithType: EntityDataSource.System.Web.UI.WebControls.IQueryableDataSource.RaiseViewChanged()
  fullName: System.Web.UI.WebControls.EntityDataSource.System.Web.UI.WebControls.IQueryableDataSource.RaiseViewChanged()
  type: Method
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "通知已變更的參數物件和資料繫結控制項需要重新整理的資料繫結控制項。"
  syntax:
    content: void IQueryableDataSource.RaiseViewChanged ();
    parameters: []
  overload: System.Web.UI.WebControls.EntityDataSource.System#Web#UI#WebControls#IQueryableDataSource#RaiseViewChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.TrackViewState
  id: TrackViewState
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: TrackViewState()
  nameWithType: EntityDataSource.TrackViewState()
  fullName: System.Web.UI.WebControls.EntityDataSource.TrackViewState()
  type: Method
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "導致加入伺服器控制項的檢視狀態變更追蹤，因此它們可以儲存在伺服器控制項的<xref href=&quot;System.Web.UI.StateBag&quot;></xref>物件。 這個物件是透過可存取&lt;xref:System.Web.UI.Control.ViewState%2A?displayProperty=fullName&gt;屬性。"
  remarks: "如需詳細資訊，請參閱<xref:System.Web.UI.Control.TrackViewState%2A>.</xref:System.Web.UI.Control.TrackViewState%2A>"
  syntax:
    content: protected override void TrackViewState ();
    parameters: []
  overload: System.Web.UI.WebControls.EntityDataSource.TrackViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.Updated
  id: Updated
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: Updated
  nameWithType: EntityDataSource.Updated
  fullName: System.Web.UI.WebControls.EntityDataSource.Updated
  type: Event
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "物件的變更已經保存到資料來源之後，就會發生。"
  remarks: "已更新事件引發時已修改物件的變更會保存到資料來源，或套用變更時，發生錯誤。 <xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.Entity%2A>屬性<xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs>物件用來存取已修改的物件。</xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs> </xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.Entity%2A>       此物件的屬性會包含從資料來源，包括任何伺服器產生的值傳回的值。       如果變更會保存到資料來源時，就會發生錯誤，會引發更新事件和<xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.Exception%2A>屬性的<xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs>物件設定為傳回<xref:System.Exception>.</xref:System.Exception> </xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs> </xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.Exception%2A> 如果您處理的例外狀況已更新事件處理常式中，設定<xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.ExceptionHandled%2A>屬性`true`。</xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.ExceptionHandled%2A> 這可防止再次引發的例外狀況。 當您指定的值`false`如<xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.ExceptionHandled%2A>屬性，<xref:System.Web.UI.WebControls.EntityDataSource>重新引發例外狀況。</xref:System.Web.UI.WebControls.EntityDataSource> </xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.ExceptionHandled%2A>"
  syntax:
    content: public event EventHandler<System.Web.UI.WebControls.EntityDataSourceChangedEventArgs> Updated;
    return:
      type: System.EventHandler{System.Web.UI.WebControls.EntityDataSourceChangedEventArgs}
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.UpdateParameters
  id: UpdateParameters
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: UpdateParameters
  nameWithType: EntityDataSource.UpdateParameters
  fullName: System.Web.UI.WebControls.EntityDataSource.UpdateParameters
  type: Property
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "取得更新作業期間所使用的參數的集合。"
  remarks: "ASP.NET 4 或更早版本為目標的 web 應用程式，屬性值會儲存在檢視狀態，並自動回傳之間維護。 ASP.NET 4.5 為目標的 web 應用程式，屬性值不會儲存檢視狀態中，您必須設定每個 HTTP 要求值。"
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection UpdateParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "更新作業期間所使用的參數。"
  overload: System.Web.UI.WebControls.EntityDataSource.UpdateParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.Updating
  id: Updating
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: Updating
  nameWithType: EntityDataSource.Updating
  fullName: System.Web.UI.WebControls.EntityDataSource.Updating
  type: Event
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "物件的變更會保存到資料來源之前發生。"
  remarks: "物件的屬性變更會保存到資料來源之前，會引發更新事件。 更新事件可讓您修改或驗證之物件的變更、 提供不同的物件，或之前所做的變更會保存取消作業。 您可以存取的已修改的物件，從<xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Entity%2A>屬性<xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs>物件。</xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs> </xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Entity%2A> 如果提供不同的物件，使用者會負責設定正確的實體類型<xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Entity%2A>屬性。</xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Entity%2A>       如果您必須修改處理更新事件<xref:System.Data.Objects.ObjectStateEntry>物件來設定不同的原始值的並行存取控制。</xref:System.Data.Objects.ObjectStateEntry> 如需詳細資訊，請參閱[儲存的變更和管理並行](http://msdn.microsoft.com/en-us/b8378601-4f26-4a05-a24a-f50aeb68610e)。       若要停止從保存的變更，請設定<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>屬性<xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs>物件`true`。</xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A>       如果具現化物件時，就會發生錯誤，或修改屬性，就會引發更新事件和<xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Exception%2A>屬性的<xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs>物件設定為傳回<xref:System.Exception>.</xref:System.Exception> </xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs> </xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Exception%2A>       當您處理的例外狀況，正在更新事件處理常式中時，設定<xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.ExceptionHandled%2A>屬性`true`。</xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.ExceptionHandled%2A> 這可防止再次引發的例外狀況。 當您指定的值`false`如<xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.ExceptionHandled%2A>屬性，<xref:System.Web.UI.WebControls.EntityDataSource>重新引發例外狀況。</xref:System.Web.UI.WebControls.EntityDataSource> </xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.ExceptionHandled%2A>"
  syntax:
    content: public event EventHandler<System.Web.UI.WebControls.EntityDataSourceChangingEventArgs> Updating;
    return:
      type: System.EventHandler{System.Web.UI.WebControls.EntityDataSourceChangingEventArgs}
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.Where
  id: Where
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: Where
  nameWithType: EntityDataSource.Where
  fullName: System.Web.UI.WebControls.EntityDataSource.Where
  type: Property
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "取得或設定指定如何篩選查詢結果的 Entity SQL 運算式。"
  remarks: "Where 屬性<xref:System.Web.UI.WebControls.EntityDataSource>控制項是一個字串，表示是 Entity SQL 查詢的述詞子句。</xref:System.Web.UI.WebControls.EntityDataSource> 這個字串會傳遞，而不需修改，為<xref:System.Data.Objects.ObjectQuery%601>執行由[!INCLUDE[adonet_ef](~/add/includes/adonet-ef-md.md)]。</xref:System.Data.Objects.ObjectQuery%601> 此查詢是藉由調節資料的來源<xref:System.Web.UI.WebControls.EntityDataSource>控制項。</xref:System.Web.UI.WebControls.EntityDataSource> 提供字串的屬性，請使用做為傳遞給<xref:System.Data.Objects.ObjectQuery%601.Where%2A>方法的<xref:System.Data.Objects.ObjectQuery%601>。</xref:System.Data.Objects.ObjectQuery%601></xref:System.Data.Objects.ObjectQuery%601.Where%2A>字串的相同的格式 如需如何使用子句來篩選查詢的範例，請參閱[如何︰ 篩選資料](http://msdn.microsoft.com/en-us/776f8556-3350-4572-804a-b1513515c1b2)。       若要篩選查詢結果所納入方程式實體類型屬性的運算式，請參閱資訊關於<xref:System.Web.UI.WebControls.EntityDataSource.AutoGenerateWhereClause%2A>屬性。</xref:System.Web.UI.WebControls.EntityDataSource.AutoGenerateWhereClause%2A>"
  example:
  - "The XML markup in the following example, in an .aspx file, retrieves a value from a control and passes it as a parameter to the Where property.  \n  \n<CodeContentPlaceHolder>0</CodeContentPlaceHolder>  \n The previous XML example is the same as the following <xref:System.Data.Objects.ObjectQuery%601> named `onlineOrders`:  \n  \n```  \nObjectQuery<SalesOrderHeader> onlineOrders =  \n      context.SalesOrderHeader  \n       .Where(\"it.OnlineOrderFlag = TRUE AND it.TotalDue > @ordercost\",  \n         new ObjectParameter(\"ordercost\", orderCost))  \n        .OrderBy(\"it.TotalDue DESC\");  \n```"
  syntax:
    content: public string Where { get; set; }
    return:
      type: System.String
      description: "WHERE 子句。"
  overload: System.Web.UI.WebControls.EntityDataSource.Where*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.WhereParameters
  id: WhereParameters
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: WhereParameters
  nameWithType: EntityDataSource.WhereParameters
  fullName: System.Web.UI.WebControls.EntityDataSource.WhereParameters
  type: Property
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "取得用來建立 WHERE 子句的參數集合。"
  remarks: "像<xref:System.Data.Objects.ObjectQuery%601.Where%2A>方法<xref:System.Data.Objects.ObjectQuery%601>類別，可以指派給此述詞來傳遞參數<xref:System.Web.UI.WebControls.EntityDataSource.Where%2A>屬性。</xref:System.Web.UI.WebControls.EntityDataSource.Where%2A> </xref:System.Data.Objects.ObjectQuery%601> </xref:System.Data.Objects.ObjectQuery%601.Where%2A> WhereParameters 屬性<xref:System.Web.UI.WebControls.EntityDataSource>控制項指定<xref:System.Web.UI.WebControls.ParameterCollection>，其中包含要提供資訊給查詢的 WHERE 子句的參數。</xref:System.Web.UI.WebControls.ParameterCollection> </xref:System.Web.UI.WebControls.EntityDataSource> WhereParameters 屬性用於具名引數提供給字串中所指定的參數是指<xref:System.Web.UI.WebControls.EntityDataSource.Where%2A>屬性。</xref:System.Web.UI.WebControls.EntityDataSource.Where%2A>       如果未設定 WhereParametersproperty，會使用參數替代。 WHERE 子句中的所有參數名稱前面加都上符號&quot;`@&quot;` <xref:System.Web.UI.WebControls.ParameterCollection>。</xref:System.Web.UI.WebControls.ParameterCollection>必須符合的名稱 <xref:System.Web.UI.WebControls.ParameterCollection>.</xref:System.Web.UI.WebControls.ParameterCollection>中的參數不允許 null 值"
  example:
  - "The XML markup in the following example, in an .aspx file, retrieves a value from a control and passes it as a parameter to the <xref:System.Web.UI.WebControls.EntityDataSource.Where%2A> property.  \n  \n```  \n<asp:EntityDataSource ID=\"SalesOrderHeader\" runat=\"server\"   \n  ConnectionString=\"name=AdventureWorksEntities\"   \n  DefaultContainerName=\"AdventureWorksEntities\" EnableDelete=\"True\"   \n  EnableInsert=\"True\" EnableUpdate=\"True\" EntitySetName=\"SalesOrderHeader\"   \n  EntityTypeFilter=\"\" OrderBy=\"it.TotalDue DESC\" Select=\"\"   \n   Where=\"it.OnlineOrderFlag = TRUE AND it.TotalDue > @ordercost\">  \n  <WhereParameters>  \n    <asp:ControlParameter ControlID=\"costLimit\" DbType=\"Int32\"   \n      DefaultValue=\"2500\" Name=\"ordercost\" PropertyName=\"Text\" />  \n  </WhereParameters>  \n</asp:EntityDataSource>  \n  \n```  \n  \n The previous XML example is the same as the following <xref:System.Data.Objects.ObjectQuery%601> named `onlineOrders`:  \n  \n```  \nObjectQuery<SalesOrderHeader> onlineOrders =  \n      context.SalesOrderHeader  \n       .Where(\"it.OnlineOrderFlag = TRUE AND it.TotalDue > @ordercost\",  \n         new ObjectParameter(\"ordercost\", orderCost))  \n        .OrderBy(\"it.TotalDue DESC\");  \n  \n```"
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection WhereParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "用來建立 WHERE 子句的參數。"
  overload: System.Web.UI.WebControls.EntityDataSource.WhereParameters*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.DataSourceControl
  isExternal: false
  name: System.Web.UI.DataSourceControl
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Web.UI.WebControls.EntityDataSource.#ctor
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: EntityDataSource()
  nameWithType: EntityDataSource.EntityDataSource()
  fullName: System.Web.UI.WebControls.EntityDataSource.EntityDataSource()
- uid: System.Web.UI.WebControls.EntityDataSource.#ctor(System.Data.EntityClient.EntityConnection)
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: EntityDataSource(EntityConnection)
  nameWithType: EntityDataSource.EntityDataSource(EntityConnection)
  fullName: System.Web.UI.WebControls.EntityDataSource.EntityDataSource(EntityConnection)
- uid: System.Data.EntityClient.EntityConnection
  parent: System.Data.EntityClient
  isExternal: false
  name: EntityConnection
  nameWithType: EntityConnection
  fullName: System.Data.EntityClient.EntityConnection
- uid: System.Web.UI.WebControls.EntityDataSource.AutoGenerateOrderByClause
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: AutoGenerateOrderByClause
  nameWithType: EntityDataSource.AutoGenerateOrderByClause
  fullName: System.Web.UI.WebControls.EntityDataSource.AutoGenerateOrderByClause
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.EntityDataSource.AutoGenerateWhereClause
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: AutoGenerateWhereClause
  nameWithType: EntityDataSource.AutoGenerateWhereClause
  fullName: System.Web.UI.WebControls.EntityDataSource.AutoGenerateWhereClause
- uid: System.Web.UI.WebControls.EntityDataSource.AutoPage
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: AutoPage
  nameWithType: EntityDataSource.AutoPage
  fullName: System.Web.UI.WebControls.EntityDataSource.AutoPage
- uid: System.Web.UI.WebControls.EntityDataSource.AutoSort
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: AutoSort
  nameWithType: EntityDataSource.AutoSort
  fullName: System.Web.UI.WebControls.EntityDataSource.AutoSort
- uid: System.Web.UI.WebControls.EntityDataSource.CommandParameters
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: CommandParameters
  nameWithType: EntityDataSource.CommandParameters
  fullName: System.Web.UI.WebControls.EntityDataSource.CommandParameters
- uid: System.Web.UI.WebControls.ParameterCollection
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ParameterCollection
  nameWithType: ParameterCollection
  fullName: System.Web.UI.WebControls.ParameterCollection
- uid: System.Web.UI.WebControls.EntityDataSource.CommandText
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: CommandText
  nameWithType: EntityDataSource.CommandText
  fullName: System.Web.UI.WebControls.EntityDataSource.CommandText
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.EntityDataSource.ConnectionString
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: ConnectionString
  nameWithType: EntityDataSource.ConnectionString
  fullName: System.Web.UI.WebControls.EntityDataSource.ConnectionString
- uid: System.Web.UI.WebControls.EntityDataSource.ContextCreated
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: ContextCreated
  nameWithType: EntityDataSource.ContextCreated
  fullName: System.Web.UI.WebControls.EntityDataSource.ContextCreated
- uid: System.EventHandler{System.Web.UI.WebControls.EntityDataSourceContextCreatedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<EntityDataSourceContextCreatedEventArgs>
  nameWithType: EventHandler<EntityDataSourceContextCreatedEventArgs>
  fullName: System.EventHandler<System.Web.UI.WebControls.EntityDataSourceContextCreatedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Web.UI.WebControls.EntityDataSourceContextCreatedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.UI.WebControls.EntityDataSourceContextCreatedEventArgs
    name: EntityDataSourceContextCreatedEventArgs
    nameWithType: EntityDataSourceContextCreatedEventArgs
    fullName: EntityDataSourceContextCreatedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.UI.WebControls.EntityDataSource.ContextCreating
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: ContextCreating
  nameWithType: EntityDataSource.ContextCreating
  fullName: System.Web.UI.WebControls.EntityDataSource.ContextCreating
- uid: System.EventHandler{System.Web.UI.WebControls.EntityDataSourceContextCreatingEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<EntityDataSourceContextCreatingEventArgs>
  nameWithType: EventHandler<EntityDataSourceContextCreatingEventArgs>
  fullName: System.EventHandler<System.Web.UI.WebControls.EntityDataSourceContextCreatingEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Web.UI.WebControls.EntityDataSourceContextCreatingEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.UI.WebControls.EntityDataSourceContextCreatingEventArgs
    name: EntityDataSourceContextCreatingEventArgs
    nameWithType: EntityDataSourceContextCreatingEventArgs
    fullName: EntityDataSourceContextCreatingEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.UI.WebControls.EntityDataSource.ContextDisposing
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: ContextDisposing
  nameWithType: EntityDataSource.ContextDisposing
  fullName: System.Web.UI.WebControls.EntityDataSource.ContextDisposing
- uid: System.EventHandler{System.Web.UI.WebControls.EntityDataSourceContextDisposingEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<EntityDataSourceContextDisposingEventArgs>
  nameWithType: EventHandler<EntityDataSourceContextDisposingEventArgs>
  fullName: System.EventHandler<System.Web.UI.WebControls.EntityDataSourceContextDisposingEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Web.UI.WebControls.EntityDataSourceContextDisposingEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.UI.WebControls.EntityDataSourceContextDisposingEventArgs
    name: EntityDataSourceContextDisposingEventArgs
    nameWithType: EntityDataSourceContextDisposingEventArgs
    fullName: EntityDataSourceContextDisposingEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.UI.WebControls.EntityDataSource.ContextType
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: ContextType
  nameWithType: EntityDataSource.ContextType
  fullName: System.Web.UI.WebControls.EntityDataSource.ContextType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.UI.WebControls.EntityDataSource.ContextTypeName
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: ContextTypeName
  nameWithType: EntityDataSource.ContextTypeName
  fullName: System.Web.UI.WebControls.EntityDataSource.ContextTypeName
- uid: System.Web.UI.WebControls.EntityDataSource.CreateView
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: CreateView()
  nameWithType: EntityDataSource.CreateView()
  fullName: System.Web.UI.WebControls.EntityDataSource.CreateView()
- uid: System.Web.UI.WebControls.EntityDataSourceView
  parent: System.Web.UI.WebControls
  isExternal: false
  name: EntityDataSourceView
  nameWithType: EntityDataSourceView
  fullName: System.Web.UI.WebControls.EntityDataSourceView
- uid: System.Web.UI.WebControls.EntityDataSource.DefaultContainerName
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: DefaultContainerName
  nameWithType: EntityDataSource.DefaultContainerName
  fullName: System.Web.UI.WebControls.EntityDataSource.DefaultContainerName
- uid: System.Web.UI.WebControls.EntityDataSource.Deleted
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: Deleted
  nameWithType: EntityDataSource.Deleted
  fullName: System.Web.UI.WebControls.EntityDataSource.Deleted
- uid: System.EventHandler{System.Web.UI.WebControls.EntityDataSourceChangedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<EntityDataSourceChangedEventArgs>
  nameWithType: EventHandler<EntityDataSourceChangedEventArgs>
  fullName: System.EventHandler<System.Web.UI.WebControls.EntityDataSourceChangedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Web.UI.WebControls.EntityDataSourceChangedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.UI.WebControls.EntityDataSourceChangedEventArgs
    name: EntityDataSourceChangedEventArgs
    nameWithType: EntityDataSourceChangedEventArgs
    fullName: EntityDataSourceChangedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.UI.WebControls.EntityDataSource.DeleteParameters
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: DeleteParameters
  nameWithType: EntityDataSource.DeleteParameters
  fullName: System.Web.UI.WebControls.EntityDataSource.DeleteParameters
- uid: System.Web.UI.WebControls.EntityDataSource.Deleting
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: Deleting
  nameWithType: EntityDataSource.Deleting
  fullName: System.Web.UI.WebControls.EntityDataSource.Deleting
- uid: System.EventHandler{System.Web.UI.WebControls.EntityDataSourceChangingEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<EntityDataSourceChangingEventArgs>
  nameWithType: EventHandler<EntityDataSourceChangingEventArgs>
  fullName: System.EventHandler<System.Web.UI.WebControls.EntityDataSourceChangingEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Web.UI.WebControls.EntityDataSourceChangingEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.UI.WebControls.EntityDataSourceChangingEventArgs
    name: EntityDataSourceChangingEventArgs
    nameWithType: EntityDataSourceChangingEventArgs
    fullName: EntityDataSourceChangingEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.UI.WebControls.EntityDataSource.EnableDelete
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: EnableDelete
  nameWithType: EntityDataSource.EnableDelete
  fullName: System.Web.UI.WebControls.EntityDataSource.EnableDelete
- uid: System.Web.UI.WebControls.EntityDataSource.EnableFlattening
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: EnableFlattening
  nameWithType: EntityDataSource.EnableFlattening
  fullName: System.Web.UI.WebControls.EntityDataSource.EnableFlattening
- uid: System.Web.UI.WebControls.EntityDataSource.EnableInsert
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: EnableInsert
  nameWithType: EntityDataSource.EnableInsert
  fullName: System.Web.UI.WebControls.EntityDataSource.EnableInsert
- uid: System.Web.UI.WebControls.EntityDataSource.EnableUpdate
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: EnableUpdate
  nameWithType: EntityDataSource.EnableUpdate
  fullName: System.Web.UI.WebControls.EntityDataSource.EnableUpdate
- uid: System.Web.UI.WebControls.EntityDataSource.EntitySetName
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: EntitySetName
  nameWithType: EntityDataSource.EntitySetName
  fullName: System.Web.UI.WebControls.EntityDataSource.EntitySetName
- uid: System.Web.UI.WebControls.EntityDataSource.EntityTypeFilter
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: EntityTypeFilter
  nameWithType: EntityDataSource.EntityTypeFilter
  fullName: System.Web.UI.WebControls.EntityDataSource.EntityTypeFilter
- uid: System.Web.UI.WebControls.EntityDataSource.GetView(System.String)
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: GetView(String)
  nameWithType: EntityDataSource.GetView(String)
  fullName: System.Web.UI.WebControls.EntityDataSource.GetView(String)
- uid: System.Web.UI.DataSourceView
  parent: System.Web.UI
  isExternal: false
  name: DataSourceView
  nameWithType: DataSourceView
  fullName: System.Web.UI.DataSourceView
- uid: System.Web.UI.WebControls.EntityDataSource.GetViewNames
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: GetViewNames()
  nameWithType: EntityDataSource.GetViewNames()
  fullName: System.Web.UI.WebControls.EntityDataSource.GetViewNames()
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Web.UI.WebControls.EntityDataSource.GroupBy
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: GroupBy
  nameWithType: EntityDataSource.GroupBy
  fullName: System.Web.UI.WebControls.EntityDataSource.GroupBy
- uid: System.Web.UI.WebControls.EntityDataSource.Include
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: Include
  nameWithType: EntityDataSource.Include
  fullName: System.Web.UI.WebControls.EntityDataSource.Include
- uid: System.Web.UI.WebControls.EntityDataSource.Inserted
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: Inserted
  nameWithType: EntityDataSource.Inserted
  fullName: System.Web.UI.WebControls.EntityDataSource.Inserted
- uid: System.Web.UI.WebControls.EntityDataSource.Inserting
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: Inserting
  nameWithType: EntityDataSource.Inserting
  fullName: System.Web.UI.WebControls.EntityDataSource.Inserting
- uid: System.Web.UI.WebControls.EntityDataSource.InsertParameters
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: InsertParameters
  nameWithType: EntityDataSource.InsertParameters
  fullName: System.Web.UI.WebControls.EntityDataSource.InsertParameters
- uid: System.Web.UI.WebControls.EntityDataSource.LoadControlState(System.Object)
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: LoadControlState(Object)
  nameWithType: EntityDataSource.LoadControlState(Object)
  fullName: System.Web.UI.WebControls.EntityDataSource.LoadControlState(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.EntityDataSource.OnInit(System.EventArgs)
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: OnInit(EventArgs)
  nameWithType: EntityDataSource.OnInit(EventArgs)
  fullName: System.Web.UI.WebControls.EntityDataSource.OnInit(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.UI.WebControls.EntityDataSource.OnUnload(System.EventArgs)
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: OnUnload(EventArgs)
  nameWithType: EntityDataSource.OnUnload(EventArgs)
  fullName: System.Web.UI.WebControls.EntityDataSource.OnUnload(EventArgs)
- uid: System.Web.UI.WebControls.EntityDataSource.OrderBy
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: OrderBy
  nameWithType: EntityDataSource.OrderBy
  fullName: System.Web.UI.WebControls.EntityDataSource.OrderBy
- uid: System.Web.UI.WebControls.EntityDataSource.OrderByParameters
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: OrderByParameters
  nameWithType: EntityDataSource.OrderByParameters
  fullName: System.Web.UI.WebControls.EntityDataSource.OrderByParameters
- uid: System.Web.UI.WebControls.EntityDataSource.QueryCreated
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: QueryCreated
  nameWithType: EntityDataSource.QueryCreated
  fullName: System.Web.UI.WebControls.EntityDataSource.QueryCreated
- uid: System.EventHandler{System.Web.UI.WebControls.QueryCreatedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<QueryCreatedEventArgs>
  nameWithType: EventHandler<QueryCreatedEventArgs>
  fullName: System.EventHandler<System.Web.UI.WebControls.QueryCreatedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Web.UI.WebControls.QueryCreatedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.UI.WebControls.QueryCreatedEventArgs
    name: QueryCreatedEventArgs
    nameWithType: QueryCreatedEventArgs
    fullName: QueryCreatedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.UI.WebControls.EntityDataSource.SaveControlState
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: SaveControlState()
  nameWithType: EntityDataSource.SaveControlState()
  fullName: System.Web.UI.WebControls.EntityDataSource.SaveControlState()
- uid: System.Web.UI.WebControls.EntityDataSource.Select
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: Select
  nameWithType: EntityDataSource.Select
  fullName: System.Web.UI.WebControls.EntityDataSource.Select
- uid: System.Web.UI.WebControls.EntityDataSource.Selected
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: Selected
  nameWithType: EntityDataSource.Selected
  fullName: System.Web.UI.WebControls.EntityDataSource.Selected
- uid: System.EventHandler{System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<EntityDataSourceSelectedEventArgs>
  nameWithType: EventHandler<EntityDataSourceSelectedEventArgs>
  fullName: System.EventHandler<System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs
    name: EntityDataSourceSelectedEventArgs
    nameWithType: EntityDataSourceSelectedEventArgs
    fullName: EntityDataSourceSelectedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.UI.WebControls.EntityDataSource.Selecting
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: Selecting
  nameWithType: EntityDataSource.Selecting
  fullName: System.Web.UI.WebControls.EntityDataSource.Selecting
- uid: System.EventHandler{System.Web.UI.WebControls.EntityDataSourceSelectingEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<EntityDataSourceSelectingEventArgs>
  nameWithType: EventHandler<EntityDataSourceSelectingEventArgs>
  fullName: System.EventHandler<System.Web.UI.WebControls.EntityDataSourceSelectingEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Web.UI.WebControls.EntityDataSourceSelectingEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.UI.WebControls.EntityDataSourceSelectingEventArgs
    name: EntityDataSourceSelectingEventArgs
    nameWithType: EntityDataSourceSelectingEventArgs
    fullName: EntityDataSourceSelectingEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.UI.WebControls.EntityDataSource.SelectParameters
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: SelectParameters
  nameWithType: EntityDataSource.SelectParameters
  fullName: System.Web.UI.WebControls.EntityDataSource.SelectParameters
- uid: System.Web.UI.WebControls.EntityDataSource.StoreOriginalValuesInViewState
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: StoreOriginalValuesInViewState
  nameWithType: EntityDataSource.StoreOriginalValuesInViewState
  fullName: System.Web.UI.WebControls.EntityDataSource.StoreOriginalValuesInViewState
- uid: System.Web.UI.WebControls.EntityDataSource.System#Web#UI#WebControls#IQueryableDataSource#RaiseViewChanged
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: System.Web.UI.WebControls.IQueryableDataSource.RaiseViewChanged()
  nameWithType: EntityDataSource.System.Web.UI.WebControls.IQueryableDataSource.RaiseViewChanged()
  fullName: System.Web.UI.WebControls.EntityDataSource.System.Web.UI.WebControls.IQueryableDataSource.RaiseViewChanged()
- uid: System.Web.UI.WebControls.EntityDataSource.TrackViewState
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: TrackViewState()
  nameWithType: EntityDataSource.TrackViewState()
  fullName: System.Web.UI.WebControls.EntityDataSource.TrackViewState()
- uid: System.Web.UI.WebControls.EntityDataSource.Updated
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: Updated
  nameWithType: EntityDataSource.Updated
  fullName: System.Web.UI.WebControls.EntityDataSource.Updated
- uid: System.Web.UI.WebControls.EntityDataSource.UpdateParameters
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: UpdateParameters
  nameWithType: EntityDataSource.UpdateParameters
  fullName: System.Web.UI.WebControls.EntityDataSource.UpdateParameters
- uid: System.Web.UI.WebControls.EntityDataSource.Updating
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: Updating
  nameWithType: EntityDataSource.Updating
  fullName: System.Web.UI.WebControls.EntityDataSource.Updating
- uid: System.Web.UI.WebControls.EntityDataSource.Where
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: Where
  nameWithType: EntityDataSource.Where
  fullName: System.Web.UI.WebControls.EntityDataSource.Where
- uid: System.Web.UI.WebControls.EntityDataSource.WhereParameters
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: WhereParameters
  nameWithType: EntityDataSource.WhereParameters
  fullName: System.Web.UI.WebControls.EntityDataSource.WhereParameters
- uid: System.Web.UI.WebControls.EntityDataSource.#ctor*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: EntityDataSource
  nameWithType: EntityDataSource.EntityDataSource
- uid: System.Web.UI.WebControls.EntityDataSource.AutoGenerateOrderByClause*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: AutoGenerateOrderByClause
  nameWithType: EntityDataSource.AutoGenerateOrderByClause
- uid: System.Web.UI.WebControls.EntityDataSource.AutoGenerateWhereClause*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: AutoGenerateWhereClause
  nameWithType: EntityDataSource.AutoGenerateWhereClause
- uid: System.Web.UI.WebControls.EntityDataSource.AutoPage*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: AutoPage
  nameWithType: EntityDataSource.AutoPage
- uid: System.Web.UI.WebControls.EntityDataSource.AutoSort*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: AutoSort
  nameWithType: EntityDataSource.AutoSort
- uid: System.Web.UI.WebControls.EntityDataSource.CommandParameters*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: CommandParameters
  nameWithType: EntityDataSource.CommandParameters
- uid: System.Web.UI.WebControls.EntityDataSource.CommandText*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: CommandText
  nameWithType: EntityDataSource.CommandText
- uid: System.Web.UI.WebControls.EntityDataSource.ConnectionString*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: ConnectionString
  nameWithType: EntityDataSource.ConnectionString
- uid: System.Web.UI.WebControls.EntityDataSource.ContextType*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: ContextType
  nameWithType: EntityDataSource.ContextType
- uid: System.Web.UI.WebControls.EntityDataSource.ContextTypeName*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: ContextTypeName
  nameWithType: EntityDataSource.ContextTypeName
- uid: System.Web.UI.WebControls.EntityDataSource.CreateView*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: CreateView
  nameWithType: EntityDataSource.CreateView
- uid: System.Web.UI.WebControls.EntityDataSource.DefaultContainerName*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: DefaultContainerName
  nameWithType: EntityDataSource.DefaultContainerName
- uid: System.Web.UI.WebControls.EntityDataSource.DeleteParameters*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: DeleteParameters
  nameWithType: EntityDataSource.DeleteParameters
- uid: System.Web.UI.WebControls.EntityDataSource.EnableDelete*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: EnableDelete
  nameWithType: EntityDataSource.EnableDelete
- uid: System.Web.UI.WebControls.EntityDataSource.EnableFlattening*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: EnableFlattening
  nameWithType: EntityDataSource.EnableFlattening
- uid: System.Web.UI.WebControls.EntityDataSource.EnableInsert*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: EnableInsert
  nameWithType: EntityDataSource.EnableInsert
- uid: System.Web.UI.WebControls.EntityDataSource.EnableUpdate*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: EnableUpdate
  nameWithType: EntityDataSource.EnableUpdate
- uid: System.Web.UI.WebControls.EntityDataSource.EntitySetName*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: EntitySetName
  nameWithType: EntityDataSource.EntitySetName
- uid: System.Web.UI.WebControls.EntityDataSource.EntityTypeFilter*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: EntityTypeFilter
  nameWithType: EntityDataSource.EntityTypeFilter
- uid: System.Web.UI.WebControls.EntityDataSource.GetView*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: GetView
  nameWithType: EntityDataSource.GetView
- uid: System.Web.UI.WebControls.EntityDataSource.GetViewNames*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: GetViewNames
  nameWithType: EntityDataSource.GetViewNames
- uid: System.Web.UI.WebControls.EntityDataSource.GroupBy*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: GroupBy
  nameWithType: EntityDataSource.GroupBy
- uid: System.Web.UI.WebControls.EntityDataSource.Include*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: Include
  nameWithType: EntityDataSource.Include
- uid: System.Web.UI.WebControls.EntityDataSource.InsertParameters*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: InsertParameters
  nameWithType: EntityDataSource.InsertParameters
- uid: System.Web.UI.WebControls.EntityDataSource.LoadControlState*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: LoadControlState
  nameWithType: EntityDataSource.LoadControlState
- uid: System.Web.UI.WebControls.EntityDataSource.OnInit*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: OnInit
  nameWithType: EntityDataSource.OnInit
- uid: System.Web.UI.WebControls.EntityDataSource.OnUnload*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: OnUnload
  nameWithType: EntityDataSource.OnUnload
- uid: System.Web.UI.WebControls.EntityDataSource.OrderBy*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: OrderBy
  nameWithType: EntityDataSource.OrderBy
- uid: System.Web.UI.WebControls.EntityDataSource.OrderByParameters*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: OrderByParameters
  nameWithType: EntityDataSource.OrderByParameters
- uid: System.Web.UI.WebControls.EntityDataSource.SaveControlState*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: SaveControlState
  nameWithType: EntityDataSource.SaveControlState
- uid: System.Web.UI.WebControls.EntityDataSource.Select*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: Select
  nameWithType: EntityDataSource.Select
- uid: System.Web.UI.WebControls.EntityDataSource.SelectParameters*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: SelectParameters
  nameWithType: EntityDataSource.SelectParameters
- uid: System.Web.UI.WebControls.EntityDataSource.StoreOriginalValuesInViewState*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: StoreOriginalValuesInViewState
  nameWithType: EntityDataSource.StoreOriginalValuesInViewState
- uid: System.Web.UI.WebControls.EntityDataSource.System#Web#UI#WebControls#IQueryableDataSource#RaiseViewChanged*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: System.Web.UI.WebControls.IQueryableDataSource.RaiseViewChanged
  nameWithType: EntityDataSource.System.Web.UI.WebControls.IQueryableDataSource.RaiseViewChanged
- uid: System.Web.UI.WebControls.EntityDataSource.TrackViewState*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: TrackViewState
  nameWithType: EntityDataSource.TrackViewState
- uid: System.Web.UI.WebControls.EntityDataSource.UpdateParameters*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: UpdateParameters
  nameWithType: EntityDataSource.UpdateParameters
- uid: System.Web.UI.WebControls.EntityDataSource.Where*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: Where
  nameWithType: EntityDataSource.Where
- uid: System.Web.UI.WebControls.EntityDataSource.WhereParameters*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: WhereParameters
  nameWithType: EntityDataSource.WhereParameters
