### YamlMime:ManagedReference
items:
- uid: System.Web.Security.Membership
  id: Membership
  children:
  - System.Web.Security.Membership.ApplicationName
  - System.Web.Security.Membership.CreateUser(System.String,System.String)
  - System.Web.Security.Membership.CreateUser(System.String,System.String,System.String)
  - System.Web.Security.Membership.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Web.Security.MembershipCreateStatus@)
  - System.Web.Security.Membership.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)
  - System.Web.Security.Membership.DeleteUser(System.String)
  - System.Web.Security.Membership.DeleteUser(System.String,System.Boolean)
  - System.Web.Security.Membership.EnablePasswordReset
  - System.Web.Security.Membership.EnablePasswordRetrieval
  - System.Web.Security.Membership.FindUsersByEmail(System.String)
  - System.Web.Security.Membership.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)
  - System.Web.Security.Membership.FindUsersByName(System.String)
  - System.Web.Security.Membership.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)
  - System.Web.Security.Membership.GeneratePassword(System.Int32,System.Int32)
  - System.Web.Security.Membership.GetAllUsers
  - System.Web.Security.Membership.GetAllUsers(System.Int32,System.Int32,System.Int32@)
  - System.Web.Security.Membership.GetNumberOfUsersOnline
  - System.Web.Security.Membership.GetUser
  - System.Web.Security.Membership.GetUser(System.Boolean)
  - System.Web.Security.Membership.GetUser(System.Object)
  - System.Web.Security.Membership.GetUser(System.String)
  - System.Web.Security.Membership.GetUser(System.Object,System.Boolean)
  - System.Web.Security.Membership.GetUser(System.String,System.Boolean)
  - System.Web.Security.Membership.GetUserNameByEmail(System.String)
  - System.Web.Security.Membership.HashAlgorithmType
  - System.Web.Security.Membership.MaxInvalidPasswordAttempts
  - System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters
  - System.Web.Security.Membership.MinRequiredPasswordLength
  - System.Web.Security.Membership.PasswordAttemptWindow
  - System.Web.Security.Membership.PasswordStrengthRegularExpression
  - System.Web.Security.Membership.Provider
  - System.Web.Security.Membership.Providers
  - System.Web.Security.Membership.RequiresQuestionAndAnswer
  - System.Web.Security.Membership.UpdateUser(System.Web.Security.MembershipUser)
  - System.Web.Security.Membership.UserIsOnlineTimeWindow
  - System.Web.Security.Membership.ValidateUser(System.String,System.String)
  - System.Web.Security.Membership.ValidatingPassword
  langs:
  - csharp
  name: Membership
  nameWithType: Membership
  fullName: System.Web.Security.Membership
  type: Class
  summary: "驗證使用者認證並管理使用者設定。 這個類別無法被繼承。"
  remarks: "成員資格類別用於 ASP.NET 應用程式中，以驗證使用者認證和管理使用者設定，例如密碼和電子郵件地址。 可以使用成員資格類別，其本身，或搭配<xref:System.Web.Security.FormsAuthentication>建立完整的系統來驗證 Web 應用程式或網站的使用者。</xref:System.Web.Security.FormsAuthentication> <xref:System.Web.UI.WebControls.Login>控制項封裝提供方便的機制，來驗證使用者的成員資格類別。</xref:System.Web.UI.WebControls.Login>      > [!NOTE] > 如果您不熟悉的 ASP.NET 成員資格功能，請參閱[成員資格簡介](~/add/includes/ajax-current-ext-md.md)才能繼續。 如需與成員資格相關的其他主題的清單，請參閱[使用成員資格管理使用者](~/add/includes/ajax-current-ext-md.md)。       成員資格類別提供了功能:-建立新的使用者。      -Microsoft SQL Server 或替代資料存放區中，儲存成員資格資訊 （使用者名稱、 密碼、 電子郵件地址和支援的資料）。      -驗證使用者造訪您的網站。 您可以驗證使用者，以程式設計的方式，或者您可以使用<xref:System.Web.UI.WebControls.Login>控制項來建立需要少量或沒有程式碼的完整驗證系統。</xref:System.Web.UI.WebControls.Login>      -管理密碼，包括建立、 變更、 擷取和重設，依此類推。 您可以選擇性地設定為需要密碼問題和解答，以驗證忘記密碼的使用者的密碼重設或擷取要求的 ASP.NET 成員資格。       雖然 ASP.NET 成員資格為 ASP.NET 用於驗證的獨立功能，它可以與 ASP.NET 角色管理可提供您的網站的授權服務整合。 成員資格也可以與 ASP.NET 使用者整合<xref:System.Web.Profile>提供可調整的應用程式專屬自訂個別的使用者。</xref:System.Web.Profile> 如需詳細資訊，請參閱[了解角色管理](~/add/includes/ajax-current-ext-md.md)和[ASP.NET 設定檔屬性概觀](~/add/includes/ajax-current-ext-md.md)。       成員資格類別必須仰賴成員資格提供者進行通訊與資料來源。 .NET Framework 包含<xref:System.Web.Security.SqlMembershipProvider>，它會將使用者資訊儲存在 Microsoft SQL Server 資料庫中，和<xref:System.Web.Security.ActiveDirectoryMembershipProvider>，可讓您將 Active Directory 或 Active Directory 應用程式模式 (ADAM) 的伺服器上儲存使用者資訊。</xref:System.Web.Security.ActiveDirectoryMembershipProvider> </xref:System.Web.Security.SqlMembershipProvider> 您也可以實作自訂成員資格提供者與可以在成員資格類別所使用的替代的資料來源通訊。 自訂成員資格提供者會繼承<xref:System.Web.Security.MembershipProvider>抽象類別。</xref:System.Web.Security.MembershipProvider> 如需詳細資訊，請參閱[實作成員資格提供者](~/add/includes/ajax-current-ext-md.md)。       根據預設，ASP.NET 成員資格會啟用所有 ASP.NET 應用程式。 預設成員資格提供者是<xref:System.Web.Security.SqlMembershipProvider>和名稱的機器組態中指定`AspNetSqlProvider`。</xref:System.Web.Security.SqlMembershipProvider> 預設執行個體<xref:System.Web.Security.SqlMembershipProvider>設定為連接到 Microsoft SQL Server 的本機執行個體。</xref:System.Web.Security.SqlMembershipProvider>       您可以修改預設設定，以指定<xref:System.Web.Security.SqlMembershipProvider>以外`AspNetSqlProvider`做為預設提供者執行個體，或是指定的自訂提供者執行個體指定為使用 Web.config 檔案的 ASP.NET 應用程式的預設提供者。</xref:System.Web.Security.SqlMembershipProvider> 您可以指定 ASP.NET 成員資格設定 Web 應用程式的 Web.config 檔案中使用的組態區段。 您可以使用`providers`子區段的區段，以指定其中一個預設提供者以外的成員資格提供者。 下列章節，例如從目前的應用程式組態中移除預設的成員資格提供者並新增新的提供者的名稱`SqlProvider`連接至具名的 SQL Server 執行個體`AspSqlServer`。      ```   <configuration>     <connectionStrings>       <add name=&quot;SqlServices&quot; connectionString=&quot;Data Source=AspSqlServer;Integrated Security=SSPI;Initial Catalog=aspnetdb;&quot; />     </connectionStrings>     <system.web>       <membership defaultProvider=&quot;SqlProvider&quot; userIsOnlineTimeWindow=&quot;20&quot;>         <providers>           <remove name=&quot;AspNetSqlProvider&quot; />           <add name=&quot;SqlProvider&quot;             type=&quot;System.Web.Security.SqlMembershipProvider&quot;             connectionStringName=&quot;SqlServices&quot;             enablePasswordRetrieval=&quot;false&quot;             enablePasswordReset=&quot;true&quot;             requiresQuestionAndAnswer=&quot;true&quot;             passwordFormat=&quot;Hashed&quot;             applicationName=&quot;/&quot; />         </providers>       </membership>     </system.web>   </configuration>   ```"
  example:
  - "The following code example shows the login page for an ASP.NET application configured to use forms authentication and ASP.NET membership. If the supplied user credentials are invalid, a message is displayed to the user. Otherwise, the user is redirected to the originally requested URL using the <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> method.  \n  \n> [!NOTE]\n>  The ASP.NET login controls (<xref:System.Web.UI.WebControls.Login>, <xref:System.Web.UI.WebControls.LoginView>, <xref:System.Web.UI.WebControls.LoginStatus>, <xref:System.Web.UI.WebControls.LoginName>, and <xref:System.Web.UI.WebControls.PasswordRecovery>) encapsulate virtually all of the logic required to prompt users for credentials and validate the credentials in the membership system and can be used in place of programmatic checking using the Membership class.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#1](~/add/codesnippet/csharp/t-system.web.security.me_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#1](~/add/codesnippet/visualbasic/t-system.web.security.me_1.aspx)]"
  syntax:
    content: public static class Membership
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Security.Membership.ApplicationName
  id: ApplicationName
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: ApplicationName
  nameWithType: Membership.ApplicationName
  fullName: System.Web.Security.Membership.ApplicationName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "取得或設定應用程式的名稱。"
  remarks: "應用程式名稱用來識別應用程式特定的使用者。 也就是相同的使用者名稱可以存在多個 ASP.NET 應用程式指定不同的應用程式名稱的資料庫中。 這可讓多個應用程式使用相同的資料庫來儲存使用者資訊而不發生重複的使用者名稱衝突。 或者，多個 ASP.NET 應用程式可以使用相同的使用者資料庫，藉由指定相同的應用程式名稱。 應用程式名稱可以用程式設計方式或以宣告方式設定 Web 應用程式的組態中。      > [!CAUTION] > 因為所有由提供服務的要求會使用單一預設成員資格提供者執行個體<xref:System.Web.HttpApplication>物件，您可以有多個要求同時執行，而且嘗試設定 ApplicationName 屬性值。</xref:System.Web.HttpApplication> ApplicationName 屬性不是執行緒安全的多個寫入時，並將變更 ApplicationName 屬性值會導致非預期的行為，應用程式的多個使用者。 我們建議您避免撰寫程式碼，除非您必須讓使用者設定 [ApplicationName] 屬性中。 ApplicationName 屬性設定，可能需要的應用程式的範例是管理多個應用程式的成員資格資料的系統管理應用程式。 這類應用程式應該在單一使用者應用程式並不是 Web 應用程式。"
  example:
  - "The following code example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies that the application use a <xref:System.Web.Security.SqlMembershipProvider> instance and sets the ApplicationName to `MyApplication`.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\" userIsOnlineTimeWindow=\"20\">  \n  <providers>  \n    <add name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      enablePasswordRetrieval=\"true\"  \n      enablePasswordReset=\"false\"  \n      requiresQuestionAndAnswer=\"true\"  \n      passwordFormat=\"Encrypted\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</membership>  \n```"
  syntax:
    content: public static string ApplicationName { get; set; }
    return:
      type: System.String
      description: "應用程式的名稱。"
  overload: System.Web.Security.Membership.ApplicationName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.CreateUser(System.String,System.String)
  id: CreateUser(System.String,System.String)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: CreateUser(String,String)
  nameWithType: Membership.CreateUser(String,String)
  fullName: System.Web.Security.Membership.CreateUser(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "將新的使用者加入至資料存放區。"
  remarks: "CreateUser 資料存放區中加入新的使用者，並傳回<xref:System.Web.Security.MembershipUser>新建立的使用者物件。</xref:System.Web.Security.MembershipUser> 如果使用者建立失敗，<xref:System.Web.Security.MembershipCreateUserException>就會擲回。</xref:System.Web.Security.MembershipCreateUserException> 您可以擷取<xref:System.Web.Security.MembershipCreateStatus>值<xref:System.Web.Security.MembershipCreateUserException.StatusCode%2A>屬性<xref:System.Web.Security.MembershipCreateUserException>，指出使用者建立失敗的原因。</xref:System.Web.Security.MembershipCreateUserException> </xref:System.Web.Security.MembershipCreateUserException.StatusCode%2A> </xref:System.Web.Security.MembershipCreateStatus>       當已建立成員資格使用者，而且您擁有的參考<xref:System.Web.Security.MembershipUser>物件為該使用者，您可以修改該使用者的設定與<xref:System.Web.Security.MembershipUser>公用方法，例如<xref:System.Web.Security.MembershipUser.ChangePasswordQuestionAndAnswer%2A>應用程式其中<xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A>是`true`，或藉由設定的屬性值<xref:System.Web.Security.MembershipUser>物件並將其傳遞至<xref:System.Web.Security.Membership.UpdateUser%2A>方法。</xref:System.Web.Security.Membership.UpdateUser%2A> </xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> </xref:System.Web.Security.MembershipUser.ChangePasswordQuestionAndAnswer%2A> </xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUser>       如果使用者已存在於應用程式的資料來源，您可以取得<xref:System.Web.Security.MembershipUser>與現有的使用者物件<xref:System.Web.Security.Membership.GetUser%2A>方法。</xref:System.Web.Security.Membership.GetUser%2A> </xref:System.Web.Security.MembershipUser>       <xref:System.Web.Security.SqlMembershipProvider>提供選項，以針對每個使用者需要唯一的電子郵件地址。</xref:System.Web.Security.SqlMembershipProvider> 如果<xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A>屬性是`true`，您必須使用其中一個 CreateUser 多載，可讓您指定要建立的使用者電子郵件地址。</xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A> 否則，<xref:System.Web.Security.MembershipCreateUserException>就會擲回。</xref:System.Web.Security.MembershipCreateUserException>       所有參數值會都修剪開頭和尾端空白。"
  example:
  - "The following code example creates a new user for an ASP.NET application configured to use forms authentication and ASP.NET membership. If the user is not created successfully, a message is displayed to the user. Otherwise, the user is redirected to the login page for the application.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Security.Membership#2](~/add/codesnippet/csharp/m-system.web.security.me_0_1.aspx)]\n [!code-vb[System.Web.Security.Membership#2](~/add/codesnippet/visualbasic/m-system.web.security.me_0_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUser CreateUser (string username, string password);
    parameters:
    - id: username
      type: System.String
      description: "新的使用者的使用者名稱。"
    - id: password
      type: System.String
      description: "新使用者的密碼。"
    return:
      type: System.Web.Security.MembershipUser
      description: "A<xref:System.Web.Security.MembershipUser>新建立的使用者物件。</xref:System.Web.Security.MembershipUser>"
  overload: System.Web.Security.Membership.CreateUser*
  exceptions:
  - type: System.Web.Security.MembershipCreateUserException
    commentId: T:System.Web.Security.MembershipCreateUserException
    description: "未建立使用者。 請檢查<xref:System.Web.Security.MembershipCreateUserException.StatusCode*>屬性<xref:System.Web.Security.MembershipCreateStatus>值。</xref:System.Web.Security.MembershipCreateStatus> </xref:System.Web.Security.MembershipCreateUserException.StatusCode*>"
  platform:
  - net462
- uid: System.Web.Security.Membership.CreateUser(System.String,System.String,System.String)
  id: CreateUser(System.String,System.String,System.String)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: CreateUser(String,String,String)
  nameWithType: Membership.CreateUser(String,String,String)
  fullName: System.Web.Security.Membership.CreateUser(String,String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "將具有指定的電子郵件地址的新使用者加入至資料存放區。"
  remarks: "<xref:System.Web.Security.Membership.CreateUser%2A>將新的使用者加入至資料存放區，並傳回<xref:System.Web.Security.MembershipUser>新建立的使用者物件。</xref:System.Web.Security.MembershipUser></xref:System.Web.Security.Membership.CreateUser%2A> 如果使用者建立失敗，<xref:System.Web.Security.MembershipCreateUserException>就會擲回。</xref:System.Web.Security.MembershipCreateUserException> 您可以擷取<xref:System.Web.Security.MembershipCreateStatus>值<xref:System.Web.Security.MembershipCreateUserException.StatusCode%2A>屬性<xref:System.Web.Security.MembershipCreateUserException>，指出使用者建立失敗的原因。</xref:System.Web.Security.MembershipCreateUserException> </xref:System.Web.Security.MembershipCreateUserException.StatusCode%2A> </xref:System.Web.Security.MembershipCreateStatus>       當已建立成員資格使用者，而且您擁有的參考<xref:System.Web.Security.MembershipUser>物件為該使用者，您可以修改該使用者的設定與<xref:System.Web.Security.MembershipUser>公用方法，例如<xref:System.Web.Security.MembershipUser.ChangePasswordQuestionAndAnswer%2A>應用程式其中<xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A>是`true`，或藉由設定的屬性值<xref:System.Web.Security.MembershipUser>物件並將其傳遞至<xref:System.Web.Security.Membership.UpdateUser%2A>方法。</xref:System.Web.Security.Membership.UpdateUser%2A> </xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> </xref:System.Web.Security.MembershipUser.ChangePasswordQuestionAndAnswer%2A> </xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUser>       如果使用者已存在於應用程式的資料來源，您可以取得<xref:System.Web.Security.MembershipUser>與現有的使用者物件<xref:System.Web.Security.Membership.GetUser%2A>方法。</xref:System.Web.Security.Membership.GetUser%2A> </xref:System.Web.Security.MembershipUser>       所有參數值會都修剪開頭和尾端空白。"
  example:
  - "The following code example creates a new user for an ASP.NET application configured to use forms authentication and ASP.NET membership. If the user is not created successfully, a message is displayed to the user. Otherwise, the user is redirected to the login page for the application.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Web.Security.Membership#1](~/add/codesnippet/visualbasic/8cf35595-ec0c-4c08-b671-_1.aspx)]\n [!code-cs[System.Web.Security.Membership#1](~/add/codesnippet/csharp/8cf35595-ec0c-4c08-b671-_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUser CreateUser (string username, string password, string email);
    parameters:
    - id: username
      type: System.String
      description: "新的使用者的使用者名稱。"
    - id: password
      type: System.String
      description: "新使用者的密碼。"
    - id: email
      type: System.String
      description: "新使用者的電子郵件地址。"
    return:
      type: System.Web.Security.MembershipUser
      description: "A<xref:System.Web.Security.MembershipUser>新建立的使用者物件。</xref:System.Web.Security.MembershipUser>"
  overload: System.Web.Security.Membership.CreateUser*
  exceptions:
  - type: System.Web.Security.MembershipCreateUserException
    commentId: T:System.Web.Security.MembershipCreateUserException
    description: "未建立使用者。 請檢查<xref:System.Web.Security.MembershipCreateUserException.StatusCode*>屬性<xref:System.Web.Security.MembershipCreateStatus>值。</xref:System.Web.Security.MembershipCreateStatus> </xref:System.Web.Security.MembershipCreateUserException.StatusCode*>"
  platform:
  - net462
- uid: System.Web.Security.Membership.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Web.Security.MembershipCreateStatus@)
  id: CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Web.Security.MembershipCreateStatus@)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: CreateUser(String,String,String,String,String,Boolean,MembershipCreateStatus)
  nameWithType: Membership.CreateUser(String,String,String,String,String,Boolean,MembershipCreateStatus)
  fullName: System.Web.Security.Membership.CreateUser(String,String,String,String,String,Boolean,MembershipCreateStatus)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "將具有指定的屬性值的新使用者加入至資料存放區，並傳回狀態參數，指出已成功建立使用者，或使用者建立失敗的原因。"
  remarks: "CreateUser 資料存放區中加入新的使用者，並傳回<xref:System.Web.Security.MembershipUser>新建立的使用者物件。</xref:System.Web.Security.MembershipUser> 如果使用者建立失敗時，您可以擷取<xref:System.Web.Security.MembershipCreateStatus>值`status`輸出參數，指出使用者建立失敗的原因。</xref:System.Web.Security.MembershipCreateStatus>       CreateUser 方法會傳回`null`如果`password`為空字串或`null`，`username`為空字串或`null`，或包含逗號 （，）、`passwordQuestion`不`null`並為空字串，或`passwordAnswer`不`null`和包含空字串。       當已建立成員資格使用者，而且您擁有的參考<xref:System.Web.Security.MembershipUser>物件為該使用者，您可以修改該使用者的設定與<xref:System.Web.Security.MembershipUser>公用方法和設定的屬性值<xref:System.Web.Security.MembershipUser>物件，然後再將傳遞<xref:System.Web.Security.MembershipUser>物件<xref:System.Web.Security.Membership.UpdateUser%2A>方法。</xref:System.Web.Security.Membership.UpdateUser%2A> </xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUser>       如果使用者已存在於應用程式的資料來源，您可以取得<xref:System.Web.Security.MembershipUser>與現有的使用者物件<xref:System.Web.Security.Membership.GetUser%2A>方法。</xref:System.Web.Security.Membership.GetUser%2A> </xref:System.Web.Security.MembershipUser>       修剪開頭和尾端空白是所有字串參數值。"
  example:
  - "The following code example creates a new user for an ASP.NET application configured to use forms authentication and ASP.NET membership. If the user is not created successfully, a message is displayed to the user. Otherwise, the user is redirected to the login page for the application.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#2](~/add/codesnippet/csharp/baa4c01c-297e-4ec6-a9d9-_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#2](~/add/codesnippet/visualbasic/baa4c01c-297e-4ec6-a9d9-_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUser CreateUser (string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, out System.Web.Security.MembershipCreateStatus status);
    parameters:
    - id: username
      type: System.String
      description: "新的使用者的使用者名稱。"
    - id: password
      type: System.String
      description: "新使用者的密碼。"
    - id: email
      type: System.String
      description: "新使用者的電子郵件地址。"
    - id: passwordQuestion
      type: System.String
      description: "成員資格使用者的密碼問題值。"
    - id: passwordAnswer
      type: System.String
      description: "成員資格使用者的密碼解答值。"
    - id: isApproved
      type: System.Boolean
      description: "布林值，指出是否已核准新的使用者登入。"
    - id: status
      type: System.Web.Security.MembershipCreateStatus
      description: "A<xref:System.Web.Security.MembershipCreateStatus>指出使用者已成功建立失敗的原因。</xref:System.Web.Security.MembershipCreateStatus>"
    return:
      type: System.Web.Security.MembershipUser
      description: "A<xref:System.Web.Security.MembershipUser>新建立的使用者物件。</xref:System.Web.Security.MembershipUser> 如果未建立使用者，則這個方法會傳回<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.Security.Membership.CreateUser*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)
  id: CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: CreateUser(String,String,String,String,String,Boolean,Object,MembershipCreateStatus)
  nameWithType: Membership.CreateUser(String,String,String,String,String,Boolean,Object,MembershipCreateStatus)
  fullName: System.Web.Security.Membership.CreateUser(String,String,String,String,String,Boolean,Object,MembershipCreateStatus)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "將新的使用者具有指定的屬性值和唯一識別碼加入至資料存放區，並傳回狀態參數，指出已成功建立使用者，或使用者建立失敗的原因。"
  remarks: "CreateUser 資料存放區中加入新的使用者，並傳回<xref:System.Web.Security.MembershipUser>新建立的使用者物件。</xref:System.Web.Security.MembershipUser> 如果使用者建立失敗時，您可以擷取<xref:System.Web.Security.MembershipCreateStatus>值`status`輸出參數，指出使用者建立失敗的原因。</xref:System.Web.Security.MembershipCreateStatus> 您可以藉由指定使用者，例如資料庫中，主索引鍵值的唯一識別碼`providerUserKey`參數。       CreateUser 方法會傳回`null`如果`password`為空字串或`null`，`username`為空字串或`null`，或包含逗號 （，）、`passwordQuestion`不`null`且包含空字串，或`passwordAnswer`不`null`和包含空字串。       當已建立成員資格使用者，而且您擁有的參考<xref:System.Web.Security.MembershipUser>物件為該使用者，您可以修改該使用者的設定與<xref:System.Web.Security.MembershipUser>公用方法和設定的屬性值<xref:System.Web.Security.MembershipUser>物件，然後再將傳遞<xref:System.Web.Security.MembershipUser>物件<xref:System.Web.Security.Membership.UpdateUser%2A>方法。</xref:System.Web.Security.Membership.UpdateUser%2A> </xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUser>       如果使用者已存在於應用程式的資料來源，您可以取得<xref:System.Web.Security.MembershipUser>與現有的使用者物件<xref:System.Web.Security.Membership.GetUser%2A>方法。</xref:System.Web.Security.Membership.GetUser%2A> </xref:System.Web.Security.MembershipUser>       修剪開頭和尾端空白是所有字串參數值。"
  syntax:
    content: public static System.Web.Security.MembershipUser CreateUser (string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, object providerUserKey, out System.Web.Security.MembershipCreateStatus status);
    parameters:
    - id: username
      type: System.String
      description: "新的使用者的使用者名稱。"
    - id: password
      type: System.String
      description: "新使用者的密碼。"
    - id: email
      type: System.String
      description: "新使用者的電子郵件地址。"
    - id: passwordQuestion
      type: System.String
      description: "成員資格使用者的密碼問題值。"
    - id: passwordAnswer
      type: System.String
      description: "成員資格使用者的密碼解答值。"
    - id: isApproved
      type: System.Boolean
      description: "布林值，指出是否已核准新的使用者登入。"
    - id: providerUserKey
      type: System.Object
      description: "應該儲存在成員資格資料存放區使用者的使用者識別項。"
    - id: status
      type: System.Web.Security.MembershipCreateStatus
      description: "A<xref:System.Web.Security.MembershipCreateStatus>表示使用者已成功建立，或建立失敗的原因。</xref:System.Web.Security.MembershipCreateStatus>"
    return:
      type: System.Web.Security.MembershipUser
      description: "A<xref:System.Web.Security.MembershipUser>新建立的使用者物件。</xref:System.Web.Security.MembershipUser> 如果未建立使用者，則這個方法會傳回<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.Security.Membership.CreateUser*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.DeleteUser(System.String)
  id: DeleteUser(System.String)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: DeleteUser(String)
  nameWithType: Membership.DeleteUser(String)
  fullName: System.Web.Security.Membership.DeleteUser(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "從資料庫刪除使用者和任何相關的使用者資料。"
  remarks: "使用者資料儲存在資料庫中的<xref:System.Web.Security.Roles>， <xref:System.Web.HttpContext.Profile%2A>，或<xref:System.Web.UI.WebControls.WebParts.WebPart>您正在使用時，會一併刪除個人化<xref:System.Web.Security.SqlRoleProvider>， <xref:System.Web.Profile.SqlProfileProvider>，和<xref:System.Web.UI.WebControls.WebParts.SqlPersonalizationProvider>儲存資料的物件。</xref:System.Web.UI.WebControls.WebParts.SqlPersonalizationProvider> </xref:System.Web.Profile.SqlProfileProvider> </xref:System.Web.Security.SqlRoleProvider> </xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.HttpContext.Profile%2A> </xref:System.Web.Security.Roles>"
  example:
  - "The following code example deletes the currently logged-on user and all related data.  \n  \n [!code-vb[System.Web.Security.Membership#8](~/add/codesnippet/visualbasic/m-system.web.security.me_11_1.aspx)]\n [!code-cs[System.Web.Security.Membership#8](~/add/codesnippet/csharp/m-system.web.security.me_11_1.aspx)]"
  syntax:
    content: public static bool DeleteUser (string username);
    parameters:
    - id: username
      type: System.String
      description: "要刪除的使用者名稱。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果已刪除使用者。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.Security.Membership.DeleteUser*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>username</code>為空字串，或包含逗號 （，）。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>username</code>是<xref uid=&quot;langword_csharp_null.&quot; name=&quot;null.&quot; href=&quot;&quot;></xref>"
  platform:
  - net462
- uid: System.Web.Security.Membership.DeleteUser(System.String,System.Boolean)
  id: DeleteUser(System.String,System.Boolean)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: DeleteUser(String,Boolean)
  nameWithType: Membership.DeleteUser(String,Boolean)
  fullName: System.Web.Security.Membership.DeleteUser(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "從資料庫刪除使用者。"
  remarks: "從資料庫中刪除的使用者只會刪除從設定`applicationName`。       如果`deleteAllRelatedData`是`true`，使用者資料儲存在資料庫中的<xref:System.Web.Security.Roles>， <xref:System.Web.HttpContext.Profile%2A>，或<xref:System.Web.UI.WebControls.WebParts.WebPart>您正在使用時，會一併刪除個人化<xref:System.Web.Security.SqlRoleProvider>， <xref:System.Web.Profile.SqlProfileProvider>，和<xref:System.Web.UI.WebControls.WebParts.SqlPersonalizationProvider>儲存資料的物件。</xref:System.Web.UI.WebControls.WebParts.SqlPersonalizationProvider> </xref:System.Web.Profile.SqlProfileProvider> </xref:System.Web.Security.SqlRoleProvider> </xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.HttpContext.Profile%2A> </xref:System.Web.Security.Roles>"
  example:
  - "The following code example deletes the currently logged-on user and all related data.  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#6](~/add/codesnippet/csharp/m-system.web.security.me_12_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#6](~/add/codesnippet/visualbasic/m-system.web.security.me_12_1.aspx)]"
  syntax:
    content: public static bool DeleteUser (string username, bool deleteAllRelatedData);
    parameters:
    - id: username
      type: System.String
      description: "要刪除的使用者名稱。"
    - id: deleteAllRelatedData
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要刪除從資料庫與使用者相關的資料<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>以保留在資料庫中使用者相關的資料。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果已刪除使用者。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.Security.Membership.DeleteUser*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>username</code>為空字串，或包含逗號 （，）。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>username</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.Membership.EnablePasswordReset
  id: EnablePasswordReset
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: EnablePasswordReset
  nameWithType: Membership.EnablePasswordReset
  fullName: System.Web.Security.Membership.EnablePasswordReset
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "取得值，指出是否要將目前的成員資格提供者設定成允許使用者重設其密碼。"
  remarks: "密碼重設是 ASP.NET 成員資格來取代目前的使用者名稱密碼與新的隨機產生的密碼，當使用者忘記其密碼，或目前的密碼不再有效的功能。 這是特別有用，當密碼格式設定為<xref:System.Web.Security.MembershipPasswordFormat>，因為使用者無法擷取雜湊的密碼值。</xref:System.Web.Security.MembershipPasswordFormat>"
  example:
  - "The following code example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> and enables password reset.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\" userIsOnlineTimeWindow=\"20\">  \n  <providers>  \n    <add name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      enablePasswordRetrieval=\"false\"  \n      enablePasswordReset=\"true\"  \n      requiresQuestionAndAnswer=\"true\"  \n      passwordFormat=\"Hashed\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</membership>  \n```  \n  \n The following code example first verifies that EnablePasswordReset is `true`, then resets a user's password and returns the new, automatically generated password.  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#8](~/add/codesnippet/csharp/p-system.web.security.me_2_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#8](~/add/codesnippet/visualbasic/p-system.web.security.me_2_1.aspx)]"
  syntax:
    content: public static bool EnablePasswordReset { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果成員資格提供者支援密碼重設。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.Security.Membership.EnablePasswordReset*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.EnablePasswordRetrieval
  id: EnablePasswordRetrieval
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: EnablePasswordRetrieval
  nameWithType: Membership.EnablePasswordRetrieval
  fullName: System.Web.Security.Membership.EnablePasswordRetrieval
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "取得值，指出是否要將目前的成員資格提供者設定成允許使用者擷取其密碼。"
  remarks: "如果是 EnablePasswordRetrieval `false`，基礎的成員資格提供者可能會擲回<xref:System.Web.HttpException>.</xref:System.Web.HttpException>       隨附於.NET Framework 提供者支援增強的密碼安全性的多個密碼格式。 如果密碼格式設定為<xref:System.Web.Security.MembershipPasswordFormat>，則使用者不能從資料庫擷取現有的密碼。</xref:System.Web.Security.MembershipPasswordFormat> <xref:System.Web.Security.MembershipPasswordFormat>密碼格式提供的密碼值的單向編碼方式。</xref:System.Web.Security.MembershipPasswordFormat> 密碼是 「 雜湊 」，且相較於儲存在資料庫中進行驗證的值。 「 雜湊 」 的值不能未編碼來擷取原始的密碼值。 如需詳細資訊，請參閱<xref:System.Web.Security.MembershipPasswordFormat>.</xref:System.Web.Security.MembershipPasswordFormat>"
  example:
  - "The following code example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> and enables password retrieval.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\" userIsOnlineTimeWindow=\"20\">  \n  <providers>  \n    <add name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      enablePasswordRetrieval=\"true\"  \n      enablePasswordReset=\"false\"  \n      requiresQuestionAndAnswer=\"false\"  \n      passwordFormat=\"Encrypted\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</membership>  \n```  \n  \n The following code example first verifies that EnablePasswordRetrieval is `true`, then retrieves the password for a specified user name and sends it to the e-mail address for the specified user.  \n  \n> [!IMPORTANT]\n>  Returning a password in clear text using e-mail is not recommended for sites that require a high level of security. For high-security sites, we recommend that you return passwords using encryption, such as SSL.  \n>   \n>  This example includes a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Web.Security.SqlMembershipProvider#4](~/add/codesnippet/visualbasic/p-system.web.security.me_4_1.aspx)]\n [!code-cs[System.Web.Security.SqlMembershipProvider#4](~/add/codesnippet/csharp/p-system.web.security.me_4_1.aspx)]"
  syntax:
    content: public static bool EnablePasswordRetrieval { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果成員資格提供者支援密碼擷取。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.Security.Membership.EnablePasswordRetrieval*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.FindUsersByEmail(System.String)
  id: FindUsersByEmail(System.String)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: FindUsersByEmail(String)
  nameWithType: Membership.FindUsersByEmail(String)
  fullName: System.Web.Security.Membership.FindUsersByEmail(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "取得成員資格使用者集合，其中電子郵件地址包含要符合的指定電子郵件地址。"
  remarks: "FindUsersByEmail 傳回清單成員資格使用者的電子郵件地址符合所提供的其中`emailToMatch`設定`applicationName`。       <xref:System.Web.Security.SqlMembershipProvider>執行使用 LIKE 子句針對其搜尋`emailToMatch`參數。</xref:System.Web.Security.SqlMembershipProvider> LIKE 子句可用於中的 SQL Server 所支援任何萬用字元`emailToMatch`參數值。"
  example:
  - "The following code example uses the FindUsersByEmail method to retrieve membership user information from the membership database based on user input and displays the results in pages of data.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Web.Security.Membership#9](~/add/codesnippet/visualbasic/m-system.web.security.me_10_1.aspx)]\n [!code-cs[System.Web.Security.Membership#9](~/add/codesnippet/csharp/m-system.web.security.me_10_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUserCollection FindUsersByEmail (string emailToMatch);
    parameters:
    - id: emailToMatch
      type: System.String
      description: "若要搜尋的電子郵件地址。"
    return:
      type: System.Web.Security.MembershipUserCollection
      description: "A <xref:System.Web.Security.MembershipUserCollection>，其中包含符合的所有使用者<code> emailToMatch </code>參數。</xref:System.Web.Security.MembershipUserCollection>       開頭和尾端空白會刪減<code> emailToMatch </code>參數值。"
  overload: System.Web.Security.Membership.FindUsersByEmail*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)
  id: FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: FindUsersByEmail(String,Int32,Int32,Int32)
  nameWithType: Membership.FindUsersByEmail(String,Int32,Int32,Int32)
  fullName: System.Web.Security.Membership.FindUsersByEmail(String,Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "取得成員資格使用者的集合在一頁資料，其中電子郵件地址包含要符合的指定電子郵件地址。"
  remarks: "FindUsersByEmail 傳回清單成員資格使用者的電子郵件地址符合所提供的其中`emailToMatch`設定`applicationName`。       <xref:System.Web.Security.SqlMembershipProvider>執行使用 LIKE 子句針對其搜尋`emailToMatch`參數。</xref:System.Web.Security.SqlMembershipProvider> LIKE 子句可用於中的 SQL Server 所支援任何萬用字元`emailToMatch`參數值。       FindUsersByEmail 所傳回的結果都會受到`pageIndex`和`pageSize`參數。 `pageSize`參數識別要在<xref:System.Web.Security.MembershipUserCollection>.</xref:System.Web.Security.MembershipUserCollection>傳回的<xref:System.Web.Security.MembershipUser>物件</xref:System.Web.Security.MembershipUser>數目上限 `pageIndex`參數識別要傳回，其中 0 識別的第一頁的結果的頁面。 `totalRecords`參數是`out`參數設為相符的成員資格使用者總數`emailToMatch`值。 比方說，如果 13 找不到使用者的位置`emailToMatch`比對的一部分或整個電子郵件地址，而`pageIndex`值為 1 以`pageSize`5，<xref:System.Web.Security.MembershipUserCollection>傳回會包含第 6 到傳回的第十個使用者。</xref:System.Web.Security.MembershipUserCollection> `totalRecords`會設定為 13。       開頭和尾端空白會刪減`emailToMatch`參數值。"
  example:
  - "The following code example uses the FindUsersByEmail method to retrieve membership user information from the membership database based on user input and displays the results in pages of data.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#13](~/add/codesnippet/csharp/1954016c-87a4-4acf-9d54-_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#13](~/add/codesnippet/visualbasic/1954016c-87a4-4acf-9d54-_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUserCollection FindUsersByEmail (string emailToMatch, int pageIndex, int pageSize, out int totalRecords);
    parameters:
    - id: emailToMatch
      type: System.String
      description: "若要搜尋的電子郵件地址。"
    - id: pageIndex
      type: System.Int32
      description: "要傳回的結果頁面的索引。 `pageIndex`以零為起始。"
    - id: pageSize
      type: System.Int32
      description: "要傳回的結果頁面大小。"
    - id: totalRecords
      type: System.Int32
      description: "相符的使用者總數。"
    return:
      type: System.Web.Security.MembershipUserCollection
      description: "A <xref:System.Web.Security.MembershipUserCollection>，其中包含一頁<code> pageSize </code> <xref:System.Web.Security.MembershipUser>物件所指定的頁面開始<code> pageIndex </code>。</xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUserCollection>"
  overload: System.Web.Security.Membership.FindUsersByEmail*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>pageIndex</code>小於零。       -或-<code>pageSize</code>小於 1。"
  platform:
  - net462
- uid: System.Web.Security.Membership.FindUsersByName(System.String)
  id: FindUsersByName(System.String)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: FindUsersByName(String)
  nameWithType: Membership.FindUsersByName(String)
  fullName: System.Web.Security.Membership.FindUsersByName(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "取得成員資格使用者集合，其中使用者名稱包含要符合的指定的使用者名稱。"
  remarks: "<xref:System.Web.Security.SqlMembershipProvider.FindUsersByName%2A>傳回清單的成員資格使用者的使用者名稱符合所提供的其中`usernameToMatch`設定`applicationName`。</xref:System.Web.Security.SqlMembershipProvider.FindUsersByName%2A>       <xref:System.Web.Security.SqlMembershipProvider>執行使用 LIKE 子句針對其搜尋`usernameToMatch`參數。</xref:System.Web.Security.SqlMembershipProvider> LIKE 子句可用於中的 SQL Server 所支援任何萬用字元`usernameToMatch`參數值。       所有參數值會都修剪開頭和尾端空白。"
  example:
  - "The following code example uses the FindUsersByName method to retrieve membership user information from the membership database based on user input and displays the results in pages of data.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Web.Security.Membership#10](~/add/codesnippet/visualbasic/m-system.web.security.me_6_1.aspx)]\n [!code-cs[System.Web.Security.Membership#10](~/add/codesnippet/csharp/m-system.web.security.me_6_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUserCollection FindUsersByName (string usernameToMatch);
    parameters:
    - id: usernameToMatch
      type: System.String
      description: "要搜尋的使用者名稱。"
    return:
      type: System.Web.Security.MembershipUserCollection
      description: "A <xref:System.Web.Security.MembershipUserCollection>，其中包含符合的所有使用者<code> usernameToMatch </code>參數。</xref:System.Web.Security.MembershipUserCollection>       開頭和尾端空白會刪減<code> usernameToMatch </code>參數值。"
  overload: System.Web.Security.Membership.FindUsersByName*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>usernameToMatch</code>為空字串。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>usernameToMatch</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.Membership.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)
  id: FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: FindUsersByName(String,Int32,Int32,Int32)
  nameWithType: Membership.FindUsersByName(String,Int32,Int32,Int32)
  fullName: System.Web.Security.Membership.FindUsersByName(String,Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "取得成員資格使用者的集合在一頁資料，其中使用者名稱包含要符合的指定的使用者名稱。"
  remarks: "<xref:System.Web.Security.SqlMembershipProvider.FindUsersByName%2A>傳回清單的成員資格使用者的使用者名稱符合所提供的其中`usernameToMatch`設定`applicationName`。</xref:System.Web.Security.SqlMembershipProvider.FindUsersByName%2A>       <xref:System.Web.Security.SqlMembershipProvider>執行使用 LIKE 子句針對其搜尋`usernameToMatch`參數。</xref:System.Web.Security.SqlMembershipProvider> LIKE 子句可用於中的 SQL Server 所支援任何萬用字元`usernameToMatch`參數值。       FindUsersByName 所傳回的結果都會受到`pageIndex`和`pageSize`參數。 `pageSize`參數識別要在<xref:System.Web.Security.MembershipUserCollection>.</xref:System.Web.Security.MembershipUserCollection>傳回的<xref:System.Web.Security.MembershipUser>物件</xref:System.Web.Security.MembershipUser>數目上限 `pageIndex`參數識別要傳回，其中 0 識別的第一頁的結果的頁面。 `totalRecords`參數是`out`參數設為相符的成員資格使用者總數`usernameToMatch`值。 比方說，如果 13 找不到使用者的位置`usernameToMatch`比對的一部分或整個使用者名稱，而`pageIndex`值為 1 以`pageSize`5，<xref:System.Web.Security.MembershipUserCollection>傳回會包含第 6 到傳回的第十個使用者。</xref:System.Web.Security.MembershipUserCollection> `totalRecords`會設定為 13。"
  example:
  - "The following code example uses the FindUsersByName method to retrieve membership user information from the membership database based on user input and displays the results in pages of data.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#12](~/add/codesnippet/csharp/4f01d951-55a8-446c-be57-_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#12](~/add/codesnippet/visualbasic/4f01d951-55a8-446c-be57-_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUserCollection FindUsersByName (string usernameToMatch, int pageIndex, int pageSize, out int totalRecords);
    parameters:
    - id: usernameToMatch
      type: System.String
      description: "要搜尋的使用者名稱。"
    - id: pageIndex
      type: System.Int32
      description: "要傳回的結果頁面的索引。 `pageIndex`以零為起始。"
    - id: pageSize
      type: System.Int32
      description: "要傳回的結果頁面大小。"
    - id: totalRecords
      type: System.Int32
      description: "相符的使用者總數。"
    return:
      type: System.Web.Security.MembershipUserCollection
      description: "A <xref:System.Web.Security.MembershipUserCollection>，其中包含一頁<code> pageSize </code> <xref:System.Web.Security.MembershipUser>物件所指定的頁面開始<code> pageIndex </code>。</xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUserCollection>       開頭和尾端空白會刪減<code> usernameToMatch </code>參數值。"
  overload: System.Web.Security.Membership.FindUsersByName*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>usernameToMatch</code>為空字串。       -或-<code>pageIndex</code>小於零。       -或-<code>pageSize</code>小於 1。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>usernameToMatch</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.Membership.GeneratePassword(System.Int32,System.Int32)
  id: GeneratePassword(System.Int32,System.Int32)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: GeneratePassword(Int32,Int32)
  nameWithType: Membership.GeneratePassword(Int32,Int32)
  fullName: System.Web.Security.Membership.GeneratePassword(Int32,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "產生指定長度的隨機密碼。"
  remarks: "GeneratePassword 方法用來產生隨機密碼，並根據最常用<xref:System.Web.Security.MembershipProvider.ResetPassword%2A>設為新暫時密碼重設使用者密碼的成員資格提供者所實作的方法。</xref:System.Web.Security.MembershipProvider.ResetPassword%2A>       產生的密碼只能包含英數字元以及下列標點符號︰ `!@#$%^&*()_-+=[{]};:<>|./?`。 沒有隱藏的或非可列印的控制字元會包含在產生的密碼。      > [!NOTE] > GeneratePassword 方法所建立的隨機密碼不保證傳遞規則運算式中的<xref:System.Web.Security.Membership.PasswordStrengthRegularExpression%2A>屬性。</xref:System.Web.Security.Membership.PasswordStrengthRegularExpression%2A> 不過，隨機密碼將會符合所建立的準則<xref:System.Web.Security.Membership.MinRequiredPasswordLength%2A>屬性和`numberOfNonAlphanumericCharacters`參數。</xref:System.Web.Security.Membership.MinRequiredPasswordLength%2A>"
  example:
  - "The following code example creates a new membership user and uses the GeneratePassword method to initialize the password for the new user to a random value, which is displayed to the user.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Web.Security.Membership#5](~/add/codesnippet/visualbasic/m-system.web.security.me_1_1.aspx)]\n [!code-cs[System.Web.Security.Membership#5](~/add/codesnippet/csharp/m-system.web.security.me_1_1.aspx)]"
  syntax:
    content: public static string GeneratePassword (int length, int numberOfNonAlphanumericCharacters);
    parameters:
    - id: length
      type: System.Int32
      description: "產生密碼中的字元數。 長度必須介於 1 到 128 個字元。"
    - id: numberOfNonAlphanumericCharacters
      type: System.Int32
      description: '非英數字元數目下限 (例如 @、 #、 ！，%，&amp;等等) 產生密碼中。'
    return:
      type: System.String
      description: "指定長度的隨機密碼。"
  overload: System.Web.Security.Membership.GeneratePassword*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>length</code>小於 1 或大於 128-<code>numberOfNonAlphanumericCharacters</code>小於 0 或大於<code>length</code>。"
  platform:
  - net462
- uid: System.Web.Security.Membership.GetAllUsers
  id: GetAllUsers
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: GetAllUsers()
  nameWithType: Membership.GetAllUsers()
  fullName: System.Web.Security.Membership.GetAllUsers()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "取得資料庫中的所有使用者的集合。"
  remarks: "GetAllUsers 傳回做為集合的應用程式的所有成員資格使用者的資訊<xref:System.Web.Security.MembershipUser>物件。</xref:System.Web.Security.MembershipUser> 小心使用非常大型使用者資料庫中的 GetAllUsers 方法，為產生<xref:System.Web.Security.MembershipUserCollection>在您的 ASP.NET 頁面可能會降低應用程式的效能。</xref:System.Web.Security.MembershipUserCollection>"
  example:
  - "The following code example returns a list of users with a count of the number of users currently online.  \n  \n [!code-vb[System.Web.Security.SqlMembershipProvider#5](~/add/codesnippet/visualbasic/m-system.web.security.me_4_1.aspx)]\n [!code-cs[System.Web.Security.SqlMembershipProvider#5](~/add/codesnippet/csharp/m-system.web.security.me_4_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUserCollection GetAllUsers ();
    parameters: []
    return:
      type: System.Web.Security.MembershipUserCollection
      description: "A<xref:System.Web.Security.MembershipUserCollection>的<xref:System.Web.Security.MembershipUser>代表所有使用者資料庫中的物件。</xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUserCollection>"
  overload: System.Web.Security.Membership.GetAllUsers*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.GetAllUsers(System.Int32,System.Int32,System.Int32@)
  id: GetAllUsers(System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: GetAllUsers(Int32,Int32,Int32)
  nameWithType: Membership.GetAllUsers(Int32,Int32,Int32)
  fullName: System.Web.Security.Membership.GetAllUsers(Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "取得所有使用者的集合資料庫中的資料頁。"
  remarks: "GetAllUsers 所傳回的結果都會受到`pageIndex`和`pageSize`參數。 `pageSize`參數識別要在<xref:System.Web.Security.MembershipUserCollection>.</xref:System.Web.Security.MembershipUserCollection>傳回的<xref:System.Web.Security.MembershipUser>物件</xref:System.Web.Security.MembershipUser>數目上限 `pageIndex`參數識別要傳回，其中 0 識別的第一頁的結果的頁面。 `totalRecords`參數是`out`參數設為所設定的成員資格使用者總數`applicationName`。 比方說，如果有設定 13 使用者`applicationName`，而`pageIndex`值為 1 以`pageSize`5，<xref:System.Web.Security.MembershipUserCollection>傳回會包含第 6 到傳回的第十個使用者。</xref:System.Web.Security.MembershipUserCollection> `totalRecords`會設定為 13。"
  example:
  - "The following code example returns a list of users in pages of data with a count of the number of users currently online.  \n  \n [!code-vb[System.Web.Security.SqlMembershipProvider#5](~/add/codesnippet/visualbasic/e84b0b6e-963c-4328-843a-_1.aspx)]\n [!code-cs[System.Web.Security.SqlMembershipProvider#5](~/add/codesnippet/csharp/e84b0b6e-963c-4328-843a-_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUserCollection GetAllUsers (int pageIndex, int pageSize, out int totalRecords);
    parameters:
    - id: pageIndex
      type: System.Int32
      description: "要傳回的結果頁面的索引。 使用 0 表示第一頁。"
    - id: pageSize
      type: System.Int32
      description: "要傳回的結果頁面大小。 `pageIndex`以零為起始。"
    - id: totalRecords
      type: System.Int32
      description: "使用者總數。"
    return:
      type: System.Web.Security.MembershipUserCollection
      description: "A<xref:System.Web.Security.MembershipUserCollection>的<xref:System.Web.Security.MembershipUser>代表設定的資料庫中的所有使用者物件<xref uid=&quot;langword_csharp_applicationName&quot; name=&quot;applicationName&quot; href=&quot;&quot;> </xref>。</xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUserCollection>"
  overload: System.Web.Security.Membership.GetAllUsers*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>pageIndex</code>小於零。       -或-<code>pageSize</code>小於 1。"
  platform:
  - net462
- uid: System.Web.Security.Membership.GetNumberOfUsersOnline
  id: GetNumberOfUsersOnline
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: GetNumberOfUsersOnline()
  nameWithType: Membership.GetNumberOfUsersOnline()
  fullName: System.Web.Security.Membership.GetNumberOfUsersOnline()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "取得目前存取應用程式的使用者數目。"
  remarks: "<xref:System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline%2A>傳回<xref:System.Web.Security.Membership.ApplicationName%2A>上次活動日期大於目前時間<xref:System.Web.Security.Membership.UserIsOnlineTimeWindow%2A>.</xref:System.Web.Security.Membership.UserIsOnlineTimeWindow%2A>小於</xref:System.Web.Security.Membership.ApplicationName%2A>目前的使用者數目</xref:System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline%2A> 上次活動日期/時間戳記更新為目前的日期和時間的項目，當會藉由驗證使用者認證<xref:System.Web.Security.Membership.ValidateUser%2A>或<xref:System.Web.Security.Membership.UpdateUser%2A>方法或呼叫<xref:System.Web.Security.Membership.GetUser%2A>可接受任何參數，或使用的其中一個多載`userIsOnline`參數來指定應該要更新的日期/時間戳記。</xref:System.Web.Security.Membership.GetUser%2A> </xref:System.Web.Security.Membership.UpdateUser%2A> </xref:System.Web.Security.Membership.ValidateUser%2A>"
  example:
  - "The following code example returns a list of users with a count of the number of users currently online.  \n  \n [!code-vb[System.Web.Security.SqlMembershipProvider#5](~/add/codesnippet/visualbasic/m-system.web.security.me_2_1.aspx)]\n [!code-cs[System.Web.Security.SqlMembershipProvider#5](~/add/codesnippet/csharp/m-system.web.security.me_2_1.aspx)]"
  syntax:
    content: public static int GetNumberOfUsersOnline ();
    parameters: []
    return:
      type: System.Int32
      description: "目前存取應用程式的使用者數目。"
  overload: System.Web.Security.Membership.GetNumberOfUsersOnline*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.GetUser
  id: GetUser
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: GetUser()
  nameWithType: Membership.GetUser()
  fullName: System.Web.Security.Membership.GetUser()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "從資料來源取得的資訊並更新上次活動日期/時間戳記，目前登入的成員資格使用者。"
  remarks: "GetUser 從資料來源擷取使用者資訊，以及建立<xref:System.Web.Security.MembershipUser>物件填入傳回的資料。</xref:System.Web.Security.MembershipUser> 如果您使用其中一個 GetUser 多載不接受`username`參數，GetUser 會傳回目前的登入的成員資格使用者的資訊。 目前的登入的成員資格使用者識別<xref:System.Security.Principal.IIdentity.Name%2A>目前<xref:System.Web.HttpContext>.</xref:System.Web.HttpContext>中的使用者</xref:System.Security.Principal.IIdentity.Name%2A>       您也可以指定是否要讓 GetUser 更新上次活動日期/時間戳記使用者正在擷取使用`userIsOnline`參數。 <xref:System.Web.Security.Membership.GetUser%2A>多載不接受`userIsOnline`參數，`GetUser()`隱含地更新上次活動日期/時間戳記的使用者。</xref:System.Web.Security.Membership.GetUser%2A> `GetUser(System.String)`和`GetUser(System.Object)`不這麼做。"
  example:
  - "The following code example updates the last-activity date/time stamp for the current logged-on membership user and displays the user name in the ASP.NET page.  \n  \n [!code-cs[System.Web.Security.Membership#3](~/add/codesnippet/csharp/m-system.web.security.me_14_1.aspx)]\n [!code-vb[System.Web.Security.Membership#3](~/add/codesnippet/visualbasic/m-system.web.security.me_14_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUser GetUser ();
    parameters: []
    return:
      type: System.Web.Security.MembershipUser
      description: "A<xref:System.Web.Security.MembershipUser>物件，代表目前登入的使用者。</xref:System.Web.Security.MembershipUser>"
  overload: System.Web.Security.Membership.GetUser*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "沒有成員資格使用者目前已登入。"
  platform:
  - net462
- uid: System.Web.Security.Membership.GetUser(System.Boolean)
  id: GetUser(System.Boolean)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: GetUser(Boolean)
  nameWithType: Membership.GetUser(Boolean)
  fullName: System.Web.Security.Membership.GetUser(Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "從資料來源取得目前的登入的成員資格使用者的資訊。 目前的登入的成員資格使用者，如果指定的更新之上次活動日期/時間戳記。"
  remarks: "GetUser 方法從資料來源擷取使用者資訊，以及建立<xref:System.Web.Security.MembershipUser>物件填入傳回的資料。</xref:System.Web.Security.MembershipUser> 如果您使用其中一個<xref:System.Web.Security.Membership.GetUser%2A>未採用多載`username`參數，<xref:System.Web.Security.Membership.GetUser%2A>傳回目前的登入的成員資格使用者的資訊。</xref:System.Web.Security.Membership.GetUser%2A> </xref:System.Web.Security.Membership.GetUser%2A> 目前的登入的成員資格使用者識別<xref:System.Security.Principal.IIdentity.Name%2A>目前<xref:System.Web.HttpContext>.</xref:System.Web.HttpContext>中的使用者</xref:System.Security.Principal.IIdentity.Name%2A>       您也可以指定是否要<xref:System.Web.Security.Membership.GetUser%2A>更新上次活動日期/時間戳記使用者正在使用擷取`userIsOnline`參數。</xref:System.Web.Security.Membership.GetUser%2A> <xref:System.Web.Security.Membership.GetUser%2A>多載不接受`userIsOnline`參數，`GetUser()`隱含地更新上次活動日期/時間戳記的使用者。</xref:System.Web.Security.Membership.GetUser%2A> `GetUser(System.String)`和`GetUser(System.Object)`不這麼做。"
  example:
  - "The following code example displays the user name for the current logged-on membership user in the ASP.NET page without updating the last-activity date/time stamp for the user.  \n  \n [!code-cs[System.Web.Security.Membership#4](~/add/codesnippet/csharp/m-system.web.security.me_9_1.aspx)]\n [!code-vb[System.Web.Security.Membership#4](~/add/codesnippet/visualbasic/m-system.web.security.me_9_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUser GetUser (bool userIsOnline);
    parameters:
    - id: userIsOnline
      type: System.Boolean
      description: "如果<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>，為指定的使用者更新上次活動日期/時間戳記。"
    return:
      type: System.Web.Security.MembershipUser
      description: "A<xref:System.Web.Security.MembershipUser>物件，代表目前登入的使用者。</xref:System.Web.Security.MembershipUser>"
  overload: System.Web.Security.Membership.GetUser*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "沒有成員資格使用者目前已登入。"
  platform:
  - net462
- uid: System.Web.Security.Membership.GetUser(System.Object)
  id: GetUser(System.Object)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: GetUser(Object)
  nameWithType: Membership.GetUser(Object)
  fullName: System.Web.Security.Membership.GetUser(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "從資料來源取得具有指定之唯一識別碼相關聯的成員資格使用者的資訊。"
  remarks: "GetUser 方法從資料來源擷取使用者資訊，以及建立<xref:System.Web.Security.MembershipUser>物件填入傳回的資料。</xref:System.Web.Security.MembershipUser> 使用指定的資料來源使用的唯一識別碼來識別使用者`providerUserKey`參數。       您也可以指定是否要<xref:System.Web.Security.Membership.GetUser%2A>更新上次活動日期/時間戳記，以擷取使用者`userIsOnline`參數。</xref:System.Web.Security.Membership.GetUser%2A> <xref:System.Web.Security.Membership.GetUser%2A>多載不接受`userIsOnline`參數，`GetUser()`隱含地更新上次活動日期/時間戳記的使用者。</xref:System.Web.Security.Membership.GetUser%2A> `GetUser(System.String)`和`GetUser(System.Object)`不相符"
  syntax:
    content: public static System.Web.Security.MembershipUser GetUser (object providerUserKey);
    parameters:
    - id: providerUserKey
      type: System.Object
      description: "中使用者的成員資格資料來源的唯一的使用者識別碼。"
    return:
      type: System.Web.Security.MembershipUser
      description: "A<xref:System.Web.Security.MembershipUser>物件，代表具有指定之唯一識別碼相關聯的使用者。</xref:System.Web.Security.MembershipUser>"
  overload: System.Web.Security.Membership.GetUser*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>providerUserKey</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.Membership.GetUser(System.String)
  id: GetUser(System.String)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: GetUser(String)
  nameWithType: Membership.GetUser(String)
  fullName: System.Web.Security.Membership.GetUser(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "從資料來源取得指定的成員資格使用者的資訊。"
  remarks: "GetUser 方法從資料來源擷取使用者資訊，以及建立<xref:System.Web.Security.MembershipUser>物件填入傳回的資料。</xref:System.Web.Security.MembershipUser> 如果您使用其中一個<xref:System.Web.Security.Membership.GetUser%2A>未採用多載`username`參數，<xref:System.Web.Security.Membership.GetUser%2A>傳回目前的登入的成員資格使用者的資訊。</xref:System.Web.Security.Membership.GetUser%2A> </xref:System.Web.Security.Membership.GetUser%2A> 目前的登入的成員資格使用者識別<xref:System.Security.Principal.IIdentity.Name%2A>目前<xref:System.Web.HttpContext>.</xref:System.Web.HttpContext>中的使用者</xref:System.Security.Principal.IIdentity.Name%2A>       您也可以指定是否要<xref:System.Web.Security.Membership.GetUser%2A>更新上次活動日期/時間戳記，以擷取使用者`userIsOnline`參數。</xref:System.Web.Security.Membership.GetUser%2A> <xref:System.Web.Security.Membership.GetUser%2A>多載不接受`userIsOnline`參數，<xref:System.Web.Security.Membership.GetUser%2A?displayProperty=fullName>隱含地更新上次活動日期/時間戳記的使用者。</xref:System.Web.Security.Membership.GetUser%2A?displayProperty=fullName> </xref:System.Web.Security.Membership.GetUser%2A> GetUser 和<xref:System.Web.Security.Membership.GetUser%2A>則否。</xref:System.Web.Security.Membership.GetUser%2A>"
  example:
  - "The following code example uses the GetUser method to return a <xref:System.Web.Security.MembershipUser> object for the current logged-on user and updates the e-mail address for the user.  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#11](~/add/codesnippet/csharp/m-system.web.security.me_3_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#11](~/add/codesnippet/visualbasic/m-system.web.security.me_3_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUser GetUser (string username);
    parameters:
    - id: username
      type: System.String
      description: "要擷取的使用者名稱。"
    return:
      type: System.Web.Security.MembershipUser
      description: "A<xref:System.Web.Security.MembershipUser>物件，表示指定的使用者。</xref:System.Web.Security.MembershipUser> 如果<code> username </code>參數沒有對應現有使用者，則這個方法會傳回<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.Security.Membership.GetUser*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>username</code>包含以逗號 （，）。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>username</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.Membership.GetUser(System.Object,System.Boolean)
  id: GetUser(System.Object,System.Boolean)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: GetUser(Object,Boolean)
  nameWithType: Membership.GetUser(Object,Boolean)
  fullName: System.Web.Security.Membership.GetUser(Object,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "從資料來源取得具有指定之唯一識別碼相關聯的成員資格使用者的資訊。 如果指定的使用者更新上次活動日期/時間戳記。"
  remarks: "GetUser 方法從資料來源擷取使用者資訊，以及建立<xref:System.Web.Security.MembershipUser>物件填入傳回的資料。</xref:System.Web.Security.MembershipUser> 從指定的資料來源的唯一識別碼與用來識別使用者`providerUserKey`參數。"
  syntax:
    content: public static System.Web.Security.MembershipUser GetUser (object providerUserKey, bool userIsOnline);
    parameters:
    - id: providerUserKey
      type: System.Object
      description: "中使用者的成員資格資料來源的唯一的使用者識別碼。"
    - id: userIsOnline
      type: System.Boolean
      description: "如果<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>，為指定的使用者更新上次活動日期/時間戳記。"
    return:
      type: System.Web.Security.MembershipUser
      description: "A<xref:System.Web.Security.MembershipUser>物件，代表具有指定之唯一識別碼相關聯的使用者。</xref:System.Web.Security.MembershipUser>"
  overload: System.Web.Security.Membership.GetUser*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>providerUserKey</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.Membership.GetUser(System.String,System.Boolean)
  id: GetUser(System.String,System.Boolean)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: GetUser(String,Boolean)
  nameWithType: Membership.GetUser(String,Boolean)
  fullName: System.Web.Security.Membership.GetUser(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "從資料來源取得指定的成員資格使用者的資訊。 如果指定的使用者更新上次活動日期/時間戳記。"
  remarks: "GetUser 方法從資料來源擷取使用者資訊，以及建立<xref:System.Web.Security.MembershipUser>物件填入傳回的資料。</xref:System.Web.Security.MembershipUser>       如果您使用其中一個<xref:System.Web.Security.Membership.GetUser%2A>未採用多載`username`參數，<xref:System.Web.Security.Membership.GetUser%2A>傳回目前的登入的成員資格使用者的資訊。</xref:System.Web.Security.Membership.GetUser%2A> </xref:System.Web.Security.Membership.GetUser%2A> 目前的登入的成員資格使用者識別<xref:System.Security.Principal.IIdentity.Name%2A>目前<xref:System.Web.HttpContext>.</xref:System.Web.HttpContext>中的使用者</xref:System.Security.Principal.IIdentity.Name%2A>       您也可以指定是否要<xref:System.Web.Security.Membership.GetUser%2A>更新上次活動日期/時間戳記，以擷取使用者`userIsOnline`參數。</xref:System.Web.Security.Membership.GetUser%2A> <xref:System.Web.Security.Membership.GetUser%2A>多載不接受`userIsOnline`參數，<xref:System.Web.Security.Membership.GetUser%2A?displayProperty=fullName>隱含地更新上次活動日期/時間戳記的使用者。</xref:System.Web.Security.Membership.GetUser%2A?displayProperty=fullName> </xref:System.Web.Security.Membership.GetUser%2A> <xref:System.Web.Security.Membership.GetUser%2A?displayProperty=fullName>和<xref:System.Web.Security.Membership.GetUser%2A>則否。</xref:System.Web.Security.Membership.GetUser%2A></xref:System.Web.Security.Membership.GetUser%2A?displayProperty=fullName>"
  example:
  - "The following code example retrieves the password for a specified user name and sends it to the e-mail address for the specified user. The call to <xref:System.Web.Security.Membership.GetUser%2A> specifies that the last-activity date/time stamp for the user not be updated.  \n  \n [!code-vb[System.Web.Security.SqlMembershipProvider#4](~/add/codesnippet/visualbasic/m-system.web.security.me_13_1.aspx)]\n [!code-cs[System.Web.Security.SqlMembershipProvider#4](~/add/codesnippet/csharp/m-system.web.security.me_13_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUser GetUser (string username, bool userIsOnline);
    parameters:
    - id: username
      type: System.String
      description: "要擷取的使用者名稱。"
    - id: userIsOnline
      type: System.Boolean
      description: "如果<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>，為指定的使用者更新上次活動日期/時間戳記。"
    return:
      type: System.Web.Security.MembershipUser
      description: "A<xref:System.Web.Security.MembershipUser>物件，表示指定的使用者。</xref:System.Web.Security.MembershipUser> 如果<code> username </code>參數沒有對應現有使用者，則這個方法會傳回<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.Security.Membership.GetUser*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>username</code>包含以逗號 （，）。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>username</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.Membership.GetUserNameByEmail(System.String)
  id: GetUserNameByEmail(System.String)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: GetUserNameByEmail(String)
  nameWithType: Membership.GetUserNameByEmail(String)
  fullName: System.Web.Security.Membership.GetUserNameByEmail(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "取得使用者的電子郵件地址要比對指定的電子郵件地址的使用者名稱。"
  remarks: "GetUserNameByEmail 可以用來擷取在使用者不知道他們的使用者名稱，但知道他們的電子郵件地址的情況下的成員資格使用者的使用者名稱。 如果資料存放區中的多個使用者具有相同電子郵件地址，則會傳回第一個遇到的使用者名稱。       所有參數值會都修剪開頭和尾端空白。"
  example:
  - "The following code example retrieves the user name for a specified e-mail address.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#7](~/add/codesnippet/csharp/m-system.web.security.me_5_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#7](~/add/codesnippet/visualbasic/m-system.web.security.me_5_1.aspx)]"
  syntax:
    content: public static string GetUserNameByEmail (string emailToMatch);
    parameters:
    - id: emailToMatch
      type: System.String
      description: "若要搜尋的電子郵件地址。"
    return:
      type: System.String
      description: "使用者名稱，其中使用者的電子郵件地址符合指定的電子郵件地址。 如果找到相符項目， <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>傳回。"
  overload: System.Web.Security.Membership.GetUserNameByEmail*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.HashAlgorithmType
  id: HashAlgorithmType
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: HashAlgorithmType
  nameWithType: Membership.HashAlgorithmType
  fullName: System.Web.Security.Membership.HashAlgorithmType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "用來雜湊密碼的演算法識別碼。"
  remarks: "HashAlgorithmType 屬性識別<xref:System.Web.Security.Membership>類別</xref:System.Web.Security.Membership>所使用之自訂的雜湊演算法 您可以設定 HashAlgorithmType 屬性使用`hashAlgorithmType`項目的屬性。       .NET Framework 可讓您設定自訂密碼編譯類別使用的項目組態區段。 HashAlgorithmType 屬性必須符合`name`項目中項目的屬性。 如需詳細資訊，請參閱[將演算法名稱對應至密碼編譯類別](~/add/includes/ajax-current-ext-md.md)。       如果未設定 HashAlgorithmType 屬性，<xref:System.Web.Security.Membership>類別使用中設定的雜湊演算法`validation`項目的屬性。</xref:System.Web.Security.Membership>"
  syntax:
    content: public static string HashAlgorithmType { get; }
    return:
      type: System.String
      description: "用於雜湊密碼保持空白使用預設雜湊演算法的演算法識別碼。"
  overload: System.Web.Security.Membership.HashAlgorithmType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.MaxInvalidPasswordAttempts
  id: MaxInvalidPasswordAttempts
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: MaxInvalidPasswordAttempts
  nameWithType: Membership.MaxInvalidPasswordAttempts
  fullName: System.Web.Security.Membership.MaxInvalidPasswordAttempts
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "取得無效密碼或密碼解答嘗試的成員資格使用者遭到鎖定之前允許的數目。"
  remarks: "MaxInvalidPasswordAttempts 屬性可搭配<xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>嘗試猜測密碼或密碼解答的成員資格使用者的屬性，以防範不必要的來源使用重複。</xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>       如果成員資格使用者是大於或等於 MaxInvalidPasswordAttempts 屬性的值所指定的分鐘數內，輸入數目不正確的密碼或密碼解答<xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>屬性，則使用者遭到鎖定的網站設定<xref:System.Web.Security.MembershipUser.IsLockedOut%2A>屬性`true`直到呼叫解除鎖定使用者<xref:System.Web.Security.MembershipUser.UnlockUser%2A>方法。</xref:System.Web.Security.MembershipUser.UnlockUser%2A> </xref:System.Web.Security.MembershipUser.IsLockedOut%2A> </xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>       如果達到 MaxInvalidPasswordAttempts 屬性的值之前提供有效的密碼或密碼解答，追蹤無效嘗試次數的計數器就設為零。       無效的密碼和密碼解答嘗試都會個別追蹤。 比方說，如果 MaxInvalidPasswordAttempts 屬性設定為 5，使用者沒有輸入正確密碼嘗試執行五次，最多五個嘗試輸入正確的密碼解答，而不被鎖定。       MaxInvalidPasswordAttempts 屬性值設定在應用程式組態中，使用`maxInvalidPasswordAttempts`組態項目的屬性。       如果<xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A>屬性是`false`，不會追蹤無效的密碼解答嘗試。</xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A>"
  example:
  - "The following code example shows the  element in the `system.web` section of an application's Web.config file. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> class to provide membership services, and sets the `maxInvalidPasswordAttempts` attribute to five invalid attempts and the `passwordAttemptWindow` to 30 minutes.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\"  \n  userIsOnlineTimeWindow = \"20>  \n  <providers>  \n    <add  \n      name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      requiresQuestionAndAnswer=\"true\"  \n      maxInvalidPasswordAttempts=\"5\"  \n      passwordAttemptWindow=\"30\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</membership>  \n```"
  syntax:
    content: public static int MaxInvalidPasswordAttempts { get; }
    return:
      type: System.Int32
      description: "無效的密碼或密碼解答嘗試的成員資格使用者遭到鎖定之前允許的數目。"
  overload: System.Web.Security.Membership.MaxInvalidPasswordAttempts*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters
  id: MinRequiredNonAlphanumericCharacters
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: MinRequiredNonAlphanumericCharacters
  nameWithType: Membership.MinRequiredNonAlphanumericCharacters
  fullName: System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "取得有效的密碼中必須要有的特殊字元的最小數目。"
  remarks: "MinRequiredNonAlphanumericCharacters 屬性會傳回特殊的非英數字元，必須輸入中指定的成員資格提供者建立有效的密碼最小數目<xref:System.Web.Security.Membership.Provider%2A>屬性。</xref:System.Web.Security.Membership.Provider%2A>       MinRequiredNonAlphanumericCharacters 屬性值設定在應用程式組態中，使用`minRequiredNonAlphanumericCharacters`組態項目的屬性。       非英數字元是字元的<xref:System.Char.IsLetterOrDigit%2A>方法會傳回`false`。</xref:System.Char.IsLetterOrDigit%2A>"
  example:
  - "The following code example shows the  configuration element in the `system.web` section of the application's Web.config file. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> class to provide membership services, and sets the `minRequiredNonAlphanumericCharacters` attribute to 1 character.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\"  \n  userIsOnlineTimeWindow = \"20>  \n  <providers>  \n    <add  \n      name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      requiresQuestionAndAnswer=\"true\"  \n      minRequiredNonAlphanumericCharacters=\"1\"  \n      />  \n  </providers>  \n</membership>  \n```"
  syntax:
    content: public static int MinRequiredNonAlphanumericCharacters { get; }
    return:
      type: System.Int32
      description: "有效的密碼中必須要有的特殊字元數目下限。"
  overload: System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.MinRequiredPasswordLength
  id: MinRequiredPasswordLength
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: MinRequiredPasswordLength
  nameWithType: Membership.MinRequiredPasswordLength
  fullName: System.Web.Security.Membership.MinRequiredPasswordLength
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "取得密碼所需的最小長度。"
  remarks: "MinRequiredPasswordLength 屬性取得必須在指定的成員資格提供者建立有效的密碼輸入的字元數目下限<xref:System.Web.Security.Membership.Provider%2A>屬性。</xref:System.Web.Security.Membership.Provider%2A>       MinRequiredPasswordLength 屬性值設定在應用程式組態中，使用`minRequiredPasswordLength`組態項目的屬性。"
  example:
  - "The following code example shows the  configuration element in the `system.web` section of the application's Web.config file. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> class to provide membership services, and sets the `minRequiredPasswordLength` attribute to seven characters.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\"  \n  userIsOnlineTimeWindow = \"20>  \n  <providers>  \n    <add  \n      name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      requiresQuestionAndAnswer=\"true\"  \n      minRequiredPasswordLength=\"7\"  \n      />  \n  </providers>  \n</membership>  \n```"
  syntax:
    content: public static int MinRequiredPasswordLength { get; }
    return:
      type: System.Int32
      description: "密碼所需的最小長度。"
  overload: System.Web.Security.Membership.MinRequiredPasswordLength*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.PasswordAttemptWindow
  id: PasswordAttemptWindow
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: PasswordAttemptWindow
  nameWithType: Membership.PasswordAttemptWindow
  fullName: System.Web.Security.Membership.PasswordAttemptWindow
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "取得時間之間的連續失敗嘗試提供有效的密碼或密碼解答會追蹤。"
  remarks: "PasswordAttemptWindow 屬性可搭配<xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>內容，協助防範不必要的來源，破解的密碼或密碼解答的成員資格使用者，透過重複嘗試。</xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> 當使用者嘗試登入、 變更或重設其密碼時，只有特定數目的連續嘗試允許指定的時間間隔內。 此時間窗口長度已指定在 PasswordAttemptWindow 屬性中，識別不正確的嘗試之間所允許的分鐘數。       如果連續嘗試失敗次數，可讓使用者重設他或她密碼等於中儲存的值<xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>屬性，以及時間後經過無效上次是小於 PasswordAttemptWindow 屬性中指定的分鐘數，則成員資格使用者遭到鎖定。</xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> 使用者鎖定藉由設定<xref:System.Web.Security.MembershipUser.IsLockedOut%2A>屬性`true`直到呼叫解除鎖定使用者<xref:System.Web.Security.MembershipUser.UnlockUser%2A>方法。</xref:System.Web.Security.MembershipUser.UnlockUser%2A> </xref:System.Web.Security.MembershipUser.IsLockedOut%2A>       如果目前的失敗的嘗試和上一次的失敗的嘗試之間的間隔大於 PasswordAttemptWindow 屬性設定值，目前不正確的嘗試都會計算為第一個。 如果之前允許的無效嘗試次數上限為止，請提供有效的密碼解答，無效的密碼解答嘗試計數是設定為 0 （零）。 如果允許無效的最大數目之前提供有效的密碼嘗試次數達到時，不正確的密碼嘗試次數的計數和無效的密碼解答嘗試計數會設定為 0 （零）。       無效的密碼和密碼解答嘗試累積彼此獨立。 例如，如果<xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>設定為 5，而且後面兩個無效的密碼解答嘗試進行三次無效的密碼嘗試，內 PasswordAttemptWindow 成員資格使用者遭到鎖定，則必須進行兩個的多個無效的密碼嘗試次數 （或三個多個無效的密碼解答嘗試次數）。</xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>       PasswordAttemptWindow 屬性值應用程式組態中使用設定的`passwordAttemptWindow`區段的組態項目屬性。       如果<xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A>屬性設定為`false`，不會追蹤無效的密碼解答嘗試。</xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A>"
  example:
  - "The following code example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> and sets the `maxInvalidPasswordAttempts` attribute to five invalid attempts and the `passwordAttemptWindow` to 30 minutes.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\"   \n  userIsOnlineTimeWindow=\"20\">  \n  <providers>  \n    <add name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      requiresQuestionAndAnswer=\"true\"  \n      maxInvalidPasswordAttempts=\"5\"  \n      passwordAttemptWindow=\"30\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</membership>  \n```"
  syntax:
    content: public static int PasswordAttemptWindow { get; }
    return:
      type: System.Int32
      description: "時間視窗中，以分鐘為單位的連續失敗會嘗試提供有效的密碼或密碼解答追蹤。 預設值是 10 分鐘。 如果目前的失敗的嘗試和上一次的失敗的嘗試之間的間隔大於 PasswordAttemptWindow 屬性設定值，每個失敗的嘗試會被視為就像是第一次嘗試失敗。"
  overload: System.Web.Security.Membership.PasswordAttemptWindow*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.PasswordStrengthRegularExpression
  id: PasswordStrengthRegularExpression
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: PasswordStrengthRegularExpression
  nameWithType: Membership.PasswordStrengthRegularExpression
  fullName: System.Web.Security.Membership.PasswordStrengthRegularExpression
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "取得用來評估密碼的規則運算式。"
  remarks: "PasswordStrengthRegularExpression 屬性取得用來評估密碼複雜度中指定的提供者的規則運算式<xref:System.Web.Security.Membership.Provider%2A>屬性。</xref:System.Web.Security.Membership.Provider%2A>       PasswordStrengthRegularExpression 屬性會設定應用程式組態使用`passwordStrengthRegularExpression`組態項目的屬性。       如需有關規則運算式的詳細資訊，請參閱[.NET Framework 規則運算式](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following code example shows the  configuration element in the `system.web` section of the application's Web.config file. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> class to provide membership services, and sets the `passwordStrengthRegularExpression` attribute to a regular expression that validates the password meets the following criteria:  \n  \n-   Is greater than seven characters.  \n  \n-   Contains at least one digit.  \n  \n-   Contains at least one special (non-alphanumeric) character.  \n  \n If the password does not meet these criteria, the password is not accepted by the membership provider.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\"  \n  userIsOnlineTimeWindow = \"20>  \n  <providers>  \n    <add  \n      name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      requiresQuestionAndAnswer=\"true\"  \n      passwordStrengthRegularExpression=\" @\\\"(?=.{6,})(?=(.*\\d){1,})(?=(.*\\W){1,})\"  \n      />  \n   </providers>  \n</membership>  \n```"
  syntax:
    content: public static string PasswordStrengthRegularExpression { get; }
    return:
      type: System.String
      description: "用來評估密碼的規則運算式。"
  overload: System.Web.Security.Membership.PasswordStrengthRegularExpression*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.Provider
  id: Provider
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: Provider
  nameWithType: Membership.Provider
  fullName: System.Web.Security.Membership.Provider
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "取得應用程式的預設成員資格提供者的參考。"
  remarks: "提供者屬性可讓您直接參考應用程式的預設成員資格提供者。 這通常用來存取的成員資格提供者不是<xref:System.Web.Security.MembershipProvider>抽象的基底類別</xref:System.Web.Security.MembershipProvider>的一部分的自訂成員"
  example:
  - "The following code example accesses the default <xref:System.Web.Security.SqlMembershipProvider> enabled for the application using the Provider property in order to determine the value of the custom <xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A> property.  \n  \n [!code-vb[System.Web.Security.Membership#6](~/add/codesnippet/visualbasic/p-system.web.security.me_0_1.aspx)]\n [!code-cs[System.Web.Security.Membership#6](~/add/codesnippet/csharp/p-system.web.security.me_0_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipProvider Provider { get; }
    return:
      type: System.Web.Security.MembershipProvider
      description: "使用<xref:System.Web.Security.MembershipProvider>抽象的基底類別</xref:System.Web.Security.MembershipProvider>所公開的應用程式的預設成員資格提供者"
  overload: System.Web.Security.Membership.Provider*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.Providers
  id: Providers
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: Providers
  nameWithType: Membership.Providers
  fullName: System.Web.Security.Membership.Providers
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "取得 ASP.NET 應用程式的成員資格提供者的集合。"
  remarks: "提供者屬性會參考所有啟用的應用程式的成員資格提供者，包括提供者加入應用程式的 Web.config 檔案和 Machine.config 檔案中的所有應用程式。 您可以控制其成員資格提供者可以使用應用程式使用`providers`中您的應用程式的組態區段的項目。 例如，下列範例會示範一節中移除的應用程式的 Web.config 檔案<xref:System.Web.Security.SqlMembershipProvider>執行個體 (`AspNetSqlProvider`) 電腦組態檔中指定，並將<xref:System.Web.Security.SqlMembershipProvider>名為執行個體`SqlProvider`為應用程式的預設成員資格提供者。</xref:System.Web.Security.SqlMembershipProvider> </xref:System.Web.Security.SqlMembershipProvider>      ```   <configuration>     <connectionStrings>       <add name=&quot;SqlServices&quot; connectionString=&quot;Data Source=MySqlServer;Integrated Security=SSPI;Initial Catalog=aspnetdb;&quot; />     </connectionStrings>     <system.web>       <membership defaultProvider=&quot;SqlProvider&quot; userIsOnlineTimeWindow=&quot;20&quot;>         <providers>           <remove name=&quot;AspNetSqlProvider&quot; />             <add name=&quot;SqlProvider&quot;               type=&quot;System.Web.Security.SqlMembershipProvider&quot;               connectionStringName=&quot;SqlServices&quot;               enablePasswordRetrieval=&quot;false&quot;               enablePasswordReset=&quot;true&quot;               requiresQuestionAndAnswer=&quot;true&quot;               passwordFormat=&quot;Hashed&quot;               applicationName=&quot;/&quot; />         </providers>       </membership>     </system.web>   </configuration>   ```當指定[元素 （ASP.NET 設定結構描述） 的成員資格](http://msdn.microsoft.com/en-us/b9c1ee8f-33ca-4361-8666-b42a0fe86049) 區段中，您必須指定`defaultProvider`屬性。 如果未指定[元素 （ASP.NET 設定結構描述） 的成員資格](http://msdn.microsoft.com/en-us/b9c1ee8f-33ca-4361-8666-b42a0fe86049)用您的 Web.config 中的機器組態的值區段和<xref:System.Web.Security.SqlMembershipProvider>名為執行個體`AspNetSqlProvider`建立為`defaultProvider`。</xref:System.Web.Security.SqlMembershipProvider>       您可以取得提供者從提供者集合的強型別的參考索引名稱的成員資格提供者，並將它轉型為所需的類型。"
  example:
  - "The following code example lists the providers enabled for an application and their respective types.  \n  \n [!code-cs[System.Web.Security.Membership#7](~/add/codesnippet/csharp/p-system.web.security.me_1_1.aspx)]\n [!code-vb[System.Web.Security.Membership#7](~/add/codesnippet/visualbasic/p-system.web.security.me_1_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipProviderCollection Providers { get; }
    return:
      type: System.Web.Security.MembershipProviderCollection
      description: "A<xref:System.Web.Security.MembershipProviderCollection>設定 ASP.NET 應用程式的成員資格提供者。</xref:System.Web.Security.MembershipProviderCollection>"
  overload: System.Web.Security.Membership.Providers*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.RequiresQuestionAndAnswer
  id: RequiresQuestionAndAnswer
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: RequiresQuestionAndAnswer
  nameWithType: Membership.RequiresQuestionAndAnswer
  fullName: System.Web.Security.Membership.RequiresQuestionAndAnswer
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "取得值，指出預設的成員資格提供者是否要求使用者回答密碼問題，密碼重設和擷取。"
  remarks: "需要密碼問題和解答，提供額外的安全性時擷取，或重設使用者的密碼。 使用者可以提供問題和答案建立他們的使用者名稱時，他們稍後可以使用來擷取或重設忘記的密碼。       已核取 RequiresQuestionAndAnswer 時<xref:System.Web.Security.MembershipUser.ResetPassword%2A>或<xref:System.Web.Security.MembershipUser.GetPassword%2A>稱為。</xref:System.Web.Security.MembershipUser.GetPassword%2A> </xref:System.Web.Security.MembershipUser.ResetPassword%2A> .NET Framework 所隨附的提供者會擲回<xref:System.NotSupportedException>RequiresQuestionAndAnswer 是否`true`和提供的密碼解答`null`。</xref:System.NotSupportedException>       如果<xref:System.Web.Security.Membership.EnablePasswordReset%2A>和<xref:System.Web.Security.Membership.EnablePasswordRetrieval%2A>都`false`，RequiresQuestionAndAnswer 仍可用來建立新使用者時，強制執行的問題和答案建立; 不過，問題和答案就不會使用。</xref:System.Web.Security.Membership.EnablePasswordRetrieval%2A> </xref:System.Web.Security.Membership.EnablePasswordReset%2A> 您可以使用<xref:System.Web.Security.MembershipUser>類別</xref:System.Web.Security.MembershipUser>來擷取問題       如需詳細資訊，請參閱<xref:System.Web.Security.MembershipUser.ResetPassword%2A>和<xref:System.Web.Security.MembershipUser.GetPassword%2A>。</xref:System.Web.Security.MembershipUser.GetPassword%2A> </xref:System.Web.Security.MembershipUser.ResetPassword%2A>"
  example:
  - "The following code example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider>, enables password reset, and requires a password answer when performing a reset.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\" userIsOnlineTimeWindow=\"20\">  \n  <providers>  \n    <add name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      enablePasswordRetrieval=\"false\"  \n      enablePasswordReset=\"true\"  \n      requiresQuestionAndAnswer=\"true\"  \n      passwordFormat=\"Hashed\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</membership>  \n```  \n  \n The following code sample checks the value of RequiresQuestionAndAnswer and adds the necessary controls for a password question and answer to be supplied when creating a user.  \n  \n> [!IMPORTANT]\n>  This example includes a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#2](~/add/codesnippet/csharp/p-system.web.security.me_3_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#2](~/add/codesnippet/visualbasic/p-system.web.security.me_3_1.aspx)]"
  syntax:
    content: public static bool RequiresQuestionAndAnswer { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果密碼解答才能重設密碼和擷取。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.Security.Membership.RequiresQuestionAndAnswer*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.UpdateUser(System.Web.Security.MembershipUser)
  id: UpdateUser(System.Web.Security.MembershipUser)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: UpdateUser(MembershipUser)
  nameWithType: Membership.UpdateUser(MembershipUser)
  fullName: System.Web.Security.Membership.UpdateUser(MembershipUser)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "指定之使用者的資訊更新資料庫。"
  remarks: "做為輸入，UpdateUser 採用<xref:System.Web.Security.MembershipUser>物件填入成員資格使用者的目前資訊，並更新資料來源的屬性值<xref:System.Web.Security.MembershipUser>物件。</xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUser> 您可以建構新<xref:System.Web.Security.MembershipUser>，或擷取<xref:System.Web.Security.MembershipUser>物件填入目前的值，在資料來源使用<xref:System.Web.Security.Membership.GetUser%2A>， <xref:System.Web.Security.Membership.GetAllUsers%2A>， <xref:System.Web.Security.Membership.FindUsersByName%2A>，或<xref:System.Web.Security.Membership.FindUsersByEmail%2A>方法。</xref:System.Web.Security.Membership.FindUsersByEmail%2A> </xref:System.Web.Security.Membership.FindUsersByName%2A> </xref:System.Web.Security.Membership.GetAllUsers%2A> </xref:System.Web.Security.Membership.GetUser%2A> </xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUser>"
  example:
  - "The following code example updates the e-mail address for the current logged-on user.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#11](~/add/codesnippet/csharp/m-system.web.security.me_8_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#11](~/add/codesnippet/visualbasic/m-system.web.security.me_8_1.aspx)]"
  syntax:
    content: public static void UpdateUser (System.Web.Security.MembershipUser user);
    parameters:
    - id: user
      type: System.Web.Security.MembershipUser
      description: "A<xref:System.Web.Security.MembershipUser>物件，表示要更新使用者和使用者的更新的資訊。</xref:System.Web.Security.MembershipUser>"
  overload: System.Web.Security.Membership.UpdateUser*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>user</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.Membership.UserIsOnlineTimeWindow
  id: UserIsOnlineTimeWindow
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: UserIsOnlineTimeWindow
  nameWithType: Membership.UserIsOnlineTimeWindow
  fullName: System.Web.Security.Membership.UserIsOnlineTimeWindow
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "指定上次活動日期/時間戳記時將使用者視為線上使用者之後的分鐘數。"
  remarks: "在呼叫<xref:System.Web.Security.Membership.GetNumberOfUsersOnline%2A>.</xref:System.Web.Security.Membership.GetNumberOfUsersOnline%2A>會檢查 UserIsOnlineTimeWindow 屬性值 如果<xref:System.Web.Security.MembershipUser.LastActivityDate%2A>使用者為大於目前的日期和時間減去 UserIsOnlineTimeWindow 值以分鐘為單位，則使用者會被視為上線。</xref:System.Web.Security.MembershipUser.LastActivityDate%2A> 您可以判斷成員資格使用者是否視為線上與<xref:System.Web.Security.MembershipUser.IsOnline%2A>屬性的<xref:System.Web.Security.MembershipUser>類別。</xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUser.IsOnline%2A>       <xref:System.Web.Security.MembershipUser.LastActivityDate%2A>的成功驗證使用者的認證時，會更新使用者的<xref:System.Web.Security.Membership.ValidateUser%2A>方法。</xref:System.Web.Security.Membership.ValidateUser%2A> </xref:System.Web.Security.MembershipUser.LastActivityDate%2A> 您也可以更新<xref:System.Web.Security.MembershipUser.LastActivityDate%2A>成員資格使用者，當您呼叫其中一個<xref:System.Web.Security.Membership.GetUser%2A>多載。</xref:System.Web.Security.Membership.GetUser%2A> </xref:System.Web.Security.MembershipUser.LastActivityDate%2A> 如果您呼叫<xref:System.Web.Security.Membership.GetUser%2A>採用多載`userIsOnline`參數，指定其值為`true`更新<xref:System.Web.Security.MembershipUser.LastActivityDate%2A>使用者。</xref:System.Web.Security.MembershipUser.LastActivityDate%2A> </xref:System.Web.Security.Membership.GetUser%2A>"
  example:
  - "The following code example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> and sets the `userIsOnlineTimeWindow` attribute to 20 minutes.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\"  \n  userIsOnlineTimeWindow=\"20\">  \n  <providers>  \n    <add name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      enablePasswordRetrieval=\"true\"  \n      enablePasswordReset=\"false\"  \n      requiresQuestionAndAnswer=\"true\"  \n      passwordFormat=\"Encrypted\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</membership>  \n```"
  syntax:
    content: public static int UserIsOnlineTimeWindow { get; }
    return:
      type: System.Int32
      description: "在最後一個活動之後的分鐘數日期/時間戳記使用者的使用者會視為在線上。"
  overload: System.Web.Security.Membership.UserIsOnlineTimeWindow*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.ValidateUser(System.String,System.String)
  id: ValidateUser(System.String,System.String)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: ValidateUser(String,String)
  nameWithType: Membership.ValidateUser(String,String)
  fullName: System.Web.Security.Membership.ValidateUser(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "驗證提供的使用者名稱和密碼有效。"
  remarks: "ValidateUser 提供簡單的方法來驗證使用者名稱和密碼，從資料來源。 請注意，如果`username`參數是空的或`null`、<xref:System.Web.HttpException>就會擲回。</xref:System.Web.HttpException>"
  example:
  - "The following code example shows the login page for an ASP.NET application configured to use forms authentication and the <xref:System.Web.Security.Membership> class. If the supplied user credentials are invalid, a message is displayed to the user. Otherwise, the user is redirected to the originally requested URL by the <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> method.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#1](~/add/codesnippet/csharp/m-system.web.security.me_7_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#1](~/add/codesnippet/visualbasic/m-system.web.security.me_7_1.aspx)]"
  syntax:
    content: public static bool ValidateUser (string username, string password);
    parameters:
    - id: username
      type: System.String
      description: "要驗證的使用者名稱。"
    - id: password
      type: System.String
      description: "指定使用者的密碼。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果提供的使用者名稱和密碼是有效的。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.Security.Membership.ValidateUser*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.ValidatingPassword
  id: ValidatingPassword
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: ValidatingPassword
  nameWithType: Membership.ValidatingPassword
  fullName: System.Web.Security.Membership.ValidatingPassword
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "建立使用者、 變更密碼，或重設密碼時，就會發生。"
  remarks: "<xref:System.Web.Security.MembershipProvider.ValidatingPassword>就會引發事件時<xref:System.Web.Security.MembershipProvider.CreateUser%2A>方法，<xref:System.Web.Security.MembershipProvider.ChangePassword%2A>方法，或<xref:System.Web.Security.MembershipProvider.ResetPassword%2A>呼叫方法的成員資格提供者。</xref:System.Web.Security.MembershipProvider.ResetPassword%2A> </xref:System.Web.Security.MembershipProvider.ChangePassword%2A> </xref:System.Web.Security.MembershipProvider.CreateUser%2A> </xref:System.Web.Security.MembershipProvider.ValidatingPassword>       您可以使用<xref:System.Web.Security.MembershipProvider.ValidatingPassword>事件，以驗證密碼格式和成員資格使用者的值。</xref:System.Web.Security.MembershipProvider.ValidatingPassword>       您可以取消目前<xref:System.Web.Security.MembershipProvider.CreateUser%2A>， <xref:System.Web.Security.MembershipProvider.ChangePassword%2A>，或<xref:System.Web.Security.MembershipProvider.ResetPassword%2A>藉由設定動作<xref:System.Web.Security.ValidatePasswordEventArgs.Cancel%2A>屬性提供<xref:System.Web.Security.ValidatePasswordEventArgs>至`true`期間<xref:System.Web.Security.MembershipProvider.ValidatingPassword>事件。</xref:System.Web.Security.MembershipProvider.ValidatingPassword> </xref:System.Web.Security.ValidatePasswordEventArgs> </xref:System.Web.Security.ValidatePasswordEventArgs.Cancel%2A> </xref:System.Web.Security.MembershipProvider.ResetPassword%2A> </xref:System.Web.Security.MembershipProvider.ChangePassword%2A> </xref:System.Web.Security.MembershipProvider.CreateUser%2A>       如果您藉由設定取消目前動作<xref:System.Web.Security.ValidatePasswordEventArgs.Cancel%2A>屬性`true`，您可以設定<xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation%2A>屬性提供<xref:System.Web.Security.ValidatePasswordEventArgs>描述密碼驗證失敗之原因的例外狀況。</xref:System.Web.Security.ValidatePasswordEventArgs> </xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation%2A> </xref:System.Web.Security.ValidatePasswordEventArgs.Cancel%2A> 呼叫方法將會擲回例外狀況，<xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation%2A>屬性設定為。</xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation%2A> 如果<xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation%2A>屬性是`null`，呼叫端將會擲回泛型密碼驗證失敗例外狀況。</xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation%2A>"
  example:
  - "The following code example shows a <xref:System.Web.Security.MembershipProvider.ValidatingPassword> event that validates the format of the password for a user and cancels the action if the password does not match the required format.  \n  \n [!code-cs[System.Web.Security.Membership#11](~/add/codesnippet/csharp/e-system.web.security.me_1.aspx)]\n [!code-vb[System.Web.Security.Membership#11](~/add/codesnippet/visualbasic/e-system.web.security.me_1.aspx)]"
  syntax:
    content: public static event System.Web.Security.MembershipValidatePasswordEventHandler ValidatingPassword;
    return:
      type: System.Web.Security.MembershipValidatePasswordEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.Security.MembershipCreateUserException
  isExternal: true
  name: System.Web.Security.MembershipCreateUserException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.Security.Membership.ApplicationName
  parent: System.Web.Security.Membership
  isExternal: false
  name: ApplicationName
  nameWithType: Membership.ApplicationName
  fullName: System.Web.Security.Membership.ApplicationName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Security.Membership.CreateUser(System.String,System.String)
  parent: System.Web.Security.Membership
  isExternal: false
  name: CreateUser(String,String)
  nameWithType: Membership.CreateUser(String,String)
  fullName: System.Web.Security.Membership.CreateUser(String,String)
- uid: System.Web.Security.MembershipUser
  parent: System.Web.Security
  isExternal: true
  name: MembershipUser
  nameWithType: MembershipUser
  fullName: System.Web.Security.MembershipUser
- uid: System.Web.Security.Membership.CreateUser(System.String,System.String,System.String)
  parent: System.Web.Security.Membership
  isExternal: false
  name: CreateUser(String,String,String)
  nameWithType: Membership.CreateUser(String,String,String)
  fullName: System.Web.Security.Membership.CreateUser(String,String,String)
- uid: System.Web.Security.Membership.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Web.Security.MembershipCreateStatus@)
  parent: System.Web.Security.Membership
  isExternal: false
  name: CreateUser(String,String,String,String,String,Boolean,MembershipCreateStatus)
  nameWithType: Membership.CreateUser(String,String,String,String,String,Boolean,MembershipCreateStatus)
  fullName: System.Web.Security.Membership.CreateUser(String,String,String,String,String,Boolean,MembershipCreateStatus)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Security.MembershipCreateStatus
  parent: System.Web.Security
  isExternal: true
  name: MembershipCreateStatus
  nameWithType: MembershipCreateStatus
  fullName: System.Web.Security.MembershipCreateStatus
- uid: System.Web.Security.Membership.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)
  parent: System.Web.Security.Membership
  isExternal: false
  name: CreateUser(String,String,String,String,String,Boolean,Object,MembershipCreateStatus)
  nameWithType: Membership.CreateUser(String,String,String,String,String,Boolean,Object,MembershipCreateStatus)
  fullName: System.Web.Security.Membership.CreateUser(String,String,String,String,String,Boolean,Object,MembershipCreateStatus)
- uid: System.Web.Security.Membership.DeleteUser(System.String)
  parent: System.Web.Security.Membership
  isExternal: false
  name: DeleteUser(String)
  nameWithType: Membership.DeleteUser(String)
  fullName: System.Web.Security.Membership.DeleteUser(String)
- uid: System.Web.Security.Membership.DeleteUser(System.String,System.Boolean)
  parent: System.Web.Security.Membership
  isExternal: false
  name: DeleteUser(String,Boolean)
  nameWithType: Membership.DeleteUser(String,Boolean)
  fullName: System.Web.Security.Membership.DeleteUser(String,Boolean)
- uid: System.Web.Security.Membership.EnablePasswordReset
  parent: System.Web.Security.Membership
  isExternal: false
  name: EnablePasswordReset
  nameWithType: Membership.EnablePasswordReset
  fullName: System.Web.Security.Membership.EnablePasswordReset
- uid: System.Web.Security.Membership.EnablePasswordRetrieval
  parent: System.Web.Security.Membership
  isExternal: false
  name: EnablePasswordRetrieval
  nameWithType: Membership.EnablePasswordRetrieval
  fullName: System.Web.Security.Membership.EnablePasswordRetrieval
- uid: System.Web.Security.Membership.FindUsersByEmail(System.String)
  parent: System.Web.Security.Membership
  isExternal: false
  name: FindUsersByEmail(String)
  nameWithType: Membership.FindUsersByEmail(String)
  fullName: System.Web.Security.Membership.FindUsersByEmail(String)
- uid: System.Web.Security.MembershipUserCollection
  parent: System.Web.Security
  isExternal: true
  name: MembershipUserCollection
  nameWithType: MembershipUserCollection
  fullName: System.Web.Security.MembershipUserCollection
- uid: System.Web.Security.Membership.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Security.Membership
  isExternal: false
  name: FindUsersByEmail(String,Int32,Int32,Int32)
  nameWithType: Membership.FindUsersByEmail(String,Int32,Int32,Int32)
  fullName: System.Web.Security.Membership.FindUsersByEmail(String,Int32,Int32,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.Security.Membership.FindUsersByName(System.String)
  parent: System.Web.Security.Membership
  isExternal: false
  name: FindUsersByName(String)
  nameWithType: Membership.FindUsersByName(String)
  fullName: System.Web.Security.Membership.FindUsersByName(String)
- uid: System.Web.Security.Membership.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Security.Membership
  isExternal: false
  name: FindUsersByName(String,Int32,Int32,Int32)
  nameWithType: Membership.FindUsersByName(String,Int32,Int32,Int32)
  fullName: System.Web.Security.Membership.FindUsersByName(String,Int32,Int32,Int32)
- uid: System.Web.Security.Membership.GeneratePassword(System.Int32,System.Int32)
  parent: System.Web.Security.Membership
  isExternal: false
  name: GeneratePassword(Int32,Int32)
  nameWithType: Membership.GeneratePassword(Int32,Int32)
  fullName: System.Web.Security.Membership.GeneratePassword(Int32,Int32)
- uid: System.Web.Security.Membership.GetAllUsers
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetAllUsers()
  nameWithType: Membership.GetAllUsers()
  fullName: System.Web.Security.Membership.GetAllUsers()
- uid: System.Web.Security.Membership.GetAllUsers(System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetAllUsers(Int32,Int32,Int32)
  nameWithType: Membership.GetAllUsers(Int32,Int32,Int32)
  fullName: System.Web.Security.Membership.GetAllUsers(Int32,Int32,Int32)
- uid: System.Web.Security.Membership.GetNumberOfUsersOnline
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetNumberOfUsersOnline()
  nameWithType: Membership.GetNumberOfUsersOnline()
  fullName: System.Web.Security.Membership.GetNumberOfUsersOnline()
- uid: System.Web.Security.Membership.GetUser
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetUser()
  nameWithType: Membership.GetUser()
  fullName: System.Web.Security.Membership.GetUser()
- uid: System.Web.Security.Membership.GetUser(System.Boolean)
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetUser(Boolean)
  nameWithType: Membership.GetUser(Boolean)
  fullName: System.Web.Security.Membership.GetUser(Boolean)
- uid: System.Web.Security.Membership.GetUser(System.Object)
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetUser(Object)
  nameWithType: Membership.GetUser(Object)
  fullName: System.Web.Security.Membership.GetUser(Object)
- uid: System.Web.Security.Membership.GetUser(System.String)
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetUser(String)
  nameWithType: Membership.GetUser(String)
  fullName: System.Web.Security.Membership.GetUser(String)
- uid: System.Web.Security.Membership.GetUser(System.Object,System.Boolean)
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetUser(Object,Boolean)
  nameWithType: Membership.GetUser(Object,Boolean)
  fullName: System.Web.Security.Membership.GetUser(Object,Boolean)
- uid: System.Web.Security.Membership.GetUser(System.String,System.Boolean)
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetUser(String,Boolean)
  nameWithType: Membership.GetUser(String,Boolean)
  fullName: System.Web.Security.Membership.GetUser(String,Boolean)
- uid: System.Web.Security.Membership.GetUserNameByEmail(System.String)
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetUserNameByEmail(String)
  nameWithType: Membership.GetUserNameByEmail(String)
  fullName: System.Web.Security.Membership.GetUserNameByEmail(String)
- uid: System.Web.Security.Membership.HashAlgorithmType
  parent: System.Web.Security.Membership
  isExternal: false
  name: HashAlgorithmType
  nameWithType: Membership.HashAlgorithmType
  fullName: System.Web.Security.Membership.HashAlgorithmType
- uid: System.Web.Security.Membership.MaxInvalidPasswordAttempts
  parent: System.Web.Security.Membership
  isExternal: false
  name: MaxInvalidPasswordAttempts
  nameWithType: Membership.MaxInvalidPasswordAttempts
  fullName: System.Web.Security.Membership.MaxInvalidPasswordAttempts
- uid: System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters
  parent: System.Web.Security.Membership
  isExternal: false
  name: MinRequiredNonAlphanumericCharacters
  nameWithType: Membership.MinRequiredNonAlphanumericCharacters
  fullName: System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters
- uid: System.Web.Security.Membership.MinRequiredPasswordLength
  parent: System.Web.Security.Membership
  isExternal: false
  name: MinRequiredPasswordLength
  nameWithType: Membership.MinRequiredPasswordLength
  fullName: System.Web.Security.Membership.MinRequiredPasswordLength
- uid: System.Web.Security.Membership.PasswordAttemptWindow
  parent: System.Web.Security.Membership
  isExternal: false
  name: PasswordAttemptWindow
  nameWithType: Membership.PasswordAttemptWindow
  fullName: System.Web.Security.Membership.PasswordAttemptWindow
- uid: System.Web.Security.Membership.PasswordStrengthRegularExpression
  parent: System.Web.Security.Membership
  isExternal: false
  name: PasswordStrengthRegularExpression
  nameWithType: Membership.PasswordStrengthRegularExpression
  fullName: System.Web.Security.Membership.PasswordStrengthRegularExpression
- uid: System.Web.Security.Membership.Provider
  parent: System.Web.Security.Membership
  isExternal: false
  name: Provider
  nameWithType: Membership.Provider
  fullName: System.Web.Security.Membership.Provider
- uid: System.Web.Security.MembershipProvider
  parent: System.Web.Security
  isExternal: true
  name: MembershipProvider
  nameWithType: MembershipProvider
  fullName: System.Web.Security.MembershipProvider
- uid: System.Web.Security.Membership.Providers
  parent: System.Web.Security.Membership
  isExternal: false
  name: Providers
  nameWithType: Membership.Providers
  fullName: System.Web.Security.Membership.Providers
- uid: System.Web.Security.MembershipProviderCollection
  parent: System.Web.Security
  isExternal: true
  name: MembershipProviderCollection
  nameWithType: MembershipProviderCollection
  fullName: System.Web.Security.MembershipProviderCollection
- uid: System.Web.Security.Membership.RequiresQuestionAndAnswer
  parent: System.Web.Security.Membership
  isExternal: false
  name: RequiresQuestionAndAnswer
  nameWithType: Membership.RequiresQuestionAndAnswer
  fullName: System.Web.Security.Membership.RequiresQuestionAndAnswer
- uid: System.Web.Security.Membership.UpdateUser(System.Web.Security.MembershipUser)
  parent: System.Web.Security.Membership
  isExternal: false
  name: UpdateUser(MembershipUser)
  nameWithType: Membership.UpdateUser(MembershipUser)
  fullName: System.Web.Security.Membership.UpdateUser(MembershipUser)
- uid: System.Web.Security.Membership.UserIsOnlineTimeWindow
  parent: System.Web.Security.Membership
  isExternal: false
  name: UserIsOnlineTimeWindow
  nameWithType: Membership.UserIsOnlineTimeWindow
  fullName: System.Web.Security.Membership.UserIsOnlineTimeWindow
- uid: System.Web.Security.Membership.ValidateUser(System.String,System.String)
  parent: System.Web.Security.Membership
  isExternal: false
  name: ValidateUser(String,String)
  nameWithType: Membership.ValidateUser(String,String)
  fullName: System.Web.Security.Membership.ValidateUser(String,String)
- uid: System.Web.Security.Membership.ValidatingPassword
  parent: System.Web.Security.Membership
  isExternal: false
  name: ValidatingPassword
  nameWithType: Membership.ValidatingPassword
  fullName: System.Web.Security.Membership.ValidatingPassword
- uid: System.Web.Security.MembershipValidatePasswordEventHandler
  parent: System.Web.Security
  isExternal: true
  name: MembershipValidatePasswordEventHandler
  nameWithType: MembershipValidatePasswordEventHandler
  fullName: System.Web.Security.MembershipValidatePasswordEventHandler
- uid: System.Web.Security.Membership.ApplicationName*
  parent: System.Web.Security.Membership
  isExternal: false
  name: ApplicationName
  nameWithType: Membership.ApplicationName
- uid: System.Web.Security.Membership.CreateUser*
  parent: System.Web.Security.Membership
  isExternal: false
  name: CreateUser
  nameWithType: Membership.CreateUser
- uid: System.Web.Security.Membership.DeleteUser*
  parent: System.Web.Security.Membership
  isExternal: false
  name: DeleteUser
  nameWithType: Membership.DeleteUser
- uid: System.Web.Security.Membership.EnablePasswordReset*
  parent: System.Web.Security.Membership
  isExternal: false
  name: EnablePasswordReset
  nameWithType: Membership.EnablePasswordReset
- uid: System.Web.Security.Membership.EnablePasswordRetrieval*
  parent: System.Web.Security.Membership
  isExternal: false
  name: EnablePasswordRetrieval
  nameWithType: Membership.EnablePasswordRetrieval
- uid: System.Web.Security.Membership.FindUsersByEmail*
  parent: System.Web.Security.Membership
  isExternal: false
  name: FindUsersByEmail
  nameWithType: Membership.FindUsersByEmail
- uid: System.Web.Security.Membership.FindUsersByName*
  parent: System.Web.Security.Membership
  isExternal: false
  name: FindUsersByName
  nameWithType: Membership.FindUsersByName
- uid: System.Web.Security.Membership.GeneratePassword*
  parent: System.Web.Security.Membership
  isExternal: false
  name: GeneratePassword
  nameWithType: Membership.GeneratePassword
- uid: System.Web.Security.Membership.GetAllUsers*
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetAllUsers
  nameWithType: Membership.GetAllUsers
- uid: System.Web.Security.Membership.GetNumberOfUsersOnline*
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetNumberOfUsersOnline
  nameWithType: Membership.GetNumberOfUsersOnline
- uid: System.Web.Security.Membership.GetUser*
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetUser
  nameWithType: Membership.GetUser
- uid: System.Web.Security.Membership.GetUserNameByEmail*
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetUserNameByEmail
  nameWithType: Membership.GetUserNameByEmail
- uid: System.Web.Security.Membership.HashAlgorithmType*
  parent: System.Web.Security.Membership
  isExternal: false
  name: HashAlgorithmType
  nameWithType: Membership.HashAlgorithmType
- uid: System.Web.Security.Membership.MaxInvalidPasswordAttempts*
  parent: System.Web.Security.Membership
  isExternal: false
  name: MaxInvalidPasswordAttempts
  nameWithType: Membership.MaxInvalidPasswordAttempts
- uid: System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters*
  parent: System.Web.Security.Membership
  isExternal: false
  name: MinRequiredNonAlphanumericCharacters
  nameWithType: Membership.MinRequiredNonAlphanumericCharacters
- uid: System.Web.Security.Membership.MinRequiredPasswordLength*
  parent: System.Web.Security.Membership
  isExternal: false
  name: MinRequiredPasswordLength
  nameWithType: Membership.MinRequiredPasswordLength
- uid: System.Web.Security.Membership.PasswordAttemptWindow*
  parent: System.Web.Security.Membership
  isExternal: false
  name: PasswordAttemptWindow
  nameWithType: Membership.PasswordAttemptWindow
- uid: System.Web.Security.Membership.PasswordStrengthRegularExpression*
  parent: System.Web.Security.Membership
  isExternal: false
  name: PasswordStrengthRegularExpression
  nameWithType: Membership.PasswordStrengthRegularExpression
- uid: System.Web.Security.Membership.Provider*
  parent: System.Web.Security.Membership
  isExternal: false
  name: Provider
  nameWithType: Membership.Provider
- uid: System.Web.Security.Membership.Providers*
  parent: System.Web.Security.Membership
  isExternal: false
  name: Providers
  nameWithType: Membership.Providers
- uid: System.Web.Security.Membership.RequiresQuestionAndAnswer*
  parent: System.Web.Security.Membership
  isExternal: false
  name: RequiresQuestionAndAnswer
  nameWithType: Membership.RequiresQuestionAndAnswer
- uid: System.Web.Security.Membership.UpdateUser*
  parent: System.Web.Security.Membership
  isExternal: false
  name: UpdateUser
  nameWithType: Membership.UpdateUser
- uid: System.Web.Security.Membership.UserIsOnlineTimeWindow*
  parent: System.Web.Security.Membership
  isExternal: false
  name: UserIsOnlineTimeWindow
  nameWithType: Membership.UserIsOnlineTimeWindow
- uid: System.Web.Security.Membership.ValidateUser*
  parent: System.Web.Security.Membership
  isExternal: false
  name: ValidateUser
  nameWithType: Membership.ValidateUser
