### YamlMime:ManagedReference
items:
- uid: System.Management.Instrumentation.ManagementKeyAttribute
  id: ManagementKeyAttribute
  children:
  - System.Management.Instrumentation.ManagementKeyAttribute.#ctor
  langs:
  - csharp
  name: ManagementKeyAttribute
  nameWithType: ManagementKeyAttribute
  fullName: System.Management.Instrumentation.ManagementKeyAttribute
  type: Class
  summary: "ManagementKey 屬性會識別在 WMI 類別的索引鍵的屬性。       注意︰ WMI.NET 程式庫目前被認為在最終狀態，而且沒有進一步開發之用，增強功能，或更新可供非安全性相關問題會影響這些程式庫。 [MI Api](https://msdn.microsoft.com/en-us/library/jj152383%28v=vs.80%29.aspx)適用於所有新的開發。"
  remarks: "WMI 類別是一個 singleton，除非它可以有多個對應執行個體。 類別的用戶端必須可以唯一地識別他們感興趣的特定執行個體。 因此，提供者撰寫人員，您必須選擇屬性或一組唯一識別每個 WMI 類別的執行個體的屬性。 您可以使用 ManagementKeyAttribute 屬性來識別這些索引鍵的屬性。 屬性識別為索引鍵具有唯讀屬性所指定相同的執行階段行為<xref:System.Management.Instrumentation.ManagementProbeAttribute>屬性。</xref:System.Management.Instrumentation.ManagementProbeAttribute>"
  example:
  - "The following example shows how to use the ManagementKeyAttribute to mark a field as a key property of a WMI class.  \n  \n```  \n[ManagementKey]  \npublic int id;  \n```  \n  \n The next example shows how to use the ManagementKeyAttribute attribute to mark a key property of a WMI class.  \n  \n [C#]  \n  \n```  \n// Use the ManagementKey attribute to specify that this property   \n// is used as the key identifier of this class and for the WMI  \n// instances of this class.  This property must be unique for each  \n// class instance.  \n[ManagementKey]  \npublic int Id  \n{  \n    get { return System.Diagnostics.Process.GetCurrentProcess().Id; }  \n}  \n```"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Property | System.AttributeTargets.Field, AllowMultiple=false)]

      public sealed class ManagementKeyAttribute : System.Management.Instrumentation.ManagementMemberAttribute
  inheritance:
  - System.Attribute
  - System.Management.Instrumentation.ManagementMemberAttribute
  implements: []
  inheritedMembers:
  - System.Management.Instrumentation.ManagementMemberAttribute.Name
  platform:
  - net462
- uid: System.Management.Instrumentation.ManagementKeyAttribute.#ctor
  id: '#ctor'
  parent: System.Management.Instrumentation.ManagementKeyAttribute
  langs:
  - csharp
  name: ManagementKeyAttribute()
  nameWithType: ManagementKeyAttribute.ManagementKeyAttribute()
  fullName: System.Management.Instrumentation.ManagementKeyAttribute.ManagementKeyAttribute()
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Management.Instrumentation
  summary: "初始化<xref:System.Management.ManagementKeyAttribute>類別</xref:System.Management.ManagementKeyAttribute>的新執行個體 這是預設建構函式。"
  syntax:
    content: public ManagementKeyAttribute ();
    parameters: []
  overload: System.Management.Instrumentation.ManagementKeyAttribute.#ctor*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Management.Instrumentation.ManagementMemberAttribute
  isExternal: false
  name: System.Management.Instrumentation.ManagementMemberAttribute
- uid: System.Management.Instrumentation.ManagementKeyAttribute.#ctor
  parent: System.Management.Instrumentation.ManagementKeyAttribute
  isExternal: false
  name: ManagementKeyAttribute()
  nameWithType: ManagementKeyAttribute.ManagementKeyAttribute()
  fullName: System.Management.Instrumentation.ManagementKeyAttribute.ManagementKeyAttribute()
- uid: System.Management.Instrumentation.ManagementKeyAttribute.#ctor*
  parent: System.Management.Instrumentation.ManagementKeyAttribute
  isExternal: false
  name: ManagementKeyAttribute
  nameWithType: ManagementKeyAttribute.ManagementKeyAttribute
