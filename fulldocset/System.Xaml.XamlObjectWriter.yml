### YamlMime:ManagedReference
items:
- uid: System.Xaml.XamlObjectWriter
  id: XamlObjectWriter
  children:
  - System.Xaml.XamlObjectWriter.#ctor(System.Xaml.XamlSchemaContext)
  - System.Xaml.XamlObjectWriter.#ctor(System.Xaml.XamlSchemaContext,System.Xaml.XamlObjectWriterSettings)
  - System.Xaml.XamlObjectWriter.Clear
  - System.Xaml.XamlObjectWriter.Dispose(System.Boolean)
  - System.Xaml.XamlObjectWriter.OnAfterBeginInit(System.Object)
  - System.Xaml.XamlObjectWriter.OnAfterEndInit(System.Object)
  - System.Xaml.XamlObjectWriter.OnAfterProperties(System.Object)
  - System.Xaml.XamlObjectWriter.OnBeforeProperties(System.Object)
  - System.Xaml.XamlObjectWriter.OnSetValue(System.Object,System.Xaml.XamlMember,System.Object)
  - System.Xaml.XamlObjectWriter.Result
  - System.Xaml.XamlObjectWriter.RootNameScope
  - System.Xaml.XamlObjectWriter.SchemaContext
  - System.Xaml.XamlObjectWriter.SetLineInfo(System.Int32,System.Int32)
  - System.Xaml.XamlObjectWriter.ShouldProvideLineInfo
  - System.Xaml.XamlObjectWriter.WriteEndMember
  - System.Xaml.XamlObjectWriter.WriteEndObject
  - System.Xaml.XamlObjectWriter.WriteGetObject
  - System.Xaml.XamlObjectWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)
  - System.Xaml.XamlObjectWriter.WriteStartMember(System.Xaml.XamlMember)
  - System.Xaml.XamlObjectWriter.WriteStartObject(System.Xaml.XamlType)
  - System.Xaml.XamlObjectWriter.WriteValue(System.Object)
  langs:
  - csharp
  name: XamlObjectWriter
  nameWithType: XamlObjectWriter
  fullName: System.Xaml.XamlObjectWriter
  type: Class
  summary: "建立從來源 XAML 節點資料流的物件圖形。"
  remarks: "`Write` XamlObjectWriter 方法實作模式，以便讓 XamlObjectWriter 使用<xref:System.Xaml.XamlWriter>所定義的<xref:System.Xaml.XamlWriter.WriteNode%2A>方法。</xref:System.Xaml.XamlWriter.WriteNode%2A> </xref:System.Xaml.XamlWriter> <xref:System.Xaml.XamlWriter.WriteNode%2A>邏輯交換器之間`Write`方法，根據哪個節點型別是讀取器中目前的位置。</xref:System.Xaml.XamlWriter.WriteNode%2A>      ## 範圍 XamlObjectWriter 具有範圍; 的概念也就是說，XamlObjectWriter 維護概念的其輸出的物件圖形中的參考點。 針對特定範圍，某些作業可能會有效或無效，或產生無作業的結果。 例如，如果您呼叫<xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A>物件上的初始化已存在做為執行個體，請撰寫指示詞的預設實作會擲回例外狀況。</xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A>       追蹤中自訂 XamlObjectWriter 範圍可能技巧是將對齊堆疊或框架的類別使用的節點動作。 框架的堆疊可以追蹤的 push 和 pop 每個層級的物件模型的深度，進入或離開而 XamlObjectWriter 寫入物件圖形。      ## 回呼以支援中繼和進階 XamlObjectWriter 案例中，撰寫物件圖形的機制提供回呼 XamlObjectWriter 認可或即將認可特定動作時，會發生的進入點。 某些回呼會在設定中啟用和並非所特有物件類型或成員正在寫入;不過，回呼資訊通常是在內容中使用，或者是在事件會透過回呼傳送的資料。 下列是一份相關回呼:-由宣告回呼<xref:System.Xaml.XamlObjectWriterSettings.AfterBeginInitHandler%2A>時範圍會移入新的物件，並在叫用<xref:System.ComponentModel.ISupportInitialize.BeginInit%2A>階段建立的每個物件的物件存留期。</xref:System.ComponentModel.ISupportInitialize.BeginInit%2A> </xref:System.Xaml.XamlObjectWriterSettings.AfterBeginInitHandler%2A>      由宣告-回呼<xref:System.Xaml.XamlObjectWriterSettings.AfterEndInitHandler%2A>時範圍會移入新的物件，並在叫用<xref:System.ComponentModel.ISupportInitialize.EndInit%2A>階段建立的每個物件的物件存留期。</xref:System.ComponentModel.ISupportInitialize.EndInit%2A> </xref:System.Xaml.XamlObjectWriterSettings.AfterEndInitHandler%2A>      由宣告-回呼<xref:System.Xaml.XamlObjectWriterSettings.BeforePropertiesHandler%2A>範圍物件，一開始，而發生時叫用時第一個<xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A>呼叫該物件範圍時進行，但尚未認可。</xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A> </xref:System.Xaml.XamlObjectWriterSettings.BeforePropertiesHandler%2A>      由宣告-回呼<xref:System.Xaml.XamlObjectWriterSettings.AfterPropertiesHandler%2A>範圍物件，一開始，而發生時叫用時<xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A>呼叫該物件範圍時進行，但尚未認可。</xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A> </xref:System.Xaml.XamlObjectWriterSettings.AfterPropertiesHandler%2A>      由宣告-回呼<xref:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler%2A>時叫用<xref:System.Xaml.XamlObjectWriter.OnSetValue%2A>稱為。</xref:System.Xaml.XamlObjectWriter.OnSetValue%2A> </xref:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler%2A>      ## 撰寫 XamlObjectWriter 的預設實作的字典索引鍵的條件約束支援的型別轉換<xref:System.Collections.Generic.Dictionary%602>之前字典內容加入物件圖形。</xref:System.Collections.Generic.Dictionary%602> 如此一來，在泛型字典可以在執行階段物件索引鍵，而且符合相關的一般`Add`和索引子的行為。 不過，實作的基底 XamlObjectWriter，這項功能存在物件圖形建立基底<xref:System.Collections.Generic.Dictionary%602>類別，不能用於在衍生類別的<xref:System.Collections.Generic.Dictionary%602>。</xref:System.Collections.Generic.Dictionary%602> </xref:System.Collections.Generic.Dictionary%602>      ## 處置 XAML 寫入器檢查可能用來延後的作業，或其中針對在過渡期中已處置的 XAML 寫入器執行個體進行呼叫。 XamlObjectWriter 的各種應用程式開發介面可能會擲回<xref:System.ObjectDisposedException>在這些情況下。</xref:System.ObjectDisposedException>"
  syntax:
    content: 'public class XamlObjectWriter : System.Xaml.XamlWriter, System.Xaml.IXamlLineInfoConsumer'
  inheritance:
  - System.Object
  - System.Xaml.XamlWriter
  implements:
  - System.Xaml.IXamlLineInfoConsumer
  inheritedMembers:
  - System.Xaml.XamlWriter.Close
  - System.Xaml.XamlWriter.IsDisposed
  - System.Xaml.XamlWriter.System#IDisposable#Dispose
  - System.Xaml.XamlWriter.WriteNode(System.Xaml.XamlReader)
  platform:
  - net462
- uid: System.Xaml.XamlObjectWriter.#ctor(System.Xaml.XamlSchemaContext)
  id: '#ctor(System.Xaml.XamlSchemaContext)'
  parent: System.Xaml.XamlObjectWriter
  langs:
  - csharp
  name: XamlObjectWriter(XamlSchemaContext)
  nameWithType: XamlObjectWriter.XamlObjectWriter(XamlSchemaContext)
  fullName: System.Xaml.XamlObjectWriter.XamlObjectWriter(XamlSchemaContext)
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "初始化的新執行個體<xref href=&quot;System.Xaml.XamlObjectWriter&quot;></xref>類別使用 XAML 結構描述內容，以供<xref href=&quot;System.Xaml.XamlReader&quot;> </xref>。"
  syntax:
    content: public XamlObjectWriter (System.Xaml.XamlSchemaContext schemaContext);
    parameters:
    - id: schemaContext
      type: System.Xaml.XamlSchemaContext
      description: "XAML 讀取器所提供的節點進行寫入與共用的 XAML 結構描述內容。"
  overload: System.Xaml.XamlObjectWriter.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>schemaContext</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Xaml.XamlObjectWriter.#ctor(System.Xaml.XamlSchemaContext,System.Xaml.XamlObjectWriterSettings)
  id: '#ctor(System.Xaml.XamlSchemaContext,System.Xaml.XamlObjectWriterSettings)'
  parent: System.Xaml.XamlObjectWriter
  langs:
  - csharp
  name: XamlObjectWriter(XamlSchemaContext,XamlObjectWriterSettings)
  nameWithType: XamlObjectWriter.XamlObjectWriter(XamlSchemaContext,XamlObjectWriterSettings)
  fullName: System.Xaml.XamlObjectWriter.XamlObjectWriter(XamlSchemaContext,XamlObjectWriterSettings)
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "初始化的新執行個體<xref href=&quot;System.Xaml.XamlObjectWriter&quot;></xref>類別使用的內容，以供<xref href=&quot;System.Xaml.XamlReader&quot;></xref>及其設定。"
  syntax:
    content: public XamlObjectWriter (System.Xaml.XamlSchemaContext schemaContext, System.Xaml.XamlObjectWriterSettings settings);
    parameters:
    - id: schemaContext
      type: System.Xaml.XamlSchemaContext
      description: "XAML 讀取器所提供的節點進行寫入與共用的 XAML 結構描述內容。"
    - id: settings
      type: System.Xaml.XamlObjectWriterSettings
      description: "指定的特定選項的設定物件<xref href=&quot;System.Xaml.XamlObjectWriter&quot;></xref>行為和輸出。"
  overload: System.Xaml.XamlObjectWriter.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>schemaContext</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Xaml.XamlObjectWriter.Clear
  id: Clear
  parent: System.Xaml.XamlObjectWriter
  langs:
  - csharp
  name: Clear()
  nameWithType: XamlObjectWriter.Clear()
  fullName: System.Xaml.XamlObjectWriter.Clear()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "重設所有可能的框架，並清除物件圖形。"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Xaml.XamlObjectWriter.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlObjectWriter.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Xaml.XamlObjectWriter
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: XamlObjectWriter.Dispose(Boolean)
  fullName: System.Xaml.XamlObjectWriter.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "所使用的 unmanaged 的資源釋出<xref href=&quot;System.Xaml.XamlObjectWriter&quot;> </xref>，並選擇性地釋放 managed 的資源。"
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>表示釋放 managed 的資源，否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Xaml.XamlObjectWriter.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlObjectWriter.OnAfterBeginInit(System.Object)
  id: OnAfterBeginInit(System.Object)
  parent: System.Xaml.XamlObjectWriter
  langs:
  - csharp
  name: OnAfterBeginInit(Object)
  nameWithType: XamlObjectWriter.OnAfterBeginInit(Object)
  fullName: System.Xaml.XamlObjectWriter.OnAfterBeginInit(Object)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "叫用任何<xref:System.Xaml.XamlObjectWriterSettings.AfterBeginInitHandler*>相關聯的方法<xref href=&quot;System.Xaml.XamlObjectWriterSettings&quot;></xref>這個<xref href=&quot;System.Xaml.XamlObjectWriter&quot;> </xref>。</xref:System.Xaml.XamlObjectWriterSettings.AfterBeginInitHandler*>"
  syntax:
    content: protected virtual void OnAfterBeginInit (object value);
    parameters:
    - id: value
      type: System.Object
      description: "要報告的物件。 物件會封裝到<xref href=&quot;System.Xaml.XamlObjectEventArgs&quot;></xref>叫用處理常式的時機。"
  overload: System.Xaml.XamlObjectWriter.OnAfterBeginInit*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlObjectWriter.OnAfterEndInit(System.Object)
  id: OnAfterEndInit(System.Object)
  parent: System.Xaml.XamlObjectWriter
  langs:
  - csharp
  name: OnAfterEndInit(Object)
  nameWithType: XamlObjectWriter.OnAfterEndInit(Object)
  fullName: System.Xaml.XamlObjectWriter.OnAfterEndInit(Object)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "叫用任何<xref:System.Xaml.XamlObjectWriterSettings.AfterEndInitHandler*>相關聯的方法<xref href=&quot;System.Xaml.XamlObjectWriterSettings&quot;></xref>這個<xref href=&quot;System.Xaml.XamlObjectWriter&quot;> </xref>。</xref:System.Xaml.XamlObjectWriterSettings.AfterEndInitHandler*>"
  syntax:
    content: protected virtual void OnAfterEndInit (object value);
    parameters:
    - id: value
      type: System.Object
      description: "要報告的物件。 值會封裝到<xref href=&quot;System.Xaml.XamlObjectEventArgs&quot;></xref>叫用處理常式的時機。"
  overload: System.Xaml.XamlObjectWriter.OnAfterEndInit*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlObjectWriter.OnAfterProperties(System.Object)
  id: OnAfterProperties(System.Object)
  parent: System.Xaml.XamlObjectWriter
  langs:
  - csharp
  name: OnAfterProperties(Object)
  nameWithType: XamlObjectWriter.OnAfterProperties(Object)
  fullName: System.Xaml.XamlObjectWriter.OnAfterProperties(Object)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "叫用任何<xref:System.Xaml.XamlObjectWriterSettings.AfterPropertiesHandler*>參考方法相關聯<xref href=&quot;System.Xaml.XamlObjectWriterSettings&quot;></xref>這個<xref href=&quot;System.Xaml.XamlObjectWriter&quot;> </xref>。</xref:System.Xaml.XamlObjectWriterSettings.AfterPropertiesHandler*>"
  syntax:
    content: protected virtual void OnAfterProperties (object value);
    parameters:
    - id: value
      type: System.Object
      description: "要報告的物件。 這封裝成<xref href=&quot;System.Xaml.XamlObjectEventArgs&quot;></xref>叫用處理常式的時機。"
  overload: System.Xaml.XamlObjectWriter.OnAfterProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlObjectWriter.OnBeforeProperties(System.Object)
  id: OnBeforeProperties(System.Object)
  parent: System.Xaml.XamlObjectWriter
  langs:
  - csharp
  name: OnBeforeProperties(Object)
  nameWithType: XamlObjectWriter.OnBeforeProperties(Object)
  fullName: System.Xaml.XamlObjectWriter.OnBeforeProperties(Object)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "叫用任何<xref:System.Xaml.XamlObjectWriterSettings.BeforePropertiesHandler*>參考方法相關聯<xref href=&quot;System.Xaml.XamlObjectWriterSettings&quot;></xref>這個<xref href=&quot;System.Xaml.XamlObjectWriter&quot;> </xref>。</xref:System.Xaml.XamlObjectWriterSettings.BeforePropertiesHandler*>"
  syntax:
    content: protected virtual void OnBeforeProperties (object value);
    parameters:
    - id: value
      type: System.Object
      description: "值通過<xref href=&quot;System.Xaml.XamlObjectEventArgs&quot;></xref>叫用處理常式的時機。"
  overload: System.Xaml.XamlObjectWriter.OnBeforeProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlObjectWriter.OnSetValue(System.Object,System.Xaml.XamlMember,System.Object)
  id: OnSetValue(System.Object,System.Xaml.XamlMember,System.Object)
  parent: System.Xaml.XamlObjectWriter
  langs:
  - csharp
  name: OnSetValue(Object,XamlMember,Object)
  nameWithType: XamlObjectWriter.OnSetValue(Object,XamlMember,Object)
  fullName: System.Xaml.XamlObjectWriter.OnSetValue(Object,XamlMember,Object)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "叫用任何<xref:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler*>參考方法相關聯<xref href=&quot;System.Xaml.XamlObjectWriterSettings&quot;></xref>這個寫入器，只要<code> handled </code>中<xref href=&quot;System.Windows.Markup.XamlSetValueEventArgs&quot;></xref>事件資料不是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。</xref:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler*>"
  remarks: "如果`SetValue`此 XAML 寫入器的作業有關聯的處理常式 (<xref:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler%2A>中宣告<xref:System.Xaml.XamlObjectWriterSettings>)，這個方法建立新<xref:System.Windows.Markup.XamlSetValueEventArgs>並將其傳遞至處理常式。</xref:System.Windows.Markup.XamlSetValueEventArgs> </xref:System.Xaml.XamlObjectWriterSettings> </xref:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler%2A> 傳回的值由讀取設定<xref:System.Windows.Markup.XamlSetValueEventArgs.Handled%2A>事件資料會傳遞的值。</xref:System.Windows.Markup.XamlSetValueEventArgs.Handled%2A> 如果處理常式不存在，而且這個方法會叫用，則呼叫會傳回`false`。"
  syntax:
    content: protected virtual bool OnSetValue (object eventSender, System.Xaml.XamlMember member, object value);
    parameters:
    - id: eventSender
      type: System.Object
      description: "要報表做為來源至處理常式的物件。"
    - id: member
      type: System.Xaml.XamlMember
      description: "要設定屬性名稱的一部分傳遞至處理常式<xref href=&quot;System.Windows.Markup.XamlSetValueEventArgs&quot;> </xref>。"
    - id: value
      type: System.Object
      description: "值，可提供屬性來命名的`property`。 值會傳遞至處理常式的一部分<xref href=&quot;System.Windows.Markup.XamlSetValueEventArgs&quot;> </xref>。"
    return:
      type: System.Boolean
      description: "布林值，設定任何相關聯的處理常式。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 請參閱 < 備註 >。"
  overload: System.Xaml.XamlObjectWriter.OnSetValue*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlObjectWriter.Result
  id: Result
  parent: System.Xaml.XamlObjectWriter
  langs:
  - csharp
  name: Result
  nameWithType: XamlObjectWriter.Result
  fullName: System.Xaml.XamlObjectWriter.Result
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "取得上次寫入的物件。 通常只稱為其結尾會在節點資料流和已完成的物件圖形時。"
  remarks: "結果的最常見用法是，只有在節點資料流已知為其結尾，且已完成的物件圖形呼叫它。 否則，物件圖形可能會不完整，並不是適用於大部分平台案例。       結果通常只包含非 null 值，如果呼叫之後立即呼叫<xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A>，而且如果目前的範圍是處於其中的物件會提供值的成員。</xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A>"
  syntax:
    content: public virtual object Result { get; }
    return:
      type: System.Object
      description: "寫入的最後一個物件或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。 請參閱 < 備註 >。"
  overload: System.Xaml.XamlObjectWriter.Result*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlObjectWriter.RootNameScope
  id: RootNameScope
  parent: System.Xaml.XamlObjectWriter
  langs:
  - csharp
  name: RootNameScope
  nameWithType: XamlObjectWriter.RootNameScope
  fullName: System.Xaml.XamlObjectWriter.RootNameScope
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "取得<xref:System.Windows.Markup.INameScope>維護絕對節點根目錄的 XAML 物件寫入器的 XAML 名稱範圍的服務。</xref:System.Windows.Markup.INameScope>"
  remarks: "這個屬性的值可能來自物件寫入器內容。"
  syntax:
    content: public System.Windows.Markup.INameScope RootNameScope { get; }
    return:
      type: System.Windows.Markup.INameScope
      description: "<xref:System.Windows.Markup.INameScope>服務，可維護的 XAML 名稱範圍的物件寫入器目前的根目錄。</xref:System.Windows.Markup.INameScope>"
  overload: System.Xaml.XamlObjectWriter.RootNameScope*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlObjectWriter.SchemaContext
  id: SchemaContext
  parent: System.Xaml.XamlObjectWriter
  langs:
  - csharp
  name: SchemaContext
  nameWithType: XamlObjectWriter.SchemaContext
  fullName: System.Xaml.XamlObjectWriter.SchemaContext
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "取得作用中的 XAML 結構描述內容。"
  remarks: "XAML 結構描述內容是最實用的物件撰寫案例所需的資訊來源。 XAML 結構描述內容影響的備份類型的型別查閱，並保留其中備份類型，存在於組件的相關資訊。 預設 XAML 結構描述內容為基礎 CLR 型別對應規則。 通常，架構會提供自己的 XAML 結構描述內容以確保組件載入機制符合架構的程式設計 amd 應用程式模型。"
  syntax:
    content: public override System.Xaml.XamlSchemaContext SchemaContext { get; }
    return:
      type: System.Xaml.XamlSchemaContext
      description: "XAML 結構描述內容。"
  overload: System.Xaml.XamlObjectWriter.SchemaContext*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlObjectWriter.SetLineInfo(System.Int32,System.Int32)
  id: SetLineInfo(System.Int32,System.Int32)
  parent: System.Xaml.XamlObjectWriter
  langs:
  - csharp
  name: SetLineInfo(Int32,Int32)
  nameWithType: XamlObjectWriter.SetLineInfo(Int32,Int32)
  fullName: System.Xaml.XamlObjectWriter.SetLineInfo(Int32,Int32)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "實作&lt;xref:System.Xaml.IXamlLineInfoConsumer.SetLineInfo%2A?displayProperty=fullName&gt; ，並提供例外狀況的行資訊。"
  remarks: "此服務方法不是直接從您的程式碼呼叫。 不過，如果您要建立衍生的類別從<xref:System.Xaml.XamlObjectWriter>並預期要報告的內容位置的行號會無法使用或不實用，這個方法可能會呼叫。</xref:System.Xaml.XamlObjectWriter>"
  syntax:
    content: public void SetLineInfo (int lineNumber, int linePosition);
    parameters:
    - id: lineNumber
      type: System.Int32
      description: "從讀取器的行號。"
    - id: linePosition
      type: System.Int32
      description: "從讀取器的行位置。"
  overload: System.Xaml.XamlObjectWriter.SetLineInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlObjectWriter.ShouldProvideLineInfo
  id: ShouldProvideLineInfo
  parent: System.Xaml.XamlObjectWriter
  langs:
  - csharp
  name: ShouldProvideLineInfo
  nameWithType: XamlObjectWriter.ShouldProvideLineInfo
  fullName: System.Xaml.XamlObjectWriter.ShouldProvideLineInfo
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "取得值，報告行資訊服務是否應該提供值，並因此，也應該呼叫<xref:System.Xaml.IXamlLineInfoConsumer.SetLineInfo*>方法時相關。</xref:System.Xaml.IXamlLineInfoConsumer.SetLineInfo*>"
  remarks: "這個實作一律會傳回`true`。"
  syntax:
    content: public bool ShouldProvideLineInfo { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果行資訊由寫入器。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Xaml.XamlObjectWriter.ShouldProvideLineInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlObjectWriter.WriteEndMember
  id: WriteEndMember
  parent: System.Xaml.XamlObjectWriter
  langs:
  - csharp
  name: WriteEndMember()
  nameWithType: XamlObjectWriter.WriteEndMember()
  fullName: System.Xaml.XamlObjectWriter.WriteEndMember()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "關閉目前的成員範圍內，並可能寫入成員範圍的值，而它會關閉。 新領域會成為該成員的父物件範圍。"
  syntax:
    content: public override void WriteEndMember ();
    parameters: []
  overload: System.Xaml.XamlObjectWriter.WriteEndMember*
  exceptions:
  - type: System.Xaml.XamlObjectWriterException
    commentId: T:System.Xaml.XamlObjectWriterException
    description: "無法從遇到這個呼叫與舊版之間的值節點中建立成員值<xref uid=&quot;langword_csharp_StartMember&quot; name=&quot;StartMember&quot; href=&quot;&quot;> </xref>。"
  platform:
  - net462
- uid: System.Xaml.XamlObjectWriter.WriteEndObject
  id: WriteEndObject
  parent: System.Xaml.XamlObjectWriter
  langs:
  - csharp
  name: WriteEndObject()
  nameWithType: XamlObjectWriter.WriteEndObject()
  fullName: System.Xaml.XamlObjectWriter.WriteEndObject()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "關閉目前的物件範圍的寫入器。 新的物件範圍會成為父成員的範圍。"
  remarks: "如果這個`EndObject`位置範圍關閉的根物件，新的物件範圍會成為根範圍。       若要呼叫<xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A>可能尚未建立物件的物件成員可能是必要的初始化路徑，例如初始文字或初始化參數因為。</xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> 這些情況下，呼叫 WriteEndObject 實際寫入的物件。"
  syntax:
    content: public override void WriteEndObject ();
    parameters: []
  overload: System.Xaml.XamlObjectWriter.WriteEndObject*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlObjectWriter.WriteGetObject
  id: WriteGetObject
  parent: System.Xaml.XamlObjectWriter
  langs:
  - csharp
  name: WriteGetObject()
  nameWithType: XamlObjectWriter.WriteGetObject()
  fullName: System.Xaml.XamlObjectWriter.WriteGetObject()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "寫入的概念性<xref uid=&quot;langword_csharp_StartObject&quot; name=&quot;StartObject&quot; href=&quot;&quot;></xref>至物件圖形中指定的物件時的預設值或隱含的父屬性的值。 隱含的值來自於取自 XAML 結構描述內容的資訊以及支援類型資訊，而不是指定為輸入的 XAML 節點集的物件值。"
  remarks: "與 WriteGetObject 撰寫和撰寫與之間的差異<xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A>結果物件圖形中可以看到。</xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> WriteGetObject 不建構類型的執行個體，因為 WriteGetObject API 不有任何資訊來通知所要建構的物件圖形。 初始化 parent 屬性; 時，相反地，建立物件因此<xref:System.Xaml.XamlObjectWriter>不需要進行建構。</xref:System.Xaml.XamlObjectWriter> 相反地，<xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A>指定應該建構該類型的執行個體，並插入的物件圖形。</xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A>       如果您將 XAML 節點資料流視為一系列的框架，以平衡 WriteGetObject<xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A>呼叫。</xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A> 因此，加號 WriteGetObject 數目<xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A>呼叫應該會等於數目<xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A>呼叫做為 XAML 節點資料流的完整物件寫入評估的一部分。</xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A> </xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A>       將概念`StartObject`位置物件圖形中的隱含物件是必要的因為雖然本身的物件值的隱含預設值，該物件仍可能需要寫入可根據 XAML 節點資料流的成員。 典型的案例，這種情況是當<xref:System.Xaml.XamlObjectWriter>寫入成員節點的集合屬性，以及集合初始設定是隱含建立擁有集合屬性的物件。</xref:System.Xaml.XamlObjectWriter>"
  syntax:
    content: public override void WriteGetObject ();
    parameters: []
  overload: System.Xaml.XamlObjectWriter.WriteGetObject*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlObjectWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)
  id: WriteNamespace(System.Xaml.NamespaceDeclaration)
  parent: System.Xaml.XamlObjectWriter
  langs:
  - csharp
  name: WriteNamespace(NamespaceDeclaration)
  nameWithType: XamlObjectWriter.WriteNamespace(NamespaceDeclaration)
  fullName: System.Xaml.XamlObjectWriter.WriteNamespace(NamespaceDeclaration)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "定義套用到下一個物件的範圍或成員範圍內的命名空間宣告。"
  remarks: "如果目前的範圍是根範圍、 物件範圍或成員範圍可以寫入命名空間宣告。 不過，WriteNamespace 只能呼叫之前呼叫下列其中之一︰ WriteNamespace， <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A>，或<xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A>.</xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A> </xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> 連續 WriteNamespace 案例是撰寫多個命名空間宣告相同的節點。 最後，請<xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A>或<xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A>必須呼叫。</xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A> </xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A>       不會使用 WriteNamespace `Start` / `End`比喻。 雖然 XAML 命名空間中的 CLR 表示意義成員，成員為已知，而且不需要表示為一種特殊型別的<xref:System.Xaml.XamlMember>擴充性。</xref:System.Xaml.XamlMember> 若要存取的值<xref:System.Xaml.NamespaceDeclaration>，您存取其<xref:System.Xaml.NamespaceDeclaration.Namespace%2A>和<xref:System.Xaml.NamespaceDeclaration.Prefix%2A>屬性。</xref:System.Xaml.NamespaceDeclaration.Prefix%2A> </xref:System.Xaml.NamespaceDeclaration.Namespace%2A> </xref:System.Xaml.NamespaceDeclaration>       命名空間宣告可能<xref:System.String.Empty?displayProperty=fullName>前置詞的值。</xref:System.String.Empty?displayProperty=fullName> A<xref:System.String.Empty?displayProperty=fullName>前置詞表示的預設 XAML 命名空間宣告。</xref:System.String.Empty?displayProperty=fullName> 請勿嘗試使用 null 來代表預設前置詞。 這個 API 中擲回例外狀況。 如需詳細資訊，請參閱<xref:System.Xaml.NamespaceDeclaration>.</xref:System.Xaml.NamespaceDeclaration>"
  syntax:
    content: public override void WriteNamespace (System.Xaml.NamespaceDeclaration namespaceDeclaration);
    parameters:
    - id: namespaceDeclaration
      type: System.Xaml.NamespaceDeclaration
      description: "若要撰寫命名空間宣告。"
  overload: System.Xaml.XamlObjectWriter.WriteNamespace*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>namespaceDeclaration</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A component of <code>namespaceDeclaration</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Xaml.XamlObjectReaderException
    commentId: T:System.Xaml.XamlObjectReaderException
    description: "嘗試寫入無效的範圍中的 XAML 命名空間節點。"
  platform:
  - net462
- uid: System.Xaml.XamlObjectWriter.WriteStartMember(System.Xaml.XamlMember)
  id: WriteStartMember(System.Xaml.XamlMember)
  parent: System.Xaml.XamlObjectWriter
  langs:
  - csharp
  name: WriteStartMember(XamlMember)
  nameWithType: XamlObjectWriter.WriteStartMember(XamlMember)
  fullName: System.Xaml.XamlObjectWriter.WriteStartMember(XamlMember)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "將新的成員節點寫入至目前的物件範圍，而範圍會變成新的成員範圍。"
  remarks: >-
    > [!TIP]

    >  Watch for a <xref:System.Xaml.XamlDuplicateMemberException>, which occurs when the same XAML property is set twice in the XAML input. In simple cases, such as when the same property is set in both attribute syntax and property element syntax, you can easily see this exception in the input markup. However, more subtle cases can occur that are more difficult to spot. For example, this exception might occur if you set a XAML content property, if you involve XAML ambient properties, and if a property enables both an attachable usage and an instance usage. In the debugging phases of development, you can often locate this exception by viewing the intermediate XAML node representation that connects the markup read and the object graph write.
  syntax:
    content: public override void WriteStartMember (System.Xaml.XamlMember property);
    parameters:
    - id: property
      type: System.Xaml.XamlMember
      description: "要寫入的 XAML 屬性。 通常您會從 XAML 讀取器透過中繼 XAML 節點資料流取得此值。"
  overload: System.Xaml.XamlObjectWriter.WriteStartMember*
  exceptions:
  - type: System.Xaml.XamlObjectWriterException
    commentId: T:System.Xaml.XamlObjectWriterException
    description: "<code>property</code>has <xref:System.Xaml.XamlMember.IsUnknown*> set to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>.       -或-<xref:System.Xaml.XamlLanguage.UnknownContent*>傳遞，這表示在 XAML 節點資料流所包含的物件不支援內容的內容。       -或者-嘗試寫入無效的範圍中的開始成員。"
  - type: System.Xaml.XamlDuplicateMemberException
    commentId: T:System.Xaml.XamlDuplicateMemberException
    description: "<code>property</code>指定父物件範圍中已明確設定的屬性。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>property</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Xaml.XamlObjectWriter.WriteStartObject(System.Xaml.XamlType)
  id: WriteStartObject(System.Xaml.XamlType)
  parent: System.Xaml.XamlObjectWriter
  langs:
  - csharp
  name: WriteStartObject(XamlType)
  nameWithType: XamlObjectWriter.WriteStartObject(XamlType)
  fullName: System.Xaml.XamlObjectWriter.WriteStartObject(XamlType)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "將物件節點寫入至目前的範圍，並將範圍設定為新的物件範圍。"
  syntax:
    content: public override void WriteStartObject (System.Xaml.XamlType xamlType);
    parameters:
    - id: xamlType
      type: System.Xaml.XamlType
      description: "要寫入的類型。 通常您會從 XAML 讀取器取得此值。"
  overload: System.Xaml.XamlObjectWriter.WriteStartObject*
  exceptions:
  - type: System.Xaml.XamlObjectWriterException
    commentId: T:System.Xaml.XamlObjectWriterException
    description: "處理<xref:System.Xaml.XamlType.IsUnknown*>輸入，而且無法建立物件。</xref:System.Xaml.XamlType.IsUnknown*>       -或者-嘗試在無效的範圍中撰寫的啟動物件。"
  - type: System.Xaml.XamlParseException
    commentId: T:System.Xaml.XamlParseException
    description: "嘗試寫入時的設定中已經提供的根物件的根物件。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>xamlType</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Xaml.XamlObjectWriter.WriteValue(System.Object)
  id: WriteValue(System.Object)
  parent: System.Xaml.XamlObjectWriter
  langs:
  - csharp
  name: WriteValue(Object)
  nameWithType: XamlObjectWriter.WriteValue(Object)
  fullName: System.Xaml.XamlObjectWriter.WriteValue(Object)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "將值寫入目前的成員範圍。 如果目前的範圍內集合、 字典或陣列物件，值應加入至集合、 字典或陣列。"
  syntax:
    content: public override void WriteValue (object value);
    parameters:
    - id: value
      type: System.Object
      description: "要寫入的值。"
  overload: System.Xaml.XamlObjectWriter.WriteValue*
  exceptions:
  - type: System.Xaml.XamlObjectWriterException
    commentId: T:System.Xaml.XamlObjectWriterException
    description: "嘗試寫入無效的範圍中的值。"
  platform:
  - net462
references:
- uid: System.Xaml.XamlWriter
  isExternal: false
  name: System.Xaml.XamlWriter
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Xaml.XamlObjectWriterException
  parent: System.Xaml
  isExternal: false
  name: XamlObjectWriterException
  nameWithType: XamlObjectWriterException
  fullName: System.Xaml.XamlObjectWriterException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Xaml.XamlObjectReaderException
  parent: System.Xaml
  isExternal: false
  name: XamlObjectReaderException
  nameWithType: XamlObjectReaderException
  fullName: System.Xaml.XamlObjectReaderException
- uid: System.Xaml.XamlDuplicateMemberException
  parent: System.Xaml
  isExternal: false
  name: XamlDuplicateMemberException
  nameWithType: XamlDuplicateMemberException
  fullName: System.Xaml.XamlDuplicateMemberException
- uid: System.Xaml.XamlParseException
  parent: System.Xaml
  isExternal: false
  name: XamlParseException
  nameWithType: XamlParseException
  fullName: System.Xaml.XamlParseException
- uid: System.Xaml.XamlObjectWriter.#ctor(System.Xaml.XamlSchemaContext)
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: XamlObjectWriter(XamlSchemaContext)
  nameWithType: XamlObjectWriter.XamlObjectWriter(XamlSchemaContext)
  fullName: System.Xaml.XamlObjectWriter.XamlObjectWriter(XamlSchemaContext)
- uid: System.Xaml.XamlSchemaContext
  parent: System.Xaml
  isExternal: false
  name: XamlSchemaContext
  nameWithType: XamlSchemaContext
  fullName: System.Xaml.XamlSchemaContext
- uid: System.Xaml.XamlObjectWriter.#ctor(System.Xaml.XamlSchemaContext,System.Xaml.XamlObjectWriterSettings)
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: XamlObjectWriter(XamlSchemaContext,XamlObjectWriterSettings)
  nameWithType: XamlObjectWriter.XamlObjectWriter(XamlSchemaContext,XamlObjectWriterSettings)
  fullName: System.Xaml.XamlObjectWriter.XamlObjectWriter(XamlSchemaContext,XamlObjectWriterSettings)
- uid: System.Xaml.XamlObjectWriterSettings
  parent: System.Xaml
  isExternal: false
  name: XamlObjectWriterSettings
  nameWithType: XamlObjectWriterSettings
  fullName: System.Xaml.XamlObjectWriterSettings
- uid: System.Xaml.XamlObjectWriter.Clear
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: Clear()
  nameWithType: XamlObjectWriter.Clear()
  fullName: System.Xaml.XamlObjectWriter.Clear()
- uid: System.Xaml.XamlObjectWriter.Dispose(System.Boolean)
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: XamlObjectWriter.Dispose(Boolean)
  fullName: System.Xaml.XamlObjectWriter.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xaml.XamlObjectWriter.OnAfterBeginInit(System.Object)
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: OnAfterBeginInit(Object)
  nameWithType: XamlObjectWriter.OnAfterBeginInit(Object)
  fullName: System.Xaml.XamlObjectWriter.OnAfterBeginInit(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Xaml.XamlObjectWriter.OnAfterEndInit(System.Object)
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: OnAfterEndInit(Object)
  nameWithType: XamlObjectWriter.OnAfterEndInit(Object)
  fullName: System.Xaml.XamlObjectWriter.OnAfterEndInit(Object)
- uid: System.Xaml.XamlObjectWriter.OnAfterProperties(System.Object)
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: OnAfterProperties(Object)
  nameWithType: XamlObjectWriter.OnAfterProperties(Object)
  fullName: System.Xaml.XamlObjectWriter.OnAfterProperties(Object)
- uid: System.Xaml.XamlObjectWriter.OnBeforeProperties(System.Object)
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: OnBeforeProperties(Object)
  nameWithType: XamlObjectWriter.OnBeforeProperties(Object)
  fullName: System.Xaml.XamlObjectWriter.OnBeforeProperties(Object)
- uid: System.Xaml.XamlObjectWriter.OnSetValue(System.Object,System.Xaml.XamlMember,System.Object)
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: OnSetValue(Object,XamlMember,Object)
  nameWithType: XamlObjectWriter.OnSetValue(Object,XamlMember,Object)
  fullName: System.Xaml.XamlObjectWriter.OnSetValue(Object,XamlMember,Object)
- uid: System.Xaml.XamlMember
  parent: System.Xaml
  isExternal: false
  name: XamlMember
  nameWithType: XamlMember
  fullName: System.Xaml.XamlMember
- uid: System.Xaml.XamlObjectWriter.Result
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: Result
  nameWithType: XamlObjectWriter.Result
  fullName: System.Xaml.XamlObjectWriter.Result
- uid: System.Xaml.XamlObjectWriter.RootNameScope
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: RootNameScope
  nameWithType: XamlObjectWriter.RootNameScope
  fullName: System.Xaml.XamlObjectWriter.RootNameScope
- uid: System.Windows.Markup.INameScope
  parent: System.Windows.Markup
  isExternal: true
  name: INameScope
  nameWithType: INameScope
  fullName: System.Windows.Markup.INameScope
- uid: System.Xaml.XamlObjectWriter.SchemaContext
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: SchemaContext
  nameWithType: XamlObjectWriter.SchemaContext
  fullName: System.Xaml.XamlObjectWriter.SchemaContext
- uid: System.Xaml.XamlObjectWriter.SetLineInfo(System.Int32,System.Int32)
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: SetLineInfo(Int32,Int32)
  nameWithType: XamlObjectWriter.SetLineInfo(Int32,Int32)
  fullName: System.Xaml.XamlObjectWriter.SetLineInfo(Int32,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Xaml.XamlObjectWriter.ShouldProvideLineInfo
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: ShouldProvideLineInfo
  nameWithType: XamlObjectWriter.ShouldProvideLineInfo
  fullName: System.Xaml.XamlObjectWriter.ShouldProvideLineInfo
- uid: System.Xaml.XamlObjectWriter.WriteEndMember
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: WriteEndMember()
  nameWithType: XamlObjectWriter.WriteEndMember()
  fullName: System.Xaml.XamlObjectWriter.WriteEndMember()
- uid: System.Xaml.XamlObjectWriter.WriteEndObject
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: WriteEndObject()
  nameWithType: XamlObjectWriter.WriteEndObject()
  fullName: System.Xaml.XamlObjectWriter.WriteEndObject()
- uid: System.Xaml.XamlObjectWriter.WriteGetObject
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: WriteGetObject()
  nameWithType: XamlObjectWriter.WriteGetObject()
  fullName: System.Xaml.XamlObjectWriter.WriteGetObject()
- uid: System.Xaml.XamlObjectWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: WriteNamespace(NamespaceDeclaration)
  nameWithType: XamlObjectWriter.WriteNamespace(NamespaceDeclaration)
  fullName: System.Xaml.XamlObjectWriter.WriteNamespace(NamespaceDeclaration)
- uid: System.Xaml.NamespaceDeclaration
  parent: System.Xaml
  isExternal: false
  name: NamespaceDeclaration
  nameWithType: NamespaceDeclaration
  fullName: System.Xaml.NamespaceDeclaration
- uid: System.Xaml.XamlObjectWriter.WriteStartMember(System.Xaml.XamlMember)
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: WriteStartMember(XamlMember)
  nameWithType: XamlObjectWriter.WriteStartMember(XamlMember)
  fullName: System.Xaml.XamlObjectWriter.WriteStartMember(XamlMember)
- uid: System.Xaml.XamlObjectWriter.WriteStartObject(System.Xaml.XamlType)
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: WriteStartObject(XamlType)
  nameWithType: XamlObjectWriter.WriteStartObject(XamlType)
  fullName: System.Xaml.XamlObjectWriter.WriteStartObject(XamlType)
- uid: System.Xaml.XamlType
  parent: System.Xaml
  isExternal: false
  name: XamlType
  nameWithType: XamlType
  fullName: System.Xaml.XamlType
- uid: System.Xaml.XamlObjectWriter.WriteValue(System.Object)
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: WriteValue(Object)
  nameWithType: XamlObjectWriter.WriteValue(Object)
  fullName: System.Xaml.XamlObjectWriter.WriteValue(Object)
- uid: System.Xaml.XamlObjectWriter.#ctor*
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: XamlObjectWriter
  nameWithType: XamlObjectWriter.XamlObjectWriter
- uid: System.Xaml.XamlObjectWriter.Clear*
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: Clear
  nameWithType: XamlObjectWriter.Clear
- uid: System.Xaml.XamlObjectWriter.Dispose*
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: Dispose
  nameWithType: XamlObjectWriter.Dispose
- uid: System.Xaml.XamlObjectWriter.OnAfterBeginInit*
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: OnAfterBeginInit
  nameWithType: XamlObjectWriter.OnAfterBeginInit
- uid: System.Xaml.XamlObjectWriter.OnAfterEndInit*
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: OnAfterEndInit
  nameWithType: XamlObjectWriter.OnAfterEndInit
- uid: System.Xaml.XamlObjectWriter.OnAfterProperties*
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: OnAfterProperties
  nameWithType: XamlObjectWriter.OnAfterProperties
- uid: System.Xaml.XamlObjectWriter.OnBeforeProperties*
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: OnBeforeProperties
  nameWithType: XamlObjectWriter.OnBeforeProperties
- uid: System.Xaml.XamlObjectWriter.OnSetValue*
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: OnSetValue
  nameWithType: XamlObjectWriter.OnSetValue
- uid: System.Xaml.XamlObjectWriter.Result*
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: Result
  nameWithType: XamlObjectWriter.Result
- uid: System.Xaml.XamlObjectWriter.RootNameScope*
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: RootNameScope
  nameWithType: XamlObjectWriter.RootNameScope
- uid: System.Xaml.XamlObjectWriter.SchemaContext*
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: SchemaContext
  nameWithType: XamlObjectWriter.SchemaContext
- uid: System.Xaml.XamlObjectWriter.SetLineInfo*
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: SetLineInfo
  nameWithType: XamlObjectWriter.SetLineInfo
- uid: System.Xaml.XamlObjectWriter.ShouldProvideLineInfo*
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: ShouldProvideLineInfo
  nameWithType: XamlObjectWriter.ShouldProvideLineInfo
- uid: System.Xaml.XamlObjectWriter.WriteEndMember*
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: WriteEndMember
  nameWithType: XamlObjectWriter.WriteEndMember
- uid: System.Xaml.XamlObjectWriter.WriteEndObject*
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: WriteEndObject
  nameWithType: XamlObjectWriter.WriteEndObject
- uid: System.Xaml.XamlObjectWriter.WriteGetObject*
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: WriteGetObject
  nameWithType: XamlObjectWriter.WriteGetObject
- uid: System.Xaml.XamlObjectWriter.WriteNamespace*
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: WriteNamespace
  nameWithType: XamlObjectWriter.WriteNamespace
- uid: System.Xaml.XamlObjectWriter.WriteStartMember*
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: WriteStartMember
  nameWithType: XamlObjectWriter.WriteStartMember
- uid: System.Xaml.XamlObjectWriter.WriteStartObject*
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: WriteStartObject
  nameWithType: XamlObjectWriter.WriteStartObject
- uid: System.Xaml.XamlObjectWriter.WriteValue*
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: WriteValue
  nameWithType: XamlObjectWriter.WriteValue
