### YamlMime:ManagedReference
items:
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  id: IpcServerChannel
  children:
  - System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor(System.String)
  - System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)
  - System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor(System.String,System.String)
  - System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IServerChannelSinkProvider,System.Security.AccessControl.CommonSecurityDescriptor)
  - System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor(System.String,System.String,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)
  - System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelData
  - System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelName
  - System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelPriority
  - System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.GetChannelUri
  - System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.GetUrlsForUri(System.String)
  - System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.IsSecured
  - System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.Parse(System.String,System.String@)
  - System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.StartListening(System.Object)
  - System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.StopListening(System.Object)
  langs:
  - csharp
  name: IpcServerChannel
  nameWithType: IpcServerChannel
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  type: Class
  summary: "實作 IPC 系統使用以傳輸訊息的伺服器通道的遠端呼叫。"
  remarks: "通道會使用.NET Framework 遠端處理基礎結構來傳輸遠端呼叫。 當用戶端呼叫遠端物件時，呼叫會序列化成訊息是由用戶端通道所傳送和接收的伺服器通道。 收到訊息之後，它是還原序列化，並處理。 任何傳回的值是由伺服器通道傳送，並由用戶端通道接收。       IpcServerChannel 類別會在相同電腦上的應用程式定義域之間使用 Windows 處理序間通訊 (IPC) 系統來傳輸訊息。 在相同電腦上的應用程式定義域之間的通訊，IPC 通道時，速度比 TCP 或 HTTP 通道。       若要在伺服器端執行額外處理的訊息，指定的實作<xref:System.Runtime.Remoting.Channels.IServerChannelSinkProvider>介面透過 IpcServerChannel 執行個體所處理的所有訊息會都傳遞。</xref:System.Runtime.Remoting.Channels.IServerChannelSinkProvider>       IpcServerChannel 執行個體會接受二進位或 SOAP 格式中序列化的訊息。       IpcServerChannel 物件具有相關聯的組態屬性可以設定在執行階段組態檔中 (藉由叫用靜態<xref:System.Runtime.Remoting.RemotingConfiguration.Configure%2A?displayProperty=fullName>方法) 或以程式設計方式 (藉由傳遞<xref:System.Collections.IDictionary>集合<xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.%23ctor%2A>建構函式)。</xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.%23ctor%2A> </xref:System.Collections.IDictionary> </xref:System.Runtime.Remoting.RemotingConfiguration.Configure%2A?displayProperty=fullName> 如需這些組態屬性的清單，請參閱文件<xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.%23ctor%2A>建構函式。</xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.%23ctor%2A>      > [!CAUTION] > 設定時`exclusiveAddressUse`屬性`false`中`properties`引數，數個 IpcServerChannel 物件可以在註冊相同具名管道。 在此情況下要求可以移至任何已註冊的通道。 這項設定會被視為安全，只有當同時使用 Alc。"
  example:
  - "The following code example illustrates how to use the IpcServerChannel class.  \n  \n [!code-cpp[Remoting_Ipc#10](~/add/codesnippet/cpp/t-system.runtime.remotin_29_1.cpp)]\n [!code-cs[Remoting_Ipc#10](~/add/codesnippet/csharp/t-system.runtime.remotin_29_1.cs)]  \n  \n The preceding code is used to expose the following remote object.  \n  \n [!code-cpp[Remoting_Ipc#0](~/add/codesnippet/cpp/t-system.runtime.remotin_29_2.cpp)]\n [!code-cs[Remoting_Ipc#0](~/add/codesnippet/csharp/t-system.runtime.remotin_29_2.cs)]  \n  \n For an example of a client using this object remotely, see <xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel>."
  syntax:
    content: 'public class IpcServerChannel : System.Runtime.Remoting.Channels.IChannelReceiver, System.Runtime.Remoting.Channels.ISecurableChannel'
  inheritance:
  - System.Object
  implements:
  - System.Runtime.Remoting.Channels.IChannelReceiver
  - System.Runtime.Remoting.Channels.ISecurableChannel
  inheritedMembers: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  langs:
  - csharp
  name: IpcServerChannel(String)
  nameWithType: IpcServerChannel.IpcServerChannel(String)
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.IpcServerChannel(String)
  type: Constructor
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Ipc
  summary: "初始化的新執行個體<xref href=&quot;System.Runtime.Remoting.Channels.Ipc.IpcServerChannel&quot;></xref>指定 IPC 連接埠名稱的類別。"
  remarks: ''
  example:
  - "The following code example shows how to use this constructor.  \n  \n [!code-cpp[Remoting_Ipc#11](~/add/codesnippet/cpp/m-system.runtime.remotin_9_1.cpp)]\n [!code-cs[Remoting_Ipc#11](~/add/codesnippet/csharp/m-system.runtime.remotin_9_1.cs)]"
  syntax:
    content: public IpcServerChannel (string portName);
    parameters:
    - id: portName
      type: System.String
      description: "要使用的通道 IPC 連接埠名稱。"
  overload: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)
  id: '#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)'
  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  langs:
  - csharp
  name: IpcServerChannel(IDictionary,IServerChannelSinkProvider)
  nameWithType: IpcServerChannel.IpcServerChannel(IDictionary,IServerChannelSinkProvider)
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.IpcServerChannel(IDictionary,IServerChannelSinkProvider)
  type: Constructor
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Ipc
  summary: "初始化的新執行個體<xref href=&quot;System.Runtime.Remoting.Channels.Ipc.IpcServerChannel&quot;></xref>具有指定的通道屬性和接收器的類別。"
  remarks: "如需通道組態屬性的詳細資訊，請參閱[通道和格式器組態屬性](http://msdn.microsoft.com/en-us/226ecf74-ebbd-4ea0-a701-dcf4441deefe)。       如果您不需要接收功能，設定`sinkProvider`參數`null`。      > [!CAUTION] > 設定時`exclusiveAddressUse`屬性`false`中`properties`引數，數個<xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel>物件可以在註冊相同具名管道。</xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> 在此情況下要求可以移至任何已註冊的通道。 這項設定會被視為安全，只有當同時使用 Alc。"
  example:
  - "The following code example shows how to use this constructor.  \n  \n [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#41](~/add/codesnippet/cpp/2f7e03cf-f060-405d-b2b0-_1.cpp)]\n [!code-cs[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#41](~/add/codesnippet/csharp/2f7e03cf-f060-405d-b2b0-_1.cs)]"
  syntax:
    content: public IpcServerChannel (System.Collections.IDictionary properties, System.Runtime.Remoting.Channels.IServerChannelSinkProvider sinkProvider);
    parameters:
    - id: properties
      type: System.Collections.IDictionary
      description: "A<xref:System.Collections.IDictionary>指定之通道所使用的組態屬性值的集合。</xref:System.Collections.IDictionary>"
    - id: sinkProvider
      type: System.Runtime.Remoting.Channels.IServerChannelSinkProvider
      description: "<xref href=&quot;System.Runtime.Remoting.Channels.IServerChannelSinkProvider&quot;> </xref>通道所使用的實作。"
  overload: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  langs:
  - csharp
  name: IpcServerChannel(String,String)
  nameWithType: IpcServerChannel.IpcServerChannel(String,String)
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.IpcServerChannel(String,String)
  type: Constructor
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Ipc
  summary: "初始化的新執行個體<xref href=&quot;System.Runtime.Remoting.Channels.Ipc.IpcServerChannel&quot;></xref>類別 IPC 連接埠名稱與指定的通道名稱。"
  remarks: "這個建構函式設定<xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelName%2A>屬性使用`name`參數。</xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelName%2A> 如果您想要註冊一個以上的通道，每個通道都必須具有唯一的名稱。"
  example:
  - "The following code example shows how to use this constructor.  \n  \n [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#42](~/add/codesnippet/cpp/9c4d8393-cda8-4c07-a164-_1.cpp)]\n [!code-cs[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#42](~/add/codesnippet/csharp/9c4d8393-cda8-4c07-a164-_1.cs)]"
  syntax:
    content: public IpcServerChannel (string name, string portName);
    parameters:
    - id: name
      type: System.String
      description: "通道的名稱。"
    - id: portName
      type: System.String
      description: "要使用的通道 IPC 連接埠名稱。"
  overload: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IServerChannelSinkProvider,System.Security.AccessControl.CommonSecurityDescriptor)
  id: '#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IServerChannelSinkProvider,System.Security.AccessControl.CommonSecurityDescriptor)'
  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  langs:
  - csharp
  name: IpcServerChannel(IDictionary,IServerChannelSinkProvider,CommonSecurityDescriptor)
  nameWithType: IpcServerChannel.IpcServerChannel(IDictionary,IServerChannelSinkProvider,CommonSecurityDescriptor)
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.IpcServerChannel(IDictionary,IServerChannelSinkProvider,CommonSecurityDescriptor)
  type: Constructor
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Ipc
  summary: "初始化的新執行個體<xref href=&quot;System.Runtime.Remoting.Channels.Ipc.IpcServerChannel&quot;></xref>類別具有指定的通道屬性，接收和安全性描述元。"
  remarks: "如需通道組態屬性的詳細資訊，請參閱[通道和格式器組態屬性](http://msdn.microsoft.com/en-us/226ecf74-ebbd-4ea0-a701-dcf4441deefe)。       如果您不需要接收功能，設定`sinkProvider`參數`null`。 如果您不需要的安全性描述元，設定`securityDescriptor`參數`null`。      > [!CAUTION] > 設定時`exclusiveAddressUse`屬性`false`中`properties`引數，數個<xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel>物件可以在註冊相同具名管道。</xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> 在此情況下要求可以移至任何已註冊的通道。 這項設定會被視為安全，只有當同時使用 Alc。"
  syntax:
    content: public IpcServerChannel (System.Collections.IDictionary properties, System.Runtime.Remoting.Channels.IServerChannelSinkProvider sinkProvider, System.Security.AccessControl.CommonSecurityDescriptor securityDescriptor);
    parameters:
    - id: properties
      type: System.Collections.IDictionary
      description: "A<xref:System.Collections.IDictionary>指定之通道所使用的組態屬性值的集合。</xref:System.Collections.IDictionary>"
    - id: sinkProvider
      type: System.Runtime.Remoting.Channels.IServerChannelSinkProvider
      description: "<xref href=&quot;System.Runtime.Remoting.Channels.IServerChannelSinkProvider&quot;> </xref>通道所使用的實作。"
    - id: securityDescriptor
      type: System.Security.AccessControl.CommonSecurityDescriptor
      description: "A <xref href=&quot;System.Security.AccessControl.CommonSecurityDescriptor&quot;> </xref>通道所使用。"
  overload: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor(System.String,System.String,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)
  id: '#ctor(System.String,System.String,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)'
  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  langs:
  - csharp
  name: IpcServerChannel(String,String,IServerChannelSinkProvider)
  nameWithType: IpcServerChannel.IpcServerChannel(String,String,IServerChannelSinkProvider)
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.IpcServerChannel(String,String,IServerChannelSinkProvider)
  type: Constructor
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Ipc
  summary: "初始化的新執行個體<xref href=&quot;System.Runtime.Remoting.Channels.Ipc.IpcServerChannel&quot;></xref>具有指定的通道名稱、 IPC 連接埠名稱和接收器的類別。"
  remarks: "這個建構函式設定<xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelName%2A>屬性使用`name`參數。</xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelName%2A> 如果您想要註冊一個以上的通道，每個通道都必須具有唯一的名稱。       如果您不需要接收功能，設定`sinkProvider`參數`null`。"
  example:
  - "The following code example shows how to use this constructor.  \n  \n [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#43](~/add/codesnippet/cpp/790e6976-8213-4e42-9ce7-_1.cpp)]\n [!code-cs[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#43](~/add/codesnippet/csharp/790e6976-8213-4e42-9ce7-_1.cs)]"
  syntax:
    content: public IpcServerChannel (string name, string portName, System.Runtime.Remoting.Channels.IServerChannelSinkProvider sinkProvider);
    parameters:
    - id: name
      type: System.String
      description: "通道的名稱。"
    - id: portName
      type: System.String
      description: "要使用的通道 IPC 連接埠名稱。"
    - id: sinkProvider
      type: System.Runtime.Remoting.Channels.IServerChannelSinkProvider
      description: "<xref href=&quot;System.Runtime.Remoting.Channels.IServerChannelSinkProvider&quot;> </xref>通道所使用的實作。"
  overload: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelData
  id: ChannelData
  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  langs:
  - csharp
  name: ChannelData
  nameWithType: IpcServerChannel.ChannelData
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelData
  type: Property
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Ipc
  summary: "取得通道特定資料。"
  remarks: "雖然執行個體的形式傳回<xref:System.Object?displayProperty=fullName>類別，這個屬性的值可以轉換成的執行個體<xref:System.Runtime.Remoting.Channels.ChannelDataStore>描述的通道<xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel>物件接聽。</xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> </xref:System.Runtime.Remoting.Channels.ChannelDataStore> </xref:System.Object?displayProperty=fullName>"
  example:
  - "The following code example shows how to use the ChannelData property.  \n  \n [!code-cs[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#15](~/add/codesnippet/csharp/p-system.runtime.remotin_89_1.cs)]\n [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#15](~/add/codesnippet/cpp/p-system.runtime.remotin_89_1.cpp)]"
  syntax:
    content: public object ChannelData { get; }
    return:
      type: System.Object
      description: "A <xref href=&quot;System.Runtime.Remoting.Channels.ChannelDataStore&quot;> </xref>包含通道特定資料執行個體。"
  overload: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelData*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelName
  id: ChannelName
  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  langs:
  - csharp
  name: ChannelName
  nameWithType: IpcServerChannel.ChannelName
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelName
  type: Property
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Ipc
  summary: "取得目前通道的名稱。"
  remarks: "每個已註冊的通道都有唯一的名稱。 名稱用來呼叫時，擷取特定頻道<xref:System.Runtime.Remoting.Channels.ChannelServices.GetChannel%2A>方法。</xref:System.Runtime.Remoting.Channels.ChannelServices.GetChannel%2A> 預設名稱是 「 ipc 伺服器 」。"
  example:
  - "The following code example shows how to use the ChannelName property.  \n  \n [!code-cs[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#12](~/add/codesnippet/csharp/p-system.runtime.remotin_90_1.cs)]\n [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#12](~/add/codesnippet/cpp/p-system.runtime.remotin_90_1.cpp)]"
  syntax:
    content: public string ChannelName { get; }
    return:
      type: System.String
      description: "A<xref:System.String>執行個體，其中包含通道的名稱。</xref:System.String>"
  overload: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelName*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelPriority
  id: ChannelPriority
  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  langs:
  - csharp
  name: ChannelPriority
  nameWithType: IpcServerChannel.ChannelPriority
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelPriority
  type: Property
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Ipc
  summary: "取得目前通道的優先權。"
  remarks: "優先權會控制哪些通道資料會出現在次序<xref:System.Runtime.Remoting.ObjRef>執行個體，則會出現較低優先順序通道之前的較高優先順序通道。</xref:System.Runtime.Remoting.ObjRef> 用戶端嘗試連接到伺服器中的通道中列出的順序<xref:System.Runtime.Remoting.ObjRef>執行個體。</xref:System.Runtime.Remoting.ObjRef> 預設的優先順序是 20;允許使用負值的優先順序。"
  example:
  - "The following code example shows how to use the ChannelPriority property.  \n  \n [!code-cs[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#13](~/add/codesnippet/csharp/p-system.runtime.remotin_91_1.cs)]\n [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#13](~/add/codesnippet/cpp/p-system.runtime.remotin_91_1.cpp)]"
  syntax:
    content: public int ChannelPriority { get; }
    return:
      type: System.Int32
      description: "整數，表示指派給通道的優先權。"
  overload: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelPriority*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.GetChannelUri
  id: GetChannelUri
  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  langs:
  - csharp
  name: GetChannelUri()
  nameWithType: IpcServerChannel.GetChannelUri()
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.GetChannelUri()
  type: Method
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Ipc
  summary: "傳回目前通道的 URI。"
  remarks: "通道 URI 供用戶端用來指定遠端伺服器通道。"
  example:
  - "The following code example illustrates how to use the GetChannelUri method.  \n  \n [!code-cpp[Remoting_Ipc#12](~/add/codesnippet/cpp/m-system.runtime.remotin_26_1.cpp)]\n [!code-cs[Remoting_Ipc#12](~/add/codesnippet/csharp/m-system.runtime.remotin_26_1.cs)]"
  syntax:
    content: public string GetChannelUri ();
    parameters: []
    return:
      type: System.String
      description: "A <xref:System.String>，其中包含通道的 URI。</xref:System.String>"
  overload: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.GetChannelUri*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.GetUrlsForUri(System.String)
  id: GetUrlsForUri(System.String)
  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  langs:
  - csharp
  name: GetUrlsForUri(String)
  nameWithType: IpcServerChannel.GetUrlsForUri(String)
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.GetUrlsForUri(String)
  type: Method
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Ipc
  summary: "傳回陣列中所有 Url 的物件使用指定的 URI，在目前裝載<xref href=&quot;System.Runtime.Remoting.Channels.Ipc.IpcChannel&quot;></xref>執行個體。"
  remarks: "這個方法由<xref:System.Runtime.Remoting.Channels.ChannelServices.GetUrlsForObject%2A?displayProperty=fullName>方法。</xref:System.Runtime.Remoting.Channels.ChannelServices.GetUrlsForObject%2A?displayProperty=fullName>"
  example:
  - "The following code example shows how to use the GetUrlsForUri method.  \n  \n [!code-cs[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#19](~/add/codesnippet/csharp/0920b678-3327-4cf6-ba1d-_1.cs)]\n [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#19](~/add/codesnippet/cpp/0920b678-3327-4cf6-ba1d-_1.cpp)]"
  syntax:
    content: public virtual string[] GetUrlsForUri (string objectUri);
    parameters:
    - id: objectUri
      type: System.String
      description: "物件的 Url 所需的 URI。"
    return:
      type: System.String[]
      description: "使用指定的 URI，在目前裝載物件的 Url 陣列<xref href=&quot;System.Runtime.Remoting.Channels.Tcp.TcpChannel&quot;></xref>執行個體。"
  overload: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.GetUrlsForUri*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.IsSecured
  id: IsSecured
  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  langs:
  - csharp
  name: IsSecured
  nameWithType: IpcServerChannel.IsSecured
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.IsSecured
  type: Property
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Ipc
  summary: "取得或設定布林值，指出目前的通道是否安全。"
  syntax:
    content: public bool IsSecured { get; set; }
    return:
      type: System.Boolean
      description: "布林值，指出目前的執行個體是否為安全。"
  overload: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.IsSecured*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.Parse(System.String,System.String@)
  id: Parse(System.String,System.String@)
  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  langs:
  - csharp
  name: Parse(String,String)
  nameWithType: IpcServerChannel.Parse(String,String)
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.Parse(String,String)
  type: Method
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Ipc
  summary: "從指定的 URL 擷取通道的 URI 以及遠端的已知物件的 URI。"
  remarks: "物件的 URI 是唯一識別特定物件執行個體的值。"
  example:
  - "The following code example shows how to use the Parse method.  \n  \n [!code-cs[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#19](~/add/codesnippet/csharp/aae922d6-ceba-4430-9d67-_1.cs)]\n [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#19](~/add/codesnippet/cpp/aae922d6-ceba-4430-9d67-_1.cpp)]"
  syntax:
    content: public string Parse (string url, out string objectURI);
    parameters:
    - id: url
      type: System.String
      description: "要從中擷取遠端的已知物件的 URI URL。"
    - id: objectURI
      type: System.String
      description: "這個方法傳回時，包含<xref:System.String>遠端的已知物件的 URI 會保存的執行個體。</xref:System.String>"
    return:
      type: System.String
      description: "目前通道的 URI。"
  overload: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.Parse*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.StartListening(System.Object)
  id: StartListening(System.Object)
  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  langs:
  - csharp
  name: StartListening(Object)
  nameWithType: IpcServerChannel.StartListening(Object)
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.StartListening(Object)
  type: Method
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Ipc
  summary: "指示目前的通道開始接聽要求。"
  remarks: "您不需要呼叫這個方法，以開始接聽新初始化通道。       使用這個方法來重新啟動之後通道上的接聽<xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.StopListening%2A>已停止接聽通道上呼叫方法。</xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.StopListening%2A>       資料物件可以用來傳遞至通道的特定初始狀態。 如果您不想將特定的狀態傳遞至通道，傳遞`null`為`data`參數值。"
  syntax:
    content: public void StartListening (object data);
    parameters:
    - id: data
      type: System.Object
      description: "物件，指定未初始化狀態，或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>，如果您不想將特定的狀態傳遞給通道。"
  overload: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.StartListening*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: "無法使用指定的接聽連接埠。"
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.StopListening(System.Object)
  id: StopListening(System.Object)
  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  langs:
  - csharp
  name: StopListening(Object)
  nameWithType: IpcServerChannel.StopListening(Object)
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.StopListening(Object)
  type: Method
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Ipc
  summary: "指示要停止接聽要求的目前通道。"
  remarks: "若要停止接聽通道上使用這個方法。 若要重新啟動接聽，請使用<xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.StartListening%2A>方法。</xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.StartListening%2A>       資料物件可以用來傳遞至通道的特定初始狀態。 如果您不想將特定的狀態傳遞至通道，傳遞`null`為`data`參數值。"
  syntax:
    content: public void StopListening (object data);
    parameters:
    - id: data
      type: System.Object
      description: "物件，指定未初始化狀態，或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>，如果您不想將特定的狀態傳遞給通道。"
  overload: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.StopListening*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Exception
  isExternal: true
  name: System.Exception
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor(System.String)
  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  isExternal: false
  name: IpcServerChannel(String)
  nameWithType: IpcServerChannel.IpcServerChannel(String)
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.IpcServerChannel(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)
  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  isExternal: false
  name: IpcServerChannel(IDictionary,IServerChannelSinkProvider)
  nameWithType: IpcServerChannel.IpcServerChannel(IDictionary,IServerChannelSinkProvider)
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.IpcServerChannel(IDictionary,IServerChannelSinkProvider)
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Runtime.Remoting.Channels.IServerChannelSinkProvider
  parent: System.Runtime.Remoting.Channels
  isExternal: false
  name: IServerChannelSinkProvider
  nameWithType: IServerChannelSinkProvider
  fullName: System.Runtime.Remoting.Channels.IServerChannelSinkProvider
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor(System.String,System.String)
  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  isExternal: false
  name: IpcServerChannel(String,String)
  nameWithType: IpcServerChannel.IpcServerChannel(String,String)
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.IpcServerChannel(String,String)
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IServerChannelSinkProvider,System.Security.AccessControl.CommonSecurityDescriptor)
  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  isExternal: false
  name: IpcServerChannel(IDictionary,IServerChannelSinkProvider,CommonSecurityDescriptor)
  nameWithType: IpcServerChannel.IpcServerChannel(IDictionary,IServerChannelSinkProvider,CommonSecurityDescriptor)
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.IpcServerChannel(IDictionary,IServerChannelSinkProvider,CommonSecurityDescriptor)
- uid: System.Security.AccessControl.CommonSecurityDescriptor
  parent: System.Security.AccessControl
  isExternal: false
  name: CommonSecurityDescriptor
  nameWithType: CommonSecurityDescriptor
  fullName: System.Security.AccessControl.CommonSecurityDescriptor
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor(System.String,System.String,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)
  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  isExternal: false
  name: IpcServerChannel(String,String,IServerChannelSinkProvider)
  nameWithType: IpcServerChannel.IpcServerChannel(String,String,IServerChannelSinkProvider)
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.IpcServerChannel(String,String,IServerChannelSinkProvider)
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelData
  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  isExternal: false
  name: ChannelData
  nameWithType: IpcServerChannel.ChannelData
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelData
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelName
  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  isExternal: false
  name: ChannelName
  nameWithType: IpcServerChannel.ChannelName
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelName
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelPriority
  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  isExternal: false
  name: ChannelPriority
  nameWithType: IpcServerChannel.ChannelPriority
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelPriority
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.GetChannelUri
  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  isExternal: false
  name: GetChannelUri()
  nameWithType: IpcServerChannel.GetChannelUri()
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.GetChannelUri()
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.GetUrlsForUri(System.String)
  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  isExternal: false
  name: GetUrlsForUri(String)
  nameWithType: IpcServerChannel.GetUrlsForUri(String)
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.GetUrlsForUri(String)
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.IsSecured
  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  isExternal: false
  name: IsSecured
  nameWithType: IpcServerChannel.IsSecured
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.IsSecured
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.Parse(System.String,System.String@)
  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  isExternal: false
  name: Parse(String,String)
  nameWithType: IpcServerChannel.Parse(String,String)
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.Parse(String,String)
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.StartListening(System.Object)
  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  isExternal: false
  name: StartListening(Object)
  nameWithType: IpcServerChannel.StartListening(Object)
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.StartListening(Object)
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.StopListening(System.Object)
  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  isExternal: false
  name: StopListening(Object)
  nameWithType: IpcServerChannel.StopListening(Object)
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.StopListening(Object)
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor*
  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  isExternal: false
  name: IpcServerChannel
  nameWithType: IpcServerChannel.IpcServerChannel
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelData*
  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  isExternal: false
  name: ChannelData
  nameWithType: IpcServerChannel.ChannelData
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelName*
  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  isExternal: false
  name: ChannelName
  nameWithType: IpcServerChannel.ChannelName
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelPriority*
  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  isExternal: false
  name: ChannelPriority
  nameWithType: IpcServerChannel.ChannelPriority
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.GetChannelUri*
  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  isExternal: false
  name: GetChannelUri
  nameWithType: IpcServerChannel.GetChannelUri
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.GetUrlsForUri*
  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  isExternal: false
  name: GetUrlsForUri
  nameWithType: IpcServerChannel.GetUrlsForUri
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.IsSecured*
  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  isExternal: false
  name: IsSecured
  nameWithType: IpcServerChannel.IsSecured
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.Parse*
  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  isExternal: false
  name: Parse
  nameWithType: IpcServerChannel.Parse
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.StartListening*
  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  isExternal: false
  name: StartListening
  nameWithType: IpcServerChannel.StartListening
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.StopListening*
  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  isExternal: false
  name: StopListening
  nameWithType: IpcServerChannel.StopListening
