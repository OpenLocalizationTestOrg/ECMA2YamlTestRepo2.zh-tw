### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.MouseEventArgs
  id: MouseEventArgs
  children:
  - System.Windows.Forms.MouseEventArgs.#ctor(System.Windows.Forms.MouseButtons,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Windows.Forms.MouseEventArgs.Button
  - System.Windows.Forms.MouseEventArgs.Clicks
  - System.Windows.Forms.MouseEventArgs.Delta
  - System.Windows.Forms.MouseEventArgs.Location
  - System.Windows.Forms.MouseEventArgs.X
  - System.Windows.Forms.MouseEventArgs.Y
  langs:
  - csharp
  name: MouseEventArgs
  nameWithType: MouseEventArgs
  fullName: System.Windows.Forms.MouseEventArgs
  type: Class
  summary: "提供資料給<xref href=&quot;System.Windows.Forms.Control.MouseUp&quot;> </xref>， <xref href=&quot;System.Windows.Forms.Control.MouseDown&quot;> </xref>，和<xref href=&quot;System.Windows.Forms.Control.MouseMove&quot;></xref>事件。"
  remarks: "<xref:System.Windows.Forms.Control.MouseDown>事件發生於指標位於控制項上時，使用者按下滑鼠按鈕時。</xref:System.Windows.Forms.Control.MouseDown> <xref:System.Windows.Forms.Control.MouseUp>事件發生於當指標停留在控制項時，使用者放開滑鼠按鈕時。</xref:System.Windows.Forms.Control.MouseUp> <xref:System.Windows.Forms.Control.MouseMove>事件發生於使用者將滑鼠指標移至控制項上方時。</xref:System.Windows.Forms.Control.MouseMove> MouseEventArgs 指定哪些滑鼠按鍵時，多少次按下並釋放滑鼠按鈕的滑鼠座標和數量滑鼠滾輪移動。       可接收<xref:System.Windows.Forms.Control.MouseDown>沒有相對應的事件<xref:System.Windows.Forms.Control.MouseUp>，如果使用者切換至另一個應用程式，再鬆開滑鼠按鈕的焦點。</xref:System.Windows.Forms.Control.MouseUp> </xref:System.Windows.Forms.Control.MouseDown>       這三個事件有存在<xref:System.Windows.Forms.Control>， <xref:System.Windows.Forms.AxHost>，和<xref:System.Windows.Forms.NotifyIcon>類別。</xref:System.Windows.Forms.NotifyIcon> </xref:System.Windows.Forms.AxHost> </xref:System.Windows.Forms.Control>       事件模型的相關資訊，請參閱[事件](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following code examples handles the <xref:System.Windows.Forms.Control.MouseDown> event on a <xref:System.Windows.Forms.TextBox> control so that clicking the right mouse button selects all the text in the control. This example requires that you have a form that contains a <xref:System.Windows.Forms.TextBox> control that is named `textBox1`.  \n  \n [!code-vb[MouseEventArgs#1](~/add/codesnippet/visualbasic/MouseEventArgsVB/Form1.vb#1)]\n [!code-cs[MouseEventArgs#1](~/add/codesnippet/csharp/MouseEventArgs/Form1.cs#1)]  \n  \n The following code example uses the `Location` property to track clicks of the left mouse button and to draw a series of straight line segments in response to user input. The example does not redraw the lines if you hide the form and then redisplay it; this code has been omitted for simplicity.  \n  \n [!code-vb[MouseEventArgs#2](~/add/codesnippet/visualbasic/MouseEventArgsVB/Form1.vb#2)]\n [!code-cs[MouseEventArgs#2](~/add/codesnippet/csharp/MouseEventArgs/Form1.cs#2)]  \n  \n The following code example uses the <xref:System.Windows.Forms.MouseEventArgs.X%2A> and <xref:System.Windows.Forms.MouseEventArgs.Y%2A> properties to display the current position of the mouse pointer in a <xref:System.Windows.Forms.ToolTip> window.  \n  \n [!code-vb[MouseEventArgs#3](~/add/codesnippet/visualbasic/MouseEventArgsVB/Form1.vb#3)]\n [!code-cs[MouseEventArgs#3](~/add/codesnippet/csharp/MouseEventArgs/Form1.cs#3)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class MouseEventArgs : EventArgs
  inheritance:
  - System.EventArgs
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Forms.MouseEventArgs.#ctor(System.Windows.Forms.MouseButtons,System.Int32,System.Int32,System.Int32,System.Int32)
  id: '#ctor(System.Windows.Forms.MouseButtons,System.Int32,System.Int32,System.Int32,System.Int32)'
  parent: System.Windows.Forms.MouseEventArgs
  langs:
  - csharp
  name: MouseEventArgs(MouseButtons,Int32,Int32,Int32,Int32)
  nameWithType: MouseEventArgs.MouseEventArgs(MouseButtons,Int32,Int32,Int32,Int32)
  fullName: System.Windows.Forms.MouseEventArgs.MouseEventArgs(MouseButtons,Int32,Int32,Int32,Int32)
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "初始化的新執行個體<xref href=&quot;System.Windows.Forms.MouseEventArgs&quot;></xref>類別。"
  syntax:
    content: public MouseEventArgs (System.Windows.Forms.MouseButtons button, int clicks, int x, int y, int delta);
    parameters:
    - id: button
      type: System.Windows.Forms.MouseButtons
      description: "其中一個<xref href=&quot;System.Windows.Forms.MouseButtons&quot;></xref>表示哪個滑鼠按鈕已按下的值。"
    - id: clicks
      type: System.Int32
      description: "已按下滑鼠按鈕的次數。"
    - id: x
      type: System.Int32
      description: "按一下滑鼠的 x 座標像素為單位。"
    - id: y
      type: System.Int32
      description: "按一下滑鼠的 y 座標像素為單位。"
    - id: delta
      type: System.Int32
      description: "帶正負號的計數滾動滾輪。"
  overload: System.Windows.Forms.MouseEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.MouseEventArgs.Button
  id: Button
  parent: System.Windows.Forms.MouseEventArgs
  langs:
  - csharp
  name: Button
  nameWithType: MouseEventArgs.Button
  fullName: System.Windows.Forms.MouseEventArgs.Button
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得已按下哪個滑鼠鍵。"
  remarks: ''
  example:
  - "The following code example handles the <xref:System.Windows.Forms.Control.MouseDown> event on a <xref:System.Windows.Forms.TextBox> control so that clicking the right mouse button selects all the text in the control. This example requires that you have a form that contains a <xref:System.Windows.Forms.TextBox> control named `textBox1`.  \n  \n [!code-vb[MouseEventArgs#1](~/add/codesnippet/visualbasic/MouseEventArgsVB/Form1.vb#1)]\n [!code-cs[MouseEventArgs#1](~/add/codesnippet/csharp/MouseEventArgs/Form1.cs#1)]"
  syntax:
    content: public System.Windows.Forms.MouseButtons Button { get; }
    return:
      type: System.Windows.Forms.MouseButtons
      description: "其中一個<xref href=&quot;System.Windows.Forms.MouseButtons&quot;></xref>值。"
  overload: System.Windows.Forms.MouseEventArgs.Button*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.MouseEventArgs.Clicks
  id: Clicks
  parent: System.Windows.Forms.MouseEventArgs
  langs:
  - csharp
  name: Clicks
  nameWithType: MouseEventArgs.Clicks
  fullName: System.Windows.Forms.MouseEventArgs.Clicks
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得已按下並釋放滑鼠鍵的次數。"
  remarks: "雖然 Windows 介面會定義標準滑鼠事件做為單一按一下或按兩下，個別的應用程式可以解譯為單一事件大量的按鍵。"
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.MouseClick?displayProperty=fullName> event. This report helps you learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>. Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.MouseClick?displayProperty=fullName> event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#54](~/add/codesnippet/csharp/p-system.windows.forms.m_45_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#54](~/add/codesnippet/visualbasic/p-system.windows.forms.m_45_1.vb)]"
  syntax:
    content: public int Clicks { get; }
    return:
      type: System.Int32
      description: "<xref:System.Int32>，其中包含已按下並釋放滑鼠鍵的次數。</xref:System.Int32>"
  overload: System.Windows.Forms.MouseEventArgs.Clicks*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.MouseEventArgs.Delta
  id: Delta
  parent: System.Windows.Forms.MouseEventArgs
  langs:
  - csharp
  name: Delta
  nameWithType: MouseEventArgs.Delta
  fullName: System.Windows.Forms.MouseEventArgs.Delta
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得已簽署的計數滾動滑鼠滾輪滾動乘以 WHEEL_DELTA 常數。 一個刻度是一個滑鼠滾輪的刻痕。"
  remarks: "滑鼠滾輪結合滾輪的滑鼠按鈕的功能。 滾輪有離散、 平均的色塊。 當您旋轉滾輪時，發現每個刻度是傳送滾輪訊息。 一個滾輪波陷，一個刻度，是由定義滾動，這是 120。 正值表示滾輪 （遠離使用者）; 已向前旋轉負數值表示滾輪 （朝向使用者） 已向後旋轉。       目前，值為 120 是一個刻度的標準。 如果較高的解析度 mice 現已引進，WHEEL_DELTA 的定義可能會變小。 大部分的應用程式應該檢查正數或負數值，而不是彙總的總計。"
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.MouseClick?displayProperty=fullName> event. This report helps you learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>. Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.MouseClick?displayProperty=fullName> event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#54](~/add/codesnippet/csharp/p-system.windows.forms.m_18_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#54](~/add/codesnippet/visualbasic/p-system.windows.forms.m_18_1.vb)]"
  syntax:
    content: public int Delta { get; }
    return:
      type: System.Int32
      description: "帶正負號的計數滾動滑鼠滾輪滾動乘以 WHEEL_DELTA 常數。"
  overload: System.Windows.Forms.MouseEventArgs.Delta*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.MouseEventArgs.Location
  id: Location
  parent: System.Windows.Forms.MouseEventArgs
  langs:
  - csharp
  name: Location
  nameWithType: MouseEventArgs.Location
  fullName: System.Windows.Forms.MouseEventArgs.Location
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "在產生滑鼠事件期間取得的滑鼠位置。"
  remarks: ''
  example:
  - "The following code example uses the Location property to track left mouse clicks and draw a series of straight line segments in response to user input. The example does not persist the drawn lines if you hide the form and then redisplay it; this code was omitted for simplicity.  \n  \n [!code-vb[MouseEventArgs#2](~/add/codesnippet/visualbasic/MouseEventArgsVB/Form1.vb#2)]\n [!code-cs[MouseEventArgs#2](~/add/codesnippet/csharp/MouseEventArgs/Form1.cs#2)]"
  syntax:
    content: public System.Drawing.Point Location { get; }
    return:
      type: System.Drawing.Point
      description: "A <xref href=&quot;System.Drawing.Point&quot;> </xref> ，其中包含滑鼠 x 和 y 座標，相對於表單的左上角像素為單位。"
  overload: System.Windows.Forms.MouseEventArgs.Location*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.MouseEventArgs.X
  id: X
  parent: System.Windows.Forms.MouseEventArgs
  langs:
  - csharp
  name: X
  nameWithType: MouseEventArgs.X
  fullName: System.Windows.Forms.MouseEventArgs.X
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得在產生滑鼠事件期間的滑鼠的 x 座標。"
  remarks: "滑鼠座標會根據所引發的事件而有所不同。 例如，當<xref:System.Windows.Forms.Control.MouseMove?displayProperty=fullName>事件處理、 滑鼠座標值是相對於控制項引發事件的座標。</xref:System.Windows.Forms.Control.MouseMove?displayProperty=fullName> 某些與拖放作業相關的事件有關聯的是相對於表單原點或螢幕原點的滑鼠座標值。"
  example:
  - "The following code example uses the X and <xref:System.Windows.Forms.MouseEventArgs.Y%2A> properties to display the current position of the mouse pointer in a <xref:System.Windows.Forms.ToolTip> window.  \n  \n [!code-vb[MouseEventArgs#3](~/add/codesnippet/visualbasic/MouseEventArgsVB/Form1.vb#3)]\n [!code-cs[MouseEventArgs#3](~/add/codesnippet/csharp/MouseEventArgs/Form1.cs#3)]"
  syntax:
    content: public int X { get; }
    return:
      type: System.Int32
      description: "滑鼠，單位為像素 x 軸座標。"
  overload: System.Windows.Forms.MouseEventArgs.X*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.MouseEventArgs.Y
  id: Y
  parent: System.Windows.Forms.MouseEventArgs
  langs:
  - csharp
  name: Y
  nameWithType: MouseEventArgs.Y
  fullName: System.Windows.Forms.MouseEventArgs.Y
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得在產生滑鼠事件期間的滑鼠的 y 座標。"
  remarks: "滑鼠座標會根據所引發的事件而有所不同。 例如，當<xref:System.Windows.Forms.Control.MouseMove?displayProperty=fullName>事件處理、 滑鼠座標值是相對於控制項引發事件的座標。</xref:System.Windows.Forms.Control.MouseMove?displayProperty=fullName> 某些與拖放作業相關的事件有關聯的滑鼠座標值，是相對於表單原點或螢幕原點。"
  example:
  - "The following code example uses the <xref:System.Windows.Forms.MouseEventArgs.X%2A> and Y properties to display the current position of the mouse pointer in a <xref:System.Windows.Forms.ToolTip> window. To use this code, call `TrackCoordinates` from the form constructor.  \n  \n [!code-vb[MouseEventArgs#3](~/add/codesnippet/visualbasic/MouseEventArgsVB/Form1.vb#3)]\n [!code-cs[MouseEventArgs#3](~/add/codesnippet/csharp/MouseEventArgs/Form1.cs#3)]"
  syntax:
    content: public int Y { get; }
    return:
      type: System.Int32
      description: "滑鼠，單位為像素的 y 座標。"
  overload: System.Windows.Forms.MouseEventArgs.Y*
  exceptions: []
  platform:
  - net462
references:
- uid: System.EventArgs
  isExternal: false
  name: System.EventArgs
- uid: System.Windows.Forms.MouseEventArgs.#ctor(System.Windows.Forms.MouseButtons,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Windows.Forms.MouseEventArgs
  isExternal: false
  name: MouseEventArgs(MouseButtons,Int32,Int32,Int32,Int32)
  nameWithType: MouseEventArgs.MouseEventArgs(MouseButtons,Int32,Int32,Int32,Int32)
  fullName: System.Windows.Forms.MouseEventArgs.MouseEventArgs(MouseButtons,Int32,Int32,Int32,Int32)
- uid: System.Windows.Forms.MouseButtons
  parent: System.Windows.Forms
  isExternal: false
  name: MouseButtons
  nameWithType: MouseButtons
  fullName: System.Windows.Forms.MouseButtons
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Forms.MouseEventArgs.Button
  parent: System.Windows.Forms.MouseEventArgs
  isExternal: false
  name: Button
  nameWithType: MouseEventArgs.Button
  fullName: System.Windows.Forms.MouseEventArgs.Button
- uid: System.Windows.Forms.MouseEventArgs.Clicks
  parent: System.Windows.Forms.MouseEventArgs
  isExternal: false
  name: Clicks
  nameWithType: MouseEventArgs.Clicks
  fullName: System.Windows.Forms.MouseEventArgs.Clicks
- uid: System.Windows.Forms.MouseEventArgs.Delta
  parent: System.Windows.Forms.MouseEventArgs
  isExternal: false
  name: Delta
  nameWithType: MouseEventArgs.Delta
  fullName: System.Windows.Forms.MouseEventArgs.Delta
- uid: System.Windows.Forms.MouseEventArgs.Location
  parent: System.Windows.Forms.MouseEventArgs
  isExternal: false
  name: Location
  nameWithType: MouseEventArgs.Location
  fullName: System.Windows.Forms.MouseEventArgs.Location
- uid: System.Drawing.Point
  parent: System.Drawing
  isExternal: false
  name: Point
  nameWithType: Point
  fullName: System.Drawing.Point
- uid: System.Windows.Forms.MouseEventArgs.X
  parent: System.Windows.Forms.MouseEventArgs
  isExternal: false
  name: X
  nameWithType: MouseEventArgs.X
  fullName: System.Windows.Forms.MouseEventArgs.X
- uid: System.Windows.Forms.MouseEventArgs.Y
  parent: System.Windows.Forms.MouseEventArgs
  isExternal: false
  name: Y
  nameWithType: MouseEventArgs.Y
  fullName: System.Windows.Forms.MouseEventArgs.Y
- uid: System.Windows.Forms.MouseEventArgs.#ctor*
  parent: System.Windows.Forms.MouseEventArgs
  isExternal: false
  name: MouseEventArgs
  nameWithType: MouseEventArgs.MouseEventArgs
- uid: System.Windows.Forms.MouseEventArgs.Button*
  parent: System.Windows.Forms.MouseEventArgs
  isExternal: false
  name: Button
  nameWithType: MouseEventArgs.Button
- uid: System.Windows.Forms.MouseEventArgs.Clicks*
  parent: System.Windows.Forms.MouseEventArgs
  isExternal: false
  name: Clicks
  nameWithType: MouseEventArgs.Clicks
- uid: System.Windows.Forms.MouseEventArgs.Delta*
  parent: System.Windows.Forms.MouseEventArgs
  isExternal: false
  name: Delta
  nameWithType: MouseEventArgs.Delta
- uid: System.Windows.Forms.MouseEventArgs.Location*
  parent: System.Windows.Forms.MouseEventArgs
  isExternal: false
  name: Location
  nameWithType: MouseEventArgs.Location
- uid: System.Windows.Forms.MouseEventArgs.X*
  parent: System.Windows.Forms.MouseEventArgs
  isExternal: false
  name: X
  nameWithType: MouseEventArgs.X
- uid: System.Windows.Forms.MouseEventArgs.Y*
  parent: System.Windows.Forms.MouseEventArgs
  isExternal: false
  name: Y
  nameWithType: MouseEventArgs.Y
