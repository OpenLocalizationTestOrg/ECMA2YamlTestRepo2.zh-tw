### YamlMime:ManagedReference
items:
- uid: System.Text.RegularExpressions.RegexCompilationInfo
  id: RegexCompilationInfo
  children:
  - System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean)
  - System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)
  - System.Text.RegularExpressions.RegexCompilationInfo.IsPublic
  - System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout
  - System.Text.RegularExpressions.RegexCompilationInfo.Name
  - System.Text.RegularExpressions.RegexCompilationInfo.Namespace
  - System.Text.RegularExpressions.RegexCompilationInfo.Options
  - System.Text.RegularExpressions.RegexCompilationInfo.Pattern
  langs:
  - csharp
  name: RegexCompilationInfo
  nameWithType: RegexCompilationInfo
  fullName: System.Text.RegularExpressions.RegexCompilationInfo
  type: Class
  summary: "提供用來編譯規則運算式以獨立的組件的規則運算式的相關資訊。"
  remarks: "RegexCompilationInfo 物件的陣列傳遞至<xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A>方法以提供要包含在組件中的每個規則運算式的相關資訊。</xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A> 包含組件中每個已編譯規則運算式被以衍生自<xref:System.Text.RegularExpressions.Regex>.</xref:System.Text.RegularExpressions.Regex>類別 RegexCompilationInfo 類型的屬性會定義規則運算式的類別名稱、 其完整的名稱 （也就是它的命名空間和其型別名稱）、 其規則運算式模式，（例如，規則運算式是否不區分大小寫），任何其他選項和逾時間隔，指定規則運算式引擎應該搜尋比對的時間長度。       您可以藉由呼叫其多載的類別建構函式具現化 RegexCompilationInfo 物件。"
  syntax:
    content: public class RegexCompilationInfo
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean)
  id: '#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean)'
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  langs:
  - csharp
  name: RegexCompilationInfo(String,RegexOptions,String,String,Boolean)
  nameWithType: RegexCompilationInfo.RegexCompilationInfo(String,RegexOptions,String,String,Boolean)
  fullName: System.Text.RegularExpressions.RegexCompilationInfo.RegexCompilationInfo(String,RegexOptions,String,String,Boolean)
  type: Constructor
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: "初始化的新執行個體<xref href=&quot;System.Text.RegularExpressions.RegexCompilationInfo&quot;></xref>類別，其中包含要包含在組件中的規則運算式的相關資訊。"
  remarks: "RegexCompilationInfo 建構函式的每個參數會直接對應到屬性的<xref:System.Text.RegularExpressions.RegexCompilationInfo>類別。</xref:System.Text.RegularExpressions.RegexCompilationInfo> 因為所有屬性都是讀取/寫入，也可以直接指派其值。       <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A>方法會產生內含編譯的規則運算式的組件。</xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A> 因此，您不應該指定<xref:System.Text.RegularExpressions.RegexOptions>做為其中一個值`options`。</xref:System.Text.RegularExpressions.RegexOptions>       如果`ispublic`是`true`，編譯的規則運算式類別會提供公用存取範圍。 也就是說，它可以具現化從任何組件中執行的程式碼。 如果`ispublic`是`false`，編譯的規則運算式類別有`internal`（C# 中） 或`Friend`（在 Visual Basic) 存取範圍。 也就是說，它可以具現化只能從會在規則運算式類別相同的組件中執行的程式碼。"
  example:
  - "The following example creates and uses a compiled regular expression in two steps.  \n  \n In the first step, compile and execute the following code example. The RegexCompilationInfo constructor in the code example defines a compiled regular expression. The result of executing the code is an assembly named FishRegex.dll that contains a compiled regular expression type named `FishRegex`.  \n  \n [!code-cs[sys.txt.rgxCompInfo#1](~/add/codesnippet/csharp/7e273a6c-e154-4435-ab93-_1.cs)]\n [!code-vb[sys.txt.rgxCompInfo#1](~/add/codesnippet/visualbasic/7e273a6c-e154-4435-ab93-_1.vb)]  \n  \n In the second step, compile the following code example using a reference to FishRegex.dll, and then run the resulting executable file. The executable file matches a target string by using the `FishRegex` type, and displays the match, group, capture group, and index position of the matches in the target string.  \n  \n [!code-vb[sys.txt.rgxCompInfo#2](~/add/codesnippet/visualbasic/7e273a6c-e154-4435-ab93-_2.vb)]\n [!code-cs[sys.txt.rgxCompInfo#2](~/add/codesnippet/csharp/7e273a6c-e154-4435-ab93-_2.cs)]"
  syntax:
    content: public RegexCompilationInfo (string pattern, System.Text.RegularExpressions.RegexOptions options, string name, string fullnamespace, bool ispublic);
    parameters:
    - id: pattern
      type: System.String
      description: "若要編譯規則運算式。"
    - id: options
      type: System.Text.RegularExpressions.RegexOptions
      description: "要編譯規則運算式時使用的規則運算式選項。"
    - id: name
      type: System.String
      description: "表示編譯的規則運算式的型別名稱。"
    - id: fullnamespace
      type: System.String
      description: "新的型別所屬的命名空間。"
    - id: ispublic
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>將公開可見的; 編譯的規則運算式否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Text.RegularExpressions.RegexCompilationInfo.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>name</code>是&lt;xref:System.String?displayProperty=fullName&gt;。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pattern</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>name</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>fullnamespace</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)
  id: '#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)'
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  langs:
  - csharp
  name: RegexCompilationInfo(String,RegexOptions,String,String,Boolean,TimeSpan)
  nameWithType: RegexCompilationInfo.RegexCompilationInfo(String,RegexOptions,String,String,Boolean,TimeSpan)
  fullName: System.Text.RegularExpressions.RegexCompilationInfo.RegexCompilationInfo(String,RegexOptions,String,String,Boolean,TimeSpan)
  type: Constructor
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: "初始化的新執行個體<xref href=&quot;System.Text.RegularExpressions.RegexCompilationInfo&quot;></xref>包含規則運算式與指定的逾時值，以包含在組件的相關資訊的類別。"
  remarks: "每個參數的<xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.String%2CSystem.String%2CSystem.Boolean%29>建構函式直接對應到屬性的<xref:System.Text.RegularExpressions.RegexCompilationInfo>類別。</xref:System.Text.RegularExpressions.RegexCompilationInfo> </xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> 因為所有屬性都是讀取/寫入，也可以直接指派其值。       <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A>方法會產生內含編譯的規則運算式的組件。</xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A> 因此，您不應該指定<xref:System.Text.RegularExpressions.RegexOptions>做為其中一個值`options`。</xref:System.Text.RegularExpressions.RegexOptions>       如果`ispublic`是`true`，編譯的規則運算式類別會提供公用存取範圍。 也就是說，它可以具現化從任何組件中執行的程式碼。 如果`ispublic`是`false`，編譯的規則運算式類別有`internal`（C# 中） 或`Friend`（在 Visual Basic) 存取範圍。 也就是說，它可以具現化只能從會在規則運算式類別相同的組件中執行的程式碼。       `matchTimeout`參數會定義編譯的規則運算式的預設逾時間隔。 這個值代表已編譯的規則運算式物件會執行單一比對作業，作業逾時和規則運算式引擎會擲回之前的時間的大約數量<xref:System.Text.RegularExpressions.RegexMatchTimeoutException>其下一個計時檢查期間的例外狀況。</xref:System.Text.RegularExpressions.RegexMatchTimeoutException> 其他的逾時值的詳細資訊，請參閱<xref:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout%2A>屬性。</xref:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout%2A>      > [!IMPORTANT] > 我們建議您一律將編譯的規則運算式的預設逾時值。 您的規則運算式程式庫的取用者可以傳遞覆寫該逾時值<xref:System.TimeSpan>值，代表這個建構函式多載的新的逾時間隔。</xref:System.TimeSpan>"
  example:
  - "The following example defines a single compiled regular expression named `DuplicateChars` that identifies two or more occurrences of the same character in an input string. The compiled regular expression has a default time-out of 2 seconds. When you execute the example, it creates a class library named RegexLib.dll that contains the compiled regular expression.  \n  \n [!code-cs[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#1](~/add/codesnippet/csharp/caa070a5-44ee-405f-81e7-_1.cs)]\n [!code-vb[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#1](~/add/codesnippet/visualbasic/caa070a5-44ee-405f-81e7-_1.vb)]  \n  \n The regular expression pattern `(\\w)\\1+` is defined as shown in the following table.  \n  \n|Pattern|Description|  \n|-------------|-----------------|  \n|`(\\w)`|Match any word character and assign it to the first capturing group.|  \n|`\\1+`|Match one or more occurrences of the value of the first captured group.|  \n  \n The following example uses the `DuplicatedChars` regular expression to identify duplicate characters in a string array. When it calls the `DuplicatedChars` constructor, it changes the time-out interval to .5 seconds.  \n  \n [!code-cs[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#2](~/add/codesnippet/csharp/caa070a5-44ee-405f-81e7-_2.cs)]\n [!code-vb[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#2](~/add/codesnippet/visualbasic/caa070a5-44ee-405f-81e7-_2.vb)]"
  syntax:
    content: public RegexCompilationInfo (string pattern, System.Text.RegularExpressions.RegexOptions options, string name, string fullnamespace, bool ispublic, TimeSpan matchTimeout);
    parameters:
    - id: pattern
      type: System.String
      description: "若要編譯規則運算式。"
    - id: options
      type: System.Text.RegularExpressions.RegexOptions
      description: "要編譯規則運算式時使用的規則運算式選項。"
    - id: name
      type: System.String
      description: "表示編譯的規則運算式的型別名稱。"
    - id: fullnamespace
      type: System.String
      description: "新的型別所屬的命名空間。"
    - id: ispublic
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>將公開可見的; 編譯的規則運算式否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    - id: matchTimeout
      type: System.TimeSpan
      description: "規則運算式的預設逾時間隔。"
  overload: System.Text.RegularExpressions.RegexCompilationInfo.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>name</code>是&lt;xref:System.String?displayProperty=fullName&gt;。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pattern</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>name</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>fullnamespace</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>matchTimeout</code>為負數、 零或大於大約 24 天。"
  platform:
  - net462
- uid: System.Text.RegularExpressions.RegexCompilationInfo.IsPublic
  id: IsPublic
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  langs:
  - csharp
  name: IsPublic
  nameWithType: RegexCompilationInfo.IsPublic
  fullName: System.Text.RegularExpressions.RegexCompilationInfo.IsPublic
  type: Property
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: "取得或設定值，這個值會表示編譯的規則運算式是否具有公用的可見性。"
  remarks: "如果 IsPublic 屬性為`false`，目前的執行個體所定義的規則運算式類別可以具現化只能由執行包含的類別的組件中的程式碼。 不過，因為<xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A?displayProperty=fullName>方法會產生包含已編譯的規則運算式，且不允許額外的程式碼可加入的組件，通常是以指派此屬性的值沒有理由`false`。</xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsPublic { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果規則運算式有公用可見性。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Text.RegularExpressions.RegexCompilationInfo.IsPublic*
  exceptions: []
  platform:
  - net462
- uid: System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout
  id: MatchTimeout
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  langs:
  - csharp
  name: MatchTimeout
  nameWithType: RegexCompilationInfo.MatchTimeout
  fullName: System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout
  type: Property
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: "取得或設定規則運算式的預設逾時間隔。"
  remarks: "Wsdiscoveryforapi 屬性定義的已編譯的規則運算式的預設逾時間隔。 這個值代表已編譯的規則運算式會執行單一比對作業，作業逾時和規則運算式引擎會擲回之前的時間的大約數量<xref:System.Text.RegularExpressions.RegexMatchTimeoutException>其下一個計時檢查期間的例外狀況。</xref:System.Text.RegularExpressions.RegexMatchTimeoutException>      > [!IMPORTANT] > 我們建議您一律將編譯的規則運算式的預設逾時值。 您的規則運算式程式庫的取用者可以傳遞覆寫該逾時值<xref:System.TimeSpan>值，表示新的逾時間隔已編譯的規則運算式的類別建構函式。</xref:System.TimeSpan>       您可以指派到預設的逾時值<xref:System.Text.RegularExpressions.RegexCompilationInfo>物件中任何以下列方式:-藉由呼叫<xref:System.AppDomain.SetData%2A?displayProperty=fullName>方法並提供的字串表示<xref:System.TimeSpan>&quot;REGEX_DEFAULT_MATCH_TIMEOUT&quot;屬性的值。</xref:System.TimeSpan> </xref:System.AppDomain.SetData%2A?displayProperty=fullName> </xref:System.Text.RegularExpressions.RegexCompilationInfo>      -藉由呼叫<xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.String%2CSystem.String%2CSystem.Boolean%2CSystem.TimeSpan%29>建構函式，並提供值`matchTimeout`參數。</xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.String%2CSystem.String%2CSystem.Boolean%2CSystem.TimeSpan%29>      -藉由設定這個屬性的值。       若要設定的合理的逾時間隔，請考慮下列因素:-長度與複雜度的規則運算式模式。 長、 更複雜的規則運算式會需要更多的時間比短且更簡單。      -預期的機器工作負載。 在 CPU 和記憶體使用率過高的系統上處理花費的時間。"
  example:
  - "The following example defines a single compiled regular expression named `DuplicateChars` that identifies two or more occurrences of the same character in an input string. The compiled regular expression has a default time-out of 2 seconds. When you execute the example, it creates a class library named RegexLib.dll that contains the compiled regular expression.  \n  \n [!code-cs[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#1](~/add/codesnippet/csharp/p-system.text.regularexp_1.cs)]\n [!code-vb[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#1](~/add/codesnippet/visualbasic/p-system.text.regularexp_1.vb)]  \n  \n The regular expression pattern `(\\w)\\1+` is defined as shown in the following table.  \n  \n|Pattern|Description|  \n|-------------|-----------------|  \n|`(\\w)`|Match any word character and assign it to the first capturing group.|  \n|`\\1+`|Match one or more occurrences of the value of the first captured group.|  \n  \n The following example uses the `DuplicatedChars` regular expression to identify duplicate characters in a string array. When it calls the `DuplicatedChars` constructor, it changes the time-out interval to .5 seconds.  \n  \n [!code-cs[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#2](~/add/codesnippet/csharp/p-system.text.regularexp_2.cs)]\n [!code-vb[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#2](~/add/codesnippet/visualbasic/p-system.text.regularexp_2.vb)]"
  syntax:
    content: public TimeSpan MatchTimeout { get; set; }
    return:
      type: System.TimeSpan
      description: "可在之前的模式比對作業中流逝的預設最大時間間隔<xref:System.Text.RegularExpressions.RegexMatchTimeoutException>擲回，或&lt;xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=fullName&gt;如果逾時已停用。</xref:System.Text.RegularExpressions.RegexMatchTimeoutException>"
  overload: System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Text.RegularExpressions.RegexCompilationInfo.Name
  id: Name
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  langs:
  - csharp
  name: Name
  nameWithType: RegexCompilationInfo.Name
  fullName: System.Text.RegularExpressions.RegexCompilationInfo.Name
  type: Property
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: "取得或設定表示編譯的規則運算式的型別名稱。"
  remarks: "<xref:System.Text.RegularExpressions.RegexCompilationInfo>類別用來定義已編譯的規則運算式，它會呈現為衍生自<xref:System.Text.RegularExpressions.Regex>.</xref:System.Text.RegularExpressions.Regex>類別</xref:System.Text.RegularExpressions.RegexCompilationInfo> Name 屬性定義的類別名稱的規則運算式的類型，而<xref:System.Text.RegularExpressions.RegexCompilationInfo.Namespace%2A>和名稱屬性一起定義的完整限定的名稱。</xref:System.Text.RegularExpressions.RegexCompilationInfo.Namespace%2A>"
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "新的型別名稱。"
  overload: System.Text.RegularExpressions.RegexCompilationInfo.Name*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "這個屬性的值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "這個屬性的值為空字串。"
  platform:
  - net462
- uid: System.Text.RegularExpressions.RegexCompilationInfo.Namespace
  id: Namespace
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  langs:
  - csharp
  name: Namespace
  nameWithType: RegexCompilationInfo.Namespace
  fullName: System.Text.RegularExpressions.RegexCompilationInfo.Namespace
  type: Property
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: "取得或設定新的型別所屬之命名空間。"
  remarks: "<xref:System.Text.RegularExpressions.RegexCompilationInfo>類別用來定義已編譯的規則運算式，它會呈現為衍生自<xref:System.Text.RegularExpressions.Regex>.</xref:System.Text.RegularExpressions.Regex>類別</xref:System.Text.RegularExpressions.RegexCompilationInfo> 命名空間屬性定義包含已編譯的規則運算式型別和命名空間的命名空間和<xref:System.Text.RegularExpressions.RegexCompilationInfo.Name%2A>屬性一起定義的完整限定的名稱。</xref:System.Text.RegularExpressions.RegexCompilationInfo.Name%2A>"
  syntax:
    content: public string Namespace { get; set; }
    return:
      type: System.String
      description: "新類型的命名空間。"
  overload: System.Text.RegularExpressions.RegexCompilationInfo.Namespace*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "這個屬性的值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  platform:
  - net462
- uid: System.Text.RegularExpressions.RegexCompilationInfo.Options
  id: Options
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  langs:
  - csharp
  name: Options
  nameWithType: RegexCompilationInfo.Options
  fullName: System.Text.RegularExpressions.RegexCompilationInfo.Options
  type: Property
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: "取得或設定要編譯規則運算式時使用的選項。"
  remarks: "<xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A>方法會產生內含編譯的規則運算式的組件。</xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A> 因此，您就不需要指定<xref:System.Text.RegularExpressions.RegexOptions>做為其中一個值，這個屬性。</xref:System.Text.RegularExpressions.RegexOptions> 如果有的話，<xref:System.Text.RegularExpressions.RegexOptions>選項會被忽略。</xref:System.Text.RegularExpressions.RegexOptions>"
  syntax:
    content: public System.Text.RegularExpressions.RegexOptions Options { get; set; }
    return:
      type: System.Text.RegularExpressions.RegexOptions
      description: "列舉值的位元組合。"
  overload: System.Text.RegularExpressions.RegexCompilationInfo.Options*
  exceptions: []
  platform:
  - net462
- uid: System.Text.RegularExpressions.RegexCompilationInfo.Pattern
  id: Pattern
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  langs:
  - csharp
  name: Pattern
  nameWithType: RegexCompilationInfo.Pattern
  fullName: System.Text.RegularExpressions.RegexCompilationInfo.Pattern
  type: Property
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: "取得或設定要編譯的規則運算式。"
  remarks: "[模式] 屬性可以包含任何有效的規則運算式。 如果模式屬性的值不是語法正確的規則運算式模式中，呼叫的<xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A>方法會擲回<xref:System.ArgumentException>.</xref:System.ArgumentException> </xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A>"
  syntax:
    content: public string Pattern { get; set; }
    return:
      type: System.String
      description: "若要編譯規則運算式。"
  overload: System.Text.RegularExpressions.RegexCompilationInfo.Pattern*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "這個屬性的值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean)
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  isExternal: false
  name: RegexCompilationInfo(String,RegexOptions,String,String,Boolean)
  nameWithType: RegexCompilationInfo.RegexCompilationInfo(String,RegexOptions,String,String,Boolean)
  fullName: System.Text.RegularExpressions.RegexCompilationInfo.RegexCompilationInfo(String,RegexOptions,String,String,Boolean)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Text.RegularExpressions.RegexOptions
  parent: System.Text.RegularExpressions
  isExternal: true
  name: RegexOptions
  nameWithType: RegexOptions
  fullName: System.Text.RegularExpressions.RegexOptions
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  isExternal: false
  name: RegexCompilationInfo(String,RegexOptions,String,String,Boolean,TimeSpan)
  nameWithType: RegexCompilationInfo.RegexCompilationInfo(String,RegexOptions,String,String,Boolean,TimeSpan)
  fullName: System.Text.RegularExpressions.RegexCompilationInfo.RegexCompilationInfo(String,RegexOptions,String,String,Boolean,TimeSpan)
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Text.RegularExpressions.RegexCompilationInfo.IsPublic
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  isExternal: false
  name: IsPublic
  nameWithType: RegexCompilationInfo.IsPublic
  fullName: System.Text.RegularExpressions.RegexCompilationInfo.IsPublic
- uid: System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  isExternal: false
  name: MatchTimeout
  nameWithType: RegexCompilationInfo.MatchTimeout
  fullName: System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout
- uid: System.Text.RegularExpressions.RegexCompilationInfo.Name
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  isExternal: false
  name: Name
  nameWithType: RegexCompilationInfo.Name
  fullName: System.Text.RegularExpressions.RegexCompilationInfo.Name
- uid: System.Text.RegularExpressions.RegexCompilationInfo.Namespace
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  isExternal: false
  name: Namespace
  nameWithType: RegexCompilationInfo.Namespace
  fullName: System.Text.RegularExpressions.RegexCompilationInfo.Namespace
- uid: System.Text.RegularExpressions.RegexCompilationInfo.Options
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  isExternal: false
  name: Options
  nameWithType: RegexCompilationInfo.Options
  fullName: System.Text.RegularExpressions.RegexCompilationInfo.Options
- uid: System.Text.RegularExpressions.RegexCompilationInfo.Pattern
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  isExternal: false
  name: Pattern
  nameWithType: RegexCompilationInfo.Pattern
  fullName: System.Text.RegularExpressions.RegexCompilationInfo.Pattern
- uid: System.Text.RegularExpressions.RegexCompilationInfo.#ctor*
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  isExternal: false
  name: RegexCompilationInfo
  nameWithType: RegexCompilationInfo.RegexCompilationInfo
- uid: System.Text.RegularExpressions.RegexCompilationInfo.IsPublic*
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  isExternal: false
  name: IsPublic
  nameWithType: RegexCompilationInfo.IsPublic
- uid: System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout*
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  isExternal: false
  name: MatchTimeout
  nameWithType: RegexCompilationInfo.MatchTimeout
- uid: System.Text.RegularExpressions.RegexCompilationInfo.Name*
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  isExternal: false
  name: Name
  nameWithType: RegexCompilationInfo.Name
- uid: System.Text.RegularExpressions.RegexCompilationInfo.Namespace*
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  isExternal: false
  name: Namespace
  nameWithType: RegexCompilationInfo.Namespace
- uid: System.Text.RegularExpressions.RegexCompilationInfo.Options*
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  isExternal: false
  name: Options
  nameWithType: RegexCompilationInfo.Options
- uid: System.Text.RegularExpressions.RegexCompilationInfo.Pattern*
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  isExternal: false
  name: Pattern
  nameWithType: RegexCompilationInfo.Pattern
