### YamlMime:ManagedReference
items:
- uid: System.Windows.Media.Effects.BevelBitmapEffect
  id: BevelBitmapEffect
  children:
  - System.Windows.Media.Effects.BevelBitmapEffect.#ctor
  - System.Windows.Media.Effects.BevelBitmapEffect.BevelWidth
  - System.Windows.Media.Effects.BevelBitmapEffect.BevelWidthProperty
  - System.Windows.Media.Effects.BevelBitmapEffect.Clone
  - System.Windows.Media.Effects.BevelBitmapEffect.CloneCurrentValue
  - System.Windows.Media.Effects.BevelBitmapEffect.CreateInstanceCore
  - System.Windows.Media.Effects.BevelBitmapEffect.CreateUnmanagedEffect
  - System.Windows.Media.Effects.BevelBitmapEffect.EdgeProfile
  - System.Windows.Media.Effects.BevelBitmapEffect.EdgeProfileProperty
  - System.Windows.Media.Effects.BevelBitmapEffect.LightAngle
  - System.Windows.Media.Effects.BevelBitmapEffect.LightAngleProperty
  - System.Windows.Media.Effects.BevelBitmapEffect.Relief
  - System.Windows.Media.Effects.BevelBitmapEffect.ReliefProperty
  - System.Windows.Media.Effects.BevelBitmapEffect.Smoothness
  - System.Windows.Media.Effects.BevelBitmapEffect.SmoothnessProperty
  - System.Windows.Media.Effects.BevelBitmapEffect.UpdateUnmanagedPropertyState(System.Runtime.InteropServices.SafeHandle)
  langs:
  - csharp
  name: BevelBitmapEffect
  nameWithType: BevelBitmapEffect
  fullName: System.Windows.Media.Effects.BevelBitmapEffect
  type: Class
  summary: '**注意︰ 這個 API 現在已過時。** 非過時的替代方式是<xref href=&quot;System.Windows.Media.Effects.Effect&quot;> </xref>。 建立斜面，它會根據指定的曲線映像的介面。'
  remarks: "> [!NOTE] >  [!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]已軟體呈現點陣圖效果。 套用效果的任何物件也會在軟體中呈現。 不應該將點陣圖效果套用至大型的視覺效果或動畫，因為這可能會降低效能。       斜面 （斜面的曲線） 的類型由決定<xref:System.Windows.Media.Effects.BevelBitmapEffect.EdgeProfile%2A>屬性。</xref:System.Windows.Media.Effects.BevelBitmapEffect.EdgeProfile%2A>       BevelBitmapEffect 是數種效果 SDK 隨附的其中一個。 其他的影響包括:- <xref:System.Windows.Media.Effects.OuterGlowBitmapEffect>- <xref:System.Windows.Media.Effects.BlurBitmapEffect>- <xref:System.Windows.Media.Effects.DropShadowBitmapEffect>-<xref:System.Windows.Media.Effects.EmbossBitmapEffect>下圖顯示套用至視覺物件 BevelBitmapEffect (在此情況下套用至<xref:System.Windows.Controls.Button>)。</xref:System.Windows.Controls.Button> </xref:System.Windows.Media.Effects.EmbossBitmapEffect> </xref:System.Windows.Media.Effects.DropShadowBitmapEffect> </xref:System.Windows.Media.Effects.BlurBitmapEffect> </xref:System.Windows.Media.Effects.OuterGlowBitmapEffect>       ![螢幕擷取畫面︰ 比較正常和經過斜面化的按鈕](~/add/media/effects-bevelsimple1.png &quot;螢幕擷取畫面︰ 比較正常和經過斜面化的按鈕&quot;)下圖顯示 BevelBitmapEffect 的數個基本屬性的效果。       <xref:System.Windows.Media.Effects.BevelBitmapEffect.BevelWidth%2A>屬性指定斜面時寬度︰![螢幕擷取畫面︰ 比較 BevelWidth 值](~/add/media/effects-bevelbevelwidth.png &quot;螢幕擷取畫面︰ 比較 BevelWidth 值&quot;)<xref:System.Windows.Media.Effects.BevelBitmapEffect.EdgeProfile%2A>屬性指定斜面的曲線︰![螢幕擷取畫面︰ 比較 EdgeProfile 的](~/add/media/effects-beveledgeprofile.png &quot;螢幕擷取畫面︰ 比較 EdgeProfile 的&quot;)<xref:System.Windows.Media.Effects.BevelBitmapEffect.Relief%2A>屬性指定斜面浮雕︰![螢幕擷取畫面︰ 比較 relief 屬性](~/add/media/effects-bevelrelief.png &quot;螢幕擷取畫面︰ 比較 relief 屬性&quot;)<xref:System.Windows.Media.Effects.BevelBitmapEffect.Smoothness%2A>屬性指定斜面陰影平滑度:![螢幕擷取畫面︰ 比較 Smoothness 屬性值](~/add/media/effects-bevelsmoothness.png &quot;螢幕擷取畫面︰ 比較 Smoothness 屬性值&quot;)<xref:System.Windows.Media.Effects.BevelBitmapEffect.LightAngle%2A>屬性指定的方向從 「 虛擬光源 」 來自用以建立斜面的陰影︰![螢幕擷取畫面︰ 比較燈光角度](~/add/media/effects-bevellightangle.png &quot;螢幕擷取畫面︰ 比較燈光角度&quot;)</xref:System.Windows.Media.Effects.BevelBitmapEffect.LightAngle%2A></xref:System.Windows.Media.Effects.BevelBitmapEffect.Smoothness%2A></xref:System.Windows.Media.Effects.BevelBitmapEffect.Relief%2A></xref:System.Windows.Media.Effects.BevelBitmapEffect.EdgeProfile%2A></xref:System.Windows.Media.Effects.BevelBitmapEffect.BevelWidth%2A>"
  syntax:
    content: 'public sealed class BevelBitmapEffect : System.Windows.Media.Effects.BitmapEffect'
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  - System.Windows.Freezable
  - System.Windows.Media.Animation.Animatable
  - System.Windows.Media.Effects.BitmapEffect
  implements: []
  inheritedMembers:
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.Freezable.CanFreeze
  - System.Windows.Freezable.Changed
  - System.Windows.Freezable.CloneCore(System.Windows.Freezable)
  - System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)
  - System.Windows.Freezable.CreateInstance
  - System.Windows.Freezable.Freeze
  - System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)
  - System.Windows.Freezable.GetAsFrozen
  - System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Freezable.GetCurrentValueAsFrozen
  - System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Freezable.IsFrozen
  - System.Windows.Freezable.OnChanged
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)
  - System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.Freezable.ReadPreamble
  - System.Windows.Freezable.WritePostscript
  - System.Windows.Freezable.WritePreamble
  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)
  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)
  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)
  - System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)
  - System.Windows.Media.Animation.Animatable.HasAnimatedProperties
  - System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)
  - System.Windows.Media.Effects.BitmapEffect.CreateBitmapEffectOuter
  - System.Windows.Media.Effects.BitmapEffect.GetOutput(System.Windows.Media.Effects.BitmapEffectInput)
  - System.Windows.Media.Effects.BitmapEffect.InitializeBitmapEffect(System.Runtime.InteropServices.SafeHandle,System.Runtime.InteropServices.SafeHandle)
  - System.Windows.Media.Effects.BitmapEffect.SetValue(System.Runtime.InteropServices.SafeHandle,System.String,System.Object)
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.Media.Effects.BevelBitmapEffect.#ctor
  id: '#ctor'
  parent: System.Windows.Media.Effects.BevelBitmapEffect
  langs:
  - csharp
  name: BevelBitmapEffect()
  nameWithType: BevelBitmapEffect.BevelBitmapEffect()
  fullName: System.Windows.Media.Effects.BevelBitmapEffect.BevelBitmapEffect()
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: '**注意︰ 這個 API 現在已過時。** 非過時的替代方式是<xref href=&quot;System.Windows.Media.Effects.Effect&quot;> </xref>。 初始化的新執行個體<xref href=&quot;System.Windows.Media.Effects.BevelBitmapEffect&quot;></xref>類別。'
  syntax:
    content: public BevelBitmapEffect ();
    parameters: []
  overload: System.Windows.Media.Effects.BevelBitmapEffect.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.BevelBitmapEffect.BevelWidth
  id: BevelWidth
  parent: System.Windows.Media.Effects.BevelBitmapEffect
  langs:
  - csharp
  name: BevelWidth
  nameWithType: BevelBitmapEffect.BevelWidth
  fullName: System.Windows.Media.Effects.BevelBitmapEffect.BevelWidth
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: '**注意︰ 這個 API 現在已過時。** 非過時的替代方式是<xref href=&quot;System.Windows.Media.Effects.Effect&quot;> </xref>。 取得或設定斜面的寬度。'
  remarks: "下圖示範這個屬性的效果︰![螢幕擷取畫面︰ 比較 BevelWidth 值](~/add/media/effects-bevelbevelwidth.png &quot;螢幕擷取畫面︰ 比較 BevelWidth 值&quot;)<a name=&quot;dependencyPropertyInfo_BevelWidth&quot;> </a> # # 相依性屬性資訊 | | |  |-|-|  |識別項欄位 |<xref:System.Windows.Media.Effects.BevelBitmapEffect.BevelWidthProperty>|  |中繼資料屬性設定為`true`|None |</xref:System.Windows.Media.Effects.BevelBitmapEffect.BevelWidthProperty>      "
  syntax:
    content: public double BevelWidth { get; set; }
    return:
      type: System.Double
      description: "斜面的寬度。 預設值為 `5`。"
  overload: System.Windows.Media.Effects.BevelBitmapEffect.BevelWidth*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.BevelBitmapEffect.BevelWidthProperty
  id: BevelWidthProperty
  parent: System.Windows.Media.Effects.BevelBitmapEffect
  langs:
  - csharp
  name: BevelWidthProperty
  nameWithType: BevelBitmapEffect.BevelWidthProperty
  fullName: System.Windows.Media.Effects.BevelBitmapEffect.BevelWidthProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: '**注意︰ 這個 API 現在已過時。** 非過時的替代方式是<xref href=&quot;System.Windows.Media.Effects.Effect&quot;> </xref>。 識別<xref:System.Windows.Media.Effects.BevelBitmapEffect.BevelWidth*>相依性屬性。</xref:System.Windows.Media.Effects.BevelBitmapEffect.BevelWidth*>'
  syntax:
    content: public static readonly System.Windows.DependencyProperty BevelWidthProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.BevelBitmapEffect.Clone
  id: Clone
  parent: System.Windows.Media.Effects.BevelBitmapEffect
  langs:
  - csharp
  name: Clone()
  nameWithType: BevelBitmapEffect.Clone()
  fullName: System.Windows.Media.Effects.BevelBitmapEffect.Clone()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: '**Note: This API is now obsolete.** The non-obsolete alternative is <xref href="System.Windows.Media.Effects.Effect"></xref>. Creates a modifiable clone of this <xref href="System.Windows.Media.Effects.BevelBitmapEffect"></xref>, making deep copies of this object''s values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.'
  remarks: "這個方法用來產生的可修改複本凍結<xref:System.Windows.Freezable>物件 (或任何<xref:System.Windows.Freezable>物件)。</xref:System.Windows.Freezable> </xref:System.Windows.Freezable> 為了方便起見，這個方法會遮蔽繼承的版本。       如需詳細資訊，請參閱<xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>.</xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>"
  syntax:
    content: public System.Windows.Media.Effects.BevelBitmapEffect Clone ();
    parameters: []
    return:
      type: System.Windows.Media.Effects.BevelBitmapEffect
      description: "目前物件的可修改複本。 複製的物件<> *> 屬性會是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>即使來源的<> *> 屬性<xref uid=&quot;langword_csharp_true.&quot; name=&quot;true.&quot; href=&quot;&quot;></xref>"
  overload: System.Windows.Media.Effects.BevelBitmapEffect.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.BevelBitmapEffect.CloneCurrentValue
  id: CloneCurrentValue
  parent: System.Windows.Media.Effects.BevelBitmapEffect
  langs:
  - csharp
  name: CloneCurrentValue()
  nameWithType: BevelBitmapEffect.CloneCurrentValue()
  fullName: System.Windows.Media.Effects.BevelBitmapEffect.CloneCurrentValue()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: '**Note: This API is now obsolete.** The non-obsolete alternative is <xref href="System.Windows.Media.Effects.Effect"></xref>. Creates a modifiable clone of this <xref href="System.Windows.Media.Effects.BevelBitmapEffect"></xref> object, making deep copies of this object''s current values. Resource references, data bindings, and animations are not copied, but their current values are'
  remarks: "這個方法用來產生的可修改複本凍結<xref:System.Windows.Freezable>物件 (或任何<xref:System.Windows.Freezable>物件)。</xref:System.Windows.Freezable> </xref:System.Windows.Freezable> 為了方便起見，這個方法會遮蔽繼承的版本。       如需詳細資訊，請參閱<xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName>.</xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName>"
  syntax:
    content: public System.Windows.Media.Effects.BevelBitmapEffect CloneCurrentValue ();
    parameters: []
    return:
      type: System.Windows.Media.Effects.BevelBitmapEffect
      description: "目前物件的可修改複本。 複製的物件<> *> 屬性會是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>即使來源的<> *> 屬性是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Media.Effects.BevelBitmapEffect.CloneCurrentValue*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.BevelBitmapEffect.CreateInstanceCore
  id: CreateInstanceCore
  parent: System.Windows.Media.Effects.BevelBitmapEffect
  langs:
  - csharp
  name: CreateInstanceCore()
  nameWithType: BevelBitmapEffect.CreateInstanceCore()
  fullName: System.Windows.Media.Effects.BevelBitmapEffect.CreateInstanceCore()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  syntax:
    content: protected override System.Windows.Freezable CreateInstanceCore ();
    parameters: []
    return:
      type: System.Windows.Freezable
      description: "即將加入。"
  overload: System.Windows.Media.Effects.BevelBitmapEffect.CreateInstanceCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.BevelBitmapEffect.CreateUnmanagedEffect
  id: CreateUnmanagedEffect
  parent: System.Windows.Media.Effects.BevelBitmapEffect
  langs:
  - csharp
  name: CreateUnmanagedEffect()
  nameWithType: BevelBitmapEffect.CreateUnmanagedEffect()
  fullName: System.Windows.Media.Effects.BevelBitmapEffect.CreateUnmanagedEffect()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  syntax:
    content: protected override System.Runtime.InteropServices.SafeHandle CreateUnmanagedEffect ();
    parameters: []
    return:
      type: System.Runtime.InteropServices.SafeHandle
      description: "即將加入。"
  overload: System.Windows.Media.Effects.BevelBitmapEffect.CreateUnmanagedEffect*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.BevelBitmapEffect.EdgeProfile
  id: EdgeProfile
  parent: System.Windows.Media.Effects.BevelBitmapEffect
  langs:
  - csharp
  name: EdgeProfile
  nameWithType: BevelBitmapEffect.EdgeProfile
  fullName: System.Windows.Media.Effects.BevelBitmapEffect.EdgeProfile
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: '**注意︰ 這個 API 現在已過時。** 非過時的替代方式是<xref href=&quot;System.Windows.Media.Effects.Effect&quot;> </xref>。 取得或設定斜面的曲線。'
  remarks: "下圖示範這個屬性的效果︰![螢幕擷取畫面︰ 比較 EdgeProfile 的](~/add/media/effects-beveledgeprofile.png &quot;螢幕擷取畫面︰ 比較 EdgeProfile 的&quot;)<a name=&quot;dependencyPropertyInfo_EdgeProfile&quot;> </a> # # 相依性屬性資訊 | | |  |-|-|  |識別項欄位 |<xref:System.Windows.Media.Effects.BevelBitmapEffect.EdgeProfileProperty>|  |中繼資料屬性設定為`true`|None |</xref:System.Windows.Media.Effects.BevelBitmapEffect.EdgeProfileProperty>      "
  syntax:
    content: public System.Windows.Media.Effects.EdgeProfile EdgeProfile { get; set; }
    return:
      type: System.Windows.Media.Effects.EdgeProfile
      description: "斜面的曲線。 預設值是<xref href=&quot;System.Windows.Media.Effects.EdgeProfile&quot;> </xref>。"
  overload: System.Windows.Media.Effects.BevelBitmapEffect.EdgeProfile*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.BevelBitmapEffect.EdgeProfileProperty
  id: EdgeProfileProperty
  parent: System.Windows.Media.Effects.BevelBitmapEffect
  langs:
  - csharp
  name: EdgeProfileProperty
  nameWithType: BevelBitmapEffect.EdgeProfileProperty
  fullName: System.Windows.Media.Effects.BevelBitmapEffect.EdgeProfileProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: '**注意︰ 這個 API 現在已過時。** 非過時的替代方式是<xref href=&quot;System.Windows.Media.Effects.Effect&quot;> </xref>。 識別<xref:System.Windows.Media.Effects.BevelBitmapEffect.EdgeProfile*>相依性屬性。</xref:System.Windows.Media.Effects.BevelBitmapEffect.EdgeProfile*>'
  syntax:
    content: public static readonly System.Windows.DependencyProperty EdgeProfileProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.BevelBitmapEffect.LightAngle
  id: LightAngle
  parent: System.Windows.Media.Effects.BevelBitmapEffect
  langs:
  - csharp
  name: LightAngle
  nameWithType: BevelBitmapEffect.LightAngle
  fullName: System.Windows.Media.Effects.BevelBitmapEffect.LightAngle
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: '**注意︰ 這個 API 現在已過時。** 非過時的替代方式是<xref href=&quot;System.Windows.Media.Effects.Effect&quot;> </xref>。 取得或設定 「 虛擬光源 」 來自用以建立斜面的陰影方向。'
  remarks: "下圖顯示淺色方向來自指定這個屬性的值。 斜面的陰影是光源角度相對的一邊轉換。       ![圖表︰ DropShadow 方向](~/add/media/effects-dropshadowdirection2.png &quot;圖表︰ DropShadow 方向&quot;)下圖示範這個屬性的效果︰![螢幕擷取畫面︰ 比較燈光角度](~/add/media/effects-bevellightangle.png &quot;螢幕擷取畫面︰ 比較燈光角度&quot;)<a name=&quot;dependencyPropertyInfo_LightAngle&quot;> </a> # # 相依性屬性資訊 | | |  |-|-|  |識別項欄位 |<xref:System.Windows.Media.Effects.BevelBitmapEffect.LightAngleProperty>|  |中繼資料屬性設定為`true`|None |</xref:System.Windows.Media.Effects.BevelBitmapEffect.LightAngleProperty>      "
  syntax:
    content: public double LightAngle { get; set; }
    return:
      type: System.Double
      description: "虛擬光源的方向。 有效範圍是從 0-360 （度），0 指定的物件和物件以逆時針方向移動的連續值的右邊。 斜面的陰影是光源投射的其中相反邊。 預設值為 `135`。"
  overload: System.Windows.Media.Effects.BevelBitmapEffect.LightAngle*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.BevelBitmapEffect.LightAngleProperty
  id: LightAngleProperty
  parent: System.Windows.Media.Effects.BevelBitmapEffect
  langs:
  - csharp
  name: LightAngleProperty
  nameWithType: BevelBitmapEffect.LightAngleProperty
  fullName: System.Windows.Media.Effects.BevelBitmapEffect.LightAngleProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: '**注意︰ 這個 API 現在已過時。** 非過時的替代方式是<xref href=&quot;System.Windows.Media.Effects.Effect&quot;> </xref>。 識別<xref:System.Windows.Media.Effects.BevelBitmapEffect.LightAngle*>相依性屬性。</xref:System.Windows.Media.Effects.BevelBitmapEffect.LightAngle*>'
  syntax:
    content: public static readonly System.Windows.DependencyProperty LightAngleProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.BevelBitmapEffect.Relief
  id: Relief
  parent: System.Windows.Media.Effects.BevelBitmapEffect
  langs:
  - csharp
  name: Relief
  nameWithType: BevelBitmapEffect.Relief
  fullName: System.Windows.Media.Effects.BevelBitmapEffect.Relief
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: '**注意︰ 這個 API 現在已過時。** 非過時的替代方式是<xref href=&quot;System.Windows.Media.Effects.Effect&quot;> </xref>。 取得或設定斜面浮雕的高度。'
  remarks: "下圖示範這個屬性的效果︰![螢幕擷取畫面︰ 比較 relief 屬性](~/add/media/effects-bevelrelief.png &quot;螢幕擷取畫面︰ 比較 relief 屬性&quot;)<a name=&quot;dependencyPropertyInfo_Relief&quot;> </a> # # 相依性屬性資訊 | | |  |-|-|  |識別項欄位 |<xref:System.Windows.Media.Effects.BevelBitmapEffect.ReliefProperty>|  |中繼資料屬性設定為`true`|None |</xref:System.Windows.Media.Effects.BevelBitmapEffect.ReliefProperty>      "
  syntax:
    content: public double Relief { get; set; }
    return:
      type: System.Double
      description: "斜面浮雕的高度。 有效範圍是介於`0`和`1`與`1`的浮雕最多 （最暗陰影）。 預設值為 `0.3`。"
  overload: System.Windows.Media.Effects.BevelBitmapEffect.Relief*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.BevelBitmapEffect.ReliefProperty
  id: ReliefProperty
  parent: System.Windows.Media.Effects.BevelBitmapEffect
  langs:
  - csharp
  name: ReliefProperty
  nameWithType: BevelBitmapEffect.ReliefProperty
  fullName: System.Windows.Media.Effects.BevelBitmapEffect.ReliefProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: '**注意︰ 這個 API 現在已過時。** 非過時的替代方式是<xref href=&quot;System.Windows.Media.Effects.Effect&quot;> </xref>。 識別<xref:System.Windows.Media.Effects.BevelBitmapEffect.Relief*>相依性屬性。</xref:System.Windows.Media.Effects.BevelBitmapEffect.Relief*>'
  syntax:
    content: public static readonly System.Windows.DependencyProperty ReliefProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.BevelBitmapEffect.Smoothness
  id: Smoothness
  parent: System.Windows.Media.Effects.BevelBitmapEffect
  langs:
  - csharp
  name: Smoothness
  nameWithType: BevelBitmapEffect.Smoothness
  fullName: System.Windows.Media.Effects.BevelBitmapEffect.Smoothness
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: '**注意︰ 這個 API 現在已過時。** 非過時的替代方式是<xref href=&quot;System.Windows.Media.Effects.Effect&quot;> </xref>。 取得或設定斜面陰影平滑度。'
  remarks: "下圖示範這個屬性的效果︰![螢幕擷取畫面︰ 比較 Smoothness 屬性值](~/add/media/effects-bevelsmoothness.png &quot;螢幕擷取畫面︰ 比較 Smoothness 屬性值&quot;)<a name=&quot;dependencyPropertyInfo_Smoothness&quot;> </a> # # 相依性屬性資訊 | | |  |-|-|  |識別項欄位 |<xref:System.Windows.Media.Effects.BevelBitmapEffect.SmoothnessProperty>|  |中繼資料屬性設定為`true`|None |</xref:System.Windows.Media.Effects.BevelBitmapEffect.SmoothnessProperty>      "
  syntax:
    content: public double Smoothness { get; set; }
    return:
      type: System.Double
      description: "值，指出斜面陰影平滑度。 有效範圍是介於`0`和`1`與`1`代表最平滑。 預設值為 `0.2`。"
  overload: System.Windows.Media.Effects.BevelBitmapEffect.Smoothness*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.BevelBitmapEffect.SmoothnessProperty
  id: SmoothnessProperty
  parent: System.Windows.Media.Effects.BevelBitmapEffect
  langs:
  - csharp
  name: SmoothnessProperty
  nameWithType: BevelBitmapEffect.SmoothnessProperty
  fullName: System.Windows.Media.Effects.BevelBitmapEffect.SmoothnessProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: '**注意︰ 這個 API 現在已過時。** 非過時的替代方式是<xref href=&quot;System.Windows.Media.Effects.Effect&quot;> </xref>。 識別<xref:System.Windows.Media.Effects.BevelBitmapEffect.Smoothness*>相依性屬性。</xref:System.Windows.Media.Effects.BevelBitmapEffect.Smoothness*>'
  syntax:
    content: public static readonly System.Windows.DependencyProperty SmoothnessProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.BevelBitmapEffect.UpdateUnmanagedPropertyState(System.Runtime.InteropServices.SafeHandle)
  id: UpdateUnmanagedPropertyState(System.Runtime.InteropServices.SafeHandle)
  parent: System.Windows.Media.Effects.BevelBitmapEffect
  langs:
  - csharp
  name: UpdateUnmanagedPropertyState(SafeHandle)
  nameWithType: BevelBitmapEffect.UpdateUnmanagedPropertyState(SafeHandle)
  fullName: System.Windows.Media.Effects.BevelBitmapEffect.UpdateUnmanagedPropertyState(SafeHandle)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  syntax:
    content: protected override void UpdateUnmanagedPropertyState (System.Runtime.InteropServices.SafeHandle unmanagedEffect);
    parameters:
    - id: unmanagedEffect
      type: System.Runtime.InteropServices.SafeHandle
      description: "即將加入。"
  overload: System.Windows.Media.Effects.BevelBitmapEffect.UpdateUnmanagedPropertyState*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Media.Effects.BitmapEffect
  isExternal: false
  name: System.Windows.Media.Effects.BitmapEffect
- uid: System.Windows.Media.Effects.BevelBitmapEffect.#ctor
  parent: System.Windows.Media.Effects.BevelBitmapEffect
  isExternal: false
  name: BevelBitmapEffect()
  nameWithType: BevelBitmapEffect.BevelBitmapEffect()
  fullName: System.Windows.Media.Effects.BevelBitmapEffect.BevelBitmapEffect()
- uid: System.Windows.Media.Effects.BevelBitmapEffect.BevelWidth
  parent: System.Windows.Media.Effects.BevelBitmapEffect
  isExternal: false
  name: BevelWidth
  nameWithType: BevelBitmapEffect.BevelWidth
  fullName: System.Windows.Media.Effects.BevelBitmapEffect.BevelWidth
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Windows.Media.Effects.BevelBitmapEffect.BevelWidthProperty
  parent: System.Windows.Media.Effects.BevelBitmapEffect
  isExternal: false
  name: BevelWidthProperty
  nameWithType: BevelBitmapEffect.BevelWidthProperty
  fullName: System.Windows.Media.Effects.BevelBitmapEffect.BevelWidthProperty
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Windows.Media.Effects.BevelBitmapEffect.Clone
  parent: System.Windows.Media.Effects.BevelBitmapEffect
  isExternal: false
  name: Clone()
  nameWithType: BevelBitmapEffect.Clone()
  fullName: System.Windows.Media.Effects.BevelBitmapEffect.Clone()
- uid: System.Windows.Media.Effects.BevelBitmapEffect
  parent: System.Windows.Media.Effects
  isExternal: false
  name: BevelBitmapEffect
  nameWithType: BevelBitmapEffect
  fullName: System.Windows.Media.Effects.BevelBitmapEffect
- uid: System.Windows.Media.Effects.BevelBitmapEffect.CloneCurrentValue
  parent: System.Windows.Media.Effects.BevelBitmapEffect
  isExternal: false
  name: CloneCurrentValue()
  nameWithType: BevelBitmapEffect.CloneCurrentValue()
  fullName: System.Windows.Media.Effects.BevelBitmapEffect.CloneCurrentValue()
- uid: System.Windows.Media.Effects.BevelBitmapEffect.CreateInstanceCore
  parent: System.Windows.Media.Effects.BevelBitmapEffect
  isExternal: false
  name: CreateInstanceCore()
  nameWithType: BevelBitmapEffect.CreateInstanceCore()
  fullName: System.Windows.Media.Effects.BevelBitmapEffect.CreateInstanceCore()
- uid: System.Windows.Freezable
  parent: System.Windows
  isExternal: false
  name: Freezable
  nameWithType: Freezable
  fullName: System.Windows.Freezable
- uid: System.Windows.Media.Effects.BevelBitmapEffect.CreateUnmanagedEffect
  parent: System.Windows.Media.Effects.BevelBitmapEffect
  isExternal: false
  name: CreateUnmanagedEffect()
  nameWithType: BevelBitmapEffect.CreateUnmanagedEffect()
  fullName: System.Windows.Media.Effects.BevelBitmapEffect.CreateUnmanagedEffect()
- uid: System.Runtime.InteropServices.SafeHandle
  parent: System.Runtime.InteropServices
  isExternal: true
  name: SafeHandle
  nameWithType: SafeHandle
  fullName: System.Runtime.InteropServices.SafeHandle
- uid: System.Windows.Media.Effects.BevelBitmapEffect.EdgeProfile
  parent: System.Windows.Media.Effects.BevelBitmapEffect
  isExternal: false
  name: EdgeProfile
  nameWithType: BevelBitmapEffect.EdgeProfile
  fullName: System.Windows.Media.Effects.BevelBitmapEffect.EdgeProfile
- uid: System.Windows.Media.Effects.EdgeProfile
  parent: System.Windows.Media.Effects
  isExternal: false
  name: EdgeProfile
  nameWithType: EdgeProfile
  fullName: System.Windows.Media.Effects.EdgeProfile
- uid: System.Windows.Media.Effects.BevelBitmapEffect.EdgeProfileProperty
  parent: System.Windows.Media.Effects.BevelBitmapEffect
  isExternal: false
  name: EdgeProfileProperty
  nameWithType: BevelBitmapEffect.EdgeProfileProperty
  fullName: System.Windows.Media.Effects.BevelBitmapEffect.EdgeProfileProperty
- uid: System.Windows.Media.Effects.BevelBitmapEffect.LightAngle
  parent: System.Windows.Media.Effects.BevelBitmapEffect
  isExternal: false
  name: LightAngle
  nameWithType: BevelBitmapEffect.LightAngle
  fullName: System.Windows.Media.Effects.BevelBitmapEffect.LightAngle
- uid: System.Windows.Media.Effects.BevelBitmapEffect.LightAngleProperty
  parent: System.Windows.Media.Effects.BevelBitmapEffect
  isExternal: false
  name: LightAngleProperty
  nameWithType: BevelBitmapEffect.LightAngleProperty
  fullName: System.Windows.Media.Effects.BevelBitmapEffect.LightAngleProperty
- uid: System.Windows.Media.Effects.BevelBitmapEffect.Relief
  parent: System.Windows.Media.Effects.BevelBitmapEffect
  isExternal: false
  name: Relief
  nameWithType: BevelBitmapEffect.Relief
  fullName: System.Windows.Media.Effects.BevelBitmapEffect.Relief
- uid: System.Windows.Media.Effects.BevelBitmapEffect.ReliefProperty
  parent: System.Windows.Media.Effects.BevelBitmapEffect
  isExternal: false
  name: ReliefProperty
  nameWithType: BevelBitmapEffect.ReliefProperty
  fullName: System.Windows.Media.Effects.BevelBitmapEffect.ReliefProperty
- uid: System.Windows.Media.Effects.BevelBitmapEffect.Smoothness
  parent: System.Windows.Media.Effects.BevelBitmapEffect
  isExternal: false
  name: Smoothness
  nameWithType: BevelBitmapEffect.Smoothness
  fullName: System.Windows.Media.Effects.BevelBitmapEffect.Smoothness
- uid: System.Windows.Media.Effects.BevelBitmapEffect.SmoothnessProperty
  parent: System.Windows.Media.Effects.BevelBitmapEffect
  isExternal: false
  name: SmoothnessProperty
  nameWithType: BevelBitmapEffect.SmoothnessProperty
  fullName: System.Windows.Media.Effects.BevelBitmapEffect.SmoothnessProperty
- uid: System.Windows.Media.Effects.BevelBitmapEffect.UpdateUnmanagedPropertyState(System.Runtime.InteropServices.SafeHandle)
  parent: System.Windows.Media.Effects.BevelBitmapEffect
  isExternal: false
  name: UpdateUnmanagedPropertyState(SafeHandle)
  nameWithType: BevelBitmapEffect.UpdateUnmanagedPropertyState(SafeHandle)
  fullName: System.Windows.Media.Effects.BevelBitmapEffect.UpdateUnmanagedPropertyState(SafeHandle)
- uid: System.Windows.Media.Effects.BevelBitmapEffect.#ctor*
  parent: System.Windows.Media.Effects.BevelBitmapEffect
  isExternal: false
  name: BevelBitmapEffect
  nameWithType: BevelBitmapEffect.BevelBitmapEffect
- uid: System.Windows.Media.Effects.BevelBitmapEffect.BevelWidth*
  parent: System.Windows.Media.Effects.BevelBitmapEffect
  isExternal: false
  name: BevelWidth
  nameWithType: BevelBitmapEffect.BevelWidth
- uid: System.Windows.Media.Effects.BevelBitmapEffect.Clone*
  parent: System.Windows.Media.Effects.BevelBitmapEffect
  isExternal: false
  name: Clone
  nameWithType: BevelBitmapEffect.Clone
- uid: System.Windows.Media.Effects.BevelBitmapEffect.CloneCurrentValue*
  parent: System.Windows.Media.Effects.BevelBitmapEffect
  isExternal: false
  name: CloneCurrentValue
  nameWithType: BevelBitmapEffect.CloneCurrentValue
- uid: System.Windows.Media.Effects.BevelBitmapEffect.CreateInstanceCore*
  parent: System.Windows.Media.Effects.BevelBitmapEffect
  isExternal: false
  name: CreateInstanceCore
  nameWithType: BevelBitmapEffect.CreateInstanceCore
- uid: System.Windows.Media.Effects.BevelBitmapEffect.CreateUnmanagedEffect*
  parent: System.Windows.Media.Effects.BevelBitmapEffect
  isExternal: false
  name: CreateUnmanagedEffect
  nameWithType: BevelBitmapEffect.CreateUnmanagedEffect
- uid: System.Windows.Media.Effects.BevelBitmapEffect.EdgeProfile*
  parent: System.Windows.Media.Effects.BevelBitmapEffect
  isExternal: false
  name: EdgeProfile
  nameWithType: BevelBitmapEffect.EdgeProfile
- uid: System.Windows.Media.Effects.BevelBitmapEffect.LightAngle*
  parent: System.Windows.Media.Effects.BevelBitmapEffect
  isExternal: false
  name: LightAngle
  nameWithType: BevelBitmapEffect.LightAngle
- uid: System.Windows.Media.Effects.BevelBitmapEffect.Relief*
  parent: System.Windows.Media.Effects.BevelBitmapEffect
  isExternal: false
  name: Relief
  nameWithType: BevelBitmapEffect.Relief
- uid: System.Windows.Media.Effects.BevelBitmapEffect.Smoothness*
  parent: System.Windows.Media.Effects.BevelBitmapEffect
  isExternal: false
  name: Smoothness
  nameWithType: BevelBitmapEffect.Smoothness
- uid: System.Windows.Media.Effects.BevelBitmapEffect.UpdateUnmanagedPropertyState*
  parent: System.Windows.Media.Effects.BevelBitmapEffect
  isExternal: false
  name: UpdateUnmanagedPropertyState
  nameWithType: BevelBitmapEffect.UpdateUnmanagedPropertyState
