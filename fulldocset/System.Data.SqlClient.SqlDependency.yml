### YamlMime:ManagedReference
items:
- uid: System.Data.SqlClient.SqlDependency
  id: SqlDependency
  children:
  - System.Data.SqlClient.SqlDependency.#ctor
  - System.Data.SqlClient.SqlDependency.#ctor(System.Data.SqlClient.SqlCommand)
  - System.Data.SqlClient.SqlDependency.#ctor(System.Data.SqlClient.SqlCommand,System.String,System.Int32)
  - System.Data.SqlClient.SqlDependency.AddCommandDependency(System.Data.SqlClient.SqlCommand)
  - System.Data.SqlClient.SqlDependency.HasChanges
  - System.Data.SqlClient.SqlDependency.Id
  - System.Data.SqlClient.SqlDependency.OnChange
  - System.Data.SqlClient.SqlDependency.Start(System.String)
  - System.Data.SqlClient.SqlDependency.Start(System.String,System.String)
  - System.Data.SqlClient.SqlDependency.Stop(System.String)
  - System.Data.SqlClient.SqlDependency.Stop(System.String,System.String)
  langs:
  - csharp
  name: SqlDependency
  nameWithType: SqlDependency
  fullName: System.Data.SqlClient.SqlDependency
  type: Class
  summary: "SqlDependency 物件表示應用程式與 SQL Server 執行個體之間的查詢通知相依性。 應用程式可以建立 SqlDependency 物件和註冊可以收到通知，透過<xref href=&quot;System.Data.SqlClient.OnChangeEventHandler&quot;></xref>事件處理常式。"
  remarks: "SqlDependency 非常適用於快取的案例，亦即您的 ASP.NET 應用程式或中介層服務需要保留在記憶體中快取的特定資訊。 SqlDependency 可讓您在資料庫中的原始資料變更，因此可以重新整理快取時收到通知。       若要設定相依性時，您必須建立一或多個 SqlDependency 物件關聯<xref:System.Data.SqlClient.SqlCommand>物件。</xref:System.Data.SqlClient.SqlCommand> 若要接收通知，您必須訂閱<xref:System.Data.SqlClient.SqlDependency.OnChange>事件。</xref:System.Data.SqlClient.SqlDependency.OnChange> 如需有關建立查詢通知需求的詳細資訊，請參閱 「 建立查詢的通知 」 SQL Server 線上叢書 》 中。      > [!NOTE] > SqlDependency 已設計為使用 ASP.NET 或中介層服務中沒有相對小量的伺服器中針對資料庫使用中的相依性。 它的設計無法用於用戶端應用程式，數百或數千個用戶端電腦會有單一資料庫伺服器設定的 SqlDependency 物件。 如果您正在開發應用程式的資料變更時，需要可靠的次秒通知，請檢閱各節**規劃有效率的查詢通知策略**和**查詢通知的替代方案**中[通知計畫](http://go.microsoft.com/fwlink/?LinkId=211984)SQL Server 線上叢書 》 中的主題。       如需詳細資訊，請參閱[SQL Server 中的查詢通知](~/add/includes/ajax-current-ext-md.md)和 SQL Server 線上叢書 》 中的 「 建置通知方案 」。      > [!NOTE] ><xref:System.Data.SqlClient.SqlDependency.OnChange>起始命令執行的執行緒不同的執行緒上可能會產生事件。</xref:System.Data.SqlClient.SqlDependency.OnChange>       查詢通知僅支援符合特定需求清單的 SELECT 陳述式。 下表將提供 SQL Server 線上叢書 》 中 Service Broker 和查詢通知文件的連結。       **SQL Server 線上叢書**      -   [為通知建立查詢](http://msdn.microsoft.com/library/ms181122.aspx)      -   [Service Broker 的安全性考量](http://msdn.microsoft.com/library/ms166059.aspx)      -   [安全性與保護 (Service Broker)](http://msdn.microsoft.com/library/bb522911.aspx)      -   [通知服務的安全性考量](http://msdn.microsoft.com/library/ms172604.aspx)      -   [查詢通知權限](http://msdn.microsoft.com/library/ms188311.aspx)      -   [Service Broker 的國際性考量](http://msdn.microsoft.com/library/ms166028.aspx)      -   [解決方案設計考量 (Service Broker)](http://msdn.microsoft.com/library/bb522899.aspx)      -   [Service Broker 開發人員資訊中心](http://msdn.microsoft.com/library/ms166100.aspx)      -   [開發人員指南 (Service Broker)](http://msdn.microsoft.com/library/bb522908.aspx)"
  syntax:
    content: public sealed class SqlDependency
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDependency.#ctor
  id: '#ctor'
  parent: System.Data.SqlClient.SqlDependency
  langs:
  - csharp
  name: SqlDependency()
  nameWithType: SqlDependency.SqlDependency()
  fullName: System.Data.SqlClient.SqlDependency.SqlDependency()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "建立的新執行個體<xref href=&quot;System.Data.SqlClient.SqlDependency&quot;></xref>類別的預設設定。"
  remarks: "建構函式初始化<xref:System.Data.SqlClient.SqlDependency>物件使用預設 Service Broker 服務名稱和逾時。</xref:System.Data.SqlClient.SqlDependency> 在某些時候建構完成之後，您必須使用<xref:System.Data.SqlClient.SqlDependency.AddCommandDependency%2A>使一或多個命令，此方法<xref:System.Data.SqlClient.SqlDependency>物件。</xref:System.Data.SqlClient.SqlDependency> </xref:System.Data.SqlClient.SqlDependency.AddCommandDependency%2A>       查詢通知僅支援符合特定需求清單的 SELECT 陳述式。 下表將提供 SQL Server 線上叢書 》 中 Service Broker 和查詢通知文件的連結。       **SQL Server 線上叢書**      -   [為通知建立查詢](http://msdn.microsoft.com/library/ms181122.aspx)      -   [Service Broker 的安全性考量](http://msdn.microsoft.com/library/ms166059.aspx)      -   [安全性與保護 (Service Broker)](http://msdn.microsoft.com/library/bb522911.aspx)      -   [通知服務的安全性考量](http://msdn.microsoft.com/library/ms172604.aspx)      -   [查詢通知權限](http://msdn.microsoft.com/library/ms188311.aspx)      -   [Service Broker 的國際性考量](http://msdn.microsoft.com/library/ms166028.aspx)      -   [解決方案設計考量 (Service Broker)](http://msdn.microsoft.com/library/bb522899.aspx)      -   [Service Broker 開發人員資訊中心](http://msdn.microsoft.com/library/ms166100.aspx)      -   [開發人員指南 (Service Broker)](http://msdn.microsoft.com/library/bb522908.aspx)"
  syntax:
    content: public SqlDependency ();
    parameters: []
  overload: System.Data.SqlClient.SqlDependency.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDependency.#ctor(System.Data.SqlClient.SqlCommand)
  id: '#ctor(System.Data.SqlClient.SqlCommand)'
  parent: System.Data.SqlClient.SqlDependency
  langs:
  - csharp
  name: SqlDependency(SqlCommand)
  nameWithType: SqlDependency.SqlDependency(SqlCommand)
  fullName: System.Data.SqlClient.SqlDependency.SqlDependency(SqlCommand)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "建立的新執行個體<xref href=&quot;System.Data.SqlClient.SqlDependency&quot;></xref>類別，並將其與相關聯<xref href=&quot;System.Data.SqlClient.SqlCommand&quot;></xref>參數。"
  remarks: "就內部而言，這個建構函式建立的執行個體<xref:System.Data.Sql.SqlNotificationRequest>類別，並繫結至<xref:System.Data.SqlClient.SqlCommand>物件。</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.Sql.SqlNotificationRequest>       查詢通知僅支援符合特定需求清單的 SELECT 陳述式。 下表將提供 SQL Server 線上叢書 》 中 Service Broker 和查詢通知文件的連結。       **SQL Server 線上叢書**      -   [為通知建立查詢](http://msdn.microsoft.com/library/ms181122.aspx)      -   [Service Broker 的安全性考量](http://msdn.microsoft.com/library/ms166059.aspx)      -   [安全性與保護 (Service Broker)](http://msdn.microsoft.com/library/bb522911.aspx)      -   [通知服務的安全性考量](http://msdn.microsoft.com/library/ms172604.aspx)      -   [查詢通知權限](http://msdn.microsoft.com/library/ms188311.aspx)      -   [Service Broker 的國際性考量](http://msdn.microsoft.com/library/ms166028.aspx)      -   [解決方案設計考量 (Service Broker)](http://msdn.microsoft.com/library/bb522899.aspx)      -   [Service Broker 開發人員資訊中心](http://msdn.microsoft.com/library/ms166100.aspx)      -   [開發人員指南 (Service Broker)](http://msdn.microsoft.com/library/bb522908.aspx)"
  syntax:
    content: public SqlDependency (System.Data.SqlClient.SqlCommand command);
    parameters:
    - id: command
      type: System.Data.SqlClient.SqlCommand
      description: "<xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref>要產生關聯，與此物件<xref href=&quot;System.Data.SqlClient.SqlDependency&quot;></xref>物件。 建構函式會設定<xref href=&quot;System.Data.Sql.SqlNotificationRequest&quot;></xref>物件，並將它繫結至命令。"
  overload: System.Data.SqlClient.SqlDependency.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> command </code>參數為 NULL。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref>物件已經有<xref href=&quot;System.Data.Sql.SqlNotificationRequest&quot;></xref>物件指派給其<xref:System.Data.SqlClient.SqlCommand.Notification*>屬性，且<xref href=&quot;System.Data.Sql.SqlNotificationRequest&quot;></xref>未與此相依性相關聯。</xref:System.Data.SqlClient.SqlCommand.Notification*>"
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDependency.#ctor(System.Data.SqlClient.SqlCommand,System.String,System.Int32)
  id: '#ctor(System.Data.SqlClient.SqlCommand,System.String,System.Int32)'
  parent: System.Data.SqlClient.SqlDependency
  langs:
  - csharp
  name: SqlDependency(SqlCommand,String,Int32)
  nameWithType: SqlDependency.SqlDependency(SqlCommand,String,Int32)
  fullName: System.Data.SqlClient.SqlDependency.SqlDependency(SqlCommand,String,Int32)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "建立的新執行個體<xref href=&quot;System.Data.SqlClient.SqlDependency&quot;></xref>類別中，將其與相關聯<xref href=&quot;System.Data.SqlClient.SqlCommand&quot;></xref>參數，並指定通知選項和逾時值。"
  remarks: "查詢通知僅支援符合特定需求清單的 SELECT 陳述式。 下表將提供 SQL Server 線上叢書 》 中 Service Broker 和查詢通知文件的連結。       **SQL Server 線上叢書**      -   [為通知建立查詢](http://msdn.microsoft.com/library/ms181122.aspx)      -   [Service Broker 的安全性考量](http://msdn.microsoft.com/library/ms166059.aspx)      -   [安全性與保護 (Service Broker)](http://msdn.microsoft.com/library/bb522911.aspx)      -   [通知服務的安全性考量](http://msdn.microsoft.com/library/ms172604.aspx)      -   [查詢通知權限](http://msdn.microsoft.com/library/ms188311.aspx)      -   [Service Broker 的國際性考量](http://msdn.microsoft.com/library/ms166028.aspx)      -   [解決方案設計考量 (Service Broker)](http://msdn.microsoft.com/library/bb522899.aspx)      -   [Service Broker 開發人員資訊中心](http://msdn.microsoft.com/library/ms166100.aspx)      -   [開發人員指南 (Service Broker)](http://msdn.microsoft.com/library/bb522908.aspx)"
  syntax:
    content: public SqlDependency (System.Data.SqlClient.SqlCommand command, string options, int timeout);
    parameters:
    - id: command
      type: System.Data.SqlClient.SqlCommand
      description: "<xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref>要產生關聯，與此物件<xref href=&quot;System.Data.SqlClient.SqlDependency&quot;></xref>物件。 建構函式會設定<xref href=&quot;System.Data.Sql.SqlNotificationRequest&quot;></xref>物件，並將它繫結至命令。"
    - id: options
      type: System.String
      description: "通知要求可供此相依性選項。  `null`若要使用預設的服務。"
    - id: timeout
      type: System.Int32
      description: "此通知，以秒為單位的逾時。 預設值為 0，表示應該使用伺服器的逾時。"
  overload: System.Data.SqlClient.SqlDependency.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> command </code>參數為 NULL。"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "逾時值小於零。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref>物件已經有<xref href=&quot;System.Data.Sql.SqlNotificationRequest&quot;></xref>物件指派給其<> *> 屬性且<xref href=&quot;System.Data.Sql.SqlNotificationRequest&quot;></xref>未與此相依性關聯。     嘗試建立* *SqlDependency** SQLCLR 執行個體。"
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDependency.AddCommandDependency(System.Data.SqlClient.SqlCommand)
  id: AddCommandDependency(System.Data.SqlClient.SqlCommand)
  parent: System.Data.SqlClient.SqlDependency
  langs:
  - csharp
  name: AddCommandDependency(SqlCommand)
  nameWithType: SqlDependency.AddCommandDependency(SqlCommand)
  fullName: System.Data.SqlClient.SqlDependency.AddCommandDependency(SqlCommand)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "將<xref href=&quot;System.Data.SqlClient.SqlCommand&quot;></xref>物件與這個<xref href=&quot;System.Data.SqlClient.SqlDependency&quot;></xref>執行個體。"
  remarks: "查詢通知僅支援符合特定需求清單的 SELECT 陳述式。 下表將提供 SQL Server 線上叢書 》 中 Service Broker 和查詢通知文件的連結。       **SQL Server 線上叢書**      -   [為通知建立查詢](http://msdn.microsoft.com/library/ms181122.aspx)      -   [Service Broker 的安全性考量](http://msdn.microsoft.com/library/ms166059.aspx)      -   [安全性與保護 (Service Broker)](http://msdn.microsoft.com/library/bb522911.aspx)      -   [通知服務的安全性考量](http://msdn.microsoft.com/library/ms172604.aspx)      -   [查詢通知權限](http://msdn.microsoft.com/library/ms188311.aspx)      -   [Service Broker 的國際性考量](http://msdn.microsoft.com/library/ms166028.aspx)      -   [解決方案設計考量 (Service Broker)](http://msdn.microsoft.com/library/bb522899.aspx)      -   [Service Broker 開發人員資訊中心](http://msdn.microsoft.com/library/ms166100.aspx)      -   [開發人員指南 (Service Broker)](http://msdn.microsoft.com/library/bb522908.aspx)"
  syntax:
    content: public void AddCommandDependency (System.Data.SqlClient.SqlCommand command);
    parameters:
    - id: command
      type: System.Data.SqlClient.SqlCommand
      description: "A <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref>物件，其中包含適用於通知的陳述式。"
  overload: System.Data.SqlClient.SqlDependency.AddCommandDependency*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> command </code>參數為 null。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref>物件已經有<xref href=&quot;System.Data.Sql.SqlNotificationRequest&quot;></xref>物件指派給其<xref:System.Data.SqlClient.SqlCommand.Notification*>屬性，且<xref href=&quot;System.Data.Sql.SqlNotificationRequest&quot;></xref>未與此相依性相關聯。</xref:System.Data.SqlClient.SqlCommand.Notification*>"
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDependency.HasChanges
  id: HasChanges
  parent: System.Data.SqlClient.SqlDependency
  langs:
  - csharp
  name: HasChanges
  nameWithType: SqlDependency.HasChanges
  fullName: System.Data.SqlClient.SqlDependency.HasChanges
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "取得值，指出是否已經變更其中一個結果集相關聯的相依性。"
  remarks: "如果您不使用<xref:System.Data.SqlClient.SqlDependency.OnChange>事件，您可以檢查 HasChanges 屬性，以判斷查詢結果是否已經變更。</xref:System.Data.SqlClient.SqlDependency.OnChange>       HasChanges 屬性不一定表示會在資料中的變更。 其他情況下，例如逾時過期，而且無法設定通知要求，也會產生變更事件。"
  syntax:
    content: public bool HasChanges { get; }
    return:
      type: System.Boolean
      description: "布林值，指出是否結果的其中一個設定已變更。"
  overload: System.Data.SqlClient.SqlDependency.HasChanges*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDependency.Id
  id: Id
  parent: System.Data.SqlClient.SqlDependency
  langs:
  - csharp
  name: Id
  nameWithType: SqlDependency.Id
  fullName: System.Data.SqlClient.SqlDependency.Id
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "取得值，這個值可唯一識別此執行個體<xref href=&quot;System.Data.SqlClient.SqlDependency&quot;></xref>類別。"
  remarks: "Id 屬性用來唯一識別指定<xref:System.Data.SqlClient.SqlDependency>執行個體。</xref:System.Data.SqlClient.SqlDependency>"
  syntax:
    content: public string Id { get; }
    return:
      type: System.String
      description: "針對每個執行個體所產生的 GUID 的字串表示法<xref href=&quot;System.Data.SqlClient.SqlDependency&quot;></xref>類別。"
  overload: System.Data.SqlClient.SqlDependency.Id*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDependency.OnChange
  id: OnChange
  parent: System.Data.SqlClient.SqlDependency
  langs:
  - csharp
  name: OnChange
  nameWithType: SqlDependency.OnChange
  fullName: System.Data.SqlClient.SqlDependency.OnChange
  type: Event
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "通知收到任何與此相關聯的命令時，就會發生<xref href=&quot;System.Data.SqlClient.SqlDependency&quot;></xref>物件。"
  remarks: "當相關聯的命令的結果變更時，就會發生 OnChange。 如果您未使用 OnChange，您可以檢查<xref:System.Data.SqlClient.SqlDependency.HasChanges%2A>屬性來判斷是否已變更的查詢結果。</xref:System.Data.SqlClient.SqlDependency.HasChanges%2A>       OnChange 事件不一定表示會在資料中的變更。 其他情況下，例如逾時過期，而且無法設定通知要求，也會產生 OnChange。"
  syntax:
    content: public event System.Data.SqlClient.OnChangeEventHandler OnChange;
    return:
      type: System.Data.SqlClient.OnChangeEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDependency.Start(System.String)
  id: Start(System.String)
  parent: System.Data.SqlClient.SqlDependency
  langs:
  - csharp
  name: Start(String)
  nameWithType: SqlDependency.Start(String)
  fullName: System.Data.SqlClient.SqlDependency.Start(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "啟動接聽程式，用於接收從連接字串所指定的 SQL Server 執行個體的相依性變更通知。"
  remarks: "此方法會啟動的接聽程式<xref:System.AppDomain>接收執行個體的相依性通知[!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]所指定`connectionString`參數。</xref:System.AppDomain> 呼叫這個方法可能會一次以上不同的連接字串具有多部伺服器。       如需其他備註，請參閱<xref:System.Data.SqlClient.SqlDependency.Start%2A>.</xref:System.Data.SqlClient.SqlDependency.Start%2A>"
  syntax:
    content: public static bool Start (string connectionString);
    parameters:
    - id: connectionString
      type: System.String
      description: "執行個體的連接字串[!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]可取得變更的通知。"
    return:
      type: System.Boolean
      description: '**true**如果接聽程式初始化成功。**false**如果相容的接聽程式已存在。'
  overload: System.Data.SqlClient.SqlDependency.Start*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> connectionString </code>參數為 NULL。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code> connectionString </code>參數等同於先前呼叫這個方法，但不同參數。       從 CLR 內呼叫此方法。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "呼叫端沒有必要<xref href=&quot;System.Data.SqlClient.SqlClientPermission&quot;></xref>程式碼存取安全性 (CAS) 權限。"
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "方法的後續呼叫已具有對等項目<code> connectionString </code>具有不同的使用者或使用者，不會和相同的結構描述預設參數。       此外，任何基礎**SqlClient**例外狀況。"
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDependency.Start(System.String,System.String)
  id: Start(System.String,System.String)
  parent: System.Data.SqlClient.SqlDependency
  langs:
  - csharp
  name: Start(String,String)
  nameWithType: SqlDependency.Start(String,String)
  fullName: System.Data.SqlClient.SqlDependency.Start(String,String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "啟動接聽程式，使用指定的 SQL Server Service Broker 佇列的連接字串所指定的 SQL Server 執行個體從接收相依性變更通知。"
  remarks: "此方法會啟動的接聽程式<xref:System.AppDomain>接收從所指定的 SQL Server 執行個體的相依性通知`connectionString`參數。</xref:System.AppDomain> 呼叫這個方法可能會一次以上不同的連接字串具有多部伺服器。       如果未不指定任何佇列名稱，則<xref:System.Data.SqlClient.SqlDependency>會建立暫存佇列和服務中使用之伺服器的整個程序中，即使程序包含一個以上的<xref:System.AppDomain>.</xref:System.AppDomain> </xref:System.Data.SqlClient.SqlDependency> 佇列和服務會自動在應用程式關閉時移除。       如需其他備註，請參閱<xref:System.Data.SqlClient.SqlDependency.Start%2A>.</xref:System.Data.SqlClient.SqlDependency.Start%2A>"
  syntax:
    content: public static bool Start (string connectionString, string queue);
    parameters:
    - id: connectionString
      type: System.String
      description: "要從其中取得 SQL Server 的執行個體的連接字串變更通知。"
    - id: queue
      type: System.String
      description: "若要使用現有的 SQL Server Service Broker 佇列。 如果<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>，會使用預設佇列。"
    return:
      type: System.Boolean
      description: '**true**如果接聽程式初始化成功。**false**如果相容的接聽程式已存在。'
  overload: System.Data.SqlClient.SqlDependency.Start*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> connectionString </code>參數為 NULL。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code> connectionString </code>參數等同於先前呼叫這個方法，但不同參數。       從 CLR 內呼叫此方法。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "呼叫端沒有必要<xref href=&quot;System.Data.SqlClient.SqlClientPermission&quot;></xref>程式碼存取安全性 (CAS) 權限。"
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "方法的後續呼叫已具有對等項目<code> connectionString </code>參數，但不同的使用者或不會預設為相同的結構描述的使用者。       此外，任何基礎**SqlClient**例外狀況。"
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDependency.Stop(System.String)
  id: Stop(System.String)
  parent: System.Data.SqlClient.SqlDependency
  langs:
  - csharp
  name: Stop(String)
  nameWithType: SqlDependency.Stop(String)
  fullName: System.Data.SqlClient.SqlDependency.Stop(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "停止連線中先前指定的接聽程式<xref:System.Data.SqlClient.SqlDependency.Start*>呼叫。</xref:System.Data.SqlClient.SqlDependency.Start*>"
  remarks: "<xref:System.Data.SqlClient.SqlDependency.Stop%2A>方法必須針對每個呼叫<xref:System.Data.SqlClient.SqlDependency.Start%2A>呼叫。</xref:System.Data.SqlClient.SqlDependency.Start%2A> </xref:System.Data.SqlClient.SqlDependency.Stop%2A> 指定的接聽程式只關閉完全當它收到相同數目的<xref:System.Data.SqlClient.SqlDependency.Stop%2A>形式要求<xref:System.Data.SqlClient.SqlDependency.Start%2A>要求。</xref:System.Data.SqlClient.SqlDependency.Start%2A> </xref:System.Data.SqlClient.SqlDependency.Stop%2A>"
  syntax:
    content: public static bool Stop (string connectionString);
    parameters:
    - id: connectionString
      type: System.String
      description: "已用於先前的 SQL Server 執行個體的連接字串<xref:System.Data.SqlClient.SqlDependency.Start*>呼叫。</xref:System.Data.SqlClient.SqlDependency.Start*>"
    return:
      type: System.Boolean
      description: '**true**如果接聽程式已完全停止。**false**如果<xref href=&quot;System.AppDomain&quot;></xref>已解除繫結與接聽程式，但有是至少一個其他<xref href=&quot;System.AppDomain&quot;></xref>使用相同的接聽程式。'
  overload: System.Data.SqlClient.SqlDependency.Stop*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> connectionString </code>參數為 NULL。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "從 SQLCLR 內呼叫此方法。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "呼叫端沒有必要<xref href=&quot;System.Data.SqlClient.SqlClientPermission&quot;></xref>程式碼存取安全性 (CAS) 權限。"
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "基礎**SqlClient**發生例外狀況。"
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDependency.Stop(System.String,System.String)
  id: Stop(System.String,System.String)
  parent: System.Data.SqlClient.SqlDependency
  langs:
  - csharp
  name: Stop(String,String)
  nameWithType: SqlDependency.Stop(String,String)
  fullName: System.Data.SqlClient.SqlDependency.Stop(String,String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "停止連線中先前指定的接聽程式<xref:System.Data.SqlClient.SqlDependency.Start*>呼叫。</xref:System.Data.SqlClient.SqlDependency.Start*>"
  remarks: "<xref:System.Data.SqlClient.SqlDependency.Stop%2A>方法必須針對每個呼叫<xref:System.Data.SqlClient.SqlDependency.Start%2A>呼叫。</xref:System.Data.SqlClient.SqlDependency.Start%2A> </xref:System.Data.SqlClient.SqlDependency.Stop%2A> 指定的接聽程式只關閉完全當它收到相同數目的<xref:System.Data.SqlClient.SqlDependency.Stop%2A>形式要求<xref:System.Data.SqlClient.SqlDependency.Start%2A>要求。</xref:System.Data.SqlClient.SqlDependency.Start%2A> </xref:System.Data.SqlClient.SqlDependency.Stop%2A>"
  syntax:
    content: public static bool Stop (string connectionString, string queue);
    parameters:
    - id: connectionString
      type: System.String
      description: "已用於先前的 SQL Server 執行個體的連接字串<xref:System.Data.SqlClient.SqlDependency.Start*>呼叫。</xref:System.Data.SqlClient.SqlDependency.Start*>"
    - id: queue
      type: System.String
      description: "已用於先前的 SQL Server Service Broker 佇列<xref:System.Data.SqlClient.SqlDependency.Start*>呼叫。</xref:System.Data.SqlClient.SqlDependency.Start*>"
    return:
      type: System.Boolean
      description: '**true**如果接聽程式已完全停止。**false**如果<xref href=&quot;System.AppDomain&quot;></xref>未繫結與接聽程式，但沒有至少一個其他<xref href=&quot;System.AppDomain&quot;></xref>使用相同的接聽程式。'
  overload: System.Data.SqlClient.SqlDependency.Stop*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> connectionString </code>參數為 NULL。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "從 SQLCLR 內呼叫此方法。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "呼叫端沒有必要<xref href=&quot;System.Data.SqlClient.SqlClientPermission&quot;></xref>程式碼存取安全性 (CAS) 權限。"
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "和基礎**SqlClient**發生例外狀況。"
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.Data.SqlClient.SqlException
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlException
  nameWithType: SqlException
  fullName: System.Data.SqlClient.SqlException
- uid: System.Data.SqlClient.SqlDependency.#ctor
  parent: System.Data.SqlClient.SqlDependency
  isExternal: false
  name: SqlDependency()
  nameWithType: SqlDependency.SqlDependency()
  fullName: System.Data.SqlClient.SqlDependency.SqlDependency()
- uid: System.Data.SqlClient.SqlDependency.#ctor(System.Data.SqlClient.SqlCommand)
  parent: System.Data.SqlClient.SqlDependency
  isExternal: false
  name: SqlDependency(SqlCommand)
  nameWithType: SqlDependency.SqlDependency(SqlCommand)
  fullName: System.Data.SqlClient.SqlDependency.SqlDependency(SqlCommand)
- uid: System.Data.SqlClient.SqlCommand
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlCommand
  nameWithType: SqlCommand
  fullName: System.Data.SqlClient.SqlCommand
- uid: System.Data.SqlClient.SqlDependency.#ctor(System.Data.SqlClient.SqlCommand,System.String,System.Int32)
  parent: System.Data.SqlClient.SqlDependency
  isExternal: false
  name: SqlDependency(SqlCommand,String,Int32)
  nameWithType: SqlDependency.SqlDependency(SqlCommand,String,Int32)
  fullName: System.Data.SqlClient.SqlDependency.SqlDependency(SqlCommand,String,Int32)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.SqlClient.SqlDependency.AddCommandDependency(System.Data.SqlClient.SqlCommand)
  parent: System.Data.SqlClient.SqlDependency
  isExternal: false
  name: AddCommandDependency(SqlCommand)
  nameWithType: SqlDependency.AddCommandDependency(SqlCommand)
  fullName: System.Data.SqlClient.SqlDependency.AddCommandDependency(SqlCommand)
- uid: System.Data.SqlClient.SqlDependency.HasChanges
  parent: System.Data.SqlClient.SqlDependency
  isExternal: false
  name: HasChanges
  nameWithType: SqlDependency.HasChanges
  fullName: System.Data.SqlClient.SqlDependency.HasChanges
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.SqlClient.SqlDependency.Id
  parent: System.Data.SqlClient.SqlDependency
  isExternal: false
  name: Id
  nameWithType: SqlDependency.Id
  fullName: System.Data.SqlClient.SqlDependency.Id
- uid: System.Data.SqlClient.SqlDependency.OnChange
  parent: System.Data.SqlClient.SqlDependency
  isExternal: false
  name: OnChange
  nameWithType: SqlDependency.OnChange
  fullName: System.Data.SqlClient.SqlDependency.OnChange
- uid: System.Data.SqlClient.OnChangeEventHandler
  parent: System.Data.SqlClient
  isExternal: false
  name: OnChangeEventHandler
  nameWithType: OnChangeEventHandler
  fullName: System.Data.SqlClient.OnChangeEventHandler
- uid: System.Data.SqlClient.SqlDependency.Start(System.String)
  parent: System.Data.SqlClient.SqlDependency
  isExternal: false
  name: Start(String)
  nameWithType: SqlDependency.Start(String)
  fullName: System.Data.SqlClient.SqlDependency.Start(String)
- uid: System.Data.SqlClient.SqlDependency.Start(System.String,System.String)
  parent: System.Data.SqlClient.SqlDependency
  isExternal: false
  name: Start(String,String)
  nameWithType: SqlDependency.Start(String,String)
  fullName: System.Data.SqlClient.SqlDependency.Start(String,String)
- uid: System.Data.SqlClient.SqlDependency.Stop(System.String)
  parent: System.Data.SqlClient.SqlDependency
  isExternal: false
  name: Stop(String)
  nameWithType: SqlDependency.Stop(String)
  fullName: System.Data.SqlClient.SqlDependency.Stop(String)
- uid: System.Data.SqlClient.SqlDependency.Stop(System.String,System.String)
  parent: System.Data.SqlClient.SqlDependency
  isExternal: false
  name: Stop(String,String)
  nameWithType: SqlDependency.Stop(String,String)
  fullName: System.Data.SqlClient.SqlDependency.Stop(String,String)
- uid: System.Data.SqlClient.SqlDependency.#ctor*
  parent: System.Data.SqlClient.SqlDependency
  isExternal: false
  name: SqlDependency
  nameWithType: SqlDependency.SqlDependency
- uid: System.Data.SqlClient.SqlDependency.AddCommandDependency*
  parent: System.Data.SqlClient.SqlDependency
  isExternal: false
  name: AddCommandDependency
  nameWithType: SqlDependency.AddCommandDependency
- uid: System.Data.SqlClient.SqlDependency.HasChanges*
  parent: System.Data.SqlClient.SqlDependency
  isExternal: false
  name: HasChanges
  nameWithType: SqlDependency.HasChanges
- uid: System.Data.SqlClient.SqlDependency.Id*
  parent: System.Data.SqlClient.SqlDependency
  isExternal: false
  name: Id
  nameWithType: SqlDependency.Id
- uid: System.Data.SqlClient.SqlDependency.Start*
  parent: System.Data.SqlClient.SqlDependency
  isExternal: false
  name: Start
  nameWithType: SqlDependency.Start
- uid: System.Data.SqlClient.SqlDependency.Stop*
  parent: System.Data.SqlClient.SqlDependency
  isExternal: false
  name: Stop
  nameWithType: SqlDependency.Stop
