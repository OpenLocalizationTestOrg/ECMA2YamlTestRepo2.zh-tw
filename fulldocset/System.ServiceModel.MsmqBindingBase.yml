### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.MsmqBindingBase
  id: MsmqBindingBase
  children:
  - System.ServiceModel.MsmqBindingBase.#ctor
  - System.ServiceModel.MsmqBindingBase.CustomDeadLetterQueue
  - System.ServiceModel.MsmqBindingBase.DeadLetterQueue
  - System.ServiceModel.MsmqBindingBase.Durable
  - System.ServiceModel.MsmqBindingBase.ExactlyOnce
  - System.ServiceModel.MsmqBindingBase.MaxReceivedMessageSize
  - System.ServiceModel.MsmqBindingBase.MaxRetryCycles
  - System.ServiceModel.MsmqBindingBase.ReceiveContextEnabled
  - System.ServiceModel.MsmqBindingBase.ReceiveErrorHandling
  - System.ServiceModel.MsmqBindingBase.ReceiveRetryCount
  - System.ServiceModel.MsmqBindingBase.RetryCycleDelay
  - System.ServiceModel.MsmqBindingBase.Scheme
  - System.ServiceModel.MsmqBindingBase.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously
  - System.ServiceModel.MsmqBindingBase.TimeToLive
  - System.ServiceModel.MsmqBindingBase.UseMsmqTracing
  - System.ServiceModel.MsmqBindingBase.UseSourceJournal
  - System.ServiceModel.MsmqBindingBase.ValidityDuration
  langs:
  - csharp
  name: MsmqBindingBase
  nameWithType: MsmqBindingBase
  fullName: System.ServiceModel.MsmqBindingBase
  type: Class
  summary: "基底類別<xref href=&quot;System.ServiceModel.NetMsmqBinding&quot;></xref>和<xref href=&quot;System.ServiceModel.MsmqIntegration.MsmqIntegrationBinding&quot;> </xref>。"
  remarks: "此抽象類別包含通用<xref:System.ServiceModel.NetMsmqBinding>和<xref:System.ServiceModel.MsmqIntegration.MsmqIntegrationBinding>。</xref:System.ServiceModel.MsmqIntegration.MsmqIntegrationBinding></xref:System.ServiceModel.NetMsmqBinding>屬性 會顯示所有的基礎概念，以屬性形式。"
  syntax:
    content: 'public abstract class MsmqBindingBase : System.ServiceModel.Channels.Binding, System.ServiceModel.Channels.IBindingRuntimePreferences'
  inheritance:
  - System.ServiceModel.Channels.Binding
  implements:
  - System.ServiceModel.Channels.IBindingRuntimePreferences
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.MsmqBindingBase.#ctor
  id: '#ctor'
  parent: System.ServiceModel.MsmqBindingBase
  langs:
  - csharp
  name: MsmqBindingBase()
  nameWithType: MsmqBindingBase.MsmqBindingBase()
  fullName: System.ServiceModel.MsmqBindingBase.MsmqBindingBase()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "初始化的新執行個體<xref href=&quot;System.ServiceModel.MsmqBindingBase&quot;></xref>類別。"
  syntax:
    content: protected MsmqBindingBase ();
    parameters: []
  overload: System.ServiceModel.MsmqBindingBase.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.MsmqBindingBase.CustomDeadLetterQueue
  id: CustomDeadLetterQueue
  parent: System.ServiceModel.MsmqBindingBase
  langs:
  - csharp
  name: CustomDeadLetterQueue
  nameWithType: MsmqBindingBase.CustomDeadLetterQueue
  fullName: System.ServiceModel.MsmqBindingBase.CustomDeadLetterQueue
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "取得或設定 URI，包含每個應用程式，寄不出信件佇列的位置放置已過期、 無法傳輸或傳遞的訊息。"
  remarks: "寄不出信件佇列是傳送應用程式無法傳遞的過期訊息佇列管理員上的佇列。       CustomDeadLetterQueue 所指定的 URI 必須使用 net.msmq 配置。       如果<xref:System.ServiceModel.MsmqBindingBase.DeadLetterQueue%2A>設<xref:System.ServiceModel.DeadLetterQueue>或<xref:System.ServiceModel.DeadLetterQueue>，則必須設定 CustomDeadLetterQueue `null`。</xref:System.ServiceModel.DeadLetterQueue> </xref:System.ServiceModel.DeadLetterQueue> </xref:System.ServiceModel.MsmqBindingBase.DeadLetterQueue%2A> 如果 CustomDeadLetterQueue 不`null`，然後<xref:System.ServiceModel.MsmqBindingBase.DeadLetterQueue%2A>必須設為<xref:System.ServiceModel.DeadLetterQueue>.</xref:System.ServiceModel.DeadLetterQueue> </xref:System.ServiceModel.MsmqBindingBase.DeadLetterQueue%2A>"
  syntax:
    content: public Uri CustomDeadLetterQueue { get; set; }
    return:
      type: System.Uri
      description: "<xref:System.Uri>其中包含每個應用程式寄不出信件佇列的位置。</xref:System.Uri> 預設值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.ServiceModel.MsmqBindingBase.CustomDeadLetterQueue*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.MsmqBindingBase.DeadLetterQueue
  id: DeadLetterQueue
  parent: System.ServiceModel.MsmqBindingBase
  langs:
  - csharp
  name: DeadLetterQueue
  nameWithType: MsmqBindingBase.DeadLetterQueue
  fullName: System.ServiceModel.MsmqBindingBase.DeadLetterQueue
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "取得或設定列舉值，指出要使用的寄不出信件佇列類型。"
  remarks: "寄不出信件佇列是傳送應用程式無法傳遞的過期訊息佇列管理員上的佇列。 寄不出的信件佇列列舉型別指定要使用的寄不出信件佇列類型。 有效值:- `None`︰ 沒有寄不出信件佇列是必要。 如果訊息無法傳遞，會不維護它的任何記錄，寄不出信件佇列中。 這是預設值時<xref:System.ServiceModel.MsmqBindingBase.ExactlyOnce%2A>設`false`。</xref:System.ServiceModel.MsmqBindingBase.ExactlyOnce%2A>      - `System`︰ 整個系統寄不出信件佇列用來記錄無法傳遞的訊息。 訊息佇列 (MSMQ) 具有交易式、 系統、 寄不出的信件佇列與非交易式寄不出信件佇列來記錄系統失敗傳遞的過期訊息從交易式和非交易式佇列，分別。 這是預設值時<xref:System.ServiceModel.MsmqBindingBase.ExactlyOnce%2A>設`true`。</xref:System.ServiceModel.MsmqBindingBase.ExactlyOnce%2A>      - `Custom`︰ 中指定的佇列<xref:System.ServiceModel.MsmqBindingBase.CustomDeadLetterQueue%2A>用來記錄無法傳遞訊息的屬性。</xref:System.ServiceModel.MsmqBindingBase.CustomDeadLetterQueue%2A>       訊息無法抵達接收應用程式的原因包括:-異動式訊息傳送至非交易式佇列。      -非交易式訊息傳送至異動式佇列。      -未經驗證的訊息會傳送至只接受已驗證的訊息的佇列。      -未經加密的訊息會傳送至僅接受加密的訊息的佇列。      -訊息過期前的訊息傳送到接收器。      的已超出目標電腦訊息儲存配額或是目的端佇列的儲存空間配額，或沒有可用的存放裝置空間目標電腦上的訊息時。      -寄件者沒有[存取權限](http://go.microsoft.com/fwlink/?LinkID=96167)才能將訊息放在目的端佇列。      的附加至訊息數位簽章無效。      -加密的訊息無法由目的佇列管理員解密。      -目的地佇列是清除或擷取訊息之前被刪除。"
  syntax:
    content: public System.ServiceModel.DeadLetterQueue DeadLetterQueue { get; set; }
    return:
      type: System.ServiceModel.DeadLetterQueue
      description: "A <xref href=&quot;System.ServiceModel.DeadLetterQueue&quot;> </xref>列舉值，指出要使用的寄不出信件佇列類型。"
  overload: System.ServiceModel.MsmqBindingBase.DeadLetterQueue*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.MsmqBindingBase.Durable
  id: Durable
  parent: System.ServiceModel.MsmqBindingBase
  langs:
  - csharp
  name: Durable
  nameWithType: MsmqBindingBase.Durable
  fullName: System.ServiceModel.MsmqBindingBase.Durable
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "取得或設定值，這個值會指出由此繫結處理的訊息是否具有永久性或變動性。"
  remarks: "永久性的訊息未佇列管理員停止回應時，但不會變動性訊息。 如果應用程式可以容許訊息偶爾遺失，變動性訊息就很有用。       如果<xref:System.ServiceModel.MsmqBindingBase.ExactlyOnce%2A>設`true`，訊息必須是永久性。</xref:System.ServiceModel.MsmqBindingBase.ExactlyOnce%2A>"
  syntax:
    content: public bool Durable { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果這個繫結所處理的訊息是永久性;<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>如果為變動性。 預設值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.ServiceModel.MsmqBindingBase.Durable*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.MsmqBindingBase.ExactlyOnce
  id: ExactlyOnce
  parent: System.ServiceModel.MsmqBindingBase
  langs:
  - csharp
  name: ExactlyOnce
  nameWithType: MsmqBindingBase.ExactlyOnce
  fullName: System.ServiceModel.MsmqBindingBase.ExactlyOnce
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "取得或設定值，指出是否處理此繫結的訊息會接收一次。"
  remarks: "訊息可以傳送，或無保證的。 保證會讓應用程式確保傳送的訊息到達接收訊息佇列，或如果不是，應用程式可以決定這由讀取寄不出信件佇列。       使用 ExactlyOnce 傳送的訊息設定為`true`必須傳送至異動式佇列。       ExactlyOnce，當設定為`true`，表示訊息佇列 (MSMQ) 確保傳送的訊息會傳遞至接收的訊息佇列僅一次。 如果傳遞失敗，訊息會傳送到寄不出信件佇列。       對於需要 ExactlyOnce 是訊息`false`、<xref:System.ServiceModel.MsmqBindingBase.DeadLetterQueue%2A>屬性預設為`null`。</xref:System.ServiceModel.MsmqBindingBase.DeadLetterQueue%2A>       對於需要 ExactlyOnce 是訊息`true`、<xref:System.ServiceModel.MsmqBindingBase.DeadLetterQueue%2A>屬性預設為 MSMQ 中的交易式整個系統的寄不出信件佇列。</xref:System.ServiceModel.MsmqBindingBase.DeadLetterQueue%2A>"
  syntax:
    content: public bool ExactlyOnce { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果此繫結處理的訊息只接收一次。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.ServiceModel.MsmqBindingBase.ExactlyOnce*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.MsmqBindingBase.MaxReceivedMessageSize
  id: MaxReceivedMessageSize
  parent: System.ServiceModel.MsmqBindingBase
  langs:
  - csharp
  name: MaxReceivedMessageSize
  nameWithType: MsmqBindingBase.MaxReceivedMessageSize
  fullName: System.ServiceModel.MsmqBindingBase.MaxReceivedMessageSize
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "取得或設定大小上限，以位元組為單位，此繫結所處理的訊息。"
  remarks: "這項關於訊息大小被為了限制暴露於阻絕服務 (DoS) 攻擊。"
  syntax:
    content: public long MaxReceivedMessageSize { get; set; }
    return:
      type: System.Int64
      description: "大小上限 （以位元組為單位） 的這個繫結所處理的訊息。 預設值為 65,536 位元組。"
  overload: System.ServiceModel.MsmqBindingBase.MaxReceivedMessageSize*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.MsmqBindingBase.MaxRetryCycles
  id: MaxRetryCycles
  parent: System.ServiceModel.MsmqBindingBase
  langs:
  - csharp
  name: MaxRetryCycles
  nameWithType: MsmqBindingBase.MaxRetryCycles
  fullName: System.ServiceModel.MsmqBindingBase.MaxRetryCycles
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "取得或設定嘗試傳遞訊息至接收應用程式的重試循環數目上限。"
  remarks: "單一重試循環會嘗試將訊息傳送至應用程式指定的次數。 設定做的嘗試次數<xref:System.ServiceModel.MsmqBindingBase.ReceiveRetryCount%2A>屬性。</xref:System.ServiceModel.MsmqBindingBase.ReceiveRetryCount%2A> 如果應用程式無法存取訊息立即重試達指定次數後，訊息會傳送到重試佇列。 後續的重試循環會包含從重試佇列傳回應用程式佇列的訊息，嘗試傳遞至應用程式同樣地，在指定的延遲之後<xref:System.ServiceModel.MsmqBindingBase.RetryCycleDelay%2A>屬性。</xref:System.ServiceModel.MsmqBindingBase.RetryCycleDelay%2A> MaxRetryCycles 屬性指定應用程式用來嘗試傳遞訊息的重試循環的數目。"
  syntax:
    content: public int MaxRetryCycles { get; set; }
    return:
      type: System.Int32
      description: "嘗試傳遞訊息至應用程式的重試循環數目上限。 預設值為 2。"
  overload: System.ServiceModel.MsmqBindingBase.MaxRetryCycles*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.MsmqBindingBase.ReceiveContextEnabled
  id: ReceiveContextEnabled
  parent: System.ServiceModel.MsmqBindingBase
  langs:
  - csharp
  name: ReceiveContextEnabled
  nameWithType: MsmqBindingBase.ReceiveContextEnabled
  fullName: System.ServiceModel.MsmqBindingBase.ReceiveContextEnabled
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "取得或設定值，指出是否已要求接收內容行為。"
  syntax:
    content: public bool ReceiveContextEnabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果要求接收內容行為。，否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ServiceModel.MsmqBindingBase.ReceiveContextEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.MsmqBindingBase.ReceiveErrorHandling
  id: ReceiveErrorHandling
  parent: System.ServiceModel.MsmqBindingBase
  langs:
  - csharp
  name: ReceiveErrorHandling
  nameWithType: MsmqBindingBase.ReceiveErrorHandling
  fullName: System.ServiceModel.MsmqBindingBase.ReceiveErrorHandling
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "取得或設定列舉值，指定如何有害訊息處理。"
  remarks: "如果嘗試重複傳送訊息失敗，就會被破壞的訊息佇列中。 此屬性設定為基礎，最後處理這種有害訊息。 當這個屬性設定為<xref:System.ServiceModel.ReceiveErrorHandling>，接聽程式會發生錯誤而<xref:System.ServiceModel.MsmqPoisonMessageException>會追蹤和擲回。</xref:System.ServiceModel.MsmqPoisonMessageException> </xref:System.ServiceModel.ReceiveErrorHandling> 有害訊息留在佇列，您必須在才能存取更多訊息從佇列移除。 <xref:System.ServiceModel.MsmqPoisonMessageException>包含<xref:System.ServiceModel.MsmqPoisonMessageException.MessageLookupId%2A>，可用來識別並手動移除有害訊息從佇列。</xref:System.ServiceModel.MsmqPoisonMessageException.MessageLookupId%2A> </xref:System.ServiceModel.MsmqPoisonMessageException>       當這個屬性設定為<xref:System.ServiceModel.ReceiveErrorHandling>，就會捨棄有害訊息。</xref:System.ServiceModel.ReceiveErrorHandling>       當這個屬性設定為<xref:System.ServiceModel.ReceiveErrorHandling>、 負認可會傳送至用戶端，以及從佇列移除有害訊息。</xref:System.ServiceModel.ReceiveErrorHandling> 此選項只能在 Message Queuing 4.0 上使用，且需要[!INCLUDE[wv](~/add/includes/wv-md.md)]。       當設定為<xref:System.ServiceModel.ReceiveErrorHandling>，有害訊息移到最後一個有害子佇列。</xref:System.ServiceModel.ReceiveErrorHandling> 此選項只適用於在 Message Queuing 4.0 上而且需要[!INCLUDE[wv](~/add/includes/wv-md.md)]。"
  syntax:
    content: public System.ServiceModel.ReceiveErrorHandling ReceiveErrorHandling { get; set; }
    return:
      type: System.ServiceModel.ReceiveErrorHandling
      description: "A <xref href=&quot;System.ServiceModel.ReceiveErrorHandling&quot;> </xref>值，指定如何處理有害和其他不可分派的訊息。"
  overload: System.ServiceModel.MsmqBindingBase.ReceiveErrorHandling*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.MsmqBindingBase.ReceiveRetryCount
  id: ReceiveRetryCount
  parent: System.ServiceModel.MsmqBindingBase
  langs:
  - csharp
  name: ReceiveRetryCount
  nameWithType: MsmqBindingBase.ReceiveRetryCount
  fullName: System.ServiceModel.MsmqBindingBase.ReceiveRetryCount
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "取得或設定從應用程式佇列讀取之訊息的立即傳遞嘗試次數上限。"
  remarks: "如果訊息的立即傳遞嘗試次數上限由應用程式未存取訊息，然後將訊息傳送到重試佇列以在稍後嘗試傳遞。 如果未不指定任何重試循環，然後訊息就會傳送至有害訊息佇列，或負認可會傳送至寄件者。       [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)]<xref:System.ServiceModel.MsmqBindingBase.MaxRetryCycles%2A> and <xref:System.ServiceModel.MsmqBindingBase.RetryCycleDelay%2A>.</xref:System.ServiceModel.MsmqBindingBase.RetryCycleDelay%2A></xref:System.ServiceModel.MsmqBindingBase.MaxRetryCycles%2A>"
  syntax:
    content: public int ReceiveRetryCount { get; set; }
    return:
      type: System.Int32
      description: "立即傳遞嘗試次數上限。 預設為 5。"
  overload: System.ServiceModel.MsmqBindingBase.ReceiveRetryCount*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.MsmqBindingBase.RetryCycleDelay
  id: RetryCycleDelay
  parent: System.ServiceModel.MsmqBindingBase
  langs:
  - csharp
  name: RetryCycleDelay
  nameWithType: MsmqBindingBase.RetryCycleDelay
  fullName: System.ServiceModel.MsmqBindingBase.RetryCycleDelay
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "取得或設定值，指出時間間隔重試循環嘗試傳遞無法立即傳遞之訊息時。"
  remarks: "單一重試循環會嘗試傳遞訊息至接收應用程式指定的次數。 所做的嘗試次數指定<xref:System.ServiceModel.MsmqBindingBase.ReceiveRetryCount%2A>屬性。</xref:System.ServiceModel.MsmqBindingBase.ReceiveRetryCount%2A> 如果應用程式無法存取訊息立即重試達指定次數後，訊息會傳送到重試佇列。 後續的重試循環會包含從重試佇列傳回應用程式佇列的訊息，嘗試傳遞至應用程式同樣地，RetryCycleDelay 所指定的延遲之後。 <xref:System.ServiceModel.MsmqBindingBase.MaxRetryCycles%2A>.</xref:System.ServiceModel.MsmqBindingBase.MaxRetryCycles%2A>所指定的重試循環數目"
  syntax:
    content: public TimeSpan RetryCycleDelay { get; set; }
    return:
      type: System.TimeSpan
      description: "<xref:System.TimeSpan>指定開始下的一個週期嘗試傳遞至接收應用程式之前等待的時間間隔。</xref:System.TimeSpan> 預設值是 10 分鐘。"
  overload: System.ServiceModel.MsmqBindingBase.RetryCycleDelay*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.MsmqBindingBase.Scheme
  id: Scheme
  parent: System.ServiceModel.MsmqBindingBase
  langs:
  - csharp
  name: Scheme
  nameWithType: MsmqBindingBase.Scheme
  fullName: System.ServiceModel.MsmqBindingBase.Scheme
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "傳回這個繫結的配置。"
  remarks: "訊息佇列 (MSMQ) 支援使用原生 MSMQ 通訊協定與 SRMP 通訊協定的佇列管理員之間傳輸訊息。 使用佇列的傳輸繫結的應用程式可以使用這兩種通訊協定。 佇列的傳輸繫結所支援的通訊協定配置是透過 HTTPS 的原生通訊協定的 net.msmq、 SRMP 通訊協定，如下︰ SRMP 之 net.srmps。       <xref:System.ServiceModel.MsmqIntegration.MsmqIntegrationBinding>支援單一配置，msmq.formatname，與使用者可以直接在佇列位址中指定的佇列格式名稱。</xref:System.ServiceModel.MsmqIntegration.MsmqIntegrationBinding>"
  syntax:
    content: public override string Scheme { get; }
    return:
      type: System.String
      description: "這個繫結的配置。 傳回的配置取決於實作<xref href=&quot;System.ServiceModel.MsmqBindingBase&quot;> </xref>。 <xref href=&quot;System.ServiceModel.NetMsmqBinding&quot;> </xref>實作會傳回&quot;net.msmq&quot;。 <xref href=&quot;System.ServiceModel.MsmqIntegration.MsmqIntegrationBinding&quot;> </xref>實作會傳回&quot;msmq.formatname&quot;。"
  overload: System.ServiceModel.MsmqBindingBase.Scheme*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.MsmqBindingBase.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously
  id: System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously
  isEii: true
  parent: System.ServiceModel.MsmqBindingBase
  langs:
  - csharp
  name: System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously
  nameWithType: MsmqBindingBase.System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously
  fullName: System.ServiceModel.MsmqBindingBase.System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "取得值，指出可以更有效率地同步或非同步方式處理傳入要求。"
  remarks: "<xref:System.ServiceModel.MsmqBindingBase.System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A>屬性設定為`true`時<xref:System.ServiceModel.MsmqBindingBase.ExactlyOnce%2A>是`true`。</xref:System.ServiceModel.MsmqBindingBase.ExactlyOnce%2A> </xref:System.ServiceModel.MsmqBindingBase.System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A>"
  syntax:
    content: bool System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果處理要求可以更有效率地以同步方式;否則<xref uid=&quot;langword_csharp_ false&quot; name=&quot; false&quot; href=&quot;&quot;></xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>，以非同步方式處理要求。"
  overload: System.ServiceModel.MsmqBindingBase.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.MsmqBindingBase.TimeToLive
  id: TimeToLive
  parent: System.ServiceModel.MsmqBindingBase
  langs:
  - csharp
  name: TimeToLive
  nameWithType: MsmqBindingBase.TimeToLive
  fullName: System.ServiceModel.MsmqBindingBase.TimeToLive
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "取得或設定指出多久由此繫結處理之訊息在佇列到期前可保留他們的時間間隔。"
  remarks: "TimeToLive 屬性是設定可確保，時間緊急的訊息不會變成過時才能接收應用程式處理。 中所指定的時間間隔內接收應用程式沒有存取佇列的訊息已過期。 過期的訊息會傳送至稱為 「 寄不出信件佇列的特殊佇列。 寄不出信件佇列的位置會設定與<xref:System.ServiceModel.MsmqBindingBase.DeadLetterQueue%2A>屬性或適當的預設值，並根據保證。</xref:System.ServiceModel.MsmqBindingBase.DeadLetterQueue%2A>"
  syntax:
    content: public TimeSpan TimeToLive { get; set; }
    return:
      type: System.TimeSpan
      description: "<xref:System.TimeSpan>指出多久訊息在佇列到期前可保留他們。</xref:System.TimeSpan> 預設值為 1 天。"
  overload: System.ServiceModel.MsmqBindingBase.TimeToLive*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.MsmqBindingBase.UseMsmqTracing
  id: UseMsmqTracing
  parent: System.ServiceModel.MsmqBindingBase
  langs:
  - csharp
  name: UseMsmqTracing
  nameWithType: MsmqBindingBase.UseMsmqTracing
  fullName: System.ServiceModel.MsmqBindingBase.UseMsmqTracing
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "取得或設定值，指出是否應追蹤由此繫結處理的訊息。"
  remarks: "啟用追蹤時，會報告訊息建立和訊息離開或到達訊息佇列 (MSMQ) 電腦每次傳送至報告佇列。"
  syntax:
    content: public bool UseMsmqTracing { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果處理的訊息應追蹤由此繫結。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ServiceModel.MsmqBindingBase.UseMsmqTracing*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.MsmqBindingBase.UseSourceJournal
  id: UseSourceJournal
  parent: System.ServiceModel.MsmqBindingBase
  langs:
  - csharp
  name: UseSourceJournal
  nameWithType: MsmqBindingBase.UseSourceJournal
  fullName: System.ServiceModel.MsmqBindingBase.UseSourceJournal
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "取得或設定值，這個值會指出由此繫結處理之訊息複本是否應該儲存在來源日誌佇列。"
  remarks: "記錄已離開電腦輸出佇列的訊息佇列應用程式可以將訊息複製到日誌佇列中。 一旦訊息一離開輸出佇列，並在目的地電腦上已收到訊息收到認可，訊息的複本就會保留在傳送端電腦的系統日誌佇列中。"
  syntax:
    content: public bool UseSourceJournal { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>這個繫結所處理之訊息的複本，如果應該儲存在來源日誌佇列。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ServiceModel.MsmqBindingBase.UseSourceJournal*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.MsmqBindingBase.ValidityDuration
  id: ValidityDuration
  parent: System.ServiceModel.MsmqBindingBase
  langs:
  - csharp
  name: ValidityDuration
  nameWithType: MsmqBindingBase.ValidityDuration
  fullName: System.ServiceModel.MsmqBindingBase.ValidityDuration
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "取得或設定值，這個值會指定接收內容功能鎖定訊息的持續時間。"
  remarks: >-
    > [!IMPORTANT]

    >  If ValidityDuration expires for a message, any transaction that may be used for its processing will be aborted along with the workflow instance if the expiration occurs during the transaction.
  syntax:
    content: public TimeSpan ValidityDuration { get; set; }
    return:
      type: System.TimeSpan
      description: "Timespan 物件。"
  overload: System.ServiceModel.MsmqBindingBase.ValidityDuration*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.Channels.Binding
  isExternal: false
  name: System.ServiceModel.Channels.Binding
- uid: System.ServiceModel.MsmqBindingBase.#ctor
  parent: System.ServiceModel.MsmqBindingBase
  isExternal: false
  name: MsmqBindingBase()
  nameWithType: MsmqBindingBase.MsmqBindingBase()
  fullName: System.ServiceModel.MsmqBindingBase.MsmqBindingBase()
- uid: System.ServiceModel.MsmqBindingBase.CustomDeadLetterQueue
  parent: System.ServiceModel.MsmqBindingBase
  isExternal: false
  name: CustomDeadLetterQueue
  nameWithType: MsmqBindingBase.CustomDeadLetterQueue
  fullName: System.ServiceModel.MsmqBindingBase.CustomDeadLetterQueue
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.ServiceModel.MsmqBindingBase.DeadLetterQueue
  parent: System.ServiceModel.MsmqBindingBase
  isExternal: false
  name: DeadLetterQueue
  nameWithType: MsmqBindingBase.DeadLetterQueue
  fullName: System.ServiceModel.MsmqBindingBase.DeadLetterQueue
- uid: System.ServiceModel.DeadLetterQueue
  parent: System.ServiceModel
  isExternal: false
  name: DeadLetterQueue
  nameWithType: DeadLetterQueue
  fullName: System.ServiceModel.DeadLetterQueue
- uid: System.ServiceModel.MsmqBindingBase.Durable
  parent: System.ServiceModel.MsmqBindingBase
  isExternal: false
  name: Durable
  nameWithType: MsmqBindingBase.Durable
  fullName: System.ServiceModel.MsmqBindingBase.Durable
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.MsmqBindingBase.ExactlyOnce
  parent: System.ServiceModel.MsmqBindingBase
  isExternal: false
  name: ExactlyOnce
  nameWithType: MsmqBindingBase.ExactlyOnce
  fullName: System.ServiceModel.MsmqBindingBase.ExactlyOnce
- uid: System.ServiceModel.MsmqBindingBase.MaxReceivedMessageSize
  parent: System.ServiceModel.MsmqBindingBase
  isExternal: false
  name: MaxReceivedMessageSize
  nameWithType: MsmqBindingBase.MaxReceivedMessageSize
  fullName: System.ServiceModel.MsmqBindingBase.MaxReceivedMessageSize
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.ServiceModel.MsmqBindingBase.MaxRetryCycles
  parent: System.ServiceModel.MsmqBindingBase
  isExternal: false
  name: MaxRetryCycles
  nameWithType: MsmqBindingBase.MaxRetryCycles
  fullName: System.ServiceModel.MsmqBindingBase.MaxRetryCycles
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ServiceModel.MsmqBindingBase.ReceiveContextEnabled
  parent: System.ServiceModel.MsmqBindingBase
  isExternal: false
  name: ReceiveContextEnabled
  nameWithType: MsmqBindingBase.ReceiveContextEnabled
  fullName: System.ServiceModel.MsmqBindingBase.ReceiveContextEnabled
- uid: System.ServiceModel.MsmqBindingBase.ReceiveErrorHandling
  parent: System.ServiceModel.MsmqBindingBase
  isExternal: false
  name: ReceiveErrorHandling
  nameWithType: MsmqBindingBase.ReceiveErrorHandling
  fullName: System.ServiceModel.MsmqBindingBase.ReceiveErrorHandling
- uid: System.ServiceModel.ReceiveErrorHandling
  parent: System.ServiceModel
  isExternal: false
  name: ReceiveErrorHandling
  nameWithType: ReceiveErrorHandling
  fullName: System.ServiceModel.ReceiveErrorHandling
- uid: System.ServiceModel.MsmqBindingBase.ReceiveRetryCount
  parent: System.ServiceModel.MsmqBindingBase
  isExternal: false
  name: ReceiveRetryCount
  nameWithType: MsmqBindingBase.ReceiveRetryCount
  fullName: System.ServiceModel.MsmqBindingBase.ReceiveRetryCount
- uid: System.ServiceModel.MsmqBindingBase.RetryCycleDelay
  parent: System.ServiceModel.MsmqBindingBase
  isExternal: false
  name: RetryCycleDelay
  nameWithType: MsmqBindingBase.RetryCycleDelay
  fullName: System.ServiceModel.MsmqBindingBase.RetryCycleDelay
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.ServiceModel.MsmqBindingBase.Scheme
  parent: System.ServiceModel.MsmqBindingBase
  isExternal: false
  name: Scheme
  nameWithType: MsmqBindingBase.Scheme
  fullName: System.ServiceModel.MsmqBindingBase.Scheme
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.MsmqBindingBase.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously
  parent: System.ServiceModel.MsmqBindingBase
  isExternal: false
  name: System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously
  nameWithType: MsmqBindingBase.System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously
  fullName: System.ServiceModel.MsmqBindingBase.System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously
- uid: System.ServiceModel.MsmqBindingBase.TimeToLive
  parent: System.ServiceModel.MsmqBindingBase
  isExternal: false
  name: TimeToLive
  nameWithType: MsmqBindingBase.TimeToLive
  fullName: System.ServiceModel.MsmqBindingBase.TimeToLive
- uid: System.ServiceModel.MsmqBindingBase.UseMsmqTracing
  parent: System.ServiceModel.MsmqBindingBase
  isExternal: false
  name: UseMsmqTracing
  nameWithType: MsmqBindingBase.UseMsmqTracing
  fullName: System.ServiceModel.MsmqBindingBase.UseMsmqTracing
- uid: System.ServiceModel.MsmqBindingBase.UseSourceJournal
  parent: System.ServiceModel.MsmqBindingBase
  isExternal: false
  name: UseSourceJournal
  nameWithType: MsmqBindingBase.UseSourceJournal
  fullName: System.ServiceModel.MsmqBindingBase.UseSourceJournal
- uid: System.ServiceModel.MsmqBindingBase.ValidityDuration
  parent: System.ServiceModel.MsmqBindingBase
  isExternal: false
  name: ValidityDuration
  nameWithType: MsmqBindingBase.ValidityDuration
  fullName: System.ServiceModel.MsmqBindingBase.ValidityDuration
- uid: System.ServiceModel.MsmqBindingBase.#ctor*
  parent: System.ServiceModel.MsmqBindingBase
  isExternal: false
  name: MsmqBindingBase
  nameWithType: MsmqBindingBase.MsmqBindingBase
- uid: System.ServiceModel.MsmqBindingBase.CustomDeadLetterQueue*
  parent: System.ServiceModel.MsmqBindingBase
  isExternal: false
  name: CustomDeadLetterQueue
  nameWithType: MsmqBindingBase.CustomDeadLetterQueue
- uid: System.ServiceModel.MsmqBindingBase.DeadLetterQueue*
  parent: System.ServiceModel.MsmqBindingBase
  isExternal: false
  name: DeadLetterQueue
  nameWithType: MsmqBindingBase.DeadLetterQueue
- uid: System.ServiceModel.MsmqBindingBase.Durable*
  parent: System.ServiceModel.MsmqBindingBase
  isExternal: false
  name: Durable
  nameWithType: MsmqBindingBase.Durable
- uid: System.ServiceModel.MsmqBindingBase.ExactlyOnce*
  parent: System.ServiceModel.MsmqBindingBase
  isExternal: false
  name: ExactlyOnce
  nameWithType: MsmqBindingBase.ExactlyOnce
- uid: System.ServiceModel.MsmqBindingBase.MaxReceivedMessageSize*
  parent: System.ServiceModel.MsmqBindingBase
  isExternal: false
  name: MaxReceivedMessageSize
  nameWithType: MsmqBindingBase.MaxReceivedMessageSize
- uid: System.ServiceModel.MsmqBindingBase.MaxRetryCycles*
  parent: System.ServiceModel.MsmqBindingBase
  isExternal: false
  name: MaxRetryCycles
  nameWithType: MsmqBindingBase.MaxRetryCycles
- uid: System.ServiceModel.MsmqBindingBase.ReceiveContextEnabled*
  parent: System.ServiceModel.MsmqBindingBase
  isExternal: false
  name: ReceiveContextEnabled
  nameWithType: MsmqBindingBase.ReceiveContextEnabled
- uid: System.ServiceModel.MsmqBindingBase.ReceiveErrorHandling*
  parent: System.ServiceModel.MsmqBindingBase
  isExternal: false
  name: ReceiveErrorHandling
  nameWithType: MsmqBindingBase.ReceiveErrorHandling
- uid: System.ServiceModel.MsmqBindingBase.ReceiveRetryCount*
  parent: System.ServiceModel.MsmqBindingBase
  isExternal: false
  name: ReceiveRetryCount
  nameWithType: MsmqBindingBase.ReceiveRetryCount
- uid: System.ServiceModel.MsmqBindingBase.RetryCycleDelay*
  parent: System.ServiceModel.MsmqBindingBase
  isExternal: false
  name: RetryCycleDelay
  nameWithType: MsmqBindingBase.RetryCycleDelay
- uid: System.ServiceModel.MsmqBindingBase.Scheme*
  parent: System.ServiceModel.MsmqBindingBase
  isExternal: false
  name: Scheme
  nameWithType: MsmqBindingBase.Scheme
- uid: System.ServiceModel.MsmqBindingBase.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously*
  parent: System.ServiceModel.MsmqBindingBase
  isExternal: false
  name: System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously
  nameWithType: MsmqBindingBase.System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously
- uid: System.ServiceModel.MsmqBindingBase.TimeToLive*
  parent: System.ServiceModel.MsmqBindingBase
  isExternal: false
  name: TimeToLive
  nameWithType: MsmqBindingBase.TimeToLive
- uid: System.ServiceModel.MsmqBindingBase.UseMsmqTracing*
  parent: System.ServiceModel.MsmqBindingBase
  isExternal: false
  name: UseMsmqTracing
  nameWithType: MsmqBindingBase.UseMsmqTracing
- uid: System.ServiceModel.MsmqBindingBase.UseSourceJournal*
  parent: System.ServiceModel.MsmqBindingBase
  isExternal: false
  name: UseSourceJournal
  nameWithType: MsmqBindingBase.UseSourceJournal
- uid: System.ServiceModel.MsmqBindingBase.ValidityDuration*
  parent: System.ServiceModel.MsmqBindingBase
  isExternal: false
  name: ValidityDuration
  nameWithType: MsmqBindingBase.ValidityDuration
