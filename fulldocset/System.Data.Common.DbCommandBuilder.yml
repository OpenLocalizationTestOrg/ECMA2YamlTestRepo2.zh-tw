### YamlMime:ManagedReference
items:
- uid: System.Data.Common.DbCommandBuilder
  id: DbCommandBuilder
  children:
  - System.Data.Common.DbCommandBuilder.#ctor
  - System.Data.Common.DbCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)
  - System.Data.Common.DbCommandBuilder.CatalogLocation
  - System.Data.Common.DbCommandBuilder.CatalogSeparator
  - System.Data.Common.DbCommandBuilder.ConflictOption
  - System.Data.Common.DbCommandBuilder.DataAdapter
  - System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)
  - System.Data.Common.DbCommandBuilder.GetDeleteCommand
  - System.Data.Common.DbCommandBuilder.GetDeleteCommand(System.Boolean)
  - System.Data.Common.DbCommandBuilder.GetInsertCommand
  - System.Data.Common.DbCommandBuilder.GetInsertCommand(System.Boolean)
  - System.Data.Common.DbCommandBuilder.GetParameterName(System.Int32)
  - System.Data.Common.DbCommandBuilder.GetParameterName(System.String)
  - System.Data.Common.DbCommandBuilder.GetParameterPlaceholder(System.Int32)
  - System.Data.Common.DbCommandBuilder.GetSchemaTable(System.Data.Common.DbCommand)
  - System.Data.Common.DbCommandBuilder.GetUpdateCommand
  - System.Data.Common.DbCommandBuilder.GetUpdateCommand(System.Boolean)
  - System.Data.Common.DbCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)
  - System.Data.Common.DbCommandBuilder.QuoteIdentifier(System.String)
  - System.Data.Common.DbCommandBuilder.QuotePrefix
  - System.Data.Common.DbCommandBuilder.QuoteSuffix
  - System.Data.Common.DbCommandBuilder.RefreshSchema
  - System.Data.Common.DbCommandBuilder.RowUpdatingHandler(System.Data.Common.RowUpdatingEventArgs)
  - System.Data.Common.DbCommandBuilder.SchemaSeparator
  - System.Data.Common.DbCommandBuilder.SetAllValues
  - System.Data.Common.DbCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)
  - System.Data.Common.DbCommandBuilder.UnquoteIdentifier(System.String)
  langs:
  - csharp
  name: DbCommandBuilder
  nameWithType: DbCommandBuilder
  fullName: System.Data.Common.DbCommandBuilder
  type: Class
  summary: "單一資料表命令用來協調所做的變更會自動產生<xref href=&quot;System.Data.DataSet&quot;></xref>與相關聯的資料庫。 這是抽象類別，只可以被繼承。"
  remarks: "提供建立自己的命令產生器的提供者撰寫人員的方便性，不論 DbCommandBuilder 類別。 藉由繼承自這個類別，開發人員可以在自己的程式碼中實作提供者特定的行為。       <xref:System.Data.Common.DbDataAdapter>協調所做的變更所需的 SQL 陳述式不會自動產生<xref:System.Data.DataSet>與相關聯的資料來源。</xref:System.Data.DataSet> </xref:System.Data.Common.DbDataAdapter> 不過，您可以在其中建立 DbCommandBuilder 物件，如果您設定<xref:System.Data.Common.DbDataAdapter.SelectCommand%2A><xref:System.Data.Common.DbDataAdapter>.</xref:System.Data.Common.DbDataAdapter>屬性</xref:System.Data.Common.DbDataAdapter.SelectCommand%2A>自動產生 SQL 陳述式的單一資料表的更新 然後，您未設定任何其他 SQL 陳述式會產生 DbCommandBuilder。       DbCommandBuilder 註冊其本身的接聽程式為<xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating>事件，每當您設定<xref:System.Data.Common.DbCommandBuilder.DataAdapter%2A>屬性。</xref:System.Data.Common.DbCommandBuilder.DataAdapter%2A> </xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating> 您可以只將其中一個<xref:System.Data.Common.DbDataAdapter>或 DbCommandBuilder 物件與其他每一次。</xref:System.Data.Common.DbDataAdapter>       若要產生 INSERT、 UPDATE 或 DELETE 陳述式，使用 DbCommandBuilder<xref:System.Data.Common.DbDataAdapter.SelectCommand%2A>屬性，以自動擷取一組必要中繼資料。</xref:System.Data.Common.DbDataAdapter.SelectCommand%2A> 如果您變更<xref:System.Data.Common.DbDataAdapter.SelectCommand%2A>擷取中繼資料 （例如，在第一次的更新） 之後，您應該呼叫<xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>方法，以更新中繼資料。</xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> </xref:System.Data.Common.DbDataAdapter.SelectCommand%2A>       `SelectCommand`還必須傳回至少一個主索引鍵或唯一的資料行。 如果都不存在，<xref:System.InvalidOperationException>會產生例外狀況，並不會產生命令。</xref:System.InvalidOperationException>       也會使用 DbCommandBuilder <xref:System.Data.Common.DbCommand.Connection%2A>， <xref:System.Data.Common.DbCommand.CommandTimeout%2A>，和<xref:System.Data.Common.DbCommand.Transaction%2A>屬性參考<xref:System.Data.Common.DbDataAdapter.SelectCommand%2A>.</xref:System.Data.Common.DbDataAdapter.SelectCommand%2A> </xref:System.Data.Common.DbCommand.Transaction%2A> </xref:System.Data.Common.DbCommand.CommandTimeout%2A> </xref:System.Data.Common.DbCommand.Connection%2A> 使用者應該呼叫<xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>如果修改這些屬性，或如果<xref:System.Data.Common.DbDataAdapter.SelectCommand%2A>本身會被取代。</xref:System.Data.Common.DbDataAdapter.SelectCommand%2A> </xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> 否則<xref:System.Data.Common.DbDataAdapter.InsertCommand%2A>， <xref:System.Data.Common.DbDataAdapter.UpdateCommand%2A>，和<xref:System.Data.Common.DbDataAdapter.DeleteCommand%2A>屬性會保留其先前的值。</xref:System.Data.Common.DbDataAdapter.DeleteCommand%2A> </xref:System.Data.Common.DbDataAdapter.UpdateCommand%2A> </xref:System.Data.Common.DbDataAdapter.InsertCommand%2A>       如果您呼叫<xref:System.ComponentModel.Component.Dispose%2A>，會解除關聯 DbCommandBuilder <xref:System.Data.Common.DbDataAdapter>，以及所產生的命令不會再使用。</xref:System.Data.Common.DbDataAdapter> </xref:System.ComponentModel.Component.Dispose%2A>"
  syntax:
    content: 'public abstract class DbCommandBuilder : System.ComponentModel.Component'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  implements: []
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.Common.DbCommandBuilder.#ctor
  id: '#ctor'
  parent: System.Data.Common.DbCommandBuilder
  langs:
  - csharp
  name: DbCommandBuilder()
  nameWithType: DbCommandBuilder.DbCommandBuilder()
  fullName: System.Data.Common.DbCommandBuilder.DbCommandBuilder()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "初始化繼承自一個類別的新執行個體<xref href=&quot;System.Data.Common.DbCommandBuilder&quot;></xref>類別。"
  syntax:
    content: protected DbCommandBuilder ();
    parameters: []
  overload: System.Data.Common.DbCommandBuilder.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)
  id: ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)
  parent: System.Data.Common.DbCommandBuilder
  langs:
  - csharp
  name: ApplyParameterInfo(DbParameter,DataRow,StatementType,Boolean)
  nameWithType: DbCommandBuilder.ApplyParameterInfo(DbParameter,DataRow,StatementType,Boolean)
  fullName: System.Data.Common.DbCommandBuilder.ApplyParameterInfo(DbParameter,DataRow,StatementType,Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "允許的提供者實作<xref href=&quot;System.Data.Common.DbCommandBuilder&quot;></xref>類別來處理額外的參數屬性。"
  remarks: "這個方法可讓實作<xref:System.Data.Common.DbCommandBuilder>類別來處理提供者特有的參數屬性。</xref:System.Data.Common.DbCommandBuilder>"
  syntax:
    content: protected abstract void ApplyParameterInfo (System.Data.Common.DbParameter parameter, System.Data.DataRow row, System.Data.StatementType statementType, bool whereClause);
    parameters:
    - id: parameter
      type: System.Data.Common.DbParameter
      description: "A <xref href=&quot;System.Data.Common.DbParameter&quot;> </xref>套用其他修改。"
    - id: row
      type: System.Data.DataRow
      description: "<xref href=&quot;System.Data.DataRow&quot;> </xref> <xref:System.Data.Common.DbDataReader.GetSchemaTable*>.</xref:System.Data.Common.DbDataReader.GetSchemaTable*>所提供的結構描述資料表中"
    - id: statementType
      type: System.Data.StatementType
      description: "命令所產生的類型插入、 更新或刪除。"
    - id: whereClause
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果參數是 update 或 delete WHERE 子句的一部分<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>如果它是 insert 或 update 值的一部分。"
  overload: System.Data.Common.DbCommandBuilder.ApplyParameterInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommandBuilder.CatalogLocation
  id: CatalogLocation
  parent: System.Data.Common.DbCommandBuilder
  langs:
  - csharp
  name: CatalogLocation
  nameWithType: DbCommandBuilder.CatalogLocation
  fullName: System.Data.Common.DbCommandBuilder.CatalogLocation
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "取得或設定<xref href=&quot;System.Data.Common.CatalogLocation&quot;></xref>執行個體<xref href=&quot;System.Data.Common.DbCommandBuilder&quot;></xref>類別。"
  syntax:
    content: public virtual System.Data.Common.CatalogLocation CatalogLocation { get; set; }
    return:
      type: System.Data.Common.CatalogLocation
      description: "A <xref href=&quot;System.Data.Common.CatalogLocation&quot;></xref> object."
  overload: System.Data.Common.DbCommandBuilder.CatalogLocation*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommandBuilder.CatalogSeparator
  id: CatalogSeparator
  parent: System.Data.Common.DbCommandBuilder
  langs:
  - csharp
  name: CatalogSeparator
  nameWithType: DbCommandBuilder.CatalogSeparator
  fullName: System.Data.Common.DbCommandBuilder.CatalogSeparator
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "設定或取得字串，做為執行個體的目錄分隔符號<xref href=&quot;System.Data.Common.DbCommandBuilder&quot;></xref>類別。"
  syntax:
    content: public virtual string CatalogSeparator { get; set; }
    return:
      type: System.String
      description: "字串，表示執行個體搭配使用的目錄分隔符號<xref href=&quot;System.Data.Common.DbCommandBuilder&quot;></xref>類別。"
  overload: System.Data.Common.DbCommandBuilder.CatalogSeparator*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommandBuilder.ConflictOption
  id: ConflictOption
  parent: System.Data.Common.DbCommandBuilder
  langs:
  - csharp
  name: ConflictOption
  nameWithType: DbCommandBuilder.ConflictOption
  fullName: System.Data.Common.DbCommandBuilder.ConflictOption
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "指定哪一個<xref href=&quot;System.Data.ConflictOption&quot;></xref>所使用的是<xref href=&quot;System.Data.Common.DbCommandBuilder&quot;> </xref>。"
  syntax:
    content: public virtual System.Data.ConflictOption ConflictOption { get; set; }
    return:
      type: System.Data.ConflictOption
      description: "傳回的其中一個<xref href=&quot;System.Data.ConflictOption&quot;></xref>值描述的行為<xref href=&quot;System.Data.Common.DbCommandBuilder&quot;> </xref>。"
  overload: System.Data.Common.DbCommandBuilder.ConflictOption*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommandBuilder.DataAdapter
  id: DataAdapter
  parent: System.Data.Common.DbCommandBuilder
  langs:
  - csharp
  name: DataAdapter
  nameWithType: DbCommandBuilder.DataAdapter
  fullName: System.Data.Common.DbCommandBuilder.DataAdapter
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "取得或設定<xref href=&quot;System.Data.Common.DbDataAdapter&quot;></xref>的 TRANSACT-SQL 陳述式就會自動產生的物件。"
  remarks: "<xref:System.Data.Common.DbCommandBuilder>自己註冊為接聽程式<xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating>產生的事件<xref:System.Data.Common.DbDataAdapter>這個屬性中指定。</xref:System.Data.Common.DbDataAdapter> </xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating> </xref:System.Data.Common.DbCommandBuilder>       當您建立的新執行個體<xref:System.Data.Common.DbCommandBuilder>，任何現有<xref:System.Data.Common.DbCommandBuilder>與此相關聯<xref:System.Data.Common.DbDataAdapter>釋放。</xref:System.Data.Common.DbDataAdapter> </xref:System.Data.Common.DbCommandBuilder> </xref:System.Data.Common.DbCommandBuilder>"
  syntax:
    content: public System.Data.Common.DbDataAdapter DataAdapter { get; set; }
    return:
      type: System.Data.Common.DbDataAdapter
      description: "A <xref href=&quot;System.Data.Common.DbDataAdapter&quot;></xref> object."
  overload: System.Data.Common.DbCommandBuilder.DataAdapter*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Data.Common.DbCommandBuilder
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: DbCommandBuilder.Dispose(Boolean)
  fullName: System.Data.Common.DbCommandBuilder.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "所使用的 unmanaged 的資源釋出<xref href=&quot;System.Data.Common.DbCommandBuilder&quot;></xref>並選擇性釋放 managed 的資源。"
  remarks: "這個方法會呼叫公用<xref:System.Data.Common.DbCommandBuilder.Dispose%2A>方法和`Finalize`方法。</xref:System.Data.Common.DbCommandBuilder.Dispose%2A> <xref:System.Data.Common.DbCommandBuilder.Dispose%2A>disposing 參數設為叫用受保護的 Dispose 方法`true`。</xref:System.Data.Common.DbCommandBuilder.Dispose%2A> `Finalize`叫用`Dispose`與`disposing`設`false`。       當`disposing`參數是`true`，這個方法的任何 managed 物件所持有的資源全部釋出這個<xref:System.Data.Common.DbCommandBuilder>參考。</xref:System.Data.Common.DbCommandBuilder> 這個方法會叫用<xref:System.Data.Common.DbCommandBuilder.Dispose%2A>每個參考物件的方法。</xref:System.Data.Common.DbCommandBuilder.Dispose%2A>"
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>表示釋放 managed 和 unmanaged 資源，<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>表示只釋放 unmanaged 的資源。"
  overload: System.Data.Common.DbCommandBuilder.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommandBuilder.GetDeleteCommand
  id: GetDeleteCommand
  parent: System.Data.Common.DbCommandBuilder
  langs:
  - csharp
  name: GetDeleteCommand()
  nameWithType: DbCommandBuilder.GetDeleteCommand()
  fullName: System.Data.Common.DbCommandBuilder.GetDeleteCommand()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "取得自動產生<xref href=&quot;System.Data.Common.DbCommand&quot;></xref>執行刪除資料來源所需的物件。"
  remarks: "應用程式才能使用 GetDeleteCommand 方法進行資訊或疑難排解因為它會傳回<xref:System.Data.Common.DbCommand>要執行的物件。</xref:System.Data.Common.DbCommand>       您也可以使用 GetDeleteCommand 做為基礎的已修改的命令。 比方說，您可能會呼叫 GetDeleteCommand 和修改命令文字，並接著<xref:System.Data.Common.DbDataAdapter>.</xref:System.Data.Common.DbDataAdapter>上明確設定，       第一次產生 SQL 陳述式之後，應用程式必須明確地呼叫<xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>陳述式以任何方式變更時。</xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> 否則，GetDeleteCommand 將仍會使用從先前的陳述式，這可能不正確的資訊。 SQL 陳述式是第一個應用程式進行呼叫時產生<xref:System.Data.Common.DbDataAdapter.Update%2A>或 GetDeleteCommand。</xref:System.Data.Common.DbDataAdapter.Update%2A>"
  syntax:
    content: public System.Data.Common.DbCommand GetDeleteCommand ();
    parameters: []
    return:
      type: System.Data.Common.DbCommand
      description: "自動產生<xref href=&quot;System.Data.Common.DbCommand&quot;></xref>執行刪除所需的物件。"
  overload: System.Data.Common.DbCommandBuilder.GetDeleteCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommandBuilder.GetDeleteCommand(System.Boolean)
  id: GetDeleteCommand(System.Boolean)
  parent: System.Data.Common.DbCommandBuilder
  langs:
  - csharp
  name: GetDeleteCommand(Boolean)
  nameWithType: DbCommandBuilder.GetDeleteCommand(Boolean)
  fullName: System.Data.Common.DbCommandBuilder.GetDeleteCommand(Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "取得自動產生<xref href=&quot;System.Data.Common.DbCommand&quot;></xref>執行刪除資料來源，並選擇性地使用資料行的參數名稱所需的物件。"
  remarks: "應用程式可以使用<xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A>方法資訊或疑難排解的考量，因為它會傳回<xref:System.Data.Common.DbCommand>要執行的物件。</xref:System.Data.Common.DbCommand> </xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A>       您也可以使用<xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A>做為基礎的已修改的命令。</xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> 例如，您可能會呼叫<xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A>和修改命令文字，然後明確地設定，於<xref:System.Data.Common.DbDataAdapter>。</xref:System.Data.Common.DbDataAdapter> </xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A>       第一次產生 SQL 陳述式之後，應用程式必須明確地呼叫<xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>陳述式以任何方式變更時。</xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> 否則，<xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A>仍會使用從先前的陳述式，這可能不正確的資訊。</xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> SQL 陳述式是第一個應用程式呼叫<xref:System.Data.Common.DbDataAdapter.Update%2A>或<xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A>.</xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A></xref:System.Data.Common.DbDataAdapter.Update%2A>時產生       產生的參數名稱時的預設行為是使用@p1， @p2，依此類推的各種不同的參數。 傳遞`true`如`useColumnsForParameterNames`參數可讓您強制<xref:System.Data.Common.DbCommandBuilder>來產生改為根據的資料行名稱的參數。</xref:System.Data.Common.DbCommandBuilder> 符合下列條件時，才會成功:-<xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength>已指定，且其長度等於或大於產生的參數名稱。</xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength>      -產生的參數名稱符合指定準則<xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern>規則運算式。</xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern>      -A<xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat>指定。</xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat>"
  syntax:
    content: public System.Data.Common.DbCommand GetDeleteCommand (bool useColumnsForParameterNames);
    parameters:
    - id: useColumnsForParameterNames
      type: System.Boolean
      description: "如果<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>，產生盡可能符合資料行名稱的參數名稱。 如果<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>，產生@p1， @p2，依此類推。"
    return:
      type: System.Data.Common.DbCommand
      description: "自動產生<xref href=&quot;System.Data.Common.DbCommand&quot;></xref>執行刪除所需的物件。"
  overload: System.Data.Common.DbCommandBuilder.GetDeleteCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommandBuilder.GetInsertCommand
  id: GetInsertCommand
  parent: System.Data.Common.DbCommandBuilder
  langs:
  - csharp
  name: GetInsertCommand()
  nameWithType: DbCommandBuilder.GetInsertCommand()
  fullName: System.Data.Common.DbCommandBuilder.GetInsertCommand()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "取得自動產生<xref href=&quot;System.Data.Common.DbCommand&quot;></xref>執行插入資料來源所需的物件。"
  remarks: "應用程式才能使用 GetInsertCommand 方法進行資訊或疑難排解因為它會傳回的文字<xref:System.Data.Common.DbCommand>要執行的物件。</xref:System.Data.Common.DbCommand>       您也可以使用 GetInsertCommand 做為基礎的已修改的命令。 比方說，您可能會呼叫 GetInsertCommand 和修改命令文字，並接著<xref:System.Data.Common.DbDataAdapter>.</xref:System.Data.Common.DbDataAdapter>上明確設定，       第一次產生 SQL 陳述式之後，應用程式必須明確地呼叫<xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>陳述式以任何方式變更時。</xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> 否則，GetInsertCommand 將仍會使用從先前的陳述式，這可能不正確的資訊。 SQL 陳述式是第一個應用程式進行呼叫時產生<xref:System.Data.Common.DbDataAdapter.Update%2A>或 GetInsertCommand。</xref:System.Data.Common.DbDataAdapter.Update%2A>"
  syntax:
    content: public System.Data.Common.DbCommand GetInsertCommand ();
    parameters: []
    return:
      type: System.Data.Common.DbCommand
      description: "自動產生<xref href=&quot;System.Data.Common.DbCommand&quot;></xref>執行插入所需的物件。"
  overload: System.Data.Common.DbCommandBuilder.GetInsertCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommandBuilder.GetInsertCommand(System.Boolean)
  id: GetInsertCommand(System.Boolean)
  parent: System.Data.Common.DbCommandBuilder
  langs:
  - csharp
  name: GetInsertCommand(Boolean)
  nameWithType: DbCommandBuilder.GetInsertCommand(Boolean)
  fullName: System.Data.Common.DbCommandBuilder.GetInsertCommand(Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "取得自動產生<xref href=&quot;System.Data.Common.DbCommand&quot;></xref>執行插入，在資料來源，並選擇性地使用資料行的參數名稱所需的物件。"
  remarks: "應用程式可以使用<xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A>方法資訊或疑難排解的考量，因為它會傳回的文字<xref:System.Data.Common.DbCommand>要執行的物件。</xref:System.Data.Common.DbCommand> </xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A>       您也可以使用<xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A>做為基礎的已修改的命令。</xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> 例如，您可能會呼叫<xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A>和修改命令文字，然後明確地設定，於<xref:System.Data.Common.DbDataAdapter>。</xref:System.Data.Common.DbDataAdapter> </xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A>       第一次產生 SQL 陳述式之後，應用程式必須明確地呼叫<xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>陳述式以任何方式變更時。</xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> 否則，<xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A>仍會使用從先前的陳述式，這可能不正確的資訊。</xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> SQL 陳述式是第一個應用程式呼叫<xref:System.Data.Common.DbDataAdapter.Update%2A>或<xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A>.</xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A></xref:System.Data.Common.DbDataAdapter.Update%2A>時產生       產生的參數名稱時的預設行為是使用@p1， @p2，依此類推的各種不同的參數。 傳遞`true`如`useColumnsForParameterNames`參數可讓您強制<xref:System.Data.Common.DbCommandBuilder>來產生改為根據的資料行名稱的參數。</xref:System.Data.Common.DbCommandBuilder> 根據資料行名稱的參數產生在符合下列條件時，才會成功:-<xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength>已指定，且其長度等於或大於產生的參數名稱。</xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength>      -產生的參數名稱符合指定準則<xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern>規則運算式。</xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern>      -A<xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat>指定。</xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat>"
  syntax:
    content: public System.Data.Common.DbCommand GetInsertCommand (bool useColumnsForParameterNames);
    parameters:
    - id: useColumnsForParameterNames
      type: System.Boolean
      description: "如果<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>，產生盡可能符合資料行名稱的參數名稱。 如果<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>，產生@p1， @p2，依此類推。"
    return:
      type: System.Data.Common.DbCommand
      description: "自動產生<xref href=&quot;System.Data.Common.DbCommand&quot;></xref>執行插入所需的物件。"
  overload: System.Data.Common.DbCommandBuilder.GetInsertCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommandBuilder.GetParameterName(System.Int32)
  id: GetParameterName(System.Int32)
  parent: System.Data.Common.DbCommandBuilder
  langs:
  - csharp
  name: GetParameterName(Int32)
  nameWithType: DbCommandBuilder.GetParameterName(Int32)
  fullName: System.Data.Common.DbCommandBuilder.GetParameterName(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "傳回指定之參數的名稱，格式為@p * # *。 當建置自訂的命令產生器時使用。"
  syntax:
    content: protected abstract string GetParameterName (int parameterOrdinal);
    parameters:
    - id: parameterOrdinal
      type: System.Int32
      description: "數字，要包含在參數的名稱..."
    return:
      type: System.String
      description: "具有指定之數字附加做為參數名稱的一部分的參數名稱。"
  overload: System.Data.Common.DbCommandBuilder.GetParameterName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommandBuilder.GetParameterName(System.String)
  id: GetParameterName(System.String)
  parent: System.Data.Common.DbCommandBuilder
  langs:
  - csharp
  name: GetParameterName(String)
  nameWithType: DbCommandBuilder.GetParameterName(String)
  fullName: System.Data.Common.DbCommandBuilder.GetParameterName(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "傳回完整的參數名稱，在給定的部分參數名稱。"
  syntax:
    content: protected abstract string GetParameterName (string parameterName);
    parameters:
    - id: parameterName
      type: System.String
      description: "部分參數的名稱。"
    return:
      type: System.String
      description: "完整的參數名稱，對應到要求的部分參數名稱。"
  overload: System.Data.Common.DbCommandBuilder.GetParameterName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommandBuilder.GetParameterPlaceholder(System.Int32)
  id: GetParameterPlaceholder(System.Int32)
  parent: System.Data.Common.DbCommandBuilder
  langs:
  - csharp
  name: GetParameterPlaceholder(Int32)
  nameWithType: DbCommandBuilder.GetParameterPlaceholder(Int32)
  fullName: System.Data.Common.DbCommandBuilder.GetParameterPlaceholder(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "相關聯的 SQL 陳述式中傳回參數的預留位置。"
  remarks: "這個方法僅供使用的提供者撰寫人員建置自訂的命令產生器。"
  syntax:
    content: protected abstract string GetParameterPlaceholder (int parameterOrdinal);
    parameters:
    - id: parameterOrdinal
      type: System.Int32
      description: "此數字，為參數的名稱的一部分。"
    return:
      type: System.String
      description: "附加指定的數字參數的名稱。"
  overload: System.Data.Common.DbCommandBuilder.GetParameterPlaceholder*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommandBuilder.GetSchemaTable(System.Data.Common.DbCommand)
  id: GetSchemaTable(System.Data.Common.DbCommand)
  parent: System.Data.Common.DbCommandBuilder
  langs:
  - csharp
  name: GetSchemaTable(DbCommand)
  nameWithType: DbCommandBuilder.GetSchemaTable(DbCommand)
  fullName: System.Data.Common.DbCommandBuilder.GetSchemaTable(DbCommand)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "傳回的結構描述資料表<xref href=&quot;System.Data.Common.DbCommandBuilder&quot;> </xref>。"
  remarks: "這個方法僅供使用的提供者撰寫人員建置自訂的命令產生器。"
  syntax:
    content: protected virtual System.Data.DataTable GetSchemaTable (System.Data.Common.DbCommand sourceCommand);
    parameters:
    - id: sourceCommand
      type: System.Data.Common.DbCommand
      description: "<xref href=&quot;System.Data.Common.DbCommand&quot;> </xref>為其擷取對應的結構描述資料表。"
    return:
      type: System.Data.DataTable
      description: "A <xref href=&quot;System.Data.DataTable&quot;> </xref>代表特定的結構描述<xref href=&quot;System.Data.Common.DbCommand&quot;> </xref>。"
  overload: System.Data.Common.DbCommandBuilder.GetSchemaTable*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommandBuilder.GetUpdateCommand
  id: GetUpdateCommand
  parent: System.Data.Common.DbCommandBuilder
  langs:
  - csharp
  name: GetUpdateCommand()
  nameWithType: DbCommandBuilder.GetUpdateCommand()
  fullName: System.Data.Common.DbCommandBuilder.GetUpdateCommand()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "取得自動產生<xref href=&quot;System.Data.Common.DbCommand&quot;></xref>執行更新資料來源所需的物件。"
  remarks: "應用程式才能使用 GetUpdateCommand 方法進行資訊或疑難排解因為它會傳回<xref:System.Data.Common.DbCommand>要執行的物件。</xref:System.Data.Common.DbCommand>       您也可以使用 GetUpdateCommand 做為基礎的已修改的命令。 比方說，您可能會呼叫 GetUpdateCommand 和修改命令文字，並接著<xref:System.Data.Common.DbDataAdapter>.</xref:System.Data.Common.DbDataAdapter>上明確設定，       第一次產生 SQL 陳述式之後，應用程式必須明確地呼叫<xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>陳述式以任何方式變更時。</xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> 否則，GetUpdateCommand 將仍會使用從先前的陳述式，這可能不正確的資訊。 SQL 陳述式是第一個應用程式進行呼叫時產生<xref:System.Data.Common.DbDataAdapter.Update%2A>或 GetUpdateCommand。</xref:System.Data.Common.DbDataAdapter.Update%2A>"
  syntax:
    content: public System.Data.Common.DbCommand GetUpdateCommand ();
    parameters: []
    return:
      type: System.Data.Common.DbCommand
      description: "自動產生<xref href=&quot;System.Data.Common.DbCommand&quot;></xref>執行更新所需的物件。"
  overload: System.Data.Common.DbCommandBuilder.GetUpdateCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommandBuilder.GetUpdateCommand(System.Boolean)
  id: GetUpdateCommand(System.Boolean)
  parent: System.Data.Common.DbCommandBuilder
  langs:
  - csharp
  name: GetUpdateCommand(Boolean)
  nameWithType: DbCommandBuilder.GetUpdateCommand(Boolean)
  fullName: System.Data.Common.DbCommandBuilder.GetUpdateCommand(Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "取得自動產生<xref href=&quot;System.Data.Common.DbCommand&quot;></xref>資料來源，並選擇性地使用資料行的參數名稱時執行更新所需的物件。"
  remarks: "應用程式可以使用<xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A>方法資訊或疑難排解的考量，因為它會傳回<xref:System.Data.Common.DbCommand>要執行的物件。</xref:System.Data.Common.DbCommand> </xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A>       您也可以使用<xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A>做為基礎的已修改的命令。</xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> 例如，您可能會呼叫<xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A>和修改命令文字以及然後明確地設定，於<xref:System.Data.Common.DbDataAdapter>。</xref:System.Data.Common.DbDataAdapter> </xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A>       第一次產生 SQL 陳述式之後，應用程式必須明確地呼叫<xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>陳述式以任何方式變更時。</xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> 否則，<xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A>仍會使用從先前的陳述式，這可能不正確的資訊。</xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> SQL 陳述式是第一個應用程式呼叫<xref:System.Data.Common.DbDataAdapter.Update%2A>或<xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A>.</xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A></xref:System.Data.Common.DbDataAdapter.Update%2A>時產生       產生的參數名稱時的預設行為是使用@p1， @p2，依此類推的各種不同的參數。 傳遞`true`如`useColumnsForParameterNames`參數可讓您強制<xref:System.Data.Common.DbCommandBuilder>來產生改為根據的資料行名稱的參數。</xref:System.Data.Common.DbCommandBuilder> 根據資料行名稱的參數產生在符合下列條件時，才會成功:-<xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength>已指定，且其長度等於或大於產生的參數名稱。</xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength>      -產生的參數名稱符合指定準則<xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern>規則運算式。</xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern>      -A<xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat>指定。</xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat>"
  syntax:
    content: public System.Data.Common.DbCommand GetUpdateCommand (bool useColumnsForParameterNames);
    parameters:
    - id: useColumnsForParameterNames
      type: System.Boolean
      description: "如果<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>，產生盡可能符合資料行名稱的參數名稱。 如果<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>，產生@p1， @p2，依此類推。"
    return:
      type: System.Data.Common.DbCommand
      description: "自動產生<xref href=&quot;System.Data.Common.DbCommand&quot;></xref>執行更新所需的物件。"
  overload: System.Data.Common.DbCommandBuilder.GetUpdateCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)
  id: InitializeCommand(System.Data.Common.DbCommand)
  parent: System.Data.Common.DbCommandBuilder
  langs:
  - csharp
  name: InitializeCommand(DbCommand)
  nameWithType: DbCommandBuilder.InitializeCommand(DbCommand)
  fullName: System.Data.Common.DbCommandBuilder.InitializeCommand(DbCommand)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Resets the <>*>, <>*>, <xref:System.Data.Common.DbCommand.CommandType*>, and <xref href=&quot;System.Data.UpdateRowSource&quot;></xref> properties on the <xref href=&quot;System.Data.Common.DbCommand&quot;></xref>.</xref:System.Data.Common.DbCommand.CommandType*>"
  remarks: "這個方法僅供使用的提供者撰寫人員建置自訂的命令產生器。"
  syntax:
    content: protected virtual System.Data.Common.DbCommand InitializeCommand (System.Data.Common.DbCommand command);
    parameters:
    - id: command
      type: System.Data.Common.DbCommand
      description: "<xref href=&quot;System.Data.Common.DbCommand&quot;> </xref>用於命令產生器所對應的插入、 更新或刪除命令。"
    return:
      type: System.Data.Common.DbCommand
      description: "A <xref href=&quot;System.Data.Common.DbCommand&quot;> </xref>来用於每個插入、 更新或刪除作業的執行個體。 傳遞 null 值可讓 InitializeCommand 方法建立<xref href=&quot;System.Data.Common.DbCommand&quot;></xref>物件會根據選取的命令相關聯<xref href=&quot;System.Data.Common.DbCommandBuilder&quot;> </xref>。"
  overload: System.Data.Common.DbCommandBuilder.InitializeCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommandBuilder.QuoteIdentifier(System.String)
  id: QuoteIdentifier(System.String)
  parent: System.Data.Common.DbCommandBuilder
  langs:
  - csharp
  name: QuoteIdentifier(String)
  nameWithType: DbCommandBuilder.QuoteIdentifier(String)
  fullName: System.Data.Common.DbCommandBuilder.QuoteIdentifier(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "提供未加引號識別項在正確的類別目錄的情況下，傳回的正確加上引號的識別碼，其中包含未正確逸出識別項中的任何內嵌的引號的形式。"
  syntax:
    content: public virtual string QuoteIdentifier (string unquotedIdentifier);
    parameters:
    - id: unquotedIdentifier
      type: System.String
      description: "原始的不具引號識別項。"
    return:
      type: System.String
      description: "引號識別項的版本。 內嵌的引號識別碼內的正確逸出。"
  overload: System.Data.Common.DbCommandBuilder.QuoteIdentifier*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommandBuilder.QuotePrefix
  id: QuotePrefix
  parent: System.Data.Common.DbCommandBuilder
  langs:
  - csharp
  name: QuotePrefix
  nameWithType: DbCommandBuilder.QuotePrefix
  fullName: System.Data.Common.DbCommandBuilder.QuotePrefix
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "取得或設定指定資料庫物件 （例如，資料表或資料行） 名稱包含字元，例如空格或語彙的基元時所要使用的開頭字元。"
  remarks: "某些資料來源可能會有物件可以包含字元，例如空格、 逗號和分號。 若要因應這項功能，請使用 QuotePrefix 和<xref:System.Data.Common.DbCommandBuilder.QuoteSuffix%2A>屬性，以指定分隔符號，例如左括號與右括號，將封裝的物件名稱。</xref:System.Data.Common.DbCommandBuilder.QuoteSuffix%2A>      > [!NOTE] > 雖然您無法變更 QuotePrefix 或<xref:System.Data.Common.DbCommandBuilder.QuoteSuffix%2A>內容之後插入、 更新或刪除命令產生後，您可以變更其設定之後呼叫`Update`方法<xref:System.Data.Common.DbDataAdapter>.</xref:System.Data.Common.DbDataAdapter> </xref:System.Data.Common.DbCommandBuilder.QuoteSuffix%2A>"
  syntax:
    content: public virtual string QuotePrefix { get; set; }
    return:
      type: System.String
      description: "若要使用的開頭字元。 預設為空字串。"
  overload: System.Data.Common.DbCommandBuilder.QuotePrefix*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "產生 insert、 update 或 delete 命令之後，就無法變更這個屬性。"
  platform:
  - net462
- uid: System.Data.Common.DbCommandBuilder.QuoteSuffix
  id: QuoteSuffix
  parent: System.Data.Common.DbCommandBuilder
  langs:
  - csharp
  name: QuoteSuffix
  nameWithType: DbCommandBuilder.QuoteSuffix
  fullName: System.Data.Common.DbCommandBuilder.QuoteSuffix
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "取得或設定結束的指定資料庫物件 （例如，資料表或資料行） 名稱包含字元，例如空格或語彙的基元時所要使用的字元。"
  remarks: "某些資料來源可能會有物件可以包含字元，例如空格、 逗號和分號。 若要因應這項功能，請使用<xref:System.Data.Common.DbCommandBuilder.QuotePrefix%2A>和 QuoteSuffix 屬性，以指定分隔符號，例如左括號與右括號，將封裝的物件名稱。</xref:System.Data.Common.DbCommandBuilder.QuotePrefix%2A>      > [!NOTE] > 雖然您無法變更<xref:System.Data.Common.DbCommandBuilder.QuotePrefix%2A>或 QuoteSuffix 屬性之後插入、 更新或刪除命令產生後，您可以變更其設定之後呼叫`Update`方法<xref:System.Data.Common.DbDataAdapter>.</xref:System.Data.Common.DbDataAdapter> </xref:System.Data.Common.DbCommandBuilder.QuotePrefix%2A>"
  syntax:
    content: public virtual string QuoteSuffix { get; set; }
    return:
      type: System.String
      description: "結束的字元或若要使用的字元。 預設為空字串。"
  overload: System.Data.Common.DbCommandBuilder.QuoteSuffix*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommandBuilder.RefreshSchema
  id: RefreshSchema
  parent: System.Data.Common.DbCommandBuilder
  langs:
  - csharp
  name: RefreshSchema()
  nameWithType: DbCommandBuilder.RefreshSchema()
  fullName: System.Data.Common.DbCommandBuilder.RefreshSchema()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "清除與此相關聯的命令<xref href=&quot;System.Data.Common.DbCommandBuilder&quot;> </xref>。"
  remarks: "有效地呼叫 RefreshSchema 方法移除所有<xref:System.Data.Common.DbCommand>所參考物件<xref:System.Data.Common.DbDataAdapter.SelectCommand%2A>， <xref:System.Data.Common.DbDataAdapter.UpdateCommand%2A>， <xref:System.Data.Common.DbDataAdapter.DeleteCommand%2A>，和<xref:System.Data.Common.DbDataAdapter.InsertCommand%2A>屬性。</xref:System.Data.Common.DbDataAdapter.InsertCommand%2A> </xref:System.Data.Common.DbDataAdapter.DeleteCommand%2A> </xref:System.Data.Common.DbDataAdapter.UpdateCommand%2A> </xref:System.Data.Common.DbDataAdapter.SelectCommand%2A> </xref:System.Data.Common.DbCommand>"
  syntax:
    content: public virtual void RefreshSchema ();
    parameters: []
  overload: System.Data.Common.DbCommandBuilder.RefreshSchema*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommandBuilder.RowUpdatingHandler(System.Data.Common.RowUpdatingEventArgs)
  id: RowUpdatingHandler(System.Data.Common.RowUpdatingEventArgs)
  parent: System.Data.Common.DbCommandBuilder
  langs:
  - csharp
  name: RowUpdatingHandler(RowUpdatingEventArgs)
  nameWithType: DbCommandBuilder.RowUpdatingHandler(RowUpdatingEventArgs)
  fullName: System.Data.Common.DbCommandBuilder.RowUpdatingHandler(RowUpdatingEventArgs)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "加入事件處理常式<xref href=&quot;System.Data.OleDb.OleDbDataAdapter.RowUpdating&quot;></xref>事件。"
  syntax:
    content: protected void RowUpdatingHandler (System.Data.Common.RowUpdatingEventArgs rowUpdatingEvent);
    parameters:
    - id: rowUpdatingEvent
      type: System.Data.Common.RowUpdatingEventArgs
      description: "A <xref href=&quot;System.Data.Common.RowUpdatingEventArgs&quot;> </xref>包含事件的相關資訊的執行個體。"
  overload: System.Data.Common.DbCommandBuilder.RowUpdatingHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommandBuilder.SchemaSeparator
  id: SchemaSeparator
  parent: System.Data.Common.DbCommandBuilder
  langs:
  - csharp
  name: SchemaSeparator
  nameWithType: DbCommandBuilder.SchemaSeparator
  fullName: System.Data.Common.DbCommandBuilder.SchemaSeparator
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "取得或設定要用於結構描述識別項與任何其他識別項之間的分隔符號字元。"
  remarks: "一般而言，資料庫伺服器會藉由使用某些字元的識別項分隔的結構描述名稱，表示識別項的結構描述。 例如，SQL Server 會使用冒號，例如建立完整的識別元**人員︰ CustomerName**，其中&quot;Person&quot;是結構描述名稱，而&quot;CustomerName&quot;為識別項。 設定這個屬性可讓開發人員修改此行為。"
  syntax:
    content: public virtual string SchemaSeparator { get; set; }
    return:
      type: System.String
      description: "要用做為結構描述分隔符號的字元。"
  overload: System.Data.Common.DbCommandBuilder.SchemaSeparator*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommandBuilder.SetAllValues
  id: SetAllValues
  parent: System.Data.Common.DbCommandBuilder
  langs:
  - csharp
  name: SetAllValues
  nameWithType: DbCommandBuilder.SetAllValues
  fullName: System.Data.Common.DbCommandBuilder.SetAllValues
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "指定 update 陳述式中的所有資料行值是否內含或只有已變更的。"
  remarks: "UPDATE 陳述式所產生<xref:System.Data.Common.DbCommandBuilder>可以包含更新的相關資訊的資料行，或它可以包含的值已變更，這些資料行的相關資訊。</xref:System.Data.Common.DbCommandBuilder> SetAllValues 屬性設定為`true`會導致產生的 UPDATE 陳述式包含的資料行，不論是否已變更其值。"
  syntax:
    content: public bool SetAllValues { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果 UPDATE 陳述式所產生<xref href=&quot;System.Data.Common.DbCommandBuilder&quot;></xref>包括所有資料行;<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>如果它包含只變更資料行。"
  overload: System.Data.Common.DbCommandBuilder.SetAllValues*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)
  id: SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)
  parent: System.Data.Common.DbCommandBuilder
  langs:
  - csharp
  name: SetRowUpdatingHandler(DbDataAdapter)
  nameWithType: DbCommandBuilder.SetRowUpdatingHandler(DbDataAdapter)
  fullName: System.Data.Common.DbCommandBuilder.SetRowUpdatingHandler(DbDataAdapter)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "註冊<xref href=&quot;System.Data.Common.DbCommandBuilder&quot;></xref>處理<xref href=&quot;System.Data.OleDb.OleDbDataAdapter.RowUpdating&quot;></xref>事件<xref href=&quot;System.Data.Common.DbDataAdapter&quot;> </xref>。"
  remarks: "這個方法僅供使用的提供者撰寫人員建置自訂的命令產生器。 當新<xref:System.Data.Common.DbDataAdapter>加入至<xref:System.Data.Common.DbCommandBuilder>，也會註冊為 DbDataAdapter **RowUpdating**事件。</xref:System.Data.Common.DbCommandBuilder> </xref:System.Data.Common.DbDataAdapter> 如果具有相同再次呼叫此方法<xref:System.Data.Common.DbDataAdapter>、<xref:System.Data.Common.DbCommandBuilder>是取消登錄該 DbDataAdapter **RowUpdating**事件。</xref:System.Data.Common.DbCommandBuilder> </xref:System.Data.Common.DbDataAdapter>"
  syntax:
    content: protected abstract void SetRowUpdatingHandler (System.Data.Common.DbDataAdapter adapter);
    parameters:
    - id: adapter
      type: System.Data.Common.DbDataAdapter
      description: "<xref href=&quot;System.Data.Common.DbDataAdapter&quot;> </xref>用於更新。"
  overload: System.Data.Common.DbCommandBuilder.SetRowUpdatingHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommandBuilder.UnquoteIdentifier(System.String)
  id: UnquoteIdentifier(System.String)
  parent: System.Data.Common.DbCommandBuilder
  langs:
  - csharp
  name: UnquoteIdentifier(String)
  nameWithType: DbCommandBuilder.UnquoteIdentifier(String)
  fullName: System.Data.Common.DbCommandBuilder.UnquoteIdentifier(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "提供引號識別項，會傳回不具引號的正確格式，該識別項，包括不逸出任何內嵌的引號識別項中。"
  syntax:
    content: public virtual string UnquoteIdentifier (string quotedIdentifier);
    parameters:
    - id: quotedIdentifier
      type: System.String
      description: "會將移除其內嵌的引號識別項。"
    return:
      type: System.String
      description: "不具引號的識別碼，與正確未逸出的內嵌引號。"
  overload: System.Data.Common.DbCommandBuilder.UnquoteIdentifier*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.Component
  isExternal: false
  name: System.ComponentModel.Component
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Data.Common.DbCommandBuilder.#ctor
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: DbCommandBuilder()
  nameWithType: DbCommandBuilder.DbCommandBuilder()
  fullName: System.Data.Common.DbCommandBuilder.DbCommandBuilder()
- uid: System.Data.Common.DbCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: ApplyParameterInfo(DbParameter,DataRow,StatementType,Boolean)
  nameWithType: DbCommandBuilder.ApplyParameterInfo(DbParameter,DataRow,StatementType,Boolean)
  fullName: System.Data.Common.DbCommandBuilder.ApplyParameterInfo(DbParameter,DataRow,StatementType,Boolean)
- uid: System.Data.Common.DbParameter
  parent: System.Data.Common
  isExternal: false
  name: DbParameter
  nameWithType: DbParameter
  fullName: System.Data.Common.DbParameter
- uid: System.Data.DataRow
  parent: System.Data
  isExternal: false
  name: DataRow
  nameWithType: DataRow
  fullName: System.Data.DataRow
- uid: System.Data.StatementType
  parent: System.Data
  isExternal: false
  name: StatementType
  nameWithType: StatementType
  fullName: System.Data.StatementType
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Common.DbCommandBuilder.CatalogLocation
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: CatalogLocation
  nameWithType: DbCommandBuilder.CatalogLocation
  fullName: System.Data.Common.DbCommandBuilder.CatalogLocation
- uid: System.Data.Common.CatalogLocation
  parent: System.Data.Common
  isExternal: false
  name: CatalogLocation
  nameWithType: CatalogLocation
  fullName: System.Data.Common.CatalogLocation
- uid: System.Data.Common.DbCommandBuilder.CatalogSeparator
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: CatalogSeparator
  nameWithType: DbCommandBuilder.CatalogSeparator
  fullName: System.Data.Common.DbCommandBuilder.CatalogSeparator
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Common.DbCommandBuilder.ConflictOption
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: ConflictOption
  nameWithType: DbCommandBuilder.ConflictOption
  fullName: System.Data.Common.DbCommandBuilder.ConflictOption
- uid: System.Data.ConflictOption
  parent: System.Data
  isExternal: false
  name: ConflictOption
  nameWithType: ConflictOption
  fullName: System.Data.ConflictOption
- uid: System.Data.Common.DbCommandBuilder.DataAdapter
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: DataAdapter
  nameWithType: DbCommandBuilder.DataAdapter
  fullName: System.Data.Common.DbCommandBuilder.DataAdapter
- uid: System.Data.Common.DbDataAdapter
  parent: System.Data.Common
  isExternal: false
  name: DbDataAdapter
  nameWithType: DbDataAdapter
  fullName: System.Data.Common.DbDataAdapter
- uid: System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: DbCommandBuilder.Dispose(Boolean)
  fullName: System.Data.Common.DbCommandBuilder.Dispose(Boolean)
- uid: System.Data.Common.DbCommandBuilder.GetDeleteCommand
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: GetDeleteCommand()
  nameWithType: DbCommandBuilder.GetDeleteCommand()
  fullName: System.Data.Common.DbCommandBuilder.GetDeleteCommand()
- uid: System.Data.Common.DbCommand
  parent: System.Data.Common
  isExternal: false
  name: DbCommand
  nameWithType: DbCommand
  fullName: System.Data.Common.DbCommand
- uid: System.Data.Common.DbCommandBuilder.GetDeleteCommand(System.Boolean)
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: GetDeleteCommand(Boolean)
  nameWithType: DbCommandBuilder.GetDeleteCommand(Boolean)
  fullName: System.Data.Common.DbCommandBuilder.GetDeleteCommand(Boolean)
- uid: System.Data.Common.DbCommandBuilder.GetInsertCommand
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: GetInsertCommand()
  nameWithType: DbCommandBuilder.GetInsertCommand()
  fullName: System.Data.Common.DbCommandBuilder.GetInsertCommand()
- uid: System.Data.Common.DbCommandBuilder.GetInsertCommand(System.Boolean)
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: GetInsertCommand(Boolean)
  nameWithType: DbCommandBuilder.GetInsertCommand(Boolean)
  fullName: System.Data.Common.DbCommandBuilder.GetInsertCommand(Boolean)
- uid: System.Data.Common.DbCommandBuilder.GetParameterName(System.Int32)
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: GetParameterName(Int32)
  nameWithType: DbCommandBuilder.GetParameterName(Int32)
  fullName: System.Data.Common.DbCommandBuilder.GetParameterName(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.Common.DbCommandBuilder.GetParameterName(System.String)
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: GetParameterName(String)
  nameWithType: DbCommandBuilder.GetParameterName(String)
  fullName: System.Data.Common.DbCommandBuilder.GetParameterName(String)
- uid: System.Data.Common.DbCommandBuilder.GetParameterPlaceholder(System.Int32)
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: GetParameterPlaceholder(Int32)
  nameWithType: DbCommandBuilder.GetParameterPlaceholder(Int32)
  fullName: System.Data.Common.DbCommandBuilder.GetParameterPlaceholder(Int32)
- uid: System.Data.Common.DbCommandBuilder.GetSchemaTable(System.Data.Common.DbCommand)
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: GetSchemaTable(DbCommand)
  nameWithType: DbCommandBuilder.GetSchemaTable(DbCommand)
  fullName: System.Data.Common.DbCommandBuilder.GetSchemaTable(DbCommand)
- uid: System.Data.DataTable
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: System.Data.Common.DbCommandBuilder.GetUpdateCommand
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: GetUpdateCommand()
  nameWithType: DbCommandBuilder.GetUpdateCommand()
  fullName: System.Data.Common.DbCommandBuilder.GetUpdateCommand()
- uid: System.Data.Common.DbCommandBuilder.GetUpdateCommand(System.Boolean)
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: GetUpdateCommand(Boolean)
  nameWithType: DbCommandBuilder.GetUpdateCommand(Boolean)
  fullName: System.Data.Common.DbCommandBuilder.GetUpdateCommand(Boolean)
- uid: System.Data.Common.DbCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: InitializeCommand(DbCommand)
  nameWithType: DbCommandBuilder.InitializeCommand(DbCommand)
  fullName: System.Data.Common.DbCommandBuilder.InitializeCommand(DbCommand)
- uid: System.Data.Common.DbCommandBuilder.QuoteIdentifier(System.String)
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: QuoteIdentifier(String)
  nameWithType: DbCommandBuilder.QuoteIdentifier(String)
  fullName: System.Data.Common.DbCommandBuilder.QuoteIdentifier(String)
- uid: System.Data.Common.DbCommandBuilder.QuotePrefix
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: QuotePrefix
  nameWithType: DbCommandBuilder.QuotePrefix
  fullName: System.Data.Common.DbCommandBuilder.QuotePrefix
- uid: System.Data.Common.DbCommandBuilder.QuoteSuffix
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: QuoteSuffix
  nameWithType: DbCommandBuilder.QuoteSuffix
  fullName: System.Data.Common.DbCommandBuilder.QuoteSuffix
- uid: System.Data.Common.DbCommandBuilder.RefreshSchema
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: RefreshSchema()
  nameWithType: DbCommandBuilder.RefreshSchema()
  fullName: System.Data.Common.DbCommandBuilder.RefreshSchema()
- uid: System.Data.Common.DbCommandBuilder.RowUpdatingHandler(System.Data.Common.RowUpdatingEventArgs)
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: RowUpdatingHandler(RowUpdatingEventArgs)
  nameWithType: DbCommandBuilder.RowUpdatingHandler(RowUpdatingEventArgs)
  fullName: System.Data.Common.DbCommandBuilder.RowUpdatingHandler(RowUpdatingEventArgs)
- uid: System.Data.Common.RowUpdatingEventArgs
  parent: System.Data.Common
  isExternal: false
  name: RowUpdatingEventArgs
  nameWithType: RowUpdatingEventArgs
  fullName: System.Data.Common.RowUpdatingEventArgs
- uid: System.Data.Common.DbCommandBuilder.SchemaSeparator
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: SchemaSeparator
  nameWithType: DbCommandBuilder.SchemaSeparator
  fullName: System.Data.Common.DbCommandBuilder.SchemaSeparator
- uid: System.Data.Common.DbCommandBuilder.SetAllValues
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: SetAllValues
  nameWithType: DbCommandBuilder.SetAllValues
  fullName: System.Data.Common.DbCommandBuilder.SetAllValues
- uid: System.Data.Common.DbCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: SetRowUpdatingHandler(DbDataAdapter)
  nameWithType: DbCommandBuilder.SetRowUpdatingHandler(DbDataAdapter)
  fullName: System.Data.Common.DbCommandBuilder.SetRowUpdatingHandler(DbDataAdapter)
- uid: System.Data.Common.DbCommandBuilder.UnquoteIdentifier(System.String)
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: UnquoteIdentifier(String)
  nameWithType: DbCommandBuilder.UnquoteIdentifier(String)
  fullName: System.Data.Common.DbCommandBuilder.UnquoteIdentifier(String)
- uid: System.Data.Common.DbCommandBuilder.#ctor*
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: DbCommandBuilder
  nameWithType: DbCommandBuilder.DbCommandBuilder
- uid: System.Data.Common.DbCommandBuilder.ApplyParameterInfo*
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: ApplyParameterInfo
  nameWithType: DbCommandBuilder.ApplyParameterInfo
- uid: System.Data.Common.DbCommandBuilder.CatalogLocation*
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: CatalogLocation
  nameWithType: DbCommandBuilder.CatalogLocation
- uid: System.Data.Common.DbCommandBuilder.CatalogSeparator*
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: CatalogSeparator
  nameWithType: DbCommandBuilder.CatalogSeparator
- uid: System.Data.Common.DbCommandBuilder.ConflictOption*
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: ConflictOption
  nameWithType: DbCommandBuilder.ConflictOption
- uid: System.Data.Common.DbCommandBuilder.DataAdapter*
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: DataAdapter
  nameWithType: DbCommandBuilder.DataAdapter
- uid: System.Data.Common.DbCommandBuilder.Dispose*
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: Dispose
  nameWithType: DbCommandBuilder.Dispose
- uid: System.Data.Common.DbCommandBuilder.GetDeleteCommand*
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: GetDeleteCommand
  nameWithType: DbCommandBuilder.GetDeleteCommand
- uid: System.Data.Common.DbCommandBuilder.GetInsertCommand*
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: GetInsertCommand
  nameWithType: DbCommandBuilder.GetInsertCommand
- uid: System.Data.Common.DbCommandBuilder.GetParameterName*
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: GetParameterName
  nameWithType: DbCommandBuilder.GetParameterName
- uid: System.Data.Common.DbCommandBuilder.GetParameterPlaceholder*
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: GetParameterPlaceholder
  nameWithType: DbCommandBuilder.GetParameterPlaceholder
- uid: System.Data.Common.DbCommandBuilder.GetSchemaTable*
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: GetSchemaTable
  nameWithType: DbCommandBuilder.GetSchemaTable
- uid: System.Data.Common.DbCommandBuilder.GetUpdateCommand*
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: GetUpdateCommand
  nameWithType: DbCommandBuilder.GetUpdateCommand
- uid: System.Data.Common.DbCommandBuilder.InitializeCommand*
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: InitializeCommand
  nameWithType: DbCommandBuilder.InitializeCommand
- uid: System.Data.Common.DbCommandBuilder.QuoteIdentifier*
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: QuoteIdentifier
  nameWithType: DbCommandBuilder.QuoteIdentifier
- uid: System.Data.Common.DbCommandBuilder.QuotePrefix*
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: QuotePrefix
  nameWithType: DbCommandBuilder.QuotePrefix
- uid: System.Data.Common.DbCommandBuilder.QuoteSuffix*
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: QuoteSuffix
  nameWithType: DbCommandBuilder.QuoteSuffix
- uid: System.Data.Common.DbCommandBuilder.RefreshSchema*
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: RefreshSchema
  nameWithType: DbCommandBuilder.RefreshSchema
- uid: System.Data.Common.DbCommandBuilder.RowUpdatingHandler*
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: RowUpdatingHandler
  nameWithType: DbCommandBuilder.RowUpdatingHandler
- uid: System.Data.Common.DbCommandBuilder.SchemaSeparator*
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: SchemaSeparator
  nameWithType: DbCommandBuilder.SchemaSeparator
- uid: System.Data.Common.DbCommandBuilder.SetAllValues*
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: SetAllValues
  nameWithType: DbCommandBuilder.SetAllValues
- uid: System.Data.Common.DbCommandBuilder.SetRowUpdatingHandler*
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: SetRowUpdatingHandler
  nameWithType: DbCommandBuilder.SetRowUpdatingHandler
- uid: System.Data.Common.DbCommandBuilder.UnquoteIdentifier*
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: UnquoteIdentifier
  nameWithType: DbCommandBuilder.UnquoteIdentifier
