### YamlMime:ManagedReference
items:
- uid: System.Windows.Thickness
  id: Thickness
  children:
  - System.Windows.Thickness.#ctor(System.Double)
  - System.Windows.Thickness.#ctor(System.Double,System.Double,System.Double,System.Double)
  - System.Windows.Thickness.Bottom
  - System.Windows.Thickness.Equals(System.Object)
  - System.Windows.Thickness.Equals(System.Windows.Thickness)
  - System.Windows.Thickness.GetHashCode
  - System.Windows.Thickness.Left
  - System.Windows.Thickness.op_Equality(System.Windows.Thickness,System.Windows.Thickness)
  - System.Windows.Thickness.op_Inequality(System.Windows.Thickness,System.Windows.Thickness)
  - System.Windows.Thickness.Right
  - System.Windows.Thickness.Top
  - System.Windows.Thickness.ToString
  langs:
  - csharp
  name: Thickness
  nameWithType: Thickness
  fullName: System.Windows.Thickness
  type: Struct
  summary: "描述矩形周圍框架的粗細。 四個<xref:System.Double>值描述<> *>， <> </> *>， <> </> *>，以及<> *> 側邊的矩形中，分別。</xref:System.Double>"
  remarks: "您可以指定粗細值有兩種。 如果您將四個<xref:System.Double>結構的值，它們代表<xref:System.Windows.Thickness.Left%2A>， <xref:System.Windows.Thickness.Top%2A>，<xref:System.Windows.Thickness.Right%2A>和<xref:System.Windows.Thickness.Bottom%2A>側邊，分別，這個周框。</xref:System.Windows.Thickness.Bottom%2A> </xref:System.Windows.Thickness.Right%2A> </xref:System.Windows.Thickness.Top%2A> </xref:System.Windows.Thickness.Left%2A> </xref:System.Double> 您也可以提供單一值，適用於統一的值，這個周框的四個邊。      <a name=&quot;xamlAttributeUsage_Thickness&quot;></a># # XAML 屬性使用方式```   <object property=&quot;left&quot;/>   - or -   <object property=&quot;left,top&quot;/>   - or -   <object property=&quot; left,top,right,bottom&quot; ... />   ``` <a name=&quot;xamlValues_Thickness&quot;> </a> # # XAML 值*左*框架中，為所述的左邊的緣<xref:System.Double>值，指定[!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]量值，或為*qualifiedDouble* （請參閱下文）。</xref:System.Double>       如果只指定單一量值，該量值會套用到所有的左邊、 上方、 右方、 下方的線條粗細的值。 如果只指定一組的左邊、 上方的量值，這些量值用於對稱粗細︰ 左的值用於權限;在最高值用於底部。       *top*框架中，為所述的上邊緣<xref:System.Double>值，指定[!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]量值，或為*qualifiedDouble* （請參閱下文）。</xref:System.Double> 如果只指定一組的左邊、 上方的量值，這些量值用於對稱粗細︰ 左的值用於權限;在最高值用於底部。       *右*框架中，為所述的右邊緣<xref:System.Double>值，指定[!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]量值，或為*qualifiedDouble* （請參閱下文）。</xref:System.Double> 如果未指定左側，會使用左的值。       *底部*框架中，為所述的下邊緣<xref:System.Double>值，指定[!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]量值，或為*qualifiedDouble* （請參閱下文）。</xref:System.Double> 如果未指定左側，會使用左的值。       *qualifiedDouble* A *double*值與上述的任何量值，後面接著下列單元宣告字串的其中之一︰ `px`， `in`， `cm`， `pt`。       `px`（預設值） [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)] `in`英吋; 1in = = 96px`cm`是公釐。 1cm==(96/2.54) px`pt`點; 1pt==(96/72) px > [!NOTE] > 值不需要包含小數點明確時指定為字串。        字串&quot;1&quot;中提供[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]判斷值為 1.0，當程式碼中參考的值。"
  example:
  - "The following example shows how to create an instance of a Thickness structure and set its properties by using [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)] and code.  \n  \n [!code-cs[ThicknessStruct#2](~/add/codesnippet/csharp/ThicknessSamp/ThicknessSamp.cs#2)]\n [!code-xml[ThicknessStruct#2](~/add/codesnippet/xaml/ThicknessXAML/default.xaml#2)]\n [!code-vb[ThicknessStruct#2](~/add/codesnippet/visualbasic/ThicknessSampVB/ThicknessSampVB.vb#2)]"
  syntax:
    content: >-
      [System.ComponentModel.TypeConverter(typeof(System.Windows.ThicknessConverter))]

      [System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)]

      public struct Thickness : IEquatable<System.Windows.Thickness>
  inheritance:
  - System.ValueType
  implements:
  - System.IEquatable<System.Windows.Thickness>
  platform:
  - net462
- uid: System.Windows.Thickness.#ctor(System.Double)
  id: '#ctor(System.Double)'
  parent: System.Windows.Thickness
  langs:
  - csharp
  name: Thickness(Double)
  nameWithType: Thickness.Thickness(Double)
  fullName: System.Windows.Thickness.Thickness(Double)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "初始化的新執行個體<xref href=&quot;System.Windows.Thickness&quot;></xref>每一端具有指定的統一長度結構。"
  syntax:
    content: public Thickness (double uniformLength);
    parameters:
    - id: uniformLength
      type: System.Double
      description: "統一的長度，套用至所有的四個邊，這個周框。"
  overload: System.Windows.Thickness.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Thickness.#ctor(System.Double,System.Double,System.Double,System.Double)
  id: '#ctor(System.Double,System.Double,System.Double,System.Double)'
  parent: System.Windows.Thickness
  langs:
  - csharp
  name: Thickness(Double,Double,Double,Double)
  nameWithType: Thickness.Thickness(Double,Double,Double,Double)
  fullName: System.Windows.Thickness.Thickness(Double,Double,Double,Double)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "初始化的新執行個體<xref href=&quot;System.Windows.Thickness&quot;></xref>具有特定長度結構 (當做提供<xref:System.Double>) 套用至矩形的每一端。</xref:System.Double>"
  remarks: ''
  example:
  - "The following example shows how to create an instance of a <xref:System.Windows.Thickness> structure by using code.  \n  \n [!code-cs[ThicknessStruct#1](~/add/codesnippet/csharp/ThicknessSamp/ThicknessSamp.cs#1)]\n [!code-xml[ThicknessStruct#1](~/add/codesnippet/xaml/ThicknessXAML/default.xaml#1)]\n [!code-vb[ThicknessStruct#1](~/add/codesnippet/visualbasic/ThicknessSampVB/ThicknessSampVB.vb#1)]"
  syntax:
    content: public Thickness (double left, double top, double right, double bottom);
    parameters:
    - id: left
      type: System.Double
      description: "矩形左邊的粗細。"
    - id: top
      type: System.Double
      description: "矩形上邊的粗細。"
    - id: right
      type: System.Double
      description: "矩形右邊的粗細"
    - id: bottom
      type: System.Double
      description: "矩形下邊的粗細。"
  overload: System.Windows.Thickness.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Thickness.Bottom
  id: Bottom
  parent: System.Windows.Thickness
  langs:
  - csharp
  name: Bottom
  nameWithType: Thickness.Bottom
  fullName: System.Windows.Thickness.Bottom
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "取得或設定週框矩形下邊的像素為單位的寬度。"
  remarks: ''
  example:
  - "The following example shows how to set the value of the Bottom property by using [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)] and code.  \n  \n [!code-cs[ThicknessStruct#2](~/add/codesnippet/csharp/ThicknessSamp/ThicknessSamp.cs#2)]\n [!code-xml[ThicknessStruct#2](~/add/codesnippet/xaml/ThicknessXAML/default.xaml#2)]\n [!code-vb[ThicknessStruct#2](~/add/codesnippet/visualbasic/ThicknessSampVB/ThicknessSampVB.vb#2)]"
  syntax:
    content: public double Bottom { get; set; }
    return:
      type: System.Double
      description: "A<xref:System.Double>代表的寬度，單位為像素的這個執行個體的週框矩形下邊<xref href=&quot;System.Windows.Thickness&quot;> </xref>。</xref:System.Double> 像素等於 1/96 英吋。 預設值為 0。"
  overload: System.Windows.Thickness.Bottom*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Thickness.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Windows.Thickness
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: Thickness.Equals(Object)
  fullName: System.Windows.Thickness.Equals(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "比較這個<xref href=&quot;System.Windows.Thickness&quot;></xref>到另一個結構<xref:System.Object>是否相等。</xref:System.Object>"
  remarks: "由於精確度誤差可以累積值上運作時，可能會失敗測試在邏輯上相等的兩個浮點值相等。"
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "要比較的物件。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果兩個物件相等。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Thickness.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Thickness.Equals(System.Windows.Thickness)
  id: Equals(System.Windows.Thickness)
  parent: System.Windows.Thickness
  langs:
  - csharp
  name: Equals(Thickness)
  nameWithType: Thickness.Equals(Thickness)
  fullName: System.Windows.Thickness.Equals(Thickness)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "比較這個<xref href=&quot;System.Windows.Thickness&quot;></xref>到另一個結構<xref href=&quot;System.Windows.Thickness&quot;></xref>結構是否相等。"
  remarks: "測試相等或不等比較兩個邏輯上相等的浮點數值可能會有效位數可以累積值上運作時的錯誤而失敗。"
  syntax:
    content: public bool Equals (System.Windows.Thickness thickness);
    parameters:
    - id: thickness
      type: System.Windows.Thickness
      description: "執行個體<xref href=&quot;System.Windows.Thickness&quot;></xref>比較是否相等。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果兩個執行個體<xref href=&quot;System.Windows.Thickness&quot;></xref>相等; 否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Thickness.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Thickness.GetHashCode
  id: GetHashCode
  parent: System.Windows.Thickness
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: Thickness.GetHashCode()
  fullName: System.Windows.Thickness.GetHashCode()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "傳回結構的雜湊碼。"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "這個執行個體的雜湊碼<xref href=&quot;System.Windows.Thickness&quot;> </xref>。"
  overload: System.Windows.Thickness.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Thickness.Left
  id: Left
  parent: System.Windows.Thickness
  langs:
  - csharp
  name: Left
  nameWithType: Thickness.Left
  fullName: System.Windows.Thickness.Left
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "取得或設定像素為單位，這個周框左邊的寬度。"
  remarks: ''
  example:
  - "The following example shows how to set the value of the Left property by using [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)] and code.  \n  \n [!code-cs[ThicknessStruct#2](~/add/codesnippet/csharp/ThicknessSamp/ThicknessSamp.cs#2)]\n [!code-xml[ThicknessStruct#2](~/add/codesnippet/xaml/ThicknessXAML/default.xaml#2)]\n [!code-vb[ThicknessStruct#2](~/add/codesnippet/visualbasic/ThicknessSampVB/ThicknessSampVB.vb#2)]"
  syntax:
    content: public double Left { get; set; }
    return:
      type: System.Double
      description: "A<xref:System.Double>代表的寬度，單位為像素的這個執行個體，這個周框左邊<xref href=&quot;System.Windows.Thickness&quot;> </xref>。</xref:System.Double> 像素等於 1/96 英吋。 預設值為 0。"
  overload: System.Windows.Thickness.Left*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Thickness.op_Equality(System.Windows.Thickness,System.Windows.Thickness)
  id: op_Equality(System.Windows.Thickness,System.Windows.Thickness)
  parent: System.Windows.Thickness
  langs:
  - csharp
  name: op_Equality(Thickness,Thickness)
  nameWithType: Thickness.op_Equality(Thickness,Thickness)
  fullName: System.Windows.Thickness.op_Equality(Thickness,Thickness)
  type: Operator
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "比較兩個值<xref href=&quot;System.Windows.Thickness&quot;></xref>結構是否相等。"
  remarks: "由於精確度誤差可以累積值上運作時，可能會失敗測試在邏輯上相等的兩個浮點值相等。"
  syntax:
    content: public static bool op_Equality (System.Windows.Thickness t1, System.Windows.Thickness t2);
    parameters:
    - id: t1
      type: System.Windows.Thickness
      description: "要比較的第一個結構。"
    - id: t2
      type: System.Windows.Thickness
      description: "要比較的其他結構。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果兩個執行個體<xref href=&quot;System.Windows.Thickness&quot;></xref>相等; 否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Thickness.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Thickness.op_Inequality(System.Windows.Thickness,System.Windows.Thickness)
  id: op_Inequality(System.Windows.Thickness,System.Windows.Thickness)
  parent: System.Windows.Thickness
  langs:
  - csharp
  name: op_Inequality(Thickness,Thickness)
  nameWithType: Thickness.op_Inequality(Thickness,Thickness)
  fullName: System.Windows.Thickness.op_Inequality(Thickness,Thickness)
  type: Operator
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "比較兩個<xref href=&quot;System.Windows.Thickness&quot;></xref>結構是否不相等。"
  remarks: "測試相等或不等比較兩個邏輯上相等的浮點數值可能會有效位數可以累積值上運作時的錯誤而失敗。"
  syntax:
    content: public static bool op_Inequality (System.Windows.Thickness t1, System.Windows.Thickness t2);
    parameters:
    - id: t1
      type: System.Windows.Thickness
      description: "要比較的第一個結構。"
    - id: t2
      type: System.Windows.Thickness
      description: "要比較的其他結構。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果兩個執行個體<xref href=&quot;System.Windows.Thickness&quot;></xref>不相等，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Thickness.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Thickness.Right
  id: Right
  parent: System.Windows.Thickness
  langs:
  - csharp
  name: Right
  nameWithType: Thickness.Right
  fullName: System.Windows.Thickness.Right
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "取得或設定寬度，以像素，這個周框的右端。"
  remarks: ''
  example:
  - "The following example shows how to set the value of the Right property by using [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)] and code.  \n  \n [!code-cs[ThicknessStruct#2](~/add/codesnippet/csharp/ThicknessSamp/ThicknessSamp.cs#2)]\n [!code-xml[ThicknessStruct#2](~/add/codesnippet/xaml/ThicknessXAML/default.xaml#2)]\n [!code-vb[ThicknessStruct#2](~/add/codesnippet/visualbasic/ThicknessSampVB/ThicknessSampVB.vb#2)]"
  syntax:
    content: public double Right { get; set; }
    return:
      type: System.Double
      description: "A<xref:System.Double>代表的寬度，以像素的這個執行個體，這個周框的右端<xref href=&quot;System.Windows.Thickness&quot;> </xref>。</xref:System.Double> 像素等於 1/96 英吋。 預設值為 0。"
  overload: System.Windows.Thickness.Right*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Thickness.Top
  id: Top
  parent: System.Windows.Thickness
  langs:
  - csharp
  name: Top
  nameWithType: Thickness.Top
  fullName: System.Windows.Thickness.Top
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "取得或設定週框矩形上邊的像素為單位的寬度。"
  remarks: ''
  example:
  - "The following example shows how to set the value of the Top property by using [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)] and code.  \n  \n [!code-cs[ThicknessStruct#2](~/add/codesnippet/csharp/ThicknessSamp/ThicknessSamp.cs#2)]\n [!code-xml[ThicknessStruct#2](~/add/codesnippet/xaml/ThicknessXAML/default.xaml#2)]\n [!code-vb[ThicknessStruct#2](~/add/codesnippet/visualbasic/ThicknessSampVB/ThicknessSampVB.vb#2)]"
  syntax:
    content: public double Top { get; set; }
    return:
      type: System.Double
      description: "A<xref:System.Double>代表的寬度，單位為像素的這個執行個體的週框矩形上邊<xref href=&quot;System.Windows.Thickness&quot;> </xref>。</xref:System.Double> 像素等於 1/96 英吋。 預設值為 0。"
  overload: System.Windows.Thickness.Top*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Thickness.ToString
  id: ToString
  parent: System.Windows.Thickness
  langs:
  - csharp
  name: ToString()
  nameWithType: Thickness.ToString()
  fullName: System.Windows.Thickness.ToString()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "傳回的字串表示法<xref href=&quot;System.Windows.Thickness&quot;></xref>結構。"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "A<xref:System.String>表示<xref href=&quot;System.Windows.Thickness&quot;></xref>值。</xref:System.String>"
  overload: System.Windows.Thickness.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.Windows.Thickness.#ctor(System.Double)
  parent: System.Windows.Thickness
  isExternal: false
  name: Thickness(Double)
  nameWithType: Thickness.Thickness(Double)
  fullName: System.Windows.Thickness.Thickness(Double)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Windows.Thickness.#ctor(System.Double,System.Double,System.Double,System.Double)
  parent: System.Windows.Thickness
  isExternal: false
  name: Thickness(Double,Double,Double,Double)
  nameWithType: Thickness.Thickness(Double,Double,Double,Double)
  fullName: System.Windows.Thickness.Thickness(Double,Double,Double,Double)
- uid: System.Windows.Thickness.Bottom
  parent: System.Windows.Thickness
  isExternal: false
  name: Bottom
  nameWithType: Thickness.Bottom
  fullName: System.Windows.Thickness.Bottom
- uid: System.Windows.Thickness.Equals(System.Object)
  parent: System.Windows.Thickness
  isExternal: false
  name: Equals(Object)
  nameWithType: Thickness.Equals(Object)
  fullName: System.Windows.Thickness.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Thickness.Equals(System.Windows.Thickness)
  parent: System.Windows.Thickness
  isExternal: false
  name: Equals(Thickness)
  nameWithType: Thickness.Equals(Thickness)
  fullName: System.Windows.Thickness.Equals(Thickness)
- uid: System.Windows.Thickness
  parent: System.Windows
  isExternal: false
  name: Thickness
  nameWithType: Thickness
  fullName: System.Windows.Thickness
- uid: System.Windows.Thickness.GetHashCode
  parent: System.Windows.Thickness
  isExternal: false
  name: GetHashCode()
  nameWithType: Thickness.GetHashCode()
  fullName: System.Windows.Thickness.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Thickness.Left
  parent: System.Windows.Thickness
  isExternal: false
  name: Left
  nameWithType: Thickness.Left
  fullName: System.Windows.Thickness.Left
- uid: System.Windows.Thickness.op_Equality(System.Windows.Thickness,System.Windows.Thickness)
  parent: System.Windows.Thickness
  isExternal: false
  name: op_Equality(Thickness,Thickness)
  nameWithType: Thickness.op_Equality(Thickness,Thickness)
  fullName: System.Windows.Thickness.op_Equality(Thickness,Thickness)
- uid: System.Windows.Thickness.op_Inequality(System.Windows.Thickness,System.Windows.Thickness)
  parent: System.Windows.Thickness
  isExternal: false
  name: op_Inequality(Thickness,Thickness)
  nameWithType: Thickness.op_Inequality(Thickness,Thickness)
  fullName: System.Windows.Thickness.op_Inequality(Thickness,Thickness)
- uid: System.Windows.Thickness.Right
  parent: System.Windows.Thickness
  isExternal: false
  name: Right
  nameWithType: Thickness.Right
  fullName: System.Windows.Thickness.Right
- uid: System.Windows.Thickness.Top
  parent: System.Windows.Thickness
  isExternal: false
  name: Top
  nameWithType: Thickness.Top
  fullName: System.Windows.Thickness.Top
- uid: System.Windows.Thickness.ToString
  parent: System.Windows.Thickness
  isExternal: false
  name: ToString()
  nameWithType: Thickness.ToString()
  fullName: System.Windows.Thickness.ToString()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Thickness.#ctor*
  parent: System.Windows.Thickness
  isExternal: false
  name: Thickness
  nameWithType: Thickness.Thickness
- uid: System.Windows.Thickness.Bottom*
  parent: System.Windows.Thickness
  isExternal: false
  name: Bottom
  nameWithType: Thickness.Bottom
- uid: System.Windows.Thickness.Equals*
  parent: System.Windows.Thickness
  isExternal: false
  name: Equals
  nameWithType: Thickness.Equals
- uid: System.Windows.Thickness.GetHashCode*
  parent: System.Windows.Thickness
  isExternal: false
  name: GetHashCode
  nameWithType: Thickness.GetHashCode
- uid: System.Windows.Thickness.Left*
  parent: System.Windows.Thickness
  isExternal: false
  name: Left
  nameWithType: Thickness.Left
- uid: System.Windows.Thickness.op_Equality*
  parent: System.Windows.Thickness
  isExternal: false
  name: op_Equality
  nameWithType: Thickness.op_Equality
- uid: System.Windows.Thickness.op_Inequality*
  parent: System.Windows.Thickness
  isExternal: false
  name: op_Inequality
  nameWithType: Thickness.op_Inequality
- uid: System.Windows.Thickness.Right*
  parent: System.Windows.Thickness
  isExternal: false
  name: Right
  nameWithType: Thickness.Right
- uid: System.Windows.Thickness.Top*
  parent: System.Windows.Thickness
  isExternal: false
  name: Top
  nameWithType: Thickness.Top
- uid: System.Windows.Thickness.ToString*
  parent: System.Windows.Thickness
  isExternal: false
  name: ToString
  nameWithType: Thickness.ToString
