### YamlMime:ManagedReference
items:
- uid: System.Media.SoundPlayer
  id: SoundPlayer
  children:
  - System.Media.SoundPlayer.#ctor
  - System.Media.SoundPlayer.#ctor(System.IO.Stream)
  - System.Media.SoundPlayer.#ctor(System.String)
  - System.Media.SoundPlayer.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Media.SoundPlayer.IsLoadCompleted
  - System.Media.SoundPlayer.Load
  - System.Media.SoundPlayer.LoadAsync
  - System.Media.SoundPlayer.LoadCompleted
  - System.Media.SoundPlayer.LoadTimeout
  - System.Media.SoundPlayer.OnLoadCompleted(System.ComponentModel.AsyncCompletedEventArgs)
  - System.Media.SoundPlayer.OnSoundLocationChanged(System.EventArgs)
  - System.Media.SoundPlayer.OnStreamChanged(System.EventArgs)
  - System.Media.SoundPlayer.Play
  - System.Media.SoundPlayer.PlayLooping
  - System.Media.SoundPlayer.PlaySync
  - System.Media.SoundPlayer.SoundLocation
  - System.Media.SoundPlayer.SoundLocationChanged
  - System.Media.SoundPlayer.Stop
  - System.Media.SoundPlayer.Stream
  - System.Media.SoundPlayer.StreamChanged
  - System.Media.SoundPlayer.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Media.SoundPlayer.Tag
  langs:
  - csharp
  name: SoundPlayer
  nameWithType: SoundPlayer
  fullName: System.Media.SoundPlayer
  type: Class
  summary: "控制項播放的.wav 檔案中的音效。"
  remarks: "SoundPlayer 類別提供一個簡單的介面，來載入和播放.wav 檔案。 SoundPlayer 類別支援的檔案路徑，URL 中，從載入.wav 檔案<xref:System.IO.Stream>包含.wav 檔案或包含.wav 檔案內嵌的資源。</xref:System.IO.Stream>       若要播放聲音，使用 SoundPlayer 類別，設定 SoundPlayer 與.wav 檔案的路徑以及呼叫播放方法之一。 您可以識別.wav 檔案播放使用其中一種建構函式，或藉由設定 <xref:System.Media.SoundPlayer.SoundLocation%2A>或<xref:System.Media.SoundPlayer.Stream%2A>屬性。</xref:System.Media.SoundPlayer.Stream%2A> </xref:System.Media.SoundPlayer.SoundLocation%2A> 可以使用其中一種負載方法播放之前載入的檔案，或可以延後載入，直到其中一種播放方法呼叫。 SoundPlayer 設定為載入中的.wav 檔案<xref:System.IO.Stream>或 URL 必須.wav 檔案載入記憶體之前開始播放。</xref:System.IO.Stream>       您可以載入或播放.wav 檔案，以同步或非同步。 如果您呼叫同步的負載，或播放方法，呼叫的執行緒會等到方法傳回時，可能會導致中斷的繪製和其他事件。 呼叫非同步載入或播放方法可讓呼叫執行緒能夠繼續使用不中斷。 如需非同步方法呼叫的詳細資訊，請參閱[How to︰ 在背景執行作業](~/add/includes/ajax-current-ext-md.md)。       當 SoundPlayer 完成載入.wav 檔案時，便會產生<xref:System.Media.SoundPlayer.LoadCompleted>事件。</xref:System.Media.SoundPlayer.LoadCompleted> 您可以檢查<xref:System.ComponentModel.AsyncCompletedEventArgs>在事件處理常式來判斷是否載入成功或失敗。</xref:System.ComponentModel.AsyncCompletedEventArgs> <xref:System.Media.SoundPlayer.SoundLocationChanged>音訊的來源設定為新的檔案路徑或 URL 時，就會引發事件。</xref:System.Media.SoundPlayer.SoundLocationChanged> <xref:System.Media.SoundPlayer.StreamChanged>音訊的來源會設定為新的<xref:System.IO.Stream>。</xref:System.IO.Stream>時引發事件</xref:System.Media.SoundPlayer.StreamChanged> 如需處理事件的詳細資訊，請參閱[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。       如需 SoundPlayer 的詳細資訊，請參閱[SoundPlayer 類別概觀](~/add/includes/ajax-current-ext-md.md)。      > [!NOTE] > SoundPlayer 類別不能播放其他檔案類型，例如.wma 或.mp3。 如果您想要播放其他檔案類型，您可以使用 Windows Media Player 控制項。 如需詳細資訊，請參閱[在.NET Framework 方案中使用 Windows Media Player 控制項](http://go.microsoft.com/fwlink/?LinkId=131267)和[Windows Media Player 物件模型參考適用於 Visual Basic.NET 和 C#](http://go.microsoft.com/fwlink/?LinkId=131269) Windows Media Player SDK 中。"
  example:
  - "The following code example demonstrates the use of the SoundPlayer class for playing .wav files from a local path or a Uniform Resource Identifier (URI).  \n  \n [!code-vb[System.Windows.Forms.Sound#1](~/add/codesnippet/visualbasic/t-system.media.soundplayer_1.vb)]\n [!code-cpp[System.Windows.Forms.Sound#1](~/add/codesnippet/cpp/t-system.media.soundplayer_1.cpp)]\n [!code-cs[System.Windows.Forms.Sound#1](~/add/codesnippet/csharp/t-system.media.soundplayer_1.cs)]"
  syntax:
    content: >-
      [System.ComponentModel.ToolboxItem(false)]

      public class SoundPlayer : System.ComponentModel.Component, System.Runtime.Serialization.ISerializable
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  implements:
  - System.Runtime.Serialization.ISerializable
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Dispose(System.Boolean)
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Media.SoundPlayer.#ctor
  id: '#ctor'
  parent: System.Media.SoundPlayer
  langs:
  - csharp
  name: SoundPlayer()
  nameWithType: SoundPlayer.SoundPlayer()
  fullName: System.Media.SoundPlayer.SoundPlayer()
  type: Constructor
  assemblies:
  - System
  namespace: System.Media
  summary: "初始化的新執行個體<xref href=&quot;System.Media.SoundPlayer&quot;></xref>類別。"
  remarks: "這個建構函式初始化<xref:System.Media.SoundPlayer>但沒有音訊的來源。</xref:System.Media.SoundPlayer> 設定與音訊來源路徑，直到<xref:System.Media.SoundPlayer>會播放嗶聲音效其中一個播放方法呼叫時。</xref:System.Media.SoundPlayer>"
  syntax:
    content: public SoundPlayer ();
    parameters: []
  overload: System.Media.SoundPlayer.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Media.SoundPlayer.#ctor(System.IO.Stream)
  id: '#ctor(System.IO.Stream)'
  parent: System.Media.SoundPlayer
  langs:
  - csharp
  name: SoundPlayer(Stream)
  nameWithType: SoundPlayer.SoundPlayer(Stream)
  fullName: System.Media.SoundPlayer.SoundPlayer(Stream)
  type: Constructor
  assemblies:
  - System
  namespace: System.Media
  summary: "初始化的新執行個體<xref href=&quot;System.Media.SoundPlayer&quot;></xref>類別，並附加內指定<xref:System.IO.Stream>.</xref:System.IO.Stream> .wav 檔案"
  remarks: "<xref:System.IO.Stream>傳遞至`stream`參數應該是<xref:System.IO.Stream>包含.wav 檔案。</xref:System.IO.Stream> </xref:System.IO.Stream> 所傳回的資料<xref:System.IO.Stream.Read%2A>方法<xref:System.IO.Stream>應該是.wav 檔案內的資料。</xref:System.IO.Stream> </xref:System.IO.Stream.Read%2A>"
  syntax:
    content: public SoundPlayer (System.IO.Stream stream);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "A <xref:System.IO.Stream>.wav 檔案。</xref:System.IO.Stream>"
  overload: System.Media.SoundPlayer.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Media.SoundPlayer.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Media.SoundPlayer
  langs:
  - csharp
  name: SoundPlayer(String)
  nameWithType: SoundPlayer.SoundPlayer(String)
  fullName: System.Media.SoundPlayer.SoundPlayer(String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Media
  summary: "初始化的新執行個體<xref href=&quot;System.Media.SoundPlayer&quot;></xref>類別，並附加指定的.wav 檔案。"
  remarks: "將字串傳遞至`soundLocation`參數可以是檔案路徑或.wav 檔案的 URL。 如果路徑或 URL 不正確，<xref:System.Media.SoundPlayer>仍會在負載的建構，但後續呼叫，或播放方法將會失敗。</xref:System.Media.SoundPlayer>"
  syntax:
    content: public SoundPlayer (string soundLocation);
    parameters:
    - id: soundLocation
      type: System.String
      description: "要載入之.wav 檔案的位置。"
  overload: System.Media.SoundPlayer.#ctor*
  exceptions:
  - type: System.UriFormatException
    commentId: T:System.UriFormatException
    description: "所指定的 URL 值<code> soundLocation </code>無法解析。"
  platform:
  - net462
- uid: System.Media.SoundPlayer.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.Media.SoundPlayer
  langs:
  - csharp
  name: SoundPlayer(SerializationInfo,StreamingContext)
  nameWithType: SoundPlayer.SoundPlayer(SerializationInfo,StreamingContext)
  fullName: System.Media.SoundPlayer.SoundPlayer(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - System
  namespace: System.Media
  summary: "初始化的新執行個體<xref href=&quot;System.Media.SoundPlayer&quot;></xref>類別。"
  syntax:
    content: protected SoundPlayer (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: serializationInfo
      type: System.Runtime.Serialization.SerializationInfo
      description: "<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref>来用於還原序列化。"
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "要用於還原序列化的目的地。"
  overload: System.Media.SoundPlayer.#ctor*
  exceptions:
  - type: System.UriFormatException
    commentId: T:System.UriFormatException
    description: "<xref:System.Media.SoundPlayer.SoundLocation*>中所指定<code> serializationInfo </code>無法解析。</xref:System.Media.SoundPlayer.SoundLocation*>"
  platform:
  - net462
- uid: System.Media.SoundPlayer.IsLoadCompleted
  id: IsLoadCompleted
  parent: System.Media.SoundPlayer
  langs:
  - csharp
  name: IsLoadCompleted
  nameWithType: SoundPlayer.IsLoadCompleted
  fullName: System.Media.SoundPlayer.IsLoadCompleted
  type: Property
  assemblies:
  - System
  namespace: System.Media
  summary: "取得值，指出是否已成功完成.wav 檔載入。"
  syntax:
    content: public bool IsLoadCompleted { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果載入.wav 檔案;<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>如果尚未載入.wav 檔案。"
  overload: System.Media.SoundPlayer.IsLoadCompleted*
  exceptions: []
  platform:
  - net462
- uid: System.Media.SoundPlayer.Load
  id: Load
  parent: System.Media.SoundPlayer
  langs:
  - csharp
  name: Load()
  nameWithType: SoundPlayer.Load()
  fullName: System.Media.SoundPlayer.Load()
  type: Method
  assemblies:
  - System
  namespace: System.Media
  summary: "以同步方式載入音效。"
  remarks: "Load 方法載入.wav 檔案，防止執行緒處理其他訊息負載完成之前，使用目前的執行緒。      > [!CAUTION] > 的 Load 方法可能產生延遲載入大型.wav 檔案時發生。 此外，在載入完成之前，都會被封鎖繪製和其他事件。 使用<xref:System.Media.SoundPlayer.LoadAsync%2A>方法來以非同步方式載入音效可讓呼叫執行緒能夠繼續使用不中斷。</xref:System.Media.SoundPlayer.LoadAsync%2A>       這個方法會引發<xref:System.Media.SoundPlayer.LoadCompleted>事件載入時完成，即使負載不成功。</xref:System.Media.SoundPlayer.LoadCompleted>"
  example:
  - "The following code example demonstrates the use of the <xref:System.Media.SoundPlayer.LoadAsync%2A> method to attach a .wav file to an instance of the <xref:System.Media.SoundPlayer> class. This code example is part of a larger example provided for the <xref:System.Media.SoundPlayer> class.  \n  \n [!code-vb[System.Windows.Forms.Sound#2](~/add/codesnippet/visualbasic/m-system.media.soundplay_2_1.vb)]\n [!code-cpp[System.Windows.Forms.Sound#2](~/add/codesnippet/cpp/m-system.media.soundplay_2_1.cpp)]\n [!code-cs[System.Windows.Forms.Sound#2](~/add/codesnippet/csharp/m-system.media.soundplay_2_1.cs)]"
  syntax:
    content: public void Load ();
    parameters: []
  overload: System.Media.SoundPlayer.Load*
  exceptions:
  - type: System.ServiceProcess.TimeoutException
    commentId: T:System.ServiceProcess.TimeoutException
    description: "在載入期間所經過的時間超過的時間，以毫秒為單位，指定<xref:System.Media.SoundPlayer.LoadTimeout*>。</xref:System.Media.SoundPlayer.LoadTimeout*>"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "所指定的檔案<xref:System.Media.SoundPlayer.SoundLocation*>找不到。</xref:System.Media.SoundPlayer.SoundLocation*>"
  platform:
  - net462
- uid: System.Media.SoundPlayer.LoadAsync
  id: LoadAsync
  parent: System.Media.SoundPlayer
  langs:
  - csharp
  name: LoadAsync()
  nameWithType: SoundPlayer.LoadAsync()
  fullName: System.Media.SoundPlayer.LoadAsync()
  type: Method
  assemblies:
  - System
  namespace: System.Media
  summary: "從資料流或使用新的執行緒將 Web 資源載入.wav 檔案。"
  remarks: "如果<xref:System.Media.SoundPlayer>設定為載入中的.wav 檔案<xref:System.IO.Stream>或 Web 資源，這個方法會開始使用新的執行緒從位置載入.wav 檔案。</xref:System.IO.Stream> </xref:System.Media.SoundPlayer>       這個方法會引發<xref:System.Media.SoundPlayer.LoadCompleted>事件載入時完成，即使負載不成功。</xref:System.Media.SoundPlayer.LoadCompleted>       如果<xref:System.Media.SoundPlayer>已載入的.wav 檔案從本機檔案路徑，這個方法不會執行任何動作，因為會延後載入，直到播放開始。</xref:System.Media.SoundPlayer>       如需非同步載入的詳細資訊，請參閱[如何︰ 載入音效以非同步方式在 Windows Form 中](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following code example demonstrates the use of the LoadAsync method to asynchronously load a .wav file for use by an instance of the <xref:System.Media.SoundPlayer> class. This code example is part of a larger example provided for the <xref:System.Media.SoundPlayer> class.  \n  \n [!code-vb[System.Windows.Forms.Sound#3](~/add/codesnippet/visualbasic/m-system.media.soundplay_3_1.vb)]\n [!code-cpp[System.Windows.Forms.Sound#3](~/add/codesnippet/cpp/m-system.media.soundplay_3_1.cpp)]\n [!code-cs[System.Windows.Forms.Sound#3](~/add/codesnippet/csharp/m-system.media.soundplay_3_1.cs)]"
  syntax:
    content: public void LoadAsync ();
    parameters: []
  overload: System.Media.SoundPlayer.LoadAsync*
  exceptions:
  - type: System.ServiceProcess.TimeoutException
    commentId: T:System.ServiceProcess.TimeoutException
    description: "在載入期間所經過的時間超過的時間，以毫秒為單位，指定<xref:System.Media.SoundPlayer.LoadTimeout*>。</xref:System.Media.SoundPlayer.LoadTimeout*>"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "所指定的檔案<xref:System.Media.SoundPlayer.SoundLocation*>找不到。</xref:System.Media.SoundPlayer.SoundLocation*>"
  platform:
  - net462
- uid: System.Media.SoundPlayer.LoadCompleted
  id: LoadCompleted
  parent: System.Media.SoundPlayer
  langs:
  - csharp
  name: LoadCompleted
  nameWithType: SoundPlayer.LoadCompleted
  fullName: System.Media.SoundPlayer.LoadCompleted
  type: Event
  assemblies:
  - System
  namespace: System.Media
  summary: "發生於.wav 檔案已成功或失敗載入。"
  remarks: ".Wav 檔案載入完成時，會引發這個事件。 事件引數指出音效載入已成功完成或失敗。       如需處理事件的詳細資訊，請參閱[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。"
  example:
  - "The following code example demonstrates the use of the <xref:System.Media.SoundPlayer.OnLoadCompleted%2A> event handler to receive a notification indicating that the contents of a .wav file have been loaded. This code example is part of a larger example provided for the <xref:System.Media.SoundPlayer> class.  \n  \n [!code-vb[System.Windows.Forms.Sound#8](~/add/codesnippet/visualbasic/e-system.media.soundplay_1_1.vb)]\n [!code-cpp[System.Windows.Forms.Sound#8](~/add/codesnippet/cpp/e-system.media.soundplay_1_1.cpp)]\n [!code-cs[System.Windows.Forms.Sound#8](~/add/codesnippet/csharp/e-system.media.soundplay_1_1.cs)]"
  syntax:
    content: public event System.ComponentModel.AsyncCompletedEventHandler LoadCompleted;
    return:
      type: System.ComponentModel.AsyncCompletedEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Media.SoundPlayer.LoadTimeout
  id: LoadTimeout
  parent: System.Media.SoundPlayer
  langs:
  - csharp
  name: LoadTimeout
  nameWithType: SoundPlayer.LoadTimeout
  fullName: System.Media.SoundPlayer.LoadTimeout
  type: Property
  assemblies:
  - System
  namespace: System.Media
  summary: "取得或設定的時間，以毫秒為單位，.wav 檔案必須在其中載入。"
  remarks: "這個時間已經過期之後，已取消載入和<xref:System.ServiceProcess.TimeoutException>擲回例外狀況。</xref:System.ServiceProcess.TimeoutException>"
  syntax:
    content: public int LoadTimeout { get; set; }
    return:
      type: System.Int32
      description: "要等候的毫秒數。 預設值為 10000 （10 秒）。"
  overload: System.Media.SoundPlayer.LoadTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Media.SoundPlayer.OnLoadCompleted(System.ComponentModel.AsyncCompletedEventArgs)
  id: OnLoadCompleted(System.ComponentModel.AsyncCompletedEventArgs)
  parent: System.Media.SoundPlayer
  langs:
  - csharp
  name: OnLoadCompleted(AsyncCompletedEventArgs)
  nameWithType: SoundPlayer.OnLoadCompleted(AsyncCompletedEventArgs)
  fullName: System.Media.SoundPlayer.OnLoadCompleted(AsyncCompletedEventArgs)
  type: Method
  assemblies:
  - System
  namespace: System.Media
  summary: "引發<xref href=&quot;System.Media.SoundPlayer.LoadCompleted&quot;></xref>事件。"
  remarks: ".Wav 檔案載入完成時，會呼叫這個方法。       引發事件會透過委派事件處理常式叫用。 如需詳細資訊，請參閱[NIB︰ 引發事件](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)。       OnLoadCompleted 方法也允許衍生的類別處理事件，而不用附加委派。 這是處理衍生類別中的事件的慣用的技巧。"
  syntax:
    content: protected virtual void OnLoadCompleted (System.ComponentModel.AsyncCompletedEventArgs e);
    parameters:
    - id: e
      type: System.ComponentModel.AsyncCompletedEventArgs
      description: "<xref:System.ComponentModel.AsyncCompletedEventArgs>包含事件資料。</xref:System.ComponentModel.AsyncCompletedEventArgs>"
  overload: System.Media.SoundPlayer.OnLoadCompleted*
  exceptions: []
  platform:
  - net462
- uid: System.Media.SoundPlayer.OnSoundLocationChanged(System.EventArgs)
  id: OnSoundLocationChanged(System.EventArgs)
  parent: System.Media.SoundPlayer
  langs:
  - csharp
  name: OnSoundLocationChanged(EventArgs)
  nameWithType: SoundPlayer.OnSoundLocationChanged(EventArgs)
  fullName: System.Media.SoundPlayer.OnSoundLocationChanged(EventArgs)
  type: Method
  assemblies:
  - System
  namespace: System.Media
  summary: "引發<xref href=&quot;System.Media.SoundPlayer.SoundLocationChanged&quot;></xref>事件。"
  remarks: "呼叫這個方法是新的音效來源路徑時這個<xref:System.Media.SoundPlayer>已設定。</xref:System.Media.SoundPlayer>       引發事件會透過委派事件處理常式叫用。 如需詳細資訊，請參閱 < 如何︰ 提供事件的功能和[NIB︰ 引發事件](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)。       OnSoundLocationChanged 方法也允許衍生的類別處理事件，而不用附加委派。 這是處理衍生類別中的事件的慣用的技巧。"
  syntax:
    content: protected virtual void OnSoundLocationChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>包含事件資料。</xref:System.EventArgs>"
  overload: System.Media.SoundPlayer.OnSoundLocationChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Media.SoundPlayer.OnStreamChanged(System.EventArgs)
  id: OnStreamChanged(System.EventArgs)
  parent: System.Media.SoundPlayer
  langs:
  - csharp
  name: OnStreamChanged(EventArgs)
  nameWithType: SoundPlayer.OnStreamChanged(EventArgs)
  fullName: System.Media.SoundPlayer.OnStreamChanged(EventArgs)
  type: Method
  assemblies:
  - System
  namespace: System.Media
  summary: "引發<xref href=&quot;System.Media.SoundPlayer.StreamChanged&quot;></xref>事件。"
  remarks: "當新時，會呼叫這個方法<xref:System.IO.Stream>音訊來源<xref:System.Media.SoundPlayer>已設定。</xref:System.Media.SoundPlayer> </xref:System.IO.Stream>       引發事件會透過委派事件處理常式叫用。 如需詳細資訊，請參閱[NIB︰ 引發事件](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)。       OnStreamChanged 方法也允許衍生的類別處理事件，而不用附加委派。 這是處理衍生類別中的事件的慣用的技巧。"
  syntax:
    content: protected virtual void OnStreamChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>包含事件資料。</xref:System.EventArgs>"
  overload: System.Media.SoundPlayer.OnStreamChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Media.SoundPlayer.Play
  id: Play
  parent: System.Media.SoundPlayer
  langs:
  - csharp
  name: Play()
  nameWithType: SoundPlayer.Play()
  fullName: System.Media.SoundPlayer.Play()
  type: Method
  assemblies:
  - System
  namespace: System.Media
  summary: "播放.wav 檔案使用新的執行緒，並先載入.wav 檔案，如果未載入。"
  remarks: "播放方法播放使用新的執行緒。 如果您呼叫播放之前.wav 檔案載入記憶體時，就會開始播放之前，將會載入.wav 檔案。 您可以使用<xref:System.Media.SoundPlayer.LoadAsync%2A>或<xref:System.Media.SoundPlayer.Load%2A>預先載入至記憶體.wav 檔案的方法。</xref:System.Media.SoundPlayer.Load%2A> </xref:System.Media.SoundPlayer.LoadAsync%2A> 之後.wav 檔案成功載入從<xref:System.IO.Stream>或 to 播放方法的後續呼叫 URL<xref:System.Media.SoundPlayer>不需要重新載入.wav 檔案，直到音效變更路徑。</xref:System.Media.SoundPlayer> </xref:System.IO.Stream>       如果尚未指定.wav 檔案或無法載入，播放方法將會播放預設的嗶聲聲音。"
  example:
  - "The following code example demonstrates the use of the Play method to asynchronously play a .wav file. This code example is part of a larger example provided for the <xref:System.Media.SoundPlayer> class.  \n  \n [!code-vb[System.Windows.Forms.Sound#5](~/add/codesnippet/visualbasic/m-system.media.soundplay_0_1.vb)]\n [!code-cpp[System.Windows.Forms.Sound#5](~/add/codesnippet/cpp/m-system.media.soundplay_0_1.cpp)]\n [!code-cs[System.Windows.Forms.Sound#5](~/add/codesnippet/csharp/m-system.media.soundplay_0_1.cs)]"
  syntax:
    content: public void Play ();
    parameters: []
  overload: System.Media.SoundPlayer.Play*
  exceptions:
  - type: System.ServiceProcess.TimeoutException
    commentId: T:System.ServiceProcess.TimeoutException
    description: "在載入期間所經過的時間超過的時間，以毫秒為單位，指定<xref:System.Media.SoundPlayer.LoadTimeout*>。</xref:System.Media.SoundPlayer.LoadTimeout*>"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "所指定的檔案<xref:System.Media.SoundPlayer.SoundLocation*>找不到。</xref:System.Media.SoundPlayer.SoundLocation*>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: ".Wav 標頭已損毀。所指定的檔案<xref:System.Media.SoundPlayer.SoundLocation*>不 PCM.wav 檔案。</xref:System.Media.SoundPlayer.SoundLocation*>"
  platform:
  - net462
- uid: System.Media.SoundPlayer.PlayLooping
  id: PlayLooping
  parent: System.Media.SoundPlayer
  langs:
  - csharp
  name: PlayLooping()
  nameWithType: SoundPlayer.PlayLooping()
  fullName: System.Media.SoundPlayer.PlayLooping()
  type: Method
  assemblies:
  - System
  namespace: System.Media
  summary: "播放迴圈.wav 檔案使用新的執行緒，並先載入.wav 檔案，如果未載入。"
  remarks: "PlayLooping 方法播放，並執行迴圈使用新的執行緒的聲音。 如果您呼叫 PlayLooping 之前.wav 檔案載入記憶體時，就會開始播放之前，將會載入.wav 檔案。 您可以使用<xref:System.Media.SoundPlayer.LoadAsync%2A>或<xref:System.Media.SoundPlayer.Load%2A>預先載入至記憶體.wav 檔案的方法。</xref:System.Media.SoundPlayer.Load%2A> </xref:System.Media.SoundPlayer.LoadAsync%2A> 之後.wav 檔案成功載入從<xref:System.IO.Stream>或 to 播放方法的後續呼叫 URL<xref:System.Media.SoundPlayer>不需要重新載入.wav 檔案，直到音效變更路徑。</xref:System.Media.SoundPlayer> </xref:System.IO.Stream>       如果尚未指定.wav 檔案或無法載入，PlayLooping 方法將會播放預設的嗶聲聲音。       如需 PlayLooping 的詳細資訊，請參閱[How to︰ 循環播放 Windows Form 上播放的聲音](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following code example demonstrates the use of the PlayLooping method to repeatedly play a .wav file. The .wav will be played until the <xref:System.Media.SoundPlayer.Stop%2A> method is called. This code example is part of a larger example provided for the <xref:System.Media.SoundPlayer> class.  \n  \n [!code-vb[System.Windows.Forms.Sound#6](~/add/codesnippet/visualbasic/m-system.media.soundplay_1_1.vb)]\n [!code-cpp[System.Windows.Forms.Sound#6](~/add/codesnippet/cpp/m-system.media.soundplay_1_1.cpp)]\n [!code-cs[System.Windows.Forms.Sound#6](~/add/codesnippet/csharp/m-system.media.soundplay_1_1.cs)]"
  syntax:
    content: public void PlayLooping ();
    parameters: []
  overload: System.Media.SoundPlayer.PlayLooping*
  exceptions:
  - type: System.ServiceProcess.TimeoutException
    commentId: T:System.ServiceProcess.TimeoutException
    description: "在載入期間所經過的時間超過的時間，以毫秒為單位，指定<xref:System.Media.SoundPlayer.LoadTimeout*>。</xref:System.Media.SoundPlayer.LoadTimeout*>"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "所指定的檔案<xref:System.Media.SoundPlayer.SoundLocation*>找不到。</xref:System.Media.SoundPlayer.SoundLocation*>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: ".Wav 標頭已損毀。所指定的檔案<xref:System.Media.SoundPlayer.SoundLocation*>不 PCM.wav 檔案。</xref:System.Media.SoundPlayer.SoundLocation*>"
  platform:
  - net462
- uid: System.Media.SoundPlayer.PlaySync
  id: PlaySync
  parent: System.Media.SoundPlayer
  langs:
  - csharp
  name: PlaySync()
  nameWithType: SoundPlayer.PlaySync()
  fullName: System.Media.SoundPlayer.PlaySync()
  type: Method
  assemblies:
  - System
  namespace: System.Media
  summary: "播放.wav 檔，並先載入.wav 檔案，如果未載入。"
  remarks: "PlaySync 方法會使用目前的執行緒，才能播放.wav 檔案，防止執行緒處理其他訊息，直到負載已完成。 您可以使用<xref:System.Media.SoundPlayer.LoadAsync%2A>或<xref:System.Media.SoundPlayer.Load%2A>預先載入至記憶體.wav 檔案的方法。</xref:System.Media.SoundPlayer.Load%2A> </xref:System.Media.SoundPlayer.LoadAsync%2A> 之後.wav 檔案成功載入從<xref:System.IO.Stream>或 to 播放方法的後續呼叫 URL<xref:System.Media.SoundPlayer>不需要重新載入.wav 檔案，直到音效變更路徑。</xref:System.Media.SoundPlayer> </xref:System.IO.Stream>       如果尚未指定.wav 檔案或無法載入，PlaySync 方法將會播放預設的嗶聲聲音。"
  example:
  - "The following code example demonstrates the use of the PlaySync method to synchronously play a .wav file.  \n  \n [!code-cs[System.Windows.Forms.PlaySync#1](~/add/codesnippet/csharp/m-system.media.soundplay_4_1.cs)]\n [!code-cpp[System.Windows.Forms.PlaySync#1](~/add/codesnippet/cpp/m-system.media.soundplay_4_1.cpp)]\n [!code-vb[System.Windows.Forms.PlaySync#1](~/add/codesnippet/visualbasic/m-system.media.soundplay_4_1.vb)]"
  syntax:
    content: public void PlaySync ();
    parameters: []
  overload: System.Media.SoundPlayer.PlaySync*
  exceptions:
  - type: System.ServiceProcess.TimeoutException
    commentId: T:System.ServiceProcess.TimeoutException
    description: "在載入期間所經過的時間超過的時間，以毫秒為單位，指定<xref:System.Media.SoundPlayer.LoadTimeout*>。</xref:System.Media.SoundPlayer.LoadTimeout*>"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "所指定的檔案<xref:System.Media.SoundPlayer.SoundLocation*>找不到。</xref:System.Media.SoundPlayer.SoundLocation*>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: ".Wav 標頭已損毀。所指定的檔案<xref:System.Media.SoundPlayer.SoundLocation*>不 PCM.wav 檔案。</xref:System.Media.SoundPlayer.SoundLocation*>"
  platform:
  - net462
- uid: System.Media.SoundPlayer.SoundLocation
  id: SoundLocation
  parent: System.Media.SoundPlayer
  langs:
  - csharp
  name: SoundLocation
  nameWithType: SoundPlayer.SoundLocation
  fullName: System.Media.SoundPlayer.SoundLocation
  type: Property
  assemblies:
  - System
  namespace: System.Media
  summary: "取得或設定檔案路徑或 URL 的.wav 檔案以載入。"
  remarks: "這個屬性設定為<xref:System.String?displayProperty=fullName>時的<xref:System.Media.SoundPlayer.Stream%2A>屬性設定為<xref:System.IO.Stream>.</xref:System.IO.Stream> </xref:System.Media.SoundPlayer.Stream%2A> </xref:System.String?displayProperty=fullName>"
  example:
  - "The following code example demonstrates the use of the SoundLocation property to assign the .wav file source to an instance of the <xref:System.Media.SoundPlayer> class. This code example is part of a larger example provided for the <xref:System.Media.SoundPlayer> class.  \n  \n [!code-vb[System.Windows.Forms.Sound#2](~/add/codesnippet/visualbasic/p-system.media.soundplay_1.vb)]\n [!code-cpp[System.Windows.Forms.Sound#2](~/add/codesnippet/cpp/p-system.media.soundplay_1.cpp)]\n [!code-cs[System.Windows.Forms.Sound#2](~/add/codesnippet/csharp/p-system.media.soundplay_1.cs)]"
  syntax:
    content: public string SoundLocation { get; set; }
    return:
      type: System.String
      description: "檔案路徑或從中載入.wav 檔案的 URL 或&lt;xref:System.String?displayProperty=fullName&gt;如果檔案路徑不存在。 預設值是&lt;xref:System.String?displayProperty=fullName&gt;。"
  overload: System.Media.SoundPlayer.SoundLocation*
  exceptions: []
  platform:
  - net462
- uid: System.Media.SoundPlayer.SoundLocationChanged
  id: SoundLocationChanged
  parent: System.Media.SoundPlayer
  langs:
  - csharp
  name: SoundLocationChanged
  nameWithType: SoundPlayer.SoundLocationChanged
  fullName: System.Media.SoundPlayer.SoundLocationChanged
  type: Event
  assemblies:
  - System
  namespace: System.Media
  summary: "當新的音效來源路徑時發生這個<xref href=&quot;System.Media.SoundPlayer&quot;></xref>已設定。"
  remarks: "會引發這個事件的新的音效來源路徑時這個<xref:System.Media.SoundPlayer>已設定。</xref:System.Media.SoundPlayer>       如需處理事件的詳細資訊，請參閱[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。"
  example:
  - "The following code example demonstrates the use of the <xref:System.Media.SoundPlayer.OnSoundLocationChanged%2A> event handler to receive a notification when the <xref:System.Media.SoundPlayer> has been attached to a different .wav file. This code example is part of a larger example provided for the <xref:System.Media.SoundPlayer> class.  \n  \n [!code-vb[System.Windows.Forms.Sound#9](~/add/codesnippet/visualbasic/e-system.media.soundplay_0_1.vb)]\n [!code-cpp[System.Windows.Forms.Sound#9](~/add/codesnippet/cpp/e-system.media.soundplay_0_1.cpp)]\n [!code-cs[System.Windows.Forms.Sound#9](~/add/codesnippet/csharp/e-system.media.soundplay_0_1.cs)]"
  syntax:
    content: public event EventHandler SoundLocationChanged;
    return:
      type: System.EventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Media.SoundPlayer.Stop
  id: Stop
  parent: System.Media.SoundPlayer
  langs:
  - csharp
  name: Stop()
  nameWithType: SoundPlayer.Stop()
  fullName: System.Media.SoundPlayer.Stop()
  type: Method
  assemblies:
  - System
  namespace: System.Media
  summary: "停止播放發生時播放音效。"
  remarks: ''
  example:
  - "The following code example demonstrates the use of the Stop method to halt a .wav file that is currently playing. This code example is part of a larger example provided for the <xref:System.Media.SoundPlayer> class.  \n  \n [!code-vb[System.Windows.Forms.Sound#7](~/add/codesnippet/visualbasic/m-system.media.soundplay_5_1.vb)]\n [!code-cpp[System.Windows.Forms.Sound#7](~/add/codesnippet/cpp/m-system.media.soundplay_5_1.cpp)]\n [!code-cs[System.Windows.Forms.Sound#7](~/add/codesnippet/csharp/m-system.media.soundplay_5_1.cs)]"
  syntax:
    content: public void Stop ();
    parameters: []
  overload: System.Media.SoundPlayer.Stop*
  exceptions: []
  platform:
  - net462
- uid: System.Media.SoundPlayer.Stream
  id: Stream
  parent: System.Media.SoundPlayer
  langs:
  - csharp
  name: Stream
  nameWithType: SoundPlayer.Stream
  fullName: System.Media.SoundPlayer.Stream
  type: Property
  assemblies:
  - System
  namespace: System.Media
  summary: "取得或設定<xref:System.IO.Stream>從中載入.wav 檔案。</xref:System.IO.Stream>"
  remarks: "這個屬性設定為`null`時<xref:System.Media.SoundPlayer.SoundLocation%2A>屬性設定為新的和有效的聲音位置。</xref:System.Media.SoundPlayer.SoundLocation%2A>"
  syntax:
    content: public System.IO.Stream Stream { get; set; }
    return:
      type: System.IO.Stream
      description: "A<xref:System.IO.Stream>要從中載入.wav 檔案，或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>沒有資料流是否可用。</xref:System.IO.Stream> 預設值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Media.SoundPlayer.Stream*
  exceptions: []
  platform:
  - net462
- uid: System.Media.SoundPlayer.StreamChanged
  id: StreamChanged
  parent: System.Media.SoundPlayer
  langs:
  - csharp
  name: StreamChanged
  nameWithType: SoundPlayer.StreamChanged
  fullName: System.Media.SoundPlayer.StreamChanged
  type: Event
  assemblies:
  - System
  namespace: System.Media
  summary: "發生於將新<xref:System.IO.Stream>音訊來源<xref href=&quot;System.Media.SoundPlayer&quot;></xref>已設定。</xref:System.IO.Stream>"
  remarks: "當新時，會引發這個事件<xref:System.IO.Stream>音訊來源<xref:System.Media.SoundPlayer>已設定。</xref:System.Media.SoundPlayer> </xref:System.IO.Stream>       如需處理事件的詳細資訊，請參閱[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。"
  syntax:
    content: public event EventHandler StreamChanged;
    return:
      type: System.EventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Media.SoundPlayer.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  isEii: true
  parent: System.Media.SoundPlayer
  langs:
  - csharp
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: SoundPlayer.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Media.SoundPlayer.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System
  namespace: System.Media
  summary: "如需這個成員的說明，請參閱&lt;xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A?displayProperty=fullName&gt;方法。"
  remarks: "這個成員是明確介面成員實作。 它可用時，才<xref:System.Media.SoundPlayer>執行個體轉換成<xref:System.Runtime.Serialization.ISerializable>介面。</xref:System.Runtime.Serialization.ISerializable> </xref:System.Media.SoundPlayer>"
  syntax:
    content: void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref>来填入資料。"
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "目的地 (請參閱<xref:System.Runtime.Serialization.StreamingContext>) 這個序列化。</xref:System.Runtime.Serialization.StreamingContext>"
  overload: System.Media.SoundPlayer.System#Runtime#Serialization#ISerializable#GetObjectData*
  exceptions: []
  platform:
  - net462
- uid: System.Media.SoundPlayer.Tag
  id: Tag
  parent: System.Media.SoundPlayer
  langs:
  - csharp
  name: Tag
  nameWithType: SoundPlayer.Tag
  fullName: System.Media.SoundPlayer.Tag
  type: Property
  assemblies:
  - System
  namespace: System.Media
  summary: "取得或設定<xref:System.Object>資料包含關於<xref href=&quot;System.Media.SoundPlayer&quot;> </xref>。</xref:System.Object>"
  syntax:
    content: public object Tag { get; set; }
    return:
      type: System.Object
      description: "<xref:System.Object>資料包含關於<xref href=&quot;System.Media.SoundPlayer&quot;> </xref>。</xref:System.Object>"
  overload: System.Media.SoundPlayer.Tag*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.Component
  isExternal: false
  name: System.ComponentModel.Component
- uid: System.UriFormatException
  isExternal: true
  name: System.UriFormatException
- uid: System.ServiceProcess.TimeoutException
  parent: System.ServiceProcess
  isExternal: false
  name: TimeoutException
  nameWithType: TimeoutException
  fullName: System.ServiceProcess.TimeoutException
- uid: System.IO.FileNotFoundException
  isExternal: true
  name: System.IO.FileNotFoundException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Media.SoundPlayer.#ctor
  parent: System.Media.SoundPlayer
  isExternal: false
  name: SoundPlayer()
  nameWithType: SoundPlayer.SoundPlayer()
  fullName: System.Media.SoundPlayer.SoundPlayer()
- uid: System.Media.SoundPlayer.#ctor(System.IO.Stream)
  parent: System.Media.SoundPlayer
  isExternal: false
  name: SoundPlayer(Stream)
  nameWithType: SoundPlayer.SoundPlayer(Stream)
  fullName: System.Media.SoundPlayer.SoundPlayer(Stream)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Media.SoundPlayer.#ctor(System.String)
  parent: System.Media.SoundPlayer
  isExternal: false
  name: SoundPlayer(String)
  nameWithType: SoundPlayer.SoundPlayer(String)
  fullName: System.Media.SoundPlayer.SoundPlayer(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Media.SoundPlayer.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Media.SoundPlayer
  isExternal: false
  name: SoundPlayer(SerializationInfo,StreamingContext)
  nameWithType: SoundPlayer.SoundPlayer(SerializationInfo,StreamingContext)
  fullName: System.Media.SoundPlayer.SoundPlayer(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Media.SoundPlayer.IsLoadCompleted
  parent: System.Media.SoundPlayer
  isExternal: false
  name: IsLoadCompleted
  nameWithType: SoundPlayer.IsLoadCompleted
  fullName: System.Media.SoundPlayer.IsLoadCompleted
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Media.SoundPlayer.Load
  parent: System.Media.SoundPlayer
  isExternal: false
  name: Load()
  nameWithType: SoundPlayer.Load()
  fullName: System.Media.SoundPlayer.Load()
- uid: System.Media.SoundPlayer.LoadAsync
  parent: System.Media.SoundPlayer
  isExternal: false
  name: LoadAsync()
  nameWithType: SoundPlayer.LoadAsync()
  fullName: System.Media.SoundPlayer.LoadAsync()
- uid: System.Media.SoundPlayer.LoadCompleted
  parent: System.Media.SoundPlayer
  isExternal: false
  name: LoadCompleted
  nameWithType: SoundPlayer.LoadCompleted
  fullName: System.Media.SoundPlayer.LoadCompleted
- uid: System.ComponentModel.AsyncCompletedEventHandler
  parent: System.ComponentModel
  isExternal: true
  name: AsyncCompletedEventHandler
  nameWithType: AsyncCompletedEventHandler
  fullName: System.ComponentModel.AsyncCompletedEventHandler
- uid: System.Media.SoundPlayer.LoadTimeout
  parent: System.Media.SoundPlayer
  isExternal: false
  name: LoadTimeout
  nameWithType: SoundPlayer.LoadTimeout
  fullName: System.Media.SoundPlayer.LoadTimeout
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Media.SoundPlayer.OnLoadCompleted(System.ComponentModel.AsyncCompletedEventArgs)
  parent: System.Media.SoundPlayer
  isExternal: false
  name: OnLoadCompleted(AsyncCompletedEventArgs)
  nameWithType: SoundPlayer.OnLoadCompleted(AsyncCompletedEventArgs)
  fullName: System.Media.SoundPlayer.OnLoadCompleted(AsyncCompletedEventArgs)
- uid: System.ComponentModel.AsyncCompletedEventArgs
  parent: System.ComponentModel
  isExternal: true
  name: AsyncCompletedEventArgs
  nameWithType: AsyncCompletedEventArgs
  fullName: System.ComponentModel.AsyncCompletedEventArgs
- uid: System.Media.SoundPlayer.OnSoundLocationChanged(System.EventArgs)
  parent: System.Media.SoundPlayer
  isExternal: false
  name: OnSoundLocationChanged(EventArgs)
  nameWithType: SoundPlayer.OnSoundLocationChanged(EventArgs)
  fullName: System.Media.SoundPlayer.OnSoundLocationChanged(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Media.SoundPlayer.OnStreamChanged(System.EventArgs)
  parent: System.Media.SoundPlayer
  isExternal: false
  name: OnStreamChanged(EventArgs)
  nameWithType: SoundPlayer.OnStreamChanged(EventArgs)
  fullName: System.Media.SoundPlayer.OnStreamChanged(EventArgs)
- uid: System.Media.SoundPlayer.Play
  parent: System.Media.SoundPlayer
  isExternal: false
  name: Play()
  nameWithType: SoundPlayer.Play()
  fullName: System.Media.SoundPlayer.Play()
- uid: System.Media.SoundPlayer.PlayLooping
  parent: System.Media.SoundPlayer
  isExternal: false
  name: PlayLooping()
  nameWithType: SoundPlayer.PlayLooping()
  fullName: System.Media.SoundPlayer.PlayLooping()
- uid: System.Media.SoundPlayer.PlaySync
  parent: System.Media.SoundPlayer
  isExternal: false
  name: PlaySync()
  nameWithType: SoundPlayer.PlaySync()
  fullName: System.Media.SoundPlayer.PlaySync()
- uid: System.Media.SoundPlayer.SoundLocation
  parent: System.Media.SoundPlayer
  isExternal: false
  name: SoundLocation
  nameWithType: SoundPlayer.SoundLocation
  fullName: System.Media.SoundPlayer.SoundLocation
- uid: System.Media.SoundPlayer.SoundLocationChanged
  parent: System.Media.SoundPlayer
  isExternal: false
  name: SoundLocationChanged
  nameWithType: SoundPlayer.SoundLocationChanged
  fullName: System.Media.SoundPlayer.SoundLocationChanged
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Media.SoundPlayer.Stop
  parent: System.Media.SoundPlayer
  isExternal: false
  name: Stop()
  nameWithType: SoundPlayer.Stop()
  fullName: System.Media.SoundPlayer.Stop()
- uid: System.Media.SoundPlayer.Stream
  parent: System.Media.SoundPlayer
  isExternal: false
  name: Stream
  nameWithType: SoundPlayer.Stream
  fullName: System.Media.SoundPlayer.Stream
- uid: System.Media.SoundPlayer.StreamChanged
  parent: System.Media.SoundPlayer
  isExternal: false
  name: StreamChanged
  nameWithType: SoundPlayer.StreamChanged
  fullName: System.Media.SoundPlayer.StreamChanged
- uid: System.Media.SoundPlayer.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Media.SoundPlayer
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: SoundPlayer.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Media.SoundPlayer.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Media.SoundPlayer.Tag
  parent: System.Media.SoundPlayer
  isExternal: false
  name: Tag
  nameWithType: SoundPlayer.Tag
  fullName: System.Media.SoundPlayer.Tag
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Media.SoundPlayer.#ctor*
  parent: System.Media.SoundPlayer
  isExternal: false
  name: SoundPlayer
  nameWithType: SoundPlayer.SoundPlayer
- uid: System.Media.SoundPlayer.IsLoadCompleted*
  parent: System.Media.SoundPlayer
  isExternal: false
  name: IsLoadCompleted
  nameWithType: SoundPlayer.IsLoadCompleted
- uid: System.Media.SoundPlayer.Load*
  parent: System.Media.SoundPlayer
  isExternal: false
  name: Load
  nameWithType: SoundPlayer.Load
- uid: System.Media.SoundPlayer.LoadAsync*
  parent: System.Media.SoundPlayer
  isExternal: false
  name: LoadAsync
  nameWithType: SoundPlayer.LoadAsync
- uid: System.Media.SoundPlayer.LoadTimeout*
  parent: System.Media.SoundPlayer
  isExternal: false
  name: LoadTimeout
  nameWithType: SoundPlayer.LoadTimeout
- uid: System.Media.SoundPlayer.OnLoadCompleted*
  parent: System.Media.SoundPlayer
  isExternal: false
  name: OnLoadCompleted
  nameWithType: SoundPlayer.OnLoadCompleted
- uid: System.Media.SoundPlayer.OnSoundLocationChanged*
  parent: System.Media.SoundPlayer
  isExternal: false
  name: OnSoundLocationChanged
  nameWithType: SoundPlayer.OnSoundLocationChanged
- uid: System.Media.SoundPlayer.OnStreamChanged*
  parent: System.Media.SoundPlayer
  isExternal: false
  name: OnStreamChanged
  nameWithType: SoundPlayer.OnStreamChanged
- uid: System.Media.SoundPlayer.Play*
  parent: System.Media.SoundPlayer
  isExternal: false
  name: Play
  nameWithType: SoundPlayer.Play
- uid: System.Media.SoundPlayer.PlayLooping*
  parent: System.Media.SoundPlayer
  isExternal: false
  name: PlayLooping
  nameWithType: SoundPlayer.PlayLooping
- uid: System.Media.SoundPlayer.PlaySync*
  parent: System.Media.SoundPlayer
  isExternal: false
  name: PlaySync
  nameWithType: SoundPlayer.PlaySync
- uid: System.Media.SoundPlayer.SoundLocation*
  parent: System.Media.SoundPlayer
  isExternal: false
  name: SoundLocation
  nameWithType: SoundPlayer.SoundLocation
- uid: System.Media.SoundPlayer.Stop*
  parent: System.Media.SoundPlayer
  isExternal: false
  name: Stop
  nameWithType: SoundPlayer.Stop
- uid: System.Media.SoundPlayer.Stream*
  parent: System.Media.SoundPlayer
  isExternal: false
  name: Stream
  nameWithType: SoundPlayer.Stream
- uid: System.Media.SoundPlayer.System#Runtime#Serialization#ISerializable#GetObjectData*
  parent: System.Media.SoundPlayer
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData
  nameWithType: SoundPlayer.System.Runtime.Serialization.ISerializable.GetObjectData
- uid: System.Media.SoundPlayer.Tag*
  parent: System.Media.SoundPlayer
  isExternal: false
  name: Tag
  nameWithType: SoundPlayer.Tag
