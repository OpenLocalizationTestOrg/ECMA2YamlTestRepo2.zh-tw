### YamlMime:ManagedReference
items:
- uid: System.Runtime.CompilerServices.CallConvThiscall
  id: CallConvThiscall
  children:
  - System.Runtime.CompilerServices.CallConvThiscall.#ctor
  langs:
  - csharp
  name: CallConvThiscall
  nameWithType: CallConvThiscall
  fullName: System.Runtime.CompilerServices.CallConvThiscall
  type: Class
  summary: "表示方法應該使用<xref uid=&quot;langword_csharp_ThisCall&quot; name=&quot;ThisCall&quot; href=&quot;&quot;></xref>呼叫慣例。"
  remarks: "當使用`ThisCall`呼叫慣例、 方法呼叫的第一個參數是`this`指標，它會儲存在暫存器 ECX。 方法呼叫的其他參數會推送至堆疊上。 這個呼叫慣例用於呼叫從 unmanaged 的 DLL 匯出的類別上的方法。       中的類別<xref:System.Runtime.CompilerServices>編譯器撰寫者僅供使用。</xref:System.Runtime.CompilerServices>       編譯器會發出中繼資料，以變更預設行為不適用時，在 just-in-time (JIT) 編譯器，處理值的方式中的自訂修飾詞。  當 JIT 編譯器遇到的自訂修飾詞時，它會處理修飾詞指定的方式中的值。  編譯器可以套用的自訂修飾詞來方法、 參數和傳回值。  JIT 編譯器的必要修飾詞必須回應，但可以忽略的選擇性修飾詞。  C + + 編譯器可以發出來描述如何 byte，應該要視為 JIT 編譯器以 c + + 與不相容的方式處理位元組中預設的自訂修飾詞。       您可以將自訂修飾詞發出至中繼資料使用的下列技術的其中一個:-使用中的方法<xref:System.Reflection.Emit.TypeBuilder>類別如<xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A>， <xref:System.Reflection.Emit.TypeBuilder.DefineField%2A>， <xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A>，和<xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A>。</xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A> </xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A> </xref:System.Reflection.Emit.TypeBuilder.DefineField%2A> </xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A> </xref:System.Reflection.Emit.TypeBuilder>      產生 Microsoft intermediate language (MSIL) 指示檔案，其中包含呼叫`modopt`和`modreq`，然後將組合至檔案最[Ilasm.exe （IL 組譯工具）](~/add/includes/ajax-current-ext-md.md)。      -使用 unmanaged 的反映 API。"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class CallConvThiscall
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Runtime.CompilerServices.CallConvThiscall.#ctor
  id: '#ctor'
  parent: System.Runtime.CompilerServices.CallConvThiscall
  langs:
  - csharp
  name: CallConvThiscall()
  nameWithType: CallConvThiscall.CallConvThiscall()
  fullName: System.Runtime.CompilerServices.CallConvThiscall.CallConvThiscall()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Runtime.CompilerServices
  summary: "初始化的新執行個體<xref href=&quot;System.Runtime.CompilerServices.CallConvThiscall&quot;></xref>類別。"
  remarks: "中的類別<xref:System.Runtime.CompilerServices>編譯器撰寫者僅供使用。</xref:System.Runtime.CompilerServices>"
  syntax:
    content: public CallConvThiscall ();
    parameters: []
  overload: System.Runtime.CompilerServices.CallConvThiscall.#ctor*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Runtime.CompilerServices.CallConvThiscall.#ctor
  parent: System.Runtime.CompilerServices.CallConvThiscall
  isExternal: false
  name: CallConvThiscall()
  nameWithType: CallConvThiscall.CallConvThiscall()
  fullName: System.Runtime.CompilerServices.CallConvThiscall.CallConvThiscall()
- uid: System.Runtime.CompilerServices.CallConvThiscall.#ctor*
  parent: System.Runtime.CompilerServices.CallConvThiscall
  isExternal: false
  name: CallConvThiscall
  nameWithType: CallConvThiscall.CallConvThiscall
