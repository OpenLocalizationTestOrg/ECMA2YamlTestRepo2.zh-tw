### YamlMime:ManagedReference
items:
- uid: System.Messaging.PeekCompletedEventHandler
  id: PeekCompletedEventHandler
  langs:
  - csharp
  name: PeekCompletedEventHandler
  nameWithType: PeekCompletedEventHandler
  fullName: System.Messaging.PeekCompletedEventHandler
  type: Delegate
  summary: "代表將處理的方法<xref href=&quot;System.Messaging.MessageQueue.PeekCompleted&quot;></xref>事件<xref href=&quot;System.Messaging.MessageQueue&quot;> </xref>。"
  remarks: '當您建立 PeekCompletedEventHandler 委派時，您可以識別即將處理此事件的方法。 若要將事件與事件處理常式產生關聯，將委派的執行個體加入事件。 除非您移除委派，在事件發生時，會呼叫事件處理常式。 如需事件處理常式委派的詳細資訊，請參閱[NIB︰ 事件和委派](http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115)。'
  example:
  - "The following example illustrates how to create an event delegate (PeekCompletedEventHandler) for the event handler (`MyPeekCompleted`) and associate it with the <xref:System.Messaging.MessageQueue.PeekCompleted?displayProperty=fullName> event. The event handler peeks a message and writes its label to the screen.  \n  \n [!code-cpp[MessageQueue.BeginPeek_noparms#1](~/add/codesnippet/cpp/t-system.messaging.peekc_1_1.cpp)]\n [!code-cs[MessageQueue.BeginPeek_noparms#1](~/add/codesnippet/csharp/t-system.messaging.peekc_1_1.cs)]\n [!code-vb[MessageQueue.BeginPeek_noparms#1](~/add/codesnippet/visualbasic/t-system.messaging.peekc_1_1.vb)]"
  syntax:
    content: public delegate void PeekCompletedEventHandler(object sender, PeekCompletedEventArgs e);
  inheritance:
  - System.Delegate
  platform:
  - net462
references:
- uid: System.Delegate
  isExternal: false
  name: System.Delegate
