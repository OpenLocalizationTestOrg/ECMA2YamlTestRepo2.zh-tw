### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService
  id: ComponentSerializationService
  children:
  - System.ComponentModel.Design.Serialization.ComponentSerializationService.#ctor
  - System.ComponentModel.Design.Serialization.ComponentSerializationService.CreateStore
  - System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize(System.ComponentModel.Design.Serialization.SerializationStore)
  - System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer)
  - System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer)
  - System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer,System.Boolean)
  - System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer,System.Boolean,System.Boolean)
  - System.ComponentModel.Design.Serialization.ComponentSerializationService.LoadStore(System.IO.Stream)
  - System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)
  - System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)
  - System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMember(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)
  - System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMemberAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)
  langs:
  - csharp
  name: ComponentSerializationService
  nameWithType: ComponentSerializationService
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService
  type: Class
  summary: "提供基底類別序列化為序列化存放一組元件或可序列化的物件。"
  remarks: "ComponentSerializationService 序列化的序列化存放區的一組元件或可序列化的物件。 稍後可以還原序列化儲存區。 ComponentSerializationService 類別與其他序列化配置的序列化格式是不透明的並且允許部分序列化的物件。 例如，您可以選擇只選取的屬性的物件進行序列化。       這個類別是`abstract`。 一般而言，<xref:System.ComponentModel.Design.Serialization.DesignerLoader>將會提供這個類別的具體實作，並將其加入至其<xref:System.ComponentModel.Design.DesignSurface>。</xref:System.ComponentModel.Design.DesignSurface>服務為</xref:System.ComponentModel.Design.Serialization.DesignerLoader> 這可讓最適合這些格式中要序列化的物件。       ComponentSerializationService 類別取代<xref:System.ComponentModel.Design.Serialization.IDesignerSerializationService>介面從.NET Framework 1.0 版中，雖然後者保留回溯相容性。</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationService>"
  syntax:
    content: public abstract class ComponentSerializationService
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.#ctor
  id: '#ctor'
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  langs:
  - csharp
  name: ComponentSerializationService()
  nameWithType: ComponentSerializationService.ComponentSerializationService()
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.ComponentSerializationService()
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "初始化的新執行個體<xref href=&quot;System.ComponentModel.Design.Serialization.ComponentSerializationService&quot;></xref>類別。"
  syntax:
    content: protected ComponentSerializationService ();
    parameters: []
  overload: System.ComponentModel.Design.Serialization.ComponentSerializationService.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.CreateStore
  id: CreateStore
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  langs:
  - csharp
  name: CreateStore()
  nameWithType: ComponentSerializationService.CreateStore()
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.CreateStore()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "建立新<xref href=&quot;System.ComponentModel.Design.Serialization.SerializationStore&quot;> </xref>。"
  remarks: "多個物件可以序列化到相同的序列化存放區。 當您完成與存放區時，您可以呼叫其<xref:System.ComponentModel.Design.Serialization.SerializationStore.System%23IDisposable%23Dispose%2A>或<xref:System.ComponentModel.Design.Serialization.SerializationStore.Close%2A>方法。</xref:System.ComponentModel.Design.Serialization.SerializationStore.Close%2A> </xref:System.ComponentModel.Design.Serialization.SerializationStore.System%23IDisposable%23Dispose%2A> 序列化存放區一旦關閉，可用於還原序列化時，或您可以儲存成資料流。       序列化存放區可以傳遞至任何建置一整組物件的序列化狀態序列化方法。"
  syntax:
    content: public abstract System.ComponentModel.Design.Serialization.SerializationStore CreateStore ();
    parameters: []
    return:
      type: System.ComponentModel.Design.Serialization.SerializationStore
      description: "新建立的序列化存放區。"
  overload: System.ComponentModel.Design.Serialization.ComponentSerializationService.CreateStore*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize(System.ComponentModel.Design.Serialization.SerializationStore)
  id: Deserialize(System.ComponentModel.Design.Serialization.SerializationStore)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  langs:
  - csharp
  name: Deserialize(SerializationStore)
  nameWithType: ComponentSerializationService.Deserialize(SerializationStore)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize(SerializationStore)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "還原序列化指定的存放區產生的物件集合。"
  remarks: "這個方法會還原序列化`store`產生其中包含的物件的集合。 還原序列化物件的已序列化的順序相同。"
  syntax:
    content: public abstract System.Collections.ICollection Deserialize (System.ComponentModel.Design.Serialization.SerializationStore store);
    parameters:
    - id: store
      type: System.ComponentModel.Design.Serialization.SerializationStore
      description: "<xref href=&quot;System.ComponentModel.Design.Serialization.SerializationStore&quot;> </xref>還原序列化。"
    return:
      type: System.Collections.ICollection
      description: "建立根據儲存的狀態物件的集合。"
  overload: System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>store</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>store</code>不包含可以處理序列化容器格式的資料。"
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer)
  id: Deserialize(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  langs:
  - csharp
  name: Deserialize(SerializationStore,IContainer)
  nameWithType: ComponentSerializationService.Deserialize(SerializationStore,IContainer)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize(SerializationStore,IContainer)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "還原序列化指定的存放區，並於其中填入給定<xref href=&quot;System.ComponentModel.IContainer&quot;></xref>與還原序列化<xref href=&quot;System.ComponentModel.IComponent&quot;></xref>物件。"
  remarks: "這個方法會還原序列化`store`產生其中包含的物件的集合。 還原序列化物件的已序列化的順序相同。       建立實作物件<xref:System.ComponentModel.IComponent>加入至`container`。</xref:System.ComponentModel.IComponent>"
  syntax:
    content: public abstract System.Collections.ICollection Deserialize (System.ComponentModel.Design.Serialization.SerializationStore store, System.ComponentModel.IContainer container);
    parameters:
    - id: store
      type: System.ComponentModel.Design.Serialization.SerializationStore
      description: "<xref href=&quot;System.ComponentModel.Design.Serialization.SerializationStore&quot;> </xref>還原序列化。"
    - id: container
      type: System.ComponentModel.IContainer
      description: "<xref href=&quot;System.ComponentModel.IContainer&quot;> </xref>的<xref href=&quot;System.ComponentModel.IComponent&quot;></xref>物件會被加入。"
    return:
      type: System.Collections.ICollection
      description: "建立根據儲存的狀態物件的集合。"
  overload: System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>store</code>or <code>container</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>store</code>不包含可以處理序列化容器格式的資料。"
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer)
  id: DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  langs:
  - csharp
  name: DeserializeTo(SerializationStore,IContainer)
  nameWithType: ComponentSerializationService.DeserializeTo(SerializationStore,IContainer)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(SerializationStore,IContainer)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "還原序列化給定<xref href=&quot;System.ComponentModel.Design.Serialization.SerializationStore&quot;></xref>至指定的容器。"
  remarks: "DeserializeTo 方法還原序列化`store`，但而非產生新的物件，它適用於資料存放區中的現有的一組物件取自提供的容器。 如此一來，呼叫端可以事先建立物件但得以透過適當。 如果物件已還原序列化狀態物件的名稱不在現有物件的集合中，將會建立新的物件。 如果該物件也會實作<xref:System.ComponentModel.IComponent>，它就會加入至`container`。</xref:System.ComponentModel.IComponent> 在容器中的物件必須具有名稱和物件的序列化存放區中要使用現有的物件相符的型別。"
  syntax:
    content: public void DeserializeTo (System.ComponentModel.Design.Serialization.SerializationStore store, System.ComponentModel.IContainer container);
    parameters:
    - id: store
      type: System.ComponentModel.Design.Serialization.SerializationStore
      description: "<xref href=&quot;System.ComponentModel.Design.Serialization.SerializationStore&quot;> </xref>還原序列化。"
    - id: container
      type: System.ComponentModel.IContainer
      description: "容器的<xref href=&quot;System.ComponentModel.IComponent&quot;></xref>物件會被加入。"
  overload: System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>store</code>or <code>container</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>store</code>不包含可以處理序列化容器格式的資料。"
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer,System.Boolean)
  id: DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer,System.Boolean)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  langs:
  - csharp
  name: DeserializeTo(SerializationStore,IContainer,Boolean)
  nameWithType: ComponentSerializationService.DeserializeTo(SerializationStore,IContainer,Boolean)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(SerializationStore,IContainer,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "還原序列化給定<xref href=&quot;System.ComponentModel.Design.Serialization.SerializationStore&quot;></xref>至指定的容器，選擇性地驗證回收類型。"
  remarks: "<xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo%2A>方法還原序列化`store`，而不是產生新的物件，它適用於資料存放區中的現有的一組物件取自提供容器，但。</xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo%2A> 如此一來，呼叫端可以事先建立物件但得以透過適當。 如果物件已還原序列化狀態物件的名稱不在現有物件的集合中，將會建立新的物件。 如果該物件也會實作<xref:System.ComponentModel.IComponent>，它就會加入至`container`。</xref:System.ComponentModel.IComponent> 在容器中的物件必須具有名稱和物件的序列化存放區中要使用現有的物件相符的型別。"
  syntax:
    content: public void DeserializeTo (System.ComponentModel.Design.Serialization.SerializationStore store, System.ComponentModel.IContainer container, bool validateRecycledTypes);
    parameters:
    - id: store
      type: System.ComponentModel.Design.Serialization.SerializationStore
      description: "<xref href=&quot;System.ComponentModel.Design.Serialization.SerializationStore&quot;> </xref>還原序列化。"
    - id: container
      type: System.ComponentModel.IContainer
      description: "容器的<xref href=&quot;System.ComponentModel.IComponent&quot;></xref>物件會被加入。"
    - id: validateRecycledTypes
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要保證如果套用至相同型別的物件，將只會運作還原序列化作業。"
  overload: System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>store</code>or <code>container</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>store</code>不包含可以處理序列化容器格式的資料。"
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer,System.Boolean,System.Boolean)
  id: DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer,System.Boolean,System.Boolean)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  langs:
  - csharp
  name: DeserializeTo(SerializationStore,IContainer,Boolean,Boolean)
  nameWithType: ComponentSerializationService.DeserializeTo(SerializationStore,IContainer,Boolean,Boolean)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(SerializationStore,IContainer,Boolean,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "還原序列化給定<xref href=&quot;System.ComponentModel.Design.Serialization.SerializationStore&quot;></xref>至指定的容器，並選擇性地套用預設屬性值。"
  remarks: "<xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo%2A>方法還原序列化`store`，而不是產生新的物件，它適用於資料存放區中的現有的一組物件取自提供容器，但。</xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo%2A> 如此一來，呼叫端可以事先建立物件但得以透過適當。 如果物件已還原序列化狀態物件的名稱不在現有物件的集合中，將會建立新的物件。 如果該物件也會實作<xref:System.ComponentModel.IComponent>，它就會加入至`container`。</xref:System.ComponentModel.IComponent> 在容器中的物件必須具有名稱和物件的序列化存放區中要使用現有的物件相符的型別。"
  syntax:
    content: public abstract void DeserializeTo (System.ComponentModel.Design.Serialization.SerializationStore store, System.ComponentModel.IContainer container, bool validateRecycledTypes, bool applyDefaults);
    parameters:
    - id: store
      type: System.ComponentModel.Design.Serialization.SerializationStore
      description: "<xref href=&quot;System.ComponentModel.Design.Serialization.SerializationStore&quot;> </xref>還原序列化。"
    - id: container
      type: System.ComponentModel.IContainer
      description: "容器的<xref href=&quot;System.ComponentModel.IComponent&quot;></xref>物件會被加入。"
    - id: validateRecycledTypes
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要保證如果套用至相同型別的物件，將只會運作還原序列化作業。"
    - id: applyDefaults
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>表示，應該套用的預設屬性值。"
  overload: System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>store</code>or <code>container</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>store</code>不包含可以處理序列化容器格式的資料。"
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.LoadStore(System.IO.Stream)
  id: LoadStore(System.IO.Stream)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  langs:
  - csharp
  name: LoadStore(Stream)
  nameWithType: ComponentSerializationService.LoadStore(Stream)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.LoadStore(Stream)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "載入<xref href=&quot;System.ComponentModel.Design.Serialization.SerializationStore&quot;></xref>從資料流。"
  remarks: "您可以使用傳回的存放區來還原序列化的物件將它傳遞至其中一個<xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize%2A>方法。</xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize%2A>"
  syntax:
    content: public abstract System.ComponentModel.Design.Serialization.SerializationStore LoadStore (System.IO.Stream stream);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "<xref:System.IO.Stream>從存放區載入。</xref:System.IO.Stream>"
    return:
      type: System.ComponentModel.Design.Serialization.SerializationStore
      description: "新<xref href=&quot;System.ComponentModel.Design.Serialization.SerializationStore&quot;></xref>執行個體。"
  overload: System.ComponentModel.Design.Serialization.ComponentSerializationService.LoadStore*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>stream</code>不會包含先前呼叫所儲存的資料<xref:System.ComponentModel.Design.Serialization.SerializationStore.Save*>。"
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)
  id: Serialize(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  langs:
  - csharp
  name: Serialize(SerializationStore,Object)
  nameWithType: ComponentSerializationService.Serialize(SerializationStore,Object)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize(SerializationStore,Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "指定將物件序列化為給定<xref href=&quot;System.ComponentModel.Design.Serialization.SerializationStore&quot;> </xref>。"
  remarks: "在存放區可以用來序列化多個物件，藉由呼叫這個方法一次以上。"
  syntax:
    content: public abstract void Serialize (System.ComponentModel.Design.Serialization.SerializationStore store, object value);
    parameters:
    - id: store
      type: System.ComponentModel.Design.Serialization.SerializationStore
      description: "<xref href=&quot;System.ComponentModel.Design.Serialization.SerializationStore&quot;> </xref>要的狀態`value`會寫入。"
    - id: value
      type: System.Object
      description: "要序列化的物件。"
  overload: System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>store</code>or <code>value</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>store</code>已關閉，或<code>store</code>不支援的類型的序列化存放區。 使用傳回的存放區<xref:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore*>。"
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)
  id: SerializeAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  langs:
  - csharp
  name: SerializeAbsolute(SerializationStore,Object)
  nameWithType: ComponentSerializationService.SerializeAbsolute(SerializationStore,Object)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeAbsolute(SerializationStore,Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "序列化指定的物件，說明預設屬性值。"
  remarks: "標準序列化，以實作透過<xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize%2A>方法，只會序列化和不同元件的預設狀態的值。</xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize%2A> 這會提供最精簡的序列化機制，但假設在還原序列化期間，將使用新建立的物件。 如果使用現有的物件時，還原序列化的物件不保證重複原始狀態的序列化的物件;在還原序列化期間，會重於序列化期間包含預設值的屬性設回其預設值。       SerializeAbsolute 方法未使用這個快速鍵。 它會序列化來源物件的所有屬性，好讓還原序列化可以還原所有物件的屬性，不論預設狀態。       因為可能會變更的組成項目集合中的順序，這個方法是序列化的集合，特別有用。 在此情況下，最安全的程序來還原整個集合的原始狀態為其原始的屬性值來覆寫的所有項目。"
  syntax:
    content: public abstract void SerializeAbsolute (System.ComponentModel.Design.Serialization.SerializationStore store, object value);
    parameters:
    - id: store
      type: System.ComponentModel.Design.Serialization.SerializationStore
      description: "<xref href=&quot;System.ComponentModel.Design.Serialization.SerializationStore&quot;> </xref>要的狀態`value`會序列化。"
    - id: value
      type: System.Object
      description: "要序列化的物件。"
  overload: System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeAbsolute*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>store</code>or <code>value</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>store</code>已關閉，或<code>store</code>不支援的類型的序列化存放區。 使用傳回的存放區<xref:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore*>。"
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMember(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)
  id: SerializeMember(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  langs:
  - csharp
  name: SerializeMember(SerializationStore,Object,MemberDescriptor)
  nameWithType: ComponentSerializationService.SerializeMember(SerializationStore,Object,MemberDescriptor)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMember(SerializationStore,Object,MemberDescriptor)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "序列化指定的物件上指定的成員。"
  remarks: "SerializeMember 方法可以多次叫用來建立一份已序列化的序列化存放區中的成員相同的物件。 一般情況下，成員應該是屬性或事件。"
  syntax:
    content: public abstract void SerializeMember (System.ComponentModel.Design.Serialization.SerializationStore store, object owningObject, System.ComponentModel.MemberDescriptor member);
    parameters:
    - id: store
      type: System.ComponentModel.Design.Serialization.SerializationStore
      description: "<xref href=&quot;System.ComponentModel.Design.Serialization.SerializationStore&quot;> </xref>要的狀態`member`會序列化。"
    - id: owningObject
      type: System.Object
      description: "目標物件`member`附加。"
    - id: member
      type: System.ComponentModel.MemberDescriptor
      description: "A <xref href=&quot;System.ComponentModel.MemberDescriptor&quot;> </xref>指定要序列化的成員。"
  overload: System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMember*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>store</code>or <code>value</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>store</code>已關閉，或<code>store</code>不支援的類型的序列化存放區。 使用傳回的存放區<xref:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore*>。"
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMemberAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)
  id: SerializeMemberAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  langs:
  - csharp
  name: SerializeMemberAbsolute(SerializationStore,Object,MemberDescriptor)
  nameWithType: ComponentSerializationService.SerializeMemberAbsolute(SerializationStore,Object,MemberDescriptor)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMemberAbsolute(SerializationStore,Object,MemberDescriptor)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "序列化計量的預設屬性值的指定的成員上指定的物件。"
  remarks: "SerializeMemberAbsolute 方法會序列化`member`上`owningObject`，即使`member`包含預設屬性值。       請注意，對於某些成員，包含預設值，並還原到成員的相同值的設定不同的概念。 例如，如果屬性是繼承它的值從父物件時未不設定任何本機的值，設定至屬性的值可能無法預期。 SerializeMemberAbsolute 方法列入考量，並會在此情況下清除屬性的狀態。"
  syntax:
    content: public abstract void SerializeMemberAbsolute (System.ComponentModel.Design.Serialization.SerializationStore store, object owningObject, System.ComponentModel.MemberDescriptor member);
    parameters:
    - id: store
      type: System.ComponentModel.Design.Serialization.SerializationStore
      description: "<xref href=&quot;System.ComponentModel.Design.Serialization.SerializationStore&quot;> </xref>要的狀態`member`會序列化。"
    - id: owningObject
      type: System.Object
      description: "目標物件`member`附加。"
    - id: member
      type: System.ComponentModel.MemberDescriptor
      description: "要序列化的成員。"
  overload: System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMemberAbsolute*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>store</code>or <code>value</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>store</code>已關閉，或<code>store</code>不支援的類型的序列化存放區。 使用傳回的存放區<xref:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore*>。"
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.#ctor
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: ComponentSerializationService()
  nameWithType: ComponentSerializationService.ComponentSerializationService()
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.ComponentSerializationService()
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.CreateStore
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: CreateStore()
  nameWithType: ComponentSerializationService.CreateStore()
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.CreateStore()
- uid: System.ComponentModel.Design.Serialization.SerializationStore
  parent: System.ComponentModel.Design.Serialization
  isExternal: false
  name: SerializationStore
  nameWithType: SerializationStore
  fullName: System.ComponentModel.Design.Serialization.SerializationStore
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize(System.ComponentModel.Design.Serialization.SerializationStore)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: Deserialize(SerializationStore)
  nameWithType: ComponentSerializationService.Deserialize(SerializationStore)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize(SerializationStore)
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: Deserialize(SerializationStore,IContainer)
  nameWithType: ComponentSerializationService.Deserialize(SerializationStore,IContainer)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize(SerializationStore,IContainer)
- uid: System.ComponentModel.IContainer
  parent: System.ComponentModel
  isExternal: false
  name: IContainer
  nameWithType: IContainer
  fullName: System.ComponentModel.IContainer
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: DeserializeTo(SerializationStore,IContainer)
  nameWithType: ComponentSerializationService.DeserializeTo(SerializationStore,IContainer)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(SerializationStore,IContainer)
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer,System.Boolean)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: DeserializeTo(SerializationStore,IContainer,Boolean)
  nameWithType: ComponentSerializationService.DeserializeTo(SerializationStore,IContainer,Boolean)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(SerializationStore,IContainer,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer,System.Boolean,System.Boolean)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: DeserializeTo(SerializationStore,IContainer,Boolean,Boolean)
  nameWithType: ComponentSerializationService.DeserializeTo(SerializationStore,IContainer,Boolean,Boolean)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(SerializationStore,IContainer,Boolean,Boolean)
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.LoadStore(System.IO.Stream)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: LoadStore(Stream)
  nameWithType: ComponentSerializationService.LoadStore(Stream)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.LoadStore(Stream)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: Serialize(SerializationStore,Object)
  nameWithType: ComponentSerializationService.Serialize(SerializationStore,Object)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize(SerializationStore,Object)
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: SerializeAbsolute(SerializationStore,Object)
  nameWithType: ComponentSerializationService.SerializeAbsolute(SerializationStore,Object)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeAbsolute(SerializationStore,Object)
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMember(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: SerializeMember(SerializationStore,Object,MemberDescriptor)
  nameWithType: ComponentSerializationService.SerializeMember(SerializationStore,Object,MemberDescriptor)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMember(SerializationStore,Object,MemberDescriptor)
- uid: System.ComponentModel.MemberDescriptor
  parent: System.ComponentModel
  isExternal: false
  name: MemberDescriptor
  nameWithType: MemberDescriptor
  fullName: System.ComponentModel.MemberDescriptor
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMemberAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: SerializeMemberAbsolute(SerializationStore,Object,MemberDescriptor)
  nameWithType: ComponentSerializationService.SerializeMemberAbsolute(SerializationStore,Object,MemberDescriptor)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMemberAbsolute(SerializationStore,Object,MemberDescriptor)
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.#ctor*
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: ComponentSerializationService
  nameWithType: ComponentSerializationService.ComponentSerializationService
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.CreateStore*
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: CreateStore
  nameWithType: ComponentSerializationService.CreateStore
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize*
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: Deserialize
  nameWithType: ComponentSerializationService.Deserialize
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo*
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: DeserializeTo
  nameWithType: ComponentSerializationService.DeserializeTo
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.LoadStore*
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: LoadStore
  nameWithType: ComponentSerializationService.LoadStore
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize*
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: Serialize
  nameWithType: ComponentSerializationService.Serialize
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeAbsolute*
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: SerializeAbsolute
  nameWithType: ComponentSerializationService.SerializeAbsolute
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMember*
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: SerializeMember
  nameWithType: ComponentSerializationService.SerializeMember
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMemberAbsolute*
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: SerializeMemberAbsolute
  nameWithType: ComponentSerializationService.SerializeMemberAbsolute
