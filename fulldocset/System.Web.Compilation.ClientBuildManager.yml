### YamlMime:ManagedReference
items:
- uid: System.Web.Compilation.ClientBuildManager
  id: ClientBuildManager
  children:
  - System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String)
  - System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String,System.String)
  - System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String,System.String,System.Web.Compilation.ClientBuildManagerParameter)
  - System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String,System.String,System.Web.Compilation.ClientBuildManagerParameter,System.ComponentModel.TypeDescriptionProvider)
  - System.Web.Compilation.ClientBuildManager.AppDomainShutdown
  - System.Web.Compilation.ClientBuildManager.AppDomainStarted
  - System.Web.Compilation.ClientBuildManager.AppDomainUnloaded
  - System.Web.Compilation.ClientBuildManager.CodeGenDir
  - System.Web.Compilation.ClientBuildManager.CompileApplicationDependencies
  - System.Web.Compilation.ClientBuildManager.CompileFile(System.String)
  - System.Web.Compilation.ClientBuildManager.CompileFile(System.String,System.Web.Compilation.ClientBuildManagerCallback)
  - System.Web.Compilation.ClientBuildManager.CreateObject(System.Type,System.Boolean)
  - System.Web.Compilation.ClientBuildManager.GenerateCode(System.String,System.String,System.Collections.IDictionary@)
  - System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.Collections.IDictionary@)
  - System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit(System.String,System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.Collections.IDictionary@)
  - System.Web.Compilation.ClientBuildManager.GetAppDomainShutdownDirectories
  - System.Web.Compilation.ClientBuildManager.GetBrowserDefinitions
  - System.Web.Compilation.ClientBuildManager.GetCodeDirectoryInformation(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.String@)
  - System.Web.Compilation.ClientBuildManager.GetCompiledType(System.String)
  - System.Web.Compilation.ClientBuildManager.GetCompilerParameters(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@)
  - System.Web.Compilation.ClientBuildManager.GetGeneratedFileVirtualPath(System.String)
  - System.Web.Compilation.ClientBuildManager.GetGeneratedSourceFile(System.String)
  - System.Web.Compilation.ClientBuildManager.GetTopLevelAssemblyReferences(System.String)
  - System.Web.Compilation.ClientBuildManager.GetVirtualCodeDirectories
  - System.Web.Compilation.ClientBuildManager.InitializeLifetimeService
  - System.Web.Compilation.ClientBuildManager.IsCodeAssembly(System.String)
  - System.Web.Compilation.ClientBuildManager.IsHostCreated
  - System.Web.Compilation.ClientBuildManager.PrecompileApplication
  - System.Web.Compilation.ClientBuildManager.PrecompileApplication(System.Web.Compilation.ClientBuildManagerCallback)
  - System.Web.Compilation.ClientBuildManager.PrecompileApplication(System.Web.Compilation.ClientBuildManagerCallback,System.Boolean)
  - System.Web.Compilation.ClientBuildManager.System#IDisposable#Dispose
  - System.Web.Compilation.ClientBuildManager.Unload
  langs:
  - csharp
  name: ClientBuildManager
  nameWithType: ClientBuildManager
  fullName: System.Web.Compilation.ClientBuildManager
  type: Class
  summary: "提供 ASP.NET 應用程式的編譯服務。"
  remarks: "ClientBuildManager 類別提供方法和屬性的編譯 ASP.NET Web 應用程式，並擷取產生的組件，或產生的原始程式碼。 類別的執行個體的用戶端應用程式定義域中建立，並提供存取 ASP.NET 建置系統之外 Microsoft 網際網路資訊服務 (IIS)。 類別可以用來開發自訂的工具編譯 Web 應用程式。       命令列工具`aspnet_compiler`使用 ClientBuildManager 類別。"
  syntax:
    content: 'public sealed class ClientBuildManager : MarshalByRefObject, IDisposable'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: ClientBuildManager(String,String)
  nameWithType: ClientBuildManager.ClientBuildManager(String,String)
  fullName: System.Web.Compilation.ClientBuildManager.ClientBuildManager(String,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "初始化的新執行個體<xref href=&quot;System.Web.Compilation.ClientBuildManager&quot;></xref>類別而不需要指定的目標目錄或先行編譯的旗標。"
  syntax:
    content: public ClientBuildManager (string appVirtualDir, string appPhysicalSourceDir);
    parameters:
    - id: appVirtualDir
      type: System.String
      description: "應用程式根目錄的虛擬路徑。"
    - id: appPhysicalSourceDir
      type: System.String
      description: "應用程式根目錄的實體路徑。"
  overload: System.Web.Compilation.ClientBuildManager.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: ClientBuildManager(String,String,String)
  nameWithType: ClientBuildManager.ClientBuildManager(String,String,String)
  fullName: System.Web.Compilation.ClientBuildManager.ClientBuildManager(String,String,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "初始化的新執行個體<xref href=&quot;System.Web.Compilation.ClientBuildManager&quot;></xref>類別與指定的目標目錄。"
  remarks: "這種形式的建構函式通常會使用先行編譯，因為它會指定先行編譯目標目錄。"
  syntax:
    content: public ClientBuildManager (string appVirtualDir, string appPhysicalSourceDir, string appPhysicalTargetDir);
    parameters:
    - id: appVirtualDir
      type: System.String
      description: "應用程式根目錄的虛擬路徑。"
    - id: appPhysicalSourceDir
      type: System.String
      description: "應用程式根目錄的實體路徑。"
    - id: appPhysicalTargetDir
      type: System.String
      description: "先行編譯目標目錄。"
  overload: System.Web.Compilation.ClientBuildManager.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String,System.String,System.Web.Compilation.ClientBuildManagerParameter)
  id: '#ctor(System.String,System.String,System.String,System.Web.Compilation.ClientBuildManagerParameter)'
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: ClientBuildManager(String,String,String,ClientBuildManagerParameter)
  nameWithType: ClientBuildManager.ClientBuildManager(String,String,String,ClientBuildManagerParameter)
  fullName: System.Web.Compilation.ClientBuildManager.ClientBuildManager(String,String,String,ClientBuildManagerParameter)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "初始化的新執行個體<xref href=&quot;System.Web.Compilation.ClientBuildManager&quot;></xref>具有指定的目標目錄和編譯參數類別。"
  remarks: "這種形式的建構函式通常會使用先行編譯，因為它會指定先行編譯目標目錄和先行編譯的旗標。"
  syntax:
    content: public ClientBuildManager (string appVirtualDir, string appPhysicalSourceDir, string appPhysicalTargetDir, System.Web.Compilation.ClientBuildManagerParameter parameter);
    parameters:
    - id: appVirtualDir
      type: System.String
      description: "應用程式根目錄的虛擬路徑。"
    - id: appPhysicalSourceDir
      type: System.String
      description: "應用程式根目錄的實體路徑。"
    - id: appPhysicalTargetDir
      type: System.String
      description: "先行編譯目標目錄。"
    - id: parameter
      type: System.Web.Compilation.ClientBuildManagerParameter
      description: "判斷先行編譯的行為的值。"
  overload: System.Web.Compilation.ClientBuildManager.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String,System.String,System.Web.Compilation.ClientBuildManagerParameter,System.ComponentModel.TypeDescriptionProvider)
  id: '#ctor(System.String,System.String,System.String,System.Web.Compilation.ClientBuildManagerParameter,System.ComponentModel.TypeDescriptionProvider)'
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: ClientBuildManager(String,String,String,ClientBuildManagerParameter,TypeDescriptionProvider)
  nameWithType: ClientBuildManager.ClientBuildManager(String,String,String,ClientBuildManagerParameter,TypeDescriptionProvider)
  fullName: System.Web.Compilation.ClientBuildManager.ClientBuildManager(String,String,String,ClientBuildManagerParameter,TypeDescriptionProvider)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "初始化的新執行個體<xref href=&quot;System.Web.Compilation.ClientBuildManager&quot;></xref>使用指定的虛擬目錄、 來源目錄中，目標目錄、 編譯參數和類型描述提供者的類別。"
  syntax:
    content: public ClientBuildManager (string appVirtualDir, string appPhysicalSourceDir, string appPhysicalTargetDir, System.Web.Compilation.ClientBuildManagerParameter parameter, System.ComponentModel.TypeDescriptionProvider typeDescriptionProvider);
    parameters:
    - id: appVirtualDir
      type: System.String
      description: "應用程式根目錄的虛擬路徑。"
    - id: appPhysicalSourceDir
      type: System.String
      description: "應用程式根目錄的實體路徑。"
    - id: appPhysicalTargetDir
      type: System.String
      description: "先行編譯目標目錄。"
    - id: parameter
      type: System.Web.Compilation.ClientBuildManagerParameter
      description: "判斷先行編譯的行為的值。"
    - id: typeDescriptionProvider
      type: System.ComponentModel.TypeDescriptionProvider
      description: "使用的類型描述提供者。 此參數主要用於支援 Visual Studio 中的多目標的基礎結構。 它用來擷取已篩選的特定版本的.NET Framework 類型的相關中繼資料。"
  overload: System.Web.Compilation.ClientBuildManager.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.AppDomainShutdown
  id: AppDomainShutdown
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: AppDomainShutdown
  nameWithType: ClientBuildManager.AppDomainShutdown
  fullName: System.Web.Compilation.ClientBuildManager.AppDomainShutdown
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "關閉應用程式定義域時，就會發生。"
  syntax:
    content: public event System.Web.Compilation.BuildManagerHostUnloadEventHandler AppDomainShutdown;
    return:
      type: System.Web.Compilation.BuildManagerHostUnloadEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.AppDomainStarted
  id: AppDomainStarted
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: AppDomainStarted
  nameWithType: ClientBuildManager.AppDomainStarted
  fullName: System.Web.Compilation.ClientBuildManager.AppDomainStarted
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "啟動應用程式定義域時，就會發生。"
  syntax:
    content: public event EventHandler AppDomainStarted;
    return:
      type: System.EventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.AppDomainUnloaded
  id: AppDomainUnloaded
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: AppDomainUnloaded
  nameWithType: ClientBuildManager.AppDomainUnloaded
  fullName: System.Web.Compilation.ClientBuildManager.AppDomainUnloaded
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "應用程式定義域卸載時，就會發生。"
  syntax:
    content: public event System.Web.Compilation.BuildManagerHostUnloadEventHandler AppDomainUnloaded;
    return:
      type: System.Web.Compilation.BuildManagerHostUnloadEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.CodeGenDir
  id: CodeGenDir
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: CodeGenDir
  nameWithType: ClientBuildManager.CodeGenDir
  fullName: System.Web.Compilation.ClientBuildManager.CodeGenDir
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "取得用來產生程式碼之目錄的實體路徑。"
  remarks: "用於產生程式碼目錄通常是暫存 ASP.NET files 目錄中。"
  syntax:
    content: public string CodeGenDir { get; }
    return:
      type: System.String
      description: "A<xref:System.String>包含用於產生程式碼的目錄路徑。</xref:System.String>"
  overload: System.Web.Compilation.ClientBuildManager.CodeGenDir*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.CompileApplicationDependencies
  id: CompileApplicationDependencies
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: CompileApplicationDependencies()
  nameWithType: ClientBuildManager.CompileApplicationDependencies()
  fullName: System.Web.Compilation.ClientBuildManager.CompileApplicationDependencies()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "編譯應用程式相依的檔案，例如 App_Code 目錄中的檔案、 Global.asax 檔案、 資源檔，以及 Web 參考。"
  remarks: "CompileApplicationDependencies 方法可確保編譯資源、 Web 參考、 App_Code 目錄中的檔案、.browser App_Browsers 目錄中的檔案和 Global.asax 檔案。"
  syntax:
    content: public void CompileApplicationDependencies ();
    parameters: []
  overload: System.Web.Compilation.ClientBuildManager.CompileApplicationDependencies*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.CompileFile(System.String)
  id: CompileFile(System.String)
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: CompileFile(String)
  nameWithType: ClientBuildManager.CompileFile(String)
  fullName: System.Web.Compilation.ClientBuildManager.CompileFile(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "編譯的虛擬路徑所表示的檔案。"
  syntax:
    content: public void CompileFile (string virtualPath);
    parameters:
    - id: virtualPath
      type: System.String
      description: "要編譯檔案的路徑。"
  overload: System.Web.Compilation.ClientBuildManager.CompileFile*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.CompileFile(System.String,System.Web.Compilation.ClientBuildManagerCallback)
  id: CompileFile(System.String,System.Web.Compilation.ClientBuildManagerCallback)
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: CompileFile(String,ClientBuildManagerCallback)
  nameWithType: ClientBuildManager.CompileFile(String,ClientBuildManagerCallback)
  fullName: System.Web.Compilation.ClientBuildManager.CompileFile(String,ClientBuildManagerCallback)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "編譯的虛擬路徑所表示的檔案，並提供回呼類別，以接收有關組建的狀態資訊。"
  syntax:
    content: public void CompileFile (string virtualPath, System.Web.Compilation.ClientBuildManagerCallback callback);
    parameters:
    - id: virtualPath
      type: System.String
      description: "要編譯檔案的路徑。"
    - id: callback
      type: System.Web.Compilation.ClientBuildManagerCallback
      description: "要從編譯接收狀態資訊的物件。"
  overload: System.Web.Compilation.ClientBuildManager.CompileFile*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>virtualPath</code>為 null。"
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.CreateObject(System.Type,System.Boolean)
  id: CreateObject(System.Type,System.Boolean)
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: CreateObject(Type,Boolean)
  nameWithType: ClientBuildManager.CreateObject(Type,Boolean)
  fullName: System.Web.Compilation.ClientBuildManager.CreateObject(Type,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "ASP.NET 執行階段的應用程式定義域中建立的物件。"
  syntax:
    content: public System.Web.Hosting.IRegisteredObject CreateObject (Type type, bool failIfExists);
    parameters:
    - id: type
      type: System.Type
      description: "要建立的物件類型。"
    - id: failIfExists
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果物件已建立應用程式網域中的 ASP.NET 執行階段則擲回例外狀況否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.Web.Hosting.IRegisteredObject
      description: "ASP.NET 執行階段的應用程式定義域中的物件。"
  overload: System.Web.Compilation.ClientBuildManager.CreateObject*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>type</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "物件已經存在於應用程式定義域和<code> failIfExists </code>是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.GenerateCode(System.String,System.String,System.Collections.IDictionary@)
  id: GenerateCode(System.String,System.String,System.Collections.IDictionary@)
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: GenerateCode(String,String,IDictionary)
  nameWithType: ClientBuildManager.GenerateCode(String,String,IDictionary)
  fullName: System.Web.Compilation.ClientBuildManager.GenerateCode(String,String,IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "從檔案的內容中產生程式碼。"
  syntax:
    content: public string GenerateCode (string virtualPath, string virtualFileString, out System.Collections.IDictionary linePragmasTable);
    parameters:
    - id: virtualPath
      type: System.String
      description: "檔案虛擬路徑。"
    - id: virtualFileString
      type: System.String
      description: "檔案的內容。"
    - id: linePragmasTable
      type: System.Collections.IDictionary
      description: "此方法傳回時，會包含行程式的字典。"
    return:
      type: System.String
      description: "A<xref:System.String>包含產生的程式碼。</xref:System.String>"
  overload: System.Web.Compilation.ClientBuildManager.GenerateCode*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>virtualPath</code>為 null。"
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.Collections.IDictionary@)
  id: GenerateCodeCompileUnit(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.Collections.IDictionary@)
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: GenerateCodeCompileUnit(String,Type,CompilerParameters,IDictionary)
  nameWithType: ClientBuildManager.GenerateCodeCompileUnit(String,Type,CompilerParameters,IDictionary)
  fullName: System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit(String,Type,CompilerParameters,IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "傳回的 codeDOM 樹狀目錄、 編譯器型別和編譯器參數，表示由虛擬路徑的檔案。"
  remarks: "GenerateCodeCompileUnit 方法擷取編譯檔案所需的資訊。 除了<xref:System.CodeDom.CodeCompileUnit>物件做為傳回值，它會傳回三個`out`參數。</xref:System.CodeDom.CodeCompileUnit> `codeDomProviderType`參數會傳回提供者型別產生和編譯檔案。 `compilerParameters`參數包含決定編譯行為的屬性。 `linePragmasTable`參數包含行程式的字典。"
  syntax:
    content: public System.CodeDom.CodeCompileUnit GenerateCodeCompileUnit (string virtualPath, out Type codeDomProviderType, out System.CodeDom.Compiler.CompilerParameters compilerParameters, out System.Collections.IDictionary linePragmasTable);
    parameters:
    - id: virtualPath
      type: System.String
      description: "檔案虛擬路徑。"
    - id: codeDomProviderType
      type: System.Type
      description: "這個方法傳回時，包含用於程式碼產生和編譯的 codeDOM 提供者類型。"
    - id: compilerParameters
      type: System.CodeDom.Compiler.CompilerParameters
      description: "此方法傳回時，包含定義如何將編譯檔案的屬性。"
    - id: linePragmasTable
      type: System.Collections.IDictionary
      description: "此方法傳回時，會包含行程式的字典。"
    return:
      type: System.CodeDom.CodeCompileUnit
      description: "A <xref href=&quot;System.CodeDom.CodeCompileUnit&quot;> </xref>為指定的檔案。"
  overload: System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit(System.String,System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.Collections.IDictionary@)
  id: GenerateCodeCompileUnit(System.String,System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.Collections.IDictionary@)
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: GenerateCodeCompileUnit(String,String,Type,CompilerParameters,IDictionary)
  nameWithType: ClientBuildManager.GenerateCodeCompileUnit(String,String,Type,CompilerParameters,IDictionary)
  fullName: System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit(String,String,Type,CompilerParameters,IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "傳回內容、 codeDOM 樹狀目錄中，編譯器型別和編譯器參數，表示由虛擬路徑的檔案。"
  remarks: "GenerateCodeCompileUnit 方法擷取編譯檔案所需的資訊。 除了<xref:System.CodeDom.CodeCompileUnit>物件做為傳回值，它會傳回三個`out`參數。</xref:System.CodeDom.CodeCompileUnit> `codeDomProviderType`參數會傳回提供者型別產生和編譯檔案。 `compilerParameters`參數包含決定編譯行為的屬性。 `linePragmasTable`參數包含行程式的字典。"
  syntax:
    content: public System.CodeDom.CodeCompileUnit GenerateCodeCompileUnit (string virtualPath, string virtualFileString, out Type codeDomProviderType, out System.CodeDom.Compiler.CompilerParameters compilerParameters, out System.Collections.IDictionary linePragmasTable);
    parameters:
    - id: virtualPath
      type: System.String
      description: "檔案虛擬路徑。"
    - id: virtualFileString
      type: System.String
      description: "所表示的檔案內容`virtualPath`參數。"
    - id: codeDomProviderType
      type: System.Type
      description: "這個方法傳回時，包含用於程式碼產生和編譯的 codeDOM 提供者類型。"
    - id: compilerParameters
      type: System.CodeDom.Compiler.CompilerParameters
      description: "這個方法傳回時，包含定義檔案所呈現的方式的屬性，`virtualPath`參數將進行編譯。"
    - id: linePragmasTable
      type: System.Collections.IDictionary
      description: "此方法傳回時，會包含行程式的字典。"
    return:
      type: System.CodeDom.CodeCompileUnit
      description: "A <xref href=&quot;System.CodeDom.CodeCompileUnit&quot;> </xref>為指定的檔案。"
  overload: System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>virtualPath</code>為 null。"
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.GetAppDomainShutdownDirectories
  id: GetAppDomainShutdownDirectories
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: GetAppDomainShutdownDirectories()
  nameWithType: ClientBuildManager.GetAppDomainShutdownDirectories()
  fullName: System.Web.Compilation.ClientBuildManager.GetAppDomainShutdownDirectories()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "取得目錄的檔案，變更時，會導致應用程式定義域關閉。"
  remarks: "特定的最上層目錄中檔案的變更會導致應用程式定義域關閉。 分類收納、 App_Code、 Global_Resources、 Web 參考和 App_Browsers 目錄中的檔案會監視偵測到任何變更。 偵測到變更時，應用程式定義域已關閉。"
  syntax:
    content: public string[] GetAppDomainShutdownDirectories ();
    parameters: []
    return:
      type: System.String[]
      description: "A<xref:System.String>陣列，包含最上層目錄名稱。</xref:System.String>"
  overload: System.Web.Compilation.ClientBuildManager.GetAppDomainShutdownDirectories*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.GetBrowserDefinitions
  id: GetBrowserDefinitions
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: GetBrowserDefinitions()
  nameWithType: ClientBuildManager.GetBrowserDefinitions()
  fullName: System.Web.Compilation.ClientBuildManager.GetBrowserDefinitions()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "取得瀏覽器元素的集合。"
  remarks: "<xref:System.Collections.IDictionary>物件包含索引鍵的瀏覽器名稱和<xref:System.Web.UI.Triplet>物件的值。</xref:System.Web.UI.Triplet> </xref:System.Collections.IDictionary> <xref:System.Web.UI.Triplet>物件每一個都包含名稱的父瀏覽器項目、 描述以及瀏覽器中的項目樹狀結構的深度。</xref:System.Web.UI.Triplet>"
  syntax:
    content: public System.Collections.IDictionary GetBrowserDefinitions ();
    parameters: []
    return:
      type: System.Collections.IDictionary
      description: "<xref:System.Collections.IDictionary>包含瀏覽器項目。</xref:System.Collections.IDictionary>"
  overload: System.Web.Compilation.ClientBuildManager.GetBrowserDefinitions*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.GetCodeDirectoryInformation(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.String@)
  id: GetCodeDirectoryInformation(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.String@)
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: GetCodeDirectoryInformation(String,Type,CompilerParameters,String)
  nameWithType: ClientBuildManager.GetCodeDirectoryInformation(String,Type,CompilerParameters,String)
  fullName: System.Web.Compilation.ClientBuildManager.GetCodeDirectoryInformation(String,Type,CompilerParameters,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "取得相關的編譯器型別、 編譯器參數，以及用來儲存非程式碼檔案，例如.wsdl 檔案從產生的程式碼檔案中的目錄資訊。"
  remarks: "GetCodeDirectoryInformation 方法擷取建置程式碼目錄所需的資訊。 它會傳回這項資訊到第三`out`參數。 `codeDomProviderType`參數會傳回提供者型別產生和編譯程式碼目錄中的檔案。 `compilerParameters`參數包含決定編譯行為的屬性。 `generatedFilesDir`參數將儲存包含產生的程式碼目錄，例如.wsdl 檔案中的非程式碼檔案中的程式碼檔的目錄路徑。"
  syntax:
    content: public void GetCodeDirectoryInformation (string virtualCodeDir, out Type codeDomProviderType, out System.CodeDom.Compiler.CompilerParameters compilerParameters, out string generatedFilesDir);
    parameters:
    - id: virtualCodeDir
      type: System.String
      description: "這是要擷取資訊相關目錄。"
    - id: codeDomProviderType
      type: System.Type
      description: "這個方法傳回時，包含用於程式碼產生和編譯的提供者類型。"
    - id: compilerParameters
      type: System.CodeDom.Compiler.CompilerParameters
      description: "此方法傳回時，包含定義如何將編譯檔案的屬性。"
    - id: generatedFilesDir
      type: System.String
      description: "此方法傳回時，包含從程式碼檔案產生的檔案的目錄。"
  overload: System.Web.Compilation.ClientBuildManager.GetCodeDirectoryInformation*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>virtualCodeDir</code>為 null。"
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.GetCompiledType(System.String)
  id: GetCompiledType(System.String)
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: GetCompiledType(String)
  nameWithType: ClientBuildManager.GetCompiledType(String)
  fullName: System.Web.Compilation.ClientBuildManager.GetCompiledType(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "編譯的虛擬路徑所表示的檔案，並傳回其已編譯的型別。"
  syntax:
    content: public Type GetCompiledType (string virtualPath);
    parameters:
    - id: virtualPath
      type: System.String
      description: "要編譯之檔案的虛擬路徑。"
    return:
      type: System.Type
      description: "<xref:System.Type>的已編譯的檔案。</xref:System.Type>"
  overload: System.Web.Compilation.ClientBuildManager.GetCompiledType*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>virtualPath</code>為 null。"
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.GetCompilerParameters(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@)
  id: GetCompilerParameters(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@)
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: GetCompilerParameters(String,Type,CompilerParameters)
  nameWithType: ClientBuildManager.GetCompilerParameters(String,Type,CompilerParameters)
  fullName: System.Web.Compilation.ClientBuildManager.GetCompilerParameters(String,Type,CompilerParameters)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "傳回的編譯器型別和參數，用來建立虛擬路徑所表示的檔案。"
  syntax:
    content: public void GetCompilerParameters (string virtualPath, out Type codeDomProviderType, out System.CodeDom.Compiler.CompilerParameters compilerParameters);
    parameters:
    - id: virtualPath
      type: System.String
      description: "檔案虛擬路徑。"
    - id: codeDomProviderType
      type: System.Type
      description: "這個方法傳回時，包含用於程式碼產生和編譯的提供者類型。"
    - id: compilerParameters
      type: System.CodeDom.Compiler.CompilerParameters
      description: "此方法傳回時，包含定義如何將編譯檔案的屬性。"
  overload: System.Web.Compilation.ClientBuildManager.GetCompilerParameters*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>virtualPath</code>為 null。"
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.GetGeneratedFileVirtualPath(System.String)
  id: GetGeneratedFileVirtualPath(System.String)
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: GetGeneratedFileVirtualPath(String)
  nameWithType: ClientBuildManager.GetGeneratedFileVirtualPath(String)
  fullName: System.Web.Compilation.ClientBuildManager.GetGeneratedFileVirtualPath(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "傳回產生的檔案的虛擬路徑。"
  syntax:
    content: public string GetGeneratedFileVirtualPath (string filePath);
    parameters:
    - id: filePath
      type: System.String
      description: "產生檔案的完整實體路徑。"
    return:
      type: System.String
      description: "A<xref:System.String>包含的虛擬路徑<code> filePath </code>。</xref:System.String>"
  overload: System.Web.Compilation.ClientBuildManager.GetGeneratedFileVirtualPath*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>filePath</code>為 null。"
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.GetGeneratedSourceFile(System.String)
  id: GetGeneratedSourceFile(System.String)
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: GetGeneratedSourceFile(String)
  nameWithType: ClientBuildManager.GetGeneratedSourceFile(String)
  fullName: System.Web.Compilation.ClientBuildManager.GetGeneratedSourceFile(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "取得虛擬路徑產生的檔案的實體路徑。"
  syntax:
    content: public string GetGeneratedSourceFile (string virtualPath);
    parameters:
    - id: virtualPath
      type: System.String
      description: "要擷取的檔案虛擬路徑。"
    return:
      type: System.String
      description: "A <xref:System.String>，其中包含所產生的檔案的實體路徑。</xref:System.String>"
  overload: System.Web.Compilation.ClientBuildManager.GetGeneratedSourceFile*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>virtualPath</code>為 null。"
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.GetTopLevelAssemblyReferences(System.String)
  id: GetTopLevelAssemblyReferences(System.String)
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: GetTopLevelAssemblyReferences(String)
  nameWithType: ClientBuildManager.GetTopLevelAssemblyReferences(String)
  fullName: System.Web.Compilation.ClientBuildManager.GetTopLevelAssemblyReferences(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "傳回陣列的 Bin 目錄中定義的組件和<xref uid=&quot;langword_csharp_&lt;assembly&gt;&quot; name=&quot;&lt;assembly&gt;&quot; href=&quot;&quot;> </xref> Web 組態檔區段。"
  syntax:
    content: public string[] GetTopLevelAssemblyReferences (string virtualPath);
    parameters:
    - id: virtualPath
      type: System.String
      description: "組態名稱和路徑。"
    return:
      type: System.String[]
      description: "A <xref:System.String>Bin 目錄中的陣列包含路徑的程式碼基底和<xref uid=&quot;langword_csharp_&lt;assembly&gt;&quot; name=&quot;&lt;assembly&gt;&quot; href=&quot;&quot;> </xref> Web 組態檔區段。</xref:System.String>"
  overload: System.Web.Compilation.ClientBuildManager.GetTopLevelAssemblyReferences*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>virtualPath</code>為 null。"
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.GetVirtualCodeDirectories
  id: GetVirtualCodeDirectories
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: GetVirtualCodeDirectories()
  nameWithType: ClientBuildManager.GetVirtualCodeDirectories()
  fullName: System.Web.Compilation.ClientBuildManager.GetVirtualCodeDirectories()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "回到 App_Code 目錄和子目錄中的 ASP.NET 應用程式的虛擬路徑。"
  syntax:
    content: public string[] GetVirtualCodeDirectories ();
    parameters: []
    return:
      type: System.String[]
      description: "A<xref:System.String>陣列，其中包含所有應用程式中的程式碼目錄的虛擬路徑。</xref:System.String>"
  overload: System.Web.Compilation.ClientBuildManager.GetVirtualCodeDirectories*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.InitializeLifetimeService
  id: InitializeLifetimeService
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: InitializeLifetimeService()
  nameWithType: ClientBuildManager.InitializeLifetimeService()
  fullName: System.Web.Compilation.ClientBuildManager.InitializeLifetimeService()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "可讓應用程式定義域無限存留期由防止建立租用。"
  remarks: "這個方法會覆寫<xref:System.MarshalByRefObject.InitializeLifetimeService%2A>其基底類別方法</xref:System.MarshalByRefObject.InitializeLifetimeService%2A> 它會一律傳回`null`，因而會防止建立會限制應用程式定義域的存留期的使用期。"
  syntax:
    content: public override object InitializeLifetimeService ();
    parameters: []
    return:
      type: System.Object
      description: "Always <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Web.Compilation.ClientBuildManager.InitializeLifetimeService*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.IsCodeAssembly(System.String)
  id: IsCodeAssembly(System.String)
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: IsCodeAssembly(String)
  nameWithType: ClientBuildManager.IsCodeAssembly(String)
  fullName: System.Web.Compilation.ClientBuildManager.IsCodeAssembly(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "指出組件是否為程式碼組件。"
  syntax:
    content: public bool IsCodeAssembly (string assemblyName);
    parameters:
    - id: assemblyName
      type: System.String
      description: "要被識別為程式碼組件的組件名稱。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<code> assemblyName </code>參數必須符合其中一個產生的程式碼組件，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.Compilation.ClientBuildManager.IsCodeAssembly*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>assemblyName</code>為 null。"
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.IsHostCreated
  id: IsHostCreated
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: IsHostCreated
  nameWithType: ClientBuildManager.IsHostCreated
  fullName: System.Web.Compilation.ClientBuildManager.IsHostCreated
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "取得值，指出是否已建立編譯 ASP.NET Web 應用程式的應用程式定義域。"
  syntax:
    content: public bool IsHostCreated { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果已建立編譯的 ASP.NET Web 應用程式的應用程式定義域。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.Compilation.ClientBuildManager.IsHostCreated*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.PrecompileApplication
  id: PrecompileApplication
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: PrecompileApplication()
  nameWithType: ClientBuildManager.PrecompileApplication()
  fullName: System.Web.Compilation.ClientBuildManager.PrecompileApplication()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "先行編譯的 ASP.NET 應用程式。"
  remarks: "ASP.NET 支援三種形式的先行編譯。 一種格式可讓您就地先行編譯的 ASP.NET 應用程式。 在這種形式，站台是部署到生產環境，然後預先編譯，這就不需要將站台時，使用者第一次造訪動態編譯。 第一個站台的使用者不會發生動態編譯的站台上正常情況下遇到延遲。       部署會使用兩個其他形式的先行編譯。 在任一形式中，產生的站台配置，可以部署至實際執行電腦。 其中一個表單包含標記頁，所以無法編譯站台上執行某些數量的更新。 另一個表單不包含標記頁，因此無法更新不需要重新編譯原始站台。 沒有來源的程式碼會部署到目標環境，其中一種形式的先行編譯。       先行編譯應用程式透過定義<xref:System.Web.Compilation.ClientBuildManager>建構函式。</xref:System.Web.Compilation.ClientBuildManager> <xref:System.Web.Compilation.ClientBuildManagerParameter>物件<xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A>建構函式會定義哪些執行先行編譯的三種形式。</xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A> </xref:System.Web.Compilation.ClientBuildManagerParameter>       開發人員可以先行編譯網站`aspnet_compiler`命令列工具或透過呼叫 PrecompileApplication 方法。"
  syntax:
    content: public void PrecompileApplication ();
    parameters: []
  overload: System.Web.Compilation.ClientBuildManager.PrecompileApplication*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.PrecompileApplication(System.Web.Compilation.ClientBuildManagerCallback)
  id: PrecompileApplication(System.Web.Compilation.ClientBuildManagerCallback)
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: PrecompileApplication(ClientBuildManagerCallback)
  nameWithType: ClientBuildManager.PrecompileApplication(ClientBuildManagerCallback)
  fullName: System.Web.Compilation.ClientBuildManager.PrecompileApplication(ClientBuildManagerCallback)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "先行編譯 ASP.NET 應用程式，並提供回呼方法，以接收組建的狀態資訊。"
  remarks: "ASP.NET 支援三種形式的先行編譯。 一種格式可讓您就地先行編譯的 ASP.NET 應用程式。 在這種形式，站台是部署到生產環境，然後預先編譯，這就不需要將站台時，使用者第一次造訪動態編譯。 第一個站台的使用者不會發生動態編譯的站台上正常情況下遇到延遲。 `callback`參數包含要報告的編譯結果時所呼叫的方法。       部署會使用兩個其他形式的先行編譯。 在任一形式中，產生的站台配置，可以部署至實際執行電腦。 其中一個表單包含標記頁，所以無法編譯站台上執行某些數量的更新。 另一個表單不包含標記頁，因此無法更新不需要重新編譯原始站台。 沒有來源的程式碼會部署到目標環境，其中一種形式的先行編譯。       先行編譯應用程式透過定義<xref:System.Web.Compilation.ClientBuildManager>建構函式。</xref:System.Web.Compilation.ClientBuildManager> <xref:System.Web.Compilation.ClientBuildManagerParameter>物件<xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A>建構函式會定義哪些執行先行編譯的三種形式。</xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A> </xref:System.Web.Compilation.ClientBuildManagerParameter>       開發人員可以先行編譯網站`aspnet_compiler`命令列工具或透過呼叫 PrecompileApplication 方法。"
  syntax:
    content: public void PrecompileApplication (System.Web.Compilation.ClientBuildManagerCallback callback);
    parameters:
    - id: callback
      type: System.Web.Compilation.ClientBuildManagerCallback
      description: "A <xref href=&quot;System.Web.Compilation.ClientBuildManagerCallback&quot;> </xref>包含要報告的編譯結果時所呼叫的方法。"
  overload: System.Web.Compilation.ClientBuildManager.PrecompileApplication*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.PrecompileApplication(System.Web.Compilation.ClientBuildManagerCallback,System.Boolean)
  id: PrecompileApplication(System.Web.Compilation.ClientBuildManagerCallback,System.Boolean)
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: PrecompileApplication(ClientBuildManagerCallback,Boolean)
  nameWithType: ClientBuildManager.PrecompileApplication(ClientBuildManagerCallback,Boolean)
  fullName: System.Web.Compilation.ClientBuildManager.PrecompileApplication(ClientBuildManagerCallback,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "先行編譯 ASP.NET 應用程式、 提供回呼方法，以接收有關組建的狀態資訊和指示是否建立乾淨的組建。"
  remarks: "ASP.NET 支援三種形式的先行編譯。 一種格式可讓您就地先行編譯的 ASP.NET 應用程式。 在這種形式，站台是部署到生產環境，然後預先編譯，這就不需要將站台時，使用者第一次造訪動態編譯。 第一個站台的使用者不會發生動態編譯的站台上正常情況下遇到延遲。 `callback`參數包含要報告的編譯結果時所呼叫的方法。       部署會使用兩個其他形式的先行編譯。 在任一形式中，產生的站台配置，可以部署至實際執行電腦。 其中一個表單包含標記頁，所以無法編譯站台上執行某些數量的更新。 另一個表單不包含標記頁，因此無法更新不需要重新編譯原始站台。 沒有來源的程式碼會部署到目標環境，其中一種形式的先行編譯。       先行編譯應用程式透過定義<xref:System.Web.Compilation.ClientBuildManager>建構函式。</xref:System.Web.Compilation.ClientBuildManager> <xref:System.Web.Compilation.ClientBuildManagerParameter>物件<xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A>建構函式會定義哪些執行先行編譯的三種形式。</xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A> </xref:System.Web.Compilation.ClientBuildManagerParameter>       開發人員可以先行編譯網站`aspnet_compiler`命令列工具，或呼叫<xref:System.Web.Compilation.ClientBuildManager.PrecompileApplication%2A>方法。</xref:System.Web.Compilation.ClientBuildManager.PrecompileApplication%2A>"
  syntax:
    content: public void PrecompileApplication (System.Web.Compilation.ClientBuildManagerCallback callback, bool forceCleanBuild);
    parameters:
    - id: callback
      type: System.Web.Compilation.ClientBuildManagerCallback
      description: "A <xref href=&quot;System.Web.Compilation.ClientBuildManagerCallback&quot;> </xref>包含要報告的編譯結果時所呼叫的方法。"
    - id: forceCleanBuild
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要執行乾淨的組建，這會先刪除所有物件和中繼檔。<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>重建這些變更的檔案。 設為 true，如果有相依性可能不會收取由建置環境的機會。"
  overload: System.Web.Compilation.ClientBuildManager.PrecompileApplication*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.System#IDisposable#Dispose
  id: System#IDisposable#Dispose
  isEii: true
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: System.IDisposable.Dispose()
  nameWithType: ClientBuildManager.System.IDisposable.Dispose()
  fullName: System.Web.Compilation.ClientBuildManager.System.IDisposable.Dispose()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "終止目前的 ASP.NET 應用程式。"
  syntax:
    content: void IDisposable.Dispose ();
    parameters: []
  overload: System.Web.Compilation.ClientBuildManager.System#IDisposable#Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.Unload
  id: Unload
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: Unload()
  nameWithType: ClientBuildManager.Unload()
  fullName: System.Web.Compilation.ClientBuildManager.Unload()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "卸載編譯 ASP.NET Web 應用程式的應用程式定義域。"
  syntax:
    content: public bool Unload ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果應用程式定義域已卸載。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.Compilation.ClientBuildManager.Unload*
  exceptions: []
  platform:
  - net462
references:
- uid: System.MarshalByRefObject
  isExternal: false
  name: System.MarshalByRefObject
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String)
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: ClientBuildManager(String,String)
  nameWithType: ClientBuildManager.ClientBuildManager(String,String)
  fullName: System.Web.Compilation.ClientBuildManager.ClientBuildManager(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String,System.String)
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: ClientBuildManager(String,String,String)
  nameWithType: ClientBuildManager.ClientBuildManager(String,String,String)
  fullName: System.Web.Compilation.ClientBuildManager.ClientBuildManager(String,String,String)
- uid: System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String,System.String,System.Web.Compilation.ClientBuildManagerParameter)
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: ClientBuildManager(String,String,String,ClientBuildManagerParameter)
  nameWithType: ClientBuildManager.ClientBuildManager(String,String,String,ClientBuildManagerParameter)
  fullName: System.Web.Compilation.ClientBuildManager.ClientBuildManager(String,String,String,ClientBuildManagerParameter)
- uid: System.Web.Compilation.ClientBuildManagerParameter
  parent: System.Web.Compilation
  isExternal: false
  name: ClientBuildManagerParameter
  nameWithType: ClientBuildManagerParameter
  fullName: System.Web.Compilation.ClientBuildManagerParameter
- uid: System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String,System.String,System.Web.Compilation.ClientBuildManagerParameter,System.ComponentModel.TypeDescriptionProvider)
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: ClientBuildManager(String,String,String,ClientBuildManagerParameter,TypeDescriptionProvider)
  nameWithType: ClientBuildManager.ClientBuildManager(String,String,String,ClientBuildManagerParameter,TypeDescriptionProvider)
  fullName: System.Web.Compilation.ClientBuildManager.ClientBuildManager(String,String,String,ClientBuildManagerParameter,TypeDescriptionProvider)
- uid: System.ComponentModel.TypeDescriptionProvider
  parent: System.ComponentModel
  isExternal: false
  name: TypeDescriptionProvider
  nameWithType: TypeDescriptionProvider
  fullName: System.ComponentModel.TypeDescriptionProvider
- uid: System.Web.Compilation.ClientBuildManager.AppDomainShutdown
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: AppDomainShutdown
  nameWithType: ClientBuildManager.AppDomainShutdown
  fullName: System.Web.Compilation.ClientBuildManager.AppDomainShutdown
- uid: System.Web.Compilation.BuildManagerHostUnloadEventHandler
  parent: System.Web.Compilation
  isExternal: false
  name: BuildManagerHostUnloadEventHandler
  nameWithType: BuildManagerHostUnloadEventHandler
  fullName: System.Web.Compilation.BuildManagerHostUnloadEventHandler
- uid: System.Web.Compilation.ClientBuildManager.AppDomainStarted
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: AppDomainStarted
  nameWithType: ClientBuildManager.AppDomainStarted
  fullName: System.Web.Compilation.ClientBuildManager.AppDomainStarted
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Web.Compilation.ClientBuildManager.AppDomainUnloaded
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: AppDomainUnloaded
  nameWithType: ClientBuildManager.AppDomainUnloaded
  fullName: System.Web.Compilation.ClientBuildManager.AppDomainUnloaded
- uid: System.Web.Compilation.ClientBuildManager.CodeGenDir
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: CodeGenDir
  nameWithType: ClientBuildManager.CodeGenDir
  fullName: System.Web.Compilation.ClientBuildManager.CodeGenDir
- uid: System.Web.Compilation.ClientBuildManager.CompileApplicationDependencies
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: CompileApplicationDependencies()
  nameWithType: ClientBuildManager.CompileApplicationDependencies()
  fullName: System.Web.Compilation.ClientBuildManager.CompileApplicationDependencies()
- uid: System.Web.Compilation.ClientBuildManager.CompileFile(System.String)
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: CompileFile(String)
  nameWithType: ClientBuildManager.CompileFile(String)
  fullName: System.Web.Compilation.ClientBuildManager.CompileFile(String)
- uid: System.Web.Compilation.ClientBuildManager.CompileFile(System.String,System.Web.Compilation.ClientBuildManagerCallback)
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: CompileFile(String,ClientBuildManagerCallback)
  nameWithType: ClientBuildManager.CompileFile(String,ClientBuildManagerCallback)
  fullName: System.Web.Compilation.ClientBuildManager.CompileFile(String,ClientBuildManagerCallback)
- uid: System.Web.Compilation.ClientBuildManagerCallback
  parent: System.Web.Compilation
  isExternal: false
  name: ClientBuildManagerCallback
  nameWithType: ClientBuildManagerCallback
  fullName: System.Web.Compilation.ClientBuildManagerCallback
- uid: System.Web.Compilation.ClientBuildManager.CreateObject(System.Type,System.Boolean)
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: CreateObject(Type,Boolean)
  nameWithType: ClientBuildManager.CreateObject(Type,Boolean)
  fullName: System.Web.Compilation.ClientBuildManager.CreateObject(Type,Boolean)
- uid: System.Web.Hosting.IRegisteredObject
  parent: System.Web.Hosting
  isExternal: false
  name: IRegisteredObject
  nameWithType: IRegisteredObject
  fullName: System.Web.Hosting.IRegisteredObject
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Compilation.ClientBuildManager.GenerateCode(System.String,System.String,System.Collections.IDictionary@)
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: GenerateCode(String,String,IDictionary)
  nameWithType: ClientBuildManager.GenerateCode(String,String,IDictionary)
  fullName: System.Web.Compilation.ClientBuildManager.GenerateCode(String,String,IDictionary)
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.Collections.IDictionary@)
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: GenerateCodeCompileUnit(String,Type,CompilerParameters,IDictionary)
  nameWithType: ClientBuildManager.GenerateCodeCompileUnit(String,Type,CompilerParameters,IDictionary)
  fullName: System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit(String,Type,CompilerParameters,IDictionary)
- uid: System.CodeDom.CodeCompileUnit
  parent: System.CodeDom
  isExternal: false
  name: CodeCompileUnit
  nameWithType: CodeCompileUnit
  fullName: System.CodeDom.CodeCompileUnit
- uid: System.CodeDom.Compiler.CompilerParameters
  parent: System.CodeDom.Compiler
  isExternal: false
  name: CompilerParameters
  nameWithType: CompilerParameters
  fullName: System.CodeDom.Compiler.CompilerParameters
- uid: System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit(System.String,System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.Collections.IDictionary@)
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: GenerateCodeCompileUnit(String,String,Type,CompilerParameters,IDictionary)
  nameWithType: ClientBuildManager.GenerateCodeCompileUnit(String,String,Type,CompilerParameters,IDictionary)
  fullName: System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit(String,String,Type,CompilerParameters,IDictionary)
- uid: System.Web.Compilation.ClientBuildManager.GetAppDomainShutdownDirectories
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: GetAppDomainShutdownDirectories()
  nameWithType: ClientBuildManager.GetAppDomainShutdownDirectories()
  fullName: System.Web.Compilation.ClientBuildManager.GetAppDomainShutdownDirectories()
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.Compilation.ClientBuildManager.GetBrowserDefinitions
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: GetBrowserDefinitions()
  nameWithType: ClientBuildManager.GetBrowserDefinitions()
  fullName: System.Web.Compilation.ClientBuildManager.GetBrowserDefinitions()
- uid: System.Web.Compilation.ClientBuildManager.GetCodeDirectoryInformation(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.String@)
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: GetCodeDirectoryInformation(String,Type,CompilerParameters,String)
  nameWithType: ClientBuildManager.GetCodeDirectoryInformation(String,Type,CompilerParameters,String)
  fullName: System.Web.Compilation.ClientBuildManager.GetCodeDirectoryInformation(String,Type,CompilerParameters,String)
- uid: System.Web.Compilation.ClientBuildManager.GetCompiledType(System.String)
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: GetCompiledType(String)
  nameWithType: ClientBuildManager.GetCompiledType(String)
  fullName: System.Web.Compilation.ClientBuildManager.GetCompiledType(String)
- uid: System.Web.Compilation.ClientBuildManager.GetCompilerParameters(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@)
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: GetCompilerParameters(String,Type,CompilerParameters)
  nameWithType: ClientBuildManager.GetCompilerParameters(String,Type,CompilerParameters)
  fullName: System.Web.Compilation.ClientBuildManager.GetCompilerParameters(String,Type,CompilerParameters)
- uid: System.Web.Compilation.ClientBuildManager.GetGeneratedFileVirtualPath(System.String)
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: GetGeneratedFileVirtualPath(String)
  nameWithType: ClientBuildManager.GetGeneratedFileVirtualPath(String)
  fullName: System.Web.Compilation.ClientBuildManager.GetGeneratedFileVirtualPath(String)
- uid: System.Web.Compilation.ClientBuildManager.GetGeneratedSourceFile(System.String)
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: GetGeneratedSourceFile(String)
  nameWithType: ClientBuildManager.GetGeneratedSourceFile(String)
  fullName: System.Web.Compilation.ClientBuildManager.GetGeneratedSourceFile(String)
- uid: System.Web.Compilation.ClientBuildManager.GetTopLevelAssemblyReferences(System.String)
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: GetTopLevelAssemblyReferences(String)
  nameWithType: ClientBuildManager.GetTopLevelAssemblyReferences(String)
  fullName: System.Web.Compilation.ClientBuildManager.GetTopLevelAssemblyReferences(String)
- uid: System.Web.Compilation.ClientBuildManager.GetVirtualCodeDirectories
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: GetVirtualCodeDirectories()
  nameWithType: ClientBuildManager.GetVirtualCodeDirectories()
  fullName: System.Web.Compilation.ClientBuildManager.GetVirtualCodeDirectories()
- uid: System.Web.Compilation.ClientBuildManager.InitializeLifetimeService
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: InitializeLifetimeService()
  nameWithType: ClientBuildManager.InitializeLifetimeService()
  fullName: System.Web.Compilation.ClientBuildManager.InitializeLifetimeService()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.Compilation.ClientBuildManager.IsCodeAssembly(System.String)
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: IsCodeAssembly(String)
  nameWithType: ClientBuildManager.IsCodeAssembly(String)
  fullName: System.Web.Compilation.ClientBuildManager.IsCodeAssembly(String)
- uid: System.Web.Compilation.ClientBuildManager.IsHostCreated
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: IsHostCreated
  nameWithType: ClientBuildManager.IsHostCreated
  fullName: System.Web.Compilation.ClientBuildManager.IsHostCreated
- uid: System.Web.Compilation.ClientBuildManager.PrecompileApplication
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: PrecompileApplication()
  nameWithType: ClientBuildManager.PrecompileApplication()
  fullName: System.Web.Compilation.ClientBuildManager.PrecompileApplication()
- uid: System.Web.Compilation.ClientBuildManager.PrecompileApplication(System.Web.Compilation.ClientBuildManagerCallback)
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: PrecompileApplication(ClientBuildManagerCallback)
  nameWithType: ClientBuildManager.PrecompileApplication(ClientBuildManagerCallback)
  fullName: System.Web.Compilation.ClientBuildManager.PrecompileApplication(ClientBuildManagerCallback)
- uid: System.Web.Compilation.ClientBuildManager.PrecompileApplication(System.Web.Compilation.ClientBuildManagerCallback,System.Boolean)
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: PrecompileApplication(ClientBuildManagerCallback,Boolean)
  nameWithType: ClientBuildManager.PrecompileApplication(ClientBuildManagerCallback,Boolean)
  fullName: System.Web.Compilation.ClientBuildManager.PrecompileApplication(ClientBuildManagerCallback,Boolean)
- uid: System.Web.Compilation.ClientBuildManager.System#IDisposable#Dispose
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: System.IDisposable.Dispose()
  nameWithType: ClientBuildManager.System.IDisposable.Dispose()
  fullName: System.Web.Compilation.ClientBuildManager.System.IDisposable.Dispose()
- uid: System.Web.Compilation.ClientBuildManager.Unload
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: Unload()
  nameWithType: ClientBuildManager.Unload()
  fullName: System.Web.Compilation.ClientBuildManager.Unload()
- uid: System.Web.Compilation.ClientBuildManager.#ctor*
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: ClientBuildManager
  nameWithType: ClientBuildManager.ClientBuildManager
- uid: System.Web.Compilation.ClientBuildManager.CodeGenDir*
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: CodeGenDir
  nameWithType: ClientBuildManager.CodeGenDir
- uid: System.Web.Compilation.ClientBuildManager.CompileApplicationDependencies*
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: CompileApplicationDependencies
  nameWithType: ClientBuildManager.CompileApplicationDependencies
- uid: System.Web.Compilation.ClientBuildManager.CompileFile*
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: CompileFile
  nameWithType: ClientBuildManager.CompileFile
- uid: System.Web.Compilation.ClientBuildManager.CreateObject*
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: CreateObject
  nameWithType: ClientBuildManager.CreateObject
- uid: System.Web.Compilation.ClientBuildManager.GenerateCode*
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: GenerateCode
  nameWithType: ClientBuildManager.GenerateCode
- uid: System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit*
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: GenerateCodeCompileUnit
  nameWithType: ClientBuildManager.GenerateCodeCompileUnit
- uid: System.Web.Compilation.ClientBuildManager.GetAppDomainShutdownDirectories*
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: GetAppDomainShutdownDirectories
  nameWithType: ClientBuildManager.GetAppDomainShutdownDirectories
- uid: System.Web.Compilation.ClientBuildManager.GetBrowserDefinitions*
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: GetBrowserDefinitions
  nameWithType: ClientBuildManager.GetBrowserDefinitions
- uid: System.Web.Compilation.ClientBuildManager.GetCodeDirectoryInformation*
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: GetCodeDirectoryInformation
  nameWithType: ClientBuildManager.GetCodeDirectoryInformation
- uid: System.Web.Compilation.ClientBuildManager.GetCompiledType*
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: GetCompiledType
  nameWithType: ClientBuildManager.GetCompiledType
- uid: System.Web.Compilation.ClientBuildManager.GetCompilerParameters*
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: GetCompilerParameters
  nameWithType: ClientBuildManager.GetCompilerParameters
- uid: System.Web.Compilation.ClientBuildManager.GetGeneratedFileVirtualPath*
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: GetGeneratedFileVirtualPath
  nameWithType: ClientBuildManager.GetGeneratedFileVirtualPath
- uid: System.Web.Compilation.ClientBuildManager.GetGeneratedSourceFile*
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: GetGeneratedSourceFile
  nameWithType: ClientBuildManager.GetGeneratedSourceFile
- uid: System.Web.Compilation.ClientBuildManager.GetTopLevelAssemblyReferences*
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: GetTopLevelAssemblyReferences
  nameWithType: ClientBuildManager.GetTopLevelAssemblyReferences
- uid: System.Web.Compilation.ClientBuildManager.GetVirtualCodeDirectories*
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: GetVirtualCodeDirectories
  nameWithType: ClientBuildManager.GetVirtualCodeDirectories
- uid: System.Web.Compilation.ClientBuildManager.InitializeLifetimeService*
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: InitializeLifetimeService
  nameWithType: ClientBuildManager.InitializeLifetimeService
- uid: System.Web.Compilation.ClientBuildManager.IsCodeAssembly*
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: IsCodeAssembly
  nameWithType: ClientBuildManager.IsCodeAssembly
- uid: System.Web.Compilation.ClientBuildManager.IsHostCreated*
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: IsHostCreated
  nameWithType: ClientBuildManager.IsHostCreated
- uid: System.Web.Compilation.ClientBuildManager.PrecompileApplication*
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: PrecompileApplication
  nameWithType: ClientBuildManager.PrecompileApplication
- uid: System.Web.Compilation.ClientBuildManager.System#IDisposable#Dispose*
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: System.IDisposable.Dispose
  nameWithType: ClientBuildManager.System.IDisposable.Dispose
- uid: System.Web.Compilation.ClientBuildManager.Unload*
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: Unload
  nameWithType: ClientBuildManager.Unload
