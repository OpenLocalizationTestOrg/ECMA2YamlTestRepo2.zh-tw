### YamlMime:ManagedReference
items:
- uid: System.Web.SessionState.SessionIDManager
  id: SessionIDManager
  children:
  - System.Web.SessionState.SessionIDManager.#ctor
  - System.Web.SessionState.SessionIDManager.CreateSessionID(System.Web.HttpContext)
  - System.Web.SessionState.SessionIDManager.Decode(System.String)
  - System.Web.SessionState.SessionIDManager.Encode(System.String)
  - System.Web.SessionState.SessionIDManager.GetSessionID(System.Web.HttpContext)
  - System.Web.SessionState.SessionIDManager.Initialize
  - System.Web.SessionState.SessionIDManager.InitializeRequest(System.Web.HttpContext,System.Boolean,System.Boolean@)
  - System.Web.SessionState.SessionIDManager.RemoveSessionID(System.Web.HttpContext)
  - System.Web.SessionState.SessionIDManager.SaveSessionID(System.Web.HttpContext,System.String,System.Boolean@,System.Boolean@)
  - System.Web.SessionState.SessionIDManager.SessionIDMaxLength
  - System.Web.SessionState.SessionIDManager.Validate(System.String)
  langs:
  - csharp
  name: SessionIDManager
  nameWithType: SessionIDManager
  fullName: System.Web.SessionState.SessionIDManager
  type: Class
  summary: "管理 ASP.NET 工作階段狀態的唯一識別碼。"
  remarks: "SessionIDManager 類別是 HTTP 模組，可管理使用 ASP.NET 工作階段狀態的唯一工作階段識別項。 ASP.NET 工作階段的唯一識別碼是<xref:System.Web.SessionState.HttpSessionState.SessionID%2A>屬性，可從<xref:System.Web.HttpContext.Session%2A>目前的<xref:System.Web.HttpContext>或<xref:System.Web.UI.Page>.</xref:System.Web.UI.Page></xref:System.Web.HttpContext>屬性</xref:System.Web.HttpContext.Session%2A>來存取</xref:System.Web.SessionState.HttpSessionState.SessionID%2A> ASP.NET 工作階段識別項是隨機產生的號碼編碼到 24 個字元所組成的字串從小寫字元 a 到 z 和數字 0 到 5。       根據預設，<xref:System.Web.SessionState.HttpSessionState.SessionID%2A>值傳送至 ASP.NET 應用程式的每個要求的 cookie。</xref:System.Web.SessionState.HttpSessionState.SessionID%2A> 包含 cookie 名稱<xref:System.Web.SessionState.HttpSessionState.SessionID%2A>預設值為 ASP.NET_SessionId。</xref:System.Web.SessionState.HttpSessionState.SessionID%2A> 您可以設定不同的 cookie 名稱，藉由設定`cookieName`屬性[工作階段狀態項目 （ASP.NET 設定結構描述）](http://msdn.microsoft.com/en-us/bda6fb8c-0076-43e3-9ce2-8cf1f8bdaa7d)所需的 cookie 名稱。       如果您想要停用的 cookie，ASP.NET 應用程式中使用，仍能使用的工作階段狀態，您可以設定您的應用程式的 URL，而不是 cookie 中儲存的工作階段識別項，藉由設定`cookieless`屬性`sessionState`元素`true`您的應用程式的 Web.config 檔案中。 如需詳細資訊，請參閱<xref:System.Web.SessionState.HttpSessionStateContainer.IsCookieless%2A>屬性。</xref:System.Web.SessionState.HttpSessionStateContainer.IsCookieless%2A>"
  syntax:
    content: 'public class SessionIDManager : System.Web.SessionState.ISessionIDManager'
  inheritance:
  - System.Object
  implements:
  - System.Web.SessionState.ISessionIDManager
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionIDManager.#ctor
  id: '#ctor'
  parent: System.Web.SessionState.SessionIDManager
  langs:
  - csharp
  name: SessionIDManager()
  nameWithType: SessionIDManager.SessionIDManager()
  fullName: System.Web.SessionState.SessionIDManager.SessionIDManager()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "建立的執行個體<xref href=&quot;System.Web.SessionState.SessionIDManager&quot;></xref>類別。"
  remarks: "這個建構函式不是從應用程式程式碼呼叫。       ASP.NET 會呼叫這個建構函式來建立執行個體的<xref:System.Web.SessionState.SessionIDManager>類別。</xref:System.Web.SessionState.SessionIDManager> 之後呼叫建構函式，呼叫 ASP.NET<xref:System.Web.SessionState.SessionIDManager.Initialize%2A>方法來初始化新<xref:System.Web.SessionState.SessionIDManager>物件。</xref:System.Web.SessionState.SessionIDManager> </xref:System.Web.SessionState.SessionIDManager.Initialize%2A>"
  syntax:
    content: public SessionIDManager ();
    parameters: []
  overload: System.Web.SessionState.SessionIDManager.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionIDManager.CreateSessionID(System.Web.HttpContext)
  id: CreateSessionID(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionIDManager
  langs:
  - csharp
  name: CreateSessionID(HttpContext)
  nameWithType: SessionIDManager.CreateSessionID(HttpContext)
  fullName: System.Web.SessionState.SessionIDManager.CreateSessionID(HttpContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "建立工作階段的唯一工作階段識別碼。"
  remarks: "這個方法不是從應用程式程式碼呼叫。       CreateSessionID 方法會傳回唯一的工作階段識別項是隨機產生的數字，編碼成 24 個字元所組成的字串從小寫字元 a 到 z 和數字 0 到 5。"
  example:
  - "The following code example shows a class that inherits the <xref:System.Web.SessionState.SessionIDManager> class and overrides the CreateSessionID and <xref:System.Web.SessionState.SessionIDManager.Validate%2A> methods with methods that supply and validate a <xref:System.Guid> as the <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>.  \n  \n [!code-cs[System.Web.SessionState.ISessionIDModule#7](~/add/codesnippet/csharp/e6d29e71-07f8-4130-8db5-_1.cs)]\n [!code-vb[System.Web.SessionState.ISessionIDModule#7](~/add/codesnippet/visualbasic/e6d29e71-07f8-4130-8db5-_1.vb)]  \n  \n To use the custom class demonstrated in this example, configure the sessionIDManagerType attribute of the [sessionState Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/bda6fb8c-0076-43e3-9ce2-8cf1f8bdaa7d) element, as shown in the following example.  \n  \n```  \n<sessionState  \n  Mode=\"InProc\"  \n  stateConnectionString=\"tcp=127.0.0.1:42424\"  \n  stateNetworkTimeout=\"10\"  \n  sqlConnectionString=\"data source=127.0.0.1;Integrated Security=SSPI\"  \n  sqlCommandTimeout=\"30\"  \n  customProvider=\"\"  \n  cookieless=\"false\"  \n  regenerateExpiredSessionId=\"false\"  \n  timeout=\"20\"  \n  sessionIDManagerType=\"Your.ID.Manager.Type,  \n    CustomAssemblyNameInBinFolder\"  \n/>  \n```"
  syntax:
    content: public virtual string CreateSessionID (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "目前<xref href=&quot;System.Web.HttpContext&quot;></xref>參考伺服器物件的物件用來處理 HTTP 要求 (例如， <> </> *> 和<> *> 屬性)。"
    return:
      type: System.String
      description: "唯一的工作階段識別項。"
  overload: System.Web.SessionState.SessionIDManager.CreateSessionID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionIDManager.Decode(System.String)
  id: Decode(System.String)
  parent: System.Web.SessionState.SessionIDManager
  langs:
  - csharp
  name: Decode(String)
  nameWithType: SessionIDManager.Decode(String)
  fullName: System.Web.SessionState.SessionIDManager.Decode(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "將解碼取自 cookie 或 URL 的 URL 編碼的工作階段識別碼。"
  remarks: "這個方法不是從應用程式程式碼呼叫。       這個方法會在內部使用<xref:System.Web.SessionState.SessionIDManager>解碼自訂類別<xref:System.Web.SessionState.HttpSessionState.SessionID%2A>值所繼承的類別建立<xref:System.Web.SessionState.SessionIDManager>類別並覆寫<xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A>和<xref:System.Web.SessionState.SessionIDManager.Validate%2A>方法。</xref:System.Web.SessionState.SessionIDManager.Validate%2A> </xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A> </xref:System.Web.SessionState.SessionIDManager> </xref:System.Web.SessionState.HttpSessionState.SessionID%2A> </xref:System.Web.SessionState.SessionIDManager> 若要確保自訂的工作階段識別碼值的精確度擷取從 HTTP 要求所<xref:System.Web.SessionState.SessionIDManager.GetSessionID%2A>方法，<xref:System.Web.SessionState.SessionIDManager>解碼自訂值使用<xref:System.Web.HttpUtility.UrlDecode%2A>方法。</xref:System.Web.HttpUtility.UrlDecode%2A> </xref:System.Web.SessionState.SessionIDManager> </xref:System.Web.SessionState.SessionIDManager.GetSessionID%2A>"
  syntax:
    content: public virtual string Decode (string id);
    parameters:
    - id: id
      type: System.String
      description: "要解碼的工作階段識別碼。"
    return:
      type: System.String
      description: "已解碼的工作階段識別碼。"
  overload: System.Web.SessionState.SessionIDManager.Decode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionIDManager.Encode(System.String)
  id: Encode(System.String)
  parent: System.Web.SessionState.SessionIDManager
  langs:
  - csharp
  name: Encode(String)
  nameWithType: SessionIDManager.Encode(String)
  fullName: System.Web.SessionState.SessionIDManager.Encode(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "將編碼儲存到 cookie 或 URL 的工作階段識別項。"
  remarks: "這個方法不是從應用程式程式碼呼叫。       這個方法會在內部使用<xref:System.Web.SessionState.SessionIDManager>類別來編碼自訂<xref:System.Web.SessionState.HttpSessionState.SessionID%2A>值所繼承的類別建立<xref:System.Web.SessionState.SessionIDManager>類別並覆寫<xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A>和<xref:System.Web.SessionState.SessionIDManager.Validate%2A>方法。</xref:System.Web.SessionState.SessionIDManager.Validate%2A> </xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A> </xref:System.Web.SessionState.SessionIDManager> </xref:System.Web.SessionState.HttpSessionState.SessionID%2A> </xref:System.Web.SessionState.SessionIDManager> 若要確保的 HTTP 回應中所儲存的自訂工作階段識別碼值的精確度<xref:System.Web.SessionState.SessionIDManager.SaveSessionID%2A>方法，<xref:System.Web.SessionState.SessionIDManager>編碼的自訂值使用<xref:System.Web.HttpUtility.UrlEncode%2A>方法。</xref:System.Web.HttpUtility.UrlEncode%2A> </xref:System.Web.SessionState.SessionIDManager> </xref:System.Web.SessionState.SessionIDManager.SaveSessionID%2A>       如需繼承的類別的範例<xref:System.Web.SessionState.SessionIDManager>類別並覆寫<xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A>和<xref:System.Web.SessionState.SessionIDManager.Validate%2A>方法，請參閱<xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A>方法。</xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A> </xref:System.Web.SessionState.SessionIDManager.Validate%2A> </xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A> </xref:System.Web.SessionState.SessionIDManager>"
  syntax:
    content: public virtual string Encode (string id);
    parameters:
    - id: id
      type: System.String
      description: "要編碼的工作階段識別碼。"
    return:
      type: System.String
      description: "編碼工作階段識別碼。"
  overload: System.Web.SessionState.SessionIDManager.Encode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionIDManager.GetSessionID(System.Web.HttpContext)
  id: GetSessionID(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionIDManager
  langs:
  - csharp
  name: GetSessionID(HttpContext)
  nameWithType: SessionIDManager.GetSessionID(HttpContext)
  fullName: System.Web.SessionState.SessionIDManager.GetSessionID(HttpContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "從目前的 Web 要求取得工作階段識別碼值。"
  remarks: "這個方法不是從應用程式程式碼呼叫。       <xref:System.Web.SessionState.SessionStateModule>呼叫<xref:System.Web.HttpApplication.AcquireRequestState>以擷取<xref:System.Web.SessionState.HttpSessionState.SessionID%2A>從目前<xref:System.Web.HttpRequest>.</xref:System.Web.HttpRequest></xref:System.Web.SessionState.HttpSessionState.SessionID%2A>事件</xref:System.Web.HttpApplication.AcquireRequestState>期間 GetSessionID 方法</xref:System.Web.SessionState.SessionStateModule>"
  syntax:
    content: public string GetSessionID (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "目前<xref href=&quot;System.Web.HttpContext&quot;></xref>參考伺服器物件的物件用來處理 HTTP 要求 (例如， <> </> *> 和<> *> 屬性)。"
    return:
      type: System.String
      description: "目前<xref:System.Web.SessionState.HttpSessionState.SessionID*>.</xref:System.Web.SessionState.HttpSessionState.SessionID*>"
  overload: System.Web.SessionState.SessionIDManager.GetSessionID*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "從 HTTP 擷取的工作階段識別碼值的長度超過要求<xref:System.Web.SessionState.SessionIDManager.SessionIDMaxLength*>值。</xref:System.Web.SessionState.SessionIDManager.SessionIDMaxLength*>"
  platform:
  - net462
- uid: System.Web.SessionState.SessionIDManager.Initialize
  id: Initialize
  parent: System.Web.SessionState.SessionIDManager
  langs:
  - csharp
  name: Initialize()
  nameWithType: SessionIDManager.Initialize()
  fullName: System.Web.SessionState.SessionIDManager.Initialize()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "初始化<xref href=&quot;System.Web.SessionState.SessionIDManager&quot;></xref>從組態檔的資訊。"
  remarks: "Initialize 方法會讀取工作階段的組態資料從[工作階段狀態項目 （ASP.NET 設定結構描述）](http://msdn.microsoft.com/en-us/bda6fb8c-0076-43e3-9ce2-8cf1f8bdaa7d)組態檔的組態項目。"
  syntax:
    content: public void Initialize ();
    parameters: []
  overload: System.Web.SessionState.SessionIDManager.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionIDManager.InitializeRequest(System.Web.HttpContext,System.Boolean,System.Boolean@)
  id: InitializeRequest(System.Web.HttpContext,System.Boolean,System.Boolean@)
  parent: System.Web.SessionState.SessionIDManager
  langs:
  - csharp
  name: InitializeRequest(HttpContext,Boolean,Boolean)
  nameWithType: SessionIDManager.InitializeRequest(HttpContext,Boolean,Boolean)
  fullName: System.Web.SessionState.SessionIDManager.InitializeRequest(HttpContext,Boolean,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "執行的每一個要求初始化<xref href=&quot;System.Web.SessionState.SessionIDManager&quot;></xref>物件。"
  remarks: "當`cookieless`屬性`sessionState`元素設定為`AutoDetect`、<xref:System.Web.SessionState.SessionIDManager>物件將會重新導向至相同的路徑，以判斷連接的瀏覽器是否支援 cookie。</xref:System.Web.SessionState.SessionIDManager> 如果`suppressAutoDetectRedirect`參數是`false`，伺服器將不會執行此重新導向。       `supportSessionIDReissue`參數將會傳回`false`如果要求針對工作階段識別碼使用 cookie。"
  syntax:
    content: public bool InitializeRequest (System.Web.HttpContext context, bool suppressAutoDetectRedirect, out bool supportSessionIDReissue);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "<xref href=&quot;System.Web.HttpContext&quot;> </xref>物件，包含目前要求的相關資訊。"
    - id: suppressAutoDetectRedirect
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>重新導向至判斷 cookie 支援。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>來隱藏自動重新導向，以判斷支援 cookie。"
    - id: supportSessionIDReissue
      type: System.Boolean
      description: "這個方法傳回時，包含布林值，指出是否<xref href=&quot;System.Web.SessionState.SessionIDManager&quot;></xref>物件的原始識別碼已過期時，支援發行新的工作階段識別碼。 這個參數未初始化便傳遞。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>表示<xref href=&quot;System.Web.SessionState.SessionIDManager&quot;></xref>物件已完成重新導向，以判斷 cookie 支援，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.SessionState.SessionIDManager.InitializeRequest*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionIDManager.RemoveSessionID(System.Web.HttpContext)
  id: RemoveSessionID(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionIDManager
  langs:
  - csharp
  name: RemoveSessionID(HttpContext)
  nameWithType: SessionIDManager.RemoveSessionID(HttpContext)
  fullName: System.Web.SessionState.SessionIDManager.RemoveSessionID(HttpContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "HTTP 回應中刪除的工作階段識別碼的 cookie。"
  remarks: "這個方法不是從應用程式程式碼呼叫。       <xref:System.Web.SessionState.SessionStateModule>呼叫 RemoveSessionID 方法期間<xref:System.Web.HttpApplication.ReleaseRequestState>事件中的工作階段識別項中移除<xref:System.Web.HttpResponse.Cookies%2A>集合<xref:System.Web.HttpResponse>如果新的工作階段已建立但未使用。</xref:System.Web.HttpResponse> </xref:System.Web.HttpResponse.Cookies%2A> </xref:System.Web.HttpApplication.ReleaseRequestState> </xref:System.Web.SessionState.SessionStateModule>"
  syntax:
    content: public void RemoveSessionID (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "目前<xref href=&quot;System.Web.HttpContext&quot;></xref>參考伺服器物件的物件用來處理 HTTP 要求 (例如， <> </> *> 和<> *> 屬性)。"
  overload: System.Web.SessionState.SessionIDManager.RemoveSessionID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionIDManager.SaveSessionID(System.Web.HttpContext,System.String,System.Boolean@,System.Boolean@)
  id: SaveSessionID(System.Web.HttpContext,System.String,System.Boolean@,System.Boolean@)
  parent: System.Web.SessionState.SessionIDManager
  langs:
  - csharp
  name: SaveSessionID(HttpContext,String,Boolean,Boolean)
  nameWithType: SessionIDManager.SaveSessionID(HttpContext,String,Boolean,Boolean)
  fullName: System.Web.SessionState.SessionIDManager.SaveSessionID(HttpContext,String,Boolean,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "將新建立的工作階段識別碼儲存至 HTTP 回應。"
  remarks: "這個方法不是從應用程式程式碼呼叫。       SaveSessionID 方法由呼叫<xref:System.Web.SessionState.SessionStateModule>物件期間<xref:System.Web.HttpApplication.AcquireRequestState>事件。</xref:System.Web.HttpApplication.AcquireRequestState> </xref:System.Web.SessionState.SessionStateModule> SaveSessionID 方法會在 URL （無 cookie 工作階段狀態是在使用時） 或不會過期的工作階段 cookie 中儲存的工作階段識別碼。       根據預設，<xref:System.Web.SessionState.SessionIDManager>置於不會過期的工作階段 cookie 中的唯一工作階段識別碼，並設定`cookieAdded`參數`true`。</xref:System.Web.SessionState.SessionIDManager>       針對無 cookie 工作階段狀態，<xref:System.Web.SessionState.SessionIDManager>物件插入目前的 URL 的唯一工作階段識別碼、 將瀏覽器重新導向至新的 URL，包括工作階段識別項，然後設定`redirected`參數`true`。</xref:System.Web.SessionState.SessionIDManager>"
  syntax:
    content: public void SaveSessionID (System.Web.HttpContext context, string id, out bool redirected, out bool cookieAdded);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "目前<xref href=&quot;System.Web.HttpContext&quot;></xref>參考伺服器物件的物件用來處理 HTTP 要求 (例如， <> </> *> 和<> *> 屬性)。"
    - id: id
      type: System.String
      description: "工作階段識別碼。"
    - id: redirected
      type: System.Boolean
      description: "這個方法傳回時，包含布林值，是<xref uid=&quot;langword_csharp_ true&quot; name=&quot; true&quot; href=&quot;&quot;></xref>如果回應重新導向至目前 URL 加入至 URL 的工作階段識別碼，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    - id: cookieAdded
      type: System.Boolean
      description: "這個方法傳回時，包含布林值，是<xref uid=&quot;langword_csharp_ true&quot; name=&quot; true&quot; href=&quot;&quot;></xref>如果 cookie 已加入至 HTTP 回應，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.SessionState.SessionIDManager.SaveSessionID*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "已傳送回應。       -或者-工作階段識別碼傳遞給這個方法無法驗證。"
  platform:
  - net462
- uid: System.Web.SessionState.SessionIDManager.SessionIDMaxLength
  id: SessionIDMaxLength
  parent: System.Web.SessionState.SessionIDManager
  langs:
  - csharp
  name: SessionIDMaxLength
  nameWithType: SessionIDManager.SessionIDMaxLength
  fullName: System.Web.SessionState.SessionIDManager.SessionIDMaxLength
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "取得有效的工作階段識別碼的最大長度。"
  remarks: "工作階段識別碼的最大長度是 80 個字元。       雖然所建立的工作階段識別元<xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A>方法是 24 個字元長，工作階段識別碼所允許的最大長度<xref:System.Web.SessionState.SessionIDManager>類別是 80 個字元。</xref:System.Web.SessionState.SessionIDManager> </xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A> 這點特別重要，如果您實作自訂<xref:System.Web.SessionState.SessionIDManager>.</xref:System.Web.SessionState.SessionIDManager> <xref:System.Web.SessionState.SessionIDManager.GetSessionID%2A>方法，這個方法會擷取從目前的工作階段識別碼值<xref:System.Web.HttpRequest>，確保值不能超過 SessionIDMaxLength 值，而且工作階段識別項是 24 個字元字串，包含僅小寫字元 a 到 z 和數字 0 到 5，藉由呼叫<xref:System.Web.SessionState.SessionIDManager.Validate%2A>方法。</xref:System.Web.SessionState.SessionIDManager.Validate%2A> </xref:System.Web.HttpRequest> </xref:System.Web.SessionState.SessionIDManager.GetSessionID%2A> 如果您實作自訂<xref:System.Web.SessionState.SessionIDManager>繼承<xref:System.Web.SessionState.SessionIDManager>類別並覆寫<xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A>方法但不是<xref:System.Web.SessionState.SessionIDManager.Validate%2A>方法，您自訂的工作階段識別項的值必須符合上述條件約束。</xref:System.Web.SessionState.SessionIDManager.Validate%2A> </xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A> </xref:System.Web.SessionState.SessionIDManager> </xref:System.Web.SessionState.SessionIDManager> 如需覆寫<xref:System.Web.SessionState.SessionIDManager>類別並實作這些方法，請參閱提供的範例<xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A>方法。</xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A> </xref:System.Web.SessionState.SessionIDManager>"
  syntax:
    content: public static int SessionIDMaxLength { get; }
    return:
      type: System.Int32
      description: "有效的工作階段識別項的長度上限。"
  overload: System.Web.SessionState.SessionIDManager.SessionIDMaxLength*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionIDManager.Validate(System.String)
  id: Validate(System.String)
  parent: System.Web.SessionState.SessionIDManager
  langs:
  - csharp
  name: Validate(String)
  nameWithType: SessionIDManager.Validate(String)
  fullName: System.Web.SessionState.SessionIDManager.Validate(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "取得值，指出工作階段識別碼是否有效。"
  remarks: "這個方法不是從應用程式程式碼呼叫。       Validate 方法會驗證提供`id`是 24 個字元所組成的字串從小寫字元 a 到 z 和數字 0 到 5 到的最大長度的工作階段識別碼不超過 80 個字元。       <xref:System.Web.SessionState.SessionIDManager.GetSessionID%2A>擷取工作階段識別項從 HTTP 要求，以確保已正確格式化的工作階段提供的識別碼時，方法會呼叫 Validate 方法。</xref:System.Web.SessionState.SessionIDManager.GetSessionID%2A>"
  example:
  - "The following code example shows a class that inherits the <xref:System.Web.SessionState.SessionIDManager> class and overrides the <xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A> and Validate methods with methods that supply and validate a <xref:System.Guid> as the <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>.  \n  \n [!code-cs[System.Web.SessionState.ISessionIDModule#7](~/add/codesnippet/csharp/m-system.web.sessionstat_5_1.cs)]\n [!code-vb[System.Web.SessionState.ISessionIDModule#7](~/add/codesnippet/visualbasic/m-system.web.sessionstat_5_1.vb)]  \n  \n To use the custom class demonstrated in this example, replace the `SessionID` HTTP module in your Web.config file with your custom class, as shown in the following example.  \n  \n```  \n<httpModules>  \n  <remove name=\"SessionID\" />  \n  <add name=\"SessionID\"  \n       type=\"Samples.AspNet.Session.GuidSessionIDManager\" />  \n</httpModules>  \n```"
  syntax:
    content: public virtual bool Validate (string id);
    parameters:
    - id: id
      type: System.String
      description: "要驗證的工作階段識別碼。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果工作階段識別碼有效，否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.SessionState.SessionIDManager.Validate*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.Web.SessionState.SessionIDManager.#ctor
  parent: System.Web.SessionState.SessionIDManager
  isExternal: false
  name: SessionIDManager()
  nameWithType: SessionIDManager.SessionIDManager()
  fullName: System.Web.SessionState.SessionIDManager.SessionIDManager()
- uid: System.Web.SessionState.SessionIDManager.CreateSessionID(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionIDManager
  isExternal: false
  name: CreateSessionID(HttpContext)
  nameWithType: SessionIDManager.CreateSessionID(HttpContext)
  fullName: System.Web.SessionState.SessionIDManager.CreateSessionID(HttpContext)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.Web.SessionState.SessionIDManager.Decode(System.String)
  parent: System.Web.SessionState.SessionIDManager
  isExternal: false
  name: Decode(String)
  nameWithType: SessionIDManager.Decode(String)
  fullName: System.Web.SessionState.SessionIDManager.Decode(String)
- uid: System.Web.SessionState.SessionIDManager.Encode(System.String)
  parent: System.Web.SessionState.SessionIDManager
  isExternal: false
  name: Encode(String)
  nameWithType: SessionIDManager.Encode(String)
  fullName: System.Web.SessionState.SessionIDManager.Encode(String)
- uid: System.Web.SessionState.SessionIDManager.GetSessionID(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionIDManager
  isExternal: false
  name: GetSessionID(HttpContext)
  nameWithType: SessionIDManager.GetSessionID(HttpContext)
  fullName: System.Web.SessionState.SessionIDManager.GetSessionID(HttpContext)
- uid: System.Web.SessionState.SessionIDManager.Initialize
  parent: System.Web.SessionState.SessionIDManager
  isExternal: false
  name: Initialize()
  nameWithType: SessionIDManager.Initialize()
  fullName: System.Web.SessionState.SessionIDManager.Initialize()
- uid: System.Web.SessionState.SessionIDManager.InitializeRequest(System.Web.HttpContext,System.Boolean,System.Boolean@)
  parent: System.Web.SessionState.SessionIDManager
  isExternal: false
  name: InitializeRequest(HttpContext,Boolean,Boolean)
  nameWithType: SessionIDManager.InitializeRequest(HttpContext,Boolean,Boolean)
  fullName: System.Web.SessionState.SessionIDManager.InitializeRequest(HttpContext,Boolean,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.SessionState.SessionIDManager.RemoveSessionID(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionIDManager
  isExternal: false
  name: RemoveSessionID(HttpContext)
  nameWithType: SessionIDManager.RemoveSessionID(HttpContext)
  fullName: System.Web.SessionState.SessionIDManager.RemoveSessionID(HttpContext)
- uid: System.Web.SessionState.SessionIDManager.SaveSessionID(System.Web.HttpContext,System.String,System.Boolean@,System.Boolean@)
  parent: System.Web.SessionState.SessionIDManager
  isExternal: false
  name: SaveSessionID(HttpContext,String,Boolean,Boolean)
  nameWithType: SessionIDManager.SaveSessionID(HttpContext,String,Boolean,Boolean)
  fullName: System.Web.SessionState.SessionIDManager.SaveSessionID(HttpContext,String,Boolean,Boolean)
- uid: System.Web.SessionState.SessionIDManager.SessionIDMaxLength
  parent: System.Web.SessionState.SessionIDManager
  isExternal: false
  name: SessionIDMaxLength
  nameWithType: SessionIDManager.SessionIDMaxLength
  fullName: System.Web.SessionState.SessionIDManager.SessionIDMaxLength
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.SessionState.SessionIDManager.Validate(System.String)
  parent: System.Web.SessionState.SessionIDManager
  isExternal: false
  name: Validate(String)
  nameWithType: SessionIDManager.Validate(String)
  fullName: System.Web.SessionState.SessionIDManager.Validate(String)
- uid: System.Web.SessionState.SessionIDManager.#ctor*
  parent: System.Web.SessionState.SessionIDManager
  isExternal: false
  name: SessionIDManager
  nameWithType: SessionIDManager.SessionIDManager
- uid: System.Web.SessionState.SessionIDManager.CreateSessionID*
  parent: System.Web.SessionState.SessionIDManager
  isExternal: false
  name: CreateSessionID
  nameWithType: SessionIDManager.CreateSessionID
- uid: System.Web.SessionState.SessionIDManager.Decode*
  parent: System.Web.SessionState.SessionIDManager
  isExternal: false
  name: Decode
  nameWithType: SessionIDManager.Decode
- uid: System.Web.SessionState.SessionIDManager.Encode*
  parent: System.Web.SessionState.SessionIDManager
  isExternal: false
  name: Encode
  nameWithType: SessionIDManager.Encode
- uid: System.Web.SessionState.SessionIDManager.GetSessionID*
  parent: System.Web.SessionState.SessionIDManager
  isExternal: false
  name: GetSessionID
  nameWithType: SessionIDManager.GetSessionID
- uid: System.Web.SessionState.SessionIDManager.Initialize*
  parent: System.Web.SessionState.SessionIDManager
  isExternal: false
  name: Initialize
  nameWithType: SessionIDManager.Initialize
- uid: System.Web.SessionState.SessionIDManager.InitializeRequest*
  parent: System.Web.SessionState.SessionIDManager
  isExternal: false
  name: InitializeRequest
  nameWithType: SessionIDManager.InitializeRequest
- uid: System.Web.SessionState.SessionIDManager.RemoveSessionID*
  parent: System.Web.SessionState.SessionIDManager
  isExternal: false
  name: RemoveSessionID
  nameWithType: SessionIDManager.RemoveSessionID
- uid: System.Web.SessionState.SessionIDManager.SaveSessionID*
  parent: System.Web.SessionState.SessionIDManager
  isExternal: false
  name: SaveSessionID
  nameWithType: SessionIDManager.SaveSessionID
- uid: System.Web.SessionState.SessionIDManager.SessionIDMaxLength*
  parent: System.Web.SessionState.SessionIDManager
  isExternal: false
  name: SessionIDMaxLength
  nameWithType: SessionIDManager.SessionIDMaxLength
- uid: System.Web.SessionState.SessionIDManager.Validate*
  parent: System.Web.SessionState.SessionIDManager
  isExternal: false
  name: Validate
  nameWithType: SessionIDManager.Validate
