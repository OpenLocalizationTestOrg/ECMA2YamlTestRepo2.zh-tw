### YamlMime:ManagedReference
items:
- uid: System.Windows.Markup.InternalTypeHelper
  id: InternalTypeHelper
  children:
  - System.Windows.Markup.InternalTypeHelper.#ctor
  - System.Windows.Markup.InternalTypeHelper.AddEventHandler(System.Reflection.EventInfo,System.Object,System.Delegate)
  - System.Windows.Markup.InternalTypeHelper.CreateDelegate(System.Type,System.Object,System.String)
  - System.Windows.Markup.InternalTypeHelper.CreateInstance(System.Type,System.Globalization.CultureInfo)
  - System.Windows.Markup.InternalTypeHelper.GetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Globalization.CultureInfo)
  - System.Windows.Markup.InternalTypeHelper.SetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Object,System.Globalization.CultureInfo)
  langs:
  - csharp
  name: InternalTypeHelper
  nameWithType: InternalTypeHelper
  fullName: System.Windows.Markup.InternalTypeHelper
  type: Class
  summary: "WPF XAML 編譯器在內部用來支援使用內部類型的抽象類別。"
  remarks: "InternalTypeHelper 類別不適合使用的 WPF XAML 標記編譯器以外的任何項目。       當編譯 XAML 檔案時，您可以使用公用類型，但您也可以使用受限於相同限制存在的內部型別上的程式碼存取的內部型別。 InternalTypeHelper 啟用之標記的內部存取層級類型的支援。 這牽涉到編譯器建立的產生的類別，衍生自 InternalTypeHelper 並實作其成員。 產生的類別存在安全性和存取內容中，產生的類別，因此內部型別可以參考相同組件或特別屬性化共用內部存取其他組件。      <a name=&quot;xamlTextUsage_InternalTypeHelper&quot;></a># # XAML 文字用法"
  syntax:
    content: >-
      [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]

      public abstract class InternalTypeHelper
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Markup.InternalTypeHelper.#ctor
  id: '#ctor'
  parent: System.Windows.Markup.InternalTypeHelper
  langs:
  - csharp
  name: InternalTypeHelper()
  nameWithType: InternalTypeHelper.InternalTypeHelper()
  fullName: System.Windows.Markup.InternalTypeHelper.InternalTypeHelper()
  type: Constructor
  assemblies:
  - WindowsBase
  namespace: System.Windows.Markup
  summary: "初始化的新執行個體<xref href=&quot;System.Windows.Markup.InternalTypeHelper&quot;></xref>類別。"
  syntax:
    content: protected InternalTypeHelper ();
    parameters: []
  overload: System.Windows.Markup.InternalTypeHelper.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Markup.InternalTypeHelper.AddEventHandler(System.Reflection.EventInfo,System.Object,System.Delegate)
  id: AddEventHandler(System.Reflection.EventInfo,System.Object,System.Delegate)
  parent: System.Windows.Markup.InternalTypeHelper
  langs:
  - csharp
  name: AddEventHandler(EventInfo,Object,Delegate)
  nameWithType: InternalTypeHelper.AddEventHandler(EventInfo,Object,Delegate)
  fullName: System.Windows.Markup.InternalTypeHelper.AddEventHandler(EventInfo,Object,Delegate)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Markup
  summary: "（產生） 的衍生類別中覆寫，附加事件處理常式委派至內部的事件。"
  remarks: "<xref:System.Windows.Markup.InternalTypeHelper>類別不適用於 WPF XAML 標記編譯器以外的任何項目所。</xref:System.Windows.Markup.InternalTypeHelper>"
  syntax:
    content: protected abstract void AddEventHandler (System.Reflection.EventInfo eventInfo, object target, Delegate handler);
    parameters:
    - id: eventInfo
      type: System.Reflection.EventInfo
      description: "事件 （CLR 反映資訊） 的事件資訊。"
    - id: target
      type: System.Object
      description: "目標附加的處理常式。"
    - id: handler
      type: System.Delegate
      description: "此事件處理常式。"
  overload: System.Windows.Markup.InternalTypeHelper.AddEventHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Markup.InternalTypeHelper.CreateDelegate(System.Type,System.Object,System.String)
  id: CreateDelegate(System.Type,System.Object,System.String)
  parent: System.Windows.Markup.InternalTypeHelper
  langs:
  - csharp
  name: CreateDelegate(Type,Object,String)
  nameWithType: InternalTypeHelper.CreateDelegate(Type,Object,String)
  fullName: System.Windows.Markup.InternalTypeHelper.CreateDelegate(Type,Object,String)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Markup
  summary: "（產生） 的衍生類別中覆寫，會建立參考非公用的處理常式方法的事件委派。"
  remarks: "<xref:System.Windows.Markup.InternalTypeHelper>類別不適用於 WPF XAML 標記編譯器以外的任何項目所。</xref:System.Windows.Markup.InternalTypeHelper>"
  syntax:
    content: protected abstract Delegate CreateDelegate (Type delegateType, object target, string handler);
    parameters:
    - id: delegateType
      type: System.Type
      description: "<xref:System.Type>的委派。</xref:System.Type>"
    - id: target
      type: System.Object
      description: "目標附加的處理常式。"
    - id: handler
      type: System.String
      description: "處理常式實作的名稱。"
    return:
      type: System.Delegate
      description: "委派的參考。"
  overload: System.Windows.Markup.InternalTypeHelper.CreateDelegate*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Markup.InternalTypeHelper.CreateInstance(System.Type,System.Globalization.CultureInfo)
  id: CreateInstance(System.Type,System.Globalization.CultureInfo)
  parent: System.Windows.Markup.InternalTypeHelper
  langs:
  - csharp
  name: CreateInstance(Type,CultureInfo)
  nameWithType: InternalTypeHelper.CreateInstance(Type,CultureInfo)
  fullName: System.Windows.Markup.InternalTypeHelper.CreateInstance(Type,CultureInfo)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Markup
  summary: "（產生） 的衍生類別中覆寫，會建立內部類型的執行個體。"
  remarks: "<xref:System.Windows.Markup.InternalTypeHelper>類別不適用於 WPF XAML 標記編譯器以外的任何項目所。</xref:System.Windows.Markup.InternalTypeHelper>"
  syntax:
    content: protected abstract object CreateInstance (Type type, System.Globalization.CultureInfo culture);
    parameters:
    - id: type
      type: System.Type
      description: "<xref:System.Type>來建立。</xref:System.Type>"
    - id: culture
      type: System.Globalization.CultureInfo
      description: "文化特性特定資訊。"
    return:
      type: System.Object
      description: "建立的執行個體。"
  overload: System.Windows.Markup.InternalTypeHelper.CreateInstance*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Markup.InternalTypeHelper.GetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Globalization.CultureInfo)
  id: GetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Globalization.CultureInfo)
  parent: System.Windows.Markup.InternalTypeHelper
  langs:
  - csharp
  name: GetPropertyValue(PropertyInfo,Object,CultureInfo)
  nameWithType: InternalTypeHelper.GetPropertyValue(PropertyInfo,Object,CultureInfo)
  fullName: System.Windows.Markup.InternalTypeHelper.GetPropertyValue(PropertyInfo,Object,CultureInfo)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Markup
  summary: "（產生） 的衍生類別中覆寫，請在目標物件上取得內部屬性的值"
  remarks: "<xref:System.Windows.Markup.InternalTypeHelper>類別不適用於 WPF XAML 標記編譯器以外的任何項目所。</xref:System.Windows.Markup.InternalTypeHelper>"
  syntax:
    content: protected abstract object GetPropertyValue (System.Reflection.PropertyInfo propertyInfo, object target, System.Globalization.CultureInfo culture);
    parameters:
    - id: propertyInfo
      type: System.Reflection.PropertyInfo
      description: "要取得之屬性的屬性資訊。"
    - id: target
      type: System.Object
      description: "保存所需的屬性值的物件。"
    - id: culture
      type: System.Globalization.CultureInfo
      description: "文化特性特定資訊。"
    return:
      type: System.Object
      description: "屬性的值。"
  overload: System.Windows.Markup.InternalTypeHelper.GetPropertyValue*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Markup.InternalTypeHelper.SetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Object,System.Globalization.CultureInfo)
  id: SetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Object,System.Globalization.CultureInfo)
  parent: System.Windows.Markup.InternalTypeHelper
  langs:
  - csharp
  name: SetPropertyValue(PropertyInfo,Object,Object,CultureInfo)
  nameWithType: InternalTypeHelper.SetPropertyValue(PropertyInfo,Object,Object,CultureInfo)
  fullName: System.Windows.Markup.InternalTypeHelper.SetPropertyValue(PropertyInfo,Object,Object,CultureInfo)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Markup
  summary: "（產生） 的衍生類別中覆寫，設定目標物件上的內部屬性的值。"
  remarks: "<xref:System.Windows.Markup.InternalTypeHelper>類別不適用於 WPF XAML 標記編譯器以外的任何項目所。</xref:System.Windows.Markup.InternalTypeHelper>"
  syntax:
    content: protected abstract void SetPropertyValue (System.Reflection.PropertyInfo propertyInfo, object target, object value, System.Globalization.CultureInfo culture);
    parameters:
    - id: propertyInfo
      type: System.Reflection.PropertyInfo
      description: "要設定之屬性的屬性資訊。"
    - id: target
      type: System.Object
      description: "保存所需的屬性值的物件。"
    - id: value
      type: System.Object
      description: "要設定的值。"
    - id: culture
      type: System.Globalization.CultureInfo
      description: "文化特性特定資訊。"
  overload: System.Windows.Markup.InternalTypeHelper.SetPropertyValue*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Windows.Markup.InternalTypeHelper.#ctor
  parent: System.Windows.Markup.InternalTypeHelper
  isExternal: false
  name: InternalTypeHelper()
  nameWithType: InternalTypeHelper.InternalTypeHelper()
  fullName: System.Windows.Markup.InternalTypeHelper.InternalTypeHelper()
- uid: System.Windows.Markup.InternalTypeHelper.AddEventHandler(System.Reflection.EventInfo,System.Object,System.Delegate)
  parent: System.Windows.Markup.InternalTypeHelper
  isExternal: false
  name: AddEventHandler(EventInfo,Object,Delegate)
  nameWithType: InternalTypeHelper.AddEventHandler(EventInfo,Object,Delegate)
  fullName: System.Windows.Markup.InternalTypeHelper.AddEventHandler(EventInfo,Object,Delegate)
- uid: System.Reflection.EventInfo
  parent: System.Reflection
  isExternal: true
  name: EventInfo
  nameWithType: EventInfo
  fullName: System.Reflection.EventInfo
- uid: System.Delegate
  parent: System
  isExternal: true
  name: Delegate
  nameWithType: Delegate
  fullName: System.Delegate
- uid: System.Windows.Markup.InternalTypeHelper.CreateDelegate(System.Type,System.Object,System.String)
  parent: System.Windows.Markup.InternalTypeHelper
  isExternal: false
  name: CreateDelegate(Type,Object,String)
  nameWithType: InternalTypeHelper.CreateDelegate(Type,Object,String)
  fullName: System.Windows.Markup.InternalTypeHelper.CreateDelegate(Type,Object,String)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Markup.InternalTypeHelper.CreateInstance(System.Type,System.Globalization.CultureInfo)
  parent: System.Windows.Markup.InternalTypeHelper
  isExternal: false
  name: CreateInstance(Type,CultureInfo)
  nameWithType: InternalTypeHelper.CreateInstance(Type,CultureInfo)
  fullName: System.Windows.Markup.InternalTypeHelper.CreateInstance(Type,CultureInfo)
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Windows.Markup.InternalTypeHelper.GetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Globalization.CultureInfo)
  parent: System.Windows.Markup.InternalTypeHelper
  isExternal: false
  name: GetPropertyValue(PropertyInfo,Object,CultureInfo)
  nameWithType: InternalTypeHelper.GetPropertyValue(PropertyInfo,Object,CultureInfo)
  fullName: System.Windows.Markup.InternalTypeHelper.GetPropertyValue(PropertyInfo,Object,CultureInfo)
- uid: System.Reflection.PropertyInfo
  parent: System.Reflection
  isExternal: true
  name: PropertyInfo
  nameWithType: PropertyInfo
  fullName: System.Reflection.PropertyInfo
- uid: System.Windows.Markup.InternalTypeHelper.SetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Object,System.Globalization.CultureInfo)
  parent: System.Windows.Markup.InternalTypeHelper
  isExternal: false
  name: SetPropertyValue(PropertyInfo,Object,Object,CultureInfo)
  nameWithType: InternalTypeHelper.SetPropertyValue(PropertyInfo,Object,Object,CultureInfo)
  fullName: System.Windows.Markup.InternalTypeHelper.SetPropertyValue(PropertyInfo,Object,Object,CultureInfo)
- uid: System.Windows.Markup.InternalTypeHelper.#ctor*
  parent: System.Windows.Markup.InternalTypeHelper
  isExternal: false
  name: InternalTypeHelper
  nameWithType: InternalTypeHelper.InternalTypeHelper
- uid: System.Windows.Markup.InternalTypeHelper.AddEventHandler*
  parent: System.Windows.Markup.InternalTypeHelper
  isExternal: false
  name: AddEventHandler
  nameWithType: InternalTypeHelper.AddEventHandler
- uid: System.Windows.Markup.InternalTypeHelper.CreateDelegate*
  parent: System.Windows.Markup.InternalTypeHelper
  isExternal: false
  name: CreateDelegate
  nameWithType: InternalTypeHelper.CreateDelegate
- uid: System.Windows.Markup.InternalTypeHelper.CreateInstance*
  parent: System.Windows.Markup.InternalTypeHelper
  isExternal: false
  name: CreateInstance
  nameWithType: InternalTypeHelper.CreateInstance
- uid: System.Windows.Markup.InternalTypeHelper.GetPropertyValue*
  parent: System.Windows.Markup.InternalTypeHelper
  isExternal: false
  name: GetPropertyValue
  nameWithType: InternalTypeHelper.GetPropertyValue
- uid: System.Windows.Markup.InternalTypeHelper.SetPropertyValue*
  parent: System.Windows.Markup.InternalTypeHelper
  isExternal: false
  name: SetPropertyValue
  nameWithType: InternalTypeHelper.SetPropertyValue
