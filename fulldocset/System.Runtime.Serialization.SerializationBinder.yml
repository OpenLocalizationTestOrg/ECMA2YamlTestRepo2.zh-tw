### YamlMime:ManagedReference
items:
- uid: System.Runtime.Serialization.SerializationBinder
  id: SerializationBinder
  children:
  - System.Runtime.Serialization.SerializationBinder.#ctor
  - System.Runtime.Serialization.SerializationBinder.BindToName(System.Type,System.String@,System.String@)
  - System.Runtime.Serialization.SerializationBinder.BindToType(System.String,System.String)
  langs:
  - csharp
  name: SerializationBinder
  nameWithType: SerializationBinder
  fullName: System.Runtime.Serialization.SerializationBinder
  type: Class
  summary: "可讓使用者控制類別載入和強制載入的類別。"
  remarks: "在序列化期間，格式器會傳輸建立正確的型別和版本之物件的執行個體所需的資訊。 這項資訊通常會包含的完整型別名稱和物件的組件名稱。 組件名稱包括名稱、 版本和強式名稱 (請參閱[強式名稱組件](~/add/includes/ajax-current-ext-md.md)) 的組件的雜湊。 根據預設，還原序列化會使用這項資訊建立相同物件 （與例外任何的狀況組件載入安全性原則所限制） 的執行個體。 某些使用者需要的控制類別載入，可能是因為類別具有組件或不同版本的類別之間移動，需要伺服器與用戶端。       SerializationBinder 也用於安全性。 當您嘗試還原序列化某些不受信任來源的資料時，則可能是有些安全性漏洞。 繫結器可讓您檢查應用程式定義域中載入哪些類型的機會。 接著，請維護拒絕類型的清單或允許類型清單，並限制正在載入哪些類型和具現化。 此外，您應該要注意哪些資訊在網路上放置，您可能想要保護 （使用傳輸或訊息安全性） 在網路上傳送的型別名稱或其他資料時。      > [!WARNING] > 只能使用 SerializationBinder，如果您完全確定的序列化資訊。 惡意型別可能會導致非預期的行為。       這是抽象的基底類別。 所有繫結器延伸此類別。"
  example:
  - >-
    [!code-vb[SerializationBinder Example#1](~/add/codesnippet/visualbasic/t-system.runtime.seriali_11_1.vb)]
     [!code-cpp[SerializationBinder Example#1](~/add/codesnippet/cpp/t-system.runtime.seriali_11_1.cpp)]
     [!code-cs[SerializationBinder Example#1](~/add/codesnippet/csharp/t-system.runtime.seriali_11_1.cs)]
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class SerializationBinder
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationBinder.#ctor
  id: '#ctor'
  parent: System.Runtime.Serialization.SerializationBinder
  langs:
  - csharp
  name: SerializationBinder()
  nameWithType: SerializationBinder.SerializationBinder()
  fullName: System.Runtime.Serialization.SerializationBinder.SerializationBinder()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "初始化的新執行個體<xref href=&quot;System.Runtime.Serialization.SerializationBinder&quot;></xref>類別。"
  syntax:
    content: protected SerializationBinder ();
    parameters: []
  overload: System.Runtime.Serialization.SerializationBinder.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationBinder.BindToName(System.Type,System.String@,System.String@)
  id: BindToName(System.Type,System.String@,System.String@)
  parent: System.Runtime.Serialization.SerializationBinder
  langs:
  - csharp
  name: BindToName(Type,String,String)
  nameWithType: SerializationBinder.BindToName(Type,String,String)
  fullName: System.Runtime.Serialization.SerializationBinder.BindToName(Type,String,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "當在衍生類別中覆寫時，控制序列化的型別物件的繫結。"
  syntax:
    content: public virtual void BindToName (Type serializedType, out string assemblyName, out string typeName);
    parameters:
    - id: serializedType
      type: System.Type
      description: "物件的類型格式器建立的新執行個體。"
    - id: assemblyName
      type: System.String
      description: "指定<xref:System.Reflection.Assembly>序列化物件的名稱。</xref:System.Reflection.Assembly>"
    - id: typeName
      type: System.String
      description: "指定<xref:System.Type>序列化物件的名稱。</xref:System.Type>"
  overload: System.Runtime.Serialization.SerializationBinder.BindToName*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationBinder.BindToType(System.String,System.String)
  id: BindToType(System.String,System.String)
  parent: System.Runtime.Serialization.SerializationBinder
  langs:
  - csharp
  name: BindToType(String,String)
  nameWithType: SerializationBinder.BindToType(String,String)
  fullName: System.Runtime.Serialization.SerializationBinder.BindToType(String,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "當在衍生類別中覆寫時，控制序列化的型別物件的繫結。"
  remarks: ''
  example:
  - SerializationBinder Example#1
  syntax:
    content: public abstract Type BindToType (string assemblyName, string typeName);
    parameters:
    - id: assemblyName
      type: System.String
      description: "指定<xref:System.Reflection.Assembly>序列化物件的名稱。</xref:System.Reflection.Assembly>"
    - id: typeName
      type: System.String
      description: "指定<xref:System.Type>序列化物件的名稱。</xref:System.Type>"
    return:
      type: System.Type
      description: "物件的類型格式器建立的新執行個體。"
  overload: System.Runtime.Serialization.SerializationBinder.BindToType*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Runtime.Serialization.SerializationBinder.#ctor
  parent: System.Runtime.Serialization.SerializationBinder
  isExternal: false
  name: SerializationBinder()
  nameWithType: SerializationBinder.SerializationBinder()
  fullName: System.Runtime.Serialization.SerializationBinder.SerializationBinder()
- uid: System.Runtime.Serialization.SerializationBinder.BindToName(System.Type,System.String@,System.String@)
  parent: System.Runtime.Serialization.SerializationBinder
  isExternal: false
  name: BindToName(Type,String,String)
  nameWithType: SerializationBinder.BindToName(Type,String,String)
  fullName: System.Runtime.Serialization.SerializationBinder.BindToName(Type,String,String)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.Serialization.SerializationBinder.BindToType(System.String,System.String)
  parent: System.Runtime.Serialization.SerializationBinder
  isExternal: false
  name: BindToType(String,String)
  nameWithType: SerializationBinder.BindToType(String,String)
  fullName: System.Runtime.Serialization.SerializationBinder.BindToType(String,String)
- uid: System.Runtime.Serialization.SerializationBinder.#ctor*
  parent: System.Runtime.Serialization.SerializationBinder
  isExternal: false
  name: SerializationBinder
  nameWithType: SerializationBinder.SerializationBinder
- uid: System.Runtime.Serialization.SerializationBinder.BindToName*
  parent: System.Runtime.Serialization.SerializationBinder
  isExternal: false
  name: BindToName
  nameWithType: SerializationBinder.BindToName
- uid: System.Runtime.Serialization.SerializationBinder.BindToType*
  parent: System.Runtime.Serialization.SerializationBinder
  isExternal: false
  name: BindToType
  nameWithType: SerializationBinder.BindToType
