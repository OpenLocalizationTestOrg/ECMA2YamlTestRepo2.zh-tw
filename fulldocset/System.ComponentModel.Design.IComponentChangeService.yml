### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Design.IComponentChangeService
  id: IComponentChangeService
  children:
  - System.ComponentModel.Design.IComponentChangeService.ComponentAdded
  - System.ComponentModel.Design.IComponentChangeService.ComponentAdding
  - System.ComponentModel.Design.IComponentChangeService.ComponentChanged
  - System.ComponentModel.Design.IComponentChangeService.ComponentChanging
  - System.ComponentModel.Design.IComponentChangeService.ComponentRemoved
  - System.ComponentModel.Design.IComponentChangeService.ComponentRemoving
  - System.ComponentModel.Design.IComponentChangeService.ComponentRename
  - System.ComponentModel.Design.IComponentChangeService.OnComponentChanged(System.Object,System.ComponentModel.MemberDescriptor,System.Object,System.Object)
  - System.ComponentModel.Design.IComponentChangeService.OnComponentChanging(System.Object,System.ComponentModel.MemberDescriptor)
  langs:
  - csharp
  name: IComponentChangeService
  nameWithType: IComponentChangeService
  fullName: System.ComponentModel.Design.IComponentChangeService
  type: Interface
  summary: "提供介面來新增和移除事件處理常式的事件新增、 變更、 移除或重新命名元件，並提供方法來引發<xref href=&quot;System.ComponentModel.Design.IComponentChangeService.ComponentChanged&quot;></xref>或<xref href=&quot;System.ComponentModel.Design.IComponentChangeService.ComponentChanging&quot;></xref>事件。"
  remarks: "IComponentChangeService 提供的介面，可用來指示處理下列事件的方法:- <xref:System.ComponentModel.Design.IComponentChangeService.ComponentAdded>，加入元件時所引發。</xref:System.ComponentModel.Design.IComponentChangeService.ComponentAdded>      - <xref:System.ComponentModel.Design.IComponentChangeService.ComponentAdding>，加入元件時引發。</xref:System.ComponentModel.Design.IComponentChangeService.ComponentAdding>      - <xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged>，元件變更時引發。</xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged>      - <xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanging>，元件是即將變更時引發。</xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanging>      - <xref:System.ComponentModel.Design.IComponentChangeService.ComponentRemoved>，移除元件時所引發。</xref:System.ComponentModel.Design.IComponentChangeService.ComponentRemoved>      - <xref:System.ComponentModel.Design.IComponentChangeService.ComponentRemoving>，移除元件時引發。</xref:System.ComponentModel.Design.IComponentChangeService.ComponentRemoving>      - <xref:System.ComponentModel.Design.IComponentChangeService.ComponentRename>，元件已重新命名時引發。</xref:System.ComponentModel.Design.IComponentChangeService.ComponentRename>       一般而言，在設計環境會引發這些元件加入、 變更、 移除或重新命名的事件。 設計工具應該呼叫這個介面的方法，當使用<xref:System.ComponentModel.Design.DesignerTransaction>提供復原和取消復原功能會影響元件的設計階段動作的物件。</xref:System.ComponentModel.Design.DesignerTransaction> 有<xref:System.ComponentModel.Design.DesignerTransaction>.</xref:System.ComponentModel.Design.DesignerTransaction>的文件中的詳細資訊 一般而言，根目錄設計工具會處理這些變更通知。       此服務也會提供元件變更事件或變更事件的元件引發的方法。 A<xref:System.ComponentModel.PropertyDescriptor>或元件表示元件已變更，或是變更與<xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A>和<xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A>方法，分別。</xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A> </xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A> </xref:System.ComponentModel.PropertyDescriptor>"
  example:
  - "This following example demonstrates how to use the IComponentChangeService interface to receive notifications about the addition of, removal of, and changes to components in design mode.  \n  \n [!code-vb[IComponentChangeServiceSample2#1](~/add/codesnippet/visualbasic/t-system.componentmodel._48_1.vb)]\n [!code-cpp[IComponentChangeServiceSample2#1](~/add/codesnippet/cpp/t-system.componentmodel._48_1.cpp)]\n [!code-cs[IComponentChangeServiceSample2#1](~/add/codesnippet/csharp/t-system.componentmodel._48_1.cs)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public interface IComponentChangeService
  implements: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IComponentChangeService.ComponentAdded
  id: ComponentAdded
  parent: System.ComponentModel.Design.IComponentChangeService
  langs:
  - csharp
  name: ComponentAdded
  nameWithType: IComponentChangeService.ComponentAdded
  fullName: System.ComponentModel.Design.IComponentChangeService.ComponentAdded
  type: Event
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "已新增的元件時發生。"
  remarks: "在載入和當新的元件之後，建立使用者，已設置元件期間，發生此事件。"
  syntax:
    content: public event System.ComponentModel.Design.ComponentEventHandler ComponentAdded;
    return:
      type: System.ComponentModel.Design.ComponentEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IComponentChangeService.ComponentAdding
  id: ComponentAdding
  parent: System.ComponentModel.Design.IComponentChangeService
  langs:
  - csharp
  name: ComponentAdding
  nameWithType: IComponentChangeService.ComponentAdding
  fullName: System.ComponentModel.Design.IComponentChangeService.ComponentAdding
  type: Event
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "元件正在加入時發生。"
  remarks: "在載入和使用者建立新元件期間，發生此事件。 您可以取消新增元件擲回例外狀況時，這裡的程序。"
  syntax:
    content: public event System.ComponentModel.Design.ComponentEventHandler ComponentAdding;
    return:
      type: System.ComponentModel.Design.ComponentEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IComponentChangeService.ComponentChanged
  id: ComponentChanged
  parent: System.ComponentModel.Design.IComponentChangeService
  langs:
  - csharp
  name: ComponentChanged
  nameWithType: IComponentChangeService.ComponentChanged
  fullName: System.ComponentModel.Design.IComponentChangeService.ComponentChanged
  type: Event
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "元件已變更時發生。"
  remarks: "在表單上的任何元件變更時，就會發生此事件。 這個事件不會發生期間表單載入和卸載，因為這個階段預期的變更。      > [!NOTE] > A<xref:System.ComponentModel.Design.DesignerTransaction>可以引發多個 ComponentChanged 事件。</xref:System.ComponentModel.Design.DesignerTransaction> 某些 ComponentChanged 事件處理常式可能會影響與預期的事件序列，例如，如果您的程式碼會變更屬性的值進行交易時。 ComponentChanged 事件處理常式也可以降低效能，如果它在每次變更後繪製<xref:System.ComponentModel.Design.DesignerTransaction>正在進行中。</xref:System.ComponentModel.Design.DesignerTransaction> 為了讓<xref:System.ComponentModel.Design.DesignerTransaction>在程序完成而不需要中斷或干擾 ComponentChanged 的事件處理常式，您可以測試的狀態<xref:System.ComponentModel.Design.IDesignerHost.InTransaction%2A>屬性，延遲處理變更事件直到交易完成為止，藉由新增<xref:System.ComponentModel.Design.DesignerTransactionCloseEventHandler>以引發 ComponentChanged 事件處理常式並在交易完成時將其本身移除。</xref:System.ComponentModel.Design.DesignerTransactionCloseEventHandler> </xref:System.ComponentModel.Design.IDesignerHost.InTransaction%2A> </xref:System.ComponentModel.Design.DesignerTransaction>"
  syntax:
    content: public event System.ComponentModel.Design.ComponentChangedEventHandler ComponentChanged;
    return:
      type: System.ComponentModel.Design.ComponentChangedEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IComponentChangeService.ComponentChanging
  id: ComponentChanging
  parent: System.ComponentModel.Design.IComponentChangeService
  langs:
  - csharp
  name: ComponentChanging
  nameWithType: IComponentChangeService.ComponentChanging
  fullName: System.ComponentModel.Design.IComponentChangeService.ComponentChanging
  type: Event
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "當元件正在變更時發生。"
  remarks: "元件實際上已變更，並可讓設計工具有機會中止變更，或執行任何變更前處理之前，就會發生此事件。 此事件並不會發生期間表單載入和卸載，因為這個階段預期的變更。"
  syntax:
    content: public event System.ComponentModel.Design.ComponentChangingEventHandler ComponentChanging;
    return:
      type: System.ComponentModel.Design.ComponentChangingEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IComponentChangeService.ComponentRemoved
  id: ComponentRemoved
  parent: System.ComponentModel.Design.IComponentChangeService
  langs:
  - csharp
  name: ComponentRemoved
  nameWithType: IComponentChangeService.ComponentRemoved
  fullName: System.ComponentModel.Design.IComponentChangeService.ComponentRemoved
  type: Event
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "已移除的元件時發生。"
  remarks: "期間卸載和使用者刪除元件時，就會發生此事件。 事件發生之前從元件已移除站台。"
  syntax:
    content: public event System.ComponentModel.Design.ComponentEventHandler ComponentRemoved;
    return:
      type: System.ComponentModel.Design.ComponentEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IComponentChangeService.ComponentRemoving
  id: ComponentRemoving
  parent: System.ComponentModel.Design.IComponentChangeService
  langs:
  - csharp
  name: ComponentRemoving
  nameWithType: IComponentChangeService.ComponentRemoving
  fullName: System.ComponentModel.Design.IComponentChangeService.ComponentRemoving
  type: Event
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "發生於元件正被移除。"
  remarks: "期間卸載和使用者刪除元件，就會發生此事件。 您可以取消移除的元件擲回例外狀況時，這裡的程序。"
  syntax:
    content: public event System.ComponentModel.Design.ComponentEventHandler ComponentRemoving;
    return:
      type: System.ComponentModel.Design.ComponentEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IComponentChangeService.ComponentRename
  id: ComponentRename
  parent: System.ComponentModel.Design.IComponentChangeService
  langs:
  - csharp
  name: ComponentRename
  nameWithType: IComponentChangeService.ComponentRename
  fullName: System.ComponentModel.Design.IComponentChangeService.ComponentRename
  type: Event
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "重新命名元件時，就會發生。"
  remarks: "之後就會發生此事件<xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged>事件時元件已重新命名。</xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged>"
  syntax:
    content: public event System.ComponentModel.Design.ComponentRenameEventHandler ComponentRename;
    return:
      type: System.ComponentModel.Design.ComponentRenameEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IComponentChangeService.OnComponentChanged(System.Object,System.ComponentModel.MemberDescriptor,System.Object,System.Object)
  id: OnComponentChanged(System.Object,System.ComponentModel.MemberDescriptor,System.Object,System.Object)
  parent: System.ComponentModel.Design.IComponentChangeService
  langs:
  - csharp
  name: OnComponentChanged(Object,MemberDescriptor,Object,Object)
  nameWithType: IComponentChangeService.OnComponentChanged(Object,MemberDescriptor,Object,Object)
  fullName: System.ComponentModel.Design.IComponentChangeService.OnComponentChanged(Object,MemberDescriptor,Object,Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "向元件變更服務的特定元件已變更。"
  remarks: "這個方法會引發<xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged>事件。</xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged>       大部分的設計工具所隨附[!INCLUDE[winsdklong](~/add/includes/winsdklong-md.md)]，以及 Visual Studio 設計階段環境中，通常會引發這個事件是變更您的專案中的元件時，因此大部分的情況下您不需要明確地呼叫這個方法。 適當<xref:System.ComponentModel.Design.IComponentChangeService>事件會自動引發的時機<xref:System.ComponentModel.PropertyDescriptor>用於變更屬性值或元件會加入或移除<xref:System.ComponentModel.Design.IDesignerHost>容器。</xref:System.ComponentModel.Design.IDesignerHost> </xref:System.ComponentModel.PropertyDescriptor> </xref:System.ComponentModel.Design.IComponentChangeService>       在呼叫前 OnComponentChanged，先呼叫<xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A>來指出元件即將變更及進行變更。</xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A> 然後呼叫引發 OnComponentChanged<xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged>事件。</xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged>"
  syntax:
    content: public void OnComponentChanged (object component, System.ComponentModel.MemberDescriptor member, object oldValue, object newValue);
    parameters:
    - id: component
      type: System.Object
      description: "元件已變更。"
    - id: member
      type: System.ComponentModel.MemberDescriptor
      description: "已變更的成員。 這是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果這項變更不相關的單一成員。"
    - id: oldValue
      type: System.Object
      description: "成員的舊值。 這是只有該成員不是有效<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
    - id: newValue
      type: System.Object
      description: "新成員的值。 這是只有該成員不是有效<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.Design.IComponentChangeService.OnComponentChanged*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IComponentChangeService.OnComponentChanging(System.Object,System.ComponentModel.MemberDescriptor)
  id: OnComponentChanging(System.Object,System.ComponentModel.MemberDescriptor)
  parent: System.ComponentModel.Design.IComponentChangeService
  langs:
  - csharp
  name: OnComponentChanging(Object,MemberDescriptor)
  nameWithType: IComponentChangeService.OnComponentChanging(Object,MemberDescriptor)
  fullName: System.ComponentModel.Design.IComponentChangeService.OnComponentChanging(Object,MemberDescriptor)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "向元件變更服務正在變更的特定元件。"
  remarks: "這個方法會引發<xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanging>事件。</xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanging>       大部分設計工具中隨附[!INCLUDE[winsdklong](~/add/includes/winsdklong-md.md)]，以及 Visual Studio 設計階段環境中，通常會引發這個事件會自動; 因此大部分的情況下，您不需要明確地呼叫這個方法。 適當<xref:System.ComponentModel.Design.IComponentChangeService>事件會自動引發的時機<xref:System.ComponentModel.PropertyDescriptor>用於變更屬性值或元件會加入或移除<xref:System.ComponentModel.Design.IDesignerHost>容器。</xref:System.ComponentModel.Design.IDesignerHost> </xref:System.ComponentModel.PropertyDescriptor> </xref:System.ComponentModel.Design.IComponentChangeService>"
  syntax:
    content: public void OnComponentChanging (object component, System.ComponentModel.MemberDescriptor member);
    parameters:
    - id: component
      type: System.Object
      description: "若要變更元件。"
    - id: member
      type: System.ComponentModel.MemberDescriptor
      description: "正在變更成員。 這是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果這項變更不相關的單一成員。"
  overload: System.ComponentModel.Design.IComponentChangeService.OnComponentChanging*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.Design.IComponentChangeService.ComponentAdded
  parent: System.ComponentModel.Design.IComponentChangeService
  isExternal: false
  name: ComponentAdded
  nameWithType: IComponentChangeService.ComponentAdded
  fullName: System.ComponentModel.Design.IComponentChangeService.ComponentAdded
- uid: System.ComponentModel.Design.ComponentEventHandler
  parent: System.ComponentModel.Design
  isExternal: false
  name: ComponentEventHandler
  nameWithType: ComponentEventHandler
  fullName: System.ComponentModel.Design.ComponentEventHandler
- uid: System.ComponentModel.Design.IComponentChangeService.ComponentAdding
  parent: System.ComponentModel.Design.IComponentChangeService
  isExternal: false
  name: ComponentAdding
  nameWithType: IComponentChangeService.ComponentAdding
  fullName: System.ComponentModel.Design.IComponentChangeService.ComponentAdding
- uid: System.ComponentModel.Design.IComponentChangeService.ComponentChanged
  parent: System.ComponentModel.Design.IComponentChangeService
  isExternal: false
  name: ComponentChanged
  nameWithType: IComponentChangeService.ComponentChanged
  fullName: System.ComponentModel.Design.IComponentChangeService.ComponentChanged
- uid: System.ComponentModel.Design.ComponentChangedEventHandler
  parent: System.ComponentModel.Design
  isExternal: false
  name: ComponentChangedEventHandler
  nameWithType: ComponentChangedEventHandler
  fullName: System.ComponentModel.Design.ComponentChangedEventHandler
- uid: System.ComponentModel.Design.IComponentChangeService.ComponentChanging
  parent: System.ComponentModel.Design.IComponentChangeService
  isExternal: false
  name: ComponentChanging
  nameWithType: IComponentChangeService.ComponentChanging
  fullName: System.ComponentModel.Design.IComponentChangeService.ComponentChanging
- uid: System.ComponentModel.Design.ComponentChangingEventHandler
  parent: System.ComponentModel.Design
  isExternal: false
  name: ComponentChangingEventHandler
  nameWithType: ComponentChangingEventHandler
  fullName: System.ComponentModel.Design.ComponentChangingEventHandler
- uid: System.ComponentModel.Design.IComponentChangeService.ComponentRemoved
  parent: System.ComponentModel.Design.IComponentChangeService
  isExternal: false
  name: ComponentRemoved
  nameWithType: IComponentChangeService.ComponentRemoved
  fullName: System.ComponentModel.Design.IComponentChangeService.ComponentRemoved
- uid: System.ComponentModel.Design.IComponentChangeService.ComponentRemoving
  parent: System.ComponentModel.Design.IComponentChangeService
  isExternal: false
  name: ComponentRemoving
  nameWithType: IComponentChangeService.ComponentRemoving
  fullName: System.ComponentModel.Design.IComponentChangeService.ComponentRemoving
- uid: System.ComponentModel.Design.IComponentChangeService.ComponentRename
  parent: System.ComponentModel.Design.IComponentChangeService
  isExternal: false
  name: ComponentRename
  nameWithType: IComponentChangeService.ComponentRename
  fullName: System.ComponentModel.Design.IComponentChangeService.ComponentRename
- uid: System.ComponentModel.Design.ComponentRenameEventHandler
  parent: System.ComponentModel.Design
  isExternal: false
  name: ComponentRenameEventHandler
  nameWithType: ComponentRenameEventHandler
  fullName: System.ComponentModel.Design.ComponentRenameEventHandler
- uid: System.ComponentModel.Design.IComponentChangeService.OnComponentChanged(System.Object,System.ComponentModel.MemberDescriptor,System.Object,System.Object)
  parent: System.ComponentModel.Design.IComponentChangeService
  isExternal: false
  name: OnComponentChanged(Object,MemberDescriptor,Object,Object)
  nameWithType: IComponentChangeService.OnComponentChanged(Object,MemberDescriptor,Object,Object)
  fullName: System.ComponentModel.Design.IComponentChangeService.OnComponentChanged(Object,MemberDescriptor,Object,Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ComponentModel.MemberDescriptor
  parent: System.ComponentModel
  isExternal: false
  name: MemberDescriptor
  nameWithType: MemberDescriptor
  fullName: System.ComponentModel.MemberDescriptor
- uid: System.ComponentModel.Design.IComponentChangeService.OnComponentChanging(System.Object,System.ComponentModel.MemberDescriptor)
  parent: System.ComponentModel.Design.IComponentChangeService
  isExternal: false
  name: OnComponentChanging(Object,MemberDescriptor)
  nameWithType: IComponentChangeService.OnComponentChanging(Object,MemberDescriptor)
  fullName: System.ComponentModel.Design.IComponentChangeService.OnComponentChanging(Object,MemberDescriptor)
- uid: System.ComponentModel.Design.IComponentChangeService.OnComponentChanged*
  parent: System.ComponentModel.Design.IComponentChangeService
  isExternal: false
  name: OnComponentChanged
  nameWithType: IComponentChangeService.OnComponentChanged
- uid: System.ComponentModel.Design.IComponentChangeService.OnComponentChanging*
  parent: System.ComponentModel.Design.IComponentChangeService
  isExternal: false
  name: OnComponentChanging
  nameWithType: IComponentChangeService.OnComponentChanging
