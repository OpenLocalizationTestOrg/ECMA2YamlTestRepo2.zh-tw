### YamlMime:ManagedReference
items:
- uid: System.Data.OleDb.OleDbEnumerator
  id: OleDbEnumerator
  children:
  - System.Data.OleDb.OleDbEnumerator.#ctor
  - System.Data.OleDb.OleDbEnumerator.GetElements
  - System.Data.OleDb.OleDbEnumerator.GetEnumerator(System.Type)
  - System.Data.OleDb.OleDbEnumerator.GetRootEnumerator
  langs:
  - csharp
  name: OleDbEnumerator
  nameWithType: OleDbEnumerator
  fullName: System.Data.OleDb.OleDbEnumerator
  type: Class
  summary: "提供列舉區域網路中的所有可用 OLE DB 提供者的機制。"
  syntax:
    content: public sealed class OleDbEnumerator
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbEnumerator.#ctor
  id: '#ctor'
  parent: System.Data.OleDb.OleDbEnumerator
  langs:
  - csharp
  name: OleDbEnumerator()
  nameWithType: OleDbEnumerator.OleDbEnumerator()
  fullName: System.Data.OleDb.OleDbEnumerator.OleDbEnumerator()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "建立的執行個體<xref href=&quot;System.Data.OleDb.OleDbEnumerator&quot;></xref>類別。"
  syntax:
    content: public OleDbEnumerator ();
    parameters: []
  overload: System.Data.OleDb.OleDbEnumerator.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbEnumerator.GetElements
  id: GetElements
  parent: System.Data.OleDb.OleDbEnumerator
  langs:
  - csharp
  name: GetElements()
  nameWithType: OleDbEnumerator.GetElements()
  fullName: System.Data.OleDb.OleDbEnumerator.GetElements()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "擷取<xref href=&quot;System.Data.DataTable&quot;> </xref> ，其中包含所有可見的 OLE DB 提供者的相關資訊。"
  remarks: "這個方法所傳回的資料表包含下列資料行，其中包含字串: |資料行序數 |資料行 |描述 |  |--------------------|------------|-----------------|  |&0; |ISOURCESROWSET |原生 OLEDB 資料來源或列舉值的非變異名稱。 |  |&1; |SOURCES_PARSENAME |人類看得懂的名稱，可以使用原生 COM 介面 IParseDisplayName 轉換成 moniker。 對應至原生 OLE DB 來源資料列集所傳回之 SOURCES_PARSENAME 資料行。 |  |&2; |SOURCES_DESCRIPTION |原生 OLE DB 資料來源的描述。 對應至原生 OLE DB 來源資料列集所傳回之 SOURCES_DESCRIPTION 資料行。 |  |&3; |SOURCES_TYPE |下列的列舉成員的其中一個︰ 繫結器 (0)、 DataSource_MDP (1)、 DataSource_TDP (2)、 (3) 的列舉值。 這些會對應至原生 OLE DB 來源資料列集的 SOURCES_TYPE 資料行中傳回的值。 |  |&4; |SOURCES_ISPARENT |適用於只列舉值。 如果`true`，表示項目會套用至相同 GetSourcesRowset 已在其呼叫的列舉值，隱含的它也會包含在子列舉型別。 對應至原生 OLE DB 來源資料列集的 SOURCES_ISPARENT 資料行 |  |&5; |SOURCES_CLSID |人們可讀取名稱，可以轉換成使用原生 COM 介面 IParseDisplayName moniker。 對應至原生 OLE DB 來源資料列集所傳回之 SOURCES_CLSID 資料行。 |"
  example:
  - "The following console application retrieves information about all the visible OLE DB providers and displays the information in the console window.  \n  \n```vb#  \nImports System.Data  \nImports System.Data.OleDb  \n  \nModule Module1  \n  \nSub Main()  \n  Dim enumerator As New OleDbEnumerator  \n  Dim table As System.Data.DataTable = enumerator.GetElements()  \n  \n  DisplayData(table)  \n  \n   Console.WriteLine(\"Press any key to continue.\")  \n   Console.ReadKey()  \n End Sub  \n  \n Private Sub DisplayData(ByVal table As DataTable)  \n   For Each row As DataRow In table.Rows  \n     For Each col As DataColumn In table.Columns  \n       Console.WriteLine(\"{0} = {1}\", col.ColumnName, row(col))  \n     Next  \n     Console.WriteLine(\"==================================\")  \n   Next  \n End Sub  \nEnd Module  \n```  \n  \n```c#  \nusing System;  \nusing System.Data;  \nusing System.Data.OleDb;  \n  \nclass Program  \n{  \n static void Main()  \n {  \n   OleDbEnumerator enumerator = new OleDbEnumerator();  \n   DataTable table = enumerator.GetElements();  \n  \n   DisplayData(table);  \n  \n   Console.WriteLine(\"Press any key to continue.\");  \n   Console.ReadKey();  \n }  \n  \n static void DisplayData(DataTable table)  \n {  \n   foreach (DataRow row in table.Rows)  \n   {  \n     foreach (DataColumn col in table.Columns)  \n     {  \n       Console.WriteLine(\"{0} = {1}\", col.ColumnName, row[col]);  \n     }  \n     Console.WriteLine(\"==================================\");  \n   }  \n }  \n}  \n```"
  syntax:
    content: public System.Data.DataTable GetElements ();
    parameters: []
    return:
      type: System.Data.DataTable
      description: "傳回<xref href=&quot;System.Data.DataTable&quot;></xref>包含可見的 OLE DB 提供者的相關資訊。"
  overload: System.Data.OleDb.OleDbEnumerator.GetElements*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "提供者不支援 ISourcesRowset。"
  - type: System.Data.OleDb.OleDbException
    commentId: T:System.Data.OleDb.OleDbException
    description: "基礎提供者中發生例外狀況。"
  platform:
  - net462
- uid: System.Data.OleDb.OleDbEnumerator.GetEnumerator(System.Type)
  id: GetEnumerator(System.Type)
  parent: System.Data.OleDb.OleDbEnumerator
  langs:
  - csharp
  name: GetEnumerator(Type)
  nameWithType: OleDbEnumerator.GetEnumerator(Type)
  fullName: System.Data.OleDb.OleDbEnumerator.GetEnumerator(Type)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "使用特定的 OLE DB 列舉值傳回<xref href=&quot;System.Data.OleDb.OleDbDataReader&quot;></xref>其中包含目前已安裝的 OLE DB 提供者的相關資訊，而不需要的執行個體<xref href=&quot;System.Data.OleDb.OleDbEnumerator&quot;></xref>類別。"
  remarks: "這個方法所傳回的讀取器包含下列資料行，其中包含字串: |資料行序數 |資料行 |描述 |  |--------------------|------------|-----------------|  |&0; |ISOURCESROWSET |原生 OLE DB 資料來源或列舉值的非變異名稱。 |  |&1; |SOURCES_PARSENAME |人類看得懂的名稱，可以使用原生 COM 介面轉換成 moniker **IParseDisplayName**。 對應至原生 OLE DB 來源資料列集所傳回之 SOURCES_PARSENAME 資料行。 |  |&2; |SOURCES_DESCRIPTION |原生 OLE DB 資料來源的描述。 對應至原生 OLE DB 來源資料列集所傳回之 SOURCES_DESCRIPTION 資料行。 |  |&3; |SOURCES_TYPE |下列的列舉成員的其中一個︰ 繫結器 (0)、 DataSource_MDP (1)、 DataSource_TDP (2)、 (3) 的列舉值。 這些會對應至原生 OLE DB 來源資料列集的 SOURCES_TYPE 資料行中傳回的值。 |  |&4; |SOURCES_ISPARENT |適用於只列舉值。 如果`true`，表示項目會套用至相同的列舉值所在**GetSourcesRowset**呼叫，隱含的它也會包含在子列舉型別。 對應至原生 OLE DB 來源資料列集的 SOURCES_ISPARENT 資料行 |      OLE DB 提供數個列舉值元件，包括 MSDAENUM、 MSDASQL 列舉值、 SQLNCLI 列舉值，SQLOLEDB 列舉值，以及其他等等。 如需列舉程式元件和使用方式的詳細資訊，請參閱[OLE DB 程式設計人員參考](http://go.microsoft.com/fwlink/?LinkId=45232)。"
  example:
  - "The following console application uses the MSDAENUM component to retrieve information about all the OLE DB providers and displays the information in the console window.  \n  \n```vb#  \nImports System.Data  \nImports System.Data.OleDb  \n  \nModule Module1  \n  \n  Sub Main()  \n    Dim enumerator As New OleDbEnumerator  \n    Dim reader As OleDbDataReader = _  \n     OleDbEnumerator.GetEnumerator(Type.GetTypeFromProgID(\"MSDAENUM\"))  \n  \n    DisplayData(reader)  \n  \n    Console.WriteLine(\"Press any key to continue.\")  \n    Console.ReadKey()  \n  End Sub  \n  \n  Private Sub DisplayData(ByVal reader As OleDbDataReader)  \n    While reader.Read()  \n      For i As Integer = 0 To reader.FieldCount - 1  \n        Console.WriteLine(\"{0} = {1}\", _  \n         reader.GetName(i), reader.GetValue(i))  \n      Next  \n      Console.WriteLine(\"==================================\")  \n    End While  \n  \n  End Sub  \nEnd Module  \n```  \n  \n```c#  \nusing System;  \nusing System.Data;  \nusing System.Data.OleDb;  \n  \nclass Program  \n{  \n static void Main()  \n {  \n   OleDbDataReader reader =   \n     OleDbEnumerator.GetEnumerator(Type.GetTypeFromProgID(\"MSDAENUM\"));  \n  \n   DisplayData(reader);  \n  \n   Console.WriteLine(\"Press any key to continue.\");  \n   Console.ReadKey();  \n }  \n  \n static void DisplayData(OleDbDataReader reader)  \n {  \n   while (reader.Read())  \n   {  \n     for (int i = 0; i < reader.FieldCount; i++)  \n     {  \n       Console.WriteLine(\"{0} = {1}\",  \n        reader.GetName(i), reader.GetValue(i));  \n     }  \n     Console.WriteLine(\"==================================\");  \n   }  \n }  \n}  \n```"
  syntax:
    content: public static System.Data.OleDb.OleDbDataReader GetEnumerator (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "A <xref:System.Type>.</xref:System.Type>"
    return:
      type: System.Data.OleDb.OleDbDataReader
      description: "傳回<xref href=&quot;System.Data.OleDb.OleDbDataReader&quot;> </xref> ，其中包含要求的 OLE DB 提供者，使用指定的 OLE DB 列舉值的相關資訊。"
  overload: System.Data.OleDb.OleDbEnumerator.GetEnumerator*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "提供者不支援**ISourcesRowset**。"
  - type: System.Data.OleDb.OleDbException
    commentId: T:System.Data.OleDb.OleDbException
    description: "基礎提供者中發生例外狀況。"
  platform:
  - net462
- uid: System.Data.OleDb.OleDbEnumerator.GetRootEnumerator
  id: GetRootEnumerator
  parent: System.Data.OleDb.OleDbEnumerator
  langs:
  - csharp
  name: GetRootEnumerator()
  nameWithType: OleDbEnumerator.GetRootEnumerator()
  fullName: System.Data.OleDb.OleDbEnumerator.GetRootEnumerator()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "傳回<xref href=&quot;System.Data.OleDb.OleDbDataReader&quot;></xref>其中包含目前已安裝的 OLE DB 提供者的相關資訊，而不需要的執行個體<xref href=&quot;System.Data.OleDb.OleDbEnumerator&quot;></xref>類別。"
  remarks: "這個方法所傳回的讀取器包含下列資料行，其中包含字串: |資料行序數 |資料行 |描述 |  |--------------------|------------|-----------------|  |&0; |ISOURCESROWSET |原生 OLEDB 資料來源或列舉值的非變異名稱。 |  |&1; |SOURCES_PARSENAME |人類看得懂的名稱，可以轉換成使用原生 COM 介面 IParseDisplayName moniker。 對應至原生 OLE DB 來源資料列集所傳回之 SOURCES_PARSENAME 資料行。 |  |&2; |SOURCES_DESCRIPTION |原生 OLE DB 資料來源的描述。 對應至原生 OLE DB 來源資料列集所傳回之 SOURCES_DESCRIPTION 資料行。 |  |&3; |SOURCES_TYPE |下列的列舉成員的其中一個︰ 繫結器 (0)、 DataSource_MDP (1)、 DataSource_TDP (2)、 (3) 的列舉值。 這些會對應至原生 OLE DB 來源資料列集的 SOURCES_TYPE 資料行中傳回的值。 |  |&4; |SOURCES_ISPARENT |適用於只列舉值。 如果`true`，表示項目會套用至相同 GetSourcesRowset 已在其呼叫的列舉值，隱含的它也會包含在子列舉型別。 對應至原生 OLE DB 來源資料列集的 SOURCES_ISPARENT 資料行 |  |&5; |SOURCES_CLSID |人們可讀取名稱，可以轉換成使用原生 COM 介面 IParseDisplayName moniker。 對應至原生 OLE DB 來源資料列集所傳回之 SOURCES_CLSID 資料行。 |"
  example:
  - "The following console application retrieves information about all the visible OLE DB providers and displays the information in the console window.  \n  \n```vb#  \nImports System.Data  \nImports System.Data.OleDb  \n  \nModule Module1  \n  \n  Sub Main()  \n    Dim enumerator As New OleDbEnumerator  \n    Dim reader As OleDbDataReader = OleDbEnumerator.GetRootEnumerator()  \n  \n    DisplayData(reader)  \n  \n    Console.WriteLine(\"Press any key to continue.\")  \n    Console.ReadKey()  \n  End Sub  \n  \n  Private Sub DisplayData(ByVal reader As OleDbDataReader)  \n    While reader.Read()  \n      For i As Integer = 0 To reader.FieldCount - 1  \n        Console.WriteLine(\"{0} = {1}\", _  \n         reader.GetName(i), reader.GetValue(i))  \n      Next  \n      Console.WriteLine(\"==================================\")  \n    End While  \n  \n  End Sub  \nEnd Module  \n```  \n  \n```c#  \nusing System;  \nusing System.Data;  \nusing System.Data.OleDb;  \n  \nclass Program  \n{  \n static void Main()  \n {  \n   OleDbDataReader reader = OleDbEnumerator.GetRootEnumerator();  \n  \n   DisplayData(reader);  \n  \n   Console.WriteLine(\"Press any key to continue.\");  \n   Console.ReadKey();  \n }  \n  \n static void DisplayData(OleDbDataReader reader)  \n {  \n   while (reader.Read())  \n   {  \n     for (int i = 0; i < reader.FieldCount; i++)  \n     {  \n       Console.WriteLine(\"{0} = {1}\",  \n        reader.GetName(i), reader.GetValue(i));  \n     }  \n     Console.WriteLine(\"==================================\");  \n   }  \n }  \n}  \n```"
  syntax:
    content: public static System.Data.OleDb.OleDbDataReader GetRootEnumerator ();
    parameters: []
    return:
      type: System.Data.OleDb.OleDbDataReader
      description: "傳回<xref href=&quot;System.Data.OleDb.OleDbDataReader&quot;></xref>包含可見的 OLE DB 提供者的相關資訊。"
  overload: System.Data.OleDb.OleDbEnumerator.GetRootEnumerator*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "提供者不支援 ISourcesRowset。"
  - type: System.Data.OleDb.OleDbException
    commentId: T:System.Data.OleDb.OleDbException
    description: "基礎提供者中發生例外狀況。"
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidCastException
  isExternal: true
  name: System.InvalidCastException
- uid: System.Data.OleDb.OleDbException
  parent: System.Data.OleDb
  isExternal: false
  name: OleDbException
  nameWithType: OleDbException
  fullName: System.Data.OleDb.OleDbException
- uid: System.Data.OleDb.OleDbEnumerator.#ctor
  parent: System.Data.OleDb.OleDbEnumerator
  isExternal: false
  name: OleDbEnumerator()
  nameWithType: OleDbEnumerator.OleDbEnumerator()
  fullName: System.Data.OleDb.OleDbEnumerator.OleDbEnumerator()
- uid: System.Data.OleDb.OleDbEnumerator.GetElements
  parent: System.Data.OleDb.OleDbEnumerator
  isExternal: false
  name: GetElements()
  nameWithType: OleDbEnumerator.GetElements()
  fullName: System.Data.OleDb.OleDbEnumerator.GetElements()
- uid: System.Data.DataTable
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: System.Data.OleDb.OleDbEnumerator.GetEnumerator(System.Type)
  parent: System.Data.OleDb.OleDbEnumerator
  isExternal: false
  name: GetEnumerator(Type)
  nameWithType: OleDbEnumerator.GetEnumerator(Type)
  fullName: System.Data.OleDb.OleDbEnumerator.GetEnumerator(Type)
- uid: System.Data.OleDb.OleDbDataReader
  parent: System.Data.OleDb
  isExternal: false
  name: OleDbDataReader
  nameWithType: OleDbDataReader
  fullName: System.Data.OleDb.OleDbDataReader
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Data.OleDb.OleDbEnumerator.GetRootEnumerator
  parent: System.Data.OleDb.OleDbEnumerator
  isExternal: false
  name: GetRootEnumerator()
  nameWithType: OleDbEnumerator.GetRootEnumerator()
  fullName: System.Data.OleDb.OleDbEnumerator.GetRootEnumerator()
- uid: System.Data.OleDb.OleDbEnumerator.#ctor*
  parent: System.Data.OleDb.OleDbEnumerator
  isExternal: false
  name: OleDbEnumerator
  nameWithType: OleDbEnumerator.OleDbEnumerator
- uid: System.Data.OleDb.OleDbEnumerator.GetElements*
  parent: System.Data.OleDb.OleDbEnumerator
  isExternal: false
  name: GetElements
  nameWithType: OleDbEnumerator.GetElements
- uid: System.Data.OleDb.OleDbEnumerator.GetEnumerator*
  parent: System.Data.OleDb.OleDbEnumerator
  isExternal: false
  name: GetEnumerator
  nameWithType: OleDbEnumerator.GetEnumerator
- uid: System.Data.OleDb.OleDbEnumerator.GetRootEnumerator*
  parent: System.Data.OleDb.OleDbEnumerator
  isExternal: false
  name: GetRootEnumerator
  nameWithType: OleDbEnumerator.GetRootEnumerator
