### YamlMime:ManagedReference
items:
- uid: System.Windows.Input.MouseButtonEventArgs
  id: MouseButtonEventArgs
  children:
  - System.Windows.Input.MouseButtonEventArgs.#ctor(System.Windows.Input.MouseDevice,System.Int32,System.Windows.Input.MouseButton)
  - System.Windows.Input.MouseButtonEventArgs.#ctor(System.Windows.Input.MouseDevice,System.Int32,System.Windows.Input.MouseButton,System.Windows.Input.StylusDevice)
  - System.Windows.Input.MouseButtonEventArgs.ButtonState
  - System.Windows.Input.MouseButtonEventArgs.ChangedButton
  - System.Windows.Input.MouseButtonEventArgs.ClickCount
  - System.Windows.Input.MouseButtonEventArgs.InvokeEventHandler(System.Delegate,System.Object)
  langs:
  - csharp
  name: MouseButtonEventArgs
  nameWithType: MouseButtonEventArgs
  fullName: System.Windows.Input.MouseButtonEventArgs
  type: Class
  summary: "提供資料滑鼠按鍵相關的事件。"
  remarks: "MouseButtonEventArgs 搭配下列事件︰ <xref:System.Windows.Input.Mouse.MouseDown>， <xref:System.Windows.Input.Mouse.MouseUp>， <xref:System.Windows.UIElement.MouseLeftButtonDown>， <xref:System.Windows.UIElement.MouseLeftButtonUp>， <xref:System.Windows.UIElement.MouseRightButtonDown>， <xref:System.Windows.UIElement.MouseRightButtonUp>，而且對應的通道的事件。</xref:System.Windows.UIElement.MouseRightButtonUp> </xref:System.Windows.UIElement.MouseRightButtonDown> </xref:System.Windows.UIElement.MouseLeftButtonUp> </xref:System.Windows.UIElement.MouseLeftButtonDown> </xref:System.Windows.Input.Mouse.MouseUp> </xref:System.Windows.Input.Mouse.MouseDown>       <xref:System.Windows.Input.Mouse>類別會提供額外的屬性和方法來判斷滑鼠的狀態。</xref:System.Windows.Input.Mouse>"
  example:
  - "The following example creates a mouse button event handler that changes the color of the object that raised the event.  The color chosen depends on the mouse button which was pressed.  The <xref:System.Windows.Input.MouseButtonEventArgs.ChangedButton%2A> property is checked to determine which button was pressed.  \n  \n [!code-vb[mousesnippetsample#MouseEventArgsChangedButton](~/add/codesnippet/visualbasic/mousesnippetsample/window1.xaml.vb#mouseeventargschangedbutton)]\n [!code-cs[mousesnippetsample#MouseEventArgsChangedButton](~/add/codesnippet/csharp/MouseSnippetSample/Window1.xaml.cs#mouseeventargschangedbutton)]"
  syntax:
    content: 'public class MouseButtonEventArgs : System.Windows.Input.MouseEventArgs'
  inheritance:
  - System.EventArgs
  - System.Windows.RoutedEventArgs
  - System.Windows.Input.InputEventArgs
  - System.Windows.Input.MouseEventArgs
  implements: []
  inheritedMembers:
  - System.Windows.Input.InputEventArgs.Device
  - System.Windows.Input.InputEventArgs.Timestamp
  - System.Windows.Input.MouseEventArgs.GetPosition(System.Windows.IInputElement)
  - System.Windows.Input.MouseEventArgs.LeftButton
  - System.Windows.Input.MouseEventArgs.MiddleButton
  - System.Windows.Input.MouseEventArgs.MouseDevice
  - System.Windows.Input.MouseEventArgs.RightButton
  - System.Windows.Input.MouseEventArgs.StylusDevice
  - System.Windows.Input.MouseEventArgs.XButton1
  - System.Windows.Input.MouseEventArgs.XButton2
  - System.Windows.RoutedEventArgs.Handled
  - System.Windows.RoutedEventArgs.OnSetSource(System.Object)
  - System.Windows.RoutedEventArgs.OriginalSource
  - System.Windows.RoutedEventArgs.RoutedEvent
  - System.Windows.RoutedEventArgs.Source
  platform:
  - net462
- uid: System.Windows.Input.MouseButtonEventArgs.#ctor(System.Windows.Input.MouseDevice,System.Int32,System.Windows.Input.MouseButton)
  id: '#ctor(System.Windows.Input.MouseDevice,System.Int32,System.Windows.Input.MouseButton)'
  parent: System.Windows.Input.MouseButtonEventArgs
  langs:
  - csharp
  name: MouseButtonEventArgs(MouseDevice,Int32,MouseButton)
  nameWithType: MouseButtonEventArgs.MouseButtonEventArgs(MouseDevice,Int32,MouseButton)
  fullName: System.Windows.Input.MouseButtonEventArgs.MouseButtonEventArgs(MouseDevice,Int32,MouseButton)
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "初始化的新執行個體<xref href=&quot;System.Windows.Input.MouseButtonEventArgs&quot;></xref>使用指定的類別<xref href=&quot;System.Windows.Input.MouseDevice&quot;> </xref>，時間戳記和<xref href=&quot;System.Windows.Input.MouseButton&quot;> </xref>。"
  syntax:
    content: public MouseButtonEventArgs (System.Windows.Input.MouseDevice mouse, int timestamp, System.Windows.Input.MouseButton button);
    parameters:
    - id: mouse
      type: System.Windows.Input.MouseDevice
      description: "與此事件相關聯的邏輯滑鼠裝置。"
    - id: timestamp
      type: System.Int32
      description: "輸入發生的時間。"
    - id: button
      type: System.Windows.Input.MouseButton
      description: "描述其狀態的滑鼠按鈕。"
  overload: System.Windows.Input.MouseButtonEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.MouseButtonEventArgs.#ctor(System.Windows.Input.MouseDevice,System.Int32,System.Windows.Input.MouseButton,System.Windows.Input.StylusDevice)
  id: '#ctor(System.Windows.Input.MouseDevice,System.Int32,System.Windows.Input.MouseButton,System.Windows.Input.StylusDevice)'
  parent: System.Windows.Input.MouseButtonEventArgs
  langs:
  - csharp
  name: MouseButtonEventArgs(MouseDevice,Int32,MouseButton,StylusDevice)
  nameWithType: MouseButtonEventArgs.MouseButtonEventArgs(MouseDevice,Int32,MouseButton,StylusDevice)
  fullName: System.Windows.Input.MouseButtonEventArgs.MouseButtonEventArgs(MouseDevice,Int32,MouseButton,StylusDevice)
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "初始化的新執行個體<xref href=&quot;System.Windows.Input.MouseButtonEventArgs&quot;></xref>使用指定的類別<xref href=&quot;System.Windows.Input.MouseDevice&quot;> </xref>，時間戳記， <xref href=&quot;System.Windows.Input.MouseButton&quot;> </xref>，和<xref href=&quot;System.Windows.Input.StylusDevice&quot;> </xref>。  。"
  syntax:
    content: public MouseButtonEventArgs (System.Windows.Input.MouseDevice mouse, int timestamp, System.Windows.Input.MouseButton button, System.Windows.Input.StylusDevice stylusDevice);
    parameters:
    - id: mouse
      type: System.Windows.Input.MouseDevice
      description: "此事件相關聯的邏輯的滑鼠裝置。"
    - id: timestamp
      type: System.Int32
      description: "發生事件的時間。"
    - id: button
      type: System.Windows.Input.MouseButton
      description: "這個事件與關聯的按鈕。"
    - id: stylusDevice
      type: System.Windows.Input.StylusDevice
      description: "手寫筆裝置與此事件相關聯。"
  overload: System.Windows.Input.MouseButtonEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.MouseButtonEventArgs.ButtonState
  id: ButtonState
  parent: System.Windows.Input.MouseButtonEventArgs
  langs:
  - csharp
  name: ButtonState
  nameWithType: MouseButtonEventArgs.ButtonState
  fullName: System.Windows.Input.MouseButtonEventArgs.ButtonState
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "取得與事件相關聯的按鈕的狀態。"
  remarks: "<xref:System.Windows.Input.Mouse>類別會提供額外的屬性和方法來判斷滑鼠的狀態。</xref:System.Windows.Input.Mouse>"
  example:
  - "The following example creates a mouse button event handler that changes the color of the object that handles the event.  The color that is chosen depends on whether the mouse button was pressed or released.  \n  \n [!code-vb[mousesnippetsample#MouseEventArgsButtonStatePressed](~/add/codesnippet/visualbasic/mousesnippetsample/window1.xaml.vb#mouseeventargsbuttonstatepressed)]\n [!code-cs[mousesnippetsample#MouseEventArgsButtonStatePressed](~/add/codesnippet/csharp/MouseSnippetSample/Window1.xaml.cs#mouseeventargsbuttonstatepressed)]"
  syntax:
    content: public System.Windows.Input.MouseButtonState ButtonState { get; }
    return:
      type: System.Windows.Input.MouseButtonState
      description: "按鍵的狀態內。"
  overload: System.Windows.Input.MouseButtonEventArgs.ButtonState*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.MouseButtonEventArgs.ChangedButton
  id: ChangedButton
  parent: System.Windows.Input.MouseButtonEventArgs
  langs:
  - csharp
  name: ChangedButton
  nameWithType: MouseButtonEventArgs.ChangedButton
  fullName: System.Windows.Input.MouseButtonEventArgs.ChangedButton
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "取得與事件相關聯的按鈕。"
  remarks: "<xref:System.Windows.Input.Mouse>類別會提供額外的屬性和方法來判斷滑鼠的狀態。</xref:System.Windows.Input.Mouse>"
  example:
  - "The following example creates a mouse button event handler that changes the color of an object depending on the mouse button which was pressed.  The ChangedButton property is checked to determine which button was pressed.  \n  \n [!code-vb[mousesnippetsample#MouseEventArgsChangedButton](~/add/codesnippet/visualbasic/mousesnippetsample/window1.xaml.vb#mouseeventargschangedbutton)]\n [!code-cs[mousesnippetsample#MouseEventArgsChangedButton](~/add/codesnippet/csharp/MouseSnippetSample/Window1.xaml.cs#mouseeventargschangedbutton)]"
  syntax:
    content: public System.Windows.Input.MouseButton ChangedButton { get; }
    return:
      type: System.Windows.Input.MouseButton
      description: "已按下按鈕。"
  overload: System.Windows.Input.MouseButtonEventArgs.ChangedButton*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.MouseButtonEventArgs.ClickCount
  id: ClickCount
  parent: System.Windows.Input.MouseButtonEventArgs
  langs:
  - csharp
  name: ClickCount
  nameWithType: MouseButtonEventArgs.ClickCount
  fullName: System.Windows.Input.MouseButtonEventArgs.ClickCount
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "取得已按下按鈕的次數。"
  remarks: "使用一 ClickCount 是判斷是否發生按兩下滑鼠按一下。  某些類別會公開事件按兩下，例如<xref:System.Windows.Controls.Control.MouseDoubleClick>事件<xref:System.Windows.Controls.Control>類別。</xref:System.Windows.Controls.Control> </xref:System.Windows.Controls.Control.MouseDoubleClick> 當按兩下事件未公開在類別上時，按二下可以偵測到使用 ClickCount 屬性上的事件資料。"
  example:
  - "The following example creates a <xref:System.Windows.Input.MouseButtonEventHandler> which determines if a single, double, or triple click occurred.  ClickCount property is used to determine the number of clicks.  \n  \n [!code-vb[mousesnippetsample#MouseClickCountDoubleClick](~/add/codesnippet/visualbasic/mousesnippetsample/window1.xaml.vb#mouseclickcountdoubleclick)]\n [!code-cs[mousesnippetsample#MouseClickCountDoubleClick](~/add/codesnippet/csharp/MouseSnippetSample/Window1.xaml.cs#mouseclickcountdoubleclick)]"
  syntax:
    content: public int ClickCount { get; }
    return:
      type: System.Int32
      description: "已按下滑鼠按鈕的次數。"
  overload: System.Windows.Input.MouseButtonEventArgs.ClickCount*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.MouseButtonEventArgs.InvokeEventHandler(System.Delegate,System.Object)
  id: InvokeEventHandler(System.Delegate,System.Object)
  parent: System.Windows.Input.MouseButtonEventArgs
  langs:
  - csharp
  name: InvokeEventHandler(Delegate,Object)
  nameWithType: MouseButtonEventArgs.InvokeEventHandler(Delegate,Object)
  fullName: System.Windows.Input.MouseButtonEventArgs.InvokeEventHandler(Delegate,Object)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "特定類型的方式，可以增加事件系統的效率，叫用事件處理常式。"
  remarks: "此實作會將泛型處理常式轉換為<xref:System.Windows.Input.MouseEventHandler>然後再叫用它。</xref:System.Windows.Input.MouseEventHandler> 如需這項實作模式及它的理由的詳細資訊，請參閱<xref:System.Windows.RoutedEventArgs.InvokeEventHandler%2A>和[路由傳送事件概觀](~/add/includes/ajax-current-ext-md.md)。</xref:System.Windows.RoutedEventArgs.InvokeEventHandler%2A>"
  syntax:
    content: protected override void InvokeEventHandler (Delegate genericHandler, object genericTarget);
    parameters:
    - id: genericHandler
      type: System.Delegate
      description: "若要以特定類型的方式呼叫泛型處理常式。"
    - id: genericTarget
      type: System.Object
      description: "要呼叫的處理常式上的目標。"
  overload: System.Windows.Input.MouseButtonEventArgs.InvokeEventHandler*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Input.MouseEventArgs
  isExternal: false
  name: System.Windows.Input.MouseEventArgs
- uid: System.Windows.Input.MouseButtonEventArgs.#ctor(System.Windows.Input.MouseDevice,System.Int32,System.Windows.Input.MouseButton)
  parent: System.Windows.Input.MouseButtonEventArgs
  isExternal: false
  name: MouseButtonEventArgs(MouseDevice,Int32,MouseButton)
  nameWithType: MouseButtonEventArgs.MouseButtonEventArgs(MouseDevice,Int32,MouseButton)
  fullName: System.Windows.Input.MouseButtonEventArgs.MouseButtonEventArgs(MouseDevice,Int32,MouseButton)
- uid: System.Windows.Input.MouseDevice
  parent: System.Windows.Input
  isExternal: false
  name: MouseDevice
  nameWithType: MouseDevice
  fullName: System.Windows.Input.MouseDevice
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Input.MouseButton
  parent: System.Windows.Input
  isExternal: false
  name: MouseButton
  nameWithType: MouseButton
  fullName: System.Windows.Input.MouseButton
- uid: System.Windows.Input.MouseButtonEventArgs.#ctor(System.Windows.Input.MouseDevice,System.Int32,System.Windows.Input.MouseButton,System.Windows.Input.StylusDevice)
  parent: System.Windows.Input.MouseButtonEventArgs
  isExternal: false
  name: MouseButtonEventArgs(MouseDevice,Int32,MouseButton,StylusDevice)
  nameWithType: MouseButtonEventArgs.MouseButtonEventArgs(MouseDevice,Int32,MouseButton,StylusDevice)
  fullName: System.Windows.Input.MouseButtonEventArgs.MouseButtonEventArgs(MouseDevice,Int32,MouseButton,StylusDevice)
- uid: System.Windows.Input.StylusDevice
  parent: System.Windows.Input
  isExternal: false
  name: StylusDevice
  nameWithType: StylusDevice
  fullName: System.Windows.Input.StylusDevice
- uid: System.Windows.Input.MouseButtonEventArgs.ButtonState
  parent: System.Windows.Input.MouseButtonEventArgs
  isExternal: false
  name: ButtonState
  nameWithType: MouseButtonEventArgs.ButtonState
  fullName: System.Windows.Input.MouseButtonEventArgs.ButtonState
- uid: System.Windows.Input.MouseButtonState
  parent: System.Windows.Input
  isExternal: false
  name: MouseButtonState
  nameWithType: MouseButtonState
  fullName: System.Windows.Input.MouseButtonState
- uid: System.Windows.Input.MouseButtonEventArgs.ChangedButton
  parent: System.Windows.Input.MouseButtonEventArgs
  isExternal: false
  name: ChangedButton
  nameWithType: MouseButtonEventArgs.ChangedButton
  fullName: System.Windows.Input.MouseButtonEventArgs.ChangedButton
- uid: System.Windows.Input.MouseButtonEventArgs.ClickCount
  parent: System.Windows.Input.MouseButtonEventArgs
  isExternal: false
  name: ClickCount
  nameWithType: MouseButtonEventArgs.ClickCount
  fullName: System.Windows.Input.MouseButtonEventArgs.ClickCount
- uid: System.Windows.Input.MouseButtonEventArgs.InvokeEventHandler(System.Delegate,System.Object)
  parent: System.Windows.Input.MouseButtonEventArgs
  isExternal: false
  name: InvokeEventHandler(Delegate,Object)
  nameWithType: MouseButtonEventArgs.InvokeEventHandler(Delegate,Object)
  fullName: System.Windows.Input.MouseButtonEventArgs.InvokeEventHandler(Delegate,Object)
- uid: System.Delegate
  parent: System
  isExternal: true
  name: Delegate
  nameWithType: Delegate
  fullName: System.Delegate
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Input.MouseButtonEventArgs.#ctor*
  parent: System.Windows.Input.MouseButtonEventArgs
  isExternal: false
  name: MouseButtonEventArgs
  nameWithType: MouseButtonEventArgs.MouseButtonEventArgs
- uid: System.Windows.Input.MouseButtonEventArgs.ButtonState*
  parent: System.Windows.Input.MouseButtonEventArgs
  isExternal: false
  name: ButtonState
  nameWithType: MouseButtonEventArgs.ButtonState
- uid: System.Windows.Input.MouseButtonEventArgs.ChangedButton*
  parent: System.Windows.Input.MouseButtonEventArgs
  isExternal: false
  name: ChangedButton
  nameWithType: MouseButtonEventArgs.ChangedButton
- uid: System.Windows.Input.MouseButtonEventArgs.ClickCount*
  parent: System.Windows.Input.MouseButtonEventArgs
  isExternal: false
  name: ClickCount
  nameWithType: MouseButtonEventArgs.ClickCount
- uid: System.Windows.Input.MouseButtonEventArgs.InvokeEventHandler*
  parent: System.Windows.Input.MouseButtonEventArgs
  isExternal: false
  name: InvokeEventHandler
  nameWithType: MouseButtonEventArgs.InvokeEventHandler
