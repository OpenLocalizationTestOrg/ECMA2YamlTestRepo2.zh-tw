### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.ObjectDataSourceView
  id: ObjectDataSourceView
  children:
  - System.Web.UI.WebControls.ObjectDataSourceView.#ctor(System.Web.UI.WebControls.ObjectDataSource,System.String,System.Web.HttpContext)
  - System.Web.UI.WebControls.ObjectDataSourceView.CanDelete
  - System.Web.UI.WebControls.ObjectDataSourceView.CanInsert
  - System.Web.UI.WebControls.ObjectDataSourceView.CanPage
  - System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount
  - System.Web.UI.WebControls.ObjectDataSourceView.CanSort
  - System.Web.UI.WebControls.ObjectDataSourceView.CanUpdate
  - System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection
  - System.Web.UI.WebControls.ObjectDataSourceView.ConvertNullToDBNull
  - System.Web.UI.WebControls.ObjectDataSourceView.DataObjectTypeName
  - System.Web.UI.WebControls.ObjectDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)
  - System.Web.UI.WebControls.ObjectDataSourceView.Deleted
  - System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod
  - System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters
  - System.Web.UI.WebControls.ObjectDataSourceView.Deleting
  - System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging
  - System.Web.UI.WebControls.ObjectDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)
  - System.Web.UI.WebControls.ObjectDataSourceView.ExecuteInsert(System.Collections.IDictionary)
  - System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)
  - System.Web.UI.WebControls.ObjectDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  - System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression
  - System.Web.UI.WebControls.ObjectDataSourceView.Filtering
  - System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters
  - System.Web.UI.WebControls.ObjectDataSourceView.Insert(System.Collections.IDictionary)
  - System.Web.UI.WebControls.ObjectDataSourceView.Inserted
  - System.Web.UI.WebControls.ObjectDataSourceView.Inserting
  - System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod
  - System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters
  - System.Web.UI.WebControls.ObjectDataSourceView.IsTrackingViewState
  - System.Web.UI.WebControls.ObjectDataSourceView.LoadViewState(System.Object)
  - System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName
  - System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated
  - System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating
  - System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing
  - System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString
  - System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  - System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)
  - System.Web.UI.WebControls.ObjectDataSourceView.OnFiltering(System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs)
  - System.Web.UI.WebControls.ObjectDataSourceView.OnInserted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  - System.Web.UI.WebControls.ObjectDataSourceView.OnInserting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)
  - System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated(System.Web.UI.WebControls.ObjectDataSourceEventArgs)
  - System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating(System.Web.UI.WebControls.ObjectDataSourceEventArgs)
  - System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing(System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs)
  - System.Web.UI.WebControls.ObjectDataSourceView.OnSelected(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  - System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting(System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs)
  - System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  - System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)
  - System.Web.UI.WebControls.ObjectDataSourceView.ParsingCulture
  - System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState
  - System.Web.UI.WebControls.ObjectDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)
  - System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod
  - System.Web.UI.WebControls.ObjectDataSourceView.Selected
  - System.Web.UI.WebControls.ObjectDataSourceView.Selecting
  - System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod
  - System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters
  - System.Web.UI.WebControls.ObjectDataSourceView.SortParameterName
  - System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName
  - System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#TrackViewState
  - System.Web.UI.WebControls.ObjectDataSourceView.TrackViewState
  - System.Web.UI.WebControls.ObjectDataSourceView.TypeName
  - System.Web.UI.WebControls.ObjectDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  - System.Web.UI.WebControls.ObjectDataSourceView.Updated
  - System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod
  - System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters
  - System.Web.UI.WebControls.ObjectDataSourceView.Updating
  langs:
  - csharp
  name: ObjectDataSourceView
  nameWithType: ObjectDataSourceView
  fullName: System.Web.UI.WebControls.ObjectDataSourceView
  type: Class
  summary: "支援<xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;></xref>控制項，並提供執行資料操作與商務和資料物件的資料繫結控制項的介面。"
  remarks: "ObjectDataSourceView 類別主要被為了用於資料繫結控制項，而不是網頁程式碼中的可程式化物件。       ObjectDataSourceView 類別實作的資料功能<xref:System.Web.UI.WebControls.ObjectDataSource>控制，包括<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>， <xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A>， <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A>，和<xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>作業、 排序、 篩選和設定的管理檢視中保留狀態。</xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Web.UI.WebControls.ObjectDataSource>       每個執行個體建立 ObjectDataSourceView 物件<xref:System.Web.UI.WebControls.ObjectDataSource>在執行階段類別。</xref:System.Web.UI.WebControls.ObjectDataSource> 資料作業的執行個體的呼叫<xref:System.Web.UI.WebControls.ObjectDataSource>類別會由 ObjectDataSourceView 物件的執行個體。</xref:System.Web.UI.WebControls.ObjectDataSource> 網頁開發人員不直接存取 ObjectDataSourceView 類別的執行個體。 控制項開發人員可以建立自訂資料控制項擴充<xref:System.Web.UI.WebControls.ObjectDataSource>和 ObjectDataSourceView 類別。</xref:System.Web.UI.WebControls.ObjectDataSource>       ObjectDataSourceView 類別使用反映的商務或資料物件上呼叫方法，以執行資料作業。 在執行階段，<xref:System.Web.UI.WebControls.ObjectDataSource>控制建立類型所識別的執行個體<xref:System.Web.UI.WebControls.ObjectDataSourceView.TypeName%2A>屬性，然後呼叫適當的方法，對於資料作業。</xref:System.Web.UI.WebControls.ObjectDataSourceView.TypeName%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> 具現化的物件不會快取記憶體的 ObjectDataSourceView。 建立物件，並針對每個資料方法呼叫中終結。 如果該方法是`static`(`Shared`在 Visual Basic 中)，不會建立執行個體，但仍會呼叫資料作業方法。       ObjectDataSourceView 並未直接公開網頁開發人員所<xref:System.Web.UI.WebControls.ObjectDataSource>控制項。</xref:System.Web.UI.WebControls.ObjectDataSource> 相反地，透過<xref:System.Web.UI.WebControls.ObjectDataSource>.</xref:System.Web.UI.WebControls.ObjectDataSource>存取的屬性和方法的 ObjectDataSourceView 例如， <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>ObjectDataSourceView 的屬性由設定<xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A><xref:System.Web.UI.WebControls.ObjectDataSource>.</xref:System.Web.UI.WebControls.ObjectDataSource>屬性</xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>設定</xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>      ## 擷取資料的資料來源檢視執行的最基本作業是從基礎資料存放區使用的資料擷取<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>方法，擷取<xref:System.Collections.IEnumerable>資料項目的集合。</xref:System.Collections.IEnumerable> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> 下列資料擷取方法、 屬性和事件 ObjectDataSourceView 物件實作與直接以公開其<xref:System.Web.UI.WebControls.ObjectDataSource>網頁開發人員和其他呼叫端的控制項:-<xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>方法-<xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>屬性-<xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A>屬性- <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting>」 事件-<xref:System.Web.UI.WebControls.ObjectDataSource.Selected>事件 # # 更新資料 ObjectDataSourceView 物件支援的資料更新，藉由呼叫商務或資料物件的方法，由<xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A>屬性。</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.Selected> </xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> </xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> 資料繫結控制項的自動更新，這類執行<xref:System.Web.UI.WebControls.GridView>和<xref:System.Web.UI.WebControls.DetailsView>控制項，將它們的參數中<xref:System.Collections.Specialized.IOrderedDictionary>ObjectDataSourceView 並檢視物件的介面會合併這些參數中所找到的任何參數與<xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A>集合。</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A> </xref:System.Collections.Specialized.IOrderedDictionary> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView>       由 ObjectDataSourceView 實作和公開直接以下列更新方法、 屬性和事件其<xref:System.Web.UI.WebControls.ObjectDataSource>網頁開發人員和其他呼叫端的控制項:-<xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A>方法-<xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A>屬性-<xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A>屬性-<xref:System.Web.UI.WebControls.ObjectDataSource.Updating>事件-<xref:System.Web.UI.WebControls.ObjectDataSource.Updated>事件 # # 插入資料 ObjectDataSourceView 物件支援插入新的資料列，藉由呼叫商務或資料物件的方法，由<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A>屬性。</xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.Updated> </xref:System.Web.UI.WebControls.ObjectDataSource.Updating> </xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> 資料繫結控制項的自動執行，例如插入、<xref:System.Web.UI.WebControls.GridView>和<xref:System.Web.UI.WebControls.DetailsView>，其參數中的傳遞<xref:System.Collections.Specialized.IOrderedDictionary>ObjectDataSourceView 並檢視物件的介面會合併這些參數中所找到的任何參數與<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A>集合。</xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A> </xref:System.Collections.Specialized.IOrderedDictionary> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView>       下列插入方法、 屬性和事件都由 ObjectDataSourceView 實作直接以公開其<xref:System.Web.UI.WebControls.ObjectDataSource>網頁開發人員和其他呼叫端的控制項:-<xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A>方法-<xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>屬性-<xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A>屬性-<xref:System.Web.UI.WebControls.ObjectDataSource.Inserting>事件-<xref:System.Web.UI.WebControls.ObjectDataSource.Inserted>事件 # # 刪除資料 ObjectDataSourceView 物件呼叫由商務或資料物件方法來刪除資料的支援<xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A>屬性。</xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.Inserted> </xref:System.Web.UI.WebControls.ObjectDataSource.Inserting> </xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> 資料繫結控制項的自動執行刪除，例如<xref:System.Web.UI.WebControls.GridView>和<xref:System.Web.UI.WebControls.DetailsView>，其參數中的傳遞<xref:System.Collections.Specialized.IOrderedDictionary>ObjectDataSourceView 並檢視物件的介面會合併這些參數中所找到的任何參數與<xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A>集合。</xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A> </xref:System.Collections.Specialized.IOrderedDictionary> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView> 下列刪除方法、 屬性和事件都由 ObjectDataSourceView 實作直接以公開其<xref:System.Web.UI.WebControls.ObjectDataSource>網頁開發人員和其他呼叫端的控制項:-<xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A>方法-<xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>屬性-<xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A>屬性-<xref:System.Web.UI.WebControls.ObjectDataSource.Deleting>事件-<xref:System.Web.UI.WebControls.ObjectDataSource.Deleted>事件 # # 篩選和排序資料的資料擷取是更為強大時您可以動態篩選的資料。</xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> </xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> </xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> 篩選為僅支援<xref:System.Web.UI.WebControls.ObjectDataSource>控制如果<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>方法會傳回<xref:System.Data.DataTable>或<xref:System.Data.DataSet>物件。</xref:System.Data.DataSet> </xref:System.Data.DataTable> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> 您可以使用<xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A>和<xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A>屬性以套用動態篩選，來擷取資料。</xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A> 這些屬性 ObjectDataSourceView 物件實作，直接以公開其<xref:System.Web.UI.WebControls.ObjectDataSource>控制項資料繫結控制項和其他呼叫端。</xref:System.Web.UI.WebControls.ObjectDataSource>       您可以排序的資料，您使用擷取<xref:System.Web.UI.WebControls.ObjectDataSource>所擷取後，在記憶體中排序資料。</xref:System.Web.UI.WebControls.ObjectDataSource> 支援排序只有<xref:System.Web.UI.WebControls.ObjectDataSource>控制的<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>方法會傳回<xref:System.Data.DataTable>或<xref:System.Data.DataSet>.</xref:System.Data.DataSet> </xref:System.Data.DataTable> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> <xref:System.Web.UI.WebControls.ObjectDataSourceView.CanSort%2A>屬性一律會傳回`true`，因為 ObjectDataSourceView 無法判斷何種類型由<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>方法，而不需要呼叫方法。</xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.CanSort%2A> <xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A>屬性語法是一樣<xref:System.Data.DataView.Sort%2A?displayProperty=fullName>屬性。</xref:System.Data.DataView.Sort%2A?displayProperty=fullName> </xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A>      ## 追蹤檢視狀態 ObjectDataSourceView 實作<xref:System.Web.UI.IStateManager>介面並使用檢視狀態來追蹤其狀態在頁面的要求。</xref:System.Web.UI.IStateManager> 實作<xref:System.Web.UI.WebControls.ObjectDataSourceView.LoadViewState%2A>， <xref:System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState%2A>，和<xref:System.Web.UI.WebControls.ObjectDataSourceView.TrackViewState%2A>方法可供啟用控制項檢視狀態的追蹤。</xref:System.Web.UI.WebControls.ObjectDataSourceView.TrackViewState%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.LoadViewState%2A> 如需詳細資訊，請參閱[ASP.NET 狀態管理概觀](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: 'public class ObjectDataSourceView : System.Web.UI.DataSourceView, System.Web.UI.IStateManager'
  inheritance:
  - System.Object
  - System.Web.UI.DataSourceView
  implements:
  - System.Web.UI.IStateManager
  inheritedMembers:
  - System.Web.UI.DataSourceView.CanExecute(System.String)
  - System.Web.UI.DataSourceView.DataSourceViewChanged
  - System.Web.UI.DataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  - System.Web.UI.DataSourceView.Events
  - System.Web.UI.DataSourceView.ExecuteCommand(System.String,System.Collections.IDictionary,System.Collections.IDictionary)
  - System.Web.UI.DataSourceView.ExecuteCommand(System.String,System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  - System.Web.UI.DataSourceView.Insert(System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  - System.Web.UI.DataSourceView.Name
  - System.Web.UI.DataSourceView.OnDataSourceViewChanged(System.EventArgs)
  - System.Web.UI.DataSourceView.RaiseUnsupportedCapabilityError(System.Web.UI.DataSourceCapabilities)
  - System.Web.UI.DataSourceView.Select(System.Web.UI.DataSourceSelectArguments,System.Web.UI.DataSourceViewSelectCallback)
  - System.Web.UI.DataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.#ctor(System.Web.UI.WebControls.ObjectDataSource,System.String,System.Web.HttpContext)
  id: '#ctor(System.Web.UI.WebControls.ObjectDataSource,System.String,System.Web.HttpContext)'
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: ObjectDataSourceView(ObjectDataSource,String,HttpContext)
  nameWithType: ObjectDataSourceView.ObjectDataSourceView(ObjectDataSource,String,HttpContext)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ObjectDataSourceView(ObjectDataSource,String,HttpContext)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "初始化的新執行個體<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;></xref>類別。"
  remarks: "<xref:System.Web.UI.WebControls.ObjectDataSourceView>建構函式會呼叫<xref:System.Web.UI.WebControls.ObjectDataSource.GetView%2A>方法以傳回具有指定的資料來源檢視的新執行個體`viewName`參數。</xref:System.Web.UI.WebControls.ObjectDataSource.GetView%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView> <xref:System.Web.UI.WebControls.ObjectDataSource>控制項都只有一個相關<xref:System.Web.UI.WebControls.ObjectDataSourceView>在任何時間，並將永遠檢視`DefaultView`，雖然此命名限制會加上<xref:System.Web.UI.WebControls.ObjectDataSource>控制、 不<xref:System.Web.UI.WebControls.ObjectDataSourceView>.</xref:System.Web.UI.WebControls.ObjectDataSourceView> </xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.ObjectDataSourceView> </xref:System.Web.UI.WebControls.ObjectDataSource> 您可以覆寫<xref:System.Web.UI.WebControls.ObjectDataSource.GetView%2A>方法，以支援使用不同的命名慣例的檢視。</xref:System.Web.UI.WebControls.ObjectDataSource.GetView%2A>       <xref:System.Web.HttpContext>所傳遞物件`context`由資料來源檢視來存取參數的物件，例如<xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A>和<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A>屬性。</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A> </xref:System.Web.HttpContext>"
  syntax:
    content: public ObjectDataSourceView (System.Web.UI.WebControls.ObjectDataSource owner, string name, System.Web.HttpContext context);
    parameters:
    - id: owner
      type: System.Web.UI.WebControls.ObjectDataSource
      description: "<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> ， <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref>相關聯。"
    - id: name
      type: System.String
      description: "資料來源檢視中，擁有它的資料來源控制項的範圍內的唯一名稱。"
    - id: context
      type: System.Web.HttpContext
      description: "目前<xref href=&quot;System.Web.HttpContext&quot;> </xref>。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanDelete
  id: CanDelete
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: CanDelete
  nameWithType: ObjectDataSourceView.CanDelete
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.CanDelete
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得值，指出是否<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;></xref>目前相關聯的物件<xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;></xref>控制項支援的刪除作業。"
  remarks: "CanDelete 屬性會傳回`true`，如果<xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A>屬性設定。</xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> 刪除作業仍會失敗，如果所有的資料屬性未設定或未正確設定。"
  syntax:
    content: public override bool CanDelete { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果支援這項作業。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 不支援刪除，如果<xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*>屬性為空字串 (&quot;&quot;)。</xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*>"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.CanDelete*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanInsert
  id: CanInsert
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: CanInsert
  nameWithType: ObjectDataSourceView.CanInsert
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.CanInsert
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得值，指出是否<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;></xref>目前相關聯的物件<xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;></xref>控制項支援插入作業。"
  remarks: "CanInsert 屬性會傳回`true`，如果<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A>屬性設定。</xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> 插入作業仍會失敗，如果所有的資料屬性未設定或未正確設定。"
  syntax:
    content: public override bool CanInsert { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果支援這項作業。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 不支援插入，如果<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*>屬性為空字串。</xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*>"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.CanInsert*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanPage
  id: CanPage
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: CanPage
  nameWithType: ObjectDataSourceView.CanPage
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.CanPage
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得值，指出是否<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;></xref>目前相關聯的物件<xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;></xref>控制項支援所擷取的資料進行分頁。"
  remarks: "CanPage 屬性會指出是否<xref:System.Web.UI.WebControls.ObjectDataSourceView>物件支援分頁。</xref:System.Web.UI.WebControls.ObjectDataSourceView> 如需詳細資訊<xref:System.Web.UI.WebControls.ObjectDataSourceView>，請參閱<xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A>.</xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A></xref:System.Web.UI.WebControls.ObjectDataSourceView>支援分頁"
  syntax:
    content: public override bool CanPage { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging*>值設定為<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging*>"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.CanPage*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount
  id: CanRetrieveTotalRowCount
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: CanRetrieveTotalRowCount
  nameWithType: ObjectDataSourceView.CanRetrieveTotalRowCount
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得值，指出是否<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;></xref>目前相關聯的物件<xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;></xref>控制項支援擷取資料列，除了資料集的總數。"
  remarks: "CanRetrieveTotalRowCount 屬性會傳回`true`，如果<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A>屬性設定。</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A> 方法會傳回計數應該傳回的資料列總數的可以分頁不在頁面中的資料列數目。 資料繫結控制項使用可以分頁來決定如何呈現分頁控制項的資料列的總數。 比方說，多少數字頁面巡覽區按鈕中呈現<xref:System.Web.UI.WebControls.GridView>控制呼叫器。</xref:System.Web.UI.WebControls.GridView> 如需有關分頁支援的詳細資訊，請參閱<xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A>.</xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A>       若要呼叫期間檢查 CanRetrieveTotalRowCount 屬性<xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect%2A>方法，以確保您的資料來源控制項支援所設定的各種要求的所有功能<xref:System.Web.UI.DataSourceSelectArguments>屬性。</xref:System.Web.UI.DataSourceSelectArguments> </xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect%2A>"
  syntax:
    content: public override bool CanRetrieveTotalRowCount { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果支援這項作業。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanSort
  id: CanSort
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: CanSort
  nameWithType: ObjectDataSourceView.CanSort
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.CanSort
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得值，指出是否<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;></xref>目前相關聯的物件<xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;></xref>控制項支援基礎資料來源的排序的檢視。"
  remarks: "因為<xref:System.Web.UI.WebControls.ObjectDataSource>排序資料的支援時<xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>方法會傳回<xref:System.Data.DataSet>， <xref:System.Data.DataView>，或<xref:System.Data.DataTable>物件時，檢視物件無法判斷是否支援排序直到<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>方法呼叫，並傳回。</xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Data.DataTable> </xref:System.Data.DataView> </xref:System.Data.DataSet> </xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> 基於這個理由，CanSort 屬性一律會傳回`true`。"
  syntax:
    content: public override bool CanSort { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.CanSort*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanUpdate
  id: CanUpdate
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: CanUpdate
  nameWithType: ObjectDataSourceView.CanUpdate
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.CanUpdate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得值，指出是否<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;></xref>目前相關聯的物件<xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;></xref>控制項支援更新作業。"
  remarks: "CanUpdate 屬性會傳回`true`，如果<xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A>屬性設定。</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A> 更新作業仍會失敗，如果所有的資料屬性未設定或未正確設定。"
  syntax:
    content: public override bool CanUpdate { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果支援這項作業。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 不支援更新如果<xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*>屬性為空字串 (&quot;&quot;)。</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*>"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.CanUpdate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection
  id: ConflictDetection
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: ConflictDetection
  nameWithType: ObjectDataSourceView.ConflictDetection
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定值，這個值會決定如何<xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;></xref>控制項執行更新和刪除作業的時間期間的基礎資料存放區中的資料列中的資料變更時。"
  remarks: "ConflictDetection 屬性可讓您決定是否要將舊的和新值的參數套用至`Update`方法。 比方說，如果該方法是由指定<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A>屬性會傳回<xref:System.Data.DataTable>物件與資料行`Name`和`Number`，和 ConflictDetection 屬性設定為<xref:System.Web.UI.ConflictOptions>值的建立參數`Name`和`Number`如`Update`方法。</xref:System.Web.UI.ConflictOptions> </xref:System.Data.DataTable> </xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> 如果 ConflictDetection 屬性設定為<xref:System.Web.UI.ConflictOptions>值的名稱建立參數`Name`， `Number`， `original_Name`，和`original_Name`。</xref:System.Web.UI.ConflictOptions> (取決於原始值參數的完整名稱<xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A>。)</xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A><xref:System.Web.UI.WebControls.ObjectDataSourceView>然後會判斷如果的方法，是在指定<xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A>屬性具有相符的參數。</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView>       並行存取控制是資料存放區使用的控制如何讀取和多個用戶端存取和管理相同的資料時，存放區中變更資料的技術。 例如，一個用戶端讀取資料並呈現給使用者，而另一個用戶端讀取相同的資料，並提供給不同的使用者。 如果兩個使用者更新的資料，並送出至資料存放區，無法預料的結果可能會發生，因為兩個用戶端可能會更新為相同的資料不同的值。 這被視為衝突。 ConflictDetection 屬性設定為<xref:System.Web.UI.ConflictOptions>值`Update`方法可以再比較舊的和新值給原始資料來源來偵測衝突，以及處理它們，視。</xref:System.Web.UI.ConflictOptions>       屬性是 ConflictDetection 值儲存在檢視狀態。"
  syntax:
    content: public System.Web.UI.ConflictOptions ConflictDetection { get; set; }
    return:
      type: System.Web.UI.ConflictOptions
      description: "其中一個<xref href=&quot;System.Web.UI.ConflictOptions&quot;></xref>值。 預設值是<xref href=&quot;System.Web.UI.ConflictOptions&quot;></xref>值。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "選取的值不是其中一個<xref href=&quot;System.Web.UI.ConflictOptions&quot;></xref>值。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ConvertNullToDBNull
  id: ConvertNullToDBNull
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: ConvertNullToDBNull
  nameWithType: ObjectDataSourceView.ConvertNullToDBNull
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ConvertNullToDBNull
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定值，指出是否<xref href=&quot;System.Web.UI.WebControls.Parameter&quot;></xref>值傳遞給更新、 插入或刪除作業會自動轉換從<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>至<xref href=&quot;System.DBNull.Value&quot;></xref>值。"
  remarks: "不會將轉換`null`至<xref:System.DBNull.Value?displayProperty=fullName>值會在執行階段發生錯誤。</xref:System.DBNull.Value?displayProperty=fullName> 使用 ConvertNullToDBNull 屬性來表示是否<xref:System.Web.UI.WebControls.Parameter>值傳遞給更新、 插入或刪除作業會自動轉換從`null`至<xref:System.DBNull.Value?displayProperty=fullName>值。</xref:System.DBNull.Value?displayProperty=fullName> </xref:System.Web.UI.WebControls.Parameter> 如需詳細資訊，請參閱<xref:System.Web.UI.WebControls.ObjectDataSource.ConvertNullToDBNull?displayProperty=fullName>.</xref:System.Web.UI.WebControls.ObjectDataSource.ConvertNullToDBNull?displayProperty=fullName>"
  syntax:
    content: public bool ConvertNullToDBNull { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>中<xref href=&quot;System.Web.UI.WebControls.Parameter&quot;></xref>物件傳遞至<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;></xref>自動轉換為<xref href=&quot;System.DBNull.Value&quot;></xref>值; 否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.ConvertNullToDBNull*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.DataObjectTypeName
  id: DataObjectTypeName
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: DataObjectTypeName
  nameWithType: ObjectDataSourceView.DataObjectTypeName
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.DataObjectTypeName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定類別的名稱<xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;></xref>控制項所使用的資料作業中的參數。 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref>控制項使用指定的類別，而不是<xref href=&quot;System.Web.UI.WebControls.Parameter&quot;></xref>各種不同的參數集合中的物件。"
  remarks: "而不是指定數個參數傳遞給`Select`， `Update`， `Insert`，和`Delete`方法，您可以建立數個項目會彙總的一個物件。 這一個物件會傳遞至方法，而不是數個參數。 如需詳細資訊，請參閱<xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName?displayProperty=fullName>.</xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName?displayProperty=fullName>"
  syntax:
    content: public string DataObjectTypeName { get; set; }
    return:
      type: System.String
      description: "識別的物件類型的部分或完整限定的類別名稱， <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref>可用的參數為<> *>， <> </> *>，或<xref:System.Web.UI.WebControls.ObjectDataSource.Delete*>作業。</xref:System.Web.UI.WebControls.ObjectDataSource.Delete*> 預設為空字串 (&quot;&quot;)。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.DataObjectTypeName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)
  id: Delete(System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: Delete(IDictionary,IDictionary)
  nameWithType: ObjectDataSourceView.Delete(IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Delete(IDictionary,IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "呼叫由商務物件方法來執行刪除作業<xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*>使用指定的屬性<code> keys </code>和<code> oldValues </code>集合。</xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*>"
  remarks: "預設值為-1，表示已刪除資料列數目未知。 若要傳回不同的值，設定<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows%2A>屬性<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>物件<xref:System.Web.UI.WebControls.ObjectDataSource.Deleted>事件處理常式。</xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> </xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> </xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows%2A> 受影響的資料列數目通常由`Delete`方法商務物件，而該值是可從<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue%2A>屬性<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>參數<xref:System.Web.UI.WebControls.ObjectDataSource.Deleted>事件處理常式。</xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> </xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> </xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue%2A>       Delete 方法呼叫<xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteDelete%2A>方法，傳遞`keys`和`oldValues`集合。</xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteDelete%2A>"
  syntax:
    content: public int Delete (System.Collections.IDictionary keys, System.Collections.IDictionary oldValues);
    parameters:
    - id: keys
      type: System.Collections.IDictionary
      description: "A<xref:System.Collections.IDictionary>用來識別要刪除的項目索引鍵值。</xref:System.Collections.IDictionary> 使用這些參數與<xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*>屬性來執行刪除作業。</xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*> 如果沒有相關聯的方法沒有參數，傳遞<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
    - id: oldValues
      type: System.Collections.IDictionary
      description: "A<xref:System.Collections.IDictionary>包含額外的非索引鍵值用來比對資料來源中的項目。</xref:System.Collections.IDictionary> 資料列的值會傳遞至方法才<xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection*>屬性設定為<xref href=&quot;System.Web.UI.ConflictOptions&quot;></xref>欄位。</xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection*>"
    return:
      type: System.Int32
      description: "刪除; 的資料列數目否則為-1，如果數目不明。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.Delete*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Deleted
  id: Deleted
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: Deleted
  nameWithType: ObjectDataSourceView.Deleted
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Deleted
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "發生時<xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete*>作業已完成。</xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete*>"
  remarks: "處理刪除事件，檢查傳回值的值和輸出參數，或要判定是否擲回例外狀況之後<xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A>作業已完成。</xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> 傳回值，輸出參數和例外狀況處理屬性都是從<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>與事件相關聯的物件。</xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>       如需處理事件的詳細資訊，請參閱[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。"
  example:
  - "The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.GridView> control to delete data. The <xref:System.Web.UI.WebControls.GridView> initially displays a set of all employees, using the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> property to retrieve the data from the `EmployeeLogic` object. Because the <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> property is set to `true`, the <xref:System.Web.UI.WebControls.GridView> control automatically displays a **Delete** button.  \n  \n If you click the **Delete** button, the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> operation is performed using the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> property and any parameters that are specified in the <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A> collection. In this code example, some preprocessing and post-processing steps are also performed. The `NorthwindEmployeeDeleting` delegate is called to handle the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleting> event before the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> operation is performed, and the `NorthwindEmployeeDeleted` delegate is called to handle the Deleted event after the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> operation has completed, to perform an exception handling. In this example, if a `NorthwindDataException` is thrown, it is handled by this delegate.  \n  \n To examine the implementation of the `EmployeeLogic` middle-tier business object that this code example uses, see <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_10#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_129_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_129_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Deleted;
    return:
      type: System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod
  id: DeleteMethod
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: DeleteMethod
  nameWithType: ObjectDataSourceView.DeleteMethod
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定的方法或函式名稱<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;></xref>刪除資料的物件會叫用。"
  remarks: "DeleteMethod 屬性所識別的方法可以是執行個體方法或`static`(`Shared`在 Visual Basic 中) 方法。 如果是執行個體方法，會建立商務物件，並終結每次呼叫 DeleteMethod 屬性所指定的方法時。 您可以處理<xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated>DeleteMethod 屬性所指定的方法呼叫之前使用商務物件的事件。</xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated> 您也可以處理<xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing>DeleteMethod 屬性所指定的方法呼叫之後，就會引發的事件。</xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing> 如果該方法是`static`(`Shared`在 Visual Basic 中) 方法，不會建立商務物件，而且您無法處理這些事件。       如果商務物件<xref:System.Web.UI.WebControls.ObjectDataSource>控制項搭配實作一個以上的方法或函式具有相同名稱 （方法多載），資料來源控制項嘗試叫用正確的其中一個，根據一組條件，包括中的參數<xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A>集合。</xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> 如果在參數<xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A>集合不相符的 DeleteMethod 方法簽章，資料來源擲回例外狀況。</xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A>       DeleteMethod 屬性的值儲存在檢視狀態。       如需詳細資訊，請參閱<xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>.</xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>"
  example:
  - "The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.GridView> control to delete data. The <xref:System.Web.UI.WebControls.GridView> initially displays a set of all employees, using the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> property to retrieve the data from the `EmployeeLogic` object. Because the <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> property is set to `true`, the <xref:System.Web.UI.WebControls.GridView> control automatically displays a **Delete** button.  \n  \n If you click the **Delete** button, the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> operation is performed using the method that is specified by the DeleteMethod property and any parameters that are specified in the <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A> collection. In this code example, some preprocessing and post-processing steps are also performed. The `NorthwindEmployeeDeleting` delegate is called to handle the <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> event before the <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> operation is performed, and the `NorthwindEmployeeDeleted` delegate is called to handle the <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> event after the <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> operation has completed, to perform an exception handling. In this example, if a `NorthwindDataException` is thrown, it is handled by this delegate.  \n  \n To examine the implementation of the `EmployeeLogic` middle-tier business object that this code example uses, see <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_10#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1099_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1099_1.aspx)]"
  syntax:
    content: public string DeleteMethod { get; set; }
    return:
      type: System.String
      description: "字串，代表方法的名稱，或函式， <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref>使用刪除資料。 預設為空字串 (&quot;&quot;)。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters
  id: DeleteParameters
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: DeleteParameters
  nameWithType: ObjectDataSourceView.DeleteParameters
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得參數集合，其中包含所使用的參數<xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*>方法。</xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*>"
  remarks: "名稱和 DeleteParameters 集合中所包含的參數類型必須符合的名稱和型別之參數所指定的方法中的<xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A>屬性簽章。</xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> 參數名稱會受到<xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A>屬性且區分大小寫。</xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A> 使用提供的參數，例如資料繫結控制項時<xref:System.Web.UI.WebControls.GridView>和<xref:System.Web.UI.WebControls.DetailsView>、<xref:System.Web.UI.WebControls.ObjectDataSource>控制項自動合併使用這些資料繫結控制項所提供的參數集合中已明確指定任何參數。</xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView>       如需詳細資訊，請參閱<xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>.</xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>"
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection DeleteParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.ParameterCollection&quot;> </xref> ，其中包含所指定的方法所使用的參數<xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*>屬性。</xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*>"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Deleting
  id: Deleting
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: Deleting
  nameWithType: ObjectDataSourceView.Deleting
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Deleting
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "發生於之前<xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete*>作業。</xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete*>"
  remarks: "處理刪除事件，以執行額外的初始化作業專屬於您的應用程式，來驗證參數的值，或若要變更參數值之前<xref:System.Web.UI.WebControls.ObjectDataSource>，控制項執行<xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A>作業。</xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> 參數是可做為<xref:System.Collections.IDictionary>所存取的集合<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A>屬性，由<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs>物件。</xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs> </xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> </xref:System.Collections.IDictionary>       如需處理事件的詳細資訊，請參閱[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。"
  example:
  - "The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.GridView> control to delete data. The <xref:System.Web.UI.WebControls.GridView> initially displays a set of all employees, using the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> property to retrieve the data from the `EmployeeLogic` object. Because the <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> property is set to `true`, the <xref:System.Web.UI.WebControls.GridView> control automatically displays a **Delete** button.  \n  \n If you click the **Delete** button, the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> operation is performed using the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> property and any parameters that are specified in the <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A> collection. In this code example, some preprocessing and post-processing steps are also performed. The `NorthwindEmployeeDeleting` delegate is called to handle the Deleting event before the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> operation is performed, and the `NorthwindEmployeeDeleted` delegate is called to handle the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleted> event after the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> operation has completed, to perform an exception handling. In this example, if a `NorthwindDataException` is thrown, it is handled by this delegate.  \n  \n To examine the implementation of the `EmployeeLogic` middle-tier business object that this code example uses, see <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_10#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_88_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_88_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Deleting;
    return:
      type: System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging
  id: EnablePaging
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: EnablePaging
  nameWithType: ObjectDataSourceView.EnablePaging
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定值，指出資料來源控制項是否支援，它會擷取的資料集進行分頁。"
  remarks: "分頁所<xref:System.Web.UI.WebControls.ObjectDataSourceView>控制項由設定 EnablePaging <xref:System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName%2A>， <xref:System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName%2A>，和<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A>屬性<xref:System.Web.UI.WebControls.ObjectDataSourceView>並定義`Select`中使用適當參數的商務物件方法。</xref:System.Web.UI.WebControls.ObjectDataSourceView> </xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView> 當 EnablePaging 屬性設定為`true`、<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A>集合包含兩個額外的參數，要求的第一個資料列和要求的資料列數目。</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A> 這兩個參數的命名方式所定義<xref:System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName%2A>和<xref:System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName%2A>屬性。</xref:System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName%2A> `Select`方法應傳回所要求的指定索引處開始的資料列數目。 因為資料可能不完整地分配依頁面大小，最後一頁可能會包含較少的資料列。 因此，要求的資料列數目是實際上會傳回的資料列的最大數目。       <xref:System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount%2A>呼叫期間檢查屬性<xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect%2A>方法，以確保您的資料來源控制項支援所設定的各種要求的所有功能<xref:System.Web.UI.DataSourceSelectArguments>屬性。</xref:System.Web.UI.DataSourceSelectArguments> </xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount%2A>       資料繫結控制項相關聯的資料繫結控制項上啟用分頁時，呼叫`Select`方法的起始索引和所需的資料列數目。 此外，如果<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A>屬性設定，將資料繫結控制項之前呈現頁面巡覽區控制項，呼叫的方法。</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A> 例如，如果<xref:System.Web.UI.WebControls.GridView>控制項具有分頁已啟用頁面大小為 5，而<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A>方法會傳回 20，只有 4 個頁面都會顯示在頁面巡覽區。</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A> </xref:System.Web.UI.WebControls.GridView>       屬性是 EnablePaging 值儲存在檢視狀態。"
  syntax:
    content: public bool EnablePaging { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果資料來源控制項支援的資料進行分頁它擷取。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)
  id: ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: ExecuteDelete(IDictionary,IDictionary)
  nameWithType: ObjectDataSourceView.ExecuteDelete(IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteDelete(IDictionary,IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "執行 delete 作業使用<xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*>方法，並指定<code> keys </code>和<code> oldValues </code>集合。</xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*>"
  remarks: "<xref:System.Web.UI.WebControls.ObjectDataSourceView>類別會實作繼承的 ExecuteDelete 方法可從使用商務物件的基礎資料存放區刪除資料。</xref:System.Web.UI.WebControls.ObjectDataSourceView> 網頁開發人員和資料繫結控制項作者不 ExecuteDelete 方法會直接呼叫。請改用公開<xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A>方法。</xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A>       執行刪除作業之前，<xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting%2A>呼叫方法來引發<xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleting>事件。</xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleting> </xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting%2A> 您可以處理此事件，以檢查參數的值，並執行任何前置處理之前<xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A>方法呼叫。</xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A>       若要執行刪除作業<xref:System.Web.UI.WebControls.ObjectDataSourceView>使用反映以呼叫的方法，由<xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A>屬性，以及任何相關的參數在`keys`和`oldValues`集合，然後執行它。</xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView> 在作業完成之後，<xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted%2A>呼叫方法來引發<xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleted>事件。</xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleted> </xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted%2A> 您可以處理這個事件來檢查任何傳回值和錯誤碼，並執行任何後續處理。"
  syntax:
    content: protected override int ExecuteDelete (System.Collections.IDictionary keys, System.Collections.IDictionary oldValues);
    parameters:
    - id: keys
      type: System.Collections.IDictionary
      description: "A<xref:System.Collections.IDictionary>參數搭配使用的<xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*>屬性來執行刪除作業。</xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*> </xref:System.Collections.IDictionary> 如果沒有相關聯的方法沒有參數，傳遞<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
    - id: oldValues
      type: System.Collections.IDictionary
      description: "A<xref:System.Collections.IDictionary>才包含的資料列的值會評估<xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection*>屬性設定為<xref href=&quot;System.Web.UI.ConflictOptions&quot;></xref>欄位。</xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection*> </xref:System.Collections.IDictionary>"
    return:
      type: System.Int32
      description: "刪除; 的資料列數目否則為-1，如果數目不明。 如需詳細資訊，請參閱<xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete*>.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete*>"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteDelete*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref:System.Web.UI.WebControls.ObjectDataSourceView.CanDelete*>屬性會傳回<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Web.UI.WebControls.ObjectDataSourceView.CanDelete*>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection*>屬性設定為<xref href=&quot;System.Web.UI.ConflictOptions&quot;></xref>值和沒有值傳入<code> oldValues </code>集合。</xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection*>"
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteInsert(System.Collections.IDictionary)
  id: ExecuteInsert(System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: ExecuteInsert(IDictionary)
  nameWithType: ObjectDataSourceView.ExecuteInsert(IDictionary)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteInsert(IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "呼叫由商務物件方法來執行插入作業<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*>使用指定的屬性<code> values </code>集合。</xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*>"
  remarks: "<xref:System.Web.UI.WebControls.ObjectDataSourceView>類別會實作繼承的 ExecuteInsert 方法將資料插入基礎資料存放區使用的商務物件。</xref:System.Web.UI.WebControls.ObjectDataSourceView> 網頁開發人員和資料繫結控制項作者不 ExecuteInsert 方法會直接呼叫。請改用公開<xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>方法。</xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>       在執行插入 之前，<xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserting%2A>呼叫方法來引發<xref:System.Web.UI.WebControls.ObjectDataSourceView.Inserting>事件。</xref:System.Web.UI.WebControls.ObjectDataSourceView.Inserting> </xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserting%2A> 您可以處理此事件，以檢查參數的值，並執行任何前置處理之前<xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>方法呼叫。</xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>       若要執行插入作業，<xref:System.Web.UI.WebControls.ObjectDataSourceView>控制項使用反映以呼叫的方法，由<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A>屬性，以及任何相關的參數中`values`集合，然後執行它。</xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView> 在作業完成之後，<xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted%2A>呼叫方法來引發<xref:System.Web.UI.WebControls.ObjectDataSourceView.Inserted>事件。</xref:System.Web.UI.WebControls.ObjectDataSourceView.Inserted> </xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted%2A> 您可以處理這個事件來檢查任何傳回值、 錯誤代碼，並執行任何後續處理。       如需有關傳回插入的資料列數目的詳細資訊，請參閱<xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>"
  syntax:
    content: protected override int ExecuteInsert (System.Collections.IDictionary values);
    parameters:
    - id: values
      type: System.Collections.IDictionary
      description: "A<xref:System.Collections.IDictionary>參數搭配使用的<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*>屬性來執行插入作業。</xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*> </xref:System.Collections.IDictionary> 如果沒有相關聯的方法沒有參數，傳遞<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.Int32
      description: "插入; 的資料列數目否則為-1，如果數目不明。 如需詳細資訊，請參閱<xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert*>.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert*>"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteInsert*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref:System.Web.UI.WebControls.ObjectDataSourceView.CanInsert*>屬性會傳回<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Web.UI.WebControls.ObjectDataSourceView.CanInsert*>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>values</code>是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>或空白。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)
  id: ExecuteSelect(System.Web.UI.DataSourceSelectArguments)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: ExecuteSelect(DataSourceSelectArguments)
  nameWithType: ObjectDataSourceView.ExecuteSelect(DataSourceSelectArguments)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect(DataSourceSelectArguments)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "從物件所識別之擷取資料<> *> 屬性呼叫的方法由<> *> 屬性，並傳遞中的任何值<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters*>集合。</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters*>"
  remarks: "<xref:System.Web.UI.WebControls.ObjectDataSourceView>類別會實作繼承的可用方法，來擷取使用商務物件資料。</xref:System.Web.UI.WebControls.ObjectDataSourceView> 網頁開發人員和資料繫結控制項作者不可用方法會直接呼叫。請改用公開<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>方法。</xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>       指定的方法可以有任何方法簽章，但是必須傳回類型的其中一個<xref:System.Web.UI.WebControls.ObjectDataSource>能夠成功呼叫其下表中列出的控制項。</xref:System.Web.UI.WebControls.ObjectDataSource>      |傳回型別 |動作 |  |-----------------|------------|  |<xref:System.Collections.IEnumerable>|<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>方法所傳回<xref:System.Collections.IEnumerable>。 |  |<xref:System.Data.DataTable>|建立使用<xref:System.Data.DataTable>並<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>方法所傳回<xref:System.Data.DataView>。 |  |<xref:System.Data.DataSet>|擷取第一個<xref:System.Data.DataTable><xref:System.Data.DataSet>並建立及<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>方法所傳回<xref:System.Data.DataView>。 |  |<xref:System.Object>|物件是包裝在一個元素<xref:System.Collections.IEnumerable>和<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>方法所傳回。 |      執行資料擷取之前，<xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting%2A>呼叫方法來引發<xref:System.Web.UI.WebControls.ObjectDataSourceView.Selecting>事件。</xref:System.Web.UI.WebControls.ObjectDataSourceView.Selecting> </xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Collections.IEnumerable> </xref:System.Object>  </xref:System.Data.DataView></xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Data.DataSet> </xref:System.Data.DataTable> </xref:System.Data.DataSet>   </xref:System.Data.DataView></xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A></xref:System.Data.DataTable> </xref:System.Data.DataTable>  </xref:System.Collections.IEnumerable></xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Collections.IEnumerable> 您可以處理這個事件來檢查參數的值，並執行作業之前任何前置處理。       若要執行選取的操作，<xref:System.Web.UI.WebControls.ObjectDataSourceView>控制項使用反映以呼叫的方法，由<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A>屬性，以及任何相關的參數中<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A>集合，然後執行它。</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView> 在作業完成之後，<xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelected%2A>呼叫方法來引發<xref:System.Web.UI.WebControls.ObjectDataSourceView.Selected>事件。</xref:System.Web.UI.WebControls.ObjectDataSourceView.Selected> </xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelected%2A> 您可以處理這個事件來檢查任何傳回值和錯誤碼，並執行任何後續處理。       如果<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>方法會傳回<xref:System.Data.DataSet>物件和快取已啟用，<xref:System.Web.UI.WebControls.ObjectDataSourceView>擷取的資料，並在作業期間，將資料儲存至快取。</xref:System.Web.UI.WebControls.ObjectDataSourceView> </xref:System.Data.DataSet> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> 快取，已捨棄，或重新整理會根據建立指定之組合的快取行為<xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A>和<xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A>屬性。</xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A>       如果<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>方法會傳回<xref:System.Data.DataSet>物件和<xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A>指定屬性，它會評估與提供所有<xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A>屬性和結果篩選條件會套用到期間資料清單<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>作業。</xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A> </xref:System.Data.DataSet> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>       傳回選取的資料列數目的資訊，請參閱<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>"
  syntax:
    content: protected override System.Collections.IEnumerable ExecuteSelect (System.Web.UI.DataSourceSelectArguments arguments);
    parameters:
    - id: arguments
      type: System.Web.UI.DataSourceSelectArguments
      description: "A <xref href=&quot;System.Web.UI.DataSourceSelectArguments&quot;> </xref>用來擷取基本的資料以外的資料的要求作業。"
    return:
      type: System.Collections.IEnumerable
      description: "A<xref:System.Collections.IEnumerable>資料列的清單。</xref:System.Collections.IEnumerable>"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "The <code>arguments</code> passed to the ExecuteSelect method specify that the data source should perform some additional work while retrieving data to enable paging or sorting through the retrieved data, but the data source control does not support the requested capability.  \n  \n \\- or -  \n  \n The object returned by the ExecuteSelect method is not a <xref href=\"System.Data.DataSet\"></xref> or <xref href=\"System.Data.DataTable\"></xref>, and caching is enabled. Only <xref href=\"System.Data.DataSet\"></xref> and <xref href=\"System.Data.DataTable\"></xref> objects can be cached for the <xref href=\"System.Web.UI.WebControls.ObjectDataSourceView\"></xref> control.  \n  \n \\- or -  \n  \n Both caching and client impersonation are enabled. The <xref href=\"System.Web.UI.WebControls.ObjectDataSource\"></xref> does not support caching when client impersonation is enabled."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The object returned by the ExecuteSelect method is a <xref href=\"System.Data.DataSet\"></xref>, but has no tables in its <xref:System.Data.DataSet.Tables*> collection.  \n  \n \\- or -  \n  \n The <xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging*> property is set to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, but the <xref:System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName*> and <xref:System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName*> properties are not set."
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  id: ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: ExecuteUpdate(IDictionary,IDictionary,IDictionary)
  nameWithType: ObjectDataSourceView.ExecuteUpdate(IDictionary,IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteUpdate(IDictionary,IDictionary,IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "藉由呼叫的方法，由執行更新作業<xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*>屬性並使用任何參數中提供<code> keys </code>， <code> values </code>，或<code> oldValues </code>集合。</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*>"
  remarks: "<xref:System.Web.UI.WebControls.ObjectDataSourceView>類別會實作繼承的 ExecuteUpdate 方法來更新使用商務物件資料。</xref:System.Web.UI.WebControls.ObjectDataSourceView> 網頁開發人員和資料繫結控制項作者不 ExecuteUpdate 方法會直接呼叫。請改用公開<xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A>方法。</xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A>       中所包含的值`keys`和`values`集合會評估並與包含的任何值合併<xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A>集合。</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A> 如果<xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A>屬性設定為<xref:System.Web.UI.ConflictOptions>值、 值中所包含的`oldValues`集合使用格式化<xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A>屬性且也合併。</xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A> </xref:System.Web.UI.ConflictOptions> </xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A>       在執行更新作業之前，<xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating%2A>呼叫方法來引發<xref:System.Web.UI.WebControls.ObjectDataSourceView.Updating>事件。</xref:System.Web.UI.WebControls.ObjectDataSourceView.Updating> </xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating%2A> 您可以處理這個事件來檢查參數的值，並執行任何前置處理更新之前。 若要執行更新作業，<xref:System.Web.UI.WebControls.ObjectDataSourceView>使用反映以呼叫的方法，由<xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A>屬性，以及任何相關的參數在`keys`集合，然後執行它。</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView> 在作業完成之後，<xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated%2A>呼叫方法來引發<xref:System.Web.UI.WebControls.ObjectDataSourceView.Updated>事件。</xref:System.Web.UI.WebControls.ObjectDataSourceView.Updated> </xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated%2A> 您可以處理這個事件來檢查任何傳回值、 錯誤代碼，並執行任何後續處理。       如需有關傳回更新的資料列數目的詳細資訊，請參閱<xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A>.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A>"
  syntax:
    content: protected override int ExecuteUpdate (System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues);
    parameters:
    - id: keys
      type: System.Collections.IDictionary
      description: "A<xref:System.Collections.IDictionary>搭配使用的主索引鍵<xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*>屬性來執行更新資料庫作業。</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*> </xref:System.Collections.IDictionary> 如果沒有任何與方法相關聯的金鑰，則傳遞<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
    - id: values
      type: System.Collections.IDictionary
      description: "A<xref:System.Collections.IDictionary>的值來搭配<xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*>執行更新的資料庫作業。</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*> </xref:System.Collections.IDictionary> 如果沒有相關聯的方法沒有參數，傳遞<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
    - id: oldValues
      type: System.Collections.IDictionary
      description: "A<xref:System.Collections.IDictionary>表示基礎資料存放區中的原始值。</xref:System.Collections.IDictionary> 如果沒有相關聯的查詢參數，傳遞<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.Int32
      description: "更新; 的資料列數目則為-1，如果數目不明。 如需詳細資訊，請參閱<xref:System.Web.UI.WebControls.ObjectDataSource.Update*>.</xref:System.Web.UI.WebControls.ObjectDataSource.Update*>"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteUpdate*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref:System.Web.UI.WebControls.ObjectDataSourceView.CanInsert*>屬性會傳回<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Web.UI.WebControls.ObjectDataSourceView.CanInsert*>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>oldValues</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> or empty and <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection*> is set to <xref href=&quot;System.Web.UI.ConflictOptions&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression
  id: FilterExpression
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: FilterExpression
  nameWithType: ObjectDataSourceView.FilterExpression
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定商務物件方法時套用的篩選運算式所識別<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod*>屬性稱為。</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod*>"
  remarks: "<xref:System.Web.UI.WebControls.ObjectDataSource>控制項支援篩選的資料時，才<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>方法會傳回<xref:System.Data.DataSet>， <xref:System.Data.DataView>，或<xref:System.Data.DataTable>物件。</xref:System.Data.DataTable> </xref:System.Data.DataView> </xref:System.Data.DataSet> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Web.UI.WebControls.ObjectDataSource>       用於語法<xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>屬性是格式字串樣式的運算式。</xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> 篩選運算式語法是相同的語法可接受的<xref:System.Data.DataView.RowFilter%2A>屬性因為篩選運算式會套用至<xref:System.Data.DataView.RowFilter%2A>屬性<xref:System.Data.DataView>傳回從執行物件<xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>方法。</xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> </xref:System.Data.DataView> </xref:System.Data.DataView.RowFilter%2A> </xref:System.Data.DataView.RowFilter%2A> (如需詳細資訊，請參閱<xref:System.Data.DataColumn.Expression%2A>。)</xref:System.Data.DataColumn.Expression%2A>如果您加入參數，以便<xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A>集合，您可以也包含格式字串的預留位置，例如`&quot;{0}&quot;`，在替換參數值的運算式。</xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> 根據中的參數索引來取代預留位置<xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A>集合。</xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A>       您可以在<xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>.</xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>包含參數 如果參數類型是字串或字元類型，請使用單引號括住參數。 如果參數是數值類型，則不需要引號。<xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A>集合包含的參數，會評估<xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>.</xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>中找到的預留位置</xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A>       FilterExpression 屬性的值儲存在檢視狀態。      > [!IMPORTANT] > 建議您驗證您從用戶端接收任何篩選參數值。 執行階段只會取代篩選條件運算式的參數值並將其以套用<xref:System.Data.DataView>所傳回的物件<xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>方法。</xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> </xref:System.Data.DataView> 如果您使用<xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>屬性作為安全性考量，以限制所傳回的篩選發生之前，您必須驗證的參數值的項目數目。</xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>"
  example:
  - "This section contains two code examples. The first code example demonstrates how to display filtered data using an <xref:System.Web.UI.WebControls.ObjectDataSource> control to retrieve data from a middle-tier business object and a <xref:System.Web.UI.WebControls.GridView> control to display the results. The second code example provides an example of the middle-tier business object that is used in the first code example.  \n  \n The following code example demonstrates how to display filtered data using an <xref:System.Web.UI.WebControls.ObjectDataSource> control to retrieve data from a middle-tier business object and a <xref:System.Web.UI.WebControls.GridView> control to display the results. The <xref:System.Web.UI.WebControls.ObjectDataSource> control can filter data only when the method that retrieves the data retrieves it as a <xref:System.Data.DataSet> object. For this reason, the <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> property identifies a business object method that retrieves data as a <xref:System.Data.DataSet>.  \n  \n The code example consists of a <xref:System.Web.UI.WebControls.TextBox>, a <xref:System.Web.UI.WebControls.GridView> control, the <xref:System.Web.UI.WebControls.ObjectDataSource> control, and a **Submit** button. By default, the <xref:System.Web.UI.WebControls.TextBox> is populated with the name of one of the Northwind Traders employees. The <xref:System.Web.UI.WebControls.GridView> displays information about the employee that is identified by the name in the <xref:System.Web.UI.WebControls.TextBox>. To retrieve data on another employee, in the <xref:System.Web.UI.WebControls.TextBox>, enter the full name of the employee, and then click the **Submit** button.  \n  \n The FilterExpression property specifies an expression that is used to filter the data that is retrieved by the <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> property. It uses parameter placeholders that are evaluated to the parameters that are contained in the <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A> collection. In this example, the parameter placeholder is bounded by single quotation marks because the type of the parameter is a string type that might contain spaces. If the type of the parameter is a numeric or date type, bounding quotation marks are not required.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_9#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1284_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_9#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1284_1.aspx)]  \n  \n The following code example provides an example of a middle-tier business object that the preceding code example uses. The code example consists of two basic classes:  \n  \n-   The `EmployeeLogic` class, which is a class that encapsulates business logic.  \n  \n-   The `NorthwindEmployee` class, which is a model class that contains only the basic functionality that is required to load and persist data from the data tier.  \n  \n For simplicity, the `EmployeeLogic` class creates a static set of data, rather than retrieving the data from a data tier. It is also helpful for this example, because the sample relies on you to provide the full name of a Northwind Traders employee to demonstrate filtering.  \n  \n For a complete working example, you must compile and use these classes with the Web Forms page code examples that are provided.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_9#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1284_2.cs)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_9#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1284_2.vb)]"
  syntax:
    content: public string FilterExpression { get; set; }
    return:
      type: System.String
      description: "字串，代表所識別的商務物件方法擷取資料時套用的篩選運算式<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod*>屬性。</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod*>"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "FilterExpression 屬性已設定和<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select*>方法不會傳回<xref href=&quot;System.Data.DataSet&quot;> </xref>。</xref:System.Web.UI.WebControls.ObjectDataSourceView.Select*>"
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Filtering
  id: Filtering
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: Filtering
  nameWithType: ObjectDataSourceView.Filtering
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Filtering
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "篩選作業之前發生。"
  remarks: "處理<xref:System.Web.UI.WebControls.ObjectDataSource.Filtering>事件以執行驗證作業篩選參數值之前<xref:System.Web.UI.WebControls.ObjectDataSource>控制項執行篩選作業。</xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.ObjectDataSource.Filtering> 您可以取消<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>藉由設定作業<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>屬性<xref:System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs>物件`true`。</xref:System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> 引發事件時，只有當<xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>屬性設定。</xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>       如需處理事件的詳細資訊，請參閱[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。      > [!IMPORTANT] > 則應該先驗證您從用戶端接收任何篩選參數值。 執行階段只會取代篩選條件運算式的參數值並將其以套用<xref:System.Data.DataView>所傳回的物件<xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>方法。</xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> </xref:System.Data.DataView> 如果您使用<xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>屬性作為安全性考量，以限制所傳回的篩選發生之前，您必須驗證的參數值的項目數目。</xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>"
  syntax:
    content: public event System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler Filtering;
    return:
      type: System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters
  id: FilterParameters
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: FilterParameters
  nameWithType: ObjectDataSourceView.FilterParameters
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得與任何參數預留位置中相關聯的參數集合<xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression*>字串。</xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression*>"
  remarks: "<xref:System.Web.UI.WebControls.ObjectDataSource>控制項支援篩選的資料時，才<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>方法會傳回<xref:System.Data.DataSet>， <xref:System.Data.DataTable>，或<xref:System.Data.DataView>物件。</xref:System.Data.DataView> </xref:System.Data.DataTable> </xref:System.Data.DataSet> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Web.UI.WebControls.ObjectDataSource>       放集合中的參數相關聯的任何參數中指定的<xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A>屬性。</xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A> 中所指定的參數預留位置<xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A>時所指定的方法，將會對應到放集合中的參數物件的屬性<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A>屬性稱為。</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A>"
  example:
  - "This section contains two code examples. The first code example demonstrates how to display filtered data using an <xref:System.Web.UI.WebControls.ObjectDataSource> control to retrieve data from a middle-tier business object and a <xref:System.Web.UI.WebControls.GridView> control to display the results. The second code example provides an example of the middle-tier business object that is used in the first code example.  \n  \n The following code example demonstrates how to display filtered data using an <xref:System.Web.UI.WebControls.ObjectDataSource> control to retrieve data from a middle-tier business object and a <xref:System.Web.UI.WebControls.GridView> control to display the results. The <xref:System.Web.UI.WebControls.ObjectDataSource> control can filter data only when the method that retrieves the data retrieves it as a <xref:System.Data.DataSet> object. For this reason, the <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> property identifies a business object method that retrieves data as a <xref:System.Data.DataSet>.  \n  \n The code example consists of a <xref:System.Web.UI.WebControls.TextBox>, a <xref:System.Web.UI.WebControls.GridView> control, the <xref:System.Web.UI.WebControls.ObjectDataSource> control, and a **Submit** button. By default, the <xref:System.Web.UI.WebControls.TextBox> is populated with the name of one of the Northwind Traders employees. The <xref:System.Web.UI.WebControls.GridView> displays information about the employee that is identified by the name in the <xref:System.Web.UI.WebControls.TextBox>. To retrieve data on another employee, in the <xref:System.Web.UI.WebControls.TextBox>, enter the full name of the employee, and then click the **Submit** button.  \n  \n The <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A> property specifies an expression that is used to filter the data that is retrieved by the method specified by the <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> property. It uses parameter placeholders that are evaluated to the parameters that are contained in the FilterParameters collection. In this example, the parameter placeholder is bounded by single quotation marks because the type of the parameter is a string type that might contain spaces. If the type of the parameter is a numeric or date type, bounding quotation marks are not required. The FilterParameters collection contains one parameter, a <xref:System.Web.UI.WebControls.FormParameter> that is bound to the <xref:System.Web.UI.WebControls.TextBox> control.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_9#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1120_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_9#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1120_1.aspx)]  \n  \n The following code example provides an example of a middle-tier business object that the preceding code example uses. The code example consists of two basic classes:  \n  \n-   The `EmployeeLogic` class, which is a class that encapsulates business logic.  \n  \n-   The `NorthwindEmployee` class, which is a model class that contains only the basic functionality that is required to load and persist data from the data tier.  \n  \n For simplicity, the `EmployeeLogic` class creates a static set of data, rather than retrieving the data from a data tier. It is also helpful for this example, because the sample relies on you to provide the full name of a Northwind Traders employee to demonstrate filtering.  \n  \n For a complete working example, you must compile and use these classes with the Web Forms page code examples that are provided.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_9#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1120_2.cs)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_9#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1120_2.vb)]"
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection FilterParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.ParameterCollection&quot;> </xref> ，其中包含關聯中找到的任何參數預留位置的參數集<xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression*>屬性。</xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression*>"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<> </> *> 屬性已設定和<> *> 方法不會傳回<xref href=&quot;System.Data.DataSet&quot;> </xref>。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Insert(System.Collections.IDictionary)
  id: Insert(System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: Insert(IDictionary)
  nameWithType: ObjectDataSourceView.Insert(IDictionary)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Insert(IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "呼叫由商務物件方法來執行插入作業<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*>使用指定的屬性<code> values </code>集合。</xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*>"
  remarks: "預設的傳回值為-1，表示已插入資料列數目未知。 若要傳回不同的值，設定<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows%2A>屬性<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>物件<xref:System.Web.UI.WebControls.ObjectDataSource.Inserted>事件。</xref:System.Web.UI.WebControls.ObjectDataSource.Inserted> </xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> </xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows%2A> 受影響的資料列數目通常由`Insert`方法商務物件，而該值是可從<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue%2A>屬性<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>物件<xref:System.Web.UI.WebControls.ObjectDataSource.Inserted>事件。</xref:System.Web.UI.WebControls.ObjectDataSource.Inserted> </xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> </xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue%2A>       Insert 方法呼叫<xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteInsert%2A>方法，傳遞`values`集合。</xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteInsert%2A>"
  syntax:
    content: public int Insert (System.Collections.IDictionary values);
    parameters:
    - id: values
      type: System.Collections.IDictionary
      description: "A<xref:System.Collections.IDictionary>搭配使用的參數集合<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*>屬性來執行插入作業。</xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*> </xref:System.Collections.IDictionary> 如果沒有相關聯的方法沒有參數，傳遞<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.Int32
      description: "插入; 的資料列數目否則為-1，如果數目不明。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.Insert*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref:System.Web.UI.WebControls.ObjectDataSourceView.CanInsert*>屬性會傳回<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Web.UI.WebControls.ObjectDataSourceView.CanInsert*>"
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Inserted
  id: Inserted
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: Inserted
  nameWithType: ObjectDataSourceView.Inserted
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Inserted
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "發生時<xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert*>作業已完成。</xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert*>"
  remarks: "處理插入事件檢查傳回值的值和輸出參數，或要判定是否擲回例外狀況之後<xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>作業已完成。</xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> 傳回值，輸出參數和例外狀況處理屬性都是從<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>與事件相關聯的物件。</xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>       如需處理事件的詳細資訊，請參閱[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。"
  syntax:
    content: public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Inserted;
    return:
      type: System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Inserting
  id: Inserting
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: Inserting
  nameWithType: ObjectDataSourceView.Inserting
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Inserting
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "發生於之前<xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert*>作業。</xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert*>"
  remarks: "處理插入事件來執行額外的初始化作業專屬於您的應用程式，來驗證參數的值，或若要變更參數值之前<xref:System.Web.UI.WebControls.ObjectDataSource>，控制項執行<xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>作業。</xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> 參數是可做為<xref:System.Collections.IDictionary>所存取的集合<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A>屬性，由<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs>物件。</xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs> </xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> </xref:System.Collections.IDictionary>       如需處理事件的詳細資訊，請參閱[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。"
  example:
  - "This section contains two code examples. The first code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.DetailsView> control to insert data. The second code example provides an example of the middle-tier business object that is used in the first code example.  \n  \n The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.DetailsView> control to insert data. The <xref:System.Web.UI.WebControls.DetailsView> initially displays a new `NorthwindEmployee` record, along with an automatically generated **Insert** button. After you enter data into the fields of the <xref:System.Web.UI.WebControls.DetailsView> control, click the **Insert** button. The <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> property identifies which method performs the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> operation.  \n  \n In this code example, the `UpdateEmployeeInfo` method is used to perform an insert; however it requires a `NorthwindEmployee` parameter to insert the data. For this reason, the collection of strings that the <xref:System.Web.UI.WebControls.DetailsView> control passes automatically is not sufficient. The `NorthwindEmployeeInserting` delegate is an <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler> object that handles the Inserting event and enables you to manipulate the input parameters before the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> operation proceeds. Because the `UpdateEmployeeInfo` method requires a `NorthwindEmployee` object as a parameter, one is created using the collection of strings, and then added to the <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> collection using a parameter name (`ne`) that the method expects. You might perform steps like these when using an existing middle-tier object as a data source with types and methods that are not designed specifically for use with the <xref:System.Web.UI.WebControls.ObjectDataSource> control.  \n  \n When the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> operation is performed, the method that is identified by the <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> property is called. If the `Insert` method of the object has a method signature that includes parameters, the <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A> collection must contain a parameter with names that match the method signature parameters for the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> method to complete successfully.  \n  \n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_4#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_22_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_4#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_22_1.aspx)]  \n  \n The following code example provides an example of a middle-tier business object that the preceding code example uses. The code example consists of two basic classes:  \n  \n-   The `EmployeeLogic` class, which is a stateless class that encapsulates business logic.  \n  \n-   The `NorthwindEmployee` class, which is a model class that contains only the basic functionality that is required to load and persist data from the data tier.  \n  \n An additional `NorthwindDataException` class is provided as a convenience.  \n  \n For a complete working example, you must compile and use these classes. The `UpdateEmployeeInfo` method is not completely implemented, so you will not insert data into the Northwind Traders database when you experiment with this example.  \n  \n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_4#2](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_22_2.vb)]\n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_4#2](~/add/codesnippet/csharp/e-system.web.ui.webcontr_22_2.cs)]"
  syntax:
    content: public event System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Inserting;
    return:
      type: System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod
  id: InsertMethod
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: InsertMethod
  nameWithType: ObjectDataSourceView.InsertMethod
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定的方法或函式名稱<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;></xref>插入資料的物件會叫用。"
  remarks: "InsertMethod 屬性所識別的方法可以是執行個體方法或`static`(`Shared`在 Visual Basic 中) 方法。 如果是執行個體方法，會建立商務物件，並終結每次呼叫 InsertMethod 屬性所指定的方法時。 您可以處理<xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated>InsertMethod 屬性所指定的方法呼叫之前使用商務物件的事件。</xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated> 您也可以處理<xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing>InsertMethod 屬性所指定的方法呼叫之後，就會引發的事件。</xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing> (`Dispose`呼叫時，只有當商務物件會實作<xref:System.IDisposable>介面。)</xref:System.IDisposable>如果該方法是`static`(`Shared`在 Visual Basic 中) 方法，不會建立商務物件，而且您無法處理這些事件。       如果商務物件<xref:System.Web.UI.WebControls.ObjectDataSource>物件實作一個以上的方法或函式具有相同名稱 （方法多載），資料來源控制項嘗試叫用正確的其中一個，根據一組條件，包括中的參數<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A>集合。</xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> 如果在參數<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A>集合不符合的指定 InsertMethod 屬性簽章的方法、 資料來源擲回例外狀況。</xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A>       InsertMethod 屬性的值儲存在檢視狀態。       如需詳細資訊，請參閱<xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>.</xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>"
  example:
  - "This section contains two code examples. The first code example demonstrates how to display filtered data using an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.DetailsView> control to insert data. The second code example provides an example of the middle-tier business object that is used in the first code example.  \n  \n The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.DetailsView> control to insert data. The <xref:System.Web.UI.WebControls.DetailsView> initially displays a new `NorthwindEmployee` record, along with an automatically generated **Insert** button. After you enter data into the fields of the <xref:System.Web.UI.WebControls.DetailsView> control, click the **Insert** button. The InsertMethod property identifies which method performs the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> operation.  \n  \n In this code example, the `UpdateEmployeeInfo` method is used to perform an insert; however, it requires a `NorthwindEmployee` parameter to insert the data. For this reason, the collection of strings that the <xref:System.Web.UI.WebControls.DetailsView> control passes automatically is not sufficient. The `NorthwindEmployeeInserting` delegate is an <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler> object that handles the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Inserting> event and enables you to manipulate the input parameters before the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> operation proceeds. Because the `UpdateEmployeeInfo` method requires a `NorthwindEmployee` object as a parameter, one is created using the collection of strings and is added to the <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> collection using a parameter name (`ne`) that the method expects. You might perform steps like these when using an existing middle-tier object as a data source with types and methods that are not designed specifically for use with the <xref:System.Web.UI.WebControls.ObjectDataSource> control.  \n  \n When the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> operation is performed, the method that is identified by the InsertMethod property is called. If the `Insert` method of the object has a method signature that includes parameters, the <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A> collection must contain a parameter with names that match the method signature parameters for the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> method to complete successfully.  \n  \n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_4#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1176_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_4#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1176_1.aspx)]  \n  \n The following code example provides an example of a middle-tier business object that the previous code example uses. The code example consists of two basic classes and an additional class:  \n  \n-   The `EmployeeLogic` class is a stateless class, which encapsulates business logic.  \n  \n-   The `NorthwindEmployee` class is a model class, which contains only the basic functionality that is required to load and persist data from the data tier.  \n  \n-   An additional `NorthwindDataException` class is provided as a convenience.  \n  \n For a complete working example, you must compile and use these classes. The `UpdateEmployeeInfo` method is not completely implemented, so you will not insert data into the Northwind Traders database when you experiment with this code example.  \n  \n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_4#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1176_2.vb)]\n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_4#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1176_2.cs)]"
  syntax:
    content: public string InsertMethod { get; set; }
    return:
      type: System.String
      description: "字串，代表方法的名稱，或函式， <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref>用於插入資料。 預設值為空字串 (&quot;&quot;)。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters
  id: InsertParameters
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: InsertParameters
  nameWithType: ObjectDataSourceView.InsertParameters
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得參數集合，其中包含所使用的參數<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*>方法。</xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*>"
  remarks: "名稱和 InsertParameters 集合中所包含的參數類型必須符合的名稱和型別之參數所指定的方法中的<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A>屬性簽章。</xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> 使用提供的參數，例如資料繫結控制項時<xref:System.Web.UI.WebControls.GridView>和<xref:System.Web.UI.WebControls.DetailsView>、<xref:System.Web.UI.WebControls.ObjectDataSource>控制項自動合併使用這些資料繫結控制項所提供的參數集合中已明確指定任何參數。</xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView> 如需詳細資訊，請參閱<xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>.</xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>"
  example:
  - "This section contains two code examples. The first code example demonstrates how to display filtered data using an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.DetailsView> control to insert data. The second code example provides an example implementation of the `Insert` method that is used in the first code example.  \n  \n The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.DetailsView> control to insert data. The <xref:System.Web.UI.WebControls.DetailsView> initially displays a new `NorthwindEmployee` record, along with an automatically generated **Insert** button. After you enter data into the fields of the <xref:System.Web.UI.WebControls.DetailsView> control, click the **Insert** button. The <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> property identifies which method performs the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> operation.  \n  \n If you click the **Insert** button, the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> operation is performed using the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> property and any parameters that are specified in the InsertParameters collection. In this code example, one parameter is specified in the InsertParameters collection that corresponds to the supervisor's ID. This is because even though the ID is displayed in the <xref:System.Web.UI.WebControls.DetailsView.Fields%2A> collection for the <xref:System.Web.UI.WebControls.DetailsView> control as a <xref:System.Web.UI.WebControls.BoundField> object, it will be passed as a string to the <xref:System.Web.UI.WebControls.ObjectDataSource> control. By adding it explicitly to the InsertParameters collection with a <xref:System.Web.UI.WebControls.Parameter.Type%2A> property that is set to the <xref:System.TypeCode> value, it will be passed correctly by the <xref:System.Web.UI.WebControls.ObjectDataSource> to the method as an `int`, not as `string`.  \n  \n When the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> operation is performed, the method that is identified by the <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> property is called. If the `Insert` method of the object has a method signature that includes parameters, the InsertParameters collection must contain a parameter with names that match the method signature parameters for the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> to complete successfully.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_8#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_138_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_8#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_138_1.aspx)]  \n  \n The following code example provides an example implementation of the `Insert` method that the preceding code example uses. The `InsertNewEmployeeWrapper` method is added to the `EmployeeLogic` middle-tier object to enable the object to work more easily with the <xref:System.Web.UI.WebControls.ObjectDataSource> control in Web scenarios, without a substantial rewrite to the actual business logic.  \n  \n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_8#3](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_138_2.vb)]\n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_8#3](~/add/codesnippet/csharp/p-system.web.ui.webcontr_138_2.cs)]"
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection InsertParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.ParameterCollection&quot;> </xref> ，其中包含所使用的參數<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*>屬性。</xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*>"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.IsTrackingViewState
  id: IsTrackingViewState
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: IsTrackingViewState
  nameWithType: ObjectDataSourceView.IsTrackingViewState
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.IsTrackingViewState
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得值，指出是否<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;></xref>物件正在儲存變更至其檢視狀態。"
  syntax:
    content: protected bool IsTrackingViewState { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果資料來源檢視標記為儲存其狀態。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.IsTrackingViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.LoadViewState(System.Object)
  id: LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: LoadViewState(Object)
  nameWithType: ObjectDataSourceView.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "還原先前儲存的資料來源檢視的檢視狀態。"
  remarks: "這個方法主要供.NET Framework 基礎結構，並不是直接從您的程式碼使用。  不過，控制項開發人員可以覆寫這個方法，以指定自訂的伺服器控制項如何還原其檢視狀態。 如需詳細資訊，請參閱[ASP.NET 狀態管理概觀](~/add/includes/ajax-current-ext-md.md)。       LoadViewState 方法還原檢視狀態資訊<xref:System.Web.UI.WebControls.ObjectDataSourceView>物件所儲存的先前頁面要求從<xref:System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState%2A>方法。</xref:System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView>"
  syntax:
    content: protected virtual void LoadViewState (object savedState);
    parameters:
    - id: savedState
      type: System.Object
      description: "物件，表示<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;></xref>来還原狀態。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.LoadViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName
  id: MaximumRowsParameterName
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: MaximumRowsParameterName
  nameWithType: ObjectDataSourceView.MaximumRowsParameterName
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定用來表示要擷取的資料來源分頁支援的記錄數目的資料擷取方法的參數名稱。"
  remarks: "MaximumRowsParameterName 屬性用來支援資料來源分頁。 如需詳細資訊，請參閱<xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A>.</xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A>       屬性是 MaximumRowsParameterName 值儲存在檢視狀態。"
  syntax:
    content: public string MaximumRowsParameterName { get; set; }
    return:
      type: System.String
      description: "用來指出要擷取的記錄數目的方法參數的名稱。 預設值是`&quot;maximumRows&quot;`。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated
  id: ObjectCreated
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: ObjectCreated
  nameWithType: ObjectDataSourceView.ObjectCreated
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "之後，就會發生<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;></xref>物件會建立識別類型的執行個體<xref:System.Web.UI.WebControls.ObjectDataSourceView.TypeName*>屬性。</xref:System.Web.UI.WebControls.ObjectDataSourceView.TypeName*>"
  remarks: "處理商務物件，設定屬性上呼叫其他方法，或執行其他特有之前的商務物件的初始化 ObjectCreated 事件<xref:System.Web.UI.WebControls.ObjectDataSource>控制呼叫`Data`商務物件的方法。</xref:System.Web.UI.WebControls.ObjectDataSource> 存取物件的參考<xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A>屬性，由<xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>物件。</xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs> </xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A>       如果識別來執行資料作業的方法是`static`(`Shared`在 Visual Basic 中)，則<xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating>以及永遠不會引發 ObjectCreated 事件。</xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating>"
  syntax:
    content: public event System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler ObjectCreated;
    return:
      type: System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating
  id: ObjectCreating
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: ObjectCreating
  nameWithType: ObjectDataSourceView.ObjectCreating
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "發生於之前<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;></xref>物件會建立識別類型的執行個體<xref:System.Web.UI.WebControls.ObjectDataSourceView.TypeName*>屬性。</xref:System.Web.UI.WebControls.ObjectDataSourceView.TypeName*>"
  remarks: "<xref:System.Web.UI.WebControls.ObjectDataSource>控制項會自動呼叫的商務物件來建立和使用反映它的執行個體的預設建構函式。</xref:System.Web.UI.WebControls.ObjectDataSource> 處理明確地呼叫另一個建構函式，並將結果儲存至物件的執行個體的 ObjectCreating 事件<xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A>屬性相關聯的<xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>物件。</xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs> </xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A>       如需處理事件的詳細資訊，請參閱[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。       如果識別來執行資料作業的方法是`static`(`Shared`在 Visual Basic 中)，ObjectCreating 和<xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated>永遠不會引發事件。</xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated>"
  syntax:
    content: public event System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler ObjectCreating;
    return:
      type: System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing
  id: ObjectDisposing
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: ObjectDisposing
  nameWithType: ObjectDataSourceView.ObjectDisposing
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "發生時<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;></xref>物件就會捨棄它已建立物件的執行個體。"
  remarks: "ObjectDisposing 引發之前的執行個體的商務物件會被捨棄。 如果實作的商務物件<xref:System.IDisposable>介面， <xref:System.IDisposable.Dispose%2A>ObjectDisposing 事件引發之後，呼叫方法。</xref:System.IDisposable.Dispose%2A> </xref:System.IDisposable>       處理 ObjectDisposing 事件物件上呼叫其他方法，並設定屬性，或執行清理之前終結物件的特定物件。 存取物件的參考<xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A>屬性，由<xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>物件。</xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs> </xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A>       如果識別來執行資料作業的方法是`static`(`Shared`在 Visual Basic 中)，ObjectDisposing 會永遠不會引發事件。"
  syntax:
    content: public event System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler ObjectDisposing;
    return:
      type: System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString
  id: OldValuesParameterFormatString
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: OldValuesParameterFormatString
  nameWithType: ObjectDataSourceView.OldValuesParameterFormatString
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定要套用至傳遞給的原始值的參數名稱的格式字串<xref uid=&quot;langword_csharp_Delete&quot; name=&quot;Delete&quot; href=&quot;&quot;></xref>或<xref uid=&quot;langword_csharp_Update&quot; name=&quot;Update&quot; href=&quot;&quot;></xref>方法。"
  remarks: "參數格式字串套用至主索引鍵，例如識別與`DataKeyNames`或 delete 中的資料繫結控制項的屬性，並更新案例中，其中<xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A>屬性設定為<xref:System.Web.UI.ConflictOptions>值和一組會傳遞至相對應的資料方法的原始值。</xref:System.Web.UI.ConflictOptions> </xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A>       您可能會在此變更的參數屬性的兩個常見的案例如下:-若要在區別在更新舊的和新值。 當<xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A>屬性設定為<xref:System.Web.UI.ConflictOptions>值參數的原始和新的值都會加入<xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A>集合。</xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> </xref:System.Web.UI.ConflictOptions> </xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A> 而格式化的字串，不會為每個資料欄位建立具有相同名稱的兩個參數。 藉由變更原始值參數的名稱，您可以比較原始資料來源偵測衝突，並比較索引鍵值的資料。      -有些視覺化設計工具會實作特定的命名配置，針對原始值和索引鍵。       參數的值會儲存檢視狀態中。"
  syntax:
    content: public string OldValuesParameterFormatString { get; set; }
    return:
      type: System.String
      description: "字串，表示格式字串套用至任何名稱<code> oldValues </code>傳遞至<> *> 或<> *> 方法。 預設為&quot;{0}&quot;，這表示參數名稱就是欄位名稱。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  id: OnDeleted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: OnDeleted(ObjectDataSourceStatusEventArgs)
  nameWithType: ObjectDataSourceView.OnDeleted(ObjectDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted(ObjectDataSourceStatusEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引發<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView.Deleted&quot;></xref>事件之後的<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;></xref>物件已完成刪除作業。"
  remarks: "引發事件會透過委派事件處理常式叫用。 如需詳細資訊，請參閱[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。       OnDeleted 方法也允許衍生的類別處理事件，而不用附加委派。 這是處理衍生類別中的事件的慣用的技巧。"
  example:
  - "The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.GridView> control to delete data. The <xref:System.Web.UI.WebControls.GridView> initially displays a set of all employees, using the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> property to retrieve the data from the `EmployeeLogic` object. Because the <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> property is set to `true`, the <xref:System.Web.UI.WebControls.GridView> control automatically displays a **Delete** button.  \n  \n If you click the **Delete** button, the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> operation is performed using the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> property and any parameters that are specified in the <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A> collection. In this code example, some preprocessing and post-processing steps are also performed. The `NorthwindEmployeeDeleting` delegate is called to handle the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleting> event before the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> operation is performed, and the `NorthwindEmployeeDeleted` delegate is called to handle the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleted> event after the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> operation has completed, to perform an exception handling. In this example, if a `NorthwindDataException` is thrown, it is handled by this delegate.  \n  \n To examine the implementation of the `EmployeeLogic` middle-tier business object that this code example uses, see <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_10#1](~/add/codesnippet/csharp/bc34632f-3713-4841-acd5-_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/add/codesnippet/visualbasic/bc34632f-3713-4841-acd5-_1.aspx)]"
  syntax:
    content: protected virtual void OnDeleted (System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs
      description: "<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs&quot;> </xref>包含事件資料。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)
  id: OnDeleting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: OnDeleting(ObjectDataSourceMethodEventArgs)
  nameWithType: ObjectDataSourceView.OnDeleting(ObjectDataSourceMethodEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting(ObjectDataSourceMethodEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引發<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView.Deleting&quot;></xref>事件之前<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;></xref>物件嘗試刪除的作業。"
  remarks: "引發事件會透過委派事件處理常式叫用。 如需詳細資訊，請參閱[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。       OnDeleting 方法也允許衍生的類別處理事件，而不用附加委派。 這是處理衍生類別中的事件的慣用的技巧。"
  example:
  - "The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.GridView> control to delete data. The <xref:System.Web.UI.WebControls.GridView> initially displays a set of all employees, using the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> property to retrieve the data from the `EmployeeLogic` object. Because the <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> property is set to `true`, the <xref:System.Web.UI.WebControls.GridView> control automatically displays a **Delete** button.  \n  \n If you click the **Delete** button, the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> operation is performed using the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> property and any parameters that are specified in the <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A> collection. In this code example, some preprocessing and post-processing steps are also performed. The `NorthwindEmployeeDeleting` delegate is called to handle the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleting> event before the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> operation is performed, and the `NorthwindEmployeeDeleted` delegate is called to handle the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleted> event after the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> operation has completed, to perform an exception handling. In this example, if a `NorthwindDataException` is thrown, it is handled by this delegate.  \n  \n To examine the implementation of the `EmployeeLogic` middle-tier business object that this code example uses, see <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_10#1](~/add/codesnippet/csharp/6b2992c6-c81b-455e-8607-_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/add/codesnippet/visualbasic/6b2992c6-c81b-455e-8607-_1.aspx)]"
  syntax:
    content: protected virtual void OnDeleting (System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs
      description: "<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs&quot;> </xref>包含事件資料。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnFiltering(System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs)
  id: OnFiltering(System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: OnFiltering(ObjectDataSourceFilteringEventArgs)
  nameWithType: ObjectDataSourceView.OnFiltering(ObjectDataSourceFilteringEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnFiltering(ObjectDataSourceFilteringEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引發<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView.Filtering&quot;></xref>事件之前<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;></xref>物件企圖篩選作業。"
  remarks: "引發事件會透過委派事件處理常式叫用。 如需詳細資訊，請參閱[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。       OnFiltering 方法也允許衍生的類別處理事件，而不用附加委派。 這是處理衍生類別中的事件的慣用的技巧。"
  syntax:
    content: protected virtual void OnFiltering (System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs
      description: "<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs&quot;> </xref>包含事件資料。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.OnFiltering*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnInserted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  id: OnInserted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: OnInserted(ObjectDataSourceStatusEventArgs)
  nameWithType: ObjectDataSourceView.OnInserted(ObjectDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnInserted(ObjectDataSourceStatusEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引發<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView.Inserted&quot;></xref>事件之後的<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;></xref>物件已完成插入作業。"
  remarks: "引發事件會透過委派事件處理常式叫用。 如需詳細資訊，請參閱[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。       OnInserted 方法也允許衍生的類別處理事件，而不用附加委派。 這是處理衍生類別中的事件的慣用的技巧。"
  syntax:
    content: protected virtual void OnInserted (System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs
      description: "<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs&quot;> </xref>包含事件資料。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.OnInserted*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnInserting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)
  id: OnInserting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: OnInserting(ObjectDataSourceMethodEventArgs)
  nameWithType: ObjectDataSourceView.OnInserting(ObjectDataSourceMethodEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnInserting(ObjectDataSourceMethodEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引發<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView.Inserting&quot;></xref>事件之前<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;></xref>物件嘗試插入作業。"
  remarks: "<xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating%2A>呼叫方法時，只有識別來執行資料作業的方法不是`static`(`Shared`在 Visual Basic 中)。</xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating%2A>       引發事件會透過委派事件處理常式叫用。 如需詳細資訊，請參閱[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。       OnInserting 方法也允許衍生的類別處理事件，而不用附加委派。 這是處理衍生類別中的事件的慣用的技巧。"
  syntax:
    content: protected virtual void OnInserting (System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs
      description: "<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs&quot;> </xref>包含事件資料。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.OnInserting*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated(System.Web.UI.WebControls.ObjectDataSourceEventArgs)
  id: OnObjectCreated(System.Web.UI.WebControls.ObjectDataSourceEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: OnObjectCreated(ObjectDataSourceEventArgs)
  nameWithType: ObjectDataSourceView.OnObjectCreated(ObjectDataSourceEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated(ObjectDataSourceEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引發<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated&quot;></xref>事件之後的<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;></xref>建立物件所識別的執行個體<xref:System.Web.UI.WebControls.ObjectDataSourceView.TypeName*>屬性。</xref:System.Web.UI.WebControls.ObjectDataSourceView.TypeName*>"
  remarks: "呼叫 OnObjectCreated 方法時，只有識別來執行資料作業的方法不是`static`(`Shared`在 Visual Basic 中)。       引發事件會透過委派事件處理常式叫用。 如需詳細資訊，請參閱<xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating>.</xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating>       OnObjectCreated 方法也允許衍生的類別處理事件，而不用附加委派。 這是處理衍生類別中的事件的慣用的技巧。"
  syntax:
    content: protected virtual void OnObjectCreated (System.Web.UI.WebControls.ObjectDataSourceEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.ObjectDataSourceEventArgs
      description: "<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceEventArgs&quot;> </xref>包含事件資料。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating(System.Web.UI.WebControls.ObjectDataSourceEventArgs)
  id: OnObjectCreating(System.Web.UI.WebControls.ObjectDataSourceEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: OnObjectCreating(ObjectDataSourceEventArgs)
  nameWithType: ObjectDataSourceView.OnObjectCreating(ObjectDataSourceEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating(ObjectDataSourceEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引發<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating&quot;></xref>事件之前<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;></xref>物件建立商務物件來執行資料作業的執行個體。"
  remarks: "引發事件會透過委派事件處理常式叫用。 如需詳細資訊，請參閱[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。       OnObjectCreating 方法也允許衍生的類別處理事件，而不用附加委派。 這是處理衍生類別中的事件的慣用的技巧。"
  syntax:
    content: protected virtual void OnObjectCreating (System.Web.UI.WebControls.ObjectDataSourceEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.ObjectDataSourceEventArgs
      description: "<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceEventArgs&quot;> </xref>包含事件資料。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing(System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs)
  id: OnObjectDisposing(System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: OnObjectDisposing(ObjectDataSourceDisposingEventArgs)
  nameWithType: ObjectDataSourceView.OnObjectDisposing(ObjectDataSourceDisposingEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing(ObjectDataSourceDisposingEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引發<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing&quot;></xref>事件之前<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;></xref>物件就會捨棄具現化的類型。"
  remarks: "捨棄的物件已建立用來執行資料作業的執行個體時，會呼叫 OnObjectDisposing。 `Dispose`呼叫方法時，只有當所識別的型別<xref:System.Web.UI.WebControls.ObjectDataSourceView.TypeName%2A>屬性實作<xref:System.IDisposable>介面。</xref:System.IDisposable> </xref:System.Web.UI.WebControls.ObjectDataSourceView.TypeName%2A>       引發事件會透過委派事件處理常式叫用。 如需詳細資訊，請參閱[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。       OnObjectDisposing 方法也允許衍生的類別處理事件，而不用附加委派。 這是處理衍生類別中的事件的慣用的技巧。"
  syntax:
    content: protected virtual void OnObjectDisposing (System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs
      description: "<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs&quot;> </xref>包含事件資料。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnSelected(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  id: OnSelected(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: OnSelected(ObjectDataSourceStatusEventArgs)
  nameWithType: ObjectDataSourceView.OnSelected(ObjectDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnSelected(ObjectDataSourceStatusEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引發<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView.Selected&quot;></xref>事件之後的<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;></xref>物件已完成資料擷取作業。"
  remarks: "引發事件會透過委派事件處理常式叫用。 如需詳細資訊，請參閱[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。       OnSelected 方法也允許衍生的類別處理事件，而不用附加委派。 這是處理衍生類別中的事件的慣用的技巧。"
  syntax:
    content: protected virtual void OnSelected (System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs
      description: "<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs&quot;> </xref>包含事件資料。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.OnSelected*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting(System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs)
  id: OnSelecting(System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: OnSelecting(ObjectDataSourceSelectingEventArgs)
  nameWithType: ObjectDataSourceView.OnSelecting(ObjectDataSourceSelectingEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting(ObjectDataSourceSelectingEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引發<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView.Selecting&quot;></xref>事件之前<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;></xref>物件企圖資料擷取作業。"
  remarks: "引發事件會透過委派事件處理常式叫用。 如需詳細資訊，請參閱[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。       OnSelecting 方法也允許衍生的類別處理事件，而不用附加委派。 這是處理衍生類別中的事件的慣用的技巧。"
  syntax:
    content: protected virtual void OnSelecting (System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs
      description: "<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs&quot;> </xref>包含事件資料。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  id: OnUpdated(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: OnUpdated(ObjectDataSourceStatusEventArgs)
  nameWithType: ObjectDataSourceView.OnUpdated(ObjectDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated(ObjectDataSourceStatusEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引發<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView.Updated&quot;></xref>事件之後的<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;></xref>物件已完成更新作業。"
  remarks: "引發事件會透過委派事件處理常式叫用。 如需詳細資訊，請參閱[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。       OnUpdated 方法也允許衍生的類別處理事件，而不用附加委派。 這是處理衍生類別中的事件的慣用的技巧。"
  syntax:
    content: protected virtual void OnUpdated (System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs
      description: "<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs&quot;> </xref>包含事件資料。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)
  id: OnUpdating(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: OnUpdating(ObjectDataSourceMethodEventArgs)
  nameWithType: ObjectDataSourceView.OnUpdating(ObjectDataSourceMethodEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating(ObjectDataSourceMethodEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引發<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView.Updating&quot;></xref>事件之前<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;></xref>物件嘗試更新作業。"
  remarks: "引發事件會透過委派事件處理常式叫用。 如需詳細資訊，請參閱[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。       OnUpdating 方法也允許衍生的類別處理事件，而不用附加委派。 這是處理衍生類別中的事件的慣用的技巧。"
  example:
  - "The following code example demonstrates how to use a <xref:System.Web.UI.WebControls.DropDownList> control, <xref:System.Web.UI.WebControls.TextBox> controls, and several <xref:System.Web.UI.WebControls.ObjectDataSource> controls to update data. The <xref:System.Web.UI.WebControls.DropDownList> displays the name of a `NorthwindEmployee`, while the <xref:System.Web.UI.WebControls.TextBox> controls are used to enter and update address information. Because the <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A> collection contains a <xref:System.Web.UI.WebControls.ControlParameter> object that is bound to the selected value of the <xref:System.Web.UI.WebControls.DropDownList>, the button that triggers the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A> operation is enabled only after an employee is selected.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_13#1](~/add/codesnippet/csharp/5e0e1dac-16d8-4af3-b004-_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_13#1](~/add/codesnippet/visualbasic/5e0e1dac-16d8-4af3-b004-_1.aspx)]"
  syntax:
    content: protected virtual void OnUpdating (System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs
      description: "<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs&quot;> </xref>包含事件資料。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ParsingCulture
  id: ParsingCulture
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: ParsingCulture
  nameWithType: ObjectDataSourceView.ParsingCulture
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ParsingCulture
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定值，表示何種文化特性資訊時使用字串值轉換為實際屬性型別，才能建構類型的物件表示<xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName*>。</xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName*>"
  syntax:
    content: public System.Web.UI.WebControls.ParsingCulture ParsingCulture { get; set; }
    return:
      type: System.Web.UI.WebControls.ParsingCulture
      description: "文化特性資訊。 預設值是<xref href=&quot;System.Web.UI.WebControls.ParsingCulture&quot;> </xref>。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.ParsingCulture*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState
  id: SaveViewState
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: SaveViewState()
  nameWithType: ObjectDataSourceView.SaveViewState()
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "將變更儲存至檢視狀態的<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;></xref>自頁面回傳至伺服器時的時間後的物件。"
  remarks: "SaveViewState 方法主要是由控制項開發人員使用。       檢視狀態是伺服器控制項的屬性值的累積。 這些值會自動放入<xref:System.Web.UI.Control.ViewState%2A>伺服器控制項，這是<xref:System.Web.UI.StateBag>類別</xref:System.Web.UI.StateBag>的執行個體的屬性</xref:System.Web.UI.Control.ViewState%2A> <xref:System.Web.UI.Control.ViewState%2A>值然後之後的伺服器控制項存留期的儲存狀態階段保存到字串物件。</xref:System.Web.UI.Control.ViewState%2A>       檢視狀態內容儲存檢視狀態時，會為儲存在 HTML 中的變數傳回給用戶端`Hidden`項目。 當您撰寫自訂的伺服器控制項時，您可以改善效率 SaveViewState 方法覆寫並修改`ViewState`伺服器控制項屬性。 如需詳細資訊，請參閱[ASP.NET 狀態管理概觀](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: protected virtual object SaveViewState ();
    parameters: []
    return:
      type: System.Object
      description: "物件，其中包含所做的變更<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;></xref>檢視狀態; <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>，如果沒有與物件相關聯的檢視狀態。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)
  id: Select(System.Web.UI.DataSourceSelectArguments)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: Select(DataSourceSelectArguments)
  nameWithType: ObjectDataSourceView.Select(DataSourceSelectArguments)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Select(DataSourceSelectArguments)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "從物件所識別之擷取資料<> *> 屬性呼叫的方法由<> *> 屬性，並傳遞中的任何值<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters*>集合。</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters*>"
  remarks: "Select 方法呼叫<xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect%2A>傳遞`arguments`參數。</xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect%2A>"
  syntax:
    content: public System.Collections.IEnumerable Select (System.Web.UI.DataSourceSelectArguments arguments);
    parameters:
    - id: arguments
      type: System.Web.UI.DataSourceSelectArguments
      description: "A <xref href=&quot;System.Web.UI.DataSourceSelectArguments&quot;> </xref>用來擷取基本的資料以外的資料的要求作業。"
    return:
      type: System.Collections.IEnumerable
      description: "<xref:System.Collections.IEnumerable>資料列的清單。</xref:System.Collections.IEnumerable> 如需詳細資訊，請參閱<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod*>.</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod*>"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.Select*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code> arguments </code>傳遞至 Select 方法會指定資料來源應該執行一些額外的工作，在擷取資料，以啟用分頁，或透過擷取的資料，排序時，但是資料來源控制項不支援要求的功能。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod
  id: SelectCountMethod
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: SelectCountMethod
  nameWithType: ObjectDataSourceView.SelectCountMethod
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定的方法或函式名稱<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;></xref>控制項叫用以擷取資料列計數。"
  remarks: "SelectCountMethod 識別用來擷取總計資料列計數，以支援資料來源分頁的商務物件方法。 評估 SelectCountMethod 屬性時，只有當<xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A>屬性設定為`true`。</xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A> 如需詳細資訊<xref:System.Web.UI.WebControls.ObjectDataSourceView>，請參閱<xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A>.</xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A></xref:System.Web.UI.WebControls.ObjectDataSourceView>支援分頁       屬性是 SelectCountMethod 值儲存在檢視狀態。"
  syntax:
    content: public string SelectCountMethod { get; set; }
    return:
      type: System.String
      description: "字串，代表方法的名稱，或函式， <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref>使用擷取資料列計數。 預設為空字串 (&quot;&quot;)。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Selected
  id: Selected
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: Selected
  nameWithType: ObjectDataSourceView.Selected
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Selected
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "資料擷取作業完成時發生。"
  remarks: "處理選取事件，檢查傳回值的值和輸出參數，或判斷是否在資料擷取作業完成後，已擲回例外狀況。 傳回值，輸出參數和例外狀況處理屬性都是從<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>與事件相關聯的物件。</xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>       如需處理事件的詳細資訊，請參閱[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。"
  syntax:
    content: public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Selected;
    return:
      type: System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Selecting
  id: Selecting
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: Selecting
  nameWithType: ObjectDataSourceView.Selecting
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Selecting
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "資料擷取作業之前發生。"
  remarks: "處理執行額外的初始化作業專屬於您的應用程式，來驗證參數的值在 Selecting 事件或變更參數值之前<xref:System.Web.UI.WebControls.ObjectDataSource>控制項執行資料擷取作業。</xref:System.Web.UI.WebControls.ObjectDataSource> 參數是可做為<xref:System.Collections.IDictionary>所存取的集合<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A>屬性，由<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs>物件。</xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs> </xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> </xref:System.Collections.IDictionary>       如需處理事件的詳細資訊，請參閱[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。"
  syntax:
    content: public event System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler Selecting;
    return:
      type: System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod
  id: SelectMethod
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: SelectMethod
  nameWithType: ObjectDataSourceView.SelectMethod
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定的方法或函式名稱<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;></xref>叫用以擷取資料的控制項。"
  remarks: "指定的方法可以有任何方法簽章，但是必須傳回順序<xref:System.Web.UI.WebControls.ObjectDataSource>控制項下表所列的類型，能夠成功呼叫它的其中一個 |傳回型別 |動作 |  |-----------------|------------|  |<xref:System.Collections.IEnumerable>|<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>方法所傳回<xref:System.Collections.IEnumerable>。 |  |<xref:System.Data.DataTable>|建立使用<xref:System.Data.DataTable>並<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>方法所傳回<xref:System.Data.DataView>。 |  |<xref:System.Data.DataSet>|擷取第一個<xref:System.Data.DataTable><xref:System.Data.DataSet>並建立及<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>方法所傳回<xref:System.Data.DataView>。 |  |<xref:System.Object>|物件是包裝在一個元素<xref:System.Collections.IEnumerable>和<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>方法所傳回。 |      SelectMethod 屬性所識別的方法可以是執行個體方法或`static`(`Shared`在 Visual Basic 中) 方法。</xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Collections.IEnumerable> </xref:System.Object>  </xref:System.Data.DataView></xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Data.DataSet> </xref:System.Data.DataTable> </xref:System.Data.DataSet>   </xref:System.Data.DataView></xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A></xref:System.Data.DataTable> </xref:System.Data.DataTable>  </xref:System.Collections.IEnumerable></xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Collections.IEnumerable> </xref:System.Web.UI.WebControls.ObjectDataSource> 如果執行個體方法，會建立商務物件，並終結每次呼叫 SelectMethod 方法時。 您可以處理<xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated>SelectMethod 屬性所指定的方法呼叫之前使用商務物件的事件。</xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated> 您也可以處理<xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing>SelectMethod 屬性所指定的方法呼叫之後，就會引發的事件。</xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing> (`Dispose`實作的商務物件時，才會呼叫<xref:System.IDisposable>介面。)</xref:System.IDisposable>如果該方法是`static`(`Shared`在 Visual Basic 中) 方法，不會建立商務物件，而且您無法處理這些事件。       如果商務物件<xref:System.Web.UI.WebControls.ObjectDataSource>控制項搭配實作一個以上的方法或函式具有相同名稱 （方法多載），資料來源控制項嘗試叫用正確的其中一個，根據一組條件，包括中的參數<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A>集合。</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> 如果在參數<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A>集合不符合 SelectMethod 屬性所指定之方法的簽章，資料來源會擲回的例外狀況。</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A>       如需詳細資訊，請參閱<xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod?displayProperty=fullName>.</xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod?displayProperty=fullName>"
  example:
  - "The following code example demonstrates how a <xref:System.Web.UI.WebControls.GridView> control can display data using an <xref:System.Web.UI.WebControls.ObjectDataSource> control on a Web Forms page. The <xref:System.Web.UI.WebControls.ObjectDataSource> identifies a partially or fully qualified class name with its <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> property and a method that is called to retrieve data with its SelectMethod property. At run time, the object is created and the method is called using reflection. The <xref:System.Web.UI.WebControls.GridView> control enumerates through the <xref:System.Collections.IEnumerable> collection that is returned by the SelectMethod, and then displays the data.  \n  \n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_1#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_584_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_1#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_584_1.aspx)]"
  syntax:
    content: public string SelectMethod { get; set; }
    return:
      type: System.String
      description: "字串，代表方法的名稱，或函式， <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref>用來擷取資料。 預設為空字串 (&quot;&quot;)。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters
  id: SelectParameters
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: SelectParameters
  nameWithType: ObjectDataSourceView.SelectParameters
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得參數集合，其中包含所使用的參數<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod*>方法。</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod*>"
  remarks: "名稱和 SelectParameters 集合中所包含的參數類型必須符合的名稱和型別之參數所指定的方法中的<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A>屬性簽章。</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> 使用提供的參數，例如資料繫結控制項時<xref:System.Web.UI.WebControls.GridView>和<xref:System.Web.UI.WebControls.DetailsView>、<xref:System.Web.UI.WebControls.ObjectDataSource>控制項自動合併使用這些資料繫結控制項所提供的參數集合中已明確指定任何參數。</xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView> 如需詳細資訊，請參閱<xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod?displayProperty=fullName>.</xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod?displayProperty=fullName>"
  example:
  - "The following code example demonstrates how to retrieve a single data record using an <xref:System.Web.UI.WebControls.ObjectDataSource> control, and then display the data record in a <xref:System.Web.UI.WebControls.DetailsView> control. The <xref:System.Web.UI.WebControls.ObjectDataSource> retrieves a specific employee record by calling the `GetEmployee` method of the `EmployeeLogic` class. The `GetEmployee` method requires an employee ID parameter. The <xref:System.Web.UI.WebControls.ObjectDataSource> control uses a <xref:System.Web.UI.WebControls.QueryStringParameter> object in its SelectParameters collection to pass an ID to the `GetEmployee` method.  \n  \n To view the example implementation of the `EmployeeLogic` class and the `GetEmployee` method, see <xref:System.Web.UI.WebControls.ObjectDataSource>.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_3#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_297_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_3#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_297_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection SelectParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.ParameterCollection&quot;> </xref> ，其中包含所指定的方法所使用的參數<xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod*>屬性。</xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod*>"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SortParameterName
  id: SortParameterName
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: SortParameterName
  nameWithType: ObjectDataSourceView.SortParameterName
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.SortParameterName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定用來指定排序支援的資料來源的排序運算式的資料擷取方法的參數名稱。"
  remarks: "SortParameterName 屬性用來支援資料來源排序。 當<xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A>上設定屬性<xref:System.Web.UI.DataSourceSelectArguments>物件，並傳遞至<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>方法，SortParameterName 屬性會識別所指定之方法的參數名稱<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A>商務物件的屬性可接受排序運算式的值。</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Web.UI.DataSourceSelectArguments> </xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A>       SortParameterName 屬性的值儲存在檢視狀態。"
  syntax:
    content: public string SortParameterName { get; set; }
    return:
      type: System.String
      description: "用來指示參數可接受排序運算式的值的方法參數的名稱。 預設為空字串 (&quot;&quot;)。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.SortParameterName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName
  id: StartRowIndexParameterName
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: StartRowIndexParameterName
  nameWithType: ObjectDataSourceView.StartRowIndexParameterName
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定用來表示第一筆記錄，來擷取結果集的資料來源分頁支援的整數索引的資料擷取方法的參數名稱。"
  remarks: "StartRowIndexParameterName 屬性必須設定以啟用分頁。 如需詳細資訊<xref:System.Web.UI.WebControls.ObjectDataSourceView>，請參閱<xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A>.</xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A></xref:System.Web.UI.WebControls.ObjectDataSourceView>支援分頁       屬性是 StartRowIndexParameterName 值儲存在檢視狀態。"
  syntax:
    content: public string StartRowIndexParameterName { get; set; }
    return:
      type: System.String
      description: "用來指示擷取之第一個資料錄的商務物件方法參數的名稱。 預設為&quot;startRowIndex&quot;。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#IsTrackingViewState
  id: System#Web#UI#IStateManager#IsTrackingViewState
  isEii: true
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: ObjectDataSourceView.System.Web.UI.IStateManager.IsTrackingViewState
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.System.Web.UI.IStateManager.IsTrackingViewState
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "如需這個成員的說明，請參閱<xref:System.Web.UI.IStateManager.IsTrackingViewState*>.</xref:System.Web.UI.IStateManager.IsTrackingViewState*>"
  remarks: "這個成員是明確介面成員實作。 它可用時，才<xref:System.Web.UI.WebControls.ObjectDataSourceView>執行個體轉換成<xref:System.Web.UI.IStateManager>介面。</xref:System.Web.UI.IStateManager> </xref:System.Web.UI.WebControls.ObjectDataSourceView>"
  syntax:
    content: bool System.Web.UI.IStateManager.IsTrackingViewState { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果資料來源檢視標記為儲存其狀態。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#IsTrackingViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#LoadViewState(System.Object)
  id: System#Web#UI#IStateManager#LoadViewState(System.Object)
  isEii: true
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: System.Web.UI.IStateManager.LoadViewState(Object)
  nameWithType: ObjectDataSourceView.System.Web.UI.IStateManager.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.System.Web.UI.IStateManager.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "如需這個成員的說明，請參閱&lt;xref:System.Web.UI.IStateManager.LoadViewState%2A?displayProperty=fullName&gt;。"
  remarks: "這個成員是明確介面成員實作。 它可用時，才<xref:System.Web.UI.WebControls.ObjectDataSourceView>執行個體轉換成<xref:System.Web.UI.IStateManager>介面。</xref:System.Web.UI.IStateManager> </xref:System.Web.UI.WebControls.ObjectDataSourceView>"
  syntax:
    content: void IStateManager.LoadViewState (object savedState);
    parameters:
    - id: savedState
      type: System.Object
      description: "物件，表示<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;></xref>来還原狀態。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#LoadViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#SaveViewState
  id: System#Web#UI#IStateManager#SaveViewState
  isEii: true
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: System.Web.UI.IStateManager.SaveViewState()
  nameWithType: ObjectDataSourceView.System.Web.UI.IStateManager.SaveViewState()
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.System.Web.UI.IStateManager.SaveViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "如需這個成員的說明，請參閱&lt;xref:System.Web.UI.IStateManager.SaveViewState%2A?displayProperty=fullName&gt;。"
  remarks: "這個成員是明確介面成員實作。 它可用時，才<xref:System.Web.UI.WebControls.ObjectDataSourceView>執行個體轉換成<xref:System.Web.UI.IStateManager>介面。</xref:System.Web.UI.IStateManager> </xref:System.Web.UI.WebControls.ObjectDataSourceView>"
  syntax:
    content: object IStateManager.SaveViewState ();
    parameters: []
    return:
      type: System.Object
      description: "物件，其中包含所做的變更<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;></xref>檢視狀態，否則<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#SaveViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#TrackViewState
  id: System#Web#UI#IStateManager#TrackViewState
  isEii: true
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: System.Web.UI.IStateManager.TrackViewState()
  nameWithType: ObjectDataSourceView.System.Web.UI.IStateManager.TrackViewState()
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.System.Web.UI.IStateManager.TrackViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "如需這個成員的說明，請參閱&lt;xref:System.Web.UI.IStateManager.TrackViewState%2A?displayProperty=fullName&gt;。"
  remarks: "這個成員是明確介面成員實作。 它可用時，才<xref:System.Web.UI.WebControls.ObjectDataSourceView>執行個體轉換成<xref:System.Web.UI.IStateManager>介面。</xref:System.Web.UI.IStateManager> </xref:System.Web.UI.WebControls.ObjectDataSourceView>"
  syntax:
    content: void IStateManager.TrackViewState ();
    parameters: []
  overload: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#TrackViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.TrackViewState
  id: TrackViewState
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: TrackViewState()
  nameWithType: ObjectDataSourceView.TrackViewState()
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.TrackViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "會導致<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;></xref>物件來追蹤其檢視狀態變更，讓所做的變更可以儲存在<xref:System.Web.UI.Control.ViewState*>控制與保存跨相同頁面要求的物件。</xref:System.Web.UI.Control.ViewState*>"
  remarks: "TrackViewState 方法主要是由控制項開發人員使用。"
  syntax:
    content: protected virtual void TrackViewState ();
    parameters: []
  overload: System.Web.UI.WebControls.ObjectDataSourceView.TrackViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.TypeName
  id: TypeName
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: TypeName
  nameWithType: ObjectDataSourceView.TypeName
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.TypeName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定的類別名稱<xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;></xref>控制代表。"
  remarks: "若要建立物件的執行個體<xref:System.Web.UI.WebControls.ObjectDataSource>控制項繫結至、 控制項載入執行階段的型別名稱識別的型別會使用反映。</xref:System.Web.UI.WebControls.ObjectDataSource> 因此，類型名稱屬性的值可以是位於 Bin 或 App_Code 目錄中的程式碼的不完整的類型或全域組件快取中註冊的程式碼的完整限定的類型名稱。 如果您使用全域組件快取，您必須加入至適當的參考`assemblies`Machine.config 或 Web.config 組態檔的區段。"
  example:
  - "The following code example demonstrates how a <xref:System.Web.UI.WebControls.GridView> control can display data using an <xref:System.Web.UI.WebControls.ObjectDataSource> control on a Web Forms page. The <xref:System.Web.UI.WebControls.ObjectDataSource> identifies a partially or fully qualified class name with its TypeName property and a method that is called to retrieve data with its <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> property. At run time, the object is created and the method is called using reflection. The <xref:System.Web.UI.WebControls.GridView> control enumerates through the <xref:System.Collections.IEnumerable> collection that is returned by the <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> and displays the data.  \n  \n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_1#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_218_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_1#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_218_1.aspx)]"
  syntax:
    content: public string TypeName { get; set; }
    return:
      type: System.String
      description: "識別的物件類型的部分或完整限定的類別名稱， <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref>代表。 預設為空字串。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.TypeName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  id: Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: Update(IDictionary,IDictionary,IDictionary)
  nameWithType: ObjectDataSourceView.Update(IDictionary,IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Update(IDictionary,IDictionary,IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "藉由呼叫的方法，由執行更新作業<xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*>屬性並使用任何參數中提供<code> keys </code>， <code> values </code>，或<code> oldValues </code>集合。</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*>"
  remarks: "預設的傳回值為-1，表示已更新資料列數目未知。 若要傳回不同的值，設定<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows%2A>屬性<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>物件<xref:System.Web.UI.WebControls.ObjectDataSource.Updated>事件。</xref:System.Web.UI.WebControls.ObjectDataSource.Updated> </xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> </xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows%2A> 受影響的資料列數目通常由`Update`方法商務物件，而該值是可從<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue%2A>屬性<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>參數<xref:System.Web.UI.WebControls.ObjectDataSource.Updated>事件。</xref:System.Web.UI.WebControls.ObjectDataSource.Updated> </xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> </xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue%2A>       更新方法呼叫<xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteUpdate%2A>方法，傳遞`keys`， `values`，和`oldValues`參數。</xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteUpdate%2A>"
  syntax:
    content: public int Update (System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues);
    parameters:
    - id: keys
      type: System.Collections.IDictionary
      description: "A<xref:System.Collections.IDictionary>用來識別要更新的項目索引鍵值。</xref:System.Collections.IDictionary> 使用這些參數所指定的方法與<xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*>屬性來執行更新作業。</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*> 如果沒有相關聯的方法沒有參數，傳遞<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
    - id: values
      type: System.Collections.IDictionary
      description: "A<xref:System.Collections.IDictionary>要套用至資料來源的新值。</xref:System.Collections.IDictionary> 使用這些參數所指定的方法與<xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*>屬性來執行更新資料庫作業。</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*> 如果沒有相關聯的方法沒有參數，傳遞<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
    - id: oldValues
      type: System.Collections.IDictionary
      description: "A<xref:System.Collections.IDictionary>包含額外的非索引鍵值用來比對資料來源中的項目。</xref:System.Collections.IDictionary> 資料列的值會傳遞至 delete 方法，只有當<xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection*>屬性設定為<xref href=&quot;System.Web.UI.ConflictOptions&quot;></xref>欄位。</xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection*>"
    return:
      type: System.Int32
      description: "更新; 的資料列數目否則為-1，如果數目不明。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.Update*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Updated
  id: Updated
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: Updated
  nameWithType: ObjectDataSourceView.Updated
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Updated
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "發生時<xref:System.Web.UI.WebControls.ObjectDataSourceView.Update*>作業已完成。</xref:System.Web.UI.WebControls.ObjectDataSourceView.Update*>"
  remarks: "處理已更新事件，檢查傳回值的值和輸出參數，或要判定是否擲回例外狀況之後<xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A>作業已完成。</xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A> 傳回值，輸出參數和例外狀況處理屬性都是從<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>與事件相關聯的物件。</xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>       如需處理事件的詳細資訊，請參閱[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。"
  syntax:
    content: public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Updated;
    return:
      type: System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod
  id: UpdateMethod
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: UpdateMethod
  nameWithType: ObjectDataSourceView.UpdateMethod
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定的方法或函式名稱<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;></xref>物件會叫用來更新資料。"
  remarks: "<xref:System.Web.UI.WebControls.ObjectDataSourceView>物件假設 UpdateMethod 屬性所識別的方法會執行一次，而不是在批次更新一個。</xref:System.Web.UI.WebControls.ObjectDataSourceView>       這個方法可以是執行個體方法或`static`(`Shared`在 Visual Basic 中) 方法。 如果是執行個體方法，會建立商務物件，並終結每次呼叫 UpdateMethod 屬性所指定的方法時。 您可以處理<xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated>UpdateMethod 屬性所指定的方法呼叫之前使用商務物件的事件。</xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated> 您也可以處理<xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing>呼叫 UpdateMethod 方法之後，就會引發的事件。</xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing> (`Dispose`呼叫時，只有當商務物件會實作<xref:System.IDisposable>介面。)</xref:System.IDisposable>如果該方法是`static`(`Shared`在 Visual Basic 中) 方法，不會建立商務物件，而且您無法處理這些事件。       如果商務物件<xref:System.Web.UI.WebControls.ObjectDataSource>物件搭配實作一個以上的方法或函式具有相同名稱 （方法多載），資料來源控制項嘗試叫用正確的其中一個，根據一組條件，包括中的參數<xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A>集合。</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> 如果在參數<xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A>集合不相符的 UpdateMethod 屬性所指定之方法的簽章，資料來源擲回例外狀況。</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A>       如需詳細資訊，請參閱<xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod?displayProperty=fullName>.</xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod?displayProperty=fullName>       UpdateMethod 是屬性的值儲存在檢視狀態。"
  example:
  - "The following code example demonstrates how to use a <xref:System.Web.UI.WebControls.DropDownList> control, <xref:System.Web.UI.WebControls.TextBox> controls, and several <xref:System.Web.UI.WebControls.ObjectDataSource> controls to update data. The <xref:System.Web.UI.WebControls.DropDownList> displays the name of a `NorthwindEmployee`, while the <xref:System.Web.UI.WebControls.TextBox> controls are used to enter and update address information. Because the <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A> collection contains a <xref:System.Web.UI.WebControls.ControlParameter> object that is bound to the selected value of the <xref:System.Web.UI.WebControls.DropDownList>, the button that triggers the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A> operation is enabled only after an employee is selected.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_12#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_413_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_12#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_413_1.aspx)]"
  syntax:
    content: public string UpdateMethod { get; set; }
    return:
      type: System.String
      description: "字串，代表方法的名稱，或函式， <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref>用來更新資料。 預設為空字串 (&quot;&quot;)。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters
  id: UpdateParameters
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: UpdateParameters
  nameWithType: ObjectDataSourceView.UpdateParameters
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得參數集合，其中包含所使用的參數<xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*>方法。</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*>"
  remarks: "名稱和 UpdateParameters 集合中所包含的參數類型必須符合的名稱和型別之參數所指定的方法中的<xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A>屬性簽章。</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A> 參數名稱會受到<xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A>屬性且區分大小寫。</xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A> 使用提供的參數，例如資料繫結控制項時<xref:System.Web.UI.WebControls.GridView>和<xref:System.Web.UI.WebControls.DetailsView>、<xref:System.Web.UI.WebControls.ObjectDataSource>控制項自動合併使用這些資料繫結控制項所提供的參數集合中已明確指定任何參數。</xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView> 如需詳細資訊，請參閱<xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod?displayProperty=fullName>.</xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod?displayProperty=fullName>"
  example:
  - "The following code example demonstrates how to use a <xref:System.Web.UI.WebControls.DropDownList> control, <xref:System.Web.UI.WebControls.TextBox> controls, and several <xref:System.Web.UI.WebControls.ObjectDataSource> controls to update data. The <xref:System.Web.UI.WebControls.DropDownList> displays the name of a `NorthwindEmployee`, while the <xref:System.Web.UI.WebControls.TextBox> controls are used to enter and update address information. Because the UpdateParameters collection contains a <xref:System.Web.UI.WebControls.ControlParameter> object that is bound to the selected value of the <xref:System.Web.UI.WebControls.DropDownList>, the button that triggers the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A> operation is enabled only after an employee is selected.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_12#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_182_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_12#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_182_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection UpdateParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.ParameterCollection&quot;> </xref> ，其中包含所使用的參數<xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*>屬性。</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*>"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Updating
  id: Updating
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: Updating
  nameWithType: ObjectDataSourceView.Updating
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Updating
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "發生於之前<xref:System.Web.UI.WebControls.ObjectDataSourceView.Update*>作業。</xref:System.Web.UI.WebControls.ObjectDataSourceView.Update*>"
  remarks: "處理更新事件，以執行額外的初始化作業專屬於您的應用程式，來驗證參數的值，或若要變更參數值之前<xref:System.Web.UI.WebControls.ObjectDataSource>，控制項執行<xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A>作業。</xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> 參數是可做為<xref:System.Collections.IDictionary>集合，存取<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A>屬性，由<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs>物件。</xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs> </xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> </xref:System.Collections.IDictionary>       如需處理事件的詳細資訊，請參閱[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。"
  example:
  - "The following code example demonstrates how to use a <xref:System.Web.UI.WebControls.DropDownList> control, <xref:System.Web.UI.WebControls.TextBox> controls, and several <xref:System.Web.UI.WebControls.ObjectDataSource> controls to update data. The <xref:System.Web.UI.WebControls.DropDownList> displays the name of a `NorthwindEmployee`, while the <xref:System.Web.UI.WebControls.TextBox> controls are used to enter and update address information. Because the <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A> collection contains a <xref:System.Web.UI.WebControls.ControlParameter> object that is bound to the selected value of the <xref:System.Web.UI.WebControls.DropDownList>, the button that triggers the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A> operation is enabled only after an employee is selected.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_13#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_93_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_13#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_93_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Updating;
    return:
      type: System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.DataSourceView
  isExternal: false
  name: System.Web.UI.DataSourceView
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Web.UI.WebControls.ObjectDataSourceView.#ctor(System.Web.UI.WebControls.ObjectDataSource,System.String,System.Web.HttpContext)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ObjectDataSourceView(ObjectDataSource,String,HttpContext)
  nameWithType: ObjectDataSourceView.ObjectDataSourceView(ObjectDataSource,String,HttpContext)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ObjectDataSourceView(ObjectDataSource,String,HttpContext)
- uid: System.Web.UI.WebControls.ObjectDataSource
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ObjectDataSource
  nameWithType: ObjectDataSource
  fullName: System.Web.UI.WebControls.ObjectDataSource
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanDelete
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: CanDelete
  nameWithType: ObjectDataSourceView.CanDelete
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.CanDelete
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanInsert
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: CanInsert
  nameWithType: ObjectDataSourceView.CanInsert
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.CanInsert
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanPage
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: CanPage
  nameWithType: ObjectDataSourceView.CanPage
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.CanPage
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: CanRetrieveTotalRowCount
  nameWithType: ObjectDataSourceView.CanRetrieveTotalRowCount
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanSort
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: CanSort
  nameWithType: ObjectDataSourceView.CanSort
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.CanSort
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanUpdate
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: CanUpdate
  nameWithType: ObjectDataSourceView.CanUpdate
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.CanUpdate
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ConflictDetection
  nameWithType: ObjectDataSourceView.ConflictDetection
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection
- uid: System.Web.UI.ConflictOptions
  parent: System.Web.UI
  isExternal: false
  name: ConflictOptions
  nameWithType: ConflictOptions
  fullName: System.Web.UI.ConflictOptions
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ConvertNullToDBNull
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ConvertNullToDBNull
  nameWithType: ObjectDataSourceView.ConvertNullToDBNull
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ConvertNullToDBNull
- uid: System.Web.UI.WebControls.ObjectDataSourceView.DataObjectTypeName
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: DataObjectTypeName
  nameWithType: ObjectDataSourceView.DataObjectTypeName
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.DataObjectTypeName
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Delete(IDictionary,IDictionary)
  nameWithType: ObjectDataSourceView.Delete(IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Delete(IDictionary,IDictionary)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Deleted
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Deleted
  nameWithType: ObjectDataSourceView.Deleted
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Deleted
- uid: System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ObjectDataSourceStatusEventHandler
  nameWithType: ObjectDataSourceStatusEventHandler
  fullName: System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler
- uid: System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: DeleteMethod
  nameWithType: ObjectDataSourceView.DeleteMethod
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod
- uid: System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: DeleteParameters
  nameWithType: ObjectDataSourceView.DeleteParameters
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters
- uid: System.Web.UI.WebControls.ParameterCollection
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ParameterCollection
  nameWithType: ParameterCollection
  fullName: System.Web.UI.WebControls.ParameterCollection
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Deleting
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Deleting
  nameWithType: ObjectDataSourceView.Deleting
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Deleting
- uid: System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ObjectDataSourceMethodEventHandler
  nameWithType: ObjectDataSourceMethodEventHandler
  fullName: System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler
- uid: System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: EnablePaging
  nameWithType: ObjectDataSourceView.EnablePaging
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ExecuteDelete(IDictionary,IDictionary)
  nameWithType: ObjectDataSourceView.ExecuteDelete(IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteDelete(IDictionary,IDictionary)
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteInsert(System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ExecuteInsert(IDictionary)
  nameWithType: ObjectDataSourceView.ExecuteInsert(IDictionary)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteInsert(IDictionary)
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ExecuteSelect(DataSourceSelectArguments)
  nameWithType: ObjectDataSourceView.ExecuteSelect(DataSourceSelectArguments)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect(DataSourceSelectArguments)
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Web.UI.DataSourceSelectArguments
  parent: System.Web.UI
  isExternal: false
  name: DataSourceSelectArguments
  nameWithType: DataSourceSelectArguments
  fullName: System.Web.UI.DataSourceSelectArguments
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ExecuteUpdate(IDictionary,IDictionary,IDictionary)
  nameWithType: ObjectDataSourceView.ExecuteUpdate(IDictionary,IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteUpdate(IDictionary,IDictionary,IDictionary)
- uid: System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: FilterExpression
  nameWithType: ObjectDataSourceView.FilterExpression
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Filtering
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Filtering
  nameWithType: ObjectDataSourceView.Filtering
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Filtering
- uid: System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ObjectDataSourceFilteringEventHandler
  nameWithType: ObjectDataSourceFilteringEventHandler
  fullName: System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler
- uid: System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: FilterParameters
  nameWithType: ObjectDataSourceView.FilterParameters
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Insert(System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Insert(IDictionary)
  nameWithType: ObjectDataSourceView.Insert(IDictionary)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Insert(IDictionary)
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Inserted
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Inserted
  nameWithType: ObjectDataSourceView.Inserted
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Inserted
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Inserting
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Inserting
  nameWithType: ObjectDataSourceView.Inserting
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Inserting
- uid: System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: InsertMethod
  nameWithType: ObjectDataSourceView.InsertMethod
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod
- uid: System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: InsertParameters
  nameWithType: ObjectDataSourceView.InsertParameters
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters
- uid: System.Web.UI.WebControls.ObjectDataSourceView.IsTrackingViewState
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: IsTrackingViewState
  nameWithType: ObjectDataSourceView.IsTrackingViewState
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.IsTrackingViewState
- uid: System.Web.UI.WebControls.ObjectDataSourceView.LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: LoadViewState(Object)
  nameWithType: ObjectDataSourceView.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.LoadViewState(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: MaximumRowsParameterName
  nameWithType: ObjectDataSourceView.MaximumRowsParameterName
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ObjectCreated
  nameWithType: ObjectDataSourceView.ObjectCreated
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated
- uid: System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ObjectDataSourceObjectEventHandler
  nameWithType: ObjectDataSourceObjectEventHandler
  fullName: System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ObjectCreating
  nameWithType: ObjectDataSourceView.ObjectCreating
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ObjectDisposing
  nameWithType: ObjectDataSourceView.ObjectDisposing
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing
- uid: System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ObjectDataSourceDisposingEventHandler
  nameWithType: ObjectDataSourceDisposingEventHandler
  fullName: System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OldValuesParameterFormatString
  nameWithType: ObjectDataSourceView.OldValuesParameterFormatString
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnDeleted(ObjectDataSourceStatusEventArgs)
  nameWithType: ObjectDataSourceView.OnDeleted(ObjectDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted(ObjectDataSourceStatusEventArgs)
- uid: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ObjectDataSourceStatusEventArgs
  nameWithType: ObjectDataSourceStatusEventArgs
  fullName: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnDeleting(ObjectDataSourceMethodEventArgs)
  nameWithType: ObjectDataSourceView.OnDeleting(ObjectDataSourceMethodEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting(ObjectDataSourceMethodEventArgs)
- uid: System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ObjectDataSourceMethodEventArgs
  nameWithType: ObjectDataSourceMethodEventArgs
  fullName: System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnFiltering(System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnFiltering(ObjectDataSourceFilteringEventArgs)
  nameWithType: ObjectDataSourceView.OnFiltering(ObjectDataSourceFilteringEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnFiltering(ObjectDataSourceFilteringEventArgs)
- uid: System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ObjectDataSourceFilteringEventArgs
  nameWithType: ObjectDataSourceFilteringEventArgs
  fullName: System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnInserted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnInserted(ObjectDataSourceStatusEventArgs)
  nameWithType: ObjectDataSourceView.OnInserted(ObjectDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnInserted(ObjectDataSourceStatusEventArgs)
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnInserting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnInserting(ObjectDataSourceMethodEventArgs)
  nameWithType: ObjectDataSourceView.OnInserting(ObjectDataSourceMethodEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnInserting(ObjectDataSourceMethodEventArgs)
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated(System.Web.UI.WebControls.ObjectDataSourceEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnObjectCreated(ObjectDataSourceEventArgs)
  nameWithType: ObjectDataSourceView.OnObjectCreated(ObjectDataSourceEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated(ObjectDataSourceEventArgs)
- uid: System.Web.UI.WebControls.ObjectDataSourceEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ObjectDataSourceEventArgs
  nameWithType: ObjectDataSourceEventArgs
  fullName: System.Web.UI.WebControls.ObjectDataSourceEventArgs
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating(System.Web.UI.WebControls.ObjectDataSourceEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnObjectCreating(ObjectDataSourceEventArgs)
  nameWithType: ObjectDataSourceView.OnObjectCreating(ObjectDataSourceEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating(ObjectDataSourceEventArgs)
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing(System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnObjectDisposing(ObjectDataSourceDisposingEventArgs)
  nameWithType: ObjectDataSourceView.OnObjectDisposing(ObjectDataSourceDisposingEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing(ObjectDataSourceDisposingEventArgs)
- uid: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ObjectDataSourceDisposingEventArgs
  nameWithType: ObjectDataSourceDisposingEventArgs
  fullName: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnSelected(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnSelected(ObjectDataSourceStatusEventArgs)
  nameWithType: ObjectDataSourceView.OnSelected(ObjectDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnSelected(ObjectDataSourceStatusEventArgs)
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting(System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnSelecting(ObjectDataSourceSelectingEventArgs)
  nameWithType: ObjectDataSourceView.OnSelecting(ObjectDataSourceSelectingEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting(ObjectDataSourceSelectingEventArgs)
- uid: System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ObjectDataSourceSelectingEventArgs
  nameWithType: ObjectDataSourceSelectingEventArgs
  fullName: System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnUpdated(ObjectDataSourceStatusEventArgs)
  nameWithType: ObjectDataSourceView.OnUpdated(ObjectDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated(ObjectDataSourceStatusEventArgs)
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnUpdating(ObjectDataSourceMethodEventArgs)
  nameWithType: ObjectDataSourceView.OnUpdating(ObjectDataSourceMethodEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating(ObjectDataSourceMethodEventArgs)
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ParsingCulture
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ParsingCulture
  nameWithType: ObjectDataSourceView.ParsingCulture
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ParsingCulture
- uid: System.Web.UI.WebControls.ParsingCulture
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ParsingCulture
  nameWithType: ParsingCulture
  fullName: System.Web.UI.WebControls.ParsingCulture
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: SaveViewState()
  nameWithType: ObjectDataSourceView.SaveViewState()
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState()
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Select(DataSourceSelectArguments)
  nameWithType: ObjectDataSourceView.Select(DataSourceSelectArguments)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Select(DataSourceSelectArguments)
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: SelectCountMethod
  nameWithType: ObjectDataSourceView.SelectCountMethod
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Selected
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Selected
  nameWithType: ObjectDataSourceView.Selected
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Selected
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Selecting
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Selecting
  nameWithType: ObjectDataSourceView.Selecting
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Selecting
- uid: System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ObjectDataSourceSelectingEventHandler
  nameWithType: ObjectDataSourceSelectingEventHandler
  fullName: System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: SelectMethod
  nameWithType: ObjectDataSourceView.SelectMethod
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: SelectParameters
  nameWithType: ObjectDataSourceView.SelectParameters
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SortParameterName
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: SortParameterName
  nameWithType: ObjectDataSourceView.SortParameterName
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.SortParameterName
- uid: System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: StartRowIndexParameterName
  nameWithType: ObjectDataSourceView.StartRowIndexParameterName
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName
- uid: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#IsTrackingViewState
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: ObjectDataSourceView.System.Web.UI.IStateManager.IsTrackingViewState
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.System.Web.UI.IStateManager.IsTrackingViewState
- uid: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.LoadViewState(Object)
  nameWithType: ObjectDataSourceView.System.Web.UI.IStateManager.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.System.Web.UI.IStateManager.LoadViewState(Object)
- uid: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#SaveViewState
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.SaveViewState()
  nameWithType: ObjectDataSourceView.System.Web.UI.IStateManager.SaveViewState()
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.System.Web.UI.IStateManager.SaveViewState()
- uid: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#TrackViewState
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.TrackViewState()
  nameWithType: ObjectDataSourceView.System.Web.UI.IStateManager.TrackViewState()
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.System.Web.UI.IStateManager.TrackViewState()
- uid: System.Web.UI.WebControls.ObjectDataSourceView.TrackViewState
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: TrackViewState()
  nameWithType: ObjectDataSourceView.TrackViewState()
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.TrackViewState()
- uid: System.Web.UI.WebControls.ObjectDataSourceView.TypeName
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: TypeName
  nameWithType: ObjectDataSourceView.TypeName
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.TypeName
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Update(IDictionary,IDictionary,IDictionary)
  nameWithType: ObjectDataSourceView.Update(IDictionary,IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Update(IDictionary,IDictionary,IDictionary)
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Updated
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Updated
  nameWithType: ObjectDataSourceView.Updated
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Updated
- uid: System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: UpdateMethod
  nameWithType: ObjectDataSourceView.UpdateMethod
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod
- uid: System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: UpdateParameters
  nameWithType: ObjectDataSourceView.UpdateParameters
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Updating
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Updating
  nameWithType: ObjectDataSourceView.Updating
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Updating
- uid: System.Web.UI.WebControls.ObjectDataSourceView.#ctor*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ObjectDataSourceView
  nameWithType: ObjectDataSourceView.ObjectDataSourceView
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanDelete*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: CanDelete
  nameWithType: ObjectDataSourceView.CanDelete
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanInsert*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: CanInsert
  nameWithType: ObjectDataSourceView.CanInsert
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanPage*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: CanPage
  nameWithType: ObjectDataSourceView.CanPage
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: CanRetrieveTotalRowCount
  nameWithType: ObjectDataSourceView.CanRetrieveTotalRowCount
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanSort*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: CanSort
  nameWithType: ObjectDataSourceView.CanSort
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanUpdate*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: CanUpdate
  nameWithType: ObjectDataSourceView.CanUpdate
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ConflictDetection
  nameWithType: ObjectDataSourceView.ConflictDetection
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ConvertNullToDBNull*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ConvertNullToDBNull
  nameWithType: ObjectDataSourceView.ConvertNullToDBNull
- uid: System.Web.UI.WebControls.ObjectDataSourceView.DataObjectTypeName*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: DataObjectTypeName
  nameWithType: ObjectDataSourceView.DataObjectTypeName
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Delete*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Delete
  nameWithType: ObjectDataSourceView.Delete
- uid: System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: DeleteMethod
  nameWithType: ObjectDataSourceView.DeleteMethod
- uid: System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: DeleteParameters
  nameWithType: ObjectDataSourceView.DeleteParameters
- uid: System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: EnablePaging
  nameWithType: ObjectDataSourceView.EnablePaging
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteDelete*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ExecuteDelete
  nameWithType: ObjectDataSourceView.ExecuteDelete
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteInsert*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ExecuteInsert
  nameWithType: ObjectDataSourceView.ExecuteInsert
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ExecuteSelect
  nameWithType: ObjectDataSourceView.ExecuteSelect
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteUpdate*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ExecuteUpdate
  nameWithType: ObjectDataSourceView.ExecuteUpdate
- uid: System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: FilterExpression
  nameWithType: ObjectDataSourceView.FilterExpression
- uid: System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: FilterParameters
  nameWithType: ObjectDataSourceView.FilterParameters
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Insert*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Insert
  nameWithType: ObjectDataSourceView.Insert
- uid: System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: InsertMethod
  nameWithType: ObjectDataSourceView.InsertMethod
- uid: System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: InsertParameters
  nameWithType: ObjectDataSourceView.InsertParameters
- uid: System.Web.UI.WebControls.ObjectDataSourceView.IsTrackingViewState*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: IsTrackingViewState
  nameWithType: ObjectDataSourceView.IsTrackingViewState
- uid: System.Web.UI.WebControls.ObjectDataSourceView.LoadViewState*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: LoadViewState
  nameWithType: ObjectDataSourceView.LoadViewState
- uid: System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: MaximumRowsParameterName
  nameWithType: ObjectDataSourceView.MaximumRowsParameterName
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OldValuesParameterFormatString
  nameWithType: ObjectDataSourceView.OldValuesParameterFormatString
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnDeleted
  nameWithType: ObjectDataSourceView.OnDeleted
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnDeleting
  nameWithType: ObjectDataSourceView.OnDeleting
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnFiltering*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnFiltering
  nameWithType: ObjectDataSourceView.OnFiltering
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnInserted*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnInserted
  nameWithType: ObjectDataSourceView.OnInserted
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnInserting*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnInserting
  nameWithType: ObjectDataSourceView.OnInserting
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnObjectCreated
  nameWithType: ObjectDataSourceView.OnObjectCreated
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnObjectCreating
  nameWithType: ObjectDataSourceView.OnObjectCreating
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnObjectDisposing
  nameWithType: ObjectDataSourceView.OnObjectDisposing
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnSelected*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnSelected
  nameWithType: ObjectDataSourceView.OnSelected
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnSelecting
  nameWithType: ObjectDataSourceView.OnSelecting
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnUpdated
  nameWithType: ObjectDataSourceView.OnUpdated
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnUpdating
  nameWithType: ObjectDataSourceView.OnUpdating
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ParsingCulture*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ParsingCulture
  nameWithType: ObjectDataSourceView.ParsingCulture
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: SaveViewState
  nameWithType: ObjectDataSourceView.SaveViewState
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Select*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Select
  nameWithType: ObjectDataSourceView.Select
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: SelectCountMethod
  nameWithType: ObjectDataSourceView.SelectCountMethod
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: SelectMethod
  nameWithType: ObjectDataSourceView.SelectMethod
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: SelectParameters
  nameWithType: ObjectDataSourceView.SelectParameters
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SortParameterName*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: SortParameterName
  nameWithType: ObjectDataSourceView.SortParameterName
- uid: System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: StartRowIndexParameterName
  nameWithType: ObjectDataSourceView.StartRowIndexParameterName
- uid: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#IsTrackingViewState*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: ObjectDataSourceView.System.Web.UI.IStateManager.IsTrackingViewState
- uid: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#LoadViewState*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.LoadViewState
  nameWithType: ObjectDataSourceView.System.Web.UI.IStateManager.LoadViewState
- uid: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#SaveViewState*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.SaveViewState
  nameWithType: ObjectDataSourceView.System.Web.UI.IStateManager.SaveViewState
- uid: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#TrackViewState*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.TrackViewState
  nameWithType: ObjectDataSourceView.System.Web.UI.IStateManager.TrackViewState
- uid: System.Web.UI.WebControls.ObjectDataSourceView.TrackViewState*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: TrackViewState
  nameWithType: ObjectDataSourceView.TrackViewState
- uid: System.Web.UI.WebControls.ObjectDataSourceView.TypeName*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: TypeName
  nameWithType: ObjectDataSourceView.TypeName
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Update*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Update
  nameWithType: ObjectDataSourceView.Update
- uid: System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: UpdateMethod
  nameWithType: ObjectDataSourceView.UpdateMethod
- uid: System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: UpdateParameters
  nameWithType: ObjectDataSourceView.UpdateParameters
