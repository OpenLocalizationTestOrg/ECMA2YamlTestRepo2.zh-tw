### YamlMime:ManagedReference
items:
- uid: System.IO.Pipes.AnonymousPipeServerStream
  id: AnonymousPipeServerStream
  children:
  - System.IO.Pipes.AnonymousPipeServerStream.#ctor
  - System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection)
  - System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability)
  - System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle,Microsoft.Win32.SafeHandles.SafePipeHandle)
  - System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability,System.Int32)
  - System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability,System.Int32,System.IO.Pipes.PipeSecurity)
  - System.IO.Pipes.AnonymousPipeServerStream.ClientSafePipeHandle
  - System.IO.Pipes.AnonymousPipeServerStream.Dispose(System.Boolean)
  - System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle
  - System.IO.Pipes.AnonymousPipeServerStream.Finalize
  - System.IO.Pipes.AnonymousPipeServerStream.GetClientHandleAsString
  - System.IO.Pipes.AnonymousPipeServerStream.ReadMode
  - System.IO.Pipes.AnonymousPipeServerStream.TransmissionMode
  langs:
  - csharp
  name: AnonymousPipeServerStream
  nameWithType: AnonymousPipeServerStream
  fullName: System.IO.Pipes.AnonymousPipeServerStream
  type: Class
  summary: "公開的資料流周圍匿名管道，支援同步和非同步讀取和寫入作業。"
  remarks: "匿名管道有助於提供安全子項與父代之間的處理序間通訊的處理程序。 AnonymousPipeServerStream 類別可讓父處理序傳送或接收的子處理序的資訊。       匿名管道是未命名，但單向通常父和子處理序之間傳輸資料的管道。 匿名管道永遠是本機。無法用在網路上。 A<xref:System.IO.Pipes.PipeDirection>值<xref:System.IO.Pipes.PipeDirection>匿名管道定義為單向，所以不支援。</xref:System.IO.Pipes.PipeDirection> </xref:System.IO.Pipes.PipeDirection>       不支援匿名管道<xref:System.IO.Pipes.PipeTransmissionMode>讀取模式。</xref:System.IO.Pipes.PipeTransmissionMode>       匿名管道的用戶端必須從所呼叫的伺服器端提供的管道控制代碼建立<xref:System.IO.Pipes.AnonymousPipeServerStream.GetClientHandleAsString%2A>方法。</xref:System.IO.Pipes.AnonymousPipeServerStream.GetClientHandleAsString%2A> 然後，做為參數來傳遞的字串，建立用戶端處理序時。 從用戶端處理序，它會傳遞至<xref:System.IO.Pipes.AnonymousPipeClientStream>建構函式做為`pipeHandleAsString`參數。</xref:System.IO.Pipes.AnonymousPipeClientStream>       AnonymousPipeServerStream 物件必須用戶端控制代碼使用處置<xref:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle%2A>方法，以便在用戶端結束時收到通知。</xref:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle%2A>      > [!NOTE] > 的[!INCLUDE[winxppro](~/add/includes/winxppro-md.md)]和[!INCLUDE[win2kserver](~/add/includes/win2kserver-md.md)]，最多 10 個管道同時可以透過網路連線。"
  example:
  - "The following example demonstrates a way to send a string from a parent process to a child process using anonymous pipes. This example creates an AnonymousPipeServerStream object in a parent process with a <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection>. It also creates an <xref:System.IO.Pipes.AnonymousPipeClientStream> object in a child process with a <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection>. The parent process then sends a user-supplied string to the child process. The string is displayed to the console.  \n  \n This example is for the server process, which uses the AnonymousPipeServerStream class. For the entire code example, including the code for both the pipe client and server, see [How to: Use Anonymous Pipes for Local Interprocess Communication](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/add/codesnippet/csharp/t-system.io.pipes.anonym_1_1.cs)]\n [!code-vb[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/add/codesnippet/visualbasic/t-system.io.pipes.anonym_1_1.vb)]\n [!code-cpp[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/add/codesnippet/cpp/t-system.io.pipes.anonym_1_1.cpp)]"
  syntax:
    content: 'public sealed class AnonymousPipeServerStream : System.IO.Pipes.PipeStream'
  inheritance:
  - System.IO.Stream
  - System.IO.Pipes.PipeStream
  implements: []
  inheritedMembers:
  - System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.IO.Pipes.PipeStream.CanRead
  - System.IO.Pipes.PipeStream.CanSeek
  - System.IO.Pipes.PipeStream.CanWrite
  - System.IO.Pipes.PipeStream.CheckPipePropertyOperations
  - System.IO.Pipes.PipeStream.CheckReadOperations
  - System.IO.Pipes.PipeStream.CheckWriteOperations
  - System.IO.Pipes.PipeStream.EndRead(System.IAsyncResult)
  - System.IO.Pipes.PipeStream.EndWrite(System.IAsyncResult)
  - System.IO.Pipes.PipeStream.Flush
  - System.IO.Pipes.PipeStream.GetAccessControl
  - System.IO.Pipes.PipeStream.InBufferSize
  - System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)
  - System.IO.Pipes.PipeStream.IsAsync
  - System.IO.Pipes.PipeStream.IsConnected
  - System.IO.Pipes.PipeStream.IsHandleExposed
  - System.IO.Pipes.PipeStream.IsMessageComplete
  - System.IO.Pipes.PipeStream.Length
  - System.IO.Pipes.PipeStream.OutBufferSize
  - System.IO.Pipes.PipeStream.Position
  - System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)
  - System.IO.Pipes.PipeStream.ReadByte
  - System.IO.Pipes.PipeStream.SafePipeHandle
  - System.IO.Pipes.PipeStream.Seek(System.Int64,System.IO.SeekOrigin)
  - System.IO.Pipes.PipeStream.SetAccessControl(System.IO.Pipes.PipeSecurity)
  - System.IO.Pipes.PipeStream.SetLength(System.Int64)
  - System.IO.Pipes.PipeStream.WaitForPipeDrain
  - System.IO.Pipes.PipeStream.Write(System.Byte[],System.Int32,System.Int32)
  - System.IO.Pipes.PipeStream.WriteByte(System.Byte)
  platform:
  - net462
- uid: System.IO.Pipes.AnonymousPipeServerStream.#ctor
  id: '#ctor'
  parent: System.IO.Pipes.AnonymousPipeServerStream
  langs:
  - csharp
  name: AnonymousPipeServerStream()
  nameWithType: AnonymousPipeServerStream.AnonymousPipeServerStream()
  fullName: System.IO.Pipes.AnonymousPipeServerStream.AnonymousPipeServerStream()
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "初始化的新執行個體<xref href=&quot;System.IO.Pipes.AnonymousPipeServerStream&quot;></xref>類別。"
  remarks: "<xref:System.IO.Pipes.AnonymousPipeServerStream>不含<xref:System.IO.Pipes.PipeDirection>參數的預設方向是<xref:System.IO.Pipes.PipeDirection>.</xref:System.IO.Pipes.PipeDirection></xref:System.IO.Pipes.PipeDirection></xref:System.IO.Pipes.AnonymousPipeServerStream>建構函式 A<xref:System.IO.Pipes.PipeDirection>值<xref:System.IO.Pipes.PipeDirection>匿名管道定義為單向，所以不支援。</xref:System.IO.Pipes.PipeDirection> </xref:System.IO.Pipes.PipeDirection>       這個建構函式建立的<xref:System.IO.Pipes.AnonymousPipeServerStream>物件，其具有預設緩衝區大小、 任何管道安全性和<xref:System.IO.HandleInheritability><xref:System.IO.HandleInheritability>.</xref:System.IO.HandleInheritability>值</xref:System.IO.HandleInheritability></xref:System.IO.Pipes.AnonymousPipeServerStream>"
  syntax:
    content: public AnonymousPipeServerStream ();
    parameters: []
  overload: System.IO.Pipes.AnonymousPipeServerStream.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection)
  id: '#ctor(System.IO.Pipes.PipeDirection)'
  parent: System.IO.Pipes.AnonymousPipeServerStream
  langs:
  - csharp
  name: AnonymousPipeServerStream(PipeDirection)
  nameWithType: AnonymousPipeServerStream.AnonymousPipeServerStream(PipeDirection)
  fullName: System.IO.Pipes.AnonymousPipeServerStream.AnonymousPipeServerStream(PipeDirection)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "初始化的新執行個體<xref href=&quot;System.IO.Pipes.AnonymousPipeServerStream&quot;></xref>類別具有指定的管道的方向。"
  remarks: "A<xref:System.IO.Pipes.PipeDirection>值<xref:System.IO.Pipes.PipeDirection>匿名管道定義為單向，所以不支援。</xref:System.IO.Pipes.PipeDirection> </xref:System.IO.Pipes.PipeDirection>       這個建構函式建立的<xref:System.IO.Pipes.AnonymousPipeServerStream>物件，其具有預設緩衝區大小、 任何管道安全性和<xref:System.IO.HandleInheritability><xref:System.IO.HandleInheritability>.</xref:System.IO.HandleInheritability>值</xref:System.IO.HandleInheritability></xref:System.IO.Pipes.AnonymousPipeServerStream>"
  syntax:
    content: public AnonymousPipeServerStream (System.IO.Pipes.PipeDirection direction);
    parameters:
    - id: direction
      type: System.IO.Pipes.PipeDirection
      description: "其中一個列舉值，決定管道的方向。       匿名管道只可依單一方向，因此`direction`不能設定為<xref href=&quot;System.IO.Pipes.PipeDirection&quot;> </xref>。"
  overload: System.IO.Pipes.AnonymousPipeServerStream.#ctor*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>direction</code>is set to <xref href=&quot;System.IO.Pipes.PipeDirection&quot;></xref>."
  platform:
  - net462
- uid: System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability)
  id: '#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability)'
  parent: System.IO.Pipes.AnonymousPipeServerStream
  langs:
  - csharp
  name: AnonymousPipeServerStream(PipeDirection,HandleInheritability)
  nameWithType: AnonymousPipeServerStream.AnonymousPipeServerStream(PipeDirection,HandleInheritability)
  fullName: System.IO.Pipes.AnonymousPipeServerStream.AnonymousPipeServerStream(PipeDirection,HandleInheritability)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "初始化的新執行個體<xref href=&quot;System.IO.Pipes.AnonymousPipeServerStream&quot;></xref>使用指定的管道方向和可繼承性模式的類別。"
  remarks: "A<xref:System.IO.Pipes.PipeDirection>值<xref:System.IO.Pipes.PipeDirection>匿名管道定義為單向，所以不支援。</xref:System.IO.Pipes.PipeDirection> </xref:System.IO.Pipes.PipeDirection>       這個建構函式會建立<xref:System.IO.Pipes.AnonymousPipeServerStream>具有預設緩衝區大小和沒有管道安全性物件。</xref:System.IO.Pipes.AnonymousPipeServerStream>"
  example:
  - "The following example demonstrates a method to send a string from a parent process to a child process using anonymous pipes. In this example, an <xref:System.IO.Pipes.AnonymousPipeServerStream> object is created in a parent process with a <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection>.  \n  \n [!code-cs[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/add/codesnippet/csharp/d22da34b-b931-48af-8c21-_1.cs)]\n [!code-vb[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/add/codesnippet/visualbasic/d22da34b-b931-48af-8c21-_1.vb)]\n [!code-cpp[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/add/codesnippet/cpp/d22da34b-b931-48af-8c21-_1.cpp)]"
  syntax:
    content: public AnonymousPipeServerStream (System.IO.Pipes.PipeDirection direction, System.IO.HandleInheritability inheritability);
    parameters:
    - id: direction
      type: System.IO.Pipes.PipeDirection
      description: "其中一個列舉值，決定管道的方向。       匿名管道只可依單一方向，因此`direction`不能設定為<xref href=&quot;System.IO.Pipes.PipeDirection&quot;> </xref>。"
    - id: inheritability
      type: System.IO.HandleInheritability
      description: "其中一個列舉值，決定子處理序是否可以繼承基礎控制代碼。 必須設定為其中一個<xref:System.IO.HandleInheritability>或<xref:System.IO.HandleInheritability>.</xref:System.IO.HandleInheritability> </xref:System.IO.HandleInheritability>"
  overload: System.IO.Pipes.AnonymousPipeServerStream.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>inheritability</code>未設定為 <xref:System.IO.HandleInheritability>或<xref:System.IO.HandleInheritability>。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>direction</code>is set to <xref href=&quot;System.IO.Pipes.PipeDirection&quot;></xref>."
  platform:
  - net462
- uid: System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle,Microsoft.Win32.SafeHandles.SafePipeHandle)
  id: '#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle,Microsoft.Win32.SafeHandles.SafePipeHandle)'
  parent: System.IO.Pipes.AnonymousPipeServerStream
  langs:
  - csharp
  name: AnonymousPipeServerStream(PipeDirection,SafePipeHandle,SafePipeHandle)
  nameWithType: AnonymousPipeServerStream.AnonymousPipeServerStream(PipeDirection,SafePipeHandle,SafePipeHandle)
  fullName: System.IO.Pipes.AnonymousPipeServerStream.AnonymousPipeServerStream(PipeDirection,SafePipeHandle,SafePipeHandle)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "初始化的新執行個體<xref href=&quot;System.IO.Pipes.AnonymousPipeServerStream&quot;></xref>類別，從指定的管道控制代碼。"
  remarks: "A<xref:System.IO.Pipes.PipeDirection>值<xref:System.IO.Pipes.PipeDirection>匿名管道定義為單向，所以不支援。</xref:System.IO.Pipes.PipeDirection> </xref:System.IO.Pipes.PipeDirection>"
  syntax:
    content: public AnonymousPipeServerStream (System.IO.Pipes.PipeDirection direction, Microsoft.Win32.SafeHandles.SafePipeHandle serverSafePipeHandle, Microsoft.Win32.SafeHandles.SafePipeHandle clientSafePipeHandle);
    parameters:
    - id: direction
      type: System.IO.Pipes.PipeDirection
      description: "其中一個列舉值，決定管道的方向。       匿名管道只可依單一方向，因此`direction`不能設定為<xref href=&quot;System.IO.Pipes.PipeDirection&quot;> </xref>。"
    - id: serverSafePipeHandle
      type: Microsoft.Win32.SafeHandles.SafePipeHandle
      description: "安全控制代碼之管道這個<xref href=&quot;System.IO.Pipes.AnonymousPipeServerStream&quot;></xref>物件將會封裝。"
    - id: clientSafePipeHandle
      type: Microsoft.Win32.SafeHandles.SafePipeHandle
      description: "安全控制代碼<xref href=&quot;System.IO.Pipes.AnonymousPipeClientStream&quot;></xref>物件。"
  overload: System.IO.Pipes.AnonymousPipeServerStream.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>serverSafePipeHandle</code>或<code>clientSafePipeHandle</code>是無效的控制代碼。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serverSafePipeHandle</code>or <code>clientSafePipeHandle</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>direction</code>is set to <xref href=&quot;System.IO.Pipes.PipeDirection&quot;></xref>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "發生 I/O 錯誤，例如磁碟錯誤。       -或者-資料流已關閉。"
  platform:
  - net462
- uid: System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability,System.Int32)
  id: '#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability,System.Int32)'
  parent: System.IO.Pipes.AnonymousPipeServerStream
  langs:
  - csharp
  name: AnonymousPipeServerStream(PipeDirection,HandleInheritability,Int32)
  nameWithType: AnonymousPipeServerStream.AnonymousPipeServerStream(PipeDirection,HandleInheritability,Int32)
  fullName: System.IO.Pipes.AnonymousPipeServerStream.AnonymousPipeServerStream(PipeDirection,HandleInheritability,Int32)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "初始化的新執行個體<xref href=&quot;System.IO.Pipes.AnonymousPipeServerStream&quot;></xref>類別，以指定的管道方向、 可繼承性模式和緩衝區大小。"
  remarks: "A<xref:System.IO.Pipes.PipeDirection>值<xref:System.IO.Pipes.PipeDirection>匿名管道定義為單向，所以不支援。</xref:System.IO.Pipes.PipeDirection> </xref:System.IO.Pipes.PipeDirection>       這個建構函式會建立<xref:System.IO.Pipes.AnonymousPipeServerStream>管道安全性物件。</xref:System.IO.Pipes.AnonymousPipeServerStream>"
  syntax:
    content: public AnonymousPipeServerStream (System.IO.Pipes.PipeDirection direction, System.IO.HandleInheritability inheritability, int bufferSize);
    parameters:
    - id: direction
      type: System.IO.Pipes.PipeDirection
      description: "其中一個列舉值，決定管道的方向。       匿名管道只可依單一方向，因此`direction`不能設定為<xref href=&quot;System.IO.Pipes.PipeDirection&quot;> </xref>。"
    - id: inheritability
      type: System.IO.HandleInheritability
      description: "其中一個列舉值，決定子處理序是否可以繼承基礎控制代碼。 必須設定為其中一個<xref:System.IO.HandleInheritability>或<xref:System.IO.HandleInheritability>.</xref:System.IO.HandleInheritability> </xref:System.IO.HandleInheritability>"
    - id: bufferSize
      type: System.Int32
      description: "緩衝區的大小。 此值必須大於或等於 0。"
  overload: System.IO.Pipes.AnonymousPipeServerStream.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>inheritability</code>未設定為 <xref:System.IO.HandleInheritability>或<xref:System.IO.HandleInheritability>。       -或-<code>bufferSize</code>小於 0。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>direction</code>is set to <xref href=&quot;System.IO.Pipes.PipeDirection&quot;></xref>."
  platform:
  - net462
- uid: System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability,System.Int32,System.IO.Pipes.PipeSecurity)
  id: '#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability,System.Int32,System.IO.Pipes.PipeSecurity)'
  parent: System.IO.Pipes.AnonymousPipeServerStream
  langs:
  - csharp
  name: AnonymousPipeServerStream(PipeDirection,HandleInheritability,Int32,PipeSecurity)
  nameWithType: AnonymousPipeServerStream.AnonymousPipeServerStream(PipeDirection,HandleInheritability,Int32,PipeSecurity)
  fullName: System.IO.Pipes.AnonymousPipeServerStream.AnonymousPipeServerStream(PipeDirection,HandleInheritability,Int32,PipeSecurity)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "初始化的新執行個體<xref href=&quot;System.IO.Pipes.AnonymousPipeServerStream&quot;></xref>類別具有指定的管道方向、 可繼承性模式、 緩衝區大小和管道安全性。"
  remarks: "A<xref:System.IO.Pipes.PipeDirection>值<xref:System.IO.Pipes.PipeDirection>匿名管道定義為單向，所以不支援。</xref:System.IO.Pipes.PipeDirection> </xref:System.IO.Pipes.PipeDirection>"
  syntax:
    content: public AnonymousPipeServerStream (System.IO.Pipes.PipeDirection direction, System.IO.HandleInheritability inheritability, int bufferSize, System.IO.Pipes.PipeSecurity pipeSecurity);
    parameters:
    - id: direction
      type: System.IO.Pipes.PipeDirection
      description: "其中一個列舉值，決定管道的方向。       匿名管道只可依單一方向，因此`direction`不能設定為<xref href=&quot;System.IO.Pipes.PipeDirection&quot;> </xref>。"
    - id: inheritability
      type: System.IO.HandleInheritability
      description: "其中一個列舉值，決定子處理序是否可以繼承基礎控制代碼。"
    - id: bufferSize
      type: System.Int32
      description: "緩衝區的大小。 此值必須大於或等於 0。"
    - id: pipeSecurity
      type: System.IO.Pipes.PipeSecurity
      description: "物件，判斷的存取控制和稽核安全性管道。"
  overload: System.IO.Pipes.AnonymousPipeServerStream.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>inheritability</code>未設定為 <xref:System.IO.HandleInheritability>或<xref:System.IO.HandleInheritability>。       -或-<code>bufferSize</code>小於 0。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>direction</code>is set to <xref href=&quot;System.IO.Pipes.PipeDirection&quot;></xref>."
  platform:
  - net462
- uid: System.IO.Pipes.AnonymousPipeServerStream.ClientSafePipeHandle
  id: ClientSafePipeHandle
  parent: System.IO.Pipes.AnonymousPipeServerStream
  langs:
  - csharp
  name: ClientSafePipeHandle
  nameWithType: AnonymousPipeServerStream.ClientSafePipeHandle
  fullName: System.IO.Pipes.AnonymousPipeServerStream.ClientSafePipeHandle
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "取得安全控制代碼<xref href=&quot;System.IO.Pipes.AnonymousPipeClientStream&quot;></xref>目前已連接到的物件<xref href=&quot;System.IO.Pipes.AnonymousPipeServerStream&quot;></xref>物件。"
  remarks: "<xref:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle%2A>後的用戶端控制代碼已傳遞至用戶端處理序，應該呼叫方法。</xref:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle%2A> 如果未呼叫此方法，<xref:System.IO.Pipes.AnonymousPipeServerStream>物件不會收到通知，當用戶端會處置其<xref:System.IO.Pipes.PipeStream>物件。</xref:System.IO.Pipes.PipeStream> </xref:System.IO.Pipes.AnonymousPipeServerStream>"
  syntax:
    content: public Microsoft.Win32.SafeHandles.SafePipeHandle ClientSafePipeHandle { get; }
    return:
      type: Microsoft.Win32.SafeHandles.SafePipeHandle
      description: "控制代碼<xref href=&quot;System.IO.Pipes.AnonymousPipeClientStream&quot;></xref>目前已連接到的物件<xref href=&quot;System.IO.Pipes.AnonymousPipeServerStream&quot;></xref>物件。"
  overload: System.IO.Pipes.AnonymousPipeServerStream.ClientSafePipeHandle*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.AnonymousPipeServerStream.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.IO.Pipes.AnonymousPipeServerStream
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: AnonymousPipeServerStream.Dispose(Boolean)
  fullName: System.IO.Pipes.AnonymousPipeServerStream.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "即將加入。"
  overload: System.IO.Pipes.AnonymousPipeServerStream.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle
  id: DisposeLocalCopyOfClientHandle
  parent: System.IO.Pipes.AnonymousPipeServerStream
  langs:
  - csharp
  name: DisposeLocalCopyOfClientHandle()
  nameWithType: AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle()
  fullName: System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle()
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "關閉本機副本<xref href=&quot;System.IO.Pipes.AnonymousPipeClientStream&quot;></xref>物件的控制代碼。"
  remarks: "已傳遞至用戶端的用戶端控制代碼之後，應該呼叫 DisposeLocalCopyOfClientHandle 方法。 如果未呼叫此方法，<xref:System.IO.Pipes.AnonymousPipeServerStream>物件不會收到通知，當用戶端會處置其<xref:System.IO.Pipes.PipeStream>物件。</xref:System.IO.Pipes.PipeStream> </xref:System.IO.Pipes.AnonymousPipeServerStream>"
  example:
  - "The following example demonstrates a way to send a string from a parent process to a child process by using anonymous pipes. In this example, an <xref:System.IO.Pipes.AnonymousPipeServerStream> object is created in a parent process with a <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection>.  \n  \n [!code-cs[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/add/codesnippet/csharp/m-system.io.pipes.anonym_1_1.cs)]\n [!code-vb[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/add/codesnippet/visualbasic/m-system.io.pipes.anonym_1_1.vb)]\n [!code-cpp[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/add/codesnippet/cpp/m-system.io.pipes.anonym_1_1.cpp)]"
  syntax:
    content: public void DisposeLocalCopyOfClientHandle ();
    parameters: []
  overload: System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.AnonymousPipeServerStream.Finalize
  id: Finalize
  parent: System.IO.Pipes.AnonymousPipeServerStream
  langs:
  - csharp
  name: Finalize()
  nameWithType: AnonymousPipeServerStream.Finalize()
  fullName: System.IO.Pipes.AnonymousPipeServerStream.Finalize()
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "釋出 unmanaged 的資源並執行其他清除作業之前<xref href=&quot;System.IO.Pipes.AnonymousPipeServerStream&quot;></xref>執行個體回收進行回收。"
  syntax:
    content: ~AnonymousPipeServerStream ();
    parameters: []
  overload: System.IO.Pipes.AnonymousPipeServerStream.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.AnonymousPipeServerStream.GetClientHandleAsString
  id: GetClientHandleAsString
  parent: System.IO.Pipes.AnonymousPipeServerStream
  langs:
  - csharp
  name: GetClientHandleAsString()
  nameWithType: AnonymousPipeServerStream.GetClientHandleAsString()
  fullName: System.IO.Pipes.AnonymousPipeServerStream.GetClientHandleAsString()
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "取得已連接<xref href=&quot;System.IO.Pipes.AnonymousPipeClientStream&quot;></xref>做為字串的物件控制代碼。"
  remarks: "<xref:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle%2A>後的用戶端控制代碼已傳遞至用戶端處理序，應該呼叫方法。</xref:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle%2A> 如果未呼叫此方法，<xref:System.IO.Pipes.AnonymousPipeServerStream>物件不會收到通知，當用戶端會處置其<xref:System.IO.Pipes.PipeStream>物件。</xref:System.IO.Pipes.PipeStream> </xref:System.IO.Pipes.AnonymousPipeServerStream>"
  example:
  - "The following example demonstrates a way to send a string from a parent process to a child process by using anonymous pipes. In this example, an <xref:System.IO.Pipes.AnonymousPipeServerStream> object is created in a parent process with a <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection>.  \n  \n [!code-cs[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/add/codesnippet/csharp/m-system.io.pipes.anonym_2_1.cs)]\n [!code-vb[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/add/codesnippet/visualbasic/m-system.io.pipes.anonym_2_1.vb)]\n [!code-cpp[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/add/codesnippet/cpp/m-system.io.pipes.anonym_2_1.cpp)]"
  syntax:
    content: public string GetClientHandleAsString ();
    parameters: []
    return:
      type: System.String
      description: "字串，表示已連接<xref href=&quot;System.IO.Pipes.AnonymousPipeClientStream&quot;></xref>物件的控制代碼。"
  overload: System.IO.Pipes.AnonymousPipeServerStream.GetClientHandleAsString*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.AnonymousPipeServerStream.ReadMode
  id: ReadMode
  parent: System.IO.Pipes.AnonymousPipeServerStream
  langs:
  - csharp
  name: ReadMode
  nameWithType: AnonymousPipeServerStream.ReadMode
  fullName: System.IO.Pipes.AnonymousPipeServerStream.ReadMode
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "設定的讀取模式<xref href=&quot;System.IO.Pipes.AnonymousPipeServerStream&quot;></xref>物件。 必須是匿名的管道傳輸模式<xref href=&quot;System.IO.Pipes.PipeTransmissionMode&quot;> </xref>。"
  remarks: "不支援匿名管道<xref:System.IO.Pipes.PipeTransmissionMode>讀取模式。</xref:System.IO.Pipes.PipeTransmissionMode>"
  example:
  - "The following example demonstrates a way to send a string from a parent process to a child process by using anonymous pipes. In this example, the <xref:System.NotSupportedException> is caught when the ReadMode property is set to <xref:System.IO.Pipes.PipeTransmissionMode>.  \n  \n [!code-cs[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/add/codesnippet/csharp/p-system.io.pipes.anonym_1_1.cs)]\n [!code-vb[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/add/codesnippet/visualbasic/p-system.io.pipes.anonym_1_1.vb)]\n [!code-cpp[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/add/codesnippet/cpp/p-system.io.pipes.anonym_1_1.cpp)]"
  syntax:
    content: public override System.IO.Pipes.PipeTransmissionMode ReadMode { set; }
    return:
      type: System.IO.Pipes.PipeTransmissionMode
      description: "讀取模式<xref href=&quot;System.IO.Pipes.AnonymousPipeServerStream&quot;></xref>物件。"
  overload: System.IO.Pipes.AnonymousPipeServerStream.ReadMode*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "傳輸模式不正確。 對於匿名管道，只有<xref href=&quot;System.IO.Pipes.PipeTransmissionMode&quot;></xref>支援。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "屬性設定為<xref href=&quot;System.IO.Pipes.PipeTransmissionMode&quot;> </xref>，不支援的匿名管道。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "連線已中斷，或另一個 I/O 錯誤，就會發生。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "管道已關閉。"
  platform:
  - net462
- uid: System.IO.Pipes.AnonymousPipeServerStream.TransmissionMode
  id: TransmissionMode
  parent: System.IO.Pipes.AnonymousPipeServerStream
  langs:
  - csharp
  name: TransmissionMode
  nameWithType: AnonymousPipeServerStream.TransmissionMode
  fullName: System.IO.Pipes.AnonymousPipeServerStream.TransmissionMode
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "取得目前管道支援的管道傳輸模式。"
  remarks: "不支援匿名管道<xref:System.IO.Pipes.PipeTransmissionMode>讀取模式。</xref:System.IO.Pipes.PipeTransmissionMode>"
  example:
  - "The following example demonstrates a way to send a string from a parent process to a child process by using anonymous pipes. In this example, an <xref:System.IO.Pipes.AnonymousPipeServerStream> object is created in a parent process and the TransmissionMode property is displayed to the console.  \n  \n [!code-cs[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/add/codesnippet/csharp/p-system.io.pipes.anonym_0_1.cs)]\n [!code-vb[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/add/codesnippet/visualbasic/p-system.io.pipes.anonym_0_1.vb)]\n [!code-cpp[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/add/codesnippet/cpp/p-system.io.pipes.anonym_0_1.cpp)]"
  syntax:
    content: public override System.IO.Pipes.PipeTransmissionMode TransmissionMode { get; }
    return:
      type: System.IO.Pipes.PipeTransmissionMode
      description: "<xref href=&quot;System.IO.Pipes.PipeTransmissionMode&quot;> </xref>目前管道支援。"
  overload: System.IO.Pipes.AnonymousPipeServerStream.TransmissionMode*
  exceptions: []
  platform:
  - net462
references:
- uid: System.IO.Pipes.PipeStream
  isExternal: false
  name: System.IO.Pipes.PipeStream
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.IO.Pipes.AnonymousPipeServerStream.#ctor
  parent: System.IO.Pipes.AnonymousPipeServerStream
  isExternal: false
  name: AnonymousPipeServerStream()
  nameWithType: AnonymousPipeServerStream.AnonymousPipeServerStream()
  fullName: System.IO.Pipes.AnonymousPipeServerStream.AnonymousPipeServerStream()
- uid: System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection)
  parent: System.IO.Pipes.AnonymousPipeServerStream
  isExternal: false
  name: AnonymousPipeServerStream(PipeDirection)
  nameWithType: AnonymousPipeServerStream.AnonymousPipeServerStream(PipeDirection)
  fullName: System.IO.Pipes.AnonymousPipeServerStream.AnonymousPipeServerStream(PipeDirection)
- uid: System.IO.Pipes.PipeDirection
  parent: System.IO.Pipes
  isExternal: false
  name: PipeDirection
  nameWithType: PipeDirection
  fullName: System.IO.Pipes.PipeDirection
- uid: System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability)
  parent: System.IO.Pipes.AnonymousPipeServerStream
  isExternal: false
  name: AnonymousPipeServerStream(PipeDirection,HandleInheritability)
  nameWithType: AnonymousPipeServerStream.AnonymousPipeServerStream(PipeDirection,HandleInheritability)
  fullName: System.IO.Pipes.AnonymousPipeServerStream.AnonymousPipeServerStream(PipeDirection,HandleInheritability)
- uid: System.IO.HandleInheritability
  parent: System.IO
  isExternal: true
  name: HandleInheritability
  nameWithType: HandleInheritability
  fullName: System.IO.HandleInheritability
- uid: System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle,Microsoft.Win32.SafeHandles.SafePipeHandle)
  parent: System.IO.Pipes.AnonymousPipeServerStream
  isExternal: false
  name: AnonymousPipeServerStream(PipeDirection,SafePipeHandle,SafePipeHandle)
  nameWithType: AnonymousPipeServerStream.AnonymousPipeServerStream(PipeDirection,SafePipeHandle,SafePipeHandle)
  fullName: System.IO.Pipes.AnonymousPipeServerStream.AnonymousPipeServerStream(PipeDirection,SafePipeHandle,SafePipeHandle)
- uid: Microsoft.Win32.SafeHandles.SafePipeHandle
  parent: Microsoft.Win32.SafeHandles
  isExternal: false
  name: SafePipeHandle
  nameWithType: SafePipeHandle
  fullName: Microsoft.Win32.SafeHandles.SafePipeHandle
- uid: System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability,System.Int32)
  parent: System.IO.Pipes.AnonymousPipeServerStream
  isExternal: false
  name: AnonymousPipeServerStream(PipeDirection,HandleInheritability,Int32)
  nameWithType: AnonymousPipeServerStream.AnonymousPipeServerStream(PipeDirection,HandleInheritability,Int32)
  fullName: System.IO.Pipes.AnonymousPipeServerStream.AnonymousPipeServerStream(PipeDirection,HandleInheritability,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability,System.Int32,System.IO.Pipes.PipeSecurity)
  parent: System.IO.Pipes.AnonymousPipeServerStream
  isExternal: false
  name: AnonymousPipeServerStream(PipeDirection,HandleInheritability,Int32,PipeSecurity)
  nameWithType: AnonymousPipeServerStream.AnonymousPipeServerStream(PipeDirection,HandleInheritability,Int32,PipeSecurity)
  fullName: System.IO.Pipes.AnonymousPipeServerStream.AnonymousPipeServerStream(PipeDirection,HandleInheritability,Int32,PipeSecurity)
- uid: System.IO.Pipes.PipeSecurity
  parent: System.IO.Pipes
  isExternal: false
  name: PipeSecurity
  nameWithType: PipeSecurity
  fullName: System.IO.Pipes.PipeSecurity
- uid: System.IO.Pipes.AnonymousPipeServerStream.ClientSafePipeHandle
  parent: System.IO.Pipes.AnonymousPipeServerStream
  isExternal: false
  name: ClientSafePipeHandle
  nameWithType: AnonymousPipeServerStream.ClientSafePipeHandle
  fullName: System.IO.Pipes.AnonymousPipeServerStream.ClientSafePipeHandle
- uid: System.IO.Pipes.AnonymousPipeServerStream.Dispose(System.Boolean)
  parent: System.IO.Pipes.AnonymousPipeServerStream
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: AnonymousPipeServerStream.Dispose(Boolean)
  fullName: System.IO.Pipes.AnonymousPipeServerStream.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle
  parent: System.IO.Pipes.AnonymousPipeServerStream
  isExternal: false
  name: DisposeLocalCopyOfClientHandle()
  nameWithType: AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle()
  fullName: System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle()
- uid: System.IO.Pipes.AnonymousPipeServerStream.Finalize
  parent: System.IO.Pipes.AnonymousPipeServerStream
  isExternal: false
  name: Finalize()
  nameWithType: AnonymousPipeServerStream.Finalize()
  fullName: System.IO.Pipes.AnonymousPipeServerStream.Finalize()
- uid: System.IO.Pipes.AnonymousPipeServerStream.GetClientHandleAsString
  parent: System.IO.Pipes.AnonymousPipeServerStream
  isExternal: false
  name: GetClientHandleAsString()
  nameWithType: AnonymousPipeServerStream.GetClientHandleAsString()
  fullName: System.IO.Pipes.AnonymousPipeServerStream.GetClientHandleAsString()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.Pipes.AnonymousPipeServerStream.ReadMode
  parent: System.IO.Pipes.AnonymousPipeServerStream
  isExternal: false
  name: ReadMode
  nameWithType: AnonymousPipeServerStream.ReadMode
  fullName: System.IO.Pipes.AnonymousPipeServerStream.ReadMode
- uid: System.IO.Pipes.PipeTransmissionMode
  parent: System.IO.Pipes
  isExternal: false
  name: PipeTransmissionMode
  nameWithType: PipeTransmissionMode
  fullName: System.IO.Pipes.PipeTransmissionMode
- uid: System.IO.Pipes.AnonymousPipeServerStream.TransmissionMode
  parent: System.IO.Pipes.AnonymousPipeServerStream
  isExternal: false
  name: TransmissionMode
  nameWithType: AnonymousPipeServerStream.TransmissionMode
  fullName: System.IO.Pipes.AnonymousPipeServerStream.TransmissionMode
- uid: System.IO.Pipes.AnonymousPipeServerStream.#ctor*
  parent: System.IO.Pipes.AnonymousPipeServerStream
  isExternal: false
  name: AnonymousPipeServerStream
  nameWithType: AnonymousPipeServerStream.AnonymousPipeServerStream
- uid: System.IO.Pipes.AnonymousPipeServerStream.ClientSafePipeHandle*
  parent: System.IO.Pipes.AnonymousPipeServerStream
  isExternal: false
  name: ClientSafePipeHandle
  nameWithType: AnonymousPipeServerStream.ClientSafePipeHandle
- uid: System.IO.Pipes.AnonymousPipeServerStream.Dispose*
  parent: System.IO.Pipes.AnonymousPipeServerStream
  isExternal: false
  name: Dispose
  nameWithType: AnonymousPipeServerStream.Dispose
- uid: System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle*
  parent: System.IO.Pipes.AnonymousPipeServerStream
  isExternal: false
  name: DisposeLocalCopyOfClientHandle
  nameWithType: AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle
- uid: System.IO.Pipes.AnonymousPipeServerStream.Finalize*
  parent: System.IO.Pipes.AnonymousPipeServerStream
  isExternal: false
  name: Finalize
  nameWithType: AnonymousPipeServerStream.Finalize
- uid: System.IO.Pipes.AnonymousPipeServerStream.GetClientHandleAsString*
  parent: System.IO.Pipes.AnonymousPipeServerStream
  isExternal: false
  name: GetClientHandleAsString
  nameWithType: AnonymousPipeServerStream.GetClientHandleAsString
- uid: System.IO.Pipes.AnonymousPipeServerStream.ReadMode*
  parent: System.IO.Pipes.AnonymousPipeServerStream
  isExternal: false
  name: ReadMode
  nameWithType: AnonymousPipeServerStream.ReadMode
- uid: System.IO.Pipes.AnonymousPipeServerStream.TransmissionMode*
  parent: System.IO.Pipes.AnonymousPipeServerStream
  isExternal: false
  name: TransmissionMode
  nameWithType: AnonymousPipeServerStream.TransmissionMode
