### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.CipherMode
  id: CipherMode
  children:
  - System.Security.Cryptography.CipherMode.CBC
  - System.Security.Cryptography.CipherMode.CFB
  - System.Security.Cryptography.CipherMode.CTS
  - System.Security.Cryptography.CipherMode.ECB
  - System.Security.Cryptography.CipherMode.OFB
  langs:
  - csharp
  name: CipherMode
  nameWithType: CipherMode
  fullName: System.Security.Cryptography.CipherMode
  type: Enum
  summary: "指定要用於加密的區塊加密模式。"
  remarks: "區塊的加密演算法加密資料以區塊為單位，而非一次的單一位元組。 最常見的區塊大小是 8 位元組。 每個區塊的處理時有很大，因為區塊密碼會提供較高層級的安全性比串流式密碼。 不過，通常比串流式密碼的放慢執行區塊的加密演算法。       區塊密碼的每個區塊，使用相同的加密演算法。 因為這個緣故，純文字區塊一定會傳回相同的加密文字加密使用相同的索引鍵和演算法。 因為此行為可以用來破解加密，加密模式會引進修改加密程序，根據先前區塊加密回饋。 產生的加密會提供比簡單的區塊加密更高的安全性層級。"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public enum CipherMode
  inheritance:
  - System.Enum
  platform:
  - net462
- uid: System.Security.Cryptography.CipherMode.CBC
  id: CBC
  parent: System.Security.Cryptography.CipherMode
  langs:
  - csharp
  name: CBC
  nameWithType: CipherMode.CBC
  fullName: System.Security.Cryptography.CipherMode.CBC
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Cipher 區塊鏈結 (<xref uid=&quot;langword_csharp_CBC&quot; name=&quot;CBC&quot; href=&quot;&quot;></xref>) 模式導入了意見反應。 每個純文字區塊會加密之前，它被結合的位元排除 OR 運算的加密文字的上一個區塊。 這可確保，即使純文字包含許多相同的區塊，他們將每個加密至不同的加密文字區塊。 初始化向量結合的第一個純文字區塊的位元排除 OR 運算的區塊加密前。 若受損的單一位元的加密文字區塊，也會受損對應的純文字區塊。 此外，後續的區塊，在相同的原始 mangled 位元位置中的位元也會受損。"
  syntax:
    content: CBC
    return:
      type: System.Security.Cryptography.CipherMode
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CipherMode.CFB
  id: CFB
  parent: System.Security.Cryptography.CipherMode
  langs:
  - csharp
  name: CFB
  nameWithType: CipherMode.CFB
  fullName: System.Security.Cryptography.CipherMode.CFB
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "加密的意見反應 (<xref uid=&quot;langword_csharp_CFB&quot; name=&quot;CFB&quot; href=&quot;&quot;></xref>) 模式將加密文字，而不是處理整個區塊一次處理少量遞增的純文字的方式。 這個模式會使用移位暫存器是一個區塊的長度，就會劃分為幾個章節。 例如，如果區塊大小為 8 個位元組，一次處理一個位元組移位暫存分成八個區段。 如果位元加密中受損文字，一個純文字位元受損，移位暫存已損毀。 這會導致下一個數個正在受損之前，不正確的位元會移出移位暫存的純文字遞增。 預設的回饋大小可能會因演算法，但通常是 8 位元或位元的區塊大小的數目。 您可以使用來改變的意見反應位元數<xref:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize*>屬性。</xref:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize*> 支援 CFB 的演算法會使用這個屬性來設定意見反應。"
  syntax:
    content: CFB
    return:
      type: System.Security.Cryptography.CipherMode
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CipherMode.CTS
  id: CTS
  parent: System.Security.Cryptography.CipherMode
  langs:
  - csharp
  name: CTS
  nameWithType: CipherMode.CTS
  fullName: System.Security.Cryptography.CipherMode.CTS
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "加密文字竊取 (<xref uid=&quot;langword_csharp_CTS&quot; name=&quot;CTS&quot; href=&quot;&quot;></xref>) 模式處理任何長度的純文字，並產生密碼的長度符合純文字長度的文字。 此模式的行為類似<xref uid=&quot;langword_csharp_CBC&quot; name=&quot;CBC&quot; href=&quot;&quot;></xref>所有的模式，但最後兩個純文字區塊。"
  syntax:
    content: CTS
    return:
      type: System.Security.Cryptography.CipherMode
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CipherMode.ECB
  id: ECB
  parent: System.Security.Cryptography.CipherMode
  langs:
  - csharp
  name: ECB
  nameWithType: CipherMode.ECB
  fullName: System.Security.Cryptography.CipherMode.ECB
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: '電子型 (<xref uid=&quot;langword_csharp_ECB&quot; name=&quot;ECB&quot; href=&quot;&quot;></xref>) 模式來個別加密每個區塊。 任何純文字區塊相同，且在相同的訊息中，或在不同的訊息加密使用相同的金鑰，將轉換成相同的加密文字區塊。 **重要**︰ 不建議這種模式，因為它會開啟多個安全性漏洞的媒體櫃門。 如果要加密的純文字包含相當多的重複，則可用於切割一次一個區塊的加密文字。 它也可用於區塊分析判斷加密金鑰。 此外，對手可以取代及交換個別區塊，而不被偵測，可讓被儲存，並插入至其他位置未偵測資料流的區塊。'
  syntax:
    content: ECB
    return:
      type: System.Security.Cryptography.CipherMode
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CipherMode.OFB
  id: OFB
  parent: System.Security.Cryptography.CipherMode
  langs:
  - csharp
  name: OFB
  nameWithType: CipherMode.OFB
  fullName: System.Security.Cryptography.CipherMode.OFB
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "輸出意見反應 (<xref uid=&quot;langword_csharp_OFB&quot; name=&quot;OFB&quot; href=&quot;&quot;></xref>) 模式將加密文字，而不是處理整個區塊一次處理少量遞增的純文字的方式。 此模式非常類似於<xref uid=&quot;langword_csharp_CFB&quot; name=&quot;CFB&quot; href=&quot;&quot;> </xref>; 只有兩種模式之間的差異是註冊排班的方式填滿。 如果一個位元加密中受損文字，也會受損純文字的對應位元。 不過，如果有多出或缺少從加密文字的位元，純文字將會受損從該點上。"
  syntax:
    content: OFB
    return:
      type: System.Security.Cryptography.CipherMode
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.Security.Cryptography.CipherMode.CBC
  parent: System.Security.Cryptography.CipherMode
  isExternal: false
  name: CBC
  nameWithType: CipherMode.CBC
  fullName: System.Security.Cryptography.CipherMode.CBC
- uid: System.Security.Cryptography.CipherMode
  parent: System.Security.Cryptography
  isExternal: false
  name: CipherMode
  nameWithType: CipherMode
  fullName: System.Security.Cryptography.CipherMode
- uid: System.Security.Cryptography.CipherMode.CFB
  parent: System.Security.Cryptography.CipherMode
  isExternal: false
  name: CFB
  nameWithType: CipherMode.CFB
  fullName: System.Security.Cryptography.CipherMode.CFB
- uid: System.Security.Cryptography.CipherMode.CTS
  parent: System.Security.Cryptography.CipherMode
  isExternal: false
  name: CTS
  nameWithType: CipherMode.CTS
  fullName: System.Security.Cryptography.CipherMode.CTS
- uid: System.Security.Cryptography.CipherMode.ECB
  parent: System.Security.Cryptography.CipherMode
  isExternal: false
  name: ECB
  nameWithType: CipherMode.ECB
  fullName: System.Security.Cryptography.CipherMode.ECB
- uid: System.Security.Cryptography.CipherMode.OFB
  parent: System.Security.Cryptography.CipherMode
  isExternal: false
  name: OFB
  nameWithType: CipherMode.OFB
  fullName: System.Security.Cryptography.CipherMode.OFB
