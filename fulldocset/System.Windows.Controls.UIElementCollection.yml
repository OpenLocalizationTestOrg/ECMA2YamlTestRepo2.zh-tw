### YamlMime:ManagedReference
items:
- uid: System.Windows.Controls.UIElementCollection
  id: UIElementCollection
  children:
  - System.Windows.Controls.UIElementCollection.#ctor(System.Windows.UIElement,System.Windows.FrameworkElement)
  - System.Windows.Controls.UIElementCollection.Add(System.Windows.UIElement)
  - System.Windows.Controls.UIElementCollection.Capacity
  - System.Windows.Controls.UIElementCollection.Clear
  - System.Windows.Controls.UIElementCollection.ClearLogicalParent(System.Windows.UIElement)
  - System.Windows.Controls.UIElementCollection.Contains(System.Windows.UIElement)
  - System.Windows.Controls.UIElementCollection.CopyTo(System.Array,System.Int32)
  - System.Windows.Controls.UIElementCollection.CopyTo(System.Windows.UIElement[],System.Int32)
  - System.Windows.Controls.UIElementCollection.Count
  - System.Windows.Controls.UIElementCollection.GetEnumerator
  - System.Windows.Controls.UIElementCollection.IndexOf(System.Windows.UIElement)
  - System.Windows.Controls.UIElementCollection.Insert(System.Int32,System.Windows.UIElement)
  - System.Windows.Controls.UIElementCollection.IsSynchronized
  - System.Windows.Controls.UIElementCollection.Item(System.Int32)
  - System.Windows.Controls.UIElementCollection.Remove(System.Windows.UIElement)
  - System.Windows.Controls.UIElementCollection.RemoveAt(System.Int32)
  - System.Windows.Controls.UIElementCollection.RemoveRange(System.Int32,System.Int32)
  - System.Windows.Controls.UIElementCollection.SetLogicalParent(System.Windows.UIElement)
  - System.Windows.Controls.UIElementCollection.SyncRoot
  - System.Windows.Controls.UIElementCollection.System#Collections#IList#Add(System.Object)
  - System.Windows.Controls.UIElementCollection.System#Collections#IList#Contains(System.Object)
  - System.Windows.Controls.UIElementCollection.System#Collections#IList#IndexOf(System.Object)
  - System.Windows.Controls.UIElementCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Windows.Controls.UIElementCollection.System#Collections#IList#IsFixedSize
  - System.Windows.Controls.UIElementCollection.System#Collections#IList#IsReadOnly
  - System.Windows.Controls.UIElementCollection.System#Collections#IList#Item(System.Int32)
  - System.Windows.Controls.UIElementCollection.System#Collections#IList#Remove(System.Object)
  langs:
  - csharp
  name: UIElementCollection
  nameWithType: UIElementCollection
  fullName: System.Windows.Controls.UIElementCollection
  type: Class
  summary: "代表已排序的集合<xref href=&quot;System.Windows.UIElement&quot;></xref>子項目。"
  remarks: "<xref:System.Windows.Controls.Panel>基底類別使用 UIElementCollection 來代表其集合的子項目。</xref:System.Windows.Controls.Panel> 方法和 UIElementCollection 所定義的屬性會影響所有的物件衍生自<xref:System.Windows.Controls.Panel>並定義一般來處理的功能集<xref:System.Windows.Controls.Panel>子項目。</xref:System.Windows.Controls.Panel> </xref:System.Windows.Controls.Panel>       UIElementCollection 都有它自己的內容 （類別） 的親和性。 您必須從主控<xref:System.Windows.Controls.Panel>.</xref:System.Windows.Controls.Panel>內容來存取集合"
  example:
  - "The following example uses the <xref:System.Windows.Controls.UIElementCollection.Add%2A> method to add child content to a parent <xref:System.Windows.Controls.StackPanel>. You do this by using the <xref:System.Windows.Controls.Panel.Children%2A> property, which is of type UIElementCollection.  \n  \n [!code-cs[UIElementCollection#1](~/add/codesnippet/csharp/ElemCollMethods/Pane1.xaml.cs#1)]"
  syntax:
    content: 'public class UIElementCollection : System.Collections.IList'
  inheritance:
  - System.Object
  implements:
  - System.Collections.IList
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Controls.UIElementCollection.#ctor(System.Windows.UIElement,System.Windows.FrameworkElement)
  id: '#ctor(System.Windows.UIElement,System.Windows.FrameworkElement)'
  parent: System.Windows.Controls.UIElementCollection
  langs:
  - csharp
  name: UIElementCollection(UIElement,FrameworkElement)
  nameWithType: UIElementCollection.UIElementCollection(UIElement,FrameworkElement)
  fullName: System.Windows.Controls.UIElementCollection.UIElementCollection(UIElement,FrameworkElement)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "初始化的新執行個體<xref href=&quot;System.Windows.Controls.UIElementCollection&quot;></xref>類別。"
  syntax:
    content: public UIElementCollection (System.Windows.UIElement visualParent, System.Windows.FrameworkElement logicalParent);
    parameters:
    - id: visualParent
      type: System.Windows.UIElement
      description: "<xref href=&quot;System.Windows.UIElement&quot;> </xref>集合的父系。"
    - id: logicalParent
      type: System.Windows.FrameworkElement
      description: "集合中項目的邏輯父代。"
  overload: System.Windows.Controls.UIElementCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.UIElementCollection.Add(System.Windows.UIElement)
  id: Add(System.Windows.UIElement)
  parent: System.Windows.Controls.UIElementCollection
  langs:
  - csharp
  name: Add(UIElement)
  nameWithType: UIElementCollection.Add(UIElement)
  fullName: System.Windows.Controls.UIElementCollection.Add(UIElement)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "將指定的項目來加入<xref href=&quot;System.Windows.Controls.UIElementCollection&quot;> </xref>。"
  remarks: ''
  example:
  - "The following example uses the Add method to add child content to a parent <xref:System.Windows.Controls.StackPanel>. You do this by using the <xref:System.Windows.Controls.Panel.Children%2A> property, which is of type <xref:System.Windows.Controls.UIElementCollection>.  \n  \n [!code-cs[UIElementCollection#1](~/add/codesnippet/csharp/ElemCollMethods/Pane1.xaml.cs#1)]"
  syntax:
    content: public virtual int Add (System.Windows.UIElement element);
    parameters:
    - id: element
      type: System.Windows.UIElement
      description: "The <xref href=&quot;System.Windows.UIElement&quot;></xref> to add."
    return:
      type: System.Int32
      description: "加入項目的索引位置。"
  overload: System.Windows.Controls.UIElementCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.UIElementCollection.Capacity
  id: Capacity
  parent: System.Windows.Controls.UIElementCollection
  langs:
  - csharp
  name: Capacity
  nameWithType: UIElementCollection.Capacity
  fullName: System.Windows.Controls.UIElementCollection.Capacity
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "取得或設定項目數目<xref href=&quot;System.Windows.Controls.UIElementCollection&quot;></xref>可以包含。"
  syntax:
    content: public virtual int Capacity { get; set; }
    return:
      type: System.Int32
      description: "集合可以包含的元素總數。"
  overload: System.Windows.Controls.UIElementCollection.Capacity*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.UIElementCollection.Clear
  id: Clear
  parent: System.Windows.Controls.UIElementCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: UIElementCollection.Clear()
  fullName: System.Windows.Controls.UIElementCollection.Clear()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "移除所有項目從<xref href=&quot;System.Windows.Controls.UIElementCollection&quot;> </xref>。"
  remarks: ''
  example:
  - "The following example uses the Clear method to clear child content from a parent <xref:System.Windows.Controls.StackPanel>. You do this by using the <xref:System.Windows.Controls.Panel.Children%2A> property, which is of type <xref:System.Windows.Controls.UIElementCollection>.  \n  \n [!code-cs[UIElementCollection#1](~/add/codesnippet/csharp/ElemCollMethods/Pane1.xaml.cs#1)]"
  syntax:
    content: public virtual void Clear ();
    parameters: []
  overload: System.Windows.Controls.UIElementCollection.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.UIElementCollection.ClearLogicalParent(System.Windows.UIElement)
  id: ClearLogicalParent(System.Windows.UIElement)
  parent: System.Windows.Controls.UIElementCollection
  langs:
  - csharp
  name: ClearLogicalParent(UIElement)
  nameWithType: UIElementCollection.ClearLogicalParent(UIElement)
  fullName: System.Windows.Controls.UIElementCollection.ClearLogicalParent(UIElement)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "清除項目的邏輯父項目離開時<xref href=&quot;System.Windows.Controls.UIElementCollection&quot;> </xref>。"
  syntax:
    content: protected void ClearLogicalParent (System.Windows.UIElement element);
    parameters:
    - id: element
      type: System.Windows.UIElement
      description: "<xref href=&quot;System.Windows.UIElement&quot;> </xref>已清除的邏輯父系。"
  overload: System.Windows.Controls.UIElementCollection.ClearLogicalParent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.UIElementCollection.Contains(System.Windows.UIElement)
  id: Contains(System.Windows.UIElement)
  parent: System.Windows.Controls.UIElementCollection
  langs:
  - csharp
  name: Contains(UIElement)
  nameWithType: UIElementCollection.Contains(UIElement)
  fullName: System.Windows.Controls.UIElementCollection.Contains(UIElement)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "判斷指定的項目是否在<xref href=&quot;System.Windows.Controls.UIElementCollection&quot;> </xref>。"
  remarks: ''
  example:
  - "The following example uses the Contains method to determine if a specific <xref:System.Windows.UIElement> exists within a <xref:System.Windows.Controls.UIElementCollection>.  \n  \n [!code-cs[UIElementCollection#10](~/add/codesnippet/csharp/ElemCollMethods/Pane1.xaml.cs#10)]\n [!code-vb[UIElementCollection#10](~/add/codesnippet/visualbasic/ElemCollMethodsVB/Pane1.xaml.vb#10)]"
  syntax:
    content: public virtual bool Contains (System.Windows.UIElement element);
    parameters:
    - id: element
      type: System.Windows.UIElement
      description: "要尋找的項目。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果指定<xref href=&quot;System.Windows.UIElement&quot;></xref>是在集合中找到則為<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Controls.UIElementCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.UIElementCollection.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Windows.Controls.UIElementCollection
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: UIElementCollection.CopyTo(Array,Int32)
  fullName: System.Windows.Controls.UIElementCollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "複製<xref href=&quot;System.Windows.UIElement&quot;></xref>從<xref href=&quot;System.Windows.Controls.UIElementCollection&quot;></xref>陣列，指定的索引位置開始。"
  syntax:
    content: public virtual void CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "陣列，集合複製到其中。"
    - id: index
      type: System.Int32
      description: "索引位置的項目開始複製的位置。"
  overload: System.Windows.Controls.UIElementCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.UIElementCollection.CopyTo(System.Windows.UIElement[],System.Int32)
  id: CopyTo(System.Windows.UIElement[],System.Int32)
  parent: System.Windows.Controls.UIElementCollection
  langs:
  - csharp
  name: CopyTo(UIElement[],Int32)
  nameWithType: UIElementCollection.CopyTo(UIElement[],Int32)
  fullName: System.Windows.Controls.UIElementCollection.CopyTo(UIElement[],Int32)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "複製<xref href=&quot;System.Windows.UIElement&quot;></xref>從<xref href=&quot;System.Windows.Controls.UIElementCollection&quot;></xref>陣列，指定的索引位置開始。"
  syntax:
    content: public virtual void CopyTo (System.Windows.UIElement[] array, int index);
    parameters:
    - id: array
      type: System.Windows.UIElement[]
      description: "陣列<xref href=&quot;System.Windows.UIElement&quot;></xref>物件。"
    - id: index
      type: System.Int32
      description: "索引位置的項目開始複製的位置。"
  overload: System.Windows.Controls.UIElementCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.UIElementCollection.Count
  id: Count
  parent: System.Windows.Controls.UIElementCollection
  langs:
  - csharp
  name: Count
  nameWithType: UIElementCollection.Count
  fullName: System.Windows.Controls.UIElementCollection.Count
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "集合中取得項目的實際數目。"
  remarks: ''
  example:
  - "The following example uses the Count property to count the number of child elements in a <xref:System.Windows.Controls.UIElementCollection>.  \n  \n [!code-cs[UIElementCollection#12](~/add/codesnippet/csharp/ElemCollMethods/Pane1.xaml.cs#12)]"
  syntax:
    content: public virtual int Count { get; }
    return:
      type: System.Int32
      description: "集合中項目的實際數目。"
  overload: System.Windows.Controls.UIElementCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.UIElementCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Windows.Controls.UIElementCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: UIElementCollection.GetEnumerator()
  fullName: System.Windows.Controls.UIElementCollection.GetEnumerator()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "傳回可逐一查看的列舉值<xref href=&quot;System.Windows.Controls.UIElementCollection&quot;> </xref>。"
  syntax:
    content: public virtual System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "<xref:System.Collections.IEnumerator>，可以列出此集合的成員。</xref:System.Collections.IEnumerator>"
  overload: System.Windows.Controls.UIElementCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.UIElementCollection.IndexOf(System.Windows.UIElement)
  id: IndexOf(System.Windows.UIElement)
  parent: System.Windows.Controls.UIElementCollection
  langs:
  - csharp
  name: IndexOf(UIElement)
  nameWithType: UIElementCollection.IndexOf(UIElement)
  fullName: System.Windows.Controls.UIElementCollection.IndexOf(UIElement)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "傳回指定的項目中的索引位置<xref href=&quot;System.Windows.Controls.UIElementCollection&quot;> </xref>。"
  remarks: ''
  example:
  - "The following example finds the index position of a <xref:System.Windows.UIElement> within a <xref:System.Windows.Controls.UIElementCollection>.  \n  \n [!code-xml[UIElementCollectionIndexOf#1](~/add/codesnippet/xaml/UIElementCollection_IndexOf/Default.xaml#1)]  \n  \n ...  \n  \n [!code-vb[UIElementCollectionIndexOf#2](~/add/codesnippet/visualbasic/UIElementCollection_IndexOf_vb/default.xaml.vb#2)]\n [!code-cs[UIElementCollectionIndexOf#2](~/add/codesnippet/csharp/UIElementCollection_IndexOf/default.xaml.cs#2)]"
  syntax:
    content: public virtual int IndexOf (System.Windows.UIElement element);
    parameters:
    - id: element
      type: System.Windows.UIElement
      description: "其索引位置是必要項目。"
    return:
      type: System.Int32
      description: "項目的索引位置。  如果此項目不在集合中的-1。"
  overload: System.Windows.Controls.UIElementCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.UIElementCollection.Insert(System.Int32,System.Windows.UIElement)
  id: Insert(System.Int32,System.Windows.UIElement)
  parent: System.Windows.Controls.UIElementCollection
  langs:
  - csharp
  name: Insert(Int32,UIElement)
  nameWithType: UIElementCollection.Insert(Int32,UIElement)
  fullName: System.Windows.Controls.UIElementCollection.Insert(Int32,UIElement)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "將插入的項目插入<xref href=&quot;System.Windows.Controls.UIElementCollection&quot;></xref>中位於指定的索引位置。"
  remarks: ''
  example:
  - "The following example uses the Insert method to insert child content at a specified index position.  \n  \n [!code-cs[UIElementCollection#5](~/add/codesnippet/csharp/ElemCollMethods/Pane1.xaml.cs#5)]"
  syntax:
    content: public virtual void Insert (int index, System.Windows.UIElement element);
    parameters:
    - id: index
      type: System.Int32
      description: "要插入項目的索引位置。"
    - id: element
      type: System.Windows.UIElement
      description: "要插入的項目<xref href=&quot;System.Windows.Controls.UIElementCollection&quot;> </xref>。"
  overload: System.Windows.Controls.UIElementCollection.Insert*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.UIElementCollection.IsSynchronized
  id: IsSynchronized
  parent: System.Windows.Controls.UIElementCollection
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: UIElementCollection.IsSynchronized
  fullName: System.Windows.Controls.UIElementCollection.IsSynchronized
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "取得值，指出是否存取<xref:System.Collections.ICollection>介面為同步 （安全執行緒）。</xref:System.Collections.ICollection>"
  syntax:
    content: public virtual bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果對集合的存取會同步處理。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Controls.UIElementCollection.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.UIElementCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Windows.Controls.UIElementCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: UIElementCollection.Item(Int32)
  fullName: System.Windows.Controls.UIElementCollection.Item(Int32)
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "取得或設定<xref href=&quot;System.Windows.UIElement&quot;></xref>的以零為起始的索引位置儲存<xref href=&quot;System.Windows.Controls.UIElementCollection&quot;> </xref>。"
  remarks: ''
  example:
  - "The following example uses the Item property to identify the child element at a specified index position.  \n  \n [!code-cs[UIElementCollection#11](~/add/codesnippet/csharp/ElemCollMethods/Pane1.xaml.cs#11)]"
  syntax:
    content: public virtual System.Windows.UIElement this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "索引位置<xref href=&quot;System.Windows.UIElement&quot;> </xref>。"
    return:
      type: System.Windows.UIElement
      description: "A <xref href=&quot;System.Windows.UIElement&quot;> </xref>位於指定<code> index </code>位置。"
  overload: System.Windows.Controls.UIElementCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.UIElementCollection.Remove(System.Windows.UIElement)
  id: Remove(System.Windows.UIElement)
  parent: System.Windows.Controls.UIElementCollection
  langs:
  - csharp
  name: Remove(UIElement)
  nameWithType: UIElementCollection.Remove(UIElement)
  fullName: System.Windows.Controls.UIElementCollection.Remove(UIElement)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "移除指定的項目從<xref href=&quot;System.Windows.Controls.UIElementCollection&quot;> </xref>。"
  syntax:
    content: public virtual void Remove (System.Windows.UIElement element);
    parameters:
    - id: element
      type: System.Windows.UIElement
      description: "要從集合中移除的項目。"
  overload: System.Windows.Controls.UIElementCollection.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.UIElementCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Windows.Controls.UIElementCollection
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: UIElementCollection.RemoveAt(Int32)
  fullName: System.Windows.Controls.UIElementCollection.RemoveAt(Int32)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "移除<xref href=&quot;System.Windows.UIElement&quot;></xref>指定索引處。"
  remarks: ''
  example:
  - "The following example uses the RemoveAt method to remove child content at a specified index position.  \n  \n [!code-cs[UIElementCollection#7](~/add/codesnippet/csharp/ElemCollMethods/Pane1.xaml.cs#7)]"
  syntax:
    content: public virtual void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "索引<xref href=&quot;System.Windows.UIElement&quot;></xref>您想要移除。"
  overload: System.Windows.Controls.UIElementCollection.RemoveAt*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.UIElementCollection.RemoveRange(System.Int32,System.Int32)
  id: RemoveRange(System.Int32,System.Int32)
  parent: System.Windows.Controls.UIElementCollection
  langs:
  - csharp
  name: RemoveRange(Int32,Int32)
  nameWithType: UIElementCollection.RemoveRange(Int32,Int32)
  fullName: System.Windows.Controls.UIElementCollection.RemoveRange(Int32,Int32)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "移除一個範圍的項目從<xref href=&quot;System.Windows.Controls.UIElementCollection&quot;> </xref>。"
  syntax:
    content: public virtual void RemoveRange (int index, int count);
    parameters:
    - id: index
      type: System.Int32
      description: "索引位置的項目開始移除。"
    - id: count
      type: System.Int32
      description: "若要移除的項目數目。"
  overload: System.Windows.Controls.UIElementCollection.RemoveRange*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.UIElementCollection.SetLogicalParent(System.Windows.UIElement)
  id: SetLogicalParent(System.Windows.UIElement)
  parent: System.Windows.Controls.UIElementCollection
  langs:
  - csharp
  name: SetLogicalParent(UIElement)
  nameWithType: UIElementCollection.SetLogicalParent(UIElement)
  fullName: System.Windows.Controls.UIElementCollection.SetLogicalParent(UIElement)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "設定中項目的邏輯父代<xref href=&quot;System.Windows.Controls.UIElementCollection&quot;> </xref>。"
  syntax:
    content: protected void SetLogicalParent (System.Windows.UIElement element);
    parameters:
    - id: element
      type: System.Windows.UIElement
      description: "<xref href=&quot;System.Windows.UIElement&quot;> </xref>設定邏輯父代。"
  overload: System.Windows.Controls.UIElementCollection.SetLogicalParent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.UIElementCollection.SyncRoot
  id: SyncRoot
  parent: System.Windows.Controls.UIElementCollection
  langs:
  - csharp
  name: SyncRoot
  nameWithType: UIElementCollection.SyncRoot
  fullName: System.Windows.Controls.UIElementCollection.SyncRoot
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "取得物件，可用來同步處理存取具備<xref:System.Collections.ICollection>介面。</xref:System.Collections.ICollection>"
  syntax:
    content: public virtual object SyncRoot { get; }
    return:
      type: System.Object
      description: "<xref:System.Object>您可以使用以同步存取<xref:System.Collections.ICollection>介面。</xref:System.Collections.ICollection></xref:System.Object>"
  overload: System.Windows.Controls.UIElementCollection.SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.UIElementCollection.System#Collections#IList#Add(System.Object)
  id: System#Collections#IList#Add(System.Object)
  isEii: true
  parent: System.Windows.Controls.UIElementCollection
  langs:
  - csharp
  name: System.Collections.IList.Add(Object)
  nameWithType: UIElementCollection.System.Collections.IList.Add(Object)
  fullName: System.Windows.Controls.UIElementCollection.System.Collections.IList.Add(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "這個類型或成員支援[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]基礎結構，不適合直接從您的程式碼使用。 如需這個成員的說明，請參閱<xref:System.Collections.IList.Add*>.</xref:System.Collections.IList.Add*>"
  syntax:
    content: int IList.Add (object value);
    parameters:
    - id: value
      type: System.Object
      description: "要加入的物件。"
    return:
      type: System.Int32
      description: "插入新項目的位置。"
  overload: System.Windows.Controls.UIElementCollection.System#Collections#IList#Add*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.UIElementCollection.System#Collections#IList#Contains(System.Object)
  id: System#Collections#IList#Contains(System.Object)
  isEii: true
  parent: System.Windows.Controls.UIElementCollection
  langs:
  - csharp
  name: System.Collections.IList.Contains(Object)
  nameWithType: UIElementCollection.System.Collections.IList.Contains(Object)
  fullName: System.Windows.Controls.UIElementCollection.System.Collections.IList.Contains(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "這個類型或成員支援[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]基礎結構，不適合直接從您的程式碼使用。 如需這個成員的說明，請參閱<xref:System.Collections.IList.Contains*>.</xref:System.Collections.IList.Contains*>"
  syntax:
    content: bool IList.Contains (object value);
    parameters:
    - id: value
      type: System.Object
      description: "要在清單中尋找的物件。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果在清單中; 找不到物件否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Controls.UIElementCollection.System#Collections#IList#Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.UIElementCollection.System#Collections#IList#IndexOf(System.Object)
  id: System#Collections#IList#IndexOf(System.Object)
  isEii: true
  parent: System.Windows.Controls.UIElementCollection
  langs:
  - csharp
  name: System.Collections.IList.IndexOf(Object)
  nameWithType: UIElementCollection.System.Collections.IList.IndexOf(Object)
  fullName: System.Windows.Controls.UIElementCollection.System.Collections.IList.IndexOf(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "這個類型或成員支援[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]基礎結構，不適合直接從您的程式碼使用。 如需這個成員的說明，請參閱<xref:System.Collections.IList.IndexOf*>.</xref:System.Collections.IList.IndexOf*>"
  syntax:
    content: int IList.IndexOf (object value);
    parameters:
    - id: value
      type: System.Object
      description: "要在清單中尋找的物件。"
    return:
      type: System.Int32
      description: "索引<code> value </code>如果在清單中找到則為-1。"
  overload: System.Windows.Controls.UIElementCollection.System#Collections#IList#IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.UIElementCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  id: System#Collections#IList#Insert(System.Int32,System.Object)
  isEii: true
  parent: System.Windows.Controls.UIElementCollection
  langs:
  - csharp
  name: System.Collections.IList.Insert(Int32,Object)
  nameWithType: UIElementCollection.System.Collections.IList.Insert(Int32,Object)
  fullName: System.Windows.Controls.UIElementCollection.System.Collections.IList.Insert(Int32,Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "這個類型或成員支援[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]基礎結構，不適合直接從您的程式碼使用。 如需這個成員的說明，請參閱<xref:System.Collections.IList.Insert*>.</xref:System.Collections.IList.Insert*>"
  syntax:
    content: void IList.Insert (int index, object value);
    parameters:
    - id: index
      type: System.Int32
      description: "以零為起始的索引處`value`應該插入。"
    - id: value
      type: System.Object
      description: "要插入清單的物件。"
  overload: System.Windows.Controls.UIElementCollection.System#Collections#IList#Insert*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.UIElementCollection.System#Collections#IList#IsFixedSize
  id: System#Collections#IList#IsFixedSize
  isEii: true
  parent: System.Windows.Controls.UIElementCollection
  langs:
  - csharp
  name: System.Collections.IList.IsFixedSize
  nameWithType: UIElementCollection.System.Collections.IList.IsFixedSize
  fullName: System.Windows.Controls.UIElementCollection.System.Collections.IList.IsFixedSize
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "這個類型或成員支援[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]基礎結構，不適合直接從您的程式碼使用。 如需這個成員的說明，請參閱<xref:System.Collections.IList.IsFixedSize*>.</xref:System.Collections.IList.IsFixedSize*>"
  syntax:
    content: bool System.Collections.IList.IsFixedSize { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果清單有固定的大小。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Controls.UIElementCollection.System#Collections#IList#IsFixedSize*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.UIElementCollection.System#Collections#IList#IsReadOnly
  id: System#Collections#IList#IsReadOnly
  isEii: true
  parent: System.Windows.Controls.UIElementCollection
  langs:
  - csharp
  name: System.Collections.IList.IsReadOnly
  nameWithType: UIElementCollection.System.Collections.IList.IsReadOnly
  fullName: System.Windows.Controls.UIElementCollection.System.Collections.IList.IsReadOnly
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "這個類型或成員支援[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]基礎結構，不適合直接從您的程式碼使用。 如需這個成員的說明，請參閱<xref:System.Collections.IList.IsReadOnly*>.</xref:System.Collections.IList.IsReadOnly*>"
  syntax:
    content: bool System.Collections.IList.IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果清單是唯讀的。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Controls.UIElementCollection.System#Collections#IList#IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.UIElementCollection.System#Collections#IList#Item(System.Int32)
  id: System#Collections#IList#Item(System.Int32)
  isEii: true
  parent: System.Windows.Controls.UIElementCollection
  langs:
  - csharp
  name: System.Collections.IList.Item(Int32)
  nameWithType: UIElementCollection.System.Collections.IList.Item(Int32)
  fullName: System.Windows.Controls.UIElementCollection.System.Collections.IList.Item(Int32)
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "這個類型或成員支援[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]基礎結構，不適合直接從您的程式碼使用。 如需這個成員的說明，請參閱<xref:System.Collections.IList.Item*>.</xref:System.Collections.IList.Item*>"
  syntax:
    content: object System.Collections.IList.Item[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "取得或設定項目之以零為起始的索引。"
    return:
      type: System.Object
      description: "指定索引處的項目。"
  overload: System.Windows.Controls.UIElementCollection.System#Collections#IList#Item*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.UIElementCollection.System#Collections#IList#Remove(System.Object)
  id: System#Collections#IList#Remove(System.Object)
  isEii: true
  parent: System.Windows.Controls.UIElementCollection
  langs:
  - csharp
  name: System.Collections.IList.Remove(Object)
  nameWithType: UIElementCollection.System.Collections.IList.Remove(Object)
  fullName: System.Windows.Controls.UIElementCollection.System.Collections.IList.Remove(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "這個類型或成員支援[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]基礎結構，不適合直接從您的程式碼使用。 如需這個成員的說明，請參閱<xref:System.Collections.IList.Remove*>.</xref:System.Collections.IList.Remove*>"
  syntax:
    content: void IList.Remove (object value);
    parameters:
    - id: value
      type: System.Object
      description: "要從清單中移除的物件。"
  overload: System.Windows.Controls.UIElementCollection.System#Collections#IList#Remove*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Windows.Controls.UIElementCollection.#ctor(System.Windows.UIElement,System.Windows.FrameworkElement)
  parent: System.Windows.Controls.UIElementCollection
  isExternal: false
  name: UIElementCollection(UIElement,FrameworkElement)
  nameWithType: UIElementCollection.UIElementCollection(UIElement,FrameworkElement)
  fullName: System.Windows.Controls.UIElementCollection.UIElementCollection(UIElement,FrameworkElement)
- uid: System.Windows.UIElement
  parent: System.Windows
  isExternal: false
  name: UIElement
  nameWithType: UIElement
  fullName: System.Windows.UIElement
- uid: System.Windows.FrameworkElement
  parent: System.Windows
  isExternal: false
  name: FrameworkElement
  nameWithType: FrameworkElement
  fullName: System.Windows.FrameworkElement
- uid: System.Windows.Controls.UIElementCollection.Add(System.Windows.UIElement)
  parent: System.Windows.Controls.UIElementCollection
  isExternal: false
  name: Add(UIElement)
  nameWithType: UIElementCollection.Add(UIElement)
  fullName: System.Windows.Controls.UIElementCollection.Add(UIElement)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Controls.UIElementCollection.Capacity
  parent: System.Windows.Controls.UIElementCollection
  isExternal: false
  name: Capacity
  nameWithType: UIElementCollection.Capacity
  fullName: System.Windows.Controls.UIElementCollection.Capacity
- uid: System.Windows.Controls.UIElementCollection.Clear
  parent: System.Windows.Controls.UIElementCollection
  isExternal: false
  name: Clear()
  nameWithType: UIElementCollection.Clear()
  fullName: System.Windows.Controls.UIElementCollection.Clear()
- uid: System.Windows.Controls.UIElementCollection.ClearLogicalParent(System.Windows.UIElement)
  parent: System.Windows.Controls.UIElementCollection
  isExternal: false
  name: ClearLogicalParent(UIElement)
  nameWithType: UIElementCollection.ClearLogicalParent(UIElement)
  fullName: System.Windows.Controls.UIElementCollection.ClearLogicalParent(UIElement)
- uid: System.Windows.Controls.UIElementCollection.Contains(System.Windows.UIElement)
  parent: System.Windows.Controls.UIElementCollection
  isExternal: false
  name: Contains(UIElement)
  nameWithType: UIElementCollection.Contains(UIElement)
  fullName: System.Windows.Controls.UIElementCollection.Contains(UIElement)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Controls.UIElementCollection.CopyTo(System.Array,System.Int32)
  parent: System.Windows.Controls.UIElementCollection
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: UIElementCollection.CopyTo(Array,Int32)
  fullName: System.Windows.Controls.UIElementCollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Windows.Controls.UIElementCollection.CopyTo(System.Windows.UIElement[],System.Int32)
  parent: System.Windows.Controls.UIElementCollection
  isExternal: false
  name: CopyTo(UIElement[],Int32)
  nameWithType: UIElementCollection.CopyTo(UIElement[],Int32)
  fullName: System.Windows.Controls.UIElementCollection.CopyTo(UIElement[],Int32)
- uid: System.Windows.UIElement[]
  parent: System.Windows
  isExternal: false
  name: UIElement
  nameWithType: UIElement
  fullName: System.Windows.UIElement[]
  spec.csharp:
  - uid: System.Windows.UIElement
    name: UIElement
    nameWithType: UIElement
    fullName: UIElement[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Controls.UIElementCollection.Count
  parent: System.Windows.Controls.UIElementCollection
  isExternal: false
  name: Count
  nameWithType: UIElementCollection.Count
  fullName: System.Windows.Controls.UIElementCollection.Count
- uid: System.Windows.Controls.UIElementCollection.GetEnumerator
  parent: System.Windows.Controls.UIElementCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: UIElementCollection.GetEnumerator()
  fullName: System.Windows.Controls.UIElementCollection.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Windows.Controls.UIElementCollection.IndexOf(System.Windows.UIElement)
  parent: System.Windows.Controls.UIElementCollection
  isExternal: false
  name: IndexOf(UIElement)
  nameWithType: UIElementCollection.IndexOf(UIElement)
  fullName: System.Windows.Controls.UIElementCollection.IndexOf(UIElement)
- uid: System.Windows.Controls.UIElementCollection.Insert(System.Int32,System.Windows.UIElement)
  parent: System.Windows.Controls.UIElementCollection
  isExternal: false
  name: Insert(Int32,UIElement)
  nameWithType: UIElementCollection.Insert(Int32,UIElement)
  fullName: System.Windows.Controls.UIElementCollection.Insert(Int32,UIElement)
- uid: System.Windows.Controls.UIElementCollection.IsSynchronized
  parent: System.Windows.Controls.UIElementCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: UIElementCollection.IsSynchronized
  fullName: System.Windows.Controls.UIElementCollection.IsSynchronized
- uid: System.Windows.Controls.UIElementCollection.Item(System.Int32)
  parent: System.Windows.Controls.UIElementCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: UIElementCollection.Item(Int32)
  fullName: System.Windows.Controls.UIElementCollection.Item(Int32)
- uid: System.Windows.Controls.UIElementCollection.Remove(System.Windows.UIElement)
  parent: System.Windows.Controls.UIElementCollection
  isExternal: false
  name: Remove(UIElement)
  nameWithType: UIElementCollection.Remove(UIElement)
  fullName: System.Windows.Controls.UIElementCollection.Remove(UIElement)
- uid: System.Windows.Controls.UIElementCollection.RemoveAt(System.Int32)
  parent: System.Windows.Controls.UIElementCollection
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: UIElementCollection.RemoveAt(Int32)
  fullName: System.Windows.Controls.UIElementCollection.RemoveAt(Int32)
- uid: System.Windows.Controls.UIElementCollection.RemoveRange(System.Int32,System.Int32)
  parent: System.Windows.Controls.UIElementCollection
  isExternal: false
  name: RemoveRange(Int32,Int32)
  nameWithType: UIElementCollection.RemoveRange(Int32,Int32)
  fullName: System.Windows.Controls.UIElementCollection.RemoveRange(Int32,Int32)
- uid: System.Windows.Controls.UIElementCollection.SetLogicalParent(System.Windows.UIElement)
  parent: System.Windows.Controls.UIElementCollection
  isExternal: false
  name: SetLogicalParent(UIElement)
  nameWithType: UIElementCollection.SetLogicalParent(UIElement)
  fullName: System.Windows.Controls.UIElementCollection.SetLogicalParent(UIElement)
- uid: System.Windows.Controls.UIElementCollection.SyncRoot
  parent: System.Windows.Controls.UIElementCollection
  isExternal: false
  name: SyncRoot
  nameWithType: UIElementCollection.SyncRoot
  fullName: System.Windows.Controls.UIElementCollection.SyncRoot
- uid: System.Windows.Controls.UIElementCollection.System#Collections#IList#Add(System.Object)
  parent: System.Windows.Controls.UIElementCollection
  isExternal: false
  name: System.Collections.IList.Add(Object)
  nameWithType: UIElementCollection.System.Collections.IList.Add(Object)
  fullName: System.Windows.Controls.UIElementCollection.System.Collections.IList.Add(Object)
- uid: System.Windows.Controls.UIElementCollection.System#Collections#IList#Contains(System.Object)
  parent: System.Windows.Controls.UIElementCollection
  isExternal: false
  name: System.Collections.IList.Contains(Object)
  nameWithType: UIElementCollection.System.Collections.IList.Contains(Object)
  fullName: System.Windows.Controls.UIElementCollection.System.Collections.IList.Contains(Object)
- uid: System.Windows.Controls.UIElementCollection.System#Collections#IList#IndexOf(System.Object)
  parent: System.Windows.Controls.UIElementCollection
  isExternal: false
  name: System.Collections.IList.IndexOf(Object)
  nameWithType: UIElementCollection.System.Collections.IList.IndexOf(Object)
  fullName: System.Windows.Controls.UIElementCollection.System.Collections.IList.IndexOf(Object)
- uid: System.Windows.Controls.UIElementCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  parent: System.Windows.Controls.UIElementCollection
  isExternal: false
  name: System.Collections.IList.Insert(Int32,Object)
  nameWithType: UIElementCollection.System.Collections.IList.Insert(Int32,Object)
  fullName: System.Windows.Controls.UIElementCollection.System.Collections.IList.Insert(Int32,Object)
- uid: System.Windows.Controls.UIElementCollection.System#Collections#IList#IsFixedSize
  parent: System.Windows.Controls.UIElementCollection
  isExternal: false
  name: System.Collections.IList.IsFixedSize
  nameWithType: UIElementCollection.System.Collections.IList.IsFixedSize
  fullName: System.Windows.Controls.UIElementCollection.System.Collections.IList.IsFixedSize
- uid: System.Windows.Controls.UIElementCollection.System#Collections#IList#IsReadOnly
  parent: System.Windows.Controls.UIElementCollection
  isExternal: false
  name: System.Collections.IList.IsReadOnly
  nameWithType: UIElementCollection.System.Collections.IList.IsReadOnly
  fullName: System.Windows.Controls.UIElementCollection.System.Collections.IList.IsReadOnly
- uid: System.Windows.Controls.UIElementCollection.System#Collections#IList#Item(System.Int32)
  parent: System.Windows.Controls.UIElementCollection
  isExternal: false
  name: System.Collections.IList.Item(Int32)
  nameWithType: UIElementCollection.System.Collections.IList.Item(Int32)
  fullName: System.Windows.Controls.UIElementCollection.System.Collections.IList.Item(Int32)
- uid: System.Windows.Controls.UIElementCollection.System#Collections#IList#Remove(System.Object)
  parent: System.Windows.Controls.UIElementCollection
  isExternal: false
  name: System.Collections.IList.Remove(Object)
  nameWithType: UIElementCollection.System.Collections.IList.Remove(Object)
  fullName: System.Windows.Controls.UIElementCollection.System.Collections.IList.Remove(Object)
- uid: System.Windows.Controls.UIElementCollection.#ctor*
  parent: System.Windows.Controls.UIElementCollection
  isExternal: false
  name: UIElementCollection
  nameWithType: UIElementCollection.UIElementCollection
- uid: System.Windows.Controls.UIElementCollection.Add*
  parent: System.Windows.Controls.UIElementCollection
  isExternal: false
  name: Add
  nameWithType: UIElementCollection.Add
- uid: System.Windows.Controls.UIElementCollection.Capacity*
  parent: System.Windows.Controls.UIElementCollection
  isExternal: false
  name: Capacity
  nameWithType: UIElementCollection.Capacity
- uid: System.Windows.Controls.UIElementCollection.Clear*
  parent: System.Windows.Controls.UIElementCollection
  isExternal: false
  name: Clear
  nameWithType: UIElementCollection.Clear
- uid: System.Windows.Controls.UIElementCollection.ClearLogicalParent*
  parent: System.Windows.Controls.UIElementCollection
  isExternal: false
  name: ClearLogicalParent
  nameWithType: UIElementCollection.ClearLogicalParent
- uid: System.Windows.Controls.UIElementCollection.Contains*
  parent: System.Windows.Controls.UIElementCollection
  isExternal: false
  name: Contains
  nameWithType: UIElementCollection.Contains
- uid: System.Windows.Controls.UIElementCollection.CopyTo*
  parent: System.Windows.Controls.UIElementCollection
  isExternal: false
  name: CopyTo
  nameWithType: UIElementCollection.CopyTo
- uid: System.Windows.Controls.UIElementCollection.Count*
  parent: System.Windows.Controls.UIElementCollection
  isExternal: false
  name: Count
  nameWithType: UIElementCollection.Count
- uid: System.Windows.Controls.UIElementCollection.GetEnumerator*
  parent: System.Windows.Controls.UIElementCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: UIElementCollection.GetEnumerator
- uid: System.Windows.Controls.UIElementCollection.IndexOf*
  parent: System.Windows.Controls.UIElementCollection
  isExternal: false
  name: IndexOf
  nameWithType: UIElementCollection.IndexOf
- uid: System.Windows.Controls.UIElementCollection.Insert*
  parent: System.Windows.Controls.UIElementCollection
  isExternal: false
  name: Insert
  nameWithType: UIElementCollection.Insert
- uid: System.Windows.Controls.UIElementCollection.IsSynchronized*
  parent: System.Windows.Controls.UIElementCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: UIElementCollection.IsSynchronized
- uid: System.Windows.Controls.UIElementCollection.Item*
  parent: System.Windows.Controls.UIElementCollection
  isExternal: false
  name: Item
  nameWithType: UIElementCollection.Item
- uid: System.Windows.Controls.UIElementCollection.Remove*
  parent: System.Windows.Controls.UIElementCollection
  isExternal: false
  name: Remove
  nameWithType: UIElementCollection.Remove
- uid: System.Windows.Controls.UIElementCollection.RemoveAt*
  parent: System.Windows.Controls.UIElementCollection
  isExternal: false
  name: RemoveAt
  nameWithType: UIElementCollection.RemoveAt
- uid: System.Windows.Controls.UIElementCollection.RemoveRange*
  parent: System.Windows.Controls.UIElementCollection
  isExternal: false
  name: RemoveRange
  nameWithType: UIElementCollection.RemoveRange
- uid: System.Windows.Controls.UIElementCollection.SetLogicalParent*
  parent: System.Windows.Controls.UIElementCollection
  isExternal: false
  name: SetLogicalParent
  nameWithType: UIElementCollection.SetLogicalParent
- uid: System.Windows.Controls.UIElementCollection.SyncRoot*
  parent: System.Windows.Controls.UIElementCollection
  isExternal: false
  name: SyncRoot
  nameWithType: UIElementCollection.SyncRoot
- uid: System.Windows.Controls.UIElementCollection.System#Collections#IList#Add*
  parent: System.Windows.Controls.UIElementCollection
  isExternal: false
  name: System.Collections.IList.Add
  nameWithType: UIElementCollection.System.Collections.IList.Add
- uid: System.Windows.Controls.UIElementCollection.System#Collections#IList#Contains*
  parent: System.Windows.Controls.UIElementCollection
  isExternal: false
  name: System.Collections.IList.Contains
  nameWithType: UIElementCollection.System.Collections.IList.Contains
- uid: System.Windows.Controls.UIElementCollection.System#Collections#IList#IndexOf*
  parent: System.Windows.Controls.UIElementCollection
  isExternal: false
  name: System.Collections.IList.IndexOf
  nameWithType: UIElementCollection.System.Collections.IList.IndexOf
- uid: System.Windows.Controls.UIElementCollection.System#Collections#IList#Insert*
  parent: System.Windows.Controls.UIElementCollection
  isExternal: false
  name: System.Collections.IList.Insert
  nameWithType: UIElementCollection.System.Collections.IList.Insert
- uid: System.Windows.Controls.UIElementCollection.System#Collections#IList#IsFixedSize*
  parent: System.Windows.Controls.UIElementCollection
  isExternal: false
  name: System.Collections.IList.IsFixedSize
  nameWithType: UIElementCollection.System.Collections.IList.IsFixedSize
- uid: System.Windows.Controls.UIElementCollection.System#Collections#IList#IsReadOnly*
  parent: System.Windows.Controls.UIElementCollection
  isExternal: false
  name: System.Collections.IList.IsReadOnly
  nameWithType: UIElementCollection.System.Collections.IList.IsReadOnly
- uid: System.Windows.Controls.UIElementCollection.System#Collections#IList#Item*
  parent: System.Windows.Controls.UIElementCollection
  isExternal: false
  name: System.Collections.IList.Item
  nameWithType: UIElementCollection.System.Collections.IList.Item
- uid: System.Windows.Controls.UIElementCollection.System#Collections#IList#Remove*
  parent: System.Windows.Controls.UIElementCollection
  isExternal: false
  name: System.Collections.IList.Remove
  nameWithType: UIElementCollection.System.Collections.IList.Remove
