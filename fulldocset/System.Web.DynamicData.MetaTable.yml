### YamlMime:ManagedReference
items:
- uid: System.Web.DynamicData.MetaTable
  id: MetaTable
  children:
  - System.Web.DynamicData.MetaTable.#ctor(System.Web.DynamicData.MetaModel,System.Web.DynamicData.ModelProviders.TableProvider)
  - System.Web.DynamicData.MetaTable.Attributes
  - System.Web.DynamicData.MetaTable.BuildAttributeCollection
  - System.Web.DynamicData.MetaTable.CanDelete(System.Security.Principal.IPrincipal)
  - System.Web.DynamicData.MetaTable.CanInsert(System.Security.Principal.IPrincipal)
  - System.Web.DynamicData.MetaTable.CanRead(System.Security.Principal.IPrincipal)
  - System.Web.DynamicData.MetaTable.CanUpdate(System.Security.Principal.IPrincipal)
  - System.Web.DynamicData.MetaTable.Columns
  - System.Web.DynamicData.MetaTable.CreateChildrenColumn(System.Web.DynamicData.ModelProviders.ColumnProvider)
  - System.Web.DynamicData.MetaTable.CreateColumn(System.Web.DynamicData.ModelProviders.ColumnProvider)
  - System.Web.DynamicData.MetaTable.CreateContext
  - System.Web.DynamicData.MetaTable.CreateForeignKeyColumn(System.Web.DynamicData.ModelProviders.ColumnProvider)
  - System.Web.DynamicData.MetaTable.CreateTable(System.ComponentModel.ICustomTypeDescriptor)
  - System.Web.DynamicData.MetaTable.CreateTable(System.Type)
  - System.Web.DynamicData.MetaTable.DataContextPropertyName
  - System.Web.DynamicData.MetaTable.DataContextType
  - System.Web.DynamicData.MetaTable.DisplayColumn
  - System.Web.DynamicData.MetaTable.DisplayName
  - System.Web.DynamicData.MetaTable.EntityType
  - System.Web.DynamicData.MetaTable.ForeignKeyColumnsNames
  - System.Web.DynamicData.MetaTable.GetActionPath(System.String)
  - System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Collections.Generic.IList{System.Object})
  - System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Object)
  - System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Collections.Generic.IList{System.Object},System.String)
  - System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Object,System.String)
  - System.Web.DynamicData.MetaTable.GetColumn(System.String)
  - System.Web.DynamicData.MetaTable.GetColumnValuesFromRoute(System.Web.HttpContext)
  - System.Web.DynamicData.MetaTable.GetDataKeyFromRoute
  - System.Web.DynamicData.MetaTable.GetDisplayString(System.Object)
  - System.Web.DynamicData.MetaTable.GetFilteredColumns
  - System.Web.DynamicData.MetaTable.GetPrimaryKeyDictionary(System.Object)
  - System.Web.DynamicData.MetaTable.GetPrimaryKeyString(System.Collections.Generic.IList{System.Object})
  - System.Web.DynamicData.MetaTable.GetPrimaryKeyString(System.Object)
  - System.Web.DynamicData.MetaTable.GetPrimaryKeyValues(System.Object)
  - System.Web.DynamicData.MetaTable.GetQuery
  - System.Web.DynamicData.MetaTable.GetQuery(System.Object)
  - System.Web.DynamicData.MetaTable.GetScaffoldColumns(System.Web.UI.WebControls.DataBoundControlMode,System.Web.DynamicData.ContainerType)
  - System.Web.DynamicData.MetaTable.GetTable(System.Type)
  - System.Web.DynamicData.MetaTable.HasPrimaryKey
  - System.Web.DynamicData.MetaTable.Initialize
  - System.Web.DynamicData.MetaTable.IsReadOnly
  - System.Web.DynamicData.MetaTable.ListActionPath
  - System.Web.DynamicData.MetaTable.Model
  - System.Web.DynamicData.MetaTable.Name
  - System.Web.DynamicData.MetaTable.PrimaryKeyColumns
  - System.Web.DynamicData.MetaTable.Provider
  - System.Web.DynamicData.MetaTable.ResetMetadata
  - System.Web.DynamicData.MetaTable.RootEntityType
  - System.Web.DynamicData.MetaTable.Scaffold
  - System.Web.DynamicData.MetaTable.SortColumn
  - System.Web.DynamicData.MetaTable.SortDescending
  - System.Web.DynamicData.MetaTable.ToString
  - System.Web.DynamicData.MetaTable.TryGetColumn(System.String,System.Web.DynamicData.MetaColumn@)
  - System.Web.DynamicData.MetaTable.TryGetTable(System.Type,System.Web.DynamicData.MetaTable@)
  langs:
  - csharp
  name: MetaTable
  nameWithType: MetaTable
  fullName: System.Web.DynamicData.MetaTable
  type: Class
  summary: "表示動態資料頁面所描述的資料表使用的中繼資料。"
  remarks: ''
  example:
  - "The following example is part of the code-behind file for the Insert.aspx page template. The MetaTable instance is initialized in the `Page_Load` method. The title for the page is set to the table `DisplayName` property.  \n  \n```c#  \npublic partial class Insert : System.Web.UI.Page {  \n    protected MetaTable table;     \n  \n    protected void Page_Load(object sender, EventArgs e) {  \n        table = DetailsDataSource.GetTable();  \n        Title = table.DisplayName;  \n    }  \n}  \n```  \n  \n```vb#  \nPartial Class Insert  \n    Inherits System.Web.UI.Page  \n  \n    Protected table As MetaTable      \n  \n    Protected Sub Page_Load(ByVal sender As Object, _  \n            ByVal e As EventArgs)  \n        table = DetailsDataSource.GetTable  \n        Title = table.DisplayName  \n    End Sub  \nEnd Class  \n```"
  syntax:
    content: public class MetaTable
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.#ctor(System.Web.DynamicData.MetaModel,System.Web.DynamicData.ModelProviders.TableProvider)
  id: '#ctor(System.Web.DynamicData.MetaModel,System.Web.DynamicData.ModelProviders.TableProvider)'
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: MetaTable(MetaModel,TableProvider)
  nameWithType: MetaTable.MetaTable(MetaModel,TableProvider)
  fullName: System.Web.DynamicData.MetaTable.MetaTable(MetaModel,TableProvider)
  type: Constructor
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "初始化的新執行個體<xref href=&quot;System.Web.DynamicData.MetaTable&quot;></xref>類別。"
  remarks: "`tableProvider`參數用來初始化<xref:System.Web.DynamicData.MetaTable.DataContextPropertyName%2A>屬性。</xref:System.Web.DynamicData.MetaTable.DataContextPropertyName%2A>"
  syntax:
    content: public MetaTable (System.Web.DynamicData.MetaModel metaModel, System.Web.DynamicData.ModelProviders.TableProvider tableProvider);
    parameters:
    - id: metaModel
      type: System.Web.DynamicData.MetaModel
      description: "實體中繼模型。"
    - id: tableProvider
      type: System.Web.DynamicData.ModelProviders.TableProvider
      description: "實體模型提供者。"
  overload: System.Web.DynamicData.MetaTable.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.Attributes
  id: Attributes
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: Attributes
  nameWithType: MetaTable.Attributes
  fullName: System.Web.DynamicData.MetaTable.Attributes
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "取得與資料表相關聯的屬性。"
  syntax:
    content: public System.ComponentModel.AttributeCollection Attributes { get; }
    return:
      type: System.ComponentModel.AttributeCollection
      description: "包含資料表的屬性集合。"
  overload: System.Web.DynamicData.MetaTable.Attributes*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.BuildAttributeCollection
  id: BuildAttributeCollection
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: BuildAttributeCollection()
  nameWithType: MetaTable.BuildAttributeCollection()
  fullName: System.Web.DynamicData.MetaTable.BuildAttributeCollection()
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "建立屬性集合。"
  syntax:
    content: protected virtual System.ComponentModel.AttributeCollection BuildAttributeCollection ();
    parameters: []
    return:
      type: System.ComponentModel.AttributeCollection
      description: "屬性集合。"
  overload: System.Web.DynamicData.MetaTable.BuildAttributeCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.CanDelete(System.Security.Principal.IPrincipal)
  id: CanDelete(System.Security.Principal.IPrincipal)
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: CanDelete(IPrincipal)
  nameWithType: MetaTable.CanDelete(IPrincipal)
  fullName: System.Web.DynamicData.MetaTable.CanDelete(IPrincipal)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "取得值，指出指定的使用者是否可以執行刪除作業。"
  remarks: "主體的物件表示代表其執行程式碼，包括該使用者的身分識別的使用者和其所屬的任何角色的安全性內容。"
  syntax:
    content: public virtual bool CanDelete (System.Security.Principal.IPrincipal principal);
    parameters:
    - id: principal
      type: System.Security.Principal.IPrincipal
      description: "使用者的安全性內容。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果使用者允許執行，刪除作業。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.DynamicData.MetaTable.CanDelete*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.CanInsert(System.Security.Principal.IPrincipal)
  id: CanInsert(System.Security.Principal.IPrincipal)
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: CanInsert(IPrincipal)
  nameWithType: MetaTable.CanInsert(IPrincipal)
  fullName: System.Web.DynamicData.MetaTable.CanInsert(IPrincipal)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "取得值，指出是否允許指定的使用者執行插入作業。"
  remarks: "主體的物件表示代表其執行程式碼，包括該使用者的身分識別的使用者和其所屬的任何角色的安全性內容。"
  syntax:
    content: public virtual bool CanInsert (System.Security.Principal.IPrincipal principal);
    parameters:
    - id: principal
      type: System.Security.Principal.IPrincipal
      description: "使用者的安全性內容。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果允許使用者執行，插入作業;否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.DynamicData.MetaTable.CanInsert*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.CanRead(System.Security.Principal.IPrincipal)
  id: CanRead(System.Security.Principal.IPrincipal)
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: CanRead(IPrincipal)
  nameWithType: MetaTable.CanRead(IPrincipal)
  fullName: System.Web.DynamicData.MetaTable.CanRead(IPrincipal)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "取得值，指出是否允許指定的使用者執行讀取的作業。"
  remarks: "主體的物件表示代表其執行程式碼，包括該使用者的身分識別的使用者和其所屬的任何角色的安全性內容。"
  syntax:
    content: public virtual bool CanRead (System.Security.Principal.IPrincipal principal);
    parameters:
    - id: principal
      type: System.Security.Principal.IPrincipal
      description: "使用者的安全性內容。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果使用者允許執行，讀取作業。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.DynamicData.MetaTable.CanRead*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.CanUpdate(System.Security.Principal.IPrincipal)
  id: CanUpdate(System.Security.Principal.IPrincipal)
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: CanUpdate(IPrincipal)
  nameWithType: MetaTable.CanUpdate(IPrincipal)
  fullName: System.Web.DynamicData.MetaTable.CanUpdate(IPrincipal)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "取得值，指出指定的使用者是否可以執行更新作業。"
  remarks: "主體的物件表示代表其執行程式碼，包括該使用者的身分識別的使用者和其所屬的任何角色的安全性內容。"
  syntax:
    content: public virtual bool CanUpdate (System.Security.Principal.IPrincipal principal);
    parameters:
    - id: principal
      type: System.Security.Principal.IPrincipal
      description: "使用者的安全性內容。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果使用者允許執行更新作業。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.DynamicData.MetaTable.CanUpdate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.Columns
  id: Columns
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: Columns
  nameWithType: MetaTable.Columns
  fullName: System.Web.DynamicData.MetaTable.Columns
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "取得資料表的資料行集合。"
  remarks: ''
  example:
  - "The following example shows how to use the Columns property. In the example, the Dynamic Data page templates have been copied to the \\DynamicData\\CustomPages\\ProductDescriptions folder to provide a custom display for the ProductDescription table of the AdventureWorksLT database. The markup of the Insert.aspx file is changed to add an `OnDataBound` event handler named `DetailsView1_DataBound`. In the event handler, the <xref:System.Web.DynamicData.DynamicDataExtensions.FindMetaTable%2A> method is used to find the meta table. The Columns property is used to display the number of columns in the table.  \n  \n [!code-cs[System.Web.DynamicData.DynamicDataExtensions#1](~/add/codesnippet/csharp/p-system.web.dynamicdata_3_1.cs)]  \n[!code-cs[System.Web.DynamicData.DynamicDataExtensions#2](~/add/codesnippet/csharp/p-system.web.dynamicdata_3_2.aspx)]"
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Web.DynamicData.MetaColumn> Columns { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Web.DynamicData.MetaColumn}
      description: "包含資料表的資料行的集合。"
  overload: System.Web.DynamicData.MetaTable.Columns*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.CreateChildrenColumn(System.Web.DynamicData.ModelProviders.ColumnProvider)
  id: CreateChildrenColumn(System.Web.DynamicData.ModelProviders.ColumnProvider)
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: CreateChildrenColumn(ColumnProvider)
  nameWithType: MetaTable.CreateChildrenColumn(ColumnProvider)
  fullName: System.Web.DynamicData.MetaTable.CreateChildrenColumn(ColumnProvider)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "建立新<xref href=&quot;System.Web.DynamicData.MetaChildrenColumn&quot;></xref>物件。"
  remarks: "若要建立衍生的型別，可以覆寫這個方法。"
  syntax:
    content: protected virtual System.Web.DynamicData.MetaChildrenColumn CreateChildrenColumn (System.Web.DynamicData.ModelProviders.ColumnProvider columnProvider);
    parameters:
    - id: columnProvider
      type: System.Web.DynamicData.ModelProviders.ColumnProvider
      description: "資料行提供者。"
    return:
      type: System.Web.DynamicData.MetaChildrenColumn
      description: "新的子 metacolumn 物件。"
  overload: System.Web.DynamicData.MetaTable.CreateChildrenColumn*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.CreateColumn(System.Web.DynamicData.ModelProviders.ColumnProvider)
  id: CreateColumn(System.Web.DynamicData.ModelProviders.ColumnProvider)
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: CreateColumn(ColumnProvider)
  nameWithType: MetaTable.CreateColumn(ColumnProvider)
  fullName: System.Web.DynamicData.MetaTable.CreateColumn(ColumnProvider)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "建立<xref href=&quot;System.Web.DynamicData.MetaColumn&quot;></xref>物件。"
  remarks: "若要建立衍生的型別，可以覆寫這個方法。"
  syntax:
    content: protected virtual System.Web.DynamicData.MetaColumn CreateColumn (System.Web.DynamicData.ModelProviders.ColumnProvider columnProvider);
    parameters:
    - id: columnProvider
      type: System.Web.DynamicData.ModelProviders.ColumnProvider
      description: "資料行提供者。"
    return:
      type: System.Web.DynamicData.MetaColumn
      description: "新的 metacolumn 物件。"
  overload: System.Web.DynamicData.MetaTable.CreateColumn*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.CreateContext
  id: CreateContext
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: CreateContext()
  nameWithType: MetaTable.CreateContext()
  fullName: System.Web.DynamicData.MetaTable.CreateContext()
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "傳回資料表的資料內容。"
  remarks: "從藉由呼叫 CreateContext 方法具現化的新內容，擷取的資料內容。 如需詳細資訊，請參閱<xref:System.Web.DynamicData.MetaTable?displayProperty=fullName>類別概觀。</xref:System.Web.DynamicData.MetaTable?displayProperty=fullName>"
  syntax:
    content: public virtual object CreateContext ();
    parameters: []
    return:
      type: System.Object
      description: "資料表的資料內容。"
  overload: System.Web.DynamicData.MetaTable.CreateContext*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.CreateForeignKeyColumn(System.Web.DynamicData.ModelProviders.ColumnProvider)
  id: CreateForeignKeyColumn(System.Web.DynamicData.ModelProviders.ColumnProvider)
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: CreateForeignKeyColumn(ColumnProvider)
  nameWithType: MetaTable.CreateForeignKeyColumn(ColumnProvider)
  fullName: System.Web.DynamicData.MetaTable.CreateForeignKeyColumn(ColumnProvider)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "建立包含外部索引鍵的中繼資料的物件。"
  remarks: "若要建立衍生的型別，可以覆寫這個方法。"
  syntax:
    content: protected virtual System.Web.DynamicData.MetaForeignKeyColumn CreateForeignKeyColumn (System.Web.DynamicData.ModelProviders.ColumnProvider columnProvider);
    parameters:
    - id: columnProvider
      type: System.Web.DynamicData.ModelProviders.ColumnProvider
      description: "資料行提供者。"
    return:
      type: System.Web.DynamicData.MetaForeignKeyColumn
      description: "物件，包含外部索引鍵的中繼資料。"
  overload: System.Web.DynamicData.MetaTable.CreateForeignKeyColumn*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.CreateTable(System.ComponentModel.ICustomTypeDescriptor)
  id: CreateTable(System.ComponentModel.ICustomTypeDescriptor)
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: CreateTable(ICustomTypeDescriptor)
  nameWithType: MetaTable.CreateTable(ICustomTypeDescriptor)
  fullName: System.Web.DynamicData.MetaTable.CreateTable(ICustomTypeDescriptor)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "建立指定之資料表的中繼資料。"
  syntax:
    content: public static System.Web.DynamicData.MetaTable CreateTable (System.ComponentModel.ICustomTypeDescriptor typeDescriptor);
    parameters:
    - id: typeDescriptor
      type: System.ComponentModel.ICustomTypeDescriptor
      description: "資料表類型的相關資訊。"
    return:
      type: System.Web.DynamicData.MetaTable
      description: "物件，包含資料表的中繼資料。"
  overload: System.Web.DynamicData.MetaTable.CreateTable*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.CreateTable(System.Type)
  id: CreateTable(System.Type)
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: CreateTable(Type)
  nameWithType: MetaTable.CreateTable(Type)
  fullName: System.Web.DynamicData.MetaTable.CreateTable(Type)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "建立指定之資料表的中繼資料。"
  syntax:
    content: public static System.Web.DynamicData.MetaTable CreateTable (Type entityType);
    parameters:
    - id: entityType
      type: System.Type
      description: "針對產生中繼資料的資料表類型。"
    return:
      type: System.Web.DynamicData.MetaTable
      description: "物件，包含資料表的中繼資料。"
  overload: System.Web.DynamicData.MetaTable.CreateTable*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.DataContextPropertyName
  id: DataContextPropertyName
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: DataContextPropertyName
  nameWithType: MetaTable.DataContextPropertyName
  fullName: System.Web.DynamicData.MetaTable.DataContextPropertyName
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "取得資料表的名稱。"
  remarks: "名稱來自於<xref:System.Web.DynamicData.MetaTable.DataContextType%2A>資料表所屬的物件。</xref:System.Web.DynamicData.MetaTable.DataContextType%2A>"
  syntax:
    content: public string DataContextPropertyName { get; }
    return:
      type: System.String
      description: "資料表的名稱。"
  overload: System.Web.DynamicData.MetaTable.DataContextPropertyName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.DataContextType
  id: DataContextType
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: DataContextType
  nameWithType: MetaTable.DataContextType
  fullName: System.Web.DynamicData.MetaTable.DataContextType
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "取得與資料表相關聯的資料內容型別。"
  remarks: "如需詳細資訊，請參閱<xref:System.Data.Linq.DataContext?displayProperty=fullName>類別概觀。</xref:System.Data.Linq.DataContext?displayProperty=fullName>"
  syntax:
    content: public Type DataContextType { get; }
    return:
      type: System.Type
      description: "資料內容型別。"
  overload: System.Web.DynamicData.MetaTable.DataContextType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.DisplayColumn
  id: DisplayColumn
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: DisplayColumn
  nameWithType: MetaTable.DisplayColumn
  fullName: System.Web.DynamicData.MetaTable.DisplayColumn
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "取得用來顯示值，這個資料表中的項目做為外部索引鍵關聯性中的父系時的資料行。"
  remarks: "傳回的資料行選取順序如下︰ 1。  使用指定的資料行<xref:System.ComponentModel.DataAnnotations.DisplayColumnAttribute>屬性。</xref:System.ComponentModel.DataAnnotations.DisplayColumnAttribute>      2.  第一個字串不是主索引鍵的資料行。      3.  第一個字串中的主索引鍵的資料行。      4.  第一個非字串資料行是主索引鍵。      5.  第一個資料行中。"
  syntax:
    content: public virtual System.Web.DynamicData.MetaColumn DisplayColumn { get; }
    return:
      type: System.Web.DynamicData.MetaColumn
      description: "用來顯示值，這個資料表中的項目做為外部索引鍵關聯性中的父系時的資料行。"
  overload: System.Web.DynamicData.MetaTable.DisplayColumn*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.DisplayName
  id: DisplayName
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: DisplayName
  nameWithType: MetaTable.DisplayName
  fullName: System.Web.DynamicData.MetaTable.DisplayName
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "取得資料表的名稱，方便使用的格式。"
  remarks: "這個屬性的值預設值為<xref:System.Web.DynamicData.MetaTable.Name%2A>屬性。</xref:System.Web.DynamicData.MetaTable.Name%2A> 您可以使用，以自訂這個屬性的值<xref:System.ComponentModel.DisplayNameAttribute?displayProperty=fullName>屬性。</xref:System.ComponentModel.DisplayNameAttribute?displayProperty=fullName>"
  syntax:
    content: public virtual string DisplayName { get; }
    return:
      type: System.String
      description: "代表資料表的易記名稱的字串。"
  overload: System.Web.DynamicData.MetaTable.DisplayName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.EntityType
  id: EntityType
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: EntityType
  nameWithType: MetaTable.EntityType
  fullName: System.Web.DynamicData.MetaTable.EntityType
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "取得代表資料表的實體類型。"
  syntax:
    content: public Type EntityType { get; }
    return:
      type: System.Type
      description: "表示實體的型別。"
  overload: System.Web.DynamicData.MetaTable.EntityType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.ForeignKeyColumnsNames
  id: ForeignKeyColumnsNames
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: ForeignKeyColumnsNames
  nameWithType: MetaTable.ForeignKeyColumnsNames
  fullName: System.Web.DynamicData.MetaTable.ForeignKeyColumnsNames
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "取得外部索引鍵名稱的逗號分隔清單。"
  syntax:
    content: public string ForeignKeyColumnsNames { get; }
    return:
      type: System.String
      description: "外部索引鍵名稱的逗號分隔清單。"
  overload: System.Web.DynamicData.MetaTable.ForeignKeyColumnsNames*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.GetActionPath(System.String)
  id: GetActionPath(System.String)
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: GetActionPath(String)
  nameWithType: MetaTable.GetActionPath(String)
  fullName: System.Web.DynamicData.MetaTable.GetActionPath(String)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "傳回目前的資料表和指定之動作的動作路徑。"
  remarks: ''
  example:
  - The action path is a URL for an action for a specific entity. For more information, see the <xref:System.Web.DynamicData.PageAction?displayProperty=fullName> class overview.
  syntax:
    content: public string GetActionPath (string action);
    parameters:
    - id: action
      type: System.String
      description: "動作的名稱。"
    return:
      type: System.String
      description: "指定的動作動作的路徑。"
  overload: System.Web.DynamicData.MetaTable.GetActionPath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Collections.Generic.IList{System.Object})
  id: GetActionPath(System.String,System.Collections.Generic.IList{System.Object})
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: GetActionPath(String,IList<Object>)
  nameWithType: MetaTable.GetActionPath(String,IList<Object>)
  fullName: System.Web.DynamicData.MetaTable.GetActionPath(String,IList<Object>)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "傳回目前的資料表、 指定的動作，並指定主索引鍵的執行路徑。"
  remarks: "動作路徑是動作的特定實體的 URL。 如需詳細資訊，請參閱<xref:System.Web.DynamicData.PageAction?displayProperty=fullName>類別概觀。</xref:System.Web.DynamicData.PageAction?displayProperty=fullName>"
  syntax:
    content: public string GetActionPath (string action, System.Collections.Generic.IList<object> primaryKeyValues);
    parameters:
    - id: action
      type: System.String
      description: "動作的名稱。"
    - id: primaryKeyValues
      type: System.Collections.Generic.IList{System.Object}
      description: "主索引鍵所組成的資料行值的清單。"
    return:
      type: System.String
      description: "指定的動作和主索引鍵的動作路徑。"
  overload: System.Web.DynamicData.MetaTable.GetActionPath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Object)
  id: GetActionPath(System.String,System.Object)
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: GetActionPath(String,Object)
  nameWithType: MetaTable.GetActionPath(String,Object)
  fullName: System.Web.DynamicData.MetaTable.GetActionPath(String,Object)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "傳回指定之資料列的動作路徑使用動作名稱。"
  remarks: "動作路徑是動作的特定實體的 URL。 動作路徑包含主索引鍵資料行名稱，而可以使用查詢字串篩選條件使用。       如需詳細資訊，請參閱<xref:System.Web.DynamicData.PageAction?displayProperty=fullName>類別概觀。</xref:System.Web.DynamicData.PageAction?displayProperty=fullName>"
  syntax:
    content: public string GetActionPath (string action, object row);
    parameters:
    - id: action
      type: System.String
      description: "動作的名稱。"
    - id: row
      type: System.Object
      description: "要取得動作路徑的資料列。"
    return:
      type: System.String
      description: "指定的資料列的動作路徑。"
  overload: System.Web.DynamicData.MetaTable.GetActionPath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Web.Routing.RouteValueDictionary)
  id: GetActionPath(System.String,System.Web.Routing.RouteValueDictionary)
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: GetActionPath(String,RouteValueDictionary)
  nameWithType: MetaTable.GetActionPath(String,RouteValueDictionary)
  fullName: System.Web.DynamicData.MetaTable.GetActionPath(String,RouteValueDictionary)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "傳回目前的資料表以及指定的動作和路由的動作路徑。"
  remarks: "動作路徑是動作的特定實體的 URL。 如需詳細資訊，請參閱<xref:System.Web.DynamicData.PageAction?displayProperty=fullName>類別概觀。</xref:System.Web.DynamicData.PageAction?displayProperty=fullName>"
  syntax:
    content: public string GetActionPath (string action, System.Web.Routing.RouteValueDictionary routeValues);
    parameters:
    - id: action
      type: System.String
      description: "動作的名稱。"
    - id: routeValues
      type: System.Web.Routing.RouteValueDictionary
      description: "路由動作的清單。"
    return:
      type: System.String
      description: "指定的動作和路由動作路徑。"
  overload: System.Web.DynamicData.MetaTable.GetActionPath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Collections.Generic.IList{System.Object},System.String)
  id: GetActionPath(System.String,System.Collections.Generic.IList{System.Object},System.String)
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: GetActionPath(String,IList<Object>,String)
  nameWithType: MetaTable.GetActionPath(String,IList<Object>,String)
  fullName: System.Web.DynamicData.MetaTable.GetActionPath(String,IList<Object>,String)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "將查詢字串附加至動作的路徑，根據指定的主索引鍵和虛擬路徑。"
  remarks: "動作路徑是動作的特定實體的 URL。 如需詳細資訊，請參閱<xref:System.Web.DynamicData.PageAction?displayProperty=fullName>類別概觀。</xref:System.Web.DynamicData.PageAction?displayProperty=fullName>"
  syntax:
    content: public string GetActionPath (string action, System.Collections.Generic.IList<object> primaryKeyValues, string path);
    parameters:
    - id: action
      type: System.String
      description: "動作的名稱。"
    - id: primaryKeyValues
      type: System.Collections.Generic.IList{System.Object}
      description: "主索引鍵所組成的資料行值的清單。"
    - id: path
      type: System.String
      description: "動作的虛擬路徑。"
    return:
      type: System.String
      description: "指定主索引鍵和附加的查詢字串值包含的虛擬路徑的執行路徑。"
  overload: System.Web.DynamicData.MetaTable.GetActionPath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Object,System.String)
  id: GetActionPath(System.String,System.Object,System.String)
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: GetActionPath(String,Object,String)
  nameWithType: MetaTable.GetActionPath(String,Object,String)
  fullName: System.Web.DynamicData.MetaTable.GetActionPath(String,Object,String)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "傳回指定之資料列的動作路徑使用動作名稱和動作的虛擬路徑。"
  remarks: "動作路徑是動作的特定實體的 URL。 如需詳細資訊，請參閱<xref:System.Web.DynamicData.PageAction?displayProperty=fullName>類別概觀。</xref:System.Web.DynamicData.PageAction?displayProperty=fullName>"
  syntax:
    content: public string GetActionPath (string action, object row, string path);
    parameters:
    - id: action
      type: System.String
      description: "動作的名稱。"
    - id: row
      type: System.Object
      description: "物件，其中包含動作路徑的資料列。"
    - id: path
      type: System.String
      description: "動作的虛擬路徑。"
    return:
      type: System.String
      description: "指定的資料列的動作路徑。"
  overload: System.Web.DynamicData.MetaTable.GetActionPath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.GetColumn(System.String)
  id: GetColumn(System.String)
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: GetColumn(String)
  nameWithType: MetaTable.GetColumn(String)
  fullName: System.Web.DynamicData.MetaTable.GetColumn(String)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "傳回指定之資料行的中繼資料。"
  syntax:
    content: public System.Web.DynamicData.MetaColumn GetColumn (string columnName);
    parameters:
    - id: columnName
      type: System.String
      description: "要取得中繼資料的資料行名稱。"
    return:
      type: System.Web.DynamicData.MetaColumn
      description: "資料行的中繼資料。"
  overload: System.Web.DynamicData.MetaTable.GetColumn*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.GetColumnValuesFromRoute(System.Web.HttpContext)
  id: GetColumnValuesFromRoute(System.Web.HttpContext)
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: GetColumnValuesFromRoute(HttpContext)
  nameWithType: MetaTable.GetColumnValuesFromRoute(HttpContext)
  fullName: System.Web.DynamicData.MetaTable.GetColumnValuesFromRoute(HttpContext)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "取得資料行值的集合。"
  syntax:
    content: public System.Collections.Generic.IDictionary<string,object> GetColumnValuesFromRoute (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "指定 Web 要求的內容。"
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
      description: "資料行值的集合。"
  overload: System.Web.DynamicData.MetaTable.GetColumnValuesFromRoute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.GetDataKeyFromRoute
  id: GetDataKeyFromRoute
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: GetDataKeyFromRoute()
  nameWithType: MetaTable.GetDataKeyFromRoute()
  fullName: System.Web.DynamicData.MetaTable.GetDataKeyFromRoute()
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "擷取實體的主索引鍵的路由值。"
  remarks: "路由值通常來自於要求 URL 查詢字串。"
  syntax:
    content: public System.Web.UI.WebControls.DataKey GetDataKeyFromRoute ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.DataKey
      description: "主索引鍵的值的實體，如果找不到它們;否則， <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.DynamicData.MetaTable.GetDataKeyFromRoute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.GetDisplayString(System.Object)
  id: GetDisplayString(System.Object)
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: GetDisplayString(Object)
  nameWithType: MetaTable.GetDisplayString(Object)
  fullName: System.Web.DynamicData.MetaTable.GetDisplayString(Object)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "傳回外部索引鍵關聯性中使用資料列時，使用做為顯示字串之資料列的執行個體的值。"
  remarks: "如果資料列為`null`，則傳回空的字串。 如果實體類別包含的覆寫<xref:System.Web.DynamicData.MetaTable.ToString%2A>方法]、 [覆寫<xref:System.Web.DynamicData.MetaTable.ToString%2A>會傳回值。</xref:System.Web.DynamicData.MetaTable.ToString%2A> </xref:System.Web.DynamicData.MetaTable.ToString%2A> 否則，方法會傳回`ToString`值的表示<xref:System.Web.DynamicData.MetaTable.DisplayColumn%2A>屬性指定之資料列。</xref:System.Web.DynamicData.MetaTable.DisplayColumn%2A>"
  syntax:
    content: public virtual string GetDisplayString (object row);
    parameters:
    - id: row
      type: System.Object
      description: "要取得的顯示字串的資料列。"
    return:
      type: System.String
      description: "資料列的執行個體顯示名稱。"
  overload: System.Web.DynamicData.MetaTable.GetDisplayString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.GetFilteredColumns
  id: GetFilteredColumns
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: GetFilteredColumns()
  nameWithType: MetaTable.GetFilteredColumns()
  fullName: System.Web.DynamicData.MetaTable.GetFilteredColumns()
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "擷取可篩選的資料行的清單。"
  remarks: "資料行就是如果它以註解可篩選<xref:System.ComponentModel.DataAnnotations.DisplayColumnAttribute>屬性和`Enabled`屬性<xref:System.Web.Mvc.FilterAttribute>資料行的屬性設定為`true`。</xref:System.Web.Mvc.FilterAttribute> </xref:System.ComponentModel.DataAnnotations.DisplayColumnAttribute>"
  syntax:
    content: public virtual System.Collections.Generic.IEnumerable<System.Web.DynamicData.MetaColumn> GetFilteredColumns ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.Web.DynamicData.MetaColumn}
      description: "篩選的資料行的清單。"
  overload: System.Web.DynamicData.MetaTable.GetFilteredColumns*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.GetPrimaryKeyDictionary(System.Object)
  id: GetPrimaryKeyDictionary(System.Object)
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: GetPrimaryKeyDictionary(Object)
  nameWithType: MetaTable.GetPrimaryKeyDictionary(Object)
  fullName: System.Web.DynamicData.MetaTable.GetPrimaryKeyDictionary(Object)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "擷取指定的資料列的主索引鍵名稱及值的字典。"
  remarks: ''
  example:
  - "The following example shows how to create a primary-key dictionary.  \n  \n```c#  \nprivate RouteValueDictionary GetRouteValues(MetaTable table, object row) {  \n    RouteValueDictionary routeValues = GetRouteValues();  \n    foreach (var pk in table.GetPrimaryKeyDictionary(row)) {  \n        routeValues[pk.Key] = pk.Value;  \n    }  \n    return routeValues;  \n}   \n```  \n  \n```vb#  \nPrivate Function GetRouteValues(ByVal table As MetaTable, _  \n        ByVal row As Object) As RouteValueDictionary   \n    Dim routeValues As RouteValueDictionary = GetRouteValues()   \n    For Each pk In table.GetPrimaryKeyDictionary(row)   \n        routeValues(pk.Key) = pk.Value   \n    Next   \n    Return routeValues   \nEnd Function   \n```"
  syntax:
    content: public System.Collections.Generic.IDictionary<string,object> GetPrimaryKeyDictionary (object row);
    parameters:
    - id: row
      type: System.Object
      description: "資料列。"
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
      description: "主索引鍵名稱和值的字典。"
  overload: System.Web.DynamicData.MetaTable.GetPrimaryKeyDictionary*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.GetPrimaryKeyString(System.Collections.Generic.IList{System.Object})
  id: GetPrimaryKeyString(System.Collections.Generic.IList{System.Object})
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: GetPrimaryKeyString(IList<Object>)
  nameWithType: MetaTable.GetPrimaryKeyString(IList<Object>)
  fullName: System.Web.DynamicData.MetaTable.GetPrimaryKeyString(IList<Object>)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "傳回代表指定之資料列的主索引鍵的資料行值的逗號分隔清單。"
  syntax:
    content: public string GetPrimaryKeyString (System.Collections.Generic.IList<object> primaryKeyValues);
    parameters:
    - id: primaryKeyValues
      type: System.Collections.Generic.IList{System.Object}
      description: "主索引鍵所組成的資料行值的清單。"
    return:
      type: System.String
      description: "資料行值的逗號分隔清單。 如果清單是空的則會傳回空字串。"
  overload: System.Web.DynamicData.MetaTable.GetPrimaryKeyString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.GetPrimaryKeyString(System.Object)
  id: GetPrimaryKeyString(System.Object)
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: GetPrimaryKeyString(Object)
  nameWithType: MetaTable.GetPrimaryKeyString(Object)
  fullName: System.Web.DynamicData.MetaTable.GetPrimaryKeyString(Object)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "傳回代表指定之資料列的主索引鍵的資料行值的逗號分隔清單。"
  syntax:
    content: public string GetPrimaryKeyString (object row);
    parameters:
    - id: row
      type: System.Object
      description: "要取得的主索引鍵的資料列。"
    return:
      type: System.String
      description: "表示資料列的主索引鍵資料行值的逗號分隔清單。"
  overload: System.Web.DynamicData.MetaTable.GetPrimaryKeyString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.GetPrimaryKeyValues(System.Object)
  id: GetPrimaryKeyValues(System.Object)
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: GetPrimaryKeyValues(Object)
  nameWithType: MetaTable.GetPrimaryKeyValues(Object)
  fullName: System.Web.DynamicData.MetaTable.GetPrimaryKeyValues(Object)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "傳回代表指定之資料列的主索引鍵的資料行值的集合。"
  syntax:
    content: public System.Collections.Generic.IList<object> GetPrimaryKeyValues (object row);
    parameters:
    - id: row
      type: System.Object
      description: "要取得的主索引鍵的資料列。"
    return:
      type: System.Collections.Generic.IList{System.Object}
      description: "表示資料列的主索引鍵資料行值的集合。"
  overload: System.Web.DynamicData.MetaTable.GetPrimaryKeyValues*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.GetQuery
  id: GetQuery
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: GetQuery()
  nameWithType: MetaTable.GetQuery()
  fullName: System.Web.DynamicData.MetaTable.GetQuery()
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "傳回&lt;xref:System.Linq.IQueryable?displayProperty=fullName&gt;代表資料表的實體類型的執行個體。"
  syntax:
    content: public System.Linq.IQueryable GetQuery ();
    parameters: []
    return:
      type: System.Linq.IQueryable
      description: "&lt;Xref:System.Linq.IQueryable?displayProperty=fullName&gt;實體類型的執行個體。"
  overload: System.Web.DynamicData.MetaTable.GetQuery*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.GetQuery(System.Object)
  id: GetQuery(System.Object)
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: GetQuery(Object)
  nameWithType: MetaTable.GetQuery(Object)
  fullName: System.Web.DynamicData.MetaTable.GetQuery(Object)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "傳回&lt;xref:System.Linq.IQueryable?displayProperty=fullName&gt;代表資料表所使用的資料內容的實體類型的執行個體。"
  remarks: "如果`context`參數是`null`，這個方法會藉由呼叫建立新的內容<xref:System.Web.DynamicData.MetaTable.CreateContext%2A?displayProperty=fullName>方法。</xref:System.Web.DynamicData.MetaTable.CreateContext%2A?displayProperty=fullName>"
  syntax:
    content: public virtual System.Linq.IQueryable GetQuery (object context);
    parameters:
    - id: context
      type: System.Object
      description: "內容<xref href=&quot;System.Web.DynamicData.MetaTable&quot;></xref>物件。"
    return:
      type: System.Linq.IQueryable
      description: "<xref:System.Linq.IQueryable>代表資料表中的資料內容的實體類型的執行個體。</xref:System.Linq.IQueryable>"
  overload: System.Web.DynamicData.MetaTable.GetQuery*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.GetScaffoldColumns(System.Web.UI.WebControls.DataBoundControlMode,System.Web.DynamicData.ContainerType)
  id: GetScaffoldColumns(System.Web.UI.WebControls.DataBoundControlMode,System.Web.DynamicData.ContainerType)
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: GetScaffoldColumns(DataBoundControlMode,ContainerType)
  nameWithType: MetaTable.GetScaffoldColumns(DataBoundControlMode,ContainerType)
  fullName: System.Web.DynamicData.MetaTable.GetScaffoldColumns(DataBoundControlMode,ContainerType)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "傳回要使用 scaffolding 顯示資料行的清單。"
  remarks: "這個方法會傳回所有資料行其<xref:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute>屬性設定為`true`除非下列:-長時間的字串資料行，也就是資料行其<xref:System.Web.DynamicData.MetaColumn.IsLongString%2A>屬性設定為`true`，且`containerType`參數是`true`。</xref:System.Web.DynamicData.MetaColumn.IsLongString%2A> </xref:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute>      -子資料行<xref:System.Web.UI.WebControls.DataBoundControlMode>值設定為<xref:System.Web.UI.WebControls.DataBoundControlMode>.</xref:System.Web.UI.WebControls.DataBoundControlMode> </xref:System.Web.UI.WebControls.DataBoundControlMode>"
  syntax:
    content: public virtual System.Collections.Generic.IEnumerable<System.Web.DynamicData.MetaColumn> GetScaffoldColumns (System.Web.UI.WebControls.DataBoundControlMode mode, System.Web.DynamicData.ContainerType containerType);
    parameters:
    - id: mode
      type: System.Web.UI.WebControls.DataBoundControlMode
      description: "資料繫結控制項模式。"
    - id: containerType
      type: System.Web.DynamicData.ContainerType
      description: "值，指出資料表是否會顯示為個別的實體或實體的清單的一部分。"
    return:
      type: System.Collections.Generic.IEnumerable{System.Web.DynamicData.MetaColumn}
      description: "若要使用 scaffolding 顯示的資料行的清單。"
  overload: System.Web.DynamicData.MetaTable.GetScaffoldColumns*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.GetTable(System.Type)
  id: GetTable(System.Type)
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: GetTable(Type)
  nameWithType: MetaTable.GetTable(Type)
  fullName: System.Web.DynamicData.MetaTable.GetTable(Type)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "擷取與指定的型別相關聯的 metatable。"
  remarks: "這個方法會呼叫<xref:System.Web.DynamicData.MetaTable.TryGetTable%28System.Type%2CSystem.Web.DynamicData.MetaTable%40%29>.</xref:System.Web.DynamicData.MetaTable.TryGetTable%28System.Type%2CSystem.Web.DynamicData.MetaTable%40%29> 如果<xref:System.Web.DynamicData.MetaTable.TryGetTable%28System.Type%2CSystem.Web.DynamicData.MetaTable%40%29>傳回`false`、<xref:System.InvalidOperationException>擲回例外狀況。</xref:System.InvalidOperationException> </xref:System.Web.DynamicData.MetaTable.TryGetTable%28System.Type%2CSystem.Web.DynamicData.MetaTable%40%29>"
  syntax:
    content: public static System.Web.DynamicData.MetaTable GetTable (Type entityType);
    parameters:
    - id: entityType
      type: System.Type
      description: "實體的類型。"
    return:
      type: System.Web.DynamicData.MetaTable
      description: "Metatable 與指定的型別相關聯。"
  overload: System.Web.DynamicData.MetaTable.GetTable*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "&lt;Xref:System.Web.DynamicData.MetaTable.TryGetTable%28System.Type%2CSystem.Web.DynamicData.MetaTable%40%29&gt;由這個方法所呼叫的方法傳回<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.HasPrimaryKey
  id: HasPrimaryKey
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: HasPrimaryKey
  nameWithType: MetaTable.HasPrimaryKey
  fullName: System.Web.DynamicData.MetaTable.HasPrimaryKey
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "取得值，指出資料表是否有主索引鍵。"
  syntax:
    content: public bool HasPrimaryKey { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果資料表有主索引鍵。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.DynamicData.MetaTable.HasPrimaryKey*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.Initialize
  id: Initialize
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: Initialize()
  nameWithType: MetaTable.Initialize()
  fullName: System.Web.DynamicData.MetaTable.Initialize()
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "初始化可能無法使用建構函式呼叫時的資料。"
  remarks: "這個方法會呼叫<xref:System.Web.DynamicData.MetaColumn.Initialize%2A>方法中的每個資料行<xref:System.Web.DynamicData.MetaTable>執行個體。</xref:System.Web.DynamicData.MetaTable> </xref:System.Web.DynamicData.MetaColumn.Initialize%2A> 無法直接呼叫這個方法。 若要自訂初始化，您可以從這個類別衍生，並覆寫<xref:System.Web.DynamicData.MetaColumn.Initialize%2A>方法。</xref:System.Web.DynamicData.MetaColumn.Initialize%2A> 如果您覆寫這個方法，呼叫基底控制項`Initialize`方法。"
  example:
  - "The following example shows how to override the <xref:System.Web.DynamicData.MetaColumn.Initialize%2A> method in order to customize the initialization process.  \n  \n```c#  \nprotected  override void Initialize() {  \n    base.Initialize();  \n    MyOverridenInit();  \n}  \n```  \n  \n```vb#  \nProtected Overloads Overrides Sub Initialize()   \n    MyBase.Initialize()   \n    MyOverridenInit()   \nEnd Sub  \n```"
  syntax:
    content: protected virtual void Initialize ();
    parameters: []
  overload: System.Web.DynamicData.MetaTable.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.IsReadOnly
  id: IsReadOnly
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: MetaTable.IsReadOnly
  fullName: System.Web.DynamicData.MetaTable.IsReadOnly
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "取得值，指出資料表是否為唯讀。"
  syntax:
    content: public virtual bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果資料表是唯讀的。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.DynamicData.MetaTable.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.ListActionPath
  id: ListActionPath
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: ListActionPath
  nameWithType: MetaTable.ListActionPath
  fullName: System.Web.DynamicData.MetaTable.ListActionPath
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "取得動作動作的路徑清單的資料表。"
  remarks: "動作路徑是動作的特定實體的 URL。 如需詳細資訊，請參閱<xref:System.Web.DynamicData.PageAction?displayProperty=fullName>類別概觀。</xref:System.Web.DynamicData.PageAction?displayProperty=fullName>"
  syntax:
    content: public string ListActionPath { get; }
    return:
      type: System.String
      description: "動作動作的路徑清單的資料表。"
  overload: System.Web.DynamicData.MetaTable.ListActionPath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.Model
  id: Model
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: Model
  nameWithType: MetaTable.Model
  fullName: System.Web.DynamicData.MetaTable.Model
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "取得資料表所屬的中繼模型。"
  remarks: "如需詳細資訊，請參閱<xref:System.Data.Linq.Mapping.MetaModel?displayProperty=fullName>類別概觀。</xref:System.Data.Linq.Mapping.MetaModel?displayProperty=fullName>"
  syntax:
    content: public System.Web.DynamicData.MetaModel Model { get; }
    return:
      type: System.Web.DynamicData.MetaModel
      description: "資料表所屬的中繼模型。"
  overload: System.Web.DynamicData.MetaTable.Model*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.Name
  id: Name
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: Name
  nameWithType: MetaTable.Name
  fullName: System.Web.DynamicData.MetaTable.Name
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "取得資料表的唯一名稱。"
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "資料表的唯一名稱。"
  overload: System.Web.DynamicData.MetaTable.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.PrimaryKeyColumns
  id: PrimaryKeyColumns
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: PrimaryKeyColumns
  nameWithType: MetaTable.PrimaryKeyColumns
  fullName: System.Web.DynamicData.MetaTable.PrimaryKeyColumns
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "取得定義主索引鍵的資料行的集合。"
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Web.DynamicData.MetaColumn> PrimaryKeyColumns { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Web.DynamicData.MetaColumn}
      description: "包含主索引鍵資料行的集合。"
  overload: System.Web.DynamicData.MetaTable.PrimaryKeyColumns*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.Provider
  id: Provider
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: Provider
  nameWithType: MetaTable.Provider
  fullName: System.Web.DynamicData.MetaTable.Provider
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "取得資料表的提供者。"
  syntax:
    content: public System.Web.DynamicData.ModelProviders.TableProvider Provider { get; }
    return:
      type: System.Web.DynamicData.ModelProviders.TableProvider
      description: "資料表的提供者。"
  overload: System.Web.DynamicData.MetaTable.Provider*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.ResetMetadata
  id: ResetMetadata
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: ResetMetadata()
  nameWithType: MetaTable.ResetMetadata()
  fullName: System.Web.DynamicData.MetaTable.ResetMetadata()
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "重設快取的中繼資料資料表。"
  remarks: "快取的資料表中繼資料所組成，會取得從資料模型屬性和內建的資料行的相關中繼資料的資訊。 中繼資料快取會重建的下次要求任何中繼資料。"
  syntax:
    content: public void ResetMetadata ();
    parameters: []
  overload: System.Web.DynamicData.MetaTable.ResetMetadata*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.RootEntityType
  id: RootEntityType
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: RootEntityType
  nameWithType: MetaTable.RootEntityType
  fullName: System.Web.DynamicData.MetaTable.RootEntityType
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "取得實體的繼承階層架構的根型別。"
  remarks: "如果型別在繼承階層架構的頂端，或沒有父類型，則會傳回實體類型。"
  syntax:
    content: public Type RootEntityType { get; }
    return:
      type: System.Type
      description: "實體的繼承階層架構的根型別。"
  overload: System.Web.DynamicData.MetaTable.RootEntityType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.Scaffold
  id: Scaffold
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: Scaffold
  nameWithType: MetaTable.Scaffold
  fullName: System.Web.DynamicData.MetaTable.Scaffold
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "取得或設定值，指出資料表是否應該顯示。"
  syntax:
    content: public virtual bool Scaffold { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果應該顯示的資料表;否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.DynamicData.MetaTable.Scaffold*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.SortColumn
  id: SortColumn
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: SortColumn
  nameWithType: MetaTable.SortColumn
  fullName: System.Web.DynamicData.MetaTable.SortColumn
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "取得<xref href=&quot;System.Web.DynamicData.MetaColumn&quot;></xref>資料表排序依據的值。"
  syntax:
    content: public virtual System.Web.DynamicData.MetaColumn SortColumn { get; }
    return:
      type: System.Web.DynamicData.MetaColumn
      description: "資料表會依照資料行。"
  overload: System.Web.DynamicData.MetaTable.SortColumn*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.SortDescending
  id: SortDescending
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: SortDescending
  nameWithType: MetaTable.SortDescending
  fullName: System.Web.DynamicData.MetaTable.SortDescending
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "取得值，指出是否項目依遞減順序排序時當做外部索引鍵關聯性中的父代。"
  remarks: "您可以使用來指定排序次序<xref:System.ComponentModel.DataAnnotations.DisplayColumnAttribute?displayProperty=fullName>屬性。</xref:System.ComponentModel.DataAnnotations.DisplayColumnAttribute?displayProperty=fullName>"
  syntax:
    content: public virtual bool SortDescending { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果項目依遞減順序排序否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.DynamicData.MetaTable.SortDescending*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.ToString
  id: ToString
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: ToString()
  nameWithType: MetaTable.ToString()
  fullName: System.Web.DynamicData.MetaTable.ToString()
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "傳回資料表的名稱。"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "資料表的名稱。"
  overload: System.Web.DynamicData.MetaTable.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.TryGetColumn(System.String,System.Web.DynamicData.MetaColumn@)
  id: TryGetColumn(System.String,System.Web.DynamicData.MetaColumn@)
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: TryGetColumn(String,MetaColumn)
  nameWithType: MetaTable.TryGetColumn(String,MetaColumn)
  fullName: System.Web.DynamicData.MetaTable.TryGetColumn(String,MetaColumn)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "傳回值，指出是否可以找到指定的資料行。"
  remarks: "如果`columnName`參數為 null，<xref:System.InvalidOperationException>擲回例外狀況。</xref:System.InvalidOperationException>"
  syntax:
    content: public bool TryGetColumn (string columnName, out System.Web.DynamicData.MetaColumn column);
    parameters:
    - id: columnName
      type: System.String
      description: "若要尋找的資料行名稱。"
    - id: column
      type: System.Web.DynamicData.MetaColumn
      description: "這個方法傳回時，包含<xref uid=&quot;langword_csharp_MetaColumn&quot; name=&quot;MetaColumn&quot; href=&quot;&quot;></xref>物件`columnName`。 這個參數未初始化便傳遞。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果找不到指定的資料行;否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.DynamicData.MetaTable.TryGetColumn*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.TryGetTable(System.Type,System.Web.DynamicData.MetaTable@)
  id: TryGetTable(System.Type,System.Web.DynamicData.MetaTable@)
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: TryGetTable(Type,MetaTable)
  nameWithType: MetaTable.TryGetTable(Type,MetaTable)
  fullName: System.Web.DynamicData.MetaTable.TryGetTable(Type,MetaTable)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "擷取與指定的類型和資料表相關聯的 metatable。"
  syntax:
    content: public static bool TryGetTable (Type entityType, out System.Web.DynamicData.MetaTable table);
    parameters:
    - id: entityType
      type: System.Type
      description: "實體的類型。"
    - id: table
      type: System.Web.DynamicData.MetaTable
      description: "這個方法傳回時，包含與指定的型別相關聯的 metatable。 這個參數未初始化便傳遞。"
    return:
      type: System.Boolean
      description: "相關聯的 metatable 提供指定和資料表。"
  overload: System.Web.DynamicData.MetaTable.TryGetTable*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>entityType</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.DynamicData.MetaTable.#ctor(System.Web.DynamicData.MetaModel,System.Web.DynamicData.ModelProviders.TableProvider)
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: MetaTable(MetaModel,TableProvider)
  nameWithType: MetaTable.MetaTable(MetaModel,TableProvider)
  fullName: System.Web.DynamicData.MetaTable.MetaTable(MetaModel,TableProvider)
- uid: System.Web.DynamicData.MetaModel
  parent: System.Web.DynamicData
  isExternal: false
  name: MetaModel
  nameWithType: MetaModel
  fullName: System.Web.DynamicData.MetaModel
- uid: System.Web.DynamicData.ModelProviders.TableProvider
  parent: System.Web.DynamicData.ModelProviders
  isExternal: false
  name: TableProvider
  nameWithType: TableProvider
  fullName: System.Web.DynamicData.ModelProviders.TableProvider
- uid: System.Web.DynamicData.MetaTable.Attributes
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: Attributes
  nameWithType: MetaTable.Attributes
  fullName: System.Web.DynamicData.MetaTable.Attributes
- uid: System.ComponentModel.AttributeCollection
  parent: System.ComponentModel
  isExternal: false
  name: AttributeCollection
  nameWithType: AttributeCollection
  fullName: System.ComponentModel.AttributeCollection
- uid: System.Web.DynamicData.MetaTable.BuildAttributeCollection
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: BuildAttributeCollection()
  nameWithType: MetaTable.BuildAttributeCollection()
  fullName: System.Web.DynamicData.MetaTable.BuildAttributeCollection()
- uid: System.Web.DynamicData.MetaTable.CanDelete(System.Security.Principal.IPrincipal)
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: CanDelete(IPrincipal)
  nameWithType: MetaTable.CanDelete(IPrincipal)
  fullName: System.Web.DynamicData.MetaTable.CanDelete(IPrincipal)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Principal.IPrincipal
  parent: System.Security.Principal
  isExternal: true
  name: IPrincipal
  nameWithType: IPrincipal
  fullName: System.Security.Principal.IPrincipal
- uid: System.Web.DynamicData.MetaTable.CanInsert(System.Security.Principal.IPrincipal)
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: CanInsert(IPrincipal)
  nameWithType: MetaTable.CanInsert(IPrincipal)
  fullName: System.Web.DynamicData.MetaTable.CanInsert(IPrincipal)
- uid: System.Web.DynamicData.MetaTable.CanRead(System.Security.Principal.IPrincipal)
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: CanRead(IPrincipal)
  nameWithType: MetaTable.CanRead(IPrincipal)
  fullName: System.Web.DynamicData.MetaTable.CanRead(IPrincipal)
- uid: System.Web.DynamicData.MetaTable.CanUpdate(System.Security.Principal.IPrincipal)
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: CanUpdate(IPrincipal)
  nameWithType: MetaTable.CanUpdate(IPrincipal)
  fullName: System.Web.DynamicData.MetaTable.CanUpdate(IPrincipal)
- uid: System.Web.DynamicData.MetaTable.Columns
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: Columns
  nameWithType: MetaTable.Columns
  fullName: System.Web.DynamicData.MetaTable.Columns
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Web.DynamicData.MetaColumn}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<MetaColumn>
  nameWithType: ReadOnlyCollection<MetaColumn>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Web.DynamicData.MetaColumn>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Web.DynamicData.MetaColumn>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.DynamicData.MetaColumn
    name: MetaColumn
    nameWithType: MetaColumn
    fullName: MetaColumn
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.DynamicData.MetaTable.CreateChildrenColumn(System.Web.DynamicData.ModelProviders.ColumnProvider)
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: CreateChildrenColumn(ColumnProvider)
  nameWithType: MetaTable.CreateChildrenColumn(ColumnProvider)
  fullName: System.Web.DynamicData.MetaTable.CreateChildrenColumn(ColumnProvider)
- uid: System.Web.DynamicData.MetaChildrenColumn
  parent: System.Web.DynamicData
  isExternal: false
  name: MetaChildrenColumn
  nameWithType: MetaChildrenColumn
  fullName: System.Web.DynamicData.MetaChildrenColumn
- uid: System.Web.DynamicData.ModelProviders.ColumnProvider
  parent: System.Web.DynamicData.ModelProviders
  isExternal: false
  name: ColumnProvider
  nameWithType: ColumnProvider
  fullName: System.Web.DynamicData.ModelProviders.ColumnProvider
- uid: System.Web.DynamicData.MetaTable.CreateColumn(System.Web.DynamicData.ModelProviders.ColumnProvider)
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: CreateColumn(ColumnProvider)
  nameWithType: MetaTable.CreateColumn(ColumnProvider)
  fullName: System.Web.DynamicData.MetaTable.CreateColumn(ColumnProvider)
- uid: System.Web.DynamicData.MetaColumn
  parent: System.Web.DynamicData
  isExternal: false
  name: MetaColumn
  nameWithType: MetaColumn
  fullName: System.Web.DynamicData.MetaColumn
- uid: System.Web.DynamicData.MetaTable.CreateContext
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: CreateContext()
  nameWithType: MetaTable.CreateContext()
  fullName: System.Web.DynamicData.MetaTable.CreateContext()
- uid: System.Web.DynamicData.MetaTable.CreateForeignKeyColumn(System.Web.DynamicData.ModelProviders.ColumnProvider)
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: CreateForeignKeyColumn(ColumnProvider)
  nameWithType: MetaTable.CreateForeignKeyColumn(ColumnProvider)
  fullName: System.Web.DynamicData.MetaTable.CreateForeignKeyColumn(ColumnProvider)
- uid: System.Web.DynamicData.MetaForeignKeyColumn
  parent: System.Web.DynamicData
  isExternal: false
  name: MetaForeignKeyColumn
  nameWithType: MetaForeignKeyColumn
  fullName: System.Web.DynamicData.MetaForeignKeyColumn
- uid: System.Web.DynamicData.MetaTable.CreateTable(System.ComponentModel.ICustomTypeDescriptor)
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: CreateTable(ICustomTypeDescriptor)
  nameWithType: MetaTable.CreateTable(ICustomTypeDescriptor)
  fullName: System.Web.DynamicData.MetaTable.CreateTable(ICustomTypeDescriptor)
- uid: System.Web.DynamicData.MetaTable
  parent: System.Web.DynamicData
  isExternal: false
  name: MetaTable
  nameWithType: MetaTable
  fullName: System.Web.DynamicData.MetaTable
- uid: System.ComponentModel.ICustomTypeDescriptor
  parent: System.ComponentModel
  isExternal: false
  name: ICustomTypeDescriptor
  nameWithType: ICustomTypeDescriptor
  fullName: System.ComponentModel.ICustomTypeDescriptor
- uid: System.Web.DynamicData.MetaTable.CreateTable(System.Type)
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: CreateTable(Type)
  nameWithType: MetaTable.CreateTable(Type)
  fullName: System.Web.DynamicData.MetaTable.CreateTable(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.DynamicData.MetaTable.DataContextPropertyName
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: DataContextPropertyName
  nameWithType: MetaTable.DataContextPropertyName
  fullName: System.Web.DynamicData.MetaTable.DataContextPropertyName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.DynamicData.MetaTable.DataContextType
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: DataContextType
  nameWithType: MetaTable.DataContextType
  fullName: System.Web.DynamicData.MetaTable.DataContextType
- uid: System.Web.DynamicData.MetaTable.DisplayColumn
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: DisplayColumn
  nameWithType: MetaTable.DisplayColumn
  fullName: System.Web.DynamicData.MetaTable.DisplayColumn
- uid: System.Web.DynamicData.MetaTable.DisplayName
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: DisplayName
  nameWithType: MetaTable.DisplayName
  fullName: System.Web.DynamicData.MetaTable.DisplayName
- uid: System.Web.DynamicData.MetaTable.EntityType
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: EntityType
  nameWithType: MetaTable.EntityType
  fullName: System.Web.DynamicData.MetaTable.EntityType
- uid: System.Web.DynamicData.MetaTable.ForeignKeyColumnsNames
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: ForeignKeyColumnsNames
  nameWithType: MetaTable.ForeignKeyColumnsNames
  fullName: System.Web.DynamicData.MetaTable.ForeignKeyColumnsNames
- uid: System.Web.DynamicData.MetaTable.GetActionPath(System.String)
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: GetActionPath(String)
  nameWithType: MetaTable.GetActionPath(String)
  fullName: System.Web.DynamicData.MetaTable.GetActionPath(String)
- uid: System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Collections.Generic.IList{System.Object})
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: GetActionPath(String,IList<Object>)
  nameWithType: MetaTable.GetActionPath(String,IList<Object>)
  fullName: System.Web.DynamicData.MetaTable.GetActionPath(String,IList<Object>)
- uid: System.Collections.Generic.IList{System.Object}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<Object>
  nameWithType: IList<Object>
  fullName: System.Collections.Generic.IList<System.Object>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Object)
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: GetActionPath(String,Object)
  nameWithType: MetaTable.GetActionPath(String,Object)
  fullName: System.Web.DynamicData.MetaTable.GetActionPath(String,Object)
- uid: System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Web.Routing.RouteValueDictionary)
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: GetActionPath(String,RouteValueDictionary)
  nameWithType: MetaTable.GetActionPath(String,RouteValueDictionary)
  fullName: System.Web.DynamicData.MetaTable.GetActionPath(String,RouteValueDictionary)
- uid: System.Web.Routing.RouteValueDictionary
  parent: System.Web.Routing
  isExternal: true
  name: RouteValueDictionary
  nameWithType: RouteValueDictionary
  fullName: System.Web.Routing.RouteValueDictionary
- uid: System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Collections.Generic.IList{System.Object},System.String)
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: GetActionPath(String,IList<Object>,String)
  nameWithType: MetaTable.GetActionPath(String,IList<Object>,String)
  fullName: System.Web.DynamicData.MetaTable.GetActionPath(String,IList<Object>,String)
- uid: System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Object,System.String)
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: GetActionPath(String,Object,String)
  nameWithType: MetaTable.GetActionPath(String,Object,String)
  fullName: System.Web.DynamicData.MetaTable.GetActionPath(String,Object,String)
- uid: System.Web.DynamicData.MetaTable.GetColumn(System.String)
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: GetColumn(String)
  nameWithType: MetaTable.GetColumn(String)
  fullName: System.Web.DynamicData.MetaTable.GetColumn(String)
- uid: System.Web.DynamicData.MetaTable.GetColumnValuesFromRoute(System.Web.HttpContext)
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: GetColumnValuesFromRoute(HttpContext)
  nameWithType: MetaTable.GetColumnValuesFromRoute(HttpContext)
  fullName: System.Web.DynamicData.MetaTable.GetColumnValuesFromRoute(HttpContext)
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<String,Object>
  nameWithType: IDictionary<String,Object>
  fullName: System.Collections.Generic.IDictionary<System.String,System.Object>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.String,System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.Web.DynamicData.MetaTable.GetDataKeyFromRoute
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: GetDataKeyFromRoute()
  nameWithType: MetaTable.GetDataKeyFromRoute()
  fullName: System.Web.DynamicData.MetaTable.GetDataKeyFromRoute()
- uid: System.Web.UI.WebControls.DataKey
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataKey
  nameWithType: DataKey
  fullName: System.Web.UI.WebControls.DataKey
- uid: System.Web.DynamicData.MetaTable.GetDisplayString(System.Object)
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: GetDisplayString(Object)
  nameWithType: MetaTable.GetDisplayString(Object)
  fullName: System.Web.DynamicData.MetaTable.GetDisplayString(Object)
- uid: System.Web.DynamicData.MetaTable.GetFilteredColumns
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: GetFilteredColumns()
  nameWithType: MetaTable.GetFilteredColumns()
  fullName: System.Web.DynamicData.MetaTable.GetFilteredColumns()
- uid: System.Collections.Generic.IEnumerable{System.Web.DynamicData.MetaColumn}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<MetaColumn>
  nameWithType: IEnumerable<MetaColumn>
  fullName: System.Collections.Generic.IEnumerable<System.Web.DynamicData.MetaColumn>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Web.DynamicData.MetaColumn>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.DynamicData.MetaColumn
    name: MetaColumn
    nameWithType: MetaColumn
    fullName: MetaColumn
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.DynamicData.MetaTable.GetPrimaryKeyDictionary(System.Object)
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: GetPrimaryKeyDictionary(Object)
  nameWithType: MetaTable.GetPrimaryKeyDictionary(Object)
  fullName: System.Web.DynamicData.MetaTable.GetPrimaryKeyDictionary(Object)
- uid: System.Web.DynamicData.MetaTable.GetPrimaryKeyString(System.Collections.Generic.IList{System.Object})
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: GetPrimaryKeyString(IList<Object>)
  nameWithType: MetaTable.GetPrimaryKeyString(IList<Object>)
  fullName: System.Web.DynamicData.MetaTable.GetPrimaryKeyString(IList<Object>)
- uid: System.Web.DynamicData.MetaTable.GetPrimaryKeyString(System.Object)
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: GetPrimaryKeyString(Object)
  nameWithType: MetaTable.GetPrimaryKeyString(Object)
  fullName: System.Web.DynamicData.MetaTable.GetPrimaryKeyString(Object)
- uid: System.Web.DynamicData.MetaTable.GetPrimaryKeyValues(System.Object)
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: GetPrimaryKeyValues(Object)
  nameWithType: MetaTable.GetPrimaryKeyValues(Object)
  fullName: System.Web.DynamicData.MetaTable.GetPrimaryKeyValues(Object)
- uid: System.Web.DynamicData.MetaTable.GetQuery
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: GetQuery()
  nameWithType: MetaTable.GetQuery()
  fullName: System.Web.DynamicData.MetaTable.GetQuery()
- uid: System.Linq.IQueryable
  parent: System.Linq
  isExternal: true
  name: IQueryable
  nameWithType: IQueryable
  fullName: System.Linq.IQueryable
- uid: System.Web.DynamicData.MetaTable.GetQuery(System.Object)
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: GetQuery(Object)
  nameWithType: MetaTable.GetQuery(Object)
  fullName: System.Web.DynamicData.MetaTable.GetQuery(Object)
- uid: System.Web.DynamicData.MetaTable.GetScaffoldColumns(System.Web.UI.WebControls.DataBoundControlMode,System.Web.DynamicData.ContainerType)
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: GetScaffoldColumns(DataBoundControlMode,ContainerType)
  nameWithType: MetaTable.GetScaffoldColumns(DataBoundControlMode,ContainerType)
  fullName: System.Web.DynamicData.MetaTable.GetScaffoldColumns(DataBoundControlMode,ContainerType)
- uid: System.Web.UI.WebControls.DataBoundControlMode
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataBoundControlMode
  nameWithType: DataBoundControlMode
  fullName: System.Web.UI.WebControls.DataBoundControlMode
- uid: System.Web.DynamicData.ContainerType
  parent: System.Web.DynamicData
  isExternal: false
  name: ContainerType
  nameWithType: ContainerType
  fullName: System.Web.DynamicData.ContainerType
- uid: System.Web.DynamicData.MetaTable.GetTable(System.Type)
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: GetTable(Type)
  nameWithType: MetaTable.GetTable(Type)
  fullName: System.Web.DynamicData.MetaTable.GetTable(Type)
- uid: System.Web.DynamicData.MetaTable.HasPrimaryKey
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: HasPrimaryKey
  nameWithType: MetaTable.HasPrimaryKey
  fullName: System.Web.DynamicData.MetaTable.HasPrimaryKey
- uid: System.Web.DynamicData.MetaTable.Initialize
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: Initialize()
  nameWithType: MetaTable.Initialize()
  fullName: System.Web.DynamicData.MetaTable.Initialize()
- uid: System.Web.DynamicData.MetaTable.IsReadOnly
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: IsReadOnly
  nameWithType: MetaTable.IsReadOnly
  fullName: System.Web.DynamicData.MetaTable.IsReadOnly
- uid: System.Web.DynamicData.MetaTable.ListActionPath
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: ListActionPath
  nameWithType: MetaTable.ListActionPath
  fullName: System.Web.DynamicData.MetaTable.ListActionPath
- uid: System.Web.DynamicData.MetaTable.Model
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: Model
  nameWithType: MetaTable.Model
  fullName: System.Web.DynamicData.MetaTable.Model
- uid: System.Web.DynamicData.MetaTable.Name
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: Name
  nameWithType: MetaTable.Name
  fullName: System.Web.DynamicData.MetaTable.Name
- uid: System.Web.DynamicData.MetaTable.PrimaryKeyColumns
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: PrimaryKeyColumns
  nameWithType: MetaTable.PrimaryKeyColumns
  fullName: System.Web.DynamicData.MetaTable.PrimaryKeyColumns
- uid: System.Web.DynamicData.MetaTable.Provider
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: Provider
  nameWithType: MetaTable.Provider
  fullName: System.Web.DynamicData.MetaTable.Provider
- uid: System.Web.DynamicData.MetaTable.ResetMetadata
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: ResetMetadata()
  nameWithType: MetaTable.ResetMetadata()
  fullName: System.Web.DynamicData.MetaTable.ResetMetadata()
- uid: System.Web.DynamicData.MetaTable.RootEntityType
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: RootEntityType
  nameWithType: MetaTable.RootEntityType
  fullName: System.Web.DynamicData.MetaTable.RootEntityType
- uid: System.Web.DynamicData.MetaTable.Scaffold
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: Scaffold
  nameWithType: MetaTable.Scaffold
  fullName: System.Web.DynamicData.MetaTable.Scaffold
- uid: System.Web.DynamicData.MetaTable.SortColumn
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: SortColumn
  nameWithType: MetaTable.SortColumn
  fullName: System.Web.DynamicData.MetaTable.SortColumn
- uid: System.Web.DynamicData.MetaTable.SortDescending
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: SortDescending
  nameWithType: MetaTable.SortDescending
  fullName: System.Web.DynamicData.MetaTable.SortDescending
- uid: System.Web.DynamicData.MetaTable.ToString
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: ToString()
  nameWithType: MetaTable.ToString()
  fullName: System.Web.DynamicData.MetaTable.ToString()
- uid: System.Web.DynamicData.MetaTable.TryGetColumn(System.String,System.Web.DynamicData.MetaColumn@)
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: TryGetColumn(String,MetaColumn)
  nameWithType: MetaTable.TryGetColumn(String,MetaColumn)
  fullName: System.Web.DynamicData.MetaTable.TryGetColumn(String,MetaColumn)
- uid: System.Web.DynamicData.MetaTable.TryGetTable(System.Type,System.Web.DynamicData.MetaTable@)
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: TryGetTable(Type,MetaTable)
  nameWithType: MetaTable.TryGetTable(Type,MetaTable)
  fullName: System.Web.DynamicData.MetaTable.TryGetTable(Type,MetaTable)
- uid: System.Web.DynamicData.MetaTable.#ctor*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: MetaTable
  nameWithType: MetaTable.MetaTable
- uid: System.Web.DynamicData.MetaTable.Attributes*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: Attributes
  nameWithType: MetaTable.Attributes
- uid: System.Web.DynamicData.MetaTable.BuildAttributeCollection*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: BuildAttributeCollection
  nameWithType: MetaTable.BuildAttributeCollection
- uid: System.Web.DynamicData.MetaTable.CanDelete*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: CanDelete
  nameWithType: MetaTable.CanDelete
- uid: System.Web.DynamicData.MetaTable.CanInsert*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: CanInsert
  nameWithType: MetaTable.CanInsert
- uid: System.Web.DynamicData.MetaTable.CanRead*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: CanRead
  nameWithType: MetaTable.CanRead
- uid: System.Web.DynamicData.MetaTable.CanUpdate*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: CanUpdate
  nameWithType: MetaTable.CanUpdate
- uid: System.Web.DynamicData.MetaTable.Columns*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: Columns
  nameWithType: MetaTable.Columns
- uid: System.Web.DynamicData.MetaTable.CreateChildrenColumn*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: CreateChildrenColumn
  nameWithType: MetaTable.CreateChildrenColumn
- uid: System.Web.DynamicData.MetaTable.CreateColumn*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: CreateColumn
  nameWithType: MetaTable.CreateColumn
- uid: System.Web.DynamicData.MetaTable.CreateContext*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: CreateContext
  nameWithType: MetaTable.CreateContext
- uid: System.Web.DynamicData.MetaTable.CreateForeignKeyColumn*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: CreateForeignKeyColumn
  nameWithType: MetaTable.CreateForeignKeyColumn
- uid: System.Web.DynamicData.MetaTable.CreateTable*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: CreateTable
  nameWithType: MetaTable.CreateTable
- uid: System.Web.DynamicData.MetaTable.DataContextPropertyName*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: DataContextPropertyName
  nameWithType: MetaTable.DataContextPropertyName
- uid: System.Web.DynamicData.MetaTable.DataContextType*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: DataContextType
  nameWithType: MetaTable.DataContextType
- uid: System.Web.DynamicData.MetaTable.DisplayColumn*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: DisplayColumn
  nameWithType: MetaTable.DisplayColumn
- uid: System.Web.DynamicData.MetaTable.DisplayName*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: DisplayName
  nameWithType: MetaTable.DisplayName
- uid: System.Web.DynamicData.MetaTable.EntityType*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: EntityType
  nameWithType: MetaTable.EntityType
- uid: System.Web.DynamicData.MetaTable.ForeignKeyColumnsNames*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: ForeignKeyColumnsNames
  nameWithType: MetaTable.ForeignKeyColumnsNames
- uid: System.Web.DynamicData.MetaTable.GetActionPath*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: GetActionPath
  nameWithType: MetaTable.GetActionPath
- uid: System.Web.DynamicData.MetaTable.GetColumn*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: GetColumn
  nameWithType: MetaTable.GetColumn
- uid: System.Web.DynamicData.MetaTable.GetColumnValuesFromRoute*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: GetColumnValuesFromRoute
  nameWithType: MetaTable.GetColumnValuesFromRoute
- uid: System.Web.DynamicData.MetaTable.GetDataKeyFromRoute*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: GetDataKeyFromRoute
  nameWithType: MetaTable.GetDataKeyFromRoute
- uid: System.Web.DynamicData.MetaTable.GetDisplayString*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: GetDisplayString
  nameWithType: MetaTable.GetDisplayString
- uid: System.Web.DynamicData.MetaTable.GetFilteredColumns*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: GetFilteredColumns
  nameWithType: MetaTable.GetFilteredColumns
- uid: System.Web.DynamicData.MetaTable.GetPrimaryKeyDictionary*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: GetPrimaryKeyDictionary
  nameWithType: MetaTable.GetPrimaryKeyDictionary
- uid: System.Web.DynamicData.MetaTable.GetPrimaryKeyString*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: GetPrimaryKeyString
  nameWithType: MetaTable.GetPrimaryKeyString
- uid: System.Web.DynamicData.MetaTable.GetPrimaryKeyValues*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: GetPrimaryKeyValues
  nameWithType: MetaTable.GetPrimaryKeyValues
- uid: System.Web.DynamicData.MetaTable.GetQuery*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: GetQuery
  nameWithType: MetaTable.GetQuery
- uid: System.Web.DynamicData.MetaTable.GetScaffoldColumns*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: GetScaffoldColumns
  nameWithType: MetaTable.GetScaffoldColumns
- uid: System.Web.DynamicData.MetaTable.GetTable*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: GetTable
  nameWithType: MetaTable.GetTable
- uid: System.Web.DynamicData.MetaTable.HasPrimaryKey*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: HasPrimaryKey
  nameWithType: MetaTable.HasPrimaryKey
- uid: System.Web.DynamicData.MetaTable.Initialize*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: Initialize
  nameWithType: MetaTable.Initialize
- uid: System.Web.DynamicData.MetaTable.IsReadOnly*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: IsReadOnly
  nameWithType: MetaTable.IsReadOnly
- uid: System.Web.DynamicData.MetaTable.ListActionPath*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: ListActionPath
  nameWithType: MetaTable.ListActionPath
- uid: System.Web.DynamicData.MetaTable.Model*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: Model
  nameWithType: MetaTable.Model
- uid: System.Web.DynamicData.MetaTable.Name*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: Name
  nameWithType: MetaTable.Name
- uid: System.Web.DynamicData.MetaTable.PrimaryKeyColumns*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: PrimaryKeyColumns
  nameWithType: MetaTable.PrimaryKeyColumns
- uid: System.Web.DynamicData.MetaTable.Provider*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: Provider
  nameWithType: MetaTable.Provider
- uid: System.Web.DynamicData.MetaTable.ResetMetadata*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: ResetMetadata
  nameWithType: MetaTable.ResetMetadata
- uid: System.Web.DynamicData.MetaTable.RootEntityType*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: RootEntityType
  nameWithType: MetaTable.RootEntityType
- uid: System.Web.DynamicData.MetaTable.Scaffold*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: Scaffold
  nameWithType: MetaTable.Scaffold
- uid: System.Web.DynamicData.MetaTable.SortColumn*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: SortColumn
  nameWithType: MetaTable.SortColumn
- uid: System.Web.DynamicData.MetaTable.SortDescending*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: SortDescending
  nameWithType: MetaTable.SortDescending
- uid: System.Web.DynamicData.MetaTable.ToString*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: ToString
  nameWithType: MetaTable.ToString
- uid: System.Web.DynamicData.MetaTable.TryGetColumn*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: TryGetColumn
  nameWithType: MetaTable.TryGetColumn
- uid: System.Web.DynamicData.MetaTable.TryGetTable*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: TryGetTable
  nameWithType: MetaTable.TryGetTable
