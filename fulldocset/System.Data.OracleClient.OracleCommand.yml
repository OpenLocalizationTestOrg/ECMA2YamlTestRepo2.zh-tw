### YamlMime:ManagedReference
items:
- uid: System.Data.OracleClient.OracleCommand
  id: OracleCommand
  children:
  - System.Data.OracleClient.OracleCommand.#ctor
  - System.Data.OracleClient.OracleCommand.#ctor(System.String)
  - System.Data.OracleClient.OracleCommand.#ctor(System.String,System.Data.OracleClient.OracleConnection)
  - System.Data.OracleClient.OracleCommand.#ctor(System.String,System.Data.OracleClient.OracleConnection,System.Data.OracleClient.OracleTransaction)
  - System.Data.OracleClient.OracleCommand.Cancel
  - System.Data.OracleClient.OracleCommand.Clone
  - System.Data.OracleClient.OracleCommand.CommandText
  - System.Data.OracleClient.OracleCommand.CommandTimeout
  - System.Data.OracleClient.OracleCommand.CommandType
  - System.Data.OracleClient.OracleCommand.Connection
  - System.Data.OracleClient.OracleCommand.CreateDbParameter
  - System.Data.OracleClient.OracleCommand.CreateParameter
  - System.Data.OracleClient.OracleCommand.DbConnection
  - System.Data.OracleClient.OracleCommand.DbParameterCollection
  - System.Data.OracleClient.OracleCommand.DbTransaction
  - System.Data.OracleClient.OracleCommand.DesignTimeVisible
  - System.Data.OracleClient.OracleCommand.ExecuteDbDataReader(System.Data.CommandBehavior)
  - System.Data.OracleClient.OracleCommand.ExecuteNonQuery
  - System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery(System.Data.OracleClient.OracleString@)
  - System.Data.OracleClient.OracleCommand.ExecuteOracleScalar
  - System.Data.OracleClient.OracleCommand.ExecuteReader
  - System.Data.OracleClient.OracleCommand.ExecuteReader(System.Data.CommandBehavior)
  - System.Data.OracleClient.OracleCommand.ExecuteScalar
  - System.Data.OracleClient.OracleCommand.Parameters
  - System.Data.OracleClient.OracleCommand.Prepare
  - System.Data.OracleClient.OracleCommand.ResetCommandTimeout
  - System.Data.OracleClient.OracleCommand.Transaction
  - System.Data.OracleClient.OracleCommand.UpdatedRowSource
  langs:
  - csharp
  name: OracleCommand
  nameWithType: OracleCommand
  fullName: System.Data.OracleClient.OracleCommand
  type: Class
  summary: "代表 SQL 陳述式或預存程序，對資料庫執行。 這個類別無法被繼承。"
  remarks: "此類型已被取代，並將在未來的.NET Framework 版本中移除。 如需詳細資訊，請參閱[Oracle 和 ADO.NET](~/add/includes/ajax-current-ext-md.md)。       OracleCommand 類別提供下列方法來對資料來源執行命令: |項目 |描述 |  |----------|-----------------|  |<xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A>|執行傳回資料列的命令。 |  |<xref:System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery%2A>|執行 SQL 陳述式針對<xref:System.Data.OracleClient.OracleCommand.Connection%2A>並傳回受影響的資料列數目。 |  |<xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A>|執行命令，例如 SQL INSERT、 DELETE、 UPDATE 和 SET 陳述式。 |  |<xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A>|從.NET Framework 資料型別為資料庫中擷取單一值 （例如，彙總的值）。 |  |<xref:System.Data.OracleClient.OracleCommand.ExecuteOracleScalar%2A>|從特定的 Oracle 資料型別為資料庫中擷取單一值 （例如，彙總的值）。 |      您可以重設<xref:System.Data.OracleClient.OracleCommand.CommandText%2A>屬性和重複使用 OracleCommand 物件。</xref:System.Data.OracleClient.OracleCommand.CommandText%2A> </xref:System.Data.OracleClient.OracleCommand.ExecuteOracleScalar%2A> </xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A> </xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A> </xref:System.Data.OracleClient.OracleCommand.Connection%2A> </xref:System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery%2A> </xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A>       如果執行此命令會導致嚴重<xref:System.Data.OracleClient.OracleException>、<xref:System.Data.OracleClient.OracleConnection>可能會關閉。</xref:System.Data.OracleClient.OracleConnection> </xref:System.Data.OracleClient.OracleException> 不過，使用者可以再次開啟連線後繼續。      > [!NOTE] > 不同於**命令**物件中的其他.NET Framework 資料提供者 （SQL Server、 OLE DB 和 ODBC） 物件不支援 OracleCommand<xref:System.Data.OracleClient.OracleCommand.CommandTimeout%2A>屬性。</xref:System.Data.OracleClient.OracleCommand.CommandTimeout%2A> 設定命令逾時有任何作用，傳回的值也永遠是零。"
  example:
  - "The following example uses the <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A> method of OracleCommand, along with <xref:System.Data.OracleClient.OracleDataReader> and <xref:System.Data.OracleClient.OracleConnection>, to select rows from a table.  \n  \n [!code-cs[Classic WebData OracleCommand#1](~/add/codesnippet/csharp/t-system.data.oracleclie_7_1.cs)]\n [!code-vb[Classic WebData OracleCommand#1](~/add/codesnippet/visualbasic/t-system.data.oracleclie_7_1.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("RecordsAffected")]

      [System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.OracleCommandDesigner, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.ComponentModel.ToolboxItem(true)]

      [System.Obsolete("OracleCommand has been deprecated. http://go.microsoft.com/fwlink/?LinkID=144260", false)]

      public sealed class OracleCommand : System.Data.Common.DbCommand, ICloneable
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  - System.Data.Common.DbCommand
  implements:
  - System.ICloneable
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Dispose(System.Boolean)
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)
  - System.Data.Common.DbCommand.ExecuteNonQueryAsync
  - System.Data.Common.DbCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)
  - System.Data.Common.DbCommand.ExecuteReaderAsync
  - System.Data.Common.DbCommand.ExecuteReaderAsync(System.Data.CommandBehavior)
  - System.Data.Common.DbCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)
  - System.Data.Common.DbCommand.ExecuteReaderAsync(System.Threading.CancellationToken)
  - System.Data.Common.DbCommand.ExecuteScalarAsync
  - System.Data.Common.DbCommand.ExecuteScalarAsync(System.Threading.CancellationToken)
  - System.Data.Common.DbCommand.System#Data#IDbCommand#Connection
  - System.Data.Common.DbCommand.System#Data#IDbCommand#CreateParameter
  - System.Data.Common.DbCommand.System#Data#IDbCommand#ExecuteReader
  - System.Data.Common.DbCommand.System#Data#IDbCommand#ExecuteReader(System.Data.CommandBehavior)
  - System.Data.Common.DbCommand.System#Data#IDbCommand#Parameters
  - System.Data.Common.DbCommand.System#Data#IDbCommand#Transaction
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommand.#ctor
  id: '#ctor'
  parent: System.Data.OracleClient.OracleCommand
  langs:
  - csharp
  name: OracleCommand()
  nameWithType: OracleCommand.OracleCommand()
  fullName: System.Data.OracleClient.OracleCommand.OracleCommand()
  type: Constructor
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "初始化的新執行個體<xref href=&quot;System.Data.OracleClient.OracleCommand&quot;> </xref>。"
  remarks: "基底建構函式所有的欄位初始化成為其預設值。 下表顯示<xref:System.Data.OracleClient.OracleCommand>.</xref:System.Data.OracleClient.OracleCommand>的執行個體的初始屬性值      |屬性 |初始值 |  |----------------|-------------------|  |<xref:System.Data.OracleClient.OracleCommand.CommandText%2A>| 空字串 (&quot;&quot;) |  |<xref:System.Data.OracleClient.OracleCommand.CommandType%2A>|`Text`|  |<xref:System.Data.OracleClient.OracleCommand.Connection%2A>|null|</xref:System.Data.OracleClient.OracleCommand.Connection%2A></xref:System.Data.OracleClient.OracleCommand.CommandType%2A></xref:System.Data.OracleClient.OracleCommand.CommandText%2A>"
  example:
  - "The following example creates an <xref:System.Data.OracleClient.OracleCommand> and sets some of its properties.  \n  \n [!code-cs[Classic WebData OracleCommand.OracleCommand#1](~/add/codesnippet/csharp/m-system.data.oracleclie_12_1.cs)]\n [!code-vb[Classic WebData OracleCommand.OracleCommand#1](~/add/codesnippet/visualbasic/m-system.data.oracleclie_12_1.vb)]"
  syntax:
    content: public OracleCommand ();
    parameters: []
  overload: System.Data.OracleClient.OracleCommand.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommand.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Data.OracleClient.OracleCommand
  langs:
  - csharp
  name: OracleCommand(String)
  nameWithType: OracleCommand.OracleCommand(String)
  fullName: System.Data.OracleClient.OracleCommand.OracleCommand(String)
  type: Constructor
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "初始化的新執行個體<xref href=&quot;System.Data.OracleClient.OracleCommand&quot;></xref>查詢的文字與類別。"
  syntax:
    content: public OracleCommand (string commandText);
    parameters:
    - id: commandText
      type: System.String
      description: "查詢的文字。"
  overload: System.Data.OracleClient.OracleCommand.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommand.#ctor(System.String,System.Data.OracleClient.OracleConnection)
  id: '#ctor(System.String,System.Data.OracleClient.OracleConnection)'
  parent: System.Data.OracleClient.OracleCommand
  langs:
  - csharp
  name: OracleCommand(String,OracleConnection)
  nameWithType: OracleCommand.OracleCommand(String,OracleConnection)
  fullName: System.Data.OracleClient.OracleCommand.OracleCommand(String,OracleConnection)
  type: Constructor
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "初始化的新執行個體<xref href=&quot;System.Data.OracleClient.OracleCommand&quot;></xref>查詢的文字與類別和<xref href=&quot;System.Data.OracleClient.OracleConnection&quot;></xref>物件。"
  remarks: ''
  example:
  - "The following example creates an <xref:System.Data.OracleClient.OracleCommand>.  \n  \n [!code-vb[Classic WebData OracleCommand.OracleCommand2#1](~/add/codesnippet/visualbasic/24f167a1-f345-47a8-a620-_1.vb)]\n [!code-cs[Classic WebData OracleCommand.OracleCommand2#1](~/add/codesnippet/csharp/24f167a1-f345-47a8-a620-_1.cs)]"
  syntax:
    content: public OracleCommand (string commandText, System.Data.OracleClient.OracleConnection connection);
    parameters:
    - id: commandText
      type: System.String
      description: "查詢的文字。"
    - id: connection
      type: System.Data.OracleClient.OracleConnection
      description: "<xref href=&quot;System.Data.OracleClient.OracleConnection&quot;> </xref>物件，表示資料庫的連接。"
  overload: System.Data.OracleClient.OracleCommand.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommand.#ctor(System.String,System.Data.OracleClient.OracleConnection,System.Data.OracleClient.OracleTransaction)
  id: '#ctor(System.String,System.Data.OracleClient.OracleConnection,System.Data.OracleClient.OracleTransaction)'
  parent: System.Data.OracleClient.OracleCommand
  langs:
  - csharp
  name: OracleCommand(String,OracleConnection,OracleTransaction)
  nameWithType: OracleCommand.OracleCommand(String,OracleConnection,OracleTransaction)
  fullName: System.Data.OracleClient.OracleCommand.OracleCommand(String,OracleConnection,OracleTransaction)
  type: Constructor
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "初始化的新執行個體<xref href=&quot;System.Data.OracleClient.OracleCommand&quot;></xref>在查詢的文字與類別<xref href=&quot;System.Data.OracleClient.OracleConnection&quot;></xref>物件，和<xref href=&quot;System.Data.OracleClient.OracleTransaction&quot;> </xref>。"
  remarks: "下表顯示這項實作<xref:System.Data.OracleClient.OracleCommand>.</xref:System.Data.OracleClient.OracleCommand>的執行個體的初始屬性值      |屬性 |初始值 |  |----------------|-------------------|  |<xref:System.Data.OracleClient.OracleCommand.CommandText%2A>|`cmdText`|  |<xref:System.Data.OracleClient.OracleCommand.CommandType%2A>|`Text`|  |<xref:System.Data.OracleClient.OracleCommand.Connection%2A>|這是值的新<xref:System.Data.OracleClient.OracleConnection>`connection`參數。 |      您可以變更任何這些參數的值設定相關的屬性。</xref:System.Data.OracleClient.OracleConnection> </xref:System.Data.OracleClient.OracleCommand.Connection%2A> </xref:System.Data.OracleClient.OracleCommand.CommandType%2A> </xref:System.Data.OracleClient.OracleCommand.CommandText%2A>"
  example:
  - "The following example creates an <xref:System.Data.OracleClient.OracleCommand> and sets some of its properties.  \n  \n [!code-vb[Classic WebData OracleCommand.OracleCommand3#1](~/add/codesnippet/visualbasic/c02f7271-efcb-41b3-bc5c-_1.vb)]\n [!code-cs[Classic WebData OracleCommand.OracleCommand3#1](~/add/codesnippet/csharp/c02f7271-efcb-41b3-bc5c-_1.cs)]"
  syntax:
    content: public OracleCommand (string commandText, System.Data.OracleClient.OracleConnection connection, System.Data.OracleClient.OracleTransaction tx);
    parameters:
    - id: commandText
      type: System.String
      description: "查詢的文字。"
    - id: connection
      type: System.Data.OracleClient.OracleConnection
      description: "<xref href=&quot;System.Data.OracleClient.OracleConnection&quot;> </xref>物件，表示資料庫的連接。"
    - id: tx
      type: System.Data.OracleClient.OracleTransaction
      description: "<xref href=&quot;System.Data.OracleClient.OracleTransaction&quot;> </xref>所在<xref href=&quot;System.Data.OracleClient.OracleCommand&quot;></xref>執行。"
  overload: System.Data.OracleClient.OracleCommand.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommand.Cancel
  id: Cancel
  parent: System.Data.OracleClient.OracleCommand
  langs:
  - csharp
  name: Cancel()
  nameWithType: OracleCommand.Cancel()
  fullName: System.Data.OracleClient.OracleCommand.Cancel()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "嘗試取消執行<xref href=&quot;System.Data.OracleClient.OracleCommand&quot;> </xref>。"
  remarks: "如果沒有要取消項目，會發生任何事。 不過，如果處理序中，沒有命令，而且要取消的嘗試失敗，就會不產生任何例外狀況。"
  example:
  - "The following example creates an <xref:System.Data.OracleClient.OracleCommand>, executes it, then cancels the execution. To accomplish this, the method is passed a string that is an SQL SELECT statement and a string to use to connect to the database.  \n  \n [!code-vb[Classic WebData OracleCommand.Cancel#1](~/add/codesnippet/visualbasic/m-system.data.oracleclie_6_1.vb)]\n [!code-cs[Classic WebData OracleCommand.Cancel#1](~/add/codesnippet/csharp/m-system.data.oracleclie_6_1.cs)]"
  syntax:
    content: public override void Cancel ();
    parameters: []
  overload: System.Data.OracleClient.OracleCommand.Cancel*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommand.Clone
  id: Clone
  parent: System.Data.OracleClient.OracleCommand
  langs:
  - csharp
  name: Clone()
  nameWithType: OracleCommand.Clone()
  fullName: System.Data.OracleClient.OracleCommand.Clone()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "建立一份這<xref href=&quot;System.Data.OracleClient.OracleCommand&quot;></xref>物件。"
  syntax:
    content: public object Clone ();
    parameters: []
    return:
      type: System.Object
      description: "新<xref href=&quot;System.Data.OracleClient.OracleCommand&quot;></xref>物件中的所有屬性值會與原來相同。"
  overload: System.Data.OracleClient.OracleCommand.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommand.CommandText
  id: CommandText
  parent: System.Data.OracleClient.OracleCommand
  langs:
  - csharp
  name: CommandText
  nameWithType: OracleCommand.CommandText
  fullName: System.Data.OracleClient.OracleCommand.CommandText
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "取得或設定 SQL 陳述式或預存程序，對資料庫執行。"
  remarks: "當<xref:System.Data.OracleClient.OracleCommand.CommandType%2A>屬性設定為`StoredProcedure`，CommandText 屬性應設定為預存程序的名稱。</xref:System.Data.OracleClient.OracleCommand.CommandType%2A> 使用者可能需要使用逸出字元語法，如果預存程序名稱包含任何特殊字元。 當您呼叫其中一個執行方法時，命令會執行這個預存程序。       傳遞參數至 SQL 陳述式所呼叫的.NET Framework Data Provider for Oracle 不支援問號 （？） 預留位置<xref:System.Data.OracleClient.OracleCommand>的`CommandType.Text`。</xref:System.Data.OracleClient.OracleCommand> 在此情況下，您必須使用具名的參數。 例如︰```   SELECT * FROM Customers WHERE CustomerID = :pCustomerID   ```時使用具名參數的 SQL 陳述式中呼叫<xref:System.Data.OracleClient.OracleCommand>的`CommandType.Text`，您必須在參數名稱，以冒號 （:）。</xref:System.Data.OracleClient.OracleCommand> 不過，在預存程序，或您的程式碼中的其他位置的具名參數 (例如，當加入<xref:System.Data.OracleClient.OracleParameter>物件加入至<xref:System.Data.OracleClient.OracleCommand.Parameters%2A>屬性)，不會在之前使用冒號 （:），為具名的參數。</xref:System.Data.OracleClient.OracleCommand.Parameters%2A> </xref:System.Data.OracleClient.OracleParameter> .NET Framework Data Provider for Oracle 都會自動提供冒號。"
  example:
  - "The following example creates an <xref:System.Data.OracleClient.OracleCommand> and sets some of its properties.  \n  \n [!code-cs[Classic WebData OracleCommand.CommandText#1](~/add/codesnippet/csharp/p-system.data.oracleclie_14_1.cs)]\n [!code-vb[Classic WebData OracleCommand.CommandText#1](~/add/codesnippet/visualbasic/p-system.data.oracleclie_14_1.vb)]"
  syntax:
    content: public override string CommandText { get; set; }
    return:
      type: System.String
      description: "SQL 陳述式或預存程序來執行。 預設值為空字串 (&quot;&quot;)。"
  overload: System.Data.OracleClient.OracleCommand.CommandText*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommand.CommandTimeout
  id: CommandTimeout
  parent: System.Data.OracleClient.OracleCommand
  langs:
  - csharp
  name: CommandTimeout
  nameWithType: OracleCommand.CommandTimeout
  fullName: System.Data.OracleClient.OracleCommand.CommandTimeout
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "取得或設定結束執行命令的嘗試並產生錯誤之前的等待時間。"
  remarks: "<xref:System.ArgumentException>會產生指定的 CommandTimeout 屬性值是否小於 0。</xref:System.ArgumentException>"
  syntax:
    content: public override int CommandTimeout { get; set; }
    return:
      type: System.Int32
      description: "時間 （以秒為單位） 以等候執行命令。 預設值為 30 秒。"
  overload: System.Data.OracleClient.OracleCommand.CommandTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommand.CommandType
  id: CommandType
  parent: System.Data.OracleClient.OracleCommand
  langs:
  - csharp
  name: CommandType
  nameWithType: OracleCommand.CommandType
  fullName: System.Data.OracleClient.OracleCommand.CommandType
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "取得或設定值，指出如何<xref:System.Data.OracleClient.OracleCommand.CommandText*>屬性會被解譯。</xref:System.Data.OracleClient.OracleCommand.CommandText*>"
  remarks: "當 CommandType 屬性設定為`StoredProcedure`，您應該設定<xref:System.Data.OracleClient.OracleCommand.CommandText%2A>完整的 Oracle call 語法的屬性。</xref:System.Data.OracleClient.OracleCommand.CommandText%2A> 命令再執行這個預存程序，當您呼叫其中一種 Execute 方法 (例如，<xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A>或<xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A>)。</xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A> </xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A>       <xref:System.Data.OracleClient.OracleCommand.Connection%2A>，CommandType 和<xref:System.Data.OracleClient.OracleCommand.CommandText%2A>無法設定屬性，如果目前的連接正在執行 execute 或擷取作業。</xref:System.Data.OracleClient.OracleCommand.CommandText%2A> </xref:System.Data.OracleClient.OracleCommand.Connection%2A>       傳遞參數至 SQL 陳述式所呼叫的.NET Framework Data Provider for Oracle 不支援問號 （？） 預留位置<xref:System.Data.OracleClient.OracleCommand>的`CommandType.Text`。</xref:System.Data.OracleClient.OracleCommand> 在此情況下，您必須使用具名的參數。 例如︰```   SELECT * FROM Customers WHERE CustomerID = :pCustomerID   ```時使用具名參數的 SQL 陳述式中呼叫<xref:System.Data.OracleClient.OracleCommand>的`CommandType.Text`，您必須在參數名稱，以冒號 （:）。</xref:System.Data.OracleClient.OracleCommand> 不過，在預存程序，或您的程式碼中的其他位置的具名參數 (例如，當加入<xref:System.Data.OracleClient.OracleParameter>物件加入至<xref:System.Data.OracleClient.OracleCommand.Parameters%2A>屬性)，不會在之前使用冒號 （:），為具名的參數。</xref:System.Data.OracleClient.OracleCommand.Parameters%2A> </xref:System.Data.OracleClient.OracleParameter> .NET Framework Data Provider for Oracle 都會自動提供冒號。"
  example:
  - "The following example creates an instance of a derived class <xref:System.Data.OracleClient.OracleCommand> and sets some of its properties.  \n  \n [!code-vb[Classic WebData OracleCommand.CommandType#1](~/add/codesnippet/visualbasic/p-system.data.oracleclie_2_1.vb)]\n [!code-cs[Classic WebData OracleCommand.CommandType#1](~/add/codesnippet/csharp/p-system.data.oracleclie_2_1.cs)]"
  syntax:
    content: public override System.Data.CommandType CommandType { get; set; }
    return:
      type: System.Data.CommandType
      description: "其中一個<xref href=&quot;System.Data.CommandType&quot;></xref>值。 預設值是<xref uid=&quot;langword_csharp_Text&quot; name=&quot;Text&quot; href=&quot;&quot;> </xref>。"
  overload: System.Data.OracleClient.OracleCommand.CommandType*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "值不是有效的<xref href=&quot;System.Data.CommandType&quot;> </xref>。"
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommand.Connection
  id: Connection
  parent: System.Data.OracleClient.OracleCommand
  langs:
  - csharp
  name: Connection
  nameWithType: OracleCommand.Connection
  fullName: System.Data.OracleClient.OracleCommand.Connection
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "取得或設定<xref href=&quot;System.Data.OracleClient.OracleConnection&quot;></xref>的這個執行個體所使用<xref href=&quot;System.Data.OracleClient.OracleCommand&quot;> </xref>。"
  remarks: "您無法設定此連接時， <xref:System.Data.OracleClient.OracleCommand.CommandType%2A>，和<xref:System.Data.OracleClient.OracleCommand.CommandText%2A>屬性如果目前的連接正在執行 execute 或擷取作業。</xref:System.Data.OracleClient.OracleCommand.CommandText%2A> </xref:System.Data.OracleClient.OracleCommand.CommandType%2A>       如果交易正在進行時，設定連線和<xref:System.Data.OracleClient.OracleCommand.Transaction%2A>屬性不是 null，<xref:System.InvalidOperationException>產生。</xref:System.InvalidOperationException> </xref:System.Data.OracleClient.OracleCommand.Transaction%2A> 如果已經認可或回復，交易之後，設定連線和<xref:System.Data.OracleClient.OracleCommand.Transaction%2A>屬性不是 null，<xref:System.Data.OracleClient.OracleCommand.Transaction%2A>屬性設為 null 的值。</xref:System.Data.OracleClient.OracleCommand.Transaction%2A> </xref:System.Data.OracleClient.OracleCommand.Transaction%2A>"
  example:
  - "The following example creates an <xref:System.Data.OracleClient.OracleCommand> and sets some of its properties.  \n  \n [!code-cs[Classic WebData OracleCommand.Connection#1](~/add/codesnippet/csharp/p-system.data.oracleclie_11_1.cs)]\n [!code-vb[Classic WebData OracleCommand.Connection#1](~/add/codesnippet/visualbasic/p-system.data.oracleclie_11_1.vb)]"
  syntax:
    content: public System.Data.OracleClient.OracleConnection Connection { get; set; }
    return:
      type: System.Data.OracleClient.OracleConnection
      description: "資料來源的連接。 預設值為 null 的值。"
  overload: System.Data.OracleClient.OracleCommand.Connection*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "交易正在進行中時，已變更連接屬性。"
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommand.CreateDbParameter
  id: CreateDbParameter
  parent: System.Data.OracleClient.OracleCommand
  langs:
  - csharp
  name: CreateDbParameter()
  nameWithType: OracleCommand.CreateDbParameter()
  fullName: System.Data.OracleClient.OracleCommand.CreateDbParameter()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  syntax:
    content: protected override System.Data.Common.DbParameter CreateDbParameter ();
    parameters: []
    return:
      type: System.Data.Common.DbParameter
      description: "即將加入。"
  overload: System.Data.OracleClient.OracleCommand.CreateDbParameter*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommand.CreateParameter
  id: CreateParameter
  parent: System.Data.OracleClient.OracleCommand
  langs:
  - csharp
  name: CreateParameter()
  nameWithType: OracleCommand.CreateParameter()
  fullName: System.Data.OracleClient.OracleCommand.CreateParameter()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "建立的新執行個體<xref href=&quot;System.Data.OracleClient.OracleParameter&quot;></xref>物件。"
  remarks: "CreateParameter 方法是強類型版本的<xref:System.Data.IDbCommand.CreateParameter%2A>.</xref:System.Data.IDbCommand.CreateParameter%2A>"
  syntax:
    content: public System.Data.OracleClient.OracleParameter CreateParameter ();
    parameters: []
    return:
      type: System.Data.OracleClient.OracleParameter
      description: "<xref href=&quot;System.Data.OracleClient.OracleParameter&quot;> </xref>物件。"
  overload: System.Data.OracleClient.OracleCommand.CreateParameter*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommand.DbConnection
  id: DbConnection
  parent: System.Data.OracleClient.OracleCommand
  langs:
  - csharp
  name: DbConnection
  nameWithType: OracleCommand.DbConnection
  fullName: System.Data.OracleClient.OracleCommand.DbConnection
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  syntax:
    content: protected override System.Data.Common.DbConnection DbConnection { get; set; }
    return:
      type: System.Data.Common.DbConnection
      description: "即將加入。"
  overload: System.Data.OracleClient.OracleCommand.DbConnection*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommand.DbParameterCollection
  id: DbParameterCollection
  parent: System.Data.OracleClient.OracleCommand
  langs:
  - csharp
  name: DbParameterCollection
  nameWithType: OracleCommand.DbParameterCollection
  fullName: System.Data.OracleClient.OracleCommand.DbParameterCollection
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  syntax:
    content: protected override System.Data.Common.DbParameterCollection DbParameterCollection { get; }
    return:
      type: System.Data.Common.DbParameterCollection
      description: "即將加入。"
  overload: System.Data.OracleClient.OracleCommand.DbParameterCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommand.DbTransaction
  id: DbTransaction
  parent: System.Data.OracleClient.OracleCommand
  langs:
  - csharp
  name: DbTransaction
  nameWithType: OracleCommand.DbTransaction
  fullName: System.Data.OracleClient.OracleCommand.DbTransaction
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  syntax:
    content: protected override System.Data.Common.DbTransaction DbTransaction { get; set; }
    return:
      type: System.Data.Common.DbTransaction
      description: "即將加入。"
  overload: System.Data.OracleClient.OracleCommand.DbTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommand.DesignTimeVisible
  id: DesignTimeVisible
  parent: System.Data.OracleClient.OracleCommand
  langs:
  - csharp
  name: DesignTimeVisible
  nameWithType: OracleCommand.DesignTimeVisible
  fullName: System.Data.OracleClient.OracleCommand.DesignTimeVisible
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "取得或設定值，指出命令物件是否應該在自訂的介面控制項中顯示。"
  syntax:
    content: public override bool DesignTimeVisible { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果命令物件應該顯示在控制項。否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Data.OracleClient.OracleCommand.DesignTimeVisible*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommand.ExecuteDbDataReader(System.Data.CommandBehavior)
  id: ExecuteDbDataReader(System.Data.CommandBehavior)
  parent: System.Data.OracleClient.OracleCommand
  langs:
  - csharp
  name: ExecuteDbDataReader(CommandBehavior)
  nameWithType: OracleCommand.ExecuteDbDataReader(CommandBehavior)
  fullName: System.Data.OracleClient.OracleCommand.ExecuteDbDataReader(CommandBehavior)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  syntax:
    content: protected override System.Data.Common.DbDataReader ExecuteDbDataReader (System.Data.CommandBehavior behavior);
    parameters:
    - id: behavior
      type: System.Data.CommandBehavior
      description: "即將加入。"
    return:
      type: System.Data.Common.DbDataReader
      description: "即將加入。"
  overload: System.Data.OracleClient.OracleCommand.ExecuteDbDataReader*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommand.ExecuteNonQuery
  id: ExecuteNonQuery
  parent: System.Data.OracleClient.OracleCommand
  langs:
  - csharp
  name: ExecuteNonQuery()
  nameWithType: OracleCommand.ExecuteNonQuery()
  fullName: System.Data.OracleClient.OracleCommand.ExecuteNonQuery()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "執行 SQL 陳述式針對<xref:System.Data.OracleClient.OracleCommand.Connection*>並傳回受影響的資料列數目。</xref:System.Data.OracleClient.OracleCommand.Connection*>"
  remarks: "您可以使用 ExecuteNonQuery 來執行資料庫目錄作業 （例如，查詢資料庫的結構或建立資料庫物件，例如資料表）;或若要變更的資料在資料庫中，而不使用<xref:System.Data.DataSet>、 藉由執行 INSERT、 UPDATE 或 DELETE 陳述式。</xref:System.Data.DataSet>       ExecuteNonQuery 未傳回任何資料列，雖然任何輸出參數或傳回值，對應到參數會以資料填入。       UPDATE、 INSERT 和 DELETE 陳述式的傳回值會是命令影響的資料列數目。 CREATE TABLE 和 DROP TABLE 陳述式的傳回值為 0。 對於所有其他陳述式類型，傳回的值為-1。 如果需要進行復原，傳回值也是-1。"
  example:
  - "The following example creates an <xref:System.Data.OracleClient.OracleCommand> and then executes it by using ExecuteNonQuery. The example is passed a string that is an SQL statement (such as UPDATE, INSERT, or DELETE) and a string to use to connect to the database.  \n  \n [!code-cs[Classic WebData OracleCommand.ExecuteNonQuery#1](~/add/codesnippet/csharp/m-system.data.oracleclie_8_1.cs)]\n [!code-vb[Classic WebData OracleCommand.ExecuteNonQuery#1](~/add/codesnippet/visualbasic/m-system.data.oracleclie_8_1.vb)]"
  syntax:
    content: public override int ExecuteNonQuery ();
    parameters: []
    return:
      type: System.Int32
      description: "UPDATE、 INSERT 和 DELETE 陳述式的傳回值會是命令影響的資料列數目。 CREATE TABLE 和 DROP TABLE 陳述式的傳回值為 0。 對於所有其他陳述式類型，傳回的值為-1。"
  overload: System.Data.OracleClient.OracleCommand.ExecuteNonQuery*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "連接不存在。       -或者-連接未開啟。"
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery(System.Data.OracleClient.OracleString@)
  id: ExecuteOracleNonQuery(System.Data.OracleClient.OracleString@)
  parent: System.Data.OracleClient.OracleCommand
  langs:
  - csharp
  name: ExecuteOracleNonQuery(OracleString)
  nameWithType: OracleCommand.ExecuteOracleNonQuery(OracleString)
  fullName: System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery(OracleString)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "執行 SQL 陳述式針對<xref:System.Data.OracleClient.OracleCommand.Connection*>並傳回受影響的資料列數目。</xref:System.Data.OracleClient.OracleCommand.Connection*>"
  remarks: "您可以使用 ExecuteOracleNonQuery 來執行資料庫目錄作業 （例如，查詢資料庫的結構或建立資料庫物件，例如資料表）;或若要變更的資料在資料庫中，而不使用<xref:System.Data.DataSet>、 藉由執行 INSERT、 UPDATE 或 DELETE 陳述式。</xref:System.Data.DataSet>       ExecuteOracleNonQuery 不同於<xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A>，會傳回`rowid`做為輸出參數，如果執行會影響只有一個資料列的 INSERT、 DELETE 或 UPDATE 陳述式。</xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A> 這可讓您用來唯一識別 Oracle 資料庫時，可讓您以提升效能，在後續的相關查詢中的資料列。       ExecuteOracleNonQuery 未傳回任何資料列，雖然任何輸出參數或傳回值，對應到參數會以資料填入。"
  syntax:
    content: public int ExecuteOracleNonQuery (out System.Data.OracleClient.OracleString rowid);
    parameters:
    - id: rowid
      type: System.Data.OracleClient.OracleString
      description: "在伺服器中的實際資料列識別碼的 base64 字串表示法。"
    return:
      type: System.Int32
      description: "UPDATE、 INSERT 和 DELETE 陳述式的傳回值會是命令影響的資料列數目。 CREATE TABLE 和 DROP TABLE 陳述式的傳回值為 0。 對於所有其他陳述式類型，傳回的值為-1。"
  overload: System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "連接不存在。       -或者-連接未開啟。"
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommand.ExecuteOracleScalar
  id: ExecuteOracleScalar
  parent: System.Data.OracleClient.OracleCommand
  langs:
  - csharp
  name: ExecuteOracleScalar()
  nameWithType: OracleCommand.ExecuteOracleScalar()
  fullName: System.Data.OracleClient.OracleCommand.ExecuteOracleScalar()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "執行查詢，並傳回第一個資料列的第一個資料行做為特定的 Oracle 資料類型的查詢所傳回的結果集。 會忽略額外的資料行或資料列。"
  remarks: "若要從資料庫中擷取單一值 （例如，彙總值） 使用 ExecuteOracleScalar 方法。 這需要較少的程式碼比使用的<xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A>方法，然後執行產生的單一值的資料所需的作業傳回<xref:System.Data.OracleClient.OracleDataReader>.</xref:System.Data.OracleClient.OracleDataReader> </xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A>       典型的 ExecuteOracleScalar 查詢可以進行格式化，如下列 C# 範例所示︰```   command.CommandText = &quot;SELECT COUNT(*) AS NumberOfRegions FROM Region&quot;;   count = command.ExecuteOracleScalar();   ```"
  syntax:
    content: public object ExecuteOracleScalar ();
    parameters: []
    return:
      type: System.Object
      description: "如果結果是結果中的第一個資料列的第一個資料行設定為特定的 Oracle 資料型別，則為 null 參考<xref uid=&quot;langword_csharp_REF CURSOR&quot; name=&quot;REF CURSOR&quot; href=&quot;&quot;> </xref>。"
  overload: System.Data.OracleClient.OracleCommand.ExecuteOracleScalar*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommand.ExecuteReader
  id: ExecuteReader
  parent: System.Data.OracleClient.OracleCommand
  langs:
  - csharp
  name: ExecuteReader()
  nameWithType: OracleCommand.ExecuteReader()
  fullName: System.Data.OracleClient.OracleCommand.ExecuteReader()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "傳送<> *> 來<> *>，並建置<xref href=&quot;System.Data.OracleClient.OracleDataReader&quot;> </xref>。"
  remarks: "當<xref:System.Data.OracleClient.OracleCommand.CommandType%2A>屬性設定為`StoredProcedure`、<xref:System.Data.OracleClient.OracleCommand.CommandText%2A>屬性應該設定為預存程序的名稱。</xref:System.Data.OracleClient.OracleCommand.CommandText%2A> </xref:System.Data.OracleClient.OracleCommand.CommandType%2A> 當您呼叫 ExecuteReader，命令再執行這個預存程序。       多個<xref:System.Data.OracleClient.OracleDataReader>隨時都可以開啟。</xref:System.Data.OracleClient.OracleDataReader>"
  example:
  - "The following example creates an <xref:System.Data.OracleClient.OracleCommand>, and then executes it by passing a string that is an SQL SELECT statement, and a string to use to connect to the data source.  \n  \n [!code-vb[Classic WebData OracleCommand.ExecuteReader1#1](~/add/codesnippet/visualbasic/m-system.data.oracleclie_10_1.vb)]\n [!code-cs[Classic WebData OracleCommand.ExecuteReader1#1](~/add/codesnippet/csharp/m-system.data.oracleclie_10_1.cs)]"
  syntax:
    content: public System.Data.OracleClient.OracleDataReader ExecuteReader ();
    parameters: []
    return:
      type: System.Data.OracleClient.OracleDataReader
      description: "<xref href=&quot;System.Data.OracleClient.OracleDataReader&quot;> </xref>物件。"
  overload: System.Data.OracleClient.OracleCommand.ExecuteReader*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommand.ExecuteReader(System.Data.CommandBehavior)
  id: ExecuteReader(System.Data.CommandBehavior)
  parent: System.Data.OracleClient.OracleCommand
  langs:
  - csharp
  name: ExecuteReader(CommandBehavior)
  nameWithType: OracleCommand.ExecuteReader(CommandBehavior)
  fullName: System.Data.OracleClient.OracleCommand.ExecuteReader(CommandBehavior)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "傳送<> *> 來<> *>，並建置<xref href=&quot;System.Data.OracleClient.OracleDataReader&quot;></xref>使用其中一種<xref href=&quot;System.Data.CommandBehavior&quot;></xref>值。"
  remarks: "如果您預期您的 SQL 陳述式會傳回單一資料列，則指定`SingleRow`為<xref:System.Data.CommandBehavior>值可能會改善應用程式的效能。</xref:System.Data.CommandBehavior>       當<xref:System.Data.OracleClient.OracleCommand.CommandType%2A>屬性設定為`StoredProcedure`、<xref:System.Data.OracleClient.OracleCommand.CommandText%2A>屬性應該設定為預存程序的名稱。</xref:System.Data.OracleClient.OracleCommand.CommandText%2A> </xref:System.Data.OracleClient.OracleCommand.CommandType%2A> 命令再執行這個預存程序，當您呼叫<xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A>.</xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A>       <xref:System.Data.OracleClient.OracleDataReader>支援特殊模式可以讓您有效率地讀取大型二進位值。</xref:System.Data.OracleClient.OracleDataReader> 如需詳細資訊，請參閱`SequentialAccess` <xref:System.Data.CommandBehavior>。</xref:System.Data.CommandBehavior>設定       多個<xref:System.Data.OracleClient.OracleDataReader>隨時都可以開啟。</xref:System.Data.OracleClient.OracleDataReader>"
  example:
  - "The following example creates an <xref:System.Data.OracleClient.OracleCommand>, and then executes it by passing a string that is an SQL SELECT statement, and a string to use to connect to the database. <xref:System.Data.CommandBehavior> is then set to <xref:System.Data.CommandBehavior>.  \n  \n [!code-cs[Classic WebData OracleCommand.ExecuteReader2#1](~/add/codesnippet/csharp/db42fed5-256c-4ac8-928b-_1.cs)]\n [!code-vb[Classic WebData OracleCommand.ExecuteReader2#1](~/add/codesnippet/visualbasic/db42fed5-256c-4ac8-928b-_1.vb)]"
  syntax:
    content: public System.Data.OracleClient.OracleDataReader ExecuteReader (System.Data.CommandBehavior behavior);
    parameters:
    - id: behavior
      type: System.Data.CommandBehavior
      description: "其中一個<xref href=&quot;System.Data.CommandBehavior&quot;></xref>值。"
    return:
      type: System.Data.OracleClient.OracleDataReader
      description: "<xref href=&quot;System.Data.OracleClient.OracleDataReader&quot;> </xref>物件。"
  overload: System.Data.OracleClient.OracleCommand.ExecuteReader*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommand.ExecuteScalar
  id: ExecuteScalar
  parent: System.Data.OracleClient.OracleCommand
  langs:
  - csharp
  name: ExecuteScalar()
  nameWithType: OracleCommand.ExecuteScalar()
  fullName: System.Data.OracleClient.OracleCommand.ExecuteScalar()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "執行查詢，並為.NET Framework 資料型別查詢所傳回的結果集傳回第一個資料列的第一個資料行。 會忽略額外的資料行或資料列。"
  remarks: "若要從資料庫中擷取單一值 （例如，彙總值） 使用 ExecuteScalar 方法。 這需要較少的程式碼比使用的<xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A>方法，然後執行產生的單一值的資料所需的作業傳回<xref:System.Data.OracleClient.OracleDataReader>.</xref:System.Data.OracleClient.OracleDataReader> </xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A>       典型的 ExecuteScalar 查詢可以進行格式化，如下列 C# 範例所示︰```   CommandText = &quot;SELECT COUNT(*) FROM Region&quot;;   Int32 count = (int32) ExecuteScalar();   ```"
  example:
  - "The following example creates an <xref:System.Data.OracleClient.OracleCommand> and then executes it using ExecuteScalar. The example is passed a string that is an SQL statement that returns an aggregate result, and a string to use to connect to the database.  \n  \n [!code-cs[Classic WebData OracleCommand.ExecuteScalar#1](~/add/codesnippet/csharp/m-system.data.oracleclie_1_1.cs)]\n [!code-vb[Classic WebData OracleCommand.ExecuteScalar#1](~/add/codesnippet/visualbasic/m-system.data.oracleclie_1_1.vb)]"
  syntax:
    content: public override object ExecuteScalar ();
    parameters: []
    return:
      type: System.Object
      description: "結果中的第一個資料列的第一個資料行設定為.NET Framework 資料型別，或為 null 參考，如果是空的結果集或結果是<xref uid=&quot;langword_csharp_REF CURSOR&quot; name=&quot;REF CURSOR&quot; href=&quot;&quot;> </xref>。"
  overload: System.Data.OracleClient.OracleCommand.ExecuteScalar*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommand.Parameters
  id: Parameters
  parent: System.Data.OracleClient.OracleCommand
  langs:
  - csharp
  name: Parameters
  nameWithType: OracleCommand.Parameters
  fullName: System.Data.OracleClient.OracleCommand.Parameters
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Gets the <xref href=&quot;System.Data.OracleClient.OracleParameterCollection&quot;></xref>."
  remarks: "當<xref:System.Data.OracleClient.OracleCommand.CommandType%2A>屬性設定為`StoredProcedure`、<xref:System.Data.OracleClient.OracleCommand.CommandText%2A>屬性應該設定為預存程序的名稱。</xref:System.Data.OracleClient.OracleCommand.CommandText%2A> </xref:System.Data.OracleClient.OracleCommand.CommandType%2A> 使用者可能需要使用逸出字元語法，如果預存程序名稱包含任何特殊字元。 當您呼叫其中一個執行方法時，命令會執行這個預存程序。       傳遞參數至 SQL 陳述式所呼叫的.NET Framework Data Provider for Oracle 不支援問號 （？） 預留位置<xref:System.Data.OracleClient.OracleCommand>的`CommandType.Text`。</xref:System.Data.OracleClient.OracleCommand> 在此情況下，您必須使用具名的參數。 例如︰```   SELECT * FROM Customers WHERE CustomerID = :pCustomerID   ```時使用具名參數的 SQL 陳述式中呼叫<xref:System.Data.OracleClient.OracleCommand>的`CommandType.Text`，您必須在參數名稱，以冒號 （:）。</xref:System.Data.OracleClient.OracleCommand> 不過，在預存程序，或您的程式碼中的其他位置的具名參數 (例如，當加入<xref:System.Data.OracleClient.OracleParameter>[參數] 屬性的物件)，不在之前使用冒號 （:），為具名的參數。</xref:System.Data.OracleClient.OracleParameter> .NET Framework Data Provider for Oracle 都會自動提供冒號。"
  example:
  - "The following example creates an <xref:System.Data.OracleClient.OracleCommand> and displays its parameters. To accomplish this, the method is passed an <xref:System.Data.OracleClient.OracleConnection>, a query string that is an SQL SELECT statement, and an array of <xref:System.Data.OracleClient.OracleParameter> objects.  \n  \n [!code-cs[Classic WebData OracleCommand.Parameters#1](~/add/codesnippet/csharp/p-system.data.oracleclie_6_1.cs)]\n [!code-vb[Classic WebData OracleCommand.Parameters#1](~/add/codesnippet/visualbasic/p-system.data.oracleclie_6_1.vb)]"
  syntax:
    content: public System.Data.OracleClient.OracleParameterCollection Parameters { get; }
    return:
      type: System.Data.OracleClient.OracleParameterCollection
      description: "SQL 陳述式或預存程序的參數。 預設為空集合。"
  overload: System.Data.OracleClient.OracleCommand.Parameters*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommand.Prepare
  id: Prepare
  parent: System.Data.OracleClient.OracleCommand
  langs:
  - csharp
  name: Prepare()
  nameWithType: OracleCommand.Prepare()
  fullName: System.Data.OracleClient.OracleCommand.Prepare()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "在資料來源建立命令已備妥 （或編譯） 版本。"
  remarks: "呼叫準備之前，請先備妥的陳述式中指定的每個參數的資料類型。"
  syntax:
    content: public override void Prepare ();
    parameters: []
  overload: System.Data.OracleClient.OracleCommand.Prepare*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<> </> *> 未設定。      -or-       The <>*> is not <xref:System.Data.OracleClient.OracleConnection.Open*>.</xref:System.Data.OracleClient.OracleConnection.Open*>"
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommand.ResetCommandTimeout
  id: ResetCommandTimeout
  parent: System.Data.OracleClient.OracleCommand
  langs:
  - csharp
  name: ResetCommandTimeout()
  nameWithType: OracleCommand.ResetCommandTimeout()
  fullName: System.Data.OracleClient.OracleCommand.ResetCommandTimeout()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "重設<xref:System.Data.OracleClient.OracleCommand.CommandTimeout*>屬性設為預設值。</xref:System.Data.OracleClient.OracleCommand.CommandTimeout*>"
  remarks: "預設值<xref:System.Data.OracleClient.OracleCommand.CommandTimeout%2A>為 30 秒。</xref:System.Data.OracleClient.OracleCommand.CommandTimeout%2A>"
  syntax:
    content: public void ResetCommandTimeout ();
    parameters: []
  overload: System.Data.OracleClient.OracleCommand.ResetCommandTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommand.Transaction
  id: Transaction
  parent: System.Data.OracleClient.OracleCommand
  langs:
  - csharp
  name: Transaction
  nameWithType: OracleCommand.Transaction
  fullName: System.Data.OracleClient.OracleCommand.Transaction
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "取得或設定<xref href=&quot;System.Data.OracleClient.OracleTransaction&quot;></xref>所在<xref href=&quot;System.Data.OracleClient.OracleCommand&quot;></xref>執行。"
  remarks: "如果它已設定為特定值，並且命令正在執行，您無法設定交易屬性。 如果您設定交易屬性<xref:System.Data.OracleClient.OracleTransaction>未連線到相同的物件<xref:System.Data.OracleClient.OracleConnection>為<xref:System.Data.OracleClient.OracleCommand>物件時，會擲回例外狀況，下次您嘗試執行陳述式。</xref:System.Data.OracleClient.OracleCommand> </xref:System.Data.OracleClient.OracleConnection> </xref:System.Data.OracleClient.OracleTransaction>"
  syntax:
    content: public System.Data.OracleClient.OracleTransaction Transaction { get; set; }
    return:
      type: System.Data.OracleClient.OracleTransaction
      description: "An <xref href=&quot;System.Data.OracleClient.OracleTransaction&quot;></xref>. 預設值為 null 的值。"
  overload: System.Data.OracleClient.OracleCommand.Transaction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommand.UpdatedRowSource
  id: UpdatedRowSource
  parent: System.Data.OracleClient.OracleCommand
  langs:
  - csharp
  name: UpdatedRowSource
  nameWithType: OracleCommand.UpdatedRowSource
  fullName: System.Data.OracleClient.OracleCommand.UpdatedRowSource
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "取得或設定值，指定如何<xref uid=&quot;langword_csharp_Update&quot; name=&quot;Update&quot; href=&quot;&quot;></xref>方法應該將命令結果套用<xref href=&quot;System.Data.DataRow&quot;> </xref>。"
  remarks: "預設值<xref:System.Data.UpdateRowSource>值是`Both`除非命令會自動產生 (如果是做為<xref:System.Data.OracleClient.OracleCommandBuilder>)，預設值是在此情況下`None`。</xref:System.Data.OracleClient.OracleCommandBuilder> </xref:System.Data.UpdateRowSource>       如需有關使用<xref:System.Data.UpdateRowSource>屬性，請參閱[DataAdapter 的參數](~/add/includes/ajax-current-ext-md.md)。</xref:System.Data.UpdateRowSource>"
  syntax:
    content: public override System.Data.UpdateRowSource UpdatedRowSource { get; set; }
    return:
      type: System.Data.UpdateRowSource
      description: "其中一個<xref href=&quot;System.Data.UpdateRowSource&quot;></xref>值。"
  overload: System.Data.OracleClient.OracleCommand.UpdatedRowSource*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "輸入的值不是其中一個<xref href=&quot;System.Data.UpdateRowSource&quot;></xref>值。"
  platform:
  - net462
references:
- uid: System.Data.Common.DbCommand
  isExternal: false
  name: System.Data.Common.DbCommand
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Data.OracleClient.OracleCommand.#ctor
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: OracleCommand()
  nameWithType: OracleCommand.OracleCommand()
  fullName: System.Data.OracleClient.OracleCommand.OracleCommand()
- uid: System.Data.OracleClient.OracleCommand.#ctor(System.String)
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: OracleCommand(String)
  nameWithType: OracleCommand.OracleCommand(String)
  fullName: System.Data.OracleClient.OracleCommand.OracleCommand(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.OracleClient.OracleCommand.#ctor(System.String,System.Data.OracleClient.OracleConnection)
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: OracleCommand(String,OracleConnection)
  nameWithType: OracleCommand.OracleCommand(String,OracleConnection)
  fullName: System.Data.OracleClient.OracleCommand.OracleCommand(String,OracleConnection)
- uid: System.Data.OracleClient.OracleConnection
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleConnection
  nameWithType: OracleConnection
  fullName: System.Data.OracleClient.OracleConnection
- uid: System.Data.OracleClient.OracleCommand.#ctor(System.String,System.Data.OracleClient.OracleConnection,System.Data.OracleClient.OracleTransaction)
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: OracleCommand(String,OracleConnection,OracleTransaction)
  nameWithType: OracleCommand.OracleCommand(String,OracleConnection,OracleTransaction)
  fullName: System.Data.OracleClient.OracleCommand.OracleCommand(String,OracleConnection,OracleTransaction)
- uid: System.Data.OracleClient.OracleTransaction
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleTransaction
  nameWithType: OracleTransaction
  fullName: System.Data.OracleClient.OracleTransaction
- uid: System.Data.OracleClient.OracleCommand.Cancel
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: Cancel()
  nameWithType: OracleCommand.Cancel()
  fullName: System.Data.OracleClient.OracleCommand.Cancel()
- uid: System.Data.OracleClient.OracleCommand.Clone
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: Clone()
  nameWithType: OracleCommand.Clone()
  fullName: System.Data.OracleClient.OracleCommand.Clone()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.OracleClient.OracleCommand.CommandText
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: CommandText
  nameWithType: OracleCommand.CommandText
  fullName: System.Data.OracleClient.OracleCommand.CommandText
- uid: System.Data.OracleClient.OracleCommand.CommandTimeout
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: CommandTimeout
  nameWithType: OracleCommand.CommandTimeout
  fullName: System.Data.OracleClient.OracleCommand.CommandTimeout
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.OracleClient.OracleCommand.CommandType
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: CommandType
  nameWithType: OracleCommand.CommandType
  fullName: System.Data.OracleClient.OracleCommand.CommandType
- uid: System.Data.CommandType
  parent: System.Data
  isExternal: false
  name: CommandType
  nameWithType: CommandType
  fullName: System.Data.CommandType
- uid: System.Data.OracleClient.OracleCommand.Connection
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: Connection
  nameWithType: OracleCommand.Connection
  fullName: System.Data.OracleClient.OracleCommand.Connection
- uid: System.Data.OracleClient.OracleCommand.CreateDbParameter
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: CreateDbParameter()
  nameWithType: OracleCommand.CreateDbParameter()
  fullName: System.Data.OracleClient.OracleCommand.CreateDbParameter()
- uid: System.Data.Common.DbParameter
  parent: System.Data.Common
  isExternal: false
  name: DbParameter
  nameWithType: DbParameter
  fullName: System.Data.Common.DbParameter
- uid: System.Data.OracleClient.OracleCommand.CreateParameter
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: CreateParameter()
  nameWithType: OracleCommand.CreateParameter()
  fullName: System.Data.OracleClient.OracleCommand.CreateParameter()
- uid: System.Data.OracleClient.OracleParameter
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleParameter
  nameWithType: OracleParameter
  fullName: System.Data.OracleClient.OracleParameter
- uid: System.Data.OracleClient.OracleCommand.DbConnection
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: DbConnection
  nameWithType: OracleCommand.DbConnection
  fullName: System.Data.OracleClient.OracleCommand.DbConnection
- uid: System.Data.Common.DbConnection
  parent: System.Data.Common
  isExternal: false
  name: DbConnection
  nameWithType: DbConnection
  fullName: System.Data.Common.DbConnection
- uid: System.Data.OracleClient.OracleCommand.DbParameterCollection
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: DbParameterCollection
  nameWithType: OracleCommand.DbParameterCollection
  fullName: System.Data.OracleClient.OracleCommand.DbParameterCollection
- uid: System.Data.Common.DbParameterCollection
  parent: System.Data.Common
  isExternal: false
  name: DbParameterCollection
  nameWithType: DbParameterCollection
  fullName: System.Data.Common.DbParameterCollection
- uid: System.Data.OracleClient.OracleCommand.DbTransaction
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: DbTransaction
  nameWithType: OracleCommand.DbTransaction
  fullName: System.Data.OracleClient.OracleCommand.DbTransaction
- uid: System.Data.Common.DbTransaction
  parent: System.Data.Common
  isExternal: false
  name: DbTransaction
  nameWithType: DbTransaction
  fullName: System.Data.Common.DbTransaction
- uid: System.Data.OracleClient.OracleCommand.DesignTimeVisible
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: DesignTimeVisible
  nameWithType: OracleCommand.DesignTimeVisible
  fullName: System.Data.OracleClient.OracleCommand.DesignTimeVisible
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.OracleClient.OracleCommand.ExecuteDbDataReader(System.Data.CommandBehavior)
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: ExecuteDbDataReader(CommandBehavior)
  nameWithType: OracleCommand.ExecuteDbDataReader(CommandBehavior)
  fullName: System.Data.OracleClient.OracleCommand.ExecuteDbDataReader(CommandBehavior)
- uid: System.Data.Common.DbDataReader
  parent: System.Data.Common
  isExternal: false
  name: DbDataReader
  nameWithType: DbDataReader
  fullName: System.Data.Common.DbDataReader
- uid: System.Data.CommandBehavior
  parent: System.Data
  isExternal: false
  name: CommandBehavior
  nameWithType: CommandBehavior
  fullName: System.Data.CommandBehavior
- uid: System.Data.OracleClient.OracleCommand.ExecuteNonQuery
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: ExecuteNonQuery()
  nameWithType: OracleCommand.ExecuteNonQuery()
  fullName: System.Data.OracleClient.OracleCommand.ExecuteNonQuery()
- uid: System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery(System.Data.OracleClient.OracleString@)
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: ExecuteOracleNonQuery(OracleString)
  nameWithType: OracleCommand.ExecuteOracleNonQuery(OracleString)
  fullName: System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery(OracleString)
- uid: System.Data.OracleClient.OracleString
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleString
  nameWithType: OracleString
  fullName: System.Data.OracleClient.OracleString
- uid: System.Data.OracleClient.OracleCommand.ExecuteOracleScalar
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: ExecuteOracleScalar()
  nameWithType: OracleCommand.ExecuteOracleScalar()
  fullName: System.Data.OracleClient.OracleCommand.ExecuteOracleScalar()
- uid: System.Data.OracleClient.OracleCommand.ExecuteReader
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: ExecuteReader()
  nameWithType: OracleCommand.ExecuteReader()
  fullName: System.Data.OracleClient.OracleCommand.ExecuteReader()
- uid: System.Data.OracleClient.OracleDataReader
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleDataReader
  nameWithType: OracleDataReader
  fullName: System.Data.OracleClient.OracleDataReader
- uid: System.Data.OracleClient.OracleCommand.ExecuteReader(System.Data.CommandBehavior)
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: ExecuteReader(CommandBehavior)
  nameWithType: OracleCommand.ExecuteReader(CommandBehavior)
  fullName: System.Data.OracleClient.OracleCommand.ExecuteReader(CommandBehavior)
- uid: System.Data.OracleClient.OracleCommand.ExecuteScalar
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: ExecuteScalar()
  nameWithType: OracleCommand.ExecuteScalar()
  fullName: System.Data.OracleClient.OracleCommand.ExecuteScalar()
- uid: System.Data.OracleClient.OracleCommand.Parameters
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: Parameters
  nameWithType: OracleCommand.Parameters
  fullName: System.Data.OracleClient.OracleCommand.Parameters
- uid: System.Data.OracleClient.OracleParameterCollection
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleParameterCollection
  nameWithType: OracleParameterCollection
  fullName: System.Data.OracleClient.OracleParameterCollection
- uid: System.Data.OracleClient.OracleCommand.Prepare
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: Prepare()
  nameWithType: OracleCommand.Prepare()
  fullName: System.Data.OracleClient.OracleCommand.Prepare()
- uid: System.Data.OracleClient.OracleCommand.ResetCommandTimeout
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: ResetCommandTimeout()
  nameWithType: OracleCommand.ResetCommandTimeout()
  fullName: System.Data.OracleClient.OracleCommand.ResetCommandTimeout()
- uid: System.Data.OracleClient.OracleCommand.Transaction
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: Transaction
  nameWithType: OracleCommand.Transaction
  fullName: System.Data.OracleClient.OracleCommand.Transaction
- uid: System.Data.OracleClient.OracleCommand.UpdatedRowSource
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: UpdatedRowSource
  nameWithType: OracleCommand.UpdatedRowSource
  fullName: System.Data.OracleClient.OracleCommand.UpdatedRowSource
- uid: System.Data.UpdateRowSource
  parent: System.Data
  isExternal: false
  name: UpdateRowSource
  nameWithType: UpdateRowSource
  fullName: System.Data.UpdateRowSource
- uid: System.Data.OracleClient.OracleCommand.#ctor*
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: OracleCommand
  nameWithType: OracleCommand.OracleCommand
- uid: System.Data.OracleClient.OracleCommand.Cancel*
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: Cancel
  nameWithType: OracleCommand.Cancel
- uid: System.Data.OracleClient.OracleCommand.Clone*
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: Clone
  nameWithType: OracleCommand.Clone
- uid: System.Data.OracleClient.OracleCommand.CommandText*
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: CommandText
  nameWithType: OracleCommand.CommandText
- uid: System.Data.OracleClient.OracleCommand.CommandTimeout*
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: CommandTimeout
  nameWithType: OracleCommand.CommandTimeout
- uid: System.Data.OracleClient.OracleCommand.CommandType*
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: CommandType
  nameWithType: OracleCommand.CommandType
- uid: System.Data.OracleClient.OracleCommand.Connection*
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: Connection
  nameWithType: OracleCommand.Connection
- uid: System.Data.OracleClient.OracleCommand.CreateDbParameter*
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: CreateDbParameter
  nameWithType: OracleCommand.CreateDbParameter
- uid: System.Data.OracleClient.OracleCommand.CreateParameter*
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: CreateParameter
  nameWithType: OracleCommand.CreateParameter
- uid: System.Data.OracleClient.OracleCommand.DbConnection*
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: DbConnection
  nameWithType: OracleCommand.DbConnection
- uid: System.Data.OracleClient.OracleCommand.DbParameterCollection*
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: DbParameterCollection
  nameWithType: OracleCommand.DbParameterCollection
- uid: System.Data.OracleClient.OracleCommand.DbTransaction*
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: DbTransaction
  nameWithType: OracleCommand.DbTransaction
- uid: System.Data.OracleClient.OracleCommand.DesignTimeVisible*
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: DesignTimeVisible
  nameWithType: OracleCommand.DesignTimeVisible
- uid: System.Data.OracleClient.OracleCommand.ExecuteDbDataReader*
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: ExecuteDbDataReader
  nameWithType: OracleCommand.ExecuteDbDataReader
- uid: System.Data.OracleClient.OracleCommand.ExecuteNonQuery*
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: ExecuteNonQuery
  nameWithType: OracleCommand.ExecuteNonQuery
- uid: System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery*
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: ExecuteOracleNonQuery
  nameWithType: OracleCommand.ExecuteOracleNonQuery
- uid: System.Data.OracleClient.OracleCommand.ExecuteOracleScalar*
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: ExecuteOracleScalar
  nameWithType: OracleCommand.ExecuteOracleScalar
- uid: System.Data.OracleClient.OracleCommand.ExecuteReader*
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: ExecuteReader
  nameWithType: OracleCommand.ExecuteReader
- uid: System.Data.OracleClient.OracleCommand.ExecuteScalar*
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: ExecuteScalar
  nameWithType: OracleCommand.ExecuteScalar
- uid: System.Data.OracleClient.OracleCommand.Parameters*
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: Parameters
  nameWithType: OracleCommand.Parameters
- uid: System.Data.OracleClient.OracleCommand.Prepare*
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: Prepare
  nameWithType: OracleCommand.Prepare
- uid: System.Data.OracleClient.OracleCommand.ResetCommandTimeout*
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: ResetCommandTimeout
  nameWithType: OracleCommand.ResetCommandTimeout
- uid: System.Data.OracleClient.OracleCommand.Transaction*
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: Transaction
  nameWithType: OracleCommand.Transaction
- uid: System.Data.OracleClient.OracleCommand.UpdatedRowSource*
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: UpdatedRowSource
  nameWithType: OracleCommand.UpdatedRowSource
