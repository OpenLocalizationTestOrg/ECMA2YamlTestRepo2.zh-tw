### YamlMime:ManagedReference
items:
- uid: System.Messaging.MessagePropertyFilter
  id: MessagePropertyFilter
  children:
  - System.Messaging.MessagePropertyFilter.#ctor
  - System.Messaging.MessagePropertyFilter.AcknowledgeType
  - System.Messaging.MessagePropertyFilter.Acknowledgment
  - System.Messaging.MessagePropertyFilter.AdministrationQueue
  - System.Messaging.MessagePropertyFilter.AppSpecific
  - System.Messaging.MessagePropertyFilter.ArrivedTime
  - System.Messaging.MessagePropertyFilter.AttachSenderId
  - System.Messaging.MessagePropertyFilter.Authenticated
  - System.Messaging.MessagePropertyFilter.AuthenticationProviderName
  - System.Messaging.MessagePropertyFilter.AuthenticationProviderType
  - System.Messaging.MessagePropertyFilter.Body
  - System.Messaging.MessagePropertyFilter.ClearAll
  - System.Messaging.MessagePropertyFilter.Clone
  - System.Messaging.MessagePropertyFilter.ConnectorType
  - System.Messaging.MessagePropertyFilter.CorrelationId
  - System.Messaging.MessagePropertyFilter.DefaultBodySize
  - System.Messaging.MessagePropertyFilter.DefaultExtensionSize
  - System.Messaging.MessagePropertyFilter.DefaultLabelSize
  - System.Messaging.MessagePropertyFilter.DestinationQueue
  - System.Messaging.MessagePropertyFilter.DestinationSymmetricKey
  - System.Messaging.MessagePropertyFilter.DigitalSignature
  - System.Messaging.MessagePropertyFilter.EncryptionAlgorithm
  - System.Messaging.MessagePropertyFilter.Extension
  - System.Messaging.MessagePropertyFilter.HashAlgorithm
  - System.Messaging.MessagePropertyFilter.Id
  - System.Messaging.MessagePropertyFilter.IsFirstInTransaction
  - System.Messaging.MessagePropertyFilter.IsLastInTransaction
  - System.Messaging.MessagePropertyFilter.Label
  - System.Messaging.MessagePropertyFilter.LookupId
  - System.Messaging.MessagePropertyFilter.MessageType
  - System.Messaging.MessagePropertyFilter.Priority
  - System.Messaging.MessagePropertyFilter.Recoverable
  - System.Messaging.MessagePropertyFilter.ResponseQueue
  - System.Messaging.MessagePropertyFilter.SenderCertificate
  - System.Messaging.MessagePropertyFilter.SenderId
  - System.Messaging.MessagePropertyFilter.SenderVersion
  - System.Messaging.MessagePropertyFilter.SentTime
  - System.Messaging.MessagePropertyFilter.SetAll
  - System.Messaging.MessagePropertyFilter.SetDefaults
  - System.Messaging.MessagePropertyFilter.SourceMachine
  - System.Messaging.MessagePropertyFilter.TimeToBeReceived
  - System.Messaging.MessagePropertyFilter.TimeToReachQueue
  - System.Messaging.MessagePropertyFilter.TransactionId
  - System.Messaging.MessagePropertyFilter.TransactionStatusQueue
  - System.Messaging.MessagePropertyFilter.UseAuthentication
  - System.Messaging.MessagePropertyFilter.UseDeadLetterQueue
  - System.Messaging.MessagePropertyFilter.UseEncryption
  - System.Messaging.MessagePropertyFilter.UseJournalQueue
  - System.Messaging.MessagePropertyFilter.UseTracing
  langs:
  - csharp
  name: MessagePropertyFilter
  nameWithType: MessagePropertyFilter
  fullName: System.Messaging.MessagePropertyFilter
  type: Class
  summary: "控制，並選取從訊息佇列的窺視或接收訊息時，會擷取的屬性。"
  remarks: "在設定 MessagePropertyFilter<xref:System.Messaging.MessageQueue>執行個體可控制的其內或接收訊息時，會擷取的屬性集。</xref:System.Messaging.MessageQueue> 執行個體上設定篩選<xref:System.Messaging.MessageQueue>所擷取的訊息資訊。</xref:System.Messaging.MessageQueue> 當您設定 MessagePropertyFilter 布林值的成員為`false`，避免<xref:System.Messaging.Message>從正在擷取<xref:System.Messaging.MessageQueue>。</xref:System.Messaging.MessageQueue>屬性</xref:System.Messaging.Message>相關的資訊       有幾個不是布林值的篩選條件屬性。 取得或設定的預設大小的整數值都<xref:System.Messaging.Message.Body%2A?displayProperty=fullName>， <xref:System.Messaging.Message.Extension%2A?displayProperty=fullName>，或<xref:System.Messaging.Message.Label%2A?displayProperty=fullName>.</xref:System.Messaging.Message.Label%2A?displayProperty=fullName> </xref:System.Messaging.Message.Extension%2A?displayProperty=fullName> </xref:System.Messaging.Message.Body%2A?displayProperty=fullName>       擷取一組有限的屬性，可協助改善效能，因為較少量的資料會從佇列傳送。       MessagePropertyFilter 上設定的屬性，只會指出是否要在接收或窺視訊息時，擷取該屬性。 您不會變更<xref:System.Messaging.Message>.</xref:System.Messaging.Message>的相關聯的屬性值       <xref:System.Messaging.MessagePropertyFilter.%23ctor%2A>建構函式會設定所有篩選條件屬性為其預設值，這的布林值是`false`。</xref:System.Messaging.MessagePropertyFilter.%23ctor%2A> 請參閱指派給整數值的屬性，預設值的建構函式主題。"
  example:
  - "The following code example sends two messages of different priorities to the queue, and retrieves them subsequently.  \n  \n [!code-cpp[Message.DefaultPropertiesToSend#1](~/add/codesnippet/cpp/t-system.messaging.messa_1_1.cpp)]\n [!code-vb[Message.DefaultPropertiesToSend#1](~/add/codesnippet/visualbasic/t-system.messaging.messa_1_1.vb)]\n [!code-cs[Message.DefaultPropertiesToSend#1](~/add/codesnippet/csharp/t-system.messaging.messa_1_1.cs)]"
  syntax:
    content: >-
      [System.ComponentModel.TypeConverter(typeof(System.ComponentModel.ExpandableObjectConverter))]

      public class MessagePropertyFilter : ICloneable
  inheritance:
  - System.Object
  implements:
  - System.ICloneable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.#ctor
  id: '#ctor'
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: MessagePropertyFilter()
  nameWithType: MessagePropertyFilter.MessagePropertyFilter()
  fullName: System.Messaging.MessagePropertyFilter.MessagePropertyFilter()
  type: Constructor
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "初始化的新執行個體<xref href=&quot;System.Messaging.MessagePropertyFilter&quot;></xref>類別，並設定所有屬性的預設值。"
  remarks: "MessagePropertyFilter 建構函式會將所有的布林值設定為`false`並將整數值的屬性設定為下表中所顯示的預設值。      |屬性 |預設值 |  |--------------|-------------------|  |<xref:System.Messaging.MessagePropertyFilter.DefaultBodySize%2A>|&1024;年 |  |<xref:System.Messaging.MessagePropertyFilter.DefaultExtensionSize%2A>|&255; |  |<xref:System.Messaging.MessagePropertyFilter.DefaultLabelSize%2A>|255|</xref:System.Messaging.MessagePropertyFilter.DefaultLabelSize%2A></xref:System.Messaging.MessagePropertyFilter.DefaultExtensionSize%2A></xref:System.Messaging.MessagePropertyFilter.DefaultBodySize%2A>"
  example:
  - "The following code example demonstrates the use of the <xref:System.Messaging.MessagePropertyFilter> constructor.  \n  \n [!code-cpp[MessagePropertyFilter#40](~/add/codesnippet/cpp/m-system.messaging.messa_23_1.cpp)]\n [!code-cs[MessagePropertyFilter#40](~/add/codesnippet/csharp/m-system.messaging.messa_23_1.cs)]"
  syntax:
    content: public MessagePropertyFilter ();
    parameters: []
  overload: System.Messaging.MessagePropertyFilter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.AcknowledgeType
  id: AcknowledgeType
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: AcknowledgeType
  nameWithType: MessagePropertyFilter.AcknowledgeType
  fullName: System.Messaging.MessagePropertyFilter.AcknowledgeType
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "取得或設定值，指出是否要擷取&lt;xref:System.Messaging.Message.AcknowledgeType%2A?displayProperty=fullName&gt;時接收或窺視訊息的屬性資訊。"
  remarks: "<xref:System.Messaging.Message.AcknowledgeType%2A>屬性<xref:System.Messaging.Message>類別指定所傳送的應用程式要求的通知訊息的類型。</xref:System.Messaging.Message> </xref:System.Messaging.Message.AcknowledgeType%2A> 通知類型的定義傳回認可的時機。 設定<xref:System.Messaging.Message.AcknowledgeType%2A?displayProperty=fullName>屬性，才能傳送訊息來要求特定類型的通知。</xref:System.Messaging.Message.AcknowledgeType%2A?displayProperty=fullName>"
  example:
  - "The following code example demonstrates the use of the AcknowledgeType property.  \n  \n [!code-cpp[MessagePropertyFilter#1](~/add/codesnippet/cpp/p-system.messaging.messa_82_1.cpp)]\n [!code-cs[MessagePropertyFilter#1](~/add/codesnippet/csharp/p-system.messaging.messa_82_1.cs)]"
  syntax:
    content: public bool AcknowledgeType { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要接收&lt;xref:System.Messaging.Message.AcknowledgeType%2A?displayProperty=fullName&gt;資訊; 否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Messaging.MessagePropertyFilter.AcknowledgeType*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.Acknowledgment
  id: Acknowledgment
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: Acknowledgment
  nameWithType: MessagePropertyFilter.Acknowledgment
  fullName: System.Messaging.MessagePropertyFilter.Acknowledgment
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "取得或設定值，指出是否要擷取&lt;xref:System.Messaging.Message.Acknowledgment%2A?displayProperty=fullName&gt;時接收或窺視訊息的屬性資訊。"
  remarks: "<xref:System.Messaging.Message.Acknowledgment%2A?displayProperty=fullName>屬性<xref:System.Messaging.Message>類別會指定訊息在管理佇列，這會決定產生的通知時系統傳送通知的型別。</xref:System.Messaging.Message> </xref:System.Messaging.Message.Acknowledgment%2A?displayProperty=fullName>       通知會傳回從目的地佇列，並張貼訊息至<xref:System.Messaging.Message.AdministrationQueue%2A>原始訊息所指定。</xref:System.Messaging.Message.AdministrationQueue%2A> 產生的認可類型取決於要求。       讀取<xref:System.Messaging.Message.Acknowledgment%2A?displayProperty=fullName>接收來自管理佇列來確認訊息原本傳送到訊息佇列的狀態訊息時的屬性。</xref:System.Messaging.Message.Acknowledgment%2A?displayProperty=fullName>"
  example:
  - "The following code example sends and receives a message that contains an order to and from a queue. It specifically requests a positive acknowledgment when the original message reaches or is retrieved from the queue.  \n  \n [!code-cs[Message.Acknowledgment#1](~/add/codesnippet/csharp/p-system.messaging.messa_20_1.cs)]\n [!code-cpp[Message.Acknowledgment#1](~/add/codesnippet/cpp/p-system.messaging.messa_20_1.cpp)]\n [!code-vb[Message.Acknowledgment#1](~/add/codesnippet/visualbasic/p-system.messaging.messa_20_1.vb)]"
  syntax:
    content: public bool Acknowledgment { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要接收&lt;xref:System.Messaging.Message.Acknowledgment%2A?displayProperty=fullName&gt;資訊; 否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Messaging.MessagePropertyFilter.Acknowledgment*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.AdministrationQueue
  id: AdministrationQueue
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: AdministrationQueue
  nameWithType: MessagePropertyFilter.AdministrationQueue
  fullName: System.Messaging.MessagePropertyFilter.AdministrationQueue
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "取得或設定值，指出是否要擷取&lt;xref:System.Messaging.Message.AdministrationQueue%2A?displayProperty=fullName&gt;時接收或窺視訊息的屬性資訊。"
  remarks: "<xref:System.Messaging.Message.AdministrationQueue%2A>屬性<xref:System.Messaging.Message>類別指定名稱的佇列會接收由系統產生的通知。</xref:System.Messaging.Message> </xref:System.Messaging.Message.AdministrationQueue%2A>"
  example:
  - "The following code example demonstrates the use of the AdministrationQueue property.  \n  \n [!code-cpp[MessagePropertyFilter#2](~/add/codesnippet/cpp/p-system.messaging.messa_48_1.cpp)]\n [!code-cs[MessagePropertyFilter#2](~/add/codesnippet/csharp/p-system.messaging.messa_48_1.cs)]"
  syntax:
    content: public bool AdministrationQueue { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要接收&lt;xref:System.Messaging.Message.AdministrationQueue%2A?displayProperty=fullName&gt;資訊; 否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Messaging.MessagePropertyFilter.AdministrationQueue*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.AppSpecific
  id: AppSpecific
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: AppSpecific
  nameWithType: MessagePropertyFilter.AppSpecific
  fullName: System.Messaging.MessagePropertyFilter.AppSpecific
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "取得或設定值，指出是否要擷取&lt;xref:System.Messaging.Message.AppSpecific%2A?displayProperty=fullName&gt;時接收或窺視訊息的屬性資訊。"
  remarks: "<xref:System.Messaging.Message.AppSpecific%2A>屬性<xref:System.Messaging.Message>類別包含的其他應用程式特定資訊。</xref:System.Messaging.Message> </xref:System.Messaging.Message.AppSpecific%2A>"
  example:
  - "The following code example demonstrates the use of the AppSpecific property.  \n  \n [!code-cpp[MessagePropertyFilter#3](~/add/codesnippet/cpp/p-system.messaging.messa_69_1.cpp)]\n [!code-cs[MessagePropertyFilter#3](~/add/codesnippet/csharp/p-system.messaging.messa_69_1.cs)]"
  syntax:
    content: public bool AppSpecific { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要接收&lt;xref:System.Messaging.Message.AppSpecific%2A?displayProperty=fullName&gt;資訊; 否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Messaging.MessagePropertyFilter.AppSpecific*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.ArrivedTime
  id: ArrivedTime
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: ArrivedTime
  nameWithType: MessagePropertyFilter.ArrivedTime
  fullName: System.Messaging.MessagePropertyFilter.ArrivedTime
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "取得或設定值，指出是否要擷取&lt;xref:System.Messaging.Message.ArrivedTime%2A?displayProperty=fullName&gt;時接收或窺視訊息的屬性資訊。"
  remarks: "<xref:System.Messaging.Message.ArrivedTime%2A>屬性<xref:System.Messaging.Message>類別會指出訊息何時抵達目的端佇列的時間。</xref:System.Messaging.Message> </xref:System.Messaging.Message.ArrivedTime%2A> 這是調整 gmt，擷取訊息之電腦的當地時間。"
  example:
  - "The following code example demonstrates the use of the ArrivedTime property.  \n  \n [!code-cpp[MessagePropertyFilter#4](~/add/codesnippet/cpp/p-system.messaging.messa_96_1.cpp)]\n [!code-cs[MessagePropertyFilter#4](~/add/codesnippet/csharp/p-system.messaging.messa_96_1.cs)]"
  syntax:
    content: public bool ArrivedTime { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要接收&lt;xref:System.Messaging.Message.ArrivedTime%2A?displayProperty=fullName&gt;資訊; 否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Messaging.MessagePropertyFilter.ArrivedTime*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.AttachSenderId
  id: AttachSenderId
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: AttachSenderId
  nameWithType: MessagePropertyFilter.AttachSenderId
  fullName: System.Messaging.MessagePropertyFilter.AttachSenderId
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "取得或設定值，指出是否要擷取&lt;xref:System.Messaging.Message.AttachSenderId%2A?displayProperty=fullName&gt;時接收或窺視訊息的屬性資訊。"
  remarks: "<xref:System.Messaging.Message.AttachSenderId%2A>屬性<xref:System.Messaging.Message>類別會指定是否<xref:System.Messaging.Message.SenderId%2A?displayProperty=fullName>應該是或已附加至訊息。</xref:System.Messaging.Message.SenderId%2A?displayProperty=fullName> </xref:System.Messaging.Message> </xref:System.Messaging.Message.AttachSenderId%2A> <xref:System.Messaging.Message.SenderId%2A?displayProperty=fullName>由訊息佇列設定，用來驗證寄件者是否有佇列的存取權限所接收的佇列管理員。</xref:System.Messaging.Message.SenderId%2A?displayProperty=fullName>"
  example:
  - "The following code example demonstrates the use of the AttachSenderId property.  \n  \n [!code-cpp[MessagePropertyFilter#5](~/add/codesnippet/cpp/p-system.messaging.messa_80_1.cpp)]\n [!code-cs[MessagePropertyFilter#5](~/add/codesnippet/csharp/p-system.messaging.messa_80_1.cs)]"
  syntax:
    content: public bool AttachSenderId { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要接收&lt;xref:System.Messaging.Message.AttachSenderId%2A?displayProperty=fullName&gt;資訊; 否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Messaging.MessagePropertyFilter.AttachSenderId*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.Authenticated
  id: Authenticated
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: Authenticated
  nameWithType: MessagePropertyFilter.Authenticated
  fullName: System.Messaging.MessagePropertyFilter.Authenticated
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "取得或設定值，指出是否要擷取&lt;xref:System.Messaging.Message.Authenticated%2A?displayProperty=fullName&gt;時接收或窺視訊息的屬性資訊。"
  remarks: "<xref:System.Messaging.Message.Authenticated%2A>屬性<xref:System.Messaging.Message>類別可由接收應用程式來判斷是否已要求驗證。</xref:System.Messaging.Message> </xref:System.Messaging.Message.Authenticated%2A> 如果已經要求驗證，而且訊息在佇列中，已驗證訊息。       您不可能以查看訊息的屬性並判斷訊息是否驗證失敗。 驗證失敗的訊息會予以捨棄，而且不會傳遞至佇列。"
  example:
  - "The following code example demonstrates the use of the Authenticated property.  \n  \n [!code-cpp[MessagePropertyFilter#6](~/add/codesnippet/cpp/p-system.messaging.messa_57_1.cpp)]\n [!code-cs[MessagePropertyFilter#6](~/add/codesnippet/csharp/p-system.messaging.messa_57_1.cs)]"
  syntax:
    content: public bool Authenticated { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要接收&lt;xref:System.Messaging.Message.Authenticated%2A?displayProperty=fullName&gt;資訊; 否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Messaging.MessagePropertyFilter.Authenticated*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.AuthenticationProviderName
  id: AuthenticationProviderName
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: AuthenticationProviderName
  nameWithType: MessagePropertyFilter.AuthenticationProviderName
  fullName: System.Messaging.MessagePropertyFilter.AuthenticationProviderName
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "取得或設定值，指出是否要擷取&lt;xref:System.Messaging.Message.AuthenticationProviderName%2A?displayProperty=fullName&gt;時接收或窺視訊息的屬性資訊。"
  remarks: "<xref:System.Messaging.Message.AuthenticationProviderName%2A>屬性<xref:System.Messaging.Message>類別會指定用來產生訊息的數位簽章的密碼編譯提供者的名稱。</xref:System.Messaging.Message> </xref:System.Messaging.Message.AuthenticationProviderName%2A> <xref:System.Messaging.Message.AuthenticationProviderName%2A?displayProperty=fullName>通常是使用外部佇列時。</xref:System.Messaging.Message.AuthenticationProviderName%2A?displayProperty=fullName>       非 Microsoft Message Queuing 的佇列系統中存在的外部索引的佇列。 Microsoft Message Queuing 與透過連接器應用程式的這類佇列通訊。"
  example:
  - "The following code example demonstrates the use of the AuthenticationProviderName property.  \n  \n [!code-cpp[MessagePropertyFilter#7](~/add/codesnippet/cpp/p-system.messaging.messa_70_1.cpp)]\n [!code-cs[MessagePropertyFilter#7](~/add/codesnippet/csharp/p-system.messaging.messa_70_1.cs)]"
  syntax:
    content: public bool AuthenticationProviderName { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要接收&lt;xref:System.Messaging.Message.AuthenticationProviderName%2A?displayProperty=fullName&gt;資訊; 否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Messaging.MessagePropertyFilter.AuthenticationProviderName*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.AuthenticationProviderType
  id: AuthenticationProviderType
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: AuthenticationProviderType
  nameWithType: MessagePropertyFilter.AuthenticationProviderType
  fullName: System.Messaging.MessagePropertyFilter.AuthenticationProviderType
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "取得或設定值，指出是否要擷取&lt;xref:System.Messaging.Message.AuthenticationProviderType%2A?displayProperty=fullName&gt;時接收或窺視訊息的屬性資訊。"
  remarks: "<xref:System.Messaging.Message.AuthenticationProviderType%2A>屬性<xref:System.Messaging.Message>類別會指定用來產生訊息的數位簽章的密碼編譯提供者的類型。</xref:System.Messaging.Message> </xref:System.Messaging.Message.AuthenticationProviderType%2A> <xref:System.Messaging.Message.AuthenticationProviderType%2A>通常是使用外部佇列時。</xref:System.Messaging.Message.AuthenticationProviderType%2A>       非 Microsoft Message Queuing 的佇列系統中存在的外部索引的佇列。 Microsoft Message Queuing 與透過連接器應用程式的這類佇列通訊。"
  example:
  - "The following code example demonstrates the use of the AuthenticationProviderType property.  \n  \n [!code-cpp[MessagePropertyFilter#8](~/add/codesnippet/cpp/p-system.messaging.messa_38_1.cpp)]\n [!code-cs[MessagePropertyFilter#8](~/add/codesnippet/csharp/p-system.messaging.messa_38_1.cs)]"
  syntax:
    content: public bool AuthenticationProviderType { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要接收&lt;xref:System.Messaging.Message.AuthenticationProviderType%2A?displayProperty=fullName&gt;資訊; 否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Messaging.MessagePropertyFilter.AuthenticationProviderType*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.Body
  id: Body
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: Body
  nameWithType: MessagePropertyFilter.Body
  fullName: System.Messaging.MessagePropertyFilter.Body
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "取得或設定值，指出是否要擷取&lt;xref:System.Messaging.Message.Body%2A?displayProperty=fullName&gt;時接收或窺視訊息的屬性資訊。"
  remarks: "<xref:System.Messaging.Message.Body%2A>屬性<xref:System.Messaging.Message>類別代表已序列化訊息的內容。</xref:System.Messaging.Message> </xref:System.Messaging.Message.Body%2A> 主體可以包含最多為 4 MB 的資料。"
  example:
  - "The following code example demonstrates the use of the Body property.  \n  \n [!code-cpp[MessagePropertyFilter#9](~/add/codesnippet/cpp/p-system.messaging.messa_91_1.cpp)]\n [!code-cs[MessagePropertyFilter#9](~/add/codesnippet/csharp/p-system.messaging.messa_91_1.cs)]"
  syntax:
    content: public bool Body { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要接收&lt;xref:System.Messaging.Message.Body%2A?displayProperty=fullName&gt;資訊; 否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Messaging.MessagePropertyFilter.Body*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.ClearAll
  id: ClearAll
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: ClearAll()
  nameWithType: MessagePropertyFilter.ClearAll()
  fullName: System.Messaging.MessagePropertyFilter.ClearAll()
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "若要設定所有的布林值篩選值<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>，以便接收訊息時，會擷取任何訊息屬性。"
  remarks: "若要設定所有使用 ClearAll<xref:System.Messaging.MessagePropertyFilter>布林屬性，以`false`。</xref:System.Messaging.MessagePropertyFilter> 這會導致沒有接收訊息時要擷取的訊息屬性。 ClearAll 不會影響的值<xref:System.Messaging.MessagePropertyFilter.DefaultBodySize%2A>， <xref:System.Messaging.MessagePropertyFilter.DefaultExtensionSize%2A>，或<xref:System.Messaging.MessagePropertyFilter.DefaultLabelSize%2A>.</xref:System.Messaging.MessagePropertyFilter.DefaultLabelSize%2A> </xref:System.Messaging.MessagePropertyFilter.DefaultExtensionSize%2A> </xref:System.Messaging.MessagePropertyFilter.DefaultBodySize%2A>       在呼叫之後 ClearAll，就必須將至少一個篩選屬性設定為`true`才能接收訊息的相關資料。 您可以以任一設定個別屬性`true`，或您可以呼叫<xref:System.Messaging.MessagePropertyFilter.SetDefaults%2A>或<xref:System.Messaging.MessagePropertyFilter.SetAll%2A>.</xref:System.Messaging.MessagePropertyFilter.SetAll%2A> </xref:System.Messaging.MessagePropertyFilter.SetDefaults%2A>"
  example:
  - "The following code example calls the ClearAll method.  \n  \n [!code-cpp[MessagePropertyFilter#37](~/add/codesnippet/cpp/m-system.messaging.messa_12_1.cpp)]\n [!code-cs[MessagePropertyFilter#37](~/add/codesnippet/csharp/m-system.messaging.messa_12_1.cs)]"
  syntax:
    content: public void ClearAll ();
    parameters: []
  overload: System.Messaging.MessagePropertyFilter.ClearAll*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.Clone
  id: Clone
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: Clone()
  nameWithType: MessagePropertyFilter.Clone()
  fullName: System.Messaging.MessagePropertyFilter.Clone()
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "建立物件的淺層複本。"
  syntax:
    content: public virtual object Clone ();
    parameters: []
    return:
      type: System.Object
      description: "A<xref:System.Object>代表的執行個體<xref href=&quot;System.Messaging.MessagePropertyFilter&quot;></xref>類別</xref:System.Object>"
  overload: System.Messaging.MessagePropertyFilter.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.ConnectorType
  id: ConnectorType
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: ConnectorType
  nameWithType: MessagePropertyFilter.ConnectorType
  fullName: System.Messaging.MessagePropertyFilter.ConnectorType
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "取得或設定值，指出是否要擷取&lt;xref:System.Messaging.Message.ConnectorType%2A?displayProperty=fullName&gt;時接收或窺視訊息的屬性資訊。"
  remarks: "<xref:System.Messaging.Message.ConnectorType%2A>屬性<xref:System.Messaging.Message>類別時，需要應用程式設定通常會設定由訊息佇列的訊息屬性。</xref:System.Messaging.Message> </xref:System.Messaging.Message.ConnectorType%2A> 在下列兩個執行個體:-連線應用程式，以傳遞訊息時<xref:System.Messaging.Message.ConnectorType%2A?displayProperty=fullName>做是為了要解譯訊息的安全性與認可屬性的傳送與接收應用程式。</xref:System.Messaging.Message.ConnectorType%2A?displayProperty=fullName>      -當傳送應用程式加密的訊息、<xref:System.Messaging.Message.ConnectorType%2A?displayProperty=fullName>屬性會通知訊息佇列 」 使用對稱金鑰。</xref:System.Messaging.Message.ConnectorType%2A?displayProperty=fullName>"
  example:
  - "The following code example demonstrates the use of the ConnectorType property.  \n  \n [!code-cpp[MessagePropertyFilter#10](~/add/codesnippet/cpp/p-system.messaging.messa_36_1.cpp)]\n [!code-cs[MessagePropertyFilter#10](~/add/codesnippet/csharp/p-system.messaging.messa_36_1.cs)]"
  syntax:
    content: public bool ConnectorType { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要接收&lt;xref:System.Messaging.Message.ConnectorType%2A?displayProperty=fullName&gt;資訊; 否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Messaging.MessagePropertyFilter.ConnectorType*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.CorrelationId
  id: CorrelationId
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: CorrelationId
  nameWithType: MessagePropertyFilter.CorrelationId
  fullName: System.Messaging.MessagePropertyFilter.CorrelationId
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "取得或設定值，指出是否要擷取&lt;xref:System.Messaging.Message.CorrelationId%2A?displayProperty=fullName&gt;時接收或窺視訊息的屬性資訊。"
  remarks: "<xref:System.Messaging.Message.CorrelationId%2A>屬性<xref:System.Messaging.Message>類別會指定可由認可和報告訊息來參考原始訊息的訊息識別項。</xref:System.Messaging.Message> </xref:System.Messaging.Message.CorrelationId%2A> 它提供的應用程式定義的識別項，接收應用程式可以用來排序訊息。"
  example:
  - "The following code example sends and receives a message containing an order to and from a queue. It specifically requests a positive acknowledgment when the original message reaches or is retrieved from the queue.  \n  \n [!code-cs[Message.Acknowledgment#1](~/add/codesnippet/csharp/p-system.messaging.messa_81_1.cs)]\n [!code-cpp[Message.Acknowledgment#1](~/add/codesnippet/cpp/p-system.messaging.messa_81_1.cpp)]\n [!code-vb[Message.Acknowledgment#1](~/add/codesnippet/visualbasic/p-system.messaging.messa_81_1.vb)]"
  syntax:
    content: public bool CorrelationId { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要接收&lt;xref:System.Messaging.Message.CorrelationId%2A?displayProperty=fullName&gt;資訊; 否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Messaging.MessagePropertyFilter.CorrelationId*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.DefaultBodySize
  id: DefaultBodySize
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: DefaultBodySize
  nameWithType: MessagePropertyFilter.DefaultBodySize
  fullName: System.Messaging.MessagePropertyFilter.DefaultBodySize
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "取得或設定大小，以位元組為單位的預設本文緩衝區。"
  remarks: "預設主體大小指定為訊息的本文內容配置的位元組數目。 <xref:System.Messaging.Message.Body%2A>屬性<xref:System.Messaging.Message>類別代表已序列化訊息的內容。</xref:System.Messaging.Message> </xref:System.Messaging.Message.Body%2A> 主體可以包含最多為 4 MB 的資料。 限制的主體大小可改善效能。"
  example:
  - "The following code example demonstrates the use of the DefaultBodySize property.  \n  \n [!code-cpp[MessagePropertyFilter#11](~/add/codesnippet/cpp/p-system.messaging.messa_83_1.cpp)]\n [!code-cs[MessagePropertyFilter#11](~/add/codesnippet/csharp/p-system.messaging.messa_83_1.cs)]"
  syntax:
    content: public int DefaultBodySize { get; set; }
    return:
      type: System.Int32
      description: "若要建立接收訊息時預設本文緩衝區大小。 預設值為 1024 個位元組。"
  overload: System.Messaging.MessagePropertyFilter.DefaultBodySize*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "指派的值為負數。"
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.DefaultExtensionSize
  id: DefaultExtensionSize
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: DefaultExtensionSize
  nameWithType: MessagePropertyFilter.DefaultExtensionSize
  fullName: System.Messaging.MessagePropertyFilter.DefaultExtensionSize
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "取得或設定大小，以位元組為單位的預設延伸緩衝區。"
  remarks: "預設的延伸大小指定為訊息的延伸模組配置的位元組數目。 <xref:System.Messaging.Message.Extension%2A>屬性<xref:System.Messaging.Message>類別代表其他應用程式定義資訊訊息，例如二進位大型物件相關聯。</xref:System.Messaging.Message> </xref:System.Messaging.Message.Extension%2A> 它負責解譯<xref:System.Messaging.Message.Extension%2A>.</xref:System.Messaging.Message.Extension%2A>內容的應用程式"
  example:
  - "The following code example demonstrates the use of the DefaultExtensionSize property.  \n  \n [!code-cpp[MessagePropertyFilter#12](~/add/codesnippet/cpp/p-system.messaging.messa_94_1.cpp)]\n [!code-cs[MessagePropertyFilter#12](~/add/codesnippet/csharp/p-system.messaging.messa_94_1.cs)]"
  syntax:
    content: public int DefaultExtensionSize { get; set; }
    return:
      type: System.Int32
      description: "若要建立接收訊息時預設延伸緩衝區大小。 預設值為 255 個位元組。"
  overload: System.Messaging.MessagePropertyFilter.DefaultExtensionSize*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "指派的值為負數。"
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.DefaultLabelSize
  id: DefaultLabelSize
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: DefaultLabelSize
  nameWithType: MessagePropertyFilter.DefaultLabelSize
  fullName: System.Messaging.MessagePropertyFilter.DefaultLabelSize
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "取得或設定大小，以位元組為單位的預設標籤緩衝區。"
  remarks: "預設標籤大小指定為訊息的標籤配置的位元組數目。 <xref:System.Messaging.Message.Label%2A>屬性<xref:System.Messaging.Message>類別會指定訊息的標籤。</xref:System.Messaging.Message> </xref:System.Messaging.Message.Label%2A>"
  example:
  - "The following code example demonstrates the use of the DefaultLabelSize property.  \n  \n [!code-cpp[MessagePropertyFilter#13](~/add/codesnippet/cpp/p-system.messaging.messa_15_1.cpp)]\n [!code-cs[MessagePropertyFilter#13](~/add/codesnippet/csharp/p-system.messaging.messa_15_1.cs)]"
  syntax:
    content: public int DefaultLabelSize { get; set; }
    return:
      type: System.Int32
      description: "若要接收訊息時建立預設標籤緩衝區大小。 預設值為 255 個位元組。"
  overload: System.Messaging.MessagePropertyFilter.DefaultLabelSize*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "指派的值為負數。"
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.DestinationQueue
  id: DestinationQueue
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: DestinationQueue
  nameWithType: MessagePropertyFilter.DestinationQueue
  fullName: System.Messaging.MessagePropertyFilter.DestinationQueue
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "取得或設定值，指出是否要擷取&lt;xref:System.Messaging.Message.DestinationQueue%2A?displayProperty=fullName&gt;時接收或窺視訊息的屬性資訊。"
  remarks: "<xref:System.Messaging.Message.DestinationQueue%2A>屬性<xref:System.Messaging.Message>類別會識別訊息的原始目的佇列。</xref:System.Messaging.Message> </xref:System.Messaging.Message.DestinationQueue%2A> 它通常用來判斷是日誌或寄不出的信件佇列中訊息的原始目的端。 它也可用時的回應訊息傳送至回應佇列。"
  example:
  - "The following code example demonstrates the use of the DestinationQueue property.  \n  \n [!code-cpp[MessagePropertyFilter#14](~/add/codesnippet/cpp/p-system.messaging.messa_65_1.cpp)]\n [!code-cs[MessagePropertyFilter#14](~/add/codesnippet/csharp/p-system.messaging.messa_65_1.cs)]"
  syntax:
    content: public bool DestinationQueue { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要接收&lt;xref:System.Messaging.Message.DestinationQueue%2A?displayProperty=fullName&gt;資訊; 否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Messaging.MessagePropertyFilter.DestinationQueue*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.DestinationSymmetricKey
  id: DestinationSymmetricKey
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: DestinationSymmetricKey
  nameWithType: MessagePropertyFilter.DestinationSymmetricKey
  fullName: System.Messaging.MessagePropertyFilter.DestinationSymmetricKey
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "取得或設定值，指出是否要擷取&lt;xref:System.Messaging.Message.DestinationSymmetricKey%2A?displayProperty=fullName&gt;時接收或窺視訊息的屬性資訊。"
  remarks: "<xref:System.Messaging.Message.DestinationSymmetricKey%2A>屬性<xref:System.Messaging.Message>類別會指定用來加密訊息的對稱金鑰。</xref:System.Messaging.Message> </xref:System.Messaging.Message.DestinationSymmetricKey%2A> 當您傳送應用程式加密的訊息，或是外部佇列來傳送加密的訊息時是必要。       非 Microsoft Message Queuing 的佇列系統中存在的外部索引的佇列。 Microsoft Message Queuing 與透過連接器應用程式的這類佇列通訊。"
  example:
  - "The following code example demonstrates the use of the DestinationSymmetricKey property.  \n  \n [!code-cpp[MessagePropertyFilter#15](~/add/codesnippet/cpp/p-system.messaging.messa_72_1.cpp)]\n [!code-cs[MessagePropertyFilter#15](~/add/codesnippet/csharp/p-system.messaging.messa_72_1.cs)]"
  syntax:
    content: public bool DestinationSymmetricKey { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要接收&lt;xref:System.Messaging.Message.DestinationSymmetricKey%2A?displayProperty=fullName&gt;資訊; 否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Messaging.MessagePropertyFilter.DestinationSymmetricKey*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.DigitalSignature
  id: DigitalSignature
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: DigitalSignature
  nameWithType: MessagePropertyFilter.DigitalSignature
  fullName: System.Messaging.MessagePropertyFilter.DigitalSignature
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "取得或設定值，指出是否要擷取&lt;xref:System.Messaging.Message.DigitalSignature%2A?displayProperty=fullName&gt;時接收或窺視訊息的屬性資訊。"
  remarks: "<xref:System.Messaging.Message.DigitalSignature%2A>屬性<xref:System.Messaging.Message>類別會指定用來驗證訊息的數位簽章。</xref:System.Messaging.Message> </xref:System.Messaging.Message.DigitalSignature%2A> 在大部分情況下，它會產生並傳送應用程式要求驗證時，由訊息佇列設定。"
  example:
  - "The following code example demonstrates the use of the DigitalSignature property.  \n  \n [!code-cpp[MessagePropertyFilter#16](~/add/codesnippet/cpp/p-system.messaging.messa_1_1.cpp)]\n [!code-cs[MessagePropertyFilter#16](~/add/codesnippet/csharp/p-system.messaging.messa_1_1.cs)]"
  syntax:
    content: public bool DigitalSignature { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要接收&lt;xref:System.Messaging.Message.DigitalSignature%2A?displayProperty=fullName&gt;資訊; 否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Messaging.MessagePropertyFilter.DigitalSignature*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.EncryptionAlgorithm
  id: EncryptionAlgorithm
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: EncryptionAlgorithm
  nameWithType: MessagePropertyFilter.EncryptionAlgorithm
  fullName: System.Messaging.MessagePropertyFilter.EncryptionAlgorithm
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "取得或設定值，指出是否要擷取&lt;xref:System.Messaging.Message.EncryptionAlgorithm%2A?displayProperty=fullName&gt;時接收或窺視訊息的屬性資訊。"
  remarks: "如果訊息是私人的它會加密再傳送並接收時解密。 <xref:System.Messaging.Message.EncryptionAlgorithm%2A>屬性<xref:System.Messaging.Message>類別會指定用來加密私用訊息之訊息主體的演算法。</xref:System.Messaging.Message> </xref:System.Messaging.Message.EncryptionAlgorithm%2A>"
  example:
  - "The following code example demonstrates the use of the EncryptionAlgorithm property.  \n  \n [!code-cpp[MessagePropertyFilter#17](~/add/codesnippet/cpp/p-system.messaging.messa_27_1.cpp)]\n [!code-cs[MessagePropertyFilter#17](~/add/codesnippet/csharp/p-system.messaging.messa_27_1.cs)]"
  syntax:
    content: public bool EncryptionAlgorithm { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要接收&lt;xref:System.Messaging.Message.EncryptionAlgorithm%2A?displayProperty=fullName&gt;資訊; 否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Messaging.MessagePropertyFilter.EncryptionAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.Extension
  id: Extension
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: Extension
  nameWithType: MessagePropertyFilter.Extension
  fullName: System.Messaging.MessagePropertyFilter.Extension
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "取得或設定值，指出是否要擷取&lt;xref:System.Messaging.Message.Extension%2A?displayProperty=fullName&gt;時接收或窺視訊息的屬性資訊。"
  remarks: "<xref:System.Messaging.Message.Extension%2A>屬性<xref:System.Messaging.Message>類別會提供訊息，例如大型二進位物件相關聯的其他應用程式定義的資訊。</xref:System.Messaging.Message> </xref:System.Messaging.Message.Extension%2A> 它是解譯<xref:System.Messaging.Message.Extension%2A>.</xref:System.Messaging.Message.Extension%2A>內容接收的應用程式的責任"
  example:
  - "The following code example demonstrates the use of the Extension property.  \n  \n [!code-cpp[MessagePropertyFilter#18](~/add/codesnippet/cpp/p-system.messaging.messa_37_1.cpp)]\n [!code-cs[MessagePropertyFilter#18](~/add/codesnippet/csharp/p-system.messaging.messa_37_1.cs)]"
  syntax:
    content: public bool Extension { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要接收&lt;xref:System.Messaging.Message.Extension%2A?displayProperty=fullName&gt;資訊; 否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Messaging.MessagePropertyFilter.Extension*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.HashAlgorithm
  id: HashAlgorithm
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: HashAlgorithm
  nameWithType: MessagePropertyFilter.HashAlgorithm
  fullName: System.Messaging.MessagePropertyFilter.HashAlgorithm
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "取得或設定值，指出是否要擷取&lt;xref:System.Messaging.Message.HashAlgorithm%2A?displayProperty=fullName&gt;時接收或窺視訊息的屬性資訊。"
  remarks: "<xref:System.Messaging.Message.HashAlgorithm%2A>屬性<xref:System.Messaging.Message>類別識別驗證訊息時訊息佇列使用的雜湊演算法。</xref:System.Messaging.Message> </xref:System.Messaging.Message.HashAlgorithm%2A> 建立訊息的數位簽章時，也會使用雜湊演算法。"
  example:
  - "The following code example demonstrates the use of the HashAlgorithm property.  \n  \n [!code-cpp[MessagePropertyFilter#19](~/add/codesnippet/cpp/p-system.messaging.messa_21_1.cpp)]\n [!code-cs[MessagePropertyFilter#19](~/add/codesnippet/csharp/p-system.messaging.messa_21_1.cs)]"
  syntax:
    content: public bool HashAlgorithm { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要接收&lt;xref:System.Messaging.Message.HashAlgorithm%2A?displayProperty=fullName&gt;資訊; 否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Messaging.MessagePropertyFilter.HashAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.Id
  id: Id
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: Id
  nameWithType: MessagePropertyFilter.Id
  fullName: System.Messaging.MessagePropertyFilter.Id
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "取得或設定值，指出是否要擷取&lt;xref:System.Messaging.Message.Id%2A?displayProperty=fullName&gt;時接收或窺視訊息的屬性資訊。"
  remarks: "<xref:System.Messaging.Message.Id%2A>屬性<xref:System.Messaging.Message>類別表示的訊息，訊息佇列所產生的唯一識別碼。</xref:System.Messaging.Message> </xref:System.Messaging.Message.Id%2A> 傳送訊息時，會產生這個識別碼。"
  example:
  - "The following code example demonstrates the use of the Id property.  \n  \n [!code-cpp[MessagePropertyFilter#20](~/add/codesnippet/cpp/p-system.messaging.messa_6_1.cpp)]\n [!code-cs[MessagePropertyFilter#20](~/add/codesnippet/csharp/p-system.messaging.messa_6_1.cs)]"
  syntax:
    content: public bool Id { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要接收&lt;xref:System.Messaging.Message.Id%2A?displayProperty=fullName&gt;資訊; 否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Messaging.MessagePropertyFilter.Id*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.IsFirstInTransaction
  id: IsFirstInTransaction
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: IsFirstInTransaction
  nameWithType: MessagePropertyFilter.IsFirstInTransaction
  fullName: System.Messaging.MessagePropertyFilter.IsFirstInTransaction
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "取得或設定值，指出是否要擷取&lt;xref:System.Messaging.Message.IsFirstInTransaction%2A?displayProperty=fullName&gt;時接收或窺視訊息的屬性資訊。"
  remarks: "<xref:System.Messaging.Message.IsFirstInTransaction%2A>屬性<xref:System.Messaging.Message>類別可由接收應用程式來確認訊息傳送到單一佇列在單一交易中的第一個訊息。</xref:System.Messaging.Message> </xref:System.Messaging.Message.IsFirstInTransaction%2A>"
  example:
  - "The following code example demonstrates the use of the IsFirstInTransaction property.  \n  \n [!code-cpp[MessagePropertyFilter#50](~/add/codesnippet/cpp/p-system.messaging.messa_16_1.cpp)]\n [!code-cs[MessagePropertyFilter#50](~/add/codesnippet/csharp/p-system.messaging.messa_16_1.cs)]"
  syntax:
    content: public bool IsFirstInTransaction { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要接收&lt;xref:System.Messaging.Message.IsFirstInTransaction%2A?displayProperty=fullName&gt;資訊; 否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Messaging.MessagePropertyFilter.IsFirstInTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.IsLastInTransaction
  id: IsLastInTransaction
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: IsLastInTransaction
  nameWithType: MessagePropertyFilter.IsLastInTransaction
  fullName: System.Messaging.MessagePropertyFilter.IsLastInTransaction
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "取得或設定值，指出是否要擷取&lt;xref:System.Messaging.Message.IsLastInTransaction%2A?displayProperty=fullName&gt;時接收或窺視訊息的屬性資訊。"
  remarks: "<xref:System.Messaging.Message.IsLastInTransaction%2A>屬性<xref:System.Messaging.Message>類別可由接收應用程式來確認訊息是否為最後從單一交易傳送到單一佇列的訊息。</xref:System.Messaging.Message> </xref:System.Messaging.Message.IsLastInTransaction%2A>"
  example:
  - "The following code example demonstrates the use of the IsLastInTransaction property.  \n  \n [!code-cpp[MessagePropertyFilter#51](~/add/codesnippet/cpp/p-system.messaging.messa_89_1.cpp)]\n [!code-cs[MessagePropertyFilter#51](~/add/codesnippet/csharp/p-system.messaging.messa_89_1.cs)]"
  syntax:
    content: public bool IsLastInTransaction { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要接收&lt;xref:System.Messaging.Message.IsLastInTransaction%2A?displayProperty=fullName&gt;資訊; 否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Messaging.MessagePropertyFilter.IsLastInTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.Label
  id: Label
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: Label
  nameWithType: MessagePropertyFilter.Label
  fullName: System.Messaging.MessagePropertyFilter.Label
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "取得或設定值，指出是否要擷取&lt;xref:System.Messaging.Message.Label%2A?displayProperty=fullName&gt;時接收或窺視訊息的屬性資訊。"
  remarks: "<xref:System.Messaging.Message.Label%2A>屬性<xref:System.Messaging.Message>類別會指定訊息的標籤。</xref:System.Messaging.Message> </xref:System.Messaging.Message.Label%2A>"
  example:
  - "The following code example demonstrates the use of the Label property.  \n  \n [!code-cpp[MessagePropertyFilter#21](~/add/codesnippet/cpp/p-system.messaging.messa_99_1.cpp)]\n [!code-cs[MessagePropertyFilter#21](~/add/codesnippet/csharp/p-system.messaging.messa_99_1.cs)]"
  syntax:
    content: public bool Label { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要接收&lt;xref:System.Messaging.Message.Label%2A?displayProperty=fullName&gt;資訊; 否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Messaging.MessagePropertyFilter.Label*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.LookupId
  id: LookupId
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: LookupId
  nameWithType: MessagePropertyFilter.LookupId
  fullName: System.Messaging.MessagePropertyFilter.LookupId
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "取得或設定值，指出是否要擷取<xref:System.Messaging.Message.LookupId*>時接收或窺視訊息的屬性資訊。</xref:System.Messaging.Message.LookupId*>"
  remarks: "<xref:System.Messaging.Message.LookupId%2A>屬性<xref:System.Messaging.Message>類別會指定訊息的查閱識別項。</xref:System.Messaging.Message> </xref:System.Messaging.Message.LookupId%2A>"
  syntax:
    content: public bool LookupId { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要接收<xref:System.Messaging.Message.LookupId*>屬性資訊，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Messaging.Message.LookupId*> 預設值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Messaging.MessagePropertyFilter.LookupId*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.MessageType
  id: MessageType
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: MessageType
  nameWithType: MessagePropertyFilter.MessageType
  fullName: System.Messaging.MessagePropertyFilter.MessageType
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "取得或設定值，指出是否要擷取&lt;xref:System.Messaging.Message.MessageType%2A?displayProperty=fullName&gt;時接收或窺視訊息的屬性資訊。"
  remarks: "<xref:System.Messaging.Message.MessageType%2A>屬性<xref:System.Messaging.Message>類別會識別訊息的類型。</xref:System.Messaging.Message> </xref:System.Messaging.Message.MessageType%2A> 訊息可以是一般訊息、 正或負認可訊息或報告訊息。"
  example:
  - "The following code example demonstrates the use of the MessageType property.  \n  \n [!code-cpp[MessagePropertyFilter#22](~/add/codesnippet/cpp/p-system.messaging.messa_39_1.cpp)]\n [!code-cs[MessagePropertyFilter#22](~/add/codesnippet/csharp/p-system.messaging.messa_39_1.cs)]"
  syntax:
    content: public bool MessageType { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要接收&lt;xref:System.Messaging.Message.MessageType%2A?displayProperty=fullName&gt;資訊; 否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Messaging.MessagePropertyFilter.MessageType*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.Priority
  id: Priority
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: Priority
  nameWithType: MessagePropertyFilter.Priority
  fullName: System.Messaging.MessagePropertyFilter.Priority
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "取得或設定值，指出是否要擷取&lt;xref:System.Messaging.Message.Priority%2A?displayProperty=fullName&gt;時接收或窺視訊息的屬性資訊。"
  remarks: "<xref:System.Messaging.Message.Priority%2A>屬性<xref:System.Messaging.Message>類別會影響訊息佇列處理訊息，而路由，方式與在到達其目的地時，將會放在佇列的訊息。</xref:System.Messaging.Message> </xref:System.Messaging.Message.Priority%2A>       非交易式訊息只能設定有意義地加以訊息優先順序。 交易式訊息的優先順序會自動設定為零，這會導致交易式訊息的優先權會被忽略。"
  example:
  - "The following code example sends two messages of different priorities to the queue, and retrieves them subsequently.  \n  \n [!code-cpp[Message.DefaultPropertiesToSend#1](~/add/codesnippet/cpp/p-system.messaging.messa_49_1.cpp)]\n [!code-vb[Message.DefaultPropertiesToSend#1](~/add/codesnippet/visualbasic/p-system.messaging.messa_49_1.vb)]\n [!code-cs[Message.DefaultPropertiesToSend#1](~/add/codesnippet/csharp/p-system.messaging.messa_49_1.cs)]"
  syntax:
    content: public bool Priority { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要接收&lt;xref:System.Messaging.Message.Priority%2A?displayProperty=fullName&gt;資訊; 否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Messaging.MessagePropertyFilter.Priority*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.Recoverable
  id: Recoverable
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: Recoverable
  nameWithType: MessagePropertyFilter.Recoverable
  fullName: System.Messaging.MessagePropertyFilter.Recoverable
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "取得或設定值，指出是否要擷取&lt;xref:System.Messaging.Message.Recoverable%2A?displayProperty=fullName&gt;時接收或窺視訊息的屬性資訊。"
  remarks: "<xref:System.Messaging.Message.Recoverable%2A>屬性<xref:System.Messaging.Message>類別會指出是否保證訊息的傳遞，即使目的地佇列來路由訊息時電腦當機。</xref:System.Messaging.Message> </xref:System.Messaging.Message.Recoverable%2A>       如果訊息的傳遞保證，訊息儲存在本機上的每一個步驟，直到訊息成功轉送至下一部電腦。 設定<xref:System.Messaging.Message.Recoverable%2A?displayProperty=fullName>至`true`訊息上可能會影響輸送量。</xref:System.Messaging.Message.Recoverable%2A?displayProperty=fullName>"
  example:
  - "The following code example demonstrates the use of the Recoverable property.  \n  \n [!code-cpp[MessagePropertyFilter#23](~/add/codesnippet/cpp/p-system.messaging.messa_62_1.cpp)]\n [!code-cs[MessagePropertyFilter#23](~/add/codesnippet/csharp/p-system.messaging.messa_62_1.cs)]"
  syntax:
    content: public bool Recoverable { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要接收&lt;xref:System.Messaging.Message.Recoverable%2A?displayProperty=fullName&gt;資訊; 否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Messaging.MessagePropertyFilter.Recoverable*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.ResponseQueue
  id: ResponseQueue
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: ResponseQueue
  nameWithType: MessagePropertyFilter.ResponseQueue
  fullName: System.Messaging.MessagePropertyFilter.ResponseQueue
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "取得或設定值，指出是否要擷取&lt;xref:System.Messaging.Message.ResponseQueue%2A?displayProperty=fullName&gt;時接收或窺視訊息的屬性資訊。"
  remarks: "<xref:System.Messaging.Message.ResponseQueue%2A>屬性<xref:System.Messaging.Message>類別識別接收會傳回到傳送應用程式所接收的應用程式的應用程式所產生的回應訊息的佇列。</xref:System.Messaging.Message> </xref:System.Messaging.Message.ResponseQueue%2A> 應用程式傳送其訊息時所傳送的應用程式指定回應佇列。 任何可用的佇列都可以指定為回應佇列。       傳回至回應佇列的訊息是特定應用程式。 應用程式必須定義什麼是訊息中以及執行接收到訊息的動作。"
  example:
  - "The following code example demonstrates the use of the ResponseQueue property.  \n  \n [!code-cpp[MessagePropertyFilter#24](~/add/codesnippet/cpp/p-system.messaging.messa_64_1.cpp)]\n [!code-cs[MessagePropertyFilter#24](~/add/codesnippet/csharp/p-system.messaging.messa_64_1.cs)]"
  syntax:
    content: public bool ResponseQueue { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要接收&lt;xref:System.Messaging.Message.ResponseQueue%2A?displayProperty=fullName&gt;資訊; 否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Messaging.MessagePropertyFilter.ResponseQueue*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.SenderCertificate
  id: SenderCertificate
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: SenderCertificate
  nameWithType: MessagePropertyFilter.SenderCertificate
  fullName: System.Messaging.MessagePropertyFilter.SenderCertificate
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "取得或設定值，指出是否要擷取&lt;xref:System.Messaging.Message.SenderCertificate%2A?displayProperty=fullName&gt;時接收或窺視訊息的屬性資訊。"
  remarks: "<xref:System.Messaging.Message.SenderCertificate%2A>屬性<xref:System.Messaging.Message>類別會指定用來驗證訊息的安全性憑證。</xref:System.Messaging.Message> </xref:System.Messaging.Message.SenderCertificate%2A>"
  example:
  - "The following code example demonstrates the use of the SenderCertificate property.  \n  \n [!code-cpp[MessagePropertyFilter#25](~/add/codesnippet/cpp/p-system.messaging.messa_60_1.cpp)]\n [!code-cs[MessagePropertyFilter#25](~/add/codesnippet/csharp/p-system.messaging.messa_60_1.cs)]"
  syntax:
    content: public bool SenderCertificate { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要接收&lt;xref:System.Messaging.Message.SenderCertificate%2A?displayProperty=fullName&gt;資訊; 否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Messaging.MessagePropertyFilter.SenderCertificate*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.SenderId
  id: SenderId
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: SenderId
  nameWithType: MessagePropertyFilter.SenderId
  fullName: System.Messaging.MessagePropertyFilter.SenderId
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "取得或設定值，指出是否要擷取&lt;xref:System.Messaging.Message.SenderId%2A?displayProperty=fullName&gt;時接收或窺視訊息的屬性資訊。"
  remarks: "<xref:System.Messaging.Message.SenderId%2A>屬性<xref:System.Messaging.Message>類別主要供接收佇列管理員在驗證訊息。</xref:System.Messaging.Message> </xref:System.Messaging.Message.SenderId%2A> 屬性會設定由訊息佇列，並可由 「 佇列管理員來確認訊息寄件者，以及寄件者可以接收佇列的存取權限。"
  example:
  - "The following code example demonstrates the use of the SenderId property.  \n  \n [!code-cpp[MessagePropertyFilter#26](~/add/codesnippet/cpp/p-system.messaging.messa_24_1.cpp)]\n [!code-cs[MessagePropertyFilter#26](~/add/codesnippet/csharp/p-system.messaging.messa_24_1.cs)]"
  syntax:
    content: public bool SenderId { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要接收&lt;xref:System.Messaging.Message.SenderId%2A?displayProperty=fullName&gt;資訊; 否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Messaging.MessagePropertyFilter.SenderId*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.SenderVersion
  id: SenderVersion
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: SenderVersion
  nameWithType: MessagePropertyFilter.SenderVersion
  fullName: System.Messaging.MessagePropertyFilter.SenderVersion
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "取得或設定值，指出是否要擷取&lt;xref:System.Messaging.Message.SenderVersion%2A?displayProperty=fullName&gt;時接收或窺視訊息的屬性資訊。"
  remarks: "<xref:System.Messaging.Message.SenderVersion%2A>屬性<xref:System.Messaging.Message>類別會指定用來傳送訊息的訊息佇列的版本。</xref:System.Messaging.Message> </xref:System.Messaging.Message.SenderVersion%2A> 屬性是重要時使用的功能，例如異動處理才支援 Message Queuing 2.0 版和更新版本，或數位簽章可用來驗證版本 1.0 所傳送的訊息應該注意的項目。       <xref:System.Messaging.Message.SenderVersion%2A?displayProperty=fullName>設定所傳送的佇列管理員傳送訊息時。</xref:System.Messaging.Message.SenderVersion%2A?displayProperty=fullName>"
  example:
  - "The following code example demonstrates the use of the SenderVersion property.  \n  \n [!code-cpp[MessagePropertyFilter#27](~/add/codesnippet/cpp/p-system.messaging.messa_102_1.cpp)]\n [!code-cs[MessagePropertyFilter#27](~/add/codesnippet/csharp/p-system.messaging.messa_102_1.cs)]"
  syntax:
    content: public bool SenderVersion { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要接收&lt;xref:System.Messaging.Message.SenderVersion%2A?displayProperty=fullName&gt;資訊; 否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Messaging.MessagePropertyFilter.SenderVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.SentTime
  id: SentTime
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: SentTime
  nameWithType: MessagePropertyFilter.SentTime
  fullName: System.Messaging.MessagePropertyFilter.SentTime
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "取得或設定值，指出是否要擷取&lt;xref:System.Messaging.Message.SentTime%2A?displayProperty=fullName&gt;時接收或窺視訊息的屬性資訊。"
  remarks: "<xref:System.Messaging.Message.SentTime%2A>屬性<xref:System.Messaging.Message>類別指出在傳送端電腦的日期和時間來源佇列管理員傳送訊息時。</xref:System.Messaging.Message> </xref:System.Messaging.Message.SentTime%2A>"
  example:
  - "The following code example demonstrates the use of the SentTime property.  \n  \n [!code-cpp[MessagePropertyFilter#28](~/add/codesnippet/cpp/p-system.messaging.messa_97_1.cpp)]\n [!code-cs[MessagePropertyFilter#28](~/add/codesnippet/csharp/p-system.messaging.messa_97_1.cs)]"
  syntax:
    content: public bool SentTime { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要接收&lt;xref:System.Messaging.Message.SentTime%2A?displayProperty=fullName&gt;資訊; 否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Messaging.MessagePropertyFilter.SentTime*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.SetAll
  id: SetAll
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: SetAll()
  nameWithType: MessagePropertyFilter.SetAll()
  fullName: System.Messaging.MessagePropertyFilter.SetAll()
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "指定要接收訊息時，擷取所有的訊息屬性。"
  remarks: "若要設定所有布林使用 SetAll<xref:System.Messaging.MessagePropertyFilter>屬性`true`。</xref:System.Messaging.MessagePropertyFilter> 這會導致接收訊息時要擷取的所有訊息屬性。 SetAll 不會影響的值<xref:System.Messaging.MessagePropertyFilter.DefaultBodySize%2A>， <xref:System.Messaging.MessagePropertyFilter.DefaultExtensionSize%2A>，或<xref:System.Messaging.MessagePropertyFilter.DefaultLabelSize%2A>.</xref:System.Messaging.MessagePropertyFilter.DefaultLabelSize%2A> </xref:System.Messaging.MessagePropertyFilter.DefaultExtensionSize%2A> </xref:System.Messaging.MessagePropertyFilter.DefaultBodySize%2A>       呼叫 SetAll 之後, 您可以設定個別的篩選值`false`為了限制接收訊息時所擷取的屬性。"
  example:
  - "The following code example calls the SetAll method.  \n  \n [!code-cpp[MessagePropertyFilter#39](~/add/codesnippet/cpp/m-system.messaging.messa_48_1.cpp)]\n [!code-cs[MessagePropertyFilter#39](~/add/codesnippet/csharp/m-system.messaging.messa_48_1.cs)]"
  syntax:
    content: public void SetAll ();
    parameters: []
  overload: System.Messaging.MessagePropertyFilter.SetAll*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.SetDefaults
  id: SetDefaults
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: SetDefaults()
  nameWithType: MessagePropertyFilter.SetDefaults()
  fullName: System.Messaging.MessagePropertyFilter.SetDefaults()
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "設定訊息佇列的通用屬性，來篩選值<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>以及為其預設值的整數值屬性。"
  remarks: "使用來進行下列設定 SetDefaults<xref:System.Messaging.MessagePropertyFilter>布林值屬性，以`true`。</xref:System.Messaging.MessagePropertyFilter> 這些是最常見的屬性<xref:System.Messaging.MessageQueue>通常會與下列互動:- <xref:System.Messaging.MessagePropertyFilter.AcknowledgeType%2A>- <xref:System.Messaging.MessagePropertyFilter.Acknowledgment%2A>- <xref:System.Messaging.MessagePropertyFilter.AdministrationQueue%2A>- <xref:System.Messaging.MessagePropertyFilter.Body%2A>- <xref:System.Messaging.MessagePropertyFilter.Id%2A>- <xref:System.Messaging.MessagePropertyFilter.Label%2A>- <xref:System.Messaging.MessagePropertyFilter.LookupId%2A>- <xref:System.Messaging.MessagePropertyFilter.MessageType%2A>- <xref:System.Messaging.MessagePropertyFilter.ResponseQueue%2A>- <xref:System.Messaging.MessagePropertyFilter.UseDeadLetterQueue%2A>- <xref:System.Messaging.MessagePropertyFilter.UseJournalQueue%2A>SetDefaults 成為其預設值表中設定的屬性。</xref:System.Messaging.MessagePropertyFilter.UseJournalQueue%2A> </xref:System.Messaging.MessagePropertyFilter.UseDeadLetterQueue%2A> </xref:System.Messaging.MessagePropertyFilter.ResponseQueue%2A> </xref:System.Messaging.MessagePropertyFilter.MessageType%2A> </xref:System.Messaging.MessagePropertyFilter.LookupId%2A> </xref:System.Messaging.MessagePropertyFilter.Label%2A> </xref:System.Messaging.MessagePropertyFilter.Id%2A> </xref:System.Messaging.MessagePropertyFilter.Body%2A> </xref:System.Messaging.MessagePropertyFilter.AdministrationQueue%2A> </xref:System.Messaging.MessagePropertyFilter.Acknowledgment%2A> </xref:System.Messaging.MessagePropertyFilter.AcknowledgeType%2A> </xref:System.Messaging.MessageQueue>      |屬性 |預設值 |  |--------------|-------------------|  |<xref:System.Messaging.MessagePropertyFilter.DefaultBodySize%2A>|&1024;年 |  |<xref:System.Messaging.MessagePropertyFilter.DefaultExtensionSize%2A>|&255; |  |<xref:System.Messaging.MessagePropertyFilter.DefaultLabelSize%2A>|&255; |      <xref:System.Messaging.MessageQueue.MessageReadPropertyFilter%2A?displayProperty=fullName>屬性代表<xref:System.Messaging.MessagePropertyFilter>呼叫的目標 SetDefaults 已經被。</xref:System.Messaging.MessagePropertyFilter> </xref:System.Messaging.MessageQueue.MessageReadPropertyFilter%2A?displayProperty=fullName> </xref:System.Messaging.MessagePropertyFilter.DefaultLabelSize%2A> </xref:System.Messaging.MessagePropertyFilter.DefaultExtensionSize%2A> </xref:System.Messaging.MessagePropertyFilter.DefaultBodySize%2A>"
  example:
  - "The following code example calls the SetDefaults method.  \n  \n [!code-cpp[MessagePropertyFilter#38](~/add/codesnippet/cpp/m-system.messaging.messa_45_1.cpp)]\n [!code-cs[MessagePropertyFilter#38](~/add/codesnippet/csharp/m-system.messaging.messa_45_1.cs)]"
  syntax:
    content: public void SetDefaults ();
    parameters: []
  overload: System.Messaging.MessagePropertyFilter.SetDefaults*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.SourceMachine
  id: SourceMachine
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: SourceMachine
  nameWithType: MessagePropertyFilter.SourceMachine
  fullName: System.Messaging.MessagePropertyFilter.SourceMachine
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "取得或設定值，指出是否要擷取&lt;xref:System.Messaging.Message.SourceMachine%2A?displayProperty=fullName&gt;時接收或窺視訊息的屬性資訊。"
  remarks: "<xref:System.Messaging.Message.SourceMachine%2A>屬性<xref:System.Messaging.Message>類別指定訊息起源所在的電腦。</xref:System.Messaging.Message> </xref:System.Messaging.Message.SourceMachine%2A>"
  example:
  - "The following code example demonstrates the use of the SourceMachine property.  \n  \n [!code-cpp[MessagePropertyFilter#29](~/add/codesnippet/cpp/p-system.messaging.messa_40_1.cpp)]\n [!code-cs[MessagePropertyFilter#29](~/add/codesnippet/csharp/p-system.messaging.messa_40_1.cs)]"
  syntax:
    content: public bool SourceMachine { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要接收&lt;xref:System.Messaging.Message.SourceMachine%2A?displayProperty=fullName&gt;資訊; 否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Messaging.MessagePropertyFilter.SourceMachine*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.TimeToBeReceived
  id: TimeToBeReceived
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: TimeToBeReceived
  nameWithType: MessagePropertyFilter.TimeToBeReceived
  fullName: System.Messaging.MessagePropertyFilter.TimeToBeReceived
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "取得或設定值，指出是否要擷取&lt;xref:System.Messaging.Message.TimeToBeReceived%2A?displayProperty=fullName&gt;時接收或窺視訊息的屬性資訊。"
  remarks: "<xref:System.Messaging.Message.TimeToBeReceived%2A>屬性<xref:System.Messaging.Message>類別指定的總時間 （秒） 傳送到從目的地佇列等候接收訊息。</xref:System.Messaging.Message> </xref:System.Messaging.Message.TimeToBeReceived%2A> 要從目標佇列擷取訊息的時間限制包括到達目的地佇列，花費的時間加上應用程式擷取訊息之前的佇列中等候所花費的時間。"
  example:
  - "The following code example demonstrates the use of the TimeToBeReceived property.  \n  \n [!code-cpp[MessagePropertyFilter#30](~/add/codesnippet/cpp/p-system.messaging.messa_0_1.cpp)]\n [!code-cs[MessagePropertyFilter#30](~/add/codesnippet/csharp/p-system.messaging.messa_0_1.cs)]"
  syntax:
    content: public bool TimeToBeReceived { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要接收&lt;xref:System.Messaging.Message.TimeToBeReceived%2A?displayProperty=fullName&gt;資訊; 否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Messaging.MessagePropertyFilter.TimeToBeReceived*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.TimeToReachQueue
  id: TimeToReachQueue
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: TimeToReachQueue
  nameWithType: MessagePropertyFilter.TimeToReachQueue
  fullName: System.Messaging.MessagePropertyFilter.TimeToReachQueue
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "取得或設定值，指出是否要擷取&lt;xref:System.Messaging.Message.TimeToReachQueue%2A?displayProperty=fullName&gt;時接收或窺視訊息的屬性資訊。"
  remarks: "<xref:System.Messaging.Message.TimeToReachQueue%2A>屬性<xref:System.Messaging.Message>類別以秒為單位，才能到達目的端佇列傳送訊息的時間從指定的時間限制。</xref:System.Messaging.Message> </xref:System.Messaging.Message.TimeToReachQueue%2A>"
  example:
  - "The following code example demonstrates the use of the TimeToReachQueue property.  \n  \n [!code-cpp[MessagePropertyFilter#31](~/add/codesnippet/cpp/p-system.messaging.messa_51_1.cpp)]\n [!code-cs[MessagePropertyFilter#31](~/add/codesnippet/csharp/p-system.messaging.messa_51_1.cs)]"
  syntax:
    content: public bool TimeToReachQueue { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要接收&lt;xref:System.Messaging.Message.TimeToReachQueue%2A?displayProperty=fullName&gt;資訊; 否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Messaging.MessagePropertyFilter.TimeToReachQueue*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.TransactionId
  id: TransactionId
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: TransactionId
  nameWithType: MessagePropertyFilter.TransactionId
  fullName: System.Messaging.MessagePropertyFilter.TransactionId
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "取得或設定值，指出是否要擷取&lt;xref:System.Messaging.Message.TransactionId%2A?displayProperty=fullName&gt;時接收或窺視訊息的屬性資訊。"
  remarks: "<xref:System.Messaging.Message.TransactionId%2A>屬性<xref:System.Messaging.Message>類別會識別在傳送訊息的交易。</xref:System.Messaging.Message> </xref:System.Messaging.Message.TransactionId%2A> 使用這個屬性，接收應用程式內確認訊息已傳送的特定交易的一部分。"
  example:
  - "The following code example demonstrates the use of the TransactionId property.  \n  \n [!code-cpp[MessagePropertyFilter#52](~/add/codesnippet/cpp/p-system.messaging.messa_46_1.cpp)]\n [!code-cs[MessagePropertyFilter#52](~/add/codesnippet/csharp/p-system.messaging.messa_46_1.cs)]"
  syntax:
    content: public bool TransactionId { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要接收&lt;xref:System.Messaging.Message.TransactionId%2A?displayProperty=fullName&gt;資訊; 否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Messaging.MessagePropertyFilter.TransactionId*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.TransactionStatusQueue
  id: TransactionStatusQueue
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: TransactionStatusQueue
  nameWithType: MessagePropertyFilter.TransactionStatusQueue
  fullName: System.Messaging.MessagePropertyFilter.TransactionStatusQueue
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "取得或設定值，指出是否要擷取&lt;xref:System.Messaging.Message.TransactionStatusQueue%2A?displayProperty=fullName&gt;時接收或窺視訊息的屬性資訊。"
  remarks: "<xref:System.Messaging.Message.TransactionStatusQueue%2A>屬性<xref:System.Messaging.Message>類別會識別來源電腦上的交易狀態佇列。</xref:System.Messaging.Message> </xref:System.Messaging.Message.TransactionStatusQueue%2A> 屬性用於傳送認可訊息傳回給傳送應用程式。 連接器應用程式接收傳送至外部佇列的交易式訊息時，會使用的交易狀態佇列。       非 Microsoft Message Queuing 的佇列系統中存在的外部索引的佇列。 Microsoft Message Queuing 與透過連接器應用程式的這類佇列通訊。"
  example:
  - "The following code example demonstrates the use of the TransactionStatusQueue property.  \n  \n [!code-cpp[MessagePropertyFilter#53](~/add/codesnippet/cpp/p-system.messaging.messa_29_1.cpp)]\n [!code-cs[MessagePropertyFilter#53](~/add/codesnippet/csharp/p-system.messaging.messa_29_1.cs)]"
  syntax:
    content: public bool TransactionStatusQueue { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要接收&lt;xref:System.Messaging.Message.TransactionStatusQueue%2A?displayProperty=fullName&gt;資訊; 否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Messaging.MessagePropertyFilter.TransactionStatusQueue*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.UseAuthentication
  id: UseAuthentication
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: UseAuthentication
  nameWithType: MessagePropertyFilter.UseAuthentication
  fullName: System.Messaging.MessagePropertyFilter.UseAuthentication
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "取得或設定值，指出是否要擷取&lt;xref:System.Messaging.Message.UseAuthentication%2A?displayProperty=fullName&gt;時接收或窺視訊息的屬性資訊。"
  remarks: "<xref:System.Messaging.Message.UseAuthentication%2A>屬性<xref:System.Messaging.Message>類別會指定是否需要驗證訊息。</xref:System.Messaging.Message> </xref:System.Messaging.Message.UseAuthentication%2A>       您不可能以查看訊息的屬性並判斷訊息是否驗證失敗。 驗證失敗的訊息會予以捨棄，而且不會傳遞至佇列。"
  example:
  - "The following code example demonstrates the use of the UseAuthentication property.  \n  \n [!code-cpp[MessagePropertyFilter#32](~/add/codesnippet/cpp/p-system.messaging.messa_34_1.cpp)]\n [!code-cs[MessagePropertyFilter#32](~/add/codesnippet/csharp/p-system.messaging.messa_34_1.cs)]"
  syntax:
    content: public bool UseAuthentication { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要接收&lt;xref:System.Messaging.Message.UseAuthentication%2A?displayProperty=fullName&gt;資訊; 否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Messaging.MessagePropertyFilter.UseAuthentication*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.UseDeadLetterQueue
  id: UseDeadLetterQueue
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: UseDeadLetterQueue
  nameWithType: MessagePropertyFilter.UseDeadLetterQueue
  fullName: System.Messaging.MessagePropertyFilter.UseDeadLetterQueue
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "取得或設定值，指出是否要擷取&lt;xref:System.Messaging.Message.UseDeadLetterQueue%2A?displayProperty=fullName&gt;時接收或窺視訊息的屬性資訊。"
  remarks: "<xref:System.Messaging.Message.UseDeadLetterQueue%2A>屬性<xref:System.Messaging.Message>類別會指定無法傳遞訊息的複本是否應該傳送到寄不出信件佇列。</xref:System.Messaging.Message> </xref:System.Messaging.Message.UseDeadLetterQueue%2A>"
  example:
  - "The following code example demonstrates the use of the UseDeadLetterQueue property.  \n  \n [!code-cpp[MessagePropertyFilter#33](~/add/codesnippet/cpp/p-system.messaging.messa_58_1.cpp)]\n [!code-cs[MessagePropertyFilter#33](~/add/codesnippet/csharp/p-system.messaging.messa_58_1.cs)]"
  syntax:
    content: public bool UseDeadLetterQueue { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要接收&lt;xref:System.Messaging.Message.UseDeadLetterQueue%2A?displayProperty=fullName&gt;資訊; 否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Messaging.MessagePropertyFilter.UseDeadLetterQueue*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.UseEncryption
  id: UseEncryption
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: UseEncryption
  nameWithType: MessagePropertyFilter.UseEncryption
  fullName: System.Messaging.MessagePropertyFilter.UseEncryption
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "取得或設定值，指出是否要擷取&lt;xref:System.Messaging.Message.UseEncryption%2A?displayProperty=fullName&gt;時接收或窺視訊息的屬性資訊。"
  remarks: "<xref:System.Messaging.Message.UseEncryption%2A>屬性<xref:System.Messaging.Message>類別會指定是否要加密訊息。</xref:System.Messaging.Message> </xref:System.Messaging.Message.UseEncryption%2A>"
  example:
  - "The following code example demonstrates the use of the UseEncryption property.  \n  \n [!code-cpp[MessagePropertyFilter#34](~/add/codesnippet/cpp/p-system.messaging.messa_35_1.cpp)]\n [!code-cs[MessagePropertyFilter#34](~/add/codesnippet/csharp/p-system.messaging.messa_35_1.cs)]"
  syntax:
    content: public bool UseEncryption { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要接收&lt;xref:System.Messaging.Message.UseEncryption%2A?displayProperty=fullName&gt;資訊; 否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Messaging.MessagePropertyFilter.UseEncryption*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.UseJournalQueue
  id: UseJournalQueue
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: UseJournalQueue
  nameWithType: MessagePropertyFilter.UseJournalQueue
  fullName: System.Messaging.MessagePropertyFilter.UseJournalQueue
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "取得或設定值，指出是否要擷取&lt;xref:System.Messaging.Message.UseJournalQueue%2A?displayProperty=fullName&gt;時接收或窺視訊息的屬性資訊。"
  remarks: "<xref:System.Messaging.Message.UseJournalQueue%2A>屬性<xref:System.Messaging.Message>類別會指定訊息的複本是否應該保留在原始電腦上電腦日誌中。</xref:System.Messaging.Message> </xref:System.Messaging.Message.UseJournalQueue%2A>"
  example:
  - "The following code example demonstrates the use of the UseJournalQueue property.  \n  \n [!code-cpp[MessagePropertyFilter#35](~/add/codesnippet/cpp/p-system.messaging.messa_44_1.cpp)]\n [!code-cs[MessagePropertyFilter#35](~/add/codesnippet/csharp/p-system.messaging.messa_44_1.cs)]"
  syntax:
    content: public bool UseJournalQueue { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要接收&lt;xref:System.Messaging.Message.UseJournalQueue%2A?displayProperty=fullName&gt;資訊; 否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Messaging.MessagePropertyFilter.UseJournalQueue*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.UseTracing
  id: UseTracing
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: UseTracing
  nameWithType: MessagePropertyFilter.UseTracing
  fullName: System.Messaging.MessagePropertyFilter.UseTracing
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "取得或設定值，指出是否要擷取&lt;xref:System.Messaging.Message.UseTracing%2A?displayProperty=fullName&gt;時接收或窺視訊息的屬性資訊。"
  remarks: "<xref:System.Messaging.Message.UseTracing%2A>屬性<xref:System.Messaging.Message>類別會指定是否要向其目的地佇列為時加以追蹤訊息的路由。</xref:System.Messaging.Message> </xref:System.Messaging.Message.UseTracing%2A> 如果`true`，每次原始訊息通過訊息佇列路由伺服器，訊息佇列所產生的報告訊息傳送至系統的報告佇列。       使用追蹤牽涉到設定 Active Directory，並指定訊息佇列企業報告佇列。 系統管理員可以設定這些設定。"
  example:
  - "The following code example demonstrates the use of the UseTracing property.  \n  \n [!code-cpp[MessagePropertyFilter#36](~/add/codesnippet/cpp/p-system.messaging.messa_14_1.cpp)]\n [!code-cs[MessagePropertyFilter#36](~/add/codesnippet/csharp/p-system.messaging.messa_14_1.cs)]"
  syntax:
    content: public bool UseTracing { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要接收&lt;xref:System.Messaging.Message.UseTracing%2A?displayProperty=fullName&gt;資訊; 否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Messaging.MessagePropertyFilter.UseTracing*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Messaging.MessagePropertyFilter.#ctor
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: MessagePropertyFilter()
  nameWithType: MessagePropertyFilter.MessagePropertyFilter()
  fullName: System.Messaging.MessagePropertyFilter.MessagePropertyFilter()
- uid: System.Messaging.MessagePropertyFilter.AcknowledgeType
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: AcknowledgeType
  nameWithType: MessagePropertyFilter.AcknowledgeType
  fullName: System.Messaging.MessagePropertyFilter.AcknowledgeType
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Messaging.MessagePropertyFilter.Acknowledgment
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: Acknowledgment
  nameWithType: MessagePropertyFilter.Acknowledgment
  fullName: System.Messaging.MessagePropertyFilter.Acknowledgment
- uid: System.Messaging.MessagePropertyFilter.AdministrationQueue
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: AdministrationQueue
  nameWithType: MessagePropertyFilter.AdministrationQueue
  fullName: System.Messaging.MessagePropertyFilter.AdministrationQueue
- uid: System.Messaging.MessagePropertyFilter.AppSpecific
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: AppSpecific
  nameWithType: MessagePropertyFilter.AppSpecific
  fullName: System.Messaging.MessagePropertyFilter.AppSpecific
- uid: System.Messaging.MessagePropertyFilter.ArrivedTime
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: ArrivedTime
  nameWithType: MessagePropertyFilter.ArrivedTime
  fullName: System.Messaging.MessagePropertyFilter.ArrivedTime
- uid: System.Messaging.MessagePropertyFilter.AttachSenderId
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: AttachSenderId
  nameWithType: MessagePropertyFilter.AttachSenderId
  fullName: System.Messaging.MessagePropertyFilter.AttachSenderId
- uid: System.Messaging.MessagePropertyFilter.Authenticated
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: Authenticated
  nameWithType: MessagePropertyFilter.Authenticated
  fullName: System.Messaging.MessagePropertyFilter.Authenticated
- uid: System.Messaging.MessagePropertyFilter.AuthenticationProviderName
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: AuthenticationProviderName
  nameWithType: MessagePropertyFilter.AuthenticationProviderName
  fullName: System.Messaging.MessagePropertyFilter.AuthenticationProviderName
- uid: System.Messaging.MessagePropertyFilter.AuthenticationProviderType
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: AuthenticationProviderType
  nameWithType: MessagePropertyFilter.AuthenticationProviderType
  fullName: System.Messaging.MessagePropertyFilter.AuthenticationProviderType
- uid: System.Messaging.MessagePropertyFilter.Body
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: Body
  nameWithType: MessagePropertyFilter.Body
  fullName: System.Messaging.MessagePropertyFilter.Body
- uid: System.Messaging.MessagePropertyFilter.ClearAll
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: ClearAll()
  nameWithType: MessagePropertyFilter.ClearAll()
  fullName: System.Messaging.MessagePropertyFilter.ClearAll()
- uid: System.Messaging.MessagePropertyFilter.Clone
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: Clone()
  nameWithType: MessagePropertyFilter.Clone()
  fullName: System.Messaging.MessagePropertyFilter.Clone()
- uid: System.Messaging.MessagePropertyFilter.ConnectorType
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: ConnectorType
  nameWithType: MessagePropertyFilter.ConnectorType
  fullName: System.Messaging.MessagePropertyFilter.ConnectorType
- uid: System.Messaging.MessagePropertyFilter.CorrelationId
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: CorrelationId
  nameWithType: MessagePropertyFilter.CorrelationId
  fullName: System.Messaging.MessagePropertyFilter.CorrelationId
- uid: System.Messaging.MessagePropertyFilter.DefaultBodySize
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: DefaultBodySize
  nameWithType: MessagePropertyFilter.DefaultBodySize
  fullName: System.Messaging.MessagePropertyFilter.DefaultBodySize
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Messaging.MessagePropertyFilter.DefaultExtensionSize
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: DefaultExtensionSize
  nameWithType: MessagePropertyFilter.DefaultExtensionSize
  fullName: System.Messaging.MessagePropertyFilter.DefaultExtensionSize
- uid: System.Messaging.MessagePropertyFilter.DefaultLabelSize
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: DefaultLabelSize
  nameWithType: MessagePropertyFilter.DefaultLabelSize
  fullName: System.Messaging.MessagePropertyFilter.DefaultLabelSize
- uid: System.Messaging.MessagePropertyFilter.DestinationQueue
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: DestinationQueue
  nameWithType: MessagePropertyFilter.DestinationQueue
  fullName: System.Messaging.MessagePropertyFilter.DestinationQueue
- uid: System.Messaging.MessagePropertyFilter.DestinationSymmetricKey
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: DestinationSymmetricKey
  nameWithType: MessagePropertyFilter.DestinationSymmetricKey
  fullName: System.Messaging.MessagePropertyFilter.DestinationSymmetricKey
- uid: System.Messaging.MessagePropertyFilter.DigitalSignature
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: DigitalSignature
  nameWithType: MessagePropertyFilter.DigitalSignature
  fullName: System.Messaging.MessagePropertyFilter.DigitalSignature
- uid: System.Messaging.MessagePropertyFilter.EncryptionAlgorithm
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: EncryptionAlgorithm
  nameWithType: MessagePropertyFilter.EncryptionAlgorithm
  fullName: System.Messaging.MessagePropertyFilter.EncryptionAlgorithm
- uid: System.Messaging.MessagePropertyFilter.Extension
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: Extension
  nameWithType: MessagePropertyFilter.Extension
  fullName: System.Messaging.MessagePropertyFilter.Extension
- uid: System.Messaging.MessagePropertyFilter.HashAlgorithm
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: HashAlgorithm
  nameWithType: MessagePropertyFilter.HashAlgorithm
  fullName: System.Messaging.MessagePropertyFilter.HashAlgorithm
- uid: System.Messaging.MessagePropertyFilter.Id
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: Id
  nameWithType: MessagePropertyFilter.Id
  fullName: System.Messaging.MessagePropertyFilter.Id
- uid: System.Messaging.MessagePropertyFilter.IsFirstInTransaction
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: IsFirstInTransaction
  nameWithType: MessagePropertyFilter.IsFirstInTransaction
  fullName: System.Messaging.MessagePropertyFilter.IsFirstInTransaction
- uid: System.Messaging.MessagePropertyFilter.IsLastInTransaction
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: IsLastInTransaction
  nameWithType: MessagePropertyFilter.IsLastInTransaction
  fullName: System.Messaging.MessagePropertyFilter.IsLastInTransaction
- uid: System.Messaging.MessagePropertyFilter.Label
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: Label
  nameWithType: MessagePropertyFilter.Label
  fullName: System.Messaging.MessagePropertyFilter.Label
- uid: System.Messaging.MessagePropertyFilter.LookupId
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: LookupId
  nameWithType: MessagePropertyFilter.LookupId
  fullName: System.Messaging.MessagePropertyFilter.LookupId
- uid: System.Messaging.MessagePropertyFilter.MessageType
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: MessageType
  nameWithType: MessagePropertyFilter.MessageType
  fullName: System.Messaging.MessagePropertyFilter.MessageType
- uid: System.Messaging.MessagePropertyFilter.Priority
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: Priority
  nameWithType: MessagePropertyFilter.Priority
  fullName: System.Messaging.MessagePropertyFilter.Priority
- uid: System.Messaging.MessagePropertyFilter.Recoverable
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: Recoverable
  nameWithType: MessagePropertyFilter.Recoverable
  fullName: System.Messaging.MessagePropertyFilter.Recoverable
- uid: System.Messaging.MessagePropertyFilter.ResponseQueue
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: ResponseQueue
  nameWithType: MessagePropertyFilter.ResponseQueue
  fullName: System.Messaging.MessagePropertyFilter.ResponseQueue
- uid: System.Messaging.MessagePropertyFilter.SenderCertificate
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: SenderCertificate
  nameWithType: MessagePropertyFilter.SenderCertificate
  fullName: System.Messaging.MessagePropertyFilter.SenderCertificate
- uid: System.Messaging.MessagePropertyFilter.SenderId
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: SenderId
  nameWithType: MessagePropertyFilter.SenderId
  fullName: System.Messaging.MessagePropertyFilter.SenderId
- uid: System.Messaging.MessagePropertyFilter.SenderVersion
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: SenderVersion
  nameWithType: MessagePropertyFilter.SenderVersion
  fullName: System.Messaging.MessagePropertyFilter.SenderVersion
- uid: System.Messaging.MessagePropertyFilter.SentTime
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: SentTime
  nameWithType: MessagePropertyFilter.SentTime
  fullName: System.Messaging.MessagePropertyFilter.SentTime
- uid: System.Messaging.MessagePropertyFilter.SetAll
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: SetAll()
  nameWithType: MessagePropertyFilter.SetAll()
  fullName: System.Messaging.MessagePropertyFilter.SetAll()
- uid: System.Messaging.MessagePropertyFilter.SetDefaults
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: SetDefaults()
  nameWithType: MessagePropertyFilter.SetDefaults()
  fullName: System.Messaging.MessagePropertyFilter.SetDefaults()
- uid: System.Messaging.MessagePropertyFilter.SourceMachine
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: SourceMachine
  nameWithType: MessagePropertyFilter.SourceMachine
  fullName: System.Messaging.MessagePropertyFilter.SourceMachine
- uid: System.Messaging.MessagePropertyFilter.TimeToBeReceived
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: TimeToBeReceived
  nameWithType: MessagePropertyFilter.TimeToBeReceived
  fullName: System.Messaging.MessagePropertyFilter.TimeToBeReceived
- uid: System.Messaging.MessagePropertyFilter.TimeToReachQueue
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: TimeToReachQueue
  nameWithType: MessagePropertyFilter.TimeToReachQueue
  fullName: System.Messaging.MessagePropertyFilter.TimeToReachQueue
- uid: System.Messaging.MessagePropertyFilter.TransactionId
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: TransactionId
  nameWithType: MessagePropertyFilter.TransactionId
  fullName: System.Messaging.MessagePropertyFilter.TransactionId
- uid: System.Messaging.MessagePropertyFilter.TransactionStatusQueue
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: TransactionStatusQueue
  nameWithType: MessagePropertyFilter.TransactionStatusQueue
  fullName: System.Messaging.MessagePropertyFilter.TransactionStatusQueue
- uid: System.Messaging.MessagePropertyFilter.UseAuthentication
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: UseAuthentication
  nameWithType: MessagePropertyFilter.UseAuthentication
  fullName: System.Messaging.MessagePropertyFilter.UseAuthentication
- uid: System.Messaging.MessagePropertyFilter.UseDeadLetterQueue
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: UseDeadLetterQueue
  nameWithType: MessagePropertyFilter.UseDeadLetterQueue
  fullName: System.Messaging.MessagePropertyFilter.UseDeadLetterQueue
- uid: System.Messaging.MessagePropertyFilter.UseEncryption
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: UseEncryption
  nameWithType: MessagePropertyFilter.UseEncryption
  fullName: System.Messaging.MessagePropertyFilter.UseEncryption
- uid: System.Messaging.MessagePropertyFilter.UseJournalQueue
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: UseJournalQueue
  nameWithType: MessagePropertyFilter.UseJournalQueue
  fullName: System.Messaging.MessagePropertyFilter.UseJournalQueue
- uid: System.Messaging.MessagePropertyFilter.UseTracing
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: UseTracing
  nameWithType: MessagePropertyFilter.UseTracing
  fullName: System.Messaging.MessagePropertyFilter.UseTracing
- uid: System.Messaging.MessagePropertyFilter.#ctor*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: MessagePropertyFilter
  nameWithType: MessagePropertyFilter.MessagePropertyFilter
- uid: System.Messaging.MessagePropertyFilter.AcknowledgeType*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: AcknowledgeType
  nameWithType: MessagePropertyFilter.AcknowledgeType
- uid: System.Messaging.MessagePropertyFilter.Acknowledgment*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: Acknowledgment
  nameWithType: MessagePropertyFilter.Acknowledgment
- uid: System.Messaging.MessagePropertyFilter.AdministrationQueue*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: AdministrationQueue
  nameWithType: MessagePropertyFilter.AdministrationQueue
- uid: System.Messaging.MessagePropertyFilter.AppSpecific*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: AppSpecific
  nameWithType: MessagePropertyFilter.AppSpecific
- uid: System.Messaging.MessagePropertyFilter.ArrivedTime*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: ArrivedTime
  nameWithType: MessagePropertyFilter.ArrivedTime
- uid: System.Messaging.MessagePropertyFilter.AttachSenderId*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: AttachSenderId
  nameWithType: MessagePropertyFilter.AttachSenderId
- uid: System.Messaging.MessagePropertyFilter.Authenticated*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: Authenticated
  nameWithType: MessagePropertyFilter.Authenticated
- uid: System.Messaging.MessagePropertyFilter.AuthenticationProviderName*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: AuthenticationProviderName
  nameWithType: MessagePropertyFilter.AuthenticationProviderName
- uid: System.Messaging.MessagePropertyFilter.AuthenticationProviderType*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: AuthenticationProviderType
  nameWithType: MessagePropertyFilter.AuthenticationProviderType
- uid: System.Messaging.MessagePropertyFilter.Body*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: Body
  nameWithType: MessagePropertyFilter.Body
- uid: System.Messaging.MessagePropertyFilter.ClearAll*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: ClearAll
  nameWithType: MessagePropertyFilter.ClearAll
- uid: System.Messaging.MessagePropertyFilter.Clone*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: Clone
  nameWithType: MessagePropertyFilter.Clone
- uid: System.Messaging.MessagePropertyFilter.ConnectorType*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: ConnectorType
  nameWithType: MessagePropertyFilter.ConnectorType
- uid: System.Messaging.MessagePropertyFilter.CorrelationId*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: CorrelationId
  nameWithType: MessagePropertyFilter.CorrelationId
- uid: System.Messaging.MessagePropertyFilter.DefaultBodySize*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: DefaultBodySize
  nameWithType: MessagePropertyFilter.DefaultBodySize
- uid: System.Messaging.MessagePropertyFilter.DefaultExtensionSize*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: DefaultExtensionSize
  nameWithType: MessagePropertyFilter.DefaultExtensionSize
- uid: System.Messaging.MessagePropertyFilter.DefaultLabelSize*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: DefaultLabelSize
  nameWithType: MessagePropertyFilter.DefaultLabelSize
- uid: System.Messaging.MessagePropertyFilter.DestinationQueue*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: DestinationQueue
  nameWithType: MessagePropertyFilter.DestinationQueue
- uid: System.Messaging.MessagePropertyFilter.DestinationSymmetricKey*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: DestinationSymmetricKey
  nameWithType: MessagePropertyFilter.DestinationSymmetricKey
- uid: System.Messaging.MessagePropertyFilter.DigitalSignature*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: DigitalSignature
  nameWithType: MessagePropertyFilter.DigitalSignature
- uid: System.Messaging.MessagePropertyFilter.EncryptionAlgorithm*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: EncryptionAlgorithm
  nameWithType: MessagePropertyFilter.EncryptionAlgorithm
- uid: System.Messaging.MessagePropertyFilter.Extension*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: Extension
  nameWithType: MessagePropertyFilter.Extension
- uid: System.Messaging.MessagePropertyFilter.HashAlgorithm*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: HashAlgorithm
  nameWithType: MessagePropertyFilter.HashAlgorithm
- uid: System.Messaging.MessagePropertyFilter.Id*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: Id
  nameWithType: MessagePropertyFilter.Id
- uid: System.Messaging.MessagePropertyFilter.IsFirstInTransaction*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: IsFirstInTransaction
  nameWithType: MessagePropertyFilter.IsFirstInTransaction
- uid: System.Messaging.MessagePropertyFilter.IsLastInTransaction*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: IsLastInTransaction
  nameWithType: MessagePropertyFilter.IsLastInTransaction
- uid: System.Messaging.MessagePropertyFilter.Label*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: Label
  nameWithType: MessagePropertyFilter.Label
- uid: System.Messaging.MessagePropertyFilter.LookupId*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: LookupId
  nameWithType: MessagePropertyFilter.LookupId
- uid: System.Messaging.MessagePropertyFilter.MessageType*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: MessageType
  nameWithType: MessagePropertyFilter.MessageType
- uid: System.Messaging.MessagePropertyFilter.Priority*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: Priority
  nameWithType: MessagePropertyFilter.Priority
- uid: System.Messaging.MessagePropertyFilter.Recoverable*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: Recoverable
  nameWithType: MessagePropertyFilter.Recoverable
- uid: System.Messaging.MessagePropertyFilter.ResponseQueue*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: ResponseQueue
  nameWithType: MessagePropertyFilter.ResponseQueue
- uid: System.Messaging.MessagePropertyFilter.SenderCertificate*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: SenderCertificate
  nameWithType: MessagePropertyFilter.SenderCertificate
- uid: System.Messaging.MessagePropertyFilter.SenderId*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: SenderId
  nameWithType: MessagePropertyFilter.SenderId
- uid: System.Messaging.MessagePropertyFilter.SenderVersion*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: SenderVersion
  nameWithType: MessagePropertyFilter.SenderVersion
- uid: System.Messaging.MessagePropertyFilter.SentTime*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: SentTime
  nameWithType: MessagePropertyFilter.SentTime
- uid: System.Messaging.MessagePropertyFilter.SetAll*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: SetAll
  nameWithType: MessagePropertyFilter.SetAll
- uid: System.Messaging.MessagePropertyFilter.SetDefaults*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: SetDefaults
  nameWithType: MessagePropertyFilter.SetDefaults
- uid: System.Messaging.MessagePropertyFilter.SourceMachine*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: SourceMachine
  nameWithType: MessagePropertyFilter.SourceMachine
- uid: System.Messaging.MessagePropertyFilter.TimeToBeReceived*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: TimeToBeReceived
  nameWithType: MessagePropertyFilter.TimeToBeReceived
- uid: System.Messaging.MessagePropertyFilter.TimeToReachQueue*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: TimeToReachQueue
  nameWithType: MessagePropertyFilter.TimeToReachQueue
- uid: System.Messaging.MessagePropertyFilter.TransactionId*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: TransactionId
  nameWithType: MessagePropertyFilter.TransactionId
- uid: System.Messaging.MessagePropertyFilter.TransactionStatusQueue*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: TransactionStatusQueue
  nameWithType: MessagePropertyFilter.TransactionStatusQueue
- uid: System.Messaging.MessagePropertyFilter.UseAuthentication*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: UseAuthentication
  nameWithType: MessagePropertyFilter.UseAuthentication
- uid: System.Messaging.MessagePropertyFilter.UseDeadLetterQueue*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: UseDeadLetterQueue
  nameWithType: MessagePropertyFilter.UseDeadLetterQueue
- uid: System.Messaging.MessagePropertyFilter.UseEncryption*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: UseEncryption
  nameWithType: MessagePropertyFilter.UseEncryption
- uid: System.Messaging.MessagePropertyFilter.UseJournalQueue*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: UseJournalQueue
  nameWithType: MessagePropertyFilter.UseJournalQueue
- uid: System.Messaging.MessagePropertyFilter.UseTracing*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: UseTracing
  nameWithType: MessagePropertyFilter.UseTracing
