### YamlMime:ManagedReference
items:
- uid: System.Net.Configuration.HttpListenerElement
  id: HttpListenerElement
  children:
  - System.Net.Configuration.HttpListenerElement.#ctor
  - System.Net.Configuration.HttpListenerElement.Properties
  - System.Net.Configuration.HttpListenerElement.Timeouts
  - System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl
  langs:
  - csharp
  name: HttpListenerElement
  nameWithType: HttpListenerElement
  fullName: System.Net.Configuration.HttpListenerElement
  type: Class
  summary: "表示組態檔中的 HttpListener 元素。 這個類別無法被繼承。"
  remarks: "This class corresponds to the \\<httpListener> Element (Network Settings) configuration element. This class provides programmatic access to information that can be stored in configuration files.  \n  \n The <xref:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl%2A> property indicates if <xref:System.Net.HttpListener> uses the raw unescaped URI instead of the converted URI where any percent-encoded values are converted and other normalization steps are taken.  \n  \n When a <xref:System.Net.HttpListener> instance receives a request through the `http.sys` service, it creates an instance of the URI string provided by `http.sys`, and exposes it as the <xref:System.Net.HttpListenerRequest.Url%2A?displayProperty=fullName> property.  \n  \n The `http.sys` service exposes two request URI strings:  \n  \n-   Raw URI  \n  \n-   Converted URI  \n  \n The raw URI is the <xref:System.Uri?displayProperty=fullName> provided in the request line of a HTTP request:  \n  \n `GET /path/`  \n  \n `Host: www.contoso.com`  \n  \n The raw URI provided by `http.sys` for the request mentioned above, is \"/path/\". This represents the string following the HTTP verb as it was sent over the network.  \n  \n The `http.sys` service creates a converted URI from the information provided in the request by using the URI provided in the HTTP request line and the Host header to determine the origin server the request should be forwarded to. This is done by comparing the information from the request with a set of registered URI prefixes. The HTTP Server SDK documentation refers to this converted URI as the [HTTP_COOKED_URL](http://go.microsoft.com/fwlink/?LinkID=166108) structure.  \n  \n In order to be able to compare the request with registered URI prefixes, some normalization to the request needs to be done. For the sample above the converted URI would be as follows:  \n  \n `http://www.contoso.com/path/`  \n  \n The `http.sys` service combines the <xref:System.Uri.Host%2A?displayProperty=fullName> property value and the string in the request line to create a converted URI. In addition, `http.sys` and the <xref:System.Uri?displayProperty=fullName> class also do the following:  \n  \n-   Un-escapes all percent encoded values.  \n  \n-   Converts percent-encoded non-ASCII characters into a UTF-16 character representation. Note that UTF-8 and ANSI/DBCS characters are supported as well as Unicode characters (Unicode encoding using the %uXXXX format).  \n  \n-   Executes other normalization steps, like path compression.  \n  \n Since the request doesn't contain any information about the encoding used for percent-encoded values, it may not be possible to determine the correct encoding just by parsing the percent-encoded values.  \n  \n Therefore `http.sys` provides two registry keys for modifying the process:  \n  \n|Registry Key|Default Value|Description|  \n|------------------|-------------------|-----------------|  \n|EnableNonUTF8|1|If zero, `http.sys` accepts only UTF-8-encoded URLs.<br /><br /> If non-zero, `http.sys` also accepts ANSI-encoded or DBCS-encoded URLs in requests.|  \n|FavorUTF8|1|If non-zero, `http.sys` always tries to decode a URL as UTF-8 first; if that conversion fails and EnableNonUTF8 is non-zero, Http.sys then tries to decode it as ANSI or DBCS.<br /><br /> If zero (and EnableNonUTF8 is non-zero), `http.sys` tries to decode it as ANSI or DBCS; if that is not successful, it tries a UTF-8 conversion.|  \n  \n When <xref:System.Net.HttpListener> receives a request, it uses the converted URI from `http.sys` as input to the <xref:System.Net.HttpListenerRequest.Url%2A> property.  \n  \n There is a need for supporting characters besides characters and numbers in URIs. An example is the following URI, which is used to retrieve customer information for customer number \"1/3812\":  \n  \n `http://www.contoso.com/Customer('1%2F3812')/`  \n  \n Note the percent-encoded slash in the Uri (%2F). This is necessary, since in this case the slash character represents data and not a path delimiter.  \n  \n Passing the string to Uri constructor will lead to the following URI:  \n  \n `http://www.contoso.com/Customer('1/3812')/`  \n  \n Splitting the path into its segments would result in the following elements:  \n  \n `Customer('1`  \n  \n `3812')`  \n  \n This is not the intent of the sender of the request.  \n  \n If the <xref:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl%2A> property is set to false, then when the <xref:System.Net.HttpListener> receives a request, it uses the raw URI instead of the converted URI from `http.sys` as input to the <xref:System.Net.HttpListenerRequest.Url%2A> property."
  syntax:
    content: 'public sealed class HttpListenerElement : System.Configuration.ConfigurationElement'
  inheritance:
  - System.Object
  - System.Configuration.ConfigurationElement
  implements: []
  inheritedMembers:
  - System.Configuration.ConfigurationElement.CurrentConfiguration
  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)
  - System.Configuration.ConfigurationElement.ElementInformation
  - System.Configuration.ConfigurationElement.ElementProperty
  - System.Configuration.ConfigurationElement.Equals(System.Object)
  - System.Configuration.ConfigurationElement.EvaluationContext
  - System.Configuration.ConfigurationElement.GetHashCode
  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)
  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)
  - System.Configuration.ConfigurationElement.HasContext
  - System.Configuration.ConfigurationElement.Init
  - System.Configuration.ConfigurationElement.InitializeDefault
  - System.Configuration.ConfigurationElement.IsModified
  - System.Configuration.ConfigurationElement.IsReadOnly
  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)
  - System.Configuration.ConfigurationElement.Item(System.String)
  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)
  - System.Configuration.ConfigurationElement.LockAllAttributesExcept
  - System.Configuration.ConfigurationElement.LockAllElementsExcept
  - System.Configuration.ConfigurationElement.LockAttributes
  - System.Configuration.ConfigurationElement.LockElements
  - System.Configuration.ConfigurationElement.LockItem
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)
  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)
  - System.Configuration.ConfigurationElement.PostDeserialize
  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)
  - System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)
  - System.Configuration.ConfigurationElement.ResetModified
  - System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)
  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)
  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)
  - System.Configuration.ConfigurationElement.SetReadOnly
  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
  platform:
  - net462
- uid: System.Net.Configuration.HttpListenerElement.#ctor
  id: '#ctor'
  parent: System.Net.Configuration.HttpListenerElement
  langs:
  - csharp
  name: HttpListenerElement()
  nameWithType: HttpListenerElement.HttpListenerElement()
  fullName: System.Net.Configuration.HttpListenerElement.HttpListenerElement()
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Configuration
  summary: "初始化的新執行個體<xref href=&quot;System.Net.Configuration.HttpListenerElement&quot;></xref>類別。"
  syntax:
    content: public HttpListenerElement ();
    parameters: []
  overload: System.Net.Configuration.HttpListenerElement.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Configuration.HttpListenerElement.Properties
  id: Properties
  parent: System.Net.Configuration.HttpListenerElement
  langs:
  - csharp
  name: Properties
  nameWithType: HttpListenerElement.Properties
  fullName: System.Net.Configuration.HttpListenerElement.Properties
  type: Property
  assemblies:
  - System
  namespace: System.Net.Configuration
  syntax:
    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }
    return:
      type: System.Configuration.ConfigurationPropertyCollection
      description: "即將加入。"
  overload: System.Net.Configuration.HttpListenerElement.Properties*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Configuration.HttpListenerElement.Timeouts
  id: Timeouts
  parent: System.Net.Configuration.HttpListenerElement
  langs:
  - csharp
  name: Timeouts
  nameWithType: HttpListenerElement.Timeouts
  fullName: System.Net.Configuration.HttpListenerElement.Timeouts
  type: Property
  assemblies:
  - System
  namespace: System.Net.Configuration
  summary: "取得預設逾時所使用的項目<xref href=&quot;System.Net.HttpListener&quot;></xref>物件。"
  syntax:
    content: public System.Net.Configuration.HttpListenerTimeoutsElement Timeouts { get; }
    return:
      type: System.Net.Configuration.HttpListenerTimeoutsElement
      description: "Returns <xref href=&quot;System.Net.Configuration.HttpListenerTimeoutsElement&quot;></xref>.       Timeout 元素用於<xref href=&quot;System.Net.HttpListener&quot;></xref>物件。"
  overload: System.Net.Configuration.HttpListenerElement.Timeouts*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl
  id: UnescapeRequestUrl
  parent: System.Net.Configuration.HttpListenerElement
  langs:
  - csharp
  name: UnescapeRequestUrl
  nameWithType: HttpListenerElement.UnescapeRequestUrl
  fullName: System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl
  type: Property
  assemblies:
  - System
  namespace: System.Net.Configuration
  summary: "取得值，指出如果<xref href=&quot;System.Net.HttpListener&quot;></xref>使用原始的未逸出的 URI，而不是轉換後的 URI。"
  remarks: "UnescapeRequestUrl 屬性指出如果<xref:System.Net.HttpListener>而不是轉換後的 URI 轉換百分比編碼的任何值，會採取其他的正規化步驟會使用原始的未逸出的 URI。</xref:System.Net.HttpListener>       當<xref:System.Net.HttpListener>執行個體收到要求時透過`http.sys`服務，它會建立所提供的 URI 字串的執行個體`http.sys`，並公開其為<xref:System.Net.HttpListenerRequest.Url%2A?displayProperty=fullName>屬性。</xref:System.Net.HttpListenerRequest.Url%2A?displayProperty=fullName> </xref:System.Net.HttpListener>       `http.sys`服務會公開兩個要求 URI 字串:-原始 URI-轉換 URI 的未經處理的 URI 是<xref:System.Uri?displayProperty=fullName>提供 HTTP 要求的要求行中︰ `GET /path/` `Host: www.contoso.com`所提供的原始 URI`http.sys`上面所提的要求是&quot;/ 路徑 /&quot;。       </xref:System.Uri?displayProperty=fullName> 這表示它已透過網路傳送接下來的 HTTP 動詞命令的字串。       `http.sys`服務會使用 HTTP 要求行中所提供的 URI，在要求中所提供的資訊來建立已轉換的 URI 和主機標頭，以判斷原始伺服器的要求應該會轉送到。 這是藉由比較一組已註冊的 URI 前置詞的要求中的資訊。 HTTP 伺服器 SDK 文件是指做為此轉換 URI [HTTP_COOKED_URL](http://go.microsoft.com/fwlink/?LinkID=166108)結構。       為了要比較的要求已註冊的 URI 前置詞，需要執行某些要求的正規化。 針對上述轉換 URI 範例應如下︰ `http://www.contoso.com/path/` `http.sys`服務結合<xref:System.Uri.Host%2A?displayProperty=fullName>屬性值，並要求條線建立轉換的 URI 中的字串。</xref:System.Uri.Host%2A?displayProperty=fullName> 此外，`http.sys`和<xref:System.Uri?displayProperty=fullName>類別也會執行下列動作:-取消逸出所有百分比編碼值。</xref:System.Uri?displayProperty=fullName>      -將百分比編碼非 ASCII 字元轉換成 utf-16 字元表示法。 請注意，utf-8 與 ANSI/DBCS 字元支援以及 Unicode 字元 （Unicode 編碼使用 %uxxxx 格式）。      -執行其他的正規化步驟，例如路徑壓縮。       要求不包含任何百分比編碼值使用的編碼方式相關資訊，因為它可能無法判斷正確的編碼方式只是藉由剖析的百分比編碼值。       因此`http.sys`提供兩個登錄機碼修改程序: |登錄機碼 |預設值 |描述 |  |------------------|-------------------|-----------------|  |EnableNonUTF8 |&1; |如果是零，`http.sys`接受只有 UTF&8; 編碼的 Url。<br /><br /> 如果不是零，`http.sys`也接受 ANSI 編碼或 DBCS 編碼在要求中的 Url。 |  |FavorUTF8 |&1; |如果不是零，`http.sys`一律會嘗試解碼 URL 為 utf-8 第一次。 如果該轉換失敗，而且 EnableNonUTF8 為非零，Http.sys，然後嘗試將它解碼為 ANSI 或依 DBCS。<br /><br /> 如果是零 （和 EnableNonUTF8 為非零），`http.sys`嘗試將它解碼為 ANSI 或依 DBCS; 如果不成功，它會嘗試 utf-8 轉換。 |      當<xref:System.Net.HttpListener>收到要求時，它會使用轉換的 URI 從`http.sys`來作為輸入<xref:System.Net.HttpListenerRequest.Url%2A>屬性。</xref:System.Net.HttpListenerRequest.Url%2A> </xref:System.Net.HttpListener>       沒有需要支援在 Uri 中的字元和數字以外的字元。 範例是下列的 URI 用來擷取客戶的客戶資訊數字&quot;1/3812&quot;:`http://www.contoso.com/Customer(&quot;1%2F3812&quot;)/`注意百分比編碼中的斜線的 Uri (%2f)。 必須這樣做，因為在此情況下的斜線字元表示的資料，不是路徑分隔符號。       將字串傳遞至 Uri 建構函式會導致下列 URI:`http://www.contoso.com/Customer(&quot;1/3812&quot;)/`拆解及其區段的路徑將會產生下列項目︰ `Customer(&quot;1` `3812&quot;)`這不是寄件者要求的意圖。              如果 UnescapeRequestUrl 屬性設定為 false，則當<xref:System.Net.HttpListener>收到要求時，它會使用原始 URI，而不是從轉換過的 URI`http.sys`來作為輸入<xref:System.Net.HttpListenerRequest.Url%2A>屬性。</xref:System.Net.HttpListenerRequest.Url%2A> </xref:System.Net.HttpListener>"
  syntax:
    content: public bool UnescapeRequestUrl { get; }
    return:
      type: System.Boolean
      description: "布林值，指出如果<xref href=&quot;System.Net.HttpListener&quot;></xref>使用原始的未逸出的 URI，而不是轉換後的 URI。"
  overload: System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.ConfigurationElement
  isExternal: false
  name: System.Configuration.ConfigurationElement
- uid: System.Net.Configuration.HttpListenerElement.#ctor
  parent: System.Net.Configuration.HttpListenerElement
  isExternal: false
  name: HttpListenerElement()
  nameWithType: HttpListenerElement.HttpListenerElement()
  fullName: System.Net.Configuration.HttpListenerElement.HttpListenerElement()
- uid: System.Net.Configuration.HttpListenerElement.Properties
  parent: System.Net.Configuration.HttpListenerElement
  isExternal: false
  name: Properties
  nameWithType: HttpListenerElement.Properties
  fullName: System.Net.Configuration.HttpListenerElement.Properties
- uid: System.Configuration.ConfigurationPropertyCollection
  parent: System.Configuration
  isExternal: false
  name: ConfigurationPropertyCollection
  nameWithType: ConfigurationPropertyCollection
  fullName: System.Configuration.ConfigurationPropertyCollection
- uid: System.Net.Configuration.HttpListenerElement.Timeouts
  parent: System.Net.Configuration.HttpListenerElement
  isExternal: false
  name: Timeouts
  nameWithType: HttpListenerElement.Timeouts
  fullName: System.Net.Configuration.HttpListenerElement.Timeouts
- uid: System.Net.Configuration.HttpListenerTimeoutsElement
  parent: System.Net.Configuration
  isExternal: false
  name: HttpListenerTimeoutsElement
  nameWithType: HttpListenerTimeoutsElement
  fullName: System.Net.Configuration.HttpListenerTimeoutsElement
- uid: System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl
  parent: System.Net.Configuration.HttpListenerElement
  isExternal: false
  name: UnescapeRequestUrl
  nameWithType: HttpListenerElement.UnescapeRequestUrl
  fullName: System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.Configuration.HttpListenerElement.#ctor*
  parent: System.Net.Configuration.HttpListenerElement
  isExternal: false
  name: HttpListenerElement
  nameWithType: HttpListenerElement.HttpListenerElement
- uid: System.Net.Configuration.HttpListenerElement.Properties*
  parent: System.Net.Configuration.HttpListenerElement
  isExternal: false
  name: Properties
  nameWithType: HttpListenerElement.Properties
- uid: System.Net.Configuration.HttpListenerElement.Timeouts*
  parent: System.Net.Configuration.HttpListenerElement
  isExternal: false
  name: Timeouts
  nameWithType: HttpListenerElement.Timeouts
- uid: System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl*
  parent: System.Net.Configuration.HttpListenerElement
  isExternal: false
  name: UnescapeRequestUrl
  nameWithType: HttpListenerElement.UnescapeRequestUrl
