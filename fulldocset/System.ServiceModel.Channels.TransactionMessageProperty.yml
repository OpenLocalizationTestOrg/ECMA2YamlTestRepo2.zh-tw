### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Channels.TransactionMessageProperty
  id: TransactionMessageProperty
  children:
  - System.ServiceModel.Channels.TransactionMessageProperty.Set(System.Transactions.Transaction,System.ServiceModel.Channels.Message)
  - System.ServiceModel.Channels.TransactionMessageProperty.Transaction
  langs:
  - csharp
  name: TransactionMessageProperty
  nameWithType: TransactionMessageProperty
  fullName: System.ServiceModel.Channels.TransactionMessageProperty
  type: Class
  summary: "允許的自訂通道使用專屬異動流程機制，將它的交易插入[!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]架構。 這個類別無法被繼承。"
  remarks: "這個類別可讓協力廠商通道開發人員使用專屬異動流程機制，針對其通道，引入 ServiceModel 架構將他們的交易。 執行服務方法時，會再使用的交易。 這個機制無法用於搭配<xref:System.ServiceModel.TransactionFlowAttribute>.</xref:System.ServiceModel.TransactionFlowAttribute>"
  syntax:
    content: public sealed class TransactionMessageProperty
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.TransactionMessageProperty.Set(System.Transactions.Transaction,System.ServiceModel.Channels.Message)
  id: Set(System.Transactions.Transaction,System.ServiceModel.Channels.Message)
  parent: System.ServiceModel.Channels.TransactionMessageProperty
  langs:
  - csharp
  name: Set(Transaction,Message)
  nameWithType: TransactionMessageProperty.Set(Transaction,Message)
  fullName: System.ServiceModel.Channels.TransactionMessageProperty.Set(Transaction,Message)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "設定執行此服務方法時所使用的交易。"
  remarks: "自訂傳入通道 （這是服務的通道堆疊的一部分） 可以呼叫這個方法可加入<xref:System.ServiceModel.Channels.TransactionMessageProperty>、 包含`transaction`參數至`Properties`集合`message`參數。</xref:System.ServiceModel.Channels.TransactionMessageProperty> 這會提示基礎結構來建立<xref:System.Transactions.TransactionScope>執行個體使用傳入，然後再呼叫傳入訊息中所要求的服務方法的交易。</xref:System.Transactions.TransactionScope> 此服務方法必須有<xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A>屬性設定為`true`。</xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A>"
  syntax:
    content: public static void Set (System.Transactions.Transaction transaction, System.ServiceModel.Channels.Message message);
    parameters:
    - id: transaction
      type: System.Transactions.Transaction
      description: "執行此服務方法時所使用的交易。"
    - id: message
      type: System.ServiceModel.Channels.Message
      description: "呼叫服務方法會導致傳入的訊息。"
  overload: System.ServiceModel.Channels.TransactionMessageProperty.Set*
  exceptions:
  - type: System.ServiceModel.FaultException
    commentId: T:System.ServiceModel.FaultException
    description: "上的屬性已經設定<code> message </code>。"
  - type: System.Transactions.TransactionException
    commentId: T:System.Transactions.TransactionException
    description: "<code>transaction</code>需要解封送處理，而且該作業失敗。"
  platform:
  - net462
- uid: System.ServiceModel.Channels.TransactionMessageProperty.Transaction
  id: Transaction
  parent: System.ServiceModel.Channels.TransactionMessageProperty
  langs:
  - csharp
  name: Transaction
  nameWithType: TransactionMessageProperty.Transaction
  fullName: System.ServiceModel.Channels.TransactionMessageProperty.Transaction
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "取得將用於執行服務方法時的交易。"
  syntax:
    content: public System.Transactions.Transaction Transaction { get; }
    return:
      type: System.Transactions.Transaction
      description: "A <xref href=&quot;System.Transactions.Transaction&quot;> </xref>執行此服務方法時所使用的執行個體。"
  overload: System.ServiceModel.Channels.TransactionMessageProperty.Transaction*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ServiceModel.FaultException
  isExternal: true
  name: System.ServiceModel.FaultException
- uid: System.Transactions.TransactionException
  parent: System.Transactions
  isExternal: false
  name: TransactionException
  nameWithType: TransactionException
  fullName: System.Transactions.TransactionException
- uid: System.ServiceModel.Channels.TransactionMessageProperty.Set(System.Transactions.Transaction,System.ServiceModel.Channels.Message)
  parent: System.ServiceModel.Channels.TransactionMessageProperty
  isExternal: false
  name: Set(Transaction,Message)
  nameWithType: TransactionMessageProperty.Set(Transaction,Message)
  fullName: System.ServiceModel.Channels.TransactionMessageProperty.Set(Transaction,Message)
- uid: System.Transactions.Transaction
  parent: System.Transactions
  isExternal: false
  name: Transaction
  nameWithType: Transaction
  fullName: System.Transactions.Transaction
- uid: System.ServiceModel.Channels.Message
  parent: System.ServiceModel.Channels
  isExternal: true
  name: Message
  nameWithType: Message
  fullName: System.ServiceModel.Channels.Message
- uid: System.ServiceModel.Channels.TransactionMessageProperty.Transaction
  parent: System.ServiceModel.Channels.TransactionMessageProperty
  isExternal: false
  name: Transaction
  nameWithType: TransactionMessageProperty.Transaction
  fullName: System.ServiceModel.Channels.TransactionMessageProperty.Transaction
- uid: System.ServiceModel.Channels.TransactionMessageProperty.Set*
  parent: System.ServiceModel.Channels.TransactionMessageProperty
  isExternal: false
  name: Set
  nameWithType: TransactionMessageProperty.Set
- uid: System.ServiceModel.Channels.TransactionMessageProperty.Transaction*
  parent: System.ServiceModel.Channels.TransactionMessageProperty
  isExternal: false
  name: Transaction
  nameWithType: TransactionMessageProperty.Transaction
