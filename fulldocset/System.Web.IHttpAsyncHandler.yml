### YamlMime:ManagedReference
items:
- uid: System.Web.IHttpAsyncHandler
  id: IHttpAsyncHandler
  children:
  - System.Web.IHttpAsyncHandler.BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)
  - System.Web.IHttpAsyncHandler.EndProcessRequest(System.IAsyncResult)
  langs:
  - csharp
  name: IHttpAsyncHandler
  nameWithType: IHttpAsyncHandler
  fullName: System.Web.IHttpAsyncHandler
  type: Interface
  summary: "定義 HTTP 非同步處理常式物件必須實作的合約。"
  remarks: "IHttpAsyncHandler 類別可以關聯檔案的副檔名或特定 URL 的組態檔中`httpHandlers`組態區段。 ASP.NET 基礎結構接著具現化，並收到對應的要求時呼叫的處理常式。 或者，.ashx 檔案和.ashx 檔案處理常式將會執行收到對應的要求時，可以定義處理常式。"
  syntax:
    content: 'public interface IHttpAsyncHandler : System.Web.IHttpHandler'
  implements:
  - System.Web.IHttpHandler
  platform:
  - net462
- uid: System.Web.IHttpAsyncHandler.BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)
  id: BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)
  parent: System.Web.IHttpAsyncHandler
  langs:
  - csharp
  name: BeginProcessRequest(HttpContext,AsyncCallback,Object)
  nameWithType: IHttpAsyncHandler.BeginProcessRequest(HttpContext,AsyncCallback,Object)
  fullName: System.Web.IHttpAsyncHandler.BeginProcessRequest(HttpContext,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "起始非同步呼叫的 HTTP 處理常式。"
  syntax:
    content: public IAsyncResult BeginProcessRequest (System.Web.HttpContext context, AsyncCallback cb, object extraData);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "<xref href=&quot;System.Web.HttpContext&quot;> </xref>提供內建伺服器物件的參考的物件 (例如， <xref uid=&quot;langword_csharp_Request&quot; name=&quot;Request&quot; href=&quot;&quot;> </xref>， <xref uid=&quot;langword_csharp_Response&quot; name=&quot;Response&quot; href=&quot;&quot;> </xref>， <xref uid=&quot;langword_csharp_Session&quot; name=&quot;Session&quot; href=&quot;&quot;> </xref>，和<xref uid=&quot;langword_csharp_Server&quot; name=&quot;Server&quot; href=&quot;&quot;> </xref>) 用來服務 HTTP 要求。"
    - id: cb
      type: System.AsyncCallback
      description: "<xref:System.AsyncCallback>呼叫非同步方法呼叫完成時。</xref:System.AsyncCallback> 如果`cb`是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>，不會呼叫的委派。"
    - id: extraData
      type: System.Object
      description: "處理要求時所需的任何額外的資料。"
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>，其中包含狀態資訊的程序。</xref:System.IAsyncResult>"
  overload: System.Web.IHttpAsyncHandler.BeginProcessRequest*
  exceptions: []
  platform:
  - net462
- uid: System.Web.IHttpAsyncHandler.EndProcessRequest(System.IAsyncResult)
  id: EndProcessRequest(System.IAsyncResult)
  parent: System.Web.IHttpAsyncHandler
  langs:
  - csharp
  name: EndProcessRequest(IAsyncResult)
  nameWithType: IHttpAsyncHandler.EndProcessRequest(IAsyncResult)
  fullName: System.Web.IHttpAsyncHandler.EndProcessRequest(IAsyncResult)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "當處理程序結束時，請提供非同步處理結束方法。"
  remarks: "您可以使用 EndProcessRequest 發出非同步程序期間攔截到任何例外狀況。"
  syntax:
    content: public void EndProcessRequest (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>，其中包含狀態資訊的程序。</xref:System.IAsyncResult>"
  overload: System.Web.IHttpAsyncHandler.EndProcessRequest*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.IHttpAsyncHandler.BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)
  parent: System.Web.IHttpAsyncHandler
  isExternal: false
  name: BeginProcessRequest(HttpContext,AsyncCallback,Object)
  nameWithType: IHttpAsyncHandler.BeginProcessRequest(HttpContext,AsyncCallback,Object)
  fullName: System.Web.IHttpAsyncHandler.BeginProcessRequest(HttpContext,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.IHttpAsyncHandler.EndProcessRequest(System.IAsyncResult)
  parent: System.Web.IHttpAsyncHandler
  isExternal: false
  name: EndProcessRequest(IAsyncResult)
  nameWithType: IHttpAsyncHandler.EndProcessRequest(IAsyncResult)
  fullName: System.Web.IHttpAsyncHandler.EndProcessRequest(IAsyncResult)
- uid: System.Web.IHttpAsyncHandler.BeginProcessRequest*
  parent: System.Web.IHttpAsyncHandler
  isExternal: false
  name: BeginProcessRequest
  nameWithType: IHttpAsyncHandler.BeginProcessRequest
- uid: System.Web.IHttpAsyncHandler.EndProcessRequest*
  parent: System.Web.IHttpAsyncHandler
  isExternal: false
  name: EndProcessRequest
  nameWithType: IHttpAsyncHandler.EndProcessRequest
