### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.Expressions.RangeExpression
  id: RangeExpression
  children:
  - System.Web.UI.WebControls.Expressions.RangeExpression.#ctor
  - System.Web.UI.WebControls.Expressions.RangeExpression.DataField
  - System.Web.UI.WebControls.Expressions.RangeExpression.GetQueryable(System.Linq.IQueryable)
  - System.Web.UI.WebControls.Expressions.RangeExpression.MaxType
  - System.Web.UI.WebControls.Expressions.RangeExpression.MinType
  langs:
  - csharp
  name: RangeExpression
  nameWithType: RangeExpression
  fullName: System.Web.UI.WebControls.Expressions.RangeExpression
  type: Class
  summary: "提供一個方式來判斷值為大於或小於指定的值，還是值是否介於兩個指定的值。"
  remarks: "<xref:System.Web.UI.WebControls.QueryExtender>控制使用中的類別可讓您在網頁中的篩選資料<xref:System.Web.UI.WebControls.Expressions>命名空間。</xref:System.Web.UI.WebControls.Expressions> </xref:System.Web.UI.WebControls.QueryExtender> 這些類別包括 RangeExpression 類別。       RangeExpression 類別搜尋資料行使用一組定義範圍的值。 您使用<xref:System.Web.UI.WebControls.Expressions.RangeExpression.DataField%2A>屬性來指定要搜尋的資料行。</xref:System.Web.UI.WebControls.Expressions.RangeExpression.DataField%2A> 您使用<xref:System.Web.UI.WebControls.Expressions.RangeExpression.MinType%2A>屬性來指定是否要包含或排除在搜尋中的最小的結果，而且您使用<xref:System.Web.UI.WebControls.Expressions.RangeExpression.MaxType%2A>屬性來指定是否要包含或排除的最大值。</xref:System.Web.UI.WebControls.Expressions.RangeExpression.MaxType%2A> </xref:System.Web.UI.WebControls.Expressions.RangeExpression.MinType%2A> 最大和最小的值可以指定[!INCLUDE[vstecasp](~/add/includes/vstecasp-md.md)]控制項，而其值可以接著傳遞給<xref:System.Web.UI.WebControls.QueryExtender>控制項中的參數為<xref:System.Web.UI.WebControls.ControlParameter>控制項。</xref:System.Web.UI.WebControls.ControlParameter> </xref:System.Web.UI.WebControls.QueryExtender> 結果通常會在資料繫結控制項中顯示。"
  example:
  - "The following example shows how to search the ListPrice column in the Products table of the AdventureWorks database for products that have a list price in the range that is specified in the `FromTextBox` and `ToTextBox` text boxes. The filter includes the minimum value but excludes the maximum value in the results. The results are displayed in a <xref:System.Web.UI.WebControls.Label> control.  \n  \n This code example is part of a larger example provided in [Walkthrough: Filtering Data in a Web Page Using Declarative Syntax](http://msdn.microsoft.com/en-us/b305ae31-1a1b-4d07-a678-51457c17614f).  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: 'public class RangeExpression : System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression'
  inheritance:
  - System.Object
  - System.Web.UI.WebControls.Expressions.DataSourceExpression
  - System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression
  implements: []
  inheritedMembers:
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.Context
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.DataSource
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.IsTrackingViewState
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.Owner
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.SetDirty
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.System#Web#UI#IStateManager#TrackViewState
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.ViewState
  - System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression.LoadViewState(System.Object)
  - System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression.Parameters
  - System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression.SaveViewState
  - System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression.SetContext(System.Web.UI.Control,System.Web.HttpContext,System.Web.UI.WebControls.IQueryableDataSource)
  - System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression.TrackViewState
  platform:
  - net462
- uid: System.Web.UI.WebControls.Expressions.RangeExpression.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.Expressions.RangeExpression
  langs:
  - csharp
  name: RangeExpression()
  nameWithType: RangeExpression.RangeExpression()
  fullName: System.Web.UI.WebControls.Expressions.RangeExpression.RangeExpression()
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls.Expressions
  summary: "初始化的新執行個體<xref href=&quot;System.Web.UI.WebControls.Expressions.RangeExpression&quot;></xref>類別。"
  syntax:
    content: public RangeExpression ();
    parameters: []
  overload: System.Web.UI.WebControls.Expressions.RangeExpression.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Expressions.RangeExpression.DataField
  id: DataField
  parent: System.Web.UI.WebControls.Expressions.RangeExpression
  langs:
  - csharp
  name: DataField
  nameWithType: RangeExpression.DataField
  fullName: System.Web.UI.WebControls.Expressions.RangeExpression.DataField
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls.Expressions
  summary: "取得或設定要用於比較欄位。"
  remarks: "範圍運算式搜尋在指定範圍的資料欄位。"
  example:
  - "The following example shows how to search the List Price column in the Products table of the AdventureWorks database for products that have a list price in the range that is specified in the `FromTextBox` and `ToTextBox` text boxes.  \n  \n This code example is part of a larger example provided in [Walkthrough: Filtering Data in a Web Page Using Declarative Syntax](http://msdn.microsoft.com/en-us/b305ae31-1a1b-4d07-a678-51457c17614f).  \n  \n```  \n<asp:RangeExpression DataField=\"ListPrice\"    \n    MinType=\"Inclusive\" MaxType=\"Exclusive\">  \n  <asp:ControlParameter ControlID=\"FromTextBox\" />  \n  <asp:ControlParameter ControlID=\"ToTextBox\" />  \n</asp:RangeExpression>  \n```"
  syntax:
    content: public string DataField { get; set; }
    return:
      type: System.String
      description: "要用於比較的欄位。"
  overload: System.Web.UI.WebControls.Expressions.RangeExpression.DataField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Expressions.RangeExpression.GetQueryable(System.Linq.IQueryable)
  id: GetQueryable(System.Linq.IQueryable)
  parent: System.Web.UI.WebControls.Expressions.RangeExpression
  langs:
  - csharp
  name: GetQueryable(IQueryable)
  nameWithType: RangeExpression.GetQueryable(IQueryable)
  fullName: System.Web.UI.WebControls.Expressions.RangeExpression.GetQueryable(IQueryable)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls.Expressions
  summary: "取得<xref:System.Linq.IQueryable>上所執行的範圍比較的物件。</xref:System.Linq.IQueryable>"
  remarks: "這個方法會使用指定<xref:System.Linq.IQueryable>物件以解析此運算式。</xref:System.Linq.IQueryable>"
  syntax:
    content: public override System.Linq.IQueryable GetQueryable (System.Linq.IQueryable source);
    parameters:
    - id: source
      type: System.Linq.IQueryable
      description: "要用於比較的物件。"
    return:
      type: System.Linq.IQueryable
      description: "執行個體<xref:System.Linq.IQueryable>運算式已套用到的物件。</xref:System.Linq.IQueryable>"
  overload: System.Web.UI.WebControls.Expressions.RangeExpression.GetQueryable*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <>*> property is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.      -或- <> </> *> 和<> *> 屬性會設為<xref href=&quot;System.Web.UI.WebControls.Expressions.RangeType&quot;> </xref>。      -或- <> </> *> 或<xref:System.Web.UI.WebControls.Expressions.RangeExpression.MaxType*>屬性未設定為<xref href=&quot;System.Web.UI.WebControls.Expressions.RangeType&quot;></xref>和參數集合是空的。</xref:System.Web.UI.WebControls.Expressions.RangeExpression.MaxType*>"
  platform:
  - net462
- uid: System.Web.UI.WebControls.Expressions.RangeExpression.MaxType
  id: MaxType
  parent: System.Web.UI.WebControls.Expressions.RangeExpression
  langs:
  - csharp
  name: MaxType
  nameWithType: RangeExpression.MaxType
  fullName: System.Web.UI.WebControls.Expressions.RangeExpression.MaxType
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls.Expressions
  summary: "取得或設定範圍的最大值。"
  remarks: "這個屬性的可能值為<xref:System.Web.UI.WebControls.Expressions.RangeType>， <xref:System.Web.UI.WebControls.Expressions.RangeType>，和<xref:System.Web.UI.WebControls.Expressions.RangeType>。</xref:System.Web.UI.WebControls.Expressions.RangeType> </xref:System.Web.UI.WebControls.Expressions.RangeType> </xref:System.Web.UI.WebControls.Expressions.RangeType>       當 MaxType 設<xref:System.Web.UI.WebControls.Expressions.RangeType>，範圍的最大值包含在搜尋結果。</xref:System.Web.UI.WebControls.Expressions.RangeType> 這相當於執行 > = 作業。 如果您將屬性設定為<xref:System.Web.UI.WebControls.Expressions.RangeType> 欄位中，它相當於指定 > 或< operation.></ operation.></xref:System.Web.UI.WebControls.Expressions.RangeType> 如果您將屬性設定為<xref:System.Web.UI.WebControls.Expressions.RangeType>，則沒有限制的範圍。</xref:System.Web.UI.WebControls.Expressions.RangeType>"
  example:
  - "The following example shows how to include the minimum value that is specified in the range and how to exclude the maximum value. The maximum and minimum values are entered into text boxes. This code example is part of a larger example provided in [Walkthrough: Filtering Data in a Web Page Using Declarative Syntax](http://msdn.microsoft.com/en-us/b305ae31-1a1b-4d07-a678-51457c17614f).  \n  \n```  \n<asp:RangeExpression DataField=\"ListPrice\"    \n    MinType=\"Inclusive\" MaxType=\"Exclusive\">  \n  <asp:ControlParameter ControlID=\"FromTextBox\" />  \n  <asp:ControlParameter ControlID=\"ToTextBox\" />  \n</asp:RangeExpression>  \n```"
  syntax:
    content: public System.Web.UI.WebControls.Expressions.RangeType MaxType { get; set; }
    return:
      type: System.Web.UI.WebControls.Expressions.RangeType
      description: "要使用的最大值的比較類型。 預設值是<xref href=&quot;System.Web.UI.WebControls.Expressions.RangeType&quot;> </xref>，這表示，最大值的比較不會執行。"
  overload: System.Web.UI.WebControls.Expressions.RangeExpression.MaxType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Expressions.RangeExpression.MinType
  id: MinType
  parent: System.Web.UI.WebControls.Expressions.RangeExpression
  langs:
  - csharp
  name: MinType
  nameWithType: RangeExpression.MinType
  fullName: System.Web.UI.WebControls.Expressions.RangeExpression.MinType
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls.Expressions
  summary: "取得或設定範圍的最小值。"
  remarks: "Possible values for this property are <xref:System.Web.UI.WebControls.Expressions.RangeType>, <xref:System.Web.UI.WebControls.Expressions.RangeType>, and <xref:System.Web.UI.WebControls.Expressions.RangeType>.  \n  \n When the MinType or <xref:System.Web.UI.WebControls.Expressions.RangeExpression.MaxType%2A> property is set to <xref:System.Web.UI.WebControls.Expressions.RangeType>, the minimum and maximum value of the range is included in the search results. This is equivalent to performing a >= or \\<= operation. The <xref:System.Web.UI.WebControls.Expressions.RangeType> field is equivalent to the > or < operation and <xref:System.Web.UI.WebControls.Expressions.RangeType> imposes no limit on the range."
  example:
  - "The following example shows how to include the minimum value that is specified in the range and how to exclude the maximum value. The maximum and minimum values are entered into text boxes. This code example is part of a larger example provided in [Walkthrough: Filtering Data in a Web Page Using Declarative Syntax](http://msdn.microsoft.com/en-us/b305ae31-1a1b-4d07-a678-51457c17614f).  \n  \n```  \n<asp:RangeExpression DataField=\"ListPrice\"    \n    MinType=\"Inclusive\" MaxType=\"Exclusive\">  \n  <asp:ControlParameter ControlID=\"FromTextBox\" />  \n  <asp:ControlParameter ControlID=\"ToTextBox\" />  \n</asp:RangeExpression>  \n```"
  syntax:
    content: public System.Web.UI.WebControls.Expressions.RangeType MinType { get; set; }
    return:
      type: System.Web.UI.WebControls.Expressions.RangeType
      description: "要使用的最小值的比較類型。 預設值是<xref href=&quot;System.Web.UI.WebControls.Expressions.RangeType&quot;> </xref>，這表示，最小值的比較不會執行。"
  overload: System.Web.UI.WebControls.Expressions.RangeExpression.MinType*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression
  isExternal: false
  name: System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Web.UI.WebControls.Expressions.RangeExpression.#ctor
  parent: System.Web.UI.WebControls.Expressions.RangeExpression
  isExternal: false
  name: RangeExpression()
  nameWithType: RangeExpression.RangeExpression()
  fullName: System.Web.UI.WebControls.Expressions.RangeExpression.RangeExpression()
- uid: System.Web.UI.WebControls.Expressions.RangeExpression.DataField
  parent: System.Web.UI.WebControls.Expressions.RangeExpression
  isExternal: false
  name: DataField
  nameWithType: RangeExpression.DataField
  fullName: System.Web.UI.WebControls.Expressions.RangeExpression.DataField
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.Expressions.RangeExpression.GetQueryable(System.Linq.IQueryable)
  parent: System.Web.UI.WebControls.Expressions.RangeExpression
  isExternal: false
  name: GetQueryable(IQueryable)
  nameWithType: RangeExpression.GetQueryable(IQueryable)
  fullName: System.Web.UI.WebControls.Expressions.RangeExpression.GetQueryable(IQueryable)
- uid: System.Linq.IQueryable
  parent: System.Linq
  isExternal: true
  name: IQueryable
  nameWithType: IQueryable
  fullName: System.Linq.IQueryable
- uid: System.Web.UI.WebControls.Expressions.RangeExpression.MaxType
  parent: System.Web.UI.WebControls.Expressions.RangeExpression
  isExternal: false
  name: MaxType
  nameWithType: RangeExpression.MaxType
  fullName: System.Web.UI.WebControls.Expressions.RangeExpression.MaxType
- uid: System.Web.UI.WebControls.Expressions.RangeType
  parent: System.Web.UI.WebControls.Expressions
  isExternal: false
  name: RangeType
  nameWithType: RangeType
  fullName: System.Web.UI.WebControls.Expressions.RangeType
- uid: System.Web.UI.WebControls.Expressions.RangeExpression.MinType
  parent: System.Web.UI.WebControls.Expressions.RangeExpression
  isExternal: false
  name: MinType
  nameWithType: RangeExpression.MinType
  fullName: System.Web.UI.WebControls.Expressions.RangeExpression.MinType
- uid: System.Web.UI.WebControls.Expressions.RangeExpression.#ctor*
  parent: System.Web.UI.WebControls.Expressions.RangeExpression
  isExternal: false
  name: RangeExpression
  nameWithType: RangeExpression.RangeExpression
- uid: System.Web.UI.WebControls.Expressions.RangeExpression.DataField*
  parent: System.Web.UI.WebControls.Expressions.RangeExpression
  isExternal: false
  name: DataField
  nameWithType: RangeExpression.DataField
- uid: System.Web.UI.WebControls.Expressions.RangeExpression.GetQueryable*
  parent: System.Web.UI.WebControls.Expressions.RangeExpression
  isExternal: false
  name: GetQueryable
  nameWithType: RangeExpression.GetQueryable
- uid: System.Web.UI.WebControls.Expressions.RangeExpression.MaxType*
  parent: System.Web.UI.WebControls.Expressions.RangeExpression
  isExternal: false
  name: MaxType
  nameWithType: RangeExpression.MaxType
- uid: System.Web.UI.WebControls.Expressions.RangeExpression.MinType*
  parent: System.Web.UI.WebControls.Expressions.RangeExpression
  isExternal: false
  name: MinType
  nameWithType: RangeExpression.MinType
