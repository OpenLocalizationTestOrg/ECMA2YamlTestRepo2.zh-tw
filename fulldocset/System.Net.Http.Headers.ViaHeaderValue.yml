### YamlMime:ManagedReference
items:
- uid: System.Net.Http.Headers.ViaHeaderValue
  id: ViaHeaderValue
  children:
  - System.Net.Http.Headers.ViaHeaderValue.#ctor(System.String,System.String)
  - System.Net.Http.Headers.ViaHeaderValue.#ctor(System.String,System.String,System.String)
  - System.Net.Http.Headers.ViaHeaderValue.#ctor(System.String,System.String,System.String,System.String)
  - System.Net.Http.Headers.ViaHeaderValue.Comment
  - System.Net.Http.Headers.ViaHeaderValue.Equals(System.Object)
  - System.Net.Http.Headers.ViaHeaderValue.GetHashCode
  - System.Net.Http.Headers.ViaHeaderValue.Parse(System.String)
  - System.Net.Http.Headers.ViaHeaderValue.ProtocolName
  - System.Net.Http.Headers.ViaHeaderValue.ProtocolVersion
  - System.Net.Http.Headers.ViaHeaderValue.ReceivedBy
  - System.Net.Http.Headers.ViaHeaderValue.System#ICloneable#Clone
  - System.Net.Http.Headers.ViaHeaderValue.ToString
  - System.Net.Http.Headers.ViaHeaderValue.TryParse(System.String,System.Net.Http.Headers.ViaHeaderValue@)
  langs:
  - csharp
  name: ViaHeaderValue
  nameWithType: ViaHeaderValue
  fullName: System.Net.Http.Headers.ViaHeaderValue
  type: Class
  summary: "代表 Via 標頭的值。"
  syntax:
    content: 'public class ViaHeaderValue : ICloneable'
  inheritance:
  - System.Object
  implements:
  - System.ICloneable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.Http.Headers.ViaHeaderValue.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Net.Http.Headers.ViaHeaderValue
  langs:
  - csharp
  name: ViaHeaderValue(String,String)
  nameWithType: ViaHeaderValue.ViaHeaderValue(String,String)
  fullName: System.Net.Http.Headers.ViaHeaderValue.ViaHeaderValue(String,String)
  type: Constructor
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "初始化的新執行個體<xref href=&quot;System.Net.Http.Headers.ViaHeaderValue&quot;></xref>類別。"
  syntax:
    content: public ViaHeaderValue (string protocolVersion, string receivedBy);
    parameters:
    - id: protocolVersion
      type: System.String
      description: "接收的通訊協定的通訊協定版本。"
    - id: receivedBy
      type: System.String
      description: "主機和連接埠收到的要求或回應。"
  overload: System.Net.Http.Headers.ViaHeaderValue.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.ViaHeaderValue.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: System.Net.Http.Headers.ViaHeaderValue
  langs:
  - csharp
  name: ViaHeaderValue(String,String,String)
  nameWithType: ViaHeaderValue.ViaHeaderValue(String,String,String)
  fullName: System.Net.Http.Headers.ViaHeaderValue.ViaHeaderValue(String,String,String)
  type: Constructor
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "初始化的新執行個體<xref href=&quot;System.Net.Http.Headers.ViaHeaderValue&quot;></xref>類別。"
  syntax:
    content: public ViaHeaderValue (string protocolVersion, string receivedBy, string protocolName);
    parameters:
    - id: protocolVersion
      type: System.String
      description: "接收的通訊協定的通訊協定版本。"
    - id: receivedBy
      type: System.String
      description: "主機和連接埠收到的要求或回應。"
    - id: protocolName
      type: System.String
      description: "已接收的通訊協定的通訊協定名稱。"
  overload: System.Net.Http.Headers.ViaHeaderValue.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.ViaHeaderValue.#ctor(System.String,System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String,System.String)'
  parent: System.Net.Http.Headers.ViaHeaderValue
  langs:
  - csharp
  name: ViaHeaderValue(String,String,String,String)
  nameWithType: ViaHeaderValue.ViaHeaderValue(String,String,String,String)
  fullName: System.Net.Http.Headers.ViaHeaderValue.ViaHeaderValue(String,String,String,String)
  type: Constructor
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "初始化的新執行個體<xref href=&quot;System.Net.Http.Headers.ViaHeaderValue&quot;></xref>類別。"
  syntax:
    content: public ViaHeaderValue (string protocolVersion, string receivedBy, string protocolName, string comment);
    parameters:
    - id: protocolVersion
      type: System.String
      description: "接收的通訊協定的通訊協定版本。"
    - id: receivedBy
      type: System.String
      description: "主機和連接埠收到的要求或回應。"
    - id: protocolName
      type: System.String
      description: "已接收的通訊協定的通訊協定名稱。"
    - id: comment
      type: System.String
      description: "用來識別收件者的 proxy 或閘道軟體註解欄位。"
  overload: System.Net.Http.Headers.ViaHeaderValue.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.ViaHeaderValue.Comment
  id: Comment
  parent: System.Net.Http.Headers.ViaHeaderValue
  langs:
  - csharp
  name: Comment
  nameWithType: ViaHeaderValue.Comment
  fullName: System.Net.Http.Headers.ViaHeaderValue.Comment
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "取得用來識別收件者的 proxy 或閘道軟體的註解欄位。"
  syntax:
    content: public string Comment { get; }
    return:
      type: System.String
      description: "用來識別收件者的 proxy 或閘道軟體註解欄位。"
  overload: System.Net.Http.Headers.ViaHeaderValue.Comment*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.ViaHeaderValue.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Net.Http.Headers.ViaHeaderValue
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: ViaHeaderValue.Equals(Object)
  fullName: System.Net.Http.Headers.ViaHeaderValue.Equals(Object)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "決定是否指定<xref:System.Object>是否等於目前<xref href=&quot;System.Net.Http.Headers.ViaHeaderValue&quot;></xref>物件。</xref:System.Object>"
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "要與目前物件比較的物件。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果指定<xref:System.Object>等於目前的物件; 否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Object>"
  overload: System.Net.Http.Headers.ViaHeaderValue.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.ViaHeaderValue.GetHashCode
  id: GetHashCode
  parent: System.Net.Http.Headers.ViaHeaderValue
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: ViaHeaderValue.GetHashCode()
  fullName: System.Net.Http.Headers.ViaHeaderValue.GetHashCode()
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "做為雜湊函式<xref href=&quot;System.Net.Http.Headers.ViaHeaderValue&quot;></xref>物件。"
  remarks: "雜湊程式碼是用來識別物件在等號比較測試期間的數值。 它也可做為集合中物件的索引。       GetHashCode 方法適合用於雜湊演算法和資料結構，例如雜湊表。"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "傳回目前物件的雜湊碼。"
  overload: System.Net.Http.Headers.ViaHeaderValue.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.ViaHeaderValue.Parse(System.String)
  id: Parse(System.String)
  parent: System.Net.Http.Headers.ViaHeaderValue
  langs:
  - csharp
  name: Parse(String)
  nameWithType: ViaHeaderValue.Parse(String)
  fullName: System.Net.Http.Headers.ViaHeaderValue.Parse(String)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "將字串轉換成<xref href=&quot;System.Net.Http.Headers.ViaHeaderValue&quot;></xref>執行個體。"
  syntax:
    content: public static System.Net.Http.Headers.ViaHeaderValue Parse (string input);
    parameters:
    - id: input
      type: System.String
      description: "表示透過標頭值資訊的字串。"
    return:
      type: System.Net.Http.Headers.ViaHeaderValue
      description: "A <xref href=&quot;System.Net.Http.Headers.ViaHeaderValue&quot;> </xref>執行個體。"
  overload: System.Net.Http.Headers.ViaHeaderValue.Parse*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>input</code>是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>參考。"
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "<code>input</code>不能透過標頭值的資訊。"
  platform:
  - net462
- uid: System.Net.Http.Headers.ViaHeaderValue.ProtocolName
  id: ProtocolName
  parent: System.Net.Http.Headers.ViaHeaderValue
  langs:
  - csharp
  name: ProtocolName
  nameWithType: ViaHeaderValue.ProtocolName
  fullName: System.Net.Http.Headers.ViaHeaderValue.ProtocolName
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "取得已接收的通訊協定的通訊協定名稱。"
  syntax:
    content: public string ProtocolName { get; }
    return:
      type: System.String
      description: "通訊協定名稱。"
  overload: System.Net.Http.Headers.ViaHeaderValue.ProtocolName*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.ViaHeaderValue.ProtocolVersion
  id: ProtocolVersion
  parent: System.Net.Http.Headers.ViaHeaderValue
  langs:
  - csharp
  name: ProtocolVersion
  nameWithType: ViaHeaderValue.ProtocolVersion
  fullName: System.Net.Http.Headers.ViaHeaderValue.ProtocolVersion
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "取得已接收的通訊協定的通訊協定版本。"
  syntax:
    content: public string ProtocolVersion { get; }
    return:
      type: System.String
      description: "通訊協定版本。"
  overload: System.Net.Http.Headers.ViaHeaderValue.ProtocolVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.ViaHeaderValue.ReceivedBy
  id: ReceivedBy
  parent: System.Net.Http.Headers.ViaHeaderValue
  langs:
  - csharp
  name: ReceivedBy
  nameWithType: ViaHeaderValue.ReceivedBy
  fullName: System.Net.Http.Headers.ViaHeaderValue.ReceivedBy
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "取得主機和連接埠收到的要求或回應。"
  remarks: "表示中繼通訊協定和收件者的使用者代理程式和伺服器上的要求，以及原始伺服器與回應上的用戶端之間 Via 一般標頭欄位必須使用閘道的 proxy。"
  syntax:
    content: public string ReceivedBy { get; }
    return:
      type: System.String
      description: "主機和連接埠收到的要求或回應。"
  overload: System.Net.Http.Headers.ViaHeaderValue.ReceivedBy*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.ViaHeaderValue.System#ICloneable#Clone
  id: System#ICloneable#Clone
  isEii: true
  parent: System.Net.Http.Headers.ViaHeaderValue
  langs:
  - csharp
  name: System.ICloneable.Clone()
  nameWithType: ViaHeaderValue.System.ICloneable.Clone()
  fullName: System.Net.Http.Headers.ViaHeaderValue.System.ICloneable.Clone()
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "建立新的物件目前的複本<xref href=&quot;System.Net.Http.Headers.ViaHeaderValue&quot;></xref>執行個體。"
  syntax:
    content: object ICloneable.Clone ();
    parameters: []
    return:
      type: System.Object
      description: "目前的執行個體的複本。"
  overload: System.Net.Http.Headers.ViaHeaderValue.System#ICloneable#Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.ViaHeaderValue.ToString
  id: ToString
  parent: System.Net.Http.Headers.ViaHeaderValue
  langs:
  - csharp
  name: ToString()
  nameWithType: ViaHeaderValue.ToString()
  fullName: System.Net.Http.Headers.ViaHeaderValue.ToString()
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "傳回字串，代表目前<xref href=&quot;System.Net.Http.Headers.ViaHeaderValue&quot;></xref>物件。"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "表示目前物件的字串。"
  overload: System.Net.Http.Headers.ViaHeaderValue.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.ViaHeaderValue.TryParse(System.String,System.Net.Http.Headers.ViaHeaderValue@)
  id: TryParse(System.String,System.Net.Http.Headers.ViaHeaderValue@)
  parent: System.Net.Http.Headers.ViaHeaderValue
  langs:
  - csharp
  name: TryParse(String,ViaHeaderValue)
  nameWithType: ViaHeaderValue.TryParse(String,ViaHeaderValue)
  fullName: System.Net.Http.Headers.ViaHeaderValue.TryParse(String,ViaHeaderValue)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "判斷字串是否為有效<xref href=&quot;System.Net.Http.Headers.ViaHeaderValue&quot;></xref>資訊。"
  syntax:
    content: public static bool TryParse (string input, out System.Net.Http.Headers.ViaHeaderValue parsedValue);
    parameters:
    - id: input
      type: System.String
      description: "要驗證的字串。"
    - id: parsedValue
      type: System.Net.Http.Headers.ViaHeaderValue
      description: "<xref href=&quot;System.Net.Http.Headers.ViaHeaderValue&quot;> </xref>的字串版本。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>input</code> is valid <xref href=&quot;System.Net.Http.Headers.ViaHeaderValue&quot;></xref> information; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Net.Http.Headers.ViaHeaderValue.TryParse*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.FormatException
  isExternal: true
  name: System.FormatException
- uid: System.Net.Http.Headers.ViaHeaderValue.#ctor(System.String,System.String)
  parent: System.Net.Http.Headers.ViaHeaderValue
  isExternal: false
  name: ViaHeaderValue(String,String)
  nameWithType: ViaHeaderValue.ViaHeaderValue(String,String)
  fullName: System.Net.Http.Headers.ViaHeaderValue.ViaHeaderValue(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.Http.Headers.ViaHeaderValue.#ctor(System.String,System.String,System.String)
  parent: System.Net.Http.Headers.ViaHeaderValue
  isExternal: false
  name: ViaHeaderValue(String,String,String)
  nameWithType: ViaHeaderValue.ViaHeaderValue(String,String,String)
  fullName: System.Net.Http.Headers.ViaHeaderValue.ViaHeaderValue(String,String,String)
- uid: System.Net.Http.Headers.ViaHeaderValue.#ctor(System.String,System.String,System.String,System.String)
  parent: System.Net.Http.Headers.ViaHeaderValue
  isExternal: false
  name: ViaHeaderValue(String,String,String,String)
  nameWithType: ViaHeaderValue.ViaHeaderValue(String,String,String,String)
  fullName: System.Net.Http.Headers.ViaHeaderValue.ViaHeaderValue(String,String,String,String)
- uid: System.Net.Http.Headers.ViaHeaderValue.Comment
  parent: System.Net.Http.Headers.ViaHeaderValue
  isExternal: false
  name: Comment
  nameWithType: ViaHeaderValue.Comment
  fullName: System.Net.Http.Headers.ViaHeaderValue.Comment
- uid: System.Net.Http.Headers.ViaHeaderValue.Equals(System.Object)
  parent: System.Net.Http.Headers.ViaHeaderValue
  isExternal: false
  name: Equals(Object)
  nameWithType: ViaHeaderValue.Equals(Object)
  fullName: System.Net.Http.Headers.ViaHeaderValue.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.Http.Headers.ViaHeaderValue.GetHashCode
  parent: System.Net.Http.Headers.ViaHeaderValue
  isExternal: false
  name: GetHashCode()
  nameWithType: ViaHeaderValue.GetHashCode()
  fullName: System.Net.Http.Headers.ViaHeaderValue.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.Http.Headers.ViaHeaderValue.Parse(System.String)
  parent: System.Net.Http.Headers.ViaHeaderValue
  isExternal: false
  name: Parse(String)
  nameWithType: ViaHeaderValue.Parse(String)
  fullName: System.Net.Http.Headers.ViaHeaderValue.Parse(String)
- uid: System.Net.Http.Headers.ViaHeaderValue
  parent: System.Net.Http.Headers
  isExternal: false
  name: ViaHeaderValue
  nameWithType: ViaHeaderValue
  fullName: System.Net.Http.Headers.ViaHeaderValue
- uid: System.Net.Http.Headers.ViaHeaderValue.ProtocolName
  parent: System.Net.Http.Headers.ViaHeaderValue
  isExternal: false
  name: ProtocolName
  nameWithType: ViaHeaderValue.ProtocolName
  fullName: System.Net.Http.Headers.ViaHeaderValue.ProtocolName
- uid: System.Net.Http.Headers.ViaHeaderValue.ProtocolVersion
  parent: System.Net.Http.Headers.ViaHeaderValue
  isExternal: false
  name: ProtocolVersion
  nameWithType: ViaHeaderValue.ProtocolVersion
  fullName: System.Net.Http.Headers.ViaHeaderValue.ProtocolVersion
- uid: System.Net.Http.Headers.ViaHeaderValue.ReceivedBy
  parent: System.Net.Http.Headers.ViaHeaderValue
  isExternal: false
  name: ReceivedBy
  nameWithType: ViaHeaderValue.ReceivedBy
  fullName: System.Net.Http.Headers.ViaHeaderValue.ReceivedBy
- uid: System.Net.Http.Headers.ViaHeaderValue.System#ICloneable#Clone
  parent: System.Net.Http.Headers.ViaHeaderValue
  isExternal: false
  name: System.ICloneable.Clone()
  nameWithType: ViaHeaderValue.System.ICloneable.Clone()
  fullName: System.Net.Http.Headers.ViaHeaderValue.System.ICloneable.Clone()
- uid: System.Net.Http.Headers.ViaHeaderValue.ToString
  parent: System.Net.Http.Headers.ViaHeaderValue
  isExternal: false
  name: ToString()
  nameWithType: ViaHeaderValue.ToString()
  fullName: System.Net.Http.Headers.ViaHeaderValue.ToString()
- uid: System.Net.Http.Headers.ViaHeaderValue.TryParse(System.String,System.Net.Http.Headers.ViaHeaderValue@)
  parent: System.Net.Http.Headers.ViaHeaderValue
  isExternal: false
  name: TryParse(String,ViaHeaderValue)
  nameWithType: ViaHeaderValue.TryParse(String,ViaHeaderValue)
  fullName: System.Net.Http.Headers.ViaHeaderValue.TryParse(String,ViaHeaderValue)
- uid: System.Net.Http.Headers.ViaHeaderValue.#ctor*
  parent: System.Net.Http.Headers.ViaHeaderValue
  isExternal: false
  name: ViaHeaderValue
  nameWithType: ViaHeaderValue.ViaHeaderValue
- uid: System.Net.Http.Headers.ViaHeaderValue.Comment*
  parent: System.Net.Http.Headers.ViaHeaderValue
  isExternal: false
  name: Comment
  nameWithType: ViaHeaderValue.Comment
- uid: System.Net.Http.Headers.ViaHeaderValue.Equals*
  parent: System.Net.Http.Headers.ViaHeaderValue
  isExternal: false
  name: Equals
  nameWithType: ViaHeaderValue.Equals
- uid: System.Net.Http.Headers.ViaHeaderValue.GetHashCode*
  parent: System.Net.Http.Headers.ViaHeaderValue
  isExternal: false
  name: GetHashCode
  nameWithType: ViaHeaderValue.GetHashCode
- uid: System.Net.Http.Headers.ViaHeaderValue.Parse*
  parent: System.Net.Http.Headers.ViaHeaderValue
  isExternal: false
  name: Parse
  nameWithType: ViaHeaderValue.Parse
- uid: System.Net.Http.Headers.ViaHeaderValue.ProtocolName*
  parent: System.Net.Http.Headers.ViaHeaderValue
  isExternal: false
  name: ProtocolName
  nameWithType: ViaHeaderValue.ProtocolName
- uid: System.Net.Http.Headers.ViaHeaderValue.ProtocolVersion*
  parent: System.Net.Http.Headers.ViaHeaderValue
  isExternal: false
  name: ProtocolVersion
  nameWithType: ViaHeaderValue.ProtocolVersion
- uid: System.Net.Http.Headers.ViaHeaderValue.ReceivedBy*
  parent: System.Net.Http.Headers.ViaHeaderValue
  isExternal: false
  name: ReceivedBy
  nameWithType: ViaHeaderValue.ReceivedBy
- uid: System.Net.Http.Headers.ViaHeaderValue.System#ICloneable#Clone*
  parent: System.Net.Http.Headers.ViaHeaderValue
  isExternal: false
  name: System.ICloneable.Clone
  nameWithType: ViaHeaderValue.System.ICloneable.Clone
- uid: System.Net.Http.Headers.ViaHeaderValue.ToString*
  parent: System.Net.Http.Headers.ViaHeaderValue
  isExternal: false
  name: ToString
  nameWithType: ViaHeaderValue.ToString
- uid: System.Net.Http.Headers.ViaHeaderValue.TryParse*
  parent: System.Net.Http.Headers.ViaHeaderValue
  isExternal: false
  name: TryParse
  nameWithType: ViaHeaderValue.TryParse
