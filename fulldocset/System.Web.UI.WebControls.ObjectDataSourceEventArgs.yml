### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.ObjectDataSourceEventArgs
  id: ObjectDataSourceEventArgs
  children:
  - System.Web.UI.WebControls.ObjectDataSourceEventArgs.#ctor(System.Object)
  - System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance
  langs:
  - csharp
  name: ObjectDataSourceEventArgs
  nameWithType: ObjectDataSourceEventArgs
  fullName: System.Web.UI.WebControls.ObjectDataSourceEventArgs
  type: Class
  summary: "提供資料給<xref href=&quot;System.Web.UI.WebControls.ObjectDataSource.ObjectCreating&quot;></xref>和<xref href=&quot;System.Web.UI.WebControls.ObjectDataSource.ObjectCreated&quot;></xref>事件<xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;></xref>控制項。"
  remarks: "ObjectDataSourceEventArgs 類別用來<xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating%2A>和<xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated%2A>方法，以提供存取權之前使用的任何資料作業的商務物件執行個體<xref:System.Web.UI.WebControls.ObjectDataSource>控制和商務物件會執行。</xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating%2A> 設定商務物件，而且使用存取<xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A>屬性。</xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A> 加入事件處理常式委派以處理<xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating>事件，您可以在自訂程式碼，而不是建立商務物件的執行個體<xref:System.Web.UI.WebControls.ObjectDataSource>執行具現化。</xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating> 當您想要撥打的非預設建構函式來建立執行個體; 或商務物件的非預設執行個體時這非常有用<xref:System.Web.UI.WebControls.ObjectDataSource>一律會呼叫預設建構函式來建立它所使用的商務物件的執行個體。</xref:System.Web.UI.WebControls.ObjectDataSource> 您也可以加入事件處理常式委派以處理<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>事件，可讓您可公開存取任何公開的商務物件的成員執行任何額外的初始化或工作。</xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>       <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating%2A>和<xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated%2A>不會呼叫方法<xref:System.Web.UI.WebControls.ObjectDataSource>控制，如果是商務物件方法，以執行資料作業`static`。</xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating%2A>       <xref:System.Web.UI.WebControls.ObjectDataSource>控制項不僅會公開許多您可以控制它們來使用基礎的商務物件在其生命週期中的不同時間的事件。</xref:System.Web.UI.WebControls.ObjectDataSource> 下表列出的事件，以及相關聯<xref:System.EventArgs>類別和事件處理常式委派。</xref:System.EventArgs>      |事件 |EventArgs |事件處理常式 |  |-----------|---------------|------------------|  |<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>.</xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating><br /><br /> 只有在建立商務物件的執行個體之前立即發生。 |ObjectDataSourceEventArgs |<xref:System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler>|  |<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>.</xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated></xref:System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler><br /><br /> 在建立商務物件的執行個體之後，就會發生。 |ObjectDataSourceEventArgs |<xref:System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler>|  |<xref:System.Web.UI.WebControls.ObjectDataSource.Selecting>.</xref:System.Web.UI.WebControls.ObjectDataSource.Selecting></xref:System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler><br /><br /> 發生於之前擷取的資料。 |<xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler>|  |<xref:System.Web.UI.WebControls.ObjectDataSource.Inserting>, <xref:System.Web.UI.WebControls.ObjectDataSource.Updating>, and <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting>.</xref:System.Web.UI.WebControls.ObjectDataSource.Deleting></xref:System.Web.UI.WebControls.ObjectDataSource.Updating></xref:System.Web.UI.WebControls.ObjectDataSource.Inserting></xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler></xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs><br /><br /> 發生之前插入、 更新或刪除作業會執行。 |<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler>|  |<xref:System.Web.UI.WebControls.ObjectDataSource.Selected>.</xref:System.Web.UI.WebControls.ObjectDataSource.Selected></xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler></xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs><br /><br /> 發生於之後擷取的資料。 |<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler>|  |<xref:System.Web.UI.WebControls.ObjectDataSource.Inserted>, <xref:System.Web.UI.WebControls.ObjectDataSource.Updated>, <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted>.</xref:System.Web.UI.WebControls.ObjectDataSource.Deleted></xref:System.Web.UI.WebControls.ObjectDataSource.Updated></xref:System.Web.UI.WebControls.ObjectDataSource.Inserted></xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler></xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs><br /><br /> 發生之後插入、 更新或刪除作業已完成。 |<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler>|  |<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing>.</xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing></xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler></xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs><br /><br /> 在商務物件被終結之前發生。 |<xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler>|</xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler></xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs>"
  example:
  - "This section contains two code examples. The first code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.GridView> control to retrieve and display information. The second code example provides the example basic business object that the first code example uses.  \n  \n The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.GridView> control to retrieve and display information. In this example, as in many real-world scenarios, it might not be possible nor appropriate to use a default instance of the business object with the <xref:System.Web.UI.WebControls.ObjectDataSource> control. In this example, the <xref:System.Web.UI.WebControls.ObjectDataSource> cannot successfully call the default constructor because it will throw an exception. In some cases, the default constructor might be protected and in others it might not initialize the business object to a desired state. Whatever the reason, you can create an instance of the business object yourself and set the instance to the <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A> property of the ObjectDataSourceEventArgs object that is passed to the handler. This is the business object instance that the <xref:System.Web.UI.WebControls.ObjectDataSource> will use to perform its work.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_15#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_139_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_15#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_139_1.aspx)]  \n  \n The following code example demonstrates the example basic business object that the preceding code example uses.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_15#2](~/add/codesnippet/csharp/t-system.web.ui.webcontr_139_2.cs)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_15#2](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_139_2.vb)]"
  syntax:
    content: 'public class ObjectDataSourceEventArgs : EventArgs'
  inheritance:
  - System.EventArgs
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceEventArgs.#ctor(System.Object)
  id: '#ctor(System.Object)'
  parent: System.Web.UI.WebControls.ObjectDataSourceEventArgs
  langs:
  - csharp
  name: ObjectDataSourceEventArgs(Object)
  nameWithType: ObjectDataSourceEventArgs.ObjectDataSourceEventArgs(Object)
  fullName: System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectDataSourceEventArgs(Object)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "初始化的新執行個體<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceEventArgs&quot;></xref>類別使用指定的物件。"
  syntax:
    content: public ObjectDataSourceEventArgs (object objectInstance);
    parameters:
    - id: objectInstance
      type: System.Object
      description: "商務物件與其<xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;></xref>互動，用於執行資料作業。"
  overload: System.Web.UI.WebControls.ObjectDataSourceEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance
  id: ObjectInstance
  parent: System.Web.UI.WebControls.ObjectDataSourceEventArgs
  langs:
  - csharp
  name: ObjectInstance
  nameWithType: ObjectDataSourceEventArgs.ObjectInstance
  fullName: System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定物件，表示商務物件與其<xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;></xref>控制項執行資料作業。"
  remarks: ''
  example:
  - "This section contains two code examples. The first code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.GridView> control to retrieve and display information. The second code example provides the example basic business object that the first code example uses.  \n  \n The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.GridView> control to retrieve and display information. In this example, as in many real-world scenarios, it might not be possible nor appropriate to use a default instance of the business object with the <xref:System.Web.UI.WebControls.ObjectDataSource> control. In this example, the <xref:System.Web.UI.WebControls.ObjectDataSource> cannot successfully call the default constructor because it will throw an exception. In some cases, the default constructor might be protected and in others it might not initialize the business object to a desired state. Whatever the reason, you can create an instance of the business object yourself and set the instance to the ObjectInstance property of the <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs> object that is passed to the handler. This is the business object instance that the <xref:System.Web.UI.WebControls.ObjectDataSource> will use to perform its work.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_15#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1184_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_15#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1184_1.aspx)]  \n  \n The following code example demonstrates the example basic business object that the preceding code example uses.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_15#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1184_2.cs)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_15#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1184_2.vb)]"
  syntax:
    content: public object ObjectInstance { get; set; }
    return:
      type: System.Object
      description: "商務物件<xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;></xref>使用來執行資料作業; 否則<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>，如果<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>傳遞至<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceEventArgs&quot;> </xref>。"
  overload: System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance*
  exceptions: []
  platform:
  - net462
references:
- uid: System.EventArgs
  isExternal: false
  name: System.EventArgs
- uid: System.Web.UI.WebControls.ObjectDataSourceEventArgs.#ctor(System.Object)
  parent: System.Web.UI.WebControls.ObjectDataSourceEventArgs
  isExternal: false
  name: ObjectDataSourceEventArgs(Object)
  nameWithType: ObjectDataSourceEventArgs.ObjectDataSourceEventArgs(Object)
  fullName: System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectDataSourceEventArgs(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance
  parent: System.Web.UI.WebControls.ObjectDataSourceEventArgs
  isExternal: false
  name: ObjectInstance
  nameWithType: ObjectDataSourceEventArgs.ObjectInstance
  fullName: System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance
- uid: System.Web.UI.WebControls.ObjectDataSourceEventArgs.#ctor*
  parent: System.Web.UI.WebControls.ObjectDataSourceEventArgs
  isExternal: false
  name: ObjectDataSourceEventArgs
  nameWithType: ObjectDataSourceEventArgs.ObjectDataSourceEventArgs
- uid: System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance*
  parent: System.Web.UI.WebControls.ObjectDataSourceEventArgs
  isExternal: false
  name: ObjectInstance
  nameWithType: ObjectDataSourceEventArgs.ObjectInstance
