### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualBasic.Financial
  id: Financial
  children:
  - Microsoft.VisualBasic.Financial.DDB(System.Double,System.Double,System.Double,System.Double,System.Double)
  - Microsoft.VisualBasic.Financial.FV(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  - Microsoft.VisualBasic.Financial.IPmt(System.Double,System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  - Microsoft.VisualBasic.Financial.IRR(System.Double[]@,System.Double)
  - Microsoft.VisualBasic.Financial.MIRR(System.Double[]@,System.Double,System.Double)
  - Microsoft.VisualBasic.Financial.NPer(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  - Microsoft.VisualBasic.Financial.NPV(System.Double,System.Double[]@)
  - Microsoft.VisualBasic.Financial.Pmt(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  - Microsoft.VisualBasic.Financial.PPmt(System.Double,System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  - Microsoft.VisualBasic.Financial.PV(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  - Microsoft.VisualBasic.Financial.Rate(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate,System.Double)
  - Microsoft.VisualBasic.Financial.SLN(System.Double,System.Double,System.Double)
  - Microsoft.VisualBasic.Financial.SYD(System.Double,System.Double,System.Double,System.Double)
  langs:
  - csharp
  name: Financial
  nameWithType: Financial
  fullName: Microsoft.VisualBasic.Financial
  type: Class
  summary: "<xref uid=&quot;langword_csharp_Financial&quot; name=&quot;Financial&quot; href=&quot;&quot;> </xref>模組包含用來執行財務作業程序。"
  remarks: "這個模組支援 Visual Basic 執行階段程式庫成員來執行例如折舊、 目前和未來的值、 利率、 率傳回時和付款的財務計算。"
  example:
  - "This example uses the `Rate` function to calculate the interest rate of a loan, given the total number of payments (`TotPmts`), the amount of the loan payment (`Payment`), the present value or principal of the loan (`PVal`), the future value of the loan (`FVal`), a number that indicates whether the payment is due at the beginning or end of the payment period (`PayType`), and an approximation of the expected interest rate (`Guess`).  \n  \n [!code-vb[VbVbalrMath#2](~/add/codesnippet/visualbasic/t-microsoft.visualbasic._25_1.vb)]"
  syntax:
    content: >-
      [Microsoft.VisualBasic.CompilerServices.StandardModule]

      public sealed class Financial
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Financial.DDB(System.Double,System.Double,System.Double,System.Double,System.Double)
  id: DDB(System.Double,System.Double,System.Double,System.Double,System.Double)
  parent: Microsoft.VisualBasic.Financial
  langs:
  - csharp
  name: DDB(Double,Double,Double,Double,Double)
  nameWithType: Financial.DDB(Double,Double,Double,Double,Double)
  fullName: Microsoft.VisualBasic.Financial.DDB(Double,Double,Double,Double,Double)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "傳回<xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>指定計算資產折舊使用餘額倍率遞減法或其他指定的方法在特定時間週期。"
  remarks: "餘額倍率遞減法計算折舊以加速速率。 折舊的第一個週期中最高，而且在連續期間會降低。       `Life`和`Period`引數必須以相同的單位表示。 例如，如果`Life`指定月數`Period`也必須指定以月為單位。 所有引數必須是正數。       `DDB`函式會使用下列公式來計算給定的期間內的折舊︰ 折舊 / 週期 = ((Cost – Salvage) * 因數) / 生命週期"
  example:
  - "This example uses the `DDB` function to return the depreciation of an asset for a specified period given the initial cost (`InitCost`), the salvage value at the end of the asset's useful life (`SalvageVal`), the total life of the asset in years (`LifeTime`), and the period in years for which the depreciation is calculated (`Depr`).  \n  \n [!code-vb[VbVbalrMath#3](~/add/codesnippet/visualbasic/0a9b2d8a-2f04-4c59-80da-_1.vb)]"
  syntax:
    content: public static double DDB (double Cost, double Salvage, double Life, double Period, double Factor = 2);
    parameters:
    - id: Cost
      type: System.Double
      description: "必要。 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>指定的資產的初始成本。"
    - id: Salvage
      type: System.Double
      description: "必要。 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>指定在其有用的生命週期結束的資產值。"
    - id: Life
      type: System.Double
      description: "必要。 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>指定資產使用年限長度。"
    - id: Period
      type: System.Double
      description: "必要。 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>指定計算資產折舊期間。"
    - id: Factor
      type: System.Double
      description: "選擇性。 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>指定的餘額拒絕的速率。 如果省略，則會假設 2 （餘額的方法）。"
    return:
      type: System.Double
      description: "傳回<xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>指定計算資產折舊使用餘額倍率遞減法或其他指定的方法在特定時間週期。"
  overload: Microsoft.VisualBasic.Financial.DDB*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Factor</code>&lt;= 0, <code>Salvage</code> &lt; 0, <code>Period</code> &lt;= 0, or <code>Period</code> &gt;<code>Life.</code>"
  platform:
  - net462
- uid: Microsoft.VisualBasic.Financial.FV(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  id: FV(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  parent: Microsoft.VisualBasic.Financial
  langs:
  - csharp
  name: FV(Double,Double,Double,Double,DueDate)
  nameWithType: Financial.FV(Double,Double,Double,Double,DueDate)
  fullName: Microsoft.VisualBasic.Financial.FV(Double,Double,Double,Double,DueDate)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "傳回<xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>根據，按定期支付和固定利率，指定年金的終值。"
  remarks: "年金是一系列固定的現金付款經過一段時間。 年金可以貸款 （例如房屋貸款） 或 （例如每月節省計劃） 投資。       `Rate`和`NPer`引數必須使用相同的單位表示付款期計算。 例如，如果`Rate`會使用幾個月，計算`NPer`必須也使用來計算月。       所有引數，若是現金支出 （例如存款） 會以負號;現金收入 （例如被除數檢查） 會以正值的數字。"
  example:
  - "This example uses the `FV` function to return the future value of an investment given the percentage rate that accrues per period (`APR / 12`), the total number of payments (`TotPmts`), the payment (`Payment`), the current value of the investment (`PVal`), and a number that indicates whether the payment is made at the beginning or end of the payment period (`PayType`). Note that because `Payment` represents cash paid out, it is a negative number.  \n  \n [!code-vb[VbVbalrMath#22](~/add/codesnippet/visualbasic/0c46fa91-bd2b-4dd0-a9f3-_1.vb)]"
  syntax:
    content: public static double FV (double Rate, double NPer, double Pmt, double PV = 0, Microsoft.VisualBasic.DueDate Due = Microsoft.VisualBasic.DueDate.EndOfPeriod);
    parameters:
    - id: Rate
      type: System.Double
      description: "必要。 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>指定每一期。 比方說，如果您的汽車貸款到達百分之 10 年度百分比率 （年 4 月） 和每月付款，每段期間的速率。 0.1/12，即 0.0083"
    - id: NPer
      type: System.Double
      description: "必要。 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>指定年金期的總數。 例如，如果四年汽車貸款每月付款，貸款共有 4 x 12 （或 48） 付款期。"
    - id: Pmt
      type: System.Double
      description: "必要。 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>指定可供每個週期的付款。 付款通常會包含主體與感興趣的利息存留期間不會變更。"
    - id: PV
      type: System.Double
      description: "選擇性。 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>指定目前的值 （或總和） 的一系列的付款。 例如，當您買一輛車，貸款金額是 ender 每月付款您要建立的現值。 如果省略，則假設為 0。"
    - id: Due
      type: Microsoft.VisualBasic.DueDate
      description: "選擇性。 型別的物件<xref href=&quot;Microsoft.VisualBasic.DueDate&quot;> </xref> ，指定當付款的到期時間。 這個引數必須是<xref uid=&quot;langword_csharp_DueDate.EndOfPeriod&quot; name=&quot;DueDate.EndOfPeriod&quot; href=&quot;&quot;></xref>如果付款付款期結束處的到期時間或<xref uid=&quot;langword_csharp_DueDate.BegOfPeriod&quot; name=&quot;DueDate.BegOfPeriod&quot; href=&quot;&quot;></xref>如果付款期間的開始處的到期時間。 如果省略， <xref uid=&quot;langword_csharp_DueDate.EndOfPeriod&quot; name=&quot;DueDate.EndOfPeriod&quot; href=&quot;&quot;> </xref>假設。"
    return:
      type: System.Double
      description: "傳回<xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>根據，按定期支付和固定利率，指定年金的終值。"
  overload: Microsoft.VisualBasic.Financial.FV*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Financial.IPmt(System.Double,System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  id: IPmt(System.Double,System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  parent: Microsoft.VisualBasic.Financial
  langs:
  - csharp
  name: IPmt(Double,Double,Double,Double,Double,DueDate)
  nameWithType: Financial.IPmt(Double,Double,Double,Double,Double,DueDate)
  fullName: Microsoft.VisualBasic.Financial.IPmt(Double,Double,Double,Double,Double,DueDate)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "傳回<xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>指定感興趣的年金在指定時間為根據，按定期支付和固定利率。"
  remarks: "年金是一系列固定的現金付款經過一段時間。 年金可以貸款 （例如房屋貸款） 或 （例如每月節省計劃） 投資。       `Rate`和`NPer`引數必須使用相同的單位表示付款期計算。 例如，如果`Rate`會使用幾個月，計算`NPer`必須也使用來計算月。       所有引數，若是現金支出 （例如存款） 會以負號;現金收入 （例如被除數檢查） 會以正值的數字。"
  example:
  - "This example uses the `IPmt` function to calculate how much of a payment is interest when all the payments are of equal value. Given are the interest percentage rate per period (`APR / 12`), the payment period for which the interest portion is desired (`Period`), the total number of payments (`TotPmts`), the present value or principal of the loan (`PVal`), the future value of the loan (`FVal`), and a number that indicates whether the payment is due at the beginning or end of the payment period (`PayType`).  \n  \n [!code-vb[VbVbalrMath#26](~/add/codesnippet/visualbasic/2fa7f248-74e0-4498-aee1-_1.vb)]"
  syntax:
    content: public static double IPmt (double Rate, double Per, double NPer, double PV, double FV = 0, Microsoft.VisualBasic.DueDate Due = Microsoft.VisualBasic.DueDate.EndOfPeriod);
    parameters:
    - id: Rate
      type: System.Double
      description: "必要。 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>指定每一期。 比方說，如果您的汽車貸款到達百分之 10 年度百分比率 （年 4 月） 和每月付款，每段期間的速率。 0.1/12，即 0.0083"
    - id: Per
      type: System.Double
      description: "必要。 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>在範圍 1 到指定的付款期`NPer`。"
    - id: NPer
      type: System.Double
      description: "必要。 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>指定年金期的總數。 例如，如果四年汽車貸款每月付款，貸款共有 4 x 12 （或 48） 付款期。"
    - id: PV
      type: System.Double
      description: "必要。 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>指定出現值或一系列的付款或回條的目前值。 例如，當您買一輛車，貸款金額是 ender 每月付款您要建立的現值。"
    - id: FV
      type: System.Double
      description: "選擇性。 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>指定未來值或您所做的最後付款之後您想要的現金餘額。 例如，貸款的未來值為 $0，因為這是其值後的最後付款。 不過，如果您想要儲存您的子女教育超過 18 歲 50000，然後 $50,000 的未來值。 如果省略，則假設為 0。"
    - id: Due
      type: Microsoft.VisualBasic.DueDate
      description: "選擇性。 型別的物件<xref href=&quot;Microsoft.VisualBasic.DueDate&quot;> </xref> ，指定當付款的到期時間。 這個引數必須是`DueDate.EndOfPeriod`如果付款付款期結束處的到期時間或`DueDate.BegOfPeriod`如果付款期間的開始處的到期時間。 如果省略，`DueDate.EndOfPeriod`假設。"
    return:
      type: System.Double
      description: "傳回<xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>指定感興趣的年金在指定時間為根據，按定期支付和固定利率。"
  overload: Microsoft.VisualBasic.Financial.IPmt*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Per</code>&lt;= 0 or <code>Per</code> &gt;<code>NPer</code>"
  platform:
  - net462
- uid: Microsoft.VisualBasic.Financial.IRR(System.Double[]@,System.Double)
  id: IRR(System.Double[]@,System.Double)
  parent: Microsoft.VisualBasic.Financial
  langs:
  - csharp
  name: IRR(Double[],Double)
  nameWithType: Financial.IRR(Double[],Double)
  fullName: Microsoft.VisualBasic.Financial.IRR(Double[],Double)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "傳回<xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>指定週期性現金流量 （收支） 的一系列的內部報酬率。"
  remarks: "內部報酬率是接收付款和在定期間隔發生的回條組成的投資的利率。       `IRR`函式會使用值陣列中的順序解譯收支的順序。 請務必輸入您的付款和回條的值，以正確的順序。 現金流量，每個期間不需要固定，因為其適用於年金。       `IRR`計算方式為反覆項目。 開始值是`Guess`，`IRR`循環的計算，直到 0.00001%為止。 如果`IRR`找不到 20 之後的結果會嘗試，它將會失敗。"
  example:
  - "In this example, the `IRR` function returns the internal rate of return for a series of five cash flows contained in the array `Values()`. The first array element is a negative cash flow representing business start-up costs. The remaining four cash flows represent positive cash flows for the subsequent four years. `Guess` is the estimated internal rate of return.  \n  \n [!code-vb[VbVbalrMath#20](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._228_1.vb)]"
  syntax:
    content: public static double IRR (ref double[] ValueArray, double Guess = 0.1);
    parameters:
    - id: ValueArray
      type: System.Double[]
      description: "必要。 陣列<xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>指定現金流量值。 陣列必須包含至少一個負數值 （付款） 和一個正數 （接收）。"
    - id: Guess
      type: System.Double
      description: "選擇性。 物件，指定估計的值會傳回<xref uid=&quot;langword_csharp_IRR&quot; name=&quot;IRR&quot; href=&quot;&quot;> </xref>。 如果省略，`Guess`是 0.1 （10%)。"
    return:
      type: System.Double
      description: "傳回<xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>指定週期性現金流量 （收支） 的一系列的內部報酬率。"
  overload: Microsoft.VisualBasic.Financial.IRR*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "陣列引數的值都無效或<code> Guess </code> &lt;=-1。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.Financial.MIRR(System.Double[]@,System.Double,System.Double)
  id: MIRR(System.Double[]@,System.Double,System.Double)
  parent: Microsoft.VisualBasic.Financial
  langs:
  - csharp
  name: MIRR(Double[],Double,Double)
  nameWithType: Financial.MIRR(Double[],Double,Double)
  fullName: Microsoft.VisualBasic.Financial.MIRR(Double[],Double,Double)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "傳回<xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>指定一序列週期性現金流量 （收支） 的已修改的內部報酬率。"
  remarks: "已修改的內部報酬率收支使用不同的速率時的內部報酬率。 `MIRR`函式會考量投資成本 (`FinanceRate`) 和利率的現金計算 (`ReinvestRate`)。       `FinanceRate`和`ReinvestRatearguments`會表示為十進位值的百分比。 例如，12%會表示為 0.12。       `MIRR`函式會使用值陣列中的順序解譯收支的順序。 請務必輸入您的付款和回條的值，以正確的順序。"
  example:
  - "This example uses the `MIRR` function to return the modified internal rate of return for a series of cash flows contained in the array `Values()`. `LoanAPR` represents the financing interest, and `InvAPR` represents the interest rate received on reinvestment.  \n  \n [!code-vb[VbVbalrMath#29](~/add/codesnippet/visualbasic/ba568dc0-432d-4a7b-b1d0-_1.vb)]"
  syntax:
    content: public static double MIRR (ref double[] ValueArray, double FinanceRate, double ReinvestRate);
    parameters:
    - id: ValueArray
      type: System.Double[]
      description: "必要。 陣列<xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>指定現金流量值。 陣列必須包含至少一個負數值 （付款） 和一個正數 （接收）。"
    - id: FinanceRate
      type: System.Double
      description: "必要。 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>指定利率付費的融資下成本。"
    - id: ReinvestRate
      type: System.Double
      description: "必要。 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>指定提升的現金存款上收到的利率。"
    return:
      type: System.Double
      description: "傳回<xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>指定一序列週期性現金流量 （收支） 的已修改的內部報酬率。"
  overload: Microsoft.VisualBasic.Financial.MIRR*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Rank of <code>ValueArray</code> does not equal 1, <code>FinanceRate</code> = -1, or <code>ReinvestRate</code> = -1"
  - type: System.DivideByZeroException
    commentId: T:System.DivideByZeroException
    description: "發生除數為零。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.Financial.NPer(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  id: NPer(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  parent: Microsoft.VisualBasic.Financial
  langs:
  - csharp
  name: NPer(Double,Double,Double,Double,DueDate)
  nameWithType: Financial.NPer(Double,Double,Double,Double,DueDate)
  fullName: Microsoft.VisualBasic.Financial.NPer(Double,Double,Double,Double,DueDate)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "傳回<xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>根據定期支付和固定的利率的年金期數的指定。"
  remarks: "年金是一系列固定的現金付款經過一段時間。 年金可以貸款 （例如房屋貸款） 或 （例如每月節省計劃） 投資。       所有引數，若是現金支出 （例如存款） 會以負號;現金收入 （例如被除數檢查） 會以正值的數字。"
  example:
  - "This example uses the `NPer` function to return the number of periods during which payments must be made to pay off a loan whose value is contained in `PVal`. Also provided are the interest percentage rate per period (`APR / 12`), the payment (`Payment`), the future value of the loan (`FVal`), and a number that indicates whether the payment is due at the beginning or end of the payment period (`PayType`).  \n  \n [!code-vb[VbVbalrMath#19](~/add/codesnippet/visualbasic/57cf6dfc-5811-4703-a937-_1.vb)]"
  syntax:
    content: public static double NPer (double Rate, double Pmt, double PV, double FV = 0, Microsoft.VisualBasic.DueDate Due = Microsoft.VisualBasic.DueDate.EndOfPeriod);
    parameters:
    - id: Rate
      type: System.Double
      description: "必要。 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>指定每一期。 比方說，如果您的汽車貸款到達百分之 10 年度百分比率 （年 4 月） 和每月付款，每段期間的速率。 0.1/12，即 0.0083"
    - id: Pmt
      type: System.Double
      description: "必要。 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>指定可供每個週期的付款。 付款通常會包含主體，以及不會隨年金的變更。"
    - id: PV
      type: System.Double
      description: "必要。 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>指定出現值或一系列的付款或回條的目前值。 例如，當您買一輛車，貸款金額是 ender 每月付款您要建立的現值。"
    - id: FV
      type: System.Double
      description: "選擇性。 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>指定未來值或您所做的最後付款之後您想要的現金餘額。 例如，貸款的未來值為 $0，因為這是其值後的最後付款。 不過，如果您想要儲存您的子女教育超過 18 歲 50000，然後 $50,000 的未來值。 如果省略，則假設為 0。"
    - id: Due
      type: Microsoft.VisualBasic.DueDate
      description: "選擇性。 型別的物件<xref href=&quot;Microsoft.VisualBasic.DueDate&quot;> </xref> ，指定當付款的到期時間。 這個引數必須是`DueDate.EndOfPeriod`如果付款付款期結束處的到期時間或`DueDate.BegOfPeriod`如果付款期間的開始處的到期時間。 如果省略，`DueDate.EndOfPeriod`假設。"
    return:
      type: System.Double
      description: "傳回<xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>根據定期支付和固定的利率的年金期數的指定。"
  overload: Microsoft.VisualBasic.Financial.NPer*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Rate</code>= 0 and <code>Pmt</code> = 0"
  platform:
  - net462
- uid: Microsoft.VisualBasic.Financial.NPV(System.Double,System.Double[]@)
  id: NPV(System.Double,System.Double[]@)
  parent: Microsoft.VisualBasic.Financial
  langs:
  - csharp
  name: NPV(Double,Double[])
  nameWithType: Financial.NPV(Double,Double[])
  fullName: Microsoft.VisualBasic.Financial.NPV(Double,Double[])
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "傳回<xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>指定投資的淨現值根據一連串的週期性現金流量 （收支） 和貼現率。"
  remarks: "投資的淨現值是一連串的未來的付款和回條的目前值。       `NPV`函式會使用值陣列中的順序解譯收支的順序。 請務必輸入您的付款和回條的值，以正確的順序。       `NPV`投資開始的第一個現金流量值的前一期，並在陣列中的最後一個現金流量值結束。       淨現值計算根據未來的現金流量。 如果第一個的現金流量就會發生的第一個週期的開頭，必須加入的第一個值所傳回的值`NPV`，且不得包含的現金流量值`ValueArray`。       `NPV`函數很相似`PV`函式 （存在的值），除了`PV`函式可讓現金流量開始於結尾或句點開頭。 不同於變數`NPV`現金流量值`PV`現金流量必須固定在整個投資。"
  example:
  - "This example uses the `NPV` function to return the net present value for a series of cash flows contained in the array `values()`. The return value, stored in `FixedRetRate`, represents the fixed internal rate of return.  \n  \n [!code-vb[VbVbalrMath#1](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._103_1.vb)]"
  syntax:
    content: public static double NPV (double Rate, ref double[] ValueArray);
    parameters:
    - id: Rate
      type: System.Double
      description: "必要。 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>指定折扣率超過一段時間長度，以十進位表示。"
    - id: ValueArray
      type: System.Double[]
      description: "必要。 陣列<xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>指定現金流量值。 陣列必須包含至少一個負數值 （付款） 和一個正數 （接收）。"
    return:
      type: System.Double
      description: "傳回<xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>指定投資的淨現值根據一連串的週期性現金流量 （收支） 和貼現率。"
  overload: Microsoft.VisualBasic.Financial.NPV*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>ValueArray</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>, rank of <code>ValueArray</code> &lt;&gt; 1, or <code>Rate</code> = -1"
  platform:
  - net462
- uid: Microsoft.VisualBasic.Financial.Pmt(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  id: Pmt(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  parent: Microsoft.VisualBasic.Financial
  langs:
  - csharp
  name: Pmt(Double,Double,Double,Double,DueDate)
  nameWithType: Financial.Pmt(Double,Double,Double,Double,DueDate)
  fullName: Microsoft.VisualBasic.Financial.Pmt(Double,Double,Double,Double,DueDate)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "傳回<xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>上，按定期支付和固定利率基準，指定年金的基礎。"
  remarks: "年金是時間的一系列固定的現金付款期間。 年金可以貸款 （例如房屋貸款） 或 （例如每月節省計劃） 投資。       `Rate`和`NPer`引數必須使用相同的單位表示付款期計算。 例如，如果`Rate`會使用幾個月，計算`NPer`必須也使用來計算月。       所有的引數所負的數字，代表現金支出 （例如存款）現金收入 （例如被除數檢查） 會以正值的數字。"
  example:
  - "This example uses the `Pmt` function to return the monthly payment for a loan during a fixed period. Given are the interest percentage rate per period (`APR / 12`), the total number of payments (`TotPmts`), the present value or principal of the loan (`PVal`), the future value of the loan (`FVal`), and a number that indicates whether the payment is due at the beginning or end of the payment period `(PayType).`  \n  \n [!code-vb[VbVbalrMath#7](~/add/codesnippet/visualbasic/7dc3a2f6-c47c-4a51-b799-_1.vb)]"
  syntax:
    content: public static double Pmt (double Rate, double NPer, double PV, double FV = 0, Microsoft.VisualBasic.DueDate Due = Microsoft.VisualBasic.DueDate.EndOfPeriod);
    parameters:
    - id: Rate
      type: System.Double
      description: "必要。 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>指定每期的利率。 比方說，如果您的汽車貸款到達百分之 10 年度百分比率 （年 4 月） 和每月付款，每段期間的速率。 0.1/12，即 0.0083"
    - id: NPer
      type: System.Double
      description: "必要。 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>指定年金期的總數。 例如，如果四年汽車貸款每月付款，貸款共有 4 × 12 （或 48） 付款期。"
    - id: PV
      type: System.Double
      description: "必要。 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>指定的目前值 （或總和） 一系列的付款未來是現。 例如，當您買一輛車，貸款金額是 ender 每月付款您要建立的現值。"
    - id: FV
      type: System.Double
      description: "選擇性。 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>指定未來值或您所做的最後付款之後您想要的現金餘額。 例如，貸款的未來值為 $0，因為這是其值後的最後付款。 不過，如果您想要儲存在您的子女教育 18 年 50000，然後 $50,000 的未來值。 如果省略，則假設為 0。"
    - id: Due
      type: Microsoft.VisualBasic.DueDate
      description: "選擇性。 型別的物件<xref href=&quot;Microsoft.VisualBasic.DueDate&quot;> </xref> ，指定當付款的到期時間。 這個引數必須是`DueDate.EndOfPeriod`如果付款付款期結束處的到期時間或`DueDate.BegOfPeriod`如果付款期間的開始處的到期時間。 如果省略，`DueDate.EndOfPeriod`假設。"
    return:
      type: System.Double
      description: "傳回<xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>上，按定期支付和固定利率基準，指定年金的基礎。"
  overload: Microsoft.VisualBasic.Financial.Pmt*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>NPer</code> = 0."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Financial.PPmt(System.Double,System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  id: PPmt(System.Double,System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  parent: Microsoft.VisualBasic.Financial
  langs:
  - csharp
  name: PPmt(Double,Double,Double,Double,Double,DueDate)
  nameWithType: Financial.PPmt(Double,Double,Double,Double,Double,DueDate)
  fullName: Microsoft.VisualBasic.Financial.PPmt(Double,Double,Double,Double,Double,DueDate)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "傳回<xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>根據定期支付和固定的利率，指定年金的給定期間的本金支付。"
  remarks: "年金是一系列固定的現金付款經過一段時間。 年金可以貸款 （例如房屋貸款） 或 （例如每月節省計劃） 投資。       `Rate`和`NPer`引數必須使用相同的單位表示付款期計算。 例如，如果`Rate`會使用幾個月，計算`NPer`必須也使用來計算月。       所有的引數所負的數字，代表現金支出 （例如存款）現金收入 （例如被除數檢查） 會以正值的數字。"
  example:
  - "This example uses the `PPmt` function to calculate how much of a payment for a specific period is principal when all the payments are of equal value. Given are the interest percentage rate per period (`APR / 12`), the payment period for which the principal portion is desired (`Period`), the total number of payments (`TotPmts`), the present value or principal of the loan (`PVal`), the future value of the loan (`FVal`), and a number that indicates whether the payment is due at the beginning or end of the payment period (`PayType`).  \n  \n [!code-vb[VbVbalrMath#24](~/add/codesnippet/visualbasic/43623fd2-2acb-4eab-9abc-_1.vb)]"
  syntax:
    content: public static double PPmt (double Rate, double Per, double NPer, double PV, double FV = 0, Microsoft.VisualBasic.DueDate Due = Microsoft.VisualBasic.DueDate.EndOfPeriod);
    parameters:
    - id: Rate
      type: System.Double
      description: "必要。 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>指定每期的利率。 比方說，如果您的汽車貸款到達百分之 10 年度百分比率 （年 4 月） 和每月付款，每段期間的速率。 0.1/12，即 0.0083"
    - id: Per
      type: System.Double
      description: "必要。 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>指定範圍 1 到中付款期`NPer`。"
    - id: NPer
      type: System.Double
      description: "必要。 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>指定年金期的總數。 例如，如果四年汽車貸款每月付款，貸款共有 4 x 12 （或 48） 付款期。"
    - id: PV
      type: System.Double
      description: "必要。 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>指定一系列的付款或回條的目前值。 例如，當您買一輛車，貸款金額是 ender 每月付款您要建立的現值。"
    - id: FV
      type: System.Double
      description: "選擇性。 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>指定未來值或您所做的最後付款之後您想要的現金餘額。 例如，貸款的未來值為 $0，因為這是其值後的最後付款。 不過，如果您想要儲存您的子女教育超過 18 歲 50000，然後 $50,000 的未來值。 如果省略，則假設為 0。"
    - id: Due
      type: Microsoft.VisualBasic.DueDate
      description: "選擇性。 型別的物件<xref href=&quot;Microsoft.VisualBasic.DueDate&quot;> </xref> ，指定當付款的到期時間。 這個引數必須是`DueDate.EndOfPeriod`如果付款付款期結束處的到期時間或`DueDate.BegOfPeriod`如果付款期間的開始處的到期時間。 如果省略，`DueDate.EndOfPeriod`假設。"
    return:
      type: System.Double
      description: "傳回<xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>根據定期支付和固定的利率，指定年金的給定期間的本金支付。"
  overload: Microsoft.VisualBasic.Financial.PPmt*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Per</code>&lt;=0 or <code>Per</code> &gt; <code>NPer</code>."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Financial.PV(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  id: PV(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  parent: Microsoft.VisualBasic.Financial
  langs:
  - csharp
  name: PV(Double,Double,Double,Double,DueDate)
  nameWithType: Financial.PV(Double,Double,Double,Double,DueDate)
  fullName: Microsoft.VisualBasic.Financial.PV(Double,Double,Double,Double,DueDate)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "傳回<xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>根據未來支付，按定期支付和固定利率，指定年金的現值。"
  remarks: "年金是一系列固定的現金付款經過一段時間。 年金可以貸款 （例如房屋貸款） 或 （例如每月節省計劃） 投資。       `Rate`和`NPer`引數必須使用相同的單位表示付款期計算。 例如，如果`Rate`會使用幾個月，計算`NPer`必須也使用來計算月。       所有引數，若是現金支出 （例如存款） 會以負號;現金收入 （例如被除數檢查） 會以正值的數字。"
  example:
  - "In this example, the `PV` function returns the present value of an $1,000,000 annuity that will provide $50,000 a year for the next 20 years. Provided are the expected annual percentage rate (`APR`), the total number of payments (`TotPmts`), the amount of each payment (`YrIncome`), the total future value of the investment (`FVal`), and a number that indicates whether each payment is made at the beginning or end of the payment period (`PayType`). Note that `YrIncome` is a negative number because it represents cash paid out from the annuity each year.  \n  \n [!code-vb[VbVbalrMath#25](~/add/codesnippet/visualbasic/0175a2c1-5f6c-4f6b-9587-_1.vb)]"
  syntax:
    content: public static double PV (double Rate, double NPer, double Pmt, double FV = 0, Microsoft.VisualBasic.DueDate Due = Microsoft.VisualBasic.DueDate.EndOfPeriod);
    parameters:
    - id: Rate
      type: System.Double
      description: "必要。 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>指定每期的利率。 比方說，如果您的汽車貸款到達百分之 10 年度百分比率 （年 4 月） 和每月付款，每段期間的速率。 0.1/12，即 0.0083"
    - id: NPer
      type: System.Double
      description: "必要。 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>指定年金期的總數。 例如，如果四年汽車貸款每月付款，貸款有 4 x 12 （或 48） 付款期。"
    - id: Pmt
      type: System.Double
      description: "必要。 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>指定可供每個週期付款。 付款通常會包含主體，以及利息期間不會變更。"
    - id: FV
      type: System.Double
      description: "選擇性。 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>指定您的付款最終之後您想要的未來值或現金平衡。 例如，貸款的未來值為 $0，因為這是其值後的最後付款。 不過，如果您想要儲存您的子女教育超過 18 歲 50000，然後 $50,000 的未來值。 如果省略，則假設為 0。"
    - id: Due
      type: Microsoft.VisualBasic.DueDate
      description: "選擇性。 型別的物件<xref href=&quot;Microsoft.VisualBasic.DueDate&quot;> </xref> ，指定當付款的到期時間。 這個引數必須是`DueDate.EndOfPeriod`如果付款付款期結束處的到期時間或`DueDate.BegOfPeriod`如果付款期間的開始處的到期時間。 如果省略，`DueDate.EndOfPeriod`假設。"
    return:
      type: System.Double
      description: "傳回<xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>根據未來支付，按定期支付和固定利率，指定年金的現值。"
  overload: Microsoft.VisualBasic.Financial.PV*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Financial.Rate(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate,System.Double)
  id: Rate(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate,System.Double)
  parent: Microsoft.VisualBasic.Financial
  langs:
  - csharp
  name: Rate(Double,Double,Double,Double,DueDate,Double)
  nameWithType: Financial.Rate(Double,Double,Double,Double,DueDate,Double)
  fullName: Microsoft.VisualBasic.Financial.Rate(Double,Double,Double,Double,DueDate,Double)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "傳回<xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>指定每的年金期的利率。"
  remarks: "年金是一系列固定的現金付款經過一段時間。 年金可以貸款 （例如房屋貸款） 或 （例如每月節省計劃） 投資。       所有引數，若是現金支出 （例如存款） 會以負號;現金收入 （例如被除數檢查） 會以正值的數字。       `Rate`計算方式為反覆項目。 開始值是`Guess`，`Rate`循環的計算，直到 0.00001%為止。 如果`Rate`找不到 20 之後的結果會嘗試，它將會失敗。 如果您的猜測是百分之 10 和`Rate`失敗，嘗試不同的值`Guess`。"
  example:
  - "This example uses the `Rate` function to calculate the interest rate of a loan given the total number of payments (`TotPmts`), the amount of the loan payment (`Payment`), the present value or principal of the loan (`PVal`), the future value of the loan (`FVal`), a number that indicates whether the payment is due at the beginning or end of the payment period (`PayType`), and an approximation of the expected interest rate (`Guess`).  \n  \n [!code-vb[VbVbalrMath#2](~/add/codesnippet/visualbasic/ea19cd36-8223-44a7-9131-_1.vb)]"
  syntax:
    content: public static double Rate (double NPer, double Pmt, double PV, double FV = 0, Microsoft.VisualBasic.DueDate Due = Microsoft.VisualBasic.DueDate.EndOfPeriod, double Guess = 0.1);
    parameters:
    - id: NPer
      type: System.Double
      description: "必要。 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>指定年金期的總數。 例如，如果四年汽車貸款每月付款，貸款共有 4 * 12 （或 48） 付款期。"
    - id: Pmt
      type: System.Double
      description: "必要。 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>指定可供每個週期付款。 付款通常會包含主體與感興趣的利息存留期間不會變更。"
    - id: PV
      type: System.Double
      description: "必要。 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>指定目前值或一系列的付款或回條的目前值。 例如，當您買一輛車，貸款金額是 ender 每月付款您要建立的現值。"
    - id: FV
      type: System.Double
      description: "選擇性。 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>指定您的付款最終之後您想要的未來值或現金平衡。 例如，貸款的未來值為 $0，因為這是其值後的最後付款。 不過，如果您想要儲存您的子女教育超過 18 歲 50000，然後 $50,000 的未來值。 如果省略，則假設為 0。"
    - id: Due
      type: Microsoft.VisualBasic.DueDate
      description: "選擇性。 型別的物件<xref href=&quot;Microsoft.VisualBasic.DueDate&quot;> </xref> ，指定當付款的到期時間。 這個引數必須是`DueDate.EndOfPeriod`如果付款付款期結束處的到期時間或`DueDate.BegOfPeriod`如果付款期間的開始處的到期時間。 如果省略，`DueDate.EndOfPeriod`假設。"
    - id: Guess
      type: System.Double
      description: "選擇性。 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>指定估計的值由<xref uid=&quot;langword_csharp_Rate&quot; name=&quot;Rate&quot; href=&quot;&quot;> </xref>。 如果省略，`Guess`是 0.1 （10%)。"
    return:
      type: System.Double
      description: "傳回<xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>指定每的年金期的利率。"
  overload: Microsoft.VisualBasic.Financial.Rate*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>NPer</code> &lt;= 0."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Financial.SLN(System.Double,System.Double,System.Double)
  id: SLN(System.Double,System.Double,System.Double)
  parent: Microsoft.VisualBasic.Financial
  langs:
  - csharp
  name: SLN(Double,Double,Double)
  nameWithType: Financial.SLN(Double,Double,Double)
  fullName: Microsoft.VisualBasic.Financial.SLN(Double,Double,Double)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "傳回<xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>折舊直線的資產單期。"
  remarks: "必須為相同的單位表示折舊期間`Life`引數。 所有引數必須是正數。"
  example:
  - "This example uses the `SLN` function to return the straight-line depreciation of an asset for a single period given the asset's initial cost (`InitCost`), the salvage value at the end of the asset's useful life (`SalvageVal`), and the total life of the asset in years (`LifeTime`).  \n  \n [!code-vb[VbVbalrMath#3](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._10_1.vb)]"
  syntax:
    content: public static double SLN (double Cost, double Salvage, double Life);
    parameters:
    - id: Cost
      type: System.Double
      description: "必要。 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>指定的資產的初始成本。"
    - id: Salvage
      type: System.Double
      description: "必要。 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>指定在其有用的生命週期結束的資產值。"
    - id: Life
      type: System.Double
      description: "必要。 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>指定資產使用年限長度。"
    return:
      type: System.Double
      description: "傳回<xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>折舊直線的資產單期。"
  overload: Microsoft.VisualBasic.Financial.SLN*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Life</code> = 0."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Financial.SYD(System.Double,System.Double,System.Double,System.Double)
  id: SYD(System.Double,System.Double,System.Double,System.Double)
  parent: Microsoft.VisualBasic.Financial
  langs:
  - csharp
  name: SYD(Double,Double,Double,Double)
  nameWithType: Financial.SYD(Double,Double,Double,Double)
  fullName: Microsoft.VisualBasic.Financial.SYD(Double,Double,Double,Double)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "傳回<xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>折舊總和的年數的資產在指定期間內。"
  remarks: "`Life`和`Period`引數必須以相同的單位表示。 例如，如果`Life`指定月數`Period`也必須指定以月為單位。 所有引數必須是正數。"
  example:
  - "This example uses the `SYD` function to return the depreciation of an asset for a specified period given the asset's initial cost (`InitCost`), the salvage value at the end of the asset's useful life (`SalvageVal`), and the total life of the asset in years (`LifeTime`).  \n  \n [!code-vb[VbVbalrMath#3](~/add/codesnippet/visualbasic/9fc7d5a0-c6cb-4861-b899-_1.vb)]"
  syntax:
    content: public static double SYD (double Cost, double Salvage, double Life, double Period);
    parameters:
    - id: Cost
      type: System.Double
      description: "必要。 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>指定資產的初始成本。"
    - id: Salvage
      type: System.Double
      description: "必要。 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>如果指定為資產達到其有用的生命週期的結束值。"
    - id: Life
      type: System.Double
      description: "必要。 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>指定資產使用年限長度。"
    - id: Period
      type: System.Double
      description: "必要。 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>指定計算資產折舊期間。"
    return:
      type: System.Double
      description: "傳回<xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>折舊總和的年數的資產在指定期間內。"
  overload: Microsoft.VisualBasic.Financial.SYD*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Salvage</code>&lt; 0, <code>Period</code> &gt; <code>Life</code>, or <code>Period</code> &lt;=0."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.DivideByZeroException
  isExternal: true
  name: System.DivideByZeroException
- uid: Microsoft.VisualBasic.Financial.DDB(System.Double,System.Double,System.Double,System.Double,System.Double)
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: DDB(Double,Double,Double,Double,Double)
  nameWithType: Financial.DDB(Double,Double,Double,Double,Double)
  fullName: Microsoft.VisualBasic.Financial.DDB(Double,Double,Double,Double,Double)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: Microsoft.VisualBasic.Financial.FV(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: FV(Double,Double,Double,Double,DueDate)
  nameWithType: Financial.FV(Double,Double,Double,Double,DueDate)
  fullName: Microsoft.VisualBasic.Financial.FV(Double,Double,Double,Double,DueDate)
- uid: Microsoft.VisualBasic.DueDate
  parent: Microsoft.VisualBasic
  isExternal: false
  name: DueDate
  nameWithType: DueDate
  fullName: Microsoft.VisualBasic.DueDate
- uid: Microsoft.VisualBasic.Financial.IPmt(System.Double,System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: IPmt(Double,Double,Double,Double,Double,DueDate)
  nameWithType: Financial.IPmt(Double,Double,Double,Double,Double,DueDate)
  fullName: Microsoft.VisualBasic.Financial.IPmt(Double,Double,Double,Double,Double,DueDate)
- uid: Microsoft.VisualBasic.Financial.IRR(System.Double[]@,System.Double)
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: IRR(Double[],Double)
  nameWithType: Financial.IRR(Double[],Double)
  fullName: Microsoft.VisualBasic.Financial.IRR(Double[],Double)
- uid: System.Double[]
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double[]
  spec.csharp:
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: Double[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.VisualBasic.Financial.MIRR(System.Double[]@,System.Double,System.Double)
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: MIRR(Double[],Double,Double)
  nameWithType: Financial.MIRR(Double[],Double,Double)
  fullName: Microsoft.VisualBasic.Financial.MIRR(Double[],Double,Double)
- uid: Microsoft.VisualBasic.Financial.NPer(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: NPer(Double,Double,Double,Double,DueDate)
  nameWithType: Financial.NPer(Double,Double,Double,Double,DueDate)
  fullName: Microsoft.VisualBasic.Financial.NPer(Double,Double,Double,Double,DueDate)
- uid: Microsoft.VisualBasic.Financial.NPV(System.Double,System.Double[]@)
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: NPV(Double,Double[])
  nameWithType: Financial.NPV(Double,Double[])
  fullName: Microsoft.VisualBasic.Financial.NPV(Double,Double[])
- uid: Microsoft.VisualBasic.Financial.Pmt(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: Pmt(Double,Double,Double,Double,DueDate)
  nameWithType: Financial.Pmt(Double,Double,Double,Double,DueDate)
  fullName: Microsoft.VisualBasic.Financial.Pmt(Double,Double,Double,Double,DueDate)
- uid: Microsoft.VisualBasic.Financial.PPmt(System.Double,System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: PPmt(Double,Double,Double,Double,Double,DueDate)
  nameWithType: Financial.PPmt(Double,Double,Double,Double,Double,DueDate)
  fullName: Microsoft.VisualBasic.Financial.PPmt(Double,Double,Double,Double,Double,DueDate)
- uid: Microsoft.VisualBasic.Financial.PV(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: PV(Double,Double,Double,Double,DueDate)
  nameWithType: Financial.PV(Double,Double,Double,Double,DueDate)
  fullName: Microsoft.VisualBasic.Financial.PV(Double,Double,Double,Double,DueDate)
- uid: Microsoft.VisualBasic.Financial.Rate(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate,System.Double)
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: Rate(Double,Double,Double,Double,DueDate,Double)
  nameWithType: Financial.Rate(Double,Double,Double,Double,DueDate,Double)
  fullName: Microsoft.VisualBasic.Financial.Rate(Double,Double,Double,Double,DueDate,Double)
- uid: Microsoft.VisualBasic.Financial.SLN(System.Double,System.Double,System.Double)
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: SLN(Double,Double,Double)
  nameWithType: Financial.SLN(Double,Double,Double)
  fullName: Microsoft.VisualBasic.Financial.SLN(Double,Double,Double)
- uid: Microsoft.VisualBasic.Financial.SYD(System.Double,System.Double,System.Double,System.Double)
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: SYD(Double,Double,Double,Double)
  nameWithType: Financial.SYD(Double,Double,Double,Double)
  fullName: Microsoft.VisualBasic.Financial.SYD(Double,Double,Double,Double)
- uid: Microsoft.VisualBasic.Financial.DDB*
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: DDB
  nameWithType: Financial.DDB
- uid: Microsoft.VisualBasic.Financial.FV*
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: FV
  nameWithType: Financial.FV
- uid: Microsoft.VisualBasic.Financial.IPmt*
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: IPmt
  nameWithType: Financial.IPmt
- uid: Microsoft.VisualBasic.Financial.IRR*
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: IRR
  nameWithType: Financial.IRR
- uid: Microsoft.VisualBasic.Financial.MIRR*
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: MIRR
  nameWithType: Financial.MIRR
- uid: Microsoft.VisualBasic.Financial.NPer*
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: NPer
  nameWithType: Financial.NPer
- uid: Microsoft.VisualBasic.Financial.NPV*
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: NPV
  nameWithType: Financial.NPV
- uid: Microsoft.VisualBasic.Financial.Pmt*
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: Pmt
  nameWithType: Financial.Pmt
- uid: Microsoft.VisualBasic.Financial.PPmt*
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: PPmt
  nameWithType: Financial.PPmt
- uid: Microsoft.VisualBasic.Financial.PV*
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: PV
  nameWithType: Financial.PV
- uid: Microsoft.VisualBasic.Financial.Rate*
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: Rate
  nameWithType: Financial.Rate
- uid: Microsoft.VisualBasic.Financial.SLN*
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: SLN
  nameWithType: Financial.SLN
- uid: Microsoft.VisualBasic.Financial.SYD*
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: SYD
  nameWithType: Financial.SYD
