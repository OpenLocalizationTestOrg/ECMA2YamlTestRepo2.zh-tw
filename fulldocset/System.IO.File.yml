### YamlMime:ManagedReference
items:
- uid: System.IO.File
  id: File
  children:
  - System.IO.File.AppendAllLines(System.String,System.Collections.Generic.IEnumerable{System.String})
  - System.IO.File.AppendAllLines(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding)
  - System.IO.File.AppendAllText(System.String,System.String)
  - System.IO.File.AppendAllText(System.String,System.String,System.Text.Encoding)
  - System.IO.File.AppendText(System.String)
  - System.IO.File.Copy(System.String,System.String)
  - System.IO.File.Copy(System.String,System.String,System.Boolean)
  - System.IO.File.Create(System.String)
  - System.IO.File.Create(System.String,System.Int32)
  - System.IO.File.Create(System.String,System.Int32,System.IO.FileOptions)
  - System.IO.File.Create(System.String,System.Int32,System.IO.FileOptions,System.Security.AccessControl.FileSecurity)
  - System.IO.File.CreateText(System.String)
  - System.IO.File.Decrypt(System.String)
  - System.IO.File.Delete(System.String)
  - System.IO.File.Encrypt(System.String)
  - System.IO.File.Exists(System.String)
  - System.IO.File.GetAccessControl(System.String)
  - System.IO.File.GetAccessControl(System.String,System.Security.AccessControl.AccessControlSections)
  - System.IO.File.GetAttributes(System.String)
  - System.IO.File.GetCreationTime(System.String)
  - System.IO.File.GetCreationTimeUtc(System.String)
  - System.IO.File.GetLastAccessTime(System.String)
  - System.IO.File.GetLastAccessTimeUtc(System.String)
  - System.IO.File.GetLastWriteTime(System.String)
  - System.IO.File.GetLastWriteTimeUtc(System.String)
  - System.IO.File.Move(System.String,System.String)
  - System.IO.File.Open(System.String,System.IO.FileMode)
  - System.IO.File.Open(System.String,System.IO.FileMode,System.IO.FileAccess)
  - System.IO.File.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)
  - System.IO.File.OpenRead(System.String)
  - System.IO.File.OpenText(System.String)
  - System.IO.File.OpenWrite(System.String)
  - System.IO.File.ReadAllBytes(System.String)
  - System.IO.File.ReadAllLines(System.String)
  - System.IO.File.ReadAllLines(System.String,System.Text.Encoding)
  - System.IO.File.ReadAllText(System.String)
  - System.IO.File.ReadAllText(System.String,System.Text.Encoding)
  - System.IO.File.ReadLines(System.String)
  - System.IO.File.ReadLines(System.String,System.Text.Encoding)
  - System.IO.File.Replace(System.String,System.String,System.String)
  - System.IO.File.Replace(System.String,System.String,System.String,System.Boolean)
  - System.IO.File.SetAccessControl(System.String,System.Security.AccessControl.FileSecurity)
  - System.IO.File.SetAttributes(System.String,System.IO.FileAttributes)
  - System.IO.File.SetCreationTime(System.String,System.DateTime)
  - System.IO.File.SetCreationTimeUtc(System.String,System.DateTime)
  - System.IO.File.SetLastAccessTime(System.String,System.DateTime)
  - System.IO.File.SetLastAccessTimeUtc(System.String,System.DateTime)
  - System.IO.File.SetLastWriteTime(System.String,System.DateTime)
  - System.IO.File.SetLastWriteTimeUtc(System.String,System.DateTime)
  - System.IO.File.WriteAllBytes(System.String,System.Byte[])
  - System.IO.File.WriteAllLines(System.String,System.Collections.Generic.IEnumerable{System.String})
  - System.IO.File.WriteAllLines(System.String,System.String[])
  - System.IO.File.WriteAllLines(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding)
  - System.IO.File.WriteAllLines(System.String,System.String[],System.Text.Encoding)
  - System.IO.File.WriteAllText(System.String,System.String)
  - System.IO.File.WriteAllText(System.String,System.String,System.Text.Encoding)
  langs:
  - csharp
  name: File
  nameWithType: File
  fullName: System.IO.File
  type: Class
  summary: "提供靜態方法，建立、 複製、 刪除、 移動和開啟單一檔案，並協助建立<xref href=&quot;System.IO.FileStream&quot;></xref>物件。       若要瀏覽此類型的.NET Framework 原始程式碼，請參閱[參考來源](http://referencesource.microsoft.com/#mscorlib/system/io/file.cs#1c7421e464f67b7e)。"
  remarks: "> [!NOTE]\n>  To view the .NET Framework source code for this type, see the [Reference Source](http://referencesource.microsoft.com/#mscorlib/system/io/file.cs#1c7421e464f67b7e). You can browse through the source code online, download the reference for offline viewing, and step through the sources (including patches and updates) during debugging; see [instructions](http://referencesource.microsoft.com/).  \n  \n Use the File class for typical operations such as copying, moving, renaming, creating, opening, deleting, and appending to a single file at a time. You can also use the File class to get and set file attributes or <xref:System.DateTime> information related to the creation, access, and writing of a file. If you want to perform operations on multiple files, see <xref:System.IO.Directory.GetFiles%2A?displayProperty=fullName> or <xref:System.IO.DirectoryInfo.GetFiles%2A?displayProperty=fullName>.  \n  \n Many of the File methods return other I/O types when you create or open files. You can use these other types to further manipulate a file. For more information, see specific File members such as <xref:System.IO.File.OpenText%2A>, <xref:System.IO.File.CreateText%2A>, or <xref:System.IO.File.Create%2A>.  \n  \n Because all File methods are static, it might be more efficient to use a File method rather than a corresponding <xref:System.IO.FileInfo> instance method if you want to perform only one action. All File methods require the path to the file that you are manipulating.  \n  \n The static methods of the File class perform security checks on all methods. If you are going to reuse an object several times, consider using the corresponding instance method of <xref:System.IO.FileInfo> instead, because the security check will not always be necessary.  \n  \n By default, full read/write access to new files is granted to all users.  \n  \n The following table describes the enumerations that are used to customize the behavior of various File methods.  \n  \n|Enumeration|Description|  \n|-----------------|-----------------|  \n|<xref:System.IO.FileAccess>|Specifies read and write access to a file.|  \n|<xref:System.IO.FileShare>|Specifies the level of access permitted for a file that is already in use.|  \n|<xref:System.IO.FileMode>|Specifies whether the contents of an existing file are preserved or overwritten, and whether requests to create an existing file cause an exception.|  \n  \n> [!NOTE]\n>  In members that accept a path as an input string, that path must be well-formed or an exception is raised. For example, if a path is fully qualified but begins with a space, the path is not trimmed in methods of the class. Therefore, the path is malformed and an exception is raised. Similarly, a path or a combination of paths cannot be fully qualified twice. For example, \"c:\\temp c:\\windows\" also raises an exception in most cases. Ensure that your paths are well-formed when using methods that accept a path string.  \n  \n In members that accept a path, the path can refer to a file or just a directory. The specified path can also refer to a relative path or a Universal Naming Convention (UNC) path for a server and share name. For example, all the following are acceptable paths:  \n  \n-   \"c:\\\\\\MyDir\\\\\\MyFile.txt\" in C#, or \"c:\\MyDir\\MyFile.txt\" in Visual Basic.  \n  \n-   \"c:\\\\\\MyDir\" in C#, or \"c:\\MyDir\" in Visual Basic.  \n  \n-   \"MyDir\\\\\\MySubdir\" in C#, or \"MyDir\\MySubDir\" in Visual Basic.  \n  \n-   \"\\\\\\\\\\\\\\MyServer\\\\\\MyShare\" in C#, or \"\\\\\\MyServer\\MyShare\" in Visual Basic.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example demonstrates how to use the File class to check whether a file exists, and depending on the result, either create a new file and write to it, or open the existing file and read from it. Before running the code, create a `c:\\temp` folder.  \n  \n [!code-cpp[File Class Example#1](~/add/codesnippet/cpp/t-system.io.file_1.cpp)]\n [!code-cs[File Class Example#1](~/add/codesnippet/csharp/t-system.io.file_1.cs)]\n [!code-vb[File Class Example#1](~/add/codesnippet/visualbasic/t-system.io.file_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public static class File
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IO.File.AppendAllLines(System.String,System.Collections.Generic.IEnumerable{System.String})
  id: AppendAllLines(System.String,System.Collections.Generic.IEnumerable{System.String})
  parent: System.IO.File
  langs:
  - csharp
  name: AppendAllLines(String,IEnumerable<String>)
  nameWithType: File.AppendAllLines(String,IEnumerable<String>)
  fullName: System.IO.File.AppendAllLines(String,IEnumerable<String>)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "檔案中，加入幾行內容，然後關閉檔案。 如果指定的檔案不存在，這個方法會建立一個檔案，將指定的程式行寫入檔案，然後關閉檔案。"
  remarks: "如果它不存在，但它不會建立新的目錄，此方法會建立檔案。 因此，值`path`參數必須包含現有的目錄。"
  example:
  - "The following example writes selected lines from a sample data file to a file, and then appends more lines. The directory named `temp` on drive C must exist for the example to complete successfully.  \n  \n [!code-cs[System.IO.File.WriteAllAppendAll#1](~/add/codesnippet/csharp/d3653703-4b0a-4cbe-b582-_1.cs)]\n [!code-vb[System.IO.File.WriteAllAppendAll#1](~/add/codesnippet/visualbasic/d3653703-4b0a-4cbe-b582-_1.vb)]"
  syntax:
    content: public static void AppendAllLines (string path, System.Collections.Generic.IEnumerable<string> contents);
    parameters:
    - id: path
      type: System.String
      description: "要附加的程式碼列的檔案。 如果不存在，會建立檔案。"
    - id: contents
      type: System.Collections.Generic.IEnumerable{System.String}
      description: "要附加至檔案的行。"
  overload: System.IO.File.AppendAllLines*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>為零長度字串、 只包含空格，或包含所定義的一個更多的無效字元<xref:System.IO.Path.GetInvalidPathChars*>方法。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Either<code> path </code>or <code>contents</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "<code>path</code>無效 （例如，此目錄不存在或它位於未對應的磁碟機上）。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "所指定的檔案<code> path </code>找不到。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "開啟檔案時發生 I/O 錯誤。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "<code>path</code>超過系統定義的長度上限。 例如，在 Windows 架構的平台，路徑必須少於 248 個字元，檔案名稱必須少於 260 個字元。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>是無效的格式。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "呼叫端沒有寫入檔案的權限。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>指定了唯讀的檔案。       -或者-目前的平台不支援此作業。       -或-<code>path</code>是目錄。"
  platform:
  - net462
- uid: System.IO.File.AppendAllLines(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding)
  id: AppendAllLines(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding)
  parent: System.IO.File
  langs:
  - csharp
  name: AppendAllLines(String,IEnumerable<String>,Encoding)
  nameWithType: File.AppendAllLines(String,IEnumerable<String>,Encoding)
  fullName: System.IO.File.AppendAllLines(String,IEnumerable<String>,Encoding)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "使用指定的編碼，加入幾行內容的檔案，然後關閉檔案。 如果指定的檔案不存在，這個方法會建立一個檔案，將指定的程式行寫入檔案，然後關閉檔案。"
  remarks: "如果它不存在，但它不會建立新的目錄，此方法會建立檔案。 因此，值`path`參數必須包含現有的目錄。       您可以使用這個方法來建立包含下列檔案:-結果[LINQ to Objects](~/add/includes/ajax-current-ext-md.md)取得使用的查詢上的檔案、 行<xref:System.IO.File.ReadLines%2A>方法。</xref:System.IO.File.ReadLines%2A>      -集合中實作的內容<xref:System.Collections.Generic.IEnumerable%601>的字串。</xref:System.Collections.Generic.IEnumerable%601>"
  syntax:
    content: public static void AppendAllLines (string path, System.Collections.Generic.IEnumerable<string> contents, System.Text.Encoding encoding);
    parameters:
    - id: path
      type: System.String
      description: "要附加的程式碼列的檔案。 如果不存在，會建立檔案。"
    - id: contents
      type: System.Collections.Generic.IEnumerable{System.String}
      description: "要附加至檔案的行。"
    - id: encoding
      type: System.Text.Encoding
      description: "要使用字元編碼。"
  overload: System.IO.File.AppendAllLines*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>為零長度字串、 只包含空格，或包含所定義的一個更多的無效字元<xref:System.IO.Path.GetInvalidPathChars*>方法。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Either<code> path</code>, <code>contents</code>, or <code>encoding</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "<code>path</code>無效 （例如，此目錄不存在或它位於未對應的磁碟機上）。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "所指定的檔案<code> path </code>找不到。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "開啟檔案時發生 I/O 錯誤。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "<code>path</code>超過系統定義的長度上限。 例如，在 Windows 架構的平台，路徑必須少於 248 個字元，檔案名稱必須少於 260 個字元。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>是無效的格式。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "呼叫端沒有必要的權限。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>指定了唯讀的檔案。       -或者-目前的平台不支援此作業。       -或-<code>path</code>是目錄。       -或者-呼叫端沒有必要的權限。"
  platform:
  - net462
- uid: System.IO.File.AppendAllText(System.String,System.String)
  id: AppendAllText(System.String,System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: AppendAllText(String,String)
  nameWithType: File.AppendAllText(String,String)
  fullName: System.IO.File.AppendAllText(String,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "開啟檔案，將指定的字串附加至檔案，，然後關閉檔案。 如果檔案不存在，這個方法會建立一個檔案，將指定的字串寫入檔案，然後關閉檔案。"
  remarks: "指定字串和檔案路徑，這個方法開啟指定的檔案、 字串附加至檔案的結尾，然後關閉檔案。 即使引發例外狀況時要使用這個方法，關閉保證的檔案控制代碼。       如果它不存在，但它不會建立新的目錄，此方法會建立檔案。 因此，值`path`參數必須包含現有的目錄。"
  example:
  - "The following code example demonstrates the use of the AppendAllText method to add extra text to the end of a file. In this example, a file is created if it doesn't already exist, and text is added to it. However, the directory named `temp` on drive C must exist for the example to complete successfully.  \n  \n [!code-vb[System.IO.File.AllText#00](~/add/codesnippet/visualbasic/m-system.io.file.appenda_0_1.vb)]\n [!code-cs[System.IO.File.AllText#00](~/add/codesnippet/csharp/m-system.io.file.appenda_0_1.cs)]"
  syntax:
    content: public static void AppendAllText (string path, string contents);
    parameters:
    - id: path
      type: System.String
      description: "要附加指定的字串的檔案。"
    - id: contents
      type: System.String
      description: "要附加至檔案的字串。"
  overload: System.IO.File.AppendAllText*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>為零長度字串、 只包含空格，或包含一或多個無效字元所定義的<xref:System.IO.Path.InvalidPathChars>。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "指定的路徑、 檔案名稱，或兩者都超出系統定義的長度上限。 例如，windows 平台上，路徑必須少於 248 個字元，和檔案名稱必須少於 260 個字元。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "指定的路徑無效 （例如，此目錄不存在或它位於未對應的磁碟機上）。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "開啟檔案時發生 I/O 錯誤。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>指定為唯讀的檔案。       -或者-目前的平台不支援此作業。       -或-<code>path</code>指定了目錄。       -或者-呼叫端沒有必要的權限。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>是無效的格式。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "呼叫端沒有必要的權限。"
  platform:
  - net462
- uid: System.IO.File.AppendAllText(System.String,System.String,System.Text.Encoding)
  id: AppendAllText(System.String,System.String,System.Text.Encoding)
  parent: System.IO.File
  langs:
  - csharp
  name: AppendAllText(String,String,Encoding)
  nameWithType: File.AppendAllText(String,String,Encoding)
  fullName: System.IO.File.AppendAllText(String,String,Encoding)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "將指定的字串附加至檔案，建立檔案，如果不存在。"
  remarks: "指定字串和檔案路徑，這個方法開啟指定的檔案、 字串附加至使用指定的編碼，檔案的結尾，然後關閉檔案。 即使引發例外狀況時要使用這個方法，關閉保證的檔案控制代碼。       如果它不存在，但它不會建立新的目錄，此方法會建立檔案。 因此，值`path`參數必須包含現有的目錄。"
  example:
  - "The following code example demonstrates the use of the AppendAllText method to add extra text to the end of a file. In this example, a file is created if it doesn't already exist, and text is added to it. However, the directory named `temp` on drive C must exist for the example to complete successfully.  \n  \n [!code-cs[System.IO.File.AllText_Encoding#00](~/add/codesnippet/csharp/m-system.io.file.appenda_1_1.cs)]\n [!code-vb[System.IO.File.AllText_Encoding#00](~/add/codesnippet/visualbasic/m-system.io.file.appenda_1_1.vb)]"
  syntax:
    content: public static void AppendAllText (string path, string contents, System.Text.Encoding encoding);
    parameters:
    - id: path
      type: System.String
      description: "要附加指定的字串的檔案。"
    - id: contents
      type: System.String
      description: "要附加至檔案的字串。"
    - id: encoding
      type: System.Text.Encoding
      description: "要使用字元編碼。"
  overload: System.IO.File.AppendAllText*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>為零長度字串、 只包含空格，或包含一或多個無效字元所定義的<xref:System.IO.Path.InvalidPathChars>。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "指定的路徑、 檔案名稱，或兩者都超出系統定義的長度上限。 例如，windows 平台上，路徑必須少於 248 個字元，和檔案名稱必須少於 260 個字元。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "指定的路徑無效 （例如，此目錄不存在或它位於未對應的磁碟機上）。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "開啟檔案時發生 I/O 錯誤。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>指定為唯讀的檔案。       -或者-目前的平台不支援此作業。       -或-<code>path</code>指定了目錄。       -或者-呼叫端沒有必要的權限。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>是無效的格式。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "呼叫端沒有必要的權限。"
  platform:
  - net462
- uid: System.IO.File.AppendText(System.String)
  id: AppendText(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: AppendText(String)
  nameWithType: File.AppendText(String)
  fullName: System.IO.File.AppendText(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "建立<xref:System.IO.StreamWriter>utf-8 編碼將文字附加至現有的檔案，或新檔案如果指定的檔案不存在。</xref:System.IO.StreamWriter>"
  remarks: "這個方法相當於<xref:System.IO.StreamWriter.%23ctor%28System.String%2CSystem.Boolean%29>建構函式多載。</xref:System.IO.StreamWriter.%23ctor%28System.String%2CSystem.Boolean%29> 如果指定的檔案`path`不存在，則會建立它。 如果檔案不存在，寫入作業<xref:System.IO.StreamWriter>將文字附加至檔案。</xref:System.IO.StreamWriter> 讀取檔案開啟時，允許額外執行緒。       `path`參數可以指定相對或絕對路徑資訊。 相對路徑的資訊會解譯為與目前工作目錄。 若要取得目前工作目錄，請參閱<xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A>       `path`參數不區分大小寫。       如需的一般 I/O 工作清單，請參閱[一般 I/O 工作](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following example appends text to a file. The method creates a new file if the file doesn’t exist. However, the directory named `temp` on drive C must exist for the example to complete successfully.  \n  \n [!code-cpp[File_AppendText#1](~/add/codesnippet/cpp/m-system.io.file.appendt_1.cpp)]\n [!code-cs[File_AppendText#1](~/add/codesnippet/csharp/m-system.io.file.appendt_1.cs)]\n [!code-vb[File_AppendText#1](~/add/codesnippet/visualbasic/m-system.io.file.appendt_1.vb)]"
  syntax:
    content: public static System.IO.StreamWriter AppendText (string path);
    parameters:
    - id: path
      type: System.String
      description: "要附加至檔案的路徑。"
    return:
      type: System.IO.StreamWriter
      description: "資料流寫入器，會附加 utf-8 編碼的文字至指定的檔案或新的檔案。"
  overload: System.IO.File.AppendText*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "呼叫端沒有必要的權限。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>為零長度字串、 只包含空格，或包含一或多個無效字元所定義的<xref:System.IO.Path.InvalidPathChars>。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "指定的路徑、 檔案名稱，或兩者都超出系統定義的長度上限。 例如，windows 平台上，路徑必須少於 248 個字元，和檔案名稱必須少於 260 個字元。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "指定的路徑無效 （例如，此目錄不存在或它位於未對應的磁碟機上）。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>是無效的格式。"
  platform:
  - net462
- uid: System.IO.File.Copy(System.String,System.String)
  id: Copy(System.String,System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: Copy(String,String)
  nameWithType: File.Copy(String,String)
  fullName: System.IO.File.Copy(String,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "將現有的檔案複製到新的檔案。 不允許覆寫相同名稱的檔案。"
  remarks: "這個方法相當於<xref:System.IO.File.Copy%28System.String%2CSystem.String%2CSystem.Boolean%29>方法多載`overwrite`參數設定為`false`。</xref:System.IO.File.Copy%28System.String%2CSystem.String%2CSystem.Boolean%29>       `sourceFileName`和`destFileName`參數可以指定相對或絕對路徑資訊。 相對路徑的資訊會解譯為與目前工作目錄。 若要取得目前工作目錄，請參閱<xref:System.IO.Directory.GetCurrentDirectory%2A?displayProperty=fullName>方法。</xref:System.IO.Directory.GetCurrentDirectory%2A?displayProperty=fullName> 這個方法不支援萬用字元參數中。       複製的檔案會保留原始的檔案的屬性。"
  example:
  - "The following example copies files to the C:\\archives\\2008 backup folder. It uses the two overloads of the <xref:System.IO.File.Copy%2A> method as follows:  \n  \n-   It first uses the Copymethod overload to copy text (.txt) files. The code demonstrates that this overload does not allow overwriting files that were already copied.  \n  \n-   It then uses the <xref:System.IO.File.Copy%28System.String%2CSystem.String%2CSystem.Boolean%29?displayProperty=fullName> method overload to copy pictures (.jpg files). The code demonstrates that this overload does allow overwriting files that were already copied.  \n  \n [!code-cs[FileCopyDelete#1](~/add/codesnippet/csharp/m-system.io.file.copy-sy_0_1.cs)]\n [!code-vb[FileCopyDelete#1](~/add/codesnippet/visualbasic/m-system.io.file.copy-sy_0_1.vb)]"
  syntax:
    content: public static void Copy (string sourceFileName, string destFileName);
    parameters:
    - id: sourceFileName
      type: System.String
      description: "要複製的檔案。"
    - id: destFileName
      type: System.String
      description: "目的地檔案的名稱。 這不可以是目錄或現有的檔案。"
  overload: System.IO.File.Copy*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "呼叫端沒有必要的權限。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>sourceFileName</code>或<code>destFileName</code>為零長度字串、 只包含空格，或包含一或多個無效字元所定義的<xref:System.IO.Path.InvalidPathChars>。       -<code>sourceFileName</code>或<code>destFileName</code>指定的目錄。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>sourceFileName</code>or <code>destFileName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "指定的路徑、 檔案名稱，或兩者都超出系統定義的長度上限。 例如，windows 平台上，路徑必須少於 248 個字元，和檔案名稱必須少於 260 個字元。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "中指定的路徑<code> sourceFileName </code>或<code> destFileName </code>無效 （例如，它位於未對應的磁碟機上）。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "<code>sourceFileName</code>找不到。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<code>destFileName</code>存在。       -或者-發生 I/O 錯誤。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>sourceFileName</code>或<code>destFileName</code>格式無效。"
  platform:
  - net462
- uid: System.IO.File.Copy(System.String,System.String,System.Boolean)
  id: Copy(System.String,System.String,System.Boolean)
  parent: System.IO.File
  langs:
  - csharp
  name: Copy(String,String,Boolean)
  nameWithType: File.Copy(String,String,Boolean)
  fullName: System.IO.File.Copy(String,String,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "將現有的檔案複製到新的檔案。 允許覆寫相同名稱的檔案。"
  remarks: "`sourceFileName`和`destFileName`參數可以指定相對或絕對路徑資訊。 相對路徑的資訊會解譯為與目前工作目錄。 這個方法不支援萬用字元參數中。       複製的檔案會保留原始的檔案的屬性。       如需的一般 I/O 工作清單，請參閱[一般 I/O 工作](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following example copies files to the C:\\archives\\2008 backup folder. It uses the two overloads of the <xref:System.IO.File.Copy%2A> method as follows:  \n  \n-   It first uses the <xref:System.IO.File.Copy%28System.String%2CSystem.String%29?displayProperty=fullName> method overload to copy text (.txt) files. The code demonstrates that this overload does not allow overwriting files that were already copied.  \n  \n It then uses the Copy method overload to copy pictures (.jpg files). The code demonstrates that this overload does allow overwriting files that were already copied.  \n  \n [!code-cs[FileCopyDelete#1](~/add/codesnippet/csharp/m-system.io.file.copy-sy_1_1.cs)]\n [!code-vb[FileCopyDelete#1](~/add/codesnippet/visualbasic/m-system.io.file.copy-sy_1_1.vb)]"
  syntax:
    content: public static void Copy (string sourceFileName, string destFileName, bool overwrite);
    parameters:
    - id: sourceFileName
      type: System.String
      description: "要複製的檔案。"
    - id: destFileName
      type: System.String
      description: "目的地檔案的名稱。 這不可以是目錄。"
    - id: overwrite
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果可以覆寫目的地檔案。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.IO.File.Copy*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "呼叫端沒有必要的權限。       -or-       <code>destFileName</code> is read-only."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>sourceFileName</code>或<code>destFileName</code>為零長度字串、 只包含空格，或包含一或多個無效字元所定義的<xref:System.IO.Path.InvalidPathChars>。       -<code>sourceFileName</code>或<code>destFileName</code>指定的目錄。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>sourceFileName</code>or <code>destFileName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "指定的路徑、 檔案名稱，或兩者都超出系統定義的長度上限。 例如，windows 平台上，路徑必須少於 248 個字元，和檔案名稱必須少於 260 個字元。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "中指定的路徑<code> sourceFileName </code>或<code> destFileName </code>無效 （例如，它位於未對應的磁碟機上）。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "<code>sourceFileName</code>找不到。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<code>destFileName</code>exists and <code>overwrite</code> is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>.       -或者-發生 I/O 錯誤。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>sourceFileName</code>或<code>destFileName</code>格式無效。"
  platform:
  - net462
- uid: System.IO.File.Create(System.String)
  id: Create(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: Create(String)
  nameWithType: File.Create(String)
  fullName: System.IO.File.Create(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "建立或覆寫檔案中指定的路徑。"
  remarks: "<xref:System.IO.FileStream>這個方法所建立的物件都有預設<xref:System.IO.FileShare>值<xref:System.IO.FileShare>; 沒有其他處理程序或程式碼可以存取建立的檔案直到原始的檔案控制代碼已關閉。</xref:System.IO.FileShare> </xref:System.IO.FileShare> </xref:System.IO.FileStream>       這個方法相當於<xref:System.IO.File.Create%28System.String%2CSystem.Int32%29>方法多載使用預設的緩衝區大小。</xref:System.IO.File.Create%28System.String%2CSystem.Int32%29>       `path`參數可以指定相對或絕對路徑資訊。 相對路徑的資訊會解譯為與目前工作目錄。 若要取得目前工作目錄，請參閱<xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A>       如果指定的檔案不存在，就會建立;如果檔案存在，而且它不是唯讀，則會覆寫內容。       根據預設，所有使用者已授都與至新的檔案的完整讀取/寫入存取。 檔案具有讀取/寫入存取開啟時，必須先關閉另一個應用程式可以開啟它。       如需的一般 I/O 工作清單，請參閱[一般 I/O 工作](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following example creates a file in the specified path, writes some information to the file, and reads from the file.  \n  \n [!code-cs[File Create1#1](~/add/codesnippet/csharp/m-system.io.file.create-_0_1.cs)]\n [!code-cpp[File Create1#1](~/add/codesnippet/cpp/m-system.io.file.create-_0_1.cpp)]\n [!code-vb[File Create1#1](~/add/codesnippet/visualbasic/m-system.io.file.create-_0_1.vb)]"
  syntax:
    content: public static System.IO.FileStream Create (string path);
    parameters:
    - id: path
      type: System.String
      description: "路徑和建立檔案的名稱。"
    return:
      type: System.IO.FileStream
      description: "A <xref href=&quot;System.IO.FileStream&quot;> </xref>可提供中指定的檔案讀取/寫入存取<code> path </code>。"
  overload: System.IO.File.Create*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "呼叫端沒有必要的權限。       - <code> path </code>指定了唯讀檔案。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>為零長度字串、 只包含空格，或包含一或多個無效字元所定義的<xref:System.IO.Path.InvalidPathChars>。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "指定的路徑、 檔案名稱，或兩者都超出系統定義的長度上限。 例如，windows 平台上，路徑必須少於 248 個字元，和檔案名稱必須少於 260 個字元。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "指定的路徑無效 （例如，它位於未對應的磁碟機上）。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "建立檔案時發生 I/O 錯誤。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>是無效的格式。"
  platform:
  - net462
- uid: System.IO.File.Create(System.String,System.Int32)
  id: Create(System.String,System.Int32)
  parent: System.IO.File
  langs:
  - csharp
  name: Create(String,Int32)
  nameWithType: File.Create(String,Int32)
  fullName: System.IO.File.Create(String,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "建立或覆寫指定的檔案。"
  remarks: "<xref:System.IO.FileStream>這個方法所建立的物件都有預設<xref:System.IO.FileShare>值<xref:System.IO.FileShare>; 沒有其他處理程序或程式碼可以存取建立的檔案直到原始的檔案控制代碼已關閉。</xref:System.IO.FileShare> </xref:System.IO.FileShare> </xref:System.IO.FileStream>       `path`參數可以指定相對或絕對路徑資訊。 相對路徑的資訊會解譯為與目前工作目錄。 若要取得目前工作目錄，請參閱<xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A>       這個方法相當於<xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%2CSystem.Int32%29>建構函式多載。</xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%2CSystem.Int32%29> 如果指定的檔案不存在，就會建立;如果檔案存在，而且它不是唯讀，則會覆寫內容。       根據預設，所有使用者已授都與至新的檔案的完整讀取/寫入存取。 檔案具有讀取/寫入存取開啟時，必須先關閉另一個應用程式可以開啟它。       如需的一般 I/O 工作清單，請參閱[一般 I/O 工作](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following example creates a file with the specified buffer size.  \n  \n [!code-cs[File Create2#1](~/add/codesnippet/csharp/m-system.io.file.create-_1_1.cs)]\n [!code-vb[File Create2#1](~/add/codesnippet/visualbasic/m-system.io.file.create-_1_1.vb)]\n [!code-cpp[File Create2#1](~/add/codesnippet/cpp/m-system.io.file.create-_1_1.cpp)]"
  syntax:
    content: public static System.IO.FileStream Create (string path, int bufferSize);
    parameters:
    - id: path
      type: System.String
      description: "檔案的名稱。"
    - id: bufferSize
      type: System.Int32
      description: "讀取和寫入檔案緩衝的位元組數。"
    return:
      type: System.IO.FileStream
      description: "A <xref href=&quot;System.IO.FileStream&quot;> </xref>具有指定的緩衝區大小可在指定的檔案讀取/寫入存取<code> path </code>。"
  overload: System.IO.File.Create*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "呼叫端沒有必要的權限。       - <code> path </code>指定了唯讀檔案。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>為零長度字串、 只包含空格，或包含一或多個無效字元所定義的<xref:System.IO.Path.InvalidPathChars>。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "指定的路徑、 檔案名稱，或兩者都超出系統定義的長度上限。 例如，windows 平台上，路徑必須少於 248 個字元，和檔案名稱必須少於 260 個字元。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "指定的路徑無效 （例如，它位於未對應的磁碟機上）。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "建立檔案時發生 I/O 錯誤。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>是無效的格式。"
  platform:
  - net462
- uid: System.IO.File.Create(System.String,System.Int32,System.IO.FileOptions)
  id: Create(System.String,System.Int32,System.IO.FileOptions)
  parent: System.IO.File
  langs:
  - csharp
  name: Create(String,Int32,FileOptions)
  nameWithType: File.Create(String,Int32,FileOptions)
  fullName: System.IO.File.Create(String,Int32,FileOptions)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "建立或覆寫指定的檔案，並指定緩衝區大小和<xref href=&quot;System.IO.FileOptions&quot;></xref>值，描述如何建立或覆寫檔案。"
  remarks: "`path`參數可以指定相對或絕對路徑資訊。 相對路徑的資訊會解譯為與目前工作目錄。 若要取得目前工作目錄，請參閱<xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A>       這個方法相當於<xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%2CSystem.Int32%29>建構函式多載。</xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%2CSystem.Int32%29> 如果指定的檔案不存在，就會建立;如果檔案存在，而且它不是唯讀，則會覆寫內容。       根據預設，所有使用者已授都與至新的檔案的完整讀取/寫入存取。 檔案具有讀取/寫入存取開啟時，必須先關閉另一個應用程式可以開啟它。       如需的一般 I/O 工作清單，請參閱[一般 I/O 工作](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public static System.IO.FileStream Create (string path, int bufferSize, System.IO.FileOptions options);
    parameters:
    - id: path
      type: System.String
      description: "檔案的名稱。"
    - id: bufferSize
      type: System.Int32
      description: "讀取和寫入檔案緩衝的位元組數。"
    - id: options
      type: System.IO.FileOptions
      description: "其中一個<xref href=&quot;System.IO.FileOptions&quot;></xref>值，描述如何建立或覆寫檔案。"
    return:
      type: System.IO.FileStream
      description: "具有指定的緩衝區大小的新檔案。"
  overload: System.IO.File.Create*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "呼叫端沒有必要的權限。       - <code> path </code>指定了唯讀檔案。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>為零長度字串、 只包含空格，或包含一或多個無效字元所定義的<xref:System.IO.Path.InvalidPathChars>。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "指定的路徑、 檔案名稱，或兩者都超出系統定義的長度上限。 例如，windows 平台上，路徑必須少於 248 個字元，和檔案名稱必須少於 260 個字元。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "指定的路徑無效 （例如，它位於未對應的磁碟機上。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "建立檔案時發生 I/O 錯誤。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>是無效的格式。"
  platform:
  - net462
- uid: System.IO.File.Create(System.String,System.Int32,System.IO.FileOptions,System.Security.AccessControl.FileSecurity)
  id: Create(System.String,System.Int32,System.IO.FileOptions,System.Security.AccessControl.FileSecurity)
  parent: System.IO.File
  langs:
  - csharp
  name: Create(String,Int32,FileOptions,FileSecurity)
  nameWithType: File.Create(String,Int32,FileOptions,FileSecurity)
  fullName: System.IO.File.Create(String,Int32,FileOptions,FileSecurity)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "建立或覆寫指定的檔案具有指定的緩衝區大小、 檔案選項和檔案安全性。"
  remarks: "`path`參數可以指定相對或絕對路徑資訊。 相對路徑的資訊會解譯為與目前工作目錄。 若要取得目前工作目錄，請參閱<xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A>       這個方法相當於<xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%2CSystem.Int32%29>建構函式多載。</xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%2CSystem.Int32%29> 如果指定的檔案不存在，就會建立;如果檔案存在，而且它不是唯讀，則會覆寫內容。       根據預設，所有使用者已授都與至新的檔案的完整讀取/寫入存取。 檔案具有讀取/寫入存取開啟時，必須先關閉另一個應用程式可以開啟它。       如需的一般 I/O 工作清單，請參閱[一般 I/O 工作](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public static System.IO.FileStream Create (string path, int bufferSize, System.IO.FileOptions options, System.Security.AccessControl.FileSecurity fileSecurity);
    parameters:
    - id: path
      type: System.String
      description: "檔案的名稱。"
    - id: bufferSize
      type: System.Int32
      description: "讀取和寫入檔案緩衝的位元組數。"
    - id: options
      type: System.IO.FileOptions
      description: "其中一個<xref href=&quot;System.IO.FileOptions&quot;></xref>值，描述如何建立或覆寫檔案。"
    - id: fileSecurity
      type: System.Security.AccessControl.FileSecurity
      description: "其中一個<xref href=&quot;System.Security.AccessControl.FileSecurity&quot;></xref>值，決定的存取控制和稽核安全性檔案。"
    return:
      type: System.IO.FileStream
      description: "具有指定的緩衝區大小、 檔案選項和檔案安全性的新檔案。"
  overload: System.IO.File.Create*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "呼叫端沒有必要的權限。       - <code> path </code>指定了唯讀檔案。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>為零長度字串、 只包含空格，或包含一或多個無效字元所定義的<xref:System.IO.Path.InvalidPathChars>。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "指定的路徑、 檔案名稱，或兩者都超出系統定義的長度上限。 例如，windows 平台上，路徑必須少於 248 個字元，和檔案名稱必須少於 260 個字元。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "指定的路徑無效 （例如，它位於未對應的磁碟機上）。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "建立檔案時發生 I/O 錯誤。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>是無效的格式。"
  platform:
  - net462
- uid: System.IO.File.CreateText(System.String)
  id: CreateText(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: CreateText(String)
  nameWithType: File.CreateText(String)
  fullName: System.IO.File.CreateText(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "建立或開啟用以寫入 utf-8 編碼文字的檔案。"
  remarks: "這個方法相當於<xref:System.IO.StreamWriter.%23ctor%28System.String%2CSystem.Boolean%29>建構函式多載`append`參數設定為`false`。</xref:System.IO.StreamWriter.%23ctor%28System.String%2CSystem.Boolean%29> 如果指定的檔案`path`不存在，則會建立它。 如果檔案不存在，則會覆寫其內容。 讀取檔案開啟時，允許額外執行緒。       `path`參數可以指定相對或絕對路徑資訊。 相對路徑的資訊會解譯為與目前工作目錄。 若要取得目前工作目錄，請參閱<xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A>       如需的一般 I/O 工作清單，請參閱[一般 I/O 工作](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following example creates a file for text writing and reading.  \n  \n [!code-cs[File CreateText#1](~/add/codesnippet/csharp/m-system.io.file.createt_1.cs)]\n [!code-vb[File CreateText#1](~/add/codesnippet/visualbasic/m-system.io.file.createt_1.vb)]\n [!code-cpp[File CreateText#1](~/add/codesnippet/cpp/m-system.io.file.createt_1.cpp)]"
  syntax:
    content: public static System.IO.StreamWriter CreateText (string path);
    parameters:
    - id: path
      type: System.String
      description: "要被開啟來寫入的檔案。"
    return:
      type: System.IO.StreamWriter
      description: "A<xref:System.IO.StreamWriter>寫入至指定的檔案使用 utf-8 編碼方式。</xref:System.IO.StreamWriter>"
  overload: System.IO.File.CreateText*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "呼叫端沒有必要的權限。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>為零長度字串、 只包含空格，或包含一或多個無效字元所定義的<xref:System.IO.Path.InvalidPathChars>。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "指定的路徑、 檔案名稱，或兩者都超出系統定義的長度上限。 例如，windows 平台上，路徑必須少於 248 個字元，和檔案名稱必須少於 260 個字元。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "指定的路徑無效 （例如，它位於未對應的磁碟機上）。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>是無效的格式。"
  platform:
  - net462
- uid: System.IO.File.Decrypt(System.String)
  id: Decrypt(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: Decrypt(String)
  nameWithType: File.Decrypt(String)
  fullName: System.IO.File.Decrypt(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "解密目前帳戶使用加密檔案<xref:System.IO.File.Encrypt*>方法。</xref:System.IO.File.Encrypt*>"
  remarks: "解密方法可讓您將使用加密檔案解密<xref:System.IO.File.Encrypt%2A>方法。</xref:System.IO.File.Encrypt%2A>  解密方法可以解密使用目前的使用者帳戶已加密的檔案。       解密方法需要獨佔存取檔案，進行解密，並會引發例外狀況，如果另一個處理序正在使用檔案。 如果檔案未加密，解密就會傳回非零值，表示成功。       同時<xref:System.IO.File.Encrypt%2A>和解密方法使用電腦上安裝並呼叫方法的程序的檔案加密金鑰的密碼編譯服務提供者 (CSP)。</xref:System.IO.File.Encrypt%2A>       目前的檔案系統必須格式化為 NTFS，且目前的作業系統必須 Windows NT 或更新版本。"
  example:
  - "The following code example uses the <xref:System.IO.File.Encrypt%2A> method and the Decrypt method to encrypt and then decrypt a file. The file must exist for the example to work.  \n  \n [!code-cs[IO.File.Encrypt-Decrypt#1](~/add/codesnippet/csharp/m-system.io.file.decrypt_1.cs)]\n [!code-cpp[IO.File.Encrypt-Decrypt#1](~/add/codesnippet/cpp/m-system.io.file.decrypt_1.cpp)]\n [!code-vb[IO.File.Encrypt-Decrypt#1](~/add/codesnippet/visualbasic/m-system.io.file.decrypt_1.vb)]"
  syntax:
    content: public static void Decrypt (string path);
    parameters:
    - id: path
      type: System.String
      description: "描述要解密的檔案路徑。"
  overload: System.IO.File.Decrypt*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> path </code>參數為零長度字串、 只包含空格，或所定義的<xref:System.IO.Path.InvalidPathChars>.</xref:System.IO.Path.InvalidPathChars>包含一或多個無效的字元"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>path</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.DriveNotFoundException
    commentId: T:System.IO.DriveNotFoundException
    description: "指定了無效的磁碟機。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "所描述的檔案<code> path </code>找不到參數。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "開啟檔案時發生 I/O 錯誤。 例如，加密的檔案已經開啟。       -或者-目前的平台不支援此作業。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "指定的路徑、 檔案名稱，或兩者都超出系統定義的長度上限。 例如，windows 平台上，路徑必須少於 248 個字元，和檔案名稱必須少於 260 個字元。"
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "目前的作業系統不是 Windows NT 或更新版本。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "檔案系統不是 NTFS。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code> path </code>參數指定為唯讀的檔案。       -或者-目前的平台不支援此作業。       -或- <code> path </code>參數指定的目錄。       -或者-呼叫端沒有必要的權限。"
  platform:
  - net462
- uid: System.IO.File.Delete(System.String)
  id: Delete(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: Delete(String)
  nameWithType: File.Delete(String)
  fullName: System.IO.File.Delete(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "刪除指定的檔案。"
  remarks: "指定的檔案名稱的任何相對或絕對路徑資訊`path`參數。 不可包含萬用字元。 相對路徑的資訊會解譯為與目前工作目錄。 若要取得目前工作目錄，請參閱<xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A>       如果要刪除的檔案不存在，則會擲不回任何例外狀況。       如需的一般 I/O 工作清單，請參閱[一般 I/O 工作](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following example copies groups of files to the C:\\archives\\2008 backup folder and then deletes them from the source folder.  \n  \n [!code-cs[FileCopyDelete#1](~/add/codesnippet/csharp/m-system.io.file.delete-_1.cs)]\n [!code-vb[FileCopyDelete#1](~/add/codesnippet/visualbasic/m-system.io.file.delete-_1.vb)]"
  syntax:
    content: public static void Delete (string path);
    parameters:
    - id: path
      type: System.String
      description: "要刪除的檔案名稱。 不支援萬用字元。"
  overload: System.IO.File.Delete*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>為零長度字串、 只包含空格，或包含一或多個無效字元所定義的<xref:System.IO.Path.InvalidPathChars>。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "指定的路徑無效 （例如，它位於未對應的磁碟機上）。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "指定的檔案正在使用中。       -或-開啟的控制代碼上的檔案，而且作業系統是 Windows XP 或更早版本。 這個開啟控制代碼可能是因為列舉目錄和檔案。 如需詳細資訊，請參閱[如何︰ 列舉目錄和檔案](~/add/includes/ajax-current-ext-md.md)。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>是無效的格式。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "指定的路徑、 檔案名稱，或兩者都超出系統定義的長度上限。 例如，windows 平台上，路徑必須少於 248 個字元，和檔案名稱必須少於 260 個字元。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "呼叫端沒有必要的權限。       -或者-檔案是使用中的可執行檔。       - <code> path </code>為目錄。       - <code> path </code>指定唯讀檔案。"
  platform:
  - net462
- uid: System.IO.File.Encrypt(System.String)
  id: Encrypt(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: Encrypt(String)
  nameWithType: File.Encrypt(String)
  fullName: System.IO.File.Encrypt(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "加密檔案，只有使用加密檔案的帳戶才能將其解密。"
  remarks: "加密方法可讓您加密檔案，以便只有呼叫這個方法所使用的帳戶才能將其解密。 使用<xref:System.IO.File.Decrypt%2A>方法來解密加密的加密方法的檔案。</xref:System.IO.File.Decrypt%2A>       加密方法需要獨佔存取權所加密的檔案，而且如果另一個處理序正在使用檔案將會失敗。       這兩種加密方法和<xref:System.IO.File.Decrypt%2A>方法使用的電腦上安裝並呼叫方法的程序的檔案加密金鑰的密碼編譯服務提供者 (CSP)。</xref:System.IO.File.Decrypt%2A>       無法在所有版本的 Windows 上使用這個方法。 例如，不上首頁版本提供。       目前的檔案系統必須格式化為 NTFS。"
  example:
  - "The following code example uses the Encrypt method and the <xref:System.IO.File.Decrypt%2A> method to encrypt and then decrypt a file. The file must exist for the example to work.  \n  \n [!code-cs[IO.File.Encrypt-Decrypt#1](~/add/codesnippet/csharp/m-system.io.file.encrypt_1.cs)]\n [!code-cpp[IO.File.Encrypt-Decrypt#1](~/add/codesnippet/cpp/m-system.io.file.encrypt_1.cpp)]\n [!code-vb[IO.File.Encrypt-Decrypt#1](~/add/codesnippet/visualbasic/m-system.io.file.encrypt_1.vb)]"
  syntax:
    content: public static void Encrypt (string path);
    parameters:
    - id: path
      type: System.String
      description: "描述要加密的檔案路徑。"
  overload: System.IO.File.Encrypt*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> path </code>參數為零長度字串、 只包含空格，或所定義的<xref:System.IO.Path.InvalidPathChars>.</xref:System.IO.Path.InvalidPathChars>包含一或多個無效的字元"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>path</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.DriveNotFoundException
    commentId: T:System.IO.DriveNotFoundException
    description: "指定了無效的磁碟機。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "所描述的檔案<code> path </code>找不到參數。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "開啟檔案時發生 I/O 錯誤。       -或者-目前的平台不支援此作業。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "指定的路徑、 檔案名稱，或兩者都超出系統定義的長度上限。 例如，windows 平台上，路徑必須少於 248 個字元，和檔案名稱必須少於 260 個字元。"
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "目前的作業系統不是 Windows NT 或更新版本。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "檔案系統不是 NTFS。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code> path </code>參數指定為唯讀的檔案。       -或者-目前的平台不支援此作業。       -或- <code> path </code>參數指定的目錄。       -或者-呼叫端沒有必要的權限。"
  platform:
  - net462
- uid: System.IO.File.Exists(System.String)
  id: Exists(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: Exists(String)
  nameWithType: File.Exists(String)
  fullName: System.IO.File.Exists(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "判斷指定的檔案是否存在。"
  remarks: "Exists 方法不應該用於路徑驗證時，這個方法只會檢查中是否指定的檔案`path`存在。 將無效的路徑傳遞至 Exists 傳回`false`。 若要檢查路徑是否包含任何無效的字元，您可以呼叫<xref:System.IO.Path.GetInvalidPathChars%2A>方法來擷取檔案系統無效字元。</xref:System.IO.Path.GetInvalidPathChars%2A> 您也可以建立規則運算式來測試是否為您的環境的有效路徑。 如需可接受的路徑的範例，請參閱<xref:System.IO.File>.</xref:System.IO.File>       若要檢查如果目錄存在，請參閱<xref:System.IO.Directory.Exists%2A?displayProperty=fullName>.</xref:System.IO.Directory.Exists%2A?displayProperty=fullName>       要注意，另一個處理序可以可能會進行處理的時間之間的檔案呼叫 Exists 方法並執行其他操作檔案，例如<xref:System.IO.File.Delete%2A>.</xref:System.IO.File.Delete%2A>       `path`參數可以指定相對或絕對路徑資訊。 相對路徑的資訊會解譯為與目前工作目錄。 若要取得目前工作目錄，請參閱<xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A>       如果`path`描述目錄中，這個方法會傳回`false`。 尾端空白會從`path`參數，然後再判斷如果檔案存在。       Exists 方法會傳回`false`如果發生任何錯誤時嘗試判斷指定的檔案是否存在。 可能發生這種情況下，會引發例外狀況，例如傳遞檔名無效的字元或太多的字元，失敗或遺失的磁碟，或如果呼叫端沒有讀取檔案的權限。"
  example:
  - "The following example determines if a file exists.  \n  \n [!code-vb[File Exists#1](~/add/codesnippet/visualbasic/m-system.io.file.exists-_1.vb)]\n [!code-cs[File Exists#1](~/add/codesnippet/csharp/m-system.io.file.exists-_1.cs)]"
  syntax:
    content: public static bool Exists (string path);
    parameters:
    - id: path
      type: System.String
      description: "要檢查的檔案。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果呼叫端具有必要的權限和<code> path </code>包含現有檔案的名稱，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 這個方法也會傳回<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>如果<code> path </code>是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>，無效的路徑或零長度字串。 如果呼叫端沒有足夠的權限讀取指定的檔案，會擲回任何例外狀況，而且方法會傳回<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>不論是否存在<code> path </code>。"
  overload: System.IO.File.Exists*
  exceptions: []
  platform:
  - net462
- uid: System.IO.File.GetAccessControl(System.String)
  id: GetAccessControl(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: GetAccessControl(String)
  nameWithType: File.GetAccessControl(String)
  fullName: System.IO.File.GetAccessControl(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "取得<xref href=&quot;System.Security.AccessControl.FileSecurity&quot;></xref>封裝指定檔案之存取控制清單 (ACL) 項目物件。"
  remarks: "您可以使用 GetAccessControl 方法來擷取檔案的存取控制清單 (ACL) 項目。       ACL 描述個人及/或群組，讓他們已經有或沒有，在指定的檔案上採取特定動作的權限。 如需詳細資訊，請參閱[如何︰ 加入或移除存取控制清單項目](~/add/includes/ajax-current-ext-md.md)。       在 NTFS 環境中，<xref:System.Security.AccessControl.FileSystemRights>和<xref:System.Security.AccessControl.FileSystemRights>授與使用者時如果使用者具有<xref:System.Security.AccessControl.FileSystemRights>父資料夾的權限。</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights> 若要拒絕<xref:System.Security.AccessControl.FileSystemRights>和<xref:System.Security.AccessControl.FileSystemRights>，拒絕<xref:System.Security.AccessControl.FileSystemRights>父目錄上。</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights>"
  example:
  - "The following code example uses the <xref:System.IO.File.GetAccessControl%2A> and the <xref:System.IO.File.SetAccessControl%2A> methods to add and then remove an access control list (ACL) entry from a file.  You must supply a valid user or group account to run this example.  \n  \n [!code-cs[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/csharp/m-system.io.file.getacce_1.cs)]\n [!code-vb[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/visualbasic/m-system.io.file.getacce_1.vb)]\n [!code-cpp[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/cpp/m-system.io.file.getacce_1.cpp)]"
  syntax:
    content: public static System.Security.AccessControl.FileSecurity GetAccessControl (string path);
    parameters:
    - id: path
      type: System.String
      description: "包含檔案路徑<xref href=&quot;System.Security.AccessControl.FileSecurity&quot;></xref>描述檔案的存取控制清單 (ACL) 資訊的物件。"
    return:
      type: System.Security.AccessControl.FileSecurity
      description: "A <xref href=&quot;System.Security.AccessControl.FileSecurity&quot;> </xref>規則所描述的檔案封裝的存取控制的物件<code> path </code>參數。"
  overload: System.IO.File.GetAccessControl*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "開啟檔案時發生 I/O 錯誤。"
  - type: System.Runtime.InteropServices.SEHException
    commentId: T:System.Runtime.InteropServices.SEHException
    description: "The <code>path</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.SystemException
    commentId: T:System.SystemException
    description: "找不到檔案。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code> path </code>參數指定為唯讀的檔案。       -或者-目前的平台不支援此作業。       -或- <code> path </code>參數指定的目錄。       -或者-呼叫端沒有必要的權限。"
  platform:
  - net462
- uid: System.IO.File.GetAccessControl(System.String,System.Security.AccessControl.AccessControlSections)
  id: GetAccessControl(System.String,System.Security.AccessControl.AccessControlSections)
  parent: System.IO.File
  langs:
  - csharp
  name: GetAccessControl(String,AccessControlSections)
  nameWithType: File.GetAccessControl(String,AccessControlSections)
  fullName: System.IO.File.GetAccessControl(String,AccessControlSections)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "取得<xref href=&quot;System.Security.AccessControl.FileSecurity&quot;></xref>封裝的特定檔案的存取控制清單 (ACL) 項目之指定的類型的物件。"
  remarks: "您可以使用 GetAccessControl 方法來擷取檔案的存取控制清單 (ACL) 項目。       ACL 描述個人及/或群組，讓他們已經有或沒有，在指定的檔案上採取特定動作的權限。 如需詳細資訊，請參閱[如何︰ 加入或移除存取控制清單項目](~/add/includes/ajax-current-ext-md.md)。       在 NTFS 環境中，<xref:System.Security.AccessControl.FileSystemRights>和<xref:System.Security.AccessControl.FileSystemRights>授與使用者時如果使用者具有<xref:System.Security.AccessControl.FileSystemRights>父資料夾的權限。</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights> 若要拒絕<xref:System.Security.AccessControl.FileSystemRights>和<xref:System.Security.AccessControl.FileSystemRights>，拒絕<xref:System.Security.AccessControl.FileSystemRights>父目錄上。</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights>"
  syntax:
    content: public static System.Security.AccessControl.FileSecurity GetAccessControl (string path, System.Security.AccessControl.AccessControlSections includeSections);
    parameters:
    - id: path
      type: System.String
      description: "包含檔案路徑<xref href=&quot;System.Security.AccessControl.FileSecurity&quot;></xref>描述檔案的存取控制清單 (ACL) 資訊的物件。"
    - id: includeSections
      type: System.Security.AccessControl.AccessControlSections
      description: "其中一個<xref href=&quot;System.Security.AccessControl.AccessControlSections&quot;></xref>值，指定類型的存取控制清單 (ACL) 資訊，接收。"
    return:
      type: System.Security.AccessControl.FileSecurity
      description: "A <xref href=&quot;System.Security.AccessControl.FileSecurity&quot;> </xref>規則所描述的檔案封裝的存取控制的物件<code> path </code>參數。"
  overload: System.IO.File.GetAccessControl*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "開啟檔案時發生 I/O 錯誤。"
  - type: System.Runtime.InteropServices.SEHException
    commentId: T:System.Runtime.InteropServices.SEHException
    description: "The <code>path</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.SystemException
    commentId: T:System.SystemException
    description: "找不到檔案。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code> path </code>參數指定為唯讀的檔案。       -或者-目前的平台不支援此作業。       -或- <code> path </code>參數指定的目錄。       -或者-呼叫端沒有必要的權限。"
  platform:
  - net462
- uid: System.IO.File.GetAttributes(System.String)
  id: GetAttributes(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: GetAttributes(String)
  nameWithType: File.GetAttributes(String)
  fullName: System.IO.File.GetAttributes(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "取得<xref href=&quot;System.IO.FileAttributes&quot;></xref>路徑上的檔案。"
  remarks: "`path`參數可以指定相對或絕對路徑資訊。 相對路徑的資訊會解譯為與目前工作目錄。 若要取得目前工作目錄，請參閱<xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A>       如需的一般 I/O 工作清單，請參閱[一般 I/O 工作](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following example demonstrates the `GetAttributes` and `SetAttributes` methods by applying the `Archive` and `Hidden` attributes to a file.  \n  \n [!code-cs[File GetAttributes#1](~/add/codesnippet/csharp/m-system.io.file.getattr_1.cs)]\n [!code-cpp[File GetAttributes#1](~/add/codesnippet/cpp/m-system.io.file.getattr_1.cpp)]\n [!code-vb[File GetAttributes#1](~/add/codesnippet/visualbasic/m-system.io.file.getattr_1.vb)]"
  syntax:
    content: public static System.IO.FileAttributes GetAttributes (string path);
    parameters:
    - id: path
      type: System.String
      description: "檔案的路徑。"
    return:
      type: System.IO.FileAttributes
      description: "<xref href=&quot;System.IO.FileAttributes&quot;> </xref>路徑上的檔案。"
  overload: System.IO.File.GetAttributes*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>是空的、 只包含空格，或包含無效的字元。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "指定的路徑、 檔案名稱，或兩者都超出系統定義的長度上限。 例如，windows 平台上，路徑必須少於 248 個字元，和檔案名稱必須少於 260 個字元。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>是無效的格式。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "<code>path</code>代表檔案並不正確，例如位於未對應的磁碟機或檔案上找不到。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "<code>path</code>代表目錄而且無效，例如位於未對應的磁碟機或目錄上找不到。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "這個檔案正由另一個處理序使用。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "呼叫端沒有必要的權限。"
  platform:
  - net462
- uid: System.IO.File.GetCreationTime(System.String)
  id: GetCreationTime(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: GetCreationTime(String)
  nameWithType: File.GetCreationTime(String)
  fullName: System.IO.File.GetCreationTime(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "傳回的建立日期和時間的指定的檔案或目錄。"
  remarks: "> [!NOTE]> 這個方法可能傳回不正確的值，因為它會使用其值不一定會持續更新作業系統的原生函式。       `path`參數可以指定相對或絕對路徑資訊。 相對路徑的資訊會解譯為與目前工作目錄。 若要取得目前工作目錄，請參閱<xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A>       如果檔案中所述`path`參數不存在，這個方法會傳回午夜 12:00，1601年西元 1 (C.E.)國際標準時間 (UTC)，調整為本地時間。       NTFS 格式化磁碟機可能會快取檔案，例如一段時間的檔案建立時間的相關資訊。 如此一來，可能需要明確地將設定檔的建立時間，如果您要覆寫或取代現有的檔案。       如需的一般 I/O 工作清單，請參閱[一般 I/O 工作](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following example demonstrates `GetCreationTime`.  \n  \n [!code-vb[System.IO.File.GetCreationTime#1](~/add/codesnippet/visualbasic/m-system.io.file.getcrea_0_1.vb)]"
  syntax:
    content: public static DateTime GetCreationTime (string path);
    parameters:
    - id: path
      type: System.String
      description: "檔案或要取得其建立日期和時間資訊的目錄中。"
    return:
      type: System.DateTime
      description: "A<xref:System.DateTime>結構，設定的建立日期和時間的指定的檔案或目錄。</xref:System.DateTime> 這個值以本地時間表示。"
  overload: System.IO.File.GetCreationTime*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "呼叫端沒有必要的權限。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>為零長度字串、 只包含空格，或包含一或多個無效字元所定義的<xref:System.IO.Path.InvalidPathChars>。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "指定的路徑、 檔案名稱，或兩者都超出系統定義的長度上限。 例如，windows 平台上，路徑必須少於 248 個字元，和檔案名稱必須少於 260 個字元。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>是無效的格式。"
  platform:
  - net462
- uid: System.IO.File.GetCreationTimeUtc(System.String)
  id: GetCreationTimeUtc(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: GetCreationTimeUtc(String)
  nameWithType: File.GetCreationTimeUtc(String)
  fullName: System.IO.File.GetCreationTimeUtc(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "傳回指定的檔案或目錄的建立日期和時間，以國際標準時間 (UTC)。"
  remarks: "> [!NOTE]> 這個方法可能傳回不正確的值，因為它會使用其值不一定會持續更新作業系統的原生函式。       如果檔案中所述`path`參數不存在，這個方法會傳回午夜 12:00，1601年西元 1 (C.E.)國際標準時間 (UTC)。       NTFS 格式化磁碟機可能會快取檔案，例如一段時間的檔案建立時間的相關資訊。 如此一來，可能需要明確地將設定檔的建立時間，如果您要覆寫或取代現有的檔案。       如需的一般 I/O 工作清單，請參閱[一般 I/O 工作](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following example demonstrates the GetCreationTimeUtc method.  \n  \n [!code-vb[System.IO.File.GetCreationTime#2](~/add/codesnippet/visualbasic/m-system.io.file.getcrea_1_1.vb)]"
  syntax:
    content: public static DateTime GetCreationTimeUtc (string path);
    parameters:
    - id: path
      type: System.String
      description: "檔案或要取得其建立日期和時間資訊的目錄中。"
    return:
      type: System.DateTime
      description: "A<xref:System.DateTime>結構，設定的建立日期和時間的指定的檔案或目錄。</xref:System.DateTime> 這個值以 UTC 時間表示。"
  overload: System.IO.File.GetCreationTimeUtc*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "呼叫端沒有必要的權限。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>為零長度字串、 只包含空格，或包含一或多個無效字元所定義的<xref:System.IO.Path.InvalidPathChars>。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "指定的路徑、 檔案名稱，或兩者都超出系統定義的長度上限。 例如，windows 平台上，路徑必須少於 248 個字元，和檔案名稱必須少於 260 個字元。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>是無效的格式。"
  platform:
  - net462
- uid: System.IO.File.GetLastAccessTime(System.String)
  id: GetLastAccessTime(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: GetLastAccessTime(String)
  nameWithType: File.GetLastAccessTime(String)
  fullName: System.IO.File.GetLastAccessTime(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "傳回的日期和時間的指定檔案或目錄上次被存取。"
  remarks: "> [!NOTE]> 這個方法可能傳回不正確的值，因為它會使用其值不一定會持續更新作業系統的原生函式。       如果檔案中所述`path`參數不存在，這個方法會傳回午夜 12:00，1601年西元 1 (C.E.)國際標準時間 (UTC)，調整為本地時間。       `path`參數可以指定相對或絕對路徑資訊。 相對路徑的資訊會解譯為與目前工作目錄。 若要取得目前工作目錄，請參閱<xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A>       如需的一般 I/O 工作清單，請參閱[一般 I/O 工作](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following example demonstrates `GetLastAccessTime`.  \n  \n [!code-vb[File GetLastAccess#1](~/add/codesnippet/visualbasic/m-system.io.file.getlast_1_1.vb)]\n [!code-cs[File GetLastAccess#1](~/add/codesnippet/csharp/m-system.io.file.getlast_1_1.cs)]\n [!code-cpp[File GetLastAccess#1](~/add/codesnippet/cpp/m-system.io.file.getlast_1_1.cpp)]"
  syntax:
    content: public static DateTime GetLastAccessTime (string path);
    parameters:
    - id: path
      type: System.String
      description: "檔案或要取得其存取日期和時間資訊的目錄中。"
    return:
      type: System.DateTime
      description: "A<xref:System.DateTime>結構，設定日期和時間的指定的檔案或目錄上次存取。</xref:System.DateTime> 這個值以本地時間表示。"
  overload: System.IO.File.GetLastAccessTime*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "呼叫端沒有必要的權限。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>為零長度字串、 只包含空格，或包含一或多個無效字元所定義的<xref:System.IO.Path.InvalidPathChars>。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "指定的路徑、 檔案名稱，或兩者都超出系統定義的長度上限。 例如，windows 平台上，路徑必須少於 248 個字元，和檔案名稱必須少於 260 個字元。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>是無效的格式。"
  platform:
  - net462
- uid: System.IO.File.GetLastAccessTimeUtc(System.String)
  id: GetLastAccessTimeUtc(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: GetLastAccessTimeUtc(String)
  nameWithType: File.GetLastAccessTimeUtc(String)
  fullName: System.IO.File.GetLastAccessTimeUtc(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "傳回日期和時間，在國際標準時間 (UTC)，指定的檔案或目錄的上次存取。"
  remarks: "> [!NOTE]> 這個方法可能傳回不正確的值，因為它會使用其值不一定會持續更新作業系統的原生函式。       如果檔案中所述`path`參數不存在，這個方法會傳回午夜 12:00，1601年西元 1 (C.E.)國際標準時間 (UTC)。       `path`參數可以指定相對或絕對路徑資訊。 相對路徑的資訊會解譯為與目前工作目錄。 若要取得目前工作目錄，請參閱<xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A>       如需的一般 I/O 工作清單，請參閱[一般 I/O 工作](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public static DateTime GetLastAccessTimeUtc (string path);
    parameters:
    - id: path
      type: System.String
      description: "檔案或要取得其存取日期和時間資訊的目錄中。"
    return:
      type: System.DateTime
      description: "A<xref:System.DateTime>結構，設定日期和時間的指定的檔案或目錄上次存取。</xref:System.DateTime> 這個值以 UTC 時間表示。"
  overload: System.IO.File.GetLastAccessTimeUtc*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "呼叫端沒有必要的權限。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>為零長度字串、 只包含空格，或包含一或多個無效字元所定義的<xref:System.IO.Path.InvalidPathChars>。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "指定的路徑、 檔案名稱，或兩者都超出系統定義的長度上限。 例如，windows 平台上，路徑必須少於 248 個字元，和檔案名稱必須少於 260 個字元。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>是無效的格式。"
  platform:
  - net462
- uid: System.IO.File.GetLastWriteTime(System.String)
  id: GetLastWriteTime(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: GetLastWriteTime(String)
  nameWithType: File.GetLastWriteTime(String)
  fullName: System.IO.File.GetLastWriteTime(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "傳回的日期和時間的指定檔案或目錄上次被寫入。"
  remarks: "> [!NOTE]> 這個方法可能傳回不正確的值，因為它會使用其值不一定會持續更新作業系統的原生函式。 每個作業系統管理上次寫入時間根據自己的規則。 若要改善效能，系統可能未設定上次寫入時間值的最後一個寫入作業，確切的時間，但可能會將它設定為近似值而。       如果檔案中所述`path`參數不存在，這個方法會傳回午夜 12:00，1601年西元 1 (C.E.)國際標準時間 (UTC)，調整為本地時間。       `path`參數可以指定相對或絕對路徑資訊。 相對路徑的資訊會解譯為與目前工作目錄。 若要取得目前工作目錄，請參閱<xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A>       如需的一般 I/O 工作清單，請參閱[一般 I/O 工作](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following example demonstrates `GetLastWriteTime`.  \n  \n [!code-cpp[File GetLastWrite#1](~/add/codesnippet/cpp/m-system.io.file.getlast_0_1.cpp)]\n [!code-vb[File GetLastWrite#1](~/add/codesnippet/visualbasic/m-system.io.file.getlast_0_1.vb)]\n [!code-cs[File GetLastWrite#1](~/add/codesnippet/csharp/m-system.io.file.getlast_0_1.cs)]"
  syntax:
    content: public static DateTime GetLastWriteTime (string path);
    parameters:
    - id: path
      type: System.String
      description: "檔案或要取得其寫入日期和時間資訊的目錄中。"
    return:
      type: System.DateTime
      description: "A<xref:System.DateTime>結構，設定指定的檔案或目錄上次被寫入至的時間與日期。</xref:System.DateTime> 這個值以本地時間表示。"
  overload: System.IO.File.GetLastWriteTime*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "呼叫端沒有必要的權限。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>為零長度字串、 只包含空格，或包含一或多個無效字元所定義的<xref:System.IO.Path.InvalidPathChars>。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "指定的路徑、 檔案名稱，或兩者都超出系統定義的長度上限。 例如，windows 平台上，路徑必須少於 248 個字元，和檔案名稱必須少於 260 個字元。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>是無效的格式。"
  platform:
  - net462
- uid: System.IO.File.GetLastWriteTimeUtc(System.String)
  id: GetLastWriteTimeUtc(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: GetLastWriteTimeUtc(String)
  nameWithType: File.GetLastWriteTimeUtc(String)
  fullName: System.IO.File.GetLastWriteTimeUtc(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "會傳回日期和時間，在國際標準時間 (UTC)，指定的檔案或目錄上次被寫入至。"
  remarks: "> [!NOTE]> 這個方法可能傳回不正確的值，因為它會使用其值不一定會持續更新作業系統的原生函式。 每個作業系統管理上次寫入時間根據自己的規則。 若要改善效能，系統可能未設定上次寫入時間值的最後一個寫入作業，確切的時間，但可能會將它設定為近似值而。       如果檔案中所述`path`參數不存在，這個方法會傳回午夜 12:00，1601年西元 1 (C.E.)國際標準時間 (UTC)。       `path`參數可以指定相對或絕對路徑資訊。 相對路徑的資訊會解譯為與目前工作目錄。 若要取得目前工作目錄，請參閱<xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A>       如需的一般 I/O 工作清單，請參閱[一般 I/O 工作](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public static DateTime GetLastWriteTimeUtc (string path);
    parameters:
    - id: path
      type: System.String
      description: "檔案或要取得其寫入日期和時間資訊的目錄中。"
    return:
      type: System.DateTime
      description: "A<xref:System.DateTime>結構，設定指定的檔案或目錄上次被寫入至的時間與日期。</xref:System.DateTime> 這個值以 UTC 時間表示。"
  overload: System.IO.File.GetLastWriteTimeUtc*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "呼叫端沒有必要的權限。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>為零長度字串、 只包含空格，或包含一或多個無效字元所定義的<xref:System.IO.Path.InvalidPathChars>。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "指定的路徑、 檔案名稱，或兩者都超出系統定義的長度上限。 例如，windows 平台上，路徑必須少於 248 個字元，和檔案名稱必須少於 260 個字元。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>是無效的格式。"
  platform:
  - net462
- uid: System.IO.File.Move(System.String,System.String)
  id: Move(System.String,System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: Move(String,String)
  nameWithType: File.Move(String,String)
  fullName: System.IO.File.Move(String,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "將指定的檔案移至新的位置，並提供指定新的檔案名稱的選項。"
  remarks: "這個方法適用於跨磁碟區，它不會擲回例外狀況時的來源和目的地相同。 請注意，是否您嘗試將相同名稱的檔案移到該目錄取代檔案，您取得<xref:System.IO.IOException>.</xref:System.IO.IOException> 您無法使用 Move 方法覆寫現有檔案。       `sourceFileName`和`destFileName`引數可以包含相對或絕對路徑資訊。 相對路徑的資訊會解譯為與目前工作目錄。 若要取得目前工作目錄，請參閱<xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A>       如果您嘗試在磁碟區之間移動檔案和檔案正在使用中，將檔案複製到目的地，但不是會從來源刪除。       如需的一般 I/O 工作清單，請參閱[一般 I/O 工作](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following example moves a file.  \n  \n [!code-cpp[File Move#1](~/add/codesnippet/cpp/m-system.io.file.move-sy_1.cpp)]\n [!code-cs[File Move#1](~/add/codesnippet/csharp/m-system.io.file.move-sy_1.cs)]\n [!code-vb[File Move#1](~/add/codesnippet/visualbasic/m-system.io.file.move-sy_1.vb)]"
  syntax:
    content: public static void Move (string sourceFileName, string destFileName);
    parameters:
    - id: sourceFileName
      type: System.String
      description: "要移動的檔案名稱。 可包含相對或絕對路徑。"
    - id: destFileName
      type: System.String
      description: "新路徑和檔案名稱。"
  overload: System.IO.File.Move*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "目的地檔案已經存在。       -or-       <code>sourceFileName</code> was not found."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>sourceFileName</code>or <code>destFileName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>sourceFileName</code>或<code>destFileName</code>為零長度字串、 只包含空格，或包含無效的字元，如中所定義<xref:System.IO.Path.InvalidPathChars>。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "呼叫端沒有必要的權限。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "指定的路徑、 檔案名稱，或兩者都超出系統定義的長度上限。 例如，windows 平台上，路徑必須少於 248 個字元，和檔案名稱必須少於 260 個字元。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "中指定的路徑<code> sourceFileName </code>或<code> destFileName </code>無效，（比方說，它位於未對應的磁碟機上）。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>sourceFileName</code>或<code>destFileName</code>格式無效。"
  platform:
  - net462
- uid: System.IO.File.Open(System.String,System.IO.FileMode)
  id: Open(System.String,System.IO.FileMode)
  parent: System.IO.File
  langs:
  - csharp
  name: Open(String,FileMode)
  nameWithType: File.Open(String,FileMode)
  fullName: System.IO.File.Open(String,FileMode)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "開啟<xref href=&quot;System.IO.FileStream&quot;></xref>指定路徑上以讀取/寫入存取。"
  remarks: "`path`參數可以指定相對或絕對路徑資訊。 相對路徑的資訊會解譯為與目前工作目錄。 若要取得目前工作目錄，請參閱<xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A>       如需的一般 I/O 工作清單，請參閱[一般 I/O 工作](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following code example creates a temporary file and writes some text to it. The example then opens the file, using T:System.IO.FileMode.Open; that is, if the file did not already exist, it would not be created.  \n  \n [!code-cpp[File Open1#1](~/add/codesnippet/cpp/m-system.io.file.open-sy_0_1.cpp)]\n [!code-cs[File Open1#1](~/add/codesnippet/csharp/m-system.io.file.open-sy_0_1.cs)]\n [!code-vb[File Open1#1](~/add/codesnippet/visualbasic/m-system.io.file.open-sy_0_1.vb)]"
  syntax:
    content: public static System.IO.FileStream Open (string path, System.IO.FileMode mode);
    parameters:
    - id: path
      type: System.String
      description: "要開啟的檔案。"
    - id: mode
      type: System.IO.FileMode
      description: "A <xref href=&quot;System.IO.FileMode&quot;> </xref>值，指定是否會建立一個檔案，是否有一個不存在，並決定是否保留或覆寫現有檔案的內容。"
    return:
      type: System.IO.FileStream
      description: "A <xref href=&quot;System.IO.FileStream&quot;> </xref>開啟於指定的模式和路徑，具有讀取/寫入存取而且不共用。"
  overload: System.IO.File.Open*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>為零長度字串、 只包含空格，或包含一或多個無效字元所定義的<xref:System.IO.Path.InvalidPathChars>。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "指定的路徑、 檔案名稱，或兩者都超出系統定義的長度上限。 例如，windows 平台上，路徑必須少於 248 個字元，和檔案名稱必須少於 260 個字元。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "指定的路徑無效，（比方說，它位於未對應的磁碟機上）。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "開啟檔案時發生 I/O 錯誤。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>指定為唯讀的檔案。       -或者-目前的平台不支援此作業。       -或-<code>path</code>指定了目錄。       -或者-呼叫端沒有必要的權限。       -<code>mode</code>是<xref href=&quot;System.IO.FileMode&quot;></xref>和指定的檔案是隱藏的檔案。"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>mode</code>指定的值無效。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "中指定的檔案<code> path </code>找不到。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>是無效的格式。"
  platform:
  - net462
- uid: System.IO.File.Open(System.String,System.IO.FileMode,System.IO.FileAccess)
  id: Open(System.String,System.IO.FileMode,System.IO.FileAccess)
  parent: System.IO.File
  langs:
  - csharp
  name: Open(String,FileMode,FileAccess)
  nameWithType: File.Open(String,FileMode,FileAccess)
  fullName: System.IO.File.Open(String,FileMode,FileAccess)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "開啟<xref href=&quot;System.IO.FileStream&quot;></xref>指定路徑上以指定的模式和存取。"
  remarks: "`path`參數可以指定相對或絕對路徑資訊。 相對路徑的資訊會解譯為與目前工作目錄。 若要取得目前工作目錄，請參閱<xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A>"
  example:
  - "The following example opens a file with read-only access.  \n  \n [!code-cs[file open2#1](~/add/codesnippet/csharp/m-system.io.file.open-sy_1_1.cs)]\n [!code-cpp[file open2#1](~/add/codesnippet/cpp/m-system.io.file.open-sy_1_1.cpp)]\n [!code-vb[file open2#1](~/add/codesnippet/visualbasic/m-system.io.file.open-sy_1_1.vb)]"
  syntax:
    content: public static System.IO.FileStream Open (string path, System.IO.FileMode mode, System.IO.FileAccess access);
    parameters:
    - id: path
      type: System.String
      description: "要開啟的檔案。"
    - id: mode
      type: System.IO.FileMode
      description: "A <xref href=&quot;System.IO.FileMode&quot;> </xref>值，指定是否會建立一個檔案，是否有一個不存在，並決定是否保留或覆寫現有檔案的內容。"
    - id: access
      type: System.IO.FileAccess
      description: "A <xref href=&quot;System.IO.FileAccess&quot;> </xref>值，指定可以在檔案執行的作業。"
    return:
      type: System.IO.FileStream
      description: "不共用<xref href=&quot;System.IO.FileStream&quot;> </xref> ，提供具有指定的模式和存取指定的檔案的存取。"
  overload: System.IO.File.Open*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>為零長度字串、 只包含空格，或包含一或多個無效字元所定義的<xref:System.IO.Path.InvalidPathChars>。       -or-       <code>access</code> specified <xref uid=&quot;langword_csharp_Read&quot; name=&quot;Read&quot; href=&quot;&quot;></xref> and <code>mode</code> specified <xref uid=&quot;langword_csharp_Create&quot; name=&quot;Create&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_CreateNew&quot; name=&quot;CreateNew&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Truncate&quot; name=&quot;Truncate&quot; href=&quot;&quot;></xref>, or <xref uid=&quot;langword_csharp_Append&quot; name=&quot;Append&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "指定的路徑、 檔案名稱，或兩者都超出系統定義的長度上限。 例如，windows 平台上，路徑必須少於 248 個字元，和檔案名稱必須少於 260 個字元。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "指定的路徑無效，（比方說，它位於未對應的磁碟機上）。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "開啟檔案時發生 I/O 錯誤。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>指定了唯讀的檔案和<code>access</code>不<xref uid=&quot;langword_csharp_Read&quot; name=&quot;Read&quot; href=&quot;&quot;> </xref>。       -或-<code>path</code>指定了目錄。       -或者-呼叫端沒有必要的權限。       -<code>mode</code>是<xref href=&quot;System.IO.FileMode&quot;></xref>和指定的檔案是隱藏的檔案。"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>mode</code>或<code>access</code>指定的值無效。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "中指定的檔案<code> path </code>找不到。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>是無效的格式。"
  platform:
  - net462
- uid: System.IO.File.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)
  id: Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)
  parent: System.IO.File
  langs:
  - csharp
  name: Open(String,FileMode,FileAccess,FileShare)
  nameWithType: File.Open(String,FileMode,FileAccess,FileShare)
  fullName: System.IO.File.Open(String,FileMode,FileAccess,FileShare)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "開啟<xref href=&quot;System.IO.FileStream&quot;></xref>上指定的路徑，具有指定的模式，具有讀取、 寫入或讀取/寫入存取和指定的共用選項。"
  remarks: "`path`參數可以指定相對或絕對路徑資訊。 相對路徑的資訊會解譯為與目前工作目錄。 若要取得目前工作目錄，請參閱<xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A>       如需的一般 I/O 工作清單，請參閱[一般 I/O 工作](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following example opens a file with read-only access and with file sharing disallowed.  \n  \n [!code-cs[file open3#1](~/add/codesnippet/csharp/da5a0cfa-1b45-4d75-942d-_1.cs)]\n [!code-cpp[file open3#1](~/add/codesnippet/cpp/da5a0cfa-1b45-4d75-942d-_1.cpp)]\n [!code-vb[file open3#1](~/add/codesnippet/visualbasic/da5a0cfa-1b45-4d75-942d-_1.vb)]"
  syntax:
    content: public static System.IO.FileStream Open (string path, System.IO.FileMode mode, System.IO.FileAccess access, System.IO.FileShare share);
    parameters:
    - id: path
      type: System.String
      description: "要開啟的檔案。"
    - id: mode
      type: System.IO.FileMode
      description: "A <xref href=&quot;System.IO.FileMode&quot;> </xref>值，指定是否會建立一個檔案，是否有一個不存在，並決定是否保留或覆寫現有檔案的內容。"
    - id: access
      type: System.IO.FileAccess
      description: "A <xref href=&quot;System.IO.FileAccess&quot;> </xref>值，指定可以在檔案執行的作業。"
    - id: share
      type: System.IO.FileShare
      description: "A <xref href=&quot;System.IO.FileShare&quot;> </xref>值，指定其他執行緒對檔案擁有的存取類型。"
    return:
      type: System.IO.FileStream
      description: "A <xref href=&quot;System.IO.FileStream&quot;> </xref>上指定的路徑，具有指定的模式，具有讀取、 寫入或讀取/寫入存取和指定的共用選項。"
  overload: System.IO.File.Open*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>為零長度字串、 只包含空格，或包含一或多個無效字元所定義的<xref:System.IO.Path.InvalidPathChars>。       -or-       <code>access</code> specified <xref uid=&quot;langword_csharp_Read&quot; name=&quot;Read&quot; href=&quot;&quot;></xref> and <code>mode</code> specified <xref uid=&quot;langword_csharp_Create&quot; name=&quot;Create&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_CreateNew&quot; name=&quot;CreateNew&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Truncate&quot; name=&quot;Truncate&quot; href=&quot;&quot;></xref>, or <xref uid=&quot;langword_csharp_Append&quot; name=&quot;Append&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "指定的路徑、 檔案名稱，或兩者都超出系統定義的長度上限。 例如，windows 平台上，路徑必須少於 248 個字元，和檔案名稱必須少於 260 個字元。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "指定的路徑無效，（比方說，它位於未對應的磁碟機上）。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "開啟檔案時發生 I/O 錯誤。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>指定了唯讀的檔案和<code>access</code>不<xref uid=&quot;langword_csharp_Read&quot; name=&quot;Read&quot; href=&quot;&quot;> </xref>。       -或-<code>path</code>指定了目錄。       -或者-呼叫端沒有必要的權限。       -<code>mode</code>是<xref href=&quot;System.IO.FileMode&quot;></xref>和指定的檔案是隱藏的檔案。"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>mode</code><code>access</code>，或<code>share</code>指定的值無效。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "中指定的檔案<code> path </code>找不到。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>是無效的格式。"
  platform:
  - net462
- uid: System.IO.File.OpenRead(System.String)
  id: OpenRead(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: OpenRead(String)
  nameWithType: File.OpenRead(String)
  fullName: System.IO.File.OpenRead(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "開啟現有的檔案進行讀取。"
  remarks: "這個方法是相等的<xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%29><xref:System.IO.FileMode>值<xref:System.IO.FileMode>、<xref:System.IO.FileAccess>值和<xref:System.IO.FileAccess><xref:System.IO.FileShare><xref:System.IO.FileShare>.</xref:System.IO.FileShare>值</xref:System.IO.FileShare></xref:System.IO.FileAccess></xref:System.IO.FileAccess></xref:System.IO.FileMode>的</xref:System.IO.FileMode>多載的建構函式</xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%29>       `path`參數可以指定相對或絕對路徑資訊。 相對路徑的資訊會解譯為與目前工作目錄。 若要取得目前工作目錄，請參閱<xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A>       如需的一般 I/O 工作清單，請參閱[一般 I/O 工作](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following example opens a file for reading.  \n  \n [!code-cs[file openread#1](~/add/codesnippet/csharp/m-system.io.file.openrea_1.cs)]\n [!code-vb[file openread#1](~/add/codesnippet/visualbasic/m-system.io.file.openrea_1.vb)]\n [!code-cpp[file openread#1](~/add/codesnippet/cpp/m-system.io.file.openrea_1.cpp)]"
  syntax:
    content: public static System.IO.FileStream OpenRead (string path);
    parameters:
    - id: path
      type: System.String
      description: "要被開啟來讀取的檔案。"
    return:
      type: System.IO.FileStream
      description: "唯讀<xref href=&quot;System.IO.FileStream&quot;></xref>上指定的路徑。"
  overload: System.IO.File.OpenRead*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>為零長度字串、 只包含空格，或包含一或多個無效字元所定義的<xref:System.IO.Path.InvalidPathChars>。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "指定的路徑、 檔案名稱，或兩者都超出系統定義的長度上限。 例如，windows 平台上，路徑必須少於 248 個字元，和檔案名稱必須少於 260 個字元。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "指定的路徑無效，（比方說，它位於未對應的磁碟機上）。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>指定了目錄。       -或者-呼叫端沒有必要的權限。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "中指定的檔案<code> path </code>找不到。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>是無效的格式。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "開啟檔案時發生 I/O 錯誤。"
  platform:
  - net462
- uid: System.IO.File.OpenText(System.String)
  id: OpenText(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: OpenText(String)
  nameWithType: File.OpenText(String)
  fullName: System.IO.File.OpenText(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "開啟現有 utf-8 編碼的文字檔案進行讀取。"
  remarks: "這個方法相當於<xref:System.IO.StreamReader.%23ctor%28System.String%29>建構函式多載。</xref:System.IO.StreamReader.%23ctor%28System.String%29>       `path`參數可以指定相對或絕對路徑資訊。 相對路徑的資訊會解譯為與目前工作目錄。 若要取得目前工作目錄，請參閱<xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A>       如需的一般 I/O 工作清單，請參閱[一般 I/O 工作](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following example opens a text file for reading.  \n  \n [!code-vb[file opentext#1](~/add/codesnippet/visualbasic/m-system.io.file.opentex_1.vb)]\n [!code-cs[file opentext#1](~/add/codesnippet/csharp/m-system.io.file.opentex_1.cs)]\n [!code-cpp[file opentext#1](~/add/codesnippet/cpp/m-system.io.file.opentex_1.cpp)]"
  syntax:
    content: public static System.IO.StreamReader OpenText (string path);
    parameters:
    - id: path
      type: System.String
      description: "要被開啟來讀取的檔案。"
    return:
      type: System.IO.StreamReader
      description: "<xref:System.IO.StreamReader>在指定的路徑。</xref:System.IO.StreamReader>"
  overload: System.IO.File.OpenText*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "呼叫端沒有必要的權限。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>為零長度字串、 只包含空格，或包含一或多個無效字元所定義的<xref:System.IO.Path.InvalidPathChars>。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "指定的路徑、 檔案名稱，或兩者都超出系統定義的長度上限。 例如，windows 平台上，路徑必須少於 248 個字元，和檔案名稱必須少於 260 個字元。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "指定的路徑無效，（比方說，它位於未對應的磁碟機上）。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "中指定的檔案<code> path </code>找不到。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>是無效的格式。"
  platform:
  - net462
- uid: System.IO.File.OpenWrite(System.String)
  id: OpenWrite(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: OpenWrite(String)
  nameWithType: File.OpenWrite(String)
  fullName: System.IO.File.OpenWrite(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "開啟現有的檔案或建立新檔案進行寫入。"
  remarks: "這個方法相當於<xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%29>檔案模式設定為建構函式多載<xref:System.IO.FileMode>，若要設定的存取權<xref:System.IO.FileAccess>，和共用模式設為<xref:System.IO.FileShare>.</xref:System.IO.FileShare> </xref:System.IO.FileAccess> </xref:System.IO.FileMode> </xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%29>       OpenWrite 方法開啟的檔案，其中一個已存在的檔案路徑，或如果不存在的話，會建立新的檔案。 現有的檔案，它不會將新的文字附加至現有的文字。 相反地，它會覆寫現有的字元與新的字元。 如果您覆寫較長的字串 （例如，&quot;This is OpenWrite 方法的測試)&quot;使用較短的字串 （例如 [第二個執行]），檔案會包含字串的混合 (「 第二個 runtest OpenWrite 方法的&quot;)。       `path`參數會指定相對或絕對路徑資訊。 相對路徑的資訊會解譯為與目前工作目錄。 取得目前工作目錄，請使用<xref:System.IO.Directory.GetCurrentDirectory%2A>方法。</xref:System.IO.Directory.GetCurrentDirectory%2A>       如需的一般 I/O 工作清單，請參閱[一般 I/O 工作](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following example opens a file for reading and writing.  \n  \n [!code-cpp[file openwrite#1](~/add/codesnippet/cpp/m-system.io.file.openwri_1.cpp)]\n [!code-cs[file openwrite#1](~/add/codesnippet/csharp/m-system.io.file.openwri_1.cs)]\n [!code-vb[file openwrite#1](~/add/codesnippet/visualbasic/m-system.io.file.openwri_1.vb)]"
  syntax:
    content: public static System.IO.FileStream OpenWrite (string path);
    parameters:
    - id: path
      type: System.String
      description: "要被開啟來寫入的檔案。"
    return:
      type: System.IO.FileStream
      description: "不共用<xref href=&quot;System.IO.FileStream&quot;></xref>物件使用指定的路徑上<xref href=&quot;System.IO.FileAccess&quot;></xref>存取。"
  overload: System.IO.File.OpenWrite*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "呼叫端沒有必要的權限。       - <code> path </code>指定唯讀檔案或目錄。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>為零長度字串、 只包含空格，或包含一或多個無效字元所定義的<xref:System.IO.Path.InvalidPathChars>。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "指定的路徑、 檔案名稱，或兩者都超出系統定義的長度上限。 例如，windows 平台上，路徑必須少於 248 個字元，和檔案名稱必須少於 260 個字元。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "指定的路徑無效，（比方說，它位於未對應的磁碟機上）。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>是無效的格式。"
  platform:
  - net462
- uid: System.IO.File.ReadAllBytes(System.String)
  id: ReadAllBytes(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: ReadAllBytes(String)
  nameWithType: File.ReadAllBytes(String)
  fullName: System.IO.File.ReadAllBytes(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "開啟二進位檔案的檔案內容讀入位元組陣列，然後關閉檔案。"
  remarks: "檔案路徑，這個方法會開啟該檔案，檔案的內容讀入位元組陣列，然後關閉檔案。"
  syntax:
    content: public static byte[] ReadAllBytes (string path);
    parameters:
    - id: path
      type: System.String
      description: "要開啟用於讀取的檔案。"
    return:
      type: System.Byte[]
      description: "位元組陣列，包含檔案的內容。"
  overload: System.IO.File.ReadAllBytes*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>為零長度字串、 只包含空格，或包含一或多個無效字元所定義的<xref:System.IO.Path.InvalidPathChars>。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "指定的路徑、 檔案名稱，或兩者都超出系統定義的長度上限。 例如，windows 平台上，路徑必須少於 248 個字元，和檔案名稱必須少於 260 個字元。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "指定的路徑無效 （例如，它位於未對應的磁碟機上）。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "開啟檔案時發生 I/O 錯誤。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "目前的平台不支援此作業。       - <code> path </code>指定了目錄。       -或者-呼叫端沒有必要的權限。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "中指定的檔案<code> path </code>找不到。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>是無效的格式。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "呼叫端沒有必要的權限。"
  platform:
  - net462
- uid: System.IO.File.ReadAllLines(System.String)
  id: ReadAllLines(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: ReadAllLines(String)
  nameWithType: File.ReadAllLines(String)
  fullName: System.IO.File.ReadAllLines(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "開啟文字檔，讀取的檔案所有行，然後關閉檔案。"
  remarks: "This method opens a file, reads each line of the file, then adds each line as an element of a string array. It then closes the file. A line is defined as a sequence of characters followed by a carriage return ('\\r'), a line feed ('\\n'), or a carriage return immediately followed by a line feed. The resulting string does not contain the terminating carriage return and/or line feed.  \n  \n This method attempts to automatically detect the encoding of a file based on the presence of byte order marks. Encoding formats UTF-8 and UTF-32 (both big-endian and little-endian) can be detected."
  example:
  - "The following code example demonstrates the use of the ReadAllLines method to display the contents of a file. In this example a file is created, if it doesn't already exist, and text is added to it.  \n  \n [!code-vb[System.IO.File.AllLines#00](~/add/codesnippet/visualbasic/m-system.io.file.readall_1_1.vb)]\n [!code-cs[System.IO.File.AllLines#00](~/add/codesnippet/csharp/m-system.io.file.readall_1_1.cs)]"
  syntax:
    content: public static string[] ReadAllLines (string path);
    parameters:
    - id: path
      type: System.String
      description: "要開啟用於讀取的檔案。"
    return:
      type: System.String[]
      description: "字串陣列，包含檔案所有行。"
  overload: System.IO.File.ReadAllLines*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>為零長度字串、 只包含空格，或包含一或多個無效字元所定義的<xref:System.IO.Path.InvalidPathChars>。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "指定的路徑、 檔案名稱，或兩者都超出系統定義的長度上限。 例如，windows 平台上，路徑必須少於 248 個字元，和檔案名稱必須少於 260 個字元。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "指定的路徑無效 （例如，它位於未對應的磁碟機上）。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "開啟檔案時發生 I/O 錯誤。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>指定為唯讀的檔案。       -或者-目前的平台不支援此作業。       -或-<code>path</code>指定了目錄。       -或者-呼叫端沒有必要的權限。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "中指定的檔案<code> path </code>找不到。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>是無效的格式。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "呼叫端沒有必要的權限。"
  platform:
  - net462
- uid: System.IO.File.ReadAllLines(System.String,System.Text.Encoding)
  id: ReadAllLines(System.String,System.Text.Encoding)
  parent: System.IO.File
  langs:
  - csharp
  name: ReadAllLines(String,Encoding)
  nameWithType: File.ReadAllLines(String,Encoding)
  fullName: System.IO.File.ReadAllLines(String,Encoding)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "開啟檔案讀取具有指定的編碼方式的檔案所有行，然後關閉檔案。"
  remarks: "This method opens a file, reads each line of the file, and then adds each line as an element of a string array. It then closes the file. A line is defined as a sequence of characters followed by a carriage return ('\\r'), a line feed ('\\n'), or a carriage return immediately followed by a line feed. The resulting string does not contain the terminating carriage return and/or line feed.  \n  \n This method attempts to automatically detect the encoding of a file based on the presence of byte order marks. Encoding formats UTF-8 and UTF-32 (both big-endian and little-endian) can be detected."
  example:
  - "The following code example demonstrates the use of the ReadAllLines method to display the contents of a file. In this example a file is created, if it doesn't already exist, and text is added to it.  \n  \n [!code-vb[System.IO.File.AllLines_Encoding#00](~/add/codesnippet/visualbasic/m-system.io.file.readall_0_1.vb)]\n [!code-cs[System.IO.File.AllLines_Encoding#00](~/add/codesnippet/csharp/m-system.io.file.readall_0_1.cs)]"
  syntax:
    content: public static string[] ReadAllLines (string path, System.Text.Encoding encoding);
    parameters:
    - id: path
      type: System.String
      description: "要開啟用於讀取的檔案。"
    - id: encoding
      type: System.Text.Encoding
      description: "套用至檔案的內容編碼方式。"
    return:
      type: System.String[]
      description: "字串陣列，包含檔案所有行。"
  overload: System.IO.File.ReadAllLines*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>為零長度字串、 只包含空格，或包含一或多個無效字元所定義的<xref:System.IO.Path.InvalidPathChars>。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "指定的路徑、 檔案名稱，或兩者都超出系統定義的長度上限。 例如，windows 平台上，路徑必須少於 248 個字元，和檔案名稱必須少於 260 個字元。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "指定的路徑無效 （例如，它位於未對應的磁碟機上）。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "開啟檔案時發生 I/O 錯誤。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>指定為唯讀的檔案。       -或者-目前的平台不支援此作業。       -或-<code>path</code>指定了目錄。       -或者-呼叫端沒有必要的權限。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "中指定的檔案<code> path </code>找不到。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>是無效的格式。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "呼叫端沒有必要的權限。"
  platform:
  - net462
- uid: System.IO.File.ReadAllText(System.String)
  id: ReadAllText(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: ReadAllText(String)
  nameWithType: File.ReadAllText(String)
  fullName: System.IO.File.ReadAllText(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "開啟文字檔，讀取的檔案所有行，然後關閉檔案。"
  remarks: "This method opens a file, reads each line of the file, and then adds each line as an element of a string. It then closes the file. A line is defined as a sequence of characters followed by a carriage return ('\\r'), a line feed ('\\n'), or a carriage return immediately followed by a line feed. The resulting string does not contain the terminating carriage return and/or line feed.  \n  \n This method attempts to automatically detect the encoding of a file based on the presence of byte order marks. Encoding formats UTF-8 and UTF-32 (both big-endian and little-endian) can be detected.  \n  \n Use the <xref:System.IO.File.ReadAllText%28System.String%2CSystem.Text.Encoding%29> method overload when reading files that might contain imported text, because unrecognized characters may not be read correctly.  \n  \n The file handle is guaranteed to be closed by this method, even if exceptions are raised."
  example:
  - "The following code example demonstrates the use of the ReadAllText method to display the contents of a file. In this example a file is created, if it doesn't already exist, and text is added to it.  \n  \n [!code-vb[System.IO.File.AllText#00](~/add/codesnippet/visualbasic/m-system.io.file.readall_3_1.vb)]\n [!code-cs[System.IO.File.AllText#00](~/add/codesnippet/csharp/m-system.io.file.readall_3_1.cs)]"
  syntax:
    content: public static string ReadAllText (string path);
    parameters:
    - id: path
      type: System.String
      description: "要開啟用於讀取的檔案。"
    return:
      type: System.String
      description: "字串，包含檔案所有行。"
  overload: System.IO.File.ReadAllText*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>為零長度字串、 只包含空格，或包含一或多個無效字元所定義的<xref:System.IO.Path.InvalidPathChars>。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "指定的路徑、 檔案名稱，或兩者都超出系統定義的長度上限。 例如，windows 平台上，路徑必須少於 248 個字元，和檔案名稱必須少於 260 個字元。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "指定的路徑無效 （例如，它位於未對應的磁碟機上）。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "開啟檔案時發生 I/O 錯誤。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>指定為唯讀的檔案。       -或者-目前的平台不支援此作業。       -或-<code>path</code>指定了目錄。       -或者-呼叫端沒有必要的權限。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "中指定的檔案<code> path </code>找不到。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>是無效的格式。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "呼叫端沒有必要的權限。"
  platform:
  - net462
- uid: System.IO.File.ReadAllText(System.String,System.Text.Encoding)
  id: ReadAllText(System.String,System.Text.Encoding)
  parent: System.IO.File
  langs:
  - csharp
  name: ReadAllText(String,Encoding)
  nameWithType: File.ReadAllText(String,Encoding)
  fullName: System.IO.File.ReadAllText(String,Encoding)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "開啟檔案讀取具有指定的編碼方式的檔案所有行，然後關閉檔案。"
  remarks: "This method opens a file, reads each line of the file, and then adds each line as an element of a string. It then closes the file. A line is defined as a sequence of characters followed by a carriage return ('\\r'), a line feed ('\\n'), or a carriage return immediately followed by a line feed. The resulting string does not contain the terminating carriage return and/or line feed.  \n  \n This method attempts to automatically detect the encoding of a file based on the presence of byte order marks. Encoding formats UTF-8 and UTF-32 (both big-endian and little-endian) can be detected.  \n  \n The file handle is guaranteed to be closed by this method, even if exceptions are raised.  \n  \n To use the encoding settings as configured for your operating system, specify the <xref:System.Text.Encoding.Default%2A?displayProperty=fullName> property for the `encoding` parameter."
  example:
  - "The following code example demonstrates the use of the ReadAllText method to display the contents of a file. In this example a file is created, if it doesn't already exist, and text is added to it.  \n  \n [!code-cs[System.IO.File.AllText_Encoding#00](~/add/codesnippet/csharp/m-system.io.file.readall_2_1.cs)]\n [!code-vb[System.IO.File.AllText_Encoding#00](~/add/codesnippet/visualbasic/m-system.io.file.readall_2_1.vb)]"
  syntax:
    content: public static string ReadAllText (string path, System.Text.Encoding encoding);
    parameters:
    - id: path
      type: System.String
      description: "要開啟用於讀取的檔案。"
    - id: encoding
      type: System.Text.Encoding
      description: "套用至檔案的內容編碼方式。"
    return:
      type: System.String
      description: "字串，包含檔案所有行。"
  overload: System.IO.File.ReadAllText*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>為零長度字串、 只包含空格，或包含一或多個無效字元所定義的<xref:System.IO.Path.InvalidPathChars>。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "指定的路徑、 檔案名稱，或兩者都超出系統定義的長度上限。 例如，windows 平台上，路徑必須少於 248 個字元，和檔案名稱必須少於 260 個字元。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "指定的路徑無效 （例如，它位於未對應的磁碟機上）。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "開啟檔案時發生 I/O 錯誤。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>指定為唯讀的檔案。       -或者-目前的平台不支援此作業。       -或-<code>path</code>指定了目錄。       -或者-呼叫端沒有必要的權限。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "中指定的檔案<code> path </code>找不到。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>是無效的格式。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "呼叫端沒有必要的權限。"
  platform:
  - net462
- uid: System.IO.File.ReadLines(System.String)
  id: ReadLines(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: ReadLines(String)
  nameWithType: File.ReadLines(String)
  fullName: System.IO.File.ReadLines(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "讀取檔案的所有行。"
  remarks: "ReadLines 和<xref:System.IO.File.ReadAllLines%2A>方法不同，如下所示︰ 如果您使用 ReadLines，就可以開始之前，會傳回整個集合列舉字串的集合，則當您使用<xref:System.IO.File.ReadAllLines%2A>，您必須等候之前可以存取陣列傳回字串的整個陣列。</xref:System.IO.File.ReadAllLines%2A> </xref:System.IO.File.ReadAllLines%2A> 因此，當您使用非常大型的檔案，ReadLines 可以更有效率。       您可以使用 ReadLines 方法，執行下列動作:-執行[LINQ to Objects](~/add/includes/ajax-current-ext-md.md)檔案以取得一組篩選其線條上的查詢。      -寫入的檔案所傳回之集合的行<xref:System.IO.File.WriteAllLines%28System.String%2CSystem.Collections.Generic.IEnumerable%7BSystem.String%7D%29?displayProperty=fullName>方法，或將它們附加至現有的檔案與<xref:System.IO.File.AppendAllLines%28System.String%2CSystem.Collections.Generic.IEnumerable%7BSystem.String%7D%29?displayProperty=fullName>方法。</xref:System.IO.File.AppendAllLines%28System.String%2CSystem.Collections.Generic.IEnumerable%7BSystem.String%7D%29?displayProperty=fullName> </xref:System.IO.File.WriteAllLines%28System.String%2CSystem.Collections.Generic.IEnumerable%7BSystem.String%7D%29?displayProperty=fullName>      -建立立即填入的集合，其中採用<xref:System.Collections.Generic.IEnumerable%601>字串的建構函式，例如<xref:System.Collections.Generic.IList%601><xref:System.Collections.Generic.Queue%601>.</xref:System.Collections.Generic.Queue%601>或</xref:System.Collections.Generic.IList%601>集合</xref:System.Collections.Generic.IEnumerable%601>的執行個體       這個方法會使用<xref:System.Text.Encoding.UTF8%2A>編碼值。</xref:System.Text.Encoding.UTF8%2A>"
  example:
  - "The following example reads the lines of a file to find lines that contain specified strings.  \n  \n [!code-vb[System.IO.File.ReadLines#1](~/add/codesnippet/visualbasic/m-system.io.file.readlin_1.vb)]\n [!code-cs[System.IO.File.ReadLines#1](~/add/codesnippet/csharp/m-system.io.file.readlin_1.cs)]  \n  \n The following example uses the ReadLines method in a LINQ query that enumerates all directories for files that have a .txt extension, reads each line of the file, and displays the line if it contains the string \"Microsoft\".  \n  \n [!code-cs[System.IO.Directory.EnumerateFiles#1](~/add/codesnippet/csharp/m-system.io.file.readlin_2.cs)]\n [!code-vb[System.IO.Directory.EnumerateFiles#1](~/add/codesnippet/visualbasic/m-system.io.file.readlin_2.vb)]"
  syntax:
    content: public static System.Collections.Generic.IEnumerable<string> ReadLines (string path);
    parameters:
    - id: path
      type: System.String
      description: "要讀取的檔案。"
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
      description: "所有行的檔案或查詢的結果各行。"
  overload: System.IO.File.ReadLines*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>為零長度字串、 只包含空格，或包含所定義的一個或多個無效的字元<xref:System.IO.Path.GetInvalidPathChars*>方法。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "<code>path</code>無效 （例如，它位於未對應的磁碟機上）。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "所指定的檔案<code> path </code>找不到。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "開啟檔案時發生 I/O 錯誤。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "<code>path</code>超過系統定義的長度上限。 例如，在 Windows 架構的平台，路徑必須少於 248 個字元，檔案名稱必須少於 260 個字元。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "呼叫端沒有必要的權限。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>指定了唯讀的檔案。       -或者-目前的平台不支援此作業。       -或-<code>path</code>是目錄。       -或者-呼叫端沒有必要的權限。"
  platform:
  - net462
- uid: System.IO.File.ReadLines(System.String,System.Text.Encoding)
  id: ReadLines(System.String,System.Text.Encoding)
  parent: System.IO.File
  langs:
  - csharp
  name: ReadLines(String,Encoding)
  nameWithType: File.ReadLines(String,Encoding)
  fullName: System.IO.File.ReadLines(String,Encoding)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "讀取具有指定的編碼方式的檔案所有行。"
  remarks: "使用這個方法來指定要使用的編碼方式讀取檔案。       ReadLines 和<xref:System.IO.File.ReadAllLines%2A>方法不同，如下所示︰ 如果您使用 ReadLines，就可以開始之前，會傳回整個集合列舉字串的集合。</xref:System.IO.File.ReadAllLines%2A> 當您使用<xref:System.IO.File.ReadAllLines%2A>，您必須等候之前可以存取陣列傳回字串的整個陣列。</xref:System.IO.File.ReadAllLines%2A> 因此，當您使用非常大型的檔案，ReadLines 可以更有效率。       您可以使用 ReadLines 方法，執行下列動作:-執行[LINQ to Objects](~/add/includes/ajax-current-ext-md.md)檔案以取得一組篩選其線條上的查詢。      -寫入的檔案所傳回之集合的行<xref:System.IO.File.WriteAllLines%28System.String%2CSystem.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.Text.Encoding%29?displayProperty=fullName>方法，或將它們附加至現有的檔案與<xref:System.IO.File.AppendAllLines%28System.String%2CSystem.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.Text.Encoding%29?displayProperty=fullName>方法。</xref:System.IO.File.AppendAllLines%28System.String%2CSystem.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.Text.Encoding%29?displayProperty=fullName> </xref:System.IO.File.WriteAllLines%28System.String%2CSystem.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.Text.Encoding%29?displayProperty=fullName>      -建立立即填入的集合，其中採用<xref:System.Collections.Generic.IEnumerable%601>字串的建構函式，例如<xref:System.Collections.Generic.IList%601><xref:System.Collections.Generic.Queue%601>.</xref:System.Collections.Generic.Queue%601>或</xref:System.Collections.Generic.IList%601>集合</xref:System.Collections.Generic.IEnumerable%601>的執行個體"
  syntax:
    content: public static System.Collections.Generic.IEnumerable<string> ReadLines (string path, System.Text.Encoding encoding);
    parameters:
    - id: path
      type: System.String
      description: "要讀取的檔案。"
    - id: encoding
      type: System.Text.Encoding
      description: "編碼方式會套用至檔案的內容。"
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
      description: "所有行的檔案或查詢的結果各行。"
  overload: System.IO.File.ReadLines*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>為零長度字串、 只包含空格，或包含一或多個無效字元所定義的<xref:System.IO.Path.GetInvalidPathChars*>方法。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "<code>path</code>無效 （例如，它位於未對應的磁碟機上）。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "所指定的檔案<code> path </code>找不到。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "開啟檔案時發生 I/O 錯誤。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "<code>path</code>超過系統定義的長度上限。 例如，在 Windows 架構的平台，路徑必須少於 248 個字元，檔案名稱必須少於 260 個字元。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "呼叫端沒有必要的權限。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>指定了唯讀的檔案。       -或者-目前的平台不支援此作業。       -或-<code>path</code>是目錄。       -或者-呼叫端沒有必要的權限。"
  platform:
  - net462
- uid: System.IO.File.Replace(System.String,System.String,System.String)
  id: Replace(System.String,System.String,System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: Replace(String,String,String)
  nameWithType: File.Replace(String,String,String)
  fullName: System.IO.File.Replace(String,String,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "另一個檔案，刪除原始檔案，並建立已取代檔案的備份的內容，取代指定檔案的內容。"
  remarks: "Replace 方法，另一個檔案的內容取代指定檔案的內容。  它也會建立已取代檔案的備份。       如果`sourceFileName`和`destinationFileName`會在不同的磁碟區，這個方法會引發例外狀況。 如果`destinationBackupFileName`是在原始程式檔中的不同磁碟區，將執行的動作會刪除備份檔案。       傳遞`null`至`destinationBackupFileName`參數，如果您不想建立已取代檔案的備份。"
  example:
  - "The following code example uses the <xref:System.IO.File.Replace%2A> method to replace a file with another file and create a backup of the replaced file.  \n  \n [!code-vb[IO.File.Replace#1](~/add/codesnippet/visualbasic/m-system.io.file.replace_1.vb)]\n [!code-cs[IO.File.Replace#1](~/add/codesnippet/csharp/m-system.io.file.replace_1.cs)]\n [!code-cpp[IO.File.Replace#1](~/add/codesnippet/cpp/m-system.io.file.replace_1.cpp)]"
  syntax:
    content: public static void Replace (string sourceFileName, string destinationFileName, string destinationBackupFileName);
    parameters:
    - id: sourceFileName
      type: System.String
      description: "取代所指定的檔案的檔案名稱`destinationFileName`。"
    - id: destinationFileName
      type: System.String
      description: "已取代的檔案名稱。"
    - id: destinationBackupFileName
      type: System.String
      description: "備份檔案的名稱。"
  overload: System.IO.File.Replace*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "描述的路徑<code> destinationFileName </code>參數不是合法的表單。       -描述的路徑<code> destinationBackupFileName </code>參數不是合法的表單。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>destinationFileName</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.DriveNotFoundException
    commentId: T:System.IO.DriveNotFoundException
    description: "指定了無效的磁碟機。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "目前所描述的檔案<xref href=&quot;System.IO.FileInfo&quot;></xref>找不到物件。       -所描述的檔案<code> destinationBackupFileName </code>找不到參數。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "An I/O error occurred while opening the file.  \n  \n \\- or -  \n  \n The <code>sourceFileName</code> and <code>destinationFileName</code> parameters specify the same file."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "指定的路徑、 檔案名稱，或兩者都超出系統定義的長度上限。 例如，windows 平台上，路徑必須少於 248 個字元，和檔案名稱必須少於 260 個字元。"
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "作業系統是 Windows 98 Second Edition 或更早版本和檔案系統不是 NTFS。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code> sourceFileName </code>或<code> destinationFileName </code>參數指定了唯讀的檔案。       -或者-目前的平台不支援此作業。       -或者-來源或目的地參數指定的目錄，而非檔案。       -或者-呼叫端沒有必要的權限。"
  platform:
  - net462
- uid: System.IO.File.Replace(System.String,System.String,System.String,System.Boolean)
  id: Replace(System.String,System.String,System.String,System.Boolean)
  parent: System.IO.File
  langs:
  - csharp
  name: Replace(String,String,String,Boolean)
  nameWithType: File.Replace(String,String,String,Boolean)
  fullName: System.IO.File.Replace(String,String,String,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "另一個檔案，刪除原始檔案，並建立已取代檔案的備份的內容取代指定檔案的內容，並選擇性地忽略合併錯誤。"
  remarks: "Replace 方法，另一個檔案的內容取代指定檔案的內容。  它也會建立已取代檔案的備份。       如果`sourceFileName`和`destinationFileName`會在不同的磁碟區，這個方法會引發例外狀況。 如果`destinationBackupFileName`是在原始程式檔中的不同磁碟區，將執行的動作會刪除備份檔案。       傳遞`null`至`destinationBackupFileName`參數，如果您不想建立已取代檔案的備份。"
  example:
  - "The following code example uses the Replace method to replace a file with another file and create a backup of the replaced file.  \n  \n [!code-vb[IO.File.Replace#1](~/add/codesnippet/visualbasic/be01e0a6-2a02-46ff-8d10-_1.vb)]\n [!code-cs[IO.File.Replace#1](~/add/codesnippet/csharp/be01e0a6-2a02-46ff-8d10-_1.cs)]\n [!code-cpp[IO.File.Replace#1](~/add/codesnippet/cpp/be01e0a6-2a02-46ff-8d10-_1.cpp)]"
  syntax:
    content: public static void Replace (string sourceFileName, string destinationFileName, string destinationBackupFileName, bool ignoreMetadataErrors);
    parameters:
    - id: sourceFileName
      type: System.String
      description: "取代所指定的檔案的檔案名稱`destinationFileName`。"
    - id: destinationFileName
      type: System.String
      description: "已取代的檔案名稱。"
    - id: destinationBackupFileName
      type: System.String
      description: "備份檔案的名稱。"
    - id: ignoreMetadataErrors
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>表示忽略合併錯誤 （例如屬性和存取控制清單 (Acl)） 已取代檔案中取代檔案否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.IO.File.Replace*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "描述的路徑<code> destinationFileName </code>參數不是合法的表單。       -描述的路徑<code> destinationBackupFileName </code>參數不是合法的表單。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>destinationFileName</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.DriveNotFoundException
    commentId: T:System.IO.DriveNotFoundException
    description: "指定了無效的磁碟機。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "目前所描述的檔案<xref href=&quot;System.IO.FileInfo&quot;></xref>找不到物件。       -所描述的檔案<code> destinationBackupFileName </code>找不到參數。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "An I/O error occurred while opening the file.  \n  \n \\- or -  \n  \n The <code>sourceFileName</code> and <code>destinationFileName</code> parameters specify the same file."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "指定的路徑、 檔案名稱，或兩者都超出系統定義的長度上限。 例如，windows 平台上，路徑必須少於 248 個字元，和檔案名稱必須少於 260 個字元。"
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "作業系統是 Windows 98 Second Edition 或更早版本和檔案系統不是 NTFS。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code> sourceFileName </code>或<code> destinationFileName </code>參數指定了唯讀的檔案。       -或者-目前的平台不支援此作業。       -或者-來源或目的地參數指定的目錄，而非檔案。       -或者-呼叫端沒有必要的權限。"
  platform:
  - net462
- uid: System.IO.File.SetAccessControl(System.String,System.Security.AccessControl.FileSecurity)
  id: SetAccessControl(System.String,System.Security.AccessControl.FileSecurity)
  parent: System.IO.File
  langs:
  - csharp
  name: SetAccessControl(String,FileSecurity)
  nameWithType: File.SetAccessControl(String,FileSecurity)
  fullName: System.IO.File.SetAccessControl(String,FileSecurity)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "適用於所描述的存取控制清單 (ACL) 項目<xref href=&quot;System.Security.AccessControl.FileSecurity&quot;></xref>物件至指定的檔案。"
  remarks: "SetAccessControl 方法適用於存取控制清單 (ACL) 項目代表 noninherited 的 ACL 清單的檔案。      > [!CAUTION] > ACL 指定`fileSecurity`參數已取代現有檔案的 ACL。 若要加入之新使用者的權限，請使用<xref:System.IO.File.GetAccessControl%2A>方法來取得現有的 ACL、 修改它，然後使用 SetAccessControl 來套用該備份檔案。</xref:System.IO.File.GetAccessControl%2A>       ACL 描述個人及/或群組，讓他們已經有或沒有，在指定的檔案上採取特定動作的權限。 如需詳細資訊，請參閱[如何︰ 加入或移除存取控制清單項目](~/add/includes/ajax-current-ext-md.md)。       只保存 SetAccessControl 方法<xref:System.Security.AccessControl.FileSecurity>物件建立後已修改的物件。</xref:System.Security.AccessControl.FileSecurity>  如果<xref:System.Security.AccessControl.FileSecurity>不修改物件，不會保存至檔案。</xref:System.Security.AccessControl.FileSecurity>  因此，不可以擷取<xref:System.Security.AccessControl.FileSecurity>物件從一個檔案，並重新套用到另一個檔案的相同物件。</xref:System.Security.AccessControl.FileSecurity>       若要將 ACL 資訊從一個檔案複製到另一個︰ 1。  使用<xref:System.IO.File.GetAccessControl%2A>方法來擷取<xref:System.Security.AccessControl.FileSecurity>從原始程式檔的物件。</xref:System.Security.AccessControl.FileSecurity> </xref:System.IO.File.GetAccessControl%2A>      2.  建立新<xref:System.Security.AccessControl.FileSecurity>目的地檔案的物件。</xref:System.Security.AccessControl.FileSecurity>      3.  使用<xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm%2A>或<xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A>來源方法<xref:System.Security.AccessControl.FileSecurity>擷取 ACL 資訊的物件。</xref:System.Security.AccessControl.FileSecurity> </xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A> </xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm%2A>      4.  使用<xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm%2A>或<xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A>方法可複製的資訊擷取到目的地的步驟 3 中<xref:System.Security.AccessControl.FileSecurity>物件。</xref:System.Security.AccessControl.FileSecurity> </xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A> </xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm%2A>      5.  設定目的地<xref:System.Security.AccessControl.FileSecurity>使用 SetAccessControl 方法的目的檔案的物件。</xref:System.Security.AccessControl.FileSecurity>       在 NTFS 環境中，<xref:System.Security.AccessControl.FileSystemRights>和<xref:System.Security.AccessControl.FileSystemRights>授與使用者時如果使用者具有<xref:System.Security.AccessControl.FileSystemRights>父資料夾的權限。</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights> 若要拒絕<xref:System.Security.AccessControl.FileSystemRights>和<xref:System.Security.AccessControl.FileSystemRights>，拒絕<xref:System.Security.AccessControl.FileSystemRights>父目錄上。</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights>"
  example:
  - "The following code example uses the <xref:System.IO.File.GetAccessControl%2A> and SetAccessControl methods to add and then remove an access control list (ACL) entry from a file.  You must supply a valid user or group account to run this example.  \n  \n [!code-cs[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/csharp/4f792c56-f52f-4b2d-89e4-_1.cs)]\n [!code-vb[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/visualbasic/4f792c56-f52f-4b2d-89e4-_1.vb)]\n [!code-cpp[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/cpp/4f792c56-f52f-4b2d-89e4-_1.cpp)]"
  syntax:
    content: public static void SetAccessControl (string path, System.Security.AccessControl.FileSecurity fileSecurity);
    parameters:
    - id: path
      type: System.String
      description: "新增或移除存取控制清單 (ACL) 項目從檔案。"
    - id: fileSecurity
      type: System.Security.AccessControl.FileSecurity
      description: "A <xref href=&quot;System.Security.AccessControl.FileSecurity&quot;> </xref>物件，描述要套用至所描述之檔案的 ACL 項目`path`參數。"
  overload: System.IO.File.SetAccessControl*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "開啟檔案時發生 I/O 錯誤。"
  - type: System.Runtime.InteropServices.SEHException
    commentId: T:System.Runtime.InteropServices.SEHException
    description: "The <code>path</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.SystemException
    commentId: T:System.SystemException
    description: "找不到檔案。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code> path </code>參數指定為唯讀的檔案。       -或者-目前的平台不支援此作業。       -或- <code> path </code>參數指定的目錄。       -或者-呼叫端沒有必要的權限。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>fileSecurity</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IO.File.SetAttributes(System.String,System.IO.FileAttributes)
  id: SetAttributes(System.String,System.IO.FileAttributes)
  parent: System.IO.File
  langs:
  - csharp
  name: SetAttributes(String,FileAttributes)
  nameWithType: File.SetAttributes(String,FileAttributes)
  fullName: System.IO.File.SetAttributes(String,FileAttributes)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "設定指定<xref href=&quot;System.IO.FileAttributes&quot;></xref>指定路徑上的檔案。"
  remarks: "`path`參數可以指定相對或絕對路徑資訊。 相對路徑的資訊會解譯為與目前工作目錄。 若要取得目前工作目錄，請參閱<xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A>       某些檔案屬性例如<xref:System.IO.FileAttributes>和<xref:System.IO.FileAttributes>，可以結合。</xref:System.IO.FileAttributes> </xref:System.IO.FileAttributes> 其他屬性，例如<xref:System.IO.FileAttributes>，必須單獨使用。</xref:System.IO.FileAttributes>       不可能變更的壓縮狀態<xref:System.IO.File>物件使用 SetAttributes 方法。</xref:System.IO.File>       如需的一般 I/O 工作清單，請參閱[一般 I/O 工作](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following example demonstrates the `GetAttributes` and `SetAttributes` methods by applying the `Archive` and `Hidden` attributes to a file.  \n  \n [!code-cs[File GetAttributes#1](~/add/codesnippet/csharp/m-system.io.file.setattr_1.cs)]\n [!code-cpp[File GetAttributes#1](~/add/codesnippet/cpp/m-system.io.file.setattr_1.cpp)]\n [!code-vb[File GetAttributes#1](~/add/codesnippet/visualbasic/m-system.io.file.setattr_1.vb)]"
  syntax:
    content: public static void SetAttributes (string path, System.IO.FileAttributes fileAttributes);
    parameters:
    - id: path
      type: System.String
      description: "檔案的路徑。"
    - id: fileAttributes
      type: System.IO.FileAttributes
      description: "列舉值的位元組合。"
  overload: System.IO.File.SetAttributes*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>是空的、 只包含空格、 包含無效的字元，或檔案屬性無效。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "指定的路徑、 檔案名稱，或兩者都超出系統定義的長度上限。 例如，windows 平台上，路徑必須少於 248 個字元，和檔案名稱必須少於 260 個字元。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>是無效的格式。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "指定的路徑無效，（比方說，它位於未對應的磁碟機上）。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "找不到檔案。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>指定為唯讀的檔案。       -或者-目前的平台不支援此作業。       -或-<code>path</code>指定了目錄。       -或者-呼叫端沒有必要的權限。"
  platform:
  - net462
- uid: System.IO.File.SetCreationTime(System.String,System.DateTime)
  id: SetCreationTime(System.String,System.DateTime)
  parent: System.IO.File
  langs:
  - csharp
  name: SetCreationTime(String,DateTime)
  nameWithType: File.SetCreationTime(String,DateTime)
  fullName: System.IO.File.SetCreationTime(String,DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "設定日期和時間的檔案所建立。"
  remarks: "`path`參數可以指定相對或絕對路徑資訊。 相對路徑的資訊會解譯為與目前工作目錄。 若要取得目前工作目錄，請參閱<xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A>       NTFS 格式化磁碟機可能會快取檔案中繼資訊，例如一段時間的檔案建立時間。 如此一來，可能需要明確地將設定檔的建立時間，如果您要覆寫或取代現有的檔案。       如需的一般 I/O 工作清單，請參閱[一般 I/O 工作](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public static void SetCreationTime (string path, DateTime creationTime);
    parameters:
    - id: path
      type: System.String
      description: "要設定其建立日期和時間資訊檔案。"
    - id: creationTime
      type: System.DateTime
      description: "A<xref:System.DateTime>包含要設定的建立日期和時間值`path`。</xref:System.DateTime> 這個值以本地時間表示。"
  overload: System.IO.File.SetCreationTime*
  exceptions:
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "找不到指定的路徑。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>為零長度字串、 只包含空格，或包含一或多個無效字元所定義的<xref:System.IO.Path.InvalidPathChars>。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "指定的路徑、 檔案名稱，或兩者都超出系統定義的長度上限。 例如，windows 平台上，路徑必須少於 248 個字元，和檔案名稱必須少於 260 個字元。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "執行作業時發生 I/O 錯誤。"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>creationTime</code>指定的值超出範圍的日期、 時間、 或兩者都允許這項作業。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "呼叫端沒有必要的權限。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>是無效的格式。"
  platform:
  - net462
- uid: System.IO.File.SetCreationTimeUtc(System.String,System.DateTime)
  id: SetCreationTimeUtc(System.String,System.DateTime)
  parent: System.IO.File
  langs:
  - csharp
  name: SetCreationTimeUtc(String,DateTime)
  nameWithType: File.SetCreationTimeUtc(String,DateTime)
  fullName: System.IO.File.SetCreationTimeUtc(String,DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "設定日期和時間，以國際標準時間 (UTC)，建立檔案。"
  remarks: "`path`參數可以指定相對或絕對路徑資訊。 相對路徑的資訊會解譯為與目前工作目錄。 若要取得目前工作目錄，請參閱<xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A>       NTFS 格式化磁碟機可能會快取檔案中繼資訊，例如一段時間的檔案建立時間。 如此一來，可能需要明確地將設定檔的建立時間，如果您要覆寫或取代現有的檔案。       如需的一般 I/O 工作清單，請參閱[一般 I/O 工作](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public static void SetCreationTimeUtc (string path, DateTime creationTimeUtc);
    parameters:
    - id: path
      type: System.String
      description: "要設定其建立日期和時間資訊檔案。"
    - id: creationTimeUtc
      type: System.DateTime
      description: "A<xref:System.DateTime>包含要設定的建立日期和時間值`path`。</xref:System.DateTime> 這個值以 UTC 時間表示。"
  overload: System.IO.File.SetCreationTimeUtc*
  exceptions:
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "找不到指定的路徑。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>為零長度字串、 只包含空格，或包含一或多個無效字元所定義的<xref:System.IO.Path.InvalidPathChars>。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "指定的路徑、 檔案名稱，或兩者都超出系統定義的長度上限。 例如，windows 平台上，路徑必須少於 248 個字元，和檔案名稱必須少於 260 個字元。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "執行作業時發生 I/O 錯誤。"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>creationTime</code>指定的值超出範圍的日期、 時間、 或兩者都允許這項作業。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "呼叫端沒有必要的權限。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>是無效的格式。"
  platform:
  - net462
- uid: System.IO.File.SetLastAccessTime(System.String,System.DateTime)
  id: SetLastAccessTime(System.String,System.DateTime)
  parent: System.IO.File
  langs:
  - csharp
  name: SetLastAccessTime(String,DateTime)
  nameWithType: File.SetLastAccessTime(String,DateTime)
  fullName: System.IO.File.SetLastAccessTime(String,DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "設定日期和時間的指定的檔案上次被存取。"
  remarks: "`path`參數可以指定相對或絕對路徑資訊。 相對路徑的資訊會解譯為與目前工作目錄。 若要取得目前工作目錄，請參閱<xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A>       如需的一般 I/O 工作清單，請參閱[一般 I/O 工作](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following example checks the file system for the specified file, creating it if necessary, and then sets and gets the last access time.  \n  \n [!code-cpp[file setlastaccess#1](~/add/codesnippet/cpp/m-system.io.file.setlast_0_1.cpp)]\n [!code-vb[file setlastaccess#1](~/add/codesnippet/visualbasic/m-system.io.file.setlast_0_1.vb)]\n [!code-cs[file setlastaccess#1](~/add/codesnippet/csharp/m-system.io.file.setlast_0_1.cs)]"
  syntax:
    content: public static void SetLastAccessTime (string path, DateTime lastAccessTime);
    parameters:
    - id: path
      type: System.String
      description: "這是要設定其存取日期和時間資訊檔案。"
    - id: lastAccessTime
      type: System.DateTime
      description: "A<xref:System.DateTime>包含要設定上次存取日期和時間值`path`。</xref:System.DateTime> 這個值以本地時間表示。"
  overload: System.IO.File.SetLastAccessTime*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>為零長度字串、 只包含空格，或包含一或多個無效字元所定義的<xref:System.IO.Path.InvalidPathChars>。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "指定的路徑、 檔案名稱，或兩者都超出系統定義的長度上限。 例如，windows 平台上，路徑必須少於 248 個字元，和檔案名稱必須少於 260 個字元。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "找不到指定的路徑。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "呼叫端沒有必要的權限。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>是無效的格式。"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>lastAccessTime</code>指定允許此作業的日期或時間範圍以外的值。"
  platform:
  - net462
- uid: System.IO.File.SetLastAccessTimeUtc(System.String,System.DateTime)
  id: SetLastAccessTimeUtc(System.String,System.DateTime)
  parent: System.IO.File
  langs:
  - csharp
  name: SetLastAccessTimeUtc(String,DateTime)
  nameWithType: File.SetLastAccessTimeUtc(String,DateTime)
  fullName: System.IO.File.SetLastAccessTimeUtc(String,DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "設定日期和時間，以國際標準時間 (UTC)，指定的檔案上次被存取。"
  remarks: "`path`參數可以指定相對或絕對路徑資訊。 相對路徑的資訊會解譯為與目前工作目錄。 若要取得目前工作目錄，請參閱<xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A>       如需的一般 I/O 工作清單，請參閱[一般 I/O 工作](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public static void SetLastAccessTimeUtc (string path, DateTime lastAccessTimeUtc);
    parameters:
    - id: path
      type: System.String
      description: "這是要設定其存取日期和時間資訊檔案。"
    - id: lastAccessTimeUtc
      type: System.DateTime
      description: "A<xref:System.DateTime>包含要設定上次存取日期和時間值`path`。</xref:System.DateTime> 這個值以 UTC 時間表示。"
  overload: System.IO.File.SetLastAccessTimeUtc*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>為零長度字串、 只包含空格，或包含一或多個無效字元所定義的<xref:System.IO.Path.InvalidPathChars>。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "指定的路徑、 檔案名稱，或兩者都超出系統定義的長度上限。 例如，windows 平台上，路徑必須少於 248 個字元，和檔案名稱必須少於 260 個字元。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "找不到指定的路徑。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "呼叫端沒有必要的權限。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>是無效的格式。"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>lastAccessTimeUtc</code>指定允許此作業的日期或時間範圍以外的值。"
  platform:
  - net462
- uid: System.IO.File.SetLastWriteTime(System.String,System.DateTime)
  id: SetLastWriteTime(System.String,System.DateTime)
  parent: System.IO.File
  langs:
  - csharp
  name: SetLastWriteTime(String,DateTime)
  nameWithType: File.SetLastWriteTime(String,DateTime)
  fullName: System.IO.File.SetLastWriteTime(String,DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "設定指定的檔案上次被寫入的時間與日期。"
  remarks: "`path`參數可以指定相對或絕對路徑資訊。 相對路徑的資訊會解譯為與目前工作目錄。 若要取得目前工作目錄，請參閱<xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A>       如需的一般 I/O 工作清單，請參閱[一般 I/O 工作](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following example checks the file system for the specified file, creating the file if necessary, and then sets and gets the last write time of the file.  \n  \n [!code-cs[file setlastwrite#1](~/add/codesnippet/csharp/m-system.io.file.setlast_1_1.cs)]\n [!code-vb[file setlastwrite#1](~/add/codesnippet/visualbasic/m-system.io.file.setlast_1_1.vb)]\n [!code-cpp[file setlastwrite#1](~/add/codesnippet/cpp/m-system.io.file.setlast_1_1.cpp)]"
  syntax:
    content: public static void SetLastWriteTime (string path, DateTime lastWriteTime);
    parameters:
    - id: path
      type: System.String
      description: "要設定其日期和時間資訊檔案。"
    - id: lastWriteTime
      type: System.DateTime
      description: "A<xref:System.DateTime>包含要設定的上次寫入日期和時間值`path`。</xref:System.DateTime> 這個值以本地時間表示。"
  overload: System.IO.File.SetLastWriteTime*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>為零長度字串、 只包含空格，或包含一或多個無效字元所定義的<xref:System.IO.Path.InvalidPathChars>。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "指定的路徑、 檔案名稱，或兩者都超出系統定義的長度上限。 例如，windows 平台上，路徑必須少於 248 個字元，和檔案名稱必須少於 260 個字元。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "找不到指定的路徑。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "呼叫端沒有必要的權限。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>是無效的格式。"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>lastWriteTime</code>指定允許此作業的日期或時間範圍以外的值。"
  platform:
  - net462
- uid: System.IO.File.SetLastWriteTimeUtc(System.String,System.DateTime)
  id: SetLastWriteTimeUtc(System.String,System.DateTime)
  parent: System.IO.File
  langs:
  - csharp
  name: SetLastWriteTimeUtc(String,DateTime)
  nameWithType: File.SetLastWriteTimeUtc(String,DateTime)
  fullName: System.IO.File.SetLastWriteTimeUtc(String,DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "設定日期和時間，以國際標準時間 (UTC) 的上次寫入指定的檔案。"
  remarks: "`path`參數可以指定相對或絕對路徑資訊。 相對路徑的資訊會解譯為與目前工作目錄。 若要取得目前工作目錄，請參閱<xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A>       如需的一般 I/O 工作清單，請參閱[一般 I/O 工作](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public static void SetLastWriteTimeUtc (string path, DateTime lastWriteTimeUtc);
    parameters:
    - id: path
      type: System.String
      description: "要設定其日期和時間資訊檔案。"
    - id: lastWriteTimeUtc
      type: System.DateTime
      description: "A<xref:System.DateTime>包含要設定的上次寫入日期和時間值`path`。</xref:System.DateTime> 這個值以 UTC 時間表示。"
  overload: System.IO.File.SetLastWriteTimeUtc*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>為零長度字串、 只包含空格，或包含一或多個無效字元所定義的<xref:System.IO.Path.InvalidPathChars>。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "指定的路徑、 檔案名稱，或兩者都超出系統定義的長度上限。 例如，windows 平台上，路徑必須少於 248 個字元，和檔案名稱必須少於 260 個字元。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "找不到指定的路徑。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "呼叫端沒有必要的權限。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>是無效的格式。"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>lastWriteTimeUtc</code>指定允許此作業的日期或時間範圍以外的值。"
  platform:
  - net462
- uid: System.IO.File.WriteAllBytes(System.String,System.Byte[])
  id: WriteAllBytes(System.String,System.Byte[])
  parent: System.IO.File
  langs:
  - csharp
  name: WriteAllBytes(String,Byte[])
  nameWithType: File.WriteAllBytes(String,Byte[])
  fullName: System.IO.File.WriteAllBytes(String,Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "建立新檔案，將指定的位元組陣列寫入檔案，，然後關閉檔案。 如果目標檔案已存在，則會覆寫。"
  remarks: "指定的位元組陣列和檔案路徑，這個方法開啟指定的檔案、 位元組陣列的內容寫入至檔案，，然後關閉檔案。"
  syntax:
    content: public static void WriteAllBytes (string path, byte[] bytes);
    parameters:
    - id: path
      type: System.String
      description: "要寫入的檔案。"
    - id: bytes
      type: System.Byte[]
      description: "要寫入檔案的位元組。"
  overload: System.IO.File.WriteAllBytes*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>為零長度字串、 只包含空格，或包含一或多個無效字元所定義的<xref:System.IO.Path.InvalidPathChars>。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>或位元組陣列是空的。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "指定的路徑、 檔案名稱，或兩者都超出系統定義的長度上限。 例如，windows 平台上，路徑必須少於 248 個字元，和檔案名稱必須少於 260 個字元。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "指定的路徑無效 （例如，它位於未對應的磁碟機上）。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "開啟檔案時發生 I/O 錯誤。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>指定為唯讀的檔案。       -或者-目前的平台不支援此作業。       -或-<code>path</code>指定了目錄。       -或者-呼叫端沒有必要的權限。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>是無效的格式。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "呼叫端沒有必要的權限。"
  platform:
  - net462
- uid: System.IO.File.WriteAllLines(System.String,System.Collections.Generic.IEnumerable{System.String})
  id: WriteAllLines(System.String,System.Collections.Generic.IEnumerable{System.String})
  parent: System.IO.File
  langs:
  - csharp
  name: WriteAllLines(String,IEnumerable<String>)
  nameWithType: File.WriteAllLines(String,IEnumerable<String>)
  fullName: System.IO.File.WriteAllLines(String,IEnumerable<String>)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "建立新檔案，將字串的集合寫入檔案，，然後關閉檔案。"
  remarks: "WriteAllLines 方法的預設行為是使用 utf-8 編碼的位元組順序標示 (BOM) 不會寫出資料。 如果需要包含 utf-8 識別碼，例如位元組順序標記，在檔案開頭使用<xref:System.IO.File.WriteAllLines%28System.String%2CSystem.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.Text.Encoding%29>方法多載<xref:System.Text.Encoding.UTF8%2A>編碼方式。</xref:System.Text.Encoding.UTF8%2A> </xref:System.IO.File.WriteAllLines%28System.String%2CSystem.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.Text.Encoding%29>       如果目標檔案已存在，則會覆寫。       您可以使用這個方法建立的內容的集合類別接受<xref:System.Collections.Generic.IEnumerable%601>在其建構函式，例如<xref:System.Collections.Generic.List%601.%23ctor%2A>， <xref:System.Collections.Generic.HashSet%601.%23ctor%2A>，或<xref:System.Collections.Generic.SortedSet%601.%23ctor%2A>類別</xref:System.Collections.Generic.SortedSet%601.%23ctor%2A></xref:System.Collections.Generic.HashSet%601.%23ctor%2A></xref:System.Collections.Generic.List%601.%23ctor%2A></xref:System.Collections.Generic.IEnumerable%601>"
  example:
  - "The following example writes selected lines from a sample data file to a file.  \n  \n [!code-cs[System.IO.File.WriteAllAppendAll#1](~/add/codesnippet/csharp/f09e9593-445c-47ad-bb1b-_1.cs)]\n [!code-vb[System.IO.File.WriteAllAppendAll#1](~/add/codesnippet/visualbasic/f09e9593-445c-47ad-bb1b-_1.vb)]"
  syntax:
    content: public static void WriteAllLines (string path, System.Collections.Generic.IEnumerable<string> contents);
    parameters:
    - id: path
      type: System.String
      description: "要寫入的檔案。"
    - id: contents
      type: System.Collections.Generic.IEnumerable{System.String}
      description: "要寫入檔案的行。"
  overload: System.IO.File.WriteAllLines*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>為零長度字串、 只包含空格，或包含所定義的一個或多個無效的字元<xref:System.IO.Path.GetInvalidPathChars*>方法。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Either<code> path </code>or <code>contents</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "<code>path</code>無效 （例如，它位於未對應的磁碟機上）。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "開啟檔案時發生 I/O 錯誤。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "<code>path</code>超過系統定義的長度上限。 例如，在 Windows 架構的平台，路徑必須少於 248 個字元，檔案名稱必須少於 260 個字元。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>是無效的格式。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "呼叫端沒有必要的權限。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>指定了唯讀的檔案。       -或者-目前的平台不支援此作業。       -或-<code>path</code>是目錄。       -或者-呼叫端沒有必要的權限。"
  platform:
  - net462
- uid: System.IO.File.WriteAllLines(System.String,System.String[])
  id: WriteAllLines(System.String,System.String[])
  parent: System.IO.File
  langs:
  - csharp
  name: WriteAllLines(String,String[])
  nameWithType: File.WriteAllLines(String,String[])
  fullName: System.IO.File.WriteAllLines(String,String[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "建立新檔案，指定的字串陣列寫入檔案，然後關閉檔案。"
  remarks: "If the target file already exists, it is overwritten.  \n  \n The default behavior of the WriteAllLines method is to write out data using UTF-8 encoding without a byte order mark (BOM). If it is necessary to include a UTF-8 identifier, such as a byte order mark, at the beginning of a file, use the [WriteAllLines(String, String\\[\\], Encoding)](assetId:///M:System.IO.File.WriteAllLines(System.String,System.String[],System.Text.Encoding)?qualifyHint=False&autoUpgrade=False) method overload with <xref:System.Text.Encoding.UTF8%2A> encoding.  \n  \n Given a string array and a file path, this method opens the specified file, writes the string array to the file, and then closes the file."
  example:
  - "The following code example demonstrates the use of the WriteAllLines method to write text to a file. In this example a file is created, if it doesn't already exist, and text is added to it.  \n  \n [!code-vb[System.IO.File.AllLines#00](~/add/codesnippet/visualbasic/m-system.io.file.writeal_1_1.vb)]\n [!code-cs[System.IO.File.AllLines#00](~/add/codesnippet/csharp/m-system.io.file.writeal_1_1.cs)]"
  syntax:
    content: public static void WriteAllLines (string path, string[] contents);
    parameters:
    - id: path
      type: System.String
      description: "要寫入的檔案。"
    - id: contents
      type: System.String[]
      description: "要寫入檔案的字串陣列。"
  overload: System.IO.File.WriteAllLines*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>為零長度字串、 只包含空格，或包含一或多個無效字元所定義的<xref:System.IO.Path.InvalidPathChars>。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Either <code>path</code> or <code>contents</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "指定的路徑、 檔案名稱，或兩者都超出系統定義的長度上限。 例如，windows 平台上，路徑必須少於 248 個字元，和檔案名稱必須少於 260 個字元。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "指定的路徑無效 （例如，它位於未對應的磁碟機上）。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "開啟檔案時發生 I/O 錯誤。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>指定為唯讀的檔案。       -或者-目前的平台不支援此作業。       -或-<code>path</code>指定了目錄。       -或者-呼叫端沒有必要的權限。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>是無效的格式。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "呼叫端沒有必要的權限。"
  platform:
  - net462
- uid: System.IO.File.WriteAllLines(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding)
  id: WriteAllLines(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding)
  parent: System.IO.File
  langs:
  - csharp
  name: WriteAllLines(String,IEnumerable<String>,Encoding)
  nameWithType: File.WriteAllLines(String,IEnumerable<String>,Encoding)
  fullName: System.IO.File.WriteAllLines(String,IEnumerable<String>,Encoding)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "使用指定的編碼方式建立新的檔案、 字串的集合寫入檔案，然後關閉檔案。"
  remarks: "如果目標檔案已存在，則會覆寫。       您可以使用這個方法來建立包含下列檔案:-結果[LINQ to Objects](~/add/includes/ajax-current-ext-md.md)取得使用的查詢上的檔案、 行<xref:System.IO.File.ReadLines%2A>方法。</xref:System.IO.File.ReadLines%2A>      -集合中實作的內容<xref:System.Collections.Generic.IEnumerable%601>的字串。</xref:System.Collections.Generic.IEnumerable%601>"
  syntax:
    content: public static void WriteAllLines (string path, System.Collections.Generic.IEnumerable<string> contents, System.Text.Encoding encoding);
    parameters:
    - id: path
      type: System.String
      description: "要寫入的檔案。"
    - id: contents
      type: System.Collections.Generic.IEnumerable{System.String}
      description: "要寫入檔案的行。"
    - id: encoding
      type: System.Text.Encoding
      description: "要使用字元編碼。"
  overload: System.IO.File.WriteAllLines*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>為零長度字串、 只包含空格，或包含所定義的一個或多個無效的字元<xref:System.IO.Path.GetInvalidPathChars*>方法。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Either<code> path</code>,<code> contents</code>, or <code>encoding</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "<code>path</code>無效 （例如，它位於未對應的磁碟機上）。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "開啟檔案時發生 I/O 錯誤。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "<code>path</code>超過系統定義的長度上限。 例如，在 Windows 架構的平台，路徑必須少於 248 個字元，檔案名稱必須少於 260 個字元。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>是無效的格式。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "呼叫端沒有必要的權限。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>指定了唯讀的檔案。       -或者-目前的平台不支援此作業。       -或-<code>path</code>是目錄。       -或者-呼叫端沒有必要的權限。"
  platform:
  - net462
- uid: System.IO.File.WriteAllLines(System.String,System.String[],System.Text.Encoding)
  id: WriteAllLines(System.String,System.String[],System.Text.Encoding)
  parent: System.IO.File
  langs:
  - csharp
  name: WriteAllLines(String,String[],Encoding)
  nameWithType: File.WriteAllLines(String,String[],Encoding)
  fullName: System.IO.File.WriteAllLines(String,String[],Encoding)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "建立新檔案，使用指定的編碼方式，將指定的字串陣列寫入檔案，然後關閉檔案。"
  remarks: "如果目標檔案已存在，則會覆寫。       指定的字串陣列和檔案路徑，這個方法開啟指定的檔案、 字串陣列寫入使用指定的編碼，檔案，然後關閉檔案。"
  example:
  - "The following code example demonstrates the use of the WriteAllLines method to write text to a file. In this example a file is created, if it doesn't already exist, and text is added to it.  \n  \n [!code-vb[System.IO.File.AllLines_Encoding#00](~/add/codesnippet/visualbasic/3d8070ff-3246-4c2d-a728-_1.vb)]\n [!code-cs[System.IO.File.AllLines_Encoding#00](~/add/codesnippet/csharp/3d8070ff-3246-4c2d-a728-_1.cs)]"
  syntax:
    content: public static void WriteAllLines (string path, string[] contents, System.Text.Encoding encoding);
    parameters:
    - id: path
      type: System.String
      description: "要寫入的檔案。"
    - id: contents
      type: System.String[]
      description: "要寫入檔案的字串陣列。"
    - id: encoding
      type: System.Text.Encoding
      description: "<xref:System.Text.Encoding>物件，代表字元編碼套用至字串陣列。</xref:System.Text.Encoding>"
  overload: System.IO.File.WriteAllLines*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>為零長度字串、 只包含空格，或包含一或多個無效字元所定義的<xref:System.IO.Path.InvalidPathChars>。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Either <code>path</code> or <code>contents</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "指定的路徑、 檔案名稱，或兩者都超出系統定義的長度上限。 例如，windows 平台上，路徑必須少於 248 個字元，和檔案名稱必須少於 260 個字元。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "指定的路徑無效 （例如，它位於未對應的磁碟機上）。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "開啟檔案時發生 I/O 錯誤。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>指定為唯讀的檔案。       -或者-目前的平台不支援此作業。       -或-<code>path</code>指定了目錄。       -或者-呼叫端沒有必要的權限。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>是無效的格式。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "呼叫端沒有必要的權限。"
  platform:
  - net462
- uid: System.IO.File.WriteAllText(System.String,System.String)
  id: WriteAllText(System.String,System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: WriteAllText(String,String)
  nameWithType: File.WriteAllText(String,String)
  fullName: System.IO.File.WriteAllText(String,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "建立新檔案至檔案，將指定的字串，然後關閉檔案。 如果目標檔案已存在，則會覆寫。"
  remarks: "這個方法會使用 utf-8 編碼方式沒有位元組順序標記 (BOM)，因此使用<xref:System.Text.Encoding.GetPreamble%2A>方法會傳回空的位元組陣列。</xref:System.Text.Encoding.GetPreamble%2A> 如果需要包含 utf-8 識別碼，例如位元組順序標記，在檔案開頭使用<xref:System.IO.File.WriteAllText%28System.String%2CSystem.String%2CSystem.Text.Encoding%29>方法多載<xref:System.Text.Encoding.UTF8%2A>編碼方式。</xref:System.Text.Encoding.UTF8%2A> </xref:System.IO.File.WriteAllText%28System.String%2CSystem.String%2CSystem.Text.Encoding%29>       指定字串和檔案路徑，這個方法開啟指定的檔案、 將字串寫入檔案，然後關閉檔案。"
  example:
  - "The following code example demonstrates the use of the WriteAllText method to write text to a file. In this example a file is created, if it doesn't already exist, and text is added to it.  \n  \n [!code-vb[System.IO.File.AllText#00](~/add/codesnippet/visualbasic/m-system.io.file.writeal_0_1.vb)]\n [!code-cs[System.IO.File.AllText#00](~/add/codesnippet/csharp/m-system.io.file.writeal_0_1.cs)]"
  syntax:
    content: public static void WriteAllText (string path, string contents);
    parameters:
    - id: path
      type: System.String
      description: "要寫入的檔案。"
    - id: contents
      type: System.String
      description: "要寫入檔案的字串。"
  overload: System.IO.File.WriteAllText*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>為零長度字串、 只包含空格，或包含一或多個無效字元所定義的<xref:System.IO.Path.InvalidPathChars>。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> or <code>contents</code> is empty."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "指定的路徑、 檔案名稱，或兩者都超出系統定義的長度上限。 例如，windows 平台上，路徑必須少於 248 個字元，和檔案名稱必須少於 260 個字元。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "指定的路徑無效 （例如，它位於未對應的磁碟機上）。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "開啟檔案時發生 I/O 錯誤。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>指定為唯讀的檔案。       -或者-目前的平台不支援此作業。       -或-<code>path</code>指定了目錄。       -或者-呼叫端沒有必要的權限。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>是無效的格式。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "呼叫端沒有必要的權限。"
  platform:
  - net462
- uid: System.IO.File.WriteAllText(System.String,System.String,System.Text.Encoding)
  id: WriteAllText(System.String,System.String,System.Text.Encoding)
  parent: System.IO.File
  langs:
  - csharp
  name: WriteAllText(String,String,Encoding)
  nameWithType: File.WriteAllText(String,String,Encoding)
  fullName: System.IO.File.WriteAllText(String,String,Encoding)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "建立新檔案，檔案使用指定的編碼方式，將指定的字串，然後關閉檔案。 如果目標檔案已存在，則會覆寫。"
  remarks: "指定字串和檔案路徑，這個方法開啟指定的檔案，將字串寫入檔案，使用指定的編碼，，然後關閉檔案。 即使引發例外狀況時要使用這個方法，關閉保證的檔案控制代碼。"
  example:
  - "The following code example demonstrates the use of the WriteAllText method to write text to a file. In this example a file is created, if it doesn't already exist, and text is added to it.  \n  \n [!code-cs[System.IO.File.AllText_Encoding#00](~/add/codesnippet/csharp/m-system.io.file.writeal_2_1.cs)]\n [!code-vb[System.IO.File.AllText_Encoding#00](~/add/codesnippet/visualbasic/m-system.io.file.writeal_2_1.vb)]"
  syntax:
    content: public static void WriteAllText (string path, string contents, System.Text.Encoding encoding);
    parameters:
    - id: path
      type: System.String
      description: "要寫入的檔案。"
    - id: contents
      type: System.String
      description: "要寫入檔案的字串。"
    - id: encoding
      type: System.Text.Encoding
      description: "要套用至字串的編碼方式。"
  overload: System.IO.File.WriteAllText*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>為零長度字串、 只包含空格，或包含一或多個無效字元所定義的<xref:System.IO.Path.InvalidPathChars>。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> or <code>contents</code> is empty."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "指定的路徑、 檔案名稱，或兩者都超出系統定義的長度上限。 例如，windows 平台上，路徑必須少於 248 個字元，和檔案名稱必須少於 260 個字元。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "指定的路徑無效 （例如，它位於未對應的磁碟機上）。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "開啟檔案時發生 I/O 錯誤。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>指定為唯讀的檔案。       -或者-目前的平台不支援此作業。       -或-<code>path</code>指定了目錄。       -或者-呼叫端沒有必要的權限。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>是無效的格式。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "呼叫端沒有必要的權限。"
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.IO.DirectoryNotFoundException
  isExternal: true
  name: System.IO.DirectoryNotFoundException
- uid: System.IO.FileNotFoundException
  isExternal: true
  name: System.IO.FileNotFoundException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.IO.PathTooLongException
  isExternal: true
  name: System.IO.PathTooLongException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.UnauthorizedAccessException
  isExternal: true
  name: System.UnauthorizedAccessException
- uid: System.IO.DriveNotFoundException
  parent: System.IO
  isExternal: false
  name: DriveNotFoundException
  nameWithType: DriveNotFoundException
  fullName: System.IO.DriveNotFoundException
- uid: System.PlatformNotSupportedException
  isExternal: true
  name: System.PlatformNotSupportedException
- uid: System.Runtime.InteropServices.SEHException
  isExternal: true
  name: System.Runtime.InteropServices.SEHException
- uid: System.SystemException
  parent: System
  isExternal: false
  name: SystemException
  nameWithType: SystemException
  fullName: System.SystemException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.IO.File.AppendAllLines(System.String,System.Collections.Generic.IEnumerable{System.String})
  parent: System.IO.File
  isExternal: false
  name: AppendAllLines(String,IEnumerable<String>)
  nameWithType: File.AppendAllLines(String,IEnumerable<String>)
  fullName: System.IO.File.AppendAllLines(String,IEnumerable<String>)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IO.File.AppendAllLines(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding)
  parent: System.IO.File
  isExternal: false
  name: AppendAllLines(String,IEnumerable<String>,Encoding)
  nameWithType: File.AppendAllLines(String,IEnumerable<String>,Encoding)
  fullName: System.IO.File.AppendAllLines(String,IEnumerable<String>,Encoding)
- uid: System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: System.IO.File.AppendAllText(System.String,System.String)
  parent: System.IO.File
  isExternal: false
  name: AppendAllText(String,String)
  nameWithType: File.AppendAllText(String,String)
  fullName: System.IO.File.AppendAllText(String,String)
- uid: System.IO.File.AppendAllText(System.String,System.String,System.Text.Encoding)
  parent: System.IO.File
  isExternal: false
  name: AppendAllText(String,String,Encoding)
  nameWithType: File.AppendAllText(String,String,Encoding)
  fullName: System.IO.File.AppendAllText(String,String,Encoding)
- uid: System.IO.File.AppendText(System.String)
  parent: System.IO.File
  isExternal: false
  name: AppendText(String)
  nameWithType: File.AppendText(String)
  fullName: System.IO.File.AppendText(String)
- uid: System.IO.StreamWriter
  parent: System.IO
  isExternal: true
  name: StreamWriter
  nameWithType: StreamWriter
  fullName: System.IO.StreamWriter
- uid: System.IO.File.Copy(System.String,System.String)
  parent: System.IO.File
  isExternal: false
  name: Copy(String,String)
  nameWithType: File.Copy(String,String)
  fullName: System.IO.File.Copy(String,String)
- uid: System.IO.File.Copy(System.String,System.String,System.Boolean)
  parent: System.IO.File
  isExternal: false
  name: Copy(String,String,Boolean)
  nameWithType: File.Copy(String,String,Boolean)
  fullName: System.IO.File.Copy(String,String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IO.File.Create(System.String)
  parent: System.IO.File
  isExternal: false
  name: Create(String)
  nameWithType: File.Create(String)
  fullName: System.IO.File.Create(String)
- uid: System.IO.FileStream
  parent: System.IO
  isExternal: false
  name: FileStream
  nameWithType: FileStream
  fullName: System.IO.FileStream
- uid: System.IO.File.Create(System.String,System.Int32)
  parent: System.IO.File
  isExternal: false
  name: Create(String,Int32)
  nameWithType: File.Create(String,Int32)
  fullName: System.IO.File.Create(String,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IO.File.Create(System.String,System.Int32,System.IO.FileOptions)
  parent: System.IO.File
  isExternal: false
  name: Create(String,Int32,FileOptions)
  nameWithType: File.Create(String,Int32,FileOptions)
  fullName: System.IO.File.Create(String,Int32,FileOptions)
- uid: System.IO.FileOptions
  parent: System.IO
  isExternal: false
  name: FileOptions
  nameWithType: FileOptions
  fullName: System.IO.FileOptions
- uid: System.IO.File.Create(System.String,System.Int32,System.IO.FileOptions,System.Security.AccessControl.FileSecurity)
  parent: System.IO.File
  isExternal: false
  name: Create(String,Int32,FileOptions,FileSecurity)
  nameWithType: File.Create(String,Int32,FileOptions,FileSecurity)
  fullName: System.IO.File.Create(String,Int32,FileOptions,FileSecurity)
- uid: System.Security.AccessControl.FileSecurity
  parent: System.Security.AccessControl
  isExternal: false
  name: FileSecurity
  nameWithType: FileSecurity
  fullName: System.Security.AccessControl.FileSecurity
- uid: System.IO.File.CreateText(System.String)
  parent: System.IO.File
  isExternal: false
  name: CreateText(String)
  nameWithType: File.CreateText(String)
  fullName: System.IO.File.CreateText(String)
- uid: System.IO.File.Decrypt(System.String)
  parent: System.IO.File
  isExternal: false
  name: Decrypt(String)
  nameWithType: File.Decrypt(String)
  fullName: System.IO.File.Decrypt(String)
- uid: System.IO.File.Delete(System.String)
  parent: System.IO.File
  isExternal: false
  name: Delete(String)
  nameWithType: File.Delete(String)
  fullName: System.IO.File.Delete(String)
- uid: System.IO.File.Encrypt(System.String)
  parent: System.IO.File
  isExternal: false
  name: Encrypt(String)
  nameWithType: File.Encrypt(String)
  fullName: System.IO.File.Encrypt(String)
- uid: System.IO.File.Exists(System.String)
  parent: System.IO.File
  isExternal: false
  name: Exists(String)
  nameWithType: File.Exists(String)
  fullName: System.IO.File.Exists(String)
- uid: System.IO.File.GetAccessControl(System.String)
  parent: System.IO.File
  isExternal: false
  name: GetAccessControl(String)
  nameWithType: File.GetAccessControl(String)
  fullName: System.IO.File.GetAccessControl(String)
- uid: System.IO.File.GetAccessControl(System.String,System.Security.AccessControl.AccessControlSections)
  parent: System.IO.File
  isExternal: false
  name: GetAccessControl(String,AccessControlSections)
  nameWithType: File.GetAccessControl(String,AccessControlSections)
  fullName: System.IO.File.GetAccessControl(String,AccessControlSections)
- uid: System.Security.AccessControl.AccessControlSections
  parent: System.Security.AccessControl
  isExternal: false
  name: AccessControlSections
  nameWithType: AccessControlSections
  fullName: System.Security.AccessControl.AccessControlSections
- uid: System.IO.File.GetAttributes(System.String)
  parent: System.IO.File
  isExternal: false
  name: GetAttributes(String)
  nameWithType: File.GetAttributes(String)
  fullName: System.IO.File.GetAttributes(String)
- uid: System.IO.FileAttributes
  parent: System.IO
  isExternal: false
  name: FileAttributes
  nameWithType: FileAttributes
  fullName: System.IO.FileAttributes
- uid: System.IO.File.GetCreationTime(System.String)
  parent: System.IO.File
  isExternal: false
  name: GetCreationTime(String)
  nameWithType: File.GetCreationTime(String)
  fullName: System.IO.File.GetCreationTime(String)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.IO.File.GetCreationTimeUtc(System.String)
  parent: System.IO.File
  isExternal: false
  name: GetCreationTimeUtc(String)
  nameWithType: File.GetCreationTimeUtc(String)
  fullName: System.IO.File.GetCreationTimeUtc(String)
- uid: System.IO.File.GetLastAccessTime(System.String)
  parent: System.IO.File
  isExternal: false
  name: GetLastAccessTime(String)
  nameWithType: File.GetLastAccessTime(String)
  fullName: System.IO.File.GetLastAccessTime(String)
- uid: System.IO.File.GetLastAccessTimeUtc(System.String)
  parent: System.IO.File
  isExternal: false
  name: GetLastAccessTimeUtc(String)
  nameWithType: File.GetLastAccessTimeUtc(String)
  fullName: System.IO.File.GetLastAccessTimeUtc(String)
- uid: System.IO.File.GetLastWriteTime(System.String)
  parent: System.IO.File
  isExternal: false
  name: GetLastWriteTime(String)
  nameWithType: File.GetLastWriteTime(String)
  fullName: System.IO.File.GetLastWriteTime(String)
- uid: System.IO.File.GetLastWriteTimeUtc(System.String)
  parent: System.IO.File
  isExternal: false
  name: GetLastWriteTimeUtc(String)
  nameWithType: File.GetLastWriteTimeUtc(String)
  fullName: System.IO.File.GetLastWriteTimeUtc(String)
- uid: System.IO.File.Move(System.String,System.String)
  parent: System.IO.File
  isExternal: false
  name: Move(String,String)
  nameWithType: File.Move(String,String)
  fullName: System.IO.File.Move(String,String)
- uid: System.IO.File.Open(System.String,System.IO.FileMode)
  parent: System.IO.File
  isExternal: false
  name: Open(String,FileMode)
  nameWithType: File.Open(String,FileMode)
  fullName: System.IO.File.Open(String,FileMode)
- uid: System.IO.FileMode
  parent: System.IO
  isExternal: false
  name: FileMode
  nameWithType: FileMode
  fullName: System.IO.FileMode
- uid: System.IO.File.Open(System.String,System.IO.FileMode,System.IO.FileAccess)
  parent: System.IO.File
  isExternal: false
  name: Open(String,FileMode,FileAccess)
  nameWithType: File.Open(String,FileMode,FileAccess)
  fullName: System.IO.File.Open(String,FileMode,FileAccess)
- uid: System.IO.FileAccess
  parent: System.IO
  isExternal: false
  name: FileAccess
  nameWithType: FileAccess
  fullName: System.IO.FileAccess
- uid: System.IO.File.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)
  parent: System.IO.File
  isExternal: false
  name: Open(String,FileMode,FileAccess,FileShare)
  nameWithType: File.Open(String,FileMode,FileAccess,FileShare)
  fullName: System.IO.File.Open(String,FileMode,FileAccess,FileShare)
- uid: System.IO.FileShare
  parent: System.IO
  isExternal: false
  name: FileShare
  nameWithType: FileShare
  fullName: System.IO.FileShare
- uid: System.IO.File.OpenRead(System.String)
  parent: System.IO.File
  isExternal: false
  name: OpenRead(String)
  nameWithType: File.OpenRead(String)
  fullName: System.IO.File.OpenRead(String)
- uid: System.IO.File.OpenText(System.String)
  parent: System.IO.File
  isExternal: false
  name: OpenText(String)
  nameWithType: File.OpenText(String)
  fullName: System.IO.File.OpenText(String)
- uid: System.IO.StreamReader
  parent: System.IO
  isExternal: true
  name: StreamReader
  nameWithType: StreamReader
  fullName: System.IO.StreamReader
- uid: System.IO.File.OpenWrite(System.String)
  parent: System.IO.File
  isExternal: false
  name: OpenWrite(String)
  nameWithType: File.OpenWrite(String)
  fullName: System.IO.File.OpenWrite(String)
- uid: System.IO.File.ReadAllBytes(System.String)
  parent: System.IO.File
  isExternal: false
  name: ReadAllBytes(String)
  nameWithType: File.ReadAllBytes(String)
  fullName: System.IO.File.ReadAllBytes(String)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.IO.File.ReadAllLines(System.String)
  parent: System.IO.File
  isExternal: false
  name: ReadAllLines(String)
  nameWithType: File.ReadAllLines(String)
  fullName: System.IO.File.ReadAllLines(String)
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.IO.File.ReadAllLines(System.String,System.Text.Encoding)
  parent: System.IO.File
  isExternal: false
  name: ReadAllLines(String,Encoding)
  nameWithType: File.ReadAllLines(String,Encoding)
  fullName: System.IO.File.ReadAllLines(String,Encoding)
- uid: System.IO.File.ReadAllText(System.String)
  parent: System.IO.File
  isExternal: false
  name: ReadAllText(String)
  nameWithType: File.ReadAllText(String)
  fullName: System.IO.File.ReadAllText(String)
- uid: System.IO.File.ReadAllText(System.String,System.Text.Encoding)
  parent: System.IO.File
  isExternal: false
  name: ReadAllText(String,Encoding)
  nameWithType: File.ReadAllText(String,Encoding)
  fullName: System.IO.File.ReadAllText(String,Encoding)
- uid: System.IO.File.ReadLines(System.String)
  parent: System.IO.File
  isExternal: false
  name: ReadLines(String)
  nameWithType: File.ReadLines(String)
  fullName: System.IO.File.ReadLines(String)
- uid: System.IO.File.ReadLines(System.String,System.Text.Encoding)
  parent: System.IO.File
  isExternal: false
  name: ReadLines(String,Encoding)
  nameWithType: File.ReadLines(String,Encoding)
  fullName: System.IO.File.ReadLines(String,Encoding)
- uid: System.IO.File.Replace(System.String,System.String,System.String)
  parent: System.IO.File
  isExternal: false
  name: Replace(String,String,String)
  nameWithType: File.Replace(String,String,String)
  fullName: System.IO.File.Replace(String,String,String)
- uid: System.IO.File.Replace(System.String,System.String,System.String,System.Boolean)
  parent: System.IO.File
  isExternal: false
  name: Replace(String,String,String,Boolean)
  nameWithType: File.Replace(String,String,String,Boolean)
  fullName: System.IO.File.Replace(String,String,String,Boolean)
- uid: System.IO.File.SetAccessControl(System.String,System.Security.AccessControl.FileSecurity)
  parent: System.IO.File
  isExternal: false
  name: SetAccessControl(String,FileSecurity)
  nameWithType: File.SetAccessControl(String,FileSecurity)
  fullName: System.IO.File.SetAccessControl(String,FileSecurity)
- uid: System.IO.File.SetAttributes(System.String,System.IO.FileAttributes)
  parent: System.IO.File
  isExternal: false
  name: SetAttributes(String,FileAttributes)
  nameWithType: File.SetAttributes(String,FileAttributes)
  fullName: System.IO.File.SetAttributes(String,FileAttributes)
- uid: System.IO.File.SetCreationTime(System.String,System.DateTime)
  parent: System.IO.File
  isExternal: false
  name: SetCreationTime(String,DateTime)
  nameWithType: File.SetCreationTime(String,DateTime)
  fullName: System.IO.File.SetCreationTime(String,DateTime)
- uid: System.IO.File.SetCreationTimeUtc(System.String,System.DateTime)
  parent: System.IO.File
  isExternal: false
  name: SetCreationTimeUtc(String,DateTime)
  nameWithType: File.SetCreationTimeUtc(String,DateTime)
  fullName: System.IO.File.SetCreationTimeUtc(String,DateTime)
- uid: System.IO.File.SetLastAccessTime(System.String,System.DateTime)
  parent: System.IO.File
  isExternal: false
  name: SetLastAccessTime(String,DateTime)
  nameWithType: File.SetLastAccessTime(String,DateTime)
  fullName: System.IO.File.SetLastAccessTime(String,DateTime)
- uid: System.IO.File.SetLastAccessTimeUtc(System.String,System.DateTime)
  parent: System.IO.File
  isExternal: false
  name: SetLastAccessTimeUtc(String,DateTime)
  nameWithType: File.SetLastAccessTimeUtc(String,DateTime)
  fullName: System.IO.File.SetLastAccessTimeUtc(String,DateTime)
- uid: System.IO.File.SetLastWriteTime(System.String,System.DateTime)
  parent: System.IO.File
  isExternal: false
  name: SetLastWriteTime(String,DateTime)
  nameWithType: File.SetLastWriteTime(String,DateTime)
  fullName: System.IO.File.SetLastWriteTime(String,DateTime)
- uid: System.IO.File.SetLastWriteTimeUtc(System.String,System.DateTime)
  parent: System.IO.File
  isExternal: false
  name: SetLastWriteTimeUtc(String,DateTime)
  nameWithType: File.SetLastWriteTimeUtc(String,DateTime)
  fullName: System.IO.File.SetLastWriteTimeUtc(String,DateTime)
- uid: System.IO.File.WriteAllBytes(System.String,System.Byte[])
  parent: System.IO.File
  isExternal: false
  name: WriteAllBytes(String,Byte[])
  nameWithType: File.WriteAllBytes(String,Byte[])
  fullName: System.IO.File.WriteAllBytes(String,Byte[])
- uid: System.IO.File.WriteAllLines(System.String,System.Collections.Generic.IEnumerable{System.String})
  parent: System.IO.File
  isExternal: false
  name: WriteAllLines(String,IEnumerable<String>)
  nameWithType: File.WriteAllLines(String,IEnumerable<String>)
  fullName: System.IO.File.WriteAllLines(String,IEnumerable<String>)
- uid: System.IO.File.WriteAllLines(System.String,System.String[])
  parent: System.IO.File
  isExternal: false
  name: WriteAllLines(String,String[])
  nameWithType: File.WriteAllLines(String,String[])
  fullName: System.IO.File.WriteAllLines(String,String[])
- uid: System.IO.File.WriteAllLines(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding)
  parent: System.IO.File
  isExternal: false
  name: WriteAllLines(String,IEnumerable<String>,Encoding)
  nameWithType: File.WriteAllLines(String,IEnumerable<String>,Encoding)
  fullName: System.IO.File.WriteAllLines(String,IEnumerable<String>,Encoding)
- uid: System.IO.File.WriteAllLines(System.String,System.String[],System.Text.Encoding)
  parent: System.IO.File
  isExternal: false
  name: WriteAllLines(String,String[],Encoding)
  nameWithType: File.WriteAllLines(String,String[],Encoding)
  fullName: System.IO.File.WriteAllLines(String,String[],Encoding)
- uid: System.IO.File.WriteAllText(System.String,System.String)
  parent: System.IO.File
  isExternal: false
  name: WriteAllText(String,String)
  nameWithType: File.WriteAllText(String,String)
  fullName: System.IO.File.WriteAllText(String,String)
- uid: System.IO.File.WriteAllText(System.String,System.String,System.Text.Encoding)
  parent: System.IO.File
  isExternal: false
  name: WriteAllText(String,String,Encoding)
  nameWithType: File.WriteAllText(String,String,Encoding)
  fullName: System.IO.File.WriteAllText(String,String,Encoding)
- uid: System.IO.File.AppendAllLines*
  parent: System.IO.File
  isExternal: false
  name: AppendAllLines
  nameWithType: File.AppendAllLines
- uid: System.IO.File.AppendAllText*
  parent: System.IO.File
  isExternal: false
  name: AppendAllText
  nameWithType: File.AppendAllText
- uid: System.IO.File.AppendText*
  parent: System.IO.File
  isExternal: false
  name: AppendText
  nameWithType: File.AppendText
- uid: System.IO.File.Copy*
  parent: System.IO.File
  isExternal: false
  name: Copy
  nameWithType: File.Copy
- uid: System.IO.File.Create*
  parent: System.IO.File
  isExternal: false
  name: Create
  nameWithType: File.Create
- uid: System.IO.File.CreateText*
  parent: System.IO.File
  isExternal: false
  name: CreateText
  nameWithType: File.CreateText
- uid: System.IO.File.Decrypt*
  parent: System.IO.File
  isExternal: false
  name: Decrypt
  nameWithType: File.Decrypt
- uid: System.IO.File.Delete*
  parent: System.IO.File
  isExternal: false
  name: Delete
  nameWithType: File.Delete
- uid: System.IO.File.Encrypt*
  parent: System.IO.File
  isExternal: false
  name: Encrypt
  nameWithType: File.Encrypt
- uid: System.IO.File.Exists*
  parent: System.IO.File
  isExternal: false
  name: Exists
  nameWithType: File.Exists
- uid: System.IO.File.GetAccessControl*
  parent: System.IO.File
  isExternal: false
  name: GetAccessControl
  nameWithType: File.GetAccessControl
- uid: System.IO.File.GetAttributes*
  parent: System.IO.File
  isExternal: false
  name: GetAttributes
  nameWithType: File.GetAttributes
- uid: System.IO.File.GetCreationTime*
  parent: System.IO.File
  isExternal: false
  name: GetCreationTime
  nameWithType: File.GetCreationTime
- uid: System.IO.File.GetCreationTimeUtc*
  parent: System.IO.File
  isExternal: false
  name: GetCreationTimeUtc
  nameWithType: File.GetCreationTimeUtc
- uid: System.IO.File.GetLastAccessTime*
  parent: System.IO.File
  isExternal: false
  name: GetLastAccessTime
  nameWithType: File.GetLastAccessTime
- uid: System.IO.File.GetLastAccessTimeUtc*
  parent: System.IO.File
  isExternal: false
  name: GetLastAccessTimeUtc
  nameWithType: File.GetLastAccessTimeUtc
- uid: System.IO.File.GetLastWriteTime*
  parent: System.IO.File
  isExternal: false
  name: GetLastWriteTime
  nameWithType: File.GetLastWriteTime
- uid: System.IO.File.GetLastWriteTimeUtc*
  parent: System.IO.File
  isExternal: false
  name: GetLastWriteTimeUtc
  nameWithType: File.GetLastWriteTimeUtc
- uid: System.IO.File.Move*
  parent: System.IO.File
  isExternal: false
  name: Move
  nameWithType: File.Move
- uid: System.IO.File.Open*
  parent: System.IO.File
  isExternal: false
  name: Open
  nameWithType: File.Open
- uid: System.IO.File.OpenRead*
  parent: System.IO.File
  isExternal: false
  name: OpenRead
  nameWithType: File.OpenRead
- uid: System.IO.File.OpenText*
  parent: System.IO.File
  isExternal: false
  name: OpenText
  nameWithType: File.OpenText
- uid: System.IO.File.OpenWrite*
  parent: System.IO.File
  isExternal: false
  name: OpenWrite
  nameWithType: File.OpenWrite
- uid: System.IO.File.ReadAllBytes*
  parent: System.IO.File
  isExternal: false
  name: ReadAllBytes
  nameWithType: File.ReadAllBytes
- uid: System.IO.File.ReadAllLines*
  parent: System.IO.File
  isExternal: false
  name: ReadAllLines
  nameWithType: File.ReadAllLines
- uid: System.IO.File.ReadAllText*
  parent: System.IO.File
  isExternal: false
  name: ReadAllText
  nameWithType: File.ReadAllText
- uid: System.IO.File.ReadLines*
  parent: System.IO.File
  isExternal: false
  name: ReadLines
  nameWithType: File.ReadLines
- uid: System.IO.File.Replace*
  parent: System.IO.File
  isExternal: false
  name: Replace
  nameWithType: File.Replace
- uid: System.IO.File.SetAccessControl*
  parent: System.IO.File
  isExternal: false
  name: SetAccessControl
  nameWithType: File.SetAccessControl
- uid: System.IO.File.SetAttributes*
  parent: System.IO.File
  isExternal: false
  name: SetAttributes
  nameWithType: File.SetAttributes
- uid: System.IO.File.SetCreationTime*
  parent: System.IO.File
  isExternal: false
  name: SetCreationTime
  nameWithType: File.SetCreationTime
- uid: System.IO.File.SetCreationTimeUtc*
  parent: System.IO.File
  isExternal: false
  name: SetCreationTimeUtc
  nameWithType: File.SetCreationTimeUtc
- uid: System.IO.File.SetLastAccessTime*
  parent: System.IO.File
  isExternal: false
  name: SetLastAccessTime
  nameWithType: File.SetLastAccessTime
- uid: System.IO.File.SetLastAccessTimeUtc*
  parent: System.IO.File
  isExternal: false
  name: SetLastAccessTimeUtc
  nameWithType: File.SetLastAccessTimeUtc
- uid: System.IO.File.SetLastWriteTime*
  parent: System.IO.File
  isExternal: false
  name: SetLastWriteTime
  nameWithType: File.SetLastWriteTime
- uid: System.IO.File.SetLastWriteTimeUtc*
  parent: System.IO.File
  isExternal: false
  name: SetLastWriteTimeUtc
  nameWithType: File.SetLastWriteTimeUtc
- uid: System.IO.File.WriteAllBytes*
  parent: System.IO.File
  isExternal: false
  name: WriteAllBytes
  nameWithType: File.WriteAllBytes
- uid: System.IO.File.WriteAllLines*
  parent: System.IO.File
  isExternal: false
  name: WriteAllLines
  nameWithType: File.WriteAllLines
- uid: System.IO.File.WriteAllText*
  parent: System.IO.File
  isExternal: false
  name: WriteAllText
  nameWithType: File.WriteAllText
