### YamlMime:ManagedReference
items:
- uid: System.Windows.Navigation.NavigationService
  id: NavigationService
  children:
  - System.Windows.Navigation.NavigationService.AddBackEntry(System.Windows.Navigation.CustomContentState)
  - System.Windows.Navigation.NavigationService.CanGoBack
  - System.Windows.Navigation.NavigationService.CanGoForward
  - System.Windows.Navigation.NavigationService.Content
  - System.Windows.Navigation.NavigationService.CurrentSource
  - System.Windows.Navigation.NavigationService.FragmentNavigation
  - System.Windows.Navigation.NavigationService.GetNavigationService(System.Windows.DependencyObject)
  - System.Windows.Navigation.NavigationService.GoBack
  - System.Windows.Navigation.NavigationService.GoForward
  - System.Windows.Navigation.NavigationService.LoadCompleted
  - System.Windows.Navigation.NavigationService.Navigate(System.Object)
  - System.Windows.Navigation.NavigationService.Navigate(System.Uri)
  - System.Windows.Navigation.NavigationService.Navigate(System.Object,System.Object)
  - System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object)
  - System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object,System.Boolean)
  - System.Windows.Navigation.NavigationService.Navigated
  - System.Windows.Navigation.NavigationService.Navigating
  - System.Windows.Navigation.NavigationService.NavigationFailed
  - System.Windows.Navigation.NavigationService.NavigationProgress
  - System.Windows.Navigation.NavigationService.NavigationStopped
  - System.Windows.Navigation.NavigationService.Refresh
  - System.Windows.Navigation.NavigationService.RemoveBackEntry
  - System.Windows.Navigation.NavigationService.Source
  - System.Windows.Navigation.NavigationService.StopLoading
  langs:
  - csharp
  name: NavigationService
  nameWithType: NavigationService
  fullName: System.Windows.Navigation.NavigationService
  type: Class
  summary: "包含方法、 屬性和事件，以支援導覽。"
  remarks: "NavigationService 封裝能夠下載的瀏覽器樣式瀏覽內容中的內容。       內容可以是任何類型的[!INCLUDE[TLA2#tla_winfx](~/add/includes/tla2sharptla-winfx-md.md)]物件和[!INCLUDE[TLA#tla_html](~/add/includes/tlasharptla-html-md.md)]檔案。 一般情況下，不過，頁面是慣用的套件內容，以瀏覽方式時 (請參閱<xref:System.Windows.Controls.Page>)。</xref:System.Windows.Controls.Page>       內容可以藉由提供的物件執行個體並呼叫的多載，導覽至<xref:System.Windows.Navigation.NavigationService.Navigate%2A>接受物件的方法:- <xref:System.Windows.Navigation.NavigationService.Navigate%28System.Object%29?displayProperty=fullName>-<xref:System.Windows.Navigation.NavigationService.Navigate%28System.Object%2CSystem.Object%29?displayProperty=fullName>或者，內容可以巡覽至藉由傳遞相對或絕對[!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)]的其中一個<xref:System.Windows.Navigation.NavigationService.Navigate%2A>方法多載接受[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]:- <xref:System.Windows.Navigation.NavigationService.Navigate%28System.Uri%29?displayProperty=fullName>- <xref:System.Windows.Navigation.NavigationService.Navigate%28System.Uri%2CSystem.Object%29?displayProperty=fullName>-<xref:System.Windows.Navigation.NavigationService.Navigate%28System.Uri%2CSystem.Object%2CSystem.Boolean%29?displayProperty=fullName>當內容導覽[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]，NavigationService 會傳回包含內容的物件。</xref:System.Windows.Navigation.NavigationService.Navigate%28System.Uri%2CSystem.Object%2CSystem.Boolean%29?displayProperty=fullName> </xref:System.Windows.Navigation.NavigationService.Navigate%28System.Uri%2CSystem.Object%29?displayProperty=fullName> </xref:System.Windows.Navigation.NavigationService.Navigate%28System.Uri%29?displayProperty=fullName> </xref:System.Windows.Navigation.NavigationService.Navigate%2A> </xref:System.Windows.Navigation.NavigationService.Navigate%28System.Object%2CSystem.Object%29?displayProperty=fullName> </xref:System.Windows.Navigation.NavigationService.Navigate%28System.Object%29?displayProperty=fullName> </xref:System.Windows.Navigation.NavigationService.Navigate%2A>       可巡覽的存留期追蹤透過下列事件:- <xref:System.Windows.Navigation.NavigationService.Navigating>- <xref:System.Windows.Navigation.NavigationService.Navigated>- <xref:System.Windows.Navigation.NavigationService.NavigationProgress>- <xref:System.Windows.Navigation.NavigationService.NavigationFailed>- <xref:System.Windows.Navigation.NavigationService.NavigationStopped>- <xref:System.Windows.Navigation.NavigationService.LoadCompleted>- <xref:System.Windows.Navigation.NavigationService.FragmentNavigation>.</xref:System.Windows.Navigation.NavigationService.FragmentNavigation> </xref:System.Windows.Navigation.NavigationService.LoadCompleted> </xref:System.Windows.Navigation.NavigationService.NavigationStopped> </xref:System.Windows.Navigation.NavigationService.NavigationFailed> </xref:System.Windows.Navigation.NavigationService.NavigationProgress> </xref:System.Windows.Navigation.NavigationService.Navigated> </xref:System.Windows.Navigation.NavigationService.Navigating>       發生巡覽; 每次引發並非所有的事件引發的事件組取決的類型 （內容或內容片段），就會發生的瀏覽和巡覽完成的方式 （取消、 已停止或失敗）。       下圖說明這些事件的引發順序︰![頁面巡覽流程圖](~/add/media/navigationoverviewfigure11.png &quot;頁面巡覽流程圖&quot;)NavigationService 期間或之後的導覽，提供所巡覽，包括內容的相關資訊[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]正要巡覽之內容 (<xref:System.Windows.Navigation.NavigationService.Source%2A>)、[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]目前內容的 (<xref:System.Windows.Navigation.NavigationService.CurrentSource%2A>)，並包含所巡覽之內容的物件 (<xref:System.Windows.Navigation.NavigationService.Content%2A>)。</xref:System.Windows.Navigation.NavigationService.Content%2A> </xref:System.Windows.Navigation.NavigationService.CurrentSource%2A> </xref:System.Windows.Navigation.NavigationService.Source%2A>       當內容導覽至時，NavigationService 會記錄為項目導覽巡覽記錄中。 項目加入備份瀏覽歷程記錄，其中一個新的瀏覽發生時，藉由呼叫<xref:System.Windows.Navigation.NavigationService.Navigate%2A>方法，或瀏覽至 向前巡覽記錄中的項目，藉由呼叫<xref:System.Windows.Navigation.NavigationService.GoForward%2A>.</xref:System.Windows.Navigation.NavigationService.GoForward%2A> </xref:System.Windows.Navigation.NavigationService.Navigate%2A> 加入項目向前巡覽記錄瀏覽至的項目在上一步瀏覽歷程記錄，藉由呼叫<xref:System.Windows.Navigation.NavigationService.GoBack%2A>.</xref:System.Windows.Navigation.NavigationService.GoBack%2A> <xref:System.Windows.Navigation.NavigationService.CanGoBack%2A>和<xref:System.Windows.Navigation.NavigationService.CanGoForward%2A>報表是否有後方的項目及向前巡覽記錄，分別。</xref:System.Windows.Navigation.NavigationService.CanGoForward%2A></xref:System.Windows.Navigation.NavigationService.CanGoBack%2A> 此外，移除向後巡覽記錄中最新的項目，藉由呼叫<xref:System.Windows.Navigation.NavigationService.RemoveBackEntry%2A>.</xref:System.Windows.Navigation.NavigationService.RemoveBackEntry%2A>       根據預設，NavigationService 不會在瀏覽歷程記錄中儲存內容物件執行的個體。 相反地，NavigationService 建立內容物件的新執行個體使用巡覽記錄中巡覽至每一次。 此行為被為了避免過多的記憶體耗用量在巡覽大量內容時。 因此，內容的狀態並不會記住從一個瀏覽至下一步。 不過，[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]提供幾項技術之可以將一段內容的狀態儲存在瀏覽歷程記錄。       使用<xref:System.Windows.Navigation.NavigationService.AddBackEntry%2A>，您也可以記住多重集的單一頁面的執行個體的狀態。</xref:System.Windows.Navigation.NavigationService.AddBackEntry%2A>       NavigationService 是`sealed`類別，並因此，無法具現化; 相反地，NavigationService 正由導覽器來瀏覽。 在[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]，有兩個導覽器: <xref:System.Windows.Navigation.NavigationWindow>、 <xref:System.Windows.Controls.Frame>.</xref:System.Windows.Controls.Frame> </xref:System.Windows.Navigation.NavigationWindow>       以視覺化的方式，[!INCLUDE[TLA2#tla_xbap#plural](~/add/includes/tla2sharptla-xbapsharpplural-md.md)]使用[!INCLUDE[TLA2#tla_ie7](~/add/includes/tla2sharptla-ie7-md.md)]為導覽器，以提供整合的使用者經驗。 實際，不過[!INCLUDE[TLA2#tla_xbap#plural](~/add/includes/tla2sharptla-xbapsharpplural-md.md)]實際使用<xref:System.Windows.Navigation.NavigationWindow>導覽; 為<xref:System.Windows.Application.MainWindow%2A>屬性[!INCLUDE[TLA2#tla_xbap](~/add/includes/ajax-current-ext-md.md)]中執行[!INCLUDE[TLA2#tla_ie7](~/add/includes/tla2sharptla-ie7-md.md)]會傳回參考<xref:System.Windows.Navigation.NavigationWindow>，和管理的瀏覽歷程記錄<xref:System.Windows.Navigation.NavigationWindow>整合由管理的瀏覽歷程記錄[!INCLUDE[TLA2#tla_ie7](~/add/includes/tla2sharptla-ie7-md.md)]以下列方式:-內容藉由呼叫巡覽時<xref:System.Windows.Navigation.NavigationService.Navigate%2A>， <xref:System.Windows.Navigation.NavigationService.GoBack%2A>，和<xref:System.Windows.Navigation.NavigationService.GoForward%2A>從[!INCLUDE[TLA2#tla_xbap](~/add/includes/ajax-current-ext-md.md)]相關的瀏覽歷程記錄項目也會新增至[!INCLUDE[TLA2#tla_ie7](~/add/includes/tla2sharptla-ie7-md.md)]瀏覽歷程記錄。</xref:System.Windows.Navigation.NavigationService.GoForward%2A> </xref:System.Windows.Navigation.NavigationService.GoBack%2A> </xref:System.Windows.Navigation.NavigationService.Navigate%2A> </xref:System.Windows.Navigation.NavigationWindow> </xref:System.Windows.Navigation.NavigationWindow> </xref:System.Windows.Application.MainWindow%2A> </xref:System.Windows.Navigation.NavigationWindow>      -當中的項目[!INCLUDE[TLA2#tla_ie7](~/add/includes/tla2sharptla-ie7-md.md)]瀏覽[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]會選取[!INCLUDE[TLA2#tla_ie7](~/add/includes/tla2sharptla-ie7-md.md)]導致瀏覽回 NavigationService 或轉送給與那些項目相關聯的內容。      > [!NOTE] ><xref:System.Windows.Controls.Frame>可以提供自己的瀏覽歷程記錄，或使用瀏覽歷程記錄的裝載。 請 [導覽器]</xref:System.Windows.Controls.Frame> 如果<xref:System.Windows.Controls.Frame>提供自己的瀏覽歷程記錄，它可以顯示其本身的瀏覽[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]來瀏覽導覽記錄中; 中的項目那些項目不會加入至主機導覽巡覽歷程記錄 (<xref:System.Windows.Navigation.NavigationWindow>， <xref:System.Windows.Controls.Frame>， [!INCLUDE[TLA2#tla_iegeneric](~/add/includes/tla2sharptla-iegeneric-md.md)])，因此，無法瀏覽至從瀏覽[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]每個 (請參閱<xref:System.Windows.Controls.Frame.JournalOwnership%2A>)。</xref:System.Windows.Controls.Frame.JournalOwnership%2A> </xref:System.Windows.Controls.Frame> </xref:System.Windows.Navigation.NavigationWindow> </xref:System.Windows.Controls.Frame>"
  syntax:
    content: public sealed class NavigationService
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Navigation.NavigationService.AddBackEntry(System.Windows.Navigation.CustomContentState)
  id: AddBackEntry(System.Windows.Navigation.CustomContentState)
  parent: System.Windows.Navigation.NavigationService
  langs:
  - csharp
  name: AddBackEntry(CustomContentState)
  nameWithType: NavigationService.AddBackEntry(CustomContentState)
  fullName: System.Windows.Navigation.NavigationService.AddBackEntry(CustomContentState)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Navigation
  summary: "將備份瀏覽歷程記錄，其中包含的項目<xref href=&quot;System.Windows.Navigation.CustomContentState&quot;></xref>物件。"
  remarks: "AddBackEntry， <xref:System.Windows.Navigation.CustomContentState>，和<xref:System.Windows.Navigation.IProvideCustomContentState>用來協助您記住多重集的目前內容的狀態。</xref:System.Windows.Navigation.IProvideCustomContentState> </xref:System.Windows.Navigation.CustomContentState>"
  syntax:
    content: public void AddBackEntry (System.Windows.Navigation.CustomContentState state);
    parameters:
    - id: state
      type: System.Windows.Navigation.CustomContentState
      description: "A <xref href=&quot;System.Windows.Navigation.CustomContentState&quot;> </xref>物件，表示與特定的內容相關聯的應用程式定義狀態。"
  overload: System.Windows.Navigation.NavigationService.AddBackEntry*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>state</code>是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>，和<xref href=&quot;System.Windows.Navigation.CustomContentState&quot;></xref>物件不從傳回<xref:System.Windows.Navigation.IProvideCustomContentState.GetContentState*>。"
  platform:
  - net462
- uid: System.Windows.Navigation.NavigationService.CanGoBack
  id: CanGoBack
  parent: System.Windows.Navigation.NavigationService
  langs:
  - csharp
  name: CanGoBack
  nameWithType: NavigationService.CanGoBack
  fullName: System.Windows.Navigation.NavigationService.CanGoBack
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Navigation
  summary: "取得值，表示向後巡覽記錄中是否至少一個項目。"
  remarks: "若要判斷向後巡覽記錄中是否至少一個項目 CanGoBack。 應檢查這個屬性，然後再呼叫<xref:System.Windows.Navigation.NavigationService.GoBack%2A>; 如果<xref:System.Windows.Navigation.NavigationService.GoBack%2A>稱為和向後巡覽記錄中沒有任何項目<xref:System.InvalidOperationException>就會擲回。</xref:System.InvalidOperationException> </xref:System.Windows.Navigation.NavigationService.GoBack%2A> </xref:System.Windows.Navigation.NavigationService.GoBack%2A>      > [!NOTE] >，如果巡覽歷程記錄由多個導覽器共用 (<xref:System.Windows.Navigation.NavigationWindow>， <xref:System.Windows.Controls.Frame>)、 最新的項目在上一步瀏覽歷程記錄可能未新增由<xref:System.Windows.Navigation.NavigationService>為目前的導覽器。</xref:System.Windows.Navigation.NavigationService> </xref:System.Windows.Controls.Frame> </xref:System.Windows.Navigation.NavigationWindow>"
  syntax:
    content: public bool CanGoBack { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果沒有至少一個項目中向後巡覽記錄中;否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Navigation.NavigationService.CanGoBack*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Navigation.NavigationService.CanGoForward
  id: CanGoForward
  parent: System.Windows.Navigation.NavigationService
  langs:
  - csharp
  name: CanGoForward
  nameWithType: NavigationService.CanGoForward
  fullName: System.Windows.Navigation.NavigationService.CanGoForward
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Navigation
  summary: "取得值，指出向前巡覽記錄中是否至少一個項目。"
  remarks: "若要判斷向前巡覽記錄中是否至少一個項目 CanGoForward。 應檢查這個屬性，然後再呼叫<xref:System.Windows.Navigation.NavigationService.GoForward%2A>; 如果<xref:System.Windows.Navigation.NavigationService.GoForward%2A>稱為向前巡覽記錄中沒有任何項目和<xref:System.InvalidOperationException>就會擲回。</xref:System.InvalidOperationException> </xref:System.Windows.Navigation.NavigationService.GoForward%2A> </xref:System.Windows.Navigation.NavigationService.GoForward%2A>"
  syntax:
    content: public bool CanGoForward { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果向前巡覽記錄中; 沒有至少一個項目否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Navigation.NavigationService.CanGoForward*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Navigation.NavigationService.Content
  id: Content
  parent: System.Windows.Navigation.NavigationService
  langs:
  - csharp
  name: Content
  nameWithType: NavigationService.Content
  fullName: System.Windows.Navigation.NavigationService.Content
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Navigation
  summary: "取得或設定包含目前的內容物件的參考。"
  remarks: "內容可以設定中有兩種:-直接將它設定為物件的參考。      -間接，藉由呼叫<xref:System.Windows.Navigation.NavigationService.Navigate%2A>， <xref:System.Windows.Navigation.NavigationService.GoBack%2A>，或<xref:System.Windows.Navigation.NavigationService.GoForward%2A>.</xref:System.Windows.Navigation.NavigationService.GoForward%2A> </xref:System.Windows.Navigation.NavigationService.GoBack%2A> </xref:System.Windows.Navigation.NavigationService.Navigate%2A>       設定<xref:System.Windows.Navigation.NavigationService>起始新的瀏覽; 因為導覽是非同步的內容不會傳回值，如果它設定之後，立即檢查。</xref:System.Windows.Navigation.NavigationService>"
  syntax:
    content: public object Content { get; set; }
    return:
      type: System.Object
      description: "物件，包含目前的內容物件的參考。"
  overload: System.Windows.Navigation.NavigationService.Content*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Navigation.NavigationService.CurrentSource
  id: CurrentSource
  parent: System.Windows.Navigation.NavigationService
  langs:
  - csharp
  name: CurrentSource
  nameWithType: NavigationService.CurrentSource
  fullName: System.Windows.Navigation.NavigationService.CurrentSource
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Navigation
  summary: "取得[!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)]之內容的上一次瀏覽至。"
  remarks: "CurrentSource 屬性的值不會變更至不同的瀏覽之前[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]已順利完成。       可以使用片段僅設定 CurrentSource [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]。"
  syntax:
    content: public Uri CurrentSource { get; }
    return:
      type: System.Uri
      description: "A<xref:System.Uri>內容是上一次瀏覽，如果使用導覽[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]，否則<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。</xref:System.Uri>"
  overload: System.Windows.Navigation.NavigationService.CurrentSource*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Navigation.NavigationService.FragmentNavigation
  id: FragmentNavigation
  parent: System.Windows.Navigation.NavigationService
  langs:
  - csharp
  name: FragmentNavigation
  nameWithType: NavigationService.FragmentNavigation
  fullName: System.Windows.Navigation.NavigationService.FragmentNavigation
  type: Event
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Navigation
  summary: "導覽至內容片段開始時，立即發生所需的片段是否在目前內容中，或來源之後，就會發生[!INCLUDE[TLA2#tla_titlexaml](~/add/includes/tla2sharptla-titlexaml-md.md)]已載入內容，如果想要的片段位在不同的內容。"
  remarks: "By default, a content fragment is content that is contained by a named <xref:System.Windows.UIElement>, which is a <xref:System.Windows.UIElement> whose <xref:System.Windows.FrameworkElement.Name%2A> attribute is set, eg:  \n  \n```  \n<TextBlock Name=\"FragmentName\">...</TextBlock>  \n```  \n  \n You navigate to a [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] fragment by providing a [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] with a suffix in the following format:  \n  \n \\#*FragmentName*  \n  \n The following shows an example of a [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] that refers to a content fragment:  \n  \n `http://www.microsoft.com/targetpage.xaml#FragmentName`  \n  \n After the source page loads (after <xref:System.Windows.Navigation.NavigationService.LoadCompleted> event is raised), fragment navigation begins and the <xref:System.Windows.Navigation.NavigationService> attempts to locate the [!INCLUDE[TLA2#tla_titlexaml](~/add/includes/tla2sharptla-titlexaml-md.md)] fragment. If the [!INCLUDE[TLA2#tla_titlexaml](~/add/includes/tla2sharptla-titlexaml-md.md)] fragment is found, <xref:System.Windows.Navigation.NavigationService> instructs the content navigator  (<xref:System.Windows.Navigation.NavigationWindow>, <xref:System.Windows.Controls.Frame>) to show the fragment. If you need to change this behavior, you can handle FragmentNavigation to provide your own fragment navigation behavior. FragmentNavigation is passed a <xref:System.Windows.Navigation.FragmentNavigationEventArgs> parameter which exposes properties that are useful for this purpose, including:  \n  \n-   The navigator that owns this navigation service (<xref:System.Windows.Navigation.NavigationWindow>, <xref:System.Windows.Controls.Frame>).  \n  \n-   The fragment name.  \n  \n You can handle FragmentNavigation to override the default [!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)] fragment implementation with your own custom implementation. If you do so, you need to set <xref:System.Windows.Navigation.FragmentNavigationEventArgs.Handled%2A> to `true`; otherwise, the default [!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)] fragment processing behavior is applied.  \n  \n You should avoid directly initiating navigation from within a FragmentNavigation event handler. Since FragmentNavigation is raised during an existing navigation, initiating a new navigation from a FragmentNavigation event handler creates a nested navigation that can cause the <xref:System.ExecutionEngineException> to be thrown. Instead, you can indirectly initiate navigation by creating an asynchronous work item using the <xref:System.Windows.Threading.Dispatcher>.  \n  \n> [!NOTE]\n>  When <xref:System.Windows.Navigation.NavigationService> raises FragmentNavigation, it also raises <xref:System.Windows.Application.FragmentNavigation?displayProperty=fullName> event on the <xref:System.Windows.Application> object.  \n  \n> [!IMPORTANT]\n>  Fragment navigation is not supported for loose [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] pages (markup-only [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] files with `Page` as the root element) in the following cases:  \n>   \n>  • When navigating to a fragment in a loose [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] page.  \n>   \n>  • When navigating from a loose [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] page to a fragment in another loose [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] page.  \n>   \n>  However, a loose [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] page can navigate to its own fragments."
  example:
  - "The following example shows how to handle FragmentNavigation to provide custom fragment navigation behavior. In this case, the example opens an error [!INCLUDE[TLA2#tla_titlexaml](~/add/includes/tla2sharptla-titlexaml-md.md)] page if the fragment in the source [!INCLUDE[TLA2#tla_titlexaml](~/add/includes/tla2sharptla-titlexaml-md.md)] page is not found.  \n  \n [!code-cs[NavigationServiceSnippets#MainWindowFragmentNavigationCODE](~/add/codesnippet/csharp/NavigationServiceSnippets.CSharp/MainWindow.xaml.cs#mainwindowfragmentnavigationcode)]\n [!code-vb[NavigationServiceSnippets#MainWindowFragmentNavigationCODE](~/add/codesnippet/visualbasic/navigationservicesnippets/mainwindow.xaml.vb#mainwindowfragmentnavigationcode)]"
  syntax:
    content: public event System.Windows.Navigation.FragmentNavigationEventHandler FragmentNavigation;
    return:
      type: System.Windows.Navigation.FragmentNavigationEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Navigation.NavigationService.GetNavigationService(System.Windows.DependencyObject)
  id: GetNavigationService(System.Windows.DependencyObject)
  parent: System.Windows.Navigation.NavigationService
  langs:
  - csharp
  name: GetNavigationService(DependencyObject)
  nameWithType: NavigationService.GetNavigationService(DependencyObject)
  fullName: System.Windows.Navigation.NavigationService.GetNavigationService(DependencyObject)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Navigation
  summary: "取得參考<xref href=&quot;System.Windows.Navigation.NavigationService&quot;></xref>導覽內容包含指定的<xref href=&quot;System.Windows.DependencyObject&quot;> </xref>。"
  remarks: "具有導覽<xref:System.Windows.Navigation.NavigationService>可處理內容巡覽。</xref:System.Windows.Navigation.NavigationService> [!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]有兩個導覽器︰<xref:System.Windows.Navigation.NavigationWindow>和<xref:System.Windows.Controls.Frame>。</xref:System.Windows.Controls.Frame> </xref:System.Windows.Navigation.NavigationWindow> 若要處理巡覽要求，以及管理巡覽存留期，巡覽器會使用[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]瀏覽服務，它會實作為<xref:System.Windows.Navigation.NavigationService>類別。</xref:System.Windows.Navigation.NavigationService> 由導覽所裝載的內容可以取得 [導覽器] 的參考<xref:System.Windows.Navigation.NavigationService>藉由呼叫 GetNavigationService 方法。</xref:System.Windows.Navigation.NavigationService>       傳回 GetNavigationService`null`時`dependencyObject`:-為<xref:System.Windows.Navigation.NavigationWindow>。</xref:System.Windows.Navigation.NavigationWindow>      -這是<xref:System.Windows.Controls.Frame>，︰ 1。</xref:System.Windows.Controls.Frame>  由另一個導覽所裝載。          2.  具有<xref:System.Windows.Controls.Frame.JournalOwnership%2A>屬性設定為<xref:System.Windows.Navigation.JournalOwnership>.</xref:System.Windows.Navigation.JournalOwnership></xref:System.Windows.Controls.Frame.JournalOwnership%2A>其      -這不是屬於由導覽所裝載的內容。       [!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]提供取得參考的兩個快速鍵<xref:System.Windows.Navigation.NavigationService>:- <xref:System.Windows.Navigation.NavigationService>，處理瀏覽到<xref:System.Windows.Controls.Page>可以存取從<xref:System.Windows.Controls.Page>本身所取得的值及其<xref:System.Windows.Controls.Page.NavigationService%2A?displayProperty=fullName>屬性。</xref:System.Windows.Controls.Page.NavigationService%2A?displayProperty=fullName> </xref:System.Windows.Controls.Page> </xref:System.Windows.Controls.Page> </xref:System.Windows.Navigation.NavigationService> </xref:System.Windows.Navigation.NavigationService>      - <xref:System.Windows.Navigation.NavigationService>，會由<xref:System.Windows.Controls.Frame>處理功能可以存取所取得的值<xref:System.Windows.Controls.Frame.NavigationService%2A>屬性。</xref:System.Windows.Controls.Frame.NavigationService%2A> </xref:System.Windows.Controls.Frame> </xref:System.Windows.Navigation.NavigationService>"
  example:
  - "The following example shows how a <xref:System.Windows.Controls.UserControl> can retrieve a navigation service by calling GetNavigationService.  \n  \n [!code-cs[NSGetNavigationServiceSnippets#GetNavigationServiceCODE1](~/add/codesnippet/csharp/NSGetNavigationServiceSnippets.CSharp/ContentUserControl.xaml.cs#getnavigationservicecode1)]\n [!code-vb[NSGetNavigationServiceSnippets#GetNavigationServiceCODE1](~/add/codesnippet/visualbasic/nsgetnavigationservicesnippets/contentusercontrol.xaml.vb#getnavigationservicecode1)]  \n[!code-cs[NSGetNavigationServiceSnippets#GetNavigationServiceCODE2](~/add/codesnippet/csharp/NSGetNavigationServiceSnippets.CSharp/ContentUserControl.xaml.cs#getnavigationservicecode2)]\n[!code-vb[NSGetNavigationServiceSnippets#GetNavigationServiceCODE2](~/add/codesnippet/visualbasic/nsgetnavigationservicesnippets/contentusercontrol.xaml.vb#getnavigationservicecode2)]"
  syntax:
    content: public static System.Windows.Navigation.NavigationService GetNavigationService (System.Windows.DependencyObject dependencyObject);
    parameters:
    - id: dependencyObject
      type: System.Windows.DependencyObject
      description: "<xref href=&quot;System.Windows.DependencyObject&quot;> </xref>由導覽所裝載的內容中。"
    return:
      type: System.Windows.Navigation.NavigationService
      description: "參考<xref href=&quot;System.Windows.Navigation.NavigationService&quot;></xref>導覽內容包含指定的<xref href=&quot;System.Windows.DependencyObject&quot;> </xref>; 可以是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>在某些情況下 （請參閱 < 備註 >）。"
  overload: System.Windows.Navigation.NavigationService.GetNavigationService*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>dependencyObject</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Navigation.NavigationService.GoBack
  id: GoBack
  parent: System.Windows.Navigation.NavigationService
  langs:
  - csharp
  name: GoBack()
  nameWithType: NavigationService.GoBack()
  fullName: System.Windows.Navigation.NavigationService.GoBack()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Navigation
  summary: "巡覽至最新的項目在上一步瀏覽歷程記錄，如果有的話。"
  remarks: "然後再呼叫 GoBack，<xref:System.Windows.Navigation.NavigationService.CanGoBack%2A>屬性可檢查以判斷向後巡覽記錄中是否有項目。</xref:System.Windows.Navigation.NavigationService.CanGoBack%2A>"
  example:
  - "The following example navigates to the most recent entry in back navigation history, if one exists.  \n  \n [!code-cs[NavigationServiceSnippets#MainWindowBackCODE](~/add/codesnippet/csharp/NavigationServiceSnippets.CSharp/MainWindow.xaml.cs#mainwindowbackcode)]\n [!code-vb[NavigationServiceSnippets#MainWindowBackCODE](~/add/codesnippet/visualbasic/navigationservicesnippets/mainwindow.xaml.vb#mainwindowbackcode)]"
  syntax:
    content: public void GoBack ();
    parameters: []
  overload: System.Windows.Navigation.NavigationService.GoBack*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "向後巡覽記錄中沒有任何項目時，會呼叫 GoBack。"
  platform:
  - net462
- uid: System.Windows.Navigation.NavigationService.GoForward
  id: GoForward
  parent: System.Windows.Navigation.NavigationService
  langs:
  - csharp
  name: GoForward()
  nameWithType: NavigationService.GoForward()
  fullName: System.Windows.Navigation.NavigationService.GoForward()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Navigation
  summary: "如果有的話，請瀏覽向前巡覽記錄中最新的項目。"
  remarks: "然後再呼叫 GoForward<xref:System.Windows.Navigation.NavigationService.CanGoForward%2A>屬性可檢查以判斷向前巡覽記錄中是否有項目。</xref:System.Windows.Navigation.NavigationService.CanGoForward%2A>"
  example:
  - "The following example navigates to the most recent entry in forward navigation history, if one exists.  \n  \n [!code-cs[NavigationServiceSnippets#MainWindowForwardCODE](~/add/codesnippet/csharp/NavigationServiceSnippets.CSharp/MainWindow.xaml.cs#mainwindowforwardcode)]\n [!code-vb[NavigationServiceSnippets#MainWindowForwardCODE](~/add/codesnippet/visualbasic/navigationservicesnippets/mainwindow.xaml.vb#mainwindowforwardcode)]"
  syntax:
    content: public void GoForward ();
    parameters: []
  overload: System.Windows.Navigation.NavigationService.GoForward*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "GoForward 是在向前巡覽記錄中沒有任何項目時呼叫。"
  platform:
  - net462
- uid: System.Windows.Navigation.NavigationService.LoadCompleted
  id: LoadCompleted
  parent: System.Windows.Navigation.NavigationService
  langs:
  - csharp
  name: LoadCompleted
  nameWithType: NavigationService.LoadCompleted
  fullName: System.Windows.Navigation.NavigationService.LoadCompleted
  type: Event
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Navigation
  summary: "發生於所巡覽的內容已載入，剖析，並開始呈現。"
  remarks: "如果您要探索有關巡覽要求完成負載的相關資訊，請處理 LoadCompleted。 這項資訊可從<xref:System.Windows.Navigation.NavigationEventArgs>物件，傳遞至 LoadCompleted 事件處理常式，並包括:-內容及其[!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)]。</xref:System.Windows.Navigation.NavigationEventArgs>      -[導覽器] (<xref:System.Windows.Navigation.NavigationWindow>， <xref:System.Windows.Controls.Frame>)。</xref:System.Windows.Controls.Frame> </xref:System.Windows.Navigation.NavigationWindow>      -如果透過呼叫其中一個<xref:System.Windows.Navigation.NavigationService.Navigate%2A>或<xref:System.Windows.Navigation.NavigationService.Navigate%2A>.</xref:System.Windows.Navigation.NavigationService.Navigate%2A></xref:System.Windows.Navigation.NavigationService.Navigate%2A>初始化巡覽其他資料      -回應詳細資料 (使用<xref:System.Net.WebResponse>物件)。</xref:System.Net.WebResponse>       當 [來源] 頁面無法找到或載入，在此情況下，不會引發 LoadCompleted <xref:System.Windows.Navigation.NavigationService.NavigationFailed>，就會引發。</xref:System.Windows.Navigation.NavigationService.NavigationFailed>      > [!NOTE] > 時<xref:System.Windows.Navigation.NavigationService>引發 LoadCompleted，它也會引發<xref:System.Windows.Application.LoadCompleted?displayProperty=fullName>事件<xref:System.Windows.Application>物件。</xref:System.Windows.Application> </xref:System.Windows.Application.LoadCompleted?displayProperty=fullName> </xref:System.Windows.Navigation.NavigationService>"
  example:
  - "The following example shows how to handle LoadCompleted.  \n  \n [!code-cs[NavigationServiceSnippets#MainWindowLoadCompletedCODE](~/add/codesnippet/csharp/NavigationServiceSnippets.CSharp/MainWindow.xaml.cs#mainwindowloadcompletedcode)]\n [!code-vb[NavigationServiceSnippets#MainWindowLoadCompletedCODE](~/add/codesnippet/visualbasic/navigationservicesnippets/mainwindow.xaml.vb#mainwindowloadcompletedcode)]"
  syntax:
    content: public event System.Windows.Navigation.LoadCompletedEventHandler LoadCompleted;
    return:
      type: System.Windows.Navigation.LoadCompletedEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Navigation.NavigationService.Navigate(System.Object)
  id: Navigate(System.Object)
  parent: System.Windows.Navigation.NavigationService
  langs:
  - csharp
  name: Navigate(Object)
  nameWithType: NavigationService.Navigate(Object)
  fullName: System.Windows.Navigation.NavigationService.Navigate(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Navigation
  summary: "非同步巡覽至物件所包含的內容。"
  remarks: "瀏覽會瀏覽至<xref:System.Object>所指定`root`如果下列條件成立:-<xref:System.Windows.Navigation.NavigationService.Navigating>事件不會取消。</xref:System.Windows.Navigation.NavigationService.Navigating> </xref:System.Object>      -Web 要求 (請參閱<xref:System.Windows.Navigation.NavigationService.Navigating>) 可由。</xref:System.Windows.Navigation.NavigationService.Navigating>       如果`root`是`null`，則現有內容 (<xref:System.Windows.Navigation.NavigationService.Content%2A>) 會清除。</xref:System.Windows.Navigation.NavigationService.Content%2A>      > [!NOTE] > 網頁內容下載，您可能會收到 Web 例外狀況 (例如，404︰ 找不到檔案)。 您可以處理<xref:System.Windows.Navigation.NavigationService.NavigationFailed>.</xref:System.Windows.Navigation.NavigationService.NavigationFailed>從這類例外狀況"
  example:
  - "The following example shows how to navigate to a <xref:System.Windows.Controls.Page> object containing the source content tree.  \n  \n [!code-cs[NavigationServiceSnippets#MainWindowNavigateObjectCODE](~/add/codesnippet/csharp/NavigationServiceSnippets.CSharp/MainWindow.xaml.cs#mainwindownavigateobjectcode)]\n [!code-vb[NavigationServiceSnippets#MainWindowNavigateObjectCODE](~/add/codesnippet/visualbasic/navigationservicesnippets/mainwindow.xaml.vb#mainwindownavigateobjectcode)]"
  syntax:
    content: public bool Navigate (object root);
    parameters:
    - id: root
      type: System.Object
      description: "物件，包含要瀏覽至內容。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果未取消瀏覽。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Navigation.NavigationService.Navigate*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Navigation.NavigationService.Navigate(System.Uri)
  id: Navigate(System.Uri)
  parent: System.Windows.Navigation.NavigationService
  langs:
  - csharp
  name: Navigate(Uri)
  nameWithType: NavigationService.Navigate(Uri)
  fullName: System.Windows.Navigation.NavigationService.Navigate(Uri)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Navigation
  summary: "以非同步方式巡覽至所指定的內容[!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)]。"
  remarks: "值`source`可以是 Web[!INCLUDE[TLA#tla_url](~/add/includes/tlasharptla-url-md.md)]或有效的組件[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)](請參閱[WPF 中的組件 Uri](~/add/includes/ajax-current-ext-md.md))。       瀏覽會瀏覽至[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]所指定`source`如果下列條件成立:-<xref:System.Windows.Navigation.NavigationService.Navigating>事件不會取消。</xref:System.Windows.Navigation.NavigationService.Navigating>      -Web 要求 (請參閱<xref:System.Windows.Navigation.NavigationService.Navigating>) 可由。</xref:System.Windows.Navigation.NavigationService.Navigating>       如果`source`是`null`，則現有內容 (<xref:System.Windows.Navigation.NavigationService.Content%2A>) 會清除。</xref:System.Windows.Navigation.NavigationService.Content%2A>      > [!NOTE] > 網頁內容下載，您可能會收到 Web 例外狀況 (例如，404︰ 找不到檔案)。 您可以處理<xref:System.Windows.Navigation.NavigationService.NavigationFailed>.</xref:System.Windows.Navigation.NavigationService.NavigationFailed>從這類例外狀況       您可以使用 瀏覽以瀏覽至內容片段。 如果內容由[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]是目前內容，它就不會再次下載。"
  example:
  - "The following example shows how to navigate to a [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)].  \n  \n [!code-cs[NavigationServiceSnippets#MainWindowNavigateCODE](~/add/codesnippet/csharp/NavigationServiceSnippets.CSharp/MainWindow.xaml.cs#mainwindownavigatecode)]\n [!code-vb[NavigationServiceSnippets#MainWindowNavigateCODE](~/add/codesnippet/visualbasic/navigationservicesnippets/mainwindow.xaml.vb#mainwindownavigatecode)]"
  syntax:
    content: public bool Navigate (Uri source);
    parameters:
    - id: source
      type: System.Uri
      description: "A<xref:System.Uri>物件使用初始化[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]的所需的內容。</xref:System.Uri>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果未取消瀏覽。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Navigation.NavigationService.Navigate*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Navigation.NavigationService.Navigate(System.Object,System.Object)
  id: Navigate(System.Object,System.Object)
  parent: System.Windows.Navigation.NavigationService
  langs:
  - csharp
  name: Navigate(Object,Object)
  nameWithType: NavigationService.Navigate(Object,Object)
  fullName: System.Windows.Navigation.NavigationService.Navigate(Object,Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Navigation
  summary: "以非同步方式瀏覽內容所包含的物件，並傳遞物件，包含要用於巡覽期間處理的資料。"
  remarks: "這個方法具有相同的行為<xref:System.Windows.Navigation.NavigationService.Navigate%2A?displayProperty=fullName>，不過，而不是傳遞物件[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]。</xref:System.Windows.Navigation.NavigationService.Navigate%2A?displayProperty=fullName>"
  example:
  - "The following example shows how to navigate to a <xref:System.Windows.Controls.Page> object containing the source content, and passing navigation state.  \n  \n [!code-cs[NavigationServiceNavigateObjectStateSnippets#MainWindowCODE](~/add/codesnippet/csharp/NavigationServiceNavigateObjectStateSnippets.CSharp/MainWindow.xaml.cs#mainwindowcode)]\n [!code-vb[NavigationServiceNavigateObjectStateSnippets#MainWindowCODE](~/add/codesnippet/visualbasic/navigationservicenavigateobjectstatesnippets/mainwindow.xaml.vb#mainwindowcode)]"
  syntax:
    content: public bool Navigate (object root, object navigationState);
    parameters:
    - id: root
      type: System.Object
      description: "物件，包含要瀏覽至內容。"
    - id: navigationState
      type: System.Object
      description: "物件，包含要用於巡覽期間處理的資料。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果未取消瀏覽。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Navigation.NavigationService.Navigate*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object)
  id: Navigate(System.Uri,System.Object)
  parent: System.Windows.Navigation.NavigationService
  langs:
  - csharp
  name: Navigate(Uri,Object)
  nameWithType: NavigationService.Navigate(Uri,Object)
  fullName: System.Windows.Navigation.NavigationService.Navigate(Uri,Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Navigation
  summary: "以非同步方式瀏覽位於來源內容[!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)]，並傳遞物件，包含要用於巡覽期間處理的資料。"
  remarks: "巡覽是非同步的因為它可能會在同一時間可進行多個導覽。 比方說，如果在單一頁面上有兩個子框架，則無法瀏覽這兩個框架。 在此情況下，所引發的各種導覽事件<xref:System.Windows.Navigation.NavigationService>可能會引發的多次，一個用於每一項，在巡覽的內容且不一定順序來巡覽要求。</xref:System.Windows.Navigation.NavigationService> 因此，如果特定瀏覽要求需要處理的個別要求特定資料，它就無法使用可瀏覽的所有要求的資料。 相反地，您可以使用`navigationState`瀏覽處理，是一個巡覽要求的特定傳遞資料。       下列事件引數提供導覽狀態的存取:- <xref:System.Windows.Navigation.NavigatingCancelEventArgs.ExtraData%2A>(傳遞至<xref:System.Windows.Navigation.NavigationService.Navigating>事件)。</xref:System.Windows.Navigation.NavigationService.Navigating> </xref:System.Windows.Navigation.NavigatingCancelEventArgs.ExtraData%2A>      - <xref:System.Windows.Navigation.NavigationEventArgs.ExtraData%2A>(傳遞至<xref:System.Windows.Navigation.NavigationService.Navigated>， <xref:System.Windows.Navigation.NavigationService.NavigationStopped>，<xref:System.Windows.Navigation.NavigationService.LoadCompleted>事件處理常式)。</xref:System.Windows.Navigation.NavigationService.LoadCompleted> </xref:System.Windows.Navigation.NavigationService.NavigationStopped> </xref:System.Windows.Navigation.NavigationService.Navigated> </xref:System.Windows.Navigation.NavigationEventArgs.ExtraData%2A>"
  example:
  - "The following example demonstrates navigating to a [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] and passing navigation state.  \n  \n [!code-cs[NavigationServiceNavigateUriStateSnippets#MainWindowCODE](~/add/codesnippet/csharp/NavigationServiceNavigateUriStateSnippets.CSharp/MainWindow.xaml.cs#mainwindowcode)]\n [!code-vb[NavigationServiceNavigateUriStateSnippets#MainWindowCODE](~/add/codesnippet/visualbasic/navigationservicenavigateuristatesnippets/mainwindow.xaml.vb#mainwindowcode)]"
  syntax:
    content: public bool Navigate (Uri source, object navigationState);
    parameters:
    - id: source
      type: System.Uri
      description: "A<xref:System.Uri>物件使用初始化[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]的所需的內容。</xref:System.Uri>"
    - id: navigationState
      type: System.Object
      description: "物件，包含要用於巡覽期間處理的資料。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果未取消瀏覽。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Navigation.NavigationService.Navigate*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object,System.Boolean)
  id: Navigate(System.Uri,System.Object,System.Boolean)
  parent: System.Windows.Navigation.NavigationService
  langs:
  - csharp
  name: Navigate(Uri,Object,Boolean)
  nameWithType: NavigationService.Navigate(Uri,Object,Boolean)
  fullName: System.Windows.Navigation.NavigationService.Navigate(Uri,Object,Boolean)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Navigation
  summary: "以非同步方式瀏覽位於來源內容[!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)]，傳遞包含導覽狀態期間瀏覽，並以沙箱處理內容的物件。"
  remarks: "這個方法是只對獨立應用程式和[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]內容。       這個方法會表現相同的行為<xref:System.Windows.Navigation.NavigationService.Navigate%2A?displayProperty=fullName>，並確保下載的內容會放入部分信任安全性沙箱擴充 (使用預設網際網路區域的一組權限-請參閱[WPF 部分信任安全性](~/add/includes/ajax-current-ext-md.md))。</xref:System.Windows.Navigation.NavigationService.Navigate%2A?displayProperty=fullName>"
  syntax:
    content: public bool Navigate (Uri source, object navigationState, bool sandboxExternalContent);
    parameters:
    - id: source
      type: System.Uri
      description: "A<xref:System.Uri>物件使用初始化[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]的所需的內容。</xref:System.Uri>"
    - id: navigationState
      type: System.Object
      description: "物件，包含要用於巡覽期間處理的資料。"
    - id: sandboxExternalContent
      type: System.Boolean
      description: "下載內容至部分信任安全性沙箱 (預設值網際網路區域組權限，如果<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果未取消瀏覽。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Navigation.NavigationService.Navigate*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Navigation.NavigationService.Navigated
  id: Navigated
  parent: System.Windows.Navigation.NavigationService
  langs:
  - csharp
  name: Navigated
  nameWithType: NavigationService.Navigated
  fullName: System.Windows.Navigation.NavigationService.Navigated
  type: Event
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Navigation
  summary: "當所巡覽的內容已經找到，且可從<xref:System.Windows.Navigation.NavigationService.Content*>屬性，但它可能尚未完成載入。</xref:System.Windows.Navigation.NavigationService.Content*>"
  remarks: "如果您需要時下載開始探索有關巡覽要求的相關資訊，請處理 Navigated。 這項資訊可從<xref:System.Windows.Navigation.NavigationEventArgs>物件，傳遞至 Navigated 事件處理常式，並包括:-來源 頁面。</xref:System.Windows.Navigation.NavigationEventArgs> Navigated 引發時，[來源] 頁面的最少部分[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]已剖析，並附加至目標內容的控制項樹狀結構。      -要求[!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)]。      -[導覽器] (<xref:System.Windows.Navigation.NavigationWindow>， <xref:System.Windows.Controls.Frame>)。</xref:System.Windows.Controls.Frame> </xref:System.Windows.Navigation.NavigationWindow>      -如果透過呼叫其中一個<xref:System.Windows.Navigation.NavigationService.Navigate%2A>或<xref:System.Windows.Navigation.NavigationService.Navigate%2A>.</xref:System.Windows.Navigation.NavigationService.Navigate%2A></xref:System.Windows.Navigation.NavigationService.Navigate%2A>初始化巡覽其他資料      -回應詳細資料 (使用<xref:System.Net.WebResponse>物件)。</xref:System.Net.WebResponse>       瀏覽時 [來源] 頁面無法找到或載入，在此情況下，不會引發<xref:System.Windows.Navigation.NavigationService.NavigationFailed>，就會引發。</xref:System.Windows.Navigation.NavigationService.NavigationFailed>      > [!NOTE] > 時<xref:System.Windows.Navigation.NavigationService>引發<xref:System.Windows.Navigation.NavigationService.NavigationFailed>，它也會引發<xref:System.Windows.Application.NavigationFailed?displayProperty=fullName>事件<xref:System.Windows.Application>物件。</xref:System.Windows.Application> </xref:System.Windows.Application.NavigationFailed?displayProperty=fullName> </xref:System.Windows.Navigation.NavigationService.NavigationFailed> </xref:System.Windows.Navigation.NavigationService>"
  example:
  - "The following example shows how to handle Navigated.  \n  \n [!code-cs[NavigationServiceSnippets#MainWindowNavigatedCODE](~/add/codesnippet/csharp/NavigationServiceSnippets.CSharp/MainWindow.xaml.cs#mainwindownavigatedcode)]\n [!code-vb[NavigationServiceSnippets#MainWindowNavigatedCODE](~/add/codesnippet/visualbasic/navigationservicesnippets/mainwindow.xaml.vb#mainwindownavigatedcode)]"
  syntax:
    content: public event System.Windows.Navigation.NavigatedEventHandler Navigated;
    return:
      type: System.Windows.Navigation.NavigatedEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Navigation.NavigationService.Navigating
  id: Navigating
  parent: System.Windows.Navigation.NavigationService
  langs:
  - csharp
  name: Navigating
  nameWithType: NavigationService.Navigating
  fullName: System.Windows.Navigation.NavigationService.Navigating
  type: Event
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Navigation
  summary: "要求新的瀏覽時，就會發生。"
  remarks: "瀏覽時已要求新的瀏覽，但來源之前要求內容，包括何時引發:-<xref:System.Windows.Navigation.NavigationService.Navigate%2A>稱為。</xref:System.Windows.Navigation.NavigationService.Navigate%2A>      -<xref:System.Windows.Navigation.NavigationService.GoBack%2A>或<xref:System.Windows.Navigation.NavigationService.GoForward%2A>稱為 (或從瀏覽選取某個項目[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)])。</xref:System.Windows.Navigation.NavigationService.GoForward%2A> </xref:System.Windows.Navigation.NavigationService.GoBack%2A>      -若要巡覽內容片段。       如果您要探索有關巡覽要求瀏覽啟動之前的相關資訊，您可以處理巡覽。 這項資訊可從<xref:System.Windows.Navigation.NavigatingCancelEventArgs>傳遞至 Navigating 事件處理常式的物件。</xref:System.Windows.Navigation.NavigatingCancelEventArgs>       A<xref:System.Net.WebRequest>物件瀏覽已建立且可從<xref:System.Windows.Navigation.NavigatingCancelEventArgs>參數，因為實際的要求尚未被這個時候，您可以重新設定<xref:System.Net.WebRequest>物件，如有必要。</xref:System.Net.WebRequest> </xref:System.Windows.Navigation.NavigatingCancelEventArgs> </xref:System.Net.WebRequest>       您也處理<xref:System.Windows.Navigation.NavigatingCancelEventArgs>取消瀏覽，必要時，藉由設定<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>為 true。</xref:System.ComponentModel.CancelEventArgs.Cancel%2A> </xref:System.Windows.Navigation.NavigatingCancelEventArgs> 如果您取消瀏覽時，會不引發任何其他瀏覽事件。      > [!NOTE] > 如果瀏覽器中裝載您的應用程式，您無法防止使用者在不用離開您的應用程式，藉由取消 Navigating 事件。       內容的第一段巡覽至巡覽器之後 (<xref:System.Windows.Navigation.NavigationWindow>， <xref:System.Windows.Controls.Frame>)，每一項從巡覽至別處的內容新增至巡覽記錄。</xref:System.Windows.Controls.Frame> </xref:System.Windows.Navigation.NavigationWindow> 如果您要儲存您要離開的瀏覽之內容的相關狀態資訊時，您可以將狀態新增至日誌項目，該內容設定<xref:System.Windows.Navigation.NavigatingCancelEventArgs.ContentStateToSave%2A>與<xref:System.Windows.Navigation.CustomContentState>物件。</xref:System.Windows.Navigation.CustomContentState> </xref:System.Windows.Navigation.NavigatingCancelEventArgs.ContentStateToSave%2A>      > [!NOTE] > 時<xref:System.Windows.Navigation.NavigationService>引發巡覽，它也會引發<xref:System.Windows.Application.Navigating?displayProperty=fullName>事件<xref:System.Windows.Application>物件。</xref:System.Windows.Application> </xref:System.Windows.Application.Navigating?displayProperty=fullName> </xref:System.Windows.Navigation.NavigationService>"
  example:
  - "The following example shows how to handle Navigating to detect whether a request to refresh static content has been made and, if so, to cancel the request.  \n  \n Navigating.  \n  \n [!code-cs[NavigationServiceSnippets#MainWindowNavigatingCODE](~/add/codesnippet/csharp/NavigationServiceSnippets.CSharp/MainWindow.xaml.cs#mainwindownavigatingcode)]\n [!code-vb[NavigationServiceSnippets#MainWindowNavigatingCODE](~/add/codesnippet/visualbasic/navigationservicesnippets/mainwindow.xaml.vb#mainwindownavigatingcode)]"
  syntax:
    content: public event System.Windows.Navigation.NavigatingCancelEventHandler Navigating;
    return:
      type: System.Windows.Navigation.NavigatingCancelEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Navigation.NavigationService.NavigationFailed
  id: NavigationFailed
  parent: System.Windows.Navigation.NavigationService
  langs:
  - csharp
  name: NavigationFailed
  nameWithType: NavigationService.NavigationFailed
  fullName: System.Windows.Navigation.NavigationService.NavigationFailed
  type: Event
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Navigation
  summary: "導覽至要求的內容時，發生錯誤時，就會發生。"
  remarks: "當 <xref:System.Net.WebException>或<xref:System.IO.IOException>導覽時，就會引發事件 NavigationFailed 期間擲回。</xref:System.IO.IOException> </xref:System.Net.WebException> 傳遞 NavigationFailed<xref:System.Windows.Navigation.NavigationFailedEventArgs>封裝例外狀況，並造成此例外狀況所巡覽的詳細資料的相關資訊。</xref:System.Windows.Navigation.NavigationFailedEventArgs>       當例外狀況會從失敗的瀏覽，且未經處理時，在列出的順序引發下列事件:-NavigationFailed。      -   <xref:System.Windows.Controls.Frame.NavigationFailed?displayProperty=fullName> or <xref:System.Windows.Navigation.NavigationWindow.NavigationFailed?displayProperty=fullName>.</xref:System.Windows.Navigation.NavigationWindow.NavigationFailed?displayProperty=fullName></xref:System.Windows.Controls.Frame.NavigationFailed?displayProperty=fullName>      -   <xref:System.Windows.Application.NavigationFailed?displayProperty=fullName>.</xref:System.Windows.Application.NavigationFailed?displayProperty=fullName>      -   <xref:System.Windows.Application.DispatcherUnhandledException>.</xref:System.Windows.Application.DispatcherUnhandledException>       如果導覽 (<xref:System.Windows.Navigation.NavigationWindow>， <xref:System.Windows.Controls.Frame>) 由一或多個導覽器`NavigationFailed`它們其中任何一個上就不會引發。</xref:System.Windows.Controls.Frame> </xref:System.Windows.Navigation.NavigationWindow>"
  example:
  - "The following example shows how to handle NavigationFailed.  \n  \n [!code-cs[NavigationServiceSnippets#MainWindowNavigationFailedCODE](~/add/codesnippet/csharp/NavigationServiceSnippets.CSharp/MainWindow.xaml.cs#mainwindownavigationfailedcode)]\n [!code-vb[NavigationServiceSnippets#MainWindowNavigationFailedCODE](~/add/codesnippet/visualbasic/navigationservicesnippets/mainwindow.xaml.vb#mainwindownavigationfailedcode)]"
  syntax:
    content: public event System.Windows.Navigation.NavigationFailedEventHandler NavigationFailed;
    return:
      type: System.Windows.Navigation.NavigationFailedEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Navigation.NavigationService.NavigationProgress
  id: NavigationProgress
  parent: System.Windows.Navigation.NavigationService
  langs:
  - csharp
  name: NavigationProgress
  nameWithType: NavigationService.NavigationProgress
  fullName: System.Windows.Navigation.NavigationService.NavigationProgress
  type: Event
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Navigation
  summary: "若要提供導覽進度資訊下載期間定期發生。"
  remarks: "傳遞 NavigationProgress<xref:System.Windows.Navigation.NavigationProgressEventArgs>公開下列進度資訊:-已下載的位元組到目前為止 (<xref:System.Windows.Navigation.NavigationProgressEventArgs.BytesRead%2A>)。</xref:System.Windows.Navigation.NavigationProgressEventArgs.BytesRead%2A> </xref:System.Windows.Navigation.NavigationProgressEventArgs>      -若要下載的總位元組數目 (<xref:System.Windows.Navigation.NavigationProgressEventArgs.MaxBytes%2A>)。</xref:System.Windows.Navigation.NavigationProgressEventArgs.MaxBytes%2A>       NavigationProgress 會針對每個 1024 個位元組的內容下載之後，以及引發一次的剩餘的位元組數目是否曾經低於 1024 個位元組。 基於這個理由，處理 NavigationProgress 提供實用的方式來追蹤和顯示目前下載的進度。       在某些情況下，例如當相同的內容瀏覽至時，或內容片段巡覽至目前載入的內容時不會引發 NavigationProgress (也就是值<xref:System.Windows.Navigation.NavigationService.Content%2A>屬性)。</xref:System.Windows.Navigation.NavigationService.Content%2A>       瀏覽至已編譯的 XAML 資源，可能不會引發的最後一個 NavigationProgress 事件。 這表示，在下載結束時，上次報告<xref:System.Windows.Navigation.NavigationProgressEventArgs.BytesRead%2A>值可能不等於<xref:System.Windows.Navigation.NavigationProgressEventArgs.MaxBytes%2A>值。</xref:System.Windows.Navigation.NavigationProgressEventArgs.MaxBytes%2A> </xref:System.Windows.Navigation.NavigationProgressEventArgs.BytesRead%2A> 處理<xref:System.Windows.Navigation.NavigationService.LoadCompleted>瀏覽已完成時收到通知的事件。</xref:System.Windows.Navigation.NavigationService.LoadCompleted>      > [!NOTE] > 時<xref:System.Windows.Navigation.NavigationService>引發 NavigationProgress，它也會引發<xref:System.Windows.Application.NavigationProgress?displayProperty=fullName>事件<xref:System.Windows.Application>物件。</xref:System.Windows.Application> </xref:System.Windows.Application.NavigationProgress?displayProperty=fullName> </xref:System.Windows.Navigation.NavigationService>"
  example:
  - "The following example shows how to handle NavigationProgress.  \n  \n [!code-cs[NavigationServiceSnippets#MainWindowNavigationProgressCODE](~/add/codesnippet/csharp/NavigationServiceSnippets.CSharp/MainWindow.xaml.cs#mainwindownavigationprogresscode)]\n [!code-vb[NavigationServiceSnippets#MainWindowNavigationProgressCODE](~/add/codesnippet/visualbasic/navigationservicesnippets/mainwindow.xaml.vb#mainwindownavigationprogresscode)]"
  syntax:
    content: public event System.Windows.Navigation.NavigationProgressEventHandler NavigationProgress;
    return:
      type: System.Windows.Navigation.NavigationProgressEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Navigation.NavigationService.NavigationStopped
  id: NavigationStopped
  parent: System.Windows.Navigation.NavigationService
  langs:
  - csharp
  name: NavigationStopped
  nameWithType: NavigationService.NavigationStopped
  fullName: System.Windows.Navigation.NavigationService.NavigationStopped
  type: Event
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Navigation
  summary: "發生時<xref:System.Windows.Navigation.NavigationService.StopLoading*>呼叫方法時，或新的瀏覽要求時進行目前的瀏覽時。</xref:System.Windows.Navigation.NavigationService.StopLoading*>"
  remarks: "如果您需要下載已停止時，探索有關巡覽要求的相關資訊，請處理 NavigationStopped。 這項資訊可從<xref:System.Windows.Navigation.NavigationEventArgs>物件，傳遞至 NavigationStopped 事件處理常式，並包括:-要求[!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)]。</xref:System.Windows.Navigation.NavigationEventArgs>      -[導覽器] (<xref:System.Windows.Navigation.NavigationWindow>， <xref:System.Windows.Controls.Frame>)。</xref:System.Windows.Controls.Frame> </xref:System.Windows.Navigation.NavigationWindow>      -如果透過呼叫其中一個<xref:System.Windows.Navigation.NavigationService.Navigate%2A?displayProperty=fullName>或<xref:System.Windows.Navigation.NavigationService.Navigate%2A?displayProperty=fullName>.</xref:System.Windows.Navigation.NavigationService.Navigate%2A?displayProperty=fullName></xref:System.Windows.Navigation.NavigationService.Navigate%2A?displayProperty=fullName>初始化巡覽其他資料      > [!NOTE] > 時<xref:System.Windows.Navigation.NavigationService>引發 NavigationStopped，它也會引發<xref:System.Windows.Application.NavigationStopped?displayProperty=fullName>事件<xref:System.Windows.Application>物件。</xref:System.Windows.Application> </xref:System.Windows.Application.NavigationStopped?displayProperty=fullName> </xref:System.Windows.Navigation.NavigationService>"
  example:
  - "The following example shows how to handle NavigationStopped.  \n  \n [!code-cs[NavigationServiceSnippets#MainWindowNavigationStoppedCODE](~/add/codesnippet/csharp/NavigationServiceSnippets.CSharp/MainWindow.xaml.cs#mainwindownavigationstoppedcode)]\n [!code-vb[NavigationServiceSnippets#MainWindowNavigationStoppedCODE](~/add/codesnippet/visualbasic/navigationservicesnippets/mainwindow.xaml.vb#mainwindownavigationstoppedcode)]"
  syntax:
    content: public event System.Windows.Navigation.NavigationStoppedEventHandler NavigationStopped;
    return:
      type: System.Windows.Navigation.NavigationStoppedEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Navigation.NavigationService.Refresh
  id: Refresh
  parent: System.Windows.Navigation.NavigationService
  langs:
  - csharp
  name: Refresh()
  nameWithType: NavigationService.Refresh()
  fullName: System.Windows.Navigation.NavigationService.Refresh()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Navigation
  summary: "重新載入目前的內容。"
  remarks: "如果目前的內容 (的值所指定<xref:System.Windows.Navigation.NavigationService.Source%2A>屬性) 再次，巡覽至<xref:System.Windows.Navigation.NavigationService>不會再次下載內容。</xref:System.Windows.Navigation.NavigationService> </xref:System.Windows.Navigation.NavigationService.Source%2A> 若要強制<xref:System.Windows.Navigation.NavigationService>若要重新瀏覽至內容，呼叫 重新整理。</xref:System.Windows.Navigation.NavigationService>       請注意，如果同樣地，巡覽至目前的內容是否藉由呼叫<xref:System.Windows.Navigation.NavigationService.Navigate%2A>或重新整理，新的項目不會加入至 瀏覽歷程記錄。</xref:System.Windows.Navigation.NavigationService.Navigate%2A>"
  syntax:
    content: public void Refresh ();
    parameters: []
  overload: System.Windows.Navigation.NavigationService.Refresh*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Navigation.NavigationService.RemoveBackEntry
  id: RemoveBackEntry
  parent: System.Windows.Navigation.NavigationService
  langs:
  - csharp
  name: RemoveBackEntry()
  nameWithType: NavigationService.RemoveBackEntry()
  fullName: System.Windows.Navigation.NavigationService.RemoveBackEntry()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Navigation
  summary: "移除後的歷程記錄中的最新的日誌項目。"
  remarks: "如果兩個或多個導覽器 (<xref:System.Windows.Navigation.NavigationWindow>， <xref:System.Windows.Controls.Frame>) 共用相同的瀏覽歷程記錄、 一個導覽器可以使用 RemoveBackEntry 擷取發生在另一個的導覽巡覽向後巡覽歷程記錄項目。</xref:System.Windows.Controls.Frame> </xref:System.Windows.Navigation.NavigationWindow>"
  syntax:
    content: public System.Windows.Navigation.JournalEntry RemoveBackEntry ();
    parameters: []
    return:
      type: System.Windows.Navigation.JournalEntry
      description: "最近<xref href=&quot;System.Windows.Navigation.JournalEntry&quot;></xref>中向後巡覽記錄，如果有的話。"
  overload: System.Windows.Navigation.NavigationService.RemoveBackEntry*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Navigation.NavigationService.Source
  id: Source
  parent: System.Windows.Navigation.NavigationService
  langs:
  - csharp
  name: Source
  nameWithType: NavigationService.Source
  fullName: System.Windows.Navigation.NavigationService.Source
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Navigation
  summary: "取得或設定[!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)]的目前內容中，或[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]目前所巡覽的新內容。"
  remarks: "如果您將此屬性設定為不同[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]於目前所顯示，[導覽器] (<xref:System.Windows.Navigation.NavigationWindow>， <xref:System.Windows.Controls.Frame>) 巡覽至指定[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]。</xref:System.Windows.Controls.Frame> </xref:System.Windows.Navigation.NavigationWindow>       來源設定為載入來源內容[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]，瀏覽至時，除非則會取消巡覽。       可以設定來源片段只使用[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]，而且可以設定為`null`。"
  syntax:
    content: public Uri Source { get; set; }
    return:
      type: System.Uri
      description: "A<xref:System.Uri>包含[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]目前的內容，或目前所巡覽的內容。</xref:System.Uri>"
  overload: System.Windows.Navigation.NavigationService.Source*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Navigation.NavigationService.StopLoading
  id: StopLoading
  parent: System.Windows.Navigation.NavigationService
  langs:
  - csharp
  name: StopLoading()
  nameWithType: NavigationService.StopLoading()
  fullName: System.Windows.Navigation.NavigationService.StopLoading()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Navigation
  summary: "會停止進一步下載目前的瀏覽要求的內容。"
  remarks: "可以呼叫 StopLoading 儘速<xref:System.Windows.Navigation.NavigationService.Navigate%2A>傳回，並停止正在執行中子框架的導覽。</xref:System.Windows.Navigation.NavigationService.Navigate%2A>       (<xref:System.Windows.Controls.Frame>).</xref:System.Windows.Controls.Frame>       呼叫 StopLoading 方法引發<xref:System.Windows.Navigation.NavigationService.NavigationStopped>事件。</xref:System.Windows.Navigation.NavigationService.NavigationStopped>      > [!NOTE] > StopLoading 必須初始化巡覽在相同執行緒上呼叫。"
  example:
  - "The following example demonstrates how to stop loading.  \n  \n [!code-cs[NavigationServiceSnippets#MainWindowStopLoadingCODE](~/add/codesnippet/csharp/NavigationServiceSnippets.CSharp/MainWindow.xaml.cs#mainwindowstoploadingcode)]\n [!code-vb[NavigationServiceSnippets#MainWindowStopLoadingCODE](~/add/codesnippet/visualbasic/navigationservicesnippets/mainwindow.xaml.vb#mainwindowstoploadingcode)]"
  syntax:
    content: public void StopLoading ();
    parameters: []
  overload: System.Windows.Navigation.NavigationService.StopLoading*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Windows.Navigation.NavigationService.AddBackEntry(System.Windows.Navigation.CustomContentState)
  parent: System.Windows.Navigation.NavigationService
  isExternal: false
  name: AddBackEntry(CustomContentState)
  nameWithType: NavigationService.AddBackEntry(CustomContentState)
  fullName: System.Windows.Navigation.NavigationService.AddBackEntry(CustomContentState)
- uid: System.Windows.Navigation.CustomContentState
  parent: System.Windows.Navigation
  isExternal: false
  name: CustomContentState
  nameWithType: CustomContentState
  fullName: System.Windows.Navigation.CustomContentState
- uid: System.Windows.Navigation.NavigationService.CanGoBack
  parent: System.Windows.Navigation.NavigationService
  isExternal: false
  name: CanGoBack
  nameWithType: NavigationService.CanGoBack
  fullName: System.Windows.Navigation.NavigationService.CanGoBack
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Navigation.NavigationService.CanGoForward
  parent: System.Windows.Navigation.NavigationService
  isExternal: false
  name: CanGoForward
  nameWithType: NavigationService.CanGoForward
  fullName: System.Windows.Navigation.NavigationService.CanGoForward
- uid: System.Windows.Navigation.NavigationService.Content
  parent: System.Windows.Navigation.NavigationService
  isExternal: false
  name: Content
  nameWithType: NavigationService.Content
  fullName: System.Windows.Navigation.NavigationService.Content
- uid: System.Windows.Navigation.NavigationService.CurrentSource
  parent: System.Windows.Navigation.NavigationService
  isExternal: false
  name: CurrentSource
  nameWithType: NavigationService.CurrentSource
  fullName: System.Windows.Navigation.NavigationService.CurrentSource
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Windows.Navigation.NavigationService.FragmentNavigation
  parent: System.Windows.Navigation.NavigationService
  isExternal: false
  name: FragmentNavigation
  nameWithType: NavigationService.FragmentNavigation
  fullName: System.Windows.Navigation.NavigationService.FragmentNavigation
- uid: System.Windows.Navigation.FragmentNavigationEventHandler
  parent: System.Windows.Navigation
  isExternal: false
  name: FragmentNavigationEventHandler
  nameWithType: FragmentNavigationEventHandler
  fullName: System.Windows.Navigation.FragmentNavigationEventHandler
- uid: System.Windows.Navigation.NavigationService.GetNavigationService(System.Windows.DependencyObject)
  parent: System.Windows.Navigation.NavigationService
  isExternal: false
  name: GetNavigationService(DependencyObject)
  nameWithType: NavigationService.GetNavigationService(DependencyObject)
  fullName: System.Windows.Navigation.NavigationService.GetNavigationService(DependencyObject)
- uid: System.Windows.Navigation.NavigationService
  parent: System.Windows.Navigation
  isExternal: false
  name: NavigationService
  nameWithType: NavigationService
  fullName: System.Windows.Navigation.NavigationService
- uid: System.Windows.DependencyObject
  parent: System.Windows
  isExternal: false
  name: DependencyObject
  nameWithType: DependencyObject
  fullName: System.Windows.DependencyObject
- uid: System.Windows.Navigation.NavigationService.GoBack
  parent: System.Windows.Navigation.NavigationService
  isExternal: false
  name: GoBack()
  nameWithType: NavigationService.GoBack()
  fullName: System.Windows.Navigation.NavigationService.GoBack()
- uid: System.Windows.Navigation.NavigationService.GoForward
  parent: System.Windows.Navigation.NavigationService
  isExternal: false
  name: GoForward()
  nameWithType: NavigationService.GoForward()
  fullName: System.Windows.Navigation.NavigationService.GoForward()
- uid: System.Windows.Navigation.NavigationService.LoadCompleted
  parent: System.Windows.Navigation.NavigationService
  isExternal: false
  name: LoadCompleted
  nameWithType: NavigationService.LoadCompleted
  fullName: System.Windows.Navigation.NavigationService.LoadCompleted
- uid: System.Windows.Navigation.LoadCompletedEventHandler
  parent: System.Windows.Navigation
  isExternal: false
  name: LoadCompletedEventHandler
  nameWithType: LoadCompletedEventHandler
  fullName: System.Windows.Navigation.LoadCompletedEventHandler
- uid: System.Windows.Navigation.NavigationService.Navigate(System.Object)
  parent: System.Windows.Navigation.NavigationService
  isExternal: false
  name: Navigate(Object)
  nameWithType: NavigationService.Navigate(Object)
  fullName: System.Windows.Navigation.NavigationService.Navigate(Object)
- uid: System.Windows.Navigation.NavigationService.Navigate(System.Uri)
  parent: System.Windows.Navigation.NavigationService
  isExternal: false
  name: Navigate(Uri)
  nameWithType: NavigationService.Navigate(Uri)
  fullName: System.Windows.Navigation.NavigationService.Navigate(Uri)
- uid: System.Windows.Navigation.NavigationService.Navigate(System.Object,System.Object)
  parent: System.Windows.Navigation.NavigationService
  isExternal: false
  name: Navigate(Object,Object)
  nameWithType: NavigationService.Navigate(Object,Object)
  fullName: System.Windows.Navigation.NavigationService.Navigate(Object,Object)
- uid: System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object)
  parent: System.Windows.Navigation.NavigationService
  isExternal: false
  name: Navigate(Uri,Object)
  nameWithType: NavigationService.Navigate(Uri,Object)
  fullName: System.Windows.Navigation.NavigationService.Navigate(Uri,Object)
- uid: System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object,System.Boolean)
  parent: System.Windows.Navigation.NavigationService
  isExternal: false
  name: Navigate(Uri,Object,Boolean)
  nameWithType: NavigationService.Navigate(Uri,Object,Boolean)
  fullName: System.Windows.Navigation.NavigationService.Navigate(Uri,Object,Boolean)
- uid: System.Windows.Navigation.NavigationService.Navigated
  parent: System.Windows.Navigation.NavigationService
  isExternal: false
  name: Navigated
  nameWithType: NavigationService.Navigated
  fullName: System.Windows.Navigation.NavigationService.Navigated
- uid: System.Windows.Navigation.NavigatedEventHandler
  parent: System.Windows.Navigation
  isExternal: false
  name: NavigatedEventHandler
  nameWithType: NavigatedEventHandler
  fullName: System.Windows.Navigation.NavigatedEventHandler
- uid: System.Windows.Navigation.NavigationService.Navigating
  parent: System.Windows.Navigation.NavigationService
  isExternal: false
  name: Navigating
  nameWithType: NavigationService.Navigating
  fullName: System.Windows.Navigation.NavigationService.Navigating
- uid: System.Windows.Navigation.NavigatingCancelEventHandler
  parent: System.Windows.Navigation
  isExternal: false
  name: NavigatingCancelEventHandler
  nameWithType: NavigatingCancelEventHandler
  fullName: System.Windows.Navigation.NavigatingCancelEventHandler
- uid: System.Windows.Navigation.NavigationService.NavigationFailed
  parent: System.Windows.Navigation.NavigationService
  isExternal: false
  name: NavigationFailed
  nameWithType: NavigationService.NavigationFailed
  fullName: System.Windows.Navigation.NavigationService.NavigationFailed
- uid: System.Windows.Navigation.NavigationFailedEventHandler
  parent: System.Windows.Navigation
  isExternal: false
  name: NavigationFailedEventHandler
  nameWithType: NavigationFailedEventHandler
  fullName: System.Windows.Navigation.NavigationFailedEventHandler
- uid: System.Windows.Navigation.NavigationService.NavigationProgress
  parent: System.Windows.Navigation.NavigationService
  isExternal: false
  name: NavigationProgress
  nameWithType: NavigationService.NavigationProgress
  fullName: System.Windows.Navigation.NavigationService.NavigationProgress
- uid: System.Windows.Navigation.NavigationProgressEventHandler
  parent: System.Windows.Navigation
  isExternal: false
  name: NavigationProgressEventHandler
  nameWithType: NavigationProgressEventHandler
  fullName: System.Windows.Navigation.NavigationProgressEventHandler
- uid: System.Windows.Navigation.NavigationService.NavigationStopped
  parent: System.Windows.Navigation.NavigationService
  isExternal: false
  name: NavigationStopped
  nameWithType: NavigationService.NavigationStopped
  fullName: System.Windows.Navigation.NavigationService.NavigationStopped
- uid: System.Windows.Navigation.NavigationStoppedEventHandler
  parent: System.Windows.Navigation
  isExternal: false
  name: NavigationStoppedEventHandler
  nameWithType: NavigationStoppedEventHandler
  fullName: System.Windows.Navigation.NavigationStoppedEventHandler
- uid: System.Windows.Navigation.NavigationService.Refresh
  parent: System.Windows.Navigation.NavigationService
  isExternal: false
  name: Refresh()
  nameWithType: NavigationService.Refresh()
  fullName: System.Windows.Navigation.NavigationService.Refresh()
- uid: System.Windows.Navigation.NavigationService.RemoveBackEntry
  parent: System.Windows.Navigation.NavigationService
  isExternal: false
  name: RemoveBackEntry()
  nameWithType: NavigationService.RemoveBackEntry()
  fullName: System.Windows.Navigation.NavigationService.RemoveBackEntry()
- uid: System.Windows.Navigation.JournalEntry
  parent: System.Windows.Navigation
  isExternal: false
  name: JournalEntry
  nameWithType: JournalEntry
  fullName: System.Windows.Navigation.JournalEntry
- uid: System.Windows.Navigation.NavigationService.Source
  parent: System.Windows.Navigation.NavigationService
  isExternal: false
  name: Source
  nameWithType: NavigationService.Source
  fullName: System.Windows.Navigation.NavigationService.Source
- uid: System.Windows.Navigation.NavigationService.StopLoading
  parent: System.Windows.Navigation.NavigationService
  isExternal: false
  name: StopLoading()
  nameWithType: NavigationService.StopLoading()
  fullName: System.Windows.Navigation.NavigationService.StopLoading()
- uid: System.Windows.Navigation.NavigationService.AddBackEntry*
  parent: System.Windows.Navigation.NavigationService
  isExternal: false
  name: AddBackEntry
  nameWithType: NavigationService.AddBackEntry
- uid: System.Windows.Navigation.NavigationService.CanGoBack*
  parent: System.Windows.Navigation.NavigationService
  isExternal: false
  name: CanGoBack
  nameWithType: NavigationService.CanGoBack
- uid: System.Windows.Navigation.NavigationService.CanGoForward*
  parent: System.Windows.Navigation.NavigationService
  isExternal: false
  name: CanGoForward
  nameWithType: NavigationService.CanGoForward
- uid: System.Windows.Navigation.NavigationService.Content*
  parent: System.Windows.Navigation.NavigationService
  isExternal: false
  name: Content
  nameWithType: NavigationService.Content
- uid: System.Windows.Navigation.NavigationService.CurrentSource*
  parent: System.Windows.Navigation.NavigationService
  isExternal: false
  name: CurrentSource
  nameWithType: NavigationService.CurrentSource
- uid: System.Windows.Navigation.NavigationService.GetNavigationService*
  parent: System.Windows.Navigation.NavigationService
  isExternal: false
  name: GetNavigationService
  nameWithType: NavigationService.GetNavigationService
- uid: System.Windows.Navigation.NavigationService.GoBack*
  parent: System.Windows.Navigation.NavigationService
  isExternal: false
  name: GoBack
  nameWithType: NavigationService.GoBack
- uid: System.Windows.Navigation.NavigationService.GoForward*
  parent: System.Windows.Navigation.NavigationService
  isExternal: false
  name: GoForward
  nameWithType: NavigationService.GoForward
- uid: System.Windows.Navigation.NavigationService.Navigate*
  parent: System.Windows.Navigation.NavigationService
  isExternal: false
  name: Navigate
  nameWithType: NavigationService.Navigate
- uid: System.Windows.Navigation.NavigationService.Refresh*
  parent: System.Windows.Navigation.NavigationService
  isExternal: false
  name: Refresh
  nameWithType: NavigationService.Refresh
- uid: System.Windows.Navigation.NavigationService.RemoveBackEntry*
  parent: System.Windows.Navigation.NavigationService
  isExternal: false
  name: RemoveBackEntry
  nameWithType: NavigationService.RemoveBackEntry
- uid: System.Windows.Navigation.NavigationService.Source*
  parent: System.Windows.Navigation.NavigationService
  isExternal: false
  name: Source
  nameWithType: NavigationService.Source
- uid: System.Windows.Navigation.NavigationService.StopLoading*
  parent: System.Windows.Navigation.NavigationService
  isExternal: false
  name: StopLoading
  nameWithType: NavigationService.StopLoading
