### YamlMime:ManagedReference
items:
- uid: System.IO.Compression.ZipArchive
  id: ZipArchive
  children:
  - System.IO.Compression.ZipArchive.#ctor(System.IO.Stream)
  - System.IO.Compression.ZipArchive.#ctor(System.IO.Stream,System.IO.Compression.ZipArchiveMode)
  - System.IO.Compression.ZipArchive.#ctor(System.IO.Stream,System.IO.Compression.ZipArchiveMode,System.Boolean)
  - System.IO.Compression.ZipArchive.#ctor(System.IO.Stream,System.IO.Compression.ZipArchiveMode,System.Boolean,System.Text.Encoding)
  - System.IO.Compression.ZipArchive.CreateEntry(System.String)
  - System.IO.Compression.ZipArchive.CreateEntry(System.String,System.IO.Compression.CompressionLevel)
  - System.IO.Compression.ZipArchive.Dispose
  - System.IO.Compression.ZipArchive.Dispose(System.Boolean)
  - System.IO.Compression.ZipArchive.Entries
  - System.IO.Compression.ZipArchive.GetEntry(System.String)
  - System.IO.Compression.ZipArchive.Mode
  langs:
  - csharp
  name: ZipArchive
  nameWithType: ZipArchive
  fullName: System.IO.Compression.ZipArchive
  type: Class
  summary: "代表 zip 封存格式的壓縮檔案的封裝。"
  remarks: "The methods for manipulating zip archives and their file entries are spread across three classes: <xref:System.IO.Compression.ZipFile>, ZipArchive, and <xref:System.IO.Compression.ZipArchiveEntry>.  \n  \n|To|Use|  \n|--------|---------|  \n|Create a zip archive from a directory|<xref:System.IO.Compression.ZipFile.CreateFromDirectory%2A?displayProperty=fullName>|  \n|Extract the contents of a zip archive to a directory|<xref:System.IO.Compression.ZipFile.ExtractToDirectory%2A?displayProperty=fullName>|  \n|Add new files to an existing zip archive|<xref:System.IO.Compression.ZipArchive.CreateEntry%2A?displayProperty=fullName>|  \n|Retrieve a file from a zip archive|<xref:System.IO.Compression.ZipArchive.GetEntry%2A?displayProperty=fullName>|  \n|Retrieve all the files from a zip archive|<xref:System.IO.Compression.ZipArchive.Entries%2A?displayProperty=fullName>|  \n|Open a stream to a single file contained in a zip archive|<xref:System.IO.Compression.ZipArchiveEntry.Open%2A?displayProperty=fullName>|  \n|Delete a file from a zip archive|<xref:System.IO.Compression.ZipArchiveEntry.Delete%2A?displayProperty=fullName>|  \n  \n When you create a new entry, the file is compressed and added to the zip package. The <xref:System.IO.Compression.ZipArchive.CreateEntry%2A> method enables you to specify a directory hierarchy when adding the entry. You include the relative path of the new entry within the zip package. For example, creating a new entry with a relative path of `AddedFolder\\NewFile.txt` creates a compressed text file in a directory named AddedFolder.  \n  \n If you reference the `System.IO.Compression.FileSystem` assembly in your project, you can access three extension methods (from the <xref:System.IO.Compression.ZipFileExtensions> class) for the ZipArchive class: <xref:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile%2A>, <xref:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile%2A>, and <xref:System.IO.Compression.ZipFileExtensions.ExtractToDirectory%2A>. These extension methods enable you to compress and decompress the contents of the entry to a file. The `System.IO.Compression.FileSystem` assembly is not available for [!INCLUDE[win8_appname_long](~/add/includes/win8-appname-long-md.md)] apps. In [!INCLUDE[win8_appname_long](~/add/includes/win8-appname-long-md.md)] apps, you can compress and decompress files by using the <xref:System.IO.Compression.DeflateStream> or <xref:System.IO.Compression.GZipStream> class, or you can use the [!INCLUDE[wrt](~/add/includes/wrt-md.md)] types [Compressor](http://go.microsoft.com/fwlink/p/?LinkID=246357) and [Decompressor](http://go.microsoft.com/fwlink/p/?LinkID=246358)."
  example:
  - "The first example shows how to create a new entry and write to it by using a stream.  \n  \n [!code-cs[System.IO.Compression.ZipArchiveMode#1](~/add/codesnippet/csharp/t-system.io.compression._1_1.cs)]\n [!code-vb[System.IO.Compression.ZipArchiveMode#1](~/add/codesnippet/visualbasic/t-system.io.compression._1_1.vb)]  \n  \n The following example shows how to open a zip archive and iterate through the collection of entries.  \n  \n [!code-cs[System.IO.Compression.ZipArchive#1](~/add/codesnippet/csharp/t-system.io.compression._1_2.cs)]\n [!code-vb[System.IO.Compression.ZipArchive#1](~/add/codesnippet/visualbasic/t-system.io.compression._1_2.vb)]  \n  \n The third example shows how to use extension methods to create a new entry in a zip archive from an existing file and extract the archive contents. You must reference the `System.IO.Compression.FileSystem` assembly to execute the code.  \n  \n [!code-cs[System.IO.Compression.ZipArchive#3](~/add/codesnippet/csharp/t-system.io.compression._1_3.cs)]\n [!code-vb[System.IO.Compression.ZipArchive#3](~/add/codesnippet/visualbasic/t-system.io.compression._1_3.vb)]"
  syntax:
    content: 'public class ZipArchive : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.IO.Compression.ZipArchive.#ctor(System.IO.Stream)
  id: '#ctor(System.IO.Stream)'
  parent: System.IO.Compression.ZipArchive
  langs:
  - csharp
  name: ZipArchive(Stream)
  nameWithType: ZipArchive.ZipArchive(Stream)
  fullName: System.IO.Compression.ZipArchive.ZipArchive(Stream)
  type: Constructor
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: "初始化的新執行個體<xref href=&quot;System.IO.Compression.ZipArchive&quot;></xref>從指定的資料流的類別。"
  syntax:
    content: public ZipArchive (System.IO.Stream stream);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "包含要讀取之封存的資料流。"
  overload: System.IO.Compression.ZipArchive.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "資料流已關閉，或不支援讀取。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.InvalidDataException
    commentId: T:System.IO.InvalidDataException
    description: "資料流的內容不在 zip 封存格式中。"
  platform:
  - net462
- uid: System.IO.Compression.ZipArchive.#ctor(System.IO.Stream,System.IO.Compression.ZipArchiveMode)
  id: '#ctor(System.IO.Stream,System.IO.Compression.ZipArchiveMode)'
  parent: System.IO.Compression.ZipArchive
  langs:
  - csharp
  name: ZipArchive(Stream,ZipArchiveMode)
  nameWithType: ZipArchive.ZipArchive(Stream,ZipArchiveMode)
  fullName: System.IO.Compression.ZipArchive.ZipArchive(Stream,ZipArchiveMode)
  type: Constructor
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: "初始化的新執行個體<xref href=&quot;System.IO.Compression.ZipArchive&quot;></xref>類別從指定的資料流，並使用指定的模式。"
  remarks: "如果`mode`參數設定為<xref:System.IO.Compression.ZipArchiveMode>，資料流必須支援讀取。</xref:System.IO.Compression.ZipArchiveMode> 如果`mode`參數設定為<xref:System.IO.Compression.ZipArchiveMode>，資料流必須支援寫入。</xref:System.IO.Compression.ZipArchiveMode> 如果`mode`參數設定為<xref:System.IO.Compression.ZipArchiveMode>，資料流必須支援讀取、 寫入和搜尋。</xref:System.IO.Compression.ZipArchiveMode>"
  syntax:
    content: public ZipArchive (System.IO.Stream stream, System.IO.Compression.ZipArchiveMode mode);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "輸入或輸出資料流。"
    - id: mode
      type: System.IO.Compression.ZipArchiveMode
      description: "其中一個列舉值，指出是否使用 zip 封存讀取、 建立或更新項目。"
  overload: System.IO.Compression.ZipArchive.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "資料流已關閉，或資料流的功能不會符合模式。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>mode</code>是無效的值。"
  - type: System.IO.InvalidDataException
    commentId: T:System.IO.InvalidDataException
    description: "無法解譯的 zip 封存的資料流內容。       - <code> mode </code>是<xref href=&quot;System.IO.Compression.ZipArchiveMode&quot;></xref>和封存中遺漏或已損毀且無法讀取的項目。       - <code> mode </code>是<xref href=&quot;System.IO.Compression.ZipArchiveMode&quot;></xref>和項目太大而無法放入記憶體。"
  platform:
  - net462
- uid: System.IO.Compression.ZipArchive.#ctor(System.IO.Stream,System.IO.Compression.ZipArchiveMode,System.Boolean)
  id: '#ctor(System.IO.Stream,System.IO.Compression.ZipArchiveMode,System.Boolean)'
  parent: System.IO.Compression.ZipArchive
  langs:
  - csharp
  name: ZipArchive(Stream,ZipArchiveMode,Boolean)
  nameWithType: ZipArchive.ZipArchive(Stream,ZipArchiveMode,Boolean)
  fullName: System.IO.Compression.ZipArchive.ZipArchive(Stream,ZipArchiveMode,Boolean)
  type: Constructor
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: "初始化的新執行個體<xref href=&quot;System.IO.Compression.ZipArchive&quot;></xref>針對指定的模式，並選擇性地將保持在開啟資料流的指定資料流的類別。"
  remarks: "如果`mode`參數設定為<xref:System.IO.Compression.ZipArchiveMode>，資料流必須支援讀取。</xref:System.IO.Compression.ZipArchiveMode> 如果`mode`參數設定為<xref:System.IO.Compression.ZipArchiveMode>，資料流必須支援寫入。</xref:System.IO.Compression.ZipArchiveMode> 如果`mode`參數設定為<xref:System.IO.Compression.ZipArchiveMode>，資料流必須支援讀取、 寫入和搜尋。</xref:System.IO.Compression.ZipArchiveMode>"
  syntax:
    content: public ZipArchive (System.IO.Stream stream, System.IO.Compression.ZipArchiveMode mode, bool leaveOpen);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "輸入或輸出資料流。"
    - id: mode
      type: System.IO.Compression.ZipArchiveMode
      description: "其中一個列舉值，指出是否使用 zip 封存讀取、 建立或更新項目。"
    - id: leaveOpen
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>將資料流保持開啟之後<xref href=&quot;System.IO.Compression.ZipArchive&quot;></xref>物件已處置，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.IO.Compression.ZipArchive.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "資料流已關閉，或資料流的功能不會符合模式。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>mode</code>是無效的值。"
  - type: System.IO.InvalidDataException
    commentId: T:System.IO.InvalidDataException
    description: "無法解譯的 zip 封存的資料流內容。       - <code> mode </code>是<xref href=&quot;System.IO.Compression.ZipArchiveMode&quot;></xref>和封存中遺漏或已損毀且無法讀取的項目。       - <code> mode </code>是<xref href=&quot;System.IO.Compression.ZipArchiveMode&quot;></xref>和項目太大而無法放入記憶體。"
  platform:
  - net462
- uid: System.IO.Compression.ZipArchive.#ctor(System.IO.Stream,System.IO.Compression.ZipArchiveMode,System.Boolean,System.Text.Encoding)
  id: '#ctor(System.IO.Stream,System.IO.Compression.ZipArchiveMode,System.Boolean,System.Text.Encoding)'
  parent: System.IO.Compression.ZipArchive
  langs:
  - csharp
  name: ZipArchive(Stream,ZipArchiveMode,Boolean,Encoding)
  nameWithType: ZipArchive.ZipArchive(Stream,ZipArchiveMode,Boolean,Encoding)
  fullName: System.IO.Compression.ZipArchive.ZipArchive(Stream,ZipArchiveMode,Boolean,Encoding)
  type: Constructor
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: "初始化的新執行個體<xref href=&quot;System.IO.Compression.ZipArchive&quot;></xref>上指定的模式中，指定的資料流類別會使用項目名稱指定的編碼方式，並選擇性地讓資料流保持開啟。"
  remarks: "如果`mode`參數設定為<xref:System.IO.Compression.ZipArchiveMode>，資料流必須支援讀取。</xref:System.IO.Compression.ZipArchiveMode> 如果`mode`參數設定為<xref:System.IO.Compression.ZipArchiveMode>，資料流必須支援寫入。</xref:System.IO.Compression.ZipArchiveMode> 如果`mode`參數設定為<xref:System.IO.Compression.ZipArchiveMode>，資料流必須支援讀取、 寫入和搜尋。</xref:System.IO.Compression.ZipArchiveMode>       當您開啟 zip 封存檔案進行讀取和`entryNameEncoding`設`null`，項目名稱解碼根據下列規則:-時未設定 （以本機檔案標頭的一般用途的位元旗標） 編碼的旗標，目前的系統預設字碼頁的語言用來解碼的項目名稱。      -當設定的語言編碼旗標，來解碼的項目名稱使用 utf-8。       當您開啟 zip 封存檔案進行讀取和`entryNameEncoding`以外設定為值`null`，項目名稱解碼根據下列規則:-的語言編碼旗標未設定時，指定`entryNameEncoding`用來解碼的項目名稱。      -當設定的語言編碼旗標，來解碼的項目名稱使用 utf-8。       當您撰寫封存檔案和`entryNameEncoding`設`null`，項目名稱會編碼根據下列規則:-項目名稱中包含外部 ASCII 字元範圍的語言設定編碼方式的旗標，並使用 utf-8 編碼項目名稱。      -若為項目只能包含 ASCII 字元的名稱，未設定的語言編碼旗標，並使用目前的系統預設字碼頁來進行編碼的項目名稱。       當您撰寫封存檔案和`entryNameEncoding`以外設定為值`null`，指定`entryNameEncoding`用來編碼為位元組的項目名稱。 只有當指定的編碼方式為 utf-8 編碼時設定的語言編碼旗標 （以本機檔案標頭的一般用途的位元旗標）。"
  syntax:
    content: public ZipArchive (System.IO.Stream stream, System.IO.Compression.ZipArchiveMode mode, bool leaveOpen, System.Text.Encoding entryNameEncoding);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "輸入或輸出資料流。"
    - id: mode
      type: System.IO.Compression.ZipArchiveMode
      description: "其中一個列舉值，指出是否使用 zip 封存讀取、 建立或更新項目。"
    - id: leaveOpen
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>將資料流保持開啟之後<xref href=&quot;System.IO.Compression.ZipArchive&quot;></xref>物件已處置，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    - id: entryNameEncoding
      type: System.Text.Encoding
      description: "讀取時所使用的編碼方式，或寫入此封存中的項目名稱。 編碼方式，是為了互通性與 zip 封存工具和程式庫不支援 utf-8 編碼的項目名稱時，才指定這個參數的值。"
  overload: System.IO.Compression.ZipArchive.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "資料流已關閉，或資料流的功能不會符合模式。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>mode</code>是無效的值。"
  - type: System.IO.InvalidDataException
    commentId: T:System.IO.InvalidDataException
    description: "無法解譯的 zip 封存的資料流內容。       - <code> mode </code>是<xref href=&quot;System.IO.Compression.ZipArchiveMode&quot;></xref>和封存中遺漏或已損毀且無法讀取的項目。       - <code> mode </code>是<xref href=&quot;System.IO.Compression.ZipArchiveMode&quot;></xref>和項目太大而無法放入記憶體。"
  platform:
  - net462
- uid: System.IO.Compression.ZipArchive.CreateEntry(System.String)
  id: CreateEntry(System.String)
  parent: System.IO.Compression.ZipArchive
  langs:
  - csharp
  name: CreateEntry(String)
  nameWithType: ZipArchive.CreateEntry(String)
  fullName: System.IO.Compression.ZipArchive.CreateEntry(String)
  type: Method
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: "建立 zip 封存中具有指定的路徑和項目名稱的空項目。"
  remarks: "`entryName`字串應該會反映您想要建立 zip 封存中的項目相對路徑。 沒有任何限制，在您提供的字串。 不過，如果它不格式化為相對路徑，會建立項目，擷取 zip 封存的內容時，可能會發生例外狀況。 如果封存中已經存在具有指定的路徑和名稱的項目，第二個項目會建立具有相同的路徑和名稱。       值<xref:System.IO.Compression.ZipArchiveEntry.LastWriteTime%2A>新項目的屬性設定為目前的時間。</xref:System.IO.Compression.ZipArchiveEntry.LastWriteTime%2A> 使用預設的壓縮層級基礎的壓縮演算法壓縮項目。 如果您想要指定不同的壓縮層級，使用<xref:System.IO.Compression.ZipArchive.CreateEntry%2A>方法。</xref:System.IO.Compression.ZipArchive.CreateEntry%2A>"
  example:
  - "The following example shows how to create an entry and write to it by using a stream.  \n  \n [!code-cs[System.IO.Compression.ZipArchiveMode#1](~/add/codesnippet/csharp/m-system.io.compression._1_1.cs)]\n [!code-vb[System.IO.Compression.ZipArchiveMode#1](~/add/codesnippet/visualbasic/m-system.io.compression._1_1.vb)]"
  syntax:
    content: public System.IO.Compression.ZipArchiveEntry CreateEntry (string entryName);
    parameters:
    - id: entryName
      type: System.String
      description: "指定要建立的項目名稱的路徑，相對於封存的根目錄。"
    return:
      type: System.IO.Compression.ZipArchiveEntry
      description: "Zip 封存中的空項目。"
  overload: System.IO.Compression.ZipArchive.CreateEntry*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>entryName</code>is <xref:System.String>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>entryName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Zip 封存中不支援寫入。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Zip 封存已經過處置。"
  platform:
  - net462
- uid: System.IO.Compression.ZipArchive.CreateEntry(System.String,System.IO.Compression.CompressionLevel)
  id: CreateEntry(System.String,System.IO.Compression.CompressionLevel)
  parent: System.IO.Compression.ZipArchive
  langs:
  - csharp
  name: CreateEntry(String,CompressionLevel)
  nameWithType: ZipArchive.CreateEntry(String,CompressionLevel)
  fullName: System.IO.Compression.ZipArchive.CreateEntry(String,CompressionLevel)
  type: Method
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: "建立 zip 封存中所指定的項目名稱和壓縮層級的空項目。"
  remarks: "`entryName`字串應該會反映您想要建立 zip 封存中的項目相對路徑。 沒有任何限制，在您提供的字串。 不過，如果它不格式化為相對路徑，會建立項目，擷取 zip 封存的內容時，可能會發生例外狀況。 如果封存中已經存在具有指定名稱的項目，第二個項目會建立具有相同名稱。       值<xref:System.IO.Compression.ZipArchiveEntry.LastWriteTime%2A>新項目的屬性設定為目前的時間。</xref:System.IO.Compression.ZipArchiveEntry.LastWriteTime%2A> 設定`compressionLevel`參數<xref:System.IO.Compression.CompressionLevel>如果您想要壓縮檔案盡可能。</xref:System.IO.Compression.CompressionLevel> 設定`compressionLevel`參數<xref:System.IO.Compression.CompressionLevel>唯一，如果您擔心，壓縮作業將不會完成速度不夠快您的案例。</xref:System.IO.Compression.CompressionLevel>"
  example:
  - "The following example shows how to create an entry with the optimal compression level. It also writes to the new entry by using a stream.  \n  \n [!code-cs[System.IO.Compression.ZipArchiveMode#2](~/add/codesnippet/csharp/356fbc42-2094-4738-b1de-_1.cs)]\n [!code-vb[System.IO.Compression.ZipArchiveMode#2](~/add/codesnippet/visualbasic/356fbc42-2094-4738-b1de-_1.vb)]"
  syntax:
    content: public System.IO.Compression.ZipArchiveEntry CreateEntry (string entryName, System.IO.Compression.CompressionLevel compressionLevel);
    parameters:
    - id: entryName
      type: System.String
      description: "指定要建立的項目名稱的路徑，相對於封存的根目錄。"
    - id: compressionLevel
      type: System.IO.Compression.CompressionLevel
      description: "其中一個列舉值，指出是否要強調速度或壓縮的效益時建立項目。"
    return:
      type: System.IO.Compression.ZipArchiveEntry
      description: "Zip 封存中的空項目。"
  overload: System.IO.Compression.ZipArchive.CreateEntry*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>entryName</code>is <xref:System.String>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>entryName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Zip 封存中不支援寫入。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Zip 封存已經過處置。"
  platform:
  - net462
- uid: System.IO.Compression.ZipArchive.Dispose
  id: Dispose
  parent: System.IO.Compression.ZipArchive
  langs:
  - csharp
  name: Dispose()
  nameWithType: ZipArchive.Dispose()
  fullName: System.IO.Compression.ZipArchive.Dispose()
  type: Method
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: "目前的執行個體所使用的資源釋出<xref href=&quot;System.IO.Compression.ZipArchive&quot;></xref>類別。"
  remarks: "這個方法完成寫入封存，所使用的資源全部釋出<xref:System.IO.Compression.ZipArchive>物件。</xref:System.IO.Compression.ZipArchive> 除非您使用建構的物件<xref:System.IO.Compression.ZipArchive.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.ZipArchiveMode%2CSystem.Boolean%29>建構函式多載，然後設定其`leaveOpen`參數`true`，所有基礎資料流已關閉且不再可供後續的寫入作業。</xref:System.IO.Compression.ZipArchive.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.ZipArchiveMode%2CSystem.Boolean%29>       當您完成使用此執行個體<xref:System.IO.Compression.ZipArchive>，呼叫 Dispose 以釋放此執行個體所使用的所有資源。</xref:System.IO.Compression.ZipArchive> 您應該刪除進一步參考<xref:System.IO.Compression.ZipArchive>執行個體，讓記憶體回收行程可以回收執行個體，而不是讓它維持在運作進行最終處理的記憶體。</xref:System.IO.Compression.ZipArchive>       處置呼叫<xref:System.IO.Compression.ZipArchive.Dispose%28System.Boolean%29>方法，其中包含表示釋放 managed 和 unmanaged 資源的程式碼。</xref:System.IO.Compression.ZipArchive.Dispose%28System.Boolean%29> 如需詳細資訊，請參閱。"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.IO.Compression.ZipArchive.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Compression.ZipArchive.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.IO.Compression.ZipArchive
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: ZipArchive.Dispose(Boolean)
  fullName: System.IO.Compression.ZipArchive.Dispose(Boolean)
  type: Method
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: "由呼叫<xref href=&quot;System.IO.Compression.ZipArchive.Dispose&quot;></xref>和<xref:System.Object.Finalize>方法釋放目前的執行個體所使用的 unmanaged 的資源<xref href=&quot;System.IO.Compression.ZipArchive&quot;></xref>類別，並選擇性地完成寫入封存並釋放 managed 的資源。</xref:System.Object.Finalize>"
  remarks: "如果`disposing`設`true`，所有基礎資料流已關閉且不再適用於後續的寫入作業，除非您使用建構的物件<xref:System.IO.Compression.ZipArchive.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.ZipArchiveMode%2CSystem.Boolean%29>建構函式多載，然後設定其`leaveOpen`參數`true`。</xref:System.IO.Compression.ZipArchive.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.ZipArchiveMode%2CSystem.Boolean%29>       會呼叫這個方法只由公用<xref:System.IO.Compression.ZipArchive.Dispose>和<xref:System.Object.Finalize>方法。 請勿直接呼叫這個方法。</xref:System.Object.Finalize> </xref:System.IO.Compression.ZipArchive.Dispose>       當您實作的處置模式時，Dispose 方法的布林參數應該使用，如下所示:-<xref:System.IO.Compression.ZipArchive.Dispose>目前物件的方法應該呼叫 Dispose 布林參數設定為與`true`表示釋放 managed 和 unmanaged 資源。</xref:System.IO.Compression.ZipArchive.Dispose>      -<xref:System.Object.Finalize>目前物件的方法應該呼叫 Dispose 布林參數設定為與`false`表示只釋放 unmanaged 的資源。</xref:System.Object.Finalize>       如需詳細資訊，請參閱。"
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>完成寫入封存，然後釋放 unmanaged 和 managed 資源。<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>表示只釋放 unmanaged 的資源。"
  overload: System.IO.Compression.ZipArchive.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Compression.ZipArchive.Entries
  id: Entries
  parent: System.IO.Compression.ZipArchive
  langs:
  - csharp
  name: Entries
  nameWithType: ZipArchive.Entries
  fullName: System.IO.Compression.ZipArchive.Entries
  type: Property
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: "取得目前 zip 封存中的項目的集合。"
  remarks: "項目屬性可以用於擷取整個集合的項目。 使用<xref:System.IO.Compression.ZipArchive.GetEntry%2A>方法依名稱擷取單一項目。</xref:System.IO.Compression.ZipArchive.GetEntry%2A>"
  example:
  - "The following example shows how to open a zip archive and iterate through the collection of entries.  \n  \n [!code-cs[System.IO.Compression.ZipArchive#1](~/add/codesnippet/csharp/p-system.io.compression._5_1.cs)]\n [!code-vb[System.IO.Compression.ZipArchive#1](~/add/codesnippet/visualbasic/p-system.io.compression._5_1.vb)]"
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.IO.Compression.ZipArchiveEntry> Entries { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IO.Compression.ZipArchiveEntry}
      description: "目前 zip 封存中的項目的集合。"
  overload: System.IO.Compression.ZipArchive.Entries*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Zip 封存中不支援讀取。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Zip 封存已經過處置。"
  - type: System.IO.InvalidDataException
    commentId: T:System.IO.InvalidDataException
    description: "Zip 封存已損毀，並無法擷取其項目。"
  platform:
  - net462
- uid: System.IO.Compression.ZipArchive.GetEntry(System.String)
  id: GetEntry(System.String)
  parent: System.IO.Compression.ZipArchive
  langs:
  - csharp
  name: GetEntry(String)
  nameWithType: ZipArchive.GetEntry(String)
  fullName: System.IO.Compression.ZipArchive.GetEntry(String)
  type: Method
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: "擷取指定之 zip 封存中項目的包裝函式。"
  remarks: "如果具有指定的名稱的多個項目存在於封存檔中，會傳回第一個。 項目的名稱相較於`entryName`使用序數比較。"
  example:
  - "The following example shows how to use the GetEntry method to retrieve an entry.  \n  \n [!code-cs[System.IO.Compression.ZipArchiveEntry#2](~/add/codesnippet/csharp/m-system.io.compression._4_1.cs)]\n [!code-vb[System.IO.Compression.ZipArchiveEntry#2](~/add/codesnippet/visualbasic/m-system.io.compression._4_1.vb)]"
  syntax:
    content: public System.IO.Compression.ZipArchiveEntry GetEntry (string entryName);
    parameters:
    - id: entryName
      type: System.String
      description: "識別要擷取之項目的路徑，相對於封存的根目錄。"
    return:
      type: System.IO.Compression.ZipArchiveEntry
      description: "封存; 中指定的項目包裝函式<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>如果封存中沒有項目。"
  overload: System.IO.Compression.ZipArchive.GetEntry*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>entryName</code>is <xref:System.String>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>entryName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Zip 封存中不支援讀取。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Zip 封存已經過處置。"
  - type: System.IO.InvalidDataException
    commentId: T:System.IO.InvalidDataException
    description: "Zip 封存已損毀，並無法擷取其項目。"
  platform:
  - net462
- uid: System.IO.Compression.ZipArchive.Mode
  id: Mode
  parent: System.IO.Compression.ZipArchive
  langs:
  - csharp
  name: Mode
  nameWithType: ZipArchive.Mode
  fullName: System.IO.Compression.ZipArchive.Mode
  type: Property
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: "取得值，描述 zip 封存可以在項目上執行的動作類型。"
  remarks: "指定<xref:System.IO.Compression.ZipArchive>當您建立的<xref:System.IO.Compression.ZipArchive>類別</xref:System.IO.Compression.ZipArchive>執行個體屬性</xref:System.IO.Compression.ZipArchive>的值 使用<xref:System.IO.Compression.ZipArchive.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.ZipArchiveMode%29>或<xref:System.IO.Compression.ZipArchive.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.ZipArchiveMode%2CSystem.Boolean%29>建構函式以提供 [模式] 屬性的值。</xref:System.IO.Compression.ZipArchive.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.ZipArchiveMode%2CSystem.Boolean%29> </xref:System.IO.Compression.ZipArchive.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.ZipArchiveMode%29>"
  syntax:
    content: public System.IO.Compression.ZipArchiveMode Mode { get; }
    return:
      type: System.IO.Compression.ZipArchiveMode
      description: "描述類型的列舉值的其中一個動作 （讀取、 建立或更新） 的 zip 封存可以在項目上執行。"
  overload: System.IO.Compression.ZipArchive.Mode*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.IO.InvalidDataException
  isExternal: true
  name: System.IO.InvalidDataException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.IO.Compression.ZipArchive.#ctor(System.IO.Stream)
  parent: System.IO.Compression.ZipArchive
  isExternal: false
  name: ZipArchive(Stream)
  nameWithType: ZipArchive.ZipArchive(Stream)
  fullName: System.IO.Compression.ZipArchive.ZipArchive(Stream)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.IO.Compression.ZipArchive.#ctor(System.IO.Stream,System.IO.Compression.ZipArchiveMode)
  parent: System.IO.Compression.ZipArchive
  isExternal: false
  name: ZipArchive(Stream,ZipArchiveMode)
  nameWithType: ZipArchive.ZipArchive(Stream,ZipArchiveMode)
  fullName: System.IO.Compression.ZipArchive.ZipArchive(Stream,ZipArchiveMode)
- uid: System.IO.Compression.ZipArchiveMode
  parent: System.IO.Compression
  isExternal: false
  name: ZipArchiveMode
  nameWithType: ZipArchiveMode
  fullName: System.IO.Compression.ZipArchiveMode
- uid: System.IO.Compression.ZipArchive.#ctor(System.IO.Stream,System.IO.Compression.ZipArchiveMode,System.Boolean)
  parent: System.IO.Compression.ZipArchive
  isExternal: false
  name: ZipArchive(Stream,ZipArchiveMode,Boolean)
  nameWithType: ZipArchive.ZipArchive(Stream,ZipArchiveMode,Boolean)
  fullName: System.IO.Compression.ZipArchive.ZipArchive(Stream,ZipArchiveMode,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IO.Compression.ZipArchive.#ctor(System.IO.Stream,System.IO.Compression.ZipArchiveMode,System.Boolean,System.Text.Encoding)
  parent: System.IO.Compression.ZipArchive
  isExternal: false
  name: ZipArchive(Stream,ZipArchiveMode,Boolean,Encoding)
  nameWithType: ZipArchive.ZipArchive(Stream,ZipArchiveMode,Boolean,Encoding)
  fullName: System.IO.Compression.ZipArchive.ZipArchive(Stream,ZipArchiveMode,Boolean,Encoding)
- uid: System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: System.IO.Compression.ZipArchive.CreateEntry(System.String)
  parent: System.IO.Compression.ZipArchive
  isExternal: false
  name: CreateEntry(String)
  nameWithType: ZipArchive.CreateEntry(String)
  fullName: System.IO.Compression.ZipArchive.CreateEntry(String)
- uid: System.IO.Compression.ZipArchiveEntry
  parent: System.IO.Compression
  isExternal: false
  name: ZipArchiveEntry
  nameWithType: ZipArchiveEntry
  fullName: System.IO.Compression.ZipArchiveEntry
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.Compression.ZipArchive.CreateEntry(System.String,System.IO.Compression.CompressionLevel)
  parent: System.IO.Compression.ZipArchive
  isExternal: false
  name: CreateEntry(String,CompressionLevel)
  nameWithType: ZipArchive.CreateEntry(String,CompressionLevel)
  fullName: System.IO.Compression.ZipArchive.CreateEntry(String,CompressionLevel)
- uid: System.IO.Compression.CompressionLevel
  parent: System.IO.Compression
  isExternal: true
  name: CompressionLevel
  nameWithType: CompressionLevel
  fullName: System.IO.Compression.CompressionLevel
- uid: System.IO.Compression.ZipArchive.Dispose
  parent: System.IO.Compression.ZipArchive
  isExternal: false
  name: Dispose()
  nameWithType: ZipArchive.Dispose()
  fullName: System.IO.Compression.ZipArchive.Dispose()
- uid: System.IO.Compression.ZipArchive.Dispose(System.Boolean)
  parent: System.IO.Compression.ZipArchive
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: ZipArchive.Dispose(Boolean)
  fullName: System.IO.Compression.ZipArchive.Dispose(Boolean)
- uid: System.IO.Compression.ZipArchive.Entries
  parent: System.IO.Compression.ZipArchive
  isExternal: false
  name: Entries
  nameWithType: ZipArchive.Entries
  fullName: System.IO.Compression.ZipArchive.Entries
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.IO.Compression.ZipArchiveEntry}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<ZipArchiveEntry>
  nameWithType: ReadOnlyCollection<ZipArchiveEntry>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.IO.Compression.ZipArchiveEntry>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.IO.Compression.ZipArchiveEntry>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IO.Compression.ZipArchiveEntry
    name: ZipArchiveEntry
    nameWithType: ZipArchiveEntry
    fullName: ZipArchiveEntry
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IO.Compression.ZipArchive.GetEntry(System.String)
  parent: System.IO.Compression.ZipArchive
  isExternal: false
  name: GetEntry(String)
  nameWithType: ZipArchive.GetEntry(String)
  fullName: System.IO.Compression.ZipArchive.GetEntry(String)
- uid: System.IO.Compression.ZipArchive.Mode
  parent: System.IO.Compression.ZipArchive
  isExternal: false
  name: Mode
  nameWithType: ZipArchive.Mode
  fullName: System.IO.Compression.ZipArchive.Mode
- uid: System.IO.Compression.ZipArchive.#ctor*
  parent: System.IO.Compression.ZipArchive
  isExternal: false
  name: ZipArchive
  nameWithType: ZipArchive.ZipArchive
- uid: System.IO.Compression.ZipArchive.CreateEntry*
  parent: System.IO.Compression.ZipArchive
  isExternal: false
  name: CreateEntry
  nameWithType: ZipArchive.CreateEntry
- uid: System.IO.Compression.ZipArchive.Dispose*
  parent: System.IO.Compression.ZipArchive
  isExternal: false
  name: Dispose
  nameWithType: ZipArchive.Dispose
- uid: System.IO.Compression.ZipArchive.Entries*
  parent: System.IO.Compression.ZipArchive
  isExternal: false
  name: Entries
  nameWithType: ZipArchive.Entries
- uid: System.IO.Compression.ZipArchive.GetEntry*
  parent: System.IO.Compression.ZipArchive
  isExternal: false
  name: GetEntry
  nameWithType: ZipArchive.GetEntry
- uid: System.IO.Compression.ZipArchive.Mode*
  parent: System.IO.Compression.ZipArchive
  isExternal: false
  name: Mode
  nameWithType: ZipArchive.Mode
