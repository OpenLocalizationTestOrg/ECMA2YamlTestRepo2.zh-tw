### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.MessageSecurityOverHttp
  id: MessageSecurityOverHttp
  children:
  - System.ServiceModel.MessageSecurityOverHttp.#ctor
  - System.ServiceModel.MessageSecurityOverHttp.AlgorithmSuite
  - System.ServiceModel.MessageSecurityOverHttp.ClientCredentialType
  - System.ServiceModel.MessageSecurityOverHttp.IsSecureConversationEnabled
  - System.ServiceModel.MessageSecurityOverHttp.NegotiateServiceCredential
  - System.ServiceModel.MessageSecurityOverHttp.ShouldSerializeAlgorithmSuite
  - System.ServiceModel.MessageSecurityOverHttp.ShouldSerializeClientCredentialType
  - System.ServiceModel.MessageSecurityOverHttp.ShouldSerializeNegotiateServiceCredential
  langs:
  - csharp
  name: MessageSecurityOverHttp
  nameWithType: MessageSecurityOverHttp
  fullName: System.ServiceModel.MessageSecurityOverHttp
  type: Class
  summary: "可在 wsDualHttpBinding 繫結上設定訊息層級安全性屬性。"
  remarks: "從藉由繫結存取這個物件<xref:System.ServiceModel.WSDualHttpBinding.Security%2A>屬性，它會傳回<xref:System.ServiceModel.WSDualHttpSecurity>物件。</xref:System.ServiceModel.WSDualHttpSecurity> </xref:System.ServiceModel.WSDualHttpBinding.Security%2A> <xref:System.ServiceModel.WSDualHttpSecurity.Message%2A>屬性提供 MessageSecurityOverHttp 物件的參考。</xref:System.ServiceModel.WSDualHttpSecurity.Message%2A>"
  syntax:
    content: public class MessageSecurityOverHttp
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.MessageSecurityOverHttp.#ctor
  id: '#ctor'
  parent: System.ServiceModel.MessageSecurityOverHttp
  langs:
  - csharp
  name: MessageSecurityOverHttp()
  nameWithType: MessageSecurityOverHttp.MessageSecurityOverHttp()
  fullName: System.ServiceModel.MessageSecurityOverHttp.MessageSecurityOverHttp()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "初始化的新執行個體<xref href=&quot;System.ServiceModel.MessageSecurityOverHttp&quot;></xref>類別。"
  syntax:
    content: public MessageSecurityOverHttp ();
    parameters: []
  overload: System.ServiceModel.MessageSecurityOverHttp.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.MessageSecurityOverHttp.AlgorithmSuite
  id: AlgorithmSuite
  parent: System.ServiceModel.MessageSecurityOverHttp
  langs:
  - csharp
  name: AlgorithmSuite
  nameWithType: MessageSecurityOverHttp.AlgorithmSuite
  fullName: System.ServiceModel.MessageSecurityOverHttp.AlgorithmSuite
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "指定用於 SOAP 層級之安全性訊息的演算法套件。"
  remarks: "這個屬性就非常重要時使用非[!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]平台是利用一組和預設值不同的演算法。 在修改這個設定時，您應該了解相關演算法的優缺點。"
  example:
  - "The following code shows how to access and set this property.  \n  \n [!code-vb[c_ProgrammingSecurity#8](~/add/codesnippet/visualbasic/p-system.servicemodel.me_3_1.vb)]\n [!code-cs[c_ProgrammingSecurity#8](~/add/codesnippet/csharp/p-system.servicemodel.me_3_1.cs)]"
  syntax:
    content: public System.ServiceModel.Security.SecurityAlgorithmSuite AlgorithmSuite { get; set; }
    return:
      type: System.ServiceModel.Security.SecurityAlgorithmSuite
      description: "A <xref href=&quot;System.ServiceModel.Security.SecurityAlgorithmSuite&quot;></xref>. 預設值為<xref:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256*>.</xref:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256*>"
  overload: System.ServiceModel.MessageSecurityOverHttp.AlgorithmSuite*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "AlgorithmSuite 的值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  platform:
  - net462
- uid: System.ServiceModel.MessageSecurityOverHttp.ClientCredentialType
  id: ClientCredentialType
  parent: System.ServiceModel.MessageSecurityOverHttp
  langs:
  - csharp
  name: ClientCredentialType
  nameWithType: MessageSecurityOverHttp.ClientCredentialType
  fullName: System.ServiceModel.MessageSecurityOverHttp.ClientCredentialType
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "指定 wsHttpBinding 或 wsDualHttpBinding 繫結中的用戶端驗證時所使用的用戶端認證類型。"
  remarks: "這個屬性用來設定`MessageCredentialType`，用來驗證服務呼叫者。 Valid types are:      -   <xref:System.ServiceModel.MessageCredentialType>      -   <xref:System.ServiceModel.MessageCredentialType>      -   <xref:System.ServiceModel.MessageCredentialType>      -   <xref:System.ServiceModel.MessageCredentialType>      -   <xref:System.ServiceModel.MessageCredentialType></xref:System.ServiceModel.MessageCredentialType></xref:System.ServiceModel.MessageCredentialType></xref:System.ServiceModel.MessageCredentialType></xref:System.ServiceModel.MessageCredentialType></xref:System.ServiceModel.MessageCredentialType>"
  example:
  - "The following code sets this property.  \n  \n [!code-cs[c_CreateSecureSession#4](~/add/codesnippet/csharp/p-system.servicemodel.me_0_1.cs)]"
  syntax:
    content: public System.ServiceModel.MessageCredentialType ClientCredentialType { get; set; }
    return:
      type: System.ServiceModel.MessageCredentialType
      description: "A <xref:System.ServiceModel.MessageCredentialType>.</xref:System.ServiceModel.MessageCredentialType> 預設值為<xref:System.ServiceModel.MessageCredentialType>.</xref:System.ServiceModel.MessageCredentialType>"
  overload: System.ServiceModel.MessageSecurityOverHttp.ClientCredentialType*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "ClientCredentialType 的值不是有效的<xref:System.ServiceModel.MessageCredentialType>.</xref:System.ServiceModel.MessageCredentialType>"
  platform:
  - net462
- uid: System.ServiceModel.MessageSecurityOverHttp.IsSecureConversationEnabled
  id: IsSecureConversationEnabled
  parent: System.ServiceModel.MessageSecurityOverHttp
  langs:
  - csharp
  name: IsSecureConversationEnabled()
  nameWithType: MessageSecurityOverHttp.IsSecureConversationEnabled()
  fullName: System.ServiceModel.MessageSecurityOverHttp.IsSecureConversationEnabled()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "只用於擴充性情節，以指出是否從衍生類別的執行個體<xref href=&quot;System.ServiceModel.MessageSecurityOverHttp&quot;></xref>設定為執行如 Ws-securityconversation 中所述的安全對話。"
  syntax:
    content: protected virtual bool IsSecureConversationEnabled ();
    parameters: []
    return:
      type: System.Boolean
      description: "一律傳回<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>，除非在衍生類別中覆寫。"
  overload: System.ServiceModel.MessageSecurityOverHttp.IsSecureConversationEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.MessageSecurityOverHttp.NegotiateServiceCredential
  id: NegotiateServiceCredential
  parent: System.ServiceModel.MessageSecurityOverHttp
  langs:
  - csharp
  name: NegotiateServiceCredential
  nameWithType: MessageSecurityOverHttp.NegotiateServiceCredential
  fullName: System.ServiceModel.MessageSecurityOverHttp.NegotiateServiceCredential
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "取得或設定值，指出是否在超出訊號範圍的用戶端佈建或透過交涉處理從服務取得服務認證。"
  remarks: "Setting this property to `true`, requires WS-Trust and WS-SecureConversation to be supported by the client and the service. Setting this property to `false` does not require WS-Trust or WS-SecureConversation to be supported.  \n  \n For Anonymous, Username or Certificate client credential types, setting this property to `false` implies that the service certificate must be available at the client out of band and that the client must specify the service's certificate to use.  \n  \n In the case of Windows credentials, setting this property to `false` causes an authentication based on `KerberosToken`. This requires that the client and service be part of a Kerberos domain. This mode is interoperable with SOAP stacks that implement the Kerberos token profile from OASIS. Setting this property to `true` causes a SOAP negotiation that tunnels SPNego exchange over SOAP messages. This mode is not interoperable.  \n  \n This property indicates whether the service credential is negotiated automatically between the client and the service. If this property is `true`, then such negotiation occurs. If this property is `false`, then the service credentials must be specified at the client before communication with the service can occur.  \n  \n If this property is set to `false`, and the binding is configured to use Windows as a client credential type, the service account must be associated with a Service Principal Name (SPN). To do this, run the service under the NETWORK SERVICE account, or LOCAL SYSTEM account. Alternatively, use the SetSpn.exe tool to create an SPN for the service account. In either case, the client must use the correct SPN in the [\\&lt;servicePrincipalName\\&gt;](../Topic/%3CservicePrincipalName%3E.md) element, or by using the <xref:System.ServiceModel.EndpointAddress> constructor. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Service Identity and Authentication](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code shows how to access and set this property.  \n  \n [!code-vb[c_ProgrammingSecurity#7](~/add/codesnippet/visualbasic/p-system.servicemodel.me_5_1.vb)]\n [!code-cs[c_ProgrammingSecurity#7](~/add/codesnippet/csharp/p-system.servicemodel.me_5_1.cs)]"
  syntax:
    content: public bool NegotiateServiceCredential { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果服務認證透過交涉，程序取得否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.ServiceModel.MessageSecurityOverHttp.NegotiateServiceCredential*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.MessageSecurityOverHttp.ShouldSerializeAlgorithmSuite
  id: ShouldSerializeAlgorithmSuite
  parent: System.ServiceModel.MessageSecurityOverHttp
  langs:
  - csharp
  name: ShouldSerializeAlgorithmSuite()
  nameWithType: MessageSecurityOverHttp.ShouldSerializeAlgorithmSuite()
  fullName: System.ServiceModel.MessageSecurityOverHttp.ShouldSerializeAlgorithmSuite()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "傳回值，指出是否<xref:System.ServiceModel.MessageSecurityOverHttp.AlgorithmSuite*>屬性已經從其預設值，且應該序列化。</xref:System.ServiceModel.MessageSecurityOverHttp.AlgorithmSuite*>"
  syntax:
    content: public bool ShouldSerializeAlgorithmSuite ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref:System.ServiceModel.MessageSecurityOverHttp.AlgorithmSuite*>屬性值應該序列化，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.ServiceModel.MessageSecurityOverHttp.AlgorithmSuite*>"
  overload: System.ServiceModel.MessageSecurityOverHttp.ShouldSerializeAlgorithmSuite*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.MessageSecurityOverHttp.ShouldSerializeClientCredentialType
  id: ShouldSerializeClientCredentialType
  parent: System.ServiceModel.MessageSecurityOverHttp
  langs:
  - csharp
  name: ShouldSerializeClientCredentialType()
  nameWithType: MessageSecurityOverHttp.ShouldSerializeClientCredentialType()
  fullName: System.ServiceModel.MessageSecurityOverHttp.ShouldSerializeClientCredentialType()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "傳回值，指出是否<xref:System.ServiceModel.MessageSecurityOverHttp.ClientCredentialType*>屬性已經從其預設值，且應該序列化。</xref:System.ServiceModel.MessageSecurityOverHttp.ClientCredentialType*>"
  syntax:
    content: public bool ShouldSerializeClientCredentialType ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref:System.ServiceModel.MessageSecurityOverHttp.ClientCredentialType*>屬性值應該序列化，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.ServiceModel.MessageSecurityOverHttp.ClientCredentialType*>"
  overload: System.ServiceModel.MessageSecurityOverHttp.ShouldSerializeClientCredentialType*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.MessageSecurityOverHttp.ShouldSerializeNegotiateServiceCredential
  id: ShouldSerializeNegotiateServiceCredential
  parent: System.ServiceModel.MessageSecurityOverHttp
  langs:
  - csharp
  name: ShouldSerializeNegotiateServiceCredential()
  nameWithType: MessageSecurityOverHttp.ShouldSerializeNegotiateServiceCredential()
  fullName: System.ServiceModel.MessageSecurityOverHttp.ShouldSerializeNegotiateServiceCredential()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "傳回值，指出是否<xref:System.ServiceModel.MessageSecurityOverHttp.NegotiateServiceCredential*>屬性已經從其預設值，且應該序列化。</xref:System.ServiceModel.MessageSecurityOverHttp.NegotiateServiceCredential*>"
  syntax:
    content: public bool ShouldSerializeNegotiateServiceCredential ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref:System.ServiceModel.MessageSecurityOverHttp.NegotiateServiceCredential*>屬性值應該序列化，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.ServiceModel.MessageSecurityOverHttp.NegotiateServiceCredential*>"
  overload: System.ServiceModel.MessageSecurityOverHttp.ShouldSerializeNegotiateServiceCredential*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ServiceModel.MessageSecurityOverHttp.#ctor
  parent: System.ServiceModel.MessageSecurityOverHttp
  isExternal: false
  name: MessageSecurityOverHttp()
  nameWithType: MessageSecurityOverHttp.MessageSecurityOverHttp()
  fullName: System.ServiceModel.MessageSecurityOverHttp.MessageSecurityOverHttp()
- uid: System.ServiceModel.MessageSecurityOverHttp.AlgorithmSuite
  parent: System.ServiceModel.MessageSecurityOverHttp
  isExternal: false
  name: AlgorithmSuite
  nameWithType: MessageSecurityOverHttp.AlgorithmSuite
  fullName: System.ServiceModel.MessageSecurityOverHttp.AlgorithmSuite
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite
  parent: System.ServiceModel.Security
  isExternal: false
  name: SecurityAlgorithmSuite
  nameWithType: SecurityAlgorithmSuite
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite
- uid: System.ServiceModel.MessageSecurityOverHttp.ClientCredentialType
  parent: System.ServiceModel.MessageSecurityOverHttp
  isExternal: false
  name: ClientCredentialType
  nameWithType: MessageSecurityOverHttp.ClientCredentialType
  fullName: System.ServiceModel.MessageSecurityOverHttp.ClientCredentialType
- uid: System.ServiceModel.MessageCredentialType
  parent: System.ServiceModel
  isExternal: true
  name: MessageCredentialType
  nameWithType: MessageCredentialType
  fullName: System.ServiceModel.MessageCredentialType
- uid: System.ServiceModel.MessageSecurityOverHttp.IsSecureConversationEnabled
  parent: System.ServiceModel.MessageSecurityOverHttp
  isExternal: false
  name: IsSecureConversationEnabled()
  nameWithType: MessageSecurityOverHttp.IsSecureConversationEnabled()
  fullName: System.ServiceModel.MessageSecurityOverHttp.IsSecureConversationEnabled()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.MessageSecurityOverHttp.NegotiateServiceCredential
  parent: System.ServiceModel.MessageSecurityOverHttp
  isExternal: false
  name: NegotiateServiceCredential
  nameWithType: MessageSecurityOverHttp.NegotiateServiceCredential
  fullName: System.ServiceModel.MessageSecurityOverHttp.NegotiateServiceCredential
- uid: System.ServiceModel.MessageSecurityOverHttp.ShouldSerializeAlgorithmSuite
  parent: System.ServiceModel.MessageSecurityOverHttp
  isExternal: false
  name: ShouldSerializeAlgorithmSuite()
  nameWithType: MessageSecurityOverHttp.ShouldSerializeAlgorithmSuite()
  fullName: System.ServiceModel.MessageSecurityOverHttp.ShouldSerializeAlgorithmSuite()
- uid: System.ServiceModel.MessageSecurityOverHttp.ShouldSerializeClientCredentialType
  parent: System.ServiceModel.MessageSecurityOverHttp
  isExternal: false
  name: ShouldSerializeClientCredentialType()
  nameWithType: MessageSecurityOverHttp.ShouldSerializeClientCredentialType()
  fullName: System.ServiceModel.MessageSecurityOverHttp.ShouldSerializeClientCredentialType()
- uid: System.ServiceModel.MessageSecurityOverHttp.ShouldSerializeNegotiateServiceCredential
  parent: System.ServiceModel.MessageSecurityOverHttp
  isExternal: false
  name: ShouldSerializeNegotiateServiceCredential()
  nameWithType: MessageSecurityOverHttp.ShouldSerializeNegotiateServiceCredential()
  fullName: System.ServiceModel.MessageSecurityOverHttp.ShouldSerializeNegotiateServiceCredential()
- uid: System.ServiceModel.MessageSecurityOverHttp.#ctor*
  parent: System.ServiceModel.MessageSecurityOverHttp
  isExternal: false
  name: MessageSecurityOverHttp
  nameWithType: MessageSecurityOverHttp.MessageSecurityOverHttp
- uid: System.ServiceModel.MessageSecurityOverHttp.AlgorithmSuite*
  parent: System.ServiceModel.MessageSecurityOverHttp
  isExternal: false
  name: AlgorithmSuite
  nameWithType: MessageSecurityOverHttp.AlgorithmSuite
- uid: System.ServiceModel.MessageSecurityOverHttp.ClientCredentialType*
  parent: System.ServiceModel.MessageSecurityOverHttp
  isExternal: false
  name: ClientCredentialType
  nameWithType: MessageSecurityOverHttp.ClientCredentialType
- uid: System.ServiceModel.MessageSecurityOverHttp.IsSecureConversationEnabled*
  parent: System.ServiceModel.MessageSecurityOverHttp
  isExternal: false
  name: IsSecureConversationEnabled
  nameWithType: MessageSecurityOverHttp.IsSecureConversationEnabled
- uid: System.ServiceModel.MessageSecurityOverHttp.NegotiateServiceCredential*
  parent: System.ServiceModel.MessageSecurityOverHttp
  isExternal: false
  name: NegotiateServiceCredential
  nameWithType: MessageSecurityOverHttp.NegotiateServiceCredential
- uid: System.ServiceModel.MessageSecurityOverHttp.ShouldSerializeAlgorithmSuite*
  parent: System.ServiceModel.MessageSecurityOverHttp
  isExternal: false
  name: ShouldSerializeAlgorithmSuite
  nameWithType: MessageSecurityOverHttp.ShouldSerializeAlgorithmSuite
- uid: System.ServiceModel.MessageSecurityOverHttp.ShouldSerializeClientCredentialType*
  parent: System.ServiceModel.MessageSecurityOverHttp
  isExternal: false
  name: ShouldSerializeClientCredentialType
  nameWithType: MessageSecurityOverHttp.ShouldSerializeClientCredentialType
- uid: System.ServiceModel.MessageSecurityOverHttp.ShouldSerializeNegotiateServiceCredential*
  parent: System.ServiceModel.MessageSecurityOverHttp
  isExternal: false
  name: ShouldSerializeNegotiateServiceCredential
  nameWithType: MessageSecurityOverHttp.ShouldSerializeNegotiateServiceCredential
