### YamlMime:ManagedReference
items:
- uid: System.Web.UI.DataBinding
  id: DataBinding
  children:
  - System.Web.UI.DataBinding.#ctor(System.String,System.Type,System.String)
  - System.Web.UI.DataBinding.Equals(System.Object)
  - System.Web.UI.DataBinding.Expression
  - System.Web.UI.DataBinding.GetHashCode
  - System.Web.UI.DataBinding.PropertyName
  - System.Web.UI.DataBinding.PropertyType
  langs:
  - csharp
  name: DataBinding
  nameWithType: DataBinding
  fullName: System.Web.UI.DataBinding
  type: Class
  summary: "包含單一的資料繫結運算式的 ASP.NET 伺服器控制項，可讓快速應用程式開發 (RAD) 設計工具，例如 Microsoft Visual Studio，在設計階段建立資料繫結運算式中的資訊。 這個類別無法被繼承。"
  remarks: "每個伺服器控制項中的資料繫結運算式在設計階段資料繫結類別的執行個體所代表。 包含一或多個資料繫結運算式的任何伺服器控制項有<xref:System.Web.UI.DataBindingCollection>包含資料繫結物件的物件。</xref:System.Web.UI.DataBindingCollection> 這個集合是可透過存取<xref:System.Web.UI.Control>類別實作<xref:System.Web.UI.IDataBindingsAccessor>介面。</xref:System.Web.UI.IDataBindingsAccessor> </xref:System.Web.UI.Control> 當您建立自訂的 RAD 設計工具時，請使用這個實作來存取集合。 任何資料繫結或<xref:System.Web.UI.DataBindingCollection>只能在設計階段的伺服器控制項相關聯的物件存在。</xref:System.Web.UI.DataBindingCollection> 它們在執行階段不存在而且，因此，無法存取在執行階段。"
  example:
  - "The following code example creates a DataBinding object and sets it equal to an existing object in the control's <xref:System.Web.UI.DataBindingCollection> collection that has a `propertyName` parameter with a value of `Text`. If the collection contains a DataBinding object with a `propertyName` value of `Text`, this code returns the value of the object's <xref:System.Web.UI.DataBinding.Expression%2A> property. If there is no such object, it returns an empty string (\"\").  \n  \n [!code-cs[DataBinding_Sample1#2](~/add/codesnippet/csharp/t-system.web.ui.databind_1_1.cs)]\n [!code-vb[DataBinding_Sample1#2](~/add/codesnippet/visualbasic/t-system.web.ui.databind_1_1.vb)]"
  syntax:
    content: public sealed class DataBinding
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.DataBinding.#ctor(System.String,System.Type,System.String)
  id: '#ctor(System.String,System.Type,System.String)'
  parent: System.Web.UI.DataBinding
  langs:
  - csharp
  name: DataBinding(String,Type,String)
  nameWithType: DataBinding.DataBinding(String,Type,String)
  fullName: System.Web.UI.DataBinding.DataBinding(String,Type,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "初始化的新執行個體<xref href=&quot;System.Web.UI.DataBinding&quot;></xref>類別。"
  remarks: ''
  example:
  - "The following code example creates a <xref:System.Web.UI.DataBinding> object and sets it equal to an existing object in the control's <xref:System.Web.UI.DataBindingCollection> collection that has a `propertyName` parameter with a value of `Text`. If the collection contains a <xref:System.Web.UI.DataBinding> object with a `propertyName` value of `Text`, this code returns the value of the object's <xref:System.Web.UI.DataBinding.Expression%2A> property. If there is no such object, it returns an empty string (\"\").  \n  \n [!code-cs[DataBinding_Sample1#3](~/add/codesnippet/csharp/m-system.web.ui.databind_1_1.cs)]\n [!code-vb[DataBinding_Sample1#3](~/add/codesnippet/visualbasic/m-system.web.ui.databind_1_1.vb)]"
  syntax:
    content: public DataBinding (string propertyName, Type propertyType, string expression);
    parameters:
    - id: propertyName
      type: System.String
      description: "資料繫結至屬性。"
    - id: propertyType
      type: System.Type
      description: "資料繫結至屬性的.NET Framework 型別。"
    - id: expression
      type: System.String
      description: "要評估的資料繫結運算式。"
  overload: System.Web.UI.DataBinding.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataBinding.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Web.UI.DataBinding
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: DataBinding.Equals(Object)
  fullName: System.Web.UI.DataBinding.Equals(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "判斷指定的物件是否為相同的執行個體<xref href=&quot;System.Web.UI.DataBinding&quot;></xref>與目前物件的類別。"
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "要比較目前物件<xref href=&quot;System.Web.UI.DataBinding&quot;> </xref>。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果資料繫結屬性名稱相符。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.DataBinding.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataBinding.Expression
  id: Expression
  parent: System.Web.UI.DataBinding
  langs:
  - csharp
  name: Expression
  nameWithType: DataBinding.Expression
  fullName: System.Web.UI.DataBinding.Expression
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得或設定要評估的資料繫結運算式。"
  remarks: ''
  example:
  - "The following code example creates a <xref:System.Web.UI.DataBinding> object and sets it equal to an existing object in the control's <xref:System.Web.UI.DataBindingCollection> collection that has a `propertyName` parameter with a value of `Text`. If the collection contains a <xref:System.Web.UI.DataBinding> object with a `propertyName` value of `Text`, this code returns the value of the object's Expression property. If there is no such object, it returns an empty string (\"\").  \n  \n [!code-cs[DataBinding_Sample1#3](~/add/codesnippet/csharp/p-system.web.ui.databind_3_1.cs)]\n [!code-vb[DataBinding_Sample1#3](~/add/codesnippet/visualbasic/p-system.web.ui.databind_3_1.vb)]"
  syntax:
    content: public string Expression { get; set; }
    return:
      type: System.String
      description: "要評估的資料繫結運算式。"
  overload: System.Web.UI.DataBinding.Expression*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataBinding.GetHashCode
  id: GetHashCode
  parent: System.Web.UI.DataBinding
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: DataBinding.GetHashCode()
  fullName: System.Web.UI.DataBinding.GetHashCode()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "擷取執行個體的雜湊碼<xref href=&quot;System.Web.UI.DataBinding&quot;></xref>物件。"
  remarks: "<xref:System.Web.UI.DataBinding>物件放置在<xref:System.Web.UI.DataBindingCollection>物件，只能在設計階段存取。</xref:System.Web.UI.DataBindingCollection></xref:System.Web.UI.DataBinding> 這個集合是表示在控制項上的繫結的雜湊資料表。 只能有一個繫結每個屬性，因此雜湊程式碼計算符合<xref:System.Web.UI.DataBinding.Equals%2A?displayProperty=fullName>實作和只會採用屬性名稱的考量。</xref:System.Web.UI.DataBinding.Equals%2A?displayProperty=fullName>"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "32 位元帶正負號的整數雜湊碼。"
  overload: System.Web.UI.DataBinding.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataBinding.PropertyName
  id: PropertyName
  parent: System.Web.UI.DataBinding
  langs:
  - csharp
  name: PropertyName
  nameWithType: DataBinding.PropertyName
  fullName: System.Web.UI.DataBinding.PropertyName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得資料繫結至 ASP.NET 伺服器控制項屬性的名稱。"
  remarks: ''
  example:
  - "The following code example declares three variables, `dataBindingOutput1`, `dataBindingOutput2`, and `dataBindingOutput3`, which access the different properties of a <xref:System.Web.UI.DataBinding> object, `myDataBinding2`. It then assigns the value of the PropertyName property to `dataBindingOutput1`, concatenates it with the string \"The property name is \", and writes the value to a file.  \n  \n [!code-cs[DataBinding_Sample1#6](~/add/codesnippet/csharp/p-system.web.ui.databind_2_1.cs)]\n [!code-vb[DataBinding_Sample1#6](~/add/codesnippet/visualbasic/p-system.web.ui.databind_2_1.vb)]"
  syntax:
    content: public string PropertyName { get; }
    return:
      type: System.String
      description: "資料繫結至屬性。"
  overload: System.Web.UI.DataBinding.PropertyName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataBinding.PropertyType
  id: PropertyType
  parent: System.Web.UI.DataBinding
  langs:
  - csharp
  name: PropertyType
  nameWithType: DataBinding.PropertyType
  fullName: System.Web.UI.DataBinding.PropertyType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得.NET Framework 類型的資料繫結的 ASP.NET 伺服器控制項屬性。"
  remarks: ''
  example:
  - "The following code example declares three variables, `dataBindingOutput1`, `dataBindingOutput2`, and `dataBindingOutput3`, which access the different properties of a <xref:System.Web.UI.DataBinding> object, `myDataBinding2`. The PropertyType property value is assigned to `dataBindingOutput2` and concatenated with the string \"The property type is \", and writes the value to a file.  \n  \n [!code-cs[DataBinding_Sample1#6](~/add/codesnippet/csharp/p-system.web.ui.databind_0_1.cs)]\n [!code-vb[DataBinding_Sample1#6](~/add/codesnippet/visualbasic/p-system.web.ui.databind_0_1.vb)]"
  syntax:
    content: public Type PropertyType { get; }
    return:
      type: System.Type
      description: ".NET Framework 類型的資料繫結屬性。"
  overload: System.Web.UI.DataBinding.PropertyType*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.UI.DataBinding.#ctor(System.String,System.Type,System.String)
  parent: System.Web.UI.DataBinding
  isExternal: false
  name: DataBinding(String,Type,String)
  nameWithType: DataBinding.DataBinding(String,Type,String)
  fullName: System.Web.UI.DataBinding.DataBinding(String,Type,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.UI.DataBinding.Equals(System.Object)
  parent: System.Web.UI.DataBinding
  isExternal: false
  name: Equals(Object)
  nameWithType: DataBinding.Equals(Object)
  fullName: System.Web.UI.DataBinding.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.DataBinding.Expression
  parent: System.Web.UI.DataBinding
  isExternal: false
  name: Expression
  nameWithType: DataBinding.Expression
  fullName: System.Web.UI.DataBinding.Expression
- uid: System.Web.UI.DataBinding.GetHashCode
  parent: System.Web.UI.DataBinding
  isExternal: false
  name: GetHashCode()
  nameWithType: DataBinding.GetHashCode()
  fullName: System.Web.UI.DataBinding.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.DataBinding.PropertyName
  parent: System.Web.UI.DataBinding
  isExternal: false
  name: PropertyName
  nameWithType: DataBinding.PropertyName
  fullName: System.Web.UI.DataBinding.PropertyName
- uid: System.Web.UI.DataBinding.PropertyType
  parent: System.Web.UI.DataBinding
  isExternal: false
  name: PropertyType
  nameWithType: DataBinding.PropertyType
  fullName: System.Web.UI.DataBinding.PropertyType
- uid: System.Web.UI.DataBinding.#ctor*
  parent: System.Web.UI.DataBinding
  isExternal: false
  name: DataBinding
  nameWithType: DataBinding.DataBinding
- uid: System.Web.UI.DataBinding.Equals*
  parent: System.Web.UI.DataBinding
  isExternal: false
  name: Equals
  nameWithType: DataBinding.Equals
- uid: System.Web.UI.DataBinding.Expression*
  parent: System.Web.UI.DataBinding
  isExternal: false
  name: Expression
  nameWithType: DataBinding.Expression
- uid: System.Web.UI.DataBinding.GetHashCode*
  parent: System.Web.UI.DataBinding
  isExternal: false
  name: GetHashCode
  nameWithType: DataBinding.GetHashCode
- uid: System.Web.UI.DataBinding.PropertyName*
  parent: System.Web.UI.DataBinding
  isExternal: false
  name: PropertyName
  nameWithType: DataBinding.PropertyName
- uid: System.Web.UI.DataBinding.PropertyType*
  parent: System.Web.UI.DataBinding
  isExternal: false
  name: PropertyType
  nameWithType: DataBinding.PropertyType
