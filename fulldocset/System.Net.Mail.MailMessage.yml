### YamlMime:ManagedReference
items:
- uid: System.Net.Mail.MailMessage
  id: MailMessage
  children:
  - System.Net.Mail.MailMessage.#ctor
  - System.Net.Mail.MailMessage.#ctor(System.Net.Mail.MailAddress,System.Net.Mail.MailAddress)
  - System.Net.Mail.MailMessage.#ctor(System.String,System.String)
  - System.Net.Mail.MailMessage.#ctor(System.String,System.String,System.String,System.String)
  - System.Net.Mail.MailMessage.AlternateViews
  - System.Net.Mail.MailMessage.Attachments
  - System.Net.Mail.MailMessage.Bcc
  - System.Net.Mail.MailMessage.Body
  - System.Net.Mail.MailMessage.BodyEncoding
  - System.Net.Mail.MailMessage.BodyTransferEncoding
  - System.Net.Mail.MailMessage.CC
  - System.Net.Mail.MailMessage.DeliveryNotificationOptions
  - System.Net.Mail.MailMessage.Dispose
  - System.Net.Mail.MailMessage.Dispose(System.Boolean)
  - System.Net.Mail.MailMessage.From
  - System.Net.Mail.MailMessage.Headers
  - System.Net.Mail.MailMessage.HeadersEncoding
  - System.Net.Mail.MailMessage.IsBodyHtml
  - System.Net.Mail.MailMessage.Priority
  - System.Net.Mail.MailMessage.ReplyTo
  - System.Net.Mail.MailMessage.ReplyToList
  - System.Net.Mail.MailMessage.Sender
  - System.Net.Mail.MailMessage.Subject
  - System.Net.Mail.MailMessage.SubjectEncoding
  - System.Net.Mail.MailMessage.To
  langs:
  - csharp
  name: MailMessage
  nameWithType: MailMessage
  fullName: System.Net.Mail.MailMessage
  type: Class
  summary: "表示可以使用傳送電子郵件訊息<xref href=&quot;System.Net.Mail.SmtpClient&quot;></xref>類別。"
  remarks: "MailMessage 類別的執行個體用來建構電子郵件訊息傳送到 SMTP 伺服器進行傳遞，使用<xref:System.Net.Mail.SmtpClient>類別。</xref:System.Net.Mail.SmtpClient>       可做為參數指定寄件者、 收件者、 主旨和電子郵件訊息的本文時<xref:System.Net.Mail.MailMessage.%23ctor%2A>用來初始化 MailMessage 物件。</xref:System.Net.Mail.MailMessage.%23ctor%2A> 這些參數可能也會設定或使用 MailMessage 物件上的屬性存取。       主要的郵件訊息標頭和訊息的項目可能會使用 MailMessage 類別的下列屬性來設定。      |郵件標頭或部分 |屬性 |  |-------------------------|--------------|  |附件 |<xref:System.Net.Mail.MailMessage.Attachments%2A>|  |盲人副本 (BCC) |<xref:System.Net.Mail.MailMessage.Bcc%2A>|  |副本 (CC) |<xref:System.Net.Mail.MailMessage.CC%2A>|  |Content-type |<xref:System.Net.Mail.MailMessage.BodyEncoding%2A>|  |自訂標頭的編碼方式 |<xref:System.Net.Mail.MailMessage.HeadersEncoding%2A>|  |訊息主體 |<xref:System.Net.Mail.MailMessage.Body%2A>|  |優先順序 |<xref:System.Net.Mail.MailMessage.Priority%2A>|  |收件者 |<xref:System.Net.Mail.MailMessage.To%2A>|  |收件者地 |<xref:System.Net.Mail.MailMessage.ReplyToList%2A>|  |寄件者 |<xref:System.Net.Mail.MailMessage.From%2A>|  |主旨 |<xref:System.Net.Mail.MailMessage.Subject%2A>|      MailMessage 類別也可讓應用程式存取的訊息使用的標頭集合<xref:System.Net.Mail.MailMessage.Headers%2A>屬性。</xref:System.Net.Mail.MailMessage.Headers%2A> </xref:System.Net.Mail.MailMessage.Subject%2A> </xref:System.Net.Mail.MailMessage.From%2A> </xref:System.Net.Mail.MailMessage.ReplyToList%2A> </xref:System.Net.Mail.MailMessage.To%2A> </xref:System.Net.Mail.MailMessage.Priority%2A> </xref:System.Net.Mail.MailMessage.Body%2A> </xref:System.Net.Mail.MailMessage.HeadersEncoding%2A> </xref:System.Net.Mail.MailMessage.BodyEncoding%2A> </xref:System.Net.Mail.MailMessage.CC%2A> </xref:System.Net.Mail.MailMessage.Bcc%2A> </xref:System.Net.Mail.MailMessage.Attachments%2A> 雖然這個集合是唯讀的 （新的集合可以不設定），自訂標頭可以加入或刪除從這個集合。 傳送郵件訊息執行個體時，將會包含任何新增的自訂標頭。 只有標頭傳送訊息之前，特別加入至這個集合中<xref:System.Net.Mail.MailMessage.Headers%2A>集合中包含的屬性。</xref:System.Net.Mail.MailMessage.Headers%2A> 之後傳送郵件訊息執行個體，<xref:System.Net.Mail.MailMessage.Headers%2A>屬性也會包含使用 MailMessage 類別的相關聯的屬性設定標頭或參數傳遞時<xref:System.Net.Mail.MailMessage.%23ctor%2A>用來初始化 MailMessage 物件。</xref:System.Net.Mail.MailMessage.%23ctor%2A> </xref:System.Net.Mail.MailMessage.Headers%2A>       如果某些郵件標頭格式不正確，它們可能會導致損毀的電子郵件訊息。 因此可以使用 MailMessage 類別上的屬性來設定標頭集合中的任何郵件標頭應該只設定使用 MailMessage 類別屬性，或為參數傳遞時<xref:System.Net.Mail.MailMessage.%23ctor%2A>MailMessage 物件初始化。</xref:System.Net.Mail.MailMessage.%23ctor%2A> 以下清單中的郵件標頭不能加入使用<xref:System.Net.Mail.MailMessage.Headers%2A>屬性和任何值設定為使用這些標頭<xref:System.Net.Mail.MailMessage.Headers%2A>屬性將會捨棄或傳送訊息時，覆寫:-[密件副本]-[副本] 的內容識別碼的內容位置-內容轉移編碼的內容類型--從-重要性-MIME 版本-優先順序日期-回覆至-寄件者至 X 優先順序如果應用程式不會指定 X 寄件者標頭使用<xref:System.Net.Mail.MailMessage.Headers%2A>屬性，MailMessage 類別會建立一個傳送訊息時。</xref:System.Net.Mail.MailMessage.Headers%2A> </xref:System.Net.Mail.MailMessage.Headers%2A> </xref:System.Net.Mail.MailMessage.Headers%2A>       使用<xref:System.Net.Mail.MailMessage.AlternateViews%2A>屬性來指定以不同格式的電子郵件訊息的複本。</xref:System.Net.Mail.MailMessage.AlternateViews%2A> 例如，如果您在 HTML 中傳送一則訊息，您也可以以防部分收件者會使用電子郵件無法顯示 HTML 內容的讀取器提供純文字版本。 如需示範如何使用替代檢視建立訊息的範例，請參閱<xref:System.Net.Mail.MailMessage.AlternateViews%2A>.</xref:System.Net.Mail.MailMessage.AlternateViews%2A>       使用<xref:System.Net.Mail.MailMessage.Attachments%2A>屬性將電子郵件訊息的附件。</xref:System.Net.Mail.MailMessage.Attachments%2A> 如需示範如何建立郵件與附件的範例，請參閱<xref:System.Net.Mail.MailMessage.Attachments%2A>.</xref:System.Net.Mail.MailMessage.Attachments%2A>       之後組合您的電子郵件訊息時，可以將該使用<xref:System.Net.Mail.SmtpClient.Send%2A>或<xref:System.Net.Mail.SmtpClient.SendAsync%2A>方法。</xref:System.Net.Mail.SmtpClient.SendAsync%2A> </xref:System.Net.Mail.SmtpClient.Send%2A>"
  example:
  - "The following code example demonstrates creating and sending an e-mail message that includes an attachment.  \n  \n [!code-cpp[NclMailSync#6](~/add/codesnippet/cpp/t-system.net.mail.mailme_1.cpp)]\n [!code-cs[NclMailSync#6](~/add/codesnippet/csharp/t-system.net.mail.mailme_1.cs)]"
  syntax:
    content: 'public class MailMessage : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.Mail.MailMessage.#ctor
  id: '#ctor'
  parent: System.Net.Mail.MailMessage
  langs:
  - csharp
  name: MailMessage()
  nameWithType: MailMessage.MailMessage()
  fullName: System.Net.Mail.MailMessage.MailMessage()
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "初始化空的執行個體<xref href=&quot;System.Net.Mail.MailMessage&quot;></xref>類別。"
  remarks: "從設定網路 mailSettings 項目中的值為[\\&lt; smtp\\&gt;項目 （網路設定）](../Topic/%3Csmtp%3E%20Element%20\\(Network%20Settings\\).md)，如果它存在。"
  syntax:
    content: public MailMessage ();
    parameters: []
  overload: System.Net.Mail.MailMessage.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Mail.MailMessage.#ctor(System.Net.Mail.MailAddress,System.Net.Mail.MailAddress)
  id: '#ctor(System.Net.Mail.MailAddress,System.Net.Mail.MailAddress)'
  parent: System.Net.Mail.MailMessage
  langs:
  - csharp
  name: MailMessage(MailAddress,MailAddress)
  nameWithType: MailMessage.MailMessage(MailAddress,MailAddress)
  fullName: System.Net.Mail.MailMessage.MailMessage(MailAddress,MailAddress)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "初始化的新執行個體<xref href=&quot;System.Net.Mail.MailMessage&quot;></xref>使用指定的類別<xref href=&quot;System.Net.Mail.MailAddress&quot;></xref>類別物件。"
  remarks: "<xref:System.Net.Mail.MailMessage.From%2A>屬性會初始化使用`from`和<xref:System.Net.Mail.MailMessage.To%2A>屬性會初始化使用`to`。</xref:System.Net.Mail.MailMessage.To%2A> </xref:System.Net.Mail.MailMessage.From%2A>"
  example:
  - "The following code example demonstrates calling this constructor.  \n  \n [!code-cpp[NclMailSync#4](~/add/codesnippet/cpp/a72294ca-d98b-4838-a350-_1.cpp)]\n [!code-cs[NclMailSync#4](~/add/codesnippet/csharp/a72294ca-d98b-4838-a350-_1.cs)]"
  syntax:
    content: public MailMessage (System.Net.Mail.MailAddress from, System.Net.Mail.MailAddress to);
    parameters:
    - id: from
      type: System.Net.Mail.MailAddress
      description: "A <xref href=&quot;System.Net.Mail.MailAddress&quot;> </xref> ，其中包含電子郵件訊息的寄件者地址。"
    - id: to
      type: System.Net.Mail.MailAddress
      description: "A <xref href=&quot;System.Net.Mail.MailAddress&quot;> </xref> ，其中包含電子郵件訊息的收件者地址。"
  overload: System.Net.Mail.MailMessage.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>from</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>to</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "<code>from</code>或<code>to</code>格式不正確。"
  platform:
  - net462
- uid: System.Net.Mail.MailMessage.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Net.Mail.MailMessage
  langs:
  - csharp
  name: MailMessage(String,String)
  nameWithType: MailMessage.MailMessage(String,String)
  fullName: System.Net.Mail.MailMessage.MailMessage(String,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "初始化的新執行個體<xref href=&quot;System.Net.Mail.MailMessage&quot;></xref>使用指定的類別<xref:System.String>類別物件。</xref:System.String>"
  remarks: "<xref:System.Net.Mail.MailMessage.From%2A>屬性會初始化使用`from`和<xref:System.Net.Mail.MailMessage.To%2A>屬性會初始化使用`to`。</xref:System.Net.Mail.MailMessage.To%2A> </xref:System.Net.Mail.MailMessage.From%2A>"
  example:
  - "The following code example demonstrates calling this constructor.  \n  \n [!code-cpp[NclMailSync#2](~/add/codesnippet/cpp/m-system.net.mail.mailme_1.cpp)]\n [!code-cs[NclMailSync#2](~/add/codesnippet/csharp/m-system.net.mail.mailme_1.cs)]"
  syntax:
    content: public MailMessage (string from, string to);
    parameters:
    - id: from
      type: System.String
      description: "A <xref:System.String>，其中包含電子郵件訊息的寄件者地址。</xref:System.String>"
    - id: to
      type: System.String
      description: "A <xref:System.String>，其中包含電子郵件訊息的收件者地址。</xref:System.String>"
  overload: System.Net.Mail.MailMessage.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>from</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>to</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>from</code>is <xref:System.String> (&quot;&quot;).       -or-       <code>to</code> is <xref:System.String> (&quot;&quot;)."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "<code>from</code>或<code>to</code>格式不正確。"
  platform:
  - net462
- uid: System.Net.Mail.MailMessage.#ctor(System.String,System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String,System.String)'
  parent: System.Net.Mail.MailMessage
  langs:
  - csharp
  name: MailMessage(String,String,String,String)
  nameWithType: MailMessage.MailMessage(String,String,String,String)
  fullName: System.Net.Mail.MailMessage.MailMessage(String,String,String,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "初始化的新執行個體<xref href=&quot;System.Net.Mail.MailMessage&quot;></xref>類別。"
  remarks: "初始化新<xref:System.Net.Mail.MailMessage>物件的屬性，如下所示: |參數 |屬性 |  |---------------|--------------|  |`from`|<xref:System.Net.Mail.MailMessage.From%2A>|  |-   `to`|-   <xref:System.Net.Mail.MailMessage.To%2A>|  |-   `subject`|-   <xref:System.Net.Mail.MailMessage.Subject%2A>|  |-   `body`|-   <xref:System.Net.Mail.MailMessage.Body%2A>|      根據預設的主旨和內容會假設使用預設編碼方式取決於本機電腦設定。</xref:System.Net.Mail.MailMessage.Body%2A> </xref:System.Net.Mail.MailMessage.Subject%2A> </xref:System.Net.Mail.MailMessage.To%2A> </xref:System.Net.Mail.MailMessage.From%2A> </xref:System.Net.Mail.MailMessage> 使用<xref:System.Net.Mail.MailMessage.BodyEncoding%2A>和<xref:System.Net.Mail.MailMessage.SubjectEncoding%2A>屬性，以指定不同的編碼方式。</xref:System.Net.Mail.MailMessage.SubjectEncoding%2A> </xref:System.Net.Mail.MailMessage.BodyEncoding%2A>"
  example:
  - "The following code example demonstrates calling this constructor.  \n  \n [!code-cpp[NclMailSync#3](~/add/codesnippet/cpp/49935544-e8d8-4f6e-b54a-_1.cpp)]\n [!code-cs[NclMailSync#3](~/add/codesnippet/csharp/49935544-e8d8-4f6e-b54a-_1.cs)]"
  syntax:
    content: public MailMessage (string from, string to, string subject, string body);
    parameters:
    - id: from
      type: System.String
      description: "A <xref:System.String>，其中包含電子郵件訊息的寄件者地址。</xref:System.String>"
    - id: to
      type: System.String
      description: "A <xref:System.String>，其中包含電子郵件訊息的收件者地址。</xref:System.String>"
    - id: subject
      type: System.String
      description: "A<xref:System.String>包含主旨文字。</xref:System.String>"
    - id: body
      type: System.String
      description: "A <xref:System.String>，其中包含訊息本文。</xref:System.String>"
  overload: System.Net.Mail.MailMessage.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>from</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>to</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>from</code>is <xref:System.String> (&quot;&quot;).       -or-       <code>to</code> is <xref:System.String> (&quot;&quot;)."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "<code>from</code>或<code>to</code>格式不正確。"
  platform:
  - net462
- uid: System.Net.Mail.MailMessage.AlternateViews
  id: AlternateViews
  parent: System.Net.Mail.MailMessage
  langs:
  - csharp
  name: AlternateViews
  nameWithType: MailMessage.AlternateViews
  fullName: System.Net.Mail.MailMessage.AlternateViews
  type: Property
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "取得用來儲存訊息內文的另一種形式的附件集合。"
  remarks: "使用 AlternateViews 屬性來指定以不同格式的電子郵件訊息的複本。 例如，如果您在 HTML 中傳送一則訊息，您也可以以防部分收件者會使用電子郵件無法顯示 HTML 內容的讀取器提供純文字版本。       若要加入至替代檢視<xref:System.Net.Mail.MailMessage>物件，請建立<xref:System.Net.Mail.Attachment>檢視中，然後將它新增至 AlternateViews 所傳回的集合。</xref:System.Net.Mail.Attachment> </xref:System.Net.Mail.MailMessage> 使用<xref:System.Net.Mail.MailMessage.Body%2A>屬性設為指定的文字版本，並使用 AlternateViews 集合，以便與其他的 MIME 類型會指定檢視。</xref:System.Net.Mail.MailMessage.Body%2A> 使用<xref:System.Net.Mime.MediaTypeNames>類別來指定替代的檢視的 MIME 類型的成員。</xref:System.Net.Mime.MediaTypeNames>"
  example:
  - "The following code example demonstrates creating and sending an e-mail message with a plain text and an HTML alternate view.  \n  \n [!code-cpp[NclMailSync#5](~/add/codesnippet/cpp/p-system.net.mail.mailme_3_1.cpp)]\n [!code-cs[NclMailSync#5](~/add/codesnippet/csharp/p-system.net.mail.mailme_3_1.cs)]"
  syntax:
    content: public System.Net.Mail.AlternateViewCollection AlternateViews { get; }
    return:
      type: System.Net.Mail.AlternateViewCollection
      description: "可寫入<xref href=&quot;System.Net.Mail.AlternateViewCollection&quot;> </xref>。"
  overload: System.Net.Mail.MailMessage.AlternateViews*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Mail.MailMessage.Attachments
  id: Attachments
  parent: System.Net.Mail.MailMessage
  langs:
  - csharp
  name: Attachments
  nameWithType: MailMessage.Attachments
  fullName: System.Net.Mail.MailMessage.Attachments
  type: Property
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "取得用來儲存資料附加到這個電子郵件訊息的附件集合。"
  remarks: "使用 [附件] 屬性所傳回的集合加入附件，例如檔案或內容<xref:System.IO.Stream>，為這個<xref:System.Net.Mail.MailMessage>。</xref:System.Net.Mail.MailMessage> </xref:System.IO.Stream>       建立<xref:System.Net.Mail.Attachment>，包含或參考的資料連接，然後再新增<xref:System.Net.Mail.Attachment>以附件所傳回的集合。</xref:System.Net.Mail.Attachment> </xref:System.Net.Mail.Attachment>"
  example:
  - "The following code example demonstrates creating and sending an e-mail message with an attachment.  \n  \n [!code-cpp[NclMailSync#6](~/add/codesnippet/cpp/p-system.net.mail.mailme_8_1.cpp)]\n [!code-cs[NclMailSync#6](~/add/codesnippet/csharp/p-system.net.mail.mailme_8_1.cs)]"
  syntax:
    content: public System.Net.Mail.AttachmentCollection Attachments { get; }
    return:
      type: System.Net.Mail.AttachmentCollection
      description: "可寫入<xref href=&quot;System.Net.Mail.AttachmentCollection&quot;> </xref>。"
  overload: System.Net.Mail.MailMessage.Attachments*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Mail.MailMessage.Bcc
  id: Bcc
  parent: System.Net.Mail.MailMessage
  langs:
  - csharp
  name: Bcc
  nameWithType: MailMessage.Bcc
  fullName: System.Net.Mail.MailMessage.Bcc
  type: Property
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "取得包含此電子郵件訊息密件副本 (BCC) 收件者地址集合。"
  remarks: "若要新增 密件副本收件者電子郵件，請建立<xref:System.Net.Mail.MailAddress>收件者的地址，，然後將該物件加入至 密件副本 屬性所傳回的集合。</xref:System.Net.Mail.MailAddress>       當收件者檢視電子郵件訊息時，[密件副本] 位址通常不會顯示。"
  example:
  - "The following code example demonstrates adding an address to the Bcc address collection.  \n  \n [!code-cpp[NclMailSync#9](~/add/codesnippet/cpp/p-system.net.mail.mailme_1_1.cpp)]\n [!code-cs[NclMailSync#9](~/add/codesnippet/csharp/p-system.net.mail.mailme_1_1.cs)]"
  syntax:
    content: public System.Net.Mail.MailAddressCollection Bcc { get; }
    return:
      type: System.Net.Mail.MailAddressCollection
      description: "可寫入<xref href=&quot;System.Net.Mail.MailAddressCollection&quot;></xref>物件。"
  overload: System.Net.Mail.MailMessage.Bcc*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Mail.MailMessage.Body
  id: Body
  parent: System.Net.Mail.MailMessage
  langs:
  - csharp
  name: Body
  nameWithType: MailMessage.Body
  fullName: System.Net.Mail.MailMessage.Body
  type: Property
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "取得或設定訊息本文。"
  remarks: "<xref:System.Net.Mime.ContentType>本文的內容為&quot;text/plain&quot;。</xref:System.Net.Mime.ContentType> 指定的主體所使用的編碼<xref:System.Net.Mail.MailMessage.BodyEncoding%2A>屬性。</xref:System.Net.Mail.MailMessage.BodyEncoding%2A>       若本文內容中提供更豐富的呈現方式選項，收件者的其他格式，可以使用指定的本文內容的替代檢視<xref:System.Net.Mail.MailMessage.AlternateViews%2A>屬性。</xref:System.Net.Mail.MailMessage.AlternateViews%2A> 例如，應用程式可能會選擇傳送純文字本文和訊息內文的 HTML 版本。 電子郵件的讀取器可以顯示 HTML 可以呈現 HTML 版本的內文的收件者，而無法顯示 HTML 的讀取器會顯示訊息的純文字版改為。"
  example:
  - "The following code example demonstrates setting the Body property.  \n  \n [!code-cpp[NclMailSync#2](~/add/codesnippet/cpp/p-system.net.mail.mailme_9_1.cpp)]\n [!code-cs[NclMailSync#2](~/add/codesnippet/csharp/p-system.net.mail.mailme_9_1.cs)]"
  syntax:
    content: public string Body { get; set; }
    return:
      type: System.String
      description: "A<xref:System.String>包含本文文字的值。</xref:System.String>"
  overload: System.Net.Mail.MailMessage.Body*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Mail.MailMessage.BodyEncoding
  id: BodyEncoding
  parent: System.Net.Mail.MailMessage
  langs:
  - csharp
  name: BodyEncoding
  nameWithType: MailMessage.BodyEncoding
  fullName: System.Net.Mail.MailMessage.BodyEncoding
  type: Property
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "取得或設定用來編碼訊息的編碼方式。"
  remarks: "BodyEncoding 屬性所指定的值設定 Content-type 標頭中的字元組的欄位。 預設的字元集是`&quot;us-ascii&quot;`。       如果您將 BodyEncoding 屬性設定為<xref:System.Text.Encoding.UTF8%2A>， <xref:System.Text.Encoding.Unicode%2A>，或<xref:System.Text.Encoding.UTF32%2A>，則架構也會選取<xref:System.Net.Mime.TransferEncoding><xref:System.Net.Mime.TransferEncoding>。 這個<xref:System.Net.Mail.MailMessage></xref:System.Net.Mail.MailMessage></xref:System.Net.Mime.TransferEncoding></xref:System.Net.Mime.TransferEncoding></xref:System.Text.Encoding.UTF32%2A></xref:System.Text.Encoding.Unicode%2A></xref:System.Text.Encoding.UTF8%2A>"
  example:
  - "The following code example demonstrates creating a mail message that uses UTF8 encoding.  \n  \n [!code-cs[NclMailAsync#3](~/add/codesnippet/csharp/p-system.net.mail.mailme_10_1.cs)]\n [!code-cpp[NclMailAsync#3](~/add/codesnippet/cpp/p-system.net.mail.mailme_10_1.cpp)]\n [!code-vb[NclMailAsync#3](~/add/codesnippet/visualbasic/p-system.net.mail.mailme_10_1.vb)]"
  syntax:
    content: public System.Text.Encoding BodyEncoding { get; set; }
    return:
      type: System.Text.Encoding
      description: "<xref:System.Text.Encoding>套用至<xref:System.Net.Mail.MailMessage.Body*>.</xref:System.Net.Mail.MailMessage.Body*>內容</xref:System.Text.Encoding>"
  overload: System.Net.Mail.MailMessage.BodyEncoding*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Mail.MailMessage.BodyTransferEncoding
  id: BodyTransferEncoding
  parent: System.Net.Mail.MailMessage
  langs:
  - csharp
  name: BodyTransferEncoding
  nameWithType: MailMessage.BodyTransferEncoding
  fullName: System.Net.Mail.MailMessage.BodyTransferEncoding
  type: Property
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "取得或設定用來編碼訊息的傳輸編碼方式。"
  syntax:
    content: public System.Net.Mime.TransferEncoding BodyTransferEncoding { get; set; }
    return:
      type: System.Net.Mime.TransferEncoding
      description: "Returns <xref href=&quot;System.Net.Mime.TransferEncoding&quot;></xref>.       A <xref href=&quot;System.Net.Mime.TransferEncoding&quot;> </xref>套用至<xref:System.Net.Mail.MailMessage.Body*>.</xref:System.Net.Mail.MailMessage.Body*>內容"
  overload: System.Net.Mail.MailMessage.BodyTransferEncoding*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Mail.MailMessage.CC
  id: CC
  parent: System.Net.Mail.MailMessage
  langs:
  - csharp
  name: CC
  nameWithType: MailMessage.CC
  fullName: System.Net.Mail.MailMessage.CC
  type: Property
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "取得包含此電子郵件的副本 (CC) 收件者地址集合。"
  remarks: "若要加入的電子郵件訊息副本收件者，請建立<xref:System.Net.Mail.MailAddress>收件者地址，然後將該物件加入至 [副本] 屬性所傳回的集合。</xref:System.Net.Mail.MailAddress>"
  example:
  - "The following code example demonstrates adding an address to the CC address collection.  \n  \n [!code-cpp[NclMailSync#10](~/add/codesnippet/cpp/p-system.net.mail.mailme_5_1.cpp)]\n [!code-cs[NclMailSync#10](~/add/codesnippet/csharp/p-system.net.mail.mailme_5_1.cs)]"
  syntax:
    content: public System.Net.Mail.MailAddressCollection CC { get; }
    return:
      type: System.Net.Mail.MailAddressCollection
      description: "可寫入<xref href=&quot;System.Net.Mail.MailAddressCollection&quot;></xref>物件。"
  overload: System.Net.Mail.MailMessage.CC*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Mail.MailMessage.DeliveryNotificationOptions
  id: DeliveryNotificationOptions
  parent: System.Net.Mail.MailMessage
  langs:
  - csharp
  name: DeliveryNotificationOptions
  nameWithType: MailMessage.DeliveryNotificationOptions
  fullName: System.Net.Mail.MailMessage.DeliveryNotificationOptions
  type: Property
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "取得或設定此電子郵件的傳遞通知。"
  syntax:
    content: public System.Net.Mail.DeliveryNotificationOptions DeliveryNotificationOptions { get; set; }
    return:
      type: System.Net.Mail.DeliveryNotificationOptions
      description: "A <xref href=&quot;System.Net.Mail.DeliveryNotificationOptions&quot;> </xref>值，包含此訊息的傳遞通知。"
  overload: System.Net.Mail.MailMessage.DeliveryNotificationOptions*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Mail.MailMessage.Dispose
  id: Dispose
  parent: System.Net.Mail.MailMessage
  langs:
  - csharp
  name: Dispose()
  nameWithType: MailMessage.Dispose()
  fullName: System.Net.Mail.MailMessage.Dispose()
  type: Method
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "所使用的資源全部釋出<xref href=&quot;System.Net.Mail.MailMessage&quot;> </xref>。"
  remarks: "當您完成使用<xref:System.Net.Mail.MailMessage>.</xref:System.Net.Mail.MailMessage>呼叫 Dispose 方法 Dispose 方法會使<xref:System.Net.Mail.MailMessage>中無法使用的狀態。</xref:System.Net.Mail.MailMessage> 在呼叫 Dispose 之後，您必須釋放所有參考<xref:System.Net.Mail.MailMessage>讓記憶體回收行程可以回收記憶體的<xref:System.Net.Mail.MailMessage>所佔用。</xref:System.Net.Mail.MailMessage> </xref:System.Net.Mail.MailMessage> 如需詳細資訊，請參閱[清除 Unmanaged 資源上](~/add/includes/ajax-current-ext-md.md)和[實作 Dispose 方法](~/add/includes/ajax-current-ext-md.md)。      > [!NOTE] > 永遠呼叫 Dispose 之後，再放開您的最後一個參考至<xref:System.Net.Mail.MailMessage>。</xref:System.Net.Mail.MailMessage>"
  example:
  - The following code example demonstrates disposing a <xref:System.Net.Mail.MailMessage>.
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Net.Mail.MailMessage.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Mail.MailMessage.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Net.Mail.MailMessage
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: MailMessage.Dispose(Boolean)
  fullName: System.Net.Mail.MailMessage.Dispose(Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "所使用的 unmanaged 的資源釋出<xref href=&quot;System.Net.Mail.MailMessage&quot;></xref>並選擇性釋放 managed 的資源。"
  remarks: "這個方法會呼叫公用`Dispose()`方法和<xref:System.Object.Finalize%2A>方法。</xref:System.Object.Finalize%2A> `Dispose()`叫用受保護`Dispose(Boolean)`方法`disposing`參數設定為`true`。 <xref:System.Object.Finalize%2A>叫用`Dispose`與`disposing`設`false`。</xref:System.Object.Finalize%2A>       當`disposing`參數為 true，這個方法的任何 managed 物件所持有的資源全部釋出這個<xref:System.Net.Mail.MailMessage>參考。</xref:System.Net.Mail.MailMessage> 這個方法會叫用`Dispose()`每個參考物件的方法。"
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>表示釋放 managed 和 unmanaged 資源，<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>表示只釋放 unmanaged 的資源。"
  overload: System.Net.Mail.MailMessage.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Mail.MailMessage.From
  id: From
  parent: System.Net.Mail.MailMessage
  langs:
  - csharp
  name: From
  nameWithType: MailMessage.From
  fullName: System.Net.Mail.MailMessage.From
  type: Property
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "取得或設定從這個電子郵件訊息的位址。"
  remarks: "從位址未驗證或繫結至目前登入的使用者。"
  example:
  - "The following code example demonstrates setting a value for the From property.  \n  \n [!code-cpp[NclMailSync#10](~/add/codesnippet/cpp/p-system.net.mail.mailme_7_1.cpp)]\n [!code-cs[NclMailSync#10](~/add/codesnippet/csharp/p-system.net.mail.mailme_7_1.cs)]"
  syntax:
    content: public System.Net.Mail.MailAddress From { get; set; }
    return:
      type: System.Net.Mail.MailAddress
      description: "A <xref href=&quot;System.Net.Mail.MailAddress&quot;> </xref> ，其中包含從位址資訊。"
  overload: System.Net.Mail.MailMessage.From*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Mail.MailMessage.Headers
  id: Headers
  parent: System.Net.Mail.MailMessage
  langs:
  - csharp
  name: Headers
  nameWithType: MailMessage.Headers
  fullName: System.Net.Mail.MailMessage.Headers
  type: Property
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "取得與此電子郵件訊息的傳送的電子郵件標頭。"
  remarks: "標頭屬性可讓應用程式存取訊息的標頭集合。 雖然這個集合是唯讀的 （新的集合可以不設定），自訂標頭可以加入或刪除從這個集合。 新增的任何自訂標頭會包含當<xref:System.Net.Mail.MailMessage>傳送執行個體。</xref:System.Net.Mail.MailMessage> 將訊息傳送之前，只有明確新增至這個集合中的標頭屬性的標頭會包含在集合中。 之後<xref:System.Net.Mail.MailMessage>傳送執行個體、 標頭屬性也會包含設定使用之屬性相關聯的標頭<xref:System.Net.Mail.MailMessage>類別或參數傳遞時<xref:System.Net.Mail.MailMessage.%23ctor%2A>用來初始化<xref:System.Net.Mail.MailMessage>物件。</xref:System.Net.Mail.MailMessage> </xref:System.Net.Mail.MailMessage.%23ctor%2A> </xref:System.Net.Mail.MailMessage> </xref:System.Net.Mail.MailMessage>       如果某些郵件標頭格式不正確，它們可能會導致損毀的電子郵件訊息。 因此任何可以使用屬性上設定的標頭集合中的郵件標頭<xref:System.Net.Mail.MailMessage>類別應該只能透過設定<xref:System.Net.Mail.MailMessage>類別屬性，或做為參數傳遞時<xref:System.Net.Mail.MailMessage.%23ctor%2A>初始化<xref:System.Net.Mail.MailMessage>物件。</xref:System.Net.Mail.MailMessage> </xref:System.Net.Mail.MailMessage.%23ctor%2A> </xref:System.Net.Mail.MailMessage> </xref:System.Net.Mail.MailMessage> 以下清單中的郵件標頭不能加入使用的標頭屬性，並會捨棄或覆寫傳送訊息時設定這些標頭使用的標頭屬性的任何值:-[密件副本]-[副本] 的內容識別碼的內容位置-內容轉移編碼的內容類型--從-重要性-MIME 版本-優先順序日期-回覆至-寄件者至 X 優先順序如果應用程式不會指定使用的標頭屬性的 X 寄件者標頭<xref:System.Net.Mail.MailMessage>傳送訊息時，類別會建立一個。</xref:System.Net.Mail.MailMessage>       可做為參數指定寄件者、 收件者、 主旨和電子郵件訊息的本文時<xref:System.Net.Mail.MailMessage.%23ctor%2A>用來初始化<xref:System.Net.Mail.MailMessage>物件。</xref:System.Net.Mail.MailMessage> </xref:System.Net.Mail.MailMessage.%23ctor%2A> 這些參數可能也會設定或使用上的屬性存取<xref:System.Net.Mail.MailMessage>物件。</xref:System.Net.Mail.MailMessage>       主要的郵件訊息標頭和訊息的項目可能會使用來設定下列屬性的<xref:System.Net.Mail.MailMessage>類別。</xref:System.Net.Mail.MailMessage>      |郵件標頭或部分 |屬性 |  |-------------------------|--------------|  |附件 |<xref:System.Net.Mail.MailMessage.Attachments%2A>|  |盲人副本 (BCC) |<xref:System.Net.Mail.MailMessage.Bcc%2A>|  |副本 (CC) |<xref:System.Net.Mail.MailMessage.CC%2A>|  |Content-type |<xref:System.Net.Mail.MailMessage.BodyEncoding%2A>|  |自訂標頭的編碼方式 |<xref:System.Net.Mail.MailMessage.HeadersEncoding%2A>|  |訊息主體 |<xref:System.Net.Mail.MailMessage.Body%2A>|  |優先順序 |<xref:System.Net.Mail.MailMessage.Priority%2A>|  |收件者 |<xref:System.Net.Mail.MailMessage.To%2A>|  |收件者地 |<xref:System.Net.Mail.MailMessage.ReplyToList%2A>|  |寄件者 |<xref:System.Net.Mail.MailMessage.From%2A>|  |主旨 |<xref:System.Net.Mail.MailMessage.Subject%2A>|</xref:System.Net.Mail.MailMessage.Subject%2A></xref:System.Net.Mail.MailMessage.From%2A></xref:System.Net.Mail.MailMessage.ReplyToList%2A></xref:System.Net.Mail.MailMessage.To%2A></xref:System.Net.Mail.MailMessage.Priority%2A></xref:System.Net.Mail.MailMessage.Body%2A></xref:System.Net.Mail.MailMessage.HeadersEncoding%2A></xref:System.Net.Mail.MailMessage.BodyEncoding%2A></xref:System.Net.Mail.MailMessage.CC%2A></xref:System.Net.Mail.MailMessage.Bcc%2A></xref:System.Net.Mail.MailMessage.Attachments%2A>"
  example:
  - "The following code example demonstrates displaying the headers for a mail message.  \n  \n [!code-cpp[NclMailSync#24](~/add/codesnippet/cpp/p-system.net.mail.mailme_2_1.cpp)]\n [!code-cs[NclMailSync#24](~/add/codesnippet/csharp/p-system.net.mail.mailme_2_1.cs)]"
  syntax:
    content: public System.Collections.Specialized.NameValueCollection Headers { get; }
    return:
      type: System.Collections.Specialized.NameValueCollection
      description: "A <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> ，其中包含電子郵件標頭。"
  overload: System.Net.Mail.MailMessage.Headers*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Mail.MailMessage.HeadersEncoding
  id: HeadersEncoding
  parent: System.Net.Mail.MailMessage
  langs:
  - csharp
  name: HeadersEncoding
  nameWithType: MailMessage.HeadersEncoding
  fullName: System.Net.Mail.MailMessage.HeadersEncoding
  type: Property
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "取得或設定使用者定義自訂標頭使用這個電子郵件訊息的編碼方式。"
  remarks: "HeadersEncoding 屬性的值預設為<xref:System.Text.Encoding.UTF8%2A?displayProperty=fullName>.</xref:System.Text.Encoding.UTF8%2A?displayProperty=fullName>       SMTP 訊息是由標頭和本文部分所組成。 IETF Rfc smtp 限制的標頭和本文部分的名稱是 ASCII。 不過，IETF Rfc 所允許的標頭和本文部分值，來包含 Unicode 字元。 在任何特定值，如果存在非 ASCII 字元，然後編碼值使用組合的字元編碼 （UTF8 或 Shift JIS，例如） 後面接著位元組編碼方式 (<xref:System.Net.Mime.TransferEncoding>或<xref:System.Net.Mime.TransferEncoding>例如)。</xref:System.Net.Mime.TransferEncoding> </xref:System.Net.Mime.TransferEncoding> 結果通常是 ASCII 字元會在網路傳輸資料流中。"
  syntax:
    content: public System.Text.Encoding HeadersEncoding { get; set; }
    return:
      type: System.Text.Encoding
      description: "用於使用者定義自訂標頭加入這個電子郵件訊息的編碼方式。"
  overload: System.Net.Mail.MailMessage.HeadersEncoding*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Mail.MailMessage.IsBodyHtml
  id: IsBodyHtml
  parent: System.Net.Mail.MailMessage
  langs:
  - csharp
  name: IsBodyHtml
  nameWithType: MailMessage.IsBodyHtml
  fullName: System.Net.Mail.MailMessage.IsBodyHtml
  type: Property
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "取得或設定值，指出是否在 Html 郵件訊息本文。"
  syntax:
    content: public bool IsBodyHtml { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果訊息主體為 Html。else <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Net.Mail.MailMessage.IsBodyHtml*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Mail.MailMessage.Priority
  id: Priority
  parent: System.Net.Mail.MailMessage
  langs:
  - csharp
  name: Priority
  nameWithType: MailMessage.Priority
  fullName: System.Net.Mail.MailMessage.Priority
  type: Property
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "取得或設定此電子郵件訊息的優先順序。"
  syntax:
    content: public System.Net.Mail.MailPriority Priority { get; set; }
    return:
      type: System.Net.Mail.MailPriority
      description: "A <xref href=&quot;System.Net.Mail.MailPriority&quot;> </xref> ，其中包含這個訊息的優先順序。"
  overload: System.Net.Mail.MailMessage.Priority*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Mail.MailMessage.ReplyTo
  id: ReplyTo
  parent: System.Net.Mail.MailMessage
  langs:
  - csharp
  name: ReplyTo
  nameWithType: MailMessage.ReplyTo
  fullName: System.Net.Mail.MailMessage.ReplyTo
  type: Property
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "取得或設定的郵件訊息的 ReplyTo 地址。"
  remarks: "ReplyTo 屬性用於表示一個位址以外<xref:System.Net.Mail.MailMessage.From%2A>用於回覆此訊息的位址。</xref:System.Net.Mail.MailMessage.From%2A>"
  syntax:
    content: public System.Net.Mail.MailAddress ReplyTo { get; set; }
    return:
      type: System.Net.Mail.MailAddress
      description: "MailAddress 指出 ReplyTo 欄位的值。"
  overload: System.Net.Mail.MailMessage.ReplyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Mail.MailMessage.ReplyToList
  id: ReplyToList
  parent: System.Net.Mail.MailMessage
  langs:
  - csharp
  name: ReplyToList
  nameWithType: MailMessage.ReplyToList
  fullName: System.Net.Mail.MailMessage.ReplyToList
  type: Property
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "取得或設定要回覆郵件訊息的位址清單。"
  remarks: "使用 ReplyToList 屬性來表示的位址清單以外<xref:System.Net.Mail.MailMessage.From%2A>用於回覆此訊息的位址。</xref:System.Net.Mail.MailMessage.From%2A>       ReplyToList 屬性取代<xref:System.Net.Mail.MailMessage.ReplyTo%2A>只允許單一回覆位址的屬性。</xref:System.Net.Mail.MailMessage.ReplyTo%2A>"
  syntax:
    content: public System.Net.Mail.MailAddressCollection ReplyToList { get; }
    return:
      type: System.Net.Mail.MailAddressCollection
      description: "若要回覆郵件地址清單。"
  overload: System.Net.Mail.MailMessage.ReplyToList*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Mail.MailMessage.Sender
  id: Sender
  parent: System.Net.Mail.MailMessage
  langs:
  - csharp
  name: Sender
  nameWithType: MailMessage.Sender
  fullName: System.Net.Mail.MailMessage.Sender
  type: Property
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "取得或設定這個電子郵件訊息寄件者地址。"
  remarks: "寄件者地址未驗證或繫結至目前登入的使用者。"
  syntax:
    content: public System.Net.Mail.MailAddress Sender { get; set; }
    return:
      type: System.Net.Mail.MailAddress
      description: "A <xref href=&quot;System.Net.Mail.MailAddress&quot;> </xref> ，其中包含寄件者地址資訊。"
  overload: System.Net.Mail.MailMessage.Sender*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Mail.MailMessage.Subject
  id: Subject
  parent: System.Net.Mail.MailMessage
  langs:
  - csharp
  name: Subject
  nameWithType: MailMessage.Subject
  fullName: System.Net.Mail.MailMessage.Subject
  type: Property
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "取得或設定這個電子郵件訊息的主旨列。"
  remarks: "指定使用主體所使用的編碼<xref:System.Net.Mail.MailMessage.SubjectEncoding%2A>屬性。</xref:System.Net.Mail.MailMessage.SubjectEncoding%2A>"
  example:
  - "The following code example demonstrates setting the Subject property.  \n  \n [!code-cpp[NclMailSync#2](~/add/codesnippet/cpp/p-system.net.mail.mailme_0_1.cpp)]\n [!code-cs[NclMailSync#2](~/add/codesnippet/csharp/p-system.net.mail.mailme_0_1.cs)]"
  syntax:
    content: public string Subject { get; set; }
    return:
      type: System.String
      description: "A<xref:System.String>包含主體內容。</xref:System.String>"
  overload: System.Net.Mail.MailMessage.Subject*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Mail.MailMessage.SubjectEncoding
  id: SubjectEncoding
  parent: System.Net.Mail.MailMessage
  langs:
  - csharp
  name: SubjectEncoding
  nameWithType: MailMessage.SubjectEncoding
  fullName: System.Net.Mail.MailMessage.SubjectEncoding
  type: Property
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "取得或設定用於這個電子郵件訊息主旨內容的編碼方式。"
  remarks: "如果郵件代理程式有問題、<xref:System.Text.Encoding.Unicode%2A>使用<xref:System.Text.Encoding.UTF8%2A>.</xref:System.Text.Encoding.UTF8%2A> </xref:System.Text.Encoding.Unicode%2A> SubjectEncoding"
  example:
  - "The following code example demonstrates setting the SubjectEncoding property.  \n  \n [!code-cs[NclMailASync#3](~/add/codesnippet/csharp/p-system.net.mail.mailme_4_1.cs)]\n [!code-cpp[NclMailASync#3](~/add/codesnippet/cpp/p-system.net.mail.mailme_4_1.cpp)]\n [!code-vb[NclMailASync#3](~/add/codesnippet/visualbasic/p-system.net.mail.mailme_4_1.vb)]"
  syntax:
    content: public System.Text.Encoding SubjectEncoding { get; set; }
    return:
      type: System.Text.Encoding
      description: "<xref:System.Text.Encoding>用來編碼<xref:System.Net.Mail.MailMessage.Subject*>屬性。</xref:System.Net.Mail.MailMessage.Subject*> </xref:System.Text.Encoding>"
  overload: System.Net.Mail.MailMessage.SubjectEncoding*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Mail.MailMessage.To
  id: To
  parent: System.Net.Mail.MailMessage
  langs:
  - csharp
  name: To
  nameWithType: MailMessage.To
  fullName: System.Net.Mail.MailMessage.To
  type: Property
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "取得包含此電子郵件的收件者地址集合。"
  remarks: "To 屬性用來指定電子郵件的收件者欄位的位址。 若要加入的電子郵件收件者，請建立<xref:System.Net.Mail.MailAddress>收件者地址，，然後將該物件加入至這個屬性所傳回的集合。</xref:System.Net.Mail.MailAddress>"
  example:
  - "The following code example demonstrates setting the To property.  \n  \n [!code-cpp[NclMailSync#7](~/add/codesnippet/cpp/p-system.net.mail.mailme_6_1.cpp)]\n [!code-cs[NclMailSync#7](~/add/codesnippet/csharp/p-system.net.mail.mailme_6_1.cs)]"
  syntax:
    content: public System.Net.Mail.MailAddressCollection To { get; }
    return:
      type: System.Net.Mail.MailAddressCollection
      description: "可寫入<xref href=&quot;System.Net.Mail.MailAddressCollection&quot;></xref>物件。"
  overload: System.Net.Mail.MailMessage.To*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.FormatException
  isExternal: true
  name: System.FormatException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Net.Mail.MailMessage.#ctor
  parent: System.Net.Mail.MailMessage
  isExternal: false
  name: MailMessage()
  nameWithType: MailMessage.MailMessage()
  fullName: System.Net.Mail.MailMessage.MailMessage()
- uid: System.Net.Mail.MailMessage.#ctor(System.Net.Mail.MailAddress,System.Net.Mail.MailAddress)
  parent: System.Net.Mail.MailMessage
  isExternal: false
  name: MailMessage(MailAddress,MailAddress)
  nameWithType: MailMessage.MailMessage(MailAddress,MailAddress)
  fullName: System.Net.Mail.MailMessage.MailMessage(MailAddress,MailAddress)
- uid: System.Net.Mail.MailAddress
  parent: System.Net.Mail
  isExternal: false
  name: MailAddress
  nameWithType: MailAddress
  fullName: System.Net.Mail.MailAddress
- uid: System.Net.Mail.MailMessage.#ctor(System.String,System.String)
  parent: System.Net.Mail.MailMessage
  isExternal: false
  name: MailMessage(String,String)
  nameWithType: MailMessage.MailMessage(String,String)
  fullName: System.Net.Mail.MailMessage.MailMessage(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.Mail.MailMessage.#ctor(System.String,System.String,System.String,System.String)
  parent: System.Net.Mail.MailMessage
  isExternal: false
  name: MailMessage(String,String,String,String)
  nameWithType: MailMessage.MailMessage(String,String,String,String)
  fullName: System.Net.Mail.MailMessage.MailMessage(String,String,String,String)
- uid: System.Net.Mail.MailMessage.AlternateViews
  parent: System.Net.Mail.MailMessage
  isExternal: false
  name: AlternateViews
  nameWithType: MailMessage.AlternateViews
  fullName: System.Net.Mail.MailMessage.AlternateViews
- uid: System.Net.Mail.AlternateViewCollection
  parent: System.Net.Mail
  isExternal: false
  name: AlternateViewCollection
  nameWithType: AlternateViewCollection
  fullName: System.Net.Mail.AlternateViewCollection
- uid: System.Net.Mail.MailMessage.Attachments
  parent: System.Net.Mail.MailMessage
  isExternal: false
  name: Attachments
  nameWithType: MailMessage.Attachments
  fullName: System.Net.Mail.MailMessage.Attachments
- uid: System.Net.Mail.AttachmentCollection
  parent: System.Net.Mail
  isExternal: false
  name: AttachmentCollection
  nameWithType: AttachmentCollection
  fullName: System.Net.Mail.AttachmentCollection
- uid: System.Net.Mail.MailMessage.Bcc
  parent: System.Net.Mail.MailMessage
  isExternal: false
  name: Bcc
  nameWithType: MailMessage.Bcc
  fullName: System.Net.Mail.MailMessage.Bcc
- uid: System.Net.Mail.MailAddressCollection
  parent: System.Net.Mail
  isExternal: false
  name: MailAddressCollection
  nameWithType: MailAddressCollection
  fullName: System.Net.Mail.MailAddressCollection
- uid: System.Net.Mail.MailMessage.Body
  parent: System.Net.Mail.MailMessage
  isExternal: false
  name: Body
  nameWithType: MailMessage.Body
  fullName: System.Net.Mail.MailMessage.Body
- uid: System.Net.Mail.MailMessage.BodyEncoding
  parent: System.Net.Mail.MailMessage
  isExternal: false
  name: BodyEncoding
  nameWithType: MailMessage.BodyEncoding
  fullName: System.Net.Mail.MailMessage.BodyEncoding
- uid: System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: System.Net.Mail.MailMessage.BodyTransferEncoding
  parent: System.Net.Mail.MailMessage
  isExternal: false
  name: BodyTransferEncoding
  nameWithType: MailMessage.BodyTransferEncoding
  fullName: System.Net.Mail.MailMessage.BodyTransferEncoding
- uid: System.Net.Mime.TransferEncoding
  parent: System.Net.Mime
  isExternal: false
  name: TransferEncoding
  nameWithType: TransferEncoding
  fullName: System.Net.Mime.TransferEncoding
- uid: System.Net.Mail.MailMessage.CC
  parent: System.Net.Mail.MailMessage
  isExternal: false
  name: CC
  nameWithType: MailMessage.CC
  fullName: System.Net.Mail.MailMessage.CC
- uid: System.Net.Mail.MailMessage.DeliveryNotificationOptions
  parent: System.Net.Mail.MailMessage
  isExternal: false
  name: DeliveryNotificationOptions
  nameWithType: MailMessage.DeliveryNotificationOptions
  fullName: System.Net.Mail.MailMessage.DeliveryNotificationOptions
- uid: System.Net.Mail.DeliveryNotificationOptions
  parent: System.Net.Mail
  isExternal: false
  name: DeliveryNotificationOptions
  nameWithType: DeliveryNotificationOptions
  fullName: System.Net.Mail.DeliveryNotificationOptions
- uid: System.Net.Mail.MailMessage.Dispose
  parent: System.Net.Mail.MailMessage
  isExternal: false
  name: Dispose()
  nameWithType: MailMessage.Dispose()
  fullName: System.Net.Mail.MailMessage.Dispose()
- uid: System.Net.Mail.MailMessage.Dispose(System.Boolean)
  parent: System.Net.Mail.MailMessage
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: MailMessage.Dispose(Boolean)
  fullName: System.Net.Mail.MailMessage.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.Mail.MailMessage.From
  parent: System.Net.Mail.MailMessage
  isExternal: false
  name: From
  nameWithType: MailMessage.From
  fullName: System.Net.Mail.MailMessage.From
- uid: System.Net.Mail.MailMessage.Headers
  parent: System.Net.Mail.MailMessage
  isExternal: false
  name: Headers
  nameWithType: MailMessage.Headers
  fullName: System.Net.Mail.MailMessage.Headers
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Net.Mail.MailMessage.HeadersEncoding
  parent: System.Net.Mail.MailMessage
  isExternal: false
  name: HeadersEncoding
  nameWithType: MailMessage.HeadersEncoding
  fullName: System.Net.Mail.MailMessage.HeadersEncoding
- uid: System.Net.Mail.MailMessage.IsBodyHtml
  parent: System.Net.Mail.MailMessage
  isExternal: false
  name: IsBodyHtml
  nameWithType: MailMessage.IsBodyHtml
  fullName: System.Net.Mail.MailMessage.IsBodyHtml
- uid: System.Net.Mail.MailMessage.Priority
  parent: System.Net.Mail.MailMessage
  isExternal: false
  name: Priority
  nameWithType: MailMessage.Priority
  fullName: System.Net.Mail.MailMessage.Priority
- uid: System.Net.Mail.MailPriority
  parent: System.Net.Mail
  isExternal: false
  name: MailPriority
  nameWithType: MailPriority
  fullName: System.Net.Mail.MailPriority
- uid: System.Net.Mail.MailMessage.ReplyTo
  parent: System.Net.Mail.MailMessage
  isExternal: false
  name: ReplyTo
  nameWithType: MailMessage.ReplyTo
  fullName: System.Net.Mail.MailMessage.ReplyTo
- uid: System.Net.Mail.MailMessage.ReplyToList
  parent: System.Net.Mail.MailMessage
  isExternal: false
  name: ReplyToList
  nameWithType: MailMessage.ReplyToList
  fullName: System.Net.Mail.MailMessage.ReplyToList
- uid: System.Net.Mail.MailMessage.Sender
  parent: System.Net.Mail.MailMessage
  isExternal: false
  name: Sender
  nameWithType: MailMessage.Sender
  fullName: System.Net.Mail.MailMessage.Sender
- uid: System.Net.Mail.MailMessage.Subject
  parent: System.Net.Mail.MailMessage
  isExternal: false
  name: Subject
  nameWithType: MailMessage.Subject
  fullName: System.Net.Mail.MailMessage.Subject
- uid: System.Net.Mail.MailMessage.SubjectEncoding
  parent: System.Net.Mail.MailMessage
  isExternal: false
  name: SubjectEncoding
  nameWithType: MailMessage.SubjectEncoding
  fullName: System.Net.Mail.MailMessage.SubjectEncoding
- uid: System.Net.Mail.MailMessage.To
  parent: System.Net.Mail.MailMessage
  isExternal: false
  name: To
  nameWithType: MailMessage.To
  fullName: System.Net.Mail.MailMessage.To
- uid: System.Net.Mail.MailMessage.#ctor*
  parent: System.Net.Mail.MailMessage
  isExternal: false
  name: MailMessage
  nameWithType: MailMessage.MailMessage
- uid: System.Net.Mail.MailMessage.AlternateViews*
  parent: System.Net.Mail.MailMessage
  isExternal: false
  name: AlternateViews
  nameWithType: MailMessage.AlternateViews
- uid: System.Net.Mail.MailMessage.Attachments*
  parent: System.Net.Mail.MailMessage
  isExternal: false
  name: Attachments
  nameWithType: MailMessage.Attachments
- uid: System.Net.Mail.MailMessage.Bcc*
  parent: System.Net.Mail.MailMessage
  isExternal: false
  name: Bcc
  nameWithType: MailMessage.Bcc
- uid: System.Net.Mail.MailMessage.Body*
  parent: System.Net.Mail.MailMessage
  isExternal: false
  name: Body
  nameWithType: MailMessage.Body
- uid: System.Net.Mail.MailMessage.BodyEncoding*
  parent: System.Net.Mail.MailMessage
  isExternal: false
  name: BodyEncoding
  nameWithType: MailMessage.BodyEncoding
- uid: System.Net.Mail.MailMessage.BodyTransferEncoding*
  parent: System.Net.Mail.MailMessage
  isExternal: false
  name: BodyTransferEncoding
  nameWithType: MailMessage.BodyTransferEncoding
- uid: System.Net.Mail.MailMessage.CC*
  parent: System.Net.Mail.MailMessage
  isExternal: false
  name: CC
  nameWithType: MailMessage.CC
- uid: System.Net.Mail.MailMessage.DeliveryNotificationOptions*
  parent: System.Net.Mail.MailMessage
  isExternal: false
  name: DeliveryNotificationOptions
  nameWithType: MailMessage.DeliveryNotificationOptions
- uid: System.Net.Mail.MailMessage.Dispose*
  parent: System.Net.Mail.MailMessage
  isExternal: false
  name: Dispose
  nameWithType: MailMessage.Dispose
- uid: System.Net.Mail.MailMessage.From*
  parent: System.Net.Mail.MailMessage
  isExternal: false
  name: From
  nameWithType: MailMessage.From
- uid: System.Net.Mail.MailMessage.Headers*
  parent: System.Net.Mail.MailMessage
  isExternal: false
  name: Headers
  nameWithType: MailMessage.Headers
- uid: System.Net.Mail.MailMessage.HeadersEncoding*
  parent: System.Net.Mail.MailMessage
  isExternal: false
  name: HeadersEncoding
  nameWithType: MailMessage.HeadersEncoding
- uid: System.Net.Mail.MailMessage.IsBodyHtml*
  parent: System.Net.Mail.MailMessage
  isExternal: false
  name: IsBodyHtml
  nameWithType: MailMessage.IsBodyHtml
- uid: System.Net.Mail.MailMessage.Priority*
  parent: System.Net.Mail.MailMessage
  isExternal: false
  name: Priority
  nameWithType: MailMessage.Priority
- uid: System.Net.Mail.MailMessage.ReplyTo*
  parent: System.Net.Mail.MailMessage
  isExternal: false
  name: ReplyTo
  nameWithType: MailMessage.ReplyTo
- uid: System.Net.Mail.MailMessage.ReplyToList*
  parent: System.Net.Mail.MailMessage
  isExternal: false
  name: ReplyToList
  nameWithType: MailMessage.ReplyToList
- uid: System.Net.Mail.MailMessage.Sender*
  parent: System.Net.Mail.MailMessage
  isExternal: false
  name: Sender
  nameWithType: MailMessage.Sender
- uid: System.Net.Mail.MailMessage.Subject*
  parent: System.Net.Mail.MailMessage
  isExternal: false
  name: Subject
  nameWithType: MailMessage.Subject
- uid: System.Net.Mail.MailMessage.SubjectEncoding*
  parent: System.Net.Mail.MailMessage
  isExternal: false
  name: SubjectEncoding
  nameWithType: MailMessage.SubjectEncoding
- uid: System.Net.Mail.MailMessage.To*
  parent: System.Net.Mail.MailMessage
  isExternal: false
  name: To
  nameWithType: MailMessage.To
