### YamlMime:ManagedReference
items:
- uid: System.Web.UI.Design.TypeSchema
  id: TypeSchema
  children:
  - System.Web.UI.Design.TypeSchema.#ctor(System.Type)
  - System.Web.UI.Design.TypeSchema.GetViews
  langs:
  - csharp
  name: TypeSchema
  nameWithType: TypeSchema
  fullName: System.Web.UI.Design.TypeSchema
  type: Class
  summary: "代表結構描述的物件型別。"
  remarks: "TypeSchema 類別提供特定的類別，該類別的執行個體的相關資訊。 例如，假設<xref:System.Data.DataSet>物件<xref:System.Web.UI.WebControls.GridView>物件或您所建立的自訂類別、 方法和屬性的執行個體提供的類別從中衍生之物件的相關資訊。</xref:System.Web.UI.WebControls.GridView> </xref:System.Data.DataSet> 它不會提供有關特定執行個體，但類別的相關資訊。       TypeSchema 類別可由自訂控制項設計工具來協助您準備預覽自訂控制項的範例資料。"
  syntax:
    content: 'public sealed class TypeSchema : System.Web.UI.Design.IDataSourceSchema'
  inheritance:
  - System.Object
  implements:
  - System.Web.UI.Design.IDataSourceSchema
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.Design.TypeSchema.#ctor(System.Type)
  id: '#ctor(System.Type)'
  parent: System.Web.UI.Design.TypeSchema
  langs:
  - csharp
  name: TypeSchema(Type)
  nameWithType: TypeSchema.TypeSchema(Type)
  fullName: System.Web.UI.Design.TypeSchema.TypeSchema(Type)
  type: Constructor
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "建立的新執行個體<xref href=&quot;System.Web.UI.Design.TypeSchema&quot;></xref>類別使用提供<xref:System.Type>物件。</xref:System.Type>"
  syntax:
    content: public TypeSchema (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "A<xref:System.Type>所描述的物件。</xref:System.Type>"
  overload: System.Web.UI.Design.TypeSchema.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>type</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.Design.TypeSchema.GetViews
  id: GetViews
  parent: System.Web.UI.Design.TypeSchema
  langs:
  - csharp
  name: GetViews()
  nameWithType: TypeSchema.GetViews()
  fullName: System.Web.UI.Design.TypeSchema.GetViews()
  type: Method
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "取得資料來源檢視的結構描述的描述項的陣列。"
  remarks: "雖然 GetViews 方法一律會傳回的<xref:System.Web.UI.Design.IDataSourceViewSchema>物件實作的<xref:System.Web.UI.Design.IDataSourceViewSchema>介面，精確傳回值是取決於建立<xref:System.Web.UI.Design.TypeSchema>類別</xref:System.Web.UI.Design.TypeSchema>的執行個體時提供的物件</xref:System.Web.UI.Design.IDataSourceViewSchema></xref:System.Web.UI.Design.IDataSourceViewSchema>陣列       下表提供傳回值的範例。      |基礎類型 |傳回值 |  |---------------------|------------------|  |A <xref:System.Data.DataSet>|<xref:System.Web.UI.Design.DataSetViewSchema>類型的陣列，一個用於每個<xref:System.Data.DataTable>。 |  |A <xref:System.Data.DataTable>|一個項目的陣列，包含<xref:System.Web.UI.Design.DataSetViewSchema>。 |  |<xref:System.Collections.IEnumerable>類型 |一個項目的陣列，包含<xref:System.Web.UI.Design.IDataSourceViewSchema>。 |  |任何其他類型 |一個項目的陣列，包含<xref:System.Web.UI.Design.IDataSourceViewSchema>。 |</xref:System.Web.UI.Design.IDataSourceViewSchema> </xref:System.Web.UI.Design.IDataSourceViewSchema> </xref:System.Collections.IEnumerable> </xref:System.Web.UI.Design.DataSetViewSchema> </xref:System.Data.DataTable> </xref:System.Data.DataTable> </xref:System.Web.UI.Design.DataSetViewSchema> </xref:System.Data.DataSet>"
  syntax:
    content: public System.Web.UI.Design.IDataSourceViewSchema[] GetViews ();
    parameters: []
    return:
      type: System.Web.UI.Design.IDataSourceViewSchema[]
      description: "執行個體的陣列<xref href=&quot;System.Web.UI.Design.IDataSourceViewSchema&quot;> </xref>，或實作類別的執行個體<xref href=&quot;System.Web.UI.Design.IDataSourceViewSchema&quot;></xref>介面。"
  overload: System.Web.UI.Design.TypeSchema.GetViews*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.UI.Design.TypeSchema.#ctor(System.Type)
  parent: System.Web.UI.Design.TypeSchema
  isExternal: false
  name: TypeSchema(Type)
  nameWithType: TypeSchema.TypeSchema(Type)
  fullName: System.Web.UI.Design.TypeSchema.TypeSchema(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.UI.Design.TypeSchema.GetViews
  parent: System.Web.UI.Design.TypeSchema
  isExternal: false
  name: GetViews()
  nameWithType: TypeSchema.GetViews()
  fullName: System.Web.UI.Design.TypeSchema.GetViews()
- uid: System.Web.UI.Design.IDataSourceViewSchema[]
  parent: System.Web.UI.Design
  isExternal: false
  name: IDataSourceViewSchema
  nameWithType: IDataSourceViewSchema
  fullName: System.Web.UI.Design.IDataSourceViewSchema[]
  spec.csharp:
  - uid: System.Web.UI.Design.IDataSourceViewSchema
    name: IDataSourceViewSchema
    nameWithType: IDataSourceViewSchema
    fullName: IDataSourceViewSchema[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.UI.Design.TypeSchema.#ctor*
  parent: System.Web.UI.Design.TypeSchema
  isExternal: false
  name: TypeSchema
  nameWithType: TypeSchema.TypeSchema
- uid: System.Web.UI.Design.TypeSchema.GetViews*
  parent: System.Web.UI.Design.TypeSchema
  isExternal: false
  name: GetViews
  nameWithType: TypeSchema.GetViews
