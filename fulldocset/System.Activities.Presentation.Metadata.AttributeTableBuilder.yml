### YamlMime:ManagedReference
items:
- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder
  id: AttributeTableBuilder
  children:
  - System.Activities.Presentation.Metadata.AttributeTableBuilder.#ctor
  - System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback(System.Type,System.Activities.Presentation.Metadata.AttributeCallback)
  - System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(System.Type,System.Attribute[])
  - System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(System.Type,System.ComponentModel.MemberDescriptor,System.Attribute[])
  - System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(System.Type,System.Reflection.MemberInfo,System.Attribute[])
  - System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(System.Type,System.String,System.Attribute[])
  - System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(System.Type,System.Windows.DependencyProperty,System.Attribute[])
  - System.Activities.Presentation.Metadata.AttributeTableBuilder.AddTable(System.Activities.Presentation.Metadata.AttributeTable)
  - System.Activities.Presentation.Metadata.AttributeTableBuilder.CreateTable
  - System.Activities.Presentation.Metadata.AttributeTableBuilder.ValidateTable
  langs:
  - csharp
  name: AttributeTableBuilder
  nameWithType: AttributeTableBuilder
  fullName: System.Activities.Presentation.Metadata.AttributeTableBuilder
  type: Class
  summary: "建立及擴展<xref href=&quot;System.Activities.Presentation.Metadata.AttributeTable&quot;> </xref> ，會由<xref href=&quot;System.Activities.Presentation.Metadata.MetadataStore&quot;></xref>提供屬性查閱和註冊。"
  remarks: "使用<xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback%2A>， <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes%2A>，和<xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddTable%2A>填入產生器，然後呼叫<xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.CreateTable%2A>取得<xref:System.Activities.Presentation.Metadata.AttributeTable>包含所需的屬性集合。</xref:System.Activities.Presentation.Metadata.AttributeTable> </xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.CreateTable%2A> </xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddTable%2A> </xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes%2A> </xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback%2A>"
  example:
  - '[!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]'
  syntax:
    content: public class AttributeTableBuilder
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.#ctor
  id: '#ctor'
  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder
  langs:
  - csharp
  name: AttributeTableBuilder()
  nameWithType: AttributeTableBuilder.AttributeTableBuilder()
  fullName: System.Activities.Presentation.Metadata.AttributeTableBuilder.AttributeTableBuilder()
  type: Constructor
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Metadata
  summary: "建立的新執行個體<xref href=&quot;System.Activities.Presentation.Metadata.AttributeTableBuilder&quot;></xref>類別。"
  syntax:
    content: public AttributeTableBuilder ();
    parameters: []
  overload: System.Activities.Presentation.Metadata.AttributeTableBuilder.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback(System.Type,System.Activities.Presentation.Metadata.AttributeCallback)
  id: AddCallback(System.Type,System.Activities.Presentation.Metadata.AttributeCallback)
  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder
  langs:
  - csharp
  name: AddCallback(Type,AttributeCallback)
  nameWithType: AttributeTableBuilder.AddCallback(Type,AttributeCallback)
  fullName: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback(Type,AttributeCallback)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Metadata
  summary: "指定需要給定類型的中繼資料時將會叫用的回呼。"
  remarks: "第一次<xref:System.Activities.Presentation.Metadata.AttributeTable>傳回<xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.CreateTable%2A>查詢的屬性`type`，`callback`呼叫以提供的中繼資料資訊。</xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.CreateTable%2A> </xref:System.Activities.Presentation.Metadata.AttributeTable>"
  syntax:
    content: public void AddCallback (Type type, System.Activities.Presentation.Metadata.AttributeCallback callback);
    parameters:
    - id: type
      type: System.Type
      description: "回呼將提供中繼資料型別。"
    - id: callback
      type: System.Activities.Presentation.Metadata.AttributeCallback
      description: "回呼方法。"
  overload: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(System.Type,System.Attribute[])
  id: AddCustomAttributes(System.Type,System.Attribute[])
  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder
  langs:
  - csharp
  name: AddCustomAttributes(Type,Attribute[])
  nameWithType: AttributeTableBuilder.AddCustomAttributes(Type,Attribute[])
  fullName: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(Type,Attribute[])
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Metadata
  summary: "將提供之屬性的內容加入至這個產生器。"
  remarks: "如果已經包含在產生器中的其他屬性的屬性與發生衝突，加入的最後一個屬性就會取代先前的屬性。       建置大型屬性表格時，使用<xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback%2A>延後建立屬性，直到所需的工作。</xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback%2A>"
  syntax:
    content: public void AddCustomAttributes (Type type, Attribute[] attributes);
    parameters:
    - id: type
      type: System.Type
      description: "要加入至類別層級屬性的類型。"
    - id: attributes
      type: System.Attribute[]
      description: "會加入至產生器的屬性。"
  overload: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>type</code>or <code>attributes</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(System.Type,System.ComponentModel.MemberDescriptor,System.Attribute[])
  id: AddCustomAttributes(System.Type,System.ComponentModel.MemberDescriptor,System.Attribute[])
  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder
  langs:
  - csharp
  name: AddCustomAttributes(Type,MemberDescriptor,Attribute[])
  nameWithType: AttributeTableBuilder.AddCustomAttributes(Type,MemberDescriptor,Attribute[])
  fullName: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(Type,MemberDescriptor,Attribute[])
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Metadata
  summary: "將提供之屬性的內容加入至這個產生器。"
  remarks: "如果已經包含在產生器中的其他屬性的屬性與發生衝突，加入的最後一個屬性就會取代先前的屬性。       建置大型屬性表格時，使用<xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback%2A>延後建立屬性，直到所需的工作。</xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback%2A>"
  syntax:
    content: public void AddCustomAttributes (Type ownerType, System.ComponentModel.MemberDescriptor descriptor, Attribute[] attributes);
    parameters:
    - id: ownerType
      type: System.Type
      description: "包含識別之成員的型別`descriptor`。"
    - id: descriptor
      type: System.ComponentModel.MemberDescriptor
      description: "屬性會加入至事件或屬性資訊。"
    - id: attributes
      type: System.Attribute[]
      description: "會加入至產生器的屬性。"
  overload: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>ownerType</code>, <code>descriptor</code> or <code>attributes</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(System.Type,System.Reflection.MemberInfo,System.Attribute[])
  id: AddCustomAttributes(System.Type,System.Reflection.MemberInfo,System.Attribute[])
  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder
  langs:
  - csharp
  name: AddCustomAttributes(Type,MemberInfo,Attribute[])
  nameWithType: AttributeTableBuilder.AddCustomAttributes(Type,MemberInfo,Attribute[])
  fullName: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(Type,MemberInfo,Attribute[])
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Metadata
  summary: "將提供之屬性的內容加入至這個產生器。"
  remarks: "如果已經包含在產生器中的其他屬性的屬性與發生衝突，加入的最後一個屬性就會取代先前的屬性。       建置大型屬性表格時，使用<xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback%2A>延後建立屬性，直到所需的工作。</xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback%2A>"
  syntax:
    content: public void AddCustomAttributes (Type ownerType, System.Reflection.MemberInfo member, Attribute[] attributes);
    parameters:
    - id: ownerType
      type: System.Type
      description: "包含識別之成員的型別`member`。"
    - id: member
      type: System.Reflection.MemberInfo
      description: "屬性會加入至事件或屬性資訊。"
    - id: attributes
      type: System.Attribute[]
      description: "會加入至產生器的屬性。"
  overload: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>ownerType</code>, <code>member</code> or <code>attributes</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(System.Type,System.String,System.Attribute[])
  id: AddCustomAttributes(System.Type,System.String,System.Attribute[])
  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder
  langs:
  - csharp
  name: AddCustomAttributes(Type,String,Attribute[])
  nameWithType: AttributeTableBuilder.AddCustomAttributes(Type,String,Attribute[])
  fullName: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(Type,String,Attribute[])
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Metadata
  summary: "將提供之屬性的內容加入至這個產生器。"
  remarks: "如果已經包含在產生器中的其他屬性的屬性與發生衝突，加入的最後一個屬性就會取代先前的屬性。       建置大型屬性表格時，使用<xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback%2A>延後建立屬性，直到所需的工作。</xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback%2A>"
  syntax:
    content: public void AddCustomAttributes (Type ownerType, string memberName, Attribute[] attributes);
    parameters:
    - id: ownerType
      type: System.Type
      description: "包含識別之成員的型別`memberName`。"
    - id: memberName
      type: System.String
      description: "屬性會加入至事件或屬性資訊的名稱。"
    - id: attributes
      type: System.Attribute[]
      description: "會加入至產生器的屬性。"
  overload: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>ownerType</code>, <code>memberName</code>, or <code>attributes</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(System.Type,System.Windows.DependencyProperty,System.Attribute[])
  id: AddCustomAttributes(System.Type,System.Windows.DependencyProperty,System.Attribute[])
  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder
  langs:
  - csharp
  name: AddCustomAttributes(Type,DependencyProperty,Attribute[])
  nameWithType: AttributeTableBuilder.AddCustomAttributes(Type,DependencyProperty,Attribute[])
  fullName: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(Type,DependencyProperty,Attribute[])
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Metadata
  summary: "將提供之屬性的內容加入至這個產生器。"
  remarks: "如果已經包含在產生器中的其他屬性的屬性與發生衝突，加入的最後一個屬性就會取代先前的屬性。       建置大型屬性表格時，使用<xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback%2A>延後建立屬性，直到所需的工作。</xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback%2A>"
  syntax:
    content: public void AddCustomAttributes (Type ownerType, System.Windows.DependencyProperty dp, Attribute[] attributes);
    parameters:
    - id: ownerType
      type: System.Type
      description: "包含所識別的相依性的型別`dp`。"
    - id: dp
      type: System.Windows.DependencyProperty
      description: "新增屬性至相依性屬性。"
    - id: attributes
      type: System.Attribute[]
      description: "會加入至產生器的屬性。"
  overload: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>ownerType</code>, <code>dp</code> or <code>attributes</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddTable(System.Activities.Presentation.Metadata.AttributeTable)
  id: AddTable(System.Activities.Presentation.Metadata.AttributeTable)
  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder
  langs:
  - csharp
  name: AddTable(AttributeTable)
  nameWithType: AttributeTableBuilder.AddTable(AttributeTable)
  fullName: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddTable(AttributeTable)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Metadata
  summary: "將提供之屬性表格的內容加入至這個產生器。"
  remarks: "如果已經包含在產生器中的其他屬性的屬性與發生衝突，加入的最後一個屬性就會取代先前的屬性。"
  syntax:
    content: public void AddTable (System.Activities.Presentation.Metadata.AttributeTable table);
    parameters:
    - id: table
      type: System.Activities.Presentation.Metadata.AttributeTable
      description: "來源屬性表格。"
  overload: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddTable*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>table</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.CreateTable
  id: CreateTable
  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder
  langs:
  - csharp
  name: CreateTable()
  nameWithType: AttributeTableBuilder.CreateTable()
  fullName: System.Activities.Presentation.Metadata.AttributeTableBuilder.CreateTable()
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Metadata
  summary: "會建立包含所有透過所提供的屬性定義的屬性表格<xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes*>呼叫。</xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes*>"
  remarks: "資料表是屬性產生器中; 的目前狀態的快照集由後續新增任何屬性<xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes%2A>呼叫不包含資料表中。</xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes%2A>       如果使用了宣告屬性的回呼方法，這些方法不會評估期間 CreateTable。 相反地，此資料表將包含這些回呼，會視需要評估它們。"
  syntax:
    content: public System.Activities.Presentation.Metadata.AttributeTable CreateTable ();
    parameters: []
    return:
      type: System.Activities.Presentation.Metadata.AttributeTable
      description: "<xref href=&quot;System.Activities.Presentation.Metadata.AttributeTable&quot;> </xref>可以傳遞至中繼資料存放區。"
  overload: System.Activities.Presentation.Metadata.AttributeTableBuilder.CreateTable*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.ValidateTable
  id: ValidateTable
  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder
  langs:
  - csharp
  name: ValidateTable()
  nameWithType: AttributeTableBuilder.ValidateTable()
  fullName: System.Activities.Presentation.Metadata.AttributeTableBuilder.ValidateTable()
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Metadata
  summary: "驗證正在建立的屬性表格包含有效的屬性資訊。"
  remarks: "某些覆寫<xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes%2A>無法驗證傳遞給它們的參數值，代表在類別上的有效成員。</xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes%2A> ValidateTable 確認所有自訂屬性的資訊對應到實際的成員。 這個方法可能需要很長的時間才能完成，除非明確需要驗證，否則不建議。"
  syntax:
    content: public void ValidateTable ();
    parameters: []
  overload: System.Activities.Presentation.Metadata.AttributeTableBuilder.ValidateTable*
  exceptions:
  - type: System.Activities.Presentation.Metadata.AttributeTableValidationException
    commentId: T:System.Activities.Presentation.Metadata.AttributeTableValidationException
    description: "資料表的狀態無效。"
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Activities.Presentation.Metadata.AttributeTableValidationException
  parent: System.Activities.Presentation.Metadata
  isExternal: false
  name: AttributeTableValidationException
  nameWithType: AttributeTableValidationException
  fullName: System.Activities.Presentation.Metadata.AttributeTableValidationException
- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.#ctor
  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder
  isExternal: false
  name: AttributeTableBuilder()
  nameWithType: AttributeTableBuilder.AttributeTableBuilder()
  fullName: System.Activities.Presentation.Metadata.AttributeTableBuilder.AttributeTableBuilder()
- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback(System.Type,System.Activities.Presentation.Metadata.AttributeCallback)
  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder
  isExternal: false
  name: AddCallback(Type,AttributeCallback)
  nameWithType: AttributeTableBuilder.AddCallback(Type,AttributeCallback)
  fullName: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback(Type,AttributeCallback)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Activities.Presentation.Metadata.AttributeCallback
  parent: System.Activities.Presentation.Metadata
  isExternal: false
  name: AttributeCallback
  nameWithType: AttributeCallback
  fullName: System.Activities.Presentation.Metadata.AttributeCallback
- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(System.Type,System.Attribute[])
  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder
  isExternal: false
  name: AddCustomAttributes(Type,Attribute[])
  nameWithType: AttributeTableBuilder.AddCustomAttributes(Type,Attribute[])
  fullName: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(Type,Attribute[])
- uid: System.Attribute[]
  parent: System
  isExternal: true
  name: Attribute
  nameWithType: Attribute
  fullName: System.Attribute[]
  spec.csharp:
  - uid: System.Attribute
    name: Attribute
    nameWithType: Attribute
    fullName: Attribute[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(System.Type,System.ComponentModel.MemberDescriptor,System.Attribute[])
  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder
  isExternal: false
  name: AddCustomAttributes(Type,MemberDescriptor,Attribute[])
  nameWithType: AttributeTableBuilder.AddCustomAttributes(Type,MemberDescriptor,Attribute[])
  fullName: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(Type,MemberDescriptor,Attribute[])
- uid: System.ComponentModel.MemberDescriptor
  parent: System.ComponentModel
  isExternal: false
  name: MemberDescriptor
  nameWithType: MemberDescriptor
  fullName: System.ComponentModel.MemberDescriptor
- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(System.Type,System.Reflection.MemberInfo,System.Attribute[])
  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder
  isExternal: false
  name: AddCustomAttributes(Type,MemberInfo,Attribute[])
  nameWithType: AttributeTableBuilder.AddCustomAttributes(Type,MemberInfo,Attribute[])
  fullName: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(Type,MemberInfo,Attribute[])
- uid: System.Reflection.MemberInfo
  parent: System.Reflection
  isExternal: true
  name: MemberInfo
  nameWithType: MemberInfo
  fullName: System.Reflection.MemberInfo
- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(System.Type,System.String,System.Attribute[])
  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder
  isExternal: false
  name: AddCustomAttributes(Type,String,Attribute[])
  nameWithType: AttributeTableBuilder.AddCustomAttributes(Type,String,Attribute[])
  fullName: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(Type,String,Attribute[])
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(System.Type,System.Windows.DependencyProperty,System.Attribute[])
  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder
  isExternal: false
  name: AddCustomAttributes(Type,DependencyProperty,Attribute[])
  nameWithType: AttributeTableBuilder.AddCustomAttributes(Type,DependencyProperty,Attribute[])
  fullName: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(Type,DependencyProperty,Attribute[])
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddTable(System.Activities.Presentation.Metadata.AttributeTable)
  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder
  isExternal: false
  name: AddTable(AttributeTable)
  nameWithType: AttributeTableBuilder.AddTable(AttributeTable)
  fullName: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddTable(AttributeTable)
- uid: System.Activities.Presentation.Metadata.AttributeTable
  parent: System.Activities.Presentation.Metadata
  isExternal: false
  name: AttributeTable
  nameWithType: AttributeTable
  fullName: System.Activities.Presentation.Metadata.AttributeTable
- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.CreateTable
  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder
  isExternal: false
  name: CreateTable()
  nameWithType: AttributeTableBuilder.CreateTable()
  fullName: System.Activities.Presentation.Metadata.AttributeTableBuilder.CreateTable()
- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.ValidateTable
  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder
  isExternal: false
  name: ValidateTable()
  nameWithType: AttributeTableBuilder.ValidateTable()
  fullName: System.Activities.Presentation.Metadata.AttributeTableBuilder.ValidateTable()
- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.#ctor*
  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder
  isExternal: false
  name: AttributeTableBuilder
  nameWithType: AttributeTableBuilder.AttributeTableBuilder
- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback*
  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder
  isExternal: false
  name: AddCallback
  nameWithType: AttributeTableBuilder.AddCallback
- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes*
  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder
  isExternal: false
  name: AddCustomAttributes
  nameWithType: AttributeTableBuilder.AddCustomAttributes
- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddTable*
  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder
  isExternal: false
  name: AddTable
  nameWithType: AttributeTableBuilder.AddTable
- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.CreateTable*
  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder
  isExternal: false
  name: CreateTable
  nameWithType: AttributeTableBuilder.CreateTable
- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.ValidateTable*
  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder
  isExternal: false
  name: ValidateTable
  nameWithType: AttributeTableBuilder.ValidateTable
