### YamlMime:ManagedReference
items:
- uid: System.Windows.Input.Manipulation
  id: Manipulation
  children:
  - System.Windows.Input.Manipulation.AddManipulator(System.Windows.UIElement,System.Windows.Input.IManipulator)
  - System.Windows.Input.Manipulation.CompleteManipulation(System.Windows.UIElement)
  - System.Windows.Input.Manipulation.GetManipulationContainer(System.Windows.UIElement)
  - System.Windows.Input.Manipulation.GetManipulationMode(System.Windows.UIElement)
  - System.Windows.Input.Manipulation.GetManipulationPivot(System.Windows.UIElement)
  - System.Windows.Input.Manipulation.IsManipulationActive(System.Windows.UIElement)
  - System.Windows.Input.Manipulation.RemoveManipulator(System.Windows.UIElement,System.Windows.Input.IManipulator)
  - System.Windows.Input.Manipulation.SetManipulationContainer(System.Windows.UIElement,System.Windows.IInputElement)
  - System.Windows.Input.Manipulation.SetManipulationMode(System.Windows.UIElement,System.Windows.Input.ManipulationModes)
  - System.Windows.Input.Manipulation.SetManipulationParameter(System.Windows.UIElement,System.Windows.Input.Manipulations.ManipulationParameters2D)
  - System.Windows.Input.Manipulation.SetManipulationPivot(System.Windows.UIElement,System.Windows.Input.ManipulationPivot)
  - System.Windows.Input.Manipulation.StartInertia(System.Windows.UIElement)
  langs:
  - csharp
  name: Manipulation
  nameWithType: Manipulation
  fullName: System.Windows.Input.Manipulation
  type: Class
  summary: "包含方法取得和更新操作的相關資訊。"
  remarks: "觸控會解譯為套用至物件的實體動作時，就會發生的操作。 在[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]，操作事件會解譯為轉譯、 擴充或旋轉操作的輸入。 您通常互動透過<xref:System.Windows.UIElement>.</xref:System.Windows.UIElement>定義的操作事件的操作 不過，操作類別會定義可讓您操作與互動的靜態方法。       如需操作的詳細資訊，請參閱[輸入概觀](~/add/includes/ajax-current-ext-md.md)。 如需操作回應的應用程式的範例，請參閱[逐步解說︰ 建立您第一個接觸的應用程式](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public static class Manipulation
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Input.Manipulation.AddManipulator(System.Windows.UIElement,System.Windows.Input.IManipulator)
  id: AddManipulator(System.Windows.UIElement,System.Windows.Input.IManipulator)
  parent: System.Windows.Input.Manipulation
  langs:
  - csharp
  name: AddManipulator(UIElement,IManipulator)
  nameWithType: Manipulation.AddManipulator(UIElement,IManipulator)
  fullName: System.Windows.Input.Manipulation.AddManipulator(UIElement,IManipulator)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "將<xref href=&quot;System.Windows.Input.IManipulator&quot;></xref>物件與指定的項目。"
  remarks: "如果`element`已經有與它相關聯的操作`manipulator`加入至現有的操作。 否則，會建立新的操作。"
  syntax:
    content: public static void AddManipulator (System.Windows.UIElement element, System.Windows.Input.IManipulator manipulator);
    parameters:
    - id: element
      type: System.Windows.UIElement
      description: "要與操作工具產生關聯的項目。"
    - id: manipulator
      type: System.Windows.Input.IManipulator
      description: "提供建立或加入至操作的輸入位置的物件。"
  overload: System.Windows.Input.Manipulation.AddManipulator*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>element</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>manipulator</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:System.Windows.UIElement.IsManipulationEnabled*>項目上的屬性是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Windows.UIElement.IsManipulationEnabled*>"
  platform:
  - net462
- uid: System.Windows.Input.Manipulation.CompleteManipulation(System.Windows.UIElement)
  id: CompleteManipulation(System.Windows.UIElement)
  parent: System.Windows.Input.Manipulation
  langs:
  - csharp
  name: CompleteManipulation(UIElement)
  nameWithType: Manipulation.CompleteManipulation(UIElement)
  fullName: System.Windows.Input.Manipulation.CompleteManipulation(UIElement)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "完成指定項目上使用中的操作。 呼叫時，不會再追蹤輸入操作和慣性指定的項目上停止。"
  remarks: "CompleteManipulation 方法呼叫時，<xref:System.Windows.UIElement.ManipulationCompleted>就會引發事件。</xref:System.Windows.UIElement.ManipulationCompleted>"
  syntax:
    content: public static void CompleteManipulation (System.Windows.UIElement element);
    parameters:
    - id: element
      type: System.Windows.UIElement
      description: "可用來完成操作項目。"
  overload: System.Windows.Input.Manipulation.CompleteManipulation*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Manipulation.GetManipulationContainer(System.Windows.UIElement)
  id: GetManipulationContainer(System.Windows.UIElement)
  parent: System.Windows.Input.Manipulation
  langs:
  - csharp
  name: GetManipulationContainer(UIElement)
  nameWithType: Manipulation.GetManipulationContainer(UIElement)
  fullName: System.Windows.Input.Manipulation.GetManipulationContainer(UIElement)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "取得定義來處理座標的容器。"
  syntax:
    content: public static System.Windows.IInputElement GetManipulationContainer (System.Windows.UIElement element);
    parameters:
    - id: element
      type: System.Windows.UIElement
      description: "項目，在其沒有作用中的操作。"
    return:
      type: System.Windows.IInputElement
      description: "定義之座標空間的容器。"
  overload: System.Windows.Input.Manipulation.GetManipulationContainer*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Manipulation.GetManipulationMode(System.Windows.UIElement)
  id: GetManipulationMode(System.Windows.UIElement)
  parent: System.Windows.Input.Manipulation
  langs:
  - csharp
  name: GetManipulationMode(UIElement)
  nameWithType: Manipulation.GetManipulationMode(UIElement)
  fullName: System.Windows.Input.Manipulation.GetManipulationMode(UIElement)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "取得<xref href=&quot;System.Windows.Input.ManipulationModes&quot;></xref>針對指定的項目。"
  syntax:
    content: public static System.Windows.Input.ManipulationModes GetManipulationMode (System.Windows.UIElement element);
    parameters:
    - id: element
      type: System.Windows.UIElement
      description: "要取得的操作模式項目。"
    return:
      type: System.Windows.Input.ManipulationModes
      description: "其中一個列舉值。"
  overload: System.Windows.Input.Manipulation.GetManipulationMode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Manipulation.GetManipulationPivot(System.Windows.UIElement)
  id: GetManipulationPivot(System.Windows.UIElement)
  parent: System.Windows.Input.Manipulation
  langs:
  - csharp
  name: GetManipulationPivot(UIElement)
  nameWithType: Manipulation.GetManipulationPivot(UIElement)
  fullName: System.Windows.Input.Manipulation.GetManipulationPivot(UIElement)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "傳回物件，描述旋轉就會發生與使用者輸入的一個點。"
  syntax:
    content: public static System.Windows.Input.ManipulationPivot GetManipulationPivot (System.Windows.UIElement element);
    parameters:
    - id: element
      type: System.Windows.UIElement
      description: "在其沒有操作項目。"
    return:
      type: System.Windows.Input.ManipulationPivot
      description: "物件，描述旋轉就會發生與使用者輸入的一個點。"
  overload: System.Windows.Input.Manipulation.GetManipulationPivot*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Manipulation.IsManipulationActive(System.Windows.UIElement)
  id: IsManipulationActive(System.Windows.UIElement)
  parent: System.Windows.Input.Manipulation
  langs:
  - csharp
  name: IsManipulationActive(UIElement)
  nameWithType: Manipulation.IsManipulationActive(UIElement)
  fullName: System.Windows.Input.Manipulation.IsManipulationActive(UIElement)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "取得值，指出是否與指定的項目相關聯的操作。"
  syntax:
    content: public static bool IsManipulationActive (System.Windows.UIElement element);
    parameters:
    - id: element
      type: System.Windows.UIElement
      description: "要檢查的項目。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果操作是與指定的項目; 相關聯否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Input.Manipulation.IsManipulationActive*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Manipulation.RemoveManipulator(System.Windows.UIElement,System.Windows.Input.IManipulator)
  id: RemoveManipulator(System.Windows.UIElement,System.Windows.Input.IManipulator)
  parent: System.Windows.Input.Manipulation
  langs:
  - csharp
  name: RemoveManipulator(UIElement,IManipulator)
  nameWithType: Manipulation.RemoveManipulator(UIElement,IManipulator)
  fullName: System.Windows.Input.Manipulation.RemoveManipulator(UIElement,IManipulator)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "移除之間指定關聯<xref href=&quot;System.Windows.Input.IManipulator&quot;></xref>物件和項目。"
  syntax:
    content: public static void RemoveManipulator (System.Windows.UIElement element, System.Windows.Input.IManipulator manipulator);
    parameters:
    - id: element
      type: System.Windows.UIElement
      description: "若要移除相關聯的操作工具，從項目。"
    - id: manipulator
      type: System.Windows.Input.IManipulator
      description: "提供的輸入位置的物件。"
  overload: System.Windows.Input.Manipulation.RemoveManipulator*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Manipulation.SetManipulationContainer(System.Windows.UIElement,System.Windows.IInputElement)
  id: SetManipulationContainer(System.Windows.UIElement,System.Windows.IInputElement)
  parent: System.Windows.Input.Manipulation
  langs:
  - csharp
  name: SetManipulationContainer(UIElement,IInputElement)
  nameWithType: Manipulation.SetManipulationContainer(UIElement,IInputElement)
  fullName: System.Windows.Input.Manipulation.SetManipulationContainer(UIElement,IInputElement)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "設定此元素會定義所指定項目的操作的座標。"
  syntax:
    content: public static void SetManipulationContainer (System.Windows.UIElement element, System.Windows.IInputElement container);
    parameters:
    - id: element
      type: System.Windows.UIElement
      description: "與操作相關聯的項目。"
    - id: container
      type: System.Windows.IInputElement
      description: "定義之座標空間的容器。"
  overload: System.Windows.Input.Manipulation.SetManipulationContainer*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Manipulation.SetManipulationMode(System.Windows.UIElement,System.Windows.Input.ManipulationModes)
  id: SetManipulationMode(System.Windows.UIElement,System.Windows.Input.ManipulationModes)
  parent: System.Windows.Input.Manipulation
  langs:
  - csharp
  name: SetManipulationMode(UIElement,ManipulationModes)
  nameWithType: Manipulation.SetManipulationMode(UIElement,ManipulationModes)
  fullName: System.Windows.Input.Manipulation.SetManipulationMode(UIElement,ManipulationModes)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "設定指定項目的操作模式。"
  syntax:
    content: public static void SetManipulationMode (System.Windows.UIElement element, System.Windows.Input.ManipulationModes mode);
    parameters:
    - id: element
      type: System.Windows.UIElement
      description: "要設定的操作模式項目。"
    - id: mode
      type: System.Windows.Input.ManipulationModes
      description: "新的操作模式。"
  overload: System.Windows.Input.Manipulation.SetManipulationMode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Manipulation.SetManipulationParameter(System.Windows.UIElement,System.Windows.Input.Manipulations.ManipulationParameters2D)
  id: SetManipulationParameter(System.Windows.UIElement,System.Windows.Input.Manipulations.ManipulationParameters2D)
  parent: System.Windows.Input.Manipulation
  langs:
  - csharp
  name: SetManipulationParameter(UIElement,ManipulationParameters2D)
  nameWithType: Manipulation.SetManipulationParameter(UIElement,ManipulationParameters2D)
  fullName: System.Windows.Input.Manipulation.SetManipulationParameter(UIElement,ManipulationParameters2D)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "將參數加入至指定的項目操作。"
  syntax:
    content: public static void SetManipulationParameter (System.Windows.UIElement element, System.Windows.Input.Manipulations.ManipulationParameters2D parameter);
    parameters:
    - id: element
      type: System.Windows.UIElement
      description: "具有之操作的參數加入至項目。"
    - id: parameter
      type: System.Windows.Input.Manipulations.ManipulationParameters2D
      description: "要加入的參數。"
  overload: System.Windows.Input.Manipulation.SetManipulationParameter*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Manipulation.SetManipulationPivot(System.Windows.UIElement,System.Windows.Input.ManipulationPivot)
  id: SetManipulationPivot(System.Windows.UIElement,System.Windows.Input.ManipulationPivot)
  parent: System.Windows.Input.Manipulation
  langs:
  - csharp
  name: SetManipulationPivot(UIElement,ManipulationPivot)
  nameWithType: Manipulation.SetManipulationPivot(UIElement,ManipulationPivot)
  fullName: System.Windows.Input.Manipulation.SetManipulationPivot(UIElement,ManipulationPivot)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "設定單點管理指定之項目的樞紐。"
  syntax:
    content: public static void SetManipulationPivot (System.Windows.UIElement element, System.Windows.Input.ManipulationPivot pivot);
    parameters:
    - id: element
      type: System.Windows.UIElement
      description: "具有作用中操作的項目。"
    - id: pivot
      type: System.Windows.Input.ManipulationPivot
      description: "物件，描述樞紐。"
  overload: System.Windows.Input.Manipulation.SetManipulationPivot*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Manipulation.StartInertia(System.Windows.UIElement)
  id: StartInertia(System.Windows.UIElement)
  parent: System.Windows.Input.Manipulation
  langs:
  - csharp
  name: StartInertia(UIElement)
  nameWithType: Manipulation.StartInertia(UIElement)
  fullName: System.Windows.Input.Manipulation.StartInertia(UIElement)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "停止處理，並開始進行慣性上指定的項目。"
  syntax:
    content: public static void StartInertia (System.Windows.UIElement element);
    parameters:
    - id: element
      type: System.Windows.UIElement
      description: "要開始進行慣性項目。"
  overload: System.Windows.Input.Manipulation.StartInertia*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Windows.Input.Manipulation.AddManipulator(System.Windows.UIElement,System.Windows.Input.IManipulator)
  parent: System.Windows.Input.Manipulation
  isExternal: false
  name: AddManipulator(UIElement,IManipulator)
  nameWithType: Manipulation.AddManipulator(UIElement,IManipulator)
  fullName: System.Windows.Input.Manipulation.AddManipulator(UIElement,IManipulator)
- uid: System.Windows.UIElement
  parent: System.Windows
  isExternal: false
  name: UIElement
  nameWithType: UIElement
  fullName: System.Windows.UIElement
- uid: System.Windows.Input.IManipulator
  parent: System.Windows.Input
  isExternal: false
  name: IManipulator
  nameWithType: IManipulator
  fullName: System.Windows.Input.IManipulator
- uid: System.Windows.Input.Manipulation.CompleteManipulation(System.Windows.UIElement)
  parent: System.Windows.Input.Manipulation
  isExternal: false
  name: CompleteManipulation(UIElement)
  nameWithType: Manipulation.CompleteManipulation(UIElement)
  fullName: System.Windows.Input.Manipulation.CompleteManipulation(UIElement)
- uid: System.Windows.Input.Manipulation.GetManipulationContainer(System.Windows.UIElement)
  parent: System.Windows.Input.Manipulation
  isExternal: false
  name: GetManipulationContainer(UIElement)
  nameWithType: Manipulation.GetManipulationContainer(UIElement)
  fullName: System.Windows.Input.Manipulation.GetManipulationContainer(UIElement)
- uid: System.Windows.IInputElement
  parent: System.Windows
  isExternal: false
  name: IInputElement
  nameWithType: IInputElement
  fullName: System.Windows.IInputElement
- uid: System.Windows.Input.Manipulation.GetManipulationMode(System.Windows.UIElement)
  parent: System.Windows.Input.Manipulation
  isExternal: false
  name: GetManipulationMode(UIElement)
  nameWithType: Manipulation.GetManipulationMode(UIElement)
  fullName: System.Windows.Input.Manipulation.GetManipulationMode(UIElement)
- uid: System.Windows.Input.ManipulationModes
  parent: System.Windows.Input
  isExternal: false
  name: ManipulationModes
  nameWithType: ManipulationModes
  fullName: System.Windows.Input.ManipulationModes
- uid: System.Windows.Input.Manipulation.GetManipulationPivot(System.Windows.UIElement)
  parent: System.Windows.Input.Manipulation
  isExternal: false
  name: GetManipulationPivot(UIElement)
  nameWithType: Manipulation.GetManipulationPivot(UIElement)
  fullName: System.Windows.Input.Manipulation.GetManipulationPivot(UIElement)
- uid: System.Windows.Input.ManipulationPivot
  parent: System.Windows.Input
  isExternal: false
  name: ManipulationPivot
  nameWithType: ManipulationPivot
  fullName: System.Windows.Input.ManipulationPivot
- uid: System.Windows.Input.Manipulation.IsManipulationActive(System.Windows.UIElement)
  parent: System.Windows.Input.Manipulation
  isExternal: false
  name: IsManipulationActive(UIElement)
  nameWithType: Manipulation.IsManipulationActive(UIElement)
  fullName: System.Windows.Input.Manipulation.IsManipulationActive(UIElement)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Input.Manipulation.RemoveManipulator(System.Windows.UIElement,System.Windows.Input.IManipulator)
  parent: System.Windows.Input.Manipulation
  isExternal: false
  name: RemoveManipulator(UIElement,IManipulator)
  nameWithType: Manipulation.RemoveManipulator(UIElement,IManipulator)
  fullName: System.Windows.Input.Manipulation.RemoveManipulator(UIElement,IManipulator)
- uid: System.Windows.Input.Manipulation.SetManipulationContainer(System.Windows.UIElement,System.Windows.IInputElement)
  parent: System.Windows.Input.Manipulation
  isExternal: false
  name: SetManipulationContainer(UIElement,IInputElement)
  nameWithType: Manipulation.SetManipulationContainer(UIElement,IInputElement)
  fullName: System.Windows.Input.Manipulation.SetManipulationContainer(UIElement,IInputElement)
- uid: System.Windows.Input.Manipulation.SetManipulationMode(System.Windows.UIElement,System.Windows.Input.ManipulationModes)
  parent: System.Windows.Input.Manipulation
  isExternal: false
  name: SetManipulationMode(UIElement,ManipulationModes)
  nameWithType: Manipulation.SetManipulationMode(UIElement,ManipulationModes)
  fullName: System.Windows.Input.Manipulation.SetManipulationMode(UIElement,ManipulationModes)
- uid: System.Windows.Input.Manipulation.SetManipulationParameter(System.Windows.UIElement,System.Windows.Input.Manipulations.ManipulationParameters2D)
  parent: System.Windows.Input.Manipulation
  isExternal: false
  name: SetManipulationParameter(UIElement,ManipulationParameters2D)
  nameWithType: Manipulation.SetManipulationParameter(UIElement,ManipulationParameters2D)
  fullName: System.Windows.Input.Manipulation.SetManipulationParameter(UIElement,ManipulationParameters2D)
- uid: System.Windows.Input.Manipulations.ManipulationParameters2D
  parent: System.Windows.Input.Manipulations
  isExternal: false
  name: ManipulationParameters2D
  nameWithType: ManipulationParameters2D
  fullName: System.Windows.Input.Manipulations.ManipulationParameters2D
- uid: System.Windows.Input.Manipulation.SetManipulationPivot(System.Windows.UIElement,System.Windows.Input.ManipulationPivot)
  parent: System.Windows.Input.Manipulation
  isExternal: false
  name: SetManipulationPivot(UIElement,ManipulationPivot)
  nameWithType: Manipulation.SetManipulationPivot(UIElement,ManipulationPivot)
  fullName: System.Windows.Input.Manipulation.SetManipulationPivot(UIElement,ManipulationPivot)
- uid: System.Windows.Input.Manipulation.StartInertia(System.Windows.UIElement)
  parent: System.Windows.Input.Manipulation
  isExternal: false
  name: StartInertia(UIElement)
  nameWithType: Manipulation.StartInertia(UIElement)
  fullName: System.Windows.Input.Manipulation.StartInertia(UIElement)
- uid: System.Windows.Input.Manipulation.AddManipulator*
  parent: System.Windows.Input.Manipulation
  isExternal: false
  name: AddManipulator
  nameWithType: Manipulation.AddManipulator
- uid: System.Windows.Input.Manipulation.CompleteManipulation*
  parent: System.Windows.Input.Manipulation
  isExternal: false
  name: CompleteManipulation
  nameWithType: Manipulation.CompleteManipulation
- uid: System.Windows.Input.Manipulation.GetManipulationContainer*
  parent: System.Windows.Input.Manipulation
  isExternal: false
  name: GetManipulationContainer
  nameWithType: Manipulation.GetManipulationContainer
- uid: System.Windows.Input.Manipulation.GetManipulationMode*
  parent: System.Windows.Input.Manipulation
  isExternal: false
  name: GetManipulationMode
  nameWithType: Manipulation.GetManipulationMode
- uid: System.Windows.Input.Manipulation.GetManipulationPivot*
  parent: System.Windows.Input.Manipulation
  isExternal: false
  name: GetManipulationPivot
  nameWithType: Manipulation.GetManipulationPivot
- uid: System.Windows.Input.Manipulation.IsManipulationActive*
  parent: System.Windows.Input.Manipulation
  isExternal: false
  name: IsManipulationActive
  nameWithType: Manipulation.IsManipulationActive
- uid: System.Windows.Input.Manipulation.RemoveManipulator*
  parent: System.Windows.Input.Manipulation
  isExternal: false
  name: RemoveManipulator
  nameWithType: Manipulation.RemoveManipulator
- uid: System.Windows.Input.Manipulation.SetManipulationContainer*
  parent: System.Windows.Input.Manipulation
  isExternal: false
  name: SetManipulationContainer
  nameWithType: Manipulation.SetManipulationContainer
- uid: System.Windows.Input.Manipulation.SetManipulationMode*
  parent: System.Windows.Input.Manipulation
  isExternal: false
  name: SetManipulationMode
  nameWithType: Manipulation.SetManipulationMode
- uid: System.Windows.Input.Manipulation.SetManipulationParameter*
  parent: System.Windows.Input.Manipulation
  isExternal: false
  name: SetManipulationParameter
  nameWithType: Manipulation.SetManipulationParameter
- uid: System.Windows.Input.Manipulation.SetManipulationPivot*
  parent: System.Windows.Input.Manipulation
  isExternal: false
  name: SetManipulationPivot
  nameWithType: Manipulation.SetManipulationPivot
- uid: System.Windows.Input.Manipulation.StartInertia*
  parent: System.Windows.Input.Manipulation
  isExternal: false
  name: StartInertia
  nameWithType: Manipulation.StartInertia
