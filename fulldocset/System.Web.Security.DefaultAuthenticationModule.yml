### YamlMime:ManagedReference
items:
- uid: System.Web.Security.DefaultAuthenticationModule
  id: DefaultAuthenticationModule
  children:
  - System.Web.Security.DefaultAuthenticationModule.#ctor
  - System.Web.Security.DefaultAuthenticationModule.Authenticate
  - System.Web.Security.DefaultAuthenticationModule.Dispose
  - System.Web.Security.DefaultAuthenticationModule.Init(System.Web.HttpApplication)
  langs:
  - csharp
  name: DefaultAuthenticationModule
  nameWithType: DefaultAuthenticationModule
  fullName: System.Web.Security.DefaultAuthenticationModule
  type: Class
  summary: "可確保驗證物件存在於內容中。 這個類別無法被繼承。"
  remarks: "DefaultAuthenticationModule 可確保<xref:System.Web.HttpContext.User%2A>屬性的目前<xref:System.Web.HttpContext>設執行個體<xref:System.Security.Principal.IPrincipal>針對每個要求的物件。</xref:System.Security.Principal.IPrincipal> </xref:System.Web.HttpContext> </xref:System.Web.HttpContext.User%2A> 會檢查 DefaultAuthenticationModule<xref:System.Web.HttpContext.User%2A>屬性之後<xref:System.Web.HttpApplication.AuthenticateRequest>事件之前<xref:System.Web.HttpApplication.AuthorizeRequest>事件。</xref:System.Web.HttpApplication.AuthorizeRequest> </xref:System.Web.HttpApplication.AuthenticateRequest> </xref:System.Web.HttpContext.User%2A> 如果<xref:System.Web.HttpContext.User%2A>屬性是`null`，DefaultAuthenticationModule 集<xref:System.Web.HttpContext.User%2A>屬性<xref:System.Security.Principal.GenericPrincipal>未包含任何使用者資訊的物件。</xref:System.Security.Principal.GenericPrincipal> </xref:System.Web.HttpContext.User%2A> </xref:System.Web.HttpContext.User%2A>       如果設定的驗證模組<xref:System.Web.HttpResponse.StatusCode%2A>屬性為 401，DefaultAuthenticationModule 呈現拒絕存取時的錯誤頁面。</xref:System.Web.HttpResponse.StatusCode%2A> 如果值<xref:System.Web.HttpResponse.StatusCode%2A>屬性設定為值大於 200，DefaultAuthenticationModule 物件將會結束的要求。</xref:System.Web.HttpResponse.StatusCode%2A> 在此情況下，只有 HTTP 模組，這些訂閱<xref:System.Web.HttpApplication.EndRequest>事件會在目前要求完成之前呼叫。</xref:System.Web.HttpApplication.EndRequest>       DefaultAuthenticationModule 公開<xref:System.Web.Security.DefaultAuthenticationModule.Authenticate>事件。</xref:System.Web.Security.DefaultAuthenticationModule.Authenticate> 您可以使用此事件以提供自訂<xref:System.Security.Principal.IPrincipal>物件<xref:System.Web.HttpContext.User%2A>屬性的目前<xref:System.Web.HttpContext>執行個體。</xref:System.Web.HttpContext> </xref:System.Web.HttpContext.User%2A> </xref:System.Security.Principal.IPrincipal> <xref:System.Web.Security.WindowsAuthenticationModule.Authenticate>事件透過指定名為事件**DefaultAuthentication_OnAuthenticate**應用程式的 Global.asax 檔中。</xref:System.Web.Security.WindowsAuthenticationModule.Authenticate>"
  example:
  - "The following example uses the **DefaultAuthentication_OnAuthenticate** event to test whether the <xref:System.Web.HttpContext.User%2A> property of the current <xref:System.Web.HttpContext> instance is `null`. If the <xref:System.Web.HttpContext.User%2A> property is `null`, then the sample sets the <xref:System.Web.HttpContext.User%2A> property of the current <xref:System.Web.HttpContext> instance to a <xref:System.Security.Principal.GenericPrincipal> object where the <xref:System.Security.Principal.GenericPrincipal.Identity%2A> of the <xref:System.Security.Principal.GenericPrincipal> object is a <xref:System.Security.Principal.GenericIdentity> with a <xref:System.Security.Principal.GenericIdentity.Name%2A> value of \"default.\"  \n  \n> [!NOTE]\n>  The **DefaultAuthentication_OnAuthenticate** event is raised before the <xref:System.Web.HttpApplication.AuthorizeRequest> event. As a result, if you set the <xref:System.Web.HttpContext.User%2A> property of the current <xref:System.Web.HttpContext> instance to a custom identity, it can affect the behavior of your application. For example, if you are using the <xref:System.Web.Security.FormsAuthentication> class and you specify `<deny users=\"?\" />` in the  configuration section to ensure that only authenticated users have access to your site, this sample will cause the  element to be ignored, as the user will have a name, which is \"default.\" Instead, you would specify `<deny users=\"default\" />` to ensure that only authenticated users can access your site.  \n  \n [!code-cs[System.Web.Security.DefaultAuthenticationModule#1](~/add/codesnippet/csharp/t-system.web.security.de_1_1.asax)]\n [!code-vb[System.Web.Security.DefaultAuthenticationModule#1](~/add/codesnippet/visualbasic/t-system.web.security.de_1_1.asax)]"
  syntax:
    content: 'public sealed class DefaultAuthenticationModule : System.Web.IHttpModule'
  inheritance:
  - System.Object
  implements:
  - System.Web.IHttpModule
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Security.DefaultAuthenticationModule.#ctor
  id: '#ctor'
  parent: System.Web.Security.DefaultAuthenticationModule
  langs:
  - csharp
  name: DefaultAuthenticationModule()
  nameWithType: DefaultAuthenticationModule.DefaultAuthenticationModule()
  fullName: System.Web.Security.DefaultAuthenticationModule.DefaultAuthenticationModule()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "初始化的新執行個體<xref href=&quot;System.Web.Security.DefaultAuthenticationModule&quot;></xref>類別。"
  remarks: "這個建構函式不是從應用程式程式碼呼叫。       ASP.NET 會呼叫這個建構函式來建立執行個體的<xref:System.Web.Security.DefaultAuthenticationModule>類別。</xref:System.Web.Security.DefaultAuthenticationModule> 在呼叫之後建構函式，它會呼叫<xref:System.Web.Security.DefaultAuthenticationModule.Init%2A>方法來初始化新<xref:System.Web.Security.DefaultAuthenticationModule>物件。</xref:System.Web.Security.DefaultAuthenticationModule> </xref:System.Web.Security.DefaultAuthenticationModule.Init%2A>"
  syntax:
    content: public DefaultAuthenticationModule ();
    parameters: []
  overload: System.Web.Security.DefaultAuthenticationModule.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.DefaultAuthenticationModule.Authenticate
  id: Authenticate
  parent: System.Web.Security.DefaultAuthenticationModule
  langs:
  - csharp
  name: Authenticate
  nameWithType: DefaultAuthenticationModule.Authenticate
  fullName: System.Web.Security.DefaultAuthenticationModule.Authenticate
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "已驗證要求後發生。"
  remarks: "驗證事件引發之後<xref:System.Web.HttpApplication.AuthenticateRequest>事件。</xref:System.Web.HttpApplication.AuthenticateRequest> 它用來確保<xref:System.Web.HttpContext.User%2A>屬性的目前<xref:System.Web.HttpContext>執行個體填入<xref:System.Security.Principal.IPrincipal>物件。</xref:System.Security.Principal.IPrincipal> </xref:System.Web.HttpContext> </xref:System.Web.HttpContext.User%2A>       您可以存取的驗證事件<xref:System.Web.Security.DefaultAuthenticationModule>類別藉由指定名為的副程式**DefaultAuthentication_OnAuthenticate**應用程式的 Global.asax 檔中。</xref:System.Web.Security.DefaultAuthenticationModule>       您可以使用<xref:System.Web.Security.DefaultAuthenticationEventArgs.Context%2A>屬性<xref:System.Web.Security.DefaultAuthenticationEventArgs>物件存放至**DefaultAuthentication_OnAuthenticate**事件設定<xref:System.Web.HttpContext.User%2A>屬性的目前<xref:System.Web.HttpContext>至自訂的執行個體<xref:System.Security.Principal.IPrincipal>物件。</xref:System.Security.Principal.IPrincipal> </xref:System.Web.HttpContext> </xref:System.Web.HttpContext.User%2A> </xref:System.Web.Security.DefaultAuthenticationEventArgs> </xref:System.Web.Security.DefaultAuthenticationEventArgs.Context%2A> 如果您未指定的值<xref:System.Web.HttpContext.User%2A>屬性，<xref:System.Web.Security.DefaultAuthenticationModule>設定<xref:System.Web.HttpContext.User%2A>屬性<xref:System.Web.HttpContext>執行個體<xref:System.Security.Principal.GenericPrincipal>未包含任何使用者資訊的物件。</xref:System.Security.Principal.GenericPrincipal> </xref:System.Web.HttpContext> </xref:System.Web.HttpContext.User%2A> </xref:System.Web.Security.DefaultAuthenticationModule> </xref:System.Web.HttpContext.User%2A>       **DefaultAuthentication_OnAuthenticate**之後引發事件<xref:System.Web.HttpApplication.AuthenticateRequest>事件之前<xref:System.Web.HttpApplication.AuthorizeRequest>事件。</xref:System.Web.HttpApplication.AuthorizeRequest> </xref:System.Web.HttpApplication.AuthenticateRequest> 如果您有可取決於要拒絕或允許存取您的應用程式的使用者名稱的區段，修改<xref:System.Web.HttpContext.User%2A>屬性的目前<xref:System.Web.HttpContext>執行個體可能會影響應用程式的行為。</xref:System.Web.HttpContext> </xref:System.Web.HttpContext.User%2A> 務必讓您設定期間的使用者名稱**DefaultAuthentication_OnAuthenticate**事件會被視為當組態中指定的區段。      > [!NOTE] > 如果 Web 應用程式正在執行 IIS 7.0 中，在整合式模式中，驗證事件的<xref:System.Web.Security.DefaultAuthenticationModule>就不會引發。</xref:System.Web.Security.DefaultAuthenticationModule> 如果`mode`屬性的組態項目設為 [無]，然後驗證事件，應用程式訂閱<xref:System.PlatformNotSupportedException>就會引發錯誤。</xref:System.PlatformNotSupportedException> 在此案例中，若要收到驗證通知，訂閱<xref:System.Web.HttpApplication.AuthenticateRequest>事件<xref:System.Web.HttpApplication>執行個體。</xref:System.Web.HttpApplication> </xref:System.Web.HttpApplication.AuthenticateRequest> 如需相容性問題，以整合模式的詳細資訊，請參閱[從 IIS 6.0 的 ASP.NET 應用程式移轉至 IIS 7.0](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following code example uses the **DefaultAuthentication_OnAuthenticate** event to test whether the <xref:System.Web.HttpContext.User%2A> property of the current <xref:System.Web.HttpContext> instance is `null`. If the <xref:System.Web.HttpContext.User%2A> property is `null`, then the sample sets the <xref:System.Web.HttpContext.User%2A> property of the current <xref:System.Web.HttpContext> instance to a <xref:System.Security.Principal.GenericPrincipal> object where the <xref:System.Security.Principal.GenericPrincipal.Identity%2A> of the <xref:System.Security.Principal.GenericPrincipal> object is a <xref:System.Security.Principal.GenericIdentity> with a <xref:System.Security.Principal.GenericIdentity.Name%2A> value of \"default.\"  \n  \n> [!NOTE]\n>  The **DefaultAuthentication_OnAuthenticate** event is raised before the <xref:System.Web.HttpApplication.AuthorizeRequest> event. As a result, if you set the <xref:System.Web.HttpContext.User%2A> property of the current <xref:System.Web.HttpContext> instance to a custom identity, it can affect the behavior of your application. For example, if you are using the <xref:System.Web.Security.FormsAuthentication> class and you specify `<deny users=\"?\" />` in the  configuration section to ensure that only authenticated users have access to your site, this sample will cause the  element to be ignored, as the user will have a name, which is \"default.\" Instead, you would specify `<deny users=\"default\" />` to ensure that only authenticated users can access your site.  \n  \n [!code-cs[System.Web.Security.DefaultAuthenticationModule#1](~/add/codesnippet/csharp/e-system.web.security.de_1.asax)]\n [!code-vb[System.Web.Security.DefaultAuthenticationModule#1](~/add/codesnippet/visualbasic/e-system.web.security.de_1.asax)]"
  syntax:
    content: public event System.Web.Security.DefaultAuthenticationEventHandler Authenticate;
    return:
      type: System.Web.Security.DefaultAuthenticationEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.DefaultAuthenticationModule.Dispose
  id: Dispose
  parent: System.Web.Security.DefaultAuthenticationModule
  langs:
  - csharp
  name: Dispose()
  nameWithType: DefaultAuthenticationModule.Dispose()
  fullName: System.Web.Security.DefaultAuthenticationModule.Dispose()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "所使用的記憶體之外的所有資源釋都出<xref href=&quot;System.Web.Security.DefaultAuthenticationModule&quot;> </xref>。"
  remarks: "這個方法不是從應用程式程式碼呼叫。"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Web.Security.DefaultAuthenticationModule.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.DefaultAuthenticationModule.Init(System.Web.HttpApplication)
  id: Init(System.Web.HttpApplication)
  parent: System.Web.Security.DefaultAuthenticationModule
  langs:
  - csharp
  name: Init(HttpApplication)
  nameWithType: DefaultAuthenticationModule.Init(HttpApplication)
  fullName: System.Web.Security.DefaultAuthenticationModule.Init(HttpApplication)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "初始化<xref href=&quot;System.Web.Security.DefaultAuthenticationModule&quot;></xref>物件。"
  remarks: "這個方法不是從應用程式程式碼呼叫。       Init 方法可確保<xref:System.Web.Security.DefaultAuthenticationModule>隨附於處理的事件。</xref:System.Web.Security.DefaultAuthenticationModule>"
  syntax:
    content: public void Init (System.Web.HttpApplication app);
    parameters:
    - id: app
      type: System.Web.HttpApplication
      description: "目前<xref href=&quot;System.Web.HttpApplication&quot;></xref>執行個體。"
  overload: System.Web.Security.DefaultAuthenticationModule.Init*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.Security.DefaultAuthenticationModule.#ctor
  parent: System.Web.Security.DefaultAuthenticationModule
  isExternal: false
  name: DefaultAuthenticationModule()
  nameWithType: DefaultAuthenticationModule.DefaultAuthenticationModule()
  fullName: System.Web.Security.DefaultAuthenticationModule.DefaultAuthenticationModule()
- uid: System.Web.Security.DefaultAuthenticationModule.Authenticate
  parent: System.Web.Security.DefaultAuthenticationModule
  isExternal: false
  name: Authenticate
  nameWithType: DefaultAuthenticationModule.Authenticate
  fullName: System.Web.Security.DefaultAuthenticationModule.Authenticate
- uid: System.Web.Security.DefaultAuthenticationEventHandler
  parent: System.Web.Security
  isExternal: false
  name: DefaultAuthenticationEventHandler
  nameWithType: DefaultAuthenticationEventHandler
  fullName: System.Web.Security.DefaultAuthenticationEventHandler
- uid: System.Web.Security.DefaultAuthenticationModule.Dispose
  parent: System.Web.Security.DefaultAuthenticationModule
  isExternal: false
  name: Dispose()
  nameWithType: DefaultAuthenticationModule.Dispose()
  fullName: System.Web.Security.DefaultAuthenticationModule.Dispose()
- uid: System.Web.Security.DefaultAuthenticationModule.Init(System.Web.HttpApplication)
  parent: System.Web.Security.DefaultAuthenticationModule
  isExternal: false
  name: Init(HttpApplication)
  nameWithType: DefaultAuthenticationModule.Init(HttpApplication)
  fullName: System.Web.Security.DefaultAuthenticationModule.Init(HttpApplication)
- uid: System.Web.HttpApplication
  parent: System.Web
  isExternal: false
  name: HttpApplication
  nameWithType: HttpApplication
  fullName: System.Web.HttpApplication
- uid: System.Web.Security.DefaultAuthenticationModule.#ctor*
  parent: System.Web.Security.DefaultAuthenticationModule
  isExternal: false
  name: DefaultAuthenticationModule
  nameWithType: DefaultAuthenticationModule.DefaultAuthenticationModule
- uid: System.Web.Security.DefaultAuthenticationModule.Dispose*
  parent: System.Web.Security.DefaultAuthenticationModule
  isExternal: false
  name: Dispose
  nameWithType: DefaultAuthenticationModule.Dispose
- uid: System.Web.Security.DefaultAuthenticationModule.Init*
  parent: System.Web.Security.DefaultAuthenticationModule
  isExternal: false
  name: Init
  nameWithType: DefaultAuthenticationModule.Init
