### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Channels.SupportedAddressingMode
  id: SupportedAddressingMode
  children:
  - System.ServiceModel.Channels.SupportedAddressingMode.Anonymous
  - System.ServiceModel.Channels.SupportedAddressingMode.Mixed
  - System.ServiceModel.Channels.SupportedAddressingMode.NonAnonymous
  langs:
  - csharp
  name: SupportedAddressingMode
  nameWithType: SupportedAddressingMode
  fullName: System.ServiceModel.Channels.SupportedAddressingMode
  type: Enum
  summary: "指定服務是否支援匿名位址、 只傳送回應，非匿名位址，或兩者。"
  remarks: "這個列舉型別用來指定的伺服器，在加諸至其用戶端上的需求的功能。       [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]有各種不同的定址控制指定訊息應傳送位置。 例如，沒有邏輯<xref:System.ServiceModel.Channels.MessageHeaders.To%2A>訊息目的地的位址、 (&quot;Via&quot;) 使用的傳輸，服務接聽，位址的實體和<xref:System.ServiceModel.Channels.MessageHeaders.ReplyTo%2A>提供用戶端端點位址的端點位址。</xref:System.ServiceModel.Channels.MessageHeaders.ReplyTo%2A> </xref:System.ServiceModel.Channels.MessageHeaders.To%2A>       在最基本的情況下，當兩個合作對象之間交換訊息本身，不需要分別指定這些位址。 但是因為交換可能會包含其他訊息目的地，您必須能指定必須明確提供位址時。 甚至是兩個合作對象之間這項功能，並有時需要，使用雙重 HTTP 時，伺服器必須建立自己的 HTTP 要求。 下列種類的關聯性會列舉所定義 SupportedAddressingMode 來擷取這些訊息模式:-匿名位址是最基本的定址形式。 回應的預設路徑時，便會使用匿名定址。 TCP 是雙向通訊傳輸，而 TCP 訊息的回應可以傳回到傳送原始訊息之通訊端的另一端。 同樣地，HTTP 的要求-回覆模型會傳送回應透過 HTTP 回覆通道。 這些回應都不需要指定將要回應訊息。 當伺服器需要從用戶端的匿名回應時，它會使用匿名的列舉值。 [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]系統提供<xref:System.ServiceModel.NetTcpBinding>，<xref:System.ServiceModel.BasicHttpBinding>和<xref:System.ServiceModel.WSHttpBinding>繫結一定會使用匿名位址。</xref:System.ServiceModel.WSHttpBinding> </xref:System.ServiceModel.BasicHttpBinding> </xref:System.ServiceModel.NetTcpBinding>      -非匿名位址會在傳送回應需要建立新的通道進行通訊時使用。 [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]系統提供<xref:System.ServiceModel.WSDualHttpBinding>繫結會使用非匿名位址。</xref:System.ServiceModel.WSDualHttpBinding> 使用雙重 HTTP 時，用戶端會建立 HTTP 要求來傳送訊息，然後伺服器必須建立自己的 HTTP 要求來傳送回應。 伺服器會初始化該傳送，因為它必須有特定的端點來建立連線。 您必須提供伺服器的端點位址，其回應。 同樣地，如果服務必須回應所收到的單向訊息，也需要 NonAnonymous 位址，因為沒有可用的通訊後通道。 如果伺服器會傳送一則訊息，完全不同的操作，無法用來傳送的第一個訊息所需。      混合是第三種定址其結合了匿名和 NonAnonymous 視正在傳送訊息的位址。 混合模式定址的典型範例是使用專用電腦來處理錯誤或認可訊息。 如果回覆的標準交換順序是 HTTP 或 TCP，回應便會使用匿名定址，但錯誤會使用非匿名定址。 雖然[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]不提供混合模式定址功能，其中一種的標準繫結，就可以撰寫允許服務在傳送回應，直接在返回通道 （當回應位址為匿名） 或不同的通道上 （當回應位址為 NonAnonymous） 的通道。 在這種情況下，通道繫結項目用來為 Mixed setSupportedAddressingMode。"
  syntax:
    content: public enum SupportedAddressingMode
  inheritance:
  - System.Enum
  platform:
  - net462
- uid: System.ServiceModel.Channels.SupportedAddressingMode.Anonymous
  id: Anonymous
  parent: System.ServiceModel.Channels.SupportedAddressingMode
  langs:
  - csharp
  name: Anonymous
  nameWithType: SupportedAddressingMode.Anonymous
  fullName: System.ServiceModel.Channels.SupportedAddressingMode.Anonymous
  type: Field
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "伺服器只支援匿名位址，而且用戶端必須提供匿名回應位址。"
  syntax:
    content: Anonymous
    return:
      type: System.ServiceModel.Channels.SupportedAddressingMode
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.SupportedAddressingMode.Mixed
  id: Mixed
  parent: System.ServiceModel.Channels.SupportedAddressingMode
  langs:
  - csharp
  name: Mixed
  nameWithType: SupportedAddressingMode.Mixed
  fullName: System.ServiceModel.Channels.SupportedAddressingMode.Mixed
  type: Field
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "伺服器支援匿名和非匿名位址，用戶端可以選擇使用其中一個或兩者。"
  syntax:
    content: Mixed
    return:
      type: System.ServiceModel.Channels.SupportedAddressingMode
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.SupportedAddressingMode.NonAnonymous
  id: NonAnonymous
  parent: System.ServiceModel.Channels.SupportedAddressingMode
  langs:
  - csharp
  name: NonAnonymous
  nameWithType: SupportedAddressingMode.NonAnonymous
  fullName: System.ServiceModel.Channels.SupportedAddressingMode.NonAnonymous
  type: Field
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "伺服器只支援非匿名位址，而且用戶端必須提供非匿名回應位址。"
  syntax:
    content: NonAnonymous
    return:
      type: System.ServiceModel.Channels.SupportedAddressingMode
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.ServiceModel.Channels.SupportedAddressingMode.Anonymous
  parent: System.ServiceModel.Channels.SupportedAddressingMode
  isExternal: false
  name: Anonymous
  nameWithType: SupportedAddressingMode.Anonymous
  fullName: System.ServiceModel.Channels.SupportedAddressingMode.Anonymous
- uid: System.ServiceModel.Channels.SupportedAddressingMode
  parent: System.ServiceModel.Channels
  isExternal: false
  name: SupportedAddressingMode
  nameWithType: SupportedAddressingMode
  fullName: System.ServiceModel.Channels.SupportedAddressingMode
- uid: System.ServiceModel.Channels.SupportedAddressingMode.Mixed
  parent: System.ServiceModel.Channels.SupportedAddressingMode
  isExternal: false
  name: Mixed
  nameWithType: SupportedAddressingMode.Mixed
  fullName: System.ServiceModel.Channels.SupportedAddressingMode.Mixed
- uid: System.ServiceModel.Channels.SupportedAddressingMode.NonAnonymous
  parent: System.ServiceModel.Channels.SupportedAddressingMode
  isExternal: false
  name: NonAnonymous
  nameWithType: SupportedAddressingMode.NonAnonymous
  fullName: System.ServiceModel.Channels.SupportedAddressingMode.NonAnonymous
