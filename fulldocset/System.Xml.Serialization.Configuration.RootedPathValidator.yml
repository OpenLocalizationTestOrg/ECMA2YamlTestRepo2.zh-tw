### YamlMime:ManagedReference
items:
- uid: System.Xml.Serialization.Configuration.RootedPathValidator
  id: RootedPathValidator
  children:
  - System.Xml.Serialization.Configuration.RootedPathValidator.#ctor
  - System.Xml.Serialization.Configuration.RootedPathValidator.CanValidate(System.Type)
  - System.Xml.Serialization.Configuration.RootedPathValidator.Validate(System.Object)
  langs:
  - csharp
  name: RootedPathValidator
  nameWithType: RootedPathValidator
  fullName: System.Xml.Serialization.Configuration.RootedPathValidator
  type: Class
  summary: "驗證使用的規則`tempFilesLocation`的組態參數。"
  remarks: "加入時`WebReference`物件中的 Web 服務[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]，建立檔案的 Web 服務探索處理序。       Web 服務用戶端了解如何尋找 Web 服務描述 (WSDL) 文件，藉由新增`WebReference`物件。 Web 服務用戶端然後儲存探索文件至磁碟使用`WriteAll`方法。 例如，探索到的文件可能.xsd 結構描述檔案或服務描述。 在此程序結束時，用戶端刪除的檔案。 您可以變更預設位置的暫存資料夾中的檔案使用`tempFilesLocation`切換移入`<xmlSerializer>`Machine.config 組態檔，如下列範例中所指定的元素。      ```   <configuration>     <system.web>     <system.xml.serialization>       <xmlSerializer tempFilesLocation=&quot;..&quot;/>     </system.xml.serialization>   </configuration>   ```值`tempFilesLocation`必須是絕對路徑。 如果指定的路徑不是絕對的[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]產生<xref:System.Configuration.ConfigurationErrorsException>時參考的組態區段的例外狀況。</xref:System.Configuration.ConfigurationErrorsException>       屬性的值會截斷為移除開頭和尾端空白字元。       如果值`tempFilesLocation`屬性由空白字元組成，預設的 %TMP%位置在進行編譯。 若未，就會發生相同的預設行為`tempFilesLocation`指定參數。       <xref:System.Xml.Serialization.XmlSerializer>不會檢查以查看該路徑是否存在。</xref:System.Xml.Serialization.XmlSerializer> 如果沒有，<xref:System.IO.DirectoryNotFoundException>產生。</xref:System.IO.DirectoryNotFoundException> 這是相同的預設行為`XmlSerializer`如果 %TMP%路徑不存在。"
  syntax:
    content: 'public class RootedPathValidator : System.Configuration.ConfigurationValidatorBase'
  inheritance:
  - System.Object
  - System.Configuration.ConfigurationValidatorBase
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xml.Serialization.Configuration.RootedPathValidator.#ctor
  id: '#ctor'
  parent: System.Xml.Serialization.Configuration.RootedPathValidator
  langs:
  - csharp
  name: RootedPathValidator()
  nameWithType: RootedPathValidator.RootedPathValidator()
  fullName: System.Xml.Serialization.Configuration.RootedPathValidator.RootedPathValidator()
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization.Configuration
  summary: "初始化的新執行個體<xref href=&quot;System.Xml.Serialization.Configuration.RootedPathValidator&quot;></xref>類別。"
  syntax:
    content: public RootedPathValidator ();
    parameters: []
  overload: System.Xml.Serialization.Configuration.RootedPathValidator.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.Configuration.RootedPathValidator.CanValidate(System.Type)
  id: CanValidate(System.Type)
  parent: System.Xml.Serialization.Configuration.RootedPathValidator
  langs:
  - csharp
  name: CanValidate(Type)
  nameWithType: RootedPathValidator.CanValidate(Type)
  fullName: System.Xml.Serialization.Configuration.RootedPathValidator.CanValidate(Type)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization.Configuration
  summary: "判斷是否可以驗證的物件類型。"
  syntax:
    content: public override bool CanValidate (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "物件的類型。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<code> type </code>參數必須符合有效<xref uid=&quot;langword_csharp_XMLSerializer&quot; name=&quot;XMLSerializer&quot; href=&quot;&quot;></xref>物件; 否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Xml.Serialization.Configuration.RootedPathValidator.CanValidate*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.Configuration.RootedPathValidator.Validate(System.Object)
  id: Validate(System.Object)
  parent: System.Xml.Serialization.Configuration.RootedPathValidator
  langs:
  - csharp
  name: Validate(Object)
  nameWithType: RootedPathValidator.Validate(Object)
  fullName: System.Xml.Serialization.Configuration.RootedPathValidator.Validate(Object)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization.Configuration
  summary: "判斷物件的值是否有效。"
  remarks: "`XmlSerializer`當做參數傳遞物件，以驗證`Validate`方法。"
  syntax:
    content: public override void Validate (object value);
    parameters:
    - id: value
      type: System.Object
      description: "物件的值。"
  overload: System.Xml.Serialization.Configuration.RootedPathValidator.Validate*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.ConfigurationValidatorBase
  isExternal: false
  name: System.Configuration.ConfigurationValidatorBase
- uid: System.Xml.Serialization.Configuration.RootedPathValidator.#ctor
  parent: System.Xml.Serialization.Configuration.RootedPathValidator
  isExternal: false
  name: RootedPathValidator()
  nameWithType: RootedPathValidator.RootedPathValidator()
  fullName: System.Xml.Serialization.Configuration.RootedPathValidator.RootedPathValidator()
- uid: System.Xml.Serialization.Configuration.RootedPathValidator.CanValidate(System.Type)
  parent: System.Xml.Serialization.Configuration.RootedPathValidator
  isExternal: false
  name: CanValidate(Type)
  nameWithType: RootedPathValidator.CanValidate(Type)
  fullName: System.Xml.Serialization.Configuration.RootedPathValidator.CanValidate(Type)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Xml.Serialization.Configuration.RootedPathValidator.Validate(System.Object)
  parent: System.Xml.Serialization.Configuration.RootedPathValidator
  isExternal: false
  name: Validate(Object)
  nameWithType: RootedPathValidator.Validate(Object)
  fullName: System.Xml.Serialization.Configuration.RootedPathValidator.Validate(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Xml.Serialization.Configuration.RootedPathValidator.#ctor*
  parent: System.Xml.Serialization.Configuration.RootedPathValidator
  isExternal: false
  name: RootedPathValidator
  nameWithType: RootedPathValidator.RootedPathValidator
- uid: System.Xml.Serialization.Configuration.RootedPathValidator.CanValidate*
  parent: System.Xml.Serialization.Configuration.RootedPathValidator
  isExternal: false
  name: CanValidate
  nameWithType: RootedPathValidator.CanValidate
- uid: System.Xml.Serialization.Configuration.RootedPathValidator.Validate*
  parent: System.Xml.Serialization.Configuration.RootedPathValidator
  isExternal: false
  name: Validate
  nameWithType: RootedPathValidator.Validate
