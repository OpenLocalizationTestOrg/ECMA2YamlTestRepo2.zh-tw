### YamlMime:ManagedReference
items:
- uid: System.GenericUriParser
  id: GenericUriParser
  children:
  - System.GenericUriParser.#ctor(System.GenericUriParserOptions)
  langs:
  - csharp
  name: GenericUriParser
  nameWithType: GenericUriParser
  fullName: System.GenericUriParser
  type: Class
  summary: "階層式 URI 可自訂剖析器。"
  remarks: "如果您想要建立剖析器會根據已知的配置，請使用<xref:System.HttpStyleUriParser>， <xref:System.FtpStyleUriParser>， <xref:System.GopherStyleUriParser>， <xref:System.LdapStyleUriParser>，或<xref:System.NewsStyleUriParser>.</xref:System.NewsStyleUriParser> </xref:System.LdapStyleUriParser> </xref:System.GopherStyleUriParser> </xref:System.FtpStyleUriParser> </xref:System.HttpStyleUriParser>       時建立自訂的剖析器，指定剖析器的行為是藉由傳遞中的可用值的位元組合<xref:System.GenericUriParserOptions?displayProperty=fullName>GenericUriParser 建構函式的列舉。</xref:System.GenericUriParserOptions?displayProperty=fullName>       現有<xref:System.Uri?displayProperty=fullName>類別已經擴充成支援國際資源識別項 (IRI) 和國際化網域名稱 (IDN)。</xref:System.Uri?displayProperty=fullName> 目前的使用者不會看到從.NET Framework 2.0 行為的任何變更，除非它們特別啟用 IRI。 這可確保先前版本的.NET framework 應用程式相容性。       所有衍生自 GenericUriParser 的剖析器無法取得預設 IRI 和 IDN 支援。 <xref:System.GenericUriParserOptions>選項不包括 IRI 和 IDN 支援。</xref:System.GenericUriParserOptions> 兩個新值加入至<xref:System.GenericUriParserOptions?displayProperty=fullName>列舉型別來表示自訂剖析器是否支援 IRI 和 IDN。</xref:System.GenericUriParserOptions?displayProperty=fullName>       如需有關 IRI 和 IDN 支援，請參閱 < 備註 > 一節的<xref:System.Uri?displayProperty=fullName>類別。</xref:System.Uri?displayProperty=fullName>"
  syntax:
    content: 'public class GenericUriParser : UriParser'
  inheritance:
  - System.Object
  - System.UriParser
  implements: []
  inheritedMembers:
  - System.UriParser.GetComponents(System.Uri,System.UriComponents,System.UriFormat)
  - System.UriParser.InitializeAndValidate(System.Uri,System.UriFormatException@)
  - System.UriParser.IsBaseOf(System.Uri,System.Uri)
  - System.UriParser.IsKnownScheme(System.String)
  - System.UriParser.IsWellFormedOriginalString(System.Uri)
  - System.UriParser.OnNewUri
  - System.UriParser.OnRegister(System.String,System.Int32)
  - System.UriParser.Register(System.UriParser,System.String,System.Int32)
  - System.UriParser.Resolve(System.Uri,System.Uri,System.UriFormatException@)
  platform:
  - net462
- uid: System.GenericUriParser.#ctor(System.GenericUriParserOptions)
  id: '#ctor(System.GenericUriParserOptions)'
  parent: System.GenericUriParser
  langs:
  - csharp
  name: GenericUriParser(GenericUriParserOptions)
  nameWithType: GenericUriParser.GenericUriParser(GenericUriParserOptions)
  fullName: System.GenericUriParser.GenericUriParser(GenericUriParserOptions)
  type: Constructor
  assemblies:
  - System
  namespace: System
  summary: "建立自訂的剖析器為階層式的 URI。"
  remarks: "使用這個建構函式的引數為<xref:System.UriParser.Register%28System.UriParser%2CSystem.String%2CSystem.Int32%29?displayProperty=fullName>如果您想要建立剖析器會根據已知的配置，請使用<xref:System.HttpStyleUriParser>， <xref:System.FtpStyleUriParser>， <xref:System.GopherStyleUriParser>， <xref:System.LdapStyleUriParser>，或<xref:System.NewsStyleUriParser>.</xref:System.NewsStyleUriParser> </xref:System.LdapStyleUriParser> </xref:System.GopherStyleUriParser> </xref:System.FtpStyleUriParser> </xref:System.HttpStyleUriParser> </xref:System.UriParser.Register%28System.UriParser%2CSystem.String%2CSystem.Int32%29?displayProperty=fullName>       時建立自訂的剖析器，指定剖析器的行為是藉由傳遞中的可用值的位元組合<xref:System.GenericUriParserOptions?displayProperty=fullName>列舉<xref:System.GenericUriParser>建構函式。</xref:System.GenericUriParser> </xref:System.GenericUriParserOptions?displayProperty=fullName>       現有<xref:System.Uri?displayProperty=fullName>類別已經擴充成支援國際資源識別項 (IRI) 和國際化網域名稱 (IDN)。</xref:System.Uri?displayProperty=fullName> 目前的使用者不會看到從.NET Framework 2.0 行為的任何變更，除非它們特別啟用 IRI。 這可確保先前版本的.NET framework 應用程式相容性。       剖析器，所有衍生自<xref:System.GenericUriParser>預設無法取得 IRI 和 IDN 支援。</xref:System.GenericUriParser> <xref:System.GenericUriParserOptions>選項不包括 IRI 和 IDN 支援。</xref:System.GenericUriParserOptions> 兩個新值加入至<xref:System.GenericUriParserOptions?displayProperty=fullName>列舉型別來表示自訂剖析器是否支援 IRI 和 IDN。</xref:System.GenericUriParserOptions?displayProperty=fullName>       <xref:System.GenericUriParserOptions>類型表示剖析器支援在 RFC 3987 中所指定的國際資源識別項 (IRI) 剖析規則。</xref:System.GenericUriParserOptions> 是否使用 IRI 取決於組態值。       <xref:System.GenericUriParserOptions>類型表示剖析器支援國際化網域名稱 (IDN) 剖析的主機名稱 (IDN)。</xref:System.GenericUriParserOptions> 是否使用 IDN 的取決於組態值。       <xref:System.Configuration.IdnElement?displayProperty=fullName>間接由<xref:System.Configuration.IriParsingElement?displayProperty=fullName>組態設定，控制 IRI<xref:System.Uri?displayProperty=fullName>類別</xref:System.Uri?displayProperty=fullName>中處理</xref:System.Configuration.IriParsingElement?displayProperty=fullName></xref:System.Configuration.IdnElement?displayProperty=fullName>的組態設定 為了能夠處理的 IDN 必須啟用 IRI 處理。 如果 IRI 處理已停用，IDN 處理將會設定為預設設定，其中的.NET Framework 2.0 行為用於相容性，而不會使用 IDN 名稱。       國際化網域名稱 (IDN) 屬性只會控制 IDN 處理。 根據預設，會執行所有其他 IRI 處理 （例如字元正規化）。       如需有關 IRI 和 IDN 支援，請參閱 < 備註 > 一節的<xref:System.Uri?displayProperty=fullName>類別。</xref:System.Uri?displayProperty=fullName>"
  syntax:
    content: public GenericUriParser (GenericUriParserOptions options);
    parameters:
    - id: options
      type: System.GenericUriParserOptions
      description: "指定這個選項<xref href=&quot;System.GenericUriParser&quot;> </xref>。"
  overload: System.GenericUriParser.#ctor*
  exceptions: []
  platform:
  - net462
references:
- uid: System.UriParser
  isExternal: false
  name: System.UriParser
- uid: System.GenericUriParser.#ctor(System.GenericUriParserOptions)
  parent: System.GenericUriParser
  isExternal: false
  name: GenericUriParser(GenericUriParserOptions)
  nameWithType: GenericUriParser.GenericUriParser(GenericUriParserOptions)
  fullName: System.GenericUriParser.GenericUriParser(GenericUriParserOptions)
- uid: System.GenericUriParserOptions
  parent: System
  isExternal: false
  name: GenericUriParserOptions
  nameWithType: GenericUriParserOptions
  fullName: System.GenericUriParserOptions
- uid: System.GenericUriParser.#ctor*
  parent: System.GenericUriParser
  isExternal: false
  name: GenericUriParser
  nameWithType: GenericUriParser.GenericUriParser
