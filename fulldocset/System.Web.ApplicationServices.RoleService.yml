### YamlMime:ManagedReference
items:
- uid: System.Web.ApplicationServices.RoleService
  id: RoleService
  children:
  - System.Web.ApplicationServices.RoleService.#ctor
  - System.Web.ApplicationServices.RoleService.GetRolesForCurrentUser
  - System.Web.ApplicationServices.RoleService.IsCurrentUserInRole(System.String)
  - System.Web.ApplicationServices.RoleService.SelectingProvider
  langs:
  - csharp
  name: RoleService
  nameWithType: RoleService
  fullName: System.Web.ApplicationServices.RoleService
  type: Class
  summary: "啟用 ASP.NET 角色提供者，做為 WCF Web 服務的存取。"
  remarks: "就 roleservice 而言物件可讓您讀取使用者的角色，透過 Windows Communication Foundation (WCF) 服務。 若要使用的角色服務，您必須啟用 Web 伺服器上的角色服務，並再連接到 Web 服務相容的 WCF 用戶端應用程式。 如需如何設定角色服務的資訊，請參閱[How to︰ 啟用 WCF 角色服務](~/add/includes/ajax-current-ext-md.md)。       使用者必須經過驗證才能讀取使用者的角色。 角色服務的運作方式與任何一種 ASP.NET 驗證。 如需如何將記錄中透過 WCF 服務的使用者資訊，請參閱[Windows Communication Foundation 驗證服務概觀](~/add/includes/ajax-current-ext-md.md)。       就 roleservice 而言類別會公開兩種方法，應該只透過 WCF 服務來存取︰<xref:System.Web.ApplicationServices.RoleService.GetRolesForCurrentUser%2A>方法和<xref:System.Web.ApplicationServices.RoleService.IsCurrentUserInRole%2A>方法。</xref:System.Web.ApplicationServices.RoleService.IsCurrentUserInRole%2A> </xref:System.Web.ApplicationServices.RoleService.GetRolesForCurrentUser%2A> <xref:System.Web.ApplicationServices.RoleService.GetRolesForCurrentUser%2A>方法會傳回已登入使用者的所有角色。</xref:System.Web.ApplicationServices.RoleService.GetRolesForCurrentUser%2A> <xref:System.Web.ApplicationServices.RoleService.IsCurrentUserInRole%2A>方法會判斷使用者是否在指定的角色。</xref:System.Web.ApplicationServices.RoleService.IsCurrentUserInRole%2A>       就 roleservice 而言物件引發<xref:System.Web.ApplicationServices.RoleService.SelectingProvider>事件。</xref:System.Web.ApplicationServices.RoleService.SelectingProvider> 您建立的事件處理常式<xref:System.Web.ApplicationServices.RoleService.SelectingProvider>事件，以選取要在執行階段使用角色提供者。</xref:System.Web.ApplicationServices.RoleService.SelectingProvider>       如需如何使用 WCF 的角色服務，從主控台應用程式的範例，請參閱[逐步解說︰ 使用 ASP.NET 應用程式服務](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: >-
      [System.ServiceModel.Activation.AspNetCompatibilityRequirements(RequirementsMode=System.ServiceModel.Activation.AspNetCompatibilityRequirementsMode.Required)]

      [System.ServiceModel.ServiceBehavior(ConcurrencyMode=System.ServiceModel.ConcurrencyMode.Multiple, InstanceContextMode=System.ServiceModel.InstanceContextMode.Single, Namespace="http://asp.net/ApplicationServices/v200")]

      [System.ServiceModel.ServiceContract(Namespace="http://asp.net/ApplicationServices/v200")]

      public class RoleService
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.ApplicationServices.RoleService.#ctor
  id: '#ctor'
  parent: System.Web.ApplicationServices.RoleService
  langs:
  - csharp
  name: RoleService()
  nameWithType: RoleService.RoleService()
  fullName: System.Web.ApplicationServices.RoleService.RoleService()
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ApplicationServices
  summary: "初始化的新執行個體<xref href=&quot;System.Web.ApplicationServices.RoleService&quot;></xref>類別。"
  syntax:
    content: public RoleService ();
    parameters: []
  overload: System.Web.ApplicationServices.RoleService.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ApplicationServices.RoleService.GetRolesForCurrentUser
  id: GetRolesForCurrentUser
  parent: System.Web.ApplicationServices.RoleService
  langs:
  - csharp
  name: GetRolesForCurrentUser()
  nameWithType: RoleService.GetRolesForCurrentUser()
  fullName: System.Web.ApplicationServices.RoleService.GetRolesForCurrentUser()
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ApplicationServices
  summary: "傳回已登入使用者的所有角色。"
  remarks: "GetRolesForCurrentUser 方法會傳回使用者的所有角色。 您必須檢查，或保留來決定哪些資源要供使用者使用的所有使用者的角色時，您可以使用 GetRolesForCurrentUser 方法。 您可以使用這個方法，以避免多次呼叫<xref:System.Web.ApplicationServices.RoleService.IsCurrentUserInRole%2A>方法。</xref:System.Web.ApplicationServices.RoleService.IsCurrentUserInRole%2A>       呼叫 GetRolesForCurrentUser 方法引發<xref:System.Web.ApplicationServices.RoleService.SelectingProvider>事件。</xref:System.Web.ApplicationServices.RoleService.SelectingProvider>      > [!NOTE] > 沒有從 Web 伺服器執行的程式碼呼叫 GetRolesForCurrentUser 方法。 您呼叫 GetRolesForCurrentUser 方法只做為 WCF 服務的一部分。 如需如何讀取網頁伺服器執行的程式碼中的使用者角色的詳細資訊，請參閱<xref:System.Web.Security.Roles.GetRolesForUser%2A>方法。</xref:System.Web.Security.Roles.GetRolesForUser%2A>"
  syntax:
    content: public string[] GetRolesForCurrentUser ();
    parameters: []
    return:
      type: System.String[]
      description: "使用者所屬角色的名稱陣列。"
  overload: System.Web.ApplicationServices.RoleService.GetRolesForCurrentUser*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "未啟用角色管理。"
  platform:
  - net462
- uid: System.Web.ApplicationServices.RoleService.IsCurrentUserInRole(System.String)
  id: IsCurrentUserInRole(System.String)
  parent: System.Web.ApplicationServices.RoleService
  langs:
  - csharp
  name: IsCurrentUserInRole(String)
  nameWithType: RoleService.IsCurrentUserInRole(String)
  fullName: System.Web.ApplicationServices.RoleService.IsCurrentUserInRole(String)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ApplicationServices
  summary: "判斷登入的使用者是否屬於指定的角色。"
  remarks: "IsCurrentUserInRole 方法會檢查登入的使用者是否屬於指定的角色。 IsCurrentUserInRole 方法就會引發<xref:System.Web.ApplicationServices.RoleService.SelectingProvider>事件。</xref:System.Web.ApplicationServices.RoleService.SelectingProvider>      > [!NOTE] > 沒有從 Web 伺服器執行的程式碼呼叫 IsCurrentUserInRole 方法。 您呼叫 IsCurrentUserInRole 方法只做為 WCF 服務的一部分。 如需如何檢查使用者是否屬於指定的群組從 Web 伺服器上執行的程式碼的詳細資訊，請參閱<xref:System.Web.Security.Roles.IsUserInRole%2A>方法。</xref:System.Web.Security.Roles.IsUserInRole%2A>"
  syntax:
    content: public bool IsCurrentUserInRole (string role);
    parameters:
    - id: role
      type: System.String
      description: "要檢查的角色名稱。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果使用者是在指定的角色。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.ApplicationServices.RoleService.IsCurrentUserInRole*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>role</code>是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>或使用者未登入。"
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "未啟用角色管理。"
  platform:
  - net462
- uid: System.Web.ApplicationServices.RoleService.SelectingProvider
  id: SelectingProvider
  parent: System.Web.ApplicationServices.RoleService
  langs:
  - csharp
  name: SelectingProvider
  nameWithType: RoleService.SelectingProvider
  fullName: System.Web.ApplicationServices.RoleService.SelectingProvider
  type: Event
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ApplicationServices
  summary: "發生時<xref href=&quot;System.Web.ApplicationServices.RoleService&quot;></xref>的角色提供者用來檢查使用者的角色執行個體決定。"
  remarks: "<xref:System.Web.ApplicationServices.RoleService>類別引發 SelectingProvider 事件時，它會判斷要用於擷取使用者角色的角色提供者。</xref:System.Web.ApplicationServices.RoleService> 您可以建立要在執行階段選取的角色提供者使用的 SelectingProvider 事件的事件處理常式。"
  example:
  - "The following example shows how to bind an event handler to the SelectingProvider event in the Global.asax file. The event handler determines at run time which role provider to use, based on the user name.  \n  \n [!code-vb[System.Web.Security.SelectingProviderEventHandler#1](~/add/codesnippet/visualbasic/e-system.web.application_3_1.asax)]\n [!code-cs[System.Web.Security.SelectingProviderEventHandler#1](~/add/codesnippet/csharp/e-system.web.application_3_1.asax)]"
  syntax:
    content: public static event EventHandler<System.Web.ApplicationServices.SelectingProviderEventArgs> SelectingProvider;
    return:
      type: System.EventHandler{System.Web.ApplicationServices.SelectingProviderEventArgs}
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Configuration.Provider.ProviderException
  parent: System.Configuration.Provider
  isExternal: false
  name: ProviderException
  nameWithType: ProviderException
  fullName: System.Configuration.Provider.ProviderException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.ApplicationServices.RoleService.#ctor
  parent: System.Web.ApplicationServices.RoleService
  isExternal: false
  name: RoleService()
  nameWithType: RoleService.RoleService()
  fullName: System.Web.ApplicationServices.RoleService.RoleService()
- uid: System.Web.ApplicationServices.RoleService.GetRolesForCurrentUser
  parent: System.Web.ApplicationServices.RoleService
  isExternal: false
  name: GetRolesForCurrentUser()
  nameWithType: RoleService.GetRolesForCurrentUser()
  fullName: System.Web.ApplicationServices.RoleService.GetRolesForCurrentUser()
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.ApplicationServices.RoleService.IsCurrentUserInRole(System.String)
  parent: System.Web.ApplicationServices.RoleService
  isExternal: false
  name: IsCurrentUserInRole(String)
  nameWithType: RoleService.IsCurrentUserInRole(String)
  fullName: System.Web.ApplicationServices.RoleService.IsCurrentUserInRole(String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.ApplicationServices.RoleService.SelectingProvider
  parent: System.Web.ApplicationServices.RoleService
  isExternal: false
  name: SelectingProvider
  nameWithType: RoleService.SelectingProvider
  fullName: System.Web.ApplicationServices.RoleService.SelectingProvider
- uid: System.EventHandler{System.Web.ApplicationServices.SelectingProviderEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<SelectingProviderEventArgs>
  nameWithType: EventHandler<SelectingProviderEventArgs>
  fullName: System.EventHandler<System.Web.ApplicationServices.SelectingProviderEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Web.ApplicationServices.SelectingProviderEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.ApplicationServices.SelectingProviderEventArgs
    name: SelectingProviderEventArgs
    nameWithType: SelectingProviderEventArgs
    fullName: SelectingProviderEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.ApplicationServices.RoleService.#ctor*
  parent: System.Web.ApplicationServices.RoleService
  isExternal: false
  name: RoleService
  nameWithType: RoleService.RoleService
- uid: System.Web.ApplicationServices.RoleService.GetRolesForCurrentUser*
  parent: System.Web.ApplicationServices.RoleService
  isExternal: false
  name: GetRolesForCurrentUser
  nameWithType: RoleService.GetRolesForCurrentUser
- uid: System.Web.ApplicationServices.RoleService.IsCurrentUserInRole*
  parent: System.Web.ApplicationServices.RoleService
  isExternal: false
  name: IsCurrentUserInRole
  nameWithType: RoleService.IsCurrentUserInRole
