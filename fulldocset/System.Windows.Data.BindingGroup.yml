### YamlMime:ManagedReference
items:
- uid: System.Windows.Data.BindingGroup
  id: BindingGroup
  children:
  - System.Windows.Data.BindingGroup.#ctor
  - System.Windows.Data.BindingGroup.BeginEdit
  - System.Windows.Data.BindingGroup.BindingExpressions
  - System.Windows.Data.BindingGroup.CancelEdit
  - System.Windows.Data.BindingGroup.CanRestoreValues
  - System.Windows.Data.BindingGroup.CommitEdit
  - System.Windows.Data.BindingGroup.GetValue(System.Object,System.String)
  - System.Windows.Data.BindingGroup.HasValidationError
  - System.Windows.Data.BindingGroup.IsDirty
  - System.Windows.Data.BindingGroup.Items
  - System.Windows.Data.BindingGroup.Name
  - System.Windows.Data.BindingGroup.NotifyOnValidationError
  - System.Windows.Data.BindingGroup.Owner
  - System.Windows.Data.BindingGroup.SharesProposedValues
  - System.Windows.Data.BindingGroup.TryGetValue(System.Object,System.String,System.Object@)
  - System.Windows.Data.BindingGroup.UpdateSources
  - System.Windows.Data.BindingGroup.ValidatesOnNotifyDataError
  - System.Windows.Data.BindingGroup.ValidateWithoutUpdate
  - System.Windows.Data.BindingGroup.ValidationErrors
  - System.Windows.Data.BindingGroup.ValidationRules
  langs:
  - csharp
  name: BindingGroup
  nameWithType: BindingGroup
  fullName: System.Windows.Data.BindingGroup
  type: Class
  summary: "包含繫結的集合和<xref href=&quot;System.Windows.Controls.ValidationRule&quot;></xref>用來驗證物件的物件。"
  remarks: "某個 BindingGroup 建立多個繫結，會進行驗證並一起更新之間的關聯性。 例如，假設應用程式會提示使用者輸入的位址。 應用程式接著會填入型別的物件`Address`，其中包含屬性， `Street`， `City`， `ZipCode`，和`Country`，與使用者提供的值。 應用程式必須包含四個面板<xref:System.Windows.Controls.TextBox>控制項，其中每一個都是資料繫結至其中一個物件的屬性。</xref:System.Windows.Controls.TextBox> 您可以使用<xref:System.Windows.Controls.ValidationRule>中驗證某個 BindingGroup`Address`物件。</xref:System.Windows.Controls.ValidationRule> 如果繫結參與相同的 BindingGroup，您可以確保，郵遞區號就是有效的地址的國家/地區。       設定<xref:System.Windows.FrameworkElement.BindingGroup%2A><xref:System.Windows.FrameworkElement>或<xref:System.Windows.FrameworkContentElement>.</xref:System.Windows.FrameworkContentElement></xref:System.Windows.FrameworkElement>上屬性</xref:System.Windows.FrameworkElement.BindingGroup%2A> 子項目會 BindingGroup 繼承其父項目，如同任何其他可繼承的屬性。 子系的項目上的繫結會新增至某個 BindingGroup，如果發生下列情況之一:-繫結的來源和<xref:System.Windows.FrameworkElement.DataContext%2A>具有 BindingGroup 的項目是相同的物件和<xref:System.Windows.Data.BindingBase.BindingGroupName%2A>屬性未設定。</xref:System.Windows.Data.BindingBase.BindingGroupName%2A> </xref:System.Windows.FrameworkElement.DataContext%2A>      -<xref:System.Windows.Data.BindingBase.BindingGroupName%2A>繫結屬性等於<xref:System.Windows.Data.BindingGroup.Name%2A>的<xref:System.Windows.FrameworkContentElement.BindingGroup%2A>和未明確設定`null`。</xref:System.Windows.FrameworkContentElement.BindingGroup%2A> </xref:System.Windows.Data.BindingGroup.Name%2A> </xref:System.Windows.Data.BindingBase.BindingGroupName%2A>       在位址的範例中，假設<xref:System.Windows.FrameworkElement.DataContext%2A>的<xref:System.Windows.Controls.Panel>設定類型的物件為`Address`。</xref:System.Windows.Controls.Panel> </xref:System.Windows.FrameworkElement.DataContext%2A> 每個繫結<xref:System.Windows.Controls.TextBox>加入至面板的 BindingGroup。</xref:System.Windows.Controls.TextBox>       您將加入<xref:System.Windows.Controls.ValidationRule>物件以某個 BindingGroup。</xref:System.Windows.Controls.ValidationRule> 當做第一個參數傳遞的 BindingGroup<xref:System.Windows.Controls.ValidationRule.Validate%2A>方法時<xref:System.Windows.Controls.ValidationRule>執行。</xref:System.Windows.Controls.ValidationRule> </xref:System.Windows.Controls.ValidationRule.Validate%2A> 您可以使用<xref:System.Windows.Data.BindingGroup.TryGetValue%2A>或<xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29>方法以取得建議的值的物件，該 BindingGroup 和<xref:System.Windows.Data.BindingGroup.Items%2A>屬性來取得繫結來源。</xref:System.Windows.Data.BindingGroup.Items%2A> </xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29> </xref:System.Windows.Data.BindingGroup.TryGetValue%2A>       某個 BindingGroup 更新在相同的時間，而不是個別更新每個繫結的繫結來源。 當您呼叫其中一個方法來驗證資料 (<xref:System.Windows.Data.BindingGroup.ValidateWithoutUpdate%2A>， <xref:System.Windows.Data.BindingGroup.UpdateSources%2A>，或<xref:System.Windows.Data.BindingGroup.CommitEdit%2A>)，每個繫結<xref:System.Windows.Controls.TextBox>中則是驗證，而且可能更新。</xref:System.Windows.Controls.TextBox> </xref:System.Windows.Data.BindingGroup.CommitEdit%2A> </xref:System.Windows.Data.BindingGroup.UpdateSources%2A> </xref:System.Windows.Data.BindingGroup.ValidateWithoutUpdate%2A> 屬於某個 BindingGroup 繫結時，繫結來源不會更新直到您呼叫<xref:System.Windows.Data.BindingGroup.UpdateSources%2A>或<xref:System.Windows.Data.BindingGroup.CommitEdit%2A>上 BindingGroup，除非您明確設定<xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A>屬性。</xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> </xref:System.Windows.Data.BindingGroup.CommitEdit%2A> </xref:System.Windows.Data.BindingGroup.UpdateSources%2A>"
  example:
  - "The following examples create an application that prompts the user to enter the description and price of an item and the date that the offer expires. The application displays the current information for the item below the form. The user can submit or cancel the changes.  \n  \n The application does the following to achieve this behavior.  \n  \n-   Creates a BindingGroup and adds it the root <xref:System.Windows.Controls.StackPanel> when it creates the [!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)] of the application.  \n  \n-   Calls <xref:System.Windows.Data.BindingGroup.BeginEdit%2A>, <xref:System.Windows.Data.BindingGroup.CommitEdit%2A>, and <xref:System.Windows.Data.BindingGroup.CancelEdit%2A> in the application's logic to enable rolling back changes.  \n  \n-   Calls <xref:System.Windows.Data.BindingGroup.TryGetValue%2A> in a <xref:System.Windows.Controls.ValidationRule.Validate%2A> method to get the user's input and then check that an item over 100 dollars is available for at least seven days.  \n  \n The following example creates the [!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)] of the application. The root <xref:System.Windows.Controls.StackPanel> has a BindingGroup that contains a <xref:System.Windows.Controls.ValidationRule> that validates the item, as described previously. The binding objects on the `Price` property and the `OfferExpires` property become part of the BindingGroup and each binding has a <xref:System.Windows.Controls.ValidationRule> to make sure that price and date, respectively, are valid values. The validation rules for the individual properties run before the <xref:System.Windows.Controls.ValidationRule> on the BindingGroup.  \n  \n [!code-xml[BindingGroupSnippets#WindowLayout](~/add/codesnippet/xaml/BindingGroupSnippets/Window1.xaml#windowlayout)]  \n  \n The following example shows the event handlers for the application. When the user clicks the Submit button, the application calls <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> to run each <xref:System.Windows.Controls.ValidationRule> that is associated with the BindingGroup. If each <xref:System.Windows.Controls.ValidationRule> succeeds, <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> saves the values to the object and ends the edit transaction. If <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> is successful, the application begins another edit transaction. When a <xref:System.Windows.Controls.ValidationRule> fails, the <xref:System.Windows.Controls.Validation.Error?displayProperty=fullName> event occurs because the application set <xref:System.Windows.Data.BindingGroup.NotifyOnValidationError%2A> to `true` on the BindingGroup (in the previous example). `ItemError` handles the <xref:System.Windows.Controls.Validation.Error?displayProperty=fullName> event and displays information about the validation error to the user. The example also handles the <xref:System.Windows.FrameworkElement.Loaded> event for the <xref:System.Windows.Controls.StackPanel> and the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event for the **Cancel** button.  \n  \n [!code-cs[BindingGroupSnippets#WindowLogic](~/add/codesnippet/csharp/BindingGroupSnippets/Window1.xaml.cs#windowlogic)]\n [!code-vb[BindingGroupSnippets#WindowLogic](~/add/codesnippet/visualbasic/bindinggroupsnippets/window1.xaml.vb#windowlogic)]  \n  \n The following example shows the custom <xref:System.Windows.Controls.ValidationRule> `ValidateDateAndPrice`, which was added to the BindingGroup in the first example. The <xref:System.Windows.Controls.ValidationRule> uses the BindingGroup in its <xref:System.Windows.Controls.ValidationRule.Validate%2A> method to get the values the user entered into the form, and checks that if an item is over 100 dollars, it will be available for at least seven days.  \n  \n [!code-cs[BindingGroupSnippets#ValidateObject](~/add/codesnippet/csharp/BindingGroupSnippets/Data.cs#validateobject)]\n [!code-vb[BindingGroupSnippets#ValidateObject](~/add/codesnippet/visualbasic/bindinggroupsnippets/data.vb#validateobject)]"
  syntax:
    content: 'public class BindingGroup : System.Windows.DependencyObject'
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  implements: []
  inheritedMembers:
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.#ctor
  id: '#ctor'
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: BindingGroup()
  nameWithType: BindingGroup.BindingGroup()
  fullName: System.Windows.Data.BindingGroup.BindingGroup()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "初始化的新執行個體<xref href=&quot;System.Windows.Data.BindingGroup&quot;></xref>類別。"
  syntax:
    content: public BindingGroup ();
    parameters: []
  overload: System.Windows.Data.BindingGroup.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.BeginEdit
  id: BeginEdit
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: BeginEdit()
  nameWithType: BindingGroup.BeginEdit()
  fullName: System.Windows.Data.BindingGroup.BeginEdit()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "編輯上開始交易中的來源<xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref>。"
  remarks: "如果在來源<xref:System.Windows.Data.BindingGroup>支援並捨棄暫止的變更，您可以呼叫 BeginEdit 開始編輯異動，呼叫<xref:System.Windows.Data.BindingGroup.CommitEdit%2A>來儲存暫止的變更，請呼叫<xref:System.Windows.Data.BindingGroup.CancelEdit%2A>捨棄暫止的變更。</xref:System.Windows.Data.BindingGroup.CancelEdit%2A> </xref:System.Windows.Data.BindingGroup.CommitEdit%2A> </xref:System.Windows.Data.BindingGroup>       中每個物件<xref:System.Windows.Data.BindingGroup.Items%2A>實作<xref:System.ComponentModel.IEditableObject>，BeginEdit 呼叫<xref:System.ComponentModel.IEditableObject.BeginEdit%2A?displayProperty=fullName></xref:System.ComponentModel.IEditableObject.BeginEdit%2A?displayProperty=fullName></xref:System.ComponentModel.IEditableObject></xref:System.Windows.Data.BindingGroup.Items%2A>"
  example:
  - "The following example calls BeginEdit when a window loads to begin the edit transaction.  \n  \n [!code-cs[BindingGroupSnippets#BeginEdit](~/add/codesnippet/csharp/BindingGroupSnippets/Window1.xaml.cs#beginedit)]\n [!code-vb[BindingGroupSnippets#BeginEdit](~/add/codesnippet/visualbasic/bindinggroupsnippets/window1.xaml.vb#beginedit)]"
  syntax:
    content: public void BeginEdit ();
    parameters: []
  overload: System.Windows.Data.BindingGroup.BeginEdit*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.BindingExpressions
  id: BindingExpressions
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: BindingExpressions
  nameWithType: BindingGroup.BindingExpressions
  fullName: System.Windows.Data.BindingGroup.BindingExpressions
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "取得集合的<xref href=&quot;System.Windows.Data.BindingExpression&quot;></xref>物件，其中包含每個繫結中的資訊<xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref>。"
  remarks: "A<xref:System.Windows.Data.BindingExpression>屬於<xref:System.Windows.Data.BindingGroup>如果發生下列情況之一:-繫結的來源和<xref:System.Windows.FrameworkElement.DataContext%2A>有的項目<xref:System.Windows.Data.BindingGroup>是相同的物件和<xref:System.Windows.Data.BindingBase.BindingGroupName%2A>未設定。</xref:System.Windows.Data.BindingBase.BindingGroupName%2A> </xref:System.Windows.Data.BindingGroup> </xref:System.Windows.FrameworkElement.DataContext%2A> </xref:System.Windows.Data.BindingGroup> </xref:System.Windows.Data.BindingExpression>      -<xref:System.Windows.Data.BindingBase.BindingGroupName%2A>繫結屬性和<xref:System.Windows.Data.BindingGroup.Name%2A>的<xref:System.Windows.Data.BindingGroup>設定為相同的非 null 值和<xref:System.Windows.Data.BindingGroup>所屬之父項目的繫結的目標項目。</xref:System.Windows.Data.BindingGroup> </xref:System.Windows.Data.BindingGroup> </xref:System.Windows.Data.BindingGroup.Name%2A> </xref:System.Windows.Data.BindingBase.BindingGroupName%2A>      -您將加入<xref:System.Windows.Data.BindingExpression>至 BindingExpressions。</xref:System.Windows.Data.BindingExpression>"
  syntax:
    content: public System.Collections.ObjectModel.Collection<System.Windows.Data.BindingExpressionBase> BindingExpressions { get; }
    return:
      type: System.Collections.ObjectModel.Collection{System.Windows.Data.BindingExpressionBase}
      description: "集合<xref href=&quot;System.Windows.Data.BindingExpression&quot;></xref>物件，其中包含每個繫結中的資訊<xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref>。"
  overload: System.Windows.Data.BindingGroup.BindingExpressions*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.CancelEdit
  id: CancelEdit
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: CancelEdit()
  nameWithType: BindingGroup.CancelEdit()
  fullName: System.Windows.Data.BindingGroup.CancelEdit()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "結束編輯異動並捨棄暫止的變更。"
  remarks: "這個方法會導致捨棄暫止的變更，是否能夠執行這項作業的來源物件，並結束編輯異動的來源。 然後方法會使用儲存的來源值更新目標內容。       中每個物件<xref:System.Windows.Data.BindingGroup.Items%2A>實作<xref:System.ComponentModel.IEditableObject>，CancelEdit 呼叫<xref:System.ComponentModel.IEditableObject.CancelEdit%2A?displayProperty=fullName></xref:System.ComponentModel.IEditableObject.CancelEdit%2A?displayProperty=fullName></xref:System.ComponentModel.IEditableObject></xref:System.Windows.Data.BindingGroup.Items%2A>"
  example:
  - "The following example calls CancelEdit to discard the pending changes and then calls <xref:System.Windows.Data.BindingGroup.BeginEdit%2A> to prepare the source to be re-edited.  \n  \n [!code-cs[BindingGroupSnippets#CancelEdit](~/add/codesnippet/csharp/BindingGroupSnippets/Window1.xaml.cs#canceledit)]\n [!code-vb[BindingGroupSnippets#CancelEdit](~/add/codesnippet/visualbasic/bindinggroupsnippets/window1.xaml.vb#canceledit)]"
  syntax:
    content: public void CancelEdit ();
    parameters: []
  overload: System.Windows.Data.BindingGroup.CancelEdit*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.CanRestoreValues
  id: CanRestoreValues
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: CanRestoreValues
  nameWithType: BindingGroup.CanRestoreValues
  fullName: System.Windows.Data.BindingGroup.CanRestoreValues
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "取得是否繫結中的每個來源可以捨棄暫止的變更並還原原始值。"
  remarks: "來源可以捨棄暫止的變更，如果它實作<xref:System.ComponentModel.IEditableObject>.</xref:System.ComponentModel.IEditableObject>"
  syntax:
    content: public bool CanRestoreValues { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果繫結中的每個來源可以捨棄暫止的變更並還原原始的值;否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Data.BindingGroup.CanRestoreValues*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.CommitEdit
  id: CommitEdit
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: CommitEdit()
  nameWithType: BindingGroup.CommitEdit()
  fullName: System.Windows.Data.BindingGroup.CommitEdit()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "執行所有<xref href=&quot;System.Windows.Controls.ValidationRule&quot;></xref>物件，並在成功驗證的所有規則如果更新繫結來源。"
  remarks: "如果每個<xref:System.Windows.Controls.ValidationRule>成功，這個方法會使認可暫止的變更並結束編輯異動，如果來源的來源物件能夠過程</xref:System.Windows.Controls.ValidationRule>       中每個物件<xref:System.Windows.Data.BindingGroup.Items%2A>實作<xref:System.ComponentModel.IEditableObject>，CommitEdit 呼叫<xref:System.ComponentModel.IEditableObject.EndEdit%2A?displayProperty=fullName></xref:System.ComponentModel.IEditableObject.EndEdit%2A?displayProperty=fullName></xref:System.ComponentModel.IEditableObject></xref:System.Windows.Data.BindingGroup.Items%2A>"
  example:
  - "The following example calls CommitEdit to save the pending changes and then calls <xref:System.Windows.Data.BindingGroup.BeginEdit%2A> to prepare the source to be re-edited.  \n  \n [!code-cs[BindingGroupSnippets#BeginEdit](~/add/codesnippet/csharp/BindingGroupSnippets/Window1.xaml.cs#beginedit)]\n [!code-vb[BindingGroupSnippets#BeginEdit](~/add/codesnippet/visualbasic/bindinggroupsnippets/window1.xaml.vb#beginedit)]"
  syntax:
    content: public bool CommitEdit ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果每個<xref href=&quot;System.Windows.Controls.ValidationRule&quot;></xref>成功，值為來源認可，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Data.BindingGroup.CommitEdit*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.GetValue(System.Object,System.String)
  id: GetValue(System.Object,System.String)
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: GetValue(Object,String)
  nameWithType: BindingGroup.GetValue(Object,String)
  fullName: System.Windows.Data.BindingGroup.GetValue(Object,String)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "傳回指定的屬性和項目的建議的值。"
  remarks: "使用這個方法在<xref:System.Windows.Controls.ValidationRule.Validate%2A?displayProperty=fullName>方法來取得值，才能認可至來源。</xref:System.Windows.Controls.ValidationRule.Validate%2A?displayProperty=fullName> 傳回值的類型取決於此時階段<xref:System.Windows.Controls.ValidationRule>，就會發生。</xref:System.Windows.Controls.ValidationRule> 例如，如果<xref:System.Windows.Controls.TextBox>資料繫結至型別整數的屬性和<xref:System.Windows.Controls.ValidationRule>呼叫 GetValue 的其<xref:System.Windows.Controls.ValidationRule.ValidationStep%2A>設<xref:System.Windows.Controls.ValidationStep>，方法會傳回字串。</xref:System.Windows.Controls.ValidationStep> </xref:System.Windows.Controls.ValidationRule.ValidationStep%2A> </xref:System.Windows.Controls.ValidationRule> </xref:System.Windows.Controls.TextBox> 如果<xref:System.Windows.Controls.ValidationRule>具有其<xref:System.Windows.Controls.ValidationRule.ValidationStep%2A>設<xref:System.Windows.Controls.ValidationStep>，方法會傳回任何繫結的轉換器所傳回的類型。</xref:System.Windows.Controls.ValidationStep> </xref:System.Windows.Controls.ValidationRule.ValidationStep%2A> </xref:System.Windows.Controls.ValidationRule> 在此範例中，GetValue 通常會傳回一個整數。"
  example:
  - "The following example is part of an application that prompts the user to enter multiple customers and assign a sales representative to each customer. The application checks that the sales representative and the customer belong to the same region. The example shows the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method, which uses the GetValue method to get values that the customer entered.  \n  \n [!code-cs[BindingGroupSnippets#ItemBindGroupValidationRule](~/add/codesnippet/csharp/BindingGroupSnippets/Window2.xaml.cs#itembindgroupvalidationrule)]\n [!code-vb[BindingGroupSnippets#ItemBindGroupValidationRule](~/add/codesnippet/visualbasic/bindinggroupsnippets/window2.xaml.vb#itembindgroupvalidationrule)]"
  syntax:
    content: public object GetValue (object item, string propertyName);
    parameters:
    - id: item
      type: System.Object
      description: "包含指定之屬性的物件。"
    - id: propertyName
      type: System.String
      description: "此屬性若要取得其建議的值。"
    return:
      type: System.Object
      description: "建議的屬性值。"
  overload: System.Windows.Data.BindingGroup.GetValue*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "不在指定的項目和屬性的繫結。"
  - type: System.Windows.Data.ValueUnavailableException
    commentId: T:System.Windows.Data.ValueUnavailableException
    description: "指定屬性的值不是可用的因為發生轉換錯誤，或先前的驗證規則失敗。"
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.HasValidationError
  id: HasValidationError
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: HasValidationError
  nameWithType: BindingGroup.HasValidationError
  fullName: System.Windows.Data.BindingGroup.HasValidationError
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "取得值，指出是否<xref href=&quot;System.Windows.Data.BindingGroup&quot;></xref>有失敗的驗證規則。"
  syntax:
    content: public bool HasValidationError { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref href=&quot;System.Windows.Data.BindingGroup&quot;></xref>有失敗的驗證規則，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Data.BindingGroup.HasValidationError*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.IsDirty
  id: IsDirty
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: IsDirty
  nameWithType: BindingGroup.IsDirty
  fullName: System.Windows.Data.BindingGroup.IsDirty
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "取得或設定值，指出是否<xref href=&quot;System.Windows.Data.BindingGroup&quot;></xref>包含尚未寫入來源的建議的值。"
  syntax:
    content: public bool IsDirty { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref href=&quot;System.Windows.Data.BindingGroup&quot;></xref>包含建議的值，但尚未寫入至來源，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Data.BindingGroup.IsDirty*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.Items
  id: Items
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: Items
  nameWithType: BindingGroup.Items
  fullName: System.Windows.Data.BindingGroup.Items
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "取得使用中的繫結物件的來源<xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref>。"
  remarks: "當做來源使用的每個物件已加入項目屬性一次，即使物件當做來源使用的多重繫結。 通常，是只在一個項目中的項目，也就是<xref:System.Windows.FrameworkElement.DataContext%2A>使用<xref:System.Windows.Data.BindingGroup>.</xref:System.Windows.Data.BindingGroup>項目的</xref:System.Windows.FrameworkElement.DataContext%2A>物件 可能會<xref:System.Windows.Data.BindingGroup>有多個來源，不過。</xref:System.Windows.Data.BindingGroup> 例如，如果繫結物件共用相同<xref:System.Windows.Data.BindingBase.BindingGroupName%2A>，但使用不同的來源物件，當做來源使用的每個物件中的項目。</xref:System.Windows.Data.BindingBase.BindingGroupName%2A>       可以也有多個物件中的項目如果繫結路徑解析為巢狀屬性的來源。 例如，假設<xref:System.Windows.Controls.TextBox>控制項的繫結所屬<xref:System.Windows.Data.BindingGroup>及其<xref:System.Windows.FrameworkElement.DataContext%2A>是`Customer`，該物件具有型別的屬性`Address`。</xref:System.Windows.FrameworkElement.DataContext%2A> </xref:System.Windows.Data.BindingGroup> </xref:System.Windows.Controls.TextBox> 如果<xref:System.Windows.Data.Binding.Path%2A>的<xref:System.Windows.Data.Binding>是`Address.ZipCode`屬性，`Address`會加入至項目屬性。</xref:System.Windows.Data.Binding> </xref:System.Windows.Data.Binding.Path%2A>"
  example:
  - "The following examples are part of an application that checks whether the user has set the properties of two objects to equal values. The first example creates two <xref:System.Windows.Controls.TextBox> controls, each of which are data bound to a different source. The binding of the first <xref:System.Windows.Controls.TextBox> gets its source, `object1`, from the <xref:System.Windows.FrameworkElement.DataContext%2A> of the <xref:System.Windows.Controls.TextBox> control's parent element (the <xref:System.Windows.Controls.StackPanel>). On the second <xref:System.Windows.Controls.TextBox>, the source of the binding is set to `object2`. The example also creates a <xref:System.Windows.Controls.Label> that displays validation errors.  \n  \n [!code-xml[BindingGroupSnippets#BindingGroupName](~/add/codesnippet/xaml/BindingGroupSnippets/Window3.xaml#bindinggroupname)]  \n[!code-xml[BindingGroupSnippets#ValidationAdornerSite](~/add/codesnippet/xaml/BindingGroupSnippets/Window3.xaml#validationadornersite)]  \n  \n The following example shows the <xref:System.Windows.Controls.ValidationRule> that the previous example uses. In the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method, the example gets each source object from the <xref:System.Windows.Data.BindingGroup> and checks whether the properties of the objects are equal.  \n  \n [!code-cs[BindingGroupSnippets#BindingGroupNameValidationRule](~/add/codesnippet/csharp/BindingGroupSnippets/Window3.xaml.cs#bindinggroupnamevalidationrule)]\n [!code-vb[BindingGroupSnippets#BindingGroupNameValidationRule](~/add/codesnippet/visualbasic/bindinggroupsnippets/window3.xaml.vb#bindinggroupnamevalidationrule)]"
  syntax:
    content: public System.Collections.IList Items { get; }
    return:
      type: System.Collections.IList
      description: "中的繫結物件所使用的來源<xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref>。"
  overload: System.Windows.Data.BindingGroup.Items*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.Name
  id: Name
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: Name
  nameWithType: BindingGroup.Name
  fullName: System.Windows.Data.BindingGroup.Name
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "取得或設定識別的名稱<xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref>，可用來包含或排除在繫結物件<xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref>。"
  remarks: "如果名稱是`null`，是相同的物件為<xref:System.Windows.FrameworkElement.DataContext%2A>具有<xref:System.Windows.Data.BindingGroup>參與<xref:System.Windows.Data.BindingGroup>.</xref:System.Windows.Data.BindingGroup></xref:System.Windows.Data.BindingGroup>的項目之</xref:System.Windows.FrameworkElement.DataContext%2A>來源的繫結       您可以包含有不同的來源的繫結<xref:System.Windows.FrameworkElement.DataContext%2A>有父項目的<xref:System.Windows.Data.BindingGroup>所設定的名稱<xref:System.Windows.Data.BindingGroup>和<xref:System.Windows.Data.BindingBase.BindingGroupName%2A>為相同的值繫結的屬性。</xref:System.Windows.Data.BindingBase.BindingGroupName%2A> </xref:System.Windows.Data.BindingGroup> </xref:System.Windows.Data.BindingGroup> </xref:System.Windows.FrameworkElement.DataContext%2A> 您可以排除具有相同的來源繫結<xref:System.Windows.FrameworkElement.DataContext%2A>有父項目的<xref:System.Windows.Data.BindingGroup>所設定的名稱<xref:System.Windows.Data.BindingGroup>和<xref:System.Windows.Data.BindingBase.BindingGroupName%2A>繫結至不同的值的屬性。</xref:System.Windows.Data.BindingBase.BindingGroupName%2A> </xref:System.Windows.Data.BindingGroup> </xref:System.Windows.Data.BindingGroup> </xref:System.Windows.FrameworkElement.DataContext%2A>"
  example:
  - "The following examples are part of an application that checks whether the user has set the properties of two objects to equal values. The first example creates two <xref:System.Windows.Controls.TextBox> controls, each of which are data bound to a different source. The binding of the first <xref:System.Windows.Controls.TextBox> is part of the <xref:System.Windows.Data.BindingGroup> because the <xref:System.Windows.Controls.TextBox> inherits the <xref:System.Windows.FrameworkElement.DataContext%2A> and <xref:System.Windows.Data.BindingGroup> from its parent <xref:System.Windows.Controls.StackPanel>.  \n  \n The binding on the second <xref:System.Windows.Controls.TextBox> is part of the <xref:System.Windows.Data.BindingGroup> because the Name of the <xref:System.Windows.Data.BindingGroup> and the <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> of the <xref:System.Windows.Data.Binding> are both set to `bindingGroup`.  \n  \n [!code-xml[BindingGroupSnippets#BindingGroupName](~/add/codesnippet/xaml/BindingGroupSnippets/Window3.xaml#bindinggroupname)]  \n[!code-xml[BindingGroupSnippets#ValidationAdornerSite](~/add/codesnippet/xaml/BindingGroupSnippets/Window3.xaml#validationadornersite)]  \n  \n The following example shows the <xref:System.Windows.Controls.ValidationRule> that the previous example uses. In the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method, the example gets each source object from the <xref:System.Windows.Data.BindingGroup> and checks whether the properties of the objects are equal.  \n  \n [!code-cs[BindingGroupSnippets#BindingGroupNameValidationRule](~/add/codesnippet/csharp/BindingGroupSnippets/Window3.xaml.cs#bindinggroupnamevalidationrule)]\n [!code-vb[BindingGroupSnippets#BindingGroupNameValidationRule](~/add/codesnippet/visualbasic/bindinggroupsnippets/window3.xaml.vb#bindinggroupnamevalidationrule)]"
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "識別的名稱<xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref>。"
  overload: System.Windows.Data.BindingGroup.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.NotifyOnValidationError
  id: NotifyOnValidationError
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: NotifyOnValidationError
  nameWithType: BindingGroup.NotifyOnValidationError
  fullName: System.Windows.Data.BindingGroup.NotifyOnValidationError
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "取得或設定是否&lt;xref:System.Windows.Controls.Validation.Error?displayProperty=fullName&gt;就會發生事件時的狀態<xref href=&quot;System.Windows.Controls.ValidationRule&quot;></xref>變更。"
  remarks: "<xref:System.Windows.Controls.Validation.Error?displayProperty=fullName>附加的事件發生在具有<xref:System.Windows.Data.BindingGroup>.</xref:System.Windows.Data.BindingGroup>的項目上</xref:System.Windows.Controls.Validation.Error?displayProperty=fullName>"
  example:
  - "The following example creates a <xref:System.Windows.Data.BindingGroup> and sets NotifyOnValidationError to `true` so that the application can handle the <xref:System.Windows.Controls.Validation.Error?displayProperty=fullName> event when a <xref:System.Windows.Controls.ValidationRule> fails.  \n  \n [!code-xml[BindingGroupSnippets#BindingGroup](~/add/codesnippet/xaml/BindingGroupSnippets/Window1.xaml#bindinggroup)]  \n  \n The following example handles the <xref:System.Windows.Controls.Validation.Error?displayProperty=fullName> event.  \n  \n [!code-cs[BindingGroupSnippets#ErrorHandler](~/add/codesnippet/csharp/BindingGroupSnippets/Window1.xaml.cs#errorhandler)]\n [!code-vb[BindingGroupSnippets#ErrorHandler](~/add/codesnippet/visualbasic/bindinggroupsnippets/window1.xaml.vb#errorhandler)]"
  syntax:
    content: public bool NotifyOnValidationError { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果&lt;xref:System.Windows.Controls.Validation.Error?displayProperty=fullName&gt;就會發生事件時的狀態<xref href=&quot;System.Windows.Controls.ValidationRule&quot;></xref>變更; 否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Data.BindingGroup.NotifyOnValidationError*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.Owner
  id: Owner
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: Owner
  nameWithType: BindingGroup.Owner
  fullName: System.Windows.Data.BindingGroup.Owner
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "取得物件，這<xref href=&quot;System.Windows.Data.BindingGroup&quot;></xref>指派給。"
  syntax:
    content: public System.Windows.DependencyObject Owner { get; }
    return:
      type: System.Windows.DependencyObject
      description: "物件這個<xref href=&quot;System.Windows.Data.BindingGroup&quot;></xref>指派給。"
  overload: System.Windows.Data.BindingGroup.Owner*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.SharesProposedValues
  id: SharesProposedValues
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: SharesProposedValues
  nameWithType: BindingGroup.SharesProposedValues
  fullName: System.Windows.Data.BindingGroup.SharesProposedValues
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "取得或設定值，指出是否<xref href=&quot;System.Windows.Data.BindingGroup&quot;></xref>重複使用目標有尚未認可至來源的值。"
  remarks: "建議的值是值已變更，繫結的目標，但尚未認可至來源。 例如，假設是雙向繫結上<xref:System.Windows.Controls.TextBox>的<xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A>屬性設定為<xref:System.Windows.Data.UpdateSourceTrigger>.</xref:System.Windows.Data.UpdateSourceTrigger> </xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> </xref:System.Windows.Controls.TextBox> 如果使用者變更的值<xref:System.Windows.Controls.TextBox>，建議的值是在值<xref:System.Windows.Controls.TextBox>認可至來源之前。</xref:System.Windows.Controls.TextBox> </xref:System.Windows.Controls.TextBox>       SharesProposedValues 時`true`、<xref:System.Windows.Data.BindingGroup>一個繫結離開 BindingGroup 和另一個繫結與相同來源聯結 BindingGroup 時，請使用建議的值。</xref:System.Windows.Data.BindingGroup>  例如，假設應用程式可讓使用者編輯多個欄位，並按一下按鈕以更新的來源物件。 當欄位不正在編輯時，應用程式就會將它顯示在<xref:System.Windows.Controls.TextBlock>.</xref:System.Windows.Controls.TextBlock> 當使用者開始編輯欄位，應用程式會取代<xref:System.Windows.Controls.TextBlock>使用<xref:System.Windows.Controls.TextBox>.</xref:System.Windows.Controls.TextBox> </xref:System.Windows.Controls.TextBlock> 當使用者完成編輯該欄位時，應用程式會取代<xref:System.Windows.Controls.TextBox><xref:System.Windows.Controls.TextBlock>.</xref:System.Windows.Controls.TextBlock>與</xref:System.Windows.Controls.TextBox> 因為直到使用者按一下按鈕時，就不會更新來源，必須是方法，讓<xref:System.Windows.Controls.TextBlock>顯示建議的值。</xref:System.Windows.Controls.TextBlock> 藉由設定為 SharesProposedValues `true`，應用程式就會顯示使用者的變更至欄位即使來源尚未更新。"
  syntax:
    content: public bool SharesProposedValues { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref href=&quot;System.Windows.Data.BindingGroup&quot;></xref>重複使用目標值中有尚未認可至來源，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Data.BindingGroup.SharesProposedValues*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.TryGetValue(System.Object,System.String,System.Object@)
  id: TryGetValue(System.Object,System.String,System.Object@)
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: TryGetValue(Object,String,Object)
  nameWithType: BindingGroup.TryGetValue(Object,String,Object)
  fullName: System.Windows.Data.BindingGroup.TryGetValue(Object,String,Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "嘗試取得指定的屬性和項目中的建議的值。"
  remarks: "傳回 TryGetValue`false`如果沒有指定的項目和屬性的繫結或指定屬性的值不是可用的因為發生轉換錯誤，或因為先前的驗證規則失敗。       使用這個方法在<xref:System.Windows.Controls.ValidationRule.Validate%2A?displayProperty=fullName>方法來取得值，才能認可至來源。</xref:System.Windows.Controls.ValidationRule.Validate%2A?displayProperty=fullName> 型別`value`取決於此時階段<xref:System.Windows.Controls.ValidationRule>，就會發生。</xref:System.Windows.Controls.ValidationRule> 例如，如果<xref:System.Windows.Controls.TextBox>資料繫結至型別整數的屬性`value`是一個字串，如果<xref:System.Windows.Controls.ValidationRule>呼叫 TryGetValue 都有其<xref:System.Windows.Controls.ValidationRule.ValidationStep%2A>設定為<xref:System.Windows.Controls.ValidationStep>.</xref:System.Windows.Controls.ValidationStep> </xref:System.Windows.Controls.ValidationRule.ValidationStep%2A> </xref:System.Windows.Controls.ValidationRule> </xref:System.Windows.Controls.TextBox> 如果<xref:System.Windows.Controls.ValidationRule>具有其<xref:System.Windows.Controls.ValidationRule.ValidationStep%2A>設<xref:System.Windows.Controls.ValidationStep>的型別`value`是任何類型，由繫結的轉換器。</xref:System.Windows.Controls.ValidationStep> </xref:System.Windows.Controls.ValidationRule.ValidationStep%2A> </xref:System.Windows.Controls.ValidationRule> 在此範例中，`value`通常是整數。"
  example:
  - "The following example creates a custom <xref:System.Windows.Controls.ValidationRule> named `ValidateDateAndPrice`. In the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method, the example uses the TryGetValue method and the <xref:System.Windows.Data.BindingGroup.Items%2A> property to get the values the user entered into the form. Then the example checks that if an item is over 100 dollars, it will be available for at least seven days. This example is part of a larger example on the <xref:System.Windows.Data.BindingGroup> class  \n  \n [!code-cs[BindingGroupSnippets#ValidateObject](~/add/codesnippet/csharp/BindingGroupSnippets/Data.cs#validateobject)]\n [!code-vb[BindingGroupSnippets#ValidateObject](~/add/codesnippet/visualbasic/bindinggroupsnippets/data.vb#validateobject)]"
  syntax:
    content: public bool TryGetValue (object item, string propertyName, out object value);
    parameters:
    - id: item
      type: System.Object
      description: "包含指定之屬性的物件。"
    - id: propertyName
      type: System.String
      description: "此屬性若要取得其建議的值。"
    - id: value
      type: System.Object
      description: "這個方法傳回時，包含表示建議的屬性值的物件。 這個參數未初始化便傳遞。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果值為指定的屬性; 建議的值否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Data.BindingGroup.TryGetValue*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.UpdateSources
  id: UpdateSources
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: UpdateSources()
  nameWithType: BindingGroup.UpdateSources()
  fullName: System.Windows.Data.BindingGroup.UpdateSources()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "繫結上執行轉換器和<xref href=&quot;System.Windows.Controls.ValidationRule&quot;></xref>物件<xref:System.Windows.Controls.ValidationRule.ValidationStep*>屬性設定為<xref href=&quot;System.Windows.Controls.ValidationStep&quot;> </xref>， <xref href=&quot;System.Windows.Controls.ValidationStep&quot;> </xref>，或<xref href=&quot;System.Windows.Controls.ValidationStep&quot;></xref>並將之目標的值儲存到來源物件，如果所有的驗證規則都成功。</xref:System.Windows.Controls.ValidationRule.ValidationStep*>"
  remarks: "這個方法會更新來源，如果每個<xref:System.Windows.Controls.ValidationRule>成功，但不會造成要認可暫止的變更並結束編輯異動的來源。</xref:System.Windows.Controls.ValidationRule> 也就是說，如果來源物件實作<xref:System.ComponentModel.IEditableObject>.</xref:System.ComponentModel.IEditableObject> 呼叫這個方法不會造成<xref:System.ComponentModel.IEditableObject.EndEdit%2A>呼叫。</xref:System.ComponentModel.IEditableObject.EndEdit%2A> 使用<xref:System.Windows.Data.BindingGroup.CommitEdit%2A>方法，讓認可暫止的變更的來源。</xref:System.Windows.Data.BindingGroup.CommitEdit%2A>"
  example:
  - "The following example is part of an application that prompts the user to enter multiple customers and assign a sales representative to each customer. The application checks that the sales representative and the customer belong to the same region. The example calls UpdateSources to validate the bindings and save the values to the source if all the validation rules succeed.  \n  \n [!code-cs[BindingGroupSnippets#UpdateSources](~/add/codesnippet/csharp/BindingGroupSnippets/Window2.xaml.cs#updatesources)]\n [!code-vb[BindingGroupSnippets#UpdateSources](~/add/codesnippet/visualbasic/bindinggroupsnippets/window2.xaml.vb#updatesources)]"
  syntax:
    content: public bool UpdateSources ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果所有的驗證規則都成功。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Data.BindingGroup.UpdateSources*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.ValidatesOnNotifyDataError
  id: ValidatesOnNotifyDataError
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: ValidatesOnNotifyDataError
  nameWithType: BindingGroup.ValidatesOnNotifyDataError
  fullName: System.Windows.Data.BindingGroup.ValidatesOnNotifyDataError
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "取得或設定值，指出是否要包含<xref href=&quot;System.Windows.Controls.NotifyDataErrorValidationRule&quot;> </xref>。"
  remarks: "ValidatesOnNotifyDataError 時`true`，繫結檢查，並報告的資料來源所實作<xref:System.ComponentModel.INotifyDataErrorInfo>.</xref:System.ComponentModel.INotifyDataErrorInfo>所引發的錯誤"
  syntax:
    content: public bool ValidatesOnNotifyDataError { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>要包含<xref href=&quot;System.Windows.Controls.NotifyDataErrorValidationRule&quot;> </xref>，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Data.BindingGroup.ValidatesOnNotifyDataError*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.ValidateWithoutUpdate
  id: ValidateWithoutUpdate
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: ValidateWithoutUpdate()
  nameWithType: BindingGroup.ValidateWithoutUpdate()
  fullName: System.Windows.Data.BindingGroup.ValidateWithoutUpdate()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "繫結上執行轉換器和<xref href=&quot;System.Windows.Controls.ValidationRule&quot;></xref>物件<xref:System.Windows.Controls.ValidationRule.ValidationStep*>屬性設定為<xref href=&quot;System.Windows.Controls.ValidationStep&quot;></xref>或<xref href=&quot;System.Windows.Controls.ValidationStep&quot;> </xref>。</xref:System.Windows.Controls.ValidationRule.ValidationStep*>"
  remarks: "當您呼叫這個方法時，不會更新來源。"
  syntax:
    content: public bool ValidateWithoutUpdate ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果成功驗證規則。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Data.BindingGroup.ValidateWithoutUpdate*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.ValidationErrors
  id: ValidationErrors
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: ValidationErrors
  nameWithType: BindingGroup.ValidationErrors
  fullName: System.Windows.Data.BindingGroup.ValidationErrors
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "取得集合的<xref href=&quot;System.Windows.Controls.ValidationError&quot;></xref>物件造成<xref href=&quot;System.Windows.Data.BindingGroup&quot;></xref>可能無效。"
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Windows.Controls.ValidationError> ValidationErrors { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Windows.Controls.ValidationError}
      description: "集合<xref href=&quot;System.Windows.Controls.ValidationError&quot;></xref>物件造成<xref href=&quot;System.Windows.Data.BindingGroup&quot;></xref>可能無效。  值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>是否有任何錯誤。"
  overload: System.Windows.Data.BindingGroup.ValidationErrors*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.ValidationRules
  id: ValidationRules
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: ValidationRules
  nameWithType: BindingGroup.ValidationRules
  fullName: System.Windows.Data.BindingGroup.ValidationRules
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "取得集合的<xref href=&quot;System.Windows.Controls.ValidationRule&quot;></xref>驗證中的來源物件的物件<xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref>。"
  remarks: "當<xref:System.Windows.Controls.ValidationRule>加入至<xref:System.Windows.Data.BindingGroup>、<xref:System.Windows.Data.BindingGroup>的第一個參數會被<xref:System.Windows.Controls.ValidationRule.Validate%2A>方法。</xref:System.Windows.Controls.ValidationRule.Validate%2A> </xref:System.Windows.Data.BindingGroup> </xref:System.Windows.Data.BindingGroup> </xref:System.Windows.Controls.ValidationRule> 您可以使用，以取得物件的建議的值<xref:System.Windows.Data.BindingGroup.TryGetValue%2A>或<xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29>方法。</xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29> </xref:System.Windows.Data.BindingGroup.TryGetValue%2A> 您可以取得來自繫結來源物件<xref:System.Windows.Data.BindingGroup.Items%2A>屬性。</xref:System.Windows.Data.BindingGroup.Items%2A>"
  example:
  - "The following example adds the custom <xref:System.Windows.Controls.ValidationRule>, `ValidateDateAndPrice`, to the <xref:System.Windows.Data.BindingGroup>.  \n  \n [!code-xml[BindingGroupSnippets#BindingGroup](~/add/codesnippet/xaml/BindingGroupSnippets/Window1.xaml#bindinggroup)]  \n  \n The following example shows the `ValidateDateAndPrice` class. The <xref:System.Windows.Controls.ValidationRule.Validate%2A> method uses the <xref:System.Windows.Data.BindingGroup> to get the values the user entered into the form, and checks that if an item is over 100 dollars, it will be available for at least seven days.  \n  \n [!code-cs[BindingGroupSnippets#ValidateObject](~/add/codesnippet/csharp/BindingGroupSnippets/Data.cs#validateobject)]\n [!code-vb[BindingGroupSnippets#ValidateObject](~/add/codesnippet/visualbasic/bindinggroupsnippets/data.vb#validateobject)]"
  syntax:
    content: public System.Collections.ObjectModel.Collection<System.Windows.Controls.ValidationRule> ValidationRules { get; }
    return:
      type: System.Collections.ObjectModel.Collection{System.Windows.Controls.ValidationRule}
      description: "集合<xref href=&quot;System.Windows.Controls.ValidationRule&quot;></xref>驗證中的來源物件的物件<xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref>。"
  overload: System.Windows.Data.BindingGroup.ValidationRules*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.DependencyObject
  isExternal: false
  name: System.Windows.DependencyObject
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Windows.Data.ValueUnavailableException
  parent: System.Windows.Data
  isExternal: false
  name: ValueUnavailableException
  nameWithType: ValueUnavailableException
  fullName: System.Windows.Data.ValueUnavailableException
- uid: System.Windows.Data.BindingGroup.#ctor
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: BindingGroup()
  nameWithType: BindingGroup.BindingGroup()
  fullName: System.Windows.Data.BindingGroup.BindingGroup()
- uid: System.Windows.Data.BindingGroup.BeginEdit
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: BeginEdit()
  nameWithType: BindingGroup.BeginEdit()
  fullName: System.Windows.Data.BindingGroup.BeginEdit()
- uid: System.Windows.Data.BindingGroup.BindingExpressions
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: BindingExpressions
  nameWithType: BindingGroup.BindingExpressions
  fullName: System.Windows.Data.BindingGroup.BindingExpressions
- uid: System.Collections.ObjectModel.Collection{System.Windows.Data.BindingExpressionBase}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<BindingExpressionBase>
  nameWithType: Collection<BindingExpressionBase>
  fullName: System.Collections.ObjectModel.Collection<System.Windows.Data.BindingExpressionBase>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.Windows.Data.BindingExpressionBase>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Data.BindingExpressionBase
    name: BindingExpressionBase
    nameWithType: BindingExpressionBase
    fullName: BindingExpressionBase
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Data.BindingGroup.CancelEdit
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: CancelEdit()
  nameWithType: BindingGroup.CancelEdit()
  fullName: System.Windows.Data.BindingGroup.CancelEdit()
- uid: System.Windows.Data.BindingGroup.CanRestoreValues
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: CanRestoreValues
  nameWithType: BindingGroup.CanRestoreValues
  fullName: System.Windows.Data.BindingGroup.CanRestoreValues
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Data.BindingGroup.CommitEdit
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: CommitEdit()
  nameWithType: BindingGroup.CommitEdit()
  fullName: System.Windows.Data.BindingGroup.CommitEdit()
- uid: System.Windows.Data.BindingGroup.GetValue(System.Object,System.String)
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: GetValue(Object,String)
  nameWithType: BindingGroup.GetValue(Object,String)
  fullName: System.Windows.Data.BindingGroup.GetValue(Object,String)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Data.BindingGroup.HasValidationError
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: HasValidationError
  nameWithType: BindingGroup.HasValidationError
  fullName: System.Windows.Data.BindingGroup.HasValidationError
- uid: System.Windows.Data.BindingGroup.IsDirty
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: IsDirty
  nameWithType: BindingGroup.IsDirty
  fullName: System.Windows.Data.BindingGroup.IsDirty
- uid: System.Windows.Data.BindingGroup.Items
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: Items
  nameWithType: BindingGroup.Items
  fullName: System.Windows.Data.BindingGroup.Items
- uid: System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Windows.Data.BindingGroup.Name
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: Name
  nameWithType: BindingGroup.Name
  fullName: System.Windows.Data.BindingGroup.Name
- uid: System.Windows.Data.BindingGroup.NotifyOnValidationError
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: NotifyOnValidationError
  nameWithType: BindingGroup.NotifyOnValidationError
  fullName: System.Windows.Data.BindingGroup.NotifyOnValidationError
- uid: System.Windows.Data.BindingGroup.Owner
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: Owner
  nameWithType: BindingGroup.Owner
  fullName: System.Windows.Data.BindingGroup.Owner
- uid: System.Windows.Data.BindingGroup.SharesProposedValues
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: SharesProposedValues
  nameWithType: BindingGroup.SharesProposedValues
  fullName: System.Windows.Data.BindingGroup.SharesProposedValues
- uid: System.Windows.Data.BindingGroup.TryGetValue(System.Object,System.String,System.Object@)
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: TryGetValue(Object,String,Object)
  nameWithType: BindingGroup.TryGetValue(Object,String,Object)
  fullName: System.Windows.Data.BindingGroup.TryGetValue(Object,String,Object)
- uid: System.Windows.Data.BindingGroup.UpdateSources
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: UpdateSources()
  nameWithType: BindingGroup.UpdateSources()
  fullName: System.Windows.Data.BindingGroup.UpdateSources()
- uid: System.Windows.Data.BindingGroup.ValidatesOnNotifyDataError
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: ValidatesOnNotifyDataError
  nameWithType: BindingGroup.ValidatesOnNotifyDataError
  fullName: System.Windows.Data.BindingGroup.ValidatesOnNotifyDataError
- uid: System.Windows.Data.BindingGroup.ValidateWithoutUpdate
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: ValidateWithoutUpdate()
  nameWithType: BindingGroup.ValidateWithoutUpdate()
  fullName: System.Windows.Data.BindingGroup.ValidateWithoutUpdate()
- uid: System.Windows.Data.BindingGroup.ValidationErrors
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: ValidationErrors
  nameWithType: BindingGroup.ValidationErrors
  fullName: System.Windows.Data.BindingGroup.ValidationErrors
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Windows.Controls.ValidationError}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<ValidationError>
  nameWithType: ReadOnlyCollection<ValidationError>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Windows.Controls.ValidationError>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Windows.Controls.ValidationError>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Controls.ValidationError
    name: ValidationError
    nameWithType: ValidationError
    fullName: ValidationError
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Data.BindingGroup.ValidationRules
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: ValidationRules
  nameWithType: BindingGroup.ValidationRules
  fullName: System.Windows.Data.BindingGroup.ValidationRules
- uid: System.Collections.ObjectModel.Collection{System.Windows.Controls.ValidationRule}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<ValidationRule>
  nameWithType: Collection<ValidationRule>
  fullName: System.Collections.ObjectModel.Collection<System.Windows.Controls.ValidationRule>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.Windows.Controls.ValidationRule>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Controls.ValidationRule
    name: ValidationRule
    nameWithType: ValidationRule
    fullName: ValidationRule
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Data.BindingGroup.#ctor*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: BindingGroup
  nameWithType: BindingGroup.BindingGroup
- uid: System.Windows.Data.BindingGroup.BeginEdit*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: BeginEdit
  nameWithType: BindingGroup.BeginEdit
- uid: System.Windows.Data.BindingGroup.BindingExpressions*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: BindingExpressions
  nameWithType: BindingGroup.BindingExpressions
- uid: System.Windows.Data.BindingGroup.CancelEdit*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: CancelEdit
  nameWithType: BindingGroup.CancelEdit
- uid: System.Windows.Data.BindingGroup.CanRestoreValues*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: CanRestoreValues
  nameWithType: BindingGroup.CanRestoreValues
- uid: System.Windows.Data.BindingGroup.CommitEdit*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: CommitEdit
  nameWithType: BindingGroup.CommitEdit
- uid: System.Windows.Data.BindingGroup.GetValue*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: GetValue
  nameWithType: BindingGroup.GetValue
- uid: System.Windows.Data.BindingGroup.HasValidationError*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: HasValidationError
  nameWithType: BindingGroup.HasValidationError
- uid: System.Windows.Data.BindingGroup.IsDirty*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: IsDirty
  nameWithType: BindingGroup.IsDirty
- uid: System.Windows.Data.BindingGroup.Items*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: Items
  nameWithType: BindingGroup.Items
- uid: System.Windows.Data.BindingGroup.Name*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: Name
  nameWithType: BindingGroup.Name
- uid: System.Windows.Data.BindingGroup.NotifyOnValidationError*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: NotifyOnValidationError
  nameWithType: BindingGroup.NotifyOnValidationError
- uid: System.Windows.Data.BindingGroup.Owner*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: Owner
  nameWithType: BindingGroup.Owner
- uid: System.Windows.Data.BindingGroup.SharesProposedValues*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: SharesProposedValues
  nameWithType: BindingGroup.SharesProposedValues
- uid: System.Windows.Data.BindingGroup.TryGetValue*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: TryGetValue
  nameWithType: BindingGroup.TryGetValue
- uid: System.Windows.Data.BindingGroup.UpdateSources*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: UpdateSources
  nameWithType: BindingGroup.UpdateSources
- uid: System.Windows.Data.BindingGroup.ValidatesOnNotifyDataError*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: ValidatesOnNotifyDataError
  nameWithType: BindingGroup.ValidatesOnNotifyDataError
- uid: System.Windows.Data.BindingGroup.ValidateWithoutUpdate*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: ValidateWithoutUpdate
  nameWithType: BindingGroup.ValidateWithoutUpdate
- uid: System.Windows.Data.BindingGroup.ValidationErrors*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: ValidationErrors
  nameWithType: BindingGroup.ValidationErrors
- uid: System.Windows.Data.BindingGroup.ValidationRules*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: ValidationRules
  nameWithType: BindingGroup.ValidationRules
