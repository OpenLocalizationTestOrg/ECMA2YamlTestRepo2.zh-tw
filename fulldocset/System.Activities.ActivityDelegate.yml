### YamlMime:ManagedReference
items:
- uid: System.Activities.ActivityDelegate
  id: ActivityDelegate
  children:
  - System.Activities.ActivityDelegate.#ctor
  - System.Activities.ActivityDelegate.DisplayName
  - System.Activities.ActivityDelegate.GetResultArgument
  - System.Activities.ActivityDelegate.Handler
  - System.Activities.ActivityDelegate.OnGetRuntimeDelegateArguments(System.Collections.Generic.IList{System.Activities.RuntimeDelegateArgument})
  - System.Activities.ActivityDelegate.ShouldSerializeDisplayName
  - System.Activities.ActivityDelegate.ToString
  langs:
  - csharp
  name: ActivityDelegate
  nameWithType: ActivityDelegate
  fullName: System.Activities.ActivityDelegate
  type: Class
  summary: "表示活動為基礎的回呼。"
  remarks: '活動委派可讓活動作者使用特定的簽章以公開回呼，活動使用者可提供以活動為基礎的處理常式。 活動委派的兩種類型︰<xref:System.Activities.ActivityAction%601>用於叫用沒有傳回值的活動和<xref:System.Activities.ActivityFunc%601>用於叫用沒有傳回值的活動。</xref:System.Activities.ActivityFunc%601> </xref:System.Activities.ActivityAction%601> 活動委派非常實用，讓簽章必須限制子活動的案例中。'
  syntax:
    content: >-
      [System.Windows.Markup.ContentProperty("Handler")]

      public abstract class ActivityDelegate
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Activities.ActivityDelegate.#ctor
  id: '#ctor'
  parent: System.Activities.ActivityDelegate
  langs:
  - csharp
  name: ActivityDelegate()
  nameWithType: ActivityDelegate.ActivityDelegate()
  fullName: System.Activities.ActivityDelegate.ActivityDelegate()
  type: Constructor
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "呼叫以初始化物件的衍生的類別建構函式。"
  syntax:
    content: protected ActivityDelegate ();
    parameters: []
  overload: System.Activities.ActivityDelegate.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ActivityDelegate.DisplayName
  id: DisplayName
  parent: System.Activities.ActivityDelegate
  langs:
  - csharp
  name: DisplayName
  nameWithType: ActivityDelegate.DisplayName
  fullName: System.Activities.ActivityDelegate.DisplayName
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "取得或設定選用的易記名稱會用於偵錯、 驗證、 例外狀況處理及追蹤。"
  remarks: "這個屬性是唯讀，在執行階段。 如果在執行階段設定值<xref:System.InvalidOperationException>就會擲回。</xref:System.InvalidOperationException>"
  syntax:
    content: public string DisplayName { get; set; }
    return:
      type: System.String
      description: "易記名稱會用於偵錯、 驗證、 例外狀況處理及追蹤。"
  overload: System.Activities.ActivityDelegate.DisplayName*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ActivityDelegate.GetResultArgument
  id: GetResultArgument
  parent: System.Activities.ActivityDelegate
  langs:
  - csharp
  name: GetResultArgument()
  nameWithType: ActivityDelegate.GetResultArgument()
  fullName: System.Activities.ActivityDelegate.GetResultArgument()
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "在衍生類別中實作時，會傳回<xref href=&quot;System.Activities.DelegateOutArgument&quot;></xref>的<xref href=&quot;System.Activities.ActivityDelegate&quot;> </xref>。"
  syntax:
    content: protected virtual System.Activities.DelegateOutArgument GetResultArgument ();
    parameters: []
    return:
      type: System.Activities.DelegateOutArgument
      description: "Out 引數<xref href=&quot;System.Activities.ActivityDelegate&quot;> </xref>。"
  overload: System.Activities.ActivityDelegate.GetResultArgument*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ActivityDelegate.Handler
  id: Handler
  parent: System.Activities.ActivityDelegate
  langs:
  - csharp
  name: Handler
  nameWithType: ActivityDelegate.Handler
  fullName: System.Activities.ActivityDelegate.Handler
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "取得或設定所表示的活動<xref href=&quot;System.Activities.ActivityDelegate&quot;> </xref>。"
  remarks: "這個屬性是唯讀，在執行階段。 如果在執行階段設定值<xref:System.InvalidOperationException>就會擲回。</xref:System.InvalidOperationException>"
  syntax:
    content: public System.Activities.Activity Handler { get; set; }
    return:
      type: System.Activities.Activity
      description: "這由活動<xref href=&quot;System.Activities.ActivityDelegate&quot;> </xref>。"
  overload: System.Activities.ActivityDelegate.Handler*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ActivityDelegate.OnGetRuntimeDelegateArguments(System.Collections.Generic.IList{System.Activities.RuntimeDelegateArgument})
  id: OnGetRuntimeDelegateArguments(System.Collections.Generic.IList{System.Activities.RuntimeDelegateArgument})
  parent: System.Activities.ActivityDelegate
  langs:
  - csharp
  name: OnGetRuntimeDelegateArguments(IList<RuntimeDelegateArgument>)
  nameWithType: ActivityDelegate.OnGetRuntimeDelegateArguments(IList<RuntimeDelegateArgument>)
  fullName: System.Activities.ActivityDelegate.OnGetRuntimeDelegateArguments(IList<RuntimeDelegateArgument>)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "提供的執行階段引數清單<xref href=&quot;System.Activities.ActivityDelegate&quot;> </xref>。"
  remarks: "當在衍生類別中覆寫時，這個方法可用於自訂<xref:System.Activities.ActivityDelegate>.</xref:System.Activities.ActivityDelegate>所使用的引數"
  syntax:
    content: protected virtual void OnGetRuntimeDelegateArguments (System.Collections.Generic.IList<System.Activities.RuntimeDelegateArgument> runtimeDelegateArguments);
    parameters:
    - id: runtimeDelegateArguments
      type: System.Collections.Generic.IList{System.Activities.RuntimeDelegateArgument}
      description: "要填入執行階段引數清單。"
  overload: System.Activities.ActivityDelegate.OnGetRuntimeDelegateArguments*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ActivityDelegate.ShouldSerializeDisplayName
  id: ShouldSerializeDisplayName
  parent: System.Activities.ActivityDelegate
  langs:
  - csharp
  name: ShouldSerializeDisplayName()
  nameWithType: ActivityDelegate.ShouldSerializeDisplayName()
  fullName: System.Activities.ActivityDelegate.ShouldSerializeDisplayName()
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "指出是否<xref:System.Activities.ActivityDelegate.DisplayName*>屬性值應該序列化為 XAML。</xref:System.Activities.ActivityDelegate.DisplayName*>"
  remarks: "傳回 ShouldSerializeDisplayName`true`如果<xref:System.Activities.ActivityDelegate.DisplayName%2A>已明確設定於<xref:System.Activities.ActivityDelegate>。</xref:System.Activities.ActivityDelegate> </xref:System.Activities.ActivityDelegate.DisplayName%2A>"
  syntax:
    content: public bool ShouldSerializeDisplayName ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref:System.Activities.ActivityDelegate.DisplayName*>屬性值應該序列化，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Activities.ActivityDelegate.DisplayName*>"
  overload: System.Activities.ActivityDelegate.ShouldSerializeDisplayName*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ActivityDelegate.ToString
  id: ToString
  parent: System.Activities.ActivityDelegate
  langs:
  - csharp
  name: ToString()
  nameWithType: ActivityDelegate.ToString()
  fullName: System.Activities.ActivityDelegate.ToString()
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "傳回<xref:System.String>表示<xref href=&quot;System.Activities.ActivityDelegate&quot;></xref>包含<xref:System.Activities.ActivityDelegate.DisplayName*>.</xref:System.Activities.ActivityDelegate.DisplayName*> </xref:System.String>"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "表示法<xref href=&quot;System.Activities.ActivityDelegate&quot;></xref>包含<xref:System.Activities.ActivityDelegate.DisplayName*>.</xref:System.Activities.ActivityDelegate.DisplayName*>"
  overload: System.Activities.ActivityDelegate.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Activities.ActivityDelegate.#ctor
  parent: System.Activities.ActivityDelegate
  isExternal: false
  name: ActivityDelegate()
  nameWithType: ActivityDelegate.ActivityDelegate()
  fullName: System.Activities.ActivityDelegate.ActivityDelegate()
- uid: System.Activities.ActivityDelegate.DisplayName
  parent: System.Activities.ActivityDelegate
  isExternal: false
  name: DisplayName
  nameWithType: ActivityDelegate.DisplayName
  fullName: System.Activities.ActivityDelegate.DisplayName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Activities.ActivityDelegate.GetResultArgument
  parent: System.Activities.ActivityDelegate
  isExternal: false
  name: GetResultArgument()
  nameWithType: ActivityDelegate.GetResultArgument()
  fullName: System.Activities.ActivityDelegate.GetResultArgument()
- uid: System.Activities.DelegateOutArgument
  parent: System.Activities
  isExternal: false
  name: DelegateOutArgument
  nameWithType: DelegateOutArgument
  fullName: System.Activities.DelegateOutArgument
- uid: System.Activities.ActivityDelegate.Handler
  parent: System.Activities.ActivityDelegate
  isExternal: false
  name: Handler
  nameWithType: ActivityDelegate.Handler
  fullName: System.Activities.ActivityDelegate.Handler
- uid: System.Activities.Activity
  parent: System.Activities
  isExternal: false
  name: Activity
  nameWithType: Activity
  fullName: System.Activities.Activity
- uid: System.Activities.ActivityDelegate.OnGetRuntimeDelegateArguments(System.Collections.Generic.IList{System.Activities.RuntimeDelegateArgument})
  parent: System.Activities.ActivityDelegate
  isExternal: false
  name: OnGetRuntimeDelegateArguments(IList<RuntimeDelegateArgument>)
  nameWithType: ActivityDelegate.OnGetRuntimeDelegateArguments(IList<RuntimeDelegateArgument>)
  fullName: System.Activities.ActivityDelegate.OnGetRuntimeDelegateArguments(IList<RuntimeDelegateArgument>)
- uid: System.Collections.Generic.IList{System.Activities.RuntimeDelegateArgument}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<RuntimeDelegateArgument>
  nameWithType: IList<RuntimeDelegateArgument>
  fullName: System.Collections.Generic.IList<System.Activities.RuntimeDelegateArgument>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.Activities.RuntimeDelegateArgument>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Activities.RuntimeDelegateArgument
    name: RuntimeDelegateArgument
    nameWithType: RuntimeDelegateArgument
    fullName: RuntimeDelegateArgument
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.ActivityDelegate.ShouldSerializeDisplayName
  parent: System.Activities.ActivityDelegate
  isExternal: false
  name: ShouldSerializeDisplayName()
  nameWithType: ActivityDelegate.ShouldSerializeDisplayName()
  fullName: System.Activities.ActivityDelegate.ShouldSerializeDisplayName()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Activities.ActivityDelegate.ToString
  parent: System.Activities.ActivityDelegate
  isExternal: false
  name: ToString()
  nameWithType: ActivityDelegate.ToString()
  fullName: System.Activities.ActivityDelegate.ToString()
- uid: System.Activities.ActivityDelegate.#ctor*
  parent: System.Activities.ActivityDelegate
  isExternal: false
  name: ActivityDelegate
  nameWithType: ActivityDelegate.ActivityDelegate
- uid: System.Activities.ActivityDelegate.DisplayName*
  parent: System.Activities.ActivityDelegate
  isExternal: false
  name: DisplayName
  nameWithType: ActivityDelegate.DisplayName
- uid: System.Activities.ActivityDelegate.GetResultArgument*
  parent: System.Activities.ActivityDelegate
  isExternal: false
  name: GetResultArgument
  nameWithType: ActivityDelegate.GetResultArgument
- uid: System.Activities.ActivityDelegate.Handler*
  parent: System.Activities.ActivityDelegate
  isExternal: false
  name: Handler
  nameWithType: ActivityDelegate.Handler
- uid: System.Activities.ActivityDelegate.OnGetRuntimeDelegateArguments*
  parent: System.Activities.ActivityDelegate
  isExternal: false
  name: OnGetRuntimeDelegateArguments
  nameWithType: ActivityDelegate.OnGetRuntimeDelegateArguments
- uid: System.Activities.ActivityDelegate.ShouldSerializeDisplayName*
  parent: System.Activities.ActivityDelegate
  isExternal: false
  name: ShouldSerializeDisplayName
  nameWithType: ActivityDelegate.ShouldSerializeDisplayName
- uid: System.Activities.ActivityDelegate.ToString*
  parent: System.Activities.ActivityDelegate
  isExternal: false
  name: ToString
  nameWithType: ActivityDelegate.ToString
