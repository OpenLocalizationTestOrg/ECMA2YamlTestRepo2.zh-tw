### YamlMime:ManagedReference
items:
- uid: System.Windows.PropertyPathConverter
  id: PropertyPathConverter
  children:
  - System.Windows.PropertyPathConverter.#ctor
  - System.Windows.PropertyPathConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.Windows.PropertyPathConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.Windows.PropertyPathConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.Windows.PropertyPathConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  langs:
  - csharp
  name: PropertyPathConverter
  nameWithType: PropertyPathConverter
  fullName: System.Windows.PropertyPathConverter
  type: Class
  summary: "提供類型轉換器的<xref href=&quot;System.Windows.PropertyPath&quot;></xref>物件。"
  remarks: "A<xref:System.Windows.PropertyPath>用來在繫結，或分鏡腳本目標屬性的路徑，指定所涉及的物件型別和屬性的路徑。</xref:System.Windows.PropertyPath>      <a name=&quot;XAMLTextUsage_PropertyPathConverter&quot;></a># # XAML 文字用法"
  syntax:
    content: 'public sealed class PropertyPathConverter : System.ComponentModel.TypeConverter'
  inheritance:
  - System.Object
  - System.ComponentModel.TypeConverter
  implements: []
  inheritedMembers:
  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)
  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)
  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)
  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)
  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)
  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  - System.ComponentModel.TypeConverter.GetProperties(System.Object)
  - System.ComponentModel.TypeConverter.GetPropertiesSupported
  - System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValues
  - System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.IsValid(System.Object)
  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])
  platform:
  - net462
- uid: System.Windows.PropertyPathConverter.#ctor
  id: '#ctor'
  parent: System.Windows.PropertyPathConverter
  langs:
  - csharp
  name: PropertyPathConverter()
  nameWithType: PropertyPathConverter.PropertyPathConverter()
  fullName: System.Windows.PropertyPathConverter.PropertyPathConverter()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "初始化的新執行個體<xref href=&quot;System.Windows.PropertyPathConverter&quot;></xref>類別。"
  syntax:
    content: public PropertyPathConverter ();
    parameters: []
  overload: System.Windows.PropertyPathConverter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.PropertyPathConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  id: CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Windows.PropertyPathConverter
  langs:
  - csharp
  name: CanConvertFrom(ITypeDescriptorContext,Type)
  nameWithType: PropertyPathConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.Windows.PropertyPathConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "傳回這個轉換器是否可以將一種類型的物件<xref href=&quot;System.Windows.PropertyPath&quot;></xref>型別。"
  syntax:
    content: public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext typeDescriptorContext, Type sourceType);
    parameters:
    - id: typeDescriptorContext
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> ，提供格式內容。"
    - id: sourceType
      type: System.Type
      description: "A<xref:System.Type>代表您想要從轉換的類型。</xref:System.Type>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>sourceType</code> is type <xref:System.String>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>.</xref:System.String>"
  overload: System.Windows.PropertyPathConverter.CanConvertFrom*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.PropertyPathConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  id: CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Windows.PropertyPathConverter
  langs:
  - csharp
  name: CanConvertTo(ITypeDescriptorContext,Type)
  nameWithType: PropertyPathConverter.CanConvertTo(ITypeDescriptorContext,Type)
  fullName: System.Windows.PropertyPathConverter.CanConvertTo(ITypeDescriptorContext,Type)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "傳回這個轉換器是否可以轉換的物件<xref href=&quot;System.Windows.PropertyPath&quot;></xref>型別。"
  syntax:
    content: public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext typeDescriptorContext, Type destinationType);
    parameters:
    - id: typeDescriptorContext
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> ，提供格式內容。"
    - id: destinationType
      type: System.Type
      description: "A<xref:System.Type>表示您想要轉換成的型別。</xref:System.Type>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>destinationType</code> is type <xref:System.String>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>.</xref:System.String>"
  overload: System.Windows.PropertyPathConverter.CanConvertTo*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.PropertyPathConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  id: ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.Windows.PropertyPathConverter
  langs:
  - csharp
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: PropertyPathConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.Windows.PropertyPathConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "將指定的值，轉換<xref href=&quot;System.Windows.PropertyPath&quot;></xref>型別。"
  syntax:
    content: public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext typeDescriptorContext, System.Globalization.CultureInfo cultureInfo, object source);
    parameters:
    - id: typeDescriptorContext
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> ，提供格式內容。"
    - id: cultureInfo
      type: System.Globalization.CultureInfo
      description: "<xref:System.Globalization.CultureInfo>要做為目前的文化特性。</xref:System.Globalization.CultureInfo>"
    - id: source
      type: System.Object
      description: "要轉換成物件<xref href=&quot;System.Windows.PropertyPath&quot;> </xref>。 這必須是字串。"
    return:
      type: System.Object
      description: "已轉換<xref href=&quot;System.Windows.PropertyPath&quot;> </xref>。"
  overload: System.Windows.PropertyPathConverter.ConvertFrom*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> source </code>提供做為<xref uid=&quot;langword_csharp_null.&quot; name=&quot;null.&quot; href=&quot;&quot;></xref>"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> source </code>不<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>，但不是預期<xref:System.String>型別。</xref:System.String>"
  platform:
  - net462
- uid: System.Windows.PropertyPathConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  id: ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.Windows.PropertyPathConverter
  langs:
  - csharp
  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  nameWithType: PropertyPathConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  fullName: System.Windows.PropertyPathConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "將指定的值物件轉換<xref href=&quot;System.Windows.PropertyPath&quot;></xref>型別。"
  syntax:
    content: public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext typeDescriptorContext, System.Globalization.CultureInfo cultureInfo, object value, Type destinationType);
    parameters:
    - id: typeDescriptorContext
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> ，提供格式內容。"
    - id: cultureInfo
      type: System.Globalization.CultureInfo
      description: "<xref:System.Globalization.CultureInfo>要做為目前的文化特性。</xref:System.Globalization.CultureInfo>"
    - id: value
      type: System.Object
      description: "<xref href=&quot;System.Windows.PropertyPath&quot;> </xref>轉換。"
    - id: destinationType
      type: System.Type
      description: "目的地類型。 這必須是<xref:System.String>型別。</xref:System.String>"
    return:
      type: System.Object
      description: "已轉換的目的地<xref:System.String>.</xref:System.String>"
  overload: System.Windows.PropertyPathConverter.ConvertTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>value</code> was provided as <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>value</code> was not <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, but was not of the expected <xref href=\"System.Windows.PropertyPath\"></xref> type.  \n  \n \\- or -  \n  \n The <code>destinationType</code> was not the <xref:System.String> type."
  platform:
  - net462
references:
- uid: System.ComponentModel.TypeConverter
  isExternal: false
  name: System.ComponentModel.TypeConverter
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Windows.PropertyPathConverter.#ctor
  parent: System.Windows.PropertyPathConverter
  isExternal: false
  name: PropertyPathConverter()
  nameWithType: PropertyPathConverter.PropertyPathConverter()
  fullName: System.Windows.PropertyPathConverter.PropertyPathConverter()
- uid: System.Windows.PropertyPathConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Windows.PropertyPathConverter
  isExternal: false
  name: CanConvertFrom(ITypeDescriptorContext,Type)
  nameWithType: PropertyPathConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.Windows.PropertyPathConverter.CanConvertFrom(ITypeDescriptorContext,Type)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.ITypeDescriptorContext
  parent: System.ComponentModel
  isExternal: false
  name: ITypeDescriptorContext
  nameWithType: ITypeDescriptorContext
  fullName: System.ComponentModel.ITypeDescriptorContext
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Windows.PropertyPathConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Windows.PropertyPathConverter
  isExternal: false
  name: CanConvertTo(ITypeDescriptorContext,Type)
  nameWithType: PropertyPathConverter.CanConvertTo(ITypeDescriptorContext,Type)
  fullName: System.Windows.PropertyPathConverter.CanConvertTo(ITypeDescriptorContext,Type)
- uid: System.Windows.PropertyPathConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.Windows.PropertyPathConverter
  isExternal: false
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: PropertyPathConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.Windows.PropertyPathConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Windows.PropertyPathConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.Windows.PropertyPathConverter
  isExternal: false
  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  nameWithType: PropertyPathConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  fullName: System.Windows.PropertyPathConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
- uid: System.Windows.PropertyPathConverter.#ctor*
  parent: System.Windows.PropertyPathConverter
  isExternal: false
  name: PropertyPathConverter
  nameWithType: PropertyPathConverter.PropertyPathConverter
- uid: System.Windows.PropertyPathConverter.CanConvertFrom*
  parent: System.Windows.PropertyPathConverter
  isExternal: false
  name: CanConvertFrom
  nameWithType: PropertyPathConverter.CanConvertFrom
- uid: System.Windows.PropertyPathConverter.CanConvertTo*
  parent: System.Windows.PropertyPathConverter
  isExternal: false
  name: CanConvertTo
  nameWithType: PropertyPathConverter.CanConvertTo
- uid: System.Windows.PropertyPathConverter.ConvertFrom*
  parent: System.Windows.PropertyPathConverter
  isExternal: false
  name: ConvertFrom
  nameWithType: PropertyPathConverter.ConvertFrom
- uid: System.Windows.PropertyPathConverter.ConvertTo*
  parent: System.Windows.PropertyPathConverter
  isExternal: false
  name: ConvertTo
  nameWithType: PropertyPathConverter.ConvertTo
