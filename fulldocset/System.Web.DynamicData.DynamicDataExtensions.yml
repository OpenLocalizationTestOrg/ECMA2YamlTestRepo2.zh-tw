### YamlMime:ManagedReference
items:
- uid: System.Web.DynamicData.DynamicDataExtensions
  id: DynamicDataExtensions
  children:
  - System.Web.DynamicData.DynamicDataExtensions.ConvertEditedValue(System.Web.DynamicData.IFieldFormattingOptions@,System.String)
  - System.Web.DynamicData.DynamicDataExtensions.EnablePersistedSelection(System.Web.UI.WebControls.BaseDataBoundControl@)
  - System.Web.DynamicData.DynamicDataExtensions.ExpandDynamicWhereParameters(System.Web.DynamicData.IDynamicDataSource@)
  - System.Web.DynamicData.DynamicDataExtensions.FindDataSourceControl(System.Web.UI.Control@)
  - System.Web.DynamicData.DynamicDataExtensions.FindFieldTemplate(System.Web.UI.Control@,System.String)
  - System.Web.DynamicData.DynamicDataExtensions.FindMetaTable(System.Web.UI.Control@)
  - System.Web.DynamicData.DynamicDataExtensions.FormatEditValue(System.Web.DynamicData.IFieldFormattingOptions@,System.Object)
  - System.Web.DynamicData.DynamicDataExtensions.FormatValue(System.Web.DynamicData.IFieldFormattingOptions@,System.Object)
  - System.Web.DynamicData.DynamicDataExtensions.GetDefaultValues(System.Web.UI.IDataSource@)
  - System.Web.DynamicData.DynamicDataExtensions.GetDefaultValues(System.Web.UI.INamingContainer@)
  - System.Web.DynamicData.DynamicDataExtensions.GetEnumType(System.Web.DynamicData.MetaColumn@)
  - System.Web.DynamicData.DynamicDataExtensions.GetMetaTable(System.Web.UI.IDataSource@)
  - System.Web.DynamicData.DynamicDataExtensions.GetMetaTable(System.Web.UI.INamingContainer@)
  - System.Web.DynamicData.DynamicDataExtensions.GetTable(System.Web.DynamicData.IDynamicDataSource@)
  - System.Web.DynamicData.DynamicDataExtensions.LoadWith``1(System.Web.UI.WebControls.LinqDataSource@)
  - System.Web.DynamicData.DynamicDataExtensions.LoadWithForeignKeys(System.Web.UI.WebControls.LinqDataSource@,System.Type)
  - System.Web.DynamicData.DynamicDataExtensions.SetMetaTable(System.Web.UI.INamingContainer@,System.Web.DynamicData.MetaTable)
  - System.Web.DynamicData.DynamicDataExtensions.SetMetaTable(System.Web.UI.INamingContainer@,System.Web.DynamicData.MetaTable,System.Collections.Generic.IDictionary{System.String,System.Object})
  - System.Web.DynamicData.DynamicDataExtensions.SetMetaTable(System.Web.UI.INamingContainer@,System.Web.DynamicData.MetaTable,System.Object)
  - System.Web.DynamicData.DynamicDataExtensions.TryGetMetaTable(System.Web.UI.IDataSource@,System.Web.DynamicData.MetaTable@)
  - System.Web.DynamicData.DynamicDataExtensions.TryGetMetaTable(System.Web.UI.INamingContainer@,System.Web.DynamicData.MetaTable@)
  langs:
  - csharp
  name: DynamicDataExtensions
  nameWithType: DynamicDataExtensions
  fullName: System.Web.DynamicData.DynamicDataExtensions
  type: Class
  summary: "提供 ASP.NET Dynamic Data 所使用的擴充方法。"
  syntax:
    content: public static class DynamicDataExtensions
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicDataExtensions.ConvertEditedValue(System.Web.DynamicData.IFieldFormattingOptions@,System.String)
  id: ConvertEditedValue(System.Web.DynamicData.IFieldFormattingOptions@,System.String)
  parent: System.Web.DynamicData.DynamicDataExtensions
  langs:
  - csharp
  name: ConvertEditedValue(IFieldFormattingOptions,String)
  nameWithType: DynamicDataExtensions.ConvertEditedValue(IFieldFormattingOptions,String)
  fullName: System.Web.DynamicData.DynamicDataExtensions.ConvertEditedValue(IFieldFormattingOptions,String)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "傳回使用者所提供的控制項，要驗證的值。"
  remarks: "格式化選項的相關資訊，請參閱<xref:System.Web.DynamicData.IFieldFormattingOptions>類型概觀。</xref:System.Web.DynamicData.IFieldFormattingOptions>"
  example:
  - "The following example shows how to use the ConvertEditedValue method. The example gets user input from a field template that is configured to accept date-time data. In the DynamicData\\FieldTemplates\\DateTime_Edit.ascx.cs or DynamicData\\FieldTemplates\\DateTime_Edit.ascx.vb file, the method converts empty strings to `null`.  \n  \n [!code-cs[System.Web.DynamicData.DynamicDataExtensions#3](~/add/codesnippet/csharp/1ef0bca6-aaf5-492d-acd1-_1.cs)]"
  syntax:
    content: public static object ConvertEditedValue (this System.Web.DynamicData.IFieldFormattingOptions formattingOptions, string value);
    parameters:
    - id: formattingOptions
      type: System.Web.DynamicData.IFieldFormattingOptions
      description: "所定義的格式化選項的物件， <xref href=&quot;System.Web.DynamicData.IFieldFormattingOptions&quot;> </xref>物件。"
    - id: value
      type: System.String
      description: "要轉換的輸入的值。"
    return:
      type: System.Object
      description: "<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>if <code>value</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> or an empty string and the <>*> property of <code>formattingOptions</code> is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>;<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>如果<code> value </code>不<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>或空白字串，並符合<> *> 屬性<code> formattingOptions </code>; 否則未變更的值<code> value </code>。"
  overload: System.Web.DynamicData.DynamicDataExtensions.ConvertEditedValue*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicDataExtensions.EnablePersistedSelection(System.Web.UI.WebControls.BaseDataBoundControl@)
  id: EnablePersistedSelection(System.Web.UI.WebControls.BaseDataBoundControl@)
  parent: System.Web.DynamicData.DynamicDataExtensions
  langs:
  - csharp
  name: EnablePersistedSelection(BaseDataBoundControl)
  nameWithType: DynamicDataExtensions.EnablePersistedSelection(BaseDataBoundControl)
  fullName: System.Web.DynamicData.DynamicDataExtensions.EnablePersistedSelection(BaseDataBoundControl)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "可讓保存支援選取項目和分頁的資料控制項中的選取範圍。"
  remarks: "擴充的控制項中<xref:System.Web.UI.WebControls.BaseDataBoundControl>並支援選取項目，分頁和排序，呼叫這個方法可讓控制項即使看不到選取的資料列，保留選取項目。</xref:System.Web.UI.WebControls.BaseDataBoundControl> 例如，如果使用者選取的資料列，然後分頁成另一個頁面上，或是使用者排序資料，所選取的資料列仍為選取狀態。 如果未呼叫此方法，選取項目會遺失使用者頁面，或排序。       <xref:System.Web.DynamicData.DynamicDataManager.RegisterControl%2A>方法會呼叫 EnablePersistedSelection。</xref:System.Web.DynamicData.DynamicDataManager.RegisterControl%2A>"
  syntax:
    content: public static void EnablePersistedSelection (this System.Web.UI.WebControls.BaseDataBoundControl dataBoundControl);
    parameters:
    - id: dataBoundControl
      type: System.Web.UI.WebControls.BaseDataBoundControl
      description: "資料繫結控制項。"
  overload: System.Web.DynamicData.DynamicDataExtensions.EnablePersistedSelection*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicDataExtensions.ExpandDynamicWhereParameters(System.Web.DynamicData.IDynamicDataSource@)
  id: ExpandDynamicWhereParameters(System.Web.DynamicData.IDynamicDataSource@)
  parent: System.Web.DynamicData.DynamicDataExtensions
  langs:
  - csharp
  name: ExpandDynamicWhereParameters(IDynamicDataSource)
  nameWithType: DynamicDataExtensions.ExpandDynamicWhereParameters(IDynamicDataSource)
  fullName: System.Web.DynamicData.DynamicDataExtensions.ExpandDynamicWhereParameters(IDynamicDataSource)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "會展開成動態篩選<xref uid=&quot;langword_csharp_Where&quot; name=&quot;Where&quot; href=&quot;&quot;></xref>資料來源所使用的參數。"
  remarks: "這個方法會展開目前的執行個體的值<xref:System.Web.DynamicData.DynamicControlParameter>和<xref:System.Web.DynamicData.DynamicQueryStringParameter>控制項`Where`都能在資料來源的查詢的參數。</xref:System.Web.DynamicData.DynamicQueryStringParameter> </xref:System.Web.DynamicData.DynamicControlParameter>"
  syntax:
    content: public static void ExpandDynamicWhereParameters (this System.Web.DynamicData.IDynamicDataSource dataSource);
    parameters:
    - id: dataSource
      type: System.Web.DynamicData.IDynamicDataSource
      description: "資料來源物件。"
  overload: System.Web.DynamicData.DynamicDataExtensions.ExpandDynamicWhereParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicDataExtensions.FindDataSourceControl(System.Web.UI.Control@)
  id: FindDataSourceControl(System.Web.UI.Control@)
  parent: System.Web.DynamicData.DynamicDataExtensions
  langs:
  - csharp
  name: FindDataSourceControl(Control)
  nameWithType: DynamicDataExtensions.FindDataSourceControl(Control)
  fullName: System.Web.DynamicData.DynamicDataExtensions.FindDataSourceControl(Control)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "傳回與指定之控制項的資料控制項相關聯的資料來源。"
  remarks: ''
  example:
  - "The following example shows how to find the containing data source control. In the example, the Dynamic Data page templates are copied to the \\DynamicData\\CustomPages\\ProductDescriptions folder to provide a custom display for the ProductDescription table of the AdventureWorksLT database. The Insert.aspx file markup is changed to add an `OnDataBound` event handler named `DetailsView1_DataBound`, in which the FindDataSourceControl method is called to find the data source control.  \n  \n [!code-cs[System.Web.DynamicData.DynamicDataExtensions#1](~/add/codesnippet/csharp/891f3768-5749-4318-8a27-_1.cs)]  \n[!code-cs[System.Web.DynamicData.DynamicDataExtensions#2](~/add/codesnippet/csharp/891f3768-5749-4318-8a27-_2.aspx)]"
  syntax:
    content: public static System.Web.DynamicData.IDynamicDataSource FindDataSourceControl (this System.Web.UI.Control current);
    parameters:
    - id: current
      type: System.Web.UI.Control
      description: "想要尋找的資料繫結控制項，其包含控制您的階層內的控制項。"
    return:
      type: System.Web.DynamicData.IDynamicDataSource
      description: "與指定之控制項的資料控制項相關聯的資料來源。"
  overload: System.Web.DynamicData.DynamicDataExtensions.FindDataSourceControl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicDataExtensions.FindFieldTemplate(System.Web.UI.Control@,System.String)
  id: FindFieldTemplate(System.Web.UI.Control@,System.String)
  parent: System.Web.DynamicData.DynamicDataExtensions
  langs:
  - csharp
  name: FindFieldTemplate(Control,String)
  nameWithType: DynamicDataExtensions.FindFieldTemplate(Control,String)
  fullName: System.Web.DynamicData.DynamicDataExtensions.FindFieldTemplate(Control,String)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "傳回指定之資料行中指定之控制項的欄位樣板的命名容器。"
  remarks: ''
  example:
  - "The following example shows how to find the text box control for a specified column name. In example, the Dynamic Data page templates are copied to the \\DynamicData\\CustomPages\\ProductDescriptions folder to provide a custom display for the ProductDescription table of the AdventureWorksLT database. The Insert.aspx file markup is changed to add an `OnDataBound` event handler named `DetailsView1_DataBound`, in which the <xref:System.Web.DynamicData.DynamicDataExtensions.FindDataSourceControl%2A> method is called to find a text box control.  \n  \n [!code-cs[System.Web.DynamicData.DynamicDataExtensions#1](~/add/codesnippet/csharp/a9a49ffb-dded-4e65-a1d7-_1.cs)]  \n[!code-cs[System.Web.DynamicData.DynamicDataExtensions#2](~/add/codesnippet/csharp/a9a49ffb-dded-4e65-a1d7-_2.aspx)]"
  syntax:
    content: public static System.Web.UI.Control FindFieldTemplate (this System.Web.UI.Control control, string columnName);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "包含的控制項。"
    - id: columnName
      type: System.String
      description: "資料行的名稱。"
    return:
      type: System.Web.UI.Control
      description: "指定的控制項的命名容器中的指定資料行的欄位樣板。"
  overload: System.Web.DynamicData.DynamicDataExtensions.FindFieldTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicDataExtensions.FindMetaTable(System.Web.UI.Control@)
  id: FindMetaTable(System.Web.UI.Control@)
  parent: System.Web.DynamicData.DynamicDataExtensions
  langs:
  - csharp
  name: FindMetaTable(Control)
  nameWithType: DynamicDataExtensions.FindMetaTable(Control)
  fullName: System.Web.DynamicData.DynamicDataExtensions.FindMetaTable(Control)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "傳回包含資料控制項的 metatable 物件。"
  remarks: ''
  example:
  - "The following example shows how to find the <xref:System.Web.DynamicData.MetaTable> object for a control. In the example, the Dynamic Data page templates are copied to the \\DynamicData\\CustomPages\\ProductDescriptions folder to provide a custom display for the ProductDescription table of the AdventureWorksLT database. The Insert.aspx file markup is changed to add an `OnDataBound` event handler named `DetailsView1_DataBound`, in which the FindMetaTable method is called to find the <xref:System.Web.DynamicData.MetaTable> object.  \n  \n [!code-cs[System.Web.DynamicData.DynamicDataExtensions#1](~/add/codesnippet/csharp/287a14db-c680-4865-9ec7-_1.cs)]  \n[!code-cs[System.Web.DynamicData.DynamicDataExtensions#2](~/add/codesnippet/csharp/287a14db-c680-4865-9ec7-_2.aspx)]"
  syntax:
    content: public static System.Web.DynamicData.MetaTable FindMetaTable (this System.Web.UI.Control current);
    parameters:
    - id: current
      type: System.Web.UI.Control
      description: "目前的控制項。"
    return:
      type: System.Web.DynamicData.MetaTable
      description: "包含的資料控制項的 metatable 物件。"
  overload: System.Web.DynamicData.DynamicDataExtensions.FindMetaTable*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicDataExtensions.FormatEditValue(System.Web.DynamicData.IFieldFormattingOptions@,System.Object)
  id: FormatEditValue(System.Web.DynamicData.IFieldFormattingOptions@,System.Object)
  parent: System.Web.DynamicData.DynamicDataExtensions
  langs:
  - csharp
  name: FormatEditValue(IFieldFormattingOptions,Object)
  nameWithType: DynamicDataExtensions.FormatEditValue(IFieldFormattingOptions,Object)
  fullName: System.Web.DynamicData.DynamicDataExtensions.FormatEditValue(IFieldFormattingOptions,Object)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "使用指定的格式化選項，格式化指定的欄位值。"
  remarks: "FormatEditValue 方法就像<xref:System.Web.DynamicData.DynamicDataExtensions.FormatValue%2A>方法，但它可在資料欄位處於編輯模式。</xref:System.Web.DynamicData.DynamicDataExtensions.FormatValue%2A>"
  syntax:
    content: public static string FormatEditValue (this System.Web.DynamicData.IFieldFormattingOptions formattingOptions, object fieldValue);
    parameters:
    - id: formattingOptions
      type: System.Web.DynamicData.IFieldFormattingOptions
      description: "<xref href=&quot;System.Web.DynamicData.IFieldFormattingOptions&quot;> </xref>来使用執行個體。"
    - id: fieldValue
      type: System.Object
      description: "要格式化的欄位值。"
    return:
      type: System.String
      description: "使用指定的格式化選項已經格式化欄位值。"
  overload: System.Web.DynamicData.DynamicDataExtensions.FormatEditValue*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicDataExtensions.FormatValue(System.Web.DynamicData.IFieldFormattingOptions@,System.Object)
  id: FormatValue(System.Web.DynamicData.IFieldFormattingOptions@,System.Object)
  parent: System.Web.DynamicData.DynamicDataExtensions
  langs:
  - csharp
  name: FormatValue(IFieldFormattingOptions,Object)
  nameWithType: DynamicDataExtensions.FormatValue(IFieldFormattingOptions,Object)
  fullName: System.Web.DynamicData.DynamicDataExtensions.FormatValue(IFieldFormattingOptions,Object)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "使用指定的格式化選項，格式化指定的欄位值。"
  syntax:
    content: public static string FormatValue (this System.Web.DynamicData.IFieldFormattingOptions formattingOptions, object fieldValue);
    parameters:
    - id: formattingOptions
      type: System.Web.DynamicData.IFieldFormattingOptions
      description: "<xref href=&quot;System.Web.DynamicData.IFieldFormattingOptions&quot;> </xref>来使用執行個體。"
    - id: fieldValue
      type: System.Object
      description: "要格式化的欄位值。"
    return:
      type: System.String
      description: "使用指定的格式化選項已經格式化欄位值。"
  overload: System.Web.DynamicData.DynamicDataExtensions.FormatValue*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicDataExtensions.GetDefaultValues(System.Web.UI.IDataSource@)
  id: GetDefaultValues(System.Web.UI.IDataSource@)
  parent: System.Web.DynamicData.DynamicDataExtensions
  langs:
  - csharp
  name: GetDefaultValues(IDataSource)
  nameWithType: DynamicDataExtensions.GetDefaultValues(IDataSource)
  fullName: System.Web.DynamicData.DynamicDataExtensions.GetDefaultValues(IDataSource)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "取得指定的資料來源的預設值的集合。"
  remarks: "預設值的集合使用設定的<xref:System.Web.DynamicData.DynamicDataExtensions.SetMetaTable%2A>或<xref:System.Web.UI.DataControlExtensions.EnableDynamicData%2A>方法。</xref:System.Web.UI.DataControlExtensions.EnableDynamicData%2A> </xref:System.Web.DynamicData.DynamicDataExtensions.SetMetaTable%2A>"
  syntax:
    content: public static System.Collections.Generic.IDictionary<string,object> GetDefaultValues (this System.Web.UI.IDataSource dataSource);
    parameters:
    - id: dataSource
      type: System.Web.UI.IDataSource
      description: "要取得的預設值的資料來源。"
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
      description: "相關聯的預設值的集合<xref href=&quot;System.Web.UI.IDataSource&quot;></xref>物件。"
  overload: System.Web.DynamicData.DynamicDataExtensions.GetDefaultValues*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicDataExtensions.GetDefaultValues(System.Web.UI.INamingContainer@)
  id: GetDefaultValues(System.Web.UI.INamingContainer@)
  parent: System.Web.DynamicData.DynamicDataExtensions
  langs:
  - csharp
  name: GetDefaultValues(INamingContainer)
  nameWithType: DynamicDataExtensions.GetDefaultValues(INamingContainer)
  fullName: System.Web.DynamicData.DynamicDataExtensions.GetDefaultValues(INamingContainer)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "取得指定的資料控制項的預設值的集合。"
  remarks: "預設值的集合使用設定的<xref:System.Web.DynamicData.DynamicDataExtensions.SetMetaTable%2A>或<xref:System.Web.UI.DataControlExtensions.EnableDynamicData%2A>方法。</xref:System.Web.UI.DataControlExtensions.EnableDynamicData%2A> </xref:System.Web.DynamicData.DynamicDataExtensions.SetMetaTable%2A>"
  syntax:
    content: public static System.Collections.Generic.IDictionary<string,object> GetDefaultValues (this System.Web.UI.INamingContainer control);
    parameters:
    - id: control
      type: System.Web.UI.INamingContainer
      description: "要取得的預設值的資料控制項。"
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
      description: "相關聯的預設值的集合<xref href=&quot;System.Web.UI.INamingContainer&quot;></xref>物件。"
  overload: System.Web.DynamicData.DynamicDataExtensions.GetDefaultValues*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicDataExtensions.GetEnumType(System.Web.DynamicData.MetaColumn@)
  id: GetEnumType(System.Web.DynamicData.MetaColumn@)
  parent: System.Web.DynamicData.DynamicDataExtensions
  langs:
  - csharp
  name: GetEnumType(MetaColumn)
  nameWithType: DynamicDataExtensions.GetEnumType(MetaColumn)
  fullName: System.Web.DynamicData.DynamicDataExtensions.GetEnumType(MetaColumn)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "取得列舉型別表示之資料行類型。"
  remarks: "資料行代表列舉，如果基礎類型是列舉型別，或如果資料行在實體部分類別中的標註<xref:System.ComponentModel.DataAnnotations.EnumDataTypeAttribute>屬性。</xref:System.ComponentModel.DataAnnotations.EnumDataTypeAttribute>"
  syntax:
    content: public static Type GetEnumType (this System.Web.DynamicData.MetaColumn column);
    parameters:
    - id: column
      type: System.Web.DynamicData.MetaColumn
      description: "若要取得的列舉型別資料行。"
    return:
      type: System.Type
      description: "代表資料行的基礎類型為列舉類型; 如果列舉類型否則， <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.DynamicData.DynamicDataExtensions.GetEnumType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicDataExtensions.GetMetaTable(System.Web.UI.IDataSource@)
  id: GetMetaTable(System.Web.UI.IDataSource@)
  parent: System.Web.DynamicData.DynamicDataExtensions
  langs:
  - csharp
  name: GetMetaTable(IDataSource)
  nameWithType: DynamicDataExtensions.GetMetaTable(IDataSource)
  fullName: System.Web.DynamicData.DynamicDataExtensions.GetMetaTable(IDataSource)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "取得指定的資料來源物件中的資料表的中繼資料。"
  remarks: "資料表中繼資料已設定使用<xref:System.Web.DynamicData.DynamicDataExtensions.SetMetaTable%2A>或<xref:System.Web.UI.DataControlExtensions.EnableDynamicData%2A>方法。</xref:System.Web.UI.DataControlExtensions.EnableDynamicData%2A> </xref:System.Web.DynamicData.DynamicDataExtensions.SetMetaTable%2A>"
  syntax:
    content: public static System.Web.DynamicData.MetaTable GetMetaTable (this System.Web.UI.IDataSource dataSource);
    parameters:
    - id: dataSource
      type: System.Web.UI.IDataSource
      description: "要取得資料表的中繼資料物件的資料來源。"
    return:
      type: System.Web.DynamicData.MetaTable
      description: "資料表中繼資料與相關聯<xref href=&quot;System.Web.UI.IDataSource&quot;></xref>物件。"
  overload: System.Web.DynamicData.DynamicDataExtensions.GetMetaTable*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicDataExtensions.GetMetaTable(System.Web.UI.INamingContainer@)
  id: GetMetaTable(System.Web.UI.INamingContainer@)
  parent: System.Web.DynamicData.DynamicDataExtensions
  langs:
  - csharp
  name: GetMetaTable(INamingContainer)
  nameWithType: DynamicDataExtensions.GetMetaTable(INamingContainer)
  fullName: System.Web.DynamicData.DynamicDataExtensions.GetMetaTable(INamingContainer)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "取得指定的資料控制項資料表中繼資料。"
  remarks: "資料表中繼資料已設定使用<xref:System.Web.DynamicData.DynamicDataExtensions.SetMetaTable%2A>或<xref:System.Web.UI.DataControlExtensions.EnableDynamicData%2A>方法。</xref:System.Web.UI.DataControlExtensions.EnableDynamicData%2A> </xref:System.Web.DynamicData.DynamicDataExtensions.SetMetaTable%2A>"
  syntax:
    content: public static System.Web.DynamicData.MetaTable GetMetaTable (this System.Web.UI.INamingContainer control);
    parameters:
    - id: control
      type: System.Web.UI.INamingContainer
      description: "要取得資料表的中繼資料資料控制項。"
    return:
      type: System.Web.DynamicData.MetaTable
      description: "資料表中繼資料相關聯<xref href=&quot;System.Web.UI.INamingContainer&quot;></xref>物件。"
  overload: System.Web.DynamicData.DynamicDataExtensions.GetMetaTable*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicDataExtensions.GetTable(System.Web.DynamicData.IDynamicDataSource@)
  id: GetTable(System.Web.DynamicData.IDynamicDataSource@)
  parent: System.Web.DynamicData.DynamicDataExtensions
  langs:
  - csharp
  name: GetTable(IDynamicDataSource)
  nameWithType: DynamicDataExtensions.GetTable(IDynamicDataSource)
  fullName: System.Web.DynamicData.DynamicDataExtensions.GetTable(IDynamicDataSource)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "傳回<xref href=&quot;System.Web.DynamicData.MetaTable&quot;></xref>與指定的資料來源控制項相關聯的物件。"
  syntax:
    content: public static System.Web.DynamicData.MetaTable GetTable (this System.Web.DynamicData.IDynamicDataSource dataSource);
    parameters:
    - id: dataSource
      type: System.Web.DynamicData.IDynamicDataSource
      description: "資料來源控制項。"
    return:
      type: System.Web.DynamicData.MetaTable
      description: "使用指定的資料相關聯的資料表原始檔控制。"
  overload: System.Web.DynamicData.DynamicDataExtensions.GetTable*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <>*> property of <code>dataSource</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.      -or-       The <>*> property of <code>dataSource</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicDataExtensions.LoadWith``1(System.Web.UI.WebControls.LinqDataSource@)
  id: LoadWith``1(System.Web.UI.WebControls.LinqDataSource@)
  parent: System.Web.DynamicData.DynamicDataExtensions
  langs:
  - csharp
  name: LoadWith(LinqDataSource)
  nameWithType: DynamicDataExtensions.LoadWith(LinqDataSource)
  fullName: System.Web.DynamicData.DynamicDataExtensions.LoadWith(LinqDataSource)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  syntax:
    content: public static void LoadWith<TEntity> (this System.Web.UI.WebControls.LinqDataSource dataSource);
    parameters:
    - id: dataSource
      type: System.Web.UI.WebControls.LinqDataSource
      description: "即將加入。"
  overload: System.Web.DynamicData.DynamicDataExtensions.LoadWith<TEntity>*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicDataExtensions.LoadWithForeignKeys(System.Web.UI.WebControls.LinqDataSource@,System.Type)
  id: LoadWithForeignKeys(System.Web.UI.WebControls.LinqDataSource@,System.Type)
  parent: System.Web.DynamicData.DynamicDataExtensions
  langs:
  - csharp
  name: LoadWithForeignKeys(LinqDataSource,Type)
  nameWithType: DynamicDataExtensions.LoadWithForeignKeys(LinqDataSource,Type)
  fullName: System.Web.DynamicData.DynamicDataExtensions.LoadWithForeignKeys(LinqDataSource,Type)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "設定<xref href=&quot;System.Data.Linq.DataLoadOptions&quot;> </xref> LINQ 到 SQL 資料來源，以強制載入的所有外部索引鍵實體的值。"
  remarks: "如需詳細資訊，請參閱<xref:System.Data.Linq.DataLoadOptions?displayProperty=fullName>類別概觀。</xref:System.Data.Linq.DataLoadOptions?displayProperty=fullName>"
  syntax:
    content: public static void LoadWithForeignKeys (this System.Web.UI.WebControls.LinqDataSource dataSource, Type rowType);
    parameters:
    - id: dataSource
      type: System.Web.UI.WebControls.LinqDataSource
      description: "要載入的外部索引鍵的 LINQ 資料來源。"
    - id: rowType
      type: System.Type
      description: "資料來源所傳回的實體類型。"
  overload: System.Web.DynamicData.DynamicDataExtensions.LoadWithForeignKeys*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicDataExtensions.SetMetaTable(System.Web.UI.INamingContainer@,System.Web.DynamicData.MetaTable)
  id: SetMetaTable(System.Web.UI.INamingContainer@,System.Web.DynamicData.MetaTable)
  parent: System.Web.DynamicData.DynamicDataExtensions
  langs:
  - csharp
  name: SetMetaTable(INamingContainer,MetaTable)
  nameWithType: DynamicDataExtensions.SetMetaTable(INamingContainer,MetaTable)
  fullName: System.Web.DynamicData.DynamicDataExtensions.SetMetaTable(INamingContainer,MetaTable)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "設定指定的資料控制項資料表中繼資料。"
  syntax:
    content: public static void SetMetaTable (this System.Web.UI.INamingContainer control, System.Web.DynamicData.MetaTable table);
    parameters:
    - id: control
      type: System.Web.UI.INamingContainer
      description: "<xref href=&quot;System.Web.UI.INamingContainer&quot;> </xref>包含之資料表的物件。"
    - id: table
      type: System.Web.DynamicData.MetaTable
      description: "資料表中繼資料。"
  overload: System.Web.DynamicData.DynamicDataExtensions.SetMetaTable*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicDataExtensions.SetMetaTable(System.Web.UI.INamingContainer@,System.Web.DynamicData.MetaTable,System.Collections.Generic.IDictionary{System.String,System.Object})
  id: SetMetaTable(System.Web.UI.INamingContainer@,System.Web.DynamicData.MetaTable,System.Collections.Generic.IDictionary{System.String,System.Object})
  parent: System.Web.DynamicData.DynamicDataExtensions
  langs:
  - csharp
  name: SetMetaTable(INamingContainer,MetaTable,IDictionary<String,Object>)
  nameWithType: DynamicDataExtensions.SetMetaTable(INamingContainer,MetaTable,IDictionary<String,Object>)
  fullName: System.Web.DynamicData.DynamicDataExtensions.SetMetaTable(INamingContainer,MetaTable,IDictionary<String,Object>)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "設定指定的資料控制項資料表中繼資料和預設值對應。"
  syntax:
    content: public static void SetMetaTable (this System.Web.UI.INamingContainer control, System.Web.DynamicData.MetaTable table, System.Collections.Generic.IDictionary<string,object> defaultValues);
    parameters:
    - id: control
      type: System.Web.UI.INamingContainer
      description: "<xref href=&quot;System.Web.UI.INamingContainer&quot;> </xref>包含之資料表的物件。"
    - id: table
      type: System.Web.DynamicData.MetaTable
      description: "資料表中繼資料。"
    - id: defaultValues
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
      description: "預設值對應。"
  overload: System.Web.DynamicData.DynamicDataExtensions.SetMetaTable*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicDataExtensions.SetMetaTable(System.Web.UI.INamingContainer@,System.Web.DynamicData.MetaTable,System.Object)
  id: SetMetaTable(System.Web.UI.INamingContainer@,System.Web.DynamicData.MetaTable,System.Object)
  parent: System.Web.DynamicData.DynamicDataExtensions
  langs:
  - csharp
  name: SetMetaTable(INamingContainer,MetaTable,Object)
  nameWithType: DynamicDataExtensions.SetMetaTable(INamingContainer,MetaTable,Object)
  fullName: System.Web.DynamicData.DynamicDataExtensions.SetMetaTable(INamingContainer,MetaTable,Object)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "設定指定的資料控制項資料表中繼資料和預設值對應。"
  syntax:
    content: public static void SetMetaTable (this System.Web.UI.INamingContainer control, System.Web.DynamicData.MetaTable table, object defaultValues);
    parameters:
    - id: control
      type: System.Web.UI.INamingContainer
      description: "<xref href=&quot;System.Web.UI.INamingContainer&quot;> </xref>包含之資料表的物件。"
    - id: table
      type: System.Web.DynamicData.MetaTable
      description: "資料表中繼資料。"
    - id: defaultValues
      type: System.Object
      description: "預設值對應。"
  overload: System.Web.DynamicData.DynamicDataExtensions.SetMetaTable*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicDataExtensions.TryGetMetaTable(System.Web.UI.IDataSource@,System.Web.DynamicData.MetaTable@)
  id: TryGetMetaTable(System.Web.UI.IDataSource@,System.Web.DynamicData.MetaTable@)
  parent: System.Web.DynamicData.DynamicDataExtensions
  langs:
  - csharp
  name: TryGetMetaTable(IDataSource,MetaTable)
  nameWithType: DynamicDataExtensions.TryGetMetaTable(IDataSource,MetaTable)
  fullName: System.Web.DynamicData.DynamicDataExtensions.TryGetMetaTable(IDataSource,MetaTable)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "決定是否可以使用 資料表中繼資料。"
  syntax:
    content: public static bool TryGetMetaTable (this System.Web.UI.IDataSource dataSource, out System.Web.DynamicData.MetaTable table);
    parameters:
    - id: dataSource
      type: System.Web.UI.IDataSource
      description: "包含資料表的資料來源。"
    - id: table
      type: System.Web.DynamicData.MetaTable
      description: "這個方法傳回時，包含資料表的中繼資料。 這個參數未初始化便傳遞。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>資料表中繼資料是否可用。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.DynamicData.DynamicDataExtensions.TryGetMetaTable*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicDataExtensions.TryGetMetaTable(System.Web.UI.INamingContainer@,System.Web.DynamicData.MetaTable@)
  id: TryGetMetaTable(System.Web.UI.INamingContainer@,System.Web.DynamicData.MetaTable@)
  parent: System.Web.DynamicData.DynamicDataExtensions
  langs:
  - csharp
  name: TryGetMetaTable(INamingContainer,MetaTable)
  nameWithType: DynamicDataExtensions.TryGetMetaTable(INamingContainer,MetaTable)
  fullName: System.Web.DynamicData.DynamicDataExtensions.TryGetMetaTable(INamingContainer,MetaTable)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "決定是否可以使用 資料表中繼資料。"
  syntax:
    content: public static bool TryGetMetaTable (this System.Web.UI.INamingContainer control, out System.Web.DynamicData.MetaTable table);
    parameters:
    - id: control
      type: System.Web.UI.INamingContainer
      description: "<xref href=&quot;System.Web.UI.INamingContainer&quot;> </xref>包含之資料表的物件。"
    - id: table
      type: System.Web.DynamicData.MetaTable
      description: "這個方法傳回時，包含資料表的中繼資料。 這個參數未初始化便傳遞。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>資料表中繼資料是否可用。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.DynamicData.DynamicDataExtensions.TryGetMetaTable*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Web.DynamicData.DynamicDataExtensions.ConvertEditedValue(System.Web.DynamicData.IFieldFormattingOptions@,System.String)
  parent: System.Web.DynamicData.DynamicDataExtensions
  isExternal: false
  name: ConvertEditedValue(IFieldFormattingOptions,String)
  nameWithType: DynamicDataExtensions.ConvertEditedValue(IFieldFormattingOptions,String)
  fullName: System.Web.DynamicData.DynamicDataExtensions.ConvertEditedValue(IFieldFormattingOptions,String)
- uid: System.Web.DynamicData.IFieldFormattingOptions
  parent: System.Web.DynamicData
  isExternal: false
  name: IFieldFormattingOptions
  nameWithType: IFieldFormattingOptions
  fullName: System.Web.DynamicData.IFieldFormattingOptions
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.DynamicData.DynamicDataExtensions.EnablePersistedSelection(System.Web.UI.WebControls.BaseDataBoundControl@)
  parent: System.Web.DynamicData.DynamicDataExtensions
  isExternal: false
  name: EnablePersistedSelection(BaseDataBoundControl)
  nameWithType: DynamicDataExtensions.EnablePersistedSelection(BaseDataBoundControl)
  fullName: System.Web.DynamicData.DynamicDataExtensions.EnablePersistedSelection(BaseDataBoundControl)
- uid: System.Web.UI.WebControls.BaseDataBoundControl
  parent: System.Web.UI.WebControls
  isExternal: false
  name: BaseDataBoundControl
  nameWithType: BaseDataBoundControl
  fullName: System.Web.UI.WebControls.BaseDataBoundControl
- uid: System.Web.DynamicData.DynamicDataExtensions.ExpandDynamicWhereParameters(System.Web.DynamicData.IDynamicDataSource@)
  parent: System.Web.DynamicData.DynamicDataExtensions
  isExternal: false
  name: ExpandDynamicWhereParameters(IDynamicDataSource)
  nameWithType: DynamicDataExtensions.ExpandDynamicWhereParameters(IDynamicDataSource)
  fullName: System.Web.DynamicData.DynamicDataExtensions.ExpandDynamicWhereParameters(IDynamicDataSource)
- uid: System.Web.DynamicData.IDynamicDataSource
  parent: System.Web.DynamicData
  isExternal: false
  name: IDynamicDataSource
  nameWithType: IDynamicDataSource
  fullName: System.Web.DynamicData.IDynamicDataSource
- uid: System.Web.DynamicData.DynamicDataExtensions.FindDataSourceControl(System.Web.UI.Control@)
  parent: System.Web.DynamicData.DynamicDataExtensions
  isExternal: false
  name: FindDataSourceControl(Control)
  nameWithType: DynamicDataExtensions.FindDataSourceControl(Control)
  fullName: System.Web.DynamicData.DynamicDataExtensions.FindDataSourceControl(Control)
- uid: System.Web.UI.Control
  parent: System.Web.UI
  isExternal: false
  name: Control
  nameWithType: Control
  fullName: System.Web.UI.Control
- uid: System.Web.DynamicData.DynamicDataExtensions.FindFieldTemplate(System.Web.UI.Control@,System.String)
  parent: System.Web.DynamicData.DynamicDataExtensions
  isExternal: false
  name: FindFieldTemplate(Control,String)
  nameWithType: DynamicDataExtensions.FindFieldTemplate(Control,String)
  fullName: System.Web.DynamicData.DynamicDataExtensions.FindFieldTemplate(Control,String)
- uid: System.Web.DynamicData.DynamicDataExtensions.FindMetaTable(System.Web.UI.Control@)
  parent: System.Web.DynamicData.DynamicDataExtensions
  isExternal: false
  name: FindMetaTable(Control)
  nameWithType: DynamicDataExtensions.FindMetaTable(Control)
  fullName: System.Web.DynamicData.DynamicDataExtensions.FindMetaTable(Control)
- uid: System.Web.DynamicData.MetaTable
  parent: System.Web.DynamicData
  isExternal: false
  name: MetaTable
  nameWithType: MetaTable
  fullName: System.Web.DynamicData.MetaTable
- uid: System.Web.DynamicData.DynamicDataExtensions.FormatEditValue(System.Web.DynamicData.IFieldFormattingOptions@,System.Object)
  parent: System.Web.DynamicData.DynamicDataExtensions
  isExternal: false
  name: FormatEditValue(IFieldFormattingOptions,Object)
  nameWithType: DynamicDataExtensions.FormatEditValue(IFieldFormattingOptions,Object)
  fullName: System.Web.DynamicData.DynamicDataExtensions.FormatEditValue(IFieldFormattingOptions,Object)
- uid: System.Web.DynamicData.DynamicDataExtensions.FormatValue(System.Web.DynamicData.IFieldFormattingOptions@,System.Object)
  parent: System.Web.DynamicData.DynamicDataExtensions
  isExternal: false
  name: FormatValue(IFieldFormattingOptions,Object)
  nameWithType: DynamicDataExtensions.FormatValue(IFieldFormattingOptions,Object)
  fullName: System.Web.DynamicData.DynamicDataExtensions.FormatValue(IFieldFormattingOptions,Object)
- uid: System.Web.DynamicData.DynamicDataExtensions.GetDefaultValues(System.Web.UI.IDataSource@)
  parent: System.Web.DynamicData.DynamicDataExtensions
  isExternal: false
  name: GetDefaultValues(IDataSource)
  nameWithType: DynamicDataExtensions.GetDefaultValues(IDataSource)
  fullName: System.Web.DynamicData.DynamicDataExtensions.GetDefaultValues(IDataSource)
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<String,Object>
  nameWithType: IDictionary<String,Object>
  fullName: System.Collections.Generic.IDictionary<System.String,System.Object>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.String,System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.UI.IDataSource
  parent: System.Web.UI
  isExternal: false
  name: IDataSource
  nameWithType: IDataSource
  fullName: System.Web.UI.IDataSource
- uid: System.Web.DynamicData.DynamicDataExtensions.GetDefaultValues(System.Web.UI.INamingContainer@)
  parent: System.Web.DynamicData.DynamicDataExtensions
  isExternal: false
  name: GetDefaultValues(INamingContainer)
  nameWithType: DynamicDataExtensions.GetDefaultValues(INamingContainer)
  fullName: System.Web.DynamicData.DynamicDataExtensions.GetDefaultValues(INamingContainer)
- uid: System.Web.UI.INamingContainer
  parent: System.Web.UI
  isExternal: false
  name: INamingContainer
  nameWithType: INamingContainer
  fullName: System.Web.UI.INamingContainer
- uid: System.Web.DynamicData.DynamicDataExtensions.GetEnumType(System.Web.DynamicData.MetaColumn@)
  parent: System.Web.DynamicData.DynamicDataExtensions
  isExternal: false
  name: GetEnumType(MetaColumn)
  nameWithType: DynamicDataExtensions.GetEnumType(MetaColumn)
  fullName: System.Web.DynamicData.DynamicDataExtensions.GetEnumType(MetaColumn)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.DynamicData.MetaColumn
  parent: System.Web.DynamicData
  isExternal: false
  name: MetaColumn
  nameWithType: MetaColumn
  fullName: System.Web.DynamicData.MetaColumn
- uid: System.Web.DynamicData.DynamicDataExtensions.GetMetaTable(System.Web.UI.IDataSource@)
  parent: System.Web.DynamicData.DynamicDataExtensions
  isExternal: false
  name: GetMetaTable(IDataSource)
  nameWithType: DynamicDataExtensions.GetMetaTable(IDataSource)
  fullName: System.Web.DynamicData.DynamicDataExtensions.GetMetaTable(IDataSource)
- uid: System.Web.DynamicData.DynamicDataExtensions.GetMetaTable(System.Web.UI.INamingContainer@)
  parent: System.Web.DynamicData.DynamicDataExtensions
  isExternal: false
  name: GetMetaTable(INamingContainer)
  nameWithType: DynamicDataExtensions.GetMetaTable(INamingContainer)
  fullName: System.Web.DynamicData.DynamicDataExtensions.GetMetaTable(INamingContainer)
- uid: System.Web.DynamicData.DynamicDataExtensions.GetTable(System.Web.DynamicData.IDynamicDataSource@)
  parent: System.Web.DynamicData.DynamicDataExtensions
  isExternal: false
  name: GetTable(IDynamicDataSource)
  nameWithType: DynamicDataExtensions.GetTable(IDynamicDataSource)
  fullName: System.Web.DynamicData.DynamicDataExtensions.GetTable(IDynamicDataSource)
- uid: System.Web.DynamicData.DynamicDataExtensions.LoadWith``1(System.Web.UI.WebControls.LinqDataSource@)
  parent: System.Web.DynamicData.DynamicDataExtensions
  isExternal: false
  name: LoadWith(LinqDataSource)
  nameWithType: DynamicDataExtensions.LoadWith(LinqDataSource)
  fullName: System.Web.DynamicData.DynamicDataExtensions.LoadWith(LinqDataSource)
- uid: System.Web.UI.WebControls.LinqDataSource
  parent: System.Web.UI.WebControls
  isExternal: false
  name: LinqDataSource
  nameWithType: LinqDataSource
  fullName: System.Web.UI.WebControls.LinqDataSource
- uid: System.Web.DynamicData.DynamicDataExtensions.LoadWithForeignKeys(System.Web.UI.WebControls.LinqDataSource@,System.Type)
  parent: System.Web.DynamicData.DynamicDataExtensions
  isExternal: false
  name: LoadWithForeignKeys(LinqDataSource,Type)
  nameWithType: DynamicDataExtensions.LoadWithForeignKeys(LinqDataSource,Type)
  fullName: System.Web.DynamicData.DynamicDataExtensions.LoadWithForeignKeys(LinqDataSource,Type)
- uid: System.Web.DynamicData.DynamicDataExtensions.SetMetaTable(System.Web.UI.INamingContainer@,System.Web.DynamicData.MetaTable)
  parent: System.Web.DynamicData.DynamicDataExtensions
  isExternal: false
  name: SetMetaTable(INamingContainer,MetaTable)
  nameWithType: DynamicDataExtensions.SetMetaTable(INamingContainer,MetaTable)
  fullName: System.Web.DynamicData.DynamicDataExtensions.SetMetaTable(INamingContainer,MetaTable)
- uid: System.Web.DynamicData.DynamicDataExtensions.SetMetaTable(System.Web.UI.INamingContainer@,System.Web.DynamicData.MetaTable,System.Collections.Generic.IDictionary{System.String,System.Object})
  parent: System.Web.DynamicData.DynamicDataExtensions
  isExternal: false
  name: SetMetaTable(INamingContainer,MetaTable,IDictionary<String,Object>)
  nameWithType: DynamicDataExtensions.SetMetaTable(INamingContainer,MetaTable,IDictionary<String,Object>)
  fullName: System.Web.DynamicData.DynamicDataExtensions.SetMetaTable(INamingContainer,MetaTable,IDictionary<String,Object>)
- uid: System.Web.DynamicData.DynamicDataExtensions.SetMetaTable(System.Web.UI.INamingContainer@,System.Web.DynamicData.MetaTable,System.Object)
  parent: System.Web.DynamicData.DynamicDataExtensions
  isExternal: false
  name: SetMetaTable(INamingContainer,MetaTable,Object)
  nameWithType: DynamicDataExtensions.SetMetaTable(INamingContainer,MetaTable,Object)
  fullName: System.Web.DynamicData.DynamicDataExtensions.SetMetaTable(INamingContainer,MetaTable,Object)
- uid: System.Web.DynamicData.DynamicDataExtensions.TryGetMetaTable(System.Web.UI.IDataSource@,System.Web.DynamicData.MetaTable@)
  parent: System.Web.DynamicData.DynamicDataExtensions
  isExternal: false
  name: TryGetMetaTable(IDataSource,MetaTable)
  nameWithType: DynamicDataExtensions.TryGetMetaTable(IDataSource,MetaTable)
  fullName: System.Web.DynamicData.DynamicDataExtensions.TryGetMetaTable(IDataSource,MetaTable)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.DynamicData.DynamicDataExtensions.TryGetMetaTable(System.Web.UI.INamingContainer@,System.Web.DynamicData.MetaTable@)
  parent: System.Web.DynamicData.DynamicDataExtensions
  isExternal: false
  name: TryGetMetaTable(INamingContainer,MetaTable)
  nameWithType: DynamicDataExtensions.TryGetMetaTable(INamingContainer,MetaTable)
  fullName: System.Web.DynamicData.DynamicDataExtensions.TryGetMetaTable(INamingContainer,MetaTable)
- uid: System.Web.DynamicData.DynamicDataExtensions.ConvertEditedValue*
  parent: System.Web.DynamicData.DynamicDataExtensions
  isExternal: false
  name: ConvertEditedValue
  nameWithType: DynamicDataExtensions.ConvertEditedValue
- uid: System.Web.DynamicData.DynamicDataExtensions.EnablePersistedSelection*
  parent: System.Web.DynamicData.DynamicDataExtensions
  isExternal: false
  name: EnablePersistedSelection
  nameWithType: DynamicDataExtensions.EnablePersistedSelection
- uid: System.Web.DynamicData.DynamicDataExtensions.ExpandDynamicWhereParameters*
  parent: System.Web.DynamicData.DynamicDataExtensions
  isExternal: false
  name: ExpandDynamicWhereParameters
  nameWithType: DynamicDataExtensions.ExpandDynamicWhereParameters
- uid: System.Web.DynamicData.DynamicDataExtensions.FindDataSourceControl*
  parent: System.Web.DynamicData.DynamicDataExtensions
  isExternal: false
  name: FindDataSourceControl
  nameWithType: DynamicDataExtensions.FindDataSourceControl
- uid: System.Web.DynamicData.DynamicDataExtensions.FindFieldTemplate*
  parent: System.Web.DynamicData.DynamicDataExtensions
  isExternal: false
  name: FindFieldTemplate
  nameWithType: DynamicDataExtensions.FindFieldTemplate
- uid: System.Web.DynamicData.DynamicDataExtensions.FindMetaTable*
  parent: System.Web.DynamicData.DynamicDataExtensions
  isExternal: false
  name: FindMetaTable
  nameWithType: DynamicDataExtensions.FindMetaTable
- uid: System.Web.DynamicData.DynamicDataExtensions.FormatEditValue*
  parent: System.Web.DynamicData.DynamicDataExtensions
  isExternal: false
  name: FormatEditValue
  nameWithType: DynamicDataExtensions.FormatEditValue
- uid: System.Web.DynamicData.DynamicDataExtensions.FormatValue*
  parent: System.Web.DynamicData.DynamicDataExtensions
  isExternal: false
  name: FormatValue
  nameWithType: DynamicDataExtensions.FormatValue
- uid: System.Web.DynamicData.DynamicDataExtensions.GetDefaultValues*
  parent: System.Web.DynamicData.DynamicDataExtensions
  isExternal: false
  name: GetDefaultValues
  nameWithType: DynamicDataExtensions.GetDefaultValues
- uid: System.Web.DynamicData.DynamicDataExtensions.GetEnumType*
  parent: System.Web.DynamicData.DynamicDataExtensions
  isExternal: false
  name: GetEnumType
  nameWithType: DynamicDataExtensions.GetEnumType
- uid: System.Web.DynamicData.DynamicDataExtensions.GetMetaTable*
  parent: System.Web.DynamicData.DynamicDataExtensions
  isExternal: false
  name: GetMetaTable
  nameWithType: DynamicDataExtensions.GetMetaTable
- uid: System.Web.DynamicData.DynamicDataExtensions.GetTable*
  parent: System.Web.DynamicData.DynamicDataExtensions
  isExternal: false
  name: GetTable
  nameWithType: DynamicDataExtensions.GetTable
- uid: System.Web.DynamicData.DynamicDataExtensions.LoadWith<TEntity>*
  parent: System.Web.DynamicData.DynamicDataExtensions
  isExternal: false
  name: LoadWith<TEntity>
  nameWithType: DynamicDataExtensions.LoadWith<TEntity>
- uid: System.Web.DynamicData.DynamicDataExtensions.LoadWithForeignKeys*
  parent: System.Web.DynamicData.DynamicDataExtensions
  isExternal: false
  name: LoadWithForeignKeys
  nameWithType: DynamicDataExtensions.LoadWithForeignKeys
- uid: System.Web.DynamicData.DynamicDataExtensions.SetMetaTable*
  parent: System.Web.DynamicData.DynamicDataExtensions
  isExternal: false
  name: SetMetaTable
  nameWithType: DynamicDataExtensions.SetMetaTable
- uid: System.Web.DynamicData.DynamicDataExtensions.TryGetMetaTable*
  parent: System.Web.DynamicData.DynamicDataExtensions
  isExternal: false
  name: TryGetMetaTable
  nameWithType: DynamicDataExtensions.TryGetMetaTable
