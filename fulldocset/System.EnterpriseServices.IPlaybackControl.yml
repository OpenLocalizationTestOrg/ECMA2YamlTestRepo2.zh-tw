### YamlMime:ManagedReference
items:
- uid: System.EnterpriseServices.IPlaybackControl
  id: IPlaybackControl
  children:
  - System.EnterpriseServices.IPlaybackControl.FinalClientRetry
  - System.EnterpriseServices.IPlaybackControl.FinalServerRetry
  langs:
  - csharp
  name: IPlaybackControl
  nameWithType: IPlaybackControl
  fullName: System.EnterpriseServices.IPlaybackControl
  type: Interface
  summary: "中的函式中排入佇列元件異常的伺服器端播放錯誤處理和用戶端失敗的訊息佇列的傳遞機制。"
  remarks: "COM + 目錄中的元件定義的例外狀況類別會實作 IPlaybackControl 和原始類別的介面。 原始的類別介面方法的實作用來執行的例外狀況處理類別本身中失敗的方法。 將會呼叫之後<xref:System.EnterpriseServices.IPlaybackControl.FinalClientRetry%2A>或<xref:System.EnterpriseServices.IPlaybackControl.FinalServerRetry%2A>處理初次呼叫方法的例外狀況。</xref:System.EnterpriseServices.IPlaybackControl.FinalServerRetry%2A> </xref:System.EnterpriseServices.IPlaybackControl.FinalClientRetry%2A>       排入佇列元件播放程式會呼叫 IPlaybackControl 通知訊息即將置於最終或是寄不出信件佇列的例外狀況處理常式物件的方法。 排入佇列元件播放程式依序呼叫原始方法呼叫中失敗的例外狀況處理常式物件相同的方法。 例外狀況處理常式物件可以實作的替代方式，例如收集問題的診斷資訊，或產生物件或訊息，通知用戶端的問題。 如果應用程式不會實作 IPlaybackControl，有害訊息會放在最終或是寄不出信件佇列中，當排入佇列元件播放程式耗盡所有重試。       有害訊息是無法處理的某些原因，可能是因為有問題的伺服器或佇列的系統訊息。 交易已回復，而且有害訊息會進入佇列的上方。 當訊息從佇列中清除一次時，就會發生同樣的狀況。 這則訊息可以繼續迴圈直到設法修正問題。 排入佇列元件服務會使用一系列的重試次數，以處理有害訊息。 數個失敗的重試之後, 的訊息移到最後靜止佇列。 有害訊息保留在休止的佇列，直到以手動方式移動是利用排入佇列的元件訊息 Mover 工具。       有害訊息的情況下可以也使用來解決程式設計角度而言，<xref:System.EnterpriseServices.IPlaybackControl.FinalServerRetry%2A>方法，它會通知播放延後的啟動的所有嘗試都失敗，伺服器端元件作者。</xref:System.EnterpriseServices.IPlaybackControl.FinalServerRetry%2A>       如果您發現有害訊息時，您可以快速解決問題的根本原因。 比方說，如果基於某些原因，伺服器已離線，您可以讓伺服器重新在線上。 如果您不能快速解決問題，您可以自動產生的通知要求者的交易不會發生另一個交易。 要求者來進行補償交易的回復已經認可的交易造成影響。"
  syntax:
    content: >-
      [System.Runtime.InteropServices.Guid("51372AFD-CAE7-11CF-BE81-00AA00A2FA25")]

      [System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]

      public interface IPlaybackControl
  implements: []
  platform:
  - net462
- uid: System.EnterpriseServices.IPlaybackControl.FinalClientRetry
  id: FinalClientRetry
  parent: System.EnterpriseServices.IPlaybackControl
  langs:
  - csharp
  name: FinalClientRetry()
  nameWithType: IPlaybackControl.FinalClientRetry()
  fullName: System.EnterpriseServices.IPlaybackControl.FinalClientRetry()
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "通知用戶端例外狀況處理元件，將訊息傳遞至伺服器的所有訊息佇列嘗試遭到都拒絕，訊息最後在用戶端能肯定的交易的寄不出信件佇列。"
  remarks: "當訊息送達 Xact 寄不出的信件佇列中時，COM + 嘗試叫用與伺服器類別，來傳遞此通知相關的用戶端例外狀況處理常式。 它會先呼叫 FinalClientRetry，然後呼叫該例外狀況處理版本的失敗的方法中的例外狀況處理常式物件。 這個例外狀況的方法可以採取例外狀況動作，例如記錄失敗、 郵件訊息傳送給系統管理員，或採取任何行動用戶端補償 （反向先前交易的效果）。 如果不成功的例外狀況的方法時，訊息就能肯定的交易的寄不出信件佇列中。       在 Microsoft Message Queue (MSMQ) 總管 中，您可以檢視能肯定的交易的寄不出信件佇列。"
  syntax:
    content: public void FinalClientRetry ();
    parameters: []
  overload: System.EnterpriseServices.IPlaybackControl.FinalClientRetry*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.IPlaybackControl.FinalServerRetry
  id: FinalServerRetry
  parent: System.EnterpriseServices.IPlaybackControl
  langs:
  - csharp
  name: FinalServerRetry()
  nameWithType: IPlaybackControl.FinalServerRetry()
  fullName: System.EnterpriseServices.IPlaybackControl.FinalServerRetry()
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "通知伺服器端例外狀況類別實作，播放伺服器延後的啟動的所有嘗試都失敗，訊息會移至其最終休止的佇列。"
  remarks: "當訊息到達 Xact 寄不出的信件佇列，COM + 嘗試叫用與伺服器類別，來傳遞此通知相關的伺服器端例外狀況處理常式。 它會先呼叫 FinalServerRetry，然後呼叫例外狀況處理失敗的方法中的例外狀況處理常式物件的版本。 這個例外狀況的方法可以採取例外狀況動作，例如記錄失敗、 郵件訊息傳送給系統管理員，或採取任何行動用戶端補償 （反向先前交易的效果）。 伺服器物件應該請致力將順利完成此交易。 否則，需要手動介入，重新處理訊息。 如果不成功的例外狀況的方法時，訊息會移到最後靜止的佇列。"
  syntax:
    content: public void FinalServerRetry ();
    parameters: []
  overload: System.EnterpriseServices.IPlaybackControl.FinalServerRetry*
  exceptions: []
  platform:
  - net462
references:
- uid: System.EnterpriseServices.IPlaybackControl.FinalClientRetry
  parent: System.EnterpriseServices.IPlaybackControl
  isExternal: false
  name: FinalClientRetry()
  nameWithType: IPlaybackControl.FinalClientRetry()
  fullName: System.EnterpriseServices.IPlaybackControl.FinalClientRetry()
- uid: System.EnterpriseServices.IPlaybackControl.FinalServerRetry
  parent: System.EnterpriseServices.IPlaybackControl
  isExternal: false
  name: FinalServerRetry()
  nameWithType: IPlaybackControl.FinalServerRetry()
  fullName: System.EnterpriseServices.IPlaybackControl.FinalServerRetry()
- uid: System.EnterpriseServices.IPlaybackControl.FinalClientRetry*
  parent: System.EnterpriseServices.IPlaybackControl
  isExternal: false
  name: FinalClientRetry
  nameWithType: IPlaybackControl.FinalClientRetry
- uid: System.EnterpriseServices.IPlaybackControl.FinalServerRetry*
  parent: System.EnterpriseServices.IPlaybackControl
  isExternal: false
  name: FinalServerRetry
  nameWithType: IPlaybackControl.FinalServerRetry
