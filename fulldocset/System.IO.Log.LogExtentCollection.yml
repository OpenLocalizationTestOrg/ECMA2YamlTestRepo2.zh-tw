### YamlMime:ManagedReference
items:
- uid: System.IO.Log.LogExtentCollection
  id: LogExtentCollection
  children:
  - System.IO.Log.LogExtentCollection.Add(System.String)
  - System.IO.Log.LogExtentCollection.Add(System.String,System.Int64)
  - System.IO.Log.LogExtentCollection.Count
  - System.IO.Log.LogExtentCollection.FreeCount
  - System.IO.Log.LogExtentCollection.GetEnumerator
  - System.IO.Log.LogExtentCollection.Remove(System.IO.Log.LogExtent,System.Boolean)
  - System.IO.Log.LogExtentCollection.Remove(System.String,System.Boolean)
  - System.IO.Log.LogExtentCollection.System#Collections#IEnumerable#GetEnumerator
  langs:
  - csharp
  name: LogExtentCollection
  nameWithType: LogExtentCollection
  fullName: System.IO.Log.LogExtentCollection
  type: Class
  summary: "代表集合<xref href=&quot;System.IO.Log.LogExtent&quot;></xref>物件相關聯<xref href=&quot;System.IO.Log.LogStore&quot;> </xref>。"
  remarks: "這個類別包含<xref:System.IO.Log.LogExtent>物件相關聯<xref:System.IO.Log.LogStore>.</xref:System.IO.Log.LogStore></xref:System.IO.Log.LogExtent>的集合 A<xref:System.IO.Log.LogStore>執行個體會儲存其資料集合中的延伸磁碟區，由<xref:System.IO.Log.LogExtent>執行個體。</xref:System.IO.Log.LogExtent> </xref:System.IO.Log.LogStore> 特定<xref:System.IO.Log.LogExtent>與一個<xref:System.IO.Log.LogStore>，和<xref:System.IO.Log.LogExtent>中相同物件<xref:System.IO.Log.LogStore>大小都相同。</xref:System.IO.Log.LogStore> </xref:System.IO.Log.LogExtent> </xref:System.IO.Log.LogStore> </xref:System.IO.Log.LogExtent> 若要加入及移除空間<xref:System.IO.Log.LogStore>以範圍為增量單位的執行個體。</xref:System.IO.Log.LogStore>       雖然<xref:System.IO.Log.LogExtent>物件會在磁碟上以檔案形式表示，應該不會移動或刪除這些當做一般的檔案。</xref:System.IO.Log.LogExtent> 相反地，您應該使用這個類別所提供用於加入和刪除的方法<xref:System.IO.Log.LogExtent>直接執行個體。</xref:System.IO.Log.LogExtent> 當它不再包含任何使用中的資料時，通常會移除範圍。 不過，如果`force`中的參數<xref:System.IO.Log.LogExtentCollection.Remove%2A>方法`true`，如果無法立即移除它們，會擲回例外狀況。</xref:System.IO.Log.LogExtentCollection.Remove%2A>       您無法移除最後一個範圍中 LogExtentCollection，這表示<xref:System.IO.Log.LogExtentCollection.Count%2A>屬性不可以是零之後加入延伸區,。</xref:System.IO.Log.LogExtentCollection.Count%2A>"
  example:
  - "This example shows how to use the <xref:System.IO.Log.LogExtent> and LogExtentCollection classes to add and emulate extents in a log sequence.  \n  \n [!code-cs[S_UELogRecordSequence#0](~/add/codesnippet/csharp/t-system.io.log.logexten_1.cs)]\n [!code-vb[S_UELogRecordSequence#0](~/add/codesnippet/visualbasic/t-system.io.log.logexten_1.vb)]"
  syntax:
    content: 'public sealed class LogExtentCollection : System.Collections.Generic.IEnumerable<System.IO.Log.LogExtent>'
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.IEnumerable<System.IO.Log.LogExtent>
  inheritedMembers: []
  platform:
  - net462
- uid: System.IO.Log.LogExtentCollection.Add(System.String)
  id: Add(System.String)
  parent: System.IO.Log.LogExtentCollection
  langs:
  - csharp
  name: Add(String)
  nameWithType: LogExtentCollection.Add(String)
  fullName: System.IO.Log.LogExtentCollection.Add(String)
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "新增<xref href=&quot;System.IO.Log.LogExtent&quot;></xref>至集合的執行個體。"
  remarks: "新加入之大小<xref:System.IO.Log.LogExtent>執行個體是現有的大小相同<xref:System.IO.Log.LogExtent>集合中的執行個體。</xref:System.IO.Log.LogExtent> </xref:System.IO.Log.LogExtent>      > [!NOTE] > 請勿使用這個方法將第一個<xref:System.IO.Log.LogExtent>至集合。</xref:System.IO.Log.LogExtent>"
  example:
  - "This example shows how to use the <xref:System.IO.Log.LogExtent> and <xref:System.IO.Log.LogExtentCollection> classes to add and emulate extents in a log sequence.  \n  \n [!code-cs[S_UELogRecordSequence#0](~/add/codesnippet/csharp/m-system.io.log.logexten_1.cs)]\n [!code-vb[S_UELogRecordSequence#0](~/add/codesnippet/visualbasic/m-system.io.log.logexten_1.vb)]"
  syntax:
    content: public void Add (string path);
    parameters:
    - id: path
      type: System.String
      description: "若要新增之延伸記錄區路徑。"
  overload: System.IO.Log.LogExtentCollection.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path </code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "所指定的記錄存放區檔案名稱<code> path </code>不正確。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "必須指定第一個延伸區的大小。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "無法執行要求，因為發生意外的 I/O 例外狀況。       -所指定的檔案<code> path </code>無法建立，因為檔案或目錄已存在。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "已在處置序列之後呼叫的方法。"
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "沒有足夠的記憶體可以繼續執行程式。"
  - type: System.IO.Log.SequenceFullException
    commentId: T:System.IO.Log.SequenceFullException
    description: "記錄順序已滿。       -或者-儲存體磁碟或媒體已滿。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "存取指定的記錄存放區遭作業系統拒絕。"
  platform:
  - net462
- uid: System.IO.Log.LogExtentCollection.Add(System.String,System.Int64)
  id: Add(System.String,System.Int64)
  parent: System.IO.Log.LogExtentCollection
  langs:
  - csharp
  name: Add(String,Int64)
  nameWithType: LogExtentCollection.Add(String,Int64)
  fullName: System.IO.Log.LogExtentCollection.Add(String,Int64)
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "建立新<xref href=&quot;System.IO.Log.LogExtent&quot;></xref>具有指定的大小並將它加入至集合。"
  remarks: "如果集合不是空的則指定的大小必須至少與集合中其他延伸區的大小一樣大。 在此情況下，`size`參數已忽略，並在集合中其他延伸區相同的大小建立範圍。"
  syntax:
    content: public void Add (string path, long size);
    parameters:
    - id: path
      type: System.String
      description: "延伸記錄區路徑。"
    - id: size
      type: System.Int64
      description: "延伸記錄區的大小。"
  overload: System.IO.Log.LogExtentCollection.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path </code>or <code>size</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>archiveTail</code>不在有效範圍內。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "所指定的記錄存放區檔案名稱<code> path </code>不正確。       <code>size</code>小於存放區中其他延伸區的大小。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "必須指定第一個延伸區的大小。       -或者-不能使用重複的範圍名稱。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "無法執行要求，因為發生意外的 I/O 例外狀況。       -所指定的檔案<code> path </code>無法建立，因為檔案或目錄已存在。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "已在處置序列之後呼叫的方法。"
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "沒有足夠的記憶體可以繼續執行程式。"
  - type: System.IO.Log.SequenceFullException
    commentId: T:System.IO.Log.SequenceFullException
    description: "記錄順序已滿。       -或者-儲存體磁碟或媒體已滿。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "存取指定的記錄存放區遭作業系統拒絕。"
  platform:
  - net462
- uid: System.IO.Log.LogExtentCollection.Count
  id: Count
  parent: System.IO.Log.LogExtentCollection
  langs:
  - csharp
  name: Count
  nameWithType: LogExtentCollection.Count
  fullName: System.IO.Log.LogExtentCollection.Count
  type: Property
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "取得集合中的延伸記錄區的數目。"
  remarks: ''
  example:
  - "This example shows how to use the <xref:System.IO.Log.LogExtent> and <xref:System.IO.Log.LogExtentCollection> classes to add and emulate extents in a log sequence.  \n  \n [!code-cs[S_UELogRecordSequence#0](~/add/codesnippet/csharp/p-system.io.log.logexten_3_1.cs)]\n [!code-vb[S_UELogRecordSequence#0](~/add/codesnippet/visualbasic/p-system.io.log.logexten_3_1.vb)]"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "集合中延伸記錄區的數目。"
  overload: System.IO.Log.LogExtentCollection.Count*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "記錄存放區已經過處置。"
  platform:
  - net462
- uid: System.IO.Log.LogExtentCollection.FreeCount
  id: FreeCount
  parent: System.IO.Log.LogExtentCollection
  langs:
  - csharp
  name: FreeCount
  nameWithType: LogExtentCollection.FreeCount
  fullName: System.IO.Log.LogExtentCollection.FreeCount
  type: Property
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "取得可用數目<xref href=&quot;System.IO.Log.LogExtent&quot;></xref>執行個體在集合中，也就是數目<xref href=&quot;System.IO.Log.LogExtent&quot;></xref>未包含任何資料的執行個體。"
  remarks: ''
  example:
  - "This example shows how to use the <xref:System.IO.Log.LogExtent> and <xref:System.IO.Log.LogExtentCollection> classes to add and emulate extents in a log sequence.  \n  \n [!code-cs[S_UELogRecordSequence#0](~/add/codesnippet/csharp/p-system.io.log.logexten_2_1.cs)]\n [!code-vb[S_UELogRecordSequence#0](~/add/codesnippet/visualbasic/p-system.io.log.logexten_2_1.vb)]"
  syntax:
    content: public int FreeCount { get; }
    return:
      type: System.Int32
      description: "可用的數目<xref href=&quot;System.IO.Log.LogExtent&quot;></xref>集合中的執行個體。"
  overload: System.IO.Log.LogExtentCollection.FreeCount*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "記錄存放區已經過處置。"
  platform:
  - net462
- uid: System.IO.Log.LogExtentCollection.GetEnumerator
  id: GetEnumerator
  parent: System.IO.Log.LogExtentCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: LogExtentCollection.GetEnumerator()
  fullName: System.IO.Log.LogExtentCollection.GetEnumerator()
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "取得列舉值<xref href=&quot;System.IO.Log.LogExtent&quot;></xref>此集合中的執行個體。 這個方法無法被繼承。"
  syntax:
    content: public System.Collections.Generic.IEnumerator<System.IO.Log.LogExtent> GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerator{System.IO.Log.LogExtent}
      description: "列舉值<xref href=&quot;System.IO.Log.LogExtent&quot;></xref>此集合中的執行個體。"
  overload: System.IO.Log.LogExtentCollection.GetEnumerator*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "無法執行要求，因為發生意外的 I/O 例外狀況。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "作業無效，原因為下列其中一個:-列舉已經結束。      的已修改集合。      -列舉尚未啟動。 呼叫<xref:System.Collections.IEnumerator.MoveNext*>必須設法。</xref:System.Collections.IEnumerator.MoveNext*>"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "已在處置序列之後呼叫的方法。"
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "沒有足夠的記憶體可以繼續執行程式。"
  - type: System.IO.Log.SequenceFullException
    commentId: T:System.IO.Log.SequenceFullException
    description: "記錄順序已滿。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "存取指定的記錄存放區遭作業系統拒絕。"
  platform:
  - net462
- uid: System.IO.Log.LogExtentCollection.Remove(System.IO.Log.LogExtent,System.Boolean)
  id: Remove(System.IO.Log.LogExtent,System.Boolean)
  parent: System.IO.Log.LogExtentCollection
  langs:
  - csharp
  name: Remove(LogExtent,Boolean)
  nameWithType: LogExtentCollection.Remove(LogExtent,Boolean)
  fullName: System.IO.Log.LogExtentCollection.Remove(LogExtent,Boolean)
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "移除指定<xref href=&quot;System.IO.Log.LogExtent&quot;></xref>從集合的執行個體。"
  remarks: "<xref:System.IO.Log.LogExtent>從集合中，即不屬於使用中區域的<xref:System.IO.Log.LogStore>。</xref:System.IO.Log.LogStore>時，才可以移除執行個體</xref:System.IO.Log.LogExtent> 如果`force`參數是`true`而且無法立即移除延伸區，會擲回例外狀況。 如果`force`參數是`false`而且無法立即移除延伸區，直到不再作用中區域的一部分，會延後移除。       您無法移除最後一個範圍中的<xref:System.IO.Log.LogExtentCollection>，這表示<xref:System.IO.Log.LogExtentCollection.Count%2A>屬性不可以是零，一旦新增延伸區。</xref:System.IO.Log.LogExtentCollection.Count%2A> </xref:System.IO.Log.LogExtentCollection>"
  syntax:
    content: public void Remove (System.IO.Log.LogExtent extent, bool force);
    parameters:
    - id: extent
      type: System.IO.Log.LogExtent
      description: "<xref href=&quot;System.IO.Log.LogExtent&quot;> </xref>来移除執行個體。"
    - id: force
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果應該立即; 移除延伸區否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.IO.Log.LogExtentCollection.Remove*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>extent</code>or <code>force</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>extent</code>找不在集合中。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>extent</code>無法移除。 它是仍一部分的使用中的區域，或是存取遭拒。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "無法執行要求，因為發生意外的 I/O 例外狀況。       - <code> extent </code>無法刪除。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "已在處置序列之後呼叫的方法。"
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "沒有足夠的記憶體可以繼續執行程式。"
  - type: System.IO.Log.SequenceFullException
    commentId: T:System.IO.Log.SequenceFullException
    description: "記錄順序已滿。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "存取指定的記錄存放區遭作業系統拒絕。"
  platform:
  - net462
- uid: System.IO.Log.LogExtentCollection.Remove(System.String,System.Boolean)
  id: Remove(System.String,System.Boolean)
  parent: System.IO.Log.LogExtentCollection
  langs:
  - csharp
  name: Remove(String,Boolean)
  nameWithType: LogExtentCollection.Remove(String,Boolean)
  fullName: System.IO.Log.LogExtentCollection.Remove(String,Boolean)
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "移除<xref href=&quot;System.IO.Log.LogExtent&quot;></xref>的執行個體與指定的路徑，從集合。"
  remarks: "<xref:System.IO.Log.LogExtent>從集合中，即不屬於使用中區域的<xref:System.IO.Log.LogStore>。</xref:System.IO.Log.LogStore>時，才可以移除執行個體</xref:System.IO.Log.LogExtent> 如果`force`參數是`true`而且無法立即移除延伸區，會擲回例外狀況。 如果`force`參數是`false`而且無法立即移除延伸區，直到不再作用中區域的一部分，會延後移除。       您無法移除最後一個範圍中的<xref:System.IO.Log.LogExtentCollection>，這表示<xref:System.IO.Log.LogExtentCollection.Count%2A>屬性不可以是零，一旦新增延伸區。</xref:System.IO.Log.LogExtentCollection.Count%2A> </xref:System.IO.Log.LogExtentCollection>"
  syntax:
    content: public void Remove (string path, bool force);
    parameters:
    - id: path
      type: System.String
      description: "路徑<xref href=&quot;System.IO.Log.LogExtent&quot;></xref>来移除執行個體。"
    - id: force
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果應該立即; 移除延伸區否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.IO.Log.LogExtentCollection.Remove*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>or <code>force</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "所指定的延伸區<code> path </code>集合中找不到。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "所指定的延伸區<code> path </code>無法移除。 它是仍一部分的使用中的區域，或是存取遭拒。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "無法執行要求，因為發生意外的 I/O 例外狀況。       -依指定的延伸區<code> path </code>無法刪除。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "已在處置序列之後呼叫的方法。"
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "沒有足夠的記憶體可以繼續執行程式。"
  - type: System.IO.Log.SequenceFullException
    commentId: T:System.IO.Log.SequenceFullException
    description: "記錄順序已滿。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "存取指定的記錄存放區遭作業系統拒絕。"
  platform:
  - net462
- uid: System.IO.Log.LogExtentCollection.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.IO.Log.LogExtentCollection
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: LogExtentCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.IO.Log.LogExtentCollection.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "取得列舉值<xref href=&quot;System.IO.Log.LogExtent&quot;></xref>此集合中的執行個體。 這個方法無法被繼承。"
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "列舉值<xref href=&quot;System.IO.Log.LogExtent&quot;></xref>此集合中的執行個體。"
  overload: System.IO.Log.LogExtentCollection.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.OutOfMemoryException
  isExternal: true
  name: System.OutOfMemoryException
- uid: System.IO.Log.SequenceFullException
  parent: System.IO.Log
  isExternal: false
  name: SequenceFullException
  nameWithType: SequenceFullException
  fullName: System.IO.Log.SequenceFullException
- uid: System.UnauthorizedAccessException
  isExternal: true
  name: System.UnauthorizedAccessException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.IO.Log.LogExtentCollection.Add(System.String)
  parent: System.IO.Log.LogExtentCollection
  isExternal: false
  name: Add(String)
  nameWithType: LogExtentCollection.Add(String)
  fullName: System.IO.Log.LogExtentCollection.Add(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.Log.LogExtentCollection.Add(System.String,System.Int64)
  parent: System.IO.Log.LogExtentCollection
  isExternal: false
  name: Add(String,Int64)
  nameWithType: LogExtentCollection.Add(String,Int64)
  fullName: System.IO.Log.LogExtentCollection.Add(String,Int64)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.IO.Log.LogExtentCollection.Count
  parent: System.IO.Log.LogExtentCollection
  isExternal: false
  name: Count
  nameWithType: LogExtentCollection.Count
  fullName: System.IO.Log.LogExtentCollection.Count
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IO.Log.LogExtentCollection.FreeCount
  parent: System.IO.Log.LogExtentCollection
  isExternal: false
  name: FreeCount
  nameWithType: LogExtentCollection.FreeCount
  fullName: System.IO.Log.LogExtentCollection.FreeCount
- uid: System.IO.Log.LogExtentCollection.GetEnumerator
  parent: System.IO.Log.LogExtentCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: LogExtentCollection.GetEnumerator()
  fullName: System.IO.Log.LogExtentCollection.GetEnumerator()
- uid: System.Collections.Generic.IEnumerator{System.IO.Log.LogExtent}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerator<LogExtent>
  nameWithType: IEnumerator<LogExtent>
  fullName: System.Collections.Generic.IEnumerator<System.IO.Log.LogExtent>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator<System.IO.Log.LogExtent>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IO.Log.LogExtent
    name: LogExtent
    nameWithType: LogExtent
    fullName: LogExtent
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IO.Log.LogExtentCollection.Remove(System.IO.Log.LogExtent,System.Boolean)
  parent: System.IO.Log.LogExtentCollection
  isExternal: false
  name: Remove(LogExtent,Boolean)
  nameWithType: LogExtentCollection.Remove(LogExtent,Boolean)
  fullName: System.IO.Log.LogExtentCollection.Remove(LogExtent,Boolean)
- uid: System.IO.Log.LogExtent
  parent: System.IO.Log
  isExternal: false
  name: LogExtent
  nameWithType: LogExtent
  fullName: System.IO.Log.LogExtent
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IO.Log.LogExtentCollection.Remove(System.String,System.Boolean)
  parent: System.IO.Log.LogExtentCollection
  isExternal: false
  name: Remove(String,Boolean)
  nameWithType: LogExtentCollection.Remove(String,Boolean)
  fullName: System.IO.Log.LogExtentCollection.Remove(String,Boolean)
- uid: System.IO.Log.LogExtentCollection.System#Collections#IEnumerable#GetEnumerator
  parent: System.IO.Log.LogExtentCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: LogExtentCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.IO.Log.LogExtentCollection.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.IO.Log.LogExtentCollection.Add*
  parent: System.IO.Log.LogExtentCollection
  isExternal: false
  name: Add
  nameWithType: LogExtentCollection.Add
- uid: System.IO.Log.LogExtentCollection.Count*
  parent: System.IO.Log.LogExtentCollection
  isExternal: false
  name: Count
  nameWithType: LogExtentCollection.Count
- uid: System.IO.Log.LogExtentCollection.FreeCount*
  parent: System.IO.Log.LogExtentCollection
  isExternal: false
  name: FreeCount
  nameWithType: LogExtentCollection.FreeCount
- uid: System.IO.Log.LogExtentCollection.GetEnumerator*
  parent: System.IO.Log.LogExtentCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: LogExtentCollection.GetEnumerator
- uid: System.IO.Log.LogExtentCollection.Remove*
  parent: System.IO.Log.LogExtentCollection
  isExternal: false
  name: Remove
  nameWithType: LogExtentCollection.Remove
- uid: System.IO.Log.LogExtentCollection.System#Collections#IEnumerable#GetEnumerator*
  parent: System.IO.Log.LogExtentCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: LogExtentCollection.System.Collections.IEnumerable.GetEnumerator
