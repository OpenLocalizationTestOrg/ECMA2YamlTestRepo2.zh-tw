### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.ProcessThreadCollection
  id: ProcessThreadCollection
  children:
  - System.Diagnostics.ProcessThreadCollection.#ctor
  - System.Diagnostics.ProcessThreadCollection.#ctor(System.Diagnostics.ProcessThread[])
  - System.Diagnostics.ProcessThreadCollection.Add(System.Diagnostics.ProcessThread)
  - System.Diagnostics.ProcessThreadCollection.Contains(System.Diagnostics.ProcessThread)
  - System.Diagnostics.ProcessThreadCollection.CopyTo(System.Diagnostics.ProcessThread[],System.Int32)
  - System.Diagnostics.ProcessThreadCollection.IndexOf(System.Diagnostics.ProcessThread)
  - System.Diagnostics.ProcessThreadCollection.Insert(System.Int32,System.Diagnostics.ProcessThread)
  - System.Diagnostics.ProcessThreadCollection.Item(System.Int32)
  - System.Diagnostics.ProcessThreadCollection.Remove(System.Diagnostics.ProcessThread)
  langs:
  - csharp
  name: ProcessThreadCollection
  nameWithType: ProcessThreadCollection
  fullName: System.Diagnostics.ProcessThreadCollection
  type: Class
  summary: "提供強類型的集合<xref href=&quot;System.Diagnostics.ProcessThread&quot;></xref>物件。"
  syntax:
    content: 'public class ProcessThreadCollection : System.Collections.ReadOnlyCollectionBase'
  inheritance:
  - System.Object
  - System.Collections.ReadOnlyCollectionBase
  implements: []
  inheritedMembers:
  - System.Collections.ReadOnlyCollectionBase.Count
  - System.Collections.ReadOnlyCollectionBase.GetEnumerator
  - System.Collections.ReadOnlyCollectionBase.InnerList
  - System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized
  - System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot
  platform:
  - net462
- uid: System.Diagnostics.ProcessThreadCollection.#ctor
  id: '#ctor'
  parent: System.Diagnostics.ProcessThreadCollection
  langs:
  - csharp
  name: ProcessThreadCollection()
  nameWithType: ProcessThreadCollection.ProcessThreadCollection()
  fullName: System.Diagnostics.ProcessThreadCollection.ProcessThreadCollection()
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "初始化的新執行個體<xref href=&quot;System.Diagnostics.ProcessThreadCollection&quot;></xref>類別，不使用關聯<xref href=&quot;System.Diagnostics.ProcessThread&quot;></xref>執行個體。"
  syntax:
    content: protected ProcessThreadCollection ();
    parameters: []
  overload: System.Diagnostics.ProcessThreadCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.ProcessThreadCollection.#ctor(System.Diagnostics.ProcessThread[])
  id: '#ctor(System.Diagnostics.ProcessThread[])'
  parent: System.Diagnostics.ProcessThreadCollection
  langs:
  - csharp
  name: ProcessThreadCollection(ProcessThread[])
  nameWithType: ProcessThreadCollection.ProcessThreadCollection(ProcessThread[])
  fullName: System.Diagnostics.ProcessThreadCollection.ProcessThreadCollection(ProcessThread[])
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "初始化的新執行個體<xref href=&quot;System.Diagnostics.ProcessThreadCollection&quot;></xref>類別，使用指定的陣列<xref href=&quot;System.Diagnostics.ProcessThread&quot;></xref>執行個體。"
  syntax:
    content: public ProcessThreadCollection (System.Diagnostics.ProcessThread[] processThreads);
    parameters:
    - id: processThreads
      type: System.Diagnostics.ProcessThread[]
      description: "陣列<xref href=&quot;System.Diagnostics.ProcessThread&quot;></xref>具有用來初始化這個執行個體<xref href=&quot;System.Diagnostics.ProcessThreadCollection&quot;></xref>執行個體。"
  overload: System.Diagnostics.ProcessThreadCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.ProcessThreadCollection.Add(System.Diagnostics.ProcessThread)
  id: Add(System.Diagnostics.ProcessThread)
  parent: System.Diagnostics.ProcessThreadCollection
  langs:
  - csharp
  name: Add(ProcessThread)
  nameWithType: ProcessThreadCollection.Add(ProcessThread)
  fullName: System.Diagnostics.ProcessThreadCollection.Add(ProcessThread)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "將處理序執行緒附加至集合。"
  syntax:
    content: public int Add (System.Diagnostics.ProcessThread thread);
    parameters:
    - id: thread
      type: System.Diagnostics.ProcessThread
      description: "要加入至集合的執行緒。"
    return:
      type: System.Int32
      description: "集合中執行緒之以零為起始索引。"
  overload: System.Diagnostics.ProcessThreadCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.ProcessThreadCollection.Contains(System.Diagnostics.ProcessThread)
  id: Contains(System.Diagnostics.ProcessThread)
  parent: System.Diagnostics.ProcessThreadCollection
  langs:
  - csharp
  name: Contains(ProcessThread)
  nameWithType: ProcessThreadCollection.Contains(ProcessThread)
  fullName: System.Diagnostics.ProcessThreadCollection.Contains(ProcessThread)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "判斷指定的處理序執行緒是否存在集合中。"
  remarks: "模組是以其模組名稱和識別其完整的檔案路徑。"
  syntax:
    content: public bool Contains (System.Diagnostics.ProcessThread thread);
    parameters:
    - id: thread
      type: System.Diagnostics.ProcessThread
      description: "A <xref href=&quot;System.Diagnostics.ProcessThread&quot;> </xref>表示這個集合中找不到執行緒的執行個體。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果執行緒存在於集合中，否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Diagnostics.ProcessThreadCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.ProcessThreadCollection.CopyTo(System.Diagnostics.ProcessThread[],System.Int32)
  id: CopyTo(System.Diagnostics.ProcessThread[],System.Int32)
  parent: System.Diagnostics.ProcessThreadCollection
  langs:
  - csharp
  name: CopyTo(ProcessThread[],Int32)
  nameWithType: ProcessThreadCollection.CopyTo(ProcessThread[],Int32)
  fullName: System.Diagnostics.ProcessThreadCollection.CopyTo(ProcessThread[],Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "陣列複製<xref href=&quot;System.Diagnostics.ProcessThread&quot;></xref>至集合中，指定索引處的執行個體。"
  syntax:
    content: public void CopyTo (System.Diagnostics.ProcessThread[] array, int index);
    parameters:
    - id: array
      type: System.Diagnostics.ProcessThread[]
      description: "陣列<xref href=&quot;System.Diagnostics.ProcessThread&quot;></xref>加入至集合的執行個體。"
    - id: index
      type: System.Int32
      description: "要加入新的執行個體的所在位置。"
  overload: System.Diagnostics.ProcessThreadCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.ProcessThreadCollection.IndexOf(System.Diagnostics.ProcessThread)
  id: IndexOf(System.Diagnostics.ProcessThread)
  parent: System.Diagnostics.ProcessThreadCollection
  langs:
  - csharp
  name: IndexOf(ProcessThread)
  nameWithType: ProcessThreadCollection.IndexOf(ProcessThread)
  fullName: System.Diagnostics.ProcessThreadCollection.IndexOf(ProcessThread)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "提供集合內指定執行緒的位置。"
  syntax:
    content: public int IndexOf (System.Diagnostics.ProcessThread thread);
    parameters:
    - id: thread
      type: System.Diagnostics.ProcessThread
      description: "<xref href=&quot;System.Diagnostics.ProcessThread&quot;> </xref>擷取其索引。"
    return:
      type: System.Int32
      description: "以零為起始的索引，以定義內的執行緒位置<xref href=&quot;System.Diagnostics.ProcessThreadCollection&quot;> </xref>。"
  overload: System.Diagnostics.ProcessThreadCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.ProcessThreadCollection.Insert(System.Int32,System.Diagnostics.ProcessThread)
  id: Insert(System.Int32,System.Diagnostics.ProcessThread)
  parent: System.Diagnostics.ProcessThreadCollection
  langs:
  - csharp
  name: Insert(Int32,ProcessThread)
  nameWithType: ProcessThreadCollection.Insert(Int32,ProcessThread)
  fullName: System.Diagnostics.ProcessThreadCollection.Insert(Int32,ProcessThread)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "在集合中指定的位置插入處理序執行緒。"
  syntax:
    content: public void Insert (int index, System.Diagnostics.ProcessThread thread);
    parameters:
    - id: index
      type: System.Int32
      description: "以零為起始的索引，表示要插入的執行緒位置。"
    - id: thread
      type: System.Diagnostics.ProcessThread
      description: "要插入至集合的執行緒。"
  overload: System.Diagnostics.ProcessThreadCollection.Insert*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.ProcessThreadCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Diagnostics.ProcessThreadCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: ProcessThreadCollection.Item(Int32)
  fullName: System.Diagnostics.ProcessThreadCollection.Item(Int32)
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "取得索引，用於反覆的程序執行緒集。"
  syntax:
    content: public System.Diagnostics.ProcessThread this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: "集合中的執行緒之以零為起始索引值。"
    return:
      type: System.Diagnostics.ProcessThread
      description: "A <xref href=&quot;System.Diagnostics.ProcessThread&quot;> </xref>集合中的執行緒建立索引。"
  overload: System.Diagnostics.ProcessThreadCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.ProcessThreadCollection.Remove(System.Diagnostics.ProcessThread)
  id: Remove(System.Diagnostics.ProcessThread)
  parent: System.Diagnostics.ProcessThreadCollection
  langs:
  - csharp
  name: Remove(ProcessThread)
  nameWithType: ProcessThreadCollection.Remove(ProcessThread)
  fullName: System.Diagnostics.ProcessThreadCollection.Remove(ProcessThread)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "從集合中刪除處理序執行緒。"
  syntax:
    content: public void Remove (System.Diagnostics.ProcessThread thread);
    parameters:
    - id: thread
      type: System.Diagnostics.ProcessThread
      description: "要從集合中移除的執行緒。"
  overload: System.Diagnostics.ProcessThreadCollection.Remove*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Collections.ReadOnlyCollectionBase
  isExternal: false
  name: System.Collections.ReadOnlyCollectionBase
- uid: System.Diagnostics.ProcessThreadCollection.#ctor
  parent: System.Diagnostics.ProcessThreadCollection
  isExternal: false
  name: ProcessThreadCollection()
  nameWithType: ProcessThreadCollection.ProcessThreadCollection()
  fullName: System.Diagnostics.ProcessThreadCollection.ProcessThreadCollection()
- uid: System.Diagnostics.ProcessThreadCollection.#ctor(System.Diagnostics.ProcessThread[])
  parent: System.Diagnostics.ProcessThreadCollection
  isExternal: false
  name: ProcessThreadCollection(ProcessThread[])
  nameWithType: ProcessThreadCollection.ProcessThreadCollection(ProcessThread[])
  fullName: System.Diagnostics.ProcessThreadCollection.ProcessThreadCollection(ProcessThread[])
- uid: System.Diagnostics.ProcessThread[]
  parent: System.Diagnostics
  isExternal: false
  name: ProcessThread
  nameWithType: ProcessThread
  fullName: System.Diagnostics.ProcessThread[]
  spec.csharp:
  - uid: System.Diagnostics.ProcessThread
    name: ProcessThread
    nameWithType: ProcessThread
    fullName: ProcessThread[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Diagnostics.ProcessThreadCollection.Add(System.Diagnostics.ProcessThread)
  parent: System.Diagnostics.ProcessThreadCollection
  isExternal: false
  name: Add(ProcessThread)
  nameWithType: ProcessThreadCollection.Add(ProcessThread)
  fullName: System.Diagnostics.ProcessThreadCollection.Add(ProcessThread)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Diagnostics.ProcessThread
  parent: System.Diagnostics
  isExternal: false
  name: ProcessThread
  nameWithType: ProcessThread
  fullName: System.Diagnostics.ProcessThread
- uid: System.Diagnostics.ProcessThreadCollection.Contains(System.Diagnostics.ProcessThread)
  parent: System.Diagnostics.ProcessThreadCollection
  isExternal: false
  name: Contains(ProcessThread)
  nameWithType: ProcessThreadCollection.Contains(ProcessThread)
  fullName: System.Diagnostics.ProcessThreadCollection.Contains(ProcessThread)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Diagnostics.ProcessThreadCollection.CopyTo(System.Diagnostics.ProcessThread[],System.Int32)
  parent: System.Diagnostics.ProcessThreadCollection
  isExternal: false
  name: CopyTo(ProcessThread[],Int32)
  nameWithType: ProcessThreadCollection.CopyTo(ProcessThread[],Int32)
  fullName: System.Diagnostics.ProcessThreadCollection.CopyTo(ProcessThread[],Int32)
- uid: System.Diagnostics.ProcessThreadCollection.IndexOf(System.Diagnostics.ProcessThread)
  parent: System.Diagnostics.ProcessThreadCollection
  isExternal: false
  name: IndexOf(ProcessThread)
  nameWithType: ProcessThreadCollection.IndexOf(ProcessThread)
  fullName: System.Diagnostics.ProcessThreadCollection.IndexOf(ProcessThread)
- uid: System.Diagnostics.ProcessThreadCollection.Insert(System.Int32,System.Diagnostics.ProcessThread)
  parent: System.Diagnostics.ProcessThreadCollection
  isExternal: false
  name: Insert(Int32,ProcessThread)
  nameWithType: ProcessThreadCollection.Insert(Int32,ProcessThread)
  fullName: System.Diagnostics.ProcessThreadCollection.Insert(Int32,ProcessThread)
- uid: System.Diagnostics.ProcessThreadCollection.Item(System.Int32)
  parent: System.Diagnostics.ProcessThreadCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: ProcessThreadCollection.Item(Int32)
  fullName: System.Diagnostics.ProcessThreadCollection.Item(Int32)
- uid: System.Diagnostics.ProcessThreadCollection.Remove(System.Diagnostics.ProcessThread)
  parent: System.Diagnostics.ProcessThreadCollection
  isExternal: false
  name: Remove(ProcessThread)
  nameWithType: ProcessThreadCollection.Remove(ProcessThread)
  fullName: System.Diagnostics.ProcessThreadCollection.Remove(ProcessThread)
- uid: System.Diagnostics.ProcessThreadCollection.#ctor*
  parent: System.Diagnostics.ProcessThreadCollection
  isExternal: false
  name: ProcessThreadCollection
  nameWithType: ProcessThreadCollection.ProcessThreadCollection
- uid: System.Diagnostics.ProcessThreadCollection.Add*
  parent: System.Diagnostics.ProcessThreadCollection
  isExternal: false
  name: Add
  nameWithType: ProcessThreadCollection.Add
- uid: System.Diagnostics.ProcessThreadCollection.Contains*
  parent: System.Diagnostics.ProcessThreadCollection
  isExternal: false
  name: Contains
  nameWithType: ProcessThreadCollection.Contains
- uid: System.Diagnostics.ProcessThreadCollection.CopyTo*
  parent: System.Diagnostics.ProcessThreadCollection
  isExternal: false
  name: CopyTo
  nameWithType: ProcessThreadCollection.CopyTo
- uid: System.Diagnostics.ProcessThreadCollection.IndexOf*
  parent: System.Diagnostics.ProcessThreadCollection
  isExternal: false
  name: IndexOf
  nameWithType: ProcessThreadCollection.IndexOf
- uid: System.Diagnostics.ProcessThreadCollection.Insert*
  parent: System.Diagnostics.ProcessThreadCollection
  isExternal: false
  name: Insert
  nameWithType: ProcessThreadCollection.Insert
- uid: System.Diagnostics.ProcessThreadCollection.Item*
  parent: System.Diagnostics.ProcessThreadCollection
  isExternal: false
  name: Item
  nameWithType: ProcessThreadCollection.Item
- uid: System.Diagnostics.ProcessThreadCollection.Remove*
  parent: System.Diagnostics.ProcessThreadCollection
  isExternal: false
  name: Remove
  nameWithType: ProcessThreadCollection.Remove
