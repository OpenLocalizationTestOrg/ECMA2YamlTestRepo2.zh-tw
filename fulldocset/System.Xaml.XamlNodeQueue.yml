### YamlMime:ManagedReference
items:
- uid: System.Xaml.XamlNodeQueue
  id: XamlNodeQueue
  children:
  - System.Xaml.XamlNodeQueue.#ctor(System.Xaml.XamlSchemaContext)
  - System.Xaml.XamlNodeQueue.Count
  - System.Xaml.XamlNodeQueue.IsEmpty
  - System.Xaml.XamlNodeQueue.Reader
  - System.Xaml.XamlNodeQueue.Writer
  langs:
  - csharp
  name: XamlNodeQueue
  nameWithType: XamlNodeQueue
  fullName: System.Xaml.XamlNodeQueue
  type: Class
  summary: "提供緩衝區，用來撰寫節點和再次讀取它們。"
  remarks: "XAML 讀取器讀取時，會消耗 XamlNodeQueue 從節點。 如果您需要 XAML 節點可以重新執行或可支援隨機存取的清單模型的清單，請參閱<xref:System.Xaml.XamlNodeList>.</xref:System.Xaml.XamlNodeList>       當您建立 XamlNodeQueue 時，您會建立做為存在的寫入器委派<xref:System.Xaml.XamlNodeQueue.Writer%2A>值。</xref:System.Xaml.XamlNodeQueue.Writer%2A> 寫入器委派根據內部的 XAML 寫入器類別，是專為 XAML 節點。"
  syntax:
    content: public class XamlNodeQueue
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xaml.XamlNodeQueue.#ctor(System.Xaml.XamlSchemaContext)
  id: '#ctor(System.Xaml.XamlSchemaContext)'
  parent: System.Xaml.XamlNodeQueue
  langs:
  - csharp
  name: XamlNodeQueue(XamlSchemaContext)
  nameWithType: XamlNodeQueue.XamlNodeQueue(XamlSchemaContext)
  fullName: System.Xaml.XamlNodeQueue.XamlNodeQueue(XamlSchemaContext)
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "初始化的新執行個體<xref href=&quot;System.Xaml.XamlNodeQueue&quot;></xref>類別使用提供的 XAML 結構描述內容。"
  remarks: "結構描述內容會套用至 XAML 寫入器的<xref:System.Xaml.XamlNodeQueue.Writer%2A>值。</xref:System.Xaml.XamlNodeQueue.Writer%2A>"
  syntax:
    content: public XamlNodeQueue (System.Xaml.XamlSchemaContext schemaContext);
    parameters:
    - id: schemaContext
      type: System.Xaml.XamlSchemaContext
      description: "要用於節點作業的結構描述內容。"
  overload: System.Xaml.XamlNodeQueue.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>xamlSchemaContext</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Xaml.XamlNodeQueue.Count
  id: Count
  parent: System.Xaml.XamlNodeQueue
  langs:
  - csharp
  name: Count
  nameWithType: XamlNodeQueue.Count
  fullName: System.Xaml.XamlNodeQueue.Count
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "取得中的節點數目<xref href=&quot;System.Xaml.XamlNodeQueue&quot;> </xref>。"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "中的節點數目<xref href=&quot;System.Xaml.XamlNodeQueue&quot;> </xref>。"
  overload: System.Xaml.XamlNodeQueue.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlNodeQueue.IsEmpty
  id: IsEmpty
  parent: System.Xaml.XamlNodeQueue
  langs:
  - csharp
  name: IsEmpty
  nameWithType: XamlNodeQueue.IsEmpty
  fullName: System.Xaml.XamlNodeQueue.IsEmpty
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "取得值，判斷是否這<xref href=&quot;System.Xaml.XamlNodeQueue&quot;></xref>不會包含節點。"
  syntax:
    content: public bool IsEmpty { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果這個<xref href=&quot;System.Xaml.XamlNodeQueue&quot;></xref>不會包含節點。<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>如果這個<xref href=&quot;System.Xaml.XamlNodeQueue&quot;></xref>包含節點。"
  overload: System.Xaml.XamlNodeQueue.IsEmpty*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlNodeQueue.Reader
  id: Reader
  parent: System.Xaml.XamlNodeQueue
  langs:
  - csharp
  name: Reader
  nameWithType: XamlNodeQueue.Reader
  fullName: System.Xaml.XamlNodeQueue.Reader
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "取得 XAML 讀取器的實作委派。"
  syntax:
    content: public System.Xaml.XamlReader Reader { get; }
    return:
      type: System.Xaml.XamlReader
      description: "XAML 讀取器的實作委派。"
  overload: System.Xaml.XamlNodeQueue.Reader*
  exceptions:
  - type: System.Xaml.XamlException
    commentId: T:System.Xaml.XamlException
    description: "節點清單用於 XAML 寫入器有沒有有效的 XAML 結構描述內容。"
  platform:
  - net462
- uid: System.Xaml.XamlNodeQueue.Writer
  id: Writer
  parent: System.Xaml.XamlNodeQueue
  langs:
  - csharp
  name: Writer
  nameWithType: XamlNodeQueue.Writer
  fullName: System.Xaml.XamlNodeQueue.Writer
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "取得相關聯的 XAML 寫入器。"
  syntax:
    content: public System.Xaml.XamlWriter Writer { get; }
    return:
      type: System.Xaml.XamlWriter
      description: "相關聯的 XAML 寫入器。"
  overload: System.Xaml.XamlNodeQueue.Writer*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Xaml.XamlException
  parent: System.Xaml
  isExternal: false
  name: XamlException
  nameWithType: XamlException
  fullName: System.Xaml.XamlException
- uid: System.Xaml.XamlNodeQueue.#ctor(System.Xaml.XamlSchemaContext)
  parent: System.Xaml.XamlNodeQueue
  isExternal: false
  name: XamlNodeQueue(XamlSchemaContext)
  nameWithType: XamlNodeQueue.XamlNodeQueue(XamlSchemaContext)
  fullName: System.Xaml.XamlNodeQueue.XamlNodeQueue(XamlSchemaContext)
- uid: System.Xaml.XamlSchemaContext
  parent: System.Xaml
  isExternal: false
  name: XamlSchemaContext
  nameWithType: XamlSchemaContext
  fullName: System.Xaml.XamlSchemaContext
- uid: System.Xaml.XamlNodeQueue.Count
  parent: System.Xaml.XamlNodeQueue
  isExternal: false
  name: Count
  nameWithType: XamlNodeQueue.Count
  fullName: System.Xaml.XamlNodeQueue.Count
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Xaml.XamlNodeQueue.IsEmpty
  parent: System.Xaml.XamlNodeQueue
  isExternal: false
  name: IsEmpty
  nameWithType: XamlNodeQueue.IsEmpty
  fullName: System.Xaml.XamlNodeQueue.IsEmpty
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xaml.XamlNodeQueue.Reader
  parent: System.Xaml.XamlNodeQueue
  isExternal: false
  name: Reader
  nameWithType: XamlNodeQueue.Reader
  fullName: System.Xaml.XamlNodeQueue.Reader
- uid: System.Xaml.XamlReader
  parent: System.Xaml
  isExternal: false
  name: XamlReader
  nameWithType: XamlReader
  fullName: System.Xaml.XamlReader
- uid: System.Xaml.XamlNodeQueue.Writer
  parent: System.Xaml.XamlNodeQueue
  isExternal: false
  name: Writer
  nameWithType: XamlNodeQueue.Writer
  fullName: System.Xaml.XamlNodeQueue.Writer
- uid: System.Xaml.XamlWriter
  parent: System.Xaml
  isExternal: false
  name: XamlWriter
  nameWithType: XamlWriter
  fullName: System.Xaml.XamlWriter
- uid: System.Xaml.XamlNodeQueue.#ctor*
  parent: System.Xaml.XamlNodeQueue
  isExternal: false
  name: XamlNodeQueue
  nameWithType: XamlNodeQueue.XamlNodeQueue
- uid: System.Xaml.XamlNodeQueue.Count*
  parent: System.Xaml.XamlNodeQueue
  isExternal: false
  name: Count
  nameWithType: XamlNodeQueue.Count
- uid: System.Xaml.XamlNodeQueue.IsEmpty*
  parent: System.Xaml.XamlNodeQueue
  isExternal: false
  name: IsEmpty
  nameWithType: XamlNodeQueue.IsEmpty
- uid: System.Xaml.XamlNodeQueue.Reader*
  parent: System.Xaml.XamlNodeQueue
  isExternal: false
  name: Reader
  nameWithType: XamlNodeQueue.Reader
- uid: System.Xaml.XamlNodeQueue.Writer*
  parent: System.Xaml.XamlNodeQueue
  isExternal: false
  name: Writer
  nameWithType: XamlNodeQueue.Writer
