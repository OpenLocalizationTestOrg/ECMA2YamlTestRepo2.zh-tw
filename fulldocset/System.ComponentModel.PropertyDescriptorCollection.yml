### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.PropertyDescriptorCollection
  id: PropertyDescriptorCollection
  children:
  - System.ComponentModel.PropertyDescriptorCollection.#ctor(System.ComponentModel.PropertyDescriptor[])
  - System.ComponentModel.PropertyDescriptorCollection.#ctor(System.ComponentModel.PropertyDescriptor[],System.Boolean)
  - System.ComponentModel.PropertyDescriptorCollection.Add(System.ComponentModel.PropertyDescriptor)
  - System.ComponentModel.PropertyDescriptorCollection.Clear
  - System.ComponentModel.PropertyDescriptorCollection.Contains(System.ComponentModel.PropertyDescriptor)
  - System.ComponentModel.PropertyDescriptorCollection.CopyTo(System.Array,System.Int32)
  - System.ComponentModel.PropertyDescriptorCollection.Count
  - System.ComponentModel.PropertyDescriptorCollection.Empty
  - System.ComponentModel.PropertyDescriptorCollection.Find(System.String,System.Boolean)
  - System.ComponentModel.PropertyDescriptorCollection.GetEnumerator
  - System.ComponentModel.PropertyDescriptorCollection.IndexOf(System.ComponentModel.PropertyDescriptor)
  - System.ComponentModel.PropertyDescriptorCollection.Insert(System.Int32,System.ComponentModel.PropertyDescriptor)
  - System.ComponentModel.PropertyDescriptorCollection.InternalSort(System.Collections.IComparer)
  - System.ComponentModel.PropertyDescriptorCollection.InternalSort(System.String[])
  - System.ComponentModel.PropertyDescriptorCollection.Item(System.Int32)
  - System.ComponentModel.PropertyDescriptorCollection.Item(System.String)
  - System.ComponentModel.PropertyDescriptorCollection.Remove(System.ComponentModel.PropertyDescriptor)
  - System.ComponentModel.PropertyDescriptorCollection.RemoveAt(System.Int32)
  - System.ComponentModel.PropertyDescriptorCollection.Sort
  - System.ComponentModel.PropertyDescriptorCollection.Sort(System.Collections.IComparer)
  - System.ComponentModel.PropertyDescriptorCollection.Sort(System.String[])
  - System.ComponentModel.PropertyDescriptorCollection.Sort(System.String[],System.Collections.IComparer)
  - System.ComponentModel.PropertyDescriptorCollection.System#Collections#ICollection#Count
  - System.ComponentModel.PropertyDescriptorCollection.System#Collections#ICollection#IsSynchronized
  - System.ComponentModel.PropertyDescriptorCollection.System#Collections#ICollection#SyncRoot
  - System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Add(System.Object,System.Object)
  - System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Clear
  - System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Contains(System.Object)
  - System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#GetEnumerator
  - System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#IsFixedSize
  - System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#IsReadOnly
  - System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Item(System.Object)
  - System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Keys
  - System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Remove(System.Object)
  - System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Values
  - System.ComponentModel.PropertyDescriptorCollection.System#Collections#IEnumerable#GetEnumerator
  - System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Add(System.Object)
  - System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Clear
  - System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Contains(System.Object)
  - System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#IndexOf(System.Object)
  - System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#IsFixedSize
  - System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#IsReadOnly
  - System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Item(System.Int32)
  - System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Remove(System.Object)
  - System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#RemoveAt(System.Int32)
  langs:
  - csharp
  name: PropertyDescriptorCollection
  nameWithType: PropertyDescriptorCollection
  fullName: System.ComponentModel.PropertyDescriptorCollection
  type: Class
  summary: "代表集合<xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;></xref>物件。"
  remarks: "PropertyDescriptorCollection is read-only; it does not implement methods that add or remove properties. You must inherit from this class to implement these methods.  \n  \n Using the properties available in the PropertyDescriptorCollection class, you can query the collection about its contents. Use the <xref:System.ComponentModel.PropertyDescriptorCollection.Count%2A> property to determine the number of elements in the collection. Use the [Item\\<xref:System.ComponentModel.PropertyDescriptorCollection.Item%2A> property to get a specific property by index number or by name.  \n  \n In addition to properties, you can use the <xref:System.ComponentModel.PropertyDescriptorCollection.Find%2A> method to get a description of the property with the specified name from the collection."
  example:
  - "The following code example creates a new PropertyDescriptorCollection using the properties on `button1`. It requires that `button1` has been instantiated on a form.  \n  \n [!code-cs[Classic PropertyDescriptorCollection Example#1](~/add/codesnippet/csharp/t-system.componentmodel._39_1.cs)]\n [!code-cpp[Classic PropertyDescriptorCollection Example#1](~/add/codesnippet/cpp/t-system.componentmodel._39_1.cpp)]\n [!code-vb[Classic PropertyDescriptorCollection Example#1](~/add/codesnippet/visualbasic/t-system.componentmodel._39_1.vb)]  \n  \n The next example prints all the properties on a button in a text box. It requires that `button1` and `textBox1` have been instantiated on a form.  \n  \n [!code-cs[Classic PropertyDescriptorCollection Example#2](~/add/codesnippet/csharp/t-system.componentmodel._39_2.cs)]\n [!code-cpp[Classic PropertyDescriptorCollection Example#2](~/add/codesnippet/cpp/t-system.componentmodel._39_2.cpp)]\n [!code-vb[Classic PropertyDescriptorCollection Example#2](~/add/codesnippet/visualbasic/t-system.componentmodel._39_2.vb)]"
  syntax:
    content: 'public class PropertyDescriptorCollection : System.Collections.IDictionary, System.Collections.IList'
  inheritance:
  - System.Object
  implements:
  - System.Collections.IDictionary
  - System.Collections.IList
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.#ctor(System.ComponentModel.PropertyDescriptor[])
  id: '#ctor(System.ComponentModel.PropertyDescriptor[])'
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: PropertyDescriptorCollection(PropertyDescriptor[])
  nameWithType: PropertyDescriptorCollection.PropertyDescriptorCollection(PropertyDescriptor[])
  fullName: System.ComponentModel.PropertyDescriptorCollection.PropertyDescriptorCollection(PropertyDescriptor[])
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "初始化的新執行個體<xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;></xref>類別。"
  syntax:
    content: public PropertyDescriptorCollection (System.ComponentModel.PropertyDescriptor[] properties);
    parameters:
    - id: properties
      type: System.ComponentModel.PropertyDescriptor[]
      description: "類型的陣列<xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> ，提供此集合的屬性。"
  overload: System.ComponentModel.PropertyDescriptorCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.#ctor(System.ComponentModel.PropertyDescriptor[],System.Boolean)
  id: '#ctor(System.ComponentModel.PropertyDescriptor[],System.Boolean)'
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: PropertyDescriptorCollection(PropertyDescriptor[],Boolean)
  nameWithType: PropertyDescriptorCollection.PropertyDescriptorCollection(PropertyDescriptor[],Boolean)
  fullName: System.ComponentModel.PropertyDescriptorCollection.PropertyDescriptorCollection(PropertyDescriptor[],Boolean)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "初始化的新執行個體<xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;></xref>類別，這是選擇性唯讀狀態。"
  syntax:
    content: public PropertyDescriptorCollection (System.ComponentModel.PropertyDescriptor[] properties, bool readOnly);
    parameters:
    - id: properties
      type: System.ComponentModel.PropertyDescriptor[]
      description: "類型的陣列<xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> ，提供此集合的屬性。"
    - id: readOnly
      type: System.Boolean
      description: "如果<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>，指定集合無法修改。"
  overload: System.ComponentModel.PropertyDescriptorCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.Add(System.ComponentModel.PropertyDescriptor)
  id: Add(System.ComponentModel.PropertyDescriptor)
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: Add(PropertyDescriptor)
  nameWithType: PropertyDescriptorCollection.Add(PropertyDescriptor)
  fullName: System.ComponentModel.PropertyDescriptorCollection.Add(PropertyDescriptor)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "將指定<xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;></xref>至集合。"
  syntax:
    content: public int Add (System.ComponentModel.PropertyDescriptor value);
    parameters:
    - id: value
      type: System.ComponentModel.PropertyDescriptor
      description: "<xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref>来加入至集合。"
    return:
      type: System.Int32
      description: "索引<xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;></xref>已加入至集合。"
  overload: System.ComponentModel.PropertyDescriptorCollection.Add*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "集合是唯讀的。"
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.Clear
  id: Clear
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: PropertyDescriptorCollection.Clear()
  fullName: System.ComponentModel.PropertyDescriptorCollection.Clear()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "移除所有<xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;></xref>從集合的物件。"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.ComponentModel.PropertyDescriptorCollection.Clear*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "集合是唯讀的。"
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.Contains(System.ComponentModel.PropertyDescriptor)
  id: Contains(System.ComponentModel.PropertyDescriptor)
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: Contains(PropertyDescriptor)
  nameWithType: PropertyDescriptorCollection.Contains(PropertyDescriptor)
  fullName: System.ComponentModel.PropertyDescriptorCollection.Contains(PropertyDescriptor)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "傳回集合是否包含給定<xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref>。"
  syntax:
    content: public bool Contains (System.ComponentModel.PropertyDescriptor value);
    parameters:
    - id: value
      type: System.ComponentModel.PropertyDescriptor
      description: "<xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref>集合中找不到。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果集合包含指定<xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref>，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.PropertyDescriptorCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: PropertyDescriptorCollection.CopyTo(Array,Int32)
  fullName: System.ComponentModel.PropertyDescriptorCollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "將整個集合複製到陣列中，開始於指定的索引編號。"
  syntax:
    content: public void CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "陣列<xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;></xref>物件複製到集合的項目。"
    - id: index
      type: System.Int32
      description: "索引`array`參數，位於複製開始。"
  overload: System.ComponentModel.PropertyDescriptorCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.Count
  id: Count
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: Count
  nameWithType: PropertyDescriptorCollection.Count
  fullName: System.ComponentModel.PropertyDescriptorCollection.Count
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "取得集合中的屬性描述項的數目。"
  remarks: "您可以使用 Count 屬性，即可設定迴圈，逐一查看集合的物件的限制。 因為集合是以零為起始的請務必使用`Count - 1`做為迴圈的上限。"
  example:
  - "The following code example uses the Count property to print the number of properties on `button1`. It requires that `button1` and `textBox1` have been instantiated on a form.  \n  \n [!code-vb[Classic PropertyDescriptorCollection.Count Example#1](~/add/codesnippet/visualbasic/p-system.componentmodel._29_1.vb)]\n [!code-cpp[Classic PropertyDescriptorCollection.Count Example#1](~/add/codesnippet/cpp/p-system.componentmodel._29_1.cpp)]\n [!code-cs[Classic PropertyDescriptorCollection.Count Example#1](~/add/codesnippet/csharp/p-system.componentmodel._29_1.cs)]"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "集合中的屬性描述項數目。"
  overload: System.ComponentModel.PropertyDescriptorCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.Empty
  id: Empty
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: Empty
  nameWithType: PropertyDescriptorCollection.Empty
  fullName: System.ComponentModel.PropertyDescriptorCollection.Empty
  type: Field
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "指定空集合，您可以使用而不是建立一個新的任何項目。 這<xref uid=&quot;langword_csharp_static&quot; name=&quot;static&quot; href=&quot;&quot;></xref>欄位為唯讀。"
  syntax:
    content: public static readonly System.ComponentModel.PropertyDescriptorCollection Empty;
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.Find(System.String,System.Boolean)
  id: Find(System.String,System.Boolean)
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: Find(String,Boolean)
  nameWithType: PropertyDescriptorCollection.Find(String,Boolean)
  fullName: System.ComponentModel.PropertyDescriptorCollection.Find(String,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "傳回<xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;></xref>具有指定名稱，請使用布林值，表示是否要忽略大小寫。"
  remarks: ''
  example:
  - "The following code example finds a specific <xref:System.ComponentModel.PropertyDescriptor>. It prints the type of component for this <xref:System.ComponentModel.PropertyDescriptor> in a text box. It requires that `button1` and `textBox1` have been instantiated on a form.  \n  \n [!code-cs[Classic PropertyDescriptorCollection.Find Example#1](~/add/codesnippet/csharp/9cbbd46a-64d4-4a04-8109-_1.cs)]\n [!code-cpp[Classic PropertyDescriptorCollection.Find Example#1](~/add/codesnippet/cpp/9cbbd46a-64d4-4a04-8109-_1.cpp)]\n [!code-vb[Classic PropertyDescriptorCollection.Find Example#1](~/add/codesnippet/visualbasic/9cbbd46a-64d4-4a04-8109-_1.vb)]"
  syntax:
    content: public virtual System.ComponentModel.PropertyDescriptor Find (string name, bool ignoreCase);
    parameters:
    - id: name
      type: System.String
      description: "名稱<xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;></xref>若要從集合中傳回。"
    - id: ignoreCase
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果您想要忽略大小寫的屬性名稱。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.ComponentModel.PropertyDescriptor
      description: "A <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref>具有指定名稱，或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果屬性不存在。"
  overload: System.ComponentModel.PropertyDescriptorCollection.Find*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.GetEnumerator
  id: GetEnumerator
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: PropertyDescriptorCollection.GetEnumerator()
  fullName: System.ComponentModel.PropertyDescriptorCollection.GetEnumerator()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "傳回這個類別的列舉值。"
  remarks: ''
  example:
  - "The following code example gets an enumerator for the properties on `button1`. It uses the enumerator to print the names of the properties in the collection. It requires that `button1` and `textBox1` have been instantiated on a form.  \n  \n [!code-cpp[Classic PropertyDescriptorCollection.GetEnumerator Example#1](~/add/codesnippet/cpp/m-system.componentmodel._32_1.cpp)]\n [!code-cs[Classic PropertyDescriptorCollection.GetEnumerator Example#1](~/add/codesnippet/csharp/m-system.componentmodel._32_1.cs)]\n [!code-vb[Classic PropertyDescriptorCollection.GetEnumerator Example#1](~/add/codesnippet/visualbasic/m-system.componentmodel._32_1.vb)]"
  syntax:
    content: public virtual System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "列舉值的型別<xref:System.Collections.IEnumerator>.</xref:System.Collections.IEnumerator>"
  overload: System.ComponentModel.PropertyDescriptorCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.IndexOf(System.ComponentModel.PropertyDescriptor)
  id: IndexOf(System.ComponentModel.PropertyDescriptor)
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: IndexOf(PropertyDescriptor)
  nameWithType: PropertyDescriptorCollection.IndexOf(PropertyDescriptor)
  fullName: System.ComponentModel.PropertyDescriptorCollection.IndexOf(PropertyDescriptor)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "傳回的索引指定<xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref>。"
  syntax:
    content: public int IndexOf (System.ComponentModel.PropertyDescriptor value);
    parameters:
    - id: value
      type: System.ComponentModel.PropertyDescriptor
      description: "<xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref>傳回的索引。"
    return:
      type: System.Int32
      description: "索引指定<xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref>。"
  overload: System.ComponentModel.PropertyDescriptorCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.Insert(System.Int32,System.ComponentModel.PropertyDescriptor)
  id: Insert(System.Int32,System.ComponentModel.PropertyDescriptor)
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: Insert(Int32,PropertyDescriptor)
  nameWithType: PropertyDescriptorCollection.Insert(Int32,PropertyDescriptor)
  fullName: System.ComponentModel.PropertyDescriptorCollection.Insert(Int32,PropertyDescriptor)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "新增<xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;></xref>至集合中指定的索引編號。"
  syntax:
    content: public void Insert (int index, System.ComponentModel.PropertyDescriptor value);
    parameters:
    - id: index
      type: System.Int32
      description: "要加入索引`value`參數集合。"
    - id: value
      type: System.ComponentModel.PropertyDescriptor
      description: "<xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref>来加入至集合。"
  overload: System.ComponentModel.PropertyDescriptorCollection.Insert*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "集合是唯讀的。"
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.InternalSort(System.Collections.IComparer)
  id: InternalSort(System.Collections.IComparer)
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: InternalSort(IComparer)
  nameWithType: PropertyDescriptorCollection.InternalSort(IComparer)
  fullName: System.ComponentModel.PropertyDescriptorCollection.InternalSort(IComparer)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "排序此集合中，使用指定的<xref:System.Collections.IComparer>.</xref:System.Collections.IComparer>成員"
  syntax:
    content: protected void InternalSort (System.Collections.IComparer sorter);
    parameters:
    - id: sorter
      type: System.Collections.IComparer
      description: "用來排序比較子<xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;></xref>此集合中的物件。"
  overload: System.ComponentModel.PropertyDescriptorCollection.InternalSort*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.InternalSort(System.String[])
  id: InternalSort(System.String[])
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: InternalSort(String[])
  nameWithType: PropertyDescriptorCollection.InternalSort(String[])
  fullName: System.ComponentModel.PropertyDescriptorCollection.InternalSort(String[])
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "排序此集合的成員。 指定的順序會先套用，後面接著此集合中，這是通常是依字母順序排列的預設排序。"
  remarks: ''
  example:
  - "The following code example defines the sort order for the InternalSort method. If the <xref:System.ComponentModel.PropertyDescriptorCollection> contains four <xref:System.ComponentModel.PropertyDescriptor> objects with the names `A`, `B`, `C`, and `D`, the properties of `myNewColl` would be sorted in the order `D`, `B`, `A`, and `C`.  \n  \n [!code-cs[Classic EventDescriptorCollection.InternalSort Example#1](~/add/codesnippet/csharp/362da624-49d1-447a-bc3b-_1.cs)]\n [!code-cpp[Classic EventDescriptorCollection.InternalSort Example#1](~/add/codesnippet/cpp/362da624-49d1-447a-bc3b-_1.cpp)]\n [!code-vb[Classic EventDescriptorCollection.InternalSort Example#1](~/add/codesnippet/visualbasic/362da624-49d1-447a-bc3b-_1.vb)]"
  syntax:
    content: protected void InternalSort (string[] names);
    parameters:
    - id: names
      type: System.String[]
      description: "描述的順序來排序字串陣列<xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;></xref>此集合中的物件。"
  overload: System.ComponentModel.PropertyDescriptorCollection.InternalSort*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: PropertyDescriptorCollection.Item(Int32)
  fullName: System.ComponentModel.PropertyDescriptorCollection.Item(Int32)
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "取得或設定<xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;></xref>在指定的索引編號。"
  remarks: "以零為起始的索引編號。 因此，必須減 1 的數值位置的特定<xref:System.ComponentModel.PropertyDescriptor>存取該<xref:System.ComponentModel.PropertyDescriptor>.</xref:System.ComponentModel.PropertyDescriptor> </xref:System.ComponentModel.PropertyDescriptor> 例如，若要取得第三個<xref:System.ComponentModel.PropertyDescriptor>，您必須指定`myColl[2]`。</xref:System.ComponentModel.PropertyDescriptor>"
  example:
  - "The following code example uses the Item property to print the name of the <xref:System.ComponentModel.PropertyDescriptor> specified by the index number in a text box. Because the index number is zero-based, this example prints the name of the second <xref:System.ComponentModel.PropertyDescriptor>. It requires that `button1` has been instantiated on a form.  \n  \n [!code-cpp[Classic PropertyDescriptorCollection.this Example#1](~/add/codesnippet/cpp/p-system.componentmodel._18_1.cpp)]\n [!code-cs[Classic PropertyDescriptorCollection.this Example#1](~/add/codesnippet/csharp/p-system.componentmodel._18_1.cs)]\n [!code-vb[Classic PropertyDescriptorCollection.this Example#1](~/add/codesnippet/visualbasic/p-system.componentmodel._18_1.vb)]"
  syntax:
    content: public virtual System.ComponentModel.PropertyDescriptor this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: "以零為起始的索引<xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;></xref>来取得或設定。"
    return:
      type: System.ComponentModel.PropertyDescriptor
      description: "<xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref>與指定的索引編號。"
  overload: System.ComponentModel.PropertyDescriptorCollection.Item*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "<code> index </code>參數不是有效的索引項目。"
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.Item(System.String)
  id: Item(System.String)
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: Item(String)
  nameWithType: PropertyDescriptorCollection.Item(String)
  fullName: System.ComponentModel.PropertyDescriptorCollection.Item(String)
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "取得或設定<xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;></xref>具有指定名稱。"
  remarks: "<xref:System.ComponentModel.PropertyDescriptorCollection.Item%2A>屬性搜尋的名稱會區分大小寫。</xref:System.ComponentModel.PropertyDescriptorCollection.Item%2A> 也就是 「 Pname&quot;和&quot;pname&quot;名稱會被視為兩個不同的屬性。"
  example:
  - "The following code example uses the <xref:System.ComponentModel.PropertyDescriptorCollection.Item%2A> property to print the type of component for the <xref:System.ComponentModel.PropertyDescriptor> specified by the index. It requires that `button1` and `textBox1` have been instantiated on a form.  \n  \n [!code-cpp[Classic PropertyDescriptorCollection.this1 Example#1](~/add/codesnippet/cpp/p-system.componentmodel._19_1.cpp)]\n [!code-vb[Classic PropertyDescriptorCollection.this1 Example#1](~/add/codesnippet/visualbasic/p-system.componentmodel._19_1.vb)]\n [!code-cs[Classic PropertyDescriptorCollection.this1 Example#1](~/add/codesnippet/csharp/p-system.componentmodel._19_1.cs)]"
  syntax:
    content: public virtual System.ComponentModel.PropertyDescriptor this[string name] { get; }
    parameters:
    - id: name
      type: System.String
      description: "名稱<xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;></xref>若要從集合中取得。"
    return:
      type: System.ComponentModel.PropertyDescriptor
      description: "<xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref>具有指定名稱，或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果屬性不存在。"
  overload: System.ComponentModel.PropertyDescriptorCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.Remove(System.ComponentModel.PropertyDescriptor)
  id: Remove(System.ComponentModel.PropertyDescriptor)
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: Remove(PropertyDescriptor)
  nameWithType: PropertyDescriptorCollection.Remove(PropertyDescriptor)
  fullName: System.ComponentModel.PropertyDescriptorCollection.Remove(PropertyDescriptor)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "移除指定<xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;></xref>從集合。"
  syntax:
    content: public void Remove (System.ComponentModel.PropertyDescriptor value);
    parameters:
    - id: value
      type: System.ComponentModel.PropertyDescriptor
      description: "<xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref>若要從集合中移除。"
  overload: System.ComponentModel.PropertyDescriptorCollection.Remove*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "集合是唯讀的。"
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: PropertyDescriptorCollection.RemoveAt(Int32)
  fullName: System.ComponentModel.PropertyDescriptorCollection.RemoveAt(Int32)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "移除<xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;></xref>從集合指定索引處。"
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "索引<xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;></xref>若要從集合中移除。"
  overload: System.ComponentModel.PropertyDescriptorCollection.RemoveAt*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "集合是唯讀的。"
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.Sort
  id: Sort
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: Sort()
  nameWithType: PropertyDescriptorCollection.Sort()
  fullName: System.ComponentModel.PropertyDescriptorCollection.Sort()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "排序這個集合，這個集合是通常是依字母順序使用預設排序成員。"
  syntax:
    content: public virtual System.ComponentModel.PropertyDescriptorCollection Sort ();
    parameters: []
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "新<xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref> ，其中包含已排序<xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;></xref>物件。"
  overload: System.ComponentModel.PropertyDescriptorCollection.Sort*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.Sort(System.Collections.IComparer)
  id: Sort(System.Collections.IComparer)
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: Sort(IComparer)
  nameWithType: PropertyDescriptorCollection.Sort(IComparer)
  fullName: System.ComponentModel.PropertyDescriptorCollection.Sort(IComparer)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "排序此集合中，使用指定的<xref:System.Collections.IComparer>.</xref:System.Collections.IComparer>成員"
  syntax:
    content: public virtual System.ComponentModel.PropertyDescriptorCollection Sort (System.Collections.IComparer comparer);
    parameters:
    - id: comparer
      type: System.Collections.IComparer
      description: "用來排序比較子<xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;></xref>此集合中的物件。"
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "新<xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref> ，其中包含已排序<xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;></xref>物件。"
  overload: System.ComponentModel.PropertyDescriptorCollection.Sort*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.Sort(System.String[])
  id: Sort(System.String[])
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: Sort(String[])
  nameWithType: PropertyDescriptorCollection.Sort(String[])
  fullName: System.ComponentModel.PropertyDescriptorCollection.Sort(String[])
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "排序此集合的成員。 指定的順序會先套用，後面接著此集合中，這是通常是依字母順序排列的預設排序。"
  remarks: ''
  example:
  - "The following code example defines the sort order for the Sort method. If the <xref:System.ComponentModel.PropertyDescriptorCollection> contains four <xref:System.ComponentModel.PropertyDescriptor> objects with the names `A`, `B`, `C`, and `D`, the properties of `myNewColl` would be sorted in the order `D`, `B`, `A`, and `C`.  \n  \n [!code-cs[classic eventdescriptorcollection.sort example#1](~/add/codesnippet/csharp/m-system.componentmodel._8_1.cs)]\n [!code-vb[classic eventdescriptorcollection.sort example#1](~/add/codesnippet/visualbasic/m-system.componentmodel._8_1.vb)]\n [!code-cpp[classic eventdescriptorcollection.sort example#1](~/add/codesnippet/cpp/m-system.componentmodel._8_1.cpp)]"
  syntax:
    content: public virtual System.ComponentModel.PropertyDescriptorCollection Sort (string[] names);
    parameters:
    - id: names
      type: System.String[]
      description: "描述的順序來排序字串陣列<xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;></xref>此集合中的物件。"
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "新<xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref> ，其中包含已排序<xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;></xref>物件。"
  overload: System.ComponentModel.PropertyDescriptorCollection.Sort*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.Sort(System.String[],System.Collections.IComparer)
  id: Sort(System.String[],System.Collections.IComparer)
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: Sort(String[],IComparer)
  nameWithType: PropertyDescriptorCollection.Sort(String[],IComparer)
  fullName: System.ComponentModel.PropertyDescriptorCollection.Sort(String[],IComparer)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "排序此集合的成員。 指定的順序會先套用，後面接著使用指定的<xref:System.Collections.IComparer>.</xref:System.Collections.IComparer>排序"
  remarks: ''
  example:
  - "The following code example defines the sort order for the Sort method. If the <xref:System.ComponentModel.PropertyDescriptorCollection> contains four <xref:System.ComponentModel.PropertyDescriptor> objects with the names `A`, `B`, `C`, and `D`, the properties of `myNewColl` would be sorted in the order `D`, `B`, `A`, and `C`.  \n  \n [!code-cs[classic eventdescriptorcollection.sort example#1](~/add/codesnippet/csharp/647021c9-86bc-46f3-95f4-_1.cs)]\n [!code-vb[classic eventdescriptorcollection.sort example#1](~/add/codesnippet/visualbasic/647021c9-86bc-46f3-95f4-_1.vb)]\n [!code-cpp[classic eventdescriptorcollection.sort example#1](~/add/codesnippet/cpp/647021c9-86bc-46f3-95f4-_1.cpp)]"
  syntax:
    content: public virtual System.ComponentModel.PropertyDescriptorCollection Sort (string[] names, System.Collections.IComparer comparer);
    parameters:
    - id: names
      type: System.String[]
      description: "描述的順序來排序字串陣列<xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;></xref>此集合中的物件。"
    - id: comparer
      type: System.Collections.IComparer
      description: "用來排序比較子<xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;></xref>此集合中的物件。"
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "新<xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref> ，其中包含已排序<xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;></xref>物件。"
  overload: System.ComponentModel.PropertyDescriptorCollection.Sort*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#ICollection#Count
  id: System#Collections#ICollection#Count
  isEii: true
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: System.Collections.ICollection.Count
  nameWithType: PropertyDescriptorCollection.System.Collections.ICollection.Count
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.ICollection.Count
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "取得集合中包含的項目數目。"
  syntax:
    content: int System.Collections.ICollection.Count { get; }
    return:
      type: System.Int32
      description: "集合中包含的項目數目。"
  overload: System.ComponentModel.PropertyDescriptorCollection.System#Collections#ICollection#Count*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#ICollection#IsSynchronized
  id: System#Collections#ICollection#IsSynchronized
  isEii: true
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: PropertyDescriptorCollection.System.Collections.ICollection.IsSynchronized
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.ICollection.IsSynchronized
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "取得值，表示是否同步化存取集合 （安全執行緒）。"
  syntax:
    content: bool System.Collections.ICollection.IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果對集合的存取為同步 （安全執行緒），否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.PropertyDescriptorCollection.System#Collections#ICollection#IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#ICollection#SyncRoot
  id: System#Collections#ICollection#SyncRoot
  isEii: true
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: System.Collections.ICollection.SyncRoot
  nameWithType: PropertyDescriptorCollection.System.Collections.ICollection.SyncRoot
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.ICollection.SyncRoot
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "取得物件，可以用來對集合同步存取。"
  syntax:
    content: object System.Collections.ICollection.SyncRoot { get; }
    return:
      type: System.Object
      description: "物件，可用來對集合進行同步存取。"
  overload: System.ComponentModel.PropertyDescriptorCollection.System#Collections#ICollection#SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Add(System.Object,System.Object)
  id: System#Collections#IDictionary#Add(System.Object,System.Object)
  isEii: true
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: System.Collections.IDictionary.Add(Object,Object)
  nameWithType: PropertyDescriptorCollection.System.Collections.IDictionary.Add(Object,Object)
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IDictionary.Add(Object,Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "將具有提供之索引鍵和值的項目加入至<xref:System.Collections.IDictionary>。</xref:System.Collections.IDictionary>"
  syntax:
    content: void IDictionary.Add (object key, object value);
    parameters:
    - id: key
      type: System.Object
      description: "<xref:System.Object>要做為要新增的項目索引鍵</xref:System.Object>"
    - id: value
      type: System.Object
      description: "<xref:System.Object>作為要新增的項目值</xref:System.Object>"
  overload: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Add*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "集合是唯讀的。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>value</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Clear
  id: System#Collections#IDictionary#Clear
  isEii: true
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: System.Collections.IDictionary.Clear()
  nameWithType: PropertyDescriptorCollection.System.Collections.IDictionary.Clear()
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IDictionary.Clear()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "從<xref:System.Collections.IDictionary>.</xref:System.Collections.IDictionary>移除所有項目"
  syntax:
    content: void IDictionary.Clear ();
    parameters: []
  overload: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Clear*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Contains(System.Object)
  id: System#Collections#IDictionary#Contains(System.Object)
  isEii: true
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: System.Collections.IDictionary.Contains(Object)
  nameWithType: PropertyDescriptorCollection.System.Collections.IDictionary.Contains(Object)
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IDictionary.Contains(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "決定是否<xref:System.Collections.IDictionary>包含具有指定之索引鍵的元素。</xref:System.Collections.IDictionary>"
  syntax:
    content: bool IDictionary.Contains (object key);
    parameters:
    - id: key
      type: System.Object
      description: "要在<xref:System.Collections.IDictionary>.</xref:System.Collections.IDictionary>中尋找的索引鍵"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref:System.Collections.IDictionary>包含具有索引鍵的元素否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Collections.IDictionary>"
  overload: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Contains*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#GetEnumerator
  id: System#Collections#IDictionary#GetEnumerator
  isEii: true
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: System.Collections.IDictionary.GetEnumerator()
  nameWithType: PropertyDescriptorCollection.System.Collections.IDictionary.GetEnumerator()
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IDictionary.GetEnumerator()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "傳回這個類別的列舉值。"
  remarks: ''
  example:
  - "The following code example gets an enumerator for the properties on `button1`. It uses the enumerator to print the names of the properties in the collection. It requires that `button1` and `textBox1` have been instantiated on a form.  \n  \n [!code-cpp[Classic PropertyDescriptorCollection.GetEnumerator Example#1](~/add/codesnippet/cpp/3bd980e1-aa61-4b0a-875e-_1.cpp)]\n [!code-cs[Classic PropertyDescriptorCollection.GetEnumerator Example#1](~/add/codesnippet/csharp/3bd980e1-aa61-4b0a-875e-_1.cs)]\n [!code-vb[Classic PropertyDescriptorCollection.GetEnumerator Example#1](~/add/codesnippet/visualbasic/3bd980e1-aa61-4b0a-875e-_1.vb)]"
  syntax:
    content: System.Collections.IDictionaryEnumerator IDictionary.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IDictionaryEnumerator
      description: "列舉值的型別<xref:System.Collections.IEnumerator>.</xref:System.Collections.IEnumerator>"
  overload: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#IsFixedSize
  id: System#Collections#IDictionary#IsFixedSize
  isEii: true
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: System.Collections.IDictionary.IsFixedSize
  nameWithType: PropertyDescriptorCollection.System.Collections.IDictionary.IsFixedSize
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IDictionary.IsFixedSize
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "取得值，指出是否<xref:System.Collections.IDictionary>有固定的大小。</xref:System.Collections.IDictionary>"
  syntax:
    content: bool System.Collections.IDictionary.IsFixedSize { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref:System.Collections.IDictionary>有固定大小，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Collections.IDictionary>"
  overload: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#IsFixedSize*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#IsReadOnly
  id: System#Collections#IDictionary#IsReadOnly
  isEii: true
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: System.Collections.IDictionary.IsReadOnly
  nameWithType: PropertyDescriptorCollection.System.Collections.IDictionary.IsReadOnly
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IDictionary.IsReadOnly
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "取得值，指出是否<xref:System.Collections.IDictionary>處於唯讀狀態。</xref:System.Collections.IDictionary>"
  syntax:
    content: bool System.Collections.IDictionary.IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref:System.Collections.IDictionary>是唯讀，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Collections.IDictionary>"
  overload: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Item(System.Object)
  id: System#Collections#IDictionary#Item(System.Object)
  isEii: true
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: System.Collections.IDictionary.Item(Object)
  nameWithType: PropertyDescriptorCollection.System.Collections.IDictionary.Item(Object)
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IDictionary.Item(Object)
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "取得或設定具有指定之索引鍵的項目。"
  syntax:
    content: object System.Collections.IDictionary.Item[object key] { get; set; }
    parameters:
    - id: key
      type: System.Object
      description: "取得或設定項目的索引鍵。"
    return:
      type: System.Object
      description: "具有指定之索引鍵的項目。"
  overload: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Item*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Keys
  id: System#Collections#IDictionary#Keys
  isEii: true
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: System.Collections.IDictionary.Keys
  nameWithType: PropertyDescriptorCollection.System.Collections.IDictionary.Keys
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IDictionary.Keys
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "取得<xref:System.Collections.ICollection>包含<xref:System.Collections.IDictionary>.</xref:System.Collections.IDictionary>的索引鍵</xref:System.Collections.ICollection>"
  syntax:
    content: System.Collections.ICollection System.Collections.IDictionary.Keys { get; }
    return:
      type: System.Collections.ICollection
      description: "<xref:System.Collections.ICollection>包含<xref:System.Collections.IDictionary>.</xref:System.Collections.IDictionary>的索引鍵</xref:System.Collections.ICollection>"
  overload: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Keys*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Remove(System.Object)
  id: System#Collections#IDictionary#Remove(System.Object)
  isEii: true
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: System.Collections.IDictionary.Remove(Object)
  nameWithType: PropertyDescriptorCollection.System.Collections.IDictionary.Remove(Object)
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IDictionary.Remove(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "具有指定索引鍵的項目移除<xref:System.Collections.IDictionary>.</xref:System.Collections.IDictionary>"
  syntax:
    content: void IDictionary.Remove (object key);
    parameters:
    - id: key
      type: System.Object
      description: "要移除之項目的索引鍵。"
  overload: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Remove*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Values
  id: System#Collections#IDictionary#Values
  isEii: true
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: System.Collections.IDictionary.Values
  nameWithType: PropertyDescriptorCollection.System.Collections.IDictionary.Values
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IDictionary.Values
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "取得<xref:System.Collections.ICollection>包含<xref:System.Collections.IDictionary>.</xref:System.Collections.IDictionary>中的值</xref:System.Collections.ICollection>"
  syntax:
    content: System.Collections.ICollection System.Collections.IDictionary.Values { get; }
    return:
      type: System.Collections.ICollection
      description: "<xref:System.Collections.ICollection>包含<xref:System.Collections.IDictionary>.</xref:System.Collections.IDictionary>中的值</xref:System.Collections.ICollection>"
  overload: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Values*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: PropertyDescriptorCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "傳回<xref:System.Collections.IEnumerator><xref:System.Collections.IDictionary>。</xref:System.Collections.IDictionary> </xref:System.Collections.IEnumerator>"
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "<xref:System.Collections.IEnumerator> <xref:System.Collections.IDictionary>。</xref:System.Collections.IDictionary> </xref:System.Collections.IEnumerator>"
  overload: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Add(System.Object)
  id: System#Collections#IList#Add(System.Object)
  isEii: true
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: System.Collections.IList.Add(Object)
  nameWithType: PropertyDescriptorCollection.System.Collections.IList.Add(Object)
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IList.Add(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "將項目加入至<xref:System.Collections.IList>。</xref:System.Collections.IList>"
  syntax:
    content: int IList.Add (object value);
    parameters:
    - id: value
      type: System.Object
      description: "要加入至集合的項目。"
    return:
      type: System.Int32
      description: "插入新項目的位置。"
  overload: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Add*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Clear
  id: System#Collections#IList#Clear
  isEii: true
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: System.Collections.IList.Clear()
  nameWithType: PropertyDescriptorCollection.System.Collections.IList.Clear()
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IList.Clear()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "從集合中移除所有項目。"
  syntax:
    content: void IList.Clear ();
    parameters: []
  overload: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Clear*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "集合是唯讀的。"
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Contains(System.Object)
  id: System#Collections#IList#Contains(System.Object)
  isEii: true
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: System.Collections.IList.Contains(Object)
  nameWithType: PropertyDescriptorCollection.System.Collections.IList.Contains(Object)
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IList.Contains(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "判斷集合是否包含特定值。"
  syntax:
    content: bool IList.Contains (object value);
    parameters:
    - id: value
      type: System.Object
      description: "要在集合中尋找的項目。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果在集合中，找到的項目否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Contains*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#IndexOf(System.Object)
  id: System#Collections#IList#IndexOf(System.Object)
  isEii: true
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: System.Collections.IList.IndexOf(Object)
  nameWithType: PropertyDescriptorCollection.System.Collections.IList.IndexOf(Object)
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IList.IndexOf(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "判斷指定的項目集合中的索引。"
  syntax:
    content: int IList.IndexOf (object value);
    parameters:
    - id: value
      type: System.Object
      description: "要在集合中尋找的項目。"
    return:
      type: System.Int32
      description: "索引<code> value </code>如果找到在清單中，否則為-1。"
  overload: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  id: System#Collections#IList#Insert(System.Int32,System.Object)
  isEii: true
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: System.Collections.IList.Insert(Int32,Object)
  nameWithType: PropertyDescriptorCollection.System.Collections.IList.Insert(Int32,Object)
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IList.Insert(Int32,Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "將項目插入位於指定索引的集合。"
  syntax:
    content: void IList.Insert (int index, object value);
    parameters:
    - id: index
      type: System.Int32
      description: "以零為起始的索引處`value`應該插入。"
    - id: value
      type: System.Object
      description: "要插入至集合的項目。"
  overload: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Insert*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "集合是唯讀的。"
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#IsFixedSize
  id: System#Collections#IList#IsFixedSize
  isEii: true
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: System.Collections.IList.IsFixedSize
  nameWithType: PropertyDescriptorCollection.System.Collections.IList.IsFixedSize
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IList.IsFixedSize
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "取得值，指出集合是否具有固定的大小。"
  syntax:
    content: bool System.Collections.IList.IsFixedSize { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果集合具有固定的大小。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#IsFixedSize*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#IsReadOnly
  id: System#Collections#IList#IsReadOnly
  isEii: true
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: System.Collections.IList.IsReadOnly
  nameWithType: PropertyDescriptorCollection.System.Collections.IList.IsReadOnly
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IList.IsReadOnly
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "取得值，指出集合是否唯讀。"
  syntax:
    content: bool System.Collections.IList.IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果集合是唯讀的。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Item(System.Int32)
  id: System#Collections#IList#Item(System.Int32)
  isEii: true
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: System.Collections.IList.Item(Int32)
  nameWithType: PropertyDescriptorCollection.System.Collections.IList.Item(Int32)
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IList.Item(Int32)
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "取得或設定從集合中指定索引處的項目。"
  syntax:
    content: object System.Collections.IList.Item[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "取得或設定項目以零為起始的索引。"
    return:
      type: System.Object
      description: "指定索引處的項目。"
  overload: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Item*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "集合是唯讀的。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>value</code>is not a <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;></xref>."
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "<code>index</code>小於 0。       -<code>index</code>等於或大於<xref:System.ComponentModel.EventDescriptorCollection.Count*>。"
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Remove(System.Object)
  id: System#Collections#IList#Remove(System.Object)
  isEii: true
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: System.Collections.IList.Remove(Object)
  nameWithType: PropertyDescriptorCollection.System.Collections.IList.Remove(Object)
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IList.Remove(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "從集合中移除第一個指定的值。"
  syntax:
    content: void IList.Remove (object value);
    parameters:
    - id: value
      type: System.Object
      description: "要從集合中移除的項目。"
  overload: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Remove*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "集合是唯讀的。"
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#RemoveAt(System.Int32)
  id: System#Collections#IList#RemoveAt(System.Int32)
  isEii: true
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: System.Collections.IList.RemoveAt(Int32)
  nameWithType: PropertyDescriptorCollection.System.Collections.IList.RemoveAt(Int32)
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IList.RemoveAt(Int32)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "移除指定索引處的項目。"
  syntax:
    content: void IList.RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "要移除的項目以零為起始的索引。"
  overload: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#RemoveAt*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "集合是唯讀的。"
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.IndexOutOfRangeException
  isExternal: true
  name: System.IndexOutOfRangeException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ComponentModel.PropertyDescriptorCollection.#ctor(System.ComponentModel.PropertyDescriptor[])
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: PropertyDescriptorCollection(PropertyDescriptor[])
  nameWithType: PropertyDescriptorCollection.PropertyDescriptorCollection(PropertyDescriptor[])
  fullName: System.ComponentModel.PropertyDescriptorCollection.PropertyDescriptorCollection(PropertyDescriptor[])
- uid: System.ComponentModel.PropertyDescriptor[]
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptor
  nameWithType: PropertyDescriptor
  fullName: System.ComponentModel.PropertyDescriptor[]
  spec.csharp:
  - uid: System.ComponentModel.PropertyDescriptor
    name: PropertyDescriptor
    nameWithType: PropertyDescriptor
    fullName: PropertyDescriptor[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ComponentModel.PropertyDescriptorCollection.#ctor(System.ComponentModel.PropertyDescriptor[],System.Boolean)
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: PropertyDescriptorCollection(PropertyDescriptor[],Boolean)
  nameWithType: PropertyDescriptorCollection.PropertyDescriptorCollection(PropertyDescriptor[],Boolean)
  fullName: System.ComponentModel.PropertyDescriptorCollection.PropertyDescriptorCollection(PropertyDescriptor[],Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.PropertyDescriptorCollection.Add(System.ComponentModel.PropertyDescriptor)
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: Add(PropertyDescriptor)
  nameWithType: PropertyDescriptorCollection.Add(PropertyDescriptor)
  fullName: System.ComponentModel.PropertyDescriptorCollection.Add(PropertyDescriptor)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ComponentModel.PropertyDescriptor
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptor
  nameWithType: PropertyDescriptor
  fullName: System.ComponentModel.PropertyDescriptor
- uid: System.ComponentModel.PropertyDescriptorCollection.Clear
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: Clear()
  nameWithType: PropertyDescriptorCollection.Clear()
  fullName: System.ComponentModel.PropertyDescriptorCollection.Clear()
- uid: System.ComponentModel.PropertyDescriptorCollection.Contains(System.ComponentModel.PropertyDescriptor)
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: Contains(PropertyDescriptor)
  nameWithType: PropertyDescriptorCollection.Contains(PropertyDescriptor)
  fullName: System.ComponentModel.PropertyDescriptorCollection.Contains(PropertyDescriptor)
- uid: System.ComponentModel.PropertyDescriptorCollection.CopyTo(System.Array,System.Int32)
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: PropertyDescriptorCollection.CopyTo(Array,Int32)
  fullName: System.ComponentModel.PropertyDescriptorCollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.ComponentModel.PropertyDescriptorCollection.Count
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: Count
  nameWithType: PropertyDescriptorCollection.Count
  fullName: System.ComponentModel.PropertyDescriptorCollection.Count
- uid: System.ComponentModel.PropertyDescriptorCollection.Empty
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: Empty
  nameWithType: PropertyDescriptorCollection.Empty
  fullName: System.ComponentModel.PropertyDescriptorCollection.Empty
- uid: System.ComponentModel.PropertyDescriptorCollection
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptorCollection
  nameWithType: PropertyDescriptorCollection
  fullName: System.ComponentModel.PropertyDescriptorCollection
- uid: System.ComponentModel.PropertyDescriptorCollection.Find(System.String,System.Boolean)
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: Find(String,Boolean)
  nameWithType: PropertyDescriptorCollection.Find(String,Boolean)
  fullName: System.ComponentModel.PropertyDescriptorCollection.Find(String,Boolean)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.PropertyDescriptorCollection.GetEnumerator
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: PropertyDescriptorCollection.GetEnumerator()
  fullName: System.ComponentModel.PropertyDescriptorCollection.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.ComponentModel.PropertyDescriptorCollection.IndexOf(System.ComponentModel.PropertyDescriptor)
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: IndexOf(PropertyDescriptor)
  nameWithType: PropertyDescriptorCollection.IndexOf(PropertyDescriptor)
  fullName: System.ComponentModel.PropertyDescriptorCollection.IndexOf(PropertyDescriptor)
- uid: System.ComponentModel.PropertyDescriptorCollection.Insert(System.Int32,System.ComponentModel.PropertyDescriptor)
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: Insert(Int32,PropertyDescriptor)
  nameWithType: PropertyDescriptorCollection.Insert(Int32,PropertyDescriptor)
  fullName: System.ComponentModel.PropertyDescriptorCollection.Insert(Int32,PropertyDescriptor)
- uid: System.ComponentModel.PropertyDescriptorCollection.InternalSort(System.Collections.IComparer)
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: InternalSort(IComparer)
  nameWithType: PropertyDescriptorCollection.InternalSort(IComparer)
  fullName: System.ComponentModel.PropertyDescriptorCollection.InternalSort(IComparer)
- uid: System.Collections.IComparer
  parent: System.Collections
  isExternal: true
  name: IComparer
  nameWithType: IComparer
  fullName: System.Collections.IComparer
- uid: System.ComponentModel.PropertyDescriptorCollection.InternalSort(System.String[])
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: InternalSort(String[])
  nameWithType: PropertyDescriptorCollection.InternalSort(String[])
  fullName: System.ComponentModel.PropertyDescriptorCollection.InternalSort(String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ComponentModel.PropertyDescriptorCollection.Item(System.Int32)
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: PropertyDescriptorCollection.Item(Int32)
  fullName: System.ComponentModel.PropertyDescriptorCollection.Item(Int32)
- uid: System.ComponentModel.PropertyDescriptorCollection.Item(System.String)
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: Item(String)
  nameWithType: PropertyDescriptorCollection.Item(String)
  fullName: System.ComponentModel.PropertyDescriptorCollection.Item(String)
- uid: System.ComponentModel.PropertyDescriptorCollection.Remove(System.ComponentModel.PropertyDescriptor)
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: Remove(PropertyDescriptor)
  nameWithType: PropertyDescriptorCollection.Remove(PropertyDescriptor)
  fullName: System.ComponentModel.PropertyDescriptorCollection.Remove(PropertyDescriptor)
- uid: System.ComponentModel.PropertyDescriptorCollection.RemoveAt(System.Int32)
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: PropertyDescriptorCollection.RemoveAt(Int32)
  fullName: System.ComponentModel.PropertyDescriptorCollection.RemoveAt(Int32)
- uid: System.ComponentModel.PropertyDescriptorCollection.Sort
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: Sort()
  nameWithType: PropertyDescriptorCollection.Sort()
  fullName: System.ComponentModel.PropertyDescriptorCollection.Sort()
- uid: System.ComponentModel.PropertyDescriptorCollection.Sort(System.Collections.IComparer)
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: Sort(IComparer)
  nameWithType: PropertyDescriptorCollection.Sort(IComparer)
  fullName: System.ComponentModel.PropertyDescriptorCollection.Sort(IComparer)
- uid: System.ComponentModel.PropertyDescriptorCollection.Sort(System.String[])
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: Sort(String[])
  nameWithType: PropertyDescriptorCollection.Sort(String[])
  fullName: System.ComponentModel.PropertyDescriptorCollection.Sort(String[])
- uid: System.ComponentModel.PropertyDescriptorCollection.Sort(System.String[],System.Collections.IComparer)
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: Sort(String[],IComparer)
  nameWithType: PropertyDescriptorCollection.Sort(String[],IComparer)
  fullName: System.ComponentModel.PropertyDescriptorCollection.Sort(String[],IComparer)
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#ICollection#Count
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.ICollection.Count
  nameWithType: PropertyDescriptorCollection.System.Collections.ICollection.Count
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.ICollection.Count
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#ICollection#IsSynchronized
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: PropertyDescriptorCollection.System.Collections.ICollection.IsSynchronized
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.ICollection.IsSynchronized
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#ICollection#SyncRoot
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: PropertyDescriptorCollection.System.Collections.ICollection.SyncRoot
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.ICollection.SyncRoot
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Add(System.Object,System.Object)
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IDictionary.Add(Object,Object)
  nameWithType: PropertyDescriptorCollection.System.Collections.IDictionary.Add(Object,Object)
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IDictionary.Add(Object,Object)
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Clear
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IDictionary.Clear()
  nameWithType: PropertyDescriptorCollection.System.Collections.IDictionary.Clear()
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IDictionary.Clear()
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Contains(System.Object)
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IDictionary.Contains(Object)
  nameWithType: PropertyDescriptorCollection.System.Collections.IDictionary.Contains(Object)
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IDictionary.Contains(Object)
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#GetEnumerator
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IDictionary.GetEnumerator()
  nameWithType: PropertyDescriptorCollection.System.Collections.IDictionary.GetEnumerator()
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IDictionary.GetEnumerator()
- uid: System.Collections.IDictionaryEnumerator
  parent: System.Collections
  isExternal: true
  name: IDictionaryEnumerator
  nameWithType: IDictionaryEnumerator
  fullName: System.Collections.IDictionaryEnumerator
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#IsFixedSize
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IDictionary.IsFixedSize
  nameWithType: PropertyDescriptorCollection.System.Collections.IDictionary.IsFixedSize
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IDictionary.IsFixedSize
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#IsReadOnly
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IDictionary.IsReadOnly
  nameWithType: PropertyDescriptorCollection.System.Collections.IDictionary.IsReadOnly
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IDictionary.IsReadOnly
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Item(System.Object)
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IDictionary.Item(Object)
  nameWithType: PropertyDescriptorCollection.System.Collections.IDictionary.Item(Object)
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IDictionary.Item(Object)
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Keys
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IDictionary.Keys
  nameWithType: PropertyDescriptorCollection.System.Collections.IDictionary.Keys
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IDictionary.Keys
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Remove(System.Object)
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IDictionary.Remove(Object)
  nameWithType: PropertyDescriptorCollection.System.Collections.IDictionary.Remove(Object)
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IDictionary.Remove(Object)
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Values
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IDictionary.Values
  nameWithType: PropertyDescriptorCollection.System.Collections.IDictionary.Values
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IDictionary.Values
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IEnumerable#GetEnumerator
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: PropertyDescriptorCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IEnumerable.GetEnumerator()
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Add(System.Object)
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IList.Add(Object)
  nameWithType: PropertyDescriptorCollection.System.Collections.IList.Add(Object)
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IList.Add(Object)
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Clear
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IList.Clear()
  nameWithType: PropertyDescriptorCollection.System.Collections.IList.Clear()
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IList.Clear()
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Contains(System.Object)
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IList.Contains(Object)
  nameWithType: PropertyDescriptorCollection.System.Collections.IList.Contains(Object)
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IList.Contains(Object)
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#IndexOf(System.Object)
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IList.IndexOf(Object)
  nameWithType: PropertyDescriptorCollection.System.Collections.IList.IndexOf(Object)
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IList.IndexOf(Object)
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IList.Insert(Int32,Object)
  nameWithType: PropertyDescriptorCollection.System.Collections.IList.Insert(Int32,Object)
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IList.Insert(Int32,Object)
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#IsFixedSize
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IList.IsFixedSize
  nameWithType: PropertyDescriptorCollection.System.Collections.IList.IsFixedSize
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IList.IsFixedSize
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#IsReadOnly
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IList.IsReadOnly
  nameWithType: PropertyDescriptorCollection.System.Collections.IList.IsReadOnly
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IList.IsReadOnly
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Item(System.Int32)
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IList.Item(Int32)
  nameWithType: PropertyDescriptorCollection.System.Collections.IList.Item(Int32)
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IList.Item(Int32)
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Remove(System.Object)
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IList.Remove(Object)
  nameWithType: PropertyDescriptorCollection.System.Collections.IList.Remove(Object)
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IList.Remove(Object)
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#RemoveAt(System.Int32)
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IList.RemoveAt(Int32)
  nameWithType: PropertyDescriptorCollection.System.Collections.IList.RemoveAt(Int32)
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IList.RemoveAt(Int32)
- uid: System.ComponentModel.PropertyDescriptorCollection.#ctor*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: PropertyDescriptorCollection
  nameWithType: PropertyDescriptorCollection.PropertyDescriptorCollection
- uid: System.ComponentModel.PropertyDescriptorCollection.Add*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: Add
  nameWithType: PropertyDescriptorCollection.Add
- uid: System.ComponentModel.PropertyDescriptorCollection.Clear*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: Clear
  nameWithType: PropertyDescriptorCollection.Clear
- uid: System.ComponentModel.PropertyDescriptorCollection.Contains*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: Contains
  nameWithType: PropertyDescriptorCollection.Contains
- uid: System.ComponentModel.PropertyDescriptorCollection.CopyTo*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: CopyTo
  nameWithType: PropertyDescriptorCollection.CopyTo
- uid: System.ComponentModel.PropertyDescriptorCollection.Count*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: Count
  nameWithType: PropertyDescriptorCollection.Count
- uid: System.ComponentModel.PropertyDescriptorCollection.Find*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: Find
  nameWithType: PropertyDescriptorCollection.Find
- uid: System.ComponentModel.PropertyDescriptorCollection.GetEnumerator*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: PropertyDescriptorCollection.GetEnumerator
- uid: System.ComponentModel.PropertyDescriptorCollection.IndexOf*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: IndexOf
  nameWithType: PropertyDescriptorCollection.IndexOf
- uid: System.ComponentModel.PropertyDescriptorCollection.Insert*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: Insert
  nameWithType: PropertyDescriptorCollection.Insert
- uid: System.ComponentModel.PropertyDescriptorCollection.InternalSort*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: InternalSort
  nameWithType: PropertyDescriptorCollection.InternalSort
- uid: System.ComponentModel.PropertyDescriptorCollection.Item*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: Item
  nameWithType: PropertyDescriptorCollection.Item
- uid: System.ComponentModel.PropertyDescriptorCollection.Remove*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: Remove
  nameWithType: PropertyDescriptorCollection.Remove
- uid: System.ComponentModel.PropertyDescriptorCollection.RemoveAt*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: RemoveAt
  nameWithType: PropertyDescriptorCollection.RemoveAt
- uid: System.ComponentModel.PropertyDescriptorCollection.Sort*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: Sort
  nameWithType: PropertyDescriptorCollection.Sort
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#ICollection#Count*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.ICollection.Count
  nameWithType: PropertyDescriptorCollection.System.Collections.ICollection.Count
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#ICollection#IsSynchronized*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: PropertyDescriptorCollection.System.Collections.ICollection.IsSynchronized
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#ICollection#SyncRoot*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: PropertyDescriptorCollection.System.Collections.ICollection.SyncRoot
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Add*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IDictionary.Add
  nameWithType: PropertyDescriptorCollection.System.Collections.IDictionary.Add
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Clear*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IDictionary.Clear
  nameWithType: PropertyDescriptorCollection.System.Collections.IDictionary.Clear
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Contains*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IDictionary.Contains
  nameWithType: PropertyDescriptorCollection.System.Collections.IDictionary.Contains
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#GetEnumerator*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IDictionary.GetEnumerator
  nameWithType: PropertyDescriptorCollection.System.Collections.IDictionary.GetEnumerator
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#IsFixedSize*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IDictionary.IsFixedSize
  nameWithType: PropertyDescriptorCollection.System.Collections.IDictionary.IsFixedSize
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#IsReadOnly*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IDictionary.IsReadOnly
  nameWithType: PropertyDescriptorCollection.System.Collections.IDictionary.IsReadOnly
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Item*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IDictionary.Item
  nameWithType: PropertyDescriptorCollection.System.Collections.IDictionary.Item
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Keys*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IDictionary.Keys
  nameWithType: PropertyDescriptorCollection.System.Collections.IDictionary.Keys
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Remove*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IDictionary.Remove
  nameWithType: PropertyDescriptorCollection.System.Collections.IDictionary.Remove
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Values*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IDictionary.Values
  nameWithType: PropertyDescriptorCollection.System.Collections.IDictionary.Values
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IEnumerable#GetEnumerator*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: PropertyDescriptorCollection.System.Collections.IEnumerable.GetEnumerator
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Add*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IList.Add
  nameWithType: PropertyDescriptorCollection.System.Collections.IList.Add
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Clear*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IList.Clear
  nameWithType: PropertyDescriptorCollection.System.Collections.IList.Clear
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Contains*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IList.Contains
  nameWithType: PropertyDescriptorCollection.System.Collections.IList.Contains
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#IndexOf*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IList.IndexOf
  nameWithType: PropertyDescriptorCollection.System.Collections.IList.IndexOf
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Insert*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IList.Insert
  nameWithType: PropertyDescriptorCollection.System.Collections.IList.Insert
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#IsFixedSize*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IList.IsFixedSize
  nameWithType: PropertyDescriptorCollection.System.Collections.IList.IsFixedSize
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#IsReadOnly*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IList.IsReadOnly
  nameWithType: PropertyDescriptorCollection.System.Collections.IList.IsReadOnly
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Item*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IList.Item
  nameWithType: PropertyDescriptorCollection.System.Collections.IList.Item
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Remove*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IList.Remove
  nameWithType: PropertyDescriptorCollection.System.Collections.IList.Remove
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#RemoveAt*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IList.RemoveAt
  nameWithType: PropertyDescriptorCollection.System.Collections.IList.RemoveAt
