### YamlMime:ManagedReference
items:
- uid: System.Windows.ValueSource
  id: ValueSource
  children:
  - System.Windows.ValueSource.BaseValueSource
  - System.Windows.ValueSource.Equals(System.Object)
  - System.Windows.ValueSource.GetHashCode
  - System.Windows.ValueSource.IsAnimated
  - System.Windows.ValueSource.IsCoerced
  - System.Windows.ValueSource.IsCurrent
  - System.Windows.ValueSource.IsExpression
  - System.Windows.ValueSource.op_Equality(System.Windows.ValueSource,System.Windows.ValueSource)
  - System.Windows.ValueSource.op_Inequality(System.Windows.ValueSource,System.Windows.ValueSource)
  langs:
  - csharp
  name: ValueSource
  nameWithType: ValueSource
  fullName: System.Windows.ValueSource
  type: Struct
  summary: "會報告從傳回的資訊&lt;xref:System.Windows.DependencyPropertyHelper.GetValueSource%2A?displayProperty=fullName&gt;。"
  remarks: "大部分的 ValueSource 傳輸的資訊包含在<xref:System.Windows.ValueSource.BaseValueSource%2A>屬性。</xref:System.Windows.ValueSource.BaseValueSource%2A> 此屬性包含列舉值，指定剛好只有一個的整體外觀[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]屬性系統，負責相依性屬性的有效值。       除了基底值的相依性屬性值相關的其他資訊時是否動畫值，以及是否涉及的運算式 （例如繫結或動態資源參考）。 這項資訊報告由<xref:System.Windows.ValueSource.IsAnimated%2A>和<xref:System.Windows.ValueSource.IsExpression%2A>分別。</xref:System.Windows.ValueSource.IsExpression%2A> </xref:System.Windows.ValueSource.IsAnimated%2A> 此外，如果強制型轉做屬性值上時，則屬性會保留所需的值，而且屬性值將會嘗試將到達所要的值，如果特定的強制型轉的條件約束已變更，或提高。 強制型轉的屬性不是在其所需的值將報告<xref:System.Windows.ValueSource.IsCoerced%2A>是`true`。</xref:System.Windows.ValueSource.IsCoerced%2A>"
  syntax:
    content: public struct ValueSource
  inheritance:
  - System.ValueType
  implements: []
  platform:
  - net462
- uid: System.Windows.ValueSource.BaseValueSource
  id: BaseValueSource
  parent: System.Windows.ValueSource
  langs:
  - csharp
  name: BaseValueSource
  nameWithType: ValueSource.BaseValueSource
  fullName: System.Windows.ValueSource.BaseValueSource
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "取得值，這個值的<xref href=&quot;System.Windows.BaseValueSource&quot;></xref>列舉型別，它會報告提供值的相依性屬性系統來源。"
  remarks: "如果強制型轉或動畫作用於屬性的基底值不是有效的值。 請檢查<xref:System.Windows.ValueSource.IsAnimated%2A>和<xref:System.Windows.ValueSource.IsCoerced%2A>如果您想要判斷基底值是否為有效的值。</xref:System.Windows.ValueSource.IsCoerced%2A> </xref:System.Windows.ValueSource.IsAnimated%2A>       您也可以檢查<xref:System.Windows.ValueSource.IsExpression%2A>查看如果移出的運算式評估的基底值。</xref:System.Windows.ValueSource.IsExpression%2A>"
  syntax:
    content: public System.Windows.BaseValueSource BaseValueSource { get; }
    return:
      type: System.Windows.BaseValueSource
      description: "列舉值。"
  overload: System.Windows.ValueSource.BaseValueSource*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ValueSource.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Windows.ValueSource
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: ValueSource.Equals(Object)
  fullName: System.Windows.ValueSource.Equals(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "傳回值，指出是否此<xref href=&quot;System.Windows.ValueSource&quot;></xref>是否等於指定的物件。"
  remarks: "此實作中支援的值是否相等，根據每個屬性值，每個<xref:System.Windows.ValueSource>結構。</xref:System.Windows.ValueSource>"
  syntax:
    content: public override bool Equals (object o);
    parameters:
    - id: o
      type: System.Object
      description: "要與這個比較的物件<xref href=&quot;System.Windows.ValueSource&quot;> </xref>。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果所提供的物件等於目前<xref href=&quot;System.Windows.ValueSource&quot;> </xref>，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.ValueSource.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ValueSource.GetHashCode
  id: GetHashCode
  parent: System.Windows.ValueSource
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: ValueSource.GetHashCode()
  fullName: System.Windows.ValueSource.GetHashCode()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "傳回這個雜湊程式碼<xref href=&quot;System.Windows.ValueSource&quot;> </xref>。"
  remarks: "此雜湊程式碼根據<xref:System.Windows.ValueSource.BaseValueSource%2A>值。</xref:System.Windows.ValueSource.BaseValueSource%2A>"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "32 位元不帶正負號的整數雜湊碼。"
  overload: System.Windows.ValueSource.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ValueSource.IsAnimated
  id: IsAnimated
  parent: System.Windows.ValueSource
  langs:
  - csharp
  name: IsAnimated
  nameWithType: ValueSource.IsAnimated
  fullName: System.Windows.ValueSource.IsAnimated
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "取得宣告是否要繪製之屬性的值。"
  remarks: "所報告的所有目前正在顯示動畫的屬性，來源<xref:System.Windows.ValueSource.BaseValueSource%2A>不立即相關，因為動畫運作相依性屬性優先順序高於基底值。</xref:System.Windows.ValueSource.BaseValueSource%2A> 如需優先順序和動畫的詳細資訊，請參閱[相依性屬性的值優先順序](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public bool IsAnimated { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果屬性動畫效果。，否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.ValueSource.IsAnimated*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ValueSource.IsCoerced
  id: IsCoerced
  parent: System.Windows.ValueSource
  langs:
  - csharp
  name: IsCoerced
  nameWithType: ValueSource.IsCoerced
  fullName: System.Windows.ValueSource.IsCoerced
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "取得值，是否從產生的這個值會宣告<xref href=&quot;System.Windows.CoerceValueCallback&quot;></xref>套用至相依性屬性的實作。"
  remarks: "如果強制型轉做屬性值上時，則屬性會保留想要的值，屬性值將會嘗試將到達所要的值，如果特定的強制型轉的條件約束已變更，或提高。 強制型轉的屬性不是在其所需的值將會報告，IsCoerced `true`。       強制型轉做優先順序高於基底值，並沒有嚴格的參與者的基底值的設定方式。 因此被強制轉型的狀態會報告這個屬性，而非值<xref:System.Windows.BaseValueSource>列舉型別。</xref:System.Windows.BaseValueSource> 如需有關強制型轉、 基底值和優先順序的詳細資訊，請參閱[相依性屬性的值優先順序](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public bool IsCoerced { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果產生的值<xref href=&quot;System.Windows.CoerceValueCallback&quot;></xref>實作套用至相依性屬性; 否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.ValueSource.IsCoerced*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ValueSource.IsCurrent
  id: IsCurrent
  parent: System.Windows.ValueSource
  langs:
  - csharp
  name: IsCurrent
  nameWithType: ValueSource.IsCurrent
  fullName: System.Windows.ValueSource.IsCurrent
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "取得是否已將值設定<xref:System.Windows.DependencyObject.SetCurrentValue*>方法。</xref:System.Windows.DependencyObject.SetCurrentValue*>"
  syntax:
    content: public bool IsCurrent { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果已設定值，<xref:System.Windows.DependencyObject.SetCurrentValue*>方法，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Windows.DependencyObject.SetCurrentValue*>"
  overload: System.Windows.ValueSource.IsCurrent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ValueSource.IsExpression
  id: IsExpression
  parent: System.Windows.ValueSource
  langs:
  - csharp
  name: IsExpression
  nameWithType: ValueSource.IsExpression
  fullName: System.Windows.ValueSource.IsExpression
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "取得宣告此值是否導致評估的運算式的值。 這可能是<xref href=&quot;System.Windows.Data.BindingExpression&quot;></xref>支援繫結或內部的運算式，例如支援[DynamicResource 標記延伸](~/add/includes/ajax-current-ext-md.md)。"
  remarks: "評估的運算式也會報告特定的基底值，設定條件運算式已套用的位置，為<xref:System.Windows.ValueSource.BaseValueSource%2A>.</xref:System.Windows.ValueSource.BaseValueSource%2A>中的值 <xref:System.Windows.ValueSource.BaseValueSource%2A>仍非常相關的所有屬性所在 IsExpression `true`。</xref:System.Windows.ValueSource.BaseValueSource%2A> 了解的值是否來自運算式可以是特別有用，如果已設定值間接，例如透過範本或繼承的屬性值。       如果運算式評估失敗 （繫結失敗; 找不到該名稱的任何資源），則此值將來自其他一些參與者在屬性系統中，最有可能的預設值。 該來源則會回報<xref:System.Windows.ValueSource.BaseValueSource%2A>。</xref:System.Windows.ValueSource.BaseValueSource%2A> 失敗的運算式評估會傳回`false`IsExpression 的。"
  syntax:
    content: public bool IsExpression { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果值是來自評估的運算式。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.ValueSource.IsExpression*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ValueSource.op_Equality(System.Windows.ValueSource,System.Windows.ValueSource)
  id: op_Equality(System.Windows.ValueSource,System.Windows.ValueSource)
  parent: System.Windows.ValueSource
  langs:
  - csharp
  name: op_Equality(ValueSource,ValueSource)
  nameWithType: ValueSource.op_Equality(ValueSource,ValueSource)
  fullName: System.Windows.ValueSource.op_Equality(ValueSource,ValueSource)
  type: Operator
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "判斷兩個<xref href=&quot;System.Windows.ValueSource&quot;></xref>執行個體具有相同的值。"
  remarks: "這個實作會呼叫<xref:System.Windows.ValueSource.Equals%2A>，和支援值<xref:System.Windows.ValueSource>.</xref:System.Windows.ValueSource>的所有屬性為都基礎的等號比較</xref:System.Windows.ValueSource.Equals%2A>"
  syntax:
    content: public static bool op_Equality (System.Windows.ValueSource vs1, System.Windows.ValueSource vs2);
    parameters:
    - id: vs1
      type: System.Windows.ValueSource
      description: "第一個<xref href=&quot;System.Windows.ValueSource&quot;></xref>比較。"
    - id: vs2
      type: System.Windows.ValueSource
      description: "第二個<xref href=&quot;System.Windows.ValueSource&quot;></xref>比較。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果兩個<xref href=&quot;System.Windows.ValueSource&quot;></xref>執行個體是相等的否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.ValueSource.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ValueSource.op_Inequality(System.Windows.ValueSource,System.Windows.ValueSource)
  id: op_Inequality(System.Windows.ValueSource,System.Windows.ValueSource)
  parent: System.Windows.ValueSource
  langs:
  - csharp
  name: op_Inequality(ValueSource,ValueSource)
  nameWithType: ValueSource.op_Inequality(ValueSource,ValueSource)
  fullName: System.Windows.ValueSource.op_Inequality(ValueSource,ValueSource)
  type: Operator
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "判斷兩個<xref href=&quot;System.Windows.ValueSource&quot;></xref>執行個體沒有相同的值。"
  remarks: "這個實作會呼叫<xref:System.Windows.ValueSource.Equals%2A>，傳回其否定和支援根據<xref:System.Windows.ValueSource>.</xref:System.Windows.ValueSource>的所有屬性的值相等</xref:System.Windows.ValueSource.Equals%2A>"
  syntax:
    content: public static bool op_Inequality (System.Windows.ValueSource vs1, System.Windows.ValueSource vs2);
    parameters:
    - id: vs1
      type: System.Windows.ValueSource
      description: "第一個<xref href=&quot;System.Windows.ValueSource&quot;></xref>比較。"
    - id: vs2
      type: System.Windows.ValueSource
      description: "第二個<xref href=&quot;System.Windows.ValueSource&quot;></xref>比較。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果兩個<xref href=&quot;System.Windows.ValueSource&quot;></xref>執行個體不相等，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.ValueSource.op_Inequality*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.Windows.ValueSource.BaseValueSource
  parent: System.Windows.ValueSource
  isExternal: false
  name: BaseValueSource
  nameWithType: ValueSource.BaseValueSource
  fullName: System.Windows.ValueSource.BaseValueSource
- uid: System.Windows.BaseValueSource
  parent: System.Windows
  isExternal: false
  name: BaseValueSource
  nameWithType: BaseValueSource
  fullName: System.Windows.BaseValueSource
- uid: System.Windows.ValueSource.Equals(System.Object)
  parent: System.Windows.ValueSource
  isExternal: false
  name: Equals(Object)
  nameWithType: ValueSource.Equals(Object)
  fullName: System.Windows.ValueSource.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.ValueSource.GetHashCode
  parent: System.Windows.ValueSource
  isExternal: false
  name: GetHashCode()
  nameWithType: ValueSource.GetHashCode()
  fullName: System.Windows.ValueSource.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.ValueSource.IsAnimated
  parent: System.Windows.ValueSource
  isExternal: false
  name: IsAnimated
  nameWithType: ValueSource.IsAnimated
  fullName: System.Windows.ValueSource.IsAnimated
- uid: System.Windows.ValueSource.IsCoerced
  parent: System.Windows.ValueSource
  isExternal: false
  name: IsCoerced
  nameWithType: ValueSource.IsCoerced
  fullName: System.Windows.ValueSource.IsCoerced
- uid: System.Windows.ValueSource.IsCurrent
  parent: System.Windows.ValueSource
  isExternal: false
  name: IsCurrent
  nameWithType: ValueSource.IsCurrent
  fullName: System.Windows.ValueSource.IsCurrent
- uid: System.Windows.ValueSource.IsExpression
  parent: System.Windows.ValueSource
  isExternal: false
  name: IsExpression
  nameWithType: ValueSource.IsExpression
  fullName: System.Windows.ValueSource.IsExpression
- uid: System.Windows.ValueSource.op_Equality(System.Windows.ValueSource,System.Windows.ValueSource)
  parent: System.Windows.ValueSource
  isExternal: false
  name: op_Equality(ValueSource,ValueSource)
  nameWithType: ValueSource.op_Equality(ValueSource,ValueSource)
  fullName: System.Windows.ValueSource.op_Equality(ValueSource,ValueSource)
- uid: System.Windows.ValueSource
  parent: System.Windows
  isExternal: false
  name: ValueSource
  nameWithType: ValueSource
  fullName: System.Windows.ValueSource
- uid: System.Windows.ValueSource.op_Inequality(System.Windows.ValueSource,System.Windows.ValueSource)
  parent: System.Windows.ValueSource
  isExternal: false
  name: op_Inequality(ValueSource,ValueSource)
  nameWithType: ValueSource.op_Inequality(ValueSource,ValueSource)
  fullName: System.Windows.ValueSource.op_Inequality(ValueSource,ValueSource)
- uid: System.Windows.ValueSource.BaseValueSource*
  parent: System.Windows.ValueSource
  isExternal: false
  name: BaseValueSource
  nameWithType: ValueSource.BaseValueSource
- uid: System.Windows.ValueSource.Equals*
  parent: System.Windows.ValueSource
  isExternal: false
  name: Equals
  nameWithType: ValueSource.Equals
- uid: System.Windows.ValueSource.GetHashCode*
  parent: System.Windows.ValueSource
  isExternal: false
  name: GetHashCode
  nameWithType: ValueSource.GetHashCode
- uid: System.Windows.ValueSource.IsAnimated*
  parent: System.Windows.ValueSource
  isExternal: false
  name: IsAnimated
  nameWithType: ValueSource.IsAnimated
- uid: System.Windows.ValueSource.IsCoerced*
  parent: System.Windows.ValueSource
  isExternal: false
  name: IsCoerced
  nameWithType: ValueSource.IsCoerced
- uid: System.Windows.ValueSource.IsCurrent*
  parent: System.Windows.ValueSource
  isExternal: false
  name: IsCurrent
  nameWithType: ValueSource.IsCurrent
- uid: System.Windows.ValueSource.IsExpression*
  parent: System.Windows.ValueSource
  isExternal: false
  name: IsExpression
  nameWithType: ValueSource.IsExpression
- uid: System.Windows.ValueSource.op_Equality*
  parent: System.Windows.ValueSource
  isExternal: false
  name: op_Equality
  nameWithType: ValueSource.op_Equality
- uid: System.Windows.ValueSource.op_Inequality*
  parent: System.Windows.ValueSource
  isExternal: false
  name: op_Inequality
  nameWithType: ValueSource.op_Inequality
