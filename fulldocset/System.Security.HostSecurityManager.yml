### YamlMime:ManagedReference
items:
- uid: System.Security.HostSecurityManager
  id: HostSecurityManager
  children:
  - System.Security.HostSecurityManager.#ctor
  - System.Security.HostSecurityManager.DetermineApplicationTrust(System.Security.Policy.Evidence,System.Security.Policy.Evidence,System.Security.Policy.TrustManagerContext)
  - System.Security.HostSecurityManager.DomainPolicy
  - System.Security.HostSecurityManager.Flags
  - System.Security.HostSecurityManager.GenerateAppDomainEvidence(System.Type)
  - System.Security.HostSecurityManager.GenerateAssemblyEvidence(System.Type,System.Reflection.Assembly)
  - System.Security.HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes
  - System.Security.HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes(System.Reflection.Assembly)
  - System.Security.HostSecurityManager.ProvideAppDomainEvidence(System.Security.Policy.Evidence)
  - System.Security.HostSecurityManager.ProvideAssemblyEvidence(System.Reflection.Assembly,System.Security.Policy.Evidence)
  - System.Security.HostSecurityManager.ResolvePolicy(System.Security.Policy.Evidence)
  langs:
  - csharp
  name: HostSecurityManager
  nameWithType: HostSecurityManager
  fullName: System.Security.HostSecurityManager
  type: Class
  summary: "允許的控制及自訂的應用程式定義域的安全性行為。"
  remarks: "當您建立新的<xref:System.AppDomain>、 common language runtime 會查詢<xref:System.AppDomainManager>HostSecurityManager，其中在安全性決策<xref:System.AppDomain>。</xref:System.AppDomain>參與是否存在</xref:System.AppDomainManager></xref:System.AppDomain>  主機提供者應該實作繼承自 HostSecurityManager 類別主機安全性管理員。"
  example:
  - "The following example shows a very simple implementation of a HostSecurityManager.  \n  \n [!code-cs[System.Security.HostSecurityManager#1](~/add/codesnippet/csharp/t-system.security.hostse_1.cs)]\n [!code-vb[System.Security.HostSecurityManager#1](~/add/codesnippet/visualbasic/t-system.security.hostse_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      [System.Security.SecurityCritical]

      public class HostSecurityManager
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.HostSecurityManager.#ctor
  id: '#ctor'
  parent: System.Security.HostSecurityManager
  langs:
  - csharp
  name: HostSecurityManager()
  nameWithType: HostSecurityManager.HostSecurityManager()
  fullName: System.Security.HostSecurityManager.HostSecurityManager()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "初始化的新執行個體<xref href=&quot;System.Security.HostSecurityManager&quot;></xref>類別。"
  syntax:
    content: public HostSecurityManager ();
    parameters: []
  overload: System.Security.HostSecurityManager.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.HostSecurityManager.DetermineApplicationTrust(System.Security.Policy.Evidence,System.Security.Policy.Evidence,System.Security.Policy.TrustManagerContext)
  id: DetermineApplicationTrust(System.Security.Policy.Evidence,System.Security.Policy.Evidence,System.Security.Policy.TrustManagerContext)
  parent: System.Security.HostSecurityManager
  langs:
  - csharp
  name: DetermineApplicationTrust(Evidence,Evidence,TrustManagerContext)
  nameWithType: HostSecurityManager.DetermineApplicationTrust(Evidence,Evidence,TrustManagerContext)
  fullName: System.Security.HostSecurityManager.DetermineApplicationTrust(Evidence,Evidence,TrustManagerContext)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "決定是否應該執行的應用程式。"
  remarks: "在衍生類別可以覆寫這個方法。 基底實作會呼叫應用程式安全性管理員，以便判斷是否應該執行的應用程式。       基底實作不會使用啟動項辨識項。 不過，覆寫的實作無法使用啟動項辨識項來決定嘗試啟動應用程式的應用程式定義域的安全性辨識項。"
  example:
  - "The following example shows how to override the DetermineApplicationTrust method for a custom host security manager. This example is part of a larger example provided for the <xref:System.Security.HostSecurityManager> class.  \n  \n [!code-cs[System.Security.HostSecurityManager#3](~/add/codesnippet/csharp/c64c31c7-d035-4489-84b0-_1.cs)]\n [!code-vb[System.Security.HostSecurityManager#3](~/add/codesnippet/visualbasic/c64c31c7-d035-4489-84b0-_1.vb)]"
  syntax:
    content: public virtual System.Security.Policy.ApplicationTrust DetermineApplicationTrust (System.Security.Policy.Evidence applicationEvidence, System.Security.Policy.Evidence activatorEvidence, System.Security.Policy.TrustManagerContext context);
    parameters:
    - id: applicationEvidence
      type: System.Security.Policy.Evidence
      description: "啟動應用程式辨識項。"
    - id: activatorEvidence
      type: System.Security.Policy.Evidence
      description: "（選擇性） 啟動應用程式定義域的證據。"
    - id: context
      type: System.Security.Policy.TrustManagerContext
      description: "信任的內容。"
    return:
      type: System.Security.Policy.ApplicationTrust
      description: "包含有關應用程式的信任資訊的物件。"
  overload: System.Security.HostSecurityManager.DetermineApplicationTrust*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>applicationEvidence</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<xref href=&quot;System.Runtime.Hosting.ActivationArguments&quot;> </xref>應用程式辨識項中找不到物件。       -或-<xref:System.Runtime.Hosting.ActivationArguments.ActivationContext*>屬性中啟用引數是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。</xref:System.Runtime.Hosting.ActivationArguments.ActivationContext*>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref href=&quot;System.Security.Policy.ApplicationTrust&quot;> </xref>授與集未包含設定所指定的最小要求<xref href=&quot;System.ActivationContext&quot;> </xref>。"
  platform:
  - net462
- uid: System.Security.HostSecurityManager.DomainPolicy
  id: DomainPolicy
  parent: System.Security.HostSecurityManager
  langs:
  - csharp
  name: DomainPolicy
  nameWithType: HostSecurityManager.DomainPolicy
  fullName: System.Security.HostSecurityManager.DomainPolicy
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "當在衍生類別中覆寫時，取得目前應用程式定義域的安全性原則。"
  remarks: "這個屬性可以在衍生類別中被覆寫。 基底實作一律會傳回`null`。       這個屬性會在呼叫<xref:System.AppDomain>建立時間。</xref:System.AppDomain> 它可讓主機提供目前<xref:System.AppDomain>.</xref:System.AppDomain>原則  原則層級包含下列項目:-一組程式碼群組會組織成單一的根樹狀結構。      -一組具名使用權限集合所參考的指定權限授與程式碼群組所屬的程式碼的程式碼群組。      的完全信任組件清單。      > [!IMPORTANT] > 看到的繼承者注意事項<xref:System.Security.HostSecurityManager>重要實作資訊的類別。</xref:System.Security.HostSecurityManager>"
  syntax:
    content: public virtual System.Security.Policy.PolicyLevel DomainPolicy { get; }
    return:
      type: System.Security.Policy.PolicyLevel
      description: "目前的應用程式定義域的安全性原則。 預設值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Security.HostSecurityManager.DomainPolicy*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "這個方法會使用程式碼存取安全性 (CAS) 原則，也就是過時[!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)]。 若要啟用 CAS 原則的相容性與舊版.NET Framework，請使用[ &lt;legacyCasPolicy&gt;元素](../Topic/%3CNetFx40_LegacySecurityPolicy%3E%20Element.md)。"
  platform:
  - net462
- uid: System.Security.HostSecurityManager.Flags
  id: Flags
  parent: System.Security.HostSecurityManager
  langs:
  - csharp
  name: Flags
  nameWithType: HostSecurityManager.Flags
  fullName: System.Security.HostSecurityManager.Flags
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "取得代表主機考量的安全性原則元件的旗標。"
  remarks: "這個屬性可以在衍生類別中被覆寫。 基底實作一律會傳回<xref:System.Security.HostSecurityManagerOptions>.</xref:System.Security.HostSecurityManagerOptions>       在衍生的主應用程式可以變更的值，這個屬性的子集時<xref:System.Security.HostSecurityManagerOptions>感興趣。</xref:System.Security.HostSecurityManagerOptions>  可能的子集包括 none、 拒絕的集合，原則層級和組件辨識項。"
  example:
  - "The following example shows how to override the Flags property for a custom host security manager. This example is part of a larger example provided for the <xref:System.Security.HostSecurityManager> class.  \n  \n [!code-cs[System.Security.HostSecurityManager#2](~/add/codesnippet/csharp/p-system.security.hostse_1.cs)]\n [!code-vb[System.Security.HostSecurityManager#2](~/add/codesnippet/visualbasic/p-system.security.hostse_1.vb)]"
  syntax:
    content: public virtual System.Security.HostSecurityManagerOptions Flags { get; }
    return:
      type: System.Security.HostSecurityManagerOptions
      description: "其中一個列舉值，指定安全性原則元件。 預設值是<xref href=&quot;System.Security.HostSecurityManagerOptions&quot;> </xref>。"
  overload: System.Security.HostSecurityManager.Flags*
  exceptions: []
  platform:
  - net462
- uid: System.Security.HostSecurityManager.GenerateAppDomainEvidence(System.Type)
  id: GenerateAppDomainEvidence(System.Type)
  parent: System.Security.HostSecurityManager
  langs:
  - csharp
  name: GenerateAppDomainEvidence(Type)
  nameWithType: HostSecurityManager.GenerateAppDomainEvidence(Type)
  fullName: System.Security.HostSecurityManager.GenerateAppDomainEvidence(Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "要求的應用程式定義域特定的辨識項型別。"
  remarks: "在衍生類別可以覆寫這個方法。 基底實作會傳回`null`。       Common language runtime 時呼叫這個方法目前<xref:System.AppDomain>.</xref:System.AppDomain>需要指定類型的辨識項 傳回的值做為主機提供的辨識項，而且會儲存在<xref:System.AppDomain.Evidence%2A>集合<xref:System.AppDomain.CurrentDomain%2A>屬性。</xref:System.AppDomain.CurrentDomain%2A> </xref:System.AppDomain.Evidence%2A> 您可以使用<xref:System.Security.Policy.Evidence.GetAssemblyEvidence%2A?displayProperty=fullName>方法，以從集合中取得所產生的辨識項。</xref:System.Security.Policy.Evidence.GetAssemblyEvidence%2A?displayProperty=fullName>       若要取得這個方法的回呼，主機必須指定<xref:System.Security.HostSecurityManagerOptions>加上旗標<xref:System.Security.HostSecurityManager.Flags%2A>屬性。</xref:System.Security.HostSecurityManager.Flags%2A> </xref:System.Security.HostSecurityManagerOptions>       產生的辨識項的這個方法可讓主機的辨識項產生延遲<xref:System.AppDomain>之前需要辨識項。</xref:System.AppDomain> 在.NET Framework 3.5 版和更早版本中，是為了提供<xref:System.AppDomain>在載入時間，藉由覆寫的辨識項<xref:System.Security.HostSecurityManager.ProvideAppDomainEvidence%2A>方法。</xref:System.Security.HostSecurityManager.ProvideAppDomainEvidence%2A> </xref:System.AppDomain> 我們建議您提供辨識項，而不是覆寫<xref:System.Security.HostSecurityManager.ProvideAppDomainEvidence%2A>.</xref:System.Security.HostSecurityManager.ProvideAppDomainEvidence%2A>使用 GenerateAppDomainEvidence       GenerateAppDomainEvidence 呼叫該方法傳回成只會針對類型的主機具有指定的覆寫中的辨識項<xref:System.Security.HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes%2A>方法。</xref:System.Security.HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes%2A>       傳回值為`null`指出主機無法產生此特定類型的辨識項。"
  example:
  - "The following example shows how to override the <xref:System.Security.HostSecurityManager.ProvideAppDomainEvidence%2A> method for a custom host security manager. This example is part of a larger example provided for the <xref:System.Security.HostSecurityManager> class.  \n  \n [!code-cs[System.Security.HostSecurityManager#6](~/add/codesnippet/csharp/m-system.security.hostse_1.cs)]\n [!code-vb[System.Security.HostSecurityManager#6](~/add/codesnippet/visualbasic/m-system.security.hostse_1.vb)]"
  syntax:
    content: public virtual System.Security.Policy.EvidenceBase GenerateAppDomainEvidence (Type evidenceType);
    parameters:
    - id: evidenceType
      type: System.Type
      description: "辨識項型別。"
    return:
      type: System.Security.Policy.EvidenceBase
      description: "要求的應用程式定義域的辨識項。"
  overload: System.Security.HostSecurityManager.GenerateAppDomainEvidence*
  exceptions: []
  platform:
  - net462
- uid: System.Security.HostSecurityManager.GenerateAssemblyEvidence(System.Type,System.Reflection.Assembly)
  id: GenerateAssemblyEvidence(System.Type,System.Reflection.Assembly)
  parent: System.Security.HostSecurityManager
  langs:
  - csharp
  name: GenerateAssemblyEvidence(Type,Assembly)
  nameWithType: HostSecurityManager.GenerateAssemblyEvidence(Type,Assembly)
  fullName: System.Security.HostSecurityManager.GenerateAssemblyEvidence(Type,Assembly)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "組件要求特定的辨識項型別。"
  remarks: "在衍生類別可以覆寫這個方法。 基底實作會傳回`null`。       指定類型的辨識項需要目前組件時，common language runtime 會呼叫這個方法。 傳回的值做為主機提供的辨識項，而且會儲存在<xref:System.Reflection.Assembly.Evidence%2A>屬性。</xref:System.Reflection.Assembly.Evidence%2A> 您可以使用<xref:System.Security.Policy.Evidence.GetAssemblyEvidence%2A?displayProperty=fullName>方法，以取得產生的辨識項的<xref:System.Reflection.Assembly.Evidence%2A>屬性。</xref:System.Reflection.Assembly.Evidence%2A> </xref:System.Security.Policy.Evidence.GetAssemblyEvidence%2A?displayProperty=fullName>       若要取得這個方法的回呼，主機必須指定<xref:System.Security.HostSecurityManagerOptions>加上旗標<xref:System.Security.HostSecurityManager.Flags%2A>屬性。</xref:System.Security.HostSecurityManager.Flags%2A> </xref:System.Security.HostSecurityManagerOptions>       產生的辨識項的這個方法可讓主機的辨識項產生延遲<xref:System.AppDomain>之前需要辨識項。</xref:System.AppDomain> 在.NET Framework 3.5 和舊版中，是為了提供<xref:System.AppDomain>在載入時間，藉由覆寫的辨識項<xref:System.Security.HostSecurityManager.ProvideAppDomainEvidence%2A>方法。</xref:System.Security.HostSecurityManager.ProvideAppDomainEvidence%2A> </xref:System.AppDomain> 我們建議您提供辨識項，而不是覆寫<xref:System.Security.HostSecurityManager.ProvideAssemblyEvidence%2A>.</xref:System.Security.HostSecurityManager.ProvideAssemblyEvidence%2A>使用 GenerateAssemblyEvidence       GenerateAssemblyEvidence 呼叫該方法傳回成只會針對類型的主機具有指定的覆寫中的辨識項<xref:System.Security.HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes%2A>方法。</xref:System.Security.HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes%2A>       傳回值為`null`指出主機無法產生此特定類型的辨識項。"
  syntax:
    content: public virtual System.Security.Policy.EvidenceBase GenerateAssemblyEvidence (Type evidenceType, System.Reflection.Assembly assembly);
    parameters:
    - id: evidenceType
      type: System.Type
      description: "辨識項型別。"
    - id: assembly
      type: System.Reflection.Assembly
      description: "目標組件。"
    return:
      type: System.Security.Policy.EvidenceBase
      description: "要求的組件的辨識項。"
  overload: System.Security.HostSecurityManager.GenerateAssemblyEvidence*
  exceptions: []
  platform:
  - net462
- uid: System.Security.HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes
  id: GetHostSuppliedAppDomainEvidenceTypes
  parent: System.Security.HostSecurityManager
  langs:
  - csharp
  name: GetHostSuppliedAppDomainEvidenceTypes()
  nameWithType: HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes()
  fullName: System.Security.HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "如果要求，請決定主機可以提供應用程式定義域的辨識項型別。"
  remarks: "在衍生類別可以覆寫這個方法。 基底實作會傳回`null`。       這個方法所傳回的型別決定是否<xref:System.Security.HostSecurityManager.GenerateAppDomainEvidence%2A>到回呼叫方法。</xref:System.Security.HostSecurityManager.GenerateAppDomainEvidence%2A> 這份清單中的類型存在並不表示主機必須要能夠產生此辨識項型別，但它可能是能夠。 基於這個原因，所以最好先過度指定，而不是在-指定這個清單中的類型。"
  syntax:
    content: public virtual Type[] GetHostSuppliedAppDomainEvidenceTypes ();
    parameters: []
    return:
      type: System.Type[]
      description: "陣列的辨識項型別。"
  overload: System.Security.HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes*
  exceptions: []
  platform:
  - net462
- uid: System.Security.HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes(System.Reflection.Assembly)
  id: GetHostSuppliedAssemblyEvidenceTypes(System.Reflection.Assembly)
  parent: System.Security.HostSecurityManager
  langs:
  - csharp
  name: GetHostSuppliedAssemblyEvidenceTypes(Assembly)
  nameWithType: HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes(Assembly)
  fullName: System.Security.HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes(Assembly)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "如果要求，請判斷主應用程式可以為組件，提供的辨識項型別。"
  remarks: "在衍生類別可以覆寫這個方法。 基底實作會傳回`null`。       這個方法所傳回的型別決定是否<xref:System.Security.HostSecurityManager.GenerateAssemblyEvidence%2A>到回呼叫方法。</xref:System.Security.HostSecurityManager.GenerateAssemblyEvidence%2A> 這份清單中的類型存在並不表示主機必須要能夠產生此辨識項型別，但它可能是能夠。 基於這個原因，所以最好先過度指定，而不是在-指定這個清單中的類型。"
  syntax:
    content: public virtual Type[] GetHostSuppliedAssemblyEvidenceTypes (System.Reflection.Assembly assembly);
    parameters:
    - id: assembly
      type: System.Reflection.Assembly
      description: "目標組件。"
    return:
      type: System.Type[]
      description: "陣列的辨識項型別。"
  overload: System.Security.HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes*
  exceptions: []
  platform:
  - net462
- uid: System.Security.HostSecurityManager.ProvideAppDomainEvidence(System.Security.Policy.Evidence)
  id: ProvideAppDomainEvidence(System.Security.Policy.Evidence)
  parent: System.Security.HostSecurityManager
  langs:
  - csharp
  name: ProvideAppDomainEvidence(Evidence)
  nameWithType: HostSecurityManager.ProvideAppDomainEvidence(Evidence)
  fullName: System.Security.HostSecurityManager.ProvideAppDomainEvidence(Evidence)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "提供應用程式定義域的辨識項載入組件。"
  remarks: "這個方法可以在衍生類別中被覆寫。       這個方法會呼叫每當<xref:System.AppDomain>建立物件。</xref:System.AppDomain> `inputEvidence`參數是從通用語言執行平台計算的辨識項。 主應用程式實作可以選擇擴充或縮減辨識項。 傳回值是要用於應用程式定義域的辨識項。  基底實作一律會傳回做為傳遞的辨識項物件`inputEvidence`參數。      > [!IMPORTANT] > 看到的繼承者注意事項<xref:System.Security.HostSecurityManager>重要實作資訊的類別。</xref:System.Security.HostSecurityManager>"
  syntax:
    content: public virtual System.Security.Policy.Evidence ProvideAppDomainEvidence (System.Security.Policy.Evidence inputEvidence);
    parameters:
    - id: inputEvidence
      type: System.Security.Policy.Evidence
      description: "其他的辨識項，以便加入<xref href=&quot;System.AppDomain&quot;></xref>辨識項。"
    return:
      type: System.Security.Policy.Evidence
      description: "辨識項，以便用於<xref href=&quot;System.AppDomain&quot;> </xref>。"
  overload: System.Security.HostSecurityManager.ProvideAppDomainEvidence*
  exceptions: []
  platform:
  - net462
- uid: System.Security.HostSecurityManager.ProvideAssemblyEvidence(System.Reflection.Assembly,System.Security.Policy.Evidence)
  id: ProvideAssemblyEvidence(System.Reflection.Assembly,System.Security.Policy.Evidence)
  parent: System.Security.HostSecurityManager
  langs:
  - csharp
  name: ProvideAssemblyEvidence(Assembly,Evidence)
  nameWithType: HostSecurityManager.ProvideAssemblyEvidence(Assembly,Evidence)
  fullName: System.Security.HostSecurityManager.ProvideAssemblyEvidence(Assembly,Evidence)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "提供載入的組件的組件辨識項。"
  remarks: "這個方法可以在衍生類別中被覆寫。       每當組件已載入，以隱含或明確方式，就會呼叫這個方法。 傳入的參數是正在載入的組件和計算的辨識項，從 common language runtime。 主應用程式實作可以選擇擴充或縮減辨識項。 傳回值是要用於組件的辨識項。  基底實作一律會傳回做為傳遞的辨識項物件`inputEvidence`參數。      > [!IMPORTANT] > 看到的繼承者注意事項<xref:System.Security.HostSecurityManager>重要實作資訊的類別。</xref:System.Security.HostSecurityManager>"
  example:
  - "The following example shows how to override the ProvideAssemblyEvidence method for a custom host security manager. This example is part of a larger example provided for the <xref:System.Security.HostSecurityManager> class.  \n  \n [!code-cs[System.Security.HostSecurityManager#5](~/add/codesnippet/csharp/b37483ba-2dfe-4c5d-87e6-_1.cs)]\n [!code-vb[System.Security.HostSecurityManager#5](~/add/codesnippet/visualbasic/b37483ba-2dfe-4c5d-87e6-_1.vb)]"
  syntax:
    content: public virtual System.Security.Policy.Evidence ProvideAssemblyEvidence (System.Reflection.Assembly loadedAssembly, System.Security.Policy.Evidence inputEvidence);
    parameters:
    - id: loadedAssembly
      type: System.Reflection.Assembly
      description: "載入的組件。"
    - id: inputEvidence
      type: System.Security.Policy.Evidence
      description: "其他的辨識項將組件的辨識項。"
    return:
      type: System.Security.Policy.Evidence
      description: "要用於組件的辨識項。"
  overload: System.Security.HostSecurityManager.ProvideAssemblyEvidence*
  exceptions: []
  platform:
  - net462
- uid: System.Security.HostSecurityManager.ResolvePolicy(System.Security.Policy.Evidence)
  id: ResolvePolicy(System.Security.Policy.Evidence)
  parent: System.Security.HostSecurityManager
  langs:
  - csharp
  name: ResolvePolicy(Evidence)
  nameWithType: HostSecurityManager.ResolvePolicy(Evidence)
  fullName: System.Security.HostSecurityManager.ResolvePolicy(Evidence)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "決定授與程式碼的權限以在指定的辨識項。"
  remarks: "這個方法會叫用的安全性原則引擎，提供指定的辨識項。 安全性原則會決定結果。"
  syntax:
    content: public virtual System.Security.PermissionSet ResolvePolicy (System.Security.Policy.Evidence evidence);
    parameters:
    - id: evidence
      type: System.Security.Policy.Evidence
      description: "設定用來評估原則的辨識項。"
    return:
      type: System.Security.PermissionSet
      description: "安全性系統可授與權限集。"
  overload: System.Security.HostSecurityManager.ResolvePolicy*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>evidence</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Security.HostSecurityManager.#ctor
  parent: System.Security.HostSecurityManager
  isExternal: false
  name: HostSecurityManager()
  nameWithType: HostSecurityManager.HostSecurityManager()
  fullName: System.Security.HostSecurityManager.HostSecurityManager()
- uid: System.Security.HostSecurityManager.DetermineApplicationTrust(System.Security.Policy.Evidence,System.Security.Policy.Evidence,System.Security.Policy.TrustManagerContext)
  parent: System.Security.HostSecurityManager
  isExternal: false
  name: DetermineApplicationTrust(Evidence,Evidence,TrustManagerContext)
  nameWithType: HostSecurityManager.DetermineApplicationTrust(Evidence,Evidence,TrustManagerContext)
  fullName: System.Security.HostSecurityManager.DetermineApplicationTrust(Evidence,Evidence,TrustManagerContext)
- uid: System.Security.Policy.ApplicationTrust
  parent: System.Security.Policy
  isExternal: false
  name: ApplicationTrust
  nameWithType: ApplicationTrust
  fullName: System.Security.Policy.ApplicationTrust
- uid: System.Security.Policy.Evidence
  parent: System.Security.Policy
  isExternal: false
  name: Evidence
  nameWithType: Evidence
  fullName: System.Security.Policy.Evidence
- uid: System.Security.Policy.TrustManagerContext
  parent: System.Security.Policy
  isExternal: false
  name: TrustManagerContext
  nameWithType: TrustManagerContext
  fullName: System.Security.Policy.TrustManagerContext
- uid: System.Security.HostSecurityManager.DomainPolicy
  parent: System.Security.HostSecurityManager
  isExternal: false
  name: DomainPolicy
  nameWithType: HostSecurityManager.DomainPolicy
  fullName: System.Security.HostSecurityManager.DomainPolicy
- uid: System.Security.Policy.PolicyLevel
  parent: System.Security.Policy
  isExternal: false
  name: PolicyLevel
  nameWithType: PolicyLevel
  fullName: System.Security.Policy.PolicyLevel
- uid: System.Security.HostSecurityManager.Flags
  parent: System.Security.HostSecurityManager
  isExternal: false
  name: Flags
  nameWithType: HostSecurityManager.Flags
  fullName: System.Security.HostSecurityManager.Flags
- uid: System.Security.HostSecurityManagerOptions
  parent: System.Security
  isExternal: false
  name: HostSecurityManagerOptions
  nameWithType: HostSecurityManagerOptions
  fullName: System.Security.HostSecurityManagerOptions
- uid: System.Security.HostSecurityManager.GenerateAppDomainEvidence(System.Type)
  parent: System.Security.HostSecurityManager
  isExternal: false
  name: GenerateAppDomainEvidence(Type)
  nameWithType: HostSecurityManager.GenerateAppDomainEvidence(Type)
  fullName: System.Security.HostSecurityManager.GenerateAppDomainEvidence(Type)
- uid: System.Security.Policy.EvidenceBase
  parent: System.Security.Policy
  isExternal: false
  name: EvidenceBase
  nameWithType: EvidenceBase
  fullName: System.Security.Policy.EvidenceBase
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Security.HostSecurityManager.GenerateAssemblyEvidence(System.Type,System.Reflection.Assembly)
  parent: System.Security.HostSecurityManager
  isExternal: false
  name: GenerateAssemblyEvidence(Type,Assembly)
  nameWithType: HostSecurityManager.GenerateAssemblyEvidence(Type,Assembly)
  fullName: System.Security.HostSecurityManager.GenerateAssemblyEvidence(Type,Assembly)
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: true
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.Security.HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes
  parent: System.Security.HostSecurityManager
  isExternal: false
  name: GetHostSuppliedAppDomainEvidenceTypes()
  nameWithType: HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes()
  fullName: System.Security.HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes()
- uid: System.Type[]
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type[]
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes(System.Reflection.Assembly)
  parent: System.Security.HostSecurityManager
  isExternal: false
  name: GetHostSuppliedAssemblyEvidenceTypes(Assembly)
  nameWithType: HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes(Assembly)
  fullName: System.Security.HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes(Assembly)
- uid: System.Security.HostSecurityManager.ProvideAppDomainEvidence(System.Security.Policy.Evidence)
  parent: System.Security.HostSecurityManager
  isExternal: false
  name: ProvideAppDomainEvidence(Evidence)
  nameWithType: HostSecurityManager.ProvideAppDomainEvidence(Evidence)
  fullName: System.Security.HostSecurityManager.ProvideAppDomainEvidence(Evidence)
- uid: System.Security.HostSecurityManager.ProvideAssemblyEvidence(System.Reflection.Assembly,System.Security.Policy.Evidence)
  parent: System.Security.HostSecurityManager
  isExternal: false
  name: ProvideAssemblyEvidence(Assembly,Evidence)
  nameWithType: HostSecurityManager.ProvideAssemblyEvidence(Assembly,Evidence)
  fullName: System.Security.HostSecurityManager.ProvideAssemblyEvidence(Assembly,Evidence)
- uid: System.Security.HostSecurityManager.ResolvePolicy(System.Security.Policy.Evidence)
  parent: System.Security.HostSecurityManager
  isExternal: false
  name: ResolvePolicy(Evidence)
  nameWithType: HostSecurityManager.ResolvePolicy(Evidence)
  fullName: System.Security.HostSecurityManager.ResolvePolicy(Evidence)
- uid: System.Security.PermissionSet
  parent: System.Security
  isExternal: false
  name: PermissionSet
  nameWithType: PermissionSet
  fullName: System.Security.PermissionSet
- uid: System.Security.HostSecurityManager.#ctor*
  parent: System.Security.HostSecurityManager
  isExternal: false
  name: HostSecurityManager
  nameWithType: HostSecurityManager.HostSecurityManager
- uid: System.Security.HostSecurityManager.DetermineApplicationTrust*
  parent: System.Security.HostSecurityManager
  isExternal: false
  name: DetermineApplicationTrust
  nameWithType: HostSecurityManager.DetermineApplicationTrust
- uid: System.Security.HostSecurityManager.DomainPolicy*
  parent: System.Security.HostSecurityManager
  isExternal: false
  name: DomainPolicy
  nameWithType: HostSecurityManager.DomainPolicy
- uid: System.Security.HostSecurityManager.Flags*
  parent: System.Security.HostSecurityManager
  isExternal: false
  name: Flags
  nameWithType: HostSecurityManager.Flags
- uid: System.Security.HostSecurityManager.GenerateAppDomainEvidence*
  parent: System.Security.HostSecurityManager
  isExternal: false
  name: GenerateAppDomainEvidence
  nameWithType: HostSecurityManager.GenerateAppDomainEvidence
- uid: System.Security.HostSecurityManager.GenerateAssemblyEvidence*
  parent: System.Security.HostSecurityManager
  isExternal: false
  name: GenerateAssemblyEvidence
  nameWithType: HostSecurityManager.GenerateAssemblyEvidence
- uid: System.Security.HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes*
  parent: System.Security.HostSecurityManager
  isExternal: false
  name: GetHostSuppliedAppDomainEvidenceTypes
  nameWithType: HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes
- uid: System.Security.HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes*
  parent: System.Security.HostSecurityManager
  isExternal: false
  name: GetHostSuppliedAssemblyEvidenceTypes
  nameWithType: HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes
- uid: System.Security.HostSecurityManager.ProvideAppDomainEvidence*
  parent: System.Security.HostSecurityManager
  isExternal: false
  name: ProvideAppDomainEvidence
  nameWithType: HostSecurityManager.ProvideAppDomainEvidence
- uid: System.Security.HostSecurityManager.ProvideAssemblyEvidence*
  parent: System.Security.HostSecurityManager
  isExternal: false
  name: ProvideAssemblyEvidence
  nameWithType: HostSecurityManager.ProvideAssemblyEvidence
- uid: System.Security.HostSecurityManager.ResolvePolicy*
  parent: System.Security.HostSecurityManager
  isExternal: false
  name: ResolvePolicy
  nameWithType: HostSecurityManager.ResolvePolicy
