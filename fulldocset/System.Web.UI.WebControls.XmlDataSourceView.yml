### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.XmlDataSourceView
  id: XmlDataSourceView
  children:
  - System.Web.UI.WebControls.XmlDataSourceView.#ctor(System.Web.UI.WebControls.XmlDataSource,System.String)
  - System.Web.UI.WebControls.XmlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)
  - System.Web.UI.WebControls.XmlDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)
  langs:
  - csharp
  name: XmlDataSourceView
  nameWithType: XmlDataSourceView
  fullName: System.Web.UI.WebControls.XmlDataSourceView
  type: Class
  summary: "表示表格式資料來源檢視的 XML 資料上<xref href=&quot;System.Web.UI.WebControls.XmlDataSource&quot;></xref>控制項。"
  remarks: "<xref:System.Web.UI.WebControls.XmlDataSource>控制項可以呈現其基礎資料格式表格式和階層式 Web 伺服器控制項的繫結到它。</xref:System.Web.UI.WebControls.XmlDataSource> 這類控制項<xref:System.Web.UI.WebControls.GridView>或<xref:System.Web.UI.WebControls.DropDownList>使用<xref:System.Web.UI.WebControls.XmlDataSource>繫結至 XML 資料，並加以呈現在清單或表格式表單中，而控制項衍生自<xref:System.Web.UI.WebControls.HierarchicalDataBoundControl>類別，例如<xref:System.Web.UI.WebControls.TreeView>、 繫結至 XML 資料，並以階層形式呈現。</xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.HierarchicalDataBoundControl> </xref:System.Web.UI.WebControls.XmlDataSource> </xref:System.Web.UI.WebControls.DropDownList> </xref:System.Web.UI.WebControls.GridView>       <xref:System.Web.UI.WebControls.XmlDataSource>建立每種檢視類型，在內部執行不同的程式碼路徑。</xref:System.Web.UI.WebControls.XmlDataSource> 如果<xref:System.Web.UI.IDataSource.GetView%2A><xref:System.Web.UI.WebControls.XmlDataSource>XmlDataSourceView 由<xref:System.Web.UI.WebControls.XmlDataSource>.</xref:System.Web.UI.WebControls.XmlDataSource> 、</xref:System.Web.UI.WebControls.XmlDataSource>呼叫方法</xref:System.Web.UI.IDataSource.GetView%2A> 如果<xref:System.Web.UI.WebControls.XmlDataSource.GetHierarchicalView%2A>呼叫方法時，<xref:System.Web.UI.WebControls.XmlHierarchicalDataSourceView>建立。</xref:System.Web.UI.WebControls.XmlHierarchicalDataSourceView> </xref:System.Web.UI.WebControls.XmlDataSource.GetHierarchicalView%2A> XmlDataSourceView 類別係衍生自的 Web 伺服器控制項的<xref:System.Web.UI.WebControls.DataBoundControl>和繫結至清單和表格式資料，而<xref:System.Web.UI.WebControls.XmlHierarchicalDataSourceView>係衍生自的 Web 伺服器控制項的<xref:System.Web.UI.WebControls.HierarchicalDataBoundControl>並繫結至階層式資料。</xref:System.Web.UI.WebControls.HierarchicalDataBoundControl> </xref:System.Web.UI.WebControls.XmlHierarchicalDataSourceView> </xref:System.Web.UI.WebControls.DataBoundControl> 就內部而言，資料繫結控制項的所有方法都呼叫`Select`方法會傳回任何資料來源檢視物件。       如同所有<xref:System.Web.UI.DataSourceView>協助程式物件，XmlDataSourceView 定義資料來源可以使用基礎資料執行的作業。</xref:System.Web.UI.DataSourceView> 因為 XmlDataSourceView 類別只覆寫<xref:System.Web.UI.HierarchicalDataSourceView.Select%2A>方法]、 [相關聯<xref:System.Web.UI.WebControls.XmlDataSource>控制項不支援更新、 插入或刪除作業。</xref:System.Web.UI.WebControls.XmlDataSource> </xref:System.Web.UI.HierarchicalDataSourceView.Select%2A> 因為 XmlDataSourceView 類別已密封，您無法擴充 XmlDataSourceView 類別加入這項功能，但您也可以衍生的資料來源控制項<xref:System.Web.UI.WebControls.XmlDataSource>和檢視從<xref:System.Web.UI.DataSourceView>如果您需要額外的功能。</xref:System.Web.UI.DataSourceView> </xref:System.Web.UI.WebControls.XmlDataSource>"
  syntax:
    content: 'public sealed class XmlDataSourceView : System.Web.UI.DataSourceView'
  inheritance:
  - System.Object
  - System.Web.UI.DataSourceView
  implements: []
  inheritedMembers:
  - System.Web.UI.DataSourceView.CanDelete
  - System.Web.UI.DataSourceView.CanExecute(System.String)
  - System.Web.UI.DataSourceView.CanInsert
  - System.Web.UI.DataSourceView.CanPage
  - System.Web.UI.DataSourceView.CanRetrieveTotalRowCount
  - System.Web.UI.DataSourceView.CanSort
  - System.Web.UI.DataSourceView.CanUpdate
  - System.Web.UI.DataSourceView.DataSourceViewChanged
  - System.Web.UI.DataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  - System.Web.UI.DataSourceView.Events
  - System.Web.UI.DataSourceView.ExecuteCommand(System.String,System.Collections.IDictionary,System.Collections.IDictionary)
  - System.Web.UI.DataSourceView.ExecuteCommand(System.String,System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  - System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)
  - System.Web.UI.DataSourceView.ExecuteInsert(System.Collections.IDictionary)
  - System.Web.UI.DataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  - System.Web.UI.DataSourceView.Insert(System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  - System.Web.UI.DataSourceView.Name
  - System.Web.UI.DataSourceView.OnDataSourceViewChanged(System.EventArgs)
  - System.Web.UI.DataSourceView.RaiseUnsupportedCapabilityError(System.Web.UI.DataSourceCapabilities)
  - System.Web.UI.DataSourceView.Select(System.Web.UI.DataSourceSelectArguments,System.Web.UI.DataSourceViewSelectCallback)
  - System.Web.UI.DataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  platform:
  - net462
- uid: System.Web.UI.WebControls.XmlDataSourceView.#ctor(System.Web.UI.WebControls.XmlDataSource,System.String)
  id: '#ctor(System.Web.UI.WebControls.XmlDataSource,System.String)'
  parent: System.Web.UI.WebControls.XmlDataSourceView
  langs:
  - csharp
  name: XmlDataSourceView(XmlDataSource,String)
  nameWithType: XmlDataSourceView.XmlDataSourceView(XmlDataSource,String)
  fullName: System.Web.UI.WebControls.XmlDataSourceView.XmlDataSourceView(XmlDataSource,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "初始化新的具名執行個體<xref href=&quot;System.Web.UI.WebControls.XmlDataSourceView&quot;></xref>類別，並將相關聯指定<xref href=&quot;System.Web.UI.WebControls.XmlDataSource&quot;></xref>與它。"
  syntax:
    content: public XmlDataSourceView (System.Web.UI.WebControls.XmlDataSource owner, string name);
    parameters:
    - id: owner
      type: System.Web.UI.WebControls.XmlDataSource
      description: "<xref href=&quot;System.Web.UI.WebControls.XmlDataSource&quot;> </xref> ， <xref href=&quot;System.Web.UI.WebControls.XmlDataSourceView&quot;> </xref>相關聯。"
    - id: name
      type: System.String
      description: "檢視的名稱。"
  overload: System.Web.UI.WebControls.XmlDataSourceView.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.XmlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)
  id: ExecuteSelect(System.Web.UI.DataSourceSelectArguments)
  parent: System.Web.UI.WebControls.XmlDataSourceView
  langs:
  - csharp
  name: ExecuteSelect(DataSourceSelectArguments)
  nameWithType: XmlDataSourceView.ExecuteSelect(DataSourceSelectArguments)
  fullName: System.Web.UI.WebControls.XmlDataSourceView.ExecuteSelect(DataSourceSelectArguments)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  syntax:
    content: protected override System.Collections.IEnumerable ExecuteSelect (System.Web.UI.DataSourceSelectArguments arguments);
    parameters:
    - id: arguments
      type: System.Web.UI.DataSourceSelectArguments
      description: "即將加入。"
    return:
      type: System.Collections.IEnumerable
      description: "即將加入。"
  overload: System.Web.UI.WebControls.XmlDataSourceView.ExecuteSelect*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.XmlDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)
  id: Select(System.Web.UI.DataSourceSelectArguments)
  parent: System.Web.UI.WebControls.XmlDataSourceView
  langs:
  - csharp
  name: Select(DataSourceSelectArguments)
  nameWithType: XmlDataSourceView.Select(DataSourceSelectArguments)
  fullName: System.Web.UI.WebControls.XmlDataSourceView.Select(DataSourceSelectArguments)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "擷取基礎 XML 的資料列的清單。"
  syntax:
    content: public System.Collections.IEnumerable Select (System.Web.UI.DataSourceSelectArguments arguments);
    parameters:
    - id: arguments
      type: System.Web.UI.DataSourceSelectArguments
      description: "A <xref href=&quot;System.Web.UI.DataSourceSelectArguments&quot;> </xref>物件，用來要求擷取基本的資料以外的資料作業。"
    return:
      type: System.Collections.IEnumerable
      description: "<xref:System.Collections.IEnumerable>資料項目的集合。</xref:System.Collections.IEnumerable>"
  overload: System.Web.UI.WebControls.XmlDataSourceView.Select*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.DataSourceView
  isExternal: false
  name: System.Web.UI.DataSourceView
- uid: System.Web.UI.WebControls.XmlDataSourceView.#ctor(System.Web.UI.WebControls.XmlDataSource,System.String)
  parent: System.Web.UI.WebControls.XmlDataSourceView
  isExternal: false
  name: XmlDataSourceView(XmlDataSource,String)
  nameWithType: XmlDataSourceView.XmlDataSourceView(XmlDataSource,String)
  fullName: System.Web.UI.WebControls.XmlDataSourceView.XmlDataSourceView(XmlDataSource,String)
- uid: System.Web.UI.WebControls.XmlDataSource
  parent: System.Web.UI.WebControls
  isExternal: false
  name: XmlDataSource
  nameWithType: XmlDataSource
  fullName: System.Web.UI.WebControls.XmlDataSource
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.XmlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)
  parent: System.Web.UI.WebControls.XmlDataSourceView
  isExternal: false
  name: ExecuteSelect(DataSourceSelectArguments)
  nameWithType: XmlDataSourceView.ExecuteSelect(DataSourceSelectArguments)
  fullName: System.Web.UI.WebControls.XmlDataSourceView.ExecuteSelect(DataSourceSelectArguments)
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Web.UI.DataSourceSelectArguments
  parent: System.Web.UI
  isExternal: false
  name: DataSourceSelectArguments
  nameWithType: DataSourceSelectArguments
  fullName: System.Web.UI.DataSourceSelectArguments
- uid: System.Web.UI.WebControls.XmlDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)
  parent: System.Web.UI.WebControls.XmlDataSourceView
  isExternal: false
  name: Select(DataSourceSelectArguments)
  nameWithType: XmlDataSourceView.Select(DataSourceSelectArguments)
  fullName: System.Web.UI.WebControls.XmlDataSourceView.Select(DataSourceSelectArguments)
- uid: System.Web.UI.WebControls.XmlDataSourceView.#ctor*
  parent: System.Web.UI.WebControls.XmlDataSourceView
  isExternal: false
  name: XmlDataSourceView
  nameWithType: XmlDataSourceView.XmlDataSourceView
- uid: System.Web.UI.WebControls.XmlDataSourceView.ExecuteSelect*
  parent: System.Web.UI.WebControls.XmlDataSourceView
  isExternal: false
  name: ExecuteSelect
  nameWithType: XmlDataSourceView.ExecuteSelect
- uid: System.Web.UI.WebControls.XmlDataSourceView.Select*
  parent: System.Web.UI.WebControls.XmlDataSourceView
  isExternal: false
  name: Select
  nameWithType: XmlDataSourceView.Select
