### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.RSA
  id: RSA
  children:
  - System.Security.Cryptography.RSA.#ctor
  - System.Security.Cryptography.RSA.Create
  - System.Security.Cryptography.RSA.Create(System.String)
  - System.Security.Cryptography.RSA.Decrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)
  - System.Security.Cryptography.RSA.DecryptValue(System.Byte[])
  - System.Security.Cryptography.RSA.Encrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)
  - System.Security.Cryptography.RSA.EncryptValue(System.Byte[])
  - System.Security.Cryptography.RSA.ExportParameters(System.Boolean)
  - System.Security.Cryptography.RSA.FromXmlString(System.String)
  - System.Security.Cryptography.RSA.HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)
  - System.Security.Cryptography.RSA.HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)
  - System.Security.Cryptography.RSA.ImportParameters(System.Security.Cryptography.RSAParameters)
  - System.Security.Cryptography.RSA.KeyExchangeAlgorithm
  - System.Security.Cryptography.RSA.SignatureAlgorithm
  - System.Security.Cryptography.RSA.SignData(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  - System.Security.Cryptography.RSA.SignData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  - System.Security.Cryptography.RSA.SignData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  - System.Security.Cryptography.RSA.SignHash(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  - System.Security.Cryptography.RSA.ToXmlString(System.Boolean)
  - System.Security.Cryptography.RSA.VerifyData(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  - System.Security.Cryptography.RSA.VerifyData(System.IO.Stream,System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  - System.Security.Cryptography.RSA.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  - System.Security.Cryptography.RSA.VerifyHash(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  langs:
  - csharp
  name: RSA
  nameWithType: RSA
  fullName: System.Security.Cryptography.RSA
  type: Class
  summary: "表示 RSA 演算法的所有實作都繼承的基底類別。"
  remarks: "擴充此類別證明您實作`RSA`索引鍵。 這是必要的任何提供新的開發人員`RSA`索引鍵的實作。       這個類別的唯一目的是做為識別的階層成員`RSA`演算法。       <xref:System.Security.Cryptography.RSACryptoServiceProvider>8 位元為增量來支援從 384 位元到 16384 位元的金鑰長度，如果您有 Microsoft Enhanced Cryptographic Provider 安裝。</xref:System.Security.Cryptography.RSACryptoServiceProvider>  如果您有 Microsoft 基礎密碼編譯提供者安裝，它可以支援增量為 8 位元的金鑰長度是從 384 位元到 512 位元。"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class RSA : System.Security.Cryptography.AsymmetricAlgorithm
  inheritance:
  - System.Object
  - System.Security.Cryptography.AsymmetricAlgorithm
  implements: []
  inheritedMembers:
  - System.Security.Cryptography.AsymmetricAlgorithm.Clear
  - System.Security.Cryptography.AsymmetricAlgorithm.Dispose
  - System.Security.Cryptography.AsymmetricAlgorithm.Dispose(System.Boolean)
  - System.Security.Cryptography.AsymmetricAlgorithm.KeySize
  - System.Security.Cryptography.AsymmetricAlgorithm.KeySizeValue
  - System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes
  - System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizesValue
  platform:
  - net462
- uid: System.Security.Cryptography.RSA.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.RSA
  langs:
  - csharp
  name: RSA()
  nameWithType: RSA.RSA()
  fullName: System.Security.Cryptography.RSA.RSA()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "初始化的新執行個體<xref href=&quot;System.Security.Cryptography.RSA&quot;></xref>類別。"
  remarks: "這是受保護的方法，只能從衍生自<xref:System.Security.Cryptography.RSA>.</xref:System.Security.Cryptography.RSA>的類別呼叫 您無法建立抽象類別的執行個體。"
  syntax:
    content: protected RSA ();
    parameters: []
  overload: System.Security.Cryptography.RSA.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RSA.Create
  id: Create
  parent: System.Security.Cryptography.RSA
  langs:
  - csharp
  name: Create()
  nameWithType: RSA.Create()
  fullName: System.Security.Cryptography.RSA.Create()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "建立的預設實作的執行個體<xref href=&quot;System.Security.Cryptography.RSA&quot;></xref>演算法。"
  syntax:
    content: public static System.Security.Cryptography.RSA Create ();
    parameters: []
    return:
      type: System.Security.Cryptography.RSA
      description: "預設實作的新執行個體<xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref>。"
  overload: System.Security.Cryptography.RSA.Create*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RSA.Create(System.String)
  id: Create(System.String)
  parent: System.Security.Cryptography.RSA
  langs:
  - csharp
  name: Create(String)
  nameWithType: RSA.Create(String)
  fullName: System.Security.Cryptography.RSA.Create(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "建立之指定實作的執行個體<xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref>。"
  syntax:
    content: public static System.Security.Cryptography.RSA Create (string algName);
    parameters:
    - id: algName
      type: System.String
      description: "實作名稱<xref href=&quot;System.Security.Cryptography.RSA&quot;></xref>使用。"
    return:
      type: System.Security.Cryptography.RSA
      description: "指定實作的新執行個體<xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref>。"
  overload: System.Security.Cryptography.RSA.Create*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RSA.Decrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)
  id: Decrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)
  parent: System.Security.Cryptography.RSA
  langs:
  - csharp
  name: Decrypt(Byte[],RSAEncryptionPadding)
  nameWithType: RSA.Decrypt(Byte[],RSAEncryptionPadding)
  fullName: System.Security.Cryptography.RSA.Decrypt(Byte[],RSAEncryptionPadding)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "在衍生類別中覆寫，解密使用指定的填補模式的輸入的資料。"
  syntax:
    content: public virtual byte[] Decrypt (byte[] data, System.Security.Cryptography.RSAEncryptionPadding padding);
    parameters:
    - id: data
      type: System.Byte[]
      description: "要解密的資料。"
    - id: padding
      type: System.Security.Cryptography.RSAEncryptionPadding
      description: "填補模式。"
    return:
      type: System.Byte[]
      description: "解密的資料。"
  overload: System.Security.Cryptography.RSA.Decrypt*
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: "在衍生的類別必須覆寫這個方法。"
  platform:
  - net462
- uid: System.Security.Cryptography.RSA.DecryptValue(System.Byte[])
  id: DecryptValue(System.Byte[])
  parent: System.Security.Cryptography.RSA
  langs:
  - csharp
  name: DecryptValue(Byte[])
  nameWithType: RSA.DecryptValue(Byte[])
  fullName: System.Security.Cryptography.RSA.DecryptValue(Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "在衍生類別中覆寫，解密輸入的資料使用的私密金鑰。"
  remarks: "在[!INCLUDE[net_v452](~/add/includes/net-v452-md.md)]和舊版的.NET framework 中，這個方法已`abstract`。 不過，只有在衍生類別實作<xref:System.Security.Cryptography.RSACryptoServiceProvider.DecryptValue%2A?displayProperty=fullName>，也會擲回<xref:System.NotSupportedException>例外狀況。</xref:System.NotSupportedException> </xref:System.Security.Cryptography.RSACryptoServiceProvider.DecryptValue%2A?displayProperty=fullName>"
  syntax:
    content: public virtual byte[] DecryptValue (byte[] rgb);
    parameters:
    - id: rgb
      type: System.Byte[]
      description: "要解密加密文字。"
    return:
      type: System.Byte[]
      description: "產生的解密<code> rgb </code>以純文字的參數。"
  overload: System.Security.Cryptography.RSA.DecryptValue*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "不支援這個方法呼叫。 開頭為擲回這個例外狀況[!INCLUDE[net_v46](~/add/includes/net-v46-md.md)]。"
  platform:
  - net462
- uid: System.Security.Cryptography.RSA.Encrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)
  id: Encrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)
  parent: System.Security.Cryptography.RSA
  langs:
  - csharp
  name: Encrypt(Byte[],RSAEncryptionPadding)
  nameWithType: RSA.Encrypt(Byte[],RSAEncryptionPadding)
  fullName: System.Security.Cryptography.RSA.Encrypt(Byte[],RSAEncryptionPadding)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "在衍生類別中覆寫，加密的輸入的資料，使用指定的填補模式。"
  syntax:
    content: public virtual byte[] Encrypt (byte[] data, System.Security.Cryptography.RSAEncryptionPadding padding);
    parameters:
    - id: data
      type: System.Byte[]
      description: "要加密的資料。"
    - id: padding
      type: System.Security.Cryptography.RSAEncryptionPadding
      description: "填補模式。"
    return:
      type: System.Byte[]
      description: "加密的資料。"
  overload: System.Security.Cryptography.RSA.Encrypt*
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: "在衍生的類別必須覆寫這個方法。"
  platform:
  - net462
- uid: System.Security.Cryptography.RSA.EncryptValue(System.Byte[])
  id: EncryptValue(System.Byte[])
  parent: System.Security.Cryptography.RSA
  langs:
  - csharp
  name: EncryptValue(Byte[])
  nameWithType: RSA.EncryptValue(Byte[])
  fullName: System.Security.Cryptography.RSA.EncryptValue(Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "在衍生類別中覆寫，加密輸入的資料使用的公開金鑰。"
  remarks: "在[!INCLUDE[net_v452](~/add/includes/net-v452-md.md)]和舊版的.NET framework 中，這個方法已`abstract`。 不過，只有在衍生類別實作<xref:System.Security.Cryptography.RSACryptoServiceProvider.DecryptValue%2A?displayProperty=fullName>，也會擲回<xref:System.NotSupportedException>例外狀況。</xref:System.NotSupportedException> </xref:System.Security.Cryptography.RSACryptoServiceProvider.DecryptValue%2A?displayProperty=fullName>"
  syntax:
    content: public virtual byte[] EncryptValue (byte[] rgb);
    parameters:
    - id: rgb
      type: System.Byte[]
      description: "要加密的純文字。"
    return:
      type: System.Byte[]
      description: "產生的加密<code> rgb </code>參數做為加密文字。"
  overload: System.Security.Cryptography.RSA.EncryptValue*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "不支援這個方法呼叫。 開頭為擲回這個例外狀況[!INCLUDE[net_v46](~/add/includes/net-v46-md.md)]。"
  platform:
  - net462
- uid: System.Security.Cryptography.RSA.ExportParameters(System.Boolean)
  id: ExportParameters(System.Boolean)
  parent: System.Security.Cryptography.RSA
  langs:
  - csharp
  name: ExportParameters(Boolean)
  nameWithType: RSA.ExportParameters(Boolean)
  fullName: System.Security.Cryptography.RSA.ExportParameters(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "當在衍生類別中覆寫時，會將匯出<xref href=&quot;System.Security.Cryptography.RSAParameters&quot;> </xref>。"
  syntax:
    content: public abstract System.Security.Cryptography.RSAParameters ExportParameters (bool includePrivateParameters);
    parameters:
    - id: includePrivateParameters
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要包含私用參數;否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.Security.Cryptography.RSAParameters
      description: "參數<xref href=&quot;System.Security.Cryptography.DSA&quot;> </xref>。"
  overload: System.Security.Cryptography.RSA.ExportParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RSA.FromXmlString(System.String)
  id: FromXmlString(System.String)
  parent: System.Security.Cryptography.RSA
  langs:
  - csharp
  name: FromXmlString(String)
  nameWithType: RSA.FromXmlString(String)
  fullName: System.Security.Cryptography.RSA.FromXmlString(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "初始化<xref href=&quot;System.Security.Cryptography.RSA&quot;></xref>從 XML 字串的金鑰資訊的物件。"
  remarks: "FromXmlString 初始化使用產生的 XML 字串中使用索引鍵資訊的 RSA 物件<xref:System.Security.Cryptography.RSA.ToXmlString%2A>方法。</xref:System.Security.Cryptography.RSA.ToXmlString%2A>  FromXmlString 方法會接受包含公開金鑰的 XML 字串或包含公開和私用金鑰的 XML 字串。       使用方便地初始化 FromXmlString 方法<xref:System.Security.Cryptography.RSA>金鑰資訊。</xref:System.Security.Cryptography.RSA>      > [!CAUTION] > 保存的 XML 字串，包含私密金鑰不安全的位置是一項安全性威脅。  如果惡意的協力廠商可以存取您的私密金鑰，可以危害您的應用程式的安全性。  若要安全地保存的私密金鑰，使用安全的金鑰容器。  如需金鑰容器中保存私密金鑰的詳細資訊，請參閱[How to︰ 在金鑰容器儲存非對稱金鑰](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public override void FromXmlString (string xmlString);
    parameters:
    - id: xmlString
      type: System.String
      description: "XML 字串，包含<xref href=&quot;System.Security.Cryptography.RSA&quot;></xref>金鑰資訊。"
  overload: System.Security.Cryptography.RSA.FromXmlString*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>xmlString</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "格式<code> xmlString </code>參數無效。"
  platform:
  - net462
- uid: System.Security.Cryptography.RSA.HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)
  id: HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)
  parent: System.Security.Cryptography.RSA
  langs:
  - csharp
  name: HashData(Stream,HashAlgorithmName)
  nameWithType: RSA.HashData(Stream,HashAlgorithmName)
  fullName: System.Security.Cryptography.RSA.HashData(Stream,HashAlgorithmName)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "在衍生類別中覆寫，請使用指定的雜湊演算法計算指定的二進位資料流的雜湊值。"
  syntax:
    content: protected virtual byte[] HashData (System.IO.Stream data, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);
    parameters:
    - id: data
      type: System.IO.Stream
      description: "要雜湊的二進位資料流。"
    - id: hashAlgorithm
      type: System.Security.Cryptography.HashAlgorithmName
      description: "雜湊演算法。"
    return:
      type: System.Byte[]
      description: "雜湊的資料。"
  overload: System.Security.Cryptography.RSA.HashData*
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: "在衍生的類別必須覆寫這個方法。"
  platform:
  - net462
- uid: System.Security.Cryptography.RSA.HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)
  id: HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)
  parent: System.Security.Cryptography.RSA
  langs:
  - csharp
  name: HashData(Byte[],Int32,Int32,HashAlgorithmName)
  nameWithType: RSA.HashData(Byte[],Int32,Int32,HashAlgorithmName)
  fullName: System.Security.Cryptography.RSA.HashData(Byte[],Int32,Int32,HashAlgorithmName)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "在衍生類別中覆寫，請使用指定的雜湊演算法計算雜湊值的位元組陣列中的指定部分。"
  syntax:
    content: protected virtual byte[] HashData (byte[] data, int offset, int count, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);
    parameters:
    - id: data
      type: System.Byte[]
      description: "要雜湊的資料。"
    - id: offset
      type: System.Int32
      description: "中的第一個位元組索引`data`要雜湊。"
    - id: count
      type: System.Int32
      description: "要雜湊的位元組數目。"
    - id: hashAlgorithm
      type: System.Security.Cryptography.HashAlgorithmName
      description: "要用來雜湊資料的演算法。"
    return:
      type: System.Byte[]
      description: "雜湊的資料。"
  overload: System.Security.Cryptography.RSA.HashData*
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: "在衍生的類別必須覆寫這個方法。"
  platform:
  - net462
- uid: System.Security.Cryptography.RSA.ImportParameters(System.Security.Cryptography.RSAParameters)
  id: ImportParameters(System.Security.Cryptography.RSAParameters)
  parent: System.Security.Cryptography.RSA
  langs:
  - csharp
  name: ImportParameters(RSAParameters)
  nameWithType: RSA.ImportParameters(RSAParameters)
  fullName: System.Security.Cryptography.RSA.ImportParameters(RSAParameters)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "當在衍生類別中覆寫時，匯入指定<xref href=&quot;System.Security.Cryptography.RSAParameters&quot;> </xref>。"
  syntax:
    content: public abstract void ImportParameters (System.Security.Cryptography.RSAParameters parameters);
    parameters:
    - id: parameters
      type: System.Security.Cryptography.RSAParameters
      description: "參數<xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref>。"
  overload: System.Security.Cryptography.RSA.ImportParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RSA.KeyExchangeAlgorithm
  id: KeyExchangeAlgorithm
  parent: System.Security.Cryptography.RSA
  langs:
  - csharp
  name: KeyExchangeAlgorithm
  nameWithType: RSA.KeyExchangeAlgorithm
  fullName: System.Security.Cryptography.RSA.KeyExchangeAlgorithm
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "取得可用的金鑰交換演算法的名稱與這個實作的<xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref>。"
  syntax:
    content: public override string KeyExchangeAlgorithm { get; }
    return:
      type: System.String
      description: "傳回&quot;RSA&quot;。"
  overload: System.Security.Cryptography.RSA.KeyExchangeAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RSA.SignatureAlgorithm
  id: SignatureAlgorithm
  parent: System.Security.Cryptography.RSA
  langs:
  - csharp
  name: SignatureAlgorithm
  nameWithType: RSA.SignatureAlgorithm
  fullName: System.Security.Cryptography.RSA.SignatureAlgorithm
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "取得可用的簽章演算法的名稱與這個實作的<xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref>。"
  syntax:
    content: public override string SignatureAlgorithm { get; }
    return:
      type: System.String
      description: "傳回&quot;RSA&quot;。"
  overload: System.Security.Cryptography.RSA.SignatureAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RSA.SignData(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  id: SignData(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  parent: System.Security.Cryptography.RSA
  langs:
  - csharp
  name: SignData(Byte[],HashAlgorithmName,RSASignaturePadding)
  nameWithType: RSA.SignData(Byte[],HashAlgorithmName,RSASignaturePadding)
  fullName: System.Security.Cryptography.RSA.SignData(Byte[],HashAlgorithmName,RSASignaturePadding)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "計算指定的位元組陣列，使用指定的雜湊演算法和填補模式雜湊值，並簽署產生的雜湊值。"
  syntax:
    content: public byte[] SignData (byte[] data, System.Security.Cryptography.HashAlgorithmName hashAlgorithm, System.Security.Cryptography.RSASignaturePadding padding);
    parameters:
    - id: data
      type: System.Byte[]
      description: "用來計算雜湊輸入的資料。"
    - id: hashAlgorithm
      type: System.Security.Cryptography.HashAlgorithmName
      description: "要用來建立雜湊值的雜湊演算法。"
    - id: padding
      type: System.Security.Cryptography.RSASignaturePadding
      description: "填補模式。"
    return:
      type: System.Byte[]
      description: "指定資料的 RSA 簽章。"
  overload: System.Security.Cryptography.RSA.SignData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>data</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>padding</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>hashAlgorithm</code>.<xref:System.Security.Cryptography.HashAlgorithmName.Name*> 是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>或&lt;xref:System.String.Empty?displayProperty=fullName&gt;。"
  platform:
  - net462
- uid: System.Security.Cryptography.RSA.SignData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  id: SignData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  parent: System.Security.Cryptography.RSA
  langs:
  - csharp
  name: SignData(Stream,HashAlgorithmName,RSASignaturePadding)
  nameWithType: RSA.SignData(Stream,HashAlgorithmName,RSASignaturePadding)
  fullName: System.Security.Cryptography.RSA.SignData(Stream,HashAlgorithmName,RSASignaturePadding)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "並簽署產生的雜湊值計算的雜湊值，指定資料流使用指定的雜湊演算法和填補模式。"
  syntax:
    content: public virtual byte[] SignData (System.IO.Stream data, System.Security.Cryptography.HashAlgorithmName hashAlgorithm, System.Security.Cryptography.RSASignaturePadding padding);
    parameters:
    - id: data
      type: System.IO.Stream
      description: "用來計算雜湊輸入資料流。"
    - id: hashAlgorithm
      type: System.Security.Cryptography.HashAlgorithmName
      description: "要用來建立雜湊值的雜湊演算法。"
    - id: padding
      type: System.Security.Cryptography.RSASignaturePadding
      description: "填補模式。"
    return:
      type: System.Byte[]
      description: "指定資料的 RSA 簽章。"
  overload: System.Security.Cryptography.RSA.SignData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>data</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>padding</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>hashAlgorithm</code>.<xref:System.Security.Cryptography.HashAlgorithmName.Name*> 是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>或&lt;xref:System.String.Empty?displayProperty=fullName&gt;。"
  platform:
  - net462
- uid: System.Security.Cryptography.RSA.SignData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  id: SignData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  parent: System.Security.Cryptography.RSA
  langs:
  - csharp
  name: SignData(Byte[],Int32,Int32,HashAlgorithmName,RSASignaturePadding)
  nameWithType: RSA.SignData(Byte[],Int32,Int32,HashAlgorithmName,RSASignaturePadding)
  fullName: System.Security.Cryptography.RSA.SignData(Byte[],Int32,Int32,HashAlgorithmName,RSASignaturePadding)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "並簽署產生的雜湊值計算的雜湊值，指定的位元組陣列，使用指定的雜湊演算法和填補模式的部分。"
  syntax:
    content: public virtual byte[] SignData (byte[] data, int offset, int count, System.Security.Cryptography.HashAlgorithmName hashAlgorithm, System.Security.Cryptography.RSASignaturePadding padding);
    parameters:
    - id: data
      type: System.Byte[]
      description: "用來計算雜湊輸入的資料。"
    - id: offset
      type: System.Int32
      description: "若要開始使用資料的陣列中的位移。"
    - id: count
      type: System.Int32
      description: "陣列中要用作資料的位元組數目。"
    - id: hashAlgorithm
      type: System.Security.Cryptography.HashAlgorithmName
      description: "要用來建立雜湊值的雜湊演算法。"
    - id: padding
      type: System.Security.Cryptography.RSASignaturePadding
      description: "填補模式。"
    return:
      type: System.Byte[]
      description: "指定資料的 RSA 簽章。"
  overload: System.Security.Cryptography.RSA.SignData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>data</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>padding</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>hashAlgorithm</code>.<xref:System.Security.Cryptography.HashAlgorithmName.Name*> 是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>或&lt;xref:System.String.Empty?displayProperty=fullName&gt;。"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>小於零。       -或-<code>count</code>小於零。       - <code>offset</code>  + <code>count</code> – 1 造成索引超出上限<code>data</code>。"
  platform:
  - net462
- uid: System.Security.Cryptography.RSA.SignHash(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  id: SignHash(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  parent: System.Security.Cryptography.RSA
  langs:
  - csharp
  name: SignHash(Byte[],HashAlgorithmName,RSASignaturePadding)
  nameWithType: RSA.SignHash(Byte[],HashAlgorithmName,RSASignaturePadding)
  fullName: System.Security.Cryptography.RSA.SignHash(Byte[],HashAlgorithmName,RSASignaturePadding)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "當在衍生類別中覆寫時，計算指定的雜湊值的簽章的加密私密金鑰使用指定的填補。"
  syntax:
    content: public virtual byte[] SignHash (byte[] hash, System.Security.Cryptography.HashAlgorithmName hashAlgorithm, System.Security.Cryptography.RSASignaturePadding padding);
    parameters:
    - id: hash
      type: System.Byte[]
      description: "要簽署之資料的雜湊值。"
    - id: hashAlgorithm
      type: System.Security.Cryptography.HashAlgorithmName
      description: "用來建立資料的雜湊值的雜湊演算法。"
    - id: padding
      type: System.Security.Cryptography.RSASignaturePadding
      description: "填補。"
    return:
      type: System.Byte[]
      description: "指定的雜湊值的 RSA 簽章。"
  overload: System.Security.Cryptography.RSA.SignHash*
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: "在衍生的類別必須覆寫這個方法。"
  platform:
  - net462
- uid: System.Security.Cryptography.RSA.ToXmlString(System.Boolean)
  id: ToXmlString(System.Boolean)
  parent: System.Security.Cryptography.RSA
  langs:
  - csharp
  name: ToXmlString(Boolean)
  nameWithType: RSA.ToXmlString(Boolean)
  fullName: System.Security.Cryptography.RSA.ToXmlString(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "建立並傳回 XML 字串，包含目前的索引鍵<xref href=&quot;System.Security.Cryptography.RSA&quot;></xref>物件。"
  remarks: "ToXmlString 方法會建立 XML 字串，包含目前的公用和私用金鑰<xref:System.Security.Cryptography.RSA>物件，或只包含公開金鑰的目前<xref:System.Security.Cryptography.RSA>物件。</xref:System.Security.Cryptography.RSA> </xref:System.Security.Cryptography.RSA>       每當您需要方便地保存 RSA 金鑰資訊，請使用 ToXmlString 方法。  初始化<xref:System.Security.Cryptography.RSA>XML 的字串，使用索引鍵物件<xref:System.Security.Cryptography.RSA.FromXmlString%2A>方法。</xref:System.Security.Cryptography.RSA.FromXmlString%2A> </xref:System.Security.Cryptography.RSA>      > [!CAUTION] > 保存的 XML 字串，包含私密金鑰不安全的位置是一項安全性威脅。  如果惡意的協力廠商可以存取您的私密金鑰，可以危害您的應用程式的安全性。  若要安全地保存的私密金鑰，使用安全的金鑰容器。  如需金鑰容器中保存私密金鑰的詳細資訊，請參閱[How to︰ 在金鑰容器儲存非對稱金鑰](~/add/includes/ajax-current-ext-md.md)。       當您將傳遞`true`ToXmlString 方法，產生的 XML 字串的形式如下︰```   <RSAKeyValue>      <Modulus>…</Modulus>      <Exponent>…</Exponent>      <P>…</P>      <Q>…</Q>      <DP>…</DP>      <DQ>…</DQ>      <InverseQ>…</InverseQ>      <D>…</D>   </RSAKeyValue>   ```傳遞時， `false` ToXmlString 方法，產生的 XML 字串的形式如下︰```   <RSAKeyValue>      <Modulus>…</Modulus>      <Exponent>…</Exponent>   </RSAKeyValue>   ```"
  syntax:
    content: public override string ToXmlString (bool includePrivateParameters);
    parameters:
    - id: includePrivateParameters
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>包含公開和私密 RSA 金鑰;<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>包含僅將公開金鑰。"
    return:
      type: System.String
      description: "XML 字串，包含目前的索引鍵<xref href=&quot;System.Security.Cryptography.RSA&quot;></xref>物件。"
  overload: System.Security.Cryptography.RSA.ToXmlString*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RSA.VerifyData(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  id: VerifyData(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  parent: System.Security.Cryptography.RSA
  langs:
  - csharp
  name: VerifyData(Byte[],Byte[],HashAlgorithmName,RSASignaturePadding)
  nameWithType: RSA.VerifyData(Byte[],Byte[],HashAlgorithmName,RSASignaturePadding)
  fullName: System.Security.Cryptography.RSA.VerifyData(Byte[],Byte[],HashAlgorithmName,RSASignaturePadding)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "驗證數位簽章是否有效，藉由計算的雜湊值，指定的資料，使用指定的雜湊演算法和填補，並和比較，來提供的簽章。"
  syntax:
    content: public bool VerifyData (byte[] data, byte[] signature, System.Security.Cryptography.HashAlgorithmName hashAlgorithm, System.Security.Cryptography.RSASignaturePadding padding);
    parameters:
    - id: data
      type: System.Byte[]
      description: "帶正負號的資料。"
    - id: signature
      type: System.Byte[]
      description: "要驗證的簽章資料。"
    - id: hashAlgorithm
      type: System.Security.Cryptography.HashAlgorithmName
      description: "用來建立資料的雜湊值的雜湊演算法。"
    - id: padding
      type: System.Security.Cryptography.RSASignaturePadding
      description: "填補模式。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果簽章有效;否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Security.Cryptography.RSA.VerifyData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>data</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>signature</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>padding</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>hashAlgorithm</code>.<xref:System.Security.Cryptography.HashAlgorithmName.Name*> 是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>或&lt;xref:System.String.Empty?displayProperty=fullName&gt;。"
  platform:
  - net462
- uid: System.Security.Cryptography.RSA.VerifyData(System.IO.Stream,System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  id: VerifyData(System.IO.Stream,System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  parent: System.Security.Cryptography.RSA
  langs:
  - csharp
  name: VerifyData(Stream,Byte[],HashAlgorithmName,RSASignaturePadding)
  nameWithType: RSA.VerifyData(Stream,Byte[],HashAlgorithmName,RSASignaturePadding)
  fullName: System.Security.Cryptography.RSA.VerifyData(Stream,Byte[],HashAlgorithmName,RSASignaturePadding)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "驗證數位簽章是否有效，藉由計算的雜湊值，指定使用指定的資料流的雜湊演算法和填補，並和比較，來提供的簽章。"
  syntax:
    content: public bool VerifyData (System.IO.Stream data, byte[] signature, System.Security.Cryptography.HashAlgorithmName hashAlgorithm, System.Security.Cryptography.RSASignaturePadding padding);
    parameters:
    - id: data
      type: System.IO.Stream
      description: "帶正負號的資料。"
    - id: signature
      type: System.Byte[]
      description: "要驗證的簽章資料。"
    - id: hashAlgorithm
      type: System.Security.Cryptography.HashAlgorithmName
      description: "用來建立資料的雜湊值的雜湊演算法。"
    - id: padding
      type: System.Security.Cryptography.RSASignaturePadding
      description: "填補模式。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果簽章有效;否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Security.Cryptography.RSA.VerifyData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>data</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>signature</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>padding</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>hashAlgorithm</code>.<xref:System.Security.Cryptography.HashAlgorithmName.Name*> 是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>或&lt;xref:System.String.Empty?displayProperty=fullName&gt;。"
  platform:
  - net462
- uid: System.Security.Cryptography.RSA.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  id: VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  parent: System.Security.Cryptography.RSA
  langs:
  - csharp
  name: VerifyData(Byte[],Int32,Int32,Byte[],HashAlgorithmName,RSASignaturePadding)
  nameWithType: RSA.VerifyData(Byte[],Int32,Int32,Byte[],HashAlgorithmName,RSASignaturePadding)
  fullName: System.Security.Cryptography.RSA.VerifyData(Byte[],Int32,Int32,Byte[],HashAlgorithmName,RSASignaturePadding)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "驗證數位簽章是否有效，藉由計算中使用指定的位元組陣列的部分資料的雜湊值來雜湊演算法和填補，並和比較，來提供的簽章。"
  syntax:
    content: public virtual bool VerifyData (byte[] data, int offset, int count, byte[] signature, System.Security.Cryptography.HashAlgorithmName hashAlgorithm, System.Security.Cryptography.RSASignaturePadding padding);
    parameters:
    - id: data
      type: System.Byte[]
      description: "帶正負號的資料。"
    - id: offset
      type: System.Int32
      description: "用來計算雜湊的起始索引。"
    - id: count
      type: System.Int32
      description: "要雜湊的位元組數目。"
    - id: signature
      type: System.Byte[]
      description: "要驗證的簽章資料。"
    - id: hashAlgorithm
      type: System.Security.Cryptography.HashAlgorithmName
      description: "用來建立資料的雜湊值的雜湊演算法。"
    - id: padding
      type: System.Security.Cryptography.RSASignaturePadding
      description: "填補模式。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果簽章有效;否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Security.Cryptography.RSA.VerifyData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>data</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>signature</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>padding</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>hashAlgorithm</code>.<xref:System.Security.Cryptography.HashAlgorithmName.Name*> 是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>或&lt;xref:System.String.Empty?displayProperty=fullName&gt;。"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>小於零。       -或-<code>count</code>小於零。       - <code>offset</code>  + <code>count</code> – 1 造成索引超出上限<code>data</code>。"
  platform:
  - net462
- uid: System.Security.Cryptography.RSA.VerifyHash(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  id: VerifyHash(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  parent: System.Security.Cryptography.RSA
  langs:
  - csharp
  name: VerifyHash(Byte[],Byte[],HashAlgorithmName,RSASignaturePadding)
  nameWithType: RSA.VerifyHash(Byte[],Byte[],HashAlgorithmName,RSASignaturePadding)
  fullName: System.Security.Cryptography.RSA.VerifyHash(Byte[],Byte[],HashAlgorithmName,RSASignaturePadding)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "驗證數位簽章是否有效，藉由使用指定的簽章的雜湊值的決定雜湊演算法和填補，並比較提供的雜湊值。"
  syntax:
    content: public virtual bool VerifyHash (byte[] hash, byte[] signature, System.Security.Cryptography.HashAlgorithmName hashAlgorithm, System.Security.Cryptography.RSASignaturePadding padding);
    parameters:
    - id: hash
      type: System.Byte[]
      description: "已簽署的資料雜湊值。"
    - id: signature
      type: System.Byte[]
      description: "要驗證的簽章資料。"
    - id: hashAlgorithm
      type: System.Security.Cryptography.HashAlgorithmName
      description: "用來建立雜湊值的雜湊演算法。"
    - id: padding
      type: System.Security.Cryptography.RSASignaturePadding
      description: "填補模式。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果簽章有效;否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Security.Cryptography.RSA.VerifyHash*
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: "在衍生的類別必須覆寫這個方法。"
  platform:
  - net462
references:
- uid: System.Security.Cryptography.AsymmetricAlgorithm
  isExternal: false
  name: System.Security.Cryptography.AsymmetricAlgorithm
- uid: System.NotImplementedException
  isExternal: true
  name: System.NotImplementedException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Cryptography.CryptographicException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Security.Cryptography.RSA.#ctor
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: RSA()
  nameWithType: RSA.RSA()
  fullName: System.Security.Cryptography.RSA.RSA()
- uid: System.Security.Cryptography.RSA.Create
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: Create()
  nameWithType: RSA.Create()
  fullName: System.Security.Cryptography.RSA.Create()
- uid: System.Security.Cryptography.RSA
  parent: System.Security.Cryptography
  isExternal: false
  name: RSA
  nameWithType: RSA
  fullName: System.Security.Cryptography.RSA
- uid: System.Security.Cryptography.RSA.Create(System.String)
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: Create(String)
  nameWithType: RSA.Create(String)
  fullName: System.Security.Cryptography.RSA.Create(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.RSA.Decrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: Decrypt(Byte[],RSAEncryptionPadding)
  nameWithType: RSA.Decrypt(Byte[],RSAEncryptionPadding)
  fullName: System.Security.Cryptography.RSA.Decrypt(Byte[],RSAEncryptionPadding)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.RSAEncryptionPadding
  parent: System.Security.Cryptography
  isExternal: false
  name: RSAEncryptionPadding
  nameWithType: RSAEncryptionPadding
  fullName: System.Security.Cryptography.RSAEncryptionPadding
- uid: System.Security.Cryptography.RSA.DecryptValue(System.Byte[])
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: DecryptValue(Byte[])
  nameWithType: RSA.DecryptValue(Byte[])
  fullName: System.Security.Cryptography.RSA.DecryptValue(Byte[])
- uid: System.Security.Cryptography.RSA.Encrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: Encrypt(Byte[],RSAEncryptionPadding)
  nameWithType: RSA.Encrypt(Byte[],RSAEncryptionPadding)
  fullName: System.Security.Cryptography.RSA.Encrypt(Byte[],RSAEncryptionPadding)
- uid: System.Security.Cryptography.RSA.EncryptValue(System.Byte[])
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: EncryptValue(Byte[])
  nameWithType: RSA.EncryptValue(Byte[])
  fullName: System.Security.Cryptography.RSA.EncryptValue(Byte[])
- uid: System.Security.Cryptography.RSA.ExportParameters(System.Boolean)
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: ExportParameters(Boolean)
  nameWithType: RSA.ExportParameters(Boolean)
  fullName: System.Security.Cryptography.RSA.ExportParameters(Boolean)
- uid: System.Security.Cryptography.RSAParameters
  parent: System.Security.Cryptography
  isExternal: false
  name: RSAParameters
  nameWithType: RSAParameters
  fullName: System.Security.Cryptography.RSAParameters
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.RSA.FromXmlString(System.String)
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: FromXmlString(String)
  nameWithType: RSA.FromXmlString(String)
  fullName: System.Security.Cryptography.RSA.FromXmlString(String)
- uid: System.Security.Cryptography.RSA.HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: HashData(Stream,HashAlgorithmName)
  nameWithType: RSA.HashData(Stream,HashAlgorithmName)
  fullName: System.Security.Cryptography.RSA.HashData(Stream,HashAlgorithmName)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Security.Cryptography.HashAlgorithmName
  parent: System.Security.Cryptography
  isExternal: false
  name: HashAlgorithmName
  nameWithType: HashAlgorithmName
  fullName: System.Security.Cryptography.HashAlgorithmName
- uid: System.Security.Cryptography.RSA.HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: HashData(Byte[],Int32,Int32,HashAlgorithmName)
  nameWithType: RSA.HashData(Byte[],Int32,Int32,HashAlgorithmName)
  fullName: System.Security.Cryptography.RSA.HashData(Byte[],Int32,Int32,HashAlgorithmName)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.RSA.ImportParameters(System.Security.Cryptography.RSAParameters)
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: ImportParameters(RSAParameters)
  nameWithType: RSA.ImportParameters(RSAParameters)
  fullName: System.Security.Cryptography.RSA.ImportParameters(RSAParameters)
- uid: System.Security.Cryptography.RSA.KeyExchangeAlgorithm
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: KeyExchangeAlgorithm
  nameWithType: RSA.KeyExchangeAlgorithm
  fullName: System.Security.Cryptography.RSA.KeyExchangeAlgorithm
- uid: System.Security.Cryptography.RSA.SignatureAlgorithm
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: SignatureAlgorithm
  nameWithType: RSA.SignatureAlgorithm
  fullName: System.Security.Cryptography.RSA.SignatureAlgorithm
- uid: System.Security.Cryptography.RSA.SignData(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: SignData(Byte[],HashAlgorithmName,RSASignaturePadding)
  nameWithType: RSA.SignData(Byte[],HashAlgorithmName,RSASignaturePadding)
  fullName: System.Security.Cryptography.RSA.SignData(Byte[],HashAlgorithmName,RSASignaturePadding)
- uid: System.Security.Cryptography.RSASignaturePadding
  parent: System.Security.Cryptography
  isExternal: false
  name: RSASignaturePadding
  nameWithType: RSASignaturePadding
  fullName: System.Security.Cryptography.RSASignaturePadding
- uid: System.Security.Cryptography.RSA.SignData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: SignData(Stream,HashAlgorithmName,RSASignaturePadding)
  nameWithType: RSA.SignData(Stream,HashAlgorithmName,RSASignaturePadding)
  fullName: System.Security.Cryptography.RSA.SignData(Stream,HashAlgorithmName,RSASignaturePadding)
- uid: System.Security.Cryptography.RSA.SignData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: SignData(Byte[],Int32,Int32,HashAlgorithmName,RSASignaturePadding)
  nameWithType: RSA.SignData(Byte[],Int32,Int32,HashAlgorithmName,RSASignaturePadding)
  fullName: System.Security.Cryptography.RSA.SignData(Byte[],Int32,Int32,HashAlgorithmName,RSASignaturePadding)
- uid: System.Security.Cryptography.RSA.SignHash(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: SignHash(Byte[],HashAlgorithmName,RSASignaturePadding)
  nameWithType: RSA.SignHash(Byte[],HashAlgorithmName,RSASignaturePadding)
  fullName: System.Security.Cryptography.RSA.SignHash(Byte[],HashAlgorithmName,RSASignaturePadding)
- uid: System.Security.Cryptography.RSA.ToXmlString(System.Boolean)
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: ToXmlString(Boolean)
  nameWithType: RSA.ToXmlString(Boolean)
  fullName: System.Security.Cryptography.RSA.ToXmlString(Boolean)
- uid: System.Security.Cryptography.RSA.VerifyData(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: VerifyData(Byte[],Byte[],HashAlgorithmName,RSASignaturePadding)
  nameWithType: RSA.VerifyData(Byte[],Byte[],HashAlgorithmName,RSASignaturePadding)
  fullName: System.Security.Cryptography.RSA.VerifyData(Byte[],Byte[],HashAlgorithmName,RSASignaturePadding)
- uid: System.Security.Cryptography.RSA.VerifyData(System.IO.Stream,System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: VerifyData(Stream,Byte[],HashAlgorithmName,RSASignaturePadding)
  nameWithType: RSA.VerifyData(Stream,Byte[],HashAlgorithmName,RSASignaturePadding)
  fullName: System.Security.Cryptography.RSA.VerifyData(Stream,Byte[],HashAlgorithmName,RSASignaturePadding)
- uid: System.Security.Cryptography.RSA.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: VerifyData(Byte[],Int32,Int32,Byte[],HashAlgorithmName,RSASignaturePadding)
  nameWithType: RSA.VerifyData(Byte[],Int32,Int32,Byte[],HashAlgorithmName,RSASignaturePadding)
  fullName: System.Security.Cryptography.RSA.VerifyData(Byte[],Int32,Int32,Byte[],HashAlgorithmName,RSASignaturePadding)
- uid: System.Security.Cryptography.RSA.VerifyHash(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: VerifyHash(Byte[],Byte[],HashAlgorithmName,RSASignaturePadding)
  nameWithType: RSA.VerifyHash(Byte[],Byte[],HashAlgorithmName,RSASignaturePadding)
  fullName: System.Security.Cryptography.RSA.VerifyHash(Byte[],Byte[],HashAlgorithmName,RSASignaturePadding)
- uid: System.Security.Cryptography.RSA.#ctor*
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: RSA
  nameWithType: RSA.RSA
- uid: System.Security.Cryptography.RSA.Create*
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: Create
  nameWithType: RSA.Create
- uid: System.Security.Cryptography.RSA.Decrypt*
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: Decrypt
  nameWithType: RSA.Decrypt
- uid: System.Security.Cryptography.RSA.DecryptValue*
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: DecryptValue
  nameWithType: RSA.DecryptValue
- uid: System.Security.Cryptography.RSA.Encrypt*
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: Encrypt
  nameWithType: RSA.Encrypt
- uid: System.Security.Cryptography.RSA.EncryptValue*
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: EncryptValue
  nameWithType: RSA.EncryptValue
- uid: System.Security.Cryptography.RSA.ExportParameters*
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: ExportParameters
  nameWithType: RSA.ExportParameters
- uid: System.Security.Cryptography.RSA.FromXmlString*
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: FromXmlString
  nameWithType: RSA.FromXmlString
- uid: System.Security.Cryptography.RSA.HashData*
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: HashData
  nameWithType: RSA.HashData
- uid: System.Security.Cryptography.RSA.ImportParameters*
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: ImportParameters
  nameWithType: RSA.ImportParameters
- uid: System.Security.Cryptography.RSA.KeyExchangeAlgorithm*
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: KeyExchangeAlgorithm
  nameWithType: RSA.KeyExchangeAlgorithm
- uid: System.Security.Cryptography.RSA.SignatureAlgorithm*
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: SignatureAlgorithm
  nameWithType: RSA.SignatureAlgorithm
- uid: System.Security.Cryptography.RSA.SignData*
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: SignData
  nameWithType: RSA.SignData
- uid: System.Security.Cryptography.RSA.SignHash*
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: SignHash
  nameWithType: RSA.SignHash
- uid: System.Security.Cryptography.RSA.ToXmlString*
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: ToXmlString
  nameWithType: RSA.ToXmlString
- uid: System.Security.Cryptography.RSA.VerifyData*
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: VerifyData
  nameWithType: RSA.VerifyData
- uid: System.Security.Cryptography.RSA.VerifyHash*
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: VerifyHash
  nameWithType: RSA.VerifyHash
