### YamlMime:ManagedReference
items:
- uid: System.Security.Claims.ClaimsAuthenticationManager
  id: ClaimsAuthenticationManager
  children:
  - System.Security.Claims.ClaimsAuthenticationManager.#ctor
  - System.Security.Claims.ClaimsAuthenticationManager.Authenticate(System.String,System.Security.Claims.ClaimsPrincipal)
  - System.Security.Claims.ClaimsAuthenticationManager.LoadCustomConfiguration(System.Xml.XmlNodeList)
  langs:
  - csharp
  name: ClaimsAuthenticationManager
  nameWithType: ClaimsAuthenticationManager
  fullName: System.Security.Claims.ClaimsAuthenticationManager
  type: Class
  summary: "定義宣告驗證管理員的基底實作。 宣告驗證管理員提供處理管線將處理邏輯 （篩選驗證擴充功能） 套用至宣告集合中，連入的主體中，執行程序到達應用程式程式碼之前宣告中的位置。"
  remarks: "The claims authentication manager provides an extensibility point in the application’s claims processing pipeline that you can use to validate, filter, modify, incoming claims or inject new claims into the set of claims presented by a <xref:System.Security.Claims.ClaimsPrincipal> before the RP application code is executed. You can even return a custom implementation of <xref:System.Security.Claims.ClaimsPrincipal> if your RP application requires it. The default implementation provided by the ClaimsAuthenticationManager class returns the claims in the <xref:System.Security.Claims.ClaimsPrincipal> unmodified; however, you can derive from this class and override the <xref:System.Security.Claims.ClaimsAuthenticationManager.Authenticate%2A> method to modify the claims in the <xref:System.Security.Claims.ClaimsPrincipal> (or to return a custom <xref:System.Security.Claims.ClaimsPrincipal>).  \n  \n A typical reason for creating a custom claims authentication manager is to add, remove, or transform claims based on information that is only known by or is, perhaps, better maintained by the RP application. For example, a history of customer purchases in a shopping cart application might be kept in a data base maintained by the RP application and then added to the claims principal returned by the claims authentication manager based on the value of a name claim found in the incoming principal.  \n  \n You can configure your application to use a `ClaimsAuthenticationManager` either programmatically by using the <xref:System.IdentityModel.Configuration.IdentityConfiguration> class or in configuration through the [\\&lt;claimsAuthenticationManager\\&gt;](../Topic/%3CclaimsAuthenticationManager%3E.md) element (which is a child element of the [\\&lt;identityConfiguration\\&gt;](../Topic/%3CidentityConfiguration%3E.md) element). You can override the <xref:System.Security.Claims.ClaimsAuthenticationManager.LoadCustomConfiguration%2A> method to provide processing for custom child elements of the `<claimsAuthenticationManager>` element through which your custom manager can be configured. The base implementation of ClaimsAuthenticationManager does not handle any child elements.  \n  \n Configuring your application to use a claims authentication manager ensures that it will be invoked by Windows Identity Foundation (WIF) from the request pipeline."
  example:
  - "The following code shows a simple claims authentication manager that adds a role claim to the incoming principal without performing any check on the incoming claims..  \n  \n [!code-cs[WifWebApplication1#1](~/add/codesnippet/csharp/myclaimsauthenticationmanager/simpleclaimsauthenticatonmanager.cs#1)]  \n  \n The following XML shows the `<claimsAuthenticationManager>` element.  \n  \n```xml  \n<system.identityModel>  \n  <identityConfiguration>  \n    <claimsAuthenticationManager type=\"MyClaimsAuthenticationManager.SimpleClaimsAuthenticatonManager, MyClaimsAuthenticationManager\" />  \n  \n    ...  \n  \n  </identityConfiguration>  \n</system.identityModel>  \n```"
  syntax:
    content: 'public class ClaimsAuthenticationManager : System.IdentityModel.Configuration.ICustomIdentityConfiguration'
  inheritance:
  - System.Object
  implements:
  - System.IdentityModel.Configuration.ICustomIdentityConfiguration
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsAuthenticationManager.#ctor
  id: '#ctor'
  parent: System.Security.Claims.ClaimsAuthenticationManager
  langs:
  - csharp
  name: ClaimsAuthenticationManager()
  nameWithType: ClaimsAuthenticationManager.ClaimsAuthenticationManager()
  fullName: System.Security.Claims.ClaimsAuthenticationManager.ClaimsAuthenticationManager()
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.Security.Claims
  summary: "初始化的新執行個體<xref href=&quot;System.Security.Claims.ClaimsAuthenticationManager&quot;></xref>類別。"
  syntax:
    content: public ClaimsAuthenticationManager ();
    parameters: []
  overload: System.Security.Claims.ClaimsAuthenticationManager.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsAuthenticationManager.Authenticate(System.String,System.Security.Claims.ClaimsPrincipal)
  id: Authenticate(System.String,System.Security.Claims.ClaimsPrincipal)
  parent: System.Security.Claims.ClaimsAuthenticationManager
  langs:
  - csharp
  name: Authenticate(String,ClaimsPrincipal)
  nameWithType: ClaimsAuthenticationManager.Authenticate(String,ClaimsPrincipal)
  fullName: System.Security.Claims.ClaimsAuthenticationManager.Authenticate(String,ClaimsPrincipal)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.Security.Claims
  summary: "當在衍生類別中覆寫時，會傳回<xref href=&quot;System.Security.Claims.ClaimsPrincipal&quot;> </xref> RP 應用程式的需求與一致的物件。 預設實作不會修改傳入<xref href=&quot;System.Security.Claims.ClaimsPrincipal&quot;> </xref>。"
  remarks: "驗證方法從您可以覆寫這個方法，若要篩選，在衍生類別中的要求處理管線的呼叫修改或插入宣告主體根據 RP 應用程式的原則中的宣告。 根據 RP 應用程式的需求，您甚至可以傳回<xref:System.Security.Claims.ClaimsPrincipal>.</xref:System.Security.Claims.ClaimsPrincipal>的自訂實作"
  syntax:
    content: public virtual System.Security.Claims.ClaimsPrincipal Authenticate (string resourceName, System.Security.Claims.ClaimsPrincipal incomingPrincipal);
    parameters:
    - id: resourceName
      type: System.String
      description: "所要求之資源的位址。"
    - id: incomingPrincipal
      type: System.Security.Claims.ClaimsPrincipal
      description: "代表已驗證的使用者嘗試存取資源的宣告主體。"
    return:
      type: System.Security.Claims.ClaimsPrincipal
      description: "宣告主體包含 RP 應用程式所需的任何修改。 預設實作會傳回的連入宣告主體未修改。"
  overload: System.Security.Claims.ClaimsAuthenticationManager.Authenticate*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsAuthenticationManager.LoadCustomConfiguration(System.Xml.XmlNodeList)
  id: LoadCustomConfiguration(System.Xml.XmlNodeList)
  parent: System.Security.Claims.ClaimsAuthenticationManager
  langs:
  - csharp
  name: LoadCustomConfiguration(XmlNodeList)
  nameWithType: ClaimsAuthenticationManager.LoadCustomConfiguration(XmlNodeList)
  fullName: System.Security.Claims.ClaimsAuthenticationManager.LoadCustomConfiguration(XmlNodeList)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.Security.Claims
  summary: "在衍生類別中覆寫，請從 XML 載入自訂組態。"
  remarks: "The LoadCustomConfiguration method is called by the configuration infrastructure. When this method is called, the `nodelist` will contain the top-level child elements of the [\\&lt;claimsAuthenticationManager\\&gt;](../Topic/%3CclaimsAuthenticationManager%3E.md) element from the configuration file. Each of these elements may, in turn, contain attributes or child elements depending on the configuration schema you define for your derived class. If no child elements appear under the `<claimsAuthenticationManager>` element in the configuration file, this method is not called.  \n  \n The default implementation throws a <xref:System.NotImplementedException>. Override this method in your derived class to enable initialization of your claims authentication manager from a configuration file. For example, the configuration elements might describe a policy to be followed when authenticating a claims principal; or they might be used to point to an attribute store from which additional claims are to be added to the principal."
  syntax:
    content: public virtual void LoadCustomConfiguration (System.Xml.XmlNodeList nodelist);
    parameters:
    - id: nodelist
      type: System.Xml.XmlNodeList
      description: "自訂組態項目。 在清單中的每個節點屬於型別<xref href=&quot;System.Xml.XmlElement&quot;> </xref>。"
  overload: System.Security.Claims.ClaimsAuthenticationManager.LoadCustomConfiguration*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Security.Claims.ClaimsAuthenticationManager.#ctor
  parent: System.Security.Claims.ClaimsAuthenticationManager
  isExternal: false
  name: ClaimsAuthenticationManager()
  nameWithType: ClaimsAuthenticationManager.ClaimsAuthenticationManager()
  fullName: System.Security.Claims.ClaimsAuthenticationManager.ClaimsAuthenticationManager()
- uid: System.Security.Claims.ClaimsAuthenticationManager.Authenticate(System.String,System.Security.Claims.ClaimsPrincipal)
  parent: System.Security.Claims.ClaimsAuthenticationManager
  isExternal: false
  name: Authenticate(String,ClaimsPrincipal)
  nameWithType: ClaimsAuthenticationManager.Authenticate(String,ClaimsPrincipal)
  fullName: System.Security.Claims.ClaimsAuthenticationManager.Authenticate(String,ClaimsPrincipal)
- uid: System.Security.Claims.ClaimsPrincipal
  parent: System.Security.Claims
  isExternal: false
  name: ClaimsPrincipal
  nameWithType: ClaimsPrincipal
  fullName: System.Security.Claims.ClaimsPrincipal
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Claims.ClaimsAuthenticationManager.LoadCustomConfiguration(System.Xml.XmlNodeList)
  parent: System.Security.Claims.ClaimsAuthenticationManager
  isExternal: false
  name: LoadCustomConfiguration(XmlNodeList)
  nameWithType: ClaimsAuthenticationManager.LoadCustomConfiguration(XmlNodeList)
  fullName: System.Security.Claims.ClaimsAuthenticationManager.LoadCustomConfiguration(XmlNodeList)
- uid: System.Xml.XmlNodeList
  parent: System.Xml
  isExternal: false
  name: XmlNodeList
  nameWithType: XmlNodeList
  fullName: System.Xml.XmlNodeList
- uid: System.Security.Claims.ClaimsAuthenticationManager.#ctor*
  parent: System.Security.Claims.ClaimsAuthenticationManager
  isExternal: false
  name: ClaimsAuthenticationManager
  nameWithType: ClaimsAuthenticationManager.ClaimsAuthenticationManager
- uid: System.Security.Claims.ClaimsAuthenticationManager.Authenticate*
  parent: System.Security.Claims.ClaimsAuthenticationManager
  isExternal: false
  name: Authenticate
  nameWithType: ClaimsAuthenticationManager.Authenticate
- uid: System.Security.Claims.ClaimsAuthenticationManager.LoadCustomConfiguration*
  parent: System.Security.Claims.ClaimsAuthenticationManager
  isExternal: false
  name: LoadCustomConfiguration
  nameWithType: ClaimsAuthenticationManager.LoadCustomConfiguration
