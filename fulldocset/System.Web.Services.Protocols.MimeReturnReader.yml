### YamlMime:ManagedReference
items:
- uid: System.Web.Services.Protocols.MimeReturnReader
  id: MimeReturnReader
  children:
  - System.Web.Services.Protocols.MimeReturnReader.#ctor
  - System.Web.Services.Protocols.MimeReturnReader.Read(System.Net.WebResponse,System.IO.Stream)
  langs:
  - csharp
  name: MimeReturnReader
  nameWithType: MimeReturnReader
  fullName: System.Web.Services.Protocols.MimeReturnReader
  type: Class
  summary: "Web 服務用戶端使用 HTTP 實作，但不使用 SOAP 的連入回應傳回值的讀取器提供通用基底實作。"
  remarks: "MimeReturnReader 類別和其他類別<xref:System.Web.Services.Protocols>命名空間支援.NET Framework 實作 Web 服務透過 HTTP GET 和 HTTP POST 作業。</xref:System.Web.Services.Protocols> Web 服務寫入器和讀取序列化和還原序列化，分別參數或 Web 方法的傳回物件之間的 HTTP 要求或回應資料流。 Web 服務寫入器和讀取器使用 HTTP 傳輸，但不會交換使用 SOAP 標準的訊息。       MimeReturnReader 類別會建立一般<xref:System.Web.Services.Protocols.MimeReturnReader.Read%2A>所有用戶端讀取資料的 HTTP 回應資料流到 Web 方法的傳回值的介面。</xref:System.Web.Services.Protocols.MimeReturnReader.Read%2A>       您通常會不需要 distinct MimeReturnReader 或其下階的類別直接。 相反地，當 Wsdl.exe 工具產生用戶端 proxy 程式碼，根據 HTTP GET 或 HTTP POST 的實作，它會套用<xref:System.Web.Services.Protocols.HttpMethodAttribute>每個 Web 方法，並設定屬性的<xref:System.Web.Services.Protocols.HttpMethodAttribute.ReturnFormatter%2A>屬性<xref:System.Web.Services.Protocols.XmlReturnReader>類別，衍生自 MimeReturnReader。</xref:System.Web.Services.Protocols.XmlReturnReader> </xref:System.Web.Services.Protocols.HttpMethodAttribute.ReturnFormatter%2A> </xref:System.Web.Services.Protocols.HttpMethodAttribute>"
  syntax:
    content: 'public abstract class MimeReturnReader : System.Web.Services.Protocols.MimeFormatter'
  inheritance:
  - System.Object
  - System.Web.Services.Protocols.MimeFormatter
  implements: []
  inheritedMembers:
  - System.Web.Services.Protocols.MimeFormatter.CreateInstance(System.Type,System.Object)
  - System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Type,System.Web.Services.Protocols.LogicalMethodInfo)
  - System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)
  - System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Type,System.Web.Services.Protocols.LogicalMethodInfo[])
  - System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Web.Services.Protocols.LogicalMethodInfo[])
  - System.Web.Services.Protocols.MimeFormatter.Initialize(System.Object)
  platform:
  - net462
- uid: System.Web.Services.Protocols.MimeReturnReader.#ctor
  id: '#ctor'
  parent: System.Web.Services.Protocols.MimeReturnReader
  langs:
  - csharp
  name: MimeReturnReader()
  nameWithType: MimeReturnReader.MimeReturnReader()
  fullName: System.Web.Services.Protocols.MimeReturnReader.MimeReturnReader()
  type: Constructor
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "初始化的新執行個體<xref href=&quot;System.Web.Services.Protocols.MimeReturnReader&quot;></xref>類別。"
  syntax:
    content: protected MimeReturnReader ();
    parameters: []
  overload: System.Web.Services.Protocols.MimeReturnReader.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.MimeReturnReader.Read(System.Net.WebResponse,System.IO.Stream)
  id: Read(System.Net.WebResponse,System.IO.Stream)
  parent: System.Web.Services.Protocols.MimeReturnReader
  langs:
  - csharp
  name: Read(WebResponse,Stream)
  nameWithType: MimeReturnReader.Read(WebResponse,Stream)
  fullName: System.Web.Services.Protocols.MimeReturnReader.Read(WebResponse,Stream)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "在衍生類別中覆寫，將 HTTP 回應還原序列化成 Web 方法傳回值。"
  syntax:
    content: public abstract object Read (System.Net.WebResponse response, System.IO.Stream responseStream);
    parameters:
    - id: response
      type: System.Net.WebResponse
      description: "A<xref:System.Net.WebResponse>物件，其中包含作業的輸出訊息。</xref:System.Net.WebResponse>"
    - id: responseStream
      type: System.IO.Stream
      description: "A <xref:System.IO.Stream>HTTP 回應的主體表示其內容由<xref:System.Net.WebResponse>參數。</xref:System.Net.WebResponse> </xref:System.IO.Stream>"
    return:
      type: System.Object
      description: "HTTP 回應還原序列化成 Web 方法傳回值。"
  overload: System.Web.Services.Protocols.MimeReturnReader.Read*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.Services.Protocols.MimeFormatter
  isExternal: false
  name: System.Web.Services.Protocols.MimeFormatter
- uid: System.Web.Services.Protocols.MimeReturnReader.#ctor
  parent: System.Web.Services.Protocols.MimeReturnReader
  isExternal: false
  name: MimeReturnReader()
  nameWithType: MimeReturnReader.MimeReturnReader()
  fullName: System.Web.Services.Protocols.MimeReturnReader.MimeReturnReader()
- uid: System.Web.Services.Protocols.MimeReturnReader.Read(System.Net.WebResponse,System.IO.Stream)
  parent: System.Web.Services.Protocols.MimeReturnReader
  isExternal: false
  name: Read(WebResponse,Stream)
  nameWithType: MimeReturnReader.Read(WebResponse,Stream)
  fullName: System.Web.Services.Protocols.MimeReturnReader.Read(WebResponse,Stream)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Net.WebResponse
  parent: System.Net
  isExternal: true
  name: WebResponse
  nameWithType: WebResponse
  fullName: System.Net.WebResponse
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Web.Services.Protocols.MimeReturnReader.#ctor*
  parent: System.Web.Services.Protocols.MimeReturnReader
  isExternal: false
  name: MimeReturnReader
  nameWithType: MimeReturnReader.MimeReturnReader
- uid: System.Web.Services.Protocols.MimeReturnReader.Read*
  parent: System.Web.Services.Protocols.MimeReturnReader
  isExternal: false
  name: Read
  nameWithType: MimeReturnReader.Read
