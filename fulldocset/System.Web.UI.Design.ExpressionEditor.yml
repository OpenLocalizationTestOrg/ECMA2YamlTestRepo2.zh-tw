### YamlMime:ManagedReference
items:
- uid: System.Web.UI.Design.ExpressionEditor
  id: ExpressionEditor
  children:
  - System.Web.UI.Design.ExpressionEditor.#ctor
  - System.Web.UI.Design.ExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)
  - System.Web.UI.Design.ExpressionEditor.ExpressionPrefix
  - System.Web.UI.Design.ExpressionEditor.GetExpressionEditor(System.String,System.IServiceProvider)
  - System.Web.UI.Design.ExpressionEditor.GetExpressionEditor(System.Type,System.IServiceProvider)
  - System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)
  langs:
  - csharp
  name: ExpressionEditor
  nameWithType: ExpressionEditor
  fullName: System.Web.UI.Design.ExpressionEditor
  type: Class
  summary: "定義一組用以評估運算式在設計階段，並提供在運算式編輯器 對話方塊中使用視覺化設計主應用程式的運算式編輯器工作表相關聯的控制項屬性的屬性和方法。 這個類別是抽象的。"
  remarks: "視覺化設計工具裝載，例如[!INCLUDE[vsprvslong](~/add/includes/ajax-current-ext-md.md)]使用 ExpressionEditor 類別給使用者，有自訂運算式編輯器工作表，然後評估在設計階段呈現選取的運算式。       當您瀏覽<xref:System.Web.UI.Design.HtmlControlDesigner.Expressions%2A>屬性在設計階段屬性方格控制項的視覺化設計工具會顯示對話方塊，以設定控制項屬性的運算式。</xref:System.Web.UI.Design.HtmlControlDesigner.Expressions%2A> 您可以選取清單運算式前置字元為基礎的運算式型別。 當您從清單中選取運算式前置字元時，視覺化設計工具會使用相關聯的 ExpressionEditor 和<xref:System.Web.UI.Design.ExpressionEditorSheet>物件來設定，評估及轉換為該類型的運算式語法為基礎的運算式字串。</xref:System.Web.UI.Design.ExpressionEditorSheet> 視覺化設計工具設定相關聯的控制項的屬性運算式，，然後再使用評估的運算式結果指派控制項的設計介面上所呈現的屬性值。       靜態<xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A>方法取得與特定運算式前置字元或運算式產生器相關聯的運算式編輯器。</xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A> <xref:System.Web.UI.Design.ExpressionEditor.ExpressionPrefix%2A>ExpressionEditor 物件的屬性會傳回設定的運算式前置字元。</xref:System.Web.UI.Design.ExpressionEditor.ExpressionPrefix%2A> <xref:System.Web.UI.Design.ExpressionEditor.EvaluateExpression%2A>方法評估輸入的運算式字串。</xref:System.Web.UI.Design.ExpressionEditor.EvaluateExpression%2A> <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A>方法會傳回<xref:System.Web.UI.Design.ExpressionEditorSheet>自訂運算式中的屬性運算式對話方塊用來提示的實作。</xref:System.Web.UI.Design.ExpressionEditorSheet> </xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A>       一般而言，若要在設計階段支援新的運算式型別，您定義的唯一運算式前置詞，並提供自訂<xref:System.Web.Compilation.ExpressionBuilder>和 ExpressionEditor 實作。</xref:System.Web.Compilation.ExpressionBuilder> 或者，您可以提供自訂<xref:System.Web.UI.Design.ExpressionEditorSheet>實作可定義用來形成 [運算式] 對話方塊中的運算式的內容。</xref:System.Web.UI.Design.ExpressionEditorSheet>       運算式前置詞會識別自訂運算式型別，並關聯運算式產生器和運算式編輯器的運算式。 當自訂運算式剖析在頁面中時，運算式前置詞用來建立執行個體相關聯的<xref:System.Web.Compilation.ExpressionBuilder>和 ExpressionEditor 類別。</xref:System.Web.Compilation.ExpressionBuilder> 若要使用運算式產生器和運算式編輯器關聯運算式前置字元，套用<xref:System.Web.Compilation.ExpressionEditorAttribute>和<xref:System.Web.Compilation.ExpressionPrefixAttribute>屬性加入自訂<xref:System.Web.Compilation.ExpressionBuilder>類別，並設定運算式產生器中運算式前置字元`expressionBuilders`Web 組態檔中的項目。</xref:System.Web.Compilation.ExpressionBuilder> </xref:System.Web.Compilation.ExpressionPrefixAttribute> </xref:System.Web.Compilation.ExpressionEditorAttribute> 前置詞，則不需要，但強烈建議。"
  example:
  - "The following code example demonstrates how to derive from the ExpressionEditor class to define a custom expression editor.  \n  \n [!code-cs[CustomExpressionEditor#1](~/add/codesnippet/csharp/t-system.web.ui.design.e_0_1.cs)]"
  syntax:
    content: public abstract class ExpressionEditor
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.Design.ExpressionEditor.#ctor
  id: '#ctor'
  parent: System.Web.UI.Design.ExpressionEditor
  langs:
  - csharp
  name: ExpressionEditor()
  nameWithType: ExpressionEditor.ExpressionEditor()
  fullName: System.Web.UI.Design.ExpressionEditor.ExpressionEditor()
  type: Constructor
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "初始化的新執行個體<xref href=&quot;System.Web.UI.Design.ExpressionEditor&quot;></xref>類別。"
  remarks: "因為<xref:System.Web.UI.Design.ExpressionEditor>類別是抽象的您無法建立的執行個體<xref:System.Web.UI.Design.ExpressionEditor>類別直接使用 ExpressionEditor 建構函式。</xref:System.Web.UI.Design.ExpressionEditor> </xref:System.Web.UI.Design.ExpressionEditor>"
  syntax:
    content: protected ExpressionEditor ();
    parameters: []
  overload: System.Web.UI.Design.ExpressionEditor.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Design.ExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)
  id: EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)
  parent: System.Web.UI.Design.ExpressionEditor
  langs:
  - csharp
  name: EvaluateExpression(String,Object,Type,IServiceProvider)
  nameWithType: ExpressionEditor.EvaluateExpression(String,Object,Type,IServiceProvider)
  fullName: System.Web.UI.Design.ExpressionEditor.EvaluateExpression(String,Object,Type,IServiceProvider)
  type: Method
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "評估的運算式字串並提供設計階段值的控制項屬性。"
  remarks: "視覺化設計工具主應用程式使用 EvaluateExpression 方法來評估運算式，並提供設計階段相關聯的控制項屬性值。       視覺化設計工具使用<xref:System.Web.Compilation.ExpressionBuilder.ParseExpression%2A?displayProperty=fullName>方法來剖析的運算式字串在設計階段，然後呼叫 EvaluateExpression 方法，以剖析的運算式資料。</xref:System.Web.Compilation.ExpressionBuilder.ParseExpression%2A?displayProperty=fullName> 視覺化設計工具可用於評估的運算式結果指派控制項的設計介面上所呈現的屬性值。"
  syntax:
    content: public abstract object EvaluateExpression (string expression, object parseTimeData, Type propertyType, IServiceProvider serviceProvider);
    parameters:
    - id: expression
      type: System.String
      description: "要評估的運算式字串。 運算式不包含運算式前置字元。"
    - id: parseTimeData
      type: System.Object
      description: "物件，其中包含其他剖析的資訊來評估`expression`。 這通常是由提供運算式產生器。"
    - id: propertyType
      type: System.Type
      description: "要控制屬性的型別`expression`繫結。"
    - id: serviceProvider
      type: System.IServiceProvider
      description: "用來取得額外的設計階段服務設計工具主應用程式所提供的服務提供者實作。"
    return:
      type: System.Object
      description: "如果運算式評估成功，評估的運算式字串，所參考的物件否則， <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.Design.ExpressionEditor.EvaluateExpression*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Design.ExpressionEditor.ExpressionPrefix
  id: ExpressionPrefix
  parent: System.Web.UI.Design.ExpressionEditor
  langs:
  - csharp
  name: ExpressionPrefix
  nameWithType: ExpressionEditor.ExpressionPrefix
  fullName: System.Web.UI.Design.ExpressionEditor.ExpressionPrefix
  type: Property
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "取得運算式前置詞，以識別運算式編輯器實作所支援的運算式字串。"
  remarks: "運算式前置詞會識別自訂運算式型別，並關聯運算式產生器和運算式編輯器的運算式。 當自訂運算式剖析在頁面中時，運算式前置詞用來建立執行個體相關聯的<xref:System.Web.Compilation.ExpressionBuilder>和<xref:System.Web.UI.Design.ExpressionEditor>類別。</xref:System.Web.UI.Design.ExpressionEditor> </xref:System.Web.Compilation.ExpressionBuilder> 若要使用運算式產生器和運算式編輯器關聯運算式前置字元，套用<xref:System.Web.Compilation.ExpressionEditorAttribute>和<xref:System.Web.Compilation.ExpressionPrefixAttribute>屬性加入自訂<xref:System.Web.Compilation.ExpressionBuilder>類別，並設定運算式產生器中運算式前置字元`expressionBuilders`Web 組態檔中的項目。</xref:System.Web.Compilation.ExpressionBuilder> </xref:System.Web.Compilation.ExpressionPrefixAttribute> </xref:System.Web.Compilation.ExpressionEditorAttribute>       一般而言，衍生的類別進行覆寫 ExpressionPrefix 屬性。 基底<xref:System.Web.UI.Design.ExpressionEditor>類別設定為基礎的 ExpressionPrefix 值<xref:System.Web.Compilation.ExpressionPrefixAttribute>屬性相關聯之<xref:System.Web.Compilation.ExpressionBuilder>物件。</xref:System.Web.Compilation.ExpressionBuilder> </xref:System.Web.Compilation.ExpressionPrefixAttribute> </xref:System.Web.UI.Design.ExpressionEditor>"
  syntax:
    content: public string ExpressionPrefix { get; }
    return:
      type: System.String
      description: "字串，表示前置詞，衍生自的類別所支援的運算式<xref href=&quot;System.Web.UI.Design.ExpressionEditor&quot;> </xref>，否則為空字串 (&quot;&quot;)，如果運算式編輯器並沒有相關聯的運算式前置詞。"
  overload: System.Web.UI.Design.ExpressionEditor.ExpressionPrefix*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Design.ExpressionEditor.GetExpressionEditor(System.String,System.IServiceProvider)
  id: GetExpressionEditor(System.String,System.IServiceProvider)
  parent: System.Web.UI.Design.ExpressionEditor
  langs:
  - csharp
  name: GetExpressionEditor(String,IServiceProvider)
  nameWithType: ExpressionEditor.GetExpressionEditor(String,IServiceProvider)
  fullName: System.Web.UI.Design.ExpressionEditor.GetExpressionEditor(String,IServiceProvider)
  type: Method
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "傳回<xref href=&quot;System.Web.UI.Design.ExpressionEditor&quot;></xref>與指定的運算式前置詞相關聯的實作。"
  remarks: "使用靜態<xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A>方法多載，來尋找<xref:System.Web.UI.Design.ExpressionEditor>與特定運算式前置字元或運算式產生器類型相關聯的物件。</xref:System.Web.UI.Design.ExpressionEditor> </xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A>       對於每個自訂運算式型別，運算式前置詞會識別相關聯的運算式產生器和運算式編輯器。 當自訂運算式剖析在頁面中時，運算式前置詞用來建立執行個體相關聯的<xref:System.Web.Compilation.ExpressionBuilder>和<xref:System.Web.UI.Design.ExpressionEditor>類別。</xref:System.Web.UI.Design.ExpressionEditor> </xref:System.Web.Compilation.ExpressionBuilder>       若要使用運算式產生器和運算式編輯器關聯運算式前置字元，套用<xref:System.Web.Compilation.ExpressionEditorAttribute>和<xref:System.Web.Compilation.ExpressionPrefixAttribute>屬性加入自訂<xref:System.Web.Compilation.ExpressionBuilder>類別，並設定運算式產生器中運算式前置字元`expressionBuilders`Web 組態檔中的項目。</xref:System.Web.Compilation.ExpressionBuilder> </xref:System.Web.Compilation.ExpressionPrefixAttribute> </xref:System.Web.Compilation.ExpressionEditorAttribute>       若要尋找運算式前置詞相關聯的運算式編輯器<xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A>方法會列舉可用<xref:System.Web.Compilation.ExpressionBuilder>實作是否有符合的前置詞。</xref:System.Web.Compilation.ExpressionBuilder> </xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A> <xref:System.Web.Compilation.ExpressionBuilder>實作可在設定`expressionBuilders`Web 組態檔區段。</xref:System.Web.Compilation.ExpressionBuilder> 如果有的話<xref:System.Web.Compilation.ExpressionBuilder>實作定義運算式前置字元<xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A>方法會傳回中所指定的型別<xref:System.Web.Compilation.ExpressionEditorAttribute>屬性<xref:System.Web.Compilation.ExpressionBuilder>中繼資料。</xref:System.Web.Compilation.ExpressionBuilder> </xref:System.Web.Compilation.ExpressionEditorAttribute> </xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A> </xref:System.Web.Compilation.ExpressionBuilder>"
  syntax:
    content: public static System.Web.UI.Design.ExpressionEditor GetExpressionEditor (string expressionPrefix, IServiceProvider serviceProvider);
    parameters:
    - id: expressionPrefix
      type: System.String
      description: "運算式前置字元，用來尋找相關聯的運算式編輯器。"
    - id: serviceProvider
      type: System.IServiceProvider
      description: "用來取得額外的設計階段服務設計工具主應用程式所提供的服務提供者實作。"
    return:
      type: System.Web.UI.Design.ExpressionEditor
      description: "<xref href=&quot;System.Web.UI.Design.ExpressionEditor&quot;> </xref>與相關聯的實作<code> expressionPrefix </code>，否則<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>，如果<code> expressionPrefix </code>未定義或無法與相關聯<xref href=&quot;System.Web.UI.Design.ExpressionEditor&quot;> </xref>。"
  overload: System.Web.UI.Design.ExpressionEditor.GetExpressionEditor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serviceProvider</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.Design.ExpressionEditor.GetExpressionEditor(System.Type,System.IServiceProvider)
  id: GetExpressionEditor(System.Type,System.IServiceProvider)
  parent: System.Web.UI.Design.ExpressionEditor
  langs:
  - csharp
  name: GetExpressionEditor(Type,IServiceProvider)
  nameWithType: ExpressionEditor.GetExpressionEditor(Type,IServiceProvider)
  fullName: System.Web.UI.Design.ExpressionEditor.GetExpressionEditor(Type,IServiceProvider)
  type: Method
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "傳回<xref href=&quot;System.Web.UI.Design.ExpressionEditor&quot;></xref>與指定的運算式產生器類型相關聯的實作。"
  remarks: "使用靜態<xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A>多載來尋找<xref:System.Web.UI.Design.ExpressionEditor>與特定運算式前置字元或運算式產生器類型相關聯的物件。</xref:System.Web.UI.Design.ExpressionEditor> </xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A>       對於每個自訂運算式型別，運算式前置詞會識別相關聯的運算式產生器和運算式編輯器。 當自訂運算式剖析在頁面中時，運算式前置詞用來建立執行個體相關聯的<xref:System.Web.Compilation.ExpressionBuilder>和<xref:System.Web.UI.Design.ExpressionEditor>類別。</xref:System.Web.UI.Design.ExpressionEditor> </xref:System.Web.Compilation.ExpressionBuilder>       若要使用運算式產生器和運算式編輯器關聯運算式前置字元，套用<xref:System.Web.Compilation.ExpressionEditorAttribute>和<xref:System.Web.Compilation.ExpressionPrefixAttribute>屬性加入自訂<xref:System.Web.Compilation.ExpressionBuilder>類別，並設定運算式產生器中運算式前置字元`expressionBuilders`Web 組態檔中的項目。</xref:System.Web.Compilation.ExpressionBuilder> </xref:System.Web.Compilation.ExpressionPrefixAttribute> </xref:System.Web.Compilation.ExpressionEditorAttribute>       <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A>方法會列舉可用<xref:System.Web.Compilation.ExpressionBuilder>找出實作`expressionBuilderType`。</xref:System.Web.Compilation.ExpressionBuilder> </xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A> <xref:System.Web.Compilation.ExpressionBuilder>實作可在設定`expressionBuilders`Web 組態檔區段。</xref:System.Web.Compilation.ExpressionBuilder> 如果`expressionBuilderType`找到可用的集中<xref:System.Web.Compilation.ExpressionBuilder>實作，<xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A>方法會傳回中所指定的型別<xref:System.Web.Compilation.ExpressionEditorAttribute>屬性<xref:System.Web.Compilation.ExpressionBuilder>中繼資料。</xref:System.Web.Compilation.ExpressionBuilder> </xref:System.Web.Compilation.ExpressionEditorAttribute> </xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A> </xref:System.Web.Compilation.ExpressionBuilder>"
  syntax:
    content: public static System.Web.UI.Design.ExpressionEditor GetExpressionEditor (Type expressionBuilderType, IServiceProvider serviceProvider);
    parameters:
    - id: expressionBuilderType
      type: System.Type
      description: "衍生的運算式產生器類別，用來尋找相關聯的運算式編輯器的型別。"
    - id: serviceProvider
      type: System.IServiceProvider
      description: "用來取得額外的設計階段服務設計工具主應用程式所提供的服務提供者實作。"
    return:
      type: System.Web.UI.Design.ExpressionEditor
      description: "<xref href=&quot;System.Web.UI.Design.ExpressionEditor&quot;> </xref>與相關聯的實作<code> expressionBuilderType </code>，否則<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>，如果<code> expressionBuilderType </code>找不到或已經沒有相關<xref href=&quot;System.Web.UI.Design.ExpressionEditor&quot;> </xref>。"
  overload: System.Web.UI.Design.ExpressionEditor.GetExpressionEditor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>expressionBuilderType</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>serviceProvider</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."
  platform:
  - net462
- uid: System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)
  id: GetExpressionEditorSheet(System.String,System.IServiceProvider)
  parent: System.Web.UI.Design.ExpressionEditor
  langs:
  - csharp
  name: GetExpressionEditorSheet(String,IServiceProvider)
  nameWithType: ExpressionEditor.GetExpressionEditorSheet(String,IServiceProvider)
  fullName: System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(String,IServiceProvider)
  type: Method
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "傳回與目前的運算式編輯器相關聯的運算式編輯器工作表。"
  remarks: "GetExpressionEditorSheet 方法會傳回<xref:System.Web.UI.Design.ExpressionEditorSheet>實作來定義結合以形成自訂運算式的字串。</xref:System.Web.UI.Design.ExpressionEditorSheet> 視覺化設計工具可用於提示輸入的自訂運算式中結合的一或多個字串的運算式編輯器工作表。 基底類別方法會傳回運算式中使用單一的輸入的字串的預設運算式編輯器表。 運算式編輯器工作表定義運算式的屬性方格。 因此，運算式編輯器所公開的屬性會變成可以在對話方塊中的運算式定義的屬性。       類別衍生自<xref:System.Web.UI.Design.ExpressionEditor>選擇性類別 」 可以覆寫 GetExpressionEditorSheet 方法以提供自訂運算式編輯器工作表。</xref:System.Web.UI.Design.ExpressionEditor> 自訂運算式編輯器工作表可以讓多個屬性，結合在一起以構成運算式字串的設計階段輸入。       例如，<xref:System.Web.UI.Design.ResourceExpressionEditor>類別衍生自<xref:System.Web.UI.Design.ExpressionEditor>類別，並提供用於評估和關聯的控制項屬性中的資源字串參考，在設計階段實作。</xref:System.Web.UI.Design.ExpressionEditor> </xref:System.Web.UI.Design.ResourceExpressionEditor> <xref:System.Web.Compilation.ResourceExpressionBuilder>類別是運算式前置詞相關聯`Resources`和<xref:System.Web.UI.Design.ResourceExpressionEditor>實作。</xref:System.Web.UI.Design.ResourceExpressionEditor> </xref:System.Web.Compilation.ResourceExpressionBuilder> <xref:System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet%2A?displayProperty=fullName>方法會傳回<xref:System.Web.UI.Design.ResourceExpressionEditorSheet>，其定義的個別屬性，以形成資源參考運算式。</xref:System.Web.UI.Design.ResourceExpressionEditorSheet> </xref:System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet%2A?displayProperty=fullName>"
  syntax:
    content: public virtual System.Web.UI.Design.ExpressionEditorSheet GetExpressionEditorSheet (string expression, IServiceProvider serviceProvider);
    parameters:
    - id: expression
      type: System.String
      description: "設定用來初始化運算式編輯器工作表的控制項屬性的運算式字串。"
    - id: serviceProvider
      type: System.IServiceProvider
      description: "用來取得額外的設計階段服務設計工具主應用程式所提供的服務提供者實作。"
    return:
      type: System.Web.UI.Design.ExpressionEditorSheet
      description: "<xref href=&quot;System.Web.UI.Design.ExpressionEditorSheet&quot;> </xref> ，定義自訂運算式屬性。"
  overload: System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.UI.Design.ExpressionEditor.#ctor
  parent: System.Web.UI.Design.ExpressionEditor
  isExternal: false
  name: ExpressionEditor()
  nameWithType: ExpressionEditor.ExpressionEditor()
  fullName: System.Web.UI.Design.ExpressionEditor.ExpressionEditor()
- uid: System.Web.UI.Design.ExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)
  parent: System.Web.UI.Design.ExpressionEditor
  isExternal: false
  name: EvaluateExpression(String,Object,Type,IServiceProvider)
  nameWithType: ExpressionEditor.EvaluateExpression(String,Object,Type,IServiceProvider)
  fullName: System.Web.UI.Design.ExpressionEditor.EvaluateExpression(String,Object,Type,IServiceProvider)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: System.Web.UI.Design.ExpressionEditor.ExpressionPrefix
  parent: System.Web.UI.Design.ExpressionEditor
  isExternal: false
  name: ExpressionPrefix
  nameWithType: ExpressionEditor.ExpressionPrefix
  fullName: System.Web.UI.Design.ExpressionEditor.ExpressionPrefix
- uid: System.Web.UI.Design.ExpressionEditor.GetExpressionEditor(System.String,System.IServiceProvider)
  parent: System.Web.UI.Design.ExpressionEditor
  isExternal: false
  name: GetExpressionEditor(String,IServiceProvider)
  nameWithType: ExpressionEditor.GetExpressionEditor(String,IServiceProvider)
  fullName: System.Web.UI.Design.ExpressionEditor.GetExpressionEditor(String,IServiceProvider)
- uid: System.Web.UI.Design.ExpressionEditor
  parent: System.Web.UI.Design
  isExternal: false
  name: ExpressionEditor
  nameWithType: ExpressionEditor
  fullName: System.Web.UI.Design.ExpressionEditor
- uid: System.Web.UI.Design.ExpressionEditor.GetExpressionEditor(System.Type,System.IServiceProvider)
  parent: System.Web.UI.Design.ExpressionEditor
  isExternal: false
  name: GetExpressionEditor(Type,IServiceProvider)
  nameWithType: ExpressionEditor.GetExpressionEditor(Type,IServiceProvider)
  fullName: System.Web.UI.Design.ExpressionEditor.GetExpressionEditor(Type,IServiceProvider)
- uid: System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)
  parent: System.Web.UI.Design.ExpressionEditor
  isExternal: false
  name: GetExpressionEditorSheet(String,IServiceProvider)
  nameWithType: ExpressionEditor.GetExpressionEditorSheet(String,IServiceProvider)
  fullName: System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(String,IServiceProvider)
- uid: System.Web.UI.Design.ExpressionEditorSheet
  parent: System.Web.UI.Design
  isExternal: false
  name: ExpressionEditorSheet
  nameWithType: ExpressionEditorSheet
  fullName: System.Web.UI.Design.ExpressionEditorSheet
- uid: System.Web.UI.Design.ExpressionEditor.#ctor*
  parent: System.Web.UI.Design.ExpressionEditor
  isExternal: false
  name: ExpressionEditor
  nameWithType: ExpressionEditor.ExpressionEditor
- uid: System.Web.UI.Design.ExpressionEditor.EvaluateExpression*
  parent: System.Web.UI.Design.ExpressionEditor
  isExternal: false
  name: EvaluateExpression
  nameWithType: ExpressionEditor.EvaluateExpression
- uid: System.Web.UI.Design.ExpressionEditor.ExpressionPrefix*
  parent: System.Web.UI.Design.ExpressionEditor
  isExternal: false
  name: ExpressionPrefix
  nameWithType: ExpressionEditor.ExpressionPrefix
- uid: System.Web.UI.Design.ExpressionEditor.GetExpressionEditor*
  parent: System.Web.UI.Design.ExpressionEditor
  isExternal: false
  name: GetExpressionEditor
  nameWithType: ExpressionEditor.GetExpressionEditor
- uid: System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet*
  parent: System.Web.UI.Design.ExpressionEditor
  isExternal: false
  name: GetExpressionEditorSheet
  nameWithType: ExpressionEditor.GetExpressionEditorSheet
