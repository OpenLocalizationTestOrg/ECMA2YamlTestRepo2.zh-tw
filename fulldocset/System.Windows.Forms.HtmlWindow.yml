### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.HtmlWindow
  id: HtmlWindow
  children:
  - System.Windows.Forms.HtmlWindow.Alert(System.String)
  - System.Windows.Forms.HtmlWindow.AttachEventHandler(System.String,System.EventHandler)
  - System.Windows.Forms.HtmlWindow.Close
  - System.Windows.Forms.HtmlWindow.Confirm(System.String)
  - System.Windows.Forms.HtmlWindow.DetachEventHandler(System.String,System.EventHandler)
  - System.Windows.Forms.HtmlWindow.Document
  - System.Windows.Forms.HtmlWindow.DomWindow
  - System.Windows.Forms.HtmlWindow.Equals(System.Object)
  - System.Windows.Forms.HtmlWindow.Error
  - System.Windows.Forms.HtmlWindow.Focus
  - System.Windows.Forms.HtmlWindow.Frames
  - System.Windows.Forms.HtmlWindow.GetHashCode
  - System.Windows.Forms.HtmlWindow.GotFocus
  - System.Windows.Forms.HtmlWindow.History
  - System.Windows.Forms.HtmlWindow.IsClosed
  - System.Windows.Forms.HtmlWindow.Load
  - System.Windows.Forms.HtmlWindow.LostFocus
  - System.Windows.Forms.HtmlWindow.MoveTo(System.Drawing.Point)
  - System.Windows.Forms.HtmlWindow.MoveTo(System.Int32,System.Int32)
  - System.Windows.Forms.HtmlWindow.Name
  - System.Windows.Forms.HtmlWindow.Navigate(System.String)
  - System.Windows.Forms.HtmlWindow.Navigate(System.Uri)
  - System.Windows.Forms.HtmlWindow.op_Equality(System.Windows.Forms.HtmlWindow,System.Windows.Forms.HtmlWindow)
  - System.Windows.Forms.HtmlWindow.op_Inequality(System.Windows.Forms.HtmlWindow,System.Windows.Forms.HtmlWindow)
  - System.Windows.Forms.HtmlWindow.Open(System.String,System.String,System.String,System.Boolean)
  - System.Windows.Forms.HtmlWindow.Open(System.Uri,System.String,System.String,System.Boolean)
  - System.Windows.Forms.HtmlWindow.Opener
  - System.Windows.Forms.HtmlWindow.OpenNew(System.String,System.String)
  - System.Windows.Forms.HtmlWindow.OpenNew(System.Uri,System.String)
  - System.Windows.Forms.HtmlWindow.Parent
  - System.Windows.Forms.HtmlWindow.Position
  - System.Windows.Forms.HtmlWindow.Prompt(System.String,System.String)
  - System.Windows.Forms.HtmlWindow.RemoveFocus
  - System.Windows.Forms.HtmlWindow.Resize
  - System.Windows.Forms.HtmlWindow.ResizeTo(System.Drawing.Size)
  - System.Windows.Forms.HtmlWindow.ResizeTo(System.Int32,System.Int32)
  - System.Windows.Forms.HtmlWindow.Scroll
  - System.Windows.Forms.HtmlWindow.ScrollTo(System.Drawing.Point)
  - System.Windows.Forms.HtmlWindow.ScrollTo(System.Int32,System.Int32)
  - System.Windows.Forms.HtmlWindow.Size
  - System.Windows.Forms.HtmlWindow.StatusBarText
  - System.Windows.Forms.HtmlWindow.Unload
  - System.Windows.Forms.HtmlWindow.Url
  - System.Windows.Forms.HtmlWindow.WindowFrameElement
  langs:
  - csharp
  name: HtmlWindow
  nameWithType: HtmlWindow
  fullName: System.Windows.Forms.HtmlWindow
  type: Class
  summary: "代表邏輯視窗包含一個或多個執行個體<xref href=&quot;System.Windows.Forms.HtmlDocument&quot;> </xref>。"
  remarks: "不應與在 Windows Form 或 Win32 API; 視窗的概念混淆 HtmlWindow沒有任何`HWND`或類似 Windows 資源的直接對應到 HtmlWindow 的執行個體。 相反地，HtmlWindow 會提供高層級描述文件的位置上使用者的畫面上，以及利用和對話方塊提示使用者以互動的方法。 HtmlWindow 做為網頁文件和它的中繼資料，例如文件的位置和 Web 瀏覽器功能的邏輯容器。       Web 網頁組成單一文件，或`FRAMESET`包含一或多個`FRAME`項目，其中每個裝載它自己的文件。 Web 開發人員使用框架組顯示邏輯相關的網頁以並排方式 （例如，瀏覽頁面旁邊的內容頁面）。 當頁面組成單一文件時，您可以存取透過<xref:System.Windows.Forms.HtmlWindow.Document%2A>HtmlWindow; 如果網頁使用畫面格的屬性，您可以存取其文件中的透過<xref:System.Windows.Forms.HtmlWindow.Frames%2A>集合，其中包含一或多個 HtmlWindow 物件。</xref:System.Windows.Forms.HtmlWindow.Frames%2A> </xref:System.Windows.Forms.HtmlWindow.Document%2A>       當您的主機<xref:System.Windows.Forms.WebBrowser>控制項，您可以在 Windows Form 應用程式中，選擇與使用標準 Windows Form 的類別，例如使用者互動<xref:System.Windows.Forms.Form>或<xref:System.Windows.Forms.MessageBox>，或者您可以使用方法上 HtmlWindow 為此用途而定義。</xref:System.Windows.Forms.MessageBox> </xref:System.Windows.Forms.Form> </xref:System.Windows.Forms.WebBrowser> <xref:System.Windows.Forms.HtmlWindow.Alert%2A>方法提供簡單的對話方塊與自訂文字和**確定**按鈕。<xref:System.Windows.Forms.HtmlWindow.Prompt%2A>呈現給使用者，企業自訂文字，以及文字輸入的欄位和<xref:System.Windows.Forms.HtmlWindow.Confirm%2A>顯示對話方塊，自訂文字行和**確定**和**取消**按鈕。</xref:System.Windows.Forms.HtmlWindow.Confirm%2A> </xref:System.Windows.Forms.HtmlWindow.Prompt%2A> </xref:System.Windows.Forms.HtmlWindow.Alert%2A>       您可以使用 HtmlWindow 開啟新視窗包含新的文件。 <xref:System.Windows.Forms.HtmlWindow.Open%2A>指定的 URL 載入具名視窗中，如果不存在，請建立它，而<xref:System.Windows.Forms.HtmlWindow.OpenNew%2A>一律會開啟新建立的視窗中的 URL。</xref:System.Windows.Forms.HtmlWindow.OpenNew%2A></xref:System.Windows.Forms.HtmlWindow.Open%2A>"
  example:
  - "The following code example contains two methods. The first opens a URL in a window named `displayWindow`, which it creates with a status bar displayed. The second opens another URL in the same window, but specifies that only the location bar should be displayed. Notice that the dimensions of the window and the controls that are displayed depends on which URL is opened first. The code example requires that your form contains a <xref:System.Windows.Forms.WebBrowser> control named `WebBrowser1`.  \n  \n [!code-vb[System.Windows.Forms.HtmlWindow#13](~/add/codesnippet/visualbasic/HtmlWindowProject/Form1.vb#13)]\n [!code-cs[System.Windows.Forms.HtmlWindow#13](~/add/codesnippet/csharp/HtmlWindowProjectCSharp/Form1.cs#13)]"
  syntax:
    content: public sealed class HtmlWindow
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlWindow.Alert(System.String)
  id: Alert(System.String)
  parent: System.Windows.Forms.HtmlWindow
  langs:
  - csharp
  name: Alert(String)
  nameWithType: HtmlWindow.Alert(String)
  fullName: System.Windows.Forms.HtmlWindow.Alert(String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "顯示訊息方塊。"
  remarks: "<xref:System.Windows.Forms.MessageBox>類別提供了功能更強大的版本之警示的方法。</xref:System.Windows.Forms.MessageBox>       雖然警示接受 Unicode 文字，做為輸入，Internet Explorer 指令碼提示不會顯示非拉丁語言文字適當地在 Windows 95、 Windows 98、 Windows ME 或 Windows NT 由於作業系統限制。 如需詳細資訊，請參閱[資訊︰ Internet Explorer 指令碼會提示和 MBCS/Unicode](http://support.microsoft.com/default.aspx?scid=kb;en-us;211147)。"
  syntax:
    content: public void Alert (string message);
    parameters:
    - id: message
      type: System.String
      description: "<xref:System.String>要顯示在訊息方塊。</xref:System.String>"
  overload: System.Windows.Forms.HtmlWindow.Alert*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlWindow.AttachEventHandler(System.String,System.EventHandler)
  id: AttachEventHandler(System.String,System.EventHandler)
  parent: System.Windows.Forms.HtmlWindow
  langs:
  - csharp
  name: AttachEventHandler(String,EventHandler)
  nameWithType: HtmlWindow.AttachEventHandler(String,EventHandler)
  fullName: System.Windows.Forms.HtmlWindow.AttachEventHandler(String,EventHandler)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "將具名的 HTML DOM 事件的事件處理常式。"
  remarks: "您不應該附加至 HTML 文件或其物件事件，直到文件已完成載入。 您應該呼叫這個方法最舊的處於<xref:System.Windows.Forms.WebBrowser.DocumentCompleted>事件<xref:System.Windows.Forms.WebBrowser>控制項。</xref:System.Windows.Forms.WebBrowser> </xref:System.Windows.Forms.WebBrowser.DocumentCompleted>"
  syntax:
    content: public void AttachEventHandler (string eventName, EventHandler eventHandler);
    parameters:
    - id: eventName
      type: System.String
      description: "您想要處理事件的名稱。"
    - id: eventHandler
      type: System.EventHandler
      description: "處理事件的 managed 程式碼參考。"
  overload: System.Windows.Forms.HtmlWindow.AttachEventHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlWindow.Close
  id: Close
  parent: System.Windows.Forms.HtmlWindow
  langs:
  - csharp
  name: Close()
  nameWithType: HtmlWindow.Close()
  fullName: System.Windows.Forms.HtmlWindow.Close()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "關閉視窗。"
  remarks: "使用<xref:System.Windows.Forms.HtmlWindow.IsClosed%2A>屬性來判斷是否視窗已關閉。</xref:System.Windows.Forms.HtmlWindow.IsClosed%2A> 如果視窗已關閉，則這個方法會有任何作用。       當您建立新的 windows 使用<xref:System.Windows.Forms.HtmlWindow.Open%2A>或<xref:System.Windows.Forms.HtmlWindow.OpenNew%2A>，關閉會導致 HTML 文件物件模型，以開啟 Internet Explorer 的新執行個體。</xref:System.Windows.Forms.HtmlWindow.OpenNew%2A> </xref:System.Windows.Forms.HtmlWindow.Open%2A> 如果您不會呼叫關閉所有您已建立的 windows 上，Internet Explorer 的這個執行個體將繼續執行，即使您的應用程式關閉。"
  example:
  - "The following code example opens a window, and closes it if the user has not used it in the past five minutes. The code example was written under the assumption that your form has a <xref:System.Windows.Forms.WebBrowser> control named `WebBrowser1`, a <xref:System.Windows.Forms.Button> named `Button1`, and a <xref:System.Windows.Forms.Timer> class named `Timer1`. To run this example successfully, change the first argument supplied to <xref:System.Windows.Forms.HtmlWindow.OpenNew%2A> to a valid URL.  \n  \n [!code-vb[System.Windows.Forms.HtmlWindow#9](~/add/codesnippet/visualbasic/HtmlWindowProject/Form1.vb#9)]\n [!code-cs[System.Windows.Forms.HtmlWindow#9](~/add/codesnippet/csharp/HtmlWindowProjectCSharp/Form1.cs#9)]"
  syntax:
    content: public void Close ();
    parameters: []
  overload: System.Windows.Forms.HtmlWindow.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlWindow.Confirm(System.String)
  id: Confirm(System.String)
  parent: System.Windows.Forms.HtmlWindow
  langs:
  - csharp
  name: Confirm(String)
  nameWithType: HtmlWindow.Confirm(String)
  fullName: System.Windows.Forms.HtmlWindow.Confirm(String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "顯示對話方塊，使用訊息和按鈕請求是/沒有回應。"
  remarks: "確認顯示強制回應對話方塊。使用者無法存取基礎的 HTML 網頁不先關閉此對話方塊。       確認接受 Unicode 文字，做為輸入，雖然 Internet Explorer 指令碼提示不會顯示非拉丁語言文字適當地在 Windows 95、 Windows 98、 Windows ME 或 Windows NT 由於作業系統限制。 如需詳細資訊，請參閱[資訊︰ Internet Explorer 指令碼會提示和 MBCS/Unicode](http://support.microsoft.com/default.aspx?scid=kb;en-us;211147)。"
  example:
  - "Copy the following HTML and save it into a form called orderForm.htm:  \n  \n `<HTML>`  \n  \n `<BODY>`  \n  \n `<FORM name=\"NewOrderForm\">`  \n  \n `Select Part Type:`  \n  \n `<SELECT name=\"PartType\">`  \n  \n `<OPTION>AZ-3700`  \n  \n `<OPTION>AZ-3701`  \n  \n `<OPTION>AZ-3702`  \n  \n `<SELECT><br>`  \n  \n `Quantity: <INPUT type=\"text\" name=\"PartQty\" size=\"2\" maxsize=\"2\"><br>`  \n  \n `Building/Desk:`  \n  \n `<INPUT type=\"text\" name=\"PartBuilding\" size=\"2\" maxsize=\"2\"> /`  \n  \n `<INPUT type=\"text\" name=\"PartDesk\" size=\"2\" maxsize=\"2\"><p>`  \n  \n `<INPUT type=\"submit\" value=\"Transmit Order\">`  \n  \n `</FORM>`  \n  \n `</BODY>`  \n  \n `</HTML>`  \n  \n The following code example displays a Confirm dialog box when the user submits `NewOrderForm`.  \n  \n [!code-vb[System.Windows.Forms.HtmlWindow#10](~/add/codesnippet/visualbasic/HtmlWindowProject/Form1.vb#10)]\n [!code-cs[System.Windows.Forms.HtmlWindow#10](~/add/codesnippet/csharp/HtmlWindowProjectCSharp/Form1.cs#10)]"
  syntax:
    content: public bool Confirm (string message);
    parameters:
    - id: message
      type: System.String
      description: "要向使用者顯示的文字。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果使用者已按下**是**;<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>如果使用者已按下**否**或關閉此對話方塊。"
  overload: System.Windows.Forms.HtmlWindow.Confirm*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlWindow.DetachEventHandler(System.String,System.EventHandler)
  id: DetachEventHandler(System.String,System.EventHandler)
  parent: System.Windows.Forms.HtmlWindow
  langs:
  - csharp
  name: DetachEventHandler(String,EventHandler)
  nameWithType: HtmlWindow.DetachEventHandler(String,EventHandler)
  fullName: System.Windows.Forms.HtmlWindow.DetachEventHandler(String,EventHandler)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "移除具名的事件處理常式。"
  syntax:
    content: public void DetachEventHandler (string eventName, EventHandler eventHandler);
    parameters:
    - id: eventName
      type: System.String
      description: "您想要處理事件的名稱。"
    - id: eventHandler
      type: System.EventHandler
      description: "處理事件的 managed 程式碼參考。"
  overload: System.Windows.Forms.HtmlWindow.DetachEventHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlWindow.Document
  id: Document
  parent: System.Windows.Forms.HtmlWindow
  langs:
  - csharp
  name: Document
  nameWithType: HtmlWindow.Document
  fullName: System.Windows.Forms.HtmlWindow.Document
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得視窗內包含的 HTML 文件。"
  remarks: "通常，您將存取文件通過<xref:System.Windows.Forms.WebBrowser.Document%2A>屬性<xref:System.Windows.Forms.WebBrowser>控制項。</xref:System.Windows.Forms.WebBrowser> </xref:System.Windows.Forms.WebBrowser.Document%2A> 當您需要存取文件中的使用這個屬性`FRAME`使用<xref:System.Windows.Forms.HtmlWindow.Frames%2A>集合。</xref:System.Windows.Forms.HtmlWindow.Frames%2A>"
  example:
  - "The following code example inspects each document within a page containing frames and creates a table of all of the outgoing hyperlinks from each page for future inspection.  \n  \n [!code-vb[System.Windows.Forms.HtmlWindow#2](~/add/codesnippet/visualbasic/HtmlWindowProject/Form1.vb#2)]\n [!code-cs[System.Windows.Forms.HtmlWindow#2](~/add/codesnippet/csharp/HtmlWindowProjectCSharp/Form1.cs#2)]"
  syntax:
    content: public System.Windows.Forms.HtmlDocument Document { get; }
    return:
      type: System.Windows.Forms.HtmlDocument
      description: "有效的執行個體<xref href=&quot;System.Windows.Forms.HtmlDocument&quot;> </xref>，如果在載入的文件。 如果這個視窗包含`FRAMESET`，或目前已載入任何文件，它會傳回<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Forms.HtmlWindow.Document*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlWindow.DomWindow
  id: DomWindow
  parent: System.Windows.Forms.HtmlWindow
  langs:
  - csharp
  name: DomWindow
  nameWithType: HtmlWindow.DomWindow
  fullName: System.Windows.Forms.HtmlWindow.DomWindow
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得這個類別所包裝的 unmanaged 的介面。"
  remarks: "執行<xref:System.Windows.Forms.HtmlWindow>.</xref:System.Windows.Forms.HtmlWindow>未公開的方法時，用於基礎 unmanaged 的介面指標的文件物件模型 (DOM)       您必須將參考加入 unmanaged MSHTML.dll 才能使用 DomWindow。 如需詳細資訊，請參閱[匯入類型程式庫當成組件](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following code example obtains an `IHTMLWindow2` pointer from a document's window and displays a new document in a modal window.  \n  \n [!code-vb[System.Windows.Forms.HtmlWindow#3](~/add/codesnippet/visualbasic/HtmlWindowProject/Form1.vb#3)]\n [!code-cs[System.Windows.Forms.HtmlWindow#3](~/add/codesnippet/csharp/HtmlWindowProjectCSharp/Form1.cs#3)]"
  syntax:
    content: public object DomWindow { get; }
    return:
      type: System.Object
      description: "物件，可以轉型為<xref uid=&quot;langword_csharp_IHTMLWindow2&quot; name=&quot;IHTMLWindow2&quot; href=&quot;&quot;> </xref>， <xref uid=&quot;langword_csharp_IHTMLWindow3&quot; name=&quot;IHTMLWindow3&quot; href=&quot;&quot;> </xref>，或<xref uid=&quot;langword_csharp_IHTMLWindow4 &quot; name=&quot;IHTMLWindow4 &quot; href=&quot;&quot;></xref>指標。"
  overload: System.Windows.Forms.HtmlWindow.DomWindow*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlWindow.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Windows.Forms.HtmlWindow
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: HtmlWindow.Equals(Object)
  fullName: System.Windows.Forms.HtmlWindow.Equals(Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "測試目前的物件相等的物件。"
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "要測試的物件。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果物件相等。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Forms.HtmlWindow.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlWindow.Error
  id: Error
  parent: System.Windows.Forms.HtmlWindow
  langs:
  - csharp
  name: Error
  nameWithType: HtmlWindow.Error
  fullName: System.Windows.Forms.HtmlWindow.Error
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "發生於視窗內執行的指令碼遇到執行階段錯誤。"
  remarks: "HTML 網頁可以包含指令碼撰寫的程式碼，通常在 JScript 或 VBScript、 網頁載入時執行。 指令碼遇到執行階段錯誤時，就會發生錯誤。 因為指令碼是晚期繫結，也就是說，呼叫對物件不被解析等到執行階段錯誤可以包含參考 null 物件為未定義的屬性或方法呼叫的所有項目。       您可以設定<xref:System.Windows.Forms.HtmlElementErrorEventArgs.Handled%2A>屬性<xref:System.Windows.Forms.HtmlElementErrorEventArgs>設定為 true，以避免自發性錯誤 對話方塊，在 Internet Explorer 中的顯示。</xref:System.Windows.Forms.HtmlElementErrorEventArgs> </xref:System.Windows.Forms.HtmlElementErrorEventArgs.Handled%2A>       如需取消事件反昇和取消事件的預設動作之間的差異的詳細資訊，請參閱[關於 DHTML 物件模型](http://msdn.microsoft.com/library/ms533022.aspx)。"
  example:
  - "The following code example traps the error that results when a script on an HTML page attempts to access an object that is not defined in the document. The page must be fully loaded before the Error event handler is attached, otherwise the example will not work.  \n  \n [!code-vb[System.Windows.Forms.HtmlWindow#16](~/add/codesnippet/visualbasic/HtmlWindowProject/Form1.vb#16)]\n [!code-cs[System.Windows.Forms.HtmlWindow#16](~/add/codesnippet/csharp/HtmlWindowProjectCSharp/Form1.cs#16)]"
  syntax:
    content: public event System.Windows.Forms.HtmlElementErrorEventHandler Error;
    return:
      type: System.Windows.Forms.HtmlElementErrorEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlWindow.Focus
  id: Focus
  parent: System.Windows.Forms.HtmlWindow
  langs:
  - csharp
  name: Focus()
  nameWithType: HtmlWindow.Focus()
  fullName: System.Windows.Forms.HtmlWindow.Focus()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "將焦點放在目前的視窗。"
  remarks: "如果另一個視窗保留焦點呼叫焦點之前，該視窗會失去焦點。       請勿呼叫直到視窗的視窗內的項目上焦點<xref:System.Windows.Forms.HtmlWindow.Load>在引發事件。</xref:System.Windows.Forms.HtmlWindow.Load>"
  syntax:
    content: public void Focus ();
    parameters: []
  overload: System.Windows.Forms.HtmlWindow.Focus*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlWindow.Frames
  id: Frames
  parent: System.Windows.Forms.HtmlWindow
  langs:
  - csharp
  name: Frames
  nameWithType: HtmlWindow.Frames
  fullName: System.Windows.Forms.HtmlWindow.Frames
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得每個參考`FRAME`定義在網頁內的項目。"
  remarks: "A`FRAME`是 windows 內定義一組`FRAMESET`。 `FRAME`可讓裝載單一文件中的多個文件。 每個`FRAME`定義為具有特定資料列和資料行寬度，而且彼此頁面上的位置`FRAME`內定義的 s `FRAMESET`; 目的位置`FRAME`固定的雖然使用者可能有時用來擴張或縮小的滑鼠游標`FRAME`。 `IFRAME`類似於在範圍內，但不是需要鎖定在固定的位置。       框架將包含一個執行個體<xref:System.Windows.Forms.HtmlWindow>每個`FRAME`或`IFRAME`的網頁內所定義。</xref:System.Windows.Forms.HtmlWindow>"
  example:
  - "The following code example inspects each document within a page containing frames and creates a table of all of the outgoing hyperlinks from each page for future inspection.  \n  \n [!code-vb[System.Windows.Forms.HtmlWindow#2](~/add/codesnippet/visualbasic/HtmlWindowProject/Form1.vb#2)]\n [!code-cs[System.Windows.Forms.HtmlWindow#2](~/add/codesnippet/csharp/HtmlWindowProjectCSharp/Form1.cs#2)]"
  syntax:
    content: public System.Windows.Forms.HtmlWindowCollection Frames { get; }
    return:
      type: System.Windows.Forms.HtmlWindowCollection
      description: "<xref href=&quot;System.Windows.Forms.HtmlWindowCollection&quot;> </xref>的文件`FRAME`和`IFRAME`物件。"
  overload: System.Windows.Forms.HtmlWindow.Frames*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlWindow.GetHashCode
  id: GetHashCode
  parent: System.Windows.Forms.HtmlWindow
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: HtmlWindow.GetHashCode()
  fullName: System.Windows.Forms.HtmlWindow.GetHashCode()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "可做為特定類型的雜湊函式。"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "目前的雜湊碼<xref href=&quot;System.Windows.Forms.HtmlWindow&quot;> </xref>。"
  overload: System.Windows.Forms.HtmlWindow.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlWindow.GotFocus
  id: GotFocus
  parent: System.Windows.Forms.HtmlWindow
  langs:
  - csharp
  name: GotFocus
  nameWithType: HtmlWindow.GotFocus
  fullName: System.Windows.Forms.HtmlWindow.GotFocus
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "當目前視窗取得使用者輸入的焦點時發生。"
  remarks: "會針對發生 GotFocus:-中的第一個視窗`FRAMESET`時`FRAMESET`第一次載入。      -`FRAME`的上一次有焦點時含有<xref:System.Windows.Forms.WebBrowser>控制項移到前景。</xref:System.Windows.Forms.WebBrowser>      -A`FRAME`按一下使用者，但前提是使用者所按不會將焦點放在視窗內的項目。       您無法取消 Exit 事件中的預設動作，或防止反昇。 如需取消事件反昇和取消事件的預設動作之間的差異的詳細資訊，請參閱[關於 DHTML 物件模型](http://msdn.microsoft.com/library/ms533022.aspx)。"
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the GotFocus event. This report helps you to learn when the event occurs and can assist you in debugging.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlWindow> named `HtmlWindow1`. Then ensure that the event handler is associated with the GotFocus event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#452](~/add/codesnippet/csharp/e-system.windows.forms.h_19_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#452](~/add/codesnippet/visualbasic/e-system.windows.forms.h_19_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.HtmlElementEventHandler GotFocus;
    return:
      type: System.Windows.Forms.HtmlElementEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlWindow.History
  id: History
  parent: System.Windows.Forms.HtmlWindow
  langs:
  - csharp
  name: History
  nameWithType: HtmlWindow.History
  fullName: System.Windows.Forms.HtmlWindow.History
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得物件，其中包含使用者最近瀏覽的 Url。"
  remarks: "記錄包含已巡覽至目前的視窗中，稱為內的所有 Url*巡覽堆疊*，並提供巡覽回這些文件的方法。"
  syntax:
    content: public System.Windows.Forms.HtmlHistory History { get; }
    return:
      type: System.Windows.Forms.HtmlHistory
      description: "<xref href=&quot;System.Windows.Forms.HtmlHistory&quot;> </xref>目前的視窗。"
  overload: System.Windows.Forms.HtmlWindow.History*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlWindow.IsClosed
  id: IsClosed
  parent: System.Windows.Forms.HtmlWindow
  langs:
  - csharp
  name: IsClosed
  nameWithType: HtmlWindow.IsClosed
  fullName: System.Windows.Forms.HtmlWindow.IsClosed
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得值，指出這個視窗已開啟還是關閉。"
  remarks: "如果<xref:System.Windows.Forms.HtmlWindow>已由使用者或透過呼叫關閉<xref:System.Windows.Forms.HtmlWindow.Close%2A>嘗試瀏覽至新的 URL，或存取視窗的文件的方法，將會產生錯誤。</xref:System.Windows.Forms.HtmlWindow.Close%2A> </xref:System.Windows.Forms.HtmlWindow> 使用這個屬性來判斷它是否安全地呼叫上目前的視窗物件的屬性和方法。"
  example:
  - "The following code example opens a window, and closes it if the user has not used it in the past five minutes. The code example requires that your form has a <xref:System.Windows.Forms.WebBrowser> control named `WebBrowser1`, a <xref:System.Windows.Forms.Button> named `Button1`, and a <xref:System.Windows.Forms.Timer> class named `Timer1`.  \n  \n [!code-vb[System.Windows.Forms.HtmlWindow#8](~/add/codesnippet/visualbasic/HtmlWindowProject/Form1.vb#8)]\n [!code-cs[System.Windows.Forms.HtmlWindow#8](~/add/codesnippet/csharp/HtmlWindowProjectCSharp/Form1.cs#8)]"
  syntax:
    content: public bool IsClosed { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果視窗是在畫面上仍開啟否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Forms.HtmlWindow.IsClosed*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlWindow.Load
  id: Load
  parent: System.Windows.Forms.HtmlWindow
  langs:
  - csharp
  name: Load
  nameWithType: HtmlWindow.Load
  fullName: System.Windows.Forms.HtmlWindow.Load
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "視窗的文件和其所有項目完成初始化時發生。"
  remarks: "載入事件的運作方式類似於<xref:System.Windows.Forms.WebBrowser.DocumentCompleted>事件<xref:System.Windows.Forms.WebBrowser>控制項︰ 它會通知是安全地存取 HTML 文件內的項目。</xref:System.Windows.Forms.WebBrowser> </xref:System.Windows.Forms.WebBrowser.DocumentCompleted>       您無法取消載入事件的預設動作。       如需取消事件反昇和取消事件的預設動作之間的差異的詳細資訊，請參閱[關於 DHTML 物件模型](http://msdn.microsoft.com/library/ms533022.aspx)。"
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the Load event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlWindow> named `HtmlWindow1`. Then ensure that the event handler is associated with the Load event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#453](~/add/codesnippet/csharp/e-system.windows.forms.h_34_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#453](~/add/codesnippet/visualbasic/e-system.windows.forms.h_34_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.HtmlElementEventHandler Load;
    return:
      type: System.Windows.Forms.HtmlElementEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlWindow.LostFocus
  id: LostFocus
  parent: System.Windows.Forms.HtmlWindow
  langs:
  - csharp
  name: LostFocus
  nameWithType: HtmlWindow.LostFocus
  fullName: System.Windows.Forms.HtmlWindow.LostFocus
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "當使用者輸入的焦點離開視窗時發生。"
  remarks: ''
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the LostFocus event. This report helps you to learn when the event occurs and can assist you in debugging.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlWindow> named `HtmlWindow1`. Then ensure that the event handler is associated with the LostFocus event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#454](~/add/codesnippet/csharp/e-system.windows.forms.h_30_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#454](~/add/codesnippet/visualbasic/e-system.windows.forms.h_30_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.HtmlElementEventHandler LostFocus;
    return:
      type: System.Windows.Forms.HtmlElementEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlWindow.MoveTo(System.Drawing.Point)
  id: MoveTo(System.Drawing.Point)
  parent: System.Windows.Forms.HtmlWindow
  langs:
  - csharp
  name: MoveTo(Point)
  nameWithType: HtmlWindow.MoveTo(Point)
  fullName: System.Windows.Forms.HtmlWindow.MoveTo(Point)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "在畫面上，將視窗移至指定的座標。"
  remarks: "您無法使用 MoveTo 移動的視窗移開畫面顯示邊緣這個方法也會提供透過網頁上的指令碼，讓不受信任的指令碼，以呈現隱藏的 windows 不會視為安全。       將會引發 MoveTo<xref:System.UnauthorizedAccessException>如果想要移動的視窗和其父視窗具有不同的最上層網域。</xref:System.UnauthorizedAccessException> 例如，如果您正在裝載<xref:System.Windows.Forms.WebBrowser>控制項指向 a.adatum.com，建立新的視窗使用<xref:System.Windows.Forms.HtmlWindow.OpenNew%2A>顯示 b.adatum.com。</xref:System.Windows.Forms.HtmlWindow.OpenNew%2A> </xref:System.Windows.Forms.WebBrowser> 在此情況下，這兩個視窗會視為是相同的最上層網域的一部分，且不會擲回例外狀況。 不過，如果您呼叫<xref:System.Windows.Forms.HtmlWindow.OpenNew%2A>顯示 www,microsoft.com，兩個視窗現在有不同的最上層網域，而<xref:System.Windows.Forms.HtmlWindow.MoveTo%2A>作業將會導致擲回的例外狀況。</xref:System.Windows.Forms.HtmlWindow.MoveTo%2A> </xref:System.Windows.Forms.HtmlWindow.OpenNew%2A>"
  syntax:
    content: public void MoveTo (System.Drawing.Point point);
    parameters:
    - id: point
      type: System.Drawing.Point
      description: "視窗左上角的 x 和 y 座標。"
  overload: System.Windows.Forms.HtmlWindow.MoveTo*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "嘗試執行這項作業的程式碼並沒有管理此視窗的使用權限。 請參閱 < 備註 > 一節，如需詳細資訊。"
  platform:
  - net462
- uid: System.Windows.Forms.HtmlWindow.MoveTo(System.Int32,System.Int32)
  id: MoveTo(System.Int32,System.Int32)
  parent: System.Windows.Forms.HtmlWindow
  langs:
  - csharp
  name: MoveTo(Int32,Int32)
  nameWithType: HtmlWindow.MoveTo(Int32,Int32)
  fullName: System.Windows.Forms.HtmlWindow.MoveTo(Int32,Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "在畫面上，將視窗移至指定的座標。"
  remarks: "您無法使用<xref:System.Windows.Forms.HtmlWindow.MoveTo%2A>要移動的視窗移開螢幕顯示邊緣; 這個方法也會提供透過網頁上的指令碼，讓不受信任的指令碼，以呈現隱藏的 windows 不會視為安全。</xref:System.Windows.Forms.HtmlWindow.MoveTo%2A>       <xref:System.Windows.Forms.HtmlWindow.MoveTo%2A>將會引發<xref:System.UnauthorizedAccessException>如果想要移動的視窗和其父視窗具有不同的最上層網域。</xref:System.UnauthorizedAccessException></xref:System.Windows.Forms.HtmlWindow.MoveTo%2A> 例如，如果您正在裝載<xref:System.Windows.Forms.WebBrowser>控制項和其指向 a.adatum.com，您建立新的視窗使用<xref:System.Windows.Forms.HtmlWindow.OpenNew%2A>顯示 b.adatum.com。</xref:System.Windows.Forms.HtmlWindow.OpenNew%2A> </xref:System.Windows.Forms.WebBrowser> 在此情況下，這兩個視窗會視為是相同的最上層網域的一部分，且不會擲回例外狀況。 不過，如果您呼叫<xref:System.Windows.Forms.HtmlWindow.OpenNew%2A>顯示 www,microsoft.com，兩個視窗現在會有不同的最上層網域，以及移動作業將會導致擲回的例外狀況。</xref:System.Windows.Forms.HtmlWindow.OpenNew%2A>"
  syntax:
    content: public void MoveTo (int x, int y);
    parameters:
    - id: x
      type: System.Int32
      description: "視窗的左上角 x 座標。"
    - id: y
      type: System.Int32
      description: "視窗的左上角 y 座標。"
  overload: System.Windows.Forms.HtmlWindow.MoveTo*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "嘗試執行這項作業的程式碼並沒有管理此視窗的使用權限。 請參閱 < 備註 > 一節，如需詳細資訊。"
  platform:
  - net462
- uid: System.Windows.Forms.HtmlWindow.Name
  id: Name
  parent: System.Windows.Forms.HtmlWindow
  langs:
  - csharp
  name: Name
  nameWithType: HtmlWindow.Name
  fullName: System.Windows.Forms.HtmlWindow.Name
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得或設定視窗的名稱。"
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "A<xref:System.String>表示名稱。</xref:System.String>"
  overload: System.Windows.Forms.HtmlWindow.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlWindow.Navigate(System.String)
  id: Navigate(System.String)
  parent: System.Windows.Forms.HtmlWindow
  langs:
  - csharp
  name: Navigate(String)
  nameWithType: HtmlWindow.Navigate(String)
  fullName: System.Windows.Forms.HtmlWindow.Navigate(String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "顯示或下載位於指定之 URL 的新內容。"
  remarks: "如果`url`參數指向 HTML 網頁，目前視窗中顯示的頁面將摧毀並取代為新頁面; 任何參考您的應用程式會保留舊的頁面中受管理的 DOM 物件將不再有效。 如果`url`指向 Internet Explorer 無法顯示的資源時，使用者會看到的對話方塊，詢問是否要開啟應用程式，將其儲存至磁碟，或取消下載作業之外的資源。"
  syntax:
    content: public void Navigate (string urlString);
    parameters:
    - id: urlString
      type: System.String
      description: "若要顯示，資源所述的統一資源定位器。"
  overload: System.Windows.Forms.HtmlWindow.Navigate*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlWindow.Navigate(System.Uri)
  id: Navigate(System.Uri)
  parent: System.Windows.Forms.HtmlWindow
  langs:
  - csharp
  name: Navigate(Uri)
  nameWithType: HtmlWindow.Navigate(Uri)
  fullName: System.Windows.Forms.HtmlWindow.Navigate(Uri)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "在目前的視窗顯示新的文件。"
  syntax:
    content: public void Navigate (Uri url);
    parameters:
    - id: url
      type: System.Uri
      description: "為指定的位置， <xref:System.Uri>、 文件或目前的視窗中顯示的物件。</xref:System.Uri>"
  overload: System.Windows.Forms.HtmlWindow.Navigate*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlWindow.op_Equality(System.Windows.Forms.HtmlWindow,System.Windows.Forms.HtmlWindow)
  id: op_Equality(System.Windows.Forms.HtmlWindow,System.Windows.Forms.HtmlWindow)
  parent: System.Windows.Forms.HtmlWindow
  langs:
  - csharp
  name: op_Equality(HtmlWindow,HtmlWindow)
  nameWithType: HtmlWindow.op_Equality(HtmlWindow,HtmlWindow)
  fullName: System.Windows.Forms.HtmlWindow.op_Equality(HtmlWindow,HtmlWindow)
  type: Operator
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "測試兩個<xref href=&quot;System.Windows.Forms.HtmlWindow&quot;></xref>物件是否相等。"
  remarks: "等號比較運算子測試`IUnknown`包裝由所提供的基礎 COM 物件的指標<xref:System.Windows.Forms.HtmlWindow>類別。</xref:System.Windows.Forms.HtmlWindow>"
  syntax:
    content: public static bool op_Equality (System.Windows.Forms.HtmlWindow left, System.Windows.Forms.HtmlWindow right);
    parameters:
    - id: left
      type: System.Windows.Forms.HtmlWindow
      description: "第一個<xref href=&quot;System.Windows.Forms.HtmlWindow&quot;></xref>物件。"
    - id: right
      type: System.Windows.Forms.HtmlWindow
      description: "第二個<xref href=&quot;System.Windows.Forms.HtmlWindow&quot;></xref>物件。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果兩個參數都<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>，或如果兩個項目有相同的基礎 COM 介面; 否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Forms.HtmlWindow.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlWindow.op_Inequality(System.Windows.Forms.HtmlWindow,System.Windows.Forms.HtmlWindow)
  id: op_Inequality(System.Windows.Forms.HtmlWindow,System.Windows.Forms.HtmlWindow)
  parent: System.Windows.Forms.HtmlWindow
  langs:
  - csharp
  name: op_Inequality(HtmlWindow,HtmlWindow)
  nameWithType: HtmlWindow.op_Inequality(HtmlWindow,HtmlWindow)
  fullName: System.Windows.Forms.HtmlWindow.op_Inequality(HtmlWindow,HtmlWindow)
  type: Operator
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "測試兩個<xref uid=&quot;langword_csharp_HtmlWindow&quot; name=&quot;HtmlWindow&quot; href=&quot;&quot;></xref>物件是否不相等。"
  syntax:
    content: public static bool op_Inequality (System.Windows.Forms.HtmlWindow left, System.Windows.Forms.HtmlWindow right);
    parameters:
    - id: left
      type: System.Windows.Forms.HtmlWindow
      description: "第一個<xref href=&quot;System.Windows.Forms.HtmlWindow&quot;></xref>物件。"
    - id: right
      type: System.Windows.Forms.HtmlWindow
      description: "第二個<xref href=&quot;System.Windows.Forms.HtmlWindow&quot;></xref>物件。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果其中一個，但不是兩個物件是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>，或基礎 COM 指標不相符，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Forms.HtmlWindow.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlWindow.Open(System.String,System.String,System.String,System.Boolean)
  id: Open(System.String,System.String,System.String,System.Boolean)
  parent: System.Windows.Forms.HtmlWindow
  langs:
  - csharp
  name: Open(String,String,String,Boolean)
  nameWithType: HtmlWindow.Open(String,String,String,Boolean)
  fullName: System.Windows.Forms.HtmlWindow.Open(String,String,String,Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "在具名視窗中顯示檔案。"
  remarks: "`target`參數可以建立為開啟先前呼叫的結果視窗的名稱。 參數可能也會指向按一下超連結會開啟一個視窗 (`A`項目) 或`FORM`項目，會使用`TARGET`屬性，以在新視窗開啟它的 URL。 下列 HTML 程式碼會開啟新視窗名為`orderWindow`當使用者按一下它︰`<A HREF=&quot;/startOrder.aspx&quot; TARGET=&quot;orderWindow&quot;>Click to Start Order</a>`如果您提供的任何選項`windowOptions`參數，不包含任何選項會自動停用。 換句話說，如果您藉由只指定`windowOptions`您想要的狀態 列，則不顯示功能表、 工具列、 標題、 捲軸等除非您明確啟用它們藉由`windowOptions`。       如果所參考的檔案`url`是 HTML 檔案、 文字檔或其他可以裝載在 Internet Explorer 內的檔案類型將顯示在具名視窗中。 如果檔案無法顯示在 Internet Explorer 內，而且名為目標的視窗不存在，則會開啟只有時間長度仍足以供 Internet Explorer 下載資源;它會立即關閉之後。       當您建立使用來開啟新視窗或<xref:System.Windows.Forms.HtmlWindow.OpenNew%2A>，它會導致 HTML 文件物件模型，以開啟 Internet Explorer 的新執行個體。</xref:System.Windows.Forms.HtmlWindow.OpenNew%2A> 如果您不會呼叫<xref:System.Windows.Forms.HtmlWindow.Close%2A>所有您已建立的 windows 上的 Internet Explorer 的這個執行個體將會繼續執行已結束您的應用程式時，即使。</xref:System.Windows.Forms.HtmlWindow.Close%2A>       如果您要載入的 URL，在現有的視窗中，使用開啟`windowOptions`會被忽略; 維度、 外觀以及第一次開啟一次呼叫所提供它的螢幕位置，將會保留視窗。"
  syntax:
    content: public System.Windows.Forms.HtmlWindow Open (string urlString, string target, string windowOptions, bool replaceEntry);
    parameters:
    - id: urlString
      type: System.String
      description: "統一資源定位器，描述要載入之檔案的位置。"
    - id: target
      type: System.String
      description: "在其中開啟資源的視窗名稱。 這可能是開發人員提供的名稱，或下列特殊值之一︰ `_blank`︰ 開啟`url`在新視窗中。 <xref:System.Windows.Forms.HtmlWindow.OpenNew*>.</xref:System.Windows.Forms.HtmlWindow.OpenNew*>呼叫相同的運作方式       `_media`︰ 開啟`url`媒體列中。       `_parent`︰ 開啟`url`建立目前視窗的視窗。       `_search`︰ 開啟`url`搜尋列中。       `_self`︰ 開啟`url`在目前的視窗。       `_top`︰ 如果針對屬於視窗呼叫`FRAME`項目，開啟`url`視窗裝載其`FRAMESET`。 否則，會與相同`_self`。"
    - id: windowOptions
      type: System.String
      description: "以逗號分隔的字串，其中包含零或多個表單中的下列選項`name=value`。 除了`left`， `top`， `height`，和`width`選項，以取得任意整數，每個選項可接受`yes`或<xref uid=&quot;langword_csharp_1&quot; name=&quot;1&quot; href=&quot;&quot;> </xref>，和`no`或<xref uid=&quot;langword_csharp_0&quot; name=&quot;0&quot; href=&quot;&quot;> </xref>，做為有效的值。       `channelmode`: 已被取代的通道技術 Internet Explorer 4.0 搭配使用。 預設值是`no`。       `directories`︰ 是否視窗應該顯示目錄巡覽按鈕。 預設值是`yes`。       `height`: 視窗的工作區，單位為像素的高度。 最小值為 100。嘗試開啟比這會導致視窗開啟根據 Internet Explorer 的預設值還要小的視窗。       `left`︰ 左方 （x 座標） 位置的視窗中，相對於使用者螢幕左上角像素為單位。 必須是正整數。       `location`︰ 是否要顯示的位址列中，可讓使用者巡覽視窗至新的 URL。 預設值是`yes`。       `menubar`︰ 是否要在新視窗中顯示功能表。 預設值是`yes`。       `resizable`︰ 是否可以調整大小使用者視窗。 預設值是`yes`。       `scrollbars`︰ 視窗是否有水平和垂直捲軸。 預設值是`yes`。       `status`︰ 視窗是否有狀態列底部。 預設值是`yes`。       `titlebar`︰ 是否顯示目前頁面的標題。 此選項設為`no`沒有任何作用中的受管理的應用程式; 標題列一律會出現。       `toolbar`︰ 是否等工具列按鈕**回**，**向前**，和**停止**可見。 預設值是`yes`。       `top`︰ 上方 （y 座標） 位置的視窗中，相對於使用者螢幕左上角像素為單位。 必須是正整數。       `width`︰ 視窗的用戶端區域寬度，單位為像素。 最小值為 100。嘗試開啟比這會導致視窗開啟根據 Internet Explorer 的預設值還要小的視窗。"
    - id: replaceEntry
      type: System.Boolean
      description: "是否`url`取代目前視窗的巡覽記錄中的 URL。 這會影響之方法的作業上<xref href=&quot;System.Windows.Forms.HtmlHistory&quot;></xref>類別。"
    return:
      type: System.Windows.Forms.HtmlWindow
      description: "<xref href=&quot;System.Windows.Forms.HtmlWindow&quot;> </xref>代表新視窗中或之前建立的視窗由名為<code> target </code>參數。"
  overload: System.Windows.Forms.HtmlWindow.Open*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlWindow.Open(System.Uri,System.String,System.String,System.Boolean)
  id: Open(System.Uri,System.String,System.String,System.Boolean)
  parent: System.Windows.Forms.HtmlWindow
  langs:
  - csharp
  name: Open(Uri,String,String,Boolean)
  nameWithType: HtmlWindow.Open(Uri,String,String,Boolean)
  fullName: System.Windows.Forms.HtmlWindow.Open(Uri,String,String,Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "在具名視窗中顯示檔案。"
  remarks: "`target`參數可以建立為開啟先前呼叫的結果視窗的名稱。 參數可能也會指向按一下超連結會開啟一個視窗 (`A`項目) 或`FORM`項目，會使用`TARGET`屬性，以在新視窗開啟它的 URL。 下列 HTML 程式碼會開啟新視窗名為`orderWindow`當使用者按一下它︰`<A HREF=&quot;/startOrder.aspx&quot; TARGET=&quot;orderWindow&quot;>Click to Start Order</a>`如果您提供的任何選項`windowOptions`參數，不包含任何選項會自動停用。 換句話說，如果您藉由只指定`windowOptions`您想要的狀態 列，則不顯示功能表、 工具列、 標題、 捲軸等除非您明確啟用它們藉由`windowOptions`。       如果所參考的檔案`url`是 HTML 檔案、 文字檔或其他可以裝載在 Internet Explorer 內的檔案類型將顯示在具名視窗中。 如果檔案無法顯示在 Internet Explorer 內，而且名為目標的視窗不存在，則會開啟只有時間長度仍足以供 Internet Explorer 下載資源;它會立即關閉之後。       當您建立使用來開啟新視窗或<xref:System.Windows.Forms.HtmlWindow.OpenNew%2A>，它會導致 HTML 文件物件模型，以開啟 Internet Explorer 的新執行個體。</xref:System.Windows.Forms.HtmlWindow.OpenNew%2A> 如果您不會呼叫<xref:System.Windows.Forms.HtmlWindow.Close%2A>所有您已建立的 windows 上的 Internet Explorer 的這個執行個體將會繼續執行已結束您的應用程式時，即使。</xref:System.Windows.Forms.HtmlWindow.Close%2A>       如果您要載入的 URL，在現有的視窗中，使用開啟`windowOptions`會被忽略; 維度、 外觀以及第一次開啟一次呼叫所提供它的螢幕位置，將會保留視窗。"
  example:
  - "The following code example contains two methods:  \n  \n-   The first opens a URL in a window named `displayWindow`, which it creates with a status bar displayed.  \n  \n-   The second opens another URL in the same window, but specifies that only the location bar should be displayed.  \n  \n Notice that the dimensions of the window and the controls that are displayed depends on which URL is opened first. The code example requires that your form contains a <xref:System.Windows.Forms.WebBrowser> control named `WebBrowser1`.  \n  \n [!code-vb[System.Windows.Forms.HtmlWindow#13](~/add/codesnippet/visualbasic/HtmlWindowProject/Form1.vb#13)]\n [!code-cs[System.Windows.Forms.HtmlWindow#13](~/add/codesnippet/csharp/HtmlWindowProjectCSharp/Form1.cs#13)]"
  syntax:
    content: public System.Windows.Forms.HtmlWindow Open (Uri url, string target, string windowOptions, bool replaceEntry);
    parameters:
    - id: url
      type: System.Uri
      description: "統一資源定位器，描述要載入之檔案的位置。"
    - id: target
      type: System.String
      description: "在其中開啟資源的視窗名稱。 這可以是開發人員提供的名稱，或下列特殊值之一︰ `_blank`︰ 開啟`url`在新視窗中。 <xref:System.Windows.Forms.HtmlWindow.OpenNew*>.</xref:System.Windows.Forms.HtmlWindow.OpenNew*>呼叫相同的運作方式       `_media`︰ 開啟`url`媒體列中。       `_parent`︰ 開啟`url`建立目前視窗的視窗。       `_search`︰ 開啟`url`搜尋列中。       `_self`︰ 開啟`url`在目前的視窗。       `_top`︰ 如果針對屬於視窗呼叫`FRAME`項目，開啟`url`視窗裝載其`FRAMESET`。 否則，會與相同`_self`。"
    - id: windowOptions
      type: System.String
      description: "以逗號分隔的字串，其中包含零或多個表單中的下列選項`name=value`。 除了`left`， `top`， `height`，和`width`選項，以取得任意整數，每個選項可接受`yes`或<xref uid=&quot;langword_csharp_1&quot; name=&quot;1&quot; href=&quot;&quot;> </xref>，和`no`或<xref uid=&quot;langword_csharp_0&quot; name=&quot;0&quot; href=&quot;&quot;> </xref>，做為有效的值。       `channelmode`: 已被取代的通道技術 Internet Explorer 4.0 搭配使用。 預設值是`no`。       `directories`︰ 是否視窗應該顯示目錄巡覽按鈕。 預設值是`yes`。       `height`: 視窗的工作區，單位為像素的高度。 最小值為 100。嘗試開啟比這會導致視窗開啟根據 Internet Explorer 的預設值還要小的視窗。       `left`︰ 左方 （x 座標） 位置的視窗中，相對於使用者螢幕左上角像素為單位。 必須是正整數。       `location`︰ 是否要顯示的位址列中，可讓使用者巡覽視窗至新的 URL。 預設值是`yes`。       `menubar`︰ 是否要在新視窗中顯示功能表。 預設值是`yes`。       `resizable`︰ 是否可以調整大小使用者視窗。 預設值是`yes`。       `scrollbars`︰ 視窗是否有水平和垂直捲軸。 預設值是`yes`。       `status`︰ 視窗是否有狀態列底部。 預設值是`yes`。       `titlebar`︰ 是否顯示目前頁面的標題。 此選項設為`no`沒有任何作用中的受管理的應用程式; 標題列一律會出現。       `toolbar`︰ 是否等工具列按鈕**回**，**向前**，和**停止**可見。 預設值是`yes`。       `top`︰ 上方 （y 座標） 位置的視窗中，相對於使用者螢幕左上角像素為單位。 必須是正整數。       `width`︰ 視窗的用戶端區域寬度，單位為像素。 最小值為 100。嘗試開啟比這會導致視窗開啟根據 Internet Explorer 的預設值還要小的視窗。"
    - id: replaceEntry
      type: System.Boolean
      description: "是否`url`取代目前視窗的巡覽記錄中的 URL。 這會影響之方法的作業上<xref href=&quot;System.Windows.Forms.HtmlHistory&quot;></xref>類別。"
    return:
      type: System.Windows.Forms.HtmlWindow
      description: "<xref href=&quot;System.Windows.Forms.HtmlWindow&quot;> </xref>代表新視窗中或之前建立的視窗由名為<code> target </code>參數。"
  overload: System.Windows.Forms.HtmlWindow.Open*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlWindow.Opener
  id: Opener
  parent: System.Windows.Forms.HtmlWindow
  langs:
  - csharp
  name: Opener
  nameWithType: HtmlWindow.Opener
  fullName: System.Windows.Forms.HtmlWindow.Opener
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得開啟目前視窗之視窗的參考。"
  syntax:
    content: public System.Windows.Forms.HtmlWindow Opener { get; }
    return:
      type: System.Windows.Forms.HtmlWindow
      description: "<xref href=&quot;System.Windows.Forms.HtmlWindow&quot;> </xref>呼叫中建立<> *> 或<> *> 方法。 如果視窗不是使用其中一種方法，這個屬性會傳回<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Forms.HtmlWindow.Opener*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlWindow.OpenNew(System.String,System.String)
  id: OpenNew(System.String,System.String)
  parent: System.Windows.Forms.HtmlWindow
  langs:
  - csharp
  name: OpenNew(String,String)
  nameWithType: HtmlWindow.OpenNew(String,String)
  fullName: System.Windows.Forms.HtmlWindow.OpenNew(String,String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "在新視窗中顯示檔案。"
  remarks: "如果所參考的檔案`url`是 HTML 檔案、 文字檔或其他可以裝載在 Internet Explorer 內的檔案類型將顯示在新視窗中。 如果檔案無法顯示在 Internet Explorer 內，則會開啟此視窗只有時間長度仍足以供 Internet Explorer 下載資源;它會立即關閉之後。       當您建立新的 windows 使用<xref:System.Windows.Forms.HtmlWindow.Open%2A>或 OpenNew，導致 HTML 文件物件模型，以開啟 Internet Explorer 的新執行個體。</xref:System.Windows.Forms.HtmlWindow.Open%2A> 如果您不會呼叫<xref:System.Windows.Forms.HtmlWindow.Close%2A>所有您已建立的 windows 上的 Internet Explorer 的這個執行個體將會繼續執行已結束您的應用程式時，即使。</xref:System.Windows.Forms.HtmlWindow.Close%2A>       如果您想要載入先前開啟的視窗中的文件，請參閱<xref:System.Windows.Forms.HtmlWindow.Open%2A>方法。</xref:System.Windows.Forms.HtmlWindow.Open%2A>"
  syntax:
    content: public System.Windows.Forms.HtmlWindow OpenNew (string urlString, string windowOptions);
    parameters:
    - id: urlString
      type: System.String
      description: "統一資源定位器，描述要載入之檔案的位置。"
    - id: windowOptions
      type: System.String
      description: "以逗號分隔的字串，其中包含零或多個表單中的下列選項`name=value`。 請參閱<xref:System.Windows.Forms.HtmlWindow.Open*>有效選項的完整說明。</xref:System.Windows.Forms.HtmlWindow.Open*>"
    return:
      type: System.Windows.Forms.HtmlWindow
      description: "<xref href=&quot;System.Windows.Forms.HtmlWindow&quot;> </xref>代表新視窗。"
  overload: System.Windows.Forms.HtmlWindow.OpenNew*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlWindow.OpenNew(System.Uri,System.String)
  id: OpenNew(System.Uri,System.String)
  parent: System.Windows.Forms.HtmlWindow
  langs:
  - csharp
  name: OpenNew(Uri,String)
  nameWithType: HtmlWindow.OpenNew(Uri,String)
  fullName: System.Windows.Forms.HtmlWindow.OpenNew(Uri,String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "在新視窗中顯示檔案。"
  remarks: "如果所參考的檔案`url`是 HTML 檔案、 文字檔或其他可以裝載在 Internet Explorer 內的檔案類型將顯示在新視窗中。 如果檔案無法顯示在 Internet Explorer 內，則會開啟此視窗只有時間長度仍足以供 Internet Explorer 下載資源;它會立即關閉之後。       當您建立新的 windows 使用<xref:System.Windows.Forms.HtmlWindow.Open%2A>或 OpenNew，導致 HTML 文件物件模型，以開啟 Internet Explorer 的新執行個體。</xref:System.Windows.Forms.HtmlWindow.Open%2A> 如果您不會呼叫<xref:System.Windows.Forms.HtmlWindow.Close%2A>所有您已建立的 windows 上的 Internet Explorer 的這個執行個體將會繼續執行已結束您的應用程式時，即使。</xref:System.Windows.Forms.HtmlWindow.Close%2A>       如果您想要載入先前開啟的視窗中的文件，請參閱<xref:System.Windows.Forms.HtmlWindow.Open%2A>方法。</xref:System.Windows.Forms.HtmlWindow.Open%2A>"
  syntax:
    content: public System.Windows.Forms.HtmlWindow OpenNew (Uri url, string windowOptions);
    parameters:
    - id: url
      type: System.Uri
      description: "統一資源定位器，描述要載入之檔案的位置。"
    - id: windowOptions
      type: System.String
      description: "以逗號分隔的字串，其中包含零或多個表單中的下列選項`name=value`。 請參閱<xref:System.Windows.Forms.HtmlWindow.Open*>有效選項的完整說明。</xref:System.Windows.Forms.HtmlWindow.Open*>"
    return:
      type: System.Windows.Forms.HtmlWindow
      description: "<xref href=&quot;System.Windows.Forms.HtmlWindow&quot;> </xref>代表新視窗。"
  overload: System.Windows.Forms.HtmlWindow.OpenNew*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlWindow.Parent
  id: Parent
  parent: System.Windows.Forms.HtmlWindow
  langs:
  - csharp
  name: Parent
  nameWithType: HtmlWindow.Parent
  fullName: System.Windows.Forms.HtmlWindow.Parent
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得位於包含框架的網頁中目前的上方視窗的視窗。"
  remarks: "包含框架，在文件中每個`FRAME`內`FRAMESET`做為頁面上的個別子視窗。 每個父`FRAME`是`FRAMESET`包含`FRAME`。"
  syntax:
    content: public System.Windows.Forms.HtmlWindow Parent { get; }
    return:
      type: System.Windows.Forms.HtmlWindow
      description: "<xref href=&quot;System.Windows.Forms.HtmlWindow&quot;> </xref>擁有目前的視窗。 如果目前的視窗不是`FRAME`，或未內嵌在`FRAME`，它會傳回<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Forms.HtmlWindow.Parent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlWindow.Position
  id: Position
  parent: System.Windows.Forms.HtmlWindow
  langs:
  - csharp
  name: Position
  nameWithType: HtmlWindow.Position
  fullName: System.Windows.Forms.HtmlWindow.Position
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得螢幕上視窗的工作區的位置。"
  remarks: "<xref:System.Windows.Forms.Control.Location%2A>屬性<xref:System.Windows.Forms.WebBrowser>控制項將會傳回相對於表單的左上角之控制項的位置。</xref:System.Windows.Forms.WebBrowser> </xref:System.Windows.Forms.Control.Location%2A> 相反地，位置將會傳回相對於使用者螢幕左上角的文件的顯示區域的位置。"
  example:
  - "The following code example opens a new window directly over the <xref:System.Windows.Forms.WebBrowser> control on the form. The code example requires that your form contains an instance of the <xref:System.Windows.Forms.WebBrowser> control named `WebBrowser1`.  \n  \n [!code-vb[System.Windows.Forms.HtmlWindow#5](~/add/codesnippet/visualbasic/HtmlWindowProject/Form1.vb#5)]\n [!code-cs[System.Windows.Forms.HtmlWindow#5](~/add/codesnippet/csharp/HtmlWindowProjectCSharp/Form1.cs#5)]"
  syntax:
    content: public System.Drawing.Point Position { get; }
    return:
      type: System.Drawing.Point
      description: "A <xref href=&quot;System.Drawing.Point&quot;> </xref>描述 x-和畫面上，單位為像素的左上角的 y 座標。"
  overload: System.Windows.Forms.HtmlWindow.Position*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlWindow.Prompt(System.String,System.String)
  id: Prompt(System.String,System.String)
  parent: System.Windows.Forms.HtmlWindow
  langs:
  - csharp
  name: Prompt(String,String)
  nameWithType: HtmlWindow.Prompt(String,String)
  fullName: System.Windows.Forms.HtmlWindow.Prompt(String,String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "向使用者顯示一個對話方塊，會顯示訊息方塊和一個文字方塊。"
  remarks: "提示提供快速、 簡易的方式，從使用者取得簡單的文字輸入。       雖然提示接受 Unicode 文字，做為輸入，Internet Explorer 指令碼提示不會顯示非拉丁語言文字適當地在 Windows 95、 Windows 98、 Windows ME 或 Windows NT 由於作業系統限制。 如需詳細資訊，請參閱[資訊︰ Internet Explorer 指令碼會提示和 MBCS/Unicode](http://support.microsoft.com/default.aspx?scid=kb;en-us;211147)。"
  syntax:
    content: public string Prompt (string message, string defaultInputValue);
    parameters:
    - id: message
      type: System.String
      description: "要向使用者顯示的訊息。"
    - id: defaultInputValue
      type: System.String
      description: "預設值顯示在文字方塊中。"
    return:
      type: System.String
      description: "A<xref:System.String>代表使用者所輸入的文字。</xref:System.String>"
  overload: System.Windows.Forms.HtmlWindow.Prompt*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlWindow.RemoveFocus
  id: RemoveFocus
  parent: System.Windows.Forms.HtmlWindow
  langs:
  - csharp
  name: RemoveFocus()
  nameWithType: HtmlWindow.RemoveFocus()
  fullName: System.Windows.Forms.HtmlWindow.RemoveFocus()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "目前視窗失去接受焦點。"
  remarks: "上呼叫時`FRAME`視窗`FRAMESET`，RemoveFocus 會導致該視窗失去焦點，但它將不會自動設定焦點上另一個視窗。"
  syntax:
    content: public void RemoveFocus ();
    parameters: []
  overload: System.Windows.Forms.HtmlWindow.RemoveFocus*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlWindow.Resize
  id: Resize
  parent: System.Windows.Forms.HtmlWindow
  langs:
  - csharp
  name: Resize
  nameWithType: HtmlWindow.Resize
  fullName: System.Windows.Forms.HtmlWindow.Resize
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "發生於使用者使用滑鼠變更視窗的尺寸。"
  remarks: ''
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the Resize event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlWindow> named `HtmlWindow1`. Then ensure that the event handler is associated with the Resize event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#455](~/add/codesnippet/csharp/e-system.windows.forms.h_25_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#455](~/add/codesnippet/visualbasic/e-system.windows.forms.h_25_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.HtmlElementEventHandler Resize;
    return:
      type: System.Windows.Forms.HtmlElementEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlWindow.ResizeTo(System.Drawing.Size)
  id: ResizeTo(System.Drawing.Size)
  parent: System.Windows.Forms.HtmlWindow
  langs:
  - csharp
  name: ResizeTo(Size)
  nameWithType: HtmlWindow.ResizeTo(Size)
  fullName: System.Windows.Forms.HtmlWindow.ResizeTo(Size)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "視窗的大小變更為指定的維度。"
  remarks: ''
  example:
  - "The following code example opens a new window, and resizes it to fill the available screen area.  \n  \n [!code-vb[System.Windows.Forms.HtmlWindow#15](~/add/codesnippet/visualbasic/HtmlWindowProject/Form1.vb#15)]\n [!code-cs[System.Windows.Forms.HtmlWindow#15](~/add/codesnippet/csharp/HtmlWindowProjectCSharp/Form1.cs#15)]"
  syntax:
    content: public void ResizeTo (System.Drawing.Size size);
    parameters:
    - id: size
      type: System.Drawing.Size
      description: "A <xref href=&quot;System.Drawing.Size&quot;> </xref>描述視窗中，單位為像素的高度與所要的寬度。 必須是 100 像素或多個在兩個維度。"
  overload: System.Windows.Forms.HtmlWindow.ResizeTo*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "您嘗試調整視窗是其父視窗不同的網域。 這項限制是安全性的跨框架指令碼; 的一部分如需詳細資訊，請參閱[關於跨框架指令碼和安全性](http://msdn.microsoft.com/library/ms533028.aspx)。"
  platform:
  - net462
- uid: System.Windows.Forms.HtmlWindow.ResizeTo(System.Int32,System.Int32)
  id: ResizeTo(System.Int32,System.Int32)
  parent: System.Windows.Forms.HtmlWindow
  langs:
  - csharp
  name: ResizeTo(Int32,Int32)
  nameWithType: HtmlWindow.ResizeTo(Int32,Int32)
  fullName: System.Windows.Forms.HtmlWindow.ResizeTo(Int32,Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "視窗的大小變更為指定的維度。"
  syntax:
    content: public void ResizeTo (int width, int height);
    parameters:
    - id: width
      type: System.Int32
      description: "描述所需的視窗中，單位為像素寬度。 必須是 100 像素或更多。"
    - id: height
      type: System.Int32
      description: "描述所需的視窗中，單位為像素高度。 必須是 100 像素或更多。"
  overload: System.Windows.Forms.HtmlWindow.ResizeTo*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "您嘗試調整視窗是其父視窗不同的網域。 這項限制是安全性的跨框架指令碼; 的一部分如需詳細資訊，請參閱[關於跨框架指令碼和安全性](http://msdn.microsoft.com/library/ms533028.aspx)。"
  platform:
  - net462
- uid: System.Windows.Forms.HtmlWindow.Scroll
  id: Scroll
  parent: System.Windows.Forms.HtmlWindow
  langs:
  - csharp
  name: Scroll
  nameWithType: HtmlWindow.Scroll
  fullName: System.Windows.Forms.HtmlWindow.Scroll
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "發生於使用者捲動視窗來檢視螢幕的文字。"
  remarks: ''
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the Scroll event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlWindow> named `HtmlWindow1`. Then ensure that the event handler is associated with the Scroll event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#456](~/add/codesnippet/csharp/e-system.windows.forms.h_8_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#456](~/add/codesnippet/visualbasic/e-system.windows.forms.h_8_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.HtmlElementEventHandler Scroll;
    return:
      type: System.Windows.Forms.HtmlElementEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlWindow.ScrollTo(System.Drawing.Point)
  id: ScrollTo(System.Drawing.Point)
  parent: System.Windows.Forms.HtmlWindow
  langs:
  - csharp
  name: ScrollTo(Point)
  nameWithType: HtmlWindow.ScrollTo(Point)
  fullName: System.Windows.Forms.HtmlWindow.ScrollTo(Point)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "將視窗移至指定的座標。"
  remarks: "ScrollTo 會導致文件，以便在文件上的指定的座標位於文件視窗的左上角捲動。 如果文件不是長或太寬的這種情形，ScrollTo 會捲動瀏覽以指定方向盡可能文件。"
  example:
  - "The following code example scrolls through the document to the coordinate position clicked by the user.  \n  \n [!code-vb[System.Windows.Forms.HtmlWindow#15](~/add/codesnippet/visualbasic/HtmlWindowProject/Form1.vb#15)]\n [!code-cs[System.Windows.Forms.HtmlWindow#15](~/add/codesnippet/csharp/HtmlWindowProjectCSharp/Form1.cs#15)]"
  syntax:
    content: public void ScrollTo (System.Drawing.Point point);
    parameters:
    - id: point
      type: System.Drawing.Point
      description: "X 和 y 座標，相對於目前視窗中，網頁應該捲動左上角。"
  overload: System.Windows.Forms.HtmlWindow.ScrollTo*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlWindow.ScrollTo(System.Int32,System.Int32)
  id: ScrollTo(System.Int32,System.Int32)
  parent: System.Windows.Forms.HtmlWindow
  langs:
  - csharp
  name: ScrollTo(Int32,Int32)
  nameWithType: HtmlWindow.ScrollTo(Int32,Int32)
  fullName: System.Windows.Forms.HtmlWindow.ScrollTo(Int32,Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "捲動視窗至指定的位置。"
  remarks: "<xref:System.Windows.Forms.HtmlWindow.ScrollTo%2A>會導致文件，以便在文件上的指定的座標位於文件視窗的左上角捲動。</xref:System.Windows.Forms.HtmlWindow.ScrollTo%2A> 如果文件不是長或太寬的這種情形，<xref:System.Windows.Forms.HtmlWindow.ScrollTo%2A>會捲動瀏覽以指定方向盡可能文件。</xref:System.Windows.Forms.HtmlWindow.ScrollTo%2A>"
  syntax:
    content: public void ScrollTo (int x, int y);
    parameters:
    - id: x
      type: System.Int32
      description: "X 軸座標，相對於目前視窗中，網頁應該捲動左上角。"
    - id: y
      type: System.Int32
      description: "Y 軸座標，相對於目前視窗中，網頁應該捲動左上角。"
  overload: System.Windows.Forms.HtmlWindow.ScrollTo*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlWindow.Size
  id: Size
  parent: System.Windows.Forms.HtmlWindow
  langs:
  - csharp
  name: Size
  nameWithType: HtmlWindow.Size
  fullName: System.Windows.Forms.HtmlWindow.Size
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得或設定目前視窗的大小。"
  syntax:
    content: public System.Drawing.Size Size { get; set; }
    return:
      type: System.Drawing.Size
      description: "A <xref href=&quot;System.Drawing.Size&quot;> </xref>描述視窗像素為單位的大小。"
  overload: System.Windows.Forms.HtmlWindow.Size*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlWindow.StatusBarText
  id: StatusBarText
  parent: System.Windows.Forms.HtmlWindow
  langs:
  - csharp
  name: StatusBarText
  nameWithType: HtmlWindow.StatusBarText
  fullName: System.Windows.Forms.HtmlWindow.StatusBarText
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得或設定視窗的狀態列中顯示的文字。"
  remarks: "<xref:System.Windows.Forms.WebBrowser>控制項不顯示狀態列</xref:System.Windows.Forms.WebBrowser> 您開啟任何新視窗<xref:System.Windows.Forms.HtmlWindow.Open%2A>或<xref:System.Windows.Forms.HtmlWindow.OpenNew%2A>方法，不過，會顯示狀態列預設。</xref:System.Windows.Forms.HtmlWindow.OpenNew%2A> </xref:System.Windows.Forms.HtmlWindow.Open%2A>"
  syntax:
    content: public string StatusBarText { get; set; }
    return:
      type: System.String
      description: "A<xref:System.String>包含目前狀態的文字。</xref:System.String>"
  overload: System.Windows.Forms.HtmlWindow.StatusBarText*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlWindow.Unload
  id: Unload
  parent: System.Windows.Forms.HtmlWindow
  langs:
  - csharp
  name: Unload
  nameWithType: HtmlWindow.Unload
  fullName: System.Windows.Forms.HtmlWindow.Unload
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "正在卸載目前的頁面，且新的頁面即將顯示時發生。"
  remarks: ''
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the Unload event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlWindow> named `HtmlWindow1`. Then ensure that the event handler is associated with the Unload event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#457](~/add/codesnippet/csharp/e-system.windows.forms.h_7_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#457](~/add/codesnippet/visualbasic/e-system.windows.forms.h_7_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.HtmlElementEventHandler Unload;
    return:
      type: System.Windows.Forms.HtmlElementEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlWindow.Url
  id: Url
  parent: System.Windows.Forms.HtmlWindow
  langs:
  - csharp
  name: Url
  nameWithType: HtmlWindow.Url
  fullName: System.Windows.Forms.HtmlWindow.Url
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得對應到目前的項目顯示在視窗中的 URL。"
  remarks: "這個屬性是唯讀的。 若要瀏覽至新的文件視窗，請使用<xref:System.Windows.Forms.HtmlWindow.Navigate%2A>方法。</xref:System.Windows.Forms.HtmlWindow.Navigate%2A>"
  syntax:
    content: public Uri Url { get; }
    return:
      type: System.Uri
      description: "A<xref:System.Uri>描述這個 URL。</xref:System.Uri>"
  overload: System.Windows.Forms.HtmlWindow.Url*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlWindow.WindowFrameElement
  id: WindowFrameElement
  parent: System.Windows.Forms.HtmlWindow
  langs:
  - csharp
  name: WindowFrameElement
  nameWithType: HtmlWindow.WindowFrameElement
  fullName: System.Windows.Forms.HtmlWindow.WindowFrameElement
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得對應到這個視窗的框架項目。"
  remarks: "當您擷取`FRAME`元素的<xref:System.Windows.Forms.HtmlWindow.Frames%2A>集合，它會傳回<xref:System.Windows.Forms.HtmlWindow>.</xref:System.Windows.Forms.HtmlWindow> </xref:System.Windows.Forms.HtmlWindow.Frames%2A> 如果您需要存取的基礎屬性，這個物件上呼叫 WindowFrameElement`FRAME`項目，例如`SRC`屬性。"
  example:
  - "The following code example compares the `SRC` attribute of frames in a `FRAMESET` to the current location. If they are different, the frames are reset to their original URLs.  \n  \n [!code-vb[System.Windows.Forms.HtmlWindow#8](~/add/codesnippet/visualbasic/HtmlWindowProject/Form1.vb#8)]\n [!code-cs[System.Windows.Forms.HtmlWindow#8](~/add/codesnippet/csharp/HtmlWindowProjectCSharp/Form1.cs#8)]"
  syntax:
    content: public System.Windows.Forms.HtmlElement WindowFrameElement { get; }
    return:
      type: System.Windows.Forms.HtmlElement
      description: "<xref href=&quot;System.Windows.Forms.HtmlElement&quot;> </xref>對應到這個視窗`FRAME`項目。 如果這個視窗不是在範圍內，它會傳回<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Forms.HtmlWindow.WindowFrameElement*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.UnauthorizedAccessException
  isExternal: true
  name: System.UnauthorizedAccessException
- uid: System.Windows.Forms.HtmlWindow.Alert(System.String)
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: Alert(String)
  nameWithType: HtmlWindow.Alert(String)
  fullName: System.Windows.Forms.HtmlWindow.Alert(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Forms.HtmlWindow.AttachEventHandler(System.String,System.EventHandler)
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: AttachEventHandler(String,EventHandler)
  nameWithType: HtmlWindow.AttachEventHandler(String,EventHandler)
  fullName: System.Windows.Forms.HtmlWindow.AttachEventHandler(String,EventHandler)
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Windows.Forms.HtmlWindow.Close
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: Close()
  nameWithType: HtmlWindow.Close()
  fullName: System.Windows.Forms.HtmlWindow.Close()
- uid: System.Windows.Forms.HtmlWindow.Confirm(System.String)
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: Confirm(String)
  nameWithType: HtmlWindow.Confirm(String)
  fullName: System.Windows.Forms.HtmlWindow.Confirm(String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.HtmlWindow.DetachEventHandler(System.String,System.EventHandler)
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: DetachEventHandler(String,EventHandler)
  nameWithType: HtmlWindow.DetachEventHandler(String,EventHandler)
  fullName: System.Windows.Forms.HtmlWindow.DetachEventHandler(String,EventHandler)
- uid: System.Windows.Forms.HtmlWindow.Document
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: Document
  nameWithType: HtmlWindow.Document
  fullName: System.Windows.Forms.HtmlWindow.Document
- uid: System.Windows.Forms.HtmlDocument
  parent: System.Windows.Forms
  isExternal: false
  name: HtmlDocument
  nameWithType: HtmlDocument
  fullName: System.Windows.Forms.HtmlDocument
- uid: System.Windows.Forms.HtmlWindow.DomWindow
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: DomWindow
  nameWithType: HtmlWindow.DomWindow
  fullName: System.Windows.Forms.HtmlWindow.DomWindow
- uid: System.Windows.Forms.HtmlWindow.Equals(System.Object)
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: Equals(Object)
  nameWithType: HtmlWindow.Equals(Object)
  fullName: System.Windows.Forms.HtmlWindow.Equals(Object)
- uid: System.Windows.Forms.HtmlWindow.Error
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: Error
  nameWithType: HtmlWindow.Error
  fullName: System.Windows.Forms.HtmlWindow.Error
- uid: System.Windows.Forms.HtmlElementErrorEventHandler
  parent: System.Windows.Forms
  isExternal: false
  name: HtmlElementErrorEventHandler
  nameWithType: HtmlElementErrorEventHandler
  fullName: System.Windows.Forms.HtmlElementErrorEventHandler
- uid: System.Windows.Forms.HtmlWindow.Focus
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: Focus()
  nameWithType: HtmlWindow.Focus()
  fullName: System.Windows.Forms.HtmlWindow.Focus()
- uid: System.Windows.Forms.HtmlWindow.Frames
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: Frames
  nameWithType: HtmlWindow.Frames
  fullName: System.Windows.Forms.HtmlWindow.Frames
- uid: System.Windows.Forms.HtmlWindowCollection
  parent: System.Windows.Forms
  isExternal: false
  name: HtmlWindowCollection
  nameWithType: HtmlWindowCollection
  fullName: System.Windows.Forms.HtmlWindowCollection
- uid: System.Windows.Forms.HtmlWindow.GetHashCode
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: GetHashCode()
  nameWithType: HtmlWindow.GetHashCode()
  fullName: System.Windows.Forms.HtmlWindow.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Forms.HtmlWindow.GotFocus
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: GotFocus
  nameWithType: HtmlWindow.GotFocus
  fullName: System.Windows.Forms.HtmlWindow.GotFocus
- uid: System.Windows.Forms.HtmlElementEventHandler
  parent: System.Windows.Forms
  isExternal: false
  name: HtmlElementEventHandler
  nameWithType: HtmlElementEventHandler
  fullName: System.Windows.Forms.HtmlElementEventHandler
- uid: System.Windows.Forms.HtmlWindow.History
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: History
  nameWithType: HtmlWindow.History
  fullName: System.Windows.Forms.HtmlWindow.History
- uid: System.Windows.Forms.HtmlHistory
  parent: System.Windows.Forms
  isExternal: false
  name: HtmlHistory
  nameWithType: HtmlHistory
  fullName: System.Windows.Forms.HtmlHistory
- uid: System.Windows.Forms.HtmlWindow.IsClosed
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: IsClosed
  nameWithType: HtmlWindow.IsClosed
  fullName: System.Windows.Forms.HtmlWindow.IsClosed
- uid: System.Windows.Forms.HtmlWindow.Load
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: Load
  nameWithType: HtmlWindow.Load
  fullName: System.Windows.Forms.HtmlWindow.Load
- uid: System.Windows.Forms.HtmlWindow.LostFocus
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: LostFocus
  nameWithType: HtmlWindow.LostFocus
  fullName: System.Windows.Forms.HtmlWindow.LostFocus
- uid: System.Windows.Forms.HtmlWindow.MoveTo(System.Drawing.Point)
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: MoveTo(Point)
  nameWithType: HtmlWindow.MoveTo(Point)
  fullName: System.Windows.Forms.HtmlWindow.MoveTo(Point)
- uid: System.Drawing.Point
  parent: System.Drawing
  isExternal: false
  name: Point
  nameWithType: Point
  fullName: System.Drawing.Point
- uid: System.Windows.Forms.HtmlWindow.MoveTo(System.Int32,System.Int32)
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: MoveTo(Int32,Int32)
  nameWithType: HtmlWindow.MoveTo(Int32,Int32)
  fullName: System.Windows.Forms.HtmlWindow.MoveTo(Int32,Int32)
- uid: System.Windows.Forms.HtmlWindow.Name
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: Name
  nameWithType: HtmlWindow.Name
  fullName: System.Windows.Forms.HtmlWindow.Name
- uid: System.Windows.Forms.HtmlWindow.Navigate(System.String)
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: Navigate(String)
  nameWithType: HtmlWindow.Navigate(String)
  fullName: System.Windows.Forms.HtmlWindow.Navigate(String)
- uid: System.Windows.Forms.HtmlWindow.Navigate(System.Uri)
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: Navigate(Uri)
  nameWithType: HtmlWindow.Navigate(Uri)
  fullName: System.Windows.Forms.HtmlWindow.Navigate(Uri)
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Windows.Forms.HtmlWindow.op_Equality(System.Windows.Forms.HtmlWindow,System.Windows.Forms.HtmlWindow)
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: op_Equality(HtmlWindow,HtmlWindow)
  nameWithType: HtmlWindow.op_Equality(HtmlWindow,HtmlWindow)
  fullName: System.Windows.Forms.HtmlWindow.op_Equality(HtmlWindow,HtmlWindow)
- uid: System.Windows.Forms.HtmlWindow
  parent: System.Windows.Forms
  isExternal: false
  name: HtmlWindow
  nameWithType: HtmlWindow
  fullName: System.Windows.Forms.HtmlWindow
- uid: System.Windows.Forms.HtmlWindow.op_Inequality(System.Windows.Forms.HtmlWindow,System.Windows.Forms.HtmlWindow)
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: op_Inequality(HtmlWindow,HtmlWindow)
  nameWithType: HtmlWindow.op_Inequality(HtmlWindow,HtmlWindow)
  fullName: System.Windows.Forms.HtmlWindow.op_Inequality(HtmlWindow,HtmlWindow)
- uid: System.Windows.Forms.HtmlWindow.Open(System.String,System.String,System.String,System.Boolean)
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: Open(String,String,String,Boolean)
  nameWithType: HtmlWindow.Open(String,String,String,Boolean)
  fullName: System.Windows.Forms.HtmlWindow.Open(String,String,String,Boolean)
- uid: System.Windows.Forms.HtmlWindow.Open(System.Uri,System.String,System.String,System.Boolean)
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: Open(Uri,String,String,Boolean)
  nameWithType: HtmlWindow.Open(Uri,String,String,Boolean)
  fullName: System.Windows.Forms.HtmlWindow.Open(Uri,String,String,Boolean)
- uid: System.Windows.Forms.HtmlWindow.Opener
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: Opener
  nameWithType: HtmlWindow.Opener
  fullName: System.Windows.Forms.HtmlWindow.Opener
- uid: System.Windows.Forms.HtmlWindow.OpenNew(System.String,System.String)
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: OpenNew(String,String)
  nameWithType: HtmlWindow.OpenNew(String,String)
  fullName: System.Windows.Forms.HtmlWindow.OpenNew(String,String)
- uid: System.Windows.Forms.HtmlWindow.OpenNew(System.Uri,System.String)
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: OpenNew(Uri,String)
  nameWithType: HtmlWindow.OpenNew(Uri,String)
  fullName: System.Windows.Forms.HtmlWindow.OpenNew(Uri,String)
- uid: System.Windows.Forms.HtmlWindow.Parent
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: Parent
  nameWithType: HtmlWindow.Parent
  fullName: System.Windows.Forms.HtmlWindow.Parent
- uid: System.Windows.Forms.HtmlWindow.Position
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: Position
  nameWithType: HtmlWindow.Position
  fullName: System.Windows.Forms.HtmlWindow.Position
- uid: System.Windows.Forms.HtmlWindow.Prompt(System.String,System.String)
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: Prompt(String,String)
  nameWithType: HtmlWindow.Prompt(String,String)
  fullName: System.Windows.Forms.HtmlWindow.Prompt(String,String)
- uid: System.Windows.Forms.HtmlWindow.RemoveFocus
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: RemoveFocus()
  nameWithType: HtmlWindow.RemoveFocus()
  fullName: System.Windows.Forms.HtmlWindow.RemoveFocus()
- uid: System.Windows.Forms.HtmlWindow.Resize
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: Resize
  nameWithType: HtmlWindow.Resize
  fullName: System.Windows.Forms.HtmlWindow.Resize
- uid: System.Windows.Forms.HtmlWindow.ResizeTo(System.Drawing.Size)
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: ResizeTo(Size)
  nameWithType: HtmlWindow.ResizeTo(Size)
  fullName: System.Windows.Forms.HtmlWindow.ResizeTo(Size)
- uid: System.Drawing.Size
  parent: System.Drawing
  isExternal: false
  name: Size
  nameWithType: Size
  fullName: System.Drawing.Size
- uid: System.Windows.Forms.HtmlWindow.ResizeTo(System.Int32,System.Int32)
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: ResizeTo(Int32,Int32)
  nameWithType: HtmlWindow.ResizeTo(Int32,Int32)
  fullName: System.Windows.Forms.HtmlWindow.ResizeTo(Int32,Int32)
- uid: System.Windows.Forms.HtmlWindow.Scroll
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: Scroll
  nameWithType: HtmlWindow.Scroll
  fullName: System.Windows.Forms.HtmlWindow.Scroll
- uid: System.Windows.Forms.HtmlWindow.ScrollTo(System.Drawing.Point)
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: ScrollTo(Point)
  nameWithType: HtmlWindow.ScrollTo(Point)
  fullName: System.Windows.Forms.HtmlWindow.ScrollTo(Point)
- uid: System.Windows.Forms.HtmlWindow.ScrollTo(System.Int32,System.Int32)
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: ScrollTo(Int32,Int32)
  nameWithType: HtmlWindow.ScrollTo(Int32,Int32)
  fullName: System.Windows.Forms.HtmlWindow.ScrollTo(Int32,Int32)
- uid: System.Windows.Forms.HtmlWindow.Size
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: Size
  nameWithType: HtmlWindow.Size
  fullName: System.Windows.Forms.HtmlWindow.Size
- uid: System.Windows.Forms.HtmlWindow.StatusBarText
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: StatusBarText
  nameWithType: HtmlWindow.StatusBarText
  fullName: System.Windows.Forms.HtmlWindow.StatusBarText
- uid: System.Windows.Forms.HtmlWindow.Unload
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: Unload
  nameWithType: HtmlWindow.Unload
  fullName: System.Windows.Forms.HtmlWindow.Unload
- uid: System.Windows.Forms.HtmlWindow.Url
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: Url
  nameWithType: HtmlWindow.Url
  fullName: System.Windows.Forms.HtmlWindow.Url
- uid: System.Windows.Forms.HtmlWindow.WindowFrameElement
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: WindowFrameElement
  nameWithType: HtmlWindow.WindowFrameElement
  fullName: System.Windows.Forms.HtmlWindow.WindowFrameElement
- uid: System.Windows.Forms.HtmlElement
  parent: System.Windows.Forms
  isExternal: false
  name: HtmlElement
  nameWithType: HtmlElement
  fullName: System.Windows.Forms.HtmlElement
- uid: System.Windows.Forms.HtmlWindow.Alert*
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: Alert
  nameWithType: HtmlWindow.Alert
- uid: System.Windows.Forms.HtmlWindow.AttachEventHandler*
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: AttachEventHandler
  nameWithType: HtmlWindow.AttachEventHandler
- uid: System.Windows.Forms.HtmlWindow.Close*
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: Close
  nameWithType: HtmlWindow.Close
- uid: System.Windows.Forms.HtmlWindow.Confirm*
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: Confirm
  nameWithType: HtmlWindow.Confirm
- uid: System.Windows.Forms.HtmlWindow.DetachEventHandler*
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: DetachEventHandler
  nameWithType: HtmlWindow.DetachEventHandler
- uid: System.Windows.Forms.HtmlWindow.Document*
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: Document
  nameWithType: HtmlWindow.Document
- uid: System.Windows.Forms.HtmlWindow.DomWindow*
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: DomWindow
  nameWithType: HtmlWindow.DomWindow
- uid: System.Windows.Forms.HtmlWindow.Equals*
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: Equals
  nameWithType: HtmlWindow.Equals
- uid: System.Windows.Forms.HtmlWindow.Focus*
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: Focus
  nameWithType: HtmlWindow.Focus
- uid: System.Windows.Forms.HtmlWindow.Frames*
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: Frames
  nameWithType: HtmlWindow.Frames
- uid: System.Windows.Forms.HtmlWindow.GetHashCode*
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: GetHashCode
  nameWithType: HtmlWindow.GetHashCode
- uid: System.Windows.Forms.HtmlWindow.History*
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: History
  nameWithType: HtmlWindow.History
- uid: System.Windows.Forms.HtmlWindow.IsClosed*
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: IsClosed
  nameWithType: HtmlWindow.IsClosed
- uid: System.Windows.Forms.HtmlWindow.MoveTo*
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: MoveTo
  nameWithType: HtmlWindow.MoveTo
- uid: System.Windows.Forms.HtmlWindow.Name*
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: Name
  nameWithType: HtmlWindow.Name
- uid: System.Windows.Forms.HtmlWindow.Navigate*
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: Navigate
  nameWithType: HtmlWindow.Navigate
- uid: System.Windows.Forms.HtmlWindow.op_Equality*
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: op_Equality
  nameWithType: HtmlWindow.op_Equality
- uid: System.Windows.Forms.HtmlWindow.op_Inequality*
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: op_Inequality
  nameWithType: HtmlWindow.op_Inequality
- uid: System.Windows.Forms.HtmlWindow.Open*
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: Open
  nameWithType: HtmlWindow.Open
- uid: System.Windows.Forms.HtmlWindow.Opener*
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: Opener
  nameWithType: HtmlWindow.Opener
- uid: System.Windows.Forms.HtmlWindow.OpenNew*
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: OpenNew
  nameWithType: HtmlWindow.OpenNew
- uid: System.Windows.Forms.HtmlWindow.Parent*
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: Parent
  nameWithType: HtmlWindow.Parent
- uid: System.Windows.Forms.HtmlWindow.Position*
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: Position
  nameWithType: HtmlWindow.Position
- uid: System.Windows.Forms.HtmlWindow.Prompt*
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: Prompt
  nameWithType: HtmlWindow.Prompt
- uid: System.Windows.Forms.HtmlWindow.RemoveFocus*
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: RemoveFocus
  nameWithType: HtmlWindow.RemoveFocus
- uid: System.Windows.Forms.HtmlWindow.ResizeTo*
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: ResizeTo
  nameWithType: HtmlWindow.ResizeTo
- uid: System.Windows.Forms.HtmlWindow.ScrollTo*
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: ScrollTo
  nameWithType: HtmlWindow.ScrollTo
- uid: System.Windows.Forms.HtmlWindow.Size*
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: Size
  nameWithType: HtmlWindow.Size
- uid: System.Windows.Forms.HtmlWindow.StatusBarText*
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: StatusBarText
  nameWithType: HtmlWindow.StatusBarText
- uid: System.Windows.Forms.HtmlWindow.Url*
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: Url
  nameWithType: HtmlWindow.Url
- uid: System.Windows.Forms.HtmlWindow.WindowFrameElement*
  parent: System.Windows.Forms.HtmlWindow
  isExternal: false
  name: WindowFrameElement
  nameWithType: HtmlWindow.WindowFrameElement
