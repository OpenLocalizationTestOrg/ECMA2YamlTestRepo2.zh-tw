### YamlMime:ManagedReference
items:
- uid: System.Web.SessionState.ISessionIDManager
  id: ISessionIDManager
  children:
  - System.Web.SessionState.ISessionIDManager.CreateSessionID(System.Web.HttpContext)
  - System.Web.SessionState.ISessionIDManager.GetSessionID(System.Web.HttpContext)
  - System.Web.SessionState.ISessionIDManager.Initialize
  - System.Web.SessionState.ISessionIDManager.InitializeRequest(System.Web.HttpContext,System.Boolean,System.Boolean@)
  - System.Web.SessionState.ISessionIDManager.RemoveSessionID(System.Web.HttpContext)
  - System.Web.SessionState.ISessionIDManager.SaveSessionID(System.Web.HttpContext,System.String,System.Boolean@,System.Boolean@)
  - System.Web.SessionState.ISessionIDManager.Validate(System.String)
  langs:
  - csharp
  name: ISessionIDManager
  nameWithType: ISessionIDManager
  fullName: System.Web.SessionState.ISessionIDManager
  type: Interface
  summary: "定義自訂的工作階段狀態識別項管理員必須實作的合約。"
  remarks: "ISessionIDManager 介面識別的方法，您必須實作以建立工作階段識別碼值的自訂管理員。 ISessionIDManager 介面實作會建立和驗證工作階段識別碼值，並管理從 HTTP 要求的 HTTP 回應中的工作階段識別碼的儲存體，以及工作階段識別碼值的擷取。 啟用使用自訂的工作階段識別碼管理員`sessionIDManagerType`屬性[工作階段狀態項目 （ASP.NET 設定結構描述）](http://msdn.microsoft.com/en-us/bda6fb8c-0076-43e3-9ce2-8cf1f8bdaa7d)組態項目。       如果您 ISessionIDManager 介面的實作會支援無 cookie 工作階段識別項，您必須實作解決方案來傳送和擷取 URL，例如 ISAPI 篩選器中的工作階段識別項。       如果您只想要提供自訂的工作階段識別碼值，以供 ASP.NET 工作階段狀態，您可以建立繼承的類別<xref:System.Web.SessionState.SessionIDManager>類別並覆寫只<xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A>和<xref:System.Web.SessionState.SessionIDManager.Validate%2A>具有自己的自訂實作的方法。</xref:System.Web.SessionState.SessionIDManager.Validate%2A> </xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A> </xref:System.Web.SessionState.SessionIDManager> 這可讓您提供您自己的工作階段識別碼值，同時依賴基底<xref:System.Web.SessionState.SessionIDManager>類別來儲存對 HTTP 回應的值，並擷取 HTTP 要求的值。</xref:System.Web.SessionState.SessionIDManager> 如需覆寫的<xref:System.Web.SessionState.SessionIDManager>類別並實作這些方法，請參閱範例提供給<xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A>方法的<xref:System.Web.SessionState.SessionIDManager>類別。</xref:System.Web.SessionState.SessionIDManager> </xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A> </xref:System.Web.SessionState.SessionIDManager>"
  example:
  - "The following code example shows a class that implements a cookie-based session-ID manager.  \n  \n [!code-vb[System.Web.SessionState.ISessionIDModule#1](~/add/codesnippet/visualbasic/t-system.web.sessionstat_1_1.vb)]\n [!code-cs[System.Web.SessionState.ISessionIDModule#1](~/add/codesnippet/csharp/t-system.web.sessionstat_1_1.cs)]"
  syntax:
    content: public interface ISessionIDManager
  implements: []
  platform:
  - net462
- uid: System.Web.SessionState.ISessionIDManager.CreateSessionID(System.Web.HttpContext)
  id: CreateSessionID(System.Web.HttpContext)
  parent: System.Web.SessionState.ISessionIDManager
  langs:
  - csharp
  name: CreateSessionID(HttpContext)
  nameWithType: ISessionIDManager.CreateSessionID(HttpContext)
  fullName: System.Web.SessionState.ISessionIDManager.CreateSessionID(HttpContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "建立唯一的工作階段識別項。"
  remarks: "CreateSessionID 方法用來產生唯一的工作階段識別項，<xref:System.Web.SessionState.SessionStateModule>物件會使用來識別新的工作階段。</xref:System.Web.SessionState.SessionStateModule> CreateSessionID 所傳回的值必須是唯一的而且必須包含有效的字元可以儲存在 HTTP 回應和要求。 如果是可行的 CreateSessionID 實作所傳回的值包含在 HTTP 回應或要求中無效的字元，您應該使用<xref:System.Web.HttpUtility.UrlEncode%2A>編碼中的工作階段識別碼值的方法您<xref:System.Web.SessionState.ISessionIDManager.SaveSessionID%2A>方法實作和<xref:System.Web.HttpUtility.UrlDecode%2A>方法來解碼的工作階段識別碼值您<xref:System.Web.SessionState.ISessionIDManager.GetSessionID%2A>方法實作。</xref:System.Web.SessionState.ISessionIDManager.GetSessionID%2A> </xref:System.Web.HttpUtility.UrlDecode%2A> </xref:System.Web.SessionState.ISessionIDManager.SaveSessionID%2A> </xref:System.Web.HttpUtility.UrlEncode%2A>"
  example:
  - "The following code example implements the CreateSessionID method. The method creates a new <xref:System.Guid> to be used as a session identifier.  \n  \n [!code-vb[System.Web.SessionState.ISessionIDModule#3](~/add/codesnippet/visualbasic/873b6fcc-0b1f-453f-806c-_1.vb)]\n [!code-cs[System.Web.SessionState.ISessionIDModule#3](~/add/codesnippet/csharp/873b6fcc-0b1f-453f-806c-_1.cs)]"
  syntax:
    content: public string CreateSessionID (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "目前<xref href=&quot;System.Web.HttpContext&quot;></xref>參考伺服器物件的物件用來處理 HTTP 要求 (例如， <> </> *> 和<> *> 屬性)。"
    return:
      type: System.String
      description: "唯一的工作階段識別項。"
  overload: System.Web.SessionState.ISessionIDManager.CreateSessionID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.ISessionIDManager.GetSessionID(System.Web.HttpContext)
  id: GetSessionID(System.Web.HttpContext)
  parent: System.Web.SessionState.ISessionIDManager
  langs:
  - csharp
  name: GetSessionID(HttpContext)
  nameWithType: ISessionIDManager.GetSessionID(HttpContext)
  fullName: System.Web.SessionState.ISessionIDManager.GetSessionID(HttpContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "從目前的 HTTP 要求的內容取得的工作階段識別碼。"
  remarks: "GetSessionID 方法由呼叫<xref:System.Web.SessionState.SessionStateModule>期間<xref:System.Web.HttpApplication.AcquireRequestState?displayProperty=fullName>和<xref:System.Web.HttpApplication.EndRequest?displayProperty=fullName>事件。</xref:System.Web.HttpApplication.EndRequest?displayProperty=fullName> </xref:System.Web.HttpApplication.AcquireRequestState?displayProperty=fullName> </xref:System.Web.SessionState.SessionStateModule> 如果您無法從 HTTP 要求來擷取有效的工作階段識別碼，傳回`null`。 如果<xref:System.Web.SessionState.SessionStateModule>接收`null`自 GetSessionID 方法，它會呼叫<xref:System.Web.SessionState.ISessionIDManager.CreateSessionID%2A>方法來取得新的工作階段識別項，為新的工作階段。</xref:System.Web.SessionState.ISessionIDManager.CreateSessionID%2A> </xref:System.Web.SessionState.SessionStateModule>       如果可能的話，所傳回的值您<xref:System.Web.SessionState.ISessionIDManager.CreateSessionID%2A>實作包含在 HTTP 回應或要求中無效的字元，您應該使用<xref:System.Web.HttpUtility.UrlEncode%2A>編碼中的工作階段識別碼值的方法您<xref:System.Web.SessionState.ISessionIDManager.SaveSessionID%2A>方法實作和<xref:System.Web.HttpUtility.UrlDecode%2A>方法來解碼 GetSessionID 方法實作中的工作階段識別碼值。</xref:System.Web.HttpUtility.UrlDecode%2A> </xref:System.Web.SessionState.ISessionIDManager.SaveSessionID%2A> </xref:System.Web.HttpUtility.UrlEncode%2A> </xref:System.Web.SessionState.ISessionIDManager.CreateSessionID%2A>"
  example:
  - "The following code example shows a partially implemented GetSessionID method. If your custom session-ID manager supports cookieless session identifiers, you will need to implement a solution for sending and retrieving session identifiers in the URL, such as an ISAPI filter.  \n  \n [!code-vb[System.Web.SessionState.ISessionIDModule#2](~/add/codesnippet/visualbasic/m-system.web.sessionstat_10_1.vb)]\n [!code-cs[System.Web.SessionState.ISessionIDModule#2](~/add/codesnippet/csharp/m-system.web.sessionstat_10_1.cs)]"
  syntax:
    content: public string GetSessionID (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "目前<xref href=&quot;System.Web.HttpContext&quot;></xref>參考伺服器物件的物件用來處理 HTTP 要求 (例如， <> </> *> 和<> *> 屬性)。"
    return:
      type: System.String
      description: "傳送 HTTP 要求與目前工作階段識別項。"
  overload: System.Web.SessionState.ISessionIDManager.GetSessionID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.ISessionIDManager.Initialize
  id: Initialize
  parent: System.Web.SessionState.ISessionIDManager
  langs:
  - csharp
  name: Initialize()
  nameWithType: ISessionIDManager.Initialize()
  fullName: System.Web.SessionState.ISessionIDManager.Initialize()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "初始化<xref href=&quot;System.Web.SessionState.SessionIDManager&quot;></xref>物件。"
  remarks: "使用 Initialize 方法初始化<xref:System.Web.SessionState.ISessionIDManager>物件。</xref:System.Web.SessionState.ISessionIDManager>"
  syntax:
    content: public void Initialize ();
    parameters: []
  overload: System.Web.SessionState.ISessionIDManager.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.ISessionIDManager.InitializeRequest(System.Web.HttpContext,System.Boolean,System.Boolean@)
  id: InitializeRequest(System.Web.HttpContext,System.Boolean,System.Boolean@)
  parent: System.Web.SessionState.ISessionIDManager
  langs:
  - csharp
  name: InitializeRequest(HttpContext,Boolean,Boolean)
  nameWithType: ISessionIDManager.InitializeRequest(HttpContext,Boolean,Boolean)
  fullName: System.Web.SessionState.ISessionIDManager.InitializeRequest(HttpContext,Boolean,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "執行的每一個要求初始化<xref href=&quot;System.Web.SessionState.SessionIDManager&quot;></xref>物件。"
  remarks: "InitializeRequest 方法呼叫由處理每個要求<xref:System.Web.SessionState.ISessionIDManager>物件。</xref:System.Web.SessionState.ISessionIDManager> 使用 InitializeRequest 方法來初始化每個要求資料<xref:System.Web.SessionState.SessionIDManager>物件。</xref:System.Web.SessionState.SessionIDManager>       當`suppressAutoDetectRedirect`參數是`true`、<xref:System.Web.SessionState.ISessionIDManager>物件不應該使用重新導向來判斷瀏覽器是否支援 cookie。</xref:System.Web.SessionState.ISessionIDManager>       `supportSessionIDReissue`應傳回參數`false`如果 cookie 用於工作階段識別; 否則傳回`true`如果您<xref:System.Web.SessionState.ISessionIDManager>實作支援重新發行的工作階段識別碼。</xref:System.Web.SessionState.ISessionIDManager>"
  syntax:
    content: public bool InitializeRequest (System.Web.HttpContext context, bool suppressAutoDetectRedirect, out bool supportSessionIDReissue);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "<xref href=&quot;System.Web.HttpContext&quot;> </xref>物件，包含目前要求的相關資訊。"
    - id: suppressAutoDetectRedirect
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果工作階段識別碼管理員應重新導向至判斷 cookie 支援。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>來隱藏自動重新導向，以判斷支援 cookie。"
    - id: supportSessionIDReissue
      type: System.Boolean
      description: "這個方法傳回時，包含布林值，指出是否<xref href=&quot;System.Web.SessionState.ISessionIDManager&quot;></xref>物件的原始識別碼已過期時，支援發行新的工作階段識別碼。 這個參數未初始化便傳遞。       工作階段識別碼重複使用時，適當的工作階段狀態識別碼 url 編碼，而有可能會收到電子郵件或共用的 url。       如果虛擬路徑所自訂的工作階段狀態實作資料分割 cookie，應該要支援工作階段狀態。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>表示執行初始化重新導向。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.SessionState.ISessionIDManager.InitializeRequest*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.ISessionIDManager.RemoveSessionID(System.Web.HttpContext)
  id: RemoveSessionID(System.Web.HttpContext)
  parent: System.Web.SessionState.ISessionIDManager
  langs:
  - csharp
  name: RemoveSessionID(HttpContext)
  nameWithType: ISessionIDManager.RemoveSessionID(HttpContext)
  fullName: System.Web.SessionState.ISessionIDManager.RemoveSessionID(HttpContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "刪除工作階段識別碼，從 cookie 或 URL。"
  remarks: "<xref:System.Web.SessionState.SessionStateModule>呼叫<xref:System.Web.SessionState.SessionIDManager.RemoveSessionID%2A>方法期間<xref:System.Web.HttpApplication.ReleaseRequestState?displayProperty=fullName>事件中的工作階段識別項中移除<xref:System.Web.HttpResponse.Cookies%2A?displayProperty=fullName>如果新的工作階段已建立但未使用的集合。</xref:System.Web.HttpResponse.Cookies%2A?displayProperty=fullName> </xref:System.Web.HttpApplication.ReleaseRequestState?displayProperty=fullName> </xref:System.Web.SessionState.SessionIDManager.RemoveSessionID%2A> </xref:System.Web.SessionState.SessionStateModule>"
  example:
  - "The following code example implements the RemoveSessionID method.  \n  \n [!code-vb[System.Web.SessionState.ISessionIDModule#4](~/add/codesnippet/visualbasic/ee24c797-ce26-45a5-8119-_1.vb)]\n [!code-cs[System.Web.SessionState.ISessionIDModule#4](~/add/codesnippet/csharp/ee24c797-ce26-45a5-8119-_1.cs)]"
  syntax:
    content: public void RemoveSessionID (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "目前<xref href=&quot;System.Web.HttpContext&quot;></xref>參考伺服器物件的物件用來處理 HTTP 要求 (例如， <> </> *> 和<> *> 屬性)。"
  overload: System.Web.SessionState.ISessionIDManager.RemoveSessionID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.ISessionIDManager.SaveSessionID(System.Web.HttpContext,System.String,System.Boolean@,System.Boolean@)
  id: SaveSessionID(System.Web.HttpContext,System.String,System.Boolean@,System.Boolean@)
  parent: System.Web.SessionState.ISessionIDManager
  langs:
  - csharp
  name: SaveSessionID(HttpContext,String,Boolean,Boolean)
  nameWithType: ISessionIDManager.SaveSessionID(HttpContext,String,Boolean,Boolean)
  fullName: System.Web.SessionState.ISessionIDManager.SaveSessionID(HttpContext,String,Boolean,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "將新建立的工作階段識別碼儲存至 HTTP 回應。"
  remarks: "SaveSessionID 方法由呼叫<xref:System.Web.SessionState.SessionStateModule>物件期間<xref:System.Web.HttpApplication.AcquireRequestState?displayProperty=fullName>事件。</xref:System.Web.HttpApplication.AcquireRequestState?displayProperty=fullName> </xref:System.Web.SessionState.SessionStateModule> SaveSessionID 方法儲存的工作階段識別碼 （使用無 cookie 工作階段狀態） 時的 URL 或不會過期的工作階段 cookie。       如果可能的話，從傳回的值您<xref:System.Web.SessionState.ISessionIDManager.CreateSessionID%2A>實作包含在 HTTP 回應或要求中無效的字元，您應該使用<xref:System.Web.HttpUtility.UrlEncode%2A>編碼 SaveSessionID 方法實作中的工作階段識別碼值的方法和<xref:System.Web.HttpUtility.UrlDecode%2A>方法來解碼的工作階段識別碼值，在您<xref:System.Web.SessionState.ISessionIDManager.GetSessionID%2A>方法實作。</xref:System.Web.SessionState.ISessionIDManager.GetSessionID%2A> </xref:System.Web.HttpUtility.UrlDecode%2A> </xref:System.Web.HttpUtility.UrlEncode%2A> </xref:System.Web.SessionState.ISessionIDManager.CreateSessionID%2A>"
  example:
  - "The following code example shows a partially implemented <xref:System.Web.SessionState.ISessionIDManager.GetSessionID%2A> method. If your custom session-ID manager supports cookieless session identifiers, you will need to implement a solution for sending and retrieving session identifiers in the URL, such as an ISAPI filter.  \n  \n [!code-vb[System.Web.SessionState.ISessionIDModule#5](~/add/codesnippet/visualbasic/c9e7b38d-d963-4c81-9ebb-_1.vb)]\n [!code-cs[System.Web.SessionState.ISessionIDModule#5](~/add/codesnippet/csharp/c9e7b38d-d963-4c81-9ebb-_1.cs)]"
  syntax:
    content: public void SaveSessionID (System.Web.HttpContext context, string id, out bool redirected, out bool cookieAdded);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "目前<xref href=&quot;System.Web.HttpContext&quot;></xref>參考伺服器物件的物件用來處理 HTTP 要求 (例如， <> </> *> 和<> *> 屬性)。"
    - id: id
      type: System.String
      description: "工作階段識別碼。"
    - id: redirected
      type: System.Boolean
      description: "這個方法傳回時，包含布林值，是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果回應重新導向至目前 URL 加入至 URL 的工作階段識別碼，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    - id: cookieAdded
      type: System.Boolean
      description: "這個方法傳回時，包含布林值，是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果 cookie 已加入至 HTTP 回應，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.SessionState.ISessionIDManager.SaveSessionID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.ISessionIDManager.Validate(System.String)
  id: Validate(System.String)
  parent: System.Web.SessionState.ISessionIDManager
  langs:
  - csharp
  name: Validate(String)
  nameWithType: ISessionIDManager.Validate(String)
  fullName: System.Web.SessionState.ISessionIDManager.Validate(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "確認提供的工作階段識別項為有效。"
  remarks: "驗證方法會確認提供`id`是有效的工作階段識別碼。       您<xref:System.Web.SessionState.ISessionIDManager>實作應該呼叫 Validate 方法，從<xref:System.Web.SessionState.ISessionIDManager.GetSessionID%2A>方法時從 HTTP 要求，以便確認已正確格式化提供工作階段識別碼擷取工作階段識別項。</xref:System.Web.SessionState.ISessionIDManager.GetSessionID%2A> </xref:System.Web.SessionState.ISessionIDManager>"
  example:
  - "The following code example implements the Validate method and ensures the session-identifier value is a valid <xref:System.Guid>.  \n  \n [!code-vb[System.Web.SessionState.ISessionIDModule#6](~/add/codesnippet/visualbasic/m-system.web.sessionstat_0_1.vb)]\n [!code-cs[System.Web.SessionState.ISessionIDModule#6](~/add/codesnippet/csharp/m-system.web.sessionstat_0_1.cs)]"
  syntax:
    content: public bool Validate (string id);
    parameters:
    - id: id
      type: System.String
      description: "要驗證的工作階段識別碼。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果工作階段識別碼有效，否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.SessionState.ISessionIDManager.Validate*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.SessionState.ISessionIDManager.CreateSessionID(System.Web.HttpContext)
  parent: System.Web.SessionState.ISessionIDManager
  isExternal: false
  name: CreateSessionID(HttpContext)
  nameWithType: ISessionIDManager.CreateSessionID(HttpContext)
  fullName: System.Web.SessionState.ISessionIDManager.CreateSessionID(HttpContext)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.Web.SessionState.ISessionIDManager.GetSessionID(System.Web.HttpContext)
  parent: System.Web.SessionState.ISessionIDManager
  isExternal: false
  name: GetSessionID(HttpContext)
  nameWithType: ISessionIDManager.GetSessionID(HttpContext)
  fullName: System.Web.SessionState.ISessionIDManager.GetSessionID(HttpContext)
- uid: System.Web.SessionState.ISessionIDManager.Initialize
  parent: System.Web.SessionState.ISessionIDManager
  isExternal: false
  name: Initialize()
  nameWithType: ISessionIDManager.Initialize()
  fullName: System.Web.SessionState.ISessionIDManager.Initialize()
- uid: System.Web.SessionState.ISessionIDManager.InitializeRequest(System.Web.HttpContext,System.Boolean,System.Boolean@)
  parent: System.Web.SessionState.ISessionIDManager
  isExternal: false
  name: InitializeRequest(HttpContext,Boolean,Boolean)
  nameWithType: ISessionIDManager.InitializeRequest(HttpContext,Boolean,Boolean)
  fullName: System.Web.SessionState.ISessionIDManager.InitializeRequest(HttpContext,Boolean,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.SessionState.ISessionIDManager.RemoveSessionID(System.Web.HttpContext)
  parent: System.Web.SessionState.ISessionIDManager
  isExternal: false
  name: RemoveSessionID(HttpContext)
  nameWithType: ISessionIDManager.RemoveSessionID(HttpContext)
  fullName: System.Web.SessionState.ISessionIDManager.RemoveSessionID(HttpContext)
- uid: System.Web.SessionState.ISessionIDManager.SaveSessionID(System.Web.HttpContext,System.String,System.Boolean@,System.Boolean@)
  parent: System.Web.SessionState.ISessionIDManager
  isExternal: false
  name: SaveSessionID(HttpContext,String,Boolean,Boolean)
  nameWithType: ISessionIDManager.SaveSessionID(HttpContext,String,Boolean,Boolean)
  fullName: System.Web.SessionState.ISessionIDManager.SaveSessionID(HttpContext,String,Boolean,Boolean)
- uid: System.Web.SessionState.ISessionIDManager.Validate(System.String)
  parent: System.Web.SessionState.ISessionIDManager
  isExternal: false
  name: Validate(String)
  nameWithType: ISessionIDManager.Validate(String)
  fullName: System.Web.SessionState.ISessionIDManager.Validate(String)
- uid: System.Web.SessionState.ISessionIDManager.CreateSessionID*
  parent: System.Web.SessionState.ISessionIDManager
  isExternal: false
  name: CreateSessionID
  nameWithType: ISessionIDManager.CreateSessionID
- uid: System.Web.SessionState.ISessionIDManager.GetSessionID*
  parent: System.Web.SessionState.ISessionIDManager
  isExternal: false
  name: GetSessionID
  nameWithType: ISessionIDManager.GetSessionID
- uid: System.Web.SessionState.ISessionIDManager.Initialize*
  parent: System.Web.SessionState.ISessionIDManager
  isExternal: false
  name: Initialize
  nameWithType: ISessionIDManager.Initialize
- uid: System.Web.SessionState.ISessionIDManager.InitializeRequest*
  parent: System.Web.SessionState.ISessionIDManager
  isExternal: false
  name: InitializeRequest
  nameWithType: ISessionIDManager.InitializeRequest
- uid: System.Web.SessionState.ISessionIDManager.RemoveSessionID*
  parent: System.Web.SessionState.ISessionIDManager
  isExternal: false
  name: RemoveSessionID
  nameWithType: ISessionIDManager.RemoveSessionID
- uid: System.Web.SessionState.ISessionIDManager.SaveSessionID*
  parent: System.Web.SessionState.ISessionIDManager
  isExternal: false
  name: SaveSessionID
  nameWithType: ISessionIDManager.SaveSessionID
- uid: System.Web.SessionState.ISessionIDManager.Validate*
  parent: System.Web.SessionState.ISessionIDManager
  isExternal: false
  name: Validate
  nameWithType: ISessionIDManager.Validate
