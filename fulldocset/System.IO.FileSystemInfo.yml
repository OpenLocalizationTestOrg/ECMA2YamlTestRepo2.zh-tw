### YamlMime:ManagedReference
items:
- uid: System.IO.FileSystemInfo
  id: FileSystemInfo
  children:
  - System.IO.FileSystemInfo.#ctor
  - System.IO.FileSystemInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.IO.FileSystemInfo.Attributes
  - System.IO.FileSystemInfo.CreationTime
  - System.IO.FileSystemInfo.CreationTimeUtc
  - System.IO.FileSystemInfo.Delete
  - System.IO.FileSystemInfo.Exists
  - System.IO.FileSystemInfo.Extension
  - System.IO.FileSystemInfo.FullName
  - System.IO.FileSystemInfo.FullPath
  - System.IO.FileSystemInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.IO.FileSystemInfo.LastAccessTime
  - System.IO.FileSystemInfo.LastAccessTimeUtc
  - System.IO.FileSystemInfo.LastWriteTime
  - System.IO.FileSystemInfo.LastWriteTimeUtc
  - System.IO.FileSystemInfo.Name
  - System.IO.FileSystemInfo.OriginalPath
  - System.IO.FileSystemInfo.Refresh
  langs:
  - csharp
  name: FileSystemInfo
  nameWithType: FileSystemInfo
  fullName: System.IO.FileSystemInfo
  type: Class
  summary: "基底類別提供兩個<xref href=&quot;System.IO.FileInfo&quot;></xref>和<xref href=&quot;System.IO.DirectoryInfo&quot;></xref>物件。"
  remarks: "The FileSystemInfo class contains methods that are common to file and directory manipulation. A FileSystemInfo object can represent either a file or a directory, thus serving as the basis for <xref:System.IO.FileInfo> or <xref:System.IO.DirectoryInfo> objects. Use this base class when parsing a lot of files and directories.  \n  \n A derived class can inherit from FileSystemInfo only if the derived class has the AllAccess permission from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.  \n  \n In members that accept a path, the path can refer to a file or just a directory. The specified path can also refer to a relative path or a Universal Naming Convention (UNC) path for a server and share name. For example, all the following are acceptable paths:  \n  \n-   \"c:\\\\\\MyDir\\\\\\MyFile.txt\" in C#, or \"c:\\MyDir\\MyFile.txt\" in Visual Basic.  \n  \n-   \"c:\\\\\\MyDir\" in C#, or \"c:\\MyDir\" in Visual Basic.  \n  \n-   \"MyDir\\\\\\MySubdir\" in C#, or \"MyDir\\MySubDir\" in Visual Basic.  \n  \n-   \"\\\\\\\\\\\\\\MyServer\\\\\\MyShare\" in C#, or \"\\\\\\MyServer\\MyShare\" in Visual Basic.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example shows how to loop through all the files and directories, querying some information about each entry.  \n  \n [!code-cs[FileSystemInfo#1](~/add/codesnippet/csharp/t-system.io.filesysteminfo_1.cs)]\n [!code-cpp[FileSystemInfo#1](~/add/codesnippet/cpp/t-system.io.filesysteminfo_1.cpp)]\n [!code-vb[FileSystemInfo#1](~/add/codesnippet/visualbasic/t-system.io.filesysteminfo_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class FileSystemInfo : MarshalByRefObject, System.Runtime.Serialization.ISerializable
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  implements:
  - System.Runtime.Serialization.ISerializable
  inheritedMembers:
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.IO.FileSystemInfo.#ctor
  id: '#ctor'
  parent: System.IO.FileSystemInfo
  langs:
  - csharp
  name: FileSystemInfo()
  nameWithType: FileSystemInfo.FileSystemInfo()
  fullName: System.IO.FileSystemInfo.FileSystemInfo()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "初始化的新執行個體<xref href=&quot;System.IO.FileSystemInfo&quot;></xref>類別。"
  remarks: "如需的一般 I/O 工作清單，請參閱[一般 I/O 工作](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: protected FileSystemInfo ();
    parameters: []
  overload: System.IO.FileSystemInfo.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IO.FileSystemInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.IO.FileSystemInfo
  langs:
  - csharp
  name: FileSystemInfo(SerializationInfo,StreamingContext)
  nameWithType: FileSystemInfo.FileSystemInfo(SerializationInfo,StreamingContext)
  fullName: System.IO.FileSystemInfo.FileSystemInfo(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "初始化的新執行個體<xref href=&quot;System.IO.FileSystemInfo&quot;></xref>使用序列化資料的類別。"
  remarks: "如需的一般 I/O 工作清單，請參閱[一般 I/O 工作](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: protected FileSystemInfo (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref>其中保存有關擲回例外狀況的序列化的物件資料。"
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "<xref:System.Runtime.Serialization.StreamingContext>其中包含關於來源或目的端內容資訊。</xref:System.Runtime.Serialization.StreamingContext>"
  overload: System.IO.FileSystemInfo.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "指定<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;></xref>為 null。"
  platform:
  - net462
- uid: System.IO.FileSystemInfo.Attributes
  id: Attributes
  parent: System.IO.FileSystemInfo
  langs:
  - csharp
  name: Attributes
  nameWithType: FileSystemInfo.Attributes
  fullName: System.IO.FileSystemInfo.Attributes
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "取得或設定目前檔案或目錄的屬性。"
  remarks: "屬性屬性的值時，預先快取的目前執行個體<xref:System.IO.FileSystemInfo>物件已從下列任何一個傳回<xref:System.IO.DirectoryInfo>方法:- <xref:System.IO.DirectoryInfo.GetDirectories%2A>- <xref:System.IO.DirectoryInfo.GetFiles%2A>- <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>- <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>- <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>-<xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>若要取得最新的值，呼叫<xref:System.IO.FileSystemInfo.Refresh%2A>方法。</xref:System.IO.FileSystemInfo.Refresh%2A> </xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> </xref:System.IO.DirectoryInfo.EnumerateFiles%2A> </xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> </xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> </xref:System.IO.DirectoryInfo.GetFiles%2A> </xref:System.IO.DirectoryInfo.GetDirectories%2A> </xref:System.IO.DirectoryInfo> </xref:System.IO.FileSystemInfo>       這個屬性的值是 archive、 compressed、 目錄、 隱藏、 離線、 唯讀、 系統和暫存檔案的屬性旗標的組合。       當您設定此值時，則使用位元 OR 運算子 (`|`在 C# 或`Or`在 Visual Basic 中) 以套用多個值。 若要保留任何現有的值，在 [屬性] 屬性，包括您指派中的屬性屬性的值。 例如︰`exampleFile.Attributes = exampleFile.Attributes | FileAttributes.ReadOnly;`"
  example:
  - "The following example demonstrates the Attributes property. This code example is part of a larger example provided for the <xref:System.IO.FileSystemInfo> class.  \n  \n [!code-cs[FileSystemInfo#2](~/add/codesnippet/csharp/p-system.io.filesystemin_3_1.cs)]\n [!code-cpp[FileSystemInfo#2](~/add/codesnippet/cpp/p-system.io.filesystemin_3_1.cpp)]\n [!code-vb[FileSystemInfo#2](~/add/codesnippet/visualbasic/p-system.io.filesystemin_3_1.vb)]"
  syntax:
    content: public System.IO.FileAttributes Attributes { get; set; }
    return:
      type: System.IO.FileAttributes
      description: "<xref href=&quot;System.IO.FileAttributes&quot;></xref>目前的<xref href=&quot;System.IO.FileSystemInfo&quot;> </xref>。"
  overload: System.IO.FileSystemInfo.Attributes*
  exceptions:
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "指定的檔案不存在。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "指定的路徑無效。例如，它位於未對應的磁碟機上。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "呼叫端沒有必要的權限。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "呼叫端嘗試設定檔案屬性無效。       -或者-使用者嘗試設定屬性值，但沒有寫入權限。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<xref:System.IO.FileSystemInfo.Refresh*>無法初始化資料。</xref:System.IO.FileSystemInfo.Refresh*>"
  platform:
  - net462
- uid: System.IO.FileSystemInfo.CreationTime
  id: CreationTime
  parent: System.IO.FileSystemInfo
  langs:
  - csharp
  name: CreationTime
  nameWithType: FileSystemInfo.CreationTime
  fullName: System.IO.FileSystemInfo.CreationTime
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "取得或設定目前檔案或目錄的建立時間。"
  remarks: "**請注意**這個方法可能會傳回不正確的值，因為它會使用其值可能不會持續更新作業系統的原生函式。       將 CreationTime 屬性的值是預先快取，如果目前的執行個體<xref:System.IO.FileSystemInfo>物件已從下列任何一個傳回<xref:System.IO.DirectoryInfo>方法:- <xref:System.IO.DirectoryInfo.GetDirectories%2A>- <xref:System.IO.DirectoryInfo.GetFiles%2A>- <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>- <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>- <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>-<xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>若要取得最新的值，呼叫<xref:System.IO.FileSystemInfo.Refresh%2A>方法。</xref:System.IO.FileSystemInfo.Refresh%2A> </xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> </xref:System.IO.DirectoryInfo.EnumerateFiles%2A> </xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> </xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> </xref:System.IO.DirectoryInfo.GetFiles%2A> </xref:System.IO.DirectoryInfo.GetDirectories%2A> </xref:System.IO.DirectoryInfo> </xref:System.IO.FileSystemInfo>       如果檔案中的<xref:System.IO.FileSystemInfo>物件不存在，這個屬性會傳回 12:00 午夜，1601年西元 1</xref:System.IO.FileSystemInfo>所述 (C.E.)國際標準時間 (UTC)，調整為本地時間。       NTFS 格式化磁碟機可能會快取檔案中繼資訊，例如一段時間的檔案建立時間。 這個程序稱為檔案通道。 如此一來，可能需要明確地將設定檔的建立時間，如果您要覆寫或取代現有的檔案。       這個屬性值`null`如果檔案系統包含<xref:System.IO.FileSystemInfo>物件不支援這項資訊。</xref:System.IO.FileSystemInfo>"
  example:
  - "The following example demonstrates the CreationTime property. This code example is part of a larger example provided for the <xref:System.IO.FileSystemInfo> class.  \n  \n [!code-cs[FileSystemInfo#2](~/add/codesnippet/csharp/p-system.io.filesystemin_4_1.cs)]\n [!code-cpp[FileSystemInfo#2](~/add/codesnippet/cpp/p-system.io.filesystemin_4_1.cpp)]\n [!code-vb[FileSystemInfo#2](~/add/codesnippet/visualbasic/p-system.io.filesystemin_4_1.vb)]"
  syntax:
    content: public DateTime CreationTime { get; set; }
    return:
      type: System.DateTime
      description: "建立日期和時間的目前<xref href=&quot;System.IO.FileSystemInfo&quot;></xref>物件。"
  overload: System.IO.FileSystemInfo.CreationTime*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<xref:System.IO.FileSystemInfo.Refresh*>無法初始化資料。</xref:System.IO.FileSystemInfo.Refresh*>"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "指定的路徑無效。例如，它位於未對應的磁碟機上。"
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "目前的作業系統不是 Windows NT 或更新版本。"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "呼叫端嘗試設定不正確的建立時間。"
  platform:
  - net462
- uid: System.IO.FileSystemInfo.CreationTimeUtc
  id: CreationTimeUtc
  parent: System.IO.FileSystemInfo
  langs:
  - csharp
  name: CreationTimeUtc
  nameWithType: FileSystemInfo.CreationTimeUtc
  fullName: System.IO.FileSystemInfo.CreationTimeUtc
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "取得或設定目前檔案或目錄的建立時間、 國際標準時間 (UTC)。"
  remarks: "**請注意**這個方法可能會傳回不正確的值，因為它會使用其值可能不會持續更新作業系統的原生函式。       CreationTimeUtc 屬性的值時，預先快取的目前執行個體<xref:System.IO.FileSystemInfo>物件已從下列任何一個傳回<xref:System.IO.DirectoryInfo>方法:- <xref:System.IO.DirectoryInfo.GetDirectories%2A>- <xref:System.IO.DirectoryInfo.GetFiles%2A>- <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>- <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>- <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>-<xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>若要取得最新的值，呼叫<xref:System.IO.FileSystemInfo.Refresh%2A>方法。</xref:System.IO.FileSystemInfo.Refresh%2A> </xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> </xref:System.IO.DirectoryInfo.EnumerateFiles%2A> </xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> </xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> </xref:System.IO.DirectoryInfo.GetFiles%2A> </xref:System.IO.DirectoryInfo.GetDirectories%2A> </xref:System.IO.DirectoryInfo> </xref:System.IO.FileSystemInfo>       如果檔案中的<xref:System.IO.FileSystemInfo>物件不存在，這個屬性會傳回 12:00 午夜，1601年西元 1</xref:System.IO.FileSystemInfo>所述 (C.E.)國際標準時間 (UTC)。       NTFS 格式化磁碟機可能會快取檔案中繼資訊，例如一段時間的檔案建立時間。 這個程序稱為檔案通道。 如此一來，可能需要明確地將設定檔的建立時間，如果您要覆寫或取代現有的檔案。       這個屬性值`null`如果檔案系統包含<xref:System.IO.FileSystemInfo>物件不支援這項資訊。</xref:System.IO.FileSystemInfo>"
  syntax:
    content: public DateTime CreationTimeUtc { get; set; }
    return:
      type: System.DateTime
      description: "建立日期和時間以 UTC 格式的目前<xref href=&quot;System.IO.FileSystemInfo&quot;></xref>物件。"
  overload: System.IO.FileSystemInfo.CreationTimeUtc*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<xref:System.IO.FileSystemInfo.Refresh*>無法初始化資料。</xref:System.IO.FileSystemInfo.Refresh*>"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "指定的路徑無效。例如，它位於未對應的磁碟機上。"
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "目前的作業系統不是 Windows NT 或更新版本。"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "呼叫端嘗試設定不正確的存取時間。"
  platform:
  - net462
- uid: System.IO.FileSystemInfo.Delete
  id: Delete
  parent: System.IO.FileSystemInfo
  langs:
  - csharp
  name: Delete()
  nameWithType: FileSystemInfo.Delete()
  fullName: System.IO.FileSystemInfo.Delete()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "刪除檔案或目錄。"
  syntax:
    content: public abstract void Delete ();
    parameters: []
  overload: System.IO.FileSystemInfo.Delete*
  exceptions:
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "指定的路徑無效。例如，它位於未對應的磁碟機上。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: '沒有開啟的控制代碼上的檔案或目錄，而且作業系統是 Windows XP 或更早版本。 這個開啟控制代碼可能是因為列舉目錄和檔案。 如需詳細資訊，請參閱[如何︰ 列舉目錄和檔案](~/add/includes/ajax-current-ext-md.md)。'
  platform:
  - net462
- uid: System.IO.FileSystemInfo.Exists
  id: Exists
  parent: System.IO.FileSystemInfo
  langs:
  - csharp
  name: Exists
  nameWithType: FileSystemInfo.Exists
  fullName: System.IO.FileSystemInfo.Exists
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "取得值，指出檔案或目錄是否存在。"
  remarks: "如需的一般 I/O 工作清單，請參閱[一般 I/O 工作](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public abstract bool Exists { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果檔案或目錄存在，否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.IO.FileSystemInfo.Exists*
  exceptions: []
  platform:
  - net462
- uid: System.IO.FileSystemInfo.Extension
  id: Extension
  parent: System.IO.FileSystemInfo
  langs:
  - csharp
  name: Extension
  nameWithType: FileSystemInfo.Extension
  fullName: System.IO.FileSystemInfo.Extension
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "取得字串，代表檔案的副檔名部分。"
  remarks: "The `Extension` property returns the <xref:System.IO.FileSystemInfo> extension, including the period (.). For example, for a file c:\\NewFile.txt, this property returns \".txt\".  \n  \n The following table lists examples of other typical or related I/O tasks.  \n  \n|To do this...|See the example in this topic...|  \n|-------------------|--------------------------------------|  \n|Create a text file.|[How to: Write Text to a File](~/add/includes/ajax-current-ext-md.md)|  \n|Write to a text file.|[How to: Write Text to a File](../Topic/How%20to:%20Write%20Text%20to%20a%20File.md)|  \n|Read from a text file.|[How to: Read Text from a File](~/add/includes/ajax-current-ext-md.md)|  \n|Retrieve the fully qualified path of a file.|<xref:System.IO.Path.GetFullPath%2A>|  \n|Retrieve only the file name a path.|<xref:System.IO.Path.GetFileNameWithoutExtension%2A>|  \n|Retrieve only the directory name from a path.|<xref:System.IO.Path.GetDirectoryName%2A>|  \n|Change the extension of a file.|<xref:System.IO.Path.ChangeExtension%2A>|"
  syntax:
    content: public string Extension { get; }
    return:
      type: System.String
      description: "字串，包含<xref href=&quot;System.IO.FileSystemInfo&quot;></xref>延伸模組。"
  overload: System.IO.FileSystemInfo.Extension*
  exceptions: []
  platform:
  - net462
- uid: System.IO.FileSystemInfo.FullName
  id: FullName
  parent: System.IO.FileSystemInfo
  langs:
  - csharp
  name: FullName
  nameWithType: FileSystemInfo.FullName
  fullName: System.IO.FileSystemInfo.FullName
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "取得目錄或檔案的完整路徑。"
  remarks: "For example, for a file c:\\NewFile.txt, this property returns \"c:\\NewFile.txt\".  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example demonstrates the FullName property. This code example is part of a larger example provided for the <xref:System.IO.FileSystemInfo> class.  \n  \n [!code-cs[FileSystemInfo#2](~/add/codesnippet/csharp/p-system.io.filesystemin_0_1.cs)]\n [!code-cpp[FileSystemInfo#2](~/add/codesnippet/cpp/p-system.io.filesystemin_0_1.cpp)]\n [!code-vb[FileSystemInfo#2](~/add/codesnippet/visualbasic/p-system.io.filesystemin_0_1.vb)]"
  syntax:
    content: public virtual string FullName { get; }
    return:
      type: System.String
      description: "字串，包含完整路徑。"
  overload: System.IO.FileSystemInfo.FullName*
  exceptions:
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "完整的路徑和檔案名稱為 260 或多個字元。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "呼叫端沒有必要的權限。"
  platform:
  - net462
- uid: System.IO.FileSystemInfo.FullPath
  id: FullPath
  parent: System.IO.FileSystemInfo
  langs:
  - csharp
  name: FullPath
  nameWithType: FileSystemInfo.FullPath
  fullName: System.IO.FileSystemInfo.FullPath
  type: Field
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "代表目錄或檔案的完整的路徑。"
  syntax:
    content: protected string FullPath;
    return:
      type: System.String
      description: "即將加入。"
  exceptions:
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "完整的路徑為 260 或多個字元。"
  platform:
  - net462
- uid: System.IO.FileSystemInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.IO.FileSystemInfo
  langs:
  - csharp
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: FileSystemInfo.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.IO.FileSystemInfo.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "設定<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;></xref>檔案名稱和額外例外狀況資訊的物件。"
  remarks: "如需的一般 I/O 工作清單，請參閱[一般 I/O 工作](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref>其中保存有關擲回例外狀況的序列化的物件資料。"
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "<xref:System.Runtime.Serialization.StreamingContext>其中包含關於來源或目的端內容資訊。</xref:System.Runtime.Serialization.StreamingContext>"
  overload: System.IO.FileSystemInfo.GetObjectData*
  exceptions: []
  platform:
  - net462
- uid: System.IO.FileSystemInfo.LastAccessTime
  id: LastAccessTime
  parent: System.IO.FileSystemInfo
  langs:
  - csharp
  name: LastAccessTime
  nameWithType: FileSystemInfo.LastAccessTime
  fullName: System.IO.FileSystemInfo.LastAccessTime
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "取得或設定目前檔案或目錄上次被存取的時間。"
  remarks: "**請注意**這個方法可能會傳回不正確的值，因為它會使用其值可能不會持續更新作業系統的原生函式。       如果檔案中的<xref:System.IO.FileSystemInfo>物件不存在，這個屬性會傳回 12:00 午夜，1601年西元 1</xref:System.IO.FileSystemInfo>所述 (C.E.)國際標準時間 (UTC)，調整為本地時間。       值<xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>預先快取，如果屬性為目前的執行個體<xref:System.IO.FileSystemInfo>物件已從下列任何一個傳回<xref:System.IO.DirectoryInfo>方法:- <xref:System.IO.DirectoryInfo.GetDirectories%2A>- <xref:System.IO.DirectoryInfo.GetFiles%2A>- <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>- <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>- <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>-<xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>若要取得最新的值，呼叫<xref:System.IO.FileSystemInfo.Refresh%2A>方法。</xref:System.IO.FileSystemInfo.Refresh%2A> </xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> </xref:System.IO.DirectoryInfo.EnumerateFiles%2A> </xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> </xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> </xref:System.IO.DirectoryInfo.GetFiles%2A> </xref:System.IO.DirectoryInfo.GetDirectories%2A> </xref:System.IO.DirectoryInfo> </xref:System.IO.FileSystemInfo> </xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>"
  example:
  - "The following code example demonstrates the updating of the LastAccessTime property through a \"touch\" operation. In this example, the file is \"touched\", updating the <xref:System.IO.FileSystemInfo.CreationTime%2A>, LastAccessTime and <xref:System.IO.FileSystemInfo.LastWriteTime%2A> properties to the current date and time.  \n  \n [!code-cs[System.IO.FileSystemInfo_touch#00](~/add/codesnippet/csharp/p-system.io.filesystemin_2_1.cs)]\n [!code-vb[System.IO.FileSystemInfo_touch#00](~/add/codesnippet/visualbasic/p-system.io.filesystemin_2_1.vb)]"
  syntax:
    content: public DateTime LastAccessTime { get; set; }
    return:
      type: System.DateTime
      description: "上次存取目前檔案或目錄的時間。"
  overload: System.IO.FileSystemInfo.LastAccessTime*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<xref:System.IO.FileSystemInfo.Refresh*>無法初始化資料。</xref:System.IO.FileSystemInfo.Refresh*>"
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "目前的作業系統不是 Windows NT 或更新版本。"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "呼叫端嘗試設定不正確的存取時間"
  platform:
  - net462
- uid: System.IO.FileSystemInfo.LastAccessTimeUtc
  id: LastAccessTimeUtc
  parent: System.IO.FileSystemInfo
  langs:
  - csharp
  name: LastAccessTimeUtc
  nameWithType: FileSystemInfo.LastAccessTimeUtc
  fullName: System.IO.FileSystemInfo.LastAccessTimeUtc
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "取得或設定在國際標準時間 (UTC)，目前檔案或目錄的上次存取時間。"
  remarks: "**請注意**這個方法可能會傳回不正確的值，因為它會使用其值可能不會持續更新作業系統的原生函式。       LastAccessTimeUtc 屬性的值時，預先快取的目前執行個體<xref:System.IO.FileSystemInfo>物件已從下列任何一個傳回<xref:System.IO.DirectoryInfo>方法:- <xref:System.IO.DirectoryInfo.GetDirectories%2A>- <xref:System.IO.DirectoryInfo.GetFiles%2A>- <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>- <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>- <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>-<xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>若要取得最新的值，呼叫<xref:System.IO.FileSystemInfo.Refresh%2A>方法。</xref:System.IO.FileSystemInfo.Refresh%2A> </xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> </xref:System.IO.DirectoryInfo.EnumerateFiles%2A> </xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> </xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> </xref:System.IO.DirectoryInfo.GetFiles%2A> </xref:System.IO.DirectoryInfo.GetDirectories%2A> </xref:System.IO.DirectoryInfo> </xref:System.IO.FileSystemInfo>       如果檔案中的<xref:System.IO.FileSystemInfo>物件不存在，這個屬性會傳回 12:00 午夜，1601年西元 1</xref:System.IO.FileSystemInfo>所述 (C.E.)國際標準時間 (UTC)。       如需的一般 I/O 工作清單，請參閱[一般 I/O 工作](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public DateTime LastAccessTimeUtc { get; set; }
    return:
      type: System.DateTime
      description: "上次存取目前檔案或目錄的 UTC 時間。"
  overload: System.IO.FileSystemInfo.LastAccessTimeUtc*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<xref:System.IO.FileSystemInfo.Refresh*>無法初始化資料。</xref:System.IO.FileSystemInfo.Refresh*>"
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "目前的作業系統不是 Windows NT 或更新版本。"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "呼叫端嘗試設定不正確的存取時間。"
  platform:
  - net462
- uid: System.IO.FileSystemInfo.LastWriteTime
  id: LastWriteTime
  parent: System.IO.FileSystemInfo
  langs:
  - csharp
  name: LastWriteTime
  nameWithType: FileSystemInfo.LastWriteTime
  fullName: System.IO.FileSystemInfo.LastWriteTime
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "取得或設定當目前的檔案或目錄上次被寫入至的時間。"
  remarks: "**請注意**這個方法可能會傳回不正確的值，因為它會使用其值可能不會持續更新作業系統的原生函式。       包含 LastWriteTime 屬性的值是預先快取，如果目前的執行個體<xref:System.IO.FileSystemInfo>物件已從下列任何一個傳回<xref:System.IO.DirectoryInfo>方法:- <xref:System.IO.DirectoryInfo.GetDirectories%2A>- <xref:System.IO.DirectoryInfo.GetFiles%2A>- <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>- <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>- <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>-<xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>若要取得最新的值，呼叫<xref:System.IO.FileSystemInfo.Refresh%2A>方法。</xref:System.IO.FileSystemInfo.Refresh%2A> </xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> </xref:System.IO.DirectoryInfo.EnumerateFiles%2A> </xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> </xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> </xref:System.IO.DirectoryInfo.GetFiles%2A> </xref:System.IO.DirectoryInfo.GetDirectories%2A> </xref:System.IO.DirectoryInfo> </xref:System.IO.FileSystemInfo>       如果檔案中的<xref:System.IO.FileSystemInfo>物件不存在，這個屬性會傳回 12:00 午夜，1601年西元 1</xref:System.IO.FileSystemInfo>所述 (C.E.)國際標準時間 (UTC)，調整為本地時間。       這個屬性值`null`如果包含檔案的檔案系統不支援這項資訊。"
  example:
  - "The following code example demonstrates the updating of the LastWriteTime property through a \"touch\" operation. In this example, the file is \"touched\", updating the <xref:System.IO.FileSystemInfo.CreationTime%2A>, <xref:System.IO.FileSystemInfo.LastAccessTime%2A> and LastWriteTime properties to the current date and time.  \n  \n [!code-cs[System.IO.FileSystemInfo_touch#00](~/add/codesnippet/csharp/p-system.io.filesystemin_1_1.cs)]\n [!code-vb[System.IO.FileSystemInfo_touch#00](~/add/codesnippet/visualbasic/p-system.io.filesystemin_1_1.vb)]"
  syntax:
    content: public DateTime LastWriteTime { get; set; }
    return:
      type: System.DateTime
      description: "目前檔案上次寫入時間。"
  overload: System.IO.FileSystemInfo.LastWriteTime*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<xref:System.IO.FileSystemInfo.Refresh*>無法初始化資料。</xref:System.IO.FileSystemInfo.Refresh*>"
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "目前的作業系統不是 Windows NT 或更新版本。"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "呼叫端嘗試設定無效的寫入時間。"
  platform:
  - net462
- uid: System.IO.FileSystemInfo.LastWriteTimeUtc
  id: LastWriteTimeUtc
  parent: System.IO.FileSystemInfo
  langs:
  - csharp
  name: LastWriteTimeUtc
  nameWithType: FileSystemInfo.LastWriteTimeUtc
  fullName: System.IO.FileSystemInfo.LastWriteTimeUtc
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "取得或設定時間、 國際標準時間 (UTC)，在目前檔案或目錄上次被寫入至。"
  remarks: "**請注意**這個方法可能會傳回不正確的值，因為它會使用其值可能不會持續更新作業系統的原生函式。       LastWriteTimeUtc 屬性的值時，預先快取的目前執行個體<xref:System.IO.FileSystemInfo>物件已從下列任何一個傳回<xref:System.IO.DirectoryInfo>方法:- <xref:System.IO.DirectoryInfo.GetDirectories%2A>- <xref:System.IO.DirectoryInfo.GetFiles%2A>- <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>- <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>- <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>-<xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>若要取得最新的值，呼叫<xref:System.IO.FileSystemInfo.Refresh%2A>方法。</xref:System.IO.FileSystemInfo.Refresh%2A> </xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> </xref:System.IO.DirectoryInfo.EnumerateFiles%2A> </xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> </xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> </xref:System.IO.DirectoryInfo.GetFiles%2A> </xref:System.IO.DirectoryInfo.GetDirectories%2A> </xref:System.IO.DirectoryInfo> </xref:System.IO.FileSystemInfo>       如果檔案中的<xref:System.IO.FileSystemInfo>物件不存在，這個屬性會傳回 12:00 午夜，1601年西元 1</xref:System.IO.FileSystemInfo>所述 (C.E.)國際標準時間 (UTC)。       這個屬性值`null`如果包含檔案的檔案系統不支援這項資訊。"
  syntax:
    content: public DateTime LastWriteTimeUtc { get; set; }
    return:
      type: System.DateTime
      description: "當目前檔案上次被寫入的 UTC 時間。"
  overload: System.IO.FileSystemInfo.LastWriteTimeUtc*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<xref:System.IO.FileSystemInfo.Refresh*>無法初始化資料。</xref:System.IO.FileSystemInfo.Refresh*>"
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "目前的作業系統不是 Windows NT 或更新版本。"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "呼叫端嘗試設定無效的寫入時間。"
  platform:
  - net462
- uid: System.IO.FileSystemInfo.Name
  id: Name
  parent: System.IO.FileSystemInfo
  langs:
  - csharp
  name: Name
  nameWithType: FileSystemInfo.Name
  fullName: System.IO.FileSystemInfo.Name
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "對於檔案，取得檔案的名稱。 對於目錄，如果階層存在，階層中取得最後一個目錄的名稱。 否則， <xref uid=&quot;langword_csharp_Name&quot; name=&quot;Name&quot; href=&quot;&quot;> </xref>屬性會取得目錄的名稱。"
  remarks: "For a directory, `Name` returns only the name of the parent directory, such as Dir, not c:\\Dir. For a subdirectory, `Name` returns only the name of the subdirectory, such as Sub1, not c:\\Dir\\Sub1.  \n  \n For a file, `Name` returns only the file name and file name extension, such as MyFile.txt, not c:\\Dir\\Myfile.txt."
  syntax:
    content: public abstract string Name { get; }
    return:
      type: System.String
      description: "字串，是父目錄的名稱、 在階層中，最後一個目錄的名稱或檔案的名稱，包括檔案名稱的副檔名。"
  overload: System.IO.FileSystemInfo.Name*
  exceptions: []
  platform:
  - net462
- uid: System.IO.FileSystemInfo.OriginalPath
  id: OriginalPath
  parent: System.IO.FileSystemInfo
  langs:
  - csharp
  name: OriginalPath
  nameWithType: FileSystemInfo.OriginalPath
  fullName: System.IO.FileSystemInfo.OriginalPath
  type: Field
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "指定的原始使用者相對或絕對路徑。"
  remarks: "如需的一般 I/O 工作清單，請參閱[一般 I/O 工作](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: protected string OriginalPath;
    return:
      type: System.String
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.IO.FileSystemInfo.Refresh
  id: Refresh
  parent: System.IO.FileSystemInfo
  langs:
  - csharp
  name: Refresh()
  nameWithType: FileSystemInfo.Refresh()
  fullName: System.IO.FileSystemInfo.Refresh()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "重新整理物件的狀態。"
  remarks: "`FileSystemInfo.Refresh`從目前的檔案系統檔案的快照。 `Refresh`無法更正的基礎檔案系統，即使檔案系統會傳回不正確或過時的資訊。 這種情形等 Windows 98 平台上。       必須發出呼叫`Refresh`之前嘗試取得屬性資訊或資訊可能會過期。"
  syntax:
    content: public void Refresh ();
    parameters: []
  overload: System.IO.FileSystemInfo.Refresh*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "例如，磁碟機的裝置尚未就緒。"
  platform:
  - net462
references:
- uid: System.MarshalByRefObject
  isExternal: false
  name: System.MarshalByRefObject
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.IO.FileNotFoundException
  isExternal: true
  name: System.IO.FileNotFoundException
- uid: System.IO.DirectoryNotFoundException
  isExternal: true
  name: System.IO.DirectoryNotFoundException
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.PlatformNotSupportedException
  isExternal: true
  name: System.PlatformNotSupportedException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.IO.PathTooLongException
  isExternal: true
  name: System.IO.PathTooLongException
- uid: System.IO.FileSystemInfo.#ctor
  parent: System.IO.FileSystemInfo
  isExternal: false
  name: FileSystemInfo()
  nameWithType: FileSystemInfo.FileSystemInfo()
  fullName: System.IO.FileSystemInfo.FileSystemInfo()
- uid: System.IO.FileSystemInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.IO.FileSystemInfo
  isExternal: false
  name: FileSystemInfo(SerializationInfo,StreamingContext)
  nameWithType: FileSystemInfo.FileSystemInfo(SerializationInfo,StreamingContext)
  fullName: System.IO.FileSystemInfo.FileSystemInfo(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.IO.FileSystemInfo.Attributes
  parent: System.IO.FileSystemInfo
  isExternal: false
  name: Attributes
  nameWithType: FileSystemInfo.Attributes
  fullName: System.IO.FileSystemInfo.Attributes
- uid: System.IO.FileAttributes
  parent: System.IO
  isExternal: false
  name: FileAttributes
  nameWithType: FileAttributes
  fullName: System.IO.FileAttributes
- uid: System.IO.FileSystemInfo.CreationTime
  parent: System.IO.FileSystemInfo
  isExternal: false
  name: CreationTime
  nameWithType: FileSystemInfo.CreationTime
  fullName: System.IO.FileSystemInfo.CreationTime
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.IO.FileSystemInfo.CreationTimeUtc
  parent: System.IO.FileSystemInfo
  isExternal: false
  name: CreationTimeUtc
  nameWithType: FileSystemInfo.CreationTimeUtc
  fullName: System.IO.FileSystemInfo.CreationTimeUtc
- uid: System.IO.FileSystemInfo.Delete
  parent: System.IO.FileSystemInfo
  isExternal: false
  name: Delete()
  nameWithType: FileSystemInfo.Delete()
  fullName: System.IO.FileSystemInfo.Delete()
- uid: System.IO.FileSystemInfo.Exists
  parent: System.IO.FileSystemInfo
  isExternal: false
  name: Exists
  nameWithType: FileSystemInfo.Exists
  fullName: System.IO.FileSystemInfo.Exists
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IO.FileSystemInfo.Extension
  parent: System.IO.FileSystemInfo
  isExternal: false
  name: Extension
  nameWithType: FileSystemInfo.Extension
  fullName: System.IO.FileSystemInfo.Extension
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.FileSystemInfo.FullName
  parent: System.IO.FileSystemInfo
  isExternal: false
  name: FullName
  nameWithType: FileSystemInfo.FullName
  fullName: System.IO.FileSystemInfo.FullName
- uid: System.IO.FileSystemInfo.FullPath
  parent: System.IO.FileSystemInfo
  isExternal: false
  name: FullPath
  nameWithType: FileSystemInfo.FullPath
  fullName: System.IO.FileSystemInfo.FullPath
- uid: System.IO.FileSystemInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.IO.FileSystemInfo
  isExternal: false
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: FileSystemInfo.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.IO.FileSystemInfo.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.IO.FileSystemInfo.LastAccessTime
  parent: System.IO.FileSystemInfo
  isExternal: false
  name: LastAccessTime
  nameWithType: FileSystemInfo.LastAccessTime
  fullName: System.IO.FileSystemInfo.LastAccessTime
- uid: System.IO.FileSystemInfo.LastAccessTimeUtc
  parent: System.IO.FileSystemInfo
  isExternal: false
  name: LastAccessTimeUtc
  nameWithType: FileSystemInfo.LastAccessTimeUtc
  fullName: System.IO.FileSystemInfo.LastAccessTimeUtc
- uid: System.IO.FileSystemInfo.LastWriteTime
  parent: System.IO.FileSystemInfo
  isExternal: false
  name: LastWriteTime
  nameWithType: FileSystemInfo.LastWriteTime
  fullName: System.IO.FileSystemInfo.LastWriteTime
- uid: System.IO.FileSystemInfo.LastWriteTimeUtc
  parent: System.IO.FileSystemInfo
  isExternal: false
  name: LastWriteTimeUtc
  nameWithType: FileSystemInfo.LastWriteTimeUtc
  fullName: System.IO.FileSystemInfo.LastWriteTimeUtc
- uid: System.IO.FileSystemInfo.Name
  parent: System.IO.FileSystemInfo
  isExternal: false
  name: Name
  nameWithType: FileSystemInfo.Name
  fullName: System.IO.FileSystemInfo.Name
- uid: System.IO.FileSystemInfo.OriginalPath
  parent: System.IO.FileSystemInfo
  isExternal: false
  name: OriginalPath
  nameWithType: FileSystemInfo.OriginalPath
  fullName: System.IO.FileSystemInfo.OriginalPath
- uid: System.IO.FileSystemInfo.Refresh
  parent: System.IO.FileSystemInfo
  isExternal: false
  name: Refresh()
  nameWithType: FileSystemInfo.Refresh()
  fullName: System.IO.FileSystemInfo.Refresh()
- uid: System.IO.FileSystemInfo.#ctor*
  parent: System.IO.FileSystemInfo
  isExternal: false
  name: FileSystemInfo
  nameWithType: FileSystemInfo.FileSystemInfo
- uid: System.IO.FileSystemInfo.Attributes*
  parent: System.IO.FileSystemInfo
  isExternal: false
  name: Attributes
  nameWithType: FileSystemInfo.Attributes
- uid: System.IO.FileSystemInfo.CreationTime*
  parent: System.IO.FileSystemInfo
  isExternal: false
  name: CreationTime
  nameWithType: FileSystemInfo.CreationTime
- uid: System.IO.FileSystemInfo.CreationTimeUtc*
  parent: System.IO.FileSystemInfo
  isExternal: false
  name: CreationTimeUtc
  nameWithType: FileSystemInfo.CreationTimeUtc
- uid: System.IO.FileSystemInfo.Delete*
  parent: System.IO.FileSystemInfo
  isExternal: false
  name: Delete
  nameWithType: FileSystemInfo.Delete
- uid: System.IO.FileSystemInfo.Exists*
  parent: System.IO.FileSystemInfo
  isExternal: false
  name: Exists
  nameWithType: FileSystemInfo.Exists
- uid: System.IO.FileSystemInfo.Extension*
  parent: System.IO.FileSystemInfo
  isExternal: false
  name: Extension
  nameWithType: FileSystemInfo.Extension
- uid: System.IO.FileSystemInfo.FullName*
  parent: System.IO.FileSystemInfo
  isExternal: false
  name: FullName
  nameWithType: FileSystemInfo.FullName
- uid: System.IO.FileSystemInfo.GetObjectData*
  parent: System.IO.FileSystemInfo
  isExternal: false
  name: GetObjectData
  nameWithType: FileSystemInfo.GetObjectData
- uid: System.IO.FileSystemInfo.LastAccessTime*
  parent: System.IO.FileSystemInfo
  isExternal: false
  name: LastAccessTime
  nameWithType: FileSystemInfo.LastAccessTime
- uid: System.IO.FileSystemInfo.LastAccessTimeUtc*
  parent: System.IO.FileSystemInfo
  isExternal: false
  name: LastAccessTimeUtc
  nameWithType: FileSystemInfo.LastAccessTimeUtc
- uid: System.IO.FileSystemInfo.LastWriteTime*
  parent: System.IO.FileSystemInfo
  isExternal: false
  name: LastWriteTime
  nameWithType: FileSystemInfo.LastWriteTime
- uid: System.IO.FileSystemInfo.LastWriteTimeUtc*
  parent: System.IO.FileSystemInfo
  isExternal: false
  name: LastWriteTimeUtc
  nameWithType: FileSystemInfo.LastWriteTimeUtc
- uid: System.IO.FileSystemInfo.Name*
  parent: System.IO.FileSystemInfo
  isExternal: false
  name: Name
  nameWithType: FileSystemInfo.Name
- uid: System.IO.FileSystemInfo.Refresh*
  parent: System.IO.FileSystemInfo
  isExternal: false
  name: Refresh
  nameWithType: FileSystemInfo.Refresh
