### YamlMime:ManagedReference
items:
- uid: System.Drawing.BufferedGraphics
  id: BufferedGraphics
  children:
  - System.Drawing.BufferedGraphics.Dispose
  - System.Drawing.BufferedGraphics.Finalize
  - System.Drawing.BufferedGraphics.Graphics
  - System.Drawing.BufferedGraphics.Render
  - System.Drawing.BufferedGraphics.Render(System.Drawing.Graphics)
  - System.Drawing.BufferedGraphics.Render(System.IntPtr)
  langs:
  - csharp
  name: BufferedGraphics
  nameWithType: BufferedGraphics
  fullName: System.Drawing.BufferedGraphics
  type: Class
  summary: "提供雙重緩衝的圖形緩衝區。"
  remarks: "BufferedGraphics 類別可讓您實作自訂雙重緩衝的圖形。 它提供圖形緩衝區，以及可用來寫入緩衝區以及轉譯其內容至輸出裝置的方法包裝函式。       使用雙重緩衝的圖形可以減少或消除閃爍因重繪顯示介面的。 當您使用雙重緩衝時，緩衝區在記憶體中，會先繪製更新的圖形和這個緩衝區的內容會接著快速寫入部分或所有顯示的介面。 顯示圖形這相當簡短覆寫通常會減少，或完全排除，有時會發生更新時，圖形會閃爍。      > [!NOTE] > 使用雙重緩衝的最簡單方式是設定<xref:System.Windows.Forms.ControlStyles>控制樣式旗標控制使用<xref:System.Windows.Forms.Control.SetStyle%2A>方法。</xref:System.Windows.Forms.Control.SetStyle%2A> </xref:System.Windows.Forms.ControlStyles> 設定<xref:System.Windows.Forms.ControlStyles>旗標的控制項將所有繪製控制項的預設圖形緩衝區中，透過重新都導向而不需要任何額外的程式碼。</xref:System.Windows.Forms.ControlStyles> 若要設定此旗標`true`預設。       BufferedGraphics 類別沒有公用建構函式，必須加以建立<xref:System.Drawing.BufferedGraphicsContext>應用程式網域使用其<xref:System.Drawing.BufferedGraphicsContext.Allocate%2A>方法。</xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> </xref:System.Drawing.BufferedGraphicsContext> 您可以擷取<xref:System.Drawing.BufferedGraphicsContext>目前應用程式定義域靜態<xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=fullName>屬性。</xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=fullName> </xref:System.Drawing.BufferedGraphicsContext>       <xref:System.Drawing.BufferedGraphics.Graphics%2A>屬性可用於繪圖至圖形緩衝區。</xref:System.Drawing.BufferedGraphics.Graphics%2A> 此屬性可存取<xref:System.Drawing.Graphics>繪製至圖形緩衝區此 BufferedGraphics 物件所配置的物件。</xref:System.Drawing.Graphics>       <xref:System.Drawing.BufferedGraphics.Render%2A>與任何引數繪製的圖形內容的緩衝區至介面方法可讓您指定當已配置的緩衝區。</xref:System.Drawing.BufferedGraphics.Render%2A> 其他多載<xref:System.Drawing.BufferedGraphics.Render%2A>方法可讓您指定<xref:System.Drawing.Graphics>物件或<xref:System.IntPtr>指向要繪製圖形緩衝區的內容的裝置內容物件。</xref:System.IntPtr> </xref:System.Drawing.Graphics> </xref:System.Drawing.BufferedGraphics.Render%2A>       如需繪製雙重緩衝的圖形的詳細資訊，請參閱[雙重緩衝的圖形](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following code example demonstrates using a BufferedGraphics object to draw graphics using several types of buffering implementations. Clicking the form alternately starts and stops a timer that causes draw updates. The draw updates allow you to observe the effect of double buffering. Right-clicking the form cycles through the following drawing modes:  \n  \n-   Drawing directly to the <xref:System.Windows.Forms.Control.Handle%2A> for a <xref:System.Windows.Forms.Form>.  \n  \n-   Drawing by overriding the <xref:System.Windows.Forms.Form.OnPaint%2A> method using the <xref:System.Windows.Forms.ControlStyles> control style.  \n  \n-   Drawing by overriding the <xref:System.Windows.Forms.Form.OnPaint%2A> method for the form method without using the <xref:System.Windows.Forms.ControlStyles> control style.  \n  \n In each mode, text is drawn that identifies the current mode and describes the behavior that occurs when each mouse button is pressed.  \n  \n [!code-cpp[BufferedGraphicsExample#1](~/add/codesnippet/cpp/t-system.drawing.buffere_1_1.cpp)]\n [!code-cs[BufferedGraphicsExample#1](~/add/codesnippet/csharp/t-system.drawing.buffere_1_1.cs)]\n [!code-vb[BufferedGraphicsExample#1](~/add/codesnippet/visualbasic/t-system.drawing.buffere_1_1.vb)]"
  syntax:
    content: 'public sealed class BufferedGraphics : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Drawing.BufferedGraphics.Dispose
  id: Dispose
  parent: System.Drawing.BufferedGraphics
  langs:
  - csharp
  name: Dispose()
  nameWithType: BufferedGraphics.Dispose()
  fullName: System.Drawing.BufferedGraphics.Dispose()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "所使用的資源全部釋出<xref href=&quot;System.Drawing.BufferedGraphics&quot;></xref>物件。"
  remarks: "當您完成時呼叫 Dispose 使用<xref:System.Drawing.BufferedGraphics>物件。</xref:System.Drawing.BufferedGraphics> Dispose 方法會使<xref:System.Drawing.BufferedGraphics>中無法使用的狀態物件。</xref:System.Drawing.BufferedGraphics> 在呼叫 Dispose 之後，您必須釋放所有參考<xref:System.Drawing.BufferedGraphics>物件，以便記憶體回收行程可以回收的記憶體，<xref:System.Drawing.BufferedGraphics>物件所佔用。</xref:System.Drawing.BufferedGraphics> </xref:System.Drawing.BufferedGraphics> 如需詳細資訊，請參閱[清除 Unmanaged 資源上](~/add/includes/ajax-current-ext-md.md)和[實作 Dispose 方法](~/add/includes/ajax-current-ext-md.md)。      > [!NOTE] > 永遠呼叫 Dispose 之前您釋放最後一個參考<xref:System.Drawing.BufferedGraphics>物件。</xref:System.Drawing.BufferedGraphics> 否則，它所使用的資源將不會釋放直到記憶體回收行程呼叫<xref:System.Drawing.BufferedGraphics>物件的`Finalize`方法。</xref:System.Drawing.BufferedGraphics>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Drawing.BufferedGraphics.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.BufferedGraphics.Finalize
  id: Finalize
  parent: System.Drawing.BufferedGraphics
  langs:
  - csharp
  name: Finalize()
  nameWithType: BufferedGraphics.Finalize()
  fullName: System.Drawing.BufferedGraphics.Finalize()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "允許物件嘗試釋放資源，並透過記憶體回收開始前執行其他清除作業。"
  syntax:
    content: ~BufferedGraphics ();
    parameters: []
  overload: System.Drawing.BufferedGraphics.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.BufferedGraphics.Graphics
  id: Graphics
  parent: System.Drawing.BufferedGraphics
  langs:
  - csharp
  name: Graphics
  nameWithType: BufferedGraphics.Graphics
  fullName: System.Drawing.BufferedGraphics.Graphics
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "取得<xref href=&quot;System.Drawing.Graphics&quot;></xref>輸出至圖形緩衝區的物件。"
  remarks: "這個屬性提供<xref:System.Drawing.Graphics>繪製至這個已配置的圖形緩衝區的物件<xref:System.Drawing.BufferedGraphics>物件。</xref:System.Drawing.BufferedGraphics> </xref:System.Drawing.Graphics>"
  syntax:
    content: public System.Drawing.Graphics Graphics { get; }
    return:
      type: System.Drawing.Graphics
      description: "A <xref href=&quot;System.Drawing.Graphics&quot;> </xref>輸出至圖形緩衝區的物件。"
  overload: System.Drawing.BufferedGraphics.Graphics*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.BufferedGraphics.Render
  id: Render
  parent: System.Drawing.BufferedGraphics
  langs:
  - csharp
  name: Render()
  nameWithType: BufferedGraphics.Render()
  fullName: System.Drawing.BufferedGraphics.Render()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "將圖形緩衝區的內容寫入預設裝置。"
  remarks: "這個方法會寫入圖形緩衝區的內容，藉由呼叫指定的裝置<xref:System.Drawing.BufferedGraphicsContext.Allocate%2A>方法<xref:System.Drawing.BufferedGraphicsContext>用來建立此<xref:System.Drawing.BufferedGraphics>物件。</xref:System.Drawing.BufferedGraphics> </xref:System.Drawing.BufferedGraphicsContext> </xref:System.Drawing.BufferedGraphicsContext.Allocate%2A>"
  syntax:
    content: public void Render ();
    parameters: []
  overload: System.Drawing.BufferedGraphics.Render*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.BufferedGraphics.Render(System.Drawing.Graphics)
  id: Render(System.Drawing.Graphics)
  parent: System.Drawing.BufferedGraphics
  langs:
  - csharp
  name: Render(Graphics)
  nameWithType: BufferedGraphics.Render(Graphics)
  fullName: System.Drawing.BufferedGraphics.Render(Graphics)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "將圖形緩衝區的內容寫入指定<xref href=&quot;System.Drawing.Graphics&quot;></xref>物件。"
  remarks: "這個方法會將圖形緩衝區的內容寫入指定<xref:System.Drawing.Graphics>物件。</xref:System.Drawing.Graphics>"
  example:
  - "The following code example demonstrates rendering the contents of the graphics buffer to a specified <xref:System.Drawing.Graphics> object. This code is part of a larger example provided for the <xref:System.Drawing.BufferedGraphics> class.  \n  \n [!code-cs[BufferingExamples#5](~/add/codesnippet/csharp/m-system.drawing.buffere_1_1.cs)]\n [!code-cpp[BufferingExamples#5](~/add/codesnippet/cpp/m-system.drawing.buffere_1_1.cpp)]\n [!code-vb[BufferingExamples#5](~/add/codesnippet/visualbasic/m-system.drawing.buffere_1_1.vb)]"
  syntax:
    content: public void Render (System.Drawing.Graphics target);
    parameters:
    - id: target
      type: System.Drawing.Graphics
      description: "A <xref href=&quot;System.Drawing.Graphics&quot;> </xref>寫入圖形緩衝區的內容物件。"
  overload: System.Drawing.BufferedGraphics.Render*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.BufferedGraphics.Render(System.IntPtr)
  id: Render(System.IntPtr)
  parent: System.Drawing.BufferedGraphics
  langs:
  - csharp
  name: Render(IntPtr)
  nameWithType: BufferedGraphics.Render(IntPtr)
  fullName: System.Drawing.BufferedGraphics.Render(IntPtr)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "將圖形緩衝區的內容寫入指定相關聯的裝置內容<xref:System.IntPtr>處理。</xref:System.IntPtr>"
  remarks: "這個方法會將圖形緩衝區的內容寫入指定相關聯的裝置內容<xref:System.IntPtr>處理。</xref:System.IntPtr>"
  example:
  - "The following code example demonstrates how to render the contents of the graphics buffer `grafx` to a specified device context. This code is part of a larger example provided for the <xref:System.Drawing.BufferedGraphics> class.  \n  \n [!code-cs[BufferingExamples#6](~/add/codesnippet/csharp/m-system.drawing.buffere_0_1.cs)]\n [!code-cpp[BufferingExamples#6](~/add/codesnippet/cpp/m-system.drawing.buffere_0_1.cpp)]\n [!code-vb[BufferingExamples#6](~/add/codesnippet/visualbasic/m-system.drawing.buffere_0_1.vb)]"
  syntax:
    content: public void Render (IntPtr targetDC);
    parameters:
    - id: targetDC
      type: System.IntPtr
      description: "<xref:System.IntPtr>，以指到裝置內容，以供寫入圖形緩衝區的內容。</xref:System.IntPtr>"
  overload: System.Drawing.BufferedGraphics.Render*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Drawing.BufferedGraphics.Dispose
  parent: System.Drawing.BufferedGraphics
  isExternal: false
  name: Dispose()
  nameWithType: BufferedGraphics.Dispose()
  fullName: System.Drawing.BufferedGraphics.Dispose()
- uid: System.Drawing.BufferedGraphics.Finalize
  parent: System.Drawing.BufferedGraphics
  isExternal: false
  name: Finalize()
  nameWithType: BufferedGraphics.Finalize()
  fullName: System.Drawing.BufferedGraphics.Finalize()
- uid: System.Drawing.BufferedGraphics.Graphics
  parent: System.Drawing.BufferedGraphics
  isExternal: false
  name: Graphics
  nameWithType: BufferedGraphics.Graphics
  fullName: System.Drawing.BufferedGraphics.Graphics
- uid: System.Drawing.Graphics
  parent: System.Drawing
  isExternal: false
  name: Graphics
  nameWithType: Graphics
  fullName: System.Drawing.Graphics
- uid: System.Drawing.BufferedGraphics.Render
  parent: System.Drawing.BufferedGraphics
  isExternal: false
  name: Render()
  nameWithType: BufferedGraphics.Render()
  fullName: System.Drawing.BufferedGraphics.Render()
- uid: System.Drawing.BufferedGraphics.Render(System.Drawing.Graphics)
  parent: System.Drawing.BufferedGraphics
  isExternal: false
  name: Render(Graphics)
  nameWithType: BufferedGraphics.Render(Graphics)
  fullName: System.Drawing.BufferedGraphics.Render(Graphics)
- uid: System.Drawing.BufferedGraphics.Render(System.IntPtr)
  parent: System.Drawing.BufferedGraphics
  isExternal: false
  name: Render(IntPtr)
  nameWithType: BufferedGraphics.Render(IntPtr)
  fullName: System.Drawing.BufferedGraphics.Render(IntPtr)
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Drawing.BufferedGraphics.Dispose*
  parent: System.Drawing.BufferedGraphics
  isExternal: false
  name: Dispose
  nameWithType: BufferedGraphics.Dispose
- uid: System.Drawing.BufferedGraphics.Finalize*
  parent: System.Drawing.BufferedGraphics
  isExternal: false
  name: Finalize
  nameWithType: BufferedGraphics.Finalize
- uid: System.Drawing.BufferedGraphics.Graphics*
  parent: System.Drawing.BufferedGraphics
  isExternal: false
  name: Graphics
  nameWithType: BufferedGraphics.Graphics
- uid: System.Drawing.BufferedGraphics.Render*
  parent: System.Drawing.BufferedGraphics
  isExternal: false
  name: Render
  nameWithType: BufferedGraphics.Render
