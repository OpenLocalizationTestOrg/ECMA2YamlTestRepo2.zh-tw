### YamlMime:ManagedReference
items:
- uid: System.Windows.Threading.DispatcherOperation
  id: DispatcherOperation
  children:
  - System.Windows.Threading.DispatcherOperation.Abort
  - System.Windows.Threading.DispatcherOperation.Aborted
  - System.Windows.Threading.DispatcherOperation.Completed
  - System.Windows.Threading.DispatcherOperation.Dispatcher
  - System.Windows.Threading.DispatcherOperation.GetAwaiter
  - System.Windows.Threading.DispatcherOperation.InvokeDelegateCore
  - System.Windows.Threading.DispatcherOperation.Priority
  - System.Windows.Threading.DispatcherOperation.Result
  - System.Windows.Threading.DispatcherOperation.Status
  - System.Windows.Threading.DispatcherOperation.Task
  - System.Windows.Threading.DispatcherOperation.Wait
  - System.Windows.Threading.DispatcherOperation.Wait(System.TimeSpan)
  langs:
  - csharp
  name: DispatcherOperation
  nameWithType: DispatcherOperation
  fullName: System.Windows.Threading.DispatcherOperation
  type: Class
  summary: "代表用來與已張貼到作業互動的物件<xref href=&quot;System.Windows.Threading.Dispatcher&quot;></xref>佇列。"
  remarks: "<xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>當呼叫時傳回 DispatcherOperation 物件。</xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>       DispatcherOperation 物件可以用來與委派互動上<xref:System.Windows.Threading.Dispatcher>佇列中，例如變更作業的優先順序或中止作業。</xref:System.Windows.Threading.Dispatcher>       若要取得叫用委派的傳回值，請使用<xref:System.Windows.Threading.DispatcherOperation.Result%2A>屬性。</xref:System.Windows.Threading.DispatcherOperation.Result%2A>       DispatcherOperation 不是以例外狀況處理的界限。 這表示例外狀況會由<xref:System.Windows.Threading.Dispatcher>並不會保留作業。</xref:System.Windows.Threading.Dispatcher>"
  syntax:
    content: public class DispatcherOperation
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Threading.DispatcherOperation.Abort
  id: Abort
  parent: System.Windows.Threading.DispatcherOperation
  langs:
  - csharp
  name: Abort()
  nameWithType: DispatcherOperation.Abort()
  fullName: System.Windows.Threading.DispatcherOperation.Abort()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Threading
  summary: "中止作業。"
  remarks: "如果作業已經正在進行中，這個方法會傳回`false`。       作業中止、 當<xref:System.Windows.Threading.DispatcherOperation.Status%2A>的<xref:System.Windows.Threading.DispatcherOperation>設<xref:System.Windows.Threading.DispatcherOperationStatus>和<xref:System.Windows.Threading.DispatcherOperation.Aborted>就會引發事件。</xref:System.Windows.Threading.DispatcherOperation.Aborted> </xref:System.Windows.Threading.DispatcherOperationStatus> </xref:System.Windows.Threading.DispatcherOperation> </xref:System.Windows.Threading.DispatcherOperation.Status%2A>"
  syntax:
    content: public bool Abort ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果作業已中止。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Threading.DispatcherOperation.Abort*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Threading.DispatcherOperation.Aborted
  id: Aborted
  parent: System.Windows.Threading.DispatcherOperation
  langs:
  - csharp
  name: Aborted
  nameWithType: DispatcherOperation.Aborted
  fullName: System.Windows.Threading.DispatcherOperation.Aborted
  type: Event
  assemblies:
  - WindowsBase
  namespace: System.Windows.Threading
  summary: "操作已中止時，就會發生。"
  syntax:
    content: public event EventHandler Aborted;
    return:
      type: System.EventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Threading.DispatcherOperation.Completed
  id: Completed
  parent: System.Windows.Threading.DispatcherOperation
  langs:
  - csharp
  name: Completed
  nameWithType: DispatcherOperation.Completed
  fullName: System.Windows.Threading.DispatcherOperation.Completed
  type: Event
  assemblies:
  - WindowsBase
  namespace: System.Windows.Threading
  summary: "當作業完成時發生。"
  syntax:
    content: public event EventHandler Completed;
    return:
      type: System.EventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Threading.DispatcherOperation.Dispatcher
  id: Dispatcher
  parent: System.Windows.Threading.DispatcherOperation
  langs:
  - csharp
  name: Dispatcher
  nameWithType: DispatcherOperation.Dispatcher
  fullName: System.Windows.Threading.DispatcherOperation.Dispatcher
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows.Threading
  summary: "取得<xref href=&quot;System.Windows.Threading.Dispatcher&quot;></xref>作業公佈到。"
  syntax:
    content: public System.Windows.Threading.Dispatcher Dispatcher { get; }
    return:
      type: System.Windows.Threading.Dispatcher
      description: "發送器。"
  overload: System.Windows.Threading.DispatcherOperation.Dispatcher*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Threading.DispatcherOperation.GetAwaiter
  id: GetAwaiter
  parent: System.Windows.Threading.DispatcherOperation
  langs:
  - csharp
  name: GetAwaiter()
  nameWithType: DispatcherOperation.GetAwaiter()
  fullName: System.Windows.Threading.DispatcherOperation.GetAwaiter()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Threading
  summary: "傳回非同步作業完成時，會收到通知的物件。"
  syntax:
    content: public System.Runtime.CompilerServices.TaskAwaiter GetAwaiter ();
    parameters: []
    return:
      type: System.Runtime.CompilerServices.TaskAwaiter
      description: "物件，會在非同步作業完成時收到通知。"
  overload: System.Windows.Threading.DispatcherOperation.GetAwaiter*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Threading.DispatcherOperation.InvokeDelegateCore
  id: InvokeDelegateCore
  parent: System.Windows.Threading.DispatcherOperation
  langs:
  - csharp
  name: InvokeDelegateCore()
  nameWithType: DispatcherOperation.InvokeDelegateCore()
  fullName: System.Windows.Threading.DispatcherOperation.InvokeDelegateCore()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Threading
  summary: "開始會與此相關聯的作業<xref href=&quot;System.Windows.Threading.DispatcherOperation&quot;> </xref>。"
  syntax:
    content: protected virtual object InvokeDelegateCore ();
    parameters: []
    return:
      type: System.Object
      description: "<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>在所有情況下。"
  overload: System.Windows.Threading.DispatcherOperation.InvokeDelegateCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Threading.DispatcherOperation.Priority
  id: Priority
  parent: System.Windows.Threading.DispatcherOperation
  langs:
  - csharp
  name: Priority
  nameWithType: DispatcherOperation.Priority
  fullName: System.Windows.Threading.DispatcherOperation.Priority
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows.Threading
  summary: "取得或設定中的作業優先順序<xref href=&quot;System.Windows.Threading.Dispatcher&quot;></xref>佇列。"
  syntax:
    content: public System.Windows.Threading.DispatcherPriority Priority { get; set; }
    return:
      type: System.Windows.Threading.DispatcherPriority
      description: "委派的佇列上的優先權。"
  overload: System.Windows.Threading.DispatcherOperation.Priority*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Threading.DispatcherOperation.Result
  id: Result
  parent: System.Windows.Threading.DispatcherOperation
  langs:
  - csharp
  name: Result
  nameWithType: DispatcherOperation.Result
  fullName: System.Windows.Threading.DispatcherOperation.Result
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows.Threading
  summary: "完成後，請取得作業的結果。"
  syntax:
    content: public object Result { get; }
    return:
      type: System.Object
      description: "作業的結果- <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>如果作業尚未完成。"
  overload: System.Windows.Threading.DispatcherOperation.Result*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Threading.DispatcherOperation.Status
  id: Status
  parent: System.Windows.Threading.DispatcherOperation
  langs:
  - csharp
  name: Status
  nameWithType: DispatcherOperation.Status
  fullName: System.Windows.Threading.DispatcherOperation.Status
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows.Threading
  summary: "取得目前作業的狀態..."
  remarks: "階段<xref:System.Windows.Threading.DispatcherOperation>是<xref:System.Windows.Threading.DispatcherOperationStatus>， <xref:System.Windows.Threading.DispatcherOperationStatus>，和<xref:System.Windows.Threading.DispatcherOperationStatus>。</xref:System.Windows.Threading.DispatcherOperationStatus> </xref:System.Windows.Threading.DispatcherOperationStatus> </xref:System.Windows.Threading.DispatcherOperationStatus> </xref:System.Windows.Threading.DispatcherOperation>  在任何時間點作業完成之前，狀態可設為<xref:System.Windows.Threading.DispatcherOperationStatus>。</xref:System.Windows.Threading.DispatcherOperationStatus>"
  syntax:
    content: public System.Windows.Threading.DispatcherOperationStatus Status { get; }
    return:
      type: System.Windows.Threading.DispatcherOperationStatus
      description: "作業的狀態。"
  overload: System.Windows.Threading.DispatcherOperation.Status*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Threading.DispatcherOperation.Task
  id: Task
  parent: System.Windows.Threading.DispatcherOperation
  langs:
  - csharp
  name: Task
  nameWithType: DispatcherOperation.Task
  fullName: System.Windows.Threading.DispatcherOperation.Task
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows.Threading
  summary: "取得&lt;xref:System.Threading.Tasks.Task%601&gt; ，代表目前的作業。"
  syntax:
    content: public System.Threading.Tasks.Task Task { get; }
    return:
      type: System.Threading.Tasks.Task
      description: "物件，代表目前的作業。"
  overload: System.Windows.Threading.DispatcherOperation.Task*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Threading.DispatcherOperation.Wait
  id: Wait
  parent: System.Windows.Threading.DispatcherOperation
  langs:
  - csharp
  name: Wait()
  nameWithType: DispatcherOperation.Wait()
  fullName: System.Windows.Threading.DispatcherOperation.Wait()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Threading
  summary: "等候作業完成"
  remarks: "若要取得叫用委派的傳回值，請使用<xref:System.Windows.Threading.DispatcherOperation.Result%2A>屬性。</xref:System.Windows.Threading.DispatcherOperation.Result%2A>"
  syntax:
    content: public System.Windows.Threading.DispatcherOperationStatus Wait ();
    parameters: []
    return:
      type: System.Windows.Threading.DispatcherOperationStatus
      description: "作業的狀態。"
  overload: System.Windows.Threading.DispatcherOperation.Wait*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:System.Windows.Threading.DispatcherOperation.Status*>等於<xref href=&quot;System.Windows.Threading.DispatcherOperationStatus&quot;> </xref>。</xref:System.Windows.Threading.DispatcherOperation.Status*>  發生這個問題已經在相同執行緒執行的作業正在等候。"
  platform:
  - net462
- uid: System.Windows.Threading.DispatcherOperation.Wait(System.TimeSpan)
  id: Wait(System.TimeSpan)
  parent: System.Windows.Threading.DispatcherOperation
  langs:
  - csharp
  name: Wait(TimeSpan)
  nameWithType: DispatcherOperation.Wait(TimeSpan)
  fullName: System.Windows.Threading.DispatcherOperation.Wait(TimeSpan)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Threading
  summary: "等候指定的一段時間內完成作業。"
  remarks: "若要取得叫用委派的傳回值，請使用<xref:System.Windows.Threading.DispatcherOperation.Result%2A>屬性。</xref:System.Windows.Threading.DispatcherOperation.Result%2A>"
  syntax:
    content: public System.Windows.Threading.DispatcherOperationStatus Wait (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "要等待的時間上限的期間。"
    return:
      type: System.Windows.Threading.DispatcherOperationStatus
      description: "作業的狀態。"
  overload: System.Windows.Threading.DispatcherOperation.Wait*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:System.Windows.Threading.DispatcherOperation.Status*>等於<xref href=&quot;System.Windows.Threading.DispatcherOperationStatus&quot;> </xref>。</xref:System.Windows.Threading.DispatcherOperation.Status*>  發生這個問題已經在相同執行緒執行的作業正在等候。"
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Windows.Threading.DispatcherOperation.Abort
  parent: System.Windows.Threading.DispatcherOperation
  isExternal: false
  name: Abort()
  nameWithType: DispatcherOperation.Abort()
  fullName: System.Windows.Threading.DispatcherOperation.Abort()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Threading.DispatcherOperation.Aborted
  parent: System.Windows.Threading.DispatcherOperation
  isExternal: false
  name: Aborted
  nameWithType: DispatcherOperation.Aborted
  fullName: System.Windows.Threading.DispatcherOperation.Aborted
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Windows.Threading.DispatcherOperation.Completed
  parent: System.Windows.Threading.DispatcherOperation
  isExternal: false
  name: Completed
  nameWithType: DispatcherOperation.Completed
  fullName: System.Windows.Threading.DispatcherOperation.Completed
- uid: System.Windows.Threading.DispatcherOperation.Dispatcher
  parent: System.Windows.Threading.DispatcherOperation
  isExternal: false
  name: Dispatcher
  nameWithType: DispatcherOperation.Dispatcher
  fullName: System.Windows.Threading.DispatcherOperation.Dispatcher
- uid: System.Windows.Threading.Dispatcher
  parent: System.Windows.Threading
  isExternal: false
  name: Dispatcher
  nameWithType: Dispatcher
  fullName: System.Windows.Threading.Dispatcher
- uid: System.Windows.Threading.DispatcherOperation.GetAwaiter
  parent: System.Windows.Threading.DispatcherOperation
  isExternal: false
  name: GetAwaiter()
  nameWithType: DispatcherOperation.GetAwaiter()
  fullName: System.Windows.Threading.DispatcherOperation.GetAwaiter()
- uid: System.Runtime.CompilerServices.TaskAwaiter
  parent: System.Runtime.CompilerServices
  isExternal: true
  name: TaskAwaiter
  nameWithType: TaskAwaiter
  fullName: System.Runtime.CompilerServices.TaskAwaiter
- uid: System.Windows.Threading.DispatcherOperation.InvokeDelegateCore
  parent: System.Windows.Threading.DispatcherOperation
  isExternal: false
  name: InvokeDelegateCore()
  nameWithType: DispatcherOperation.InvokeDelegateCore()
  fullName: System.Windows.Threading.DispatcherOperation.InvokeDelegateCore()
- uid: System.Windows.Threading.DispatcherOperation.Priority
  parent: System.Windows.Threading.DispatcherOperation
  isExternal: false
  name: Priority
  nameWithType: DispatcherOperation.Priority
  fullName: System.Windows.Threading.DispatcherOperation.Priority
- uid: System.Windows.Threading.DispatcherPriority
  parent: System.Windows.Threading
  isExternal: false
  name: DispatcherPriority
  nameWithType: DispatcherPriority
  fullName: System.Windows.Threading.DispatcherPriority
- uid: System.Windows.Threading.DispatcherOperation.Result
  parent: System.Windows.Threading.DispatcherOperation
  isExternal: false
  name: Result
  nameWithType: DispatcherOperation.Result
  fullName: System.Windows.Threading.DispatcherOperation.Result
- uid: System.Windows.Threading.DispatcherOperation.Status
  parent: System.Windows.Threading.DispatcherOperation
  isExternal: false
  name: Status
  nameWithType: DispatcherOperation.Status
  fullName: System.Windows.Threading.DispatcherOperation.Status
- uid: System.Windows.Threading.DispatcherOperationStatus
  parent: System.Windows.Threading
  isExternal: false
  name: DispatcherOperationStatus
  nameWithType: DispatcherOperationStatus
  fullName: System.Windows.Threading.DispatcherOperationStatus
- uid: System.Windows.Threading.DispatcherOperation.Task
  parent: System.Windows.Threading.DispatcherOperation
  isExternal: false
  name: Task
  nameWithType: DispatcherOperation.Task
  fullName: System.Windows.Threading.DispatcherOperation.Task
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Windows.Threading.DispatcherOperation.Wait
  parent: System.Windows.Threading.DispatcherOperation
  isExternal: false
  name: Wait()
  nameWithType: DispatcherOperation.Wait()
  fullName: System.Windows.Threading.DispatcherOperation.Wait()
- uid: System.Windows.Threading.DispatcherOperation.Wait(System.TimeSpan)
  parent: System.Windows.Threading.DispatcherOperation
  isExternal: false
  name: Wait(TimeSpan)
  nameWithType: DispatcherOperation.Wait(TimeSpan)
  fullName: System.Windows.Threading.DispatcherOperation.Wait(TimeSpan)
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Windows.Threading.DispatcherOperation.Abort*
  parent: System.Windows.Threading.DispatcherOperation
  isExternal: false
  name: Abort
  nameWithType: DispatcherOperation.Abort
- uid: System.Windows.Threading.DispatcherOperation.Dispatcher*
  parent: System.Windows.Threading.DispatcherOperation
  isExternal: false
  name: Dispatcher
  nameWithType: DispatcherOperation.Dispatcher
- uid: System.Windows.Threading.DispatcherOperation.GetAwaiter*
  parent: System.Windows.Threading.DispatcherOperation
  isExternal: false
  name: GetAwaiter
  nameWithType: DispatcherOperation.GetAwaiter
- uid: System.Windows.Threading.DispatcherOperation.InvokeDelegateCore*
  parent: System.Windows.Threading.DispatcherOperation
  isExternal: false
  name: InvokeDelegateCore
  nameWithType: DispatcherOperation.InvokeDelegateCore
- uid: System.Windows.Threading.DispatcherOperation.Priority*
  parent: System.Windows.Threading.DispatcherOperation
  isExternal: false
  name: Priority
  nameWithType: DispatcherOperation.Priority
- uid: System.Windows.Threading.DispatcherOperation.Result*
  parent: System.Windows.Threading.DispatcherOperation
  isExternal: false
  name: Result
  nameWithType: DispatcherOperation.Result
- uid: System.Windows.Threading.DispatcherOperation.Status*
  parent: System.Windows.Threading.DispatcherOperation
  isExternal: false
  name: Status
  nameWithType: DispatcherOperation.Status
- uid: System.Windows.Threading.DispatcherOperation.Task*
  parent: System.Windows.Threading.DispatcherOperation
  isExternal: false
  name: Task
  nameWithType: DispatcherOperation.Task
- uid: System.Windows.Threading.DispatcherOperation.Wait*
  parent: System.Windows.Threading.DispatcherOperation
  isExternal: false
  name: Wait
  nameWithType: DispatcherOperation.Wait
