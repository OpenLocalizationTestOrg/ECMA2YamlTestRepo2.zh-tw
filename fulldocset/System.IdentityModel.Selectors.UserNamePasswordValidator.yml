### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Selectors.UserNamePasswordValidator
  id: UserNamePasswordValidator
  children:
  - System.IdentityModel.Selectors.UserNamePasswordValidator.#ctor
  - System.IdentityModel.Selectors.UserNamePasswordValidator.CreateMembershipProviderValidator(System.Web.Security.MembershipProvider)
  - System.IdentityModel.Selectors.UserNamePasswordValidator.None
  - System.IdentityModel.Selectors.UserNamePasswordValidator.Validate(System.String,System.String)
  langs:
  - csharp
  name: UserNamePasswordValidator
  nameWithType: UserNamePasswordValidator
  fullName: System.IdentityModel.Selectors.UserNamePasswordValidator
  type: Class
  summary: "驗證使用者名稱和密碼。"
  remarks: '使用 UserNamePasswordValidator 類別來指定如何驗證使用者名稱和密碼。 這可藉由從 UserNamePasswordValidator，然後覆寫衍生類別<xref:System.IdentityModel.Selectors.UserNamePasswordValidator.Validate%2A>方法。</xref:System.IdentityModel.Selectors.UserNamePasswordValidator.Validate%2A> 如需有關如何建立自訂使用者名稱和密碼驗證程式的詳細資訊，請參閱[How to︰ 使用自訂的使用者名稱和密碼驗證程式](~/add/includes/ajax-current-ext-md.md)。'
  example:
  - >-
    [!code-vb[c_UsernameValidator#1](~/add/codesnippet/visualbasic/t-system.identitymodel.s_4_1.vb)]
     [!code-cs[c_UsernameValidator#1](~/add/codesnippet/csharp/t-system.identitymodel.s_4_1.cs)]
  syntax:
    content: public abstract class UserNamePasswordValidator
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.UserNamePasswordValidator.#ctor
  id: '#ctor'
  parent: System.IdentityModel.Selectors.UserNamePasswordValidator
  langs:
  - csharp
  name: UserNamePasswordValidator()
  nameWithType: UserNamePasswordValidator.UserNamePasswordValidator()
  fullName: System.IdentityModel.Selectors.UserNamePasswordValidator.UserNamePasswordValidator()
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "初始化的新執行個體<xref href=&quot;System.IdentityModel.Selectors.UserNamePasswordValidator&quot;></xref>類別。"
  syntax:
    content: protected UserNamePasswordValidator ();
    parameters: []
  overload: System.IdentityModel.Selectors.UserNamePasswordValidator.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.UserNamePasswordValidator.CreateMembershipProviderValidator(System.Web.Security.MembershipProvider)
  id: CreateMembershipProviderValidator(System.Web.Security.MembershipProvider)
  parent: System.IdentityModel.Selectors.UserNamePasswordValidator
  langs:
  - csharp
  name: CreateMembershipProviderValidator(MembershipProvider)
  nameWithType: UserNamePasswordValidator.CreateMembershipProviderValidator(MembershipProvider)
  fullName: System.IdentityModel.Selectors.UserNamePasswordValidator.CreateMembershipProviderValidator(MembershipProvider)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "取得執行個體<xref href=&quot;System.IdentityModel.Selectors.UserNamePasswordValidator&quot;></xref>來驗證使用者名稱和密碼使用指定的成員資格提供者。"
  remarks: "這個靜態屬性的值可以提供為參數，以其中一個<xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator>類別</xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator>的建構函式"
  syntax:
    content: public static System.IdentityModel.Selectors.UserNamePasswordValidator CreateMembershipProviderValidator (System.Web.Security.MembershipProvider provider);
    parameters:
    - id: provider
      type: System.Web.Security.MembershipProvider
      description: "A<xref:System.Web.Security.MembershipProvider>來驗證使用者名稱和密碼。</xref:System.Web.Security.MembershipProvider>"
    return:
      type: System.IdentityModel.Selectors.UserNamePasswordValidator
      description: "<xref href=&quot;System.IdentityModel.Selectors.UserNamePasswordValidator&quot;> </xref>來驗證使用者名稱和密碼使用<code> provider </code>。"
  overload: System.IdentityModel.Selectors.UserNamePasswordValidator.CreateMembershipProviderValidator*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.UserNamePasswordValidator.None
  id: None
  parent: System.IdentityModel.Selectors.UserNamePasswordValidator
  langs:
  - csharp
  name: None
  nameWithType: UserNamePasswordValidator.None
  fullName: System.IdentityModel.Selectors.UserNamePasswordValidator.None
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "取得使用者名稱和密碼執行任何驗證的驗證程式。 如此一來，使用者名稱和密碼永遠會被視為有效。"
  remarks: "這個靜態屬性的值可以提供為參數，以其中一個<xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator>類別</xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator>的建構函式"
  syntax:
    content: public static System.IdentityModel.Selectors.UserNamePasswordValidator None { get; }
    return:
      type: System.IdentityModel.Selectors.UserNamePasswordValidator
      description: "<xref href=&quot;System.IdentityModel.Selectors.UserNamePasswordValidator&quot;> </xref>它對使用者名稱和密碼執行任何驗證。"
  overload: System.IdentityModel.Selectors.UserNamePasswordValidator.None*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.UserNamePasswordValidator.Validate(System.String,System.String)
  id: Validate(System.String,System.String)
  parent: System.IdentityModel.Selectors.UserNamePasswordValidator
  langs:
  - csharp
  name: Validate(String,String)
  nameWithType: UserNamePasswordValidator.Validate(String,String)
  fullName: System.IdentityModel.Selectors.UserNamePasswordValidator.Validate(String,String)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "當在衍生類別中覆寫時，會驗證指定的使用者名稱和密碼。"
  remarks: "覆寫 Validate 方法，以指定如何驗證使用者名稱和密碼。 如果使用者名稱和密碼無法通過驗證，就會擲回<xref:System.IdentityModel.Tokens.SecurityTokenValidationException>.</xref:System.IdentityModel.Tokens.SecurityTokenValidationException>"
  example:
  - >-
    [!code-vb[c_UsernameValidator#2](~/add/codesnippet/visualbasic/6855a484-3e15-4d15-ac89-_1.vb)]
     [!code-cs[c_UsernameValidator#2](~/add/codesnippet/csharp/6855a484-3e15-4d15-ac89-_1.cs)]
  syntax:
    content: public abstract void Validate (string userName, string password);
    parameters:
    - id: userName
      type: System.String
      description: "要驗證的使用者名稱。"
    - id: password
      type: System.String
      description: "要驗證的密碼。"
  overload: System.IdentityModel.Selectors.UserNamePasswordValidator.Validate*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.IdentityModel.Selectors.UserNamePasswordValidator.#ctor
  parent: System.IdentityModel.Selectors.UserNamePasswordValidator
  isExternal: false
  name: UserNamePasswordValidator()
  nameWithType: UserNamePasswordValidator.UserNamePasswordValidator()
  fullName: System.IdentityModel.Selectors.UserNamePasswordValidator.UserNamePasswordValidator()
- uid: System.IdentityModel.Selectors.UserNamePasswordValidator.CreateMembershipProviderValidator(System.Web.Security.MembershipProvider)
  parent: System.IdentityModel.Selectors.UserNamePasswordValidator
  isExternal: false
  name: CreateMembershipProviderValidator(MembershipProvider)
  nameWithType: UserNamePasswordValidator.CreateMembershipProviderValidator(MembershipProvider)
  fullName: System.IdentityModel.Selectors.UserNamePasswordValidator.CreateMembershipProviderValidator(MembershipProvider)
- uid: System.IdentityModel.Selectors.UserNamePasswordValidator
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: UserNamePasswordValidator
  nameWithType: UserNamePasswordValidator
  fullName: System.IdentityModel.Selectors.UserNamePasswordValidator
- uid: System.Web.Security.MembershipProvider
  parent: System.Web.Security
  isExternal: true
  name: MembershipProvider
  nameWithType: MembershipProvider
  fullName: System.Web.Security.MembershipProvider
- uid: System.IdentityModel.Selectors.UserNamePasswordValidator.None
  parent: System.IdentityModel.Selectors.UserNamePasswordValidator
  isExternal: false
  name: None
  nameWithType: UserNamePasswordValidator.None
  fullName: System.IdentityModel.Selectors.UserNamePasswordValidator.None
- uid: System.IdentityModel.Selectors.UserNamePasswordValidator.Validate(System.String,System.String)
  parent: System.IdentityModel.Selectors.UserNamePasswordValidator
  isExternal: false
  name: Validate(String,String)
  nameWithType: UserNamePasswordValidator.Validate(String,String)
  fullName: System.IdentityModel.Selectors.UserNamePasswordValidator.Validate(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IdentityModel.Selectors.UserNamePasswordValidator.#ctor*
  parent: System.IdentityModel.Selectors.UserNamePasswordValidator
  isExternal: false
  name: UserNamePasswordValidator
  nameWithType: UserNamePasswordValidator.UserNamePasswordValidator
- uid: System.IdentityModel.Selectors.UserNamePasswordValidator.CreateMembershipProviderValidator*
  parent: System.IdentityModel.Selectors.UserNamePasswordValidator
  isExternal: false
  name: CreateMembershipProviderValidator
  nameWithType: UserNamePasswordValidator.CreateMembershipProviderValidator
- uid: System.IdentityModel.Selectors.UserNamePasswordValidator.None*
  parent: System.IdentityModel.Selectors.UserNamePasswordValidator
  isExternal: false
  name: None
  nameWithType: UserNamePasswordValidator.None
- uid: System.IdentityModel.Selectors.UserNamePasswordValidator.Validate*
  parent: System.IdentityModel.Selectors.UserNamePasswordValidator
  isExternal: false
  name: Validate
  nameWithType: UserNamePasswordValidator.Validate
