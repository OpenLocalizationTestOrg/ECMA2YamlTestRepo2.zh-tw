### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform
  id: XmlDsigEnvelopedSignatureTransform
  children:
  - System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.#ctor
  - System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.#ctor(System.Boolean)
  - System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.GetInnerXml
  - System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.GetOutput
  - System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.GetOutput(System.Type)
  - System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.InputTypes
  - System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.LoadInnerXml(System.Xml.XmlNodeList)
  - System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.LoadInput(System.Object)
  - System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.OutputTypes
  langs:
  - csharp
  name: XmlDsigEnvelopedSignatureTransform
  nameWithType: XmlDsigEnvelopedSignatureTransform
  fullName: System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform
  type: Class
  summary: "表示 W3C 所定義的 XML 數位簽章包裹簽章轉換。"
  remarks: "XmlDsigEnvelopedSignatureTransform 類別移除`Signatur`e > 中的 XML 文件，然後再計算摘要項目。 與這項轉換，您可以登入，並驗證 XML 文件的 XML 數位簽章項目以外的所有項目。       雖然您可以建立並插入至 XML 文件的簽章，但是驗證修改過的文件使用內嵌的簽章會失敗，因為文件現在會有額外的項目。  這項轉換會移除`Signatur`e > 項目，可讓您驗證使用其原始格式的文件。       每當您建立包裹的簽章時，請使用 XmlDsigEnvelopedSignatureTransform 類別。       如需有關轉換的詳細資訊，請參閱 6.6.4 XMLDSIG 規格中，可從在 www.w3.org/TR/xmldsig-core/ W3C。"
  example:
  - "This section contains two code examples. The first example demonstrates how to sign an XML file using an envelope signature. The second example demonstrates how to use members of the XmlDsigEnvelopedSignatureTransform class.  \n  \n **Example #1**  \n  \n [!code-cs[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/add/codesnippet/csharp/t-system.security.crypto_120_1.cs)]\n [!code-cpp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/add/codesnippet/cpp/t-system.security.crypto_120_1.cpp)]\n [!code-vb[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/add/codesnippet/visualbasic/t-system.security.crypto_120_1.vb)]  \n  \n **Example #2**  \n  \n [!code-cs[System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#2](~/add/codesnippet/csharp/t-system.security.crypto_120_2.cs)]\n [!code-cpp[System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#2](~/add/codesnippet/cpp/t-system.security.crypto_120_2.cpp)]\n [!code-vb[System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#2](~/add/codesnippet/visualbasic/t-system.security.crypto_120_2.vb)]"
  syntax:
    content: 'public class XmlDsigEnvelopedSignatureTransform : System.Security.Cryptography.Xml.Transform'
  inheritance:
  - System.Object
  - System.Security.Cryptography.Xml.Transform
  implements: []
  inheritedMembers:
  - System.Security.Cryptography.Xml.Transform.Algorithm
  - System.Security.Cryptography.Xml.Transform.Context
  - System.Security.Cryptography.Xml.Transform.GetDigestedOutput(System.Security.Cryptography.HashAlgorithm)
  - System.Security.Cryptography.Xml.Transform.GetXml
  - System.Security.Cryptography.Xml.Transform.PropagatedNamespaces
  - System.Security.Cryptography.Xml.Transform.Resolver
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform
  langs:
  - csharp
  name: XmlDsigEnvelopedSignatureTransform()
  nameWithType: XmlDsigEnvelopedSignatureTransform.XmlDsigEnvelopedSignatureTransform()
  fullName: System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.XmlDsigEnvelopedSignatureTransform()
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "初始化的新執行個體<xref href=&quot;System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform&quot;></xref>類別。"
  remarks: ''
  example:
  - "The following code example demonstrates how to use members of the <xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform> class.  \n  \n [!code-cs[System.Security.Cryptography.XML-XMLDsigEnvelope#2](~/add/codesnippet/csharp/m-system.security.crypto_106_1.cs)]\n [!code-cpp[System.Security.Cryptography.XML-XMLDsigEnvelope#2](~/add/codesnippet/cpp/m-system.security.crypto_106_1.cpp)]\n [!code-vb[System.Security.Cryptography.XML-XMLDsigEnvelope#2](~/add/codesnippet/visualbasic/m-system.security.crypto_106_1.vb)]"
  syntax:
    content: public XmlDsigEnvelopedSignatureTransform ();
    parameters: []
  overload: System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform
  langs:
  - csharp
  name: XmlDsigEnvelopedSignatureTransform(Boolean)
  nameWithType: XmlDsigEnvelopedSignatureTransform.XmlDsigEnvelopedSignatureTransform(Boolean)
  fullName: System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.XmlDsigEnvelopedSignatureTransform(Boolean)
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "初始化的新執行個體<xref href=&quot;System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform&quot;></xref>註解，如果指定類別。"
  remarks: ''
  example:
  - "The following code example demonstrates how to use the XmlDsigEnvelopedSignatureTransform constructor with a <xref:System.Boolean> value of `true` to include comments. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform> class.  \n  \n [!code-cs[System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#3](~/add/codesnippet/csharp/af1462af-07eb-46a3-916b-_1.cs)]\n [!code-cpp[System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#3](~/add/codesnippet/cpp/af1462af-07eb-46a3-916b-_1.cpp)]\n [!code-vb[System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#3](~/add/codesnippet/visualbasic/af1462af-07eb-46a3-916b-_1.vb)]"
  syntax:
    content: public XmlDsigEnvelopedSignatureTransform (bool includeComments);
    parameters:
    - id: includeComments
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>表示包括註解。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.GetInnerXml
  id: GetInnerXml
  parent: System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform
  langs:
  - csharp
  name: GetInnerXml()
  nameWithType: XmlDsigEnvelopedSignatureTransform.GetInnerXml()
  fullName: System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.GetInnerXml()
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "傳回參數的 XML 表示法<xref href=&quot;System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform&quot;></xref>都適合用來為 XMLDSIG 的子元素所包含的物件<xref uid=&quot;langword_csharp_&lt;Transform&gt;&quot; name=&quot;&lt;Transform&gt;&quot; href=&quot;&quot;></xref>項目。"
  syntax:
    content: protected override System.Xml.XmlNodeList GetInnerXml ();
    parameters: []
    return:
      type: System.Xml.XmlNodeList
      description: "代表特定轉換的內容說明目前所需的 XML 節點的清單<xref href=&quot;System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform&quot;></xref>中 XMLDSIG 物件<xref uid=&quot;langword_csharp_&lt;Transform&gt;&quot; name=&quot;&lt;Transform&gt;&quot; href=&quot;&quot;></xref>項目。"
  overload: System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.GetInnerXml*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.GetOutput
  id: GetOutput
  parent: System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform
  langs:
  - csharp
  name: GetOutput()
  nameWithType: XmlDsigEnvelopedSignatureTransform.GetOutput()
  fullName: System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.GetOutput()
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "傳回目前的輸出<xref href=&quot;System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform&quot;></xref>物件。"
  remarks: "傳回物件的類型必須是<xref:System.Xml.XmlNodeList>.</xref:System.Xml.XmlNodeList>"
  example:
  - "The following code example demonstrates how to use the <xref:System.Security.Cryptography.Xml.XmlDsigBase64Transform.GetOutput%2A> method. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform> class.  \n  \n [!code-cs[System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#8](~/add/codesnippet/csharp/m-system.security.crypto_29_1.cs)]\n [!code-cpp[System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#8](~/add/codesnippet/cpp/m-system.security.crypto_29_1.cpp)]\n [!code-vb[System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#8](~/add/codesnippet/visualbasic/m-system.security.crypto_29_1.vb)]"
  syntax:
    content: public override object GetOutput ();
    parameters: []
    return:
      type: System.Object
      description: "目前的輸出<xref href=&quot;System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform&quot;></xref>物件。"
  overload: System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.GetOutput*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "包含 XML 文件是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.GetOutput(System.Type)
  id: GetOutput(System.Type)
  parent: System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform
  langs:
  - csharp
  name: GetOutput(Type)
  nameWithType: XmlDsigEnvelopedSignatureTransform.GetOutput(Type)
  fullName: System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.GetOutput(Type)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "傳回目前的輸出<xref href=&quot;System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform&quot;></xref>型別的物件<xref href=&quot;System.Xml.XmlNodeList&quot;> </xref>。"
  remarks: "傳回物件的類型必須是<xref:System.Xml.XmlNodeList>.</xref:System.Xml.XmlNodeList>"
  example:
  - "The following code example demonstrates how to use the GetOutput method to retrieve the output of the current <xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform> object. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform> class.  \n  \n [!code-cs[System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#9](~/add/codesnippet/csharp/fb227625-3ed4-4bc5-bce2-_1.cs)]\n [!code-cpp[System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#9](~/add/codesnippet/cpp/fb227625-3ed4-4bc5-bce2-_1.cpp)]\n [!code-vb[System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#9](~/add/codesnippet/visualbasic/fb227625-3ed4-4bc5-bce2-_1.vb)]"
  syntax:
    content: public override object GetOutput (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "要傳回之輸出的類型。 <xref href=&quot;System.Xml.XmlNodeList&quot;></xref>是為此參數唯一有效的類型。"
    return:
      type: System.Object
      description: "目前的輸出<xref href=&quot;System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform&quot;></xref>型別的物件<xref href=&quot;System.Xml.XmlNodeList&quot;> </xref>。"
  overload: System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.GetOutput*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> type </code>參數不是<xref href=&quot;System.Xml.XmlNodeList&quot;></xref>物件。"
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.InputTypes
  id: InputTypes
  parent: System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform
  langs:
  - csharp
  name: InputTypes
  nameWithType: XmlDsigEnvelopedSignatureTransform.InputTypes
  fullName: System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.InputTypes
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "取得屬於有效的輸入之型別的陣列<xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.LoadInput*>方法目前<xref href=&quot;System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform&quot;></xref>物件。</xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.LoadInput*>"
  remarks: "有效的輸入類型，以<xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform>是<xref:System.IO.Stream>， <xref:System.Xml.XmlDocument>，和<xref:System.Xml.XmlNodeList>。</xref:System.Xml.XmlNodeList> </xref:System.Xml.XmlDocument> </xref:System.IO.Stream> </xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform>"
  example:
  - "The following code example demonstrates how to call the InputTypes property to retrieve the valid input types for the current transform. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform> class.  \n  \n [!code-cs[System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#5](~/add/codesnippet/csharp/11b8a969-f497-4737-8f1d-_1.cs)]\n [!code-cpp[System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#5](~/add/codesnippet/cpp/11b8a969-f497-4737-8f1d-_1.cpp)]\n [!code-vb[System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#5](~/add/codesnippet/visualbasic/11b8a969-f497-4737-8f1d-_1.vb)]"
  syntax:
    content: public override Type[] InputTypes { get; }
    return:
      type: System.Type[]
      description: "在目前有效的輸入類型的陣列<xref href=&quot;System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform&quot;></xref>物件; 您可以將只有其中一個這些類型的物件傳遞<xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.LoadInput*>方法目前<xref href=&quot;System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform&quot;></xref>物件。</xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.LoadInput*>"
  overload: System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.InputTypes*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.LoadInnerXml(System.Xml.XmlNodeList)
  id: LoadInnerXml(System.Xml.XmlNodeList)
  parent: System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform
  langs:
  - csharp
  name: LoadInnerXml(XmlNodeList)
  nameWithType: XmlDsigEnvelopedSignatureTransform.LoadInnerXml(XmlNodeList)
  fullName: System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.LoadInnerXml(XmlNodeList)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "剖析指定<xref href=&quot;System.Xml.XmlNodeList&quot;></xref>做為轉換特定內容的<xref uid=&quot;langword_csharp_&lt;Transform&gt;&quot; name=&quot;&lt;Transform&gt;&quot; href=&quot;&quot;></xref>項目，並設定目前的內部狀態<xref href=&quot;System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform&quot;></xref>物件以符合<xref uid=&quot;langword_csharp_&lt;Transform&gt;&quot; name=&quot;&lt;Transform&gt;&quot; href=&quot;&quot;></xref>項目。"
  remarks: "因為沒有特定轉換的內容為定義<xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform>，呼叫這個方法不會變更轉換的狀態。</xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform>"
  example:
  - "The following code example demonstrates how to call the LoadInnerXml method using the specified <xref:System.Xml.XmlNodeList> object to configure the current <xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform> object. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform> class.  \n  \n [!code-cs[System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#11](~/add/codesnippet/csharp/55fe57a8-7cde-4c1b-bd19-_1.cs)]\n [!code-cpp[System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#11](~/add/codesnippet/cpp/55fe57a8-7cde-4c1b-bd19-_1.cpp)]\n [!code-vb[System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#11](~/add/codesnippet/visualbasic/55fe57a8-7cde-4c1b-bd19-_1.vb)]"
  syntax:
    content: public override void LoadInnerXml (System.Xml.XmlNodeList nodeList);
    parameters:
    - id: nodeList
      type: System.Xml.XmlNodeList
      description: "<xref href=&quot;System.Xml.XmlNodeList&quot;> </xref>載入到目前<xref href=&quot;System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform&quot;></xref>物件。"
  overload: System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.LoadInnerXml*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.LoadInput(System.Object)
  id: LoadInput(System.Object)
  parent: System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform
  langs:
  - csharp
  name: LoadInput(Object)
  nameWithType: XmlDsigEnvelopedSignatureTransform.LoadInput(Object)
  fullName: System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.LoadInput(Object)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "將目前載入指定的輸入<xref href=&quot;System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform&quot;></xref>物件。"
  remarks: "輸入物件的類型必須是其中一個類型中<xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.InputTypes%2A>屬性。</xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.InputTypes%2A>"
  example:
  - "The following code example demonstrates how to call the LoadInput method using the specified <xref:System.Xml.XmlDocument> object as the input. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform> class.  \n  \n [!code-cs[System.Security.Cryptography.Xml.XmlDsigBase64Transform#12](~/add/codesnippet/csharp/a9eb0532-0031-46e0-8624-_1.cs)]\n [!code-vb[System.Security.Cryptography.Xml.XmlDsigBase64Transform#12](~/add/codesnippet/visualbasic/a9eb0532-0031-46e0-8624-_1.vb)]\n [!code-cpp[System.Security.Cryptography.Xml.XmlDsigBase64Transform#12](~/add/codesnippet/cpp/a9eb0532-0031-46e0-8624-_1.cpp)]"
  syntax:
    content: public override void LoadInput (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "要載入到目前之輸入<xref href=&quot;System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform&quot;></xref>物件。"
  overload: System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.LoadInput*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>obj</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "包含 XML 文件是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.OutputTypes
  id: OutputTypes
  parent: System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform
  langs:
  - csharp
  name: OutputTypes
  nameWithType: XmlDsigEnvelopedSignatureTransform.OutputTypes
  fullName: System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.OutputTypes
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "取得屬於從可能的輸出之型別的陣列<xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.GetOutput*>方法目前<xref href=&quot;System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform&quot;></xref>物件。</xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.GetOutput*>"
  remarks: "有效的輸出型別<xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform>和<xref:System.Xml.XmlNodeList><xref:System.Xml.XmlDocument>.</xref:System.Xml.XmlDocument> </xref:System.Xml.XmlNodeList> </xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform>"
  example:
  - "The following code example demonstrates how to call the OutputTypes property to retrieve the valid output types for the current transform. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform> class.  \n  \n [!code-cs[System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#6](~/add/codesnippet/csharp/f3c31b88-e32d-4af5-b9e3-_1.cs)]\n [!code-cpp[System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#6](~/add/codesnippet/cpp/f3c31b88-e32d-4af5-b9e3-_1.cpp)]\n [!code-vb[System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#6](~/add/codesnippet/visualbasic/f3c31b88-e32d-4af5-b9e3-_1.vb)]"
  syntax:
    content: public override Type[] OutputTypes { get; }
    return:
      type: System.Type[]
      description: "在目前有效的輸出型別的陣列<xref href=&quot;System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform&quot;></xref>物件，只有物件的下列其中一種會從傳回型別<xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.GetOutput*>方法在目前的<xref href=&quot;System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform&quot;></xref>物件。</xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.GetOutput*>"
  overload: System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.OutputTypes*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.Cryptography.Xml.Transform
  isExternal: false
  name: System.Security.Cryptography.Xml.Transform
- uid: System.Security.Cryptography.CryptographicException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.#ctor
  parent: System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform
  isExternal: false
  name: XmlDsigEnvelopedSignatureTransform()
  nameWithType: XmlDsigEnvelopedSignatureTransform.XmlDsigEnvelopedSignatureTransform()
  fullName: System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.XmlDsigEnvelopedSignatureTransform()
- uid: System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.#ctor(System.Boolean)
  parent: System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform
  isExternal: false
  name: XmlDsigEnvelopedSignatureTransform(Boolean)
  nameWithType: XmlDsigEnvelopedSignatureTransform.XmlDsigEnvelopedSignatureTransform(Boolean)
  fullName: System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.XmlDsigEnvelopedSignatureTransform(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.GetInnerXml
  parent: System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform
  isExternal: false
  name: GetInnerXml()
  nameWithType: XmlDsigEnvelopedSignatureTransform.GetInnerXml()
  fullName: System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.GetInnerXml()
- uid: System.Xml.XmlNodeList
  parent: System.Xml
  isExternal: false
  name: XmlNodeList
  nameWithType: XmlNodeList
  fullName: System.Xml.XmlNodeList
- uid: System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.GetOutput
  parent: System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform
  isExternal: false
  name: GetOutput()
  nameWithType: XmlDsigEnvelopedSignatureTransform.GetOutput()
  fullName: System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.GetOutput()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.GetOutput(System.Type)
  parent: System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform
  isExternal: false
  name: GetOutput(Type)
  nameWithType: XmlDsigEnvelopedSignatureTransform.GetOutput(Type)
  fullName: System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.GetOutput(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.InputTypes
  parent: System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform
  isExternal: false
  name: InputTypes
  nameWithType: XmlDsigEnvelopedSignatureTransform.InputTypes
  fullName: System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.InputTypes
- uid: System.Type[]
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type[]
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.LoadInnerXml(System.Xml.XmlNodeList)
  parent: System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform
  isExternal: false
  name: LoadInnerXml(XmlNodeList)
  nameWithType: XmlDsigEnvelopedSignatureTransform.LoadInnerXml(XmlNodeList)
  fullName: System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.LoadInnerXml(XmlNodeList)
- uid: System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.LoadInput(System.Object)
  parent: System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform
  isExternal: false
  name: LoadInput(Object)
  nameWithType: XmlDsigEnvelopedSignatureTransform.LoadInput(Object)
  fullName: System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.LoadInput(Object)
- uid: System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.OutputTypes
  parent: System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform
  isExternal: false
  name: OutputTypes
  nameWithType: XmlDsigEnvelopedSignatureTransform.OutputTypes
  fullName: System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.OutputTypes
- uid: System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.#ctor*
  parent: System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform
  isExternal: false
  name: XmlDsigEnvelopedSignatureTransform
  nameWithType: XmlDsigEnvelopedSignatureTransform.XmlDsigEnvelopedSignatureTransform
- uid: System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.GetInnerXml*
  parent: System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform
  isExternal: false
  name: GetInnerXml
  nameWithType: XmlDsigEnvelopedSignatureTransform.GetInnerXml
- uid: System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.GetOutput*
  parent: System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform
  isExternal: false
  name: GetOutput
  nameWithType: XmlDsigEnvelopedSignatureTransform.GetOutput
- uid: System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.InputTypes*
  parent: System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform
  isExternal: false
  name: InputTypes
  nameWithType: XmlDsigEnvelopedSignatureTransform.InputTypes
- uid: System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.LoadInnerXml*
  parent: System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform
  isExternal: false
  name: LoadInnerXml
  nameWithType: XmlDsigEnvelopedSignatureTransform.LoadInnerXml
- uid: System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.LoadInput*
  parent: System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform
  isExternal: false
  name: LoadInput
  nameWithType: XmlDsigEnvelopedSignatureTransform.LoadInput
- uid: System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.OutputTypes*
  parent: System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform
  isExternal: false
  name: OutputTypes
  nameWithType: XmlDsigEnvelopedSignatureTransform.OutputTypes
