### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper
  id: InternalXmlHelper
  children:
  - Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.AttributeValue(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)
  - Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.AttributeValue(System.Xml.Linq.XElement,System.Xml.Linq.XName)
  - Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.CreateAttribute(System.Xml.Linq.XName,System.Object)
  - Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.CreateNamespaceAttribute(System.Xml.Linq.XName,System.Xml.Linq.XNamespace)
  - Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.RemoveNamespaceAttributes(System.String[],System.Xml.Linq.XNamespace[],System.Collections.Generic.List{System.Xml.Linq.XAttribute},System.Collections.IEnumerable)
  - Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.RemoveNamespaceAttributes(System.String[],System.Xml.Linq.XNamespace[],System.Collections.Generic.List{System.Xml.Linq.XAttribute},System.Object)
  - Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.RemoveNamespaceAttributes(System.String[],System.Xml.Linq.XNamespace[],System.Collections.Generic.List{System.Xml.Linq.XAttribute},System.Xml.Linq.XElement)
  - Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.Value(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})
  langs:
  - csharp
  name: InternalXmlHelper
  nameWithType: InternalXmlHelper
  fullName: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper
  type: Class
  summary: "提供屬性和方法，可支援 Visual Basic XML 常值。 這個類別不是直接從您的程式碼使用。"
  syntax:
    content: >-
      [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]

      [System.Diagnostics.DebuggerNonUserCode]

      public sealed class InternalXmlHelper
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.AttributeValue(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)
  id: AttributeValue(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)
  parent: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper
  langs:
  - csharp
  name: AttributeValue(IEnumerable<XElement>,XName)
  nameWithType: InternalXmlHelper.AttributeValue(IEnumerable<XElement>,XName)
  fullName: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.AttributeValue(IEnumerable<XElement>,XName)
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "取得或設定 XML 屬性的值。 這個屬性不是從您的程式碼使用。"
  syntax:
    content: public static string AttributeValue[System.Collections.Generic.IEnumerable<System.Xml.Linq.XElement> source, System.Xml.Linq.XName name] { get; set; }
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}
      description: "要取得屬性的 XML 項目的集合設定的屬性值，或從值。"
    - id: name
      type: System.Xml.Linq.XName
      description: "要取得的值或設定值的 XML 屬性名稱。"
    return:
      type: System.String
      description: "所識別的 XML 屬性的值<code> name </code>參數中提供的 XML 項目集合的第一個項目。 如果集合是空的就會傳回<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>。"
  overload: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.AttributeValue*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.AttributeValue(System.Xml.Linq.XElement,System.Xml.Linq.XName)
  id: AttributeValue(System.Xml.Linq.XElement,System.Xml.Linq.XName)
  parent: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper
  langs:
  - csharp
  name: AttributeValue(XElement,XName)
  nameWithType: InternalXmlHelper.AttributeValue(XElement,XName)
  fullName: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.AttributeValue(XElement,XName)
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "取得或設定 XML 屬性的值。 這個屬性不是從您的程式碼使用。"
  syntax:
    content: public static string AttributeValue[System.Xml.Linq.XElement source, System.Xml.Linq.XName name] { get; set; }
    parameters:
    - id: source
      type: System.Xml.Linq.XElement
      description: "XML 項若要取得屬性值，或設定值之屬性值。"
    - id: name
      type: System.Xml.Linq.XName
      description: "要取得的值或設定值的 XML 屬性名稱。"
    return:
      type: System.String
      description: "所識別的 XML 屬性的值<code> name </code>參數中提供的 XML 項目。"
  overload: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.AttributeValue*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.CreateAttribute(System.Xml.Linq.XName,System.Object)
  id: CreateAttribute(System.Xml.Linq.XName,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper
  langs:
  - csharp
  name: CreateAttribute(XName,Object)
  nameWithType: InternalXmlHelper.CreateAttribute(XName,Object)
  fullName: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.CreateAttribute(XName,Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "建立 XML 屬性具有提供的名稱和值。 這個方法不是從您的程式碼使用。"
  syntax:
    content: public static System.Xml.Linq.XAttribute CreateAttribute (System.Xml.Linq.XName name, object value);
    parameters:
    - id: name
      type: System.Xml.Linq.XName
      description: "若要建立的 XML 屬性名稱。"
    - id: value
      type: System.Object
      description: "要指派給建立的 XML 屬性值。 如果`value`是<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>，這個方法會傳回<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.Xml.Linq.XAttribute
      description: "<xref:System.Xml.Linq.XAttribute>物件，其提供的名稱和值。</xref:System.Xml.Linq.XAttribute>"
  overload: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.CreateAttribute*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.CreateNamespaceAttribute(System.Xml.Linq.XName,System.Xml.Linq.XNamespace)
  id: CreateNamespaceAttribute(System.Xml.Linq.XName,System.Xml.Linq.XNamespace)
  parent: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper
  langs:
  - csharp
  name: CreateNamespaceAttribute(XName,XNamespace)
  nameWithType: InternalXmlHelper.CreateNamespaceAttribute(XName,XNamespace)
  fullName: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.CreateNamespaceAttribute(XName,XNamespace)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "建立具有所提供的名稱和命名空間值 XML 屬性。 這個方法不是從您的程式碼使用。"
  syntax:
    content: public static System.Xml.Linq.XAttribute CreateNamespaceAttribute (System.Xml.Linq.XName name, System.Xml.Linq.XNamespace ns);
    parameters:
    - id: name
      type: System.Xml.Linq.XName
      description: "若要建立的 XML 屬性名稱。"
    - id: ns
      type: System.Xml.Linq.XNamespace
      description: "要指派給建立的 XML 屬性的命名空間值。"
    return:
      type: System.Xml.Linq.XAttribute
      description: "<xref:System.Xml.Linq.XAttribute>具有所提供的名稱和命名空間值物件。</xref:System.Xml.Linq.XAttribute>"
  overload: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.CreateNamespaceAttribute*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.RemoveNamespaceAttributes(System.String[],System.Xml.Linq.XNamespace[],System.Collections.Generic.List{System.Xml.Linq.XAttribute},System.Collections.IEnumerable)
  id: RemoveNamespaceAttributes(System.String[],System.Xml.Linq.XNamespace[],System.Collections.Generic.List{System.Xml.Linq.XAttribute},System.Collections.IEnumerable)
  parent: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper
  langs:
  - csharp
  name: RemoveNamespaceAttributes(String[],XNamespace[],List<XAttribute>,IEnumerable)
  nameWithType: InternalXmlHelper.RemoveNamespaceAttributes(String[],XNamespace[],List<XAttribute>,IEnumerable)
  fullName: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.RemoveNamespaceAttributes(String[],XNamespace[],List<XAttribute>,IEnumerable)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "從 XML 項目中移除 XML 命名空間屬性。 這個方法不是從您的程式碼使用。"
  syntax:
    content: public static System.Collections.IEnumerable RemoveNamespaceAttributes (string[] inScopePrefixes, System.Xml.Linq.XNamespace[] inScopeNs, System.Collections.Generic.List<System.Xml.Linq.XAttribute> attributes, System.Collections.IEnumerable obj);
    parameters:
    - id: inScopePrefixes
      type: System.String[]
      description: "XML 項目的目前範圍中的 XML 命名空間前置詞清單。"
    - id: inScopeNs
      type: System.Xml.Linq.XNamespace[]
      description: "XML 項目的目前範圍中的 XML 命名空間的清單。"
    - id: attributes
      type: System.Collections.Generic.List{System.Xml.Linq.XAttribute}
      description: "若要從 XML 項目移除的命名空間屬性的清單。"
    - id: obj
      type: System.Collections.IEnumerable
      description: "若要移除 XML 命名空間屬性從 XML 項目。"
    return:
      type: System.Collections.IEnumerable
      description: "使用指定的 XML 命名空間屬性移除提供的 XML 元素。"
  overload: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.RemoveNamespaceAttributes*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.RemoveNamespaceAttributes(System.String[],System.Xml.Linq.XNamespace[],System.Collections.Generic.List{System.Xml.Linq.XAttribute},System.Object)
  id: RemoveNamespaceAttributes(System.String[],System.Xml.Linq.XNamespace[],System.Collections.Generic.List{System.Xml.Linq.XAttribute},System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper
  langs:
  - csharp
  name: RemoveNamespaceAttributes(String[],XNamespace[],List<XAttribute>,Object)
  nameWithType: InternalXmlHelper.RemoveNamespaceAttributes(String[],XNamespace[],List<XAttribute>,Object)
  fullName: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.RemoveNamespaceAttributes(String[],XNamespace[],List<XAttribute>,Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "從 XML 項目中移除 XML 命名空間屬性。 這個方法不是從您的程式碼使用。"
  syntax:
    content: public static object RemoveNamespaceAttributes (string[] inScopePrefixes, System.Xml.Linq.XNamespace[] inScopeNs, System.Collections.Generic.List<System.Xml.Linq.XAttribute> attributes, object obj);
    parameters:
    - id: inScopePrefixes
      type: System.String[]
      description: "XML 項目的目前範圍中的 XML 命名空間前置詞清單。"
    - id: inScopeNs
      type: System.Xml.Linq.XNamespace[]
      description: "XML 項目的目前範圍中的 XML 命名空間的清單。"
    - id: attributes
      type: System.Collections.Generic.List{System.Xml.Linq.XAttribute}
      description: "若要從 XML 項目移除的命名空間屬性的清單。"
    - id: obj
      type: System.Object
      description: "若要移除 XML 命名空間屬性從 XML 項目。"
    return:
      type: System.Object
      description: "使用指定的 XML 命名空間屬性移除提供的 XML 元素。"
  overload: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.RemoveNamespaceAttributes*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.RemoveNamespaceAttributes(System.String[],System.Xml.Linq.XNamespace[],System.Collections.Generic.List{System.Xml.Linq.XAttribute},System.Xml.Linq.XElement)
  id: RemoveNamespaceAttributes(System.String[],System.Xml.Linq.XNamespace[],System.Collections.Generic.List{System.Xml.Linq.XAttribute},System.Xml.Linq.XElement)
  parent: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper
  langs:
  - csharp
  name: RemoveNamespaceAttributes(String[],XNamespace[],List<XAttribute>,XElement)
  nameWithType: InternalXmlHelper.RemoveNamespaceAttributes(String[],XNamespace[],List<XAttribute>,XElement)
  fullName: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.RemoveNamespaceAttributes(String[],XNamespace[],List<XAttribute>,XElement)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "從 XML 項目中移除 XML 命名空間屬性。 這個方法不是從您的程式碼使用。"
  syntax:
    content: public static System.Xml.Linq.XElement RemoveNamespaceAttributes (string[] inScopePrefixes, System.Xml.Linq.XNamespace[] inScopeNs, System.Collections.Generic.List<System.Xml.Linq.XAttribute> attributes, System.Xml.Linq.XElement e);
    parameters:
    - id: inScopePrefixes
      type: System.String[]
      description: "XML 項目的目前範圍中的 XML 命名空間前置詞清單。"
    - id: inScopeNs
      type: System.Xml.Linq.XNamespace[]
      description: "XML 項目的目前範圍中的 XML 命名空間的清單。"
    - id: attributes
      type: System.Collections.Generic.List{System.Xml.Linq.XAttribute}
      description: "若要從 XML 項目移除的命名空間屬性的清單。"
    - id: e
      type: System.Xml.Linq.XElement
      description: "若要移除 XML 命名空間屬性從 XML 項目。"
    return:
      type: System.Xml.Linq.XElement
      description: "使用指定的 XML 命名空間屬性移除提供的 XML 元素。"
  overload: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.RemoveNamespaceAttributes*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.Value(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})
  id: Value(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})
  parent: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper
  langs:
  - csharp
  name: Value(IEnumerable<XElement>)
  nameWithType: InternalXmlHelper.Value(IEnumerable<XElement>)
  fullName: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.Value(IEnumerable<XElement>)
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "取得或設定 XML 項目的值。 這個屬性不是從您的程式碼使用。"
  syntax:
    content: public static string Value[System.Collections.Generic.IEnumerable<System.Xml.Linq.XElement> source] { get; set; }
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}
      description: "要取得的值或設定值的 XML 項目的集合。"
    return:
      type: System.String
      description: "提供集合中的第一個 XML 項目值。 如果集合是空的就會傳回<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>。"
  overload: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.Value*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.AttributeValue(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)
  parent: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper
  isExternal: false
  name: AttributeValue(IEnumerable<XElement>,XName)
  nameWithType: InternalXmlHelper.AttributeValue(IEnumerable<XElement>,XName)
  fullName: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.AttributeValue(IEnumerable<XElement>,XName)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<XElement>
  nameWithType: IEnumerable<XElement>
  fullName: System.Collections.Generic.IEnumerable<System.Xml.Linq.XElement>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Xml.Linq.XElement>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xml.Linq.XElement
    name: XElement
    nameWithType: XElement
    fullName: XElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xml.Linq.XName
  parent: System.Xml.Linq
  isExternal: true
  name: XName
  nameWithType: XName
  fullName: System.Xml.Linq.XName
- uid: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.AttributeValue(System.Xml.Linq.XElement,System.Xml.Linq.XName)
  parent: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper
  isExternal: false
  name: AttributeValue(XElement,XName)
  nameWithType: InternalXmlHelper.AttributeValue(XElement,XName)
  fullName: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.AttributeValue(XElement,XName)
- uid: System.Xml.Linq.XElement
  parent: System.Xml.Linq
  isExternal: true
  name: XElement
  nameWithType: XElement
  fullName: System.Xml.Linq.XElement
- uid: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.CreateAttribute(System.Xml.Linq.XName,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper
  isExternal: false
  name: CreateAttribute(XName,Object)
  nameWithType: InternalXmlHelper.CreateAttribute(XName,Object)
  fullName: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.CreateAttribute(XName,Object)
- uid: System.Xml.Linq.XAttribute
  parent: System.Xml.Linq
  isExternal: true
  name: XAttribute
  nameWithType: XAttribute
  fullName: System.Xml.Linq.XAttribute
- uid: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.CreateNamespaceAttribute(System.Xml.Linq.XName,System.Xml.Linq.XNamespace)
  parent: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper
  isExternal: false
  name: CreateNamespaceAttribute(XName,XNamespace)
  nameWithType: InternalXmlHelper.CreateNamespaceAttribute(XName,XNamespace)
  fullName: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.CreateNamespaceAttribute(XName,XNamespace)
- uid: System.Xml.Linq.XNamespace
  parent: System.Xml.Linq
  isExternal: true
  name: XNamespace
  nameWithType: XNamespace
  fullName: System.Xml.Linq.XNamespace
- uid: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.RemoveNamespaceAttributes(System.String[],System.Xml.Linq.XNamespace[],System.Collections.Generic.List{System.Xml.Linq.XAttribute},System.Collections.IEnumerable)
  parent: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper
  isExternal: false
  name: RemoveNamespaceAttributes(String[],XNamespace[],List<XAttribute>,IEnumerable)
  nameWithType: InternalXmlHelper.RemoveNamespaceAttributes(String[],XNamespace[],List<XAttribute>,IEnumerable)
  fullName: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.RemoveNamespaceAttributes(String[],XNamespace[],List<XAttribute>,IEnumerable)
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Xml.Linq.XNamespace[]
  parent: System.Xml.Linq
  isExternal: true
  name: XNamespace
  nameWithType: XNamespace
  fullName: System.Xml.Linq.XNamespace[]
  spec.csharp:
  - uid: System.Xml.Linq.XNamespace
    name: XNamespace
    nameWithType: XNamespace
    fullName: XNamespace[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Collections.Generic.List{System.Xml.Linq.XAttribute}
  parent: System.Collections.Generic
  isExternal: true
  name: List<XAttribute>
  nameWithType: List<XAttribute>
  fullName: System.Collections.Generic.List<System.Xml.Linq.XAttribute>
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: List<System.Xml.Linq.XAttribute>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xml.Linq.XAttribute
    name: XAttribute
    nameWithType: XAttribute
    fullName: XAttribute
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.RemoveNamespaceAttributes(System.String[],System.Xml.Linq.XNamespace[],System.Collections.Generic.List{System.Xml.Linq.XAttribute},System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper
  isExternal: false
  name: RemoveNamespaceAttributes(String[],XNamespace[],List<XAttribute>,Object)
  nameWithType: InternalXmlHelper.RemoveNamespaceAttributes(String[],XNamespace[],List<XAttribute>,Object)
  fullName: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.RemoveNamespaceAttributes(String[],XNamespace[],List<XAttribute>,Object)
- uid: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.RemoveNamespaceAttributes(System.String[],System.Xml.Linq.XNamespace[],System.Collections.Generic.List{System.Xml.Linq.XAttribute},System.Xml.Linq.XElement)
  parent: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper
  isExternal: false
  name: RemoveNamespaceAttributes(String[],XNamespace[],List<XAttribute>,XElement)
  nameWithType: InternalXmlHelper.RemoveNamespaceAttributes(String[],XNamespace[],List<XAttribute>,XElement)
  fullName: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.RemoveNamespaceAttributes(String[],XNamespace[],List<XAttribute>,XElement)
- uid: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.Value(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})
  parent: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper
  isExternal: false
  name: Value(IEnumerable<XElement>)
  nameWithType: InternalXmlHelper.Value(IEnumerable<XElement>)
  fullName: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.Value(IEnumerable<XElement>)
- uid: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.AttributeValue*
  parent: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper
  isExternal: false
  name: AttributeValue
  nameWithType: InternalXmlHelper.AttributeValue
- uid: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.CreateAttribute*
  parent: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper
  isExternal: false
  name: CreateAttribute
  nameWithType: InternalXmlHelper.CreateAttribute
- uid: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.CreateNamespaceAttribute*
  parent: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper
  isExternal: false
  name: CreateNamespaceAttribute
  nameWithType: InternalXmlHelper.CreateNamespaceAttribute
- uid: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.RemoveNamespaceAttributes*
  parent: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper
  isExternal: false
  name: RemoveNamespaceAttributes
  nameWithType: InternalXmlHelper.RemoveNamespaceAttributes
- uid: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.Value*
  parent: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper
  isExternal: false
  name: Value
  nameWithType: InternalXmlHelper.Value
