### YamlMime:ManagedReference
items:
- uid: System.Web.Configuration.ClientTarget
  id: ClientTarget
  children:
  - System.Web.Configuration.ClientTarget.#ctor(System.String,System.String)
  - System.Web.Configuration.ClientTarget.Alias
  - System.Web.Configuration.ClientTarget.Properties
  - System.Web.Configuration.ClientTarget.UserAgent
  langs:
  - csharp
  name: ClientTarget
  nameWithType: ClientTarget
  fullName: System.Web.Configuration.ClientTarget
  type: Class
  summary: "定義的 ASP.NET 伺服器控制項應該轉譯其內容的目標使用者代理程式相關聯的別名。 這個類別無法被繼承。"
  remarks: "Clienttarget 的各種類別中加入的項目是指`clientTarget`組態檔區段。       Clienttarget 的各種類別所屬的群組，其中包含的<xref:System.Web.Configuration.ClientTargetCollection>類別和<xref:System.Web.Configuration.ClientTargetSection>類別。</xref:System.Web.Configuration.ClientTargetSection> </xref:System.Web.Configuration.ClientTargetCollection>       Clienttarget 的各種類別包含用來識別用戶端瀏覽器中，也稱為使用者代理程式的兩個屬性。 其中一個屬性是使用第二個屬性所識別的用戶端瀏覽器相關聯的別名。 ASP.NET 會使用這項資訊來呈現伺服器控制項在頁面中。       如何使用以程式設計方式將使用者代理程式或其別名的相關資訊，請參閱<xref:System.Web.UI.Page.ClientTarget%2A?displayProperty=fullName>屬性。</xref:System.Web.UI.Page.ClientTarget%2A?displayProperty=fullName> 如何使用以宣告方式將使用者代理程式或其別名的相關資訊，請參閱[@ Page](http://msdn.microsoft.com/en-us/f06cf9e5-22bb-461d-8b8f-549e53ff40a4)。       如果<xref:System.Web.UI.Page.ClientTarget%2A?displayProperty=fullName>未設定屬性，<xref:System.Web.HttpBrowserCapabilities>與其相關聯物件<xref:System.Web.UI.Page.Request%2A?displayProperty=fullName>屬性會反映用戶端瀏覽器的功能。</xref:System.Web.UI.Page.Request%2A?displayProperty=fullName> </xref:System.Web.HttpBrowserCapabilities> </xref:System.Web.UI.Page.ClientTarget%2A?displayProperty=fullName> （它反映功能的瀏覽器類型，但不是一定是該瀏覽器的特定執行個體中的設定）。如果設定此屬性，用戶端瀏覽器偵測已停用，頁面會使用與您定義的使用者代理字串相關聯的瀏覽器功能。 您可以設定這個屬性到任何有效的使用者代理字串。"
  example:
  - "This section provides two code examples. The first demonstrates how to declaratively specify values for several properties of the ClientTarget class. The second shows how to obtain the <xref:System.Web.Configuration.ClientTargetCollection> object from the configuration file. You use this object to access the ClientTarget objects it contains.  \n  \n The following code example shows how to declaratively specify values for several properties of the ClientTarget class.  \n  \n```  \n<clientTarget>  \n  <add alias=  \n    \"uplevel\"   \n    userAgent=\"Mozilla/5.0 (compatible;MSIE 6.0;Windows NT 5.1)\"/>  \n  <add alias=\"downlevel\" userAgent=\"Generic Downlevel\"/>  \n</clientTarget>  \n```  \n  \n The following code example shows how to obtain the <xref:System.Web.Configuration.ClientTargetCollection> object from the configuration file.  \n  \n [!code-vb[System.Web.Configuration.ClientTarget#1](~/add/codesnippet/visualbasic/t-system.web.configurati_29_1.vb)]\n [!code-cs[System.Web.Configuration.ClientTarget#1](~/add/codesnippet/csharp/t-system.web.configurati_29_1.cs)]"
  syntax:
    content: 'public sealed class ClientTarget : System.Configuration.ConfigurationElement'
  inheritance:
  - System.Object
  - System.Configuration.ConfigurationElement
  implements: []
  inheritedMembers:
  - System.Configuration.ConfigurationElement.CurrentConfiguration
  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)
  - System.Configuration.ConfigurationElement.ElementInformation
  - System.Configuration.ConfigurationElement.ElementProperty
  - System.Configuration.ConfigurationElement.Equals(System.Object)
  - System.Configuration.ConfigurationElement.EvaluationContext
  - System.Configuration.ConfigurationElement.GetHashCode
  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)
  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)
  - System.Configuration.ConfigurationElement.HasContext
  - System.Configuration.ConfigurationElement.Init
  - System.Configuration.ConfigurationElement.InitializeDefault
  - System.Configuration.ConfigurationElement.IsModified
  - System.Configuration.ConfigurationElement.IsReadOnly
  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)
  - System.Configuration.ConfigurationElement.Item(System.String)
  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)
  - System.Configuration.ConfigurationElement.LockAllAttributesExcept
  - System.Configuration.ConfigurationElement.LockAllElementsExcept
  - System.Configuration.ConfigurationElement.LockAttributes
  - System.Configuration.ConfigurationElement.LockElements
  - System.Configuration.ConfigurationElement.LockItem
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)
  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)
  - System.Configuration.ConfigurationElement.PostDeserialize
  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)
  - System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)
  - System.Configuration.ConfigurationElement.ResetModified
  - System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)
  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)
  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)
  - System.Configuration.ConfigurationElement.SetReadOnly
  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
  platform:
  - net462
- uid: System.Web.Configuration.ClientTarget.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Web.Configuration.ClientTarget
  langs:
  - csharp
  name: ClientTarget(String,String)
  nameWithType: ClientTarget.ClientTarget(String,String)
  fullName: System.Web.Configuration.ClientTarget.ClientTarget(String,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "初始化的新執行個體<xref href=&quot;System.Web.Configuration.ClientTarget&quot;></xref>類別。"
  syntax:
    content: public ClientTarget (string alias, string userAgent);
    parameters:
    - id: alias
      type: System.String
      description: "用來參考特定使用者代理程式的名稱。"
    - id: userAgent
      type: System.String
      description: "使用者代理程式的識別名稱。"
  overload: System.Web.Configuration.ClientTarget.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ClientTarget.Alias
  id: Alias
  parent: System.Web.Configuration.ClientTarget
  langs:
  - csharp
  name: Alias
  nameWithType: ClientTarget.Alias
  fullName: System.Web.Configuration.ClientTarget.Alias
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "取得使用者代理程式的別名。"
  remarks: "別名屬性是指`alias`屬性`add`中的項目`clientTarget`組態檔區段。       ASP.NET 組態預設值包括下列別名:- `uplevel`，這會告知傳送 HTML 和 Internet Explorer 6.0 及更新版本所支援 ECMAScript ASP.NET。      - `downlevel`，這會告知 ASP.NET，限制的 HTML 和版本早於 Internet Explorer 6.0 支援的瀏覽器的指令碼。"
  example:
  - "The following code example shows how to get the Alias from the configuration file of an existing Web application.  \n  \n [!code-vb[System.Web.Configuration.ClientTarget#3](~/add/codesnippet/visualbasic/p-system.web.configurati_91_1.vb)]\n [!code-cs[System.Web.Configuration.ClientTarget#3](~/add/codesnippet/csharp/p-system.web.configurati_91_1.cs)]"
  syntax:
    content: public string Alias { get; }
    return:
      type: System.String
      description: "用來參考特定使用者代理程式的名稱。"
  overload: System.Web.Configuration.ClientTarget.Alias*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ClientTarget.Properties
  id: Properties
  parent: System.Web.Configuration.ClientTarget
  langs:
  - csharp
  name: Properties
  nameWithType: ClientTarget.Properties
  fullName: System.Web.Configuration.ClientTarget.Properties
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  syntax:
    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }
    return:
      type: System.Configuration.ConfigurationPropertyCollection
      description: "即將加入。"
  overload: System.Web.Configuration.ClientTarget.Properties*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ClientTarget.UserAgent
  id: UserAgent
  parent: System.Web.Configuration.ClientTarget
  langs:
  - csharp
  name: UserAgent
  nameWithType: ClientTarget.UserAgent
  fullName: System.Web.Configuration.ClientTarget.UserAgent
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "取得使用者代理程式的識別名稱。"
  remarks: "UserAgent 屬性參考到`userAgent`屬性`add`中的項目`clientTarget`組態檔區段。       ASP.NET 組態預設值可讓您自訂各種 Microsoft Internet Explorer 版本的頁面。 您找到這些別名`uplevel`，這會告知 ASP.NET，HTML 和 ECMAScript 支援的 Internet Explorer 4.0 和更新版本中，傳送用戶端和`downlevel`，這會告知 ASP.NET，限制的 HTML 和 Internet Explorer 4.0 比舊版瀏覽器所支援的指令碼。"
  example:
  - "The following code example shows how to get the UserAgent from the configuration file of an existing Web application.  \n  \n [!code-vb[System.Web.Configuration.ClientTarget#4](~/add/codesnippet/visualbasic/p-system.web.configurati_190_1.vb)]\n [!code-cs[System.Web.Configuration.ClientTarget#4](~/add/codesnippet/csharp/p-system.web.configurati_190_1.cs)]"
  syntax:
    content: public string UserAgent { get; }
    return:
      type: System.String
      description: "使用者代理程式的識別名稱。"
  overload: System.Web.Configuration.ClientTarget.UserAgent*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.ConfigurationElement
  isExternal: false
  name: System.Configuration.ConfigurationElement
- uid: System.Web.Configuration.ClientTarget.#ctor(System.String,System.String)
  parent: System.Web.Configuration.ClientTarget
  isExternal: false
  name: ClientTarget(String,String)
  nameWithType: ClientTarget.ClientTarget(String,String)
  fullName: System.Web.Configuration.ClientTarget.ClientTarget(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Configuration.ClientTarget.Alias
  parent: System.Web.Configuration.ClientTarget
  isExternal: false
  name: Alias
  nameWithType: ClientTarget.Alias
  fullName: System.Web.Configuration.ClientTarget.Alias
- uid: System.Web.Configuration.ClientTarget.Properties
  parent: System.Web.Configuration.ClientTarget
  isExternal: false
  name: Properties
  nameWithType: ClientTarget.Properties
  fullName: System.Web.Configuration.ClientTarget.Properties
- uid: System.Configuration.ConfigurationPropertyCollection
  parent: System.Configuration
  isExternal: false
  name: ConfigurationPropertyCollection
  nameWithType: ConfigurationPropertyCollection
  fullName: System.Configuration.ConfigurationPropertyCollection
- uid: System.Web.Configuration.ClientTarget.UserAgent
  parent: System.Web.Configuration.ClientTarget
  isExternal: false
  name: UserAgent
  nameWithType: ClientTarget.UserAgent
  fullName: System.Web.Configuration.ClientTarget.UserAgent
- uid: System.Web.Configuration.ClientTarget.#ctor*
  parent: System.Web.Configuration.ClientTarget
  isExternal: false
  name: ClientTarget
  nameWithType: ClientTarget.ClientTarget
- uid: System.Web.Configuration.ClientTarget.Alias*
  parent: System.Web.Configuration.ClientTarget
  isExternal: false
  name: Alias
  nameWithType: ClientTarget.Alias
- uid: System.Web.Configuration.ClientTarget.Properties*
  parent: System.Web.Configuration.ClientTarget
  isExternal: false
  name: Properties
  nameWithType: ClientTarget.Properties
- uid: System.Web.Configuration.ClientTarget.UserAgent*
  parent: System.Web.Configuration.ClientTarget
  isExternal: false
  name: UserAgent
  nameWithType: ClientTarget.UserAgent
