### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider
  id: LockingPersistenceProvider
  children:
  - System.ServiceModel.Persistence.LockingPersistenceProvider.#ctor(System.Guid)
  - System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate(System.Object,System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)
  - System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad(System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)
  - System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged(System.TimeSpan,System.Object,System.AsyncCallback,System.Object)
  - System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged(System.TimeSpan,System.Object,System.Boolean,System.AsyncCallback,System.Object)
  - System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUnlock(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate(System.Object,System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)
  - System.ServiceModel.Persistence.LockingPersistenceProvider.Create(System.Object,System.TimeSpan)
  - System.ServiceModel.Persistence.LockingPersistenceProvider.Create(System.Object,System.TimeSpan,System.Boolean)
  - System.ServiceModel.Persistence.LockingPersistenceProvider.EndUnlock(System.IAsyncResult)
  - System.ServiceModel.Persistence.LockingPersistenceProvider.Load(System.TimeSpan)
  - System.ServiceModel.Persistence.LockingPersistenceProvider.Load(System.TimeSpan,System.Boolean)
  - System.ServiceModel.Persistence.LockingPersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Object@)
  - System.ServiceModel.Persistence.LockingPersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Boolean,System.Object@)
  - System.ServiceModel.Persistence.LockingPersistenceProvider.Unlock(System.TimeSpan)
  - System.ServiceModel.Persistence.LockingPersistenceProvider.Update(System.Object,System.TimeSpan)
  - System.ServiceModel.Persistence.LockingPersistenceProvider.Update(System.Object,System.TimeSpan,System.Boolean)
  langs:
  - csharp
  name: LockingPersistenceProvider
  nameWithType: LockingPersistenceProvider
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider
  type: Class
  summary: "所有長期服務持續性提供者實作鎖定，均衍生自此抽象基底類別。"
  remarks: "除了持續性，LockingPersistenceProvider 類別會實作服務狀態資料記錄的鎖定。 方法與互動的持續性資料 (例如`Load`方法) 有選擇性參數 (`lockInstance`)，定義上述資料的鎖定為解除或維持。"
  syntax:
    content: >-
      [System.Obsolete("The WF3 types are deprecated.  Instead, please use the new WF4 types from System.Activities.*")]

      public abstract class LockingPersistenceProvider : System.ServiceModel.Persistence.PersistenceProvider
  inheritance:
  - System.ServiceModel.Channels.CommunicationObject
  - System.ServiceModel.Persistence.PersistenceProvider
  implements: []
  inheritedMembers:
  - System.ServiceModel.Persistence.PersistenceProvider.BeginDelete(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Persistence.PersistenceProvider.Delete(System.Object,System.TimeSpan)
  - System.ServiceModel.Persistence.PersistenceProvider.EndCreate(System.IAsyncResult)
  - System.ServiceModel.Persistence.PersistenceProvider.EndDelete(System.IAsyncResult)
  - System.ServiceModel.Persistence.PersistenceProvider.EndLoad(System.IAsyncResult)
  - System.ServiceModel.Persistence.PersistenceProvider.EndLoadIfChanged(System.IAsyncResult,System.Object@)
  - System.ServiceModel.Persistence.PersistenceProvider.EndUpdate(System.IAsyncResult)
  - System.ServiceModel.Persistence.PersistenceProvider.Id
  platform:
  - net462
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.#ctor(System.Guid)
  id: '#ctor(System.Guid)'
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  langs:
  - csharp
  name: LockingPersistenceProvider(Guid)
  nameWithType: LockingPersistenceProvider.LockingPersistenceProvider(Guid)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.LockingPersistenceProvider(Guid)
  type: Constructor
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "在衍生類別中實作時，建立的新執行個體<xref href=&quot;System.ServiceModel.Persistence.LockingPersistenceProvider&quot;></xref>設定與指定的識別值的類別。"
  syntax:
    content: protected LockingPersistenceProvider (Guid id);
    parameters:
    - id: id
      type: System.Guid
      description: "要與此持續性提供者執行個體相關聯的唯一識別碼。"
  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginCreate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  langs:
  - csharp
  name: BeginCreate(Object,TimeSpan,AsyncCallback,Object)
  nameWithType: LockingPersistenceProvider.BeginCreate(Object,TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate(Object,TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "開始非同步作業，以便在使用參數在持續性存放區中建立執行個體狀態資訊。 這個方法不會在儲存狀態資訊之後解除鎖定執行個體。"
  remarks: "這個方法會呼叫<xref:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate%2A>採用額外的參數來判斷是否已解除鎖定執行個體的方法。</xref:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate%2A> 這個方法會傳遞`false`做為這個參數來呼叫方法的值。"
  syntax:
    content: public override IAsyncResult BeginCreate (object instance, TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: instance
      type: System.Object
      description: "執行個體，其狀態資訊會儲存到持續性存放區。"
    - id: timeout
      type: System.TimeSpan
      description: "在這項作業必須完成而不逾時的間隔。"
    - id: callback
      type: System.AsyncCallback
      description: "委派，在作業完成時接收通知。"
    - id: state
      type: System.Object
      description: "與非同步作業相關聯的狀態資訊。"
    return:
      type: System.IAsyncResult
      description: "非同步作業的狀態。"
  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate(System.Object,System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)
  id: BeginCreate(System.Object,System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  langs:
  - csharp
  name: BeginCreate(Object,TimeSpan,Boolean,AsyncCallback,Object)
  nameWithType: LockingPersistenceProvider.BeginCreate(Object,TimeSpan,Boolean,AsyncCallback,Object)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate(Object,TimeSpan,Boolean,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "開始非同步作業，以便在使用參數在持續性存放區中建立執行個體狀態資訊。 這個方法在儲存執行個體的狀態，如果之後會解除鎖定執行個體的值<code> unlockInstance </code>參數是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  syntax:
    content: public abstract IAsyncResult BeginCreate (object instance, TimeSpan timeout, bool unlockInstance, AsyncCallback callback, object state);
    parameters:
    - id: instance
      type: System.Object
      description: "執行個體，其狀態資訊會儲存到持續性存放區。"
    - id: timeout
      type: System.TimeSpan
      description: "在這項作業必須完成而不逾時的間隔。"
    - id: unlockInstance
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果執行個體必須解除鎖定在持續性存放區中。否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    - id: callback
      type: System.AsyncCallback
      description: "委派，在作業完成時接收通知。"
    - id: state
      type: System.Object
      description: "與非同步作業相關聯的狀態資訊。"
    return:
      type: System.IAsyncResult
      description: "非同步作業的狀態。"
  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad(System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginLoad(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  langs:
  - csharp
  name: BeginLoad(TimeSpan,AsyncCallback,Object)
  nameWithType: LockingPersistenceProvider.BeginLoad(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad(TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "開始非同步作業以載入執行個體根據使用的參數在持續性存放區中的狀態資訊。 這個方法不會鎖定執行個體。"
  remarks: "這個方法會呼叫<xref:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad%2A>，其可接受的額外參數會指定是否必須在持續性存放區中鎖定執行個體。</xref:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad%2A> 這個方法會傳遞`false`做為這個參數來呼叫方法的值。"
  syntax:
    content: public override IAsyncResult BeginLoad (TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "在這項作業必須完成而不逾時的間隔。"
    - id: callback
      type: System.AsyncCallback
      description: "委派，在作業完成時接收通知。"
    - id: state
      type: System.Object
      description: "與非同步作業相關聯的狀態資訊。"
    return:
      type: System.IAsyncResult
      description: "非同步作業的狀態。"
  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad(System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)
  id: BeginLoad(System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  langs:
  - csharp
  name: BeginLoad(TimeSpan,Boolean,AsyncCallback,Object)
  nameWithType: LockingPersistenceProvider.BeginLoad(TimeSpan,Boolean,AsyncCallback,Object)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad(TimeSpan,Boolean,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "開始非同步作業以載入執行個體根據使用的參數在持續性存放區中的狀態資訊。 這個方法之後載入執行個體的狀態，如果鎖定執行個體的值<code> lockInstance </code>參數是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  syntax:
    content: public abstract IAsyncResult BeginLoad (TimeSpan timeout, bool lockInstance, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "中這項作業必須完成逾時之前的間隔。"
    - id: lockInstance
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果必須鎖定執行個體。否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    - id: callback
      type: System.AsyncCallback
      description: "委派，在作業完成時接收通知。"
    - id: state
      type: System.Object
      description: "與非同步作業相關聯的狀態資訊。"
    return:
      type: System.IAsyncResult
      description: "非同步作業的狀態。"
  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged(System.TimeSpan,System.Object,System.AsyncCallback,System.Object)
  id: BeginLoadIfChanged(System.TimeSpan,System.Object,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  langs:
  - csharp
  name: BeginLoadIfChanged(TimeSpan,Object,AsyncCallback,Object)
  nameWithType: LockingPersistenceProvider.BeginLoadIfChanged(TimeSpan,Object,AsyncCallback,Object)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged(TimeSpan,Object,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "在衍生類別中實作時，代表 LoadIfChanged 階段的開始。 狀態資料載入至持續性提供者從持續性存放區和已變更的持續性存放區中的狀態資料時，就會發生 LoadIfChanged 階段。 這個方法呼叫不會鎖定的持續性存放區中的執行個體。"
  syntax:
    content: public override IAsyncResult BeginLoadIfChanged (TimeSpan timeout, object instanceToken, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "一段時間之後的持續性提供者會中止此作業。"
    - id: instanceToken
      type: System.Object
      description: "先前傳回的權杖<xref uid=&quot;langword_csharp_Create&quot; name=&quot;Create&quot; href=&quot;&quot;></xref>或<xref uid=&quot;langword_csharp_Update&quot; name=&quot;Update&quot; href=&quot;&quot;></xref>呼叫端所持有的方法，表示目前的狀態。"
    - id: callback
      type: System.AsyncCallback
      description: "要在作業完成時呼叫的方法。"
    - id: state
      type: System.Object
      description: "使用者提供的物件，可區別這個特定非同步作業與其他作業。"
    return:
      type: System.IAsyncResult
      description: "非同步作業的狀態。"
  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged(System.TimeSpan,System.Object,System.Boolean,System.AsyncCallback,System.Object)
  id: BeginLoadIfChanged(System.TimeSpan,System.Object,System.Boolean,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  langs:
  - csharp
  name: BeginLoadIfChanged(TimeSpan,Object,Boolean,AsyncCallback,Object)
  nameWithType: LockingPersistenceProvider.BeginLoadIfChanged(TimeSpan,Object,Boolean,AsyncCallback,Object)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged(TimeSpan,Object,Boolean,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "在衍生類別中實作時，代表 LoadIfChanged 階段的開始。 狀態資料載入至持續性提供者從持續性存放區和已變更的持續性存放區中的狀態資料時，就會發生 LoadIfChanged 階段。 這個方法呼叫，可讓您指定您是否想要鎖定的持續性存放區中的執行個體。"
  syntax:
    content: public virtual IAsyncResult BeginLoadIfChanged (TimeSpan timeout, object instanceToken, bool lockInstance, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "一段時間之後的持續性提供者會中止此作業。"
    - id: instanceToken
      type: System.Object
      description: "先前傳回的權杖<xref uid=&quot;langword_csharp_Create&quot; name=&quot;Create&quot; href=&quot;&quot;></xref>或<xref uid=&quot;langword_csharp_Update&quot; name=&quot;Update&quot; href=&quot;&quot;></xref>呼叫端所持有的方法，表示目前的狀態。"
    - id: lockInstance
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果執行個體被鎖定在持續性存放區中。否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    - id: callback
      type: System.AsyncCallback
      description: "要在作業完成時呼叫的方法。"
    - id: state
      type: System.Object
      description: "使用者提供的物件，可區別這個特定非同步作業與其他作業。"
    return:
      type: System.IAsyncResult
      description: "非同步作業的狀態。"
  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUnlock(System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginUnlock(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  langs:
  - csharp
  name: BeginUnlock(TimeSpan,AsyncCallback,Object)
  nameWithType: LockingPersistenceProvider.BeginUnlock(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUnlock(TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "開始非同步作業以解除鎖定的持續性存放區中的執行個體。"
  syntax:
    content: public abstract IAsyncResult BeginUnlock (TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "中這項作業必須完成逾時之前的間隔。"
    - id: callback
      type: System.AsyncCallback
      description: "委派，在作業完成時接收通知。"
    - id: state
      type: System.Object
      description: "與非同步作業相關聯的狀態資訊。"
    return:
      type: System.IAsyncResult
      description: "非同步作業的狀態。"
  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUnlock*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginUpdate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  langs:
  - csharp
  name: BeginUpdate(Object,TimeSpan,AsyncCallback,Object)
  nameWithType: LockingPersistenceProvider.BeginUpdate(Object,TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate(Object,TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "開始非同步作業以更新使用傳遞的參數在持續性存放區中的執行個體狀態資訊。 這項作業不會解除鎖定執行個體存放區中的執行個體。"
  remarks: "這個方法會呼叫<xref:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate%2A>方法，並傳遞`false`值`unlockInstance`參數。</xref:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate%2A>"
  syntax:
    content: public override IAsyncResult BeginUpdate (object instance, TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: instance
      type: System.Object
      description: "正在更新其狀態資訊在持續性存放區中的執行個體。"
    - id: timeout
      type: System.TimeSpan
      description: "間隔時間，而不逾時必須完成作業。"
    - id: callback
      type: System.AsyncCallback
      description: "委派，在作業完成時接收通知。"
    - id: state
      type: System.Object
      description: "非同步作業的相關狀態資訊。"
    return:
      type: System.IAsyncResult
      description: "非同步作業的狀態。"
  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate(System.Object,System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)
  id: BeginUpdate(System.Object,System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  langs:
  - csharp
  name: BeginUpdate(Object,TimeSpan,Boolean,AsyncCallback,Object)
  nameWithType: LockingPersistenceProvider.BeginUpdate(Object,TimeSpan,Boolean,AsyncCallback,Object)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate(Object,TimeSpan,Boolean,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "開始非同步作業以更新使用傳遞的參數在持續性存放區中的執行個體狀態資訊。 這項作業鎖定的持續性存放區中的執行個體，如果值<code> unlockInstance </code>參數是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  syntax:
    content: public abstract IAsyncResult BeginUpdate (object instance, TimeSpan timeout, bool unlockInstance, AsyncCallback callback, object state);
    parameters:
    - id: instance
      type: System.Object
      description: "正在更新其狀態資訊在持續性存放區中的執行個體。"
    - id: timeout
      type: System.TimeSpan
      description: "間隔時間，而不逾時必須完成作業。"
    - id: unlockInstance
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果執行個體必須鎖定之後，執行個體狀態會更新持續性存放區中;否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    - id: callback
      type: System.AsyncCallback
      description: "委派，在作業完成時接收通知。"
    - id: state
      type: System.Object
      description: "非同步作業的相關狀態資訊。"
    return:
      type: System.IAsyncResult
      description: "非同步作業的狀態。"
  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.Create(System.Object,System.TimeSpan)
  id: Create(System.Object,System.TimeSpan)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  langs:
  - csharp
  name: Create(Object,TimeSpan)
  nameWithType: LockingPersistenceProvider.Create(Object,TimeSpan)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.Create(Object,TimeSpan)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "使用傳遞至方法的參數在持續性存放區中建立執行個體狀態資訊。 這個方法不會儲存執行個體的狀態後解除鎖定的持續性存放區中的執行個體。"
  syntax:
    content: public override object Create (object instance, TimeSpan timeout);
    parameters:
    - id: instance
      type: System.Object
      description: "執行個體物件，其狀態資訊必須儲存至持續性存放區。"
    - id: timeout
      type: System.TimeSpan
      description: "作業逾時前必須完成的間隔。"
    return:
      type: System.Object
      description: "狀態資訊。"
  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.Create*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.Create(System.Object,System.TimeSpan,System.Boolean)
  id: Create(System.Object,System.TimeSpan,System.Boolean)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  langs:
  - csharp
  name: Create(Object,TimeSpan,Boolean)
  nameWithType: LockingPersistenceProvider.Create(Object,TimeSpan,Boolean)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.Create(Object,TimeSpan,Boolean)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "這個方法會使用傳遞至方法的參數在持續性存放區中建立執行個體狀態資訊。 方法可以解除鎖定執行個體存放區中的執行個體的值<code> unlockInstance </code>參數是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  syntax:
    content: public abstract object Create (object instance, TimeSpan timeout, bool unlockInstance);
    parameters:
    - id: instance
      type: System.Object
      description: "執行個體物件，其狀態資訊會儲存到持續性存放區。"
    - id: timeout
      type: System.TimeSpan
      description: "逾時之前必須完成之作業的間隔。"
    - id: unlockInstance
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果執行個體必須解除鎖定在持續性存放區中。否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.Object
      description: "狀態資訊。"
  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.Create*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.EndUnlock(System.IAsyncResult)
  id: EndUnlock(System.IAsyncResult)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  langs:
  - csharp
  name: EndUnlock(IAsyncResult)
  nameWithType: LockingPersistenceProvider.EndUnlock(IAsyncResult)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.EndUnlock(IAsyncResult)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "結束非同步作業以解除鎖定的持續性存放區中的執行個體。"
  syntax:
    content: public abstract void EndUnlock (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "解除鎖定作業傳回的結果。"
  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.EndUnlock*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.Load(System.TimeSpan)
  id: Load(System.TimeSpan)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  langs:
  - csharp
  name: Load(TimeSpan)
  nameWithType: LockingPersistenceProvider.Load(TimeSpan)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.Load(TimeSpan)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "載入服務狀態資訊從持續性存放區，而無需鎖定的執行個體。"
  remarks: "這個方法會叫用<xref:System.ServiceModel.Persistence.LockingPersistenceProvider.Load%2A>方法`lockInstance`參數設定為`false`。</xref:System.ServiceModel.Persistence.LockingPersistenceProvider.Load%2A>"
  syntax:
    content: public override object Load (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "一段時間之後的持續性提供者會中止這次嘗試。"
    return:
      type: System.Object
      description: "服務狀態資訊。"
  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.Load*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.Load(System.TimeSpan,System.Boolean)
  id: Load(System.TimeSpan,System.Boolean)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  langs:
  - csharp
  name: Load(TimeSpan,Boolean)
  nameWithType: LockingPersistenceProvider.Load(TimeSpan,Boolean)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.Load(TimeSpan,Boolean)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "載入狀態資訊從持續性存放區之後鎖定執行個體。"
  syntax:
    content: public abstract object Load (TimeSpan timeout, bool lockInstance);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "之後的持續性提供者會中止此作業期間。"
    - id: lockInstance
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果應鎖定執行個體。否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.Object
      description: "狀態資訊。"
  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.Load*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Object@)
  id: LoadIfChanged(System.TimeSpan,System.Object,System.Object@)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  langs:
  - csharp
  name: LoadIfChanged(TimeSpan,Object,Object)
  nameWithType: LockingPersistenceProvider.LoadIfChanged(TimeSpan,Object,Object)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.LoadIfChanged(TimeSpan,Object,Object)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "如果自上次呼叫端載入資訊之後已變更的狀態資訊，請從持續性存放區載入執行個體狀態資訊。 這個方法不會鎖定的持續性存放區中的執行個體。"
  syntax:
    content: public override bool LoadIfChanged (TimeSpan timeout, object instanceToken, out object instance);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "一段時間之後的持續性提供者會中止此作業。"
    - id: instanceToken
      type: System.Object
      description: "先前傳回的權杖<xref uid=&quot;langword_csharp_Create&quot; name=&quot;Create&quot; href=&quot;&quot;></xref>或<xref uid=&quot;langword_csharp_Update&quot; name=&quot;Update&quot; href=&quot;&quot;></xref>方法呼叫，表示呼叫端所持有的目前狀態。"
    - id: instance
      type: System.Object
      description: "實際的執行個體狀態資訊。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果應該在這項操作; 結尾的持續性存放區中鎖定執行個體否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.LoadIfChanged*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Boolean,System.Object@)
  id: LoadIfChanged(System.TimeSpan,System.Object,System.Boolean,System.Object@)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  langs:
  - csharp
  name: LoadIfChanged(TimeSpan,Object,Boolean,Object)
  nameWithType: LockingPersistenceProvider.LoadIfChanged(TimeSpan,Object,Boolean,Object)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.LoadIfChanged(TimeSpan,Object,Boolean,Object)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "如果自上次呼叫端載入資訊之後已變更的狀態資訊，請從持續性存放區載入執行個體狀態資訊。 這個方法也可讓呼叫端指定是否要鎖定的持續性存放區中的執行個體。"
  syntax:
    content: public virtual bool LoadIfChanged (TimeSpan timeout, object instanceToken, bool lockInstance, out object instance);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "一段時間之後的持續性提供者會中止此作業。"
    - id: instanceToken
      type: System.Object
      description: "所傳回的權杖前一個 Create 或 Update 方法呼叫，表示呼叫端所持有的目前狀態。"
    - id: lockInstance
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果應該在這項操作; 結尾的持續性存放區中鎖定執行個體否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    - id: instance
      type: System.Object
      description: "執行個體狀態資訊。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果應該在這項操作; 結尾的持續性存放區中鎖定執行個體否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.LoadIfChanged*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.Unlock(System.TimeSpan)
  id: Unlock(System.TimeSpan)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  langs:
  - csharp
  name: Unlock(TimeSpan)
  nameWithType: LockingPersistenceProvider.Unlock(TimeSpan)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.Unlock(TimeSpan)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "解除鎖定執行個體指定 ID 的建構時<xref href=&quot;System.ServiceModel.Persistence.LockingPersistenceProvider&quot;></xref>持續性存放區中的物件。"
  syntax:
    content: public abstract void Unlock (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "一段時間之後的持續性提供者會中止作業。"
  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.Unlock*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.Update(System.Object,System.TimeSpan)
  id: Update(System.Object,System.TimeSpan)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  langs:
  - csharp
  name: Update(Object,TimeSpan)
  nameWithType: LockingPersistenceProvider.Update(Object,TimeSpan)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.Update(Object,TimeSpan)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "在衍生類別中實作時，會更新持續性存放區中的執行個體狀態資訊。 這個方法不會更新持續性存放區中的執行個體狀態資訊之後解除鎖定執行個體。"
  syntax:
    content: public override object Update (object instance, TimeSpan timeout);
    parameters:
    - id: instance
      type: System.Object
      description: "執行個體狀態資訊。"
    - id: timeout
      type: System.TimeSpan
      description: "一段時間之後的持續性提供者會中止作業。"
    return:
      type: System.Object
      description: "執行個體狀態資訊。"
  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.Update*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.Update(System.Object,System.TimeSpan,System.Boolean)
  id: Update(System.Object,System.TimeSpan,System.Boolean)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  langs:
  - csharp
  name: Update(Object,TimeSpan,Boolean)
  nameWithType: LockingPersistenceProvider.Update(Object,TimeSpan,Boolean)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.Update(Object,TimeSpan,Boolean)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "在衍生類別中實作時，會更新持續性存放區中的執行個體狀態資訊。 這個方法不會更新持續性存放區中的執行個體狀態資訊之後解除鎖定執行個體。"
  syntax:
    content: public abstract object Update (object instance, TimeSpan timeout, bool unlockInstance);
    parameters:
    - id: instance
      type: System.Object
      description: "執行個體狀態資訊。"
    - id: timeout
      type: System.TimeSpan
      description: "一段時間之後的持續性提供者會中止作業。"
    - id: unlockInstance
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果執行個體狀態資訊更新; 之後，已解除鎖定執行個體否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.Object
      description: "執行個體狀態資訊。"
  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.Update*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.Persistence.PersistenceProvider
  isExternal: false
  name: System.ServiceModel.Persistence.PersistenceProvider
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.#ctor(System.Guid)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: LockingPersistenceProvider(Guid)
  nameWithType: LockingPersistenceProvider.LockingPersistenceProvider(Guid)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.LockingPersistenceProvider(Guid)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: BeginCreate(Object,TimeSpan,AsyncCallback,Object)
  nameWithType: LockingPersistenceProvider.BeginCreate(Object,TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate(Object,TimeSpan,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate(System.Object,System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: BeginCreate(Object,TimeSpan,Boolean,AsyncCallback,Object)
  nameWithType: LockingPersistenceProvider.BeginCreate(Object,TimeSpan,Boolean,AsyncCallback,Object)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate(Object,TimeSpan,Boolean,AsyncCallback,Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: BeginLoad(TimeSpan,AsyncCallback,Object)
  nameWithType: LockingPersistenceProvider.BeginLoad(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad(TimeSpan,AsyncCallback,Object)
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad(System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: BeginLoad(TimeSpan,Boolean,AsyncCallback,Object)
  nameWithType: LockingPersistenceProvider.BeginLoad(TimeSpan,Boolean,AsyncCallback,Object)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad(TimeSpan,Boolean,AsyncCallback,Object)
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged(System.TimeSpan,System.Object,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: BeginLoadIfChanged(TimeSpan,Object,AsyncCallback,Object)
  nameWithType: LockingPersistenceProvider.BeginLoadIfChanged(TimeSpan,Object,AsyncCallback,Object)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged(TimeSpan,Object,AsyncCallback,Object)
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged(System.TimeSpan,System.Object,System.Boolean,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: BeginLoadIfChanged(TimeSpan,Object,Boolean,AsyncCallback,Object)
  nameWithType: LockingPersistenceProvider.BeginLoadIfChanged(TimeSpan,Object,Boolean,AsyncCallback,Object)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged(TimeSpan,Object,Boolean,AsyncCallback,Object)
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUnlock(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: BeginUnlock(TimeSpan,AsyncCallback,Object)
  nameWithType: LockingPersistenceProvider.BeginUnlock(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUnlock(TimeSpan,AsyncCallback,Object)
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: BeginUpdate(Object,TimeSpan,AsyncCallback,Object)
  nameWithType: LockingPersistenceProvider.BeginUpdate(Object,TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate(Object,TimeSpan,AsyncCallback,Object)
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate(System.Object,System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: BeginUpdate(Object,TimeSpan,Boolean,AsyncCallback,Object)
  nameWithType: LockingPersistenceProvider.BeginUpdate(Object,TimeSpan,Boolean,AsyncCallback,Object)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate(Object,TimeSpan,Boolean,AsyncCallback,Object)
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.Create(System.Object,System.TimeSpan)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: Create(Object,TimeSpan)
  nameWithType: LockingPersistenceProvider.Create(Object,TimeSpan)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.Create(Object,TimeSpan)
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.Create(System.Object,System.TimeSpan,System.Boolean)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: Create(Object,TimeSpan,Boolean)
  nameWithType: LockingPersistenceProvider.Create(Object,TimeSpan,Boolean)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.Create(Object,TimeSpan,Boolean)
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.EndUnlock(System.IAsyncResult)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: EndUnlock(IAsyncResult)
  nameWithType: LockingPersistenceProvider.EndUnlock(IAsyncResult)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.EndUnlock(IAsyncResult)
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.Load(System.TimeSpan)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: Load(TimeSpan)
  nameWithType: LockingPersistenceProvider.Load(TimeSpan)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.Load(TimeSpan)
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.Load(System.TimeSpan,System.Boolean)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: Load(TimeSpan,Boolean)
  nameWithType: LockingPersistenceProvider.Load(TimeSpan,Boolean)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.Load(TimeSpan,Boolean)
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Object@)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: LoadIfChanged(TimeSpan,Object,Object)
  nameWithType: LockingPersistenceProvider.LoadIfChanged(TimeSpan,Object,Object)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.LoadIfChanged(TimeSpan,Object,Object)
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Boolean,System.Object@)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: LoadIfChanged(TimeSpan,Object,Boolean,Object)
  nameWithType: LockingPersistenceProvider.LoadIfChanged(TimeSpan,Object,Boolean,Object)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.LoadIfChanged(TimeSpan,Object,Boolean,Object)
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.Unlock(System.TimeSpan)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: Unlock(TimeSpan)
  nameWithType: LockingPersistenceProvider.Unlock(TimeSpan)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.Unlock(TimeSpan)
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.Update(System.Object,System.TimeSpan)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: Update(Object,TimeSpan)
  nameWithType: LockingPersistenceProvider.Update(Object,TimeSpan)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.Update(Object,TimeSpan)
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.Update(System.Object,System.TimeSpan,System.Boolean)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: Update(Object,TimeSpan,Boolean)
  nameWithType: LockingPersistenceProvider.Update(Object,TimeSpan,Boolean)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.Update(Object,TimeSpan,Boolean)
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.#ctor*
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: LockingPersistenceProvider
  nameWithType: LockingPersistenceProvider.LockingPersistenceProvider
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate*
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: BeginCreate
  nameWithType: LockingPersistenceProvider.BeginCreate
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad*
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: BeginLoad
  nameWithType: LockingPersistenceProvider.BeginLoad
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged*
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: BeginLoadIfChanged
  nameWithType: LockingPersistenceProvider.BeginLoadIfChanged
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUnlock*
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: BeginUnlock
  nameWithType: LockingPersistenceProvider.BeginUnlock
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate*
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: BeginUpdate
  nameWithType: LockingPersistenceProvider.BeginUpdate
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.Create*
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: Create
  nameWithType: LockingPersistenceProvider.Create
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.EndUnlock*
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: EndUnlock
  nameWithType: LockingPersistenceProvider.EndUnlock
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.Load*
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: Load
  nameWithType: LockingPersistenceProvider.Load
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.LoadIfChanged*
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: LoadIfChanged
  nameWithType: LockingPersistenceProvider.LoadIfChanged
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.Unlock*
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: Unlock
  nameWithType: LockingPersistenceProvider.Unlock
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.Update*
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: Update
  nameWithType: LockingPersistenceProvider.Update
