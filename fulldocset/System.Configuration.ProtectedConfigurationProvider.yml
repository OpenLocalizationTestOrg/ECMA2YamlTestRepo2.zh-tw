### YamlMime:ManagedReference
items:
- uid: System.Configuration.ProtectedConfigurationProvider
  id: ProtectedConfigurationProvider
  children:
  - System.Configuration.ProtectedConfigurationProvider.#ctor
  - System.Configuration.ProtectedConfigurationProvider.Decrypt(System.Xml.XmlNode)
  - System.Configuration.ProtectedConfigurationProvider.Encrypt(System.Xml.XmlNode)
  langs:
  - csharp
  name: ProtectedConfigurationProvider
  nameWithType: ProtectedConfigurationProvider
  fullName: System.Configuration.ProtectedConfigurationProvider
  type: Class
  summary: "是用於加密和解密受保護的組態資料建立提供者的基底類別。"
  remarks: "您可以加密組態檔來保護您的應用程式所使用的敏感資訊的區段。 這可以改善安全性就不容易未經授權存取即使攻擊者取得組態檔的存取權。       .NET Framework 包含兩個受保護的組態提供者，可以用來加密組態檔的區段。 <xref:System.Configuration.RsaProtectedConfigurationProvider>類別會使用<xref:System.Security.Cryptography.RSACryptoServiceProvider>來加密組態區段。</xref:System.Security.Cryptography.RSACryptoServiceProvider> </xref:System.Configuration.RsaProtectedConfigurationProvider> <xref:System.Configuration.DpapiProtectedConfigurationProvider>類別會使用 Windows 資料保護 API (DPAPI) 來加密組態區段。</xref:System.Configuration.DpapiProtectedConfigurationProvider>       您可能需要使用 RSA 或 DPAPI 的提供者以外的演算法的重要資訊加密。 在此情況下，您可以建立您自己自訂的受保護的組態提供者。 ProtectedConfigurationProvider 是您必須建立自己的受保護的組態提供者繼承自抽象基底類別。       無論您是使用標準或自訂提供者，您必須確定它已設定使用`add`中的項目`providers`區段`configProtectedData`組態區段。 （請參閱下一個範例。）     如需詳細資訊，請參閱[實作受保護的組態提供者](~/add/includes/ajax-current-ext-md.md)。      > [!NOTE] > 當 ASP.NET 遇到加密的組態資料時，它會執行解密以透明的方式使用設定的提供者。 您除了確定您設定必要的提供者不需要任何動作。"
  example:
  - "The following example shows how to implement a custom ProtectedConfigurationProvider.  \n  \n To be able to configure this provider, as shown in the next configuration excerpt, you must install it in the Global Assembly Cache (GAC). Refer to [Implementing a Protected Configuration Provider](../Topic/Implementing%20a%20Protected%20Configuration%20Provider.md) for more information.  \n  \n [!code-cs[System.Configuration.ProtectedConfigurationProvider#1](~/add/codesnippet/csharp/t-system.configuration.p_7_1.cs)]\n [!code-vb[System.Configuration.ProtectedConfigurationProvider#1](~/add/codesnippet/visualbasic/t-system.configuration.p_7_1.vb)]  \n  \n The following example shows how to use the previous custom ProtectedConfigurationProvider.  \n  \n [!code-vb[System.Configuration.UsingProtectedConfigurationProvider#11](~/add/codesnippet/visualbasic/t-system.configuration.p_7_2.vb)]\n [!code-cs[System.Configuration.UsingProtectedConfigurationProvider#11](~/add/codesnippet/csharp/t-system.configuration.p_7_2.cs)]  \n  \n The following is an excerpt of the configuration file used by the above examples.  \n  \n```  \n<?xml version=\"1.0\" encoding=\"utf-8\" ?>  \n<configuration>  \n  \n  <configProtectedData >  \n    <providers>  \n      <clear />  \n      <add keyContainerName=\"pcKey.txt\"   \n        name=\"TripleDESProtectedConfigurationProvider\"  \ntype=\"Samples.Aspnet.TripleDESProtectedConfigurationProvider, protectedconfigurationproviderlib, Version=1.0.0.0, Culture=neutral, PublicKeyToken=79e01ae0f5cfc66f, processorArchitecture=MSIL\" />  \n    </providers>  \n  \n  </configProtectedData >  \n  \n  <connectionStrings>  \n    <add name=\"NorthwindConnectionString\"   \n      connectionString=\"Data Source=webnetue2;Initial Catalog=Northwind;User ID=aspnet_test;Password=test\"  \nproviderName=\"System.Data.SqlClient\" />  \n  </connectionStrings>  \n  \n</configuration>  \n```"
  syntax:
    content: 'public abstract class ProtectedConfigurationProvider : System.Configuration.Provider.ProviderBase'
  inheritance:
  - System.Object
  - System.Configuration.Provider.ProviderBase
  implements: []
  inheritedMembers:
  - System.Configuration.Provider.ProviderBase.Description
  - System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  - System.Configuration.Provider.ProviderBase.Name
  platform:
  - net462
- uid: System.Configuration.ProtectedConfigurationProvider.#ctor
  id: '#ctor'
  parent: System.Configuration.ProtectedConfigurationProvider
  langs:
  - csharp
  name: ProtectedConfigurationProvider()
  nameWithType: ProtectedConfigurationProvider.ProtectedConfigurationProvider()
  fullName: System.Configuration.ProtectedConfigurationProvider.ProtectedConfigurationProvider()
  type: Constructor
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "初始化的新執行個體<xref href=&quot;System.Configuration.ProtectedConfigurationProvider&quot;></xref>類別使用預設設定。"
  syntax:
    content: protected ProtectedConfigurationProvider ();
    parameters: []
  overload: System.Configuration.ProtectedConfigurationProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ProtectedConfigurationProvider.Decrypt(System.Xml.XmlNode)
  id: Decrypt(System.Xml.XmlNode)
  parent: System.Configuration.ProtectedConfigurationProvider
  langs:
  - csharp
  name: Decrypt(XmlNode)
  nameWithType: ProtectedConfigurationProvider.Decrypt(XmlNode)
  fullName: System.Configuration.ProtectedConfigurationProvider.Decrypt(XmlNode)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "解密傳入<xref href=&quot;System.Xml.XmlNode&quot;></xref>從組態檔的物件。"
  remarks: ''
  example:
  - "The following example shows how to use Decrypt method to perform custom decryption.  \n  \n [!code-cs[System.Configuration.ProtectedConfigurationProvider#2](~/add/codesnippet/csharp/490b80fa-87ff-462a-bceb-_1.cs)]\n [!code-vb[System.Configuration.ProtectedConfigurationProvider#2](~/add/codesnippet/visualbasic/490b80fa-87ff-462a-bceb-_1.vb)]"
  syntax:
    content: public abstract System.Xml.XmlNode Decrypt (System.Xml.XmlNode encryptedNode);
    parameters:
    - id: encryptedNode
      type: System.Xml.XmlNode
      description: "<xref href=&quot;System.Xml.XmlNode&quot;> </xref>物件來解密。"
    return:
      type: System.Xml.XmlNode
      description: "<xref href=&quot;System.Xml.XmlNode&quot;> </xref>物件，其中包含已解密的資料。"
  overload: System.Configuration.ProtectedConfigurationProvider.Decrypt*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ProtectedConfigurationProvider.Encrypt(System.Xml.XmlNode)
  id: Encrypt(System.Xml.XmlNode)
  parent: System.Configuration.ProtectedConfigurationProvider
  langs:
  - csharp
  name: Encrypt(XmlNode)
  nameWithType: ProtectedConfigurationProvider.Encrypt(XmlNode)
  fullName: System.Configuration.ProtectedConfigurationProvider.Encrypt(XmlNode)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "加密傳遞<xref href=&quot;System.Xml.XmlNode&quot;></xref>從組態檔的物件。"
  remarks: ''
  example:
  - "The following example shows how to use Encrypt to perform custom encryption.  \n  \n [!code-cs[System.Configuration.ProtectedConfigurationProvider#3](~/add/codesnippet/csharp/1cc011d4-bc06-4499-99c2-_1.cs)]\n [!code-vb[System.Configuration.ProtectedConfigurationProvider#3](~/add/codesnippet/visualbasic/1cc011d4-bc06-4499-99c2-_1.vb)]"
  syntax:
    content: public abstract System.Xml.XmlNode Encrypt (System.Xml.XmlNode node);
    parameters:
    - id: node
      type: System.Xml.XmlNode
      description: "<xref href=&quot;System.Xml.XmlNode&quot;> </xref>物件來加密。"
    return:
      type: System.Xml.XmlNode
      description: "<xref href=&quot;System.Xml.XmlNode&quot;> </xref>物件，其中包含已加密的資料。"
  overload: System.Configuration.ProtectedConfigurationProvider.Encrypt*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.Provider.ProviderBase
  isExternal: false
  name: System.Configuration.Provider.ProviderBase
- uid: System.Configuration.ProtectedConfigurationProvider.#ctor
  parent: System.Configuration.ProtectedConfigurationProvider
  isExternal: false
  name: ProtectedConfigurationProvider()
  nameWithType: ProtectedConfigurationProvider.ProtectedConfigurationProvider()
  fullName: System.Configuration.ProtectedConfigurationProvider.ProtectedConfigurationProvider()
- uid: System.Configuration.ProtectedConfigurationProvider.Decrypt(System.Xml.XmlNode)
  parent: System.Configuration.ProtectedConfigurationProvider
  isExternal: false
  name: Decrypt(XmlNode)
  nameWithType: ProtectedConfigurationProvider.Decrypt(XmlNode)
  fullName: System.Configuration.ProtectedConfigurationProvider.Decrypt(XmlNode)
- uid: System.Xml.XmlNode
  parent: System.Xml
  isExternal: false
  name: XmlNode
  nameWithType: XmlNode
  fullName: System.Xml.XmlNode
- uid: System.Configuration.ProtectedConfigurationProvider.Encrypt(System.Xml.XmlNode)
  parent: System.Configuration.ProtectedConfigurationProvider
  isExternal: false
  name: Encrypt(XmlNode)
  nameWithType: ProtectedConfigurationProvider.Encrypt(XmlNode)
  fullName: System.Configuration.ProtectedConfigurationProvider.Encrypt(XmlNode)
- uid: System.Configuration.ProtectedConfigurationProvider.#ctor*
  parent: System.Configuration.ProtectedConfigurationProvider
  isExternal: false
  name: ProtectedConfigurationProvider
  nameWithType: ProtectedConfigurationProvider.ProtectedConfigurationProvider
- uid: System.Configuration.ProtectedConfigurationProvider.Decrypt*
  parent: System.Configuration.ProtectedConfigurationProvider
  isExternal: false
  name: Decrypt
  nameWithType: ProtectedConfigurationProvider.Decrypt
- uid: System.Configuration.ProtectedConfigurationProvider.Encrypt*
  parent: System.Configuration.ProtectedConfigurationProvider
  isExternal: false
  name: Encrypt
  nameWithType: ProtectedConfigurationProvider.Encrypt
