### YamlMime:ManagedReference
items:
- uid: System.Windows.Data.CollectionView
  id: CollectionView
  children:
  - System.Windows.Data.CollectionView.#ctor(System.Collections.IEnumerable)
  - System.Windows.Data.CollectionView.AllowsCrossThreadChanges
  - System.Windows.Data.CollectionView.CanFilter
  - System.Windows.Data.CollectionView.CanGroup
  - System.Windows.Data.CollectionView.CanSort
  - System.Windows.Data.CollectionView.ClearChangeLog
  - System.Windows.Data.CollectionView.ClearPendingChanges
  - System.Windows.Data.CollectionView.CollectionChanged
  - System.Windows.Data.CollectionView.Comparer
  - System.Windows.Data.CollectionView.Contains(System.Object)
  - System.Windows.Data.CollectionView.Count
  - System.Windows.Data.CollectionView.Culture
  - System.Windows.Data.CollectionView.CurrentChanged
  - System.Windows.Data.CollectionView.CurrentChanging
  - System.Windows.Data.CollectionView.CurrentItem
  - System.Windows.Data.CollectionView.CurrentPosition
  - System.Windows.Data.CollectionView.DeferRefresh
  - System.Windows.Data.CollectionView.DetachFromSourceCollection
  - System.Windows.Data.CollectionView.Filter
  - System.Windows.Data.CollectionView.GetEnumerator
  - System.Windows.Data.CollectionView.GetItemAt(System.Int32)
  - System.Windows.Data.CollectionView.GroupDescriptions
  - System.Windows.Data.CollectionView.Groups
  - System.Windows.Data.CollectionView.IndexOf(System.Object)
  - System.Windows.Data.CollectionView.IsCurrentAfterLast
  - System.Windows.Data.CollectionView.IsCurrentBeforeFirst
  - System.Windows.Data.CollectionView.IsCurrentInSync
  - System.Windows.Data.CollectionView.IsDynamic
  - System.Windows.Data.CollectionView.IsEmpty
  - System.Windows.Data.CollectionView.IsInUse
  - System.Windows.Data.CollectionView.IsRefreshDeferred
  - System.Windows.Data.CollectionView.MoveCurrentTo(System.Object)
  - System.Windows.Data.CollectionView.MoveCurrentToFirst
  - System.Windows.Data.CollectionView.MoveCurrentToLast
  - System.Windows.Data.CollectionView.MoveCurrentToNext
  - System.Windows.Data.CollectionView.MoveCurrentToPosition(System.Int32)
  - System.Windows.Data.CollectionView.MoveCurrentToPrevious
  - System.Windows.Data.CollectionView.NeedsRefresh
  - System.Windows.Data.CollectionView.NewItemPlaceholder
  - System.Windows.Data.CollectionView.OKToChangeCurrent
  - System.Windows.Data.CollectionView.OnAllowsCrossThreadChangesChanged
  - System.Windows.Data.CollectionView.OnBeginChangeLogging(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  - System.Windows.Data.CollectionView.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  - System.Windows.Data.CollectionView.OnCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  - System.Windows.Data.CollectionView.OnCurrentChanged
  - System.Windows.Data.CollectionView.OnCurrentChanging
  - System.Windows.Data.CollectionView.OnCurrentChanging(System.ComponentModel.CurrentChangingEventArgs)
  - System.Windows.Data.CollectionView.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)
  - System.Windows.Data.CollectionView.PassesFilter(System.Object)
  - System.Windows.Data.CollectionView.ProcessCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  - System.Windows.Data.CollectionView.ProcessPendingChanges
  - System.Windows.Data.CollectionView.PropertyChanged
  - System.Windows.Data.CollectionView.Refresh
  - System.Windows.Data.CollectionView.RefreshOrDefer
  - System.Windows.Data.CollectionView.RefreshOverride
  - System.Windows.Data.CollectionView.SetCurrent(System.Object,System.Int32)
  - System.Windows.Data.CollectionView.SetCurrent(System.Object,System.Int32,System.Int32)
  - System.Windows.Data.CollectionView.SortDescriptions
  - System.Windows.Data.CollectionView.SourceCollection
  - System.Windows.Data.CollectionView.System#Collections#IEnumerable#GetEnumerator
  - System.Windows.Data.CollectionView.UpdatedOutsideDispatcher
  langs:
  - csharp
  name: CollectionView
  nameWithType: CollectionView
  fullName: System.Windows.Data.CollectionView
  type: Class
  summary: "代表對分組、 排序、 篩選，以及巡覽資料集合的檢視。"
  remarks: "您不應該在程式碼中建立這個類別的物件。 若要建立集合檢視的集合，其中只會實作<xref:System.Collections.IEnumerable>，建立<xref:System.Windows.Data.CollectionViewSource>物件，並將您的集合，以便<xref:System.Windows.Data.CollectionViewSource.Source%2A>屬性，並從檢視集合的 get<xref:System.Windows.Data.CollectionViewSource.View%2A>屬性。</xref:System.Windows.Data.CollectionViewSource.View%2A> </xref:System.Windows.Data.CollectionViewSource.Source%2A> </xref:System.Windows.Data.CollectionViewSource> </xref:System.Collections.IEnumerable>       您可以視為集合檢視的繫結來源集合，可讓您巡覽及顯示根據排序、 篩選和群組的查詢，完全不需要管理基礎的來源集合本身的集合之上的層級。 如果來源集合實作<xref:System.Collections.Specialized.INotifyCollectionChanged>介面，引發變更<xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged>事件傳播至檢視。</xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged> </xref:System.Collections.Specialized.INotifyCollectionChanged>       檢視不會變更基礎的來源集合，因為來源集合可以有多個與其相關聯的檢視。 透過使用檢視，您可以在不同的方式顯示相同的資料。 例如，您可以使用兩個集合的檢視`Task`来顯示工作物件先後依照優先權在一個組件的頁面和依頁面的另一個組件上的區域分組。       在[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]應用程式，所有集合都具有檢視相關聯的預設集合。 而不需直接使用集合，繫結引擎一律會透過相關聯的檢視存取集合。 若要取得的預設檢視，請使用<xref:System.Windows.Data.CollectionViewSource.GetDefaultView%2A?displayProperty=fullName>方法。</xref:System.Windows.Data.CollectionViewSource.GetDefaultView%2A?displayProperty=fullName> 根據 CollectionView 的內部類別是可實作只有<xref:System.Collections.IEnumerable>.</xref:System.Collections.IEnumerable>集合的預設檢視 <xref:System.Windows.Data.ListCollectionView>是可實作<xref:System.Collections.IList>.</xref:System.Collections.IList>集合的預設檢視</xref:System.Windows.Data.ListCollectionView> <xref:System.Windows.Data.BindingListCollectionView>會實作<xref:System.ComponentModel.IBindingListView>或<xref:System.ComponentModel.IBindingList>.</xref:System.ComponentModel.IBindingList></xref:System.ComponentModel.IBindingListView>集合的預設檢視</xref:System.Windows.Data.BindingListCollectionView>       或者，您可以建立您的集合中的檢視[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]使用<xref:System.Windows.Data.CollectionViewSource>類別，並將您的控制項繫結到該檢視。</xref:System.Windows.Data.CollectionViewSource> <xref:System.Windows.Data.CollectionViewSource>類別是[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]CollectionView 類別表示法</xref:System.Windows.Data.CollectionViewSource> 如需範例，請參閱[如何︰ 排序與群組資料使用 XAML 中的檢視](~/add/includes/ajax-current-ext-md.md)。       如需詳細資訊，請參閱 「 繫結集合 」[資料繫結概觀](~/add/includes/ajax-current-ext-md.md)。       若要設定在檢視[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]，使用<xref:System.Windows.Data.CollectionViewSource>類別。</xref:System.Windows.Data.CollectionViewSource> <xref:System.Windows.Data.CollectionViewSource>是[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]CollectionView 類別中，表示法會公開最常使用的 CollectionView 類別成員。</xref:System.Windows.Data.CollectionViewSource>      <a name=&quot;xamlTextUsage_CollectionView&quot;></a># # XAML 文字使用方式，請參閱 < 備註 >"
  syntax:
    content: 'public class CollectionView : System.Windows.Threading.DispatcherObject, System.Collections.IEnumerable, System.Collections.Specialized.INotifyCollectionChanged, System.ComponentModel.ICollectionView, System.ComponentModel.INotifyPropertyChanged'
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  implements:
  - System.Collections.IEnumerable
  - System.Collections.Specialized.INotifyCollectionChanged
  - System.ComponentModel.ICollectionView
  - System.ComponentModel.INotifyPropertyChanged
  inheritedMembers:
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.#ctor(System.Collections.IEnumerable)
  id: '#ctor(System.Collections.IEnumerable)'
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: CollectionView(IEnumerable)
  nameWithType: CollectionView.CollectionView(IEnumerable)
  fullName: System.Windows.Data.CollectionView.CollectionView(IEnumerable)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "初始化的新執行個體<xref href=&quot;System.Windows.Data.CollectionView&quot;></xref>類別，表示指定之集合的檢視。"
  remarks: "執行個體<xref:System.Windows.Data.CollectionView>繫結至[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]執行緒的這個建構函式的呼叫端的發送器。</xref:System.Windows.Data.CollectionView>"
  syntax:
    content: public CollectionView (System.Collections.IEnumerable collection);
    parameters:
    - id: collection
      type: System.Collections.IEnumerable
      description: "基礎集合。"
  overload: System.Windows.Data.CollectionView.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.AllowsCrossThreadChanges
  id: AllowsCrossThreadChanges
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: AllowsCrossThreadChanges
  nameWithType: CollectionView.AllowsCrossThreadChanges
  fullName: System.Windows.Data.CollectionView.AllowsCrossThreadChanges
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "取得值，指出是否以外的執行緒，建立<xref href=&quot;System.Windows.Data.CollectionView&quot;></xref>可以變更<xref:System.Windows.Data.CollectionView.SourceCollection*>.</xref:System.Windows.Data.CollectionView.SourceCollection*>"
  syntax:
    content: protected bool AllowsCrossThreadChanges { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果是建立以外的執行緒<xref href=&quot;System.Windows.Data.CollectionView&quot;></xref>可以變更<xref:System.Windows.Data.CollectionView.SourceCollection*>，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Windows.Data.CollectionView.SourceCollection*>"
  overload: System.Windows.Data.CollectionView.AllowsCrossThreadChanges*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.CanFilter
  id: CanFilter
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: CanFilter
  nameWithType: CollectionView.CanFilter
  fullName: System.Windows.Data.CollectionView.CanFilter
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "取得值，指出檢視是否支援篩選。"
  remarks: "如果這個屬性會傳回`false`，設定<xref:System.Windows.Data.CollectionView.Filter%2A>屬性會擲回的例外狀況。</xref:System.Windows.Data.CollectionView.Filter%2A>"
  syntax:
    content: public virtual bool CanFilter { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果檢視支援篩選。，否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Data.CollectionView.CanFilter*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.CanGroup
  id: CanGroup
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: CanGroup
  nameWithType: CollectionView.CanGroup
  fullName: System.Windows.Data.CollectionView.CanGroup
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "取得值，指出檢視是否支援群組。"
  remarks: "使用這個屬性來測試是否檢視支援排序，然後再加入<xref:System.Windows.Data.CollectionView.GroupDescriptions%2A>.</xref:System.Windows.Data.CollectionView.GroupDescriptions%2A> 在衍生的類別覆寫這個屬性，指出是否支援群組。"
  syntax:
    content: public virtual bool CanGroup { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>在所有情況下。"
  overload: System.Windows.Data.CollectionView.CanGroup*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.CanSort
  id: CanSort
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: CanSort
  nameWithType: CollectionView.CanSort
  fullName: System.Windows.Data.CollectionView.CanSort
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "取得值，指出檢視是否支援排序。"
  remarks: "使用這個屬性來測試是否檢視支援排序，然後再加入<xref:System.Windows.Data.CollectionView.SortDescriptions%2A>.</xref:System.Windows.Data.CollectionView.SortDescriptions%2A> 在衍生的類別覆寫這個屬性，指出是否支援排序。"
  syntax:
    content: public virtual bool CanSort { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>在所有情況下。"
  overload: System.Windows.Data.CollectionView.CanSort*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.ClearChangeLog
  id: ClearChangeLog
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: ClearChangeLog()
  nameWithType: CollectionView.ClearChangeLog()
  fullName: System.Windows.Data.CollectionView.ClearChangeLog()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "清除變更記錄檔中任何暫止的變更。"
  syntax:
    content: protected void ClearChangeLog ();
    parameters: []
  overload: System.Windows.Data.CollectionView.ClearChangeLog*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.ClearPendingChanges
  id: ClearPendingChanges
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: ClearPendingChanges()
  nameWithType: CollectionView.ClearPendingChanges()
  fullName: System.Windows.Data.CollectionView.ClearPendingChanges()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "清除處理對集合進行變更。"
  syntax:
    content: protected void ClearPendingChanges ();
    parameters: []
  overload: System.Windows.Data.CollectionView.ClearPendingChanges*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.CollectionChanged
  id: CollectionChanged
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: CollectionChanged
  nameWithType: CollectionView.CollectionChanged
  fullName: System.Windows.Data.CollectionView.CollectionChanged
  type: Event
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "檢視已變更時發生。"
  syntax:
    content: protected virtual event System.Collections.Specialized.NotifyCollectionChangedEventHandler CollectionChanged;
    return:
      type: System.Collections.Specialized.NotifyCollectionChangedEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.Comparer
  id: Comparer
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: Comparer
  nameWithType: CollectionView.Comparer
  fullName: System.Windows.Data.CollectionView.Comparer
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "傳回的物件可讓您比較在檢視中的項目。"
  syntax:
    content: public virtual System.Collections.IComparer Comparer { get; }
    return:
      type: System.Collections.IComparer
      description: "<xref:System.Collections.IComparer>物件，您可以使用比較檢視中的項目。</xref:System.Collections.IComparer>"
  overload: System.Windows.Data.CollectionView.Comparer*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.Contains(System.Object)
  id: Contains(System.Object)
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: Contains(Object)
  nameWithType: CollectionView.Contains(Object)
  fullName: System.Windows.Data.CollectionView.Contains(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "傳回值，指出指定的項目是否屬於檢視。"
  remarks: "這個方法不會假設項目是否屬於基礎集合。 如果呼叫端知道項目屬於基礎的集合，則更有效率的方式呼叫<xref:System.Windows.Data.CollectionView.PassesFilter%2A>方法。</xref:System.Windows.Data.CollectionView.PassesFilter%2A>"
  syntax:
    content: public virtual bool Contains (object item);
    parameters:
    - id: item
      type: System.Object
      description: "要檢查的物件。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果項目屬於檢視;否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Data.CollectionView.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.Count
  id: Count
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: Count
  nameWithType: CollectionView.Count
  fullName: System.Windows.Data.CollectionView.Count
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "取得檢視中的記錄數目。"
  remarks: "如果設定篩選條件，這個屬性值只會包含通過篩選條件的項目。 如果基礎集合屬於型別<xref:System.Collections.IEnumerable>，這是一種 o （n） 作業。</xref:System.Collections.IEnumerable> 這個值會快取集合變更為止。"
  syntax:
    content: public virtual int Count { get; }
    return:
      type: System.Int32
      description: "檢視或未知的記錄數目是否為-1 中的記錄數目。"
  overload: System.Windows.Data.CollectionView.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.Culture
  id: Culture
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: Culture
  nameWithType: CollectionView.Culture
  fullName: System.Windows.Data.CollectionView.Culture
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "取得或設定要在排序期間使用的文化特性資訊。"
  syntax:
    content: public virtual System.Globalization.CultureInfo Culture { get; set; }
    return:
      type: System.Globalization.CultureInfo
      description: "要在排序期間使用的文化特性資訊。"
  overload: System.Windows.Data.CollectionView.Culture*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.CurrentChanged
  id: CurrentChanged
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: CurrentChanged
  nameWithType: CollectionView.CurrentChanged
  fullName: System.Windows.Data.CollectionView.CurrentChanged
  type: Event
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "之後，就會發生<xref:System.Windows.Data.CollectionView.CurrentItem*>已變更。</xref:System.Windows.Data.CollectionView.CurrentItem*>"
  syntax:
    content: public virtual event EventHandler CurrentChanged;
    return:
      type: System.EventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.CurrentChanging
  id: CurrentChanging
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: CurrentChanging
  nameWithType: CollectionView.CurrentChanging
  fullName: System.Windows.Data.CollectionView.CurrentChanging
  type: Event
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "發生時<xref:System.Windows.Data.CollectionView.CurrentItem*>正在變更。</xref:System.Windows.Data.CollectionView.CurrentItem*>"
  syntax:
    content: public virtual event System.ComponentModel.CurrentChangingEventHandler CurrentChanging;
    return:
      type: System.ComponentModel.CurrentChangingEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.CurrentItem
  id: CurrentItem
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: CurrentItem
  nameWithType: CollectionView.CurrentItem
  fullName: System.Windows.Data.CollectionView.CurrentItem
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "取得目前的項目檢視中。"
  remarks: "集合檢視支援目前的記錄指標的概念。 當您瀏覽集合檢視中的物件，您要移動的記錄指標，可讓您擷取存在於集合中的該特定位置的物件。       請注意，移動目前的記錄指標的任何排序或篩選的一些互動會套用至集合。 排序會保留目前的記錄指標上選取，最後一筆記錄，但集合檢視已經重組。 （選取的記錄可能已在前面，清單開頭，但現在選取的記錄可能會在中間的某處）。如果該選取項目之後仍然在檢視的篩選，篩選會保留選取的記錄。 否則，目前的記錄指標會設定第一個篩選的集合檢視的記錄。       目前的項目集合中的繫結至自動如果繫結的目標是單一值。 如果目標是<xref:System.Windows.Controls.ItemsControl>，與選取的項目同步處理目前的項目。</xref:System.Windows.Controls.ItemsControl> 例如，如果清單方塊中會繫結至集合，CurrentItem 會同步處理目前選取的項目。"
  syntax:
    content: public virtual object CurrentItem { get; }
    return:
      type: System.Object
      description: "檢視目前項目。 根據預設，集合的第一個項目會啟動目前的項目。"
  overload: System.Windows.Data.CollectionView.CurrentItem*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.CurrentPosition
  id: CurrentPosition
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: CurrentPosition
  nameWithType: CollectionView.CurrentPosition
  fullName: System.Windows.Data.CollectionView.CurrentPosition
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "取得的序數位置<xref:System.Windows.Data.CollectionView.CurrentItem*>（選擇性地排序和篩選） 檢視內。</xref:System.Windows.Data.CollectionView.CurrentItem*>"
  syntax:
    content: public virtual int CurrentPosition { get; }
    return:
      type: System.Int32
      description: "序數位置<xref:System.Windows.Data.CollectionView.CurrentItem*>（選擇性地排序和篩選） 檢視內。</xref:System.Windows.Data.CollectionView.CurrentItem*>"
  overload: System.Windows.Data.CollectionView.CurrentPosition*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.DeferRefresh
  id: DeferRefresh
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: DeferRefresh()
  nameWithType: CollectionView.DeferRefresh()
  fullName: System.Windows.Data.CollectionView.DeferRefresh()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "進入延後循環，您可以用來合併變更到檢視，並且延遲自動重新整理。"
  remarks: "典型的使用方式是建立`using`採用這種方法的範圍，然後將多個檢視變更呼叫放在範圍內。 延後循環結束之前，這會延遲自動重新整理。"
  syntax:
    content: public virtual IDisposable DeferRefresh ();
    parameters: []
    return:
      type: System.IDisposable
      description: "<xref:System.IDisposable>可用來處置呼叫物件的物件。</xref:System.IDisposable>"
  overload: System.Windows.Data.CollectionView.DeferRefresh*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.DetachFromSourceCollection
  id: DetachFromSourceCollection
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: DetachFromSourceCollection()
  nameWithType: CollectionView.DetachFromSourceCollection()
  fullName: System.Windows.Data.CollectionView.DetachFromSourceCollection()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "移除從基礎集合參考<xref href=&quot;System.Windows.Data.CollectionView&quot;> </xref>。"
  remarks: "使用這個方法來取消訂閱事件於基礎集合，並允許<xref:System.Windows.Data.CollectionView>回收。</xref:System.Windows.Data.CollectionView>"
  syntax:
    content: public virtual void DetachFromSourceCollection ();
    parameters: []
  overload: System.Windows.Data.CollectionView.DetachFromSourceCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.Filter
  id: Filter
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: Filter
  nameWithType: CollectionView.Filter
  fullName: System.Windows.Data.CollectionView.Filter
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "取得或設定用來判斷項目是否適合包含在檢視中的方法。"
  remarks: "更簡單的實作不支援篩選，並擲回<xref:System.NotSupportedException>.</xref:System.NotSupportedException> 使用<xref:System.Windows.Data.CollectionView.CanFilter%2A>以測試是否支援篩選之前指派非 null 值與這個屬性的屬性。</xref:System.Windows.Data.CollectionView.CanFilter%2A>"
  syntax:
    content: public virtual Predicate<object> Filter { get; set; }
    return:
      type: System.Predicate{System.Object}
      description: "委派，表示用來判斷項目是否適合包含在檢視中的方法。"
  overload: System.Windows.Data.CollectionView.Filter*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "目前的實作不支援篩選。"
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.GetEnumerator
  id: GetEnumerator
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: CollectionView.GetEnumerator()
  fullName: System.Windows.Data.CollectionView.GetEnumerator()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "傳回物件，可用來列舉在檢視中的項目。"
  syntax:
    content: protected virtual System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "<xref:System.Collections.IEnumerator>物件可用來列舉在檢視中的項目。</xref:System.Collections.IEnumerator>"
  overload: System.Windows.Data.CollectionView.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.GetItemAt(System.Int32)
  id: GetItemAt(System.Int32)
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: GetItemAt(Int32)
  nameWithType: CollectionView.GetItemAt(Int32)
  fullName: System.Windows.Data.CollectionView.GetItemAt(Int32)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "擷取位於指定以零為起始的索引檢視中的項目。"
  remarks: "這個方法會評估任何索引<xref:System.Windows.Data.CollectionView.SortDescriptions%2A>或<xref:System.Windows.Data.CollectionView.Filter%2A>檢視上所設定的屬性值。</xref:System.Windows.Data.CollectionView.Filter%2A> </xref:System.Windows.Data.CollectionView.SortDescriptions%2A>       如果基礎集合屬於型別<xref:System.Collections.IEnumerable>，這是一種 o （n） 作業。</xref:System.Collections.IEnumerable>"
  syntax:
    content: public virtual object GetItemAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "要擷取之項目的以零為起始的索引。"
    return:
      type: System.Object
      description: "在檢視中指定以零為起始的索引處的項目。"
  overload: System.Windows.Data.CollectionView.GetItemAt*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>小於 0。"
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.GroupDescriptions
  id: GroupDescriptions
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: GroupDescriptions
  nameWithType: CollectionView.GroupDescriptions
  fullName: System.Windows.Data.CollectionView.GroupDescriptions
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "取得集合的<xref href=&quot;System.ComponentModel.GroupDescription&quot;></xref>描述如何在檢視中分組的項目集合中的物件。"
  remarks: "這個屬性的值一律是`null`因為<xref:System.Windows.Data.CollectionView>類別不支援透過其基礎集合的群組。</xref:System.Windows.Data.CollectionView> 在衍生的類別<xref:System.Windows.Data.ListCollectionView>和<xref:System.Windows.Data.BindingListCollectionView>並支援群組。</xref:System.Windows.Data.BindingListCollectionView> </xref:System.Windows.Data.ListCollectionView>"
  syntax:
    content: public virtual System.Collections.ObjectModel.ObservableCollection<System.ComponentModel.GroupDescription> GroupDescriptions { get; }
    return:
      type: System.Collections.ObjectModel.ObservableCollection{System.ComponentModel.GroupDescription}
      description: "<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>在所有情況下。"
  overload: System.Windows.Data.CollectionView.GroupDescriptions*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.Groups
  id: Groups
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: Groups
  nameWithType: CollectionView.Groups
  fullName: System.Windows.Data.CollectionView.Groups
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "取得集合的最上層群組建構根據<xref:System.Windows.Data.CollectionView.GroupDescriptions*>屬性。</xref:System.Windows.Data.CollectionView.GroupDescriptions*>"
  remarks: "這個屬性的值一律是`null`因為<xref:System.Windows.Data.CollectionView>類別不支援透過其基礎集合的群組。</xref:System.Windows.Data.CollectionView> 在衍生的類別<xref:System.Windows.Data.ListCollectionView>和<xref:System.Windows.Data.BindingListCollectionView>並支援群組。</xref:System.Windows.Data.BindingListCollectionView> </xref:System.Windows.Data.ListCollectionView>"
  syntax:
    content: public virtual System.Collections.ObjectModel.ReadOnlyObservableCollection<object> Groups { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyObservableCollection{System.Object}
      description: "<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>在所有情況下。"
  overload: System.Windows.Data.CollectionView.Groups*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.IndexOf(System.Object)
  id: IndexOf(System.Object)
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: IndexOf(Object)
  nameWithType: CollectionView.IndexOf(Object)
  fullName: System.Windows.Data.CollectionView.IndexOf(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "傳回指定的項目所在的索引。"
  remarks: "如果此方法會傳回-1 以外的索引，它都必須為 true，則該檢視的 [索引&1;] < item=&quot;&quot;> <= view[index],=&quot;&quot; where=&quot;&quot; the=&quot;&quot; comparisons=&quot;&quot; are=&quot;&quot; done=&quot;&quot; using=&quot;&quot; the=&quot;&quot;></=> <xref:System.Collections.IComparer.Compare%2A?displayProperty=fullName>方法的檢視中，如果有的話。</xref:System.Collections.IComparer.Compare%2A?displayProperty=fullName>       此特定行為的方法由某些<xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged>事件處理常式，以加速插入和刪除的反應。</xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged> 如果衍生的類別不會覆寫這個方法，接聽程式會執行二進位搜尋，使用<xref:System.Collections.IComparer.Compare%2A?displayProperty=fullName>方法。</xref:System.Collections.IComparer.Compare%2A?displayProperty=fullName>"
  syntax:
    content: public virtual int IndexOf (object item);
    parameters:
    - id: item
      type: System.Object
      description: "要尋找的項目。"
    return:
      type: System.Int32
      description: "索引指定的項目所在位置，則為-1，如果是未知的項目。"
  overload: System.Windows.Data.CollectionView.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.IsCurrentAfterLast
  id: IsCurrentAfterLast
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: IsCurrentAfterLast
  nameWithType: CollectionView.IsCurrentAfterLast
  fullName: System.Windows.Data.CollectionView.IsCurrentAfterLast
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "取得值，指出是否<xref:System.Windows.Data.CollectionView.CurrentItem*>檢視的是，超過集合的結尾。</xref:System.Windows.Data.CollectionView.CurrentItem*>"
  remarks: "集合檢視支援目前的記錄指標的概念。 當您瀏覽集合檢視中的物件，您要移動的記錄指標，可讓您擷取存在於集合中的該特定位置的物件。"
  syntax:
    content: public virtual bool IsCurrentAfterLast { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref:System.Windows.Data.CollectionView.CurrentItem*>檢視的是集合的結尾之外否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Windows.Data.CollectionView.CurrentItem*>"
  overload: System.Windows.Data.CollectionView.IsCurrentAfterLast*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.IsCurrentBeforeFirst
  id: IsCurrentBeforeFirst
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: IsCurrentBeforeFirst
  nameWithType: CollectionView.IsCurrentBeforeFirst
  fullName: System.Windows.Data.CollectionView.IsCurrentBeforeFirst
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "取得值，指出是否<xref:System.Windows.Data.CollectionView.CurrentItem*>檢視是否在集合開頭之前。</xref:System.Windows.Data.CollectionView.CurrentItem*>"
  remarks: "集合檢視支援目前的記錄指標的概念。 當您瀏覽集合檢視中的物件，您要移動的記錄指標，可讓您擷取存在於集合中的該特定位置的物件。"
  syntax:
    content: public virtual bool IsCurrentBeforeFirst { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref:System.Windows.Data.CollectionView.CurrentItem*>檢視的是集合開頭之前否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Windows.Data.CollectionView.CurrentItem*>"
  overload: System.Windows.Data.CollectionView.IsCurrentBeforeFirst*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.IsCurrentInSync
  id: IsCurrentInSync
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: IsCurrentInSync
  nameWithType: CollectionView.IsCurrentInSync
  fullName: System.Windows.Data.CollectionView.IsCurrentInSync
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "取得值，指出是否<> *> 位於<> *>。"
  syntax:
    content: protected bool IsCurrentInSync { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<> *> 中的檢視，而在<> *>，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Data.CollectionView.IsCurrentInSync*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.IsDynamic
  id: IsDynamic
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: IsDynamic
  nameWithType: CollectionView.IsDynamic
  fullName: System.Windows.Data.CollectionView.IsDynamic
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "取得值，指出基礎的集合是否提供變更通知。"
  syntax:
    content: protected bool IsDynamic { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果基礎集合提供變更通知。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Data.CollectionView.IsDynamic*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.IsEmpty
  id: IsEmpty
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: IsEmpty
  nameWithType: CollectionView.IsEmpty
  fullName: System.Windows.Data.CollectionView.IsEmpty
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "取得值，指出是否產生 （已篩選） 的檢視為空白。"
  syntax:
    content: public virtual bool IsEmpty { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果產生的檢視是空的。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Data.CollectionView.IsEmpty*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.IsInUse
  id: IsInUse
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: IsInUse
  nameWithType: CollectionView.IsInUse
  fullName: System.Windows.Data.CollectionView.IsInUse
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "取得值，指出是否要將任何物件訂閱的事件<xref href=&quot;System.Windows.Data.CollectionView&quot;> </xref>。"
  syntax:
    content: public virtual bool IsInUse { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果任何物件訂閱的事件<xref href=&quot;System.Windows.Data.CollectionView&quot;> </xref>，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Data.CollectionView.IsInUse*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.IsRefreshDeferred
  id: IsRefreshDeferred
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: IsRefreshDeferred
  nameWithType: CollectionView.IsRefreshDeferred
  fullName: System.Windows.Data.CollectionView.IsRefreshDeferred
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "取得值，指出是否有未處理<xref:System.Windows.Data.CollectionView.DeferRefresh*>使用中。</xref:System.Windows.Data.CollectionView.DeferRefresh*>"
  syntax:
    content: protected bool IsRefreshDeferred { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果尚未處理<xref:System.Windows.Data.CollectionView.DeferRefresh*>使用; 否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Windows.Data.CollectionView.DeferRefresh*>"
  overload: System.Windows.Data.CollectionView.IsRefreshDeferred*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.MoveCurrentTo(System.Object)
  id: MoveCurrentTo(System.Object)
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: MoveCurrentTo(Object)
  nameWithType: CollectionView.MoveCurrentTo(Object)
  fullName: System.Windows.Data.CollectionView.MoveCurrentTo(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "將指定的項目設定<xref:System.Windows.Data.CollectionView.CurrentItem*>檢視中。</xref:System.Windows.Data.CollectionView.CurrentItem*>"
  remarks: "如果沒有找到指定的項目，則方法會傳回`false`和<xref:System.Windows.Data.CollectionView.CurrentItem%2A>位在檢視集合開頭之前。</xref:System.Windows.Data.CollectionView.CurrentItem%2A>       集合檢視支援目前的記錄指標的概念。 當您瀏覽集合檢視中的物件，您要移動的記錄指標，可讓您擷取存在於集合中的該特定位置的物件。 如需詳細資訊，請參閱 「 繫結集合 」[資料繫結概觀](~/add/includes/ajax-current-ext-md.md)。       如需目前的項目，檢視的詳細資訊，請參閱<xref:System.Windows.Data.CollectionView.CurrentItem%2A>.</xref:System.Windows.Data.CollectionView.CurrentItem%2A>"
  example:
  - "The following example demonstrates the use of this method.  \n  \n [!code-cs[Colors#NewColor](~/add/codesnippet/csharp/Colors/Colors.xaml.cs#newcolor)]\n [!code-vb[Colors#NewColor](~/add/codesnippet/visualbasic/colors/colors.xaml.vb#newcolor)]"
  syntax:
    content: public virtual bool MoveCurrentTo (object item);
    parameters:
    - id: item
      type: System.Object
      description: "將設定為<xref:System.Windows.Data.CollectionView.CurrentItem*>.</xref:System.Windows.Data.CollectionView.CurrentItem*>項目"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果產生<xref:System.Windows.Data.CollectionView.CurrentItem*>位於檢視; 否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Windows.Data.CollectionView.CurrentItem*>"
  overload: System.Windows.Data.CollectionView.MoveCurrentTo*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.MoveCurrentToFirst
  id: MoveCurrentToFirst
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: MoveCurrentToFirst()
  nameWithType: CollectionView.MoveCurrentToFirst()
  fullName: System.Windows.Data.CollectionView.MoveCurrentToFirst()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "設定為<xref:System.Windows.Data.CollectionView.CurrentItem*>.</xref:System.Windows.Data.CollectionView.CurrentItem*>檢視中的第一個項目"
  remarks: "集合檢視支援目前的記錄指標的概念。 當您瀏覽集合檢視中的物件，您要移動的記錄指標，可讓您擷取存在於集合中的該特定位置的物件。 如需詳細資訊，請參閱 「 繫結集合 」[資料繫結概觀](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public virtual bool MoveCurrentToFirst ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果產生<xref:System.Windows.Data.CollectionView.CurrentItem*>是檢視; 內的項目否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Windows.Data.CollectionView.CurrentItem*>"
  overload: System.Windows.Data.CollectionView.MoveCurrentToFirst*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.MoveCurrentToLast
  id: MoveCurrentToLast
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: MoveCurrentToLast()
  nameWithType: CollectionView.MoveCurrentToLast()
  fullName: System.Windows.Data.CollectionView.MoveCurrentToLast()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "設定為<xref:System.Windows.Data.CollectionView.CurrentItem*>.</xref:System.Windows.Data.CollectionView.CurrentItem*>檢視中的最後一個項目"
  remarks: "集合檢視支援目前的記錄指標的概念。 當您瀏覽集合檢視中的物件，您要移動的記錄指標，可讓您擷取存在於集合中的該特定位置的物件。 如需詳細資訊，請參閱 「 繫結集合 」[資料繫結概觀](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public virtual bool MoveCurrentToLast ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果產生<xref:System.Windows.Data.CollectionView.CurrentItem*>是檢視; 內的項目否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Windows.Data.CollectionView.CurrentItem*>"
  overload: System.Windows.Data.CollectionView.MoveCurrentToLast*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.MoveCurrentToNext
  id: MoveCurrentToNext
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: MoveCurrentToNext()
  nameWithType: CollectionView.MoveCurrentToNext()
  fullName: System.Windows.Data.CollectionView.MoveCurrentToNext()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "設定後的項目<> *> 中做為檢視<> *>。"
  remarks: "集合檢視支援目前的記錄指標的概念。 當您瀏覽集合檢視中的物件，您要移動的記錄指標，可讓您擷取存在於集合中的該特定位置的物件。 如需詳細資訊，請參閱 「 繫結集合 」[資料繫結概觀](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public virtual bool MoveCurrentToNext ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果產生<xref:System.Windows.Data.CollectionView.CurrentItem*>是檢視; 內的項目否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Windows.Data.CollectionView.CurrentItem*>"
  overload: System.Windows.Data.CollectionView.MoveCurrentToNext*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.MoveCurrentToPosition(System.Int32)
  id: MoveCurrentToPosition(System.Int32)
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: MoveCurrentToPosition(Int32)
  nameWithType: CollectionView.MoveCurrentToPosition(Int32)
  fullName: System.Windows.Data.CollectionView.MoveCurrentToPosition(Int32)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "將指定的索引處的項目設定<xref:System.Windows.Data.CollectionView.CurrentItem*>檢視中。</xref:System.Windows.Data.CollectionView.CurrentItem*>"
  remarks: "集合檢視支援目前的記錄指標的概念。 當您瀏覽集合檢視中的物件，您要移動的記錄指標，可讓您擷取存在於集合中的該特定位置的物件。 如需詳細資訊，請參閱 「 繫結集合 」[資料繫結概觀](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public virtual bool MoveCurrentToPosition (int position);
    parameters:
    - id: position
      type: System.Int32
      description: "若要設定索引<xref:System.Windows.Data.CollectionView.CurrentItem*>以。</xref:System.Windows.Data.CollectionView.CurrentItem*>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果產生<xref:System.Windows.Data.CollectionView.CurrentItem*>是檢視; 內的項目否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Windows.Data.CollectionView.CurrentItem*>"
  overload: System.Windows.Data.CollectionView.MoveCurrentToPosition*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.MoveCurrentToPrevious
  id: MoveCurrentToPrevious
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: MoveCurrentToPrevious()
  nameWithType: CollectionView.MoveCurrentToPrevious()
  fullName: System.Windows.Data.CollectionView.MoveCurrentToPrevious()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "設定項目之前<> *> 中做為檢視<> *>。"
  remarks: "集合檢視支援目前的記錄指標的概念。 當您瀏覽集合檢視中的物件，您要移動的記錄指標，可讓您擷取存在於集合中的該特定位置的物件。 如需詳細資訊，請參閱 「 繫結集合 」[資料繫結概觀](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public virtual bool MoveCurrentToPrevious ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果產生<xref:System.Windows.Data.CollectionView.CurrentItem*>是檢視; 內的項目否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Windows.Data.CollectionView.CurrentItem*>"
  overload: System.Windows.Data.CollectionView.MoveCurrentToPrevious*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.NeedsRefresh
  id: NeedsRefresh
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: NeedsRefresh
  nameWithType: CollectionView.NeedsRefresh
  fullName: System.Windows.Data.CollectionView.NeedsRefresh
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "取得值，指出是否需要重新整理檢視。"
  remarks: "如果檢視的內部狀態已經變更，需要這個屬性會指出<xref:System.Windows.Data.CollectionView.Refresh%2A>方法呼叫。</xref:System.Windows.Data.CollectionView.Refresh%2A> 典型的案例是如果<xref:System.ComponentModel.SortDescription>或類似已加入至檢視時檢視已延後的重新整理循環中 (請參閱<xref:System.Windows.Data.CollectionView.DeferRefresh%2A>)。</xref:System.Windows.Data.CollectionView.DeferRefresh%2A> </xref:System.ComponentModel.SortDescription> 在此案例中，沒有明確呼叫<xref:System.Windows.Data.CollectionView.Refresh%2A>需要; 只要延後的重新整理週期結束後，檢視重新整理會自動呼叫。</xref:System.Windows.Data.CollectionView.Refresh%2A>"
  syntax:
    content: public virtual bool NeedsRefresh { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果需要重新整理; 檢視，否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Data.CollectionView.NeedsRefresh*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.NewItemPlaceholder
  id: NewItemPlaceholder
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: NewItemPlaceholder
  nameWithType: CollectionView.NewItemPlaceholder
  fullName: System.Windows.Data.CollectionView.NewItemPlaceholder
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "取得所要表示新項目集合中的物件。"
  remarks: "當<xref:System.Windows.Data.CollectionView>實作<xref:System.ComponentModel.IEditableCollectionView>具有<xref:System.ComponentModel.IEditableCollectionView.NewItemPlaceholderPosition%2A>設<xref:System.ComponentModel.NewItemPlaceholderPosition>或<xref:System.ComponentModel.NewItemPlaceholderPosition>，NewItemPlaceholder 加入至集合。</xref:System.ComponentModel.NewItemPlaceholderPosition> </xref:System.ComponentModel.NewItemPlaceholderPosition> </xref:System.ComponentModel.IEditableCollectionView.NewItemPlaceholderPosition%2A> </xref:System.ComponentModel.IEditableCollectionView> </xref:System.Windows.Data.CollectionView>  NewItemPlaceholder 一律會顯示在集合中，它不會參與分組、 排序或篩選。       <xref:System.Windows.Data.CollectionView.CurrentItem%2A>不可 NewItemPlaceholder。</xref:System.Windows.Data.CollectionView.CurrentItem%2A> 方法，例如執行相對的瀏覽<xref:System.Windows.Data.CollectionView.MoveCurrentToNext%2A>，略過 NewItemPlaceholder。</xref:System.Windows.Data.CollectionView.MoveCurrentToNext%2A>  <xref:System.Windows.Data.CollectionView.MoveCurrentToFirst%2A>和<xref:System.Windows.Data.CollectionView.MoveCurrentToLast%2A>如果略過 NewItemPlaceholder<xref:System.ComponentModel.IEditableCollectionView.NewItemPlaceholderPosition%2A>設<xref:System.ComponentModel.NewItemPlaceholderPosition>或<xref:System.ComponentModel.NewItemPlaceholderPosition>分別。</xref:System.ComponentModel.NewItemPlaceholderPosition> </xref:System.ComponentModel.NewItemPlaceholderPosition> </xref:System.ComponentModel.IEditableCollectionView.NewItemPlaceholderPosition%2A> </xref:System.Windows.Data.CollectionView.MoveCurrentToLast%2A></xref:System.Windows.Data.CollectionView.MoveCurrentToFirst%2A> 執行絕對瀏覽，例如<xref:System.Windows.Data.CollectionView.MoveCurrentToPosition%2A>，不執行任何動作如果 NewItemPlaceholder <xref:System.Windows.Data.CollectionView.CurrentItem%2A>.</xref:System.Windows.Data.CollectionView.CurrentItem%2A></xref:System.Windows.Data.CollectionView.MoveCurrentToPosition%2A>方法"
  syntax:
    content: public static object NewItemPlaceholder { get; }
    return:
      type: System.Object
      description: "所要表示新項目集合中的物件。"
  overload: System.Windows.Data.CollectionView.NewItemPlaceholder*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.OKToChangeCurrent
  id: OKToChangeCurrent
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: OKToChangeCurrent()
  nameWithType: CollectionView.OKToChangeCurrent()
  fullName: System.Windows.Data.CollectionView.OKToChangeCurrent()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "傳回值，指出檢視是否可以變更哪些項目是<xref:System.Windows.Data.CollectionView.CurrentItem*>.</xref:System.Windows.Data.CollectionView.CurrentItem*>"
  syntax:
    content: protected bool OKToChangeCurrent ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>如果接聽程式會取消變更;否則， <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Data.CollectionView.OKToChangeCurrent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.OnAllowsCrossThreadChangesChanged
  id: OnAllowsCrossThreadChangesChanged
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: OnAllowsCrossThreadChangesChanged()
  nameWithType: CollectionView.OnAllowsCrossThreadChangesChanged()
  fullName: System.Windows.Data.CollectionView.OnAllowsCrossThreadChangesChanged()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "發生時<xref:System.Windows.Data.CollectionView.AllowsCrossThreadChanges*>屬性變更。</xref:System.Windows.Data.CollectionView.AllowsCrossThreadChanges*>"
  syntax:
    content: protected virtual void OnAllowsCrossThreadChangesChanged ();
    parameters: []
  overload: System.Windows.Data.CollectionView.OnAllowsCrossThreadChangesChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.OnBeginChangeLogging(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  id: OnBeginChangeLogging(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: OnBeginChangeLogging(NotifyCollectionChangedEventArgs)
  nameWithType: CollectionView.OnBeginChangeLogging(NotifyCollectionChangedEventArgs)
  fullName: System.Windows.Data.CollectionView.OnBeginChangeLogging(NotifyCollectionChangedEventArgs)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "呼叫以通知的衍生類別的基底類別&lt;xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged?displayProperty=fullName&gt;已張貼事件至訊息佇列。"
  syntax:
    content: protected virtual void OnBeginChangeLogging (System.Collections.Specialized.NotifyCollectionChangedEventArgs args);
    parameters:
    - id: args
      type: System.Collections.Specialized.NotifyCollectionChangedEventArgs
      description: "<xref:System.Collections.Specialized.NotifyCollectionChangedEventArgs>物件加入至變更記錄檔。</xref:System.Collections.Specialized.NotifyCollectionChangedEventArgs>"
  overload: System.Windows.Data.CollectionView.OnBeginChangeLogging*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>args</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  id: OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: OnCollectionChanged(NotifyCollectionChangedEventArgs)
  nameWithType: CollectionView.OnCollectionChanged(NotifyCollectionChangedEventArgs)
  fullName: System.Windows.Data.CollectionView.OnCollectionChanged(NotifyCollectionChangedEventArgs)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "引發<xref href=&quot;System.Windows.Data.CollectionView.CollectionChanged&quot;></xref>事件。"
  remarks: "採取任何排序、 篩選或群組準則列入考量，然後再呼叫這個方法，引發<xref:System.Windows.Data.CollectionView.CollectionChanged>事件。</xref:System.Windows.Data.CollectionView.CollectionChanged>"
  syntax:
    content: protected virtual void OnCollectionChanged (System.Collections.Specialized.NotifyCollectionChangedEventArgs args);
    parameters:
    - id: args
      type: System.Collections.Specialized.NotifyCollectionChangedEventArgs
      description: "<xref:System.Collections.Specialized.NotifyCollectionChangedEventArgs>傳遞至事件處理常式物件。</xref:System.Collections.Specialized.NotifyCollectionChangedEventArgs>"
  overload: System.Windows.Data.CollectionView.OnCollectionChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.OnCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  id: OnCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: OnCollectionChanged(Object,NotifyCollectionChangedEventArgs)
  nameWithType: CollectionView.OnCollectionChanged(Object,NotifyCollectionChangedEventArgs)
  fullName: System.Windows.Data.CollectionView.OnCollectionChanged(Object,NotifyCollectionChangedEventArgs)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "引發<xref href=&quot;System.Windows.Data.CollectionView.CollectionChanged&quot;></xref>事件。"
  remarks: "這個方法會呼叫<xref:System.Windows.Data.CollectionView.ProcessCollectionChanged%2A>上正確[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]執行緒發送器和永遠不會從不同的執行緒，已更新或將變更公佈至發送器處理正確執行緒上。</xref:System.Windows.Data.CollectionView.ProcessCollectionChanged%2A>"
  syntax:
    content: protected void OnCollectionChanged (object sender, System.Collections.Specialized.NotifyCollectionChangedEventArgs args);
    parameters:
    - id: sender
      type: System.Object
      description: "事件的寄件者。"
    - id: args
      type: System.Collections.Specialized.NotifyCollectionChangedEventArgs
      description: "<xref:System.Collections.Specialized.NotifyCollectionChangedEventArgs>傳遞至事件處理常式物件。</xref:System.Collections.Specialized.NotifyCollectionChangedEventArgs>"
  overload: System.Windows.Data.CollectionView.OnCollectionChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.OnCurrentChanged
  id: OnCurrentChanged
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: OnCurrentChanged()
  nameWithType: CollectionView.OnCurrentChanged()
  fullName: System.Windows.Data.CollectionView.OnCurrentChanged()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "引發<xref href=&quot;System.Windows.Data.CollectionView.CurrentChanged&quot;></xref>事件。"
  syntax:
    content: protected virtual void OnCurrentChanged ();
    parameters: []
  overload: System.Windows.Data.CollectionView.OnCurrentChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.OnCurrentChanging
  id: OnCurrentChanging
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: OnCurrentChanging()
  nameWithType: CollectionView.OnCurrentChanging()
  fullName: System.Windows.Data.CollectionView.OnCurrentChanging()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "引發<xref href=&quot;System.Windows.Data.CollectionView.CurrentChanging&quot;></xref>不是可取消的事件。"
  remarks: "這個方法會設定<xref:System.Windows.Data.CollectionView.CurrentPosition%2A>為 –&1;。</xref:System.Windows.Data.CollectionView.CurrentPosition%2A> 集合的變更所影響<xref:System.Windows.Data.CollectionView.CurrentItem%2A>.</xref:System.Windows.Data.CollectionView.CurrentItem%2A>呼叫這個方法"
  syntax:
    content: protected void OnCurrentChanging ();
    parameters: []
  overload: System.Windows.Data.CollectionView.OnCurrentChanging*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.OnCurrentChanging(System.ComponentModel.CurrentChangingEventArgs)
  id: OnCurrentChanging(System.ComponentModel.CurrentChangingEventArgs)
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: OnCurrentChanging(CurrentChangingEventArgs)
  nameWithType: CollectionView.OnCurrentChanging(CurrentChangingEventArgs)
  fullName: System.Windows.Data.CollectionView.OnCurrentChanging(CurrentChangingEventArgs)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "引發<xref href=&quot;System.Windows.Data.CollectionView.CurrentChanging&quot;></xref>指定的引數的事件。"
  syntax:
    content: protected virtual void OnCurrentChanging (System.ComponentModel.CurrentChangingEventArgs args);
    parameters:
    - id: args
      type: System.ComponentModel.CurrentChangingEventArgs
      description: "事件的相關資訊。"
  overload: System.Windows.Data.CollectionView.OnCurrentChanging*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)
  id: OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: OnPropertyChanged(PropertyChangedEventArgs)
  nameWithType: CollectionView.OnPropertyChanged(PropertyChangedEventArgs)
  fullName: System.Windows.Data.CollectionView.OnPropertyChanged(PropertyChangedEventArgs)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "引發<xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged>使用指定的引數的事件。</xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged>"
  syntax:
    content: protected virtual void OnPropertyChanged (System.ComponentModel.PropertyChangedEventArgs e);
    parameters:
    - id: e
      type: System.ComponentModel.PropertyChangedEventArgs
      description: "所引發的事件引數。"
  overload: System.Windows.Data.CollectionView.OnPropertyChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.PassesFilter(System.Object)
  id: PassesFilter(System.Object)
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: PassesFilter(Object)
  nameWithType: CollectionView.PassesFilter(Object)
  fullName: System.Windows.Data.CollectionView.PassesFilter(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "傳回值，指出基礎的集合中指定的項目是否屬於檢視。"
  remarks: "不同於<xref:System.Windows.Data.CollectionView.Contains%2A>方法，這個方法會假設指定的項目屬於基礎集合。</xref:System.Windows.Data.CollectionView.Contains%2A> 這個方法會將篩選納入考量。 一般而言，您使用這個方法在集合變更通知期間若要判斷是否已加入或移除的項目需要處理。"
  syntax:
    content: public virtual bool PassesFilter (object item);
    parameters:
    - id: item
      type: System.Object
      description: "要檢查的項目。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果指定的項目屬於的檢視，或沒有篩選設定集合檢視。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Data.CollectionView.PassesFilter*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.ProcessCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  id: ProcessCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: ProcessCollectionChanged(NotifyCollectionChangedEventArgs)
  nameWithType: CollectionView.ProcessCollectionChanged(NotifyCollectionChangedEventArgs)
  fullName: System.Windows.Data.CollectionView.ProcessCollectionChanged(NotifyCollectionChangedEventArgs)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "當在衍生類別中覆寫時，會在處理單一變更[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]執行緒。"
  syntax:
    content: protected virtual void ProcessCollectionChanged (System.Collections.Specialized.NotifyCollectionChangedEventArgs args);
    parameters:
    - id: args
      type: System.Collections.Specialized.NotifyCollectionChangedEventArgs
      description: "<xref:System.Collections.Specialized.NotifyCollectionChangedEventArgs>至處理序的物件。</xref:System.Collections.Specialized.NotifyCollectionChangedEventArgs>"
  overload: System.Windows.Data.CollectionView.ProcessCollectionChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.ProcessPendingChanges
  id: ProcessPendingChanges
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: ProcessPendingChanges()
  nameWithType: CollectionView.ProcessPendingChanges()
  fullName: System.Windows.Data.CollectionView.ProcessPendingChanges()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "可確保集合的所有暫止變更已認可。"
  syntax:
    content: protected void ProcessPendingChanges ();
    parameters: []
  overload: System.Windows.Data.CollectionView.ProcessPendingChanges*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.PropertyChanged
  id: PropertyChanged
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: PropertyChanged
  nameWithType: CollectionView.PropertyChanged
  fullName: System.Windows.Data.CollectionView.PropertyChanged
  type: Event
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "發生於屬性值已變更。"
  syntax:
    content: protected virtual event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
    return:
      type: System.ComponentModel.PropertyChangedEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.Refresh
  id: Refresh
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: Refresh()
  nameWithType: CollectionView.Refresh()
  fullName: System.Windows.Data.CollectionView.Refresh()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "重新建立檢視。"
  remarks: "當您將<xref:System.Windows.Data.CollectionView.Filter%2A>， <xref:System.Windows.Data.CollectionView.SortDescriptions%2A>，或<xref:System.Windows.Data.CollectionView.GroupDescriptions%2A>屬性; 請重新整理就會發生。</xref:System.Windows.Data.CollectionView.GroupDescriptions%2A> </xref:System.Windows.Data.CollectionView.SortDescriptions%2A> </xref:System.Windows.Data.CollectionView.Filter%2A>  您沒有在您設定這些屬性的其中一個之後，立即呼叫重新整理方法。 如需有關如何延遲自動重新整理，請參閱<xref:System.Windows.Data.CollectionView.DeferRefresh%2A>.</xref:System.Windows.Data.CollectionView.DeferRefresh%2A>       在衍生的類別會使用受保護<xref:System.Windows.Data.CollectionView.RefreshOverride%2A>方法來覆寫這個方法的行為。</xref:System.Windows.Data.CollectionView.RefreshOverride%2A>"
  syntax:
    content: public virtual void Refresh ();
    parameters: []
  overload: System.Windows.Data.CollectionView.Refresh*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.RefreshOrDefer
  id: RefreshOrDefer
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: RefreshOrDefer()
  nameWithType: CollectionView.RefreshOrDefer()
  fullName: System.Windows.Data.CollectionView.RefreshOrDefer()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "重新整理檢視，或指定需要延後循環完成時重新整理檢視。"
  syntax:
    content: protected void RefreshOrDefer ();
    parameters: []
  overload: System.Windows.Data.CollectionView.RefreshOrDefer*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.RefreshOverride
  id: RefreshOverride
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: RefreshOverride()
  nameWithType: CollectionView.RefreshOverride()
  fullName: System.Windows.Data.CollectionView.RefreshOverride()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "重新建立檢視。"
  syntax:
    content: protected virtual void RefreshOverride ();
    parameters: []
  overload: System.Windows.Data.CollectionView.RefreshOverride*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.SetCurrent(System.Object,System.Int32)
  id: SetCurrent(System.Object,System.Int32)
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: SetCurrent(Object,Int32)
  nameWithType: CollectionView.SetCurrent(Object,Int32)
  fullName: System.Windows.Data.CollectionView.SetCurrent(Object,Int32)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "設定指定的項目和索引的值為<> *> 和<> *> 屬性。"
  syntax:
    content: protected void SetCurrent (object newItem, int newPosition);
    parameters:
    - id: newItem
      type: System.Object
      description: "將設定為<xref:System.Windows.Data.CollectionView.CurrentItem*>.</xref:System.Windows.Data.CollectionView.CurrentItem*>項目"
    - id: newPosition
      type: System.Int32
      description: "要設定為值<xref:System.Windows.Data.CollectionView.CurrentPosition*>屬性值。</xref:System.Windows.Data.CollectionView.CurrentPosition*>"
  overload: System.Windows.Data.CollectionView.SetCurrent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.SetCurrent(System.Object,System.Int32,System.Int32)
  id: SetCurrent(System.Object,System.Int32,System.Int32)
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: SetCurrent(Object,Int32,Int32)
  nameWithType: CollectionView.SetCurrent(Object,Int32,Int32)
  fullName: System.Windows.Data.CollectionView.SetCurrent(Object,Int32,Int32)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "設定指定的項目和索引的值為<> *> 和<> *> 屬性。 從衍生類別的建構函式，可以呼叫這個方法。"
  remarks: "從衍生類別建構函式中呼叫這個多載。  未通過<xref:System.Windows.Data.CollectionView.Count%2A>屬性，這是虛擬的屬性，做為`count`。</xref:System.Windows.Data.CollectionView.Count%2A> 相反地，傳遞的內部計數<xref:System.Collections.IList>表示的集合。</xref:System.Collections.IList>       .NET Framework 3.5 版中引進 SetCurrent。  如需詳細資訊，請參閱[版本和相依性](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: protected void SetCurrent (object newItem, int newPosition, int count);
    parameters:
    - id: newItem
      type: System.Object
      description: "將設定為<xref:System.Windows.Data.CollectionView.CurrentItem*>.</xref:System.Windows.Data.CollectionView.CurrentItem*>項目"
    - id: newPosition
      type: System.Int32
      description: "要設定為值<xref:System.Windows.Data.CollectionView.CurrentPosition*>屬性值。</xref:System.Windows.Data.CollectionView.CurrentPosition*>"
    - id: count
      type: System.Int32
      description: "中的項目數<xref href=&quot;System.Windows.Data.CollectionView&quot;> </xref>。"
  overload: System.Windows.Data.CollectionView.SetCurrent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.SortDescriptions
  id: SortDescriptions
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: SortDescriptions
  nameWithType: CollectionView.SortDescriptions
  fullName: System.Windows.Data.CollectionView.SortDescriptions
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "取得集合的<xref href=&quot;System.ComponentModel.SortDescription&quot;></xref>結構描述如何在檢視中排序集合中的項目。"
  remarks: "您無法加入<xref:System.ComponentModel.SortDescription>傳回 （空的） 集合因為基底類別<xref:System.Windows.Data.CollectionView>不支援排序。</xref:System.Windows.Data.CollectionView> </xref:System.ComponentModel.SortDescription> 相反地，使用 衍生的類別<xref:System.Windows.Data.ListCollectionView>和<xref:System.Windows.Data.BindingListCollectionView>，並支援排序。</xref:System.Windows.Data.BindingListCollectionView> </xref:System.Windows.Data.ListCollectionView> 另請檢查<xref:System.Windows.Data.CollectionView.CanSort%2A>屬性，才能新增或移除<xref:System.ComponentModel.SortDescription>物件以避免發生例外狀況。</xref:System.ComponentModel.SortDescription> </xref:System.Windows.Data.CollectionView.CanSort%2A>"
  syntax:
    content: public virtual System.ComponentModel.SortDescriptionCollection SortDescriptions { get; }
    return:
      type: System.ComponentModel.SortDescriptionCollection
      description: "空白<xref href=&quot;System.ComponentModel.SortDescriptionCollection&quot;></xref>在所有情況下。"
  overload: System.Windows.Data.CollectionView.SortDescriptions*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.SourceCollection
  id: SourceCollection
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: SourceCollection
  nameWithType: CollectionView.SourceCollection
  fullName: System.Windows.Data.CollectionView.SourceCollection
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "傳回基礎未篩選的集合。"
  syntax:
    content: public virtual System.Collections.IEnumerable SourceCollection { get; }
    return:
      type: System.Collections.IEnumerable
      description: "<xref:System.Collections.IEnumerable>物件為基礎的集合。</xref:System.Collections.IEnumerable>"
  overload: System.Windows.Data.CollectionView.SourceCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: CollectionView.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Windows.Data.CollectionView.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "傳回<xref:System.Collections.IEnumerator>物件可用來列舉在檢視中的項目。</xref:System.Collections.IEnumerator>"
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "<xref:System.Collections.IEnumerator>物件可用來列舉在檢視中的項目。</xref:System.Collections.IEnumerator>"
  overload: System.Windows.Data.CollectionView.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.CollectionView.UpdatedOutsideDispatcher
  id: UpdatedOutsideDispatcher
  parent: System.Windows.Data.CollectionView
  langs:
  - csharp
  name: UpdatedOutsideDispatcher
  nameWithType: CollectionView.UpdatedOutsideDispatcher
  fullName: System.Windows.Data.CollectionView.UpdatedOutsideDispatcher
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "取得值，指出是否已更新的變更記錄檔，因為必要<xref href=&quot;System.Windows.Data.CollectionView.CollectionChanged&quot;></xref>已收到通知，在不同執行緒上不需要第一個輸入[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]執行緒發送器。"
  syntax:
    content: protected bool UpdatedOutsideDispatcher { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果已更新的變更記錄檔，因為必要<xref href=&quot;System.Windows.Data.CollectionView.CollectionChanged&quot;></xref>已收到通知，在不同執行緒上不需要第一個輸入[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]執行緒發送器，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Data.CollectionView.UpdatedOutsideDispatcher*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Threading.DispatcherObject
  isExternal: false
  name: System.Windows.Threading.DispatcherObject
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Windows.Data.CollectionView.#ctor(System.Collections.IEnumerable)
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: CollectionView(IEnumerable)
  nameWithType: CollectionView.CollectionView(IEnumerable)
  fullName: System.Windows.Data.CollectionView.CollectionView(IEnumerable)
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Windows.Data.CollectionView.AllowsCrossThreadChanges
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: AllowsCrossThreadChanges
  nameWithType: CollectionView.AllowsCrossThreadChanges
  fullName: System.Windows.Data.CollectionView.AllowsCrossThreadChanges
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Data.CollectionView.CanFilter
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: CanFilter
  nameWithType: CollectionView.CanFilter
  fullName: System.Windows.Data.CollectionView.CanFilter
- uid: System.Windows.Data.CollectionView.CanGroup
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: CanGroup
  nameWithType: CollectionView.CanGroup
  fullName: System.Windows.Data.CollectionView.CanGroup
- uid: System.Windows.Data.CollectionView.CanSort
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: CanSort
  nameWithType: CollectionView.CanSort
  fullName: System.Windows.Data.CollectionView.CanSort
- uid: System.Windows.Data.CollectionView.ClearChangeLog
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: ClearChangeLog()
  nameWithType: CollectionView.ClearChangeLog()
  fullName: System.Windows.Data.CollectionView.ClearChangeLog()
- uid: System.Windows.Data.CollectionView.ClearPendingChanges
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: ClearPendingChanges()
  nameWithType: CollectionView.ClearPendingChanges()
  fullName: System.Windows.Data.CollectionView.ClearPendingChanges()
- uid: System.Windows.Data.CollectionView.CollectionChanged
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: CollectionChanged
  nameWithType: CollectionView.CollectionChanged
  fullName: System.Windows.Data.CollectionView.CollectionChanged
- uid: System.Collections.Specialized.NotifyCollectionChangedEventHandler
  parent: System.Collections.Specialized
  isExternal: true
  name: NotifyCollectionChangedEventHandler
  nameWithType: NotifyCollectionChangedEventHandler
  fullName: System.Collections.Specialized.NotifyCollectionChangedEventHandler
- uid: System.Windows.Data.CollectionView.Comparer
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: Comparer
  nameWithType: CollectionView.Comparer
  fullName: System.Windows.Data.CollectionView.Comparer
- uid: System.Collections.IComparer
  parent: System.Collections
  isExternal: true
  name: IComparer
  nameWithType: IComparer
  fullName: System.Collections.IComparer
- uid: System.Windows.Data.CollectionView.Contains(System.Object)
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: Contains(Object)
  nameWithType: CollectionView.Contains(Object)
  fullName: System.Windows.Data.CollectionView.Contains(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Data.CollectionView.Count
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: Count
  nameWithType: CollectionView.Count
  fullName: System.Windows.Data.CollectionView.Count
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Data.CollectionView.Culture
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: Culture
  nameWithType: CollectionView.Culture
  fullName: System.Windows.Data.CollectionView.Culture
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Windows.Data.CollectionView.CurrentChanged
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: CurrentChanged
  nameWithType: CollectionView.CurrentChanged
  fullName: System.Windows.Data.CollectionView.CurrentChanged
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Windows.Data.CollectionView.CurrentChanging
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: CurrentChanging
  nameWithType: CollectionView.CurrentChanging
  fullName: System.Windows.Data.CollectionView.CurrentChanging
- uid: System.ComponentModel.CurrentChangingEventHandler
  parent: System.ComponentModel
  isExternal: false
  name: CurrentChangingEventHandler
  nameWithType: CurrentChangingEventHandler
  fullName: System.ComponentModel.CurrentChangingEventHandler
- uid: System.Windows.Data.CollectionView.CurrentItem
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: CurrentItem
  nameWithType: CollectionView.CurrentItem
  fullName: System.Windows.Data.CollectionView.CurrentItem
- uid: System.Windows.Data.CollectionView.CurrentPosition
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: CurrentPosition
  nameWithType: CollectionView.CurrentPosition
  fullName: System.Windows.Data.CollectionView.CurrentPosition
- uid: System.Windows.Data.CollectionView.DeferRefresh
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: DeferRefresh()
  nameWithType: CollectionView.DeferRefresh()
  fullName: System.Windows.Data.CollectionView.DeferRefresh()
- uid: System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Windows.Data.CollectionView.DetachFromSourceCollection
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: DetachFromSourceCollection()
  nameWithType: CollectionView.DetachFromSourceCollection()
  fullName: System.Windows.Data.CollectionView.DetachFromSourceCollection()
- uid: System.Windows.Data.CollectionView.Filter
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: Filter
  nameWithType: CollectionView.Filter
  fullName: System.Windows.Data.CollectionView.Filter
- uid: System.Predicate{System.Object}
  parent: System
  isExternal: true
  name: Predicate<Object>
  nameWithType: Predicate<Object>
  fullName: System.Predicate<System.Object>
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: Predicate<System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Data.CollectionView.GetEnumerator
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: GetEnumerator()
  nameWithType: CollectionView.GetEnumerator()
  fullName: System.Windows.Data.CollectionView.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Windows.Data.CollectionView.GetItemAt(System.Int32)
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: GetItemAt(Int32)
  nameWithType: CollectionView.GetItemAt(Int32)
  fullName: System.Windows.Data.CollectionView.GetItemAt(Int32)
- uid: System.Windows.Data.CollectionView.GroupDescriptions
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: GroupDescriptions
  nameWithType: CollectionView.GroupDescriptions
  fullName: System.Windows.Data.CollectionView.GroupDescriptions
- uid: System.Collections.ObjectModel.ObservableCollection{System.ComponentModel.GroupDescription}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ObservableCollection<GroupDescription>
  nameWithType: ObservableCollection<GroupDescription>
  fullName: System.Collections.ObjectModel.ObservableCollection<System.ComponentModel.GroupDescription>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ObservableCollection`1
    name: ObservableCollection
    nameWithType: ObservableCollection
    fullName: ObservableCollection<System.ComponentModel.GroupDescription>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ComponentModel.GroupDescription
    name: GroupDescription
    nameWithType: GroupDescription
    fullName: GroupDescription
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Data.CollectionView.Groups
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: Groups
  nameWithType: CollectionView.Groups
  fullName: System.Windows.Data.CollectionView.Groups
- uid: System.Collections.ObjectModel.ReadOnlyObservableCollection{System.Object}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyObservableCollection<Object>
  nameWithType: ReadOnlyObservableCollection<Object>
  fullName: System.Collections.ObjectModel.ReadOnlyObservableCollection<System.Object>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyObservableCollection`1
    name: ReadOnlyObservableCollection
    nameWithType: ReadOnlyObservableCollection
    fullName: ReadOnlyObservableCollection<System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Data.CollectionView.IndexOf(System.Object)
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: IndexOf(Object)
  nameWithType: CollectionView.IndexOf(Object)
  fullName: System.Windows.Data.CollectionView.IndexOf(Object)
- uid: System.Windows.Data.CollectionView.IsCurrentAfterLast
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: IsCurrentAfterLast
  nameWithType: CollectionView.IsCurrentAfterLast
  fullName: System.Windows.Data.CollectionView.IsCurrentAfterLast
- uid: System.Windows.Data.CollectionView.IsCurrentBeforeFirst
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: IsCurrentBeforeFirst
  nameWithType: CollectionView.IsCurrentBeforeFirst
  fullName: System.Windows.Data.CollectionView.IsCurrentBeforeFirst
- uid: System.Windows.Data.CollectionView.IsCurrentInSync
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: IsCurrentInSync
  nameWithType: CollectionView.IsCurrentInSync
  fullName: System.Windows.Data.CollectionView.IsCurrentInSync
- uid: System.Windows.Data.CollectionView.IsDynamic
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: IsDynamic
  nameWithType: CollectionView.IsDynamic
  fullName: System.Windows.Data.CollectionView.IsDynamic
- uid: System.Windows.Data.CollectionView.IsEmpty
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: IsEmpty
  nameWithType: CollectionView.IsEmpty
  fullName: System.Windows.Data.CollectionView.IsEmpty
- uid: System.Windows.Data.CollectionView.IsInUse
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: IsInUse
  nameWithType: CollectionView.IsInUse
  fullName: System.Windows.Data.CollectionView.IsInUse
- uid: System.Windows.Data.CollectionView.IsRefreshDeferred
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: IsRefreshDeferred
  nameWithType: CollectionView.IsRefreshDeferred
  fullName: System.Windows.Data.CollectionView.IsRefreshDeferred
- uid: System.Windows.Data.CollectionView.MoveCurrentTo(System.Object)
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: MoveCurrentTo(Object)
  nameWithType: CollectionView.MoveCurrentTo(Object)
  fullName: System.Windows.Data.CollectionView.MoveCurrentTo(Object)
- uid: System.Windows.Data.CollectionView.MoveCurrentToFirst
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: MoveCurrentToFirst()
  nameWithType: CollectionView.MoveCurrentToFirst()
  fullName: System.Windows.Data.CollectionView.MoveCurrentToFirst()
- uid: System.Windows.Data.CollectionView.MoveCurrentToLast
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: MoveCurrentToLast()
  nameWithType: CollectionView.MoveCurrentToLast()
  fullName: System.Windows.Data.CollectionView.MoveCurrentToLast()
- uid: System.Windows.Data.CollectionView.MoveCurrentToNext
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: MoveCurrentToNext()
  nameWithType: CollectionView.MoveCurrentToNext()
  fullName: System.Windows.Data.CollectionView.MoveCurrentToNext()
- uid: System.Windows.Data.CollectionView.MoveCurrentToPosition(System.Int32)
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: MoveCurrentToPosition(Int32)
  nameWithType: CollectionView.MoveCurrentToPosition(Int32)
  fullName: System.Windows.Data.CollectionView.MoveCurrentToPosition(Int32)
- uid: System.Windows.Data.CollectionView.MoveCurrentToPrevious
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: MoveCurrentToPrevious()
  nameWithType: CollectionView.MoveCurrentToPrevious()
  fullName: System.Windows.Data.CollectionView.MoveCurrentToPrevious()
- uid: System.Windows.Data.CollectionView.NeedsRefresh
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: NeedsRefresh
  nameWithType: CollectionView.NeedsRefresh
  fullName: System.Windows.Data.CollectionView.NeedsRefresh
- uid: System.Windows.Data.CollectionView.NewItemPlaceholder
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: NewItemPlaceholder
  nameWithType: CollectionView.NewItemPlaceholder
  fullName: System.Windows.Data.CollectionView.NewItemPlaceholder
- uid: System.Windows.Data.CollectionView.OKToChangeCurrent
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: OKToChangeCurrent()
  nameWithType: CollectionView.OKToChangeCurrent()
  fullName: System.Windows.Data.CollectionView.OKToChangeCurrent()
- uid: System.Windows.Data.CollectionView.OnAllowsCrossThreadChangesChanged
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: OnAllowsCrossThreadChangesChanged()
  nameWithType: CollectionView.OnAllowsCrossThreadChangesChanged()
  fullName: System.Windows.Data.CollectionView.OnAllowsCrossThreadChangesChanged()
- uid: System.Windows.Data.CollectionView.OnBeginChangeLogging(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: OnBeginChangeLogging(NotifyCollectionChangedEventArgs)
  nameWithType: CollectionView.OnBeginChangeLogging(NotifyCollectionChangedEventArgs)
  fullName: System.Windows.Data.CollectionView.OnBeginChangeLogging(NotifyCollectionChangedEventArgs)
- uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs
  parent: System.Collections.Specialized
  isExternal: true
  name: NotifyCollectionChangedEventArgs
  nameWithType: NotifyCollectionChangedEventArgs
  fullName: System.Collections.Specialized.NotifyCollectionChangedEventArgs
- uid: System.Windows.Data.CollectionView.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: OnCollectionChanged(NotifyCollectionChangedEventArgs)
  nameWithType: CollectionView.OnCollectionChanged(NotifyCollectionChangedEventArgs)
  fullName: System.Windows.Data.CollectionView.OnCollectionChanged(NotifyCollectionChangedEventArgs)
- uid: System.Windows.Data.CollectionView.OnCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: OnCollectionChanged(Object,NotifyCollectionChangedEventArgs)
  nameWithType: CollectionView.OnCollectionChanged(Object,NotifyCollectionChangedEventArgs)
  fullName: System.Windows.Data.CollectionView.OnCollectionChanged(Object,NotifyCollectionChangedEventArgs)
- uid: System.Windows.Data.CollectionView.OnCurrentChanged
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: OnCurrentChanged()
  nameWithType: CollectionView.OnCurrentChanged()
  fullName: System.Windows.Data.CollectionView.OnCurrentChanged()
- uid: System.Windows.Data.CollectionView.OnCurrentChanging
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: OnCurrentChanging()
  nameWithType: CollectionView.OnCurrentChanging()
  fullName: System.Windows.Data.CollectionView.OnCurrentChanging()
- uid: System.Windows.Data.CollectionView.OnCurrentChanging(System.ComponentModel.CurrentChangingEventArgs)
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: OnCurrentChanging(CurrentChangingEventArgs)
  nameWithType: CollectionView.OnCurrentChanging(CurrentChangingEventArgs)
  fullName: System.Windows.Data.CollectionView.OnCurrentChanging(CurrentChangingEventArgs)
- uid: System.ComponentModel.CurrentChangingEventArgs
  parent: System.ComponentModel
  isExternal: false
  name: CurrentChangingEventArgs
  nameWithType: CurrentChangingEventArgs
  fullName: System.ComponentModel.CurrentChangingEventArgs
- uid: System.Windows.Data.CollectionView.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: OnPropertyChanged(PropertyChangedEventArgs)
  nameWithType: CollectionView.OnPropertyChanged(PropertyChangedEventArgs)
  fullName: System.Windows.Data.CollectionView.OnPropertyChanged(PropertyChangedEventArgs)
- uid: System.ComponentModel.PropertyChangedEventArgs
  parent: System.ComponentModel
  isExternal: true
  name: PropertyChangedEventArgs
  nameWithType: PropertyChangedEventArgs
  fullName: System.ComponentModel.PropertyChangedEventArgs
- uid: System.Windows.Data.CollectionView.PassesFilter(System.Object)
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: PassesFilter(Object)
  nameWithType: CollectionView.PassesFilter(Object)
  fullName: System.Windows.Data.CollectionView.PassesFilter(Object)
- uid: System.Windows.Data.CollectionView.ProcessCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: ProcessCollectionChanged(NotifyCollectionChangedEventArgs)
  nameWithType: CollectionView.ProcessCollectionChanged(NotifyCollectionChangedEventArgs)
  fullName: System.Windows.Data.CollectionView.ProcessCollectionChanged(NotifyCollectionChangedEventArgs)
- uid: System.Windows.Data.CollectionView.ProcessPendingChanges
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: ProcessPendingChanges()
  nameWithType: CollectionView.ProcessPendingChanges()
  fullName: System.Windows.Data.CollectionView.ProcessPendingChanges()
- uid: System.Windows.Data.CollectionView.PropertyChanged
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: PropertyChanged
  nameWithType: CollectionView.PropertyChanged
  fullName: System.Windows.Data.CollectionView.PropertyChanged
- uid: System.ComponentModel.PropertyChangedEventHandler
  parent: System.ComponentModel
  isExternal: true
  name: PropertyChangedEventHandler
  nameWithType: PropertyChangedEventHandler
  fullName: System.ComponentModel.PropertyChangedEventHandler
- uid: System.Windows.Data.CollectionView.Refresh
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: Refresh()
  nameWithType: CollectionView.Refresh()
  fullName: System.Windows.Data.CollectionView.Refresh()
- uid: System.Windows.Data.CollectionView.RefreshOrDefer
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: RefreshOrDefer()
  nameWithType: CollectionView.RefreshOrDefer()
  fullName: System.Windows.Data.CollectionView.RefreshOrDefer()
- uid: System.Windows.Data.CollectionView.RefreshOverride
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: RefreshOverride()
  nameWithType: CollectionView.RefreshOverride()
  fullName: System.Windows.Data.CollectionView.RefreshOverride()
- uid: System.Windows.Data.CollectionView.SetCurrent(System.Object,System.Int32)
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: SetCurrent(Object,Int32)
  nameWithType: CollectionView.SetCurrent(Object,Int32)
  fullName: System.Windows.Data.CollectionView.SetCurrent(Object,Int32)
- uid: System.Windows.Data.CollectionView.SetCurrent(System.Object,System.Int32,System.Int32)
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: SetCurrent(Object,Int32,Int32)
  nameWithType: CollectionView.SetCurrent(Object,Int32,Int32)
  fullName: System.Windows.Data.CollectionView.SetCurrent(Object,Int32,Int32)
- uid: System.Windows.Data.CollectionView.SortDescriptions
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: SortDescriptions
  nameWithType: CollectionView.SortDescriptions
  fullName: System.Windows.Data.CollectionView.SortDescriptions
- uid: System.ComponentModel.SortDescriptionCollection
  parent: System.ComponentModel
  isExternal: false
  name: SortDescriptionCollection
  nameWithType: SortDescriptionCollection
  fullName: System.ComponentModel.SortDescriptionCollection
- uid: System.Windows.Data.CollectionView.SourceCollection
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: SourceCollection
  nameWithType: CollectionView.SourceCollection
  fullName: System.Windows.Data.CollectionView.SourceCollection
- uid: System.Windows.Data.CollectionView.System#Collections#IEnumerable#GetEnumerator
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: CollectionView.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Windows.Data.CollectionView.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Windows.Data.CollectionView.UpdatedOutsideDispatcher
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: UpdatedOutsideDispatcher
  nameWithType: CollectionView.UpdatedOutsideDispatcher
  fullName: System.Windows.Data.CollectionView.UpdatedOutsideDispatcher
- uid: System.Windows.Data.CollectionView.#ctor*
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: CollectionView
  nameWithType: CollectionView.CollectionView
- uid: System.Windows.Data.CollectionView.AllowsCrossThreadChanges*
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: AllowsCrossThreadChanges
  nameWithType: CollectionView.AllowsCrossThreadChanges
- uid: System.Windows.Data.CollectionView.CanFilter*
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: CanFilter
  nameWithType: CollectionView.CanFilter
- uid: System.Windows.Data.CollectionView.CanGroup*
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: CanGroup
  nameWithType: CollectionView.CanGroup
- uid: System.Windows.Data.CollectionView.CanSort*
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: CanSort
  nameWithType: CollectionView.CanSort
- uid: System.Windows.Data.CollectionView.ClearChangeLog*
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: ClearChangeLog
  nameWithType: CollectionView.ClearChangeLog
- uid: System.Windows.Data.CollectionView.ClearPendingChanges*
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: ClearPendingChanges
  nameWithType: CollectionView.ClearPendingChanges
- uid: System.Windows.Data.CollectionView.Comparer*
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: Comparer
  nameWithType: CollectionView.Comparer
- uid: System.Windows.Data.CollectionView.Contains*
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: Contains
  nameWithType: CollectionView.Contains
- uid: System.Windows.Data.CollectionView.Count*
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: Count
  nameWithType: CollectionView.Count
- uid: System.Windows.Data.CollectionView.Culture*
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: Culture
  nameWithType: CollectionView.Culture
- uid: System.Windows.Data.CollectionView.CurrentItem*
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: CurrentItem
  nameWithType: CollectionView.CurrentItem
- uid: System.Windows.Data.CollectionView.CurrentPosition*
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: CurrentPosition
  nameWithType: CollectionView.CurrentPosition
- uid: System.Windows.Data.CollectionView.DeferRefresh*
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: DeferRefresh
  nameWithType: CollectionView.DeferRefresh
- uid: System.Windows.Data.CollectionView.DetachFromSourceCollection*
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: DetachFromSourceCollection
  nameWithType: CollectionView.DetachFromSourceCollection
- uid: System.Windows.Data.CollectionView.Filter*
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: Filter
  nameWithType: CollectionView.Filter
- uid: System.Windows.Data.CollectionView.GetEnumerator*
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: GetEnumerator
  nameWithType: CollectionView.GetEnumerator
- uid: System.Windows.Data.CollectionView.GetItemAt*
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: GetItemAt
  nameWithType: CollectionView.GetItemAt
- uid: System.Windows.Data.CollectionView.GroupDescriptions*
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: GroupDescriptions
  nameWithType: CollectionView.GroupDescriptions
- uid: System.Windows.Data.CollectionView.Groups*
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: Groups
  nameWithType: CollectionView.Groups
- uid: System.Windows.Data.CollectionView.IndexOf*
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: IndexOf
  nameWithType: CollectionView.IndexOf
- uid: System.Windows.Data.CollectionView.IsCurrentAfterLast*
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: IsCurrentAfterLast
  nameWithType: CollectionView.IsCurrentAfterLast
- uid: System.Windows.Data.CollectionView.IsCurrentBeforeFirst*
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: IsCurrentBeforeFirst
  nameWithType: CollectionView.IsCurrentBeforeFirst
- uid: System.Windows.Data.CollectionView.IsCurrentInSync*
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: IsCurrentInSync
  nameWithType: CollectionView.IsCurrentInSync
- uid: System.Windows.Data.CollectionView.IsDynamic*
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: IsDynamic
  nameWithType: CollectionView.IsDynamic
- uid: System.Windows.Data.CollectionView.IsEmpty*
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: IsEmpty
  nameWithType: CollectionView.IsEmpty
- uid: System.Windows.Data.CollectionView.IsInUse*
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: IsInUse
  nameWithType: CollectionView.IsInUse
- uid: System.Windows.Data.CollectionView.IsRefreshDeferred*
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: IsRefreshDeferred
  nameWithType: CollectionView.IsRefreshDeferred
- uid: System.Windows.Data.CollectionView.MoveCurrentTo*
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: MoveCurrentTo
  nameWithType: CollectionView.MoveCurrentTo
- uid: System.Windows.Data.CollectionView.MoveCurrentToFirst*
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: MoveCurrentToFirst
  nameWithType: CollectionView.MoveCurrentToFirst
- uid: System.Windows.Data.CollectionView.MoveCurrentToLast*
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: MoveCurrentToLast
  nameWithType: CollectionView.MoveCurrentToLast
- uid: System.Windows.Data.CollectionView.MoveCurrentToNext*
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: MoveCurrentToNext
  nameWithType: CollectionView.MoveCurrentToNext
- uid: System.Windows.Data.CollectionView.MoveCurrentToPosition*
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: MoveCurrentToPosition
  nameWithType: CollectionView.MoveCurrentToPosition
- uid: System.Windows.Data.CollectionView.MoveCurrentToPrevious*
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: MoveCurrentToPrevious
  nameWithType: CollectionView.MoveCurrentToPrevious
- uid: System.Windows.Data.CollectionView.NeedsRefresh*
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: NeedsRefresh
  nameWithType: CollectionView.NeedsRefresh
- uid: System.Windows.Data.CollectionView.NewItemPlaceholder*
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: NewItemPlaceholder
  nameWithType: CollectionView.NewItemPlaceholder
- uid: System.Windows.Data.CollectionView.OKToChangeCurrent*
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: OKToChangeCurrent
  nameWithType: CollectionView.OKToChangeCurrent
- uid: System.Windows.Data.CollectionView.OnAllowsCrossThreadChangesChanged*
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: OnAllowsCrossThreadChangesChanged
  nameWithType: CollectionView.OnAllowsCrossThreadChangesChanged
- uid: System.Windows.Data.CollectionView.OnBeginChangeLogging*
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: OnBeginChangeLogging
  nameWithType: CollectionView.OnBeginChangeLogging
- uid: System.Windows.Data.CollectionView.OnCollectionChanged*
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: OnCollectionChanged
  nameWithType: CollectionView.OnCollectionChanged
- uid: System.Windows.Data.CollectionView.OnCurrentChanged*
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: OnCurrentChanged
  nameWithType: CollectionView.OnCurrentChanged
- uid: System.Windows.Data.CollectionView.OnCurrentChanging*
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: OnCurrentChanging
  nameWithType: CollectionView.OnCurrentChanging
- uid: System.Windows.Data.CollectionView.OnPropertyChanged*
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: OnPropertyChanged
  nameWithType: CollectionView.OnPropertyChanged
- uid: System.Windows.Data.CollectionView.PassesFilter*
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: PassesFilter
  nameWithType: CollectionView.PassesFilter
- uid: System.Windows.Data.CollectionView.ProcessCollectionChanged*
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: ProcessCollectionChanged
  nameWithType: CollectionView.ProcessCollectionChanged
- uid: System.Windows.Data.CollectionView.ProcessPendingChanges*
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: ProcessPendingChanges
  nameWithType: CollectionView.ProcessPendingChanges
- uid: System.Windows.Data.CollectionView.Refresh*
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: Refresh
  nameWithType: CollectionView.Refresh
- uid: System.Windows.Data.CollectionView.RefreshOrDefer*
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: RefreshOrDefer
  nameWithType: CollectionView.RefreshOrDefer
- uid: System.Windows.Data.CollectionView.RefreshOverride*
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: RefreshOverride
  nameWithType: CollectionView.RefreshOverride
- uid: System.Windows.Data.CollectionView.SetCurrent*
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: SetCurrent
  nameWithType: CollectionView.SetCurrent
- uid: System.Windows.Data.CollectionView.SortDescriptions*
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: SortDescriptions
  nameWithType: CollectionView.SortDescriptions
- uid: System.Windows.Data.CollectionView.SourceCollection*
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: SourceCollection
  nameWithType: CollectionView.SourceCollection
- uid: System.Windows.Data.CollectionView.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: CollectionView.System.Collections.IEnumerable.GetEnumerator
- uid: System.Windows.Data.CollectionView.UpdatedOutsideDispatcher*
  parent: System.Windows.Data.CollectionView
  isExternal: false
  name: UpdatedOutsideDispatcher
  nameWithType: CollectionView.UpdatedOutsideDispatcher
