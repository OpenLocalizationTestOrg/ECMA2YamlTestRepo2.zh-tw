### YamlMime:ManagedReference
items:
- uid: System.Net.WebSockets.ClientWebSocketOptions
  id: ClientWebSocketOptions
  children:
  - System.Net.WebSockets.ClientWebSocketOptions.AddSubProtocol(System.String)
  - System.Net.WebSockets.ClientWebSocketOptions.ClientCertificates
  - System.Net.WebSockets.ClientWebSocketOptions.Cookies
  - System.Net.WebSockets.ClientWebSocketOptions.Credentials
  - System.Net.WebSockets.ClientWebSocketOptions.KeepAliveInterval
  - System.Net.WebSockets.ClientWebSocketOptions.Proxy
  - System.Net.WebSockets.ClientWebSocketOptions.SetBuffer(System.Int32,System.Int32)
  - System.Net.WebSockets.ClientWebSocketOptions.SetBuffer(System.Int32,System.Int32,System.ArraySegment{System.Byte})
  - System.Net.WebSockets.ClientWebSocketOptions.SetRequestHeader(System.String,System.String)
  - System.Net.WebSockets.ClientWebSocketOptions.UseDefaultCredentials
  langs:
  - csharp
  name: ClientWebSocketOptions
  nameWithType: ClientWebSocketOptions
  fullName: System.Net.WebSockets.ClientWebSocketOptions
  type: Class
  summary: "與使用選項<xref href=&quot;System.Net.WebSockets.ClientWebSocket&quot;></xref>物件。"
  syntax:
    content: public sealed class ClientWebSocketOptions
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.WebSockets.ClientWebSocketOptions.AddSubProtocol(System.String)
  id: AddSubProtocol(System.String)
  parent: System.Net.WebSockets.ClientWebSocketOptions
  langs:
  - csharp
  name: AddSubProtocol(String)
  nameWithType: ClientWebSocketOptions.AddSubProtocol(String)
  fullName: System.Net.WebSockets.ClientWebSocketOptions.AddSubProtocol(String)
  type: Method
  assemblies:
  - System
  namespace: System.Net.WebSockets
  summary: "加入的 WebSocket 連接信號交換期間交涉的子通訊協定。"
  syntax:
    content: public void AddSubProtocol (string subProtocol);
    parameters:
    - id: subProtocol
      type: System.String
      description: "要加入的 WebSocket 子通訊協定。"
  overload: System.Net.WebSockets.ClientWebSocketOptions.AddSubProtocol*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebSockets.ClientWebSocketOptions.ClientCertificates
  id: ClientCertificates
  parent: System.Net.WebSockets.ClientWebSocketOptions
  langs:
  - csharp
  name: ClientCertificates
  nameWithType: ClientWebSocketOptions.ClientCertificates
  fullName: System.Net.WebSockets.ClientWebSocketOptions.ClientCertificates
  type: Property
  assemblies:
  - System
  namespace: System.Net.WebSockets
  summary: "取得或設定用戶端憑證的集合。"
  syntax:
    content: public System.Security.Cryptography.X509Certificates.X509CertificateCollection ClientCertificates { get; set; }
    return:
      type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
      description: "Returns <xref href=&quot;System.Security.Cryptography.X509Certificates.X509CertificateCollection&quot;></xref>.       用戶端憑證的集合。"
  overload: System.Net.WebSockets.ClientWebSocketOptions.ClientCertificates*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebSockets.ClientWebSocketOptions.Cookies
  id: Cookies
  parent: System.Net.WebSockets.ClientWebSocketOptions
  langs:
  - csharp
  name: Cookies
  nameWithType: ClientWebSocketOptions.Cookies
  fullName: System.Net.WebSockets.ClientWebSocketOptions.Cookies
  type: Property
  assemblies:
  - System
  namespace: System.Net.WebSockets
  summary: "取得或設定與要求相關聯的 cookie。"
  syntax:
    content: public System.Net.CookieContainer Cookies { get; set; }
    return:
      type: System.Net.CookieContainer
      description: "傳回<xref:System.Net.CookieContainer>.</xref:System.Net.CookieContainer>       與要求相關聯的 cookie。"
  overload: System.Net.WebSockets.ClientWebSocketOptions.Cookies*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebSockets.ClientWebSocketOptions.Credentials
  id: Credentials
  parent: System.Net.WebSockets.ClientWebSocketOptions
  langs:
  - csharp
  name: Credentials
  nameWithType: ClientWebSocketOptions.Credentials
  fullName: System.Net.WebSockets.ClientWebSocketOptions.Credentials
  type: Property
  assemblies:
  - System
  namespace: System.Net.WebSockets
  summary: "取得或設定用戶端的認證資訊。"
  syntax:
    content: public System.Net.ICredentials Credentials { get; set; }
    return:
      type: System.Net.ICredentials
      description: "傳回<xref:System.Net.ICredentials>.</xref:System.Net.ICredentials>       用戶端認證資訊。"
  overload: System.Net.WebSockets.ClientWebSocketOptions.Credentials*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebSockets.ClientWebSocketOptions.KeepAliveInterval
  id: KeepAliveInterval
  parent: System.Net.WebSockets.ClientWebSocketOptions
  langs:
  - csharp
  name: KeepAliveInterval
  nameWithType: ClientWebSocketOptions.KeepAliveInterval
  fullName: System.Net.WebSockets.ClientWebSocketOptions.KeepAliveInterval
  type: Property
  assemblies:
  - System
  namespace: System.Net.WebSockets
  summary: "取得或設定 WebSocket 通訊協定保持連接間隔，以毫秒為單位。"
  syntax:
    content: public TimeSpan KeepAliveInterval { get; set; }
    return:
      type: System.TimeSpan
      description: "傳回<xref:System.TimeSpan>.</xref:System.TimeSpan>       WebSocket 通訊協定保持連接間隔 （毫秒）。"
  overload: System.Net.WebSockets.ClientWebSocketOptions.KeepAliveInterval*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebSockets.ClientWebSocketOptions.Proxy
  id: Proxy
  parent: System.Net.WebSockets.ClientWebSocketOptions
  langs:
  - csharp
  name: Proxy
  nameWithType: ClientWebSocketOptions.Proxy
  fullName: System.Net.WebSockets.ClientWebSocketOptions.Proxy
  type: Property
  assemblies:
  - System
  namespace: System.Net.WebSockets
  summary: "取得或設定 WebSocket 要求的 proxy。"
  syntax:
    content: public System.Net.IWebProxy Proxy { get; set; }
    return:
      type: System.Net.IWebProxy
      description: "傳回<xref:System.Net.IWebProxy>.</xref:System.Net.IWebProxy>       WebSocket 要求的 proxy。"
  overload: System.Net.WebSockets.ClientWebSocketOptions.Proxy*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebSockets.ClientWebSocketOptions.SetBuffer(System.Int32,System.Int32)
  id: SetBuffer(System.Int32,System.Int32)
  parent: System.Net.WebSockets.ClientWebSocketOptions
  langs:
  - csharp
  name: SetBuffer(Int32,Int32)
  nameWithType: ClientWebSocketOptions.SetBuffer(Int32,Int32)
  fullName: System.Net.WebSockets.ClientWebSocketOptions.SetBuffer(Int32,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Net.WebSockets
  summary: "設定用戶端緩衝區參數。"
  syntax:
    content: public void SetBuffer (int receiveBufferSize, int sendBufferSize);
    parameters:
    - id: receiveBufferSize
      type: System.Int32
      description: "大小，以位元組為單位的用戶端接收緩衝區。"
    - id: sendBufferSize
      type: System.Int32
      description: "以位元組為單位，用戶端傳送緩衝區的大小。"
  overload: System.Net.WebSockets.ClientWebSocketOptions.SetBuffer*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebSockets.ClientWebSocketOptions.SetBuffer(System.Int32,System.Int32,System.ArraySegment{System.Byte})
  id: SetBuffer(System.Int32,System.Int32,System.ArraySegment{System.Byte})
  parent: System.Net.WebSockets.ClientWebSocketOptions
  langs:
  - csharp
  name: SetBuffer(Int32,Int32,ArraySegment<Byte>)
  nameWithType: ClientWebSocketOptions.SetBuffer(Int32,Int32,ArraySegment<Byte>)
  fullName: System.Net.WebSockets.ClientWebSocketOptions.SetBuffer(Int32,Int32,ArraySegment<Byte>)
  type: Method
  assemblies:
  - System
  namespace: System.Net.WebSockets
  summary: "設定用戶端緩衝區參數。"
  syntax:
    content: public void SetBuffer (int receiveBufferSize, int sendBufferSize, ArraySegment<byte> buffer);
    parameters:
    - id: receiveBufferSize
      type: System.Int32
      description: "大小，以位元組為單位的用戶端接收緩衝區。"
    - id: sendBufferSize
      type: System.Int32
      description: "以位元組為單位，用戶端傳送緩衝區的大小。"
    - id: buffer
      type: System.ArraySegment{System.Byte}
      description: "要使用的接收緩衝區。"
  overload: System.Net.WebSockets.ClientWebSocketOptions.SetBuffer*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebSockets.ClientWebSocketOptions.SetRequestHeader(System.String,System.String)
  id: SetRequestHeader(System.String,System.String)
  parent: System.Net.WebSockets.ClientWebSocketOptions
  langs:
  - csharp
  name: SetRequestHeader(String,String)
  nameWithType: ClientWebSocketOptions.SetRequestHeader(String,String)
  fullName: System.Net.WebSockets.ClientWebSocketOptions.SetRequestHeader(String,String)
  type: Method
  assemblies:
  - System
  namespace: System.Net.WebSockets
  summary: "建立 HTTP 要求標頭和它的值。"
  syntax:
    content: public void SetRequestHeader (string headerName, string headerValue);
    parameters:
    - id: headerName
      type: System.String
      description: "HTTP 標頭的名稱。"
    - id: headerValue
      type: System.String
      description: "HTTP 標頭的值。"
  overload: System.Net.WebSockets.ClientWebSocketOptions.SetRequestHeader*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebSockets.ClientWebSocketOptions.UseDefaultCredentials
  id: UseDefaultCredentials
  parent: System.Net.WebSockets.ClientWebSocketOptions
  langs:
  - csharp
  name: UseDefaultCredentials
  nameWithType: ClientWebSocketOptions.UseDefaultCredentials
  fullName: System.Net.WebSockets.ClientWebSocketOptions.UseDefaultCredentials
  type: Property
  assemblies:
  - System
  namespace: System.Net.WebSockets
  summary: "取得或設定<xref:System.Boolean>值，指出 WebSocket 交握期間，是否會使用預設認證。</xref:System.Boolean>"
  syntax:
    content: public bool UseDefaultCredentials { get; set; }
    return:
      type: System.Boolean
      description: "傳回<xref:System.Boolean>.</xref:System.Boolean>       <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果應該在 WebSocket 交握; 使用預設認證否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Net.WebSockets.ClientWebSocketOptions.UseDefaultCredentials*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Net.WebSockets.ClientWebSocketOptions.AddSubProtocol(System.String)
  parent: System.Net.WebSockets.ClientWebSocketOptions
  isExternal: false
  name: AddSubProtocol(String)
  nameWithType: ClientWebSocketOptions.AddSubProtocol(String)
  fullName: System.Net.WebSockets.ClientWebSocketOptions.AddSubProtocol(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.WebSockets.ClientWebSocketOptions.ClientCertificates
  parent: System.Net.WebSockets.ClientWebSocketOptions
  isExternal: false
  name: ClientCertificates
  nameWithType: ClientWebSocketOptions.ClientCertificates
  fullName: System.Net.WebSockets.ClientWebSocketOptions.ClientCertificates
- uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509CertificateCollection
  nameWithType: X509CertificateCollection
  fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection
- uid: System.Net.WebSockets.ClientWebSocketOptions.Cookies
  parent: System.Net.WebSockets.ClientWebSocketOptions
  isExternal: false
  name: Cookies
  nameWithType: ClientWebSocketOptions.Cookies
  fullName: System.Net.WebSockets.ClientWebSocketOptions.Cookies
- uid: System.Net.CookieContainer
  parent: System.Net
  isExternal: true
  name: CookieContainer
  nameWithType: CookieContainer
  fullName: System.Net.CookieContainer
- uid: System.Net.WebSockets.ClientWebSocketOptions.Credentials
  parent: System.Net.WebSockets.ClientWebSocketOptions
  isExternal: false
  name: Credentials
  nameWithType: ClientWebSocketOptions.Credentials
  fullName: System.Net.WebSockets.ClientWebSocketOptions.Credentials
- uid: System.Net.ICredentials
  parent: System.Net
  isExternal: true
  name: ICredentials
  nameWithType: ICredentials
  fullName: System.Net.ICredentials
- uid: System.Net.WebSockets.ClientWebSocketOptions.KeepAliveInterval
  parent: System.Net.WebSockets.ClientWebSocketOptions
  isExternal: false
  name: KeepAliveInterval
  nameWithType: ClientWebSocketOptions.KeepAliveInterval
  fullName: System.Net.WebSockets.ClientWebSocketOptions.KeepAliveInterval
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Net.WebSockets.ClientWebSocketOptions.Proxy
  parent: System.Net.WebSockets.ClientWebSocketOptions
  isExternal: false
  name: Proxy
  nameWithType: ClientWebSocketOptions.Proxy
  fullName: System.Net.WebSockets.ClientWebSocketOptions.Proxy
- uid: System.Net.IWebProxy
  parent: System.Net
  isExternal: true
  name: IWebProxy
  nameWithType: IWebProxy
  fullName: System.Net.IWebProxy
- uid: System.Net.WebSockets.ClientWebSocketOptions.SetBuffer(System.Int32,System.Int32)
  parent: System.Net.WebSockets.ClientWebSocketOptions
  isExternal: false
  name: SetBuffer(Int32,Int32)
  nameWithType: ClientWebSocketOptions.SetBuffer(Int32,Int32)
  fullName: System.Net.WebSockets.ClientWebSocketOptions.SetBuffer(Int32,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.WebSockets.ClientWebSocketOptions.SetBuffer(System.Int32,System.Int32,System.ArraySegment{System.Byte})
  parent: System.Net.WebSockets.ClientWebSocketOptions
  isExternal: false
  name: SetBuffer(Int32,Int32,ArraySegment<Byte>)
  nameWithType: ClientWebSocketOptions.SetBuffer(Int32,Int32,ArraySegment<Byte>)
  fullName: System.Net.WebSockets.ClientWebSocketOptions.SetBuffer(Int32,Int32,ArraySegment<Byte>)
- uid: System.ArraySegment{System.Byte}
  parent: System
  isExternal: true
  name: ArraySegment<Byte>
  nameWithType: ArraySegment<Byte>
  fullName: System.ArraySegment<System.Byte>
  spec.csharp:
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: ArraySegment<System.Byte>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.WebSockets.ClientWebSocketOptions.SetRequestHeader(System.String,System.String)
  parent: System.Net.WebSockets.ClientWebSocketOptions
  isExternal: false
  name: SetRequestHeader(String,String)
  nameWithType: ClientWebSocketOptions.SetRequestHeader(String,String)
  fullName: System.Net.WebSockets.ClientWebSocketOptions.SetRequestHeader(String,String)
- uid: System.Net.WebSockets.ClientWebSocketOptions.UseDefaultCredentials
  parent: System.Net.WebSockets.ClientWebSocketOptions
  isExternal: false
  name: UseDefaultCredentials
  nameWithType: ClientWebSocketOptions.UseDefaultCredentials
  fullName: System.Net.WebSockets.ClientWebSocketOptions.UseDefaultCredentials
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.WebSockets.ClientWebSocketOptions.AddSubProtocol*
  parent: System.Net.WebSockets.ClientWebSocketOptions
  isExternal: false
  name: AddSubProtocol
  nameWithType: ClientWebSocketOptions.AddSubProtocol
- uid: System.Net.WebSockets.ClientWebSocketOptions.ClientCertificates*
  parent: System.Net.WebSockets.ClientWebSocketOptions
  isExternal: false
  name: ClientCertificates
  nameWithType: ClientWebSocketOptions.ClientCertificates
- uid: System.Net.WebSockets.ClientWebSocketOptions.Cookies*
  parent: System.Net.WebSockets.ClientWebSocketOptions
  isExternal: false
  name: Cookies
  nameWithType: ClientWebSocketOptions.Cookies
- uid: System.Net.WebSockets.ClientWebSocketOptions.Credentials*
  parent: System.Net.WebSockets.ClientWebSocketOptions
  isExternal: false
  name: Credentials
  nameWithType: ClientWebSocketOptions.Credentials
- uid: System.Net.WebSockets.ClientWebSocketOptions.KeepAliveInterval*
  parent: System.Net.WebSockets.ClientWebSocketOptions
  isExternal: false
  name: KeepAliveInterval
  nameWithType: ClientWebSocketOptions.KeepAliveInterval
- uid: System.Net.WebSockets.ClientWebSocketOptions.Proxy*
  parent: System.Net.WebSockets.ClientWebSocketOptions
  isExternal: false
  name: Proxy
  nameWithType: ClientWebSocketOptions.Proxy
- uid: System.Net.WebSockets.ClientWebSocketOptions.SetBuffer*
  parent: System.Net.WebSockets.ClientWebSocketOptions
  isExternal: false
  name: SetBuffer
  nameWithType: ClientWebSocketOptions.SetBuffer
- uid: System.Net.WebSockets.ClientWebSocketOptions.SetRequestHeader*
  parent: System.Net.WebSockets.ClientWebSocketOptions
  isExternal: false
  name: SetRequestHeader
  nameWithType: ClientWebSocketOptions.SetRequestHeader
- uid: System.Net.WebSockets.ClientWebSocketOptions.UseDefaultCredentials*
  parent: System.Net.WebSockets.ClientWebSocketOptions
  isExternal: false
  name: UseDefaultCredentials
  nameWithType: ClientWebSocketOptions.UseDefaultCredentials
