### YamlMime:ManagedReference
items:
- uid: System.Web.UI.DataSourceView
  id: DataSourceView
  children:
  - System.Web.UI.DataSourceView.#ctor(System.Web.UI.IDataSource,System.String)
  - System.Web.UI.DataSourceView.CanDelete
  - System.Web.UI.DataSourceView.CanExecute(System.String)
  - System.Web.UI.DataSourceView.CanInsert
  - System.Web.UI.DataSourceView.CanPage
  - System.Web.UI.DataSourceView.CanRetrieveTotalRowCount
  - System.Web.UI.DataSourceView.CanSort
  - System.Web.UI.DataSourceView.CanUpdate
  - System.Web.UI.DataSourceView.DataSourceViewChanged
  - System.Web.UI.DataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  - System.Web.UI.DataSourceView.Events
  - System.Web.UI.DataSourceView.ExecuteCommand(System.String,System.Collections.IDictionary,System.Collections.IDictionary)
  - System.Web.UI.DataSourceView.ExecuteCommand(System.String,System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  - System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)
  - System.Web.UI.DataSourceView.ExecuteInsert(System.Collections.IDictionary)
  - System.Web.UI.DataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)
  - System.Web.UI.DataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  - System.Web.UI.DataSourceView.Insert(System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  - System.Web.UI.DataSourceView.Name
  - System.Web.UI.DataSourceView.OnDataSourceViewChanged(System.EventArgs)
  - System.Web.UI.DataSourceView.RaiseUnsupportedCapabilityError(System.Web.UI.DataSourceCapabilities)
  - System.Web.UI.DataSourceView.Select(System.Web.UI.DataSourceSelectArguments,System.Web.UI.DataSourceViewSelectCallback)
  - System.Web.UI.DataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  langs:
  - csharp
  name: DataSourceView
  nameWithType: DataSourceView
  fullName: System.Web.UI.DataSourceView
  type: Class
  summary: "可做為基底類別的所有資料來源檢視類別，其中定義資料來源控制項的功能。"
  remarks: "ASP.NET 支援資料繫結架構，可讓 Web 伺服器控制項繫結至資料一致的方式。 資料繫結控制項，以及協助繫結稱為資料來源控制項的類別會參照 web 伺服器控制項的繫結至資料。 資料來源控制項可以表示任何資料來源︰ 關聯式資料庫、 檔案、 資料流、 商務物件等等。 資料繫結控制項，不論來源或基礎資料的格式一致的方式中的資料來源控制項呈現資料。       您可以使用所提供的資料來源控制項使用 ASP.NET，包括<xref:System.Web.UI.WebControls.SqlDataSource>， <xref:System.Web.UI.WebControls.AccessDataSource>，和<xref:System.Web.UI.WebControls.XmlDataSource>，才能執行大部分的網頁開發工作。</xref:System.Web.UI.WebControls.XmlDataSource> </xref:System.Web.UI.WebControls.AccessDataSource> </xref:System.Web.UI.WebControls.SqlDataSource> 使用基底<xref:System.Web.UI.DataSourceControl>和 DataSourceView 類別，當您想要實作您自己自訂的資料來源控制項。</xref:System.Web.UI.DataSourceControl>       您可以將資料來源控制項的組合視為<xref:System.Web.UI.IDataSource>物件和其相關聯的資料清單，稱為資料來源檢視。</xref:System.Web.UI.IDataSource> DataSourceView 物件所代表之資料的每個清單。 DataSourceView 類別是基底類別的所有資料來源檢視或清單的資料來源控制項相關聯的資料。 資料來源檢視定義的資料來源控制項的功能。 因為基礎資料存放區包含一或多個資料的清單，是一律與一或多個具名的資料來源檢視相關聯資料來源控制項。 資料來源控制項所使用<xref:System.Web.UI.DataSourceControl.GetViewNames%2A>方法來列舉資料來源目前與資料來源控制項相關聯的檢視和<xref:System.Web.UI.DataSourceControl.GetView%2A>依名稱擷取特定資料來源檢視執行個體的方法。</xref:System.Web.UI.DataSourceControl.GetView%2A> </xref:System.Web.UI.DataSourceControl.GetViewNames%2A>       所有的 DataSourceView 物件支援從基礎資料來源使用的資料擷取<xref:System.Web.UI.DataSourceView.ExecuteSelect%2A>方法。</xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> 所有檢視選擇性地都支援一組基本的作業，包括作業，例如<xref:System.Web.UI.DataSourceView.ExecuteInsert%2A>， <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A>，和<xref:System.Web.UI.DataSourceView.ExecuteDelete%2A>。</xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> </xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A> </xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> 資料繫結控制項可以探索資料來源控制項關聯的資料來源中擷取的功能可讓您檢視使用<xref:System.Web.UI.DataSourceControl.GetView%2A>和<xref:System.Web.UI.DataSourceControl.GetViewNames%2A>方法，並在設計階段或執行的階段查詢檢視。</xref:System.Web.UI.DataSourceControl.GetViewNames%2A> </xref:System.Web.UI.DataSourceControl.GetView%2A>"
  example:
  - "The following code example demonstrates how to extend the DataSourceView class to create a strongly typed view class for a data source control. The `CsVDataSourceView` class defines the capabilities of the `CsvDataSource` data source control and provides an implementation for data-bound controls to use data stored in comma-separated value (.csv) files. For more information on the `CsvDataSource` data source control, see the <xref:System.Web.UI.DataSourceControl> class.  \n  \n [!code-cs[Urtue.Samples.Alexkr.CsvDataSource_1#5](~/add/codesnippet/csharp/t-system.web.ui.datasour_1_1.cs)]\n [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#5](~/add/codesnippet/visualbasic/t-system.web.ui.datasour_1_1.vb)]"
  syntax:
    content: public abstract class DataSourceView
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.DataSourceView.#ctor(System.Web.UI.IDataSource,System.String)
  id: '#ctor(System.Web.UI.IDataSource,System.String)'
  parent: System.Web.UI.DataSourceView
  langs:
  - csharp
  name: DataSourceView(IDataSource,String)
  nameWithType: DataSourceView.DataSourceView(IDataSource,String)
  fullName: System.Web.UI.DataSourceView.DataSourceView(IDataSource,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "初始化的新執行個體<xref href=&quot;System.Web.UI.DataSourceView&quot;></xref>類別。"
  syntax:
    content: protected DataSourceView (System.Web.UI.IDataSource owner, string viewName);
    parameters:
    - id: owner
      type: System.Web.UI.IDataSource
      description: "資料來源控制項<xref href=&quot;System.Web.UI.DataSourceView&quot;></xref>相關聯。"
    - id: viewName
      type: System.String
      description: "名稱<xref href=&quot;System.Web.UI.DataSourceView&quot;></xref>物件。"
  overload: System.Web.UI.DataSourceView.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>owner</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>viewName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."
  platform:
  - net462
- uid: System.Web.UI.DataSourceView.CanDelete
  id: CanDelete
  parent: System.Web.UI.DataSourceView
  langs:
  - csharp
  name: CanDelete
  nameWithType: DataSourceView.CanDelete
  fullName: System.Web.UI.DataSourceView.CanDelete
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得值，指出是否<xref href=&quot;System.Web.UI.DataSourceView&quot;></xref>目前相關聯的物件<xref href=&quot;System.Web.UI.DataSourceControl&quot;></xref>物件支援<xref:System.Web.UI.DataSourceView.ExecuteDelete*>作業。</xref:System.Web.UI.DataSourceView.ExecuteDelete*>"
  remarks: "CanDelete 屬性會在適合目前執行的作業是否也反映不僅資料來源控制項的功能。 例如，即使資料來源檢視支援<xref:System.Web.UI.DataSourceView.ExecuteDelete%2A>的一般作業，如果未設定必要的屬性或其他一些資料，CanDelete 屬性會傳回`false`，因為刪除作業將會失敗。</xref:System.Web.UI.DataSourceView.ExecuteDelete%2A>"
  example:
  - "The following code example demonstrates how to override the CanDelete property and the <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> method in a class that extends the <xref:System.Web.UI.DataSourceView> class. This code example is part of a larger example provided for the <xref:System.Web.UI.DataSourceView> class.  \n  \n [!code-cs[Urtue.Samples.Alexkr.CsvDataSource_1#8](~/add/codesnippet/csharp/p-system.web.ui.datasour_3_1.cs)]\n [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#8](~/add/codesnippet/visualbasic/p-system.web.ui.datasour_3_1.vb)]"
  syntax:
    content: public virtual bool CanDelete { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果支援這項作業。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 基底類別實作會傳回<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.DataSourceView.CanDelete*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataSourceView.CanExecute(System.String)
  id: CanExecute(System.String)
  parent: System.Web.UI.DataSourceView
  langs:
  - csharp
  name: CanExecute(String)
  nameWithType: DataSourceView.CanExecute(String)
  fullName: System.Web.UI.DataSourceView.CanExecute(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "決定是否可以執行指定的命令。"
  syntax:
    content: public virtual bool CanExecute (string commandName);
    parameters:
    - id: commandName
      type: System.String
      description: "命令的名稱。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果可以執行命令。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.DataSourceView.CanExecute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataSourceView.CanInsert
  id: CanInsert
  parent: System.Web.UI.DataSourceView
  langs:
  - csharp
  name: CanInsert
  nameWithType: DataSourceView.CanInsert
  fullName: System.Web.UI.DataSourceView.CanInsert
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得值，指出是否<xref href=&quot;System.Web.UI.DataSourceView&quot;></xref>目前相關聯的物件<xref href=&quot;System.Web.UI.DataSourceControl&quot;></xref>物件支援<xref:System.Web.UI.DataSourceView.ExecuteInsert*>作業。</xref:System.Web.UI.DataSourceView.ExecuteInsert*>"
  remarks: "[CanInsert] 屬性，也反映不僅資料來源控制項的功能，是否適合目前執行的作業。 比方說，即使資料來源控制項支援<xref:System.Web.UI.DataSourceView.ExecuteInsert%2A>作業，如果必要的 insert 命令，或未設定其他的資料，[CanInsert] 屬性會傳回`false`，如插入作業將會失敗。</xref:System.Web.UI.DataSourceView.ExecuteInsert%2A>"
  example:
  - "The following code example demonstrates how to override the CanInsert property and the <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> method in a class that extends the <xref:System.Web.UI.DataSourceView> class. This code example is part of a larger example provided for the <xref:System.Web.UI.DataSourceView> class.  \n  \n [!code-cs[Urtue.Samples.Alexkr.CsvDataSource_1#9](~/add/codesnippet/csharp/p-system.web.ui.datasour_2_1.cs)]\n [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#9](~/add/codesnippet/visualbasic/p-system.web.ui.datasour_2_1.vb)]"
  syntax:
    content: public virtual bool CanInsert { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果支援這項作業。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 基底類別實作會傳回<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.DataSourceView.CanInsert*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataSourceView.CanPage
  id: CanPage
  parent: System.Web.UI.DataSourceView
  langs:
  - csharp
  name: CanPage
  nameWithType: DataSourceView.CanPage
  fullName: System.Web.UI.DataSourceView.CanPage
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得值，指出是否<xref href=&quot;System.Web.UI.DataSourceView&quot;></xref>目前相關聯的物件<xref href=&quot;System.Web.UI.DataSourceControl&quot;></xref>物件支援對擷取的資料進行分頁<xref:System.Web.UI.DataSourceView.ExecuteSelect*>方法。</xref:System.Web.UI.DataSourceView.ExecuteSelect*>"
  remarks: "資料繫結控制項可以藉由加入要求分頁<xref:System.Web.UI.DataSourceCapabilities>欄位設為<xref:System.Web.UI.DataSourceSelectArguments>物件傳遞至<xref:System.Web.UI.DataSourceView.ExecuteSelect%2A>方法。</xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> </xref:System.Web.UI.DataSourceSelectArguments> </xref:System.Web.UI.DataSourceCapabilities> 如果資料繫結控制項要求分頁，但 CanPage 屬性會傳回`false`，資料來源檢視就會擲回例外狀況。"
  syntax:
    content: public virtual bool CanPage { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果支援這項作業。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 基底類別實作會傳回<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.DataSourceView.CanPage*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataSourceView.CanRetrieveTotalRowCount
  id: CanRetrieveTotalRowCount
  parent: System.Web.UI.DataSourceView
  langs:
  - csharp
  name: CanRetrieveTotalRowCount
  nameWithType: DataSourceView.CanRetrieveTotalRowCount
  fullName: System.Web.UI.DataSourceView.CanRetrieveTotalRowCount
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得值，指出是否<xref href=&quot;System.Web.UI.DataSourceView&quot;></xref>目前相關聯的物件<xref href=&quot;System.Web.UI.DataSourceControl&quot;></xref>物件支援擷取資料列，而不是資料的總數。"
  remarks: "資料繫結控制項可以藉由新增要求總計資料列計數<xref:System.Web.UI.DataSourceCapabilities?displayProperty=fullName>欄位設為<xref:System.Web.UI.DataSourceSelectArguments?displayProperty=fullName>物件傳遞至<xref:System.Web.UI.DataSourceView.ExecuteSelect%2A>方法。</xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> </xref:System.Web.UI.DataSourceSelectArguments?displayProperty=fullName> </xref:System.Web.UI.DataSourceCapabilities?displayProperty=fullName> 如果資料繫結控制項要求總計資料列計數，但 CanRetrieveTotalRowCount 屬性會傳回`false`，資料來源檢視就會擲回例外狀況。"
  syntax:
    content: public virtual bool CanRetrieveTotalRowCount { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果支援這項作業。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 基底類別實作會傳回<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.DataSourceView.CanRetrieveTotalRowCount*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataSourceView.CanSort
  id: CanSort
  parent: System.Web.UI.DataSourceView
  langs:
  - csharp
  name: CanSort
  nameWithType: DataSourceView.CanSort
  fullName: System.Web.UI.DataSourceView.CanSort
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得值，指出是否<xref href=&quot;System.Web.UI.DataSourceView&quot;></xref>目前相關聯的物件<xref href=&quot;System.Web.UI.DataSourceControl&quot;></xref>物件支援基礎資料來源的排序的檢視。"
  remarks: "資料繫結控制項可以要求加入排序<xref:System.Web.UI.DataSourceCapabilities>欄位設為<xref:System.Web.UI.DataSourceSelectArguments>物件傳遞至<xref:System.Web.UI.DataSourceView.ExecuteSelect%2A>方法。</xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> </xref:System.Web.UI.DataSourceSelectArguments> </xref:System.Web.UI.DataSourceCapabilities> 如果資料繫結控制要求排序，但 CanSort 屬性會傳回`false`，資料來源檢視就會擲回例外狀況。"
  example:
  - "The following code example demonstrates how to override the CanSort property in a class that extends the <xref:System.Web.UI.DataSourceView> class. This code example is part of a larger example provided for the <xref:System.Web.UI.DataSourceView> class.  \n  \n [!code-cs[Urtue.Samples.Alexkr.CsvDataSource_1#7](~/add/codesnippet/csharp/p-system.web.ui.datasour_1_1.cs)]\n [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#7](~/add/codesnippet/visualbasic/p-system.web.ui.datasour_1_1.vb)]"
  syntax:
    content: public virtual bool CanSort { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果支援這項作業。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設實作會傳回<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.DataSourceView.CanSort*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataSourceView.CanUpdate
  id: CanUpdate
  parent: System.Web.UI.DataSourceView
  langs:
  - csharp
  name: CanUpdate
  nameWithType: DataSourceView.CanUpdate
  fullName: System.Web.UI.DataSourceView.CanUpdate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得值，指出是否<xref href=&quot;System.Web.UI.DataSourceView&quot;></xref>目前相關聯的物件<xref href=&quot;System.Web.UI.DataSourceControl&quot;></xref>物件支援<xref:System.Web.UI.DataSourceView.ExecuteUpdate*>作業。</xref:System.Web.UI.DataSourceView.ExecuteUpdate*>"
  remarks: "CanUpdate 屬性會在適合目前執行的作業是否也反映不僅資料來源控制項的功能。 例如，即使在資料繫結控制項支援<xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A>作業，如果未設定必要的更新命令或一些其他資料，CanUpdate 屬性會傳回`false`，因為更新作業將會失敗。</xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A>"
  example:
  - "The following code example demonstrates how to override the CanUpdate property and the <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A> method in a class that extends the <xref:System.Web.UI.DataSourceView> class. This code example is part of a larger example provided for the <xref:System.Web.UI.DataSourceView> class.  \n  \n [!code-cs[Urtue.Samples.Alexkr.CsvDataSource_1#10](~/add/codesnippet/csharp/p-system.web.ui.datasour_0_1.cs)]\n [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#10](~/add/codesnippet/visualbasic/p-system.web.ui.datasour_0_1.vb)]"
  syntax:
    content: public virtual bool CanUpdate { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果支援這項作業。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設實作會傳回<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.DataSourceView.CanUpdate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataSourceView.DataSourceViewChanged
  id: DataSourceViewChanged
  parent: System.Web.UI.DataSourceView
  langs:
  - csharp
  name: DataSourceViewChanged
  nameWithType: DataSourceView.DataSourceViewChanged
  fullName: System.Web.UI.DataSourceView.DataSourceViewChanged
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "資料來源檢視變更時發生。"
  remarks: "資料來源檢視的變更可能是因為它的屬性，或變更資料，因為資料來源檢視所執行的資料作業的值中的變更。       如需處理事件的詳細資訊，請參閱[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。"
  syntax:
    content: public event EventHandler DataSourceViewChanged;
    return:
      type: System.EventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  id: Delete(System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  parent: System.Web.UI.DataSourceView
  langs:
  - csharp
  name: Delete(IDictionary,IDictionary,DataSourceViewOperationCallback)
  nameWithType: DataSourceView.Delete(IDictionary,IDictionary,DataSourceViewOperationCallback)
  fullName: System.Web.UI.DataSourceView.Delete(IDictionary,IDictionary,DataSourceViewOperationCallback)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "執行非同步刪除作業在清單上的資料， <xref href=&quot;System.Web.UI.DataSourceView&quot;> </xref>物件表示。"
  remarks: "Delete 方法就是所有的資料來源檢視物件的非同步資料刪除介面。 Delete 方法呼叫<xref:System.Web.UI.DataSourceView.ExecuteDelete%2A>方法使用任何`keys`和`oldValues`提供參數值。</xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> `callback`參數是一種委派給資料來源的資料繫結控制項檢視中，用來告知資料繫結負責控制何時<xref:System.Web.UI.DataSourceView.ExecuteDelete%2A>作業已完成。</xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> 此方法會使用的參數<xref:System.Web.UI.DataSourceViewOperationCallback>傳回受影響的記錄並且將任何數目的委派<xref:System.Exception>，所擲回的例外狀況<xref:System.Web.UI.DataSourceView.ExecuteDelete%2A>方法。</xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> </xref:System.Exception> </xref:System.Web.UI.DataSourceViewOperationCallback>"
  syntax:
    content: public virtual void Delete (System.Collections.IDictionary keys, System.Collections.IDictionary oldValues, System.Web.UI.DataSourceViewOperationCallback callback);
    parameters:
    - id: keys
      type: System.Collections.IDictionary
      description: "<xref:System.Collections.IDictionary>的物件或資料列的索引鍵來刪除<xref:System.Web.UI.DataSourceView.ExecuteDelete*>作業。</xref:System.Web.UI.DataSourceView.ExecuteDelete*> </xref:System.Collections.IDictionary>"
    - id: oldValues
      type: System.Collections.IDictionary
      description: "<xref:System.Collections.IDictionary>表示資料元素和其原始值的名稱/值組。</xref:System.Collections.IDictionary>"
    - id: callback
      type: System.Web.UI.DataSourceViewOperationCallback
      description: "A <xref href=&quot;System.Web.UI.DataSourceViewOperationCallback&quot;> </xref>使用非同步作業完成時通知資料繫結控制項的委派。"
  overload: System.Web.UI.DataSourceView.Delete*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <xref href=&quot;System.Web.UI.DataSourceViewOperationCallback&quot;></xref> supplied is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.DataSourceView.Events
  id: Events
  parent: System.Web.UI.DataSourceView
  langs:
  - csharp
  name: Events
  nameWithType: DataSourceView.Events
  fullName: System.Web.UI.DataSourceView.Events
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得資料來源檢視的事件處理常式委派。"
  remarks: "這個屬性的型別是<xref:System.ComponentModel.EventHandlerList>，使用線性搜尋演算法來尋找項目清單中的委派。</xref:System.ComponentModel.EventHandlerList> 使用大量的項目時，線性搜尋演算法沒有效率。 因此，當您有大型的清單，尋找具有此屬性的項目將會變慢。"
  syntax:
    content: protected System.ComponentModel.EventHandlerList Events { get; }
    return:
      type: System.ComponentModel.EventHandlerList
      description: "事件處理常式委派的清單。"
  overload: System.Web.UI.DataSourceView.Events*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataSourceView.ExecuteCommand(System.String,System.Collections.IDictionary,System.Collections.IDictionary)
  id: ExecuteCommand(System.String,System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.DataSourceView
  langs:
  - csharp
  name: ExecuteCommand(String,IDictionary,IDictionary)
  nameWithType: DataSourceView.ExecuteCommand(String,IDictionary,IDictionary)
  fullName: System.Web.UI.DataSourceView.ExecuteCommand(String,IDictionary,IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "執行指定的命令。"
  syntax:
    content: protected virtual int ExecuteCommand (string commandName, System.Collections.IDictionary keys, System.Collections.IDictionary values);
    parameters:
    - id: commandName
      type: System.String
      description: "命令的名稱。"
    - id: keys
      type: System.Collections.IDictionary
      description: "物件索引鍵或加以處理的資料列索引鍵的字典。"
    - id: values
      type: System.Collections.IDictionary
      description: "表示資料元素，其值的名稱/值組的字典。"
    return:
      type: System.Int32
      description: "作業所影響的項目數目。"
  overload: System.Web.UI.DataSourceView.ExecuteCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataSourceView.ExecuteCommand(System.String,System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  id: ExecuteCommand(System.String,System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  parent: System.Web.UI.DataSourceView
  langs:
  - csharp
  name: ExecuteCommand(String,IDictionary,IDictionary,DataSourceViewOperationCallback)
  nameWithType: DataSourceView.ExecuteCommand(String,IDictionary,IDictionary,DataSourceViewOperationCallback)
  fullName: System.Web.UI.DataSourceView.ExecuteCommand(String,IDictionary,IDictionary,DataSourceViewOperationCallback)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "執行指定的命令。"
  remarks: "這個方法沒有傳回值。"
  syntax:
    content: public virtual void ExecuteCommand (string commandName, System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Web.UI.DataSourceViewOperationCallback callback);
    parameters:
    - id: commandName
      type: System.String
      description: "命令的名稱。"
    - id: keys
      type: System.Collections.IDictionary
      description: "物件索引鍵或加以處理的資料列索引鍵的字典。"
    - id: values
      type: System.Collections.IDictionary
      description: "表示資料元素，其值的名稱/值組的字典。"
    - id: callback
      type: System.Web.UI.DataSourceViewOperationCallback
      description: "A <xref href=&quot;System.Web.UI.DataSourceViewOperationCallback&quot;></xref> object."
  overload: System.Web.UI.DataSourceView.ExecuteCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)
  id: ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.DataSourceView
  langs:
  - csharp
  name: ExecuteDelete(IDictionary,IDictionary)
  nameWithType: DataSourceView.ExecuteDelete(IDictionary,IDictionary)
  fullName: System.Web.UI.DataSourceView.ExecuteDelete(IDictionary,IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "執行刪除作業在清單上的資料， <xref href=&quot;System.Web.UI.DataSourceView&quot;> </xref>物件表示。"
  remarks: "資料繫結控制項可以判斷是否 ExecuteDelete 作業支援的資料來源控制項擷取<xref:System.Web.UI.DataSourceView>物件使用<xref:System.Web.UI.DataSourceControl.GetView%2A?displayProperty=fullName>方法，並檢查<xref:System.Web.UI.DataSourceView.CanDelete%2A>屬性。</xref:System.Web.UI.DataSourceView.CanDelete%2A> </xref:System.Web.UI.DataSourceControl.GetView%2A?displayProperty=fullName> </xref:System.Web.UI.DataSourceView>       `keys`參數代表要刪除的資料物件或資料列索引鍵。 代表關聯式資料，例如資料來源的<xref:System.Web.UI.WebControls.SqlDataSource>控制項，`keys`參數是資料庫主要金鑰的集合。</xref:System.Web.UI.WebControls.SqlDataSource> 在其他情況下，`keys`參數是名稱/值組的集合，而且用來篩選資料的清單。 會刪除任何資料比對名稱/值組。      > [!NOTE] ><xref:System.Web.UI.DataSourceView>類別的預設實作會擲回<xref:System.NotSupportedException>例外狀況。</xref:System.NotSupportedException> </xref:System.Web.UI.DataSourceView> 如果您擴充<xref:System.Web.UI.DataSourceView>類別，覆寫 ExecuteDelete 方法，如果您的類別支援基礎資料存放區刪除。</xref:System.Web.UI.DataSourceView>"
  example:
  - "The following code example demonstrates how a class that extends the <xref:System.Web.UI.DataSourceView> class can override the <xref:System.Web.UI.DataSourceView.CanDelete%2A> property and the ExecuteDelete method. This code example is part of a larger example provided for the <xref:System.Web.UI.DataSourceView> class.  \n  \n [!code-cs[Urtue.Samples.Alexkr.CsvDataSource_1#8](~/add/codesnippet/csharp/84991e4a-bbbd-47a3-bfea-_1.cs)]\n [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#8](~/add/codesnippet/visualbasic/84991e4a-bbbd-47a3-bfea-_1.vb)]"
  syntax:
    content: protected virtual int ExecuteDelete (System.Collections.IDictionary keys, System.Collections.IDictionary oldValues);
    parameters:
    - id: keys
      type: System.Collections.IDictionary
      description: "<xref:System.Collections.IDictionary>ExecuteDelete 作業所要刪除的物件或資料列索引鍵。</xref:System.Collections.IDictionary>"
    - id: oldValues
      type: System.Collections.IDictionary
      description: "<xref:System.Collections.IDictionary>表示資料元素和其原始值的名稱/值組。</xref:System.Collections.IDictionary>"
    return:
      type: System.Int32
      description: "已從基礎資料存放區刪除的項目數目。"
  overload: System.Web.UI.DataSourceView.ExecuteDelete*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "不支援 ExecuteDelete 作業<xref href=&quot;System.Web.UI.DataSourceView&quot;> </xref>。"
  platform:
  - net462
- uid: System.Web.UI.DataSourceView.ExecuteInsert(System.Collections.IDictionary)
  id: ExecuteInsert(System.Collections.IDictionary)
  parent: System.Web.UI.DataSourceView
  langs:
  - csharp
  name: ExecuteInsert(IDictionary)
  nameWithType: DataSourceView.ExecuteInsert(IDictionary)
  fullName: System.Web.UI.DataSourceView.ExecuteInsert(IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "執行插入作業清單上的資料， <xref href=&quot;System.Web.UI.DataSourceView&quot;> </xref>物件表示。"
  remarks: "資料繫結控制項可以判斷是否 ExecuteInsert 作業支援的資料來源控制項擷取<xref:System.Web.UI.DataSourceView>物件使用<xref:System.Web.UI.DataSourceControl.GetView%2A>方法，並檢查<xref:System.Web.UI.DataSourceView.CanInsert%2A>屬性。</xref:System.Web.UI.DataSourceView.CanInsert%2A> </xref:System.Web.UI.DataSourceControl.GetView%2A> </xref:System.Web.UI.DataSourceView>       `values`參數是一組名稱/值組表示資料行或欄位和要插入的對應值。      > [!NOTE] ><xref:System.Web.UI.DataSourceView>類別的預設實作會擲回<xref:System.NotSupportedException>例外狀況。</xref:System.NotSupportedException> </xref:System.Web.UI.DataSourceView> 如果您擴充<xref:System.Web.UI.DataSourceView>類別，覆寫 ExecuteInsert 方法，如果您的類別支援基礎資料存放區的插入。</xref:System.Web.UI.DataSourceView>"
  example:
  - "The following code example demonstrates how a class that extends the <xref:System.Web.UI.DataSourceView> class can override the <xref:System.Web.UI.DataSourceView.CanInsert%2A> property and the ExecuteInsert method. This code example is part of a larger example provided for the <xref:System.Web.UI.DataSourceView> class.  \n  \n [!code-cs[Urtue.Samples.Alexkr.CsvDataSource_1#9](~/add/codesnippet/csharp/m-system.web.ui.datasour_0_1.cs)]\n [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#9](~/add/codesnippet/visualbasic/m-system.web.ui.datasour_0_1.vb)]"
  syntax:
    content: protected virtual int ExecuteInsert (System.Collections.IDictionary values);
    parameters:
    - id: values
      type: System.Collections.IDictionary
      description: "<xref:System.Collections.IDictionary>的插入作業期間使用的名稱/值組。</xref:System.Collections.IDictionary>"
    return:
      type: System.Int32
      description: "已插入的基礎資料存放區的項目數目。"
  overload: System.Web.UI.DataSourceView.ExecuteInsert*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "不支援 ExecuteInsert 作業<xref href=&quot;System.Web.UI.DataSourceView&quot;> </xref>。"
  platform:
  - net462
- uid: System.Web.UI.DataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)
  id: ExecuteSelect(System.Web.UI.DataSourceSelectArguments)
  parent: System.Web.UI.DataSourceView
  langs:
  - csharp
  name: ExecuteSelect(DataSourceSelectArguments)
  nameWithType: DataSourceView.ExecuteSelect(DataSourceSelectArguments)
  fullName: System.Web.UI.DataSourceView.ExecuteSelect(DataSourceSelectArguments)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "從基礎資料儲存區取得資料的清單。"
  remarks: "可用方法會呼叫以從基礎資料存放區擷取資料，並將其做為傳回<xref:System.Collections.IEnumerable>物件。</xref:System.Collections.IEnumerable> 所有資料來源控制項都支援從其基礎資料存放區中，擷取資料，即使不支援其他作業，例如插入和排序。 資料繫結控制項可以要求一份資料，隨時可能是因為<xref:System.Web.UI.IDataSource.DataSourceChanged>事件或<xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A>呼叫方法時，必須依需求執行資料擷取。</xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> </xref:System.Web.UI.IDataSource.DataSourceChanged>"
  example:
  - "The following code example demonstrates how to override the ExecuteSelect method in a class that extends the <xref:System.Web.UI.DataSourceView> class. The `CsvDataSourceView` opens a comma-separated value (.csv) file, parses it line by line, and creates a <xref:System.Data.DataTable> object and a <xref:System.Data.DataView> object to hold the data in memory. Finally, a sort expression is applied if one is supplied by the <xref:System.Web.UI.DataSourceSelectArguments> object, and the <xref:System.Data.DataView> object is returned as an <xref:System.Collections.IEnumerable> instance. This code example is part of a larger example provided for the <xref:System.Web.UI.DataSourceView> class.  \n  \n [!code-cs[Urtue.Samples.Alexkr.CsvDataSource_1#6](~/add/codesnippet/csharp/9907e30e-e760-42a4-aba2-_1.cs)]\n [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#6](~/add/codesnippet/visualbasic/9907e30e-e760-42a4-aba2-_1.vb)]"
  syntax:
    content: protected abstract System.Collections.IEnumerable ExecuteSelect (System.Web.UI.DataSourceSelectArguments arguments);
    parameters:
    - id: arguments
      type: System.Web.UI.DataSourceSelectArguments
      description: "A <xref href=&quot;System.Web.UI.DataSourceSelectArguments&quot;> </xref> ，用來要求擷取基本的資料以外的資料作業。"
    return:
      type: System.Collections.IEnumerable
      description: "<xref:System.Collections.IEnumerable>從基礎資料存放區資料的清單。</xref:System.Collections.IEnumerable>"
  overload: System.Web.UI.DataSourceView.ExecuteSelect*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  id: ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.DataSourceView
  langs:
  - csharp
  name: ExecuteUpdate(IDictionary,IDictionary,IDictionary)
  nameWithType: DataSourceView.ExecuteUpdate(IDictionary,IDictionary,IDictionary)
  fullName: System.Web.UI.DataSourceView.ExecuteUpdate(IDictionary,IDictionary,IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "執行更新作業清單上的資料， <xref href=&quot;System.Web.UI.DataSourceView&quot;> </xref>物件表示。"
  remarks: "資料繫結控制項可以判斷是否 ExecuteUpdate 作業支援的資料來源控制項使用<xref:System.Web.UI.DataSourceControl.GetView%2A?displayProperty=fullName>方法來擷取<xref:System.Web.UI.DataSourceView>物件並檢查值<xref:System.Web.UI.DataSourceView.CanUpdate%2A>屬性。</xref:System.Web.UI.DataSourceView.CanUpdate%2A> </xref:System.Web.UI.DataSourceView> </xref:System.Web.UI.DataSourceControl.GetView%2A?displayProperty=fullName>       `keys`參數表示要更新之資料的物件或資料列索引鍵。 代表關聯式資料，例如資料來源的<xref:System.Web.UI.WebControls.SqlDataSource>控制項，`keys`參數是資料庫主要金鑰的集合。</xref:System.Web.UI.WebControls.SqlDataSource> 在其他情況下，`keys`參數是名稱/值組的集合，而且用來篩選資料的清單。 比對名稱/值組的任何資料的中找到的值來更新`values`參數，是一組名稱/值組表示的現有欄位或資料行的新值。      > [!NOTE] ><xref:System.Web.UI.DataSourceView>類別的預設實作會擲回<xref:System.NotSupportedException>例外狀況。</xref:System.NotSupportedException> </xref:System.Web.UI.DataSourceView> 如果您擴充<xref:System.Web.UI.DataSourceView>類別中，如果您的類別支援基礎資料存放區中的資料更新，請覆寫 ExecuteUpdate 方法。</xref:System.Web.UI.DataSourceView>"
  example:
  - "The following code example demonstrates how a class that extends the <xref:System.Web.UI.DataSourceView> class can override the <xref:System.Web.UI.DataSourceView.CanUpdate%2A> property and the ExecuteUpdate method. This code example is part of a larger example provided for the <xref:System.Web.UI.DataSourceView> class.  \n  \n [!code-cs[Urtue.Samples.Alexkr.CsvDataSource_1#10](~/add/codesnippet/csharp/41646def-d513-4cd2-ab48-_1.cs)]\n [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#10](~/add/codesnippet/visualbasic/41646def-d513-4cd2-ab48-_1.vb)]"
  syntax:
    content: protected virtual int ExecuteUpdate (System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues);
    parameters:
    - id: keys
      type: System.Collections.IDictionary
      description: "<xref:System.Collections.IDictionary>的更新作業所更新的物件或資料列索引鍵。</xref:System.Collections.IDictionary>"
    - id: values
      type: System.Collections.IDictionary
      description: "<xref:System.Collections.IDictionary>表示資料元素和其新值的名稱/值組。</xref:System.Collections.IDictionary>"
    - id: oldValues
      type: System.Collections.IDictionary
      description: "<xref:System.Collections.IDictionary>表示資料元素和其原始值的名稱/值組。</xref:System.Collections.IDictionary>"
    return:
      type: System.Int32
      description: "已更新的基礎資料存放區中的項目數目。"
  overload: System.Web.UI.DataSourceView.ExecuteUpdate*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "ExecuteUpdate 作業不支援<xref href=&quot;System.Web.UI.DataSourceView&quot;> </xref>。"
  platform:
  - net462
- uid: System.Web.UI.DataSourceView.Insert(System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  id: Insert(System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  parent: System.Web.UI.DataSourceView
  langs:
  - csharp
  name: Insert(IDictionary,DataSourceViewOperationCallback)
  nameWithType: DataSourceView.Insert(IDictionary,DataSourceViewOperationCallback)
  fullName: System.Web.UI.DataSourceView.Insert(IDictionary,DataSourceViewOperationCallback)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "執行非同步的插入作業清單上的資料， <xref href=&quot;System.Web.UI.DataSourceView&quot;> </xref>物件表示。"
  remarks: "Insert 方法就是所有的資料來源檢視物件的非同步資料插入介面。 Insert 方法呼叫<xref:System.Web.UI.DataSourceView.ExecuteInsert%2A>方法使用任何`values`提供。</xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> `callback`參數是一種委派給資料來源的資料繫結控制項檢視中，用來告知資料繫結負責控制何時<xref:System.Web.UI.DataSourceView.ExecuteInsert%2A>作業已完成。</xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> 此方法會使用的參數<xref:System.Web.UI.DataSourceViewOperationCallback>傳回受影響的記錄並且將任何數目的委派<xref:System.Exception>，所擲回的例外狀況<xref:System.Web.UI.DataSourceView.ExecuteInsert%2A>方法呼叫。</xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> </xref:System.Exception> </xref:System.Web.UI.DataSourceViewOperationCallback>"
  syntax:
    content: public virtual void Insert (System.Collections.IDictionary values, System.Web.UI.DataSourceViewOperationCallback callback);
    parameters:
    - id: values
      type: System.Collections.IDictionary
      description: "<xref:System.Collections.IDictionary>的插入作業期間使用的名稱/值組。</xref:System.Collections.IDictionary>"
    - id: callback
      type: System.Web.UI.DataSourceViewOperationCallback
      description: "A <xref href=&quot;System.Web.UI.DataSourceViewOperationCallback&quot;> </xref>使用非同步作業完成時通知資料繫結控制項的委派。"
  overload: System.Web.UI.DataSourceView.Insert*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <xref href=&quot;System.Web.UI.DataSourceViewOperationCallback&quot;></xref> supplied is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.DataSourceView.Name
  id: Name
  parent: System.Web.UI.DataSourceView
  langs:
  - csharp
  name: Name
  nameWithType: DataSourceView.Name
  fullName: System.Web.UI.DataSourceView.Name
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得資料來源檢視的名稱。"
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "名稱<xref href=&quot;System.Web.UI.DataSourceView&quot;> </xref>，如果有的話。 預設值是&lt;xref:System.String.Empty?displayProperty=fullName&gt;。"
  overload: System.Web.UI.DataSourceView.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataSourceView.OnDataSourceViewChanged(System.EventArgs)
  id: OnDataSourceViewChanged(System.EventArgs)
  parent: System.Web.UI.DataSourceView
  langs:
  - csharp
  name: OnDataSourceViewChanged(EventArgs)
  nameWithType: DataSourceView.OnDataSourceViewChanged(EventArgs)
  fullName: System.Web.UI.DataSourceView.OnDataSourceViewChanged(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "引發<xref href=&quot;System.Web.UI.DataSourceView.DataSourceViewChanged&quot;></xref>事件。"
  remarks: "OnDataSourceViewChanged 方法通知資料繫結控制項，基礎資料來源已變更，並應該重新繫結控制項，並執行任何所需的工作。 一般而言，當資料來源檢視的屬性已經變更時，會呼叫 OnDataSourceViewChanged 方法。       引發事件會透過委派事件處理常式叫用。 如需詳細資訊，請參閱[NIB︰ 引發事件](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)。       OnDataSourceViewChanged 方法也允許衍生的類別處理事件，而不用附加委派。 這是處理衍生類別中的事件的慣用的技巧。"
  syntax:
    content: protected virtual void OnDataSourceViewChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>包含事件資料。</xref:System.EventArgs>"
  overload: System.Web.UI.DataSourceView.OnDataSourceViewChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataSourceView.RaiseUnsupportedCapabilityError(System.Web.UI.DataSourceCapabilities)
  id: RaiseUnsupportedCapabilityError(System.Web.UI.DataSourceCapabilities)
  parent: System.Web.UI.DataSourceView
  langs:
  - csharp
  name: RaiseUnsupportedCapabilityError(DataSourceCapabilities)
  nameWithType: DataSourceView.RaiseUnsupportedCapabilityError(DataSourceCapabilities)
  fullName: System.Web.UI.DataSourceView.RaiseUnsupportedCapabilityError(DataSourceCapabilities)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "由呼叫<> *> 方法來比較要求的功能<> *> 針對檢視支援的作業。"
  remarks: "資料來源檢視會使用 RaiseUnsupportedCapabilityError 方法來檢查每個要求的資料繫結控制項所代表的功能<xref:System.Web.UI.DataSourceSelectArguments>物件傳遞至<xref:System.Web.UI.DataSourceView.Select%2A>方法，並比較它的功能，支援的資料來源檢視。</xref:System.Web.UI.DataSourceView.Select%2A> </xref:System.Web.UI.DataSourceSelectArguments>"
  syntax:
    content: protected virtual void RaiseUnsupportedCapabilityError (System.Web.UI.DataSourceCapabilities capability);
    parameters:
    - id: capability
      type: System.Web.UI.DataSourceCapabilities
      description: "其中一個<xref href=&quot;System.Web.UI.DataSourceCapabilities&quot;></xref>檢視支援的功能進行比較的值。"
  overload: System.Web.UI.DataSourceView.RaiseUnsupportedCapabilityError*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "資料來源檢視不支援指定的資料來源功能。"
  platform:
  - net462
- uid: System.Web.UI.DataSourceView.Select(System.Web.UI.DataSourceSelectArguments,System.Web.UI.DataSourceViewSelectCallback)
  id: Select(System.Web.UI.DataSourceSelectArguments,System.Web.UI.DataSourceViewSelectCallback)
  parent: System.Web.UI.DataSourceView
  langs:
  - csharp
  name: Select(DataSourceSelectArguments,DataSourceViewSelectCallback)
  nameWithType: DataSourceView.Select(DataSourceSelectArguments,DataSourceViewSelectCallback)
  fullName: System.Web.UI.DataSourceView.Select(DataSourceSelectArguments,DataSourceViewSelectCallback)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "以非同步方式從基礎資料存放區取得資料的清單。"
  remarks: "Select 方法就是所有的資料來源檢視物件的非同步資料擷取介面。 Select 方法呼叫<xref:System.Web.UI.DataSourceView.ExecuteSelect%2A>方法，傳遞任何<xref:System.Web.UI.DataSourceSelectArguments>提供。</xref:System.Web.UI.DataSourceSelectArguments> </xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> `callback`參數是一種委派給資料來源的資料繫結控制項檢視中，用來告知資料繫結負責控制何時<xref:System.Web.UI.DataSourceView.ExecuteSelect%2A>作業已完成。</xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> 所傳回的資料<xref:System.Web.UI.DataSourceView.ExecuteSelect%2A>呼叫的參數中傳回<xref:System.Web.UI.DataSourceViewSelectCallback>委派。</xref:System.Web.UI.DataSourceViewSelectCallback> </xref:System.Web.UI.DataSourceView.ExecuteSelect%2A>"
  syntax:
    content: public virtual void Select (System.Web.UI.DataSourceSelectArguments arguments, System.Web.UI.DataSourceViewSelectCallback callback);
    parameters:
    - id: arguments
      type: System.Web.UI.DataSourceSelectArguments
      description: "A <xref href=&quot;System.Web.UI.DataSourceSelectArguments&quot;> </xref> ，用來要求擷取基本的資料以外的資料作業。"
    - id: callback
      type: System.Web.UI.DataSourceViewSelectCallback
      description: "A <xref href=&quot;System.Web.UI.DataSourceViewSelectCallback&quot;> </xref>使用非同步作業完成時通知資料繫結控制項的委派。"
  overload: System.Web.UI.DataSourceView.Select*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <xref href=&quot;System.Web.UI.DataSourceViewSelectCallback&quot;></xref> supplied is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.DataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  id: Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  parent: System.Web.UI.DataSourceView
  langs:
  - csharp
  name: Update(IDictionary,IDictionary,IDictionary,DataSourceViewOperationCallback)
  nameWithType: DataSourceView.Update(IDictionary,IDictionary,IDictionary,DataSourceViewOperationCallback)
  fullName: System.Web.UI.DataSourceView.Update(IDictionary,IDictionary,IDictionary,DataSourceViewOperationCallback)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "執行非同步的更新作業清單上的資料， <xref href=&quot;System.Web.UI.DataSourceView&quot;> </xref>物件表示。"
  remarks: "更新方法就是所有的資料來源檢視物件的非同步資料修改介面。 更新方法呼叫<xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A>方法使用任何`keys`， `values`，和`oldValues`提供參數值。</xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A> `callback`參數是一種委派給資料來源的資料繫結控制項檢視中，用來告知資料繫結負責控制何時<xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A>作業已完成。</xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A> 此方法會使用的參數<xref:System.Web.UI.DataSourceViewOperationCallback>傳回受影響的記錄並且將任何數目的委派<xref:System.Exception>，所擲回的例外狀況<xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A>呼叫。</xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A> </xref:System.Exception> </xref:System.Web.UI.DataSourceViewOperationCallback>"
  syntax:
    content: public virtual void Update (System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues, System.Web.UI.DataSourceViewOperationCallback callback);
    parameters:
    - id: keys
      type: System.Collections.IDictionary
      description: "<xref:System.Collections.IDictionary>的更新作業所更新的物件或資料列索引鍵。</xref:System.Collections.IDictionary>"
    - id: values
      type: System.Collections.IDictionary
      description: "<xref:System.Collections.IDictionary>表示資料元素和其新值的名稱/值組。</xref:System.Collections.IDictionary>"
    - id: oldValues
      type: System.Collections.IDictionary
      description: "<xref:System.Collections.IDictionary>表示資料元素和其原始值的名稱/值組。</xref:System.Collections.IDictionary>"
    - id: callback
      type: System.Web.UI.DataSourceViewOperationCallback
      description: "A <xref href=&quot;System.Web.UI.DataSourceViewOperationCallback&quot;> </xref>使用非同步作業完成時通知資料繫結控制項的委派。"
  overload: System.Web.UI.DataSourceView.Update*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <xref href=&quot;System.Web.UI.DataSourceViewOperationCallback&quot;></xref> supplied is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Web.UI.DataSourceView.#ctor(System.Web.UI.IDataSource,System.String)
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: DataSourceView(IDataSource,String)
  nameWithType: DataSourceView.DataSourceView(IDataSource,String)
  fullName: System.Web.UI.DataSourceView.DataSourceView(IDataSource,String)
- uid: System.Web.UI.IDataSource
  parent: System.Web.UI
  isExternal: false
  name: IDataSource
  nameWithType: IDataSource
  fullName: System.Web.UI.IDataSource
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.DataSourceView.CanDelete
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: CanDelete
  nameWithType: DataSourceView.CanDelete
  fullName: System.Web.UI.DataSourceView.CanDelete
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.DataSourceView.CanExecute(System.String)
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: CanExecute(String)
  nameWithType: DataSourceView.CanExecute(String)
  fullName: System.Web.UI.DataSourceView.CanExecute(String)
- uid: System.Web.UI.DataSourceView.CanInsert
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: CanInsert
  nameWithType: DataSourceView.CanInsert
  fullName: System.Web.UI.DataSourceView.CanInsert
- uid: System.Web.UI.DataSourceView.CanPage
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: CanPage
  nameWithType: DataSourceView.CanPage
  fullName: System.Web.UI.DataSourceView.CanPage
- uid: System.Web.UI.DataSourceView.CanRetrieveTotalRowCount
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: CanRetrieveTotalRowCount
  nameWithType: DataSourceView.CanRetrieveTotalRowCount
  fullName: System.Web.UI.DataSourceView.CanRetrieveTotalRowCount
- uid: System.Web.UI.DataSourceView.CanSort
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: CanSort
  nameWithType: DataSourceView.CanSort
  fullName: System.Web.UI.DataSourceView.CanSort
- uid: System.Web.UI.DataSourceView.CanUpdate
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: CanUpdate
  nameWithType: DataSourceView.CanUpdate
  fullName: System.Web.UI.DataSourceView.CanUpdate
- uid: System.Web.UI.DataSourceView.DataSourceViewChanged
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: DataSourceViewChanged
  nameWithType: DataSourceView.DataSourceViewChanged
  fullName: System.Web.UI.DataSourceView.DataSourceViewChanged
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Web.UI.DataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: Delete(IDictionary,IDictionary,DataSourceViewOperationCallback)
  nameWithType: DataSourceView.Delete(IDictionary,IDictionary,DataSourceViewOperationCallback)
  fullName: System.Web.UI.DataSourceView.Delete(IDictionary,IDictionary,DataSourceViewOperationCallback)
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Web.UI.DataSourceViewOperationCallback
  parent: System.Web.UI
  isExternal: false
  name: DataSourceViewOperationCallback
  nameWithType: DataSourceViewOperationCallback
  fullName: System.Web.UI.DataSourceViewOperationCallback
- uid: System.Web.UI.DataSourceView.Events
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: Events
  nameWithType: DataSourceView.Events
  fullName: System.Web.UI.DataSourceView.Events
- uid: System.ComponentModel.EventHandlerList
  parent: System.ComponentModel
  isExternal: false
  name: EventHandlerList
  nameWithType: EventHandlerList
  fullName: System.ComponentModel.EventHandlerList
- uid: System.Web.UI.DataSourceView.ExecuteCommand(System.String,System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: ExecuteCommand(String,IDictionary,IDictionary)
  nameWithType: DataSourceView.ExecuteCommand(String,IDictionary,IDictionary)
  fullName: System.Web.UI.DataSourceView.ExecuteCommand(String,IDictionary,IDictionary)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.DataSourceView.ExecuteCommand(System.String,System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: ExecuteCommand(String,IDictionary,IDictionary,DataSourceViewOperationCallback)
  nameWithType: DataSourceView.ExecuteCommand(String,IDictionary,IDictionary,DataSourceViewOperationCallback)
  fullName: System.Web.UI.DataSourceView.ExecuteCommand(String,IDictionary,IDictionary,DataSourceViewOperationCallback)
- uid: System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: ExecuteDelete(IDictionary,IDictionary)
  nameWithType: DataSourceView.ExecuteDelete(IDictionary,IDictionary)
  fullName: System.Web.UI.DataSourceView.ExecuteDelete(IDictionary,IDictionary)
- uid: System.Web.UI.DataSourceView.ExecuteInsert(System.Collections.IDictionary)
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: ExecuteInsert(IDictionary)
  nameWithType: DataSourceView.ExecuteInsert(IDictionary)
  fullName: System.Web.UI.DataSourceView.ExecuteInsert(IDictionary)
- uid: System.Web.UI.DataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: ExecuteSelect(DataSourceSelectArguments)
  nameWithType: DataSourceView.ExecuteSelect(DataSourceSelectArguments)
  fullName: System.Web.UI.DataSourceView.ExecuteSelect(DataSourceSelectArguments)
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Web.UI.DataSourceSelectArguments
  parent: System.Web.UI
  isExternal: false
  name: DataSourceSelectArguments
  nameWithType: DataSourceSelectArguments
  fullName: System.Web.UI.DataSourceSelectArguments
- uid: System.Web.UI.DataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: ExecuteUpdate(IDictionary,IDictionary,IDictionary)
  nameWithType: DataSourceView.ExecuteUpdate(IDictionary,IDictionary,IDictionary)
  fullName: System.Web.UI.DataSourceView.ExecuteUpdate(IDictionary,IDictionary,IDictionary)
- uid: System.Web.UI.DataSourceView.Insert(System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: Insert(IDictionary,DataSourceViewOperationCallback)
  nameWithType: DataSourceView.Insert(IDictionary,DataSourceViewOperationCallback)
  fullName: System.Web.UI.DataSourceView.Insert(IDictionary,DataSourceViewOperationCallback)
- uid: System.Web.UI.DataSourceView.Name
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: Name
  nameWithType: DataSourceView.Name
  fullName: System.Web.UI.DataSourceView.Name
- uid: System.Web.UI.DataSourceView.OnDataSourceViewChanged(System.EventArgs)
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: OnDataSourceViewChanged(EventArgs)
  nameWithType: DataSourceView.OnDataSourceViewChanged(EventArgs)
  fullName: System.Web.UI.DataSourceView.OnDataSourceViewChanged(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.UI.DataSourceView.RaiseUnsupportedCapabilityError(System.Web.UI.DataSourceCapabilities)
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: RaiseUnsupportedCapabilityError(DataSourceCapabilities)
  nameWithType: DataSourceView.RaiseUnsupportedCapabilityError(DataSourceCapabilities)
  fullName: System.Web.UI.DataSourceView.RaiseUnsupportedCapabilityError(DataSourceCapabilities)
- uid: System.Web.UI.DataSourceCapabilities
  parent: System.Web.UI
  isExternal: false
  name: DataSourceCapabilities
  nameWithType: DataSourceCapabilities
  fullName: System.Web.UI.DataSourceCapabilities
- uid: System.Web.UI.DataSourceView.Select(System.Web.UI.DataSourceSelectArguments,System.Web.UI.DataSourceViewSelectCallback)
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: Select(DataSourceSelectArguments,DataSourceViewSelectCallback)
  nameWithType: DataSourceView.Select(DataSourceSelectArguments,DataSourceViewSelectCallback)
  fullName: System.Web.UI.DataSourceView.Select(DataSourceSelectArguments,DataSourceViewSelectCallback)
- uid: System.Web.UI.DataSourceViewSelectCallback
  parent: System.Web.UI
  isExternal: false
  name: DataSourceViewSelectCallback
  nameWithType: DataSourceViewSelectCallback
  fullName: System.Web.UI.DataSourceViewSelectCallback
- uid: System.Web.UI.DataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: Update(IDictionary,IDictionary,IDictionary,DataSourceViewOperationCallback)
  nameWithType: DataSourceView.Update(IDictionary,IDictionary,IDictionary,DataSourceViewOperationCallback)
  fullName: System.Web.UI.DataSourceView.Update(IDictionary,IDictionary,IDictionary,DataSourceViewOperationCallback)
- uid: System.Web.UI.DataSourceView.#ctor*
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: DataSourceView
  nameWithType: DataSourceView.DataSourceView
- uid: System.Web.UI.DataSourceView.CanDelete*
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: CanDelete
  nameWithType: DataSourceView.CanDelete
- uid: System.Web.UI.DataSourceView.CanExecute*
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: CanExecute
  nameWithType: DataSourceView.CanExecute
- uid: System.Web.UI.DataSourceView.CanInsert*
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: CanInsert
  nameWithType: DataSourceView.CanInsert
- uid: System.Web.UI.DataSourceView.CanPage*
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: CanPage
  nameWithType: DataSourceView.CanPage
- uid: System.Web.UI.DataSourceView.CanRetrieveTotalRowCount*
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: CanRetrieveTotalRowCount
  nameWithType: DataSourceView.CanRetrieveTotalRowCount
- uid: System.Web.UI.DataSourceView.CanSort*
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: CanSort
  nameWithType: DataSourceView.CanSort
- uid: System.Web.UI.DataSourceView.CanUpdate*
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: CanUpdate
  nameWithType: DataSourceView.CanUpdate
- uid: System.Web.UI.DataSourceView.Delete*
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: Delete
  nameWithType: DataSourceView.Delete
- uid: System.Web.UI.DataSourceView.Events*
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: Events
  nameWithType: DataSourceView.Events
- uid: System.Web.UI.DataSourceView.ExecuteCommand*
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: ExecuteCommand
  nameWithType: DataSourceView.ExecuteCommand
- uid: System.Web.UI.DataSourceView.ExecuteDelete*
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: ExecuteDelete
  nameWithType: DataSourceView.ExecuteDelete
- uid: System.Web.UI.DataSourceView.ExecuteInsert*
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: ExecuteInsert
  nameWithType: DataSourceView.ExecuteInsert
- uid: System.Web.UI.DataSourceView.ExecuteSelect*
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: ExecuteSelect
  nameWithType: DataSourceView.ExecuteSelect
- uid: System.Web.UI.DataSourceView.ExecuteUpdate*
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: ExecuteUpdate
  nameWithType: DataSourceView.ExecuteUpdate
- uid: System.Web.UI.DataSourceView.Insert*
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: Insert
  nameWithType: DataSourceView.Insert
- uid: System.Web.UI.DataSourceView.Name*
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: Name
  nameWithType: DataSourceView.Name
- uid: System.Web.UI.DataSourceView.OnDataSourceViewChanged*
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: OnDataSourceViewChanged
  nameWithType: DataSourceView.OnDataSourceViewChanged
- uid: System.Web.UI.DataSourceView.RaiseUnsupportedCapabilityError*
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: RaiseUnsupportedCapabilityError
  nameWithType: DataSourceView.RaiseUnsupportedCapabilityError
- uid: System.Web.UI.DataSourceView.Select*
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: Select
  nameWithType: DataSourceView.Select
- uid: System.Web.UI.DataSourceView.Update*
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: Update
  nameWithType: DataSourceView.Update
