### YamlMime:ManagedReference
items:
- uid: System.Windows.VisualStateManager
  id: VisualStateManager
  children:
  - System.Windows.VisualStateManager.#ctor
  - System.Windows.VisualStateManager.CustomVisualStateManagerProperty
  - System.Windows.VisualStateManager.GetCustomVisualStateManager(System.Windows.FrameworkElement)
  - System.Windows.VisualStateManager.GetVisualStateGroups(System.Windows.FrameworkElement)
  - System.Windows.VisualStateManager.GoToElementState(System.Windows.FrameworkElement,System.String,System.Boolean)
  - System.Windows.VisualStateManager.GoToState(System.Windows.FrameworkElement,System.String,System.Boolean)
  - System.Windows.VisualStateManager.GoToStateCore(System.Windows.FrameworkElement,System.Windows.FrameworkElement,System.String,System.Windows.VisualStateGroup,System.Windows.VisualState,System.Boolean)
  - System.Windows.VisualStateManager.RaiseCurrentStateChanged(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)
  - System.Windows.VisualStateManager.RaiseCurrentStateChanging(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)
  - System.Windows.VisualStateManager.SetCustomVisualStateManager(System.Windows.FrameworkElement,System.Windows.VisualStateManager)
  - System.Windows.VisualStateManager.VisualStateGroupsProperty
  langs:
  - csharp
  name: VisualStateManager
  nameWithType: VisualStateManager
  fullName: System.Windows.VisualStateManager
  type: Class
  summary: "管理狀態和轉換狀態的控制項之間的邏輯。"
  remarks: "VisualStateManager 可讓您指定控制項的外觀，控制項的狀態，當它處於特定狀態，而且控制項變更狀態。 例如，<xref:System.Windows.Controls.Button>後未按下時，於按下可能會出現稍有不同的外觀。</xref:System.Windows.Controls.Button> 兩個指出<xref:System.Windows.Controls.Button>定義當按下時，對應到 (`&quot;Pressed&quot;`) 並不是 (`&quot;Normal&quot;`)。</xref:System.Windows.Controls.Button> 由<xref:System.Windows.VisualState>.</xref:System.Windows.VisualState>定義控制項狀態時的外觀 A<xref:System.Windows.VisualState>包含的集合<xref:System.Windows.Media.Animation.Storyboard>指定控制項的外觀如何變更當控制項處於該狀態的物件。</xref:System.Windows.Media.Animation.Storyboard> </xref:System.Windows.VisualState> 將視覺狀態加入至控制項的設定`VisualStateManager.VisualStateGroups`附加在控制項上的屬性。 每個<xref:System.Windows.VisualStateGroup>包含的集合<xref:System.Windows.VisualState>互為獨佔模式的物件。</xref:System.Windows.VisualState> </xref:System.Windows.VisualStateGroup> 也就是控制項一定會處於剛好一個狀態的每個<xref:System.Windows.VisualStateGroup>。</xref:System.Windows.VisualStateGroup>       VisualStateManager 也可讓您指定當控制項進入其特定狀態。 若要變更狀態，您應該呼叫的方法取決於您的案例。 如果您建立使用中的 VisualStateManager 的控制項及其<xref:System.Windows.Controls.ControlTemplate>，呼叫<xref:System.Windows.VisualStateManager.GoToState%2A>方法。</xref:System.Windows.VisualStateManager.GoToState%2A> </xref:System.Windows.Controls.ControlTemplate> 如需如何建立使用 VisualStateManager 控制項的詳細資訊，請參閱[建立具有可自訂外觀](~/add/includes/ajax-current-ext-md.md)。 如果您使用外部 VisualStateManager <xref:System.Windows.Controls.ControlTemplate>(例如，如果您使用在 VisualStateManager<xref:System.Windows.Controls.UserControl>或中的單一項目)，呼叫<xref:System.Windows.VisualStateManager.GoToElementState%2A>方法。</xref:System.Windows.VisualStateManager.GoToElementState%2A> </xref:System.Windows.Controls.UserControl> </xref:System.Windows.Controls.ControlTemplate> 在任一情況下，VisualStateManager 會執行，才能適當地啟動及停止相關的狀態相關聯的分鏡腳本的邏輯。 例如，假設控制項定義的狀態，`State1`和`State2`，每一個都有與其相關聯的分鏡腳本。 如果控制項處於`State1`，您傳遞`State2`至<xref:System.Windows.VisualStateManager.GoToState%2A>或<xref:System.Windows.VisualStateManager.GoToElementState%2A>，VisualStateManager 中啟動分鏡腳本`State2`並停止在腳本`State1`。</xref:System.Windows.VisualStateManager.GoToElementState%2A> </xref:System.Windows.VisualStateManager.GoToState%2A>       所包含的控制項[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]使用 VisualStateManager 變更視覺狀態。 當您建立<xref:System.Windows.Controls.ControlTemplate>的控制項，隨附於[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]，您可以加入<xref:System.Windows.VisualState>物件來控制<xref:System.Windows.Controls.ControlTemplate>處於特定狀態中指定控制項的外觀。</xref:System.Windows.Controls.ControlTemplate> </xref:System.Windows.VisualState> </xref:System.Windows.Controls.ControlTemplate> 若要尋找的視覺狀態名稱所包含的控制項[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]，請參閱[控制項樣式和範本](~/add/includes/ajax-current-ext-md.md)。 控制項的邏輯控點，因此您不需要執行任何動作以外的狀態之間轉換定義的<xref:System.Windows.VisualState>新<xref:System.Windows.Controls.ControlTemplate>。</xref:System.Windows.Controls.ControlTemplate>中的物件</xref:System.Windows.VisualState> 如需如何建立現有控制項的控制項範本的詳細資訊，請參閱[自訂現有控制項的外觀，藉由建立 ControlTemplate](~/add/includes/ajax-current-ext-md.md)。       如果您想要實作您自己的邏輯的狀態之間轉換，您必須繼承自 VisualStateManager，覆寫<xref:System.Windows.VisualStateManager.GoToStateCore%2A>方法，並將<xref:System.Windows.VisualStateManager.CustomVisualStateManager%2A?displayProperty=fullName>附加屬性的控制項使用的自訂邏輯。</xref:System.Windows.VisualStateManager.CustomVisualStateManager%2A?displayProperty=fullName> </xref:System.Windows.VisualStateManager.GoToStateCore%2A>"
  example:
  - "The following example creates a <xref:System.Windows.Shapes.Rectangle> and adds a <xref:System.Windows.VisualStateGroup> named `CommonStates` to the `VisualStateManager.VisualStatesGroups` attached property. The example defines the `MouseOver` and `Normal`<xref:System.Windows.VisualState> objects in the `CommonStates`<xref:System.Windows.VisualStateGroup>. When the user moves the mouse pointer over the <xref:System.Windows.Shapes.Rectangle>, it changes from red to green over one half second. When the user moves the mouse away from the rectangle, the <xref:System.Windows.Controls.Grid> immediately changes back to red. Note that the `Normal` state does not define a <xref:System.Windows.Media.Animation.Storyboard>. A <xref:System.Windows.Media.Animation.Storyboard> is not required because when the <xref:System.Windows.Shapes.Rectangle> transitions from the `MouseOver` state to the `Normal` state, the <xref:System.Windows.Media.Animation.Storyboard> for `MouseOver` is stopped and the <xref:System.Windows.Media.SolidColorBrush.Color%2A> property for the <xref:System.Windows.Media.SolidColorBrush> returns to red.  \n  \n [!code-xml[VSMCustomControl#VSMNoTemplate](~/add/codesnippet/xaml/vsmcustomcontrol/window1.xaml#vsmnotemplate)]  \n  \n The following example shows the event handler that is defined in the previous example and calls the <xref:System.Windows.VisualStateManager.GoToElementState%2A> method to transition between states. If the rectangle in the previous example was part of a <xref:System.Windows.Controls.ControlTemplate>, the example would have to call the <xref:System.Windows.VisualStateManager.GoToState%2A> method.  \n  \n [!code-cs[VSMCustomControl#GoToElementState](~/add/codesnippet/csharp/vsmcustomcontrol/window1.xaml.cs#gotoelementstate)]\n [!code-vb[VSMCustomControl#GoToElementState](~/add/codesnippet/visualbasic/vsmcustomcontrolvb2/window1.xaml.vb#gotoelementstate)]"
  syntax:
    content: 'public class VisualStateManager : System.Windows.DependencyObject'
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  implements: []
  inheritedMembers:
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.VisualStateManager.#ctor
  id: '#ctor'
  parent: System.Windows.VisualStateManager
  langs:
  - csharp
  name: VisualStateManager()
  nameWithType: VisualStateManager.VisualStateManager()
  fullName: System.Windows.VisualStateManager.VisualStateManager()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "初始化的新執行個體<xref href=&quot;System.Windows.VisualStateManager&quot;></xref>類別。"
  syntax:
    content: public VisualStateManager ();
    parameters: []
  overload: System.Windows.VisualStateManager.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.VisualStateManager.CustomVisualStateManagerProperty
  id: CustomVisualStateManagerProperty
  parent: System.Windows.VisualStateManager
  langs:
  - csharp
  name: CustomVisualStateManagerProperty
  nameWithType: VisualStateManager.CustomVisualStateManagerProperty
  fullName: System.Windows.VisualStateManager.CustomVisualStateManagerProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "識別<xref:System.Windows.VisualStateManager.CustomVisualStateManager*>相依性屬性。</xref:System.Windows.VisualStateManager.CustomVisualStateManager*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty CustomVisualStateManagerProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.VisualStateManager.GetCustomVisualStateManager(System.Windows.FrameworkElement)
  id: GetCustomVisualStateManager(System.Windows.FrameworkElement)
  parent: System.Windows.VisualStateManager
  langs:
  - csharp
  name: GetCustomVisualStateManager(FrameworkElement)
  nameWithType: VisualStateManager.GetCustomVisualStateManager(FrameworkElement)
  fullName: System.Windows.VisualStateManager.GetCustomVisualStateManager(FrameworkElement)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "取得<xref:System.Windows.VisualStateManager.CustomVisualStateManager*>附加屬性。</xref:System.Windows.VisualStateManager.CustomVisualStateManager*>"
  syntax:
    content: public static System.Windows.VisualStateManager GetCustomVisualStateManager (System.Windows.FrameworkElement obj);
    parameters:
    - id: obj
      type: System.Windows.FrameworkElement
      description: "若要取得的項目<xref:System.Windows.VisualStateManager.CustomVisualStateManager*>附加的屬性。</xref:System.Windows.VisualStateManager.CustomVisualStateManager*>"
    return:
      type: System.Windows.VisualStateManager
      description: "控制項的狀態之間轉換的視覺狀態管理員。"
  overload: System.Windows.VisualStateManager.GetCustomVisualStateManager*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.VisualStateManager.GetVisualStateGroups(System.Windows.FrameworkElement)
  id: GetVisualStateGroups(System.Windows.FrameworkElement)
  parent: System.Windows.VisualStateManager
  langs:
  - csharp
  name: GetVisualStateGroups(FrameworkElement)
  nameWithType: VisualStateManager.GetVisualStateGroups(FrameworkElement)
  fullName: System.Windows.VisualStateManager.GetVisualStateGroups(FrameworkElement)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "取得&lt;xref:System.Windows.VisualStateManager.VisualStateGroups%2A?displayProperty=fullName&gt;附加屬性。"
  syntax:
    content: public static System.Collections.IList GetVisualStateGroups (System.Windows.FrameworkElement obj);
    parameters:
    - id: obj
      type: System.Windows.FrameworkElement
      description: "若要取得的項目&lt;xref:System.Windows.VisualStateManager.VisualStateGroups%2A?displayProperty=fullName&gt;附加的屬性。"
    return:
      type: System.Collections.IList
      description: "集合<xref href=&quot;System.Windows.VisualStateGroup&quot;></xref>與指定的物件相關聯的物件。"
  overload: System.Windows.VisualStateManager.GetVisualStateGroups*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.VisualStateManager.GoToElementState(System.Windows.FrameworkElement,System.String,System.Boolean)
  id: GoToElementState(System.Windows.FrameworkElement,System.String,System.Boolean)
  parent: System.Windows.VisualStateManager
  langs:
  - csharp
  name: GoToElementState(FrameworkElement,String,Boolean)
  nameWithType: VisualStateManager.GoToElementState(FrameworkElement,String,Boolean)
  fullName: System.Windows.VisualStateManager.GoToElementState(FrameworkElement,String,Boolean)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "轉換兩個狀態之間的項目。 使用這個方法會定義應用程式，而不是由控制項所定義的轉換狀態。"
  remarks: "呼叫 GoToElementState 方法，以變更狀態以外的項目上<xref:System.Windows.Controls.ControlTemplate>(例如，如果您使用<xref:System.Windows.VisualStateManager>中<xref:System.Windows.DataTemplate>或<xref:System.Windows.Window>)。</xref:System.Windows.Window> </xref:System.Windows.DataTemplate> </xref:System.Windows.VisualStateManager> </xref:System.Windows.Controls.ControlTemplate> 呼叫<xref:System.Windows.VisualStateManager.GoToState%2A>方法，如果您要變更<xref:System.Windows.VisualStateManager>其<xref:System.Windows.Controls.ControlTemplate>.</xref:System.Windows.Controls.ControlTemplate>中</xref:System.Windows.VisualStateManager>使用的控制項中的狀態</xref:System.Windows.VisualStateManager.GoToState%2A>"
  example:
  - "The following example creates an application that prompts the user to guess a number between 1 and 100.  When the user enters a number, the application indicates whether the guess is too high, too low, or correct.  The following [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] creates the user interface for the application and defines 4 states: `TooLow`, `TooHigh`, `Correct`, and `Guessing`. When the application begins, it is in the `Guessing` state. .  \n  \n [!code-xml[VSMGoToElementState#GoToElementStateXaml](~/add/codesnippet/xaml/vsmgotoelementstate/mainwindow.xaml#gotoelementstatexaml)]  \n  \n The following code shows the logic of the application.  When the user enters a number and clicks the button, the application calls GoToElementState to transition to `TooHigh`, `TooLow`, or `Correct` to provide feedback to the user about the guess.  To try this example, call the `GenerateNumber` method when the application begins.  \n  \n [!code-cs[VSMGoToElementState#GoToElementStateCode](~/add/codesnippet/csharp/vsmgotoelementstate/mainwindow.xaml.cs#gotoelementstatecode)]\n [!code-vb[VSMGoToElementState#GoToElementStateCode](~/add/codesnippet/visualbasic/vsmgotoelementstate/mainwindow.xaml.vb#gotoelementstatecode)]"
  syntax:
    content: public static bool GoToElementState (System.Windows.FrameworkElement stateGroupsRoot, string stateName, bool useTransitions);
    parameters:
    - id: stateGroupsRoot
      type: System.Windows.FrameworkElement
      description: "包含根項目<xref href=&quot;System.Windows.VisualStateManager&quot;> </xref>。"
    - id: stateName
      type: System.String
      description: "要轉換的狀態。"
    - id: useTransitions
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要使用<xref href=&quot;System.Windows.VisualTransition&quot;></xref>物件轉換之間的狀態; 否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果控制項已成功轉換為新的狀態。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.VisualStateManager.GoToElementState*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stateGroupsRoot</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>stateName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.VisualStateManager.GoToState(System.Windows.FrameworkElement,System.String,System.Boolean)
  id: GoToState(System.Windows.FrameworkElement,System.String,System.Boolean)
  parent: System.Windows.VisualStateManager
  langs:
  - csharp
  name: GoToState(FrameworkElement,String,Boolean)
  nameWithType: VisualStateManager.GoToState(FrameworkElement,String,Boolean)
  fullName: System.Windows.VisualStateManager.GoToState(FrameworkElement,String,Boolean)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "控制項兩個狀態之間轉換。 使用這個方法可具有的控制項上的轉換狀態<xref href=&quot;System.Windows.Controls.ControlTemplate&quot;> </xref>。"
  remarks: "如果您要變更<xref:System.Windows.VisualStateManager>其<xref:System.Windows.Controls.ControlTemplate>.</xref:System.Windows.Controls.ControlTemplate>中</xref:System.Windows.VisualStateManager>使用的控制項中的狀態，請呼叫 GoToState 方法 呼叫<xref:System.Windows.VisualStateManager.GoToElementState%2A>以外的項目上的方法，以變更狀態<xref:System.Windows.Controls.ControlTemplate>(例如，如果您使用<xref:System.Windows.VisualStateManager>中<xref:System.Windows.Controls.UserControl>或中的單一項目)。</xref:System.Windows.Controls.UserControl> </xref:System.Windows.VisualStateManager> </xref:System.Windows.Controls.ControlTemplate> </xref:System.Windows.VisualStateManager.GoToElementState%2A>"
  example:
  - "The following example demonstrates a control that uses the GoToState method to transition between states. For the entire example, see [Creating a Control That Has a Customizable Appearance](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[VSMCustomControl#UpdateStates](~/add/codesnippet/csharp/vsmcustomcontrol/numericupdown.cs#updatestates)]\n [!code-vb[VSMCustomControl#UpdateStates](~/add/codesnippet/visualbasic/vsmcustomcontrolvb2/numericupdown.vb#updatestates)]"
  syntax:
    content: public static bool GoToState (System.Windows.FrameworkElement control, string stateName, bool useTransitions);
    parameters:
    - id: control
      type: System.Windows.FrameworkElement
      description: "要狀態之間轉換的控制項。"
    - id: stateName
      type: System.String
      description: "要轉換的狀態。"
    - id: useTransitions
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要使用<xref href=&quot;System.Windows.VisualTransition&quot;></xref>物件轉換之間的狀態; 否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果控制項已成功轉換為新的狀態。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.VisualStateManager.GoToState*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>control</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>stateName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.VisualStateManager.GoToStateCore(System.Windows.FrameworkElement,System.Windows.FrameworkElement,System.String,System.Windows.VisualStateGroup,System.Windows.VisualState,System.Boolean)
  id: GoToStateCore(System.Windows.FrameworkElement,System.Windows.FrameworkElement,System.String,System.Windows.VisualStateGroup,System.Windows.VisualState,System.Boolean)
  parent: System.Windows.VisualStateManager
  langs:
  - csharp
  name: GoToStateCore(FrameworkElement,FrameworkElement,String,VisualStateGroup,VisualState,Boolean)
  nameWithType: VisualStateManager.GoToStateCore(FrameworkElement,FrameworkElement,String,VisualStateGroup,VisualState,Boolean)
  fullName: System.Windows.VisualStateManager.GoToStateCore(FrameworkElement,FrameworkElement,String,VisualStateGroup,VisualState,Boolean)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "控制項狀態之間轉換。"
  remarks: "GoToStateCore 方法用來執行來適當地啟動及停止與轉換相關聯的分鏡腳本所需的邏輯。 控制當呼叫<xref:System.Windows.VisualStateManager.GoToState%2A>若要變更其狀態，<xref:System.Windows.VisualStateManager>會進行下列作業:-首先，如果<xref:System.Windows.VisualState>控制項正在轉換至已<xref:System.Windows.Media.Animation.Storyboard>，分鏡腳本開始。</xref:System.Windows.Media.Animation.Storyboard> </xref:System.Windows.VisualState> </xref:System.Windows.VisualStateManager> </xref:System.Windows.VisualStateManager.GoToState%2A> 如果<xref:System.Windows.VisualState>控制項來自具有<xref:System.Windows.Media.Animation.Storyboard>，分鏡腳本結束。</xref:System.Windows.Media.Animation.Storyboard> </xref:System.Windows.VisualState>      -如果控制項已在`stateName`狀態，<xref:System.Windows.VisualStateManager.GoToState%2A>會採取任何動作，並傳回`true`。</xref:System.Windows.VisualStateManager.GoToState%2A>      -如果`stateName`不存在於<xref:System.Windows.Controls.ControlTemplate>的`control`，<xref:System.Windows.VisualStateManager.GoToState%2A>會採取任何動作，並傳回`false`。</xref:System.Windows.VisualStateManager.GoToState%2A> </xref:System.Windows.Controls.ControlTemplate>       您可以實作您自己<xref:System.Windows.VisualStateManager>來提供不同的邏輯狀態之間轉換。</xref:System.Windows.VisualStateManager> 例如，您可以變更先前所描述的邏輯，或者您可以提供自訂動畫類型之間轉換的邏輯。  若要實作<xref:System.Windows.VisualStateManager>，建立類別繼承自<xref:System.Windows.VisualStateManager>並且覆寫 GoToStateCore 方法。</xref:System.Windows.VisualStateManager> </xref:System.Windows.VisualStateManager> 若要使用自訂的類別，<xref:System.Windows.VisualStateManager.CustomVisualStateManager%2A>至您的自訂型別物件的屬性。</xref:System.Windows.VisualStateManager.CustomVisualStateManager%2A>"
  syntax:
    content: protected virtual bool GoToStateCore (System.Windows.FrameworkElement control, System.Windows.FrameworkElement stateGroupsRoot, string stateName, System.Windows.VisualStateGroup group, System.Windows.VisualState state, bool useTransitions);
    parameters:
    - id: control
      type: System.Windows.FrameworkElement
      description: "要狀態之間轉換的控制項。"
    - id: stateGroupsRoot
      type: System.Windows.FrameworkElement
      description: "包含根項目<xref href=&quot;System.Windows.VisualStateManager&quot;> </xref>。"
    - id: stateName
      type: System.String
      description: "轉換至狀態的名稱。"
    - id: group
      type: System.Windows.VisualStateGroup
      description: "<xref href=&quot;System.Windows.VisualStateGroup&quot;> </xref>所屬的狀態。"
    - id: state
      type: System.Windows.VisualState
      description: "轉換至狀態表示法。"
    - id: useTransitions
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要使用<xref href=&quot;System.Windows.VisualTransition&quot;></xref>物件轉換之間的狀態; 否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果控制項已成功轉換為新的狀態。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.VisualStateManager.GoToStateCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.VisualStateManager.RaiseCurrentStateChanged(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)
  id: RaiseCurrentStateChanged(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)
  parent: System.Windows.VisualStateManager
  langs:
  - csharp
  name: RaiseCurrentStateChanged(VisualStateGroup,VisualState,VisualState,FrameworkElement,FrameworkElement)
  nameWithType: VisualStateManager.RaiseCurrentStateChanged(VisualStateGroup,VisualState,VisualState,FrameworkElement,FrameworkElement)
  fullName: System.Windows.VisualStateManager.RaiseCurrentStateChanged(VisualStateGroup,VisualState,VisualState,FrameworkElement,FrameworkElement)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "引發<xref href=&quot;System.Windows.VisualStateGroup.CurrentStateChanging&quot;></xref>上指定事件<xref href=&quot;System.Windows.VisualStateGroup&quot;></xref>物件。"
  remarks: "當<xref:System.Windows.VisualStateGroup>上設定<xref:System.Windows.Controls.ControlTemplate>控制項的`control`參數設定為擁有<xref:System.Windows.Controls.ControlTemplate>.</xref:System.Windows.Controls.ControlTemplate>控制項</xref:System.Windows.Controls.ControlTemplate></xref:System.Windows.VisualStateGroup>  當<xref:System.Windows.VisualStateGroup>上設定<xref:System.Windows.FrameworkElement>，`control`是`null`，您應該使用`stateGroupsRoot`參數。</xref:System.Windows.FrameworkElement> </xref:System.Windows.VisualStateGroup>"
  syntax:
    content: protected void RaiseCurrentStateChanged (System.Windows.VisualStateGroup stateGroup, System.Windows.VisualState oldState, System.Windows.VisualState newState, System.Windows.FrameworkElement control, System.Windows.FrameworkElement stateGroupsRoot);
    parameters:
    - id: stateGroup
      type: System.Windows.VisualStateGroup
      description: "物件， <xref href=&quot;System.Windows.VisualStateGroup.CurrentStateChanging&quot;> </xref>上發生的事件。"
    - id: oldState
      type: System.Windows.VisualState
      description: "控制項從轉換狀態。"
    - id: newState
      type: System.Windows.VisualState
      description: "控制項正在轉換至狀態。"
    - id: control
      type: System.Windows.FrameworkElement
      description: "正在轉換狀態的控制項。"
    - id: stateGroupsRoot
      type: System.Windows.FrameworkElement
      description: "包含根項目<xref href=&quot;System.Windows.VisualStateManager&quot;> </xref>。"
  overload: System.Windows.VisualStateManager.RaiseCurrentStateChanged*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stateGroupsRoot</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>newState</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.VisualStateManager.RaiseCurrentStateChanging(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)
  id: RaiseCurrentStateChanging(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)
  parent: System.Windows.VisualStateManager
  langs:
  - csharp
  name: RaiseCurrentStateChanging(VisualStateGroup,VisualState,VisualState,FrameworkElement,FrameworkElement)
  nameWithType: VisualStateManager.RaiseCurrentStateChanging(VisualStateGroup,VisualState,VisualState,FrameworkElement,FrameworkElement)
  fullName: System.Windows.VisualStateManager.RaiseCurrentStateChanging(VisualStateGroup,VisualState,VisualState,FrameworkElement,FrameworkElement)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "引發<xref href=&quot;System.Windows.VisualStateGroup.CurrentStateChanging&quot;></xref>上指定事件<xref href=&quot;System.Windows.VisualStateGroup&quot;></xref>物件。"
  remarks: "當<xref:System.Windows.VisualStateGroup>上設定<xref:System.Windows.Controls.ControlTemplate>控制項的`control`參數設定為擁有<xref:System.Windows.Controls.ControlTemplate>.</xref:System.Windows.Controls.ControlTemplate>控制項</xref:System.Windows.Controls.ControlTemplate></xref:System.Windows.VisualStateGroup>  當<xref:System.Windows.VisualStateGroup>上設定<xref:System.Windows.FrameworkElement>，`control`是`null`，您應該使用`stateGroupsRoot`參數。</xref:System.Windows.FrameworkElement> </xref:System.Windows.VisualStateGroup>"
  syntax:
    content: protected void RaiseCurrentStateChanging (System.Windows.VisualStateGroup stateGroup, System.Windows.VisualState oldState, System.Windows.VisualState newState, System.Windows.FrameworkElement control, System.Windows.FrameworkElement stateGroupsRoot);
    parameters:
    - id: stateGroup
      type: System.Windows.VisualStateGroup
      description: "物件， <xref href=&quot;System.Windows.VisualStateGroup.CurrentStateChanging&quot;> </xref>上發生的事件。"
    - id: oldState
      type: System.Windows.VisualState
      description: "控制項從轉換狀態。"
    - id: newState
      type: System.Windows.VisualState
      description: "控制項正在轉換至狀態。"
    - id: control
      type: System.Windows.FrameworkElement
      description: "正在轉換狀態的控制項。"
    - id: stateGroupsRoot
      type: System.Windows.FrameworkElement
      description: "包含根項目<xref href=&quot;System.Windows.VisualStateManager&quot;> </xref>。"
  overload: System.Windows.VisualStateManager.RaiseCurrentStateChanging*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stateGroupsRoot</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>newState</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.VisualStateManager.SetCustomVisualStateManager(System.Windows.FrameworkElement,System.Windows.VisualStateManager)
  id: SetCustomVisualStateManager(System.Windows.FrameworkElement,System.Windows.VisualStateManager)
  parent: System.Windows.VisualStateManager
  langs:
  - csharp
  name: SetCustomVisualStateManager(FrameworkElement,VisualStateManager)
  nameWithType: VisualStateManager.SetCustomVisualStateManager(FrameworkElement,VisualStateManager)
  fullName: System.Windows.VisualStateManager.SetCustomVisualStateManager(FrameworkElement,VisualStateManager)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "設定<xref:System.Windows.VisualStateManager.CustomVisualStateManager*>附加屬性。</xref:System.Windows.VisualStateManager.CustomVisualStateManager*>"
  syntax:
    content: public static void SetCustomVisualStateManager (System.Windows.FrameworkElement obj, System.Windows.VisualStateManager value);
    parameters:
    - id: obj
      type: System.Windows.FrameworkElement
      description: "要設定屬性的物件。"
    - id: value
      type: System.Windows.VisualStateManager
      description: "控制項的狀態之間轉換的視覺狀態管理員。"
  overload: System.Windows.VisualStateManager.SetCustomVisualStateManager*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.VisualStateManager.VisualStateGroupsProperty
  id: VisualStateGroupsProperty
  parent: System.Windows.VisualStateManager
  langs:
  - csharp
  name: VisualStateGroupsProperty
  nameWithType: VisualStateManager.VisualStateGroupsProperty
  fullName: System.Windows.VisualStateManager.VisualStateGroupsProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "識別<xref:System.Windows.VisualStateManager.VisualStateGroups*>相依性屬性。</xref:System.Windows.VisualStateManager.VisualStateGroups*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty VisualStateGroupsProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.DependencyObject
  isExternal: false
  name: System.Windows.DependencyObject
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Windows.VisualStateManager.#ctor
  parent: System.Windows.VisualStateManager
  isExternal: false
  name: VisualStateManager()
  nameWithType: VisualStateManager.VisualStateManager()
  fullName: System.Windows.VisualStateManager.VisualStateManager()
- uid: System.Windows.VisualStateManager.CustomVisualStateManagerProperty
  parent: System.Windows.VisualStateManager
  isExternal: false
  name: CustomVisualStateManagerProperty
  nameWithType: VisualStateManager.CustomVisualStateManagerProperty
  fullName: System.Windows.VisualStateManager.CustomVisualStateManagerProperty
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Windows.VisualStateManager.GetCustomVisualStateManager(System.Windows.FrameworkElement)
  parent: System.Windows.VisualStateManager
  isExternal: false
  name: GetCustomVisualStateManager(FrameworkElement)
  nameWithType: VisualStateManager.GetCustomVisualStateManager(FrameworkElement)
  fullName: System.Windows.VisualStateManager.GetCustomVisualStateManager(FrameworkElement)
- uid: System.Windows.VisualStateManager
  parent: System.Windows
  isExternal: false
  name: VisualStateManager
  nameWithType: VisualStateManager
  fullName: System.Windows.VisualStateManager
- uid: System.Windows.FrameworkElement
  parent: System.Windows
  isExternal: false
  name: FrameworkElement
  nameWithType: FrameworkElement
  fullName: System.Windows.FrameworkElement
- uid: System.Windows.VisualStateManager.GetVisualStateGroups(System.Windows.FrameworkElement)
  parent: System.Windows.VisualStateManager
  isExternal: false
  name: GetVisualStateGroups(FrameworkElement)
  nameWithType: VisualStateManager.GetVisualStateGroups(FrameworkElement)
  fullName: System.Windows.VisualStateManager.GetVisualStateGroups(FrameworkElement)
- uid: System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Windows.VisualStateManager.GoToElementState(System.Windows.FrameworkElement,System.String,System.Boolean)
  parent: System.Windows.VisualStateManager
  isExternal: false
  name: GoToElementState(FrameworkElement,String,Boolean)
  nameWithType: VisualStateManager.GoToElementState(FrameworkElement,String,Boolean)
  fullName: System.Windows.VisualStateManager.GoToElementState(FrameworkElement,String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.VisualStateManager.GoToState(System.Windows.FrameworkElement,System.String,System.Boolean)
  parent: System.Windows.VisualStateManager
  isExternal: false
  name: GoToState(FrameworkElement,String,Boolean)
  nameWithType: VisualStateManager.GoToState(FrameworkElement,String,Boolean)
  fullName: System.Windows.VisualStateManager.GoToState(FrameworkElement,String,Boolean)
- uid: System.Windows.VisualStateManager.GoToStateCore(System.Windows.FrameworkElement,System.Windows.FrameworkElement,System.String,System.Windows.VisualStateGroup,System.Windows.VisualState,System.Boolean)
  parent: System.Windows.VisualStateManager
  isExternal: false
  name: GoToStateCore(FrameworkElement,FrameworkElement,String,VisualStateGroup,VisualState,Boolean)
  nameWithType: VisualStateManager.GoToStateCore(FrameworkElement,FrameworkElement,String,VisualStateGroup,VisualState,Boolean)
  fullName: System.Windows.VisualStateManager.GoToStateCore(FrameworkElement,FrameworkElement,String,VisualStateGroup,VisualState,Boolean)
- uid: System.Windows.VisualStateGroup
  parent: System.Windows
  isExternal: false
  name: VisualStateGroup
  nameWithType: VisualStateGroup
  fullName: System.Windows.VisualStateGroup
- uid: System.Windows.VisualState
  parent: System.Windows
  isExternal: false
  name: VisualState
  nameWithType: VisualState
  fullName: System.Windows.VisualState
- uid: System.Windows.VisualStateManager.RaiseCurrentStateChanged(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)
  parent: System.Windows.VisualStateManager
  isExternal: false
  name: RaiseCurrentStateChanged(VisualStateGroup,VisualState,VisualState,FrameworkElement,FrameworkElement)
  nameWithType: VisualStateManager.RaiseCurrentStateChanged(VisualStateGroup,VisualState,VisualState,FrameworkElement,FrameworkElement)
  fullName: System.Windows.VisualStateManager.RaiseCurrentStateChanged(VisualStateGroup,VisualState,VisualState,FrameworkElement,FrameworkElement)
- uid: System.Windows.VisualStateManager.RaiseCurrentStateChanging(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)
  parent: System.Windows.VisualStateManager
  isExternal: false
  name: RaiseCurrentStateChanging(VisualStateGroup,VisualState,VisualState,FrameworkElement,FrameworkElement)
  nameWithType: VisualStateManager.RaiseCurrentStateChanging(VisualStateGroup,VisualState,VisualState,FrameworkElement,FrameworkElement)
  fullName: System.Windows.VisualStateManager.RaiseCurrentStateChanging(VisualStateGroup,VisualState,VisualState,FrameworkElement,FrameworkElement)
- uid: System.Windows.VisualStateManager.SetCustomVisualStateManager(System.Windows.FrameworkElement,System.Windows.VisualStateManager)
  parent: System.Windows.VisualStateManager
  isExternal: false
  name: SetCustomVisualStateManager(FrameworkElement,VisualStateManager)
  nameWithType: VisualStateManager.SetCustomVisualStateManager(FrameworkElement,VisualStateManager)
  fullName: System.Windows.VisualStateManager.SetCustomVisualStateManager(FrameworkElement,VisualStateManager)
- uid: System.Windows.VisualStateManager.VisualStateGroupsProperty
  parent: System.Windows.VisualStateManager
  isExternal: false
  name: VisualStateGroupsProperty
  nameWithType: VisualStateManager.VisualStateGroupsProperty
  fullName: System.Windows.VisualStateManager.VisualStateGroupsProperty
- uid: System.Windows.VisualStateManager.#ctor*
  parent: System.Windows.VisualStateManager
  isExternal: false
  name: VisualStateManager
  nameWithType: VisualStateManager.VisualStateManager
- uid: System.Windows.VisualStateManager.GetCustomVisualStateManager*
  parent: System.Windows.VisualStateManager
  isExternal: false
  name: GetCustomVisualStateManager
  nameWithType: VisualStateManager.GetCustomVisualStateManager
- uid: System.Windows.VisualStateManager.GetVisualStateGroups*
  parent: System.Windows.VisualStateManager
  isExternal: false
  name: GetVisualStateGroups
  nameWithType: VisualStateManager.GetVisualStateGroups
- uid: System.Windows.VisualStateManager.GoToElementState*
  parent: System.Windows.VisualStateManager
  isExternal: false
  name: GoToElementState
  nameWithType: VisualStateManager.GoToElementState
- uid: System.Windows.VisualStateManager.GoToState*
  parent: System.Windows.VisualStateManager
  isExternal: false
  name: GoToState
  nameWithType: VisualStateManager.GoToState
- uid: System.Windows.VisualStateManager.GoToStateCore*
  parent: System.Windows.VisualStateManager
  isExternal: false
  name: GoToStateCore
  nameWithType: VisualStateManager.GoToStateCore
- uid: System.Windows.VisualStateManager.RaiseCurrentStateChanged*
  parent: System.Windows.VisualStateManager
  isExternal: false
  name: RaiseCurrentStateChanged
  nameWithType: VisualStateManager.RaiseCurrentStateChanged
- uid: System.Windows.VisualStateManager.RaiseCurrentStateChanging*
  parent: System.Windows.VisualStateManager
  isExternal: false
  name: RaiseCurrentStateChanging
  nameWithType: VisualStateManager.RaiseCurrentStateChanging
- uid: System.Windows.VisualStateManager.SetCustomVisualStateManager*
  parent: System.Windows.VisualStateManager
  isExternal: false
  name: SetCustomVisualStateManager
  nameWithType: VisualStateManager.SetCustomVisualStateManager
