### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.TemplateField
  id: TemplateField
  children:
  - System.Web.UI.WebControls.TemplateField.#ctor
  - System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate
  - System.Web.UI.WebControls.TemplateField.ConvertEmptyStringToNull
  - System.Web.UI.WebControls.TemplateField.CopyProperties(System.Web.UI.WebControls.DataControlField)
  - System.Web.UI.WebControls.TemplateField.CreateField
  - System.Web.UI.WebControls.TemplateField.EditItemTemplate
  - System.Web.UI.WebControls.TemplateField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)
  - System.Web.UI.WebControls.TemplateField.FooterTemplate
  - System.Web.UI.WebControls.TemplateField.HeaderTemplate
  - System.Web.UI.WebControls.TemplateField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  - System.Web.UI.WebControls.TemplateField.InsertItemTemplate
  - System.Web.UI.WebControls.TemplateField.ItemTemplate
  - System.Web.UI.WebControls.TemplateField.ValidateRequestMode
  - System.Web.UI.WebControls.TemplateField.ValidateSupportsCallback
  langs:
  - csharp
  name: TemplateField
  nameWithType: TemplateField
  fullName: System.Web.UI.WebControls.TemplateField
  type: Class
  summary: "表示顯示資料繫結控制項中的自訂內容的欄位。"
  remarks: "TemplateField 類別由資料繫結控制項 (例如<xref:System.Web.UI.WebControls.GridView>和<xref:System.Web.UI.WebControls.DetailsView>) 來顯示每一筆記錄顯示的自訂內容。</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView> 當您需要在未提供的其中一個預先定義的資料控制項欄位的資料繫結控制項中顯示內容 (例如<xref:System.Web.UI.WebControls.BoundField>)，使用 TemplateField 類別來建立自訂使用者介面 (UI)。</xref:System.Web.UI.WebControls.BoundField> TemplateField 物件是根據使用它的資料繫結控制項的顯示方式。 例如，<xref:System.Web.UI.WebControls.GridView>控制項會顯示 TemplateField 物件做為資料行，而<xref:System.Web.UI.WebControls.DetailsView>控制項顯示為一個資料列。</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView>       您可以定義使用下表所列的範本 TemplateField 物件的不同部分的自訂範本。      |範本 |描述 |  |--------------|-----------------|  |<xref:System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate%2A>|指定要顯示的替代項目 TemplateField 物件中的內容。 |  |<xref:System.Web.UI.WebControls.TemplateField.EditItemTemplate%2A>|指定要為 TemplateField 物件中的編輯模式中的項目顯示的內容。 |  |<xref:System.Web.UI.WebControls.TemplateField.FooterTemplate%2A>|指定要顯示的頁尾區段，TemplateField 物件的內容。 |  |<xref:System.Web.UI.WebControls.TemplateField.HeaderTemplate%2A>|指定要顯示的 TemplateField 物件的標頭區段的內容。 |  |<xref:System.Web.UI.WebControls.TemplateField.InsertItemTemplate%2A>|指定要在插入模式下 TemplateField 物件中的項目上顯示的內容。</xref:System.Web.UI.WebControls.TemplateField.InsertItemTemplate%2A> </xref:System.Web.UI.WebControls.TemplateField.HeaderTemplate%2A> </xref:System.Web.UI.WebControls.TemplateField.FooterTemplate%2A> </xref:System.Web.UI.WebControls.TemplateField.EditItemTemplate%2A> </xref:System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate%2A> 此範本受到<xref:System.Web.UI.WebControls.DetailsView>控制項。 |  |<xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A>|指定要為 TemplateField 物件中的項目顯示的內容。 |      您可以隱藏 TemplateField 中的物件資料繫結控制項，藉由設定<xref:System.Web.UI.WebControls.DataControlField.Visible%2A>屬性`false`。</xref:System.Web.UI.WebControls.DataControlField.Visible%2A> </xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A> </xref:System.Web.UI.WebControls.DetailsView>       做為定義自訂替代<xref:System.Web.UI.WebControls.TemplateField.HeaderTemplate%2A>或<xref:System.Web.UI.WebControls.TemplateField.FooterTemplate%2A>範本，您可以藉由設定 TemplateField 物件的其他屬性自訂 TemplateField 物件的頁首和頁尾區段。</xref:System.Web.UI.WebControls.TemplateField.FooterTemplate%2A> </xref:System.Web.UI.WebControls.TemplateField.HeaderTemplate%2A> 若要在頁首或頁尾區段中顯示標題，請設定<xref:System.Web.UI.WebControls.DataControlField.HeaderText%2A>或<xref:System.Web.UI.WebControls.DataControlField.FooterText%2A>屬性，分別。</xref:System.Web.UI.WebControls.DataControlField.FooterText%2A> </xref:System.Web.UI.WebControls.DataControlField.HeaderText%2A> 而不是顯示在標頭區段的文字，您可以藉由設定顯示影像<xref:System.Web.UI.WebControls.DataControlField.HeaderImageUrl%2A>屬性。</xref:System.Web.UI.WebControls.DataControlField.HeaderImageUrl%2A> 標頭區段可能會隱藏在 TemplateField 物件藉由設定<xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A>屬性`false`。</xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A>      > [!NOTE] > 某些資料繫結控制項 (例如<xref:System.Web.UI.WebControls.GridView>控制項) 即可顯示或隱藏只控制項的整個標頭區段。</xref:System.Web.UI.WebControls.GridView> 不支援這些資料繫結控制項<xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A>個別的繫結欄位的屬性。</xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A> 若要顯示或隱藏在資料繫結控制項的整個標頭區段，使用控制項的`ShowHeader`屬性 （如果有的話）。       您也可以自訂 TemplateField 物件 （例如字型色彩、 背景色彩等等） 的外觀，藉由設定欄位的不同部分的樣式屬性。 下表列出不同的樣式屬性。      |樣式屬性 |描述 |  |--------------------|-----------------|  |<xref:System.Web.UI.WebControls.DataControlField.ControlStyle%2A>|TemplateField 物件的子系 Web 伺服器控制項的樣式設定。 |  |<xref:System.Web.UI.WebControls.DataControlField.FooterStyle%2A>|TemplateField 物件的頁尾區段的樣式設定。 |  |<xref:System.Web.UI.WebControls.DataControlField.HeaderStyle%2A>|TemplateField 物件的標頭區段的樣式設定。 |  |<xref:System.Web.UI.WebControls.DataControlField.ItemStyle%2A>|資料中的項目 TemplateField 物件的樣式設定。 |</xref:System.Web.UI.WebControls.DataControlField.ItemStyle%2A> </xref:System.Web.UI.WebControls.DataControlField.HeaderStyle%2A> </xref:System.Web.UI.WebControls.DataControlField.FooterStyle%2A> </xref:System.Web.UI.WebControls.DataControlField.ControlStyle%2A>"
  example:
  - "The following code example demonstrates how to create a custom TemplateField object that displays two fields in the same cell. The first name and last name fields are combined into the same TemplateField object.  \n  \n [!code-cs[TemplateField#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_104_1.aspx)]\n [!code-vb[TemplateField#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_104_1.aspx)]"
  syntax:
    content: 'public class TemplateField : System.Web.UI.WebControls.DataControlField'
  inheritance:
  - System.Object
  - System.Web.UI.WebControls.DataControlField
  implements: []
  inheritedMembers:
  - System.Web.UI.WebControls.DataControlField.AccessibleHeaderText
  - System.Web.UI.WebControls.DataControlField.CloneField
  - System.Web.UI.WebControls.DataControlField.Control
  - System.Web.UI.WebControls.DataControlField.ControlStyle
  - System.Web.UI.WebControls.DataControlField.DesignMode
  - System.Web.UI.WebControls.DataControlField.FooterStyle
  - System.Web.UI.WebControls.DataControlField.FooterText
  - System.Web.UI.WebControls.DataControlField.HeaderImageUrl
  - System.Web.UI.WebControls.DataControlField.HeaderStyle
  - System.Web.UI.WebControls.DataControlField.HeaderText
  - System.Web.UI.WebControls.DataControlField.Initialize(System.Boolean,System.Web.UI.Control)
  - System.Web.UI.WebControls.DataControlField.InsertVisible
  - System.Web.UI.WebControls.DataControlField.IsTrackingViewState
  - System.Web.UI.WebControls.DataControlField.ItemStyle
  - System.Web.UI.WebControls.DataControlField.LoadViewState(System.Object)
  - System.Web.UI.WebControls.DataControlField.OnFieldChanged
  - System.Web.UI.WebControls.DataControlField.SaveViewState
  - System.Web.UI.WebControls.DataControlField.ShowHeader
  - System.Web.UI.WebControls.DataControlField.SortExpression
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IDataSourceViewSchemaAccessor#DataSourceViewSchema
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#TrackViewState
  - System.Web.UI.WebControls.DataControlField.ToString
  - System.Web.UI.WebControls.DataControlField.TrackViewState
  - System.Web.UI.WebControls.DataControlField.ViewState
  - System.Web.UI.WebControls.DataControlField.Visible
  platform:
  - net462
- uid: System.Web.UI.WebControls.TemplateField.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.TemplateField
  langs:
  - csharp
  name: TemplateField()
  nameWithType: TemplateField.TemplateField()
  fullName: System.Web.UI.WebControls.TemplateField.TemplateField()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "初始化的新執行個體<xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;></xref>類別。"
  remarks: "使用這個建構函式來初始化<xref:System.Web.UI.WebControls.TemplateField>類別</xref:System.Web.UI.WebControls.TemplateField>的新執行個體 將欄位加入至動態建立的資料繫結控制項時，通常會使用這個建構函式。       若要以動態方式加入<xref:System.Web.UI.WebControls.TemplateField>物件資料繫結控制項，請建立新<xref:System.Web.UI.WebControls.TemplateField>物件，定義適當的範本，並將其加入資料繫結控制項的欄位集合。</xref:System.Web.UI.WebControls.TemplateField> </xref:System.Web.UI.WebControls.TemplateField> 例如，如果您使用<xref:System.Web.UI.WebControls.GridView>控制項，加入<xref:System.Web.UI.WebControls.TemplateField>物件<xref:System.Web.UI.WebControls.GridView.Columns%2A>集合。</xref:System.Web.UI.WebControls.GridView.Columns%2A> </xref:System.Web.UI.WebControls.TemplateField> </xref:System.Web.UI.WebControls.GridView>      > [!NOTE] > 以動態方式，您就可以將欄位加入資料繫結控制項，不過強烈建議的欄位以靜態方式宣告，然後顯示或隱藏，視需要。 以靜態方式宣告所有的欄位可減少的父資料繫結控制項的檢視狀態的大小。"
  example:
  - "The following code example demonstrates how to use the constructor to dynamically add a <xref:System.Web.UI.WebControls.TemplateField> field column to a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-cs[TemplateFieldCtor#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_118_1.aspx)]\n [!code-vb[TemplateFieldCtor#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_118_1.aspx)]"
  syntax:
    content: public TemplateField ();
    parameters: []
  overload: System.Web.UI.WebControls.TemplateField.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate
  id: AlternatingItemTemplate
  parent: System.Web.UI.WebControls.TemplateField
  langs:
  - csharp
  name: AlternatingItemTemplate
  nameWithType: TemplateField.AlternatingItemTemplate
  fullName: System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定範本中顯示的替代項目<xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;></xref>物件。"
  remarks: "若要指定替代的項目中顯示的自訂內容使用 AlternatingItemTemplate 屬性<xref:System.Web.UI.WebControls.TemplateField>物件。</xref:System.Web.UI.WebControls.TemplateField> 藉由建立的範本，指定替代項目呈現的方式定義的內容。      > [!NOTE] > AlternatingItemTemplate 屬性通常用於搭配<xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A>屬性以建立資料繫結控制項中的每個其他項目不同的外觀。</xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A>       若要指定的範本，先將開啟和關閉`<AlternatingItemTemplate>`標記的開頭和結尾標記之間`<TemplateField>`項目。 接下來，加入在開頭和結尾之間的自訂內容`<AlternatingItemTemplate>`標記。 內容可以是以純文字格式一樣簡單或複雜 （將其他控制項內嵌在範本中，例如）。       若要以程式設計方式存取在範本中定義的控制項，請先判斷哪些<xref:System.Web.UI.WebControls.TableCell>資料繫結控制項中的物件包含的控制項。</xref:System.Web.UI.WebControls.TableCell> 接下來，使用<xref:System.Web.UI.Control.Controls%2A>集合<xref:System.Web.UI.WebControls.TableCell>物件來存取控制項。</xref:System.Web.UI.WebControls.TableCell> </xref:System.Web.UI.Control.Controls%2A> 您也可以使用<xref:System.Web.UI.Control.FindControl%2A>方法<xref:System.Web.UI.WebControls.TableCell>要尋找控制項，控制項必須有物件<xref:System.Web.UI.Control.ID%2A>指定屬性。</xref:System.Web.UI.Control.ID%2A> </xref:System.Web.UI.WebControls.TableCell> </xref:System.Web.UI.Control.FindControl%2A>"
  example:
  - "The following code example demonstrates how to use the AlternatingItemTemplate property to create a custom template for the alternating items in a <xref:System.Web.UI.WebControls.TemplateField> field column of a <xref:System.Web.UI.WebControls.GridView> control. The template is a variation of the template specified by the <xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A> property, where an image is displayed on the opposite side of the cell.  \n  \n [!code-vb[TemplateFieldAlternatingItemTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1029_1.aspx)]\n [!code-cs[TemplateFieldAlternatingItemTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1029_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate AlternatingItemTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "A <xref href=&quot;System.Web.UI.ITemplate&quot;> </xref>-實作的物件，會包含範本中顯示的替代項目<xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>，表示這個屬性未設定。"
  overload: System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TemplateField.ConvertEmptyStringToNull
  id: ConvertEmptyStringToNull
  parent: System.Web.UI.WebControls.TemplateField
  langs:
  - csharp
  name: ConvertEmptyStringToNull
  nameWithType: TemplateField.ConvertEmptyStringToNull
  fullName: System.Web.UI.WebControls.TemplateField.ConvertEmptyStringToNull
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定值，指出是否值的<xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;></xref>物件繫結到應該轉換成<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>是否<xref:System.String.Empty>.</xref:System.String.Empty>"
  remarks: "這個屬性適用於在範本中所做的雙向資料繫結陳述式。 表示轉換已完成之後從雙向繫結的範本，再將值傳遞給更新或插入作業的資料來源擷取的值。       例如，使用者可能輸入空字串 (&quot;&quot;) 為欄位值，在更新或插入記錄。 若要指定空白的字串值是否會自動轉換為使用 ConvertEmptyStringToNull 屬性`null`資料欄位的資料來源中的更新時。"
  syntax:
    content: public virtual bool ConvertEmptyStringToNull { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果值的<xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;></xref>是繫結至應該轉換成<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>時<xref:System.String.Empty>，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.String.Empty> 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.TemplateField.ConvertEmptyStringToNull*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TemplateField.CopyProperties(System.Web.UI.WebControls.DataControlField)
  id: CopyProperties(System.Web.UI.WebControls.DataControlField)
  parent: System.Web.UI.WebControls.TemplateField
  langs:
  - csharp
  name: CopyProperties(DataControlField)
  nameWithType: TemplateField.CopyProperties(DataControlField)
  fullName: System.Web.UI.WebControls.TemplateField.CopyProperties(DataControlField)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "將目前的屬性複製<xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;> </xref>-衍生物件的指定<xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;></xref>物件。"
  remarks: "CopyProperties 方法是 helper 方法，用來複製目前的內容<xref:System.Web.UI.WebControls.TemplateField>-衍生物件<xref:System.Web.UI.WebControls.DataControlField>方法所建立的物件。</xref:System.Web.UI.WebControls.DataControlField> </xref:System.Web.UI.WebControls.TemplateField>"
  syntax:
    content: protected override void CopyProperties (System.Web.UI.WebControls.DataControlField newField);
    parameters:
    - id: newField
      type: System.Web.UI.WebControls.DataControlField
      description: "<xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref>來複製目前的內容<xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;></xref>至。"
  overload: System.Web.UI.WebControls.TemplateField.CopyProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TemplateField.CreateField
  id: CreateField
  parent: System.Web.UI.WebControls.TemplateField
  langs:
  - csharp
  name: CreateField()
  nameWithType: TemplateField.CreateField()
  fullName: System.Web.UI.WebControls.TemplateField.CreateField()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "建立新<xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;></xref>物件。"
  remarks: "CreateField 方法會覆寫基底的方法來傳回<xref:System.Web.UI.WebControls.TemplateField>物件。</xref:System.Web.UI.WebControls.TemplateField>"
  syntax:
    content: protected override System.Web.UI.WebControls.DataControlField CreateField ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.DataControlField
      description: "一律會傳回新<xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;> </xref>。"
  overload: System.Web.UI.WebControls.TemplateField.CreateField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TemplateField.EditItemTemplate
  id: EditItemTemplate
  parent: System.Web.UI.WebControls.TemplateField
  langs:
  - csharp
  name: EditItemTemplate
  nameWithType: TemplateField.EditItemTemplate
  fullName: System.Web.UI.WebControls.TemplateField.EditItemTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定顯示在編輯模式中的項目範本<xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;></xref>物件。"
  remarks: "若要指定處於編輯模式中的項目所顯示的自訂內容使用 EditItemTemplate 屬性<xref:System.Web.UI.WebControls.TemplateField>物件。</xref:System.Web.UI.WebControls.TemplateField> 藉由建立指定的呈現方式編輯模式中的項目範本中定義的內容。 EditItemTemplate 屬性通常會包含輸入的控制項的使用者修改資料來源中的值。       若要指定的範本，先將開啟和關閉`<EditItemTemplate>`標記的開頭和結尾標記之間`<TemplateField>`項目。 接下來，加入在開頭和結尾之間的自訂內容`<EditItemTemplate>`標記。 內容可以是以純文字格式一樣簡單或複雜 （將其他控制項內嵌在範本中，例如）。       若要以程式設計方式存取在範本中定義的控制項，請先判斷哪些<xref:System.Web.UI.WebControls.TableCell>資料繫結控制項中的物件包含的控制項。</xref:System.Web.UI.WebControls.TableCell> 接下來，使用<xref:System.Web.UI.Control.Controls%2A>集合<xref:System.Web.UI.WebControls.TableCell>物件來存取控制項。</xref:System.Web.UI.WebControls.TableCell> </xref:System.Web.UI.Control.Controls%2A> 您也可以使用<xref:System.Web.UI.Control.FindControl%2A>方法<xref:System.Web.UI.WebControls.TableCell>要尋找控制項，控制項必須有物件<xref:System.Web.UI.Control.ID%2A>指定屬性。</xref:System.Web.UI.Control.ID%2A> </xref:System.Web.UI.WebControls.TableCell> </xref:System.Web.UI.Control.FindControl%2A>"
  example:
  - "The following code example demonstrates how to use the EditItemTemplate property to create a custom template for an item in edit mode in a <xref:System.Web.UI.WebControls.TemplateField> field column of a <xref:System.Web.UI.WebControls.GridView> control. The template contains validation server controls to prevent a user from leaving a value field empty.  \n  \n [!code-cs[TemplateFieldEditItemTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_821_1.aspx)]\n [!code-vb[TemplateFieldEditItemTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_821_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate EditItemTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "A <xref href=&quot;System.Web.UI.ITemplate&quot;> </xref>-實作物件，其中包含的範本編輯模式中顯示資料項目<xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>，表示這個屬性未設定。"
  overload: System.Web.UI.WebControls.TemplateField.EditItemTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TemplateField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)
  id: ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)
  parent: System.Web.UI.WebControls.TemplateField
  langs:
  - csharp
  name: ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
  nameWithType: TemplateField.ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
  fullName: System.Web.UI.WebControls.TemplateField.ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "擷取一或多個雙向繫結陳述式所指定的資料控制項的值欄位 (<xref uid=&quot;langword_csharp_DataBind&quot; name=&quot;DataBind&quot; href=&quot;&quot;></xref>) 從目前的資料表資料格，並將值加入至指定<xref href=&quot;System.Collections.Specialized.IOrderedDictionary&quot;></xref>集合。"
  remarks: "ExtractValuesFromCell 方法藉由衍生自型別<xref:System.Web.UI.WebControls.DataControlField>，例如<xref:System.Web.UI.WebControls.TemplateField>.</xref:System.Web.UI.WebControls.TemplateField> </xref:System.Web.UI.WebControls.DataControlField> 呼叫這個方法會擷取範本來填入要傳遞給資料來源的更新、 插入或刪除作業的字典中的雙向資料繫結欄位的值。 欄位/值組會儲存在傳遞給方法的字典集合。 ExtractValuesFromCell 方法由呼叫`ExtractRowValues`資料控制項，例如<xref:System.Web.UI.WebControls.DetailsView>和<xref:System.Web.UI.WebControls.GridView>.</xref:System.Web.UI.WebControls.GridView></xref:System.Web.UI.WebControls.DetailsView>方法"
  syntax:
    content: public override void ExtractValuesFromCell (System.Collections.Specialized.IOrderedDictionary dictionary, System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlRowState rowState, bool includeReadOnly);
    parameters:
    - id: dictionary
      type: System.Collections.Specialized.IOrderedDictionary
      description: "An <xref href=&quot;System.Collections.Specialized.IOrderedDictionary&quot;></xref>."
    - id: cell
      type: System.Web.UI.WebControls.DataControlFieldCell
      description: "A <xref href=&quot;System.Web.UI.WebControls.DataControlFieldCell&quot;> </xref> ，其中包含文字或控制項的<xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;> </xref>。"
    - id: rowState
      type: System.Web.UI.WebControls.DataControlRowState
      description: "其中一個<xref href=&quot;System.Web.UI.WebControls.DataControlRowState&quot;></xref>值。"
    - id: includeReadOnly
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>表示唯讀欄位的值會包含在`dictionary`集合; 否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.TemplateField.ExtractValuesFromCell*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TemplateField.FooterTemplate
  id: FooterTemplate
  parent: System.Web.UI.WebControls.TemplateField
  langs:
  - csharp
  name: FooterTemplate
  nameWithType: TemplateField.FooterTemplate
  fullName: System.Web.UI.WebControls.TemplateField.FooterTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定顯示的頁尾區段範本<xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;></xref>物件。"
  remarks: "使用指定的頁尾區段中顯示的自訂內容 FooterTemplate 屬性<xref:System.Web.UI.WebControls.TemplateField>物件。</xref:System.Web.UI.WebControls.TemplateField> 建立範本，指定如何轉譯的頁尾區段中定義的內容。       若要指定的範本，先將開啟和關閉`<FooterTemplate>`標記的開頭和結尾標記之間`<TemplateField>`項目。 接下來，加入在開頭和結尾之間的自訂內容`<FooterTemplate>`標記。 內容可以是以純文字格式一樣簡單或複雜 （將其他控制項內嵌在範本中，例如）。       若要以程式設計方式存取在範本中定義的控制項，請先判斷哪些<xref:System.Web.UI.WebControls.TableCell>資料繫結控制項中的物件包含的控制項。</xref:System.Web.UI.WebControls.TableCell> 接下來，使用<xref:System.Web.UI.Control.Controls%2A>集合<xref:System.Web.UI.WebControls.TableCell>物件來存取控制項。</xref:System.Web.UI.WebControls.TableCell> </xref:System.Web.UI.Control.Controls%2A> 您也可以使用<xref:System.Web.UI.Control.FindControl%2A>方法<xref:System.Web.UI.WebControls.TableCell>要尋找控制項，控制項必須有物件<xref:System.Web.UI.Control.ID%2A>指定屬性。</xref:System.Web.UI.Control.ID%2A> </xref:System.Web.UI.WebControls.TableCell> </xref:System.Web.UI.Control.FindControl%2A>"
  example:
  - "The following code example demonstrates how to use the FooterTemplate property to create a custom template for the footer section of a <xref:System.Web.UI.WebControls.TemplateField> field column in a <xref:System.Web.UI.WebControls.GridView> control. The template displays the sum of the values in the <xref:System.Web.UI.WebControls.TemplateField> field column.  \n  \n [!code-cs[TemplateFieldFooterTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1286_1.aspx)]\n [!code-vb[TemplateFieldFooterTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1286_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate FooterTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "A <xref href=&quot;System.Web.UI.ITemplate&quot;> </xref>-實作物件，其中包含的範本顯示的頁尾區段<xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>，表示這個屬性未設定。"
  overload: System.Web.UI.WebControls.TemplateField.FooterTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TemplateField.HeaderTemplate
  id: HeaderTemplate
  parent: System.Web.UI.WebControls.TemplateField
  langs:
  - csharp
  name: HeaderTemplate
  nameWithType: TemplateField.HeaderTemplate
  fullName: System.Web.UI.WebControls.TemplateField.HeaderTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定顯示的標頭區段的範本<xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;></xref>物件。"
  remarks: "使用指定的標頭區段所顯示的自訂內容 HeaderTemplate 屬性<xref:System.Web.UI.WebControls.TemplateField>物件。</xref:System.Web.UI.WebControls.TemplateField> 建立指定的標頭區段的呈現方式的範本定義的內容。       若要指定的範本，先將開啟和關閉`<HeaderTemplate>`標記的開頭和結尾標記之間`<TemplateField>`項目。 接下來，加入在開頭和結尾之間的自訂內容`<HeaderTemplate>`標記。 內容可以是以純文字格式一樣簡單或複雜 （將其他控制項內嵌在範本中，例如）。       若要以程式設計方式存取在範本中定義的控制項，請先判斷哪些<xref:System.Web.UI.WebControls.TableCell>資料繫結控制項中的物件包含的控制項。</xref:System.Web.UI.WebControls.TableCell> 接下來，使用<xref:System.Web.UI.Control.Controls%2A>集合<xref:System.Web.UI.WebControls.TableCell>物件來存取控制項。</xref:System.Web.UI.WebControls.TableCell> </xref:System.Web.UI.Control.Controls%2A> 您也可以使用<xref:System.Web.UI.Control.FindControl%2A>方法<xref:System.Web.UI.WebControls.TableCell>要尋找控制項，控制項必須有物件<xref:System.Web.UI.Control.ID%2A>指定屬性。</xref:System.Web.UI.Control.ID%2A> </xref:System.Web.UI.WebControls.TableCell> </xref:System.Web.UI.Control.FindControl%2A>"
  example:
  - "The following code example demonstrates how to use the HeaderTemplate property to create a custom template for the header section of a <xref:System.Web.UI.WebControls.TemplateField> field column in a <xref:System.Web.UI.WebControls.GridView> control. The template displays a check box that allows the user to show or hide the rows of the <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-cs[TemplateFieldHeaderTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1149_1.aspx)]\n [!code-vb[TemplateFieldHeaderTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1149_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate HeaderTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "A <xref href=&quot;System.Web.UI.ITemplate&quot;> </xref>-實作物件，其中包含的範本顯示的標頭區段<xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;></xref>資料繫結控制項中。 預設值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>，表示這個屬性未設定。"
  overload: System.Web.UI.WebControls.TemplateField.HeaderTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TemplateField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  id: InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  parent: System.Web.UI.WebControls.TemplateField
  langs:
  - csharp
  name: InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  nameWithType: TemplateField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  fullName: System.Web.UI.WebControls.TemplateField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "將文字或控制項加入儲存格的控制項集合。"
  remarks: "呼叫這個方法，當您建立使用自訂資料繫結控制項<xref:System.Web.UI.WebControls.DataControlFieldCell>物件初始化的資料格的資料或控制項的資料表結構。</xref:System.Web.UI.WebControls.DataControlFieldCell>"
  syntax:
    content: public override void InitializeCell (System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlCellType cellType, System.Web.UI.WebControls.DataControlRowState rowState, int rowIndex);
    parameters:
    - id: cell
      type: System.Web.UI.WebControls.DataControlFieldCell
      description: "A <xref href=&quot;System.Web.UI.WebControls.DataControlFieldCell&quot;> </xref> ，其中包含文字或控制項的<xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref>。"
    - id: cellType
      type: System.Web.UI.WebControls.DataControlCellType
      description: "其中一個<xref href=&quot;System.Web.UI.WebControls.DataControlCellType&quot;></xref>值。"
    - id: rowState
      type: System.Web.UI.WebControls.DataControlRowState
      description: "其中一個<xref href=&quot;System.Web.UI.WebControls.DataControlRowState&quot;></xref>值，指定包含的資料列狀態<xref href=&quot;System.Web.UI.WebControls.DataControlFieldCell&quot;> </xref>。"
    - id: rowIndex
      type: System.Int32
      description: "資料列的索引， <xref href=&quot;System.Web.UI.WebControls.DataControlFieldCell&quot;> </xref>內。"
  overload: System.Web.UI.WebControls.TemplateField.InitializeCell*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TemplateField.InsertItemTemplate
  id: InsertItemTemplate
  parent: System.Web.UI.WebControls.TemplateField
  langs:
  - csharp
  name: InsertItemTemplate
  nameWithType: TemplateField.InsertItemTemplate
  fullName: System.Web.UI.WebControls.TemplateField.InsertItemTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定顯示在插入模式中的項目範本<xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;></xref>物件。"
  remarks: "使用上屬性來指定在插入模式中的項目所顯示的自訂內容<xref:System.Web.UI.WebControls.TemplateField>物件。</xref:System.Web.UI.WebControls.TemplateField> 建立指定的項目在插入模式下的呈現方式的範本定義的內容。       若要指定的範本，先將開啟和關閉`<InsertItemTemplate>`標記的開頭和結尾標記之間`<TemplateField>`項目。 接下來，加入在開頭和結尾之間的自訂內容`<InsertItemTemplate>`標記。 內容可以是以純文字格式一樣簡單或複雜 （將其他控制項內嵌在範本中，例如）。       若要以程式設計方式存取在範本中定義的控制項，請先判斷哪些<xref:System.Web.UI.WebControls.TableCell>資料繫結控制項中的物件包含的控制項。</xref:System.Web.UI.WebControls.TableCell> 接下來，使用<xref:System.Web.UI.Control.Controls%2A>集合<xref:System.Web.UI.WebControls.TableCell>物件來存取控制項。</xref:System.Web.UI.WebControls.TableCell> </xref:System.Web.UI.Control.Controls%2A> 您也可以使用<xref:System.Web.UI.Control.FindControl%2A>方法<xref:System.Web.UI.WebControls.TableCell>要尋找控制項，控制項必須有物件<xref:System.Web.UI.Control.ID%2A>指定屬性。</xref:System.Web.UI.Control.ID%2A> </xref:System.Web.UI.WebControls.TableCell> </xref:System.Web.UI.Control.FindControl%2A>      > [!NOTE] > 並非所有的資料繫結控制項支援此範本才支援資料繫結控制項，可讓您插入記錄，例如此範本<xref:System.Web.UI.WebControls.DetailsView>控制項。</xref:System.Web.UI.WebControls.DetailsView>"
  example:
  - "The following code example demonstrates how to use the InsertItemTemplate property to create a custom template for an item in insert mode in a <xref:System.Web.UI.WebControls.TemplateField> field row in a <xref:System.Web.UI.WebControls.DetailsView> control. The template displays a <xref:System.Web.UI.WebControls.DropDownList> control that allows the user to select a value from a predefined list.  \n  \n [!code-vb[TemplateFieldInsertItemTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_855_1.aspx)]\n [!code-cs[TemplateFieldInsertItemTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_855_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate InsertItemTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "A <xref href=&quot;System.Web.UI.ITemplate&quot;> </xref>-實作物件，其中包含顯示在插入模式中的項目範本<xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>，表示這個屬性未設定。"
  overload: System.Web.UI.WebControls.TemplateField.InsertItemTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TemplateField.ItemTemplate
  id: ItemTemplate
  parent: System.Web.UI.WebControls.TemplateField
  langs:
  - csharp
  name: ItemTemplate
  nameWithType: TemplateField.ItemTemplate
  fullName: System.Web.UI.WebControls.TemplateField.ItemTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定用於資料繫結控制項中顯示項目範本。"
  remarks: "使用指定的項目中顯示的自訂內容的 ItemTemplate 屬性<xref:System.Web.UI.WebControls.TemplateField>物件。</xref:System.Web.UI.WebControls.TemplateField> 藉由建立一個指定的項目如何轉譯範本中定義的內容。      > [!NOTE] > 可以選擇性地定義<xref:System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate%2A>屬性組合中具有 ItemTemplate 屬性來建立資料繫結控制項中的每個其他項目不同的外觀。</xref:System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate%2A>       若要指定的範本，先將開啟和關閉`<ItemTemplate>`標記的開頭和結尾標記之間`<TemplateField>`項目。 接下來，加入在開頭和結尾之間的自訂內容`<ItemTemplate>`標記。 內容可以是以純文字格式一樣簡單或複雜 （將其他控制項內嵌在範本中，例如）。       若要以程式設計方式存取在範本中定義的控制項，請先判斷哪些<xref:System.Web.UI.WebControls.TableCell>資料繫結控制項中的物件包含的控制項。</xref:System.Web.UI.WebControls.TableCell> 接下來，使用<xref:System.Web.UI.Control.Controls%2A>集合<xref:System.Web.UI.WebControls.TableCell>物件來存取控制項。</xref:System.Web.UI.WebControls.TableCell> </xref:System.Web.UI.Control.Controls%2A> 您也可以使用<xref:System.Web.UI.Control.FindControl%2A>方法<xref:System.Web.UI.WebControls.TableCell>要尋找控制項，控制項必須有物件<xref:System.Web.UI.Control.ID%2A>指定屬性。</xref:System.Web.UI.Control.ID%2A> </xref:System.Web.UI.WebControls.TableCell> </xref:System.Web.UI.Control.FindControl%2A>"
  example:
  - "The following code example demonstrates how to use the ItemTemplate property to create a custom template for the items of a <xref:System.Web.UI.WebControls.TemplateField> field in a <xref:System.Web.UI.WebControls.GridView> control. The template displays the field's value in a <xref:System.Web.UI.WebControls.RadioButtonList> control.  \n  \n [!code-cs[TemplateFieldItemTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_239_1.aspx)]\n [!code-vb[TemplateFieldItemTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_239_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate ItemTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "A <xref href=&quot;System.Web.UI.ITemplate&quot;> </xref>-實作物件，其中包含顯示中的項目範本<xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>，表示這個屬性未設定。"
  overload: System.Web.UI.WebControls.TemplateField.ItemTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TemplateField.ValidateRequestMode
  id: ValidateRequestMode
  parent: System.Web.UI.WebControls.TemplateField
  langs:
  - csharp
  name: ValidateRequestMode
  nameWithType: TemplateField.ValidateRequestMode
  fullName: System.Web.UI.WebControls.TemplateField.ValidateRequestMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定值，指定控制項是否會驗證用戶端輸入。"
  syntax:
    content: public System.Web.UI.ValidateRequestMode ValidateRequestMode { get; set; }
    return:
      type: System.Web.UI.ValidateRequestMode
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果控制項驗證用戶端輸入。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.TemplateField.ValidateRequestMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TemplateField.ValidateSupportsCallback
  id: ValidateSupportsCallback
  parent: System.Web.UI.WebControls.TemplateField
  langs:
  - csharp
  name: ValidateSupportsCallback()
  nameWithType: TemplateField.ValidateSupportsCallback()
  fullName: System.Web.UI.WebControls.TemplateField.ValidateSupportsCallback()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "判斷控制項是否包含在<xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;></xref>物件支援頁面回呼。"
  remarks: "ValidateSupportsCallback 方法不支援此類別，一律會擲回<xref:System.NotSupportedException>例外狀況。</xref:System.NotSupportedException>"
  syntax:
    content: public override void ValidateSupportsCallback ();
    parameters: []
  overload: System.Web.UI.WebControls.TemplateField.ValidateSupportsCallback*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "這個方法的預設實作會呼叫。"
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: System.Web.UI.WebControls.DataControlField
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Web.UI.WebControls.TemplateField.#ctor
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: TemplateField()
  nameWithType: TemplateField.TemplateField()
  fullName: System.Web.UI.WebControls.TemplateField.TemplateField()
- uid: System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: AlternatingItemTemplate
  nameWithType: TemplateField.AlternatingItemTemplate
  fullName: System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate
- uid: System.Web.UI.ITemplate
  parent: System.Web.UI
  isExternal: false
  name: ITemplate
  nameWithType: ITemplate
  fullName: System.Web.UI.ITemplate
- uid: System.Web.UI.WebControls.TemplateField.ConvertEmptyStringToNull
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: ConvertEmptyStringToNull
  nameWithType: TemplateField.ConvertEmptyStringToNull
  fullName: System.Web.UI.WebControls.TemplateField.ConvertEmptyStringToNull
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.TemplateField.CopyProperties(System.Web.UI.WebControls.DataControlField)
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: CopyProperties(DataControlField)
  nameWithType: TemplateField.CopyProperties(DataControlField)
  fullName: System.Web.UI.WebControls.TemplateField.CopyProperties(DataControlField)
- uid: System.Web.UI.WebControls.TemplateField.CreateField
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: CreateField()
  nameWithType: TemplateField.CreateField()
  fullName: System.Web.UI.WebControls.TemplateField.CreateField()
- uid: System.Web.UI.WebControls.TemplateField.EditItemTemplate
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: EditItemTemplate
  nameWithType: TemplateField.EditItemTemplate
  fullName: System.Web.UI.WebControls.TemplateField.EditItemTemplate
- uid: System.Web.UI.WebControls.TemplateField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
  nameWithType: TemplateField.ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
  fullName: System.Web.UI.WebControls.TemplateField.ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
- uid: System.Collections.Specialized.IOrderedDictionary
  parent: System.Collections.Specialized
  isExternal: false
  name: IOrderedDictionary
  nameWithType: IOrderedDictionary
  fullName: System.Collections.Specialized.IOrderedDictionary
- uid: System.Web.UI.WebControls.DataControlFieldCell
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlFieldCell
  nameWithType: DataControlFieldCell
  fullName: System.Web.UI.WebControls.DataControlFieldCell
- uid: System.Web.UI.WebControls.DataControlRowState
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlRowState
  nameWithType: DataControlRowState
  fullName: System.Web.UI.WebControls.DataControlRowState
- uid: System.Web.UI.WebControls.TemplateField.FooterTemplate
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: FooterTemplate
  nameWithType: TemplateField.FooterTemplate
  fullName: System.Web.UI.WebControls.TemplateField.FooterTemplate
- uid: System.Web.UI.WebControls.TemplateField.HeaderTemplate
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: HeaderTemplate
  nameWithType: TemplateField.HeaderTemplate
  fullName: System.Web.UI.WebControls.TemplateField.HeaderTemplate
- uid: System.Web.UI.WebControls.TemplateField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  nameWithType: TemplateField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  fullName: System.Web.UI.WebControls.TemplateField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
- uid: System.Web.UI.WebControls.DataControlCellType
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlCellType
  nameWithType: DataControlCellType
  fullName: System.Web.UI.WebControls.DataControlCellType
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.TemplateField.InsertItemTemplate
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: InsertItemTemplate
  nameWithType: TemplateField.InsertItemTemplate
  fullName: System.Web.UI.WebControls.TemplateField.InsertItemTemplate
- uid: System.Web.UI.WebControls.TemplateField.ItemTemplate
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: ItemTemplate
  nameWithType: TemplateField.ItemTemplate
  fullName: System.Web.UI.WebControls.TemplateField.ItemTemplate
- uid: System.Web.UI.WebControls.TemplateField.ValidateRequestMode
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: ValidateRequestMode
  nameWithType: TemplateField.ValidateRequestMode
  fullName: System.Web.UI.WebControls.TemplateField.ValidateRequestMode
- uid: System.Web.UI.ValidateRequestMode
  parent: System.Web.UI
  isExternal: false
  name: ValidateRequestMode
  nameWithType: ValidateRequestMode
  fullName: System.Web.UI.ValidateRequestMode
- uid: System.Web.UI.WebControls.TemplateField.ValidateSupportsCallback
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: ValidateSupportsCallback()
  nameWithType: TemplateField.ValidateSupportsCallback()
  fullName: System.Web.UI.WebControls.TemplateField.ValidateSupportsCallback()
- uid: System.Web.UI.WebControls.TemplateField.#ctor*
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: TemplateField
  nameWithType: TemplateField.TemplateField
- uid: System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate*
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: AlternatingItemTemplate
  nameWithType: TemplateField.AlternatingItemTemplate
- uid: System.Web.UI.WebControls.TemplateField.ConvertEmptyStringToNull*
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: ConvertEmptyStringToNull
  nameWithType: TemplateField.ConvertEmptyStringToNull
- uid: System.Web.UI.WebControls.TemplateField.CopyProperties*
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: CopyProperties
  nameWithType: TemplateField.CopyProperties
- uid: System.Web.UI.WebControls.TemplateField.CreateField*
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: CreateField
  nameWithType: TemplateField.CreateField
- uid: System.Web.UI.WebControls.TemplateField.EditItemTemplate*
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: EditItemTemplate
  nameWithType: TemplateField.EditItemTemplate
- uid: System.Web.UI.WebControls.TemplateField.ExtractValuesFromCell*
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: ExtractValuesFromCell
  nameWithType: TemplateField.ExtractValuesFromCell
- uid: System.Web.UI.WebControls.TemplateField.FooterTemplate*
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: FooterTemplate
  nameWithType: TemplateField.FooterTemplate
- uid: System.Web.UI.WebControls.TemplateField.HeaderTemplate*
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: HeaderTemplate
  nameWithType: TemplateField.HeaderTemplate
- uid: System.Web.UI.WebControls.TemplateField.InitializeCell*
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: InitializeCell
  nameWithType: TemplateField.InitializeCell
- uid: System.Web.UI.WebControls.TemplateField.InsertItemTemplate*
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: InsertItemTemplate
  nameWithType: TemplateField.InsertItemTemplate
- uid: System.Web.UI.WebControls.TemplateField.ItemTemplate*
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: ItemTemplate
  nameWithType: TemplateField.ItemTemplate
- uid: System.Web.UI.WebControls.TemplateField.ValidateRequestMode*
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: ValidateRequestMode
  nameWithType: TemplateField.ValidateRequestMode
- uid: System.Web.UI.WebControls.TemplateField.ValidateSupportsCallback*
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: ValidateSupportsCallback
  nameWithType: TemplateField.ValidateSupportsCallback
