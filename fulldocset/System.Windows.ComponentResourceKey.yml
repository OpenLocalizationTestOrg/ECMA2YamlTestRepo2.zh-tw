### YamlMime:ManagedReference
items:
- uid: System.Windows.ComponentResourceKey
  id: ComponentResourceKey
  children:
  - System.Windows.ComponentResourceKey.#ctor
  - System.Windows.ComponentResourceKey.#ctor(System.Type,System.Object)
  - System.Windows.ComponentResourceKey.Assembly
  - System.Windows.ComponentResourceKey.Equals(System.Object)
  - System.Windows.ComponentResourceKey.GetHashCode
  - System.Windows.ComponentResourceKey.ResourceId
  - System.Windows.ComponentResourceKey.ToString
  - System.Windows.ComponentResourceKey.TypeInTargetAssembly
  langs:
  - csharp
  name: ComponentResourceKey
  nameWithType: ComponentResourceKey
  fullName: System.Windows.ComponentResourceKey
  type: Class
  summary: "定義或參考外部組件，與其他識別項中的類別名稱為基礎的資源索引鍵。"
  remarks: "如[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]的詳細資訊，請參閱[ComponentResourceKey 標記延伸](~/add/includes/ajax-current-ext-md.md)。       這個類別會實作可用於建立組件加上識別項類型為基礎的索引鍵的物件類型。 因為您定義或參考類型，您不需要要求特定<xref:System.Windows.ResourceDictionary>，而且多個資源集可以存在於組件，每個差異及其 ComponentResourceKey 的類型。</xref:System.Windows.ResourceDictionary>       有兩種方式可定義 ComponentResourceKey。       如果您想要更容易存取的索引鍵，您可以在控制項類別程式碼會傳回 ComponentResourceKey，<xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A>存在於外部資源組件和<xref:System.Windows.ComponentResourceKey.ResourceId%2A>.</xref:System.Windows.ComponentResourceKey.ResourceId%2A></xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A>建構定義靜態屬性 索引鍵用於組件中定義控制項的替代預設樣式，藉由交換自訂原始的外部資源組件。 您也可以定義具名的資源部分在較大的控制項樣式或範本來公開自訂進入點。 這是特別有用，如果您要為控制項定義的主題資源字典。       您也可以使用[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] [ComponentResourceKey 標記延伸](../Topic/ComponentResourceKey%20Markup%20Extension.md)詳細語法來建立機碼的鬆散執行個體中。 這非常有用，如果您想要宣告私用的資源，以及自訂不易搜尋的其他組件。      <a name=&quot;xamlTextUsage_ComponentResourceKey&quot;></a># # XAML 文字使用方式，請參閱 < 備註 >"
  syntax:
    content: >-
      [System.ComponentModel.TypeConverter(typeof(System.Windows.Markup.ComponentResourceKeyConverter))]

      public class ComponentResourceKey : System.Windows.ResourceKey
  inheritance:
  - System.Windows.Markup.MarkupExtension
  - System.Windows.ResourceKey
  implements: []
  inheritedMembers:
  - System.Windows.ResourceKey.ProvideValue(System.IServiceProvider)
  platform:
  - net462
- uid: System.Windows.ComponentResourceKey.#ctor
  id: '#ctor'
  parent: System.Windows.ComponentResourceKey
  langs:
  - csharp
  name: ComponentResourceKey()
  nameWithType: ComponentResourceKey.ComponentResourceKey()
  fullName: System.Windows.ComponentResourceKey.ComponentResourceKey()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "初始化的新執行個體<xref href=&quot;System.Windows.ComponentResourceKey&quot;></xref>類別。"
  remarks: "預設建構函式使用，因為<xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A>值和<xref:System.Windows.ComponentResourceKey.ResourceId%2A>值所需的正確初始化。</xref:System.Windows.ComponentResourceKey.ResourceId%2A> </xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A> 預設建構函式存在主要是為了支援[ComponentResourceKey 標記延伸](~/add/includes/ajax-current-ext-md.md)具名的參數形式的 XAML 用法。"
  syntax:
    content: public ComponentResourceKey ();
    parameters: []
  overload: System.Windows.ComponentResourceKey.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ComponentResourceKey.#ctor(System.Type,System.Object)
  id: '#ctor(System.Type,System.Object)'
  parent: System.Windows.ComponentResourceKey
  langs:
  - csharp
  name: ComponentResourceKey(Type,Object)
  nameWithType: ComponentResourceKey.ComponentResourceKey(Type,Object)
  fullName: System.Windows.ComponentResourceKey.ComponentResourceKey(Type,Object)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "初始化的新執行個體<xref href=&quot;System.Windows.ComponentResourceKey&quot;> </xref> ，並指定<xref:System.Type>，定義索引鍵，並以物件來做為額外的資源識別碼。</xref:System.Type>"
  remarks: "這個建構函式存在兩個案例中，最重要的第一個案例:-建立的<xref:System.Windows.ComponentResourceKey>則會公開為自訂控制項類別上的公用靜態欄位</xref:System.Windows.ComponentResourceKey>的支援 這樣可簡化自己定義的資源，透過範本中的控制存取`{x:Static}`範本的屬性值的使用方式。      -支援[ComponentResourceKey 標記延伸](~/add/includes/ajax-current-ext-md.md)形式位置參數，也就是其中一種技術可供參考元件資源的協力廠商的 XAML 用法。"
  example:
  - "The following example creates a <xref:System.Windows.ComponentResourceKey> that is then exposed as a static key of a control class to provide a style customization entry point.  \n  \n [!code-cs[CorePseudocode#CRKCode](~/add/codesnippet/csharp/CorePseudocode/corepseudocode.cs#crkcode)]\n [!code-vb[CorePseudocode#CRKCode](~/add/codesnippet/visualbasic/corepseudocode/corepseudocode.vb#crkcode)]"
  syntax:
    content: public ComponentResourceKey (Type typeInTargetAssembly, object resourceId);
    parameters:
    - id: typeInTargetAssembly
      type: System.Type
      description: "定義資源的索引鍵的型別。"
    - id: resourceId
      type: System.Object
      description: "唯一識別碼來區別這<xref href=&quot;System.Windows.ComponentResourceKey&quot;></xref>與相關聯的其他人提供的`typeInTargetAssembly`型別。"
  overload: System.Windows.ComponentResourceKey.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ComponentResourceKey.Assembly
  id: Assembly
  parent: System.Windows.ComponentResourceKey
  langs:
  - csharp
  name: Assembly
  nameWithType: ComponentResourceKey.Assembly
  fullName: System.Windows.ComponentResourceKey.Assembly
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "取得組件物件，這個物件表示哪些組件的字典中尋找此索引鍵相關聯的值。"
  syntax:
    content: public override System.Reflection.Assembly Assembly { get; }
    return:
      type: System.Reflection.Assembly
      description: "擷取的組件，以反映類別。"
  overload: System.Windows.ComponentResourceKey.Assembly*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ComponentResourceKey.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Windows.ComponentResourceKey
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: ComponentResourceKey.Equals(Object)
  fullName: System.Windows.ComponentResourceKey.Equals(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "判斷所提供的物件是否等於目前<xref href=&quot;System.Windows.ComponentResourceKey&quot;> </xref>。"
  remarks: "兩個索引鍵是否相等，如果兩者有相同的所有其立即可設定屬性值 (<xref:System.Windows.ComponentResourceKey.ResourceId%2A>， <xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A>)。</xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A> </xref:System.Windows.ComponentResourceKey.ResourceId%2A>"
  syntax:
    content: public override bool Equals (object o);
    parameters:
    - id: o
      type: System.Object
      description: "要比較與目前物件<xref href=&quot;System.Windows.ComponentResourceKey&quot;> </xref>。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果物件相等。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.ComponentResourceKey.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ComponentResourceKey.GetHashCode
  id: GetHashCode
  parent: System.Windows.ComponentResourceKey
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: ComponentResourceKey.GetHashCode()
  fullName: System.Windows.ComponentResourceKey.GetHashCode()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "傳回這個雜湊程式碼<xref href=&quot;System.Windows.ComponentResourceKey&quot;> </xref>。"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "帶正負號的 32 位元整數值。"
  overload: System.Windows.ComponentResourceKey.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ComponentResourceKey.ResourceId
  id: ResourceId
  parent: System.Windows.ComponentResourceKey
  langs:
  - csharp
  name: ResourceId
  nameWithType: ComponentResourceKey.ResourceId
  fullName: System.Windows.ComponentResourceKey.ResourceId
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "取得或設定與這個類型相關聯的其他人提供的區分此金鑰的唯一識別碼。"
  remarks: "如[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]的詳細資訊，請參閱[ComponentResourceKey 標記延伸](~/add/includes/ajax-current-ext-md.md)。       一般而言，用於 ResourceId 值在字串符合[XamlName 文法](~/add/includes/ajax-current-ext-md.md)。      <a name=&quot;xamlTextUsage_2&quot;></a># # XAML 文字使用方式，請參閱 < 備註 >"
  example:
  - "The following example shows how to use the ResourceId to differentiate this key from others associated with this type.  \n  \n [!code-xml[ColorPicker_snip#SliderStyle](~/add/codesnippet/xaml/ColorPickerLib/Themes/generic.xaml#sliderstyle)]"
  syntax:
    content: public object ResourceId { get; set; }
    return:
      type: System.Object
      description: "唯一的識別項。 一般而言，這是字串。"
  overload: System.Windows.ComponentResourceKey.ResourceId*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ComponentResourceKey.ToString
  id: ToString
  parent: System.Windows.ComponentResourceKey
  langs:
  - csharp
  name: ToString()
  nameWithType: ComponentResourceKey.ToString()
  fullName: System.Windows.ComponentResourceKey.ToString()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "取得字串表示<xref href=&quot;System.Windows.ComponentResourceKey&quot;> </xref>。"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "字串表示。"
  overload: System.Windows.ComponentResourceKey.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ComponentResourceKey.TypeInTargetAssembly
  id: TypeInTargetAssembly
  parent: System.Windows.ComponentResourceKey
  langs:
  - csharp
  name: TypeInTargetAssembly
  nameWithType: ComponentResourceKey.TypeInTargetAssembly
  fullName: System.Windows.ComponentResourceKey.TypeInTargetAssembly
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "取得或設定<xref:System.Type>定義資源索引鍵。</xref:System.Type>"
  remarks: "如[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]的詳細資訊，請參閱[ComponentResourceKey 標記延伸](~/add/includes/ajax-current-ext-md.md)。       <xref:System.Windows.ComponentResourceKey>項目可由自訂元件來定義從目標組件包含的型別為基礎的外部組件來存取資源的索引鍵。</xref:System.Windows.ComponentResourceKey> 自訂元件通常會定義新的類型必須是資源所在的組件中。 通常這些型別沒有其他實作，才能滿足的查閱需求<xref:System.Windows.ComponentResourceKey>.</xref:System.Windows.ComponentResourceKey>只存在類型      <a name=&quot;xamlTextUsage_3&quot;></a># # XAML 文字使用方式，請參閱 < 備註 >"
  example:
  - "The following example shows how to define a <xref:System.Windows.ComponentResourceKey> including TypeInTargetAssembly and <xref:System.Windows.ComponentResourceKey.ResourceId%2A> using the [ComponentResourceKey Markup Extension](../Topic/ComponentResourceKey%20Markup%20Extension.md). This resource can then be placed in an external assembly and accessed by a key usage that requests the resource using an analogous <xref:System.Windows.ComponentResourceKey> in the request.  \n  \n [!code-xml[ColorPicker_snip#SliderStyle](~/add/codesnippet/xaml/ColorPickerLib/Themes/generic.xaml#sliderstyle)]"
  syntax:
    content: public Type TypeInTargetAssembly { get; set; }
    return:
      type: System.Type
      description: "定義資源的索引鍵的型別。"
  overload: System.Windows.ComponentResourceKey.TypeInTargetAssembly*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.ResourceKey
  isExternal: false
  name: System.Windows.ResourceKey
- uid: System.Windows.ComponentResourceKey.#ctor
  parent: System.Windows.ComponentResourceKey
  isExternal: false
  name: ComponentResourceKey()
  nameWithType: ComponentResourceKey.ComponentResourceKey()
  fullName: System.Windows.ComponentResourceKey.ComponentResourceKey()
- uid: System.Windows.ComponentResourceKey.#ctor(System.Type,System.Object)
  parent: System.Windows.ComponentResourceKey
  isExternal: false
  name: ComponentResourceKey(Type,Object)
  nameWithType: ComponentResourceKey.ComponentResourceKey(Type,Object)
  fullName: System.Windows.ComponentResourceKey.ComponentResourceKey(Type,Object)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.ComponentResourceKey.Assembly
  parent: System.Windows.ComponentResourceKey
  isExternal: false
  name: Assembly
  nameWithType: ComponentResourceKey.Assembly
  fullName: System.Windows.ComponentResourceKey.Assembly
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: true
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.Windows.ComponentResourceKey.Equals(System.Object)
  parent: System.Windows.ComponentResourceKey
  isExternal: false
  name: Equals(Object)
  nameWithType: ComponentResourceKey.Equals(Object)
  fullName: System.Windows.ComponentResourceKey.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.ComponentResourceKey.GetHashCode
  parent: System.Windows.ComponentResourceKey
  isExternal: false
  name: GetHashCode()
  nameWithType: ComponentResourceKey.GetHashCode()
  fullName: System.Windows.ComponentResourceKey.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.ComponentResourceKey.ResourceId
  parent: System.Windows.ComponentResourceKey
  isExternal: false
  name: ResourceId
  nameWithType: ComponentResourceKey.ResourceId
  fullName: System.Windows.ComponentResourceKey.ResourceId
- uid: System.Windows.ComponentResourceKey.ToString
  parent: System.Windows.ComponentResourceKey
  isExternal: false
  name: ToString()
  nameWithType: ComponentResourceKey.ToString()
  fullName: System.Windows.ComponentResourceKey.ToString()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.ComponentResourceKey.TypeInTargetAssembly
  parent: System.Windows.ComponentResourceKey
  isExternal: false
  name: TypeInTargetAssembly
  nameWithType: ComponentResourceKey.TypeInTargetAssembly
  fullName: System.Windows.ComponentResourceKey.TypeInTargetAssembly
- uid: System.Windows.ComponentResourceKey.#ctor*
  parent: System.Windows.ComponentResourceKey
  isExternal: false
  name: ComponentResourceKey
  nameWithType: ComponentResourceKey.ComponentResourceKey
- uid: System.Windows.ComponentResourceKey.Assembly*
  parent: System.Windows.ComponentResourceKey
  isExternal: false
  name: Assembly
  nameWithType: ComponentResourceKey.Assembly
- uid: System.Windows.ComponentResourceKey.Equals*
  parent: System.Windows.ComponentResourceKey
  isExternal: false
  name: Equals
  nameWithType: ComponentResourceKey.Equals
- uid: System.Windows.ComponentResourceKey.GetHashCode*
  parent: System.Windows.ComponentResourceKey
  isExternal: false
  name: GetHashCode
  nameWithType: ComponentResourceKey.GetHashCode
- uid: System.Windows.ComponentResourceKey.ResourceId*
  parent: System.Windows.ComponentResourceKey
  isExternal: false
  name: ResourceId
  nameWithType: ComponentResourceKey.ResourceId
- uid: System.Windows.ComponentResourceKey.ToString*
  parent: System.Windows.ComponentResourceKey
  isExternal: false
  name: ToString
  nameWithType: ComponentResourceKey.ToString
- uid: System.Windows.ComponentResourceKey.TypeInTargetAssembly*
  parent: System.Windows.ComponentResourceKey
  isExternal: false
  name: TypeInTargetAssembly
  nameWithType: ComponentResourceKey.TypeInTargetAssembly
