### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Container
  id: Container
  children:
  - System.ComponentModel.Container.#ctor
  - System.ComponentModel.Container.Add(System.ComponentModel.IComponent)
  - System.ComponentModel.Container.Add(System.ComponentModel.IComponent,System.String)
  - System.ComponentModel.Container.Components
  - System.ComponentModel.Container.CreateSite(System.ComponentModel.IComponent,System.String)
  - System.ComponentModel.Container.Dispose
  - System.ComponentModel.Container.Dispose(System.Boolean)
  - System.ComponentModel.Container.Finalize
  - System.ComponentModel.Container.GetService(System.Type)
  - System.ComponentModel.Container.Remove(System.ComponentModel.IComponent)
  - System.ComponentModel.Container.RemoveWithoutUnsiting(System.ComponentModel.IComponent)
  - System.ComponentModel.Container.ValidateName(System.ComponentModel.IComponent,System.String)
  langs:
  - csharp
  name: Container
  nameWithType: Container
  fullName: System.ComponentModel.Container
  type: Class
  summary: "封裝零個或多個元件。"
  remarks: "容器類別是預設實作<xref:System.ComponentModel.IContainer>介面。</xref:System.ComponentModel.IContainer>       容器是封裝和追蹤零個或多個元件的物件。 在此情況下，內含項目是指邏輯內含項目，不是視覺化的內含項目。 您可以使用元件和容器中的各種案例，包括已視覺化並不是視覺化的情況。       在容器中的元件會追蹤在第一個在先進先出清單中，其亦會定義元件的容器內的順序。 加入的元件會附加至清單的結尾。"
  syntax:
    content: 'public class Container : IDisposable, System.ComponentModel.IContainer'
  inheritance:
  - System.Object
  implements:
  - System.ComponentModel.IContainer
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.Container.#ctor
  id: '#ctor'
  parent: System.ComponentModel.Container
  langs:
  - csharp
  name: Container()
  nameWithType: Container.Container()
  fullName: System.ComponentModel.Container.Container()
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "初始化的新執行個體<xref href=&quot;System.ComponentModel.Container&quot;></xref>類別。"
  syntax:
    content: public Container ();
    parameters: []
  overload: System.ComponentModel.Container.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Container.Add(System.ComponentModel.IComponent)
  id: Add(System.ComponentModel.IComponent)
  parent: System.ComponentModel.Container
  langs:
  - csharp
  name: Add(IComponent)
  nameWithType: Container.Add(IComponent)
  fullName: System.ComponentModel.Container.Add(IComponent)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "將指定<xref href=&quot;System.ComponentModel.Component&quot;></xref>至<xref href=&quot;System.ComponentModel.Container&quot;> </xref>。 未命名的元件。"
  remarks: "在衍生類別可以覆寫這個方法。       新<xref:System.ComponentModel.Component>加入至清單的結尾。</xref:System.ComponentModel.Component>"
  syntax:
    content: public virtual void Add (System.ComponentModel.IComponent component);
    parameters:
    - id: component
      type: System.ComponentModel.IComponent
      description: "要加入的元件。"
  overload: System.ComponentModel.Container.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>component</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Container.Add(System.ComponentModel.IComponent,System.String)
  id: Add(System.ComponentModel.IComponent,System.String)
  parent: System.ComponentModel.Container
  langs:
  - csharp
  name: Add(IComponent,String)
  nameWithType: Container.Add(IComponent,String)
  fullName: System.ComponentModel.Container.Add(IComponent,String)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "將指定<xref href=&quot;System.ComponentModel.Component&quot;></xref>至<xref href=&quot;System.ComponentModel.Container&quot;></xref>並將其指派的名稱。"
  remarks: "在衍生類別可以覆寫這個方法。       新<xref:System.ComponentModel.Component>加入至清單的結尾。</xref:System.ComponentModel.Component>"
  syntax:
    content: public virtual void Add (System.ComponentModel.IComponent component, string name);
    parameters:
    - id: component
      type: System.ComponentModel.IComponent
      description: "要加入的元件。"
    - id: name
      type: System.String
      description: "要指派給元件的唯一、 不區分大小寫名稱。       - <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>，這會保留未命名的元件。"
  overload: System.ComponentModel.Container.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>component</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>name</code>不是唯一。"
  platform:
  - net462
- uid: System.ComponentModel.Container.Components
  id: Components
  parent: System.ComponentModel.Container
  langs:
  - csharp
  name: Components
  nameWithType: Container.Components
  fullName: System.ComponentModel.Container.Components
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "取得所有元件中<xref href=&quot;System.ComponentModel.Container&quot;> </xref>。"
  remarks: "在衍生類別可以覆寫這個方法。       集合中的元件會儲存在相同的順序加入至<xref:System.ComponentModel.Container>。</xref:System.ComponentModel.Container>"
  syntax:
    content: public virtual System.ComponentModel.ComponentCollection Components { get; }
    return:
      type: System.ComponentModel.ComponentCollection
      description: "集合，其中包含在元件<xref href=&quot;System.ComponentModel.Container&quot;> </xref>。"
  overload: System.ComponentModel.Container.Components*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Container.CreateSite(System.ComponentModel.IComponent,System.String)
  id: CreateSite(System.ComponentModel.IComponent,System.String)
  parent: System.ComponentModel.Container
  langs:
  - csharp
  name: CreateSite(IComponent,String)
  nameWithType: Container.CreateSite(IComponent,String)
  fullName: System.ComponentModel.Container.CreateSite(IComponent,String)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "建立站台<xref href=&quot;System.ComponentModel.ISite&quot;></xref>針對給定<xref href=&quot;System.ComponentModel.IComponent&quot;></xref>並將指定的名稱指派給站台。"
  remarks: "如果`name`參數是`null`、<xref:System.ComponentModel.IComponent>加入至<xref:System.ComponentModel.Container>沒有識別的名稱。</xref:System.ComponentModel.Container> </xref:System.ComponentModel.IComponent>       在衍生類別可以覆寫這個方法。 需要覆寫 CreateSite 方法的實作器都可以提供自訂實作的類別，透過實作<xref:System.ComponentModel.ISite>介面。</xref:System.ComponentModel.ISite>"
  syntax:
    content: protected virtual System.ComponentModel.ISite CreateSite (System.ComponentModel.IComponent component, string name);
    parameters:
    - id: component
      type: System.ComponentModel.IComponent
      description: "<xref href=&quot;System.ComponentModel.IComponent&quot;> </xref>建立的站台。"
    - id: name
      type: System.String
      description: "要指派給名稱`component`，或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>略過名稱指派。"
    return:
      type: System.ComponentModel.ISite
      description: "新建立的站台。"
  overload: System.ComponentModel.Container.CreateSite*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Container.Dispose
  id: Dispose
  parent: System.ComponentModel.Container
  langs:
  - csharp
  name: Dispose()
  nameWithType: Container.Dispose()
  fullName: System.ComponentModel.Container.Dispose()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "所使用的資源全部釋出<xref href=&quot;System.ComponentModel.Container&quot;> </xref>。"
  remarks: "<xref:System.ComponentModel.Container.Dispose%2A>當您完成使用<xref:System.ComponentModel.Container>.</xref:System.ComponentModel.Container>時</xref:System.ComponentModel.Container.Dispose%2A>呼叫 <xref:System.ComponentModel.Container.Dispose%2A>方法會使<xref:System.ComponentModel.Container>中無法使用的狀態。</xref:System.ComponentModel.Container> </xref:System.ComponentModel.Container.Dispose%2A> 在呼叫<xref:System.ComponentModel.Container.Dispose%2A>，您必須釋放所有參考<xref:System.ComponentModel.Container>讓記憶體回收行程可以回收記憶體的<xref:System.ComponentModel.Container>所佔用。</xref:System.ComponentModel.Container> </xref:System.ComponentModel.Container> </xref:System.ComponentModel.Container.Dispose%2A> 如需詳細資訊，請參閱[清除 Unmanaged 資源上](~/add/includes/ajax-current-ext-md.md)和[實作 Dispose 方法](~/add/includes/ajax-current-ext-md.md)。      > [!NOTE] > 一定要<xref:System.ComponentModel.Container.Dispose%2A>在發行您的最後一個參考至<xref:System.ComponentModel.Container>。</xref:System.ComponentModel.Container>前</xref:System.ComponentModel.Container.Dispose%2A>呼叫 否則，它所使用的資源將不會釋放直到記憶體回收行程呼叫<xref:System.ComponentModel.Container>物件的`Finalize`方法。</xref:System.ComponentModel.Container>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.ComponentModel.Container.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Container.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.ComponentModel.Container
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: Container.Dispose(Boolean)
  fullName: System.ComponentModel.Container.Dispose(Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "所使用的 unmanaged 的資源釋出<xref href=&quot;System.ComponentModel.Container&quot;> </xref>，並選擇性釋放 managed 的資源。"
  remarks: "這個方法會呼叫公用`Dispose`方法和<xref:System.Object.Finalize%2A>方法。</xref:System.Object.Finalize%2A> `Dispose`叫用受保護`Dispose(Boolean)`方法`disposing`參數設定為`true`。 <xref:System.Object.Finalize%2A>叫用`Dispose`與`disposing`設`false`。</xref:System.Object.Finalize%2A>       當`disposing`參數為 true，這個方法的任何 managed 物件所持有的資源全部釋出這個<xref:System.ComponentModel.Container>參考。</xref:System.ComponentModel.Container> 這個方法會叫用`Dispose`每個參考物件的方法。"
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>表示釋放 managed 和 unmanaged 資源，<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>表示只釋放 unmanaged 的資源。"
  overload: System.ComponentModel.Container.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Container.Finalize
  id: Finalize
  parent: System.ComponentModel.Container
  langs:
  - csharp
  name: Finalize()
  nameWithType: Container.Finalize()
  fullName: System.ComponentModel.Container.Finalize()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "釋出 unmanaged 的資源並執行其他清除作業之前<xref href=&quot;System.ComponentModel.Container&quot;></xref>回收進行回收。"
  remarks: "這個方法會覆寫<xref:System.Object.Finalize%2A>.</xref:System.Object.Finalize%2A> 應用程式程式碼不應該呼叫這個方法。物件的`Finalize`方法會自動叫用記憶體回收期間，除非已停用記憶體回收行程的最終處理的呼叫所<xref:System.GC.SuppressFinalize%2A>方法。</xref:System.GC.SuppressFinalize%2A>       如需詳細資訊，請參閱[Finalize 方法和解構函式](http://msdn.microsoft.com/en-us/fd376774-1643-499b-869e-9546a3aeea70)，[清除 Unmanaged 資源上](~/add/includes/ajax-current-ext-md.md)，和[覆寫 Finalize 方法](http://msdn.microsoft.com/en-us/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)。"
  syntax:
    content: ~Container ();
    parameters: []
  overload: System.ComponentModel.Container.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Container.GetService(System.Type)
  id: GetService(System.Type)
  parent: System.ComponentModel.Container
  langs:
  - csharp
  name: GetService(Type)
  nameWithType: Container.GetService(Type)
  fullName: System.ComponentModel.Container.GetService(Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "如果有的話，則取得指定型別的服務物件。"
  remarks: "如果這個方法的預設實作會傳回類別的目前執行個體`service`是<xref:System.ComponentModel.IContainer>; 否則它會傳回`null`。</xref:System.ComponentModel.IContainer> 您可以覆寫這個方法以提供自訂的實作，以傳回服務物件。 如需詳細資訊，請參閱<xref:System.IServiceProvider.GetService%2A?displayProperty=fullName>方法。</xref:System.IServiceProvider.GetService%2A?displayProperty=fullName>"
  syntax:
    content: protected virtual object GetService (Type service);
    parameters:
    - id: service
      type: System.Type
      description: "<xref:System.Type>要擷取的服務。</xref:System.Type>"
    return:
      type: System.Object
      description: "<xref:System.Object>實作所要求的服務，或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果無法解析服務。</xref:System.Object>"
  overload: System.ComponentModel.Container.GetService*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Container.Remove(System.ComponentModel.IComponent)
  id: Remove(System.ComponentModel.IComponent)
  parent: System.ComponentModel.Container
  langs:
  - csharp
  name: Remove(IComponent)
  nameWithType: Container.Remove(IComponent)
  fullName: System.ComponentModel.Container.Remove(IComponent)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "移除從元件<xref href=&quot;System.ComponentModel.Container&quot;> </xref>。"
  remarks: "在衍生類別可以覆寫這個方法。"
  syntax:
    content: public virtual void Remove (System.ComponentModel.IComponent component);
    parameters:
    - id: component
      type: System.ComponentModel.IComponent
      description: "要移除的元件。"
  overload: System.ComponentModel.Container.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Container.RemoveWithoutUnsiting(System.ComponentModel.IComponent)
  id: RemoveWithoutUnsiting(System.ComponentModel.IComponent)
  parent: System.ComponentModel.Container
  langs:
  - csharp
  name: RemoveWithoutUnsiting(IComponent)
  nameWithType: Container.RemoveWithoutUnsiting(IComponent)
  fullName: System.ComponentModel.Container.RemoveWithoutUnsiting(IComponent)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "移除從元件<xref href=&quot;System.ComponentModel.Container&quot;></xref>未設定<xref:System.ComponentModel.IComponent.Site*>至<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。</xref:System.ComponentModel.IComponent.Site*>"
  remarks: "RemoveWithoutUnsiting 方法清除網站像往常一樣，但不會設定元件的<xref:System.ComponentModel.IComponent.Site%2A>屬性`null`。</xref:System.ComponentModel.IComponent.Site%2A>"
  syntax:
    content: protected void RemoveWithoutUnsiting (System.ComponentModel.IComponent component);
    parameters:
    - id: component
      type: System.ComponentModel.IComponent
      description: "要移除的元件。"
  overload: System.ComponentModel.Container.RemoveWithoutUnsiting*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Container.ValidateName(System.ComponentModel.IComponent,System.String)
  id: ValidateName(System.ComponentModel.IComponent,System.String)
  parent: System.ComponentModel.Container
  langs:
  - csharp
  name: ValidateName(IComponent,String)
  nameWithType: Container.ValidateName(IComponent,String)
  fullName: System.ComponentModel.Container.ValidateName(IComponent,String)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "決定是否該元件名稱是唯一的這個容器。"
  remarks: "ValidateName 方法由呼叫<xref:System.ComponentModel.Container.Add%2A>方法來判斷名稱`component`加入是唯一的。 這個<xref:System.ComponentModel.Container></xref:System.ComponentModel.Container></xref:System.ComponentModel.Container.Add%2A> 如果`name`參數不是`null`而且不是唯一的<xref:System.ArgumentException>就會擲回。</xref:System.ArgumentException>"
  syntax:
    content: protected virtual void ValidateName (System.ComponentModel.IComponent component, string name);
    parameters:
    - id: component
      type: System.ComponentModel.IComponent
      description: "具名的元件。"
    - id: name
      type: System.String
      description: "要驗證的元件名稱。"
  overload: System.ComponentModel.Container.ValidateName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>component</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>name</code>不是唯一。"
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ComponentModel.Container.#ctor
  parent: System.ComponentModel.Container
  isExternal: false
  name: Container()
  nameWithType: Container.Container()
  fullName: System.ComponentModel.Container.Container()
- uid: System.ComponentModel.Container.Add(System.ComponentModel.IComponent)
  parent: System.ComponentModel.Container
  isExternal: false
  name: Add(IComponent)
  nameWithType: Container.Add(IComponent)
  fullName: System.ComponentModel.Container.Add(IComponent)
- uid: System.ComponentModel.IComponent
  parent: System.ComponentModel
  isExternal: false
  name: IComponent
  nameWithType: IComponent
  fullName: System.ComponentModel.IComponent
- uid: System.ComponentModel.Container.Add(System.ComponentModel.IComponent,System.String)
  parent: System.ComponentModel.Container
  isExternal: false
  name: Add(IComponent,String)
  nameWithType: Container.Add(IComponent,String)
  fullName: System.ComponentModel.Container.Add(IComponent,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.Container.Components
  parent: System.ComponentModel.Container
  isExternal: false
  name: Components
  nameWithType: Container.Components
  fullName: System.ComponentModel.Container.Components
- uid: System.ComponentModel.ComponentCollection
  parent: System.ComponentModel
  isExternal: false
  name: ComponentCollection
  nameWithType: ComponentCollection
  fullName: System.ComponentModel.ComponentCollection
- uid: System.ComponentModel.Container.CreateSite(System.ComponentModel.IComponent,System.String)
  parent: System.ComponentModel.Container
  isExternal: false
  name: CreateSite(IComponent,String)
  nameWithType: Container.CreateSite(IComponent,String)
  fullName: System.ComponentModel.Container.CreateSite(IComponent,String)
- uid: System.ComponentModel.ISite
  parent: System.ComponentModel
  isExternal: false
  name: ISite
  nameWithType: ISite
  fullName: System.ComponentModel.ISite
- uid: System.ComponentModel.Container.Dispose
  parent: System.ComponentModel.Container
  isExternal: false
  name: Dispose()
  nameWithType: Container.Dispose()
  fullName: System.ComponentModel.Container.Dispose()
- uid: System.ComponentModel.Container.Dispose(System.Boolean)
  parent: System.ComponentModel.Container
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: Container.Dispose(Boolean)
  fullName: System.ComponentModel.Container.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.Container.Finalize
  parent: System.ComponentModel.Container
  isExternal: false
  name: Finalize()
  nameWithType: Container.Finalize()
  fullName: System.ComponentModel.Container.Finalize()
- uid: System.ComponentModel.Container.GetService(System.Type)
  parent: System.ComponentModel.Container
  isExternal: false
  name: GetService(Type)
  nameWithType: Container.GetService(Type)
  fullName: System.ComponentModel.Container.GetService(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.Container.Remove(System.ComponentModel.IComponent)
  parent: System.ComponentModel.Container
  isExternal: false
  name: Remove(IComponent)
  nameWithType: Container.Remove(IComponent)
  fullName: System.ComponentModel.Container.Remove(IComponent)
- uid: System.ComponentModel.Container.RemoveWithoutUnsiting(System.ComponentModel.IComponent)
  parent: System.ComponentModel.Container
  isExternal: false
  name: RemoveWithoutUnsiting(IComponent)
  nameWithType: Container.RemoveWithoutUnsiting(IComponent)
  fullName: System.ComponentModel.Container.RemoveWithoutUnsiting(IComponent)
- uid: System.ComponentModel.Container.ValidateName(System.ComponentModel.IComponent,System.String)
  parent: System.ComponentModel.Container
  isExternal: false
  name: ValidateName(IComponent,String)
  nameWithType: Container.ValidateName(IComponent,String)
  fullName: System.ComponentModel.Container.ValidateName(IComponent,String)
- uid: System.ComponentModel.Container.#ctor*
  parent: System.ComponentModel.Container
  isExternal: false
  name: Container
  nameWithType: Container.Container
- uid: System.ComponentModel.Container.Add*
  parent: System.ComponentModel.Container
  isExternal: false
  name: Add
  nameWithType: Container.Add
- uid: System.ComponentModel.Container.Components*
  parent: System.ComponentModel.Container
  isExternal: false
  name: Components
  nameWithType: Container.Components
- uid: System.ComponentModel.Container.CreateSite*
  parent: System.ComponentModel.Container
  isExternal: false
  name: CreateSite
  nameWithType: Container.CreateSite
- uid: System.ComponentModel.Container.Dispose*
  parent: System.ComponentModel.Container
  isExternal: false
  name: Dispose
  nameWithType: Container.Dispose
- uid: System.ComponentModel.Container.Finalize*
  parent: System.ComponentModel.Container
  isExternal: false
  name: Finalize
  nameWithType: Container.Finalize
- uid: System.ComponentModel.Container.GetService*
  parent: System.ComponentModel.Container
  isExternal: false
  name: GetService
  nameWithType: Container.GetService
- uid: System.ComponentModel.Container.Remove*
  parent: System.ComponentModel.Container
  isExternal: false
  name: Remove
  nameWithType: Container.Remove
- uid: System.ComponentModel.Container.RemoveWithoutUnsiting*
  parent: System.ComponentModel.Container
  isExternal: false
  name: RemoveWithoutUnsiting
  nameWithType: Container.RemoveWithoutUnsiting
- uid: System.ComponentModel.Container.ValidateName*
  parent: System.ComponentModel.Container
  isExternal: false
  name: ValidateName
  nameWithType: Container.ValidateName
