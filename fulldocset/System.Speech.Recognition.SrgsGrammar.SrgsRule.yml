### YamlMime:ManagedReference
items:
- uid: System.Speech.Recognition.SrgsGrammar.SrgsRule
  id: SrgsRule
  children:
  - System.Speech.Recognition.SrgsGrammar.SrgsRule.#ctor(System.String)
  - System.Speech.Recognition.SrgsGrammar.SrgsRule.#ctor(System.String,System.Speech.Recognition.SrgsGrammar.SrgsElement[])
  - System.Speech.Recognition.SrgsGrammar.SrgsRule.Add(System.Speech.Recognition.SrgsGrammar.SrgsElement)
  - System.Speech.Recognition.SrgsGrammar.SrgsRule.BaseClass
  - System.Speech.Recognition.SrgsGrammar.SrgsRule.Elements
  - System.Speech.Recognition.SrgsGrammar.SrgsRule.Id
  - System.Speech.Recognition.SrgsGrammar.SrgsRule.OnError
  - System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit
  - System.Speech.Recognition.SrgsGrammar.SrgsRule.OnParse
  - System.Speech.Recognition.SrgsGrammar.SrgsRule.OnRecognition
  - System.Speech.Recognition.SrgsGrammar.SrgsRule.Scope
  - System.Speech.Recognition.SrgsGrammar.SrgsRule.Script
  langs:
  - csharp
  name: SrgsRule
  nameWithType: SrgsRule
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsRule
  type: Class
  summary: "表示文法規則。"
  remarks: "若要在執行階段建立新的規則，或在執行階段修改現有的文法資料流或檔案中的規則，請使用 SrgsRule 類別。       中的單字和片語 SrgsRule 物件所定義的文法中所指定<xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>執行個體限制語音辨識器必須能夠識別的輸入。</xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>       SrgsRule 物件會指定必須由順序物件包含這些讀出單字和片語的序列。 單字和片語規則中的會以物件表示這類<xref:System.Speech.Recognition.SrgsGrammar.SrgsItem>， <xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf>， <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef>，和<xref:System.Speech.Recognition.SrgsGrammar.SrgsToken>項目。</xref:System.Speech.Recognition.SrgsGrammar.SrgsToken> </xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef> </xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf> </xref:System.Speech.Recognition.SrgsGrammar.SrgsItem> 使用<xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.Elements%2A>屬性來存取之 SrgsRule 物件包含的子物件的集合。</xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.Elements%2A>       您可以判斷是否 SrgsRule 可以指定在規則中的參考中之外部文法的規則中設定其<xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.Scope%2A>屬性。</xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.Scope%2A>       不合法定義 SrgsRule 是空的或，只包含空格。       此類別代表`rule`World Wide Web Consortium (W3C) 中定義的項目[語音辨識文法規格 (SRGS) 1.0 版](http://go.microsoft.com/fwlink/?LinkId=201761)。 如需 SRGS`rule`項目，以及透過 System.Speech，其支援詳細資料請參閱[規則項目](http://msdn.microsoft.com/en-us/da67b4aa-0545-426a-a02f-1417b968021e)。"
  syntax:
    content: >-
      [System.Diagnostics.DebuggerDisplay("Rule={_id.ToString()} Scope={_scope.ToString()}")]

      [System.Diagnostics.DebuggerTypeProxy(typeof(System.Speech.Recognition.SrgsGrammar.SrgsRule/SrgsRuleDebugDisplay))]

      public class SrgsRule
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Speech.Recognition.SrgsGrammar.SrgsRule.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Speech.Recognition.SrgsGrammar.SrgsRule
  langs:
  - csharp
  name: SrgsRule(String)
  nameWithType: SrgsRule.SrgsRule(String)
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsRule.SrgsRule(String)
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition.SrgsGrammar
  summary: "初始化的新執行個體<xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsRule&quot;></xref>類別，並指定規則的識別碼。"
  remarks: "The SrgsRule constructor initializes the <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.Id%2A> property. The identifier must be unique within a given grammar.  \n  \n The SrgsRule constructor throws a <xref:System.FormatException> in the following circumstances:  \n  \n-   `id` is not a valid XML name, as defined in [Extensible Markup Language (XML) 1.0 (Fifth Edition)](http://www.w3.org/TR/REC-xml/). To paraphrase this definition, a valid XML name must begin with a letter, an underscore ('_'), or a colon (':') and can be followed by zero or more NameChar characters (also defined in the XML specification).  \n  \n-   `id` is \"NULL\" or \"VOID\" or \"GARBAGE\".  \n  \n-   `id` contains at least one invalid rule ID character. These characters are: '?', '*', '+', '&#124;', '(', '), '^', '$', '/', ';', '.', '=', '\\<', '>', '[', ']', '{', '}', '\\\\\\\\', ' ', '\\t', '\\r', and '\\n'."
  example:
  - "The following example creates a grammar that recognizes the phrase \"A nation that has won the World Cup is\" followed by the name of a country that has won the World Cup. The example creates a <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> object named `winnerRule` and passes in the identifier  `WorldCupWinner` as a <xref:System.String>. The <xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf> object consists of an array of new <xref:System.Speech.Recognition.SrgsGrammar.SrgsItem> objects containing alternatives to be recognized by the rule.  \n  \n```c#  \npublic void WorldSoccerWinners ()  \n{  \n  \n  // Create an SrgsDocument, create a new rule  \n  // and set its scope to public.  \n  SrgsDocument document = new SrgsDocument();  \n  SrgsRule winnerRule = new SrgsRule(\"WorldCupWinner\");  \n  winnerRule.Scope = SrgsRuleScope.Public;  \n  \n  // Add the introduction.  \n  winnerRule.Elements.Add(new SrgsItem(\"A nation that has won the world cup is: \"));  \n  \n  // Create the rule for the European nations.  \n  SrgsOneOf oneOfEurope = new SrgsOneOf(new SrgsItem[] {new SrgsItem(\"England\"),   \n    new SrgsItem(\"France\"), new SrgsItem(\"Germany\"), new SrgsItem(\"Italy\")});  \n  SrgsRule ruleEurope = (new SrgsRule(\"EuropeanNations\", new SrgsElement[] {oneOfEurope}));  \n  \n  // Create the rule for the South American nations.  \n  SrgsOneOf oneOfSAmerica = new SrgsOneOf(new SrgsItem[] {new SrgsItem(\"Argentina\"),   \n    new SrgsItem(\"Brazil\"), new SrgsItem(\"Uruguay\")});  \n  SrgsRule ruleSAmerica = (new SrgsRule(\"SouthAmericanNations\", new SrgsElement[] {oneOfSAmerica}));  \n  \n  // Add references to winnerRule for ruleEurope and ruleSAmerica.  \n  winnerRule.Elements.Add(new SrgsOneOf(new SrgsItem[] {(new SrgsItem   \n    (new SrgsRuleRef(ruleEurope))), new SrgsItem(new SrgsRuleRef(ruleSAmerica))}));  \n  \n  // Add all the rules to the document and make winnerRule   \n  // the root rule of the document.  \n  document.Rules.Add(new SrgsRule[] {winnerRule, ruleEurope, ruleSAmerica});  \n  document.Root = winnerRule;  \n}  \n```"
  syntax:
    content: public SrgsRule (string id);
    parameters:
    - id: id
      type: System.String
      description: "規則的識別碼。"
  overload: System.Speech.Recognition.SrgsGrammar.SrgsRule.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>id</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>id</code>是空的。"
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "<code>id</code>不是適當的規則識別項。"
  platform:
  - net462
- uid: System.Speech.Recognition.SrgsGrammar.SrgsRule.#ctor(System.String,System.Speech.Recognition.SrgsGrammar.SrgsElement[])
  id: '#ctor(System.String,System.Speech.Recognition.SrgsGrammar.SrgsElement[])'
  parent: System.Speech.Recognition.SrgsGrammar.SrgsRule
  langs:
  - csharp
  name: SrgsRule(String,SrgsElement[])
  nameWithType: SrgsRule.SrgsRule(String,SrgsElement[])
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsRule.SrgsRule(String,SrgsElement[])
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition.SrgsGrammar
  summary: "初始化的新執行個體<xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsRule&quot;></xref>陣列類別<xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsElement&quot;></xref>物件。"
  remarks: "The SrgsRule constructor initializes the <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.Id%2A> property. The identifier must be unique within a given grammar.  \n  \n The SrgsRule constructor throws a <xref:System.FormatException> in the following circumstances:  \n  \n-   `id` is not a valid XML name, as defined in [Extensible Markup Language (XML) 1.0 (Fifth Edition)](http://www.w3.org/TR/REC-xml/). To paraphrase this definition, a valid XML name must begin with a letter, an underscore ('_'), or a colon (':') and can be followed by zero or more NameChar characters (also defined in the XML specification).  \n  \n-   `id` is \"NULL\" or \"VOID\" or \"GARBAGE\".  \n  \n-   `id` contains at least one invalid rule ID character. These characters are: '?', '*', '+', '&#124;', '(', '), '^', '$', '/', ';', '.', '=', '\\<', '>', '[', ']', '{', '}', '\\\\\\\\', ' ', '\\t', '\\r', and '\\n'."
  example:
  - "The following example creates a grammar that recognizes the phrase \"A nation that has won the World Cup is\" followed by the name of a country that has won the World Cup. The example creates a public rule named `WorldCupWinner`. The example then creates two <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> objects, `ruleEurope` and  `ruleSAmerica`, passing in a <xref:System.String> for the rule identifier and an <xref:System.Speech.Recognition.SrgsGrammar.SrgsElement> array containing a <xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf> object. Subsequently, the example adds rule references to `ruleEurope` and `ruleSAmerica` from the rule `WorldCupWinner`.  \n  \n```c#  \npublic void WorldSoccerWinners ()  \n{  \n  // Create a grammar from an SRGSDocument, create a new rule  \n  // and set its scope to public.  \n  SrgsDocument srgsGrammar = new SrgsDocument ();  \n  SrgsRule winnerRule = new SrgsRule (\"WorldCupWinner\");  \n  winnerRule.Scope = SrgsRuleScope.Public;  \n  \n  // Add the introduction.  \n  winnerRule.Elements.Add (new SrgsItem (\"A nation that has won the world cup is\"));  \n  \n  // Create the rule for the European nations.  \n  SrgsOneOf oneOfEurope = new SrgsOneOf(new SrgsItem[] {new SrgsItem(\"England\"), new SrgsItem(\"France\"), new SrgsItem(\"Germany\"), new SrgsItem(\"Italy\")});  \n  SrgsRule ruleEurope = (new SrgsRule(\"EuropeanNations\", new SrgsElement[] {oneOfEurope}));  \n  \n  // Create the rule for the South American nations.  \n  SrgsOneOf oneOfSAmerica = new SrgsOneOf(new SrgsItem[] {new SrgsItem(\"Argentina\"), new SrgsItem(\"Brazil\"), new SrgsItem(\"Uruguay\")});  \n  SrgsRule ruleSAmerica = (new SrgsRule(\"SouthAmericanNations\", new SrgsElement[] {oneOfSAmerica}));  \n  \n  // Add references to winnerRule for ruleEurope and ruleSAmerica.  \n  winnerRule.Elements.Add(new SrgsOneOf(new SrgsItem[] {(new SrgsItem (new SrgsRuleRef(ruleEurope))), new SrgsItem(new SrgsRuleRef(ruleSAmerica))}));  \n  \n  // Add all the rules to the grammar and make winnerRule  \n  // the root rule of the grammar.  \n  document.Rules.Add(new SrgsRule[] {winnerRule, ruleEurope, ruleSAmerica});  \n  srgsGrammar.Root = winnerRule;  \n}  \n```  \n  \n The created grammar has the following form.  \n  \n```xml  \n<grammar version=\"1.0\" xml:lang=\"en-US\" xmlns=\"http://www.w3.org/2001/06/grammar\" root=\"WorldCupWinner\">  \n    <rule id=\"WorldCupWinner\" scope=\"public\">  \n        <item> A nation that has won the world cup is </item>  \n        <one-of>  \n            <item>  \n                <ruleref uri=\"#EuropeanNations\" />  \n            </item>  \n            <item>  \n                <ruleref uri=\"#SouthAmericanNations\" />  \n            </item>  \n        </one-of>  \n    </rule>  \n    <rule id=\"EuropeanNations\">  \n        <one-of>  \n            <item> England </item>  \n            <item> France </item>  \n            <item> Germany </item>  \n            <item> Italy </item>  \n        </one-of>  \n    </rule>  \n    <rule id=\"SouthAmericanNations\">  \n        <one-of>  \n            <item> Argentina </item>  \n            <item> Brazil </item>  \n            <item> Uruguay </item>  \n        </one-of>  \n    </rule>  \n</grammar>  \n```"
  syntax:
    content: public SrgsRule (string id, System.Speech.Recognition.SrgsGrammar.SrgsElement[] elements);
    parameters:
    - id: id
      type: System.String
      description: "規則的識別碼。"
    - id: elements
      type: System.Speech.Recognition.SrgsGrammar.SrgsElement[]
      description: "陣列<xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsElement&quot;></xref>項目。"
  overload: System.Speech.Recognition.SrgsGrammar.SrgsRule.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>id</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       <code>elements</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>id</code>是空的。"
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "<code>id</code>不是適當的規則識別項。"
  platform:
  - net462
- uid: System.Speech.Recognition.SrgsGrammar.SrgsRule.Add(System.Speech.Recognition.SrgsGrammar.SrgsElement)
  id: Add(System.Speech.Recognition.SrgsGrammar.SrgsElement)
  parent: System.Speech.Recognition.SrgsGrammar.SrgsRule
  langs:
  - csharp
  name: Add(SrgsElement)
  nameWithType: SrgsRule.Add(SrgsElement)
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsRule.Add(SrgsElement)
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition.SrgsGrammar
  summary: "新增<xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsElement&quot;></xref>至<xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsRule&quot;></xref>物件。"
  remarks: "一般新增項目<xref:System.Speech.Recognition.SrgsGrammar.SrgsRule>物件包含<xref:System.Speech.Recognition.SrgsGrammar.SrgsItem>， <xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf>， <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef>，和<xref:System.Speech.Recognition.SrgsGrammar.SrgsToken>物件，以指定可以說的喇叭。</xref:System.Speech.Recognition.SrgsGrammar.SrgsToken> </xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef> </xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf> </xref:System.Speech.Recognition.SrgsGrammar.SrgsItem> </xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> 有效的規則項目必須包含至少一個可辨識的文字片段或一個規則參考。 請參閱[建立文法使用 SrgsGrammar](http://msdn.microsoft.com/en-us/e4d9f96e-2241-4c39-b9e0-ac9ef4e9a906)如需詳細資訊。       <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule>物件可能也包含<xref:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag>和<xref:System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag>新增至規則中語意的值和語意索引鍵的物件。</xref:System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag> </xref:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag> </xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> 當它辨識片語的語意資訊，以及已辨識的片語，會傳回語音辨識引擎。 請參閱[語意解譯標記](http://msdn.microsoft.com/en-us/2e115391-73b3-4666-8fd1-540c529de3b0)如需詳細資訊。"
  example:
  - "The following example creates a grammar that recognizes the phrase \"A nation that has won the World Cup is\" followed by the name of a country that has won the World Cup. After creating the <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> object `winnerRule` and giving it the string identifier `WorldCupWinner`, the example uses the Add method to append the string  \"A nation that has won the World Cup is\" to the rule. The example then creates two additional rules, `ruleEurope` and  `ruleSAmerica`. Again using the Add method, the example appends an <xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf> object to the `WorldCupWinner` rule that contains rule references to `ruleEurope` and `ruleSAmerica`.  \n  \n```c#  \n// Create an SrgsDocument, create a new rule  \n// and set its scope to public.  \nSrgsDocument document = new SrgsDocument();  \nSrgsRule winnerRule = new SrgsRule(\"WorldCupWinner\");  \nwinnerRule.Scope = SrgsRuleScope.Public;  \n  \n// Add the introduction.  \nwinnerRule.Elements.Add(new SrgsItem(\"A nation that has won the world cup is: \"));  \n  \n// Create the rule for the European nations.  \nSrgsOneOf oneOfEurope = new SrgsOneOf(new SrgsItem[] {new SrgsItem(\"England\"), new SrgsItem(\"France\"), new SrgsItem(\"Germany\"), new SrgsItem(\"Italy\")});  \nSrgsRule ruleEurope = (new SrgsRule(\"EuropeanNations\", new SrgsElement[] {oneOfEurope}));  \n  \n// Create the rule for the South American nations.  \nSrgsOneOf oneOfSAmerica = new SrgsOneOf(new SrgsItem[] {new SrgsItem(\"Argentina\"), new SrgsItem(\"Brazil\"), new SrgsItem(\"Uruguay\")});  \nSrgsRule ruleSAmerica = (new SrgsRule(\"SouthAmericanNations\", new SrgsElement[] {oneOfSAmerica}));  \n  \n// Add references to winnerRule for ruleEurope and ruleSAmerica.  \nwinnerRule.Elements.Add(new SrgsOneOf(new SrgsItem[] {(new SrgsItem (new SrgsRuleRef(ruleEurope))), new SrgsItem(new SrgsRuleRef(ruleSAmerica))}));  \n  \n// Add all the rules to the document and make winnerRule   \n// the root rule of the document.  \ndocument.Rules.Add(new SrgsRule[] {winnerRule, ruleEurope, ruleSAmerica});  \ndocument.Root = winnerRule;  \n```"
  syntax:
    content: public void Add (System.Speech.Recognition.SrgsGrammar.SrgsElement element);
    parameters:
    - id: element
      type: System.Speech.Recognition.SrgsGrammar.SrgsElement
      description: "物件，繼承自<xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsElement&quot;> </xref> ，並指定可以辨識。"
  overload: System.Speech.Recognition.SrgsGrammar.SrgsRule.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>element</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Speech.Recognition.SrgsGrammar.SrgsRule.BaseClass
  id: BaseClass
  parent: System.Speech.Recognition.SrgsGrammar.SrgsRule
  langs:
  - csharp
  name: BaseClass
  nameWithType: SrgsRule.BaseClass
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsRule.BaseClass
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition.SrgsGrammar
  summary: "目前不支援這個屬性。"
  syntax:
    content: public string BaseClass { get; set; }
    return:
      type: System.String
      description: "不支援。"
  overload: System.Speech.Recognition.SrgsGrammar.SrgsRule.BaseClass*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.SrgsGrammar.SrgsRule.Elements
  id: Elements
  parent: System.Speech.Recognition.SrgsGrammar.SrgsRule
  langs:
  - csharp
  name: Elements
  nameWithType: SrgsRule.Elements
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsRule.Elements
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition.SrgsGrammar
  summary: "取得集合<xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsElement&quot;></xref>中的物件<xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsRule&quot;></xref>執行個體。"
  remarks: "中的項目<xref:System.Speech.Recognition.SrgsGrammar.SrgsRule>物件可以包含<xref:System.Speech.Recognition.SrgsGrammar.SrgsItem>， <xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf>， <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef>， <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken>， <xref:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag>，和<xref:System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag>物件。</xref:System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag> </xref:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag> </xref:System.Speech.Recognition.SrgsGrammar.SrgsToken> </xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef> </xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf> </xref:System.Speech.Recognition.SrgsGrammar.SrgsItem> </xref:System.Speech.Recognition.SrgsGrammar.SrgsRule>"
  syntax:
    content: public System.Collections.ObjectModel.Collection<System.Speech.Recognition.SrgsGrammar.SrgsElement> Elements { get; }
    return:
      type: System.Collections.ObjectModel.Collection{System.Speech.Recognition.SrgsGrammar.SrgsElement}
      description: "在規則中的元素的集合。"
  overload: System.Speech.Recognition.SrgsGrammar.SrgsRule.Elements*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.SrgsGrammar.SrgsRule.Id
  id: Id
  parent: System.Speech.Recognition.SrgsGrammar.SrgsRule
  langs:
  - csharp
  name: Id
  nameWithType: SrgsRule.Id
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsRule.Id
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition.SrgsGrammar
  summary: "取得或設定規則的識別碼。"
  remarks: "The identifier for a rule is a string that contains the name of the rule.  \n  \n A value used to set Id must adhere to the following rules:  \n  \n-   The value must be a valid XML name, as defined in [Extensible Markup Language (XML) 1.0 (Fifth Edition)](http://www.w3.org/TR/REC-xml/). To paraphrase this definition, a valid XML name must begin with a letter, an underscore ('_'), or a colon (':') and can be followed by zero or more NameChar characters (also defined in the XML specification).  \n  \n-   The value can be \"NULL\" or \"VOID\" or \"GARBAGE\".  \n  \n-   The value cannot contain any invalid rule ID character. These characters are: '?', '*', '+', '&#124;', '(', '), '^', '$', '/', ';', '.', '=', '\\<', '>', '[', ']', '{', '}', '\\\\\\\\', ' ', '\\t', '\\r', and '\\n'."
  syntax:
    content: public string Id { get; set; }
    return:
      type: System.String
      description: "規則的識別碼。"
  overload: System.Speech.Recognition.SrgsGrammar.SrgsRule.Id*
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "嘗試將識別碼設為無效的值。"
  platform:
  - net462
- uid: System.Speech.Recognition.SrgsGrammar.SrgsRule.OnError
  id: OnError
  parent: System.Speech.Recognition.SrgsGrammar.SrgsRule
  langs:
  - csharp
  name: OnError
  nameWithType: SrgsRule.OnError
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsRule.OnError
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition.SrgsGrammar
  summary: "目前不支援這個屬性。"
  syntax:
    content: public string OnError { get; set; }
    return:
      type: System.String
      description: "不支援。"
  overload: System.Speech.Recognition.SrgsGrammar.SrgsRule.OnError*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit
  id: OnInit
  parent: System.Speech.Recognition.SrgsGrammar.SrgsRule
  langs:
  - csharp
  name: OnInit
  nameWithType: SrgsRule.OnInit
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition.SrgsGrammar
  summary: "目前不支援這個屬性。"
  syntax:
    content: public string OnInit { get; set; }
    return:
      type: System.String
      description: "不支援。"
  overload: System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.SrgsGrammar.SrgsRule.OnParse
  id: OnParse
  parent: System.Speech.Recognition.SrgsGrammar.SrgsRule
  langs:
  - csharp
  name: OnParse
  nameWithType: SrgsRule.OnParse
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsRule.OnParse
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition.SrgsGrammar
  summary: "目前不支援這個屬性。"
  syntax:
    content: public string OnParse { get; set; }
    return:
      type: System.String
      description: "不支援。"
  overload: System.Speech.Recognition.SrgsGrammar.SrgsRule.OnParse*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.SrgsGrammar.SrgsRule.OnRecognition
  id: OnRecognition
  parent: System.Speech.Recognition.SrgsGrammar.SrgsRule
  langs:
  - csharp
  name: OnRecognition
  nameWithType: SrgsRule.OnRecognition
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsRule.OnRecognition
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition.SrgsGrammar
  summary: "目前不支援這個屬性。"
  syntax:
    content: public string OnRecognition { get; set; }
    return:
      type: System.String
      description: "不支援。"
  overload: System.Speech.Recognition.SrgsGrammar.SrgsRule.OnRecognition*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.SrgsGrammar.SrgsRule.Scope
  id: Scope
  parent: System.Speech.Recognition.SrgsGrammar.SrgsRule
  langs:
  - csharp
  name: Scope
  nameWithType: SrgsRule.Scope
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsRule.Scope
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition.SrgsGrammar
  summary: "取得或設定是否可以啟用規則，辨識和規則可以參考其他規則。"
  remarks: "範圍的預設值是`Private`。 從根規則，其包含的文法中或從另一項規則中所參考根規則的規則參考只能辨識啟動私用的規則。 私用的規則無法參考外部文法中，除非根規則，其包含的文法的宣告為私用的規則。       如果其範圍設定為`Public`、<xref:System.Speech.Recognition.SrgsGrammar.SrgsRule>物件可以辨識啟動從傳<xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef>物件中包含的文法或外部文法中的規則。</xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef> </xref:System.Speech.Recognition.SrgsGrammar.SrgsRule>"
  example:
  - "The following example creates a grammar that recognizes the phrase \"A nation that has won the World Cup is\" followed by the name of a country that has won the World Cup. It creates a public rule named `WorldCupWinner` and sets the scope of that rule to Public.  \n  \n```c#  \n// Create an SrgsDocument, create a new rule and set its scope to public.  \nSrgsDocument document = new SrgsDocument();  \nSrgsRule winnerRule = new SrgsRule(\"WorldCupWinner\");  \nwinnerRule.Scope = SrgsRuleScope.Public;  \n  \n// Add the introduction.  \nwinnerRule.Elements.Add(new SrgsItem(\"A nation that has won the world cup is: \"));  \n  \n// Create the rule for the European nations.  \nSrgsOneOf oneOfEurope = new SrgsOneOf(new SrgsItem[] {new SrgsItem(\"England\"), new SrgsItem(\"France\"), new SrgsItem(\"Germany\"), new SrgsItem(\"Italy\")});  \nSrgsRule ruleEurope = (new SrgsRule(\"EuropeanNations\", new SrgsElement[] {oneOfEurope}));  \n  \n// Create the rule for the South American nations.  \nSrgsOneOf oneOfSAmerica = new SrgsOneOf(new SrgsItem[] {new SrgsItem(\"Argentina\"), new SrgsItem(\"Brazil\"), new SrgsItem(\"Uruguay\")});  \nSrgsRule ruleSAmerica = (new SrgsRule(\"SouthAmericanNations\", new SrgsElement[] {oneOfSAmerica}));  \n  \n// Add references to winnerRule for ruleEurope and ruleSAmerica.  \nwinnerRule.Elements.Add(new SrgsOneOf(new SrgsItem[] {(new SrgsItem (new SrgsRuleRef(ruleEurope)), new SrgsItem(new SrgsRuleRef(ruleSAmerica)})));  \n  \n// Add all the rules to the document and make winnerRule   \n// the root rule of the document.  \ndocument.Rules.Add(new SrgsRule[] {winnerRule, ruleEurope, ruleSAmerica});  \ndocument.Root = winnerRule;  \n```  \n  \n The created grammar has the following form.  \n  \n```xml  \n<grammar version=\"1.0\" xml:lang=\"en-US\" xmlns=\"http://www.w3.org/2001/06/grammar\" root=\"WorldCupWinner\">  \n    <rule id=\"WorldCupWinner\" scope=\"public\">  \n        <item> A nation that has won the world cup is </item>  \n        <one-of>  \n            <item>  \n                <ruleref uri=\"#EuropeanNations\" />  \n            </item>  \n            <item>  \n                <ruleref uri=\"#SouthAmericanNations\" />  \n            </item>  \n        </one-of>  \n    </rule>  \n    <rule id=\"EuropeanNations\">  \n        <one-of>  \n            <item> England< /item>  \n            <item> France </item>  \n            <item> Germany </item>  \n            <item> Italy </item>  \n        </one-of>  \n    </rule>  \n    <rule id=\"SouthAmericanNations\">  \n        <one-of>  \n            <item> Argentina </item>  \n            <item> Brazil </item>  \n            <item> Uruguay </item>  \n        </one-of>  \n    </rule>  \n</grammar>  \n```"
  syntax:
    content: public System.Speech.Recognition.SrgsGrammar.SrgsRuleScope Scope { get; set; }
    return:
      type: System.Speech.Recognition.SrgsGrammar.SrgsRuleScope
      description: "值的集合規則的範圍。"
  overload: System.Speech.Recognition.SrgsGrammar.SrgsRule.Scope*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.SrgsGrammar.SrgsRule.Script
  id: Script
  parent: System.Speech.Recognition.SrgsGrammar.SrgsRule
  langs:
  - csharp
  name: Script
  nameWithType: SrgsRule.Script
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsRule.Script
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition.SrgsGrammar
  summary: "目前不支援這個屬性。"
  syntax:
    content: public string Script { get; set; }
    return:
      type: System.String
      description: "不支援。"
  overload: System.Speech.Recognition.SrgsGrammar.SrgsRule.Script*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.FormatException
  isExternal: true
  name: System.FormatException
- uid: System.Speech.Recognition.SrgsGrammar.SrgsRule.#ctor(System.String)
  parent: System.Speech.Recognition.SrgsGrammar.SrgsRule
  isExternal: false
  name: SrgsRule(String)
  nameWithType: SrgsRule.SrgsRule(String)
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsRule.SrgsRule(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Speech.Recognition.SrgsGrammar.SrgsRule.#ctor(System.String,System.Speech.Recognition.SrgsGrammar.SrgsElement[])
  parent: System.Speech.Recognition.SrgsGrammar.SrgsRule
  isExternal: false
  name: SrgsRule(String,SrgsElement[])
  nameWithType: SrgsRule.SrgsRule(String,SrgsElement[])
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsRule.SrgsRule(String,SrgsElement[])
- uid: System.Speech.Recognition.SrgsGrammar.SrgsElement[]
  parent: System.Speech.Recognition.SrgsGrammar
  isExternal: false
  name: SrgsElement
  nameWithType: SrgsElement
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsElement[]
  spec.csharp:
  - uid: System.Speech.Recognition.SrgsGrammar.SrgsElement
    name: SrgsElement
    nameWithType: SrgsElement
    fullName: SrgsElement[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Speech.Recognition.SrgsGrammar.SrgsRule.Add(System.Speech.Recognition.SrgsGrammar.SrgsElement)
  parent: System.Speech.Recognition.SrgsGrammar.SrgsRule
  isExternal: false
  name: Add(SrgsElement)
  nameWithType: SrgsRule.Add(SrgsElement)
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsRule.Add(SrgsElement)
- uid: System.Speech.Recognition.SrgsGrammar.SrgsElement
  parent: System.Speech.Recognition.SrgsGrammar
  isExternal: false
  name: SrgsElement
  nameWithType: SrgsElement
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsElement
- uid: System.Speech.Recognition.SrgsGrammar.SrgsRule.BaseClass
  parent: System.Speech.Recognition.SrgsGrammar.SrgsRule
  isExternal: false
  name: BaseClass
  nameWithType: SrgsRule.BaseClass
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsRule.BaseClass
- uid: System.Speech.Recognition.SrgsGrammar.SrgsRule.Elements
  parent: System.Speech.Recognition.SrgsGrammar.SrgsRule
  isExternal: false
  name: Elements
  nameWithType: SrgsRule.Elements
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsRule.Elements
- uid: System.Collections.ObjectModel.Collection{System.Speech.Recognition.SrgsGrammar.SrgsElement}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<SrgsElement>
  nameWithType: Collection<SrgsElement>
  fullName: System.Collections.ObjectModel.Collection<System.Speech.Recognition.SrgsGrammar.SrgsElement>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.Speech.Recognition.SrgsGrammar.SrgsElement>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Speech.Recognition.SrgsGrammar.SrgsElement
    name: SrgsElement
    nameWithType: SrgsElement
    fullName: SrgsElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Speech.Recognition.SrgsGrammar.SrgsRule.Id
  parent: System.Speech.Recognition.SrgsGrammar.SrgsRule
  isExternal: false
  name: Id
  nameWithType: SrgsRule.Id
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsRule.Id
- uid: System.Speech.Recognition.SrgsGrammar.SrgsRule.OnError
  parent: System.Speech.Recognition.SrgsGrammar.SrgsRule
  isExternal: false
  name: OnError
  nameWithType: SrgsRule.OnError
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsRule.OnError
- uid: System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit
  parent: System.Speech.Recognition.SrgsGrammar.SrgsRule
  isExternal: false
  name: OnInit
  nameWithType: SrgsRule.OnInit
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit
- uid: System.Speech.Recognition.SrgsGrammar.SrgsRule.OnParse
  parent: System.Speech.Recognition.SrgsGrammar.SrgsRule
  isExternal: false
  name: OnParse
  nameWithType: SrgsRule.OnParse
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsRule.OnParse
- uid: System.Speech.Recognition.SrgsGrammar.SrgsRule.OnRecognition
  parent: System.Speech.Recognition.SrgsGrammar.SrgsRule
  isExternal: false
  name: OnRecognition
  nameWithType: SrgsRule.OnRecognition
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsRule.OnRecognition
- uid: System.Speech.Recognition.SrgsGrammar.SrgsRule.Scope
  parent: System.Speech.Recognition.SrgsGrammar.SrgsRule
  isExternal: false
  name: Scope
  nameWithType: SrgsRule.Scope
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsRule.Scope
- uid: System.Speech.Recognition.SrgsGrammar.SrgsRuleScope
  parent: System.Speech.Recognition.SrgsGrammar
  isExternal: false
  name: SrgsRuleScope
  nameWithType: SrgsRuleScope
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsRuleScope
- uid: System.Speech.Recognition.SrgsGrammar.SrgsRule.Script
  parent: System.Speech.Recognition.SrgsGrammar.SrgsRule
  isExternal: false
  name: Script
  nameWithType: SrgsRule.Script
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsRule.Script
- uid: System.Speech.Recognition.SrgsGrammar.SrgsRule.#ctor*
  parent: System.Speech.Recognition.SrgsGrammar.SrgsRule
  isExternal: false
  name: SrgsRule
  nameWithType: SrgsRule.SrgsRule
- uid: System.Speech.Recognition.SrgsGrammar.SrgsRule.Add*
  parent: System.Speech.Recognition.SrgsGrammar.SrgsRule
  isExternal: false
  name: Add
  nameWithType: SrgsRule.Add
- uid: System.Speech.Recognition.SrgsGrammar.SrgsRule.BaseClass*
  parent: System.Speech.Recognition.SrgsGrammar.SrgsRule
  isExternal: false
  name: BaseClass
  nameWithType: SrgsRule.BaseClass
- uid: System.Speech.Recognition.SrgsGrammar.SrgsRule.Elements*
  parent: System.Speech.Recognition.SrgsGrammar.SrgsRule
  isExternal: false
  name: Elements
  nameWithType: SrgsRule.Elements
- uid: System.Speech.Recognition.SrgsGrammar.SrgsRule.Id*
  parent: System.Speech.Recognition.SrgsGrammar.SrgsRule
  isExternal: false
  name: Id
  nameWithType: SrgsRule.Id
- uid: System.Speech.Recognition.SrgsGrammar.SrgsRule.OnError*
  parent: System.Speech.Recognition.SrgsGrammar.SrgsRule
  isExternal: false
  name: OnError
  nameWithType: SrgsRule.OnError
- uid: System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit*
  parent: System.Speech.Recognition.SrgsGrammar.SrgsRule
  isExternal: false
  name: OnInit
  nameWithType: SrgsRule.OnInit
- uid: System.Speech.Recognition.SrgsGrammar.SrgsRule.OnParse*
  parent: System.Speech.Recognition.SrgsGrammar.SrgsRule
  isExternal: false
  name: OnParse
  nameWithType: SrgsRule.OnParse
- uid: System.Speech.Recognition.SrgsGrammar.SrgsRule.OnRecognition*
  parent: System.Speech.Recognition.SrgsGrammar.SrgsRule
  isExternal: false
  name: OnRecognition
  nameWithType: SrgsRule.OnRecognition
- uid: System.Speech.Recognition.SrgsGrammar.SrgsRule.Scope*
  parent: System.Speech.Recognition.SrgsGrammar.SrgsRule
  isExternal: false
  name: Scope
  nameWithType: SrgsRule.Scope
- uid: System.Speech.Recognition.SrgsGrammar.SrgsRule.Script*
  parent: System.Speech.Recognition.SrgsGrammar.SrgsRule
  isExternal: false
  name: Script
  nameWithType: SrgsRule.Script
