### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential
  id: X509CertificateInitiatorServiceCredential
  children:
  - System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.Authentication
  - System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.Certificate
  - System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.SetCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)
  - System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.SetCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)
  langs:
  - csharp
  name: X509CertificateInitiatorServiceCredential
  nameWithType: X509CertificateInitiatorServiceCredential
  fullName: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential
  type: Class
  summary: "代表用來驗證用戶端出示的憑證服務的設定。 它也包含要用來加密用戶端的回應或回呼服務的憑證時<xref uid=&quot;langword_csharp_MutualCertificateDuplex&quot; name=&quot;MutualCertificateDuplex&quot; href=&quot;&quot;></xref>使用訊息安全性驗證模式。"
  remarks: "此類別中設定的憑證用來加密傳送給用戶端只能使用所設定的繫結的訊息`MutualCertificateDuplex`訊息安全性驗證模式。"
  syntax:
    content: public sealed class X509CertificateInitiatorServiceCredential
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.Authentication
  id: Authentication
  parent: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential
  langs:
  - csharp
  name: Authentication
  nameWithType: X509CertificateInitiatorServiceCredential.Authentication
  fullName: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.Authentication
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "取得用來驗證在驗證期間用戶端所提供之憑證的設定。"
  remarks: ''
  example:
  - "The following code shows how to use this property to set the certificate authentication properties.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public System.ServiceModel.Security.X509ClientCertificateAuthentication Authentication { get; }
    return:
      type: System.ServiceModel.Security.X509ClientCertificateAuthentication
      description: "用來驗證在驗證期間用戶端所提供之憑證的設定。"
  overload: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.Authentication*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.Certificate
  id: Certificate
  parent: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential
  langs:
  - csharp
  name: Certificate
  nameWithType: X509CertificateInitiatorServiceCredential.Certificate
  fullName: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.Certificate
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "取得或設定要用於憑證<xref uid=&quot;langword_csharp_MutualCertificateDuplex&quot; name=&quot;MutualCertificateDuplex&quot; href=&quot;&quot;></xref>訊息安全性驗證模式。"
  remarks: "這個屬性用於訊息安全性模式設定的繫結時`MutualCertificateDuplex`使用訊息安全性驗證模式。"
  example:
  - "The following code shows how to use this property to get the certificate.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public System.Security.Cryptography.X509Certificates.X509Certificate2 Certificate { get; set; }
    return:
      type: System.Security.Cryptography.X509Certificates.X509Certificate2
      description: "<xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref>用來加密訊息傳送至用戶端服務中沒有關聯的雙工傳輸則<xref uid=&quot;langword_csharp_MutualCertificateDuplex&quot; name=&quot;MutualCertificateDuplex&quot; href=&quot;&quot;></xref>使用訊息安全性驗證模式。"
  overload: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.Certificate*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "嘗試設定唯讀認證。"
  platform:
  - net462
- uid: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.SetCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)
  id: SetCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)
  parent: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential
  langs:
  - csharp
  name: SetCertificate(String,StoreLocation,StoreName)
  nameWithType: X509CertificateInitiatorServiceCredential.SetCertificate(String,StoreLocation,StoreName)
  fullName: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.SetCertificate(String,StoreLocation,StoreName)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "可讓您指定要用來加密用戶端的訊息，藉由指定主體辨別的名稱的憑證。 這項設定僅供與設定的繫結<xref uid=&quot;langword_csharp_MutualCertificateDuplex&quot; name=&quot;MutualCertificateDuplex&quot; href=&quot;&quot;></xref>訊息安全性驗證模式。"
  remarks: "[!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]`subjectName`參數，請參閱<xref:System.Security.Cryptography.X509Certificates.X509Certificate2.SubjectName%2A>.</xref:System.Security.Cryptography.X509Certificates.X509Certificate2.SubjectName%2A>       值`storeLocation`隨附的<xref:System.Security.Cryptography.X509Certificates.StoreLocation>列舉型別:- <xref:System.Security.Cryptography.X509Certificates.StoreLocation>︰ 指派給本機電腦 （預設值） 的憑證存放區。</xref:System.Security.Cryptography.X509Certificates.StoreLocation> </xref:System.Security.Cryptography.X509Certificates.StoreLocation>      - <xref:System.Security.Cryptography.X509Certificates.StoreLocation>︰ 目前使用者所使用的憑證存放區。</xref:System.Security.Cryptography.X509Certificates.StoreLocation>       如果用戶端應用程式在系統帳戶下執行，然後將憑證通常是<xref:System.Security.Cryptography.X509Certificates.StoreLocation>。</xref:System.Security.Cryptography.X509Certificates.StoreLocation> 如果用戶端應用程式的使用者帳戶下執行，然後將憑證通常是<xref:System.Security.Cryptography.X509Certificates.StoreLocation>。</xref:System.Security.Cryptography.X509Certificates.StoreLocation>       值`storeName`隨附的<xref:System.Security.Cryptography.X509Certificates.StoreName>列舉型別。</xref:System.Security.Cryptography.X509Certificates.StoreName>"
  example:
  - "The following code shows how to use this method to set the certificate.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public void SetCertificate (string subjectName, System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, System.Security.Cryptography.X509Certificates.StoreName storeName);
    parameters:
    - id: subjectName
      type: System.String
      description: "主體辨別的名稱。"
    - id: storeLocation
      type: System.Security.Cryptography.X509Certificates.StoreLocation
      description: "服務用來取得憑證的憑證存放區位置。"
    - id: storeName
      type: System.Security.Cryptography.X509Certificates.StoreName
      description: "若要開啟存放區的 X.509 憑證的名稱。"
  overload: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.SetCertificate*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.SetCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)
  id: SetCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)
  parent: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential
  langs:
  - csharp
  name: SetCertificate(StoreLocation,StoreName,X509FindType,Object)
  nameWithType: X509CertificateInitiatorServiceCredential.SetCertificate(StoreLocation,StoreName,X509FindType,Object)
  fullName: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.SetCertificate(StoreLocation,StoreName,X509FindType,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "指定要用於加密用戶端之訊息的憑證。 這項設定僅供與設定的繫結<xref uid=&quot;langword_csharp_MutualCertificateDuplex&quot; name=&quot;MutualCertificateDuplex&quot; href=&quot;&quot;></xref>訊息安全性驗證模式。"
  remarks: "值`storeLocation`隨附的<xref:System.Security.Cryptography.X509Certificates.StoreLocation>列舉型別:- <xref:System.Security.Cryptography.X509Certificates.StoreLocation>︰ 指派給本機電腦 （預設值） 的憑證存放區。</xref:System.Security.Cryptography.X509Certificates.StoreLocation> </xref:System.Security.Cryptography.X509Certificates.StoreLocation>      - <xref:System.Security.Cryptography.X509Certificates.StoreLocation>︰ 目前使用者所使用的憑證存放區。</xref:System.Security.Cryptography.X509Certificates.StoreLocation>       如果系統帳戶下執行應用程式，然後將憑證通常是<xref:System.Security.Cryptography.X509Certificates.StoreLocation>。</xref:System.Security.Cryptography.X509Certificates.StoreLocation> 如果使用者帳戶下執行應用程式，然後將憑證通常是<xref:System.Security.Cryptography.X509Certificates.StoreLocation>。</xref:System.Security.Cryptography.X509Certificates.StoreLocation>       值`storeName`隨附的<xref:System.Security.Cryptography.X509Certificates.StoreName>列舉型別。</xref:System.Security.Cryptography.X509Certificates.StoreName>       值`findType`隨附的<xref:System.Security.Cryptography.X509Certificates.X509FindType>列舉型別。</xref:System.Security.Cryptography.X509Certificates.X509FindType>       最常使用的列舉型別是<xref:System.Security.Cryptography.X509Certificates.X509FindType>，其會在指定的存放區中憑證的主體名稱不區分大小寫的搜尋。</xref:System.Security.Cryptography.X509Certificates.X509FindType> 這可以是不精確的搜尋。 如果找不到任何憑證或多個符合準則的憑證，<xref:System.InvalidOperationException>就會擲回。</xref:System.InvalidOperationException>"
  example:
  - "The following code shows how to use this method to set the certificate.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public void SetCertificate (System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, System.Security.Cryptography.X509Certificates.StoreName storeName, System.Security.Cryptography.X509Certificates.X509FindType findType, object findValue);
    parameters:
    - id: storeLocation
      type: System.Security.Cryptography.X509Certificates.StoreLocation
      description: "服務用來取得憑證的憑證存放區位置。"
    - id: storeName
      type: System.Security.Cryptography.X509Certificates.StoreName
      description: "若要開啟存放區的 X.509 憑證的名稱。"
    - id: findType
      type: System.Security.Cryptography.X509Certificates.X509FindType
      description: "要執行 X.509 搜尋類型。"
    - id: findValue
      type: System.Object
      description: "要在 X.509 憑證存放區中搜尋的值。"
  overload: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.SetCertificate*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.Authentication
  parent: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential
  isExternal: false
  name: Authentication
  nameWithType: X509CertificateInitiatorServiceCredential.Authentication
  fullName: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.Authentication
- uid: System.ServiceModel.Security.X509ClientCertificateAuthentication
  parent: System.ServiceModel.Security
  isExternal: false
  name: X509ClientCertificateAuthentication
  nameWithType: X509ClientCertificateAuthentication
  fullName: System.ServiceModel.Security.X509ClientCertificateAuthentication
- uid: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.Certificate
  parent: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential
  isExternal: false
  name: Certificate
  nameWithType: X509CertificateInitiatorServiceCredential.Certificate
  fullName: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.Certificate
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509Certificate2
  nameWithType: X509Certificate2
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2
- uid: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.SetCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)
  parent: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential
  isExternal: false
  name: SetCertificate(String,StoreLocation,StoreName)
  nameWithType: X509CertificateInitiatorServiceCredential.SetCertificate(String,StoreLocation,StoreName)
  fullName: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.SetCertificate(String,StoreLocation,StoreName)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.X509Certificates.StoreLocation
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: StoreLocation
  nameWithType: StoreLocation
  fullName: System.Security.Cryptography.X509Certificates.StoreLocation
- uid: System.Security.Cryptography.X509Certificates.StoreName
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: StoreName
  nameWithType: StoreName
  fullName: System.Security.Cryptography.X509Certificates.StoreName
- uid: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.SetCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)
  parent: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential
  isExternal: false
  name: SetCertificate(StoreLocation,StoreName,X509FindType,Object)
  nameWithType: X509CertificateInitiatorServiceCredential.SetCertificate(StoreLocation,StoreName,X509FindType,Object)
  fullName: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.SetCertificate(StoreLocation,StoreName,X509FindType,Object)
- uid: System.Security.Cryptography.X509Certificates.X509FindType
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509FindType
  nameWithType: X509FindType
  fullName: System.Security.Cryptography.X509Certificates.X509FindType
- uid: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.Authentication*
  parent: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential
  isExternal: false
  name: Authentication
  nameWithType: X509CertificateInitiatorServiceCredential.Authentication
- uid: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.Certificate*
  parent: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential
  isExternal: false
  name: Certificate
  nameWithType: X509CertificateInitiatorServiceCredential.Certificate
- uid: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.SetCertificate*
  parent: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential
  isExternal: false
  name: SetCertificate
  nameWithType: X509CertificateInitiatorServiceCredential.SetCertificate
