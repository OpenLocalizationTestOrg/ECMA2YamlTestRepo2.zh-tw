### YamlMime:ManagedReference
items:
- uid: System.Messaging.SecurityContext
  id: SecurityContext
  children:
  - System.Messaging.SecurityContext.Dispose
  langs:
  - csharp
  name: SecurityContext
  nameWithType: SecurityContext
  fullName: System.Messaging.SecurityContext
  type: Class
  summary: "代表佇列中訊息的安全性內容。"
  remarks: "安全性內容，其中包含快取的安全性資訊，例如憑證和傳送者識別項附加到訊息，要求驗證時所需的內部憑證對應的私密金鑰，使用者的 SID。       如果用戶端，例如 ASP.NET 應用程式，模擬使用者來傳送訊息至佇列時，使用者的識別用來存取佇列。 如果遠端佇列，這些認證會快取，並用於後續傳送至佇列的訊息。 因此，在後續的訊息中的 SID 會傳送訊息至佇列的第一個使用者的快取身分識別。 傳送訊息至佇列的第一個使用者的快取身分識別將用於後續的使用者。       若要解決這個問題，將 安全性內容中使用<xref:System.Messaging.Message.SecurityContext%2A>再將訊息傳送至遠端的佇列，以確保目前使用者的認證會用來存取佇列。</xref:System.Messaging.Message.SecurityContext%2A> 不過，建議的最佳作法是︰ 1。  請驗證的佇列的佇列。      2.  以網域識別執行 ASP.NET 應用程式，並授權該應用程式寫入至佇列。      3.  不會模擬使用者時使用的佇列。 相反地，取得呼叫者身分識別，然後執行授權檢查 ASP.NET 應用程式中或是訊息中包含呼叫者身分識別，然後執行授權檢查收件者應用程式中。"
  syntax:
    content: 'public sealed class SecurityContext : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Messaging.SecurityContext.Dispose
  id: Dispose
  parent: System.Messaging.SecurityContext
  langs:
  - csharp
  name: Dispose()
  nameWithType: SecurityContext.Dispose()
  fullName: System.Messaging.SecurityContext.Dispose()
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "所使用的資源全部釋出<xref href=&quot;System.Messaging.SecurityContext&quot;> </xref>。"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Messaging.SecurityContext.Dispose*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Messaging.SecurityContext.Dispose
  parent: System.Messaging.SecurityContext
  isExternal: false
  name: Dispose()
  nameWithType: SecurityContext.Dispose()
  fullName: System.Messaging.SecurityContext.Dispose()
- uid: System.Messaging.SecurityContext.Dispose*
  parent: System.Messaging.SecurityContext
  isExternal: false
  name: Dispose
  nameWithType: SecurityContext.Dispose
