### YamlMime:ManagedReference
items:
- uid: System.Windows.Input.KeyboardDevice
  id: KeyboardDevice
  children:
  - System.Windows.Input.KeyboardDevice.#ctor(System.Windows.Input.InputManager)
  - System.Windows.Input.KeyboardDevice.ActiveSource
  - System.Windows.Input.KeyboardDevice.ClearFocus
  - System.Windows.Input.KeyboardDevice.DefaultRestoreFocusMode
  - System.Windows.Input.KeyboardDevice.Focus(System.Windows.IInputElement)
  - System.Windows.Input.KeyboardDevice.FocusedElement
  - System.Windows.Input.KeyboardDevice.GetKeyStates(System.Windows.Input.Key)
  - System.Windows.Input.KeyboardDevice.GetKeyStatesFromSystem(System.Windows.Input.Key)
  - System.Windows.Input.KeyboardDevice.IsKeyDown(System.Windows.Input.Key)
  - System.Windows.Input.KeyboardDevice.IsKeyToggled(System.Windows.Input.Key)
  - System.Windows.Input.KeyboardDevice.IsKeyUp(System.Windows.Input.Key)
  - System.Windows.Input.KeyboardDevice.Modifiers
  - System.Windows.Input.KeyboardDevice.Target
  langs:
  - csharp
  name: KeyboardDevice
  nameWithType: KeyboardDevice
  fullName: System.Windows.Input.KeyboardDevice
  type: Class
  summary: "代表鍵盤裝置的抽象類別。"
  remarks: "KeyboardDevice 支援[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]基礎結構，不適合直接從您的程式碼使用。       相關的鍵盤輸入，請使用<xref:System.Windows.Input.Keyboard>類別。</xref:System.Windows.Input.Keyboard> <xref:System.Windows.Input.Keyboard>類別代表鍵盤應用程式，並提供方法、 屬性和事件，以便反映鍵盤的狀態。</xref:System.Windows.Input.Keyboard>       <xref:System.Windows.Input.Keyboard>類別委派至適當的 KeyboardDevice。</xref:System.Windows.Input.Keyboard>       每個<xref:System.Windows.Input.InputDevice>物件都代表一個特定的輸入的裝置。</xref:System.Windows.Input.InputDevice>  例如，如果有兩個滑鼠，會有兩個<xref:System.Windows.Input.InputDevice>物件。</xref:System.Windows.Input.InputDevice>"
  syntax:
    content: 'public abstract class KeyboardDevice : System.Windows.Input.InputDevice'
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.Input.InputDevice
  implements: []
  inheritedMembers:
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.Input.KeyboardDevice.#ctor(System.Windows.Input.InputManager)
  id: '#ctor(System.Windows.Input.InputManager)'
  parent: System.Windows.Input.KeyboardDevice
  langs:
  - csharp
  name: KeyboardDevice(InputManager)
  nameWithType: KeyboardDevice.KeyboardDevice(InputManager)
  fullName: System.Windows.Input.KeyboardDevice.KeyboardDevice(InputManager)
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "初始化的新執行個體<xref href=&quot;System.Windows.Input.KeyboardDevice&quot;></xref>類別。"
  syntax:
    content: protected KeyboardDevice (System.Windows.Input.InputManager inputManager);
    parameters:
    - id: inputManager
      type: System.Windows.Input.InputManager
      description: "與此相關聯的輸入的管理員<xref href=&quot;System.Windows.Input.KeyboardDevice&quot;> </xref>。"
  overload: System.Windows.Input.KeyboardDevice.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.KeyboardDevice.ActiveSource
  id: ActiveSource
  parent: System.Windows.Input.KeyboardDevice
  langs:
  - csharp
  name: ActiveSource
  nameWithType: KeyboardDevice.ActiveSource
  fullName: System.Windows.Input.KeyboardDevice.ActiveSource
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "取得<xref href=&quot;System.Windows.PresentationSource&quot;></xref>報告此裝置的輸入。"
  syntax:
    content: public override System.Windows.PresentationSource ActiveSource { get; }
    return:
      type: System.Windows.PresentationSource
      description: "此裝置的輸入來源。"
  overload: System.Windows.Input.KeyboardDevice.ActiveSource*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.KeyboardDevice.ClearFocus
  id: ClearFocus
  parent: System.Windows.Input.KeyboardDevice
  langs:
  - csharp
  name: ClearFocus()
  nameWithType: KeyboardDevice.ClearFocus()
  fullName: System.Windows.Input.KeyboardDevice.ClearFocus()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "清除焦點。"
  remarks: "ClearFocus 方法將焦點設定到`null`。"
  syntax:
    content: public void ClearFocus ();
    parameters: []
  overload: System.Windows.Input.KeyboardDevice.ClearFocus*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.KeyboardDevice.DefaultRestoreFocusMode
  id: DefaultRestoreFocusMode
  parent: System.Windows.Input.KeyboardDevice
  langs:
  - csharp
  name: DefaultRestoreFocusMode
  nameWithType: KeyboardDevice.DefaultRestoreFocusMode
  fullName: System.Windows.Input.KeyboardDevice.DefaultRestoreFocusMode
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "取得或設定的行為[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]還原焦點時。"
  syntax:
    content: public System.Windows.Input.RestoreFocusMode DefaultRestoreFocusMode { get; set; }
    return:
      type: System.Windows.Input.RestoreFocusMode
      description: "列舉值，指定的行為[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]還原焦點時。 中的預設值<xref href=&quot;System.Windows.Input.RestoreFocusMode&quot;> </xref>。"
  overload: System.Windows.Input.KeyboardDevice.DefaultRestoreFocusMode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.KeyboardDevice.Focus(System.Windows.IInputElement)
  id: Focus(System.Windows.IInputElement)
  parent: System.Windows.Input.KeyboardDevice
  langs:
  - csharp
  name: Focus(IInputElement)
  nameWithType: KeyboardDevice.Focus(IInputElement)
  fullName: System.Windows.Input.KeyboardDevice.Focus(IInputElement)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "將鍵盤焦點設在指定<xref href=&quot;System.Windows.IInputElement&quot;> </xref>。"
  syntax:
    content: public System.Windows.IInputElement Focus (System.Windows.IInputElement element);
    parameters:
    - id: element
      type: System.Windows.IInputElement
      description: "將焦點移到項目。"
    return:
      type: System.Windows.IInputElement
      description: "具有鍵盤焦點的項目。"
  overload: System.Windows.Input.KeyboardDevice.Focus*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>element</code>is not a <xref href=&quot;System.Windows.UIElement&quot;></xref> or <xref href=&quot;System.Windows.ContentElement&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Input.KeyboardDevice.FocusedElement
  id: FocusedElement
  parent: System.Windows.Input.KeyboardDevice
  langs:
  - csharp
  name: FocusedElement
  nameWithType: KeyboardDevice.FocusedElement
  fullName: System.Windows.Input.KeyboardDevice.FocusedElement
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "取得具有鍵盤焦點的項目。"
  syntax:
    content: public System.Windows.IInputElement FocusedElement { get; }
    return:
      type: System.Windows.IInputElement
      description: "具有鍵盤焦點的項目。"
  overload: System.Windows.Input.KeyboardDevice.FocusedElement*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.KeyboardDevice.GetKeyStates(System.Windows.Input.Key)
  id: GetKeyStates(System.Windows.Input.Key)
  parent: System.Windows.Input.KeyboardDevice
  langs:
  - csharp
  name: GetKeyStates(Key)
  nameWithType: KeyboardDevice.GetKeyStates(Key)
  fullName: System.Windows.Input.KeyboardDevice.GetKeyStates(Key)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "取得指定的按鍵狀態集<xref href=&quot;System.Windows.Input.Key&quot;> </xref>。"
  syntax:
    content: public System.Windows.Input.KeyStates GetKeyStates (System.Windows.Input.Key key);
    parameters:
    - id: key
      type: System.Windows.Input.Key
      description: "若要檢查索引鍵。"
    return:
      type: System.Windows.Input.KeyStates
      description: "重要狀態的指定索引鍵的集合。"
  overload: System.Windows.Input.KeyboardDevice.GetKeyStates*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "<code>key</code>不是有效的金鑰。"
  platform:
  - net462
- uid: System.Windows.Input.KeyboardDevice.GetKeyStatesFromSystem(System.Windows.Input.Key)
  id: GetKeyStatesFromSystem(System.Windows.Input.Key)
  parent: System.Windows.Input.KeyboardDevice
  langs:
  - csharp
  name: GetKeyStatesFromSystem(Key)
  nameWithType: KeyboardDevice.GetKeyStatesFromSystem(Key)
  fullName: System.Windows.Input.KeyboardDevice.GetKeyStatesFromSystem(Key)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "當在衍生類別中覆寫時，會取得<xref href=&quot;System.Windows.Input.KeyStates&quot;></xref>指定<xref href=&quot;System.Windows.Input.Key&quot;> </xref>。"
  syntax:
    content: protected abstract System.Windows.Input.KeyStates GetKeyStatesFromSystem (System.Windows.Input.Key key);
    parameters:
    - id: key
      type: System.Windows.Input.Key
      description: "若要檢查索引鍵。"
    return:
      type: System.Windows.Input.KeyStates
      description: "重要狀態的指定索引鍵的集合。"
  overload: System.Windows.Input.KeyboardDevice.GetKeyStatesFromSystem*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.KeyboardDevice.IsKeyDown(System.Windows.Input.Key)
  id: IsKeyDown(System.Windows.Input.Key)
  parent: System.Windows.Input.KeyboardDevice
  langs:
  - csharp
  name: IsKeyDown(Key)
  nameWithType: KeyboardDevice.IsKeyDown(Key)
  fullName: System.Windows.Input.KeyboardDevice.IsKeyDown(Key)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "決定是否指定<xref href=&quot;System.Windows.Input.Key&quot;></xref>處於關閉狀態。"
  syntax:
    content: public bool IsKeyDown (System.Windows.Input.Key key);
    parameters:
    - id: key
      type: System.Windows.Input.Key
      description: "若要檢查索引鍵。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<code> key </code>處於已按下狀態; 否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Input.KeyboardDevice.IsKeyDown*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "<code>key</code>不是有效的金鑰。"
  platform:
  - net462
- uid: System.Windows.Input.KeyboardDevice.IsKeyToggled(System.Windows.Input.Key)
  id: IsKeyToggled(System.Windows.Input.Key)
  parent: System.Windows.Input.KeyboardDevice
  langs:
  - csharp
  name: IsKeyToggled(Key)
  nameWithType: KeyboardDevice.IsKeyToggled(Key)
  fullName: System.Windows.Input.KeyboardDevice.IsKeyToggled(Key)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "決定是否指定<xref href=&quot;System.Windows.Input.Key&quot;></xref>中切換的狀態。"
  syntax:
    content: public bool IsKeyToggled (System.Windows.Input.Key key);
    parameters:
    - id: key
      type: System.Windows.Input.Key
      description: "若要檢查索引鍵。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<code> key </code>處於 已切換之狀態; 否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Input.KeyboardDevice.IsKeyToggled*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "<code>key</code>不是有效的金鑰。"
  platform:
  - net462
- uid: System.Windows.Input.KeyboardDevice.IsKeyUp(System.Windows.Input.Key)
  id: IsKeyUp(System.Windows.Input.Key)
  parent: System.Windows.Input.KeyboardDevice
  langs:
  - csharp
  name: IsKeyUp(Key)
  nameWithType: KeyboardDevice.IsKeyUp(Key)
  fullName: System.Windows.Input.KeyboardDevice.IsKeyUp(Key)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "決定是否指定<xref href=&quot;System.Windows.Input.Key&quot;></xref>處於最新狀態。"
  syntax:
    content: public bool IsKeyUp (System.Windows.Input.Key key);
    parameters:
    - id: key
      type: System.Windows.Input.Key
      description: "若要檢查索引鍵。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<code> key </code>處於向上狀態; 否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Input.KeyboardDevice.IsKeyUp*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "<code>key</code>不是有效的金鑰。"
  platform:
  - net462
- uid: System.Windows.Input.KeyboardDevice.Modifiers
  id: Modifiers
  parent: System.Windows.Input.KeyboardDevice
  langs:
  - csharp
  name: Modifiers
  nameWithType: KeyboardDevice.Modifiers
  fullName: System.Windows.Input.KeyboardDevice.Modifiers
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "取得一組<xref href=&quot;System.Windows.Input.ModifierKeys&quot;></xref>目前按下它。"
  syntax:
    content: public System.Windows.Input.ModifierKeys Modifiers { get; }
    return:
      type: System.Windows.Input.ModifierKeys
      description: "修飾詞的索引鍵集。"
  overload: System.Windows.Input.KeyboardDevice.Modifiers*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.KeyboardDevice.Target
  id: Target
  parent: System.Windows.Input.KeyboardDevice
  langs:
  - csharp
  name: Target
  nameWithType: KeyboardDevice.Target
  fullName: System.Windows.Input.KeyboardDevice.Target
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "取得指定<xref href=&quot;System.Windows.IInputElement&quot;></xref>來自此裝置的輸入會傳送至。"
  remarks: "目標<xref:System.Windows.Input.KeyboardDevice>是具有鍵盤焦點的物件。</xref:System.Windows.Input.KeyboardDevice>"
  syntax:
    content: public override System.Windows.IInputElement Target { get; }
    return:
      type: System.Windows.IInputElement
      description: "收到輸入的項目。"
  overload: System.Windows.Input.KeyboardDevice.Target*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Input.InputDevice
  isExternal: false
  name: System.Windows.Input.InputDevice
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ComponentModel.InvalidEnumArgumentException
  parent: System.ComponentModel
  isExternal: false
  name: InvalidEnumArgumentException
  nameWithType: InvalidEnumArgumentException
  fullName: System.ComponentModel.InvalidEnumArgumentException
- uid: System.Windows.Input.KeyboardDevice.#ctor(System.Windows.Input.InputManager)
  parent: System.Windows.Input.KeyboardDevice
  isExternal: false
  name: KeyboardDevice(InputManager)
  nameWithType: KeyboardDevice.KeyboardDevice(InputManager)
  fullName: System.Windows.Input.KeyboardDevice.KeyboardDevice(InputManager)
- uid: System.Windows.Input.InputManager
  parent: System.Windows.Input
  isExternal: false
  name: InputManager
  nameWithType: InputManager
  fullName: System.Windows.Input.InputManager
- uid: System.Windows.Input.KeyboardDevice.ActiveSource
  parent: System.Windows.Input.KeyboardDevice
  isExternal: false
  name: ActiveSource
  nameWithType: KeyboardDevice.ActiveSource
  fullName: System.Windows.Input.KeyboardDevice.ActiveSource
- uid: System.Windows.PresentationSource
  parent: System.Windows
  isExternal: false
  name: PresentationSource
  nameWithType: PresentationSource
  fullName: System.Windows.PresentationSource
- uid: System.Windows.Input.KeyboardDevice.ClearFocus
  parent: System.Windows.Input.KeyboardDevice
  isExternal: false
  name: ClearFocus()
  nameWithType: KeyboardDevice.ClearFocus()
  fullName: System.Windows.Input.KeyboardDevice.ClearFocus()
- uid: System.Windows.Input.KeyboardDevice.DefaultRestoreFocusMode
  parent: System.Windows.Input.KeyboardDevice
  isExternal: false
  name: DefaultRestoreFocusMode
  nameWithType: KeyboardDevice.DefaultRestoreFocusMode
  fullName: System.Windows.Input.KeyboardDevice.DefaultRestoreFocusMode
- uid: System.Windows.Input.RestoreFocusMode
  parent: System.Windows.Input
  isExternal: false
  name: RestoreFocusMode
  nameWithType: RestoreFocusMode
  fullName: System.Windows.Input.RestoreFocusMode
- uid: System.Windows.Input.KeyboardDevice.Focus(System.Windows.IInputElement)
  parent: System.Windows.Input.KeyboardDevice
  isExternal: false
  name: Focus(IInputElement)
  nameWithType: KeyboardDevice.Focus(IInputElement)
  fullName: System.Windows.Input.KeyboardDevice.Focus(IInputElement)
- uid: System.Windows.IInputElement
  parent: System.Windows
  isExternal: false
  name: IInputElement
  nameWithType: IInputElement
  fullName: System.Windows.IInputElement
- uid: System.Windows.Input.KeyboardDevice.FocusedElement
  parent: System.Windows.Input.KeyboardDevice
  isExternal: false
  name: FocusedElement
  nameWithType: KeyboardDevice.FocusedElement
  fullName: System.Windows.Input.KeyboardDevice.FocusedElement
- uid: System.Windows.Input.KeyboardDevice.GetKeyStates(System.Windows.Input.Key)
  parent: System.Windows.Input.KeyboardDevice
  isExternal: false
  name: GetKeyStates(Key)
  nameWithType: KeyboardDevice.GetKeyStates(Key)
  fullName: System.Windows.Input.KeyboardDevice.GetKeyStates(Key)
- uid: System.Windows.Input.KeyStates
  parent: System.Windows.Input
  isExternal: false
  name: KeyStates
  nameWithType: KeyStates
  fullName: System.Windows.Input.KeyStates
- uid: System.Windows.Input.Key
  parent: System.Windows.Input
  isExternal: false
  name: Key
  nameWithType: Key
  fullName: System.Windows.Input.Key
- uid: System.Windows.Input.KeyboardDevice.GetKeyStatesFromSystem(System.Windows.Input.Key)
  parent: System.Windows.Input.KeyboardDevice
  isExternal: false
  name: GetKeyStatesFromSystem(Key)
  nameWithType: KeyboardDevice.GetKeyStatesFromSystem(Key)
  fullName: System.Windows.Input.KeyboardDevice.GetKeyStatesFromSystem(Key)
- uid: System.Windows.Input.KeyboardDevice.IsKeyDown(System.Windows.Input.Key)
  parent: System.Windows.Input.KeyboardDevice
  isExternal: false
  name: IsKeyDown(Key)
  nameWithType: KeyboardDevice.IsKeyDown(Key)
  fullName: System.Windows.Input.KeyboardDevice.IsKeyDown(Key)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Input.KeyboardDevice.IsKeyToggled(System.Windows.Input.Key)
  parent: System.Windows.Input.KeyboardDevice
  isExternal: false
  name: IsKeyToggled(Key)
  nameWithType: KeyboardDevice.IsKeyToggled(Key)
  fullName: System.Windows.Input.KeyboardDevice.IsKeyToggled(Key)
- uid: System.Windows.Input.KeyboardDevice.IsKeyUp(System.Windows.Input.Key)
  parent: System.Windows.Input.KeyboardDevice
  isExternal: false
  name: IsKeyUp(Key)
  nameWithType: KeyboardDevice.IsKeyUp(Key)
  fullName: System.Windows.Input.KeyboardDevice.IsKeyUp(Key)
- uid: System.Windows.Input.KeyboardDevice.Modifiers
  parent: System.Windows.Input.KeyboardDevice
  isExternal: false
  name: Modifiers
  nameWithType: KeyboardDevice.Modifiers
  fullName: System.Windows.Input.KeyboardDevice.Modifiers
- uid: System.Windows.Input.ModifierKeys
  parent: System.Windows.Input
  isExternal: false
  name: ModifierKeys
  nameWithType: ModifierKeys
  fullName: System.Windows.Input.ModifierKeys
- uid: System.Windows.Input.KeyboardDevice.Target
  parent: System.Windows.Input.KeyboardDevice
  isExternal: false
  name: Target
  nameWithType: KeyboardDevice.Target
  fullName: System.Windows.Input.KeyboardDevice.Target
- uid: System.Windows.Input.KeyboardDevice.#ctor*
  parent: System.Windows.Input.KeyboardDevice
  isExternal: false
  name: KeyboardDevice
  nameWithType: KeyboardDevice.KeyboardDevice
- uid: System.Windows.Input.KeyboardDevice.ActiveSource*
  parent: System.Windows.Input.KeyboardDevice
  isExternal: false
  name: ActiveSource
  nameWithType: KeyboardDevice.ActiveSource
- uid: System.Windows.Input.KeyboardDevice.ClearFocus*
  parent: System.Windows.Input.KeyboardDevice
  isExternal: false
  name: ClearFocus
  nameWithType: KeyboardDevice.ClearFocus
- uid: System.Windows.Input.KeyboardDevice.DefaultRestoreFocusMode*
  parent: System.Windows.Input.KeyboardDevice
  isExternal: false
  name: DefaultRestoreFocusMode
  nameWithType: KeyboardDevice.DefaultRestoreFocusMode
- uid: System.Windows.Input.KeyboardDevice.Focus*
  parent: System.Windows.Input.KeyboardDevice
  isExternal: false
  name: Focus
  nameWithType: KeyboardDevice.Focus
- uid: System.Windows.Input.KeyboardDevice.FocusedElement*
  parent: System.Windows.Input.KeyboardDevice
  isExternal: false
  name: FocusedElement
  nameWithType: KeyboardDevice.FocusedElement
- uid: System.Windows.Input.KeyboardDevice.GetKeyStates*
  parent: System.Windows.Input.KeyboardDevice
  isExternal: false
  name: GetKeyStates
  nameWithType: KeyboardDevice.GetKeyStates
- uid: System.Windows.Input.KeyboardDevice.GetKeyStatesFromSystem*
  parent: System.Windows.Input.KeyboardDevice
  isExternal: false
  name: GetKeyStatesFromSystem
  nameWithType: KeyboardDevice.GetKeyStatesFromSystem
- uid: System.Windows.Input.KeyboardDevice.IsKeyDown*
  parent: System.Windows.Input.KeyboardDevice
  isExternal: false
  name: IsKeyDown
  nameWithType: KeyboardDevice.IsKeyDown
- uid: System.Windows.Input.KeyboardDevice.IsKeyToggled*
  parent: System.Windows.Input.KeyboardDevice
  isExternal: false
  name: IsKeyToggled
  nameWithType: KeyboardDevice.IsKeyToggled
- uid: System.Windows.Input.KeyboardDevice.IsKeyUp*
  parent: System.Windows.Input.KeyboardDevice
  isExternal: false
  name: IsKeyUp
  nameWithType: KeyboardDevice.IsKeyUp
- uid: System.Windows.Input.KeyboardDevice.Modifiers*
  parent: System.Windows.Input.KeyboardDevice
  isExternal: false
  name: Modifiers
  nameWithType: KeyboardDevice.Modifiers
- uid: System.Windows.Input.KeyboardDevice.Target*
  parent: System.Windows.Input.KeyboardDevice
  isExternal: false
  name: Target
  nameWithType: KeyboardDevice.Target
