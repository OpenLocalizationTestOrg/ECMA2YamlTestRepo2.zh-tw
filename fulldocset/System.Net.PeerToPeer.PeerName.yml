### YamlMime:ManagedReference
items:
- uid: System.Net.PeerToPeer.PeerName
  id: PeerName
  children:
  - System.Net.PeerToPeer.PeerName.#ctor(System.String)
  - System.Net.PeerToPeer.PeerName.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Net.PeerToPeer.PeerName.#ctor(System.String,System.Net.PeerToPeer.PeerNameType)
  - System.Net.PeerToPeer.PeerName.Authority
  - System.Net.PeerToPeer.PeerName.Classifier
  - System.Net.PeerToPeer.PeerName.CreateFromPeerHostName(System.String)
  - System.Net.PeerToPeer.PeerName.CreateRelativePeerName(System.Net.PeerToPeer.PeerName,System.String)
  - System.Net.PeerToPeer.PeerName.Equals(System.Net.PeerToPeer.PeerName)
  - System.Net.PeerToPeer.PeerName.Equals(System.Object)
  - System.Net.PeerToPeer.PeerName.GetHashCode
  - System.Net.PeerToPeer.PeerName.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Net.PeerToPeer.PeerName.IsSecured
  - System.Net.PeerToPeer.PeerName.PeerHostName
  - System.Net.PeerToPeer.PeerName.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Net.PeerToPeer.PeerName.ToString
  langs:
  - csharp
  name: PeerName
  nameWithType: PeerName
  fullName: System.Net.PeerToPeer.PeerName
  type: Class
  summary: "指定定義對等 PeerName 物件的值。 「 對等名稱通常是用來識別對等資源的字串。"
  syntax:
    content: 'public class PeerName : IEquatable<System.Net.PeerToPeer.PeerName>, System.Runtime.Serialization.ISerializable'
  inheritance:
  - System.Object
  implements:
  - System.IEquatable<System.Net.PeerToPeer.PeerName>
  - System.Runtime.Serialization.ISerializable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerName.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Net.PeerToPeer.PeerName
  langs:
  - csharp
  name: PeerName(String)
  nameWithType: PeerName.PeerName(String)
  fullName: System.Net.PeerToPeer.PeerName.PeerName(String)
  type: Constructor
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "初始化新物件型別的<xref href=&quot;System.Net.PeerToPeer.PeerName&quot;></xref>具有所提供的完整限定的對等名稱<xref:System.String>值。</xref:System.String>"
  syntax:
    content: public PeerName (string remotePeerName);
    parameters:
    - id: remotePeerName
      type: System.String
      description: "包含要編碼為對等名稱<xref href=&quot;System.Net.PeerToPeer.PeerName&quot;></xref>執行個體。"
  overload: System.Net.PeerToPeer.PeerName.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<xref:System.String>提供不是有效<xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref>。</xref:System.String>"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>remotePeerName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerName.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.Net.PeerToPeer.PeerName
  langs:
  - csharp
  name: PeerName(SerializationInfo,StreamingContext)
  nameWithType: PeerName.PeerName(SerializationInfo,StreamingContext)
  fullName: System.Net.PeerToPeer.PeerName.PeerName(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "於其中填入<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;></xref>物件序列化所需的資料<xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref>。"
  remarks: "這個建構函式，才能還原序列化此型別。"
  syntax:
    content: protected PeerName (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "參考保有還原序列化這個執行個體所需的資料物件。"
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "提供方法來還原序列化資料的內容。 也稱為序列化資料的來源。"
  overload: System.Net.PeerToPeer.PeerName.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "一或多個參數都是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerName.#ctor(System.String,System.Net.PeerToPeer.PeerNameType)
  id: '#ctor(System.String,System.Net.PeerToPeer.PeerNameType)'
  parent: System.Net.PeerToPeer.PeerName
  langs:
  - csharp
  name: PeerName(String,PeerNameType)
  nameWithType: PeerName.PeerName(String,PeerNameType)
  fullName: System.Net.PeerToPeer.PeerName.PeerName(String,PeerNameType)
  type: Constructor
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "初始化的新執行個體<xref href=&quot;System.Net.PeerToPeer.PeerName&quot;></xref>類別。"
  remarks: "這個建構函式傳回型別的物件<xref:System.Net.PeerToPeer.PeerName>，其中包含對等體的完整限定的名稱。</xref:System.Net.PeerToPeer.PeerName> 此外，它也會指定對等名稱是受保護或不安全。       這個執行個體會使用預設的對等識別目前的使用者和指定<xref:System.Net.PeerToPeer.PeerName.Classifier%2A>，除了建立具有指定的分類和類型的對等名稱的類型。</xref:System.Net.PeerToPeer.PeerName.Classifier%2A>"
  syntax:
    content: public PeerName (string classifier, System.Net.PeerToPeer.PeerNameType peerNameType);
    parameters:
    - id: classifier
      type: System.String
      description: "<xref:System.String>其中包含要編碼為對等名稱<xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref>。</xref:System.String>"
    - id: peerNameType
      type: System.Net.PeerToPeer.PeerNameType
      description: "<xref href=&quot;System.Net.PeerToPeer.PeerNameType&quot;></xref>列舉值，指定要建立的對等名稱的類型。"
  overload: System.Net.PeerToPeer.PeerName.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<xref:System.Net.PeerToPeer.PeerName.Classifier*>包含一或多個不合法的字元。</xref:System.Net.PeerToPeer.PeerName.Classifier*>"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "一或多個參數都是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "-預設使用的識別做為基礎的<xref href=&quot;System.Net.PeerToPeer.PeerName&quot;></xref>無法擷取。      - <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref>無法建立。"
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerName.Authority
  id: Authority
  parent: System.Net.PeerToPeer.PeerName
  langs:
  - csharp
  name: Authority
  nameWithType: PeerName.Authority
  fullName: System.Net.PeerToPeer.PeerName.Authority
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "傳回字串，指定所使用的授權單位<xref href=&quot;System.Net.PeerToPeer.PeerName&quot;></xref>物件。"
  remarks: "只有擁有者或對等主機，可以註冊的受保護的對等名稱。 「 對等名稱會被視為安全受到自我簽署憑證。       對等名稱為區分大小寫和對等名稱的格式為︰ *Authority.Classifier*。 例如，&quot;0.MyPeerName 」 是語式正確的對等名稱。"
  syntax:
    content: public string Authority { get; }
    return:
      type: System.String
      description: "字串，其中包含指定的驗證部分<xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref>。 安全的對等名稱，這個屬性會包含公開金鑰，做為&40; 個字元的十六進位字串。 不安全的對等名稱，這個屬性是設定為零 (0)。"
  overload: System.Net.PeerToPeer.PeerName.Authority*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerName.Classifier
  id: Classifier
  parent: System.Net.PeerToPeer.PeerName
  langs:
  - csharp
  name: Classifier
  nameWithType: PeerName.Classifier
  fullName: System.Net.PeerToPeer.PeerName.Classifier
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "傳回字串，包含對等的對等的分類器<xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref>。"
  remarks: "The format of a peer name is: *Authority.Classifier*. The peer name *Classifier* component can be set to any string that contains 149 or fewer Unicode characters, including the `null` (\"\\0\") terminator. Peer name strings are case-sensitive.  \n  \n For secured peer names, the classifier and the dot (period) after the authority are optional. For unsecured peer names, the classifier is not optional."
  syntax:
    content: public string Classifier { get; }
    return:
      type: System.String
      description: "字串，其中包含用來識別的對等名稱的分類器部分<xref href=&quot;System.Net.PeerToPeer.PeerNameRegistration&quot;></xref>或 PNRP 解析<xref href=&quot;System.Net.PeerToPeer.Cloud&quot;> </xref>。       除非明確指定，否則所有屬性的預設值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>之參考類型和零 (0) 的屬性型別的<xref uid=&quot;langword_csharp_int&quot; name=&quot;int&quot; href=&quot;&quot;> </xref>。"
  overload: System.Net.PeerToPeer.PeerName.Classifier*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerName.CreateFromPeerHostName(System.String)
  id: CreateFromPeerHostName(System.String)
  parent: System.Net.PeerToPeer.PeerName
  langs:
  - csharp
  name: CreateFromPeerHostName(String)
  nameWithType: PeerName.CreateFromPeerHostName(String)
  fullName: System.Net.PeerToPeer.PeerName.CreateFromPeerHostName(String)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "建立的新執行個體指定<xref:System.Net.PeerToPeer.PeerName.PeerHostName*>物件使用指定的對等的主機名稱。</xref:System.Net.PeerToPeer.PeerName.PeerHostName*>"
  remarks: "端對端主機是 「 種子節點 」 負責初始化對等網路工作階段，邀請對等電腦參與這種類型的網路連線是最適用於像是交談群組或遊戲工作階段通訊的應用程式。       這個方法可以用來建立<xref:System.Net.PeerToPeer.PeerName>物件根據<xref:System.Net.PeerToPeer.PeerName.PeerHostName%2A>屬性。</xref:System.Net.PeerToPeer.PeerName.PeerHostName%2A> </xref:System.Net.PeerToPeer.PeerName> 這個對等名稱不是節點的呼叫端識別相關聯。"
  syntax:
    content: public static System.Net.PeerToPeer.PeerName CreateFromPeerHostName (string peerHostName);
    parameters:
    - id: peerHostName
      type: System.String
      description: "字串，包含完整的 DNS 主機名稱。"
    return:
      type: System.Net.PeerToPeer.PeerName
      description: "A <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref>物件，表示指定的對等主機名稱。"
  overload: System.Net.PeerToPeer.PeerName.CreateFromPeerHostName*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<xref:System.String>提供不是有效的對等的主機名稱字串。</xref:System.String>"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<xref href=&quot;System.Net.PeerToPeer.PeerName.PeerHostName&quot;></xref>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "A <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref>無法建立從提供<xref:System.Net.PeerToPeer.PeerName.PeerHostName*></xref:System.Net.PeerToPeer.PeerName.PeerHostName*>"
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerName.CreateRelativePeerName(System.Net.PeerToPeer.PeerName,System.String)
  id: CreateRelativePeerName(System.Net.PeerToPeer.PeerName,System.String)
  parent: System.Net.PeerToPeer.PeerName
  langs:
  - csharp
  name: CreateRelativePeerName(PeerName,String)
  nameWithType: PeerName.CreateRelativePeerName(PeerName,String)
  fullName: System.Net.PeerToPeer.PeerName.CreateRelativePeerName(PeerName,String)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "建立新<xref href=&quot;System.Net.PeerToPeer.PeerName&quot;></xref>取代<xref:System.Net.PeerToPeer.PeerName.Classifier*>欄位上提供定義<xref href=&quot;System.Net.PeerToPeer.PeerName&quot;></xref>物件與指定的分類字串值。</xref:System.Net.PeerToPeer.PeerName.Classifier*>"
  remarks: "<xref:System.Net.PeerToPeer.PeerName.Classifier%2A>附加至現有的<xref:System.Net.PeerToPeer.PeerName.Authority%2A>部份<xref:System.Net.PeerToPeer.PeerName>.</xref:System.Net.PeerToPeer.PeerName> </xref:System.Net.PeerToPeer.PeerName.Authority%2A> </xref:System.Net.PeerToPeer.PeerName.Classifier%2A> 這個字串是不超過 149 個字元，包括`null`結束字元。 指定`null`傳回身分識別的對等名稱。"
  syntax:
    content: public static System.Net.PeerToPeer.PeerName CreateRelativePeerName (System.Net.PeerToPeer.PeerName peerName, string classifier);
    parameters:
    - id: peerName
      type: System.Net.PeerToPeer.PeerName
      description: "<xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref>物件上設定新的分類字串值。"
    - id: classifier
      type: System.String
      description: "<xref:System.Net.PeerToPeer.PeerName.Classifier*>設定對傳回<xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref>。</xref:System.Net.PeerToPeer.PeerName.Classifier*>"
    return:
      type: System.Net.PeerToPeer.PeerName
      description: "新<xref href=&quot;System.Net.PeerToPeer.PeerName&quot;></xref>物件，其中包含更新的分類。"
  overload: System.Net.PeerToPeer.PeerName.CreateRelativePeerName*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<xref:System.String>提供不是有效的對等名稱分類。</xref:System.String>"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "一或多個參數都是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "A <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref>無法建立從提供<xref:System.Net.PeerToPeer.PeerName.PeerHostName*></xref:System.Net.PeerToPeer.PeerName.PeerHostName*>"
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerName.Equals(System.Net.PeerToPeer.PeerName)
  id: Equals(System.Net.PeerToPeer.PeerName)
  parent: System.Net.PeerToPeer.PeerName
  langs:
  - csharp
  name: Equals(PeerName)
  nameWithType: PeerName.Equals(PeerName)
  fullName: System.Net.PeerToPeer.PeerName.Equals(PeerName)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "執行區分大小寫的比較目前的<xref href=&quot;System.Net.PeerToPeer.PeerName&quot;></xref>和指定的對等名稱。"
  remarks: "兩個對等名稱會被視為相等，如果它們包含相同的字元，在其<xref:System.Net.PeerToPeer.PeerName.Authority%2A>和<xref:System.Net.PeerToPeer.PeerName.Classifier%2A>元件。</xref:System.Net.PeerToPeer.PeerName.Classifier%2A> </xref:System.Net.PeerToPeer.PeerName.Authority%2A>       在比較之前字串上執行不正規化。  所有的正規化應該完成時或之前建構的對等名稱的物件。"
  syntax:
    content: public bool Equals (System.Net.PeerToPeer.PeerName other);
    parameters:
    - id: other
      type: System.Net.PeerToPeer.PeerName
      description: "要比較與這個對等名稱<xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref>。"
    return:
      type: System.Boolean
      description: "傳回<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>如果指定<xref href=&quot;System.Net.PeerToPeer.PeerName&quot;></xref>識別相同的資源與目前對等名稱的物件; 否則這個方法會傳回<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>。       這個方法也會傳回<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;></xref>如果<code> other </code>設<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Net.PeerToPeer.PeerName.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerName.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Net.PeerToPeer.PeerName
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: PeerName.Equals(Object)
  fullName: System.Net.PeerToPeer.PeerName.Equals(Object)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "決定是否此內容<xref href=&quot;System.Net.PeerToPeer.PeerName&quot;></xref>是否等於另一個物件的內容。"
  remarks: "這個方法繼承的預設簽章和<xref:System.Object>.</xref:System.Object>的行為"
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "<xref:System.Object>要與目前比較<xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref>。</xref:System.Object>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>如果<xref href=&quot;System.Net.PeerToPeer.PeerName&quot;></xref>和比較物件包含相同的資訊，否則為<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Net.PeerToPeer.PeerName.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerName.GetHashCode
  id: GetHashCode
  parent: System.Net.PeerToPeer.PeerName
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: PeerName.GetHashCode()
  fullName: System.Net.PeerToPeer.PeerName.GetHashCode()
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "覆寫<xref:System.Object.GetHashCode*>方法。</xref:System.Object.GetHashCode*>"
  remarks: "兩個物件視為相等，如果此方法傳回兩者都是相同的雜湊碼。"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "目前<xref:System.Object>.</xref:System.Object>雜湊碼"
  overload: System.Net.PeerToPeer.PeerName.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerName.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Net.PeerToPeer.PeerName
  langs:
  - csharp
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: PeerName.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Net.PeerToPeer.PeerName.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "要序列化所需的資料填入的序列化資訊物件<xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref>。"
  remarks: "衍生的型別必須呼叫基底型別<xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A>方法。</xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A>"
  syntax:
    content: protected virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "存放序列化的資料與相關聯<xref href=&quot;System.Net.PeerToPeer.PeerName&quot;></xref>物件。"
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "包含相關聯之序列化資料流目的地<xref href=&quot;System.Net.PeerToPeer.PeerName&quot;></xref>物件。"
  overload: System.Net.PeerToPeer.PeerName.GetObjectData*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerName.IsSecured
  id: IsSecured
  parent: System.Net.PeerToPeer.PeerName
  langs:
  - csharp
  name: IsSecured
  nameWithType: PeerName.IsSecured
  fullName: System.Net.PeerToPeer.PeerName.IsSecured
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "取得布林值，指定這是否為安全的對等名稱。"
  remarks: "「 對等名稱會被視為安全受到自我簽署憑證。       只有擁有者可以向 PNRP 安全的對等名稱。"
  syntax:
    content: public bool IsSecured { get; }
    return:
      type: System.Boolean
      description: "如果<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>，這個對等名稱受到私用金鑰 / 公開金鑰組。 其名稱包含該對等電腦的使用者憑證的公開金鑰的安全雜湊演算法 (SHA) 雜湊。 否則，如果<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>的對等名稱中有任何相關聯的身分識別。       除非明確指定，否則所有屬性的預設值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>之參考類型和零 (0) 的屬性型別的<xref uid=&quot;langword_csharp_int&quot; name=&quot;int&quot; href=&quot;&quot;> </xref>。"
  overload: System.Net.PeerToPeer.PeerName.IsSecured*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerName.PeerHostName
  id: PeerHostName
  parent: System.Net.PeerToPeer.PeerName
  langs:
  - csharp
  name: PeerHostName
  nameWithType: PeerName.PeerHostName
  fullName: System.Net.PeerToPeer.PeerName.PeerHostName
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "取得對等主控件的名稱。 這是 DNS 編碼版本<xref href=&quot;System.Net.PeerToPeer.PeerName&quot;></xref>這相當於 PeerHostName 是這兩個識別項。  兩者之間的差異是視覺表示法。"
  remarks: "端對端主機是 「 種子節點 」 負責初始化對等網路工作階段，邀請對等電腦參與這種類型的網路連線是最適用於像是交談群組或遊戲工作階段通訊的應用程式。       PeerHostName 屬性會指定對等建立之對等網路工作階段，且其被視為工作階段主機的名稱。  對等網路工作階段主機可能會對等電腦收集到一個以上的<xref:System.Net.PeerToPeer.Cloud>.</xref:System.Net.PeerToPeer.Cloud> 此外，對等可能同時裝載多個對等的主機。"
  syntax:
    content: public string PeerHostName { get; }
    return:
      type: System.String
      description: "A<xref:System.String>的端對端主機名稱的值。</xref:System.String> 除非明確指定，否則所有屬性的預設值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>參考類型。"
  overload: System.Net.PeerToPeer.PeerName.PeerHostName*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerName.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  isEii: true
  parent: System.Net.PeerToPeer.PeerName
  langs:
  - csharp
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: PeerName.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Net.PeerToPeer.PeerName.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "實作<xref href=&quot;System.Runtime.Serialization.ISerializable&quot;></xref>介面，並傳回序列化所需的資料<xref href=&quot;System.Net.PeerToPeer.PeerName&quot;></xref>執行個體。"
  syntax:
    content: void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "存放序列化的資料與相關聯<xref href=&quot;System.Net.PeerToPeer.PeerName&quot;></xref>物件。"
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "包含相關聯之序列化資料流目的地<xref href=&quot;System.Net.PeerToPeer.PeerName&quot;></xref>物件。"
  overload: System.Net.PeerToPeer.PeerName.System#Runtime#Serialization#ISerializable#GetObjectData*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerName.ToString
  id: ToString
  parent: System.Net.PeerToPeer.PeerName
  langs:
  - csharp
  name: ToString()
  nameWithType: PeerName.ToString()
  fullName: System.Net.PeerToPeer.PeerName.ToString()
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "傳回目前的字串表示<xref href=&quot;System.Net.PeerToPeer.PeerName&quot;></xref>物件。"
  remarks: "這個方法繼承的預設簽章和<xref:System.Object>.</xref:System.Object>的行為"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: '字串，代表目前<xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref>，並以下列格式指定︰ *Authority.Classifier*。 例如，&quot;0.MyInternetPeer。 」'
  overload: System.Net.PeerToPeer.PeerName.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Net.PeerToPeer.PeerToPeerException
  parent: System.Net.PeerToPeer
  isExternal: false
  name: PeerToPeerException
  nameWithType: PeerToPeerException
  fullName: System.Net.PeerToPeer.PeerToPeerException
- uid: System.Net.PeerToPeer.PeerName.#ctor(System.String)
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: PeerName(String)
  nameWithType: PeerName.PeerName(String)
  fullName: System.Net.PeerToPeer.PeerName.PeerName(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.PeerToPeer.PeerName.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: PeerName(SerializationInfo,StreamingContext)
  nameWithType: PeerName.PeerName(SerializationInfo,StreamingContext)
  fullName: System.Net.PeerToPeer.PeerName.PeerName(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Net.PeerToPeer.PeerName.#ctor(System.String,System.Net.PeerToPeer.PeerNameType)
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: PeerName(String,PeerNameType)
  nameWithType: PeerName.PeerName(String,PeerNameType)
  fullName: System.Net.PeerToPeer.PeerName.PeerName(String,PeerNameType)
- uid: System.Net.PeerToPeer.PeerNameType
  parent: System.Net.PeerToPeer
  isExternal: false
  name: PeerNameType
  nameWithType: PeerNameType
  fullName: System.Net.PeerToPeer.PeerNameType
- uid: System.Net.PeerToPeer.PeerName.Authority
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: Authority
  nameWithType: PeerName.Authority
  fullName: System.Net.PeerToPeer.PeerName.Authority
- uid: System.Net.PeerToPeer.PeerName.Classifier
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: Classifier
  nameWithType: PeerName.Classifier
  fullName: System.Net.PeerToPeer.PeerName.Classifier
- uid: System.Net.PeerToPeer.PeerName.CreateFromPeerHostName(System.String)
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: CreateFromPeerHostName(String)
  nameWithType: PeerName.CreateFromPeerHostName(String)
  fullName: System.Net.PeerToPeer.PeerName.CreateFromPeerHostName(String)
- uid: System.Net.PeerToPeer.PeerName
  parent: System.Net.PeerToPeer
  isExternal: false
  name: PeerName
  nameWithType: PeerName
  fullName: System.Net.PeerToPeer.PeerName
- uid: System.Net.PeerToPeer.PeerName.CreateRelativePeerName(System.Net.PeerToPeer.PeerName,System.String)
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: CreateRelativePeerName(PeerName,String)
  nameWithType: PeerName.CreateRelativePeerName(PeerName,String)
  fullName: System.Net.PeerToPeer.PeerName.CreateRelativePeerName(PeerName,String)
- uid: System.Net.PeerToPeer.PeerName.Equals(System.Net.PeerToPeer.PeerName)
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: Equals(PeerName)
  nameWithType: PeerName.Equals(PeerName)
  fullName: System.Net.PeerToPeer.PeerName.Equals(PeerName)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.PeerToPeer.PeerName.Equals(System.Object)
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: Equals(Object)
  nameWithType: PeerName.Equals(Object)
  fullName: System.Net.PeerToPeer.PeerName.Equals(Object)
- uid: System.Net.PeerToPeer.PeerName.GetHashCode
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: GetHashCode()
  nameWithType: PeerName.GetHashCode()
  fullName: System.Net.PeerToPeer.PeerName.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.PeerToPeer.PeerName.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: PeerName.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Net.PeerToPeer.PeerName.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Net.PeerToPeer.PeerName.IsSecured
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: IsSecured
  nameWithType: PeerName.IsSecured
  fullName: System.Net.PeerToPeer.PeerName.IsSecured
- uid: System.Net.PeerToPeer.PeerName.PeerHostName
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: PeerHostName
  nameWithType: PeerName.PeerHostName
  fullName: System.Net.PeerToPeer.PeerName.PeerHostName
- uid: System.Net.PeerToPeer.PeerName.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: PeerName.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Net.PeerToPeer.PeerName.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Net.PeerToPeer.PeerName.ToString
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: ToString()
  nameWithType: PeerName.ToString()
  fullName: System.Net.PeerToPeer.PeerName.ToString()
- uid: System.Net.PeerToPeer.PeerName.#ctor*
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: PeerName
  nameWithType: PeerName.PeerName
- uid: System.Net.PeerToPeer.PeerName.Authority*
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: Authority
  nameWithType: PeerName.Authority
- uid: System.Net.PeerToPeer.PeerName.Classifier*
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: Classifier
  nameWithType: PeerName.Classifier
- uid: System.Net.PeerToPeer.PeerName.CreateFromPeerHostName*
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: CreateFromPeerHostName
  nameWithType: PeerName.CreateFromPeerHostName
- uid: System.Net.PeerToPeer.PeerName.CreateRelativePeerName*
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: CreateRelativePeerName
  nameWithType: PeerName.CreateRelativePeerName
- uid: System.Net.PeerToPeer.PeerName.Equals*
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: Equals
  nameWithType: PeerName.Equals
- uid: System.Net.PeerToPeer.PeerName.GetHashCode*
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: GetHashCode
  nameWithType: PeerName.GetHashCode
- uid: System.Net.PeerToPeer.PeerName.GetObjectData*
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: GetObjectData
  nameWithType: PeerName.GetObjectData
- uid: System.Net.PeerToPeer.PeerName.IsSecured*
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: IsSecured
  nameWithType: PeerName.IsSecured
- uid: System.Net.PeerToPeer.PeerName.PeerHostName*
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: PeerHostName
  nameWithType: PeerName.PeerHostName
- uid: System.Net.PeerToPeer.PeerName.System#Runtime#Serialization#ISerializable#GetObjectData*
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData
  nameWithType: PeerName.System.Runtime.Serialization.ISerializable.GetObjectData
- uid: System.Net.PeerToPeer.PeerName.ToString*
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: ToString
  nameWithType: PeerName.ToString
