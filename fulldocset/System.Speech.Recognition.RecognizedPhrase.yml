### YamlMime:ManagedReference
items:
- uid: System.Speech.Recognition.RecognizedPhrase
  id: RecognizedPhrase
  children:
  - System.Speech.Recognition.RecognizedPhrase.Confidence
  - System.Speech.Recognition.RecognizedPhrase.ConstructSmlFromSemantics
  - System.Speech.Recognition.RecognizedPhrase.Grammar
  - System.Speech.Recognition.RecognizedPhrase.HomophoneGroupId
  - System.Speech.Recognition.RecognizedPhrase.Homophones
  - System.Speech.Recognition.RecognizedPhrase.ReplacementWordUnits
  - System.Speech.Recognition.RecognizedPhrase.Semantics
  - System.Speech.Recognition.RecognizedPhrase.Text
  - System.Speech.Recognition.RecognizedPhrase.Words
  langs:
  - csharp
  name: RecognizedPhrase
  nameWithType: RecognizedPhrase
  fullName: System.Speech.Recognition.RecognizedPhrase
  type: Class
  summary: "包含語音辨識器中，有關已辨識輸入產生的詳細的資訊。"
  remarks: "這個類別包含單字和片語語音辨識作業，包括下列期間處理的詳細的資訊:-<xref:System.Speech.Recognition.RecognizedPhrase.Grammar%2A>屬性參考<xref:System.Speech.Recognition.Grammar>辨識器用來識別輸入。</xref:System.Speech.Recognition.Grammar> </xref:System.Speech.Recognition.RecognizedPhrase.Grammar%2A>      -<xref:System.Speech.Recognition.RecognizedPhrase.Text%2A>屬性包含片語的正規化的文字。</xref:System.Speech.Recognition.RecognizedPhrase.Text%2A>      -<xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A>屬性參考包含在結果中語意資訊。</xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A> 語意資訊是索引鍵名稱和相關聯的語意資料的字典。      -<xref:System.Speech.Recognition.RecognizedPhrase.Words%2A>屬性包含已排序的集合<xref:System.Speech.Recognition.RecognizedWordUnit>代表每個物件，辨識輸入中的單字。</xref:System.Speech.Recognition.RecognizedWordUnit> </xref:System.Speech.Recognition.RecognizedPhrase.Words%2A> 每個 word 單元包含顯示格式、 語彙格式，並發音資訊相對應的文字。      -<xref:System.Speech.Recognition.RecognizedPhrase.ReplacementWordUnits%2A>屬性包含特殊的字替代的相關資訊。</xref:System.Speech.Recognition.RecognizedPhrase.ReplacementWordUnits%2A>      -<xref:System.Speech.Recognition.RecognizedPhrase.Homophones%2A>和<xref:System.Speech.Recognition.RecognizedPhrase.HomophoneGroupId%2A>屬性包含相同或類似發音的辨識替代項目相關資訊。</xref:System.Speech.Recognition.RecognizedPhrase.HomophoneGroupId%2A> </xref:System.Speech.Recognition.RecognizedPhrase.Homophones%2A>      -值<xref:System.Speech.Recognition.RecognizedPhrase.Confidence%2A>屬性會指出確定性，語音辨識器指派的已辨識的片語比對輸入的程度。</xref:System.Speech.Recognition.RecognizedPhrase.Confidence%2A>       語音辨識器傳回辨識導致<xref:System.Speech.Recognition.RecognitionResult>物件，繼承自 RecognizedPhrase。</xref:System.Speech.Recognition.RecognitionResult> 辨識結果<xref:System.Speech.Recognition.RecognitionResult.Alternates%2A>屬性包含 RecognizedPhrase 物件的已排序的集合，其中每一個都是辨識器的輸入的可能相符項目。</xref:System.Speech.Recognition.RecognitionResult.Alternates%2A>"
  example:
  - "The following example shows a handler for a <xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized?displayProperty=fullName>, <xref:System.Speech.Recognition.SpeechRecognizer.SpeechRecognized?displayProperty=fullName>, or <xref:System.Speech.Recognition.Grammar.SpeechRecognized?displayProperty=fullName> event and some of the information associated with the <xref:System.Speech.Recognition.RecognitionResult> object. The <xref:System.Speech.Recognition.RecognitionResult> class derives from the RecognizedPhrase class.  \n  \n```c#  \nvoid SpeechRecognizedHandler(object sender, SpeechRecognizedEventArgs e)  \n{  \n  if (e.Result == null) return;  \n  \n  // Add event handler code here.  \n  \n  // The following code illustrates some of the information available  \n  // in the recognition result.  \n  Console.WriteLine(\"Recognition result summary:\");  \n  Console.WriteLine(  \n    \"  Recognized phrase: {0}\\n\" +   \n    \"  Confidence score {1}\\n\" +   \n    \"  Grammar used: {2}\\n\",   \n    e.Result.Text, e.Result.Confidence, e.Result.Grammar.Name);  \n  \n  // Display the semantic values in the recognition result.  \n  Console.WriteLine(\"  Semantic results:\");  \n  foreach (KeyValuePair<String, SemanticValue> child in e.Result.Semantics)  \n  {  \n    Console.WriteLine(\"    The {0} city is {1}\",  \n      child.Key, child.Value.Value ?? \"null\");  \n  }  \n  Console.WriteLine();  \n  \n  // Display information about the words in the recognition result.  \n  Console.WriteLine(\"  Word summary: \");  \n  foreach (RecognizedWordUnit word in e.Result.Words)  \n  {  \n    Console.WriteLine(  \n      \"    Lexical form ({1})\" +  \n      \" Pronunciation ({0})\" +  \n      \" Display form ({2})\",  \n      word.Pronunciation, word.LexicalForm, word.DisplayAttributes);  \n  }  \n  \n  // Display information about the audio in the recognition result.  \n  Console.WriteLine(\"  Input audio summary:\\n\" +  \n    \"    Candidate Phrase at:       {0} mSec\\n\" +  \n    \"    Phrase Length:             {1} mSec\\n\" +  \n    \"    Input State Time:          {2}\\n\" +  \n    \"    Input Format:              {3}\\n\",  \n    e.Result.Audio.AudioPosition,  \n    e.Result.Audio.Duration,  \n    e.Result.Audio.StartTime,  \n    e.Result.Audio.Format.EncodingFormat);  \n  \n  // Display information about the alternate recognitions in the recognition result.  \n  Console.WriteLine(\"  Alternate phrase collection:\");  \n  foreach (RecognizedPhrase phrase in e.Result.Alternates)  \n  {  \n    Console.WriteLine(\"    Phrase: \" + phrase.Text);  \n    Console.WriteLine(\"    Confidence score: \" + phrase.Confidence);  \n  }  \n}  \n```"
  syntax:
    content: >-
      [System.Diagnostics.DebuggerDisplay("{Text}")]

      public class RecognizedPhrase
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Speech.Recognition.RecognizedPhrase.Confidence
  id: Confidence
  parent: System.Speech.Recognition.RecognizedPhrase
  langs:
  - csharp
  name: Confidence
  nameWithType: RecognizedPhrase.Confidence
  fullName: System.Speech.Recognition.RecognizedPhrase.Confidence
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "取得值，表示可能性辨識器指派的<xref href=&quot;System.Speech.Recognition.RecognizedPhrase&quot;></xref>符合給定的輸入。"
  remarks: "信心分數並不表示已正確辨識片語的絕對可能性。 相反地，信心分數會提供機制來比較多個的辨識替代項目為給定的輸入的準確度。 這有助於傳回最精確的辨識結果。 例如，如果已辨識的片語的 0.8 的信心分數，這不表示片語已輸入正確的比對的 80%的機率。  表示片語是較有可能比其他結果，確保輸入正確的符合分數小於 0.8。       信心分數本身沒有任何意義，除非您有要比較，從相同的辨識作業，或是從先前 recognitions 相同輸入的替代結果。 值用來排名替代候選片語所傳回<xref:System.Speech.Recognition.RecognitionResult.Alternates%2A>屬性<xref:System.Speech.Recognition.RecognitionResult>物件。</xref:System.Speech.Recognition.RecognitionResult> </xref:System.Speech.Recognition.RecognitionResult.Alternates%2A>       信心值是相對與唯一到每個辨識引擎。 傳回兩個不同辨識引擎的信心值無法有意義地加以比較。       語音辨識引擎可能會基於各種原因，包括背景干擾、 inarticulate 語音，或非預期的單字或單字順序，以指派給語音輸入低信心分數。 如果您的應用程式使用<xref:System.Speech.Recognition.SpeechRecognitionEngine>執行個體，您可以修改信心層級上的語音，輸入已接受或拒絕使用其中一個<xref:System.Speech.Recognition.SpeechRecognitionEngine.UpdateRecognizerSetting%2A>方法。</xref:System.Speech.Recognition.SpeechRecognitionEngine.UpdateRecognizerSetting%2A> </xref:System.Speech.Recognition.SpeechRecognitionEngine> 共用辨識器所管理的信賴閾值<xref:System.Speech.Recognition.SpeechRecognizer>、 相關聯的使用者設定檔和 Windows 登錄中儲存。</xref:System.Speech.Recognition.SpeechRecognizer> 應用程式應該不會寫入登錄的共用辨識器的屬性變更。       <xref:System.Speech.Recognition.RecognitionResult.Alternates%2A>屬性<xref:System.Speech.Recognition.RecognitionResult>物件包含的已排序的集合<xref:System.Speech.Recognition.RecognizedPhrase>物件，其中每一個都是辨識器的輸入的可能相符項目。</xref:System.Speech.Recognition.RecognizedPhrase> </xref:System.Speech.Recognition.RecognitionResult> </xref:System.Speech.Recognition.RecognitionResult.Alternates%2A> 替代項目為從最高到最低的信心排序。"
  example:
  - "The following example shows a handler for a <xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized?displayProperty=fullName>, <xref:System.Speech.Recognition.SpeechRecognizer.SpeechRecognized?displayProperty=fullName>, or <xref:System.Speech.Recognition.Grammar.SpeechRecognized?displayProperty=fullName> event. The example shows information associated with the <xref:System.Speech.Recognition.RecognitionResult> object, some of which is derived from <xref:System.Speech.Recognition.RecognizedPhrase>. The handler displays confidence scores for a recognized phrase as well as for recognition alternates.  \n  \n```c#  \nvoid SpeechRecognizedHandler(object sender, SpeechRecognizedEventArgs e)  \n{  \n  if (e.Result == null) return;  \n  \n  // Add event handler code here.  \n  \n  // The following code illustrates some of the information available  \n  // in the recognition result.  \n  Console.WriteLine(\"Recognition result summary:\");  \n  Console.WriteLine(  \n    \"  Recognized phrase: {0}\\n\" +   \n    \"  Confidence score {1}\\n\" +   \n    \"  Grammar used: {2}\\n\",   \n    e.Result.Text, e.Result.Confidence, e.Result.Grammar.Name);  \n  \n  // Display the semantic values in the recognition result.  \n  Console.WriteLine(\"  Semantic results:\");  \n  foreach (KeyValuePair<String, SemanticValue> child in e.Result.Semantics)  \n  {  \n    Console.WriteLine(\"    The {0} city is {1}\",  \n      child.Key, child.Value.Value ?? \"null\");  \n  }  \n  Console.WriteLine();  \n  \n  // Display information about the words in the recognition result.  \n  Console.WriteLine(\"  Word summary: \");  \n  foreach (RecognizedWordUnit word in e.Result.Words)  \n  {  \n    Console.WriteLine(  \n      \"    Lexical form ({1})\" +  \n      \" Pronunciation ({0})\" +  \n      \" Display form ({2})\",  \n      word.Pronunciation, word.LexicalForm, word.DisplayAttributes);  \n  }  \n  \n  // Display information about the audio in the recognition result.  \n  Console.WriteLine(\"  Input audio summary:\\n\" +  \n    \"    Candidate Phrase at:       {0} mSec\\n\" +  \n    \"    Phrase Length:             {1} mSec\\n\" +  \n    \"    Input State Time:          {2}\\n\" +  \n    \"    Input Format:              {3}\\n\",  \n    e.Result.Audio.AudioPosition,  \n    e.Result.Audio.Duration,  \n    e.Result.Audio.StartTime,  \n    e.Result.Audio.Format.EncodingFormat);  \n  \n  // Display information about the alternate recognitions in the recognition result.  \n  Console.WriteLine(\"  Alternate phrase collection:\");  \n  foreach (RecognizedPhrase phrase in e.Result.Alternates)  \n  {  \n    Console.WriteLine(\"    Phrase: \" + phrase.Text);  \n    Console.WriteLine(\"    Confidence score: \" + phrase.Confidence);  \n  }  \n}  \n  \n```"
  syntax:
    content: public float Confidence { get; }
    return:
      type: System.Single
      description: "正確辨識片語的確定性相對量值。 值是從 0.0 到 1.0，低度到高度的信心，分別。"
  overload: System.Speech.Recognition.RecognizedPhrase.Confidence*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.RecognizedPhrase.ConstructSmlFromSemantics
  id: ConstructSmlFromSemantics
  parent: System.Speech.Recognition.RecognizedPhrase
  langs:
  - csharp
  name: ConstructSmlFromSemantics()
  nameWithType: RecognizedPhrase.ConstructSmlFromSemantics()
  fullName: System.Speech.Recognition.RecognizedPhrase.ConstructSmlFromSemantics()
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "傳回語意標記語言 (SML) 文件中的語意資訊的<xref href=&quot;System.Speech.Recognition.RecognizedPhrase&quot;></xref>物件。"
  remarks: "語意標記語言 (SML) 的相關資訊，請參閱[語意標記語言參考](http://msdn.microsoft.com/en-us/f9d83443-2cac-49bc-a447-210feda62f5d)。"
  example:
  - "In the following example, a method returns a string that contains the SML for the semantics of a recognized phrase.  \n  \n```  \nprivate string GetSemanticsSML(RecognizedPhrase result)  \n{  \n  if (result.Semantics.Count > 0)  \n  {  \n    return result.ConstructSmlFromSemantics().CreateNavigator().OuterXml;  \n  }  \n  else  \n  {  \n    return null;  \n  }  \n}  \n```"
  syntax:
    content: public System.Xml.XPath.IXPathNavigable ConstructSmlFromSemantics ();
    parameters: []
    return:
      type: System.Xml.XPath.IXPathNavigable
      description: "傳回的語意的 SML 描述<xref href=&quot;System.Speech.Recognition.RecognizedPhrase&quot;></xref>為[XPath](http://msdn.microsoft.com/library/ms256115.aspx)可瀏覽的物件。"
  overload: System.Speech.Recognition.RecognizedPhrase.ConstructSmlFromSemantics*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.RecognizedPhrase.Grammar
  id: Grammar
  parent: System.Speech.Recognition.RecognizedPhrase
  langs:
  - csharp
  name: Grammar
  nameWithType: RecognizedPhrase.Grammar
  fullName: System.Speech.Recognition.RecognizedPhrase.Grammar
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "取得<xref href=&quot;System.Speech.Recognition.Grammar&quot;></xref>語音辨識器用來傳回<xref href=&quot;System.Speech.Recognition.RecognizedPhrase&quot;> </xref>。"
  syntax:
    content: public System.Speech.Recognition.Grammar Grammar { get; }
    return:
      type: System.Speech.Recognition.Grammar
      description: "語音辨識器用來識別輸入的文法物件。"
  overload: System.Speech.Recognition.RecognizedPhrase.Grammar*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.RecognizedPhrase.HomophoneGroupId
  id: HomophoneGroupId
  parent: System.Speech.Recognition.RecognizedPhrase
  langs:
  - csharp
  name: HomophoneGroupId
  nameWithType: RecognizedPhrase.HomophoneGroupId
  fullName: System.Speech.Recognition.RecognizedPhrase.HomophoneGroupId
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "取得片語同音字群組的識別項。"
  remarks: "語音辨識器會將群組識別項指派給所有發音相同的辨識替代項。 對於具有唯一的發音的每個替代，辨識器會建立同音字群組。 語音辨識器產生的識別項的每個辨識作業，新的群組，並識別項不能用來比較從替代項目從不同的辨識作業產生。       例如，包含替代項目&quot;tale&quot;、&quot;tail&quot;和&quot;則發出警示 」 的辨識結果的前兩個替代項目會屬於一個同音字群組，和最後一個替代將會是第二個同音字群組的單一成員。"
  syntax:
    content: public int HomophoneGroupId { get; }
    return:
      type: System.Int32
      description: "片語同音字群組的識別碼。"
  overload: System.Speech.Recognition.RecognizedPhrase.HomophoneGroupId*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.RecognizedPhrase.Homophones
  id: Homophones
  parent: System.Speech.Recognition.RecognizedPhrase
  langs:
  - csharp
  name: Homophones
  nameWithType: RecognizedPhrase.Homophones
  fullName: System.Speech.Recognition.RecognizedPhrase.Homophones
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "取得與此辨識片語發音相同之辨識替代項目的集合。"
  remarks: "這個屬性會傳回所有其他辨識替代項目與此辨識片語發音相同。       例如，包含替代項目、&quot;tale of 」 和 「 結尾 」 的辨識結果，第一個鐨&quot;tale&quot;同音字集合會包含第二個片語 「 結尾 」。 第二個替代，也就是 「 結尾 」 的同音字集合會包含第一個片語&quot;tale&quot;。"
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Speech.Recognition.RecognizedPhrase> Homophones { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Speech.Recognition.RecognizedPhrase}
      description: "與此辨識片語發音相同之辨識替代項目的唯讀集合。"
  overload: System.Speech.Recognition.RecognizedPhrase.Homophones*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.RecognizedPhrase.ReplacementWordUnits
  id: ReplacementWordUnits
  parent: System.Speech.Recognition.RecognizedPhrase
  langs:
  - csharp
  name: ReplacementWordUnits
  nameWithType: RecognizedPhrase.ReplacementWordUnits
  fullName: System.Speech.Recognition.RecognizedPhrase.ReplacementWordUnits
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "取得語音辨識器變更部份語音轉文字正規化之文字的相關資訊。"
  remarks: "語音辨識程序的一部分，語音辨識器正規化成一個顯示的表單已辨識的輸入。       語音的輸入，&quot;25 （美元） 」，會產生的辨識結果，例如其中<xref:System.Speech.Recognition.RecognizedPhrase.Words%2A>屬性包含單字、&quot;20&quot;、&quot;5&quot;和&quot;（美元） 」，而<xref:System.Speech.Recognition.RecognizedPhrase.Text%2A>屬性包含&quot;$25.00&quot;片語。</xref:System.Speech.Recognition.RecognizedPhrase.Text%2A> </xref:System.Speech.Recognition.RecognizedPhrase.Words%2A> 如需文字正規化的詳細資訊，請參閱<xref:System.Speech.Recognition.ReplacementText>類別。</xref:System.Speech.Recognition.ReplacementText>"
  syntax:
    content: public System.Collections.ObjectModel.Collection<System.Speech.Recognition.ReplacementText> ReplacementWordUnits { get; }
    return:
      type: System.Collections.ObjectModel.Collection{System.Speech.Recognition.ReplacementText}
      description: "集合<xref href=&quot;System.Speech.Recognition.ReplacementText&quot;></xref>物件描述語音辨識器可辨識的輸入正規化時，加以取代的文字區段。"
  overload: System.Speech.Recognition.RecognizedPhrase.ReplacementWordUnits*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.RecognizedPhrase.Semantics
  id: Semantics
  parent: System.Speech.Recognition.RecognizedPhrase
  langs:
  - csharp
  name: Semantics
  nameWithType: RecognizedPhrase.Semantics
  fullName: System.Speech.Recognition.RecognizedPhrase.Semantics
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "取得與已辨識片語相關聯的語意資訊。"
  remarks: "語音辨識文法可以包括語意資訊。 當語音辨識器產生這類文法的辨識結果時，語意的資訊可能會包含在辨識結果中，根據文法和辨識器的輸入規則。 如需有關語意資訊的詳細資訊，請參閱[了解語意的結果](http://msdn.microsoft.com/en-us/2a9dbd8b-cf6d-42cd-bbb9-ca0b3e534005)和<xref:System.Speech.Recognition.SemanticResultKey>和<xref:System.Speech.Recognition.SemanticResultValue>類別。</xref:System.Speech.Recognition.SemanticResultValue> </xref:System.Speech.Recognition.SemanticResultKey>"
  example:
  - "The following example defines a method that gets specific semantic information from a recognized phrase. When this method returns, it contains the value for the semantic key, or null if the value was not retrieved. This method checks only for top-level keys. Since the semantic information is contained in a tree of values, lower-level keys must be accessed through the returned semantic value.  \n  \n```  \nstatic bool TryGetSemanticValue(  \n      RecognizedPhrase phrase, string key, out SemanticValue value)  \n{  \n  value = null;  \n  bool found = phrase.Semantics.ContainsKey(key);  \n  if (found)  \n  {  \n    value = phrase.Semantics[key];  \n  }  \n  \n  return found;  \n}  \n```"
  syntax:
    content: public System.Speech.Recognition.SemanticValue Semantics { get; }
    return:
      type: System.Speech.Recognition.SemanticValue
      description: "與已辨識片語相關聯的語意資訊。"
  overload: System.Speech.Recognition.RecognizedPhrase.Semantics*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.RecognizedPhrase.Text
  id: Text
  parent: System.Speech.Recognition.RecognizedPhrase
  langs:
  - csharp
  name: Text
  nameWithType: RecognizedPhrase.Text
  fullName: System.Speech.Recognition.RecognizedPhrase.Text
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "取得語音辨識器從已辨識輸入產生的正規化的文字。"
  remarks: "語音辨識程序的一部分，語音辨識器執行可辨識的輸入顯示表單中的語音轉文字的正規化。       例如，語音的輸入，&quot;25 （美元） 」，會產生辨識結果其中<xref:System.Speech.Recognition.RecognizedPhrase.Words%2A>屬性包含單字、&quot;20&quot;、&quot;5&quot;和&quot;（美元） 」，而文字屬性包含&quot;$25.00&quot;片語。</xref:System.Speech.Recognition.RecognizedPhrase.Words%2A> 如需文字正規化的詳細資訊，請參閱<xref:System.Speech.Recognition.ReplacementText>.</xref:System.Speech.Recognition.ReplacementText>"
  syntax:
    content: public string Text { get; }
    return:
      type: System.String
      description: "語音辨識器從已辨識輸入產生的正規化的文字。"
  overload: System.Speech.Recognition.RecognizedPhrase.Text*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.RecognizedPhrase.Words
  id: Words
  parent: System.Speech.Recognition.RecognizedPhrase
  langs:
  - csharp
  name: Words
  nameWithType: RecognizedPhrase.Words
  fullName: System.Speech.Recognition.RecognizedPhrase.Words
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "取得語音辨識器從已辨識輸入產生的單字。"
  remarks: "此屬性會包含從輸入之前的辨識器語音轉文字正規化結果的語音辨識器所產生的單字。       語音的輸入，&quot;25 （美元） 」，例如，會產生辨識結果，其中字屬性包含單字、&quot;20&quot;、&quot;5&quot;和&quot;（美元） 」，而<xref:System.Speech.Recognition.RecognizedPhrase.Text%2A>屬性包含&quot;$25.00&quot;片語。</xref:System.Speech.Recognition.RecognizedPhrase.Text%2A> 如需文字正規化的詳細資訊，請參閱<xref:System.Speech.Recognition.ReplacementText>.</xref:System.Speech.Recognition.ReplacementText>"
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Speech.Recognition.RecognizedWordUnit> Words { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Speech.Recognition.RecognizedWordUnit}
      description: "集合<xref href=&quot;System.Speech.Recognition.RecognizedWordUnit&quot;></xref>語音辨識器針對已辨識輸入產生的物件。"
  overload: System.Speech.Recognition.RecognizedPhrase.Words*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Speech.Recognition.RecognizedPhrase.Confidence
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: Confidence
  nameWithType: RecognizedPhrase.Confidence
  fullName: System.Speech.Recognition.RecognizedPhrase.Confidence
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Speech.Recognition.RecognizedPhrase.ConstructSmlFromSemantics
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: ConstructSmlFromSemantics()
  nameWithType: RecognizedPhrase.ConstructSmlFromSemantics()
  fullName: System.Speech.Recognition.RecognizedPhrase.ConstructSmlFromSemantics()
- uid: System.Xml.XPath.IXPathNavigable
  parent: System.Xml.XPath
  isExternal: false
  name: IXPathNavigable
  nameWithType: IXPathNavigable
  fullName: System.Xml.XPath.IXPathNavigable
- uid: System.Speech.Recognition.RecognizedPhrase.Grammar
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: Grammar
  nameWithType: RecognizedPhrase.Grammar
  fullName: System.Speech.Recognition.RecognizedPhrase.Grammar
- uid: System.Speech.Recognition.Grammar
  parent: System.Speech.Recognition
  isExternal: false
  name: Grammar
  nameWithType: Grammar
  fullName: System.Speech.Recognition.Grammar
- uid: System.Speech.Recognition.RecognizedPhrase.HomophoneGroupId
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: HomophoneGroupId
  nameWithType: RecognizedPhrase.HomophoneGroupId
  fullName: System.Speech.Recognition.RecognizedPhrase.HomophoneGroupId
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Speech.Recognition.RecognizedPhrase.Homophones
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: Homophones
  nameWithType: RecognizedPhrase.Homophones
  fullName: System.Speech.Recognition.RecognizedPhrase.Homophones
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Speech.Recognition.RecognizedPhrase}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<RecognizedPhrase>
  nameWithType: ReadOnlyCollection<RecognizedPhrase>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Speech.Recognition.RecognizedPhrase>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Speech.Recognition.RecognizedPhrase>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Speech.Recognition.RecognizedPhrase
    name: RecognizedPhrase
    nameWithType: RecognizedPhrase
    fullName: RecognizedPhrase
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Speech.Recognition.RecognizedPhrase.ReplacementWordUnits
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: ReplacementWordUnits
  nameWithType: RecognizedPhrase.ReplacementWordUnits
  fullName: System.Speech.Recognition.RecognizedPhrase.ReplacementWordUnits
- uid: System.Collections.ObjectModel.Collection{System.Speech.Recognition.ReplacementText}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<ReplacementText>
  nameWithType: Collection<ReplacementText>
  fullName: System.Collections.ObjectModel.Collection<System.Speech.Recognition.ReplacementText>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.Speech.Recognition.ReplacementText>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Speech.Recognition.ReplacementText
    name: ReplacementText
    nameWithType: ReplacementText
    fullName: ReplacementText
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Speech.Recognition.RecognizedPhrase.Semantics
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: Semantics
  nameWithType: RecognizedPhrase.Semantics
  fullName: System.Speech.Recognition.RecognizedPhrase.Semantics
- uid: System.Speech.Recognition.SemanticValue
  parent: System.Speech.Recognition
  isExternal: false
  name: SemanticValue
  nameWithType: SemanticValue
  fullName: System.Speech.Recognition.SemanticValue
- uid: System.Speech.Recognition.RecognizedPhrase.Text
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: Text
  nameWithType: RecognizedPhrase.Text
  fullName: System.Speech.Recognition.RecognizedPhrase.Text
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Speech.Recognition.RecognizedPhrase.Words
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: Words
  nameWithType: RecognizedPhrase.Words
  fullName: System.Speech.Recognition.RecognizedPhrase.Words
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Speech.Recognition.RecognizedWordUnit}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<RecognizedWordUnit>
  nameWithType: ReadOnlyCollection<RecognizedWordUnit>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Speech.Recognition.RecognizedWordUnit>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Speech.Recognition.RecognizedWordUnit>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Speech.Recognition.RecognizedWordUnit
    name: RecognizedWordUnit
    nameWithType: RecognizedWordUnit
    fullName: RecognizedWordUnit
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Speech.Recognition.RecognizedPhrase.Confidence*
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: Confidence
  nameWithType: RecognizedPhrase.Confidence
- uid: System.Speech.Recognition.RecognizedPhrase.ConstructSmlFromSemantics*
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: ConstructSmlFromSemantics
  nameWithType: RecognizedPhrase.ConstructSmlFromSemantics
- uid: System.Speech.Recognition.RecognizedPhrase.Grammar*
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: Grammar
  nameWithType: RecognizedPhrase.Grammar
- uid: System.Speech.Recognition.RecognizedPhrase.HomophoneGroupId*
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: HomophoneGroupId
  nameWithType: RecognizedPhrase.HomophoneGroupId
- uid: System.Speech.Recognition.RecognizedPhrase.Homophones*
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: Homophones
  nameWithType: RecognizedPhrase.Homophones
- uid: System.Speech.Recognition.RecognizedPhrase.ReplacementWordUnits*
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: ReplacementWordUnits
  nameWithType: RecognizedPhrase.ReplacementWordUnits
- uid: System.Speech.Recognition.RecognizedPhrase.Semantics*
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: Semantics
  nameWithType: RecognizedPhrase.Semantics
- uid: System.Speech.Recognition.RecognizedPhrase.Text*
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: Text
  nameWithType: RecognizedPhrase.Text
- uid: System.Speech.Recognition.RecognizedPhrase.Words*
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: Words
  nameWithType: RecognizedPhrase.Words
