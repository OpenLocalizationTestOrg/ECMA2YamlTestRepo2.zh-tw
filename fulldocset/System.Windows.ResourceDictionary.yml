### YamlMime:ManagedReference
items:
- uid: System.Windows.ResourceDictionary
  id: ResourceDictionary
  children:
  - System.Windows.ResourceDictionary.#ctor
  - System.Windows.ResourceDictionary.Add(System.Object,System.Object)
  - System.Windows.ResourceDictionary.BeginInit
  - System.Windows.ResourceDictionary.Clear
  - System.Windows.ResourceDictionary.Contains(System.Object)
  - System.Windows.ResourceDictionary.CopyTo(System.Collections.DictionaryEntry[],System.Int32)
  - System.Windows.ResourceDictionary.Count
  - System.Windows.ResourceDictionary.DeferrableContent
  - System.Windows.ResourceDictionary.EndInit
  - System.Windows.ResourceDictionary.FindName(System.String)
  - System.Windows.ResourceDictionary.GetEnumerator
  - System.Windows.ResourceDictionary.IsFixedSize
  - System.Windows.ResourceDictionary.IsReadOnly
  - System.Windows.ResourceDictionary.Item(System.Object)
  - System.Windows.ResourceDictionary.Keys
  - System.Windows.ResourceDictionary.MergedDictionaries
  - System.Windows.ResourceDictionary.OnGettingValue(System.Object,System.Object@,System.Boolean@)
  - System.Windows.ResourceDictionary.RegisterName(System.String,System.Object)
  - System.Windows.ResourceDictionary.Remove(System.Object)
  - System.Windows.ResourceDictionary.Source
  - System.Windows.ResourceDictionary.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Windows.ResourceDictionary.System#Collections#ICollection#IsSynchronized
  - System.Windows.ResourceDictionary.System#Collections#ICollection#SyncRoot
  - System.Windows.ResourceDictionary.System#Collections#IEnumerable#GetEnumerator
  - System.Windows.ResourceDictionary.System#Windows#Markup#IUriContext#BaseUri
  - System.Windows.ResourceDictionary.UnregisterName(System.String)
  - System.Windows.ResourceDictionary.Values
  langs:
  - csharp
  name: ResourceDictionary
  nameWithType: ResourceDictionary
  fullName: System.Windows.ResourceDictionary
  type: Class
  summary: "提供雜湊表 / 字典實作，其中包含[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]元件和其他項目所使用的資源[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]應用程式。"
  remarks: "ResourceDictionary 中的項目不會立即處理當應用程式程式碼由載入[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]載入器。 相反地，ResourceDictionary 持續發生，以物件，而且只有在特別要求時處理的個別值。       ResourceDictionary 類別不被衍生自<xref:System.Collections.DictionaryBase>.</xref:System.Collections.DictionaryBase> 相反地，ResourceDictionary 類別實作<xref:System.Collections.IDictionary>但依賴<xref:System.Collections.Hashtable>內部。</xref:System.Collections.Hashtable> </xref:System.Collections.IDictionary>       在[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]，ResourceDictionary 類別通常是隱含的集合項目做為物件項目值的數個`Resources`屬性，指定屬性項目語法中時。 如需詳細資訊中隱含的集合上[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]，請參閱[XAML 語法的詳細資料](~/add/includes/ajax-current-ext-md.md)。 當您想要指定合併的字典; 例外狀況如需詳細資訊，請參閱[合併資源字典](~/add/includes/ajax-current-ext-md.md)。       另一個可能[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]的用法是，宣告視為離散的資源字典[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]檔案，並在執行階段以載入它<xref:System.Windows.Markup.XamlReader.Load%2A>或 （完全信任） 專案中包含做為資源或鬆散的檔案。</xref:System.Windows.Markup.XamlReader.Load%2A> 在此情況下，ResourceDictionary 可以宣告為物件項目，做為根項目[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]。 您必須將適當的 XML 命名空間值對應 (預設為[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]命名空間而且通常`x:`如[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]命名空間) 到 ResourceDictionary 項目，如果您打算使用的根項目。 然後您可以加入子項目定義的資源，各有一個值。      <a name=&quot;xamlImplicitCollectionUsage_ResourceDictionary&quot;></a># # XAML 隱含集合用法```   <object>     <object.resourcesProperty>       oneOrMoreResources     </object.resourcesProperty>   </object>   ``` <a name=&quot;xamlValues_ResourceDictionary&quot;> </a> # # XAML 值*resourcesProperty*屬性，指定屬性的項目，其中該屬性的值型別是 ResourceDictionary。       一般而言，這是`Resources`屬性<xref:System.Windows.FrameworkElement>或<xref:System.Windows.FrameworkContentElement>，或<xref:System.Windows.Application>在應用程式資源的情況下。</xref:System.Windows.Application> </xref:System.Windows.FrameworkContentElement> </xref:System.Windows.FrameworkElement>       *oneOrMoreResources*做為物件項目指定的一或多個資源。 必須有您指定每個資源[X:key 指示詞](~/add/includes/ajax-current-ext-md.md)指派。"
  syntax:
    content: >-
      [System.Windows.Localizability(System.Windows.LocalizationCategory.Ignore)]

      [System.Windows.Markup.Ambient]

      [System.Windows.Markup.UsableDuringInitialization(true)]

      public class ResourceDictionary : System.Collections.IDictionary, System.ComponentModel.ISupportInitialize, System.Windows.Markup.INameScope, System.Windows.Markup.IUriContext
  inheritance:
  - System.Object
  implements:
  - System.Collections.IDictionary
  - System.ComponentModel.ISupportInitialize
  - System.Windows.Markup.INameScope
  - System.Windows.Markup.IUriContext
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.#ctor
  id: '#ctor'
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: ResourceDictionary()
  nameWithType: ResourceDictionary.ResourceDictionary()
  fullName: System.Windows.ResourceDictionary.ResourceDictionary()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "初始化的新執行個體<xref href=&quot;System.Windows.ResourceDictionary&quot;></xref>類別。"
  syntax:
    content: public ResourceDictionary ();
    parameters: []
  overload: System.Windows.ResourceDictionary.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.Add(System.Object,System.Object)
  id: Add(System.Object,System.Object)
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: Add(Object,Object)
  nameWithType: ResourceDictionary.Add(Object,Object)
  fullName: System.Windows.ResourceDictionary.Add(Object,Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "依索引鍵的資源新增至該<xref href=&quot;System.Windows.ResourceDictionary&quot;> </xref>。"
  remarks: "嘗試加入重複的索引鍵，就會引發例外狀況。       索引鍵永遠會加入至基底的字典。 金鑰存放在<xref:System.Windows.ResourceDictionary.MergedDictionaries%2A>內目前<xref:System.Windows.ResourceDictionary>不會檢查是否重複，基底的字典檢查是否有重複。</xref:System.Windows.ResourceDictionary> </xref:System.Windows.ResourceDictionary.MergedDictionaries%2A>"
  syntax:
    content: public void Add (object key, object value);
    parameters:
    - id: key
      type: System.Object
      description: "要加入之索引鍵名稱。"
    - id: value
      type: System.Object
      description: "若要加入資源的值。"
  overload: System.Windows.ResourceDictionary.Add*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref href=&quot;System.Windows.ResourceDictionary&quot;> </xref>被鎖定或唯讀狀態。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "具有相同索引鍵的項目已經存在於<xref href=&quot;System.Collections.Hashtable&quot;> </xref>。"
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.BeginInit
  id: BeginInit
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: BeginInit()
  nameWithType: ResourceDictionary.BeginInit()
  fullName: System.Windows.ResourceDictionary.BeginInit()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "開始初始化階段，這個<xref href=&quot;System.Windows.ResourceDictionary&quot;> </xref>。"
  remarks: "呼叫這個方法會指出，內容<xref:System.Windows.ResourceDictionary>即將載入。</xref:System.Windows.ResourceDictionary> 處理程序的下一個步驟是呼叫<xref:System.Windows.ResourceDictionary.EndInit%2A>.</xref:System.Windows.ResourceDictionary.EndInit%2A>       不呼叫 BeginInit 超過一次，然後再呼叫<xref:System.Windows.ResourceDictionary.EndInit%2A>.</xref:System.Windows.ResourceDictionary.EndInit%2A> 如此一來，將會引發例外狀況。"
  syntax:
    content: public void BeginInit ();
    parameters: []
  overload: System.Windows.ResourceDictionary.BeginInit*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "前一次呼叫 BeginInit<xref:System.Windows.ResourceDictionary.EndInit*>呼叫。</xref:System.Windows.ResourceDictionary.EndInit*>"
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.Clear
  id: Clear
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: Clear()
  nameWithType: ResourceDictionary.Clear()
  fullName: System.Windows.ResourceDictionary.Clear()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "清除所有的索引鍵 （和值） 的基底中<xref href=&quot;System.Windows.ResourceDictionary&quot;> </xref>。 這不會清除任何合併字典項目。"
  remarks: "如果您要清除合併的字典的項目時，取得從特定的字典<xref:System.Windows.ResourceDictionary.MergedDictionaries%2A>上，清除 收集和特別呼叫<xref:System.Windows.ResourceDictionary>，雖然字典通常是遠端，而且您可能無法再存取。</xref:System.Windows.ResourceDictionary> </xref:System.Windows.ResourceDictionary.MergedDictionaries%2A> 或者，移除整個<xref:System.Windows.ResourceDictionary>從<xref:System.Windows.ResourceDictionary.MergedDictionaries%2A>藉由呼叫泛型集合上移除。</xref:System.Windows.ResourceDictionary.MergedDictionaries%2A> </xref:System.Windows.ResourceDictionary>"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Windows.ResourceDictionary.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.Contains(System.Object)
  id: Contains(System.Object)
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: Contains(Object)
  nameWithType: ResourceDictionary.Contains(Object)
  fullName: System.Windows.ResourceDictionary.Contains(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "決定是否<xref href=&quot;System.Windows.ResourceDictionary&quot;></xref>包含具有指定之索引鍵的元素。"
  remarks: "如果要求的索引鍵不在這個資源字典中，資源查閱邏輯也會檢查合併的字典。"
  syntax:
    content: public bool Contains (object key);
    parameters:
    - id: key
      type: System.Object
      description: "要在中尋找的索引鍵<xref href=&quot;System.Windows.ResourceDictionary&quot;> </xref>。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref href=&quot;System.Windows.ResourceDictionary&quot;></xref>包含具有指定索引鍵-值組金鑰; 否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.ResourceDictionary.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.CopyTo(System.Collections.DictionaryEntry[],System.Int32)
  id: CopyTo(System.Collections.DictionaryEntry[],System.Int32)
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: CopyTo(DictionaryEntry[],Int32)
  nameWithType: ResourceDictionary.CopyTo(DictionaryEntry[],Int32)
  fullName: System.Windows.ResourceDictionary.CopyTo(DictionaryEntry[],Int32)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "複製<xref href=&quot;System.Windows.ResourceDictionary&quot;></xref>到一維的元素<xref:System.Collections.DictionaryEntry>指定索引處。</xref:System.Collections.DictionaryEntry>"
  remarks: "這會複製基底的字典。 結果陣列沒有任何<xref:System.Windows.ResourceDictionary.MergedDictionaries%2A>如果要重新組成<xref:System.Windows.ResourceDictionary>一次。</xref:System.Windows.ResourceDictionary> </xref:System.Windows.ResourceDictionary.MergedDictionaries%2A>"
  syntax:
    content: public void CopyTo (System.Collections.DictionaryEntry[] array, int arrayIndex);
    parameters:
    - id: array
      type: System.Collections.DictionaryEntry[]
      description: "一維陣列，目的<xref:System.Collections.DictionaryEntry>從複製物件<xref href=&quot;System.Windows.ResourceDictionary&quot;></xref>執行個體。</xref:System.Collections.DictionaryEntry> 陣列必須有以零為起始的索引。"
    - id: arrayIndex
      type: System.Int32
      description: "以零為起始的索引`array`開始複製的位置。"
  overload: System.Windows.ResourceDictionary.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.Count
  id: Count
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: Count
  nameWithType: ResourceDictionary.Count
  fullName: System.Windows.ResourceDictionary.Count
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "取得基底中的項目數<xref href=&quot;System.Windows.ResourceDictionary&quot;> </xref>。"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "目前的基本字典中的項目數目。"
  overload: System.Windows.ResourceDictionary.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.DeferrableContent
  id: DeferrableContent
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: DeferrableContent
  nameWithType: ResourceDictionary.DeferrableContent
  fullName: System.Windows.ResourceDictionary.DeferrableContent
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "取得或設定此資源字典延後的內容。"
  syntax:
    content: public System.Windows.DeferrableContent DeferrableContent { get; set; }
    return:
      type: System.Windows.DeferrableContent
      description: "一律傳回<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.ResourceDictionary.DeferrableContent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.EndInit
  id: EndInit
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: EndInit()
  nameWithType: ResourceDictionary.EndInit()
  fullName: System.Windows.ResourceDictionary.EndInit()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "結束初始化階段，並使前一個樹狀結構，如此可以負責初始化階段期間，對索引鍵的所有變更。"
  remarks: "<xref:System.Windows.ResourceDictionary.BeginInit%2A>並 EndInit 遵循交易模型。</xref:System.Windows.ResourceDictionary.BeginInit%2A> <xref:System.Windows.ResourceDictionary.BeginInit%2A>標記未初始化的字典和 EndInit 標記它初始化。</xref:System.Windows.ResourceDictionary.BeginInit%2A>"
  syntax:
    content: public void EndInit ();
    parameters: []
  overload: System.Windows.ResourceDictionary.EndInit*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.FindName(System.String)
  id: FindName(System.String)
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: FindName(String)
  nameWithType: ResourceDictionary.FindName(String)
  fullName: System.Windows.ResourceDictionary.FindName(String)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "不支援這個字典實作。"
  remarks: "<xref:System.Windows.ResourceDictionary>類別不支援依名稱註冊。</xref:System.Windows.ResourceDictionary> 它會改為使用金鑰。"
  syntax:
    content: public object FindName (string name);
    parameters:
    - id: name
      type: System.String
      description: "所要求之物件名稱識別項。"
    return:
      type: System.Object
      description: "一律傳回<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.ResourceDictionary.FindName*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.GetEnumerator
  id: GetEnumerator
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: ResourceDictionary.GetEnumerator()
  fullName: System.Windows.ResourceDictionary.GetEnumerator()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "傳回<xref:System.Collections.IDictionaryEnumerator>可用來逐一查看<xref href=&quot;System.Windows.ResourceDictionary&quot;> </xref>。</xref:System.Collections.IDictionaryEnumerator>"
  remarks: "迭代器是用於基本字典。"
  syntax:
    content: public System.Collections.IDictionaryEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IDictionaryEnumerator
      description: "特製化的列舉程式<xref href=&quot;System.Windows.ResourceDictionary&quot;> </xref>。"
  overload: System.Windows.ResourceDictionary.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.IsFixedSize
  id: IsFixedSize
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: IsFixedSize
  nameWithType: ResourceDictionary.IsFixedSize
  fullName: System.Windows.ResourceDictionary.IsFixedSize
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "取得是否這<xref href=&quot;System.Windows.ResourceDictionary&quot;></xref>是固定的大小。"
  remarks: "預設實作會傳回<xref:System.Collections.Hashtable>而不是預設`false`。</xref:System.Collections.Hashtable>"
  syntax:
    content: public bool IsFixedSize { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果雜湊資料表是固定大小。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.ResourceDictionary.IsFixedSize*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.IsReadOnly
  id: IsReadOnly
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: ResourceDictionary.IsReadOnly
  fullName: System.Windows.ResourceDictionary.IsReadOnly
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "取得是否這<xref href=&quot;System.Windows.ResourceDictionary&quot;></xref>處於唯讀狀態。"
  remarks: "這個屬性會傳回<xref:System.Collections.Hashtable>而不是預設`false`。</xref:System.Collections.Hashtable>"
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果雜湊資料表是唯讀的。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.ResourceDictionary.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.Item(System.Object)
  id: Item(System.Object)
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: Item(Object)
  nameWithType: ResourceDictionary.Item(Object)
  fullName: System.Windows.ResourceDictionary.Item(Object)
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "取得或設定與指定的索引鍵相關聯的值。"
  remarks: "如果要求的索引鍵不在這個資源字典中，則架構資源系統也會檢查合併的字典。       檢查<xref:System.Windows.ResourceDictionary>依項目或索引不是一般慣用的方法來擷取資源。</xref:System.Windows.ResourceDictionary> 您應該改為呼叫和，它們可以參與完整的資源查閱程序，並且依其索引鍵，查詢資源，可以在應用程式或佈景主題來尋找資源的方法。 <xref:System.Windows.FrameworkElement.FindResource%2A>這種方法，就必須出現於任何<xref:System.Windows.FrameworkElement>。</xref:System.Windows.FrameworkElement></xref:System.Windows.FrameworkElement.FindResource%2A> 否則您嘗試尋找的資源不符合，則為 true 的執行階段行為。       不過，直接從個別的字典中取得資源可能適合您會從已知擷取資源<xref:System.Windows.ResourceDictionary>位置，而且這樣做，因此若要避免執行階段的索引鍵查閱的可能效能和範圍含意。</xref:System.Windows.ResourceDictionary>       您不使用索引子來定義中的集合成員[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]。 相反地，您建立子系項目在標記中。 子元素是其中一個子元素的<xref:System.Windows.ResourceDictionary>，或其中的屬性類型是屬性項目`ResourceDictionary`。</xref:System.Windows.ResourceDictionary> 如需詳細資訊，請參閱[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] <xref:System.Windows.ResourceDictionary>。</xref:System.Windows.ResourceDictionary>的使用方式區段      <a name=&quot;xamlTextUsage_Item&quot;></a># # XAML 文字用法，請參閱 < 備註 >。"
  syntax:
    content: public object this[object key] { get; set; }
    parameters:
    - id: key
      type: System.Object
      description: "取得或設定所需的索引鍵。"
    return:
      type: System.Object
      description: "索引鍵的值。"
  overload: System.Windows.ResourceDictionary.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.Keys
  id: Keys
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: Keys
  nameWithType: ResourceDictionary.Keys
  fullName: System.Windows.ResourceDictionary.Keys
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "取得集合中包含的所有索引鍵的<xref href=&quot;System.Windows.ResourceDictionary&quot;> </xref>。"
  remarks: "這個屬性存在，是因為所需<xref:System.Collections.IDictionary>，但索引鍵通常不是適用於大多數<xref:System.Windows.ResourceDictionary>案例。</xref:System.Windows.ResourceDictionary> </xref:System.Collections.IDictionary>       傳回索引鍵不包含<xref:System.Windows.ResourceDictionary.MergedDictionaries%2A>.</xref:System.Windows.ResourceDictionary.MergedDictionaries%2A>內索引鍵 也索引鍵集合是快照集的基本字典中索引鍵。 如果您隨後變更至此<xref:System.Windows.ResourceDictionary>，預存的金鑰將不會反映這些變更。</xref:System.Windows.ResourceDictionary>"
  syntax:
    content: public System.Collections.ICollection Keys { get; }
    return:
      type: System.Collections.ICollection
      description: "所有索引鍵的集合。"
  overload: System.Windows.ResourceDictionary.Keys*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.MergedDictionaries
  id: MergedDictionaries
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: MergedDictionaries
  nameWithType: ResourceDictionary.MergedDictionaries
  fullName: System.Windows.ResourceDictionary.MergedDictionaries
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "取得集合的<xref href=&quot;System.Windows.ResourceDictionary&quot;></xref>構成合併的字典中的各種資源字典的字典。"
  remarks: "字典會將合併<xref:System.Windows.ResourceDictionary>MergedDictionaries 所參考的泛型集合。</xref:System.Windows.ResourceDictionary> 合併<xref:System.Windows.ResourceDictionary>並沒有資源標記中定義於其中的項目。</xref:System.Windows.ResourceDictionary> 相反地，合併的字典是<xref:System.Windows.ResourceDictionary>具有任何標記子項目定義 （或透過程式碼新增的任何項目），但[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]指定<xref:System.Windows.ResourceDictionary.Source%2A>。</xref:System.Windows.ResourceDictionary.Source%2A> </xref:System.Windows.ResourceDictionary> <xref:System.Windows.ResourceDictionary.Source%2A>指定可讓來自外部來源，例如不同的資源組件隨附應用程式時，合併的字典 」 鬆散[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]」，或是特定當地語系化或全域資源組件。</xref:System.Windows.ResourceDictionary.Source%2A>       指定資源內的項目<xref:System.Windows.ResourceDictionary>具有<xref:System.Windows.ResourceDictionary.Source%2A>指定不支援。</xref:System.Windows.ResourceDictionary.Source%2A> </xref:System.Windows.ResourceDictionary>       MergedDictionaries 集合中的查閱行為將會搜尋最後加入<xref:System.Windows.ResourceDictionary>，然後只要找到要求的索引鍵時，搜尋會停止。</xref:System.Windows.ResourceDictionary> 整個合併的字典集合內重複的索引鍵都不合法的。 如需有關合併的字典行為的詳細資訊，請參閱[合併資源字典](~/add/includes/ajax-current-ext-md.md)。      <a name=&quot;xamlPropertyElementUsage_MergedDictionaries&quot;></a># # XAML 屬性項目用法```   <object>     <object.MergedDictionaries>       oneOrMoreResourceDictionaries     </object.MergedDictionaries>   </object>      ``` <a name=&quot;xamlValues_MergedDictionaries&quot;> </a> # # XAML 值*oneOrMoreResourceDictionaries*一或多個<xref:System.Windows.ResourceDictionary>物件項目。</xref:System.Windows.ResourceDictionary>       A<xref:System.Windows.ResourceDictionary>用 MergedDictionaries 沒有集合的內容，並指定<xref:System.Windows.ResourceDictionary.Source%2A>屬性必須參考完整<xref:System.Windows.ResourceDictionary>遠端。</xref:System.Windows.ResourceDictionary> </xref:System.Windows.ResourceDictionary.Source%2A> </xref:System.Windows.ResourceDictionary>"
  example:
  - "The following example specifies two <xref:System.Windows.ResourceDictionary> elements to be merged into the primary <xref:System.Windows.ResourceDictionary>.  \n  \n [!code-xml[ResourceMerge#MergedXAML](~/add/codesnippet/xaml/p-system.windows.resourc_1_1.xaml)]\n [!code-xml[ResourceMerge#MergedXAML](~/add/codesnippet/xaml/p-system.windows.resourc_1_1.xaml)]"
  syntax:
    content: public System.Collections.ObjectModel.Collection<System.Windows.ResourceDictionary> MergedDictionaries { get; }
    return:
      type: System.Collections.ObjectModel.Collection{System.Windows.ResourceDictionary}
      description: "合併的字典集合。"
  overload: System.Windows.ResourceDictionary.MergedDictionaries*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.OnGettingValue(System.Object,System.Object@,System.Boolean@)
  id: OnGettingValue(System.Object,System.Object@,System.Boolean@)
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: OnGettingValue(Object,Object,Boolean)
  nameWithType: ResourceDictionary.OnGettingValue(Object,Object,Boolean)
  fullName: System.Windows.ResourceDictionary.OnGettingValue(Object,Object,Boolean)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "發生時<xref href=&quot;System.Windows.ResourceDictionary&quot;></xref>收到要求的資源。"
  syntax:
    content: protected virtual void OnGettingValue (object key, ref object value, out bool canCache);
    parameters:
    - id: key
      type: System.Object
      description: "要取得之資源的索引鍵。"
    - id: value
      type: System.Object
      description: "要求之資源的值。"
    - id: canCache
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果可以儲存與更新版本使用的資源否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.ResourceDictionary.OnGettingValue*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.RegisterName(System.String,System.Object)
  id: RegisterName(System.String,System.Object)
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: RegisterName(String,Object)
  nameWithType: ResourceDictionary.RegisterName(String,Object)
  fullName: System.Windows.ResourceDictionary.RegisterName(String,Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "不支援這個字典實作。"
  remarks: "<xref:System.Windows.ResourceDictionary>類別不支援依名稱註冊。</xref:System.Windows.ResourceDictionary> 它會改為使用金鑰。 XAML namescope 方法會實作為無作用中版本<xref:System.Windows.ResourceDictionary>清楚該 XAML 名稱不會套用到資源。</xref:System.Windows.ResourceDictionary>       呼叫此方法會導致<xref:System.NotSupportedException>擲回。</xref:System.NotSupportedException>"
  syntax:
    content: public void RegisterName (string name, object scopedElement);
    parameters:
    - id: name
      type: System.String
      description: "請參閱 < 備註 >。"
    - id: scopedElement
      type: System.Object
      description: "請參閱 < 備註 >。"
  overload: System.Windows.ResourceDictionary.RegisterName*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "在所有情況下呼叫這個方法時。"
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.Remove(System.Object)
  id: Remove(System.Object)
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: Remove(Object)
  nameWithType: ResourceDictionary.Remove(Object)
  fullName: System.Windows.ResourceDictionary.Remove(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "移除具有指定索引鍵的項目，從基本字典。"
  remarks: "如果<xref:System.Windows.ResourceDictionary>不包含具有指定之索引鍵項目<xref:System.Windows.ResourceDictionary>維持不變。</xref:System.Windows.ResourceDictionary> </xref:System.Windows.ResourceDictionary> 會不引發任何例外狀況。       這個方法不會移除索引鍵<xref:System.Windows.ResourceDictionary.MergedDictionaries%2A>.</xref:System.Windows.ResourceDictionary.MergedDictionaries%2A> 您必須取得特定<xref:System.Windows.ResourceDictionary>從集合移除的索引鍵，但是，不可能因為您通常會從遠端存取這類的字典。</xref:System.Windows.ResourceDictionary>"
  syntax:
    content: public void Remove (object key);
    parameters:
    - id: key
      type: System.Object
      description: "若要移除之項目的金鑰。"
  overload: System.Windows.ResourceDictionary.Remove*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref href=&quot;System.Windows.ResourceDictionary&quot;> </xref>被鎖定或唯讀狀態。"
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.Source
  id: Source
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: Source
  nameWithType: ResourceDictionary.Source
  fullName: System.Windows.ResourceDictionary.Source
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "取得或設定[!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)]以從中載入資源。"
  remarks: "一般而言，來源指定為一個組件的 URI 參考是包含為 file 資源的資源字典的位置或內容動作專案所建置的應用程式建置。 如需組件的 URI 格式的詳細資訊，請參閱[WPF 中的組件 Uri](~/add/includes/ajax-current-ext-md.md)。       通常，[來源] 屬性設定僅適用於<xref:System.Windows.ResourceDictionary>指定給<xref:System.Windows.ResourceDictionary.MergedDictionaries%2A>屬性 (屬性項目中為[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]，或為<xref:System.Windows.ResourceDictionary>程式碼中集合的項目)。</xref:System.Windows.ResourceDictionary> </xref:System.Windows.ResourceDictionary.MergedDictionaries%2A> </xref:System.Windows.ResourceDictionary> 在此內容中，在設定的值為來源將會合併，請參閱提供的字典內容[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]到目前<xref:System.Windows.ResourceDictionary>.</xref:System.Windows.ResourceDictionary> 任何載入失敗會導致擲回例外狀況。"
  example:
  - "The following example specifies two <xref:System.Windows.ResourceDictionary> elements to be merged into the primary <xref:System.Windows.ResourceDictionary>.  \n  \n [!code-xml[ResourceMerge#MergedXAML](~/add/codesnippet/xaml/p-system.windows.resourc_0_1.xaml)]\n [!code-xml[ResourceMerge#MergedXAML](~/add/codesnippet/xaml/p-system.windows.resourc_0_1.xaml)]"
  syntax:
    content: public Uri Source { get; set; }
    return:
      type: System.Uri
      description: "外部資源字典的來源位置。"
  overload: System.Windows.ResourceDictionary.Source*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isEii: true
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: ResourceDictionary.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Windows.ResourceDictionary.System.Collections.ICollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "如需這個成員的說明，請參閱&lt;xref:System.Collections.ICollection.CopyTo%2A?displayProperty=fullName&gt;。"
  remarks: "這個成員是明確介面成員實作。 它可用時，才<xref:System.Windows.ResourceDictionary>執行個體轉換成<xref:System.Collections.ICollection>介面。</xref:System.Collections.ICollection> </xref:System.Windows.ResourceDictionary>"
  syntax:
    content: void ICollection.CopyTo (Array array, int arrayIndex);
    parameters:
    - id: array
      type: System.Array
      description: "以零為起始<xref:System.Array>接收複製的項目從<xref href=&quot;System.Windows.Markup.Localizer.BamlLocalizationDictionary&quot;> </xref>。</xref:System.Array>"
    - id: arrayIndex
      type: System.Int32
      description: "在指定的第一個位置<xref:System.Array>接收複製的內容。</xref:System.Array>"
  overload: System.Windows.ResourceDictionary.System#Collections#ICollection#CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.System#Collections#ICollection#IsSynchronized
  id: System#Collections#ICollection#IsSynchronized
  isEii: true
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: ResourceDictionary.System.Collections.ICollection.IsSynchronized
  fullName: System.Windows.ResourceDictionary.System.Collections.ICollection.IsSynchronized
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "如需這個成員的說明，請參閱&lt;xref:System.Collections.ICollection.IsSynchronized%2A?displayProperty=fullName&gt;。"
  remarks: "這個成員是明確介面成員實作。 它可用時，才<xref:System.Windows.ResourceDictionary>執行個體轉換成<xref:System.Collections.ICollection>介面。</xref:System.Collections.ICollection> </xref:System.Windows.ResourceDictionary>"
  syntax:
    content: bool System.Collections.ICollection.IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果存取<xref href=&quot;System.Windows.ResourceDictionary&quot;></xref>是同步 （安全執行緒），否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.ResourceDictionary.System#Collections#ICollection#IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.System#Collections#ICollection#SyncRoot
  id: System#Collections#ICollection#SyncRoot
  isEii: true
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: System.Collections.ICollection.SyncRoot
  nameWithType: ResourceDictionary.System.Collections.ICollection.SyncRoot
  fullName: System.Windows.ResourceDictionary.System.Collections.ICollection.SyncRoot
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "如需這個成員的說明，請參閱&lt;xref:System.Collections.ICollection.SyncRoot%2A?displayProperty=fullName&gt;。"
  remarks: "這個成員是明確介面成員實作。 它可用時，才<xref:System.Windows.ResourceDictionary>執行個體轉換成<xref:System.Collections.ICollection>介面。</xref:System.Collections.ICollection> </xref:System.Windows.ResourceDictionary>"
  syntax:
    content: object System.Collections.ICollection.SyncRoot { get; }
    return:
      type: System.Object
      description: "物件，可用來同步處理存取具備<xref href=&quot;System.Windows.ResourceDictionary&quot;> </xref>。"
  overload: System.Windows.ResourceDictionary.System#Collections#ICollection#SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: ResourceDictionary.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Windows.ResourceDictionary.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "如需這個成員的說明，請參閱&lt;xref:System.Collections.IEnumerable.GetEnumerator%2A?displayProperty=fullName&gt;。"
  remarks: "這個成員是明確介面成員實作。 它可用時，才<xref:System.Windows.ResourceDictionary>執行個體轉換成<xref:System.Collections.IEnumerable>介面。</xref:System.Collections.IEnumerable> </xref:System.Windows.ResourceDictionary>"
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "<xref:System.Collections.IEnumerator>可用來逐一查看集合的物件。</xref:System.Collections.IEnumerator>"
  overload: System.Windows.ResourceDictionary.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.System#Windows#Markup#IUriContext#BaseUri
  id: System#Windows#Markup#IUriContext#BaseUri
  isEii: true
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: System.Windows.Markup.IUriContext.BaseUri
  nameWithType: ResourceDictionary.System.Windows.Markup.IUriContext.BaseUri
  fullName: System.Windows.ResourceDictionary.System.Windows.Markup.IUriContext.BaseUri
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "如需這個成員的說明，請參閱&lt;xref:System.Windows.Markup.IUriContext.BaseUri%2A?displayProperty=fullName&gt;。"
  remarks: "這個成員是明確介面成員實作。 它可用時，才<xref:System.Windows.ResourceDictionary>執行個體轉換成<xref:System.Windows.Markup.IUriContext>介面。</xref:System.Windows.Markup.IUriContext> </xref:System.Windows.ResourceDictionary>"
  syntax:
    content: Uri System.Windows.Markup.IUriContext.BaseUri { get; set; }
    return:
      type: System.Uri
      description: "基底[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]的目前內容。"
  overload: System.Windows.ResourceDictionary.System#Windows#Markup#IUriContext#BaseUri*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.UnregisterName(System.String)
  id: UnregisterName(System.String)
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: UnregisterName(String)
  nameWithType: ResourceDictionary.UnregisterName(String)
  fullName: System.Windows.ResourceDictionary.UnregisterName(String)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "不支援這個字典實作。"
  remarks: "<xref:System.Windows.ResourceDictionary>類別不支援依名稱註冊。</xref:System.Windows.ResourceDictionary> 它會改為使用金鑰。 呼叫這個方法沒有任何作用。"
  syntax:
    content: public void UnregisterName (string name);
    parameters:
    - id: name
      type: System.String
      description: "請參閱 < 備註 >"
  overload: System.Windows.ResourceDictionary.UnregisterName*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.Values
  id: Values
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: Values
  nameWithType: ResourceDictionary.Values
  fullName: System.Windows.ResourceDictionary.Values
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "取得包含在這個索引鍵相關聯的所有值的集合<xref href=&quot;System.Windows.ResourceDictionary&quot;> </xref>。"
  remarks: "這個屬性存在，是因為所需<xref:System.Collections.IDictionary>，但通常不是適用於大多數<xref:System.Windows.ResourceDictionary>案例。</xref:System.Windows.ResourceDictionary> </xref:System.Collections.IDictionary>       傳回的值不包括<xref:System.Windows.ResourceDictionary.MergedDictionaries%2A>.</xref:System.Windows.ResourceDictionary.MergedDictionaries%2A>內的值 集合也基本字典中值的快照集。 如果您隨後變更至此<xref:System.Windows.ResourceDictionary>，儲存的值將不會反映這些變更。</xref:System.Windows.ResourceDictionary>"
  syntax:
    content: public System.Collections.ICollection Values { get; }
    return:
      type: System.Collections.ICollection
      description: "所有值的集合。"
  overload: System.Windows.ResourceDictionary.Values*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Windows.ResourceDictionary.#ctor
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: ResourceDictionary()
  nameWithType: ResourceDictionary.ResourceDictionary()
  fullName: System.Windows.ResourceDictionary.ResourceDictionary()
- uid: System.Windows.ResourceDictionary.Add(System.Object,System.Object)
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: Add(Object,Object)
  nameWithType: ResourceDictionary.Add(Object,Object)
  fullName: System.Windows.ResourceDictionary.Add(Object,Object)
- uid: System.Windows.ResourceDictionary.BeginInit
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: BeginInit()
  nameWithType: ResourceDictionary.BeginInit()
  fullName: System.Windows.ResourceDictionary.BeginInit()
- uid: System.Windows.ResourceDictionary.Clear
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: Clear()
  nameWithType: ResourceDictionary.Clear()
  fullName: System.Windows.ResourceDictionary.Clear()
- uid: System.Windows.ResourceDictionary.Contains(System.Object)
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: Contains(Object)
  nameWithType: ResourceDictionary.Contains(Object)
  fullName: System.Windows.ResourceDictionary.Contains(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.ResourceDictionary.CopyTo(System.Collections.DictionaryEntry[],System.Int32)
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: CopyTo(DictionaryEntry[],Int32)
  nameWithType: ResourceDictionary.CopyTo(DictionaryEntry[],Int32)
  fullName: System.Windows.ResourceDictionary.CopyTo(DictionaryEntry[],Int32)
- uid: System.Collections.DictionaryEntry[]
  parent: System.Collections
  isExternal: true
  name: DictionaryEntry
  nameWithType: DictionaryEntry
  fullName: System.Collections.DictionaryEntry[]
  spec.csharp:
  - uid: System.Collections.DictionaryEntry
    name: DictionaryEntry
    nameWithType: DictionaryEntry
    fullName: DictionaryEntry[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.ResourceDictionary.Count
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: Count
  nameWithType: ResourceDictionary.Count
  fullName: System.Windows.ResourceDictionary.Count
- uid: System.Windows.ResourceDictionary.DeferrableContent
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: DeferrableContent
  nameWithType: ResourceDictionary.DeferrableContent
  fullName: System.Windows.ResourceDictionary.DeferrableContent
- uid: System.Windows.DeferrableContent
  parent: System.Windows
  isExternal: false
  name: DeferrableContent
  nameWithType: DeferrableContent
  fullName: System.Windows.DeferrableContent
- uid: System.Windows.ResourceDictionary.EndInit
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: EndInit()
  nameWithType: ResourceDictionary.EndInit()
  fullName: System.Windows.ResourceDictionary.EndInit()
- uid: System.Windows.ResourceDictionary.FindName(System.String)
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: FindName(String)
  nameWithType: ResourceDictionary.FindName(String)
  fullName: System.Windows.ResourceDictionary.FindName(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.ResourceDictionary.GetEnumerator
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: GetEnumerator()
  nameWithType: ResourceDictionary.GetEnumerator()
  fullName: System.Windows.ResourceDictionary.GetEnumerator()
- uid: System.Collections.IDictionaryEnumerator
  parent: System.Collections
  isExternal: true
  name: IDictionaryEnumerator
  nameWithType: IDictionaryEnumerator
  fullName: System.Collections.IDictionaryEnumerator
- uid: System.Windows.ResourceDictionary.IsFixedSize
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: IsFixedSize
  nameWithType: ResourceDictionary.IsFixedSize
  fullName: System.Windows.ResourceDictionary.IsFixedSize
- uid: System.Windows.ResourceDictionary.IsReadOnly
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: IsReadOnly
  nameWithType: ResourceDictionary.IsReadOnly
  fullName: System.Windows.ResourceDictionary.IsReadOnly
- uid: System.Windows.ResourceDictionary.Item(System.Object)
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: Item(Object)
  nameWithType: ResourceDictionary.Item(Object)
  fullName: System.Windows.ResourceDictionary.Item(Object)
- uid: System.Windows.ResourceDictionary.Keys
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: Keys
  nameWithType: ResourceDictionary.Keys
  fullName: System.Windows.ResourceDictionary.Keys
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Windows.ResourceDictionary.MergedDictionaries
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: MergedDictionaries
  nameWithType: ResourceDictionary.MergedDictionaries
  fullName: System.Windows.ResourceDictionary.MergedDictionaries
- uid: System.Collections.ObjectModel.Collection{System.Windows.ResourceDictionary}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<ResourceDictionary>
  nameWithType: Collection<ResourceDictionary>
  fullName: System.Collections.ObjectModel.Collection<System.Windows.ResourceDictionary>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.Windows.ResourceDictionary>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.ResourceDictionary
    name: ResourceDictionary
    nameWithType: ResourceDictionary
    fullName: ResourceDictionary
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.ResourceDictionary.OnGettingValue(System.Object,System.Object@,System.Boolean@)
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: OnGettingValue(Object,Object,Boolean)
  nameWithType: ResourceDictionary.OnGettingValue(Object,Object,Boolean)
  fullName: System.Windows.ResourceDictionary.OnGettingValue(Object,Object,Boolean)
- uid: System.Windows.ResourceDictionary.RegisterName(System.String,System.Object)
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: RegisterName(String,Object)
  nameWithType: ResourceDictionary.RegisterName(String,Object)
  fullName: System.Windows.ResourceDictionary.RegisterName(String,Object)
- uid: System.Windows.ResourceDictionary.Remove(System.Object)
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: Remove(Object)
  nameWithType: ResourceDictionary.Remove(Object)
  fullName: System.Windows.ResourceDictionary.Remove(Object)
- uid: System.Windows.ResourceDictionary.Source
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: Source
  nameWithType: ResourceDictionary.Source
  fullName: System.Windows.ResourceDictionary.Source
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Windows.ResourceDictionary.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: ResourceDictionary.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Windows.ResourceDictionary.System.Collections.ICollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Windows.ResourceDictionary.System#Collections#ICollection#IsSynchronized
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: ResourceDictionary.System.Collections.ICollection.IsSynchronized
  fullName: System.Windows.ResourceDictionary.System.Collections.ICollection.IsSynchronized
- uid: System.Windows.ResourceDictionary.System#Collections#ICollection#SyncRoot
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: ResourceDictionary.System.Collections.ICollection.SyncRoot
  fullName: System.Windows.ResourceDictionary.System.Collections.ICollection.SyncRoot
- uid: System.Windows.ResourceDictionary.System#Collections#IEnumerable#GetEnumerator
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: ResourceDictionary.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Windows.ResourceDictionary.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Windows.ResourceDictionary.System#Windows#Markup#IUriContext#BaseUri
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: System.Windows.Markup.IUriContext.BaseUri
  nameWithType: ResourceDictionary.System.Windows.Markup.IUriContext.BaseUri
  fullName: System.Windows.ResourceDictionary.System.Windows.Markup.IUriContext.BaseUri
- uid: System.Windows.ResourceDictionary.UnregisterName(System.String)
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: UnregisterName(String)
  nameWithType: ResourceDictionary.UnregisterName(String)
  fullName: System.Windows.ResourceDictionary.UnregisterName(String)
- uid: System.Windows.ResourceDictionary.Values
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: Values
  nameWithType: ResourceDictionary.Values
  fullName: System.Windows.ResourceDictionary.Values
- uid: System.Windows.ResourceDictionary.#ctor*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: ResourceDictionary
  nameWithType: ResourceDictionary.ResourceDictionary
- uid: System.Windows.ResourceDictionary.Add*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: Add
  nameWithType: ResourceDictionary.Add
- uid: System.Windows.ResourceDictionary.BeginInit*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: BeginInit
  nameWithType: ResourceDictionary.BeginInit
- uid: System.Windows.ResourceDictionary.Clear*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: Clear
  nameWithType: ResourceDictionary.Clear
- uid: System.Windows.ResourceDictionary.Contains*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: Contains
  nameWithType: ResourceDictionary.Contains
- uid: System.Windows.ResourceDictionary.CopyTo*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: CopyTo
  nameWithType: ResourceDictionary.CopyTo
- uid: System.Windows.ResourceDictionary.Count*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: Count
  nameWithType: ResourceDictionary.Count
- uid: System.Windows.ResourceDictionary.DeferrableContent*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: DeferrableContent
  nameWithType: ResourceDictionary.DeferrableContent
- uid: System.Windows.ResourceDictionary.EndInit*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: EndInit
  nameWithType: ResourceDictionary.EndInit
- uid: System.Windows.ResourceDictionary.FindName*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: FindName
  nameWithType: ResourceDictionary.FindName
- uid: System.Windows.ResourceDictionary.GetEnumerator*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: GetEnumerator
  nameWithType: ResourceDictionary.GetEnumerator
- uid: System.Windows.ResourceDictionary.IsFixedSize*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: IsFixedSize
  nameWithType: ResourceDictionary.IsFixedSize
- uid: System.Windows.ResourceDictionary.IsReadOnly*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: IsReadOnly
  nameWithType: ResourceDictionary.IsReadOnly
- uid: System.Windows.ResourceDictionary.Item*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: Item
  nameWithType: ResourceDictionary.Item
- uid: System.Windows.ResourceDictionary.Keys*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: Keys
  nameWithType: ResourceDictionary.Keys
- uid: System.Windows.ResourceDictionary.MergedDictionaries*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: MergedDictionaries
  nameWithType: ResourceDictionary.MergedDictionaries
- uid: System.Windows.ResourceDictionary.OnGettingValue*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: OnGettingValue
  nameWithType: ResourceDictionary.OnGettingValue
- uid: System.Windows.ResourceDictionary.RegisterName*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: RegisterName
  nameWithType: ResourceDictionary.RegisterName
- uid: System.Windows.ResourceDictionary.Remove*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: Remove
  nameWithType: ResourceDictionary.Remove
- uid: System.Windows.ResourceDictionary.Source*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: Source
  nameWithType: ResourceDictionary.Source
- uid: System.Windows.ResourceDictionary.System#Collections#ICollection#CopyTo*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: System.Collections.ICollection.CopyTo
  nameWithType: ResourceDictionary.System.Collections.ICollection.CopyTo
- uid: System.Windows.ResourceDictionary.System#Collections#ICollection#IsSynchronized*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: ResourceDictionary.System.Collections.ICollection.IsSynchronized
- uid: System.Windows.ResourceDictionary.System#Collections#ICollection#SyncRoot*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: ResourceDictionary.System.Collections.ICollection.SyncRoot
- uid: System.Windows.ResourceDictionary.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: ResourceDictionary.System.Collections.IEnumerable.GetEnumerator
- uid: System.Windows.ResourceDictionary.System#Windows#Markup#IUriContext#BaseUri*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: System.Windows.Markup.IUriContext.BaseUri
  nameWithType: ResourceDictionary.System.Windows.Markup.IUriContext.BaseUri
- uid: System.Windows.ResourceDictionary.UnregisterName*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: UnregisterName
  nameWithType: ResourceDictionary.UnregisterName
- uid: System.Windows.ResourceDictionary.Values*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: Values
  nameWithType: ResourceDictionary.Values
