### YamlMime:ManagedReference
items:
- uid: System.Web.Util.HttpEncoder
  id: HttpEncoder
  children:
  - System.Web.Util.HttpEncoder.#ctor
  - System.Web.Util.HttpEncoder.Current
  - System.Web.Util.HttpEncoder.Default
  - System.Web.Util.HttpEncoder.HeaderNameValueEncode(System.String,System.String,System.String@,System.String@)
  - System.Web.Util.HttpEncoder.HtmlAttributeEncode(System.String,System.IO.TextWriter)
  - System.Web.Util.HttpEncoder.HtmlDecode(System.String,System.IO.TextWriter)
  - System.Web.Util.HttpEncoder.HtmlEncode(System.String,System.IO.TextWriter)
  - System.Web.Util.HttpEncoder.JavaScriptStringEncode(System.String)
  - System.Web.Util.HttpEncoder.UrlEncode(System.Byte[],System.Int32,System.Int32)
  - System.Web.Util.HttpEncoder.UrlPathEncode(System.String)
  langs:
  - csharp
  name: HttpEncoder
  nameWithType: HttpEncoder
  fullName: System.Web.Util.HttpEncoder
  type: Class
  summary: "提供編碼和解碼邏輯。"
  remarks: "這個類別包含的編碼和解碼，例如由類別中方法的邏輯<xref:System.Web.HttpUtility>， <xref:System.Web.HttpServerUtility>，和<xref:System.Net.HttpResponseHeader>。</xref:System.Net.HttpResponseHeader> </xref:System.Web.HttpServerUtility> </xref:System.Web.HttpUtility>       您可以繼承自 HttpEncoder 類別並覆寫其自訂預設的編碼和解碼的 ASP.NET 行為的行為。 然後您設定<xref:System.Web.Configuration.HttpRuntimeSection.EncoderType%2A><xref:System.Web.Configuration.HttpRuntimeSection>用來設定您的自訂類別。 類別</xref:System.Web.Configuration.HttpRuntimeSection>的屬性</xref:System.Web.Configuration.HttpRuntimeSection.EncoderType%2A>       衍生自 HttpEncoder 用於編碼和解碼的自訂類別可以覆寫內建 ASP.NET 編碼和解碼行為，或變更只會選取它的層面。       您可以將下列編碼行為來補充或取代 ASP.NET 中設定的自訂編碼類型︰ HTML 編碼的 HTML 屬性編碼的 URL 編碼的 URL 路徑編碼--HTTP 標頭名稱和標頭值編碼方式依預設，ASP.NET 應用程式設定為使用<xref:System.Web.Security.AntiXss.AntiXssEncoder>輸入所有輸出編碼方式。</xref:System.Web.Security.AntiXss.AntiXssEncoder>       下列範例從應用程式層級的 Web.config 檔案顯示如何<xref:System.Web.Security.AntiXss.AntiXssEncoder>類型針對 ASP.NET 應用程式設定︰`<httpRuntime requestValidationMode=&quot;4.5&quot; encoderType=&quot;System.Web.Security.AntiXss.AntiXssEncoder, System.Web, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a&quot;/>`範例設定中的組態設定<xref:System.Web.Security.AntiXss.AntiXssEncoder>類別以執行所有輸出應用程式中的編碼。</xref:System.Web.Security.AntiXss.AntiXssEncoder> </xref:System.Web.Security.AntiXss.AntiXssEncoder> 如需詳細資訊，請參閱<xref:System.Web.Security.AntiXss.AntiXssEncoder>類別概觀。</xref:System.Web.Security.AntiXss.AntiXssEncoder>"
  syntax:
    content: public class HttpEncoder
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Util.HttpEncoder.#ctor
  id: '#ctor'
  parent: System.Web.Util.HttpEncoder
  langs:
  - csharp
  name: HttpEncoder()
  nameWithType: HttpEncoder.HttpEncoder()
  fullName: System.Web.Util.HttpEncoder.HttpEncoder()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Util
  summary: "初始化的新執行個體<xref href=&quot;System.Web.Util.HttpEncoder&quot;></xref>類別。"
  syntax:
    content: public HttpEncoder ();
    parameters: []
  overload: System.Web.Util.HttpEncoder.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Util.HttpEncoder.Current
  id: Current
  parent: System.Web.Util.HttpEncoder
  langs:
  - csharp
  name: Current
  nameWithType: HttpEncoder.Current
  fullName: System.Web.Util.HttpEncoder.Current
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Util
  summary: "取得或設定<xref href=&quot;System.Web.Util.HttpEncoder&quot;></xref>將應用程式中使用的類型。"
  remarks: "如果衍生<xref:System.Web.Util.HttpEncoder>類型指定在組態檔中，目前的屬性會傳回自訂類型的參考。</xref:System.Web.Util.HttpEncoder> 不過，如果沒有自訂編碼器，屬性會傳回預設 ASP.NET 的參考<xref:System.Web.Util.HttpEncoder>執行個體。</xref:System.Web.Util.HttpEncoder>       目前的屬性不是安全執行緒。 只在應用程式中設定這個屬性`Application_Start`方法，因為`Application_Start`單一執行緒上執行。"
  syntax:
    content: public static System.Web.Util.HttpEncoder Current { get; set; }
    return:
      type: System.Web.Util.HttpEncoder
      description: "將會使用編碼器/解碼器類型的參考。"
  overload: System.Web.Util.HttpEncoder.Current*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "要指派給這個屬性的編碼程式執行個體是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  platform:
  - net462
- uid: System.Web.Util.HttpEncoder.Default
  id: Default
  parent: System.Web.Util.HttpEncoder
  langs:
  - csharp
  name: Default
  nameWithType: HttpEncoder.Default
  fullName: System.Web.Util.HttpEncoder.Default
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Util
  summary: "取得 ASP.NET 的預設編碼器的參考。"
  remarks: "常見的編碼問題在於預設 ASP.NET<xref:System.Web.Util.HttpEncoder.UrlEncode%2A>行為會將空格轉換成&quot;+&quot;字元。</xref:System.Web.Util.HttpEncoder.UrlEncode%2A> 在過去，&quot;+&quot;字元已網際網路慣例在 URL 中的空格字元編碼成更人類看得懂的方式。 不過，根據標準，空格字元應該為&quot;%20&quot;，而不是要編碼為&quot;+&quot;字元。 ASP.NET 可讓您更多的標準相容編碼演算法的實作。"
  syntax:
    content: public static System.Web.Util.HttpEncoder Default { get; }
    return:
      type: System.Web.Util.HttpEncoder
      description: "預設編碼器的參考。"
  overload: System.Web.Util.HttpEncoder.Default*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Util.HttpEncoder.HeaderNameValueEncode(System.String,System.String,System.String@,System.String@)
  id: HeaderNameValueEncode(System.String,System.String,System.String@,System.String@)
  parent: System.Web.Util.HttpEncoder
  langs:
  - csharp
  name: HeaderNameValueEncode(String,String,String,String)
  nameWithType: HttpEncoder.HeaderNameValueEncode(String,String,String,String)
  fullName: System.Web.Util.HttpEncoder.HeaderNameValueEncode(String,String,String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Util
  summary: "編碼字串，可用來當做 HTTP 標頭的標頭名稱和值。"
  remarks: "從字串方法會接受輸入 HeaderNameValueEncode`headerName`和`headerValue`參數，並將它們編碼。 編碼的值會傳回做為 out 參數。       HeaderNameValueEncode 方法會使用下列邏輯來編碼標頭名稱和值:-其 Unicode 值小於 ASCII 字元 32、 ASCII 字元 9、 除外的所有字元都是 URL 編碼成的格式為`%NN`其中`N`字元表示的十六進位值。      ASCII 字元 9 （水平 tab 字元） 不是 URL 編碼。      127 的 ASCII 字元編碼成`%7F`。      為未編碼所有其他字元。          > [!NOTE] > 的 Unicode 值，可以使用這個方法，但是它通常用於 ASCII 範圍中的值。       HeaderNameValueEncode 方法的預設實作會傳回的值`headerValue`中`encodedHeaderValue`如果`headerValue`是`null`或為空字串。 同樣地，預設實作會傳回的值`headerName`中`encodedHeaderName`如果`headerName`是`null`或為空字串。"
  syntax:
    content: protected virtual void HeaderNameValueEncode (string headerName, string headerValue, out string encodedHeaderName, out string encodedHeaderValue);
    parameters:
    - id: headerName
      type: System.String
      description: "要編碼的 HTTP 標頭名稱。"
    - id: headerValue
      type: System.String
      description: "要編碼的 HTTP 標頭值。"
    - id: encodedHeaderName
      type: System.String
      description: "這個方法傳回時，包含要用於 HTTP 標頭的編碼的名稱。 這個參數未初始化便傳遞。"
    - id: encodedHeaderValue
      type: System.String
      description: "這個方法傳回時，包含要使用的 HTTP 標頭的編碼的值。 這個參數未初始化便傳遞。"
  overload: System.Web.Util.HttpEncoder.HeaderNameValueEncode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Util.HttpEncoder.HtmlAttributeEncode(System.String,System.IO.TextWriter)
  id: HtmlAttributeEncode(System.String,System.IO.TextWriter)
  parent: System.Web.Util.HttpEncoder
  langs:
  - csharp
  name: HtmlAttributeEncode(String,TextWriter)
  nameWithType: HttpEncoder.HtmlAttributeEncode(String,TextWriter)
  fullName: System.Web.Util.HttpEncoder.HtmlAttributeEncode(String,TextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Util
  summary: "將傳入值編碼成可插入的 HTML 屬性，以使用單引號或雙引號分隔的字串。"
  remarks: "The HtmlAttributeEncode method encodes characters by using the standard HTML entities. For example, the `<` (left angle bracket) is encoded as `<` and the `\\` (backslash) is encoded as `\\`.  \n  \n It is safe to use HtmlAttributeEncode within single-quoted and double-quoted attributes. The values must be quoted."
  syntax:
    content: protected virtual void HtmlAttributeEncode (string value, System.IO.TextWriter output);
    parameters:
    - id: value
      type: System.String
      description: "要編碼的字串。"
    - id: output
      type: System.IO.TextWriter
      description: "文字寫入器寫入編碼的值。"
  overload: System.Web.Util.HttpEncoder.HtmlAttributeEncode*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>output</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Util.HttpEncoder.HtmlDecode(System.String,System.IO.TextWriter)
  id: HtmlDecode(System.String,System.IO.TextWriter)
  parent: System.Web.Util.HttpEncoder
  langs:
  - csharp
  name: HtmlDecode(String,TextWriter)
  nameWithType: HttpEncoder.HtmlDecode(String,TextWriter)
  fullName: System.Web.Util.HttpEncoder.HtmlDecode(String,TextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Util
  summary: "將解碼的 HTML 編碼字串中的值。"
  remarks: "下表列出 ASP.NET 解碼邏輯可以解碼的字元序列。      |字元順序 |規則 |  |------------------------|----------|  |`&#NNN;` （針對 ASCII 字元十進位碼）。 |解碼為指定的 ASCII 字元。 字元順序開始 # 字元之後的第一個數字，而分號時。 |  |`&#xZZ;` （針對 ASCII 字元的十六進位碼）。 |解碼為指定的 ASCII 字元。 編碼的格式指定的字元，而不是十進位值中使用十六進位字元。 字元順序開始 # 字元之後的第一個數字，而分號時。 |  |名為 HTML 實體。 |解碼為對等的 ASCII 字元。 |"
  syntax:
    content: protected virtual void HtmlDecode (string value, System.IO.TextWriter output);
    parameters:
    - id: value
      type: System.String
      description: "要解碼的字串。"
    - id: output
      type: System.IO.TextWriter
      description: "文字寫入器寫入已解碼的值。"
  overload: System.Web.Util.HttpEncoder.HtmlDecode*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>output</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Util.HttpEncoder.HtmlEncode(System.String,System.IO.TextWriter)
  id: HtmlEncode(System.String,System.IO.TextWriter)
  parent: System.Web.Util.HttpEncoder
  langs:
  - csharp
  name: HtmlEncode(String,TextWriter)
  nameWithType: HttpEncoder.HtmlEncode(String,TextWriter)
  fullName: System.Web.Util.HttpEncoder.HtmlEncode(String,TextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Util
  summary: "將字串編碼成 HTML 編碼字串。"
  remarks: "The following table lists the character sequences that the ASP.NET encoding logic can decode.  \n  \n|Character|Encoded as|  \n|---------------|----------------|  \n|`<` (left angle bracket)|`<`|  \n|`>` (right angle bracket)|`>`|  \n|`\"` (double quotation marks)|`\"`|  \n|`&` (ampersand)|`&`|  \n|`\\` (backslash)|`\\`|  \n|ASCII characters from 160 to 255|`&#NNN;`, where `NNN` is the three-digit decimal character code|  \n  \n If you override the HtmlEncode method, you must produce output that is also safe within double-quoted or single-quoted HTML attributes. This accommodates parsing by the Razor engine, where markup and code can be combined, such as \\<tag attr=\"@value\">. In addition, the @ operator is not context-aware when processed by the Razor engine, therefore it calls HtmlEncode rather than <xref:System.Web.Util.HttpEncoder.HtmlAttributeEncode%2A>."
  syntax:
    content: protected virtual void HtmlEncode (string value, System.IO.TextWriter output);
    parameters:
    - id: value
      type: System.String
      description: "要編碼的字串。"
    - id: output
      type: System.IO.TextWriter
      description: "文字寫入器寫入編碼的值。"
  overload: System.Web.Util.HttpEncoder.HtmlEncode*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>output</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Util.HttpEncoder.JavaScriptStringEncode(System.String)
  id: JavaScriptStringEncode(System.String)
  parent: System.Web.Util.HttpEncoder
  langs:
  - csharp
  name: JavaScriptStringEncode(String)
  nameWithType: HttpEncoder.JavaScriptStringEncode(String)
  fullName: System.Web.Util.HttpEncoder.JavaScriptStringEncode(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Util
  summary: "編碼字串。"
  remarks: "URL 編碼方式可確保所有瀏覽器會正確傳輸 URL 字串中的文字。 字元，例如問號 （？）、 連字號 （&）、 斜線 （/），而且空格可能會被截斷或某些瀏覽器損毀。 因此，這些字元必須編碼。"
  syntax:
    content: protected virtual string JavaScriptStringEncode (string value);
    parameters:
    - id: value
      type: System.String
      description: "要編碼的字串。"
    return:
      type: System.String
      description: "編碼的字串。"
  overload: System.Web.Util.HttpEncoder.JavaScriptStringEncode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Util.HttpEncoder.UrlEncode(System.Byte[],System.Int32,System.Int32)
  id: UrlEncode(System.Byte[],System.Int32,System.Int32)
  parent: System.Web.Util.HttpEncoder
  langs:
  - csharp
  name: UrlEncode(Byte[],Int32,Int32)
  nameWithType: HttpEncoder.UrlEncode(Byte[],Int32,Int32)
  fullName: System.Web.Util.HttpEncoder.UrlEncode(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Util
  summary: "將編碼為十六進位的字元實體對等不允許在 URL 中的字元陣列。"
  remarks: "進行 urlencode 處理方法會呼叫數個 URL 編碼方式<xref:System.Web.HttpUtility>類別。</xref:System.Web.HttpUtility>       進行 urlencode 處理方法進行 URL 編碼任何字元，且不在集合的 ASCII 字元會被視為是安全的 URL。 空格會被編碼為 ASCII&quot;`+&quot;`字元。 URL 安全 ASCII 字元包括 ASCII 字元 (A 到 Z 和 a 到 z)、 數字 (0 到 9)，以及某些標點符號。 下表列出會被視為 URL 安全 ASCII 字元的標點符號。      |字元 |描述 |  |---------------|-----------------|  |-|連字號 |  |_|底線 |  |.|句點 （點） |  |!|驚嘆號 |  |*|星號 （星號） |  |(|左括號 |  |)|右括弧 |"
  syntax:
    content: protected virtual byte[] UrlEncode (byte[] bytes, int offset, int count);
    parameters:
    - id: bytes
      type: System.Byte[]
      description: "要編碼的位元組陣列。"
    - id: offset
      type: System.Int32
      description: "中的位置`bytes`陣列中要開始編碼方式。"
    - id: count
      type: System.Int32
      description: "中的項目數`bytes`陣列進行編碼。"
    return:
      type: System.Byte[]
      description: "編碼的字元陣列。"
  overload: System.Web.Util.HttpEncoder.UrlEncode*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>小於零或大於的長度<code>bytes</code>陣列。       -<code>count</code>小於零或<code>count</code>加上<code>offset</code>大於的長度<code>bytes</code>陣列。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>bytes</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Util.HttpEncoder.UrlPathEncode(System.String)
  id: UrlPathEncode(System.String)
  parent: System.Web.Util.HttpEncoder
  langs:
  - csharp
  name: UrlPathEncode(String)
  nameWithType: HttpEncoder.UrlPathEncode(String)
  fullName: System.Web.Util.HttpEncoder.UrlPathEncode(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Util
  summary: "將編碼的子區段的 URL。"
  remarks: "UrlPathEncode 方法由呼叫<xref:System.Web.HttpUtility.UrlPathEncode%2A>方法。</xref:System.Web.HttpUtility.UrlPathEncode%2A> <xref:System.Web.HttpUtility.UrlPathEncode%2A>方法會執行下列步驟:-適用於僅的 URL (不包括查詢字串） 的路徑部分編碼 UrlPathEncode 方法的邏輯。</xref:System.Web.HttpUtility.UrlPathEncode%2A> 方法會假設 URL 會編碼為 utf-8 字串。      進行編碼非空格，以便產生編碼的字串中使用前 128 個 ASCII 字元的子集。 在 128 和更大，或 32 和更少的 Unicode 值的任何字元是 URL 編碼。      -將編碼為&20;%的空間。"
  syntax:
    content: protected virtual string UrlPathEncode (string value);
    parameters:
    - id: value
      type: System.String
      description: "要編碼的字串。"
    return:
      type: System.String
      description: "URL 編碼的字串。"
  overload: System.Web.Util.HttpEncoder.UrlPathEncode*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Web.Util.HttpEncoder.#ctor
  parent: System.Web.Util.HttpEncoder
  isExternal: false
  name: HttpEncoder()
  nameWithType: HttpEncoder.HttpEncoder()
  fullName: System.Web.Util.HttpEncoder.HttpEncoder()
- uid: System.Web.Util.HttpEncoder.Current
  parent: System.Web.Util.HttpEncoder
  isExternal: false
  name: Current
  nameWithType: HttpEncoder.Current
  fullName: System.Web.Util.HttpEncoder.Current
- uid: System.Web.Util.HttpEncoder
  parent: System.Web.Util
  isExternal: false
  name: HttpEncoder
  nameWithType: HttpEncoder
  fullName: System.Web.Util.HttpEncoder
- uid: System.Web.Util.HttpEncoder.Default
  parent: System.Web.Util.HttpEncoder
  isExternal: false
  name: Default
  nameWithType: HttpEncoder.Default
  fullName: System.Web.Util.HttpEncoder.Default
- uid: System.Web.Util.HttpEncoder.HeaderNameValueEncode(System.String,System.String,System.String@,System.String@)
  parent: System.Web.Util.HttpEncoder
  isExternal: false
  name: HeaderNameValueEncode(String,String,String,String)
  nameWithType: HttpEncoder.HeaderNameValueEncode(String,String,String,String)
  fullName: System.Web.Util.HttpEncoder.HeaderNameValueEncode(String,String,String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Util.HttpEncoder.HtmlAttributeEncode(System.String,System.IO.TextWriter)
  parent: System.Web.Util.HttpEncoder
  isExternal: false
  name: HtmlAttributeEncode(String,TextWriter)
  nameWithType: HttpEncoder.HtmlAttributeEncode(String,TextWriter)
  fullName: System.Web.Util.HttpEncoder.HtmlAttributeEncode(String,TextWriter)
- uid: System.IO.TextWriter
  parent: System.IO
  isExternal: true
  name: TextWriter
  nameWithType: TextWriter
  fullName: System.IO.TextWriter
- uid: System.Web.Util.HttpEncoder.HtmlDecode(System.String,System.IO.TextWriter)
  parent: System.Web.Util.HttpEncoder
  isExternal: false
  name: HtmlDecode(String,TextWriter)
  nameWithType: HttpEncoder.HtmlDecode(String,TextWriter)
  fullName: System.Web.Util.HttpEncoder.HtmlDecode(String,TextWriter)
- uid: System.Web.Util.HttpEncoder.HtmlEncode(System.String,System.IO.TextWriter)
  parent: System.Web.Util.HttpEncoder
  isExternal: false
  name: HtmlEncode(String,TextWriter)
  nameWithType: HttpEncoder.HtmlEncode(String,TextWriter)
  fullName: System.Web.Util.HttpEncoder.HtmlEncode(String,TextWriter)
- uid: System.Web.Util.HttpEncoder.JavaScriptStringEncode(System.String)
  parent: System.Web.Util.HttpEncoder
  isExternal: false
  name: JavaScriptStringEncode(String)
  nameWithType: HttpEncoder.JavaScriptStringEncode(String)
  fullName: System.Web.Util.HttpEncoder.JavaScriptStringEncode(String)
- uid: System.Web.Util.HttpEncoder.UrlEncode(System.Byte[],System.Int32,System.Int32)
  parent: System.Web.Util.HttpEncoder
  isExternal: false
  name: UrlEncode(Byte[],Int32,Int32)
  nameWithType: HttpEncoder.UrlEncode(Byte[],Int32,Int32)
  fullName: System.Web.Util.HttpEncoder.UrlEncode(Byte[],Int32,Int32)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.Util.HttpEncoder.UrlPathEncode(System.String)
  parent: System.Web.Util.HttpEncoder
  isExternal: false
  name: UrlPathEncode(String)
  nameWithType: HttpEncoder.UrlPathEncode(String)
  fullName: System.Web.Util.HttpEncoder.UrlPathEncode(String)
- uid: System.Web.Util.HttpEncoder.#ctor*
  parent: System.Web.Util.HttpEncoder
  isExternal: false
  name: HttpEncoder
  nameWithType: HttpEncoder.HttpEncoder
- uid: System.Web.Util.HttpEncoder.Current*
  parent: System.Web.Util.HttpEncoder
  isExternal: false
  name: Current
  nameWithType: HttpEncoder.Current
- uid: System.Web.Util.HttpEncoder.Default*
  parent: System.Web.Util.HttpEncoder
  isExternal: false
  name: Default
  nameWithType: HttpEncoder.Default
- uid: System.Web.Util.HttpEncoder.HeaderNameValueEncode*
  parent: System.Web.Util.HttpEncoder
  isExternal: false
  name: HeaderNameValueEncode
  nameWithType: HttpEncoder.HeaderNameValueEncode
- uid: System.Web.Util.HttpEncoder.HtmlAttributeEncode*
  parent: System.Web.Util.HttpEncoder
  isExternal: false
  name: HtmlAttributeEncode
  nameWithType: HttpEncoder.HtmlAttributeEncode
- uid: System.Web.Util.HttpEncoder.HtmlDecode*
  parent: System.Web.Util.HttpEncoder
  isExternal: false
  name: HtmlDecode
  nameWithType: HttpEncoder.HtmlDecode
- uid: System.Web.Util.HttpEncoder.HtmlEncode*
  parent: System.Web.Util.HttpEncoder
  isExternal: false
  name: HtmlEncode
  nameWithType: HttpEncoder.HtmlEncode
- uid: System.Web.Util.HttpEncoder.JavaScriptStringEncode*
  parent: System.Web.Util.HttpEncoder
  isExternal: false
  name: JavaScriptStringEncode
  nameWithType: HttpEncoder.JavaScriptStringEncode
- uid: System.Web.Util.HttpEncoder.UrlEncode*
  parent: System.Web.Util.HttpEncoder
  isExternal: false
  name: UrlEncode
  nameWithType: HttpEncoder.UrlEncode
- uid: System.Web.Util.HttpEncoder.UrlPathEncode*
  parent: System.Web.Util.HttpEncoder
  isExternal: false
  name: UrlPathEncode
  nameWithType: HttpEncoder.UrlPathEncode
