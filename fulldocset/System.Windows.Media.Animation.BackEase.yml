### YamlMime:ManagedReference
items:
- uid: System.Windows.Media.Animation.BackEase
  id: BackEase
  children:
  - System.Windows.Media.Animation.BackEase.#ctor
  - System.Windows.Media.Animation.BackEase.Amplitude
  - System.Windows.Media.Animation.BackEase.AmplitudeProperty
  - System.Windows.Media.Animation.BackEase.CreateInstanceCore
  - System.Windows.Media.Animation.BackEase.EaseInCore(System.Double)
  langs:
  - csharp
  name: BackEase
  nameWithType: BackEase
  fullName: System.Windows.Media.Animation.BackEase
  type: Class
  summary: "表示會稍微撤銷動畫的影片，以動畫方式顯示在指定的路徑之前加/減速函數。"
  remarks: "您可以控制當 「 備份 」 行為，就會發生的動畫藉由指定<xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>動畫的屬性值。</xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A> 下圖示範不同的值<xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>，其中*f*(*t*) 表示的動畫進度和*t*代表時間。</xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>       ![BackEase EasingMode 圖形。] (~/add/media/backease-graph.png &quot;BackEase EasingMode 圖形。&quot;)       此函式所使用的公式如下所示。       ![BackEase 公式。] (~/add/media/backease-formula.png &quot;BackEase 公式。&quot;)      > [!NOTE] > 因為這個動畫造成撤銷之前進行的值，動畫可能會進行插補到負數意外。 建立動畫的屬性不允許使用負數時，這可能會導致錯誤。 比方說，如果您將套用至這個動畫<xref:System.Windows.FrameworkElement.Height%2A>的物件 (例如從 0 到 200 與<xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>的<xref:System.Windows.Media.Animation.EasingMode>)，動畫會嘗試進行插補，透過的負數<xref:System.Windows.FrameworkElement.Height%2A>這將會擲回錯誤。</xref:System.Windows.FrameworkElement.Height%2A> </xref:System.Windows.Media.Animation.EasingMode> </xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A> </xref:System.Windows.FrameworkElement.Height%2A>       有數個其他加/減速函數以外，您可以內容探索如何使用下列的 Silverlight 範例 BackEase。       [執行此範例](http://go.microsoft.com/fwlink/?LinkId=139798&sref=easing_functions_gallery)除了使用加/減速函數包含在執行階段中，您可以透過繼承自<xref:System.Windows.Media.Animation.EasingFunctionBase>.</xref:System.Windows.Media.Animation.EasingFunctionBase>建立您自己自訂的加/減速函數      <a name=&quot;xamlObjectElementUsage_BackEase&quot;></a># # XAML 物件項目用法```   <BackEase .../>   ```"
  example:
  - "The following example applies a BackEase easing function to a <xref:System.Windows.Media.Animation.DoubleAnimation> to create an animation that retracts slightly at the beginning and end of the animation.  \n  \n [!code-xml[BackEase_scale#BackEase_scale](~/add/codesnippet/xaml/backease_scale/window1.xaml#backease_scale)]\n [!code-xml[BackEase_scale#BackEase_scale](~/add/codesnippet/xaml/t-system.windows.media.a_28_1.xaml)]"
  syntax:
    content: 'public class BackEase : System.Windows.Media.Animation.EasingFunctionBase'
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  - System.Windows.Freezable
  - System.Windows.Media.Animation.EasingFunctionBase
  implements: []
  inheritedMembers:
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.Freezable.CanFreeze
  - System.Windows.Freezable.Changed
  - System.Windows.Freezable.Clone
  - System.Windows.Freezable.CloneCore(System.Windows.Freezable)
  - System.Windows.Freezable.CloneCurrentValue
  - System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)
  - System.Windows.Freezable.CreateInstance
  - System.Windows.Freezable.Freeze
  - System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)
  - System.Windows.Freezable.FreezeCore(System.Boolean)
  - System.Windows.Freezable.GetAsFrozen
  - System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Freezable.GetCurrentValueAsFrozen
  - System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Freezable.IsFrozen
  - System.Windows.Freezable.OnChanged
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)
  - System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.Freezable.ReadPreamble
  - System.Windows.Freezable.WritePostscript
  - System.Windows.Freezable.WritePreamble
  - System.Windows.Media.Animation.EasingFunctionBase.Ease(System.Double)
  - System.Windows.Media.Animation.EasingFunctionBase.EasingMode
  - System.Windows.Media.Animation.EasingFunctionBase.EasingModeProperty
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.Media.Animation.BackEase.#ctor
  id: '#ctor'
  parent: System.Windows.Media.Animation.BackEase
  langs:
  - csharp
  name: BackEase()
  nameWithType: BackEase.BackEase()
  fullName: System.Windows.Media.Animation.BackEase.BackEase()
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "初始化的新執行個體<xref href=&quot;System.Windows.Media.Animation.BackEase&quot;></xref>類別。"
  syntax:
    content: public BackEase ();
    parameters: []
  overload: System.Windows.Media.Animation.BackEase.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.BackEase.Amplitude
  id: Amplitude
  parent: System.Windows.Media.Animation.BackEase
  langs:
  - csharp
  name: Amplitude
  nameWithType: BackEase.Amplitude
  fullName: System.Windows.Media.Animation.BackEase.Amplitude
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "取得或設定撤銷與相關聯的幅度<xref href=&quot;System.Windows.Media.Animation.BackEase&quot;></xref>動畫。"
  remarks: "[!INCLUDE[DP_ID_field_label](~/add/includes/dp-id-field-label-md.md)]<xref:System.Windows.Media.Animation.BackEase.AmplitudeProperty>振幅愈大，愈大撤銷前面或後面動畫。</xref:System.Windows.Media.Animation.BackEase.AmplitudeProperty>       ![示範不同的 amplitude 值。](~/add/media/backease-amplitude.png &quot;示範不同的 amplitude 值。&quot;)      <a name=&quot;xamlAttributeUsage_Opacity&quot;></a># # XAML 屬性使用方式```   <object Amplitude=&quot;double&quot; .../>   ```"
  example:
  - "The following example applies a <xref:System.Windows.Media.Animation.BackEase> easing function to a <xref:System.Windows.Media.Animation.DoubleAnimation> to create an animation that retracts slightly at the beginning and end of the animation.  \n  \n [!code-xml[BackEase_scale#BackEase_scale](~/add/codesnippet/xaml/backease_scale/window1.xaml#backease_scale)]\n [!code-xml[BackEase_scale#BackEase_scale](~/add/codesnippet/xaml/p-system.windows.media.a_2_1.xaml)]"
  syntax:
    content: public double Amplitude { get; set; }
    return:
      type: System.Double
      description: "撤銷與相關聯的幅度<xref href=&quot;System.Windows.Media.Animation.BackEase&quot;></xref>動畫。 此值必須大於或等於 0。       預設值為 1。"
  overload: System.Windows.Media.Animation.BackEase.Amplitude*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.BackEase.AmplitudeProperty
  id: AmplitudeProperty
  parent: System.Windows.Media.Animation.BackEase
  langs:
  - csharp
  name: AmplitudeProperty
  nameWithType: BackEase.AmplitudeProperty
  fullName: System.Windows.Media.Animation.BackEase.AmplitudeProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "識別<xref:System.Windows.Media.Animation.BackEase.Amplitude*>相依性屬性。</xref:System.Windows.Media.Animation.BackEase.Amplitude*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty AmplitudeProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.BackEase.CreateInstanceCore
  id: CreateInstanceCore
  parent: System.Windows.Media.Animation.BackEase
  langs:
  - csharp
  name: CreateInstanceCore()
  nameWithType: BackEase.CreateInstanceCore()
  fullName: System.Windows.Media.Animation.BackEase.CreateInstanceCore()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "建立的新執行個體<xref href=&quot;System.Windows.Freezable&quot;></xref>衍生的類別。 當建立衍生的類別時，您必須覆寫這個方法。"
  remarks: "<xref:System.Windows.Freezable>.</xref:System.Windows.Freezable>間接繼承動畫類別 因為這個緣故，您需要覆寫 CreateInstanceCore 方法來建構自訂動畫物件。"
  example:
  - "The following example shows a typical implementation of <xref:System.Windows.Freezable.CreateInstanceCore%2A>.  \n  \n [!code-vb[freezablesample_procedural#CreateInstanceCoreExample](~/add/codesnippet/visualbasic/freezablesample_visualbasic/freezablesample.vb#createinstancecoreexample)]\n [!code-cs[freezablesample_procedural#CreateInstanceCoreExample](~/add/codesnippet/csharp/freezablesample_csharp/freezablesample.cs#createinstancecoreexample)]"
  syntax:
    content: protected override System.Windows.Freezable CreateInstanceCore ();
    parameters: []
    return:
      type: System.Windows.Freezable
      description: "新的執行個體。"
  overload: System.Windows.Media.Animation.BackEase.CreateInstanceCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.BackEase.EaseInCore(System.Double)
  id: EaseInCore(System.Double)
  parent: System.Windows.Media.Animation.BackEase
  langs:
  - csharp
  name: EaseInCore(Double)
  nameWithType: BackEase.EaseInCore(Double)
  fullName: System.Windows.Media.Animation.BackEase.EaseInCore(Double)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "提供您可以覆寫以產生的 easing 函式的邏輯部分<xref href=&quot;System.Windows.Media.Animation.EasingMode&quot;></xref>自訂 easing 函式的模式。"
  remarks: "這個方法來轉換控制<xref:System.Windows.Media.Animation.EasingMode><xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>.</xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>的大小寫</xref:System.Windows.Media.Animation.EasingMode>的動畫的速度的標準化的時間       您只需要指定您加/減速函數<xref:System.Windows.Media.Animation.EasingMode>因為大小寫的實作<xref:System.Windows.Media.Animation.EasingFunctionBase.Ease%2A>方法轉換`normalizedTime`如<xref:System.Windows.Media.Animation.EasingMode>和<xref:System.Windows.Media.Animation.EasingMode>案例。</xref:System.Windows.Media.Animation.EasingMode> </xref:System.Windows.Media.Animation.EasingMode> </xref:System.Windows.Media.Animation.EasingFunctionBase.Ease%2A> </xref:System.Windows.Media.Animation.EasingMode>"
  syntax:
    content: protected override double EaseInCore (double normalizedTime);
    parameters:
    - id: normalizedTime
      type: System.Double
      description: "動畫的標準化的時間 （進度）。"
    return:
      type: System.Double
      description: "Double 值，表示已轉換的進度。"
  overload: System.Windows.Media.Animation.BackEase.EaseInCore*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Media.Animation.EasingFunctionBase
  isExternal: false
  name: System.Windows.Media.Animation.EasingFunctionBase
- uid: System.Windows.Media.Animation.BackEase.#ctor
  parent: System.Windows.Media.Animation.BackEase
  isExternal: false
  name: BackEase()
  nameWithType: BackEase.BackEase()
  fullName: System.Windows.Media.Animation.BackEase.BackEase()
- uid: System.Windows.Media.Animation.BackEase.Amplitude
  parent: System.Windows.Media.Animation.BackEase
  isExternal: false
  name: Amplitude
  nameWithType: BackEase.Amplitude
  fullName: System.Windows.Media.Animation.BackEase.Amplitude
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Windows.Media.Animation.BackEase.AmplitudeProperty
  parent: System.Windows.Media.Animation.BackEase
  isExternal: false
  name: AmplitudeProperty
  nameWithType: BackEase.AmplitudeProperty
  fullName: System.Windows.Media.Animation.BackEase.AmplitudeProperty
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Windows.Media.Animation.BackEase.CreateInstanceCore
  parent: System.Windows.Media.Animation.BackEase
  isExternal: false
  name: CreateInstanceCore()
  nameWithType: BackEase.CreateInstanceCore()
  fullName: System.Windows.Media.Animation.BackEase.CreateInstanceCore()
- uid: System.Windows.Freezable
  parent: System.Windows
  isExternal: false
  name: Freezable
  nameWithType: Freezable
  fullName: System.Windows.Freezable
- uid: System.Windows.Media.Animation.BackEase.EaseInCore(System.Double)
  parent: System.Windows.Media.Animation.BackEase
  isExternal: false
  name: EaseInCore(Double)
  nameWithType: BackEase.EaseInCore(Double)
  fullName: System.Windows.Media.Animation.BackEase.EaseInCore(Double)
- uid: System.Windows.Media.Animation.BackEase.#ctor*
  parent: System.Windows.Media.Animation.BackEase
  isExternal: false
  name: BackEase
  nameWithType: BackEase.BackEase
- uid: System.Windows.Media.Animation.BackEase.Amplitude*
  parent: System.Windows.Media.Animation.BackEase
  isExternal: false
  name: Amplitude
  nameWithType: BackEase.Amplitude
- uid: System.Windows.Media.Animation.BackEase.CreateInstanceCore*
  parent: System.Windows.Media.Animation.BackEase
  isExternal: false
  name: CreateInstanceCore
  nameWithType: BackEase.CreateInstanceCore
- uid: System.Windows.Media.Animation.BackEase.EaseInCore*
  parent: System.Windows.Media.Animation.BackEase
  isExternal: false
  name: EaseInCore
  nameWithType: BackEase.EaseInCore
