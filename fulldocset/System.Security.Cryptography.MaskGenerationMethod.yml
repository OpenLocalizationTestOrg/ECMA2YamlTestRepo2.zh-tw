### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.MaskGenerationMethod
  id: MaskGenerationMethod
  children:
  - System.Security.Cryptography.MaskGenerationMethod.#ctor
  - System.Security.Cryptography.MaskGenerationMethod.GenerateMask(System.Byte[],System.Int32)
  langs:
  - csharp
  name: MaskGenerationMethod
  nameWithType: MaskGenerationMethod
  fullName: System.Security.Cryptography.MaskGenerationMethod
  type: Class
  summary: "代表所有遮罩產生器演算法必須從中都衍生的抽象類別。"
  remarks: "MaskGenerationMethod 的衍生的類別計算會以金鑰交換演算法，例如最佳非對稱加密填補 (OAEP) 的遮罩。       這個類別是僅用於產生遮罩使用由金鑰交換演算法的實作。 應用程式程式碼不直接使用這個類別。"
  example:
  - "The following code example demonstrates how to derive from the MaskGenerationMethod class.  \n  \n [!code-cs[System.Security.Cryptography.MaskGenerationMethod#1](~/add/codesnippet/csharp/t-system.security.crypto_119_1.cs)]\n [!code-cpp[System.Security.Cryptography.MaskGenerationMethod#1](~/add/codesnippet/cpp/t-system.security.crypto_119_1.cpp)]\n [!code-vb[System.Security.Cryptography.MaskGenerationMethod#1](~/add/codesnippet/visualbasic/t-system.security.crypto_119_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class MaskGenerationMethod
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Cryptography.MaskGenerationMethod.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.MaskGenerationMethod
  langs:
  - csharp
  name: MaskGenerationMethod()
  nameWithType: MaskGenerationMethod.MaskGenerationMethod()
  fullName: System.Security.Cryptography.MaskGenerationMethod.MaskGenerationMethod()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "初始化的新執行個體<xref href=&quot;System.Security.Cryptography.MaskGenerationMethod&quot;></xref>類別。"
  syntax:
    content: protected MaskGenerationMethod ();
    parameters: []
  overload: System.Security.Cryptography.MaskGenerationMethod.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.MaskGenerationMethod.GenerateMask(System.Byte[],System.Int32)
  id: GenerateMask(System.Byte[],System.Int32)
  parent: System.Security.Cryptography.MaskGenerationMethod
  langs:
  - csharp
  name: GenerateMask(Byte[],Int32)
  nameWithType: MaskGenerationMethod.GenerateMask(Byte[],Int32)
  fullName: System.Security.Cryptography.MaskGenerationMethod.GenerateMask(Byte[],Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "當在衍生類別中覆寫時，會遮罩產生具有指定的長度，使用指定的隨機種子。"
  remarks: ''
  example:
  - "The following code example demonstrates how to override the GenerateMask to create and return a mask using the specified seed. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.MaskGenerationMethod> class.  \n  \n System.Security.Cryptography.MaskGenerationMethod#3"
  syntax:
    content: public abstract byte[] GenerateMask (byte[] rgbSeed, int cbReturn);
    parameters:
    - id: rgbSeed
      type: System.Byte[]
      description: "要用於計算遮罩的隨機種子。"
    - id: cbReturn
      type: System.Int32
      description: "產生的遮罩，以位元組為單位的長度。"
    return:
      type: System.Byte[]
      description: "隨機產生的遮罩，其長度等於<code> cbReturn </code>參數。"
  overload: System.Security.Cryptography.MaskGenerationMethod.GenerateMask*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Security.Cryptography.MaskGenerationMethod.#ctor
  parent: System.Security.Cryptography.MaskGenerationMethod
  isExternal: false
  name: MaskGenerationMethod()
  nameWithType: MaskGenerationMethod.MaskGenerationMethod()
  fullName: System.Security.Cryptography.MaskGenerationMethod.MaskGenerationMethod()
- uid: System.Security.Cryptography.MaskGenerationMethod.GenerateMask(System.Byte[],System.Int32)
  parent: System.Security.Cryptography.MaskGenerationMethod
  isExternal: false
  name: GenerateMask(Byte[],Int32)
  nameWithType: MaskGenerationMethod.GenerateMask(Byte[],Int32)
  fullName: System.Security.Cryptography.MaskGenerationMethod.GenerateMask(Byte[],Int32)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.MaskGenerationMethod.#ctor*
  parent: System.Security.Cryptography.MaskGenerationMethod
  isExternal: false
  name: MaskGenerationMethod
  nameWithType: MaskGenerationMethod.MaskGenerationMethod
- uid: System.Security.Cryptography.MaskGenerationMethod.GenerateMask*
  parent: System.Security.Cryptography.MaskGenerationMethod
  isExternal: false
  name: GenerateMask
  nameWithType: MaskGenerationMethod.GenerateMask
