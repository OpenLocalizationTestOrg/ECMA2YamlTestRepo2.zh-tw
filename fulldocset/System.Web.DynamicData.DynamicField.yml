### YamlMime:ManagedReference
items:
- uid: System.Web.DynamicData.DynamicField
  id: DynamicField
  children:
  - System.Web.DynamicData.DynamicField.#ctor
  - System.Web.DynamicData.DynamicField.ApplyFormatInEditMode
  - System.Web.DynamicData.DynamicField.Column
  - System.Web.DynamicData.DynamicField.ConfigureDynamicControl(System.Web.DynamicData.DynamicControl)
  - System.Web.DynamicData.DynamicField.ConvertEmptyStringToNull
  - System.Web.DynamicData.DynamicField.CopyProperties(System.Web.UI.WebControls.DataControlField)
  - System.Web.DynamicData.DynamicField.CreateDynamicControl
  - System.Web.DynamicData.DynamicField.CreateField
  - System.Web.DynamicData.DynamicField.DataField
  - System.Web.DynamicData.DynamicField.DataFormatString
  - System.Web.DynamicData.DynamicField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)
  - System.Web.DynamicData.DynamicField.GetAttribute(System.String)
  - System.Web.DynamicData.DynamicField.HeaderText
  - System.Web.DynamicData.DynamicField.HtmlEncode
  - System.Web.DynamicData.DynamicField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  - System.Web.DynamicData.DynamicField.NullDisplayText
  - System.Web.DynamicData.DynamicField.ReadOnly
  - System.Web.DynamicData.DynamicField.SetAttribute(System.String,System.String)
  - System.Web.DynamicData.DynamicField.SortExpression
  - System.Web.DynamicData.DynamicField.UIHint
  - System.Web.DynamicData.DynamicField.ValidateRequestMode
  - System.Web.DynamicData.DynamicField.ValidationGroup
  langs:
  - csharp
  name: DynamicField
  nameWithType: DynamicField
  fullName: System.Web.DynamicData.DynamicField
  type: Class
  summary: "代表使用 ASP.NET Dynamic Data 功能的資料繫結控制項中顯示資料欄位。"
  remarks: "本主題內容:-[簡介](#introduction)      -   [宣告式語法](#declarative_syntax)<a name=&quot;introduction&quot;> </a> # # 簡介 DynamicField 類別可供資料繫結控制項，例如<xref:System.Web.UI.WebControls.GridView>和<xref:System.Web.UI.WebControls.DetailsView>控制項，以顯示使用 ASP.NET Dynamic Data 功能在自訂頁面中的欄位值。</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView>             DynamicField 類別提供的功能類似的<xref:System.Web.UI.WebControls.BoundField>類別。</xref:System.Web.UI.WebControls.BoundField> 不過，由於 DynamicField 物件用於動態資料的應用程式，您可以利用下列的動態資料功能:-自動轉譯適當的控制項欄位，使用欄位的範本，根據資料類型。 整個應用程式都可以修改全域的欄位樣板。      -提供根據資料庫結構描述的內建的資料驗證。 您也可以加入自訂資料模型的驗證類型。      -自訂個別欄位的資料轉譯使用中的資料模型的屬性，或使用<xref:System.Web.DynamicData.DynamicField.UIHint%2A>屬性。</xref:System.Web.DynamicData.DynamicField.UIHint%2A>       DynamicField 物件使用呈現每個欄位`DynamicControl`控制項。 指定要顯示 DynamicField 物件中的資料欄位，請設定<xref:System.Web.DynamicData.DynamicField.DataField%2A>的欄位名稱的屬性。</xref:System.Web.DynamicData.DynamicField.DataField%2A> 您可以設定來套用自訂格式字串至欄位值<xref:System.Web.DynamicData.DynamicField.DataFormatString%2A>屬性。</xref:System.Web.DynamicData.DynamicField.DataFormatString%2A> 根據預設格式字串被套用至欄位值，只有在資料繫結控制項處於唯讀模式時。 若要將格式字串套用至資料繫結控制項處於編輯模式時顯示的值，設定<xref:System.Web.DynamicData.DynamicField.ApplyFormatInEditMode%2A>屬性`true`。</xref:System.Web.DynamicData.DynamicField.ApplyFormatInEditMode%2A> 如果欄位值為`null`，您可以藉由設定顯示自訂標題<xref:System.Web.DynamicData.DynamicField.NullDisplayText%2A>屬性。</xref:System.Web.DynamicData.DynamicField.NullDisplayText%2A> DynamicField 物件也會自動將轉換空字串 (&quot;&quot;) 藉由設定欄位值為 null 值<xref:System.Web.DynamicData.DynamicField.ConvertEmptyStringToNull%2A>屬性`true`。</xref:System.Web.DynamicData.DynamicField.ConvertEmptyStringToNull%2A>      <a name=&quot;declarative_syntax&quot;></a># # 宣告式語法```   <asp:DynamicField        AccessibleHeaderText=&quot;string&quot;            ApplyFormatInEditMode=&quot;true|false&quot;         ControlStyle-BackColor=&quot;color name|#dddddd&quot;        ControlStyle-BorderColor=&quot;color name|#dddddd&quot;        ControlStyle-BorderStyle=&quot;NotSet|None|Dotted|Dashed|Solid|Double|Groove|          Ridge|Inset|Outset&quot;         ControlStyle-BorderWidth=&quot;size&quot;         ControlStyle-CssClass=&quot;string&quot;        ControlStyle-Font-Bold=&quot;true|false&quot;        ControlStyle-Font-Italic=&quot;true|false&quot;        ControlStyle-Font-Names=&quot;string&quot;        ControlStyle-Font-Overline=&quot;true|false&quot;         ControlStyle-Font-Size=&quot;string|Smaller|Larger|XX-Small|X-Small|Small|Medium|          Large|X-Large|XX-Large&quot;        ControlStyle-Font-Strikeout=&quot;true|false&quot;          ControlStyle-Font-Underline=&quot;true|false&quot;          ControlStyle-ForeColor=&quot;color name|#dddddd&quot;          ControlStyle-Height=&quot;size&quot;        ControlStyle-Width=&quot;size&quot;        ConvertEmptyStringToNull=&quot;true|false&quot;         DataField=&quot;string&quot;        DataFormatString=&quot;string&quot;          FooterStyle-BackColor=&quot;color name|#dddddd&quot;        FooterStyle-BorderColor=&quot;color name|#dddddd&quot;        FooterStyle-BorderStyle=&quot;NotSet|None|Dotted|Dashed|Solid|Double|Groove|          Ridge|Inset|Outset&quot;         FooterStyle-BorderWidth=&quot;size&quot;         FooterStyle-CssClass=&quot;string&quot;        FooterStyle-Font-Bold=&quot;true|false&quot;        FooterStyle-Font-Italic=&quot;true|false&quot;        FooterStyle-Font-Names=&quot;string&quot;        FooterStyle-Font-Overline=&quot;true|false&quot;         FooterStyle-Font-Size=&quot;string|Smaller|Larger|XX-Small|X-Small|Small|Medium|          Large|X-Large|XX-Large&quot;        FooterStyle-Font-Strikeout=&quot;true|false&quot;          FooterStyle-Font-Underline=&quot;true|false&quot;          FooterStyle-ForeColor=&quot;color name|#dddddd&quot;          FooterStyle-Height=&quot;size&quot;        FooterStyle-Width=&quot;size&quot;        FooterStyle-HorizontalAlign=&quot;Center|Justify|Left|NotSet|Right&quot;        FooterStyle-VerticalAlign=&quot;Bottom|Middle|NotSet|Top&quot;        FooterStyle-Wrap=&quot;true|false&quot;          HeaderImageUrl=&quot;uri&quot;       HeaderStyle-BackColor=&quot;color name|#dddddd&quot;        HeaderStyle-BorderColor=&quot;color name|#dddddd&quot;        HeaderStyle-BorderStyle=&quot;NotSet|None|Dotted|Dashed|Solid|Double|Groove|          Ridge|Inset|Outset&quot;         HeaderStyle-BorderWidth=&quot;size&quot;         HeaderStyle-CssClass=&quot;string&quot;        HeaderStyle-Font-Bold=&quot;true|false&quot;        HeaderStyle-Font-Italic=&quot;true|false&quot;        HeaderStyle-Font-Names=&quot;string&quot;        HeaderStyle-Font-Overline=&quot;true|false&quot;         HeaderStyle-Font-Size=&quot;string|Smaller|Larger|XX-Small|X-Small|Small|Medium|          Large|X-Large|XX-Large&quot;        HeaderStyle-Font-Strikeout=&quot;true|false&quot;          HeaderStyle-Font-Underline=&quot;true|false&quot;          HeaderStyle-ForeColor=&quot;color name|#dddddd&quot;          HeaderStyle-Height=&quot;size&quot;        HeaderStyle-Width=&quot;size&quot;        HeaderStyle-HorizontalAlign=&quot;Center|Justify|Left|NotSet|Right&quot;        HeaderStyle-VerticalAlign=&quot;Bottom|Middle|NotSet|Top&quot;        HeaderStyle-Wrap=&quot;true|false&quot;          HeaderText=&quot;string&quot;       InsertVisible=&quot;true|false&quot;           ItemStyle-BackColor=&quot;color name|#dddddd&quot;        ItemStyle-BorderColor=&quot;color name|#dddddd&quot;        ItemStyle-BorderStyle=&quot;NotSet|None|Dotted|Dashed|Solid|Double|Groove|          Ridge|Inset|Outset&quot;         ItemStyle-BorderWidth=&quot;size&quot;         ItemStyle-CssClass=&quot;string&quot;        ItemStyle-Font-Bold=&quot;true|false&quot;        ItemStyle-Font-Italic=&quot;true|false&quot;        ItemStyle-Font-Names=&quot;string&quot;        ItemStyle-Font-Overline=&quot;true|false&quot;         ItemStyle-Font-Size=&quot;string|Smaller|Larger|XX-Small|X-Small|Small|Medium|          Large|X-Large|XX-Large&quot;        ItemStyle-Font-Strikeout=&quot;true|false&quot;          ItemStyle-Font-Underline=&quot;true|false&quot;          ItemStyle-ForeColor=&quot;color name|#dddddd&quot;          ItemStyle-Height=&quot;size&quot;        ItemStyle-Width=&quot;size&quot;        ItemStyle-HorizontalAlign=&quot;Center|Justify|Left|NotSet|Right&quot;        ItemStyle-VerticalAlign=&quot;Bottom|Middle|NotSet|Top&quot;        ItemStyle-Wrap=&quot;true|false&quot;          NullDisplayText=&quot;string&quot;        ReadOnly=&quot;true|false&quot;         ShowHeader=&quot;true|false&quot;         SortExpression=&quot;string&quot;        UIHint=&quot;string&quot;        ValidationGroup=&quot;string&quot;        Visible=&quot;true|false&quot;        />   <asp:DynamicField />   ```"
  example:
  - "See a run-time code example of this feature: [Run](http://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.DynamicField).  \n  \n The following example demonstrates how to use the DynamicField object in a <xref:System.Web.UI.WebControls.GridView> control to display and edit values from a database table.  \n  \n [!code-vb[System.Web.DynamicData.DynamicField#1](~/add/codesnippet/visualbasic/t-system.web.dynamicdata_1_1.aspx)]\n [!code-cs[System.Web.DynamicData.DynamicField#1](~/add/codesnippet/csharp/t-system.web.dynamicdata_1_1.aspx)]"
  syntax:
    content: >-
      [System.ComponentModel.Designer("System.Web.DynamicData.Design.DynamicFieldDesigner, System.Web.DynamicData.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")]

      public class DynamicField : System.Web.UI.WebControls.DataControlField, System.Web.DynamicData.IFieldFormattingOptions, System.Web.UI.IAttributeAccessor
  inheritance:
  - System.Object
  - System.Web.UI.WebControls.DataControlField
  implements:
  - System.Web.DynamicData.IFieldFormattingOptions
  - System.Web.UI.IAttributeAccessor
  inheritedMembers:
  - System.Web.UI.WebControls.DataControlField.AccessibleHeaderText
  - System.Web.UI.WebControls.DataControlField.CloneField
  - System.Web.UI.WebControls.DataControlField.Control
  - System.Web.UI.WebControls.DataControlField.ControlStyle
  - System.Web.UI.WebControls.DataControlField.DesignMode
  - System.Web.UI.WebControls.DataControlField.FooterStyle
  - System.Web.UI.WebControls.DataControlField.FooterText
  - System.Web.UI.WebControls.DataControlField.HeaderImageUrl
  - System.Web.UI.WebControls.DataControlField.HeaderStyle
  - System.Web.UI.WebControls.DataControlField.Initialize(System.Boolean,System.Web.UI.Control)
  - System.Web.UI.WebControls.DataControlField.InsertVisible
  - System.Web.UI.WebControls.DataControlField.IsTrackingViewState
  - System.Web.UI.WebControls.DataControlField.ItemStyle
  - System.Web.UI.WebControls.DataControlField.LoadViewState(System.Object)
  - System.Web.UI.WebControls.DataControlField.OnFieldChanged
  - System.Web.UI.WebControls.DataControlField.SaveViewState
  - System.Web.UI.WebControls.DataControlField.ShowHeader
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IDataSourceViewSchemaAccessor#DataSourceViewSchema
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#TrackViewState
  - System.Web.UI.WebControls.DataControlField.ToString
  - System.Web.UI.WebControls.DataControlField.TrackViewState
  - System.Web.UI.WebControls.DataControlField.ValidateSupportsCallback
  - System.Web.UI.WebControls.DataControlField.ViewState
  - System.Web.UI.WebControls.DataControlField.Visible
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.#ctor
  id: '#ctor'
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: DynamicField()
  nameWithType: DynamicField.DynamicField()
  fullName: System.Web.DynamicData.DynamicField.DynamicField()
  type: Constructor
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "初始化的新執行個體<xref href=&quot;System.Web.DynamicData.DynamicField&quot;></xref>類別。"
  remarks: "使用這個建構函式來初始化<xref:System.Web.DynamicData.DynamicField>類別</xref:System.Web.DynamicData.DynamicField>的新執行個體 將欄位加入至動態建立的資料繫結控制項時，通常會使用這個建構函式。       若要以動態方式加入<xref:System.Web.DynamicData.DynamicField>物件資料繫結控制項，請建立新<xref:System.Web.DynamicData.DynamicField>物件、 設定其屬性，並將其加入資料繫結控制項的欄位集合。</xref:System.Web.DynamicData.DynamicField> </xref:System.Web.DynamicData.DynamicField> 例如，如果您使用<xref:System.Web.UI.WebControls.GridView>控制項，加入<xref:System.Web.DynamicData.DynamicField>物件<xref:System.Web.UI.WebControls.GridView.Columns%2A>集合。</xref:System.Web.UI.WebControls.GridView.Columns%2A> </xref:System.Web.DynamicData.DynamicField> </xref:System.Web.UI.WebControls.GridView>      > [!NOTE] > 以動態方式，您就可以將欄位加入資料繫結控制項，不過強烈建議的欄位以靜態方式宣告，然後顯示或隱藏，視需要。 以靜態方式宣告所有欄位可都減少的父資料繫結控制項的檢視狀態的大小。"
  syntax:
    content: public DynamicField ();
    parameters: []
  overload: System.Web.DynamicData.DynamicField.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.ApplyFormatInEditMode
  id: ApplyFormatInEditMode
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: ApplyFormatInEditMode
  nameWithType: DynamicField.ApplyFormatInEditMode
  fullName: System.Web.DynamicData.DynamicField.ApplyFormatInEditMode
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "取得或設定值，指出是否已格式化的字串，由<xref:System.Web.DynamicData.DynamicField.DataFormatString*>屬性套用至欄位值的資料欄位處於編輯模式時。</xref:System.Web.DynamicData.DynamicField.DataFormatString*>"
  remarks: "資料繫結控制項 (例如<xref:System.Web.UI.WebControls.DetailsView>，和<xref:System.Web.UI.WebControls.GridView>) 可讓使用者讀取、 編輯或將記錄插入的不同的顯示模式。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.DetailsView> 依預設，格式化字串會指定由<xref:System.Web.DynamicData.DynamicField.DataFormatString%2A>屬性套用至欄位值的資料繫結控制項處於唯讀模式時，才。</xref:System.Web.DynamicData.DynamicField.DataFormatString%2A> 若要將格式字串套用至資料繫結控制項處於編輯模式時顯示的值，將 ApplyFormatInEditMode 屬性設定為`true`。      > [!NOTE] > A<xref:System.Web.DynamicData.DynamicField>物件不會自動移除設定格式化的資料來源中更新的欄位時。</xref:System.Web.DynamicData.DynamicField> 如果您不想格式儲存的值的一部分，您必須移除的格式以程式設計的方式。"
  syntax:
    content: public bool ApplyFormatInEditMode { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref href=&quot;System.Web.DynamicData.DynamicField&quot;></xref>適用於格式化處於編輯模式，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.DynamicData.DynamicField.ApplyFormatInEditMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.Column
  id: Column
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: Column
  nameWithType: DynamicField.Column
  fullName: System.Web.DynamicData.DynamicField.Column
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "取得<xref href=&quot;System.Web.DynamicData.MetaColumn&quot;></xref>物件這個<xref href=&quot;System.Web.DynamicData.DynamicField&quot;></xref>物件相關聯。"
  syntax:
    content: protected System.Web.DynamicData.MetaColumn Column { get; }
    return:
      type: System.Web.DynamicData.MetaColumn
      description: "中繼資料行中。"
  overload: System.Web.DynamicData.DynamicField.Column*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.ConfigureDynamicControl(System.Web.DynamicData.DynamicControl)
  id: ConfigureDynamicControl(System.Web.DynamicData.DynamicControl)
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: ConfigureDynamicControl(DynamicControl)
  nameWithType: DynamicField.ConfigureDynamicControl(DynamicControl)
  fullName: System.Web.DynamicData.DynamicField.ConfigureDynamicControl(DynamicControl)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "提供一個機制來修改<xref href=&quot;System.Web.DynamicData.DynamicControl&quot;></xref>所建立的物件<xref:System.Web.DynamicData.DynamicField.InitializeCell*>方法。</xref:System.Web.DynamicData.DynamicField.InitializeCell*>"
  syntax:
    content: protected virtual void ConfigureDynamicControl (System.Web.DynamicData.DynamicControl control);
    parameters:
    - id: control
      type: System.Web.DynamicData.DynamicControl
      description: "要修改的控制項。"
  overload: System.Web.DynamicData.DynamicField.ConfigureDynamicControl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.ConvertEmptyStringToNull
  id: ConvertEmptyStringToNull
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: ConvertEmptyStringToNull
  nameWithType: DynamicField.ConvertEmptyStringToNull
  fullName: System.Web.DynamicData.DynamicField.ConvertEmptyStringToNull
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "取得或設定值，指出是否將空字串值 (&quot;&quot;) 自動轉換為 null 值的資料來源中更新資料欄位時。"
  remarks: "有時候使用者可能會為欄位值，更新或插入資料錄時輸入空字串。 若要指定是否為空字串值會自動轉換為 null 的資料來源中更新資料欄位時，使用 ConvertEmptyStringToNull 屬性。       根據預設，<xref:System.Web.DynamicData.DynamicField>物件顯示 null 值為空字串。</xref:System.Web.DynamicData.DynamicField> 若要顯示不同的值，設定<xref:System.Web.DynamicData.DynamicField.NullDisplayText%2A>屬性。</xref:System.Web.DynamicData.DynamicField.NullDisplayText%2A>      > [!NOTE] ><xref:System.Web.UI.WebControls.Parameter>物件的資料來源控制項的父控制項的<xref:System.Web.DynamicData.DynamicField>物件會繫結至也有一個名為<xref:System.Web.UI.WebControls.Parameter.ConvertEmptyStringToNull%2A?displayProperty=fullName>.</xref:System.Web.UI.WebControls.Parameter.ConvertEmptyStringToNull%2A?displayProperty=fullName>屬性</xref:System.Web.DynamicData.DynamicField></xref:System.Web.UI.WebControls.Parameter> 這個屬性會執行相同的函式。 請確定這兩個屬性會適當地設定。"
  syntax:
    content: public bool ConvertEmptyStringToNull { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要自動將空字串值轉換成 null 值;否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.DynamicData.DynamicField.ConvertEmptyStringToNull*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.CopyProperties(System.Web.UI.WebControls.DataControlField)
  id: CopyProperties(System.Web.UI.WebControls.DataControlField)
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: CopyProperties(DataControlField)
  nameWithType: DynamicField.CopyProperties(DataControlField)
  fullName: System.Web.DynamicData.DynamicField.CopyProperties(DataControlField)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "將目前的屬性複製<xref href=&quot;System.Web.DynamicData.DynamicField&quot;></xref>到指定的物件<xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;></xref>物件。"
  remarks: "CopyProperties 方法是 helper 方法。 它由<xref:System.Web.UI.WebControls.DataControlField.CloneField%2A>方法來複製目前的內容<xref:System.Web.DynamicData.DynamicField>物件<xref:System.Web.DynamicData.DynamicField>物件傳入`newField`參數。</xref:System.Web.DynamicData.DynamicField> </xref:System.Web.DynamicData.DynamicField> </xref:System.Web.UI.WebControls.DataControlField.CloneField%2A>"
  syntax:
    content: protected override void CopyProperties (System.Web.UI.WebControls.DataControlField newField);
    parameters:
    - id: newField
      type: System.Web.UI.WebControls.DataControlField
      description: "<xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref>來複製目前的內容<xref href=&quot;System.Web.DynamicData.DynamicField&quot;></xref>至。"
  overload: System.Web.DynamicData.DynamicField.CopyProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.CreateDynamicControl
  id: CreateDynamicControl
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: CreateDynamicControl()
  nameWithType: DynamicField.CreateDynamicControl()
  fullName: System.Web.DynamicData.DynamicField.CreateDynamicControl()
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "提供一個機制，衍生自的<xref href=&quot;System.Web.DynamicData.DynamicField&quot;></xref>覆寫如何<xref href=&quot;System.Web.DynamicData.DynamicControl&quot;></xref>建立物件。"
  syntax:
    content: protected virtual System.Web.DynamicData.DynamicControl CreateDynamicControl ();
    parameters: []
    return:
      type: System.Web.DynamicData.DynamicControl
      description: "新的動態控制項。"
  overload: System.Web.DynamicData.DynamicField.CreateDynamicControl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.CreateField
  id: CreateField
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: CreateField()
  nameWithType: DynamicField.CreateField()
  fullName: System.Web.DynamicData.DynamicField.CreateField()
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "建立並傳回的新執行個體<xref href=&quot;System.Web.DynamicData.DynamicField&quot;></xref>類別。"
  remarks: "CreateField 方法是 helper 方法。 它由<xref:System.Web.UI.WebControls.DataControlField.CloneField%2A>方法來建立空白<xref:System.Web.DynamicData.DynamicField>物件。</xref:System.Web.DynamicData.DynamicField> </xref:System.Web.UI.WebControls.DataControlField.CloneField%2A>"
  syntax:
    content: protected override System.Web.UI.WebControls.DataControlField CreateField ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.DataControlField
      description: "新執行個體<xref href=&quot;System.Web.DynamicData.DynamicField&quot;></xref>類別。"
  overload: System.Web.DynamicData.DynamicField.CreateField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.DataField
  id: DataField
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: DataField
  nameWithType: DynamicField.DataField
  fullName: System.Web.DynamicData.DynamicField.DataField
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "取得或設定要繫結的資料欄位的名稱<xref href=&quot;System.Web.DynamicData.DynamicField&quot;></xref>物件。"
  remarks: "使用 DataField 屬性來指定資料欄位繫結至<xref:System.Web.DynamicData.DynamicField>物件。</xref:System.Web.DynamicData.DynamicField> 資料欄位可以是資料行名稱，或在外部索引鍵資料行，此關聯性名稱。       根據預設，指定的資料欄位會顯示由<xref:System.Web.DynamicData.DynamicField>物件使用的欄位資料型別相關聯的欄位樣板。</xref:System.Web.DynamicData.DynamicField> 您可以變更設定呈現資料欄位的欄位樣板<xref:System.Web.DynamicData.DynamicField.UIHint%2A>屬性。</xref:System.Web.DynamicData.DynamicField.UIHint%2A> 您也可以藉由設定格式化顯示的文字<xref:System.Web.DynamicData.DynamicField.DataFormatString%2A>屬性。</xref:System.Web.DynamicData.DynamicField.DataFormatString%2A> 如果欄位值為`null`，空字串 (&quot;&quot;) 會顯示預設值。 若要指定替代的標題，請設定<xref:System.Web.DynamicData.DynamicField.NullDisplayText%2A>屬性。</xref:System.Web.DynamicData.DynamicField.NullDisplayText%2A>       **請注意**如果您想要變更全域的顯示和行為的資料欄位，您必須將屬性套用至您的資料模型，而不是將此設定中的特定執行個體<xref:System.Web.DynamicData.DynamicField>物件。</xref:System.Web.DynamicData.DynamicField> 如需詳細資訊，請參閱[ASP.NET Dynamic Data](~/add/includes/ajax-current-ext-md.md)。       <xref:System.Web.UI.WebControls.DataControlField.OnFieldChanged%2A>呼叫方法來引發 DataField 屬性設定時的狀態變更事件。</xref:System.Web.UI.WebControls.DataControlField.OnFieldChanged%2A>       DataField 屬性的值儲存在檢視狀態。"
  syntax:
    content: public virtual string DataField { get; set; }
    return:
      type: System.String
      description: "資料的名稱欄位<xref href=&quot;System.Web.DynamicData.DynamicField&quot;></xref>物件繫結至。"
  overload: System.Web.DynamicData.DynamicField.DataField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.DataFormatString
  id: DataFormatString
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: DataFormatString
  nameWithType: DynamicField.DataFormatString
  fullName: System.Web.DynamicData.DynamicField.DataFormatString
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "取得或設定字串，指定資料欄位的值的顯示格式。"
  remarks: "使用 DataFormatString 屬性來指定自訂的顯示格式的顯示值<xref:System.Web.DynamicData.DynamicField>物件。</xref:System.Web.DynamicData.DynamicField> 如果 DataFormatString 屬性未設定，將欄位值會顯示不含任何特殊的格式。       根據預設，格式字串套用至該欄位值，其中包含資料繫結控制項時，才<xref:System.Web.DynamicData.DynamicField>物件處於唯讀模式。</xref:System.Web.DynamicData.DynamicField> 若要將格式字串套用至欄位值，在編輯模式中，設定<xref:System.Web.DynamicData.DynamicField.ApplyFormatInEditMode%2A>屬性`true`。</xref:System.Web.DynamicData.DynamicField.ApplyFormatInEditMode%2A>       您指定使用 DataFormatString 屬性的顯示格式為特定執行個體的<xref:System.Web.DynamicData.DynamicField>類別。</xref:System.Web.DynamicData.DynamicField> 您也可以變更橫跨整個應用程式資料欄位的顯示格式，藉由套用<xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute>您的資料模型和設定<xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString%2A?displayProperty=fullName>名為建構函式中的參數。</xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString%2A?displayProperty=fullName> </xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> 如需詳細資訊，請參閱[ASP.NET Dynamic Data](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public string DataFormatString { get; set; }
    return:
      type: System.String
      description: "格式化字串，指定資料欄位的值的顯示格式。 預設為空字串 (&quot;&quot;)，表示未將特殊格式未套用的值。"
  overload: System.Web.DynamicData.DynamicField.DataFormatString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)
  id: ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
  nameWithType: DynamicField.ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
  fullName: System.Web.DynamicData.DynamicField.ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "擷取目前的資料表資料格的資料欄位的值，並將值加入至指定的字典。"
  syntax:
    content: public override void ExtractValuesFromCell (System.Collections.Specialized.IOrderedDictionary dictionary, System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlRowState rowState, bool includeReadOnly);
    parameters:
    - id: dictionary
      type: System.Collections.Specialized.IOrderedDictionary
      description: "字典，以便保存資料格的值。"
    - id: cell
      type: System.Web.UI.WebControls.DataControlFieldCell
      description: "包含文字或控制項的資料格<xref href=&quot;System.Web.DynamicData.DynamicField&quot;></xref>物件。"
    - id: rowState
      type: System.Web.UI.WebControls.DataControlRowState
      description: "其中一個列舉值，指定資料列狀態。"
    - id: includeReadOnly
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>要包含在唯讀欄位的值`dictionary`，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.DynamicData.DynamicField.ExtractValuesFromCell*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.GetAttribute(System.String)
  id: GetAttribute(System.String)
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: GetAttribute(String)
  nameWithType: DynamicField.GetAttribute(String)
  fullName: System.Web.DynamicData.DynamicField.GetAttribute(String)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "擷取指定的屬性值。"
  syntax:
    content: public string GetAttribute (string key);
    parameters:
    - id: key
      type: System.String
      description: "要取得的屬性索引鍵。"
    return:
      type: System.String
      description: "屬性的值。"
  overload: System.Web.DynamicData.DynamicField.GetAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.HeaderText
  id: HeaderText
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: HeaderText
  nameWithType: DynamicField.HeaderText
  fullName: System.Web.DynamicData.DynamicField.HeaderText
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "取得或設定顯示的標頭包含的資料繫結控制項中的文字<xref href=&quot;System.Web.DynamicData.DynamicField&quot;></xref>物件。"
  remarks: "使用 HeaderText 屬性來識別資料繫結控制項中的欄位易記名稱。 HeaderText 屬性的最常見的應用程式會提供有意義的資料行名稱中的資料欄位<xref:System.Web.UI.WebControls.GridView>或<xref:System.Web.UI.WebControls.DetailsView>控制項。</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView>       根據預設，頁首會使用透過設定資料欄位的顯示名稱<xref:System.ComponentModel.DisplayNameAttribute>屬性。</xref:System.ComponentModel.DisplayNameAttribute> 如果未設定的顯示名稱，頁首會使用值<xref:System.Web.DynamicData.DynamicField.DataField%2A>屬性。</xref:System.Web.DynamicData.DynamicField.DataField%2A>"
  syntax:
    content: public override string HeaderText { get; set; }
    return:
      type: System.String
      description: "顯示包含的資料繫結控制項的標頭中的文字<xref href=&quot;System.Web.DynamicData.DynamicField&quot;></xref>物件。"
  overload: System.Web.DynamicData.DynamicField.HeaderText*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref href=&quot;System.Web.DynamicData.DynamicField&quot;> </xref>物件是在未繫結至資料來源控制項實作資料繫結控制項內<xref href=&quot;System.Web.DynamicData.IDynamicDataSource&quot;></xref>介面。"
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.HtmlEncode
  id: HtmlEncode
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: HtmlEncode
  nameWithType: DynamicField.HtmlEncode
  fullName: System.Web.DynamicData.DynamicField.HtmlEncode
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "取得或設定值，指出資料欄位值是否為 HTML 編碼才能顯示在<xref href=&quot;System.Web.DynamicData.DynamicField&quot;></xref>物件。"
  remarks: "若要指定欄位值是否為 HTML 編碼成其個別的字串表示法顯示之前使用 HtmlEncode 屬性。      > [!NOTE] > HTML 編碼的欄位值可協助防止跨網站指令碼的攻擊和惡意的內容不會再顯示。 可能的話，應該啟用這個屬性。 如需詳細資訊，請參閱[指令碼擅用概觀](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public bool HtmlEncode { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果欄位值經過 HTML 編碼，才能顯示。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.DynamicData.DynamicField.HtmlEncode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  id: InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  nameWithType: DynamicField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  fullName: System.Web.DynamicData.DynamicField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "將文字或控制項加入指定的儲存格。"
  syntax:
    content: public override void InitializeCell (System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlCellType cellType, System.Web.UI.WebControls.DataControlRowState rowState, int rowIndex);
    parameters:
    - id: cell
      type: System.Web.UI.WebControls.DataControlFieldCell
      description: "物件，其中包含文字或控制項的<xref href=&quot;System.Web.DynamicData.DynamicField&quot;></xref>物件。"
    - id: cellType
      type: System.Web.UI.WebControls.DataControlCellType
      description: "其中一個列舉值，指定的函式`cell`物件。"
    - id: rowState
      type: System.Web.UI.WebControls.DataControlRowState
      description: "其中一個列舉值，指定資料列狀態。"
    - id: rowIndex
      type: System.Int32
      description: "資料列的索引，`cell`中包含物件。"
  overload: System.Web.DynamicData.DynamicField.InitializeCell*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.NullDisplayText
  id: NullDisplayText
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: NullDisplayText
  nameWithType: DynamicField.NullDisplayText
  fullName: System.Web.DynamicData.DynamicField.NullDisplayText
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "取得或設定欄位值時，會將資料欄位顯示的標題<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  remarks: "有時欄位值會儲存為 null 的資料來源中。 您可以指定自訂設定 NullDisplayText 屬性有 null 值的資料欄位的顯示標題。 如果未設定這個屬性，null 的欄位值顯示為空字串 (&quot;&quot;)。"
  syntax:
    content: public string NullDisplayText { get; set; }
    return:
      type: System.String
      description: "欄位值時，會將資料欄位顯示的標題<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。 預設為空字串 (&quot;&quot;)，表示這個屬性未設定。"
  overload: System.Web.DynamicData.DynamicField.NullDisplayText*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.ReadOnly
  id: ReadOnly
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: ReadOnly
  nameWithType: DynamicField.ReadOnly
  fullName: System.Web.DynamicData.DynamicField.ReadOnly
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "取得動態欄位的唯讀狀態。"
  remarks: "ReadOnly 屬性是否`true`、<xref:System.Web.DynamicData.DynamicField>控制項載入唯讀範本。</xref:System.Web.DynamicData.DynamicField> 這個屬性需要啟用檢視狀態。"
  syntax:
    content: public virtual bool ReadOnly { get; set; }
    return:
      type: System.Boolean
      description: "動態欄位的唯讀狀態。"
  overload: System.Web.DynamicData.DynamicField.ReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.SetAttribute(System.String,System.String)
  id: SetAttribute(System.String,System.String)
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: SetAttribute(String,String)
  nameWithType: DynamicField.SetAttribute(String,String)
  fullName: System.Web.DynamicData.DynamicField.SetAttribute(String,String)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "設定屬性相關聯<xref href=&quot;System.Web.DynamicData.DynamicField&quot;></xref>物件。"
  syntax:
    content: public void SetAttribute (string key, string value);
    parameters:
    - id: key
      type: System.String
      description: "要設定之屬性的名稱。"
    - id: value
      type: System.String
      description: "屬性值。"
  overload: System.Web.DynamicData.DynamicField.SetAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.SortExpression
  id: SortExpression
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: SortExpression
  nameWithType: DynamicField.SortExpression
  fullName: System.Web.DynamicData.DynamicField.SortExpression
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "取得或設定當使用資料欄位來排序的資料來源所使用的排序運算式。"
  remarks: "SortExpression 屬性便會嘗試使用的值<xref:System.Web.DynamicData.MetaColumn.SortExpression%2A?displayProperty=fullName>物件相關聯的資料行屬性<xref:System.Web.DynamicData.DynamicField>物件藉由設定<xref:System.Web.DynamicData.DynamicField.DataField%2A>屬性。</xref:System.Web.DynamicData.DynamicField.DataField%2A> </xref:System.Web.DynamicData.DynamicField> </xref:System.Web.DynamicData.MetaColumn.SortExpression%2A?displayProperty=fullName>       <xref:System.Web.UI.WebControls.DataControlField.OnFieldChanged%2A>呼叫方法來引發 SortExpression 屬性設定時的狀態變更事件。</xref:System.Web.UI.WebControls.DataControlField.OnFieldChanged%2A>       SortExpression 屬性的值儲存在檢視狀態。"
  syntax:
    content: public override string SortExpression { get; set; }
    return:
      type: System.String
      description: "當資料欄位來排序的資料來源所使用的排序運算式。"
  overload: System.Web.DynamicData.DynamicField.SortExpression*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref href=&quot;System.Web.DynamicData.DynamicField&quot;> </xref>物件是在未繫結至資料來源控制項實作資料繫結控制項內<xref href=&quot;System.Web.DynamicData.IDynamicDataSource&quot;></xref>介面。"
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.UIHint
  id: UIHint
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: UIHint
  nameWithType: DynamicField.UIHint
  fullName: System.Web.DynamicData.DynamicField.UIHint
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "取得或設定要用來顯示資料欄位的欄位樣板。"
  remarks: "使用 UIHint 屬性來指定要用來顯示資料欄位的使用者介面的欄位樣板。 預設的欄位樣板是使用者控制項，而且其名稱包含識別欄位的範本，可用於編輯作業和插入作業的後置詞。 尾碼會分別為 （_e） 和 （_i）。 當您將值設 UIHint 屬性時，您可以設定沒有後置字元的名稱。 動態資料會識別目前的資料欄位的模式，然後將會呈現正確的欄位樣板。       如果未設定 UIHint 屬性，動態資料依預設會轉譯根據欄位類型的欄位樣板。 如需詳細資訊，請參閱[ASP.NET 動態資料 Scaffolding](~/add/includes/ajax-current-ext-md.md)。       您指定使用 UIHint 屬性的欄位樣板是類別的特定執行個體<xref:System.Web.DynamicData.DynamicField>類別。</xref:System.Web.DynamicData.DynamicField> 您也可以變更使用橫跨整個應用程式藉由套用資料欄位的欄位樣板<xref:System.ComponentModel.DataAnnotations.UIHintAttribute>資料模型。</xref:System.ComponentModel.DataAnnotations.UIHintAttribute> UIHint 屬性設定會覆寫套用至資料模型的中繼資料。 如需中繼資料屬性的詳細資訊，請參閱[ASP.NET Dynamic Data](~/add/includes/ajax-current-ext-md.md)。       <xref:System.Web.UI.WebControls.DataControlField.OnFieldChanged%2A>呼叫方法來引發 UIHint 屬性設定時的狀態變更事件。</xref:System.Web.UI.WebControls.DataControlField.OnFieldChanged%2A>       值的屬性是 UIHint 在檢視中儲存狀態。"
  syntax:
    content: public virtual string UIHint { get; set; }
    return:
      type: System.String
      description: "用來顯示資料欄位的欄位樣板名稱。"
  overload: System.Web.DynamicData.DynamicField.UIHint*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.ValidateRequestMode
  id: ValidateRequestMode
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: ValidateRequestMode
  nameWithType: DynamicField.ValidateRequestMode
  fullName: System.Web.DynamicData.DynamicField.ValidateRequestMode
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "取得或設定值，指定控制項是否會驗證用戶端輸入。"
  syntax:
    content: public System.Web.UI.ValidateRequestMode ValidateRequestMode { get; set; }
    return:
      type: System.Web.UI.ValidateRequestMode
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果控制項驗證用戶端輸入。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.DynamicData.DynamicField.ValidateRequestMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.ValidationGroup
  id: ValidationGroup
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: ValidationGroup
  nameWithType: DynamicField.ValidationGroup
  fullName: System.Web.DynamicData.DynamicField.ValidationGroup
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "取得<xref:System.Web.DynamicData.DynamicControl.ValidationGroup*>物件這個<xref href=&quot;System.Web.DynamicData.DynamicField&quot;></xref>物件相關聯。</xref:System.Web.DynamicData.DynamicControl.ValidationGroup*>"
  syntax:
    content: public virtual string ValidationGroup { get; set; }
    return:
      type: System.String
      description: "這個驗證控制項所屬的驗證群組名稱。 預設為空字串 (&quot;&quot;)，表示這個屬性未設定。"
  overload: System.Web.DynamicData.DynamicField.ValidationGroup*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: System.Web.UI.WebControls.DataControlField
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Web.DynamicData.DynamicField.#ctor
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: DynamicField()
  nameWithType: DynamicField.DynamicField()
  fullName: System.Web.DynamicData.DynamicField.DynamicField()
- uid: System.Web.DynamicData.DynamicField.ApplyFormatInEditMode
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: ApplyFormatInEditMode
  nameWithType: DynamicField.ApplyFormatInEditMode
  fullName: System.Web.DynamicData.DynamicField.ApplyFormatInEditMode
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.DynamicData.DynamicField.Column
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: Column
  nameWithType: DynamicField.Column
  fullName: System.Web.DynamicData.DynamicField.Column
- uid: System.Web.DynamicData.MetaColumn
  parent: System.Web.DynamicData
  isExternal: false
  name: MetaColumn
  nameWithType: MetaColumn
  fullName: System.Web.DynamicData.MetaColumn
- uid: System.Web.DynamicData.DynamicField.ConfigureDynamicControl(System.Web.DynamicData.DynamicControl)
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: ConfigureDynamicControl(DynamicControl)
  nameWithType: DynamicField.ConfigureDynamicControl(DynamicControl)
  fullName: System.Web.DynamicData.DynamicField.ConfigureDynamicControl(DynamicControl)
- uid: System.Web.DynamicData.DynamicControl
  parent: System.Web.DynamicData
  isExternal: false
  name: DynamicControl
  nameWithType: DynamicControl
  fullName: System.Web.DynamicData.DynamicControl
- uid: System.Web.DynamicData.DynamicField.ConvertEmptyStringToNull
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: ConvertEmptyStringToNull
  nameWithType: DynamicField.ConvertEmptyStringToNull
  fullName: System.Web.DynamicData.DynamicField.ConvertEmptyStringToNull
- uid: System.Web.DynamicData.DynamicField.CopyProperties(System.Web.UI.WebControls.DataControlField)
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: CopyProperties(DataControlField)
  nameWithType: DynamicField.CopyProperties(DataControlField)
  fullName: System.Web.DynamicData.DynamicField.CopyProperties(DataControlField)
- uid: System.Web.DynamicData.DynamicField.CreateDynamicControl
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: CreateDynamicControl()
  nameWithType: DynamicField.CreateDynamicControl()
  fullName: System.Web.DynamicData.DynamicField.CreateDynamicControl()
- uid: System.Web.DynamicData.DynamicField.CreateField
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: CreateField()
  nameWithType: DynamicField.CreateField()
  fullName: System.Web.DynamicData.DynamicField.CreateField()
- uid: System.Web.DynamicData.DynamicField.DataField
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: DataField
  nameWithType: DynamicField.DataField
  fullName: System.Web.DynamicData.DynamicField.DataField
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.DynamicData.DynamicField.DataFormatString
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: DataFormatString
  nameWithType: DynamicField.DataFormatString
  fullName: System.Web.DynamicData.DynamicField.DataFormatString
- uid: System.Web.DynamicData.DynamicField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
  nameWithType: DynamicField.ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
  fullName: System.Web.DynamicData.DynamicField.ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
- uid: System.Collections.Specialized.IOrderedDictionary
  parent: System.Collections.Specialized
  isExternal: false
  name: IOrderedDictionary
  nameWithType: IOrderedDictionary
  fullName: System.Collections.Specialized.IOrderedDictionary
- uid: System.Web.UI.WebControls.DataControlFieldCell
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlFieldCell
  nameWithType: DataControlFieldCell
  fullName: System.Web.UI.WebControls.DataControlFieldCell
- uid: System.Web.UI.WebControls.DataControlRowState
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlRowState
  nameWithType: DataControlRowState
  fullName: System.Web.UI.WebControls.DataControlRowState
- uid: System.Web.DynamicData.DynamicField.GetAttribute(System.String)
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: GetAttribute(String)
  nameWithType: DynamicField.GetAttribute(String)
  fullName: System.Web.DynamicData.DynamicField.GetAttribute(String)
- uid: System.Web.DynamicData.DynamicField.HeaderText
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: HeaderText
  nameWithType: DynamicField.HeaderText
  fullName: System.Web.DynamicData.DynamicField.HeaderText
- uid: System.Web.DynamicData.DynamicField.HtmlEncode
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: HtmlEncode
  nameWithType: DynamicField.HtmlEncode
  fullName: System.Web.DynamicData.DynamicField.HtmlEncode
- uid: System.Web.DynamicData.DynamicField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  nameWithType: DynamicField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  fullName: System.Web.DynamicData.DynamicField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
- uid: System.Web.UI.WebControls.DataControlCellType
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlCellType
  nameWithType: DataControlCellType
  fullName: System.Web.UI.WebControls.DataControlCellType
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.DynamicData.DynamicField.NullDisplayText
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: NullDisplayText
  nameWithType: DynamicField.NullDisplayText
  fullName: System.Web.DynamicData.DynamicField.NullDisplayText
- uid: System.Web.DynamicData.DynamicField.ReadOnly
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: ReadOnly
  nameWithType: DynamicField.ReadOnly
  fullName: System.Web.DynamicData.DynamicField.ReadOnly
- uid: System.Web.DynamicData.DynamicField.SetAttribute(System.String,System.String)
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: SetAttribute(String,String)
  nameWithType: DynamicField.SetAttribute(String,String)
  fullName: System.Web.DynamicData.DynamicField.SetAttribute(String,String)
- uid: System.Web.DynamicData.DynamicField.SortExpression
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: SortExpression
  nameWithType: DynamicField.SortExpression
  fullName: System.Web.DynamicData.DynamicField.SortExpression
- uid: System.Web.DynamicData.DynamicField.UIHint
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: UIHint
  nameWithType: DynamicField.UIHint
  fullName: System.Web.DynamicData.DynamicField.UIHint
- uid: System.Web.DynamicData.DynamicField.ValidateRequestMode
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: ValidateRequestMode
  nameWithType: DynamicField.ValidateRequestMode
  fullName: System.Web.DynamicData.DynamicField.ValidateRequestMode
- uid: System.Web.UI.ValidateRequestMode
  parent: System.Web.UI
  isExternal: false
  name: ValidateRequestMode
  nameWithType: ValidateRequestMode
  fullName: System.Web.UI.ValidateRequestMode
- uid: System.Web.DynamicData.DynamicField.ValidationGroup
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: ValidationGroup
  nameWithType: DynamicField.ValidationGroup
  fullName: System.Web.DynamicData.DynamicField.ValidationGroup
- uid: System.Web.DynamicData.DynamicField.#ctor*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: DynamicField
  nameWithType: DynamicField.DynamicField
- uid: System.Web.DynamicData.DynamicField.ApplyFormatInEditMode*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: ApplyFormatInEditMode
  nameWithType: DynamicField.ApplyFormatInEditMode
- uid: System.Web.DynamicData.DynamicField.Column*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: Column
  nameWithType: DynamicField.Column
- uid: System.Web.DynamicData.DynamicField.ConfigureDynamicControl*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: ConfigureDynamicControl
  nameWithType: DynamicField.ConfigureDynamicControl
- uid: System.Web.DynamicData.DynamicField.ConvertEmptyStringToNull*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: ConvertEmptyStringToNull
  nameWithType: DynamicField.ConvertEmptyStringToNull
- uid: System.Web.DynamicData.DynamicField.CopyProperties*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: CopyProperties
  nameWithType: DynamicField.CopyProperties
- uid: System.Web.DynamicData.DynamicField.CreateDynamicControl*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: CreateDynamicControl
  nameWithType: DynamicField.CreateDynamicControl
- uid: System.Web.DynamicData.DynamicField.CreateField*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: CreateField
  nameWithType: DynamicField.CreateField
- uid: System.Web.DynamicData.DynamicField.DataField*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: DataField
  nameWithType: DynamicField.DataField
- uid: System.Web.DynamicData.DynamicField.DataFormatString*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: DataFormatString
  nameWithType: DynamicField.DataFormatString
- uid: System.Web.DynamicData.DynamicField.ExtractValuesFromCell*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: ExtractValuesFromCell
  nameWithType: DynamicField.ExtractValuesFromCell
- uid: System.Web.DynamicData.DynamicField.GetAttribute*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: GetAttribute
  nameWithType: DynamicField.GetAttribute
- uid: System.Web.DynamicData.DynamicField.HeaderText*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: HeaderText
  nameWithType: DynamicField.HeaderText
- uid: System.Web.DynamicData.DynamicField.HtmlEncode*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: HtmlEncode
  nameWithType: DynamicField.HtmlEncode
- uid: System.Web.DynamicData.DynamicField.InitializeCell*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: InitializeCell
  nameWithType: DynamicField.InitializeCell
- uid: System.Web.DynamicData.DynamicField.NullDisplayText*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: NullDisplayText
  nameWithType: DynamicField.NullDisplayText
- uid: System.Web.DynamicData.DynamicField.ReadOnly*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: ReadOnly
  nameWithType: DynamicField.ReadOnly
- uid: System.Web.DynamicData.DynamicField.SetAttribute*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: SetAttribute
  nameWithType: DynamicField.SetAttribute
- uid: System.Web.DynamicData.DynamicField.SortExpression*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: SortExpression
  nameWithType: DynamicField.SortExpression
- uid: System.Web.DynamicData.DynamicField.UIHint*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: UIHint
  nameWithType: DynamicField.UIHint
- uid: System.Web.DynamicData.DynamicField.ValidateRequestMode*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: ValidateRequestMode
  nameWithType: DynamicField.ValidateRequestMode
- uid: System.Web.DynamicData.DynamicField.ValidationGroup*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: ValidationGroup
  nameWithType: DynamicField.ValidationGroup
