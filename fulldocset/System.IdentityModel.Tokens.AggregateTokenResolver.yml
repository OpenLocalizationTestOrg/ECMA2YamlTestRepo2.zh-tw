### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Tokens.AggregateTokenResolver
  id: AggregateTokenResolver
  children:
  - System.IdentityModel.Tokens.AggregateTokenResolver.#ctor(System.Collections.Generic.IEnumerable{System.IdentityModel.Selectors.SecurityTokenResolver})
  - System.IdentityModel.Tokens.AggregateTokenResolver.TokenResolvers
  - System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveSecurityKeyCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)
  - System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)
  - System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)
  langs:
  - csharp
  name: AggregateTokenResolver
  nameWithType: AggregateTokenResolver
  fullName: System.IdentityModel.Tokens.AggregateTokenResolver
  type: Class
  summary: "表示安全性權杖解析程式可以換行的多個語彙基元解析程式，並在所有已包裝的解析程式需要解決語彙基元。"
  remarks: "A<xref:System.IdentityModel.Selectors.SecurityTokenResolver>物件都代表一個公用程式類別，可擷取安全性權杖或金鑰時，您有金鑰識別碼或金鑰識別碼子句。</xref:System.IdentityModel.Selectors.SecurityTokenResolver> AggregateTokenResolver 會包裝數個<xref:System.IdentityModel.Selectors.SecurityTokenResolver>物件。</xref:System.IdentityModel.Selectors.SecurityTokenResolver> 建構函式中指定要包裝的語彙基元解析程式。 <xref:System.IdentityModel.Tokens.AggregateTokenResolver.TokenResolvers%2A>屬性傳回的集合會彙總的解析程式所包裝的語彙基元解析程式。</xref:System.IdentityModel.Tokens.AggregateTokenResolver.TokenResolvers%2A>"
  syntax:
    content: 'public class AggregateTokenResolver : System.IdentityModel.Selectors.SecurityTokenResolver'
  inheritance:
  - System.Object
  - System.IdentityModel.Selectors.SecurityTokenResolver
  implements: []
  inheritedMembers:
  - System.IdentityModel.Selectors.SecurityTokenResolver.CreateDefaultSecurityTokenResolver(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Tokens.SecurityToken},System.Boolean)
  - System.IdentityModel.Selectors.SecurityTokenResolver.LoadCustomConfiguration(System.Xml.XmlNodeList)
  - System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  - System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifier)
  - System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  - System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)
  - System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)
  - System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)
  platform:
  - net462
- uid: System.IdentityModel.Tokens.AggregateTokenResolver.#ctor(System.Collections.Generic.IEnumerable{System.IdentityModel.Selectors.SecurityTokenResolver})
  id: '#ctor(System.Collections.Generic.IEnumerable{System.IdentityModel.Selectors.SecurityTokenResolver})'
  parent: System.IdentityModel.Tokens.AggregateTokenResolver
  langs:
  - csharp
  name: AggregateTokenResolver(IEnumerable<SecurityTokenResolver>)
  nameWithType: AggregateTokenResolver.AggregateTokenResolver(IEnumerable<SecurityTokenResolver>)
  fullName: System.IdentityModel.Tokens.AggregateTokenResolver.AggregateTokenResolver(IEnumerable<SecurityTokenResolver>)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "初始化的新執行個體<xref href=&quot;System.IdentityModel.Tokens.AggregateTokenResolver&quot;></xref>類別使用指定的語彙基元解析程式的清單。"
  remarks: "<xref:System.IdentityModel.Tokens.AggregateTokenResolver.TokenResolvers%2A>屬性會初始化與指定語彙基元解析程式的清單。</xref:System.IdentityModel.Tokens.AggregateTokenResolver.TokenResolvers%2A>"
  syntax:
    content: public AggregateTokenResolver (System.Collections.Generic.IEnumerable<System.IdentityModel.Selectors.SecurityTokenResolver> tokenResolvers);
    parameters:
    - id: tokenResolvers
      type: System.Collections.Generic.IEnumerable{System.IdentityModel.Selectors.SecurityTokenResolver}
      description: "安全性權杖解析程式這個執行個體所要包裝的清單。"
  overload: System.IdentityModel.Tokens.AggregateTokenResolver.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>tokenResolvers</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.AggregateTokenResolver.TokenResolvers
  id: TokenResolvers
  parent: System.IdentityModel.Tokens.AggregateTokenResolver
  langs:
  - csharp
  name: TokenResolvers
  nameWithType: AggregateTokenResolver.TokenResolvers
  fullName: System.IdentityModel.Tokens.AggregateTokenResolver.TokenResolvers
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "取得安全性權杖解析程式包裝由這個執行個體。"
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Selectors.SecurityTokenResolver> TokenResolvers { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Selectors.SecurityTokenResolver}
      description: "唯讀集合，其中包含這個執行個體所包裝語彙基元解析程式。"
  overload: System.IdentityModel.Tokens.AggregateTokenResolver.TokenResolvers*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveSecurityKeyCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)
  id: TryResolveSecurityKeyCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)
  parent: System.IdentityModel.Tokens.AggregateTokenResolver
  langs:
  - csharp
  name: TryResolveSecurityKeyCore(SecurityKeyIdentifierClause,SecurityKey)
  nameWithType: AggregateTokenResolver.TryResolveSecurityKeyCore(SecurityKeyIdentifierClause,SecurityKey)
  fullName: System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveSecurityKeyCore(SecurityKeyIdentifierClause,SecurityKey)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "嘗試擷取在指定的金鑰識別碼子句中參考的索引鍵。"
  remarks: "TryResolveSecurityKeyCore 方法由呼叫<xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey%2A>和<xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey%2A>方法。</xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey%2A> </xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey%2A>"
  syntax:
    content: protected override bool TryResolveSecurityKeyCore (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, out System.IdentityModel.Tokens.SecurityKey key);
    parameters:
    - id: keyIdentifierClause
      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
      description: "若要擷取的金鑰在金鑰識別碼子句。"
    - id: key
      type: System.IdentityModel.Tokens.SecurityKey
      description: "此方法傳回時，包含在指定的金鑰識別碼子句中參考的索引鍵。 這個參數未初始化便傳遞。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>當擷取金鑰指定的金鑰識別碼子句。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveSecurityKeyCore*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>keyIdentifierClause</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)
  id: TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)
  parent: System.IdentityModel.Tokens.AggregateTokenResolver
  langs:
  - csharp
  name: TryResolveTokenCore(SecurityKeyIdentifier,SecurityToken)
  nameWithType: AggregateTokenResolver.TryResolveTokenCore(SecurityKeyIdentifier,SecurityToken)
  fullName: System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore(SecurityKeyIdentifier,SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "嘗試擷取安全性權杖符合至少其中一個指定的金鑰識別碼內含的金鑰識別碼子句。"
  remarks: "TryResolveTokenCore 方法由呼叫<xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A>和<xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A>方法。</xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> </xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A>"
  syntax:
    content: protected override bool TryResolveTokenCore (System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier, out System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: keyIdentifier
      type: System.IdentityModel.Tokens.SecurityKeyIdentifier
      description: "若要擷取的語彙基元中的安全性金鑰識別碼。"
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "這個方法傳回時，包含代表指定之金鑰識別碼的權杖。 這個參數未初始化便傳遞。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>當語彙基元可以擷取指定之金鑰識別碼。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>keyIdentifier</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)
  id: TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)
  parent: System.IdentityModel.Tokens.AggregateTokenResolver
  langs:
  - csharp
  name: TryResolveTokenCore(SecurityKeyIdentifierClause,SecurityToken)
  nameWithType: AggregateTokenResolver.TryResolveTokenCore(SecurityKeyIdentifierClause,SecurityToken)
  fullName: System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore(SecurityKeyIdentifierClause,SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "嘗試解析與指定之金鑰識別碼子句相符的安全性權杖。"
  remarks: "TryResolveTokenCore 方法由呼叫<xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A>和<xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A>方法。</xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> </xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A>"
  syntax:
    content: protected override bool TryResolveTokenCore (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, out System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: keyIdentifierClause
      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
      description: "若要建立安全性權杖的金鑰識別碼子句。"
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "這個方法傳回時，包含表示指定之金鑰識別碼子句的安全性權杖。 這個參數未初始化便傳遞。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>當安全性權杖可以擷取指定之金鑰識別碼子句。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>keyIdentifierClause</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.IdentityModel.Selectors.SecurityTokenResolver
  isExternal: false
  name: System.IdentityModel.Selectors.SecurityTokenResolver
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.IdentityModel.Tokens.AggregateTokenResolver.#ctor(System.Collections.Generic.IEnumerable{System.IdentityModel.Selectors.SecurityTokenResolver})
  parent: System.IdentityModel.Tokens.AggregateTokenResolver
  isExternal: false
  name: AggregateTokenResolver(IEnumerable<SecurityTokenResolver>)
  nameWithType: AggregateTokenResolver.AggregateTokenResolver(IEnumerable<SecurityTokenResolver>)
  fullName: System.IdentityModel.Tokens.AggregateTokenResolver.AggregateTokenResolver(IEnumerable<SecurityTokenResolver>)
- uid: System.Collections.Generic.IEnumerable{System.IdentityModel.Selectors.SecurityTokenResolver}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<SecurityTokenResolver>
  nameWithType: IEnumerable<SecurityTokenResolver>
  fullName: System.Collections.Generic.IEnumerable<System.IdentityModel.Selectors.SecurityTokenResolver>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.IdentityModel.Selectors.SecurityTokenResolver>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Selectors.SecurityTokenResolver
    name: SecurityTokenResolver
    nameWithType: SecurityTokenResolver
    fullName: SecurityTokenResolver
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Tokens.AggregateTokenResolver.TokenResolvers
  parent: System.IdentityModel.Tokens.AggregateTokenResolver
  isExternal: false
  name: TokenResolvers
  nameWithType: AggregateTokenResolver.TokenResolvers
  fullName: System.IdentityModel.Tokens.AggregateTokenResolver.TokenResolvers
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Selectors.SecurityTokenResolver}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<SecurityTokenResolver>
  nameWithType: ReadOnlyCollection<SecurityTokenResolver>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Selectors.SecurityTokenResolver>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.IdentityModel.Selectors.SecurityTokenResolver>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Selectors.SecurityTokenResolver
    name: SecurityTokenResolver
    nameWithType: SecurityTokenResolver
    fullName: SecurityTokenResolver
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveSecurityKeyCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)
  parent: System.IdentityModel.Tokens.AggregateTokenResolver
  isExternal: false
  name: TryResolveSecurityKeyCore(SecurityKeyIdentifierClause,SecurityKey)
  nameWithType: AggregateTokenResolver.TryResolveSecurityKeyCore(SecurityKeyIdentifierClause,SecurityKey)
  fullName: System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveSecurityKeyCore(SecurityKeyIdentifierClause,SecurityKey)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKeyIdentifierClause
  nameWithType: SecurityKeyIdentifierClause
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
- uid: System.IdentityModel.Tokens.SecurityKey
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKey
  nameWithType: SecurityKey
  fullName: System.IdentityModel.Tokens.SecurityKey
- uid: System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)
  parent: System.IdentityModel.Tokens.AggregateTokenResolver
  isExternal: false
  name: TryResolveTokenCore(SecurityKeyIdentifier,SecurityToken)
  nameWithType: AggregateTokenResolver.TryResolveTokenCore(SecurityKeyIdentifier,SecurityToken)
  fullName: System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore(SecurityKeyIdentifier,SecurityToken)
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKeyIdentifier
  nameWithType: SecurityKeyIdentifier
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier
- uid: System.IdentityModel.Tokens.SecurityToken
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityToken
  nameWithType: SecurityToken
  fullName: System.IdentityModel.Tokens.SecurityToken
- uid: System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)
  parent: System.IdentityModel.Tokens.AggregateTokenResolver
  isExternal: false
  name: TryResolveTokenCore(SecurityKeyIdentifierClause,SecurityToken)
  nameWithType: AggregateTokenResolver.TryResolveTokenCore(SecurityKeyIdentifierClause,SecurityToken)
  fullName: System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore(SecurityKeyIdentifierClause,SecurityToken)
- uid: System.IdentityModel.Tokens.AggregateTokenResolver.#ctor*
  parent: System.IdentityModel.Tokens.AggregateTokenResolver
  isExternal: false
  name: AggregateTokenResolver
  nameWithType: AggregateTokenResolver.AggregateTokenResolver
- uid: System.IdentityModel.Tokens.AggregateTokenResolver.TokenResolvers*
  parent: System.IdentityModel.Tokens.AggregateTokenResolver
  isExternal: false
  name: TokenResolvers
  nameWithType: AggregateTokenResolver.TokenResolvers
- uid: System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveSecurityKeyCore*
  parent: System.IdentityModel.Tokens.AggregateTokenResolver
  isExternal: false
  name: TryResolveSecurityKeyCore
  nameWithType: AggregateTokenResolver.TryResolveSecurityKeyCore
- uid: System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore*
  parent: System.IdentityModel.Tokens.AggregateTokenResolver
  isExternal: false
  name: TryResolveTokenCore
  nameWithType: AggregateTokenResolver.TryResolveTokenCore
