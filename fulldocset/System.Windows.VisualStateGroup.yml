### YamlMime:ManagedReference
items:
- uid: System.Windows.VisualStateGroup
  id: VisualStateGroup
  children:
  - System.Windows.VisualStateGroup.#ctor
  - System.Windows.VisualStateGroup.CurrentState
  - System.Windows.VisualStateGroup.CurrentStateChanged
  - System.Windows.VisualStateGroup.CurrentStateChanging
  - System.Windows.VisualStateGroup.Name
  - System.Windows.VisualStateGroup.States
  - System.Windows.VisualStateGroup.Transitions
  langs:
  - csharp
  name: VisualStateGroup
  nameWithType: VisualStateGroup
  fullName: System.Windows.VisualStateGroup
  type: Class
  summary: "包含互斥<xref href=&quot;System.Windows.VisualState&quot;></xref>物件和<xref href=&quot;System.Windows.VisualTransition&quot;></xref>用來從某一個狀態移至另一個物件。"
  remarks: "每個 VisualStateGroup 包含的集合<xref:System.Windows.VisualState>物件。</xref:System.Windows.VisualState> A<xref:System.Windows.VisualState>包含的集合<xref:System.Windows.Media.Animation.Storyboard>指定控制項的外觀如何變更當控制項處於特定狀態的物件。</xref:System.Windows.Media.Animation.Storyboard> </xref:System.Windows.VisualState> 例如，<xref:System.Windows.Controls.Button>後未按下時，於按下可能會出現稍有不同的外觀。</xref:System.Windows.Controls.Button> 兩個指出<xref:System.Windows.Controls.Button>定義當按下時，對應到 (`&quot;Pressed&quot;`) 並不是 (`&quot;Normal&quot;`)。</xref:System.Windows.Controls.Button>       您將加入<xref:System.Windows.VisualState>藉由設定控制項`VisualStateManager.VisualStateGroups`附加在控制項上的屬性。</xref:System.Windows.VisualState> 您放置互斥彼此相同 VisualStateGroup 中的狀態。 例如，<xref:System.Windows.Controls.CheckBox>有兩個 VisualStateGroup 物件。</xref:System.Windows.Controls.CheckBox> 其中一個包含狀態， `Normal`， `MouseOver`， `Pressed`，和`Disabled`。 另一個包含狀態， `Checked`， `UnChecked`，和`Indeterminate`。 <xref:System.Windows.Controls.CheckBox>可能處於狀態`MouseOver`和`UnChecked`在相同的時間，但不是能在`MouseOver`和`Pressed`一次的狀態。</xref:System.Windows.Controls.CheckBox>       雖然您可以新增<xref:System.Windows.VisualState>物件到任何項目，它們是特別有用的方法讓其他使用者可以重新定義的<xref:System.Windows.Controls.Control>.</xref:System.Windows.Controls.Control>視覺行為</xref:System.Windows.VisualState> 如果您建立的自訂控制項，會使用<xref:System.Windows.Controls.ControlTemplate>，您可以指定其中說明控制項可以處於加<xref:System.Windows.TemplateVisualStateAttribute>在其類別定義。</xref:System.Windows.TemplateVisualStateAttribute> </xref:System.Windows.Controls.ControlTemplate> 然後建立新的人<xref:System.Windows.Controls.ControlTemplate>，請加入您的控制項可以<xref:System.Windows.VisualState>物件至範本。</xref:System.Windows.VisualState> </xref:System.Windows.Controls.ControlTemplate> <xref:System.Windows.TemplateVisualStateAttribute>可讓設計工具，例如 Expression Blend 時，若要公開控制項的狀態。</xref:System.Windows.TemplateVisualStateAttribute> 具有相同狀態<xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A?displayProperty=fullName>屬於相同 VisualStateGroup。</xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A?displayProperty=fullName>       如需有關如何使用 VisualStateGroup 物件中的<xref:System.Windows.Controls.ControlTemplate>，請參閱[自訂現有控制項的外觀，藉由建立 ControlTemplate](~/add/includes/ajax-current-ext-md.md)。</xref:System.Windows.Controls.ControlTemplate> 如需有關如何建立會控制該使用<xref:System.Windows.VisualStateManager>，請參閱[建立具有可自訂外觀](~/add/includes/ajax-current-ext-md.md)。</xref:System.Windows.VisualStateManager>       <xref:System.Windows.VisualStateGroup.Transitions%2A>屬性包含<xref:System.Windows.VisualTransition>控制項轉換之間狀態時，所套用的物件定義於 VisualStateGroup。</xref:System.Windows.VisualTransition> </xref:System.Windows.VisualStateGroup.Transitions%2A>"
  example:
  - "The following example creates a simple <xref:System.Windows.Controls.ControlTemplate> for a <xref:System.Windows.Controls.Button> that contains one <xref:System.Windows.Controls.Grid>. It also contains a VisualStateGroup named `CommonStates`, which defines the `MouseOver` and `Normal` states. The VisualStateGroup also has a <xref:System.Windows.VisualTransition> that specifies that it takes one half second for the <xref:System.Windows.Controls.Grid> to change from green to red when the user moves the mouse pointer over the <xref:System.Windows.Controls.Button>.  \n  \n [!code-xml[VSMButtonTemplate#11](~/add/codesnippet/xaml/vsmbuttontemplate/window1.xaml#11)]"
  syntax:
    content: >-
      [System.Windows.Markup.ContentProperty("States")]

      [System.Windows.Markup.RuntimeNameProperty("Name")]

      public class VisualStateGroup : System.Windows.DependencyObject
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  implements: []
  inheritedMembers:
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.VisualStateGroup.#ctor
  id: '#ctor'
  parent: System.Windows.VisualStateGroup
  langs:
  - csharp
  name: VisualStateGroup()
  nameWithType: VisualStateGroup.VisualStateGroup()
  fullName: System.Windows.VisualStateGroup.VisualStateGroup()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "初始化的新執行個體<xref href=&quot;System.Windows.VisualStateGroup&quot;></xref>類別。"
  syntax:
    content: public VisualStateGroup ();
    parameters: []
  overload: System.Windows.VisualStateGroup.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.VisualStateGroup.CurrentState
  id: CurrentState
  parent: System.Windows.VisualStateGroup
  langs:
  - csharp
  name: CurrentState
  nameWithType: VisualStateGroup.CurrentState
  fullName: System.Windows.VisualStateGroup.CurrentState
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "取得<xref href=&quot;System.Windows.VisualState&quot;></xref>目前套用至控制項。"
  syntax:
    content: public System.Windows.VisualState CurrentState { get; }
    return:
      type: System.Windows.VisualState
      description: "<xref href=&quot;System.Windows.VisualState&quot;> </xref>目前套用至控制項。"
  overload: System.Windows.VisualStateGroup.CurrentState*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.VisualStateGroup.CurrentStateChanged
  id: CurrentStateChanged
  parent: System.Windows.VisualStateGroup
  langs:
  - csharp
  name: CurrentStateChanged
  nameWithType: VisualStateGroup.CurrentStateChanged
  fullName: System.Windows.VisualStateGroup.CurrentStateChanged
  type: Event
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "發生於之後控制項轉換成不同的狀態。"
  remarks: "之後，控制會轉換成新的狀態就會發生此事件和<xref:System.Windows.VisualStateGroup.CurrentStateChanging>就會發生事件。</xref:System.Windows.VisualStateGroup.CurrentStateChanging>"
  syntax:
    content: public event EventHandler<System.Windows.VisualStateChangedEventArgs> CurrentStateChanged;
    return:
      type: System.EventHandler{System.Windows.VisualStateChangedEventArgs}
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.VisualStateGroup.CurrentStateChanging
  id: CurrentStateChanging
  parent: System.Windows.VisualStateGroup
  langs:
  - csharp
  name: CurrentStateChanging
  nameWithType: VisualStateGroup.CurrentStateChanging
  fullName: System.Windows.VisualStateGroup.CurrentStateChanging
  type: Event
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "發生於控制項開始轉換至不同的狀態。"
  remarks: "當控制項開始轉換狀態時，就會發生的事件。 如果<xref:System.Windows.VisualTransition>會套用到狀態變更，此事件轉換開始時發生。</xref:System.Windows.VisualTransition> 如果<xref:System.Windows.VisualTransition>未套用時，就會發生此事件控制項之前轉換至新的狀態後,<xref:System.Windows.VisualStateGroup.CurrentStateChanged>事件。</xref:System.Windows.VisualStateGroup.CurrentStateChanged> </xref:System.Windows.VisualTransition>"
  syntax:
    content: public event EventHandler<System.Windows.VisualStateChangedEventArgs> CurrentStateChanging;
    return:
      type: System.EventHandler{System.Windows.VisualStateChangedEventArgs}
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.VisualStateGroup.Name
  id: Name
  parent: System.Windows.VisualStateGroup
  langs:
  - csharp
  name: Name
  nameWithType: VisualStateGroup.Name
  fullName: System.Windows.VisualStateGroup.Name
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "取得或設定名稱<xref href=&quot;System.Windows.VisualStateGroup&quot;> </xref>。"
  remarks: "控制作者指定的狀態控制項加入時，可在<xref:System.Windows.TemplateVisualStateAttribute>在其類別定義。</xref:System.Windows.TemplateVisualStateAttribute> 具有<xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A?displayProperty=fullName>相同<xref:System.Windows.VisualStateGroup>.</xref:System.Windows.VisualStateGroup>屬於</xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A?displayProperty=fullName>相同的狀態 設定名稱<xref:System.Windows.VisualStateGroup>值<xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A?displayProperty=fullName>屬性。</xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A?displayProperty=fullName> </xref:System.Windows.VisualStateGroup>"
  example:
  - "The following example creates two <xref:System.Windows.VisualStateGroup> objects that are named `CommonStates` and `FocusStates`. The control will be in exactly one state from each <xref:System.Windows.VisualStateGroup> at all times. For the entire example, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-xml[VSMButtonTemplate#5](~/add/codesnippet/xaml/vsmbuttontemplate/skinnedbutton.xaml#5)]"
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "名稱<xref href=&quot;System.Windows.VisualStateGroup&quot;> </xref>。"
  overload: System.Windows.VisualStateGroup.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.VisualStateGroup.States
  id: States
  parent: System.Windows.VisualStateGroup
  langs:
  - csharp
  name: States
  nameWithType: VisualStateGroup.States
  fullName: System.Windows.VisualStateGroup.States
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "取得的互斥集合<xref href=&quot;System.Windows.VisualState&quot;></xref>物件。"
  remarks: ''
  example:
  - "The following example creates a simple <xref:System.Windows.Controls.ControlTemplate> for a <xref:System.Windows.Controls.Button> that contains one <xref:System.Windows.Controls.Grid>. It also contains a <xref:System.Windows.VisualStateGroup> named `CommonStates`, which defines the `MouseOver` and `Normal` states. The <xref:System.Windows.VisualStateGroup> also has a <xref:System.Windows.VisualTransition> that specifies that it takes one half second for the <xref:System.Windows.Controls.Grid> to change from green to red when the user moves the mouse pointer over the <xref:System.Windows.Controls.Button>.  \n  \n [!code-xml[VSMButtonTemplate#11](~/add/codesnippet/xaml/vsmbuttontemplate/window1.xaml#11)]"
  syntax:
    content: public System.Collections.IList States { get; }
    return:
      type: System.Collections.IList
      description: "互斥集合<xref href=&quot;System.Windows.VisualState&quot;></xref>物件。"
  overload: System.Windows.VisualStateGroup.States*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.VisualStateGroup.Transitions
  id: Transitions
  parent: System.Windows.VisualStateGroup
  langs:
  - csharp
  name: Transitions
  nameWithType: VisualStateGroup.Transitions
  fullName: System.Windows.VisualStateGroup.Transitions
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "取得集合<xref href=&quot;System.Windows.VisualTransition&quot;></xref>物件。"
  remarks: "<xref:System.Windows.VisualTransition>控制項切換狀態<xref:System.Windows.VisualStateGroup>.</xref:System.Windows.VisualStateGroup>中所定義時，會套用中轉換物件</xref:System.Windows.VisualTransition>"
  example:
  - "The following example creates a simple <xref:System.Windows.Controls.ControlTemplate> for a <xref:System.Windows.Controls.Button> that contains one <xref:System.Windows.Controls.Grid>. It also contains a <xref:System.Windows.VisualStateGroup> named `CommonStates`, which defines the `MouseOver` and `Normal` states. The <xref:System.Windows.VisualStateGroup> also has a <xref:System.Windows.VisualTransition> that specifies that it takes one half second for the <xref:System.Windows.Controls.Grid> to change from green to red when the user moves the mouse pointer over the <xref:System.Windows.Controls.Button>.  \n  \n [!code-xml[VSMButtonTemplate#11](~/add/codesnippet/xaml/vsmbuttontemplate/window1.xaml#11)]"
  syntax:
    content: public System.Collections.IList Transitions { get; }
    return:
      type: System.Collections.IList
      description: "集合<xref href=&quot;System.Windows.VisualTransition&quot;></xref>物件。"
  overload: System.Windows.VisualStateGroup.Transitions*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.DependencyObject
  isExternal: false
  name: System.Windows.DependencyObject
- uid: System.Windows.VisualStateGroup.#ctor
  parent: System.Windows.VisualStateGroup
  isExternal: false
  name: VisualStateGroup()
  nameWithType: VisualStateGroup.VisualStateGroup()
  fullName: System.Windows.VisualStateGroup.VisualStateGroup()
- uid: System.Windows.VisualStateGroup.CurrentState
  parent: System.Windows.VisualStateGroup
  isExternal: false
  name: CurrentState
  nameWithType: VisualStateGroup.CurrentState
  fullName: System.Windows.VisualStateGroup.CurrentState
- uid: System.Windows.VisualState
  parent: System.Windows
  isExternal: false
  name: VisualState
  nameWithType: VisualState
  fullName: System.Windows.VisualState
- uid: System.Windows.VisualStateGroup.CurrentStateChanged
  parent: System.Windows.VisualStateGroup
  isExternal: false
  name: CurrentStateChanged
  nameWithType: VisualStateGroup.CurrentStateChanged
  fullName: System.Windows.VisualStateGroup.CurrentStateChanged
- uid: System.EventHandler{System.Windows.VisualStateChangedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<VisualStateChangedEventArgs>
  nameWithType: EventHandler<VisualStateChangedEventArgs>
  fullName: System.EventHandler<System.Windows.VisualStateChangedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Windows.VisualStateChangedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.VisualStateChangedEventArgs
    name: VisualStateChangedEventArgs
    nameWithType: VisualStateChangedEventArgs
    fullName: VisualStateChangedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.VisualStateGroup.CurrentStateChanging
  parent: System.Windows.VisualStateGroup
  isExternal: false
  name: CurrentStateChanging
  nameWithType: VisualStateGroup.CurrentStateChanging
  fullName: System.Windows.VisualStateGroup.CurrentStateChanging
- uid: System.Windows.VisualStateGroup.Name
  parent: System.Windows.VisualStateGroup
  isExternal: false
  name: Name
  nameWithType: VisualStateGroup.Name
  fullName: System.Windows.VisualStateGroup.Name
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.VisualStateGroup.States
  parent: System.Windows.VisualStateGroup
  isExternal: false
  name: States
  nameWithType: VisualStateGroup.States
  fullName: System.Windows.VisualStateGroup.States
- uid: System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Windows.VisualStateGroup.Transitions
  parent: System.Windows.VisualStateGroup
  isExternal: false
  name: Transitions
  nameWithType: VisualStateGroup.Transitions
  fullName: System.Windows.VisualStateGroup.Transitions
- uid: System.Windows.VisualStateGroup.#ctor*
  parent: System.Windows.VisualStateGroup
  isExternal: false
  name: VisualStateGroup
  nameWithType: VisualStateGroup.VisualStateGroup
- uid: System.Windows.VisualStateGroup.CurrentState*
  parent: System.Windows.VisualStateGroup
  isExternal: false
  name: CurrentState
  nameWithType: VisualStateGroup.CurrentState
- uid: System.Windows.VisualStateGroup.Name*
  parent: System.Windows.VisualStateGroup
  isExternal: false
  name: Name
  nameWithType: VisualStateGroup.Name
- uid: System.Windows.VisualStateGroup.States*
  parent: System.Windows.VisualStateGroup
  isExternal: false
  name: States
  nameWithType: VisualStateGroup.States
- uid: System.Windows.VisualStateGroup.Transitions*
  parent: System.Windows.VisualStateGroup
  isExternal: false
  name: Transitions
  nameWithType: VisualStateGroup.Transitions
