### YamlMime:ManagedReference
items:
- uid: Microsoft.Win32.RegistryKey
  id: RegistryKey
  children:
  - Microsoft.Win32.RegistryKey.Close
  - Microsoft.Win32.RegistryKey.CreateSubKey(System.String)
  - Microsoft.Win32.RegistryKey.CreateSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck)
  - Microsoft.Win32.RegistryKey.CreateSubKey(System.String,System.Boolean)
  - Microsoft.Win32.RegistryKey.CreateSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck,Microsoft.Win32.RegistryOptions)
  - Microsoft.Win32.RegistryKey.CreateSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck,System.Security.AccessControl.RegistrySecurity)
  - Microsoft.Win32.RegistryKey.CreateSubKey(System.String,System.Boolean,Microsoft.Win32.RegistryOptions)
  - Microsoft.Win32.RegistryKey.CreateSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck,Microsoft.Win32.RegistryOptions,System.Security.AccessControl.RegistrySecurity)
  - Microsoft.Win32.RegistryKey.DeleteSubKey(System.String)
  - Microsoft.Win32.RegistryKey.DeleteSubKey(System.String,System.Boolean)
  - Microsoft.Win32.RegistryKey.DeleteSubKeyTree(System.String)
  - Microsoft.Win32.RegistryKey.DeleteSubKeyTree(System.String,System.Boolean)
  - Microsoft.Win32.RegistryKey.DeleteValue(System.String)
  - Microsoft.Win32.RegistryKey.DeleteValue(System.String,System.Boolean)
  - Microsoft.Win32.RegistryKey.Dispose
  - Microsoft.Win32.RegistryKey.Flush
  - Microsoft.Win32.RegistryKey.FromHandle(Microsoft.Win32.SafeHandles.SafeRegistryHandle)
  - Microsoft.Win32.RegistryKey.FromHandle(Microsoft.Win32.SafeHandles.SafeRegistryHandle,Microsoft.Win32.RegistryView)
  - Microsoft.Win32.RegistryKey.GetAccessControl
  - Microsoft.Win32.RegistryKey.GetAccessControl(System.Security.AccessControl.AccessControlSections)
  - Microsoft.Win32.RegistryKey.GetSubKeyNames
  - Microsoft.Win32.RegistryKey.GetValue(System.String)
  - Microsoft.Win32.RegistryKey.GetValue(System.String,System.Object)
  - Microsoft.Win32.RegistryKey.GetValue(System.String,System.Object,Microsoft.Win32.RegistryValueOptions)
  - Microsoft.Win32.RegistryKey.GetValueKind(System.String)
  - Microsoft.Win32.RegistryKey.GetValueNames
  - Microsoft.Win32.RegistryKey.Handle
  - Microsoft.Win32.RegistryKey.Name
  - Microsoft.Win32.RegistryKey.OpenBaseKey(Microsoft.Win32.RegistryHive,Microsoft.Win32.RegistryView)
  - Microsoft.Win32.RegistryKey.OpenRemoteBaseKey(Microsoft.Win32.RegistryHive,System.String)
  - Microsoft.Win32.RegistryKey.OpenRemoteBaseKey(Microsoft.Win32.RegistryHive,System.String,Microsoft.Win32.RegistryView)
  - Microsoft.Win32.RegistryKey.OpenSubKey(System.String)
  - Microsoft.Win32.RegistryKey.OpenSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck)
  - Microsoft.Win32.RegistryKey.OpenSubKey(System.String,System.Boolean)
  - Microsoft.Win32.RegistryKey.OpenSubKey(System.String,System.Security.AccessControl.RegistryRights)
  - Microsoft.Win32.RegistryKey.OpenSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck,System.Security.AccessControl.RegistryRights)
  - Microsoft.Win32.RegistryKey.SetAccessControl(System.Security.AccessControl.RegistrySecurity)
  - Microsoft.Win32.RegistryKey.SetValue(System.String,System.Object)
  - Microsoft.Win32.RegistryKey.SetValue(System.String,System.Object,Microsoft.Win32.RegistryValueKind)
  - Microsoft.Win32.RegistryKey.SubKeyCount
  - Microsoft.Win32.RegistryKey.ToString
  - Microsoft.Win32.RegistryKey.ValueCount
  - Microsoft.Win32.RegistryKey.View
  langs:
  - csharp
  name: RegistryKey
  nameWithType: RegistryKey
  fullName: Microsoft.Win32.RegistryKey
  type: Class
  summary: "表示在 Windows 登錄機碼層級節點。 這個類別是登錄封裝。"
  remarks: "To get an instance of RegistryKey, use one of the static members of the <xref:Microsoft.Win32.Registry> class.  \n  \n The registry acts as a central repository of information for the operating system and the applications on a computer. The registry is organized in a hierarchical format, based on a logical ordering of the elements stored within it (please see <xref:Microsoft.Win32.Registry> for the base-level items in this hierarchy). When storing information in the registry, select the appropriate location based on the type of information being stored. Be sure to avoid destroying information created by other applications, because this can cause those applications to exhibit unexpected behavior, and can also have an adverse effect upon your own application.  \n  \n> [!IMPORTANT]\n>  This type implements the <xref:System.IDisposable> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block. To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic). For more information, see the “Using an Object that Implements IDisposable” section in the <xref:System.IDisposable> interface topic.  \n  \n Registry keys are the base unit of organization in the registry, and can be compared to folders in File Explorer. A particular key can have subkeys, just as a folder can have subfolders. Each key can be deleted, as long as the user has the appropriate permissions to do so, and the key is not a base key or at the level directly under the base keys. Each key can also have multiple values associated with it (a value can be compared to a file), which are used to store the information — for example, information about an application installed on the computer. Each value holds one particular piece of information, which can be retrieved or updated when required. For instance, you can create a RegistryKey for your company, under the key HKEY_LOCAL_MACHINE\\Software, and then a subkey for each application that your company creates. Each subkey holds the information specific to that application, such as color settings, screen location and size, or recognized file extensions.  \n  \n Note that information stored in the registry is available to other applications and users, and therefore should not be used to store security data or critical application information.  \n  \n> [!CAUTION]\n>  Do not expose RegistryKey objects in such a way that a malicious program could create thousands of meaningless subkeys or key/value pairs. For example, do not allow callers to enter arbitrary keys or values.  \n  \n Starting in the [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)], the length of a registry key is no longer limited to 255 characters."
  example:
  - "The following code example shows how to create a subkey under HKEY_CURRENT_USER, manipulate its contents, and then delete the subkey.  \n  \n [!code-cpp[Microsoft.Win32.RegistryKey2#1](~/add/codesnippet/cpp/t-microsoft.win32.regist_2_1.cpp)]\n [!code-cs[Microsoft.Win32.RegistryKey2#1](~/add/codesnippet/csharp/t-microsoft.win32.regist_2_1.cs)]\n [!code-vb[Microsoft.Win32.RegistryKey2#1](~/add/codesnippet/visualbasic/t-microsoft.win32.regist_2_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class RegistryKey : MarshalByRefObject, IDisposable
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.Close
  id: Close
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: Close()
  nameWithType: RegistryKey.Close()
  fullName: Microsoft.Win32.RegistryKey.Close()
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "關閉機碼並將它清除至磁碟，如果其內容已經遭到修改。"
  remarks: "系統機碼上呼叫這個方法不會影響，因為系統索引鍵永遠不會關閉。       如果您的執行個體上呼叫這個方法不做任何動作`RegistryKey`已關閉。"
  example:
  - "This code example is part of a larger example provided for the <xref:Microsoft.Win32.RegistryKey> class.  \n  \n [!code-cpp[Microsoft.Win32.RegistryKey2#4](~/add/codesnippet/cpp/m-microsoft.win32.regist_4_1.cpp)]\n [!code-cs[Microsoft.Win32.RegistryKey2#4](~/add/codesnippet/csharp/m-microsoft.win32.regist_4_1.cs)]\n [!code-vb[Microsoft.Win32.RegistryKey2#4](~/add/codesnippet/visualbasic/m-microsoft.win32.regist_4_1.vb)]"
  syntax:
    content: public void Close ();
    parameters: []
  overload: Microsoft.Win32.RegistryKey.Close*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.CreateSubKey(System.String)
  id: CreateSubKey(System.String)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: CreateSubKey(String)
  nameWithType: RegistryKey.CreateSubKey(String)
  fullName: Microsoft.Win32.RegistryKey.CreateSubKey(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "建立新的子機碼或開啟現有的子機碼的寫入權限。"
  remarks: "才能執行此動作，使用者必須有登錄階層中的權限在此層級和以下版本。      > [!CAUTION] > 並不會公開<xref:Microsoft.Win32.RegistryKey>方式的一種惡意程式無法建立數千個無意義的子機碼或索引鍵/值組中的物件。</xref:Microsoft.Win32.RegistryKey> 例如，不允許呼叫者輸入任意索引鍵或值。"
  example:
  - "The following code example shows how to create a subkey under HKEY_CURRENT_USER, manipulate its contents, and then delete the subkey.  \n  \n [!code-cpp[Microsoft.Win32.RegistryKey2#1](~/add/codesnippet/cpp/m-microsoft.win32.regist_15_1.cpp)]\n [!code-cs[Microsoft.Win32.RegistryKey2#1](~/add/codesnippet/csharp/m-microsoft.win32.regist_15_1.cs)]\n [!code-vb[Microsoft.Win32.RegistryKey2#1](~/add/codesnippet/visualbasic/m-microsoft.win32.regist_15_1.vb)]"
  syntax:
    content: public Microsoft.Win32.RegistryKey CreateSubKey (string subkey);
    parameters:
    - id: subkey
      type: System.String
      description: "名稱或路徑來建立或開啟之子機碼。 這個字串不區分大小寫。"
    return:
      type: Microsoft.Win32.RegistryKey
      description: "新建立的子機碼，或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>作業失敗。 如果指定零長度字串<code> subkey </code>，目前<xref href=&quot;Microsoft.Win32.RegistryKey&quot;></xref>物件傳回。"
  overload: Microsoft.Win32.RegistryKey.CreateSubKey*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>subkey</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "使用者沒有建立或開啟登錄機碼所需的權限。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref>上的這個方法會叫用已關閉 （不能存取已關閉的索引鍵）。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref>無法寫入，例如，未開啟為可寫入的索引鍵，或使用者沒有存取權限。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "巢狀層級超過 510。       -時發生系統錯誤，例如刪除機碼，或嘗試建立中的索引鍵<xref href=&quot;Microsoft.Win32.Registry.LocalMachine&quot;></xref>根。"
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.CreateSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck)
  id: CreateSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: CreateSubKey(String,RegistryKeyPermissionCheck)
  nameWithType: RegistryKey.CreateSubKey(String,RegistryKeyPermissionCheck)
  fullName: Microsoft.Win32.RegistryKey.CreateSubKey(String,RegistryKeyPermissionCheck)
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "建立新的子機碼或開啟現有的子機碼的寫入權限，使用指定的權限檢查選項。"
  remarks: "才能執行此動作，使用者必須有登錄階層中的權限在此層級和以下版本。      > [!CAUTION] > 並不會公開<xref:Microsoft.Win32.RegistryKey>方式的一種惡意程式無法建立數千個無意義的子機碼或索引鍵/值組中的物件。</xref:Microsoft.Win32.RegistryKey> 例如，不允許呼叫者輸入任意索引鍵或值。       若要使用<xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A>方法，您必須擁有的<xref:Microsoft.Win32.RegistryKey>類別</xref:Microsoft.Win32.RegistryKey>執行個體</xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> 若要取得執行個體<xref:Microsoft.Win32.RegistryKey>，請使用其中一個<xref:Microsoft.Win32.Registry>類別</xref:Microsoft.Win32.Registry>的靜態成員</xref:Microsoft.Win32.RegistryKey>"
  syntax:
    content: public Microsoft.Win32.RegistryKey CreateSubKey (string subkey, Microsoft.Win32.RegistryKeyPermissionCheck permissionCheck);
    parameters:
    - id: subkey
      type: System.String
      description: "名稱或路徑來建立或開啟之子機碼。 這個字串不區分大小寫。"
    - id: permissionCheck
      type: Microsoft.Win32.RegistryKeyPermissionCheck
      description: "其中一個列舉值，指定是否要將索引鍵開啟以便讀取或讀取/寫入存取。"
    return:
      type: Microsoft.Win32.RegistryKey
      description: "新建立的子機碼，或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>作業失敗。 如果指定零長度字串<code> subkey </code>，目前<xref href=&quot;Microsoft.Win32.RegistryKey&quot;></xref>物件傳回。"
  overload: Microsoft.Win32.RegistryKey.CreateSubKey*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>subkey</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "使用者沒有建立或開啟登錄機碼所需的權限。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>permissionCheck</code>包含無效的值。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref>上的這個方法會叫用已關閉 （不能存取已關閉的索引鍵）。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref>無法寫入，例如，未開啟為可寫入的索引鍵，或使用者沒有存取權限。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "巢狀層級超過 510。       -時發生系統錯誤，例如刪除機碼，或嘗試建立中的索引鍵<xref href=&quot;Microsoft.Win32.Registry.LocalMachine&quot;></xref>根。"
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.CreateSubKey(System.String,System.Boolean)
  id: CreateSubKey(System.String,System.Boolean)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: CreateSubKey(String,Boolean)
  nameWithType: RegistryKey.CreateSubKey(String,Boolean)
  fullName: Microsoft.Win32.RegistryKey.CreateSubKey(String,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "建立新的子機碼或開啟現有的子機碼指定的存取權。       可用以啟動[!INCLUDE[net_v46](~/add/includes/net-v46-md.md)]"
  remarks: "才能執行此動作，使用者必須有登錄階層中的權限在此層級和以下版本。      > [!CAUTION] > 並不會公開<xref:Microsoft.Win32.RegistryKey>方式的一種惡意程式無法建立數千個無意義的子機碼或索引鍵/值組中的物件。</xref:Microsoft.Win32.RegistryKey> 例如，不允許呼叫者輸入任意索引鍵或值。       若要使用 CreateSubKey 方法，您必須執行個體的<xref:Microsoft.Win32.RegistryKey>類別。</xref:Microsoft.Win32.RegistryKey> 若要取得執行個體<xref:Microsoft.Win32.RegistryKey>，請使用其中一個<xref:Microsoft.Win32.Registry>類別</xref:Microsoft.Win32.Registry>的靜態成員</xref:Microsoft.Win32.RegistryKey>"
  syntax:
    content: public Microsoft.Win32.RegistryKey CreateSubKey (string subkey, bool writable);
    parameters:
    - id: subkey
      type: System.String
      description: "名稱或路徑來建立或開啟之子機碼。 這個字串不區分大小寫。"
    - id: writable
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>表示新的子機碼是可寫入。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    return:
      type: Microsoft.Win32.RegistryKey
      description: "新建立的子機碼，或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>作業失敗。 如果指定零長度字串<code> subkey </code>，目前<xref href=&quot;Microsoft.Win32.RegistryKey&quot;></xref>物件傳回。"
  overload: Microsoft.Win32.RegistryKey.CreateSubKey*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>subkey</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "使用者沒有建立或開啟登錄機碼所需的權限。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "目前<xref href=&quot;Microsoft.Win32.RegistryKey&quot;></xref>無法寫入，例如，未開啟為可寫入的索引鍵，或使用者沒有存取權限。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "巢狀層級超過 510。       -時發生系統錯誤，例如刪除機碼，或嘗試建立中的索引鍵<xref href=&quot;Microsoft.Win32.Registry.LocalMachine&quot;></xref>根。"
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.CreateSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck,Microsoft.Win32.RegistryOptions)
  id: CreateSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck,Microsoft.Win32.RegistryOptions)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: CreateSubKey(String,RegistryKeyPermissionCheck,RegistryOptions)
  nameWithType: RegistryKey.CreateSubKey(String,RegistryKeyPermissionCheck,RegistryOptions)
  fullName: Microsoft.Win32.RegistryKey.CreateSubKey(String,RegistryKeyPermissionCheck,RegistryOptions)
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "建立子機碼或開啟子機碼的寫入權限，使用指定的權限核取及登錄選項。"
  remarks: "若要取得目前<xref:Microsoft.Win32.RegistryKey>物件，請指定空字串 (&quot;&quot;) 的`subkey`。</xref:Microsoft.Win32.RegistryKey>"
  syntax:
    content: public Microsoft.Win32.RegistryKey CreateSubKey (string subkey, Microsoft.Win32.RegistryKeyPermissionCheck permissionCheck, Microsoft.Win32.RegistryOptions options);
    parameters:
    - id: subkey
      type: System.String
      description: "名稱或路徑來建立或開啟之子機碼。"
    - id: permissionCheck
      type: Microsoft.Win32.RegistryKeyPermissionCheck
      description: "其中一個列舉值，指定是否要將索引鍵開啟以便讀取或讀取/寫入存取。"
    - id: options
      type: Microsoft.Win32.RegistryOptions
      description: "若要使用; 登錄選項比方說，會建立暫時性的機碼。"
    return:
      type: Microsoft.Win32.RegistryKey
      description: "新建立的子機碼，或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>作業失敗。"
  overload: Microsoft.Win32.RegistryKey.CreateSubKey*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>subkey </code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "目前<xref href=&quot;Microsoft.Win32.RegistryKey&quot;></xref>物件已關閉 （不能存取已關閉的索引鍵）。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "目前<xref href=&quot;Microsoft.Win32.RegistryKey&quot;></xref>無法寫入物件; 例如，未開啟為可寫入的索引鍵，或使用者沒有必要的存取權限。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "巢狀層級超過 510。       -時發生系統錯誤，例如刪除機碼或嘗試建立中的索引鍵<xref href=&quot;Microsoft.Win32.Registry.LocalMachine&quot;></xref>根。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "使用者沒有建立或開啟登錄機碼所需的權限。"
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.CreateSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck,System.Security.AccessControl.RegistrySecurity)
  id: CreateSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck,System.Security.AccessControl.RegistrySecurity)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: CreateSubKey(String,RegistryKeyPermissionCheck,RegistrySecurity)
  nameWithType: RegistryKey.CreateSubKey(String,RegistryKeyPermissionCheck,RegistrySecurity)
  fullName: Microsoft.Win32.RegistryKey.CreateSubKey(String,RegistryKeyPermissionCheck,RegistrySecurity)
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "建立新的子機碼或開啟現有的子機碼的寫入權限，使用指定的權限檢查選項和登錄安全性。"
  remarks: "CreateSubKey 方法會建立具有所指定的存取控制的登錄機碼`registrySecurity`參數。 <xref:Microsoft.Win32.RegistryKey>物件，則會傳回代表登錄機碼，但不是會限制該物件中指定的存取控制`registrySecurity`參數。</xref:Microsoft.Win32.RegistryKey>       如果`permissionCheck`是<xref:Microsoft.Win32.RegistryKeyPermissionCheck?displayProperty=fullName>，開啟機碼以進行讀取/寫入存取。</xref:Microsoft.Win32.RegistryKeyPermissionCheck?displayProperty=fullName> 如果`permissionCheck`是<xref:Microsoft.Win32.RegistryKeyPermissionCheck?displayProperty=fullName>，開啟機碼以供讀取存取。</xref:Microsoft.Win32.RegistryKeyPermissionCheck?displayProperty=fullName>       回溯相容性，開啟機碼以進行讀取和寫入如果`permissionCheck`、<xref:Microsoft.Win32.RegistryKeyPermissionCheck?displayProperty=fullName>父索引鍵也是否<xref:Microsoft.Win32.RegistryKeyPermissionCheck?displayProperty=fullName>.</xref:Microsoft.Win32.RegistryKeyPermissionCheck?displayProperty=fullName> </xref:Microsoft.Win32.RegistryKeyPermissionCheck?displayProperty=fullName> 如果父索引鍵中有任何其他設定，讀取/寫入狀態是由父索引鍵的設定所控制。       為了執行此動作，使用者必須在此層級和以下版本的權限登錄階層中。      > [!CAUTION] > 並不會公開<xref:Microsoft.Win32.RegistryKey>方式的一種惡意程式無法建立數千個無意義的子機碼或索引鍵/值組中的物件。</xref:Microsoft.Win32.RegistryKey> 例如，不允許呼叫者輸入任意索引鍵或值。       若要使用<xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A>方法，您必須擁有的<xref:Microsoft.Win32.RegistryKey>類別</xref:Microsoft.Win32.RegistryKey>執行個體</xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> 若要取得執行個體<xref:Microsoft.Win32.RegistryKey>，請使用其中一個<xref:Microsoft.Win32.Registry>類別</xref:Microsoft.Win32.Registry>的靜態成員</xref:Microsoft.Win32.RegistryKey>"
  syntax:
    content: public Microsoft.Win32.RegistryKey CreateSubKey (string subkey, Microsoft.Win32.RegistryKeyPermissionCheck permissionCheck, System.Security.AccessControl.RegistrySecurity registrySecurity);
    parameters:
    - id: subkey
      type: System.String
      description: "名稱或路徑來建立或開啟之子機碼。 這個字串不區分大小寫。"
    - id: permissionCheck
      type: Microsoft.Win32.RegistryKeyPermissionCheck
      description: "其中一個列舉值，指定是否要將索引鍵開啟以便讀取或讀取/寫入存取。"
    - id: registrySecurity
      type: System.Security.AccessControl.RegistrySecurity
      description: "新的金鑰存取控制安全性。"
    return:
      type: Microsoft.Win32.RegistryKey
      description: "新建立的子機碼，或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>作業失敗。 如果指定零長度字串<code> subkey </code>，目前<xref href=&quot;Microsoft.Win32.RegistryKey&quot;></xref>物件傳回。"
  overload: Microsoft.Win32.RegistryKey.CreateSubKey*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>subkey</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "使用者沒有建立或開啟登錄機碼所需的權限。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>permissionCheck</code>包含無效的值。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref>上的這個方法會叫用已關閉 （不能存取已關閉的索引鍵）。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "目前<xref href=&quot;Microsoft.Win32.RegistryKey&quot;></xref>無法寫入，例如，未開啟為可寫入的索引鍵，或使用者沒有存取權限。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "巢狀層級超過 510。       -時發生系統錯誤，例如刪除機碼，或嘗試建立中的索引鍵<xref href=&quot;Microsoft.Win32.Registry.LocalMachine&quot;></xref>根。"
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.CreateSubKey(System.String,System.Boolean,Microsoft.Win32.RegistryOptions)
  id: CreateSubKey(System.String,System.Boolean,Microsoft.Win32.RegistryOptions)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: CreateSubKey(String,Boolean,RegistryOptions)
  nameWithType: RegistryKey.CreateSubKey(String,Boolean,RegistryOptions)
  fullName: Microsoft.Win32.RegistryKey.CreateSubKey(String,Boolean,RegistryOptions)
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "建立新的子機碼或開啟現有的子機碼指定的存取權。       可用以啟動[!INCLUDE[net_v46](~/add/includes/net-v46-md.md)]"
  remarks: "才能執行此動作，使用者必須有登錄階層中的權限在此層級和以下版本。      > [!CAUTION] > 並不會公開<xref:Microsoft.Win32.RegistryKey>方式的一種惡意程式無法建立數千個無意義的子機碼或索引鍵/值組中的物件。</xref:Microsoft.Win32.RegistryKey> 例如，不允許呼叫者輸入任意索引鍵或值。       若要使用 CreateSubKey 方法，您必須執行個體的<xref:Microsoft.Win32.RegistryKey>類別。</xref:Microsoft.Win32.RegistryKey> 若要取得執行個體<xref:Microsoft.Win32.RegistryKey>，請使用其中一個<xref:Microsoft.Win32.Registry>類別</xref:Microsoft.Win32.Registry>的靜態成員</xref:Microsoft.Win32.RegistryKey>"
  syntax:
    content: public Microsoft.Win32.RegistryKey CreateSubKey (string subkey, bool writable, Microsoft.Win32.RegistryOptions options);
    parameters:
    - id: subkey
      type: System.String
      description: "名稱或路徑來建立或開啟之子機碼。 這個字串不區分大小寫。"
    - id: writable
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>表示新的子機碼是可寫入。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    - id: options
      type: Microsoft.Win32.RegistryOptions
      description: "要使用的登錄選項。"
    return:
      type: Microsoft.Win32.RegistryKey
      description: "新建立的子機碼，或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>作業失敗。 如果指定零長度字串<code> subkey </code>，目前<xref href=&quot;Microsoft.Win32.RegistryKey&quot;></xref>物件傳回。"
  overload: Microsoft.Win32.RegistryKey.CreateSubKey*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>subkey</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>options</code>未指定有效的選項"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "使用者沒有建立或開啟登錄機碼所需的權限。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "目前<xref href=&quot;Microsoft.Win32.RegistryKey&quot;></xref>無法寫入，例如，未開啟為可寫入的索引鍵，或使用者沒有存取權限。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "巢狀層級超過 510。       -時發生系統錯誤，例如刪除機碼，或嘗試建立中的索引鍵<xref href=&quot;Microsoft.Win32.Registry.LocalMachine&quot;></xref>根。"
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.CreateSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck,Microsoft.Win32.RegistryOptions,System.Security.AccessControl.RegistrySecurity)
  id: CreateSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck,Microsoft.Win32.RegistryOptions,System.Security.AccessControl.RegistrySecurity)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: CreateSubKey(String,RegistryKeyPermissionCheck,RegistryOptions,RegistrySecurity)
  nameWithType: RegistryKey.CreateSubKey(String,RegistryKeyPermissionCheck,RegistryOptions,RegistrySecurity)
  fullName: Microsoft.Win32.RegistryKey.CreateSubKey(String,RegistryKeyPermissionCheck,RegistryOptions,RegistrySecurity)
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "建立子機碼或開啟子機碼的寫入權限，使用指定的權限檢查選項、 登錄選項和登錄安全性。"
  remarks: "若要取得目前<xref:Microsoft.Win32.RegistryKey>物件，請指定空字串 (&quot;&quot;) 的`subkey`。</xref:Microsoft.Win32.RegistryKey>"
  syntax:
    content: public Microsoft.Win32.RegistryKey CreateSubKey (string subkey, Microsoft.Win32.RegistryKeyPermissionCheck permissionCheck, Microsoft.Win32.RegistryOptions registryOptions, System.Security.AccessControl.RegistrySecurity registrySecurity);
    parameters:
    - id: subkey
      type: System.String
      description: "名稱或路徑來建立或開啟之子機碼。"
    - id: permissionCheck
      type: Microsoft.Win32.RegistryKeyPermissionCheck
      description: "其中一個列舉值，指定是否要將索引鍵開啟以便讀取或讀取/寫入存取。"
    - id: registryOptions
      type: Microsoft.Win32.RegistryOptions
      description: "要使用的登錄選項。"
    - id: registrySecurity
      type: System.Security.AccessControl.RegistrySecurity
      description: "新的子機碼的存取控制安全性。"
    return:
      type: Microsoft.Win32.RegistryKey
      description: "新建立的子機碼，或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>作業失敗。"
  overload: Microsoft.Win32.RegistryKey.CreateSubKey*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>subkey </code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "目前<xref href=&quot;Microsoft.Win32.RegistryKey&quot;></xref>物件已關閉。 無法存取已關閉的索引鍵。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "目前<xref href=&quot;Microsoft.Win32.RegistryKey&quot;></xref>無法寫入物件; 例如，未開啟為可寫入的索引鍵，或使用者沒有必要的存取權限。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "巢狀層級超過 510。       -時發生系統錯誤，例如刪除機碼或嘗試建立中的索引鍵<xref href=&quot;Microsoft.Win32.Registry.LocalMachine&quot;></xref>根。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "使用者沒有建立或開啟登錄機碼所需的權限。"
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.DeleteSubKey(System.String)
  id: DeleteSubKey(System.String)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: DeleteSubKey(String)
  nameWithType: RegistryKey.DeleteSubKey(String)
  fullName: Microsoft.Win32.RegistryKey.DeleteSubKey(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "刪除指定的子機碼。"
  remarks: "若要刪除子機碼，請使用  <xref:Microsoft.Win32.RegistryKey.DeleteSubKeyTree%2A>.</xref:Microsoft.Win32.RegistryKey.DeleteSubKeyTree%2A>       刪除登錄機碼時，請務必小心。"
  example:
  - "The following example demonstrates how to use DeleteSubKey.  \n  \n [!code-cpp[Microsoft.Win32.RegistryKey2#5](~/add/codesnippet/cpp/m-microsoft.win32.regist_5_1.cpp)]\n [!code-cs[Microsoft.Win32.RegistryKey2#5](~/add/codesnippet/csharp/m-microsoft.win32.regist_5_1.cs)]\n [!code-vb[Microsoft.Win32.RegistryKey2#5](~/add/codesnippet/visualbasic/m-microsoft.win32.regist_5_1.vb)]"
  syntax:
    content: public void DeleteSubKey (string subkey);
    parameters:
    - id: subkey
      type: System.String
      description: "若要刪除的子機碼名稱。 這個字串不區分大小寫。"
  overload: Microsoft.Win32.RegistryKey.DeleteSubKey*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code> subkey </code>具有子機碼"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> subkey </code>參數未指定有效的登錄機碼"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>subkey</code>是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "使用者沒有刪除機碼所需的權限。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref>操作已關閉 （不能存取已關閉的索引鍵）。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "使用者沒有必要的登錄權限。"
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.DeleteSubKey(System.String,System.Boolean)
  id: DeleteSubKey(System.String,System.Boolean)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: DeleteSubKey(String,Boolean)
  nameWithType: RegistryKey.DeleteSubKey(String,Boolean)
  fullName: Microsoft.Win32.RegistryKey.DeleteSubKey(String,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "刪除指定的子機碼，並且指定找不到子機碼時，是否引發例外狀況。"
  remarks: "若要刪除子機碼，請使用  <xref:Microsoft.Win32.RegistryKey.DeleteSubKeyTree%2A>.</xref:Microsoft.Win32.RegistryKey.DeleteSubKeyTree%2A>       刪除登錄機碼時，請務必小心。"
  syntax:
    content: public void DeleteSubKey (string subkey, bool throwOnMissingSubKey);
    parameters:
    - id: subkey
      type: System.String
      description: "若要刪除的子機碼名稱。 這個字串不區分大小寫。"
    - id: throwOnMissingSubKey
      type: System.Boolean
      description: "表示是否找不到指定的子機碼時，是否引發例外狀況。 如果這個引數是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>和指定的子機碼不存在，會引發例外狀況。 如果這個引數是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>和指定的子機碼不存在，會採取任何動作。"
  overload: Microsoft.Win32.RegistryKey.DeleteSubKey*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>subkey</code>具有子機碼。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>subkey</code>未指定有效的登錄機碼，和<code>throwOnMissingSubKey</code>是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>subkey</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "使用者沒有刪除機碼所需的權限。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref>操作已關閉 （不能存取已關閉的索引鍵）。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "使用者沒有必要的登錄權限。"
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.DeleteSubKeyTree(System.String)
  id: DeleteSubKeyTree(System.String)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: DeleteSubKeyTree(String)
  nameWithType: RegistryKey.DeleteSubKeyTree(String)
  fullName: Microsoft.Win32.RegistryKey.DeleteSubKeyTree(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "刪除子機碼和任何子系子機碼以遞迴方式。"
  remarks: "您必須擁有適當的權限來刪除子機碼和其樹狀結構。      > [!CAUTION] > 刪除特定的索引鍵會在樹狀目錄中移除機碼下的所有項目。 會不提供任何警告。 如果您想要刪除子機碼，它不有使用任何子機碼時，才<xref:Microsoft.Win32.RegistryKey.DeleteSubKey%2A>方法。</xref:Microsoft.Win32.RegistryKey.DeleteSubKey%2A>"
  example:
  - "This code example is part of a larger example provided for the <xref:Microsoft.Win32.RegistryKey> class.  \n  \n [!code-cpp[Microsoft.Win32.RegistryKey2#4](~/add/codesnippet/cpp/m-microsoft.win32.regist_12_1.cpp)]\n [!code-cs[Microsoft.Win32.RegistryKey2#4](~/add/codesnippet/csharp/m-microsoft.win32.regist_12_1.cs)]\n [!code-vb[Microsoft.Win32.RegistryKey2#4](~/add/codesnippet/visualbasic/m-microsoft.win32.regist_12_1.vb)]"
  syntax:
    content: public void DeleteSubKeyTree (string subkey);
    parameters:
    - id: subkey
      type: System.String
      description: "若要刪除子機碼。 這個字串不區分大小寫。"
  overload: Microsoft.Win32.RegistryKey.DeleteSubKeyTree*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>subkey</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "嘗試刪除根登錄區。       - <code> subkey </code>未指定有效的登錄子機碼。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "發生 I/O 錯誤。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "使用者沒有刪除機碼所需的權限。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref>操作已關閉 （不能存取已關閉的索引鍵）。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "使用者沒有必要的登錄權限。"
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.DeleteSubKeyTree(System.String,System.Boolean)
  id: DeleteSubKeyTree(System.String,System.Boolean)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: DeleteSubKeyTree(String,Boolean)
  nameWithType: RegistryKey.DeleteSubKeyTree(String,Boolean)
  fullName: Microsoft.Win32.RegistryKey.DeleteSubKeyTree(String,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "刪除指定的子機碼和任何子系子機碼以遞迴方式，並且指定找不到子機碼時，是否引發例外狀況。"
  syntax:
    content: public void DeleteSubKeyTree (string subkey, bool throwOnMissingSubKey);
    parameters:
    - id: subkey
      type: System.String
      description: "若要刪除的子機碼名稱。 這個字串不區分大小寫。"
    - id: throwOnMissingSubKey
      type: System.Boolean
      description: "表示是否找不到指定的子機碼時，是否引發例外狀況。 如果這個引數是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>和指定的子機碼不存在，會引發例外狀況。 如果這個引數是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>和指定的子機碼不存在，會採取任何動作。"
  overload: Microsoft.Win32.RegistryKey.DeleteSubKeyTree*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "您嘗試刪除根登錄區樹狀結構。       - <code> subkey </code>未指定有效的登錄子機碼和<code> throwOnMissingSubKey </code>是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>subkey</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref>已關閉 （不能存取已關閉的索引鍵）。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "使用者沒有必要的登錄權限。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "使用者沒有刪除機碼所需的權限。"
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.DeleteValue(System.String)
  id: DeleteValue(System.String)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: DeleteValue(String)
  nameWithType: RegistryKey.DeleteValue(String)
  fullName: Microsoft.Win32.RegistryKey.DeleteValue(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "此機碼中刪除指定的值。"
  remarks: "在 Windows 95、 Windows 98、 Windows 98 Second Edition、 和 Windows Millennium Edition 上指定為空字串。`name`參數不會刪除預設值。"
  example:
  - "This code example is part of a larger example provided for the <xref:Microsoft.Win32.RegistryKey> class.  \n  \n [!code-cpp[Microsoft.Win32.RegistryKey2#3](~/add/codesnippet/cpp/m-microsoft.win32.regist_13_1.cpp)]\n [!code-cs[Microsoft.Win32.RegistryKey2#3](~/add/codesnippet/csharp/m-microsoft.win32.regist_13_1.cs)]\n [!code-vb[Microsoft.Win32.RegistryKey2#3](~/add/codesnippet/visualbasic/m-microsoft.win32.regist_13_1.vb)]"
  syntax:
    content: public void DeleteValue (string name);
    parameters:
    - id: name
      type: System.String
      description: "要刪除之值的名稱。"
  overload: Microsoft.Win32.RegistryKey.DeleteValue*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>name</code>不是值的有效參考。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "使用者沒有刪除值所需的權限。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref>操作已關閉 （不能存取已關閉的索引鍵）。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref>操作是唯讀的。"
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.DeleteValue(System.String,System.Boolean)
  id: DeleteValue(System.String,System.Boolean)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: DeleteValue(String,Boolean)
  nameWithType: RegistryKey.DeleteValue(String,Boolean)
  fullName: Microsoft.Win32.RegistryKey.DeleteValue(String,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "刪除指定的值從這個機碼，並且指定找不到值時，是否引發例外狀況。"
  remarks: "如果`throwOnMissingValue`是`false`，沒有任何方式可以分辨刪除作業是否成功，但不會接著嘗試存取的值將它刪除。 因此，小心時刪除這種方式中的登錄值。       在 Windows 95、 Windows 98、 Windows 98 Second Edition、 和 Windows Millennium Edition 上指定為空字串。`name`參數不會刪除預設值。"
  syntax:
    content: public void DeleteValue (string name, bool throwOnMissingValue);
    parameters:
    - id: name
      type: System.String
      description: "要刪除之值的名稱。"
    - id: throwOnMissingValue
      type: System.Boolean
      description: "表示是否找不到指定的值時，是否引發例外狀況。 如果這個引數是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>和指定的值不存在，會引發例外狀況。 如果這個引數是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>和指定的值不存在，會採取任何動作。"
  overload: Microsoft.Win32.RegistryKey.DeleteValue*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>name</code>不是有效的值參考和<code>throwOnMissingValue</code>是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。       -or-       <code>name</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "使用者沒有刪除值所需的權限。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref>操作已關閉 （不能存取已關閉的索引鍵）。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref>操作是唯讀的。"
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.Dispose
  id: Dispose
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: Dispose()
  nameWithType: RegistryKey.Dispose()
  fullName: Microsoft.Win32.RegistryKey.Dispose()
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "目前的執行個體所使用的資源全部釋出<xref href=&quot;Microsoft.Win32.RegistryKey&quot;></xref>類別。"
  remarks: "呼叫`Dispose`當您完成使用<xref:Microsoft.Win32.RegistryKey>.</xref:Microsoft.Win32.RegistryKey> `Dispose`方法會使<xref:Microsoft.Win32.RegistryKey>中無法使用的狀態。</xref:Microsoft.Win32.RegistryKey> 在呼叫`Dispose`，您必須釋放所有參考<xref:Microsoft.Win32.RegistryKey>讓記憶體回收行程可以回收記憶體的<xref:Microsoft.Win32.RegistryKey>所佔用。</xref:Microsoft.Win32.RegistryKey> </xref:Microsoft.Win32.RegistryKey>       如需詳細資訊，請參閱[清除 Unmanaged 資源上](~/add/includes/ajax-current-ext-md.md)和[實作 Dispose 方法](~/add/includes/ajax-current-ext-md.md)。      > [!NOTE] > 永遠呼叫`Dispose`釋放您的最後一個參考至<xref:Microsoft.Win32.RegistryKey>。</xref:Microsoft.Win32.RegistryKey>之前 否則，它所使用的資源將不會釋放直到記憶體回收行程呼叫<xref:Microsoft.Win32.RegistryKey>物件的`Finalize`方法。</xref:Microsoft.Win32.RegistryKey>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: Microsoft.Win32.RegistryKey.Dispose*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.Flush
  id: Flush
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: Flush()
  nameWithType: RegistryKey.Flush()
  fullName: Microsoft.Win32.RegistryKey.Flush()
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "將指定的開啟登錄機碼的所有屬性都寫入至登錄。"
  remarks: "不需要呼叫`Flush`寫出機碼的變更。 登錄變更會排清到磁碟時登錄會使用其延遲的清除。 延遲排清，就會發生自動並定期在系統指定的時間間隔之後。 登錄變更也會排清至磁碟的系統關機。       不同於<xref:Microsoft.Win32.RegistryKey.Close%2A>、`Flush`函式會傳回所有資料都寫入登錄時，才。</xref:Microsoft.Win32.RegistryKey.Close%2A>       `Flush`函式也可能會寫出的部分或全部的索引鍵。 過度呼叫這個函式可以有應用程式效能的負面影響。       應用程式應該只呼叫`Flush`如果必須是絕對特定登錄變更會記錄至磁碟。 一般情況下，`Flush`很少，如果有的話，必須使用。"
  syntax:
    content: public void Flush ();
    parameters: []
  overload: Microsoft.Win32.RegistryKey.Flush*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.FromHandle(Microsoft.Win32.SafeHandles.SafeRegistryHandle)
  id: FromHandle(Microsoft.Win32.SafeHandles.SafeRegistryHandle)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: FromHandle(SafeRegistryHandle)
  nameWithType: RegistryKey.FromHandle(SafeRegistryHandle)
  fullName: Microsoft.Win32.RegistryKey.FromHandle(SafeRegistryHandle)
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "從指定的控制代碼建立登錄機碼。"
  syntax:
    content: public static Microsoft.Win32.RegistryKey FromHandle (Microsoft.Win32.SafeHandles.SafeRegistryHandle handle);
    parameters:
    - id: handle
      type: Microsoft.Win32.SafeHandles.SafeRegistryHandle
      description: "登錄機碼控制代碼。"
    return:
      type: Microsoft.Win32.RegistryKey
      description: "登錄機碼。"
  overload: Microsoft.Win32.RegistryKey.FromHandle*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>handle</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "使用者沒有必要的登錄權限。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "使用者沒有執行此動作所需的權限。"
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.FromHandle(Microsoft.Win32.SafeHandles.SafeRegistryHandle,Microsoft.Win32.RegistryView)
  id: FromHandle(Microsoft.Win32.SafeHandles.SafeRegistryHandle,Microsoft.Win32.RegistryView)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: FromHandle(SafeRegistryHandle,RegistryView)
  nameWithType: RegistryKey.FromHandle(SafeRegistryHandle,RegistryView)
  fullName: Microsoft.Win32.RegistryKey.FromHandle(SafeRegistryHandle,RegistryView)
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "從指定的控制代碼和登錄檢視設定，請建立登錄機碼。"
  remarks: "`view`後續作業，例如開啟子機碼中使用這個方法的參數。       如果`view`是<xref:Microsoft.Win32.RegistryView>但電腦正在執行 32 位元作業系統，將會使用傳回的索引鍵<xref:Microsoft.Win32.RegistryView>檢視。</xref:Microsoft.Win32.RegistryView> </xref:Microsoft.Win32.RegistryView>"
  syntax:
    content: public static Microsoft.Win32.RegistryKey FromHandle (Microsoft.Win32.SafeHandles.SafeRegistryHandle handle, Microsoft.Win32.RegistryView view);
    parameters:
    - id: handle
      type: Microsoft.Win32.SafeHandles.SafeRegistryHandle
      description: "登錄機碼控制代碼。"
    - id: view
      type: Microsoft.Win32.RegistryView
      description: "要使用的登錄檢視。"
    return:
      type: Microsoft.Win32.RegistryKey
      description: "登錄機碼。"
  overload: Microsoft.Win32.RegistryKey.FromHandle*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>view</code>不正確。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>handle</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "使用者沒有必要的登錄權限。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "使用者沒有執行此動作所需的權限。"
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.GetAccessControl
  id: GetAccessControl
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: GetAccessControl()
  nameWithType: RegistryKey.GetAccessControl()
  fullName: Microsoft.Win32.RegistryKey.GetAccessControl()
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "傳回目前登錄機碼的存取控制安全性。"
  remarks: "這個方法多載就相當於呼叫<xref:Microsoft.Win32.RegistryKey.GetAccessControl%28System.Security.AccessControl.AccessControlSections%29>方法多載具有下列旗標的位元組合︰ <xref:System.Security.AccessControl.AccessControlSections?displayProperty=fullName>， <xref:System.Security.AccessControl.AccessControlSections?displayProperty=fullName>，和<xref:System.Security.AccessControl.AccessControlSections?displayProperty=fullName>。</xref:System.Security.AccessControl.AccessControlSections?displayProperty=fullName> </xref:System.Security.AccessControl.AccessControlSections?displayProperty=fullName> </xref:System.Security.AccessControl.AccessControlSections?displayProperty=fullName> </xref:Microsoft.Win32.RegistryKey.GetAccessControl%28System.Security.AccessControl.AccessControlSections%29> 若要搜尋的其他權限，您可以使用該多載。       使用者必須擁有<xref:System.Security.AccessControl.RegistryRights?displayProperty=fullName>權限，才能呼叫此方法。</xref:System.Security.AccessControl.RegistryRights?displayProperty=fullName>"
  syntax:
    content: public System.Security.AccessControl.RegistrySecurity GetAccessControl ();
    parameters: []
    return:
      type: System.Security.AccessControl.RegistrySecurity
      description: "物件，表示由目前的登錄機碼中描述的存取控制權限<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref>。"
  overload: Microsoft.Win32.RegistryKey.GetAccessControl*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "使用者沒有必要的權限。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref>操作已關閉 （不能存取已關閉的索引鍵）。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "目前的索引鍵已被刪除。"
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.GetAccessControl(System.Security.AccessControl.AccessControlSections)
  id: GetAccessControl(System.Security.AccessControl.AccessControlSections)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: GetAccessControl(AccessControlSections)
  nameWithType: RegistryKey.GetAccessControl(AccessControlSections)
  fullName: Microsoft.Win32.RegistryKey.GetAccessControl(AccessControlSections)
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "傳回目前登錄機碼的存取控制安全性的指定的區段。"
  remarks: "若要求目前使用者授與的存取權限，請指定下列旗標的位元組合︰ <xref:System.Security.AccessControl.AccessControlSections?displayProperty=fullName>， <xref:System.Security.AccessControl.AccessControlSections?displayProperty=fullName>，和<xref:System.Security.AccessControl.AccessControlSections?displayProperty=fullName>。</xref:System.Security.AccessControl.AccessControlSections?displayProperty=fullName> </xref:System.Security.AccessControl.AccessControlSections?displayProperty=fullName> </xref:System.Security.AccessControl.AccessControlSections?displayProperty=fullName> 或者，您可以使用<xref:Microsoft.Win32.RegistryKey.GetAccessControl>方法多載，指定確切的值組合。</xref:Microsoft.Win32.RegistryKey.GetAccessControl>       使用者必須擁有<xref:System.Security.AccessControl.RegistryRights?displayProperty=fullName>權限，才能呼叫此方法。</xref:System.Security.AccessControl.RegistryRights?displayProperty=fullName>"
  syntax:
    content: public System.Security.AccessControl.RegistrySecurity GetAccessControl (System.Security.AccessControl.AccessControlSections includeSections);
    parameters:
    - id: includeSections
      type: System.Security.AccessControl.AccessControlSections
      description: "列舉值的位元組合，指定要取得的安全性資訊的類型。"
    return:
      type: System.Security.AccessControl.RegistrySecurity
      description: "物件，表示由目前的登錄機碼中描述的存取控制權限<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref>。"
  overload: Microsoft.Win32.RegistryKey.GetAccessControl*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "使用者沒有必要的權限。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref>操作已關閉 （不能存取已關閉的索引鍵）。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "目前的索引鍵已被刪除。"
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.GetSubKeyNames
  id: GetSubKeyNames
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: GetSubKeyNames()
  nameWithType: RegistryKey.GetSubKeyNames()
  fullName: Microsoft.Win32.RegistryKey.GetSubKeyNames()
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "擷取包含所有子機碼名稱的字串陣列。"
  remarks: "這個方法會以遞迴方式尋找名稱。 它會傳回呼叫它的基底層級的名稱。"
  example:
  - "This code example is part of a larger example provided for the <xref:Microsoft.Win32.RegistryKey> class.  \n  \n [!code-cpp[Microsoft.Win32.RegistryKey2#2](~/add/codesnippet/cpp/m-microsoft.win32.regist_7_1.cpp)]\n [!code-cs[Microsoft.Win32.RegistryKey2#2](~/add/codesnippet/csharp/m-microsoft.win32.regist_7_1.cs)]\n [!code-vb[Microsoft.Win32.RegistryKey2#2](~/add/codesnippet/visualbasic/m-microsoft.win32.regist_7_1.vb)]"
  syntax:
    content: public string[] GetSubKeyNames ();
    parameters: []
    return:
      type: System.String[]
      description: "字串陣列，包含目前機碼的子機碼名稱。"
  overload: Microsoft.Win32.RegistryKey.GetSubKeyNames*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "使用者沒有讀取機碼所需的權限。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref>操作已關閉 （不能存取已關閉的索引鍵）。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "使用者沒有必要的登錄權限。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "發生系統錯誤，例如目前的索引鍵已被刪除。"
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.GetValue(System.String)
  id: GetValue(System.String)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: GetValue(String)
  nameWithType: RegistryKey.GetValue(String)
  fullName: Microsoft.Win32.RegistryKey.GetValue(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "擷取具有指定名稱相關聯的值。 傳回<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果名稱/值組不存在登錄中。"
  remarks: "> [!NOTE]> 登錄機碼可以有一個不是任何名稱相關聯的值。 當這個未命名的值顯示在登錄編輯程式中時，字串 「 （預設） 」 會顯示而不是名稱。 若要擷取這個未命名的值，指定`null`或空字串 (&quot;&quot;) 的`name`。       GetValue 方法時擷取可擴充的字串值 (<xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName>)，它會展開環境字串使用本機的環境中的資料。</xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName> 若要從遠端電腦上的登錄中擷取可擴充的字串值，請使用<xref:Microsoft.Win32.RegistryKey.GetValue%28System.String%2CSystem.Object%2CMicrosoft.Win32.RegistryValueOptions%29>方法多載來指定您不要展開環境字串。</xref:Microsoft.Win32.RegistryKey.GetValue%28System.String%2CSystem.Object%2CMicrosoft.Win32.RegistryValueOptions%29>      > [!NOTE] > 如果值，其中包含可展開環境變數參考已儲存為字串 (<xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName>)，而不是可擴充的字串 (<xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName>)，GetValue 不會展開該</xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName></xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName> 已擷取透過呼叫之後，您可以展開此類字串<xref:System.Environment.ExpandEnvironmentVariables%2A>方法。</xref:System.Environment.ExpandEnvironmentVariables%2A>      > [!NOTE] > 從中擷取資料的建議的方式<xref:Microsoft.Win32.Registry.PerformanceData>金鑰是使用<xref:System.Diagnostics.PerformanceCounter>類別而非<xref:Microsoft.Win32.RegistryKey.GetValue%2A?displayProperty=fullName>方法。</xref:Microsoft.Win32.RegistryKey.GetValue%2A?displayProperty=fullName> </xref:System.Diagnostics.PerformanceCounter> </xref:Microsoft.Win32.Registry.PerformanceData>   >> GetValue 不支援型別 REG_NONE 或 REG_LINK 讀取的值。  在這兩種情況下，預設值 (`null`) 會傳回而不是實際的值。"
  example:
  - "The following code example creates a test key and adds values of different data types to the key. The example then reads the name/value pairs and displays them to the console, using the <xref:Microsoft.Win32.RegistryKey.GetValueKind%2A> method to retrieve the corresponding registry data types.  \n  \n [!code-cpp[Microsoft.Win32.RegistryValueKind#1](~/add/codesnippet/cpp/m-microsoft.win32.regist_3_1.cpp)]\n [!code-cs[Microsoft.Win32.RegistryValueKind#1](~/add/codesnippet/csharp/m-microsoft.win32.regist_3_1.cs)]\n [!code-vb[Microsoft.Win32.RegistryValueKind#1](~/add/codesnippet/visualbasic/m-microsoft.win32.regist_3_1.vb)]"
  syntax:
    content: public object GetValue (string name);
    parameters:
    - id: name
      type: System.String
      description: "要擷取之值的名稱。 這個字串不區分大小寫。"
    return:
      type: System.Object
      description: "與相關聯的值<code> name </code>，或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果<code> name </code>找不到。"
  overload: Microsoft.Win32.RegistryKey.GetValue*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "使用者沒有讀取登錄機碼所需的權限。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref> ，其中包含指定值已關閉 （不能存取已關閉的索引鍵）。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref> ，其中包含指定值已標示為刪除。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "使用者沒有必要的登錄權限。"
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.GetValue(System.String,System.Object)
  id: GetValue(System.String,System.Object)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: GetValue(String,Object)
  nameWithType: RegistryKey.GetValue(String,Object)
  fullName: Microsoft.Win32.RegistryKey.GetValue(String,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "擷取具有指定名稱相關聯的值。 如果找不到名稱，會傳回您提供的預設值。"
  remarks: "使用此多載的<xref:Microsoft.Win32.RegistryKey.GetValue%2A>以處理其中一個名稱尚未存在的情況 — 例如，第一次執行應用程式。</xref:Microsoft.Win32.RegistryKey.GetValue%2A> 每當您呼叫這個多載時，使用`defaultValue`參數來指定要傳回的值`name`不存在。      > [!NOTE] > 登錄機碼可以有一個不是任何名稱相關聯的值。 當這個未命名的值顯示在登錄編輯程式中時，字串 「 （預設） 」 會顯示而不是名稱。 若要擷取這個未命名的值，指定`null`或空字串 (&quot;&quot;) 的`name`。       當<xref:Microsoft.Win32.RegistryKey.GetValue%2A>方法會擷取可擴充的字串值 (<xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName>)，它會展開環境字串使用本機的環境中的資料。</xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName> </xref:Microsoft.Win32.RegistryKey.GetValue%2A> 若要從遠端電腦上的登錄中擷取可擴充的字串值，請使用<xref:Microsoft.Win32.RegistryKey.GetValue%2A>多載來指定您不要展開環境字串。</xref:Microsoft.Win32.RegistryKey.GetValue%2A>      > [!NOTE] > 如果值，其中包含可展開環境變數參考已儲存為字串 (<xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName>)，而不是可擴充的字串 (<xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName>)，<xref:Microsoft.Win32.RegistryKey.GetValue%2A>方法不會展開該</xref:Microsoft.Win32.RegistryKey.GetValue%2A></xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName></xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName> 已擷取透過呼叫之後，您可以展開此類字串<xref:System.Environment.ExpandEnvironmentVariables%2A>方法。</xref:System.Environment.ExpandEnvironmentVariables%2A>      > [!NOTE] > 從中擷取資料的建議的方式<xref:Microsoft.Win32.Registry.PerformanceData>金鑰是使用<xref:System.Diagnostics.PerformanceCounter>類別而非<xref:Microsoft.Win32.RegistryKey.GetValue%2A?displayProperty=fullName>方法。</xref:Microsoft.Win32.RegistryKey.GetValue%2A?displayProperty=fullName> </xref:System.Diagnostics.PerformanceCounter> </xref:Microsoft.Win32.Registry.PerformanceData>   >> GetValue 不支援型別 REG_NONE 或 REG_LINK 讀取的值。  在這兩種情況下，預設值 (`null`) 會傳回而不是實際的值。"
  example:
  - "The following code example creates a test key with a value and retrieves that value. The example then attempts to retrieve a nonexistent value from the key; in this case the GetValue method returns the specified default value.  \n  \n [!code-cs[Classic RegistryKey.GetValue Example#1](~/add/codesnippet/csharp/m-microsoft.win32.regist_6_1.cs)]\n [!code-cpp[Classic RegistryKey.GetValue Example#1](~/add/codesnippet/cpp/m-microsoft.win32.regist_6_1.cpp)]\n [!code-vb[Classic RegistryKey.GetValue Example#1](~/add/codesnippet/visualbasic/m-microsoft.win32.regist_6_1.vb)]"
  syntax:
    content: public object GetValue (string name, object defaultValue);
    parameters:
    - id: name
      type: System.String
      description: "要擷取之值的名稱。 這個字串不區分大小寫。"
    - id: defaultValue
      type: System.Object
      description: "如果傳回值`name`不存在。"
    return:
      type: System.Object
      description: "與相關聯的值<code> name </code>，與任何內嵌環境變數未向左展開，或<code> defaultValue </code>如果<code> name </code>找不到。"
  overload: Microsoft.Win32.RegistryKey.GetValue*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "使用者沒有讀取登錄機碼所需的權限。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref> ，其中包含指定值已關閉 （不能存取已關閉的索引鍵）。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref> ，其中包含指定值已標示為刪除。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "使用者沒有必要的登錄權限。"
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.GetValue(System.String,System.Object,Microsoft.Win32.RegistryValueOptions)
  id: GetValue(System.String,System.Object,Microsoft.Win32.RegistryValueOptions)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: GetValue(String,Object,RegistryValueOptions)
  nameWithType: RegistryKey.GetValue(String,Object,RegistryValueOptions)
  fullName: Microsoft.Win32.RegistryKey.GetValue(String,Object,RegistryValueOptions)
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "擷取與指定的名稱及擷取選項關聯的值。 如果找不到名稱，會傳回您提供的預設值。"
  remarks: "您可以使用這個多載來指定擷取值的特殊處理。 例如，您可以指定<xref:Microsoft.Win32.RegistryValueOptions?displayProperty=fullName>擷取類型的登錄值時<xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName>擷取字串，而不會擴充內嵌的環境變數。</xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName> </xref:Microsoft.Win32.RegistryValueOptions?displayProperty=fullName>       使用`defaultValue`參數來指定要傳回的值`name`不存在。      > [!NOTE] > 登錄機碼可以有一個不是任何名稱相關聯的值。 當這個未命名的值顯示在登錄編輯程式中時，字串 「 （預設） 」 會顯示而不是名稱。 若要擷取這個未命名的值，指定`null`或空字串 (&quot;&quot;) 的`name`。   >> GetValue 不支援型別 REG_NONE 或 REG_LINK 讀取的值。  在這兩種情況下，預設值 (`null`) 會傳回而不是實際的值。"
  example:
  - "The following code sample creates a test key, adds a value with an embedded environment variable, and retrieves the value in both expanded and unexpanded forms.  \n  \n [!code-cs[RegistryValueOptions#1](~/add/codesnippet/csharp/0ecb41d1-0eb1-4d34-96b2-_1.cs)]\n [!code-cpp[RegistryValueOptions#1](~/add/codesnippet/cpp/0ecb41d1-0eb1-4d34-96b2-_1.cpp)]\n [!code-vb[RegistryValueOptions#1](~/add/codesnippet/visualbasic/0ecb41d1-0eb1-4d34-96b2-_1.vb)]"
  syntax:
    content: public object GetValue (string name, object defaultValue, Microsoft.Win32.RegistryValueOptions options);
    parameters:
    - id: name
      type: System.String
      description: "要擷取之值的名稱。 這個字串不區分大小寫。"
    - id: defaultValue
      type: System.Object
      description: "如果傳回值`name`不存在。"
    - id: options
      type: Microsoft.Win32.RegistryValueOptions
      description: "其中一個列舉值，指定擷取值的選擇性處理。"
    return:
      type: System.Object
      description: "與相關聯的值<code> name </code>、 根據指定的處理<code> options </code>，或<code> defaultValue </code>如果<code> name </code>找不到。"
  overload: Microsoft.Win32.RegistryKey.GetValue*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "使用者沒有讀取登錄機碼所需的權限。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref> ，其中包含指定值已關閉 （不能存取已關閉的索引鍵）。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref> ，其中包含指定值已標示為刪除。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>options</code>不是有效<xref href=&quot;Microsoft.Win32.RegistryValueOptions&quot;></xref>值; 例如，無效的值會轉換成<xref href=&quot;Microsoft.Win32.RegistryValueOptions&quot;> </xref>。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "使用者沒有必要的登錄權限。"
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.GetValueKind(System.String)
  id: GetValueKind(System.String)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: GetValueKind(String)
  nameWithType: RegistryKey.GetValueKind(String)
  fullName: Microsoft.Win32.RegistryKey.GetValueKind(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "擷取具有指定名稱相關聯的值的登錄資料類型。"
  remarks: "> [!NOTE]> 登錄機碼可以有一個不是任何名稱相關聯的值。 當這個未命名的值顯示在登錄編輯程式中時，字串 「 （預設） 」 會顯示而不是名稱。 若要擷取的登錄資料類型未命名的值，指定`null`或空字串 (&quot;&quot;) 的`name`。       如需支援的登錄資料類型的說明，請參閱<xref:Microsoft.Win32.RegistryValueKind>列舉型別。</xref:Microsoft.Win32.RegistryValueKind>"
  example:
  - "The following code example creates a test key and adds values of different data types to the key. The example then reads the name/value pairs and displays them to the console, using the GetValueKind method to retrieve the corresponding registry data types.  \n  \n [!code-cpp[Microsoft.Win32.RegistryValueKind#1](~/add/codesnippet/cpp/m-microsoft.win32.regist_0_1.cpp)]\n [!code-cs[Microsoft.Win32.RegistryValueKind#1](~/add/codesnippet/csharp/m-microsoft.win32.regist_0_1.cs)]\n [!code-vb[Microsoft.Win32.RegistryValueKind#1](~/add/codesnippet/visualbasic/m-microsoft.win32.regist_0_1.vb)]"
  syntax:
    content: public Microsoft.Win32.RegistryValueKind GetValueKind (string name);
    parameters:
    - id: name
      type: System.String
      description: "要擷取其登錄資料類型值的名稱。 這個字串不區分大小寫。"
    return:
      type: Microsoft.Win32.RegistryValueKind
      description: "與相關聯的值的登錄資料型別<code> name </code>。"
  overload: Microsoft.Win32.RegistryKey.GetValueKind*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "使用者沒有讀取登錄機碼所需的權限。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref> ，其中包含指定值已關閉 （不能存取已關閉的索引鍵）。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "包含指定的值的子機碼不存在。       -依指定的名稱/值組<code> name </code>不存在。       在 Windows 95、 Windows 98 或 Windows Millennium Edition 上，才會擲回這個例外狀況。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "使用者沒有必要的登錄權限。"
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.GetValueNames
  id: GetValueNames
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: GetValueNames()
  nameWithType: RegistryKey.GetValueNames()
  fullName: Microsoft.Win32.RegistryKey.GetValueNames()
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "擷取包含這個索引鍵相關聯的所有值名稱的字串陣列。"
  remarks: "如果找不到任何索引鍵的值名稱，則會傳回空陣列。       登錄機碼可以有預設值 — 也就是名稱/值組的名稱是空字串 (&quot;&quot;)。 如果已設定預設值的登錄機碼，GetValueNames 方法所傳回的陣列會包含空字串。"
  example:
  - "This code example is part of a larger example provided for the <xref:Microsoft.Win32.RegistryKey> class.  \n  \n [!code-cpp[Microsoft.Win32.RegistryKey2#2](~/add/codesnippet/cpp/m-microsoft.win32.regist_2_1.cpp)]\n [!code-cs[Microsoft.Win32.RegistryKey2#2](~/add/codesnippet/csharp/m-microsoft.win32.regist_2_1.cs)]\n [!code-vb[Microsoft.Win32.RegistryKey2#2](~/add/codesnippet/visualbasic/m-microsoft.win32.regist_2_1.vb)]"
  syntax:
    content: public string[] GetValueNames ();
    parameters: []
    return:
      type: System.String[]
      description: "字串陣列，其中包含目前的索引鍵的值名稱。"
  overload: Microsoft.Win32.RegistryKey.GetValueNames*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "使用者沒有讀取登錄機碼所需的權限。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref>操作已關閉 （不能存取已關閉的索引鍵）。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "使用者沒有必要的登錄權限。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "發生系統錯誤。例如，目前的索引鍵已被刪除。"
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.Handle
  id: Handle
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: Handle
  nameWithType: RegistryKey.Handle
  fullName: Microsoft.Win32.RegistryKey.Handle
  type: Property
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "取得<xref href=&quot;Microsoft.Win32.SafeHandles.SafeRegistryHandle&quot;></xref>物件，代表登錄機碼的目前<xref href=&quot;Microsoft.Win32.RegistryKey&quot;></xref>物件封裝。"
  syntax:
    content: public Microsoft.Win32.SafeHandles.SafeRegistryHandle Handle { get; }
    return:
      type: Microsoft.Win32.SafeHandles.SafeRegistryHandle
      description: "登錄機碼控制代碼。"
  overload: Microsoft.Win32.RegistryKey.Handle*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "登錄機碼已關閉。 無法存取已關閉的索引鍵。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "使用者沒有必要的登錄權限。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "發生系統錯誤，例如刪除目前的索引鍵。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "使用者沒有讀取機碼所需的權限。"
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.Name
  id: Name
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: Name
  nameWithType: RegistryKey.Name
  fullName: Microsoft.Win32.RegistryKey.Name
  type: Property
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "擷取索引鍵的名稱。"
  remarks: "索引鍵名稱在登錄中，開始在基底的索引鍵，例如 HKEY_LOCAL_MACHINE 包含此機碼的絕對路徑。"
  example:
  - "This code example is part of a larger example provided for the <xref:Microsoft.Win32.RegistryKey> class.  \n  \n [!code-cpp[Microsoft.Win32.RegistryKey2#4](~/add/codesnippet/cpp/p-microsoft.win32.regist_0_1.cpp)]\n [!code-cs[Microsoft.Win32.RegistryKey2#4](~/add/codesnippet/csharp/p-microsoft.win32.regist_0_1.cs)]\n [!code-vb[Microsoft.Win32.RegistryKey2#4](~/add/codesnippet/visualbasic/p-microsoft.win32.regist_0_1.vb)]"
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "索引鍵的絕對 （限定） 名稱。"
  overload: Microsoft.Win32.RegistryKey.Name*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref>已關閉 （不能存取已關閉的索引鍵）。"
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.OpenBaseKey(Microsoft.Win32.RegistryHive,Microsoft.Win32.RegistryView)
  id: OpenBaseKey(Microsoft.Win32.RegistryHive,Microsoft.Win32.RegistryView)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: OpenBaseKey(RegistryHive,RegistryView)
  nameWithType: RegistryKey.OpenBaseKey(RegistryHive,RegistryView)
  fullName: Microsoft.Win32.RegistryKey.OpenBaseKey(RegistryHive,RegistryView)
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "開啟新<xref href=&quot;Microsoft.Win32.RegistryKey&quot;></xref>代表使用指定的檢視在本機電腦上要求的索引鍵。"
  syntax:
    content: public static Microsoft.Win32.RegistryKey OpenBaseKey (Microsoft.Win32.RegistryHive hKey, Microsoft.Win32.RegistryView view);
    parameters:
    - id: hKey
      type: Microsoft.Win32.RegistryHive
      description: "要開啟的 HKEY。"
    - id: view
      type: Microsoft.Win32.RegistryView
      description: "要使用的登錄檢視。"
    return:
      type: Microsoft.Win32.RegistryKey
      description: "要求的登錄機碼。"
  overload: Microsoft.Win32.RegistryKey.OpenBaseKey*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>hKey</code>或<code>view</code>無效。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "使用者沒有必要的登錄權限。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "使用者沒有執行此動作所需的權限。"
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.OpenRemoteBaseKey(Microsoft.Win32.RegistryHive,System.String)
  id: OpenRemoteBaseKey(Microsoft.Win32.RegistryHive,System.String)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: OpenRemoteBaseKey(RegistryHive,String)
  nameWithType: RegistryKey.OpenRemoteBaseKey(RegistryHive,String)
  fullName: Microsoft.Win32.RegistryKey.OpenRemoteBaseKey(RegistryHive,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "開啟新<xref href=&quot;Microsoft.Win32.RegistryKey&quot;></xref>代表要求在遠端電腦上的索引鍵。"
  remarks: "如果開啟本機電腦登錄`machineName`為<xref:System.String?displayProperty=fullName>。</xref:System.String?displayProperty=fullName> 要求的索引鍵必須是遠端電腦上的根金鑰，而且由適當<xref:Microsoft.Win32.RegistryHive>值。</xref:Microsoft.Win32.RegistryHive>       為了讓遠端開啟的索引鍵，在伺服器和用戶端電腦必須執行遠端登錄服務，並啟用遠端管理。"
  example:
  - "The following code example shows how to open a registry key on a remote computer and enumerate the values of the key. The remote computer must be running the remote registry service. Specify the name of the remote computer as a command-line argument when invoking the program.  \n  \n [!code-cpp[Microsoft.Win32.RegistryKey.OpenRemoteBaseKey#1](~/add/codesnippet/cpp/e08e963c-edd7-45e7-b967-_1.cpp)]\n [!code-cs[Microsoft.Win32.RegistryKey.OpenRemoteBaseKey#1](~/add/codesnippet/csharp/e08e963c-edd7-45e7-b967-_1.cs)]\n [!code-vb[Microsoft.Win32.RegistryKey.OpenRemoteBaseKey#1](~/add/codesnippet/visualbasic/e08e963c-edd7-45e7-b967-_1.vb)]"
  syntax:
    content: public static Microsoft.Win32.RegistryKey OpenRemoteBaseKey (Microsoft.Win32.RegistryHive hKey, string machineName);
    parameters:
    - id: hKey
      type: Microsoft.Win32.RegistryHive
      description: "若要開啟，HKEY 從<xref href=&quot;Microsoft.Win32.RegistryHive&quot;></xref>列舉型別。"
    - id: machineName
      type: System.String
      description: "遠端電腦。"
    return:
      type: Microsoft.Win32.RegistryKey
      description: "要求的登錄機碼。"
  overload: Microsoft.Win32.RegistryKey.OpenRemoteBaseKey*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>hKey</code>不正確。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<code>machineName</code>找不到。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>machineName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "使用者沒有適當的權限執行這項作業。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "使用者沒有必要的登錄權限。"
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.OpenRemoteBaseKey(Microsoft.Win32.RegistryHive,System.String,Microsoft.Win32.RegistryView)
  id: OpenRemoteBaseKey(Microsoft.Win32.RegistryHive,System.String,Microsoft.Win32.RegistryView)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: OpenRemoteBaseKey(RegistryHive,String,RegistryView)
  nameWithType: RegistryKey.OpenRemoteBaseKey(RegistryHive,String,RegistryView)
  fullName: Microsoft.Win32.RegistryKey.OpenRemoteBaseKey(RegistryHive,String,RegistryView)
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "開啟新的登錄機碼，表示使用指定的檢視遠端電腦上要求的索引鍵。"
  remarks: "如果開啟本機電腦登錄`machineName`為<xref:System.String?displayProperty=fullName>。</xref:System.String?displayProperty=fullName> 要求的索引鍵必須是遠端電腦上的根金鑰，而且由適當<xref:Microsoft.Win32.RegistryHive>值。</xref:Microsoft.Win32.RegistryHive>       為了讓遠端開啟的索引鍵，在伺服器和用戶端電腦必須執行遠端登錄服務，並啟用遠端管理。       在 64 位元版本的 Windows 中，登錄的一部分會分別儲存 32 位元和 64 位元應用程式。 沒有 32 位元應用程式的檢視 32 位元和 64 位元應用程式的 64 位元檢視。 如果`view`是<xref:Microsoft.Win32.RegistryView>但遠端機器正在執行 32 位元作業系統，將會使用傳回的索引鍵<xref:Microsoft.Win32.RegistryView>檢視。</xref:Microsoft.Win32.RegistryView> </xref:Microsoft.Win32.RegistryView>"
  syntax:
    content: public static Microsoft.Win32.RegistryKey OpenRemoteBaseKey (Microsoft.Win32.RegistryHive hKey, string machineName, Microsoft.Win32.RegistryView view);
    parameters:
    - id: hKey
      type: Microsoft.Win32.RegistryHive
      description: "若要從開啟的 HKEY <xref href=&quot;Microsoft.Win32.RegistryHive&quot;> </xref>列舉..."
    - id: machineName
      type: System.String
      description: "遠端電腦。"
    - id: view
      type: Microsoft.Win32.RegistryView
      description: "要使用的登錄檢視。"
    return:
      type: Microsoft.Win32.RegistryKey
      description: "要求的登錄機碼。"
  overload: Microsoft.Win32.RegistryKey.OpenRemoteBaseKey*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>hKey</code>或<code>view</code>無效。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<code>machineName</code>找不到。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>machineName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "使用者沒有必要的登錄權限。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "使用者沒有執行這項作業的必要權限。"
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.OpenSubKey(System.String)
  id: OpenSubKey(System.String)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: OpenSubKey(String)
  nameWithType: RegistryKey.OpenSubKey(String)
  fullName: Microsoft.Win32.RegistryKey.OpenSubKey(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "擷取子機碼為唯讀。"
  remarks: "可以使用其他方法和屬性來管理之前，您必須開啟金鑰。 若要修改的機碼，您必須開啟的多載它<xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A>方法，可讓您指定寫入權限，例如<xref:Microsoft.Win32.RegistryKey.OpenSubKey%28System.String%2CMicrosoft.Win32.RegistryKeyPermissionCheck%29>多載或<xref:Microsoft.Win32.RegistryKey.OpenSubKey%28System.String%2CSystem.Boolean%29>多載。</xref:Microsoft.Win32.RegistryKey.OpenSubKey%28System.String%2CSystem.Boolean%29> </xref:Microsoft.Win32.RegistryKey.OpenSubKey%28System.String%2CMicrosoft.Win32.RegistryKeyPermissionCheck%29> </xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A>       如果指定的子機碼找不到然後`null`傳回。       若要使用 OpenSubKey 方法，您必須擁有<xref:Microsoft.Win32.RegistryKey>.</xref:Microsoft.Win32.RegistryKey>執行個體 若要取得執行個體<xref:Microsoft.Win32.RegistryKey>，請使用其中一種<xref:Microsoft.Win32.Registry>類別</xref:Microsoft.Win32.Registry>的靜態成員</xref:Microsoft.Win32.RegistryKey>"
  example:
  - "The following code example creates a test key and uses the <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> method to open it, demonstrating both overloads of the method.  \n  \n [!code-cs[RegistryKey.OpenSubKey#1](~/add/codesnippet/csharp/m-microsoft.win32.regist_11_1.cs)]\n [!code-vb[RegistryKey.OpenSubKey#1](~/add/codesnippet/visualbasic/m-microsoft.win32.regist_11_1.vb)]\n [!code-cpp[RegistryKey.OpenSubKey#1](~/add/codesnippet/cpp/m-microsoft.win32.regist_11_1.cpp)]"
  syntax:
    content: public Microsoft.Win32.RegistryKey OpenSubKey (string name);
    parameters:
    - id: name
      type: System.String
      description: "名稱或以唯讀方式開啟子機碼路徑。"
    return:
      type: Microsoft.Win32.RegistryKey
      description: "子機碼的要求，或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>作業失敗。"
  overload: Microsoft.Win32.RegistryKey.OpenSubKey*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref>已關閉 （不能存取已關閉的索引鍵）。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "使用者沒有讀取登錄機碼所需的權限。"
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.OpenSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck)
  id: OpenSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: OpenSubKey(String,RegistryKeyPermissionCheck)
  nameWithType: RegistryKey.OpenSubKey(String,RegistryKeyPermissionCheck)
  fullName: Microsoft.Win32.RegistryKey.OpenSubKey(String,RegistryKeyPermissionCheck)
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "擷取指定子機碼的讀取或讀取/寫入存取。"
  remarks: "這個方法會傳回而不是擲回例外狀況，`null`如果要求的索引鍵不存在。       如果`permissionCheck`是<xref:Microsoft.Win32.RegistryKeyPermissionCheck?displayProperty=fullName>，開啟機碼以進行讀取和寫入; 如果`permissionCheck` <xref:Microsoft.Win32.RegistryKeyPermissionCheck?displayProperty=fullName> <xref:Microsoft.Win32.RegistryKeyPermissionCheck?displayProperty=fullName>，除非以<xref:Microsoft.Win32.RegistryKeyPermissionCheck?displayProperty=fullName>.</xref:Microsoft.Win32.RegistryKeyPermissionCheck?displayProperty=fullName>開啟父索引鍵，開啟金鑰進行讀取</xref:Microsoft.Win32.RegistryKeyPermissionCheck?displayProperty=fullName></xref:Microsoft.Win32.RegistryKeyPermissionCheck?displayProperty=fullName>或</xref:Microsoft.Win32.RegistryKeyPermissionCheck?displayProperty=fullName>       若要使用<xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A>方法，您必須擁有的<xref:Microsoft.Win32.RegistryKey>類別</xref:Microsoft.Win32.RegistryKey>執行個體</xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> 若要取得執行個體<xref:Microsoft.Win32.RegistryKey>，請使用其中一個<xref:Microsoft.Win32.Registry>類別</xref:Microsoft.Win32.Registry>的靜態成員</xref:Microsoft.Win32.RegistryKey>"
  example:
  - "The following code example creates a subkey containing 100 key/value pairs and closes it. The example opens the subkey with <xref:Microsoft.Win32.RegistryKeyPermissionCheck>, records the time it takes to read all the values, and closes the subkey. The example opens the subkey with <xref:Microsoft.Win32.RegistryKeyPermissionCheck> and records the time it takes to read all the values. Finally, the example computes and displays the percentage improvement.  \n  \n [!code-cs[RegistryKey.OpenSubKey_PermCheck#1](~/add/codesnippet/csharp/1404fbf5-0fde-46f3-9877-_1.cs)]\n [!code-vb[RegistryKey.OpenSubKey_PermCheck#1](~/add/codesnippet/visualbasic/1404fbf5-0fde-46f3-9877-_1.vb)]"
  syntax:
    content: public Microsoft.Win32.RegistryKey OpenSubKey (string name, Microsoft.Win32.RegistryKeyPermissionCheck permissionCheck);
    parameters:
    - id: name
      type: System.String
      description: "名稱或路徑來建立或開啟之子機碼。"
    - id: permissionCheck
      type: Microsoft.Win32.RegistryKeyPermissionCheck
      description: "其中一個列舉值，指定是否要將索引鍵開啟以便讀取或讀取/寫入存取。"
    return:
      type: Microsoft.Win32.RegistryKey
      description: "子機碼的要求，或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>作業失敗。"
  overload: Microsoft.Win32.RegistryKey.OpenSubKey*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>permissionCheck</code>包含無效的值。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref>已關閉 （不能存取已關閉的索引鍵）。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "使用者沒有讀取登錄機碼所需的權限。"
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.OpenSubKey(System.String,System.Boolean)
  id: OpenSubKey(System.String,System.Boolean)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: OpenSubKey(String,Boolean)
  nameWithType: RegistryKey.OpenSubKey(String,Boolean)
  fullName: Microsoft.Win32.RegistryKey.OpenSubKey(String,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "擷取指定的子機碼，並指定寫入權限是否要套用至索引鍵。"
  remarks: "如果要求的索引鍵不存在，則這個方法會傳回`null`而不是擲回例外狀況。       如果`writable`是`true`、 進行讀取和寫入，將會開啟的機碼、 以唯讀方式開啟的機碼否則。       若要使用<xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A>方法，您必須擁有執行個體<xref:Microsoft.Win32.RegistryKey>方法。</xref:Microsoft.Win32.RegistryKey> </xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> 若要取得執行個體<xref:Microsoft.Win32.RegistryKey>，請使用其中一個<xref:Microsoft.Win32.Registry>類別</xref:Microsoft.Win32.Registry>的靜態成員</xref:Microsoft.Win32.RegistryKey>"
  example:
  - "The following code example creates a test key and uses the <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> method to open it, demonstrating both overloads of the method.  \n  \n [!code-cs[RegistryKey.OpenSubKey#1](~/add/codesnippet/csharp/m-microsoft.win32.regist_1_1.cs)]\n [!code-vb[RegistryKey.OpenSubKey#1](~/add/codesnippet/visualbasic/m-microsoft.win32.regist_1_1.vb)]\n [!code-cpp[RegistryKey.OpenSubKey#1](~/add/codesnippet/cpp/m-microsoft.win32.regist_1_1.cpp)]"
  syntax:
    content: public Microsoft.Win32.RegistryKey OpenSubKey (string name, bool writable);
    parameters:
    - id: name
      type: System.String
      description: "若要開啟之子機碼的路徑或名稱。"
    - id: writable
      type: System.Boolean
      description: "設定為<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果您需要寫入存取的索引鍵。"
    return:
      type: Microsoft.Win32.RegistryKey
      description: "子機碼的要求，或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>作業失敗。"
  overload: Microsoft.Win32.RegistryKey.OpenSubKey*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref>已關閉 （不能存取已關閉的索引鍵）。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "使用者沒有存取登錄機碼，以指定模式所需的權限。"
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.OpenSubKey(System.String,System.Security.AccessControl.RegistryRights)
  id: OpenSubKey(System.String,System.Security.AccessControl.RegistryRights)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: OpenSubKey(String,RegistryRights)
  nameWithType: RegistryKey.OpenSubKey(String,RegistryRights)
  fullName: Microsoft.Win32.RegistryKey.OpenSubKey(String,RegistryRights)
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "擷取具有指定名稱的子機碼和。       可用以啟動[!INCLUDE[net_2015](~/add/includes/net-2015-md.md)]"
  remarks: "可以使用其他方法和屬性來管理之前，您必須開啟金鑰。 若要修改的機碼，您必須開啟的多載它<xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A>方法，可讓您指定寫入權限。</xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A>"
  syntax:
    content: public Microsoft.Win32.RegistryKey OpenSubKey (string name, System.Security.AccessControl.RegistryRights rights);
    parameters:
    - id: name
      type: System.String
      description: "名稱或路徑來建立或開啟之子機碼。"
    - id: rights
      type: System.Security.AccessControl.RegistryRights
      description: "登錄機碼權限。"
    return:
      type: Microsoft.Win32.RegistryKey
      description: "子機碼的要求，或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>作業失敗。"
  overload: Microsoft.Win32.RegistryKey.OpenSubKey*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref>已關閉 （不能存取已關閉的索引鍵）。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "使用者沒有存取登錄機碼，以指定模式所需的權限。"
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.OpenSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck,System.Security.AccessControl.RegistryRights)
  id: OpenSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck,System.Security.AccessControl.RegistryRights)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: OpenSubKey(String,RegistryKeyPermissionCheck,RegistryRights)
  nameWithType: RegistryKey.OpenSubKey(String,RegistryKeyPermissionCheck,RegistryRights)
  fullName: Microsoft.Win32.RegistryKey.OpenSubKey(String,RegistryKeyPermissionCheck,RegistryRights)
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "擷取指定子機碼的讀取或讀取/寫入存取，要求的指定的存取權限。"
  remarks: "這個方法會傳回而不是擲回例外狀況，`null`如果要求的索引鍵不存在。       如果`permissionCheck`是<xref:Microsoft.Win32.RegistryKeyPermissionCheck?displayProperty=fullName>，開啟機碼以進行讀取和寫入; 如果`permissionCheck` <xref:Microsoft.Win32.RegistryKeyPermissionCheck?displayProperty=fullName> <xref:Microsoft.Win32.RegistryKeyPermissionCheck?displayProperty=fullName>，除非以<xref:Microsoft.Win32.RegistryKeyPermissionCheck?displayProperty=fullName>.</xref:Microsoft.Win32.RegistryKeyPermissionCheck?displayProperty=fullName>開啟父索引鍵，開啟金鑰進行讀取</xref:Microsoft.Win32.RegistryKeyPermissionCheck?displayProperty=fullName></xref:Microsoft.Win32.RegistryKeyPermissionCheck?displayProperty=fullName>或</xref:Microsoft.Win32.RegistryKeyPermissionCheck?displayProperty=fullName>       針對指定的存取權`permissionCheck`為指定的存取權的優先順序高於`rights`。 例如，如果您指定<xref:Microsoft.Win32.RegistryKeyPermissionCheck?displayProperty=fullName>如`permissionCheck`和<xref:System.Security.AccessControl.RegistryRights?displayProperty=fullName>如`rights`，嘗試寫入子機碼會擲回的例外狀況。</xref:System.Security.AccessControl.RegistryRights?displayProperty=fullName> </xref:Microsoft.Win32.RegistryKeyPermissionCheck?displayProperty=fullName>       若要使用<xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A>方法，您必須擁有的<xref:Microsoft.Win32.RegistryKey>類別</xref:Microsoft.Win32.RegistryKey>執行個體</xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> 若要取得執行個體<xref:Microsoft.Win32.RegistryKey>，請使用其中一個<xref:Microsoft.Win32.Registry>類別</xref:Microsoft.Win32.Registry>的靜態成員</xref:Microsoft.Win32.RegistryKey>"
  syntax:
    content: public Microsoft.Win32.RegistryKey OpenSubKey (string name, Microsoft.Win32.RegistryKeyPermissionCheck permissionCheck, System.Security.AccessControl.RegistryRights rights);
    parameters:
    - id: name
      type: System.String
      description: "名稱或路徑來建立或開啟之子機碼。"
    - id: permissionCheck
      type: Microsoft.Win32.RegistryKeyPermissionCheck
      description: "其中一個列舉值，指定是否要將索引鍵開啟以便讀取或讀取/寫入存取。"
    - id: rights
      type: System.Security.AccessControl.RegistryRights
      description: "列舉值的位元組合，指定所需的安全性權限。"
    return:
      type: Microsoft.Win32.RegistryKey
      description: "子機碼的要求，或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>作業失敗。"
  overload: Microsoft.Win32.RegistryKey.OpenSubKey*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>permissionCheck</code>包含無效的值。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref>已關閉 （不能存取已關閉的索引鍵）。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "<code>rights</code>包含無效的登錄權限的值。       -或者-使用者沒有要求的權限。"
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.SetAccessControl(System.Security.AccessControl.RegistrySecurity)
  id: SetAccessControl(System.Security.AccessControl.RegistrySecurity)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: SetAccessControl(RegistrySecurity)
  nameWithType: RegistryKey.SetAccessControl(RegistrySecurity)
  fullName: Microsoft.Win32.RegistryKey.SetAccessControl(RegistrySecurity)
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "套用至現有的登錄機碼的 Windows 存取控制安全性。"
  remarks: "若要修改的登錄機碼的權限，請使用<xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A>方法，以取得<xref:System.Security.AccessControl.RegistrySecurity>物件代表現有的 Windows 存取控制安全性，請修改<xref:System.Security.AccessControl.RegistrySecurity>物件，然後再使用 SetAccessControl 方法以更新金鑰的安全性。</xref:System.Security.AccessControl.RegistrySecurity> </xref:System.Security.AccessControl.RegistrySecurity> </xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A>      > [!CAUTION] ><xref:System.Security.AccessControl.RegistrySecurity>物件指定`registrySecurity`取代現有的登錄機碼的安全性。</xref:System.Security.AccessControl.RegistrySecurity> 若要加入之新使用者的權限，使用<xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A>方法來取得現有的存取控制安全性，並再修改它。</xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A>"
  example:
  - "The following code example creates a test key. The current user is allowed <xref:System.Security.AccessControl.RegistryRights> and <xref:System.Security.AccessControl.RegistryRights> rights but denied <xref:System.Security.AccessControl.RegistryRights> and <xref:System.Security.AccessControl.RegistryRights> rights. Subsequent attempts to manipulate the key succeed or fail depending on these permissions.  \n  \n Before the key is deleted, the code pauses. You can switch to the registry editor and verify that the same access rights apply when the key is accessed using the registry editor. (This works best if you use **RunAs** from the command line to run the registry editor and the sample code as a local user without administrator rights. The registry editor always allows an administrator to change permissions, even if the particular administrator has been denied those rights. If you have defined a local user named TestUser, the command `runas /user:TestUser cmd` opens a command window from which you can run the registry editor and then the sample code.)  \n  \n [!code-cpp[RegistrySecurity101#1](~/add/codesnippet/cpp/463455ee-8295-4a1a-9af9-_1.cpp)]\n [!code-cs[RegistrySecurity101#1](~/add/codesnippet/csharp/463455ee-8295-4a1a-9af9-_1.cs)]\n [!code-vb[RegistrySecurity101#1](~/add/codesnippet/visualbasic/463455ee-8295-4a1a-9af9-_1.vb)]"
  syntax:
    content: public void SetAccessControl (System.Security.AccessControl.RegistrySecurity registrySecurity);
    parameters:
    - id: registrySecurity
      type: System.Security.AccessControl.RegistrySecurity
      description: "要套用至目前的子機碼的存取控制安全性。"
  overload: Microsoft.Win32.RegistryKey.SetAccessControl*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "目前<xref href=&quot;Microsoft.Win32.RegistryKey&quot;></xref>物件都代表金鑰以存取控制安全性，而且呼叫端沒有<xref href=&quot;System.Security.AccessControl.RegistryRights&quot;></xref>權限。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>registrySecurity</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref>操作已關閉 （不能存取已關閉的索引鍵）。"
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.SetValue(System.String,System.Object)
  id: SetValue(System.String,System.Object)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: SetValue(String,Object)
  nameWithType: RegistryKey.SetValue(String,Object)
  fullName: Microsoft.Win32.RegistryKey.SetValue(String,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "設定指定的名稱/值組。"
  remarks: "因為許多值可以儲存在登錄中的每個索引鍵中，您必須使用`name`參數來指定您想要設定的特定值。      > [!NOTE] > 登錄機碼可以有一個不是任何名稱相關聯的值。 當這個未命名的值顯示在登錄編輯程式中時，字串 「 （預設） 」 會顯示而不是名稱。 若要設定這個未命名的值，指定`null`或空字串 (&quot;&quot;) 的`name`。       若要設定機碼中的值，您必須具有寫入存取開啟金鑰。 開啟索引鍵具有寫入存取權之後，您可以將該金鑰的名稱/值組的任何變更。       如果指定`name`沒有索引鍵，就會建立和相關聯的值設定為`value`。       這個多載<xref:Microsoft.Win32.RegistryKey.SetValue%2A>儲存為字串的 64 位元整數 (<xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName>)。</xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName> </xref:Microsoft.Win32.RegistryKey.SetValue%2A> 做為<xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName>值，使用<xref:Microsoft.Win32.RegistryKey.SetValue%28System.String%2CSystem.Object%2CMicrosoft.Win32.RegistryValueKind%29>多載，指定<xref:Microsoft.Win32.RegistryValueKind>.</xref:Microsoft.Win32.RegistryValueKind></xref:Microsoft.Win32.RegistryKey.SetValue%28System.String%2CSystem.Object%2CMicrosoft.Win32.RegistryValueKind%29></xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName>儲存 64 位元數字       這個多載<xref:Microsoft.Win32.RegistryKey.SetValue%2A>儲存所有的字串值，做為<xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName>，即使它們包含可展開環境變數參考。</xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName> </xref:Microsoft.Win32.RegistryKey.SetValue%2A> 若要將字串值儲存為可展開的字串 (<xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName>)，使用<xref:Microsoft.Win32.RegistryKey.SetValue%28System.String%2CSystem.Object%2CMicrosoft.Win32.RegistryValueKind%29>多載，指定<xref:Microsoft.Win32.RegistryValueKind>.</xref:Microsoft.Win32.RegistryValueKind> </xref:Microsoft.Win32.RegistryKey.SetValue%28System.String%2CSystem.Object%2CMicrosoft.Win32.RegistryValueKind%29> </xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName>       32 位元整數以外的數字類型會儲存為字串，此方法多載。 列舉項目會儲存成包含的項目名稱的字串。      > [!CAUTION] > 並不會公開<xref:Microsoft.Win32.RegistryKey>方式的一種惡意程式無法建立數千個無意義的子機碼或索引鍵/值組中的物件。</xref:Microsoft.Win32.RegistryKey> 例如，不允許呼叫者輸入任意索引鍵或值。      > [!NOTE] > 上 Windows 98 和 Windows Millennium Edition 登錄不是 Unicode，而且並非所有的 Unicode 字元是有效的所有字碼頁。 最佳可用相符項目取代目前的字碼頁而言是無效的 Unicode 字元。 擲不回任何例外狀況。"
  example:
  - "The following code example shows how the SetValue method determines the registry data type when it sets values. The example creates a test key and adds values of different data types to the key. The example then reads the name/value pairs and displays them to the console, using the <xref:Microsoft.Win32.RegistryKey.GetValueKind%2A> method to display the corresponding registry data types.  \n  \n [!code-vb[Microsoft.Win32.RegistryKey.SetValue1#1](~/add/codesnippet/visualbasic/m-microsoft.win32.regist_10_1.vb)]\n [!code-cs[Microsoft.Win32.RegistryKey.SetValue1#1](~/add/codesnippet/csharp/m-microsoft.win32.regist_10_1.cs)]\n [!code-cpp[Microsoft.Win32.RegistryKey.SetValue1#1](~/add/codesnippet/cpp/m-microsoft.win32.regist_10_1.cpp)]"
  syntax:
    content: public void SetValue (string name, object value);
    parameters:
    - id: name
      type: System.String
      description: "要儲存之值的名稱。"
    - id: value
      type: System.Object
      description: "要儲存的資料。"
  overload: Microsoft.Win32.RegistryKey.SetValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>value</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>value</code>是不支援的資料類型。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref> ，其中包含指定值已關閉 （不能存取已關閉的索引鍵）。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref>是唯讀的因此無法寫入至; 例如，不具有寫入權限開啟的機碼。       -或- <xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref>物件表示根節點，而且作業系統是 Windows Millennium Edition 或 Windows 98。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "使用者沒有建立或修改登錄機碼所需的權限。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref>物件表示根節點，而且作業系統是 Windows 2000、 Windows XP 或 Windows Server 2003。"
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.SetValue(System.String,System.Object,Microsoft.Win32.RegistryValueKind)
  id: SetValue(System.String,System.Object,Microsoft.Win32.RegistryValueKind)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: SetValue(String,Object,RegistryValueKind)
  nameWithType: RegistryKey.SetValue(String,Object,RegistryValueKind)
  fullName: Microsoft.Win32.RegistryKey.SetValue(String,Object,RegistryValueKind)
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "使用指定的登錄資料類型的登錄機碼中設定之名稱/值組的值。"
  remarks: "因為許多值可以儲存在登錄中的每個索引鍵中，您必須使用`name`參數來指定您想要設定的特定值。      > [!NOTE] > 登錄機碼可以有一個不是任何名稱相關聯的值。 當這個未命名的值顯示在登錄編輯程式中時，字串 「 （預設） 」 會顯示而不是名稱。 若要設定這個未命名的值，指定`null`或空字串 (&quot;&quot;) 的`name`。       若要設定機碼中的值，您必須具有寫入存取開啟金鑰。 開啟索引鍵具有寫入存取權之後，您可以將該金鑰的名稱/值組的任何變更。       如果指定`name`沒有索引鍵，其建立，以及相關聯的值設定為`value`。      > [!NOTE] > 指定的登錄資料型別<xref:Microsoft.Win32.RegistryValueKind>等同於使用<xref:Microsoft.Win32.RegistryKey.SetValue%2A>多載。</xref:Microsoft.Win32.RegistryKey.SetValue%2A> </xref:Microsoft.Win32.RegistryValueKind>       如果指定的型別`value`不符合指定`valueKind`，且不能是資料轉換，<xref:System.ArgumentException>就會擲回。</xref:System.ArgumentException> 例如，您可以儲存<xref:System.Int64?displayProperty=fullName>為<xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName>，但前提是它的值小於<xref:System.Int32?displayProperty=fullName>.</xref:System.Int32?displayProperty=fullName>的最大值</xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName></xref:System.Int64?displayProperty=fullName> 您無法將單一字串值儲存為<xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName>.</xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName>      > [!NOTE] > 如果 boxed 的值會傳遞<xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName>或<xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName>，表示轉換已完成使用文化特性而異。</xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName> </xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName>      > [!CAUTION] > 並不會公開<xref:Microsoft.Win32.RegistryKey>方式的一種惡意程式無法建立數千個無意義的子機碼或索引鍵/值組中的物件。</xref:Microsoft.Win32.RegistryKey> 例如，不允許呼叫者輸入任意索引鍵或值。      > [!NOTE] > 上 Windows 98 和 Windows Millennium Edition 登錄不是 Unicode，而且並非所有的 Unicode 字元是有效的所有字碼頁。 最佳可用相符項目取代目前的字碼頁而言是無效的 Unicode 字元。 擲不回任何例外狀況。"
  example:
  - "The following code example creates a test key and uses the <xref:Microsoft.Win32.RegistryKey.SetValue%2A> method to store several values, specifying the registry data type for each value. The example then reads the name/value pairs and displays them to the console, using the <xref:Microsoft.Win32.RegistryKey.GetValueKind%2A> method to display the corresponding registry data types.  \n  \n [!code-cpp[Microsoft.Win32.RegistryValueKind#1](~/add/codesnippet/cpp/4d7d6152-5710-4faa-8e5f-_1.cpp)]\n [!code-cs[Microsoft.Win32.RegistryValueKind#1](~/add/codesnippet/csharp/4d7d6152-5710-4faa-8e5f-_1.cs)]\n [!code-vb[Microsoft.Win32.RegistryValueKind#1](~/add/codesnippet/visualbasic/4d7d6152-5710-4faa-8e5f-_1.vb)]"
  syntax:
    content: public void SetValue (string name, object value, Microsoft.Win32.RegistryValueKind valueKind);
    parameters:
    - id: name
      type: System.String
      description: "要儲存之值的名稱。"
    - id: value
      type: System.Object
      description: "要儲存的資料。"
    - id: valueKind
      type: Microsoft.Win32.RegistryValueKind
      description: "要儲存資料時使用的登錄資料類型。"
  overload: Microsoft.Win32.RegistryKey.SetValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>value</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "型別<code> value </code>不符合所指定的登錄資料型別<code> valueKind </code>，因此資料無法轉換正確。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref> ，其中包含指定值已關閉 （不能存取已關閉的索引鍵）。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref>是唯讀的因此無法寫入至; 例如，不具有寫入權限開啟的機碼。       -或- <xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref>物件表示根節點，而且作業系統是 Windows Millennium Edition 或 Windows 98。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "使用者沒有建立或修改登錄機碼所需的權限。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref>物件表示根節點，而且作業系統是 Windows 2000、 Windows XP 或 Windows Server 2003。"
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.SubKeyCount
  id: SubKeyCount
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: SubKeyCount
  nameWithType: RegistryKey.SubKeyCount
  fullName: Microsoft.Win32.RegistryKey.SubKeyCount
  type: Property
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "擷取目前的索引鍵的子機碼的計數。"
  remarks: "這個屬性會以遞迴方式計算名稱。 它只會傳回呼叫它的基底層級上的名稱計數。"
  example:
  - "This code example is part of a larger example provided for the <xref:Microsoft.Win32.RegistryKey> class.  \n  \n [!code-cpp[Microsoft.Win32.RegistryKey2#2](~/add/codesnippet/cpp/p-microsoft.win32.regist_1_1.cpp)]\n [!code-cs[Microsoft.Win32.RegistryKey2#2](~/add/codesnippet/csharp/p-microsoft.win32.regist_1_1.cs)]\n [!code-vb[Microsoft.Win32.RegistryKey2#2](~/add/codesnippet/visualbasic/p-microsoft.win32.regist_1_1.vb)]"
  syntax:
    content: public int SubKeyCount { get; }
    return:
      type: System.Int32
      description: "目前的索引鍵的子機碼數目。"
  overload: Microsoft.Win32.RegistryKey.SubKeyCount*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "使用者沒有索引鍵的讀取權限。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref>操作已關閉 （不能存取已關閉的索引鍵）。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "使用者沒有必要的登錄權限。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "發生系統錯誤，例如目前的索引鍵已被刪除。"
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.ToString
  id: ToString
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: ToString()
  nameWithType: RegistryKey.ToString()
  fullName: Microsoft.Win32.RegistryKey.ToString()
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "擷取這個機碼的字串表示。"
  remarks: "傳回值包含指定的索引鍵和索引鍵的十六進位值的登錄路徑。 登錄路徑中包含指定之索引鍵的絕對根，一律從&1; 開始的登錄中，基底的索引鍵，例如 HKEY_LOCAL_MACHINE。"
  example:
  - "This code example is part of a larger example provided for the <xref:Microsoft.Win32.RegistryKey> class.  \n  \n [!code-cpp[Microsoft.Win32.RegistryKey2#4](~/add/codesnippet/cpp/m-microsoft.win32.regist_9_1.cpp)]\n [!code-cs[Microsoft.Win32.RegistryKey2#4](~/add/codesnippet/csharp/m-microsoft.win32.regist_9_1.cs)]\n [!code-vb[Microsoft.Win32.RegistryKey2#4](~/add/codesnippet/visualbasic/m-microsoft.win32.regist_9_1.vb)]"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "表示索引鍵的字串。 如果指定的索引鍵無效 （找不到） 然後<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>傳回。"
  overload: Microsoft.Win32.RegistryKey.ToString*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref>正在存取已關閉 （不能存取已關閉的索引鍵）。"
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.ValueCount
  id: ValueCount
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: ValueCount
  nameWithType: RegistryKey.ValueCount
  fullName: Microsoft.Win32.RegistryKey.ValueCount
  type: Property
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "擷取索引鍵中的值的計數。"
  remarks: "每個登錄機碼有不是任何名稱相關聯的預設值。 這個未命名的值可以透過設定<xref:Microsoft.Win32.RegistryKey.SetValue%2A>方法並指定 `null`或空字串 (&quot;&quot;) 的`name`。</xref:Microsoft.Win32.RegistryKey.SetValue%2A> 如果從未設定預設值，它不會增加 ValueCount 屬性所傳回的總計數一旦設定它，不過，它會一律計算。"
  example:
  - "This code example is part of a larger example provided for the <xref:Microsoft.Win32.RegistryKey> class.  \n  \n [!code-cpp[Microsoft.Win32.RegistryKey2#2](~/add/codesnippet/cpp/p-microsoft.win32.regist_2_1.cpp)]\n [!code-cs[Microsoft.Win32.RegistryKey2#2](~/add/codesnippet/csharp/p-microsoft.win32.regist_2_1.cs)]\n [!code-vb[Microsoft.Win32.RegistryKey2#2](~/add/codesnippet/visualbasic/p-microsoft.win32.regist_2_1.vb)]"
  syntax:
    content: public int ValueCount { get; }
    return:
      type: System.Int32
      description: "索引鍵中的名稱/值組數目。"
  overload: Microsoft.Win32.RegistryKey.ValueCount*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "使用者沒有索引鍵的讀取權限。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref>操作已關閉 （不能存取已關閉的索引鍵）。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "使用者沒有必要的登錄權限。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "發生系統錯誤，例如目前的索引鍵已被刪除。"
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.View
  id: View
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: View
  nameWithType: RegistryKey.View
  fullName: Microsoft.Win32.RegistryKey.View
  type: Property
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "取得用來建立登錄機碼的檢視。"
  remarks: "在 64 位元版本的 Windows 中，登錄的一部分會分別儲存 32 位元和 64 位元應用程式。 沒有 32 位元應用程式的檢視 32 位元和 64 位元應用程式的 64 位元檢視。       不會假設檢視一律對應到<xref:Microsoft.Win32.RegistryKey>.</xref:Microsoft.Win32.RegistryKey>的實際檢視"
  syntax:
    content: public Microsoft.Win32.RegistryView View { get; }
    return:
      type: Microsoft.Win32.RegistryView
      description: "檢視用來建立登錄機碼。       - <xref href=&quot;Microsoft.Win32.RegistryView&quot;> </xref>，如果已在不使用任何檢視。"
  overload: Microsoft.Win32.RegistryKey.View*
  exceptions: []
  platform:
  - net462
references:
- uid: System.MarshalByRefObject
  isExternal: false
  name: System.MarshalByRefObject
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.UnauthorizedAccessException
  isExternal: true
  name: System.UnauthorizedAccessException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: Microsoft.Win32.RegistryKey.Close
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: Close()
  nameWithType: RegistryKey.Close()
  fullName: Microsoft.Win32.RegistryKey.Close()
- uid: Microsoft.Win32.RegistryKey.CreateSubKey(System.String)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: CreateSubKey(String)
  nameWithType: RegistryKey.CreateSubKey(String)
  fullName: Microsoft.Win32.RegistryKey.CreateSubKey(String)
- uid: Microsoft.Win32.RegistryKey
  parent: Microsoft.Win32
  isExternal: false
  name: RegistryKey
  nameWithType: RegistryKey
  fullName: Microsoft.Win32.RegistryKey
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Win32.RegistryKey.CreateSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: CreateSubKey(String,RegistryKeyPermissionCheck)
  nameWithType: RegistryKey.CreateSubKey(String,RegistryKeyPermissionCheck)
  fullName: Microsoft.Win32.RegistryKey.CreateSubKey(String,RegistryKeyPermissionCheck)
- uid: Microsoft.Win32.RegistryKeyPermissionCheck
  parent: Microsoft.Win32
  isExternal: false
  name: RegistryKeyPermissionCheck
  nameWithType: RegistryKeyPermissionCheck
  fullName: Microsoft.Win32.RegistryKeyPermissionCheck
- uid: Microsoft.Win32.RegistryKey.CreateSubKey(System.String,System.Boolean)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: CreateSubKey(String,Boolean)
  nameWithType: RegistryKey.CreateSubKey(String,Boolean)
  fullName: Microsoft.Win32.RegistryKey.CreateSubKey(String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Win32.RegistryKey.CreateSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck,Microsoft.Win32.RegistryOptions)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: CreateSubKey(String,RegistryKeyPermissionCheck,RegistryOptions)
  nameWithType: RegistryKey.CreateSubKey(String,RegistryKeyPermissionCheck,RegistryOptions)
  fullName: Microsoft.Win32.RegistryKey.CreateSubKey(String,RegistryKeyPermissionCheck,RegistryOptions)
- uid: Microsoft.Win32.RegistryOptions
  parent: Microsoft.Win32
  isExternal: false
  name: RegistryOptions
  nameWithType: RegistryOptions
  fullName: Microsoft.Win32.RegistryOptions
- uid: Microsoft.Win32.RegistryKey.CreateSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck,System.Security.AccessControl.RegistrySecurity)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: CreateSubKey(String,RegistryKeyPermissionCheck,RegistrySecurity)
  nameWithType: RegistryKey.CreateSubKey(String,RegistryKeyPermissionCheck,RegistrySecurity)
  fullName: Microsoft.Win32.RegistryKey.CreateSubKey(String,RegistryKeyPermissionCheck,RegistrySecurity)
- uid: System.Security.AccessControl.RegistrySecurity
  parent: System.Security.AccessControl
  isExternal: false
  name: RegistrySecurity
  nameWithType: RegistrySecurity
  fullName: System.Security.AccessControl.RegistrySecurity
- uid: Microsoft.Win32.RegistryKey.CreateSubKey(System.String,System.Boolean,Microsoft.Win32.RegistryOptions)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: CreateSubKey(String,Boolean,RegistryOptions)
  nameWithType: RegistryKey.CreateSubKey(String,Boolean,RegistryOptions)
  fullName: Microsoft.Win32.RegistryKey.CreateSubKey(String,Boolean,RegistryOptions)
- uid: Microsoft.Win32.RegistryKey.CreateSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck,Microsoft.Win32.RegistryOptions,System.Security.AccessControl.RegistrySecurity)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: CreateSubKey(String,RegistryKeyPermissionCheck,RegistryOptions,RegistrySecurity)
  nameWithType: RegistryKey.CreateSubKey(String,RegistryKeyPermissionCheck,RegistryOptions,RegistrySecurity)
  fullName: Microsoft.Win32.RegistryKey.CreateSubKey(String,RegistryKeyPermissionCheck,RegistryOptions,RegistrySecurity)
- uid: Microsoft.Win32.RegistryKey.DeleteSubKey(System.String)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: DeleteSubKey(String)
  nameWithType: RegistryKey.DeleteSubKey(String)
  fullName: Microsoft.Win32.RegistryKey.DeleteSubKey(String)
- uid: Microsoft.Win32.RegistryKey.DeleteSubKey(System.String,System.Boolean)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: DeleteSubKey(String,Boolean)
  nameWithType: RegistryKey.DeleteSubKey(String,Boolean)
  fullName: Microsoft.Win32.RegistryKey.DeleteSubKey(String,Boolean)
- uid: Microsoft.Win32.RegistryKey.DeleteSubKeyTree(System.String)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: DeleteSubKeyTree(String)
  nameWithType: RegistryKey.DeleteSubKeyTree(String)
  fullName: Microsoft.Win32.RegistryKey.DeleteSubKeyTree(String)
- uid: Microsoft.Win32.RegistryKey.DeleteSubKeyTree(System.String,System.Boolean)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: DeleteSubKeyTree(String,Boolean)
  nameWithType: RegistryKey.DeleteSubKeyTree(String,Boolean)
  fullName: Microsoft.Win32.RegistryKey.DeleteSubKeyTree(String,Boolean)
- uid: Microsoft.Win32.RegistryKey.DeleteValue(System.String)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: DeleteValue(String)
  nameWithType: RegistryKey.DeleteValue(String)
  fullName: Microsoft.Win32.RegistryKey.DeleteValue(String)
- uid: Microsoft.Win32.RegistryKey.DeleteValue(System.String,System.Boolean)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: DeleteValue(String,Boolean)
  nameWithType: RegistryKey.DeleteValue(String,Boolean)
  fullName: Microsoft.Win32.RegistryKey.DeleteValue(String,Boolean)
- uid: Microsoft.Win32.RegistryKey.Dispose
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: Dispose()
  nameWithType: RegistryKey.Dispose()
  fullName: Microsoft.Win32.RegistryKey.Dispose()
- uid: Microsoft.Win32.RegistryKey.Flush
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: Flush()
  nameWithType: RegistryKey.Flush()
  fullName: Microsoft.Win32.RegistryKey.Flush()
- uid: Microsoft.Win32.RegistryKey.FromHandle(Microsoft.Win32.SafeHandles.SafeRegistryHandle)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: FromHandle(SafeRegistryHandle)
  nameWithType: RegistryKey.FromHandle(SafeRegistryHandle)
  fullName: Microsoft.Win32.RegistryKey.FromHandle(SafeRegistryHandle)
- uid: Microsoft.Win32.SafeHandles.SafeRegistryHandle
  parent: Microsoft.Win32.SafeHandles
  isExternal: false
  name: SafeRegistryHandle
  nameWithType: SafeRegistryHandle
  fullName: Microsoft.Win32.SafeHandles.SafeRegistryHandle
- uid: Microsoft.Win32.RegistryKey.FromHandle(Microsoft.Win32.SafeHandles.SafeRegistryHandle,Microsoft.Win32.RegistryView)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: FromHandle(SafeRegistryHandle,RegistryView)
  nameWithType: RegistryKey.FromHandle(SafeRegistryHandle,RegistryView)
  fullName: Microsoft.Win32.RegistryKey.FromHandle(SafeRegistryHandle,RegistryView)
- uid: Microsoft.Win32.RegistryView
  parent: Microsoft.Win32
  isExternal: false
  name: RegistryView
  nameWithType: RegistryView
  fullName: Microsoft.Win32.RegistryView
- uid: Microsoft.Win32.RegistryKey.GetAccessControl
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: GetAccessControl()
  nameWithType: RegistryKey.GetAccessControl()
  fullName: Microsoft.Win32.RegistryKey.GetAccessControl()
- uid: Microsoft.Win32.RegistryKey.GetAccessControl(System.Security.AccessControl.AccessControlSections)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: GetAccessControl(AccessControlSections)
  nameWithType: RegistryKey.GetAccessControl(AccessControlSections)
  fullName: Microsoft.Win32.RegistryKey.GetAccessControl(AccessControlSections)
- uid: System.Security.AccessControl.AccessControlSections
  parent: System.Security.AccessControl
  isExternal: false
  name: AccessControlSections
  nameWithType: AccessControlSections
  fullName: System.Security.AccessControl.AccessControlSections
- uid: Microsoft.Win32.RegistryKey.GetSubKeyNames
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: GetSubKeyNames()
  nameWithType: RegistryKey.GetSubKeyNames()
  fullName: Microsoft.Win32.RegistryKey.GetSubKeyNames()
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.Win32.RegistryKey.GetValue(System.String)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: GetValue(String)
  nameWithType: RegistryKey.GetValue(String)
  fullName: Microsoft.Win32.RegistryKey.GetValue(String)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Win32.RegistryKey.GetValue(System.String,System.Object)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: GetValue(String,Object)
  nameWithType: RegistryKey.GetValue(String,Object)
  fullName: Microsoft.Win32.RegistryKey.GetValue(String,Object)
- uid: Microsoft.Win32.RegistryKey.GetValue(System.String,System.Object,Microsoft.Win32.RegistryValueOptions)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: GetValue(String,Object,RegistryValueOptions)
  nameWithType: RegistryKey.GetValue(String,Object,RegistryValueOptions)
  fullName: Microsoft.Win32.RegistryKey.GetValue(String,Object,RegistryValueOptions)
- uid: Microsoft.Win32.RegistryValueOptions
  parent: Microsoft.Win32
  isExternal: false
  name: RegistryValueOptions
  nameWithType: RegistryValueOptions
  fullName: Microsoft.Win32.RegistryValueOptions
- uid: Microsoft.Win32.RegistryKey.GetValueKind(System.String)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: GetValueKind(String)
  nameWithType: RegistryKey.GetValueKind(String)
  fullName: Microsoft.Win32.RegistryKey.GetValueKind(String)
- uid: Microsoft.Win32.RegistryValueKind
  parent: Microsoft.Win32
  isExternal: false
  name: RegistryValueKind
  nameWithType: RegistryValueKind
  fullName: Microsoft.Win32.RegistryValueKind
- uid: Microsoft.Win32.RegistryKey.GetValueNames
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: GetValueNames()
  nameWithType: RegistryKey.GetValueNames()
  fullName: Microsoft.Win32.RegistryKey.GetValueNames()
- uid: Microsoft.Win32.RegistryKey.Handle
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: Handle
  nameWithType: RegistryKey.Handle
  fullName: Microsoft.Win32.RegistryKey.Handle
- uid: Microsoft.Win32.RegistryKey.Name
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: Name
  nameWithType: RegistryKey.Name
  fullName: Microsoft.Win32.RegistryKey.Name
- uid: Microsoft.Win32.RegistryKey.OpenBaseKey(Microsoft.Win32.RegistryHive,Microsoft.Win32.RegistryView)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: OpenBaseKey(RegistryHive,RegistryView)
  nameWithType: RegistryKey.OpenBaseKey(RegistryHive,RegistryView)
  fullName: Microsoft.Win32.RegistryKey.OpenBaseKey(RegistryHive,RegistryView)
- uid: Microsoft.Win32.RegistryHive
  parent: Microsoft.Win32
  isExternal: false
  name: RegistryHive
  nameWithType: RegistryHive
  fullName: Microsoft.Win32.RegistryHive
- uid: Microsoft.Win32.RegistryKey.OpenRemoteBaseKey(Microsoft.Win32.RegistryHive,System.String)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: OpenRemoteBaseKey(RegistryHive,String)
  nameWithType: RegistryKey.OpenRemoteBaseKey(RegistryHive,String)
  fullName: Microsoft.Win32.RegistryKey.OpenRemoteBaseKey(RegistryHive,String)
- uid: Microsoft.Win32.RegistryKey.OpenRemoteBaseKey(Microsoft.Win32.RegistryHive,System.String,Microsoft.Win32.RegistryView)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: OpenRemoteBaseKey(RegistryHive,String,RegistryView)
  nameWithType: RegistryKey.OpenRemoteBaseKey(RegistryHive,String,RegistryView)
  fullName: Microsoft.Win32.RegistryKey.OpenRemoteBaseKey(RegistryHive,String,RegistryView)
- uid: Microsoft.Win32.RegistryKey.OpenSubKey(System.String)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: OpenSubKey(String)
  nameWithType: RegistryKey.OpenSubKey(String)
  fullName: Microsoft.Win32.RegistryKey.OpenSubKey(String)
- uid: Microsoft.Win32.RegistryKey.OpenSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: OpenSubKey(String,RegistryKeyPermissionCheck)
  nameWithType: RegistryKey.OpenSubKey(String,RegistryKeyPermissionCheck)
  fullName: Microsoft.Win32.RegistryKey.OpenSubKey(String,RegistryKeyPermissionCheck)
- uid: Microsoft.Win32.RegistryKey.OpenSubKey(System.String,System.Boolean)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: OpenSubKey(String,Boolean)
  nameWithType: RegistryKey.OpenSubKey(String,Boolean)
  fullName: Microsoft.Win32.RegistryKey.OpenSubKey(String,Boolean)
- uid: Microsoft.Win32.RegistryKey.OpenSubKey(System.String,System.Security.AccessControl.RegistryRights)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: OpenSubKey(String,RegistryRights)
  nameWithType: RegistryKey.OpenSubKey(String,RegistryRights)
  fullName: Microsoft.Win32.RegistryKey.OpenSubKey(String,RegistryRights)
- uid: System.Security.AccessControl.RegistryRights
  parent: System.Security.AccessControl
  isExternal: false
  name: RegistryRights
  nameWithType: RegistryRights
  fullName: System.Security.AccessControl.RegistryRights
- uid: Microsoft.Win32.RegistryKey.OpenSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck,System.Security.AccessControl.RegistryRights)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: OpenSubKey(String,RegistryKeyPermissionCheck,RegistryRights)
  nameWithType: RegistryKey.OpenSubKey(String,RegistryKeyPermissionCheck,RegistryRights)
  fullName: Microsoft.Win32.RegistryKey.OpenSubKey(String,RegistryKeyPermissionCheck,RegistryRights)
- uid: Microsoft.Win32.RegistryKey.SetAccessControl(System.Security.AccessControl.RegistrySecurity)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: SetAccessControl(RegistrySecurity)
  nameWithType: RegistryKey.SetAccessControl(RegistrySecurity)
  fullName: Microsoft.Win32.RegistryKey.SetAccessControl(RegistrySecurity)
- uid: Microsoft.Win32.RegistryKey.SetValue(System.String,System.Object)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: SetValue(String,Object)
  nameWithType: RegistryKey.SetValue(String,Object)
  fullName: Microsoft.Win32.RegistryKey.SetValue(String,Object)
- uid: Microsoft.Win32.RegistryKey.SetValue(System.String,System.Object,Microsoft.Win32.RegistryValueKind)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: SetValue(String,Object,RegistryValueKind)
  nameWithType: RegistryKey.SetValue(String,Object,RegistryValueKind)
  fullName: Microsoft.Win32.RegistryKey.SetValue(String,Object,RegistryValueKind)
- uid: Microsoft.Win32.RegistryKey.SubKeyCount
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: SubKeyCount
  nameWithType: RegistryKey.SubKeyCount
  fullName: Microsoft.Win32.RegistryKey.SubKeyCount
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Win32.RegistryKey.ToString
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: ToString()
  nameWithType: RegistryKey.ToString()
  fullName: Microsoft.Win32.RegistryKey.ToString()
- uid: Microsoft.Win32.RegistryKey.ValueCount
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: ValueCount
  nameWithType: RegistryKey.ValueCount
  fullName: Microsoft.Win32.RegistryKey.ValueCount
- uid: Microsoft.Win32.RegistryKey.View
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: View
  nameWithType: RegistryKey.View
  fullName: Microsoft.Win32.RegistryKey.View
- uid: Microsoft.Win32.RegistryKey.Close*
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: Close
  nameWithType: RegistryKey.Close
- uid: Microsoft.Win32.RegistryKey.CreateSubKey*
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: CreateSubKey
  nameWithType: RegistryKey.CreateSubKey
- uid: Microsoft.Win32.RegistryKey.DeleteSubKey*
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: DeleteSubKey
  nameWithType: RegistryKey.DeleteSubKey
- uid: Microsoft.Win32.RegistryKey.DeleteSubKeyTree*
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: DeleteSubKeyTree
  nameWithType: RegistryKey.DeleteSubKeyTree
- uid: Microsoft.Win32.RegistryKey.DeleteValue*
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: DeleteValue
  nameWithType: RegistryKey.DeleteValue
- uid: Microsoft.Win32.RegistryKey.Dispose*
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: Dispose
  nameWithType: RegistryKey.Dispose
- uid: Microsoft.Win32.RegistryKey.Flush*
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: Flush
  nameWithType: RegistryKey.Flush
- uid: Microsoft.Win32.RegistryKey.FromHandle*
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: FromHandle
  nameWithType: RegistryKey.FromHandle
- uid: Microsoft.Win32.RegistryKey.GetAccessControl*
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: GetAccessControl
  nameWithType: RegistryKey.GetAccessControl
- uid: Microsoft.Win32.RegistryKey.GetSubKeyNames*
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: GetSubKeyNames
  nameWithType: RegistryKey.GetSubKeyNames
- uid: Microsoft.Win32.RegistryKey.GetValue*
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: GetValue
  nameWithType: RegistryKey.GetValue
- uid: Microsoft.Win32.RegistryKey.GetValueKind*
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: GetValueKind
  nameWithType: RegistryKey.GetValueKind
- uid: Microsoft.Win32.RegistryKey.GetValueNames*
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: GetValueNames
  nameWithType: RegistryKey.GetValueNames
- uid: Microsoft.Win32.RegistryKey.Handle*
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: Handle
  nameWithType: RegistryKey.Handle
- uid: Microsoft.Win32.RegistryKey.Name*
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: Name
  nameWithType: RegistryKey.Name
- uid: Microsoft.Win32.RegistryKey.OpenBaseKey*
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: OpenBaseKey
  nameWithType: RegistryKey.OpenBaseKey
- uid: Microsoft.Win32.RegistryKey.OpenRemoteBaseKey*
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: OpenRemoteBaseKey
  nameWithType: RegistryKey.OpenRemoteBaseKey
- uid: Microsoft.Win32.RegistryKey.OpenSubKey*
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: OpenSubKey
  nameWithType: RegistryKey.OpenSubKey
- uid: Microsoft.Win32.RegistryKey.SetAccessControl*
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: SetAccessControl
  nameWithType: RegistryKey.SetAccessControl
- uid: Microsoft.Win32.RegistryKey.SetValue*
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: SetValue
  nameWithType: RegistryKey.SetValue
- uid: Microsoft.Win32.RegistryKey.SubKeyCount*
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: SubKeyCount
  nameWithType: RegistryKey.SubKeyCount
- uid: Microsoft.Win32.RegistryKey.ToString*
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: ToString
  nameWithType: RegistryKey.ToString
- uid: Microsoft.Win32.RegistryKey.ValueCount*
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: ValueCount
  nameWithType: RegistryKey.ValueCount
- uid: Microsoft.Win32.RegistryKey.View*
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: View
  nameWithType: RegistryKey.View
