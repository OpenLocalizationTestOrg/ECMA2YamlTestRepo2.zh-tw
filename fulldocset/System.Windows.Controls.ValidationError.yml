### YamlMime:ManagedReference
items:
- uid: System.Windows.Controls.ValidationError
  id: ValidationError
  children:
  - System.Windows.Controls.ValidationError.#ctor(System.Windows.Controls.ValidationRule,System.Object)
  - System.Windows.Controls.ValidationError.#ctor(System.Windows.Controls.ValidationRule,System.Object,System.Object,System.Exception)
  - System.Windows.Controls.ValidationError.BindingInError
  - System.Windows.Controls.ValidationError.ErrorContent
  - System.Windows.Controls.ValidationError.Exception
  - System.Windows.Controls.ValidationError.RuleInError
  langs:
  - csharp
  name: ValidationError
  nameWithType: ValidationError
  fullName: System.Windows.Controls.ValidationError
  type: Class
  summary: "表示驗證錯誤建立繫結引擎<xref href=&quot;System.Windows.Controls.ValidationRule&quot;></xref>回報驗證錯誤，或透過<xref:System.Windows.Controls.Validation.MarkInvalid*>方法明確。</xref:System.Windows.Controls.Validation.MarkInvalid*>"
  remarks: "[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]資料繫結模型可讓您將驗證規則與您<xref:System.Windows.Data.Binding>物件。</xref:System.Windows.Data.Binding> 轉換器會在呼叫之前，驗證就會發生傳輸目標到來源值期間。 以下描述在驗證程序。      1.  資料繫結引擎正在當值時的目標屬性從來源屬性，先移除可能會加入至任何 ValidationError<xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName>附加屬性的繫結項目。</xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> 接著它會檢查是否已為該<xref:System.Windows.Data.Binding>，它會呼叫<xref:System.Windows.Controls.ValidationRule.Validate%2A>方法的每個<xref:System.Windows.Controls.ValidationRule>直到其中一個失敗，或直到所有通過時讓它們</xref:System.Windows.Controls.ValidationRule></xref:System.Windows.Controls.ValidationRule.Validate%2A>在此情況下</xref:System.Windows.Data.Binding>定義的任何自訂驗證規則      2.  自訂規則未通過後，繫結引擎建立 ValidationError 物件，並將它加入至<xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName>繫結項目的集合。</xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> 當<xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName>不是空白，<xref:System.Windows.Controls.Validation.HasError%2A?displayProperty=fullName>附加的屬性的項目設定為`true`。</xref:System.Windows.Controls.Validation.HasError%2A?displayProperty=fullName> </xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> 此外，如果<xref:System.Windows.Data.Binding.NotifyOnValidationError%2A>屬性<xref:System.Windows.Data.Binding>設`true`，然後繫結引擎引發<xref:System.Windows.Controls.Validation.Error?displayProperty=fullName>附加項目上的事件。</xref:System.Windows.Controls.Validation.Error?displayProperty=fullName> </xref:System.Windows.Data.Binding> </xref:System.Windows.Data.Binding.NotifyOnValidationError%2A>      3.  如果所有規則都通過，則繫結引擎會呼叫轉換子，如果有的話。      4.  如果轉換成功，繫結引擎會呼叫來源屬性的 setter。      5.  如果繫結具有<xref:System.Windows.Controls.ExceptionValidationRule>與其相關聯，並在步驟 3 或 4 期間擲回例外狀況，繫結引擎檢查以查看是否有<xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A>.</xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A> </xref:System.Windows.Controls.ExceptionValidationRule> 您可以使用<xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A>回呼，以提供自訂的處理常式處理例外狀況。</xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A> 如果<xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A>上未指定<xref:System.Windows.Data.Binding>，繫結引擎建立 ValidationError 與例外狀況，並將它加入<xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName>繫結項目的集合。</xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> </xref:System.Windows.Data.Binding> </xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A>       有效的值中的傳輸任一方向 （從目標到來源或目標的來源） 將會清除<xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName>附加屬性。</xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName>"
  example:
  - "The following example shows a style trigger that creates a <xref:System.Windows.Controls.ToolTip> that reports a validation error message. The <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> attached property returns a collection of ValidationError objects on the bound element.  \n  \n [!code-xml[DataBindingLab#14](~/add/codesnippet/xaml/DataBindingLab/DataBindingLabApp.xaml#14)]"
  syntax:
    content: public class ValidationError
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Controls.ValidationError.#ctor(System.Windows.Controls.ValidationRule,System.Object)
  id: '#ctor(System.Windows.Controls.ValidationRule,System.Object)'
  parent: System.Windows.Controls.ValidationError
  langs:
  - csharp
  name: ValidationError(ValidationRule,Object)
  nameWithType: ValidationError.ValidationError(ValidationRule,Object)
  fullName: System.Windows.Controls.ValidationError.ValidationError(ValidationRule,Object)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "初始化的新執行個體<xref href=&quot;System.Windows.Controls.ValidationError&quot;></xref>類別，以指定的參數。"
  syntax:
    content: public ValidationError (System.Windows.Controls.ValidationRule ruleInError, object bindingInError);
    parameters:
    - id: ruleInError
      type: System.Windows.Controls.ValidationRule
      description: "偵測到驗證錯誤的規則。"
    - id: bindingInError
      type: System.Object
      description: "<xref href=&quot;System.Windows.Data.BindingExpression&quot;> </xref>或<xref href=&quot;System.Windows.Data.MultiBindingExpression&quot;></xref>物件使用的驗證錯誤。"
  overload: System.Windows.Controls.ValidationError.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.ValidationError.#ctor(System.Windows.Controls.ValidationRule,System.Object,System.Object,System.Exception)
  id: '#ctor(System.Windows.Controls.ValidationRule,System.Object,System.Object,System.Exception)'
  parent: System.Windows.Controls.ValidationError
  langs:
  - csharp
  name: ValidationError(ValidationRule,Object,Object,Exception)
  nameWithType: ValidationError.ValidationError(ValidationRule,Object,Object,Exception)
  fullName: System.Windows.Controls.ValidationError.ValidationError(ValidationRule,Object,Object,Exception)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "初始化的新執行個體<xref href=&quot;System.Windows.Controls.ValidationError&quot;></xref>類別，以指定的參數。"
  syntax:
    content: public ValidationError (System.Windows.Controls.ValidationRule ruleInError, object bindingInError, object errorContent, Exception exception);
    parameters:
    - id: ruleInError
      type: System.Windows.Controls.ValidationRule
      description: "偵測到驗證錯誤的規則。"
    - id: bindingInError
      type: System.Object
      description: "<xref href=&quot;System.Windows.Data.BindingExpression&quot;> </xref>或<xref href=&quot;System.Windows.Data.MultiBindingExpression&quot;></xref>物件使用的驗證錯誤。"
    - id: errorContent
      type: System.Object
      description: "錯誤的相關資訊。"
    - id: exception
      type: System.Exception
      description: "導致驗證失敗的例外狀況。 這個參數是選擇性的可以設定為<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Controls.ValidationError.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.ValidationError.BindingInError
  id: BindingInError
  parent: System.Windows.Controls.ValidationError
  langs:
  - csharp
  name: BindingInError
  nameWithType: ValidationError.BindingInError
  fullName: System.Windows.Controls.ValidationError.BindingInError
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Gets the <xref href=&quot;System.Windows.Data.BindingExpression&quot;></xref> or <xref href=&quot;System.Windows.Data.MultiBindingExpression&quot;></xref> object of this <xref href=&quot;System.Windows.Controls.ValidationError&quot;></xref>. 物件已明確地標示為的無效，或已失敗的驗證規則。"
  syntax:
    content: public object BindingInError { get; }
    return:
      type: System.Object
      description: "The <xref href=&quot;System.Windows.Data.BindingExpression&quot;></xref> or <xref href=&quot;System.Windows.Data.MultiBindingExpression&quot;></xref> object of this <xref href=&quot;System.Windows.Controls.ValidationError&quot;></xref>."
  overload: System.Windows.Controls.ValidationError.BindingInError*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.ValidationError.ErrorContent
  id: ErrorContent
  parent: System.Windows.Controls.ValidationError
  langs:
  - csharp
  name: ErrorContent
  nameWithType: ValidationError.ErrorContent
  fullName: System.Windows.Controls.ValidationError.ErrorContent
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "取得或設定物件，提供額外的內容，這個<xref href=&quot;System.Windows.Controls.ValidationError&quot;> </xref>，例如，描述錯誤的字串。"
  remarks: "<a name=&quot;xamlTextUsage_ErrorContent&quot;></a># # XAML 文字使用方式，請參閱範例主題的範例。"
  example:
  - "The following example shows a style trigger that creates a <xref:System.Windows.Controls.ToolTip> that reports a validation error message. The <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> attached property returns a collection of <xref:System.Windows.Controls.ValidationError> objects on the bound element.  \n  \n [!code-xml[DataBindingLab#14](~/add/codesnippet/xaml/DataBindingLab/DataBindingLabApp.xaml#14)]"
  syntax:
    content: public object ErrorContent { get; set; }
    return:
      type: System.Object
      description: "物件，提供額外的內容，這個<xref href=&quot;System.Windows.Controls.ValidationError&quot;> </xref>。"
  overload: System.Windows.Controls.ValidationError.ErrorContent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.ValidationError.Exception
  id: Exception
  parent: System.Windows.Controls.ValidationError
  langs:
  - csharp
  name: Exception
  nameWithType: ValidationError.Exception
  fullName: System.Windows.Controls.ValidationError.Exception
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "取得或設定<xref:System.Exception>物件是這個原因， <xref href=&quot;System.Windows.Controls.ValidationError&quot;> </xref>，如果錯誤是例外狀況的結果。</xref:System.Exception>"
  syntax:
    content: public Exception Exception { get; set; }
    return:
      type: System.Exception
      description: "<xref:System.Exception>物件，如果錯誤是例外狀況的結果。</xref:System.Exception>"
  overload: System.Windows.Controls.ValidationError.Exception*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.ValidationError.RuleInError
  id: RuleInError
  parent: System.Windows.Controls.ValidationError
  langs:
  - csharp
  name: RuleInError
  nameWithType: ValidationError.RuleInError
  fullName: System.Windows.Controls.ValidationError.RuleInError
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "取得或設定<xref href=&quot;System.Windows.Controls.ValidationRule&quot;></xref>物件是這個原因， <xref href=&quot;System.Windows.Controls.ValidationError&quot;> </xref>，如果錯誤是驗證規則的結果。"
  syntax:
    content: public System.Windows.Controls.ValidationRule RuleInError { get; set; }
    return:
      type: System.Windows.Controls.ValidationRule
      description: "<xref href=&quot;System.Windows.Controls.ValidationRule&quot;> </xref>物件，如果錯誤是驗證規則的結果。"
  overload: System.Windows.Controls.ValidationError.RuleInError*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Windows.Controls.ValidationError.#ctor(System.Windows.Controls.ValidationRule,System.Object)
  parent: System.Windows.Controls.ValidationError
  isExternal: false
  name: ValidationError(ValidationRule,Object)
  nameWithType: ValidationError.ValidationError(ValidationRule,Object)
  fullName: System.Windows.Controls.ValidationError.ValidationError(ValidationRule,Object)
- uid: System.Windows.Controls.ValidationRule
  parent: System.Windows.Controls
  isExternal: false
  name: ValidationRule
  nameWithType: ValidationRule
  fullName: System.Windows.Controls.ValidationRule
- uid: System.Windows.Controls.ValidationError.#ctor(System.Windows.Controls.ValidationRule,System.Object,System.Object,System.Exception)
  parent: System.Windows.Controls.ValidationError
  isExternal: false
  name: ValidationError(ValidationRule,Object,Object,Exception)
  nameWithType: ValidationError.ValidationError(ValidationRule,Object,Object,Exception)
  fullName: System.Windows.Controls.ValidationError.ValidationError(ValidationRule,Object,Object,Exception)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Windows.Controls.ValidationError.BindingInError
  parent: System.Windows.Controls.ValidationError
  isExternal: false
  name: BindingInError
  nameWithType: ValidationError.BindingInError
  fullName: System.Windows.Controls.ValidationError.BindingInError
- uid: System.Windows.Controls.ValidationError.ErrorContent
  parent: System.Windows.Controls.ValidationError
  isExternal: false
  name: ErrorContent
  nameWithType: ValidationError.ErrorContent
  fullName: System.Windows.Controls.ValidationError.ErrorContent
- uid: System.Windows.Controls.ValidationError.Exception
  parent: System.Windows.Controls.ValidationError
  isExternal: false
  name: Exception
  nameWithType: ValidationError.Exception
  fullName: System.Windows.Controls.ValidationError.Exception
- uid: System.Windows.Controls.ValidationError.RuleInError
  parent: System.Windows.Controls.ValidationError
  isExternal: false
  name: RuleInError
  nameWithType: ValidationError.RuleInError
  fullName: System.Windows.Controls.ValidationError.RuleInError
- uid: System.Windows.Controls.ValidationError.#ctor*
  parent: System.Windows.Controls.ValidationError
  isExternal: false
  name: ValidationError
  nameWithType: ValidationError.ValidationError
- uid: System.Windows.Controls.ValidationError.BindingInError*
  parent: System.Windows.Controls.ValidationError
  isExternal: false
  name: BindingInError
  nameWithType: ValidationError.BindingInError
- uid: System.Windows.Controls.ValidationError.ErrorContent*
  parent: System.Windows.Controls.ValidationError
  isExternal: false
  name: ErrorContent
  nameWithType: ValidationError.ErrorContent
- uid: System.Windows.Controls.ValidationError.Exception*
  parent: System.Windows.Controls.ValidationError
  isExternal: false
  name: Exception
  nameWithType: ValidationError.Exception
- uid: System.Windows.Controls.ValidationError.RuleInError*
  parent: System.Windows.Controls.ValidationError
  isExternal: false
  name: RuleInError
  nameWithType: ValidationError.RuleInError
