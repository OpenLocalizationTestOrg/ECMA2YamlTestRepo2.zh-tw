### YamlMime:ManagedReference
items:
- uid: System.Messaging.BinaryMessageFormatter
  id: BinaryMessageFormatter
  children:
  - System.Messaging.BinaryMessageFormatter.#ctor
  - System.Messaging.BinaryMessageFormatter.#ctor(System.Runtime.Serialization.Formatters.FormatterAssemblyStyle,System.Runtime.Serialization.Formatters.FormatterTypeStyle)
  - System.Messaging.BinaryMessageFormatter.CanRead(System.Messaging.Message)
  - System.Messaging.BinaryMessageFormatter.Clone
  - System.Messaging.BinaryMessageFormatter.Read(System.Messaging.Message)
  - System.Messaging.BinaryMessageFormatter.TopObjectFormat
  - System.Messaging.BinaryMessageFormatter.TypeFormat
  - System.Messaging.BinaryMessageFormatter.Write(System.Messaging.Message,System.Object)
  langs:
  - csharp
  name: BinaryMessageFormatter
  nameWithType: BinaryMessageFormatter
  fullName: System.Messaging.BinaryMessageFormatter
  type: Class
  summary: "序列化或還原序列化的物件或連接物件，或主體中的訊息佇列的訊息，使用一種二進位格式的整個圖形。"
  remarks: "BinaryMessageFormatter 非常有效率，而且可用來序列化大部分的物件。 結果是相當精簡且快速剖析的但並不允許鬆散偶合的傳訊為<xref:System.Messaging.XmlMessageFormatter>未。</xref:System.Messaging.XmlMessageFormatter> 鬆散偶合的方式，用戶端和伺服器可以獨立版本傳送和接收的類型。       當應用程式會傳送訊息至佇列使用的執行個體<xref:System.Messaging.MessageQueue>類別，格式器會將物件序列化成資料流，並將它插入訊息本文。</xref:System.Messaging.MessageQueue> 從使用<xref:System.Messaging.MessageQueue>中，格式子還原序列化成<xref:System.Messaging.Message.Body%2A><xref:System.Messaging.Message>.</xref:System.Messaging.Message>屬性</xref:System.Messaging.Message.Body%2A>的訊息資料</xref:System.Messaging.MessageQueue>的佇列讀取時       BinaryMessageFormatter 提供更快速的輸送量比<xref:System.Messaging.XmlMessageFormatter>.</xref:System.Messaging.XmlMessageFormatter> 需要純速度而不是鬆散偶合的傳訊時，請使用 BinaryMessageFormatter。"
  example:
  - >-
    [!code-cpp[MessagingBinaryFormatter#1](~/add/codesnippet/cpp/t-system.messaging.binar_1.cpp)]
     [!code-cs[MessagingBinaryFormatter#1](~/add/codesnippet/csharp/t-system.messaging.binar_1.cs)]
     [!code-vb[MessagingBinaryFormatter#1](~/add/codesnippet/visualbasic/t-system.messaging.binar_1.vb)]
  syntax:
    content: 'public class BinaryMessageFormatter : ICloneable, System.Messaging.IMessageFormatter'
  inheritance:
  - System.Object
  implements:
  - System.ICloneable
  - System.Messaging.IMessageFormatter
  inheritedMembers: []
  platform:
  - net462
- uid: System.Messaging.BinaryMessageFormatter.#ctor
  id: '#ctor'
  parent: System.Messaging.BinaryMessageFormatter
  langs:
  - csharp
  name: BinaryMessageFormatter()
  nameWithType: BinaryMessageFormatter.BinaryMessageFormatter()
  fullName: System.Messaging.BinaryMessageFormatter.BinaryMessageFormatter()
  type: Constructor
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "初始化的新執行個體<xref href=&quot;System.Messaging.BinaryMessageFormatter&quot;></xref>類別而不需要指定型別樣式或最上層物件的組件的樣式。"
  remarks: "您必須指定的值<xref:System.Messaging.BinaryMessageFormatter.TopObjectFormat%2A>屬性 （會定義在圖形中的根物件的配置方式） 和<xref:System.Messaging.BinaryMessageFormatter.TypeFormat%2A>屬性 （會定義物件的類型描述的配置方式） 使用的執行個體之前<xref:System.Messaging.BinaryMessageFormatter>類別來序列化，並將訊息傳送。</xref:System.Messaging.BinaryMessageFormatter> </xref:System.Messaging.BinaryMessageFormatter.TypeFormat%2A> </xref:System.Messaging.BinaryMessageFormatter.TopObjectFormat%2A>"
  syntax:
    content: public BinaryMessageFormatter ();
    parameters: []
  overload: System.Messaging.BinaryMessageFormatter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.BinaryMessageFormatter.#ctor(System.Runtime.Serialization.Formatters.FormatterAssemblyStyle,System.Runtime.Serialization.Formatters.FormatterTypeStyle)
  id: '#ctor(System.Runtime.Serialization.Formatters.FormatterAssemblyStyle,System.Runtime.Serialization.Formatters.FormatterTypeStyle)'
  parent: System.Messaging.BinaryMessageFormatter
  langs:
  - csharp
  name: BinaryMessageFormatter(FormatterAssemblyStyle,FormatterTypeStyle)
  nameWithType: BinaryMessageFormatter.BinaryMessageFormatter(FormatterAssemblyStyle,FormatterTypeStyle)
  fullName: System.Messaging.BinaryMessageFormatter.BinaryMessageFormatter(FormatterAssemblyStyle,FormatterTypeStyle)
  type: Constructor
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "初始化的新執行個體<xref href=&quot;System.Messaging.BinaryMessageFormatter&quot;></xref>類別，指定根物件和類型描述的格式。"
  syntax:
    content: public BinaryMessageFormatter (System.Runtime.Serialization.Formatters.FormatterAssemblyStyle topObjectFormat, System.Runtime.Serialization.Formatters.FormatterTypeStyle typeFormat);
    parameters:
    - id: topObjectFormat
      type: System.Runtime.Serialization.Formatters.FormatterAssemblyStyle
      description: "決定如何在序列化資料流中配置圖形的最上層 （根） 物件。"
    - id: typeFormat
      type: System.Runtime.Serialization.Formatters.FormatterTypeStyle
      description: "決定如何序列化資料流中配置型別描述。"
  overload: System.Messaging.BinaryMessageFormatter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.BinaryMessageFormatter.CanRead(System.Messaging.Message)
  id: CanRead(System.Messaging.Message)
  parent: System.Messaging.BinaryMessageFormatter
  langs:
  - csharp
  name: CanRead(Message)
  nameWithType: BinaryMessageFormatter.CanRead(Message)
  fullName: System.Messaging.BinaryMessageFormatter.CanRead(Message)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "判斷格式器是否可以還原序列化訊息的內容。"
  remarks: "CanRead 傳回`false`如果訊息本文不是二進位物件。       在接收端電腦上，傳回 CanRead`true`如果要還原序列化類別的組件存在於本機。 組件必須位於全域組件快取中，或連結至應用程式 （例如，如果自訂類別所代表的物件）。"
  syntax:
    content: public bool CanRead (System.Messaging.Message message);
    parameters:
    - id: message
      type: System.Messaging.Message
      description: "<xref href=&quot;System.Messaging.Message&quot;> </xref>檢查。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果二進位訊息格式器可以還原序列化訊息。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Messaging.BinaryMessageFormatter.CanRead*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>message</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Messaging.BinaryMessageFormatter.Clone
  id: Clone
  parent: System.Messaging.BinaryMessageFormatter
  langs:
  - csharp
  name: Clone()
  nameWithType: BinaryMessageFormatter.Clone()
  fullName: System.Messaging.BinaryMessageFormatter.Clone()
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "建立的執行個體<xref href=&quot;System.Messaging.BinaryMessageFormatter&quot;></xref>類別的讀取/寫入屬性 （根物件和型別描述格式） 是與目前的<xref href=&quot;System.Messaging.BinaryMessageFormatter&quot;> </xref>。"
  remarks: "這個方法會建立此格式子的複本和所有其屬性初始化為這個<xref:System.Messaging.BinaryMessageFormatter>.</xref:System.Messaging.BinaryMessageFormatter>值 用於擴充性，但不保證讀取或寫入執行緒安全。"
  syntax:
    content: public object Clone ();
    parameters: []
    return:
      type: System.Object
      description: "其屬性都與這個物件<xref href=&quot;System.Messaging.BinaryMessageFormatter&quot;> </xref>，但其中繼資料未指定它的格式器的類別執行個體。"
  overload: System.Messaging.BinaryMessageFormatter.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.BinaryMessageFormatter.Read(System.Messaging.Message)
  id: Read(System.Messaging.Message)
  parent: System.Messaging.BinaryMessageFormatter
  langs:
  - csharp
  name: Read(Message)
  nameWithType: BinaryMessageFormatter.Read(Message)
  fullName: System.Messaging.BinaryMessageFormatter.Read(Message)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "讀取給定訊息的內容，並建立包含已還原序列化的訊息的物件。"
  remarks: "> [!IMPORTANT]> 呼叫此方法不受信任的資料時，會造成安全性風險。 呼叫這個方法僅使用信任的資料。 如需詳細資訊，請參閱[不受信任的資料安全性風險](http://go.microsoft.com/fwlink/?LinkId=330378)。       訊息的主體必須是以二進位格式，而且必須使用相同的序列化程式來還原序列化開始序列化它的訊息。 如果主體代表自訂類別，該類別的組件必須存在於本機。"
  syntax:
    content: public object Read (System.Messaging.Message message);
    parameters:
    - id: message
      type: System.Messaging.Message
      description: "<xref href=&quot;System.Messaging.Message&quot;> </xref>，還原序列化的二進位格式。"
    return:
      type: System.Object
      description: "已還原序列化的訊息。"
  overload: System.Messaging.BinaryMessageFormatter.Read*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "訊息的<xref:System.Messaging.Message.BodyType*>屬性不會指出二進位物件。</xref:System.Messaging.Message.BodyType*>"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>message</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Messaging.BinaryMessageFormatter.TopObjectFormat
  id: TopObjectFormat
  parent: System.Messaging.BinaryMessageFormatter
  langs:
  - csharp
  name: TopObjectFormat
  nameWithType: BinaryMessageFormatter.TopObjectFormat
  fullName: System.Messaging.BinaryMessageFormatter.TopObjectFormat
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "取得或設定值，這個值會定義如何最上層 （根） 的物件圖形還原序列化有關尋找和載入其組件。"
  remarks: "目前，您應接受預設值， `AssemblyStyle`。"
  syntax:
    content: public System.Runtime.Serialization.Formatters.FormatterAssemblyStyle TopObjectFormat { get; set; }
    return:
      type: System.Runtime.Serialization.Formatters.FormatterAssemblyStyle
      description: "其中一個<xref href=&quot;System.Runtime.Serialization.Formatters.FormatterAssemblyStyle&quot;></xref>定義還原序列化行為的值。"
  overload: System.Messaging.BinaryMessageFormatter.TopObjectFormat*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.BinaryMessageFormatter.TypeFormat
  id: TypeFormat
  parent: System.Messaging.BinaryMessageFormatter
  langs:
  - csharp
  name: TypeFormat
  nameWithType: BinaryMessageFormatter.TypeFormat
  fullName: System.Messaging.BinaryMessageFormatter.TypeFormat
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "取得或設定值，這個值會定義如何序列化資料流中配置型別描述。"
  remarks: "目前，您應接受預設值， `TypesWhenNeeded`。"
  syntax:
    content: public System.Runtime.Serialization.Formatters.FormatterTypeStyle TypeFormat { get; set; }
    return:
      type: System.Runtime.Serialization.Formatters.FormatterTypeStyle
      description: "A <xref href=&quot;System.Runtime.Serialization.Formatters.FormatterTypeStyle&quot;> </xref>定義類型描述的格式。"
  overload: System.Messaging.BinaryMessageFormatter.TypeFormat*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.BinaryMessageFormatter.Write(System.Messaging.Message,System.Object)
  id: Write(System.Messaging.Message,System.Object)
  parent: System.Messaging.BinaryMessageFormatter
  langs:
  - csharp
  name: Write(Message,Object)
  nameWithType: BinaryMessageFormatter.Write(Message,Object)
  fullName: System.Messaging.BinaryMessageFormatter.Write(Message,Object)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "將物件序列化至訊息的本文。"
  remarks: "最上層物件的格式和型別格式不需要指定讀取時，它們必須是寫入至佇列。 <xref:System.Messaging.BinaryMessageFormatter.TopObjectFormat%2A>和<xref:System.Messaging.BinaryMessageFormatter.TypeFormat%2A>屬性由格式子還原序列化訊息時，才。</xref:System.Messaging.BinaryMessageFormatter.TypeFormat%2A> </xref:System.Messaging.BinaryMessageFormatter.TopObjectFormat%2A>       <xref:System.Messaging.BinaryMessageFormatter>可以序列化大部分的物件，但是結果不鬆散偶合。</xref:System.Messaging.BinaryMessageFormatter> 不過，它是壓縮，因此格式器是大型物件時很有效率。"
  syntax:
    content: public void Write (System.Messaging.Message message, object obj);
    parameters:
    - id: message
      type: System.Messaging.Message
      description: "<xref href=&quot;System.Messaging.Message&quot;> </xref>其<xref:System.Messaging.Message.Body*>屬性會包含已序列化的物件。</xref:System.Messaging.Message.Body*>"
    - id: obj
      type: System.Object
      description: "要序列化為訊息本文的物件。"
  overload: System.Messaging.BinaryMessageFormatter.Write*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>message</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Messaging.BinaryMessageFormatter.#ctor
  parent: System.Messaging.BinaryMessageFormatter
  isExternal: false
  name: BinaryMessageFormatter()
  nameWithType: BinaryMessageFormatter.BinaryMessageFormatter()
  fullName: System.Messaging.BinaryMessageFormatter.BinaryMessageFormatter()
- uid: System.Messaging.BinaryMessageFormatter.#ctor(System.Runtime.Serialization.Formatters.FormatterAssemblyStyle,System.Runtime.Serialization.Formatters.FormatterTypeStyle)
  parent: System.Messaging.BinaryMessageFormatter
  isExternal: false
  name: BinaryMessageFormatter(FormatterAssemblyStyle,FormatterTypeStyle)
  nameWithType: BinaryMessageFormatter.BinaryMessageFormatter(FormatterAssemblyStyle,FormatterTypeStyle)
  fullName: System.Messaging.BinaryMessageFormatter.BinaryMessageFormatter(FormatterAssemblyStyle,FormatterTypeStyle)
- uid: System.Runtime.Serialization.Formatters.FormatterAssemblyStyle
  parent: System.Runtime.Serialization.Formatters
  isExternal: false
  name: FormatterAssemblyStyle
  nameWithType: FormatterAssemblyStyle
  fullName: System.Runtime.Serialization.Formatters.FormatterAssemblyStyle
- uid: System.Runtime.Serialization.Formatters.FormatterTypeStyle
  parent: System.Runtime.Serialization.Formatters
  isExternal: false
  name: FormatterTypeStyle
  nameWithType: FormatterTypeStyle
  fullName: System.Runtime.Serialization.Formatters.FormatterTypeStyle
- uid: System.Messaging.BinaryMessageFormatter.CanRead(System.Messaging.Message)
  parent: System.Messaging.BinaryMessageFormatter
  isExternal: false
  name: CanRead(Message)
  nameWithType: BinaryMessageFormatter.CanRead(Message)
  fullName: System.Messaging.BinaryMessageFormatter.CanRead(Message)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Messaging.Message
  parent: System.Messaging
  isExternal: false
  name: Message
  nameWithType: Message
  fullName: System.Messaging.Message
- uid: System.Messaging.BinaryMessageFormatter.Clone
  parent: System.Messaging.BinaryMessageFormatter
  isExternal: false
  name: Clone()
  nameWithType: BinaryMessageFormatter.Clone()
  fullName: System.Messaging.BinaryMessageFormatter.Clone()
- uid: System.Messaging.BinaryMessageFormatter.Read(System.Messaging.Message)
  parent: System.Messaging.BinaryMessageFormatter
  isExternal: false
  name: Read(Message)
  nameWithType: BinaryMessageFormatter.Read(Message)
  fullName: System.Messaging.BinaryMessageFormatter.Read(Message)
- uid: System.Messaging.BinaryMessageFormatter.TopObjectFormat
  parent: System.Messaging.BinaryMessageFormatter
  isExternal: false
  name: TopObjectFormat
  nameWithType: BinaryMessageFormatter.TopObjectFormat
  fullName: System.Messaging.BinaryMessageFormatter.TopObjectFormat
- uid: System.Messaging.BinaryMessageFormatter.TypeFormat
  parent: System.Messaging.BinaryMessageFormatter
  isExternal: false
  name: TypeFormat
  nameWithType: BinaryMessageFormatter.TypeFormat
  fullName: System.Messaging.BinaryMessageFormatter.TypeFormat
- uid: System.Messaging.BinaryMessageFormatter.Write(System.Messaging.Message,System.Object)
  parent: System.Messaging.BinaryMessageFormatter
  isExternal: false
  name: Write(Message,Object)
  nameWithType: BinaryMessageFormatter.Write(Message,Object)
  fullName: System.Messaging.BinaryMessageFormatter.Write(Message,Object)
- uid: System.Messaging.BinaryMessageFormatter.#ctor*
  parent: System.Messaging.BinaryMessageFormatter
  isExternal: false
  name: BinaryMessageFormatter
  nameWithType: BinaryMessageFormatter.BinaryMessageFormatter
- uid: System.Messaging.BinaryMessageFormatter.CanRead*
  parent: System.Messaging.BinaryMessageFormatter
  isExternal: false
  name: CanRead
  nameWithType: BinaryMessageFormatter.CanRead
- uid: System.Messaging.BinaryMessageFormatter.Clone*
  parent: System.Messaging.BinaryMessageFormatter
  isExternal: false
  name: Clone
  nameWithType: BinaryMessageFormatter.Clone
- uid: System.Messaging.BinaryMessageFormatter.Read*
  parent: System.Messaging.BinaryMessageFormatter
  isExternal: false
  name: Read
  nameWithType: BinaryMessageFormatter.Read
- uid: System.Messaging.BinaryMessageFormatter.TopObjectFormat*
  parent: System.Messaging.BinaryMessageFormatter
  isExternal: false
  name: TopObjectFormat
  nameWithType: BinaryMessageFormatter.TopObjectFormat
- uid: System.Messaging.BinaryMessageFormatter.TypeFormat*
  parent: System.Messaging.BinaryMessageFormatter
  isExternal: false
  name: TypeFormat
  nameWithType: BinaryMessageFormatter.TypeFormat
- uid: System.Messaging.BinaryMessageFormatter.Write*
  parent: System.Messaging.BinaryMessageFormatter
  isExternal: false
  name: Write
  nameWithType: BinaryMessageFormatter.Write
