### YamlMime:ManagedReference
items:
- uid: System.Web.DynamicData.IFieldTemplateFactory
  id: IFieldTemplateFactory
  children:
  - System.Web.DynamicData.IFieldTemplateFactory.CreateFieldTemplate(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode,System.String)
  - System.Web.DynamicData.IFieldTemplateFactory.Initialize(System.Web.DynamicData.MetaModel)
  langs:
  - csharp
  name: IFieldTemplateFactory
  nameWithType: IFieldTemplateFactory
  fullName: System.Web.DynamicData.IFieldTemplateFactory
  type: Interface
  summary: "定義欄位範本所建立的物件所實作的介面。"
  remarks: "這個類別必須實作<xref:System.Web.DynamicData.FieldTemplateFactory>類別若要建立欄位樣板。</xref:System.Web.DynamicData.FieldTemplateFactory> 這個介面提供初始化的方法<xref:System.Web.DynamicData.FieldTemplateFactory>並建立欄位的範本。</xref:System.Web.DynamicData.FieldTemplateFactory>"
  syntax:
    content: public interface IFieldTemplateFactory
  implements: []
  platform:
  - net462
- uid: System.Web.DynamicData.IFieldTemplateFactory.CreateFieldTemplate(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode,System.String)
  id: CreateFieldTemplate(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode,System.String)
  parent: System.Web.DynamicData.IFieldTemplateFactory
  langs:
  - csharp
  name: CreateFieldTemplate(MetaColumn,DataBoundControlMode,String)
  nameWithType: IFieldTemplateFactory.CreateFieldTemplate(MetaColumn,DataBoundControlMode,String)
  fullName: System.Web.DynamicData.IFieldTemplateFactory.CreateFieldTemplate(MetaColumn,DataBoundControlMode,String)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "建立執行個體欄位的範本使用<xref href=&quot;System.Web.DynamicData.MetaColumn&quot;></xref>類別<xref href=&quot;System.Web.UI.WebControls.DataBoundControlMode&quot;></xref>類別和<xref:System.Web.DynamicData.MetaColumn.UIHint*>屬性。</xref:System.Web.DynamicData.MetaColumn.UIHint*>"
  remarks: "ASP.NET 動態資料欄位的範本會對應至資料模型中的資料類型的資料控制項的 ASP.NET 使用者控制項。 欄位範本通常衍生自<xref:System.Web.DynamicData.FieldTemplateUserControl>，可讓您存取資料欄位、 資料行，以及在資料模型中的中繼資料的類別。</xref:System.Web.DynamicData.FieldTemplateUserControl> 動態資料專案提供預設欄位的範本，但您可以修改它們，或建立自訂欄位的範本。 當 imlemented，這個方法會建立資料資料行的資料行，模式為基礎的欄位樣板和<xref:System.Web.DynamicData.MetaColumn.UIHint%2A>屬性。</xref:System.Web.DynamicData.MetaColumn.UIHint%2A> 您指定`uiHint`參數，如果您想要使用自訂的欄位樣板的資料呈現。"
  syntax:
    content: public System.Web.DynamicData.IFieldTemplate CreateFieldTemplate (System.Web.DynamicData.MetaColumn column, System.Web.UI.WebControls.DataBoundControlMode mode, string uiHint);
    parameters:
    - id: column
      type: System.Web.DynamicData.MetaColumn
      description: "指定要用來顯示的欄位樣板的資料行。"
    - id: mode
      type: System.Web.UI.WebControls.DataBoundControlMode
      description: "指定的欄位樣板的顯示模式。"
    - id: uiHint
      type: System.String
      description: "指定要使用的欄位樣板。"
    return:
      type: System.Web.DynamicData.IFieldTemplate
      description: "執行個體<xref href=&quot;System.Web.DynamicData.FieldTemplateFactory&quot;></xref>物件時在類別中實作。"
  overload: System.Web.DynamicData.IFieldTemplateFactory.CreateFieldTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.IFieldTemplateFactory.Initialize(System.Web.DynamicData.MetaModel)
  id: Initialize(System.Web.DynamicData.MetaModel)
  parent: System.Web.DynamicData.IFieldTemplateFactory
  langs:
  - csharp
  name: Initialize(MetaModel)
  nameWithType: IFieldTemplateFactory.Initialize(MetaModel)
  fullName: System.Web.DynamicData.IFieldTemplateFactory.Initialize(MetaModel)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "初始化<xref href=&quot;System.Web.DynamicData.FieldTemplateFactory&quot;></xref>使用指定的資料模型。"
  remarks: "ASP.NET 動態資料會顯示個別資料欄位中使用欄位的範本。 欄位範本通常被實作為使用者控制項，將資料模型中的資料類型對應至資料控制項中的個別欄位。 這個方法會初始化<xref:System.Web.DynamicData.FieldTemplateFactory>類別，用來建立使用資料模型的欄位樣板的欄位樣板將會使用。</xref:System.Web.DynamicData.FieldTemplateFactory>"
  syntax:
    content: public void Initialize (System.Web.DynamicData.MetaModel model);
    parameters:
    - id: model
      type: System.Web.DynamicData.MetaModel
      description: "指定的欄位樣板使用的資料模型。"
  overload: System.Web.DynamicData.IFieldTemplateFactory.Initialize*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.DynamicData.IFieldTemplateFactory.CreateFieldTemplate(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode,System.String)
  parent: System.Web.DynamicData.IFieldTemplateFactory
  isExternal: false
  name: CreateFieldTemplate(MetaColumn,DataBoundControlMode,String)
  nameWithType: IFieldTemplateFactory.CreateFieldTemplate(MetaColumn,DataBoundControlMode,String)
  fullName: System.Web.DynamicData.IFieldTemplateFactory.CreateFieldTemplate(MetaColumn,DataBoundControlMode,String)
- uid: System.Web.DynamicData.IFieldTemplate
  parent: System.Web.DynamicData
  isExternal: false
  name: IFieldTemplate
  nameWithType: IFieldTemplate
  fullName: System.Web.DynamicData.IFieldTemplate
- uid: System.Web.DynamicData.MetaColumn
  parent: System.Web.DynamicData
  isExternal: false
  name: MetaColumn
  nameWithType: MetaColumn
  fullName: System.Web.DynamicData.MetaColumn
- uid: System.Web.UI.WebControls.DataBoundControlMode
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataBoundControlMode
  nameWithType: DataBoundControlMode
  fullName: System.Web.UI.WebControls.DataBoundControlMode
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.DynamicData.IFieldTemplateFactory.Initialize(System.Web.DynamicData.MetaModel)
  parent: System.Web.DynamicData.IFieldTemplateFactory
  isExternal: false
  name: Initialize(MetaModel)
  nameWithType: IFieldTemplateFactory.Initialize(MetaModel)
  fullName: System.Web.DynamicData.IFieldTemplateFactory.Initialize(MetaModel)
- uid: System.Web.DynamicData.MetaModel
  parent: System.Web.DynamicData
  isExternal: false
  name: MetaModel
  nameWithType: MetaModel
  fullName: System.Web.DynamicData.MetaModel
- uid: System.Web.DynamicData.IFieldTemplateFactory.CreateFieldTemplate*
  parent: System.Web.DynamicData.IFieldTemplateFactory
  isExternal: false
  name: CreateFieldTemplate
  nameWithType: IFieldTemplateFactory.CreateFieldTemplate
- uid: System.Web.DynamicData.IFieldTemplateFactory.Initialize*
  parent: System.Web.DynamicData.IFieldTemplateFactory
  isExternal: false
  name: Initialize
  nameWithType: IFieldTemplateFactory.Initialize
