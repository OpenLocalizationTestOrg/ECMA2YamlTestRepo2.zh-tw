### YamlMime:ManagedReference
items:
- uid: System.Data.OleDb.OleDbCommand
  id: OleDbCommand
  children:
  - System.Data.OleDb.OleDbCommand.#ctor
  - System.Data.OleDb.OleDbCommand.#ctor(System.String)
  - System.Data.OleDb.OleDbCommand.#ctor(System.String,System.Data.OleDb.OleDbConnection)
  - System.Data.OleDb.OleDbCommand.#ctor(System.String,System.Data.OleDb.OleDbConnection,System.Data.OleDb.OleDbTransaction)
  - System.Data.OleDb.OleDbCommand.Cancel
  - System.Data.OleDb.OleDbCommand.Clone
  - System.Data.OleDb.OleDbCommand.CommandText
  - System.Data.OleDb.OleDbCommand.CommandTimeout
  - System.Data.OleDb.OleDbCommand.CommandType
  - System.Data.OleDb.OleDbCommand.Connection
  - System.Data.OleDb.OleDbCommand.CreateDbParameter
  - System.Data.OleDb.OleDbCommand.CreateParameter
  - System.Data.OleDb.OleDbCommand.DbConnection
  - System.Data.OleDb.OleDbCommand.DbParameterCollection
  - System.Data.OleDb.OleDbCommand.DbTransaction
  - System.Data.OleDb.OleDbCommand.DesignTimeVisible
  - System.Data.OleDb.OleDbCommand.Dispose(System.Boolean)
  - System.Data.OleDb.OleDbCommand.ExecuteDbDataReader(System.Data.CommandBehavior)
  - System.Data.OleDb.OleDbCommand.ExecuteNonQuery
  - System.Data.OleDb.OleDbCommand.ExecuteReader
  - System.Data.OleDb.OleDbCommand.ExecuteReader(System.Data.CommandBehavior)
  - System.Data.OleDb.OleDbCommand.ExecuteScalar
  - System.Data.OleDb.OleDbCommand.Parameters
  - System.Data.OleDb.OleDbCommand.Prepare
  - System.Data.OleDb.OleDbCommand.ResetCommandTimeout
  - System.Data.OleDb.OleDbCommand.System#Data#IDbCommand#ExecuteReader
  - System.Data.OleDb.OleDbCommand.System#Data#IDbCommand#ExecuteReader(System.Data.CommandBehavior)
  - System.Data.OleDb.OleDbCommand.System#ICloneable#Clone
  - System.Data.OleDb.OleDbCommand.Transaction
  - System.Data.OleDb.OleDbCommand.UpdatedRowSource
  langs:
  - csharp
  name: OleDbCommand
  nameWithType: OleDbCommand
  fullName: System.Data.OleDb.OleDbCommand
  type: Class
  summary: "代表 SQL 陳述式或預存程序對資料來源執行。"
  remarks: "建立 OleDbCommand 的執行個體時，讀取/寫入屬性會設定為其初始值。 如需這些值的清單，請參閱 OleDbCommand 建構函式。       OleDbCommand 功能執行命令，在資料來源的下列方法: |項目 |描述 |  |----------|-----------------|  |<xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A>|執行傳回資料列的命令。</xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A> <xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A>可能沒有您想要使用的效果來執行命令，例如 SQL SET 陳述式。 |  |<xref:System.Data.OleDb.OleDbCommand.ExecuteNonQuery%2A>|執行命令，例如 SQL INSERT、 DELETE、 UPDATE 和 SET 陳述式。 |  |<xref:System.Data.OleDb.OleDbCommand.ExecuteScalar%2A>|擷取單一值，例如，從資料庫的彙總值。 |      您可以重設<xref:System.Data.OleDb.OleDbCommand.CommandText%2A>屬性和重複使用 OleDbCommand 物件。</xref:System.Data.OleDb.OleDbCommand.CommandText%2A> </xref:System.Data.OleDb.OleDbCommand.ExecuteScalar%2A> </xref:System.Data.OleDb.OleDbCommand.ExecuteNonQuery%2A></xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A> 不過，您必須先關閉<xref:System.Data.OleDb.OleDbDataReader>您可以執行新的或上一個命令之前先。</xref:System.Data.OleDb.OleDbDataReader>       如果嚴重<xref:System.Data.OleDb.OleDbException>（例如，SQL Server 安全性層級 20 或更高） 所執行 OleDbCommand，方法產生<xref:System.Data.OleDb.OleDbConnection>，可能會關閉連線。</xref:System.Data.OleDb.OleDbConnection> </xref:System.Data.OleDb.OleDbException> 不過，使用者可以再次開啟連線後繼續。"
  example:
  - "The following example uses the OleDbCommand, along <xref:System.Data.OleDb.OleDbDataAdapter> and <xref:System.Data.OleDb.OleDbConnection>, to select rows from an Access database. The filled <xref:System.Data.DataSet> is then returned. The example is passed an initialized <xref:System.Data.DataSet>, a connection string, a query string that is an SQL SELECT statement, and a string that is the name of the source database table.  \n  \n [!code-cs[Classic WebData OleDbCommand Example#1](~/add/codesnippet/csharp/t-system.data.oledb.oled_9_1.cs)]\n [!code-vb[Classic WebData OleDbCommand Example#1](~/add/codesnippet/visualbasic/t-system.data.oledb.oled_9_1.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("RecordsAffected")]

      [System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.OleDbCommandDesigner, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.ComponentModel.ToolboxItem(true)]

      public sealed class OleDbCommand : System.Data.Common.DbCommand, ICloneable, IDisposable
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  - System.Data.Common.DbCommand
  implements:
  - System.ICloneable
  - System.IDisposable
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)
  - System.Data.Common.DbCommand.ExecuteNonQueryAsync
  - System.Data.Common.DbCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)
  - System.Data.Common.DbCommand.ExecuteReaderAsync
  - System.Data.Common.DbCommand.ExecuteReaderAsync(System.Data.CommandBehavior)
  - System.Data.Common.DbCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)
  - System.Data.Common.DbCommand.ExecuteReaderAsync(System.Threading.CancellationToken)
  - System.Data.Common.DbCommand.ExecuteScalarAsync
  - System.Data.Common.DbCommand.ExecuteScalarAsync(System.Threading.CancellationToken)
  - System.Data.Common.DbCommand.System#Data#IDbCommand#Connection
  - System.Data.Common.DbCommand.System#Data#IDbCommand#CreateParameter
  - System.Data.Common.DbCommand.System#Data#IDbCommand#Parameters
  - System.Data.Common.DbCommand.System#Data#IDbCommand#Transaction
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.#ctor
  id: '#ctor'
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: OleDbCommand()
  nameWithType: OleDbCommand.OleDbCommand()
  fullName: System.Data.OleDb.OleDbCommand.OleDbCommand()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "初始化的新執行個體<xref href=&quot;System.Data.OleDb.OleDbCommand&quot;></xref>類別。"
  remarks: "基底建構函式所有的欄位初始化成為其預設值。 下表顯示<xref:System.Data.OleDb.OleDbCommand>.</xref:System.Data.OleDb.OleDbCommand>的執行個體的初始屬性值      |屬性 |初始值 |  |----------------|-------------------|  |<xref:System.Data.OleDb.OleDbCommand.CommandText%2A>| 空字串 (&quot;&quot;) |  |<xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A>|&30; |  |<xref:System.Data.OleDb.OleDbCommand.CommandType%2A>|`Text`|  |<xref:System.Data.OleDb.OleDbCommand.Connection%2A>|null|</xref:System.Data.OleDb.OleDbCommand.Connection%2A></xref:System.Data.OleDb.OleDbCommand.CommandType%2A></xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A></xref:System.Data.OleDb.OleDbCommand.CommandText%2A>"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbCommand> and sets some of its properties.  \n  \n [!code-cs[Classic WebData OleDbCommand.OleDbCommand Example#1](~/add/codesnippet/csharp/m-system.data.oledb.oled_21_1.cs)]\n [!code-vb[Classic WebData OleDbCommand.OleDbCommand Example#1](~/add/codesnippet/visualbasic/m-system.data.oledb.oled_21_1.vb)]"
  syntax:
    content: public OleDbCommand ();
    parameters: []
  overload: System.Data.OleDb.OleDbCommand.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: OleDbCommand(String)
  nameWithType: OleDbCommand.OleDbCommand(String)
  fullName: System.Data.OleDb.OleDbCommand.OleDbCommand(String)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "初始化的新執行個體<xref href=&quot;System.Data.OleDb.OleDbCommand&quot;></xref>查詢的文字與類別。"
  remarks: "下表顯示<xref:System.Data.OleDb.OleDbCommand>.</xref:System.Data.OleDb.OleDbCommand>的執行個體的初始屬性值      |屬性 |初始值 |  |----------------|-------------------|  |<xref:System.Data.OleDb.OleDbCommand.CommandText%2A>|`cmdText`|  |<xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A>|&30; |  |<xref:System.Data.IDbCommand.CommandType%2A>|`Text`|  |<xref:System.Data.OleDb.OleDbCommand.Connection%2A>|null|</xref:System.Data.OleDb.OleDbCommand.Connection%2A></xref:System.Data.IDbCommand.CommandType%2A></xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A></xref:System.Data.OleDb.OleDbCommand.CommandText%2A>"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbCommand> and sets some of its properties.  \n  \n [!code-cs[Classic WebData OleDbCommand.OleDbCommand1 Example#1](~/add/codesnippet/csharp/m-system.data.oledb.oled_19_1.cs)]\n [!code-vb[Classic WebData OleDbCommand.OleDbCommand1 Example#1](~/add/codesnippet/visualbasic/m-system.data.oledb.oled_19_1.vb)]"
  syntax:
    content: public OleDbCommand (string cmdText);
    parameters:
    - id: cmdText
      type: System.String
      description: "查詢的文字。"
  overload: System.Data.OleDb.OleDbCommand.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.#ctor(System.String,System.Data.OleDb.OleDbConnection)
  id: '#ctor(System.String,System.Data.OleDb.OleDbConnection)'
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: OleDbCommand(String,OleDbConnection)
  nameWithType: OleDbCommand.OleDbCommand(String,OleDbConnection)
  fullName: System.Data.OleDb.OleDbCommand.OleDbCommand(String,OleDbConnection)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "初始化的新執行個體<xref href=&quot;System.Data.OleDb.OleDbCommand&quot;></xref>查詢的文字與類別和<xref href=&quot;System.Data.OleDb.OleDbConnection&quot;> </xref>。"
  remarks: "下表顯示<xref:System.Data.OleDb.OleDbCommand>.</xref:System.Data.OleDb.OleDbCommand>的執行個體的初始屬性值      |屬性 |初始值 |  |----------------|-------------------|  |<xref:System.Data.OleDb.OleDbCommand.CommandText%2A>|`cmdText`|  |<xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A>|&30; |  |<xref:System.Data.IDbCommand.CommandType%2A>|`Text`|  |<xref:System.Data.OleDb.OleDbCommand.Connection%2A>|這是值的新<xref:System.Data.OleDb.OleDbConnection>`connection`參數。 |      您可以變更任何這些參數的值設定相關的屬性。</xref:System.Data.OleDb.OleDbConnection> </xref:System.Data.OleDb.OleDbCommand.Connection%2A> </xref:System.Data.IDbCommand.CommandType%2A> </xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A> </xref:System.Data.OleDb.OleDbCommand.CommandText%2A>"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbCommand> and sets some of its properties.  \n  \n [!code-vb[Classic WebData OleDbCommand.OleDbCommand2 Example#1](~/add/codesnippet/visualbasic/26f0a1c0-3abd-4fd3-81fd-_1.vb)]\n [!code-cs[Classic WebData OleDbCommand.OleDbCommand2 Example#1](~/add/codesnippet/csharp/26f0a1c0-3abd-4fd3-81fd-_1.cs)]"
  syntax:
    content: public OleDbCommand (string cmdText, System.Data.OleDb.OleDbConnection connection);
    parameters:
    - id: cmdText
      type: System.String
      description: "查詢的文字。"
    - id: connection
      type: System.Data.OleDb.OleDbConnection
      description: "<xref href=&quot;System.Data.OleDb.OleDbConnection&quot;> </xref> ，代表資料來源的連接。"
  overload: System.Data.OleDb.OleDbCommand.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.#ctor(System.String,System.Data.OleDb.OleDbConnection,System.Data.OleDb.OleDbTransaction)
  id: '#ctor(System.String,System.Data.OleDb.OleDbConnection,System.Data.OleDb.OleDbTransaction)'
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: OleDbCommand(String,OleDbConnection,OleDbTransaction)
  nameWithType: OleDbCommand.OleDbCommand(String,OleDbConnection,OleDbTransaction)
  fullName: System.Data.OleDb.OleDbCommand.OleDbCommand(String,OleDbConnection,OleDbTransaction)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "初始化的新執行個體<xref href=&quot;System.Data.OleDb.OleDbCommand&quot;></xref>在查詢的文字與類別<xref href=&quot;System.Data.OleDb.OleDbConnection&quot;> </xref>，和<xref:System.Data.OleDb.OleDbCommand.Transaction*>。</xref:System.Data.OleDb.OleDbCommand.Transaction*>"
  remarks: "下表顯示<xref:System.Data.OleDb.OleDbCommand>.</xref:System.Data.OleDb.OleDbCommand>的執行個體的初始屬性值      |屬性 |初始值 |  |----------------|-------------------|  |<xref:System.Data.OleDb.OleDbCommand.CommandText%2A>|`cmdText`|  |<xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A>|&30; |  |<xref:System.Data.IDbCommand.CommandType%2A>|`Text`|  |<xref:System.Data.OleDb.OleDbCommand.Connection%2A>|這是值的新<xref:System.Data.OleDb.OleDbConnection>`connection`參數。 |      您可以變更任何這些參數的值設定相關的屬性。</xref:System.Data.OleDb.OleDbConnection> </xref:System.Data.OleDb.OleDbCommand.Connection%2A> </xref:System.Data.IDbCommand.CommandType%2A> </xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A> </xref:System.Data.OleDb.OleDbCommand.CommandText%2A>"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbCommand> and sets some of its properties.  \n  \n [!code-cs[Classic WebData OleDbCommand.OleDbCommand3#1](~/add/codesnippet/csharp/e97c7061-6e79-4e9b-b76e-_1.cs)]\n [!code-vb[Classic WebData OleDbCommand.OleDbCommand3#1](~/add/codesnippet/visualbasic/e97c7061-6e79-4e9b-b76e-_1.vb)]"
  syntax:
    content: public OleDbCommand (string cmdText, System.Data.OleDb.OleDbConnection connection, System.Data.OleDb.OleDbTransaction transaction);
    parameters:
    - id: cmdText
      type: System.String
      description: "查詢的文字。"
    - id: connection
      type: System.Data.OleDb.OleDbConnection
      description: "<xref href=&quot;System.Data.OleDb.OleDbConnection&quot;> </xref> ，代表資料來源的連接。"
    - id: transaction
      type: System.Data.OleDb.OleDbTransaction
      description: "中的交易<xref href=&quot;System.Data.OleDb.OleDbCommand&quot;></xref>執行。"
  overload: System.Data.OleDb.OleDbCommand.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.Cancel
  id: Cancel
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: Cancel()
  nameWithType: OleDbCommand.Cancel()
  fullName: System.Data.OleDb.OleDbCommand.Cancel()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "嘗試取消執行<xref href=&quot;System.Data.OleDb.OleDbCommand&quot;> </xref>。"
  remarks: "如果沒有要取消項目，會發生任何狀況。 不過，如果處理序中，沒有命令，而且要取消的嘗試失敗，就會不產生任何例外狀況。"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbCommand>, executes it, and then cancels the execution. To accomplish this, the method is passed a string that is an SQL SELECT statement and a string to use to connect to the data source.  \n  \n [!code-cs[Classic WebData OleDbCommand.Cancel Example#1](~/add/codesnippet/csharp/m-system.data.oledb.oled_0_1.cs)]\n [!code-vb[Classic WebData OleDbCommand.Cancel Example#1](~/add/codesnippet/visualbasic/m-system.data.oledb.oled_0_1.vb)]"
  syntax:
    content: public override void Cancel ();
    parameters: []
  overload: System.Data.OleDb.OleDbCommand.Cancel*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.Clone
  id: Clone
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: Clone()
  nameWithType: OleDbCommand.Clone()
  fullName: System.Data.OleDb.OleDbCommand.Clone()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "建立新<xref href=&quot;System.Data.OleDb.OleDbCommand&quot;></xref>物件目前的執行個體的複本。"
  syntax:
    content: public System.Data.OleDb.OleDbCommand Clone ();
    parameters: []
    return:
      type: System.Data.OleDb.OleDbCommand
      description: "新<xref href=&quot;System.Data.OleDb.OleDbCommand&quot;></xref>物件，這個執行個體的複本。"
  overload: System.Data.OleDb.OleDbCommand.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.CommandText
  id: CommandText
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: CommandText
  nameWithType: OleDbCommand.CommandText
  fullName: System.Data.OleDb.OleDbCommand.CommandText
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "取得或設定要在資料來源執行的預存程序的 SQL 陳述式。"
  remarks: "當<xref:System.Data.OleDb.OleDbCommand.CommandType%2A>屬性設定為`StoredProcedure`、<xref:System.Data.OleDb.OleDbCommand.CommandType%2A>屬性應該設定為預存程序的名稱。</xref:System.Data.OleDb.OleDbCommand.CommandType%2A> </xref:System.Data.OleDb.OleDbCommand.CommandType%2A> 使用者可能需要使用逸出字元語法，如果預存程序名稱包含任何特殊字元。 命令執行這個預存程序，當您呼叫其中一個`Execute`方法。       當<xref:System.Data.OleDb.OleDbCommand.CommandType%2A>設`TableDirect`、<xref:System.Data.OleDb.OleDbCommand.CommandType%2A>屬性應該設定為資料表或資料表的名稱來存取。</xref:System.Data.OleDb.OleDbCommand.CommandType%2A> </xref:System.Data.OleDb.OleDbCommand.CommandType%2A> 使用者可能需要的任何具名資料表包含任何特殊字元時，請使用逸出字元語法。 會傳回所有資料列和資料行的具名的資料表或資料表，當您呼叫其中一個`Execute`方法。       您不能設定<xref:System.Data.OleDb.OleDbCommand.Connection%2A>， <xref:System.Data.OleDb.OleDbCommand.CommandType%2A>，和 CommandText 屬性，如果目前的連接正在執行 execute 或擷取作業。</xref:System.Data.OleDb.OleDbCommand.CommandType%2A> </xref:System.Data.OleDb.OleDbCommand.Connection%2A>       OLE DB.NET 提供者不支援具名的參數來傳遞參數至 SQL 陳述式或預存程序呼叫<xref:System.Data.OleDb.OleDbCommand>時<xref:System.Data.OleDb.OleDbCommand.CommandType%2A>設`Text`。</xref:System.Data.OleDb.OleDbCommand.CommandType%2A> </xref:System.Data.OleDb.OleDbCommand> 在此情況下，您必須使用問號 （？） 預留位置。 例如︰`SELECT * FROM Customers WHERE CustomerID = ?`的順序，因此<xref:System.Data.OleDb.OleDbParameter>物件加入至<xref:System.Data.OleDb.OleDbParameterCollection>必須直接對應至問號預留位置參數的位置。</xref:System.Data.OleDb.OleDbParameterCollection> </xref:System.Data.OleDb.OleDbParameter>       如需詳細資訊，請參閱[設定參數和參數資料型別](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbCommand> and sets some of its properties.  \n  \n [!code-vb[Classic WebData OleDbCommand.CommandText Example#1](~/add/codesnippet/visualbasic/p-system.data.oledb.oled_11_1.vb)]\n [!code-cs[Classic WebData OleDbCommand.CommandText Example#1](~/add/codesnippet/csharp/p-system.data.oledb.oled_11_1.cs)]"
  syntax:
    content: public override string CommandText { get; set; }
    return:
      type: System.String
      description: "SQL 陳述式或預存程序來執行。 預設值為空字串。"
  overload: System.Data.OleDb.OleDbCommand.CommandText*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.CommandTimeout
  id: CommandTimeout
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: CommandTimeout
  nameWithType: OleDbCommand.CommandTimeout
  fullName: System.Data.OleDb.OleDbCommand.CommandTimeout
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "取得或設定結束執行命令的嘗試並產生錯誤之前的等待時間。"
  remarks: "值為 0 表示無限制，並應在 CommandTimeout 避免，因為嘗試執行命令會無限期等候。"
  syntax:
    content: public override int CommandTimeout { get; set; }
    return:
      type: System.Int32
      description: "時間 （以秒為單位） 以等候執行命令。 預設值為 30 秒。"
  overload: System.Data.OleDb.OleDbCommand.CommandTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.CommandType
  id: CommandType
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: CommandType
  nameWithType: OleDbCommand.CommandType
  fullName: System.Data.OleDb.OleDbCommand.CommandType
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "取得或設定值，指出如何<xref:System.Data.OleDb.OleDbCommand.CommandText*>屬性會被解譯。</xref:System.Data.OleDb.OleDbCommand.CommandText*>"
  remarks: "當您將 CommandType 屬性設`StoredProcedure`，您應該設定<xref:System.Data.OleDb.OleDbCommand.CommandText%2A>預存程序名稱的屬性。</xref:System.Data.OleDb.OleDbCommand.CommandText%2A> 當您呼叫其中一個執行方法時，命令會執行這個預存程序。       <xref:System.Data.OleDb.OleDbCommand.Connection%2A>，CommandType 和<xref:System.Data.OleDb.OleDbCommand.CommandText%2A>無法設定屬性，如果目前的連接正在執行 execute 或擷取作業。</xref:System.Data.OleDb.OleDbCommand.CommandText%2A> </xref:System.Data.OleDb.OleDbCommand.Connection%2A>       OLE DB.NET 提供者不支援具名的參數來傳遞參數至 SQL 陳述式或預存程序呼叫<xref:System.Data.OleDb.OleDbCommand>CommandType 會設定為 Text。</xref:System.Data.OleDb.OleDbCommand> 在此情況下，您必須使用問號 （？） 預留位置。 例如︰`SELECT * FROM Customers WHERE CustomerID = ?`的順序，因此<xref:System.Data.OleDb.OleDbParameter>物件加入至<xref:System.Data.OleDb.OleDbParameterCollection>必須直接對應至問號預留位置參數的位置。</xref:System.Data.OleDb.OleDbParameterCollection> </xref:System.Data.OleDb.OleDbParameter> 如需詳細資訊，請參閱[設定參數和參數資料型別](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public override System.Data.CommandType CommandType { get; set; }
    return:
      type: System.Data.CommandType
      description: "CommandType 值的其中一個。 預設為文字。"
  overload: System.Data.OleDb.OleDbCommand.CommandType*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "值不是有效的 CommandType。"
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.Connection
  id: Connection
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: Connection
  nameWithType: OleDbCommand.Connection
  fullName: System.Data.OleDb.OleDbCommand.Connection
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "取得或設定<xref href=&quot;System.Data.OleDb.OleDbConnection&quot;></xref>的這個執行個體所使用<xref href=&quot;System.Data.OleDb.OleDbCommand&quot;> </xref>。"
  remarks: "您無法設定此連接時，<xref:System.Data.OleDb.OleDbCommand.CommandType%2A>和<xref:System.Data.OleDb.OleDbCommand.CommandText%2A>屬性如果目前的連接正在執行 execute 或擷取作業。</xref:System.Data.OleDb.OleDbCommand.CommandText%2A> </xref:System.Data.OleDb.OleDbCommand.CommandType%2A>       如果交易正在進行時，設定連線和<xref:System.Data.OleDb.OleDbCommand.Transaction%2A>屬性不是 null，<xref:System.InvalidOperationException>產生。</xref:System.InvalidOperationException> </xref:System.Data.OleDb.OleDbCommand.Transaction%2A> 如果<xref:System.Data.OleDb.OleDbCommand.Transaction%2A>屬性不是 null，且交易已經認可或回復，<xref:System.Data.OleDb.OleDbCommand.Transaction%2A>設為 null。</xref:System.Data.OleDb.OleDbCommand.Transaction%2A> </xref:System.Data.OleDb.OleDbCommand.Transaction%2A>"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbCommand> and sets some of its properties.  \n  \n [!code-vb[Classic WebData OleDbCommand.Connection Example#1](~/add/codesnippet/visualbasic/p-system.data.oledb.oled_0_1.vb)]\n [!code-cs[Classic WebData OleDbCommand.Connection Example#1](~/add/codesnippet/csharp/p-system.data.oledb.oled_0_1.cs)]"
  syntax:
    content: public System.Data.OleDb.OleDbConnection Connection { get; set; }
    return:
      type: System.Data.OleDb.OleDbConnection
      description: "資料來源的連接。 預設值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Data.OleDb.OleDbCommand.Connection*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "交易正在進行中時，已變更連接屬性。"
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.CreateDbParameter
  id: CreateDbParameter
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: CreateDbParameter()
  nameWithType: OleDbCommand.CreateDbParameter()
  fullName: System.Data.OleDb.OleDbCommand.CreateDbParameter()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  syntax:
    content: protected override System.Data.Common.DbParameter CreateDbParameter ();
    parameters: []
    return:
      type: System.Data.Common.DbParameter
      description: "即將加入。"
  overload: System.Data.OleDb.OleDbCommand.CreateDbParameter*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.CreateParameter
  id: CreateParameter
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: CreateParameter()
  nameWithType: OleDbCommand.CreateParameter()
  fullName: System.Data.OleDb.OleDbCommand.CreateParameter()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "建立的新執行個體<xref href=&quot;System.Data.OleDb.OleDbParameter&quot;></xref>物件。"
  remarks: "CreateParameter 方法是強類型的版本的<xref:System.Data.IDbCommand.CreateParameter%2A>.</xref:System.Data.IDbCommand.CreateParameter%2A>"
  syntax:
    content: public System.Data.OleDb.OleDbParameter CreateParameter ();
    parameters: []
    return:
      type: System.Data.OleDb.OleDbParameter
      description: "<xref href=&quot;System.Data.OleDb.OleDbParameter&quot;> </xref>物件。"
  overload: System.Data.OleDb.OleDbCommand.CreateParameter*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.DbConnection
  id: DbConnection
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: DbConnection
  nameWithType: OleDbCommand.DbConnection
  fullName: System.Data.OleDb.OleDbCommand.DbConnection
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  syntax:
    content: protected override System.Data.Common.DbConnection DbConnection { get; set; }
    return:
      type: System.Data.Common.DbConnection
      description: "即將加入。"
  overload: System.Data.OleDb.OleDbCommand.DbConnection*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.DbParameterCollection
  id: DbParameterCollection
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: DbParameterCollection
  nameWithType: OleDbCommand.DbParameterCollection
  fullName: System.Data.OleDb.OleDbCommand.DbParameterCollection
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  syntax:
    content: protected override System.Data.Common.DbParameterCollection DbParameterCollection { get; }
    return:
      type: System.Data.Common.DbParameterCollection
      description: "即將加入。"
  overload: System.Data.OleDb.OleDbCommand.DbParameterCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.DbTransaction
  id: DbTransaction
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: DbTransaction
  nameWithType: OleDbCommand.DbTransaction
  fullName: System.Data.OleDb.OleDbCommand.DbTransaction
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  syntax:
    content: protected override System.Data.Common.DbTransaction DbTransaction { get; set; }
    return:
      type: System.Data.Common.DbTransaction
      description: "即將加入。"
  overload: System.Data.OleDb.OleDbCommand.DbTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.DesignTimeVisible
  id: DesignTimeVisible
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: DesignTimeVisible
  nameWithType: OleDbCommand.DesignTimeVisible
  fullName: System.Data.OleDb.OleDbCommand.DesignTimeVisible
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "取得或設定值，指出命令物件是否應該在自訂的 Windows Form 設計工具控制項中顯示。"
  syntax:
    content: public override bool DesignTimeVisible { get; set; }
    return:
      type: System.Boolean
      description: "值，指出是否應該顯示在控制項中的命令物件。 預設值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Data.OleDb.OleDbCommand.DesignTimeVisible*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: OleDbCommand.Dispose(Boolean)
  fullName: System.Data.OleDb.OleDbCommand.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "即將加入。"
  overload: System.Data.OleDb.OleDbCommand.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.ExecuteDbDataReader(System.Data.CommandBehavior)
  id: ExecuteDbDataReader(System.Data.CommandBehavior)
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: ExecuteDbDataReader(CommandBehavior)
  nameWithType: OleDbCommand.ExecuteDbDataReader(CommandBehavior)
  fullName: System.Data.OleDb.OleDbCommand.ExecuteDbDataReader(CommandBehavior)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  syntax:
    content: protected override System.Data.Common.DbDataReader ExecuteDbDataReader (System.Data.CommandBehavior behavior);
    parameters:
    - id: behavior
      type: System.Data.CommandBehavior
      description: "即將加入。"
    return:
      type: System.Data.Common.DbDataReader
      description: "即將加入。"
  overload: System.Data.OleDb.OleDbCommand.ExecuteDbDataReader*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.ExecuteNonQuery
  id: ExecuteNonQuery
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: ExecuteNonQuery()
  nameWithType: OleDbCommand.ExecuteNonQuery()
  fullName: System.Data.OleDb.OleDbCommand.ExecuteNonQuery()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "執行 SQL 陳述式針對<xref:System.Data.OleDb.OleDbCommand.Connection*>並傳回受影響的資料列數目。</xref:System.Data.OleDb.OleDbCommand.Connection*>"
  remarks: "執行資料庫目錄作業，例如，來查詢資料庫的結構來建立資料庫物件，例如資料表、 或是變更資料庫中的資料，而不使用，您可以使用 ExecuteNonQuery<xref:System.Data.DataSet>執行 UPDATE、 INSERT 或 DELETE 陳述式。</xref:System.Data.DataSet>       ExecuteNonQuery 不傳回任何資料列，雖然任何輸出參數或傳回值，對應到參數會以資料填入。       UPDATE、 INSERT 和 DELETE 陳述式的傳回值會是命令影響的資料列數目。 對於所有其他陳述式類型，傳回的值為-1。 如果需要進行復原，傳回值也是-1。"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbCommand> and then executes it using ExecuteNonQuery. The example is passed a string that is an SQL statement such as UPDATE, INSERT, or DELETE, and a string to use to connect to the data source.  \n  \n [!code-cs[Classic WebData OleDbCommand.ExecuteNonQuery Example#1](~/add/codesnippet/csharp/m-system.data.oledb.oled_5_1.cs)]\n [!code-vb[Classic WebData OleDbCommand.ExecuteNonQuery Example#1](~/add/codesnippet/visualbasic/m-system.data.oledb.oled_5_1.vb)]"
  syntax:
    content: public override int ExecuteNonQuery ();
    parameters: []
    return:
      type: System.Int32
      description: "受影響的資料列數目。"
  overload: System.Data.OleDb.OleDbCommand.ExecuteNonQuery*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "連接不存在。       -或者-連接未開啟。       -或-無法從內容原本會登記連接已執行命令，以在不同的交易內容。"
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.ExecuteReader
  id: ExecuteReader
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: ExecuteReader()
  nameWithType: OleDbCommand.ExecuteReader()
  fullName: System.Data.OleDb.OleDbCommand.ExecuteReader()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "傳送<> *> 來<> *>，並建置<xref href=&quot;System.Data.OleDb.OleDbDataReader&quot;> </xref>。"
  remarks: "當<xref:System.Data.OleDb.OleDbCommand.CommandType%2A>屬性設定為`StoredProcedure`、<xref:System.Data.OleDb.OleDbCommand.CommandText%2A>屬性應該設定為預存程序的名稱。</xref:System.Data.OleDb.OleDbCommand.CommandText%2A> </xref:System.Data.OleDb.OleDbCommand.CommandType%2A> 當您呼叫 ExecuteReader 時，命令會執行這個預存程序。       在關閉之前<xref:System.Data.OleDb.OleDbConnection>，先關閉<xref:System.Data.OleDb.OleDbDataReader>物件。</xref:System.Data.OleDb.OleDbDataReader> </xref:System.Data.OleDb.OleDbConnection> 您也必須關閉<xref:System.Data.OleDb.OleDbDataReader>物件如果您打算重複使用<xref:System.Data.OleDb.OleDbCommand>物件。</xref:System.Data.OleDb.OleDbCommand> </xref:System.Data.OleDb.OleDbDataReader>"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbCommand>, and then executes it by passing a string that is an SQL SELECT statement, and a string to use to connect to the data source.  \n  \n [!code-cs[Classic WebData OleDbCommand.ExecuteReader1 Example#1](~/add/codesnippet/csharp/m-system.data.oledb.oled_11_1.cs)]\n [!code-vb[Classic WebData OleDbCommand.ExecuteReader1 Example#1](~/add/codesnippet/visualbasic/m-system.data.oledb.oled_11_1.vb)]"
  syntax:
    content: public System.Data.OleDb.OleDbDataReader ExecuteReader ();
    parameters: []
    return:
      type: System.Data.OleDb.OleDbDataReader
      description: "<xref href=&quot;System.Data.OleDb.OleDbDataReader&quot;> </xref>物件。"
  overload: System.Data.OleDb.OleDbCommand.ExecuteReader*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "無法從內容原本會登記連接已執行命令，以在不同的交易內容。"
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.ExecuteReader(System.Data.CommandBehavior)
  id: ExecuteReader(System.Data.CommandBehavior)
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: ExecuteReader(CommandBehavior)
  nameWithType: OleDbCommand.ExecuteReader(CommandBehavior)
  fullName: System.Data.OleDb.OleDbCommand.ExecuteReader(CommandBehavior)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "傳送<> *> 來<> *>，並建置<xref href=&quot;System.Data.OleDb.OleDbDataReader&quot;></xref>使用其中一種<xref href=&quot;System.Data.CommandBehavior&quot;></xref>值。"
  remarks: "當您指定<xref:System.Data.CommandBehavior>與<xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A>方法<xref:System.Data.OleDb.OleDbCommand>物件、.NET Framework Data Provider for OLE DB 執行繫結使用 OLE DB **IRow**介面是否可用。</xref:System.Data.OleDb.OleDbCommand> </xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A> </xref:System.Data.CommandBehavior> 否則，它會使用**IRowset**介面。 如果您的 SQL 陳述式預期會傳回單一資料列，則指定<xref:System.Data.CommandBehavior>也可以改善應用程式效能。</xref:System.Data.CommandBehavior>       當<xref:System.Data.OleDb.OleDbCommand.CommandType%2A>屬性設定為`StoredProcedure`、<xref:System.Data.OleDb.OleDbCommand.CommandText%2A>屬性應該設定為預存程序的名稱。</xref:System.Data.OleDb.OleDbCommand.CommandText%2A> </xref:System.Data.OleDb.OleDbCommand.CommandType%2A> 命令執行這個預存程序，當您呼叫<xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A>.</xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A>       <xref:System.Data.OleDb.OleDbDataReader>支援特殊模式可以讓您有效率地讀取大型二進位值。</xref:System.Data.OleDb.OleDbDataReader> 如需詳細資訊，請參閱`SequentialAccess` <xref:System.Data.CommandBehavior>。</xref:System.Data.CommandBehavior>設定       在關閉之前<xref:System.Data.OleDb.OleDbConnection>，先關閉<xref:System.Data.OleDb.OleDbDataReader>物件。</xref:System.Data.OleDb.OleDbDataReader> </xref:System.Data.OleDb.OleDbConnection> 您也必須關閉<xref:System.Data.OleDb.OleDbDataReader>物件如果您打算重複使用<xref:System.Data.OleDb.OleDbCommand>物件。</xref:System.Data.OleDb.OleDbCommand> </xref:System.Data.OleDb.OleDbDataReader> 如果<xref:System.Data.OleDb.OleDbDataReader>會透過<xref:System.Data.CommandBehavior>設`CloseConnection`，正在關閉<xref:System.Data.OleDb.OleDbDataReader>自動關閉的連接。</xref:System.Data.OleDb.OleDbDataReader> </xref:System.Data.CommandBehavior> </xref:System.Data.OleDb.OleDbDataReader>"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbCommand>, and then executes it by passing a string that is a Transact-SQL SELECT statement, and a string to use to connect to the data source. <xref:System.Data.CommandBehavior> is set to <xref:System.Data.CommandBehavior>.  \n  \n [!code-vb[Classic WebData OleDbCommand.ExecuteReader2#1](~/add/codesnippet/visualbasic/m-system.data.oledb.oled_2_1.vb)]\n [!code-cs[Classic WebData OleDbCommand.ExecuteReader2#1](~/add/codesnippet/csharp/m-system.data.oledb.oled_2_1.cs)]"
  syntax:
    content: public System.Data.OleDb.OleDbDataReader ExecuteReader (System.Data.CommandBehavior behavior);
    parameters:
    - id: behavior
      type: System.Data.CommandBehavior
      description: "其中一個<xref href=&quot;System.Data.CommandBehavior&quot;></xref>值。"
    return:
      type: System.Data.OleDb.OleDbDataReader
      description: "<xref href=&quot;System.Data.OleDb.OleDbDataReader&quot;> </xref>物件。"
  overload: System.Data.OleDb.OleDbCommand.ExecuteReader*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "無法從內容原本會登記連接已執行命令，以在不同的交易內容。"
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.ExecuteScalar
  id: ExecuteScalar
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: ExecuteScalar()
  nameWithType: OleDbCommand.ExecuteScalar()
  fullName: System.Data.OleDb.OleDbCommand.ExecuteScalar()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "執行查詢，並傳回第一個資料列的第一個資料行中查詢所傳回的結果集。 會忽略額外的資料行或資料列。"
  remarks: "使用 ExecuteScalar 方法來擷取單一值，例如，彙總的值，從資料來源。 這需要較少的程式碼比使用的<xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A>方法，並接著執行的作業，需要產生單一值使用<xref:System.Data.OleDb.OleDbDataReader>.</xref:System.Data.OleDb.OleDbDataReader>所傳回的資料</xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A>       典型的 ExecuteScalar 查詢可以進行格式化，如下列 C# 範例所示︰```   CommandText = &quot;SELECT COUNT(*) FROM region&quot;;   Int32 count = (int32) ExecuteScalar();   ```"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbCommand> and then executes it using ExecuteScalar. The example is passed a string that is an SQL statement that returns an aggregate result, and a string to use to connect to the data source.  \n  \n [!code-cs[Classic WebData OleDbCommand.ExecuteScalar#1](~/add/codesnippet/csharp/m-system.data.oledb.oled_8_1.cs)]\n [!code-vb[Classic WebData OleDbCommand.ExecuteScalar#1](~/add/codesnippet/visualbasic/m-system.data.oledb.oled_8_1.vb)]"
  syntax:
    content: public override object ExecuteScalar ();
    parameters: []
    return:
      type: System.Object
      description: "在結果中的第一個資料列的第一個資料行設定，或為 null 參考如果結果集是空的。"
  overload: System.Data.OleDb.OleDbCommand.ExecuteScalar*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "無法從內容原本會登記連接已執行命令，以在不同的交易內容。"
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.Parameters
  id: Parameters
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: Parameters
  nameWithType: OleDbCommand.Parameters
  fullName: System.Data.OleDb.OleDbCommand.Parameters
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Gets the <xref href=&quot;System.Data.OleDb.OleDbParameterCollection&quot;></xref>."
  remarks: "OLE DB.NET 提供者不支援具名的參數來傳遞參數至 SQL 陳述式或預存程序呼叫<xref:System.Data.OleDb.OleDbCommand>時<xref:System.Data.OleDb.OleDbCommand.CommandType%2A>設`Text`。</xref:System.Data.OleDb.OleDbCommand.CommandType%2A> </xref:System.Data.OleDb.OleDbCommand> 在此情況下，您必須使用問號 （？） 預留位置。 例如︰`SELECT * FROM Customers WHERE CustomerID = ?`的順序，因此<xref:System.Data.OleDb.OleDbParameter>物件加入至<xref:System.Data.OleDb.OleDbParameterCollection>必須直接對應至問號預留位置參數的命令文字中的位置。</xref:System.Data.OleDb.OleDbParameterCollection> </xref:System.Data.OleDb.OleDbParameter>      > [!NOTE] > 如果集合中的參數不符合查詢的需求，要執行，可能會產生錯誤。       如需詳細資訊，請參閱[設定參數和參數資料型別](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbCommand> and displays its parameters. To accomplish this, the method is passed an <xref:System.Data.OleDb.OleDbConnection>, a query string that is an SQL SELECT statement, and an array of <xref:System.Data.OleDb.OleDbParameter> objects.  \n  \n [!code-vb[Classic WebData OleDbCommand.Parameters Example#1](~/add/codesnippet/visualbasic/p-system.data.oledb.oled_18_1.vb)]\n [!code-cs[Classic WebData OleDbCommand.Parameters Example#1](~/add/codesnippet/csharp/p-system.data.oledb.oled_18_1.cs)]"
  syntax:
    content: public System.Data.OleDb.OleDbParameterCollection Parameters { get; }
    return:
      type: System.Data.OleDb.OleDbParameterCollection
      description: "SQL 陳述式或預存程序的參數。 預設為空集合。"
  overload: System.Data.OleDb.OleDbCommand.Parameters*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.Prepare
  id: Prepare
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: Prepare()
  nameWithType: OleDbCommand.Prepare()
  fullName: System.Data.OleDb.OleDbCommand.Prepare()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "資料來源上建立命令已備妥 （或編譯） 版本。"
  remarks: "如果<xref:System.Data.OleDb.OleDbCommand.CommandType%2A>屬性設定為`TableDirect`，準備不做任何動作。</xref:System.Data.OleDb.OleDbCommand.CommandType%2A> 如果<xref:System.Data.OleDb.OleDbCommand.CommandType%2A>設`StoredProcedure`，準備呼叫應該會成功，雖然可能會造成否 op.</xref:System.Data.OleDb.OleDbCommand.CommandType%2A>       呼叫準備之前，請先備妥的陳述式中指定的每個參數的資料類型。 針對每個參數具有可變長度資料類型，您必須設定**大小**屬性所需的最大大小。 準備如果不符合這些條件會傳回錯誤。       如果您呼叫`Execute`方法之後呼叫準備 」，任何參數值的大於所指定的值**大小**屬性會自動被截斷成原始的指定大小的參數，並會傳回任何截斷錯誤。       輸出參數 （不論是否已備妥） 必須是使用者指定的資料類型。 如果您指定的可變長度資料類型，您也必須指定最大值**大小**。"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbCommand> and opens the connection. The example then prepares a stored procedure on the data source by passing a string that is an SQL SELECT statement and a string to use to connect to the data source.  \n  \n [!code-vb[Classic WebData OleDbCommand.Prepare Example#1](~/add/codesnippet/visualbasic/m-system.data.oledb.oled_26_1.vb)]\n [!code-cs[Classic WebData OleDbCommand.Prepare Example#1](~/add/codesnippet/csharp/m-system.data.oledb.oled_26_1.cs)]"
  syntax:
    content: public override void Prepare ();
    parameters: []
  overload: System.Data.OleDb.OleDbCommand.Prepare*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<> </> *> 未設定。      -或- <> </> *> 未開啟。"
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.ResetCommandTimeout
  id: ResetCommandTimeout
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: ResetCommandTimeout()
  nameWithType: OleDbCommand.ResetCommandTimeout()
  fullName: System.Data.OleDb.OleDbCommand.ResetCommandTimeout()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "重設<xref:System.Data.OleDb.OleDbCommand.CommandTimeout*>屬性設為預設值。</xref:System.Data.OleDb.OleDbCommand.CommandTimeout*>"
  remarks: "預設值<xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A>為 30 秒。</xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A>"
  syntax:
    content: public void ResetCommandTimeout ();
    parameters: []
  overload: System.Data.OleDb.OleDbCommand.ResetCommandTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.System#Data#IDbCommand#ExecuteReader
  id: System#Data#IDbCommand#ExecuteReader
  isEii: true
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: System.Data.IDbCommand.ExecuteReader()
  nameWithType: OleDbCommand.System.Data.IDbCommand.ExecuteReader()
  fullName: System.Data.OleDb.OleDbCommand.System.Data.IDbCommand.ExecuteReader()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "如需這個成員的說明，請參閱&lt;xref:System.Data.IDbCommand.ExecuteReader%2A?displayProperty=fullName&gt;。"
  remarks: "這個成員是明確介面成員實作。 它可用時，才<xref:System.Data.OleDb.OleDbCommand>執行個體轉換成<xref:System.Data.IDbCommand>介面。</xref:System.Data.IDbCommand> </xref:System.Data.OleDb.OleDbCommand>"
  syntax:
    content: System.Data.IDataReader IDbCommand.ExecuteReader ();
    parameters: []
    return:
      type: System.Data.IDataReader
      description: "<xref href=&quot;System.Data.IDataReader&quot;> </xref>物件。"
  overload: System.Data.OleDb.OleDbCommand.System#Data#IDbCommand#ExecuteReader*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.System#Data#IDbCommand#ExecuteReader(System.Data.CommandBehavior)
  id: System#Data#IDbCommand#ExecuteReader(System.Data.CommandBehavior)
  isEii: true
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: System.Data.IDbCommand.ExecuteReader(CommandBehavior)
  nameWithType: OleDbCommand.System.Data.IDbCommand.ExecuteReader(CommandBehavior)
  fullName: System.Data.OleDb.OleDbCommand.System.Data.IDbCommand.ExecuteReader(CommandBehavior)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "執行<> *> 針對<> *>，並建置<xref href=&quot;System.Data.IDataReader&quot;></xref>使用其中一種<xref href=&quot;System.Data.CommandBehavior&quot;></xref>值。"
  remarks: "這個成員是明確介面成員實作。 它可用時，才<xref:System.Data.OleDb.OleDbCommand>執行個體轉換成<xref:System.Data.IDbCommand>介面。</xref:System.Data.IDbCommand> </xref:System.Data.OleDb.OleDbCommand>       如需這個成員的說明，請參閱<xref:System.Data.IDbCommand.ExecuteReader%2A>.</xref:System.Data.IDbCommand.ExecuteReader%2A>"
  syntax:
    content: System.Data.IDataReader IDbCommand.ExecuteReader (System.Data.CommandBehavior behavior);
    parameters:
    - id: behavior
      type: System.Data.CommandBehavior
      description: "其中一個<xref href=&quot;System.Data.CommandBehavior&quot;></xref>值。"
    return:
      type: System.Data.IDataReader
      description: "<xref href=&quot;System.Data.IDataReader&quot;> </xref>建置使用其中一種<xref href=&quot;System.Data.CommandBehavior&quot;></xref>值。"
  overload: System.Data.OleDb.OleDbCommand.System#Data#IDbCommand#ExecuteReader*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.System#ICloneable#Clone
  id: System#ICloneable#Clone
  isEii: true
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: System.ICloneable.Clone()
  nameWithType: OleDbCommand.System.ICloneable.Clone()
  fullName: System.Data.OleDb.OleDbCommand.System.ICloneable.Clone()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "如需這個成員的說明，請參閱&lt;xref:System.ICloneable.Clone%2A?displayProperty=fullName&gt;。"
  remarks: "這個成員是明確介面成員實作。 它可用時，才<xref:System.Data.OleDb.OleDbCommand>執行個體轉換成<xref:System.ICloneable>介面。</xref:System.ICloneable> </xref:System.Data.OleDb.OleDbCommand>"
  syntax:
    content: object ICloneable.Clone ();
    parameters: []
    return:
      type: System.Object
      description: "新<xref:System.Object>也就是這個執行個體的複本。</xref:System.Object>"
  overload: System.Data.OleDb.OleDbCommand.System#ICloneable#Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.Transaction
  id: Transaction
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: Transaction
  nameWithType: OleDbCommand.Transaction
  fullName: System.Data.OleDb.OleDbCommand.Transaction
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "取得或設定<xref href=&quot;System.Data.OleDb.OleDbTransaction&quot;></xref>所在<xref href=&quot;System.Data.OleDb.OleDbCommand&quot;></xref>執行。"
  remarks: "如果它已設定為特定值，並且命令正在執行，您無法設定交易屬性。 如果您設定交易屬性<xref:System.Data.OleDb.OleDbTransaction>未連線到相同的物件<xref:System.Data.OleDb.OleDbConnection>為<xref:System.Data.OleDb.OleDbCommand>物件時，下次您嘗試執行陳述式擲回例外狀況。</xref:System.Data.OleDb.OleDbCommand> </xref:System.Data.OleDb.OleDbConnection> </xref:System.Data.OleDb.OleDbTransaction>"
  syntax:
    content: public System.Data.OleDb.OleDbTransaction Transaction { get; set; }
    return:
      type: System.Data.OleDb.OleDbTransaction
      description: "The <xref href=&quot;System.Data.OleDb.OleDbTransaction&quot;></xref>. 預設值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Data.OleDb.OleDbCommand.Transaction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.UpdatedRowSource
  id: UpdatedRowSource
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: UpdatedRowSource
  nameWithType: OleDbCommand.UpdatedRowSource
  fullName: System.Data.OleDb.OleDbCommand.UpdatedRowSource
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "取得或設定如何將命令結果套用到<xref href=&quot;System.Data.DataRow&quot;></xref>時所使用<xref uid=&quot;langword_csharp_Update&quot; name=&quot;Update&quot; href=&quot;&quot;></xref>方法<xref href=&quot;System.Data.OleDb.OleDbDataAdapter&quot;> </xref>。"
  remarks: "預設 UpdatedRowSource 值是同時，除非此命令會自動產生 (如同<xref:System.Data.OleDb.OleDbCommandBuilder>)，在此情況下的預設值為 None。</xref:System.Data.OleDb.OleDbCommandBuilder>       如需如何使用 UpdatedRowSource 屬性的詳細資訊，請參閱[DataAdapter 的參數](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public override System.Data.UpdateRowSource UpdatedRowSource { get; set; }
    return:
      type: System.Data.UpdateRowSource
      description: "其中一個<xref href=&quot;System.Data.UpdateRowSource&quot;></xref>值。"
  overload: System.Data.OleDb.OleDbCommand.UpdatedRowSource*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "輸入的值不是其中一個<xref href=&quot;System.Data.UpdateRowSource&quot;></xref>值。"
  platform:
  - net462
references:
- uid: System.Data.Common.DbCommand
  isExternal: false
  name: System.Data.Common.DbCommand
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Data.OleDb.OleDbCommand.#ctor
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: OleDbCommand()
  nameWithType: OleDbCommand.OleDbCommand()
  fullName: System.Data.OleDb.OleDbCommand.OleDbCommand()
- uid: System.Data.OleDb.OleDbCommand.#ctor(System.String)
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: OleDbCommand(String)
  nameWithType: OleDbCommand.OleDbCommand(String)
  fullName: System.Data.OleDb.OleDbCommand.OleDbCommand(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.OleDb.OleDbCommand.#ctor(System.String,System.Data.OleDb.OleDbConnection)
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: OleDbCommand(String,OleDbConnection)
  nameWithType: OleDbCommand.OleDbCommand(String,OleDbConnection)
  fullName: System.Data.OleDb.OleDbCommand.OleDbCommand(String,OleDbConnection)
- uid: System.Data.OleDb.OleDbConnection
  parent: System.Data.OleDb
  isExternal: false
  name: OleDbConnection
  nameWithType: OleDbConnection
  fullName: System.Data.OleDb.OleDbConnection
- uid: System.Data.OleDb.OleDbCommand.#ctor(System.String,System.Data.OleDb.OleDbConnection,System.Data.OleDb.OleDbTransaction)
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: OleDbCommand(String,OleDbConnection,OleDbTransaction)
  nameWithType: OleDbCommand.OleDbCommand(String,OleDbConnection,OleDbTransaction)
  fullName: System.Data.OleDb.OleDbCommand.OleDbCommand(String,OleDbConnection,OleDbTransaction)
- uid: System.Data.OleDb.OleDbTransaction
  parent: System.Data.OleDb
  isExternal: false
  name: OleDbTransaction
  nameWithType: OleDbTransaction
  fullName: System.Data.OleDb.OleDbTransaction
- uid: System.Data.OleDb.OleDbCommand.Cancel
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: Cancel()
  nameWithType: OleDbCommand.Cancel()
  fullName: System.Data.OleDb.OleDbCommand.Cancel()
- uid: System.Data.OleDb.OleDbCommand.Clone
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: Clone()
  nameWithType: OleDbCommand.Clone()
  fullName: System.Data.OleDb.OleDbCommand.Clone()
- uid: System.Data.OleDb.OleDbCommand
  parent: System.Data.OleDb
  isExternal: false
  name: OleDbCommand
  nameWithType: OleDbCommand
  fullName: System.Data.OleDb.OleDbCommand
- uid: System.Data.OleDb.OleDbCommand.CommandText
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: CommandText
  nameWithType: OleDbCommand.CommandText
  fullName: System.Data.OleDb.OleDbCommand.CommandText
- uid: System.Data.OleDb.OleDbCommand.CommandTimeout
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: CommandTimeout
  nameWithType: OleDbCommand.CommandTimeout
  fullName: System.Data.OleDb.OleDbCommand.CommandTimeout
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.OleDb.OleDbCommand.CommandType
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: CommandType
  nameWithType: OleDbCommand.CommandType
  fullName: System.Data.OleDb.OleDbCommand.CommandType
- uid: System.Data.CommandType
  parent: System.Data
  isExternal: false
  name: CommandType
  nameWithType: CommandType
  fullName: System.Data.CommandType
- uid: System.Data.OleDb.OleDbCommand.Connection
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: Connection
  nameWithType: OleDbCommand.Connection
  fullName: System.Data.OleDb.OleDbCommand.Connection
- uid: System.Data.OleDb.OleDbCommand.CreateDbParameter
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: CreateDbParameter()
  nameWithType: OleDbCommand.CreateDbParameter()
  fullName: System.Data.OleDb.OleDbCommand.CreateDbParameter()
- uid: System.Data.Common.DbParameter
  parent: System.Data.Common
  isExternal: false
  name: DbParameter
  nameWithType: DbParameter
  fullName: System.Data.Common.DbParameter
- uid: System.Data.OleDb.OleDbCommand.CreateParameter
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: CreateParameter()
  nameWithType: OleDbCommand.CreateParameter()
  fullName: System.Data.OleDb.OleDbCommand.CreateParameter()
- uid: System.Data.OleDb.OleDbParameter
  parent: System.Data.OleDb
  isExternal: false
  name: OleDbParameter
  nameWithType: OleDbParameter
  fullName: System.Data.OleDb.OleDbParameter
- uid: System.Data.OleDb.OleDbCommand.DbConnection
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: DbConnection
  nameWithType: OleDbCommand.DbConnection
  fullName: System.Data.OleDb.OleDbCommand.DbConnection
- uid: System.Data.Common.DbConnection
  parent: System.Data.Common
  isExternal: false
  name: DbConnection
  nameWithType: DbConnection
  fullName: System.Data.Common.DbConnection
- uid: System.Data.OleDb.OleDbCommand.DbParameterCollection
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: DbParameterCollection
  nameWithType: OleDbCommand.DbParameterCollection
  fullName: System.Data.OleDb.OleDbCommand.DbParameterCollection
- uid: System.Data.Common.DbParameterCollection
  parent: System.Data.Common
  isExternal: false
  name: DbParameterCollection
  nameWithType: DbParameterCollection
  fullName: System.Data.Common.DbParameterCollection
- uid: System.Data.OleDb.OleDbCommand.DbTransaction
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: DbTransaction
  nameWithType: OleDbCommand.DbTransaction
  fullName: System.Data.OleDb.OleDbCommand.DbTransaction
- uid: System.Data.Common.DbTransaction
  parent: System.Data.Common
  isExternal: false
  name: DbTransaction
  nameWithType: DbTransaction
  fullName: System.Data.Common.DbTransaction
- uid: System.Data.OleDb.OleDbCommand.DesignTimeVisible
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: DesignTimeVisible
  nameWithType: OleDbCommand.DesignTimeVisible
  fullName: System.Data.OleDb.OleDbCommand.DesignTimeVisible
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.OleDb.OleDbCommand.Dispose(System.Boolean)
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: OleDbCommand.Dispose(Boolean)
  fullName: System.Data.OleDb.OleDbCommand.Dispose(Boolean)
- uid: System.Data.OleDb.OleDbCommand.ExecuteDbDataReader(System.Data.CommandBehavior)
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: ExecuteDbDataReader(CommandBehavior)
  nameWithType: OleDbCommand.ExecuteDbDataReader(CommandBehavior)
  fullName: System.Data.OleDb.OleDbCommand.ExecuteDbDataReader(CommandBehavior)
- uid: System.Data.Common.DbDataReader
  parent: System.Data.Common
  isExternal: false
  name: DbDataReader
  nameWithType: DbDataReader
  fullName: System.Data.Common.DbDataReader
- uid: System.Data.CommandBehavior
  parent: System.Data
  isExternal: false
  name: CommandBehavior
  nameWithType: CommandBehavior
  fullName: System.Data.CommandBehavior
- uid: System.Data.OleDb.OleDbCommand.ExecuteNonQuery
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: ExecuteNonQuery()
  nameWithType: OleDbCommand.ExecuteNonQuery()
  fullName: System.Data.OleDb.OleDbCommand.ExecuteNonQuery()
- uid: System.Data.OleDb.OleDbCommand.ExecuteReader
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: ExecuteReader()
  nameWithType: OleDbCommand.ExecuteReader()
  fullName: System.Data.OleDb.OleDbCommand.ExecuteReader()
- uid: System.Data.OleDb.OleDbDataReader
  parent: System.Data.OleDb
  isExternal: false
  name: OleDbDataReader
  nameWithType: OleDbDataReader
  fullName: System.Data.OleDb.OleDbDataReader
- uid: System.Data.OleDb.OleDbCommand.ExecuteReader(System.Data.CommandBehavior)
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: ExecuteReader(CommandBehavior)
  nameWithType: OleDbCommand.ExecuteReader(CommandBehavior)
  fullName: System.Data.OleDb.OleDbCommand.ExecuteReader(CommandBehavior)
- uid: System.Data.OleDb.OleDbCommand.ExecuteScalar
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: ExecuteScalar()
  nameWithType: OleDbCommand.ExecuteScalar()
  fullName: System.Data.OleDb.OleDbCommand.ExecuteScalar()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.OleDb.OleDbCommand.Parameters
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: Parameters
  nameWithType: OleDbCommand.Parameters
  fullName: System.Data.OleDb.OleDbCommand.Parameters
- uid: System.Data.OleDb.OleDbParameterCollection
  parent: System.Data.OleDb
  isExternal: false
  name: OleDbParameterCollection
  nameWithType: OleDbParameterCollection
  fullName: System.Data.OleDb.OleDbParameterCollection
- uid: System.Data.OleDb.OleDbCommand.Prepare
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: Prepare()
  nameWithType: OleDbCommand.Prepare()
  fullName: System.Data.OleDb.OleDbCommand.Prepare()
- uid: System.Data.OleDb.OleDbCommand.ResetCommandTimeout
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: ResetCommandTimeout()
  nameWithType: OleDbCommand.ResetCommandTimeout()
  fullName: System.Data.OleDb.OleDbCommand.ResetCommandTimeout()
- uid: System.Data.OleDb.OleDbCommand.System#Data#IDbCommand#ExecuteReader
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: System.Data.IDbCommand.ExecuteReader()
  nameWithType: OleDbCommand.System.Data.IDbCommand.ExecuteReader()
  fullName: System.Data.OleDb.OleDbCommand.System.Data.IDbCommand.ExecuteReader()
- uid: System.Data.IDataReader
  parent: System.Data
  isExternal: false
  name: IDataReader
  nameWithType: IDataReader
  fullName: System.Data.IDataReader
- uid: System.Data.OleDb.OleDbCommand.System#Data#IDbCommand#ExecuteReader(System.Data.CommandBehavior)
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: System.Data.IDbCommand.ExecuteReader(CommandBehavior)
  nameWithType: OleDbCommand.System.Data.IDbCommand.ExecuteReader(CommandBehavior)
  fullName: System.Data.OleDb.OleDbCommand.System.Data.IDbCommand.ExecuteReader(CommandBehavior)
- uid: System.Data.OleDb.OleDbCommand.System#ICloneable#Clone
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: System.ICloneable.Clone()
  nameWithType: OleDbCommand.System.ICloneable.Clone()
  fullName: System.Data.OleDb.OleDbCommand.System.ICloneable.Clone()
- uid: System.Data.OleDb.OleDbCommand.Transaction
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: Transaction
  nameWithType: OleDbCommand.Transaction
  fullName: System.Data.OleDb.OleDbCommand.Transaction
- uid: System.Data.OleDb.OleDbCommand.UpdatedRowSource
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: UpdatedRowSource
  nameWithType: OleDbCommand.UpdatedRowSource
  fullName: System.Data.OleDb.OleDbCommand.UpdatedRowSource
- uid: System.Data.UpdateRowSource
  parent: System.Data
  isExternal: false
  name: UpdateRowSource
  nameWithType: UpdateRowSource
  fullName: System.Data.UpdateRowSource
- uid: System.Data.OleDb.OleDbCommand.#ctor*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: OleDbCommand
  nameWithType: OleDbCommand.OleDbCommand
- uid: System.Data.OleDb.OleDbCommand.Cancel*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: Cancel
  nameWithType: OleDbCommand.Cancel
- uid: System.Data.OleDb.OleDbCommand.Clone*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: Clone
  nameWithType: OleDbCommand.Clone
- uid: System.Data.OleDb.OleDbCommand.CommandText*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: CommandText
  nameWithType: OleDbCommand.CommandText
- uid: System.Data.OleDb.OleDbCommand.CommandTimeout*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: CommandTimeout
  nameWithType: OleDbCommand.CommandTimeout
- uid: System.Data.OleDb.OleDbCommand.CommandType*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: CommandType
  nameWithType: OleDbCommand.CommandType
- uid: System.Data.OleDb.OleDbCommand.Connection*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: Connection
  nameWithType: OleDbCommand.Connection
- uid: System.Data.OleDb.OleDbCommand.CreateDbParameter*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: CreateDbParameter
  nameWithType: OleDbCommand.CreateDbParameter
- uid: System.Data.OleDb.OleDbCommand.CreateParameter*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: CreateParameter
  nameWithType: OleDbCommand.CreateParameter
- uid: System.Data.OleDb.OleDbCommand.DbConnection*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: DbConnection
  nameWithType: OleDbCommand.DbConnection
- uid: System.Data.OleDb.OleDbCommand.DbParameterCollection*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: DbParameterCollection
  nameWithType: OleDbCommand.DbParameterCollection
- uid: System.Data.OleDb.OleDbCommand.DbTransaction*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: DbTransaction
  nameWithType: OleDbCommand.DbTransaction
- uid: System.Data.OleDb.OleDbCommand.DesignTimeVisible*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: DesignTimeVisible
  nameWithType: OleDbCommand.DesignTimeVisible
- uid: System.Data.OleDb.OleDbCommand.Dispose*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: Dispose
  nameWithType: OleDbCommand.Dispose
- uid: System.Data.OleDb.OleDbCommand.ExecuteDbDataReader*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: ExecuteDbDataReader
  nameWithType: OleDbCommand.ExecuteDbDataReader
- uid: System.Data.OleDb.OleDbCommand.ExecuteNonQuery*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: ExecuteNonQuery
  nameWithType: OleDbCommand.ExecuteNonQuery
- uid: System.Data.OleDb.OleDbCommand.ExecuteReader*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: ExecuteReader
  nameWithType: OleDbCommand.ExecuteReader
- uid: System.Data.OleDb.OleDbCommand.ExecuteScalar*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: ExecuteScalar
  nameWithType: OleDbCommand.ExecuteScalar
- uid: System.Data.OleDb.OleDbCommand.Parameters*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: Parameters
  nameWithType: OleDbCommand.Parameters
- uid: System.Data.OleDb.OleDbCommand.Prepare*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: Prepare
  nameWithType: OleDbCommand.Prepare
- uid: System.Data.OleDb.OleDbCommand.ResetCommandTimeout*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: ResetCommandTimeout
  nameWithType: OleDbCommand.ResetCommandTimeout
- uid: System.Data.OleDb.OleDbCommand.System#Data#IDbCommand#ExecuteReader*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: System.Data.IDbCommand.ExecuteReader
  nameWithType: OleDbCommand.System.Data.IDbCommand.ExecuteReader
- uid: System.Data.OleDb.OleDbCommand.System#ICloneable#Clone*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: System.ICloneable.Clone
  nameWithType: OleDbCommand.System.ICloneable.Clone
- uid: System.Data.OleDb.OleDbCommand.Transaction*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: Transaction
  nameWithType: OleDbCommand.Transaction
- uid: System.Data.OleDb.OleDbCommand.UpdatedRowSource*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: UpdatedRowSource
  nameWithType: OleDbCommand.UpdatedRowSource
