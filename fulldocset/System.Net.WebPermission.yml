### YamlMime:ManagedReference
items:
- uid: System.Net.WebPermission
  id: WebPermission
  children:
  - System.Net.WebPermission.#ctor
  - System.Net.WebPermission.#ctor(System.Security.Permissions.PermissionState)
  - System.Net.WebPermission.#ctor(System.Net.NetworkAccess,System.String)
  - System.Net.WebPermission.#ctor(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)
  - System.Net.WebPermission.AcceptList
  - System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.String)
  - System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)
  - System.Net.WebPermission.ConnectList
  - System.Net.WebPermission.Copy
  - System.Net.WebPermission.FromXml(System.Security.SecurityElement)
  - System.Net.WebPermission.Intersect(System.Security.IPermission)
  - System.Net.WebPermission.IsSubsetOf(System.Security.IPermission)
  - System.Net.WebPermission.IsUnrestricted
  - System.Net.WebPermission.ToXml
  - System.Net.WebPermission.Union(System.Security.IPermission)
  langs:
  - csharp
  name: WebPermission
  nameWithType: WebPermission
  fullName: System.Net.WebPermission
  type: Class
  summary: "控制 HTTP 網際網路資源的存取權。"
  remarks: "WebPermission 提供一組方法和屬性來控制對網際網路資源的存取。 您可用來提供限制或無限制的存取權給您的資源，根據 WebPermission <xref:System.Security.Permissions.PermissionState>WebPermission 建立時設定。</xref:System.Security.Permissions.PermissionState>       建立 WebPermission 執行個體，藉由呼叫其建構函式使用其中一種下列幾組參數:-沒有參數。 預設值<xref:System.Security.Permissions.PermissionState>為<xref:System.Security.Permissions.PermissionState>。</xref:System.Security.Permissions.PermissionState> </xref:System.Security.Permissions.PermissionState>      -   A <xref:System.Security.Permissions.PermissionState>.</xref:System.Security.Permissions.PermissionState> 指定<xref:System.Security.Permissions.PermissionState>允許要在目標類別中，使用任何 URI 或<xref:System.Security.Permissions.PermissionState>允許您使用指定的 Uri 存取<xref:System.Net.WebPermission.AddPermission%2A>方法。</xref:System.Net.WebPermission.AddPermission%2A> </xref:System.Security.Permissions.PermissionState> </xref:System.Security.Permissions.PermissionState>      -A<xref:System.Net.NetworkAccess>值和 URI 字串。</xref:System.Net.NetworkAccess> 指定的 URI 已授與權限<xref:System.Net.NetworkAccess>值。</xref:System.Net.NetworkAccess>      -A<xref:System.Net.NetworkAccess>規範和 URI 規則運算式。</xref:System.Net.NetworkAccess>       <xref:System.Net.WebPermission.ConnectList%2A>和<xref:System.Net.WebPermission.AcceptList%2A>保存您已對其授與存取權限的 Uri。</xref:System.Net.WebPermission.AcceptList%2A> </xref:System.Net.WebPermission.ConnectList%2A> 若要將 URI 加入至這些清單中，使用  <xref:System.Net.WebPermission.AddPermission%2A>.</xref:System.Net.WebPermission.AddPermission%2A> 如果您要傳入<xref:System.Net.NetworkAccess>為<xref:System.Net.NetworkAccess>參數，URI 會加入至<xref:System.Net.WebPermission.AcceptList%2A>。</xref:System.Net.WebPermission.AcceptList%2A> </xref:System.Net.NetworkAccess> </xref:System.Net.NetworkAccess> WebPermission 將允許所有連線到您的目標類別與 Uri 比對<xref:System.Net.WebPermission.AcceptList%2A>.</xref:System.Net.WebPermission.AcceptList%2A>      > [!CAUTION] > 拒絕對網際網路資源的存取，則必須拒絕所有可能的路徑，該資源的存取。 這需要<xref:System.Net.WebPermission.%23ctor%2A?displayProperty=fullName>使用狀態參數設定為<xref:System.Security.CodeAccessPermission.Deny%2A>.</xref:System.Security.CodeAccessPermission.Deny%2A></xref:System.Net.WebPermission.%23ctor%2A?displayProperty=fullName>呼叫 更好的方法是允許特定資源的存取權。 如需有關這個主題的詳細資訊，請參閱[NIB︰ 使用 Deny 方法](http://msdn.microsoft.com/en-us/6b4d2e01-c504-4ac3-b50e-d6f5e7f5df25)主題。      > [!NOTE] > 您要拒絕存取使用資源正式路徑。 沒有需要使用所有路徑的語法變化。      > [!NOTE] > 使用者名稱和預設連接埠的資訊移除<xref:System.Uri>與規則運算式引數提供給在比較之前<xref:System.Net.WebPermission.%23ctor%28System.Net.NetworkAccess%2CSystem.Text.RegularExpressions.Regex%29>建構函式。</xref:System.Net.WebPermission.%23ctor%28System.Net.NetworkAccess%2CSystem.Text.RegularExpressions.Regex%29> </xref:System.Uri> 如果規則運算式包含使用者資訊或預設的連接埠號碼，則所有的連入<xref:System.Uri>s 將無法符合規則運算式。</xref:System.Uri>"
  example:
  - "The following example demonstrates how to create a new instance of WebPermission using a <xref:System.Text.RegularExpressions.Regex>. Additional hosts are added to the connect and accept list of WebPermission. Finally, the connect and accept list are displayed to the console.  \n  \n [!code-cpp[WebPermission_Regex#1](~/add/codesnippet/cpp/t-system.net.webpermission_1.cpp)]\n [!code-vb[WebPermission_Regex#1](~/add/codesnippet/visualbasic/t-system.net.webpermission_1.vb)]\n [!code-cs[WebPermission_Regex#1](~/add/codesnippet/csharp/t-system.net.webpermission_1.cs)]"
  syntax:
    content: 'public sealed class WebPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission'
  inheritance:
  - System.Object
  - System.Security.CodeAccessPermission
  implements:
  - System.Security.Permissions.IUnrestrictedPermission
  inheritedMembers:
  - System.Security.CodeAccessPermission.Assert
  - System.Security.CodeAccessPermission.Demand
  - System.Security.CodeAccessPermission.Deny
  - System.Security.CodeAccessPermission.Equals(System.Object)
  - System.Security.CodeAccessPermission.GetHashCode
  - System.Security.CodeAccessPermission.PermitOnly
  - System.Security.CodeAccessPermission.RevertAll
  - System.Security.CodeAccessPermission.RevertAssert
  - System.Security.CodeAccessPermission.RevertDeny
  - System.Security.CodeAccessPermission.RevertPermitOnly
  - System.Security.CodeAccessPermission.ToString
  platform:
  - net462
- uid: System.Net.WebPermission.#ctor
  id: '#ctor'
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: WebPermission()
  nameWithType: WebPermission.WebPermission()
  fullName: System.Net.WebPermission.WebPermission()
  type: Constructor
  assemblies:
  - System
  namespace: System.Net
  summary: "建立的新執行個體<xref href=&quot;System.Net.WebPermission&quot;></xref>類別。"
  remarks: "建立<xref:System.Net.WebPermission>類別</xref:System.Net.WebPermission>的新執行個體 這個建構函式，建立空白的權限不授與任何權限。"
  syntax:
    content: public WebPermission ();
    parameters: []
  overload: System.Net.WebPermission.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebPermission.#ctor(System.Security.Permissions.PermissionState)
  id: '#ctor(System.Security.Permissions.PermissionState)'
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: WebPermission(PermissionState)
  nameWithType: WebPermission.WebPermission(PermissionState)
  fullName: System.Net.WebPermission.WebPermission(PermissionState)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net
  summary: "建立的新執行個體<xref href=&quot;System.Net.WebPermission&quot;></xref>通過所有的類別會要求或失敗的所有要求。"
  remarks: "值`state`參數為<xref:System.Security.Permissions.PermissionState?displayProperty=fullName>或<xref:System.Security.Permissions.PermissionState?displayProperty=fullName>分別產生完全限制或完全不受限制地存取安全性的所有變數。</xref:System.Security.Permissions.PermissionState?displayProperty=fullName> </xref:System.Security.Permissions.PermissionState?displayProperty=fullName> 如果您指定<xref:System.Security.Permissions.PermissionState?displayProperty=fullName>，然後將提供使用<xref:System.Net.WebPermission.AddPermission%2A>.</xref:System.Net.WebPermission.AddPermission%2A>個別 Uri 的存取</xref:System.Security.Permissions.PermissionState?displayProperty=fullName>"
  example:
  - "The following example creates an instance of <xref:System.Net.WebPermission> and gives access rights to specific URLs.  \n  \n [!code-vb[WebPermission_Copy#1](~/add/codesnippet/visualbasic/88c33480-1361-4059-add6-_1.vb)]\n [!code-cpp[WebPermission_Copy#1](~/add/codesnippet/cpp/88c33480-1361-4059-add6-_1.cpp)]\n [!code-cs[WebPermission_Copy#1](~/add/codesnippet/csharp/88c33480-1361-4059-add6-_1.cs)]"
  syntax:
    content: public WebPermission (System.Security.Permissions.PermissionState state);
    parameters:
    - id: state
      type: System.Security.Permissions.PermissionState
      description: "A <xref href=&quot;System.Security.Permissions.PermissionState&quot;></xref> value."
  overload: System.Net.WebPermission.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebPermission.#ctor(System.Net.NetworkAccess,System.String)
  id: '#ctor(System.Net.NetworkAccess,System.String)'
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: WebPermission(NetworkAccess,String)
  nameWithType: WebPermission.WebPermission(NetworkAccess,String)
  fullName: System.Net.WebPermission.WebPermission(NetworkAccess,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net
  summary: "初始化的新執行個體<xref href=&quot;System.Net.WebPermission&quot;></xref>類別具有所指定的存取權限，為指定的 URI。"
  remarks: "這個建構函式初始化<xref:System.Net.WebPermission>並且授與它的目標權限，讓遠端主機連接，或接受使用 URI 所描述的遠端主機連接`uriString`參數。</xref:System.Net.WebPermission>"
  example:
  - "The following example creates a new instance of <xref:System.Net.WebPermission> with connect rights for the specified URI.  \n  \n [!code-cpp[WebPermission_Union#1](~/add/codesnippet/cpp/m-system.net.webpermissi_3_1.cpp)]\n [!code-vb[WebPermission_Union#1](~/add/codesnippet/visualbasic/m-system.net.webpermissi_3_1.vb)]\n [!code-cs[WebPermission_Union#1](~/add/codesnippet/csharp/m-system.net.webpermissi_3_1.cs)]"
  syntax:
    content: public WebPermission (System.Net.NetworkAccess access, string uriString);
    parameters:
    - id: access
      type: System.Net.NetworkAccess
      description: "NetworkAccess 值，表示何種存取權授與指定的 URI。 <xref href=&quot;System.Net.NetworkAccess&quot;></xref>表示應用程式可接受來自網際網路上的本機資源的連線。 <xref href=&quot;System.Net.NetworkAccess&quot;></xref>表示應用程式可以連接到特定的網際網路資源。"
    - id: uriString
      type: System.String
      description: "權限會授與存取 URI 字串。"
  overload: System.Net.WebPermission.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>uriString</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Net.WebPermission.#ctor(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)
  id: '#ctor(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)'
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: WebPermission(NetworkAccess,Regex)
  nameWithType: WebPermission.WebPermission(NetworkAccess,Regex)
  fullName: System.Net.WebPermission.WebPermission(NetworkAccess,Regex)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net
  summary: "初始化的新執行個體<xref href=&quot;System.Net.WebPermission&quot;></xref>類別指定的 URI 規則運算式的指定的存取權限。"
  remarks: "這個建構函式初始化<xref:System.Net.WebPermission>並且授與它的目標權限，讓遠端主機連接，或接受使用 URI 所描述的遠端主機連接`uriRegex`參數。</xref:System.Net.WebPermission>      > [!NOTE] > 建議您建立`uriRegex`使用<xref:System.Text.RegularExpressions.RegexOptions?displayProperty=fullName>， <xref:System.Text.RegularExpressions.RegexOptions?displayProperty=fullName>，和<xref:System.Text.RegularExpressions.RegexOptions?displayProperty=fullName>旗標。</xref:System.Text.RegularExpressions.RegexOptions?displayProperty=fullName> </xref:System.Text.RegularExpressions.RegexOptions?displayProperty=fullName> </xref:System.Text.RegularExpressions.RegexOptions?displayProperty=fullName>      > [!NOTE] > 候選 URI 字串會檢查相關的規則運算式的清單進行比對 (<xref:System.Net.WebPermission.AcceptList%2A>或<xref:System.Net.WebPermission.ConnectList%2A>) 有兩種。</xref:System.Net.WebPermission.ConnectList%2A> </xref:System.Net.WebPermission.AcceptList%2A> 首先，檢查候選 URI 字串符合適當的清單。然後，如果沒有相符項目，候選 URI 字串會轉換成<xref:System.Uri>和適當的清單核對。</xref:System.Uri>"
  example:
  - "The following example creates a new instance of <xref:System.Net.WebPermission> with connect rights for the specified <xref:System.Text.RegularExpressions.Regex?displayProperty=fullName>.  \n  \n [!code-vb[WebPermission_Constructor4#1](~/add/codesnippet/visualbasic/c1b4c805-3099-4a42-8ab3-_1.vb)]\n [!code-cpp[WebPermission_Constructor4#1](~/add/codesnippet/cpp/c1b4c805-3099-4a42-8ab3-_1.cpp)]\n [!code-cs[WebPermission_Constructor4#1](~/add/codesnippet/csharp/c1b4c805-3099-4a42-8ab3-_1.cs)]"
  syntax:
    content: public WebPermission (System.Net.NetworkAccess access, System.Text.RegularExpressions.Regex uriRegex);
    parameters:
    - id: access
      type: System.Net.NetworkAccess
      description: "A <xref href=&quot;System.Net.NetworkAccess&quot;> </xref>值，表示何種存取權授與指定的 URI。 <xref href=&quot;System.Net.NetworkAccess&quot;></xref>表示應用程式可接受來自網際網路上的本機資源的連線。 <xref href=&quot;System.Net.NetworkAccess&quot;></xref>表示應用程式可以連接到特定的網際網路資源。"
    - id: uriRegex
      type: System.Text.RegularExpressions.Regex
      description: "規則運算式，說明存取是要授與的 URI。"
  overload: System.Net.WebPermission.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebPermission.AcceptList
  id: AcceptList
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: AcceptList
  nameWithType: WebPermission.AcceptList
  fullName: System.Net.WebPermission.AcceptList
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "這個屬性會傳回單一的列舉接受這所持有的權限<xref href=&quot;System.Net.WebPermission&quot;> </xref>。 可能會包含在傳回的列舉類型的物件<xref:System.String>和&lt;xref:System.Text.RegularExpressions.Regex?displayProperty=fullName&gt;。</xref:System.String>"
  remarks: "這個屬性會取得一份此<xref:System.Net.WebPermission>.</xref:System.Net.WebPermission>所允許的本機資源 您已套用的類別<xref:System.Net.WebPermission>只有接收連入連線到這份清單中找到的本機資源的權限。</xref:System.Net.WebPermission>      > [!NOTE] > 加入使用<xref:System.Net.WebPermission.AddPermission%2A>.</xref:System.Net.WebPermission.AddPermission%2A>這份清單的 Uri      > [!NOTE] > 候選 URI 字串會檢查相關的規則運算式的清單進行比對 (AcceptList 或<xref:System.Net.WebPermission.ConnectList%2A>) 有兩種。</xref:System.Net.WebPermission.ConnectList%2A> 首先，檢查候選 URI 字串符合適當的清單。然後，如果沒有相符項目，候選 URI 字串會轉換成<xref:System.Uri>和適當的清單核對。</xref:System.Uri>"
  example:
  - "The following example prints the URLs in the AcceptList to the console.  \n  \n [!code-vb[WebPermission_AcceptConnectList#2](~/add/codesnippet/visualbasic/p-system.net.webpermissi_5_1.vb)]\n [!code-cs[WebPermission_AcceptConnectList#2](~/add/codesnippet/csharp/p-system.net.webpermissi_5_1.cs)]\n [!code-cpp[WebPermission_AcceptConnectList#2](~/add/codesnippet/cpp/p-system.net.webpermissi_5_1.cpp)]"
  syntax:
    content: public System.Collections.IEnumerator AcceptList { get; }
    return:
      type: System.Collections.IEnumerator
      description: "<xref:System.Collections.IEnumerator>介面，其中包含接受權限。</xref:System.Collections.IEnumerator>"
  overload: System.Net.WebPermission.AcceptList*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.String)
  id: AddPermission(System.Net.NetworkAccess,System.String)
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: AddPermission(NetworkAccess,String)
  nameWithType: WebPermission.AddPermission(NetworkAccess,String)
  fullName: System.Net.WebPermission.AddPermission(NetworkAccess,String)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "將目前指定的存取權限與指定的 URI 字串<xref href=&quot;System.Net.WebPermission&quot;> </xref>。"
  remarks: "如果您已經指定<xref:System.Security.Permissions.PermissionState>為<xref:System.Security.Permissions.PermissionState>，用於 AddPermission 允許使用`uriString`目標類別</xref:System.Security.Permissions.PermissionState></xref:System.Security.Permissions.PermissionState> 採用的方式`uriString`可用目標所指定類別`access`。 指定<xref:System.Net.NetworkAccess>作為存取參數，以加入所指定的 URI`uriString`至的 URI 清單參數接受字串，或指定<xref:System.Net.NetworkAccess>為存取參數，以將 URI 加入至的 URI 清單連接字串。</xref:System.Net.NetworkAccess> </xref:System.Net.NetworkAccess>      > [!NOTE] > 上的呼叫 AddPermission<xref:System.Security.Permissions.PermissionState><xref:System.Net.WebPermission>會有任何作用，因為權限會授與所有 Uri。</xref:System.Net.WebPermission></xref:System.Security.Permissions.PermissionState>      > [!NOTE] > 候選 URI 字串會檢查相關的規則運算式的清單進行比對 (<xref:System.Net.WebPermission.AcceptList%2A>或<xref:System.Net.WebPermission.ConnectList%2A>) 有兩種。</xref:System.Net.WebPermission.ConnectList%2A> </xref:System.Net.WebPermission.AcceptList%2A> 首先，檢查候選 URI 字串符合適當的清單。然後，如果沒有相符項目，候選 URI 字串會轉換成<xref:System.Uri>和適當的清單核對。</xref:System.Uri>"
  example:
  - "The following example demonstrates how to add access rights to particular URL strings.  \n  \n [!code-cs[WebPermission_Intersect#2](~/add/codesnippet/csharp/m-system.net.webpermissi_2_1.cs)]\n [!code-cpp[WebPermission_Intersect#2](~/add/codesnippet/cpp/m-system.net.webpermissi_2_1.cpp)]\n [!code-vb[WebPermission_Intersect#2](~/add/codesnippet/visualbasic/m-system.net.webpermissi_2_1.vb)]"
  syntax:
    content: public void AddPermission (System.Net.NetworkAccess access, string uriString);
    parameters:
    - id: access
      type: System.Net.NetworkAccess
      description: "A <xref href=&quot;System.Net.NetworkAccess&quot;> </xref>指定 URI 授與的存取權限。"
    - id: uriString
      type: System.String
      description: "字串，說明要存取權利都會授與的 URI。"
  overload: System.Net.WebPermission.AddPermission*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>uriString</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)
  id: AddPermission(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: AddPermission(NetworkAccess,Regex)
  nameWithType: WebPermission.AddPermission(NetworkAccess,Regex)
  fullName: System.Net.WebPermission.AddPermission(NetworkAccess,Regex)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "將指定的 URI，指定的存取權限目前<xref href=&quot;System.Net.WebPermission&quot;> </xref>。"
  remarks: "如果您已經指定<xref:System.Security.Permissions.PermissionState>為<xref:System.Security.Permissions.PermissionState>，使用<xref:System.Net.WebPermission.AddPermission%2A>以允許使用`uriRegex`目標類別</xref:System.Net.WebPermission.AddPermission%2A></xref:System.Security.Permissions.PermissionState></xref:System.Security.Permissions.PermissionState> 指定<xref:System.Net.NetworkAccess>為`access`要加入所指定的 URI 參數`uriRegex`至的 URI 清單參數接受字串，或指定<xref:System.Net.NetworkAccess>為存取參數，以將 URI 加入至的 URI 清單連接字串。</xref:System.Net.NetworkAccess> </xref:System.Net.NetworkAccess>      > [!NOTE] > 呼叫<xref:System.Net.WebPermission.AddPermission%2A>上<xref:System.Security.Permissions.PermissionState><xref:System.Net.WebPermission>執行個體將會有任何作用，因為權限會授與所有 Uri。</xref:System.Net.WebPermission></xref:System.Security.Permissions.PermissionState> </xref:System.Net.WebPermission.AddPermission%2A>      > [!NOTE] > 建議您建立`uriRegex`使用<xref:System.Text.RegularExpressions.RegexOptions?displayProperty=fullName>， <xref:System.Text.RegularExpressions.RegexOptions?displayProperty=fullName>，和<xref:System.Text.RegularExpressions.RegexOptions?displayProperty=fullName>旗標。</xref:System.Text.RegularExpressions.RegexOptions?displayProperty=fullName> </xref:System.Text.RegularExpressions.RegexOptions?displayProperty=fullName> </xref:System.Text.RegularExpressions.RegexOptions?displayProperty=fullName>      > [!NOTE] > 候選 URI 字串會檢查相關的規則運算式的清單進行比對 (<xref:System.Net.WebPermission.AcceptList%2A>或<xref:System.Net.WebPermission.ConnectList%2A>) 有兩種。</xref:System.Net.WebPermission.ConnectList%2A> </xref:System.Net.WebPermission.AcceptList%2A> 首先，檢查候選 URI 字串符合適當的清單。然後，如果沒有相符項目，候選 URI 字串會轉換成<xref:System.Uri>和適當的清單核對。</xref:System.Uri>"
  example:
  - "The following example uses <xref:System.Net.WebPermission.AddPermission%2A> to give access rights for the specified URI.  \n  \n [!code-vb[WebPermission_IsSubset#1](~/add/codesnippet/visualbasic/38330477-33f7-43a1-bcd6-_1.vb)]\n [!code-cs[WebPermission_IsSubset#1](~/add/codesnippet/csharp/38330477-33f7-43a1-bcd6-_1.cs)]\n [!code-cpp[WebPermission_IsSubset#1](~/add/codesnippet/cpp/38330477-33f7-43a1-bcd6-_1.cpp)]"
  syntax:
    content: public void AddPermission (System.Net.NetworkAccess access, System.Text.RegularExpressions.Regex uriRegex);
    parameters:
    - id: access
      type: System.Net.NetworkAccess
      description: "指定的存取權限授與給 URI NetworkAccess。"
    - id: uriRegex
      type: System.Text.RegularExpressions.Regex
      description: "規則運算式描述的權限會授與存取的 Uri 集合。"
  overload: System.Net.WebPermission.AddPermission*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>uriRegex</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Net.WebPermission.ConnectList
  id: ConnectList
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: ConnectList
  nameWithType: WebPermission.ConnectList
  fullName: System.Net.WebPermission.ConnectList
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "這個屬性會傳回單一的列舉型別連接權限持有由此<xref href=&quot;System.Net.WebPermission&quot;> </xref>。 可能會包含在傳回的列舉類型的物件<xref:System.String>和&lt;xref:System.Text.RegularExpressions.Regex?displayProperty=fullName&gt;。</xref:System.String>"
  remarks: "這個屬性會取得一份此<xref:System.Net.WebPermission>.</xref:System.Net.WebPermission>所允許的遠端資源 您已套用的類別<xref:System.Net.WebPermission>只有這份清單中找到的資源與連接權限。</xref:System.Net.WebPermission>      > [!NOTE] > 加入使用<xref:System.Net.WebPermission.AddPermission%2A>.</xref:System.Net.WebPermission.AddPermission%2A>這份清單的 Uri      > [!NOTE] > 候選 URI 字串會檢查相關的規則運算式的清單進行比對 (<xref:System.Net.WebPermission.AcceptList%2A>或 ConnectList) 有兩種。</xref:System.Net.WebPermission.AcceptList%2A> 首先，檢查候選 URI 字串符合適當的清單。然後，如果沒有相符項目，候選 URI 字串會轉換成<xref:System.Uri>和適當的清單核對。</xref:System.Uri>"
  example:
  - "The following example prints the URLs in the ConnectList to the console.  \n  \n [!code-vb[WebPermission_AcceptConnectList#1](~/add/codesnippet/visualbasic/p-system.net.webpermissi_2_1.vb)]\n [!code-cs[WebPermission_AcceptConnectList#1](~/add/codesnippet/csharp/p-system.net.webpermissi_2_1.cs)]\n [!code-cpp[WebPermission_AcceptConnectList#1](~/add/codesnippet/cpp/p-system.net.webpermissi_2_1.cpp)]"
  syntax:
    content: public System.Collections.IEnumerator ConnectList { get; }
    return:
      type: System.Collections.IEnumerator
      description: "<xref:System.Collections.IEnumerator>介面，其中包含連接權限。</xref:System.Collections.IEnumerator>"
  overload: System.Net.WebPermission.ConnectList*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebPermission.Copy
  id: Copy
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: Copy()
  nameWithType: WebPermission.Copy()
  fullName: System.Net.WebPermission.Copy()
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "建立一份<xref href=&quot;System.Net.WebPermission&quot;> </xref>。"
  remarks: "<xref:System.Security.IPermission>傳回由相同資源存取權與原始<xref:System.Net.WebPermission>.</xref:System.Net.WebPermission>這個方法代表</xref:System.Security.IPermission> 這個方法會覆寫<xref:System.Security.CodeAccessPermission.Copy%2A>而且會實作以支援<xref:System.Security.IPermission>介面。</xref:System.Security.IPermission> </xref:System.Security.CodeAccessPermission.Copy%2A>"
  example:
  - "The following example demonstrates how to create a second instance of <xref:System.Net.WebPermission> using Copy. This second instance is identical to the first.  \n  \n [!code-vb[WebPermission_Copy#2](~/add/codesnippet/visualbasic/m-system.net.webpermissi_6_1.vb)]\n [!code-cpp[WebPermission_Copy#2](~/add/codesnippet/cpp/m-system.net.webpermissi_6_1.cpp)]\n [!code-cs[WebPermission_Copy#2](~/add/codesnippet/csharp/m-system.net.webpermissi_6_1.cs)]"
  syntax:
    content: public override System.Security.IPermission Copy ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: "新執行個體<xref href=&quot;System.Net.WebPermission&quot;></xref>類別具有相同的原始值。"
  overload: System.Net.WebPermission.Copy*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebPermission.FromXml(System.Security.SecurityElement)
  id: FromXml(System.Security.SecurityElement)
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: FromXml(SecurityElement)
  nameWithType: WebPermission.FromXml(SecurityElement)
  fullName: System.Net.WebPermission.FromXml(SecurityElement)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "重新建構<xref href=&quot;System.Net.WebPermission&quot;> </xref> XML 編碼方式。"
  remarks: "FromXml 方法，重新建構的<xref:System.Net.WebPermission>XML 編碼方式，它定義的<xref:System.Security.SecurityElement>類別。</xref:System.Security.SecurityElement> </xref:System.Net.WebPermission>       使用<xref:System.Net.WebPermission.ToXml%2A>方法，將 XML 編碼<xref:System.Net.WebPermission>，包括狀態資訊。</xref:System.Net.WebPermission> </xref:System.Net.WebPermission.ToXml%2A>"
  example:
  - "The following example creates a <xref:System.Security.SecurityElement?displayProperty=fullName>, populates its attributes, and uses FromXml to transfer this information to an instance of <xref:System.Net.WebPermission>.  \n  \n [!code-vb[WebPermission_FromToXml#1](~/add/codesnippet/visualbasic/m-system.net.webpermissi_7_1.vb)]\n [!code-cpp[WebPermission_FromToXml#1](~/add/codesnippet/cpp/m-system.net.webpermissi_7_1.cpp)]\n [!code-cs[WebPermission_FromToXml#1](~/add/codesnippet/csharp/m-system.net.webpermissi_7_1.cs)]"
  syntax:
    content: public override void FromXml (System.Security.SecurityElement securityElement);
    parameters:
    - id: securityElement
      type: System.Security.SecurityElement
      description: "要從中重新建構的 XML 編碼方式<xref href=&quot;System.Net.WebPermission&quot;> </xref>。"
  overload: System.Net.WebPermission.FromXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> securityElement </code>參數<xref uid=&quot;langword_csharp_null.&quot; name=&quot;null.&quot; href=&quot;&quot;></xref>"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>securityElement</code>不是這種類型的權限項目。"
  platform:
  - net462
- uid: System.Net.WebPermission.Intersect(System.Security.IPermission)
  id: Intersect(System.Security.IPermission)
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: Intersect(IPermission)
  nameWithType: WebPermission.Intersect(IPermission)
  fullName: System.Net.WebPermission.Intersect(IPermission)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "傳回兩個邏輯交集<xref href=&quot;System.Net.WebPermission&quot;></xref>執行個體。"
  remarks: "Intersect 傳回<xref:System.Net.WebPermission>，其中包含這些權限中同時常見`target`和目前的執行個體。</xref:System.Net.WebPermission>       這個方法會覆寫<xref:System.Security.CodeAccessPermission.Intersect%2A>而且會實作以支援<xref:System.Security.IPermission>介面。</xref:System.Security.IPermission> </xref:System.Security.CodeAccessPermission.Intersect%2A>"
  example:
  - "The following example shows how to create an instance of <xref:System.Net.WebPermission> using the logical intersection of two existing <xref:System.Net.WebPermission> instances.  \n  \n [!code-cs[WebPermission_Intersect#3](~/add/codesnippet/csharp/m-system.net.webpermissi_5_1.cs)]\n [!code-cpp[WebPermission_Intersect#3](~/add/codesnippet/cpp/m-system.net.webpermissi_5_1.cpp)]\n [!code-vb[WebPermission_Intersect#3](~/add/codesnippet/visualbasic/m-system.net.webpermissi_5_1.vb)]"
  syntax:
    content: public override System.Security.IPermission Intersect (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "<xref href=&quot;System.Net.WebPermission&quot;> </xref>要與目前的執行個體相比較。"
    return:
      type: System.Security.IPermission
      description: "新<xref href=&quot;System.Net.WebPermission&quot;> </xref> ，代表目前的執行個體的交集， <code> target </code>參數。 如果交集是空的則方法會傳回<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Net.WebPermission.Intersect*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>target</code>不是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>或型別<xref href=&quot;System.Net.WebPermission&quot;></xref>"
  platform:
  - net462
- uid: System.Net.WebPermission.IsSubsetOf(System.Security.IPermission)
  id: IsSubsetOf(System.Security.IPermission)
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: IsSubsetOf(IPermission)
  nameWithType: WebPermission.IsSubsetOf(IPermission)
  fullName: System.Net.WebPermission.IsSubsetOf(IPermission)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "決定是否目前<xref href=&quot;System.Net.WebPermission&quot;></xref>是指定之物件的子集。"
  remarks: "如果目前<xref:System.Net.WebPermission>指定相關聯的資源全部包含的一組`target`參數，則目前<xref:System.Net.WebPermission>子集`target`。</xref:System.Net.WebPermission> </xref:System.Net.WebPermission> 這個方法會覆寫 IsSubsetOf 而且會實作以支援<xref:System.Security.IPermission>介面。</xref:System.Security.IPermission>"
  example:
  - "The following example uses IsSubsetOf to determine whether the access rights found in one instance of <xref:System.Net.WebPermission> are found in another instance of <xref:System.Net.WebPermission>.  \n  \n [!code-cs[WebPermission_IsSubset2#1](~/add/codesnippet/csharp/m-system.net.webpermissi_1_1.cs)]\n [!code-vb[WebPermission_IsSubset2#1](~/add/codesnippet/visualbasic/m-system.net.webpermissi_1_1.vb)]\n [!code-cpp[WebPermission_IsSubset2#1](~/add/codesnippet/cpp/m-system.net.webpermissi_1_1.cpp)]"
  syntax:
    content: public override bool IsSubsetOf (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "<xref href=&quot;System.Net.WebPermission&quot;> </xref>要與目前比較<xref href=&quot;System.Net.WebPermission&quot;> </xref>。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果目前的執行個體是子集<code> target </code>參數，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 如果目標是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>，方法會傳回<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>不受限制的空目前權限和<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>否則。"
  overload: System.Net.WebPermission.IsSubsetOf*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "目標參數不是的執行個體<xref href=&quot;System.Net.WebPermission&quot;> </xref>。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "目前的執行個體包含 Regex 編碼的權限，而且沒有不完全相同的權限的目標執行個體中找到。"
  platform:
  - net462
- uid: System.Net.WebPermission.IsUnrestricted
  id: IsUnrestricted
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: IsUnrestricted()
  nameWithType: WebPermission.IsUnrestricted()
  fullName: System.Net.WebPermission.IsUnrestricted()
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "檢查的整體權限狀態<xref href=&quot;System.Net.WebPermission&quot;> </xref>。"
  remarks: "如果<xref:System.Net.WebPermission>是<xref:System.Security.Permissions.PermissionState>，則目標類別可以使用所有 Uri。</xref:System.Security.Permissions.PermissionState> </xref:System.Net.WebPermission> 否則，必須指定特定的權限，任何您想要使用與目標類別的 uri。      > [!NOTE] > 使用<xref:System.Net.WebPermission.AddPermission%2A>加入 URI，並指定其權限。</xref:System.Net.WebPermission.AddPermission%2A>"
  syntax:
    content: public bool IsUnrestricted ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if the <xref href=&quot;System.Net.WebPermission&quot;></xref> was created with the <xref href=&quot;System.Security.Permissions.PermissionState&quot;></xref><xref href=&quot;System.Security.Permissions.PermissionState&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Net.WebPermission.IsUnrestricted*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebPermission.ToXml
  id: ToXml
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: ToXml()
  nameWithType: WebPermission.ToXml()
  fullName: System.Net.WebPermission.ToXml()
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "建立的 XML 編碼方式<xref href=&quot;System.Net.WebPermission&quot;></xref>和其目前狀態。"
  remarks: "使用<xref:System.Net.WebPermission.FromXml%2A>方法來還原<xref:System.Security.SecurityElement>.</xref:System.Security.SecurityElement>的狀態資訊</xref:System.Net.WebPermission.FromXml%2A>"
  example:
  - "The following example demonstrates how to use ToXml to create a <xref:System.Security.SecurityElement?displayProperty=fullName> and print its attributes to the console.  \n  \n [!code-vb[WebPermission_FromToXml#1](~/add/codesnippet/visualbasic/m-system.net.webpermissi_4_1.vb)]\n [!code-cpp[WebPermission_FromToXml#1](~/add/codesnippet/cpp/m-system.net.webpermissi_4_1.cpp)]\n [!code-cs[WebPermission_FromToXml#1](~/add/codesnippet/csharp/m-system.net.webpermissi_4_1.cs)]"
  syntax:
    content: public override System.Security.SecurityElement ToXml ();
    parameters: []
    return:
      type: System.Security.SecurityElement
      description: "A <xref href=&quot;System.Security.SecurityElement&quot;> </xref> ，其中包含的 XML 編碼表示<xref href=&quot;System.Net.WebPermission&quot;> </xref>，包括狀態資訊。"
  overload: System.Net.WebPermission.ToXml*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebPermission.Union(System.Security.IPermission)
  id: Union(System.Security.IPermission)
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: Union(IPermission)
  nameWithType: WebPermission.Union(IPermission)
  fullName: System.Net.WebPermission.Union(IPermission)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "傳回兩個執行個體之間的邏輯聯集<xref href=&quot;System.Net.WebPermission&quot;></xref>類別。"
  remarks: "聯集傳回<xref:System.Net.WebPermission>包含兩者中的所有權限`target`和目前的執行個體。</xref:System.Net.WebPermission>"
  example:
  - "The following example takes the logical union of two <xref:System.Net.WebPermission> instances to create a third instance of <xref:System.Net.WebPermission>.  \n  \n [!code-cpp[WebPermission_Union#2](~/add/codesnippet/cpp/m-system.net.webpermissi_0_1.cpp)]\n [!code-vb[WebPermission_Union#2](~/add/codesnippet/visualbasic/m-system.net.webpermissi_0_1.vb)]\n [!code-cs[WebPermission_Union#2](~/add/codesnippet/csharp/m-system.net.webpermissi_0_1.cs)]"
  syntax:
    content: public override System.Security.IPermission Union (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "<xref href=&quot;System.Net.WebPermission&quot;> </xref>結合目前<xref href=&quot;System.Net.WebPermission&quot;> </xref>。"
    return:
      type: System.Security.IPermission
      description: "A <xref href=&quot;System.Net.WebPermission&quot;> </xref> ，代表目前的執行個體的聯集和<code> target </code>參數。 If either <xref uid=&quot;langword_csharp_WebPermission&quot; name=&quot;WebPermission&quot; href=&quot;&quot;></xref> is <xref href=&quot;System.Security.Permissions.PermissionState&quot;></xref>, the method returns a <xref href=&quot;System.Net.WebPermission&quot;></xref> that is <xref href=&quot;System.Security.Permissions.PermissionState&quot;></xref>. 如果目標是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>，方法會傳回一份目前<xref href=&quot;System.Net.WebPermission&quot;> </xref>。"
  overload: System.Net.WebPermission.Union*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "目標不是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>或型別<xref href=&quot;System.Net.WebPermission&quot;> </xref>。"
  platform:
  - net462
references:
- uid: System.Security.CodeAccessPermission
  isExternal: false
  name: System.Security.CodeAccessPermission
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Net.WebPermission.#ctor
  parent: System.Net.WebPermission
  isExternal: false
  name: WebPermission()
  nameWithType: WebPermission.WebPermission()
  fullName: System.Net.WebPermission.WebPermission()
- uid: System.Net.WebPermission.#ctor(System.Security.Permissions.PermissionState)
  parent: System.Net.WebPermission
  isExternal: false
  name: WebPermission(PermissionState)
  nameWithType: WebPermission.WebPermission(PermissionState)
  fullName: System.Net.WebPermission.WebPermission(PermissionState)
- uid: System.Security.Permissions.PermissionState
  parent: System.Security.Permissions
  isExternal: false
  name: PermissionState
  nameWithType: PermissionState
  fullName: System.Security.Permissions.PermissionState
- uid: System.Net.WebPermission.#ctor(System.Net.NetworkAccess,System.String)
  parent: System.Net.WebPermission
  isExternal: false
  name: WebPermission(NetworkAccess,String)
  nameWithType: WebPermission.WebPermission(NetworkAccess,String)
  fullName: System.Net.WebPermission.WebPermission(NetworkAccess,String)
- uid: System.Net.NetworkAccess
  parent: System.Net
  isExternal: false
  name: NetworkAccess
  nameWithType: NetworkAccess
  fullName: System.Net.NetworkAccess
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.WebPermission.#ctor(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)
  parent: System.Net.WebPermission
  isExternal: false
  name: WebPermission(NetworkAccess,Regex)
  nameWithType: WebPermission.WebPermission(NetworkAccess,Regex)
  fullName: System.Net.WebPermission.WebPermission(NetworkAccess,Regex)
- uid: System.Text.RegularExpressions.Regex
  parent: System.Text.RegularExpressions
  isExternal: true
  name: Regex
  nameWithType: Regex
  fullName: System.Text.RegularExpressions.Regex
- uid: System.Net.WebPermission.AcceptList
  parent: System.Net.WebPermission
  isExternal: false
  name: AcceptList
  nameWithType: WebPermission.AcceptList
  fullName: System.Net.WebPermission.AcceptList
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.String)
  parent: System.Net.WebPermission
  isExternal: false
  name: AddPermission(NetworkAccess,String)
  nameWithType: WebPermission.AddPermission(NetworkAccess,String)
  fullName: System.Net.WebPermission.AddPermission(NetworkAccess,String)
- uid: System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)
  parent: System.Net.WebPermission
  isExternal: false
  name: AddPermission(NetworkAccess,Regex)
  nameWithType: WebPermission.AddPermission(NetworkAccess,Regex)
  fullName: System.Net.WebPermission.AddPermission(NetworkAccess,Regex)
- uid: System.Net.WebPermission.ConnectList
  parent: System.Net.WebPermission
  isExternal: false
  name: ConnectList
  nameWithType: WebPermission.ConnectList
  fullName: System.Net.WebPermission.ConnectList
- uid: System.Net.WebPermission.Copy
  parent: System.Net.WebPermission
  isExternal: false
  name: Copy()
  nameWithType: WebPermission.Copy()
  fullName: System.Net.WebPermission.Copy()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Net.WebPermission.FromXml(System.Security.SecurityElement)
  parent: System.Net.WebPermission
  isExternal: false
  name: FromXml(SecurityElement)
  nameWithType: WebPermission.FromXml(SecurityElement)
  fullName: System.Net.WebPermission.FromXml(SecurityElement)
- uid: System.Security.SecurityElement
  parent: System.Security
  isExternal: false
  name: SecurityElement
  nameWithType: SecurityElement
  fullName: System.Security.SecurityElement
- uid: System.Net.WebPermission.Intersect(System.Security.IPermission)
  parent: System.Net.WebPermission
  isExternal: false
  name: Intersect(IPermission)
  nameWithType: WebPermission.Intersect(IPermission)
  fullName: System.Net.WebPermission.Intersect(IPermission)
- uid: System.Net.WebPermission.IsSubsetOf(System.Security.IPermission)
  parent: System.Net.WebPermission
  isExternal: false
  name: IsSubsetOf(IPermission)
  nameWithType: WebPermission.IsSubsetOf(IPermission)
  fullName: System.Net.WebPermission.IsSubsetOf(IPermission)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.WebPermission.IsUnrestricted
  parent: System.Net.WebPermission
  isExternal: false
  name: IsUnrestricted()
  nameWithType: WebPermission.IsUnrestricted()
  fullName: System.Net.WebPermission.IsUnrestricted()
- uid: System.Net.WebPermission.ToXml
  parent: System.Net.WebPermission
  isExternal: false
  name: ToXml()
  nameWithType: WebPermission.ToXml()
  fullName: System.Net.WebPermission.ToXml()
- uid: System.Net.WebPermission.Union(System.Security.IPermission)
  parent: System.Net.WebPermission
  isExternal: false
  name: Union(IPermission)
  nameWithType: WebPermission.Union(IPermission)
  fullName: System.Net.WebPermission.Union(IPermission)
- uid: System.Net.WebPermission.#ctor*
  parent: System.Net.WebPermission
  isExternal: false
  name: WebPermission
  nameWithType: WebPermission.WebPermission
- uid: System.Net.WebPermission.AcceptList*
  parent: System.Net.WebPermission
  isExternal: false
  name: AcceptList
  nameWithType: WebPermission.AcceptList
- uid: System.Net.WebPermission.AddPermission*
  parent: System.Net.WebPermission
  isExternal: false
  name: AddPermission
  nameWithType: WebPermission.AddPermission
- uid: System.Net.WebPermission.ConnectList*
  parent: System.Net.WebPermission
  isExternal: false
  name: ConnectList
  nameWithType: WebPermission.ConnectList
- uid: System.Net.WebPermission.Copy*
  parent: System.Net.WebPermission
  isExternal: false
  name: Copy
  nameWithType: WebPermission.Copy
- uid: System.Net.WebPermission.FromXml*
  parent: System.Net.WebPermission
  isExternal: false
  name: FromXml
  nameWithType: WebPermission.FromXml
- uid: System.Net.WebPermission.Intersect*
  parent: System.Net.WebPermission
  isExternal: false
  name: Intersect
  nameWithType: WebPermission.Intersect
- uid: System.Net.WebPermission.IsSubsetOf*
  parent: System.Net.WebPermission
  isExternal: false
  name: IsSubsetOf
  nameWithType: WebPermission.IsSubsetOf
- uid: System.Net.WebPermission.IsUnrestricted*
  parent: System.Net.WebPermission
  isExternal: false
  name: IsUnrestricted
  nameWithType: WebPermission.IsUnrestricted
- uid: System.Net.WebPermission.ToXml*
  parent: System.Net.WebPermission
  isExternal: false
  name: ToXml
  nameWithType: WebPermission.ToXml
- uid: System.Net.WebPermission.Union*
  parent: System.Net.WebPermission
  isExternal: false
  name: Union
  nameWithType: WebPermission.Union
