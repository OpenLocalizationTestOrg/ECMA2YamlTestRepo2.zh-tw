### YamlMime:ManagedReference
items:
- uid: System.Drawing.Drawing2D.CustomLineCap
  id: CustomLineCap
  children:
  - System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath)
  - System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.LineCap)
  - System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.LineCap,System.Single)
  - System.Drawing.Drawing2D.CustomLineCap.BaseCap
  - System.Drawing.Drawing2D.CustomLineCap.BaseInset
  - System.Drawing.Drawing2D.CustomLineCap.Clone
  - System.Drawing.Drawing2D.CustomLineCap.Dispose
  - System.Drawing.Drawing2D.CustomLineCap.Dispose(System.Boolean)
  - System.Drawing.Drawing2D.CustomLineCap.Finalize
  - System.Drawing.Drawing2D.CustomLineCap.GetStrokeCaps(System.Drawing.Drawing2D.LineCap@,System.Drawing.Drawing2D.LineCap@)
  - System.Drawing.Drawing2D.CustomLineCap.SetStrokeCaps(System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.LineCap)
  - System.Drawing.Drawing2D.CustomLineCap.StrokeJoin
  - System.Drawing.Drawing2D.CustomLineCap.WidthScale
  langs:
  - csharp
  name: CustomLineCap
  nameWithType: CustomLineCap
  fullName: System.Drawing.Drawing2D.CustomLineCap
  type: Class
  summary: "封裝自訂使用者定義的線條端點。"
  remarks: "線條端點可用來在開頭和結束的線條或曲線 GDI + 中繪製<xref:System.Drawing.Pen>物件。</xref:System.Drawing.Pen> GDI + 支援數個預先定義的端點樣式，並可允許使用者定義自己的端點樣式。 這個類別用來建立自訂的端點樣式。"
  example:
  - "The following example demonstrates how to use the CustomLineCap class. To run this example paste, the code into a Windows Form. Handle the form's <xref:System.Windows.Forms.Control.Paint> event and call `DrawCaps` from the form's <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-vb[System.Drawing.Misc3#1](~/add/codesnippet/visualbasic/t-system.drawing.drawing_4_1.vb)]\n [!code-cs[System.Drawing.Misc3#1](~/add/codesnippet/csharp/t-system.drawing.drawing_4_1.cs)]"
  syntax:
    content: 'public class CustomLineCap : MarshalByRefObject, ICloneable, IDisposable'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  implements:
  - System.ICloneable
  - System.IDisposable
  inheritedMembers:
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath)
  id: '#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath)'
  parent: System.Drawing.Drawing2D.CustomLineCap
  langs:
  - csharp
  name: CustomLineCap(GraphicsPath,GraphicsPath)
  nameWithType: CustomLineCap.CustomLineCap(GraphicsPath,GraphicsPath)
  fullName: System.Drawing.Drawing2D.CustomLineCap.CustomLineCap(GraphicsPath,GraphicsPath)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "初始化的新執行個體<xref href=&quot;System.Drawing.Drawing2D.CustomLineCap&quot;></xref>類別指定的大綱和填滿。"
  remarks: "<xref:System.Drawing.Drawing2D.CustomLineCap>不論作業指定的填滿模式中使用 「 線圈&quot;填滿的模式。</xref:System.Drawing.Drawing2D.CustomLineCap>       `fillPath`和`strokePath`參數不能在相同的時間。 一個參數必須傳遞 null 值。 如果上述其中一個參數傳遞 null 值，`fillPath`會被忽略。 如果`strokePath`是`null`，`fillPath`應該攔截負 y 軸。"
  example:
  - "The following example demonstrates how to use the CustomLineCap constructor. To run this example, paste the code into a Windows Form. Handle the form's <xref:System.Windows.Forms.Control.Paint> event and call `DrawCaps` from the form's <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-vb[System.Drawing.Misc3#1](~/add/codesnippet/visualbasic/b65925ed-80d8-46c6-8585-_1.vb)]\n [!code-cs[System.Drawing.Misc3#1](~/add/codesnippet/csharp/b65925ed-80d8-46c6-8585-_1.cs)]"
  syntax:
    content: public CustomLineCap (System.Drawing.Drawing2D.GraphicsPath fillPath, System.Drawing.Drawing2D.GraphicsPath strokePath);
    parameters:
    - id: fillPath
      type: System.Drawing.Drawing2D.GraphicsPath
      description: "A <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref>物件，定義自訂端點的填滿。"
    - id: strokePath
      type: System.Drawing.Drawing2D.GraphicsPath
      description: "A <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref>定義外框的自訂端點的物件。"
  overload: System.Drawing.Drawing2D.CustomLineCap.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.LineCap)
  id: '#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.LineCap)'
  parent: System.Drawing.Drawing2D.CustomLineCap
  langs:
  - csharp
  name: CustomLineCap(GraphicsPath,GraphicsPath,LineCap)
  nameWithType: CustomLineCap.CustomLineCap(GraphicsPath,GraphicsPath,LineCap)
  fullName: System.Drawing.Drawing2D.CustomLineCap.CustomLineCap(GraphicsPath,GraphicsPath,LineCap)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "初始化的新執行個體<xref href=&quot;System.Drawing.Drawing2D.CustomLineCap&quot;></xref>從指定的現有類別<xref href=&quot;System.Drawing.Drawing2D.LineCap&quot;></xref>列舉型別指定的大綱和填滿。"
  remarks: "<xref:System.Drawing.Drawing2D.CustomLineCap>不論作業指定的填滿模式中使用 「 線圈&quot;填滿的模式。</xref:System.Drawing.Drawing2D.CustomLineCap>       `fillPath`和`strokePath`參數不能在相同的時間。 一個參數必須傳遞 null 值。 如果上述其中一個參數傳遞 null 值，`fillPath`會被忽略。 如果`strokePath`是`null`，`fillPath`應該攔截負 y 軸。"
  syntax:
    content: public CustomLineCap (System.Drawing.Drawing2D.GraphicsPath fillPath, System.Drawing.Drawing2D.GraphicsPath strokePath, System.Drawing.Drawing2D.LineCap baseCap);
    parameters:
    - id: fillPath
      type: System.Drawing.Drawing2D.GraphicsPath
      description: "A <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref>物件，定義自訂端點的填滿。"
    - id: strokePath
      type: System.Drawing.Drawing2D.GraphicsPath
      description: "A <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref>定義外框的自訂端點的物件。"
    - id: baseCap
      type: System.Drawing.Drawing2D.LineCap
      description: "線條端點，用來建立自訂端點。"
  overload: System.Drawing.Drawing2D.CustomLineCap.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.LineCap,System.Single)
  id: '#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.LineCap,System.Single)'
  parent: System.Drawing.Drawing2D.CustomLineCap
  langs:
  - csharp
  name: CustomLineCap(GraphicsPath,GraphicsPath,LineCap,Single)
  nameWithType: CustomLineCap.CustomLineCap(GraphicsPath,GraphicsPath,LineCap,Single)
  fullName: System.Drawing.Drawing2D.CustomLineCap.CustomLineCap(GraphicsPath,GraphicsPath,LineCap,Single)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "初始化的新執行個體<xref href=&quot;System.Drawing.Drawing2D.CustomLineCap&quot;></xref>從指定的現有類別<xref href=&quot;System.Drawing.Drawing2D.LineCap&quot;></xref>列舉型別，其中包含指定的大綱填滿，內凹。"
  remarks: "<xref:System.Drawing.Drawing2D.CustomLineCap>不論作業指定的填滿模式中使用 「 線圈&quot;填滿的模式。</xref:System.Drawing.Drawing2D.CustomLineCap>       `fillPath`和`strokePath`參數不能在相同的時間。 一個參數必須傳遞 null 值。 如果上述其中一個參數傳遞 null 值，`fillPath`會被忽略。 如果`strokePath`是`null`，`fillPath`應該攔截負 y 軸。"
  syntax:
    content: public CustomLineCap (System.Drawing.Drawing2D.GraphicsPath fillPath, System.Drawing.Drawing2D.GraphicsPath strokePath, System.Drawing.Drawing2D.LineCap baseCap, float baseInset);
    parameters:
    - id: fillPath
      type: System.Drawing.Drawing2D.GraphicsPath
      description: "A <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref>物件，定義自訂端點的填滿。"
    - id: strokePath
      type: System.Drawing.Drawing2D.GraphicsPath
      description: "A <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref>定義外框的自訂端點的物件。"
    - id: baseCap
      type: System.Drawing.Drawing2D.LineCap
      description: "線條端點，用來建立自訂端點。"
    - id: baseInset
      type: System.Single
      description: "端點和線條之間的距離。"
  overload: System.Drawing.Drawing2D.CustomLineCap.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.CustomLineCap.BaseCap
  id: BaseCap
  parent: System.Drawing.Drawing2D.CustomLineCap
  langs:
  - csharp
  name: BaseCap
  nameWithType: CustomLineCap.BaseCap
  fullName: System.Drawing.Drawing2D.CustomLineCap.BaseCap
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "取得或設定<xref href=&quot;System.Drawing.Drawing2D.LineCap&quot;></xref>列舉此<xref href=&quot;System.Drawing.Drawing2D.CustomLineCap&quot;></xref>為基礎。"
  syntax:
    content: public System.Drawing.Drawing2D.LineCap BaseCap { get; set; }
    return:
      type: System.Drawing.Drawing2D.LineCap
      description: "<xref href=&quot;System.Drawing.Drawing2D.LineCap&quot;> </xref>列舉此<xref href=&quot;System.Drawing.Drawing2D.CustomLineCap&quot;></xref>為基礎。"
  overload: System.Drawing.Drawing2D.CustomLineCap.BaseCap*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.CustomLineCap.BaseInset
  id: BaseInset
  parent: System.Drawing.Drawing2D.CustomLineCap
  langs:
  - csharp
  name: BaseInset
  nameWithType: CustomLineCap.BaseInset
  fullName: System.Drawing.Drawing2D.CustomLineCap.BaseInset
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "取得或設定端點和線條之間的距離。"
  syntax:
    content: public float BaseInset { get; set; }
    return:
      type: System.Single
      description: "端點開端和該行結尾之間的距離。"
  overload: System.Drawing.Drawing2D.CustomLineCap.BaseInset*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.CustomLineCap.Clone
  id: Clone
  parent: System.Drawing.Drawing2D.CustomLineCap
  langs:
  - csharp
  name: Clone()
  nameWithType: CustomLineCap.Clone()
  fullName: System.Drawing.Drawing2D.CustomLineCap.Clone()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "建立的完全相同的複本<xref href=&quot;System.Drawing.Drawing2D.CustomLineCap&quot;> </xref>。"
  remarks: ''
  example:
  - "The following example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Control.Paint> event object. The code performs the following actions:  \n  \n-   Creates a custom line cap by using the <xref:System.Drawing.Drawing2D.GraphicsPath> object.  \n  \n-   Creates a <xref:System.Drawing.Drawing2D.CustomLineCap> object, `firstCap`,using the <xref:System.Drawing.Drawing2D.GraphicsPath> object just created.  \n  \n-   Creates a clone of `firstCap` by using the Clone method.  \n  \n-   Sets up the <xref:System.Drawing.Pen.CustomStartCap%2A> and <xref:System.Drawing.Pen.CustomEndCap%2A> properties of the <xref:System.Drawing.Pen> object, and uses that pen to draw a line and the custom caps to the screen.  \n  \n```vb#  \nPublic Sub CloneExample(e As PaintEventArgs)  \n Dim points As Point() = New Point(- 5, - 5) New Point(0, 0) _  \n New Point(5, - 5)  \n Dim capPath As New GraphicsPath()  \n ' Create a Path and add two lines to it,  \n ' forming a custom line cap.  \n capPath.AddLines(points)  \n ' Create a CustomLineCap object.  \n Dim firstCap As New CustomLineCap(Nothing, capPath)  \n ' Create a copy of firstCap.  \n Dim secondCap As CustomLineCap = CType(firstCap.Clone(), _  \n CustomLineCap)  \n ' Create a Pen object.  \n Dim pen As New Pen(Color.Black, 3F)  \n 'Set up the line.  \n Dim point1 As New Point(20, 20)  \n Dim point2 As New Point(100, 100)  \n ' Set up the caps.  \n pen.CustomStartCap = firstCap  \n pen.CustomEndCap = secondCap  \n ' Draw the line and caps to the screen.  \n e.Graphics.DrawLine(pen, point1, point2)  \n End Sub  \n```  \n  \n```c#  \nprivate void CloneExample(PaintEventArgs e)  \n {  \n // Create a Path and add two lines to it,  \n // forming a custom line cap.  \n Point[] points =  \n {  \n new Point(-5, -5),  \n new Point(0, 0),  \n new Point(5, -5)  \n };  \n GraphicsPath capPath = new GraphicsPath();  \n capPath.AddLines(points);  \n // Create a CustomLineCap object.  \n CustomLineCap firstCap = new CustomLineCap(null, capPath);  \n // Create a copy of firstCap.  \n CustomLineCap secondCap = (CustomLineCap)firstCap.Clone();  \n // Create a Pen object.  \n Pen pen = new Pen(Color.Black, 3.0f);  \n // Set up the line.  \n Point point1 = new Point(20, 20);  \n Point point2 = new Point(100, 100);  \n // Set up the caps.  \n pen.CustomStartCap = firstCap;  \n pen.CustomEndCap = secondCap;  \n // Draw the line and caps to the screen.  \n e.Graphics.DrawLine(pen, point1, point2);  \n }  \n```"
  syntax:
    content: public object Clone ();
    parameters: []
    return:
      type: System.Object
      description: "<xref href=&quot;System.Drawing.Drawing2D.CustomLineCap&quot;> </xref>這個方法會建立，轉換為物件。"
  overload: System.Drawing.Drawing2D.CustomLineCap.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.CustomLineCap.Dispose
  id: Dispose
  parent: System.Drawing.Drawing2D.CustomLineCap
  langs:
  - csharp
  name: Dispose()
  nameWithType: CustomLineCap.Dispose()
  fullName: System.Drawing.Drawing2D.CustomLineCap.Dispose()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "所使用的資源全部釋出<xref href=&quot;System.Drawing.Drawing2D.CustomLineCap&quot;></xref>物件。"
  remarks: "呼叫<xref:System.IDisposable.Dispose%2A>允許所使用的資源<xref:System.Drawing.Drawing2D.CustomLineCap>物件重新配置原本用於其他用途。</xref:System.Drawing.Drawing2D.CustomLineCap> </xref:System.IDisposable.Dispose%2A>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Drawing.Drawing2D.CustomLineCap.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.CustomLineCap.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Drawing.Drawing2D.CustomLineCap
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: CustomLineCap.Dispose(Boolean)
  fullName: System.Drawing.Drawing2D.CustomLineCap.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "所使用的 unmanaged 的資源釋出<xref href=&quot;System.Drawing.Drawing2D.CustomLineCap&quot;></xref>並選擇性釋放 managed 的資源。"
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>表示釋放 managed 和 unmanaged 資源，<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>表示只釋放 unmanaged 的資源。"
  overload: System.Drawing.Drawing2D.CustomLineCap.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.CustomLineCap.Finalize
  id: Finalize
  parent: System.Drawing.Drawing2D.CustomLineCap
  langs:
  - csharp
  name: Finalize()
  nameWithType: CustomLineCap.Finalize()
  fullName: System.Drawing.Drawing2D.CustomLineCap.Finalize()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "可讓<xref href=&quot;System.Drawing.Drawing2D.CustomLineCap&quot;></xref>嘗試釋放資源並執行其他清除作業之前<xref href=&quot;System.Drawing.Drawing2D.CustomLineCap&quot;></xref>回收進行回收。"
  syntax:
    content: ~CustomLineCap ();
    parameters: []
  overload: System.Drawing.Drawing2D.CustomLineCap.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.CustomLineCap.GetStrokeCaps(System.Drawing.Drawing2D.LineCap@,System.Drawing.Drawing2D.LineCap@)
  id: GetStrokeCaps(System.Drawing.Drawing2D.LineCap@,System.Drawing.Drawing2D.LineCap@)
  parent: System.Drawing.Drawing2D.CustomLineCap
  langs:
  - csharp
  name: GetStrokeCaps(LineCap,LineCap)
  nameWithType: CustomLineCap.GetStrokeCaps(LineCap,LineCap)
  fullName: System.Drawing.Drawing2D.CustomLineCap.GetStrokeCaps(LineCap,LineCap)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "取得端點用來啟動和結束行構成這個自訂端點。"
  remarks: ''
  example:
  - "The following example demonstrates how to use the GetStrokeCaps method. To run this example, paste the code into a Windows Form. Handle the form's <xref:System.Windows.Forms.Control.Paint> event and call `DrawCaps` from the form's <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-vb[System.Drawing.Misc3#1](~/add/codesnippet/visualbasic/ecbd86d4-445b-4466-aba2-_1.vb)]\n [!code-cs[System.Drawing.Misc3#1](~/add/codesnippet/csharp/ecbd86d4-445b-4466-aba2-_1.cs)]"
  syntax:
    content: public void GetStrokeCaps (out System.Drawing.Drawing2D.LineCap startCap, out System.Drawing.Drawing2D.LineCap endCap);
    parameters:
    - id: startCap
      type: System.Drawing.Drawing2D.LineCap
      description: "<xref href=&quot;System.Drawing.Drawing2D.LineCap&quot;> </xref>列舉型別使用這個端點中的線條的開頭。"
    - id: endCap
      type: System.Drawing.Drawing2D.LineCap
      description: "<xref href=&quot;System.Drawing.Drawing2D.LineCap&quot;> </xref>列舉型別使用這個端點中的線條的結尾。"
  overload: System.Drawing.Drawing2D.CustomLineCap.GetStrokeCaps*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.CustomLineCap.SetStrokeCaps(System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.LineCap)
  id: SetStrokeCaps(System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.LineCap)
  parent: System.Drawing.Drawing2D.CustomLineCap
  langs:
  - csharp
  name: SetStrokeCaps(LineCap,LineCap)
  nameWithType: CustomLineCap.SetStrokeCaps(LineCap,LineCap)
  fullName: System.Drawing.Drawing2D.CustomLineCap.SetStrokeCaps(LineCap,LineCap)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "設定端點用來啟動和結束行構成這個自訂端點。"
  remarks: ''
  example:
  - "The following example demonstrates how to use the SetStrokeCaps method. To run this example, paste the code into a Windows Form. Handle the form's <xref:System.Windows.Forms.Control.Paint> event and call `DrawCaps` from the form's <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-vb[System.Drawing.Misc3#1](~/add/codesnippet/visualbasic/fda6a751-fef5-4b7b-a5e4-_1.vb)]\n [!code-cs[System.Drawing.Misc3#1](~/add/codesnippet/csharp/fda6a751-fef5-4b7b-a5e4-_1.cs)]"
  syntax:
    content: public void SetStrokeCaps (System.Drawing.Drawing2D.LineCap startCap, System.Drawing.Drawing2D.LineCap endCap);
    parameters:
    - id: startCap
      type: System.Drawing.Drawing2D.LineCap
      description: "<xref href=&quot;System.Drawing.Drawing2D.LineCap&quot;> </xref>列舉型別使用這個端點中的線條的開頭。"
    - id: endCap
      type: System.Drawing.Drawing2D.LineCap
      description: "<xref href=&quot;System.Drawing.Drawing2D.LineCap&quot;> </xref>列舉型別使用這個端點中的線條的結尾。"
  overload: System.Drawing.Drawing2D.CustomLineCap.SetStrokeCaps*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.CustomLineCap.StrokeJoin
  id: StrokeJoin
  parent: System.Drawing.Drawing2D.CustomLineCap
  langs:
  - csharp
  name: StrokeJoin
  nameWithType: CustomLineCap.StrokeJoin
  fullName: System.Drawing.Drawing2D.CustomLineCap.StrokeJoin
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "取得或設定<xref href=&quot;System.Drawing.Drawing2D.LineJoin&quot;></xref>列舉，可判斷如何撰寫這行<xref href=&quot;System.Drawing.Drawing2D.CustomLineCap&quot;></xref>加入物件。"
  remarks: "這個屬性會指定<xref:System.Drawing.Drawing2D.LineJoin>用於聯結的直線和曲線的繪製的路徑所組成的列舉型別<xref:System.Drawing.Drawing2D.CustomLineCap>物件。</xref:System.Drawing.Drawing2D.CustomLineCap> </xref:System.Drawing.Drawing2D.LineJoin>"
  syntax:
    content: public System.Drawing.Drawing2D.LineJoin StrokeJoin { get; set; }
    return:
      type: System.Drawing.Drawing2D.LineJoin
      description: "<xref href=&quot;System.Drawing.Drawing2D.LineJoin&quot;> </xref>列舉這<xref href=&quot;System.Drawing.Drawing2D.CustomLineCap&quot;></xref>物件用來聯結線條。"
  overload: System.Drawing.Drawing2D.CustomLineCap.StrokeJoin*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.CustomLineCap.WidthScale
  id: WidthScale
  parent: System.Drawing.Drawing2D.CustomLineCap
  langs:
  - csharp
  name: WidthScale
  nameWithType: CustomLineCap.WidthScale
  fullName: System.Drawing.Drawing2D.CustomLineCap.WidthScale
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "取得或設定用來縮放這個數量<xref href=&quot;System.Drawing.Drawing2D.CustomLineCap&quot;></xref>類別物件的寬度與<xref href=&quot;System.Drawing.Pen&quot;></xref>物件。"
  remarks: "此屬性指定多個要相乘的自訂端點大小的畫筆寬度。 例如，如果此屬性值等於 1，自訂端點寬度為 10、 自訂端點高度為 5，而且在寬度為 3 畫筆繪製線條，然後為繪製 30 單位寬度和 15 單位的高度。 此屬性設定為 3 會將端點會繪製 90 單位的寬度和 45 單位的高度。"
  syntax:
    content: public float WidthScale { get; set; }
    return:
      type: System.Single
      description: "要縮放 cap 數量。"
  overload: System.Drawing.Drawing2D.CustomLineCap.WidthScale*
  exceptions: []
  platform:
  - net462
references:
- uid: System.MarshalByRefObject
  isExternal: false
  name: System.MarshalByRefObject
- uid: System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath)
  parent: System.Drawing.Drawing2D.CustomLineCap
  isExternal: false
  name: CustomLineCap(GraphicsPath,GraphicsPath)
  nameWithType: CustomLineCap.CustomLineCap(GraphicsPath,GraphicsPath)
  fullName: System.Drawing.Drawing2D.CustomLineCap.CustomLineCap(GraphicsPath,GraphicsPath)
- uid: System.Drawing.Drawing2D.GraphicsPath
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: GraphicsPath
  nameWithType: GraphicsPath
  fullName: System.Drawing.Drawing2D.GraphicsPath
- uid: System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.LineCap)
  parent: System.Drawing.Drawing2D.CustomLineCap
  isExternal: false
  name: CustomLineCap(GraphicsPath,GraphicsPath,LineCap)
  nameWithType: CustomLineCap.CustomLineCap(GraphicsPath,GraphicsPath,LineCap)
  fullName: System.Drawing.Drawing2D.CustomLineCap.CustomLineCap(GraphicsPath,GraphicsPath,LineCap)
- uid: System.Drawing.Drawing2D.LineCap
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: LineCap
  nameWithType: LineCap
  fullName: System.Drawing.Drawing2D.LineCap
- uid: System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.LineCap,System.Single)
  parent: System.Drawing.Drawing2D.CustomLineCap
  isExternal: false
  name: CustomLineCap(GraphicsPath,GraphicsPath,LineCap,Single)
  nameWithType: CustomLineCap.CustomLineCap(GraphicsPath,GraphicsPath,LineCap,Single)
  fullName: System.Drawing.Drawing2D.CustomLineCap.CustomLineCap(GraphicsPath,GraphicsPath,LineCap,Single)
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Drawing.Drawing2D.CustomLineCap.BaseCap
  parent: System.Drawing.Drawing2D.CustomLineCap
  isExternal: false
  name: BaseCap
  nameWithType: CustomLineCap.BaseCap
  fullName: System.Drawing.Drawing2D.CustomLineCap.BaseCap
- uid: System.Drawing.Drawing2D.CustomLineCap.BaseInset
  parent: System.Drawing.Drawing2D.CustomLineCap
  isExternal: false
  name: BaseInset
  nameWithType: CustomLineCap.BaseInset
  fullName: System.Drawing.Drawing2D.CustomLineCap.BaseInset
- uid: System.Drawing.Drawing2D.CustomLineCap.Clone
  parent: System.Drawing.Drawing2D.CustomLineCap
  isExternal: false
  name: Clone()
  nameWithType: CustomLineCap.Clone()
  fullName: System.Drawing.Drawing2D.CustomLineCap.Clone()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Drawing.Drawing2D.CustomLineCap.Dispose
  parent: System.Drawing.Drawing2D.CustomLineCap
  isExternal: false
  name: Dispose()
  nameWithType: CustomLineCap.Dispose()
  fullName: System.Drawing.Drawing2D.CustomLineCap.Dispose()
- uid: System.Drawing.Drawing2D.CustomLineCap.Dispose(System.Boolean)
  parent: System.Drawing.Drawing2D.CustomLineCap
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: CustomLineCap.Dispose(Boolean)
  fullName: System.Drawing.Drawing2D.CustomLineCap.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Drawing.Drawing2D.CustomLineCap.Finalize
  parent: System.Drawing.Drawing2D.CustomLineCap
  isExternal: false
  name: Finalize()
  nameWithType: CustomLineCap.Finalize()
  fullName: System.Drawing.Drawing2D.CustomLineCap.Finalize()
- uid: System.Drawing.Drawing2D.CustomLineCap.GetStrokeCaps(System.Drawing.Drawing2D.LineCap@,System.Drawing.Drawing2D.LineCap@)
  parent: System.Drawing.Drawing2D.CustomLineCap
  isExternal: false
  name: GetStrokeCaps(LineCap,LineCap)
  nameWithType: CustomLineCap.GetStrokeCaps(LineCap,LineCap)
  fullName: System.Drawing.Drawing2D.CustomLineCap.GetStrokeCaps(LineCap,LineCap)
- uid: System.Drawing.Drawing2D.CustomLineCap.SetStrokeCaps(System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.LineCap)
  parent: System.Drawing.Drawing2D.CustomLineCap
  isExternal: false
  name: SetStrokeCaps(LineCap,LineCap)
  nameWithType: CustomLineCap.SetStrokeCaps(LineCap,LineCap)
  fullName: System.Drawing.Drawing2D.CustomLineCap.SetStrokeCaps(LineCap,LineCap)
- uid: System.Drawing.Drawing2D.CustomLineCap.StrokeJoin
  parent: System.Drawing.Drawing2D.CustomLineCap
  isExternal: false
  name: StrokeJoin
  nameWithType: CustomLineCap.StrokeJoin
  fullName: System.Drawing.Drawing2D.CustomLineCap.StrokeJoin
- uid: System.Drawing.Drawing2D.LineJoin
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: LineJoin
  nameWithType: LineJoin
  fullName: System.Drawing.Drawing2D.LineJoin
- uid: System.Drawing.Drawing2D.CustomLineCap.WidthScale
  parent: System.Drawing.Drawing2D.CustomLineCap
  isExternal: false
  name: WidthScale
  nameWithType: CustomLineCap.WidthScale
  fullName: System.Drawing.Drawing2D.CustomLineCap.WidthScale
- uid: System.Drawing.Drawing2D.CustomLineCap.#ctor*
  parent: System.Drawing.Drawing2D.CustomLineCap
  isExternal: false
  name: CustomLineCap
  nameWithType: CustomLineCap.CustomLineCap
- uid: System.Drawing.Drawing2D.CustomLineCap.BaseCap*
  parent: System.Drawing.Drawing2D.CustomLineCap
  isExternal: false
  name: BaseCap
  nameWithType: CustomLineCap.BaseCap
- uid: System.Drawing.Drawing2D.CustomLineCap.BaseInset*
  parent: System.Drawing.Drawing2D.CustomLineCap
  isExternal: false
  name: BaseInset
  nameWithType: CustomLineCap.BaseInset
- uid: System.Drawing.Drawing2D.CustomLineCap.Clone*
  parent: System.Drawing.Drawing2D.CustomLineCap
  isExternal: false
  name: Clone
  nameWithType: CustomLineCap.Clone
- uid: System.Drawing.Drawing2D.CustomLineCap.Dispose*
  parent: System.Drawing.Drawing2D.CustomLineCap
  isExternal: false
  name: Dispose
  nameWithType: CustomLineCap.Dispose
- uid: System.Drawing.Drawing2D.CustomLineCap.Finalize*
  parent: System.Drawing.Drawing2D.CustomLineCap
  isExternal: false
  name: Finalize
  nameWithType: CustomLineCap.Finalize
- uid: System.Drawing.Drawing2D.CustomLineCap.GetStrokeCaps*
  parent: System.Drawing.Drawing2D.CustomLineCap
  isExternal: false
  name: GetStrokeCaps
  nameWithType: CustomLineCap.GetStrokeCaps
- uid: System.Drawing.Drawing2D.CustomLineCap.SetStrokeCaps*
  parent: System.Drawing.Drawing2D.CustomLineCap
  isExternal: false
  name: SetStrokeCaps
  nameWithType: CustomLineCap.SetStrokeCaps
- uid: System.Drawing.Drawing2D.CustomLineCap.StrokeJoin*
  parent: System.Drawing.Drawing2D.CustomLineCap
  isExternal: false
  name: StrokeJoin
  nameWithType: CustomLineCap.StrokeJoin
- uid: System.Drawing.Drawing2D.CustomLineCap.WidthScale*
  parent: System.Drawing.Drawing2D.CustomLineCap
  isExternal: false
  name: WidthScale
  nameWithType: CustomLineCap.WidthScale
