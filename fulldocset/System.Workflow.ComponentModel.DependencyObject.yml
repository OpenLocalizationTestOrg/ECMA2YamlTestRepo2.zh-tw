### YamlMime:ManagedReference
items:
- uid: System.Workflow.ComponentModel.DependencyObject
  id: DependencyObject
  children:
  - System.Workflow.ComponentModel.DependencyObject.#ctor
  - System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.DesignMode
  - System.Workflow.ComponentModel.DependencyObject.Dispose
  - System.Workflow.ComponentModel.DependencyObject.Dispose(System.Boolean)
  - System.Workflow.ComponentModel.DependencyObject.Finalize
  - System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)
  - System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.InitializeProperties
  - System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)
  - System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject
  - System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)
  - System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.Site
  - System.Workflow.ComponentModel.DependencyObject.UserData
  langs:
  - csharp
  name: DependencyObject
  nameWithType: DependencyObject
  fullName: System.Workflow.ComponentModel.DependencyObject
  type: Class
  summary: "具有相依性屬性的所有物件的基底類別。 這個類別必須被繼承。"
  remarks: >-
    > [!NOTE]

    >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]
  syntax:
    content: >-
      [System.ComponentModel.Design.Serialization.DesignerSerializer(typeof(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer), typeof(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer))]

      [System.ComponentModel.Design.Serialization.DesignerSerializer(typeof(System.Workflow.ComponentModel.Serialization.DependencyObjectCodeDomSerializer), typeof(System.ComponentModel.Design.Serialization.CodeDomSerializer))]

      [System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")]

      public abstract class DependencyObject : IDisposable, System.ComponentModel.IComponent
  inheritance:
  - System.Object
  implements:
  - System.ComponentModel.IComponent
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.#ctor
  id: '#ctor'
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: DependencyObject()
  nameWithType: DependencyObject.DependencyObject()
  fullName: System.Workflow.ComponentModel.DependencyObject.DependencyObject()
  type: Constructor
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "在衍生類別中實作時，初始化新執行個體<xref href=&quot;System.Workflow.ComponentModel.DependencyObject&quot;></xref>類別。"
  syntax:
    content: protected DependencyObject ();
    parameters: []
  overload: System.Workflow.ComponentModel.DependencyObject.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  id: AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: AddHandler(DependencyProperty,Object)
  nameWithType: DependencyObject.AddHandler(DependencyProperty,Object)
  fullName: System.Workflow.ComponentModel.DependencyObject.AddHandler(DependencyProperty,Object)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "加入的事件處理常式<xref href=&quot;System.Workflow.ComponentModel.DependencyObject&quot;> </xref>。"
  remarks: '當您建立委派時，必須識別處理事件的方法。 若要將事件與事件處理常式產生關聯，將委派的執行個體加入事件。 除非您移除委派，否則每當事件發生時呼叫事件處理常式。 可以加入多個委派，才能處理事件。 如需事件處理常式委派的詳細資訊，請參閱[NIB︰ 事件和委派](http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115)。'
  example:
  - "Handlers are added and removed using the following code. This code example is part of the Send E-mail SDK sample and is from the SendMailActivity.cs file. For more information, see [Send E-mail Activity Sample](http://msdn.microsoft.com/en-us/bfb5939e-60a9-4037-af4e-2cea9e654669).  \n  \n [!code-cs[WF_Samples#232](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#232)]\n [!code-vb[WF_Samples#232](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#232)]"
  syntax:
    content: public void AddHandler (System.Workflow.ComponentModel.DependencyProperty dependencyEvent, object value);
    parameters:
    - id: dependencyEvent
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "The <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;></xref>."
    - id: value
      type: System.Object
      description: "<xref:System.Object>，代表這個屬性的值。</xref:System.Object> 在此情況下，<xref:System.Delegate>型別。</xref:System.Delegate>"
  overload: System.Workflow.ComponentModel.DependencyObject.AddHandler*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "其中一個引數為 null 參考 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>在 Visual Basic 中)。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> dependencyEvent </code>表示無事件<xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref>。"
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.DesignMode
  id: DesignMode
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: DesignMode
  nameWithType: DependencyObject.DesignMode
  fullName: System.Workflow.ComponentModel.DependencyObject.DesignMode
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "取得值，指出這個執行個體是否在設計模式或執行階段模式。"
  syntax:
    content: protected bool DesignMode { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果這個執行個體處於設計模式，否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Workflow.ComponentModel.DependencyObject.DesignMode*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.Dispose
  id: Dispose
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: Dispose()
  nameWithType: DependencyObject.Dispose()
  fullName: System.Workflow.ComponentModel.DependencyObject.Dispose()
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "所使用的所有資源釋都出<xref href=&quot;System.Workflow.ComponentModel.DependencyObject&quot;> </xref>。"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Workflow.ComponentModel.DependencyObject.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: DependencyObject.Dispose(Boolean)
  fullName: System.Workflow.ComponentModel.DependencyObject.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "釋出 unmanaged 的資源，並選擇性釋放 managed 的資源供<xref href=&quot;System.Workflow.ComponentModel.DependencyObject&quot;> </xref>。"
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>表示釋放 managed 和 unmanaged 資源，<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>表示只釋放 unmanaged 的資源。"
  overload: System.Workflow.ComponentModel.DependencyObject.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.Finalize
  id: Finalize
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: Finalize()
  nameWithType: DependencyObject.Finalize()
  fullName: System.Workflow.ComponentModel.DependencyObject.Finalize()
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "覆寫，以提供&lt;xref:System.Object.Finalize%2A?displayProperty=fullName&gt;決定性地清除任何 unmanaged 資源。"
  remarks: "一般而言，這是必要只有在 unmanaged 的資源，例如原始 HWNDS、 Win32 檔案處理常式，而其他人發行。"
  syntax:
    content: ~DependencyObject ();
    parameters: []
  overload: System.Workflow.ComponentModel.DependencyObject.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)
  id: GetBinding(System.Workflow.ComponentModel.DependencyProperty)
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: GetBinding(DependencyProperty)
  nameWithType: DependencyObject.GetBinding(DependencyProperty)
  fullName: System.Workflow.ComponentModel.DependencyObject.GetBinding(DependencyProperty)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "提供存取<xref href=&quot;System.Workflow.ComponentModel.ActivityBind&quot;></xref>相關聯的特定<xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref>。"
  syntax:
    content: public System.Workflow.ComponentModel.ActivityBind GetBinding (System.Workflow.ComponentModel.DependencyProperty dependencyProperty);
    parameters:
    - id: dependencyProperty
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "The <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;></xref>."
    return:
      type: System.Workflow.ComponentModel.ActivityBind
      description: "<xref href=&quot;System.Workflow.ComponentModel.ActivityBind&quot;> </xref>相關聯的特定<xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref>。"
  overload: System.Workflow.ComponentModel.DependencyObject.GetBinding*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)
  id: GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: GetBoundValue(ActivityBind,Type)
  nameWithType: DependencyObject.GetBoundValue(ActivityBind,Type)
  fullName: System.Workflow.ComponentModel.DependencyObject.GetBoundValue(ActivityBind,Type)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "擷取<xref:System.Object>也就是主體<xref href=&quot;System.Workflow.ComponentModel.ActivityBind&quot;> </xref>。</xref:System.Object>"
  remarks: "<xref:System.Object>也就是<xref:System.Workflow.ComponentModel.ActivityBind>.</xref:System.Workflow.ComponentModel.ActivityBind>主體</xref:System.Object> 當在衍生類別中覆寫時，這個方法可以用於自訂解析指定的繫結中的方式。"
  syntax:
    content: protected virtual object GetBoundValue (System.Workflow.ComponentModel.ActivityBind bind, Type targetType);
    parameters:
    - id: bind
      type: System.Workflow.ComponentModel.ActivityBind
      description: "The <xref href=&quot;System.Workflow.ComponentModel.ActivityBind&quot;></xref>."
    - id: targetType
      type: System.Type
      description: "<xref:System.Type>之目標的<xref href=&quot;System.Workflow.ComponentModel.ActivityBind&quot;> </xref>。</xref:System.Type>"
    return:
      type: System.Object
      description: "<xref:System.Object>也就是主體<xref href=&quot;System.Workflow.ComponentModel.ActivityBind&quot;> </xref>。</xref:System.Object>"
  overload: System.Workflow.ComponentModel.DependencyObject.GetBoundValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetType</code>為 null 參考 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>)。"
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)
  id: GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: GetInvocationList(DependencyProperty)
  nameWithType: DependencyObject.GetInvocationList(DependencyProperty)
  fullName: System.Workflow.ComponentModel.DependencyObject.GetInvocationList(DependencyProperty)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  syntax:
    content: protected T[] GetInvocationList<T> (System.Workflow.ComponentModel.DependencyProperty dependencyEvent);
    parameters:
    - id: dependencyEvent
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "即將加入。"
    return:
      type: T[]
      description: "即將加入。"
  overload: System.Workflow.ComponentModel.DependencyObject.GetInvocationList<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)
  id: GetValue(System.Workflow.ComponentModel.DependencyProperty)
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: GetValue(DependencyProperty)
  nameWithType: DependencyObject.GetValue(DependencyProperty)
  fullName: System.Workflow.ComponentModel.DependencyObject.GetValue(DependencyProperty)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "提供存取指定的值<xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref>。"
  remarks: "這個成員通常用於取得屬性以提供具名相依性值的值。"
  example:
  - "The following code shows how to use GetValue to return the value represented by a named dependency property in the context of get and set. This code example is part of the Send E-mail SDK sample and is from the SendMailActivity.cs file. For more information, see [Send E-mail Activity Sample](http://msdn.microsoft.com/en-us/bfb5939e-60a9-4037-af4e-2cea9e654669).  \n  \n [!code-cs[WF_Samples#231](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#231)]\n [!code-vb[WF_Samples#231](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#231)]"
  syntax:
    content: public object GetValue (System.Workflow.ComponentModel.DependencyProperty dependencyProperty);
    parameters:
    - id: dependencyProperty
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "The <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;></xref>."
    return:
      type: System.Object
      description: "物件，代表指定之的值<xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref>。"
  overload: System.Workflow.ComponentModel.DependencyObject.GetValue*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)
  id: GetValueBase(System.Workflow.ComponentModel.DependencyProperty)
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: GetValueBase(DependencyProperty)
  nameWithType: DependencyObject.GetValueBase(DependencyProperty)
  fullName: System.Workflow.ComponentModel.DependencyObject.GetValueBase(DependencyProperty)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "提供的繫結物件的存取權<xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;></xref>並略過<xref:System.Workflow.ComponentModel.DependencyObject.GetValue*>覆寫。</xref:System.Workflow.ComponentModel.DependencyObject.GetValue*>"
  remarks: "此方法相當實用內<xref:System.Workflow.ComponentModel.DependencyObject.GetValue%2A>覆寫實作。</xref:System.Workflow.ComponentModel.DependencyObject.GetValue%2A> 一般而言，<xref:System.Workflow.ComponentModel.DependencyObject.GetValue%2A>覆寫程式碼叫用 GetValueBase，並將額外的程式碼。</xref:System.Workflow.ComponentModel.DependencyObject.GetValue%2A>       實作<xref:System.Workflow.ComponentModel.DependencyObject.GetValue%2A>覆寫，<xref:System.Workflow.ComponentModel.PropertyMetadata>可用於<xref:System.Workflow.ComponentModel.DependencyProperty.Register%2A>/<xref:System.Workflow.ComponentModel.DependencyProperty.RegisterAttached%2A>呼叫。</xref:System.Workflow.ComponentModel.DependencyProperty.RegisterAttached%2A> </xref:System.Workflow.ComponentModel.DependencyProperty.Register%2A> </xref:System.Workflow.ComponentModel.PropertyMetadata> </xref:System.Workflow.ComponentModel.DependencyObject.GetValue%2A>"
  syntax:
    content: public object GetValueBase (System.Workflow.ComponentModel.DependencyProperty dependencyProperty);
    parameters:
    - id: dependencyProperty
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "<xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref>取得的值。"
    return:
      type: System.Object
      description: "在繫結的物件的<xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref>。 這會略過<xref:System.Workflow.ComponentModel.DependencyObject.GetValue*>覆寫。</xref:System.Workflow.ComponentModel.DependencyObject.GetValue*>"
  overload: System.Workflow.ComponentModel.DependencyObject.GetValueBase*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>dependencyProperty</code>為 null 參考 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>在 Visual Basic 中)。"
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.InitializeProperties
  id: InitializeProperties
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: InitializeProperties()
  nameWithType: DependencyObject.InitializeProperties()
  fullName: System.Workflow.ComponentModel.DependencyObject.InitializeProperties()
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "在衍生類別中覆寫時，相依性屬性上執行初始化。"
  remarks: "由工作流程執行階段引擎在初始化活動在執行階段期間呼叫。"
  syntax:
    content: protected virtual void InitializeProperties ();
    parameters: []
  overload: System.Workflow.ComponentModel.DependencyObject.InitializeProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)
  id: IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: IsBindingSet(DependencyProperty)
  nameWithType: DependencyObject.IsBindingSet(DependencyProperty)
  fullName: System.Workflow.ComponentModel.DependencyObject.IsBindingSet(DependencyProperty)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "指出是否值<xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;></xref>設定為繫結。 請參閱<xref:System.Workflow.ComponentModel.DependencyObject.SetBinding*>.</xref:System.Workflow.ComponentModel.DependencyObject.SetBinding*>"
  syntax:
    content: public bool IsBindingSet (System.Workflow.ComponentModel.DependencyProperty dependencyProperty);
    parameters:
    - id: dependencyProperty
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "<xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref>測試。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果設定為繫結。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Workflow.ComponentModel.DependencyObject.IsBindingSet*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>dependencyProperty</code>為 null 參考 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>在 Visual Basic 中)。"
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)
  id: MetaEquals(System.Workflow.ComponentModel.DependencyObject)
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: MetaEquals(DependencyObject)
  nameWithType: DependencyObject.MetaEquals(DependencyObject)
  fullName: System.Workflow.ComponentModel.DependencyObject.MetaEquals(DependencyObject)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "決定是否<xref uid=&quot;langword_csharp_metaproperties&quot; name=&quot;metaproperties&quot; href=&quot;&quot;></xref>這個<xref href=&quot;System.Workflow.ComponentModel.DependencyObject&quot;></xref>等於<xref uid=&quot;langword_csharp_metaproperties&quot; name=&quot;metaproperties&quot; href=&quot;&quot;></xref>的參數化<xref href=&quot;System.Workflow.ComponentModel.DependencyObject&quot;> </xref>。"
  remarks: "這會使用`==`運算子來定義私用成員的型別`metaproperties`，這是<xref:System.Collections.IDictionary>.</xref:System.Collections.IDictionary>"
  syntax:
    content: public bool MetaEquals (System.Workflow.ComponentModel.DependencyObject dependencyObject);
    parameters:
    - id: dependencyObject
      type: System.Workflow.ComponentModel.DependencyObject
      description: "<xref href=&quot;System.Workflow.ComponentModel.DependencyObject&quot;> </xref>要與之相等比較。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref uid=&quot;langword_csharp_metaproperties&quot; name=&quot;metaproperties&quot; href=&quot;&quot;></xref>相等; 否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Workflow.ComponentModel.DependencyObject.MetaEquals*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject
  id: ParentDependencyObject
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: ParentDependencyObject
  nameWithType: DependencyObject.ParentDependencyObject
  fullName: System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "取得父<xref href=&quot;System.Workflow.ComponentModel.DependencyObject&quot;></xref>中<xref href=&quot;System.Workflow.ComponentModel.DependencyObject&quot;></xref>圖形。"
  syntax:
    content: protected System.Workflow.ComponentModel.DependencyObject ParentDependencyObject { get; }
    return:
      type: System.Workflow.ComponentModel.DependencyObject
      description: "父代<xref href=&quot;System.Workflow.ComponentModel.DependencyObject&quot;></xref>中<xref href=&quot;System.Workflow.ComponentModel.DependencyObject&quot;></xref>圖形。"
  overload: System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  id: RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: RemoveHandler(DependencyProperty,Object)
  nameWithType: DependencyObject.RemoveHandler(DependencyProperty,Object)
  fullName: System.Workflow.ComponentModel.DependencyObject.RemoveHandler(DependencyProperty,Object)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "移除<xref:System.EventHandler>從相關聯<xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref>。</xref:System.EventHandler>"
  remarks: "提供方便的指示方法，以移除事件委派。       當您建立委派時，您可以識別即將處理此事件的方法。 若要將事件與事件處理常式產生關聯，將委派的執行個體加入事件。 除非您移除委派，否則每當事件發生時呼叫事件處理常式。 如需事件處理常式委派的詳細資訊，請參閱[NIB︰ 事件和委派](http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115)。"
  example:
  - "Handlers are added and removed using the following code. For more information, see [Send E-mail Activity Sample](http://msdn.microsoft.com/en-us/bfb5939e-60a9-4037-af4e-2cea9e654669).  \n  \n [!code-cs[WF_Samples#232](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#232)]\n [!code-vb[WF_Samples#232](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#232)]"
  syntax:
    content: public void RemoveHandler (System.Workflow.ComponentModel.DependencyProperty dependencyEvent, object value);
    parameters:
    - id: dependencyEvent
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "The <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;></xref>."
    - id: value
      type: System.Object
      description: "<xref:System.Object>，代表這個屬性的值。</xref:System.Object> 在此情況下，<xref:System.Delegate>型別。</xref:System.Delegate>"
  overload: System.Workflow.ComponentModel.DependencyObject.RemoveHandler*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "其中一個引數為 null 參考 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>在 Visual Basic 中)。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> dependencyEvent </code>不是事件。"
  - type: System.Data.ReadOnlyException
    commentId: T:System.Data.ReadOnlyException
    description: "<code> value </code>是<xref href=&quot;System.Workflow.ComponentModel.ActivityBind&quot;></xref>和這個執行個體不是<xref:System.Workflow.ComponentModel.DependencyObject.DesignMode*>.</xref:System.Workflow.ComponentModel.DependencyObject.DesignMode*>"
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)
  id: RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: RemoveProperty(DependencyProperty)
  nameWithType: DependencyObject.RemoveProperty(DependencyProperty)
  fullName: System.Workflow.ComponentModel.DependencyObject.RemoveProperty(DependencyProperty)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Removes a <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;></xref> from the <xref href=&quot;System.Workflow.ComponentModel.DependencyObject&quot;></xref>."
  syntax:
    content: public bool RemoveProperty (System.Workflow.ComponentModel.DependencyProperty dependencyProperty);
    parameters:
    - id: dependencyProperty
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "<xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref>移除。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果作業成功。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Workflow.ComponentModel.DependencyObject.RemoveProperty*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "引數為 null 參考 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>在 Visual Basic 中)。"
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)
  id: SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: SetBinding(DependencyProperty,ActivityBind)
  nameWithType: DependencyObject.SetBinding(DependencyProperty,ActivityBind)
  fullName: System.Workflow.ComponentModel.DependencyObject.SetBinding(DependencyProperty,ActivityBind)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "設定<xref href=&quot;System.Workflow.ComponentModel.ActivityBind&quot;></xref>指定<xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref>。"
  remarks: "<xref:System.Workflow.ComponentModel.DependencyObject.SetValue%2A>將值直接設定<xref:System.Workflow.ComponentModel.DependencyProperty>.</xref:System.Workflow.ComponentModel.DependencyProperty></xref:System.Workflow.ComponentModel.DependencyObject.SetValue%2A> 同樣地，<xref:System.Workflow.ComponentModel.DependencyObject.AddHandler%2A>將處理常式直接加入型別事件的屬性。</xref:System.Workflow.ComponentModel.DependencyObject.AddHandler%2A>       在呼叫相同屬性時，這些方法是互斥的。 如果呼叫 SetBinding 時，則設定的值之前使用<xref:System.Workflow.ComponentModel.DependencyObject.SetValue%2A>(<xref:System.Workflow.ComponentModel.DependencyObject.AddHandler%2A>事件) 則會略過。</xref:System.Workflow.ComponentModel.DependencyObject.AddHandler%2A> </xref:System.Workflow.ComponentModel.DependencyObject.SetValue%2A> 也是如此反之︰ <xref:System.Workflow.ComponentModel.DependencyObject.SetValue%2A>(<xref:System.Workflow.ComponentModel.DependencyObject.AddHandler%2A>) 會重設使用 SetBinding 指派的繫結。</xref:System.Workflow.ComponentModel.DependencyObject.AddHandler%2A> </xref:System.Workflow.ComponentModel.DependencyObject.SetValue%2A>"
  example:
  - "The following code shows how to create activities and add them as children to a composite activity and includes setting the <xref:System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities%2A>permission for this type.  \n  \n In addition, the use of the SetBinding method is illustrated.  \n  \n This code example is part of the Throw SDK sample and is from the ThrowWorkFlow.cs file. For more information, see [Using Throw](http://msdn.microsoft.com/en-us/aa5b9546-ec95-4e43-8337-20e26f8d71cc).  \n  \n [!code-cs[WF_Samples#215](~/add/codesnippet/csharp/wf_snippets/snippets19.cs#215)]\n [!code-vb[WF_Samples#215](~/add/codesnippet/visualbasic/wf_snippets/snippets19.vb#215)]"
  syntax:
    content: public void SetBinding (System.Workflow.ComponentModel.DependencyProperty dependencyProperty, System.Workflow.ComponentModel.ActivityBind bind);
    parameters:
    - id: dependencyProperty
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "The <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;></xref>."
    - id: bind
      type: System.Workflow.ComponentModel.ActivityBind
      description: "<xref href=&quot;System.Workflow.ComponentModel.ActivityBind&quot;> </xref>設為。"
  overload: System.Workflow.ComponentModel.DependencyObject.SetBinding*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "其中一個引數為 null 參考 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>在 Visual Basic 中)。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<xref href=&quot;System.Workflow.ComponentModel.PropertyMetadata&quot;> </xref>聯<xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;></xref>不是可繫結。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "這個執行個體不是<xref:System.Workflow.ComponentModel.DependencyObject.DesignMode*>.</xref:System.Workflow.ComponentModel.DependencyObject.DesignMode*>"
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)
  id: SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: SetBoundValue(ActivityBind,Object)
  nameWithType: DependencyObject.SetBoundValue(ActivityBind,Object)
  fullName: System.Workflow.ComponentModel.DependencyObject.SetBoundValue(ActivityBind,Object)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "設定目標值<xref href=&quot;System.Workflow.ComponentModel.ActivityBind&quot;> </xref>。"
  syntax:
    content: protected virtual void SetBoundValue (System.Workflow.ComponentModel.ActivityBind bind, object value);
    parameters:
    - id: bind
      type: System.Workflow.ComponentModel.ActivityBind
      description: "The <xref href=&quot;System.Workflow.ComponentModel.ActivityBind&quot;></xref>."
    - id: value
      type: System.Object
      description: "<xref:System.Object>設定的目標<xref href=&quot;System.Workflow.ComponentModel.ActivityBind&quot;> </xref>。</xref:System.Object>"
  overload: System.Workflow.ComponentModel.DependencyObject.SetBoundValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>bind</code>為 null 參考 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>在 Visual Basic 中)。"
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  id: SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: SetReadOnlyPropertyValue(DependencyProperty,Object)
  nameWithType: DependencyObject.SetReadOnlyPropertyValue(DependencyProperty,Object)
  fullName: System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(DependencyProperty,Object)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "設定的值<xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref>，這是唯讀的。"
  syntax:
    content: protected void SetReadOnlyPropertyValue (System.Workflow.ComponentModel.DependencyProperty dependencyProperty, object value);
    parameters:
    - id: dependencyProperty
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "The <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;></xref>."
    - id: value
      type: System.Object
      description: "<xref:System.Object>表示的值。</xref:System.Object>"
  overload: System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> dependencyProperty </code>為 null 參考 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>在 Visual Basic 中)。"
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  id: SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: SetValue(DependencyProperty,Object)
  nameWithType: DependencyObject.SetValue(DependencyProperty,Object)
  fullName: System.Workflow.ComponentModel.DependencyObject.SetValue(DependencyProperty,Object)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "設定的值<xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;></xref>物件。"
  remarks: "<xref:System.Workflow.ComponentModel.DependencyObject.SetBinding%2A>設定相依性屬性的繫結。</xref:System.Workflow.ComponentModel.DependencyObject.SetBinding%2A>       SetValue 直接設定值， <xref:System.Workflow.ComponentModel.DependencyProperty>(同樣地，<xref:System.Workflow.ComponentModel.DependencyObject.AddHandler%2A>將處理常式直接加入型別事件的屬性)。</xref:System.Workflow.ComponentModel.DependencyObject.AddHandler%2A> </xref:System.Workflow.ComponentModel.DependencyProperty>       在呼叫相同屬性時，這些方法是互斥的。 如果<xref:System.Workflow.ComponentModel.DependencyObject.SetBinding%2A>呼叫，然後設定的值之前使用 SetValue (<xref:System.Workflow.ComponentModel.DependencyObject.AddHandler%2A>事件) 則會略過。</xref:System.Workflow.ComponentModel.DependencyObject.AddHandler%2A> </xref:System.Workflow.ComponentModel.DependencyObject.SetBinding%2A> 也是如此反之︰ SetValue (<xref:System.Workflow.ComponentModel.DependencyObject.AddHandler%2A>) 會重設<xref:System.Workflow.ComponentModel.DependencyObject.SetBinding%2A>.</xref:System.Workflow.ComponentModel.DependencyObject.SetBinding%2A>與指派的繫結</xref:System.Workflow.ComponentModel.DependencyObject.AddHandler%2A>"
  example:
  - "The following code shows how a dependency property is set within a dependency object using SetValue.  \n  \n [!code-cs[WF_Samples#166](~/add/codesnippet/csharp/wf_snippets/snippets11.cs#166)]\n [!code-vb[WF_Samples#166](~/add/codesnippet/visualbasic/wf_snippets/snippets11.vb#166)]"
  syntax:
    content: public void SetValue (System.Workflow.ComponentModel.DependencyProperty dependencyProperty, object value);
    parameters:
    - id: dependencyProperty
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "<xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref>設定。"
    - id: value
      type: System.Object
      description: "<xref:System.Object>將值設定為。</xref:System.Object>"
  overload: System.Workflow.ComponentModel.DependencyObject.SetValue*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  id: SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: SetValueBase(DependencyProperty,Object)
  nameWithType: DependencyObject.SetValueBase(DependencyProperty,Object)
  fullName: System.Workflow.ComponentModel.DependencyObject.SetValueBase(DependencyProperty,Object)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "設定的值<xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;></xref>指定<xref:System.Object>、 略過<xref:System.Workflow.ComponentModel.DependencyObject.SetValue*>.</xref:System.Workflow.ComponentModel.DependencyObject.SetValue*> </xref:System.Object>"
  remarks: "此方法相當實用內<xref:System.Workflow.ComponentModel.DependencyObject.SetValue%2A>覆寫實作。</xref:System.Workflow.ComponentModel.DependencyObject.SetValue%2A> 一般而言，<xref:System.Workflow.ComponentModel.DependencyObject.SetValue%2A>覆寫程式碼會呼叫 SetValueBase 方法之前先進行一些自訂邏輯。</xref:System.Workflow.ComponentModel.DependencyObject.SetValue%2A>       設定<xref:System.Workflow.ComponentModel.DependencyObject.SetValue%2A>覆寫，<xref:System.Workflow.ComponentModel.PropertyMetadata>可用於<xref:System.Workflow.ComponentModel.DependencyProperty>， <xref:System.Workflow.ComponentModel.DependencyProperty.Register%2A>，或<xref:System.Workflow.ComponentModel.DependencyProperty.RegisterAttached%2A>呼叫。</xref:System.Workflow.ComponentModel.DependencyProperty.RegisterAttached%2A> </xref:System.Workflow.ComponentModel.DependencyProperty.Register%2A> </xref:System.Workflow.ComponentModel.DependencyProperty> </xref:System.Workflow.ComponentModel.PropertyMetadata> </xref:System.Workflow.ComponentModel.DependencyObject.SetValue%2A>"
  syntax:
    content: public void SetValueBase (System.Workflow.ComponentModel.DependencyProperty dependencyProperty, object value);
    parameters:
    - id: dependencyProperty
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "<xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref>設為<xref:System.Object>.</xref:System.Object>"
    - id: value
      type: System.Object
      description: "<xref:System.Object>的值會變成<xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref>。</xref:System.Object>"
  overload: System.Workflow.ComponentModel.DependencyObject.SetValueBase*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>dependencyProperty</code>為 null 參考 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>在 Visual Basic 中)。"
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.Site
  id: Site
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: Site
  nameWithType: DependencyObject.Site
  fullName: System.Workflow.ComponentModel.DependencyObject.Site
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "取得或設定的站台元件的參考<xref href=&quot;System.Workflow.ComponentModel.DependencyObject&quot;> </xref>。"
  syntax:
    content: public System.ComponentModel.ISite Site { get; set; }
    return:
      type: System.ComponentModel.ISite
      description: "站台元件的<xref href=&quot;System.Workflow.ComponentModel.DependencyObject&quot;> </xref>。"
  overload: System.Workflow.ComponentModel.DependencyObject.Site*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.UserData
  id: UserData
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: UserData
  nameWithType: DependencyObject.UserData
  fullName: System.Workflow.ComponentModel.DependencyObject.UserData
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "取得<xref:System.Collections.IDictionary>建立關聯的自訂資料與這個類別執行個體。</xref:System.Collections.IDictionary>"
  remarks: "這個屬性是`metaproperty`，這表示它是在執行階段不變。 `Metaproperties`請勿變更的屬性執行個體建立在執行階段，因此該屬性必須設定為常值，在設計階段之後。       這個屬性不使用預設<xref:System.Workflow.ComponentModel.Activity>Windows Workflow Foundation 所提供的宣告實作。</xref:System.Workflow.ComponentModel.Activity> 此集合未序列化。集合包含的資料不會從執行階段的設計階段保存。"
  syntax:
    content: public System.Collections.IDictionary UserData { get; }
    return:
      type: System.Collections.IDictionary
      description: "字典，做為操作的開發人員的擴充攔截<xref href=&quot;System.Workflow.ComponentModel.DependencyObject&quot;></xref>宣告設計工具，並將自訂資料與個別活動宣告產生關聯。"
  overload: System.Workflow.ComponentModel.DependencyObject.UserData*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Data.ReadOnlyException
  parent: System.Data
  isExternal: false
  name: ReadOnlyException
  nameWithType: ReadOnlyException
  fullName: System.Data.ReadOnlyException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Workflow.ComponentModel.DependencyObject.#ctor
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: DependencyObject()
  nameWithType: DependencyObject.DependencyObject()
  fullName: System.Workflow.ComponentModel.DependencyObject.DependencyObject()
- uid: System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: AddHandler(DependencyProperty,Object)
  nameWithType: DependencyObject.AddHandler(DependencyProperty,Object)
  fullName: System.Workflow.ComponentModel.DependencyObject.AddHandler(DependencyProperty,Object)
- uid: System.Workflow.ComponentModel.DependencyProperty
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Workflow.ComponentModel.DependencyProperty
- uid: System.Workflow.ComponentModel.DependencyObject.DesignMode
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: DesignMode
  nameWithType: DependencyObject.DesignMode
  fullName: System.Workflow.ComponentModel.DependencyObject.DesignMode
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Workflow.ComponentModel.DependencyObject.Dispose
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: Dispose()
  nameWithType: DependencyObject.Dispose()
  fullName: System.Workflow.ComponentModel.DependencyObject.Dispose()
- uid: System.Workflow.ComponentModel.DependencyObject.Dispose(System.Boolean)
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: DependencyObject.Dispose(Boolean)
  fullName: System.Workflow.ComponentModel.DependencyObject.Dispose(Boolean)
- uid: System.Workflow.ComponentModel.DependencyObject.Finalize
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: Finalize()
  nameWithType: DependencyObject.Finalize()
  fullName: System.Workflow.ComponentModel.DependencyObject.Finalize()
- uid: System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: GetBinding(DependencyProperty)
  nameWithType: DependencyObject.GetBinding(DependencyProperty)
  fullName: System.Workflow.ComponentModel.DependencyObject.GetBinding(DependencyProperty)
- uid: System.Workflow.ComponentModel.ActivityBind
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: ActivityBind
  nameWithType: ActivityBind
  fullName: System.Workflow.ComponentModel.ActivityBind
- uid: System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: GetBoundValue(ActivityBind,Type)
  nameWithType: DependencyObject.GetBoundValue(ActivityBind,Type)
  fullName: System.Workflow.ComponentModel.DependencyObject.GetBoundValue(ActivityBind,Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: GetInvocationList(DependencyProperty)
  nameWithType: DependencyObject.GetInvocationList(DependencyProperty)
  fullName: System.Workflow.ComponentModel.DependencyObject.GetInvocationList(DependencyProperty)
- uid: T[]
  isExternal: true
  name: T
  nameWithType: T
  fullName: T[]
  spec.csharp:
  - uid: T
    name: T
    nameWithType: T
    fullName: T[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: GetValue(DependencyProperty)
  nameWithType: DependencyObject.GetValue(DependencyProperty)
  fullName: System.Workflow.ComponentModel.DependencyObject.GetValue(DependencyProperty)
- uid: System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: GetValueBase(DependencyProperty)
  nameWithType: DependencyObject.GetValueBase(DependencyProperty)
  fullName: System.Workflow.ComponentModel.DependencyObject.GetValueBase(DependencyProperty)
- uid: System.Workflow.ComponentModel.DependencyObject.InitializeProperties
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: InitializeProperties()
  nameWithType: DependencyObject.InitializeProperties()
  fullName: System.Workflow.ComponentModel.DependencyObject.InitializeProperties()
- uid: System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: IsBindingSet(DependencyProperty)
  nameWithType: DependencyObject.IsBindingSet(DependencyProperty)
  fullName: System.Workflow.ComponentModel.DependencyObject.IsBindingSet(DependencyProperty)
- uid: System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: MetaEquals(DependencyObject)
  nameWithType: DependencyObject.MetaEquals(DependencyObject)
  fullName: System.Workflow.ComponentModel.DependencyObject.MetaEquals(DependencyObject)
- uid: System.Workflow.ComponentModel.DependencyObject
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: DependencyObject
  nameWithType: DependencyObject
  fullName: System.Workflow.ComponentModel.DependencyObject
- uid: System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: ParentDependencyObject
  nameWithType: DependencyObject.ParentDependencyObject
  fullName: System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject
- uid: System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: RemoveHandler(DependencyProperty,Object)
  nameWithType: DependencyObject.RemoveHandler(DependencyProperty,Object)
  fullName: System.Workflow.ComponentModel.DependencyObject.RemoveHandler(DependencyProperty,Object)
- uid: System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: RemoveProperty(DependencyProperty)
  nameWithType: DependencyObject.RemoveProperty(DependencyProperty)
  fullName: System.Workflow.ComponentModel.DependencyObject.RemoveProperty(DependencyProperty)
- uid: System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: SetBinding(DependencyProperty,ActivityBind)
  nameWithType: DependencyObject.SetBinding(DependencyProperty,ActivityBind)
  fullName: System.Workflow.ComponentModel.DependencyObject.SetBinding(DependencyProperty,ActivityBind)
- uid: System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: SetBoundValue(ActivityBind,Object)
  nameWithType: DependencyObject.SetBoundValue(ActivityBind,Object)
  fullName: System.Workflow.ComponentModel.DependencyObject.SetBoundValue(ActivityBind,Object)
- uid: System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: SetReadOnlyPropertyValue(DependencyProperty,Object)
  nameWithType: DependencyObject.SetReadOnlyPropertyValue(DependencyProperty,Object)
  fullName: System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(DependencyProperty,Object)
- uid: System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: SetValue(DependencyProperty,Object)
  nameWithType: DependencyObject.SetValue(DependencyProperty,Object)
  fullName: System.Workflow.ComponentModel.DependencyObject.SetValue(DependencyProperty,Object)
- uid: System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: SetValueBase(DependencyProperty,Object)
  nameWithType: DependencyObject.SetValueBase(DependencyProperty,Object)
  fullName: System.Workflow.ComponentModel.DependencyObject.SetValueBase(DependencyProperty,Object)
- uid: System.Workflow.ComponentModel.DependencyObject.Site
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: Site
  nameWithType: DependencyObject.Site
  fullName: System.Workflow.ComponentModel.DependencyObject.Site
- uid: System.ComponentModel.ISite
  parent: System.ComponentModel
  isExternal: false
  name: ISite
  nameWithType: ISite
  fullName: System.ComponentModel.ISite
- uid: System.Workflow.ComponentModel.DependencyObject.UserData
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: UserData
  nameWithType: DependencyObject.UserData
  fullName: System.Workflow.ComponentModel.DependencyObject.UserData
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Workflow.ComponentModel.DependencyObject.#ctor*
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: DependencyObject
  nameWithType: DependencyObject.DependencyObject
- uid: System.Workflow.ComponentModel.DependencyObject.AddHandler*
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: AddHandler
  nameWithType: DependencyObject.AddHandler
- uid: System.Workflow.ComponentModel.DependencyObject.DesignMode*
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: DesignMode
  nameWithType: DependencyObject.DesignMode
- uid: System.Workflow.ComponentModel.DependencyObject.Dispose*
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: Dispose
  nameWithType: DependencyObject.Dispose
- uid: System.Workflow.ComponentModel.DependencyObject.Finalize*
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: Finalize
  nameWithType: DependencyObject.Finalize
- uid: System.Workflow.ComponentModel.DependencyObject.GetBinding*
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: GetBinding
  nameWithType: DependencyObject.GetBinding
- uid: System.Workflow.ComponentModel.DependencyObject.GetBoundValue*
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: GetBoundValue
  nameWithType: DependencyObject.GetBoundValue
- uid: System.Workflow.ComponentModel.DependencyObject.GetInvocationList<T>*
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: GetInvocationList<T>
  nameWithType: DependencyObject.GetInvocationList<T>
- uid: System.Workflow.ComponentModel.DependencyObject.GetValue*
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: GetValue
  nameWithType: DependencyObject.GetValue
- uid: System.Workflow.ComponentModel.DependencyObject.GetValueBase*
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: GetValueBase
  nameWithType: DependencyObject.GetValueBase
- uid: System.Workflow.ComponentModel.DependencyObject.InitializeProperties*
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: InitializeProperties
  nameWithType: DependencyObject.InitializeProperties
- uid: System.Workflow.ComponentModel.DependencyObject.IsBindingSet*
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: IsBindingSet
  nameWithType: DependencyObject.IsBindingSet
- uid: System.Workflow.ComponentModel.DependencyObject.MetaEquals*
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: MetaEquals
  nameWithType: DependencyObject.MetaEquals
- uid: System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject*
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: ParentDependencyObject
  nameWithType: DependencyObject.ParentDependencyObject
- uid: System.Workflow.ComponentModel.DependencyObject.RemoveHandler*
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: RemoveHandler
  nameWithType: DependencyObject.RemoveHandler
- uid: System.Workflow.ComponentModel.DependencyObject.RemoveProperty*
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: RemoveProperty
  nameWithType: DependencyObject.RemoveProperty
- uid: System.Workflow.ComponentModel.DependencyObject.SetBinding*
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: SetBinding
  nameWithType: DependencyObject.SetBinding
- uid: System.Workflow.ComponentModel.DependencyObject.SetBoundValue*
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: SetBoundValue
  nameWithType: DependencyObject.SetBoundValue
- uid: System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue*
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: SetReadOnlyPropertyValue
  nameWithType: DependencyObject.SetReadOnlyPropertyValue
- uid: System.Workflow.ComponentModel.DependencyObject.SetValue*
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: SetValue
  nameWithType: DependencyObject.SetValue
- uid: System.Workflow.ComponentModel.DependencyObject.SetValueBase*
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: SetValueBase
  nameWithType: DependencyObject.SetValueBase
- uid: System.Workflow.ComponentModel.DependencyObject.Site*
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: Site
  nameWithType: DependencyObject.Site
- uid: System.Workflow.ComponentModel.DependencyObject.UserData*
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: UserData
  nameWithType: DependencyObject.UserData
