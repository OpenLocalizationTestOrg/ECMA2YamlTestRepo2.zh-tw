### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.MaskedTextProvider
  id: MaskedTextProvider
  children:
  - System.ComponentModel.MaskedTextProvider.#ctor(System.String)
  - System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Boolean)
  - System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo)
  - System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Char,System.Boolean)
  - System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo,System.Boolean)
  - System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo,System.Char,System.Boolean)
  - System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo,System.Boolean,System.Char,System.Char,System.Boolean)
  - System.ComponentModel.MaskedTextProvider.Add(System.Char)
  - System.ComponentModel.MaskedTextProvider.Add(System.String)
  - System.ComponentModel.MaskedTextProvider.Add(System.Char,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  - System.ComponentModel.MaskedTextProvider.Add(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  - System.ComponentModel.MaskedTextProvider.AllowPromptAsInput
  - System.ComponentModel.MaskedTextProvider.AsciiOnly
  - System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount
  - System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount
  - System.ComponentModel.MaskedTextProvider.Clear
  - System.ComponentModel.MaskedTextProvider.Clear(System.ComponentModel.MaskedTextResultHint@)
  - System.ComponentModel.MaskedTextProvider.Clone
  - System.ComponentModel.MaskedTextProvider.Culture
  - System.ComponentModel.MaskedTextProvider.DefaultPasswordChar
  - System.ComponentModel.MaskedTextProvider.EditPositionCount
  - System.ComponentModel.MaskedTextProvider.EditPositions
  - System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom(System.Int32,System.Boolean)
  - System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)
  - System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(System.Int32,System.Boolean)
  - System.ComponentModel.MaskedTextProvider.FindEditPositionInRange(System.Int32,System.Int32,System.Boolean)
  - System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom(System.Int32,System.Boolean)
  - System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange(System.Int32,System.Int32,System.Boolean)
  - System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom(System.Int32,System.Boolean)
  - System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)
  - System.ComponentModel.MaskedTextProvider.GetOperationResultFromHint(System.ComponentModel.MaskedTextResultHint)
  - System.ComponentModel.MaskedTextProvider.IncludeLiterals
  - System.ComponentModel.MaskedTextProvider.IncludePrompt
  - System.ComponentModel.MaskedTextProvider.InsertAt(System.Char,System.Int32)
  - System.ComponentModel.MaskedTextProvider.InsertAt(System.String,System.Int32)
  - System.ComponentModel.MaskedTextProvider.InsertAt(System.Char,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  - System.ComponentModel.MaskedTextProvider.InsertAt(System.String,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  - System.ComponentModel.MaskedTextProvider.InvalidIndex
  - System.ComponentModel.MaskedTextProvider.IsAvailablePosition(System.Int32)
  - System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)
  - System.ComponentModel.MaskedTextProvider.IsPassword
  - System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)
  - System.ComponentModel.MaskedTextProvider.IsValidMaskChar(System.Char)
  - System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(System.Char)
  - System.ComponentModel.MaskedTextProvider.Item(System.Int32)
  - System.ComponentModel.MaskedTextProvider.LastAssignedPosition
  - System.ComponentModel.MaskedTextProvider.Length
  - System.ComponentModel.MaskedTextProvider.Mask
  - System.ComponentModel.MaskedTextProvider.MaskCompleted
  - System.ComponentModel.MaskedTextProvider.MaskFull
  - System.ComponentModel.MaskedTextProvider.PasswordChar
  - System.ComponentModel.MaskedTextProvider.PromptChar
  - System.ComponentModel.MaskedTextProvider.Remove
  - System.ComponentModel.MaskedTextProvider.Remove(System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  - System.ComponentModel.MaskedTextProvider.RemoveAt(System.Int32)
  - System.ComponentModel.MaskedTextProvider.RemoveAt(System.Int32,System.Int32)
  - System.ComponentModel.MaskedTextProvider.RemoveAt(System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  - System.ComponentModel.MaskedTextProvider.Replace(System.Char,System.Int32)
  - System.ComponentModel.MaskedTextProvider.Replace(System.String,System.Int32)
  - System.ComponentModel.MaskedTextProvider.Replace(System.Char,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  - System.ComponentModel.MaskedTextProvider.Replace(System.String,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  - System.ComponentModel.MaskedTextProvider.Replace(System.Char,System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  - System.ComponentModel.MaskedTextProvider.Replace(System.String,System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  - System.ComponentModel.MaskedTextProvider.ResetOnPrompt
  - System.ComponentModel.MaskedTextProvider.ResetOnSpace
  - System.ComponentModel.MaskedTextProvider.Set(System.String)
  - System.ComponentModel.MaskedTextProvider.Set(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  - System.ComponentModel.MaskedTextProvider.SkipLiterals
  - System.ComponentModel.MaskedTextProvider.ToDisplayString
  - System.ComponentModel.MaskedTextProvider.ToString
  - System.ComponentModel.MaskedTextProvider.ToString(System.Boolean)
  - System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Boolean)
  - System.ComponentModel.MaskedTextProvider.ToString(System.Int32,System.Int32)
  - System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Int32,System.Int32)
  - System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Boolean,System.Int32,System.Int32)
  - System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32)
  - System.ComponentModel.MaskedTextProvider.VerifyChar(System.Char,System.Int32,System.ComponentModel.MaskedTextResultHint@)
  - System.ComponentModel.MaskedTextProvider.VerifyEscapeChar(System.Char,System.Int32)
  - System.ComponentModel.MaskedTextProvider.VerifyString(System.String)
  - System.ComponentModel.MaskedTextProvider.VerifyString(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  langs:
  - csharp
  name: MaskedTextProvider
  nameWithType: MaskedTextProvider
  fullName: System.ComponentModel.MaskedTextProvider
  type: Class
  summary: "代表可供任意數目的支援遮罩，例如控制項的遮罩剖析服務<xref href=&quot;System.Windows.Forms.MaskedTextBox&quot;></xref>控制項。"
  remarks: "<xref:System.Windows.Forms.MaskedTextBox>控制項包含常值字元所組成，而且格式項目，它會測試對所有使用者輸入的遮罩。</xref:System.Windows.Forms.MaskedTextBox> 而不是永久關聯特定遮罩剖析引擎，使用<xref:System.Windows.Forms.MaskedTextBox>，Windows Form 提供它當做個別的服務，表示為 MaskedTextProvider 類別，定義的文件中所討論的遮罩語言的語法<xref:System.Windows.Forms.MaskedTextBox.Mask%2A>屬性。</xref:System.Windows.Forms.MaskedTextBox.Mask%2A> </xref:System.Windows.Forms.MaskedTextBox>       許多成員的<xref:System.Windows.Forms.MaskedTextBox>類別參考類似的具名成員相關聯的 MaskedTextProvider 其實作。</xref:System.Windows.Forms.MaskedTextBox> 例如，<xref:System.Windows.Forms.MaskedTextBox.PromptChar%2A?displayProperty=fullName>屬性的<xref:System.Windows.Forms.MaskedTextBox>類別會參考的所有存取<xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A>的 MaskedTextProvider 類別。</xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A> </xref:System.Windows.Forms.MaskedTextBox> </xref:System.Windows.Forms.MaskedTextBox.PromptChar%2A?displayProperty=fullName>       遮罩編輯控制項隨附於 Microsoft Visual Basic 版本 6 之後，使用 MaskedTextProvider 遮罩剖析引擎會模型化。 它的遮罩語言所述的文件<xref:System.ComponentModel.MaskedTextProvider.Mask%2A>屬性。</xref:System.ComponentModel.MaskedTextProvider.Mask%2A>       下列三個不同字串所涉及的 MaskedTextProvider 類別。      |字串名稱 |描述 |  |-----------------|-----------------|  |輸入字元或字串 |代表做為輸入遮罩是套用針對所使用的字元。 事實上，輸入的字串可能由多個輸入的作業，包括<xref:System.ComponentModel.MaskedTextProvider.Add%2A>， <xref:System.ComponentModel.MaskedTextProvider.Replace%2A>， <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A>，和<xref:System.ComponentModel.MaskedTextProvider.Remove%2A>。</xref:System.ComponentModel.MaskedTextProvider.Remove%2A> </xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A> </xref:System.ComponentModel.MaskedTextProvider.Replace%2A> </xref:System.ComponentModel.MaskedTextProvider.Add%2A> 因此，無法直接存取的輸入的字串。 不過，輸入的字串處理層面可透過<xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A>和<xref:System.ComponentModel.MaskedTextProvider.AsciiOnly%2A>， <xref:System.ComponentModel.MaskedTextProvider.ResetOnPrompt%2A>，和<xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A>屬性。 |  |遮罩 |代表格式化遮罩，用來將輸入的字串轉換為格式化的字串輸入。</xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A> </xref:System.ComponentModel.MaskedTextProvider.ResetOnPrompt%2A> </xref:System.ComponentModel.MaskedTextProvider.AsciiOnly%2A> </xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A> 這個字串中設定<xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A>，不過主要存取<xref:System.ComponentModel.MaskedTextProvider.Mask%2A>屬性。</xref:System.ComponentModel.MaskedTextProvider.Mask%2A> </xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> 遮罩的特性也會提供其他成員，例如<xref:System.ComponentModel.MaskedTextProvider.Length%2A>，透過<xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>，和<xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A>屬性。 |  |格式化字串 |表示字串完全遮罩套用至輸入字串時，所造成。</xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A> </xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> </xref:System.ComponentModel.MaskedTextProvider.Length%2A> 格式化的字串可以查詢具有許多成員的類別，包括<xref:System.ComponentModel.MaskedTextProvider.Item%2A>， <xref:System.ComponentModel.MaskedTextProvider.Length%2A>， <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A>， <xref:System.ComponentModel.MaskedTextProvider.MaskFull%2A>， <xref:System.ComponentModel.MaskedTextProvider.MaskCompleted%2A>， <xref:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom%2A>，依此類推。</xref:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom%2A> </xref:System.ComponentModel.MaskedTextProvider.MaskCompleted%2A> </xref:System.ComponentModel.MaskedTextProvider.MaskFull%2A> </xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A> </xref:System.ComponentModel.MaskedTextProvider.Length%2A> </xref:System.ComponentModel.MaskedTextProvider.Item%2A> 完整格式化字串的值是可從<xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A>和<xref:System.ComponentModel.MaskedTextProvider.ToString%2A>方法。 |     > [!NOTE] > 輸入的字串可能代表直接使用者輸入，例如狀況<xref:System.Windows.Forms.MaskedTextBox>，或可能不是直接使用者輸入/輸出作業相關聯的其他程序所產生。</xref:System.Windows.Forms.MaskedTextBox> </xref:System.ComponentModel.MaskedTextProvider.ToString%2A> </xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A>"
  syntax:
    content: 'public class MaskedTextProvider : ICloneable'
  inheritance:
  - System.Object
  implements:
  - System.ICloneable
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: MaskedTextProvider(String)
  nameWithType: MaskedTextProvider.MaskedTextProvider(String)
  fullName: System.ComponentModel.MaskedTextProvider.MaskedTextProvider(String)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "初始化的新執行個體<xref href=&quot;System.ComponentModel.MaskedTextProvider&quot;></xref>類別使用指定的遮罩。"
  remarks: "Use of this constructor is exactly equivalent to the following call to the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=fullName> constructor:  \n  \n `MaskedTextProvider(mask , null, true, '_', '\\0', false)`"
  syntax:
    content: public MaskedTextProvider (string mask);
    parameters:
    - id: mask
      type: System.String
      description: "A<xref:System.String>代表輸入的遮罩。</xref:System.String>"
  overload: System.ComponentModel.MaskedTextProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Boolean)
  id: '#ctor(System.String,System.Boolean)'
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: MaskedTextProvider(String,Boolean)
  nameWithType: MaskedTextProvider.MaskedTextProvider(String,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.MaskedTextProvider(String,Boolean)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "初始化的新執行個體<xref href=&quot;System.ComponentModel.MaskedTextProvider&quot;></xref>類別使用指定的遮罩和 ASCII 限制值。"
  remarks: "Use of this constructor is exactly equivalent to the following call to the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=fullName> constructor:  \n  \n `MaskedTextProvider(mask , null, true, '_', '\\0', restrictToASCII)`"
  syntax:
    content: public MaskedTextProvider (string mask, bool restrictToAscii);
    parameters:
    - id: mask
      type: System.String
      description: "A<xref:System.String>代表輸入的遮罩。</xref:System.String>"
    - id: restrictToAscii
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要限制為相容的 ASCII 字元的輸入否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>允許完整的 Unicode。"
  overload: System.ComponentModel.MaskedTextProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo)
  id: '#ctor(System.String,System.Globalization.CultureInfo)'
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: MaskedTextProvider(String,CultureInfo)
  nameWithType: MaskedTextProvider.MaskedTextProvider(String,CultureInfo)
  fullName: System.ComponentModel.MaskedTextProvider.MaskedTextProvider(String,CultureInfo)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "初始化的新執行個體<xref href=&quot;System.ComponentModel.MaskedTextProvider&quot;></xref>類別使用指定的遮罩和文化特性。"
  remarks: "Use of this constructor is exactly equivalent to the following call to the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=fullName> constructor:  \n  \n `MaskedTextProvider(mask , culture, true, '_', '\\0', false)`"
  syntax:
    content: public MaskedTextProvider (string mask, System.Globalization.CultureInfo culture);
    parameters:
    - id: mask
      type: System.String
      description: "A<xref:System.String>代表輸入的遮罩。</xref:System.String>"
    - id: culture
      type: System.Globalization.CultureInfo
      description: "A <xref:System.Globalization.CultureInfo>，用來設定區域區分分隔符號字元。</xref:System.Globalization.CultureInfo>"
  overload: System.ComponentModel.MaskedTextProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Char,System.Boolean)
  id: '#ctor(System.String,System.Char,System.Boolean)'
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: MaskedTextProvider(String,Char,Boolean)
  nameWithType: MaskedTextProvider.MaskedTextProvider(String,Char,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.MaskedTextProvider(String,Char,Boolean)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "初始化的新執行個體<xref href=&quot;System.ComponentModel.MaskedTextProvider&quot;></xref>類別使用指定的遮罩，密碼字元和提示使用量值。"
  remarks: "使用這個建構函式相當於下列呼叫<xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=fullName>建構函式︰ `MaskedTextProvider(mask , null, allowPromptAsInput, &quot;_&quot;, passwordChar, false)` </xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=fullName>"
  syntax:
    content: public MaskedTextProvider (string mask, char passwordChar, bool allowPromptAsInput);
    parameters:
    - id: mask
      type: System.String
      description: "A<xref:System.String>代表輸入的遮罩。</xref:System.String>"
    - id: passwordChar
      type: System.Char
      description: "A <xref:System.Char>，就會顯示輸入的密碼字串的字元。</xref:System.Char>"
    - id: allowPromptAsInput
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要允許提示字元做為輸入;否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.MaskedTextProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo,System.Boolean)
  id: '#ctor(System.String,System.Globalization.CultureInfo,System.Boolean)'
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: MaskedTextProvider(String,CultureInfo,Boolean)
  nameWithType: MaskedTextProvider.MaskedTextProvider(String,CultureInfo,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.MaskedTextProvider(String,CultureInfo,Boolean)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "初始化的新執行個體<xref href=&quot;System.ComponentModel.MaskedTextProvider&quot;></xref>類別使用指定的遮罩、 culture 和 ASCII 限制值。"
  remarks: "Use of this constructor is exactly equivalent to the following call to the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=fullName> constructor:  \n  \n `MaskedTextProvider(mask , culture, true, '_', '\\0', restrictToAscii)`"
  syntax:
    content: public MaskedTextProvider (string mask, System.Globalization.CultureInfo culture, bool restrictToAscii);
    parameters:
    - id: mask
      type: System.String
      description: "A<xref:System.String>代表輸入的遮罩。</xref:System.String>"
    - id: culture
      type: System.Globalization.CultureInfo
      description: "A <xref:System.Globalization.CultureInfo>，用來設定區域區分分隔符號字元。</xref:System.Globalization.CultureInfo>"
    - id: restrictToAscii
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要限制為相容的 ASCII 字元的輸入否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>允許完整的 Unicode。"
  overload: System.ComponentModel.MaskedTextProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo,System.Char,System.Boolean)
  id: '#ctor(System.String,System.Globalization.CultureInfo,System.Char,System.Boolean)'
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: MaskedTextProvider(String,CultureInfo,Char,Boolean)
  nameWithType: MaskedTextProvider.MaskedTextProvider(String,CultureInfo,Char,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.MaskedTextProvider(String,CultureInfo,Char,Boolean)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "初始化的新執行個體<xref href=&quot;System.ComponentModel.MaskedTextProvider&quot;></xref>類別使用指定的遮罩、 文化特性，密碼字元和提示的使用方式值。"
  remarks: "使用這個建構函式相當於下列呼叫<xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=fullName>建構函式︰ `MaskedTextProvider(mask , culture, allowPromptAsInput, &quot;_&quot;, passwordChar, false)` </xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=fullName>"
  syntax:
    content: public MaskedTextProvider (string mask, System.Globalization.CultureInfo culture, char passwordChar, bool allowPromptAsInput);
    parameters:
    - id: mask
      type: System.String
      description: "A<xref:System.String>代表輸入的遮罩。</xref:System.String>"
    - id: culture
      type: System.Globalization.CultureInfo
      description: "A <xref:System.Globalization.CultureInfo>，用來設定區域區分分隔符號字元。</xref:System.Globalization.CultureInfo>"
    - id: passwordChar
      type: System.Char
      description: "A <xref:System.Char>，就會顯示輸入的密碼字串的字元。</xref:System.Char>"
    - id: allowPromptAsInput
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要允許提示字元做為輸入;否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.MaskedTextProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo,System.Boolean,System.Char,System.Char,System.Boolean)
  id: '#ctor(System.String,System.Globalization.CultureInfo,System.Boolean,System.Char,System.Char,System.Boolean)'
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: MaskedTextProvider(String,CultureInfo,Boolean,Char,Char,Boolean)
  nameWithType: MaskedTextProvider.MaskedTextProvider(String,CultureInfo,Boolean,Char,Char,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.MaskedTextProvider(String,CultureInfo,Boolean,Char,Char,Boolean)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "初始化的新執行個體<xref href=&quot;System.ComponentModel.MaskedTextProvider&quot;></xref>類別使用指定的遮罩、 文化特性、 提示使用量值、 提示字元中，密碼字元和 ASCII 限制值。"
  remarks: "這個建構函式表示的最常見的多載的形式。 `mask`參數必須符合<xref:System.ComponentModel.MaskedTextProvider>類別，其中有詳細說明<xref:System.Windows.Forms.MaskedTextBox.Mask%2A?displayProperty=fullName><xref:System.Windows.Forms.MaskedTextBox>類別</xref:System.Windows.Forms.MaskedTextBox>屬性</xref:System.Windows.Forms.MaskedTextBox.Mask%2A?displayProperty=fullName>中</xref:System.ComponentModel.MaskedTextProvider>所定義的遮罩語言       因為無法查詢特定文化特性資訊的中性文化特性<xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A>建構函式會使用<xref:System.Globalization.CultureInfo.GetCultures%2A>方法來搜尋第一個非中性文化特性，可用來判斷適當的分隔符號字元。</xref:System.Globalization.CultureInfo.GetCultures%2A> </xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A>"
  syntax:
    content: public MaskedTextProvider (string mask, System.Globalization.CultureInfo culture, bool allowPromptAsInput, char promptChar, char passwordChar, bool restrictToAscii);
    parameters:
    - id: mask
      type: System.String
      description: "A<xref:System.String>代表輸入的遮罩。</xref:System.String>"
    - id: culture
      type: System.Globalization.CultureInfo
      description: "A <xref:System.Globalization.CultureInfo>，用來設定區域區分分隔符號字元。</xref:System.Globalization.CultureInfo>"
    - id: allowPromptAsInput
      type: System.Boolean
      description: "A<xref:System.Boolean>值，指定是否應為有效的輸入字元允許提示字元。</xref:System.Boolean>"
    - id: promptChar
      type: System.Char
      description: "A <xref:System.Char>，將會顯示為預留位置，代表使用者輸入。</xref:System.Char>"
    - id: passwordChar
      type: System.Char
      description: "A <xref:System.Char>，就會顯示輸入的密碼字串的字元。</xref:System.Char>"
    - id: restrictToAscii
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要限制為相容的 ASCII 字元的輸入否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>允許完整的 Unicode。"
  overload: System.ComponentModel.MaskedTextProvider.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "遮罩參數是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>或<xref:System.String.Empty>.</xref:System.String.Empty>       -或者-遮罩包含一或多個非列印字元。"
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.Add(System.Char)
  id: Add(System.Char)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: Add(Char)
  nameWithType: MaskedTextProvider.Add(Char)
  fullName: System.ComponentModel.MaskedTextProvider.Add(Char)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "將格式化字串的結尾指定的輸入的字元。"
  remarks: "Add 方法將`input`位置之後，最後指派表示的字元格式化字串中的第一個可用位置的值<xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A>屬性。</xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A> 這個方法會基於下列原因失敗:-輸入的值， `input`，列印出來，或不符合對應的遮罩項目。      -那里格式化字串中的零可用編輯位置或之後在上一個指定的位置有無可用編輯位置。"
  syntax:
    content: public bool Add (char input);
    parameters:
    - id: input
      type: System.Char
      description: "A<xref:System.Char>要附加至格式化的字串值。</xref:System.Char>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果成功; 加入輸入的字元否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.MaskedTextProvider.Add*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.Add(System.String)
  id: Add(System.String)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: Add(String)
  nameWithType: MaskedTextProvider.Add(String)
  fullName: System.ComponentModel.MaskedTextProvider.Add(String)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "將指定的輸入字串的字元加入至格式化字串的結尾。"
  remarks: "Add 方法將從字元`input`字串來格式化字串， <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A>.</xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A>之後開始的第一個可用的位置 這個方法會基於下列原因失敗:-任一字元中輸入的值， `input`，無法列印或輸入的值不符合對應的遮罩項目。      -沒有足夠的可用編輯位置格式字串中最後一個指定的位置之後。       如果此方法失敗，不會加入任何而且方法會傳回`false`。"
  syntax:
    content: public bool Add (string input);
    parameters:
    - id: input
      type: System.String
      description: "A<xref:System.String>含有所要附加至格式化字串的字元值。</xref:System.String>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果已成功; 加入從輸入字串的所有字元否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>表示已加入任何字元。"
  overload: System.ComponentModel.MaskedTextProvider.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The<code> input</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.Add(System.Char,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  id: Add(System.Char,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: Add(Char,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.Add(Char,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.Add(Char,Int32,MaskedTextResultHint)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "將指定的輸入的字元加入至格式化的字串結尾，然後輸出位置和描述性資訊。"
  remarks: "Add 方法所要加入`input`位置之後，最後指派表示的字元格式化字串中的第一個可用位置的值<xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A>屬性。</xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A> 如果是最後一個指派的位置之前的所有可用的位置，則這個方法會失敗。 這個方法會基於下列原因失敗:-輸入的值， `input`，列印出來，或不符合對應的遮罩項目。      -那里格式化字串中的零可用編輯位置或之後在上一個指定的位置有無可用編輯位置。       這個方法接受單一的覆寫版本相同的函數<xref:System.Char>參數， <xref:System.ComponentModel.MaskedTextProvider.Add%28System.Char%29>，只不過它會輸出的其他資訊。</xref:System.ComponentModel.MaskedTextProvider.Add%28System.Char%29> </xref:System.Char>"
  syntax:
    content: public bool Add (char input, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);
    parameters:
    - id: input
      type: System.Char
      description: "A<xref:System.Char>要附加至格式化的字串值。</xref:System.Char>"
    - id: testPosition
      type: System.Int32
      description: "格式化字串中要在嘗試加入字元的以零為起始的位置。 輸出參數。"
    - id: resultHint
      type: System.ComponentModel.MaskedTextResultHint
      description: "A <xref href=&quot;System.ComponentModel.MaskedTextResultHint&quot;> </xref>簡潔描述作業的結果。 輸出參數。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果成功; 加入輸入的字元否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.MaskedTextProvider.Add*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.Add(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  id: Add(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: Add(String,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.Add(String,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.Add(String,Int32,MaskedTextResultHint)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "將指定的輸入字串的字元加入至格式化的字串結尾，然後輸出位置和描述性資訊。"
  remarks: "Add 方法將從字元`input`字串來格式化字串， <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A>.</xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A>之後開始的第一個可用的位置 這個方法會基於下列原因失敗:-任一字元中輸入的值， `input`，無法列印或輸入的值不符合對應的遮罩項目。      -沒有足夠的可用編輯位置格式字串中最後一個指定的位置之後。       如果此方法失敗，不會加入任何而且方法會傳回`false`。       這個方法接受單一的覆寫版本相同的函數<xref:System.String>參數， <xref:System.ComponentModel.MaskedTextProvider.Add%28System.String%29>，只不過它會輸出的其他資訊。</xref:System.ComponentModel.MaskedTextProvider.Add%28System.String%29> </xref:System.String>"
  syntax:
    content: public bool Add (string input, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);
    parameters:
    - id: input
      type: System.String
      description: "A<xref:System.String>含有所要附加至格式化字串的字元值。</xref:System.String>"
    - id: testPosition
      type: System.Int32
      description: "格式化字串中要在嘗試加入字元的以零為起始的位置。 輸出參數。"
    - id: resultHint
      type: System.ComponentModel.MaskedTextResultHint
      description: "A <xref href=&quot;System.ComponentModel.MaskedTextResultHint&quot;> </xref>簡潔描述作業的結果。 輸出參數。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果已成功; 加入從輸入字串的所有字元否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>表示已加入任何字元。"
  overload: System.ComponentModel.MaskedTextProvider.Add*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.AllowPromptAsInput
  id: AllowPromptAsInput
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: AllowPromptAsInput
  nameWithType: MaskedTextProvider.AllowPromptAsInput
  fullName: System.ComponentModel.MaskedTextProvider.AllowPromptAsInput
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "取得值，指出是否提示字元應視為有效的輸入字元與否。"
  remarks: "AllowPromptAsInput 屬性的值會設定<xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A>建構函式。</xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A>       即使 AllowPromptAsInput 是`true`，才能被接受，提示字元必須是有效的遮罩中的目前位置。"
  syntax:
    content: public bool AllowPromptAsInput { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果使用者可以輸入<xref:System.ComponentModel.MaskedTextProvider.PromptChar*>至控制項，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.ComponentModel.MaskedTextProvider.PromptChar*> 預設值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.MaskedTextProvider.AllowPromptAsInput*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.AsciiOnly
  id: AsciiOnly
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: AsciiOnly
  nameWithType: MaskedTextProvider.AsciiOnly
  fullName: System.ComponentModel.MaskedTextProvider.AsciiOnly
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "取得值，指出遮罩是否接受外部 ASCII 字元集的字元。"
  remarks: "AsciiOnly 屬性的值會設定<xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A>建構函式。</xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A>       如果`true`，AsciiOnly 會限制為 ASCII 字元集的使用者輸入。"
  syntax:
    content: public bool AsciiOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果只接受 ASCII;<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>如果<xref href=&quot;System.ComponentModel.MaskedTextProvider&quot;></xref>可以接受任意的任何 Unicode 字元。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.MaskedTextProvider.AsciiOnly*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount
  id: AssignedEditPositionCount
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: AssignedEditPositionCount
  nameWithType: MaskedTextProvider.AssignedEditPositionCount
  fullName: System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "取得已成功地指定輸入的值的可編輯的字元位置數目。"
  remarks: "可編輯的字元位置，由總數<xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A>屬性應該會等於 AssignedEditPositionCount 總和和<xref:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount%2A>屬性。</xref:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount%2A> </xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A>"
  syntax:
    content: public int AssignedEditPositionCount { get; }
    return:
      type: System.Int32
      description: "<xref:System.Int32>包含的輸入遮罩中已經指定格式化字串中的字元值的可編輯的字元位置數目。</xref:System.Int32>"
  overload: System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount
  id: AvailableEditPositionCount
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: AvailableEditPositionCount
  nameWithType: MaskedTextProvider.AvailableEditPositionCount
  fullName: System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "取得輸入遮罩中尚未指派的輸入的值的可編輯的字元位置數目。"
  remarks: "可編輯的字元位置，由總數<xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A>屬性應該會等於總和<xref:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount%2A>和 AvailableEditPositionCount 屬性。</xref:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount%2A> </xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A>"
  syntax:
    content: public int AvailableEditPositionCount { get; }
    return:
      type: System.Int32
      description: "<xref:System.Int32>包含可編輯的字元數，將尚未指派的字元值。</xref:System.Int32>"
  overload: System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.Clear
  id: Clear
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: Clear()
  nameWithType: MaskedTextProvider.Clear()
  fullName: System.ComponentModel.MaskedTextProvider.Clear()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "清除所有可編輯的輸入的字元從格式化的字串，取代提示字元。"
  remarks: "Clear 方法重新初始化格式化的字串，並提示字元插入所有可編輯的位置。"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.ComponentModel.MaskedTextProvider.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.Clear(System.ComponentModel.MaskedTextResultHint@)
  id: Clear(System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: Clear(MaskedTextResultHint)
  nameWithType: MaskedTextProvider.Clear(MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.Clear(MaskedTextResultHint)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "清除從格式化的字串，取代提示字元中，所有可編輯輸入的字元，然後輸出的描述性資訊。"
  remarks: "Clear 方法重新初始化格式化的字串，並提示字元插入所有可編輯的位置。 它的函式對等程式碼不採用任何參數的覆寫版本<xref:System.ComponentModel.MaskedTextProvider.Clear>，只不過它會輸出的其他資訊。</xref:System.ComponentModel.MaskedTextProvider.Clear>"
  syntax:
    content: public void Clear (out System.ComponentModel.MaskedTextResultHint resultHint);
    parameters:
    - id: resultHint
      type: System.ComponentModel.MaskedTextResultHint
      description: "A <xref href=&quot;System.ComponentModel.MaskedTextResultHint&quot;> </xref>簡潔描述作業的結果。 輸出參數。"
  overload: System.ComponentModel.MaskedTextProvider.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.Clone
  id: Clone
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: Clone()
  nameWithType: MaskedTextProvider.Clone()
  fullName: System.ComponentModel.MaskedTextProvider.Clone()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "建立一份目前<xref href=&quot;System.ComponentModel.MaskedTextProvider&quot;> </xref>。"
  remarks: "Clone 方法會傳回目前<xref:System.ComponentModel.MaskedTextProvider>.</xref:System.ComponentModel.MaskedTextProvider>的新複本"
  syntax:
    content: public object Clone ();
    parameters: []
    return:
      type: System.Object
      description: "<xref href=&quot;System.ComponentModel.MaskedTextProvider&quot;> </xref>這個方法所建立的物件轉換為物件。"
  overload: System.ComponentModel.MaskedTextProvider.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.Culture
  id: Culture
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: Culture
  nameWithType: MaskedTextProvider.Culture
  fullName: System.ComponentModel.MaskedTextProvider.Culture
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "取得文化特性會決定可當地語系化的分隔符號和輸入遮罩中的預留位置的值。"
  remarks: "文化特性屬性設定<xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A>建構函式。</xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A>"
  syntax:
    content: public System.Globalization.CultureInfo Culture { get; }
    return:
      type: System.Globalization.CultureInfo
      description: "A<xref:System.Globalization.CultureInfo>包含輸入遮罩相關聯的文化特性資訊。</xref:System.Globalization.CultureInfo>"
  overload: System.ComponentModel.MaskedTextProvider.Culture*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.DefaultPasswordChar
  id: DefaultPasswordChar
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: DefaultPasswordChar
  nameWithType: MaskedTextProvider.DefaultPasswordChar
  fullName: System.ComponentModel.MaskedTextProvider.DefaultPasswordChar
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "取得預設密碼字元使用遮蔽使用者輸入。"
  remarks: "DefaultPasswordChar 屬性已定義於<xref:System.ComponentModel.MaskedTextProvider>類別需要星號字元 （*）。</xref:System.ComponentModel.MaskedTextProvider>"
  syntax:
    content: public static char DefaultPasswordChar { get; }
    return:
      type: System.Char
      description: "A<xref:System.Char>表示預設密碼字元。</xref:System.Char>"
  overload: System.ComponentModel.MaskedTextProvider.DefaultPasswordChar*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.EditPositionCount
  id: EditPositionCount
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: EditPositionCount
  nameWithType: MaskedTextProvider.EditPositionCount
  fullName: System.ComponentModel.MaskedTextProvider.EditPositionCount
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "取得格式化的字串中可編輯的位置數目。"
  remarks: "可編輯的字元位置，由 EditPositionCount 屬性，總數必須等於總和<xref:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount%2A>和<xref:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount%2A>屬性。</xref:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount%2A> </xref:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount%2A> 這個值會包含必要與選擇性可編輯的字元。"
  syntax:
    content: public int EditPositionCount { get; }
    return:
      type: System.Int32
      description: "<xref:System.Int32>包含的格式化字串中可編輯的位置數目。</xref:System.Int32>"
  overload: System.ComponentModel.MaskedTextProvider.EditPositionCount*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.EditPositions
  id: EditPositions
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: EditPositions
  nameWithType: MaskedTextProvider.EditPositions
  fullName: System.ComponentModel.MaskedTextProvider.EditPositions
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "取得新建立的列舉值的格式化字串中可編輯的位置。"
  remarks: "在 EditPositions 屬性的每個存取，可以讓您編輯位置的暫存集合會建立擷取<xref:System.Collections.IEnumerator>上運作。</xref:System.Collections.IEnumerator>       這個集合是唯讀的。"
  syntax:
    content: public System.Collections.IEnumerator EditPositions { get; }
    return:
      type: System.Collections.IEnumerator
      description: "<xref:System.Collections.IEnumerator>格式化字串中可編輯的位置上支援的列舉。</xref:System.Collections.IEnumerator>"
  overload: System.ComponentModel.MaskedTextProvider.EditPositions*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom(System.Int32,System.Boolean)
  id: FindAssignedEditPositionFrom(System.Int32,System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: FindAssignedEditPositionFrom(Int32,Boolean)
  nameWithType: MaskedTextProvider.FindAssignedEditPositionFrom(Int32,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom(Int32,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "傳回指定可編輯的位置，使用指定的搜尋方向的指定位置之後的第一個位置。"
  remarks: "格式化的字串由可編輯的字元所組成，並從複製的常值的遮罩。 可編輯的字元位置可能會佔用複製從遮罩，如果未指定，或有效的輸入字元，如果已指定輸入提示字元。       FindAssignedEditPositionFrom 方法用來搜尋指定的位置和搜尋方向之後第一個指定的字元。 結果可以接著傳遞為參數，以<xref:System.ComponentModel.MaskedTextProvider.Item%2A>索引子以取得指派的值，此位置。</xref:System.ComponentModel.MaskedTextProvider.Item%2A>       <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A>和<xref:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom%2A>方法都是這個方法的補充。</xref:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom%2A> </xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A>"
  syntax:
    content: public int FindAssignedEditPositionFrom (int position, bool direction);
    parameters:
    - id: position
      type: System.Int32
      description: "若要開始搜尋的格式化字串中以零為起始的位置。"
    - id: direction
      type: System.Boolean
      description: "A<xref:System.Boolean>表示搜尋方向; 可能是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>向前搜尋或<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>表示向後搜尋。</xref:System.Boolean>"
    return:
      type: System.Int32
      description: "如果成功，<xref:System.Int32>表示以零為起始位置的第一個指派的可編輯的位置發生; 否則為<xref:System.ComponentModel.MaskedTextProvider.InvalidIndex*>.</xref:System.ComponentModel.MaskedTextProvider.InvalidIndex*> </xref:System.Int32>"
  overload: System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)
  id: FindAssignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: FindAssignedEditPositionInRange(Int32,Int32,Boolean)
  nameWithType: MaskedTextProvider.FindAssignedEditPositionInRange(Int32,Int32,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange(Int32,Int32,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "傳回指定可編輯的位置之間使用指定的搜尋方向的指定位置的第一個位置。"
  remarks: "格式化的字串由可編輯的字元所組成，並從複製的常值的遮罩。 可編輯的字元位置可能會佔用複製從遮罩，如果未指定，或有效的輸入字元，如果已指定輸入提示字元。       FindAssignedEditPositionInRange 方法用來搜尋指定的第一個字元，之間兩個指定的位置，內含使用指定的搜尋方向。 結果可以接著傳遞為參數，以<xref:System.ComponentModel.MaskedTextProvider.Item%2A>索引子以取得指派的值，此位置。</xref:System.ComponentModel.MaskedTextProvider.Item%2A>       <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A>和<xref:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange%2A>方法都是這個方法的補充。</xref:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange%2A> </xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A>"
  syntax:
    content: public int FindAssignedEditPositionInRange (int startPosition, int endPosition, bool direction);
    parameters:
    - id: startPosition
      type: System.Int32
      description: "格式化字串中要開始搜尋的以零為起始的位置。"
    - id: endPosition
      type: System.Int32
      description: "格式化字串中要搜尋的結束位置的以零為起始的位置。"
    - id: direction
      type: System.Boolean
      description: "A<xref:System.Boolean>表示搜尋方向; 可能是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>向前搜尋或<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>表示向後搜尋。</xref:System.Boolean>"
    return:
      type: System.Int32
      description: "如果成功，<xref:System.Int32>表示以零為起始位置的第一個指派的可編輯的位置發生; 否則為<xref:System.ComponentModel.MaskedTextProvider.InvalidIndex*>.</xref:System.ComponentModel.MaskedTextProvider.InvalidIndex*> </xref:System.Int32>"
  overload: System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(System.Int32,System.Boolean)
  id: FindEditPositionFrom(System.Int32,System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: FindEditPositionFrom(Int32,Boolean)
  nameWithType: MaskedTextProvider.FindEditPositionFrom(Int32,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(Int32,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "使用指定的搜尋方向的指定位置之後傳回的第一個可編輯的位置。"
  remarks: "FindEditPositionFrom 方法用來指定位置之後搜尋格式化字串中的下一個指派或未指定可編輯位置。       <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A>方法是這個方法的補數。</xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A>"
  syntax:
    content: public int FindEditPositionFrom (int position, bool direction);
    parameters:
    - id: position
      type: System.Int32
      description: "若要開始搜尋的格式化字串中以零為起始的位置。"
    - id: direction
      type: System.Boolean
      description: "A<xref:System.Boolean>表示搜尋方向; 可能是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>向前搜尋或<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>表示向後搜尋。</xref:System.Boolean>"
    return:
      type: System.Int32
      description: "如果成功的話，<xref:System.Int32>表示以零為起始位置的第一個可編輯位置發生; 否則<xref:System.ComponentModel.MaskedTextProvider.InvalidIndex*>.</xref:System.ComponentModel.MaskedTextProvider.InvalidIndex*> </xref:System.Int32>"
  overload: System.ComponentModel.MaskedTextProvider.FindEditPositionFrom*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.FindEditPositionInRange(System.Int32,System.Int32,System.Boolean)
  id: FindEditPositionInRange(System.Int32,System.Int32,System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: FindEditPositionInRange(Int32,Int32,Boolean)
  nameWithType: MaskedTextProvider.FindEditPositionInRange(Int32,Int32,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.FindEditPositionInRange(Int32,Int32,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "傳回的第一個可編輯的位置之間使用指定的搜尋方向的指定位置。"
  remarks: "FindEditPositionInRange 方法用來搜尋可編輯的第一個字元，介於兩個指定的位置，內含使用指定的搜尋方向。 結果可以接著傳遞為參數，以<xref:System.ComponentModel.MaskedTextProvider.Item%2A>索引子以取得指派的值，此位置。</xref:System.ComponentModel.MaskedTextProvider.Item%2A>       <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A>方法是這個方法的補數。</xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A>"
  syntax:
    content: public int FindEditPositionInRange (int startPosition, int endPosition, bool direction);
    parameters:
    - id: startPosition
      type: System.Int32
      description: "格式化字串中要開始搜尋的以零為起始的位置。"
    - id: endPosition
      type: System.Int32
      description: "格式化字串中要搜尋的結束位置的以零為起始的位置。"
    - id: direction
      type: System.Boolean
      description: "A<xref:System.Boolean>表示搜尋方向; 可能是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>向前搜尋或<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>表示向後搜尋。</xref:System.Boolean>"
    return:
      type: System.Int32
      description: "如果成功的話，<xref:System.Int32>表示以零為起始位置的第一個可編輯位置發生; 否則<xref:System.ComponentModel.MaskedTextProvider.InvalidIndex*>.</xref:System.ComponentModel.MaskedTextProvider.InvalidIndex*> </xref:System.Int32>"
  overload: System.ComponentModel.MaskedTextProvider.FindEditPositionInRange*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom(System.Int32,System.Boolean)
  id: FindNonEditPositionFrom(System.Int32,System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: FindNonEditPositionFrom(Int32,Boolean)
  nameWithType: MaskedTextProvider.FindNonEditPositionFrom(Int32,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom(Int32,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "使用指定的搜尋方向的指定位置之後傳回不可編輯的第一個位置的位置。"
  remarks: "FindNonEditPositionFrom 方法用來搜尋下一個常值字元，格式化字串中指定位置之後。 結果可以接著傳遞為參數，以<xref:System.ComponentModel.MaskedTextProvider.Item%2A>索引子以取得在這個位置上的常值。</xref:System.ComponentModel.MaskedTextProvider.Item%2A>       <xref:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom%2A>方法是這個方法的補數。</xref:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom%2A>"
  syntax:
    content: public int FindNonEditPositionFrom (int position, bool direction);
    parameters:
    - id: position
      type: System.Int32
      description: "若要開始搜尋的格式化字串中以零為起始的位置。"
    - id: direction
      type: System.Boolean
      description: "A<xref:System.Boolean>表示搜尋方向; 可能是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>向前搜尋或<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>表示向後搜尋。</xref:System.Boolean>"
    return:
      type: System.Int32
      description: "如果成功的話，<xref:System.Int32>表示發生的第一個常值的位置以零為起始的位置則<xref:System.ComponentModel.MaskedTextProvider.InvalidIndex*>.</xref:System.ComponentModel.MaskedTextProvider.InvalidIndex*> </xref:System.Int32>"
  overload: System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange(System.Int32,System.Int32,System.Boolean)
  id: FindNonEditPositionInRange(System.Int32,System.Int32,System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: FindNonEditPositionInRange(Int32,Int32,Boolean)
  nameWithType: MaskedTextProvider.FindNonEditPositionInRange(Int32,Int32,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange(Int32,Int32,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "傳回不可編輯的第一個位置的位置之間使用指定的搜尋方向的指定位置。"
  remarks: "FindNonEditPositionInRange 方法用來搜尋的常值的第一個字元，介於兩個指定的位置，內含使用指定的搜尋方向。 結果可以接著傳遞為參數，以<xref:System.ComponentModel.MaskedTextProvider.Item%2A>索引子以取得在這個位置上的常值。</xref:System.ComponentModel.MaskedTextProvider.Item%2A>       <xref:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange%2A>方法是這個方法的補數。</xref:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange%2A>"
  syntax:
    content: public int FindNonEditPositionInRange (int startPosition, int endPosition, bool direction);
    parameters:
    - id: startPosition
      type: System.Int32
      description: "格式化字串中要開始搜尋的以零為起始的位置。"
    - id: endPosition
      type: System.Int32
      description: "格式化字串中要搜尋的結束位置的以零為起始的位置。"
    - id: direction
      type: System.Boolean
      description: "A<xref:System.Boolean>表示搜尋方向; 可能是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>向前搜尋或<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>表示向後搜尋。</xref:System.Boolean>"
    return:
      type: System.Int32
      description: "如果成功的話，<xref:System.Int32>表示發生的第一個常值的位置以零為起始的位置則<xref:System.ComponentModel.MaskedTextProvider.InvalidIndex*>.</xref:System.ComponentModel.MaskedTextProvider.InvalidIndex*> </xref:System.Int32>"
  overload: System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom(System.Int32,System.Boolean)
  id: FindUnassignedEditPositionFrom(System.Int32,System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: FindUnassignedEditPositionFrom(Int32,Boolean)
  nameWithType: MaskedTextProvider.FindUnassignedEditPositionFrom(Int32,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom(Int32,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "使用指定的搜尋方向的指定位置之後傳回的第一個未指派的可編輯位置。"
  remarks: "格式化的字串由可編輯的字元所組成，並從複製的常值的遮罩。 可編輯的字元位置可能會佔用複製從遮罩，如果未指定，或有效的輸入字元，如果已指定輸入提示字元。       FindUnassignedEditPositionFrom 方法用來搜尋未指派的第一個字元之後指定的位置和搜尋方向。 提示字元中應佔據的這個位置。       <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A>和<xref:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom%2A>方法都是這個方法的補充。</xref:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom%2A> </xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A>"
  syntax:
    content: public int FindUnassignedEditPositionFrom (int position, bool direction);
    parameters:
    - id: position
      type: System.Int32
      description: "若要開始搜尋的格式化字串中以零為起始的位置。"
    - id: direction
      type: System.Boolean
      description: "A<xref:System.Boolean>表示搜尋方向; 可能是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>向前搜尋或<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>表示向後搜尋。</xref:System.Boolean>"
    return:
      type: System.Int32
      description: "如果成功的話，<xref:System.Int32>表示發生的第一個未指派可以讓您編輯位置以零為起始的位置則<xref:System.ComponentModel.MaskedTextProvider.InvalidIndex*>.</xref:System.ComponentModel.MaskedTextProvider.InvalidIndex*> </xref:System.Int32>"
  overload: System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)
  id: FindUnassignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: FindUnassignedEditPositionInRange(Int32,Int32,Boolean)
  nameWithType: MaskedTextProvider.FindUnassignedEditPositionInRange(Int32,Int32,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange(Int32,Int32,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "傳回的第一個未指派的可編輯位置之間使用指定的搜尋方向的指定位置。"
  remarks: "格式化的字串由可編輯的字元所組成，並從複製的常值的遮罩。 可編輯的字元位置可能會佔用複製從遮罩，如果未指定，或有效的輸入字元，如果已指定輸入提示字元。       FindUnassignedEditPositionInRange 方法用來搜尋的未指派的第一個字元，介於兩個指定的位置，內含使用指定的搜尋方向。 提示字元中應佔據的這個位置。       <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A>和<xref:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange%2A>方法都是這個方法的補充。</xref:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange%2A> </xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A>"
  syntax:
    content: public int FindUnassignedEditPositionInRange (int startPosition, int endPosition, bool direction);
    parameters:
    - id: startPosition
      type: System.Int32
      description: "格式化字串中要開始搜尋的以零為起始的位置。"
    - id: endPosition
      type: System.Int32
      description: "格式化字串中要搜尋的結束位置的以零為起始的位置。"
    - id: direction
      type: System.Boolean
      description: "A<xref:System.Boolean>表示搜尋方向; 可能是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>向前搜尋或<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>表示向後搜尋。</xref:System.Boolean>"
    return:
      type: System.Int32
      description: "如果成功的話，<xref:System.Int32>表示發生的第一個未指派可以讓您編輯位置以零為起始的位置則<xref:System.ComponentModel.MaskedTextProvider.InvalidIndex*>.</xref:System.ComponentModel.MaskedTextProvider.InvalidIndex*> </xref:System.Int32>"
  overload: System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.GetOperationResultFromHint(System.ComponentModel.MaskedTextResultHint)
  id: GetOperationResultFromHint(System.ComponentModel.MaskedTextResultHint)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: GetOperationResultFromHint(MaskedTextResultHint)
  nameWithType: MaskedTextProvider.GetOperationResultFromHint(MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.GetOperationResultFromHint(MaskedTextResultHint)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "決定是否指定<xref href=&quot;System.ComponentModel.MaskedTextResultHint&quot;></xref>表示成功或失敗。"
  remarks: '下列的方法<xref:System.ComponentModel.MaskedTextProvider>類別包含類型的參數<xref:System.ComponentModel.MaskedTextResultHint>用於輸出的方法作業的相關資訊︰ <xref:System.ComponentModel.MaskedTextProvider.Add%2A>， <xref:System.ComponentModel.MaskedTextProvider.Clear%2A>， <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A>， <xref:System.ComponentModel.MaskedTextProvider.Remove%2A>， <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A>， <xref:System.ComponentModel.MaskedTextProvider.Replace%2A>， <xref:System.ComponentModel.MaskedTextProvider.Set%2A>， <xref:System.ComponentModel.MaskedTextProvider.VerifyChar%2A>，和<xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A>。</xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A> </xref:System.ComponentModel.MaskedTextProvider.VerifyChar%2A> </xref:System.ComponentModel.MaskedTextProvider.Set%2A> </xref:System.ComponentModel.MaskedTextProvider.Replace%2A> </xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> </xref:System.ComponentModel.MaskedTextProvider.Remove%2A> </xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A> </xref:System.ComponentModel.MaskedTextProvider.Clear%2A> </xref:System.ComponentModel.MaskedTextProvider.Add%2A> </xref:System.ComponentModel.MaskedTextResultHint> </xref:System.ComponentModel.MaskedTextProvider> 這個值會解譯 GetOperationResultFromHint 方法，並傳回布林值，指出是否<xref:System.ComponentModel.MaskedTextResultHint>發出作業是成功或失敗。</xref:System.ComponentModel.MaskedTextResultHint>'
  syntax:
    content: public static bool GetOperationResultFromHint (System.ComponentModel.MaskedTextResultHint hint);
    parameters:
    - id: hint
      type: System.ComponentModel.MaskedTextResultHint
      description: "A <xref href=&quot;System.ComponentModel.MaskedTextResultHint&quot;> </xref>通常為 output 參數從先前的作業取得的值。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果指定<xref href=&quot;System.ComponentModel.MaskedTextResultHint&quot;></xref>值代表成功，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>如果它代表失敗。"
  overload: System.ComponentModel.MaskedTextProvider.GetOperationResultFromHint*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.IncludeLiterals
  id: IncludeLiterals
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: IncludeLiterals
  nameWithType: MaskedTextProvider.IncludeLiterals
  fullName: System.ComponentModel.MaskedTextProvider.IncludeLiterals
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "取得或設定值，指出是否應該格式化字串中包含輸入遮罩中的常值字元。"
  remarks: "<xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A>和 IncludeLiterals 屬性會決定呼叫時，是否顯示提示和常值字元<xref:System.ComponentModel.MaskedTextProvider.ToString%2A>方法。</xref:System.ComponentModel.MaskedTextProvider.ToString%2A> </xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> 藉由設定這兩個屬性到`false`，剖析的字串將代表只有使用者所輸入的字元。"
  syntax:
    content: public bool IncludeLiterals { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果常值會包含在內。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.MaskedTextProvider.IncludeLiterals*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.IncludePrompt
  id: IncludePrompt
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: IncludePrompt
  nameWithType: MaskedTextProvider.IncludePrompt
  fullName: System.ComponentModel.MaskedTextProvider.IncludePrompt
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "取得或設定值，指出是否<xref:System.Windows.Forms.MaskedTextBox.PromptChar*>用來代表使用者輸入時顯示格式化的字串不存在。</xref:System.Windows.Forms.MaskedTextBox.PromptChar*>"
  remarks: "IncludePrompt 和<xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A>屬性會判斷提示和常值字元出現時呼叫<xref:System.ComponentModel.MaskedTextProvider.ToString%2A>方法。</xref:System.ComponentModel.MaskedTextProvider.ToString%2A> </xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> 藉由設定這兩個屬性到`false`，剖析的字串將代表只有使用者所輸入的字元。"
  syntax:
    content: public bool IncludePrompt { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果提示字元來表示的位置，其中提供無使用者輸入。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.MaskedTextProvider.IncludePrompt*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.InsertAt(System.Char,System.Int32)
  id: InsertAt(System.Char,System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: InsertAt(Char,Int32)
  nameWithType: MaskedTextProvider.InsertAt(Char,Int32)
  fullName: System.ComponentModel.MaskedTextProvider.InsertAt(Char,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "在格式化字串中指定位置插入指定的字元。"
  remarks: "InsertAt 方法插入的第一個編輯位置或超出指定的字元`pos`參數。 這個方法將會轉換現有的所有字元之後的插入點移動一個位置，以騰出供插入`input`字元。 如果發生下列錯誤之一，不會執行插入，而且方法會傳回`false`。      -`pos`參數小於零或大於<xref:System.ComponentModel.MaskedTextProvider.Length%2A>的格式化字串。</xref:System.ComponentModel.MaskedTextProvider.Length%2A>      為在格式化的字串或超出指定的位置，找不到可編輯的字元`pos`。      -插入字元`input`，因為它不是可列印或不符合對應的遮罩項目不是有效的輸入的字元。      -有是右邊的插入點，沒有可用位置，所以無法移動現有的字元。      -現有字元移位會產生遮罩的違規情形。       空白`input`字串，會導致沒有變更的格式化字串，但是會傳回`true`。"
  syntax:
    content: public bool InsertAt (char input, int position);
    parameters:
    - id: input
      type: System.Char
      description: "<xref:System.Char>插入。</xref:System.Char>"
    - id: position
      type: System.Int32
      description: "若要插入的字元格式化字串中以零為起始的位置。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果插入成功;否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.MaskedTextProvider.InsertAt*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.InsertAt(System.String,System.Int32)
  id: InsertAt(System.String,System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: InsertAt(String,Int32)
  nameWithType: MaskedTextProvider.InsertAt(String,Int32)
  fullName: System.ComponentModel.MaskedTextProvider.InsertAt(String,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "在格式化字串中指定位置插入指定的字串。"
  remarks: "InsertAt 方法插入每個字元從`input`字串插入編輯位置位於位置`pos`和更新版本。 這個方法將會變更所有現有的字元之後插入點移動一個位置，針對每個插入的字元。 如果發生下列錯誤之一，不會執行插入，而且方法會傳回`false`。      -`pos`參數小於零或大於<xref:System.ComponentModel.MaskedTextProvider.Length%2A>的格式化字串。</xref:System.ComponentModel.MaskedTextProvider.Length%2A>      -沒有足夠的可編輯字元存在或超出指定的位置，格式化字串中`pos`、 要插入的所有字元從`input`字串。      對一或多個插入的字元不是有效的輸入的字元因為它們均無法列印或不符合對應的遮罩項目。      -沒有足夠的可用位置的插入點，右邊，因此無法移動現有的字元。      -現有字元移位會產生遮罩的違規情形。 請注意，此移位發生在每個個別字元插入期間。       空白`input`字串，會導致沒有變更的格式化字串，但是會傳回`true`。"
  syntax:
    content: public bool InsertAt (string input, int position);
    parameters:
    - id: input
      type: System.String
      description: "<xref:System.String>插入。</xref:System.String>"
    - id: position
      type: System.Int32
      description: "要插入的輸入的字串的格式化字串中以零為起始的位置。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果插入成功;否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.MaskedTextProvider.InsertAt*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>input</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.InsertAt(System.Char,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  id: InsertAt(System.Char,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: InsertAt(Char,Int32,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.InsertAt(Char,Int32,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.InsertAt(Char,Int32,Int32,MaskedTextResultHint)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "在格式化字串，傳回最後插入的位置和作業的狀態中的指定位置插入指定的字元。"
  remarks: "InsertAt 方法插入的第一個編輯位置或超出指定的字元`pos`參數。 這個方法將會轉換現有的所有字元之後的插入點移動一個位置，以騰出供插入`input`字元。 如果發生下列錯誤之一，不會執行插入，而且方法會傳回`false`。      -`pos`參數小於零或大於<xref:System.ComponentModel.MaskedTextProvider.Length%2A>的格式化字串。</xref:System.ComponentModel.MaskedTextProvider.Length%2A>      為在格式化的字串或超出指定的位置，找不到可編輯的字元`pos`。      -插入字元`input`，因為它不是可列印或不符合對應的遮罩項目不是有效的輸入的字元。      -有是右邊的插入點，沒有可用位置，所以無法移動現有的字元。      -現有字元移位會產生遮罩的違規情形。       空白`input`字串，會導致沒有變更的格式化字串，但是會傳回`true`。"
  syntax:
    content: public bool InsertAt (char input, int position, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);
    parameters:
    - id: input
      type: System.Char
      description: "<xref:System.Char>插入。</xref:System.Char>"
    - id: position
      type: System.Int32
      description: "若要插入的字元格式化字串中以零為起始的位置。"
    - id: testPosition
      type: System.Int32
      description: "如果方法成功，最後一個位置字元已插入的位置。否則，第一個位置失敗插入的位置。 輸出參數。"
    - id: resultHint
      type: System.ComponentModel.MaskedTextResultHint
      description: "A <xref href=&quot;System.ComponentModel.MaskedTextResultHint&quot;> </xref>簡潔描述插入作業的結果。 輸出參數。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果插入成功;否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.MaskedTextProvider.InsertAt*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.InsertAt(System.String,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  id: InsertAt(System.String,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: InsertAt(String,Int32,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.InsertAt(String,Int32,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.InsertAt(String,Int32,Int32,MaskedTextResultHint)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "在格式化字串，傳回最後插入的位置和作業的狀態中的指定位置插入指定的字串。"
  remarks: "InsertAt 方法插入每個字元從`input`字串插入編輯位置位於位置`pos`和更新版本。 這個方法將會變更所有現有的字元之後插入點移動一個位置，針對每個插入的字元。 如果發生下列錯誤之一，不會執行插入，而且方法會傳回`false`。      -`pos`參數小於零或大於<xref:System.ComponentModel.MaskedTextProvider.Length%2A>的格式化字串。</xref:System.ComponentModel.MaskedTextProvider.Length%2A>      -沒有足夠的可編輯字元存在或超出指定的位置，格式化字串中`pos`、 要插入的所有字元從`input`字串。      對一或多個插入的字元不是有效的輸入的字元因為它們均無法列印或不符合對應的遮罩項目。      -沒有足夠的可用位置的插入點，右邊，因此無法移動現有的字元。      -現有字元移位會產生遮罩的違規情形。 請注意，此移位發生在每個個別字元插入期間。       空白`input`字串，會導致沒有變更的格式化字串，但是會傳回`true`。"
  syntax:
    content: public bool InsertAt (string input, int position, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);
    parameters:
    - id: input
      type: System.String
      description: "<xref:System.String>插入。</xref:System.String>"
    - id: position
      type: System.Int32
      description: "要插入的輸入的字串的格式化字串中以零為起始的位置。"
    - id: testPosition
      type: System.Int32
      description: "如果方法成功，最後一個位置字元已插入的位置。否則，第一個位置失敗插入的位置。 輸出參數。"
    - id: resultHint
      type: System.ComponentModel.MaskedTextResultHint
      description: "A <xref href=&quot;System.ComponentModel.MaskedTextResultHint&quot;> </xref>簡潔描述插入作業的結果。 輸出參數。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果插入成功;否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.MaskedTextProvider.InsertAt*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>input</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.InvalidIndex
  id: InvalidIndex
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: InvalidIndex
  nameWithType: MaskedTextProvider.InvalidIndex
  fullName: System.ComponentModel.MaskedTextProvider.InvalidIndex
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "取得無效的索引範圍的上限。"
  remarks: "InvalidIndex 屬性用來代表結果不是有效的索引作業，例如<xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A>方法。</xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A>       當您使用的提供者，或實作您自己時，您應該使用這個屬性決定如果索引是無效的值無效，而不是硬式編碼解。"
  syntax:
    content: public static int InvalidIndex { get; }
    return:
      type: System.Int32
      description: "值，表示最大無效的索引，由提供者實作。 例如，如果小的有效索引為 0，這個屬性會傳回-1。"
  overload: System.ComponentModel.MaskedTextProvider.InvalidIndex*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.IsAvailablePosition(System.Int32)
  id: IsAvailablePosition(System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: IsAvailablePosition(Int32)
  nameWithType: MaskedTextProvider.IsAvailablePosition(Int32)
  fullName: System.ComponentModel.MaskedTextProvider.IsAvailablePosition(Int32)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "判斷是否可供指派指定的位置。"
  remarks: "IsAvailablePosition 方法會傳回`true`只有當所有下列條件成立:-`pos`參數的格式化字串的範圍內; 亦即，其值是大於或等於零且小於比<xref:System.ComponentModel.MaskedTextProvider.Length%2A>的格式化字串。</xref:System.ComponentModel.MaskedTextProvider.Length%2A>      -指定的位置是可編輯的字元。      -字元不已指派至這個位置。"
  syntax:
    content: public bool IsAvailablePosition (int position);
    parameters:
    - id: position
      type: System.Int32
      description: "若要測試之遮罩中以零為起始的位置。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果格式化的字串中指定的位置是可編輯的且尚未指派給 尚未;否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.MaskedTextProvider.IsAvailablePosition*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)
  id: IsEditPosition(System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: IsEditPosition(Int32)
  nameWithType: MaskedTextProvider.IsEditPosition(Int32)
  fullName: System.ComponentModel.MaskedTextProvider.IsEditPosition(Int32)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "判斷指定的位置是否可編輯。"
  remarks: "IsEditPosition 方法會傳回`true`只有當兩個下列條件成立:-`pos`參數的格式化字串的範圍內; 亦即，其值是大於或等於零且小於比<xref:System.ComponentModel.MaskedTextProvider.Length%2A>的格式化字串。</xref:System.ComponentModel.MaskedTextProvider.Length%2A>      -指定的位置是可編輯的字元。"
  syntax:
    content: public bool IsEditPosition (int position);
    parameters:
    - id: position
      type: System.Int32
      description: "若要測試之遮罩中以零為起始的位置。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果格式化的字串中指定的位置是可編輯;否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.MaskedTextProvider.IsEditPosition*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.IsPassword
  id: IsPassword
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: IsPassword
  nameWithType: MaskedTextProvider.IsPassword
  fullName: System.ComponentModel.MaskedTextProvider.IsPassword
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "取得或設定值，這個值會決定密碼保護是否應該套用至格式化的字串。"
  remarks: "密碼保護可以使用下列其中兩種方式起始:-設定<xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>屬性設為非`null`值。</xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>      -IsPassword 屬性設定為`true`。，它也會設定<xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>屬性<xref:System.ComponentModel.MaskedTextProvider.DefaultPasswordChar%2A>值。</xref:System.ComponentModel.MaskedTextProvider.DefaultPasswordChar%2A> </xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>       IsPassword 會使用<xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A>與<xref:System.ComponentModel.MaskedTextProvider.ToString%2A>方法來判斷是否要顯示實際的輸入的字元，或它們與<xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>.</xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>混淆</xref:System.ComponentModel.MaskedTextProvider.ToString%2A></xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A>"
  syntax:
    content: public bool IsPassword { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果輸入的字串會被視為密碼字串。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.MaskedTextProvider.IsPassword*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)
  id: IsValidInputChar(System.Char)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: IsValidInputChar(Char)
  nameWithType: MaskedTextProvider.IsValidInputChar(Char)
  fullName: System.ComponentModel.MaskedTextProvider.IsValidInputChar(Char)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "判斷指定的字元是否為有效的輸入的字元。"
  remarks: "有效輸入的字元包括所有可列印的字元，包括字母、 數字、 標點符號、 符號和空格字元。"
  syntax:
    content: public static bool IsValidInputChar (char c);
    parameters:
    - id: c
      type: System.Char
      description: "<xref:System.Char>要測試值</xref:System.Char>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果指定的字元包含有效的輸入的值。否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.MaskedTextProvider.IsValidInputChar*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.IsValidMaskChar(System.Char)
  id: IsValidMaskChar(System.Char)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: IsValidMaskChar(Char)
  nameWithType: MaskedTextProvider.IsValidMaskChar(Char)
  fullName: System.ComponentModel.MaskedTextProvider.IsValidMaskChar(Char)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "判斷指定的字元是否為有效的遮罩字元。"
  remarks: "有效的遮罩字元包括所有可列印的字元，包括字母、 數字、 標點符號、 符號和空格字元。"
  syntax:
    content: public static bool IsValidMaskChar (char c);
    parameters:
    - id: c
      type: System.Char
      description: "<xref:System.Char>要測試值</xref:System.Char>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果指定的字元包含有效的遮罩值。否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.MaskedTextProvider.IsValidMaskChar*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(System.Char)
  id: IsValidPasswordChar(System.Char)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: IsValidPasswordChar(Char)
  nameWithType: MaskedTextProvider.IsValidPasswordChar(Char)
  fullName: System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(Char)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "判斷指定的字元是否為有效的密碼字元。"
  remarks: "有效的密碼字元會包含所有可列印字元和 null 字元，用來停用密碼的功能。 可列印的字元包括字母、 數字、 標點符號、 符號和空格字元。"
  syntax:
    content: public static bool IsValidPasswordChar (char c);
    parameters:
    - id: c
      type: System.Char
      description: "<xref:System.Char>要測試值</xref:System.Char>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果指定的字元包含有效的密碼值。否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.MaskedTextProvider.IsValidPasswordChar*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: MaskedTextProvider.Item(Int32)
  fullName: System.ComponentModel.MaskedTextProvider.Item(Int32)
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "格式化字串中指定的位置取得的項目。"
  remarks: "Item 屬性是標準的索引子<xref:System.ComponentModel.MaskedTextProvider>類別。</xref:System.ComponentModel.MaskedTextProvider>"
  syntax:
    content: public char this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: "要擷取的項目以零為起始的索引。"
    return:
      type: System.Char
      description: "<xref:System.Char>格式化字串中指定的位置。</xref:System.Char>"
  overload: System.ComponentModel.MaskedTextProvider.Item*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "<code>index</code>小於零或大於或等於<xref:System.ComponentModel.MaskedTextProvider.Length*>的遮罩。"
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.LastAssignedPosition
  id: LastAssignedPosition
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: LastAssignedPosition
  nameWithType: MaskedTextProvider.LastAssignedPosition
  fullName: System.ComponentModel.MaskedTextProvider.LastAssignedPosition
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "取得已指派給遮罩的最右邊輸入字元遮罩中的索引。"
  remarks: "LastAssignedPosition 屬性代表最遠編輯位置中的遮罩，相對於來源，具有該角色的輸入的字元。 語言讀取左到右 (LTR)，例如英文，這是最右邊指定位置。讀取由右至左 (RTL) 的語言，這會是最左邊的位置。"
  syntax:
    content: public int LastAssignedPosition { get; }
    return:
      type: System.Int32
      description: "如果至少一個輸入字元指定的遮罩，<xref:System.Int32>包含索引的最右邊的指定位置; 否則如果沒有位置已指派<xref:System.ComponentModel.MaskedTextProvider.InvalidIndex*>.</xref:System.ComponentModel.MaskedTextProvider.InvalidIndex*> </xref:System.Int32>"
  overload: System.ComponentModel.MaskedTextProvider.LastAssignedPosition*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.Length
  id: Length
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: Length
  nameWithType: MaskedTextProvider.Length
  fullName: System.ComponentModel.MaskedTextProvider.Length
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "取得的遮罩，不存在的任何遮罩長度修飾詞字元。"
  remarks: "Length 屬性表示中的遮罩，包括常值，然後編輯字元的字元總數。 常值字元的數目可以減去的值來判斷<xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A>長度。</xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A>       長度也會說明格式化的字串，包含輸入的字元、 常值和提示字元的長度。"
  syntax:
    content: public int Length { get; }
    return:
      type: System.Int32
      description: "<xref:System.Int32>包含遮罩，但不包括修改遮罩輸入的字元位置數目。</xref:System.Int32>"
  overload: System.ComponentModel.MaskedTextProvider.Length*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.Mask
  id: Mask
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: Mask
  nameWithType: MaskedTextProvider.Mask
  fullName: System.ComponentModel.MaskedTextProvider.Mask
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "取得輸入的遮罩。"
  remarks: "遮罩屬性設定<xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A>建構函式。</xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> 此遮罩必須只包含有效字元遮罩語言所定義。"
  syntax:
    content: public string Mask { get; }
    return:
      type: System.String
      description: "A<xref:System.String>包含完整遮罩。</xref:System.String>"
  overload: System.ComponentModel.MaskedTextProvider.Mask*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.MaskCompleted
  id: MaskCompleted
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: MaskCompleted
  nameWithType: MaskedTextProvider.MaskCompleted
  fullName: System.ComponentModel.MaskedTextProvider.MaskCompleted
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "取得值，指出所有必要的輸入是否已經輸入到格式化字串。"
  remarks: "MaskCompleted 屬性會檢查必要的輸入的元素。 若要判斷是否已經輸入所有必要和選擇性的輸入項目，請使用<xref:System.Windows.Forms.MaskedTextBox.MaskFull%2A?displayProperty=fullName>屬性<xref:System.Windows.Forms.MaskedTextBox>類別。</xref:System.Windows.Forms.MaskedTextBox> </xref:System.Windows.Forms.MaskedTextBox.MaskFull%2A?displayProperty=fullName>       目前的值<xref:System.ComponentModel.MaskedTextProvider.Mask%2A>屬性會決定哪一個格式項目會被視為必要的、 哪些是選擇性。</xref:System.ComponentModel.MaskedTextProvider.Mask%2A>"
  syntax:
    content: public bool MaskCompleted { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果所有必要的輸入已輸入遮罩。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.MaskedTextProvider.MaskCompleted*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.MaskFull
  id: MaskFull
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: MaskFull
  nameWithType: MaskedTextProvider.MaskFull
  fullName: System.ComponentModel.MaskedTextProvider.MaskFull
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "取得值，指出所有必要和選擇性的輸入是否已經輸入到格式化字串。"
  remarks: "若要確認如果只需要輸入的輸入項目，請使用<xref:System.ComponentModel.MaskedTextProvider.MaskCompleted%2A>屬性改為。</xref:System.ComponentModel.MaskedTextProvider.MaskCompleted%2A> 目前的值<xref:System.ComponentModel.MaskedTextProvider.Mask%2A>屬性會決定哪一個格式項目會被視為必要的、 哪些是選擇性。</xref:System.ComponentModel.MaskedTextProvider.Mask%2A>"
  syntax:
    content: public bool MaskFull { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果已輸入所有必要和選擇性的輸入值;否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.MaskedTextProvider.MaskFull*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.PasswordChar
  id: PasswordChar
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: PasswordChar
  nameWithType: MaskedTextProvider.PasswordChar
  fullName: System.ComponentModel.MaskedTextProvider.PasswordChar
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "取得或設定用來取代實際的輸入字元的字元。"
  remarks: "對於機密的使用者輸入，是常見的作法是隱藏的實際輸出作業期間，使用者所輸入的資訊。 如果 PasswordChar 屬性會設為非`null`字元，例如輸出方法<xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A>和<xref:System.ComponentModel.MaskedTextProvider.ToString%2A>會遮蔽的輸入的字元，以指定的密碼字元。</xref:System.ComponentModel.MaskedTextProvider.ToString%2A> </xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> 此屬性設定為`null`將會停用密碼保護功能。"
  syntax:
    content: public char PasswordChar { get; set; }
    return:
      type: System.Char
      description: "<xref:System.Char>值做為密碼字元。</xref:System.Char>"
  overload: System.ComponentModel.MaskedTextProvider.PasswordChar*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "設定這個屬性時所指定的密碼字元等同於目前的提示字元， <xref:System.ComponentModel.MaskedTextProvider.PromptChar*>.</xref:System.ComponentModel.MaskedTextProvider.PromptChar*> 這兩個必須是不同。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "當設定這個屬性不是有效的密碼字元，由指定的字元<xref:System.ComponentModel.MaskedTextProvider.IsValidPasswordChar*>方法。</xref:System.ComponentModel.MaskedTextProvider.IsValidPasswordChar*>"
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.PromptChar
  id: PromptChar
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: PromptChar
  nameWithType: MaskedTextProvider.PromptChar
  fullName: System.ComponentModel.MaskedTextProvider.PromptChar
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "取得或設定用來代表使用者輸入的所有可用編輯位置不存在的字元。"
  remarks: "PromptChar 屬性表示提示字元，由<xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A>和<xref:System.ComponentModel.MaskedTextProvider.ToString%2A>方法來表示格式化的輸入字串的目前狀態。</xref:System.ComponentModel.MaskedTextProvider.ToString%2A> </xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> 提示字元會放置在可編輯未指派的輸入的值的位置。 某些版本的<xref:System.ComponentModel.MaskedTextProvider.ToString%2A>方法也會取決於值<xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A>屬性。</xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> </xref:System.ComponentModel.MaskedTextProvider.ToString%2A>"
  syntax:
    content: public char PromptChar { get; set; }
    return:
      type: System.Char
      description: "用來提示使用者輸入的字元。 預設為底線 (_)。"
  overload: System.ComponentModel.MaskedTextProvider.PromptChar*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "提示字元會指定當設定這個屬性等同於目前的密碼字元<xref:System.ComponentModel.MaskedTextProvider.PasswordChar*>.</xref:System.ComponentModel.MaskedTextProvider.PasswordChar*> 這兩個必須是不同。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "當設定這個屬性不是有效的密碼字元，由指定的字元<xref:System.ComponentModel.MaskedTextProvider.IsValidPasswordChar*>方法。</xref:System.ComponentModel.MaskedTextProvider.IsValidPasswordChar*>"
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.Remove
  id: Remove
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: Remove()
  nameWithType: MaskedTextProvider.Remove()
  fullName: System.ComponentModel.MaskedTextProvider.Remove()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "格式化字串中移除最後一個指定的字元。"
  remarks: "<xref:System.ComponentModel.MaskedTextProvider.Remove%2A>方法沒有任何作用，如果沒有遮罩尚未指派的字元。</xref:System.ComponentModel.MaskedTextProvider.Remove%2A>       當移除最後一個指定的字元時格式化字串時，可編輯的遮罩字元會重設為該位置，讓後續的輸入。"
  syntax:
    content: public bool Remove ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果成功移除字元;否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.MaskedTextProvider.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.Remove(System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  id: Remove(System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: Remove(Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.Remove(Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.Remove(Int32,MaskedTextResultHint)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "格式化字串中，移除最後一個指定的字元，然後輸出移除位置和描述性資訊。"
  remarks: "<xref:System.ComponentModel.MaskedTextProvider.Remove%2A>方法沒有任何作用，如果沒有遮罩尚未指派的字元。</xref:System.ComponentModel.MaskedTextProvider.Remove%2A>       當移除最後一個指定的字元時格式化字串時，可編輯的遮罩字元會重設為該位置，讓後續的輸入。"
  syntax:
    content: public bool Remove (out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);
    parameters:
    - id: testPosition
      type: System.Int32
      description: "格式化字串中要實際移除字元之以零為起始的位置。 輸出參數。"
    - id: resultHint
      type: System.ComponentModel.MaskedTextResultHint
      description: "A <xref href=&quot;System.ComponentModel.MaskedTextResultHint&quot;> </xref>簡潔描述作業的結果。 輸出參數。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果成功移除字元;否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.MaskedTextProvider.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: MaskedTextProvider.RemoveAt(Int32)
  fullName: System.ComponentModel.MaskedTextProvider.RemoveAt(Int32)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "格式化字串中移除位於指定位置指定的字元。"
  remarks: "<xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A>方法沒有任何作用，如果指定的移除位置沒有指派的字元。</xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> 這個方法不會影響常值字元。       移除字元時，遮罩中的其餘高位字元將向右移，向左填入移除所建立的間隙。 空出的位置會重設為輸入。 如果因遮罩的定義，而無法移動一個字元，就會發生任何移除，和<xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A>傳回`false`。</xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A>       這個方法呼叫相當於下列呼叫多載<xref:System.ComponentModel.MaskedTextProvider.RemoveAt%28System.Int32%2CSystem.Int32%29>版本︰ `RemoveAt(pos, pos);` </xref:System.ComponentModel.MaskedTextProvider.RemoveAt%28System.Int32%2CSystem.Int32%29>"
  syntax:
    content: public bool RemoveAt (int position);
    parameters:
    - id: position
      type: System.Int32
      description: "若要移除指定的字元之以零為起始的位置。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果成功移除字元;否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.MaskedTextProvider.RemoveAt*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.RemoveAt(System.Int32,System.Int32)
  id: RemoveAt(System.Int32,System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: RemoveAt(Int32,Int32)
  nameWithType: MaskedTextProvider.RemoveAt(Int32,Int32)
  fullName: System.ComponentModel.MaskedTextProvider.RemoveAt(Int32,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "移除指定的字元位置之間的指定格式字串。"
  remarks: "<xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A>方法沒有任何作用，如果在指定的移除位置沒有指派的字元。</xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A>       移除字元時，遮罩中的其餘高位字元將向右移，向左填入移除所建立的間隙。 空出的位置會重設為輸入。 如果因遮罩的定義，而無法移動一個字元，就會發生任何移除，和<xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A>傳回`false`。</xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A>"
  syntax:
    content: public bool RemoveAt (int startPosition, int endPosition);
    parameters:
    - id: startPosition
      type: System.Int32
      description: "若要移除指定第一個字元之以零起始的索引。"
    - id: endPosition
      type: System.Int32
      description: "若要移除指定最後一個字元之以零起始的索引。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果成功移除字元;否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.MaskedTextProvider.RemoveAt*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.RemoveAt(System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  id: RemoveAt(System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: RemoveAt(Int32,Int32,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.RemoveAt(Int32,Int32,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.RemoveAt(Int32,Int32,Int32,MaskedTextResultHint)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "移除指定的字元，格式化字串，指定位置之間，然後輸出移除位置和描述性資訊。"
  remarks: "<xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A>方法沒有任何作用，如果在指定的移除位置沒有指派的字元。</xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A>       移除字元時，遮罩中的其餘高位字元將向右移，向左填入移除所建立的間隙。 空出的位置會重設為輸入。 如果因遮罩的定義，而無法移動一個字元，就會發生任何移除，和<xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A>傳回`false`。</xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A>       這個版本的<xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A>提供兩個其他輸出參數來傳遞方法的作業的詳細資訊。</xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A>"
  syntax:
    content: public bool RemoveAt (int startPosition, int endPosition, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);
    parameters:
    - id: startPosition
      type: System.Int32
      description: "若要移除指定第一個字元之以零起始的索引。"
    - id: endPosition
      type: System.Int32
      description: "若要移除指定最後一個字元之以零起始的索引。"
    - id: testPosition
      type: System.Int32
      description: "如果成功，其中實際上已移除的字元; 的格式字串中以零為起始的位置否則，第一個定位作業失敗的位置。 輸出參數。"
    - id: resultHint
      type: System.ComponentModel.MaskedTextResultHint
      description: "A <xref href=&quot;System.ComponentModel.MaskedTextResultHint&quot;> </xref>簡潔描述作業的結果。 輸出參數。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果成功移除字元;否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.MaskedTextProvider.RemoveAt*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.Replace(System.Char,System.Int32)
  id: Replace(System.Char,System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: Replace(Char,Int32)
  nameWithType: MaskedTextProvider.Replace(Char,Int32)
  fullName: System.ComponentModel.MaskedTextProvider.Replace(Char,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "取代指定的字元值的單一字元或超出指定的位置。"
  remarks: "Replace 方法中的可編輯的第一個位置，或超出指定的位置，格式化字串中搜尋`pos`。 如果找到一個物件，可編輯的位置的值變更為指定的字元， `input`。 下列任何一個狀況會導致執行取代作業發生錯誤，而值為`false`傳回:-`pos`參數小於零或大於<xref:System.ComponentModel.MaskedTextProvider.Length%2A>的格式化字串。</xref:System.ComponentModel.MaskedTextProvider.Length%2A>      為在格式化的字串或超出指定的位置，找不到可編輯的字元`pos`。      -取代字元， `input`，因為它不是可列印或不符合對應的遮罩項目不是有效的輸入的字元。"
  syntax:
    content: public bool Replace (char input, int position);
    parameters:
    - id: input
      type: System.Char
      description: "<xref:System.Char>會取代現有值的值。</xref:System.Char>"
    - id: position
      type: System.Int32
      description: "要搜尋的可編輯的第一個字元，取代以零為起始的位置。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果已成功取代字元。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.MaskedTextProvider.Replace*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.Replace(System.String,System.Int32)
  id: Replace(System.String,System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: Replace(String,Int32)
  nameWithType: MaskedTextProvider.Replace(String,Int32)
  fullName: System.ComponentModel.MaskedTextProvider.Replace(String,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "取代指定的位置以指定字串開始的可編輯字元範圍。"
  remarks: "Replace 方法中搜尋第一個可編輯的位置或超出指定的位置， `pos`。 在假設在這個點之後有足夠的可編輯位置下操作，現有的字元值會被取代--一個取代字串參數的內容`input`。       下列條件會被視為錯誤。 發生錯誤時，沒有替代項目，就會發生，則 Replace 會傳回`false`。      -`pos`參數小於零或大於<xref:System.ComponentModel.MaskedTextProvider.Length%2A>的格式化字串。</xref:System.ComponentModel.MaskedTextProvider.Length%2A>      -沒有足夠保存內容的取代字串來格式化字串中可編輯的位置。      的其中一個的取代字元值無效，因為它不是可列印或不符合對應的遮罩項目。"
  syntax:
    content: public bool Replace (string input, int position);
    parameters:
    - id: input
      type: System.String
      description: "<xref:System.String>用來取代現有的可編輯字元值。</xref:System.String>"
    - id: position
      type: System.Int32
      description: "要搜尋的可編輯的第一個字元，取代以零為起始的位置。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果已成功取代所有字元。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.MaskedTextProvider.Replace*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>input</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.Replace(System.Char,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  id: Replace(System.Char,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: Replace(Char,Int32,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.Replace(Char,Int32,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.Replace(Char,Int32,Int32,MaskedTextResultHint)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "指定的字元值，以取代單一字元或超出指定的位置，然後輸出移除位置和描述性資訊。"
  remarks: "Replace 方法中的可編輯的第一個位置，或超出指定的位置，格式化字串中搜尋`pos`。 如果找到一個物件，可編輯的位置的值變更為指定的字元， `input`。 下列任何一個狀況導致發生錯誤狀況来執行取代作業，而值為`false`傳回:-`pos`參數小於零或大於<xref:System.ComponentModel.MaskedTextProvider.Length%2A>的格式化字串。</xref:System.ComponentModel.MaskedTextProvider.Length%2A>      為在格式化的字串或超出指定的位置，找不到可編輯的字元`pos`。      -取代字元， `input`，因為它不是可列印或不符合對應的遮罩項目不是有效的輸入的字元。       除了傳回的值，這個方法會有兩個輸出參數，來提供取代作業的其他資訊。"
  syntax:
    content: public bool Replace (char input, int position, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);
    parameters:
    - id: input
      type: System.Char
      description: "<xref:System.Char>會取代現有值的值。</xref:System.Char>"
    - id: position
      type: System.Int32
      description: "要搜尋的可編輯的第一個字元，取代以零為起始的位置。"
    - id: testPosition
      type: System.Int32
      description: "如果成功，其中實際取代的最後一個字元; 的以零為起始位置在格式化的字串否則，第一個定位作業失敗的位置。 輸出參數。"
    - id: resultHint
      type: System.ComponentModel.MaskedTextResultHint
      description: "A <xref href=&quot;System.ComponentModel.MaskedTextResultHint&quot;> </xref>簡潔描述取代作業的結果。 輸出參數。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果已成功取代字元。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.MaskedTextProvider.Replace*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.Replace(System.String,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  id: Replace(System.String,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: Replace(String,Int32,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.Replace(String,Int32,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.Replace(String,Int32,Int32,MaskedTextResultHint)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "取代指定的字串，指定位置開始，可編輯的字元範圍，然後輸出移除位置和描述性資訊。"
  remarks: "Replace 方法中搜尋第一個可編輯的位置或超出指定的位置， `pos`。 假設在這個點之後有足夠的可編輯位置上運作，現有的字元值會被取代--一個取代字串參數的內容`input`。       下列條件會被視為錯誤。 發生錯誤時，沒有替代項目，就會發生，則 Replace 會傳回`false`。      -`pos`參數小於零或大於<xref:System.ComponentModel.MaskedTextProvider.Length%2A>的格式化字串。</xref:System.ComponentModel.MaskedTextProvider.Length%2A>      -沒有足夠保存內容的取代字串來格式化字串中可編輯的位置。      的其中一個的取代字元值無效，因為它不是可列印或不符合對應的遮罩項目。       除了傳回的值，這個方法會有兩個輸出參數，來提供取代作業的其他資訊。"
  syntax:
    content: public bool Replace (string input, int position, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);
    parameters:
    - id: input
      type: System.String
      description: "<xref:System.String>用來取代現有的可編輯字元值。</xref:System.String>"
    - id: position
      type: System.Int32
      description: "要搜尋的可編輯的第一個字元，取代以零為起始的位置。"
    - id: testPosition
      type: System.Int32
      description: "如果成功，其中實際取代的最後一個字元; 的以零為起始位置在格式化的字串否則，第一個定位作業失敗的位置。 輸出參數。"
    - id: resultHint
      type: System.ComponentModel.MaskedTextResultHint
      description: "A <xref href=&quot;System.ComponentModel.MaskedTextResultHint&quot;> </xref>簡潔描述取代作業的結果。 輸出參數。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果已成功取代所有字元。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.MaskedTextProvider.Replace*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.Replace(System.Char,System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  id: Replace(System.Char,System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: Replace(Char,Int32,Int32,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.Replace(Char,Int32,Int32,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.Replace(Char,Int32,Int32,Int32,MaskedTextResultHint)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "取代指定的起始和結束位置指定的字元值之間的單一字元，然後輸出移除位置和描述性資訊。"
  remarks: "Replace 方法中搜尋指定開始和結束位置之間的格式化字串中的第一個可編輯的位置。 如果找到一個物件，可編輯的位置的值變更為指定的字元， `input`。 下列任何一個狀況導致發生錯誤狀況来執行取代作業，而值為`false`傳回:-`startPos`或`endPos`之前開始的格式化字串，或超出其結束點的參數。      為在指定期間內找不到可編輯的字元。      -取代字元， `input`，因為它不是可列印或不符合對應的遮罩項目不是有效的輸入的字元。       除了傳回的值，這個方法會有兩個輸出參數，來提供取代作業的其他資訊。"
  syntax:
    content: public bool Replace (char input, int startPosition, int endPosition, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);
    parameters:
    - id: input
      type: System.Char
      description: "<xref:System.Char>會取代現有值的值。</xref:System.Char>"
    - id: startPosition
      type: System.Int32
      description: "格式化字串中要取代的開始位置的以零為起始的位置。"
    - id: endPosition
      type: System.Int32
      description: "格式化字串中要取代的結束位置的以零為起始的位置。"
    - id: testPosition
      type: System.Int32
      description: "如果成功，其中實際取代的最後一個字元; 的以零為起始位置在格式化的字串否則，第一個定位作業失敗的位置。 輸出參數。"
    - id: resultHint
      type: System.ComponentModel.MaskedTextResultHint
      description: "A <xref href=&quot;System.ComponentModel.MaskedTextResultHint&quot;> </xref>簡潔描述取代作業的結果。 輸出參數。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果已成功取代字元。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.MaskedTextProvider.Replace*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.Replace(System.String,System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  id: Replace(System.String,System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: Replace(String,Int32,Int32,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.Replace(String,Int32,Int32,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.Replace(String,Int32,Int32,Int32,MaskedTextResultHint)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "取代指定的起始和結束位置指定的字串之間的可編輯字元範圍，然後輸出移除位置和描述性資訊。"
  remarks: "Replace 方法中搜尋指定開始和結束位置之間的格式化字串中的第一個可編輯的位置。 假設在這個點之後有足夠的可編輯位置上運作，現有的字元值會被取代--一個取代字串參數的內容`input`。       下列條件會被視為錯誤。 發生錯誤時，沒有替代項目，就會發生，則 Replace 會傳回`false`。      -`startPos`或`endPos`之前開始的格式化字串，或超出其結束點的參數。      -沒有足夠保存內容的取代字串來格式化字串中可編輯的位置。      的其中一個的取代字元值無效，因為它不是可列印或不符合對應的遮罩項目。       除了傳回的值，這個方法會有兩個輸出參數，來提供取代作業的其他資訊。"
  syntax:
    content: public bool Replace (string input, int startPosition, int endPosition, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);
    parameters:
    - id: input
      type: System.String
      description: "<xref:System.String>用來取代現有的可編輯字元值。</xref:System.String>"
    - id: startPosition
      type: System.Int32
      description: "格式化字串中要取代的開始位置的以零為起始的位置。"
    - id: endPosition
      type: System.Int32
      description: "格式化字串中要取代的結束位置的以零為起始的位置。"
    - id: testPosition
      type: System.Int32
      description: "如果成功，其中實際取代的最後一個字元; 的以零為起始位置在格式化的字串否則，第一個定位作業失敗的位置。 輸出參數。"
    - id: resultHint
      type: System.ComponentModel.MaskedTextResultHint
      description: "A <xref href=&quot;System.ComponentModel.MaskedTextResultHint&quot;> </xref>簡潔描述取代作業的結果。 輸出參數。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果已成功取代所有字元。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.MaskedTextProvider.Replace*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.ResetOnPrompt
  id: ResetOnPrompt
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: ResetOnPrompt
  nameWithType: MaskedTextProvider.ResetOnPrompt
  fullName: System.ComponentModel.MaskedTextProvider.ResetOnPrompt
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "取得或設定值，這個值會決定應該如何處理符合提示字元的輸入的字元。"
  remarks: "<xref:System.ComponentModel.MaskedTextProvider>可以在以特殊方式處理字元、 置和提示字元中，兩個類別目錄。</xref:System.ComponentModel.MaskedTextProvider> 一般來說，每個輸入的字元將經過遮罩，然後針對接受或拒絕。 假設，<xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A>以外屬性設定為值`null`，然後將 ResetOnPrompt 屬性設定為`true`會導致提示字元的特殊處理。</xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A> 提示字元加入時，它會導致要清除目前的遮罩字元位置和前進至下一個可編輯的字元目前位置。       ResetOnPrompt 會優先於<xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A>下表中所述的屬性。</xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A>      |ResetOnPrompt |<xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A>|產生的行為 |  |---------------------------------------------------------------------------------------------------------------------------------------------------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------|------------------------|  |`true`|`true`|可以加入提示字元，而且它會導致目前的遮罩位置重設。</xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A> 預設值。 |  |`true`|`false`|可以加入提示字元，而且它會導致重設目前的遮罩位置。 |  |`false`|`true`|提示字元當做一般輸入字元。 |  |`false`|`false`|無效的提示字元，嘗試要加入之字元的方法將會失敗。 |"
  syntax:
    content: public bool ResetOnPrompt { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果提示輸入做為輸入的字元導致目前的編輯位置重設; 遮罩中否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>表示提示字元當做一般輸入字元來處理。 預設值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.MaskedTextProvider.ResetOnPrompt*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.ResetOnSpace
  id: ResetOnSpace
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: ResetOnSpace
  nameWithType: MaskedTextProvider.ResetOnSpace
  fullName: System.ComponentModel.MaskedTextProvider.ResetOnSpace
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "取得或設定值，這個值會決定應該如何處理空格輸入的字元。"
  remarks: "<xref:System.ComponentModel.MaskedTextProvider>可以以特殊方式處理字元、 空格和提示字元中，兩種類別。</xref:System.ComponentModel.MaskedTextProvider> 一般來說，每個輸入的字元將經過遮罩，然後針對接受或拒絕。 ResetOnSpace 屬性設定為`true`導致目前的遮罩字元位置正在清除與正在前移至下一個可編輯的字元目前位置。       ResetOnSpace 時，指派文字提示字元中，但不包括已儲存其中提示會取代空格。 還原這類的字串，設定 ResetOnSpace 之前`true`會重設的提示字元，在輸入字串中的空格所佔用的位置。"
  syntax:
    content: public bool ResetOnSpace { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果空格輸入的字元導致目前的編輯位置遮罩中要重設。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>以指出它是要當做一般輸入字元來處理。 預設值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.MaskedTextProvider.ResetOnSpace*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.Set(System.String)
  id: Set(System.String)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: Set(String)
  nameWithType: MaskedTextProvider.Set(String)
  fullName: System.ComponentModel.MaskedTextProvider.Set(String)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "將格式化的字串設定為指定的輸入字串。"
  remarks: "<xref:System.ComponentModel.MaskedTextProvider.Set%2A>方法清除現有的格式化字串內容，然後再套用針對遮罩`input`来更新的內容格式化字串的字串。</xref:System.ComponentModel.MaskedTextProvider.Set%2A>       下列條件會被視為錯誤。 發生錯誤時，保持不變，格式化的字串和<xref:System.ComponentModel.MaskedTextProvider.Set%2A>傳回`false`。</xref:System.ComponentModel.MaskedTextProvider.Set%2A>      -沒有足夠保存內容的取代字串來格式化字串中可編輯的位置。      的其中一個的取代字元值無效，因為它不是可列印或不符合對應的遮罩項目。"
  syntax:
    content: public bool Set (string input);
    parameters:
    - id: input
      type: System.String
      description: "<xref:System.String>用來設定格式化的字串值。</xref:System.String>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果已成功設定的所有字元。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.MaskedTextProvider.Set*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The<code> input</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.Set(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  id: Set(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: Set(String,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.Set(String,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.Set(String,Int32,MaskedTextResultHint)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "將格式化的字串設定為指定的輸入字串，然後輸出移除位置和描述性資訊。"
  remarks: "<xref:System.ComponentModel.MaskedTextProvider.Set%2A>方法清除現有的格式化字串內容，然後再套用針對遮罩`input`来更新的內容格式化字串的字串。</xref:System.ComponentModel.MaskedTextProvider.Set%2A>       下列條件會被視為錯誤。 發生錯誤時，保持不變，格式化的字串和<xref:System.ComponentModel.MaskedTextProvider.Set%2A>傳回`false`。</xref:System.ComponentModel.MaskedTextProvider.Set%2A>      -沒有足夠保存內容的取代字串來格式化字串中可編輯的位置。      的其中一個的取代字元值無效，因為它不是可列印或不符合對應的遮罩項目。       這個版本的<xref:System.ComponentModel.MaskedTextProvider.Set%2A>提供兩個其他輸出參數來傳遞方法的作業的詳細資訊。</xref:System.ComponentModel.MaskedTextProvider.Set%2A>"
  syntax:
    content: public bool Set (string input, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);
    parameters:
    - id: input
      type: System.String
      description: "<xref:System.String>用來設定格式化的字串值。</xref:System.String>"
    - id: testPosition
      type: System.Int32
      description: "如果成功，其中實際設定的最後一個字元; 的以零為起始位置在格式化的字串否則，第一個定位作業失敗的位置。 輸出參數。"
    - id: resultHint
      type: System.ComponentModel.MaskedTextResultHint
      description: "A <xref href=&quot;System.ComponentModel.MaskedTextResultHint&quot;> </xref>簡潔描述設定作業的結果。 輸出參數。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果已成功設定的所有字元。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.MaskedTextProvider.Set*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The<code> input</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.SkipLiterals
  id: SkipLiterals
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: SkipLiterals
  nameWithType: MaskedTextProvider.SkipLiterals
  fullName: System.ComponentModel.MaskedTextProvider.SkipLiterals
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "取得或設定值，指出是否遮罩中的常值字元位置將會覆寫相同的值。"
  remarks: "輸入的遮罩可以包含常值，然後可編輯的字元。 如果嘗試將輸入的字元常值的值所佔用的遮罩中的位置<xref:System.Windows.Forms.MaskedTextBox.SkipLiterals%2A>屬性會決定結果。</xref:System.Windows.Forms.MaskedTextBox.SkipLiterals%2A>      -如果此屬性為`true`，它是有效時，覆寫常值相同的值加入輸入的字元。 例如，正斜線字元值， `&quot;/&quot;`，無法新增至遮罩的第三個位置`&quot;00/00/000&quot;`。      -如果此屬性為`false`，不是有效的常值字元所佔用的遮罩位置指派任何值。"
  syntax:
    content: public bool SkipLiterals { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要允許常值加回。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>為不允許使用者覆寫常值字元。 預設值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.MaskedTextProvider.SkipLiterals*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.ToDisplayString
  id: ToDisplayString
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: ToDisplayString()
  nameWithType: MaskedTextProvider.ToDisplayString()
  fullName: System.ComponentModel.MaskedTextProvider.ToDisplayString()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "傳回可顯示的表單中的格式化的字串。"
  remarks: "ToDisplayString 方法一定會包含在傳回的值，不論值中的提示和常值字元<xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A>或<xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A>屬性。</xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> </xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> 這個方法一律會顯示密碼字元，如果<xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>以外屬性設定的字元值為`null`。</xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>       ToDisplayString 通常用來取得相關聯的使用者介面項目，例如<xref:System.Windows.Forms.MaskedTextBox>.</xref:System.Windows.Forms.MaskedTextBox>中顯示的字串"
  syntax:
    content: public string ToDisplayString ();
    parameters: []
    return:
      type: System.String
      description: "格式化<xref:System.String>包含遮罩常值和提示。</xref:System.String>"
  overload: System.ComponentModel.MaskedTextProvider.ToDisplayString*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.ToString
  id: ToString
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: ToString()
  nameWithType: MaskedTextProvider.ToString()
  fullName: System.ComponentModel.MaskedTextProvider.ToString()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "傳回包含所有指定的字元值的格式化的字串。"
  remarks: "這個版本的多載<xref:System.ComponentModel.MaskedTextProvider.ToString%2A>方法包含根據目前的值的常值和提示<xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A>和<xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A>屬性，分別。</xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> </xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> </xref:System.ComponentModel.MaskedTextProvider.ToString%2A> 它一律會傳回原始輸入的字元，即將忽略值<xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>屬性。</xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>      > [!IMPORTANT] > 因為這個方法會顯示密碼字元通常保護使用者介面中的資訊，則應謹慎小心避免不慎洩露機密的使用者資料。"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "格式化<xref:System.String>，其中包含所有指定的字元值。</xref:System.String>"
  overload: System.ComponentModel.MaskedTextProvider.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.ToString(System.Boolean)
  id: ToString(System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: ToString(Boolean)
  nameWithType: MaskedTextProvider.ToString(Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.ToString(Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "傳回格式化的字串，並選擇性地包含密碼字元。"
  remarks: "這個版本的多載<xref:System.ComponentModel.MaskedTextProvider.ToString%2A>方法包含根據目前的值的常值和提示<xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A>和<xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A>屬性，分別。</xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> </xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> </xref:System.ComponentModel.MaskedTextProvider.ToString%2A> 如果`ignorePasswordChar`參數是`true`，它會傳回原始輸入的字元，即將忽略值<xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>屬性。</xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> 如果這個參數是`false`，它會使用的密碼字元遮蔽可編輯的使用者輸入，如果<xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>以外屬性設定為值`null`。</xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>      > [!IMPORTANT] > 因為這個方法可能會揭露資訊通常是在使用者介面保護的密碼字元，則應謹慎小心避免不慎洩露機密的使用者資料。"
  syntax:
    content: public string ToString (bool ignorePasswordChar);
    parameters:
    - id: ignorePasswordChar
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>要傳回的實際可編輯的字元。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>表示<xref:System.ComponentModel.MaskedTextProvider.PasswordChar*>屬性是能被接受。</xref:System.ComponentModel.MaskedTextProvider.PasswordChar*>"
    return:
      type: System.String
      description: "格式化<xref:System.String>包含常值、 提示，以及 （選擇性） 密碼字元。</xref:System.String>"
  overload: System.ComponentModel.MaskedTextProvider.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Boolean)
  id: ToString(System.Boolean,System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: ToString(Boolean,Boolean)
  nameWithType: MaskedTextProvider.ToString(Boolean,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.ToString(Boolean,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "傳回格式化的字串，並選擇性地包含提示和常值字元。"
  remarks: "這個版本的多載<xref:System.ComponentModel.MaskedTextProvider.ToString%2A>方法包含根據的值的常值和提示`IncludePrompt`和`IncludeLiterals`參數，分別。</xref:System.ComponentModel.MaskedTextProvider.ToString%2A> 請注意，這些參數會覆寫<xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A>值<xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A>屬性。</xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A></xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> 這個方法一律會傳回原始輸入的字元，即將忽略值<xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>屬性。</xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>      > [!IMPORTANT] > 因為這個方法會顯示密碼字元通常保護使用者介面中的資訊，則應謹慎小心避免不慎洩露機密的使用者資料。"
  syntax:
    content: public string ToString (bool includePrompt, bool includeLiterals);
    parameters:
    - id: includePrompt
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>要包含在傳回的字串; 提示字元否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    - id: includeLiterals
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>要傳回的字串; 中包含常值字元否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.String
      description: "格式化<xref:System.String>，包括所有指派的字元值，並選擇性地包含常值和提示。</xref:System.String>"
  overload: System.ComponentModel.MaskedTextProvider.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.ToString(System.Int32,System.Int32)
  id: ToString(System.Int32,System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: ToString(Int32,Int32)
  nameWithType: MaskedTextProvider.ToString(Int32,Int32)
  fullName: System.ComponentModel.MaskedTextProvider.ToString(Int32,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "傳回格式化字串的子字串。"
  remarks: "這個版本的多載<xref:System.ComponentModel.MaskedTextProvider.ToString%2A>方法會傳回格式化的字串開始位置的子字串`startPos`包括後續的數字所指定的字元和`length`參數。</xref:System.ComponentModel.MaskedTextProvider.ToString%2A> 傳回的字串包含根據目前的值的常值和提示<xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A>和<xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A>屬性，分別。</xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> </xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> 傳回字串會包含原始輸入的字元。<xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>屬性永遠會被忽略。</xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>      > [!IMPORTANT] > 因為這個方法會顯示密碼字元通常保護使用者介面中的資訊，則應謹慎小心避免不慎洩露機密的使用者資料。       ToString 輸入參數中有不一致時，請執行下列動作:-如果`startPos`小於零，開始的位置會設定為零。      -如果`startPos`大於或等於實際<xref:System.ComponentModel.MaskedTextProvider.Length%2A>的格式化字串，<xref:System.String.Empty>就會傳回字串。</xref:System.String.Empty> </xref:System.ComponentModel.MaskedTextProvider.Length%2A>      -如果`length`大於傳回的剩餘字元過去的開始位置，只剩餘字元數。      -如果`length`小於或等於零，<xref:System.String.Empty>就會傳回字串。</xref:System.String.Empty>"
  syntax:
    content: public string ToString (int startPosition, int length);
    parameters:
    - id: startPosition
      type: System.Int32
      description: "格式化字串中要開始輸出的以零為起始的位置。"
    - id: length
      type: System.Int32
      description: "要傳回的字元數。"
    return:
      type: System.String
      description: "如果成功的話，格式化的子字串<xref:System.String>，其中包括所有指派的字元值; 否則為<xref:System.String>字串。</xref:System.String> </xref:System.String>"
  overload: System.ComponentModel.MaskedTextProvider.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Int32,System.Int32)
  id: ToString(System.Boolean,System.Int32,System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: ToString(Boolean,Int32,Int32)
  nameWithType: MaskedTextProvider.ToString(Boolean,Int32,Int32)
  fullName: System.ComponentModel.MaskedTextProvider.ToString(Boolean,Int32,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "傳回子字串的格式化字串，並選擇性地包含密碼字元。"
  remarks: "這個版本的多載<xref:System.ComponentModel.MaskedTextProvider.ToString%2A>方法會傳回格式化的字串開始位置的子字串`startPos`包括後續的數字所指定的字元和`length`參數。</xref:System.ComponentModel.MaskedTextProvider.ToString%2A> 傳回的字串包含根據目前的值的常值和提示<xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A>和<xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A>屬性，分別。</xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> </xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> 如果`ignorePasswordChar`參數是`true`，它會傳回原始輸入的字元，即將忽略值<xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>屬性。</xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> 如果這個參數是`false`，它會使用的密碼字元遮蔽可編輯的使用者輸入，如果<xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>以外屬性設定為值`null`。</xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>      > [!IMPORTANT] > 因為這個方法可能會揭露資訊通常是在使用者介面保護的密碼字元，則應謹慎小心避免不慎洩露機密的使用者資料。       <xref:System.ComponentModel.MaskedTextProvider.ToString%2A>輸入參數中有不一致時，執行下列動作:-如果`startPos`小於零，開始的位置會設定為零。</xref:System.ComponentModel.MaskedTextProvider.ToString%2A>      -如果`startPos`大於或等於實際<xref:System.ComponentModel.MaskedTextProvider.Length%2A>的格式化字串，<xref:System.String.Empty>就會傳回字串。</xref:System.String.Empty> </xref:System.ComponentModel.MaskedTextProvider.Length%2A>      -如果`length`大於傳回的剩餘字元過去的開始位置，只剩餘字元數。      -如果`length`小於或等於零，<xref:System.String.Empty>就會傳回字串。</xref:System.String.Empty>"
  syntax:
    content: public string ToString (bool ignorePasswordChar, int startPosition, int length);
    parameters:
    - id: ignorePasswordChar
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>要傳回的實際可編輯的字元。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>表示<xref:System.ComponentModel.MaskedTextProvider.PasswordChar*>屬性是能被接受。</xref:System.ComponentModel.MaskedTextProvider.PasswordChar*>"
    - id: startPosition
      type: System.Int32
      description: "格式化字串中要開始輸出的以零為起始的位置。"
    - id: length
      type: System.Int32
      description: "要傳回的字元數。"
    return:
      type: System.String
      description: "如果成功的話，格式化的子字串<xref:System.String>，其中包含常值、 提示，以及 （選擇性） 密碼字元; 否則<xref:System.String>字串。</xref:System.String> </xref:System.String>"
  overload: System.ComponentModel.MaskedTextProvider.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Boolean,System.Int32,System.Int32)
  id: ToString(System.Boolean,System.Boolean,System.Int32,System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: ToString(Boolean,Boolean,Int32,Int32)
  nameWithType: MaskedTextProvider.ToString(Boolean,Boolean,Int32,Int32)
  fullName: System.ComponentModel.MaskedTextProvider.ToString(Boolean,Boolean,Int32,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "傳回格式化的字串，並選擇性地包含提示和常值字元的子字串。"
  remarks: "這個版本的多載<xref:System.ComponentModel.MaskedTextProvider.ToString%2A>方法會傳回格式化的字串開始位置的子字串`startPos`包括後續的數字所指定的字元和`length`參數。</xref:System.ComponentModel.MaskedTextProvider.ToString%2A> 傳回字串包含根據的值的常值和提示`IncludePrompt`和`IncludeLiterals`參數，分別。 請注意，這些參數會覆寫<xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A>值<xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A>屬性。</xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A></xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> 這個方法一律會傳回原始輸入的字元，即將忽略值<xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>屬性。</xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>      > [!IMPORTANT] > 因為這個方法會顯示密碼字元通常保護使用者介面中的資訊，則應謹慎小心避免不慎洩露機密的使用者資料。       <xref:System.ComponentModel.MaskedTextProvider.ToString%2A>輸入參數中有不一致時，執行下列動作:-如果`startPos`小於零，開始的位置會設定為零。</xref:System.ComponentModel.MaskedTextProvider.ToString%2A>      -如果`startPos`大於或等於實際<xref:System.ComponentModel.MaskedTextProvider.Length%2A>的格式化字串，<xref:System.String.Empty>就會傳回字串。</xref:System.String.Empty> </xref:System.ComponentModel.MaskedTextProvider.Length%2A>      -如果`length`大於傳回的剩餘字元過去的開始位置，只剩餘字元數。      -如果`length`小於或等於零，<xref:System.String.Empty>就會傳回字串。</xref:System.String.Empty>"
  syntax:
    content: public string ToString (bool includePrompt, bool includeLiterals, int startPosition, int length);
    parameters:
    - id: includePrompt
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>要包含在傳回的字串; 提示字元否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    - id: includeLiterals
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>要傳回的字串; 中包含常值字元否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    - id: startPosition
      type: System.Int32
      description: "格式化字串中要開始輸出的以零為起始的位置。"
    - id: length
      type: System.Int32
      description: "要傳回的字元數。"
    return:
      type: System.String
      description: "如果成功的話，格式化的子字串<xref:System.String>，包括所有指派的字元值，並選擇性地包含常值，並提示使用者; 否則<xref:System.String>字串。</xref:System.String> </xref:System.String>"
  overload: System.ComponentModel.MaskedTextProvider.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32)
  id: ToString(System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: ToString(Boolean,Boolean,Boolean,Int32,Int32)
  nameWithType: MaskedTextProvider.ToString(Boolean,Boolean,Boolean,Int32,Int32)
  fullName: System.ComponentModel.MaskedTextProvider.ToString(Boolean,Boolean,Boolean,Int32,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "傳回子字串的格式化字串，並選擇性地包含提示字元中，常值，與密碼。"
  remarks: "這個版本的多載<xref:System.ComponentModel.MaskedTextProvider.ToString%2A>方法會傳回格式化的字串開始位置的子字串`startPos`包括後續的數字所指定的字元和`length`參數。</xref:System.ComponentModel.MaskedTextProvider.ToString%2A> 傳回字串包含根據的值的常值和提示`IncludePrompt`和`IncludeLiterals`參數，分別。 請注意，這些參數會覆寫的值<xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A>和<xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A>屬性。</xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> </xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> 如果`ignorePasswordChar`參數是`true`，它會傳回原始輸入的字元，即將忽略值<xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>屬性。</xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> 如果這個參數是`false`，它會使用的密碼字元遮蔽可編輯的使用者輸入，如果<xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>以外屬性設定為值`null`。</xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>      > [!IMPORTANT] > 因為這個方法可能會揭露資訊通常是在使用者介面保護的密碼字元，則應謹慎小心避免不慎洩露機密的使用者資料。       <xref:System.ComponentModel.MaskedTextProvider.ToString%2A>輸入參數中有不一致時，執行下列動作:-如果`startPos`小於零，開始的位置會設定為零。</xref:System.ComponentModel.MaskedTextProvider.ToString%2A>      -如果`startPos`大於或等於實際<xref:System.ComponentModel.MaskedTextProvider.Length%2A>的格式化字串，<xref:System.String.Empty>就會傳回字串。</xref:System.String.Empty> </xref:System.ComponentModel.MaskedTextProvider.Length%2A>      -如果`length`大於傳回的剩餘字元過去的開始位置，只剩餘字元數。      -如果`length`小於或等於零，<xref:System.String.Empty>就會傳回字串。</xref:System.String.Empty>"
  syntax:
    content: public string ToString (bool ignorePasswordChar, bool includePrompt, bool includeLiterals, int startPosition, int length);
    parameters:
    - id: ignorePasswordChar
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>要傳回的實際可編輯的字元。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>表示<xref:System.ComponentModel.MaskedTextProvider.PasswordChar*>屬性是能被接受。</xref:System.ComponentModel.MaskedTextProvider.PasswordChar*>"
    - id: includePrompt
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>要包含在傳回的字串; 提示字元否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    - id: includeLiterals
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>要傳回的字串; 中傳回常值字元否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    - id: startPosition
      type: System.Int32
      description: "格式化字串中要開始輸出的以零為起始的位置。"
    - id: length
      type: System.Int32
      description: "要傳回的字元數。"
    return:
      type: System.String
      description: "如果成功的話，格式化的子字串<xref:System.String>，包括所有指派的字元值，並選擇性地包含常值、 提示，以及密碼字元; 否則<xref:System.String>字串。</xref:System.String> </xref:System.String>"
  overload: System.ComponentModel.MaskedTextProvider.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.VerifyChar(System.Char,System.Int32,System.ComponentModel.MaskedTextResultHint@)
  id: VerifyChar(System.Char,System.Int32,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: VerifyChar(Char,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.VerifyChar(Char,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.VerifyChar(Char,Int32,MaskedTextResultHint)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "測試是否可以成功設定指定的字元，在指定的位置。"
  remarks: "VerifyChar 方法測試是否單一字元值代表有效的輸入，格式化字串中指定的位置。 這個方法會傳回`false`，原因如下:-`pos`參數小於零或大於<xref:System.ComponentModel.MaskedTextProvider.Length%2A>的<xref:System.ComponentModel.MaskedTextProvider.Mask%2A>。</xref:System.ComponentModel.MaskedTextProvider.Mask%2A> </xref:System.ComponentModel.MaskedTextProvider.Length%2A>      -字元`input`不是有效的輸入的字元，由<xref:System.ComponentModel.MaskedTextProvider.IsValidInputChar%2A>方法。</xref:System.ComponentModel.MaskedTextProvider.IsValidInputChar%2A>      -`input`遮罩處的項目指定的位置，與不相容`pos`。       最後一個條件可能會取決於目前的值<xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A>， <xref:System.ComponentModel.MaskedTextProvider.AsciiOnly%2A>， <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>，<xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A>和<xref:System.ComponentModel.MaskedTextProvider.SkipLiterals%2A>屬性。</xref:System.ComponentModel.MaskedTextProvider.SkipLiterals%2A> </xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A> </xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> </xref:System.ComponentModel.MaskedTextProvider.AsciiOnly%2A> </xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A>       若要測試遮罩針對整個輸入的字串，使用其中一種<xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A>方法而。</xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A>"
  syntax:
    content: public bool VerifyChar (char input, int position, out System.ComponentModel.MaskedTextResultHint hint);
    parameters:
    - id: input
      type: System.Char
      description: "<xref:System.Char>要測試值</xref:System.Char>"
    - id: position
      type: System.Int32
      description: "若要測試輸入的字元的遮罩中的位置。"
    - id: hint
      type: System.ComponentModel.MaskedTextResultHint
      description: "A <xref href=&quot;System.ComponentModel.MaskedTextResultHint&quot;> </xref>簡潔描述作業的結果。 輸出參數。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果指定的字元是適用於指定的位置。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.MaskedTextProvider.VerifyChar*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.VerifyEscapeChar(System.Char,System.Int32)
  id: VerifyEscapeChar(System.Char,System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: VerifyEscapeChar(Char,Int32)
  nameWithType: MaskedTextProvider.VerifyEscapeChar(Char,Int32)
  fullName: System.ComponentModel.MaskedTextProvider.VerifyEscapeChar(Char,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "測試是否指定的字元會逸出指定的位置。"
  remarks: "字元稱為*逸出*如果它是有效的輸入，但未指派至格式化的字串中的位置。 逸出的字元可分為下列三個類別:-提示字元會逸出，如果<xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A>屬性是`true`。</xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A>      -輸入字元的逸出，如果遮罩中相同的值與常值，且如果<xref:System.ComponentModel.MaskedTextProvider.SkipLiterals%2A>屬性是`true`。</xref:System.ComponentModel.MaskedTextProvider.SkipLiterals%2A>      空格字元會逸出，如果<xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A>屬性是`true`。</xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A>       VerifyEscapeChar 方法也會傳回`false`如果`pos`參數小於零或大於<xref:System.ComponentModel.MaskedTextProvider.Length%2A>的<xref:System.ComponentModel.MaskedTextProvider.Mask%2A>。</xref:System.ComponentModel.MaskedTextProvider.Mask%2A> </xref:System.ComponentModel.MaskedTextProvider.Length%2A>"
  syntax:
    content: public bool VerifyEscapeChar (char input, int position);
    parameters:
    - id: input
      type: System.Char
      description: "<xref:System.Char>要測試值</xref:System.Char>"
    - id: position
      type: System.Int32
      description: "若要測試輸入的字元的遮罩中的位置。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果指定的字元會逸出指定的位置。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.MaskedTextProvider.VerifyEscapeChar*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.VerifyString(System.String)
  id: VerifyString(System.String)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: VerifyString(String)
  nameWithType: MaskedTextProvider.VerifyString(String)
  fullName: System.ComponentModel.MaskedTextProvider.VerifyString(String)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "測試是否可以成功設定指定的字串。"
  remarks: "<xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A>適用於`input`字串和遮罩，而不會實際變更要測試的格式化的字串是否`input`是有效的對應<xref:System.ComponentModel.MaskedTextProvider.Set%2A>作業。</xref:System.ComponentModel.MaskedTextProvider.Set%2A> </xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A> 這個方法也會傳回`true`如果輸入是`null`或長度為零。"
  syntax:
    content: public bool VerifyString (string input);
    parameters:
    - id: input
      type: System.String
      description: "<xref:System.String>要測試值</xref:System.String>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果指定的字串代表有效的輸入。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.MaskedTextProvider.VerifyString*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.VerifyString(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  id: VerifyString(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: VerifyString(String,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.VerifyString(String,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.VerifyString(String,Int32,MaskedTextResultHint)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "測試是否可以成功，設定指定的字串然後輸出位置和描述性資訊。"
  remarks: "<xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A>適用於`input`字串和遮罩，而不會實際變更要測試的格式化的字串是否`input`是有效的對應<xref:System.ComponentModel.MaskedTextProvider.Set%2A>作業。</xref:System.ComponentModel.MaskedTextProvider.Set%2A> </xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A> 這個方法也會傳回`true`如果輸入是`null`或長度為零。       這個版本的<xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A>提供兩個其他輸出參數來傳遞方法的作業的詳細資訊。</xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A>"
  syntax:
    content: public bool VerifyString (string input, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);
    parameters:
    - id: input
      type: System.String
      description: "<xref:System.String>要測試值</xref:System.String>"
    - id: testPosition
      type: System.Int32
      description: "如果成功的話，實際測試的最後一個字元的以零為起始的位置;否則，第一個位置測試失敗的位置。 輸出參數。"
    - id: resultHint
      type: System.ComponentModel.MaskedTextResultHint
      description: "A <xref href=&quot;System.ComponentModel.MaskedTextResultHint&quot;> </xref>簡潔描述測試作業的結果。 輸出參數。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果指定的字串代表有效的輸入。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.MaskedTextProvider.VerifyString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.IndexOutOfRangeException
  isExternal: true
  name: System.IndexOutOfRangeException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ComponentModel.MaskedTextProvider.#ctor(System.String)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: MaskedTextProvider(String)
  nameWithType: MaskedTextProvider.MaskedTextProvider(String)
  fullName: System.ComponentModel.MaskedTextProvider.MaskedTextProvider(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: MaskedTextProvider(String,Boolean)
  nameWithType: MaskedTextProvider.MaskedTextProvider(String,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.MaskedTextProvider(String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: MaskedTextProvider(String,CultureInfo)
  nameWithType: MaskedTextProvider.MaskedTextProvider(String,CultureInfo)
  fullName: System.ComponentModel.MaskedTextProvider.MaskedTextProvider(String,CultureInfo)
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Char,System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: MaskedTextProvider(String,Char,Boolean)
  nameWithType: MaskedTextProvider.MaskedTextProvider(String,Char,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.MaskedTextProvider(String,Char,Boolean)
- uid: System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo,System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: MaskedTextProvider(String,CultureInfo,Boolean)
  nameWithType: MaskedTextProvider.MaskedTextProvider(String,CultureInfo,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.MaskedTextProvider(String,CultureInfo,Boolean)
- uid: System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo,System.Char,System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: MaskedTextProvider(String,CultureInfo,Char,Boolean)
  nameWithType: MaskedTextProvider.MaskedTextProvider(String,CultureInfo,Char,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.MaskedTextProvider(String,CultureInfo,Char,Boolean)
- uid: System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo,System.Boolean,System.Char,System.Char,System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: MaskedTextProvider(String,CultureInfo,Boolean,Char,Char,Boolean)
  nameWithType: MaskedTextProvider.MaskedTextProvider(String,CultureInfo,Boolean,Char,Char,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.MaskedTextProvider(String,CultureInfo,Boolean,Char,Char,Boolean)
- uid: System.ComponentModel.MaskedTextProvider.Add(System.Char)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Add(Char)
  nameWithType: MaskedTextProvider.Add(Char)
  fullName: System.ComponentModel.MaskedTextProvider.Add(Char)
- uid: System.ComponentModel.MaskedTextProvider.Add(System.String)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Add(String)
  nameWithType: MaskedTextProvider.Add(String)
  fullName: System.ComponentModel.MaskedTextProvider.Add(String)
- uid: System.ComponentModel.MaskedTextProvider.Add(System.Char,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Add(Char,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.Add(Char,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.Add(Char,Int32,MaskedTextResultHint)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ComponentModel.MaskedTextResultHint
  parent: System.ComponentModel
  isExternal: false
  name: MaskedTextResultHint
  nameWithType: MaskedTextResultHint
  fullName: System.ComponentModel.MaskedTextResultHint
- uid: System.ComponentModel.MaskedTextProvider.Add(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Add(String,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.Add(String,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.Add(String,Int32,MaskedTextResultHint)
- uid: System.ComponentModel.MaskedTextProvider.AllowPromptAsInput
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: AllowPromptAsInput
  nameWithType: MaskedTextProvider.AllowPromptAsInput
  fullName: System.ComponentModel.MaskedTextProvider.AllowPromptAsInput
- uid: System.ComponentModel.MaskedTextProvider.AsciiOnly
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: AsciiOnly
  nameWithType: MaskedTextProvider.AsciiOnly
  fullName: System.ComponentModel.MaskedTextProvider.AsciiOnly
- uid: System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: AssignedEditPositionCount
  nameWithType: MaskedTextProvider.AssignedEditPositionCount
  fullName: System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount
- uid: System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: AvailableEditPositionCount
  nameWithType: MaskedTextProvider.AvailableEditPositionCount
  fullName: System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount
- uid: System.ComponentModel.MaskedTextProvider.Clear
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Clear()
  nameWithType: MaskedTextProvider.Clear()
  fullName: System.ComponentModel.MaskedTextProvider.Clear()
- uid: System.ComponentModel.MaskedTextProvider.Clear(System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Clear(MaskedTextResultHint)
  nameWithType: MaskedTextProvider.Clear(MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.Clear(MaskedTextResultHint)
- uid: System.ComponentModel.MaskedTextProvider.Clone
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Clone()
  nameWithType: MaskedTextProvider.Clone()
  fullName: System.ComponentModel.MaskedTextProvider.Clone()
- uid: System.ComponentModel.MaskedTextProvider.Culture
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Culture
  nameWithType: MaskedTextProvider.Culture
  fullName: System.ComponentModel.MaskedTextProvider.Culture
- uid: System.ComponentModel.MaskedTextProvider.DefaultPasswordChar
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: DefaultPasswordChar
  nameWithType: MaskedTextProvider.DefaultPasswordChar
  fullName: System.ComponentModel.MaskedTextProvider.DefaultPasswordChar
- uid: System.ComponentModel.MaskedTextProvider.EditPositionCount
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: EditPositionCount
  nameWithType: MaskedTextProvider.EditPositionCount
  fullName: System.ComponentModel.MaskedTextProvider.EditPositionCount
- uid: System.ComponentModel.MaskedTextProvider.EditPositions
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: EditPositions
  nameWithType: MaskedTextProvider.EditPositions
  fullName: System.ComponentModel.MaskedTextProvider.EditPositions
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom(System.Int32,System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: FindAssignedEditPositionFrom(Int32,Boolean)
  nameWithType: MaskedTextProvider.FindAssignedEditPositionFrom(Int32,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom(Int32,Boolean)
- uid: System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: FindAssignedEditPositionInRange(Int32,Int32,Boolean)
  nameWithType: MaskedTextProvider.FindAssignedEditPositionInRange(Int32,Int32,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange(Int32,Int32,Boolean)
- uid: System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(System.Int32,System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: FindEditPositionFrom(Int32,Boolean)
  nameWithType: MaskedTextProvider.FindEditPositionFrom(Int32,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(Int32,Boolean)
- uid: System.ComponentModel.MaskedTextProvider.FindEditPositionInRange(System.Int32,System.Int32,System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: FindEditPositionInRange(Int32,Int32,Boolean)
  nameWithType: MaskedTextProvider.FindEditPositionInRange(Int32,Int32,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.FindEditPositionInRange(Int32,Int32,Boolean)
- uid: System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom(System.Int32,System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: FindNonEditPositionFrom(Int32,Boolean)
  nameWithType: MaskedTextProvider.FindNonEditPositionFrom(Int32,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom(Int32,Boolean)
- uid: System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange(System.Int32,System.Int32,System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: FindNonEditPositionInRange(Int32,Int32,Boolean)
  nameWithType: MaskedTextProvider.FindNonEditPositionInRange(Int32,Int32,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange(Int32,Int32,Boolean)
- uid: System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom(System.Int32,System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: FindUnassignedEditPositionFrom(Int32,Boolean)
  nameWithType: MaskedTextProvider.FindUnassignedEditPositionFrom(Int32,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom(Int32,Boolean)
- uid: System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: FindUnassignedEditPositionInRange(Int32,Int32,Boolean)
  nameWithType: MaskedTextProvider.FindUnassignedEditPositionInRange(Int32,Int32,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange(Int32,Int32,Boolean)
- uid: System.ComponentModel.MaskedTextProvider.GetOperationResultFromHint(System.ComponentModel.MaskedTextResultHint)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: GetOperationResultFromHint(MaskedTextResultHint)
  nameWithType: MaskedTextProvider.GetOperationResultFromHint(MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.GetOperationResultFromHint(MaskedTextResultHint)
- uid: System.ComponentModel.MaskedTextProvider.IncludeLiterals
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: IncludeLiterals
  nameWithType: MaskedTextProvider.IncludeLiterals
  fullName: System.ComponentModel.MaskedTextProvider.IncludeLiterals
- uid: System.ComponentModel.MaskedTextProvider.IncludePrompt
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: IncludePrompt
  nameWithType: MaskedTextProvider.IncludePrompt
  fullName: System.ComponentModel.MaskedTextProvider.IncludePrompt
- uid: System.ComponentModel.MaskedTextProvider.InsertAt(System.Char,System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: InsertAt(Char,Int32)
  nameWithType: MaskedTextProvider.InsertAt(Char,Int32)
  fullName: System.ComponentModel.MaskedTextProvider.InsertAt(Char,Int32)
- uid: System.ComponentModel.MaskedTextProvider.InsertAt(System.String,System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: InsertAt(String,Int32)
  nameWithType: MaskedTextProvider.InsertAt(String,Int32)
  fullName: System.ComponentModel.MaskedTextProvider.InsertAt(String,Int32)
- uid: System.ComponentModel.MaskedTextProvider.InsertAt(System.Char,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: InsertAt(Char,Int32,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.InsertAt(Char,Int32,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.InsertAt(Char,Int32,Int32,MaskedTextResultHint)
- uid: System.ComponentModel.MaskedTextProvider.InsertAt(System.String,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: InsertAt(String,Int32,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.InsertAt(String,Int32,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.InsertAt(String,Int32,Int32,MaskedTextResultHint)
- uid: System.ComponentModel.MaskedTextProvider.InvalidIndex
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: InvalidIndex
  nameWithType: MaskedTextProvider.InvalidIndex
  fullName: System.ComponentModel.MaskedTextProvider.InvalidIndex
- uid: System.ComponentModel.MaskedTextProvider.IsAvailablePosition(System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: IsAvailablePosition(Int32)
  nameWithType: MaskedTextProvider.IsAvailablePosition(Int32)
  fullName: System.ComponentModel.MaskedTextProvider.IsAvailablePosition(Int32)
- uid: System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: IsEditPosition(Int32)
  nameWithType: MaskedTextProvider.IsEditPosition(Int32)
  fullName: System.ComponentModel.MaskedTextProvider.IsEditPosition(Int32)
- uid: System.ComponentModel.MaskedTextProvider.IsPassword
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: IsPassword
  nameWithType: MaskedTextProvider.IsPassword
  fullName: System.ComponentModel.MaskedTextProvider.IsPassword
- uid: System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: IsValidInputChar(Char)
  nameWithType: MaskedTextProvider.IsValidInputChar(Char)
  fullName: System.ComponentModel.MaskedTextProvider.IsValidInputChar(Char)
- uid: System.ComponentModel.MaskedTextProvider.IsValidMaskChar(System.Char)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: IsValidMaskChar(Char)
  nameWithType: MaskedTextProvider.IsValidMaskChar(Char)
  fullName: System.ComponentModel.MaskedTextProvider.IsValidMaskChar(Char)
- uid: System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(System.Char)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: IsValidPasswordChar(Char)
  nameWithType: MaskedTextProvider.IsValidPasswordChar(Char)
  fullName: System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(Char)
- uid: System.ComponentModel.MaskedTextProvider.Item(System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Item(Int32)
  nameWithType: MaskedTextProvider.Item(Int32)
  fullName: System.ComponentModel.MaskedTextProvider.Item(Int32)
- uid: System.ComponentModel.MaskedTextProvider.LastAssignedPosition
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: LastAssignedPosition
  nameWithType: MaskedTextProvider.LastAssignedPosition
  fullName: System.ComponentModel.MaskedTextProvider.LastAssignedPosition
- uid: System.ComponentModel.MaskedTextProvider.Length
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Length
  nameWithType: MaskedTextProvider.Length
  fullName: System.ComponentModel.MaskedTextProvider.Length
- uid: System.ComponentModel.MaskedTextProvider.Mask
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Mask
  nameWithType: MaskedTextProvider.Mask
  fullName: System.ComponentModel.MaskedTextProvider.Mask
- uid: System.ComponentModel.MaskedTextProvider.MaskCompleted
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: MaskCompleted
  nameWithType: MaskedTextProvider.MaskCompleted
  fullName: System.ComponentModel.MaskedTextProvider.MaskCompleted
- uid: System.ComponentModel.MaskedTextProvider.MaskFull
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: MaskFull
  nameWithType: MaskedTextProvider.MaskFull
  fullName: System.ComponentModel.MaskedTextProvider.MaskFull
- uid: System.ComponentModel.MaskedTextProvider.PasswordChar
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: PasswordChar
  nameWithType: MaskedTextProvider.PasswordChar
  fullName: System.ComponentModel.MaskedTextProvider.PasswordChar
- uid: System.ComponentModel.MaskedTextProvider.PromptChar
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: PromptChar
  nameWithType: MaskedTextProvider.PromptChar
  fullName: System.ComponentModel.MaskedTextProvider.PromptChar
- uid: System.ComponentModel.MaskedTextProvider.Remove
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Remove()
  nameWithType: MaskedTextProvider.Remove()
  fullName: System.ComponentModel.MaskedTextProvider.Remove()
- uid: System.ComponentModel.MaskedTextProvider.Remove(System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Remove(Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.Remove(Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.Remove(Int32,MaskedTextResultHint)
- uid: System.ComponentModel.MaskedTextProvider.RemoveAt(System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: MaskedTextProvider.RemoveAt(Int32)
  fullName: System.ComponentModel.MaskedTextProvider.RemoveAt(Int32)
- uid: System.ComponentModel.MaskedTextProvider.RemoveAt(System.Int32,System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: RemoveAt(Int32,Int32)
  nameWithType: MaskedTextProvider.RemoveAt(Int32,Int32)
  fullName: System.ComponentModel.MaskedTextProvider.RemoveAt(Int32,Int32)
- uid: System.ComponentModel.MaskedTextProvider.RemoveAt(System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: RemoveAt(Int32,Int32,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.RemoveAt(Int32,Int32,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.RemoveAt(Int32,Int32,Int32,MaskedTextResultHint)
- uid: System.ComponentModel.MaskedTextProvider.Replace(System.Char,System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Replace(Char,Int32)
  nameWithType: MaskedTextProvider.Replace(Char,Int32)
  fullName: System.ComponentModel.MaskedTextProvider.Replace(Char,Int32)
- uid: System.ComponentModel.MaskedTextProvider.Replace(System.String,System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Replace(String,Int32)
  nameWithType: MaskedTextProvider.Replace(String,Int32)
  fullName: System.ComponentModel.MaskedTextProvider.Replace(String,Int32)
- uid: System.ComponentModel.MaskedTextProvider.Replace(System.Char,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Replace(Char,Int32,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.Replace(Char,Int32,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.Replace(Char,Int32,Int32,MaskedTextResultHint)
- uid: System.ComponentModel.MaskedTextProvider.Replace(System.String,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Replace(String,Int32,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.Replace(String,Int32,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.Replace(String,Int32,Int32,MaskedTextResultHint)
- uid: System.ComponentModel.MaskedTextProvider.Replace(System.Char,System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Replace(Char,Int32,Int32,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.Replace(Char,Int32,Int32,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.Replace(Char,Int32,Int32,Int32,MaskedTextResultHint)
- uid: System.ComponentModel.MaskedTextProvider.Replace(System.String,System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Replace(String,Int32,Int32,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.Replace(String,Int32,Int32,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.Replace(String,Int32,Int32,Int32,MaskedTextResultHint)
- uid: System.ComponentModel.MaskedTextProvider.ResetOnPrompt
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: ResetOnPrompt
  nameWithType: MaskedTextProvider.ResetOnPrompt
  fullName: System.ComponentModel.MaskedTextProvider.ResetOnPrompt
- uid: System.ComponentModel.MaskedTextProvider.ResetOnSpace
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: ResetOnSpace
  nameWithType: MaskedTextProvider.ResetOnSpace
  fullName: System.ComponentModel.MaskedTextProvider.ResetOnSpace
- uid: System.ComponentModel.MaskedTextProvider.Set(System.String)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Set(String)
  nameWithType: MaskedTextProvider.Set(String)
  fullName: System.ComponentModel.MaskedTextProvider.Set(String)
- uid: System.ComponentModel.MaskedTextProvider.Set(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Set(String,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.Set(String,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.Set(String,Int32,MaskedTextResultHint)
- uid: System.ComponentModel.MaskedTextProvider.SkipLiterals
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: SkipLiterals
  nameWithType: MaskedTextProvider.SkipLiterals
  fullName: System.ComponentModel.MaskedTextProvider.SkipLiterals
- uid: System.ComponentModel.MaskedTextProvider.ToDisplayString
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: ToDisplayString()
  nameWithType: MaskedTextProvider.ToDisplayString()
  fullName: System.ComponentModel.MaskedTextProvider.ToDisplayString()
- uid: System.ComponentModel.MaskedTextProvider.ToString
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: ToString()
  nameWithType: MaskedTextProvider.ToString()
  fullName: System.ComponentModel.MaskedTextProvider.ToString()
- uid: System.ComponentModel.MaskedTextProvider.ToString(System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: ToString(Boolean)
  nameWithType: MaskedTextProvider.ToString(Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.ToString(Boolean)
- uid: System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: ToString(Boolean,Boolean)
  nameWithType: MaskedTextProvider.ToString(Boolean,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.ToString(Boolean,Boolean)
- uid: System.ComponentModel.MaskedTextProvider.ToString(System.Int32,System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: ToString(Int32,Int32)
  nameWithType: MaskedTextProvider.ToString(Int32,Int32)
  fullName: System.ComponentModel.MaskedTextProvider.ToString(Int32,Int32)
- uid: System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Int32,System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: ToString(Boolean,Int32,Int32)
  nameWithType: MaskedTextProvider.ToString(Boolean,Int32,Int32)
  fullName: System.ComponentModel.MaskedTextProvider.ToString(Boolean,Int32,Int32)
- uid: System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Boolean,System.Int32,System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: ToString(Boolean,Boolean,Int32,Int32)
  nameWithType: MaskedTextProvider.ToString(Boolean,Boolean,Int32,Int32)
  fullName: System.ComponentModel.MaskedTextProvider.ToString(Boolean,Boolean,Int32,Int32)
- uid: System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: ToString(Boolean,Boolean,Boolean,Int32,Int32)
  nameWithType: MaskedTextProvider.ToString(Boolean,Boolean,Boolean,Int32,Int32)
  fullName: System.ComponentModel.MaskedTextProvider.ToString(Boolean,Boolean,Boolean,Int32,Int32)
- uid: System.ComponentModel.MaskedTextProvider.VerifyChar(System.Char,System.Int32,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: VerifyChar(Char,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.VerifyChar(Char,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.VerifyChar(Char,Int32,MaskedTextResultHint)
- uid: System.ComponentModel.MaskedTextProvider.VerifyEscapeChar(System.Char,System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: VerifyEscapeChar(Char,Int32)
  nameWithType: MaskedTextProvider.VerifyEscapeChar(Char,Int32)
  fullName: System.ComponentModel.MaskedTextProvider.VerifyEscapeChar(Char,Int32)
- uid: System.ComponentModel.MaskedTextProvider.VerifyString(System.String)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: VerifyString(String)
  nameWithType: MaskedTextProvider.VerifyString(String)
  fullName: System.ComponentModel.MaskedTextProvider.VerifyString(String)
- uid: System.ComponentModel.MaskedTextProvider.VerifyString(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: VerifyString(String,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.VerifyString(String,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.VerifyString(String,Int32,MaskedTextResultHint)
- uid: System.ComponentModel.MaskedTextProvider.#ctor*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: MaskedTextProvider
  nameWithType: MaskedTextProvider.MaskedTextProvider
- uid: System.ComponentModel.MaskedTextProvider.Add*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Add
  nameWithType: MaskedTextProvider.Add
- uid: System.ComponentModel.MaskedTextProvider.AllowPromptAsInput*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: AllowPromptAsInput
  nameWithType: MaskedTextProvider.AllowPromptAsInput
- uid: System.ComponentModel.MaskedTextProvider.AsciiOnly*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: AsciiOnly
  nameWithType: MaskedTextProvider.AsciiOnly
- uid: System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: AssignedEditPositionCount
  nameWithType: MaskedTextProvider.AssignedEditPositionCount
- uid: System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: AvailableEditPositionCount
  nameWithType: MaskedTextProvider.AvailableEditPositionCount
- uid: System.ComponentModel.MaskedTextProvider.Clear*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Clear
  nameWithType: MaskedTextProvider.Clear
- uid: System.ComponentModel.MaskedTextProvider.Clone*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Clone
  nameWithType: MaskedTextProvider.Clone
- uid: System.ComponentModel.MaskedTextProvider.Culture*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Culture
  nameWithType: MaskedTextProvider.Culture
- uid: System.ComponentModel.MaskedTextProvider.DefaultPasswordChar*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: DefaultPasswordChar
  nameWithType: MaskedTextProvider.DefaultPasswordChar
- uid: System.ComponentModel.MaskedTextProvider.EditPositionCount*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: EditPositionCount
  nameWithType: MaskedTextProvider.EditPositionCount
- uid: System.ComponentModel.MaskedTextProvider.EditPositions*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: EditPositions
  nameWithType: MaskedTextProvider.EditPositions
- uid: System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: FindAssignedEditPositionFrom
  nameWithType: MaskedTextProvider.FindAssignedEditPositionFrom
- uid: System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: FindAssignedEditPositionInRange
  nameWithType: MaskedTextProvider.FindAssignedEditPositionInRange
- uid: System.ComponentModel.MaskedTextProvider.FindEditPositionFrom*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: FindEditPositionFrom
  nameWithType: MaskedTextProvider.FindEditPositionFrom
- uid: System.ComponentModel.MaskedTextProvider.FindEditPositionInRange*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: FindEditPositionInRange
  nameWithType: MaskedTextProvider.FindEditPositionInRange
- uid: System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: FindNonEditPositionFrom
  nameWithType: MaskedTextProvider.FindNonEditPositionFrom
- uid: System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: FindNonEditPositionInRange
  nameWithType: MaskedTextProvider.FindNonEditPositionInRange
- uid: System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: FindUnassignedEditPositionFrom
  nameWithType: MaskedTextProvider.FindUnassignedEditPositionFrom
- uid: System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: FindUnassignedEditPositionInRange
  nameWithType: MaskedTextProvider.FindUnassignedEditPositionInRange
- uid: System.ComponentModel.MaskedTextProvider.GetOperationResultFromHint*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: GetOperationResultFromHint
  nameWithType: MaskedTextProvider.GetOperationResultFromHint
- uid: System.ComponentModel.MaskedTextProvider.IncludeLiterals*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: IncludeLiterals
  nameWithType: MaskedTextProvider.IncludeLiterals
- uid: System.ComponentModel.MaskedTextProvider.IncludePrompt*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: IncludePrompt
  nameWithType: MaskedTextProvider.IncludePrompt
- uid: System.ComponentModel.MaskedTextProvider.InsertAt*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: InsertAt
  nameWithType: MaskedTextProvider.InsertAt
- uid: System.ComponentModel.MaskedTextProvider.InvalidIndex*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: InvalidIndex
  nameWithType: MaskedTextProvider.InvalidIndex
- uid: System.ComponentModel.MaskedTextProvider.IsAvailablePosition*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: IsAvailablePosition
  nameWithType: MaskedTextProvider.IsAvailablePosition
- uid: System.ComponentModel.MaskedTextProvider.IsEditPosition*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: IsEditPosition
  nameWithType: MaskedTextProvider.IsEditPosition
- uid: System.ComponentModel.MaskedTextProvider.IsPassword*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: IsPassword
  nameWithType: MaskedTextProvider.IsPassword
- uid: System.ComponentModel.MaskedTextProvider.IsValidInputChar*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: IsValidInputChar
  nameWithType: MaskedTextProvider.IsValidInputChar
- uid: System.ComponentModel.MaskedTextProvider.IsValidMaskChar*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: IsValidMaskChar
  nameWithType: MaskedTextProvider.IsValidMaskChar
- uid: System.ComponentModel.MaskedTextProvider.IsValidPasswordChar*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: IsValidPasswordChar
  nameWithType: MaskedTextProvider.IsValidPasswordChar
- uid: System.ComponentModel.MaskedTextProvider.Item*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Item
  nameWithType: MaskedTextProvider.Item
- uid: System.ComponentModel.MaskedTextProvider.LastAssignedPosition*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: LastAssignedPosition
  nameWithType: MaskedTextProvider.LastAssignedPosition
- uid: System.ComponentModel.MaskedTextProvider.Length*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Length
  nameWithType: MaskedTextProvider.Length
- uid: System.ComponentModel.MaskedTextProvider.Mask*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Mask
  nameWithType: MaskedTextProvider.Mask
- uid: System.ComponentModel.MaskedTextProvider.MaskCompleted*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: MaskCompleted
  nameWithType: MaskedTextProvider.MaskCompleted
- uid: System.ComponentModel.MaskedTextProvider.MaskFull*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: MaskFull
  nameWithType: MaskedTextProvider.MaskFull
- uid: System.ComponentModel.MaskedTextProvider.PasswordChar*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: PasswordChar
  nameWithType: MaskedTextProvider.PasswordChar
- uid: System.ComponentModel.MaskedTextProvider.PromptChar*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: PromptChar
  nameWithType: MaskedTextProvider.PromptChar
- uid: System.ComponentModel.MaskedTextProvider.Remove*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Remove
  nameWithType: MaskedTextProvider.Remove
- uid: System.ComponentModel.MaskedTextProvider.RemoveAt*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: RemoveAt
  nameWithType: MaskedTextProvider.RemoveAt
- uid: System.ComponentModel.MaskedTextProvider.Replace*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Replace
  nameWithType: MaskedTextProvider.Replace
- uid: System.ComponentModel.MaskedTextProvider.ResetOnPrompt*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: ResetOnPrompt
  nameWithType: MaskedTextProvider.ResetOnPrompt
- uid: System.ComponentModel.MaskedTextProvider.ResetOnSpace*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: ResetOnSpace
  nameWithType: MaskedTextProvider.ResetOnSpace
- uid: System.ComponentModel.MaskedTextProvider.Set*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Set
  nameWithType: MaskedTextProvider.Set
- uid: System.ComponentModel.MaskedTextProvider.SkipLiterals*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: SkipLiterals
  nameWithType: MaskedTextProvider.SkipLiterals
- uid: System.ComponentModel.MaskedTextProvider.ToDisplayString*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: ToDisplayString
  nameWithType: MaskedTextProvider.ToDisplayString
- uid: System.ComponentModel.MaskedTextProvider.ToString*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: ToString
  nameWithType: MaskedTextProvider.ToString
- uid: System.ComponentModel.MaskedTextProvider.VerifyChar*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: VerifyChar
  nameWithType: MaskedTextProvider.VerifyChar
- uid: System.ComponentModel.MaskedTextProvider.VerifyEscapeChar*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: VerifyEscapeChar
  nameWithType: MaskedTextProvider.VerifyEscapeChar
- uid: System.ComponentModel.MaskedTextProvider.VerifyString*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: VerifyString
  nameWithType: MaskedTextProvider.VerifyString
