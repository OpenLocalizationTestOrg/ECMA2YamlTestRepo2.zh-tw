### YamlMime:ManagedReference
items:
- uid: System.Security.AccessControl.QualifiedAce
  id: QualifiedAce
  children:
  - System.Security.AccessControl.QualifiedAce.AceQualifier
  - System.Security.AccessControl.QualifiedAce.GetOpaque
  - System.Security.AccessControl.QualifiedAce.IsCallback
  - System.Security.AccessControl.QualifiedAce.OpaqueLength
  - System.Security.AccessControl.QualifiedAce.SetOpaque(System.Byte[])
  langs:
  - csharp
  name: QualifiedAce
  nameWithType: QualifiedAce
  fullName: System.Security.AccessControl.QualifiedAce
  type: Class
  summary: "代表存取控制項目 (ACE)，其中包含限定詞。 辨識符號，由<xref href=&quot;System.Security.AccessControl.AceQualifier&quot;></xref>物件，指定 ACE 允許存取、 拒絕存取，會導致系統稽核還是會導致系統警示。 QualifiedAce 類別是抽象的基底類別，如<xref href=&quot;System.Security.AccessControl.CommonAce&quot;></xref>和<xref href=&quot;System.Security.AccessControl.ObjectAce&quot;></xref>類別。"
  syntax:
    content: 'public abstract class QualifiedAce : System.Security.AccessControl.KnownAce'
  inheritance:
  - System.Object
  - System.Security.AccessControl.GenericAce
  - System.Security.AccessControl.KnownAce
  implements: []
  inheritedMembers:
  - System.Security.AccessControl.GenericAce.AceFlags
  - System.Security.AccessControl.GenericAce.AceType
  - System.Security.AccessControl.GenericAce.AuditFlags
  - System.Security.AccessControl.GenericAce.BinaryLength
  - System.Security.AccessControl.GenericAce.Copy
  - System.Security.AccessControl.GenericAce.CreateFromBinaryForm(System.Byte[],System.Int32)
  - System.Security.AccessControl.GenericAce.Equals(System.Object)
  - System.Security.AccessControl.GenericAce.GetBinaryForm(System.Byte[],System.Int32)
  - System.Security.AccessControl.GenericAce.GetHashCode
  - System.Security.AccessControl.GenericAce.InheritanceFlags
  - System.Security.AccessControl.GenericAce.IsInherited
  - System.Security.AccessControl.GenericAce.op_Equality(System.Security.AccessControl.GenericAce,System.Security.AccessControl.GenericAce)
  - System.Security.AccessControl.GenericAce.op_Inequality(System.Security.AccessControl.GenericAce,System.Security.AccessControl.GenericAce)
  - System.Security.AccessControl.GenericAce.PropagationFlags
  - System.Security.AccessControl.KnownAce.AccessMask
  - System.Security.AccessControl.KnownAce.SecurityIdentifier
  platform:
  - net462
- uid: System.Security.AccessControl.QualifiedAce.AceQualifier
  id: AceQualifier
  parent: System.Security.AccessControl.QualifiedAce
  langs:
  - csharp
  name: AceQualifier
  nameWithType: QualifiedAce.AceQualifier
  fullName: System.Security.AccessControl.QualifiedAce.AceQualifier
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "取得值，指定 ACE 是否允許存取、 拒絕存取，會導致系統稽核，或造成系統警示。"
  syntax:
    content: public System.Security.AccessControl.AceQualifier AceQualifier { get; }
    return:
      type: System.Security.AccessControl.AceQualifier
      description: "值，指定是否 ACE 允許存取、 拒絕存取，導致系統稽核或引起系統警示。"
  overload: System.Security.AccessControl.QualifiedAce.AceQualifier*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.QualifiedAce.GetOpaque
  id: GetOpaque
  parent: System.Security.AccessControl.QualifiedAce
  langs:
  - csharp
  name: GetOpaque()
  nameWithType: QualifiedAce.GetOpaque()
  fullName: System.Security.AccessControl.QualifiedAce.GetOpaque()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "傳回與此相關聯的不透明回呼資料<xref href=&quot;System.Security.AccessControl.QualifiedAce&quot;></xref>物件。"
  remarks: "不透明回呼資料會出現只在回呼存取控制項目 (Ace)。"
  syntax:
    content: public byte[] GetOpaque ();
    parameters: []
    return:
      type: System.Byte[]
      description: "位元組值陣列，代表與此相關聯的不透明回呼資料<xref href=&quot;System.Security.AccessControl.QualifiedAce&quot;></xref>物件。"
  overload: System.Security.AccessControl.QualifiedAce.GetOpaque*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.QualifiedAce.IsCallback
  id: IsCallback
  parent: System.Security.AccessControl.QualifiedAce
  langs:
  - csharp
  name: IsCallback
  nameWithType: QualifiedAce.IsCallback
  fullName: System.Security.AccessControl.QualifiedAce.IsCallback
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "指定是否這<xref href=&quot;System.Security.AccessControl.QualifiedAce&quot;></xref>物件包含回呼的資料。"
  syntax:
    content: public bool IsCallback { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果這個<xref href=&quot;System.Security.AccessControl.QualifiedAce&quot;></xref>物件包含回呼的資料，否則為 false。"
  overload: System.Security.AccessControl.QualifiedAce.IsCallback*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.QualifiedAce.OpaqueLength
  id: OpaqueLength
  parent: System.Security.AccessControl.QualifiedAce
  langs:
  - csharp
  name: OpaqueLength
  nameWithType: QualifiedAce.OpaqueLength
  fullName: System.Security.AccessControl.QualifiedAce.OpaqueLength
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "取得與此相關聯的不透明回呼資料長度<xref href=&quot;System.Security.AccessControl.QualifiedAce&quot;></xref>物件。 這個屬性是僅適用於回呼存取控制項目 (Ace)。"
  syntax:
    content: public int OpaqueLength { get; }
    return:
      type: System.Int32
      description: "回呼不透明資料的長度。"
  overload: System.Security.AccessControl.QualifiedAce.OpaqueLength*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.QualifiedAce.SetOpaque(System.Byte[])
  id: SetOpaque(System.Byte[])
  parent: System.Security.AccessControl.QualifiedAce
  langs:
  - csharp
  name: SetOpaque(Byte[])
  nameWithType: QualifiedAce.SetOpaque(Byte[])
  fullName: System.Security.AccessControl.QualifiedAce.SetOpaque(Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "設定與此相關聯的不透明回呼資料<xref href=&quot;System.Security.AccessControl.QualifiedAce&quot;></xref>物件。"
  remarks: "不透明回呼資料會出現只在回呼存取控制項目 (Ace)。"
  syntax:
    content: public void SetOpaque (byte[] opaque);
    parameters:
    - id: opaque
      type: System.Byte[]
      description: "表示這個回呼不透明資料的位元組值陣列<xref href=&quot;System.Security.AccessControl.QualifiedAce&quot;></xref>物件。"
  overload: System.Security.AccessControl.QualifiedAce.SetOpaque*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.AccessControl.KnownAce
  isExternal: false
  name: System.Security.AccessControl.KnownAce
- uid: System.Security.AccessControl.QualifiedAce.AceQualifier
  parent: System.Security.AccessControl.QualifiedAce
  isExternal: false
  name: AceQualifier
  nameWithType: QualifiedAce.AceQualifier
  fullName: System.Security.AccessControl.QualifiedAce.AceQualifier
- uid: System.Security.AccessControl.AceQualifier
  parent: System.Security.AccessControl
  isExternal: false
  name: AceQualifier
  nameWithType: AceQualifier
  fullName: System.Security.AccessControl.AceQualifier
- uid: System.Security.AccessControl.QualifiedAce.GetOpaque
  parent: System.Security.AccessControl.QualifiedAce
  isExternal: false
  name: GetOpaque()
  nameWithType: QualifiedAce.GetOpaque()
  fullName: System.Security.AccessControl.QualifiedAce.GetOpaque()
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.AccessControl.QualifiedAce.IsCallback
  parent: System.Security.AccessControl.QualifiedAce
  isExternal: false
  name: IsCallback
  nameWithType: QualifiedAce.IsCallback
  fullName: System.Security.AccessControl.QualifiedAce.IsCallback
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.AccessControl.QualifiedAce.OpaqueLength
  parent: System.Security.AccessControl.QualifiedAce
  isExternal: false
  name: OpaqueLength
  nameWithType: QualifiedAce.OpaqueLength
  fullName: System.Security.AccessControl.QualifiedAce.OpaqueLength
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.AccessControl.QualifiedAce.SetOpaque(System.Byte[])
  parent: System.Security.AccessControl.QualifiedAce
  isExternal: false
  name: SetOpaque(Byte[])
  nameWithType: QualifiedAce.SetOpaque(Byte[])
  fullName: System.Security.AccessControl.QualifiedAce.SetOpaque(Byte[])
- uid: System.Security.AccessControl.QualifiedAce.AceQualifier*
  parent: System.Security.AccessControl.QualifiedAce
  isExternal: false
  name: AceQualifier
  nameWithType: QualifiedAce.AceQualifier
- uid: System.Security.AccessControl.QualifiedAce.GetOpaque*
  parent: System.Security.AccessControl.QualifiedAce
  isExternal: false
  name: GetOpaque
  nameWithType: QualifiedAce.GetOpaque
- uid: System.Security.AccessControl.QualifiedAce.IsCallback*
  parent: System.Security.AccessControl.QualifiedAce
  isExternal: false
  name: IsCallback
  nameWithType: QualifiedAce.IsCallback
- uid: System.Security.AccessControl.QualifiedAce.OpaqueLength*
  parent: System.Security.AccessControl.QualifiedAce
  isExternal: false
  name: OpaqueLength
  nameWithType: QualifiedAce.OpaqueLength
- uid: System.Security.AccessControl.QualifiedAce.SetOpaque*
  parent: System.Security.AccessControl.QualifiedAce
  isExternal: false
  name: SetOpaque
  nameWithType: QualifiedAce.SetOpaque
