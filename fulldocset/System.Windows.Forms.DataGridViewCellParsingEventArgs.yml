### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.DataGridViewCellParsingEventArgs
  id: DataGridViewCellParsingEventArgs
  children:
  - System.Windows.Forms.DataGridViewCellParsingEventArgs.#ctor(System.Int32,System.Int32,System.Object,System.Type,System.Windows.Forms.DataGridViewCellStyle)
  - System.Windows.Forms.DataGridViewCellParsingEventArgs.ColumnIndex
  - System.Windows.Forms.DataGridViewCellParsingEventArgs.InheritedCellStyle
  - System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied
  - System.Windows.Forms.DataGridViewCellParsingEventArgs.RowIndex
  langs:
  - csharp
  name: DataGridViewCellParsingEventArgs
  nameWithType: DataGridViewCellParsingEventArgs
  fullName: System.Windows.Forms.DataGridViewCellParsingEventArgs
  type: Class
  summary: "提供資料給<xref href=&quot;System.Windows.Forms.DataGridView.CellParsing&quot;></xref>事件<xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref>控制項。"
  remarks: "處理<xref:System.Windows.Forms.DataGridView.CellParsing>事件以提供自訂的值從使用者指定的值轉換值的轉換儲存格所指定的型別<xref:System.Windows.Forms.DataGridViewCell.ValueType%2A>屬性。</xref:System.Windows.Forms.DataGridViewCell.ValueType%2A> </xref:System.Windows.Forms.DataGridView.CellParsing>       當您處理<xref:System.Windows.Forms.DataGridView.CellParsing>事件，您可以自行轉換值，或您可以自訂預設轉換。</xref:System.Windows.Forms.DataGridView.CellParsing> 例如，您可以將值轉換自己使用資料格<xref:System.Windows.Forms.DataGridViewCell.ParseFormattedValue%2A>使用類型轉換器，您所選擇的方法。</xref:System.Windows.Forms.DataGridViewCell.ParseFormattedValue%2A> 或者，您可以讓預設的類型轉換器剖析值，但修改<xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>， <xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A>，和<xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A>屬性所傳回的物件<xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.InheritedCellStyle%2A?displayProperty=fullName>屬性，使用儲存格初始化<xref:System.Windows.Forms.DataGridViewCell.InheritedStyle%2A>屬性。</xref:System.Windows.Forms.DataGridViewCell.InheritedStyle%2A> </xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.InheritedCellStyle%2A?displayProperty=fullName> </xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A> </xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A> </xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>       當您自行轉換值時，取代初始，其格式的值<xref:System.Windows.Forms.ConvertEventArgs.Value%2A?displayProperty=fullName>屬性之資料格所指定的型別轉換的值與<xref:System.Windows.Forms.DataGridViewCell.ValueType%2A>屬性。</xref:System.Windows.Forms.DataGridViewCell.ValueType%2A> </xref:System.Windows.Forms.ConvertEventArgs.Value%2A?displayProperty=fullName> 若要指出不再剖析是必要，設定<xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied%2A?displayProperty=fullName>屬性`true`。</xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied%2A?displayProperty=fullName>       此事件處理常式完成時，如果<xref:System.Windows.Forms.ConvertEventArgs.Value%2A>是`null`或不正確的型別，或<xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied%2A>屬性是`false`、<xref:System.Windows.Forms.ConvertEventArgs.Value%2A>使用資料格會剖析<xref:System.Windows.Forms.DataGridViewCell.ParseFormattedValue%2A>方法使用預設類型轉換器。</xref:System.Windows.Forms.DataGridViewCell.ParseFormattedValue%2A> </xref:System.Windows.Forms.ConvertEventArgs.Value%2A> </xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied%2A> </xref:System.Windows.Forms.ConvertEventArgs.Value%2A> 這個方法的預設實作會剖析值使用<xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>， <xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A>，和<xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A>傳入的儲存格樣式屬性</xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A></xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A></xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A> 如果值不等於<xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>、 值剖析使用的<xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A>屬性和傳入的類型轉換器</xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A></xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>       若要自訂的資料格的值轉換為格式化的值來顯示，處理<xref:System.Windows.Forms.DataGridView.CellFormatting>事件。</xref:System.Windows.Forms.DataGridView.CellFormatting>       如需處理事件的詳細資訊，請參閱[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。"
  example:
  - "The following code example demonstrates using DataGridViewCellParsingEventArgs to check the validity of date entries.  \n  \n [!code-vb[System.Windows.Forms.GridViewUnbound#2](~/add/codesnippet/visualbasic/t-system.windows.forms.d_59_1.vb)]\n [!code-cpp[System.Windows.Forms.GridViewUnbound#2](~/add/codesnippet/cpp/t-system.windows.forms.d_59_1.cpp)]\n [!code-cs[System.Windows.Forms.GridViewUnbound#2](~/add/codesnippet/csharp/t-system.windows.forms.d_59_1.cs)]"
  syntax:
    content: 'public class DataGridViewCellParsingEventArgs : System.Windows.Forms.ConvertEventArgs'
  inheritance:
  - System.EventArgs
  - System.Windows.Forms.ConvertEventArgs
  implements: []
  inheritedMembers:
  - System.Windows.Forms.ConvertEventArgs.DesiredType
  - System.Windows.Forms.ConvertEventArgs.Value
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCellParsingEventArgs.#ctor(System.Int32,System.Int32,System.Object,System.Type,System.Windows.Forms.DataGridViewCellStyle)
  id: '#ctor(System.Int32,System.Int32,System.Object,System.Type,System.Windows.Forms.DataGridViewCellStyle)'
  parent: System.Windows.Forms.DataGridViewCellParsingEventArgs
  langs:
  - csharp
  name: DataGridViewCellParsingEventArgs(Int32,Int32,Object,Type,DataGridViewCellStyle)
  nameWithType: DataGridViewCellParsingEventArgs.DataGridViewCellParsingEventArgs(Int32,Int32,Object,Type,DataGridViewCellStyle)
  fullName: System.Windows.Forms.DataGridViewCellParsingEventArgs.DataGridViewCellParsingEventArgs(Int32,Int32,Object,Type,DataGridViewCellStyle)
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "初始化的新執行個體<xref href=&quot;System.Windows.Forms.DataGridViewCellParsingEventArgs&quot;></xref>類別。"
  syntax:
    content: public DataGridViewCellParsingEventArgs (int rowIndex, int columnIndex, object value, Type desiredType, System.Windows.Forms.DataGridViewCellStyle inheritedCellStyle);
    parameters:
    - id: rowIndex
      type: System.Int32
      description: "已變更的資料格資料列索引。"
    - id: columnIndex
      type: System.Int32
      description: "已變更的資料格資料行索引。"
    - id: value
      type: System.Object
      description: "新的值。"
    - id: desiredType
      type: System.Type
      description: "新值的類型。"
    - id: inheritedCellStyle
      type: System.Windows.Forms.DataGridViewCellStyle
      description: "套用至已變更的資料格的樣式。"
  overload: System.Windows.Forms.DataGridViewCellParsingEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCellParsingEventArgs.ColumnIndex
  id: ColumnIndex
  parent: System.Windows.Forms.DataGridViewCellParsingEventArgs
  langs:
  - csharp
  name: ColumnIndex
  nameWithType: DataGridViewCellParsingEventArgs.ColumnIndex
  fullName: System.Windows.Forms.DataGridViewCellParsingEventArgs.ColumnIndex
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得需要剖析的資料格資料的資料行索引。"
  remarks: "ColumnIndex 屬性用於<xref:System.Windows.Forms.DataGridView.Columns%2A><xref:System.Windows.Forms.DataGridView>.</xref:System.Windows.Forms.DataGridView>屬性</xref:System.Windows.Forms.DataGridView.Columns%2A>來取得索引"
  example:
  - "The following code example demonstrates using ColumnIndex to discover if the changed cell is in the date column.  \n  \n [!code-vb[System.Windows.Forms.GridViewUnbound#2](~/add/codesnippet/visualbasic/p-system.windows.forms.d_44_1.vb)]\n [!code-cpp[System.Windows.Forms.GridViewUnbound#2](~/add/codesnippet/cpp/p-system.windows.forms.d_44_1.cpp)]\n [!code-cs[System.Windows.Forms.GridViewUnbound#2](~/add/codesnippet/csharp/p-system.windows.forms.d_44_1.cs)]"
  syntax:
    content: public int ColumnIndex { get; }
    return:
      type: System.Int32
      description: "已變更的資料格資料行索引。"
  overload: System.Windows.Forms.DataGridViewCellParsingEventArgs.ColumnIndex*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCellParsingEventArgs.InheritedCellStyle
  id: InheritedCellStyle
  parent: System.Windows.Forms.DataGridViewCellParsingEventArgs
  langs:
  - csharp
  name: InheritedCellStyle
  nameWithType: DataGridViewCellParsingEventArgs.InheritedCellStyle
  fullName: System.Windows.Forms.DataGridViewCellParsingEventArgs.InheritedCellStyle
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得或設定套用至已編輯的儲存格的樣式。"
  remarks: "您可以使用這個屬性來判斷有效的格式儲存格。 設定這個屬性，或變更這個屬性會傳回物件的屬性沒有作用，除非已<xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied%2A>是`false`當事件處理常式會結束。</xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied%2A> 在此情況下， <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>， <xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A>，和<xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A>的儲存格樣式屬性會用來剖析資料格的值。</xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A> </xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A> </xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>"
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.DataGridView.CellParsing?displayProperty=fullName> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.DataGridView> named `DataGridView1`. Then ensure that the event handler is associated with the <xref:System.Windows.Forms.DataGridView.CellParsing?displayProperty=fullName> event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#303](~/add/codesnippet/csharp/p-system.windows.forms.d_66_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#303](~/add/codesnippet/visualbasic/p-system.windows.forms.d_66_1.vb)]"
  syntax:
    content: public System.Windows.Forms.DataGridViewCellStyle InheritedCellStyle { get; set; }
    return:
      type: System.Windows.Forms.DataGridViewCellStyle
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewCellStyle&quot;> </xref> ，代表目前正在編輯的儲存格樣式。 預設值是資料格的值<xref:System.Windows.Forms.DataGridViewCell.InheritedStyle*>屬性。</xref:System.Windows.Forms.DataGridViewCell.InheritedStyle*>"
  overload: System.Windows.Forms.DataGridViewCellParsingEventArgs.InheritedCellStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied
  id: ParsingApplied
  parent: System.Windows.Forms.DataGridViewCellParsingEventArgs
  langs:
  - csharp
  name: ParsingApplied
  nameWithType: DataGridViewCellParsingEventArgs.ParsingApplied
  fullName: System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得或設定值，指出是否已成功剖析的資料格的值。"
  remarks: "A<xref:System.Windows.Forms.DataGridViewCellParsingEventHandler>設定 ParsingApplied 屬性，指出是否已成功剖析新儲存格的值，而且不需要任何進一步的轉換。</xref:System.Windows.Forms.DataGridViewCellParsingEventHandler>"
  example:
  - "The following code example sets ParsingApplied to `true` when the cell's value is successfully parsed.  \n  \n [!code-vb[System.Windows.Forms.GridViewUnbound#2](~/add/codesnippet/visualbasic/p-system.windows.forms.d_1_1.vb)]\n [!code-cpp[System.Windows.Forms.GridViewUnbound#2](~/add/codesnippet/cpp/p-system.windows.forms.d_1_1.cpp)]\n [!code-cs[System.Windows.Forms.GridViewUnbound#2](~/add/codesnippet/csharp/p-system.windows.forms.d_1_1.cs)]"
  syntax:
    content: public bool ParsingApplied { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果已成功地剖析資料格的值;否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCellParsingEventArgs.RowIndex
  id: RowIndex
  parent: System.Windows.Forms.DataGridViewCellParsingEventArgs
  langs:
  - csharp
  name: RowIndex
  nameWithType: DataGridViewCellParsingEventArgs.RowIndex
  fullName: System.Windows.Forms.DataGridViewCellParsingEventArgs.RowIndex
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得需要剖析的資料格的資料列索引。"
  remarks: "RowIndex 屬性用於<xref:System.Windows.Forms.DataGridView.Rows%2A><xref:System.Windows.Forms.DataGridView>.</xref:System.Windows.Forms.DataGridView>屬性</xref:System.Windows.Forms.DataGridView.Rows%2A>來取得索引"
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.DataGridView.CellParsing?displayProperty=fullName> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.DataGridView> named `DataGridView1`. Then ensure that the event handler is associated with the <xref:System.Windows.Forms.DataGridView.CellParsing?displayProperty=fullName> event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#303](~/add/codesnippet/csharp/p-system.windows.forms.d_48_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#303](~/add/codesnippet/visualbasic/p-system.windows.forms.d_48_1.vb)]"
  syntax:
    content: public int RowIndex { get; }
    return:
      type: System.Int32
      description: "已變更的資料格資料列索引。"
  overload: System.Windows.Forms.DataGridViewCellParsingEventArgs.RowIndex*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Forms.ConvertEventArgs
  isExternal: false
  name: System.Windows.Forms.ConvertEventArgs
- uid: System.Windows.Forms.DataGridViewCellParsingEventArgs.#ctor(System.Int32,System.Int32,System.Object,System.Type,System.Windows.Forms.DataGridViewCellStyle)
  parent: System.Windows.Forms.DataGridViewCellParsingEventArgs
  isExternal: false
  name: DataGridViewCellParsingEventArgs(Int32,Int32,Object,Type,DataGridViewCellStyle)
  nameWithType: DataGridViewCellParsingEventArgs.DataGridViewCellParsingEventArgs(Int32,Int32,Object,Type,DataGridViewCellStyle)
  fullName: System.Windows.Forms.DataGridViewCellParsingEventArgs.DataGridViewCellParsingEventArgs(Int32,Int32,Object,Type,DataGridViewCellStyle)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Windows.Forms.DataGridViewCellStyle
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewCellStyle
  nameWithType: DataGridViewCellStyle
  fullName: System.Windows.Forms.DataGridViewCellStyle
- uid: System.Windows.Forms.DataGridViewCellParsingEventArgs.ColumnIndex
  parent: System.Windows.Forms.DataGridViewCellParsingEventArgs
  isExternal: false
  name: ColumnIndex
  nameWithType: DataGridViewCellParsingEventArgs.ColumnIndex
  fullName: System.Windows.Forms.DataGridViewCellParsingEventArgs.ColumnIndex
- uid: System.Windows.Forms.DataGridViewCellParsingEventArgs.InheritedCellStyle
  parent: System.Windows.Forms.DataGridViewCellParsingEventArgs
  isExternal: false
  name: InheritedCellStyle
  nameWithType: DataGridViewCellParsingEventArgs.InheritedCellStyle
  fullName: System.Windows.Forms.DataGridViewCellParsingEventArgs.InheritedCellStyle
- uid: System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied
  parent: System.Windows.Forms.DataGridViewCellParsingEventArgs
  isExternal: false
  name: ParsingApplied
  nameWithType: DataGridViewCellParsingEventArgs.ParsingApplied
  fullName: System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.DataGridViewCellParsingEventArgs.RowIndex
  parent: System.Windows.Forms.DataGridViewCellParsingEventArgs
  isExternal: false
  name: RowIndex
  nameWithType: DataGridViewCellParsingEventArgs.RowIndex
  fullName: System.Windows.Forms.DataGridViewCellParsingEventArgs.RowIndex
- uid: System.Windows.Forms.DataGridViewCellParsingEventArgs.#ctor*
  parent: System.Windows.Forms.DataGridViewCellParsingEventArgs
  isExternal: false
  name: DataGridViewCellParsingEventArgs
  nameWithType: DataGridViewCellParsingEventArgs.DataGridViewCellParsingEventArgs
- uid: System.Windows.Forms.DataGridViewCellParsingEventArgs.ColumnIndex*
  parent: System.Windows.Forms.DataGridViewCellParsingEventArgs
  isExternal: false
  name: ColumnIndex
  nameWithType: DataGridViewCellParsingEventArgs.ColumnIndex
- uid: System.Windows.Forms.DataGridViewCellParsingEventArgs.InheritedCellStyle*
  parent: System.Windows.Forms.DataGridViewCellParsingEventArgs
  isExternal: false
  name: InheritedCellStyle
  nameWithType: DataGridViewCellParsingEventArgs.InheritedCellStyle
- uid: System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied*
  parent: System.Windows.Forms.DataGridViewCellParsingEventArgs
  isExternal: false
  name: ParsingApplied
  nameWithType: DataGridViewCellParsingEventArgs.ParsingApplied
- uid: System.Windows.Forms.DataGridViewCellParsingEventArgs.RowIndex*
  parent: System.Windows.Forms.DataGridViewCellParsingEventArgs
  isExternal: false
  name: RowIndex
  nameWithType: DataGridViewCellParsingEventArgs.RowIndex
