### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  id: BaseControlArray
  children:
  - Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.#ctor
  - Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.#ctor(System.ComponentModel.IContainer)
  - Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseCanExtend(System.Object)
  - Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseGetIndex(System.Object)
  - Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseGetItem(System.Int16)
  - Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseResetIndex(System.Object)
  - Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseSetIndex(System.Object,System.Int16,System.Boolean)
  - Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseShouldSerializeIndex(System.Object)
  - Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.components
  - Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.controlAddedAtDesignTime
  - Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.controls
  - Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Count
  - Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Dispose(System.Boolean)
  - Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.fIsEndInitCalled
  - Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetControlInstanceType
  - Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetEnumerator
  - Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.HookUpControlEvents(System.Object)
  - Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.indices
  - Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.LBound
  - Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Load(System.Int16)
  - Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.System#ComponentModel#ISupportInitialize#BeginInit
  - Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.System#ComponentModel#ISupportInitialize#EndInit
  - Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.UBound
  - Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Unload(System.Int16)
  langs:
  - csharp
  name: BaseControlArray
  nameWithType: BaseControlArray
  fullName: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  type: Class
  summary: "實作從 Visual Basic 6.0 通用控制項陣列中的應用程式的基本功能升級。"
  remarks: "您通常不會從繼承`BaseControlArray`。 若要建立您自己的控制項陣列，繼承自中的控制項陣列類別的其中一個`Microsoft.VisualBasic.Compatibility.VB6`命名空間。      > [!NOTE] > 函式和物件中的<xref:Microsoft.VisualBasic.Compatibility.VB6>命名空間所提供的工具，以便從 Visual Basic 6.0 來升級[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]。</xref:Microsoft.VisualBasic.Compatibility.VB6> 在大部分情況下，這些函式和物件會複製您可以在其他命名空間中找到的功能[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]。 會需要這些只有當 Visual Basic 6.0 程式碼模型與大幅[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]實作。"
  syntax:
    content: >-
      [System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")]

      public abstract class BaseControlArray : System.ComponentModel.Component, System.ComponentModel.ISupportInitialize
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  implements:
  - System.ComponentModel.ISupportInitialize
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.#ctor
  id: '#ctor'
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  langs:
  - csharp
  name: BaseControlArray()
  nameWithType: BaseControlArray.BaseControlArray()
  fullName: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseControlArray()
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "初始化的新執行個體<xref href=&quot;Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray&quot;></xref>類別。"
  remarks: "<xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray>類別是從 Visual Basic 6.0 升級應用程式中使用的所有控制項陣列的基底類別。</xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> 通常不會使用這個類別建立類別的執行個體，因為通常不會直接呼叫這個建構函式，但而由衍生類別呼叫。      > [!NOTE] > 函式和物件中的<xref:Microsoft.VisualBasic.Compatibility.VB6>命名空間所提供的工具，以便從 Visual Basic 6.0 來升級[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]。</xref:Microsoft.VisualBasic.Compatibility.VB6> 在大部分情況下，這些函式和物件會複製您可以在其他命名空間中找到的功能[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]。 會需要這些只有當 Visual Basic 6.0 程式碼模型與大幅[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]實作。"
  syntax:
    content: protected BaseControlArray ();
    parameters: []
  overload: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.#ctor(System.ComponentModel.IContainer)
  id: '#ctor(System.ComponentModel.IContainer)'
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  langs:
  - csharp
  name: BaseControlArray(IContainer)
  nameWithType: BaseControlArray.BaseControlArray(IContainer)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseControlArray(IContainer)
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "初始化的新執行個體<xref href=&quot;Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray&quot;></xref>類別，並選擇性指定的容器。"
  remarks: "<xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray>類別是從 Visual Basic 6.0 升級應用程式中使用的所有控制項陣列的基底類別。</xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> 通常不會使用這個類別建立類別的執行個體，因為通常不會直接呼叫這個建構函式，但而由衍生類別呼叫。      > [!NOTE] > 函式和物件中的<xref:Microsoft.VisualBasic.Compatibility.VB6>命名空間所提供的工具，以便從 Visual Basic 6.0 來升級[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]。</xref:Microsoft.VisualBasic.Compatibility.VB6> 在大部分情況下，這些函式和物件會複製您可以在其他命名空間中找到的功能[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]。 會需要這些只有當 Visual Basic 6.0 程式碼模型與大幅[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]實作。"
  syntax:
    content: protected BaseControlArray (System.ComponentModel.IContainer Container);
    parameters:
    - id: Container
      type: System.ComponentModel.IContainer
      description: "<xref href=&quot;System.ComponentModel.IContainer&quot;> </xref>裝載控制項陣列。"
  overload: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseCanExtend(System.Object)
  id: BaseCanExtend(System.Object)
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  langs:
  - csharp
  name: BaseCanExtend(Object)
  nameWithType: BaseControlArray.BaseCanExtend(Object)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseCanExtend(Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "取得值，指出控制項是否為控制項陣列的成員。"
  remarks: "<xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray>類別是從 Visual Basic 6.0 升級應用程式中使用的所有控制項陣列的基底類別。</xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> 若要建立類別的執行個體通常不使用這個類別，因為這`Protected`方法通常不會直接呼叫，但而由衍生類別呼叫。      > [!NOTE] > 函式和物件中的<xref:Microsoft.VisualBasic.Compatibility.VB6>命名空間所提供的工具，以便從 Visual Basic 6.0 來升級[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]。</xref:Microsoft.VisualBasic.Compatibility.VB6> 在大部分情況下，這些函式和物件會複製您可以在其他命名空間中找到的功能[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]。 會需要這些只有當 Visual Basic 6.0 程式碼模型與大幅[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]實作。"
  syntax:
    content: protected bool BaseCanExtend (object target);
    parameters:
    - id: target
      type: System.Object
      description: "<xref href=&quot;System.Windows.Forms.Control&quot;> </xref>測試。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果控制項是控制項陣列的成員;否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseCanExtend*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseGetIndex(System.Object)
  id: BaseGetIndex(System.Object)
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  langs:
  - csharp
  name: BaseGetIndex(Object)
  nameWithType: BaseControlArray.BaseGetIndex(Object)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseGetIndex(Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "控制項陣列中取得控制項的索引。"
  remarks: "<xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray>類別是從 Visual Basic 6.0 升級應用程式中使用的所有控制項陣列的基底類別。</xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> 若要建立類別的執行個體通常不使用這個類別，因為這`Protected`方法通常不會直接呼叫，但而由衍生類別呼叫。      > [!NOTE] > 函式和物件中的<xref:Microsoft.VisualBasic.Compatibility.VB6>命名空間所提供的工具，以便從 Visual Basic 6.0 來升級[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]。</xref:Microsoft.VisualBasic.Compatibility.VB6> 在大部分情況下，這些函式和物件會複製您可以在其他命名空間中找到的功能[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]。 會需要這些只有當 Visual Basic 6.0 程式碼模型與大幅[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]實作。"
  syntax:
    content: protected short BaseGetIndex (object ctl);
    parameters:
    - id: ctl
      type: System.Object
      description: "<xref href=&quot;System.Windows.Forms.Control&quot;> </xref>您想要擷取索引。"
    return:
      type: System.Int16
      description: "A <xref uid=&quot;langword_csharp_Short&quot; name=&quot;Short&quot; href=&quot;&quot;> </xref>的整數，表示控制項陣列中控制項的索引。"
  overload: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseGetIndex*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseGetItem(System.Int16)
  id: BaseGetItem(System.Int16)
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  langs:
  - csharp
  name: BaseGetItem(Int16)
  nameWithType: BaseControlArray.BaseGetItem(Int16)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseGetItem(Int16)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "取得控制項陣列中的指定索引的控制。"
  remarks: "<xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray>類別是從 Visual Basic 6.0 升級應用程式中使用的所有控制項陣列的基底類別。</xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> 若要建立類別的執行個體通常不使用這個類別，因為這`Protected`方法通常不會直接呼叫，但而由衍生類別呼叫。      > [!NOTE] > 函式和物件中的<xref:Microsoft.VisualBasic.Compatibility.VB6>命名空間所提供的工具，以便從 Visual Basic 6.0 來升級[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]。</xref:Microsoft.VisualBasic.Compatibility.VB6> 在大部分情況下，這些函式和物件會複製您可以在其他命名空間中找到的功能[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]。 會需要這些只有當 Visual Basic 6.0 程式碼模型與大幅[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]實作。"
  syntax:
    content: protected object BaseGetItem (short Index);
    parameters:
    - id: Index
      type: System.Int16
      description: "整數，表示控制項陣列中控制項的索引。"
    return:
      type: System.Object
      description: "The <xref href=&quot;System.Windows.Forms.Control&quot;></xref> at the specified <code>Index</code>."
  overload: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseGetItem*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseResetIndex(System.Object)
  id: BaseResetIndex(System.Object)
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  langs:
  - csharp
  name: BaseResetIndex(Object)
  nameWithType: BaseControlArray.BaseResetIndex(Object)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseResetIndex(Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "不支援<xref href=&quot;Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray&quot;></xref>類別。"
  remarks: "不支援這個方法。       <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray>類別是從 Visual Basic 6.0 升級應用程式中使用的所有控制項陣列的基底類別。</xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> -> [!NOTE] > 函式和物件中的<xref:Microsoft.VisualBasic.Compatibility.VB6>命名空間所提供的工具，以便從 Visual Basic 6.0 來升級[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]。</xref:Microsoft.VisualBasic.Compatibility.VB6> 在大部分情況下，這些函式和物件會複製您可以在其他命名空間中找到的功能[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]。 會需要這些只有當 Visual Basic 6.0 程式碼模型與大幅[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]實作。"
  syntax:
    content: protected void BaseResetIndex (object o);
    parameters:
    - id: o
      type: System.Object
      description: "A <xref href=&quot;System.Windows.Forms.Control&quot;></xref>."
  overload: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseResetIndex*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseSetIndex(System.Object,System.Int16,System.Boolean)
  id: BaseSetIndex(System.Object,System.Int16,System.Boolean)
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  langs:
  - csharp
  name: BaseSetIndex(Object,Int16,Boolean)
  nameWithType: BaseControlArray.BaseSetIndex(Object,Int16,Boolean)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseSetIndex(Object,Int16,Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "控制項陣列中設定控制項的索引。"
  remarks: "<xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray>類別是從 Visual Basic 6.0 升級應用程式中使用的所有控制項陣列的基底類別。</xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> 若要建立類別的執行個體通常不使用這個類別，因為這`Protected`方法通常不會直接呼叫，但而由衍生類別呼叫。      > [!NOTE] > 函式和物件中的<xref:Microsoft.VisualBasic.Compatibility.VB6>命名空間所提供的工具，以便從 Visual Basic 6.0 來升級[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]。</xref:Microsoft.VisualBasic.Compatibility.VB6> 在大部分情況下，這些函式和物件會複製您可以在其他命名空間中找到的功能[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]。 會需要這些只有當 Visual Basic 6.0 程式碼模型與大幅[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]實作。"
  syntax:
    content: protected void BaseSetIndex (object ctl, short Index, bool fIsDynamic = false);
    parameters:
    - id: ctl
      type: System.Object
      description: "<xref href=&quot;System.Windows.Forms.Control&quot;> </xref>您想要設定索引。"
    - id: Index
      type: System.Int16
      description: "A <xref uid=&quot;langword_csharp_Short&quot; name=&quot;Short&quot; href=&quot;&quot;> </xref>整數，表示控制項的索引。"
    - id: fIsDynamic
      type: System.Boolean
      description: "選擇性。 A <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref>指定是否在設計階段建立控制項 (<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>) 或執行階段 (<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>)。"
  overload: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseSetIndex*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseShouldSerializeIndex(System.Object)
  id: BaseShouldSerializeIndex(System.Object)
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  langs:
  - csharp
  name: BaseShouldSerializeIndex(Object)
  nameWithType: BaseControlArray.BaseShouldSerializeIndex(Object)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseShouldSerializeIndex(Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "傳回值，指出控制項是否為控制項陣列的成員。"
  remarks: "<xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray>類別是從 Visual Basic 6.0 升級應用程式中使用的所有控制項陣列的基底類別。</xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> 若要建立類別的執行個體通常不使用這個類別，因為這`Protected`方法通常不會直接呼叫，但而由衍生類別呼叫。      > [!NOTE] > 函式和物件中的<xref:Microsoft.VisualBasic.Compatibility.VB6>命名空間所提供的工具，以便從 Visual Basic 6.0 來升級[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]。</xref:Microsoft.VisualBasic.Compatibility.VB6> 在大部分情況下，這些函式和物件會複製您可以在其他命名空間中找到的功能[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]。 會需要這些只有當 Visual Basic 6.0 程式碼模型與大幅[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]實作。"
  syntax:
    content: protected bool BaseShouldSerializeIndex (object o);
    parameters:
    - id: o
      type: System.Object
      description: "A <xref href=&quot;System.Windows.Forms.Control&quot;></xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果控制項是控制項陣列的成員;否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseShouldSerializeIndex*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.components
  id: components
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  langs:
  - csharp
  name: components
  nameWithType: BaseControlArray.components
  fullName: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.components
  type: Field
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "儲存的容器控制項陣列。"
  remarks: "<xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray>類別是從 Visual Basic 6.0 升級應用程式中使用的所有控制項陣列的基底類別。</xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray>      > [!NOTE] > 函式和物件中的<xref:Microsoft.VisualBasic.Compatibility.VB6>命名空間所提供的工具，以便從 Visual Basic 6.0 來升級[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]。</xref:Microsoft.VisualBasic.Compatibility.VB6> 在大部分情況下，這些函式和物件會複製您可以在其他命名空間中找到的功能[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]。 會需要這些只有當 Visual Basic 6.0 程式碼模型與大幅[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]實作。"
  syntax:
    content: protected System.ComponentModel.IContainer components;
    return:
      type: System.ComponentModel.IContainer
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.controlAddedAtDesignTime
  id: controlAddedAtDesignTime
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  langs:
  - csharp
  name: controlAddedAtDesignTime
  nameWithType: BaseControlArray.controlAddedAtDesignTime
  fullName: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.controlAddedAtDesignTime
  type: Field
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "儲存值來追蹤是否在設計階段或執行階段建立的控制項陣列中的控制項。"
  remarks: "<xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray>類別是從 Visual Basic 6.0 升級應用程式中使用的所有控制項陣列的基底類別。</xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray>      > [!NOTE] > 函式和物件中的<xref:Microsoft.VisualBasic.Compatibility.VB6>命名空間所提供的工具，以便從 Visual Basic 6.0 來升級[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]。</xref:Microsoft.VisualBasic.Compatibility.VB6> 在大部分情況下，這些函式和物件會複製您可以在其他命名空間中找到的功能[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]。 會需要這些只有當 Visual Basic 6.0 程式碼模型與大幅[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]實作。"
  syntax:
    content: protected System.Collections.Hashtable controlAddedAtDesignTime;
    return:
      type: System.Collections.Hashtable
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.controls
  id: controls
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  langs:
  - csharp
  name: controls
  nameWithType: BaseControlArray.controls
  fullName: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.controls
  type: Field
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "儲存值，表示控制項陣列中的控制項。"
  remarks: "<xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray>類別是從 Visual Basic 6.0 升級應用程式中使用的所有控制項陣列的基底類別。</xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray>      > [!NOTE] > 函式和物件中的<xref:Microsoft.VisualBasic.Compatibility.VB6>命名空間所提供的工具，以便從 Visual Basic 6.0 來升級[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]。</xref:Microsoft.VisualBasic.Compatibility.VB6> 在大部分情況下，這些函式和物件會複製您可以在其他命名空間中找到的功能[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]。 會需要這些只有當 Visual Basic 6.0 程式碼模型與大幅[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]實作。"
  syntax:
    content: protected System.Collections.Hashtable controls;
    return:
      type: System.Collections.Hashtable
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Count
  id: Count
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  langs:
  - csharp
  name: Count()
  nameWithType: BaseControlArray.Count()
  fullName: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Count()
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "控制項陣列中傳回控制項的數目。"
  remarks: "您可以使用這個屬性在[For...下一個陳述式](~/add/includes/ajax-current-ext-md.md)控制項陣列中的執行在控制項上的作業。       <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray>類別是從 Visual Basic 6.0 升級應用程式中使用的所有控制項陣列的基底類別。</xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray>      > [!NOTE] > 函式和物件中的<xref:Microsoft.VisualBasic.Compatibility.VB6>命名空間所提供的工具，以便從 Visual Basic 6.0 來升級[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]。</xref:Microsoft.VisualBasic.Compatibility.VB6> 在大部分情況下，這些函式和物件會複製您可以在其他命名空間中找到的功能[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]。 會需要這些只有當 Visual Basic 6.0 程式碼模型與大幅[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]實作。"
  syntax:
    content: public short Count ();
    parameters: []
    return:
      type: System.Int16
      description: "Short，包含控制項的數字。"
  overload: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Count*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: BaseControlArray.Dispose(Boolean)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Dispose(Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "釋放控制項陣列中的控制項所使用的 unmanaged 的資源並選擇性釋放 managed 的資源。"
  remarks: "這個方法會呼叫公用`Dispose()`方法和<xref:System.Object.Finalize%2A>方法。</xref:System.Object.Finalize%2A> `Dispose()`叫用受保護`Dispose(Boolean)`disposing 參數設定為具有方法`true`。 <xref:System.Object.Finalize%2A>叫用`Dispose`disposing 參數設為`false`。</xref:System.Object.Finalize%2A>       當處置參數是`true`，這個方法會釋放任何參考這個控制項的 managed 物件所掌握的資源。 這個方法會叫用`Dispose()`每個參考物件的方法。"
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>表示釋放 managed 和 unmanaged 資源，<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>表示只釋放 unmanaged 的資源。"
  overload: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Dispose*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.fIsEndInitCalled
  id: fIsEndInitCalled
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  langs:
  - csharp
  name: fIsEndInitCalled
  nameWithType: BaseControlArray.fIsEndInitCalled
  fullName: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.fIsEndInitCalled
  type: Field
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "儲存值，指出控制項陣列容器的初始化程式碼是否已完成執行。"
  remarks: "<xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray>類別是從 Visual Basic 6.0 升級應用程式中使用的所有控制項陣列的基底類別。</xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray>      > [!NOTE] > 函式和物件中的<xref:Microsoft.VisualBasic.Compatibility.VB6>命名空間所提供的工具，以便從 Visual Basic 6.0 來升級[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]。</xref:Microsoft.VisualBasic.Compatibility.VB6> 在大部分情況下，這些函式和物件會複製您可以在其他命名空間中找到的功能[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]。 會需要這些只有當 Visual Basic 6.0 程式碼模型與大幅[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]實作。"
  syntax:
    content: protected bool fIsEndInitCalled;
    return:
      type: System.Boolean
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetControlInstanceType
  id: GetControlInstanceType
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  langs:
  - csharp
  name: GetControlInstanceType()
  nameWithType: BaseControlArray.GetControlInstanceType()
  fullName: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetControlInstanceType()
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "控制項陣列中傳回控制項的類型。"
  syntax:
    content: protected abstract Type GetControlInstanceType ();
    parameters: []
    return:
      type: System.Type
      description: "必須覆寫這個方法。       <xref href=&quot;Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray&quot;> </xref>類別是從 Visual Basic 6.0 升級應用程式中使用的所有控制項陣列的基底類別。 若要建立類別的執行個體通常不使用這個類別，因為這<xref uid=&quot;langword_csharp_Protected&quot; name=&quot;Protected&quot; href=&quot;&quot;></xref>方法通常不會直接呼叫，但而由衍生類別呼叫。       <div class=&quot;alert NOTE&quot;>    函式和物件中<xref href=&quot;Microsoft.VisualBasic.Compatibility.VB6&quot;></xref>命名空間所提供的工具，以便從 Visual Basic 6.0 來升級[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]。 在大部分情況下，這些函式和物件會複製您可以在其他命名空間中找到的功能[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]。 會需要這些只有當 Visual Basic 6.0 程式碼模型與大幅[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]實作。      </div>"
  overload: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetControlInstanceType*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetEnumerator
  id: GetEnumerator
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: BaseControlArray.GetEnumerator()
  fullName: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetEnumerator()
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "傳回列舉值物件，可用來逐一查看控制項陣列的參考。"
  remarks: "<xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray>類別是從 Visual Basic 6.0 升級應用程式中使用的所有控制項陣列的基底類別。</xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray>      > [!NOTE] > 函式和物件中的<xref:Microsoft.VisualBasic.Compatibility.VB6>命名空間所提供的工具，以便從 Visual Basic 6.0 來升級[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]。</xref:Microsoft.VisualBasic.Compatibility.VB6> 在大部分情況下，這些函式和物件會複製您可以在其他命名空間中找到的功能[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]。 會需要這些只有當 Visual Basic 6.0 程式碼模型與大幅[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]實作。"
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "A<xref:System.Collections.IEnumerator>物件。</xref:System.Collections.IEnumerator>"
  overload: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.HookUpControlEvents(System.Object)
  id: HookUpControlEvents(System.Object)
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  langs:
  - csharp
  name: HookUpControlEvents(Object)
  nameWithType: BaseControlArray.HookUpControlEvents(Object)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.HookUpControlEvents(Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "控制項陣列中加入控制項的事件處理常式。"
  remarks: "必須覆寫這個方法。       <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray>類別是從 Visual Basic 6.0 升級應用程式中使用的所有控制項陣列的基底類別。</xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray>      > [!NOTE] > 函式和物件中的<xref:Microsoft.VisualBasic.Compatibility.VB6>命名空間所提供的工具，以便從 Visual Basic 6.0 來升級[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]。</xref:Microsoft.VisualBasic.Compatibility.VB6> 在大部分情況下，這些函式和物件會複製您可以在其他命名空間中找到的功能[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]。 會需要這些只有當 Visual Basic 6.0 程式碼模型與大幅[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]實作。"
  syntax:
    content: protected abstract void HookUpControlEvents (object o);
    parameters:
    - id: o
      type: System.Object
      description: "A <xref href=&quot;System.Windows.Forms.Control&quot;></xref>."
  overload: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.HookUpControlEvents*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.indices
  id: indices
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  langs:
  - csharp
  name: indices
  nameWithType: BaseControlArray.indices
  fullName: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.indices
  type: Field
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "儲存控制項陣列索引。"
  remarks: "<xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray>類別是從 Visual Basic 6.0 升級應用程式中使用的所有控制項陣列的基底類別。</xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray>      > [!NOTE] > 函式和物件中的<xref:Microsoft.VisualBasic.Compatibility.VB6>命名空間所提供的工具，以便從 Visual Basic 6.0 來升級[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]。</xref:Microsoft.VisualBasic.Compatibility.VB6> 在大部分情況下，這些函式和物件會複製您可以在其他命名空間中找到的功能[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]。 會需要這些只有當 Visual Basic 6.0 程式碼模型與大幅[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]實作。"
  syntax:
    content: protected System.Collections.Hashtable indices;
    return:
      type: System.Collections.Hashtable
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.LBound
  id: LBound
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  langs:
  - csharp
  name: LBound()
  nameWithType: BaseControlArray.LBound()
  fullName: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.LBound()
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "傳回<xref uid=&quot;langword_csharp_Short&quot; name=&quot;Short&quot; href=&quot;&quot;> </xref> ，其中包含的最小可用註標控制項陣列。"
  remarks: "`LBound`函數搭配<xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.UBound%2A>函式來判斷控制項陣列的大小。</xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.UBound%2A>       <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray>類別是從 Visual Basic 6.0 升級應用程式中使用的所有控制項陣列的基底類別。</xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray>      > [!NOTE] > 函式和物件中的<xref:Microsoft.VisualBasic.Compatibility.VB6>命名空間所提供的工具，以便從 Visual Basic 6.0 來升級[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]。</xref:Microsoft.VisualBasic.Compatibility.VB6> 在大部分情況下，這些函式和物件會複製您可以在其他命名空間中找到的功能[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]。 會需要這些只有當 Visual Basic 6.0 程式碼模型與大幅[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]實作。"
  syntax:
    content: public short LBound ();
    parameters: []
    return:
      type: System.Int16
      description: "A <xref uid=&quot;langword_csharp_Short&quot; name=&quot;Short&quot; href=&quot;&quot;> </xref>包含控制項陣列的下限。"
  overload: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.LBound*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Load(System.Int16)
  id: Load(System.Int16)
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  langs:
  - csharp
  name: Load(Int16)
  nameWithType: BaseControlArray.Load(Int16)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Load(Int16)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "控制項陣列中建立新的項目。"
  remarks: "這個方法相當於 Visual Basic 6.0`Load`函式動態建立新的控制項陣列項目。       <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray>類別是從 Visual Basic 6.0 升級應用程式中使用的所有控制項陣列的基底類別。</xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray>      > [!NOTE] > 函式和物件中的<xref:Microsoft.VisualBasic.Compatibility.VB6>命名空間所提供的工具，以便從 Visual Basic 6.0 來升級[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]。</xref:Microsoft.VisualBasic.Compatibility.VB6> 在大部分情況下，這些函式和物件會複製您可以在其他命名空間中找到的功能[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]。 會需要這些只有當 Visual Basic 6.0 程式碼模型與大幅[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]實作。"
  syntax:
    content: public void Load (short Index);
    parameters:
    - id: Index
      type: System.Int16
      description: "A <xref uid=&quot;langword_csharp_Short&quot; name=&quot;Short&quot; href=&quot;&quot;> </xref>代表新控制項的索引。"
  overload: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Load*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.System#ComponentModel#ISupportInitialize#BeginInit
  id: System#ComponentModel#ISupportInitialize#BeginInit
  isEii: true
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  langs:
  - csharp
  name: System.ComponentModel.ISupportInitialize.BeginInit()
  nameWithType: BaseControlArray.System.ComponentModel.ISupportInitialize.BeginInit()
  fullName: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.System.ComponentModel.ISupportInitialize.BeginInit()
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "開始初始化控制項。"
  remarks: "設計環境通常會使用這個方法來開始初始化用於表單或為另一個元件所使用的元件。 <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.EndInit%2A>方法結束初始化。</xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.EndInit%2A> 使用`BeginInit`和<xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.EndInit%2A>方法可防止控制項完全初始化之前使用。</xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.EndInit%2A> 初始化發生於執行階段。      > [!NOTE] > 函式和物件中的<xref:Microsoft.VisualBasic.Compatibility.VB6>命名空間所提供的工具，以便從 Visual Basic 6.0 來升級[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]。</xref:Microsoft.VisualBasic.Compatibility.VB6> 在大部分情況下，這些函式和物件會複製您可以在其他命名空間中找到的功能[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]。 會需要這些只有當 Visual Basic 6.0 程式碼模型與大幅[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]實作。"
  syntax:
    content: void ISupportInitialize.BeginInit ();
    parameters: []
  overload: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.System#ComponentModel#ISupportInitialize#BeginInit*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.System#ComponentModel#ISupportInitialize#EndInit
  id: System#ComponentModel#ISupportInitialize#EndInit
  isEii: true
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  langs:
  - csharp
  name: System.ComponentModel.ISupportInitialize.EndInit()
  nameWithType: BaseControlArray.System.ComponentModel.ISupportInitialize.EndInit()
  fullName: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.System.ComponentModel.ISupportInitialize.EndInit()
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "結束初始化控制項。"
  remarks: "設計環境通常會使用這個方法來完成初始化用於表單或為另一個元件所使用的元件。 `EndInit`方法結束初始化。 使用<xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BeginInit%2A>和`EndInit`方法可防止控制項完全初始化之前使用。</xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BeginInit%2A> 初始化發生於執行階段。      > [!NOTE] > 函式和物件中的<xref:Microsoft.VisualBasic.Compatibility.VB6>命名空間所提供的工具，以便從 Visual Basic 6.0 來升級[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]。</xref:Microsoft.VisualBasic.Compatibility.VB6> 在大部分情況下，這些函式和物件會複製您可以在其他命名空間中找到的功能[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]。 會需要這些只有當 Visual Basic 6.0 程式碼模型與大幅[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]實作。"
  syntax:
    content: void ISupportInitialize.EndInit ();
    parameters: []
  overload: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.System#ComponentModel#ISupportInitialize#EndInit*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.UBound
  id: UBound
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  langs:
  - csharp
  name: UBound()
  nameWithType: BaseControlArray.UBound()
  fullName: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.UBound()
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "傳回<xref uid=&quot;langword_csharp_Short&quot; name=&quot;Short&quot; href=&quot;&quot;> </xref> ，其中包含的控制項陣列的最大可用註標。"
  remarks: "`UBound`函數搭配<xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.LBound%2A>函式來判斷控制項陣列的大小。</xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.LBound%2A>       <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray>類別是從 Visual Basic 6.0 升級應用程式中使用的所有控制項陣列的基底類別。</xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray>      > [!NOTE] > 函式和物件中的<xref:Microsoft.VisualBasic.Compatibility.VB6>命名空間所提供的工具，以便從 Visual Basic 6.0 來升級[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]。</xref:Microsoft.VisualBasic.Compatibility.VB6> 在大部分情況下，這些函式和物件會複製您可以在其他命名空間中找到的功能[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]。 會需要這些只有當 Visual Basic 6.0 程式碼模型與大幅[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]實作。"
  syntax:
    content: public short UBound ();
    parameters: []
    return:
      type: System.Int16
      description: "A <xref uid=&quot;langword_csharp_Short&quot; name=&quot;Short&quot; href=&quot;&quot;> </xref>包含控制項陣列的下限。"
  overload: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.UBound*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Unload(System.Int16)
  id: Unload(System.Int16)
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  langs:
  - csharp
  name: Unload(Int16)
  nameWithType: BaseControlArray.Unload(Int16)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Unload(Int16)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "控制項陣列中移除控制項。"
  remarks: "這個方法相當於 Visual Basic 6.0`Unload`函式，以動態方式移除控制項陣列項目。      > [!NOTE] > 利用以動態方式加入的控制項<xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Load%2A>方法可以從控制項陣列中移除。</xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Load%2A>       <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray>類別是從 Visual Basic 6.0 升級應用程式中使用的所有控制項陣列的基底類別。</xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray>      > [!NOTE] > 函式和物件中的<xref:Microsoft.VisualBasic.Compatibility.VB6>命名空間所提供的工具，以便從 Visual Basic 6.0 來升級[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]。</xref:Microsoft.VisualBasic.Compatibility.VB6> 在大部分情況下，這些函式和物件會複製您可以在其他命名空間中找到的功能[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]。 會需要這些只有當 Visual Basic 6.0 程式碼模型與大幅[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]實作。"
  syntax:
    content: public void Unload (short Index);
    parameters:
    - id: Index
      type: System.Int16
      description: "A <xref uid=&quot;langword_csharp_Short&quot; name=&quot;Short&quot; href=&quot;&quot;> </xref>代表要移除之控制項的索引。"
  overload: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Unload*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.Component
  isExternal: false
  name: System.ComponentModel.Component
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.#ctor
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  isExternal: false
  name: BaseControlArray()
  nameWithType: BaseControlArray.BaseControlArray()
  fullName: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseControlArray()
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.#ctor(System.ComponentModel.IContainer)
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  isExternal: false
  name: BaseControlArray(IContainer)
  nameWithType: BaseControlArray.BaseControlArray(IContainer)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseControlArray(IContainer)
- uid: System.ComponentModel.IContainer
  parent: System.ComponentModel
  isExternal: false
  name: IContainer
  nameWithType: IContainer
  fullName: System.ComponentModel.IContainer
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseCanExtend(System.Object)
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  isExternal: false
  name: BaseCanExtend(Object)
  nameWithType: BaseControlArray.BaseCanExtend(Object)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseCanExtend(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseGetIndex(System.Object)
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  isExternal: false
  name: BaseGetIndex(Object)
  nameWithType: BaseControlArray.BaseGetIndex(Object)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseGetIndex(Object)
- uid: System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseGetItem(System.Int16)
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  isExternal: false
  name: BaseGetItem(Int16)
  nameWithType: BaseControlArray.BaseGetItem(Int16)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseGetItem(Int16)
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseResetIndex(System.Object)
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  isExternal: false
  name: BaseResetIndex(Object)
  nameWithType: BaseControlArray.BaseResetIndex(Object)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseResetIndex(Object)
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseSetIndex(System.Object,System.Int16,System.Boolean)
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  isExternal: false
  name: BaseSetIndex(Object,Int16,Boolean)
  nameWithType: BaseControlArray.BaseSetIndex(Object,Int16,Boolean)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseSetIndex(Object,Int16,Boolean)
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseShouldSerializeIndex(System.Object)
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  isExternal: false
  name: BaseShouldSerializeIndex(Object)
  nameWithType: BaseControlArray.BaseShouldSerializeIndex(Object)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseShouldSerializeIndex(Object)
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.components
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  isExternal: false
  name: components
  nameWithType: BaseControlArray.components
  fullName: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.components
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.controlAddedAtDesignTime
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  isExternal: false
  name: controlAddedAtDesignTime
  nameWithType: BaseControlArray.controlAddedAtDesignTime
  fullName: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.controlAddedAtDesignTime
- uid: System.Collections.Hashtable
  parent: System.Collections
  isExternal: false
  name: Hashtable
  nameWithType: Hashtable
  fullName: System.Collections.Hashtable
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.controls
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  isExternal: false
  name: controls
  nameWithType: BaseControlArray.controls
  fullName: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.controls
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Count
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  isExternal: false
  name: Count()
  nameWithType: BaseControlArray.Count()
  fullName: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Count()
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Dispose(System.Boolean)
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: BaseControlArray.Dispose(Boolean)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Dispose(Boolean)
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.fIsEndInitCalled
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  isExternal: false
  name: fIsEndInitCalled
  nameWithType: BaseControlArray.fIsEndInitCalled
  fullName: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.fIsEndInitCalled
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetControlInstanceType
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  isExternal: false
  name: GetControlInstanceType()
  nameWithType: BaseControlArray.GetControlInstanceType()
  fullName: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetControlInstanceType()
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetEnumerator
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  isExternal: false
  name: GetEnumerator()
  nameWithType: BaseControlArray.GetEnumerator()
  fullName: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.HookUpControlEvents(System.Object)
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  isExternal: false
  name: HookUpControlEvents(Object)
  nameWithType: BaseControlArray.HookUpControlEvents(Object)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.HookUpControlEvents(Object)
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.indices
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  isExternal: false
  name: indices
  nameWithType: BaseControlArray.indices
  fullName: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.indices
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.LBound
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  isExternal: false
  name: LBound()
  nameWithType: BaseControlArray.LBound()
  fullName: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.LBound()
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Load(System.Int16)
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  isExternal: false
  name: Load(Int16)
  nameWithType: BaseControlArray.Load(Int16)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Load(Int16)
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.System#ComponentModel#ISupportInitialize#BeginInit
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  isExternal: false
  name: System.ComponentModel.ISupportInitialize.BeginInit()
  nameWithType: BaseControlArray.System.ComponentModel.ISupportInitialize.BeginInit()
  fullName: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.System.ComponentModel.ISupportInitialize.BeginInit()
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.System#ComponentModel#ISupportInitialize#EndInit
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  isExternal: false
  name: System.ComponentModel.ISupportInitialize.EndInit()
  nameWithType: BaseControlArray.System.ComponentModel.ISupportInitialize.EndInit()
  fullName: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.System.ComponentModel.ISupportInitialize.EndInit()
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.UBound
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  isExternal: false
  name: UBound()
  nameWithType: BaseControlArray.UBound()
  fullName: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.UBound()
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Unload(System.Int16)
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  isExternal: false
  name: Unload(Int16)
  nameWithType: BaseControlArray.Unload(Int16)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Unload(Int16)
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.#ctor*
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  isExternal: false
  name: BaseControlArray
  nameWithType: BaseControlArray.BaseControlArray
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseCanExtend*
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  isExternal: false
  name: BaseCanExtend
  nameWithType: BaseControlArray.BaseCanExtend
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseGetIndex*
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  isExternal: false
  name: BaseGetIndex
  nameWithType: BaseControlArray.BaseGetIndex
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseGetItem*
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  isExternal: false
  name: BaseGetItem
  nameWithType: BaseControlArray.BaseGetItem
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseResetIndex*
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  isExternal: false
  name: BaseResetIndex
  nameWithType: BaseControlArray.BaseResetIndex
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseSetIndex*
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  isExternal: false
  name: BaseSetIndex
  nameWithType: BaseControlArray.BaseSetIndex
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseShouldSerializeIndex*
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  isExternal: false
  name: BaseShouldSerializeIndex
  nameWithType: BaseControlArray.BaseShouldSerializeIndex
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Count*
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  isExternal: false
  name: Count
  nameWithType: BaseControlArray.Count
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Dispose*
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  isExternal: false
  name: Dispose
  nameWithType: BaseControlArray.Dispose
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetControlInstanceType*
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  isExternal: false
  name: GetControlInstanceType
  nameWithType: BaseControlArray.GetControlInstanceType
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetEnumerator*
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  isExternal: false
  name: GetEnumerator
  nameWithType: BaseControlArray.GetEnumerator
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.HookUpControlEvents*
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  isExternal: false
  name: HookUpControlEvents
  nameWithType: BaseControlArray.HookUpControlEvents
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.LBound*
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  isExternal: false
  name: LBound
  nameWithType: BaseControlArray.LBound
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Load*
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  isExternal: false
  name: Load
  nameWithType: BaseControlArray.Load
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.System#ComponentModel#ISupportInitialize#BeginInit*
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  isExternal: false
  name: System.ComponentModel.ISupportInitialize.BeginInit
  nameWithType: BaseControlArray.System.ComponentModel.ISupportInitialize.BeginInit
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.System#ComponentModel#ISupportInitialize#EndInit*
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  isExternal: false
  name: System.ComponentModel.ISupportInitialize.EndInit
  nameWithType: BaseControlArray.System.ComponentModel.ISupportInitialize.EndInit
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.UBound*
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  isExternal: false
  name: UBound
  nameWithType: BaseControlArray.UBound
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Unload*
  parent: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  isExternal: false
  name: Unload
  nameWithType: BaseControlArray.Unload
