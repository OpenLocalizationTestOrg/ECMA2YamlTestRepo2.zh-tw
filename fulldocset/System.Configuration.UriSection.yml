### YamlMime:ManagedReference
items:
- uid: System.Configuration.UriSection
  id: UriSection
  children:
  - System.Configuration.UriSection.#ctor
  - System.Configuration.UriSection.Idn
  - System.Configuration.UriSection.IriParsing
  - System.Configuration.UriSection.Properties
  - System.Configuration.UriSection.SchemeSettings
  langs:
  - csharp
  name: UriSection
  nameWithType: UriSection
  fullName: System.Configuration.UriSection
  type: Class
  summary: "表示組態檔中的 Uri 區段。"
  remarks: "現有<xref:System.Uri?displayProperty=fullName>類別已經擴充成支援國際資源識別項 (IRI) 和國際化網域名稱。</xref:System.Uri?displayProperty=fullName> 目前的使用者不會看到從.NET Framework 2.0 行為的任何變更，除非它們特別啟用 IRI 和 IDN。 這可確保先前版本的.NET framework 應用程式相容性。       可以使用 UriSection 類別來擷取 IRI 和 IDN 組態設定。"
  syntax:
    content: 'public sealed class UriSection : System.Configuration.ConfigurationSection'
  inheritance:
  - System.Object
  - System.Configuration.ConfigurationElement
  - System.Configuration.ConfigurationSection
  implements: []
  inheritedMembers:
  - System.Configuration.ConfigurationElement.CurrentConfiguration
  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)
  - System.Configuration.ConfigurationElement.ElementInformation
  - System.Configuration.ConfigurationElement.ElementProperty
  - System.Configuration.ConfigurationElement.Equals(System.Object)
  - System.Configuration.ConfigurationElement.EvaluationContext
  - System.Configuration.ConfigurationElement.GetHashCode
  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)
  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)
  - System.Configuration.ConfigurationElement.HasContext
  - System.Configuration.ConfigurationElement.Init
  - System.Configuration.ConfigurationElement.InitializeDefault
  - System.Configuration.ConfigurationElement.IsReadOnly
  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)
  - System.Configuration.ConfigurationElement.Item(System.String)
  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)
  - System.Configuration.ConfigurationElement.LockAllAttributesExcept
  - System.Configuration.ConfigurationElement.LockAllElementsExcept
  - System.Configuration.ConfigurationElement.LockAttributes
  - System.Configuration.ConfigurationElement.LockElements
  - System.Configuration.ConfigurationElement.LockItem
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)
  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)
  - System.Configuration.ConfigurationElement.PostDeserialize
  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)
  - System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)
  - System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)
  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)
  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)
  - System.Configuration.ConfigurationElement.SetReadOnly
  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
  - System.Configuration.ConfigurationSection.DeserializeSection(System.Xml.XmlReader)
  - System.Configuration.ConfigurationSection.GetRuntimeObject
  - System.Configuration.ConfigurationSection.IsModified
  - System.Configuration.ConfigurationSection.ResetModified
  - System.Configuration.ConfigurationSection.SectionInformation
  - System.Configuration.ConfigurationSection.SerializeSection(System.Configuration.ConfigurationElement,System.String,System.Configuration.ConfigurationSaveMode)
  - System.Configuration.ConfigurationSection.ShouldSerializeElementInTargetVersion(System.Configuration.ConfigurationElement,System.String,System.Runtime.Versioning.FrameworkName)
  - System.Configuration.ConfigurationSection.ShouldSerializePropertyInTargetVersion(System.Configuration.ConfigurationProperty,System.String,System.Runtime.Versioning.FrameworkName,System.Configuration.ConfigurationElement)
  - System.Configuration.ConfigurationSection.ShouldSerializeSectionInTargetVersion(System.Runtime.Versioning.FrameworkName)
  platform:
  - net462
- uid: System.Configuration.UriSection.#ctor
  id: '#ctor'
  parent: System.Configuration.UriSection
  langs:
  - csharp
  name: UriSection()
  nameWithType: UriSection.UriSection()
  fullName: System.Configuration.UriSection.UriSection()
  type: Constructor
  assemblies:
  - System
  namespace: System.Configuration
  summary: "初始化的新執行個體<xref href=&quot;System.Configuration.UriSection&quot;></xref>類別。"
  remarks: "現有<xref:System.Uri?displayProperty=fullName>類別已經擴充成支援國際資源識別項 (IRI) 和國際化網域名稱。</xref:System.Uri?displayProperty=fullName> 目前的使用者不會看到從.NET Framework 2.0 行為的任何變更，除非它們特別啟用 IRI 和 IDN。 這可確保先前版本的.NET framework 應用程式相容性。       可以使用<xref:System.Configuration.UriSection>類別</xref:System.Configuration.UriSection>來擷取 IRI 和 IDN 組態設定       如需有關 IRI 支援的詳細資訊，請參閱<xref:System.Uri?displayProperty=fullName>類別</xref:System.Uri?displayProperty=fullName>的 < 備註 > 一節"
  syntax:
    content: public UriSection ();
    parameters: []
  overload: System.Configuration.UriSection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.UriSection.Idn
  id: Idn
  parent: System.Configuration.UriSection
  langs:
  - csharp
  name: Idn
  nameWithType: UriSection.Idn
  fullName: System.Configuration.UriSection.Idn
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "取得<xref href=&quot;System.Configuration.IdnElement&quot;></xref>物件，其中包含組態設定的國際網域名稱 (IDN) 中的處理&lt;xref:System.Uri?displayProperty=fullName&gt;類別。"
  remarks: "現有<xref:System.Uri?displayProperty=fullName>類別已經擴充成支援國際資源識別項 (IRI) 和國際化網域名稱。</xref:System.Uri?displayProperty=fullName> 目前的使用者不會看到從.NET Framework 2.0 行為的任何變更，除非它們特別啟用 IRI 和 IDN。 這可確保先前版本的.NET framework 應用程式相容性。       可以使用<xref:System.Configuration.UriSection>類別</xref:System.Configuration.UriSection>來擷取 IRI 和 IDN 組態設定 Idn 屬性傳回的 IDN 組態設定處理<xref:System.Uri?displayProperty=fullName>類別。</xref:System.Uri?displayProperty=fullName>       為了能夠處理的 IDN 必須啟用 IRI 處理。 如果 IRI 處理已停用，IDN 處理將會設定為預設設定，其中的.NET Framework 2.0 行為用於相容性，而不會使用 IDN 名稱。       國際化網域名稱 (IDN) 屬性只會控制 IDN 處理。 根據預設，會執行所有其他 IRI 處理 （例如字元正規化）。       組態設定<xref:System.Configuration.IdnElement>會讀取一次當第一個<xref:System.Uri?displayProperty=fullName>類別建構。</xref:System.Uri?displayProperty=fullName> </xref:System.Configuration.IdnElement> 組態設定，該時間之後的變更都會被忽略。       如需有關 IRI 支援的詳細資訊，請參閱<xref:System.Uri?displayProperty=fullName>類別</xref:System.Uri?displayProperty=fullName>的 < 備註 > 一節"
  syntax:
    content: public System.Configuration.IdnElement Idn { get; }
    return:
      type: System.Configuration.IdnElement
      description: "組態設定的國際網域名稱 (IDN) 中的處理&lt;xref:System.Uri?displayProperty=fullName&gt;類別。"
  overload: System.Configuration.UriSection.Idn*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.UriSection.IriParsing
  id: IriParsing
  parent: System.Configuration.UriSection
  langs:
  - csharp
  name: IriParsing
  nameWithType: UriSection.IriParsing
  fullName: System.Configuration.UriSection.IriParsing
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "取得<xref href=&quot;System.Configuration.IriParsingElement&quot;></xref>物件，其中包含的組態設定中的國際資源識別項 (IRI) 剖析&lt;xref:System.Uri?displayProperty=fullName&gt;類別。"
  remarks: "現有<xref:System.Uri?displayProperty=fullName>類別已經擴充成支援國際資源識別項 (IRI) 和國際化網域名稱。</xref:System.Uri?displayProperty=fullName> 目前的使用者不會看到從.NET Framework 2.0 行為的任何變更，除非它們特別啟用 IRI 和 IDN。 這可確保先前版本的.NET framework 應用程式相容性。       可以使用<xref:System.Configuration.UriSection>類別</xref:System.Configuration.UriSection>來擷取 IRI 和 IDN 組態設定 IriParsing 屬性傳回的組態設定 IRI 剖析<xref:System.Uri?displayProperty=fullName>類別。</xref:System.Uri?displayProperty=fullName>       為了能夠處理的 IDN 必須啟用 IRI 處理。 如果 IRI 處理已停用，IDN 處理將會設定為預設設定，其中的.NET Framework 2.0 行為用於相容性，而不會使用 IDN 名稱。       國際化網域名稱 (IDN) 屬性只會控制 IDN 處理。 根據預設，會執行所有其他 IRI 處理 （例如字元正規化）。       組態設定<xref:System.Configuration.IriParsingElement>會讀取一次當第一個<xref:System.Uri?displayProperty=fullName>類別建構。</xref:System.Uri?displayProperty=fullName> </xref:System.Configuration.IriParsingElement> 組態設定，該時間之後的變更都會被忽略。       如需有關 IRI 支援的詳細資訊，請參閱<xref:System.Uri?displayProperty=fullName>類別</xref:System.Uri?displayProperty=fullName>的 < 備註 > 一節"
  syntax:
    content: public System.Configuration.IriParsingElement IriParsing { get; }
    return:
      type: System.Configuration.IriParsingElement
      description: "國際資源識別項 (IRI) 剖析中的組態設定&lt;xref:System.Uri?displayProperty=fullName&gt;類別。"
  overload: System.Configuration.UriSection.IriParsing*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.UriSection.Properties
  id: Properties
  parent: System.Configuration.UriSection
  langs:
  - csharp
  name: Properties
  nameWithType: UriSection.Properties
  fullName: System.Configuration.UriSection.Properties
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  syntax:
    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }
    return:
      type: System.Configuration.ConfigurationPropertyCollection
      description: "即將加入。"
  overload: System.Configuration.UriSection.Properties*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.UriSection.SchemeSettings
  id: SchemeSettings
  parent: System.Configuration.UriSection
  langs:
  - csharp
  name: SchemeSettings
  nameWithType: UriSection.SchemeSettings
  fullName: System.Configuration.UriSection.SchemeSettings
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "取得<xref href=&quot;System.Configuration.SchemeSettingElementCollection&quot;></xref>物件，其中包含剖析中配置的組態設定&lt;xref:System.Uri?displayProperty=fullName&gt;類別。"
  remarks: "SchemeSettings 屬性不是泛型。 只有 genericUriParserOptions 支援 HTTP 與 HTTPS 配置的 =&quot;DontUnescapePathDotsAndSlashes 」 組態設定。 會忽略所有其他設定。"
  syntax:
    content: public System.Configuration.SchemeSettingElementCollection SchemeSettings { get; }
    return:
      type: System.Configuration.SchemeSettingElementCollection
      description: "剖析中配置的組態設定&lt;xref:System.Uri?displayProperty=fullName&gt;類別"
  overload: System.Configuration.UriSection.SchemeSettings*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.ConfigurationSection
  isExternal: false
  name: System.Configuration.ConfigurationSection
- uid: System.Configuration.UriSection.#ctor
  parent: System.Configuration.UriSection
  isExternal: false
  name: UriSection()
  nameWithType: UriSection.UriSection()
  fullName: System.Configuration.UriSection.UriSection()
- uid: System.Configuration.UriSection.Idn
  parent: System.Configuration.UriSection
  isExternal: false
  name: Idn
  nameWithType: UriSection.Idn
  fullName: System.Configuration.UriSection.Idn
- uid: System.Configuration.IdnElement
  parent: System.Configuration
  isExternal: false
  name: IdnElement
  nameWithType: IdnElement
  fullName: System.Configuration.IdnElement
- uid: System.Configuration.UriSection.IriParsing
  parent: System.Configuration.UriSection
  isExternal: false
  name: IriParsing
  nameWithType: UriSection.IriParsing
  fullName: System.Configuration.UriSection.IriParsing
- uid: System.Configuration.IriParsingElement
  parent: System.Configuration
  isExternal: false
  name: IriParsingElement
  nameWithType: IriParsingElement
  fullName: System.Configuration.IriParsingElement
- uid: System.Configuration.UriSection.Properties
  parent: System.Configuration.UriSection
  isExternal: false
  name: Properties
  nameWithType: UriSection.Properties
  fullName: System.Configuration.UriSection.Properties
- uid: System.Configuration.ConfigurationPropertyCollection
  parent: System.Configuration
  isExternal: false
  name: ConfigurationPropertyCollection
  nameWithType: ConfigurationPropertyCollection
  fullName: System.Configuration.ConfigurationPropertyCollection
- uid: System.Configuration.UriSection.SchemeSettings
  parent: System.Configuration.UriSection
  isExternal: false
  name: SchemeSettings
  nameWithType: UriSection.SchemeSettings
  fullName: System.Configuration.UriSection.SchemeSettings
- uid: System.Configuration.SchemeSettingElementCollection
  parent: System.Configuration
  isExternal: false
  name: SchemeSettingElementCollection
  nameWithType: SchemeSettingElementCollection
  fullName: System.Configuration.SchemeSettingElementCollection
- uid: System.Configuration.UriSection.#ctor*
  parent: System.Configuration.UriSection
  isExternal: false
  name: UriSection
  nameWithType: UriSection.UriSection
- uid: System.Configuration.UriSection.Idn*
  parent: System.Configuration.UriSection
  isExternal: false
  name: Idn
  nameWithType: UriSection.Idn
- uid: System.Configuration.UriSection.IriParsing*
  parent: System.Configuration.UriSection
  isExternal: false
  name: IriParsing
  nameWithType: UriSection.IriParsing
- uid: System.Configuration.UriSection.Properties*
  parent: System.Configuration.UriSection
  isExternal: false
  name: Properties
  nameWithType: UriSection.Properties
- uid: System.Configuration.UriSection.SchemeSettings*
  parent: System.Configuration.UriSection
  isExternal: false
  name: SchemeSettings
  nameWithType: UriSection.SchemeSettings
