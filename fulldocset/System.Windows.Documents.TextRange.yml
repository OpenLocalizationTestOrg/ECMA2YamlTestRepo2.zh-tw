### YamlMime:ManagedReference
items:
- uid: System.Windows.Documents.TextRange
  id: TextRange
  children:
  - System.Windows.Documents.TextRange.#ctor(System.Windows.Documents.TextPointer,System.Windows.Documents.TextPointer)
  - System.Windows.Documents.TextRange.ApplyPropertyValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.Documents.TextRange.CanLoad(System.String)
  - System.Windows.Documents.TextRange.CanSave(System.String)
  - System.Windows.Documents.TextRange.Changed
  - System.Windows.Documents.TextRange.ClearAllProperties
  - System.Windows.Documents.TextRange.Contains(System.Windows.Documents.TextPointer)
  - System.Windows.Documents.TextRange.End
  - System.Windows.Documents.TextRange.GetPropertyValue(System.Windows.DependencyProperty)
  - System.Windows.Documents.TextRange.IsEmpty
  - System.Windows.Documents.TextRange.Load(System.IO.Stream,System.String)
  - System.Windows.Documents.TextRange.Save(System.IO.Stream,System.String)
  - System.Windows.Documents.TextRange.Save(System.IO.Stream,System.String,System.Boolean)
  - System.Windows.Documents.TextRange.Select(System.Windows.Documents.TextPointer,System.Windows.Documents.TextPointer)
  - System.Windows.Documents.TextRange.Start
  - System.Windows.Documents.TextRange.Text
  langs:
  - csharp
  name: TextRange
  nameWithType: TextRange
  fullName: System.Windows.Documents.TextRange
  type: Class
  summary: "表示選取的兩個內容<xref href=&quot;System.Windows.Documents.TextPointer&quot;></xref>位置。"
  remarks: "TextRange 類別導入了下列詞彙。      -**選取**-A TextRange 是由兩個位置之間的內容的選取範圍**Textpointer**。  下列其中一種定位選取項目，對於固定錨點，而另一個位置是可移動。  這是類似的選擇會由使用者使用滑鼠或鍵盤的運作方式。      -**目前選取範圍**-TextRange 一律表示內容中的選取範圍，因為合理的只是指選取項目以做為 TextRange*目前選取範圍*。      -**文字容器**-*文字容器*form 於非固定格式內容的最終框線的項目，則由 TextRange 永遠落在的文字容器內的選取項目。  目前，文字容器必須是其中一個<xref:System.Windows.Documents.FlowDocument>或<xref:System.Windows.Controls.TextBlock>.</xref:System.Windows.Controls.TextBlock> </xref:System.Windows.Documents.FlowDocument>      -**文件**-共同文字容器內所包含的內容指*文件*。       是否有其他的詳細資訊相關的類似*位置*，請參閱<xref:System.Windows.Documents.TextPointer>.</xref:System.Windows.Documents.TextPointer>"
  example:
  - "The following example demonstrates using the <xref:System.Windows.Documents.TextRange.Text%2A> property of a TextRange to return the plain text representation of a specified <xref:System.Windows.Documents.FlowDocument>.  \n  \n [!code-cs[TextPointer_Snippets#_TextRange_Text](~/add/codesnippet/csharp/TextPointer_Snippets/Window1.xaml.cs#_textrange_text)]\n [!code-vb[TextPointer_Snippets#_TextRange_Text](~/add/codesnippet/visualbasic/textpointer_snippets/window1.xaml.vb#_textrange_text)]"
  syntax:
    content: public class TextRange
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Documents.TextRange.#ctor(System.Windows.Documents.TextPointer,System.Windows.Documents.TextPointer)
  id: '#ctor(System.Windows.Documents.TextPointer,System.Windows.Documents.TextPointer)'
  parent: System.Windows.Documents.TextRange
  langs:
  - csharp
  name: TextRange(TextPointer,TextPointer)
  nameWithType: TextRange.TextRange(TextPointer,TextPointer)
  fullName: System.Windows.Documents.TextRange.TextRange(TextPointer,TextPointer)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "初始化的新執行個體<xref href=&quot;System.Windows.Documents.TextRange&quot;></xref>類別，採用兩個指定<xref href=&quot;System.Windows.Documents.TextPointer&quot;></xref>位置做為新範圍的開頭和結尾位置。"
  remarks: "A<xref:System.Windows.Documents.TextRange>形成的選取項目所指定的兩個位置之間**Textpointer**。</xref:System.Windows.Documents.TextRange>  這些位置其中 (由`position1`) 與選取項目，而另一個位置相對固定 (由`position2`) 是可移動。  這是類似的選擇會由使用者使用滑鼠或鍵盤的運作方式。       <xref:System.Windows.Documents.TextRange>您可以調整以符合任何選取項目啟發學習法所適用的文件，其中包含新<xref:System.Windows.Documents.TextRange>。</xref:System.Windows.Documents.TextRange></xref:System.Windows.Documents.TextRange>新的實際的兩端"
  example:
  - "The following example demonstrates the use of the <xref:System.Windows.Documents.TextRange> constructor.  \n  \n [!code-cs[TextPointer_Snippets#_TextRange_Text](~/add/codesnippet/csharp/TextPointer_Snippets/Window1.xaml.cs#_textrange_text)]\n [!code-vb[TextPointer_Snippets#_TextRange_Text](~/add/codesnippet/visualbasic/textpointer_snippets/window1.xaml.vb#_textrange_text)]"
  syntax:
    content: public TextRange (System.Windows.Documents.TextPointer position1, System.Windows.Documents.TextPointer position2);
    parameters:
    - id: position1
      type: System.Windows.Documents.TextPointer
      description: "一個用來形成新的選取範圍的結束標記的固定錨點位置<xref href=&quot;System.Windows.Documents.TextRange&quot;> </xref>。"
    - id: position2
      type: System.Windows.Documents.TextPointer
      description: "標記選取項目用來形成新的另一端的可移動位置<xref href=&quot;System.Windows.Documents.TextRange&quot;> </xref>。"
  overload: System.Windows.Documents.TextRange.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "發生時<code> position1 </code>和<code> position2 </code>不位在相同的文件中。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Occurs when <code>position1</code> or <code>position2</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Documents.TextRange.ApplyPropertyValue(System.Windows.DependencyProperty,System.Object)
  id: ApplyPropertyValue(System.Windows.DependencyProperty,System.Object)
  parent: System.Windows.Documents.TextRange
  langs:
  - csharp
  name: ApplyPropertyValue(DependencyProperty,Object)
  nameWithType: TextRange.ApplyPropertyValue(DependencyProperty,Object)
  fullName: System.Windows.Documents.TextRange.ApplyPropertyValue(DependencyProperty,Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "適用於目前的選取項目指定的格式設定屬性和值。"
  remarks: "這個方法適用於插入適當的<xref:System.Windows.Documents.Inline>項目，例如<xref:System.Windows.Documents.Bold>和<xref:System.Windows.Documents.Italic>選取範圍到以這個<xref:System.Windows.Documents.TextRange>.</xref:System.Windows.Documents.TextRange> 、</xref:System.Windows.Documents.Italic></xref:System.Windows.Documents.Bold></xref:System.Windows.Documents.Inline>格式"
  example:
  - "The following example demonstrates the use of the ApplyPropertyValue method.  \n  \n [!code-cs[TextPointer_Snippets#_TextRange_LoadSave](~/add/codesnippet/csharp/TextPointer_Snippets/Window1.xaml.cs#_textrange_loadsave)]\n [!code-vb[TextPointer_Snippets#_TextRange_LoadSave](~/add/codesnippet/visualbasic/textpointer_snippets/window1.xaml.vb#_textrange_loadsave)]"
  syntax:
    content: public void ApplyPropertyValue (System.Windows.DependencyProperty formattingProperty, object value);
    parameters:
    - id: formattingProperty
      type: System.Windows.DependencyProperty
      description: "要套用的格式設定屬性。"
    - id: value
      type: System.Object
      description: "格式設定屬性的值。"
  overload: System.Windows.Documents.TextRange.ApplyPropertyValue*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "發生時<code> formattingProperty </code>未指定有效的格式設定屬性，或<code> value </code>指定的值無效<code> formattingProperty </code>。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Occurs when <code>formattingProperty</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Documents.TextRange.CanLoad(System.String)
  id: CanLoad(System.String)
  parent: System.Windows.Documents.TextRange
  langs:
  - csharp
  name: CanLoad(String)
  nameWithType: TextRange.CanLoad(String)
  fullName: System.Windows.Documents.TextRange.CanLoad(String)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "會檢查目前的選取項目是否可以載入內容中指定的資料格式。"
  remarks: "使用對應<xref:System.Windows.Documents.TextRange.Load%2A>方法實際上將內容載入目前的選取範圍中指定的資料格式。</xref:System.Windows.Documents.TextRange.Load%2A>"
  example:
  - "The following example demonstrates the use of the CanLoad method.  \n  \n [!code-cs[TextPointer_Snippets#_TextRange_LoadSave](~/add/codesnippet/csharp/TextPointer_Snippets/Window1.xaml.cs#_textrange_loadsave)]\n [!code-vb[TextPointer_Snippets#_TextRange_LoadSave](~/add/codesnippet/visualbasic/textpointer_snippets/window1.xaml.vb#_textrange_loadsave)]"
  syntax:
    content: public bool CanLoad (string dataFormat);
    parameters:
    - id: dataFormat
      type: System.String
      description: "要載入相容性檢查目前選取範圍的資料格式。  請參閱<xref href=&quot;System.Windows.DataFormats&quot;></xref>取得一份預先定義的資料格式。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果目前的選取項目可以載入內容中指定的資料格式。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Documents.TextRange.CanLoad*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.TextRange.CanSave(System.String)
  id: CanSave(System.String)
  parent: System.Windows.Documents.TextRange
  langs:
  - csharp
  name: CanSave(String)
  nameWithType: TextRange.CanSave(String)
  fullName: System.Windows.Documents.TextRange.CanSave(String)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "會檢查目前的選取範圍是否可做為指定的資料格式儲存。"
  remarks: "使用對應<xref:System.Windows.Documents.TextRange.Save%2A>方法，以指定的資料格式實際儲存目前的選取範圍。</xref:System.Windows.Documents.TextRange.Save%2A>"
  example:
  - "The following example demonstrates the use of the CanSave method.  \n  \n [!code-cs[TextPointer_Snippets#_TextRange_LoadSave](~/add/codesnippet/csharp/TextPointer_Snippets/Window1.xaml.cs#_textrange_loadsave)]\n [!code-vb[TextPointer_Snippets#_TextRange_LoadSave](~/add/codesnippet/visualbasic/textpointer_snippets/window1.xaml.vb#_textrange_loadsave)]"
  syntax:
    content: public bool CanSave (string dataFormat);
    parameters:
    - id: dataFormat
      type: System.String
      description: "要檢查的資料格式儲存與目前的選取範圍的相容性。  請參閱<xref href=&quot;System.Windows.DataFormats&quot;></xref>取得一份預先定義的資料格式。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果目前的選取項目可以儲存為指定的資料格式。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Documents.TextRange.CanSave*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.TextRange.Changed
  id: Changed
  parent: System.Windows.Documents.TextRange
  langs:
  - csharp
  name: Changed
  nameWithType: TextRange.Changed
  fullName: System.Windows.Documents.TextRange.Changed
  type: Event
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "重新置放範圍以涵蓋新的內容範圍時發生。"
  syntax:
    content: public event EventHandler Changed;
    return:
      type: System.EventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.TextRange.ClearAllProperties
  id: ClearAllProperties
  parent: System.Windows.Documents.TextRange
  langs:
  - csharp
  name: ClearAllProperties()
  nameWithType: TextRange.ClearAllProperties()
  fullName: System.Windows.Documents.TextRange.ClearAllProperties()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "移除所有格式設定的屬性 (由<xref href=&quot;System.Windows.Documents.Inline&quot;></xref>項目) 從目前的選取項目。"
  remarks: "這個方法只會影響任何的<xref:System.Windows.Documents.Inline>格式項目，例如<xref:System.Windows.Documents.Bold>或<xref:System.Windows.Documents.Italic>.</xref:System.Windows.Documents.Italic> </xref:System.Windows.Documents.Bold> </xref:System.Windows.Documents.Inline> 設定段落和其他封入屬性<xref:System.Windows.Documents.Block>項目不會變更。</xref:System.Windows.Documents.Block>"
  syntax:
    content: public void ClearAllProperties ();
    parameters: []
  overload: System.Windows.Documents.TextRange.ClearAllProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.TextRange.Contains(System.Windows.Documents.TextPointer)
  id: Contains(System.Windows.Documents.TextPointer)
  parent: System.Windows.Documents.TextRange
  langs:
  - csharp
  name: Contains(TextPointer)
  nameWithType: TextRange.Contains(TextPointer)
  fullName: System.Windows.Documents.TextRange.Contains(TextPointer)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "檢查是否位置 (所指定<xref href=&quot;System.Windows.Documents.TextPointer&quot;> </xref>) 是位於目前的選取範圍。"
  remarks: "在目前選取的任一端的位置 (由<xref:System.Windows.Documents.TextRange.Start%2A>和<xref:System.Windows.Documents.TextRange.End%2A>) 視為目前的選取範圍的一部分。</xref:System.Windows.Documents.TextRange.End%2A> </xref:System.Windows.Documents.TextRange.Start%2A>"
  example:
  - "The following example demonstrates the use of the Contains method.  \n  \n [!code-cs[TextPointer_Snippets#_TextRange_StartEnd](~/add/codesnippet/csharp/TextPointer_Snippets/Window1.xaml.cs#_textrange_startend)]\n [!code-vb[TextPointer_Snippets#_TextRange_StartEnd](~/add/codesnippet/visualbasic/textpointer_snippets/window1.xaml.vb#_textrange_startend)]"
  syntax:
    content: public bool Contains (System.Windows.Documents.TextPointer textPointer);
    parameters:
    - id: textPointer
      type: System.Windows.Documents.TextPointer
      description: "要測試包含在目前的選取範圍的位置。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果指定的位置位於目前的選取範圍; 內否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Documents.TextRange.Contains*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "發生時*textPointer*不在相同的文件，為目前的選取項目。"
  platform:
  - net462
- uid: System.Windows.Documents.TextRange.End
  id: End
  parent: System.Windows.Documents.TextRange
  langs:
  - csharp
  name: End
  nameWithType: TextRange.End
  fullName: System.Windows.Documents.TextRange.End
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "取得目前的選取範圍的結束標記的位置。"
  remarks: ''
  example:
  - "The following example demonstrates the use of the End property.  \n  \n [!code-cs[TextPointer_Snippets#_TextRange_StartEnd](~/add/codesnippet/csharp/TextPointer_Snippets/Window1.xaml.cs#_textrange_startend)]\n [!code-vb[TextPointer_Snippets#_TextRange_StartEnd](~/add/codesnippet/visualbasic/textpointer_snippets/window1.xaml.vb#_textrange_startend)]"
  syntax:
    content: public System.Windows.Documents.TextPointer End { get; }
    return:
      type: System.Windows.Documents.TextPointer
      description: "A <xref href=&quot;System.Windows.Documents.TextPointer&quot;> </xref> ，它會指向目前的選取範圍的結尾。"
  overload: System.Windows.Documents.TextRange.End*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.TextRange.GetPropertyValue(System.Windows.DependencyProperty)
  id: GetPropertyValue(System.Windows.DependencyProperty)
  parent: System.Windows.Documents.TextRange
  langs:
  - csharp
  name: GetPropertyValue(DependencyProperty)
  nameWithType: TextRange.GetPropertyValue(DependencyProperty)
  fullName: System.Windows.Documents.TextRange.GetPropertyValue(DependencyProperty)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "在目前選取範圍會傳回指定的格式設定屬性的有效值。"
  remarks: "若要傳回屬性值，將整個<xref:System.Windows.Documents.TextRange>必須只有一個值的文字上擴充`formattingProperty`。</xref:System.Windows.Documents.TextRange> 如果<xref:System.Windows.Documents.TextRange>可延伸到包含兩個或多個不同的值的文字`formattingProperty`，<xref:System.Windows.DependencyProperty.UnsetValue>傳回。</xref:System.Windows.DependencyProperty.UnsetValue> </xref:System.Windows.Documents.TextRange>"
  syntax:
    content: public object GetPropertyValue (System.Windows.DependencyProperty formattingProperty);
    parameters:
    - id: formattingProperty
      type: System.Windows.DependencyProperty
      description: "要取得的值相對於目前的選取範圍的格式化屬性。"
    return:
      type: System.Object
      description: "物件，指定所指定的格式設定屬性的值。"
  overload: System.Windows.Documents.TextRange.GetPropertyValue*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "發生時<code> formattingProperty </code>未指定有效的格式設定屬性，或<code> value </code>指定的值無效<code> formattingProperty </code>。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Occurs when <code>formattingProperty</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Documents.TextRange.IsEmpty
  id: IsEmpty
  parent: System.Windows.Documents.TextRange
  langs:
  - csharp
  name: IsEmpty
  nameWithType: TextRange.IsEmpty
  fullName: System.Windows.Documents.TextRange.IsEmpty
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "取得值，指出目前的選取範圍空白。"
  remarks: "A<xref:System.Windows.Documents.TextRange>如果被視為空白<xref:System.Windows.Documents.TextRange.Start%2A>和<xref:System.Windows.Documents.TextRange.End%2A>位置是否相等。</xref:System.Windows.Documents.TextRange.End%2A> </xref:System.Windows.Documents.TextRange.Start%2A> </xref:System.Windows.Documents.TextRange>"
  example:
  - "The following example demonstrates the use of the IsEmpty property.  \n  \n [!code-cs[TextPointer_Snippets#_TextRange_LoadSave](~/add/codesnippet/csharp/TextPointer_Snippets/Window1.xaml.cs#_textrange_loadsave)]\n [!code-vb[TextPointer_Snippets#_TextRange_LoadSave](~/add/codesnippet/visualbasic/textpointer_snippets/window1.xaml.vb#_textrange_loadsave)]"
  syntax:
    content: public bool IsEmpty { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果目前的選取範圍是空的。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Documents.TextRange.IsEmpty*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.TextRange.Load(System.IO.Stream,System.String)
  id: Load(System.IO.Stream,System.String)
  parent: System.Windows.Documents.TextRange
  langs:
  - csharp
  name: Load(Stream,String)
  nameWithType: TextRange.Load(Stream,String)
  fullName: System.Windows.Documents.TextRange.Load(Stream,String)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "從指定的資料流載入目前的選取範圍中指定的資料格式。"
  remarks: "如果<xref:System.IO.Stream.CanSeek%2A>是`true`如`stream`，內容會從資料流的開始載入以資料流結尾。</xref:System.IO.Stream.CanSeek%2A>  否則，會從目前讀取內容<xref:System.IO.Stream.Position%2A>資料流的結尾。</xref:System.IO.Stream.Position%2A>  此方法傳回時，`stream`開啟、 及中目前的位置將處於`stream`是未定義。       載入作業會以新載入的內容取代目前選取範圍。"
  example:
  - "The following example demonstrates the use of the Load method.  \n  \n [!code-cs[TextPointer_Snippets#_TextRange_LoadSave](~/add/codesnippet/csharp/TextPointer_Snippets/Window1.xaml.cs#_textrange_loadsave)]\n [!code-vb[TextPointer_Snippets#_TextRange_LoadSave](~/add/codesnippet/visualbasic/textpointer_snippets/window1.xaml.vb#_textrange_loadsave)]"
  syntax:
    content: public void Load (System.IO.Stream stream, string dataFormat);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "可讀取的資料流，其中包含要載入到目前的選取範圍的資料。"
    - id: dataFormat
      type: System.String
      description: "要載入資料時的資料格式。  目前支援的資料格式為<xref href=&quot;System.Windows.DataFormats.Rtf&quot;> </xref>， <xref href=&quot;System.Windows.DataFormats.Text&quot;> </xref>， <xref href=&quot;System.Windows.DataFormats.Xaml&quot;> </xref>，和<xref href=&quot;System.Windows.DataFormats.XamlPackage&quot;> </xref>。"
  overload: System.Windows.Documents.TextRange.Load*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Occurs when <code>stream</code> or <code>dataFormat</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "發生於指定的資料格式不受支援。  如果，則也會產生內容載入從<code> stream </code>不符合指定的資料格式。"
  platform:
  - net462
- uid: System.Windows.Documents.TextRange.Save(System.IO.Stream,System.String)
  id: Save(System.IO.Stream,System.String)
  parent: System.Windows.Documents.TextRange
  langs:
  - csharp
  name: Save(Stream,String)
  nameWithType: TextRange.Save(Stream,String)
  fullName: System.Windows.Documents.TextRange.Save(Stream,String)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "將目前的選取項目儲存至指定的資料流中指定的資料格式。"
  remarks: "此方法傳回時，`stream`開啟、 及中目前的位置將處於`stream`是未定義。       一部分儲存作業，目前的選取範圍中的內容可能會轉換成指定的資料格式`dataFormat`。"
  example:
  - "The following example demonstrates the use of the Save method.  \n  \n [!code-cs[TextPointer_Snippets#_TextRange_LoadSave](~/add/codesnippet/csharp/TextPointer_Snippets/Window1.xaml.cs#_textrange_loadsave)]\n [!code-vb[TextPointer_Snippets#_TextRange_LoadSave](~/add/codesnippet/visualbasic/textpointer_snippets/window1.xaml.vb#_textrange_loadsave)]"
  syntax:
    content: public void Save (System.IO.Stream stream, string dataFormat);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "若要儲存目前的選取範圍到空的可寫入資料流。"
    - id: dataFormat
      type: System.String
      description: "要儲存目前的選取範圍時的資料格式。  目前支援的資料格式為<xref href=&quot;System.Windows.DataFormats.Rtf&quot;> </xref>， <xref href=&quot;System.Windows.DataFormats.Text&quot;> </xref>， <xref href=&quot;System.Windows.DataFormats.Xaml&quot;> </xref>，和<xref href=&quot;System.Windows.DataFormats.XamlPackage&quot;> </xref>。"
  overload: System.Windows.Documents.TextRange.Save*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stream</code>or <code>dataFormat</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "不支援指定的資料格式。       -或內容載入從<code> stream </code>不符合指定的資料格式。"
  platform:
  - net462
- uid: System.Windows.Documents.TextRange.Save(System.IO.Stream,System.String,System.Boolean)
  id: Save(System.IO.Stream,System.String,System.Boolean)
  parent: System.Windows.Documents.TextRange
  langs:
  - csharp
  name: Save(Stream,String,Boolean)
  nameWithType: TextRange.Save(Stream,String,Boolean)
  fullName: System.Windows.Documents.TextRange.Save(Stream,String,Boolean)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "將目前的選取項目儲存至指定的資料格式，以保留自訂的選項中指定的資料流<xref href=&quot;System.Windows.Documents.TextElement&quot;></xref>物件。"
  remarks: "當`preserveTextElements`是`false`自訂<xref:System.Windows.Documents.TextElement>物件會儲存為已知<xref:System.Windows.Documents.TextElement>型別。</xref:System.Windows.Documents.TextElement> </xref:System.Windows.Documents.TextElement>  例如，假設您建立自訂<xref:System.Windows.Documents.TextElement>呼叫`Heading1`，後者繼承自<xref:System.Windows.Documents.Paragraph>.</xref:System.Windows.Documents.Paragraph> </xref:System.Windows.Documents.TextElement> 當您呼叫這個方法與`preserveTextElements`設`false`，`Heading1`轉換成<xref:System.Windows.Documents.Paragraph>時<xref:System.Windows.Documents.TextRange>儲存。</xref:System.Windows.Documents.TextRange> </xref:System.Windows.Documents.Paragraph>  當您呼叫這個方法與`preserveTextElements`設`true`，`Heading1`儲存不需轉換。 若要保留自訂文字的項目，`dataFormat`必須設為<xref:System.Windows.DataFormats.Xaml?displayProperty=fullName>.</xref:System.Windows.DataFormats.Xaml?displayProperty=fullName>       .NET Framework 3.5 版中引進儲存。  如需詳細資訊，請參閱[版本和相依性](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public void Save (System.IO.Stream stream, string dataFormat, bool preserveTextElements);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "若要儲存目前的選取範圍到空的可寫入資料流。"
    - id: dataFormat
      type: System.String
      description: "要儲存目前的選取範圍時的資料格式。  目前支援的資料格式為<xref href=&quot;System.Windows.DataFormats.Rtf&quot;> </xref>， <xref href=&quot;System.Windows.DataFormats.Text&quot;> </xref>， <xref href=&quot;System.Windows.DataFormats.Xaml&quot;> </xref>，和<xref href=&quot;System.Windows.DataFormats.XamlPackage&quot;> </xref>。"
    - id: preserveTextElements
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要保留自訂<xref href=&quot;System.Windows.Documents.TextElement&quot;></xref>物件; 否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Documents.TextRange.Save*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Occurs when <code>stream</code> or <code>dataFormat</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "發生於指定的資料格式不受支援。  如果，則也會產生內容載入從<code> stream </code>不符合指定的資料格式。"
  platform:
  - net462
- uid: System.Windows.Documents.TextRange.Select(System.Windows.Documents.TextPointer,System.Windows.Documents.TextPointer)
  id: Select(System.Windows.Documents.TextPointer,System.Windows.Documents.TextPointer)
  parent: System.Windows.Documents.TextRange
  langs:
  - csharp
  name: Select(TextPointer,TextPointer)
  nameWithType: TextRange.Select(TextPointer,TextPointer)
  fullName: System.Windows.Documents.TextRange.Select(TextPointer,TextPointer)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "更新目前的選取項目，採用兩個<xref href=&quot;System.Windows.Documents.TextPointer&quot;></xref>位置來表示所更新選取範圍。"
  remarks: "A<xref:System.Windows.Documents.TextRange>形成的選取項目所指定的兩個位置之間**Textpointer**。</xref:System.Windows.Documents.TextRange>  這些位置其中 (由`position1`) 與選取項目，而另一個位置相對固定 (由`position2`) 是可移動。  這是類似的選擇會由使用者使用滑鼠或鍵盤的運作方式。       新的選取項目的實際的端點可加以調整來比對包含新的目前選取範圍的文件適用於任何選取項目啟發學習法。"
  syntax:
    content: public void Select (System.Windows.Documents.TextPointer position1, System.Windows.Documents.TextPointer position2);
    parameters:
    - id: position1
      type: System.Windows.Documents.TextPointer
      description: "標記所更新選取範圍的一端固定錨點位置。"
    - id: position2
      type: System.Windows.Documents.TextPointer
      description: "標記所更新選取範圍另一端的可移動位置。"
  overload: System.Windows.Documents.TextRange.Select*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "發生時<code> position1 </code>和<code> position2 </code>不位在相同的文件中。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Occurs when <code>position1</code> or <code>position2</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Documents.TextRange.Start
  id: Start
  parent: System.Windows.Documents.TextRange
  langs:
  - csharp
  name: Start
  nameWithType: TextRange.Start
  fullName: System.Windows.Documents.TextRange.Start
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "取得標記的目前選取範圍開頭的位置。"
  remarks: ''
  example:
  - "The following example demonstrates the use of the Start property.  \n  \n [!code-cs[TextPointer_Snippets#_TextRange_StartEnd](~/add/codesnippet/csharp/TextPointer_Snippets/Window1.xaml.cs#_textrange_startend)]\n [!code-vb[TextPointer_Snippets#_TextRange_StartEnd](~/add/codesnippet/visualbasic/textpointer_snippets/window1.xaml.vb#_textrange_startend)]"
  syntax:
    content: public System.Windows.Documents.TextPointer Start { get; }
    return:
      type: System.Windows.Documents.TextPointer
      description: "A <xref href=&quot;System.Windows.Documents.TextPointer&quot;> </xref> ，它會指向目前的選取範圍的開頭。"
  overload: System.Windows.Documents.TextRange.Start*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.TextRange.Text
  id: Text
  parent: System.Windows.Documents.TextRange
  langs:
  - csharp
  name: Text
  nameWithType: TextRange.Text
  fullName: System.Windows.Documents.TextRange.Text
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "取得或設定目前選取範圍的純文字內容。"
  remarks: "您可以使用這個屬性來擷取目前的選取範圍，不論可能存在的任何格式設定中的純文字內容。       新行字元和段落符號會被視為相對於這個屬性的對等項目。  任何類型的內容存在於目前的選取範圍中的符號會轉換為新行時讀取這個屬性。"
  example:
  - "The following example demonstrates the use of the Text property.  \n  \n [!code-cs[TextPointer_Snippets#_TextRange_Text](~/add/codesnippet/csharp/TextPointer_Snippets/Window1.xaml.cs#_textrange_text)]\n [!code-vb[TextPointer_Snippets#_TextRange_Text](~/add/codesnippet/visualbasic/textpointer_snippets/window1.xaml.vb#_textrange_text)]"
  syntax:
    content: public string Text { get; set; }
    return:
      type: System.String
      description: "字串，包含目前的選取範圍的純文字內容。"
  overload: System.Windows.Documents.TextRange.Text*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "發生於嘗試將此屬性設定為<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Windows.Documents.TextRange.#ctor(System.Windows.Documents.TextPointer,System.Windows.Documents.TextPointer)
  parent: System.Windows.Documents.TextRange
  isExternal: false
  name: TextRange(TextPointer,TextPointer)
  nameWithType: TextRange.TextRange(TextPointer,TextPointer)
  fullName: System.Windows.Documents.TextRange.TextRange(TextPointer,TextPointer)
- uid: System.Windows.Documents.TextPointer
  parent: System.Windows.Documents
  isExternal: false
  name: TextPointer
  nameWithType: TextPointer
  fullName: System.Windows.Documents.TextPointer
- uid: System.Windows.Documents.TextRange.ApplyPropertyValue(System.Windows.DependencyProperty,System.Object)
  parent: System.Windows.Documents.TextRange
  isExternal: false
  name: ApplyPropertyValue(DependencyProperty,Object)
  nameWithType: TextRange.ApplyPropertyValue(DependencyProperty,Object)
  fullName: System.Windows.Documents.TextRange.ApplyPropertyValue(DependencyProperty,Object)
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Windows.Documents.TextRange.CanLoad(System.String)
  parent: System.Windows.Documents.TextRange
  isExternal: false
  name: CanLoad(String)
  nameWithType: TextRange.CanLoad(String)
  fullName: System.Windows.Documents.TextRange.CanLoad(String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Documents.TextRange.CanSave(System.String)
  parent: System.Windows.Documents.TextRange
  isExternal: false
  name: CanSave(String)
  nameWithType: TextRange.CanSave(String)
  fullName: System.Windows.Documents.TextRange.CanSave(String)
- uid: System.Windows.Documents.TextRange.Changed
  parent: System.Windows.Documents.TextRange
  isExternal: false
  name: Changed
  nameWithType: TextRange.Changed
  fullName: System.Windows.Documents.TextRange.Changed
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Windows.Documents.TextRange.ClearAllProperties
  parent: System.Windows.Documents.TextRange
  isExternal: false
  name: ClearAllProperties()
  nameWithType: TextRange.ClearAllProperties()
  fullName: System.Windows.Documents.TextRange.ClearAllProperties()
- uid: System.Windows.Documents.TextRange.Contains(System.Windows.Documents.TextPointer)
  parent: System.Windows.Documents.TextRange
  isExternal: false
  name: Contains(TextPointer)
  nameWithType: TextRange.Contains(TextPointer)
  fullName: System.Windows.Documents.TextRange.Contains(TextPointer)
- uid: System.Windows.Documents.TextRange.End
  parent: System.Windows.Documents.TextRange
  isExternal: false
  name: End
  nameWithType: TextRange.End
  fullName: System.Windows.Documents.TextRange.End
- uid: System.Windows.Documents.TextRange.GetPropertyValue(System.Windows.DependencyProperty)
  parent: System.Windows.Documents.TextRange
  isExternal: false
  name: GetPropertyValue(DependencyProperty)
  nameWithType: TextRange.GetPropertyValue(DependencyProperty)
  fullName: System.Windows.Documents.TextRange.GetPropertyValue(DependencyProperty)
- uid: System.Windows.Documents.TextRange.IsEmpty
  parent: System.Windows.Documents.TextRange
  isExternal: false
  name: IsEmpty
  nameWithType: TextRange.IsEmpty
  fullName: System.Windows.Documents.TextRange.IsEmpty
- uid: System.Windows.Documents.TextRange.Load(System.IO.Stream,System.String)
  parent: System.Windows.Documents.TextRange
  isExternal: false
  name: Load(Stream,String)
  nameWithType: TextRange.Load(Stream,String)
  fullName: System.Windows.Documents.TextRange.Load(Stream,String)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Windows.Documents.TextRange.Save(System.IO.Stream,System.String)
  parent: System.Windows.Documents.TextRange
  isExternal: false
  name: Save(Stream,String)
  nameWithType: TextRange.Save(Stream,String)
  fullName: System.Windows.Documents.TextRange.Save(Stream,String)
- uid: System.Windows.Documents.TextRange.Save(System.IO.Stream,System.String,System.Boolean)
  parent: System.Windows.Documents.TextRange
  isExternal: false
  name: Save(Stream,String,Boolean)
  nameWithType: TextRange.Save(Stream,String,Boolean)
  fullName: System.Windows.Documents.TextRange.Save(Stream,String,Boolean)
- uid: System.Windows.Documents.TextRange.Select(System.Windows.Documents.TextPointer,System.Windows.Documents.TextPointer)
  parent: System.Windows.Documents.TextRange
  isExternal: false
  name: Select(TextPointer,TextPointer)
  nameWithType: TextRange.Select(TextPointer,TextPointer)
  fullName: System.Windows.Documents.TextRange.Select(TextPointer,TextPointer)
- uid: System.Windows.Documents.TextRange.Start
  parent: System.Windows.Documents.TextRange
  isExternal: false
  name: Start
  nameWithType: TextRange.Start
  fullName: System.Windows.Documents.TextRange.Start
- uid: System.Windows.Documents.TextRange.Text
  parent: System.Windows.Documents.TextRange
  isExternal: false
  name: Text
  nameWithType: TextRange.Text
  fullName: System.Windows.Documents.TextRange.Text
- uid: System.Windows.Documents.TextRange.#ctor*
  parent: System.Windows.Documents.TextRange
  isExternal: false
  name: TextRange
  nameWithType: TextRange.TextRange
- uid: System.Windows.Documents.TextRange.ApplyPropertyValue*
  parent: System.Windows.Documents.TextRange
  isExternal: false
  name: ApplyPropertyValue
  nameWithType: TextRange.ApplyPropertyValue
- uid: System.Windows.Documents.TextRange.CanLoad*
  parent: System.Windows.Documents.TextRange
  isExternal: false
  name: CanLoad
  nameWithType: TextRange.CanLoad
- uid: System.Windows.Documents.TextRange.CanSave*
  parent: System.Windows.Documents.TextRange
  isExternal: false
  name: CanSave
  nameWithType: TextRange.CanSave
- uid: System.Windows.Documents.TextRange.ClearAllProperties*
  parent: System.Windows.Documents.TextRange
  isExternal: false
  name: ClearAllProperties
  nameWithType: TextRange.ClearAllProperties
- uid: System.Windows.Documents.TextRange.Contains*
  parent: System.Windows.Documents.TextRange
  isExternal: false
  name: Contains
  nameWithType: TextRange.Contains
- uid: System.Windows.Documents.TextRange.End*
  parent: System.Windows.Documents.TextRange
  isExternal: false
  name: End
  nameWithType: TextRange.End
- uid: System.Windows.Documents.TextRange.GetPropertyValue*
  parent: System.Windows.Documents.TextRange
  isExternal: false
  name: GetPropertyValue
  nameWithType: TextRange.GetPropertyValue
- uid: System.Windows.Documents.TextRange.IsEmpty*
  parent: System.Windows.Documents.TextRange
  isExternal: false
  name: IsEmpty
  nameWithType: TextRange.IsEmpty
- uid: System.Windows.Documents.TextRange.Load*
  parent: System.Windows.Documents.TextRange
  isExternal: false
  name: Load
  nameWithType: TextRange.Load
- uid: System.Windows.Documents.TextRange.Save*
  parent: System.Windows.Documents.TextRange
  isExternal: false
  name: Save
  nameWithType: TextRange.Save
- uid: System.Windows.Documents.TextRange.Select*
  parent: System.Windows.Documents.TextRange
  isExternal: false
  name: Select
  nameWithType: TextRange.Select
- uid: System.Windows.Documents.TextRange.Start*
  parent: System.Windows.Documents.TextRange
  isExternal: false
  name: Start
  nameWithType: TextRange.Start
- uid: System.Windows.Documents.TextRange.Text*
  parent: System.Windows.Documents.TextRange
  isExternal: false
  name: Text
  nameWithType: TextRange.Text
