### YamlMime:ManagedReference
items:
- uid: System.Configuration.SectionInformation
  id: SectionInformation
  children:
  - System.Configuration.SectionInformation.AllowDefinition
  - System.Configuration.SectionInformation.AllowExeDefinition
  - System.Configuration.SectionInformation.AllowLocation
  - System.Configuration.SectionInformation.AllowOverride
  - System.Configuration.SectionInformation.ConfigSource
  - System.Configuration.SectionInformation.ForceDeclaration
  - System.Configuration.SectionInformation.ForceDeclaration(System.Boolean)
  - System.Configuration.SectionInformation.ForceSave
  - System.Configuration.SectionInformation.GetParentSection
  - System.Configuration.SectionInformation.GetRawXml
  - System.Configuration.SectionInformation.InheritInChildApplications
  - System.Configuration.SectionInformation.IsDeclarationRequired
  - System.Configuration.SectionInformation.IsDeclared
  - System.Configuration.SectionInformation.IsLocked
  - System.Configuration.SectionInformation.IsProtected
  - System.Configuration.SectionInformation.Name
  - System.Configuration.SectionInformation.OverrideMode
  - System.Configuration.SectionInformation.OverrideModeDefault
  - System.Configuration.SectionInformation.OverrideModeEffective
  - System.Configuration.SectionInformation.ProtectionProvider
  - System.Configuration.SectionInformation.ProtectSection(System.String)
  - System.Configuration.SectionInformation.RequirePermission
  - System.Configuration.SectionInformation.RestartOnExternalChanges
  - System.Configuration.SectionInformation.RevertToParent
  - System.Configuration.SectionInformation.SectionName
  - System.Configuration.SectionInformation.SetRawXml(System.String)
  - System.Configuration.SectionInformation.Type
  - System.Configuration.SectionInformation.UnprotectSection
  langs:
  - csharp
  name: SectionInformation
  nameWithType: SectionInformation
  fullName: System.Configuration.SectionInformation
  type: Class
  summary: "包含個別區段有關的組態階層架構內的中繼資料。 這個類別無法被繼承。"
  remarks: "SectionInformation 物件包含的組態階層架構內的個別區段的相關中繼資料。 此物件可以用來驗證及變更個別區段的屬性。"
  example:
  - "The following example shows how to get the SectionInformation metadata that is associated with a <xref:System.Configuration.ConfigurationSection> object.  \n  \n [!code-vb[System.Configuration.ConfigurationElement#91](~/add/codesnippet/visualbasic/t-system.configuration.s_2_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElement#91](~/add/codesnippet/csharp/t-system.configuration.s_2_1.cs)]  \n  \n The following example is an excerpt of the configuration file that is used by the previous example.  \n  \n```  \n<?xml version=\"1.0\" encoding=\"utf-8\"?>  \n<configuration>  \n  <configSections>  \n    <section name=\"MyUrls\" type=\"Samples.AspNet.UrlsSection,  \n      ConfigurationElement, Version=1.0.0.0, Culture=neutral,  \n      PublicKeyToken=null\" allowDefinition=\"Everywhere\"  \n      allowExeDefinition=\"MachineToApplication\"  \n      restartOnExternalChanges=\"true\" />  \n  </configSections>  \n  <MyUrls name=\"MyFavorites\">  \n    <simple name=\"Contoso\" url=\"http://www.contoso.com\" port=\"8080\" />  \n    <urls>  \n      <clear />  \n      <add name=\"Microsoft\" url=\"http://www.microsoft.com\" port=\"0\" />  \n    </urls>  \n  </MyUrls>  \n</configuration>  \n```"
  syntax:
    content: public sealed class SectionInformation
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Configuration.SectionInformation.AllowDefinition
  id: AllowDefinition
  parent: System.Configuration.SectionInformation
  langs:
  - csharp
  name: AllowDefinition
  nameWithType: SectionInformation.AllowDefinition
  fullName: System.Configuration.SectionInformation.AllowDefinition
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "取得或設定值，這個值會表示組態檔階層架構中可以定義相關聯的組態區段的位置。"
  remarks: "AllowDefinition 只適用於 Web 應用程式的組態檔。 用戶端應用程式，您必須使用<xref:System.Configuration.SectionInformation.AllowExeDefinition%2A>.</xref:System.Configuration.SectionInformation.AllowExeDefinition%2A>"
  example:
  - "The examples in this section show how to get the AllowDefinition property value after accessing the related section information in the configuration file.  \n  \n The following example gets the <xref:System.Configuration.SectionInformation> object.  \n  \n [!code-vb[System.Configuration.ConfigurationElement#95](~/add/codesnippet/visualbasic/p-system.configuration.s_17_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElement#95](~/add/codesnippet/csharp/p-system.configuration.s_17_1.cs)]  \n  \n The following example gets the AllowDefinition value.  \n  \n [!code-vb[System.Configuration.ConfigurationElement#96](~/add/codesnippet/visualbasic/p-system.configuration.s_17_2.vb)]\n [!code-cs[System.Configuration.ConfigurationElement#96](~/add/codesnippet/csharp/p-system.configuration.s_17_2.cs)]"
  syntax:
    content: public System.Configuration.ConfigurationAllowDefinition AllowDefinition { get; set; }
    return:
      type: System.Configuration.ConfigurationAllowDefinition
      description: "相關聯的值，指出在組態中的檔案階層<xref href=&quot;System.Configuration.ConfigurationSection&quot;></xref>可以宣告物件。"
  overload: System.Configuration.SectionInformation.AllowDefinition*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "選取的值和已定義的值衝突。"
  platform:
  - net462
- uid: System.Configuration.SectionInformation.AllowExeDefinition
  id: AllowExeDefinition
  parent: System.Configuration.SectionInformation
  langs:
  - csharp
  name: AllowExeDefinition
  nameWithType: SectionInformation.AllowExeDefinition
  fullName: System.Configuration.SectionInformation.AllowExeDefinition
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "取得或設定值，指出組態檔階層架構中可以宣告相關聯的組態區段的位置。"
  remarks: "AllowExeDefinition 只適用於用戶端應用程式組態檔。 Web 應用程式，您必須使用<xref:System.Configuration.SectionInformation.AllowDefinition%2A>.</xref:System.Configuration.SectionInformation.AllowDefinition%2A>"
  example:
  - "The examples in this section show how to get the AllowExeDefinition property value after accessing the related section information in the configuration file.  \n  \n The following example gets the <xref:System.Configuration.SectionInformation> object.  \n  \n [!code-vb[System.Configuration.ConfigurationElement#95](~/add/codesnippet/visualbasic/p-system.configuration.s_18_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElement#95](~/add/codesnippet/csharp/p-system.configuration.s_18_1.cs)]  \n  \n The following example gets the AllowExeDefinition value.  \n  \n [!code-vb[System.Configuration.ConfigurationElement#97](~/add/codesnippet/visualbasic/p-system.configuration.s_18_2.vb)]\n [!code-cs[System.Configuration.ConfigurationElement#97](~/add/codesnippet/csharp/p-system.configuration.s_18_2.cs)]"
  syntax:
    content: public System.Configuration.ConfigurationAllowExeDefinition AllowExeDefinition { get; set; }
    return:
      type: System.Configuration.ConfigurationAllowExeDefinition
      description: "相關聯的值，指出在組態中的檔案階層<xref href=&quot;System.Configuration.ConfigurationSection&quot;></xref>物件可以宣告為.exe 檔案。"
  overload: System.Configuration.SectionInformation.AllowExeDefinition*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "選取的值和已定義的值衝突。"
  platform:
  - net462
- uid: System.Configuration.SectionInformation.AllowLocation
  id: AllowLocation
  parent: System.Configuration.SectionInformation
  langs:
  - csharp
  name: AllowLocation
  nameWithType: SectionInformation.AllowLocation
  fullName: System.Configuration.SectionInformation.AllowLocation
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "取得或設定值，這個值會指出是否要允許組態區段<xref uid=&quot;langword_csharp_location&quot; name=&quot;location&quot; href=&quot;&quot;></xref>屬性。"
  remarks: "當設定為`false`，AllowLocation 屬性指出原生程式碼讀取者存取 > 一節。 因此，使用`location`不允許屬性，因為原生程式碼讀取器不支援的概念`location`。"
  example:
  - "The examples in this section show how to get the AllowLocation property value after accessing the related section information in the configuration file.  \n  \n The following example gets the <xref:System.Configuration.SectionInformation> object.  \n  \n [!code-vb[System.Configuration.ConfigurationElement#95](~/add/codesnippet/visualbasic/p-system.configuration.s_6_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElement#95](~/add/codesnippet/csharp/p-system.configuration.s_6_1.cs)]  \n  \n The following example gets the AllowLocation value.  \n  \n [!code-vb[System.Configuration.ConfigurationElement#98](~/add/codesnippet/visualbasic/p-system.configuration.s_6_2.vb)]\n [!code-cs[System.Configuration.ConfigurationElement#98](~/add/codesnippet/csharp/p-system.configuration.s_6_2.cs)]"
  syntax:
    content: public bool AllowLocation { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref uid=&quot;langword_csharp_location&quot; name=&quot;location&quot; href=&quot;&quot;></xref>屬性是允許，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Configuration.SectionInformation.AllowLocation*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "選取的值和已定義的值衝突。"
  platform:
  - net462
- uid: System.Configuration.SectionInformation.AllowOverride
  id: AllowOverride
  parent: System.Configuration.SectionInformation
  langs:
  - csharp
  name: AllowOverride
  nameWithType: SectionInformation.AllowOverride
  fullName: System.Configuration.SectionInformation.AllowOverride
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "取得或設定值，指出是否可以覆寫相關聯的組態區段的較低層級的組態檔。"
  remarks: ''
  example:
  - "The examples in this section show how to get the AllowOverride property value after accessing the related section information in the configuration file.  \n  \n The following example gets the <xref:System.Configuration.SectionInformation> object.  \n  \n [!code-vb[System.Configuration.ConfigurationElement#95](~/add/codesnippet/visualbasic/p-system.configuration.s_16_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElement#95](~/add/codesnippet/csharp/p-system.configuration.s_16_1.cs)]  \n  \n The following example gets the AllowOverride value.  \n  \n [!code-vb[System.Configuration.ConfigurationElement#99](~/add/codesnippet/visualbasic/p-system.configuration.s_16_2.vb)]\n [!code-cs[System.Configuration.ConfigurationElement#99](~/add/codesnippet/csharp/p-system.configuration.s_16_2.cs)]"
  syntax:
    content: public bool AllowOverride { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果可以覆寫 > 一節。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Configuration.SectionInformation.AllowOverride*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SectionInformation.ConfigSource
  id: ConfigSource
  parent: System.Configuration.SectionInformation
  langs:
  - csharp
  name: ConfigSource
  nameWithType: SectionInformation.ConfigSource
  fullName: System.Configuration.SectionInformation.ConfigSource
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "取得或設定在其中定義相關聯的組態區段，包含檔案的名稱，如果存在這類的檔案。"
  remarks: "ConfigSource 屬性表示的值`configSource`屬性指定<xref:System.Configuration.ConfigurationSection>與其相關聯物件<xref:System.Configuration.SectionInformation>物件。</xref:System.Configuration.SectionInformation> </xref:System.Configuration.ConfigurationSection>       A<xref:System.Configuration.ConfigurationSection>實作可以選擇性地指定個別的檔案，其中定義該區段的組態設定。</xref:System.Configuration.ConfigurationSection> 這可用於多種方式可以:-使用 include 檔可能會導致組態檔的更邏輯且模組化結構。      -檔案存取安全性和權限可用來限制存取區段的組態設定。      -Include 檔中的設定不會使用應用程式初始化期間可以修改並重新載入而不需要重新啟動應用程式。       下列範例顯示如何這個屬性使用組態檔中指定`pages`區段定義在外部的 include 檔︰`<pages configSource=&quot;pages.config&quot;/>`如果設定中設定的任何包含檔案需要重新啟動它們修改時，應用程式設定<xref:System.Configuration.SectionInformation.RestartOnExternalChanges%2A>屬性`true`。</xref:System.Configuration.SectionInformation.RestartOnExternalChanges%2A>       在 ASP.NET 應用程式，在執行階段您可以指派給 ConfigSource 屬性的替代設定檔的名稱。 在此情況下，包含在 Web.config 檔案中的預設連接字串資訊會覆寫檔案的內容。 這也會發生時替代檔案不存在，它會建立在執行階段。 如果 Web.config 檔案中沒有任何連接字串資訊，請至替代檔案加入空的區段。"
  syntax:
    content: public string ConfigSource { get; set; }
    return:
      type: System.String
      description: "在其中的 include 檔案的名稱相關聯<xref href=&quot;System.Configuration.ConfigurationSection&quot;></xref>定義，如果存在這類檔案，否則為空字串 (&quot;&quot;)。"
  overload: System.Configuration.SectionInformation.ConfigSource*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SectionInformation.ForceDeclaration
  id: ForceDeclaration
  parent: System.Configuration.SectionInformation
  langs:
  - csharp
  name: ForceDeclaration()
  nameWithType: SectionInformation.ForceDeclaration()
  fullName: System.Configuration.SectionInformation.ForceDeclaration()
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "強制相關聯的組態區段會出現在組態檔。"
  remarks: "ForceDeclaration 方法會強制這<xref:System.Configuration.SectionInformation>寫入組態檔的宣告。</xref:System.Configuration.SectionInformation>      > [!NOTE] > ForceDeclaration 方法可以強制<xref:System.Configuration.SectionInformation>寫入組態檔，即使部分不需要，因為它已經宣告為父檔案中的宣告。</xref:System.Configuration.SectionInformation> 使用 ForceDeclaration 方法可以進行組態檔更容易移植從一部電腦之間。 它可讓您確定區段存在即使當您沒有父組態檔控制。"
  syntax:
    content: public void ForceDeclaration ();
    parameters: []
  overload: System.Configuration.SectionInformation.ForceDeclaration*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SectionInformation.ForceDeclaration(System.Boolean)
  id: ForceDeclaration(System.Boolean)
  parent: System.Configuration.SectionInformation
  langs:
  - csharp
  name: ForceDeclaration(Boolean)
  nameWithType: SectionInformation.ForceDeclaration(Boolean)
  fullName: System.Configuration.SectionInformation.ForceDeclaration(Boolean)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "強制相關聯的組態區段會出現在組態檔中，或從組態檔移除現有的區段。"
  remarks: "ForceDeclaration 方法會強制這<xref:System.Configuration.SectionInformation>寫入至組態檔，如果宣告`force`是`true`。</xref:System.Configuration.SectionInformation> 如果`force`是`false`，可能會忽略這個動作，如果<xref:System.Configuration.SectionInformation>宣告由系統所需。</xref:System.Configuration.SectionInformation>      > [!NOTE] > ForceDeclaration 方法可以強制<xref:System.Configuration.SectionInformation>寫入組態檔，即使此區段不需要，因為它已經宣告為父檔案中的宣告。</xref:System.Configuration.SectionInformation> 使用<xref:System.Configuration.SectionInformation.ForceDeclaration%2A>方法可以使檔案從一部電腦移植至另一個組態。</xref:System.Configuration.SectionInformation.ForceDeclaration%2A> 這也可讓您確保區段的存在，即使您沒有父組態檔控制。"
  example:
  - "The following example shows how to use the ForceDeclaration method.  \n  \n [!code-vb[System.Configuration.ConfigurationElement#113](~/add/codesnippet/visualbasic/m-system.configuration.s_0_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElement#113](~/add/codesnippet/csharp/m-system.configuration.s_0_1.cs)]"
  syntax:
    content: public void ForceDeclaration (bool force);
    parameters:
    - id: force
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果在組態檔應該要撰寫相關的區段否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Configuration.SectionInformation.ForceDeclaration*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "<code>force</code>是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>和相關聯的區段無法匯出至子組態檔中，或者它是未宣告。"
  platform:
  - net462
- uid: System.Configuration.SectionInformation.ForceSave
  id: ForceSave
  parent: System.Configuration.SectionInformation
  langs:
  - csharp
  name: ForceSave
  nameWithType: SectionInformation.ForceSave
  fullName: System.Configuration.SectionInformation.ForceSave
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "取得或設定值，這個值表示即使未修改，是否會儲存相關聯的組態區段。"
  remarks: ''
  example:
  - "The following example shows how to use the ForceSave property of a <xref:System.Configuration.ConfigurationSection> object.  \n  \n [!code-cs[System.Configuration.ConfigurationElement#1](~/add/codesnippet/csharp/p-system.configuration.s_7_1.cs)]\n [!code-vb[System.Configuration.ConfigurationElement#1](~/add/codesnippet/visualbasic/p-system.configuration.s_7_1.vb)]"
  syntax:
    content: public bool ForceSave { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果相關聯<xref href=&quot;System.Configuration.ConfigurationSection&quot;></xref>將儲存物件，即使尚未修改過，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。       <div class=&quot;alert NOTE&quot;>    如果組態檔會儲存 （即使沒有任何修改），ASP.NET 會重新啟動應用程式。      </div>"
  overload: System.Configuration.SectionInformation.ForceSave*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SectionInformation.GetParentSection
  id: GetParentSection
  parent: System.Configuration.SectionInformation
  langs:
  - csharp
  name: GetParentSection()
  nameWithType: SectionInformation.GetParentSection()
  fullName: System.Configuration.SectionInformation.GetParentSection()
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "取得包含此物件相關聯的組態區段的組態區段。"
  remarks: "如果這個<xref:System.Configuration.ConfigurationSection>物件沒有父系區段，GetParentSection 方法會傳回相同的值<xref:System.Configuration.SectionInformation.Name%2A>屬性。</xref:System.Configuration.SectionInformation.Name%2A> </xref:System.Configuration.ConfigurationSection>"
  example:
  - "The following example shows how to use the GetParentSection method.  \n  \n [!code-vb[System.Configuration.ConfigurationElement#92](~/add/codesnippet/visualbasic/m-system.configuration.s_5_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElement#92](~/add/codesnippet/csharp/m-system.configuration.s_5_1.cs)]"
  syntax:
    content: public System.Configuration.ConfigurationSection GetParentSection ();
    parameters: []
    return:
      type: System.Configuration.ConfigurationSection
      description: "組態區段包含<xref href=&quot;System.Configuration.ConfigurationSection&quot;></xref>與此相關聯<xref href=&quot;System.Configuration.SectionInformation&quot;></xref>物件。"
  overload: System.Configuration.SectionInformation.GetParentSection*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "從父區段會叫用方法。"
  platform:
  - net462
- uid: System.Configuration.SectionInformation.GetRawXml
  id: GetRawXml
  parent: System.Configuration.SectionInformation
  langs:
  - csharp
  name: GetRawXml()
  nameWithType: SectionInformation.GetRawXml()
  fullName: System.Configuration.SectionInformation.GetRawXml()
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "傳回表示關聯的組態區段物件的 XML 節點物件。"
  remarks: ''
  example:
  - "The following example shows how to use the GetRawXml method.  \n  \n [!code-vb[System.Configuration.ConfigurationElement#93](~/add/codesnippet/visualbasic/m-system.configuration.s_4_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElement#93](~/add/codesnippet/csharp/m-system.configuration.s_4_1.cs)]"
  syntax:
    content: public string GetRawXml ();
    parameters: []
    return:
      type: System.String
      description: "這個組態區段的 XML 表示法。"
  overload: System.Configuration.SectionInformation.GetRawXml*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "這個組態物件已鎖定且無法編輯。"
  platform:
  - net462
- uid: System.Configuration.SectionInformation.InheritInChildApplications
  id: InheritInChildApplications
  parent: System.Configuration.SectionInformation
  langs:
  - csharp
  name: InheritInChildApplications
  nameWithType: SectionInformation.InheritInChildApplications
  fullName: System.Configuration.SectionInformation.InheritInChildApplications
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "取得或設定值，指出是否在相關的應用程式的子目錄中的應用程式會繼承關聯的組態區段中指定的設定。"
  remarks: "InheritInChildApplications 屬性代表`inheritInChildApplications`屬性`location`組態檔中的項目。       若要設定 InheritInChildApplications`false`來防止專至特定位置 （例如網站的根目錄） 子目錄中存在的應用程式由繼承的設定。       下列範例示範如何使用組態檔中的這個屬性來指定網站的根位置項目中定義的設定不子應用程式所繼承︰ `<location path=&quot;.&quot; inheritInChildApplications=&quot;false&quot;>` InheritInChildApplications 屬性適用於只為特定位置的組態設定。"
  example:
  - "The following example shows how to get the InheritInChildApplications value of a <xref:System.Configuration.ConfigurationSection> object.  \n  \n [!code-vb[System.Configuration.ConfigurationElement#100](~/add/codesnippet/visualbasic/p-system.configuration.s_13_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElement#100](~/add/codesnippet/csharp/p-system.configuration.s_13_1.cs)]"
  syntax:
    content: public bool InheritInChildApplications { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果在此指定的設定<xref href=&quot;System.Configuration.ConfigurationSection&quot;></xref>物件會繼承由子應用程式; 否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Configuration.SectionInformation.InheritInChildApplications*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SectionInformation.IsDeclarationRequired
  id: IsDeclarationRequired
  parent: System.Configuration.SectionInformation
  langs:
  - csharp
  name: IsDeclarationRequired
  nameWithType: SectionInformation.IsDeclarationRequired
  fullName: System.Configuration.SectionInformation.IsDeclarationRequired
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "取得值，指出是否必須在組態檔中宣告的組態區段。"
  remarks: ''
  example:
  - "The examples in this section show how to get the IsDeclarationRequired property value after accessing the related section information in the configuration file.  \n  \n The following example gets the <xref:System.Configuration.SectionInformation> object.  \n  \n [!code-vb[System.Configuration.ConfigurationElement#102](~/add/codesnippet/visualbasic/p-system.configuration.s_0_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElement#102](~/add/codesnippet/csharp/p-system.configuration.s_0_1.cs)]  \n  \n The following example gets the IsDeclarationRequired value.  \n  \n [!code-vb[System.Configuration.ConfigurationElement#103](~/add/codesnippet/visualbasic/p-system.configuration.s_0_2.vb)]\n [!code-cs[System.Configuration.ConfigurationElement#103](~/add/codesnippet/csharp/p-system.configuration.s_0_2.cs)]"
  syntax:
    content: public bool IsDeclarationRequired { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果相關聯<xref href=&quot;System.Configuration.ConfigurationSection&quot;></xref>物件必須是在組態檔中宣告，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Configuration.SectionInformation.IsDeclarationRequired*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SectionInformation.IsDeclared
  id: IsDeclared
  parent: System.Configuration.SectionInformation
  langs:
  - csharp
  name: IsDeclared
  nameWithType: SectionInformation.IsDeclared
  fullName: System.Configuration.SectionInformation.IsDeclared
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "取得值，指出是否在組態檔中宣告相關聯的組態區段。"
  remarks: ''
  example:
  - "The examples in this section show how to get the IsDeclared property value after accessing the related section information in the configuration file.  \n  \n The following example gets the <xref:System.Configuration.SectionInformation> object.  \n  \n [!code-vb[System.Configuration.ConfigurationElement#102](~/add/codesnippet/visualbasic/p-system.configuration.s_2_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElement#102](~/add/codesnippet/csharp/p-system.configuration.s_2_1.cs)]  \n  \n The following example gets the IsDeclared value.  \n  \n [!code-vb[System.Configuration.ConfigurationElement#104](~/add/codesnippet/visualbasic/p-system.configuration.s_2_2.vb)]\n [!code-cs[System.Configuration.ConfigurationElement#104](~/add/codesnippet/csharp/p-system.configuration.s_2_2.cs)]"
  syntax:
    content: public bool IsDeclared { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果這個<xref href=&quot;System.Configuration.ConfigurationSection&quot;></xref>組態檔中宣告，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Configuration.SectionInformation.IsDeclared*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SectionInformation.IsLocked
  id: IsLocked
  parent: System.Configuration.SectionInformation
  langs:
  - csharp
  name: IsLocked
  nameWithType: SectionInformation.IsLocked
  fullName: System.Configuration.SectionInformation.IsLocked
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "取得值，指出是否已鎖定相關聯的組態區段。"
  remarks: "IsLocked 屬性會傳回`true`相關的區段遭當<xref:System.Configuration.SectionInformation.AllowOverride%2A>或<xref:System.Configuration.SectionInformation.AllowDefinition%2A>屬性。</xref:System.Configuration.SectionInformation.AllowDefinition%2A> </xref:System.Configuration.SectionInformation.AllowOverride%2A> 如果無法覆寫或目前的組態檔中定義，鎖定區段。"
  example:
  - "The examples in this section show how to get the IsLocked property value after accessing the related section information in the configuration file.  \n  \n The following example gets the <xref:System.Configuration.SectionInformation> object.  \n  \n [!code-vb[System.Configuration.ConfigurationElement#102](~/add/codesnippet/visualbasic/p-system.configuration.s_5_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElement#102](~/add/codesnippet/csharp/p-system.configuration.s_5_1.cs)]  \n  \n The following example gets the IsLocked value.  \n  \n [!code-vb[System.Configuration.ConfigurationElement#105](~/add/codesnippet/visualbasic/p-system.configuration.s_5_2.vb)]\n [!code-cs[System.Configuration.ConfigurationElement#105](~/add/codesnippet/csharp/p-system.configuration.s_5_2.cs)]"
  syntax:
    content: public bool IsLocked { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果是區段已鎖定。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Configuration.SectionInformation.IsLocked*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SectionInformation.IsProtected
  id: IsProtected
  parent: System.Configuration.SectionInformation
  langs:
  - csharp
  name: IsProtected
  nameWithType: SectionInformation.IsProtected
  fullName: System.Configuration.SectionInformation.IsProtected
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "取得值，指出是否已受到保護的相關聯的組態區段。"
  remarks: "受保護的組態區段會加密，且為唯讀。       如需受保護的組態區段的詳細資訊，請參閱[加密組態資訊使用受保護的組態](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The examples in this section show how to get the IsProtected property value after accessing the related section information in the configuration file.  \n  \n The following example gets the <xref:System.Configuration.SectionInformation> object.  \n  \n [!code-vb[System.Configuration.ConfigurationElement#102](~/add/codesnippet/visualbasic/p-system.configuration.s_14_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElement#102](~/add/codesnippet/csharp/p-system.configuration.s_14_1.cs)]  \n  \n The following example gets the IsProtected value.  \n  \n [!code-vb[System.Configuration.ConfigurationElement#106](~/add/codesnippet/visualbasic/p-system.configuration.s_14_2.vb)]\n [!code-cs[System.Configuration.ConfigurationElement#106](~/add/codesnippet/csharp/p-system.configuration.s_14_2.cs)]"
  syntax:
    content: public bool IsProtected { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果這個<xref href=&quot;System.Configuration.ConfigurationSection&quot;></xref>受到保護，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Configuration.SectionInformation.IsProtected*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SectionInformation.Name
  id: Name
  parent: System.Configuration.SectionInformation
  langs:
  - csharp
  name: Name
  nameWithType: SectionInformation.Name
  fullName: System.Configuration.SectionInformation.Name
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "取得相關聯的組態區段的名稱。"
  remarks: "名稱是不含路徑區段的名稱。"
  example:
  - "The following example shows how to get the Name value of a <xref:System.Configuration.ConfigurationSection> object.  \n  \n [!code-vb[System.Configuration.ConfigurationElement#107](~/add/codesnippet/visualbasic/p-system.configuration.s_9_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElement#107](~/add/codesnippet/csharp/p-system.configuration.s_9_1.cs)]"
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "組態區段的完整名稱。"
  overload: System.Configuration.SectionInformation.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SectionInformation.OverrideMode
  id: OverrideMode
  parent: System.Configuration.SectionInformation
  langs:
  - csharp
  name: OverrideMode
  nameWithType: SectionInformation.OverrideMode
  fullName: System.Configuration.SectionInformation.OverrideMode
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "取得或設定<xref href=&quot;System.Configuration.OverrideMode&quot;></xref>列舉值，指定的子系的組態檔是否可以覆寫相關聯的組態區段。"
  remarks: "<xref:System.Configuration.SectionInformation.AllowOverride%2A>屬性取得或設定值，指出資源是否宣告內`location`元素會覆寫子組態檔。</xref:System.Configuration.SectionInformation.AllowOverride%2A> OverrideMode 屬性取得或設定值，這個值指定類似的行為，但會以特定的組態項目或群組，而且會使用其中一個<xref:System.Configuration.OverrideMode>列舉值。</xref:System.Configuration.OverrideMode> OverrideMode 屬性可讓從父元素繼承行為。       您不能以程式設計方式設定兩者<xref:System.Configuration.SectionInformation.AllowOverride%2A>和 OverrideMode 屬性。</xref:System.Configuration.SectionInformation.AllowOverride%2A> 設定<xref:System.Configuration.SectionInformation.AllowOverride%2A>屬性`true`OverrideMode 將屬性設定為<xref:System.Configuration.OverrideMode>.</xref:System.Configuration.OverrideMode> </xref:System.Configuration.SectionInformation.AllowOverride%2A> 設定<xref:System.Configuration.SectionInformation.AllowOverride%2A>屬性`false`OverrideMode 屬性設定為`false`。</xref:System.Configuration.SectionInformation.AllowOverride%2A>"
  syntax:
    content: public System.Configuration.OverrideMode OverrideMode { get; set; }
    return:
      type: System.Configuration.OverrideMode
      description: "其中一個<xref href=&quot;System.Configuration.OverrideMode&quot;></xref>列舉值。"
  overload: System.Configuration.SectionInformation.OverrideMode*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "嘗試變更這兩者<xref:System.Configuration.SectionInformation.AllowOverride*>和 OverrideMode 屬性，不支援相容性的原因。</xref:System.Configuration.SectionInformation.AllowOverride*>"
  platform:
  - net462
- uid: System.Configuration.SectionInformation.OverrideModeDefault
  id: OverrideModeDefault
  parent: System.Configuration.SectionInformation
  langs:
  - csharp
  name: OverrideModeDefault
  nameWithType: SectionInformation.OverrideModeDefault
  fullName: System.Configuration.SectionInformation.OverrideModeDefault
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "取得或設定值，這個值會指定預設值來覆寫行為的子組態檔的組態區段。"
  remarks: "組態區段的 OverrideModeDefault 屬性只能設定為<xref:System.Configuration.OverrideMode>或<xref:System.Configuration.OverrideMode>值<xref:System.Configuration.OverrideMode>列舉型別。</xref:System.Configuration.OverrideMode> </xref:System.Configuration.OverrideMode> </xref:System.Configuration.OverrideMode> OverrideModeDefault 屬性設定為<xref:System.Configuration.OverrideMode>相當於設定至<xref:System.Configuration.OverrideMode>。</xref:System.Configuration.OverrideMode>值</xref:System.Configuration.OverrideMode>"
  syntax:
    content: public System.Configuration.OverrideMode OverrideModeDefault { get; set; }
    return:
      type: System.Configuration.OverrideMode
      description: "其中一個<xref href=&quot;System.Configuration.OverrideMode&quot;></xref>列舉值。"
  overload: System.Configuration.SectionInformation.OverrideModeDefault*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "父組態區段中指定的覆寫行為。"
  platform:
  - net462
- uid: System.Configuration.SectionInformation.OverrideModeEffective
  id: OverrideModeEffective
  parent: System.Configuration.SectionInformation
  langs:
  - csharp
  name: OverrideModeEffective
  nameWithType: SectionInformation.OverrideModeEffective
  fullName: System.Configuration.SectionInformation.OverrideModeEffective
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "取得組態區段，接著取決於子組態檔是否可以鎖定設定區段的覆寫行為。"
  remarks: "這個屬性會傳回<xref:System.Configuration.OverrideMode>或<xref:System.Configuration.OverrideMode>.</xref:System.Configuration.OverrideMode> </xref:System.Configuration.OverrideMode>"
  syntax:
    content: public System.Configuration.OverrideMode OverrideModeEffective { get; }
    return:
      type: System.Configuration.OverrideMode
      description: "其中一個<xref href=&quot;System.Configuration.OverrideMode&quot;></xref>列舉值。"
  overload: System.Configuration.SectionInformation.OverrideModeEffective*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SectionInformation.ProtectionProvider
  id: ProtectionProvider
  parent: System.Configuration.SectionInformation
  langs:
  - csharp
  name: ProtectionProvider
  nameWithType: SectionInformation.ProtectionProvider
  fullName: System.Configuration.SectionInformation.ProtectionProvider
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "取得受保護的組態提供者相關聯的組態區段。"
  remarks: "未受保護的區段是 ProtectionProvider 屬性`null`。       如需受保護的組態區段的詳細資訊，請參閱[加密組態資訊使用受保護的組態](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following example shows how to get the <xref:System.Configuration.SectionInformation.ProtectSection%2A> value of a <xref:System.Configuration.ConfigurationSection> object.  \n  \n [!code-vb[System.Configuration.ConfigurationElement#108](~/add/codesnippet/visualbasic/p-system.configuration.s_11_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElement#108](~/add/codesnippet/csharp/p-system.configuration.s_11_1.cs)]"
  syntax:
    content: public System.Configuration.ProtectedConfigurationProvider ProtectionProvider { get; }
    return:
      type: System.Configuration.ProtectedConfigurationProvider
      description: "受保護的組態提供者，這個<xref href=&quot;System.Configuration.ConfigurationSection&quot;></xref>物件。"
  overload: System.Configuration.SectionInformation.ProtectionProvider*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SectionInformation.ProtectSection(System.String)
  id: ProtectSection(System.String)
  parent: System.Configuration.SectionInformation
  langs:
  - csharp
  name: ProtectSection(String)
  nameWithType: SectionInformation.ProtectSection(String)
  fullName: System.Configuration.SectionInformation.ProtectSection(String)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "將標示為保護的組態區段。"
  remarks: "ProtectSection 方法將標記加密的區段，如此將會以加密形式中寫入磁碟上。       預設會包含下列保護提供者︰ <xref:System.Configuration.DpapiProtectedConfigurationProvider> <xref:System.Configuration.RsaProtectedConfigurationProvider>> [!NOTE] > 如果呼叫具有 ProtectSection 方法`null`參數或空字串，<xref:System.Configuration.RsaProtectedConfigurationProvider>類別做為保護提供者。</xref:System.Configuration.RsaProtectedConfigurationProvider> </xref:System.Configuration.RsaProtectedConfigurationProvider>       </xref:System.Configuration.DpapiProtectedConfigurationProvider>       如需受保護的組態區段的詳細資訊，請參閱[加密組態資訊使用受保護的組態](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following example shows how to use the ProtectSection method.  \n  \n [!code-vb[System.Configuration.ConfigurationElement#94](~/add/codesnippet/visualbasic/m-system.configuration.s_3_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElement#94](~/add/codesnippet/csharp/m-system.configuration.s_3_1.cs)]"
  syntax:
    content: public void ProtectSection (string protectionProvider);
    parameters:
    - id: protectionProvider
      type: System.String
      description: "若要使用的保護提供者名稱。"
  overload: System.Configuration.SectionInformation.ProtectSection*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <xref:System.Configuration.SectionInformation.AllowLocation*> property is set to <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n The target section is already a protected data section."
  platform:
  - net462
- uid: System.Configuration.SectionInformation.RequirePermission
  id: RequirePermission
  parent: System.Configuration.SectionInformation
  langs:
  - csharp
  name: RequirePermission
  nameWithType: SectionInformation.RequirePermission
  fullName: System.Configuration.SectionInformation.RequirePermission
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "取得值，指出相關聯的組態區段是否需要存取權限。"
  remarks: "當 RequirePermission 設`true`、`GetSection`方法會受到應用程式的信任層級設定。 這表示方法或屬性可讓您存取組態區段處理常式設定 Web 應用程式的信任層級受到限制。      > [!NOTE] > 由於高和完全信任層級，以允許存取目前的應用程式定義域以外的檔案，應用程式可以使用組態區段處理常式只能在這些信任層級。       當 RequirePermission 設`false`，組態資料的存取不受限於應用程式的信任層級設定。      > [!NOTE] > 適當的檔案 ACL （存取控制清單） 權限是否仍需要，不論 RequirePermission 設定為何。 ACL 權限會決定誰可以存取組態檔。"
  example:
  - "The following example shows two possible trust levels for a Web application when the RequirePermission property of the `appSettings` section is `true`.  \n  \n```  \n<system.web>  \n   // With the following trust value   \n   // the code below works.  \n  <trust level=\"Full\" />  \n</system.web>  \n  \n<system.web>  \n  // With the following trust value   \n  // the code below does not work.  \n  <trust level=\"Medium\" />  \n</system.web>  \n```  \n  \n The following example shows code that runs without errors when the trust level is set to full. Otherwise, the code results in an error.  \n  \n```c#  \nAppSettingsSection apSection =   \n  ConfigurationManager.GetSection(\"appSettings\") as AppSettingsSection;  \n  \nNameValueCollection apSectionCollection =  \n  ConfigurationManager.AppSettings;  \n```  \n  \n```vb#  \nDim apSection As AppSettingsSection = _   \n  TryCast(ConfigurationManager.GetSection(\"appSettings\"),   \n    AppSettingsSection)  \n  \n  Dim apSectionCollection As NameValueCollection = _   \n    ConfigurationManager.AppSettings  \n```"
  syntax:
    content: public bool RequirePermission { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref uid=&quot;langword_csharp_requirePermission&quot; name=&quot;requirePermission&quot; href=&quot;&quot;></xref>屬性設為<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Configuration.SectionInformation.RequirePermission*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "選取的值和已定義的值衝突。"
  platform:
  - net462
- uid: System.Configuration.SectionInformation.RestartOnExternalChanges
  id: RestartOnExternalChanges
  parent: System.Configuration.SectionInformation
  langs:
  - csharp
  name: RestartOnExternalChanges
  nameWithType: SectionInformation.RestartOnExternalChanges
  fullName: System.Configuration.SectionInformation.RestartOnExternalChanges
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "取得或設定值，指定是否要包含在外部的組態變更檔案，而需要重新啟動應用程式。"
  remarks: "將 RestartOnExternalChanges 屬性設定為`false`以防止應用程式重新啟動時包含外部檔案中的組態設定會修改這個<xref:System.Configuration.ConfigurationSection>物件。</xref:System.Configuration.ConfigurationSection>"
  example:
  - "The following example shows how to get the RestartOnExternalChanges property value of a <xref:System.Configuration.ConfigurationSection> object.  \n  \n [!code-vb[System.Configuration.ConfigurationElement#109](~/add/codesnippet/visualbasic/p-system.configuration.s_1_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElement#109](~/add/codesnippet/csharp/p-system.configuration.s_1_1.cs)]"
  syntax:
    content: public bool RestartOnExternalChanges { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果外部組態中的變更包括檔案，需要重新啟動應用程式。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Configuration.SectionInformation.RestartOnExternalChanges*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "選取的值和已定義的值衝突。"
  platform:
  - net462
- uid: System.Configuration.SectionInformation.RevertToParent
  id: RevertToParent
  parent: System.Configuration.SectionInformation
  langs:
  - csharp
  name: RevertToParent()
  nameWithType: SectionInformation.RevertToParent()
  fullName: System.Configuration.SectionInformation.RevertToParent()
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "讓相關聯的組態區段的父區段會繼承其所有的值。"
  syntax:
    content: public void RevertToParent ();
    parameters: []
  overload: System.Configuration.SectionInformation.RevertToParent*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "編輯模式之外，無法呼叫這個方法。"
  platform:
  - net462
- uid: System.Configuration.SectionInformation.SectionName
  id: SectionName
  parent: System.Configuration.SectionInformation
  langs:
  - csharp
  name: SectionName
  nameWithType: SectionInformation.SectionName
  fullName: System.Configuration.SectionInformation.SectionName
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "取得相關聯的組態區段的名稱。"
  remarks: "SectionName 屬性值是完整的區段名稱，其中包含組態的繼承階層架構。"
  example:
  - "The following example shows how to get the SectionName value of a <xref:System.Configuration.ConfigurationSection> object.  \n  \n [!code-vb[System.Configuration.ConfigurationElement#110](~/add/codesnippet/visualbasic/p-system.configuration.s_10_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElement#110](~/add/codesnippet/csharp/p-system.configuration.s_10_1.cs)]"
  syntax:
    content: public string SectionName { get; }
    return:
      type: System.String
      description: "相關聯的名稱<xref href=&quot;System.Configuration.ConfigurationSection&quot;></xref>物件。"
  overload: System.Configuration.SectionInformation.SectionName*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SectionInformation.SetRawXml(System.String)
  id: SetRawXml(System.String)
  parent: System.Configuration.SectionInformation
  langs:
  - csharp
  name: SetRawXml(String)
  nameWithType: SectionInformation.SetRawXml(String)
  fullName: System.Configuration.SectionInformation.SetRawXml(String)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "將物件設定為關聯的組態區段的組態檔中的 XML 表示法。"
  syntax:
    content: public void SetRawXml (string rawXml);
    parameters:
    - id: rawXml
      type: System.String
      description: "若要使用 XML。"
  overload: System.Configuration.SectionInformation.SetRawXml*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>rawXml</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Configuration.SectionInformation.Type
  id: Type
  parent: System.Configuration.SectionInformation
  langs:
  - csharp
  name: Type
  nameWithType: SectionInformation.Type
  fullName: System.Configuration.SectionInformation.Type
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "取得或設定區段的類別名稱。"
  remarks: "Type 屬性傳回處理<xref:System.Configuration.ConfigurationSection>類別</xref:System.Configuration.ConfigurationSection>的這個執行個體的區段類別名稱"
  example:
  - "The following example shows how to get the Type value of a <xref:System.Configuration.ConfigurationSection> object.  \n  \n [!code-vb[System.Configuration.ConfigurationElement#111](~/add/codesnippet/visualbasic/p-system.configuration.s_3_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElement#111](~/add/codesnippet/csharp/p-system.configuration.s_3_1.cs)]"
  syntax:
    content: public string Type { get; set; }
    return:
      type: System.String
      description: "與此相關聯的類別名稱<xref href=&quot;System.Configuration.ConfigurationSection&quot;> </xref> > 一節。"
  overload: System.Configuration.SectionInformation.Type*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "選取的值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>或空字串 (&quot;&quot;)。"
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "選取的值和已定義的值衝突。"
  platform:
  - net462
- uid: System.Configuration.SectionInformation.UnprotectSection
  id: UnprotectSection
  parent: System.Configuration.SectionInformation
  langs:
  - csharp
  name: UnprotectSection()
  nameWithType: SectionInformation.UnprotectSection()
  fullName: System.Configuration.SectionInformation.UnprotectSection()
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "從相關聯的組態區段移除受保護的組態加密。"
  remarks: "如需受保護的組態區段的詳細資訊，請參閱[加密組態資訊使用受保護的組態](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following example shows how to use this method.  \n  \n [!code-vb[System.Configuration.ConfigurationElement#112](~/add/codesnippet/visualbasic/m-system.configuration.s_6_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElement#112](~/add/codesnippet/csharp/m-system.configuration.s_6_1.cs)]"
  syntax:
    content: public void UnprotectSection ();
    parameters: []
  overload: System.Configuration.SectionInformation.UnprotectSection*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Configuration.ConfigurationErrorsException
  parent: System.Configuration
  isExternal: false
  name: ConfigurationErrorsException
  nameWithType: ConfigurationErrorsException
  fullName: System.Configuration.ConfigurationErrorsException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Configuration.SectionInformation.AllowDefinition
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: AllowDefinition
  nameWithType: SectionInformation.AllowDefinition
  fullName: System.Configuration.SectionInformation.AllowDefinition
- uid: System.Configuration.ConfigurationAllowDefinition
  parent: System.Configuration
  isExternal: false
  name: ConfigurationAllowDefinition
  nameWithType: ConfigurationAllowDefinition
  fullName: System.Configuration.ConfigurationAllowDefinition
- uid: System.Configuration.SectionInformation.AllowExeDefinition
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: AllowExeDefinition
  nameWithType: SectionInformation.AllowExeDefinition
  fullName: System.Configuration.SectionInformation.AllowExeDefinition
- uid: System.Configuration.ConfigurationAllowExeDefinition
  parent: System.Configuration
  isExternal: false
  name: ConfigurationAllowExeDefinition
  nameWithType: ConfigurationAllowExeDefinition
  fullName: System.Configuration.ConfigurationAllowExeDefinition
- uid: System.Configuration.SectionInformation.AllowLocation
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: AllowLocation
  nameWithType: SectionInformation.AllowLocation
  fullName: System.Configuration.SectionInformation.AllowLocation
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Configuration.SectionInformation.AllowOverride
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: AllowOverride
  nameWithType: SectionInformation.AllowOverride
  fullName: System.Configuration.SectionInformation.AllowOverride
- uid: System.Configuration.SectionInformation.ConfigSource
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: ConfigSource
  nameWithType: SectionInformation.ConfigSource
  fullName: System.Configuration.SectionInformation.ConfigSource
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Configuration.SectionInformation.ForceDeclaration
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: ForceDeclaration()
  nameWithType: SectionInformation.ForceDeclaration()
  fullName: System.Configuration.SectionInformation.ForceDeclaration()
- uid: System.Configuration.SectionInformation.ForceDeclaration(System.Boolean)
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: ForceDeclaration(Boolean)
  nameWithType: SectionInformation.ForceDeclaration(Boolean)
  fullName: System.Configuration.SectionInformation.ForceDeclaration(Boolean)
- uid: System.Configuration.SectionInformation.ForceSave
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: ForceSave
  nameWithType: SectionInformation.ForceSave
  fullName: System.Configuration.SectionInformation.ForceSave
- uid: System.Configuration.SectionInformation.GetParentSection
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: GetParentSection()
  nameWithType: SectionInformation.GetParentSection()
  fullName: System.Configuration.SectionInformation.GetParentSection()
- uid: System.Configuration.ConfigurationSection
  parent: System.Configuration
  isExternal: false
  name: ConfigurationSection
  nameWithType: ConfigurationSection
  fullName: System.Configuration.ConfigurationSection
- uid: System.Configuration.SectionInformation.GetRawXml
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: GetRawXml()
  nameWithType: SectionInformation.GetRawXml()
  fullName: System.Configuration.SectionInformation.GetRawXml()
- uid: System.Configuration.SectionInformation.InheritInChildApplications
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: InheritInChildApplications
  nameWithType: SectionInformation.InheritInChildApplications
  fullName: System.Configuration.SectionInformation.InheritInChildApplications
- uid: System.Configuration.SectionInformation.IsDeclarationRequired
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: IsDeclarationRequired
  nameWithType: SectionInformation.IsDeclarationRequired
  fullName: System.Configuration.SectionInformation.IsDeclarationRequired
- uid: System.Configuration.SectionInformation.IsDeclared
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: IsDeclared
  nameWithType: SectionInformation.IsDeclared
  fullName: System.Configuration.SectionInformation.IsDeclared
- uid: System.Configuration.SectionInformation.IsLocked
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: IsLocked
  nameWithType: SectionInformation.IsLocked
  fullName: System.Configuration.SectionInformation.IsLocked
- uid: System.Configuration.SectionInformation.IsProtected
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: IsProtected
  nameWithType: SectionInformation.IsProtected
  fullName: System.Configuration.SectionInformation.IsProtected
- uid: System.Configuration.SectionInformation.Name
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: Name
  nameWithType: SectionInformation.Name
  fullName: System.Configuration.SectionInformation.Name
- uid: System.Configuration.SectionInformation.OverrideMode
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: OverrideMode
  nameWithType: SectionInformation.OverrideMode
  fullName: System.Configuration.SectionInformation.OverrideMode
- uid: System.Configuration.OverrideMode
  parent: System.Configuration
  isExternal: false
  name: OverrideMode
  nameWithType: OverrideMode
  fullName: System.Configuration.OverrideMode
- uid: System.Configuration.SectionInformation.OverrideModeDefault
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: OverrideModeDefault
  nameWithType: SectionInformation.OverrideModeDefault
  fullName: System.Configuration.SectionInformation.OverrideModeDefault
- uid: System.Configuration.SectionInformation.OverrideModeEffective
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: OverrideModeEffective
  nameWithType: SectionInformation.OverrideModeEffective
  fullName: System.Configuration.SectionInformation.OverrideModeEffective
- uid: System.Configuration.SectionInformation.ProtectionProvider
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: ProtectionProvider
  nameWithType: SectionInformation.ProtectionProvider
  fullName: System.Configuration.SectionInformation.ProtectionProvider
- uid: System.Configuration.ProtectedConfigurationProvider
  parent: System.Configuration
  isExternal: false
  name: ProtectedConfigurationProvider
  nameWithType: ProtectedConfigurationProvider
  fullName: System.Configuration.ProtectedConfigurationProvider
- uid: System.Configuration.SectionInformation.ProtectSection(System.String)
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: ProtectSection(String)
  nameWithType: SectionInformation.ProtectSection(String)
  fullName: System.Configuration.SectionInformation.ProtectSection(String)
- uid: System.Configuration.SectionInformation.RequirePermission
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: RequirePermission
  nameWithType: SectionInformation.RequirePermission
  fullName: System.Configuration.SectionInformation.RequirePermission
- uid: System.Configuration.SectionInformation.RestartOnExternalChanges
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: RestartOnExternalChanges
  nameWithType: SectionInformation.RestartOnExternalChanges
  fullName: System.Configuration.SectionInformation.RestartOnExternalChanges
- uid: System.Configuration.SectionInformation.RevertToParent
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: RevertToParent()
  nameWithType: SectionInformation.RevertToParent()
  fullName: System.Configuration.SectionInformation.RevertToParent()
- uid: System.Configuration.SectionInformation.SectionName
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: SectionName
  nameWithType: SectionInformation.SectionName
  fullName: System.Configuration.SectionInformation.SectionName
- uid: System.Configuration.SectionInformation.SetRawXml(System.String)
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: SetRawXml(String)
  nameWithType: SectionInformation.SetRawXml(String)
  fullName: System.Configuration.SectionInformation.SetRawXml(String)
- uid: System.Configuration.SectionInformation.Type
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: Type
  nameWithType: SectionInformation.Type
  fullName: System.Configuration.SectionInformation.Type
- uid: System.Configuration.SectionInformation.UnprotectSection
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: UnprotectSection()
  nameWithType: SectionInformation.UnprotectSection()
  fullName: System.Configuration.SectionInformation.UnprotectSection()
- uid: System.Configuration.SectionInformation.AllowDefinition*
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: AllowDefinition
  nameWithType: SectionInformation.AllowDefinition
- uid: System.Configuration.SectionInformation.AllowExeDefinition*
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: AllowExeDefinition
  nameWithType: SectionInformation.AllowExeDefinition
- uid: System.Configuration.SectionInformation.AllowLocation*
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: AllowLocation
  nameWithType: SectionInformation.AllowLocation
- uid: System.Configuration.SectionInformation.AllowOverride*
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: AllowOverride
  nameWithType: SectionInformation.AllowOverride
- uid: System.Configuration.SectionInformation.ConfigSource*
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: ConfigSource
  nameWithType: SectionInformation.ConfigSource
- uid: System.Configuration.SectionInformation.ForceDeclaration*
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: ForceDeclaration
  nameWithType: SectionInformation.ForceDeclaration
- uid: System.Configuration.SectionInformation.ForceSave*
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: ForceSave
  nameWithType: SectionInformation.ForceSave
- uid: System.Configuration.SectionInformation.GetParentSection*
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: GetParentSection
  nameWithType: SectionInformation.GetParentSection
- uid: System.Configuration.SectionInformation.GetRawXml*
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: GetRawXml
  nameWithType: SectionInformation.GetRawXml
- uid: System.Configuration.SectionInformation.InheritInChildApplications*
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: InheritInChildApplications
  nameWithType: SectionInformation.InheritInChildApplications
- uid: System.Configuration.SectionInformation.IsDeclarationRequired*
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: IsDeclarationRequired
  nameWithType: SectionInformation.IsDeclarationRequired
- uid: System.Configuration.SectionInformation.IsDeclared*
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: IsDeclared
  nameWithType: SectionInformation.IsDeclared
- uid: System.Configuration.SectionInformation.IsLocked*
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: IsLocked
  nameWithType: SectionInformation.IsLocked
- uid: System.Configuration.SectionInformation.IsProtected*
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: IsProtected
  nameWithType: SectionInformation.IsProtected
- uid: System.Configuration.SectionInformation.Name*
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: Name
  nameWithType: SectionInformation.Name
- uid: System.Configuration.SectionInformation.OverrideMode*
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: OverrideMode
  nameWithType: SectionInformation.OverrideMode
- uid: System.Configuration.SectionInformation.OverrideModeDefault*
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: OverrideModeDefault
  nameWithType: SectionInformation.OverrideModeDefault
- uid: System.Configuration.SectionInformation.OverrideModeEffective*
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: OverrideModeEffective
  nameWithType: SectionInformation.OverrideModeEffective
- uid: System.Configuration.SectionInformation.ProtectionProvider*
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: ProtectionProvider
  nameWithType: SectionInformation.ProtectionProvider
- uid: System.Configuration.SectionInformation.ProtectSection*
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: ProtectSection
  nameWithType: SectionInformation.ProtectSection
- uid: System.Configuration.SectionInformation.RequirePermission*
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: RequirePermission
  nameWithType: SectionInformation.RequirePermission
- uid: System.Configuration.SectionInformation.RestartOnExternalChanges*
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: RestartOnExternalChanges
  nameWithType: SectionInformation.RestartOnExternalChanges
- uid: System.Configuration.SectionInformation.RevertToParent*
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: RevertToParent
  nameWithType: SectionInformation.RevertToParent
- uid: System.Configuration.SectionInformation.SectionName*
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: SectionName
  nameWithType: SectionInformation.SectionName
- uid: System.Configuration.SectionInformation.SetRawXml*
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: SetRawXml
  nameWithType: SectionInformation.SetRawXml
- uid: System.Configuration.SectionInformation.Type*
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: Type
  nameWithType: SectionInformation.Type
- uid: System.Configuration.SectionInformation.UnprotectSection*
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: UnprotectSection
  nameWithType: SectionInformation.UnprotectSection
