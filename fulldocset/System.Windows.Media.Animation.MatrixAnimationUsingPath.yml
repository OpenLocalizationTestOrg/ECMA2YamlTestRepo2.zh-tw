### YamlMime:ManagedReference
items:
- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath
  id: MatrixAnimationUsingPath
  children:
  - System.Windows.Media.Animation.MatrixAnimationUsingPath.#ctor
  - System.Windows.Media.Animation.MatrixAnimationUsingPath.Clone
  - System.Windows.Media.Animation.MatrixAnimationUsingPath.CreateInstanceCore
  - System.Windows.Media.Animation.MatrixAnimationUsingPath.DoesRotateWithTangent
  - System.Windows.Media.Animation.MatrixAnimationUsingPath.DoesRotateWithTangentProperty
  - System.Windows.Media.Animation.MatrixAnimationUsingPath.GetCurrentValueCore(System.Windows.Media.Matrix,System.Windows.Media.Matrix,System.Windows.Media.Animation.AnimationClock)
  - System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAdditive
  - System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAngleCumulative
  - System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAngleCumulativeProperty
  - System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulative
  - System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulativeProperty
  - System.Windows.Media.Animation.MatrixAnimationUsingPath.OnChanged
  - System.Windows.Media.Animation.MatrixAnimationUsingPath.PathGeometry
  - System.Windows.Media.Animation.MatrixAnimationUsingPath.PathGeometryProperty
  langs:
  - csharp
  name: MatrixAnimationUsingPath
  nameWithType: MatrixAnimationUsingPath
  fullName: System.Windows.Media.Animation.MatrixAnimationUsingPath
  type: Class
  summary: "值的動畫<xref href=&quot;System.Windows.Media.Matrix&quot;></xref>屬性使用<xref href=&quot;System.Windows.Media.PathGeometry&quot;></xref>產生動畫的值。 這個動畫可用視覺物件沿著路徑移動。"
  remarks: "MatrixAnimationUsingPath 可讓您以動畫方式顯示的角度和位置有單一的動畫和<xref:System.Windows.Media.MatrixTransform>.</xref:System.Windows.Media.MatrixTransform>的物件       <xref:System.Windows.Media.Animation.PointAnimationUsingPath>使用線性插補在指定<xref:System.Windows.Media.Animation.Timeline.Duration%2A>.</xref:System.Windows.Media.Animation.Timeline.Duration%2A>其目標以動畫顯示</xref:System.Windows.Media.Animation.PointAnimationUsingPath>"
  syntax:
    content: 'public class MatrixAnimationUsingPath : System.Windows.Media.Animation.MatrixAnimationBase'
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  - System.Windows.Freezable
  - System.Windows.Media.Animation.Animatable
  - System.Windows.Media.Animation.Timeline
  - System.Windows.Media.Animation.AnimationTimeline
  - System.Windows.Media.Animation.MatrixAnimationBase
  implements: []
  inheritedMembers:
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.Freezable.CanFreeze
  - System.Windows.Freezable.Changed
  - System.Windows.Freezable.CloneCore(System.Windows.Freezable)
  - System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)
  - System.Windows.Freezable.CreateInstance
  - System.Windows.Freezable.Freeze
  - System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)
  - System.Windows.Freezable.GetAsFrozen
  - System.Windows.Freezable.GetCurrentValueAsFrozen
  - System.Windows.Freezable.IsFrozen
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)
  - System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.Freezable.ReadPreamble
  - System.Windows.Freezable.WritePostscript
  - System.Windows.Freezable.WritePreamble
  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)
  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)
  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)
  - System.Windows.Media.Animation.Animatable.HasAnimatedProperties
  - System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)
  - System.Windows.Media.Animation.AnimationTimeline.AllocateClock
  - System.Windows.Media.Animation.AnimationTimeline.CreateClock
  - System.Windows.Media.Animation.AnimationTimeline.GetNaturalDurationCore(System.Windows.Media.Animation.Clock)
  - System.Windows.Media.Animation.AnimationTimeline.IsAdditiveProperty
  - System.Windows.Media.Animation.AnimationTimeline.IsCumulativeProperty
  - System.Windows.Media.Animation.AnimationTimeline.IsDestinationDefault
  - System.Windows.Media.Animation.MatrixAnimationBase.GetCurrentValue(System.Object,System.Object,System.Windows.Media.Animation.AnimationClock)
  - System.Windows.Media.Animation.MatrixAnimationBase.GetCurrentValue(System.Windows.Media.Matrix,System.Windows.Media.Matrix,System.Windows.Media.Animation.AnimationClock)
  - System.Windows.Media.Animation.MatrixAnimationBase.TargetPropertyType
  - System.Windows.Media.Animation.Timeline.AccelerationRatio
  - System.Windows.Media.Animation.Timeline.AccelerationRatioProperty
  - System.Windows.Media.Animation.Timeline.AutoReverse
  - System.Windows.Media.Animation.Timeline.AutoReverseProperty
  - System.Windows.Media.Animation.Timeline.BeginTime
  - System.Windows.Media.Animation.Timeline.BeginTimeProperty
  - System.Windows.Media.Animation.Timeline.CloneCurrentValue
  - System.Windows.Media.Animation.Timeline.Completed
  - System.Windows.Media.Animation.Timeline.CreateClock(System.Boolean)
  - System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated
  - System.Windows.Media.Animation.Timeline.CurrentStateInvalidated
  - System.Windows.Media.Animation.Timeline.CurrentTimeInvalidated
  - System.Windows.Media.Animation.Timeline.DecelerationRatio
  - System.Windows.Media.Animation.Timeline.DecelerationRatioProperty
  - System.Windows.Media.Animation.Timeline.DesiredFrameRateProperty
  - System.Windows.Media.Animation.Timeline.Duration
  - System.Windows.Media.Animation.Timeline.DurationProperty
  - System.Windows.Media.Animation.Timeline.FillBehavior
  - System.Windows.Media.Animation.Timeline.FillBehaviorProperty
  - System.Windows.Media.Animation.Timeline.FreezeCore(System.Boolean)
  - System.Windows.Media.Animation.Timeline.GetAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Media.Animation.Timeline.GetCurrentValueAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Media.Animation.Timeline.GetDesiredFrameRate(System.Windows.Media.Animation.Timeline)
  - System.Windows.Media.Animation.Timeline.GetNaturalDuration(System.Windows.Media.Animation.Clock)
  - System.Windows.Media.Animation.Timeline.Name
  - System.Windows.Media.Animation.Timeline.NameProperty
  - System.Windows.Media.Animation.Timeline.RemoveRequested
  - System.Windows.Media.Animation.Timeline.RepeatBehavior
  - System.Windows.Media.Animation.Timeline.RepeatBehaviorProperty
  - System.Windows.Media.Animation.Timeline.SetDesiredFrameRate(System.Windows.Media.Animation.Timeline,System.Nullable{System.Int32})
  - System.Windows.Media.Animation.Timeline.SpeedRatio
  - System.Windows.Media.Animation.Timeline.SpeedRatioProperty
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath.#ctor
  id: '#ctor'
  parent: System.Windows.Media.Animation.MatrixAnimationUsingPath
  langs:
  - csharp
  name: MatrixAnimationUsingPath()
  nameWithType: MatrixAnimationUsingPath.MatrixAnimationUsingPath()
  fullName: System.Windows.Media.Animation.MatrixAnimationUsingPath.MatrixAnimationUsingPath()
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "初始化的新執行個體<xref href=&quot;System.Windows.Media.Animation.MatrixAnimationUsingPath&quot;></xref>類別。"
  remarks: "沒有預設值<xref:System.Windows.Media.PathGeometry>，因此使用者必須指定其中一個。</xref:System.Windows.Media.PathGeometry>"
  syntax:
    content: public MatrixAnimationUsingPath ();
    parameters: []
  overload: System.Windows.Media.Animation.MatrixAnimationUsingPath.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath.Clone
  id: Clone
  parent: System.Windows.Media.Animation.MatrixAnimationUsingPath
  langs:
  - csharp
  name: Clone()
  nameWithType: MatrixAnimationUsingPath.Clone()
  fullName: System.Windows.Media.Animation.MatrixAnimationUsingPath.Clone()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "建立可修改複製品這個<xref href=&quot;System.Windows.Media.Animation.MatrixAnimationUsingPath&quot;> </xref>，製作這個物件值的深層複本。 當複製相依性屬性時，這個方法會複製資源參考和資料繫結 （但可能已不能再解析），但不是動畫或它們目前的值。"
  remarks: "這個方法用來產生的可修改複本凍結<xref:System.Windows.Freezable>物件 (或任何<xref:System.Windows.Freezable>物件)。</xref:System.Windows.Freezable> </xref:System.Windows.Freezable> 為了方便起見，這個方法會遮蔽強型別實作繼承的版本。       如需詳細資訊，請參閱<xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>.</xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>"
  syntax:
    content: public System.Windows.Media.Animation.MatrixAnimationUsingPath Clone ();
    parameters: []
    return:
      type: System.Windows.Media.Animation.MatrixAnimationUsingPath
      description: "目前物件的可修改複本。 複製的物件<> *> 屬性會是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>即使來源的<> *> 屬性<xref uid=&quot;langword_csharp_true.&quot; name=&quot;true.&quot; href=&quot;&quot;></xref>"
  overload: System.Windows.Media.Animation.MatrixAnimationUsingPath.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath.CreateInstanceCore
  id: CreateInstanceCore
  parent: System.Windows.Media.Animation.MatrixAnimationUsingPath
  langs:
  - csharp
  name: CreateInstanceCore()
  nameWithType: MatrixAnimationUsingPath.CreateInstanceCore()
  fullName: System.Windows.Media.Animation.MatrixAnimationUsingPath.CreateInstanceCore()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "建立的新執行個體<xref href=&quot;System.Windows.Media.Animation.MatrixAnimationUsingPath&quot;> </xref>。"
  syntax:
    content: protected override System.Windows.Freezable CreateInstanceCore ();
    parameters: []
    return:
      type: System.Windows.Freezable
      description: "新的執行個體。"
  overload: System.Windows.Media.Animation.MatrixAnimationUsingPath.CreateInstanceCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath.DoesRotateWithTangent
  id: DoesRotateWithTangent
  parent: System.Windows.Media.Animation.MatrixAnimationUsingPath
  langs:
  - csharp
  name: DoesRotateWithTangent
  nameWithType: MatrixAnimationUsingPath.DoesRotateWithTangent
  fullName: System.Windows.Media.Animation.MatrixAnimationUsingPath.DoesRotateWithTangent
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "取得或設定值，指出物件是否沿著路徑的正切函數旋轉。"
  remarks: "當您想要在動畫的路徑會出現 「 隱藏 」 的動畫的物件時，請使用屬性。      <a name=&quot;dependencyPropertyInfo_DoesRotateWithTangent&quot;></a># # 相依性屬性資訊 | | |  |-|-|  |識別項欄位 |<xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.DoesRotateWithTangentProperty>|  |中繼資料屬性設定為`true`|None |</xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.DoesRotateWithTangentProperty>"
  syntax:
    content: public bool DoesRotateWithTangent { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果物件會沿著路徑; 的正切函數旋轉否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Media.Animation.MatrixAnimationUsingPath.DoesRotateWithTangent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath.DoesRotateWithTangentProperty
  id: DoesRotateWithTangentProperty
  parent: System.Windows.Media.Animation.MatrixAnimationUsingPath
  langs:
  - csharp
  name: DoesRotateWithTangentProperty
  nameWithType: MatrixAnimationUsingPath.DoesRotateWithTangentProperty
  fullName: System.Windows.Media.Animation.MatrixAnimationUsingPath.DoesRotateWithTangentProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "識別<xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.DoesRotateWithTangent*>相依性屬性。</xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.DoesRotateWithTangent*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty DoesRotateWithTangentProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath.GetCurrentValueCore(System.Windows.Media.Matrix,System.Windows.Media.Matrix,System.Windows.Media.Animation.AnimationClock)
  id: GetCurrentValueCore(System.Windows.Media.Matrix,System.Windows.Media.Matrix,System.Windows.Media.Animation.AnimationClock)
  parent: System.Windows.Media.Animation.MatrixAnimationUsingPath
  langs:
  - csharp
  name: GetCurrentValueCore(Matrix,Matrix,AnimationClock)
  nameWithType: MatrixAnimationUsingPath.GetCurrentValueCore(Matrix,Matrix,AnimationClock)
  fullName: System.Windows.Media.Animation.MatrixAnimationUsingPath.GetCurrentValueCore(Matrix,Matrix,AnimationClock)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "計算值，代表正在顯示動畫之屬性的目前值，由<xref href=&quot;System.Windows.Media.Animation.MatrixAnimationUsingPath&quot;> </xref>。"
  remarks: "如果`defaultOriginValue`是第一個組合鏈結中，這個值會是快照集 （如果有的話） 或基底屬性的值，否則這個值會以鏈結中前一個動畫所傳回的值<xref:System.Windows.Media.Animation.AnimationClock>不<xref:System.Windows.Media.Animation.Clock.Stopped%2A>.</xref:System.Windows.Media.Animation.Clock.Stopped%2A> </xref:System.Windows.Media.Animation.AnimationClock>       `defaultDestinationValue`是基底值，如果動畫會在動畫的屬性上的第一個組合圖層中; 否則值是從上一個組合層次屬性的動畫的輸出值。"
  syntax:
    content: protected override System.Windows.Media.Matrix GetCurrentValueCore (System.Windows.Media.Matrix defaultOriginValue, System.Windows.Media.Matrix defaultDestinationValue, System.Windows.Media.Animation.AnimationClock animationClock);
    parameters:
    - id: defaultOriginValue
      type: System.Windows.Media.Matrix
      description: "建議的原始值，如果沒有明確設定動畫開始值。"
    - id: defaultDestinationValue
      type: System.Windows.Media.Matrix
      description: "建議的目的值，如果沒有明確設定動畫結束值。"
    - id: animationClock
      type: System.Windows.Media.Animation.AnimationClock
      description: "<xref href=&quot;System.Windows.Media.Animation.AnimationClock&quot;> </xref>產生<> *> 或<> *> 動畫所使用。"
    return:
      type: System.Windows.Media.Matrix
      description: "導出的屬性的值，由目前的動畫所決定。"
  overload: System.Windows.Media.Animation.MatrixAnimationUsingPath.GetCurrentValueCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAdditive
  id: IsAdditive
  parent: System.Windows.Media.Animation.MatrixAnimationUsingPath
  langs:
  - csharp
  name: IsAdditive
  nameWithType: MatrixAnimationUsingPath.IsAdditive
  fullName: System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAdditive
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "取得或設定值，指出是否應該將目標屬性的目前值加入至這個動畫的起始值。"
  remarks: "<a name=&quot;dependencyPropertyInfo_IsAdditive&quot;></a># # 相依性屬性資訊 | | |  |-|-|  |識別項欄位 |<xref:System.Windows.Media.Animation.AnimationTimeline.IsAdditiveProperty>|  |中繼資料屬性設定為`true`|None |     > [!NOTE] > 這個相依性屬性並不常見，因為它的識別項欄位來自<xref:System.Windows.Media.Animation.AnimationTimeline>各種衍生類別來共用。</xref:System.Windows.Media.Animation.AnimationTimeline> </xref:System.Windows.Media.Animation.AnimationTimeline.IsAdditiveProperty>"
  example:
  - "The following example uses two similar <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath> animations to animate the same rectangle. The first animation's IsAdditive property is set to `false`, so it always animates the rectangle from (0,0), the animation's starting value. The second animation has the same target values (their <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.PathGeometry%2A> settings are identical), but its IsAdditive property is set to `true`; as a result, it animates the rectangle from whatever position it is at when the animation is applied.  \n  \n [!code-xml[PathAnimationGallery_snip#MatrixAnimationUsingPathIsAdditiveExampleWholePage](~/add/codesnippet/xaml/p-system.windows.media.a_1_1.xaml)]\n [!code-xml[PathAnimationGallery_snip#MatrixAnimationUsingPathIsAdditiveExampleWholePage](~/add/codesnippet/xaml/p-system.windows.media.a_1_1.xaml)]"
  syntax:
    content: public bool IsAdditive { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果目標屬性的目前值應該加入至這個動畫的起始值。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAdditive*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAngleCumulative
  id: IsAngleCumulative
  parent: System.Windows.Media.Animation.MatrixAnimationUsingPath
  langs:
  - csharp
  name: IsAngleCumulative
  nameWithType: MatrixAnimationUsingPath.IsAngleCumulative
  fullName: System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAngleCumulative
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "取得或設定值，指定動畫矩陣的旋轉角度是否應該隨著重複而累積。"
  remarks: "如果這個屬性設定為`true`，在動畫重複時，將會累積動畫矩陣的旋轉角度。  如果路徑是小型弧線，累加的角度會導致每次重複，而不要重新啟動旋轉連續旋轉物件。  當結合<xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulative%2A>的`true`，滾筒式時它退 （取決於您指定的路徑） 可能會顯示您的物件。</xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulative%2A> 如需相關資訊，請參閱<xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulative%2A>.</xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulative%2A>       如果設定此屬性沒有任何作用<xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.DoesRotateWithTangent%2A>是`false`。</xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.DoesRotateWithTangent%2A>       此屬性會決定是否要在動畫重複因為時累加動畫矩陣的角度其<xref:System.Windows.Media.Animation.Timeline.RepeatBehavior%2A>設定; 它不會導致重新啟動動畫時累積的位移。</xref:System.Windows.Media.Animation.Timeline.RepeatBehavior%2A> 如需如何進行建置關前一個動畫的動畫資訊，請參閱<xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAdditive%2A>.</xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAdditive%2A>      <a name=&quot;dependencyPropertyInfo_IsAngleCumulative&quot;></a># # 相依性屬性資訊 | | |  |-|-|  |識別項欄位 |<xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAngleCumulativeProperty>|  |中繼資料屬性設定為`true`|None |</xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAngleCumulativeProperty>"
  example:
  - "The following example uses two similar <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath> animations to animate the same rectangle. Both animations have the same <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.PathGeometry%2A> setting, which causes the rectangle to rotate as it moves along the screen to the right, and both animations are set to repeat four times. The first animation's IsAngleCumulative property is set to `false`, so the rectangle jumps back to its original angle when the animation repeats. The second animation's IsAngleCumulative property is set to `true`; as a result, the rectangle angle appears to increase when the animation repeats, rather than jumping back to its original value.  \n  \n [!code-xml[PathAnimationGallery_snip#MatrixAnimationUsingPathIsAngleCumulativeExampleWholePage](~/add/codesnippet/xaml/p-system.windows.media.a_8_1.xaml)]\n [!code-xml[PathAnimationGallery_snip#MatrixAnimationUsingPathIsAngleCumulativeExampleWholePage](~/add/codesnippet/xaml/p-system.windows.media.a_8_1.xaml)]"
  syntax:
    content: public bool IsAngleCumulative { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果動畫的旋轉角度應該在重複時累加。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAngleCumulative*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAngleCumulativeProperty
  id: IsAngleCumulativeProperty
  parent: System.Windows.Media.Animation.MatrixAnimationUsingPath
  langs:
  - csharp
  name: IsAngleCumulativeProperty
  nameWithType: MatrixAnimationUsingPath.IsAngleCumulativeProperty
  fullName: System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAngleCumulativeProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "識別<xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAngleCumulative*>相依性屬性。</xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAngleCumulative*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty IsAngleCumulativeProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulative
  id: IsOffsetCumulative
  parent: System.Windows.Media.Animation.MatrixAnimationUsingPath
  langs:
  - csharp
  name: IsOffsetCumulative
  nameWithType: MatrixAnimationUsingPath.IsOffsetCumulative
  fullName: System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulative
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "取得或設定值，指出是否由動畫矩陣所產生的位移會隨著重複而累積。"
  remarks: "如果這個屬性設定為`true`，在動畫重複時，將會累積動畫矩陣的位移。 例如，如果路徑是小型弧線，動畫會設定為重複累計位移會造成要出現在螢幕上來回傳送的物件。       此屬性會決定是否要在動畫重複因為時累加動畫矩陣的位移其<xref:System.Windows.Media.Animation.Timeline.RepeatBehavior%2A>設定; 它不會導致重新啟動動畫時累積的位移。</xref:System.Windows.Media.Animation.Timeline.RepeatBehavior%2A> 如需如何進行建置關前一個動畫的動畫資訊，請參閱<xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAdditive%2A>.</xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAdditive%2A>      <a name=&quot;dependencyPropertyInfo_IsOffsetCumulative&quot;></a># # 相依性屬性資訊 | | |  |-|-|  |識別項欄位 |<xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulativeProperty>|  |中繼資料屬性設定為`true`|None |</xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulativeProperty>"
  syntax:
    content: public bool IsOffsetCumulative { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果物件將會累積一段會重複的動畫。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulative*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulativeProperty
  id: IsOffsetCumulativeProperty
  parent: System.Windows.Media.Animation.MatrixAnimationUsingPath
  langs:
  - csharp
  name: IsOffsetCumulativeProperty
  nameWithType: MatrixAnimationUsingPath.IsOffsetCumulativeProperty
  fullName: System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulativeProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "識別<xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulative*>相依性屬性。</xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulative*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty IsOffsetCumulativeProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath.OnChanged
  id: OnChanged
  parent: System.Windows.Media.Animation.MatrixAnimationUsingPath
  langs:
  - csharp
  name: OnChanged()
  nameWithType: MatrixAnimationUsingPath.OnChanged()
  fullName: System.Windows.Media.Animation.MatrixAnimationUsingPath.OnChanged()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "呼叫時這個<xref href=&quot;System.Windows.Media.Animation.MatrixAnimationUsingPath&quot;></xref>修改。"
  syntax:
    content: protected override void OnChanged ();
    parameters: []
  overload: System.Windows.Media.Animation.MatrixAnimationUsingPath.OnChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath.PathGeometry
  id: PathGeometry
  parent: System.Windows.Media.Animation.MatrixAnimationUsingPath
  langs:
  - csharp
  name: PathGeometry
  nameWithType: MatrixAnimationUsingPath.PathGeometry
  fullName: System.Windows.Media.Animation.MatrixAnimationUsingPath.PathGeometry
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "取得或設定用來產生這個動畫之輸出值的幾何。"
  remarks: "A<xref:System.Windows.Media.PathGeometry>可以描述包含曲線的複雜圖形及弧線，讓您指定用於輸入動畫的複雜圖形。</xref:System.Windows.Media.PathGeometry> 如需詳細資訊，請參閱[幾何概觀](~/add/includes/ajax-current-ext-md.md)。      <a name=&quot;dependencyPropertyInfo_PathGeometry&quot;></a># # 相依性屬性資訊 | | |  |-|-|  |識別項欄位 |<xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.PathGeometryProperty>|  |中繼資料屬性設定為`true`|None |</xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.PathGeometryProperty>"
  syntax:
    content: public System.Windows.Media.PathGeometry PathGeometry { get; set; }
    return:
      type: System.Windows.Media.PathGeometry
      description: "用來產生這個動畫的幾何之輸出值。 預設值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Media.Animation.MatrixAnimationUsingPath.PathGeometry*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath.PathGeometryProperty
  id: PathGeometryProperty
  parent: System.Windows.Media.Animation.MatrixAnimationUsingPath
  langs:
  - csharp
  name: PathGeometryProperty
  nameWithType: MatrixAnimationUsingPath.PathGeometryProperty
  fullName: System.Windows.Media.Animation.MatrixAnimationUsingPath.PathGeometryProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "識別<xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.PathGeometry*>相依性屬性。</xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.PathGeometry*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty PathGeometryProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Media.Animation.MatrixAnimationBase
  isExternal: false
  name: System.Windows.Media.Animation.MatrixAnimationBase
- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath.#ctor
  parent: System.Windows.Media.Animation.MatrixAnimationUsingPath
  isExternal: false
  name: MatrixAnimationUsingPath()
  nameWithType: MatrixAnimationUsingPath.MatrixAnimationUsingPath()
  fullName: System.Windows.Media.Animation.MatrixAnimationUsingPath.MatrixAnimationUsingPath()
- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath.Clone
  parent: System.Windows.Media.Animation.MatrixAnimationUsingPath
  isExternal: false
  name: Clone()
  nameWithType: MatrixAnimationUsingPath.Clone()
  fullName: System.Windows.Media.Animation.MatrixAnimationUsingPath.Clone()
- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath
  parent: System.Windows.Media.Animation
  isExternal: false
  name: MatrixAnimationUsingPath
  nameWithType: MatrixAnimationUsingPath
  fullName: System.Windows.Media.Animation.MatrixAnimationUsingPath
- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath.CreateInstanceCore
  parent: System.Windows.Media.Animation.MatrixAnimationUsingPath
  isExternal: false
  name: CreateInstanceCore()
  nameWithType: MatrixAnimationUsingPath.CreateInstanceCore()
  fullName: System.Windows.Media.Animation.MatrixAnimationUsingPath.CreateInstanceCore()
- uid: System.Windows.Freezable
  parent: System.Windows
  isExternal: false
  name: Freezable
  nameWithType: Freezable
  fullName: System.Windows.Freezable
- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath.DoesRotateWithTangent
  parent: System.Windows.Media.Animation.MatrixAnimationUsingPath
  isExternal: false
  name: DoesRotateWithTangent
  nameWithType: MatrixAnimationUsingPath.DoesRotateWithTangent
  fullName: System.Windows.Media.Animation.MatrixAnimationUsingPath.DoesRotateWithTangent
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath.DoesRotateWithTangentProperty
  parent: System.Windows.Media.Animation.MatrixAnimationUsingPath
  isExternal: false
  name: DoesRotateWithTangentProperty
  nameWithType: MatrixAnimationUsingPath.DoesRotateWithTangentProperty
  fullName: System.Windows.Media.Animation.MatrixAnimationUsingPath.DoesRotateWithTangentProperty
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath.GetCurrentValueCore(System.Windows.Media.Matrix,System.Windows.Media.Matrix,System.Windows.Media.Animation.AnimationClock)
  parent: System.Windows.Media.Animation.MatrixAnimationUsingPath
  isExternal: false
  name: GetCurrentValueCore(Matrix,Matrix,AnimationClock)
  nameWithType: MatrixAnimationUsingPath.GetCurrentValueCore(Matrix,Matrix,AnimationClock)
  fullName: System.Windows.Media.Animation.MatrixAnimationUsingPath.GetCurrentValueCore(Matrix,Matrix,AnimationClock)
- uid: System.Windows.Media.Matrix
  parent: System.Windows.Media
  isExternal: false
  name: Matrix
  nameWithType: Matrix
  fullName: System.Windows.Media.Matrix
- uid: System.Windows.Media.Animation.AnimationClock
  parent: System.Windows.Media.Animation
  isExternal: false
  name: AnimationClock
  nameWithType: AnimationClock
  fullName: System.Windows.Media.Animation.AnimationClock
- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAdditive
  parent: System.Windows.Media.Animation.MatrixAnimationUsingPath
  isExternal: false
  name: IsAdditive
  nameWithType: MatrixAnimationUsingPath.IsAdditive
  fullName: System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAdditive
- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAngleCumulative
  parent: System.Windows.Media.Animation.MatrixAnimationUsingPath
  isExternal: false
  name: IsAngleCumulative
  nameWithType: MatrixAnimationUsingPath.IsAngleCumulative
  fullName: System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAngleCumulative
- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAngleCumulativeProperty
  parent: System.Windows.Media.Animation.MatrixAnimationUsingPath
  isExternal: false
  name: IsAngleCumulativeProperty
  nameWithType: MatrixAnimationUsingPath.IsAngleCumulativeProperty
  fullName: System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAngleCumulativeProperty
- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulative
  parent: System.Windows.Media.Animation.MatrixAnimationUsingPath
  isExternal: false
  name: IsOffsetCumulative
  nameWithType: MatrixAnimationUsingPath.IsOffsetCumulative
  fullName: System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulative
- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulativeProperty
  parent: System.Windows.Media.Animation.MatrixAnimationUsingPath
  isExternal: false
  name: IsOffsetCumulativeProperty
  nameWithType: MatrixAnimationUsingPath.IsOffsetCumulativeProperty
  fullName: System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulativeProperty
- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath.OnChanged
  parent: System.Windows.Media.Animation.MatrixAnimationUsingPath
  isExternal: false
  name: OnChanged()
  nameWithType: MatrixAnimationUsingPath.OnChanged()
  fullName: System.Windows.Media.Animation.MatrixAnimationUsingPath.OnChanged()
- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath.PathGeometry
  parent: System.Windows.Media.Animation.MatrixAnimationUsingPath
  isExternal: false
  name: PathGeometry
  nameWithType: MatrixAnimationUsingPath.PathGeometry
  fullName: System.Windows.Media.Animation.MatrixAnimationUsingPath.PathGeometry
- uid: System.Windows.Media.PathGeometry
  parent: System.Windows.Media
  isExternal: false
  name: PathGeometry
  nameWithType: PathGeometry
  fullName: System.Windows.Media.PathGeometry
- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath.PathGeometryProperty
  parent: System.Windows.Media.Animation.MatrixAnimationUsingPath
  isExternal: false
  name: PathGeometryProperty
  nameWithType: MatrixAnimationUsingPath.PathGeometryProperty
  fullName: System.Windows.Media.Animation.MatrixAnimationUsingPath.PathGeometryProperty
- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath.#ctor*
  parent: System.Windows.Media.Animation.MatrixAnimationUsingPath
  isExternal: false
  name: MatrixAnimationUsingPath
  nameWithType: MatrixAnimationUsingPath.MatrixAnimationUsingPath
- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath.Clone*
  parent: System.Windows.Media.Animation.MatrixAnimationUsingPath
  isExternal: false
  name: Clone
  nameWithType: MatrixAnimationUsingPath.Clone
- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath.CreateInstanceCore*
  parent: System.Windows.Media.Animation.MatrixAnimationUsingPath
  isExternal: false
  name: CreateInstanceCore
  nameWithType: MatrixAnimationUsingPath.CreateInstanceCore
- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath.DoesRotateWithTangent*
  parent: System.Windows.Media.Animation.MatrixAnimationUsingPath
  isExternal: false
  name: DoesRotateWithTangent
  nameWithType: MatrixAnimationUsingPath.DoesRotateWithTangent
- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath.GetCurrentValueCore*
  parent: System.Windows.Media.Animation.MatrixAnimationUsingPath
  isExternal: false
  name: GetCurrentValueCore
  nameWithType: MatrixAnimationUsingPath.GetCurrentValueCore
- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAdditive*
  parent: System.Windows.Media.Animation.MatrixAnimationUsingPath
  isExternal: false
  name: IsAdditive
  nameWithType: MatrixAnimationUsingPath.IsAdditive
- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAngleCumulative*
  parent: System.Windows.Media.Animation.MatrixAnimationUsingPath
  isExternal: false
  name: IsAngleCumulative
  nameWithType: MatrixAnimationUsingPath.IsAngleCumulative
- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulative*
  parent: System.Windows.Media.Animation.MatrixAnimationUsingPath
  isExternal: false
  name: IsOffsetCumulative
  nameWithType: MatrixAnimationUsingPath.IsOffsetCumulative
- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath.OnChanged*
  parent: System.Windows.Media.Animation.MatrixAnimationUsingPath
  isExternal: false
  name: OnChanged
  nameWithType: MatrixAnimationUsingPath.OnChanged
- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath.PathGeometry*
  parent: System.Windows.Media.Animation.MatrixAnimationUsingPath
  isExternal: false
  name: PathGeometry
  nameWithType: MatrixAnimationUsingPath.PathGeometry
