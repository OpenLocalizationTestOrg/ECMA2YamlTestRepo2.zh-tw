### YamlMime:ManagedReference
items:
- uid: System.Windows.Media.VisualCollection
  id: VisualCollection
  children:
  - System.Windows.Media.VisualCollection.#ctor(System.Windows.Media.Visual)
  - System.Windows.Media.VisualCollection.Add(System.Windows.Media.Visual)
  - System.Windows.Media.VisualCollection.Capacity
  - System.Windows.Media.VisualCollection.Clear
  - System.Windows.Media.VisualCollection.Contains(System.Windows.Media.Visual)
  - System.Windows.Media.VisualCollection.CopyTo(System.Array,System.Int32)
  - System.Windows.Media.VisualCollection.CopyTo(System.Windows.Media.Visual[],System.Int32)
  - System.Windows.Media.VisualCollection.Count
  - System.Windows.Media.VisualCollection.GetEnumerator
  - System.Windows.Media.VisualCollection.IndexOf(System.Windows.Media.Visual)
  - System.Windows.Media.VisualCollection.Insert(System.Int32,System.Windows.Media.Visual)
  - System.Windows.Media.VisualCollection.IsReadOnly
  - System.Windows.Media.VisualCollection.IsSynchronized
  - System.Windows.Media.VisualCollection.Item(System.Int32)
  - System.Windows.Media.VisualCollection.Remove(System.Windows.Media.Visual)
  - System.Windows.Media.VisualCollection.RemoveAt(System.Int32)
  - System.Windows.Media.VisualCollection.RemoveRange(System.Int32,System.Int32)
  - System.Windows.Media.VisualCollection.SyncRoot
  - System.Windows.Media.VisualCollection.System#Collections#IEnumerable#GetEnumerator
  langs:
  - csharp
  name: VisualCollection
  nameWithType: VisualCollection
  fullName: System.Windows.Media.VisualCollection
  type: Class
  summary: "代表已排序的集合<xref href=&quot;System.Windows.Media.Visual&quot;></xref>物件。"
  remarks: "超出 VisualCollection 具有隱含內容親和性。 如果程序會嘗試從擁有的內容不同的內容存取超出 VisualCollection <xref:System.Windows.Media.ContainerVisual>，擲回例外狀況。</xref:System.Windows.Media.ContainerVisual>"
  example:
  - "The following example shows how to create a VisualCollection and add members to it.  \n  \n [!code-cs[DrawingVisualSample#100](~/add/codesnippet/csharp/DrawingVisual/Window1.xaml.cs#100)]\n [!code-vb[DrawingVisualSample#100](~/add/codesnippet/visualbasic/drawingvisual/window1.xaml.vb#100)]  \n  \n> [!NOTE]\n>  For the complete sample, see [Hit Test Using DrawingVisuals Sample](http://go.microsoft.com/fwlink/?LinkID=159994)."
  syntax:
    content: 'public sealed class VisualCollection : System.Collections.ICollection'
  inheritance:
  - System.Object
  implements:
  - System.Collections.ICollection
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.#ctor(System.Windows.Media.Visual)
  id: '#ctor(System.Windows.Media.Visual)'
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: VisualCollection(Visual)
  nameWithType: VisualCollection.VisualCollection(Visual)
  fullName: System.Windows.Media.VisualCollection.VisualCollection(Visual)
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "初始化的新執行個體<xref href=&quot;System.Windows.Media.VisualCollection&quot;></xref>類別。"
  syntax:
    content: public VisualCollection (System.Windows.Media.Visual parent);
    parameters:
    - id: parent
      type: System.Windows.Media.Visual
      description: "視覺化父物件，其<xref href=&quot;System.Windows.Media.VisualCollection&quot;></xref>傳回。"
  overload: System.Windows.Media.VisualCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.Add(System.Windows.Media.Visual)
  id: Add(System.Windows.Media.Visual)
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: Add(Visual)
  nameWithType: VisualCollection.Add(Visual)
  fullName: System.Windows.Media.VisualCollection.Add(Visual)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "將附加<xref href=&quot;System.Windows.Media.Visual&quot;></xref>結尾<xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref>。"
  remarks: "加入<xref:System.Windows.Media.Visual>其實`null`且不會引發例外狀況。</xref:System.Windows.Media.Visual>       Add 方法也會設定父系-子系之間的關聯性的父 visual，也就是擁有者的<xref:System.Windows.Media.VisualCollection>，與子系`visual`。</xref:System.Windows.Media.VisualCollection>       如果您需要更低層級控制的自訂類別的視覺化子物件的基礎儲存體實作，請考慮使用<xref:System.Windows.Media.Visual.AddVisualChild%2A>和<xref:System.Windows.Media.Visual.RemoveVisualChild%2A>方法。</xref:System.Windows.Media.Visual.RemoveVisualChild%2A> </xref:System.Windows.Media.Visual.AddVisualChild%2A> 當您使用這些方法時，您必須定義您自己的儲存體實作，而且不會使用<xref:System.Windows.Media.VisualCollection>.</xref:System.Windows.Media.VisualCollection>"
  example:
  - "The following example shows how to create a <xref:System.Windows.Media.VisualCollection> and add members to it.  \n  \n [!code-cs[DrawingVisualSample#100](~/add/codesnippet/csharp/DrawingVisual/Window1.xaml.cs#100)]\n [!code-vb[DrawingVisualSample#100](~/add/codesnippet/visualbasic/drawingvisual/window1.xaml.vb#100)]  \n  \n> [!NOTE]\n>  For the complete sample, see [Hit Test Using DrawingVisuals Sample](http://go.microsoft.com/fwlink/?LinkID=159994)."
  syntax:
    content: public int Add (System.Windows.Media.Visual visual);
    parameters:
    - id: visual
      type: System.Windows.Media.Visual
      description: "<xref href=&quot;System.Windows.Media.Visual&quot;> </xref>要附加至<xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref>。"
    return:
      type: System.Int32
      description: "在集合中的索引<code> visual </code>已加入。"
  overload: System.Windows.Media.VisualCollection.Add*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<xref:System.ArgumentException>則會擲回<xref href=&quot;System.Windows.Media.Visual&quot;></xref>根項目。</xref:System.ArgumentException>"
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.Capacity
  id: Capacity
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: Capacity
  nameWithType: VisualCollection.Capacity
  fullName: System.Windows.Media.VisualCollection.Capacity
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "取得或設定項目數目<xref href=&quot;System.Windows.Media.VisualCollection&quot;></xref>可以包含。"
  remarks: "容量值是項目數目，<xref:System.Windows.Media.VisualCollection>存放。</xref:System.Windows.Media.VisualCollection> <xref:System.Windows.Media.VisualCollection.Count%2A>是已實際<xref:System.Windows.Media.VisualCollection>.</xref:System.Windows.Media.VisualCollection>的視覺效果的數目</xref:System.Windows.Media.VisualCollection.Count%2A> 容量永遠是大於或等於<xref:System.Windows.Media.VisualCollection.Count%2A>.</xref:System.Windows.Media.VisualCollection.Count%2A> 如果<xref:System.Windows.Media.VisualCollection.Count%2A>時加入項目，容量超過容量<xref:System.Windows.Media.VisualCollection>會增加。</xref:System.Windows.Media.VisualCollection> </xref:System.Windows.Media.VisualCollection.Count%2A> 根據預設容量是零。"
  syntax:
    content: public int Capacity { get; set; }
    return:
      type: System.Int32
      description: "項目數目， <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref>可以包含。"
  overload: System.Windows.Media.VisualCollection.Capacity*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "容量設為小於<xref:System.Windows.Media.VisualCollection.Count*>.</xref:System.Windows.Media.VisualCollection.Count*>值"
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.Clear
  id: Clear
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: VisualCollection.Clear()
  fullName: System.Windows.Media.VisualCollection.Clear()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "移除所有項目從<xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref>。"
  remarks: "<xref:System.Windows.Media.VisualCollection.Count%2A>重設為零。</xref:System.Windows.Media.VisualCollection.Count%2A> 值<xref:System.Windows.Media.VisualCollection.Capacity%2A>維持不變。</xref:System.Windows.Media.VisualCollection.Capacity%2A> 若要重設的容量<xref:System.Windows.Media.VisualCollection>，將<xref:System.Windows.Media.VisualCollection.Capacity%2A>至所需大小的屬性。</xref:System.Windows.Media.VisualCollection.Capacity%2A> </xref:System.Windows.Media.VisualCollection>"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Windows.Media.VisualCollection.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.Contains(System.Windows.Media.Visual)
  id: Contains(System.Windows.Media.Visual)
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: Contains(Visual)
  nameWithType: VisualCollection.Contains(Visual)
  fullName: System.Windows.Media.VisualCollection.Contains(Visual)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "傳回<xref:System.Boolean>值，指出是否指定<xref href=&quot;System.Windows.Media.Visual&quot;></xref>包含在集合中。</xref:System.Boolean>"
  remarks: "此函式的最差狀況的執行階段案例`O(n)`，其中`n` <xref:System.Windows.Media.VisualCollection>.</xref:System.Windows.Media.VisualCollection>中的項目數目是"
  syntax:
    content: public bool Contains (System.Windows.Media.Visual visual);
    parameters:
    - id: visual
      type: System.Windows.Media.Visual
      description: "<xref href=&quot;System.Windows.Media.Visual&quot;> </xref>要在集合中搜尋。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<code> visual </code>包含在集合; 否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Media.VisualCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: VisualCollection.CopyTo(Array,Int32)
  fullName: System.Windows.Media.VisualCollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "項目複製到陣列，從特定的陣列索引處開始集合中。"
  syntax:
    content: public void CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "一維<xref:System.Array>也就是項目的目的地從複製<xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref>。</xref:System.Array>"
    - id: index
      type: System.Int32
      description: "中以零為起始的索引`array`由此開始複製。"
  overload: System.Windows.Media.VisualCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.CopyTo(System.Windows.Media.Visual[],System.Int32)
  id: CopyTo(System.Windows.Media.Visual[],System.Int32)
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: CopyTo(Visual[],Int32)
  nameWithType: VisualCollection.CopyTo(Visual[],Int32)
  fullName: System.Windows.Media.VisualCollection.CopyTo(Visual[],Int32)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "將目前集合複製到傳入<xref href=&quot;System.Windows.Media.Visual&quot;></xref>陣列。"
  syntax:
    content: public void CopyTo (System.Windows.Media.Visual[] array, int index);
    parameters:
    - id: array
      type: System.Windows.Media.Visual[]
      description: "陣列<xref href=&quot;System.Windows.Media.Visual&quot;></xref>物件 （必須有以零為起始的索引）。"
    - id: index
      type: System.Int32
      description: "若要開始複製從索引`array`。"
  overload: System.Windows.Media.VisualCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.Count
  id: Count
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: Count
  nameWithType: VisualCollection.Count
  fullName: System.Windows.Media.VisualCollection.Count
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "取得集合中的項目數目。"
  remarks: "計數是實際<xref:System.Windows.Media.VisualCollection>.</xref:System.Windows.Media.VisualCollection>中的項目數目 <xref:System.Windows.Media.VisualCollection.Capacity%2A>是的項目數，<xref:System.Windows.Media.VisualCollection>存放。</xref:System.Windows.Media.VisualCollection></xref:System.Windows.Media.VisualCollection.Capacity%2A>       計數一定會是小於或等於<xref:System.Windows.Media.VisualCollection.Capacity%2A>.</xref:System.Windows.Media.VisualCollection.Capacity%2A> 如果計數超過<xref:System.Windows.Media.VisualCollection.Capacity%2A>時加入項目，清單的容量加倍複製舊的項目並加入新項目之前，自動重新配置內部的陣列。</xref:System.Windows.Media.VisualCollection.Capacity%2A>"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "項目數目， <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref>包含。"
  overload: System.Windows.Media.VisualCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: VisualCollection.GetEnumerator()
  fullName: System.Windows.Media.VisualCollection.GetEnumerator()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "擷取可以逐一查看的列舉值<xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref>。"
  syntax:
    content: public System.Windows.Media.VisualCollection.Enumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Windows.Media.VisualCollection.Enumerator
      description: "可用來逐一查看集合的列舉值。"
  overload: System.Windows.Media.VisualCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.IndexOf(System.Windows.Media.Visual)
  id: IndexOf(System.Windows.Media.Visual)
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: IndexOf(Visual)
  nameWithType: VisualCollection.IndexOf(Visual)
  fullName: System.Windows.Media.VisualCollection.IndexOf(Visual)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "傳回以零為起始的索引<xref href=&quot;System.Windows.Media.Visual&quot;> </xref>。"
  remarks: "如果<xref:System.Windows.Media.Visual>不在<xref:System.Windows.Media.VisualCollection>，則傳回-1。</xref:System.Windows.Media.VisualCollection> </xref:System.Windows.Media.Visual> 如果`null`會傳遞至方法時，有第一個項目的索引`null`傳回。 如果沒有任何 null 項目，則傳回-1。"
  syntax:
    content: public int IndexOf (System.Windows.Media.Visual visual);
    parameters:
    - id: visual
      type: System.Windows.Media.Visual
      description: "<xref href=&quot;System.Windows.Media.Visual&quot;> </xref>中尋找<xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref>。"
    return:
      type: System.Int32
      description: "索引<xref href=&quot;System.Windows.Media.Visual&quot;> </xref>。"
  overload: System.Windows.Media.VisualCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.Insert(System.Int32,System.Windows.Media.Visual)
  id: Insert(System.Int32,System.Windows.Media.Visual)
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: Insert(Int32,Visual)
  nameWithType: VisualCollection.Insert(Int32,Visual)
  fullName: System.Windows.Media.VisualCollection.Insert(Int32,Visual)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "將插入的項目插入<xref href=&quot;System.Windows.Media.VisualCollection&quot;></xref>指定索引處。"
  remarks: "如果<xref:System.Windows.Media.VisualCollection.Count%2A>已等於<xref:System.Windows.Media.VisualCollection.Capacity%2A>、 容量的<xref:System.Windows.Media.VisualCollection>增加新<xref:System.Windows.Media.Visual>插入。</xref:System.Windows.Media.Visual> </xref:System.Windows.Media.VisualCollection> </xref:System.Windows.Media.VisualCollection.Capacity%2A> </xref:System.Windows.Media.VisualCollection.Count%2A> 如果`index`等於<xref:System.Windows.Media.VisualCollection.Count%2A>， `visual` <xref:System.Windows.Media.VisualCollection>.</xref:System.Windows.Media.VisualCollection>結尾加入</xref:System.Windows.Media.VisualCollection.Count%2A> 任何現有的視覺效果的物件，等於或大於`index`移位，以容納新<xref:System.Windows.Media.Visual>，而且會更新其索引值。</xref:System.Windows.Media.Visual>       Insert 方法也會設定父系-子系之間的關聯性的父 visual，也就是擁有者的<xref:System.Windows.Media.VisualCollection>，與子系`visual`。</xref:System.Windows.Media.VisualCollection>       如果您需要更廣泛的低階控制視覺子物件的基礎儲存體實作，請考慮使用<xref:System.Windows.Media.Visual.AddVisualChild%2A>和<xref:System.Windows.Media.Visual.RemoveVisualChild%2A>方法。</xref:System.Windows.Media.Visual.RemoveVisualChild%2A> </xref:System.Windows.Media.Visual.AddVisualChild%2A> 當您使用這些方法時，您定義您自己的儲存體實作，而且不會使用<xref:System.Windows.Media.VisualCollection>.</xref:System.Windows.Media.VisualCollection>"
  syntax:
    content: public void Insert (int index, System.Windows.Media.Visual visual);
    parameters:
    - id: index
      type: System.Int32
      description: "值應該插入以零為起始的索引。"
    - id: visual
      type: System.Windows.Media.Visual
      description: "<xref href=&quot;System.Windows.Media.Visual&quot;> </xref>插入<xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref>。"
  overload: System.Windows.Media.VisualCollection.Insert*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>小於零或大於<xref:System.Windows.Media.VisualCollection.Count*>。"
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.IsReadOnly
  id: IsReadOnly
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: VisualCollection.IsReadOnly
  fullName: System.Windows.Media.VisualCollection.IsReadOnly
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "取得值，指出是否<xref href=&quot;System.Windows.Media.VisualCollection&quot;></xref>處於唯讀狀態。"
  remarks: "此屬性一律為`false`所有<xref:System.Windows.Media.VisualCollection>物件。</xref:System.Windows.Media.VisualCollection>"
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "值，指出是否<xref href=&quot;System.Windows.Media.VisualCollection&quot;></xref>處於唯讀狀態。"
  overload: System.Windows.Media.VisualCollection.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.IsSynchronized
  id: IsSynchronized
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: VisualCollection.IsSynchronized
  fullName: System.Windows.Media.VisualCollection.IsSynchronized
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "取得值，指出是否存取<xref href=&quot;System.Windows.Media.VisualCollection&quot;></xref>為同步 （安全執行緒）。"
  remarks: "此屬性一律為`false`所有<xref:System.Windows.Media.VisualCollection>物件。</xref:System.Windows.Media.VisualCollection>"
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "值，指出是否<xref href=&quot;System.Windows.Media.VisualCollection&quot;></xref>為同步 （安全執行緒）。"
  overload: System.Windows.Media.VisualCollection.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: VisualCollection.Item(Int32)
  fullName: System.Windows.Media.VisualCollection.Item(Int32)
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "取得或設定<xref href=&quot;System.Windows.Media.Visual&quot;></xref>之以零為起始的索引儲存<xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref>。"
  remarks: "這個屬性會提供能夠存取特定<xref:System.Windows.Media.Visual>中<xref:System.Windows.Media.VisualCollection>的索引。</xref:System.Windows.Media.VisualCollection> </xref:System.Windows.Media.Visual>"
  syntax:
    content: public System.Windows.Media.Visual this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "以零為起始的索引<xref href=&quot;System.Windows.Media.VisualCollection&quot;></xref>從中取得或設定<xref href=&quot;System.Windows.Media.Visual&quot;> </xref>。"
    return:
      type: System.Windows.Media.Visual
      description: "The <xref href=&quot;System.Windows.Media.Visual&quot;></xref> that is stored at <code>index</code>."
  overload: System.Windows.Media.VisualCollection.Item*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>小於零，或<code>index</code>等於或大於<xref:System.Windows.Media.VisualCollection.Count*>。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "新的子項目已有父代，或是指定索引處的值不是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.Remove(System.Windows.Media.Visual)
  id: Remove(System.Windows.Media.Visual)
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: Remove(Visual)
  nameWithType: VisualCollection.Remove(Visual)
  fullName: System.Windows.Media.VisualCollection.Remove(Visual)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "移除指定<xref href=&quot;System.Windows.Media.Visual&quot;></xref>物件從<xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref>。"
  remarks: "請遵循移除的物件的 visual 物件移位，以佔用空出的位置，並會更新其索引值。 如果`visual`是`null`，第一個`null`項目已移除。 請注意該移除`null`項目中是線性集合的大小。       Remove 方法也會移除父系-子系之間的關聯性的父 visual，也就是擁有者的<xref:System.Windows.Media.VisualCollection>，與子系`visual`。</xref:System.Windows.Media.VisualCollection>       如果您需要更廣泛的低階控制視覺子物件的基礎儲存體實作，請考慮使用<xref:System.Windows.Media.Visual.AddVisualChild%2A>和<xref:System.Windows.Media.Visual.RemoveVisualChild%2A>方法。</xref:System.Windows.Media.Visual.RemoveVisualChild%2A> </xref:System.Windows.Media.Visual.AddVisualChild%2A> 當您使用這些方法時，您定義您自己的儲存體實作，而且不會使用<xref:System.Windows.Media.VisualCollection>.</xref:System.Windows.Media.VisualCollection>"
  syntax:
    content: public void Remove (System.Windows.Media.Visual visual);
    parameters:
    - id: visual
      type: System.Windows.Media.Visual
      description: "<xref href=&quot;System.Windows.Media.Visual&quot;> </xref>移除<xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref>。"
  overload: System.Windows.Media.VisualCollection.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: VisualCollection.RemoveAt(Int32)
  fullName: System.Windows.Media.VisualCollection.RemoveAt(Int32)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "移除在指定索引處的視覺物件<xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref>。"
  remarks: "請遵循移除的物件的 visual 物件移位，以佔用空出的位置，並會更新其索引值。       RemoveAt 方法也會移除父系-子系之間的關聯性的父 visual，也就是擁有者的<xref:System.Windows.Media.VisualCollection>，與子系`visual`。</xref:System.Windows.Media.VisualCollection>       如果您需要更廣泛的低階控制視覺子物件的基礎儲存體實作，請考慮使用<xref:System.Windows.Media.Visual.AddVisualChild%2A>和<xref:System.Windows.Media.Visual.RemoveVisualChild%2A>方法。</xref:System.Windows.Media.Visual.RemoveVisualChild%2A> </xref:System.Windows.Media.Visual.AddVisualChild%2A> 當您使用這些方法時，您定義您自己的儲存體實作，而且不會使用<xref:System.Windows.Media.VisualCollection>.</xref:System.Windows.Media.VisualCollection>"
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "若要移除視覺效果的以零為起始的索引。"
  overload: System.Windows.Media.VisualCollection.RemoveAt*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>小於零，或<code>index</code>等於或大於<xref:System.Windows.Media.VisualCollection.Count*>。"
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.RemoveRange(System.Int32,System.Int32)
  id: RemoveRange(System.Int32,System.Int32)
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: RemoveRange(Int32,Int32)
  nameWithType: VisualCollection.RemoveRange(Int32,Int32)
  fullName: System.Windows.Media.VisualCollection.RemoveRange(Int32,Int32)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "移除某個範圍的 visual 物件從<xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref>。"
  remarks: "請遵循移除的物件的視覺物件移位，以佔用空出的位置，並會更新其索引值。       RemoveRange 方法也會移除父視覺效果，也就是擁有者之間的父子式關聯性的<xref:System.Windows.Media.VisualCollection>，以及子視覺效果的範圍。</xref:System.Windows.Media.VisualCollection>       如果您需要更廣泛的低階控制視覺子物件的基礎儲存體實作，請考慮使用<xref:System.Windows.Media.Visual.AddVisualChild%2A>和<xref:System.Windows.Media.Visual.RemoveVisualChild%2A>方法。</xref:System.Windows.Media.Visual.RemoveVisualChild%2A> </xref:System.Windows.Media.Visual.AddVisualChild%2A> 當您使用這些方法時，您定義您自己的儲存體實作，而且不會使用<xref:System.Windows.Media.VisualCollection>.</xref:System.Windows.Media.VisualCollection>"
  syntax:
    content: public void RemoveRange (int index, int count);
    parameters:
    - id: index
      type: System.Int32
      description: "要移除的元素範圍的以零為起始索引。"
    - id: count
      type: System.Int32
      description: "若要移除的項目數目。"
  overload: System.Windows.Media.VisualCollection.RemoveRange*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>小於零或<code>count</code>小於零。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>index</code>和<code>count</code>並未參考到有效的範圍中的項目<xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref>。"
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.SyncRoot
  id: SyncRoot
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: SyncRoot
  nameWithType: VisualCollection.SyncRoot
  fullName: System.Windows.Media.VisualCollection.SyncRoot
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "取得物件，可用來同步處理存取具備<xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref>。"
  syntax:
    content: public object SyncRoot { get; }
    return:
      type: System.Object
      description: "型別<xref:System.Object>.</xref:System.Object>值"
  overload: System.Windows.Media.VisualCollection.SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: VisualCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Windows.Media.VisualCollection.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "此成員支援[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]基礎結構，不適合直接從您的程式碼使用。 如需這個成員的說明，請參閱<xref:System.Collections.IEnumerable.GetEnumerator*>.</xref:System.Collections.IEnumerable.GetEnumerator*>"
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "物件，可用來逐一查看集合。"
  overload: System.Windows.Media.VisualCollection.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Windows.Media.VisualCollection.#ctor(System.Windows.Media.Visual)
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: VisualCollection(Visual)
  nameWithType: VisualCollection.VisualCollection(Visual)
  fullName: System.Windows.Media.VisualCollection.VisualCollection(Visual)
- uid: System.Windows.Media.Visual
  parent: System.Windows.Media
  isExternal: false
  name: Visual
  nameWithType: Visual
  fullName: System.Windows.Media.Visual
- uid: System.Windows.Media.VisualCollection.Add(System.Windows.Media.Visual)
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: Add(Visual)
  nameWithType: VisualCollection.Add(Visual)
  fullName: System.Windows.Media.VisualCollection.Add(Visual)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Media.VisualCollection.Capacity
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: Capacity
  nameWithType: VisualCollection.Capacity
  fullName: System.Windows.Media.VisualCollection.Capacity
- uid: System.Windows.Media.VisualCollection.Clear
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: Clear()
  nameWithType: VisualCollection.Clear()
  fullName: System.Windows.Media.VisualCollection.Clear()
- uid: System.Windows.Media.VisualCollection.Contains(System.Windows.Media.Visual)
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: Contains(Visual)
  nameWithType: VisualCollection.Contains(Visual)
  fullName: System.Windows.Media.VisualCollection.Contains(Visual)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Media.VisualCollection.CopyTo(System.Array,System.Int32)
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: VisualCollection.CopyTo(Array,Int32)
  fullName: System.Windows.Media.VisualCollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Windows.Media.VisualCollection.CopyTo(System.Windows.Media.Visual[],System.Int32)
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: CopyTo(Visual[],Int32)
  nameWithType: VisualCollection.CopyTo(Visual[],Int32)
  fullName: System.Windows.Media.VisualCollection.CopyTo(Visual[],Int32)
- uid: System.Windows.Media.Visual[]
  parent: System.Windows.Media
  isExternal: false
  name: Visual
  nameWithType: Visual
  fullName: System.Windows.Media.Visual[]
  spec.csharp:
  - uid: System.Windows.Media.Visual
    name: Visual
    nameWithType: Visual
    fullName: Visual[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Media.VisualCollection.Count
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: Count
  nameWithType: VisualCollection.Count
  fullName: System.Windows.Media.VisualCollection.Count
- uid: System.Windows.Media.VisualCollection.GetEnumerator
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: VisualCollection.GetEnumerator()
  fullName: System.Windows.Media.VisualCollection.GetEnumerator()
- uid: System.Windows.Media.VisualCollection.Enumerator
  parent: System.Windows.Media
  isExternal: false
  name: VisualCollection+Enumerator
  nameWithType: VisualCollection+Enumerator
  fullName: System.Windows.Media.VisualCollection+Enumerator
- uid: System.Windows.Media.VisualCollection.IndexOf(System.Windows.Media.Visual)
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: IndexOf(Visual)
  nameWithType: VisualCollection.IndexOf(Visual)
  fullName: System.Windows.Media.VisualCollection.IndexOf(Visual)
- uid: System.Windows.Media.VisualCollection.Insert(System.Int32,System.Windows.Media.Visual)
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: Insert(Int32,Visual)
  nameWithType: VisualCollection.Insert(Int32,Visual)
  fullName: System.Windows.Media.VisualCollection.Insert(Int32,Visual)
- uid: System.Windows.Media.VisualCollection.IsReadOnly
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: VisualCollection.IsReadOnly
  fullName: System.Windows.Media.VisualCollection.IsReadOnly
- uid: System.Windows.Media.VisualCollection.IsSynchronized
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: VisualCollection.IsSynchronized
  fullName: System.Windows.Media.VisualCollection.IsSynchronized
- uid: System.Windows.Media.VisualCollection.Item(System.Int32)
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: VisualCollection.Item(Int32)
  fullName: System.Windows.Media.VisualCollection.Item(Int32)
- uid: System.Windows.Media.VisualCollection.Remove(System.Windows.Media.Visual)
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: Remove(Visual)
  nameWithType: VisualCollection.Remove(Visual)
  fullName: System.Windows.Media.VisualCollection.Remove(Visual)
- uid: System.Windows.Media.VisualCollection.RemoveAt(System.Int32)
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: VisualCollection.RemoveAt(Int32)
  fullName: System.Windows.Media.VisualCollection.RemoveAt(Int32)
- uid: System.Windows.Media.VisualCollection.RemoveRange(System.Int32,System.Int32)
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: RemoveRange(Int32,Int32)
  nameWithType: VisualCollection.RemoveRange(Int32,Int32)
  fullName: System.Windows.Media.VisualCollection.RemoveRange(Int32,Int32)
- uid: System.Windows.Media.VisualCollection.SyncRoot
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: SyncRoot
  nameWithType: VisualCollection.SyncRoot
  fullName: System.Windows.Media.VisualCollection.SyncRoot
- uid: System.Windows.Media.VisualCollection.System#Collections#IEnumerable#GetEnumerator
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: VisualCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Windows.Media.VisualCollection.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Windows.Media.VisualCollection.#ctor*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: VisualCollection
  nameWithType: VisualCollection.VisualCollection
- uid: System.Windows.Media.VisualCollection.Add*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: Add
  nameWithType: VisualCollection.Add
- uid: System.Windows.Media.VisualCollection.Capacity*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: Capacity
  nameWithType: VisualCollection.Capacity
- uid: System.Windows.Media.VisualCollection.Clear*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: Clear
  nameWithType: VisualCollection.Clear
- uid: System.Windows.Media.VisualCollection.Contains*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: Contains
  nameWithType: VisualCollection.Contains
- uid: System.Windows.Media.VisualCollection.CopyTo*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: CopyTo
  nameWithType: VisualCollection.CopyTo
- uid: System.Windows.Media.VisualCollection.Count*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: Count
  nameWithType: VisualCollection.Count
- uid: System.Windows.Media.VisualCollection.GetEnumerator*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: VisualCollection.GetEnumerator
- uid: System.Windows.Media.VisualCollection.IndexOf*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: IndexOf
  nameWithType: VisualCollection.IndexOf
- uid: System.Windows.Media.VisualCollection.Insert*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: Insert
  nameWithType: VisualCollection.Insert
- uid: System.Windows.Media.VisualCollection.IsReadOnly*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: VisualCollection.IsReadOnly
- uid: System.Windows.Media.VisualCollection.IsSynchronized*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: VisualCollection.IsSynchronized
- uid: System.Windows.Media.VisualCollection.Item*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: Item
  nameWithType: VisualCollection.Item
- uid: System.Windows.Media.VisualCollection.Remove*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: Remove
  nameWithType: VisualCollection.Remove
- uid: System.Windows.Media.VisualCollection.RemoveAt*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: RemoveAt
  nameWithType: VisualCollection.RemoveAt
- uid: System.Windows.Media.VisualCollection.RemoveRange*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: RemoveRange
  nameWithType: VisualCollection.RemoveRange
- uid: System.Windows.Media.VisualCollection.SyncRoot*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: SyncRoot
  nameWithType: VisualCollection.SyncRoot
- uid: System.Windows.Media.VisualCollection.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: VisualCollection.System.Collections.IEnumerable.GetEnumerator
