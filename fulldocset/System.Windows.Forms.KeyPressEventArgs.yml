### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.KeyPressEventArgs
  id: KeyPressEventArgs
  children:
  - System.Windows.Forms.KeyPressEventArgs.#ctor(System.Char)
  - System.Windows.Forms.KeyPressEventArgs.Handled
  - System.Windows.Forms.KeyPressEventArgs.KeyChar
  langs:
  - csharp
  name: KeyPressEventArgs
  nameWithType: KeyPressEventArgs
  fullName: System.Windows.Forms.KeyPressEventArgs
  type: Class
  summary: "提供資料給<xref href=&quot;System.Windows.Forms.Control.KeyPress&quot;></xref>事件。"
  remarks: "KeyPressEventArgs 指定當使用者按下的按鍵由所組成的字元。 例如，當使用者按下 SHIFT + K，<xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A>屬性會傳回大寫的 k。      A<xref:System.Windows.Forms.Control.KeyPress>事件發生於使用者按下按鍵時。</xref:System.Windows.Forms.Control.KeyPress> </xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A> 密切相關的<xref:System.Windows.Forms.Control.KeyPress>事件會<xref:System.Windows.Forms.Control.KeyUp>和<xref:System.Windows.Forms.Control.KeyDown>。</xref:System.Windows.Forms.Control.KeyDown></xref:System.Windows.Forms.Control.KeyUp></xref:System.Windows.Forms.Control.KeyPress>的兩個事件 <xref:System.Windows.Forms.Control.KeyDown>事件位於每個<xref:System.Windows.Forms.Control.KeyPress>時使用者按下按鍵，事件和<xref:System.Windows.Forms.Control.KeyUp>事件發生於使用者鬆開按鍵時。</xref:System.Windows.Forms.Control.KeyUp> </xref:System.Windows.Forms.Control.KeyPress> </xref:System.Windows.Forms.Control.KeyDown> 當使用者按住按鍵時，重複<xref:System.Windows.Forms.Control.KeyDown>和<xref:System.Windows.Forms.Control.KeyPress>事件發生的每個字元重複的時間。</xref:System.Windows.Forms.Control.KeyPress> </xref:System.Windows.Forms.Control.KeyDown> 一個<xref:System.Windows.Forms.Control.KeyUp>版本時，就會產生事件。</xref:System.Windows.Forms.Control.KeyUp>       與每個<xref:System.Windows.Forms.Control.KeyPress>事件，傳送 KeyPressEventArgs。</xref:System.Windows.Forms.Control.KeyPress> A<xref:System.Windows.Forms.KeyEventArgs>傳遞與每個<xref:System.Windows.Forms.Control.KeyDown>和<xref:System.Windows.Forms.Control.KeyUp>事件。</xref:System.Windows.Forms.Control.KeyUp> </xref:System.Windows.Forms.Control.KeyDown> </xref:System.Windows.Forms.KeyEventArgs> A<xref:System.Windows.Forms.KeyEventArgs>指定任何輔助按鍵 （CTRL、 shift 鍵或 ALT） 已按下另一個索引鍵連同。</xref:System.Windows.Forms.KeyEventArgs> (您也可以透過取得此修飾詞資訊<xref:System.Windows.Forms.Control.ModifierKeys%2A>屬性<xref:System.Windows.Forms.Control>類別)</xref:System.Windows.Forms.Control> </xref:System.Windows.Forms.Control.ModifierKeys%2A>     設定<xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A>至`true`取消`KeyPress`事件。</xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A> 這可防止控制項處理按鍵。      > [!NOTE] > 某些控制項將會處理某些按鍵<xref:System.Windows.Forms.Control.KeyDown>。</xref:System.Windows.Forms.Control.KeyDown> 例如，<xref:System.Windows.Forms.RichTextBox>處理 Enter 鍵，然後再<xref:System.Windows.Forms.Control.KeyPress>稱為。</xref:System.Windows.Forms.Control.KeyPress> </xref:System.Windows.Forms.RichTextBox> 在這種情況下，您無法取消<xref:System.Windows.Forms.Control.KeyPress>事件，且必須取消從按鍵<xref:System.Windows.Forms.Control.KeyDown>改用。</xref:System.Windows.Forms.Control.KeyDown> </xref:System.Windows.Forms.Control.KeyPress>       事件模型的相關資訊，請參閱[事件](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following example illustrates using the KeyPressEventArgs to count keys as they are pressed and to display the results after each key press. <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A> is then set to true to keep the operating system from further processing the key. The example assumes a form with a <xref:System.Windows.Forms.TextBox> placed on it.  \n  \n [!code-cpp[Classic KeyPressEventArgs Example#1](~/add/codesnippet/cpp/t-system.windows.forms.k_0_1.cpp)]\n [!code-cs[Classic KeyPressEventArgs Example#1](~/add/codesnippet/csharp/t-system.windows.forms.k_0_1.cs)]\n [!code-vb[Classic KeyPressEventArgs Example#1](~/add/codesnippet/visualbasic/t-system.windows.forms.k_0_1.vb)]  \n  \n You must create a new instance of this class. You must also set the event handler. You can do this in the constructor for your class.  \n  \n [!code-cpp[Classic KeyPressEventArgs Example#2](~/add/codesnippet/cpp/t-system.windows.forms.k_0_2.cpp)]\n [!code-cs[Classic KeyPressEventArgs Example#2](~/add/codesnippet/csharp/t-system.windows.forms.k_0_2.cs)]\n [!code-vb[Classic KeyPressEventArgs Example#2](~/add/codesnippet/visualbasic/t-system.windows.forms.k_0_2.vb)]  \n  \n When the specified event is raised in the control, the attached method is called and the application can execute code in response to the event."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class KeyPressEventArgs : EventArgs
  inheritance:
  - System.EventArgs
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Forms.KeyPressEventArgs.#ctor(System.Char)
  id: '#ctor(System.Char)'
  parent: System.Windows.Forms.KeyPressEventArgs
  langs:
  - csharp
  name: KeyPressEventArgs(Char)
  nameWithType: KeyPressEventArgs.KeyPressEventArgs(Char)
  fullName: System.Windows.Forms.KeyPressEventArgs.KeyPressEventArgs(Char)
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "初始化的新執行個體<xref href=&quot;System.Windows.Forms.KeyPressEventArgs&quot;></xref>類別。"
  remarks: "使用<xref:System.Windows.Forms.Control.ModifierKeys%2A?displayProperty=fullName>屬性來取得輔助按鍵的目前狀態。</xref:System.Windows.Forms.Control.ModifierKeys%2A?displayProperty=fullName>"
  example:
  - The following example displays a message box that shows the current state of the SHIFT key.
  syntax:
    content: public KeyPressEventArgs (char keyChar);
    parameters:
    - id: keyChar
      type: System.Char
      description: "對應到索引鍵的 ASCII 字元的使用者按下。"
  overload: System.Windows.Forms.KeyPressEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.KeyPressEventArgs.Handled
  id: Handled
  parent: System.Windows.Forms.KeyPressEventArgs
  langs:
  - csharp
  name: Handled
  nameWithType: KeyPressEventArgs.Handled
  fullName: System.Windows.Forms.KeyPressEventArgs.Handled
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得或設定值，指出是否<xref href=&quot;System.Windows.Forms.Control.KeyPress&quot;></xref>已處理事件。"
  remarks: "如果未處理的事件，它會傳送至作業系統的預設處理中。 Handled 設`true`取消`KeyPress`事件。"
  example:
  - "The following example creates a <xref:System.Windows.Forms.TextBox> control. The `keypressed` method uses the <xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A> property to check whether the ENTER key is pressed. If the ENTER key is pressed, the Handled property is set to `true`, which indicates the event is handled.  \n  \n [!code-vb[KeyPressEventArgs#1](~/add/codesnippet/visualbasic/p-system.windows.forms.k_4_1.vb)]\n [!code-cs[KeyPressEventArgs#1](~/add/codesnippet/csharp/p-system.windows.forms.k_4_1.cs)]\n [!code-cpp[KeyPressEventArgs#1](~/add/codesnippet/cpp/p-system.windows.forms.k_4_1.cpp)]"
  syntax:
    content: public bool Handled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果處理事件。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Forms.KeyPressEventArgs.Handled*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.KeyPressEventArgs.KeyChar
  id: KeyChar
  parent: System.Windows.Forms.KeyPressEventArgs
  langs:
  - csharp
  name: KeyChar
  nameWithType: KeyPressEventArgs.KeyChar
  fullName: System.Windows.Forms.KeyPressEventArgs.KeyChar
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得或設定對應至按下按鍵的字元。"
  remarks: "使用範例按鍵 KeyChar 屬性，在執行階段，並修改特殊執行階段的情況下的按鍵輸入。 例如，您可以使用 KeyChar 停用非數字的按鍵，當使用者輸入郵遞區號時，請將所有依字母順序排列的按鍵變更為大寫資料欄位中的項目，或監視鍵盤或其他金鑰的輸入的裝置特定的索引鍵組合。       您可以取得或設定下列機碼:-a 到 z、 A 到 Z。      -CTRL 鍵。      -標點符號。      -數字鍵，同時在頂端的鍵盤和數字鍵台上。      -輸入。       您無法取得或設定下列機碼:-TAB 鍵。      -插入和刪除。      -首頁。      -結束。      -PAGE UP 和 PAGE down 鍵。      -F1 F2 鍵。      -ALT。      箭號索引鍵。      > [!NOTE] > 如何偵測任何上述的非字元按鍵的相關資訊，請參閱<xref:System.Windows.Forms.KeyEventArgs>類別。</xref:System.Windows.Forms.KeyEventArgs>      -"
  example:
  - "The following example creates a <xref:System.Windows.Forms.TextBox> control. The `keypressed` method uses the KeyChar property to check whether the ENTER key pressed. If the ENTER key is pressed, the <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A> property is set to `true`, which indicates the event is handled.  \n  \n [!code-vb[KeyPressEventArgs#1](~/add/codesnippet/visualbasic/p-system.windows.forms.k_2_1.vb)]\n [!code-cs[KeyPressEventArgs#1](~/add/codesnippet/csharp/p-system.windows.forms.k_2_1.cs)]\n [!code-cpp[KeyPressEventArgs#1](~/add/codesnippet/cpp/p-system.windows.forms.k_2_1.cpp)]"
  syntax:
    content: public char KeyChar { get; set; }
    return:
      type: System.Char
      description: "ASCII 字元組成。 例如，如果使用者按下 SHIFT + K，這個屬性會傳回大寫的 k。"
  overload: System.Windows.Forms.KeyPressEventArgs.KeyChar*
  exceptions: []
  platform:
  - net462
references:
- uid: System.EventArgs
  isExternal: false
  name: System.EventArgs
- uid: System.Windows.Forms.KeyPressEventArgs.#ctor(System.Char)
  parent: System.Windows.Forms.KeyPressEventArgs
  isExternal: false
  name: KeyPressEventArgs(Char)
  nameWithType: KeyPressEventArgs.KeyPressEventArgs(Char)
  fullName: System.Windows.Forms.KeyPressEventArgs.KeyPressEventArgs(Char)
- uid: System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Windows.Forms.KeyPressEventArgs.Handled
  parent: System.Windows.Forms.KeyPressEventArgs
  isExternal: false
  name: Handled
  nameWithType: KeyPressEventArgs.Handled
  fullName: System.Windows.Forms.KeyPressEventArgs.Handled
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.KeyPressEventArgs.KeyChar
  parent: System.Windows.Forms.KeyPressEventArgs
  isExternal: false
  name: KeyChar
  nameWithType: KeyPressEventArgs.KeyChar
  fullName: System.Windows.Forms.KeyPressEventArgs.KeyChar
- uid: System.Windows.Forms.KeyPressEventArgs.#ctor*
  parent: System.Windows.Forms.KeyPressEventArgs
  isExternal: false
  name: KeyPressEventArgs
  nameWithType: KeyPressEventArgs.KeyPressEventArgs
- uid: System.Windows.Forms.KeyPressEventArgs.Handled*
  parent: System.Windows.Forms.KeyPressEventArgs
  isExternal: false
  name: Handled
  nameWithType: KeyPressEventArgs.Handled
- uid: System.Windows.Forms.KeyPressEventArgs.KeyChar*
  parent: System.Windows.Forms.KeyPressEventArgs
  isExternal: false
  name: KeyChar
  nameWithType: KeyPressEventArgs.KeyChar
