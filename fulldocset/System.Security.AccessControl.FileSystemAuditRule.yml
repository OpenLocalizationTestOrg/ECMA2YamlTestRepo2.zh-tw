### YamlMime:ManagedReference
items:
- uid: System.Security.AccessControl.FileSystemAuditRule
  id: FileSystemAuditRule
  children:
  - System.Security.AccessControl.FileSystemAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AuditFlags)
  - System.Security.AccessControl.FileSystemAuditRule.#ctor(System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AuditFlags)
  - System.Security.AccessControl.FileSystemAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  - System.Security.AccessControl.FileSystemAuditRule.#ctor(System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  - System.Security.AccessControl.FileSystemAuditRule.FileSystemRights
  langs:
  - csharp
  name: FileSystemAuditRule
  nameWithType: FileSystemAuditRule
  fullName: System.Security.AccessControl.FileSystemAuditRule
  type: Class
  summary: "代表定義的檔案或目錄的稽核規則的存取控制項目 (ACE) 的抽象概念。 這個類別無法被繼承。"
  remarks: "FileSystemAuditRule 類別代表基礎存取控制項目 (ACE)，指定使用者帳戶，以提供 （讀取、 寫入和等等），存取類型的抽象概念，以及是否要進行稽核。  這個類別也可以指定如何繼承自和傳播到物件稽核規則。       若要允許檔案及目錄的稽核 Windows NT 或更新版本，您必須在電腦上啟用稽核存取安全性原則。  根據預設，此原則設定為無稽核。       若要啟用稽核存取安全性原則，執行下列步驟︰ 1。  開啟**本機安全性設定**Microsoft Management Console (MMC) 嵌入式管理單元，位於 [系統管理工具] 資料夾中。      2.  展開 [本機原則] 資料夾，然後以滑鼠左鍵按一下 [稽核原則] 資料夾。      3.  按兩下**稽核物件存取**項目，在右窗格中的 MMC 嵌入式管理單元，或以滑鼠右鍵按一下並選擇 屬性 以顯示**稽核物件存取屬性** 對話方塊。      4.  選取**成功**或**失敗**核取方塊，以記錄成功或失敗。       請注意使用者帳戶的稽核規則，需要有對應的存取規則，對相同的使用者帳戶。       若要建立新的稽核規則使用 FileSystemAuditRule 類別。  您可以保存這項規則<xref:System.Security.AccessControl.FileSecurity>或<xref:System.Security.AccessControl.DirectorySecurity>類別。</xref:System.Security.AccessControl.DirectorySecurity> </xref:System.Security.AccessControl.FileSecurity>"
  example:
  - "The following code example uses the FileSystemAuditRule class to add and then remove an audit rule from a file.  You must supply a valid user or group account to run this example.  \n  \n [!code-vb[AccessControl.FileSystemAuditRule#1](~/add/codesnippet/visualbasic/t-system.security.access_9_1.vb)]\n [!code-cs[AccessControl.FileSystemAuditRule#1](~/add/codesnippet/csharp/t-system.security.access_9_1.cs)]"
  syntax:
    content: 'public sealed class FileSystemAuditRule : System.Security.AccessControl.AuditRule'
  inheritance:
  - System.Object
  - System.Security.AccessControl.AuthorizationRule
  - System.Security.AccessControl.AuditRule
  implements: []
  inheritedMembers:
  - System.Security.AccessControl.AuditRule.AuditFlags
  - System.Security.AccessControl.AuthorizationRule.AccessMask
  - System.Security.AccessControl.AuthorizationRule.IdentityReference
  - System.Security.AccessControl.AuthorizationRule.InheritanceFlags
  - System.Security.AccessControl.AuthorizationRule.IsInherited
  - System.Security.AccessControl.AuthorizationRule.PropagationFlags
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AuditFlags)
  id: '#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AuditFlags)'
  parent: System.Security.AccessControl.FileSystemAuditRule
  langs:
  - csharp
  name: FileSystemAuditRule(IdentityReference,FileSystemRights,AuditFlags)
  nameWithType: FileSystemAuditRule.FileSystemAuditRule(IdentityReference,FileSystemRights,AuditFlags)
  fullName: System.Security.AccessControl.FileSystemAuditRule.FileSystemAuditRule(IdentityReference,FileSystemRights,AuditFlags)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "初始化的新執行個體<xref href=&quot;System.Security.AccessControl.FileSystemAuditRule&quot;></xref>類別使用的使用者帳戶、 指定的稽核規則相關聯的作業類型的值和值，指定何時執行稽核的參考。"
  remarks: "使用這個建構函式建立的稽核規則，您可以保存使用<xref:System.Security.AccessControl.FileSecurity>或<xref:System.Security.AccessControl.DirectorySecurity>類別。</xref:System.Security.AccessControl.DirectorySecurity> </xref:System.Security.AccessControl.FileSecurity>  稽核規則會決定何時以及如何系統物件上執行的動作例如檔案和資料夾，會記錄。"
  syntax:
    content: public FileSystemAuditRule (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.FileSystemRights fileSystemRights, System.Security.AccessControl.AuditFlags flags);
    parameters:
    - id: identity
      type: System.Security.Principal.IdentityReference
      description: "<xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref>封裝的使用者帳戶的參考物件。"
    - id: fileSystemRights
      type: System.Security.AccessControl.FileSystemRights
      description: "其中一個<xref href=&quot;System.Security.AccessControl.FileSystemRights&quot;></xref>值，指定的稽核規則相關聯的作業類型。"
    - id: flags
      type: System.Security.AccessControl.AuditFlags
      description: "其中一個<xref href=&quot;System.Security.AccessControl.AuditFlags&quot;></xref>值，指定何時執行稽核。"
  overload: System.Security.AccessControl.FileSystemAuditRule.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> identity </code>參數不是<xref href=&quot;System.Security.Principal.IdentityReference&quot;></xref>物件。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>identity</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "不正確的列舉型別傳遞至<code> flags </code>參數。       -或- <xref href=&quot;System.Security.AccessControl.AuditFlags&quot;> </xref>值已傳遞給<code> flags </code>參數。"
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemAuditRule.#ctor(System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AuditFlags)
  id: '#ctor(System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AuditFlags)'
  parent: System.Security.AccessControl.FileSystemAuditRule
  langs:
  - csharp
  name: FileSystemAuditRule(String,FileSystemRights,AuditFlags)
  nameWithType: FileSystemAuditRule.FileSystemAuditRule(String,FileSystemRights,AuditFlags)
  fullName: System.Security.AccessControl.FileSystemAuditRule.FileSystemAuditRule(String,FileSystemRights,AuditFlags)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "初始化的新執行個體<xref href=&quot;System.Security.AccessControl.FileSystemAuditRule&quot;></xref>類別使用的使用者帳戶名稱、 值，指定的稽核規則相關聯的作業類型和值，指定何時執行稽核。"
  remarks: "Use this constructor to create an audit rule that you can persist using the <xref:System.Security.AccessControl.FileSecurity> or <xref:System.Security.AccessControl.DirectorySecurity> class.  Audit rules determine when and how actions performed on system objects, such as files and folders, are logged.  \n  \n The `identity` parameter must identify a valid account on the current computer or domain.  The string takes the following form, where `DOMAIN` is the name of a valid domain or computer name and `account` is the name of a valid user account on a domain or computer: `DOMAIN\\account`."
  example:
  - "The following code example uses the <xref:System.Security.AccessControl.FileSystemAuditRule> class to add and then remove an audit rule from a file.  You must supply a valid user or group account to run this example.  \n  \n [!code-vb[AccessControl.FileSystemAuditRule#1](~/add/codesnippet/visualbasic/0cfd6a33-c1ca-4126-9899-_1.vb)]\n [!code-cs[AccessControl.FileSystemAuditRule#1](~/add/codesnippet/csharp/0cfd6a33-c1ca-4126-9899-_1.cs)]"
  syntax:
    content: public FileSystemAuditRule (string identity, System.Security.AccessControl.FileSystemRights fileSystemRights, System.Security.AccessControl.AuditFlags flags);
    parameters:
    - id: identity
      type: System.String
      description: "使用者帳戶的名稱。"
    - id: fileSystemRights
      type: System.Security.AccessControl.FileSystemRights
      description: "其中一個<xref href=&quot;System.Security.AccessControl.FileSystemRights&quot;></xref>值，指定的稽核規則相關聯的作業類型。"
    - id: flags
      type: System.Security.AccessControl.AuditFlags
      description: "其中一個<xref href=&quot;System.Security.AccessControl.AuditFlags&quot;></xref>值，指定何時執行稽核。"
  overload: System.Security.AccessControl.FileSystemAuditRule.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "不正確的列舉型別傳遞至<code> flags </code>參數。       -或- <xref href=&quot;System.Security.AccessControl.AuditFlags&quot;> </xref>值已傳遞給<code> flags </code>參數。"
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  id: '#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)'
  parent: System.Security.AccessControl.FileSystemAuditRule
  langs:
  - csharp
  name: FileSystemAuditRule(IdentityReference,FileSystemRights,InheritanceFlags,PropagationFlags,AuditFlags)
  nameWithType: FileSystemAuditRule.FileSystemAuditRule(IdentityReference,FileSystemRights,InheritanceFlags,PropagationFlags,AuditFlags)
  fullName: System.Security.AccessControl.FileSystemAuditRule.FileSystemAuditRule(IdentityReference,FileSystemRights,InheritanceFlags,PropagationFlags,AuditFlags)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "初始化的新執行個體<xref href=&quot;System.Security.AccessControl.FileSystemAuditRule&quot;></xref>類別使用的使用者帳戶，一個值，指定的稽核規則、 值，決定如何繼承的權限、 權限傳播所決定的值和值，指定何時執行稽核與相關聯的作業類型的參考名稱。"
  remarks: "使用這個建構函式建立的稽核規則，您可以保存使用<xref:System.Security.AccessControl.FileSecurity>或<xref:System.Security.AccessControl.DirectorySecurity>類別。</xref:System.Security.AccessControl.DirectorySecurity> </xref:System.Security.AccessControl.FileSecurity>  稽核規則會決定何時以及如何系統物件上執行的動作例如檔案和資料夾，會記錄。"
  syntax:
    content: public FileSystemAuditRule (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.FileSystemRights fileSystemRights, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags);
    parameters:
    - id: identity
      type: System.Security.Principal.IdentityReference
      description: "<xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref>封裝的使用者帳戶的參考物件。"
    - id: fileSystemRights
      type: System.Security.AccessControl.FileSystemRights
      description: "其中一個<xref href=&quot;System.Security.AccessControl.FileSystemRights&quot;></xref>值，指定的稽核規則相關聯的作業類型。"
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
      description: "其中一個<xref href=&quot;System.Security.AccessControl.InheritanceFlags&quot;></xref>值，指定存取遮罩傳播到子物件的方式。"
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
      description: "其中一個<xref href=&quot;System.Security.AccessControl.PropagationFlags&quot;></xref>值，指定如何將存取控制項目 (Ace) 傳播到子物件。"
    - id: flags
      type: System.Security.AccessControl.AuditFlags
      description: "其中一個<xref href=&quot;System.Security.AccessControl.AuditFlags&quot;></xref>值，指定何時執行稽核。"
  overload: System.Security.AccessControl.FileSystemAuditRule.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> identity </code>參數不是<xref href=&quot;System.Security.Principal.IdentityReference&quot;></xref>物件。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>identity</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "不正確的列舉型別傳遞至<code> flags </code>參數。       -或- <xref href=&quot;System.Security.AccessControl.AuditFlags&quot;> </xref>值已傳遞給<code> flags </code>參數。"
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemAuditRule.#ctor(System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  id: '#ctor(System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)'
  parent: System.Security.AccessControl.FileSystemAuditRule
  langs:
  - csharp
  name: FileSystemAuditRule(String,FileSystemRights,InheritanceFlags,PropagationFlags,AuditFlags)
  nameWithType: FileSystemAuditRule.FileSystemAuditRule(String,FileSystemRights,InheritanceFlags,PropagationFlags,AuditFlags)
  fullName: System.Security.AccessControl.FileSystemAuditRule.FileSystemAuditRule(String,FileSystemRights,InheritanceFlags,PropagationFlags,AuditFlags)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "初始化的新執行個體<xref href=&quot;System.Security.AccessControl.FileSystemAuditRule&quot;></xref>類別使用的使用者帳戶、 指定的稽核規則相關聯的作業類型的值，決定如何繼承的權限的值、 值，決定如何傳播的權限，和值，指定何時執行稽核名稱。"
  remarks: "Use this constructor to create an audit rule that you can persist using the <xref:System.Security.AccessControl.FileSecurity> or <xref:System.Security.AccessControl.DirectorySecurity> class.  Audit rules determine when and how actions performed on system objects, such as files and folders, are logged.  \n  \n The `identity` parameter must identify a valid account on the current computer or domain.  The string takes the following form, where `DOMAIN` is the name of a valid domain or computer name and `account` is the name of a valid user account on a domain or computer: `DOMAIN\\account`."
  syntax:
    content: public FileSystemAuditRule (string identity, System.Security.AccessControl.FileSystemRights fileSystemRights, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags);
    parameters:
    - id: identity
      type: System.String
      description: "使用者帳戶的名稱。"
    - id: fileSystemRights
      type: System.Security.AccessControl.FileSystemRights
      description: "其中一個<xref href=&quot;System.Security.AccessControl.FileSystemRights&quot;></xref>值，指定的稽核規則相關聯的作業類型。"
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
      description: "其中一個<xref href=&quot;System.Security.AccessControl.InheritanceFlags&quot;></xref>值，指定存取遮罩傳播到子物件的方式。"
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
      description: "其中一個<xref href=&quot;System.Security.AccessControl.PropagationFlags&quot;></xref>值，指定如何將存取控制項目 (Ace) 傳播到子物件。"
    - id: flags
      type: System.Security.AccessControl.AuditFlags
      description: "其中一個<xref href=&quot;System.Security.AccessControl.AuditFlags&quot;></xref>值，指定何時執行稽核。"
  overload: System.Security.AccessControl.FileSystemAuditRule.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemAuditRule.FileSystemRights
  id: FileSystemRights
  parent: System.Security.AccessControl.FileSystemAuditRule
  langs:
  - csharp
  name: FileSystemRights
  nameWithType: FileSystemAuditRule.FileSystemRights
  fullName: System.Security.AccessControl.FileSystemAuditRule.FileSystemRights
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "取得<xref href=&quot;System.Security.AccessControl.FileSystemRights&quot;></xref>目前相關聯的旗標<xref href=&quot;System.Security.AccessControl.FileSystemAuditRule&quot;></xref>物件。"
  syntax:
    content: public System.Security.AccessControl.FileSystemRights FileSystemRights { get; }
    return:
      type: System.Security.AccessControl.FileSystemRights
      description: "<xref href=&quot;System.Security.AccessControl.FileSystemRights&quot;> </xref>目前相關聯的旗標<xref href=&quot;System.Security.AccessControl.FileSystemAuditRule&quot;></xref>物件。"
  overload: System.Security.AccessControl.FileSystemAuditRule.FileSystemRights*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.AccessControl.AuditRule
  isExternal: false
  name: System.Security.AccessControl.AuditRule
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Security.AccessControl.FileSystemAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AuditFlags)
  parent: System.Security.AccessControl.FileSystemAuditRule
  isExternal: false
  name: FileSystemAuditRule(IdentityReference,FileSystemRights,AuditFlags)
  nameWithType: FileSystemAuditRule.FileSystemAuditRule(IdentityReference,FileSystemRights,AuditFlags)
  fullName: System.Security.AccessControl.FileSystemAuditRule.FileSystemAuditRule(IdentityReference,FileSystemRights,AuditFlags)
- uid: System.Security.Principal.IdentityReference
  parent: System.Security.Principal
  isExternal: false
  name: IdentityReference
  nameWithType: IdentityReference
  fullName: System.Security.Principal.IdentityReference
- uid: System.Security.AccessControl.FileSystemRights
  parent: System.Security.AccessControl
  isExternal: false
  name: FileSystemRights
  nameWithType: FileSystemRights
  fullName: System.Security.AccessControl.FileSystemRights
- uid: System.Security.AccessControl.AuditFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: AuditFlags
  nameWithType: AuditFlags
  fullName: System.Security.AccessControl.AuditFlags
- uid: System.Security.AccessControl.FileSystemAuditRule.#ctor(System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AuditFlags)
  parent: System.Security.AccessControl.FileSystemAuditRule
  isExternal: false
  name: FileSystemAuditRule(String,FileSystemRights,AuditFlags)
  nameWithType: FileSystemAuditRule.FileSystemAuditRule(String,FileSystemRights,AuditFlags)
  fullName: System.Security.AccessControl.FileSystemAuditRule.FileSystemAuditRule(String,FileSystemRights,AuditFlags)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.AccessControl.FileSystemAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  parent: System.Security.AccessControl.FileSystemAuditRule
  isExternal: false
  name: FileSystemAuditRule(IdentityReference,FileSystemRights,InheritanceFlags,PropagationFlags,AuditFlags)
  nameWithType: FileSystemAuditRule.FileSystemAuditRule(IdentityReference,FileSystemRights,InheritanceFlags,PropagationFlags,AuditFlags)
  fullName: System.Security.AccessControl.FileSystemAuditRule.FileSystemAuditRule(IdentityReference,FileSystemRights,InheritanceFlags,PropagationFlags,AuditFlags)
- uid: System.Security.AccessControl.InheritanceFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: InheritanceFlags
  nameWithType: InheritanceFlags
  fullName: System.Security.AccessControl.InheritanceFlags
- uid: System.Security.AccessControl.PropagationFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: PropagationFlags
  nameWithType: PropagationFlags
  fullName: System.Security.AccessControl.PropagationFlags
- uid: System.Security.AccessControl.FileSystemAuditRule.#ctor(System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  parent: System.Security.AccessControl.FileSystemAuditRule
  isExternal: false
  name: FileSystemAuditRule(String,FileSystemRights,InheritanceFlags,PropagationFlags,AuditFlags)
  nameWithType: FileSystemAuditRule.FileSystemAuditRule(String,FileSystemRights,InheritanceFlags,PropagationFlags,AuditFlags)
  fullName: System.Security.AccessControl.FileSystemAuditRule.FileSystemAuditRule(String,FileSystemRights,InheritanceFlags,PropagationFlags,AuditFlags)
- uid: System.Security.AccessControl.FileSystemAuditRule.FileSystemRights
  parent: System.Security.AccessControl.FileSystemAuditRule
  isExternal: false
  name: FileSystemRights
  nameWithType: FileSystemAuditRule.FileSystemRights
  fullName: System.Security.AccessControl.FileSystemAuditRule.FileSystemRights
- uid: System.Security.AccessControl.FileSystemAuditRule.#ctor*
  parent: System.Security.AccessControl.FileSystemAuditRule
  isExternal: false
  name: FileSystemAuditRule
  nameWithType: FileSystemAuditRule.FileSystemAuditRule
- uid: System.Security.AccessControl.FileSystemAuditRule.FileSystemRights*
  parent: System.Security.AccessControl.FileSystemAuditRule
  isExternal: false
  name: FileSystemRights
  nameWithType: FileSystemAuditRule.FileSystemRights
