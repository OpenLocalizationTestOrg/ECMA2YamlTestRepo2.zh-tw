### YamlMime:ManagedReference
items:
- uid: System.Workflow.Runtime.WorkflowEventArgs
  id: WorkflowEventArgs
  children:
  - System.Workflow.Runtime.WorkflowEventArgs.WorkflowInstance
  langs:
  - csharp
  name: WorkflowEventArgs
  nameWithType: WorkflowEventArgs
  fullName: System.Workflow.Runtime.WorkflowEventArgs
  type: Class
  summary: "提供工作流程事件的資料。"
  remarks: "> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]工作流程事件與相關聯的工作流程執行個體。 包含 WorkflowEventArgs<xref:System.Workflow.Runtime.WorkflowInstance>與工作流程事件相關聯。</xref:System.Workflow.Runtime.WorkflowInstance> WorkflowEventArgs 或衍生自 WorkflowEventArgs 類別的物件提供資料給所有的工作流程中的事件<xref:System.Workflow.Runtime.WorkflowRuntime>類別。</xref:System.Workflow.Runtime.WorkflowRuntime> WorkflowEventArgs 是基底類別<xref:System.Workflow.Runtime.WorkflowCompletedEventArgs>， <xref:System.Workflow.Runtime.WorkflowSuspendedEventArgs>，和<xref:System.Workflow.Runtime.WorkflowTerminatedEventArgs>。</xref:System.Workflow.Runtime.WorkflowTerminatedEventArgs> </xref:System.Workflow.Runtime.WorkflowSuspendedEventArgs> </xref:System.Workflow.Runtime.WorkflowCompletedEventArgs>"
  example:
  - "The following code example demonstrates how to obtain a <xref:System.Workflow.Runtime.WorkflowInstance> object using the <xref:System.Workflow.Runtime.WorkflowEventArgs.WorkflowInstance%2A> property when an event handler method is called. When the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled> event occurs, the `OnWorkflowIdled` method defined in this example is called. It determines which workflow is idled using the <xref:System.Workflow.Runtime.WorkflowEventArgs.WorkflowInstance%2A> property and then gets a collection of queued items for the workflow instance by calling the <xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A> method. The code iterates over the collection to determine which activity is waiting for the event that idled the workflow. It then sends an exception to the workflow queue using the <xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A> method along with the name of the event queue item.  \n  \n This code example is part of the Canceling a Workflow SDK Sample from the Program.cs file. For more information, see [Canceling a Workflow](http://msdn.microsoft.com/en-us/d5077f56-a78b-48e7-825c-f6c77c8e54fb).  \n  \n [!code-cs[WF_Samples#261](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#261)]\n [!code-vb[WF_Samples#261](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#261)]"
  syntax:
    content: >-
      [System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")]

      public class WorkflowEventArgs : EventArgs
  inheritance:
  - System.EventArgs
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowEventArgs.WorkflowInstance
  id: WorkflowInstance
  parent: System.Workflow.Runtime.WorkflowEventArgs
  langs:
  - csharp
  name: WorkflowInstance
  nameWithType: WorkflowEventArgs.WorkflowInstance
  fullName: System.Workflow.Runtime.WorkflowEventArgs.WorkflowInstance
  type: Property
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "取得與工作流程事件關聯之工作流程執行個體。"
  remarks: ''
  example:
  - "The following code example demonstrates how to obtain a <xref:System.Workflow.Runtime.WorkflowInstance> object using the WorkflowInstance property when an event handler method is called. When the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled> event occurs, the `OnWorkflowIdled` method defined in this example is called. It determines which workflow is idled using the WorkflowInstance property and then gets a collection of queued items for the workflow instance by calling the <xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A> method. The code iterates over the collection to determine which activity is waiting for the event that idled the workflow. It then sends an exception to the workflow queue using the <xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A> method along with the name of the event queue item.  \n  \n This code example is part of the Canceling a Workflow SDK Sample from the Program.cs file. For more information, see [Canceling a Workflow](http://msdn.microsoft.com/en-us/d5077f56-a78b-48e7-825c-f6c77c8e54fb).  \n  \n [!code-cs[WF_Samples#261](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#261)]\n [!code-vb[WF_Samples#261](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#261)]"
  syntax:
    content: public System.Workflow.Runtime.WorkflowInstance WorkflowInstance { get; }
    return:
      type: System.Workflow.Runtime.WorkflowInstance
      description: "<xref href=&quot;System.Workflow.Runtime.WorkflowInstance&quot;> </xref>與工作流程事件相關聯。"
  overload: System.Workflow.Runtime.WorkflowEventArgs.WorkflowInstance*
  exceptions: []
  platform:
  - net462
references:
- uid: System.EventArgs
  isExternal: false
  name: System.EventArgs
- uid: System.Workflow.Runtime.WorkflowEventArgs.WorkflowInstance
  parent: System.Workflow.Runtime.WorkflowEventArgs
  isExternal: false
  name: WorkflowInstance
  nameWithType: WorkflowEventArgs.WorkflowInstance
  fullName: System.Workflow.Runtime.WorkflowEventArgs.WorkflowInstance
- uid: System.Workflow.Runtime.WorkflowInstance
  parent: System.Workflow.Runtime
  isExternal: false
  name: WorkflowInstance
  nameWithType: WorkflowInstance
  fullName: System.Workflow.Runtime.WorkflowInstance
- uid: System.Workflow.Runtime.WorkflowEventArgs.WorkflowInstance*
  parent: System.Workflow.Runtime.WorkflowEventArgs
  isExternal: false
  name: WorkflowInstance
  nameWithType: WorkflowEventArgs.WorkflowInstance
