### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.ListBox
  id: ListBox
  children:
  - System.Windows.Forms.ListBox.#ctor
  - System.Windows.Forms.ListBox.AddItemsCore(System.Object[])
  - System.Windows.Forms.ListBox.AllowSelection
  - System.Windows.Forms.ListBox.BackColor
  - System.Windows.Forms.ListBox.BackgroundImage
  - System.Windows.Forms.ListBox.BackgroundImageChanged
  - System.Windows.Forms.ListBox.BackgroundImageLayout
  - System.Windows.Forms.ListBox.BackgroundImageLayoutChanged
  - System.Windows.Forms.ListBox.BeginUpdate
  - System.Windows.Forms.ListBox.BorderStyle
  - System.Windows.Forms.ListBox.ClearSelected
  - System.Windows.Forms.ListBox.Click
  - System.Windows.Forms.ListBox.ColumnWidth
  - System.Windows.Forms.ListBox.CreateItemCollection
  - System.Windows.Forms.ListBox.CreateParams
  - System.Windows.Forms.ListBox.CustomTabOffsets
  - System.Windows.Forms.ListBox.DefaultItemHeight
  - System.Windows.Forms.ListBox.DefaultSize
  - System.Windows.Forms.ListBox.DrawItem
  - System.Windows.Forms.ListBox.DrawMode
  - System.Windows.Forms.ListBox.EndUpdate
  - System.Windows.Forms.ListBox.FindString(System.String)
  - System.Windows.Forms.ListBox.FindString(System.String,System.Int32)
  - System.Windows.Forms.ListBox.FindStringExact(System.String)
  - System.Windows.Forms.ListBox.FindStringExact(System.String,System.Int32)
  - System.Windows.Forms.ListBox.Font
  - System.Windows.Forms.ListBox.ForeColor
  - System.Windows.Forms.ListBox.GetItemHeight(System.Int32)
  - System.Windows.Forms.ListBox.GetItemRectangle(System.Int32)
  - System.Windows.Forms.ListBox.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)
  - System.Windows.Forms.ListBox.GetSelected(System.Int32)
  - System.Windows.Forms.ListBox.HorizontalExtent
  - System.Windows.Forms.ListBox.HorizontalScrollbar
  - System.Windows.Forms.ListBox.IndexFromPoint(System.Drawing.Point)
  - System.Windows.Forms.ListBox.IndexFromPoint(System.Int32,System.Int32)
  - System.Windows.Forms.ListBox.IntegralHeight
  - System.Windows.Forms.ListBox.ItemHeight
  - System.Windows.Forms.ListBox.Items
  - System.Windows.Forms.ListBox.MeasureItem
  - System.Windows.Forms.ListBox.MouseClick
  - System.Windows.Forms.ListBox.MultiColumn
  - System.Windows.Forms.ListBox.NoMatches
  - System.Windows.Forms.ListBox.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)
  - System.Windows.Forms.ListBox.OnDataSourceChanged(System.EventArgs)
  - System.Windows.Forms.ListBox.OnDisplayMemberChanged(System.EventArgs)
  - System.Windows.Forms.ListBox.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)
  - System.Windows.Forms.ListBox.OnFontChanged(System.EventArgs)
  - System.Windows.Forms.ListBox.OnHandleCreated(System.EventArgs)
  - System.Windows.Forms.ListBox.OnHandleDestroyed(System.EventArgs)
  - System.Windows.Forms.ListBox.OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)
  - System.Windows.Forms.ListBox.OnParentChanged(System.EventArgs)
  - System.Windows.Forms.ListBox.OnResize(System.EventArgs)
  - System.Windows.Forms.ListBox.OnSelectedIndexChanged(System.EventArgs)
  - System.Windows.Forms.ListBox.OnSelectedValueChanged(System.EventArgs)
  - System.Windows.Forms.ListBox.Padding
  - System.Windows.Forms.ListBox.PaddingChanged
  - System.Windows.Forms.ListBox.Paint
  - System.Windows.Forms.ListBox.PreferredHeight
  - System.Windows.Forms.ListBox.Refresh
  - System.Windows.Forms.ListBox.RefreshItem(System.Int32)
  - System.Windows.Forms.ListBox.RefreshItems
  - System.Windows.Forms.ListBox.ResetBackColor
  - System.Windows.Forms.ListBox.ResetForeColor
  - System.Windows.Forms.ListBox.RightToLeft
  - System.Windows.Forms.ListBox.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)
  - System.Windows.Forms.ListBox.ScrollAlwaysVisible
  - System.Windows.Forms.ListBox.SelectedIndex
  - System.Windows.Forms.ListBox.SelectedIndexChanged
  - System.Windows.Forms.ListBox.SelectedIndices
  - System.Windows.Forms.ListBox.SelectedItem
  - System.Windows.Forms.ListBox.SelectedItems
  - System.Windows.Forms.ListBox.SelectionMode
  - System.Windows.Forms.ListBox.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)
  - System.Windows.Forms.ListBox.SetItemCore(System.Int32,System.Object)
  - System.Windows.Forms.ListBox.SetItemsCore(System.Collections.IList)
  - System.Windows.Forms.ListBox.SetSelected(System.Int32,System.Boolean)
  - System.Windows.Forms.ListBox.Sort
  - System.Windows.Forms.ListBox.Sorted
  - System.Windows.Forms.ListBox.Text
  - System.Windows.Forms.ListBox.TextChanged
  - System.Windows.Forms.ListBox.TopIndex
  - System.Windows.Forms.ListBox.ToString
  - System.Windows.Forms.ListBox.UseCustomTabOffsets
  - System.Windows.Forms.ListBox.UseTabStops
  - System.Windows.Forms.ListBox.WmReflectCommand(System.Windows.Forms.Message@)
  - System.Windows.Forms.ListBox.WndProc(System.Windows.Forms.Message@)
  langs:
  - csharp
  name: ListBox
  nameWithType: ListBox
  fullName: System.Windows.Forms.ListBox
  type: Class
  summary: "表示 Windows 控制項以顯示項目清單。"
  remarks: "ListBox 控制項可讓您顯示給使用者，使用者可以按一下選取的項目清單。 ListBox 控制項可以提供單一或多個選取項目使用<xref:System.Windows.Forms.ListBox.SelectionMode%2A>屬性。</xref:System.Windows.Forms.ListBox.SelectionMode%2A> 清單方塊也會提供<xref:System.Windows.Forms.ListBox.MultiColumn%2A>，啟用項目的資料行，而不是直接垂直清單中的項目顯示的屬性。</xref:System.Windows.Forms.ListBox.MultiColumn%2A> 與這個項目，此控制項可以顯示更明顯可見的項目，使用者不再需要捲動項目。       一般而言，Windows 會處理繪製的項目在清單方塊中顯示的工作。 您可以使用<xref:System.Windows.Forms.ListBox.DrawMode%2A>屬性，並控制代碼<xref:System.Windows.Forms.ListBox.MeasureItem>和<xref:System.Windows.Forms.ListBox.DrawItem>事件，因此您可以覆寫繪製 Windows 自動提供，並自行繪製項目。</xref:System.Windows.Forms.ListBox.DrawItem> </xref:System.Windows.Forms.ListBox.MeasureItem> </xref:System.Windows.Forms.ListBox.DrawMode%2A> 您可以使用主控描繪清單方塊控制項來顯示清單中的變動高度項目、 影像或不同的色彩或每個項目的文字字型。 <xref:System.Windows.Forms.ListBox.HorizontalExtent%2A>屬性， <xref:System.Windows.Forms.ListBox.GetItemHeight%2A>，和<xref:System.Windows.Forms.ListBox.GetItemRectangle%2A>也可協助您繪製您自己的項目。</xref:System.Windows.Forms.ListBox.GetItemRectangle%2A> </xref:System.Windows.Forms.ListBox.GetItemHeight%2A> </xref:System.Windows.Forms.ListBox.HorizontalExtent%2A>       顯示和選取的功能，除了清單方塊也會提供可讓您有效率地將項目加入清單方塊，並找出清單的項目內文字的功能。 <xref:System.Windows.Forms.ListBox.BeginUpdate%2A>和<xref:System.Windows.Forms.ListBox.EndUpdate%2A>方法可讓您將大量的項目加入清單方塊項目新增至清單每次重繪控制項。</xref:System.Windows.Forms.ListBox.EndUpdate%2A> </xref:System.Windows.Forms.ListBox.BeginUpdate%2A> <xref:System.Windows.Forms.ListBox.FindString%2A>和<xref:System.Windows.Forms.ListBox.FindStringExact%2A>方法可讓您搜尋包含特定的搜尋字串的清單中的項目。</xref:System.Windows.Forms.ListBox.FindStringExact%2A> </xref:System.Windows.Forms.ListBox.FindString%2A>       <xref:System.Windows.Forms.ListBox.Items%2A>， <xref:System.Windows.Forms.ListBox.SelectedItems%2A>，和<xref:System.Windows.Forms.ListBox.SelectedIndices%2A>屬性會提供三個集合所使用的清單方塊的存取。</xref:System.Windows.Forms.ListBox.SelectedIndices%2A> </xref:System.Windows.Forms.ListBox.SelectedItems%2A> </xref:System.Windows.Forms.ListBox.Items%2A> 下表摘要列出三個清單方塊和使用控制項中的所使用的集合。      |集合類別 |在清單方塊中的使用 |  |----------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------|  |<xref:System.Windows.Forms.ListBox.ObjectCollection>|包含 ListBox 控制項中包含的所有項目。 |  |<xref:System.Windows.Forms.ListBox.SelectedObjectCollection>|包含集合選取的項目，其中是包含在清單方塊控制項中的項目子集。 |  |<xref:System.Windows.Forms.ListBox.SelectedIndexCollection>|包含集合，將選定的索引，其中是<xref:System.Windows.Forms.ListBox.ObjectCollection>.</xref:System.Windows.Forms.ListBox.ObjectCollection>索引子集</xref:System.Windows.Forms.ListBox.SelectedIndexCollection></xref:System.Windows.Forms.ListBox.SelectedObjectCollection></xref:System.Windows.Forms.ListBox.ObjectCollection> 這些索引指定已選取項目。 |      下列三個範例顯示 ListBox 類別支援三個索引的集合。       下表顯示如何的範例<xref:System.Windows.Forms.ListBox.ObjectCollection>儲存的清單方塊為其選取狀態，範例清單方塊內的項目。</xref:System.Windows.Forms.ListBox.ObjectCollection>      |索引 |項目 |在清單方塊中的選取狀態 |  |-----------|----------|----------------------------------------|  |&0; | object1 |未選取 |  |&1; | object2 |選取 |  |&2; | object3 |未選取 |  |&3; | object4 |選取 |  |&4; | object5 |選取 |      根據<xref:System.Windows.Forms.ListBox.ObjectCollection>，如上表所示，此表格顯示如何<xref:System.Windows.Forms.ListBox.SelectedObjectCollection>會出現。</xref:System.Windows.Forms.ListBox.SelectedObjectCollection> </xref:System.Windows.Forms.ListBox.ObjectCollection>      |索引 |項目 |  |-----------|----------|  |&0; | object2 |  |&1; | object4 |  |&2; | object5 |      根據<xref:System.Windows.Forms.ListBox.ObjectCollection>，如上表所示，此表格顯示如何<xref:System.Windows.Forms.ListBox.SelectedIndexCollection>會出現。</xref:System.Windows.Forms.ListBox.SelectedIndexCollection> </xref:System.Windows.Forms.ListBox.ObjectCollection>      |索引 |項目的索引 |  |-----------|-------------------|  |&0; |&1; |  |&1; |&3; |  |&2; |&4; |      <xref:System.Windows.Forms.ListBox.ObjectCollection.Add%2A>方法<xref:System.Windows.Forms.ListBox.ObjectCollection>類別可讓您將項目加入清單方塊。</xref:System.Windows.Forms.ListBox.ObjectCollection> </xref:System.Windows.Forms.ListBox.ObjectCollection.Add%2A> <xref:System.Windows.Forms.ListBox.ObjectCollection.Add%2A>方法可以接受任何物件，將成員加入至清單方塊時。</xref:System.Windows.Forms.ListBox.ObjectCollection.Add%2A> 當物件新增至清單方塊中時，此控制項會使用中定義的文字<xref:System.Object.ToString%2A>物件的方法除非此物件內的成員名稱會指定於<xref:System.Windows.Forms.ListControl.DisplayMember%2A>屬性。</xref:System.Windows.Forms.ListControl.DisplayMember%2A> </xref:System.Object.ToString%2A> 除了新增項目使用<xref:System.Windows.Forms.ListBox.ObjectCollection.Add%2A>方法的<xref:System.Windows.Forms.ListBox.ObjectCollection>類別，您也可以新增項目使用<xref:System.Windows.Forms.ListControl.DataSource%2A>屬性的<xref:System.Windows.Forms.ListControl>類別。</xref:System.Windows.Forms.ListControl> </xref:System.Windows.Forms.ListControl.DataSource%2A> </xref:System.Windows.Forms.ListBox.ObjectCollection> </xref:System.Windows.Forms.ListBox.ObjectCollection.Add%2A>      > [!NOTE] > 清單方塊中，如果<xref:System.Windows.Forms.ComboBox>，或<xref:System.Windows.Forms.CheckedListBox>基底 Windows form 並想来修改這些控制項衍生的 Windows form 中的字串集合，基底的 Windows form 中的這些控制項的字串集合必須是空白。</xref:System.Windows.Forms.CheckedListBox> </xref:System.Windows.Forms.ComboBox> 如果字串集合不是空的它們會變成唯讀時衍生另一個 Windows form。"
  example:
  - "The following code example demonstrates how to create a ListBox control that displays multiple items in columns and can have more than one item selected in the control's list. The code for the example adds 50 items to the ListBox using the <xref:System.Windows.Forms.ListBox.ObjectCollection.Add%2A> method of the <xref:System.Windows.Forms.ListBox.ObjectCollection> class and then selects three items from the list using the <xref:System.Windows.Forms.ListBox.SetSelected%2A> method. The code then displays values from the <xref:System.Windows.Forms.ListBox.SelectedObjectCollection> collection, through the <xref:System.Windows.Forms.ListBox.SelectedItems%2A> property, and the <xref:System.Windows.Forms.ListBox.SelectedIndexCollection>, through the <xref:System.Windows.Forms.ListBox.SelectedIndices%2A> property. This example requires that the code is located in and called from a <xref:System.Windows.Forms.Form>.  \n  \n [!code-cpp[Classic ListBox Example#1](~/add/codesnippet/cpp/t-system.windows.forms.l_19_1.cpp)]\n [!code-cs[Classic ListBox Example#1](~/add/codesnippet/csharp/t-system.windows.forms.l_19_1.cs)]\n [!code-vb[Classic ListBox Example#1](~/add/codesnippet/visualbasic/t-system.windows.forms.l_19_1.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultBindingProperty("SelectedValue")]

      [System.ComponentModel.DefaultEvent("SelectedIndexChanged")]

      [System.ComponentModel.DefaultProperty("Items")]

      [System.ComponentModel.Designer("System.Windows.Forms.Design.ListBoxDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)]

      [System.Runtime.InteropServices.ComVisible(true)]

      public class ListBox : System.Windows.Forms.ListControl
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  - System.Windows.Forms.Control
  - System.Windows.Forms.ListControl
  implements: []
  inheritedMembers:
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  - System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32)
  - System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32,System.Int32)
  - System.Windows.Forms.Control.AccessibilityObject
  - System.Windows.Forms.Control.AccessibleDefaultActionDescription
  - System.Windows.Forms.Control.AccessibleDescription
  - System.Windows.Forms.Control.AccessibleName
  - System.Windows.Forms.Control.AccessibleRole
  - System.Windows.Forms.Control.AllowDrop
  - System.Windows.Forms.Control.Anchor
  - System.Windows.Forms.Control.AutoScrollOffset
  - System.Windows.Forms.Control.AutoSize
  - System.Windows.Forms.Control.AutoSizeChanged
  - System.Windows.Forms.Control.BackColorChanged
  - System.Windows.Forms.Control.BeginInvoke(System.Delegate)
  - System.Windows.Forms.Control.BeginInvoke(System.Delegate,System.Object[])
  - System.Windows.Forms.Control.BindingContext
  - System.Windows.Forms.Control.BindingContextChanged
  - System.Windows.Forms.Control.Bottom
  - System.Windows.Forms.Control.Bounds
  - System.Windows.Forms.Control.BringToFront
  - System.Windows.Forms.Control.CanEnableIme
  - System.Windows.Forms.Control.CanFocus
  - System.Windows.Forms.Control.CanRaiseEvents
  - System.Windows.Forms.Control.CanSelect
  - System.Windows.Forms.Control.Capture
  - System.Windows.Forms.Control.CausesValidation
  - System.Windows.Forms.Control.CausesValidationChanged
  - System.Windows.Forms.Control.ChangeUICues
  - System.Windows.Forms.Control.CheckForIllegalCrossThreadCalls
  - System.Windows.Forms.Control.ClientRectangle
  - System.Windows.Forms.Control.ClientSize
  - System.Windows.Forms.Control.ClientSizeChanged
  - System.Windows.Forms.Control.CompanyName
  - System.Windows.Forms.Control.Contains(System.Windows.Forms.Control)
  - System.Windows.Forms.Control.ContainsFocus
  - System.Windows.Forms.Control.ContextMenu
  - System.Windows.Forms.Control.ContextMenuChanged
  - System.Windows.Forms.Control.ContextMenuStrip
  - System.Windows.Forms.Control.ContextMenuStripChanged
  - System.Windows.Forms.Control.ControlAdded
  - System.Windows.Forms.Control.ControlRemoved
  - System.Windows.Forms.Control.Controls
  - System.Windows.Forms.Control.CreateAccessibilityInstance
  - System.Windows.Forms.Control.CreateControl
  - System.Windows.Forms.Control.CreateControlsInstance
  - System.Windows.Forms.Control.Created
  - System.Windows.Forms.Control.CreateGraphics
  - System.Windows.Forms.Control.CreateHandle
  - System.Windows.Forms.Control.Cursor
  - System.Windows.Forms.Control.CursorChanged
  - System.Windows.Forms.Control.DataBindings
  - System.Windows.Forms.Control.DefaultBackColor
  - System.Windows.Forms.Control.DefaultCursor
  - System.Windows.Forms.Control.DefaultFont
  - System.Windows.Forms.Control.DefaultForeColor
  - System.Windows.Forms.Control.DefaultImeMode
  - System.Windows.Forms.Control.DefaultMargin
  - System.Windows.Forms.Control.DefaultMaximumSize
  - System.Windows.Forms.Control.DefaultMinimumSize
  - System.Windows.Forms.Control.DefaultPadding
  - System.Windows.Forms.Control.DefWndProc(System.Windows.Forms.Message@)
  - System.Windows.Forms.Control.DestroyHandle
  - System.Windows.Forms.Control.DisplayRectangle
  - System.Windows.Forms.Control.Dispose(System.Boolean)
  - System.Windows.Forms.Control.Disposing
  - System.Windows.Forms.Control.Dock
  - System.Windows.Forms.Control.DockChanged
  - System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)
  - System.Windows.Forms.Control.DoubleBuffered
  - System.Windows.Forms.Control.DoubleClick
  - System.Windows.Forms.Control.DragDrop
  - System.Windows.Forms.Control.DragEnter
  - System.Windows.Forms.Control.DragLeave
  - System.Windows.Forms.Control.DragOver
  - System.Windows.Forms.Control.DrawToBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)
  - System.Windows.Forms.Control.Enabled
  - System.Windows.Forms.Control.EnabledChanged
  - System.Windows.Forms.Control.EndInvoke(System.IAsyncResult)
  - System.Windows.Forms.Control.Enter
  - System.Windows.Forms.Control.FindForm
  - System.Windows.Forms.Control.Focus
  - System.Windows.Forms.Control.Focused
  - System.Windows.Forms.Control.FontChanged
  - System.Windows.Forms.Control.FontHeight
  - System.Windows.Forms.Control.ForeColorChanged
  - System.Windows.Forms.Control.FromChildHandle(System.IntPtr)
  - System.Windows.Forms.Control.FromHandle(System.IntPtr)
  - System.Windows.Forms.Control.GetAccessibilityObjectById(System.Int32)
  - System.Windows.Forms.Control.GetAutoSizeMode
  - System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point)
  - System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point,System.Windows.Forms.GetChildAtPointSkip)
  - System.Windows.Forms.Control.GetContainerControl
  - System.Windows.Forms.Control.GetNextControl(System.Windows.Forms.Control,System.Boolean)
  - System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)
  - System.Windows.Forms.Control.GetStyle(System.Windows.Forms.ControlStyles)
  - System.Windows.Forms.Control.GetTopLevel
  - System.Windows.Forms.Control.GiveFeedback
  - System.Windows.Forms.Control.GotFocus
  - System.Windows.Forms.Control.Handle
  - System.Windows.Forms.Control.HandleCreated
  - System.Windows.Forms.Control.HandleDestroyed
  - System.Windows.Forms.Control.HasChildren
  - System.Windows.Forms.Control.Height
  - System.Windows.Forms.Control.HelpRequested
  - System.Windows.Forms.Control.Hide
  - System.Windows.Forms.Control.ImeMode
  - System.Windows.Forms.Control.ImeModeBase
  - System.Windows.Forms.Control.ImeModeChanged
  - System.Windows.Forms.Control.InitLayout
  - System.Windows.Forms.Control.Invalidate
  - System.Windows.Forms.Control.Invalidate(System.Boolean)
  - System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle)
  - System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle,System.Boolean)
  - System.Windows.Forms.Control.Invalidate(System.Drawing.Region)
  - System.Windows.Forms.Control.Invalidate(System.Drawing.Region,System.Boolean)
  - System.Windows.Forms.Control.Invalidated
  - System.Windows.Forms.Control.Invoke(System.Delegate)
  - System.Windows.Forms.Control.Invoke(System.Delegate,System.Object[])
  - System.Windows.Forms.Control.InvokeGotFocus(System.Windows.Forms.Control,System.EventArgs)
  - System.Windows.Forms.Control.InvokeLostFocus(System.Windows.Forms.Control,System.EventArgs)
  - System.Windows.Forms.Control.InvokeOnClick(System.Windows.Forms.Control,System.EventArgs)
  - System.Windows.Forms.Control.InvokePaint(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)
  - System.Windows.Forms.Control.InvokePaintBackground(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)
  - System.Windows.Forms.Control.InvokeRequired
  - System.Windows.Forms.Control.IsAccessible
  - System.Windows.Forms.Control.IsDisposed
  - System.Windows.Forms.Control.IsHandleCreated
  - System.Windows.Forms.Control.IsInputChar(System.Char)
  - System.Windows.Forms.Control.IsKeyLocked(System.Windows.Forms.Keys)
  - System.Windows.Forms.Control.IsMirrored
  - System.Windows.Forms.Control.IsMnemonic(System.Char,System.String)
  - System.Windows.Forms.Control.KeyDown
  - System.Windows.Forms.Control.KeyPress
  - System.Windows.Forms.Control.KeyUp
  - System.Windows.Forms.Control.Layout
  - System.Windows.Forms.Control.LayoutEngine
  - System.Windows.Forms.Control.Leave
  - System.Windows.Forms.Control.Left
  - System.Windows.Forms.Control.Location
  - System.Windows.Forms.Control.LocationChanged
  - System.Windows.Forms.Control.LostFocus
  - System.Windows.Forms.Control.Margin
  - System.Windows.Forms.Control.MarginChanged
  - System.Windows.Forms.Control.MaximumSize
  - System.Windows.Forms.Control.MinimumSize
  - System.Windows.Forms.Control.ModifierKeys
  - System.Windows.Forms.Control.MouseButtons
  - System.Windows.Forms.Control.MouseCaptureChanged
  - System.Windows.Forms.Control.MouseDoubleClick
  - System.Windows.Forms.Control.MouseDown
  - System.Windows.Forms.Control.MouseEnter
  - System.Windows.Forms.Control.MouseHover
  - System.Windows.Forms.Control.MouseLeave
  - System.Windows.Forms.Control.MouseMove
  - System.Windows.Forms.Control.MousePosition
  - System.Windows.Forms.Control.MouseUp
  - System.Windows.Forms.Control.MouseWheel
  - System.Windows.Forms.Control.Move
  - System.Windows.Forms.Control.Name
  - System.Windows.Forms.Control.NotifyInvalidate(System.Drawing.Rectangle)
  - System.Windows.Forms.Control.OnAutoSizeChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnBackColorChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnBackgroundImageChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnBackgroundImageLayoutChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnCausesValidationChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnClick(System.EventArgs)
  - System.Windows.Forms.Control.OnClientSizeChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnContextMenuChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnContextMenuStripChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnControlAdded(System.Windows.Forms.ControlEventArgs)
  - System.Windows.Forms.Control.OnControlRemoved(System.Windows.Forms.ControlEventArgs)
  - System.Windows.Forms.Control.OnCreateControl
  - System.Windows.Forms.Control.OnCursorChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnDockChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnDoubleClick(System.EventArgs)
  - System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)
  - System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)
  - System.Windows.Forms.Control.OnDragLeave(System.EventArgs)
  - System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)
  - System.Windows.Forms.Control.OnEnabledChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnEnter(System.EventArgs)
  - System.Windows.Forms.Control.OnForeColorChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)
  - System.Windows.Forms.Control.OnGotFocus(System.EventArgs)
  - System.Windows.Forms.Control.OnHelpRequested(System.Windows.Forms.HelpEventArgs)
  - System.Windows.Forms.Control.OnImeModeChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)
  - System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)
  - System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)
  - System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs)
  - System.Windows.Forms.Control.OnLayout(System.Windows.Forms.LayoutEventArgs)
  - System.Windows.Forms.Control.OnLeave(System.EventArgs)
  - System.Windows.Forms.Control.OnLocationChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnLostFocus(System.EventArgs)
  - System.Windows.Forms.Control.OnMarginChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnMouseCaptureChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnMouseClick(System.Windows.Forms.MouseEventArgs)
  - System.Windows.Forms.Control.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)
  - System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)
  - System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)
  - System.Windows.Forms.Control.OnMouseHover(System.EventArgs)
  - System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)
  - System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)
  - System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)
  - System.Windows.Forms.Control.OnMouseWheel(System.Windows.Forms.MouseEventArgs)
  - System.Windows.Forms.Control.OnMove(System.EventArgs)
  - System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)
  - System.Windows.Forms.Control.OnPaddingChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)
  - System.Windows.Forms.Control.OnPaintBackground(System.Windows.Forms.PaintEventArgs)
  - System.Windows.Forms.Control.OnParentBackColorChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnParentBackgroundImageChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnParentBindingContextChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnParentCursorChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnParentEnabledChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnParentFontChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnParentForeColorChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnParentRightToLeftChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnParentVisibleChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)
  - System.Windows.Forms.Control.OnPrint(System.Windows.Forms.PaintEventArgs)
  - System.Windows.Forms.Control.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)
  - System.Windows.Forms.Control.OnRegionChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnRightToLeftChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnSizeChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnStyleChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnSystemColorsChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnTabIndexChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnTabStopChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnTextChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnValidated(System.EventArgs)
  - System.Windows.Forms.Control.OnValidating(System.ComponentModel.CancelEventArgs)
  - System.Windows.Forms.Control.OnVisibleChanged(System.EventArgs)
  - System.Windows.Forms.Control.Parent
  - System.Windows.Forms.Control.ParentChanged
  - System.Windows.Forms.Control.PerformLayout
  - System.Windows.Forms.Control.PerformLayout(System.Windows.Forms.Control,System.String)
  - System.Windows.Forms.Control.PointToClient(System.Drawing.Point)
  - System.Windows.Forms.Control.PointToScreen(System.Drawing.Point)
  - System.Windows.Forms.Control.PreferredSize
  - System.Windows.Forms.Control.PreProcessControlMessage(System.Windows.Forms.Message@)
  - System.Windows.Forms.Control.PreProcessMessage(System.Windows.Forms.Message@)
  - System.Windows.Forms.Control.PreviewKeyDown
  - System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)
  - System.Windows.Forms.Control.ProcessDialogChar(System.Char)
  - System.Windows.Forms.Control.ProcessDialogKey(System.Windows.Forms.Keys)
  - System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)
  - System.Windows.Forms.Control.ProcessKeyMessage(System.Windows.Forms.Message@)
  - System.Windows.Forms.Control.ProcessKeyPreview(System.Windows.Forms.Message@)
  - System.Windows.Forms.Control.ProcessMnemonic(System.Char)
  - System.Windows.Forms.Control.ProductName
  - System.Windows.Forms.Control.ProductVersion
  - System.Windows.Forms.Control.PropagatingImeMode
  - System.Windows.Forms.Control.QueryAccessibilityHelp
  - System.Windows.Forms.Control.QueryContinueDrag
  - System.Windows.Forms.Control.RaiseDragEvent(System.Object,System.Windows.Forms.DragEventArgs)
  - System.Windows.Forms.Control.RaiseKeyEvent(System.Object,System.Windows.Forms.KeyEventArgs)
  - System.Windows.Forms.Control.RaiseMouseEvent(System.Object,System.Windows.Forms.MouseEventArgs)
  - System.Windows.Forms.Control.RaisePaintEvent(System.Object,System.Windows.Forms.PaintEventArgs)
  - System.Windows.Forms.Control.RecreateHandle
  - System.Windows.Forms.Control.RecreatingHandle
  - System.Windows.Forms.Control.RectangleToClient(System.Drawing.Rectangle)
  - System.Windows.Forms.Control.RectangleToScreen(System.Drawing.Rectangle)
  - System.Windows.Forms.Control.ReflectMessage(System.IntPtr,System.Windows.Forms.Message@)
  - System.Windows.Forms.Control.Region
  - System.Windows.Forms.Control.RegionChanged
  - System.Windows.Forms.Control.RenderRightToLeft
  - System.Windows.Forms.Control.ResetBindings
  - System.Windows.Forms.Control.ResetCursor
  - System.Windows.Forms.Control.ResetFont
  - System.Windows.Forms.Control.ResetImeMode
  - System.Windows.Forms.Control.ResetMouseEventArgs
  - System.Windows.Forms.Control.ResetRightToLeft
  - System.Windows.Forms.Control.ResetText
  - System.Windows.Forms.Control.Resize
  - System.Windows.Forms.Control.ResizeRedraw
  - System.Windows.Forms.Control.ResumeLayout
  - System.Windows.Forms.Control.ResumeLayout(System.Boolean)
  - System.Windows.Forms.Control.Right
  - System.Windows.Forms.Control.RightToLeftChanged
  - System.Windows.Forms.Control.RtlTranslateAlignment(System.Drawing.ContentAlignment)
  - System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.HorizontalAlignment)
  - System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.LeftRightAlignment)
  - System.Windows.Forms.Control.RtlTranslateContent(System.Drawing.ContentAlignment)
  - System.Windows.Forms.Control.RtlTranslateHorizontal(System.Windows.Forms.HorizontalAlignment)
  - System.Windows.Forms.Control.RtlTranslateLeftRight(System.Windows.Forms.LeftRightAlignment)
  - System.Windows.Forms.Control.Scale(System.Drawing.SizeF)
  - System.Windows.Forms.Control.Scale(System.Single)
  - System.Windows.Forms.Control.Scale(System.Single,System.Single)
  - System.Windows.Forms.Control.ScaleChildren
  - System.Windows.Forms.Control.ScaleCore(System.Single,System.Single)
  - System.Windows.Forms.Control.Select
  - System.Windows.Forms.Control.Select(System.Boolean,System.Boolean)
  - System.Windows.Forms.Control.SelectNextControl(System.Windows.Forms.Control,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  - System.Windows.Forms.Control.SendToBack
  - System.Windows.Forms.Control.SetAutoSizeMode(System.Windows.Forms.AutoSizeMode)
  - System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)
  - System.Windows.Forms.Control.SetClientSizeCore(System.Int32,System.Int32)
  - System.Windows.Forms.Control.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)
  - System.Windows.Forms.Control.SetTopLevel(System.Boolean)
  - System.Windows.Forms.Control.SetVisibleCore(System.Boolean)
  - System.Windows.Forms.Control.Show
  - System.Windows.Forms.Control.ShowFocusCues
  - System.Windows.Forms.Control.ShowKeyboardCues
  - System.Windows.Forms.Control.Site
  - System.Windows.Forms.Control.Size
  - System.Windows.Forms.Control.SizeChanged
  - System.Windows.Forms.Control.SizeFromClientSize(System.Drawing.Size)
  - System.Windows.Forms.Control.StyleChanged
  - System.Windows.Forms.Control.SuspendLayout
  - System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragDrop(System.Windows.Forms.DragEventArgs)
  - System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragEnter(System.Windows.Forms.DragEventArgs)
  - System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragLeave(System.EventArgs)
  - System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragOver(System.Windows.Forms.DragEventArgs)
  - System.Windows.Forms.Control.SystemColorsChanged
  - System.Windows.Forms.Control.TabIndex
  - System.Windows.Forms.Control.TabIndexChanged
  - System.Windows.Forms.Control.TabStop
  - System.Windows.Forms.Control.TabStopChanged
  - System.Windows.Forms.Control.Tag
  - System.Windows.Forms.Control.Top
  - System.Windows.Forms.Control.TopLevelControl
  - System.Windows.Forms.Control.Update
  - System.Windows.Forms.Control.UpdateBounds
  - System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Windows.Forms.Control.UpdateStyles
  - System.Windows.Forms.Control.UpdateZOrder
  - System.Windows.Forms.Control.UseWaitCursor
  - System.Windows.Forms.Control.Validated
  - System.Windows.Forms.Control.Validating
  - System.Windows.Forms.Control.Visible
  - System.Windows.Forms.Control.VisibleChanged
  - System.Windows.Forms.Control.Width
  - System.Windows.Forms.Control.WindowTarget
  - System.Windows.Forms.ListControl.DataManager
  - System.Windows.Forms.ListControl.DataSource
  - System.Windows.Forms.ListControl.DataSourceChanged
  - System.Windows.Forms.ListControl.DisplayMember
  - System.Windows.Forms.ListControl.DisplayMemberChanged
  - System.Windows.Forms.ListControl.FilterItemOnProperty(System.Object)
  - System.Windows.Forms.ListControl.FilterItemOnProperty(System.Object,System.String)
  - System.Windows.Forms.ListControl.Format
  - System.Windows.Forms.ListControl.FormatInfo
  - System.Windows.Forms.ListControl.FormatInfoChanged
  - System.Windows.Forms.ListControl.FormatString
  - System.Windows.Forms.ListControl.FormatStringChanged
  - System.Windows.Forms.ListControl.FormattingEnabled
  - System.Windows.Forms.ListControl.FormattingEnabledChanged
  - System.Windows.Forms.ListControl.GetItemText(System.Object)
  - System.Windows.Forms.ListControl.IsInputKey(System.Windows.Forms.Keys)
  - System.Windows.Forms.ListControl.OnBindingContextChanged(System.EventArgs)
  - System.Windows.Forms.ListControl.OnFormat(System.Windows.Forms.ListControlConvertEventArgs)
  - System.Windows.Forms.ListControl.OnFormatInfoChanged(System.EventArgs)
  - System.Windows.Forms.ListControl.OnFormatStringChanged(System.EventArgs)
  - System.Windows.Forms.ListControl.OnFormattingEnabledChanged(System.EventArgs)
  - System.Windows.Forms.ListControl.OnValueMemberChanged(System.EventArgs)
  - System.Windows.Forms.ListControl.SelectedValue
  - System.Windows.Forms.ListControl.SelectedValueChanged
  - System.Windows.Forms.ListControl.ValueMember
  - System.Windows.Forms.ListControl.ValueMemberChanged
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.#ctor
  id: '#ctor'
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: ListBox()
  nameWithType: ListBox.ListBox()
  fullName: System.Windows.Forms.ListBox.ListBox()
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "初始化的新執行個體<xref href=&quot;System.Windows.Forms.ListBox&quot;></xref>類別。"
  remarks: ''
  example:
  - "The following code example demonstrates how to create a <xref:System.Windows.Forms.ListBox> control that displays multiple items in columns and can have more than one item selected in the control's list. The code for the example adds 50 items to the <xref:System.Windows.Forms.ListBox> using the <xref:System.Windows.Forms.ListBox.ObjectCollection.Add%2A> method of the <xref:System.Windows.Forms.ListBox.ObjectCollection> class and then selects three items from the list using the <xref:System.Windows.Forms.ListBox.SetSelected%2A> method. The code then displays values from the <xref:System.Windows.Forms.ListBox.SelectedObjectCollection> collection, through the <xref:System.Windows.Forms.ListBox.SelectedItems%2A> property, and the <xref:System.Windows.Forms.ListBox.SelectedIndexCollection>, through the <xref:System.Windows.Forms.ListBox.SelectedIndices%2A> property. This example requires that the code is located in and called from a <xref:System.Windows.Forms.Form>.  \n  \n [!code-cpp[Classic ListBox Example#1](~/add/codesnippet/cpp/m-system.windows.forms.l_9_1.cpp)]\n [!code-cs[Classic ListBox Example#1](~/add/codesnippet/csharp/m-system.windows.forms.l_9_1.cs)]\n [!code-vb[Classic ListBox Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.l_9_1.vb)]"
  syntax:
    content: public ListBox ();
    parameters: []
  overload: System.Windows.Forms.ListBox.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.AddItemsCore(System.Object[])
  id: AddItemsCore(System.Object[])
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: AddItemsCore(Object[])
  nameWithType: ListBox.AddItemsCore(Object[])
  fullName: System.Windows.Forms.ListBox.AddItemsCore(Object[])
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "這個成員已過時，而且沒有任何取代。"
  syntax:
    content: protected virtual void AddItemsCore (object[] value);
    parameters:
    - id: value
      type: System.Object[]
      description: "物件的陣列。"
  overload: System.Windows.Forms.ListBox.AddItemsCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.AllowSelection
  id: AllowSelection
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: AllowSelection
  nameWithType: ListBox.AllowSelection
  fullName: System.Windows.Forms.ListBox.AllowSelection
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得值，指出是否<xref href=&quot;System.Windows.Forms.ListBox&quot;></xref>目前啟用清單項目的選取。"
  syntax:
    content: protected override bool AllowSelection { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <xref href=&quot;System.Windows.Forms.SelectionMode&quot;></xref> is not <xref href=&quot;System.Windows.Forms.SelectionMode&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.ListBox.AllowSelection*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.BackColor
  id: BackColor
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: BackColor
  nameWithType: ListBox.BackColor
  fullName: System.Windows.Forms.ListBox.BackColor
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得或設定控制項的背景色彩。"
  syntax:
    content: public override System.Drawing.Color BackColor { get; set; }
    return:
      type: System.Drawing.Color
      description: "A <xref href=&quot;System.Drawing.Color&quot;> </xref> ，代表控制項的背景色彩。 預設值是值<xref:System.Windows.Forms.Control.DefaultBackColor*>屬性。</xref:System.Windows.Forms.Control.DefaultBackColor*>"
  overload: System.Windows.Forms.ListBox.BackColor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.BackgroundImage
  id: BackgroundImage
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: BackgroundImage
  nameWithType: ListBox.BackgroundImage
  fullName: System.Windows.Forms.ListBox.BackgroundImage
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "這個屬性與這個類別無關。"
  remarks: "這個屬性與這個類別無關。"
  syntax:
    content: public override System.Drawing.Image BackgroundImage { get; set; }
    return:
      type: System.Drawing.Image
      description: "表單的背景影像。"
  overload: System.Windows.Forms.ListBox.BackgroundImage*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.BackgroundImageChanged
  id: BackgroundImageChanged
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: BackgroundImageChanged
  nameWithType: ListBox.BackgroundImageChanged
  fullName: System.Windows.Forms.ListBox.BackgroundImageChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "發生時<xref:System.Windows.Forms.ListBox.BackgroundImage*>屬性標籤變更。</xref:System.Windows.Forms.ListBox.BackgroundImage*>"
  remarks: "這個事件與這個類別無關。"
  syntax:
    content: public event EventHandler BackgroundImageChanged;
    return:
      type: System.EventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.BackgroundImageLayout
  id: BackgroundImageLayout
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: BackgroundImageLayout
  nameWithType: ListBox.BackgroundImageLayout
  fullName: System.Windows.Forms.ListBox.BackgroundImageLayout
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得或設定背景影像配置<xref href=&quot;System.Windows.Forms.ListBox&quot;></xref>中所定義<xref href=&quot;System.Windows.Forms.ImageLayout&quot;></xref>列舉型別。"
  remarks: "這個屬性與這個類別無關。"
  syntax:
    content: public override System.Windows.Forms.ImageLayout BackgroundImageLayout { get; set; }
    return:
      type: System.Windows.Forms.ImageLayout
      description: "其中一個值的<xref href=&quot;System.Windows.Forms.ImageLayout&quot;> </xref>。 The values are <xref uid=&quot;langword_csharp_Center&quot; name=&quot;Center&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_None&quot; name=&quot;None&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Stretch&quot; name=&quot;Stretch&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Tile&quot; name=&quot;Tile&quot; href=&quot;&quot;></xref>, or <xref uid=&quot;langword_csharp_Zoom&quot; name=&quot;Zoom&quot; href=&quot;&quot;></xref>. <xref uid=&quot;langword_csharp_Center&quot; name=&quot;Center&quot; href=&quot;&quot;></xref>預設值。"
  overload: System.Windows.Forms.ListBox.BackgroundImageLayout*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "指定的列舉值不存在。"
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.BackgroundImageLayoutChanged
  id: BackgroundImageLayoutChanged
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: BackgroundImageLayoutChanged
  nameWithType: ListBox.BackgroundImageLayoutChanged
  fullName: System.Windows.Forms.ListBox.BackgroundImageLayoutChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "發生時<xref:System.Windows.Forms.ListBox.BackgroundImageLayout*>屬性變更。</xref:System.Windows.Forms.ListBox.BackgroundImageLayout*>"
  remarks: "這個事件與這個類別無關。"
  syntax:
    content: public event EventHandler BackgroundImageLayoutChanged;
    return:
      type: System.EventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.BeginUpdate
  id: BeginUpdate
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: BeginUpdate()
  nameWithType: ListBox.BeginUpdate()
  fullName: System.Windows.Forms.ListBox.BeginUpdate()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "加入項目時可維護效能<xref href=&quot;System.Windows.Forms.ListBox&quot;></xref>藉由防止圖形直到控制項一次一個<xref:System.Windows.Forms.ListBox.EndUpdate*>方法呼叫。</xref:System.Windows.Forms.ListBox.EndUpdate*>"
  remarks: "新增多個項目，最好<xref:System.Windows.Forms.ListBox>是使用<xref:System.Windows.Forms.ListBox.ObjectCollection.AddRange%2A>方法<xref:System.Windows.Forms.ListBox.ObjectCollection>類別 (透過<xref:System.Windows.Forms.ListBox.Items%2A>屬性<xref:System.Windows.Forms.ListBox>)。</xref:System.Windows.Forms.ListBox> </xref:System.Windows.Forms.ListBox.Items%2A> </xref:System.Windows.Forms.ListBox.ObjectCollection> </xref:System.Windows.Forms.ListBox.ObjectCollection.AddRange%2A> </xref:System.Windows.Forms.ListBox> 這可讓您將項目陣列加入至單一作業中的清單。 不過，如果您想要加入的項目一於使用<xref:System.Windows.Forms.ListBox.ObjectCollection.Add%2A>方法<xref:System.Windows.Forms.ListBox.ObjectCollection>類別，您可以使用 BeginUpdate 方法防止重繪控制項<xref:System.Windows.Forms.ListBox>每個項目新增至清單的時間。</xref:System.Windows.Forms.ListBox> </xref:System.Windows.Forms.ListBox.ObjectCollection> </xref:System.Windows.Forms.ListBox.ObjectCollection.Add%2A> 完成的工作項目加入清單後，請呼叫<xref:System.Windows.Forms.ListBox.EndUpdate%2A>方法，以啟用<xref:System.Windows.Forms.ListBox>重繪。</xref:System.Windows.Forms.ListBox> </xref:System.Windows.Forms.ListBox.EndUpdate%2A> 加入項目可以防止這種 flickered 繪圖的<xref:System.Windows.Forms.ListBox>當正在大量項目加入至清單。</xref:System.Windows.Forms.ListBox>"
  example:
  - "The following code example uses the BeginUpdate and <xref:System.Windows.Forms.ListBox.EndUpdate%2A> methods while adding five thousand items to a <xref:System.Windows.Forms.ListBox>. This example requires that a <xref:System.Windows.Forms.ListBox> control, named `listBox1`, has been added to a <xref:System.Windows.Forms.Form> and that this method is placed within the form and called from it.  \n  \n [!code-cs[Classic ListBox.BeginUpdate Example#1](~/add/codesnippet/csharp/m-system.windows.forms.l_14_1.cs)]\n [!code-cpp[Classic ListBox.BeginUpdate Example#1](~/add/codesnippet/cpp/m-system.windows.forms.l_14_1.cpp)]\n [!code-vb[Classic ListBox.BeginUpdate Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.l_14_1.vb)]"
  syntax:
    content: public void BeginUpdate ();
    parameters: []
  overload: System.Windows.Forms.ListBox.BeginUpdate*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.BorderStyle
  id: BorderStyle
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: BorderStyle
  nameWithType: ListBox.BorderStyle
  fullName: System.Windows.Forms.ListBox.BorderStyle
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得或設定繪製周圍的框線類型<xref href=&quot;System.Windows.Forms.ListBox&quot;> </xref>。"
  syntax:
    content: public System.Windows.Forms.BorderStyle BorderStyle { get; set; }
    return:
      type: System.Windows.Forms.BorderStyle
      description: "其中一個<xref href=&quot;System.Windows.Forms.BorderStyle&quot;></xref>值。 預設值是<xref href=&quot;System.Windows.Forms.BorderStyle&quot;> </xref>。"
  overload: System.Windows.Forms.ListBox.BorderStyle*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "值不是其中一個<xref href=&quot;System.Windows.Forms.BorderStyle&quot;></xref>值。"
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.ClearSelected
  id: ClearSelected
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: ClearSelected()
  nameWithType: ListBox.ClearSelected()
  fullName: System.Windows.Forms.ListBox.ClearSelected()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "中的所有項目會取消選取<xref href=&quot;System.Windows.Forms.ListBox&quot;> </xref>。"
  remarks: "呼叫這個方法相當於設定<xref:System.Windows.Forms.ListBox.SelectedIndex%2A>為負一 (-1) 的屬性。</xref:System.Windows.Forms.ListBox.SelectedIndex%2A> 若要快速地取消選取清單中的所有項目，您可以使用這個方法。"
  example:
  - "The following code example demonstrates how to use the <xref:System.Windows.Forms.ListBox.SelectedIndex%2A> property with the <xref:System.Windows.Forms.ListBox.TopIndex%2A> property to move the currently selected item to the top of the list of items in the display area of the <xref:System.Windows.Forms.ListBox>. The example further demonstrates how to remove items using the <xref:System.Windows.Forms.ListBox.ObjectCollection.RemoveAt%2A> method of the <xref:System.Windows.Forms.ListBox.ObjectCollection?displayProperty=fullName> class, and how to clear all item selection using the ClearSelected method. The code first moves the currently selected item in the <xref:System.Windows.Forms.ListBox> to the top of the list. The code then removes all items before the currently selected item and clears all selections in the <xref:System.Windows.Forms.ListBox>. This example requires that a <xref:System.Windows.Forms.ListBox> containing items is added to a form and that an item is currently selected in the <xref:System.Windows.Forms.ListBox>.  \n  \n [!code-cpp[ListBox.SelectedIndex#1](~/add/codesnippet/cpp/m-system.windows.forms.l_12_1.cpp)]\n [!code-cs[ListBox.SelectedIndex#1](~/add/codesnippet/csharp/m-system.windows.forms.l_12_1.cs)]\n [!code-vb[ListBox.SelectedIndex#1](~/add/codesnippet/visualbasic/m-system.windows.forms.l_12_1.vb)]"
  syntax:
    content: public void ClearSelected ();
    parameters: []
  overload: System.Windows.Forms.ListBox.ClearSelected*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.Click
  id: Click
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: Click
  nameWithType: ListBox.Click
  fullName: System.Windows.Forms.ListBox.Click
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "發生時<xref href=&quot;System.Windows.Forms.ListBox&quot;></xref>按一下控制項時。"
  syntax:
    content: public event EventHandler Click;
    return:
      type: System.EventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.ColumnWidth
  id: ColumnWidth
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: ColumnWidth
  nameWithType: ListBox.ColumnWidth
  fullName: System.Windows.Forms.ListBox.ColumnWidth
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得或設定在多重資料行中的資料行的寬度<xref href=&quot;System.Windows.Forms.ListBox&quot;> </xref>。"
  remarks: "如果您將值設定為零 (0) 時，預設寬度被指派給每個資料行。 如果<xref:System.Windows.Forms.ListBox>是多重資料行<xref:System.Windows.Forms.ListBox>，這個屬性傳回的清單中的每個資料行的目前寬度。</xref:System.Windows.Forms.ListBox> </xref:System.Windows.Forms.ListBox> 您可以使用這個屬性，以確保每個資料行中的多重資料行<xref:System.Windows.Forms.ListBox>可正確顯示其項目。</xref:System.Windows.Forms.ListBox>"
  example:
  - "The following code example demonstrates a simple two-column <xref:System.Windows.Forms.ListBox>.  \n  \n [!code-cs[System.Windows.Forms.ListBox.MultiColumn#1](~/add/codesnippet/csharp/p-system.windows.forms.l_20_1.cs)]\n [!code-vb[System.Windows.Forms.ListBox.MultiColumn#1](~/add/codesnippet/visualbasic/p-system.windows.forms.l_20_1.vb)]"
  syntax:
    content: public int ColumnWidth { get; set; }
    return:
      type: System.Int32
      description: "寬度 （以像素的每個控制項中的資料行）。 預設值為 0。"
  overload: System.Windows.Forms.ListBox.ColumnWidth*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "小於零的值指派給屬性。"
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.CreateItemCollection
  id: CreateItemCollection
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: CreateItemCollection()
  nameWithType: ListBox.CreateItemCollection()
  fullName: System.Windows.Forms.ListBox.CreateItemCollection()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "建立項目集合的新執行個體。"
  syntax:
    content: protected virtual System.Windows.Forms.ListBox.ObjectCollection CreateItemCollection ();
    parameters: []
    return:
      type: System.Windows.Forms.ListBox.ObjectCollection
      description: "A<xref:System.Windows.Forms.ListBox.ObjectCollection>表示新項目集合。</xref:System.Windows.Forms.ListBox.ObjectCollection>"
  overload: System.Windows.Forms.ListBox.CreateItemCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.CreateParams
  id: CreateParams
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: CreateParams
  nameWithType: ListBox.CreateParams
  fullName: System.Windows.Forms.ListBox.CreateParams
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "建立控制代碼時，取得必要的建立參數。"
  syntax:
    content: protected override System.Windows.Forms.CreateParams CreateParams { get; }
    return:
      type: System.Windows.Forms.CreateParams
      description: "A <xref href=&quot;System.Windows.Forms.CreateParams&quot;> </xref>包含必要的建立參數時在建立控制項之控制代碼。"
  overload: System.Windows.Forms.ListBox.CreateParams*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.CustomTabOffsets
  id: CustomTabOffsets
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: CustomTabOffsets
  nameWithType: ListBox.CustomTabOffsets
  fullName: System.Windows.Forms.ListBox.CustomTabOffsets
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得索引標籤中的項目之間的寬度<xref href=&quot;System.Windows.Forms.ListBox&quot;> </xref>。"
  remarks: "整數陣列 索引標籤中含有空格遞增的順序。"
  syntax:
    content: public System.Windows.Forms.ListBox.IntegerCollection CustomTabOffsets { get; }
    return:
      type: System.Windows.Forms.ListBox.IntegerCollection
      description: "表示定位點寬度的整數集合。"
  overload: System.Windows.Forms.ListBox.CustomTabOffsets*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.DefaultItemHeight
  id: DefaultItemHeight
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: DefaultItemHeight
  nameWithType: ListBox.DefaultItemHeight
  fullName: System.Windows.Forms.ListBox.DefaultItemHeight
  type: Field
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "指定的預設項目高度描繪<xref href=&quot;System.Windows.Forms.ListBox&quot;> </xref>。"
  syntax:
    content: public const int DefaultItemHeight = 13;
    return:
      type: System.Int32
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.DefaultSize
  id: DefaultSize
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: DefaultSize
  nameWithType: ListBox.DefaultSize
  fullName: System.Windows.Forms.ListBox.DefaultSize
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得控制項的預設大小。"
  syntax:
    content: protected override System.Drawing.Size DefaultSize { get; }
    return:
      type: System.Drawing.Size
      description: "預設值<xref href=&quot;System.Drawing.Size&quot;></xref>的控制項。"
  overload: System.Windows.Forms.ListBox.DefaultSize*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.DrawItem
  id: DrawItem
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: DrawItem
  nameWithType: ListBox.DrawItem
  fullName: System.Windows.Forms.ListBox.DrawItem
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "發生於主控描繪的視覺外觀<xref href=&quot;System.Windows.Forms.ListBox&quot;></xref>變更。"
  remarks: "此事件是由主控描繪<xref:System.Windows.Forms.ListBox>.</xref:System.Windows.Forms.ListBox> 此事件，才引發的時機<xref:System.Windows.Forms.ListBox.DrawMode%2A>屬性設定為`DrawMode.OwnerDrawFixed`或`DrawMode.OwnerDrawVariable`。</xref:System.Windows.Forms.ListBox.DrawMode%2A> 您可以使用這個事件來執行在<xref:System.Windows.Forms.ListBox>.</xref:System.Windows.Forms.ListBox>繪製項目所需的工作 如果您有可變動大小的項目 (當<xref:System.Windows.Forms.ListBox.DrawMode%2A>屬性設定為`DrawMode.OwnerDrawVariable`)，繪製項目之前,<xref:System.Windows.Forms.ListBox.MeasureItem>就會引發事件。</xref:System.Windows.Forms.ListBox.MeasureItem> </xref:System.Windows.Forms.ListBox.DrawMode%2A> 您可以建立事件處理常式<xref:System.Windows.Forms.ListBox.MeasureItem>事件，以指定您所要繪製在 DrawItem 事件的事件處理常式項目的大小。</xref:System.Windows.Forms.ListBox.MeasureItem>       如需處理事件的詳細資訊，請參閱[處理和引發事件](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following code example demonstrates how to create owner-drawn <xref:System.Windows.Forms.ListBox> items. The code uses the <xref:System.Windows.Forms.ListBox.DrawMode%2A> property to specify that the items drawn are fixed sized and the DrawItem event to perform the drawing of each item into the <xref:System.Windows.Forms.ListBox>. The example code uses the properties and methods of the <xref:System.Windows.Forms.DrawItemEventArgs> class passed as a parameter to the event handler to draw the items. This example requires that a <xref:System.Windows.Forms.ListBox> control called `listBox1` has been added to a form and that the DrawItem event is handled by the event handler defined in the example code. The example also requires that items have been added to the <xref:System.Windows.Forms.ListBox> with the text of \"Apple\", \"Orange\", and \"Plum\" in that order.  \n  \n [!code-vb[ListBox.DrawMode#1](~/add/codesnippet/visualbasic/e-system.windows.forms.l_2_1.vb)]\n [!code-cs[ListBox.DrawMode#1](~/add/codesnippet/csharp/e-system.windows.forms.l_2_1.cs)]"
  syntax:
    content: public event System.Windows.Forms.DrawItemEventHandler DrawItem;
    return:
      type: System.Windows.Forms.DrawItemEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.DrawMode
  id: DrawMode
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: DrawMode
  nameWithType: ListBox.DrawMode
  fullName: System.Windows.Forms.ListBox.DrawMode
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得或設定控制項的繪圖模式。"
  remarks: ''
  example:
  - "The following code example demonstrates how to create owner-drawn <xref:System.Windows.Forms.ListBox> items. The code uses the DrawMode property to specify that the items drawn are fixed sized and the <xref:System.Windows.Forms.ListBox.DrawItem> event to perform the drawing of each item into the <xref:System.Windows.Forms.ListBox>. The example code uses the properties and methods of the <xref:System.Windows.Forms.DrawItemEventArgs> class passed as a parameter to the event handler to draw the items. This example requires that a <xref:System.Windows.Forms.ListBox> control called `listBox1` has been added to a form and that the <xref:System.Windows.Forms.ListBox.DrawItem> event is handled by the event handler defined in the example code. The example also requires that items have been added to the <xref:System.Windows.Forms.ListBox> with the text of \"Apple\", \"Orange\", and \"Plum\" in that order.  \n  \n [!code-vb[ListBox.DrawMode#1](~/add/codesnippet/visualbasic/p-system.windows.forms.l_42_1.vb)]\n [!code-cs[ListBox.DrawMode#1](~/add/codesnippet/csharp/p-system.windows.forms.l_42_1.cs)]"
  syntax:
    content: public virtual System.Windows.Forms.DrawMode DrawMode { get; set; }
    return:
      type: System.Windows.Forms.DrawMode
      description: "其中一個<xref href=&quot;System.Windows.Forms.DrawMode&quot;></xref>代表繪製控制項的項目模式的值。 預設值是<xref uid=&quot;langword_csharp_DrawMode.Normal&quot; name=&quot;DrawMode.Normal&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Forms.ListBox.DrawMode*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "指派給屬性的值不是成員的<xref href=&quot;System.Windows.Forms.DrawMode&quot;></xref>列舉型別。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "多重資料行<xref href=&quot;System.Windows.Forms.ListBox&quot;></xref>不能有可變大小的高度。"
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.EndUpdate
  id: EndUpdate
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: EndUpdate()
  nameWithType: ListBox.EndUpdate()
  fullName: System.Windows.Forms.ListBox.EndUpdate()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "繼續繪製<xref href=&quot;System.Windows.Forms.ListBox&quot;></xref>控制暫停繪製之後<xref:System.Windows.Forms.ListBox.BeginUpdate*>方法。</xref:System.Windows.Forms.ListBox.BeginUpdate*>"
  remarks: "將項目加入，最好<xref:System.Windows.Forms.ListBox>是使用<xref:System.Windows.Forms.ListBox.ObjectCollection.AddRange%2A>方法<xref:System.Windows.Forms.ListBox.ObjectCollection>類別 (透過<xref:System.Windows.Forms.ListBox.Items%2A>屬性<xref:System.Windows.Forms.ListBox>)。</xref:System.Windows.Forms.ListBox> </xref:System.Windows.Forms.ListBox.Items%2A> </xref:System.Windows.Forms.ListBox.ObjectCollection> </xref:System.Windows.Forms.ListBox.ObjectCollection.AddRange%2A> </xref:System.Windows.Forms.ListBox> 這可讓您一次加入清單的項目陣列。 不過，如果您想要加入的項目一於使用<xref:System.Windows.Forms.ListBox.ObjectCollection.Add%2A>方法<xref:System.Windows.Forms.ListBox.ObjectCollection>類別，您可以使用<xref:System.Windows.Forms.ListBox.BeginUpdate%2A>方法，以防止重繪控制項<xref:System.Windows.Forms.ListBox>每個項目新增至清單的時間。</xref:System.Windows.Forms.ListBox> </xref:System.Windows.Forms.ListBox.BeginUpdate%2A> </xref:System.Windows.Forms.ListBox.ObjectCollection> </xref:System.Windows.Forms.ListBox.ObjectCollection.Add%2A> 完成的工作項目加入清單後，請呼叫 EndUpdate 方法，以啟用<xref:System.Windows.Forms.ListBox>重繪。</xref:System.Windows.Forms.ListBox> 加入項目可以防止這種 flickered 繪圖的<xref:System.Windows.Forms.ListBox>當正在大量項目加入至清單。</xref:System.Windows.Forms.ListBox>"
  example:
  - "The following code example uses the <xref:System.Windows.Forms.ListBox.BeginUpdate%2A> and EndUpdate methods while adding five thousand items to a <xref:System.Windows.Forms.ListBox>. This example requires that a <xref:System.Windows.Forms.ListBox> control, named `listBox1`, has been added to a <xref:System.Windows.Forms.Form> and that this method is placed within the form and called from it.  \n  \n [!code-cs[Classic ListBox.BeginUpdate Example#1](~/add/codesnippet/csharp/m-system.windows.forms.l_0_1.cs)]\n [!code-cpp[Classic ListBox.BeginUpdate Example#1](~/add/codesnippet/cpp/m-system.windows.forms.l_0_1.cpp)]\n [!code-vb[Classic ListBox.BeginUpdate Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.l_0_1.vb)]"
  syntax:
    content: public void EndUpdate ();
    parameters: []
  overload: System.Windows.Forms.ListBox.EndUpdate*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.FindString(System.String)
  id: FindString(System.String)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: FindString(String)
  nameWithType: ListBox.FindString(String)
  fullName: System.Windows.Forms.ListBox.FindString(String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "尋找第一個項目中的<xref href=&quot;System.Windows.Forms.ListBox&quot;></xref>以指定字串開頭。"
  remarks: "這個方法所執行的搜尋不區分大小寫。 搜尋會尋找的文字部分符合指定的搜尋字串參數， `s`。 您可以使用這個方法來搜尋符合指定之字串的第一個項目。 然後，您可以執行工作，例如移除包含使用的搜尋文字的項目<xref:System.Windows.Forms.ListBox.ObjectCollection.Remove%2A>方法或變更項目的文字。</xref:System.Windows.Forms.ListBox.ObjectCollection.Remove%2A> 一旦找到指定的文字，如果您想要搜尋的文字<xref:System.Windows.Forms.ListBox>，您可以使用所提供的參數來指定<xref:System.Windows.Forms.ListBox>.</xref:System.Windows.Forms.ListBox>內的起始索引 FindString 方法的版本</xref:System.Windows.Forms.ListBox>中的其他執行個體 如果您想要執行精確的字詞相符而不是在部分符合的搜尋，使用<xref:System.Windows.Forms.ListBox.FindStringExact%2A>方法。</xref:System.Windows.Forms.ListBox.FindStringExact%2A>"
  example:
  - "The following code example demonstrates how to use the FindString method to search for the first instance of a string in a <xref:System.Windows.Forms.ListBox>. If no items are found that match the search string FindString returns a -1 value and the example displays a <xref:System.Windows.Forms.MessageBox>. If an item is found that matches the search text, the example uses the <xref:System.Windows.Forms.ListBox.SetSelected%2A> method to select the item in the <xref:System.Windows.Forms.ListBox>.  \n  \n [!code-cs[ListBox.FindString2#1](~/add/codesnippet/csharp/m-system.windows.forms.l_13_1.cs)]\n [!code-cpp[ListBox.FindString2#1](~/add/codesnippet/cpp/m-system.windows.forms.l_13_1.cpp)]\n [!code-vb[ListBox.FindString2#1](~/add/codesnippet/visualbasic/m-system.windows.forms.l_13_1.vb)]"
  syntax:
    content: public int FindString (string s);
    parameters:
    - id: s
      type: System.String
      description: "要搜尋的文字。"
    return:
      type: System.Int32
      description: "找到的第一個項目以零為起始的索引傳回<xref uid=&quot;langword_csharp_ListBox.NoMatches&quot; name=&quot;ListBox.NoMatches&quot; href=&quot;&quot;></xref>如果找到相符項目。"
  overload: System.Windows.Forms.ListBox.FindString*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "值<code> s </code>參數小於-1 或大於或等於項目計數。"
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.FindString(System.String,System.Int32)
  id: FindString(System.String,System.Int32)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: FindString(String,Int32)
  nameWithType: ListBox.FindString(String,Int32)
  fullName: System.Windows.Forms.ListBox.FindString(String,Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "尋找第一個項目中的<xref href=&quot;System.Windows.Forms.ListBox&quot;></xref>以指定字串開頭。 搜尋開始於指定的起始索引。"
  remarks: "這個方法所執行的搜尋不區分大小寫。 搜尋會尋找的文字部分符合指定的搜尋字串參數， `s`。 您可以使用這個方法來搜尋符合指定之字串的項目<xref:System.Windows.Forms.ListBox>。</xref:System.Windows.Forms.ListBox>清單內指定的起始索引位置的第一個項目 然後，您可以執行工作，例如移除包含使用的搜尋文字的項目<xref:System.Windows.Forms.ListBox.ObjectCollection.Remove%2A>方法或變更項目的文字。</xref:System.Windows.Forms.ListBox.ObjectCollection.Remove%2A> 呼叫使用這個方法不會指定起始索引版本之後，通常使用這個方法。 一旦在清單中找到的初始項目，這個方法通常用來進一步搜尋文字的執行個體指定尋找中的索引位置`startIndex`參數搜尋文字的第一個找到的執行個體後的項目。 如果您想要執行精確的字詞相符而不是在部分符合的搜尋，使用<xref:System.Windows.Forms.ListBox.FindStringExact%2A>方法。</xref:System.Windows.Forms.ListBox.FindStringExact%2A>      > [!NOTE] > 當搜尋到了底部<xref:System.Windows.Forms.ListBox>，它會繼續從頂端搜尋<xref:System.Windows.Forms.ListBox>回所指定的項目`startIndex`參數。</xref:System.Windows.Forms.ListBox> </xref:System.Windows.Forms.ListBox>"
  example:
  - "The following code example demonstrates how to use the <xref:System.Windows.Forms.ListBox.FindString%2A> method to search for all instances of the search text in the items of the <xref:System.Windows.Forms.ListBox>. The example uses the version of the <xref:System.Windows.Forms.ListBox.FindString%2A> method that enables you to specify a starting search index from which to do a continual search of all items in the <xref:System.Windows.Forms.ListBox>. The example also demonstrates how to determine when the <xref:System.Windows.Forms.ListBox.FindString%2A> method begins searching from the top of the list after it reaches the bottom of the list of items to prevent a recursive search. Once items are found in the <xref:System.Windows.Forms.ListBox>, they are selected using the <xref:System.Windows.Forms.ListBox.SetSelected%2A> method.  \n  \n [!code-cpp[ListBox.FindString#1](~/add/codesnippet/cpp/m-system.windows.forms.l_10_1.cpp)]\n [!code-cs[ListBox.FindString#1](~/add/codesnippet/csharp/m-system.windows.forms.l_10_1.cs)]\n [!code-vb[ListBox.FindString#1](~/add/codesnippet/visualbasic/m-system.windows.forms.l_10_1.vb)]"
  syntax:
    content: public int FindString (string s, int startIndex);
    parameters:
    - id: s
      type: System.String
      description: "要搜尋的文字。"
    - id: startIndex
      type: System.Int32
      description: "要搜尋的第一個項目之前，項目以零為起始的索引。 設定為負一 (-1) 若要搜尋的起點的控制項。"
    return:
      type: System.Int32
      description: "找到的第一個項目以零為起始的索引傳回<xref uid=&quot;langword_csharp_ListBox.NoMatches&quot; name=&quot;ListBox.NoMatches&quot; href=&quot;&quot;></xref>如果找到相符項目。"
  overload: System.Windows.Forms.ListBox.FindString*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code> startIndex </code>參數小於零或大於或等於值之<xref:System.Windows.Forms.ListBox.ObjectCollection.Count*>屬性的<xref:System.Windows.Forms.ListBox.ObjectCollection>類別。</xref:System.Windows.Forms.ListBox.ObjectCollection> </xref:System.Windows.Forms.ListBox.ObjectCollection.Count*>"
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.FindStringExact(System.String)
  id: FindStringExact(System.String)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: FindStringExact(String)
  nameWithType: ListBox.FindStringExact(String)
  fullName: System.Windows.Forms.ListBox.FindStringExact(String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "尋找第一個項目中的<xref href=&quot;System.Windows.Forms.ListBox&quot;></xref>完全符合指定的字串。"
  remarks: "這個方法所執行的搜尋不區分大小寫。 搜尋會尋找完全相符搜尋字串參數中指定的單字`s`。 您可以使用這個方法來搜尋符合指定之字串的第一個項目。 然後，您可以執行工作，例如移除包含使用的搜尋文字的項目<xref:System.Windows.Forms.ListBox.ObjectCollection.Remove%2A>方法或變更項目的文字。</xref:System.Windows.Forms.ListBox.ObjectCollection.Remove%2A> 一旦找到指定的文字，如果您想要搜尋的文字<xref:System.Windows.Forms.ListBox>，您可以使用所提供的參數來指定<xref:System.Windows.Forms.ListBox>.</xref:System.Windows.Forms.ListBox>內的起始索引 FindStringExact 方法的版本</xref:System.Windows.Forms.ListBox>中的其他執行個體 如果您想要執行部分文字搜尋，而不是正確的字相符項目，使用<xref:System.Windows.Forms.ListBox.FindString%2A>方法。</xref:System.Windows.Forms.ListBox.FindString%2A>"
  example:
  - "The following code example demonstrates how to use the FindStringExact method to search a <xref:System.Windows.Forms.ListBox> control for an item that exactly matches a specified string. If no items are found that match the search string, FindStringExact returns a -1 value and the example displays a <xref:System.Windows.Forms.MessageBox>. If an item is found that matches the search text, the example uses the <xref:System.Windows.Forms.ListBox.SetSelected%2A> method to select the item in the <xref:System.Windows.Forms.ListBox>.  \n  \n [!code-vb[ListBox.FindStringExact#1](~/add/codesnippet/visualbasic/m-system.windows.forms.l_16_1.vb)]\n [!code-cs[ListBox.FindStringExact#1](~/add/codesnippet/csharp/m-system.windows.forms.l_16_1.cs)]\n [!code-cpp[ListBox.FindStringExact#1](~/add/codesnippet/cpp/m-system.windows.forms.l_16_1.cpp)]"
  syntax:
    content: public int FindStringExact (string s);
    parameters:
    - id: s
      type: System.String
      description: "要搜尋的文字。"
    return:
      type: System.Int32
      description: "找到的第一個項目以零為起始的索引傳回<xref uid=&quot;langword_csharp_ListBox.NoMatches&quot; name=&quot;ListBox.NoMatches&quot; href=&quot;&quot;></xref>如果找到相符項目。"
  overload: System.Windows.Forms.ListBox.FindStringExact*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.FindStringExact(System.String,System.Int32)
  id: FindStringExact(System.String,System.Int32)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: FindStringExact(String,Int32)
  nameWithType: ListBox.FindStringExact(String,Int32)
  fullName: System.Windows.Forms.ListBox.FindStringExact(String,Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "尋找第一個項目中的<xref href=&quot;System.Windows.Forms.ListBox&quot;></xref>完全符合指定的字串。 搜尋開始於指定的起始索引。"
  remarks: "這個方法所執行的搜尋不區分大小寫。 搜尋會尋找完全符合指定的搜尋字串參數的文字`s`。 您可以使用這個方法來搜尋符合指定之字串的項目<xref:System.Windows.Forms.ListBox>。</xref:System.Windows.Forms.ListBox>清單內指定的起始索引位置的第一個項目 然後，您可以執行工作，例如刪除包含搜尋文字使用的項目<xref:System.Windows.Forms.ListBox.ObjectCollection.Remove%2A>方法或變更項目的文字。</xref:System.Windows.Forms.ListBox.ObjectCollection.Remove%2A> 呼叫使用這個方法不會指定起始索引版本之後，通常使用這個方法。 一旦在清單中找到的初始項目，這個方法通常用來進一步搜尋文字的執行個體指定尋找中的索引位置`startIndex`參數搜尋文字的第一個找到的執行個體後的項目。 如果您想要執行部分文字搜尋，而不是正確的字相符項目，使用<xref:System.Windows.Forms.ListBox.FindString%2A>方法。</xref:System.Windows.Forms.ListBox.FindString%2A>      > [!NOTE] > 當搜尋到了底部<xref:System.Windows.Forms.ListBox>，它會繼續從頂端搜尋<xref:System.Windows.Forms.ListBox>回所指定的項目`startIndex`參數。</xref:System.Windows.Forms.ListBox> </xref:System.Windows.Forms.ListBox>"
  example:
  - "The following code example demonstrates how to use the <xref:System.Windows.Forms.ListBox.FindStringExact%2A> method to search for all items in a <xref:System.Windows.Forms.ListBox> that exactly match the specified search text. The example uses the version of the <xref:System.Windows.Forms.ListBox.FindStringExact%2A> method that enables you to specify a starting search index from which to do a continual search of all items in the <xref:System.Windows.Forms.ListBox>. The example also demonstrates how to determine when the <xref:System.Windows.Forms.ListBox.FindStringExact%2A> method begins searching from the top of the list after it reaches the bottom of the list of items, to prevent a recursive search. Once items are found in the <xref:System.Windows.Forms.ListBox>, they are selected using the <xref:System.Windows.Forms.ListBox.SetSelected%2A> method.  \n  \n [!code-cs[ListBox.FindStringExact2#1](~/add/codesnippet/csharp/m-system.windows.forms.l_5_1.cs)]\n [!code-cpp[ListBox.FindStringExact2#1](~/add/codesnippet/cpp/m-system.windows.forms.l_5_1.cpp)]\n [!code-vb[ListBox.FindStringExact2#1](~/add/codesnippet/visualbasic/m-system.windows.forms.l_5_1.vb)]"
  syntax:
    content: public int FindStringExact (string s, int startIndex);
    parameters:
    - id: s
      type: System.String
      description: "要搜尋的文字。"
    - id: startIndex
      type: System.Int32
      description: "要搜尋的第一個項目之前，項目以零為起始的索引。 設定為負一 (-1) 若要搜尋的起點的控制項。"
    return:
      type: System.Int32
      description: "找到的第一個項目以零為起始的索引傳回<xref uid=&quot;langword_csharp_ListBox.NoMatches&quot; name=&quot;ListBox.NoMatches&quot; href=&quot;&quot;></xref>如果找到相符項目。"
  overload: System.Windows.Forms.ListBox.FindStringExact*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code> startIndex </code>參數小於零或大於或等於值之<xref:System.Windows.Forms.ListBox.ObjectCollection.Count*>屬性的<xref:System.Windows.Forms.ListBox.ObjectCollection>類別。</xref:System.Windows.Forms.ListBox.ObjectCollection> </xref:System.Windows.Forms.ListBox.ObjectCollection.Count*>"
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.Font
  id: Font
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: Font
  nameWithType: ListBox.Font
  fullName: System.Windows.Forms.ListBox.Font
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得或設定控制項所顯示之文字字型。"
  syntax:
    content: public override System.Drawing.Font Font { get; set; }
    return:
      type: System.Drawing.Font
      description: "<xref href=&quot;System.Drawing.Font&quot;> </xref>来套用至控制項所顯示的文字。 預設值是值<xref:System.Windows.Forms.Control.DefaultFont*>屬性。</xref:System.Windows.Forms.Control.DefaultFont*>"
  overload: System.Windows.Forms.ListBox.Font*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.ForeColor
  id: ForeColor
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: ForeColor
  nameWithType: ListBox.ForeColor
  fullName: System.Windows.Forms.ListBox.ForeColor
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得或設定控制項的前景色彩。"
  syntax:
    content: public override System.Drawing.Color ForeColor { get; set; }
    return:
      type: System.Drawing.Color
      description: "前景<xref href=&quot;System.Drawing.Color&quot;></xref>的控制項。 預設值是值<xref:System.Windows.Forms.Control.DefaultForeColor*>屬性。</xref:System.Windows.Forms.Control.DefaultForeColor*>"
  overload: System.Windows.Forms.ListBox.ForeColor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.GetItemHeight(System.Int32)
  id: GetItemHeight(System.Int32)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: GetItemHeight(Int32)
  nameWithType: ListBox.GetItemHeight(Int32)
  fullName: System.Windows.Forms.ListBox.GetItemHeight(Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "傳回中的項目高度<xref href=&quot;System.Windows.Forms.ListBox&quot;> </xref>。"
  remarks: "如果<xref:System.Windows.Forms.ListBox.DrawMode%2A>屬性未設定為`DrawMode.OwnerDrawVariable`，因為在標準的所有項目，則會忽略索引參數的值<xref:System.Windows.Forms.ListBox>大小都一樣。</xref:System.Windows.Forms.ListBox> </xref:System.Windows.Forms.ListBox.DrawMode%2A> 您可以使用這個屬性，當您使用主控描繪<xref:System.Windows.Forms.ListBox>判斷<xref:System.Windows.Forms.ListBox>.</xref:System.Windows.Forms.ListBox>內的任何項目的大小</xref:System.Windows.Forms.ListBox>"
  syntax:
    content: public int GetItemHeight (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "要傳回其高度的項目以零為起始的索引。"
    return:
      type: System.Int32
      description: "高度 （像素為單位指定的項目）。"
  overload: System.Windows.Forms.ListBox.GetItemHeight*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "指定的值<code> index </code>參數小於零或大於項目計數。"
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.GetItemRectangle(System.Int32)
  id: GetItemRectangle(System.Int32)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: GetItemRectangle(Int32)
  nameWithType: ListBox.GetItemRectangle(Int32)
  fullName: System.Windows.Forms.ListBox.GetItemRectangle(Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "傳回的項目之周框<xref href=&quot;System.Windows.Forms.ListBox&quot;> </xref>。"
  remarks: "如果在指定的項目`index`看不到參數，這個方法所傳回的矩形將控制項的可見部分之外。 您可以使用這個方法來決定的大小和位置的清單內的項目。 若要取得的項目高度，特別是可變高度擁有者繪製的清單項目，您可以使用<xref:System.Windows.Forms.ListBox.GetItemHeight%2A>方法。</xref:System.Windows.Forms.ListBox.GetItemHeight%2A>"
  syntax:
    content: public System.Drawing.Rectangle GetItemRectangle (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "您想要傳回其周框的項目以零為起始的索引。"
    return:
      type: System.Drawing.Rectangle
      description: "A <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> ，表示指定的項目之周框。"
  overload: System.Windows.Forms.ListBox.GetItemRectangle*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code> index </code>參數小於零或大於或等於值之<xref:System.Windows.Forms.ListBox.ObjectCollection.Count*>屬性的<xref:System.Windows.Forms.ListBox.ObjectCollection>類別。</xref:System.Windows.Forms.ListBox.ObjectCollection> </xref:System.Windows.Forms.ListBox.ObjectCollection.Count*>"
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)
  id: GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: GetScaledBounds(Rectangle,SizeF,BoundsSpecified)
  nameWithType: ListBox.GetScaledBounds(Rectangle,SizeF,BoundsSpecified)
  fullName: System.Windows.Forms.ListBox.GetScaledBounds(Rectangle,SizeF,BoundsSpecified)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "擷取的範圍內<xref href=&quot;System.Windows.Forms.ListBox&quot;></xref>縮放。"
  remarks: "<xref:System.Windows.Forms.ListBox>類別覆寫<xref:System.Windows.Forms.Control.GetScaledBounds%2A?displayProperty=fullName>方法，以確保要求的高度為隨著調整，而不是目前的高度。</xref:System.Windows.Forms.Control.GetScaledBounds%2A?displayProperty=fullName> </xref:System.Windows.Forms.ListBox>"
  syntax:
    content: protected override System.Drawing.Rectangle GetScaledBounds (System.Drawing.Rectangle bounds, System.Drawing.SizeF factor, System.Windows.Forms.BoundsSpecified specified);
    parameters:
    - id: bounds
      type: System.Drawing.Rectangle
      description: "A <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> ，指定要為其擷取顯示範圍的區域。"
    - id: factor
      type: System.Drawing.SizeF
      description: "高度和寬度的控制項範圍。"
    - id: specified
      type: System.Windows.Forms.BoundsSpecified
      description: "其中一個值的<xref href=&quot;System.Windows.Forms.BoundsSpecified&quot;> </xref> ，指定要定義的大小和位置時使用的控制項範圍。"
    return:
      type: System.Drawing.Rectangle
      description: "A <xref href=&quot;System.Drawing.Rectangle&quot;> </xref>表示縮放控制項的範圍。"
  overload: System.Windows.Forms.ListBox.GetScaledBounds*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.GetSelected(System.Int32)
  id: GetSelected(System.Int32)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: GetSelected(Int32)
  nameWithType: ListBox.GetSelected(Int32)
  fullName: System.Windows.Forms.ListBox.GetSelected(Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "傳回值，表示是否選取指定的項目。"
  remarks: "您可以使用這個方法來快速判斷是否選取指定的項目。 需要多個選取項目中的特定項目時所要執行的特定作業時，此方法相當實用<xref:System.Windows.Forms.ListBox>已選取。</xref:System.Windows.Forms.ListBox>"
  example:
  - "The following code example demonstrates how to use the GetSelected method to determine which items in a <xref:System.Windows.Forms.ListBox> are selected in order to select the items that are not selected and deselect the items that are selected. The example also demonstrates using the <xref:System.Windows.Forms.ListBox.SelectionMode%2A> property to enable a <xref:System.Windows.Forms.ListBox> to have more than one selected item and uses the <xref:System.Windows.Forms.ListBox.Sorted%2A> property to demonstrate how to sort items in a <xref:System.Windows.Forms.ListBox> automatically. This example requires that a <xref:System.Windows.Forms.ListBox>, named `listBox1`, has been added to a form and that the `InitializeMyListBox` method defined in the example is called from the <xref:System.Windows.Forms.Form.Load> event of the form.  \n  \n [!code-cs[ListBox.GetSelected#1](~/add/codesnippet/csharp/m-system.windows.forms.l_4_1.cs)]\n [!code-cpp[ListBox.GetSelected#1](~/add/codesnippet/cpp/m-system.windows.forms.l_4_1.cpp)]\n [!code-vb[ListBox.GetSelected#1](~/add/codesnippet/visualbasic/m-system.windows.forms.l_4_1.vb)]"
  syntax:
    content: public bool GetSelected (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "判斷是否已選取的項目以零為起始的索引。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果指定的項目中目前選取<xref href=&quot;System.Windows.Forms.ListBox&quot;> </xref>，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Forms.ListBox.GetSelected*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code> index </code>參數小於零或大於或等於值之<xref:System.Windows.Forms.ListBox.ObjectCollection.Count*>屬性的<xref:System.Windows.Forms.ListBox.ObjectCollection>類別。</xref:System.Windows.Forms.ListBox.ObjectCollection> </xref:System.Windows.Forms.ListBox.ObjectCollection.Count*>"
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.HorizontalExtent
  id: HorizontalExtent
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: HorizontalExtent
  nameWithType: ListBox.HorizontalExtent
  fullName: System.Windows.Forms.ListBox.HorizontalExtent
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得或設定之寬度的水平捲軸列<xref href=&quot;System.Windows.Forms.ListBox&quot;></xref>可以捲動。"
  remarks: "這個屬性只會報告有用的值如果<xref:System.Windows.Forms.ListBox.HorizontalScrollbar%2A>屬性設定為`true`。</xref:System.Windows.Forms.ListBox.HorizontalScrollbar%2A> 如果寬度<xref:System.Windows.Forms.ListBox>小於這個屬性的值，水平捲軸以水平方式在<xref:System.Windows.Forms.ListBox>.</xref:System.Windows.Forms.ListBox>捲動項目</xref:System.Windows.Forms.ListBox> 如果寬度<xref:System.Windows.Forms.ListBox>等於或大於此值，在水平捲軸會隱藏。</xref:System.Windows.Forms.ListBox> 這個屬性的值不會動態更新<xref:System.Windows.Forms.ListBox>.</xref:System.Windows.Forms.ListBox> 這個屬性時，非常有用的項目<xref:System.Windows.Forms.ListBox>為主控描繪。</xref:System.Windows.Forms.ListBox> 例如，如果的主控描繪項目<xref:System.Windows.Forms.ListBox>是 200 像素寬、 但<xref:System.Windows.Forms.ListBox>60 像素寬、 HorizontalExtent 屬性必須設為 200，若要捲動控制項的可見區域中的項目右邊緣。</xref:System.Windows.Forms.ListBox> </xref:System.Windows.Forms.ListBox>"
  example:
  - "The following code example demonstrates how to use the <xref:System.Windows.Forms.ListBox.HorizontalScrollbar%2A> and HorizontalExtent properties to display a horizontal scroll bar that shows all item text in the <xref:System.Windows.Forms.ListBox> control. The example also uses the <xref:System.Windows.Forms.ListBox.IntegralHeight%2A> property to ensure that items are not partially displayed due to the size of the <xref:System.Windows.Forms.ListBox> control. This example requires that a <xref:System.Windows.Forms.ListBox> control, named `listBox1`, has been added to a form.  \n  \n [!code-cs[ListView.HorizontalExtent#1](~/add/codesnippet/csharp/p-system.windows.forms.l_74_1.cs)]\n [!code-cpp[ListView.HorizontalExtent#1](~/add/codesnippet/cpp/p-system.windows.forms.l_74_1.cpp)]\n [!code-vb[ListView.HorizontalExtent#1](~/add/codesnippet/visualbasic/p-system.windows.forms.l_74_1.vb)]"
  syntax:
    content: public int HorizontalExtent { get; set; }
    return:
      type: System.Int32
      description: "寬度 （以像素水平捲軸可以捲動控制項）。 預設值是零。"
  overload: System.Windows.Forms.ListBox.HorizontalExtent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.HorizontalScrollbar
  id: HorizontalScrollbar
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: HorizontalScrollbar
  nameWithType: ListBox.HorizontalScrollbar
  fullName: System.Windows.Forms.ListBox.HorizontalScrollbar
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得或設定值，指出水平捲軸會顯示在控制項中。"
  remarks: "HorizontalScrollbar 屬性會決定是否<xref:System.Windows.Forms.ListBox>應該會顯示水平捲軸列時內的項目寬度<xref:System.Windows.Forms.ListBox>延伸超過控制項的右邊緣。</xref:System.Windows.Forms.ListBox> </xref:System.Windows.Forms.ListBox> 當這個屬性設定為`true`，捲軸會自動顯示根據<xref:System.Windows.Forms.ListBox>.</xref:System.Windows.Forms.ListBox>中的項目寬度 如果<xref:System.Windows.Forms.ListBox>會描繪<xref:System.Windows.Forms.ListBox>，才能正確顯示水平捲軸，您必須設定<xref:System.Windows.Forms.ListBox.HorizontalExtent%2A>屬性。</xref:System.Windows.Forms.ListBox.HorizontalExtent%2A> </xref:System.Windows.Forms.ListBox> </xref:System.Windows.Forms.ListBox>"
  example:
  - "The following code example demonstrates how to use the HorizontalScrollbar and <xref:System.Windows.Forms.ListBox.HorizontalExtent%2A> properties to display a horizontal scroll bar that shows all item text in the <xref:System.Windows.Forms.ListBox> control. The example also uses the <xref:System.Windows.Forms.ListBox.IntegralHeight%2A> property to ensure that items are not partially displayed due to the size of the <xref:System.Windows.Forms.ListBox> control. This example requires that a <xref:System.Windows.Forms.ListBox> control, named `listBox1`, has been added to a form.  \n  \n [!code-cs[ListView.HorizontalExtent#1](~/add/codesnippet/csharp/p-system.windows.forms.l_12_1.cs)]\n [!code-cpp[ListView.HorizontalExtent#1](~/add/codesnippet/cpp/p-system.windows.forms.l_12_1.cpp)]\n [!code-vb[ListView.HorizontalExtent#1](~/add/codesnippet/visualbasic/p-system.windows.forms.l_12_1.vb)]"
  syntax:
    content: public bool HorizontalScrollbar { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要顯示水平捲軸控制項。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Forms.ListBox.HorizontalScrollbar*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.IndexFromPoint(System.Drawing.Point)
  id: IndexFromPoint(System.Drawing.Point)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: IndexFromPoint(Point)
  nameWithType: ListBox.IndexFromPoint(Point)
  fullName: System.Windows.Forms.ListBox.IndexFromPoint(Point)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "傳回指定座標處的項目以零為起始的索引。"
  remarks: "這個方法可讓您判斷哪一個項目位於控制項內特定位置。 您可以使用這個方法來決定哪一個項目清單中的選取使用者按一下滑鼠右鍵<xref:System.Windows.Forms.ListBox>.</xref:System.Windows.Forms.ListBox>時 游標的位置可以決定，並傳遞至`p`IndexFromPoint 方法，以判斷其項目使用者的參數，以滑鼠右鍵按一下滑鼠上。 然後，您就可以顯示快顯功能表給使用者，以便提供工作和特定的項目為基礎的功能。"
  example:
  - "The following code example demonstrates how to perform drag-and-drop operations using a <xref:System.Windows.Forms.ListBox> control that contains items to drop into a <xref:System.Windows.Forms.RichTextBox> control. The constructor of the form sets the <xref:System.Windows.Forms.RichTextBox.AllowDrop%2A> property to `true` to enable drag-and-drop operations to occur in the <xref:System.Windows.Forms.RichTextBox>. The example uses the <xref:System.Windows.Forms.Control.MouseDown> event of the <xref:System.Windows.Forms.ListBox> to start the drag operation by calling the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method. The example uses the <xref:System.Windows.Forms.Control.DragEnter> event to determine if an item being dragged into the <xref:System.Windows.Forms.RichTextBox> is a valid data type. The <xref:System.Windows.Forms.Control.DragDrop> event performs the actual dropping of a dragged item into the <xref:System.Windows.Forms.RichTextBox> control at the current cursor location within the <xref:System.Windows.Forms.RichTextBox>. This example requires that the <xref:System.Windows.Forms.Control.DragDrop> and <xref:System.Windows.Forms.Control.DragEnter> events have been connected to the event handlers defined in the example.  \n  \n [!code-cpp[RichTextBox.AllowDrop#1](~/add/codesnippet/cpp/m-system.windows.forms.l_20_1.cpp)]\n [!code-vb[RichTextBox.AllowDrop#1](~/add/codesnippet/visualbasic/m-system.windows.forms.l_20_1.vb)]\n [!code-cs[RichTextBox.AllowDrop#1](~/add/codesnippet/csharp/m-system.windows.forms.l_20_1.cs)]"
  syntax:
    content: public int IndexFromPoint (System.Drawing.Point p);
    parameters:
    - id: p
      type: System.Drawing.Point
      description: "A <xref href=&quot;System.Drawing.Point&quot;> </xref>物件，其中包含用來取得的項目索引的座標。"
    return:
      type: System.Int32
      description: "找到指定的座標處的項目以零為起始的索引傳回<xref uid=&quot;langword_csharp_ListBox.NoMatches&quot; name=&quot;ListBox.NoMatches&quot; href=&quot;&quot;></xref>如果找到相符項目。"
  overload: System.Windows.Forms.ListBox.IndexFromPoint*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.IndexFromPoint(System.Int32,System.Int32)
  id: IndexFromPoint(System.Int32,System.Int32)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: IndexFromPoint(Int32,Int32)
  nameWithType: ListBox.IndexFromPoint(Int32,Int32)
  fullName: System.Windows.Forms.ListBox.IndexFromPoint(Int32,Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "傳回指定座標處的項目以零為起始的索引。"
  remarks: "這個方法可讓您判斷哪一個是在控制項內的特定位置的項目。 您可以使用這個方法來決定哪一個項目清單中的選取使用者按一下滑鼠右鍵<xref:System.Windows.Forms.ListBox>.</xref:System.Windows.Forms.ListBox>時 游標的位置可以決定，並傳遞至`x`和`y`參數<xref:System.Windows.Forms.ListBox.IndexFromPoint%2A>方法，以判斷其項目使用者以滑鼠右鍵按一下滑鼠透過。</xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> 然後，您就可以顯示快顯功能表給使用者，以便提供工作和特定的項目為基礎的功能。"
  example:
  - "The following code example demonstrates how to perform drag-and-drop operations using a <xref:System.Windows.Forms.ListBox> control that contains items to drop into a <xref:System.Windows.Forms.RichTextBox> control. The constructor of the form sets the <xref:System.Windows.Forms.RichTextBox.AllowDrop%2A> property to `true` to enable drag-and-drop operations to occur in the <xref:System.Windows.Forms.RichTextBox>. The example uses the <xref:System.Windows.Forms.Control.MouseDown> event of the <xref:System.Windows.Forms.ListBox> to start the drag operation by calling the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method. The example uses the <xref:System.Windows.Forms.Control.DragEnter> event to determine if an item being dragged into the <xref:System.Windows.Forms.RichTextBox> is a valid data type. The <xref:System.Windows.Forms.Control.DragDrop> event performs the actual dropping of a dragged item into the <xref:System.Windows.Forms.RichTextBox> control at the current cursor location within the <xref:System.Windows.Forms.RichTextBox>. This example requires that the <xref:System.Windows.Forms.Control.DragDrop> and <xref:System.Windows.Forms.Control.DragEnter> events have been connected to the event handlers defined in the example.  \n  \n [!code-cpp[RichTextBox.AllowDrop#1](~/add/codesnippet/cpp/m-system.windows.forms.l_18_1.cpp)]\n [!code-vb[RichTextBox.AllowDrop#1](~/add/codesnippet/visualbasic/m-system.windows.forms.l_18_1.vb)]\n [!code-cs[RichTextBox.AllowDrop#1](~/add/codesnippet/csharp/m-system.windows.forms.l_18_1.cs)]"
  syntax:
    content: public int IndexFromPoint (int x, int y);
    parameters:
    - id: x
      type: System.Int32
      description: "要搜尋的位置的 x 座標。"
    - id: y
      type: System.Int32
      description: "要搜尋的位置的 y 座標。"
    return:
      type: System.Int32
      description: "找到指定的座標處的項目以零為起始的索引傳回<xref uid=&quot;langword_csharp_ListBox.NoMatches&quot; name=&quot;ListBox.NoMatches&quot; href=&quot;&quot;></xref>如果找到相符項目。"
  overload: System.Windows.Forms.ListBox.IndexFromPoint*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.IntegralHeight
  id: IntegralHeight
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: IntegralHeight
  nameWithType: ListBox.IntegralHeight
  fullName: System.Windows.Forms.ListBox.IntegralHeight
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得或設定值，指出控制項是否應該重新調整大小以避免僅顯示部分項目。"
  remarks: "當這個屬性設定為`true`，控制項會自動調整大小以確保不部分顯示項目。 如果您想要維護的原始大小<xref:System.Windows.Forms.ListBox>根據表單的空間需求，將此屬性設定為`false`。</xref:System.Windows.Forms.ListBox>       根據預設，<xref:System.Windows.Forms.ListBox>和<xref:System.Windows.Forms.CheckedListBox>大小會使其只顯示整個項目。</xref:System.Windows.Forms.CheckedListBox> </xref:System.Windows.Forms.ListBox> 如果您想<xref:System.Windows.Forms.ListBox>或<xref:System.Windows.Forms.CheckedListBox>完全填滿停駐的區域，設定為 IntegralHeight `false`。</xref:System.Windows.Forms.CheckedListBox> </xref:System.Windows.Forms.ListBox> 這會讓控制項完全填滿區域中，但沒有充分顯示最後一個項目。       如果<xref:System.Windows.Forms.ListBox>不包含任何項目，這個屬性沒有任何作用。</xref:System.Windows.Forms.ListBox>      > [!NOTE] > 整數高度為基礎的高度<xref:System.Windows.Forms.ListBox>，而不是工作區高度。</xref:System.Windows.Forms.ListBox> 如此一來，當 IntegralHeight 屬性設定`true`，項目仍可以部分顯示才顯示捲軸。      > [!NOTE] > 如果<xref:System.Windows.Forms.ListBox.DrawMode%2A>屬性設定為`DrawMode.OwnerDrawVariable`，此屬性沒有任何作用。</xref:System.Windows.Forms.ListBox.DrawMode%2A>"
  example:
  - "The following code example demonstrates how to use the <xref:System.Windows.Forms.ListBox.HorizontalScrollbar%2A> and <xref:System.Windows.Forms.ListBox.HorizontalExtent%2A> properties to display a horizontal scroll bar that shows all item text in the <xref:System.Windows.Forms.ListBox> control. The example also uses the IntegralHeight property to ensure that items are not partially displayed due to the size of the <xref:System.Windows.Forms.ListBox> control. This example requires that a <xref:System.Windows.Forms.ListBox> control, named `listBox1`, has been added to a form.  \n  \n [!code-cs[ListView.HorizontalExtent#1](~/add/codesnippet/csharp/p-system.windows.forms.l_40_1.cs)]\n [!code-cpp[ListView.HorizontalExtent#1](~/add/codesnippet/cpp/p-system.windows.forms.l_40_1.cpp)]\n [!code-vb[ListView.HorizontalExtent#1](~/add/codesnippet/visualbasic/p-system.windows.forms.l_40_1.vb)]"
  syntax:
    content: public bool IntegralHeight { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>控制項會調整大小，它不會顯示部分項目。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Forms.ListBox.IntegralHeight*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.ItemHeight
  id: ItemHeight
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: ItemHeight
  nameWithType: ListBox.ItemHeight
  fullName: System.Windows.Forms.ListBox.ItemHeight
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得或設定中的項目高度<xref href=&quot;System.Windows.Forms.ListBox&quot;> </xref>。"
  remarks: "當<xref:System.Windows.Forms.ListBox.DrawMode%2A>屬性設定為`DrawMode.OwnerDrawFixed`，所有項目具有相同的高度。</xref:System.Windows.Forms.ListBox.DrawMode%2A> 當<xref:System.Windows.Forms.ListBox.DrawMode%2A>屬性設定為`DrawMode.OwnerDrawVariable`，ItemHeight 屬性指定的每個項目加入至<xref:System.Windows.Forms.ListBox>。</xref:System.Windows.Forms.ListBox>高度</xref:System.Windows.Forms.ListBox.DrawMode%2A> 由於在主控描繪清單中的每個項目可以有不同的高度，您可以使用<xref:System.Windows.Forms.ListBox.GetItemHeight%2A>方法來取得<xref:System.Windows.Forms.ListBox>.</xref:System.Windows.Forms.ListBox>中特定項目的高度</xref:System.Windows.Forms.ListBox.GetItemHeight%2A> 如果您使用 ItemHeight 屬性<xref:System.Windows.Forms.ListBox>可變高度的項目，這個屬性會傳回第一個項目的高度控制項中。</xref:System.Windows.Forms.ListBox>       最大高度<xref:System.Windows.Forms.ListBox>項目為 255 的像素。</xref:System.Windows.Forms.ListBox>"
  syntax:
    content: public virtual int ItemHeight { get; set; }
    return:
      type: System.Int32
      description: "高度 （以像素的控制項中的項目）。"
  overload: System.Windows.Forms.ListBox.ItemHeight*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "ItemHeight 屬性已設為小於 0 或超過 255 個像素為單位。"
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.Items
  id: Items
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: Items
  nameWithType: ListBox.Items
  fullName: System.Windows.Forms.ListBox.Items
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得的項目<xref href=&quot;System.Windows.Forms.ListBox&quot;> </xref>。"
  remarks: "此屬性可讓您取得的目前儲存在<xref:System.Windows.Forms.ListBox>.</xref:System.Windows.Forms.ListBox>的項目清單的參考 與這個參考中，您可以將項目加入、 移除項目，並取得集合中的項目計數。 如需可以執行與項目集合之工作的詳細資訊，請參閱<xref:System.Windows.Forms.ListBox.ObjectCollection>類別參考主題。</xref:System.Windows.Forms.ListBox.ObjectCollection>       您也可以管理的項目<xref:System.Windows.Forms.ListBox>使用<xref:System.Windows.Forms.ListControl.DataSource%2A>屬性。</xref:System.Windows.Forms.ListControl.DataSource%2A> </xref:System.Windows.Forms.ListBox> 如果您使用 <xref:System.Windows.Forms.ListControl.DataSource%2A>新增項目<xref:System.Windows.Forms.ListBox>，您可以檢視中<xref:System.Windows.Forms.ListBox>使用的項目屬性，但您無法加入或從清單移除項目使用的<xref:System.Windows.Forms.ListBox.ObjectCollection>.</xref:System.Windows.Forms.ListBox.ObjectCollection>方法</xref:System.Windows.Forms.ListBox>的項目</xref:System.Windows.Forms.ListBox>屬性</xref:System.Windows.Forms.ListControl.DataSource%2A>"
  example:
  - "The following code example demonstrates how to create a <xref:System.Windows.Forms.ListBox> control that displays multiple items in columns and can have more than one item selected in the control's list. The code for the example adds 50 items to the <xref:System.Windows.Forms.ListBox> using the <xref:System.Windows.Forms.ListBox.ObjectCollection.Add%2A> method of the <xref:System.Windows.Forms.ListBox.ObjectCollection> class and then selects three items from the list using the <xref:System.Windows.Forms.ListBox.SetSelected%2A> method. The code then displays values from the <xref:System.Windows.Forms.ListBox.SelectedObjectCollection> collection (through the <xref:System.Windows.Forms.ListBox.SelectedItems%2A> property) and the <xref:System.Windows.Forms.ListBox.SelectedIndexCollection> (through the <xref:System.Windows.Forms.ListBox.SelectedIndices%2A> property). This example requires that the code is located in and called from a <xref:System.Windows.Forms.Form>.  \n  \n [!code-cpp[Classic ListBox Example#1](~/add/codesnippet/cpp/p-system.windows.forms.l_50_1.cpp)]\n [!code-cs[Classic ListBox Example#1](~/add/codesnippet/csharp/p-system.windows.forms.l_50_1.cs)]\n [!code-vb[Classic ListBox Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.l_50_1.vb)]"
  syntax:
    content: public System.Windows.Forms.ListBox.ObjectCollection Items { get; }
    return:
      type: System.Windows.Forms.ListBox.ObjectCollection
      description: "<xref:System.Windows.Forms.ListBox.ObjectCollection>表示中的項目<xref href=&quot;System.Windows.Forms.ListBox&quot;> </xref>。</xref:System.Windows.Forms.ListBox.ObjectCollection>"
  overload: System.Windows.Forms.ListBox.Items*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.MeasureItem
  id: MeasureItem
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: MeasureItem
  nameWithType: ListBox.MeasureItem
  fullName: System.Windows.Forms.ListBox.MeasureItem
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "發生於主控描繪<xref href=&quot;System.Windows.Forms.ListBox&quot;></xref>建立和清單項目的大小所決定。"
  remarks: "您可以建立指定大小的項目都會繪製前的此事件的事件處理常式<xref:System.Windows.Forms.ListBox.DrawItem>事件。</xref:System.Windows.Forms.ListBox.DrawItem> 此事件，才引發的時機的<xref:System.Windows.Forms.ListBox.DrawMode%2A>屬性設定為<xref:System.Windows.Forms.DrawMode>.</xref:System.Windows.Forms.DrawMode> </xref:System.Windows.Forms.ListBox.DrawMode%2A>       最大有效高度<xref:System.Windows.Forms.ListBox>項目為 255 的像素。</xref:System.Windows.Forms.ListBox> 設定<xref:System.Windows.Forms.MeasureItemEventArgs.ItemHeight%2A>屬性<xref:System.Windows.Forms.MeasureItemEventArgs>大於 255 時處理這個事件可能會產生非預期的結果值。</xref:System.Windows.Forms.MeasureItemEventArgs> </xref:System.Windows.Forms.MeasureItemEventArgs.ItemHeight%2A>       如需處理事件的詳細資訊，請參閱[處理和引發事件](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following code example demonstrates an owner-drawn <xref:System.Windows.Forms.ListBox> by setting the <xref:System.Windows.Forms.ListBox.DrawMode%2A> property to <xref:System.Windows.Forms.DrawMode> and handling the <xref:System.Windows.Forms.ListBox.DrawItem> and MeasureItem events. It also demonstrates setting the <xref:System.Windows.Forms.ListBox.BorderStyle%2A> and <xref:System.Windows.Forms.ListBox.ScrollAlwaysVisible%2A> properties and using the <xref:System.Windows.Forms.ListBox.ObjectCollection.AddRange%2A> method.  \n  \n To run this example, paste it in an empty form that imports the <xref:System.Drawing> namespace and the <xref:System.Windows.Forms> namespace. Call `InitializeOwnerDrawnListBox` from the form's constructor or <xref:System.Windows.Forms.Form.Load> event-handling method.  \n  \n [!code-vb[System.Windows.Forms.ListBoxExample#1](~/add/codesnippet/visualbasic/e-system.windows.forms.l_12_1.vb)]\n [!code-cs[System.Windows.Forms.ListBoxExample#1](~/add/codesnippet/csharp/e-system.windows.forms.l_12_1.cs)]\n [!code-cpp[System.Windows.Forms.ListBoxExample#1](~/add/codesnippet/cpp/e-system.windows.forms.l_12_1.cpp)]"
  syntax:
    content: public event System.Windows.Forms.MeasureItemEventHandler MeasureItem;
    return:
      type: System.Windows.Forms.MeasureItemEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.MouseClick
  id: MouseClick
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: MouseClick
  nameWithType: ListBox.MouseClick
  fullName: System.Windows.Forms.ListBox.MouseClick
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "發生於使用者按一下<xref href=&quot;System.Windows.Forms.ListBox&quot;></xref>控制滑鼠指標。"
  syntax:
    content: public event System.Windows.Forms.MouseEventHandler MouseClick;
    return:
      type: System.Windows.Forms.MouseEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.MultiColumn
  id: MultiColumn
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: MultiColumn
  nameWithType: ListBox.MultiColumn
  fullName: System.Windows.Forms.ListBox.MultiColumn
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得或設定值，指出是否<xref href=&quot;System.Windows.Forms.ListBox&quot;></xref>支援多個資料行。"
  remarks: "多重資料行<xref:System.Windows.Forms.ListBox>項目放入才能讓垂直捲動不必要的行。</xref:System.Windows.Forms.ListBox> 使用者可以使用鍵盤巡覽至目前看不到的資料行。 設定<xref:System.Windows.Forms.ListBox.HorizontalScrollbar%2A>屬性`true`顯示水平捲軸，可讓使用者捲動至目前不會顯示在<xref:System.Windows.Forms.ListBox>.</xref:System.Windows.Forms.ListBox>的可見區域中的資料行</xref:System.Windows.Forms.ListBox.HorizontalScrollbar%2A> 值<xref:System.Windows.Forms.ListBox.ColumnWidth%2A>屬性決定每個資料行的寬度。</xref:System.Windows.Forms.ListBox.ColumnWidth%2A>"
  example:
  - "The following code example demonstrates a simple two-column <xref:System.Windows.Forms.ListBox>.  \n  \n [!code-cs[System.Windows.Forms.ListBox.MultiColumn#1](~/add/codesnippet/csharp/p-system.windows.forms.l_52_1.cs)]\n [!code-vb[System.Windows.Forms.ListBox.MultiColumn#1](~/add/codesnippet/visualbasic/p-system.windows.forms.l_52_1.vb)]"
  syntax:
    content: public bool MultiColumn { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref href=&quot;System.Windows.Forms.ListBox&quot;></xref>支援多個資料行，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Forms.ListBox.MultiColumn*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "多重資料行<xref href=&quot;System.Windows.Forms.ListBox&quot;></xref>不能有可變大小的高度。"
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.NoMatches
  id: NoMatches
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: NoMatches
  nameWithType: ListBox.NoMatches
  fullName: System.Windows.Forms.ListBox.NoMatches
  type: Field
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "指定在搜尋期間所找到的相符的項目。"
  remarks: "這個常數由<xref:System.Windows.Forms.ListBox.FindString%2A>， <xref:System.Windows.Forms.ListBox.FindStringExact%2A>，和<xref:System.Windows.Forms.ListBox.IndexFromPoint%2A>方法在搜尋中找到相符的值。</xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> </xref:System.Windows.Forms.ListBox.FindStringExact%2A> </xref:System.Windows.Forms.ListBox.FindString%2A>"
  syntax:
    content: public const int NoMatches = -1;
    return:
      type: System.Int32
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)
  id: OnChangeUICues(System.Windows.Forms.UICuesEventArgs)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: OnChangeUICues(UICuesEventArgs)
  nameWithType: ListBox.OnChangeUICues(UICuesEventArgs)
  fullName: System.Windows.Forms.ListBox.OnChangeUICues(UICuesEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "引發<xref href=&quot;System.Windows.Forms.Control.ChangeUICues&quot;></xref>事件。"
  syntax:
    content: protected override void OnChangeUICues (System.Windows.Forms.UICuesEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.UICuesEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.UICuesEventArgs&quot;> </xref>包含事件資料。"
  overload: System.Windows.Forms.ListBox.OnChangeUICues*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.OnDataSourceChanged(System.EventArgs)
  id: OnDataSourceChanged(System.EventArgs)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: OnDataSourceChanged(EventArgs)
  nameWithType: ListBox.OnDataSourceChanged(EventArgs)
  fullName: System.Windows.Forms.ListBox.OnDataSourceChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "引發<xref href=&quot;System.Windows.Forms.ListControl.DataSourceChanged&quot;></xref>事件。"
  syntax:
    content: protected override void OnDataSourceChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>包含事件資料。</xref:System.EventArgs>"
  overload: System.Windows.Forms.ListBox.OnDataSourceChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.OnDisplayMemberChanged(System.EventArgs)
  id: OnDisplayMemberChanged(System.EventArgs)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: OnDisplayMemberChanged(EventArgs)
  nameWithType: ListBox.OnDisplayMemberChanged(EventArgs)
  fullName: System.Windows.Forms.ListBox.OnDisplayMemberChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "引發<xref href=&quot;System.Windows.Forms.ListControl.DisplayMemberChanged&quot;></xref>事件。"
  syntax:
    content: protected override void OnDisplayMemberChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>包含事件資料。</xref:System.EventArgs>"
  overload: System.Windows.Forms.ListBox.OnDisplayMemberChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)
  id: OnDrawItem(System.Windows.Forms.DrawItemEventArgs)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: OnDrawItem(DrawItemEventArgs)
  nameWithType: ListBox.OnDrawItem(DrawItemEventArgs)
  fullName: System.Windows.Forms.ListBox.OnDrawItem(DrawItemEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "引發<xref href=&quot;System.Windows.Forms.ListBox.DrawItem&quot;></xref>事件。"
  remarks: "引發事件會透過委派事件處理常式叫用。 如需詳細資訊，請參閱[處理和引發事件](~/add/includes/ajax-current-ext-md.md)。       OnDrawItem 方法也可讓衍生的類別處理事件，而不用附加委派。 這是處理衍生類別中的事件的慣用的技巧。"
  example:
  - "The following code example demonstrates how to create owner-drawn <xref:System.Windows.Forms.ListBox> items. The code uses the <xref:System.Windows.Forms.ListBox.DrawMode%2A> property to specify that the items drawn are fixed sized and the <xref:System.Windows.Forms.ListBox.DrawItem> event to perform the drawing of each item into the <xref:System.Windows.Forms.ListBox>. The example code uses the properties and methods of the <xref:System.Windows.Forms.DrawItemEventArgs> class passed as a parameter to the event handler to draw the items. This example requires that a <xref:System.Windows.Forms.ListBox> control called `listBox1` has been added to a form and that the <xref:System.Windows.Forms.ListBox.DrawItem> event is handled by the event handler defined in the example code. The example also requires that items have been added to the <xref:System.Windows.Forms.ListBox> with the text of \"Apple\", \"Orange\", and \"Plum\" in that order.  \n  \n [!code-vb[ListBox.DrawMode#1](~/add/codesnippet/visualbasic/6b0d67e7-dfbb-4ef8-bf2d-_1.vb)]\n [!code-cs[ListBox.DrawMode#1](~/add/codesnippet/csharp/6b0d67e7-dfbb-4ef8-bf2d-_1.cs)]"
  syntax:
    content: protected virtual void OnDrawItem (System.Windows.Forms.DrawItemEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.DrawItemEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.DrawItemEventArgs&quot;> </xref>包含事件資料。"
  overload: System.Windows.Forms.ListBox.OnDrawItem*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.OnFontChanged(System.EventArgs)
  id: OnFontChanged(System.EventArgs)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: OnFontChanged(EventArgs)
  nameWithType: ListBox.OnFontChanged(EventArgs)
  fullName: System.Windows.Forms.ListBox.OnFontChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "引發<xref href=&quot;System.Windows.Forms.Control.FontChanged&quot;></xref>事件。"
  syntax:
    content: protected override void OnFontChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>包含事件資料。</xref:System.EventArgs>"
  overload: System.Windows.Forms.ListBox.OnFontChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.OnHandleCreated(System.EventArgs)
  id: OnHandleCreated(System.EventArgs)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: OnHandleCreated(EventArgs)
  nameWithType: ListBox.OnHandleCreated(EventArgs)
  fullName: System.Windows.Forms.ListBox.OnHandleCreated(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "指定何時建立視窗控制代碼，以便可以設定資料行寬度和其他特性。 繼承的類別應該呼叫<xref uid=&quot;langword_csharp_base.OnHandleCreated&quot; name=&quot;base.OnHandleCreated&quot; href=&quot;&quot;> </xref>。"
  syntax:
    content: protected override void OnHandleCreated (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>包含事件資料。</xref:System.EventArgs>"
  overload: System.Windows.Forms.ListBox.OnHandleCreated*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.OnHandleDestroyed(System.EventArgs)
  id: OnHandleDestroyed(System.EventArgs)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: OnHandleDestroyed(EventArgs)
  nameWithType: ListBox.OnHandleDestroyed(EventArgs)
  fullName: System.Windows.Forms.ListBox.OnHandleDestroyed(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "若要確定項目會設定覆寫最新或已清除時正確。 繼承的控制項應該呼叫<xref uid=&quot;langword_csharp_base.OnHandleDestroyed&quot; name=&quot;base.OnHandleDestroyed&quot; href=&quot;&quot;> </xref>。"
  syntax:
    content: protected override void OnHandleDestroyed (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>包含事件資料。</xref:System.EventArgs>"
  overload: System.Windows.Forms.ListBox.OnHandleDestroyed*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)
  id: OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: OnMeasureItem(MeasureItemEventArgs)
  nameWithType: ListBox.OnMeasureItem(MeasureItemEventArgs)
  fullName: System.Windows.Forms.ListBox.OnMeasureItem(MeasureItemEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "引發<xref href=&quot;System.Windows.Forms.ListBox.MeasureItem&quot;></xref>事件。"
  remarks: "引發事件會透過委派事件處理常式叫用。 如需詳細資訊，請參閱[處理和引發事件](~/add/includes/ajax-current-ext-md.md)。       OnMeasureItem 方法也可讓衍生的類別處理事件，而不用附加委派。 這是處理衍生類別中的事件的慣用的技巧。"
  syntax:
    content: protected virtual void OnMeasureItem (System.Windows.Forms.MeasureItemEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.MeasureItemEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.MeasureItemEventArgs&quot;> </xref>包含事件資料。"
  overload: System.Windows.Forms.ListBox.OnMeasureItem*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.OnParentChanged(System.EventArgs)
  id: OnParentChanged(System.EventArgs)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: OnParentChanged(EventArgs)
  nameWithType: ListBox.OnParentChanged(EventArgs)
  fullName: System.Windows.Forms.ListBox.OnParentChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "引發<xref href=&quot;System.Windows.Forms.Control.ParentChanged&quot;></xref>事件。"
  syntax:
    content: protected override void OnParentChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>包含事件資料。</xref:System.EventArgs>"
  overload: System.Windows.Forms.ListBox.OnParentChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.OnResize(System.EventArgs)
  id: OnResize(System.EventArgs)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: OnResize(EventArgs)
  nameWithType: ListBox.OnResize(EventArgs)
  fullName: System.Windows.Forms.ListBox.OnResize(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "引發<xref href=&quot;System.Windows.Forms.Control.Resize&quot;></xref>事件。"
  syntax:
    content: protected override void OnResize (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>包含事件資料。</xref:System.EventArgs>"
  overload: System.Windows.Forms.ListBox.OnResize*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.OnSelectedIndexChanged(System.EventArgs)
  id: OnSelectedIndexChanged(System.EventArgs)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: OnSelectedIndexChanged(EventArgs)
  nameWithType: ListBox.OnSelectedIndexChanged(EventArgs)
  fullName: System.Windows.Forms.ListBox.OnSelectedIndexChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "引發<xref href=&quot;System.Windows.Forms.ListControl.SelectedValueChanged&quot;></xref>事件。"
  syntax:
    content: protected override void OnSelectedIndexChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>包含事件資料。</xref:System.EventArgs>"
  overload: System.Windows.Forms.ListBox.OnSelectedIndexChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.OnSelectedValueChanged(System.EventArgs)
  id: OnSelectedValueChanged(System.EventArgs)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: OnSelectedValueChanged(EventArgs)
  nameWithType: ListBox.OnSelectedValueChanged(EventArgs)
  fullName: System.Windows.Forms.ListBox.OnSelectedValueChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "引發<xref href=&quot;System.Windows.Forms.ListControl.SelectedValueChanged&quot;></xref>事件。"
  syntax:
    content: protected override void OnSelectedValueChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>包含事件資料。</xref:System.EventArgs>"
  overload: System.Windows.Forms.ListBox.OnSelectedValueChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.Padding
  id: Padding
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: Padding
  nameWithType: ListBox.Padding
  fullName: System.Windows.Forms.ListBox.Padding
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "這個屬性與這個類別無關。"
  remarks: "這個屬性與這個類別無關。"
  syntax:
    content: public System.Windows.Forms.Padding Padding { get; set; }
    return:
      type: System.Windows.Forms.Padding
      description: "A <xref href=&quot;System.Windows.Forms.Padding&quot;></xref> value."
  overload: System.Windows.Forms.ListBox.Padding*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.PaddingChanged
  id: PaddingChanged
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: PaddingChanged
  nameWithType: ListBox.PaddingChanged
  fullName: System.Windows.Forms.ListBox.PaddingChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "發生時的值<xref:System.Windows.Forms.ListBox.Padding*>屬性變更。</xref:System.Windows.Forms.ListBox.Padding*>"
  remarks: "如需處理事件的詳細資訊，請參閱[處理和引發事件](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public event EventHandler PaddingChanged;
    return:
      type: System.EventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.Paint
  id: Paint
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: Paint
  nameWithType: ListBox.Paint
  fullName: System.Windows.Forms.ListBox.Paint
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "發生時<xref href=&quot;System.Windows.Forms.ListBox&quot;></xref>控制項繪製。"
  remarks: "這個事件與這個類別無關。"
  syntax:
    content: public event System.Windows.Forms.PaintEventHandler Paint;
    return:
      type: System.Windows.Forms.PaintEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.PreferredHeight
  id: PreferredHeight
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: PreferredHeight
  nameWithType: ListBox.PreferredHeight
  fullName: System.Windows.Forms.ListBox.PreferredHeight
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得中的所有項目的結合的高度<xref href=&quot;System.Windows.Forms.ListBox&quot;> </xref>。"
  remarks: "這個屬性可讓您判斷高度，<xref:System.Windows.Forms.ListBox>必須調整成才能顯示在清單中的每個可用的項目，以避免顯示垂直捲軸。</xref:System.Windows.Forms.ListBox> 如果中的項目數量<xref:System.Windows.Forms.ListBox>很大，縮放控制項使用的屬性可能會導致 PreferredHeight 值<xref:System.Windows.Forms.ListBox>必須調整表單的用戶端區域之外或<xref:System.Windows.Forms.ListBox>容器。</xref:System.Windows.Forms.ListBox> </xref:System.Windows.Forms.ListBox> </xref:System.Windows.Forms.ListBox>"
  example:
  - "The following code example demonstrates how to set the <xref:System.Windows.Forms.Control.Size%2A> property of a <xref:System.Windows.Forms.ListBox> based on the value of the PreferredHeight property in order to display all items in the <xref:System.Windows.Forms.ListBox> without use of scroll bars. This example requires that a <xref:System.Windows.Forms.ListBox> control, named `listBox1`, has been added to a form.  \n  \n [!code-cs[ListBox.PreferredHeight#1](~/add/codesnippet/csharp/p-system.windows.forms.l_37_1.cs)]\n [!code-vb[ListBox.PreferredHeight#1](~/add/codesnippet/visualbasic/p-system.windows.forms.l_37_1.vb)]\n [!code-cpp[ListBox.PreferredHeight#1](~/add/codesnippet/cpp/p-system.windows.forms.l_37_1.cpp)]"
  syntax:
    content: public int PreferredHeight { get; }
    return:
      type: System.Int32
      description: "結合的高度，單位為像素控制項中的所有項目。"
  overload: System.Windows.Forms.ListBox.PreferredHeight*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.Refresh
  id: Refresh
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: Refresh()
  nameWithType: ListBox.Refresh()
  fullName: System.Windows.Forms.ListBox.Refresh()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "強制控制項使其工作區失效，並且立即重繪其本身和任何子控制項。"
  syntax:
    content: public override void Refresh ();
    parameters: []
  overload: System.Windows.Forms.ListBox.Refresh*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.RefreshItem(System.Int32)
  id: RefreshItem(System.Int32)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: RefreshItem(Int32)
  nameWithType: ListBox.RefreshItem(Int32)
  fullName: System.Windows.Forms.ListBox.RefreshItem(Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "包含指定索引處的項目會重新整理。"
  remarks: "如果<xref:System.Windows.Forms.ListControl.DisplayMember%2A>屬性會設而指派給資料來源中的屬性<xref:System.Windows.Forms.ListControl.DisplayMember%2A>變更，使用 RefreshItem 方法來更新中的值<xref:System.Windows.Forms.ListBox>控制項。</xref:System.Windows.Forms.ListBox> </xref:System.Windows.Forms.ListControl.DisplayMember%2A> </xref:System.Windows.Forms.ListControl.DisplayMember%2A>"
  syntax:
    content: protected override void RefreshItem (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "若要重新整理的項目以零為起始的索引。"
  overload: System.Windows.Forms.ListBox.RefreshItem*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.RefreshItems
  id: RefreshItems
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: RefreshItems()
  nameWithType: ListBox.RefreshItems()
  fullName: System.Windows.Forms.ListBox.RefreshItems()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "重新整理所有<xref href=&quot;System.Windows.Forms.ListBox&quot;></xref>項目，並為其擷取新的字串。"
  syntax:
    content: protected override void RefreshItems ();
    parameters: []
  overload: System.Windows.Forms.ListBox.RefreshItems*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.ResetBackColor
  id: ResetBackColor
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: ResetBackColor()
  nameWithType: ListBox.ResetBackColor()
  fullName: System.Windows.Forms.ListBox.ResetBackColor()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "重設<xref:System.Windows.Forms.Control.BackColor*>屬性為其預設值。</xref:System.Windows.Forms.Control.BackColor*>"
  syntax:
    content: public override void ResetBackColor ();
    parameters: []
  overload: System.Windows.Forms.ListBox.ResetBackColor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.ResetForeColor
  id: ResetForeColor
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: ResetForeColor()
  nameWithType: ListBox.ResetForeColor()
  fullName: System.Windows.Forms.ListBox.ResetForeColor()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "重設<xref:System.Windows.Forms.Control.ForeColor*>屬性為其預設值。</xref:System.Windows.Forms.Control.ForeColor*>"
  syntax:
    content: public override void ResetForeColor ();
    parameters: []
  overload: System.Windows.Forms.ListBox.ResetForeColor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.RightToLeft
  id: RightToLeft
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: RightToLeft
  nameWithType: ListBox.RightToLeft
  fullName: System.Windows.Forms.ListBox.RightToLeft
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得或設定值，指出控制項所顯示的文字是否從右至左顯示。"
  remarks: "此屬性可讓您的功能表，以支援由右至左書寫的語言。 當這個屬性設定為`true`，會顯示項目文字由右至左，而不是預設從左到右的方法。"
  syntax:
    content: public override System.Windows.Forms.RightToLeft RightToLeft { get; set; }
    return:
      type: System.Windows.Forms.RightToLeft
      description: "其中一個<xref href=&quot;System.Windows.Forms.RightToLeft&quot;></xref>值。"
  overload: System.Windows.Forms.ListBox.RightToLeft*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)
  id: ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: ScaleControl(SizeF,BoundsSpecified)
  nameWithType: ListBox.ScaleControl(SizeF,BoundsSpecified)
  fullName: System.Windows.Forms.ListBox.ScaleControl(SizeF,BoundsSpecified)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "縮放控制項的位置、 大小、 邊框距離和邊界。"
  syntax:
    content: protected override void ScaleControl (System.Drawing.SizeF factor, System.Windows.Forms.BoundsSpecified specified);
    parameters:
    - id: factor
      type: System.Drawing.SizeF
      description: "控制項的寬度與高度會縮放比例。"
    - id: specified
      type: System.Windows.Forms.BoundsSpecified
      description: "A <xref href=&quot;System.Windows.Forms.BoundsSpecified&quot;> </xref>值，指定定義的大小和位置時所要使用控制項的範圍。"
  overload: System.Windows.Forms.ListBox.ScaleControl*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.ScrollAlwaysVisible
  id: ScrollAlwaysVisible
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: ScrollAlwaysVisible
  nameWithType: ListBox.ScrollAlwaysVisible
  fullName: System.Windows.Forms.ListBox.ScrollAlwaysVisible
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得或設定值，指出是否永遠顯示垂直捲軸。"
  remarks: "ScrollAlwaysVisible 屬性會指出是否永遠顯示垂直捲軸，即使<xref:System.Windows.Forms.ListBox>不需要顯示垂直捲軸列</xref:System.Windows.Forms.ListBox>中的項目數 根據預設，<xref:System.Windows.Forms.ListBox>只會有足夠的項目，來保證作業顯示時顯示垂直捲軸。</xref:System.Windows.Forms.ListBox> 多重資料行的<xref:System.Windows.Forms.ListBox>，ScrollAlwaysVisible 屬性指出水平捲軸會顯示。</xref:System.Windows.Forms.ListBox> 垂直捲軸永遠不會顯示這個屬性的值為何的多重資料行<xref:System.Windows.Forms.ListBox>.</xref:System.Windows.Forms.ListBox>"
  example:
  - "The following code example demonstrates an owner-drawn <xref:System.Windows.Forms.ListBox> by setting the <xref:System.Windows.Forms.ListBox.DrawMode%2A> property to the `OwnerDrawVariable` value and handling the <xref:System.Windows.Forms.ListBox.DrawItem> and <xref:System.Windows.Forms.ListBox.MeasureItem> events. It also demonstrates setting the <xref:System.Windows.Forms.ListBox.BorderStyle%2A> and ScrollAlwaysVisible properties and using the <xref:System.Windows.Forms.ListBox.ObjectCollection.AddRange%2A> method.  \n  \n To run this example, paste it in an empty form that imports the <xref:System.Drawing> namespace and the <xref:System.Windows.Forms> namespace. Call `InitializeOwnerDrawnListBox` from the form's constructor or <xref:System.Windows.Forms.Form.Load> event-handling method.  \n  \n [!code-vb[System.Windows.Forms.ListBoxExample#1](~/add/codesnippet/visualbasic/p-system.windows.forms.l_65_1.vb)]\n [!code-cs[System.Windows.Forms.ListBoxExample#1](~/add/codesnippet/csharp/p-system.windows.forms.l_65_1.cs)]\n [!code-cpp[System.Windows.Forms.ListBoxExample#1](~/add/codesnippet/cpp/p-system.windows.forms.l_65_1.cpp)]"
  syntax:
    content: public bool ScrollAlwaysVisible { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果應該永遠顯示垂直捲軸;否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Forms.ListBox.ScrollAlwaysVisible*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.SelectedIndex
  id: SelectedIndex
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: SelectedIndex
  nameWithType: ListBox.SelectedIndex
  fullName: System.Windows.Forms.ListBox.SelectedIndex
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得或設定在目前選取之項目的以零為起始的索引<xref href=&quot;System.Windows.Forms.ListBox&quot;> </xref>。"
  remarks: "標準<xref:System.Windows.Forms.ListBox>，您可以使用這個屬性來判斷在<xref:System.Windows.Forms.ListBox>.</xref:System.Windows.Forms.ListBox>已選取的項目的索引</xref:System.Windows.Forms.ListBox> 如果<xref:System.Windows.Forms.ListBox.SelectionMode%2A>屬性<xref:System.Windows.Forms.ListBox>會設為`SelectionMode.MultiSimple`或`SelectionMode.MultiExtended`(表示多重選擇<xref:System.Windows.Forms.ListBox>) 並在清單中選取多個項目，這個屬性可以傳回任何選取的項目索引。</xref:System.Windows.Forms.ListBox> </xref:System.Windows.Forms.ListBox> </xref:System.Windows.Forms.ListBox.SelectionMode%2A>       若要擷取集合，其中包含的所有索引選取的項目在多重選擇<xref:System.Windows.Forms.ListBox>，使用<xref:System.Windows.Forms.ListBox.SelectedIndices%2A>屬性。</xref:System.Windows.Forms.ListBox.SelectedIndices%2A> </xref:System.Windows.Forms.ListBox> 如果您想要取得中目前選取的項目<xref:System.Windows.Forms.ListBox>，使用<xref:System.Windows.Forms.ListBox.SelectedItem%2A>屬性。</xref:System.Windows.Forms.ListBox.SelectedItem%2A> </xref:System.Windows.Forms.ListBox> 此外，您可以使用<xref:System.Windows.Forms.ListBox.SelectedItems%2A>屬性來取得多重選擇<xref:System.Windows.Forms.ListBox>.</xref:System.Windows.Forms.ListBox>所有選取的項目</xref:System.Windows.Forms.ListBox.SelectedItems%2A>"
  example:
  - "The following code example demonstrates how to use the SelectedIndex property with the <xref:System.Windows.Forms.ListBox.TopIndex%2A> property to move the currently selected item to the top of the list of items in the display area of the <xref:System.Windows.Forms.ListBox>. The example further demonstrates how to remove items using the <xref:System.Windows.Forms.ListBox.ObjectCollection.RemoveAt%2A> method of the <xref:System.Windows.Forms.ListBox.ObjectCollection?displayProperty=fullName> class, and how to clear all item selection using the <xref:System.Windows.Forms.ListBox.ClearSelected%2A> method. The code first moves the currently selected item in the <xref:System.Windows.Forms.ListBox> to the top of the list. The code then removes all items before the currently selected item and clears all selections in the <xref:System.Windows.Forms.ListBox>. This example requires that a <xref:System.Windows.Forms.ListBox> containing items is added to a form and that an item is currently selected in the <xref:System.Windows.Forms.ListBox>.  \n  \n [!code-cpp[ListBox.SelectedIndex#1](~/add/codesnippet/cpp/p-system.windows.forms.l_3_1.cpp)]\n [!code-cs[ListBox.SelectedIndex#1](~/add/codesnippet/csharp/p-system.windows.forms.l_3_1.cs)]\n [!code-vb[ListBox.SelectedIndex#1](~/add/codesnippet/visualbasic/p-system.windows.forms.l_3_1.vb)]"
  syntax:
    content: public override int SelectedIndex { get; set; }
    return:
      type: System.Int32
      description: "目前選取的項目以零為起始的索引。 負一 (-1) 如果會傳回任何項目已選取。"
  overload: System.Windows.Forms.ListBox.SelectedIndex*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "指派的值小於-1 或大於或等於項目計數。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<xref:System.Windows.Forms.ListBox.SelectionMode*>屬性設定為<xref uid=&quot;langword_csharp_None&quot; name=&quot;None&quot; href=&quot;&quot;> </xref>。</xref:System.Windows.Forms.ListBox.SelectionMode*>"
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.SelectedIndexChanged
  id: SelectedIndexChanged
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: SelectedIndexChanged
  nameWithType: ListBox.SelectedIndexChanged
  fullName: System.Windows.Forms.ListBox.SelectedIndexChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "發生時<> *> 屬性或<> *> 集合已變更。"
  remarks: "您可以建立此事件，以判斷何時的事件處理常式中選取的索引<xref:System.Windows.Forms.ListBox>已變更。</xref:System.Windows.Forms.ListBox> 這有助於進行您需要根據目前的選取範圍，在<xref:System.Windows.Forms.ListBox>.</xref:System.Windows.Forms.ListBox>其他控制項中顯示資訊 您可以使用此事件的事件處理常式載入其他控制項中的資訊。       如果<xref:System.Windows.Forms.ListBox.SelectionMode%2A>屬性設定為<xref:System.Windows.Forms.SelectionMode?displayProperty=fullName>或<xref:System.Windows.Forms.SelectionMode?displayProperty=fullName>，對任何變更<xref:System.Windows.Forms.ListBox.SelectedIndices%2A>集合，包括項目移除選取範圍，會引發這個事件。</xref:System.Windows.Forms.ListBox.SelectedIndices%2A> </xref:System.Windows.Forms.SelectionMode?displayProperty=fullName> </xref:System.Windows.Forms.SelectionMode?displayProperty=fullName> </xref:System.Windows.Forms.ListBox.SelectionMode%2A>       如需處理事件的詳細資訊，請參閱[處理和引發事件](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following code example demonstrates how to use the SelectedIndexChanged event to search for and select an item in a different <xref:System.Windows.Forms.ListBox> control. The example uses the SelectedIndexChanged event to determine when the selected item in the <xref:System.Windows.Forms.ListBox> is changed. The example code then reads the text of the item using the <xref:System.Windows.Forms.ListBox.SelectedItem%2A> property and calls the <xref:System.Windows.Forms.ListBox.FindString%2A> method on a different <xref:System.Windows.Forms.ListBox> using the text returned by <xref:System.Windows.Forms.ListBox.SelectedItem%2A> in the first <xref:System.Windows.Forms.ListBox>. If an item is found in the other <xref:System.Windows.Forms.ListBox>, the item is selected. This example requires that two <xref:System.Windows.Forms.ListBox> controls, named `listBox1` and `listBox2`, have been added to a form and that both <xref:System.Windows.Forms.ListBox> controls contain items that are identical. The example also requires that the event-handling method defined in the example is connected to the SelectedIndexChanged event of `listBox1`.  \n  \n [!code-cpp[ListBox.SelectedIndexChanged#1](~/add/codesnippet/cpp/e-system.windows.forms.l_7_1.cpp)]\n [!code-vb[ListBox.SelectedIndexChanged#1](~/add/codesnippet/visualbasic/e-system.windows.forms.l_7_1.vb)]\n [!code-cs[ListBox.SelectedIndexChanged#1](~/add/codesnippet/csharp/e-system.windows.forms.l_7_1.cs)]"
  syntax:
    content: public event EventHandler SelectedIndexChanged;
    return:
      type: System.EventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.SelectedIndices
  id: SelectedIndices
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: SelectedIndices
  nameWithType: ListBox.SelectedIndices
  fullName: System.Windows.Forms.ListBox.SelectedIndices
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得集合，其中包含以零為起始的索引中的所有目前選取項目的<xref href=&quot;System.Windows.Forms.ListBox&quot;> </xref>。"
  remarks: "多個選取項目<xref:System.Windows.Forms.ListBox>，這個屬性會傳回集合，其中包含所有的<xref:System.Windows.Forms.ListBox>.</xref:System.Windows.Forms.ListBox>中選取的項目索引</xref:System.Windows.Forms.ListBox> 單一選取項目<xref:System.Windows.Forms.ListBox>，這個屬性會傳回集合，其中包含單一項目包含在<xref:System.Windows.Forms.ListBox>.</xref:System.Windows.Forms.ListBox>只有選取的項目索引</xref:System.Windows.Forms.ListBox> 如需如何管理集合的項目，請參閱<xref:System.Windows.Forms.ListBox.SelectedIndexCollection>.</xref:System.Windows.Forms.ListBox.SelectedIndexCollection>       <xref:System.Windows.Forms.ListBox>類別提供數種方式來參考選取的項目。</xref:System.Windows.Forms.ListBox> 而不是使用 SelectedIndices 屬性來取得目前選取之項目的索引位置，在單一選取<xref:System.Windows.Forms.ListBox>，您可以使用<xref:System.Windows.Forms.ListBox.SelectedIndex%2A>屬性。</xref:System.Windows.Forms.ListBox.SelectedIndex%2A> </xref:System.Windows.Forms.ListBox> 如果您想要取得中目前選取的項目<xref:System.Windows.Forms.ListBox>，而不是項目的索引位置，使用<xref:System.Windows.Forms.ListBox.SelectedItem%2A>屬性。</xref:System.Windows.Forms.ListBox.SelectedItem%2A> </xref:System.Windows.Forms.ListBox> 此外，您可以使用<xref:System.Windows.Forms.ListBox.SelectedItems%2A>屬性，如果您想要取得多重選擇<xref:System.Windows.Forms.ListBox>.</xref:System.Windows.Forms.ListBox>所有選取的項目</xref:System.Windows.Forms.ListBox.SelectedItems%2A>"
  example:
  - "The following code example demonstrates how to use the <xref:System.Windows.Forms.ListBox.FindString%2A> method to search for all instances of the search text in the items of the <xref:System.Windows.Forms.ListBox>. The example uses the version of the <xref:System.Windows.Forms.ListBox.FindString%2A> method that enables you to specify a starting search index from which to do a continual search of all items in the <xref:System.Windows.Forms.ListBox>. The example also demonstrates how to determine when the <xref:System.Windows.Forms.ListBox.FindString%2A> method begins searching from the top of the list after it reaches the bottom of the list of items to prevent a recursive search. Once items are found in the <xref:System.Windows.Forms.ListBox>, they are selected using the <xref:System.Windows.Forms.ListBox.SetSelected%2A> method.  \n  \n [!code-cpp[ListBox.FindString#1](~/add/codesnippet/cpp/p-system.windows.forms.l_81_1.cpp)]\n [!code-cs[ListBox.FindString#1](~/add/codesnippet/csharp/p-system.windows.forms.l_81_1.cs)]\n [!code-vb[ListBox.FindString#1](~/add/codesnippet/visualbasic/p-system.windows.forms.l_81_1.vb)]"
  syntax:
    content: public System.Windows.Forms.ListBox.SelectedIndexCollection SelectedIndices { get; }
    return:
      type: System.Windows.Forms.ListBox.SelectedIndexCollection
      description: "A<xref:System.Windows.Forms.ListBox.SelectedIndexCollection>包含控制項中目前選取的項目索引。</xref:System.Windows.Forms.ListBox.SelectedIndexCollection> 如果目前不選取任何項目，空<xref:System.Windows.Forms.ListBox.SelectedIndexCollection>傳回。</xref:System.Windows.Forms.ListBox.SelectedIndexCollection>"
  overload: System.Windows.Forms.ListBox.SelectedIndices*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.SelectedItem
  id: SelectedItem
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: SelectedItem
  nameWithType: ListBox.SelectedItem
  fullName: System.Windows.Forms.ListBox.SelectedItem
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得或設定目前選取的項目中<xref href=&quot;System.Windows.Forms.ListBox&quot;> </xref>。"
  remarks: "標準<xref:System.Windows.Forms.ListBox>，您可以使用這個屬性，以決定<xref:System.Windows.Forms.ListBox>.</xref:System.Windows.Forms.ListBox>中要選取哪一個項目</xref:System.Windows.Forms.ListBox> 如果<xref:System.Windows.Forms.ListBox.SelectionMode%2A>屬性<xref:System.Windows.Forms.ListBox>會設為`SelectionMode.MultiSimple`或`SelectionMode.MultiExtended`(表示多重選擇<xref:System.Windows.Forms.ListBox>) 並在清單中選取多個項目，這個屬性可以傳回任何選取的項目。</xref:System.Windows.Forms.ListBox> </xref:System.Windows.Forms.ListBox> </xref:System.Windows.Forms.ListBox.SelectionMode%2A>       若要擷取集合，其中包含多個選取範圍中所有選取的項目<xref:System.Windows.Forms.ListBox>，使用<xref:System.Windows.Forms.ListBox.SelectedItems%2A>屬性。</xref:System.Windows.Forms.ListBox.SelectedItems%2A> </xref:System.Windows.Forms.ListBox> 如果您想要取得目前選取的項目中的索引位置<xref:System.Windows.Forms.ListBox>，使用<xref:System.Windows.Forms.ListBox.SelectedIndex%2A>屬性。</xref:System.Windows.Forms.ListBox.SelectedIndex%2A> </xref:System.Windows.Forms.ListBox> 此外，您可以使用<xref:System.Windows.Forms.ListBox.SelectedIndices%2A>屬性來取得所有選取的索引，在多重選擇<xref:System.Windows.Forms.ListBox>.</xref:System.Windows.Forms.ListBox> </xref:System.Windows.Forms.ListBox.SelectedIndices%2A>"
  example:
  - "The following code example demonstrates how to use the <xref:System.Windows.Forms.ListBox.SelectedIndexChanged> event to search for and select an item in a different <xref:System.Windows.Forms.ListBox> control. The example uses the <xref:System.Windows.Forms.ListBox.SelectedIndexChanged> event to determine when the selected item in the <xref:System.Windows.Forms.ListBox> is changed. The example code then reads the text of the item using the SelectedItem property and calls the <xref:System.Windows.Forms.ListBox.FindString%2A> method on a different <xref:System.Windows.Forms.ListBox> using the text returned by SelectedItem in the first <xref:System.Windows.Forms.ListBox>. If an item is found in the other <xref:System.Windows.Forms.ListBox>, the item is selected. This example requires that two <xref:System.Windows.Forms.ListBox> controls, named `listBox1` and `listBox2`, have been added to a form and that both <xref:System.Windows.Forms.ListBox> controls contain items that are identical. The example also requires that the event-handling method defined in the example is connected to the <xref:System.Windows.Forms.ListBox.SelectedIndexChanged> event of `listBox1`.  \n  \n [!code-cpp[ListBox.SelectedIndexChanged#1](~/add/codesnippet/cpp/p-system.windows.forms.l_49_1.cpp)]\n [!code-vb[ListBox.SelectedIndexChanged#1](~/add/codesnippet/visualbasic/p-system.windows.forms.l_49_1.vb)]\n [!code-cs[ListBox.SelectedIndexChanged#1](~/add/codesnippet/csharp/p-system.windows.forms.l_49_1.cs)]"
  syntax:
    content: public object SelectedItem { get; set; }
    return:
      type: System.Object
      description: "表示控制項中的目前選取範圍的物件。"
  overload: System.Windows.Forms.ListBox.SelectedItem*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.SelectedItems
  id: SelectedItems
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: SelectedItems
  nameWithType: ListBox.SelectedItems
  fullName: System.Windows.Forms.ListBox.SelectedItems
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得集合，包含在目前選取的項目<xref href=&quot;System.Windows.Forms.ListBox&quot;> </xref>。"
  remarks: "多個選取項目<xref:System.Windows.Forms.ListBox>，這個屬性會傳回集合，其中包含所有<xref:System.Windows.Forms.ListBox>.</xref:System.Windows.Forms.ListBox>中所選取的項目</xref:System.Windows.Forms.ListBox> 單一選取項目<xref:System.Windows.Forms.ListBox>，這個屬性會傳回集合，其中包含單一項目包含在<xref:System.Windows.Forms.ListBox>.</xref:System.Windows.Forms.ListBox>只有選取的項目</xref:System.Windows.Forms.ListBox> 如需如何管理集合的項目，請參閱<xref:System.Windows.Forms.ListBox.SelectedObjectCollection>.</xref:System.Windows.Forms.ListBox.SelectedObjectCollection>       <xref:System.Windows.Forms.ListBox>類別提供數種方式來參考選取的項目。</xref:System.Windows.Forms.ListBox> 而不是使用 SelectedItems 屬性來取得目前選取的項目在單一選取<xref:System.Windows.Forms.ListBox>，您可以使用<xref:System.Windows.Forms.ListBox.SelectedItem%2A>屬性。</xref:System.Windows.Forms.ListBox.SelectedItem%2A> </xref:System.Windows.Forms.ListBox> 如果您想要取得的項目中目前選取的索引位置<xref:System.Windows.Forms.ListBox>，而非本身的項目，使用<xref:System.Windows.Forms.ListBox.SelectedIndex%2A>屬性。</xref:System.Windows.Forms.ListBox.SelectedIndex%2A> </xref:System.Windows.Forms.ListBox> 此外，您可以使用<xref:System.Windows.Forms.ListBox.SelectedIndices%2A>屬性，如果您想要取得所有選取的項目在多重選擇<xref:System.Windows.Forms.ListBox>.</xref:System.Windows.Forms.ListBox>中的索引位置</xref:System.Windows.Forms.ListBox.SelectedIndices%2A>"
  syntax:
    content: public System.Windows.Forms.ListBox.SelectedObjectCollection SelectedItems { get; }
    return:
      type: System.Windows.Forms.ListBox.SelectedObjectCollection
      description: "A<xref:System.Windows.Forms.ListBox.SelectedObjectCollection>包含控制項中目前選取的項目。</xref:System.Windows.Forms.ListBox.SelectedObjectCollection>"
  overload: System.Windows.Forms.ListBox.SelectedItems*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.SelectionMode
  id: SelectionMode
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: SelectionMode
  nameWithType: ListBox.SelectionMode
  fullName: System.Windows.Forms.ListBox.SelectionMode
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得或設定的方法中選取項目<xref href=&quot;System.Windows.Forms.ListBox&quot;> </xref>。"
  remarks: "SelectionMode 屬性可讓您判斷在項目數目<xref:System.Windows.Forms.ListBox>使用者可以選取一次，以及使用者如何進行多重選取。</xref:System.Windows.Forms.ListBox> 當 selectionmode 設定為`SelectionMode.MultiExtended`、 按住 shift 鍵並按一下滑鼠按鈕或按 SHIFT 和方向鍵 （向上、 向下鍵、 向左鍵和向右箭號） 的其中一個延伸選取範圍從先前選取的項目到目前的項目。 按住 CTRL 並按一下滑鼠選取，或取消選取清單中的項目。 當屬性設定為`SelectionMode.MultiSimple`、 按一下滑鼠或按下空格鍵選取或取消選取清單中的項目。"
  example:
  - "The following code example demonstrates how to use the <xref:System.Windows.Forms.ListBox.GetSelected%2A> method to determine which items in a <xref:System.Windows.Forms.ListBox> are selected in order to select the items that are not selected and deselect the items that are selected. The example also demonstrates using the SelectionMode property to enable a <xref:System.Windows.Forms.ListBox> to have more than one selected item and uses the <xref:System.Windows.Forms.ListBox.Sorted%2A> property to demonstrate how to sort items in a <xref:System.Windows.Forms.ListBox> automatically. This example requires that a <xref:System.Windows.Forms.ListBox>, named `listBox1`, has been added to a form and that the `InitializeMyListBox` method defined in the example is called from the <xref:System.Windows.Forms.Form.Load> event of the form.  \n  \n [!code-cs[ListBox.GetSelected#1](~/add/codesnippet/csharp/p-system.windows.forms.l_28_1.cs)]\n [!code-cpp[ListBox.GetSelected#1](~/add/codesnippet/cpp/p-system.windows.forms.l_28_1.cpp)]\n [!code-vb[ListBox.GetSelected#1](~/add/codesnippet/visualbasic/p-system.windows.forms.l_28_1.vb)]"
  syntax:
    content: public virtual System.Windows.Forms.SelectionMode SelectionMode { get; set; }
    return:
      type: System.Windows.Forms.SelectionMode
      description: "其中一個<xref href=&quot;System.Windows.Forms.SelectionMode&quot;></xref>值。 預設值是<xref uid=&quot;langword_csharp_SelectionMode.One&quot; name=&quot;SelectionMode.One&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Forms.ListBox.SelectionMode*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "指派的值不是其中一個<xref href=&quot;System.Windows.Forms.SelectionMode&quot;></xref>值。"
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)
  id: SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: SetBoundsCore(Int32,Int32,Int32,Int32,BoundsSpecified)
  nameWithType: ListBox.SetBoundsCore(Int32,Int32,Int32,Int32,BoundsSpecified)
  fullName: System.Windows.Forms.ListBox.SetBoundsCore(Int32,Int32,Int32,Int32,BoundsSpecified)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "設定指定的界限<xref href=&quot;System.Windows.Forms.ListBox&quot;></xref>控制項。"
  remarks: "高度<xref:System.Windows.Forms.ListBox>控制項增加和減少的<xref:System.Windows.Forms.ListBox.ItemHeight%2A>屬性。</xref:System.Windows.Forms.ListBox.ItemHeight%2A> </xref:System.Windows.Forms.ListBox> 高度是否不是倍數的數字<xref:System.Windows.Forms.ListBox.ItemHeight%2A>，高度<xref:System.Windows.Forms.ListBox>會變更的最大的多個，小於高度。</xref:System.Windows.Forms.ListBox> </xref:System.Windows.Forms.ListBox.ItemHeight%2A>       一般而言，對應到不包含在指定的參數繫結的參數傳入其目前值。 例如， `height`， `width`，或`x`或`y`屬性<xref:System.Windows.Forms.Control.Location%2A>屬性可以傳入控制項的目前執行個體的參考。</xref:System.Windows.Forms.Control.Location%2A> 不過，會接受所有傳入的值，而套用至控制項。       `specified`參數代表控制項的項目<xref:System.Windows.Forms.Control.Bounds%2A>變更您的應用程式。</xref:System.Windows.Forms.Control.Bounds%2A> 例如，如果您變更<xref:System.Windows.Forms.Control.Size%2A>控制項的`specified`參數值為<xref:System.Windows.Forms.BoundsSpecified>。</xref:System.Windows.Forms.BoundsSpecified> </xref:System.Windows.Forms.Control.Size%2A> 不過，如果<xref:System.Windows.Forms.Control.Size%2A>調整以回應<xref:System.Windows.Forms.Control.Dock%2A>屬性設定，`specified`參數值為<xref:System.Windows.Forms.BoundsSpecified>。</xref:System.Windows.Forms.BoundsSpecified> </xref:System.Windows.Forms.Control.Dock%2A> </xref:System.Windows.Forms.Control.Size%2A>"
  syntax:
    content: protected override void SetBoundsCore (int x, int y, int width, int height, System.Windows.Forms.BoundsSpecified specified);
    parameters:
    - id: x
      type: System.Int32
      description: "新<xref:System.Windows.Forms.Control.Left*>控制項的屬性值。</xref:System.Windows.Forms.Control.Left*>"
    - id: y
      type: System.Int32
      description: "新<xref:System.Windows.Forms.Control.Top*>控制項的屬性值。</xref:System.Windows.Forms.Control.Top*>"
    - id: width
      type: System.Int32
      description: "新<xref:System.Windows.Forms.Control.Width*>控制項的屬性值。</xref:System.Windows.Forms.Control.Width*>"
    - id: height
      type: System.Int32
      description: "新<xref:System.Windows.Forms.Control.Height*>控制項的屬性值。</xref:System.Windows.Forms.Control.Height*>"
    - id: specified
      type: System.Windows.Forms.BoundsSpecified
      description: "位元組合<xref href=&quot;System.Windows.Forms.BoundsSpecified&quot;></xref>值。"
  overload: System.Windows.Forms.ListBox.SetBoundsCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.SetItemCore(System.Int32,System.Object)
  id: SetItemCore(System.Int32,System.Object)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: SetItemCore(Int32,Object)
  nameWithType: ListBox.SetItemCore(Int32,Object)
  fullName: System.Windows.Forms.ListBox.SetItemCore(Int32,Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "在衍生類別中設定具有指定索引的物件。"
  syntax:
    content: protected override void SetItemCore (int index, object value);
    parameters:
    - id: index
      type: System.Int32
      description: "物件的陣列索引。"
    - id: value
      type: System.Object
      description: "物件。"
  overload: System.Windows.Forms.ListBox.SetItemCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.SetItemsCore(System.Collections.IList)
  id: SetItemsCore(System.Collections.IList)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: SetItemsCore(IList)
  nameWithType: ListBox.SetItemsCore(IList)
  fullName: System.Windows.Forms.ListBox.SetItemsCore(IList)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "清除的內容<xref href=&quot;System.Windows.Forms.ListBox&quot;></xref>並將指定的項目加入至控制項。"
  syntax:
    content: protected override void SetItemsCore (System.Collections.IList value);
    parameters:
    - id: value
      type: System.Collections.IList
      description: "若要將控制項插入物件的陣列。"
  overload: System.Windows.Forms.ListBox.SetItemsCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.SetSelected(System.Int32,System.Boolean)
  id: SetSelected(System.Int32,System.Boolean)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: SetSelected(Int32,Boolean)
  nameWithType: ListBox.SetSelected(Int32,Boolean)
  fullName: System.Windows.Forms.ListBox.SetSelected(Int32,Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "選取或清除選取項目中指定的項目<xref href=&quot;System.Windows.Forms.ListBox&quot;> </xref>。"
  remarks: "您可以使用這個屬性在多重選擇<xref:System.Windows.Forms.ListBox>.</xref:System.Windows.Forms.ListBox>中設定的項目 若要選取的項目在單一選取<xref:System.Windows.Forms.ListBox>，使用<xref:System.Windows.Forms.ListBox.SelectedIndex%2A>屬性。</xref:System.Windows.Forms.ListBox.SelectedIndex%2A> </xref:System.Windows.Forms.ListBox>"
  example:
  - "The following code example demonstrates how to create a <xref:System.Windows.Forms.ListBox> control that displays multiple items in columns and can have more than one item selected in the control's list. The code for the example adds 50 items to the <xref:System.Windows.Forms.ListBox> using the <xref:System.Windows.Forms.ListBox.ObjectCollection.Add%2A> method of the <xref:System.Windows.Forms.ListBox.ObjectCollection> class and then selects three items from the list using the SetSelected method. The code then displays values from the <xref:System.Windows.Forms.ListBox.SelectedObjectCollection> collection (through the <xref:System.Windows.Forms.ListBox.SelectedItems%2A> property) and the <xref:System.Windows.Forms.ListBox.SelectedIndexCollection> (through the <xref:System.Windows.Forms.ListBox.SelectedIndices%2A> property). This example requires that the code is located in and called from a <xref:System.Windows.Forms.Form>.  \n  \n [!code-cpp[Classic ListBox Example#1](~/add/codesnippet/cpp/m-system.windows.forms.l_1_1.cpp)]\n [!code-cs[Classic ListBox Example#1](~/add/codesnippet/csharp/m-system.windows.forms.l_1_1.cs)]\n [!code-vb[Classic ListBox Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.l_1_1.vb)]"
  syntax:
    content: public void SetSelected (int index, bool value);
    parameters:
    - id: index
      type: System.Int32
      description: "中的項目以零為起始的索引<xref href=&quot;System.Windows.Forms.ListBox&quot;></xref>加以選取或清除選取項目。"
    - id: value
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要選取指定的項目。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Forms.ListBox.SetSelected*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "指定的索引已超出有效值的範圍。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:System.Windows.Forms.ListBox.SelectionMode*>屬性設定為<xref uid=&quot;langword_csharp_None&quot; name=&quot;None&quot; href=&quot;&quot;> </xref>。</xref:System.Windows.Forms.ListBox.SelectionMode*>"
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.Sort
  id: Sort
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: Sort()
  nameWithType: ListBox.Sort()
  fullName: System.Windows.Forms.ListBox.Sort()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "中的項目排序<xref href=&quot;System.Windows.Forms.ListBox&quot;> </xref>。"
  remarks: "排序會強制每個項目新增至本身，如果集合<xref:System.Windows.Forms.ListBox.Sorted%2A>屬性是`true`。</xref:System.Windows.Forms.ListBox.Sorted%2A> 每個項目會插入正確的位置。"
  example:
  - "The following code example demonstrates using the Sort method. The example demonstrates inheriting from the <xref:System.Windows.Forms.ListBox> class and overriding the Sort method in the derived class to perform a user-defined sort. To run this example paste the following code in an empty form.  \n  \n [!code-cpp[System.Windows.Forms.ListBoxSort#1](~/add/codesnippet/cpp/m-system.windows.forms.l_19_1.cpp)]\n [!code-cs[System.Windows.Forms.ListBoxSort#1](~/add/codesnippet/csharp/m-system.windows.forms.l_19_1.cs)]\n [!code-vb[System.Windows.Forms.ListBoxSort#1](~/add/codesnippet/visualbasic/m-system.windows.forms.l_19_1.vb)]"
  syntax:
    content: protected virtual void Sort ();
    parameters: []
  overload: System.Windows.Forms.ListBox.Sort*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.Sorted
  id: Sorted
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: Sorted
  nameWithType: ListBox.Sorted
  fullName: System.Windows.Forms.ListBox.Sorted
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得或設定值，指出是否在項目<xref href=&quot;System.Windows.Forms.ListBox&quot;></xref>依字母順序排序。"
  remarks: "使用屬性來自動排序<xref:System.Windows.Forms.ListBox>.</xref:System.Windows.Forms.ListBox>依字母順序中的字串 當項目新增至排序<xref:System.Windows.Forms.ListBox>，項目會移至已排序的清單中的適當位置。</xref:System.Windows.Forms.ListBox> 當加入項目至<xref:System.Windows.Forms.ListBox>，它會先排序的項目，然後再加入新項目更有效率。</xref:System.Windows.Forms.ListBox>       A<xref:System.Windows.Forms.ListBox>設為其排序與`true`不會繫結至資料使用<xref:System.Windows.Forms.ListControl.DataSource%2A>屬性。</xref:System.Windows.Forms.ListControl.DataSource%2A> </xref:System.Windows.Forms.ListBox> 顯示已排序資料中繫結至<xref:System.Windows.Forms.ListBox>，您應該將繫結至支援排序的資料來源，並有提供排序的資料來源。</xref:System.Windows.Forms.ListBox>"
  example:
  - "The following code example demonstrates how to use the <xref:System.Windows.Forms.ListBox.GetSelected%2A> method to determine which items in a <xref:System.Windows.Forms.ListBox> are selected in order to select the items that are not selected and deselect the items that are selected. The example also demonstrates using the <xref:System.Windows.Forms.ListBox.SelectionMode%2A> property to enable a <xref:System.Windows.Forms.ListBox> to have more than one selected item and uses the Sorted property to demonstrate how to sort items in a <xref:System.Windows.Forms.ListBox> automatically. This example requires that a <xref:System.Windows.Forms.ListBox>, named `listBox1`, has been added to a form and that the `InitializeMyListBox` method defined in the example is called from the <xref:System.Windows.Forms.Form.Load> event of the form.  \n  \n [!code-cs[ListBox.GetSelected#1](~/add/codesnippet/csharp/p-system.windows.forms.l_17_1.cs)]\n [!code-cpp[ListBox.GetSelected#1](~/add/codesnippet/cpp/p-system.windows.forms.l_17_1.cpp)]\n [!code-vb[ListBox.GetSelected#1](~/add/codesnippet/visualbasic/p-system.windows.forms.l_17_1.vb)]"
  syntax:
    content: public bool Sorted { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果控制項中的項目分組。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Forms.ListBox.Sorted*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.Text
  id: Text
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: Text
  nameWithType: ListBox.Text
  fullName: System.Windows.Forms.ListBox.Text
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得或搜尋在目前選取之項目的文字<xref href=&quot;System.Windows.Forms.ListBox&quot;> </xref>。"
  remarks: "當這個屬性的值設定為字串值，<xref:System.Windows.Forms.ListBox>搜尋中的項目<xref:System.Windows.Forms.ListBox>，符合指定的文字和選取的項目。</xref:System.Windows.Forms.ListBox> </xref:System.Windows.Forms.ListBox> 您也可以使用這個屬性來判斷<xref:System.Windows.Forms.ListBox>.</xref:System.Windows.Forms.ListBox>中目前所選取的項目 如果<xref:System.Windows.Forms.ListBox.SelectionMode%2A>屬性<xref:System.Windows.Forms.ListBox>設`SelectionMode.MultiExtended`，這個屬性會傳回第一個選取之項目的文字。</xref:System.Windows.Forms.ListBox> </xref:System.Windows.Forms.ListBox.SelectionMode%2A> 如果<xref:System.Windows.Forms.ListBox.SelectionMode%2A>屬性<xref:System.Windows.Forms.ListBox>未設定為`SelectionMode.None`，這個屬性會傳回第一個選取之項目的文字。</xref:System.Windows.Forms.ListBox> </xref:System.Windows.Forms.ListBox.SelectionMode%2A>"
  syntax:
    content: public override string Text { get; set; }
    return:
      type: System.String
      description: "在控制項中目前選取之項目的文字。"
  overload: System.Windows.Forms.ListBox.Text*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.TextChanged
  id: TextChanged
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: TextChanged
  nameWithType: ListBox.TextChanged
  fullName: System.Windows.Forms.ListBox.TextChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "發生時<xref:System.Windows.Forms.ListBox.Text*>屬性變更。</xref:System.Windows.Forms.ListBox.Text*>"
  syntax:
    content: public event EventHandler TextChanged;
    return:
      type: System.EventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.TopIndex
  id: TopIndex
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: TopIndex
  nameWithType: ListBox.TopIndex
  fullName: System.Windows.Forms.ListBox.TopIndex
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得或設定在第一個可見項目的索引<xref href=&quot;System.Windows.Forms.ListBox&quot;> </xref>。"
  remarks: "索引位置為零 (0) 的項目一開始是在<xref:System.Windows.Forms.ListBox>.</xref:System.Windows.Forms.ListBox>的可見區域頂端 如果內容<xref:System.Windows.Forms.ListBox>有捲動，另一個項目可能會在控制項的顯示區域的頂端。</xref:System.Windows.Forms.ListBox> 您可以使用這個屬性來取得內的索引<xref:System.Windows.Forms.ListBox.ObjectCollection>如<xref:System.Windows.Forms.ListBox>目前位在控制項的可見區域頂端的項目。</xref:System.Windows.Forms.ListBox> </xref:System.Windows.Forms.ListBox.ObjectCollection> 您也可以使用這個屬性的項目放在清單頂端的控制項的可見區域。"
  example:
  - "The following code example demonstrates how to use the <xref:System.Windows.Forms.ListBox.SelectedIndex%2A> property with the TopIndex property to move the currently selected item to the top of the list of items in the display area of the <xref:System.Windows.Forms.ListBox>. The example further demonstrates how to remove items using the <xref:System.Windows.Forms.ListBox.ObjectCollection.RemoveAt%2A> method of the <xref:System.Windows.Forms.ListBox.ObjectCollection?displayProperty=fullName> class, and how to clear all item selection using the <xref:System.Windows.Forms.ListBox.ClearSelected%2A> method. The code first moves the currently selected item in the <xref:System.Windows.Forms.ListBox> to the top of the list. The code then removes all items before the currently selected item and clears all selections in the <xref:System.Windows.Forms.ListBox>. This example requires that a <xref:System.Windows.Forms.ListBox> containing items is added to a form and that an item is currently selected in the <xref:System.Windows.Forms.ListBox>.  \n  \n [!code-cpp[ListBox.SelectedIndex#1](~/add/codesnippet/cpp/p-system.windows.forms.l_70_1.cpp)]\n [!code-cs[ListBox.SelectedIndex#1](~/add/codesnippet/csharp/p-system.windows.forms.l_70_1.cs)]\n [!code-vb[ListBox.SelectedIndex#1](~/add/codesnippet/visualbasic/p-system.windows.forms.l_70_1.vb)]"
  syntax:
    content: public int TopIndex { get; set; }
    return:
      type: System.Int32
      description: "在控制項中的第一個可見項目以零為起始的索引。"
  overload: System.Windows.Forms.ListBox.TopIndex*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.ToString
  id: ToString
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: ToString()
  nameWithType: ListBox.ToString()
  fullName: System.Windows.Forms.ListBox.ToString()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "傳回的字串表示<xref href=&quot;System.Windows.Forms.ListBox&quot;> </xref>。"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "字串，表示控制項型別中的項目計數<xref href=&quot;System.Windows.Forms.ListBox&quot;></xref>控制項，並將文字的屬性中的第一個項目<xref href=&quot;System.Windows.Forms.ListBox&quot;> </xref>、 計數不是 0。"
  overload: System.Windows.Forms.ListBox.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.UseCustomTabOffsets
  id: UseCustomTabOffsets
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: UseCustomTabOffsets
  nameWithType: ListBox.UseCustomTabOffsets
  fullName: System.Windows.Forms.ListBox.UseCustomTabOffsets
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得或設定值，指出是否<xref href=&quot;System.Windows.Forms.ListBox&quot;></xref>辨識和展開定位點字元，當它繪製其字串使用時<xref:System.Windows.Forms.ListBox.CustomTabOffsets*>整數陣列。</xref:System.Windows.Forms.ListBox.CustomTabOffsets*>"
  syntax:
    content: public bool UseCustomTabOffsets { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref href=&quot;System.Windows.Forms.ListBox&quot;></xref>辨識和展開定位點字元，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Forms.ListBox.UseCustomTabOffsets*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.UseTabStops
  id: UseTabStops
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: UseTabStops
  nameWithType: ListBox.UseTabStops
  fullName: System.Windows.Forms.ListBox.UseTabStops
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得或設定值，指出是否<xref href=&quot;System.Windows.Forms.ListBox&quot;></xref>可以辨識和展開定位點字元繪製字串時。"
  remarks: ''
  example:
  - "The following code example demonstrates how to create a <xref:System.Windows.Forms.ListBox> that displays items with tab characters.  \n  \n [!code-cs[ListBox.UseTabStops#1](~/add/codesnippet/csharp/p-system.windows.forms.l_62_1.cs)]\n [!code-vb[ListBox.UseTabStops#1](~/add/codesnippet/visualbasic/p-system.windows.forms.l_62_1.vb)]\n [!code-cpp[ListBox.UseTabStops#1](~/add/codesnippet/cpp/p-system.windows.forms.l_62_1.cpp)]"
  syntax:
    content: public bool UseTabStops { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果控制項可以展開定位點字元。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Forms.ListBox.UseTabStops*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.WmReflectCommand(System.Windows.Forms.Message@)
  id: WmReflectCommand(System.Windows.Forms.Message@)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: WmReflectCommand(Message)
  nameWithType: ListBox.WmReflectCommand(Message)
  fullName: System.Windows.Forms.ListBox.WmReflectCommand(Message)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "處理命令訊息<xref href=&quot;System.Windows.Forms.ListView&quot;></xref>控制項接收從最上層視窗。"
  syntax:
    content: protected virtual void WmReflectCommand (ref System.Windows.Forms.Message m);
    parameters:
    - id: m
      type: System.Windows.Forms.Message
      description: "<xref href=&quot;System.Windows.Forms.Message&quot;> </xref>傳送到的最上層視窗<xref href=&quot;System.Windows.Forms.ListBox&quot;></xref>控制項。"
  overload: System.Windows.Forms.ListBox.WmReflectCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.WndProc(System.Windows.Forms.Message@)
  id: WndProc(System.Windows.Forms.Message@)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: WndProc(Message)
  nameWithType: ListBox.WndProc(Message)
  fullName: System.Windows.Forms.ListBox.WndProc(Message)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "清單的視窗程序。"
  remarks: "繼承類別可以覆寫這個檔案來新增額外的功能，但應該呼叫基底類別，以確保清單會繼續正常運作的 WndProc 方法。"
  syntax:
    content: protected override void WndProc (ref System.Windows.Forms.Message m);
    parameters:
    - id: m
      type: System.Windows.Forms.Message
      description: "Windows 訊息物件。"
  overload: System.Windows.Forms.ListBox.WndProc*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Forms.ListControl
  isExternal: false
  name: System.Windows.Forms.ListControl
- uid: System.ComponentModel.InvalidEnumArgumentException
  parent: System.ComponentModel
  isExternal: false
  name: InvalidEnumArgumentException
  nameWithType: InvalidEnumArgumentException
  fullName: System.ComponentModel.InvalidEnumArgumentException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Windows.Forms.ListBox.#ctor
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: ListBox()
  nameWithType: ListBox.ListBox()
  fullName: System.Windows.Forms.ListBox.ListBox()
- uid: System.Windows.Forms.ListBox.AddItemsCore(System.Object[])
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: AddItemsCore(Object[])
  nameWithType: ListBox.AddItemsCore(Object[])
  fullName: System.Windows.Forms.ListBox.AddItemsCore(Object[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Forms.ListBox.AllowSelection
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: AllowSelection
  nameWithType: ListBox.AllowSelection
  fullName: System.Windows.Forms.ListBox.AllowSelection
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.ListBox.BackColor
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: BackColor
  nameWithType: ListBox.BackColor
  fullName: System.Windows.Forms.ListBox.BackColor
- uid: System.Drawing.Color
  parent: System.Drawing
  isExternal: false
  name: Color
  nameWithType: Color
  fullName: System.Drawing.Color
- uid: System.Windows.Forms.ListBox.BackgroundImage
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: BackgroundImage
  nameWithType: ListBox.BackgroundImage
  fullName: System.Windows.Forms.ListBox.BackgroundImage
- uid: System.Drawing.Image
  parent: System.Drawing
  isExternal: false
  name: Image
  nameWithType: Image
  fullName: System.Drawing.Image
- uid: System.Windows.Forms.ListBox.BackgroundImageChanged
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: BackgroundImageChanged
  nameWithType: ListBox.BackgroundImageChanged
  fullName: System.Windows.Forms.ListBox.BackgroundImageChanged
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Windows.Forms.ListBox.BackgroundImageLayout
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: BackgroundImageLayout
  nameWithType: ListBox.BackgroundImageLayout
  fullName: System.Windows.Forms.ListBox.BackgroundImageLayout
- uid: System.Windows.Forms.ImageLayout
  parent: System.Windows.Forms
  isExternal: false
  name: ImageLayout
  nameWithType: ImageLayout
  fullName: System.Windows.Forms.ImageLayout
- uid: System.Windows.Forms.ListBox.BackgroundImageLayoutChanged
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: BackgroundImageLayoutChanged
  nameWithType: ListBox.BackgroundImageLayoutChanged
  fullName: System.Windows.Forms.ListBox.BackgroundImageLayoutChanged
- uid: System.Windows.Forms.ListBox.BeginUpdate
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: BeginUpdate()
  nameWithType: ListBox.BeginUpdate()
  fullName: System.Windows.Forms.ListBox.BeginUpdate()
- uid: System.Windows.Forms.ListBox.BorderStyle
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: BorderStyle
  nameWithType: ListBox.BorderStyle
  fullName: System.Windows.Forms.ListBox.BorderStyle
- uid: System.Windows.Forms.BorderStyle
  parent: System.Windows.Forms
  isExternal: false
  name: BorderStyle
  nameWithType: BorderStyle
  fullName: System.Windows.Forms.BorderStyle
- uid: System.Windows.Forms.ListBox.ClearSelected
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: ClearSelected()
  nameWithType: ListBox.ClearSelected()
  fullName: System.Windows.Forms.ListBox.ClearSelected()
- uid: System.Windows.Forms.ListBox.Click
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: Click
  nameWithType: ListBox.Click
  fullName: System.Windows.Forms.ListBox.Click
- uid: System.Windows.Forms.ListBox.ColumnWidth
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: ColumnWidth
  nameWithType: ListBox.ColumnWidth
  fullName: System.Windows.Forms.ListBox.ColumnWidth
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Forms.ListBox.CreateItemCollection
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: CreateItemCollection()
  nameWithType: ListBox.CreateItemCollection()
  fullName: System.Windows.Forms.ListBox.CreateItemCollection()
- uid: System.Windows.Forms.ListBox.ObjectCollection
  parent: System.Windows.Forms
  isExternal: false
  name: ListBox+ObjectCollection
  nameWithType: ListBox+ObjectCollection
  fullName: System.Windows.Forms.ListBox+ObjectCollection
- uid: System.Windows.Forms.ListBox.CreateParams
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: CreateParams
  nameWithType: ListBox.CreateParams
  fullName: System.Windows.Forms.ListBox.CreateParams
- uid: System.Windows.Forms.CreateParams
  parent: System.Windows.Forms
  isExternal: false
  name: CreateParams
  nameWithType: CreateParams
  fullName: System.Windows.Forms.CreateParams
- uid: System.Windows.Forms.ListBox.CustomTabOffsets
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: CustomTabOffsets
  nameWithType: ListBox.CustomTabOffsets
  fullName: System.Windows.Forms.ListBox.CustomTabOffsets
- uid: System.Windows.Forms.ListBox.IntegerCollection
  parent: System.Windows.Forms
  isExternal: false
  name: ListBox+IntegerCollection
  nameWithType: ListBox+IntegerCollection
  fullName: System.Windows.Forms.ListBox+IntegerCollection
- uid: System.Windows.Forms.ListBox.DefaultItemHeight
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: DefaultItemHeight
  nameWithType: ListBox.DefaultItemHeight
  fullName: System.Windows.Forms.ListBox.DefaultItemHeight
- uid: System.Windows.Forms.ListBox.DefaultSize
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: DefaultSize
  nameWithType: ListBox.DefaultSize
  fullName: System.Windows.Forms.ListBox.DefaultSize
- uid: System.Drawing.Size
  parent: System.Drawing
  isExternal: false
  name: Size
  nameWithType: Size
  fullName: System.Drawing.Size
- uid: System.Windows.Forms.ListBox.DrawItem
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: DrawItem
  nameWithType: ListBox.DrawItem
  fullName: System.Windows.Forms.ListBox.DrawItem
- uid: System.Windows.Forms.DrawItemEventHandler
  parent: System.Windows.Forms
  isExternal: false
  name: DrawItemEventHandler
  nameWithType: DrawItemEventHandler
  fullName: System.Windows.Forms.DrawItemEventHandler
- uid: System.Windows.Forms.ListBox.DrawMode
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: DrawMode
  nameWithType: ListBox.DrawMode
  fullName: System.Windows.Forms.ListBox.DrawMode
- uid: System.Windows.Forms.DrawMode
  parent: System.Windows.Forms
  isExternal: false
  name: DrawMode
  nameWithType: DrawMode
  fullName: System.Windows.Forms.DrawMode
- uid: System.Windows.Forms.ListBox.EndUpdate
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: EndUpdate()
  nameWithType: ListBox.EndUpdate()
  fullName: System.Windows.Forms.ListBox.EndUpdate()
- uid: System.Windows.Forms.ListBox.FindString(System.String)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: FindString(String)
  nameWithType: ListBox.FindString(String)
  fullName: System.Windows.Forms.ListBox.FindString(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Forms.ListBox.FindString(System.String,System.Int32)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: FindString(String,Int32)
  nameWithType: ListBox.FindString(String,Int32)
  fullName: System.Windows.Forms.ListBox.FindString(String,Int32)
- uid: System.Windows.Forms.ListBox.FindStringExact(System.String)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: FindStringExact(String)
  nameWithType: ListBox.FindStringExact(String)
  fullName: System.Windows.Forms.ListBox.FindStringExact(String)
- uid: System.Windows.Forms.ListBox.FindStringExact(System.String,System.Int32)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: FindStringExact(String,Int32)
  nameWithType: ListBox.FindStringExact(String,Int32)
  fullName: System.Windows.Forms.ListBox.FindStringExact(String,Int32)
- uid: System.Windows.Forms.ListBox.Font
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: Font
  nameWithType: ListBox.Font
  fullName: System.Windows.Forms.ListBox.Font
- uid: System.Drawing.Font
  parent: System.Drawing
  isExternal: false
  name: Font
  nameWithType: Font
  fullName: System.Drawing.Font
- uid: System.Windows.Forms.ListBox.ForeColor
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: ForeColor
  nameWithType: ListBox.ForeColor
  fullName: System.Windows.Forms.ListBox.ForeColor
- uid: System.Windows.Forms.ListBox.GetItemHeight(System.Int32)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: GetItemHeight(Int32)
  nameWithType: ListBox.GetItemHeight(Int32)
  fullName: System.Windows.Forms.ListBox.GetItemHeight(Int32)
- uid: System.Windows.Forms.ListBox.GetItemRectangle(System.Int32)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: GetItemRectangle(Int32)
  nameWithType: ListBox.GetItemRectangle(Int32)
  fullName: System.Windows.Forms.ListBox.GetItemRectangle(Int32)
- uid: System.Drawing.Rectangle
  parent: System.Drawing
  isExternal: false
  name: Rectangle
  nameWithType: Rectangle
  fullName: System.Drawing.Rectangle
- uid: System.Windows.Forms.ListBox.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: GetScaledBounds(Rectangle,SizeF,BoundsSpecified)
  nameWithType: ListBox.GetScaledBounds(Rectangle,SizeF,BoundsSpecified)
  fullName: System.Windows.Forms.ListBox.GetScaledBounds(Rectangle,SizeF,BoundsSpecified)
- uid: System.Drawing.SizeF
  parent: System.Drawing
  isExternal: false
  name: SizeF
  nameWithType: SizeF
  fullName: System.Drawing.SizeF
- uid: System.Windows.Forms.BoundsSpecified
  parent: System.Windows.Forms
  isExternal: false
  name: BoundsSpecified
  nameWithType: BoundsSpecified
  fullName: System.Windows.Forms.BoundsSpecified
- uid: System.Windows.Forms.ListBox.GetSelected(System.Int32)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: GetSelected(Int32)
  nameWithType: ListBox.GetSelected(Int32)
  fullName: System.Windows.Forms.ListBox.GetSelected(Int32)
- uid: System.Windows.Forms.ListBox.HorizontalExtent
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: HorizontalExtent
  nameWithType: ListBox.HorizontalExtent
  fullName: System.Windows.Forms.ListBox.HorizontalExtent
- uid: System.Windows.Forms.ListBox.HorizontalScrollbar
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: HorizontalScrollbar
  nameWithType: ListBox.HorizontalScrollbar
  fullName: System.Windows.Forms.ListBox.HorizontalScrollbar
- uid: System.Windows.Forms.ListBox.IndexFromPoint(System.Drawing.Point)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: IndexFromPoint(Point)
  nameWithType: ListBox.IndexFromPoint(Point)
  fullName: System.Windows.Forms.ListBox.IndexFromPoint(Point)
- uid: System.Drawing.Point
  parent: System.Drawing
  isExternal: false
  name: Point
  nameWithType: Point
  fullName: System.Drawing.Point
- uid: System.Windows.Forms.ListBox.IndexFromPoint(System.Int32,System.Int32)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: IndexFromPoint(Int32,Int32)
  nameWithType: ListBox.IndexFromPoint(Int32,Int32)
  fullName: System.Windows.Forms.ListBox.IndexFromPoint(Int32,Int32)
- uid: System.Windows.Forms.ListBox.IntegralHeight
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: IntegralHeight
  nameWithType: ListBox.IntegralHeight
  fullName: System.Windows.Forms.ListBox.IntegralHeight
- uid: System.Windows.Forms.ListBox.ItemHeight
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: ItemHeight
  nameWithType: ListBox.ItemHeight
  fullName: System.Windows.Forms.ListBox.ItemHeight
- uid: System.Windows.Forms.ListBox.Items
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: Items
  nameWithType: ListBox.Items
  fullName: System.Windows.Forms.ListBox.Items
- uid: System.Windows.Forms.ListBox.MeasureItem
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: MeasureItem
  nameWithType: ListBox.MeasureItem
  fullName: System.Windows.Forms.ListBox.MeasureItem
- uid: System.Windows.Forms.MeasureItemEventHandler
  parent: System.Windows.Forms
  isExternal: false
  name: MeasureItemEventHandler
  nameWithType: MeasureItemEventHandler
  fullName: System.Windows.Forms.MeasureItemEventHandler
- uid: System.Windows.Forms.ListBox.MouseClick
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: MouseClick
  nameWithType: ListBox.MouseClick
  fullName: System.Windows.Forms.ListBox.MouseClick
- uid: System.Windows.Forms.MouseEventHandler
  parent: System.Windows.Forms
  isExternal: false
  name: MouseEventHandler
  nameWithType: MouseEventHandler
  fullName: System.Windows.Forms.MouseEventHandler
- uid: System.Windows.Forms.ListBox.MultiColumn
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: MultiColumn
  nameWithType: ListBox.MultiColumn
  fullName: System.Windows.Forms.ListBox.MultiColumn
- uid: System.Windows.Forms.ListBox.NoMatches
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: NoMatches
  nameWithType: ListBox.NoMatches
  fullName: System.Windows.Forms.ListBox.NoMatches
- uid: System.Windows.Forms.ListBox.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: OnChangeUICues(UICuesEventArgs)
  nameWithType: ListBox.OnChangeUICues(UICuesEventArgs)
  fullName: System.Windows.Forms.ListBox.OnChangeUICues(UICuesEventArgs)
- uid: System.Windows.Forms.UICuesEventArgs
  parent: System.Windows.Forms
  isExternal: false
  name: UICuesEventArgs
  nameWithType: UICuesEventArgs
  fullName: System.Windows.Forms.UICuesEventArgs
- uid: System.Windows.Forms.ListBox.OnDataSourceChanged(System.EventArgs)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: OnDataSourceChanged(EventArgs)
  nameWithType: ListBox.OnDataSourceChanged(EventArgs)
  fullName: System.Windows.Forms.ListBox.OnDataSourceChanged(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Windows.Forms.ListBox.OnDisplayMemberChanged(System.EventArgs)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: OnDisplayMemberChanged(EventArgs)
  nameWithType: ListBox.OnDisplayMemberChanged(EventArgs)
  fullName: System.Windows.Forms.ListBox.OnDisplayMemberChanged(EventArgs)
- uid: System.Windows.Forms.ListBox.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: OnDrawItem(DrawItemEventArgs)
  nameWithType: ListBox.OnDrawItem(DrawItemEventArgs)
  fullName: System.Windows.Forms.ListBox.OnDrawItem(DrawItemEventArgs)
- uid: System.Windows.Forms.DrawItemEventArgs
  parent: System.Windows.Forms
  isExternal: false
  name: DrawItemEventArgs
  nameWithType: DrawItemEventArgs
  fullName: System.Windows.Forms.DrawItemEventArgs
- uid: System.Windows.Forms.ListBox.OnFontChanged(System.EventArgs)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: OnFontChanged(EventArgs)
  nameWithType: ListBox.OnFontChanged(EventArgs)
  fullName: System.Windows.Forms.ListBox.OnFontChanged(EventArgs)
- uid: System.Windows.Forms.ListBox.OnHandleCreated(System.EventArgs)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: OnHandleCreated(EventArgs)
  nameWithType: ListBox.OnHandleCreated(EventArgs)
  fullName: System.Windows.Forms.ListBox.OnHandleCreated(EventArgs)
- uid: System.Windows.Forms.ListBox.OnHandleDestroyed(System.EventArgs)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: OnHandleDestroyed(EventArgs)
  nameWithType: ListBox.OnHandleDestroyed(EventArgs)
  fullName: System.Windows.Forms.ListBox.OnHandleDestroyed(EventArgs)
- uid: System.Windows.Forms.ListBox.OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: OnMeasureItem(MeasureItemEventArgs)
  nameWithType: ListBox.OnMeasureItem(MeasureItemEventArgs)
  fullName: System.Windows.Forms.ListBox.OnMeasureItem(MeasureItemEventArgs)
- uid: System.Windows.Forms.MeasureItemEventArgs
  parent: System.Windows.Forms
  isExternal: false
  name: MeasureItemEventArgs
  nameWithType: MeasureItemEventArgs
  fullName: System.Windows.Forms.MeasureItemEventArgs
- uid: System.Windows.Forms.ListBox.OnParentChanged(System.EventArgs)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: OnParentChanged(EventArgs)
  nameWithType: ListBox.OnParentChanged(EventArgs)
  fullName: System.Windows.Forms.ListBox.OnParentChanged(EventArgs)
- uid: System.Windows.Forms.ListBox.OnResize(System.EventArgs)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: OnResize(EventArgs)
  nameWithType: ListBox.OnResize(EventArgs)
  fullName: System.Windows.Forms.ListBox.OnResize(EventArgs)
- uid: System.Windows.Forms.ListBox.OnSelectedIndexChanged(System.EventArgs)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: OnSelectedIndexChanged(EventArgs)
  nameWithType: ListBox.OnSelectedIndexChanged(EventArgs)
  fullName: System.Windows.Forms.ListBox.OnSelectedIndexChanged(EventArgs)
- uid: System.Windows.Forms.ListBox.OnSelectedValueChanged(System.EventArgs)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: OnSelectedValueChanged(EventArgs)
  nameWithType: ListBox.OnSelectedValueChanged(EventArgs)
  fullName: System.Windows.Forms.ListBox.OnSelectedValueChanged(EventArgs)
- uid: System.Windows.Forms.ListBox.Padding
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: Padding
  nameWithType: ListBox.Padding
  fullName: System.Windows.Forms.ListBox.Padding
- uid: System.Windows.Forms.Padding
  parent: System.Windows.Forms
  isExternal: false
  name: Padding
  nameWithType: Padding
  fullName: System.Windows.Forms.Padding
- uid: System.Windows.Forms.ListBox.PaddingChanged
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: PaddingChanged
  nameWithType: ListBox.PaddingChanged
  fullName: System.Windows.Forms.ListBox.PaddingChanged
- uid: System.Windows.Forms.ListBox.Paint
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: Paint
  nameWithType: ListBox.Paint
  fullName: System.Windows.Forms.ListBox.Paint
- uid: System.Windows.Forms.PaintEventHandler
  parent: System.Windows.Forms
  isExternal: false
  name: PaintEventHandler
  nameWithType: PaintEventHandler
  fullName: System.Windows.Forms.PaintEventHandler
- uid: System.Windows.Forms.ListBox.PreferredHeight
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: PreferredHeight
  nameWithType: ListBox.PreferredHeight
  fullName: System.Windows.Forms.ListBox.PreferredHeight
- uid: System.Windows.Forms.ListBox.Refresh
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: Refresh()
  nameWithType: ListBox.Refresh()
  fullName: System.Windows.Forms.ListBox.Refresh()
- uid: System.Windows.Forms.ListBox.RefreshItem(System.Int32)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: RefreshItem(Int32)
  nameWithType: ListBox.RefreshItem(Int32)
  fullName: System.Windows.Forms.ListBox.RefreshItem(Int32)
- uid: System.Windows.Forms.ListBox.RefreshItems
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: RefreshItems()
  nameWithType: ListBox.RefreshItems()
  fullName: System.Windows.Forms.ListBox.RefreshItems()
- uid: System.Windows.Forms.ListBox.ResetBackColor
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: ResetBackColor()
  nameWithType: ListBox.ResetBackColor()
  fullName: System.Windows.Forms.ListBox.ResetBackColor()
- uid: System.Windows.Forms.ListBox.ResetForeColor
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: ResetForeColor()
  nameWithType: ListBox.ResetForeColor()
  fullName: System.Windows.Forms.ListBox.ResetForeColor()
- uid: System.Windows.Forms.ListBox.RightToLeft
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: RightToLeft
  nameWithType: ListBox.RightToLeft
  fullName: System.Windows.Forms.ListBox.RightToLeft
- uid: System.Windows.Forms.RightToLeft
  parent: System.Windows.Forms
  isExternal: false
  name: RightToLeft
  nameWithType: RightToLeft
  fullName: System.Windows.Forms.RightToLeft
- uid: System.Windows.Forms.ListBox.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: ScaleControl(SizeF,BoundsSpecified)
  nameWithType: ListBox.ScaleControl(SizeF,BoundsSpecified)
  fullName: System.Windows.Forms.ListBox.ScaleControl(SizeF,BoundsSpecified)
- uid: System.Windows.Forms.ListBox.ScrollAlwaysVisible
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: ScrollAlwaysVisible
  nameWithType: ListBox.ScrollAlwaysVisible
  fullName: System.Windows.Forms.ListBox.ScrollAlwaysVisible
- uid: System.Windows.Forms.ListBox.SelectedIndex
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: SelectedIndex
  nameWithType: ListBox.SelectedIndex
  fullName: System.Windows.Forms.ListBox.SelectedIndex
- uid: System.Windows.Forms.ListBox.SelectedIndexChanged
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: SelectedIndexChanged
  nameWithType: ListBox.SelectedIndexChanged
  fullName: System.Windows.Forms.ListBox.SelectedIndexChanged
- uid: System.Windows.Forms.ListBox.SelectedIndices
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: SelectedIndices
  nameWithType: ListBox.SelectedIndices
  fullName: System.Windows.Forms.ListBox.SelectedIndices
- uid: System.Windows.Forms.ListBox.SelectedIndexCollection
  parent: System.Windows.Forms
  isExternal: false
  name: ListBox+SelectedIndexCollection
  nameWithType: ListBox+SelectedIndexCollection
  fullName: System.Windows.Forms.ListBox+SelectedIndexCollection
- uid: System.Windows.Forms.ListBox.SelectedItem
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: SelectedItem
  nameWithType: ListBox.SelectedItem
  fullName: System.Windows.Forms.ListBox.SelectedItem
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Forms.ListBox.SelectedItems
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: SelectedItems
  nameWithType: ListBox.SelectedItems
  fullName: System.Windows.Forms.ListBox.SelectedItems
- uid: System.Windows.Forms.ListBox.SelectedObjectCollection
  parent: System.Windows.Forms
  isExternal: false
  name: ListBox+SelectedObjectCollection
  nameWithType: ListBox+SelectedObjectCollection
  fullName: System.Windows.Forms.ListBox+SelectedObjectCollection
- uid: System.Windows.Forms.ListBox.SelectionMode
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: SelectionMode
  nameWithType: ListBox.SelectionMode
  fullName: System.Windows.Forms.ListBox.SelectionMode
- uid: System.Windows.Forms.SelectionMode
  parent: System.Windows.Forms
  isExternal: false
  name: SelectionMode
  nameWithType: SelectionMode
  fullName: System.Windows.Forms.SelectionMode
- uid: System.Windows.Forms.ListBox.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: SetBoundsCore(Int32,Int32,Int32,Int32,BoundsSpecified)
  nameWithType: ListBox.SetBoundsCore(Int32,Int32,Int32,Int32,BoundsSpecified)
  fullName: System.Windows.Forms.ListBox.SetBoundsCore(Int32,Int32,Int32,Int32,BoundsSpecified)
- uid: System.Windows.Forms.ListBox.SetItemCore(System.Int32,System.Object)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: SetItemCore(Int32,Object)
  nameWithType: ListBox.SetItemCore(Int32,Object)
  fullName: System.Windows.Forms.ListBox.SetItemCore(Int32,Object)
- uid: System.Windows.Forms.ListBox.SetItemsCore(System.Collections.IList)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: SetItemsCore(IList)
  nameWithType: ListBox.SetItemsCore(IList)
  fullName: System.Windows.Forms.ListBox.SetItemsCore(IList)
- uid: System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Windows.Forms.ListBox.SetSelected(System.Int32,System.Boolean)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: SetSelected(Int32,Boolean)
  nameWithType: ListBox.SetSelected(Int32,Boolean)
  fullName: System.Windows.Forms.ListBox.SetSelected(Int32,Boolean)
- uid: System.Windows.Forms.ListBox.Sort
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: Sort()
  nameWithType: ListBox.Sort()
  fullName: System.Windows.Forms.ListBox.Sort()
- uid: System.Windows.Forms.ListBox.Sorted
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: Sorted
  nameWithType: ListBox.Sorted
  fullName: System.Windows.Forms.ListBox.Sorted
- uid: System.Windows.Forms.ListBox.Text
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: Text
  nameWithType: ListBox.Text
  fullName: System.Windows.Forms.ListBox.Text
- uid: System.Windows.Forms.ListBox.TextChanged
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: TextChanged
  nameWithType: ListBox.TextChanged
  fullName: System.Windows.Forms.ListBox.TextChanged
- uid: System.Windows.Forms.ListBox.TopIndex
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: TopIndex
  nameWithType: ListBox.TopIndex
  fullName: System.Windows.Forms.ListBox.TopIndex
- uid: System.Windows.Forms.ListBox.ToString
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: ToString()
  nameWithType: ListBox.ToString()
  fullName: System.Windows.Forms.ListBox.ToString()
- uid: System.Windows.Forms.ListBox.UseCustomTabOffsets
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: UseCustomTabOffsets
  nameWithType: ListBox.UseCustomTabOffsets
  fullName: System.Windows.Forms.ListBox.UseCustomTabOffsets
- uid: System.Windows.Forms.ListBox.UseTabStops
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: UseTabStops
  nameWithType: ListBox.UseTabStops
  fullName: System.Windows.Forms.ListBox.UseTabStops
- uid: System.Windows.Forms.ListBox.WmReflectCommand(System.Windows.Forms.Message@)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: WmReflectCommand(Message)
  nameWithType: ListBox.WmReflectCommand(Message)
  fullName: System.Windows.Forms.ListBox.WmReflectCommand(Message)
- uid: System.Windows.Forms.Message
  parent: System.Windows.Forms
  isExternal: false
  name: Message
  nameWithType: Message
  fullName: System.Windows.Forms.Message
- uid: System.Windows.Forms.ListBox.WndProc(System.Windows.Forms.Message@)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: WndProc(Message)
  nameWithType: ListBox.WndProc(Message)
  fullName: System.Windows.Forms.ListBox.WndProc(Message)
- uid: System.Windows.Forms.ListBox.#ctor*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: ListBox
  nameWithType: ListBox.ListBox
- uid: System.Windows.Forms.ListBox.AddItemsCore*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: AddItemsCore
  nameWithType: ListBox.AddItemsCore
- uid: System.Windows.Forms.ListBox.AllowSelection*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: AllowSelection
  nameWithType: ListBox.AllowSelection
- uid: System.Windows.Forms.ListBox.BackColor*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: BackColor
  nameWithType: ListBox.BackColor
- uid: System.Windows.Forms.ListBox.BackgroundImage*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: BackgroundImage
  nameWithType: ListBox.BackgroundImage
- uid: System.Windows.Forms.ListBox.BackgroundImageLayout*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: BackgroundImageLayout
  nameWithType: ListBox.BackgroundImageLayout
- uid: System.Windows.Forms.ListBox.BeginUpdate*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: BeginUpdate
  nameWithType: ListBox.BeginUpdate
- uid: System.Windows.Forms.ListBox.BorderStyle*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: BorderStyle
  nameWithType: ListBox.BorderStyle
- uid: System.Windows.Forms.ListBox.ClearSelected*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: ClearSelected
  nameWithType: ListBox.ClearSelected
- uid: System.Windows.Forms.ListBox.ColumnWidth*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: ColumnWidth
  nameWithType: ListBox.ColumnWidth
- uid: System.Windows.Forms.ListBox.CreateItemCollection*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: CreateItemCollection
  nameWithType: ListBox.CreateItemCollection
- uid: System.Windows.Forms.ListBox.CreateParams*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: CreateParams
  nameWithType: ListBox.CreateParams
- uid: System.Windows.Forms.ListBox.CustomTabOffsets*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: CustomTabOffsets
  nameWithType: ListBox.CustomTabOffsets
- uid: System.Windows.Forms.ListBox.DefaultSize*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: DefaultSize
  nameWithType: ListBox.DefaultSize
- uid: System.Windows.Forms.ListBox.DrawMode*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: DrawMode
  nameWithType: ListBox.DrawMode
- uid: System.Windows.Forms.ListBox.EndUpdate*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: EndUpdate
  nameWithType: ListBox.EndUpdate
- uid: System.Windows.Forms.ListBox.FindString*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: FindString
  nameWithType: ListBox.FindString
- uid: System.Windows.Forms.ListBox.FindStringExact*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: FindStringExact
  nameWithType: ListBox.FindStringExact
- uid: System.Windows.Forms.ListBox.Font*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: Font
  nameWithType: ListBox.Font
- uid: System.Windows.Forms.ListBox.ForeColor*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: ForeColor
  nameWithType: ListBox.ForeColor
- uid: System.Windows.Forms.ListBox.GetItemHeight*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: GetItemHeight
  nameWithType: ListBox.GetItemHeight
- uid: System.Windows.Forms.ListBox.GetItemRectangle*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: GetItemRectangle
  nameWithType: ListBox.GetItemRectangle
- uid: System.Windows.Forms.ListBox.GetScaledBounds*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: GetScaledBounds
  nameWithType: ListBox.GetScaledBounds
- uid: System.Windows.Forms.ListBox.GetSelected*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: GetSelected
  nameWithType: ListBox.GetSelected
- uid: System.Windows.Forms.ListBox.HorizontalExtent*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: HorizontalExtent
  nameWithType: ListBox.HorizontalExtent
- uid: System.Windows.Forms.ListBox.HorizontalScrollbar*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: HorizontalScrollbar
  nameWithType: ListBox.HorizontalScrollbar
- uid: System.Windows.Forms.ListBox.IndexFromPoint*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: IndexFromPoint
  nameWithType: ListBox.IndexFromPoint
- uid: System.Windows.Forms.ListBox.IntegralHeight*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: IntegralHeight
  nameWithType: ListBox.IntegralHeight
- uid: System.Windows.Forms.ListBox.ItemHeight*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: ItemHeight
  nameWithType: ListBox.ItemHeight
- uid: System.Windows.Forms.ListBox.Items*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: Items
  nameWithType: ListBox.Items
- uid: System.Windows.Forms.ListBox.MultiColumn*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: MultiColumn
  nameWithType: ListBox.MultiColumn
- uid: System.Windows.Forms.ListBox.OnChangeUICues*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: OnChangeUICues
  nameWithType: ListBox.OnChangeUICues
- uid: System.Windows.Forms.ListBox.OnDataSourceChanged*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: OnDataSourceChanged
  nameWithType: ListBox.OnDataSourceChanged
- uid: System.Windows.Forms.ListBox.OnDisplayMemberChanged*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: OnDisplayMemberChanged
  nameWithType: ListBox.OnDisplayMemberChanged
- uid: System.Windows.Forms.ListBox.OnDrawItem*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: OnDrawItem
  nameWithType: ListBox.OnDrawItem
- uid: System.Windows.Forms.ListBox.OnFontChanged*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: OnFontChanged
  nameWithType: ListBox.OnFontChanged
- uid: System.Windows.Forms.ListBox.OnHandleCreated*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: OnHandleCreated
  nameWithType: ListBox.OnHandleCreated
- uid: System.Windows.Forms.ListBox.OnHandleDestroyed*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: OnHandleDestroyed
  nameWithType: ListBox.OnHandleDestroyed
- uid: System.Windows.Forms.ListBox.OnMeasureItem*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: OnMeasureItem
  nameWithType: ListBox.OnMeasureItem
- uid: System.Windows.Forms.ListBox.OnParentChanged*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: OnParentChanged
  nameWithType: ListBox.OnParentChanged
- uid: System.Windows.Forms.ListBox.OnResize*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: OnResize
  nameWithType: ListBox.OnResize
- uid: System.Windows.Forms.ListBox.OnSelectedIndexChanged*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: OnSelectedIndexChanged
  nameWithType: ListBox.OnSelectedIndexChanged
- uid: System.Windows.Forms.ListBox.OnSelectedValueChanged*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: OnSelectedValueChanged
  nameWithType: ListBox.OnSelectedValueChanged
- uid: System.Windows.Forms.ListBox.Padding*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: Padding
  nameWithType: ListBox.Padding
- uid: System.Windows.Forms.ListBox.PreferredHeight*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: PreferredHeight
  nameWithType: ListBox.PreferredHeight
- uid: System.Windows.Forms.ListBox.Refresh*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: Refresh
  nameWithType: ListBox.Refresh
- uid: System.Windows.Forms.ListBox.RefreshItem*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: RefreshItem
  nameWithType: ListBox.RefreshItem
- uid: System.Windows.Forms.ListBox.RefreshItems*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: RefreshItems
  nameWithType: ListBox.RefreshItems
- uid: System.Windows.Forms.ListBox.ResetBackColor*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: ResetBackColor
  nameWithType: ListBox.ResetBackColor
- uid: System.Windows.Forms.ListBox.ResetForeColor*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: ResetForeColor
  nameWithType: ListBox.ResetForeColor
- uid: System.Windows.Forms.ListBox.RightToLeft*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: RightToLeft
  nameWithType: ListBox.RightToLeft
- uid: System.Windows.Forms.ListBox.ScaleControl*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: ScaleControl
  nameWithType: ListBox.ScaleControl
- uid: System.Windows.Forms.ListBox.ScrollAlwaysVisible*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: ScrollAlwaysVisible
  nameWithType: ListBox.ScrollAlwaysVisible
- uid: System.Windows.Forms.ListBox.SelectedIndex*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: SelectedIndex
  nameWithType: ListBox.SelectedIndex
- uid: System.Windows.Forms.ListBox.SelectedIndices*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: SelectedIndices
  nameWithType: ListBox.SelectedIndices
- uid: System.Windows.Forms.ListBox.SelectedItem*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: SelectedItem
  nameWithType: ListBox.SelectedItem
- uid: System.Windows.Forms.ListBox.SelectedItems*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: SelectedItems
  nameWithType: ListBox.SelectedItems
- uid: System.Windows.Forms.ListBox.SelectionMode*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: SelectionMode
  nameWithType: ListBox.SelectionMode
- uid: System.Windows.Forms.ListBox.SetBoundsCore*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: SetBoundsCore
  nameWithType: ListBox.SetBoundsCore
- uid: System.Windows.Forms.ListBox.SetItemCore*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: SetItemCore
  nameWithType: ListBox.SetItemCore
- uid: System.Windows.Forms.ListBox.SetItemsCore*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: SetItemsCore
  nameWithType: ListBox.SetItemsCore
- uid: System.Windows.Forms.ListBox.SetSelected*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: SetSelected
  nameWithType: ListBox.SetSelected
- uid: System.Windows.Forms.ListBox.Sort*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: Sort
  nameWithType: ListBox.Sort
- uid: System.Windows.Forms.ListBox.Sorted*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: Sorted
  nameWithType: ListBox.Sorted
- uid: System.Windows.Forms.ListBox.Text*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: Text
  nameWithType: ListBox.Text
- uid: System.Windows.Forms.ListBox.TopIndex*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: TopIndex
  nameWithType: ListBox.TopIndex
- uid: System.Windows.Forms.ListBox.ToString*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: ToString
  nameWithType: ListBox.ToString
- uid: System.Windows.Forms.ListBox.UseCustomTabOffsets*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: UseCustomTabOffsets
  nameWithType: ListBox.UseCustomTabOffsets
- uid: System.Windows.Forms.ListBox.UseTabStops*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: UseTabStops
  nameWithType: ListBox.UseTabStops
- uid: System.Windows.Forms.ListBox.WmReflectCommand*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: WmReflectCommand
  nameWithType: ListBox.WmReflectCommand
- uid: System.Windows.Forms.ListBox.WndProc*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: WndProc
  nameWithType: ListBox.WndProc
