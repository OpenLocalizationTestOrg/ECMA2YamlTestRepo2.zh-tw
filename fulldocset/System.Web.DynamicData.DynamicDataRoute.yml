### YamlMime:ManagedReference
items:
- uid: System.Web.DynamicData.DynamicDataRoute
  id: DynamicDataRoute
  children:
  - System.Web.DynamicData.DynamicDataRoute.#ctor(System.String)
  - System.Web.DynamicData.DynamicDataRoute.Action
  - System.Web.DynamicData.DynamicDataRoute.GetActionFromRouteData(System.Web.Routing.RouteData)
  - System.Web.DynamicData.DynamicDataRoute.GetRouteData(System.Web.HttpContextBase)
  - System.Web.DynamicData.DynamicDataRoute.GetTableFromRouteData(System.Web.Routing.RouteData)
  - System.Web.DynamicData.DynamicDataRoute.GetVirtualPath(System.Web.Routing.RequestContext,System.Web.Routing.RouteValueDictionary)
  - System.Web.DynamicData.DynamicDataRoute.Model
  - System.Web.DynamicData.DynamicDataRoute.RouteHandler
  - System.Web.DynamicData.DynamicDataRoute.Table
  - System.Web.DynamicData.DynamicDataRoute.ViewName
  langs:
  - csharp
  name: DynamicDataRoute
  nameWithType: DynamicDataRoute
  fullName: System.Web.DynamicData.DynamicDataRoute
  type: Class
  summary: "表示 ASP.NET Dynamic Data 所用的路由。"
  remarks: "您可以使用路由來設定動態資料行為。       靜態<xref:System.Web.Routing.RouteTable.Routes%2A>屬性<xref:System.Web.Routing.RouteTable>類型保留之路由的集合。</xref:System.Web.Routing.RouteTable> </xref:System.Web.Routing.RouteTable.Routes%2A> 動態資料，一個或多個路由通常註冊 (加入<xref:System.Web.Routing.RouteTable.Routes%2A>屬性) 在`Application_Start`Global.asax 檔案中的事件。</xref:System.Web.Routing.RouteTable.Routes%2A> 例如，路由會判斷是否應該在同一個資料列的清單頁面上顯示的資料列的詳細資料。 它們也可以決定是否在同一個資料列的一些資料表，而非其他的清單頁面上顯示詳細資料。       您設定<xref:System.Web.DynamicData.DynamicDataRoute.Action%2A>， <xref:System.Web.DynamicData.DynamicDataRoute.ViewName%2A>， <xref:System.Web.DynamicData.DynamicDataRoute.Table%2A>，和<xref:System.Web.DynamicData.DynamicDataRoute.Model%2A>屬性提供的模式中的 URL 和<xref:System.Web.Routing.Route.%23ctor%2A>建構函式。</xref:System.Web.Routing.Route.%23ctor%2A> </xref:System.Web.DynamicData.DynamicDataRoute.Model%2A> </xref:System.Web.DynamicData.DynamicDataRoute.Table%2A> </xref:System.Web.DynamicData.DynamicDataRoute.ViewName%2A> </xref:System.Web.DynamicData.DynamicDataRoute.Action%2A>       動態資料會使用您提供比對要求的 URL 模式和建立 Url 的 URL 模式。 如需詳細資訊，請參閱<xref:System.Web.DynamicData.DynamicDataRoute.%23ctor%2A>.</xref:System.Web.DynamicData.DynamicDataRoute.%23ctor%2A>"
  syntax:
    content: 'public class DynamicDataRoute : System.Web.Routing.Route'
  inheritance:
  - System.Web.Routing.Route
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicDataRoute.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Web.DynamicData.DynamicDataRoute
  langs:
  - csharp
  name: DynamicDataRoute(String)
  nameWithType: DynamicDataRoute.DynamicDataRoute(String)
  fullName: System.Web.DynamicData.DynamicDataRoute.DynamicDataRoute(String)
  type: Constructor
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "初始化的新執行個體<xref href=&quot;System.Web.DynamicData.DynamicDataRoute&quot;></xref>使用指定的 URL 模式的類別。"
  remarks: "一般而言，您可以指定使用替代參數將會建立動態資料的 Url。 比方說，如果您傳遞字串&quot;{table} / {action}&quot;，結果會是 URL&quot;~ / Products/ListDetails.aspx 」 使用 ListDetails 動作檢視 產品 資料表時。       使用替代參數就不需要。 您可以傳遞字串&quot;資料表/動態&quot;，會產生&quot;~ / Table/DynamicData.aspx&quot;。 您可以傳遞 「 MyPageName&quot;以產生&quot;~ / MyPageName.aspx&quot;。 動態資料不會依賴 URL，以判斷資料表和動作的資訊。"
  syntax:
    content: public DynamicDataRoute (string url);
    parameters:
    - id: url
      type: System.String
      description: "Url 模式。"
  overload: System.Web.DynamicData.DynamicDataRoute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicDataRoute.Action
  id: Action
  parent: System.Web.DynamicData.DynamicDataRoute
  langs:
  - csharp
  name: Action
  nameWithType: DynamicDataRoute.Action
  fullName: System.Web.DynamicData.DynamicDataRoute.Action
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "取得或設定路由動作的名稱。"
  remarks: "如需可能的動作名稱的清單，請參閱<xref:System.Web.DynamicData.PageAction?displayProperty=fullName>.</xref:System.Web.DynamicData.PageAction?displayProperty=fullName> 當您建立的執行個體如果您未設定這個屬性<xref:System.Web.DynamicData.DynamicDataRoute>，路由會套用至所有動作。</xref:System.Web.DynamicData.DynamicDataRoute>"
  syntax:
    content: public string Action { get; set; }
    return:
      type: System.String
      description: "路由動作名稱。"
  overload: System.Web.DynamicData.DynamicDataRoute.Action*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicDataRoute.GetActionFromRouteData(System.Web.Routing.RouteData)
  id: GetActionFromRouteData(System.Web.Routing.RouteData)
  parent: System.Web.DynamicData.DynamicDataRoute
  langs:
  - csharp
  name: GetActionFromRouteData(RouteData)
  nameWithType: DynamicDataRoute.GetActionFromRouteData(RouteData)
  fullName: System.Web.DynamicData.DynamicDataRoute.GetActionFromRouteData(RouteData)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "傳回從動作<xref:System.Web.Routing.RouteData>物件目前的動態資料的 Web 要求。</xref:System.Web.Routing.RouteData>"
  syntax:
    content: public string GetActionFromRouteData (System.Web.Routing.RouteData routeData);
    parameters:
    - id: routeData
      type: System.Web.Routing.RouteData
      description: "適用於目前要求的路由資料。 如需詳細資訊，請參閱<xref:System.Web.DynamicData.DynamicDataRoute.GetRouteData*>.</xref:System.Web.DynamicData.DynamicDataRoute.GetRouteData*>"
    return:
      type: System.String
      description: "動作。 如需可能值的清單，請參閱<xref href=&quot;System.Web.DynamicData.PageAction&quot;> </xref>。"
  overload: System.Web.DynamicData.DynamicDataRoute.GetActionFromRouteData*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "在 Web 要求的路由資訊中找不到動作。"
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicDataRoute.GetRouteData(System.Web.HttpContextBase)
  id: GetRouteData(System.Web.HttpContextBase)
  parent: System.Web.DynamicData.DynamicDataRoute
  langs:
  - csharp
  name: GetRouteData(HttpContextBase)
  nameWithType: DynamicDataRoute.GetRouteData(HttpContextBase)
  fullName: System.Web.DynamicData.DynamicDataRoute.GetRouteData(HttpContextBase)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "傳回特定的 Web 要求的路由資訊。"
  remarks: "`httpContext`參數提供，如此就可以識別要求的資料表和動作所需的 Web 要求資訊。"
  syntax:
    content: public override System.Web.Routing.RouteData GetRouteData (System.Web.HttpContextBase httpContext);
    parameters:
    - id: httpContext
      type: System.Web.HttpContextBase
      description: "包含 Web 要求的相關資訊。"
    return:
      type: System.Web.Routing.RouteData
      description: "Web 要求的路由資訊。"
  overload: System.Web.DynamicData.DynamicDataRoute.GetRouteData*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicDataRoute.GetTableFromRouteData(System.Web.Routing.RouteData)
  id: GetTableFromRouteData(System.Web.Routing.RouteData)
  parent: System.Web.DynamicData.DynamicDataRoute
  langs:
  - csharp
  name: GetTableFromRouteData(RouteData)
  nameWithType: DynamicDataRoute.GetTableFromRouteData(RouteData)
  fullName: System.Web.DynamicData.DynamicDataRoute.GetTableFromRouteData(RouteData)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "識別與動態資料網站頁面要求相關聯的資料表。"
  syntax:
    content: public System.Web.DynamicData.MetaTable GetTableFromRouteData (System.Web.Routing.RouteData routeData);
    parameters:
    - id: routeData
      type: System.Web.Routing.RouteData
      description: "適用於目前要求的路由資料。 如需詳細資訊，請參閱<xref:System.Web.DynamicData.DynamicDataRoute.GetRouteData*>.</xref:System.Web.DynamicData.DynamicDataRoute.GetRouteData*>"
    return:
      type: System.Web.DynamicData.MetaTable
      description: "描述會顯示動態資料的資料表的中繼資料。"
  overload: System.Web.DynamicData.DynamicDataRoute.GetTableFromRouteData*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "在 Web 要求的路由資訊中找不到資料表。"
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicDataRoute.GetVirtualPath(System.Web.Routing.RequestContext,System.Web.Routing.RouteValueDictionary)
  id: GetVirtualPath(System.Web.Routing.RequestContext,System.Web.Routing.RouteValueDictionary)
  parent: System.Web.DynamicData.DynamicDataRoute
  langs:
  - csharp
  name: GetVirtualPath(RequestContext,RouteValueDictionary)
  nameWithType: DynamicDataRoute.GetVirtualPath(RequestContext,RouteValueDictionary)
  fullName: System.Web.DynamicData.DynamicDataRoute.GetVirtualPath(RequestContext,RouteValueDictionary)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "傳回虛擬路徑的路由。"
  syntax:
    content: public override System.Web.Routing.VirtualPathData GetVirtualPath (System.Web.Routing.RequestContext requestContext, System.Web.Routing.RouteValueDictionary values);
    parameters:
    - id: requestContext
      type: System.Web.Routing.RequestContext
      description: "包含 Web 要求的相關資訊。"
    - id: values
      type: System.Web.Routing.RouteValueDictionary
      description: "目前應用程式的路由物件的集合。"
    return:
      type: System.Web.Routing.VirtualPathData
      description: "虛擬路徑。"
  overload: System.Web.DynamicData.DynamicDataRoute.GetVirtualPath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicDataRoute.Model
  id: Model
  parent: System.Web.DynamicData.DynamicDataRoute
  langs:
  - csharp
  name: Model
  nameWithType: DynamicDataRoute.Model
  fullName: System.Web.DynamicData.DynamicDataRoute.Model
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "取得或設定要套用路由的資料模型。"
  remarks: "當您建立的執行個體如果您未設定這個屬性<xref:System.Web.DynamicData.DynamicDataRoute>，針對已註冊的預設模型<xref:System.Data.Linq.DataContext>會使用執行個體。</xref:System.Data.Linq.DataContext> </xref:System.Web.DynamicData.DynamicDataRoute>"
  syntax:
    content: public System.Web.DynamicData.MetaModel Model { get; set; }
    return:
      type: System.Web.DynamicData.MetaModel
      description: "若要套用的路由資料模型中繼資料。"
  overload: System.Web.DynamicData.DynamicDataRoute.Model*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicDataRoute.RouteHandler
  id: RouteHandler
  parent: System.Web.DynamicData.DynamicDataRoute
  langs:
  - csharp
  name: RouteHandler
  nameWithType: DynamicDataRoute.RouteHandler
  fullName: System.Web.DynamicData.DynamicDataRoute.RouteHandler
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "取得或設定處理路由要求的物件。"
  remarks: "RouteHandler 屬性等同於<xref:System.Web.Routing.Route.RouteHandler%2A?displayProperty=fullName>屬性。</xref:System.Web.Routing.Route.RouteHandler%2A?displayProperty=fullName> 提供強類型版本<xref:System.Web.Routing.Route.RouteHandler%2A?displayProperty=fullName>方便撰寫程式碼的屬性。</xref:System.Web.Routing.Route.RouteHandler%2A?displayProperty=fullName>"
  syntax:
    content: public System.Web.DynamicData.DynamicDataRouteHandler RouteHandler { get; set; }
    return:
      type: System.Web.DynamicData.DynamicDataRouteHandler
      description: "用來處理路由要求的處理常式。"
  overload: System.Web.DynamicData.DynamicDataRoute.RouteHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicDataRoute.Table
  id: Table
  parent: System.Web.DynamicData.DynamicDataRoute
  langs:
  - csharp
  name: Table
  nameWithType: DynamicDataRoute.Table
  fullName: System.Web.DynamicData.DynamicDataRoute.Table
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "取得或設定路由的資料表名稱。"
  remarks: "如果當您建立的<xref:System.Web.DynamicData.DynamicDataRoute>路由會套用至<xref:System.Web.DynamicData.DynamicDataRoute.Model%2A>.</xref:System.Web.DynamicData.DynamicDataRoute.Model%2A>以資料模型中的所有資料表</xref:System.Web.DynamicData.DynamicDataRoute>執行個體未設定這個屬性"
  syntax:
    content: public string Table { get; set; }
    return:
      type: System.String
      description: "與路由相關聯的資料表名稱。"
  overload: System.Web.DynamicData.DynamicDataRoute.Table*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicDataRoute.ViewName
  id: ViewName
  parent: System.Web.DynamicData.DynamicDataRoute
  langs:
  - csharp
  name: ViewName
  nameWithType: DynamicDataRoute.ViewName
  fullName: System.Web.DynamicData.DynamicDataRoute.ViewName
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "取得或設定與路由相關聯的.aspx 頁面的名稱。"
  remarks: "動態資料會使用數個標準的.aspx 頁面名稱建立 UI，以讓使用者檢視、 更新和刪除資料，從給定的資料表。 這些頁面名稱包含 List.aspx、 Details.aspx、 Edit.aspx、 Insert.aspx 和 ListDetails.aspx。 ViewName 屬性會指定其中一個這些網頁應該使用給定的資料表和動作。"
  syntax:
    content: public string ViewName { get; set; }
    return:
      type: System.String
      description: "與路由相關聯的.aspx 頁面名稱。 如果沒有指定頁路由，屬性會傳回<xref:System.Web.DynamicData.DynamicDataRoute.Action*>與&quot;.aspx&quot;附加至該屬性</xref:System.Web.DynamicData.DynamicDataRoute.Action*>的值"
  overload: System.Web.DynamicData.DynamicDataRoute.ViewName*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.Routing.Route
  isExternal: false
  name: System.Web.Routing.Route
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Web.DynamicData.DynamicDataRoute.#ctor(System.String)
  parent: System.Web.DynamicData.DynamicDataRoute
  isExternal: false
  name: DynamicDataRoute(String)
  nameWithType: DynamicDataRoute.DynamicDataRoute(String)
  fullName: System.Web.DynamicData.DynamicDataRoute.DynamicDataRoute(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.DynamicData.DynamicDataRoute.Action
  parent: System.Web.DynamicData.DynamicDataRoute
  isExternal: false
  name: Action
  nameWithType: DynamicDataRoute.Action
  fullName: System.Web.DynamicData.DynamicDataRoute.Action
- uid: System.Web.DynamicData.DynamicDataRoute.GetActionFromRouteData(System.Web.Routing.RouteData)
  parent: System.Web.DynamicData.DynamicDataRoute
  isExternal: false
  name: GetActionFromRouteData(RouteData)
  nameWithType: DynamicDataRoute.GetActionFromRouteData(RouteData)
  fullName: System.Web.DynamicData.DynamicDataRoute.GetActionFromRouteData(RouteData)
- uid: System.Web.Routing.RouteData
  parent: System.Web.Routing
  isExternal: true
  name: RouteData
  nameWithType: RouteData
  fullName: System.Web.Routing.RouteData
- uid: System.Web.DynamicData.DynamicDataRoute.GetRouteData(System.Web.HttpContextBase)
  parent: System.Web.DynamicData.DynamicDataRoute
  isExternal: false
  name: GetRouteData(HttpContextBase)
  nameWithType: DynamicDataRoute.GetRouteData(HttpContextBase)
  fullName: System.Web.DynamicData.DynamicDataRoute.GetRouteData(HttpContextBase)
- uid: System.Web.HttpContextBase
  parent: System.Web
  isExternal: true
  name: HttpContextBase
  nameWithType: HttpContextBase
  fullName: System.Web.HttpContextBase
- uid: System.Web.DynamicData.DynamicDataRoute.GetTableFromRouteData(System.Web.Routing.RouteData)
  parent: System.Web.DynamicData.DynamicDataRoute
  isExternal: false
  name: GetTableFromRouteData(RouteData)
  nameWithType: DynamicDataRoute.GetTableFromRouteData(RouteData)
  fullName: System.Web.DynamicData.DynamicDataRoute.GetTableFromRouteData(RouteData)
- uid: System.Web.DynamicData.MetaTable
  parent: System.Web.DynamicData
  isExternal: false
  name: MetaTable
  nameWithType: MetaTable
  fullName: System.Web.DynamicData.MetaTable
- uid: System.Web.DynamicData.DynamicDataRoute.GetVirtualPath(System.Web.Routing.RequestContext,System.Web.Routing.RouteValueDictionary)
  parent: System.Web.DynamicData.DynamicDataRoute
  isExternal: false
  name: GetVirtualPath(RequestContext,RouteValueDictionary)
  nameWithType: DynamicDataRoute.GetVirtualPath(RequestContext,RouteValueDictionary)
  fullName: System.Web.DynamicData.DynamicDataRoute.GetVirtualPath(RequestContext,RouteValueDictionary)
- uid: System.Web.Routing.VirtualPathData
  parent: System.Web.Routing
  isExternal: true
  name: VirtualPathData
  nameWithType: VirtualPathData
  fullName: System.Web.Routing.VirtualPathData
- uid: System.Web.Routing.RequestContext
  parent: System.Web.Routing
  isExternal: true
  name: RequestContext
  nameWithType: RequestContext
  fullName: System.Web.Routing.RequestContext
- uid: System.Web.Routing.RouteValueDictionary
  parent: System.Web.Routing
  isExternal: true
  name: RouteValueDictionary
  nameWithType: RouteValueDictionary
  fullName: System.Web.Routing.RouteValueDictionary
- uid: System.Web.DynamicData.DynamicDataRoute.Model
  parent: System.Web.DynamicData.DynamicDataRoute
  isExternal: false
  name: Model
  nameWithType: DynamicDataRoute.Model
  fullName: System.Web.DynamicData.DynamicDataRoute.Model
- uid: System.Web.DynamicData.MetaModel
  parent: System.Web.DynamicData
  isExternal: false
  name: MetaModel
  nameWithType: MetaModel
  fullName: System.Web.DynamicData.MetaModel
- uid: System.Web.DynamicData.DynamicDataRoute.RouteHandler
  parent: System.Web.DynamicData.DynamicDataRoute
  isExternal: false
  name: RouteHandler
  nameWithType: DynamicDataRoute.RouteHandler
  fullName: System.Web.DynamicData.DynamicDataRoute.RouteHandler
- uid: System.Web.DynamicData.DynamicDataRouteHandler
  parent: System.Web.DynamicData
  isExternal: false
  name: DynamicDataRouteHandler
  nameWithType: DynamicDataRouteHandler
  fullName: System.Web.DynamicData.DynamicDataRouteHandler
- uid: System.Web.DynamicData.DynamicDataRoute.Table
  parent: System.Web.DynamicData.DynamicDataRoute
  isExternal: false
  name: Table
  nameWithType: DynamicDataRoute.Table
  fullName: System.Web.DynamicData.DynamicDataRoute.Table
- uid: System.Web.DynamicData.DynamicDataRoute.ViewName
  parent: System.Web.DynamicData.DynamicDataRoute
  isExternal: false
  name: ViewName
  nameWithType: DynamicDataRoute.ViewName
  fullName: System.Web.DynamicData.DynamicDataRoute.ViewName
- uid: System.Web.DynamicData.DynamicDataRoute.#ctor*
  parent: System.Web.DynamicData.DynamicDataRoute
  isExternal: false
  name: DynamicDataRoute
  nameWithType: DynamicDataRoute.DynamicDataRoute
- uid: System.Web.DynamicData.DynamicDataRoute.Action*
  parent: System.Web.DynamicData.DynamicDataRoute
  isExternal: false
  name: Action
  nameWithType: DynamicDataRoute.Action
- uid: System.Web.DynamicData.DynamicDataRoute.GetActionFromRouteData*
  parent: System.Web.DynamicData.DynamicDataRoute
  isExternal: false
  name: GetActionFromRouteData
  nameWithType: DynamicDataRoute.GetActionFromRouteData
- uid: System.Web.DynamicData.DynamicDataRoute.GetRouteData*
  parent: System.Web.DynamicData.DynamicDataRoute
  isExternal: false
  name: GetRouteData
  nameWithType: DynamicDataRoute.GetRouteData
- uid: System.Web.DynamicData.DynamicDataRoute.GetTableFromRouteData*
  parent: System.Web.DynamicData.DynamicDataRoute
  isExternal: false
  name: GetTableFromRouteData
  nameWithType: DynamicDataRoute.GetTableFromRouteData
- uid: System.Web.DynamicData.DynamicDataRoute.GetVirtualPath*
  parent: System.Web.DynamicData.DynamicDataRoute
  isExternal: false
  name: GetVirtualPath
  nameWithType: DynamicDataRoute.GetVirtualPath
- uid: System.Web.DynamicData.DynamicDataRoute.Model*
  parent: System.Web.DynamicData.DynamicDataRoute
  isExternal: false
  name: Model
  nameWithType: DynamicDataRoute.Model
- uid: System.Web.DynamicData.DynamicDataRoute.RouteHandler*
  parent: System.Web.DynamicData.DynamicDataRoute
  isExternal: false
  name: RouteHandler
  nameWithType: DynamicDataRoute.RouteHandler
- uid: System.Web.DynamicData.DynamicDataRoute.Table*
  parent: System.Web.DynamicData.DynamicDataRoute
  isExternal: false
  name: Table
  nameWithType: DynamicDataRoute.Table
- uid: System.Web.DynamicData.DynamicDataRoute.ViewName*
  parent: System.Web.DynamicData.DynamicDataRoute
  isExternal: false
  name: ViewName
  nameWithType: DynamicDataRoute.ViewName
