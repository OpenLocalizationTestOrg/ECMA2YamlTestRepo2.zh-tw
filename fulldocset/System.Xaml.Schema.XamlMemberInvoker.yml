### YamlMime:ManagedReference
items:
- uid: System.Xaml.Schema.XamlMemberInvoker
  id: XamlMemberInvoker
  children:
  - System.Xaml.Schema.XamlMemberInvoker.#ctor
  - System.Xaml.Schema.XamlMemberInvoker.#ctor(System.Xaml.XamlMember)
  - System.Xaml.Schema.XamlMemberInvoker.GetValue(System.Object)
  - System.Xaml.Schema.XamlMemberInvoker.SetValue(System.Object,System.Object)
  - System.Xaml.Schema.XamlMemberInvoker.ShouldSerializeValue(System.Object)
  - System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter
  - System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter
  - System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker
  langs:
  - csharp
  name: XamlMemberInvoker
  nameWithType: XamlMemberInvoker
  fullName: System.Xaml.Schema.XamlMemberInvoker
  type: Class
  summary: "提供擴充點，可以透過反映以外的技術來存取 XAML 成員的成員特性。"
  remarks: "XamlMemberInvoker 的目的是要啟用可延伸的 XAML 類型系統、 架構以及工作執行不會依賴完全 CLR 功能，例如 CLR 屬性，透過反映資訊的時間<xref:System.Type>和<xref:System.Reflection.MemberInfo>，依此類推。</xref:System.Reflection.MemberInfo> </xref:System.Type> XamlMemberInvoker 的子類別可用做為輸入參數的替代例如<xref:System.Xaml.XamlMember>.</xref:System.Xaml.XamlMember> XAML 結構描述類別的建構函式 您的子類別<xref:System.Xaml.XamlMember>並將透過 XamlMemberInvoker 傳遞給基底建構函式。</xref:System.Xaml.XamlMember> 以及定義 XamlMemberInvoker 建構函式，您也必須提供的覆寫至少部分`Lookup` <xref:System.Xaml.XamlMember>.</xref:System.Xaml.XamlMember>方法       XamlMemberInvoker 其預設實作。 預設實作會遵循類似的模型至 XAML 結構描述類型的預設實作<xref:System.Xaml.XamlType>和<xref:System.Xaml.XamlMember>: CLR 型別系統用於具現化、 值和查閱而言，包括使用 CLR 屬性<xref:System.Type>和<xref:System.Reflection.MemberInfo>，依此類推。</xref:System.Reflection.MemberInfo> </xref:System.Type> </xref:System.Xaml.XamlMember> </xref:System.Xaml.XamlType>       XamlMemberInvoker 提供基本的 get 和 set 作業 (<xref:System.Xaml.Schema.XamlMemberInvoker.GetValue%2A>; 方法<xref:System.Xaml.Schema.XamlMemberInvoker.SetValue%2A>).</xref:System.Xaml.Schema.XamlMemberInvoker.SetValue%2A></xref:System.Xaml.Schema.XamlMemberInvoker.GetValue%2A> 它也提供屬性<xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter%2A>和<xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter%2A>，但這些不是虛擬。</xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter%2A> </xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter%2A>      > [!NOTE] > 可能取得 XamlMemberInvoker 值代表 XAML 指示詞，它會實作為私用類別在 System.Xaml 實作。 如果您嘗試呼叫<xref:System.Xaml.Schema.XamlMemberInvoker.GetValue%2A>或<xref:System.Xaml.Schema.XamlMemberInvoker.SetValue%2A>上這個啟動程式，會擲回例外狀況。</xref:System.Xaml.Schema.XamlMemberInvoker.SetValue%2A> </xref:System.Xaml.Schema.XamlMemberInvoker.GetValue%2A>"
  syntax:
    content: public class XamlMemberInvoker
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xaml.Schema.XamlMemberInvoker.#ctor
  id: '#ctor'
  parent: System.Xaml.Schema.XamlMemberInvoker
  langs:
  - csharp
  name: XamlMemberInvoker()
  nameWithType: XamlMemberInvoker.XamlMemberInvoker()
  fullName: System.Xaml.Schema.XamlMemberInvoker.XamlMemberInvoker()
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Schema
  summary: "初始化的新執行個體<xref href=&quot;System.Xaml.Schema.XamlMemberInvoker&quot;></xref>類別。"
  remarks: "預設實作是空的。       這個建構函式是在內部叫用<xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A>。</xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A>提供的值 如<xref:System.Xaml.Schema.XamlMemberInvoker>子類別，請使用<xref:System.Xaml.Schema.XamlMemberInvoker.%23ctor%28System.Xaml.XamlMember%29>建構簽章或提供的覆寫呼叫<xref:System.Xaml.Schema.XamlMemberInvoker.%23ctor%28System.Xaml.XamlMember%29>做為基底。</xref:System.Xaml.Schema.XamlMemberInvoker.%23ctor%28System.Xaml.XamlMember%29> </xref:System.Xaml.Schema.XamlMemberInvoker.%23ctor%28System.Xaml.XamlMember%29> </xref:System.Xaml.Schema.XamlMemberInvoker> 提供<xref:System.Xaml.XamlMember>實作的預設模式 where<xref:System.Xaml.Schema.XamlMemberInvoker>是不變。</xref:System.Xaml.Schema.XamlMemberInvoker> </xref:System.Xaml.XamlMember>"
  syntax:
    content: protected XamlMemberInvoker ();
    parameters: []
  overload: System.Xaml.Schema.XamlMemberInvoker.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.Schema.XamlMemberInvoker.#ctor(System.Xaml.XamlMember)
  id: '#ctor(System.Xaml.XamlMember)'
  parent: System.Xaml.Schema.XamlMemberInvoker
  langs:
  - csharp
  name: XamlMemberInvoker(XamlMember)
  nameWithType: XamlMemberInvoker.XamlMemberInvoker(XamlMember)
  fullName: System.Xaml.Schema.XamlMemberInvoker.XamlMemberInvoker(XamlMember)
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Schema
  summary: "初始化的新執行個體<xref href=&quot;System.Xaml.Schema.XamlMemberInvoker&quot;></xref>類別，根據提供<xref href=&quot;System.Xaml.XamlMember&quot;> </xref>。"
  remarks: "這個建構函式會呼叫在內部根據<xref:System.Xaml.XamlMember>其中<xref:System.Xaml.Schema.XamlMemberInvoker>用於建構。</xref:System.Xaml.Schema.XamlMemberInvoker> </xref:System.Xaml.XamlMember>"
  syntax:
    content: public XamlMemberInvoker (System.Xaml.XamlMember member);
    parameters:
    - id: member
      type: System.Xaml.XamlMember
      description: "<xref href=&quot;System.Xaml.XamlMember&quot;> </xref>適用於此特定的 XAML 成員值<xref href=&quot;System.Xaml.Schema.XamlMemberInvoker&quot;> </xref>。"
  overload: System.Xaml.Schema.XamlMemberInvoker.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>member</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Xaml.Schema.XamlMemberInvoker.GetValue(System.Object)
  id: GetValue(System.Object)
  parent: System.Xaml.Schema.XamlMemberInvoker
  langs:
  - csharp
  name: GetValue(Object)
  nameWithType: XamlMemberInvoker.GetValue(Object)
  fullName: System.Xaml.Schema.XamlMemberInvoker.GetValue(Object)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Schema
  summary: "取得相關屬性的值從執行個體。"
  syntax:
    content: public virtual object GetValue (object instance);
    parameters:
    - id: instance
      type: System.Object
      description: "成員的擁有者類型的執行個體。"
    return:
      type: System.Object
      description: "要求的屬性值。"
  overload: System.Xaml.Schema.XamlMemberInvoker.GetValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>instance</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "這個方法在叫用<xref href=&quot;System.Xaml.Schema.XamlMemberInvoker&quot;></xref>根據未知<xref href=&quot;System.Xaml.XamlMember&quot;> </xref>。       **-或-**叫用這個方法在唯寫的成員。       **-or-**       <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter*> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.</xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter*>"
  platform:
  - net462
- uid: System.Xaml.Schema.XamlMemberInvoker.SetValue(System.Object,System.Object)
  id: SetValue(System.Object,System.Object)
  parent: System.Xaml.Schema.XamlMemberInvoker
  langs:
  - csharp
  name: SetValue(Object,Object)
  nameWithType: XamlMemberInvoker.SetValue(Object,Object)
  fullName: System.Xaml.Schema.XamlMemberInvoker.SetValue(Object,Object)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Schema
  summary: "執行個體上設定相關屬性的值。"
  syntax:
    content: public virtual void SetValue (object instance, object value);
    parameters:
    - id: instance
      type: System.Object
      description: "成員的擁有者類型的執行個體。"
    - id: value
      type: System.Object
      description: "要設定的屬性值。"
  overload: System.Xaml.Schema.XamlMemberInvoker.SetValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>instance</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "這個方法在叫用<xref href=&quot;System.Xaml.Schema.XamlMemberInvoker&quot;></xref>根據未知<xref href=&quot;System.Xaml.XamlMember&quot;> </xref>。       **-或-**叫用唯讀成員上的這個方法。       **-or-**       <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter*> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.</xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter*>"
  platform:
  - net462
- uid: System.Xaml.Schema.XamlMemberInvoker.ShouldSerializeValue(System.Object)
  id: ShouldSerializeValue(System.Object)
  parent: System.Xaml.Schema.XamlMemberInvoker
  langs:
  - csharp
  name: ShouldSerializeValue(Object)
  nameWithType: XamlMemberInvoker.ShouldSerializeValue(Object)
  fullName: System.Xaml.Schema.XamlMemberInvoker.ShouldSerializeValue(Object)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Schema
  summary: "指出值是否需要保存序列化程序。"
  remarks: "預設實作會傳回<xref:System.Xaml.Schema.ShouldSerializeResult>如果 XAML 成員本身為<xref:System.Xaml.XamlMember.IsUnknown%2A>，或如果沒有 CLR 反映相關`ShouldSerialize`預設反映透過基礎成員上找不到方法。</xref:System.Xaml.XamlMember.IsUnknown%2A> </xref:System.Xaml.Schema.ShouldSerializeResult>"
  syntax:
    content: public virtual System.Xaml.Schema.ShouldSerializeResult ShouldSerializeValue (object instance);
    parameters:
    - id: instance
      type: System.Object
      description: "具有要檢查的持續性屬性的執行個體。"
    return:
      type: System.Xaml.Schema.ShouldSerializeResult
      description: "列舉值。"
  overload: System.Xaml.Schema.XamlMemberInvoker.ShouldSerializeValue*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter
  id: UnderlyingGetter
  parent: System.Xaml.Schema.XamlMemberInvoker
  langs:
  - csharp
  name: UnderlyingGetter
  nameWithType: XamlMemberInvoker.UnderlyingGetter
  fullName: System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Schema
  summary: "取得<xref:System.Reflection.MethodInfo>為 clr 屬性取得值的方法是相關這個<xref href=&quot;System.Xaml.Schema.XamlMemberInvoker&quot;> </xref>。</xref:System.Reflection.MethodInfo>"
  remarks: "此屬性依賴<xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>於建構<xref:System.Xaml.XamlMember>。</xref:System.Xaml.XamlMember></xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>呼叫 未知的<xref:System.Xaml.XamlMember>，或者是其中<xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>傳回`null`，這個屬性會傳回`null`。</xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A> </xref:System.Xaml.XamlMember>"
  syntax:
    content: public System.Reflection.MethodInfo UnderlyingGetter { get; }
    return:
      type: System.Reflection.MethodInfo
      description: "<xref:System.Reflection.MethodInfo>為 clr 屬性取得值的方法是相關這個<xref href=&quot;System.Xaml.Schema.XamlMemberInvoker&quot;> </xref>，或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。</xref:System.Reflection.MethodInfo>"
  overload: System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter
  id: UnderlyingSetter
  parent: System.Xaml.Schema.XamlMemberInvoker
  langs:
  - csharp
  name: UnderlyingSetter
  nameWithType: XamlMemberInvoker.UnderlyingSetter
  fullName: System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Schema
  summary: "取得<xref:System.Reflection.MethodInfo>CLR 設定屬性值的方法是相關這個<xref href=&quot;System.Xaml.Schema.XamlMemberInvoker&quot;> </xref>。</xref:System.Reflection.MethodInfo>"
  remarks: "此屬性依賴<xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>於建構<xref:System.Xaml.XamlMember>。</xref:System.Xaml.XamlMember></xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>呼叫 未知的<xref:System.Xaml.XamlMember>，或者是其中<xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>傳回`null`，這個屬性會傳回`null`。</xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A> </xref:System.Xaml.XamlMember>"
  syntax:
    content: public System.Reflection.MethodInfo UnderlyingSetter { get; }
    return:
      type: System.Reflection.MethodInfo
      description: "<xref:System.Reflection.MethodInfo>CLR 設定屬性值的方法是相關這個<xref href=&quot;System.Xaml.Schema.XamlMemberInvoker&quot;> </xref>，或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。</xref:System.Reflection.MethodInfo>"
  overload: System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker
  id: UnknownInvoker
  parent: System.Xaml.Schema.XamlMemberInvoker
  langs:
  - csharp
  name: UnknownInvoker
  nameWithType: XamlMemberInvoker.UnknownInvoker
  fullName: System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Schema
  summary: "提供靜態值，表示未知且未完整實作<xref href=&quot;System.Xaml.Schema.XamlMemberInvoker&quot;> </xref>。"
  remarks: "提供此值<xref:System.Xaml.Schema.XamlMemberInvoker>System.Xaml 參數定義 API 通常會導致擲回例外狀況呼叫的程式碼。</xref:System.Xaml.Schema.XamlMemberInvoker>"
  syntax:
    content: public static System.Xaml.Schema.XamlMemberInvoker UnknownInvoker { get; }
    return:
      type: System.Xaml.Schema.XamlMemberInvoker
      description: "表示未知且未完全實作的靜態值<xref href=&quot;System.Xaml.Schema.XamlMemberInvoker&quot;> </xref>。"
  overload: System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Xaml.Schema.XamlMemberInvoker.#ctor
  parent: System.Xaml.Schema.XamlMemberInvoker
  isExternal: false
  name: XamlMemberInvoker()
  nameWithType: XamlMemberInvoker.XamlMemberInvoker()
  fullName: System.Xaml.Schema.XamlMemberInvoker.XamlMemberInvoker()
- uid: System.Xaml.Schema.XamlMemberInvoker.#ctor(System.Xaml.XamlMember)
  parent: System.Xaml.Schema.XamlMemberInvoker
  isExternal: false
  name: XamlMemberInvoker(XamlMember)
  nameWithType: XamlMemberInvoker.XamlMemberInvoker(XamlMember)
  fullName: System.Xaml.Schema.XamlMemberInvoker.XamlMemberInvoker(XamlMember)
- uid: System.Xaml.XamlMember
  parent: System.Xaml
  isExternal: false
  name: XamlMember
  nameWithType: XamlMember
  fullName: System.Xaml.XamlMember
- uid: System.Xaml.Schema.XamlMemberInvoker.GetValue(System.Object)
  parent: System.Xaml.Schema.XamlMemberInvoker
  isExternal: false
  name: GetValue(Object)
  nameWithType: XamlMemberInvoker.GetValue(Object)
  fullName: System.Xaml.Schema.XamlMemberInvoker.GetValue(Object)
- uid: System.Xaml.Schema.XamlMemberInvoker.SetValue(System.Object,System.Object)
  parent: System.Xaml.Schema.XamlMemberInvoker
  isExternal: false
  name: SetValue(Object,Object)
  nameWithType: XamlMemberInvoker.SetValue(Object,Object)
  fullName: System.Xaml.Schema.XamlMemberInvoker.SetValue(Object,Object)
- uid: System.Xaml.Schema.XamlMemberInvoker.ShouldSerializeValue(System.Object)
  parent: System.Xaml.Schema.XamlMemberInvoker
  isExternal: false
  name: ShouldSerializeValue(Object)
  nameWithType: XamlMemberInvoker.ShouldSerializeValue(Object)
  fullName: System.Xaml.Schema.XamlMemberInvoker.ShouldSerializeValue(Object)
- uid: System.Xaml.Schema.ShouldSerializeResult
  parent: System.Xaml.Schema
  isExternal: false
  name: ShouldSerializeResult
  nameWithType: ShouldSerializeResult
  fullName: System.Xaml.Schema.ShouldSerializeResult
- uid: System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter
  parent: System.Xaml.Schema.XamlMemberInvoker
  isExternal: false
  name: UnderlyingGetter
  nameWithType: XamlMemberInvoker.UnderlyingGetter
  fullName: System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: true
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter
  parent: System.Xaml.Schema.XamlMemberInvoker
  isExternal: false
  name: UnderlyingSetter
  nameWithType: XamlMemberInvoker.UnderlyingSetter
  fullName: System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter
- uid: System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker
  parent: System.Xaml.Schema.XamlMemberInvoker
  isExternal: false
  name: UnknownInvoker
  nameWithType: XamlMemberInvoker.UnknownInvoker
  fullName: System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker
- uid: System.Xaml.Schema.XamlMemberInvoker
  parent: System.Xaml.Schema
  isExternal: false
  name: XamlMemberInvoker
  nameWithType: XamlMemberInvoker
  fullName: System.Xaml.Schema.XamlMemberInvoker
- uid: System.Xaml.Schema.XamlMemberInvoker.#ctor*
  parent: System.Xaml.Schema.XamlMemberInvoker
  isExternal: false
  name: XamlMemberInvoker
  nameWithType: XamlMemberInvoker.XamlMemberInvoker
- uid: System.Xaml.Schema.XamlMemberInvoker.GetValue*
  parent: System.Xaml.Schema.XamlMemberInvoker
  isExternal: false
  name: GetValue
  nameWithType: XamlMemberInvoker.GetValue
- uid: System.Xaml.Schema.XamlMemberInvoker.SetValue*
  parent: System.Xaml.Schema.XamlMemberInvoker
  isExternal: false
  name: SetValue
  nameWithType: XamlMemberInvoker.SetValue
- uid: System.Xaml.Schema.XamlMemberInvoker.ShouldSerializeValue*
  parent: System.Xaml.Schema.XamlMemberInvoker
  isExternal: false
  name: ShouldSerializeValue
  nameWithType: XamlMemberInvoker.ShouldSerializeValue
- uid: System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter*
  parent: System.Xaml.Schema.XamlMemberInvoker
  isExternal: false
  name: UnderlyingGetter
  nameWithType: XamlMemberInvoker.UnderlyingGetter
- uid: System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter*
  parent: System.Xaml.Schema.XamlMemberInvoker
  isExternal: false
  name: UnderlyingSetter
  nameWithType: XamlMemberInvoker.UnderlyingSetter
- uid: System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker*
  parent: System.Xaml.Schema.XamlMemberInvoker
  isExternal: false
  name: UnknownInvoker
  nameWithType: XamlMemberInvoker.UnknownInvoker
