### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Tokens.SymmetricProofDescriptor
  id: SymmetricProofDescriptor
  children:
  - System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.IdentityModel.Tokens.EncryptingCredentials)
  - System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Byte[],System.IdentityModel.Tokens.EncryptingCredentials)
  - System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials)
  - System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials)
  - System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.Byte[])
  - System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.String)
  - System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.Byte[],System.String)
  - System.IdentityModel.Tokens.SymmetricProofDescriptor.ApplyTo(System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse)
  - System.IdentityModel.Tokens.SymmetricProofDescriptor.GetKeyBytes
  - System.IdentityModel.Tokens.SymmetricProofDescriptor.GetSourceEntropy
  - System.IdentityModel.Tokens.SymmetricProofDescriptor.GetTargetEntropy
  - System.IdentityModel.Tokens.SymmetricProofDescriptor.KeyIdentifier
  - System.IdentityModel.Tokens.SymmetricProofDescriptor.RequestorEncryptingCredentials
  - System.IdentityModel.Tokens.SymmetricProofDescriptor.TargetEncryptingCredentials
  langs:
  - csharp
  name: SymmetricProofDescriptor
  nameWithType: SymmetricProofDescriptor
  fullName: System.IdentityModel.Tokens.SymmetricProofDescriptor
  type: Class
  summary: "這個類別可用於發行對稱金鑰的基礎的權杖。"
  syntax:
    content: 'public class SymmetricProofDescriptor : System.IdentityModel.Tokens.ProofDescriptor'
  inheritance:
  - System.Object
  - System.IdentityModel.Tokens.ProofDescriptor
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.IdentityModel.Tokens.EncryptingCredentials)
  id: '#ctor(System.IdentityModel.Tokens.EncryptingCredentials)'
  parent: System.IdentityModel.Tokens.SymmetricProofDescriptor
  langs:
  - csharp
  name: SymmetricProofDescriptor(EncryptingCredentials)
  nameWithType: SymmetricProofDescriptor.SymmetricProofDescriptor(EncryptingCredentials)
  fullName: System.IdentityModel.Tokens.SymmetricProofDescriptor.SymmetricProofDescriptor(EncryptingCredentials)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "初始化的新執行個體<xref href=&quot;System.IdentityModel.Tokens.SymmetricProofDescriptor&quot;></xref>類別指定的加密認證。"
  remarks: "如果您想要使用指定的<xref:System.IdentityModel.Tokens.EncryptingCredentials>.</xref:System.IdentityModel.Tokens.EncryptingCredentials> STS，請使用這個建構函式"
  syntax:
    content: public SymmetricProofDescriptor (System.IdentityModel.Tokens.EncryptingCredentials targetWrappingCredentials);
    parameters:
    - id: targetWrappingCredentials
      type: System.IdentityModel.Tokens.EncryptingCredentials
      description: "<xref href=&quot;System.IdentityModel.Tokens.EncryptingCredentials&quot;> </xref>使用。"
  overload: System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Byte[],System.IdentityModel.Tokens.EncryptingCredentials)
  id: '#ctor(System.Byte[],System.IdentityModel.Tokens.EncryptingCredentials)'
  parent: System.IdentityModel.Tokens.SymmetricProofDescriptor
  langs:
  - csharp
  name: SymmetricProofDescriptor(Byte[],EncryptingCredentials)
  nameWithType: SymmetricProofDescriptor.SymmetricProofDescriptor(Byte[],EncryptingCredentials)
  fullName: System.IdentityModel.Tokens.SymmetricProofDescriptor.SymmetricProofDescriptor(Byte[],EncryptingCredentials)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "初始化的新執行個體<xref href=&quot;System.IdentityModel.Tokens.SymmetricProofDescriptor&quot;></xref>與指定的金鑰內容的類別。"
  remarks: "如果您想要使用指定的索引鍵位元組 STS，請使用這個建構函式。 會發生這種情況是當用戶端會傳送 entropy，STS 會只使用，作為核發之權杖的金鑰。"
  syntax:
    content: public SymmetricProofDescriptor (byte[] key, System.IdentityModel.Tokens.EncryptingCredentials targetWrappingCredentials);
    parameters:
    - id: key
      type: System.Byte[]
      description: "使用於內部核發之權杖的對稱金鑰。"
    - id: targetWrappingCredentials
      type: System.IdentityModel.Tokens.EncryptingCredentials
      description: "索引鍵，信賴憑證者的合作對象的加密認證。"
  overload: System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>key</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials)
  id: '#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials)'
  parent: System.IdentityModel.Tokens.SymmetricProofDescriptor
  langs:
  - csharp
  name: SymmetricProofDescriptor(Int32,EncryptingCredentials)
  nameWithType: SymmetricProofDescriptor.SymmetricProofDescriptor(Int32,EncryptingCredentials)
  fullName: System.IdentityModel.Tokens.SymmetricProofDescriptor.SymmetricProofDescriptor(Int32,EncryptingCredentials)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "初始化的新執行個體<xref href=&quot;System.IdentityModel.Tokens.SymmetricProofDescriptor&quot;></xref>類別具有自動產生的索引鍵。"
  remarks: "如果您想要自動產生索引鍵使用亂數產生器，並將它做為二進位密碼在證明權杖中的 STS，請使用這個建構函式。"
  syntax:
    content: public SymmetricProofDescriptor (int keySizeInBits, System.IdentityModel.Tokens.EncryptingCredentials targetWrappingCredentials);
    parameters:
    - id: keySizeInBits
      type: System.Int32
      description: "對稱金鑰的大小。"
    - id: targetWrappingCredentials
      type: System.IdentityModel.Tokens.EncryptingCredentials
      description: "加密憑證要求的目標索引鍵。"
  overload: System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials)
  id: '#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials)'
  parent: System.IdentityModel.Tokens.SymmetricProofDescriptor
  langs:
  - csharp
  name: SymmetricProofDescriptor(Int32,EncryptingCredentials,EncryptingCredentials)
  nameWithType: SymmetricProofDescriptor.SymmetricProofDescriptor(Int32,EncryptingCredentials,EncryptingCredentials)
  fullName: System.IdentityModel.Tokens.SymmetricProofDescriptor.SymmetricProofDescriptor(Int32,EncryptingCredentials,EncryptingCredentials)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "初始化的新執行個體<xref href=&quot;System.IdentityModel.Tokens.SymmetricProofDescriptor&quot;></xref>類別具有自動產生的索引鍵。"
  remarks: "如果您想要自動產生金鑰並將它做為加密的索引鍵在證明權杖中的 STS，請使用這個建構函式。 可以涵蓋兩種情況下使用這個建構函式︰ 1。  用戶端傳送 entropy，但是伺服器會拒絕它。      2.  用戶端不會傳送 entropy，因此會使用伺服器的 entropy。"
  syntax:
    content: public SymmetricProofDescriptor (int keySizeInBits, System.IdentityModel.Tokens.EncryptingCredentials targetWrappingCredentials, System.IdentityModel.Tokens.EncryptingCredentials requestorWrappingCredentials);
    parameters:
    - id: keySizeInBits
      type: System.Int32
      description: "對稱金鑰的大小。"
    - id: targetWrappingCredentials
      type: System.IdentityModel.Tokens.EncryptingCredentials
      description: "加密憑證要求的目標索引鍵。"
    - id: requestorWrappingCredentials
      type: System.IdentityModel.Tokens.EncryptingCredentials
      description: "索引鍵，要求者的加密認證。"
  overload: System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>keySizeInBits</code>小於或等於零。"
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.Byte[])
  id: '#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.Byte[])'
  parent: System.IdentityModel.Tokens.SymmetricProofDescriptor
  langs:
  - csharp
  name: SymmetricProofDescriptor(Int32,EncryptingCredentials,EncryptingCredentials,Byte[])
  nameWithType: SymmetricProofDescriptor.SymmetricProofDescriptor(Int32,EncryptingCredentials,EncryptingCredentials,Byte[])
  fullName: System.IdentityModel.Tokens.SymmetricProofDescriptor.SymmetricProofDescriptor(Int32,EncryptingCredentials,EncryptingCredentials,Byte[])
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "初始化的新執行個體<xref href=&quot;System.IdentityModel.Tokens.SymmetricProofDescriptor&quot;></xref>類別用來傳送結合 entropy。"
  remarks: "如果您想要傳送組合的 entropy，請使用這個建構函式。"
  syntax:
    content: public SymmetricProofDescriptor (int keySizeInBits, System.IdentityModel.Tokens.EncryptingCredentials targetWrappingCredentials, System.IdentityModel.Tokens.EncryptingCredentials requestorWrappingCredentials, byte[] sourceEntropy);
    parameters:
    - id: keySizeInBits
      type: System.Int32
      description: "對稱金鑰的大小。"
    - id: targetWrappingCredentials
      type: System.IdentityModel.Tokens.EncryptingCredentials
      description: "加密憑證要求的目標索引鍵。"
    - id: requestorWrappingCredentials
      type: System.IdentityModel.Tokens.EncryptingCredentials
      description: "用來加密 entropy 或證明權杖要求者的加密認證。"
    - id: sourceEntropy
      type: System.Byte[]
      description: "要求者的 entropy。"
  overload: System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>sourceEntropy</code>是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>或空陣列。"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>keySize</code>小於零。"
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.String)
  id: '#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.String)'
  parent: System.IdentityModel.Tokens.SymmetricProofDescriptor
  langs:
  - csharp
  name: SymmetricProofDescriptor(Int32,EncryptingCredentials,EncryptingCredentials,String)
  nameWithType: SymmetricProofDescriptor.SymmetricProofDescriptor(Int32,EncryptingCredentials,EncryptingCredentials,String)
  fullName: System.IdentityModel.Tokens.SymmetricProofDescriptor.SymmetricProofDescriptor(Int32,EncryptingCredentials,EncryptingCredentials,String)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "使用這個建構函式具有 STS 自動產生索引鍵，並將它傳送加密的金鑰與證明權杖。 兩種情況下都是涵蓋這裡 1。 用戶端會傳送 entropy，但是伺服器會拒絕它 2。 用戶端未傳送的 entropy，請直接使用伺服器的 entropy"
  remarks: "如果`encryptWith`DES 演算法，不保證索引鍵是弱的 DES 金鑰。       如果您想要自動產生金鑰並將它做為加密的索引鍵在證明權杖中的 STS，請使用這個建構函式。 可以涵蓋兩種情況下使用這個建構函式︰ 1。  用戶端傳送 entropy，但是伺服器會拒絕它。      2.  用戶端不會傳送 entropy，因此會使用伺服器的 entropy。"
  syntax:
    content: public SymmetricProofDescriptor (int keySizeInBits, System.IdentityModel.Tokens.EncryptingCredentials targetWrappingCredentials, System.IdentityModel.Tokens.EncryptingCredentials requestorWrappingCredentials, string encryptWith);
    parameters:
    - id: keySizeInBits
      type: System.Int32
      description: "對稱金鑰的大小。"
    - id: targetWrappingCredentials
      type: System.IdentityModel.Tokens.EncryptingCredentials
      description: "索引鍵，信賴憑證者的合作對象的加密認證。"
    - id: requestorWrappingCredentials
      type: System.IdentityModel.Tokens.EncryptingCredentials
      description: "索引鍵，要求者的加密認證。"
    - id: encryptWith
      type: System.String
      description: "中指定的演算法 (URI) <xref uid=&quot;langword_csharp_&lt;EncryptWith&gt;&quot; name=&quot;&lt;EncryptWith&gt;&quot; href=&quot;&quot;> </xref> RST 項目。"
  overload: System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>keySizeInBits</code>小於或等於零。"
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.Byte[],System.String)
  id: '#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.Byte[],System.String)'
  parent: System.IdentityModel.Tokens.SymmetricProofDescriptor
  langs:
  - csharp
  name: SymmetricProofDescriptor(Int32,EncryptingCredentials,EncryptingCredentials,Byte[],String)
  nameWithType: SymmetricProofDescriptor.SymmetricProofDescriptor(Int32,EncryptingCredentials,EncryptingCredentials,Byte[],String)
  fullName: System.IdentityModel.Tokens.SymmetricProofDescriptor.SymmetricProofDescriptor(Int32,EncryptingCredentials,EncryptingCredentials,Byte[],String)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "初始化的新執行個體<xref href=&quot;System.IdentityModel.Tokens.SymmetricProofDescriptor&quot;></xref>類別用來傳送結合 entropy。"
  remarks: "您可以使用這個建構函式傳送組合的 entropy。"
  syntax:
    content: public SymmetricProofDescriptor (int keySizeInBits, System.IdentityModel.Tokens.EncryptingCredentials targetWrappingCredentials, System.IdentityModel.Tokens.EncryptingCredentials requestorWrappingCredentials, byte[] sourceEntropy, string encryptWith);
    parameters:
    - id: keySizeInBits
      type: System.Int32
      description: "對稱金鑰的大小。"
    - id: targetWrappingCredentials
      type: System.IdentityModel.Tokens.EncryptingCredentials
      description: "信賴憑證者的合作對象用來加密的 SecurityKeyIdentifier 屬性中的金鑰加密的認證。"
    - id: requestorWrappingCredentials
      type: System.IdentityModel.Tokens.EncryptingCredentials
      description: "用來加密 entropy 或證明權杖要求者的加密認證。"
    - id: sourceEntropy
      type: System.Byte[]
      description: "要求者的 entropy。"
    - id: encryptWith
      type: System.String
      description: "使用證明金鑰的加密演算法的 URI。"
  overload: System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>keySizeInBits</code>小於或等於零。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>sourceEntropy</code>是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>或空陣列。"
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SymmetricProofDescriptor.ApplyTo(System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse)
  id: ApplyTo(System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse)
  parent: System.IdentityModel.Tokens.SymmetricProofDescriptor
  langs:
  - csharp
  name: ApplyTo(RequestSecurityTokenResponse)
  nameWithType: SymmetricProofDescriptor.ApplyTo(RequestSecurityTokenResponse)
  fullName: System.IdentityModel.Tokens.SymmetricProofDescriptor.ApplyTo(RequestSecurityTokenResponse)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "修改指定的 RSTR 取決於此證明的描述元中的設定。"
  remarks: "設定適當的成品，例如要求的證明權杖，根據何謂證明描述元執行個體內的 RSTR 內。"
  syntax:
    content: public override void ApplyTo (System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse response);
    parameters:
    - id: response
      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse
      description: "要套用的證明的描述元 RSTR。"
  overload: System.IdentityModel.Tokens.SymmetricProofDescriptor.ApplyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>response</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SymmetricProofDescriptor.GetKeyBytes
  id: GetKeyBytes
  parent: System.IdentityModel.Tokens.SymmetricProofDescriptor
  langs:
  - csharp
  name: GetKeyBytes()
  nameWithType: SymmetricProofDescriptor.GetKeyBytes()
  fullName: System.IdentityModel.Tokens.SymmetricProofDescriptor.GetKeyBytes()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "取得金鑰內容。"
  syntax:
    content: public byte[] GetKeyBytes ();
    parameters: []
    return:
      type: System.Byte[]
      description: "位元組陣列，其中包含金鑰資料。"
  overload: System.IdentityModel.Tokens.SymmetricProofDescriptor.GetKeyBytes*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SymmetricProofDescriptor.GetSourceEntropy
  id: GetSourceEntropy
  parent: System.IdentityModel.Tokens.SymmetricProofDescriptor
  langs:
  - csharp
  name: GetSourceEntropy()
  nameWithType: SymmetricProofDescriptor.GetSourceEntropy()
  fullName: System.IdentityModel.Tokens.SymmetricProofDescriptor.GetSourceEntropy()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "取得來源 entropy 以純文字的位元組為單位。"
  syntax:
    content: protected byte[] GetSourceEntropy ();
    parameters: []
    return:
      type: System.Byte[]
      description: "位元組陣列，其中包含來源 entropy。"
  overload: System.IdentityModel.Tokens.SymmetricProofDescriptor.GetSourceEntropy*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SymmetricProofDescriptor.GetTargetEntropy
  id: GetTargetEntropy
  parent: System.IdentityModel.Tokens.SymmetricProofDescriptor
  langs:
  - csharp
  name: GetTargetEntropy()
  nameWithType: SymmetricProofDescriptor.GetTargetEntropy()
  fullName: System.IdentityModel.Tokens.SymmetricProofDescriptor.GetTargetEntropy()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "取得目標 entropy 純文字的位元組"
  syntax:
    content: protected byte[] GetTargetEntropy ();
    parameters: []
    return:
      type: System.Byte[]
      description: "位元組陣列，其中包含目標 entropy。"
  overload: System.IdentityModel.Tokens.SymmetricProofDescriptor.GetTargetEntropy*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SymmetricProofDescriptor.KeyIdentifier
  id: KeyIdentifier
  parent: System.IdentityModel.Tokens.SymmetricProofDescriptor
  langs:
  - csharp
  name: KeyIdentifier
  nameWithType: SymmetricProofDescriptor.KeyIdentifier
  fullName: System.IdentityModel.Tokens.SymmetricProofDescriptor.KeyIdentifier
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "取得可以用內發行的權杖，來定義索引鍵的索引鍵識別碼。 它通常是二進位密碼或加密的金鑰。"
  syntax:
    content: public override System.IdentityModel.Tokens.SecurityKeyIdentifier KeyIdentifier { get; }
    return:
      type: System.IdentityModel.Tokens.SecurityKeyIdentifier
      description: "索引鍵的識別碼。"
  overload: System.IdentityModel.Tokens.SymmetricProofDescriptor.KeyIdentifier*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SymmetricProofDescriptor.RequestorEncryptingCredentials
  id: RequestorEncryptingCredentials
  parent: System.IdentityModel.Tokens.SymmetricProofDescriptor
  langs:
  - csharp
  name: RequestorEncryptingCredentials
  nameWithType: SymmetricProofDescriptor.RequestorEncryptingCredentials
  fullName: System.IdentityModel.Tokens.SymmetricProofDescriptor.RequestorEncryptingCredentials
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "取得要求者的加密認證，可用來加密要求的證明權杖或在回應中的 entropy。"
  syntax:
    content: protected System.IdentityModel.Tokens.EncryptingCredentials RequestorEncryptingCredentials { get; }
    return:
      type: System.IdentityModel.Tokens.EncryptingCredentials
      description: "要求者的加密認證。"
  overload: System.IdentityModel.Tokens.SymmetricProofDescriptor.RequestorEncryptingCredentials*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SymmetricProofDescriptor.TargetEncryptingCredentials
  id: TargetEncryptingCredentials
  parent: System.IdentityModel.Tokens.SymmetricProofDescriptor
  langs:
  - csharp
  name: TargetEncryptingCredentials
  nameWithType: SymmetricProofDescriptor.TargetEncryptingCredentials
  fullName: System.IdentityModel.Tokens.SymmetricProofDescriptor.TargetEncryptingCredentials
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "取得信賴憑證者的合作對象加密認證，可能會用來加密要求的安全性權杖在回應中。"
  syntax:
    content: protected System.IdentityModel.Tokens.EncryptingCredentials TargetEncryptingCredentials { get; }
    return:
      type: System.IdentityModel.Tokens.EncryptingCredentials
      description: "信賴憑證者合作對象加密認證。"
  overload: System.IdentityModel.Tokens.SymmetricProofDescriptor.TargetEncryptingCredentials*
  exceptions: []
  platform:
  - net462
references:
- uid: System.IdentityModel.Tokens.ProofDescriptor
  isExternal: false
  name: System.IdentityModel.Tokens.ProofDescriptor
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.IdentityModel.Tokens.EncryptingCredentials)
  parent: System.IdentityModel.Tokens.SymmetricProofDescriptor
  isExternal: false
  name: SymmetricProofDescriptor(EncryptingCredentials)
  nameWithType: SymmetricProofDescriptor.SymmetricProofDescriptor(EncryptingCredentials)
  fullName: System.IdentityModel.Tokens.SymmetricProofDescriptor.SymmetricProofDescriptor(EncryptingCredentials)
- uid: System.IdentityModel.Tokens.EncryptingCredentials
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: EncryptingCredentials
  nameWithType: EncryptingCredentials
  fullName: System.IdentityModel.Tokens.EncryptingCredentials
- uid: System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Byte[],System.IdentityModel.Tokens.EncryptingCredentials)
  parent: System.IdentityModel.Tokens.SymmetricProofDescriptor
  isExternal: false
  name: SymmetricProofDescriptor(Byte[],EncryptingCredentials)
  nameWithType: SymmetricProofDescriptor.SymmetricProofDescriptor(Byte[],EncryptingCredentials)
  fullName: System.IdentityModel.Tokens.SymmetricProofDescriptor.SymmetricProofDescriptor(Byte[],EncryptingCredentials)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials)
  parent: System.IdentityModel.Tokens.SymmetricProofDescriptor
  isExternal: false
  name: SymmetricProofDescriptor(Int32,EncryptingCredentials)
  nameWithType: SymmetricProofDescriptor.SymmetricProofDescriptor(Int32,EncryptingCredentials)
  fullName: System.IdentityModel.Tokens.SymmetricProofDescriptor.SymmetricProofDescriptor(Int32,EncryptingCredentials)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials)
  parent: System.IdentityModel.Tokens.SymmetricProofDescriptor
  isExternal: false
  name: SymmetricProofDescriptor(Int32,EncryptingCredentials,EncryptingCredentials)
  nameWithType: SymmetricProofDescriptor.SymmetricProofDescriptor(Int32,EncryptingCredentials,EncryptingCredentials)
  fullName: System.IdentityModel.Tokens.SymmetricProofDescriptor.SymmetricProofDescriptor(Int32,EncryptingCredentials,EncryptingCredentials)
- uid: System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.Byte[])
  parent: System.IdentityModel.Tokens.SymmetricProofDescriptor
  isExternal: false
  name: SymmetricProofDescriptor(Int32,EncryptingCredentials,EncryptingCredentials,Byte[])
  nameWithType: SymmetricProofDescriptor.SymmetricProofDescriptor(Int32,EncryptingCredentials,EncryptingCredentials,Byte[])
  fullName: System.IdentityModel.Tokens.SymmetricProofDescriptor.SymmetricProofDescriptor(Int32,EncryptingCredentials,EncryptingCredentials,Byte[])
- uid: System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.String)
  parent: System.IdentityModel.Tokens.SymmetricProofDescriptor
  isExternal: false
  name: SymmetricProofDescriptor(Int32,EncryptingCredentials,EncryptingCredentials,String)
  nameWithType: SymmetricProofDescriptor.SymmetricProofDescriptor(Int32,EncryptingCredentials,EncryptingCredentials,String)
  fullName: System.IdentityModel.Tokens.SymmetricProofDescriptor.SymmetricProofDescriptor(Int32,EncryptingCredentials,EncryptingCredentials,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.Byte[],System.String)
  parent: System.IdentityModel.Tokens.SymmetricProofDescriptor
  isExternal: false
  name: SymmetricProofDescriptor(Int32,EncryptingCredentials,EncryptingCredentials,Byte[],String)
  nameWithType: SymmetricProofDescriptor.SymmetricProofDescriptor(Int32,EncryptingCredentials,EncryptingCredentials,Byte[],String)
  fullName: System.IdentityModel.Tokens.SymmetricProofDescriptor.SymmetricProofDescriptor(Int32,EncryptingCredentials,EncryptingCredentials,Byte[],String)
- uid: System.IdentityModel.Tokens.SymmetricProofDescriptor.ApplyTo(System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse)
  parent: System.IdentityModel.Tokens.SymmetricProofDescriptor
  isExternal: false
  name: ApplyTo(RequestSecurityTokenResponse)
  nameWithType: SymmetricProofDescriptor.ApplyTo(RequestSecurityTokenResponse)
  fullName: System.IdentityModel.Tokens.SymmetricProofDescriptor.ApplyTo(RequestSecurityTokenResponse)
- uid: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse
  parent: System.IdentityModel.Protocols.WSTrust
  isExternal: false
  name: RequestSecurityTokenResponse
  nameWithType: RequestSecurityTokenResponse
  fullName: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse
- uid: System.IdentityModel.Tokens.SymmetricProofDescriptor.GetKeyBytes
  parent: System.IdentityModel.Tokens.SymmetricProofDescriptor
  isExternal: false
  name: GetKeyBytes()
  nameWithType: SymmetricProofDescriptor.GetKeyBytes()
  fullName: System.IdentityModel.Tokens.SymmetricProofDescriptor.GetKeyBytes()
- uid: System.IdentityModel.Tokens.SymmetricProofDescriptor.GetSourceEntropy
  parent: System.IdentityModel.Tokens.SymmetricProofDescriptor
  isExternal: false
  name: GetSourceEntropy()
  nameWithType: SymmetricProofDescriptor.GetSourceEntropy()
  fullName: System.IdentityModel.Tokens.SymmetricProofDescriptor.GetSourceEntropy()
- uid: System.IdentityModel.Tokens.SymmetricProofDescriptor.GetTargetEntropy
  parent: System.IdentityModel.Tokens.SymmetricProofDescriptor
  isExternal: false
  name: GetTargetEntropy()
  nameWithType: SymmetricProofDescriptor.GetTargetEntropy()
  fullName: System.IdentityModel.Tokens.SymmetricProofDescriptor.GetTargetEntropy()
- uid: System.IdentityModel.Tokens.SymmetricProofDescriptor.KeyIdentifier
  parent: System.IdentityModel.Tokens.SymmetricProofDescriptor
  isExternal: false
  name: KeyIdentifier
  nameWithType: SymmetricProofDescriptor.KeyIdentifier
  fullName: System.IdentityModel.Tokens.SymmetricProofDescriptor.KeyIdentifier
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKeyIdentifier
  nameWithType: SecurityKeyIdentifier
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier
- uid: System.IdentityModel.Tokens.SymmetricProofDescriptor.RequestorEncryptingCredentials
  parent: System.IdentityModel.Tokens.SymmetricProofDescriptor
  isExternal: false
  name: RequestorEncryptingCredentials
  nameWithType: SymmetricProofDescriptor.RequestorEncryptingCredentials
  fullName: System.IdentityModel.Tokens.SymmetricProofDescriptor.RequestorEncryptingCredentials
- uid: System.IdentityModel.Tokens.SymmetricProofDescriptor.TargetEncryptingCredentials
  parent: System.IdentityModel.Tokens.SymmetricProofDescriptor
  isExternal: false
  name: TargetEncryptingCredentials
  nameWithType: SymmetricProofDescriptor.TargetEncryptingCredentials
  fullName: System.IdentityModel.Tokens.SymmetricProofDescriptor.TargetEncryptingCredentials
- uid: System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor*
  parent: System.IdentityModel.Tokens.SymmetricProofDescriptor
  isExternal: false
  name: SymmetricProofDescriptor
  nameWithType: SymmetricProofDescriptor.SymmetricProofDescriptor
- uid: System.IdentityModel.Tokens.SymmetricProofDescriptor.ApplyTo*
  parent: System.IdentityModel.Tokens.SymmetricProofDescriptor
  isExternal: false
  name: ApplyTo
  nameWithType: SymmetricProofDescriptor.ApplyTo
- uid: System.IdentityModel.Tokens.SymmetricProofDescriptor.GetKeyBytes*
  parent: System.IdentityModel.Tokens.SymmetricProofDescriptor
  isExternal: false
  name: GetKeyBytes
  nameWithType: SymmetricProofDescriptor.GetKeyBytes
- uid: System.IdentityModel.Tokens.SymmetricProofDescriptor.GetSourceEntropy*
  parent: System.IdentityModel.Tokens.SymmetricProofDescriptor
  isExternal: false
  name: GetSourceEntropy
  nameWithType: SymmetricProofDescriptor.GetSourceEntropy
- uid: System.IdentityModel.Tokens.SymmetricProofDescriptor.GetTargetEntropy*
  parent: System.IdentityModel.Tokens.SymmetricProofDescriptor
  isExternal: false
  name: GetTargetEntropy
  nameWithType: SymmetricProofDescriptor.GetTargetEntropy
- uid: System.IdentityModel.Tokens.SymmetricProofDescriptor.KeyIdentifier*
  parent: System.IdentityModel.Tokens.SymmetricProofDescriptor
  isExternal: false
  name: KeyIdentifier
  nameWithType: SymmetricProofDescriptor.KeyIdentifier
- uid: System.IdentityModel.Tokens.SymmetricProofDescriptor.RequestorEncryptingCredentials*
  parent: System.IdentityModel.Tokens.SymmetricProofDescriptor
  isExternal: false
  name: RequestorEncryptingCredentials
  nameWithType: SymmetricProofDescriptor.RequestorEncryptingCredentials
- uid: System.IdentityModel.Tokens.SymmetricProofDescriptor.TargetEncryptingCredentials*
  parent: System.IdentityModel.Tokens.SymmetricProofDescriptor
  isExternal: false
  name: TargetEncryptingCredentials
  nameWithType: SymmetricProofDescriptor.TargetEncryptingCredentials
