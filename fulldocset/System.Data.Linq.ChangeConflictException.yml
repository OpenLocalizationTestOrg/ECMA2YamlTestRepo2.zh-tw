### YamlMime:ManagedReference
items:
- uid: System.Data.Linq.ChangeConflictException
  id: ChangeConflictException
  children:
  - System.Data.Linq.ChangeConflictException.#ctor
  - System.Data.Linq.ChangeConflictException.#ctor(System.String)
  - System.Data.Linq.ChangeConflictException.#ctor(System.String,System.Exception)
  langs:
  - csharp
  name: ChangeConflictException
  nameWithType: ChangeConflictException
  fullName: System.Data.Linq.ChangeConflictException
  type: Class
  summary: "擲回，當更新失敗，因為資料庫值已經更新用戶端自上次讀取它們。"
  remarks: "下列範例顯示如何可能使用這個例外狀況傳回並行衝突的相關資訊。"
  example:
  - >-
    [!code-cs[System.Data.Linq.ObjectChangeConflict#1](~/add/codesnippet/csharp/objconflict/program.cs#1)]
     [!code-vb[System.Data.Linq.ObjectChangeConflict#1](~/add/codesnippet/visualbasic/objconflict/module1.vb#1)]
  syntax:
    content: 'public class ChangeConflictException : Exception'
  inheritance:
  - System.Exception
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.Linq.ChangeConflictException.#ctor
  id: '#ctor'
  parent: System.Data.Linq.ChangeConflictException
  langs:
  - csharp
  name: ChangeConflictException()
  nameWithType: ChangeConflictException.ChangeConflictException()
  fullName: System.Data.Linq.ChangeConflictException.ChangeConflictException()
  type: Constructor
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: "初始化的新執行個體<xref href=&quot;System.Data.Linq.ChangeConflictException&quot;></xref>類別。"
  syntax:
    content: public ChangeConflictException ();
    parameters: []
  overload: System.Data.Linq.ChangeConflictException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.ChangeConflictException.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Data.Linq.ChangeConflictException
  langs:
  - csharp
  name: ChangeConflictException(String)
  nameWithType: ChangeConflictException.ChangeConflictException(String)
  fullName: System.Data.Linq.ChangeConflictException.ChangeConflictException(String)
  type: Constructor
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: "初始化的新執行個體<xref href=&quot;System.Data.Linq.ChangeConflictException&quot;></xref>類別，並指定說明例外狀況的訊息。"
  syntax:
    content: public ChangeConflictException (string message);
    parameters:
    - id: message
      type: System.String
      description: "要公開 (expose) 時擲回例外狀況的訊息。"
  overload: System.Data.Linq.ChangeConflictException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.ChangeConflictException.#ctor(System.String,System.Exception)
  id: '#ctor(System.String,System.Exception)'
  parent: System.Data.Linq.ChangeConflictException
  langs:
  - csharp
  name: ChangeConflictException(String,Exception)
  nameWithType: ChangeConflictException.ChangeConflictException(String,Exception)
  fullName: System.Data.Linq.ChangeConflictException.ChangeConflictException(String,Exception)
  type: Constructor
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: "初始化的新執行個體<xref href=&quot;System.Data.Linq.ChangeConflictException&quot;></xref>類別，指定說明例外狀況的訊息，並指定造成此例外狀況的例外狀況。"
  syntax:
    content: public ChangeConflictException (string message, Exception innerException);
    parameters:
    - id: message
      type: System.String
      description: "要公開 (expose) 時擲回例外狀況的訊息。"
    - id: innerException
      type: System.Exception
      description: "指定的例外狀況，其中<xref href=&quot;System.Data.Linq.ChangeConflictException&quot;></xref>是結果。"
  overload: System.Data.Linq.ChangeConflictException.#ctor*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Exception
  isExternal: false
  name: System.Exception
- uid: System.Data.Linq.ChangeConflictException.#ctor
  parent: System.Data.Linq.ChangeConflictException
  isExternal: false
  name: ChangeConflictException()
  nameWithType: ChangeConflictException.ChangeConflictException()
  fullName: System.Data.Linq.ChangeConflictException.ChangeConflictException()
- uid: System.Data.Linq.ChangeConflictException.#ctor(System.String)
  parent: System.Data.Linq.ChangeConflictException
  isExternal: false
  name: ChangeConflictException(String)
  nameWithType: ChangeConflictException.ChangeConflictException(String)
  fullName: System.Data.Linq.ChangeConflictException.ChangeConflictException(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Linq.ChangeConflictException.#ctor(System.String,System.Exception)
  parent: System.Data.Linq.ChangeConflictException
  isExternal: false
  name: ChangeConflictException(String,Exception)
  nameWithType: ChangeConflictException.ChangeConflictException(String,Exception)
  fullName: System.Data.Linq.ChangeConflictException.ChangeConflictException(String,Exception)
- uid: System.Data.Linq.ChangeConflictException.#ctor*
  parent: System.Data.Linq.ChangeConflictException
  isExternal: false
  name: ChangeConflictException
  nameWithType: ChangeConflictException.ChangeConflictException
