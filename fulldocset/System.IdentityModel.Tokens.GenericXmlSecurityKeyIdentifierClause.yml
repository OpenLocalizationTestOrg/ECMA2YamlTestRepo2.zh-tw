### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Tokens.GenericXmlSecurityKeyIdentifierClause
  id: GenericXmlSecurityKeyIdentifierClause
  children:
  - System.IdentityModel.Tokens.GenericXmlSecurityKeyIdentifierClause.#ctor(System.Xml.XmlElement)
  - System.IdentityModel.Tokens.GenericXmlSecurityKeyIdentifierClause.#ctor(System.Xml.XmlElement,System.Byte[],System.Int32)
  - System.IdentityModel.Tokens.GenericXmlSecurityKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  - System.IdentityModel.Tokens.GenericXmlSecurityKeyIdentifierClause.ReferenceXml
  langs:
  - csharp
  name: GenericXmlSecurityKeyIdentifierClause
  nameWithType: GenericXmlSecurityKeyIdentifierClause
  fullName: System.IdentityModel.Tokens.GenericXmlSecurityKeyIdentifierClause
  type: Class
  summary: "表示會以 XML 為基礎的金鑰識別碼子句。"
  syntax:
    content: 'public class GenericXmlSecurityKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause'
  inheritance:
  - System.Object
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  implements: []
  inheritedMembers:
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Id
  platform:
  - net462
- uid: System.IdentityModel.Tokens.GenericXmlSecurityKeyIdentifierClause.#ctor(System.Xml.XmlElement)
  id: '#ctor(System.Xml.XmlElement)'
  parent: System.IdentityModel.Tokens.GenericXmlSecurityKeyIdentifierClause
  langs:
  - csharp
  name: GenericXmlSecurityKeyIdentifierClause(XmlElement)
  nameWithType: GenericXmlSecurityKeyIdentifierClause.GenericXmlSecurityKeyIdentifierClause(XmlElement)
  fullName: System.IdentityModel.Tokens.GenericXmlSecurityKeyIdentifierClause.GenericXmlSecurityKeyIdentifierClause(XmlElement)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "初始化的新執行個體<xref href=&quot;System.IdentityModel.Tokens.GenericXmlSecurityKeyIdentifierClause&quot;></xref>使用指定的 XML 項目類別。"
  remarks: "<xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType%2A>屬性會初始化為`null`和<xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength%2A>屬性會初始化為零的新執行個體中。</xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength%2A> </xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType%2A>"
  syntax:
    content: public GenericXmlSecurityKeyIdentifierClause (System.Xml.XmlElement referenceXml);
    parameters:
    - id: referenceXml
      type: System.Xml.XmlElement
      description: "表示金鑰識別碼子句 XML 項目。 設定的值<xref:System.IdentityModel.Tokens.GenericXmlSecurityKeyIdentifierClause.ReferenceXml*>屬性。</xref:System.IdentityModel.Tokens.GenericXmlSecurityKeyIdentifierClause.ReferenceXml*>"
  overload: System.IdentityModel.Tokens.GenericXmlSecurityKeyIdentifierClause.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>referenceXML</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.GenericXmlSecurityKeyIdentifierClause.#ctor(System.Xml.XmlElement,System.Byte[],System.Int32)
  id: '#ctor(System.Xml.XmlElement,System.Byte[],System.Int32)'
  parent: System.IdentityModel.Tokens.GenericXmlSecurityKeyIdentifierClause
  langs:
  - csharp
  name: GenericXmlSecurityKeyIdentifierClause(XmlElement,Byte[],Int32)
  nameWithType: GenericXmlSecurityKeyIdentifierClause.GenericXmlSecurityKeyIdentifierClause(XmlElement,Byte[],Int32)
  fullName: System.IdentityModel.Tokens.GenericXmlSecurityKeyIdentifierClause.GenericXmlSecurityKeyIdentifierClause(XmlElement,Byte[],Int32)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "初始化的新執行個體<xref href=&quot;System.IdentityModel.Tokens.GenericXmlSecurityKeyIdentifierClause&quot;></xref>類別使用指定的 XML 項目、 nonce 以及衍生長度。"
  remarks: "<xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType%2A>屬性會初始化為`null`新執行個體中。</xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType%2A>"
  syntax:
    content: public GenericXmlSecurityKeyIdentifierClause (System.Xml.XmlElement referenceXml, byte[] derivationNonce, int derivationLength);
    parameters:
    - id: referenceXml
      type: System.Xml.XmlElement
      description: "表示金鑰識別碼子句 XML 項目。 設定的值<xref:System.IdentityModel.Tokens.GenericXmlSecurityKeyIdentifierClause.ReferenceXml*>屬性。</xref:System.IdentityModel.Tokens.GenericXmlSecurityKeyIdentifierClause.ReferenceXml*>"
    - id: derivationNonce
      type: System.Byte[]
      description: "陣列<xref:System.Byte>其中包含用來建立衍生的金鑰的 nonce。</xref:System.Byte> 設定值，由<xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce*>方法。</xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce*>"
    - id: derivationLength
      type: System.Int32
      description: "衍生金鑰的大小。 設定的值<xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength*>屬性。</xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength*>"
  overload: System.IdentityModel.Tokens.GenericXmlSecurityKeyIdentifierClause.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>referenceXML</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.GenericXmlSecurityKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  id: Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.IdentityModel.Tokens.GenericXmlSecurityKeyIdentifierClause
  langs:
  - csharp
  name: Matches(SecurityKeyIdentifierClause)
  nameWithType: GenericXmlSecurityKeyIdentifierClause.Matches(SecurityKeyIdentifierClause)
  fullName: System.IdentityModel.Tokens.GenericXmlSecurityKeyIdentifierClause.Matches(SecurityKeyIdentifierClause)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "傳回值，指出指定的金鑰識別碼子句是否與目前的執行個體相符。"
  remarks: "比對成功，為指定的金鑰識別碼子句必須是可從<xref:System.IdentityModel.Tokens.GenericXmlSecurityKeyIdentifierClause>，其標記 (XML) 必須與這個執行個體。</xref:System.IdentityModel.Tokens.GenericXmlSecurityKeyIdentifierClause> (<xref:System.Xml.XmlNode.OuterXml%2A>屬性所指定的項目<xref:System.IdentityModel.Tokens.GenericXmlSecurityKeyIdentifierClause.ReferenceXml%2A>屬性進行比較的兩個執行個體。)</xref:System.IdentityModel.Tokens.GenericXmlSecurityKeyIdentifierClause.ReferenceXml%2A> </xref:System.Xml.XmlNode.OuterXml%2A>"
  syntax:
    content: public override bool Matches (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);
    parameters:
    - id: keyIdentifierClause
      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
      description: "要與目前執行個體比較的金鑰識別碼子句。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果指定的金鑰識別碼子句符合目前的執行個體。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.IdentityModel.Tokens.GenericXmlSecurityKeyIdentifierClause.Matches*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.GenericXmlSecurityKeyIdentifierClause.ReferenceXml
  id: ReferenceXml
  parent: System.IdentityModel.Tokens.GenericXmlSecurityKeyIdentifierClause
  langs:
  - csharp
  name: ReferenceXml
  nameWithType: GenericXmlSecurityKeyIdentifierClause.ReferenceXml
  fullName: System.IdentityModel.Tokens.GenericXmlSecurityKeyIdentifierClause.ReferenceXml
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "取得表示金鑰識別碼子句的 XML 項目。"
  syntax:
    content: public System.Xml.XmlElement ReferenceXml { get; }
    return:
      type: System.Xml.XmlElement
      description: "表示金鑰識別碼子句 XML 項目。"
  overload: System.IdentityModel.Tokens.GenericXmlSecurityKeyIdentifierClause.ReferenceXml*
  exceptions: []
  platform:
  - net462
references:
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  isExternal: false
  name: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.IdentityModel.Tokens.GenericXmlSecurityKeyIdentifierClause.#ctor(System.Xml.XmlElement)
  parent: System.IdentityModel.Tokens.GenericXmlSecurityKeyIdentifierClause
  isExternal: false
  name: GenericXmlSecurityKeyIdentifierClause(XmlElement)
  nameWithType: GenericXmlSecurityKeyIdentifierClause.GenericXmlSecurityKeyIdentifierClause(XmlElement)
  fullName: System.IdentityModel.Tokens.GenericXmlSecurityKeyIdentifierClause.GenericXmlSecurityKeyIdentifierClause(XmlElement)
- uid: System.Xml.XmlElement
  parent: System.Xml
  isExternal: false
  name: XmlElement
  nameWithType: XmlElement
  fullName: System.Xml.XmlElement
- uid: System.IdentityModel.Tokens.GenericXmlSecurityKeyIdentifierClause.#ctor(System.Xml.XmlElement,System.Byte[],System.Int32)
  parent: System.IdentityModel.Tokens.GenericXmlSecurityKeyIdentifierClause
  isExternal: false
  name: GenericXmlSecurityKeyIdentifierClause(XmlElement,Byte[],Int32)
  nameWithType: GenericXmlSecurityKeyIdentifierClause.GenericXmlSecurityKeyIdentifierClause(XmlElement,Byte[],Int32)
  fullName: System.IdentityModel.Tokens.GenericXmlSecurityKeyIdentifierClause.GenericXmlSecurityKeyIdentifierClause(XmlElement,Byte[],Int32)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IdentityModel.Tokens.GenericXmlSecurityKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.IdentityModel.Tokens.GenericXmlSecurityKeyIdentifierClause
  isExternal: false
  name: Matches(SecurityKeyIdentifierClause)
  nameWithType: GenericXmlSecurityKeyIdentifierClause.Matches(SecurityKeyIdentifierClause)
  fullName: System.IdentityModel.Tokens.GenericXmlSecurityKeyIdentifierClause.Matches(SecurityKeyIdentifierClause)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.Tokens.GenericXmlSecurityKeyIdentifierClause.ReferenceXml
  parent: System.IdentityModel.Tokens.GenericXmlSecurityKeyIdentifierClause
  isExternal: false
  name: ReferenceXml
  nameWithType: GenericXmlSecurityKeyIdentifierClause.ReferenceXml
  fullName: System.IdentityModel.Tokens.GenericXmlSecurityKeyIdentifierClause.ReferenceXml
- uid: System.IdentityModel.Tokens.GenericXmlSecurityKeyIdentifierClause.#ctor*
  parent: System.IdentityModel.Tokens.GenericXmlSecurityKeyIdentifierClause
  isExternal: false
  name: GenericXmlSecurityKeyIdentifierClause
  nameWithType: GenericXmlSecurityKeyIdentifierClause.GenericXmlSecurityKeyIdentifierClause
- uid: System.IdentityModel.Tokens.GenericXmlSecurityKeyIdentifierClause.Matches*
  parent: System.IdentityModel.Tokens.GenericXmlSecurityKeyIdentifierClause
  isExternal: false
  name: Matches
  nameWithType: GenericXmlSecurityKeyIdentifierClause.Matches
- uid: System.IdentityModel.Tokens.GenericXmlSecurityKeyIdentifierClause.ReferenceXml*
  parent: System.IdentityModel.Tokens.GenericXmlSecurityKeyIdentifierClause
  isExternal: false
  name: ReferenceXml
  nameWithType: GenericXmlSecurityKeyIdentifierClause.ReferenceXml
