### YamlMime:ManagedReference
items:
- uid: System.Windows.Navigation.CustomContentState
  id: CustomContentState
  children:
  - System.Windows.Navigation.CustomContentState.#ctor
  - System.Windows.Navigation.CustomContentState.JournalEntryName
  - System.Windows.Navigation.CustomContentState.Replay(System.Windows.Navigation.NavigationService,System.Windows.Navigation.NavigationMode)
  langs:
  - csharp
  name: CustomContentState
  nameWithType: CustomContentState
  fullName: System.Windows.Navigation.CustomContentState
  type: Class
  summary: "CustomContentState 可讓您瀏覽不同狀態的單一來源內容而不重新載入每個後續的瀏覽的來源內容。"
  remarks: "根據預設，<xref:System.Windows.Navigation.NavigationService>不會儲存在瀏覽歷程記錄中的內容物件的執行個體。</xref:System.Windows.Navigation.NavigationService> 相反地，<xref:System.Windows.Navigation.NavigationService>使用巡覽記錄中巡覽至每次建立內容物件的新執行個體。</xref:System.Windows.Navigation.NavigationService> 此行為被為了避免過多的記憶體耗用量在巡覽大量內容時。 因此，內容的狀態並不會記住從一個瀏覽至下一步。 不過，[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]提供與一段內容的瀏覽歷程記錄項目產生關聯的自訂狀態的能力。       瀏覽歷程記錄項目相關聯的自訂狀態必須是衍生自 CustomContentState 的類別。 您使用相關聯 CustomContentState 物件瀏覽歷程記錄項目與下列技術:-呼叫**AddBackEntry**:- <xref:System.Windows.Navigation.NavigationService.AddBackEntry%2A?displayProperty=fullName>- <xref:System.Windows.Navigation.NavigationWindow.AddBackEntry%2A?displayProperty=fullName>- <xref:System.Windows.Controls.Frame.AddBackEntry%2A?displayProperty=fullName>.</xref:System.Windows.Controls.Frame.AddBackEntry%2A?displayProperty=fullName> </xref:System.Windows.Navigation.NavigationWindow.AddBackEntry%2A?displayProperty=fullName> </xref:System.Windows.Navigation.NavigationService.AddBackEntry%2A?displayProperty=fullName>      -設定<xref:System.Windows.Navigation.NavigatingCancelEventArgs.Content%2A?displayProperty=fullName>任一下列事件引發時:- <xref:System.Windows.Navigation.NavigationService.Navigating?displayProperty=fullName>- <xref:System.Windows.Navigation.NavigationWindow.Navigating?displayProperty=fullName>- <xref:System.Windows.Controls.Frame.Navigating?displayProperty=fullName>- <xref:System.Windows.Navigation.NavigationWindow.Navigating?displayProperty=fullName>-作者<xref:System.Windows.Navigation.IProvideCustomContentState>想要與其相關聯的自訂狀態的類別上</xref:System.Windows.Navigation.IProvideCustomContentState>實作</xref:System.Windows.Navigation.NavigationWindow.Navigating?displayProperty=fullName></xref:System.Windows.Controls.Frame.Navigating?displayProperty=fullName></xref:System.Windows.Navigation.NavigationWindow.Navigating?displayProperty=fullName></xref:System.Windows.Navigation.NavigationService.Navigating?displayProperty=fullName></xref:System.Windows.Navigation.NavigatingCancelEventArgs.Content%2A?displayProperty=fullName>      > [!NOTE] > 如果您呼叫**AddBackEntry**方法，您必須處理**Navigating**事件或實作<xref:System.Windows.Navigation.IProvideCustomContentState>.</xref:System.Windows.Navigation.IProvideCustomContentState>       瀏覽歷程記錄項目巡覽時[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]檢查，以查看是否有與其相關聯的自訂 CustomContentState 物件。 因此，它會呼叫如果<xref:System.Windows.Navigation.CustomContentState.Replay%2A>以允許自訂 CustomContentState 物件套用它記住從先前的瀏覽的狀態。</xref:System.Windows.Navigation.CustomContentState.Replay%2A>       自訂的 CustomContentState 類別可以覆寫<xref:System.Windows.Navigation.CustomContentState.JournalEntryName%2A>變更 CustomContentState 物件是相關聯的瀏覽歷程記錄項目顯示的名稱。</xref:System.Windows.Navigation.CustomContentState.JournalEntryName%2A> 值，<xref:System.Windows.Navigation.CustomContentState.JournalEntryName%2A>是從瀏覽可見，則傳回[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]個不同的導覽 ([!INCLUDE[TLA2#tla_ie7](~/add/includes/tla2sharptla-ie7-md.md)]， <xref:System.Windows.Navigation.NavigationWindow>， <xref:System.Windows.Controls.Frame>)。</xref:System.Windows.Controls.Frame> </xref:System.Windows.Navigation.NavigationWindow> </xref:System.Windows.Navigation.CustomContentState.JournalEntryName%2A>       從 CustomContentState 衍生的類別必須是可序列化，這表示它必須至少夾帶<xref:System.SerializableAttribute>，並選擇性地實作<xref:System.Runtime.Serialization.ISerializable>.</xref:System.Runtime.Serialization.ISerializable> </xref:System.SerializableAttribute>      > [!IMPORTANT] > 資訊儲存在自訂內容的狀態時，您無法儲存任何參考執行個體的頁面，您會記住其狀態如果不想要保留在記憶體中的內容。 這可防止[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]釋放頁面執行個體和擊敗的目的預設巡覽記錄行為。 如果您必須這麼做，請考慮使用<xref:System.Windows.Controls.Page.KeepAlive%2A>改用。</xref:System.Windows.Controls.Page.KeepAlive%2A>"
  example:
  - "The following is an example of a CustomContentState implementation that overrides <xref:System.Windows.Navigation.CustomContentState.JournalEntryName%2A>.  \n  \n [!code-cs[CustomContentStateSnippets#MyCustomContentStateCODE](~/add/codesnippet/csharp/CustomContentStateSnippets.CSharp/MyCustomContentState.cs#mycustomcontentstatecode)]\n [!code-vb[CustomContentStateSnippets#MyCustomContentStateCODE](~/add/codesnippet/visualbasic/customcontentstatesnippets/mycustomcontentstate.vb#mycustomcontentstatecode)]"
  syntax:
    content: public abstract class CustomContentState
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Navigation.CustomContentState.#ctor
  id: '#ctor'
  parent: System.Windows.Navigation.CustomContentState
  langs:
  - csharp
  name: CustomContentState()
  nameWithType: CustomContentState.CustomContentState()
  fullName: System.Windows.Navigation.CustomContentState.CustomContentState()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Navigation
  summary: "初始化的新執行個體<xref href=&quot;System.Windows.Navigation.CustomContentState&quot;></xref>類別。"
  syntax:
    content: protected CustomContentState ();
    parameters: []
  overload: System.Windows.Navigation.CustomContentState.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Navigation.CustomContentState.JournalEntryName
  id: JournalEntryName
  parent: System.Windows.Navigation.CustomContentState
  langs:
  - csharp
  name: JournalEntryName
  nameWithType: CustomContentState.JournalEntryName
  fullName: System.Windows.Navigation.CustomContentState.JournalEntryName
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Navigation
  summary: "內容儲存在瀏覽歷程記錄的名稱。 從顯示的值為 JournalEntryName <xref href=&quot;System.Windows.Navigation.NavigationWindow&quot;> </xref>， <xref href=&quot;System.Windows.Controls.Frame&quot;> </xref>，和[!INCLUDE[TLA#tla_ie7](~/add/includes/tlasharptla-ie7-md.md)]瀏覽[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]。"
  remarks: "儲存後和向前巡覽記錄中的項目通常會顯示從 [上一頁] 及 [向前] 下拉式清單導覽上的瀏覽按鈕[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]主機導覽器，包括的<xref:System.Windows.Navigation.NavigationWindow>， <xref:System.Windows.Controls.Frame>，或[!INCLUDE[TLA#tla_ie7](~/add/includes/tlasharptla-ie7-md.md)]。</xref:System.Windows.Controls.Frame> </xref:System.Windows.Navigation.NavigationWindow>       JournalEntryName 是<xref:System.String>瀏覽歷程記錄在下拉式清單中顯示的值。</xref:System.String>       JournalEntryName 並沒有覆寫。如果不是，下列資料片段用來瀏覽歷程記錄項目名稱，依優先順序會自動建構:- <xref:System.Windows.Controls.Page.Title%2A>.</xref:System.Windows.Controls.Page.Title%2A>      -<xref:System.Windows.Controls.Page.WindowTitle%2A>和[!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)]目前頁面-[!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)]目前頁面。</xref:System.Windows.Controls.Page.WindowTitle%2A>"
  syntax:
    content: public virtual string JournalEntryName { get; }
    return:
      type: System.String
      description: "<xref:System.String>名稱儲存在瀏覽歷程記錄的內容。</xref:System.String>"
  overload: System.Windows.Navigation.CustomContentState.JournalEntryName*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Navigation.CustomContentState.Replay(System.Windows.Navigation.NavigationService,System.Windows.Navigation.NavigationMode)
  id: Replay(System.Windows.Navigation.NavigationService,System.Windows.Navigation.NavigationMode)
  parent: System.Windows.Navigation.CustomContentState
  langs:
  - csharp
  name: Replay(NavigationService,NavigationMode)
  nameWithType: CustomContentState.Replay(NavigationService,NavigationMode)
  fullName: System.Windows.Navigation.CustomContentState.Replay(NavigationService,NavigationMode)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Navigation
  summary: "呼叫以重新套用狀態一段內容至時進行巡覽。"
  remarks: "重新執行時，會呼叫項目都具有相關聯的巡覽記錄中<xref:System.Windows.Navigation.CustomContentState>物件導覽至。</xref:System.Windows.Navigation.CustomContentState>       衍生自抽象<xref:System.Windows.Navigation.CustomContentState>重新執行的類別必須覆寫，雖然覆寫實作只需要呼叫基底方法，重新執行。</xref:System.Windows.Navigation.CustomContentState>"
  syntax:
    content: public abstract void Replay (System.Windows.Navigation.NavigationService navigationService, System.Windows.Navigation.NavigationMode mode);
    parameters:
    - id: navigationService
      type: System.Windows.Navigation.NavigationService
      description: "<xref href=&quot;System.Windows.Navigation.NavigationService&quot;> </xref>擁有負責這個內容導覽的<xref href=&quot;System.Windows.Navigation.CustomContentState&quot;></xref>套用。"
    - id: mode
      type: System.Windows.Navigation.NavigationMode
      description: "A <xref href=&quot;System.Windows.Navigation.NavigationMode&quot;> </xref> ，指定如何內容的<xref href=&quot;System.Windows.Navigation.CustomContentState&quot;></xref>是套用所巡覽。"
  overload: System.Windows.Navigation.CustomContentState.Replay*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Windows.Navigation.CustomContentState.#ctor
  parent: System.Windows.Navigation.CustomContentState
  isExternal: false
  name: CustomContentState()
  nameWithType: CustomContentState.CustomContentState()
  fullName: System.Windows.Navigation.CustomContentState.CustomContentState()
- uid: System.Windows.Navigation.CustomContentState.JournalEntryName
  parent: System.Windows.Navigation.CustomContentState
  isExternal: false
  name: JournalEntryName
  nameWithType: CustomContentState.JournalEntryName
  fullName: System.Windows.Navigation.CustomContentState.JournalEntryName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Navigation.CustomContentState.Replay(System.Windows.Navigation.NavigationService,System.Windows.Navigation.NavigationMode)
  parent: System.Windows.Navigation.CustomContentState
  isExternal: false
  name: Replay(NavigationService,NavigationMode)
  nameWithType: CustomContentState.Replay(NavigationService,NavigationMode)
  fullName: System.Windows.Navigation.CustomContentState.Replay(NavigationService,NavigationMode)
- uid: System.Windows.Navigation.NavigationService
  parent: System.Windows.Navigation
  isExternal: false
  name: NavigationService
  nameWithType: NavigationService
  fullName: System.Windows.Navigation.NavigationService
- uid: System.Windows.Navigation.NavigationMode
  parent: System.Windows.Navigation
  isExternal: false
  name: NavigationMode
  nameWithType: NavigationMode
  fullName: System.Windows.Navigation.NavigationMode
- uid: System.Windows.Navigation.CustomContentState.#ctor*
  parent: System.Windows.Navigation.CustomContentState
  isExternal: false
  name: CustomContentState
  nameWithType: CustomContentState.CustomContentState
- uid: System.Windows.Navigation.CustomContentState.JournalEntryName*
  parent: System.Windows.Navigation.CustomContentState
  isExternal: false
  name: JournalEntryName
  nameWithType: CustomContentState.JournalEntryName
- uid: System.Windows.Navigation.CustomContentState.Replay*
  parent: System.Windows.Navigation.CustomContentState
  isExternal: false
  name: Replay
  nameWithType: CustomContentState.Replay
