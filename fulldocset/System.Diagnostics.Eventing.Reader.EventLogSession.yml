### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.Eventing.Reader.EventLogSession
  id: EventLogSession
  children:
  - System.Diagnostics.Eventing.Reader.EventLogSession.#ctor
  - System.Diagnostics.Eventing.Reader.EventLogSession.#ctor(System.String)
  - System.Diagnostics.Eventing.Reader.EventLogSession.#ctor(System.String,System.String,System.String,System.Security.SecureString,System.Diagnostics.Eventing.Reader.SessionAuthentication)
  - System.Diagnostics.Eventing.Reader.EventLogSession.CancelCurrentOperations
  - System.Diagnostics.Eventing.Reader.EventLogSession.ClearLog(System.String)
  - System.Diagnostics.Eventing.Reader.EventLogSession.ClearLog(System.String,System.String)
  - System.Diagnostics.Eventing.Reader.EventLogSession.Dispose
  - System.Diagnostics.Eventing.Reader.EventLogSession.Dispose(System.Boolean)
  - System.Diagnostics.Eventing.Reader.EventLogSession.ExportLog(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String)
  - System.Diagnostics.Eventing.Reader.EventLogSession.ExportLog(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String,System.Boolean)
  - System.Diagnostics.Eventing.Reader.EventLogSession.ExportLogAndMessages(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String)
  - System.Diagnostics.Eventing.Reader.EventLogSession.ExportLogAndMessages(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String,System.Boolean,System.Globalization.CultureInfo)
  - System.Diagnostics.Eventing.Reader.EventLogSession.GetLogInformation(System.String,System.Diagnostics.Eventing.Reader.PathType)
  - System.Diagnostics.Eventing.Reader.EventLogSession.GetLogNames
  - System.Diagnostics.Eventing.Reader.EventLogSession.GetProviderNames
  - System.Diagnostics.Eventing.Reader.EventLogSession.GlobalSession
  langs:
  - csharp
  name: EventLogSession
  nameWithType: EventLogSession
  fullName: System.Diagnostics.Eventing.Reader.EventLogSession
  type: Class
  summary: "用來存取本機電腦或遠端電腦上的事件記錄服務，讓您可以管理，並在電腦上收集事件記錄檔和事件提供者的相關資訊。"
  remarks: ''
  example:
  - 'For example code using this class, see [How To: Query for Events](http://msdn.microsoft.com/en-us/5231a436-4cf2-4539-90d2-a04813aba069), [How to: Retrieve Information About an Event Publisher](http://msdn.microsoft.com/en-us/2a3e897f-25a9-4dad-8541-171ac49970a3) or [How to: Configure and Read Event Log Properties](http://msdn.microsoft.com/en-us/2d2b00b3-2d1d-4567-a47e-3f5a7c1955ac).'
  syntax:
    content: 'public class EventLogSession : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogSession.#ctor
  id: '#ctor'
  parent: System.Diagnostics.Eventing.Reader.EventLogSession
  langs:
  - csharp
  name: EventLogSession()
  nameWithType: EventLogSession.EventLogSession()
  fullName: System.Diagnostics.Eventing.Reader.EventLogSession.EventLogSession()
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "初始化新<xref href=&quot;System.Diagnostics.Eventing.Reader.EventLogSession&quot;></xref>物件，與本機事件記錄檔服務建立連線。"
  syntax:
    content: public EventLogSession ();
    parameters: []
  overload: System.Diagnostics.Eventing.Reader.EventLogSession.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogSession.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Diagnostics.Eventing.Reader.EventLogSession
  langs:
  - csharp
  name: EventLogSession(String)
  nameWithType: EventLogSession.EventLogSession(String)
  fullName: System.Diagnostics.Eventing.Reader.EventLogSession.EventLogSession(String)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "初始化新<xref href=&quot;System.Diagnostics.Eventing.Reader.EventLogSession&quot;></xref>物件，並與指定的電腦上的事件日誌服務建立連線。 呼叫方法的使用者的認證 （使用者名稱和密碼） 的認證用於存取遠端電腦。"
  syntax:
    content: public EventLogSession (string server);
    parameters:
    - id: server
      type: System.String
      description: "用來連接到事件記錄檔服務的電腦名稱。"
  overload: System.Diagnostics.Eventing.Reader.EventLogSession.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogSession.#ctor(System.String,System.String,System.String,System.Security.SecureString,System.Diagnostics.Eventing.Reader.SessionAuthentication)
  id: '#ctor(System.String,System.String,System.String,System.Security.SecureString,System.Diagnostics.Eventing.Reader.SessionAuthentication)'
  parent: System.Diagnostics.Eventing.Reader.EventLogSession
  langs:
  - csharp
  name: EventLogSession(String,String,String,SecureString,SessionAuthentication)
  nameWithType: EventLogSession.EventLogSession(String,String,String,SecureString,SessionAuthentication)
  fullName: System.Diagnostics.Eventing.Reader.EventLogSession.EventLogSession(String,String,String,SecureString,SessionAuthentication)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "初始化新<xref href=&quot;System.Diagnostics.Eventing.Reader.EventLogSession&quot;></xref>物件，並與指定的電腦上的事件日誌服務建立連線。 指定的認證 （使用者名稱和密碼） 可用的認證來存取遠端電腦。"
  syntax:
    content: public EventLogSession (string server, string domain, string user, System.Security.SecureString password, System.Diagnostics.Eventing.Reader.SessionAuthentication logOnType);
    parameters:
    - id: server
      type: System.String
      description: "用來連接到事件記錄檔服務的電腦名稱。"
    - id: domain
      type: System.String
      description: "指定的使用者網域。"
    - id: user
      type: System.String
      description: "用來連線到遠端電腦的使用者名稱。"
    - id: password
      type: System.Security.SecureString
      description: "用來連線到遠端電腦的密碼。"
    - id: logOnType
      type: System.Diagnostics.Eventing.Reader.SessionAuthentication
      description: "要用於連線到遠端電腦的連線類型。"
  overload: System.Diagnostics.Eventing.Reader.EventLogSession.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogSession.CancelCurrentOperations
  id: CancelCurrentOperations
  parent: System.Diagnostics.Eventing.Reader.EventLogSession
  langs:
  - csharp
  name: CancelCurrentOperations()
  nameWithType: EventLogSession.CancelCurrentOperations()
  fullName: System.Diagnostics.Eventing.Reader.EventLogSession.CancelCurrentOperations()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "取消此工作階段物件連接到事件記錄檔服務目前正在進行的任何作業 （例如讀取事件記錄檔，或訂閱事件記錄檔）。"
  syntax:
    content: public void CancelCurrentOperations ();
    parameters: []
  overload: System.Diagnostics.Eventing.Reader.EventLogSession.CancelCurrentOperations*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogSession.ClearLog(System.String)
  id: ClearLog(System.String)
  parent: System.Diagnostics.Eventing.Reader.EventLogSession
  langs:
  - csharp
  name: ClearLog(String)
  nameWithType: EventLogSession.ClearLog(String)
  fullName: System.Diagnostics.Eventing.Reader.EventLogSession.ClearLog(String)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "從指定的事件記錄檔清除事件。"
  remarks: ''
  example:
  - 'For example code using this class, see [How To: Export, Archive, and Clear Event Logs](http://msdn.microsoft.com/en-us/7753ff87-f402-41ac-ac64-767e04dd1773).'
  syntax:
    content: public void ClearLog (string logName);
    parameters:
    - id: logName
      type: System.String
      description: "若要清除的所有事件的事件記錄檔名稱。"
  overload: System.Diagnostics.Eventing.Reader.EventLogSession.ClearLog*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogSession.ClearLog(System.String,System.String)
  id: ClearLog(System.String,System.String)
  parent: System.Diagnostics.Eventing.Reader.EventLogSession
  langs:
  - csharp
  name: ClearLog(String,String)
  nameWithType: EventLogSession.ClearLog(String,String)
  fullName: System.Diagnostics.Eventing.Reader.EventLogSession.ClearLog(String,String)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "從指定的事件記錄檔中，清除事件，並將已清除的事件儲存至指定的檔案。"
  remarks: ''
  example:
  - 'For example code using this class, see [How To: Export, Archive, and Clear Event Logs](http://msdn.microsoft.com/en-us/7753ff87-f402-41ac-ac64-767e04dd1773).'
  syntax:
    content: public void ClearLog (string logName, string backupPath);
    parameters:
    - id: logName
      type: System.String
      description: "若要清除的所有事件的事件記錄檔名稱。"
    - id: backupPath
      type: System.String
      description: "已清除的事件會儲存的檔案路徑。 檔案應以.evtx 結尾。"
  overload: System.Diagnostics.Eventing.Reader.EventLogSession.ClearLog*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogSession.Dispose
  id: Dispose
  parent: System.Diagnostics.Eventing.Reader.EventLogSession
  langs:
  - csharp
  name: Dispose()
  nameWithType: EventLogSession.Dispose()
  fullName: System.Diagnostics.Eventing.Reader.EventLogSession.Dispose()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "釋放這個物件所使用的所有資源。"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Diagnostics.Eventing.Reader.EventLogSession.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogSession.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Diagnostics.Eventing.Reader.EventLogSession
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: EventLogSession.Dispose(Boolean)
  fullName: System.Diagnostics.Eventing.Reader.EventLogSession.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "釋放這個物件時，所使用的 unmanaged 的資源並選擇性釋放 managed 的資源。"
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>表示釋放 managed 和 unmanaged 資源，<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>表示只釋放 unmanaged 的資源。"
  overload: System.Diagnostics.Eventing.Reader.EventLogSession.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogSession.ExportLog(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String)
  id: ExportLog(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String)
  parent: System.Diagnostics.Eventing.Reader.EventLogSession
  langs:
  - csharp
  name: ExportLog(String,PathType,String,String)
  nameWithType: EventLogSession.ExportLog(String,PathType,String,String)
  fullName: System.Diagnostics.Eventing.Reader.EventLogSession.ExportLog(String,PathType,String,String)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "將事件匯出到外部記錄檔。 事件會儲存不事件訊息。"
  syntax:
    content: public void ExportLog (string path, System.Diagnostics.Eventing.Reader.PathType pathType, string query, string targetFilePath);
    parameters:
    - id: path
      type: System.String
      description: "事件記錄檔，匯出來源或匯出來源的事件記錄檔的路徑名稱。"
    - id: pathType
      type: System.Diagnostics.Eventing.Reader.PathType
      description: "指定是否使用 path 參數中的字串會指定事件記錄檔或事件記錄檔的路徑名稱。"
    - id: query
      type: System.String
      description: "用來選取要匯出之事件的查詢。  將匯出只從查詢傳回的事件。"
    - id: targetFilePath
      type: System.String
      description: "記錄檔 （.evtx 以結束） 中匯出的事件會儲存在執行這個方法之後路徑。"
  overload: System.Diagnostics.Eventing.Reader.EventLogSession.ExportLog*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogSession.ExportLog(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String,System.Boolean)
  id: ExportLog(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String,System.Boolean)
  parent: System.Diagnostics.Eventing.Reader.EventLogSession
  langs:
  - csharp
  name: ExportLog(String,PathType,String,String,Boolean)
  nameWithType: EventLogSession.ExportLog(String,PathType,String,String,Boolean)
  fullName: System.Diagnostics.Eventing.Reader.EventLogSession.ExportLog(String,PathType,String,String,Boolean)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "將事件匯出到外部記錄檔。 可以設定旗標，以指出方法仍會繼續匯出事件，即使指定的查詢失敗的一些記錄檔。 事件會儲存不事件訊息。"
  syntax:
    content: public void ExportLog (string path, System.Diagnostics.Eventing.Reader.PathType pathType, string query, string targetFilePath, bool tolerateQueryErrors);
    parameters:
    - id: path
      type: System.String
      description: "事件記錄檔，匯出來源或匯出來源的事件記錄檔的路徑名稱。"
    - id: pathType
      type: System.Diagnostics.Eventing.Reader.PathType
      description: "指定是否使用 path 參數中的字串會指定事件記錄檔或事件記錄檔的路徑名稱。"
    - id: query
      type: System.String
      description: "用來選取要匯出之事件的查詢。 將匯出只從查詢傳回的事件。"
    - id: targetFilePath
      type: System.String
      description: "記錄檔 （.evtx 以結束） 中匯出的事件會儲存在執行這個方法之後路徑。"
    - id: tolerateQueryErrors
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>表示方法，匯出事件，即使指定的查詢失敗的一些記錄檔，會繼續和<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>表示這個方法不會繼續以匯出指定的查詢失敗時的事件。"
  overload: System.Diagnostics.Eventing.Reader.EventLogSession.ExportLog*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogSession.ExportLogAndMessages(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String)
  id: ExportLogAndMessages(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String)
  parent: System.Diagnostics.Eventing.Reader.EventLogSession
  langs:
  - csharp
  name: ExportLogAndMessages(String,PathType,String,String)
  nameWithType: EventLogSession.ExportLogAndMessages(String,PathType,String,String)
  fullName: System.Diagnostics.Eventing.Reader.EventLogSession.ExportLogAndMessages(String,PathType,String,String)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "匯出到外部的記錄檔的事件和其訊息。"
  remarks: "事件訊息會以預設語言進行匯出。"
  example:
  - 'For example code using this class, see [How to: Export, Archive, and Clear Event Logs](https://msdn.microsoft.com/library/bb671203.aspx).'
  syntax:
    content: public void ExportLogAndMessages (string path, System.Diagnostics.Eventing.Reader.PathType pathType, string query, string targetFilePath);
    parameters:
    - id: path
      type: System.String
      description: "事件記錄檔，匯出來源或匯出來源的事件記錄檔的路徑名稱。"
    - id: pathType
      type: System.Diagnostics.Eventing.Reader.PathType
      description: "指定是否使用 path 參數中的字串會指定事件記錄檔或事件記錄檔的路徑名稱。"
    - id: query
      type: System.String
      description: "用來選取要匯出之事件的查詢。  將匯出只從查詢傳回的事件。"
    - id: targetFilePath
      type: System.String
      description: "記錄檔 （.evtx 以結束） 中匯出的事件會儲存在執行這個方法之後路徑。"
  overload: System.Diagnostics.Eventing.Reader.EventLogSession.ExportLogAndMessages*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogSession.ExportLogAndMessages(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String,System.Boolean,System.Globalization.CultureInfo)
  id: ExportLogAndMessages(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String,System.Boolean,System.Globalization.CultureInfo)
  parent: System.Diagnostics.Eventing.Reader.EventLogSession
  langs:
  - csharp
  name: ExportLogAndMessages(String,PathType,String,String,Boolean,CultureInfo)
  nameWithType: EventLogSession.ExportLogAndMessages(String,PathType,String,String,Boolean,CultureInfo)
  fullName: System.Diagnostics.Eventing.Reader.EventLogSession.ExportLogAndMessages(String,PathType,String,String,Boolean,CultureInfo)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "匯出到外部的記錄檔的事件和其訊息。 可以設定旗標，以指出方法仍會繼續匯出事件，即使指定的查詢失敗的一些記錄檔。 事件訊息會匯出指定的語言。"
  remarks: ''
  example:
  - 'For example code using this class, see [How to: Export, Archive, and Clear Event Logs](https://msdn.microsoft.com/library/bb671203.aspx).'
  syntax:
    content: public void ExportLogAndMessages (string path, System.Diagnostics.Eventing.Reader.PathType pathType, string query, string targetFilePath, bool tolerateQueryErrors, System.Globalization.CultureInfo targetCultureInfo);
    parameters:
    - id: path
      type: System.String
      description: "事件記錄檔，匯出來源或匯出來源的事件記錄檔的路徑名稱。"
    - id: pathType
      type: System.Diagnostics.Eventing.Reader.PathType
      description: "指定是否使用 path 參數中的字串會指定事件記錄檔或事件記錄檔的路徑名稱。"
    - id: query
      type: System.String
      description: "用來選取要匯出之事件的查詢。  將匯出只從查詢傳回的事件。"
    - id: targetFilePath
      type: System.String
      description: "記錄檔 （.evtx 以結束） 中匯出的事件會儲存在執行這個方法之後路徑。"
    - id: tolerateQueryErrors
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>表示方法，匯出事件，即使指定的查詢失敗的一些記錄檔，會繼續和<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>表示這個方法不會繼續以匯出指定的查詢失敗時的事件。"
    - id: targetCultureInfo
      type: System.Globalization.CultureInfo
      description: "指定匯出的事件訊息會在哪一個語言的文化特性。"
  overload: System.Diagnostics.Eventing.Reader.EventLogSession.ExportLogAndMessages*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogSession.GetLogInformation(System.String,System.Diagnostics.Eventing.Reader.PathType)
  id: GetLogInformation(System.String,System.Diagnostics.Eventing.Reader.PathType)
  parent: System.Diagnostics.Eventing.Reader.EventLogSession
  langs:
  - csharp
  name: GetLogInformation(String,PathType)
  nameWithType: EventLogSession.GetLogInformation(String,PathType)
  fullName: System.Diagnostics.Eventing.Reader.EventLogSession.GetLogInformation(String,PathType)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "取得物件，其中包含指定的事件記錄檔的執行階段資訊。"
  syntax:
    content: public System.Diagnostics.Eventing.Reader.EventLogInformation GetLogInformation (string logName, System.Diagnostics.Eventing.Reader.PathType pathType);
    parameters:
    - id: logName
      type: System.String
      description: "事件記錄檔以取得資訊或要取得相關資訊的事件記錄檔的路徑名稱。"
    - id: pathType
      type: System.Diagnostics.Eventing.Reader.PathType
      description: "指定是否使用 path 參數中的字串會指定事件記錄檔或事件記錄檔的路徑名稱。"
    return:
      type: System.Diagnostics.Eventing.Reader.EventLogInformation
      description: "傳回<xref href=&quot;System.Diagnostics.Eventing.Reader.EventLogInformation&quot;></xref>物件，其中包含指定的記錄檔的相關資訊。"
  overload: System.Diagnostics.Eventing.Reader.EventLogSession.GetLogInformation*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogSession.GetLogNames
  id: GetLogNames
  parent: System.Diagnostics.Eventing.Reader.EventLogSession
  langs:
  - csharp
  name: GetLogNames()
  nameWithType: EventLogSession.GetLogNames()
  fullName: System.Diagnostics.Eventing.Reader.EventLogSession.GetLogNames()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "取得事件記錄服務註冊的所有事件記錄檔名稱的可列舉集合。"
  syntax:
    content: public System.Collections.Generic.IEnumerable<string> GetLogNames ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
      description: "傳回字串，包含事件記錄檔名稱的可列舉集合。"
  overload: System.Diagnostics.Eventing.Reader.EventLogSession.GetLogNames*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogSession.GetProviderNames
  id: GetProviderNames
  parent: System.Diagnostics.Eventing.Reader.EventLogSession
  langs:
  - csharp
  name: GetProviderNames()
  nameWithType: EventLogSession.GetProviderNames()
  fullName: System.Diagnostics.Eventing.Reader.EventLogSession.GetProviderNames()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "取得事件記錄服務註冊的所有事件提供者名稱的可列舉集合。 事件提供者是將事件發行到事件記錄檔的應用程式。"
  syntax:
    content: public System.Collections.Generic.IEnumerable<string> GetProviderNames ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
      description: "傳回字串，包含事件提供者名稱的可列舉集合。"
  overload: System.Diagnostics.Eventing.Reader.EventLogSession.GetProviderNames*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogSession.GlobalSession
  id: GlobalSession
  parent: System.Diagnostics.Eventing.Reader.EventLogSession
  langs:
  - csharp
  name: GlobalSession
  nameWithType: EventLogSession.GlobalSession
  fullName: System.Diagnostics.Eventing.Reader.EventLogSession.GlobalSession
  type: Property
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "取得靜態預先定義的工作階段物件連接到本機電腦上的事件記錄服務。"
  syntax:
    content: public static System.Diagnostics.Eventing.Reader.EventLogSession GlobalSession { get; }
    return:
      type: System.Diagnostics.Eventing.Reader.EventLogSession
      description: "傳回<xref href=&quot;System.Diagnostics.Eventing.Reader.EventLogSession&quot;></xref>是預先定義的工作階段物件連接到本機電腦上的事件記錄服務的物件。"
  overload: System.Diagnostics.Eventing.Reader.EventLogSession.GlobalSession*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Diagnostics.Eventing.Reader.EventLogSession.#ctor
  parent: System.Diagnostics.Eventing.Reader.EventLogSession
  isExternal: false
  name: EventLogSession()
  nameWithType: EventLogSession.EventLogSession()
  fullName: System.Diagnostics.Eventing.Reader.EventLogSession.EventLogSession()
- uid: System.Diagnostics.Eventing.Reader.EventLogSession.#ctor(System.String)
  parent: System.Diagnostics.Eventing.Reader.EventLogSession
  isExternal: false
  name: EventLogSession(String)
  nameWithType: EventLogSession.EventLogSession(String)
  fullName: System.Diagnostics.Eventing.Reader.EventLogSession.EventLogSession(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Diagnostics.Eventing.Reader.EventLogSession.#ctor(System.String,System.String,System.String,System.Security.SecureString,System.Diagnostics.Eventing.Reader.SessionAuthentication)
  parent: System.Diagnostics.Eventing.Reader.EventLogSession
  isExternal: false
  name: EventLogSession(String,String,String,SecureString,SessionAuthentication)
  nameWithType: EventLogSession.EventLogSession(String,String,String,SecureString,SessionAuthentication)
  fullName: System.Diagnostics.Eventing.Reader.EventLogSession.EventLogSession(String,String,String,SecureString,SessionAuthentication)
- uid: System.Security.SecureString
  parent: System.Security
  isExternal: false
  name: SecureString
  nameWithType: SecureString
  fullName: System.Security.SecureString
- uid: System.Diagnostics.Eventing.Reader.SessionAuthentication
  parent: System.Diagnostics.Eventing.Reader
  isExternal: false
  name: SessionAuthentication
  nameWithType: SessionAuthentication
  fullName: System.Diagnostics.Eventing.Reader.SessionAuthentication
- uid: System.Diagnostics.Eventing.Reader.EventLogSession.CancelCurrentOperations
  parent: System.Diagnostics.Eventing.Reader.EventLogSession
  isExternal: false
  name: CancelCurrentOperations()
  nameWithType: EventLogSession.CancelCurrentOperations()
  fullName: System.Diagnostics.Eventing.Reader.EventLogSession.CancelCurrentOperations()
- uid: System.Diagnostics.Eventing.Reader.EventLogSession.ClearLog(System.String)
  parent: System.Diagnostics.Eventing.Reader.EventLogSession
  isExternal: false
  name: ClearLog(String)
  nameWithType: EventLogSession.ClearLog(String)
  fullName: System.Diagnostics.Eventing.Reader.EventLogSession.ClearLog(String)
- uid: System.Diagnostics.Eventing.Reader.EventLogSession.ClearLog(System.String,System.String)
  parent: System.Diagnostics.Eventing.Reader.EventLogSession
  isExternal: false
  name: ClearLog(String,String)
  nameWithType: EventLogSession.ClearLog(String,String)
  fullName: System.Diagnostics.Eventing.Reader.EventLogSession.ClearLog(String,String)
- uid: System.Diagnostics.Eventing.Reader.EventLogSession.Dispose
  parent: System.Diagnostics.Eventing.Reader.EventLogSession
  isExternal: false
  name: Dispose()
  nameWithType: EventLogSession.Dispose()
  fullName: System.Diagnostics.Eventing.Reader.EventLogSession.Dispose()
- uid: System.Diagnostics.Eventing.Reader.EventLogSession.Dispose(System.Boolean)
  parent: System.Diagnostics.Eventing.Reader.EventLogSession
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: EventLogSession.Dispose(Boolean)
  fullName: System.Diagnostics.Eventing.Reader.EventLogSession.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Diagnostics.Eventing.Reader.EventLogSession.ExportLog(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String)
  parent: System.Diagnostics.Eventing.Reader.EventLogSession
  isExternal: false
  name: ExportLog(String,PathType,String,String)
  nameWithType: EventLogSession.ExportLog(String,PathType,String,String)
  fullName: System.Diagnostics.Eventing.Reader.EventLogSession.ExportLog(String,PathType,String,String)
- uid: System.Diagnostics.Eventing.Reader.PathType
  parent: System.Diagnostics.Eventing.Reader
  isExternal: false
  name: PathType
  nameWithType: PathType
  fullName: System.Diagnostics.Eventing.Reader.PathType
- uid: System.Diagnostics.Eventing.Reader.EventLogSession.ExportLog(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String,System.Boolean)
  parent: System.Diagnostics.Eventing.Reader.EventLogSession
  isExternal: false
  name: ExportLog(String,PathType,String,String,Boolean)
  nameWithType: EventLogSession.ExportLog(String,PathType,String,String,Boolean)
  fullName: System.Diagnostics.Eventing.Reader.EventLogSession.ExportLog(String,PathType,String,String,Boolean)
- uid: System.Diagnostics.Eventing.Reader.EventLogSession.ExportLogAndMessages(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String)
  parent: System.Diagnostics.Eventing.Reader.EventLogSession
  isExternal: false
  name: ExportLogAndMessages(String,PathType,String,String)
  nameWithType: EventLogSession.ExportLogAndMessages(String,PathType,String,String)
  fullName: System.Diagnostics.Eventing.Reader.EventLogSession.ExportLogAndMessages(String,PathType,String,String)
- uid: System.Diagnostics.Eventing.Reader.EventLogSession.ExportLogAndMessages(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String,System.Boolean,System.Globalization.CultureInfo)
  parent: System.Diagnostics.Eventing.Reader.EventLogSession
  isExternal: false
  name: ExportLogAndMessages(String,PathType,String,String,Boolean,CultureInfo)
  nameWithType: EventLogSession.ExportLogAndMessages(String,PathType,String,String,Boolean,CultureInfo)
  fullName: System.Diagnostics.Eventing.Reader.EventLogSession.ExportLogAndMessages(String,PathType,String,String,Boolean,CultureInfo)
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Diagnostics.Eventing.Reader.EventLogSession.GetLogInformation(System.String,System.Diagnostics.Eventing.Reader.PathType)
  parent: System.Diagnostics.Eventing.Reader.EventLogSession
  isExternal: false
  name: GetLogInformation(String,PathType)
  nameWithType: EventLogSession.GetLogInformation(String,PathType)
  fullName: System.Diagnostics.Eventing.Reader.EventLogSession.GetLogInformation(String,PathType)
- uid: System.Diagnostics.Eventing.Reader.EventLogInformation
  parent: System.Diagnostics.Eventing.Reader
  isExternal: false
  name: EventLogInformation
  nameWithType: EventLogInformation
  fullName: System.Diagnostics.Eventing.Reader.EventLogInformation
- uid: System.Diagnostics.Eventing.Reader.EventLogSession.GetLogNames
  parent: System.Diagnostics.Eventing.Reader.EventLogSession
  isExternal: false
  name: GetLogNames()
  nameWithType: EventLogSession.GetLogNames()
  fullName: System.Diagnostics.Eventing.Reader.EventLogSession.GetLogNames()
- uid: System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Diagnostics.Eventing.Reader.EventLogSession.GetProviderNames
  parent: System.Diagnostics.Eventing.Reader.EventLogSession
  isExternal: false
  name: GetProviderNames()
  nameWithType: EventLogSession.GetProviderNames()
  fullName: System.Diagnostics.Eventing.Reader.EventLogSession.GetProviderNames()
- uid: System.Diagnostics.Eventing.Reader.EventLogSession.GlobalSession
  parent: System.Diagnostics.Eventing.Reader.EventLogSession
  isExternal: false
  name: GlobalSession
  nameWithType: EventLogSession.GlobalSession
  fullName: System.Diagnostics.Eventing.Reader.EventLogSession.GlobalSession
- uid: System.Diagnostics.Eventing.Reader.EventLogSession
  parent: System.Diagnostics.Eventing.Reader
  isExternal: false
  name: EventLogSession
  nameWithType: EventLogSession
  fullName: System.Diagnostics.Eventing.Reader.EventLogSession
- uid: System.Diagnostics.Eventing.Reader.EventLogSession.#ctor*
  parent: System.Diagnostics.Eventing.Reader.EventLogSession
  isExternal: false
  name: EventLogSession
  nameWithType: EventLogSession.EventLogSession
- uid: System.Diagnostics.Eventing.Reader.EventLogSession.CancelCurrentOperations*
  parent: System.Diagnostics.Eventing.Reader.EventLogSession
  isExternal: false
  name: CancelCurrentOperations
  nameWithType: EventLogSession.CancelCurrentOperations
- uid: System.Diagnostics.Eventing.Reader.EventLogSession.ClearLog*
  parent: System.Diagnostics.Eventing.Reader.EventLogSession
  isExternal: false
  name: ClearLog
  nameWithType: EventLogSession.ClearLog
- uid: System.Diagnostics.Eventing.Reader.EventLogSession.Dispose*
  parent: System.Diagnostics.Eventing.Reader.EventLogSession
  isExternal: false
  name: Dispose
  nameWithType: EventLogSession.Dispose
- uid: System.Diagnostics.Eventing.Reader.EventLogSession.ExportLog*
  parent: System.Diagnostics.Eventing.Reader.EventLogSession
  isExternal: false
  name: ExportLog
  nameWithType: EventLogSession.ExportLog
- uid: System.Diagnostics.Eventing.Reader.EventLogSession.ExportLogAndMessages*
  parent: System.Diagnostics.Eventing.Reader.EventLogSession
  isExternal: false
  name: ExportLogAndMessages
  nameWithType: EventLogSession.ExportLogAndMessages
- uid: System.Diagnostics.Eventing.Reader.EventLogSession.GetLogInformation*
  parent: System.Diagnostics.Eventing.Reader.EventLogSession
  isExternal: false
  name: GetLogInformation
  nameWithType: EventLogSession.GetLogInformation
- uid: System.Diagnostics.Eventing.Reader.EventLogSession.GetLogNames*
  parent: System.Diagnostics.Eventing.Reader.EventLogSession
  isExternal: false
  name: GetLogNames
  nameWithType: EventLogSession.GetLogNames
- uid: System.Diagnostics.Eventing.Reader.EventLogSession.GetProviderNames*
  parent: System.Diagnostics.Eventing.Reader.EventLogSession
  isExternal: false
  name: GetProviderNames
  nameWithType: EventLogSession.GetProviderNames
- uid: System.Diagnostics.Eventing.Reader.EventLogSession.GlobalSession*
  parent: System.Diagnostics.Eventing.Reader.EventLogSession
  isExternal: false
  name: GlobalSession
  nameWithType: EventLogSession.GlobalSession
