### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Tokens.SamlStatement
  id: SamlStatement
  children:
  - System.IdentityModel.Tokens.SamlStatement.#ctor
  - System.IdentityModel.Tokens.SamlStatement.CreatePolicy(System.IdentityModel.Claims.ClaimSet,System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator)
  - System.IdentityModel.Tokens.SamlStatement.IsReadOnly
  - System.IdentityModel.Tokens.SamlStatement.MakeReadOnly
  - System.IdentityModel.Tokens.SamlStatement.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)
  - System.IdentityModel.Tokens.SamlStatement.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)
  langs:
  - csharp
  name: SamlStatement
  nameWithType: SamlStatement
  fullName: System.IdentityModel.Tokens.SamlStatement
  type: Class
  summary: "代表用於宣告<xref href=&quot;System.IdentityModel.Tokens.SamlSecurityToken&quot;></xref>安全性權杖。"
  remarks: "<xref:System.IdentityModel.Tokens.SamlSecurityToken>安全性權杖會指定其宣告使用 SAML 判斷提示，可指定主體通過驗證時。</xref:System.IdentityModel.Tokens.SamlSecurityToken> 在 SAML 判斷提示的宣告會表示以 SAML 陳述式，都由 SamlStatement 類別。       SAML 規格會定義下列陳述式類型:- <xref:System.IdentityModel.Tokens.SamlAttributeStatement>- <xref:System.IdentityModel.Tokens.SamlAuthenticationStatement>- <xref:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement>- <xref:System.IdentityModel.Tokens.SamlSubjectStatement></xref:System.IdentityModel.Tokens.SamlSubjectStatement> </xref:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement> </xref:System.IdentityModel.Tokens.SamlAuthenticationStatement> </xref:System.IdentityModel.Tokens.SamlAttributeStatement>"
  syntax:
    content: public abstract class SamlStatement
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlStatement.#ctor
  id: '#ctor'
  parent: System.IdentityModel.Tokens.SamlStatement
  langs:
  - csharp
  name: SamlStatement()
  nameWithType: SamlStatement.SamlStatement()
  fullName: System.IdentityModel.Tokens.SamlStatement.SamlStatement()
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "初始化的新執行個體<xref href=&quot;System.IdentityModel.Tokens.SamlStatement&quot;></xref>類別。"
  syntax:
    content: protected SamlStatement ();
    parameters: []
  overload: System.IdentityModel.Tokens.SamlStatement.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlStatement.CreatePolicy(System.IdentityModel.Claims.ClaimSet,System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator)
  id: CreatePolicy(System.IdentityModel.Claims.ClaimSet,System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator)
  parent: System.IdentityModel.Tokens.SamlStatement
  langs:
  - csharp
  name: CreatePolicy(ClaimSet,SamlSecurityTokenAuthenticator)
  nameWithType: SamlStatement.CreatePolicy(ClaimSet,SamlSecurityTokenAuthenticator)
  fullName: System.IdentityModel.Tokens.SamlStatement.CreatePolicy(ClaimSet,SamlSecurityTokenAuthenticator)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "建立的授權原則<xref href=&quot;System.IdentityModel.Tokens.SamlSecurityToken&quot;></xref>安全性權杖。"
  remarks: "若要取得的授權原則使用 CreatePolicy 方法<xref:System.IdentityModel.Tokens.SamlSecurityToken>安全性權杖。</xref:System.IdentityModel.Tokens.SamlSecurityToken>"
  syntax:
    content: public abstract System.IdentityModel.Policy.IAuthorizationPolicy CreatePolicy (System.IdentityModel.Claims.ClaimSet issuer, System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator samlAuthenticator);
    parameters:
    - id: issuer
      type: System.IdentityModel.Claims.ClaimSet
      description: "A <xref href=&quot;System.IdentityModel.Claims.ClaimSet&quot;> </xref>表示的簽發者<xref href=&quot;System.IdentityModel.Tokens.SamlSecurityToken&quot;></xref>安全性權杖。"
    - id: samlAuthenticator
      type: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator
      description: "A <xref href=&quot;System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator&quot;> </xref>驗證<xref href=&quot;System.IdentityModel.Tokens.SamlSecurityToken&quot;></xref>安全性權杖。"
    return:
      type: System.IdentityModel.Policy.IAuthorizationPolicy
      description: "<xref href=&quot;System.IdentityModel.Policy.IAuthorizationPolicy&quot;> </xref>代表的授權原則<xref href=&quot;System.IdentityModel.Tokens.SamlSecurityToken&quot;></xref>安全性權杖。"
  overload: System.IdentityModel.Tokens.SamlStatement.CreatePolicy*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlStatement.IsReadOnly
  id: IsReadOnly
  parent: System.IdentityModel.Tokens.SamlStatement
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: SamlStatement.IsReadOnly
  fullName: System.IdentityModel.Tokens.SamlStatement.IsReadOnly
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "當在衍生類別中覆寫時，取得值，指出這個執行個體的屬性是否是唯讀狀態。"
  remarks: "類別衍生自<xref:System.IdentityModel.Tokens.SamlStatement>類別，應該將的 IsReadOnly 屬性設定為`true`時<xref:System.IdentityModel.Tokens.SamlStatement.MakeReadOnly%2A>方法呼叫。</xref:System.IdentityModel.Tokens.SamlStatement.MakeReadOnly%2A> </xref:System.IdentityModel.Tokens.SamlStatement>"
  syntax:
    content: public abstract bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果這個執行個體的屬性是唯讀的;否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.IdentityModel.Tokens.SamlStatement.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlStatement.MakeReadOnly
  id: MakeReadOnly
  parent: System.IdentityModel.Tokens.SamlStatement
  langs:
  - csharp
  name: MakeReadOnly()
  nameWithType: SamlStatement.MakeReadOnly()
  fullName: System.IdentityModel.Tokens.SamlStatement.MakeReadOnly()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "使得這個執行個體處於唯讀模式。"
  remarks: "呼叫 MakeReadOnly 方法時，<xref:System.IdentityModel.Tokens.SamlStatement.IsReadOnly%2A>屬性設定為`true`和不再可以設定這個執行個體的屬性。</xref:System.IdentityModel.Tokens.SamlStatement.IsReadOnly%2A>"
  syntax:
    content: public abstract void MakeReadOnly ();
    parameters: []
  overload: System.IdentityModel.Tokens.SamlStatement.MakeReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlStatement.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)
  id: ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)
  parent: System.IdentityModel.Tokens.SamlStatement
  langs:
  - csharp
  name: ReadXml(XmlDictionaryReader,SamlSerializer,SecurityTokenSerializer,SecurityTokenResolver)
  nameWithType: SamlStatement.ReadXml(XmlDictionaryReader,SamlSerializer,SecurityTokenSerializer,SecurityTokenResolver)
  fullName: System.IdentityModel.Tokens.SamlStatement.ReadXml(XmlDictionaryReader,SamlSerializer,SecurityTokenSerializer,SecurityTokenResolver)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "在衍生類別中覆寫，請從指定的 XML 讀取器讀取 SAML 陳述式。"
  remarks: "使用 ReadXml 方法來讀取 SAML 陳述式中，驗證 XML，並設定適當的屬性對應的屬性和項目。"
  syntax:
    content: public abstract void ReadXml (System.Xml.XmlDictionaryReader reader, System.IdentityModel.Tokens.SamlSerializer samlSerializer, System.IdentityModel.Selectors.SecurityTokenSerializer keyInfoSerializer, System.IdentityModel.Selectors.SecurityTokenResolver outOfBandTokenResolver);
    parameters:
    - id: reader
      type: System.Xml.XmlDictionaryReader
      description: "A<xref:System.Xml.XmlDictionaryReader>要讀取 SAML 陳述式。</xref:System.Xml.XmlDictionaryReader>"
    - id: samlSerializer
      type: System.IdentityModel.Tokens.SamlSerializer
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SamlSerializer&quot;> </xref>能夠讀取 SAML 規格中所定義的 SAML 陳述式中的 XML 項目。"
    - id: keyInfoSerializer
      type: System.IdentityModel.Selectors.SecurityTokenSerializer
      description: "A <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenSerializer&quot;> </xref>讀取<xref uid=&quot;langword_csharp_KeyInfo&quot; name=&quot;KeyInfo&quot; href=&quot;&quot;></xref>子句的數位簽章。"
    - id: outOfBandTokenResolver
      type: System.IdentityModel.Selectors.SecurityTokenResolver
      description: "A <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenResolver&quot;> </xref> ，判定建立數位簽章的安全性權杖。"
  overload: System.IdentityModel.Tokens.SamlStatement.ReadXml*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlStatement.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)
  id: WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)
  parent: System.IdentityModel.Tokens.SamlStatement
  langs:
  - csharp
  name: WriteXml(XmlDictionaryWriter,SamlSerializer,SecurityTokenSerializer)
  nameWithType: SamlStatement.WriteXml(XmlDictionaryWriter,SamlSerializer,SecurityTokenSerializer)
  fullName: System.IdentityModel.Tokens.SamlStatement.WriteXml(XmlDictionaryWriter,SamlSerializer,SecurityTokenSerializer)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "將 SAML 陳述式寫入至指定的 XML 序列化程式。"
  syntax:
    content: public abstract void WriteXml (System.Xml.XmlDictionaryWriter writer, System.IdentityModel.Tokens.SamlSerializer samlSerializer, System.IdentityModel.Selectors.SecurityTokenSerializer keyInfoSerializer);
    parameters:
    - id: writer
      type: System.Xml.XmlDictionaryWriter
      description: "A<xref:System.Xml.XmlDictionaryWriter>要寫入 SAML 陳述式。</xref:System.Xml.XmlDictionaryWriter>"
    - id: samlSerializer
      type: System.IdentityModel.Tokens.SamlSerializer
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SamlSerializer&quot;> </xref>能夠在 SAML 判斷提示中撰寫 XML 項目。"
    - id: keyInfoSerializer
      type: System.IdentityModel.Selectors.SecurityTokenSerializer
      description: "A <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenSerializer&quot;> </xref>能夠寫入<xref uid=&quot;langword_csharp_KeyInfo&quot; name=&quot;KeyInfo&quot; href=&quot;&quot;></xref>子句。"
  overload: System.IdentityModel.Tokens.SamlStatement.WriteXml*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.IdentityModel.Tokens.SamlStatement.#ctor
  parent: System.IdentityModel.Tokens.SamlStatement
  isExternal: false
  name: SamlStatement()
  nameWithType: SamlStatement.SamlStatement()
  fullName: System.IdentityModel.Tokens.SamlStatement.SamlStatement()
- uid: System.IdentityModel.Tokens.SamlStatement.CreatePolicy(System.IdentityModel.Claims.ClaimSet,System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator)
  parent: System.IdentityModel.Tokens.SamlStatement
  isExternal: false
  name: CreatePolicy(ClaimSet,SamlSecurityTokenAuthenticator)
  nameWithType: SamlStatement.CreatePolicy(ClaimSet,SamlSecurityTokenAuthenticator)
  fullName: System.IdentityModel.Tokens.SamlStatement.CreatePolicy(ClaimSet,SamlSecurityTokenAuthenticator)
- uid: System.IdentityModel.Policy.IAuthorizationPolicy
  parent: System.IdentityModel.Policy
  isExternal: false
  name: IAuthorizationPolicy
  nameWithType: IAuthorizationPolicy
  fullName: System.IdentityModel.Policy.IAuthorizationPolicy
- uid: System.IdentityModel.Claims.ClaimSet
  parent: System.IdentityModel.Claims
  isExternal: false
  name: ClaimSet
  nameWithType: ClaimSet
  fullName: System.IdentityModel.Claims.ClaimSet
- uid: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: SamlSecurityTokenAuthenticator
  nameWithType: SamlSecurityTokenAuthenticator
  fullName: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator
- uid: System.IdentityModel.Tokens.SamlStatement.IsReadOnly
  parent: System.IdentityModel.Tokens.SamlStatement
  isExternal: false
  name: IsReadOnly
  nameWithType: SamlStatement.IsReadOnly
  fullName: System.IdentityModel.Tokens.SamlStatement.IsReadOnly
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.Tokens.SamlStatement.MakeReadOnly
  parent: System.IdentityModel.Tokens.SamlStatement
  isExternal: false
  name: MakeReadOnly()
  nameWithType: SamlStatement.MakeReadOnly()
  fullName: System.IdentityModel.Tokens.SamlStatement.MakeReadOnly()
- uid: System.IdentityModel.Tokens.SamlStatement.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)
  parent: System.IdentityModel.Tokens.SamlStatement
  isExternal: false
  name: ReadXml(XmlDictionaryReader,SamlSerializer,SecurityTokenSerializer,SecurityTokenResolver)
  nameWithType: SamlStatement.ReadXml(XmlDictionaryReader,SamlSerializer,SecurityTokenSerializer,SecurityTokenResolver)
  fullName: System.IdentityModel.Tokens.SamlStatement.ReadXml(XmlDictionaryReader,SamlSerializer,SecurityTokenSerializer,SecurityTokenResolver)
- uid: System.Xml.XmlDictionaryReader
  parent: System.Xml
  isExternal: true
  name: XmlDictionaryReader
  nameWithType: XmlDictionaryReader
  fullName: System.Xml.XmlDictionaryReader
- uid: System.IdentityModel.Tokens.SamlSerializer
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SamlSerializer
  nameWithType: SamlSerializer
  fullName: System.IdentityModel.Tokens.SamlSerializer
- uid: System.IdentityModel.Selectors.SecurityTokenSerializer
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: SecurityTokenSerializer
  nameWithType: SecurityTokenSerializer
  fullName: System.IdentityModel.Selectors.SecurityTokenSerializer
- uid: System.IdentityModel.Selectors.SecurityTokenResolver
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: SecurityTokenResolver
  nameWithType: SecurityTokenResolver
  fullName: System.IdentityModel.Selectors.SecurityTokenResolver
- uid: System.IdentityModel.Tokens.SamlStatement.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)
  parent: System.IdentityModel.Tokens.SamlStatement
  isExternal: false
  name: WriteXml(XmlDictionaryWriter,SamlSerializer,SecurityTokenSerializer)
  nameWithType: SamlStatement.WriteXml(XmlDictionaryWriter,SamlSerializer,SecurityTokenSerializer)
  fullName: System.IdentityModel.Tokens.SamlStatement.WriteXml(XmlDictionaryWriter,SamlSerializer,SecurityTokenSerializer)
- uid: System.Xml.XmlDictionaryWriter
  parent: System.Xml
  isExternal: true
  name: XmlDictionaryWriter
  nameWithType: XmlDictionaryWriter
  fullName: System.Xml.XmlDictionaryWriter
- uid: System.IdentityModel.Tokens.SamlStatement.#ctor*
  parent: System.IdentityModel.Tokens.SamlStatement
  isExternal: false
  name: SamlStatement
  nameWithType: SamlStatement.SamlStatement
- uid: System.IdentityModel.Tokens.SamlStatement.CreatePolicy*
  parent: System.IdentityModel.Tokens.SamlStatement
  isExternal: false
  name: CreatePolicy
  nameWithType: SamlStatement.CreatePolicy
- uid: System.IdentityModel.Tokens.SamlStatement.IsReadOnly*
  parent: System.IdentityModel.Tokens.SamlStatement
  isExternal: false
  name: IsReadOnly
  nameWithType: SamlStatement.IsReadOnly
- uid: System.IdentityModel.Tokens.SamlStatement.MakeReadOnly*
  parent: System.IdentityModel.Tokens.SamlStatement
  isExternal: false
  name: MakeReadOnly
  nameWithType: SamlStatement.MakeReadOnly
- uid: System.IdentityModel.Tokens.SamlStatement.ReadXml*
  parent: System.IdentityModel.Tokens.SamlStatement
  isExternal: false
  name: ReadXml
  nameWithType: SamlStatement.ReadXml
- uid: System.IdentityModel.Tokens.SamlStatement.WriteXml*
  parent: System.IdentityModel.Tokens.SamlStatement
  isExternal: false
  name: WriteXml
  nameWithType: SamlStatement.WriteXml
