### YamlMime:ManagedReference
items:
- uid: System.Windows.Input.MouseGesture
  id: MouseGesture
  children:
  - System.Windows.Input.MouseGesture.#ctor
  - System.Windows.Input.MouseGesture.#ctor(System.Windows.Input.MouseAction)
  - System.Windows.Input.MouseGesture.#ctor(System.Windows.Input.MouseAction,System.Windows.Input.ModifierKeys)
  - System.Windows.Input.MouseGesture.Matches(System.Object,System.Windows.Input.InputEventArgs)
  - System.Windows.Input.MouseGesture.Modifiers
  - System.Windows.Input.MouseGesture.MouseAction
  langs:
  - csharp
  name: MouseGesture
  nameWithType: MouseGesture
  fullName: System.Windows.Input.MouseGesture
  type: Class
  summary: "定義可用來叫用命令的滑鼠輸入的軌跡。"
  remarks: "不同於<xref:System.Windows.Input.KeyGesture>、<xref:System.Windows.Input.MouseAction>並沒有搭配<xref:System.Windows.Input.ModifierKeys>是有效的 MouseGesture。</xref:System.Windows.Input.ModifierKeys> </xref:System.Windows.Input.MouseAction> </xref:System.Windows.Input.KeyGesture>       可以繫結至 MouseGesture <xref:System.Windows.Input.RoutedCommand>(或其他<xref:System.Windows.Input.ICommand>實作) 透過<xref:System.Windows.Input.MouseBinding>以便 MouseGesture 發生時叫用命令。</xref:System.Windows.Input.MouseBinding> </xref:System.Windows.Input.ICommand> </xref:System.Windows.Input.RoutedCommand>       如 MouseGesture[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]屬性使用方式，通常在中設定的屬性[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]是<xref:System.Windows.Input.MouseBinding.Gesture%2A>，在其中筆勢可以代表滑鼠動作和一個或多個輔助按鍵的情況下。</xref:System.Windows.Input.MouseBinding.Gesture%2A> 您也可以設定<xref:System.Windows.Input.MouseBinding.Gesture%2A>屬性是只在滑鼠動作。</xref:System.Windows.Input.MouseBinding.Gesture%2A> 一般情況下，建議您只使用<xref:System.Windows.Input.KeyBinding.Gesture%2A>屬性從[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]，而非設定<xref:System.Windows.Input.MouseBinding.MouseAction%2A>，即使您未指定修飾詞。</xref:System.Windows.Input.MouseBinding.MouseAction%2A> </xref:System.Windows.Input.KeyBinding.Gesture%2A> 這將可避免模稜兩可，提供最有效率的語法，並可提供最直接的序列化表示。       MouseGesture[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]物件項目使用方式是可行的但不常見，因為您通常可以設定<xref:System.Windows.Input.MouseBinding.Gesture%2A>屬性<xref:System.Windows.Input.MouseBinding>內嵌，而不會使用屬性項目語法。</xref:System.Windows.Input.MouseBinding> </xref:System.Windows.Input.MouseBinding.Gesture%2A>      <a name=&quot;xamlAttributeUsage_MouseGesture&quot;></a># # XAML 屬性使用方式```   <object property=&quot;mouseAction&quot;/>   - or -   <object property=&quot;oneOrMoreModifierKeys+mouseAction&quot;/>   ``` <a name=&quot;xamlValues_MouseGesture&quot;> </a> # # XAML 值`mouseAction`<xref:System.Windows.Input.MouseAction>單一滑鼠動作。</xref:System.Windows.Input.MouseAction>                 `oneOrMoreModifierKeys`一或多個所定義的輔助按鍵<xref:System.Windows.Input.ModifierKeys>列舉型別。</xref:System.Windows.Input.ModifierKeys> 如果提供多個輔助按鍵，則每個修飾詞的索引鍵是以&quot;+&quot;字元分隔。"
  example:
  - "The following example shows to create a MouseGesture and associate it with a <xref:System.Windows.Input.RoutedCommand> through a <xref:System.Windows.Input.MouseBinding>.  When the mouse wheel is clicked while the <xref:System.Windows.Input.ModifierKeys> key is pressed, the <xref:System.Windows.Input.ApplicationCommands.Open%2A> is invoked.  \n  \n [!code-xml[commandlibrarysnippets#MouseBindingMouseGestureXAML](~/add/codesnippet/xaml/CommandLibarySnippets/Window1.xaml#mousebindingmousegesturexaml)]  \n  \n [!code-cs[commandlibrarysnippets#MouseBindingAddedToInputBinding](~/add/codesnippet/csharp/CommandLibarySnippets/Window1.xaml.cs#mousebindingaddedtoinputbinding)]\n [!code-vb[commandlibrarysnippets#MouseBindingAddedToInputBinding](~/add/codesnippet/visualbasic/commandlibarysnippets/window1.xaml.vb#mousebindingaddedtoinputbinding)]"
  syntax:
    content: >-
      [System.ComponentModel.TypeConverter(typeof(System.Windows.Input.MouseGestureConverter))]

      [System.Windows.Markup.ValueSerializer(typeof(System.Windows.Input.MouseGestureValueSerializer))]

      public class MouseGesture : System.Windows.Input.InputGesture
  inheritance:
  - System.Object
  - System.Windows.Input.InputGesture
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Input.MouseGesture.#ctor
  id: '#ctor'
  parent: System.Windows.Input.MouseGesture
  langs:
  - csharp
  name: MouseGesture()
  nameWithType: MouseGesture.MouseGesture()
  fullName: System.Windows.Input.MouseGesture.MouseGesture()
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "初始化的新執行個體<xref href=&quot;System.Windows.Input.MouseGesture&quot;></xref>類別。"
  syntax:
    content: public MouseGesture ();
    parameters: []
  overload: System.Windows.Input.MouseGesture.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.MouseGesture.#ctor(System.Windows.Input.MouseAction)
  id: '#ctor(System.Windows.Input.MouseAction)'
  parent: System.Windows.Input.MouseGesture
  langs:
  - csharp
  name: MouseGesture(MouseAction)
  nameWithType: MouseGesture.MouseGesture(MouseAction)
  fullName: System.Windows.Input.MouseGesture.MouseGesture(MouseAction)
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "初始化的新執行個體<xref href=&quot;System.Windows.Input.MouseGesture&quot;></xref>類別使用指定<xref href=&quot;System.Windows.Input.MouseAction&quot;> </xref>。"
  syntax:
    content: public MouseGesture (System.Windows.Input.MouseAction mouseAction);
    parameters:
    - id: mouseAction
      type: System.Windows.Input.MouseAction
      description: "與此筆勢相關聯的動作。"
  overload: System.Windows.Input.MouseGesture.#ctor*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "<code>mouseAction</code>不是有效<xref href=&quot;System.Windows.Input.MouseAction&quot;></xref>值。"
  platform:
  - net462
- uid: System.Windows.Input.MouseGesture.#ctor(System.Windows.Input.MouseAction,System.Windows.Input.ModifierKeys)
  id: '#ctor(System.Windows.Input.MouseAction,System.Windows.Input.ModifierKeys)'
  parent: System.Windows.Input.MouseGesture
  langs:
  - csharp
  name: MouseGesture(MouseAction,ModifierKeys)
  nameWithType: MouseGesture.MouseGesture(MouseAction,ModifierKeys)
  fullName: System.Windows.Input.MouseGesture.MouseGesture(MouseAction,ModifierKeys)
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "初始化的新執行個體<xref href=&quot;System.Windows.Input.MouseGesture&quot;></xref>類別使用指定<xref href=&quot;System.Windows.Input.MouseAction&quot;></xref>和<xref href=&quot;System.Windows.Input.ModifierKeys&quot;> </xref>。"
  syntax:
    content: public MouseGesture (System.Windows.Input.MouseAction mouseAction, System.Windows.Input.ModifierKeys modifiers);
    parameters:
    - id: mouseAction
      type: System.Windows.Input.MouseAction
      description: "與此筆勢相關聯的動作。"
    - id: modifiers
      type: System.Windows.Input.ModifierKeys
      description: "此筆勢與相關聯的修飾詞。"
  overload: System.Windows.Input.MouseGesture.#ctor*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "<code>mouseAction</code>不是有效<xref href=&quot;System.Windows.Input.MouseAction&quot;></xref>值-<code>modifiers</code>不是有效<xref href=&quot;System.Windows.Input.ModifierKeys&quot;></xref>值。"
  platform:
  - net462
- uid: System.Windows.Input.MouseGesture.Matches(System.Object,System.Windows.Input.InputEventArgs)
  id: Matches(System.Object,System.Windows.Input.InputEventArgs)
  parent: System.Windows.Input.MouseGesture
  langs:
  - csharp
  name: Matches(Object,InputEventArgs)
  nameWithType: MouseGesture.Matches(Object,InputEventArgs)
  fullName: System.Windows.Input.MouseGesture.Matches(Object,InputEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "決定是否<xref href=&quot;System.Windows.Input.MouseGesture&quot;></xref>符合具有指定相關聯的輸入<xref href=&quot;System.Windows.Input.InputEventArgs&quot;></xref>物件。"
  remarks: ''
  example:
  - "The following example shows how to test whether a <xref:System.Windows.Input.MouseGesture> matches the input associated with an instance of an <xref:System.Windows.Input.InputEventArgs>. A <xref:System.Windows.UIElement.MouseDown> event handler compares the event data with the <xref:System.Windows.Input.MouseGesture> by using the Matches method.  \n  \n [!code-cs[commandlibrarysnippets#KeyDownHandlerMouseGestureMatches](~/add/codesnippet/csharp/CommandLibarySnippets/Window1.xaml.cs#keydownhandlermousegesturematches)]\n [!code-vb[commandlibrarysnippets#KeyDownHandlerMouseGestureMatches](~/add/codesnippet/visualbasic/commandlibarysnippets/window1.xaml.vb#keydownhandlermousegesturematches)]"
  syntax:
    content: public override bool Matches (object targetElement, System.Windows.Input.InputEventArgs inputEventArgs);
    parameters:
    - id: targetElement
      type: System.Object
      description: "目標。"
    - id: inputEventArgs
      type: System.Windows.Input.InputEventArgs
      description: "要與此筆勢比較的輸入的事件資料。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果事件資料符合這<xref href=&quot;System.Windows.Input.MouseGesture&quot;> </xref>，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Input.MouseGesture.Matches*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.MouseGesture.Modifiers
  id: Modifiers
  parent: System.Windows.Input.MouseGesture
  langs:
  - csharp
  name: Modifiers
  nameWithType: MouseGesture.Modifiers
  fullName: System.Windows.Input.MouseGesture.Modifiers
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "取得或設定與此相關聯的輔助按鍵<xref href=&quot;System.Windows.Input.MouseGesture&quot;> </xref>。"
  remarks: "不同於<xref:System.Windows.Input.KeyGesture>，<xref:System.Windows.Input.MouseAction>沒有與<xref:System.Windows.Input.ModifierKeys>才能有效<xref:System.Windows.Input.MouseGesture>.</xref:System.Windows.Input.MouseGesture></xref:System.Windows.Input.ModifierKeys>配對</xref:System.Windows.Input.MouseAction></xref:System.Windows.Input.KeyGesture>       <xref:System.Windows.Input.ModifierKeys>是一個位元欄位列舉，因此很可能在相同的時間可以按下的多個輔助按鍵。</xref:System.Windows.Input.ModifierKeys> 按下使用位元作業來判斷確切的修飾詞的索引鍵集。      <a name=&quot;xamlAttributeUsage_Modifiers&quot;></a># # XAML 屬性使用方式```   <object Modifiers=&quot;oneOrMoreModifierKeys&quot;/>   ``` <a name=&quot;xamlValues_Modifiers&quot;> </a> # # XAML 值*oneOrMoreModifierKeys*一或多個所定義的輔助按鍵<xref:System.Windows.Input.ModifierKeys>列舉型別，以&quot;+&quot;字元分隔。</xref:System.Windows.Input.ModifierKeys>      "
  example:
  - "The following example shows to create a <xref:System.Windows.Input.MouseGesture> and associate it with a <xref:System.Windows.Input.RoutedCommand> through a <xref:System.Windows.Input.MouseBinding>.  \n  \n [!code-cs[commandlibrarysnippets#MouseBindingAddedToInputBinding](~/add/codesnippet/csharp/CommandLibarySnippets/Window1.xaml.cs#mousebindingaddedtoinputbinding)]\n [!code-vb[commandlibrarysnippets#MouseBindingAddedToInputBinding](~/add/codesnippet/visualbasic/commandlibarysnippets/window1.xaml.vb#mousebindingaddedtoinputbinding)]"
  syntax:
    content: public System.Windows.Input.ModifierKeys Modifiers { get; set; }
    return:
      type: System.Windows.Input.ModifierKeys
      description: "修飾詞相關聯的金鑰與此筆勢。 預設值是<xref href=&quot;System.Windows.Input.ModifierKeys&quot;> </xref>。"
  overload: System.Windows.Input.MouseGesture.Modifiers*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.MouseGesture.MouseAction
  id: MouseAction
  parent: System.Windows.Input.MouseGesture
  langs:
  - csharp
  name: MouseAction
  nameWithType: MouseGesture.MouseAction
  fullName: System.Windows.Input.MouseGesture.MouseAction
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "取得或設定<xref href=&quot;System.Windows.Input.MouseAction&quot;></xref>此筆勢與相關聯。"
  remarks: "不同於<xref:System.Windows.Input.KeyGesture>，<xref:System.Windows.Input.MouseAction>沒有與<xref:System.Windows.Input.ModifierKeys>才能有效<xref:System.Windows.Input.MouseGesture>.</xref:System.Windows.Input.MouseGesture></xref:System.Windows.Input.ModifierKeys>配對</xref:System.Windows.Input.MouseAction></xref:System.Windows.Input.KeyGesture>"
  example:
  - "The following example shows to create a <xref:System.Windows.Input.MouseGesture> and associate it with a <xref:System.Windows.Input.RoutedCommand> through a <xref:System.Windows.Input.MouseBinding>.  \n  \n [!code-cs[commandlibrarysnippets#MouseBindingAddedToInputBinding](~/add/codesnippet/csharp/CommandLibarySnippets/Window1.xaml.cs#mousebindingaddedtoinputbinding)]\n [!code-vb[commandlibrarysnippets#MouseBindingAddedToInputBinding](~/add/codesnippet/visualbasic/commandlibarysnippets/window1.xaml.vb#mousebindingaddedtoinputbinding)]"
  syntax:
    content: public System.Windows.Input.MouseAction MouseAction { get; set; }
    return:
      type: System.Windows.Input.MouseAction
      description: "將滑鼠動作，此筆勢與相關聯。 預設值是<xref href=&quot;System.Windows.Input.MouseAction&quot;> </xref>。"
  overload: System.Windows.Input.MouseGesture.MouseAction*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Input.InputGesture
  isExternal: false
  name: System.Windows.Input.InputGesture
- uid: System.ComponentModel.InvalidEnumArgumentException
  parent: System.ComponentModel
  isExternal: false
  name: InvalidEnumArgumentException
  nameWithType: InvalidEnumArgumentException
  fullName: System.ComponentModel.InvalidEnumArgumentException
- uid: System.Windows.Input.MouseGesture.#ctor
  parent: System.Windows.Input.MouseGesture
  isExternal: false
  name: MouseGesture()
  nameWithType: MouseGesture.MouseGesture()
  fullName: System.Windows.Input.MouseGesture.MouseGesture()
- uid: System.Windows.Input.MouseGesture.#ctor(System.Windows.Input.MouseAction)
  parent: System.Windows.Input.MouseGesture
  isExternal: false
  name: MouseGesture(MouseAction)
  nameWithType: MouseGesture.MouseGesture(MouseAction)
  fullName: System.Windows.Input.MouseGesture.MouseGesture(MouseAction)
- uid: System.Windows.Input.MouseAction
  parent: System.Windows.Input
  isExternal: false
  name: MouseAction
  nameWithType: MouseAction
  fullName: System.Windows.Input.MouseAction
- uid: System.Windows.Input.MouseGesture.#ctor(System.Windows.Input.MouseAction,System.Windows.Input.ModifierKeys)
  parent: System.Windows.Input.MouseGesture
  isExternal: false
  name: MouseGesture(MouseAction,ModifierKeys)
  nameWithType: MouseGesture.MouseGesture(MouseAction,ModifierKeys)
  fullName: System.Windows.Input.MouseGesture.MouseGesture(MouseAction,ModifierKeys)
- uid: System.Windows.Input.ModifierKeys
  parent: System.Windows.Input
  isExternal: false
  name: ModifierKeys
  nameWithType: ModifierKeys
  fullName: System.Windows.Input.ModifierKeys
- uid: System.Windows.Input.MouseGesture.Matches(System.Object,System.Windows.Input.InputEventArgs)
  parent: System.Windows.Input.MouseGesture
  isExternal: false
  name: Matches(Object,InputEventArgs)
  nameWithType: MouseGesture.Matches(Object,InputEventArgs)
  fullName: System.Windows.Input.MouseGesture.Matches(Object,InputEventArgs)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Input.InputEventArgs
  parent: System.Windows.Input
  isExternal: false
  name: InputEventArgs
  nameWithType: InputEventArgs
  fullName: System.Windows.Input.InputEventArgs
- uid: System.Windows.Input.MouseGesture.Modifiers
  parent: System.Windows.Input.MouseGesture
  isExternal: false
  name: Modifiers
  nameWithType: MouseGesture.Modifiers
  fullName: System.Windows.Input.MouseGesture.Modifiers
- uid: System.Windows.Input.MouseGesture.MouseAction
  parent: System.Windows.Input.MouseGesture
  isExternal: false
  name: MouseAction
  nameWithType: MouseGesture.MouseAction
  fullName: System.Windows.Input.MouseGesture.MouseAction
- uid: System.Windows.Input.MouseGesture.#ctor*
  parent: System.Windows.Input.MouseGesture
  isExternal: false
  name: MouseGesture
  nameWithType: MouseGesture.MouseGesture
- uid: System.Windows.Input.MouseGesture.Matches*
  parent: System.Windows.Input.MouseGesture
  isExternal: false
  name: Matches
  nameWithType: MouseGesture.Matches
- uid: System.Windows.Input.MouseGesture.Modifiers*
  parent: System.Windows.Input.MouseGesture
  isExternal: false
  name: Modifiers
  nameWithType: MouseGesture.Modifiers
- uid: System.Windows.Input.MouseGesture.MouseAction*
  parent: System.Windows.Input.MouseGesture
  isExternal: false
  name: MouseAction
  nameWithType: MouseGesture.MouseAction
