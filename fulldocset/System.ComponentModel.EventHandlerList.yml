### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.EventHandlerList
  id: EventHandlerList
  children:
  - System.ComponentModel.EventHandlerList.#ctor
  - System.ComponentModel.EventHandlerList.AddHandler(System.Object,System.Delegate)
  - System.ComponentModel.EventHandlerList.AddHandlers(System.ComponentModel.EventHandlerList)
  - System.ComponentModel.EventHandlerList.Dispose
  - System.ComponentModel.EventHandlerList.Item(System.Object)
  - System.ComponentModel.EventHandlerList.RemoveHandler(System.Object,System.Delegate)
  langs:
  - csharp
  name: EventHandlerList
  nameWithType: EventHandlerList
  fullName: System.ComponentModel.EventHandlerList
  type: Class
  summary: "提供簡單的委派清單。 這個類別無法被繼承。"
  remarks: "這個類別會使用線性搜尋演算法來尋找項目清單中的委派。 使用大量的項目時，線性搜尋演算法沒有效率。 因此，當您有大型的清單，尋找項目會變慢。"
  example:
  - 'For an example of using an EventHandlerList, see [How to: Handle Multiple Events Using Event Properties](~/add/includes/ajax-current-ext-md.md).'
  syntax:
    content: 'public sealed class EventHandlerList : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.EventHandlerList.#ctor
  id: '#ctor'
  parent: System.ComponentModel.EventHandlerList
  langs:
  - csharp
  name: EventHandlerList()
  nameWithType: EventHandlerList.EventHandlerList()
  fullName: System.ComponentModel.EventHandlerList.EventHandlerList()
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "初始化的新執行個體<xref href=&quot;System.ComponentModel.EventHandlerList&quot;></xref>類別。"
  syntax:
    content: public EventHandlerList ();
    parameters: []
  overload: System.ComponentModel.EventHandlerList.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.EventHandlerList.AddHandler(System.Object,System.Delegate)
  id: AddHandler(System.Object,System.Delegate)
  parent: System.ComponentModel.EventHandlerList
  langs:
  - csharp
  name: AddHandler(Object,Delegate)
  nameWithType: EventHandlerList.AddHandler(Object,Delegate)
  fullName: System.ComponentModel.EventHandlerList.AddHandler(Object,Delegate)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "將委派加入至清單。"
  syntax:
    content: public void AddHandler (object key, Delegate value);
    parameters:
    - id: key
      type: System.Object
      description: "擁有事件的物件。"
    - id: value
      type: System.Delegate
      description: "要加入至清單的委派。"
  overload: System.ComponentModel.EventHandlerList.AddHandler*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.EventHandlerList.AddHandlers(System.ComponentModel.EventHandlerList)
  id: AddHandlers(System.ComponentModel.EventHandlerList)
  parent: System.ComponentModel.EventHandlerList
  langs:
  - csharp
  name: AddHandlers(EventHandlerList)
  nameWithType: EventHandlerList.AddHandlers(EventHandlerList)
  fullName: System.ComponentModel.EventHandlerList.AddHandlers(EventHandlerList)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "將目前的清單中的委派清單。"
  syntax:
    content: public void AddHandlers (System.ComponentModel.EventHandlerList listToAddFrom);
    parameters:
    - id: listToAddFrom
      type: System.ComponentModel.EventHandlerList
      description: "要加入的清單。"
  overload: System.ComponentModel.EventHandlerList.AddHandlers*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.EventHandlerList.Dispose
  id: Dispose
  parent: System.ComponentModel.EventHandlerList
  langs:
  - csharp
  name: Dispose()
  nameWithType: EventHandlerList.Dispose()
  fullName: System.ComponentModel.EventHandlerList.Dispose()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "處置委派清單。"
  remarks: "當您完成使用<xref:System.ComponentModel.EventHandlerList>.</xref:System.ComponentModel.EventHandlerList>呼叫 Dispose Dispose 方法會使<xref:System.ComponentModel.EventHandlerList>中無法使用的狀態。</xref:System.ComponentModel.EventHandlerList> 在呼叫 Dispose 之後，您必須釋放所有參考<xref:System.ComponentModel.EventHandlerList>讓它所佔用的記憶體可由記憶體回收收回。</xref:System.ComponentModel.EventHandlerList>      > [!NOTE] > 永遠呼叫 Dispose 之後，再放開您的最後一個參考至<xref:System.ComponentModel.EventHandlerList>。</xref:System.ComponentModel.EventHandlerList> 否則，資源<xref:System.ComponentModel.EventHandlerList>是使用之前，將不會釋放記憶體回收集合呼叫<xref:System.ComponentModel.EventHandlerList>物件的解構函式。</xref:System.ComponentModel.EventHandlerList> </xref:System.ComponentModel.EventHandlerList>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.ComponentModel.EventHandlerList.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.EventHandlerList.Item(System.Object)
  id: Item(System.Object)
  parent: System.ComponentModel.EventHandlerList
  langs:
  - csharp
  name: Item(Object)
  nameWithType: EventHandlerList.Item(Object)
  fullName: System.ComponentModel.EventHandlerList.Item(Object)
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "取得或設定指定之物件的委派。"
  remarks: "當清單中找不到索引鍵並提供委派設定的值的索引鍵，然後金鑰加入至清單頂端，並指派給委派，做為其值。"
  syntax:
    content: public Delegate this[object key] { get; set; }
    parameters:
    - id: key
      type: System.Object
      description: "要在清單中尋找的物件。"
    return:
      type: System.Delegate
      description: "指定之索引鍵，委派或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果委派不存在。"
  overload: System.ComponentModel.EventHandlerList.Item*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.EventHandlerList.RemoveHandler(System.Object,System.Delegate)
  id: RemoveHandler(System.Object,System.Delegate)
  parent: System.ComponentModel.EventHandlerList
  langs:
  - csharp
  name: RemoveHandler(Object,Delegate)
  nameWithType: EventHandlerList.RemoveHandler(Object,Delegate)
  fullName: System.ComponentModel.EventHandlerList.RemoveHandler(Object,Delegate)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "從清單中移除的委派。"
  syntax:
    content: public void RemoveHandler (object key, Delegate value);
    parameters:
    - id: key
      type: System.Object
      description: "擁有事件的物件。"
    - id: value
      type: System.Delegate
      description: "要從清單中移除的委派。"
  overload: System.ComponentModel.EventHandlerList.RemoveHandler*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ComponentModel.EventHandlerList.#ctor
  parent: System.ComponentModel.EventHandlerList
  isExternal: false
  name: EventHandlerList()
  nameWithType: EventHandlerList.EventHandlerList()
  fullName: System.ComponentModel.EventHandlerList.EventHandlerList()
- uid: System.ComponentModel.EventHandlerList.AddHandler(System.Object,System.Delegate)
  parent: System.ComponentModel.EventHandlerList
  isExternal: false
  name: AddHandler(Object,Delegate)
  nameWithType: EventHandlerList.AddHandler(Object,Delegate)
  fullName: System.ComponentModel.EventHandlerList.AddHandler(Object,Delegate)
- uid: System.Delegate
  parent: System
  isExternal: true
  name: Delegate
  nameWithType: Delegate
  fullName: System.Delegate
- uid: System.ComponentModel.EventHandlerList.AddHandlers(System.ComponentModel.EventHandlerList)
  parent: System.ComponentModel.EventHandlerList
  isExternal: false
  name: AddHandlers(EventHandlerList)
  nameWithType: EventHandlerList.AddHandlers(EventHandlerList)
  fullName: System.ComponentModel.EventHandlerList.AddHandlers(EventHandlerList)
- uid: System.ComponentModel.EventHandlerList
  parent: System.ComponentModel
  isExternal: false
  name: EventHandlerList
  nameWithType: EventHandlerList
  fullName: System.ComponentModel.EventHandlerList
- uid: System.ComponentModel.EventHandlerList.Dispose
  parent: System.ComponentModel.EventHandlerList
  isExternal: false
  name: Dispose()
  nameWithType: EventHandlerList.Dispose()
  fullName: System.ComponentModel.EventHandlerList.Dispose()
- uid: System.ComponentModel.EventHandlerList.Item(System.Object)
  parent: System.ComponentModel.EventHandlerList
  isExternal: false
  name: Item(Object)
  nameWithType: EventHandlerList.Item(Object)
  fullName: System.ComponentModel.EventHandlerList.Item(Object)
- uid: System.ComponentModel.EventHandlerList.RemoveHandler(System.Object,System.Delegate)
  parent: System.ComponentModel.EventHandlerList
  isExternal: false
  name: RemoveHandler(Object,Delegate)
  nameWithType: EventHandlerList.RemoveHandler(Object,Delegate)
  fullName: System.ComponentModel.EventHandlerList.RemoveHandler(Object,Delegate)
- uid: System.ComponentModel.EventHandlerList.#ctor*
  parent: System.ComponentModel.EventHandlerList
  isExternal: false
  name: EventHandlerList
  nameWithType: EventHandlerList.EventHandlerList
- uid: System.ComponentModel.EventHandlerList.AddHandler*
  parent: System.ComponentModel.EventHandlerList
  isExternal: false
  name: AddHandler
  nameWithType: EventHandlerList.AddHandler
- uid: System.ComponentModel.EventHandlerList.AddHandlers*
  parent: System.ComponentModel.EventHandlerList
  isExternal: false
  name: AddHandlers
  nameWithType: EventHandlerList.AddHandlers
- uid: System.ComponentModel.EventHandlerList.Dispose*
  parent: System.ComponentModel.EventHandlerList
  isExternal: false
  name: Dispose
  nameWithType: EventHandlerList.Dispose
- uid: System.ComponentModel.EventHandlerList.Item*
  parent: System.ComponentModel.EventHandlerList
  isExternal: false
  name: Item
  nameWithType: EventHandlerList.Item
- uid: System.ComponentModel.EventHandlerList.RemoveHandler*
  parent: System.ComponentModel.EventHandlerList
  isExternal: false
  name: RemoveHandler
  nameWithType: EventHandlerList.RemoveHandler
