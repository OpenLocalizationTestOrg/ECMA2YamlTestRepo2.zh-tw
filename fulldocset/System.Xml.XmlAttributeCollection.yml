### YamlMime:ManagedReference
items:
- uid: System.Xml.XmlAttributeCollection
  id: XmlAttributeCollection
  children:
  - System.Xml.XmlAttributeCollection.Append(System.Xml.XmlAttribute)
  - System.Xml.XmlAttributeCollection.CopyTo(System.Xml.XmlAttribute[],System.Int32)
  - System.Xml.XmlAttributeCollection.InsertAfter(System.Xml.XmlAttribute,System.Xml.XmlAttribute)
  - System.Xml.XmlAttributeCollection.InsertBefore(System.Xml.XmlAttribute,System.Xml.XmlAttribute)
  - System.Xml.XmlAttributeCollection.ItemOf(System.Int32)
  - System.Xml.XmlAttributeCollection.ItemOf(System.String)
  - System.Xml.XmlAttributeCollection.ItemOf(System.String,System.String)
  - System.Xml.XmlAttributeCollection.Prepend(System.Xml.XmlAttribute)
  - System.Xml.XmlAttributeCollection.Remove(System.Xml.XmlAttribute)
  - System.Xml.XmlAttributeCollection.RemoveAll
  - System.Xml.XmlAttributeCollection.RemoveAt(System.Int32)
  - System.Xml.XmlAttributeCollection.SetNamedItem(System.Xml.XmlNode)
  - System.Xml.XmlAttributeCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Xml.XmlAttributeCollection.System#Collections#ICollection#Count
  - System.Xml.XmlAttributeCollection.System#Collections#ICollection#IsSynchronized
  - System.Xml.XmlAttributeCollection.System#Collections#ICollection#SyncRoot
  langs:
  - csharp
  name: XmlAttributeCollection
  nameWithType: XmlAttributeCollection
  fullName: System.Xml.XmlAttributeCollection
  type: Class
  summary: "代表可依名稱或索引存取的屬性集合。"
  remarks: '`XmlAttributeCollection`擴充<xref:System.Xml.XmlNamedNodeMap>類別加上強類型的 helper 方法。</xref:System.Xml.XmlNamedNodeMap> 您可以使用這個類別來新增、 移除或修改屬性集合中。 `XmlAttributeCollection`傳回<xref:System.Xml.XmlElement.Attributes%2A?displayProperty=fullName>屬性。</xref:System.Xml.XmlElement.Attributes%2A?displayProperty=fullName>'
  syntax:
    content: 'public sealed class XmlAttributeCollection : System.Xml.XmlNamedNodeMap, System.Collections.ICollection'
  inheritance:
  - System.Object
  - System.Xml.XmlNamedNodeMap
  implements:
  - System.Collections.ICollection
  inheritedMembers:
  - System.Xml.XmlNamedNodeMap.Count
  - System.Xml.XmlNamedNodeMap.GetEnumerator
  - System.Xml.XmlNamedNodeMap.GetNamedItem(System.String)
  - System.Xml.XmlNamedNodeMap.GetNamedItem(System.String,System.String)
  - System.Xml.XmlNamedNodeMap.Item(System.Int32)
  - System.Xml.XmlNamedNodeMap.RemoveNamedItem(System.String)
  - System.Xml.XmlNamedNodeMap.RemoveNamedItem(System.String,System.String)
  platform:
  - net462
- uid: System.Xml.XmlAttributeCollection.Append(System.Xml.XmlAttribute)
  id: Append(System.Xml.XmlAttribute)
  parent: System.Xml.XmlAttributeCollection
  langs:
  - csharp
  name: Append(XmlAttribute)
  nameWithType: XmlAttributeCollection.Append(XmlAttribute)
  fullName: System.Xml.XmlAttributeCollection.Append(XmlAttribute)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "為集合中的最後一個節點插入指定的屬性。"
  remarks: "如果具有相同名稱的屬性已存在於集合中，原始屬性從集合中移除和`node`加入至集合結尾。       這個方法是 Microsoft 擴充功能的文件物件模型 (DOM)。"
  example:
  - "The following example adds a new attribute to a document.  \n  \n [!code-cs[Classic WebData XmlAttributeCollection.Append Example#1](~/add/codesnippet/csharp/m-system.xml.xmlattribut_0_1.cs)]\n [!code-cpp[Classic WebData XmlAttributeCollection.Append Example#1](~/add/codesnippet/cpp/m-system.xml.xmlattribut_0_1.cpp)]\n [!code-vb[Classic WebData XmlAttributeCollection.Append Example#1](~/add/codesnippet/visualbasic/m-system.xml.xmlattribut_0_1.vb)]"
  syntax:
    content: public System.Xml.XmlAttribute Append (System.Xml.XmlAttribute node);
    parameters:
    - id: node
      type: System.Xml.XmlAttribute
      description: "<xref href=&quot;System.Xml.XmlAttribute&quot;> </xref>插入。"
    return:
      type: System.Xml.XmlAttribute
      description: "<xref uid=&quot;langword_csharp_XmlAttribute&quot; name=&quot;XmlAttribute&quot; href=&quot;&quot;> </xref>来附加至集合。"
  overload: System.Xml.XmlAttributeCollection.Append*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>node</code>已建立從不同於建立此集合的文件。"
  platform:
  - net462
- uid: System.Xml.XmlAttributeCollection.CopyTo(System.Xml.XmlAttribute[],System.Int32)
  id: CopyTo(System.Xml.XmlAttribute[],System.Int32)
  parent: System.Xml.XmlAttributeCollection
  langs:
  - csharp
  name: CopyTo(XmlAttribute[],Int32)
  nameWithType: XmlAttributeCollection.CopyTo(XmlAttribute[],Int32)
  fullName: System.Xml.XmlAttributeCollection.CopyTo(XmlAttribute[],Int32)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "複製所有<xref href=&quot;System.Xml.XmlAttribute&quot;></xref>至指定的陣列，這個集合中的物件。"
  remarks: "這個方法是 Microsoft 擴充功能的文件物件模型 (DOM)。"
  example:
  - "The following example uses `CopyTo` to copy all the attributes in the collection into an array.  \n  \n [!code-cs[Classic WebData XmlAttributeCollection.CopyTo Example#1](~/add/codesnippet/csharp/4c983b8e-d75c-4af8-ade8-_1.cs)]\n [!code-vb[Classic WebData XmlAttributeCollection.CopyTo Example#1](~/add/codesnippet/visualbasic/4c983b8e-d75c-4af8-ade8-_1.vb)]\n [!code-cpp[Classic WebData XmlAttributeCollection.CopyTo Example#1](~/add/codesnippet/cpp/4c983b8e-d75c-4af8-ade8-_1.cpp)]"
  syntax:
    content: public void CopyTo (System.Xml.XmlAttribute[] array, int index);
    parameters:
    - id: array
      type: System.Xml.XmlAttribute[]
      description: "這個陣列是從這個集合複製之物件的目的地。"
    - id: index
      type: System.Int32
      description: "開始複製的位置陣列中的索引。"
  overload: System.Xml.XmlAttributeCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlAttributeCollection.InsertAfter(System.Xml.XmlAttribute,System.Xml.XmlAttribute)
  id: InsertAfter(System.Xml.XmlAttribute,System.Xml.XmlAttribute)
  parent: System.Xml.XmlAttributeCollection
  langs:
  - csharp
  name: InsertAfter(XmlAttribute,XmlAttribute)
  nameWithType: XmlAttributeCollection.InsertAfter(XmlAttribute,XmlAttribute)
  fullName: System.Xml.XmlAttributeCollection.InsertAfter(XmlAttribute,XmlAttribute)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "指定的參考屬性的後面，插入指定的屬性。"
  remarks: "如果具有相同名稱的屬性已存在於集合中，原始屬性從集合中移除和`newNode`插入至集合。 如果`refNode`是`null`，`newNode`插入集合的開頭。       這個方法是 Microsoft 擴充功能的文件物件模型 (DOM)。"
  example:
  - "The following example adds a new attribute to a document.  \n  \n [!code-cs[Classic WebData XmlAttributeCollection.InsertAfter Example#1](~/add/codesnippet/csharp/5f833ef4-9523-4108-8425-_1.cs)]\n [!code-cpp[Classic WebData XmlAttributeCollection.InsertAfter Example#1](~/add/codesnippet/cpp/5f833ef4-9523-4108-8425-_1.cpp)]\n [!code-vb[Classic WebData XmlAttributeCollection.InsertAfter Example#1](~/add/codesnippet/visualbasic/5f833ef4-9523-4108-8425-_1.vb)]"
  syntax:
    content: public System.Xml.XmlAttribute InsertAfter (System.Xml.XmlAttribute newNode, System.Xml.XmlAttribute refNode);
    parameters:
    - id: newNode
      type: System.Xml.XmlAttribute
      description: "<xref href=&quot;System.Xml.XmlAttribute&quot;> </xref>插入。"
    - id: refNode
      type: System.Xml.XmlAttribute
      description: "<xref href=&quot;System.Xml.XmlAttribute&quot;> </xref>也就是參考屬性。 `newNode`放之後`refNode`。"
    return:
      type: System.Xml.XmlAttribute
      description: "<xref uid=&quot;langword_csharp_XmlAttribute&quot; name=&quot;XmlAttribute&quot; href=&quot;&quot;> </xref>来插入至集合。"
  overload: System.Xml.XmlAttributeCollection.InsertAfter*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> newNode </code>建立從不同於建立此集合的文件。 或者<code> refNode </code>不是這個集合的成員。"
  platform:
  - net462
- uid: System.Xml.XmlAttributeCollection.InsertBefore(System.Xml.XmlAttribute,System.Xml.XmlAttribute)
  id: InsertBefore(System.Xml.XmlAttribute,System.Xml.XmlAttribute)
  parent: System.Xml.XmlAttributeCollection
  langs:
  - csharp
  name: InsertBefore(XmlAttribute,XmlAttribute)
  nameWithType: XmlAttributeCollection.InsertBefore(XmlAttribute,XmlAttribute)
  fullName: System.Xml.XmlAttributeCollection.InsertBefore(XmlAttribute,XmlAttribute)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "插入之前指定的參考屬性指定的屬性。"
  remarks: "如果具有相同名稱的屬性已存在於集合中，原始屬性從集合中移除和`newNode`插入至集合。 如果`refNode`是`null`，`newNode`插入集合的結尾。       這個方法是 Microsoft 擴充功能的文件物件模型 (DOM)。"
  example:
  - "The following example adds a new attribute to a document.  \n  \n [!code-cs[Classic WebData XmlAttributeCollection.InsertBefore Example#1](~/add/codesnippet/csharp/91d2f4bf-8aeb-427a-a43e-_1.cs)]\n [!code-vb[Classic WebData XmlAttributeCollection.InsertBefore Example#1](~/add/codesnippet/visualbasic/91d2f4bf-8aeb-427a-a43e-_1.vb)]\n [!code-cpp[Classic WebData XmlAttributeCollection.InsertBefore Example#1](~/add/codesnippet/cpp/91d2f4bf-8aeb-427a-a43e-_1.cpp)]"
  syntax:
    content: public System.Xml.XmlAttribute InsertBefore (System.Xml.XmlAttribute newNode, System.Xml.XmlAttribute refNode);
    parameters:
    - id: newNode
      type: System.Xml.XmlAttribute
      description: "<xref href=&quot;System.Xml.XmlAttribute&quot;> </xref>插入。"
    - id: refNode
      type: System.Xml.XmlAttribute
      description: "<xref href=&quot;System.Xml.XmlAttribute&quot;> </xref>也就是參考屬性。 `newNode`之前放置`refNode`。"
    return:
      type: System.Xml.XmlAttribute
      description: "<xref uid=&quot;langword_csharp_XmlAttribute&quot; name=&quot;XmlAttribute&quot; href=&quot;&quot;> </xref>来插入至集合。"
  overload: System.Xml.XmlAttributeCollection.InsertBefore*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> newNode </code>建立從不同於建立此集合的文件。 或者<code> refNode </code>不是這個集合的成員。"
  platform:
  - net462
- uid: System.Xml.XmlAttributeCollection.ItemOf(System.Int32)
  id: ItemOf(System.Int32)
  parent: System.Xml.XmlAttributeCollection
  langs:
  - csharp
  name: ItemOf(Int32)
  nameWithType: XmlAttributeCollection.ItemOf(Int32)
  fullName: System.Xml.XmlAttributeCollection.ItemOf(Int32)
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "取得具有指定之索引的屬性。"
  remarks: "這個屬性是 Microsoft 擴充功能的文件物件模型 (DOM)。 它相當於呼叫<xref:System.Xml.XmlNamedNodeMap.Item%2A?displayProperty=fullName>.</xref:System.Xml.XmlNamedNodeMap.Item%2A?displayProperty=fullName>"
  example:
  - "The following example displays all the attributes in the collection.  \n  \n [!code-cs[Classic WebData XmlAttributeCollection.this Example#1](~/add/codesnippet/csharp/p-system.xml.xmlattribut_5_1.cs)]\n [!code-vb[Classic WebData XmlAttributeCollection.this Example#1](~/add/codesnippet/visualbasic/p-system.xml.xmlattribut_5_1.vb)]\n [!code-cpp[Classic WebData XmlAttributeCollection.this Example#1](~/add/codesnippet/cpp/p-system.xml.xmlattribut_5_1.cpp)]"
  syntax:
    content: public System.Xml.XmlAttribute this[int i] { get; }
    parameters:
    - id: i
      type: System.Int32
      description: "屬性的索引。"
    return:
      type: System.Xml.XmlAttribute
      description: "<xref href=&quot;System.Xml.XmlAttribute&quot;> </xref>指定索引處。"
  overload: System.Xml.XmlAttributeCollection.ItemOf*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "在傳遞的索引超出範圍。"
  platform:
  - net462
- uid: System.Xml.XmlAttributeCollection.ItemOf(System.String)
  id: ItemOf(System.String)
  parent: System.Xml.XmlAttributeCollection
  langs:
  - csharp
  name: ItemOf(String)
  nameWithType: XmlAttributeCollection.ItemOf(String)
  fullName: System.Xml.XmlAttributeCollection.ItemOf(String)
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "取得具有指定名稱的屬性。"
  remarks: "這個屬性是 Microsoft 擴充功能的文件物件模型 (DOM)。 它相當於呼叫<xref:System.Xml.XmlNamedNodeMap.GetNamedItem%2A>.</xref:System.Xml.XmlNamedNodeMap.GetNamedItem%2A>"
  example:
  - "The following example removes an attribute from the document.  \n  \n [!code-cpp[Classic WebData XmlAttributeCollection.Remove Example#1](~/add/codesnippet/cpp/p-system.xml.xmlattribut_0_1.cpp)]\n [!code-cs[Classic WebData XmlAttributeCollection.Remove Example#1](~/add/codesnippet/csharp/p-system.xml.xmlattribut_0_1.cs)]\n [!code-vb[Classic WebData XmlAttributeCollection.Remove Example#1](~/add/codesnippet/visualbasic/p-system.xml.xmlattribut_0_1.vb)]"
  syntax:
    content: public System.Xml.XmlAttribute this[string name] { get; }
    parameters:
    - id: name
      type: System.String
      description: "屬性的限定的名稱。"
    return:
      type: System.Xml.XmlAttribute
      description: "<xref href=&quot;System.Xml.XmlAttribute&quot;> </xref>具有指定名稱。 如果屬性不存在，則這個屬性會傳回<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Xml.XmlAttributeCollection.ItemOf*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlAttributeCollection.ItemOf(System.String,System.String)
  id: ItemOf(System.String,System.String)
  parent: System.Xml.XmlAttributeCollection
  langs:
  - csharp
  name: ItemOf(String,String)
  nameWithType: XmlAttributeCollection.ItemOf(String,String)
  fullName: System.Xml.XmlAttributeCollection.ItemOf(String,String)
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "取得具有指定之區域名稱和命名空間統一資源識別元 (URI) 的屬性。"
  remarks: "這個屬性是 Microsoft 擴充功能的文件物件模型 (DOM)。 它相當於呼叫<xref:System.Xml.XmlNamedNodeMap.GetNamedItem%2A>.</xref:System.Xml.XmlNamedNodeMap.GetNamedItem%2A>"
  syntax:
    content: public System.Xml.XmlAttribute this[string localName, string namespaceURI] { get; }
    parameters:
    - id: localName
      type: System.String
      description: "屬性的本機名稱。"
    - id: namespaceURI
      type: System.String
      description: "命名空間 URI 的屬性。"
    return:
      type: System.Xml.XmlAttribute
      description: "<xref href=&quot;System.Xml.XmlAttribute&quot;> </xref>具有指定之區域名稱和命名空間 URI。 如果屬性不存在，則這個屬性會傳回<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Xml.XmlAttributeCollection.ItemOf*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlAttributeCollection.Prepend(System.Xml.XmlAttribute)
  id: Prepend(System.Xml.XmlAttribute)
  parent: System.Xml.XmlAttributeCollection
  langs:
  - csharp
  name: Prepend(XmlAttribute)
  nameWithType: XmlAttributeCollection.Prepend(XmlAttribute)
  fullName: System.Xml.XmlAttributeCollection.Prepend(XmlAttribute)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "做為集合中的第一個節點插入指定的屬性。"
  remarks: "如果具有相同名稱的屬性已存在於集合中，原始屬性從集合中移除和`node`加入至集合的開頭。       這個方法是 Microsoft 擴充功能的文件物件模型 (DOM)。"
  example:
  - "The following example adds a new attribute to a document.  \n  \n [!code-cs[Classic WebData XmlAttributeCollection.Prepend Example#1](~/add/codesnippet/csharp/m-system.xml.xmlattribut_4_1.cs)]\n [!code-cpp[Classic WebData XmlAttributeCollection.Prepend Example#1](~/add/codesnippet/cpp/m-system.xml.xmlattribut_4_1.cpp)]\n [!code-vb[Classic WebData XmlAttributeCollection.Prepend Example#1](~/add/codesnippet/visualbasic/m-system.xml.xmlattribut_4_1.vb)]"
  syntax:
    content: public System.Xml.XmlAttribute Prepend (System.Xml.XmlAttribute node);
    parameters:
    - id: node
      type: System.Xml.XmlAttribute
      description: "<xref href=&quot;System.Xml.XmlAttribute&quot;> </xref>插入。"
    return:
      type: System.Xml.XmlAttribute
      description: "<xref uid=&quot;langword_csharp_XmlAttribute&quot; name=&quot;XmlAttribute&quot; href=&quot;&quot;> </xref>加入至集合。"
  overload: System.Xml.XmlAttributeCollection.Prepend*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlAttributeCollection.Remove(System.Xml.XmlAttribute)
  id: Remove(System.Xml.XmlAttribute)
  parent: System.Xml.XmlAttributeCollection
  langs:
  - csharp
  name: Remove(XmlAttribute)
  nameWithType: XmlAttributeCollection.Remove(XmlAttribute)
  fullName: System.Xml.XmlAttributeCollection.Remove(XmlAttribute)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "從集合中移除指定的屬性。"
  remarks: "這個方法是 Microsoft 擴充功能的文件物件模型 (DOM)。"
  example:
  - "The following example removes an attribute from the document.  \n  \n [!code-cpp[Classic WebData XmlAttributeCollection.Remove Example#1](~/add/codesnippet/cpp/m-system.xml.xmlattribut_5_1.cpp)]\n [!code-cs[Classic WebData XmlAttributeCollection.Remove Example#1](~/add/codesnippet/csharp/m-system.xml.xmlattribut_5_1.cs)]\n [!code-vb[Classic WebData XmlAttributeCollection.Remove Example#1](~/add/codesnippet/visualbasic/m-system.xml.xmlattribut_5_1.vb)]"
  syntax:
    content: public System.Xml.XmlAttribute Remove (System.Xml.XmlAttribute node);
    parameters:
    - id: node
      type: System.Xml.XmlAttribute
      description: "<xref href=&quot;System.Xml.XmlAttribute&quot;> </xref>移除。"
    return:
      type: System.Xml.XmlAttribute
      description: "移除的節點或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果不在集合中找到。"
  overload: System.Xml.XmlAttributeCollection.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlAttributeCollection.RemoveAll
  id: RemoveAll
  parent: System.Xml.XmlAttributeCollection
  langs:
  - csharp
  name: RemoveAll()
  nameWithType: XmlAttributeCollection.RemoveAll()
  fullName: System.Xml.XmlAttributeCollection.RemoveAll()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "從集合中移除所有屬性。"
  remarks: "這個方法是 Microsoft 擴充功能的文件物件模型 (DOM)。"
  example:
  - "The following example removes all attributes from the document.  \n  \n [!code-cs[Classic WebData XmlAttributeCollection.RemoveAll Example#1](~/add/codesnippet/csharp/m-system.xml.xmlattribut_3_1.cs)]\n [!code-cpp[Classic WebData XmlAttributeCollection.RemoveAll Example#1](~/add/codesnippet/cpp/m-system.xml.xmlattribut_3_1.cpp)]\n [!code-vb[Classic WebData XmlAttributeCollection.RemoveAll Example#1](~/add/codesnippet/visualbasic/m-system.xml.xmlattribut_3_1.vb)]"
  syntax:
    content: public void RemoveAll ();
    parameters: []
  overload: System.Xml.XmlAttributeCollection.RemoveAll*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlAttributeCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Xml.XmlAttributeCollection
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: XmlAttributeCollection.RemoveAt(Int32)
  fullName: System.Xml.XmlAttributeCollection.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "移除集合中指定的索引相對應的屬性。"
  remarks: "這個方法是 Microsoft 擴充功能的文件物件模型 (DOM)。"
  example:
  - "The following example removes an attribute from the document.  \n  \n [!code-cs[Classic WebData XmlAttributeCollection.RemoveAt Example#1](~/add/codesnippet/csharp/m-system.xml.xmlattribut_2_1.cs)]\n [!code-vb[Classic WebData XmlAttributeCollection.RemoveAt Example#1](~/add/codesnippet/visualbasic/m-system.xml.xmlattribut_2_1.vb)]\n [!code-cpp[Classic WebData XmlAttributeCollection.RemoveAt Example#1](~/add/codesnippet/cpp/m-system.xml.xmlattribut_2_1.cpp)]"
  syntax:
    content: public System.Xml.XmlAttribute RemoveAt (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "要移除之節點的索引。 第一個節點的索引為 0。"
    return:
      type: System.Xml.XmlAttribute
      description: "傳回<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果沒有屬性，指定索引處。"
  overload: System.Xml.XmlAttributeCollection.RemoveAt*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlAttributeCollection.SetNamedItem(System.Xml.XmlNode)
  id: SetNamedItem(System.Xml.XmlNode)
  parent: System.Xml.XmlAttributeCollection
  langs:
  - csharp
  name: SetNamedItem(XmlNode)
  nameWithType: XmlAttributeCollection.SetNamedItem(XmlNode)
  fullName: System.Xml.XmlAttributeCollection.SetNamedItem(XmlNode)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "新增<xref href=&quot;System.Xml.XmlNode&quot;></xref>使用其<xref:System.Xml.XmlNode.Name*>屬性</xref:System.Xml.XmlNode.Name*>"
  remarks: ''
  example:
  - "The following example adds a new attribute to a document.  \n  \n [!code-cpp[Classic WebData XmlAttributeCollection.SetNamedItem Example#1](~/add/codesnippet/cpp/m-system.xml.xmlattribut_6_1.cpp)]\n [!code-cs[Classic WebData XmlAttributeCollection.SetNamedItem Example#1](~/add/codesnippet/csharp/m-system.xml.xmlattribut_6_1.cs)]\n [!code-vb[Classic WebData XmlAttributeCollection.SetNamedItem Example#1](~/add/codesnippet/visualbasic/m-system.xml.xmlattribut_6_1.vb)]"
  syntax:
    content: public override System.Xml.XmlNode SetNamedItem (System.Xml.XmlNode node);
    parameters:
    - id: node
      type: System.Xml.XmlNode
      description: "要儲存在此集合中的屬性節點。 節點仍稍後可使用節點名稱。 如果已經存在集合中具有該名稱的節點，取代為新的授權。否則，節點會附加至集合結尾。"
    return:
      type: System.Xml.XmlNode
      description: "如果<code> node </code>取代現有的節點具有相同名稱，舊的節點會傳回，否則則會傳回加入的節點。"
  overload: System.Xml.XmlAttributeCollection.SetNamedItem*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>node</code>建立來自不同<xref href=&quot;System.Xml.XmlDocument&quot;></xref>比建立此集合。       這<xref uid=&quot;langword_csharp_XmlAttributeCollection&quot; name=&quot;XmlAttributeCollection&quot; href=&quot;&quot;></xref>處於唯讀狀態。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>node</code>是<xref href=&quot;System.Xml.XmlAttribute&quot;> </xref> ，已經是另一個屬性<xref href=&quot;System.Xml.XmlElement&quot;></xref>物件。 若要重複使用其他項目中的屬性，您必須複製<xref uid=&quot;langword_csharp_XmlAttribute&quot; name=&quot;XmlAttribute&quot; href=&quot;&quot;></xref>您想要重複使用的物件。"
  platform:
  - net462
- uid: System.Xml.XmlAttributeCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isEii: true
  parent: System.Xml.XmlAttributeCollection
  langs:
  - csharp
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: XmlAttributeCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Xml.XmlAttributeCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "如需這個成員的說明，請參閱&lt;xref:System.Xml.XmlAttributeCollection.CopyTo%2A?displayProperty=fullName&gt;。"
  remarks: "這個成員是明確介面成員實作。 它可用時，才<xref:System.Xml.XmlAttributeCollection>執行個體轉換成<xref:System.Collections.ICollection>介面。</xref:System.Collections.ICollection> </xref:System.Xml.XmlAttributeCollection>"
  syntax:
    content: void ICollection.CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "這個陣列是從這個集合複製之物件的目的地。"
    - id: index
      type: System.Int32
      description: "開始複製的位置陣列中的索引。"
  overload: System.Xml.XmlAttributeCollection.System#Collections#ICollection#CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlAttributeCollection.System#Collections#ICollection#Count
  id: System#Collections#ICollection#Count
  isEii: true
  parent: System.Xml.XmlAttributeCollection
  langs:
  - csharp
  name: System.Collections.ICollection.Count
  nameWithType: XmlAttributeCollection.System.Collections.ICollection.Count
  fullName: System.Xml.XmlAttributeCollection.System.Collections.ICollection.Count
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "如需這個成員的說明，請參閱 ICollection.Count。"
  remarks: "這個成員是明確介面成員實作。 它可用時，才<xref:System.Xml.XmlAttributeCollection>執行個體轉換成<xref:System.Collections.ICollection>介面。</xref:System.Collections.ICollection> </xref:System.Xml.XmlAttributeCollection>"
  syntax:
    content: int System.Collections.ICollection.Count { get; }
    return:
      type: System.Int32
      description: "傳回<xref uid=&quot;langword_csharp_int&quot; name=&quot;int&quot; href=&quot;&quot;> </xref> ，其中包含屬性的計數。"
  overload: System.Xml.XmlAttributeCollection.System#Collections#ICollection#Count*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlAttributeCollection.System#Collections#ICollection#IsSynchronized
  id: System#Collections#ICollection#IsSynchronized
  isEii: true
  parent: System.Xml.XmlAttributeCollection
  langs:
  - csharp
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: XmlAttributeCollection.System.Collections.ICollection.IsSynchronized
  fullName: System.Xml.XmlAttributeCollection.System.Collections.ICollection.IsSynchronized
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "如需這個成員的說明，請參閱 ICollection.IsSynchronized。"
  remarks: "這個成員是明確介面成員實作。 它可用時，才<xref:System.Xml.XmlAttributeCollection>執行個體轉換成<xref:System.Collections.ICollection>介面。</xref:System.Collections.ICollection> </xref:System.Xml.XmlAttributeCollection>"
  syntax:
    content: bool System.Collections.ICollection.IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "傳回<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果會同步處理集合。"
  overload: System.Xml.XmlAttributeCollection.System#Collections#ICollection#IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlAttributeCollection.System#Collections#ICollection#SyncRoot
  id: System#Collections#ICollection#SyncRoot
  isEii: true
  parent: System.Xml.XmlAttributeCollection
  langs:
  - csharp
  name: System.Collections.ICollection.SyncRoot
  nameWithType: XmlAttributeCollection.System.Collections.ICollection.SyncRoot
  fullName: System.Xml.XmlAttributeCollection.System.Collections.ICollection.SyncRoot
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "如需這個成員的說明，請參閱 ICollection.SyncRoot。"
  remarks: "這個成員是明確介面成員實作。 它可用時，才<xref:System.Xml.XmlAttributeCollection>執行個體轉換成<xref:System.Collections.ICollection>介面。</xref:System.Collections.ICollection> </xref:System.Xml.XmlAttributeCollection>"
  syntax:
    content: object System.Collections.ICollection.SyncRoot { get; }
    return:
      type: System.Object
      description: "傳回<xref:System.Object>也就是集合的根。</xref:System.Object>"
  overload: System.Xml.XmlAttributeCollection.System#Collections#ICollection#SyncRoot*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Xml.XmlNamedNodeMap
  isExternal: false
  name: System.Xml.XmlNamedNodeMap
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.IndexOutOfRangeException
  isExternal: true
  name: System.IndexOutOfRangeException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Xml.XmlAttributeCollection.Append(System.Xml.XmlAttribute)
  parent: System.Xml.XmlAttributeCollection
  isExternal: false
  name: Append(XmlAttribute)
  nameWithType: XmlAttributeCollection.Append(XmlAttribute)
  fullName: System.Xml.XmlAttributeCollection.Append(XmlAttribute)
- uid: System.Xml.XmlAttribute
  parent: System.Xml
  isExternal: false
  name: XmlAttribute
  nameWithType: XmlAttribute
  fullName: System.Xml.XmlAttribute
- uid: System.Xml.XmlAttributeCollection.CopyTo(System.Xml.XmlAttribute[],System.Int32)
  parent: System.Xml.XmlAttributeCollection
  isExternal: false
  name: CopyTo(XmlAttribute[],Int32)
  nameWithType: XmlAttributeCollection.CopyTo(XmlAttribute[],Int32)
  fullName: System.Xml.XmlAttributeCollection.CopyTo(XmlAttribute[],Int32)
- uid: System.Xml.XmlAttribute[]
  parent: System.Xml
  isExternal: false
  name: XmlAttribute
  nameWithType: XmlAttribute
  fullName: System.Xml.XmlAttribute[]
  spec.csharp:
  - uid: System.Xml.XmlAttribute
    name: XmlAttribute
    nameWithType: XmlAttribute
    fullName: XmlAttribute[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Xml.XmlAttributeCollection.InsertAfter(System.Xml.XmlAttribute,System.Xml.XmlAttribute)
  parent: System.Xml.XmlAttributeCollection
  isExternal: false
  name: InsertAfter(XmlAttribute,XmlAttribute)
  nameWithType: XmlAttributeCollection.InsertAfter(XmlAttribute,XmlAttribute)
  fullName: System.Xml.XmlAttributeCollection.InsertAfter(XmlAttribute,XmlAttribute)
- uid: System.Xml.XmlAttributeCollection.InsertBefore(System.Xml.XmlAttribute,System.Xml.XmlAttribute)
  parent: System.Xml.XmlAttributeCollection
  isExternal: false
  name: InsertBefore(XmlAttribute,XmlAttribute)
  nameWithType: XmlAttributeCollection.InsertBefore(XmlAttribute,XmlAttribute)
  fullName: System.Xml.XmlAttributeCollection.InsertBefore(XmlAttribute,XmlAttribute)
- uid: System.Xml.XmlAttributeCollection.ItemOf(System.Int32)
  parent: System.Xml.XmlAttributeCollection
  isExternal: false
  name: ItemOf(Int32)
  nameWithType: XmlAttributeCollection.ItemOf(Int32)
  fullName: System.Xml.XmlAttributeCollection.ItemOf(Int32)
- uid: System.Xml.XmlAttributeCollection.ItemOf(System.String)
  parent: System.Xml.XmlAttributeCollection
  isExternal: false
  name: ItemOf(String)
  nameWithType: XmlAttributeCollection.ItemOf(String)
  fullName: System.Xml.XmlAttributeCollection.ItemOf(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.XmlAttributeCollection.ItemOf(System.String,System.String)
  parent: System.Xml.XmlAttributeCollection
  isExternal: false
  name: ItemOf(String,String)
  nameWithType: XmlAttributeCollection.ItemOf(String,String)
  fullName: System.Xml.XmlAttributeCollection.ItemOf(String,String)
- uid: System.Xml.XmlAttributeCollection.Prepend(System.Xml.XmlAttribute)
  parent: System.Xml.XmlAttributeCollection
  isExternal: false
  name: Prepend(XmlAttribute)
  nameWithType: XmlAttributeCollection.Prepend(XmlAttribute)
  fullName: System.Xml.XmlAttributeCollection.Prepend(XmlAttribute)
- uid: System.Xml.XmlAttributeCollection.Remove(System.Xml.XmlAttribute)
  parent: System.Xml.XmlAttributeCollection
  isExternal: false
  name: Remove(XmlAttribute)
  nameWithType: XmlAttributeCollection.Remove(XmlAttribute)
  fullName: System.Xml.XmlAttributeCollection.Remove(XmlAttribute)
- uid: System.Xml.XmlAttributeCollection.RemoveAll
  parent: System.Xml.XmlAttributeCollection
  isExternal: false
  name: RemoveAll()
  nameWithType: XmlAttributeCollection.RemoveAll()
  fullName: System.Xml.XmlAttributeCollection.RemoveAll()
- uid: System.Xml.XmlAttributeCollection.RemoveAt(System.Int32)
  parent: System.Xml.XmlAttributeCollection
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: XmlAttributeCollection.RemoveAt(Int32)
  fullName: System.Xml.XmlAttributeCollection.RemoveAt(Int32)
- uid: System.Xml.XmlAttributeCollection.SetNamedItem(System.Xml.XmlNode)
  parent: System.Xml.XmlAttributeCollection
  isExternal: false
  name: SetNamedItem(XmlNode)
  nameWithType: XmlAttributeCollection.SetNamedItem(XmlNode)
  fullName: System.Xml.XmlAttributeCollection.SetNamedItem(XmlNode)
- uid: System.Xml.XmlNode
  parent: System.Xml
  isExternal: false
  name: XmlNode
  nameWithType: XmlNode
  fullName: System.Xml.XmlNode
- uid: System.Xml.XmlAttributeCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Xml.XmlAttributeCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: XmlAttributeCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Xml.XmlAttributeCollection.System.Collections.ICollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Xml.XmlAttributeCollection.System#Collections#ICollection#Count
  parent: System.Xml.XmlAttributeCollection
  isExternal: false
  name: System.Collections.ICollection.Count
  nameWithType: XmlAttributeCollection.System.Collections.ICollection.Count
  fullName: System.Xml.XmlAttributeCollection.System.Collections.ICollection.Count
- uid: System.Xml.XmlAttributeCollection.System#Collections#ICollection#IsSynchronized
  parent: System.Xml.XmlAttributeCollection
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: XmlAttributeCollection.System.Collections.ICollection.IsSynchronized
  fullName: System.Xml.XmlAttributeCollection.System.Collections.ICollection.IsSynchronized
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xml.XmlAttributeCollection.System#Collections#ICollection#SyncRoot
  parent: System.Xml.XmlAttributeCollection
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: XmlAttributeCollection.System.Collections.ICollection.SyncRoot
  fullName: System.Xml.XmlAttributeCollection.System.Collections.ICollection.SyncRoot
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Xml.XmlAttributeCollection.Append*
  parent: System.Xml.XmlAttributeCollection
  isExternal: false
  name: Append
  nameWithType: XmlAttributeCollection.Append
- uid: System.Xml.XmlAttributeCollection.CopyTo*
  parent: System.Xml.XmlAttributeCollection
  isExternal: false
  name: CopyTo
  nameWithType: XmlAttributeCollection.CopyTo
- uid: System.Xml.XmlAttributeCollection.InsertAfter*
  parent: System.Xml.XmlAttributeCollection
  isExternal: false
  name: InsertAfter
  nameWithType: XmlAttributeCollection.InsertAfter
- uid: System.Xml.XmlAttributeCollection.InsertBefore*
  parent: System.Xml.XmlAttributeCollection
  isExternal: false
  name: InsertBefore
  nameWithType: XmlAttributeCollection.InsertBefore
- uid: System.Xml.XmlAttributeCollection.ItemOf*
  parent: System.Xml.XmlAttributeCollection
  isExternal: false
  name: ItemOf
  nameWithType: XmlAttributeCollection.ItemOf
- uid: System.Xml.XmlAttributeCollection.Prepend*
  parent: System.Xml.XmlAttributeCollection
  isExternal: false
  name: Prepend
  nameWithType: XmlAttributeCollection.Prepend
- uid: System.Xml.XmlAttributeCollection.Remove*
  parent: System.Xml.XmlAttributeCollection
  isExternal: false
  name: Remove
  nameWithType: XmlAttributeCollection.Remove
- uid: System.Xml.XmlAttributeCollection.RemoveAll*
  parent: System.Xml.XmlAttributeCollection
  isExternal: false
  name: RemoveAll
  nameWithType: XmlAttributeCollection.RemoveAll
- uid: System.Xml.XmlAttributeCollection.RemoveAt*
  parent: System.Xml.XmlAttributeCollection
  isExternal: false
  name: RemoveAt
  nameWithType: XmlAttributeCollection.RemoveAt
- uid: System.Xml.XmlAttributeCollection.SetNamedItem*
  parent: System.Xml.XmlAttributeCollection
  isExternal: false
  name: SetNamedItem
  nameWithType: XmlAttributeCollection.SetNamedItem
- uid: System.Xml.XmlAttributeCollection.System#Collections#ICollection#CopyTo*
  parent: System.Xml.XmlAttributeCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo
  nameWithType: XmlAttributeCollection.System.Collections.ICollection.CopyTo
- uid: System.Xml.XmlAttributeCollection.System#Collections#ICollection#Count*
  parent: System.Xml.XmlAttributeCollection
  isExternal: false
  name: System.Collections.ICollection.Count
  nameWithType: XmlAttributeCollection.System.Collections.ICollection.Count
- uid: System.Xml.XmlAttributeCollection.System#Collections#ICollection#IsSynchronized*
  parent: System.Xml.XmlAttributeCollection
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: XmlAttributeCollection.System.Collections.ICollection.IsSynchronized
- uid: System.Xml.XmlAttributeCollection.System#Collections#ICollection#SyncRoot*
  parent: System.Xml.XmlAttributeCollection
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: XmlAttributeCollection.System.Collections.ICollection.SyncRoot
