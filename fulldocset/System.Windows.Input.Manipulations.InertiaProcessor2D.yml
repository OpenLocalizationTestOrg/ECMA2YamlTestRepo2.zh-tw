### YamlMime:ManagedReference
items:
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D
  id: InertiaProcessor2D
  children:
  - System.Windows.Input.Manipulations.InertiaProcessor2D.#ctor
  - System.Windows.Input.Manipulations.InertiaProcessor2D.Complete(System.Int64)
  - System.Windows.Input.Manipulations.InertiaProcessor2D.Completed
  - System.Windows.Input.Manipulations.InertiaProcessor2D.Delta
  - System.Windows.Input.Manipulations.InertiaProcessor2D.ExpansionBehavior
  - System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginX
  - System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginY
  - System.Windows.Input.Manipulations.InertiaProcessor2D.IsRunning
  - System.Windows.Input.Manipulations.InertiaProcessor2D.Process(System.Int64)
  - System.Windows.Input.Manipulations.InertiaProcessor2D.RotationBehavior
  - System.Windows.Input.Manipulations.InertiaProcessor2D.SetParameters(System.Windows.Input.Manipulations.InertiaParameters2D)
  - System.Windows.Input.Manipulations.InertiaProcessor2D.TranslationBehavior
  langs:
  - csharp
  name: InertiaProcessor2D
  nameWithType: InertiaProcessor2D
  fullName: System.Windows.Input.Manipulations.InertiaProcessor2D
  type: Class
  summary: "實作操作的位置、 方向與平均 radius 外的推。"
  remarks: "InertiaProcessor2D 物件可讓您的應用程式外的項目位置、 方向與其他屬性，藉由模擬真實世界行為。       比方說，當使用者將項目，然後釋出的項目可以繼續移動、 減速，和慢慢停止。 慣性處理器，讓仿射 2d 值 （原點、 縮放、 轉譯及旋轉） 一段指定的時間，以指定的減速速率變更，藉以實作此行為。       慣性處理器本身並不會移動和減速的項目。 您的應用程式收到來自慣性處理器資訊，並套用值，視應用程式特定項目。 一般而言，應用程式會使用從慣性處理器所收到的資訊，若要變更的位置、 大小或方向的項目。       慣性處理通常用於搭配操作處理。 如需詳細資訊，請參閱<xref:System.Windows.Input.Manipulations.ManipulationProcessor2D>類別。</xref:System.Windows.Input.Manipulations.ManipulationProcessor2D>"
  syntax:
    content: public class InertiaProcessor2D
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.#ctor
  id: '#ctor'
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  langs:
  - csharp
  name: InertiaProcessor2D()
  nameWithType: InertiaProcessor2D.InertiaProcessor2D()
  fullName: System.Windows.Input.Manipulations.InertiaProcessor2D.InertiaProcessor2D()
  type: Constructor
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: "初始化的新執行個體<xref href=&quot;System.Windows.Input.Manipulations.InertiaProcessor2D&quot;></xref>類別。"
  syntax:
    content: public InertiaProcessor2D ();
    parameters: []
  overload: System.Windows.Input.Manipulations.InertiaProcessor2D.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.Complete(System.Int64)
  id: Complete(System.Int64)
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  langs:
  - csharp
  name: Complete(Int64)
  nameWithType: InertiaProcessor2D.Complete(Int64)
  fullName: System.Windows.Input.Manipulations.InertiaProcessor2D.Complete(Int64)
  type: Method
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: "完成指定的時間戳記的最終外推及引發<xref href=&quot;System.Windows.Input.Manipulations.InertiaProcessor2D.Completed&quot;></xref>事件。"
  remarks: "時間戳記是以 100 奈秒為單位。"
  example:
  - "In the following example, an event handler for the <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Started?displayProperty=fullName> event checks to see if inertia processing is running and if so, stops it by calling the Complete method.  \n  \n [!code-cs[ManipulationAPI#_ManipulationItem_OnManipulationStarted](~/add/codesnippet/csharp/build/manipulationitem.xaml.cs#_manipulationitem_onmanipulationstarted)]  \n  \n [!code-cs[ManipulationAPI#_ManipulationItem_Timestamp](~/add/codesnippet/csharp/build/manipulationitem.xaml.cs#_manipulationitem_timestamp)]"
  syntax:
    content: public void Complete (long timestamp);
    parameters:
    - id: timestamp
      type: System.Int64
      description: "若要完成外推，以 100 奈秒刻度為單位時間戳記。"
  overload: System.Windows.Input.Manipulations.InertiaProcessor2D.Complete*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "時間戳記參數小於初始或先前的時間戳記。"
  platform:
  - net462
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.Completed
  id: Completed
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  langs:
  - csharp
  name: Completed
  nameWithType: InertiaProcessor2D.Completed
  fullName: System.Windows.Input.Manipulations.InertiaProcessor2D.Completed
  type: Event
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: "完成後外推發生。"
  syntax:
    content: public event EventHandler<System.Windows.Input.Manipulations.Manipulation2DCompletedEventArgs> Completed;
    return:
      type: System.EventHandler{System.Windows.Input.Manipulations.Manipulation2DCompletedEventArgs}
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.Delta
  id: Delta
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  langs:
  - csharp
  name: Delta
  nameWithType: InertiaProcessor2D.Delta
  fullName: System.Windows.Input.Manipulations.InertiaProcessor2D.Delta
  type: Event
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: "當外推原點變更，或發生了轉譯、 縮放或旋轉時，就會發生。"
  remarks: "差異事件和<xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Delta?displayProperty=fullName>事件都是相同的型別。</xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Delta?displayProperty=fullName> 一般而言，您可以使用相同的事件處理常式，兩個事件。"
  example:
  - '[!code-cs[ManipulationAPI#_ManipulationItem_OnManipulationOrInertiaDelta](~/add/codesnippet/csharp/build/manipulationitem.xaml.cs#_manipulationitem_onmanipulationorinertiadelta)]'
  syntax:
    content: public event EventHandler<System.Windows.Input.Manipulations.Manipulation2DDeltaEventArgs> Delta;
    return:
      type: System.EventHandler{System.Windows.Input.Manipulations.Manipulation2DDeltaEventArgs}
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.ExpansionBehavior
  id: ExpansionBehavior
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  langs:
  - csharp
  name: ExpansionBehavior
  nameWithType: InertiaProcessor2D.ExpansionBehavior
  fullName: System.Windows.Input.Manipulations.InertiaProcessor2D.ExpansionBehavior
  type: Property
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: "取得或設定將慣性處理器的擴充行為。"
  syntax:
    content: public System.Windows.Input.Manipulations.InertiaExpansionBehavior2D ExpansionBehavior { get; set; }
    return:
      type: System.Windows.Input.Manipulations.InertiaExpansionBehavior2D
      description: "慣性處理器擴充行為。"
  overload: System.Windows.Input.Manipulations.InertiaProcessor2D.ExpansionBehavior*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginX
  id: InitialOriginX
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  langs:
  - csharp
  name: InitialOriginX
  nameWithType: InertiaProcessor2D.InitialOriginX
  fullName: System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginX
  type: Property
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: "取得或設定表示初始的原點的 x 座標，以座標為單位。"
  remarks: "由 InitialOriginX 原點和<xref:System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginY%2A>屬性是平均的項目相關聯的所有操作工具位置。</xref:System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginY%2A>       InitialOriginX 有效的值是任何有限數值。 預設值為 0.0。"
  syntax:
    content: public float InitialOriginX { get; set; }
    return:
      type: System.Single
      description: "以座標為單位的初始原點的 x 座標。"
  overload: System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginX*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginY
  id: InitialOriginY
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  langs:
  - csharp
  name: InitialOriginY
  nameWithType: InertiaProcessor2D.InitialOriginY
  fullName: System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginY
  type: Property
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: "取得或設定表示初始的原點的 y 座標，以座標為單位。"
  remarks: "所表示的原始點<xref:System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginX%2A>InitialOriginY 屬性且平均項目相關聯的所有操作工具的位置。</xref:System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginX%2A>       InitialOriginY 有效的值是任何有限數值。 預設值為 0.0。"
  syntax:
    content: public float InitialOriginY { get; set; }
    return:
      type: System.Single
      description: "以座標為單位的初始原點的 y 座標。"
  overload: System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginY*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.IsRunning
  id: IsRunning
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  langs:
  - csharp
  name: IsRunning
  nameWithType: InertiaProcessor2D.IsRunning
  fullName: System.Windows.Input.Manipulations.InertiaProcessor2D.IsRunning
  type: Property
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: "取得是否慣性目前正在進行中。"
  remarks: ''
  example:
  - "In the following example, an event handler for the <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Started?displayProperty=fullName> event checks to see if inertia processing is running and, if so, stops it by calling the <xref:System.Windows.Input.Manipulations.InertiaProcessor2D.Completed> method.  \n  \n [!code-cs[ManipulationAPI#_ManipulationItem_OnManipulationStarted](~/add/codesnippet/csharp/build/manipulationitem.xaml.cs#_manipulationitem_onmanipulationstarted)]  \n  \n [!code-cs[ManipulationAPI#_ManipulationItem_Timestamp](~/add/codesnippet/csharp/build/manipulationitem.xaml.cs#_manipulationitem_timestamp)]"
  syntax:
    content: public bool IsRunning { get; }
    return:
      type: System.Boolean
      description: "布林值，指出慣性目前是否正在進行中。"
  overload: System.Windows.Input.Manipulations.InertiaProcessor2D.IsRunning*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.Process(System.Int64)
  id: Process(System.Int64)
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  langs:
  - csharp
  name: Process(Int64)
  nameWithType: InertiaProcessor2D.Process(Int64)
  fullName: System.Windows.Input.Manipulations.InertiaProcessor2D.Process(Int64)
  type: Method
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: "在指定的時間外, 推操作的位置、 方向與平均 radius。"
  remarks: "時間戳記是以 100 奈秒為單位。"
  syntax:
    content: public bool Process (long timestamp);
    parameters:
    - id: timestamp
      type: System.Int64
      description: "若要執行外推，以 100 奈秒刻度為單位的時間戳記。"
    return:
      type: System.Boolean
      description: "操作的位置、 方向與平均 radius 在指定的時間。 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果外推正在進行中，否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>如果外推已完成。"
  overload: System.Windows.Input.Manipulations.InertiaProcessor2D.Process*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "時間戳記參數小於初始或先前的時間戳記。"
  platform:
  - net462
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.RotationBehavior
  id: RotationBehavior
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  langs:
  - csharp
  name: RotationBehavior
  nameWithType: InertiaProcessor2D.RotationBehavior
  fullName: System.Windows.Input.Manipulations.InertiaProcessor2D.RotationBehavior
  type: Property
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: "取得或設定將慣性處理器的旋轉行為。"
  remarks: ''
  example:
  - "In the following example, the <xref:System.Windows.Input.Manipulations.InertiaRotationBehavior2D.DesiredRotation%2A> property is set to enable inertia processing to rotate an object three-and-one-half times from its starting orientation.  \n  \n [!code-cs[ManipulationAPI#_ManipulationItem_SetDesiredRotation](~/add/codesnippet/csharp/build/manipulationitem.xaml.cs#_manipulationitem_setdesiredrotation)]"
  syntax:
    content: public System.Windows.Input.Manipulations.InertiaRotationBehavior2D RotationBehavior { get; set; }
    return:
      type: System.Windows.Input.Manipulations.InertiaRotationBehavior2D
      description: "慣性處理器旋轉行為。"
  overload: System.Windows.Input.Manipulations.InertiaProcessor2D.RotationBehavior*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.SetParameters(System.Windows.Input.Manipulations.InertiaParameters2D)
  id: SetParameters(System.Windows.Input.Manipulations.InertiaParameters2D)
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  langs:
  - csharp
  name: SetParameters(InertiaParameters2D)
  nameWithType: InertiaProcessor2D.SetParameters(InertiaParameters2D)
  fullName: System.Windows.Input.Manipulations.InertiaProcessor2D.SetParameters(InertiaParameters2D)
  type: Method
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: "慣性處理器上設定參數。"
  syntax:
    content: public void SetParameters (System.Windows.Input.Manipulations.InertiaParameters2D parameters);
    parameters:
    - id: parameters
      type: System.Windows.Input.Manipulations.InertiaParameters2D
      description: "若要設定的參數。"
  overload: System.Windows.Input.Manipulations.InertiaProcessor2D.SetParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.TranslationBehavior
  id: TranslationBehavior
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  langs:
  - csharp
  name: TranslationBehavior
  nameWithType: InertiaProcessor2D.TranslationBehavior
  fullName: System.Windows.Input.Manipulations.InertiaProcessor2D.TranslationBehavior
  type: Property
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: "取得或設定將慣性處理器的轉譯行為。"
  syntax:
    content: public System.Windows.Input.Manipulations.InertiaTranslationBehavior2D TranslationBehavior { get; set; }
    return:
      type: System.Windows.Input.Manipulations.InertiaTranslationBehavior2D
      description: "慣性處理器的轉譯行為。"
  overload: System.Windows.Input.Manipulations.InertiaProcessor2D.TranslationBehavior*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.#ctor
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  isExternal: false
  name: InertiaProcessor2D()
  nameWithType: InertiaProcessor2D.InertiaProcessor2D()
  fullName: System.Windows.Input.Manipulations.InertiaProcessor2D.InertiaProcessor2D()
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.Complete(System.Int64)
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  isExternal: false
  name: Complete(Int64)
  nameWithType: InertiaProcessor2D.Complete(Int64)
  fullName: System.Windows.Input.Manipulations.InertiaProcessor2D.Complete(Int64)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.Completed
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  isExternal: false
  name: Completed
  nameWithType: InertiaProcessor2D.Completed
  fullName: System.Windows.Input.Manipulations.InertiaProcessor2D.Completed
- uid: System.EventHandler{System.Windows.Input.Manipulations.Manipulation2DCompletedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<Manipulation2DCompletedEventArgs>
  nameWithType: EventHandler<Manipulation2DCompletedEventArgs>
  fullName: System.EventHandler<System.Windows.Input.Manipulations.Manipulation2DCompletedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Windows.Input.Manipulations.Manipulation2DCompletedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Input.Manipulations.Manipulation2DCompletedEventArgs
    name: Manipulation2DCompletedEventArgs
    nameWithType: Manipulation2DCompletedEventArgs
    fullName: Manipulation2DCompletedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.Delta
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  isExternal: false
  name: Delta
  nameWithType: InertiaProcessor2D.Delta
  fullName: System.Windows.Input.Manipulations.InertiaProcessor2D.Delta
- uid: System.EventHandler{System.Windows.Input.Manipulations.Manipulation2DDeltaEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<Manipulation2DDeltaEventArgs>
  nameWithType: EventHandler<Manipulation2DDeltaEventArgs>
  fullName: System.EventHandler<System.Windows.Input.Manipulations.Manipulation2DDeltaEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Windows.Input.Manipulations.Manipulation2DDeltaEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Input.Manipulations.Manipulation2DDeltaEventArgs
    name: Manipulation2DDeltaEventArgs
    nameWithType: Manipulation2DDeltaEventArgs
    fullName: Manipulation2DDeltaEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.ExpansionBehavior
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  isExternal: false
  name: ExpansionBehavior
  nameWithType: InertiaProcessor2D.ExpansionBehavior
  fullName: System.Windows.Input.Manipulations.InertiaProcessor2D.ExpansionBehavior
- uid: System.Windows.Input.Manipulations.InertiaExpansionBehavior2D
  parent: System.Windows.Input.Manipulations
  isExternal: false
  name: InertiaExpansionBehavior2D
  nameWithType: InertiaExpansionBehavior2D
  fullName: System.Windows.Input.Manipulations.InertiaExpansionBehavior2D
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginX
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  isExternal: false
  name: InitialOriginX
  nameWithType: InertiaProcessor2D.InitialOriginX
  fullName: System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginX
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginY
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  isExternal: false
  name: InitialOriginY
  nameWithType: InertiaProcessor2D.InitialOriginY
  fullName: System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginY
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.IsRunning
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  isExternal: false
  name: IsRunning
  nameWithType: InertiaProcessor2D.IsRunning
  fullName: System.Windows.Input.Manipulations.InertiaProcessor2D.IsRunning
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.Process(System.Int64)
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  isExternal: false
  name: Process(Int64)
  nameWithType: InertiaProcessor2D.Process(Int64)
  fullName: System.Windows.Input.Manipulations.InertiaProcessor2D.Process(Int64)
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.RotationBehavior
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  isExternal: false
  name: RotationBehavior
  nameWithType: InertiaProcessor2D.RotationBehavior
  fullName: System.Windows.Input.Manipulations.InertiaProcessor2D.RotationBehavior
- uid: System.Windows.Input.Manipulations.InertiaRotationBehavior2D
  parent: System.Windows.Input.Manipulations
  isExternal: false
  name: InertiaRotationBehavior2D
  nameWithType: InertiaRotationBehavior2D
  fullName: System.Windows.Input.Manipulations.InertiaRotationBehavior2D
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.SetParameters(System.Windows.Input.Manipulations.InertiaParameters2D)
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  isExternal: false
  name: SetParameters(InertiaParameters2D)
  nameWithType: InertiaProcessor2D.SetParameters(InertiaParameters2D)
  fullName: System.Windows.Input.Manipulations.InertiaProcessor2D.SetParameters(InertiaParameters2D)
- uid: System.Windows.Input.Manipulations.InertiaParameters2D
  parent: System.Windows.Input.Manipulations
  isExternal: false
  name: InertiaParameters2D
  nameWithType: InertiaParameters2D
  fullName: System.Windows.Input.Manipulations.InertiaParameters2D
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.TranslationBehavior
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  isExternal: false
  name: TranslationBehavior
  nameWithType: InertiaProcessor2D.TranslationBehavior
  fullName: System.Windows.Input.Manipulations.InertiaProcessor2D.TranslationBehavior
- uid: System.Windows.Input.Manipulations.InertiaTranslationBehavior2D
  parent: System.Windows.Input.Manipulations
  isExternal: false
  name: InertiaTranslationBehavior2D
  nameWithType: InertiaTranslationBehavior2D
  fullName: System.Windows.Input.Manipulations.InertiaTranslationBehavior2D
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.#ctor*
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  isExternal: false
  name: InertiaProcessor2D
  nameWithType: InertiaProcessor2D.InertiaProcessor2D
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.Complete*
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  isExternal: false
  name: Complete
  nameWithType: InertiaProcessor2D.Complete
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.ExpansionBehavior*
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  isExternal: false
  name: ExpansionBehavior
  nameWithType: InertiaProcessor2D.ExpansionBehavior
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginX*
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  isExternal: false
  name: InitialOriginX
  nameWithType: InertiaProcessor2D.InitialOriginX
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginY*
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  isExternal: false
  name: InitialOriginY
  nameWithType: InertiaProcessor2D.InitialOriginY
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.IsRunning*
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  isExternal: false
  name: IsRunning
  nameWithType: InertiaProcessor2D.IsRunning
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.Process*
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  isExternal: false
  name: Process
  nameWithType: InertiaProcessor2D.Process
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.RotationBehavior*
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  isExternal: false
  name: RotationBehavior
  nameWithType: InertiaProcessor2D.RotationBehavior
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.SetParameters*
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  isExternal: false
  name: SetParameters
  nameWithType: InertiaProcessor2D.SetParameters
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.TranslationBehavior*
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  isExternal: false
  name: TranslationBehavior
  nameWithType: InertiaProcessor2D.TranslationBehavior
