### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.FormView
  id: FormView
  children:
  - System.Web.UI.WebControls.FormView.#ctor
  - System.Web.UI.WebControls.FormView.AllowPaging
  - System.Web.UI.WebControls.FormView.BackImageUrl
  - System.Web.UI.WebControls.FormView.BottomPagerRow
  - System.Web.UI.WebControls.FormView.Caption
  - System.Web.UI.WebControls.FormView.CaptionAlign
  - System.Web.UI.WebControls.FormView.CellPadding
  - System.Web.UI.WebControls.FormView.CellSpacing
  - System.Web.UI.WebControls.FormView.ChangeMode(System.Web.UI.WebControls.FormViewMode)
  - System.Web.UI.WebControls.FormView.CreateChildControls(System.Collections.IEnumerable,System.Boolean)
  - System.Web.UI.WebControls.FormView.CreateControlStyle
  - System.Web.UI.WebControls.FormView.CreateDataSourceSelectArguments
  - System.Web.UI.WebControls.FormView.CreateRow(System.Int32,System.Web.UI.WebControls.DataControlRowType,System.Web.UI.WebControls.DataControlRowState)
  - System.Web.UI.WebControls.FormView.CreateTable
  - System.Web.UI.WebControls.FormView.CurrentMode
  - System.Web.UI.WebControls.FormView.DataBind
  - System.Web.UI.WebControls.FormView.DataItem
  - System.Web.UI.WebControls.FormView.DataItemCount
  - System.Web.UI.WebControls.FormView.DataItemIndex
  - System.Web.UI.WebControls.FormView.DataKey
  - System.Web.UI.WebControls.FormView.DataKeyNames
  - System.Web.UI.WebControls.FormView.DefaultMode
  - System.Web.UI.WebControls.FormView.DeleteItem
  - System.Web.UI.WebControls.FormView.DeleteMethod
  - System.Web.UI.WebControls.FormView.EditItemTemplate
  - System.Web.UI.WebControls.FormView.EditRowStyle
  - System.Web.UI.WebControls.FormView.EmptyDataRowStyle
  - System.Web.UI.WebControls.FormView.EmptyDataTemplate
  - System.Web.UI.WebControls.FormView.EmptyDataText
  - System.Web.UI.WebControls.FormView.EnableModelValidation
  - System.Web.UI.WebControls.FormView.EnsureDataBound
  - System.Web.UI.WebControls.FormView.ExtractRowValues(System.Collections.Specialized.IOrderedDictionary,System.Boolean)
  - System.Web.UI.WebControls.FormView.FooterRow
  - System.Web.UI.WebControls.FormView.FooterStyle
  - System.Web.UI.WebControls.FormView.FooterTemplate
  - System.Web.UI.WebControls.FormView.FooterText
  - System.Web.UI.WebControls.FormView.GridLines
  - System.Web.UI.WebControls.FormView.HeaderRow
  - System.Web.UI.WebControls.FormView.HeaderStyle
  - System.Web.UI.WebControls.FormView.HeaderTemplate
  - System.Web.UI.WebControls.FormView.HeaderText
  - System.Web.UI.WebControls.FormView.HorizontalAlign
  - System.Web.UI.WebControls.FormView.InitializePager(System.Web.UI.WebControls.FormViewRow,System.Web.UI.WebControls.PagedDataSource)
  - System.Web.UI.WebControls.FormView.InitializeRow(System.Web.UI.WebControls.FormViewRow)
  - System.Web.UI.WebControls.FormView.InsertItem(System.Boolean)
  - System.Web.UI.WebControls.FormView.InsertItemTemplate
  - System.Web.UI.WebControls.FormView.InsertMethod
  - System.Web.UI.WebControls.FormView.InsertRowStyle
  - System.Web.UI.WebControls.FormView.IsBindableType(System.Type)
  - System.Web.UI.WebControls.FormView.ItemCommand
  - System.Web.UI.WebControls.FormView.ItemCreated
  - System.Web.UI.WebControls.FormView.ItemDeleted
  - System.Web.UI.WebControls.FormView.ItemDeleting
  - System.Web.UI.WebControls.FormView.ItemInserted
  - System.Web.UI.WebControls.FormView.ItemInserting
  - System.Web.UI.WebControls.FormView.ItemTemplate
  - System.Web.UI.WebControls.FormView.ItemUpdated
  - System.Web.UI.WebControls.FormView.ItemUpdating
  - System.Web.UI.WebControls.FormView.LoadControlState(System.Object)
  - System.Web.UI.WebControls.FormView.LoadViewState(System.Object)
  - System.Web.UI.WebControls.FormView.ModeChanged
  - System.Web.UI.WebControls.FormView.ModeChanging
  - System.Web.UI.WebControls.FormView.ModifiedOuterTableStylePropertyName
  - System.Web.UI.WebControls.FormView.OnBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.WebControls.FormView.OnInit(System.EventArgs)
  - System.Web.UI.WebControls.FormView.OnItemCommand(System.Web.UI.WebControls.FormViewCommandEventArgs)
  - System.Web.UI.WebControls.FormView.OnItemCreated(System.EventArgs)
  - System.Web.UI.WebControls.FormView.OnItemDeleted(System.Web.UI.WebControls.FormViewDeletedEventArgs)
  - System.Web.UI.WebControls.FormView.OnItemDeleting(System.Web.UI.WebControls.FormViewDeleteEventArgs)
  - System.Web.UI.WebControls.FormView.OnItemInserted(System.Web.UI.WebControls.FormViewInsertedEventArgs)
  - System.Web.UI.WebControls.FormView.OnItemInserting(System.Web.UI.WebControls.FormViewInsertEventArgs)
  - System.Web.UI.WebControls.FormView.OnItemUpdated(System.Web.UI.WebControls.FormViewUpdatedEventArgs)
  - System.Web.UI.WebControls.FormView.OnItemUpdating(System.Web.UI.WebControls.FormViewUpdateEventArgs)
  - System.Web.UI.WebControls.FormView.OnModeChanged(System.EventArgs)
  - System.Web.UI.WebControls.FormView.OnModeChanging(System.Web.UI.WebControls.FormViewModeEventArgs)
  - System.Web.UI.WebControls.FormView.OnPageIndexChanged(System.EventArgs)
  - System.Web.UI.WebControls.FormView.OnPageIndexChanging(System.Web.UI.WebControls.FormViewPageEventArgs)
  - System.Web.UI.WebControls.FormView.PageCount
  - System.Web.UI.WebControls.FormView.PageIndex
  - System.Web.UI.WebControls.FormView.PageIndexChanged
  - System.Web.UI.WebControls.FormView.PageIndexChanging
  - System.Web.UI.WebControls.FormView.PagerSettings
  - System.Web.UI.WebControls.FormView.PagerStyle
  - System.Web.UI.WebControls.FormView.PagerTemplate
  - System.Web.UI.WebControls.FormView.PerformDataBinding(System.Collections.IEnumerable)
  - System.Web.UI.WebControls.FormView.PrepareControlHierarchy
  - System.Web.UI.WebControls.FormView.RaisePostBackEvent(System.String)
  - System.Web.UI.WebControls.FormView.Render(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.FormView.RenderOuterTable
  - System.Web.UI.WebControls.FormView.Row
  - System.Web.UI.WebControls.FormView.RowStyle
  - System.Web.UI.WebControls.FormView.SaveControlState
  - System.Web.UI.WebControls.FormView.SaveViewState
  - System.Web.UI.WebControls.FormView.SelectedValue
  - System.Web.UI.WebControls.FormView.SetPageIndex(System.Int32)
  - System.Web.UI.WebControls.FormView.System#Web#UI#IDataItemContainer#DataItemIndex
  - System.Web.UI.WebControls.FormView.System#Web#UI#IDataItemContainer#DisplayIndex
  - System.Web.UI.WebControls.FormView.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  - System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataKeyNames
  - System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataMember
  - System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataSource
  - System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataSourceID
  - System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataSourceObject
  - System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundItemControl#DataKey
  - System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundItemControl#Mode
  - System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IPostBackContainer#GetPostBackOptions(System.Web.UI.WebControls.IButtonControl)
  - System.Web.UI.WebControls.FormView.TagKey
  - System.Web.UI.WebControls.FormView.TopPagerRow
  - System.Web.UI.WebControls.FormView.TrackViewState
  - System.Web.UI.WebControls.FormView.UpdateItem(System.Boolean)
  - System.Web.UI.WebControls.FormView.UpdateMethod
  langs:
  - csharp
  name: FormView
  nameWithType: FormView
  fullName: System.Web.UI.WebControls.FormView
  type: Class
  summary: "顯示單一記錄中的資料來源使用使用者定義範本的值。 在 FormView 控制項可讓您編輯、 刪除及插入記錄。"
  remarks: "本主題內容:-[簡介](#introduction)      -   [範本](#templates)      -   [繫結至資料](#binding_to_data)      -   [資料作業](#data_operations)      -   [自訂使用者介面](#customizing_the_user_interface)      -   [事件](#events)      -   [協助工具](#accessibility)      -   [套用 CSS 樣式](#applying_styles)      -   [宣告式語法](#declarative_syntax)<a name=&quot;introduction&quot;> </a> # # 簡介 FormView 控制項用來顯示資料來源的單一記錄。       類似於<xref:System.Web.UI.WebControls.DetailsView>控制，但是它會顯示使用者定義的範本，而不是資料列欄位。</xref:System.Web.UI.WebControls.DetailsView> 建立您自己的範本，讓您更大的彈性來控制資料的顯示方式。 在 FormView 控制項支援下列功能:-繫結至資料來源控制項，例如<xref:System.Web.UI.WebControls.SqlDataSource>和<xref:System.Web.UI.WebControls.ObjectDataSource>.</xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.SqlDataSource>      -內建的插入功能。      -內建更新和刪除功能。      -內建的分頁功能。      -以程式設計方式存取 FormView 物件模型，來動態設定屬性，處理事件，等等。      透過使用者定義的範本、 主題和樣式的可自訂外觀。      <a name=&quot;templates&quot;></a># # FormView 為範本控制項來顯示內容，您必須建立控制項的不同部分的範本。 大部分的範本是選擇性的。不過，您必須建立的範本，以及設定控制項的模式。 例如，支援記錄插入 FormView 控制項必須有定義的插入項目範本。 下表列出您可以建立不同的範本。      |範本類型 |描述 |  |-------------------|-----------------|  |<xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>|FormView 控制項處於編輯模式時，定義資料列的內容。</xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A> 此範本通常包含輸入的控制項和命令按鈕的使用者可以編輯現有記錄。 |  |<xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A>|定義顯示 FormView 控制項繫結至資料來源不包含任何記錄時，空白資料列的內容。</xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A> 此範本通常包含用來提醒使用者資料來源不包含任何記錄。 |  |<xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A>|定義頁尾資料列的內容。</xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> 此範本通常包含您想要顯示頁尾資料列中的任何其他內容。 **注意︰**或者，您可以只指定<xref:System.Web.UI.WebControls.FormView.FooterText%2A>屬性設定頁尾資料列中顯示的文字。 |  |<xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A>|定義標頭資料列的內容。</xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> </xref:System.Web.UI.WebControls.FormView.FooterText%2A> 此範本通常包含您想要在標頭資料列中顯示的任何其他內容。 **注意︰**或者，您可以只指定<xref:System.Web.UI.WebControls.FormView.HeaderText%2A>屬性設定標頭列中顯示的文字。 |  |<xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>|FormView 控制項處於唯讀模式時，定義資料列的內容。</xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A> </xref:System.Web.UI.WebControls.FormView.HeaderText%2A> 此範本通常包含用來顯示現有記錄的值。 |  |<xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>|FormView 控制項處於插入模式時，定義資料列的內容。</xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A> 此範本通常包含輸入的控制項和命令按鈕的使用者可以加入新的記錄。 |  |<xref:System.Web.UI.WebControls.FormView.PagerTemplate%2A>|定義啟用分頁功能時顯示的頁面巡覽列的內容 (當<xref:System.Web.UI.WebControls.FormView.AllowPaging%2A>屬性設定為`true`)。</xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> </xref:System.Web.UI.WebControls.FormView.PagerTemplate%2A> 此範本通常包含的控制項的使用者可以瀏覽至另一筆記錄。 **注意︰** FormView 控制項的內建的頁面巡覽區列使用者介面 (UI)。 您必須建立頁面巡覽區範本，只有當您想要建立您自己的自訂頁面巡覽區資料列。 |      若要顯示的欄位值中的項目範本，請使用資料繫結運算式。 如需資料繫結運算式的詳細資訊，請參閱[資料繫結運算式語法](http://msdn.microsoft.com/en-us/676beb1d-ddfa-4153-bba8-3c86dcb7ceca)。       編輯項目樣板和插入項目樣板中的輸入的控制項可以繫結至資料來源的欄位使用雙向繫結運算式。 這可讓 FormView 控制項自動擷取更新的輸入控制項的值或插入作業。 雙向繫結運算式也可以讓輸入的控制項中自動顯示原始欄位值的編輯項目範本。 如需雙向繫結運算式的詳細資訊，請參閱[繫結至資料庫](http://msdn.microsoft.com/en-us/ab7b2846-975b-4057-a948-45527497c742)。      <a name=&quot;binding_to_data&quot;></a># # 繫結至資料 FormView 控制項可以繫結至資料來源控制項 (例如<xref:System.Web.UI.WebControls.SqlDataSource>， <xref:System.Web.UI.WebControls.ObjectDataSource>，或<xref:System.Web.UI.WebControls.AccessDataSource>) 或任何資料來源集合中實作<xref:System.Collections.IEnumerable?displayProperty=fullName>介面，例如<xref:System.Data.DataView?displayProperty=fullName>， <xref:System.Collections.ArrayList?displayProperty=fullName>， <xref:System.Collections.Generic.List%601?displayProperty=fullName>，或其他集合型別。</xref:System.Collections.Generic.List%601?displayProperty=fullName> </xref:System.Collections.ArrayList?displayProperty=fullName> </xref:System.Data.DataView?displayProperty=fullName> </xref:System.Collections.IEnumerable?displayProperty=fullName> </xref:System.Web.UI.WebControls.AccessDataSource> </xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.SqlDataSource> 使用下列方法之一將 FormView 控制項繫結至適當的資料來源類型:-將繫結至資料來源控制項，將設定<xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A>FormView 控制項的屬性<xref:System.Web.UI.Control.ID%2A>資料來源控制項的值。</xref:System.Web.UI.Control.ID%2A> </xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A> 在 FormView 控制項自動繫結至指定的資料來源控制項，並可以利用資料來源控制項的功能，以執行插入、 更新、 刪除和分頁功能。 這是慣用的方法繫結至資料。      -將繫結至資料來源實作<xref:System.Collections.IEnumerable?displayProperty=fullName>介面，以程式設計方式設定<xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A>屬性在 formview 控制權傳輸至資料來源，然後呼叫<xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A>方法。</xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> </xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A> </xref:System.Collections.IEnumerable?displayProperty=fullName> 使用此方法時，在 FormView 控制項不提供內建的插入、 更新、 刪除和分頁功能。 您需要提供此功能使用適當的事件。       如需資料繫結的詳細資訊，請參閱[ASP.NET 資料存取內容對應](http://msdn.microsoft.com/en-us/f9219396-a0fa-481f-894d-e3d9c67d64f2)。      > [!NOTE] > 這個控制項可以用來顯示使用者輸入，其中可能包含惡意用戶端指令碼。 請檢查從用戶端可執行的指令碼、 SQL 陳述式，或其他程式碼傳送之後，顯示應用程式中的任何資訊。 可能的話，強烈建議，值經過 HTML 編碼，才能讓它們顯示在這個控制項。 ASP.NET 提供使用者輸入來封鎖指令碼和 HTML 的輸入的要求驗證功能。 驗證伺服器控制項也會提供以評估使用者輸入。 如需詳細資訊，請參閱[驗證控制項簡介](http://msdn.microsoft.com/en-us/3c0e7514-cff2-4bed-936d-ee3f7b740190)。      <a name=&quot;data_operations&quot;></a># # 資料作業 FormView 控制項提供許多內建功能可讓使用者更新、 刪除、 插入和控制項中的項目頁面上。 FormView 控制項繫結至資料來源控制項，FormView 控制項可以讓您利用資料來源控制項的功能，並提供自動更新、 刪除、 插入和分頁功能。      > [!NOTE] > FormView 控制項可以為 update、 delete、 insert 和分頁作業與其他類型的資料來源提供的支援; 不過，您必須提供適當的事件處理常式，實作這些作業。       在 FormView 控制項使用的範本，因為它不提供自動產生命令按鈕來執行更新、 刪除或插入作業。 您必須手動加入這些命令按鈕，在適當的樣板。 在 FormView 控制項辨認某些按鈕具有其`CommandName`屬性設定為特定值。 下表列出 FormView 控制項辨認的命令按鈕。      |按鈕 |CommandName 值 |描述 |  |------------|-----------------------|-----------------|  |取消 |&quot;取消&quot;|取消作業，並捨棄使用者所輸入的值，更新或插入作業中使用。 在 FormView 控制權會再傳回<xref:System.Web.UI.WebControls.FormView.DefaultMode%2A>屬性所指定的模式。 |  |刪除 |&quot;刪除&quot;|刪除作業中使用資料來源刪除顯示的記錄。</xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> 引發<xref:System.Web.UI.WebControls.FormView.ItemDeleting>和<xref:System.Web.UI.WebControls.FormView.ItemDeleted>事件。 |  |編輯 |&quot;編輯&quot;|在更新作業中用來在 FormView 控制項置於編輯模式。</xref:System.Web.UI.WebControls.FormView.ItemDeleted> </xref:System.Web.UI.WebControls.FormView.ItemDeleting> <xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>屬性中指定的內容會顯示為資料列。 |  |插入 |&quot;插入&quot;|在插入作業中用來嘗試使用由使用者所提供的值的資料來源中插入新的記錄。</xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A> 引發<xref:System.Web.UI.WebControls.FormView.ItemInserting>和<xref:System.Web.UI.WebControls.FormView.ItemInserted>事件。 |  |新 |&quot;新增&quot;|在插入作業中用來將 FormView 控制項放在插入模式。</xref:System.Web.UI.WebControls.FormView.ItemInserted> </xref:System.Web.UI.WebControls.FormView.ItemInserting> <xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>屬性中指定的內容會顯示為資料列。 |  |頁面 |&quot;頁面&quot;|在分頁作業中用來代表執行分頁的頁面巡覽列中按鈕。</xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A> 指定的分頁作業，請設定`CommandArgument`下一步 」、 「 Prev&quot;、&quot;First&quot;、 「 最後 」，或要瀏覽頁面的索引按鈕的屬性。 引發<xref:System.Web.UI.WebControls.FormView.PageIndexChanging>和<xref:System.Web.UI.WebControls.FormView.PageIndexChanged>事件。</xref:System.Web.UI.WebControls.FormView.PageIndexChanged> </xref:System.Web.UI.WebControls.FormView.PageIndexChanging> **注意︰**這種類型的按鈕通常只用於頁面巡覽區範本。 |  |Update |&quot;更新&quot;|用於更新作業，以嘗試更新資料來源中顯示的記錄，使用者所提供的值。 引發<xref:System.Web.UI.WebControls.FormView.ItemUpdating>和<xref:System.Web.UI.WebControls.FormView.ItemUpdated>事件。 |      不同於刪除按鈕 （會刪除顯示的資料錄立即），按一下 [編輯] 或 [新增] 按鈕時，控制項進入編輯 FormView 或分別插入模式下，。</xref:System.Web.UI.WebControls.FormView.ItemUpdated> </xref:System.Web.UI.WebControls.FormView.ItemUpdating> 在編輯模式中，內容包含在<xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>屬性會顯示目前的資料項目。</xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A> 一般而言，編輯項目樣板會定義成將 編輯 按鈕會取代的更新 和 取消 按鈕。 輸入適用於該欄位的資料類型的控制項 (例如<xref:System.Web.UI.WebControls.TextBox>或<xref:System.Web.UI.WebControls.CheckBox>控制項) 通常也會顯示與使用者修改欄位的值。</xref:System.Web.UI.WebControls.CheckBox> </xref:System.Web.UI.WebControls.TextBox> 按一下 更新 按鈕更新資料來源中的記錄，而按一下取消&5;d; 按鈕會放棄所有變更。       同樣地，將中所包含的內容<xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>控制項處於插入模式時，將會顯示之資料項目的屬性。</xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A> 插入項目範本通常是在 新增 按鈕會取代 Insert 和 取消&5;d; 按鈕，而使用者輸入新記錄的值會顯示空白的輸入的控制項的定義。 按一下 插入 按鈕在資料來源插入記錄，而按一下取消&5;d; 按鈕會放棄所有變更。       在 FormView 控制項提供分頁功能，可讓使用者巡覽至其他資料來源中的記錄。 啟用時，頁面巡覽列會顯示在 FormView 控制項包含頁面導覽控制項。 若要啟用分頁，<xref:System.Web.UI.WebControls.FormView.AllowPaging%2A>屬性`true`。</xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> 您可以自訂頁面巡覽列中包含的物件屬性來設定<xref:System.Web.UI.WebControls.FormView.PagerStyle%2A>和<xref:System.Web.UI.WebControls.FormView.PagerSettings%2A>屬性。</xref:System.Web.UI.WebControls.FormView.PagerSettings%2A> </xref:System.Web.UI.WebControls.FormView.PagerStyle%2A> 而不是使用內建的頁面巡覽列 UI，您可以建立自己的 UI 使用<xref:System.Web.UI.WebControls.FormView.PagerTemplate%2A>屬性。</xref:System.Web.UI.WebControls.FormView.PagerTemplate%2A>      <a name=&quot;customizing_the_user_interface&quot;></a># # 自訂使用者介面您可以自訂 FormView 控制項的外觀設定控制項的不同部分的樣式屬性。 下表列出不同的樣式屬性。      |樣式屬性 |描述 |  |--------------------|-----------------|  |<xref:System.Web.UI.WebControls.FormView.EditRowStyle%2A>|樣式設定為資料列時 FormView 控制項處於編輯模式。 |  |<xref:System.Web.UI.WebControls.FormView.EmptyDataRowStyle%2A>|在 FormView 在控制項中顯示資料來源不包含任何記錄時，空白資料列的樣式設定。 |  |<xref:System.Web.UI.WebControls.FormView.FooterStyle%2A>|在 FormView 控制項的頁尾資料列的樣式設定。 |  |<xref:System.Web.UI.WebControls.FormView.HeaderStyle%2A>|在 FormView 控制項的標頭資料列的樣式設定。 |  |<xref:System.Web.UI.WebControls.FormView.InsertRowStyle%2A>|樣式設定為資料列時 FormView 控制項處於插入模式。 |  |<xref:System.Web.UI.WebControls.FormView.PagerStyle%2A>|在控制項中顯示 FormView 啟用分頁功能時的頁面巡覽列的樣式設定。 |  |<xref:System.Web.UI.WebControls.FormView.RowStyle%2A>|FormView 控制項處於唯讀模式時的資料列的樣式設定。 |     <a name=&quot;events&quot;> </a> # # 事件 FormView 控制項提供數個事件，您可以程式設計的。</xref:System.Web.UI.WebControls.FormView.RowStyle%2A> </xref:System.Web.UI.WebControls.FormView.PagerStyle%2A> </xref:System.Web.UI.WebControls.FormView.InsertRowStyle%2A> </xref:System.Web.UI.WebControls.FormView.HeaderStyle%2A> </xref:System.Web.UI.WebControls.FormView.FooterStyle%2A> </xref:System.Web.UI.WebControls.FormView.EmptyDataRowStyle%2A> </xref:System.Web.UI.WebControls.FormView.EditRowStyle%2A> 這可讓您在事件發生時執行自訂的常式。 下表列出 FormView 控制項所支援的事件。      |事件 |描述 |  |-----------|-----------------|  |<xref:System.Web.UI.WebControls.FormView.ItemCommand>|發生於按一下 FormView 控制項中的按鈕時。</xref:System.Web.UI.WebControls.FormView.ItemCommand> 此事件通常用來在控制項中按下按鈕時執行工作。 |  |<xref:System.Web.UI.WebControls.FormView.ItemCreated>|在所有發生<xref:System.Web.UI.WebControls.FormViewRow>FormView 控制項中建立物件。</xref:System.Web.UI.WebControls.FormViewRow> </xref:System.Web.UI.WebControls.FormView.ItemCreated> 此事件通常用來顯示之前修改記錄的值。 |  |<xref:System.Web.UI.WebControls.FormView.ItemDeleted>|發生於刪除 按鈕 (具有按鈕其`CommandName`屬性設定為&quot;Delete&quot;) 按一下時，但之後 FormView 控制從資料來源中刪除記錄。</xref:System.Web.UI.WebControls.FormView.ItemDeleted> 此事件通常用來檢查刪除作業的結果。 |  |<xref:System.Web.UI.WebControls.FormView.ItemDeleting>|按一下 [刪除] 按鈕時，控制項在 FormView 之前從資料來源刪除記錄時就會發生。</xref:System.Web.UI.WebControls.FormView.ItemDeleting> 此事件通常用來取消刪除作業。 |  |<xref:System.Web.UI.WebControls.FormView.ItemInserted>|發生於插入按鈕 (具有按鈕其`CommandName`屬性設定為 「 插入 」) 按一下時，但之後 FormView 控制項插入資料錄。</xref:System.Web.UI.WebControls.FormView.ItemInserted> 此事件通常用來檢查 insert 作業的結果。 |  |<xref:System.Web.UI.WebControls.FormView.ItemInserting>|按一下 [插入] 按鈕時之前在 FormView, 控制項才會插入記錄時就會發生。</xref:System.Web.UI.WebControls.FormView.ItemInserting> 此事件通常用來取消插入作業。 |  |<xref:System.Web.UI.WebControls.FormView.ItemUpdated>|發生於更新 按鈕 (具有按鈕其`CommandName`屬性設定為 「 更新 」) 按一下時，但在 FormView 控制項更新資料列。</xref:System.Web.UI.WebControls.FormView.ItemUpdated> 此事件通常用來檢查更新作業的結果。 |  |<xref:System.Web.UI.WebControls.FormView.ItemUpdating>|按一下 [更新] 按鈕時，但在 FormView 之前控制更新的記錄時發生。</xref:System.Web.UI.WebControls.FormView.ItemUpdating> 此事件通常用來取消更新作業。 |  |<xref:System.Web.UI.WebControls.FormView.ModeChanged>|在 FormView 控制項變更模式之後，就會發生 （若要編輯、 插入或唯讀模式）。</xref:System.Web.UI.WebControls.FormView.ModeChanged> 此事件通常用來在 FormView 控制項變更模式時執行工作。 |  |<xref:System.Web.UI.WebControls.FormView.ModeChanging>|在 FormView 控制項變更模式之前，就會發生 （若要編輯、 插入或唯讀模式）。</xref:System.Web.UI.WebControls.FormView.ModeChanging> 此事件通常用來取消模式變更。 |  |<xref:System.Web.UI.WebControls.FormView.PageIndexChanged>|按一下其中一個頁面巡覽區按鈕時，但在 FormView 控制處理的分頁作業之後，就會發生。</xref:System.Web.UI.WebControls.FormView.PageIndexChanged> 此事件通常使用於您要執行的工作之後使用者巡覽至不同的記錄控制項中,。 |  |<xref:System.Web.UI.WebControls.FormView.PageIndexChanging>|發生於按下一個頁面巡覽區按鈕時，但在 FormView 之前控制項負責的分頁作業。</xref:System.Web.UI.WebControls.FormView.PageIndexChanging> 此事件通常用於取消的分頁作業。 |     <a name=&quot;accessibility&quot;> </a> # # 有關如何設定這個控制項，使其產生符合網頁可及性標準標記的協助工具的資訊，請參閱[Visual Studio 和 ASP.NET 中的協助工具](~/add/includes/ajax-current-ext-md.md)和[ASP.NET 控制項和協助工具](~/add/includes/ajax-current-ext-md.md)。      <a name=&quot;applying_styles&quot;></a># # 套用 CSS 樣式 FormView 控制項可讓您在標記中指定的 CSS 樣式規則。 如果您使用範本來自訂 FormView 控制項的外觀時，您可以指定範本中的標記中的 CSS 樣式。 在此情況下，額外外部資料表不是必要的。 您可以防止資料表呈現的設定<xref:System.Web.UI.WebControls.FormView.RenderOuterTable%2A>屬性`false`。</xref:System.Web.UI.WebControls.FormView.RenderOuterTable%2A>      <a name=&quot;declarative_syntax&quot;></a># # 宣告式語法```   <asp:FormView       AccessKey=&quot;string&quot;       AllowPaging=&quot;True|False&quot;       BackColor=&quot;color name|#dddddd&quot;       BackImageUrl=&quot;uri&quot;       BorderColor=&quot;color name|#dddddd&quot;       BorderStyle=&quot;NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|           Inset|Outset&quot;       BorderWidth=&quot;size&quot;       Caption=&quot;string&quot;       CaptionAlign=&quot;NotSet|Top|Bottom|Left|Right&quot;       CellPadding=&quot;integer&quot;       CellSpacing=&quot;integer&quot;       CssClass=&quot;string&quot;       DataKeyNames=&quot;string&quot;       DataMember=&quot;string&quot;       DataSource=&quot;string&quot;       DataSourceID=&quot;string&quot;       DefaultMode=&quot;ReadOnly|Edit|Insert&quot;       EmptyDataText=&quot;string&quot;       Enabled=&quot;True|False&quot;       EnableTheming=&quot;True|False&quot;       EnableViewState=&quot;True|False&quot;       Font-Bold=&quot;True|False&quot;       Font-Italic=&quot;True|False&quot;       Font-Names=&quot;string&quot;       Font-Overline=&quot;True|False&quot;       Font-Size=&quot;string|Smaller|Larger|XX-Small|X-Small|Small|Medium|           Large|X-Large|XX-Large&quot;       Font-Strikeout=&quot;True|False&quot;       Font-Underline=&quot;True|False&quot;       FooterText=&quot;string&quot;       ForeColor=&quot;color name|#dddddd&quot;       GridLines=&quot;None|Horizontal|Vertical|Both&quot;       HeaderText=&quot;string&quot;       Height=&quot;size&quot;       HorizontalAlign=&quot;NotSet|Left|Center|Right|Justify&quot;       ID=&quot;string&quot;       OnDataBinding=&quot;DataBinding event handler&quot;       OnDataBound=&quot;DataBound event handler&quot;       OnDisposed=&quot;Disposed event handler&quot;       OnInit=&quot;Init event handler&quot;       OnItemCommand=&quot;ItemCommand event handler&quot;       OnItemCreated=&quot;ItemCreated event handler&quot;       OnItemDeleted=&quot;ItemDeleted event handler&quot;       OnItemDeleting=&quot;ItemDeleting event handler&quot;       OnItemInserted=&quot;ItemInserted event handler&quot;       OnItemInserting=&quot;ItemInserting event handler&quot;       OnItemUpdated=&quot;ItemUpdated event handler&quot;       OnItemUpdating=&quot;ItemUpdating event handler&quot;       OnLoad=&quot;Load event handler&quot;       OnModeChanged=&quot;ModeChanged event handler&quot;       OnModeChanging=&quot;ModeChanging event handler&quot;       OnPageIndexChanged=&quot;PageIndexChanged event handler&quot;       OnPageIndexChanging=&quot;PageIndexChanging event handler&quot;       OnPreRender=&quot;PreRender event handler&quot;       OnUnload=&quot;Unload event handler&quot;       PageIndex=&quot;integer&quot;       PagerSettings-FirstPageImageUrl=&quot;uri&quot;       PagerSettings-FirstPageText=&quot;string&quot;       PagerSettings-LastPageImageUrl=&quot;uri&quot;       PagerSettings-LastPageText=&quot;string&quot;       PagerSettings-Mode=&quot;NextPrevious|Numeric|NextPreviousFirstLast|           NumericFirstLast&quot;       PagerSettings-NextPageImageUrl=&quot;uri&quot;       PagerSettings-NextPageText=&quot;string&quot;       PagerSettings-PageButtonCount=&quot;integer&quot;       PagerSettings-Position=&quot;Bottom|Top|TopAndBottom&quot;       PagerSettings-PreviousPageImageUrl=&quot;uri&quot;       PagerSettings-PreviousPageText=&quot;string&quot;       PagerSettings-Visible=&quot;True|False&quot;       RenderTable=&quot;True|False&quot;       runat=&quot;server&quot;       SkinID=&quot;string&quot;       Style=&quot;string&quot;       TabIndex=&quot;integer&quot;       ToolTip=&quot;string&quot;       Visible=&quot;True|False&quot;       Width=&quot;size&quot;   >           <EditItemTemplate>               <!-- child controls -->           </EditItemTemplate>           <EditRowStyle />           <EmptyDataRowStyle />           <EmptyDataTemplate>               <!-- child controls -->           </EmptyDataTemplate>           <FooterStyle />           <FooterTemplate>               <!-- child controls -->           </FooterTemplate>           <HeaderStyle />           <HeaderTemplate>               <!-- child controls -->           </HeaderTemplate>           <InsertItemTemplate>               <!-- child controls -->           </InsertItemTemplate>           <InsertRowStyle />           <ItemTemplate>               <!-- child controls -->           </ItemTemplate>           <PagerSettings               FirstPageImageUrl=&quot;uri&quot;               FirstPageText=&quot;string&quot;               LastPageImageUrl=&quot;uri&quot;               LastPageText=&quot;string&quot;               Mode=&quot;NextPrevious|Numeric|NextPreviousFirstLast|                   NumericFirstLast&quot;               NextPageImageUrl=&quot;uri&quot;               NextPageText=&quot;string&quot;               OnPropertyChanged=&quot;PropertyChanged event handler&quot;               PageButtonCount=&quot;integer&quot;               Position=&quot;Bottom|Top|TopAndBottom&quot;               PreviousPageImageUrl=&quot;uri&quot;               PreviousPageText=&quot;string&quot;               Visible=&quot;True|False&quot;           />           <PagerStyle />           <PagerTemplate>               <!-- child controls -->           </PagerTemplate>           <RowStyle />   </asp:FormView>   ```"
  example:
  - "The following example demonstrates how to use a FormView control to display the values from a <xref:System.Web.UI.WebControls.SqlDataSource> control.  \n  \n [!code-vb[FormViewSimple#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_276_1.aspx)]\n [!code-cs[FormViewSimple#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_276_1.aspx)]  \n  \n The following example demonstrates how to use a FormView control to edit existing records.  \n  \n> [!IMPORTANT]\n>  The control in this example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[FormView#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_276_2.aspx)]\n [!code-cs[FormView#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_276_2.aspx)]  \n  \n The following example demonstrates how to use a FormView control to insert new records.  \n  \n> [!IMPORTANT]\n>  The control in this example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](../Topic/Script%20Exploits%20Overview.md).  \n  \n [!code-vb[FormViewInsertItemTemplate#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_276_3.aspx)]\n [!code-cs[FormViewInsertItemTemplate#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_276_3.aspx)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("PageIndexChanging")]

      [System.ComponentModel.Designer("System.Web.UI.Design.WebControls.FormViewDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.Web.UI.ControlValueProperty("SelectedValue")]

      [System.Web.UI.DataKeyProperty("DataKey")]

      [System.Web.UI.SupportsEventValidation]

      public class FormView : System.Web.UI.WebControls.CompositeDataBoundControl, System.Web.UI.IDataItemContainer, System.Web.UI.IPostBackEventHandler, System.Web.UI.WebControls.IDataBoundItemControl, System.Web.UI.WebControls.IPostBackContainer
  inheritance:
  - System.Object
  - System.Web.UI.Control
  - System.Web.UI.WebControls.WebControl
  - System.Web.UI.WebControls.BaseDataBoundControl
  - System.Web.UI.WebControls.DataBoundControl
  - System.Web.UI.WebControls.CompositeDataBoundControl
  implements:
  - System.Web.UI.IDataItemContainer
  - System.Web.UI.IPostBackEventHandler
  - System.Web.UI.WebControls.IDataBoundItemControl
  - System.Web.UI.WebControls.IPostBackContainer
  inheritedMembers:
  - System.Web.UI.Control.Adapter
  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  - System.Web.UI.Control.AddParsedSubObject(System.Object)
  - System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)
  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.BindingContainer
  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  - System.Web.UI.Control.ChildControlsCreated
  - System.Web.UI.Control.ClearCachedClientID
  - System.Web.UI.Control.ClearChildControlState
  - System.Web.UI.Control.ClearChildState
  - System.Web.UI.Control.ClearChildViewState
  - System.Web.UI.Control.ClearEffectiveClientIDMode
  - System.Web.UI.Control.ClientID
  - System.Web.UI.Control.ClientIDMode
  - System.Web.UI.Control.ClientIDSeparator
  - System.Web.UI.Control.Context
  - System.Web.UI.Control.CreateControlCollection
  - System.Web.UI.Control.DataBind(System.Boolean)
  - System.Web.UI.Control.DataBindChildren
  - System.Web.UI.Control.DataBinding
  - System.Web.UI.Control.DataItemContainer
  - System.Web.UI.Control.DataKeysContainer
  - System.Web.UI.Control.DesignMode
  - System.Web.UI.Control.Dispose
  - System.Web.UI.Control.Disposed
  - System.Web.UI.Control.EnableViewState
  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.EnsureChildControls
  - System.Web.UI.Control.EnsureID
  - System.Web.UI.Control.Events
  - System.Web.UI.Control.FindControl(System.String)
  - System.Web.UI.Control.FindControl(System.String,System.Int32)
  - System.Web.UI.Control.Focus
  - System.Web.UI.Control.GetDesignModeState
  - System.Web.UI.Control.GetRouteUrl(System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  - System.Web.UI.Control.HasChildViewState
  - System.Web.UI.Control.HasControls
  - System.Web.UI.Control.HasEvents
  - System.Web.UI.Control.ID
  - System.Web.UI.Control.IdSeparator
  - System.Web.UI.Control.Init
  - System.Web.UI.Control.IsChildControlStateCleared
  - System.Web.UI.Control.IsLiteralContent
  - System.Web.UI.Control.IsTrackingViewState
  - System.Web.UI.Control.IsViewStateEnabled
  - System.Web.UI.Control.Load
  - System.Web.UI.Control.LoadViewStateByID
  - System.Web.UI.Control.MapPathSecure(System.String)
  - System.Web.UI.Control.NamingContainer
  - System.Web.UI.Control.OnDataBinding(System.EventArgs)
  - System.Web.UI.Control.OnUnload(System.EventArgs)
  - System.Web.UI.Control.OpenFile(System.String)
  - System.Web.UI.Control.Page
  - System.Web.UI.Control.Parent
  - System.Web.UI.Control.PreRender
  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)
  - System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  - System.Web.UI.Control.RenderingCompatibility
  - System.Web.UI.Control.ResolveAdapter
  - System.Web.UI.Control.ResolveClientUrl(System.String)
  - System.Web.UI.Control.ResolveUrl(System.String)
  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  - System.Web.UI.Control.Site
  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  - System.Web.UI.Control.TemplateControl
  - System.Web.UI.Control.TemplateSourceDirectory
  - System.Web.UI.Control.UniqueID
  - System.Web.UI.Control.Unload
  - System.Web.UI.Control.ValidateRequestMode
  - System.Web.UI.Control.ViewState
  - System.Web.UI.Control.ViewStateIgnoresCase
  - System.Web.UI.Control.ViewStateMode
  - System.Web.UI.Control.Visible
  - System.Web.UI.WebControls.BaseDataBoundControl.ConfirmInitState
  - System.Web.UI.WebControls.BaseDataBoundControl.DataBound
  - System.Web.UI.WebControls.BaseDataBoundControl.DataSource
  - System.Web.UI.WebControls.BaseDataBoundControl.Initialized
  - System.Web.UI.WebControls.BaseDataBoundControl.IsBoundUsingDataSourceID
  - System.Web.UI.WebControls.BaseDataBoundControl.IsDataBindingAutomatic
  - System.Web.UI.WebControls.BaseDataBoundControl.OnDataBound(System.EventArgs)
  - System.Web.UI.WebControls.BaseDataBoundControl.OnPreRender(System.EventArgs)
  - System.Web.UI.WebControls.BaseDataBoundControl.RequiresDataBinding
  - System.Web.UI.WebControls.BaseDataBoundControl.SupportsDisabledAttribute
  - System.Web.UI.WebControls.CompositeDataBoundControl.Controls
  - System.Web.UI.WebControls.CompositeDataBoundControl.CreateChildControls
  - System.Web.UI.WebControls.CompositeDataBoundControl.IsUsingModelBinders
  - System.Web.UI.WebControls.DataBoundControl.CallingDataMethods
  - System.Web.UI.WebControls.DataBoundControl.CreatingModelDataSource
  - System.Web.UI.WebControls.DataBoundControl.DataMember
  - System.Web.UI.WebControls.DataBoundControl.DataSourceID
  - System.Web.UI.WebControls.DataBoundControl.DataSourceObject
  - System.Web.UI.WebControls.DataBoundControl.GetData
  - System.Web.UI.WebControls.DataBoundControl.GetDataSource
  - System.Web.UI.WebControls.DataBoundControl.ItemType
  - System.Web.UI.WebControls.DataBoundControl.MarkAsDataBound
  - System.Web.UI.WebControls.DataBoundControl.OnCreatingModelDataSource(System.Web.UI.WebControls.CreatingModelDataSourceEventArgs)
  - System.Web.UI.WebControls.DataBoundControl.OnDataPropertyChanged
  - System.Web.UI.WebControls.DataBoundControl.OnDataSourceViewChanged(System.Object,System.EventArgs)
  - System.Web.UI.WebControls.DataBoundControl.OnLoad(System.EventArgs)
  - System.Web.UI.WebControls.DataBoundControl.OnPagePreLoad(System.Object,System.EventArgs)
  - System.Web.UI.WebControls.DataBoundControl.PerformSelect
  - System.Web.UI.WebControls.DataBoundControl.SelectArguments
  - System.Web.UI.WebControls.DataBoundControl.SelectMethod
  - System.Web.UI.WebControls.DataBoundControl.ValidateDataSource(System.Object)
  - System.Web.UI.WebControls.WebControl.AccessKey
  - System.Web.UI.WebControls.WebControl.AddAttributesToRender(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.ApplyStyle(System.Web.UI.WebControls.Style)
  - System.Web.UI.WebControls.WebControl.Attributes
  - System.Web.UI.WebControls.WebControl.BackColor
  - System.Web.UI.WebControls.WebControl.BorderColor
  - System.Web.UI.WebControls.WebControl.BorderStyle
  - System.Web.UI.WebControls.WebControl.BorderWidth
  - System.Web.UI.WebControls.WebControl.ControlStyle
  - System.Web.UI.WebControls.WebControl.ControlStyleCreated
  - System.Web.UI.WebControls.WebControl.CopyBaseAttributes(System.Web.UI.WebControls.WebControl)
  - System.Web.UI.WebControls.WebControl.CssClass
  - System.Web.UI.WebControls.WebControl.DisabledCssClass
  - System.Web.UI.WebControls.WebControl.Enabled
  - System.Web.UI.WebControls.WebControl.EnableTheming
  - System.Web.UI.WebControls.WebControl.Font
  - System.Web.UI.WebControls.WebControl.ForeColor
  - System.Web.UI.WebControls.WebControl.HasAttributes
  - System.Web.UI.WebControls.WebControl.Height
  - System.Web.UI.WebControls.WebControl.IsEnabled
  - System.Web.UI.WebControls.WebControl.MergeStyle(System.Web.UI.WebControls.Style)
  - System.Web.UI.WebControls.WebControl.RenderBeginTag(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.RenderContents(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.RenderEndTag(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.SkinID
  - System.Web.UI.WebControls.WebControl.Style
  - System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)
  - System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)
  - System.Web.UI.WebControls.WebControl.TabIndex
  - System.Web.UI.WebControls.WebControl.TagName
  - System.Web.UI.WebControls.WebControl.ToolTip
  - System.Web.UI.WebControls.WebControl.Width
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: FormView()
  nameWithType: FormView.FormView()
  fullName: System.Web.UI.WebControls.FormView.FormView()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "初始化的新執行個體<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>類別。"
  remarks: "使用這個建構函式來初始化<xref:System.Web.UI.WebControls.FormView>類別</xref:System.Web.UI.WebControls.FormView>的新執行個體 若要動態地將<xref:System.Web.UI.WebControls.FormView>控制權傳輸至頁面，請建立新<xref:System.Web.UI.WebControls.FormView>物件、 設定其屬性，並再將它加入<xref:System.Web.UI.Control.Controls%2A?displayProperty=fullName>集合的容器控制項，例如<xref:System.Web.UI.WebControls.PlaceHolder>.</xref:System.Web.UI.WebControls.PlaceHolder> </xref:System.Web.UI.Control.Controls%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView>"
  example:
  - "The following example demonstrates how to dynamically add a <xref:System.Web.UI.WebControls.FormView> control to a page.  \n  \n [!code-vb[FormViewCtor#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_130_1.aspx)]\n [!code-cs[FormViewCtor#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_130_1.aspx)]"
  syntax:
    content: public FormView ();
    parameters: []
  overload: System.Web.UI.WebControls.FormView.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.AllowPaging
  id: AllowPaging
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: AllowPaging
  nameWithType: FormView.AllowPaging
  fullName: System.Web.UI.WebControls.FormView.AllowPaging
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定值，指出是否已啟用分頁功能。"
  remarks: "<xref:System.Web.UI.WebControls.FormView>控制項具有內建的分頁功能，可讓使用者瀏覽至不同資料來源中的記錄。</xref:System.Web.UI.WebControls.FormView> 分頁功能可以搭配任何支援的資料來源物件<xref:System.Collections.ICollection?displayProperty=fullName>介面或支援的資料來源分頁功能。</xref:System.Collections.ICollection?displayProperty=fullName>       若要啟用分頁功能，將 AllowPaging 屬性設定為`true`。 您可以使用，以判斷基礎資料來源中的項目總數<xref:System.Web.UI.WebControls.FormView.PageCount%2A>屬性。</xref:System.Web.UI.WebControls.FormView.PageCount%2A> 若要判斷目前所顯示的項目索引，請使用<xref:System.Web.UI.WebControls.FormView.PageIndex%2A>屬性。</xref:System.Web.UI.WebControls.FormView.PageIndex%2A>       啟用分頁時，額外的資料列呼叫頁面巡覽列會自動顯示在<xref:System.Web.UI.WebControls.FormView>控制項。</xref:System.Web.UI.WebControls.FormView> 頁面巡覽區列包含頁面導覽控制項，而且可以顯示在頂端、 底端，或最上層及控制項的底部。 頁面巡覽區列有四個內建的頁面巡覽，顯示模式。 下表描述四種模式。      |模式 |描述 |  |----------|-----------------|  |`PagerButton.NextPrevious`|一組包含上一個和下一步 按鈕重新編頁控制項。 |  |`PagerButton.NextPreviousFirstLast`|一組分頁控制項，包含先前，接下來，第一個和最後一個按鈕。 |  |`PagerButton.Numeric`|一組所組成的重新編頁控制項直接編號存取頁面的連結按鈕。 這是預設模式。 |  |`PagerButton.NumericFirstLast`|一組編號，第一個和最後一個連結按鈕所組成的重新編頁控制項。 |     > [!NOTE] ><xref:System.Web.UI.WebControls.FormView>控制項自動隱藏頁面巡覽列，當資料來源包含兩個以上的記錄。</xref:System.Web.UI.WebControls.FormView>       您可以使用來控制的設定 （例如頁面巡覽區顯示模式，在時間和頁面巡覽區控制項的文字標籤顯示的頁面連結數目） 的頁面巡覽列<xref:System.Web.UI.WebControls.FormView.PagerSettings%2A>屬性。</xref:System.Web.UI.WebControls.FormView.PagerSettings%2A> 若要控制項目的出現的頁面巡覽列 （包括其背景色彩和字型色彩），使用<xref:System.Web.UI.WebControls.FormView.PagerStyle%2A>屬性。</xref:System.Web.UI.WebControls.FormView.PagerStyle%2A> <xref:System.Web.UI.WebControls.FormView>控制項也可讓您定義的頁面巡覽列的自訂範本。</xref:System.Web.UI.WebControls.FormView> 如需有關如何建立自訂的頁面巡覽區列範本的詳細資訊，請參閱<xref:System.Web.UI.WebControls.FormView.PagerTemplate%2A>.</xref:System.Web.UI.WebControls.FormView.PagerTemplate%2A>       <xref:System.Web.UI.WebControls.FormView>控制項提供數個事件，您可以使用分頁發生時執行自訂動作。</xref:System.Web.UI.WebControls.FormView> 下表列出可用的事件。      |事件 |描述 |  |-----------|-----------------|  |<xref:System.Web.UI.WebControls.FormView.PageIndexChanged>|發生於按一下其中一個頁面巡覽區按鈕的但之後<xref:System.Web.UI.WebControls.FormView>控制項負責的分頁作業。</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView.PageIndexChanged> 此事件通常使用於您要執行的工作之後使用者巡覽至不同的記錄控制項中,。 |  |<xref:System.Web.UI.WebControls.FormView.PageIndexChanging>|發生於其中一個頁面巡覽區按鈕按一下時前,<xref:System.Web.UI.WebControls.FormView>控制項負責的分頁作業。</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView.PageIndexChanging> 此事件通常用於取消的分頁作業。 |     > [!NOTE] > 變更時，不會引發這些事件<xref:System.Web.UI.WebControls.FormView.PageIndex%2A>屬性以程式設計的方式。</xref:System.Web.UI.WebControls.FormView.PageIndex%2A>"
  example:
  - "The following example demonstrates how to use the AllowPaging property to enable the paging feature in a <xref:System.Web.UI.WebControls.FormView> control.  \n  \n [!code-cs[FormViewAllowPaging#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_367_1.aspx)]\n [!code-vb[FormViewAllowPaging#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_367_1.aspx)]"
  syntax:
    content: public virtual bool AllowPaging { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要啟用分頁功能。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.FormView.AllowPaging*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.BackImageUrl
  id: BackImageUrl
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: BackImageUrl
  nameWithType: FormView.BackImageUrl
  fullName: System.Web.UI.WebControls.FormView.BackImageUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定要顯示的背景影像的 URL <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref>控制項。"
  remarks: "若要指定要顯示的背景影像的 URL 使用 BackImageUrl 屬性<xref:System.Web.UI.WebControls.FormView>控制項。</xref:System.Web.UI.WebControls.FormView>      > [!NOTE] > 小於指定的映像是否<xref:System.Web.UI.WebControls.FormView>控制項，影像會並排顯示以在背景填滿。</xref:System.Web.UI.WebControls.FormView> 如果影像大於此控制項，則會裁剪影像。"
  example:
  - "The following example demonstrates how to use the BackImageUrl property to display a custom image in the background of a <xref:System.Web.UI.WebControls.FormView> control.  \n  \n [!code-cs[FormViewBackImageUrl#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_554_1.aspx)]\n [!code-vb[FormViewBackImageUrl#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_554_1.aspx)]"
  syntax:
    content: public virtual string BackImageUrl { get; set; }
    return:
      type: System.String
      description: "若要顯示的背景影像的 URL <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref>控制項。 預設為空字串 (&quot;&quot;)，表示這個屬性未設定。"
  overload: System.Web.UI.WebControls.FormView.BackImageUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.BottomPagerRow
  id: BottomPagerRow
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: BottomPagerRow
  nameWithType: FormView.BottomPagerRow
  fullName: System.Web.UI.WebControls.FormView.BottomPagerRow
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得<xref href=&quot;System.Web.UI.WebControls.FormViewRow&quot;></xref>物件，代表在底部顯示的頁面巡覽區列<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控制項。"
  remarks: "啟用分頁時 (當<xref:System.Web.UI.WebControls.FormView.AllowPaging%2A>屬性設定為`true`)，額外的資料列呼叫頁面巡覽列會自動顯示在<xref:System.Web.UI.WebControls.FormView>控制項。</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> 頁面巡覽區列包含控制項，讓使用者巡覽至其他記錄，並可顯示頂端、 底部，或同時上方和底部的控制項。 使用 BottomPagerRow 屬性，若要以程式設計方式存取<xref:System.Web.UI.WebControls.FormViewRow>物件，表示內的底部頁面巡覽區列<xref:System.Web.UI.WebControls.FormView>控制項。</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormViewRow>      > [!NOTE] > BottomPagerRow 屬性之後，才可被<xref:System.Web.UI.WebControls.FormView>控制項建立內的底部頁面巡覽區列<xref:System.Web.UI.WebControls.FormView.ItemCreated>事件。</xref:System.Web.UI.WebControls.FormView.ItemCreated> </xref:System.Web.UI.WebControls.FormView>       這個屬性通常用於您需要以程式設計方式管理下方的頁面巡覽區列，例如當加入自訂內容。 後必須執行 BottomPagerRow 屬性所做的任何修改<xref:System.Web.UI.WebControls.FormViewRow>底端頁面巡覽區列表示物件已建立; 否則<xref:System.Web.UI.WebControls.FormView>控制會覆寫任何變更。</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormViewRow>"
  example:
  - "The following example demonstrates how to use the BottomPagerRow property to access the pager row displayed at the bottom of a <xref:System.Web.UI.WebControls.FormView> control. The pager row is then updated with additional content.  \n  \n [!code-cs[FormViewPagerTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_102_1.aspx)]\n [!code-vb[FormViewPagerTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_102_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.FormViewRow BottomPagerRow { get; }
    return:
      type: System.Web.UI.WebControls.FormViewRow
      description: "A <xref href=&quot;System.Web.UI.WebControls.FormViewRow&quot;> </xref>物件，代表的底端頁面巡覽區列<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控制項。"
  overload: System.Web.UI.WebControls.FormView.BottomPagerRow*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.Caption
  id: Caption
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: Caption
  nameWithType: FormView.Caption
  fullName: System.Web.UI.WebControls.FormView.Caption
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定要呈現的 HTML 標題項目中的文字<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控制項。 這個屬性被提供用來將控制項設為使用者的輔助技術裝置更容易存取。"
  remarks: "使用 [標題] 屬性來指定要呈現的 HTML 標題項目中的文字<xref:System.Web.UI.WebControls.FormView>控制項。</xref:System.Web.UI.WebControls.FormView> 您指定的文字會提供具有可用來將控制項設為更容易存取的資料表描述的輔助技術裝置。       其他可存取性支援<xref:System.Web.UI.WebControls.FormView>控制項由提供<xref:System.Web.UI.WebControls.FormView.CaptionAlign%2A>屬性。</xref:System.Web.UI.WebControls.FormView.CaptionAlign%2A> </xref:System.Web.UI.WebControls.FormView> 使用<xref:System.Web.UI.WebControls.FormView.CaptionAlign%2A>屬性來指定 HTML 標題項目中的對齊方式<xref:System.Web.UI.WebControls.FormView>控制項。</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView.CaptionAlign%2A>       這個屬性的值設定時，可以自動儲存到資源檔使用設計工具。 如需詳細資訊，請參閱<xref:System.ComponentModel.LocalizableAttribute>和[全球化和當地語系化](~/add/includes/ajax-current-ext-md.md)。</xref:System.ComponentModel.LocalizableAttribute>"
  example:
  - "The following example demonstrates how to use the Caption property to specify the text for the HTML caption element rendered in a <xref:System.Web.UI.WebControls.FormView> control.  \n  \n [!code-vb[FormViewCaption#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1078_1.aspx)]\n [!code-cs[FormViewCaption#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1078_1.aspx)]"
  syntax:
    content: public virtual string Caption { get; set; }
    return:
      type: System.String
      description: "表示要呈現的 HTML 標題項目中的文字字串<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控制項。 預設值為空字串 (&quot;&quot;)。"
  overload: System.Web.UI.WebControls.FormView.Caption*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.CaptionAlign
  id: CaptionAlign
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: CaptionAlign
  nameWithType: FormView.CaptionAlign
  fullName: System.Web.UI.WebControls.FormView.CaptionAlign
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定水平或垂直的位置中的 HTML 標題項目<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控制項。 這個屬性被提供用來將控制項設為使用者的輔助技術裝置更容易存取。"
  remarks: "使用 CaptionAlign 屬性來指定 HTML 標題項目中的水平或垂直位置<xref:System.Web.UI.WebControls.FormView>控制項。</xref:System.Web.UI.WebControls.FormView> 這個屬性被提供用來將控制項設為使用者的輔助技術裝置更容易存取。       這個屬性會設定使用其中一種<xref:System.Web.UI.WebControls.TableCaptionAlign>列舉值。</xref:System.Web.UI.WebControls.TableCaptionAlign> 下表列出可能的值。      |值 |描述 |  |-----------|-----------------|  |`TableCaptionAlign.Bottom`|標題項目對齊資料表底部。 |  |`TableCaptionAlign.Left`|標題項目與資料表的左邊對齊。 |  |`TableCaptionAlign.NotSet`|未設定標題項目對齊。 |  |`TableCaptionAlign.Right`|標題項目對齊右邊的資料表。 |  |`TableCaptionAlign.Top`|標題項目會在資料表頂端對齊。 |     > [!NOTE] > 當這個屬性設定為`TableCaptionAlign.NotSet`，會使用瀏覽器的預設值。       其他可存取性支援<xref:System.Web.UI.WebControls.FormView>控制項由提供<xref:System.Web.UI.WebControls.FormView.Caption%2A>屬性。</xref:System.Web.UI.WebControls.FormView.Caption%2A> </xref:System.Web.UI.WebControls.FormView> 使用<xref:System.Web.UI.WebControls.FormView.Caption%2A>屬性來指定要呈現的 HTML 標題項目中的文字<xref:System.Web.UI.WebControls.FormView>控制項。</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView.Caption%2A>"
  example:
  - "The following example demonstrates how to use the CaptionAlign property to specify that the HTML caption element in a <xref:System.Web.UI.WebControls.FormView> control should be rendered on the left side of the control.  \n  \n [!code-vb[FormViewCaption#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_449_1.aspx)]\n [!code-cs[FormViewCaption#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_449_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.TableCaptionAlign CaptionAlign { get; set; }
    return:
      type: System.Web.UI.WebControls.TableCaptionAlign
      description: "其中一個<xref href=&quot;System.Web.UI.WebControls.TableCaptionAlign&quot;></xref>值。 預設值是<xref uid=&quot;langword_csharp_TableCaptionAlign.NotSet&quot; name=&quot;TableCaptionAlign.NotSet&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.FormView.CaptionAlign*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "指定的值不是其中一個<xref href=&quot;System.Web.UI.WebControls.TableCaptionAlign&quot;></xref>列舉值。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.CellPadding
  id: CellPadding
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: CellPadding
  nameWithType: FormView.CellPadding
  fullName: System.Web.UI.WebControls.FormView.CellPadding
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定儲存格的內容和儲存格的框線之間的空間數量。"
  remarks: "您可以使用 CellPadding 屬性來控制的儲存格的內容與儲存格的框線之間的間距。 指定的填補量會加入至儲存格的四個邊。       在相同的資料行中的所有資料格<xref:System.Web.UI.WebControls.FormView>控制項具有相同的寬度。</xref:System.Web.UI.WebControls.FormView> 填補數量會套用到最寬的資料格和資料行中的所有資料格會調整為該儲存格的寬度。 同樣地，相同的資料列中的所有資料格具有相同的高度。 填補數量會套用到資料列中最高的儲存格和資料列中的所有資料格會調整為該儲存格的高度。 個別儲存格大小不能指定。       若要調整儲存格之間的間距，請使用<xref:System.Web.UI.WebControls.FormView.CellSpacing%2A>屬性。</xref:System.Web.UI.WebControls.FormView.CellSpacing%2A>      > [!NOTE] > 時未設定這個屬性，使用瀏覽器的預設值。"
  example:
  - "The following example demonstrates how to use the CellPadding property to specify the amount of spacing between the contents of a cell and the cell's border.  \n  \n [!code-cs[FormViewCellPadding#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_693_1.aspx)]\n [!code-vb[FormViewCellPadding#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_693_1.aspx)]"
  syntax:
    content: public virtual int CellPadding { get; set; }
    return:
      type: System.Int32
      description: "以像素的儲存格的內容和儲存格的框線之間的空間數量。 預設值為-1，表示這個屬性未設定。"
  overload: System.Web.UI.WebControls.FormView.CellPadding*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.CellSpacing
  id: CellSpacing
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: CellSpacing
  nameWithType: FormView.CellSpacing
  fullName: System.Web.UI.WebControls.FormView.CellSpacing
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定儲存格之間的空間量。"
  remarks: "使用 CellSpacing 屬性來控制在相鄰的資料格之間的間距<xref:System.Web.UI.WebControls.FormView>控制項。</xref:System.Web.UI.WebControls.FormView> 垂直和水平，則會套用這個間距。 儲存格間距是一致的整個控制項。 不能指定個別資料格的資料列或資料行之間的間距。      > [!NOTE] > 如果您設定這個屬性的值大於 0，，然後再設定<xref:System.Web.UI.WebControls.FormView.GridLines%2A>屬性相鄰的資料格的框線之間顯示儲存格框線的值，顯示間隔。</xref:System.Web.UI.WebControls.FormView.GridLines%2A> 在此情況下，CellSpacing 屬性控制的差距大小。       若要調整儲存格的內容與儲存格的框線之間的間距，請使用<xref:System.Web.UI.WebControls.FormView.CellPadding%2A>屬性。</xref:System.Web.UI.WebControls.FormView.CellPadding%2A>"
  example:
  - "The following example demonstrates how to use the CellSpacing property to specify the amount of spacing between adjacent cells.  \n  \n [!code-cs[FormViewCellPadding#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_130_1.aspx)]\n [!code-vb[FormViewCellPadding#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_130_1.aspx)]"
  syntax:
    content: public virtual int CellSpacing { get; set; }
    return:
      type: System.Int32
      description: "以像素的儲存格之間的空間數量。 預設值為 0。"
  overload: System.Web.UI.WebControls.FormView.CellSpacing*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.ChangeMode(System.Web.UI.WebControls.FormViewMode)
  id: ChangeMode(System.Web.UI.WebControls.FormViewMode)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: ChangeMode(FormViewMode)
  nameWithType: FormView.ChangeMode(FormViewMode)
  fullName: System.Web.UI.WebControls.FormView.ChangeMode(FormViewMode)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "交換器<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>到指定的資料輸入模式的控制項。"
  remarks: "若要以程式設計方式切換使用 ChangeMode 方法<xref:System.Web.UI.WebControls.FormView>之間編輯、 插入和唯讀模式的控制項。</xref:System.Web.UI.WebControls.FormView> 這個方法也會更新<xref:System.Web.UI.WebControls.FormView.CurrentMode%2A>屬性以指定的模式。</xref:System.Web.UI.WebControls.FormView.CurrentMode%2A> 下表列出不同的模式值。      |模式 |描述 |  |----------|-----------------|  |`FormViewMode.Edit`|<xref:System.Web.UI.WebControls.FormView>控制項處於編輯模式，可讓使用者更新記錄的值。 |  |`FormViewMode.Insert`|<xref:System.Web.UI.WebControls.FormView>控制項處於插入模式下，可讓使用者將新記錄新增至資料來源。 |  |`FormView.ReadOnly`|<xref:System.Web.UI.WebControls.FormView>控制項處於唯讀模式，這是一般顯示模式。 |     > [!NOTE] ><xref:System.Web.UI.WebControls.FormView.ModeChanged>和<xref:System.Web.UI.WebControls.FormView.ModeChanging>呼叫此方法時，不會引發事件。</xref:System.Web.UI.WebControls.FormView.ModeChanging> </xref:System.Web.UI.WebControls.FormView.ModeChanged> </xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView>"
  example:
  - "The following example demonstrates how to use the ChangeMode method to return the <xref:System.Web.UI.WebControls.FormView> control to read-only mode whenever the user navigates to another record.  \n  \n [!code-cs[FormViewChangeMode#1](~/add/codesnippet/csharp/662370c4-5409-4672-aaf8-_1.aspx)]\n [!code-vb[FormViewChangeMode#1](~/add/codesnippet/visualbasic/662370c4-5409-4672-aaf8-_1.aspx)]"
  syntax:
    content: public void ChangeMode (System.Web.UI.WebControls.FormViewMode newMode);
    parameters:
    - id: newMode
      type: System.Web.UI.WebControls.FormViewMode
      description: "其中一個<xref href=&quot;System.Web.UI.WebControls.FormViewMode&quot;></xref>列舉值。"
  overload: System.Web.UI.WebControls.FormView.ChangeMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.CreateChildControls(System.Collections.IEnumerable,System.Boolean)
  id: CreateChildControls(System.Collections.IEnumerable,System.Boolean)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: CreateChildControls(IEnumerable,Boolean)
  nameWithType: FormView.CreateChildControls(IEnumerable,Boolean)
  fullName: System.Web.UI.WebControls.FormView.CreateChildControls(IEnumerable,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "建立用來呈現的控制項階層架構<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>與指定的資料來源的控制項。"
  remarks: "CreateChildControls 方法是 helper 方法，由呼叫<xref:System.Web.UI.WebControls.FormView>控制項建立的控制項階層架構<xref:System.Web.UI.WebControls.FormView>控制項。</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView> 當`dataBinding`參數是`true`，建立在控制項階層架構之前執行資料繫結。"
  syntax:
    content: protected override int CreateChildControls (System.Collections.IEnumerable dataSource, bool dataBinding);
    parameters:
    - id: dataSource
      type: System.Collections.IEnumerable
      description: "<xref:System.Collections.IEnumerable>，代表用來建立在控制項階層架構的資料來源。</xref:System.Collections.IEnumerable>"
    - id: dataBinding
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>表示在控制項階層架構會直接從資料來源，建立<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>表示控制項檢視狀態中建立階層。"
    return:
      type: System.Int32
      description: "從資料來源建立的項目數目。"
  overload: System.Web.UI.WebControls.FormView.CreateChildControls*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<xref href=&quot;System.Web.UI.DataSourceView&quot;> </xref>的<xref href=&quot;System.Web.UI.IDataSource&quot;></xref>的<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控制項繫結是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.CreateControlStyle
  id: CreateControlStyle
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: CreateControlStyle()
  nameWithType: FormView.CreateControlStyle()
  fullName: System.Web.UI.WebControls.FormView.CreateControlStyle()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "建立預設資料表樣式物件，以便<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控制項。"
  remarks: "CreateControlStyle 方法是 helper 方法，由呼叫<xref:System.Web.UI.WebControls.FormView>來建立其預設資料表樣式物件的控制。</xref:System.Web.UI.WebControls.FormView> 除了設定的預設樣式<xref:System.Web.UI.WebControls.TableStyle>物件，這個方法也會設定<xref:System.Web.UI.WebControls.FormView.CellPadding%2A>屬性設為 0。</xref:System.Web.UI.WebControls.FormView.CellPadding%2A> </xref:System.Web.UI.WebControls.TableStyle>"
  syntax:
    content: protected override System.Web.UI.WebControls.Style CreateControlStyle ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.Style
      description: "A <xref href=&quot;System.Web.UI.WebControls.Style&quot;> </xref> ，其中包含的預設資料表樣式<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控制項。"
  overload: System.Web.UI.WebControls.FormView.CreateControlStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.CreateDataSourceSelectArguments
  id: CreateDataSourceSelectArguments
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: CreateDataSourceSelectArguments()
  nameWithType: FormView.CreateDataSourceSelectArguments()
  fullName: System.Web.UI.WebControls.FormView.CreateDataSourceSelectArguments()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "建立<xref href=&quot;System.Web.UI.DataSourceSelectArguments&quot;></xref>物件，其中包含資料來源進行處理傳遞的引數。"
  remarks: "CreateDataSourceSelectArguments 方法是 helper 方法，由呼叫<xref:System.Web.UI.WebControls.FormView>控制項來建立<xref:System.Web.UI.DataSourceSelectArguments>物件，其中包含引數傳遞至資料來源。</xref:System.Web.UI.DataSourceSelectArguments> </xref:System.Web.UI.WebControls.FormView> 在此實作中，<xref:System.Web.UI.DataSourceSelectArguments>物件包含分頁作業的引數。</xref:System.Web.UI.DataSourceSelectArguments>"
  syntax:
    content: protected override System.Web.UI.DataSourceSelectArguments CreateDataSourceSelectArguments ();
    parameters: []
    return:
      type: System.Web.UI.DataSourceSelectArguments
      description: "A <xref href=&quot;System.Web.UI.DataSourceSelectArguments&quot;> </xref> ，其中包含傳遞至資料來源的引數。"
  overload: System.Web.UI.WebControls.FormView.CreateDataSourceSelectArguments*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.CreateRow(System.Int32,System.Web.UI.WebControls.DataControlRowType,System.Web.UI.WebControls.DataControlRowState)
  id: CreateRow(System.Int32,System.Web.UI.WebControls.DataControlRowType,System.Web.UI.WebControls.DataControlRowState)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: CreateRow(Int32,DataControlRowType,DataControlRowState)
  nameWithType: FormView.CreateRow(Int32,DataControlRowType,DataControlRowState)
  fullName: System.Web.UI.WebControls.FormView.CreateRow(Int32,DataControlRowType,DataControlRowState)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "建立<xref href=&quot;System.Web.UI.WebControls.FormViewRow&quot;></xref>物件使用指定的項目索引、 資料列類型和資料列狀態。"
  remarks: "CreateRow 方法是 helper 方法，由呼叫<xref:System.Web.UI.WebControls.FormView>控制項來建立<xref:System.Web.UI.WebControls.FormViewRow>物件用來表示控制項中的資料列。</xref:System.Web.UI.WebControls.FormViewRow> </xref:System.Web.UI.WebControls.FormView>"
  syntax:
    content: protected virtual System.Web.UI.WebControls.FormViewRow CreateRow (int itemIndex, System.Web.UI.WebControls.DataControlRowType rowType, System.Web.UI.WebControls.DataControlRowState rowState);
    parameters:
    - id: itemIndex
      type: System.Int32
      description: "若要顯示之資料項目的以零為起始的索引。"
    - id: rowType
      type: System.Web.UI.WebControls.DataControlRowType
      description: "其中一個<xref href=&quot;System.Web.UI.WebControls.DataControlRowType&quot;></xref>列舉值。"
    - id: rowState
      type: System.Web.UI.WebControls.DataControlRowState
      description: "位元組合<xref href=&quot;System.Web.UI.WebControls.DataControlRowState&quot;></xref>列舉值。"
    return:
      type: System.Web.UI.WebControls.FormViewRow
      description: "A <xref href=&quot;System.Web.UI.WebControls.FormViewRow&quot;> </xref>具有指定的項目之索引、 資料列類型和資料列狀態。"
  overload: System.Web.UI.WebControls.FormView.CreateRow*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.CreateTable
  id: CreateTable
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: CreateTable()
  nameWithType: FormView.CreateTable()
  fullName: System.Web.UI.WebControls.FormView.CreateTable()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "建立包含資料表的<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控制項。"
  remarks: "CreateTable 方法是 helper 方法，由呼叫<xref:System.Web.UI.WebControls.FormView>控制項來建立資料表做為控制項的容器。</xref:System.Web.UI.WebControls.FormView>"
  syntax:
    content: protected virtual System.Web.UI.WebControls.Table CreateTable ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.Table
      description: "A <xref href=&quot;System.Web.UI.WebControls.Table&quot;> </xref> ，代表包含資料表的<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控制項。"
  overload: System.Web.UI.WebControls.FormView.CreateTable*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.CurrentMode
  id: CurrentMode
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: CurrentMode
  nameWithType: FormView.CurrentMode
  fullName: System.Web.UI.WebControls.FormView.CurrentMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得目前的資料輸入模式<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控制項。"
  remarks: "使用 CurrentMode 屬性來判斷是否<xref:System.Web.UI.WebControls.FormView>控制項處於編輯、 插入或唯讀模式。</xref:System.Web.UI.WebControls.FormView> 下表列出不同的模式值。      |模式 |描述 |  |----------|-----------------|  |`FormViewMode.Edit`|<xref:System.Web.UI.WebControls.FormView>控制項處於編輯模式，可讓使用者更新記錄的值。 |  |`FormViewMode.Insert`|<xref:System.Web.UI.WebControls.FormView>控制項處於插入模式下，可讓使用者將新記錄新增至資料來源。 |  |`FormView.ReadOnly`|<xref:System.Web.UI.WebControls.FormView>控制項處於唯讀模式，這是一般顯示模式。 |      這個值通常自動設定<xref:System.Web.UI.WebControls.FormView>控制當新增、 更新、 插入、 刪除或取消命令按鈕。</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView> 當<xref:System.Web.UI.WebControls.FormView>控制項變更以回應動作的模式，則下表中的事件會引發。</xref:System.Web.UI.WebControls.FormView> 這可讓您建立自訂事件處理常式，事件發生時執行適當的常式。      |事件 |描述 |  |-----------|-----------------|  |<xref:System.Web.UI.WebControls.FormView.ModeChanged>|發生時<xref:System.Web.UI.WebControls.FormView>控制項變更模式，但模式變更之後。</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView.ModeChanged> 此事件通常用來執行工作，每次<xref:System.Web.UI.WebControls.FormView>控制項變更模式。 |  |<xref:System.Web.UI.WebControls.FormView.ModeChanging>|發生時<xref:System.Web.UI.WebControls.FormView>控制項變更模式，但模式變更之前。</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView.ModeChanging> </xref:System.Web.UI.WebControls.FormView> 此事件通常用來取消模式變更。 |      **注意**模式變更以程式設計方式使用時，不會引發這些事件<xref:System.Web.UI.WebControls.FormView.ChangeMode%2A>方法。</xref:System.Web.UI.WebControls.FormView.ChangeMode%2A>"
  example:
  - "The following example demonstrates how to use the CurrentMode property to determine whether the <xref:System.Web.UI.WebControls.FormView> control is in edit, insert, or read-only mode. If the user attempts to navigate to another record while the <xref:System.Web.UI.WebControls.FormView> control is in edit more, the paging operation is canceled.  \n  \n [!code-cs[FormViewCurrentMode#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_817_1.aspx)]\n [!code-vb[FormViewCurrentMode#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_817_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.FormViewMode CurrentMode { get; }
    return:
      type: System.Web.UI.WebControls.FormViewMode
      description: "其中一個<xref href=&quot;System.Web.UI.WebControls.FormViewMode&quot;></xref>值。"
  overload: System.Web.UI.WebControls.FormView.CurrentMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.DataBind
  id: DataBind
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: DataBind()
  nameWithType: FormView.DataBind()
  fullName: System.Web.UI.WebControls.FormView.DataBind()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "將繫結至資料來源<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控制項。"
  remarks: "將資料繫結至資料來源使用資料繫結方法<xref:System.Web.UI.WebControls.FormView>控制項。</xref:System.Web.UI.WebControls.FormView> 這個方法會解析所有資料繫結運算式在使用中的範本中的控制項。"
  syntax:
    content: public override sealed void DataBind ();
    parameters: []
  overload: System.Web.UI.WebControls.FormView.DataBind*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.DataItem
  id: DataItem
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: DataItem
  nameWithType: FormView.DataItem
  fullName: System.Web.UI.WebControls.FormView.DataItem
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得資料的項目繫結至<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控制項。"
  remarks: "存取資料項目的 DataItem 屬性繫結至使用<xref:System.Web.UI.WebControls.FormView>控制項。</xref:System.Web.UI.WebControls.FormView> 資料的項目通常用於直接存取目前記錄的欄位值。 型別<xref:System.Object>傳回此屬性會根據資料來源而有所不同。</xref:System.Object> 例如，當<xref:System.Web.UI.WebControls.SqlDataSource>控制項繫結至<xref:System.Web.UI.WebControls.FormView>控制項，<xref:System.Data.DataRowView>物件傳回。</xref:System.Data.DataRowView> </xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.SqlDataSource>      > [!NOTE] > 只在發生資料繫結之後，便使用這個屬性。 資料繫結之前，這個屬性會傳回`null`。 這個屬性時，也不適用<xref:System.Web.UI.WebControls.FormView>控制項處於插入模式，並傳回`null`。</xref:System.Web.UI.WebControls.FormView>"
  example:
  - "The following example demonstrates how to use the DataItem property to determine the value of a field in the data item.  \n  \n [!code-vb[FormViewCtor#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_191_1.aspx)]\n [!code-cs[FormViewCtor#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_191_1.aspx)]"
  syntax:
    content: public virtual object DataItem { get; }
    return:
      type: System.Object
      description: "<xref:System.Object>，代表資料的項目繫結至<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控制項。</xref:System.Object>"
  overload: System.Web.UI.WebControls.FormView.DataItem*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.DataItemCount
  id: DataItemCount
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: DataItemCount
  nameWithType: FormView.DataItemCount
  fullName: System.Web.UI.WebControls.FormView.DataItemCount
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "資料來源中取得資料的項目數目。"
  remarks: "使用 DataItemCount 屬性來判斷資料的資料來源中所包含的項目數目。 此屬性包含相同的值<xref:System.Web.UI.WebControls.FormView.PageCount%2A>屬性。</xref:System.Web.UI.WebControls.FormView.PageCount%2A>"
  syntax:
    content: public int DataItemCount { get; }
    return:
      type: System.Int32
      description: "資料來源中資料的項目數目。"
  overload: System.Web.UI.WebControls.FormView.DataItemCount*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.DataItemIndex
  id: DataItemIndex
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: DataItemIndex
  nameWithType: FormView.DataItemIndex
  fullName: System.Web.UI.WebControls.FormView.DataItemIndex
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得資料項目的索引繫結至<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控制從資料來源。"
  remarks: "使用 DataItemIndex 屬性以判斷資料項目的索引繫結至<xref:System.Web.UI.WebControls.FormView>控制從資料來源。</xref:System.Web.UI.WebControls.FormView> 此屬性包含相同的值<xref:System.Web.UI.WebControls.FormView.PageIndex%2A>屬性。</xref:System.Web.UI.WebControls.FormView.PageIndex%2A>      > [!NOTE] > 這個屬性不適用時<xref:System.Web.UI.WebControls.FormView>控制項處於插入模式。</xref:System.Web.UI.WebControls.FormView> 當控制項處於插入模式下時，DataItemIndex 屬性會傳回-1。"
  syntax:
    content: public virtual int DataItemIndex { get; }
    return:
      type: System.Int32
      description: "資料項目的索引繫結至<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>從資料來源的控制項。"
  overload: System.Web.UI.WebControls.FormView.DataItemIndex*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.DataKey
  id: DataKey
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: DataKey
  nameWithType: FormView.DataKey
  fullName: System.Web.UI.WebControls.FormView.DataKey
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得<xref href=&quot;System.Web.UI.WebControls.DataKey&quot;></xref>物件，代表顯示的資料錄的主索引鍵。"
  remarks: "當<xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A>設定屬性，則<xref:System.Web.UI.WebControls.FormView>控制項會自動建立<xref:System.Web.UI.WebControls.DataKey>物件，其中包含的欄位中所列的索引鍵/值組<xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A>目前記錄的屬性。</xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> </xref:System.Web.UI.WebControls.DataKey> </xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> 使用 DataKey 屬性來取得這<xref:System.Web.UI.WebControls.DataKey>物件。</xref:System.Web.UI.WebControls.DataKey> 這個屬性通常用來取得索引鍵和其對應的值中指定的欄位<xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A>屬性。</xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A>      > [!NOTE] >，請您也可以使用<xref:System.Web.UI.WebControls.FormView.SelectedValue%2A>屬性來判斷中所列的第一個索引鍵欄位值<xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A>屬性。</xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> </xref:System.Web.UI.WebControls.FormView.SelectedValue%2A>"
  example:
  - "The following example demonstrates how to use the DataKey property to determine the value of the key field.  \n  \n [!code-cs[FormViewDataKey#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1171_1.aspx)]\n [!code-vb[FormViewDataKey#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1171_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.DataKey DataKey { get; }
    return:
      type: System.Web.UI.WebControls.DataKey
      description: "A <xref href=&quot;System.Web.UI.WebControls.DataKey&quot;> </xref>物件，代表顯示的資料錄的主索引鍵。"
  overload: System.Web.UI.WebControls.FormView.DataKey*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.DataKeyNames
  id: DataKeyNames
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: DataKeyNames
  nameWithType: FormView.DataKeyNames
  fullName: System.Web.UI.WebControls.FormView.DataKeyNames
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定陣列，其中包含資料來源的索引鍵欄位的名稱。"
  remarks: "請使用 DataKeyNames 屬性指定以逗號分隔清單的欄位名稱代表資料來源的主索引鍵。 當設定的 DataKeyNames 屬性時，<xref:System.Web.UI.WebControls.FormView>控制項會自動建立<xref:System.Web.UI.WebControls.DataKey>目前記錄的 DataKeyNames 屬性中所列出的物件，其中包含的欄位或欄位的索引鍵/值組。</xref:System.Web.UI.WebControls.DataKey> </xref:System.Web.UI.WebControls.FormView> <xref:System.Web.UI.WebControls.DataKey>物件會儲存在<xref:System.Web.UI.WebControls.FormView.DataKey%2A>屬性。</xref:System.Web.UI.WebControls.FormView.DataKey%2A> </xref:System.Web.UI.WebControls.DataKey>      > [!NOTE] > 您必須設定的 DataKeyNames 屬性內建的更新、 刪除和插入功能<xref:System.Web.UI.WebControls.FormView>運作的控制項。</xref:System.Web.UI.WebControls.FormView>"
  example:
  - "The following example demonstrates how to use the DataKeyNames property to specify the key field for the data source bound to the <xref:System.Web.UI.WebControls.FormView> control.  \n  \n [!code-vb[FormViewEditItemTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_97_1.aspx)]\n [!code-cs[FormViewEditItemTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_97_1.aspx)]"
  syntax:
    content: public virtual string[] DataKeyNames { get; set; }
    return:
      type: System.String[]
      description: "陣列，其中包含資料來源的索引鍵欄位的名稱。"
  overload: System.Web.UI.WebControls.FormView.DataKeyNames*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.DefaultMode
  id: DefaultMode
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: DefaultMode
  nameWithType: FormView.DefaultMode
  fullName: System.Web.UI.WebControls.FormView.DefaultMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定輸入資料模式的<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控制項會傳回更新之後，插入或取消作業。"
  remarks: "使用 DefaultMode 屬性來指定是否<xref:System.Web.UI.WebControls.FormView>控制權回到編輯、 插入或唯讀模式更新之後，執行 [插入] 或取消作業。</xref:System.Web.UI.WebControls.FormView> 根據預設，<xref:System.Web.UI.WebControls.FormView>傳回以唯讀模式的控制項; 不過，您可以保留<xref:System.Web.UI.WebControls.FormView>中編輯控制項，或插入模式下，此屬性設定為適當的值。</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView> 下表列出不同的模式值。      |模式 |描述 |  |----------|-----------------|  |`FormViewMode.Edit`|<xref:System.Web.UI.WebControls.FormView>控制項處於編輯模式，可讓使用者更新記錄的值。 |  |`FormViewMode.Insert`|<xref:System.Web.UI.WebControls.FormView>控制項處於插入模式下，可讓使用者將新記錄新增至資料來源。 |  |`FormViewMode.ReadOnly`|<xref:System.Web.UI.WebControls.FormView>控制項處於唯讀模式，這是一般顯示模式。 |      這個屬性通常是使用<xref:System.Web.UI.WebControls.FormView>控制項對單一用途，例如只插入或編輯資料錄。</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView>"
  example:
  - "The following example demonstrates how to use the DefaultMode property to keep a <xref:System.Web.UI.WebControls.FormView> control in edit mode after an update operation.  \n  \n [!code-vb[FormViewDefaultMode#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_229_1.aspx)]\n [!code-cs[FormViewDefaultMode#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_229_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.FormViewMode DefaultMode { get; set; }
    return:
      type: System.Web.UI.WebControls.FormViewMode
      description: "其中一個<xref href=&quot;System.Web.UI.WebControls.FormViewMode&quot;></xref>值。 預設值是<xref uid=&quot;langword_csharp_FormViewMode.ReadOnly&quot; name=&quot;FormViewMode.ReadOnly&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.FormView.DefaultMode*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "指定的值不是其中一個<xref href=&quot;System.Web.UI.WebControls.FormViewMode&quot;></xref>列舉值。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.DeleteItem
  id: DeleteItem
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: DeleteItem()
  nameWithType: FormView.DeleteItem()
  fullName: System.Web.UI.WebControls.FormView.DeleteItem()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "刪除現有的記錄中<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控制從資料來源。"
  remarks: "使用 DeleteItem 方法來以程式設計方式刪除在目前的記錄<xref:System.Web.UI.WebControls.FormView>控制從資料來源。</xref:System.Web.UI.WebControls.FormView> 這個方法通常使用於您要刪除目前的記錄，從外部<xref:System.Web.UI.WebControls.FormView>控制，例如來自不同頁面上的控制項。</xref:System.Web.UI.WebControls.FormView> 呼叫這個方法也會引發<xref:System.Web.UI.WebControls.FormView.ItemDeleted>和<xref:System.Web.UI.WebControls.FormView.ItemDeleting>事件。</xref:System.Web.UI.WebControls.FormView.ItemDeleting> </xref:System.Web.UI.WebControls.FormView.ItemDeleted>"
  example:
  - "The following example demonstrates how to use the DeleteItem method to programmatically delete the current record in a <xref:System.Web.UI.WebControls.FormView> control from the data source.  \n  \n [!code-vb[FormViewDeleteItem#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_190_1.aspx)]\n [!code-cs[FormViewDeleteItem#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_190_1.aspx)]"
  syntax:
    content: public virtual void DeleteItem ();
    parameters: []
  overload: System.Web.UI.WebControls.FormView.DeleteItem*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.DeleteMethod
  id: DeleteMethod
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: DeleteMethod
  nameWithType: FormView.DeleteMethod
  fullName: System.Web.UI.WebControls.FormView.DeleteMethod
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定頁面時，控制項執行刪除作業所呼叫的方法名稱。"
  remarks: "在模型繫結中使用 Web Form 的教學課程系列，請參閱[模型繫結和 Web Form](http://go.microsoft.com/fwlink/?LinkId=286117)。"
  syntax:
    content: public virtual string DeleteMethod { get; set; }
    return:
      type: System.String
      description: "在頁面控制項執行刪除作業時所呼叫方法的名稱。"
  overload: System.Web.UI.WebControls.FormView.DeleteMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.EditItemTemplate
  id: EditItemTemplate
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: EditItemTemplate
  nameWithType: FormView.EditItemTemplate
  fullName: System.Web.UI.WebControls.FormView.EditItemTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定自訂內容的項目處於編輯模式。"
  remarks: "<xref:System.Web.UI.WebControls.FormView>控制項呈現不同的範本，根據目前的控制項模式的資料列 (所指定<xref:System.Web.UI.WebControls.FormView.CurrentMode%2A>屬性)。</xref:System.Web.UI.WebControls.FormView.CurrentMode%2A> </xref:System.Web.UI.WebControls.FormView> 下表顯示每個模式所用的範本。      |模式 |轉譯範本 |  |----------|-----------------------|  |編輯 |EditItemTemplate |  |插入 |<xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>|  |唯讀 |<xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>|      EditItemTemplate 屬性來定義您自己的使用者介面 (UI)，資料列時使用<xref:System.Web.UI.WebControls.FormView>控制項處於編輯模式。</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A> </xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A> 編輯項目範本通常包含輸入的控制項和使用者更新現有的記錄，以及更新的記錄，以及取消更新作業的命令按鈕的值。       若要指定自訂範本，第一個地方`<EditItemTemplate>`標記的開頭和結尾標記之間<xref:System.Web.UI.WebControls.FormView>控制項。</xref:System.Web.UI.WebControls.FormView> 然後，您可以列出範本的開頭和結尾之間的內容`<EditItemTemplate>`標記。 使用雙向繫結運算式，您可以將欄位與輸入控制項產生關聯。 這可讓<xref:System.Web.UI.WebControls.FormView>控制項自動顯示相關聯輸入控制項處於編輯模式中的 原始欄位值。</xref:System.Web.UI.WebControls.FormView> 更新記錄時，<xref:System.Web.UI.WebControls.FormView>自動從相關聯輸入控制項擷取更新的欄位值的控制項。</xref:System.Web.UI.WebControls.FormView> 如需雙向繫結運算式的詳細資訊，請參閱[繫結至資料庫](http://msdn.microsoft.com/en-us/ab7b2846-975b-4057-a948-45527497c742)。 若要建立執行內建的取消和更新作業的命令按鈕，將命令按鈕控制項加入至具有範本其`CommandName`下表中列出的屬性設定為其中一個值。      |命令按鈕類型 |CommandName 值 |  |-------------------------|-----------------------|  |取消 |&quot;取消&quot;|  |Update |&quot;更新&quot;|      您可以使用來控制的項目範本外觀<xref:System.Web.UI.WebControls.FormView.EditRowStyle%2A>屬性。</xref:System.Web.UI.WebControls.FormView.EditRowStyle%2A>"
  example:
  - "The following example demonstrates how to define a custom template for a data row in edit mode.  \n  \n [!code-vb[FormViewEditItemTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_886_1.aspx)]\n [!code-cs[FormViewEditItemTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_886_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate EditItemTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "A <xref href=&quot;System.Web.UI.ITemplate&quot;> </xref> ，其中包含資料的自訂內容資料列時<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控制項處於編輯模式。 預設值為 null，表示這個屬性未設定。"
  overload: System.Web.UI.WebControls.FormView.EditItemTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.EditRowStyle
  id: EditRowStyle
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: EditRowStyle
  nameWithType: FormView.EditRowStyle
  fullName: System.Web.UI.WebControls.FormView.EditRowStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得參考<xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;></xref>物件，可讓您設定資料的外觀資料列時<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控制項處於編輯模式。"
  remarks: "若要控制資料的外觀 EditRowStyle 屬性資料列時使用<xref:System.Web.UI.WebControls.FormView>控制項處於編輯模式。</xref:System.Web.UI.WebControls.FormView> 當<xref:System.Web.UI.WebControls.FormView>控制項處於編輯模式，資料列會顯示由指定使用者定義的內容<xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>屬性。</xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A> </xref:System.Web.UI.WebControls.FormView> 這個屬性是唯讀的。不過，您可以設定的屬性<xref:System.Web.UI.WebControls.TableItemStyle>它所傳回的物件。</xref:System.Web.UI.WebControls.TableItemStyle> 可以設定的屬性，以宣告方式使用下列方法之一:-將屬性放在開頭標記<xref:System.Web.UI.WebControls.FormView>控制項在表單中的`Property-Subproperty`，其中`Subproperty`是屬性的<xref:System.Web.UI.WebControls.TableItemStyle>物件 (例如， `EditRowStyle-ForeColor`)。</xref:System.Web.UI.WebControls.TableItemStyle> </xref:System.Web.UI.WebControls.FormView>      -巢狀`<EditRowStyle>`開頭和結尾標記之間的項目<xref:System.Web.UI.WebControls.FormView>控制項。</xref:System.Web.UI.WebControls.FormView>       屬性也可以設定以程式設計方式在表單中`Property.Subproperty`(例如， `EditRowStyle.ForeColor`)。 常見的設定通常包括自訂背景色彩、 前景色彩和字型屬性。"
  example:
  - "The following example demonstrates how to use the EditRowStyle property to specify a custom style for a data row when a <xref:System.Web.UI.WebControls.FormView> control is in edit mode.  \n  \n [!code-vb[FormViewEditItemTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1022_1.aspx)]\n [!code-cs[FormViewEditItemTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1022_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TableItemStyle EditRowStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "若要參考<xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref> ，表示樣式的資料列時<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控制項處於編輯模式。"
  overload: System.Web.UI.WebControls.FormView.EditRowStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.EmptyDataRowStyle
  id: EmptyDataRowStyle
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: EmptyDataRowStyle
  nameWithType: FormView.EmptyDataRowStyle
  fullName: System.Web.UI.WebControls.FormView.EmptyDataRowStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得參考<xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;></xref>物件，可讓您設定的空白資料列時，資料來源繫結至顯示外觀<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控制項並未包含任何記錄。"
  remarks: "使用 EmptyDataRowStyle 屬性來控制中的空白資料列的外觀<xref:System.Web.UI.WebControls.FormView>控制項。</xref:System.Web.UI.WebControls.FormView> 繫結至控制項的資料來源不包含任何記錄時，會顯示空白資料列。 這個屬性是唯讀的。不過，您可以設定的屬性<xref:System.Web.UI.WebControls.TableItemStyle>它所傳回的物件。</xref:System.Web.UI.WebControls.TableItemStyle> 可以設定的屬性，以宣告方式使用下列方法之一:-將屬性放在開頭標記<xref:System.Web.UI.WebControls.FormView>控制項在表單中的`Property-Subproperty`，其中`Subproperty`是屬性的<xref:System.Web.UI.WebControls.TableItemStyle>物件 (例如， `EmptyDataRowStyle-ForeColor`)。</xref:System.Web.UI.WebControls.TableItemStyle> </xref:System.Web.UI.WebControls.FormView>      -巢狀`<EmptyDataRowStyle>`開頭和結尾標記之間的項目<xref:System.Web.UI.WebControls.FormView>控制項。</xref:System.Web.UI.WebControls.FormView>       屬性也可以設定以程式設計方式在表單中`Property.Subproperty`(例如， `EmptyDataRowStyle.ForeColor`)。 常見的設定通常包括自訂背景色彩、 前景色彩和字型屬性。"
  example:
  - "The following example demonstrates how to use the EmptyDataRowStyle property to specify a custom style for the empty data row displayed when a <xref:System.Web.UI.WebControls.FormView> control is bound to a data source that does not contain any records.  \n  \n [!code-cs[FormViewEmptyDataText#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1010_1.aspx)]\n [!code-vb[FormViewEmptyDataText#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1010_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TableItemStyle EmptyDataRowStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "若要參考<xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref> ，可讓您設定空白資料列的外觀。"
  overload: System.Web.UI.WebControls.FormView.EmptyDataRowStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.EmptyDataTemplate
  id: EmptyDataTemplate
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: EmptyDataTemplate
  nameWithType: FormView.EmptyDataTemplate
  fullName: System.Web.UI.WebControls.FormView.EmptyDataTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定使用者定義的內容，來轉譯時的空白資料列<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控制項所繫結至資料來源不包含任何記錄。"
  remarks: "空白資料列會顯示在<xref:System.Web.UI.WebControls.FormView>控制當繫結至控制項的資料來源不包含任何記錄。</xref:System.Web.UI.WebControls.FormView> 您可以使用 EmptyDataTemplate 屬性來定義您自己的自訂使用者介面 (UI)，空白資料列。 若要指定空白資料列的自訂範本，先將`<EmptyDataTemplate>`標記的開頭和結尾標記之間<xref:System.Web.UI.WebControls.FormView>控制項。</xref:System.Web.UI.WebControls.FormView> 然後，您可以列出範本的開頭和結尾之間的內容`<EmptyDataTemplate>`標記。 若要控制的空白資料列的樣式，請使用<xref:System.Web.UI.WebControls.FormView.EmptyDataRowStyle%2A>屬性。</xref:System.Web.UI.WebControls.FormView.EmptyDataRowStyle%2A> 或者，設定為空的資料列使用內建的 UI<xref:System.Web.UI.WebControls.FormView.EmptyDataText%2A>而不是這個屬性的屬性。</xref:System.Web.UI.WebControls.FormView.EmptyDataText%2A>      > [!NOTE] > 如果兩個<xref:System.Web.UI.WebControls.FormView.EmptyDataText%2A>和 EmptyDataTemplate 屬性會設定、 EmptyDataTemplate 屬性會優先。</xref:System.Web.UI.WebControls.FormView.EmptyDataText%2A>"
  example:
  - "The following example demonstrates how to define a custom template for the empty data row displayed when a <xref:System.Web.UI.WebControls.FormView> control is bound to a data source that does not contain any records.  \n  \n [!code-cs[FormViewEmptyDataTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1213_1.aspx)]\n [!code-vb[FormViewEmptyDataTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1213_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate EmptyDataTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "A <xref href=&quot;System.Web.UI.ITemplate&quot;> </xref> ，其中包含空白資料列的自訂內容。 預設值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>，表示這個屬性未設定。"
  overload: System.Web.UI.WebControls.FormView.EmptyDataTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.EmptyDataText
  id: EmptyDataText
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: EmptyDataText
  nameWithType: FormView.EmptyDataText
  fullName: System.Web.UI.WebControls.FormView.EmptyDataText
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定来顯示空的資料列中的文字呈現時<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控制項所繫結至資料來源不包含任何記錄。"
  remarks: "空白資料列會顯示在<xref:System.Web.UI.WebControls.FormView>控制當繫結至控制項的資料來源不包含任何記錄。</xref:System.Web.UI.WebControls.FormView> 您可以使用 EmptyDataText 屬性來指定要顯示空的資料列中的文字。 若要控制的空白資料列的樣式，請使用<xref:System.Web.UI.WebControls.FormView.EmptyDataRowStyle%2A>屬性。</xref:System.Web.UI.WebControls.FormView.EmptyDataRowStyle%2A> 或者，您可以定義您自己的自訂使用者介面 (UI)，空白資料列，藉由設定<xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A>而不是這個屬性的屬性。</xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A>      > [!NOTE] > 如果這兩個 EmptyDataText 和<xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A>設定的屬性，<xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A>屬性會優先。</xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A> </xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A>       這個屬性的值設定時，可以自動儲存到資源檔使用設計工具。 如需詳細資訊，請參閱<xref:System.ComponentModel.LocalizableAttribute>和[全球化和當地語系化](~/add/includes/ajax-current-ext-md.md)。</xref:System.ComponentModel.LocalizableAttribute>"
  example:
  - "The following example demonstrates how to use the EmptyDataText property to specify the text to display in the empty data row.  \n  \n [!code-cs[FormViewEmptyDataText#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1210_1.aspx)]\n [!code-vb[FormViewEmptyDataText#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1210_1.aspx)]"
  syntax:
    content: public virtual string EmptyDataText { get; set; }
    return:
      type: System.String
      description: "要在空白資料列中顯示的文字。 預設為空字串 (&quot;&quot;)，表示這個屬性未設定。"
  overload: System.Web.UI.WebControls.FormView.EmptyDataText*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.EnableModelValidation
  id: EnableModelValidation
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: EnableModelValidation
  nameWithType: FormView.EnableModelValidation
  fullName: System.Web.UI.WebControls.FormView.EnableModelValidation
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定值，指出是否驗證程式控制項將會處理發生在進行插入或更新作業的例外狀況。"
  syntax:
    content: public virtual bool EnableModelValidation { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果驗證程式控制項將會處理或更新作業; 在插入期間發生的例外狀況，否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.FormView.EnableModelValidation*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.EnsureDataBound
  id: EnsureDataBound
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: EnsureDataBound()
  nameWithType: FormView.EnsureDataBound()
  fullName: System.Web.UI.WebControls.FormView.EnsureDataBound()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "讓特定<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控制項所繫結時適當資料。"
  remarks: "EnsureDataBound 方法是 helper 方法，供<xref:System.Web.UI.WebControls.FormView>類別，以確定<xref:System.Web.UI.WebControls.FormView>控制項所繫結時適當資料。</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView> EnsureDataBound 方法通常稱為期間<xref:System.Web.UI.WebControls.BaseDataBoundControl.OnPreRender%2A>方法，以將控制項繫結至資料來源時還未繫結的資料繫結控制項，但需要的資料繫結。</xref:System.Web.UI.WebControls.BaseDataBoundControl.OnPreRender%2A> 若要避免發生資料繫結已覆寫這個版本的方法時<xref:System.Web.UI.WebControls.FormView>控制項處於插入模式。</xref:System.Web.UI.WebControls.FormView>"
  syntax:
    content: protected override void EnsureDataBound ();
    parameters: []
  overload: System.Web.UI.WebControls.FormView.EnsureDataBound*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.ExtractRowValues(System.Collections.Specialized.IOrderedDictionary,System.Boolean)
  id: ExtractRowValues(System.Collections.Specialized.IOrderedDictionary,System.Boolean)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: ExtractRowValues(IOrderedDictionary,Boolean)
  nameWithType: FormView.ExtractRowValues(IOrderedDictionary,Boolean)
  fullName: System.Web.UI.WebControls.FormView.ExtractRowValues(IOrderedDictionary,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "擷取資料列內宣告的每個欄位的值，並將它們儲存在指定<xref href=&quot;System.Collections.Specialized.IOrderedDictionary&quot;></xref>物件。"
  remarks: "ExtractRowValues 方法是 helper 方法，由呼叫<xref:System.Web.UI.WebControls.FormView>控制項來擷取資料列內宣告的每個欄位的值。</xref:System.Web.UI.WebControls.FormView> 由於資料列會顯示不同的範本，根據目前的模式，則這個方法會擷取只宣告對應於目前的模式的範本中的欄位值。 下表顯示可用的模式和對應的範本。      |模式 |範本 |  |----------|--------------|  |插入 |<xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>|  |編輯 |<xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>|  |唯讀 |<xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>|      您可以指定擷取的值使用是否包含索引鍵欄位`includeKeys`參數。</xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A> </xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A> </xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>"
  syntax:
    content: protected virtual void ExtractRowValues (System.Collections.Specialized.IOrderedDictionary fieldValues, bool includeKeys);
    parameters:
    - id: fieldValues
      type: System.Collections.Specialized.IOrderedDictionary
      description: "<xref href=&quot;System.Collections.Specialized.IOrderedDictionary&quot;> </xref>用來儲存目前的資料項目的欄位值。"
    - id: includeKeys
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>包含索引鍵欄位。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.FormView.ExtractRowValues*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.FooterRow
  id: FooterRow
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: FooterRow
  nameWithType: FormView.FooterRow
  fullName: System.Web.UI.WebControls.FormView.FooterRow
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得<xref href=&quot;System.Web.UI.WebControls.FormViewRow&quot;></xref>物件，代表頁尾資料列中的<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控制項。"
  remarks: "頁尾資料列會顯示在底部<xref:System.Web.UI.WebControls.FormView>負責控制何時<xref:System.Web.UI.WebControls.FormView.FooterText%2A>或<xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A>屬性設定。</xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> </xref:System.Web.UI.WebControls.FormView.FooterText%2A> </xref:System.Web.UI.WebControls.FormView> 使用 FooterRow 屬性，若要以程式設計方式存取<xref:System.Web.UI.WebControls.FormViewRow>物件，代表頁尾資料列。</xref:System.Web.UI.WebControls.FormViewRow>      > [!NOTE] > FooterRow 屬性之後，才可被<xref:System.Web.UI.WebControls.FormView>控制項建立頁尾資料列中的<xref:System.Web.UI.WebControls.FormView.ItemCreated>事件。</xref:System.Web.UI.WebControls.FormView.ItemCreated> </xref:System.Web.UI.WebControls.FormView>       這個屬性通常用於您需要以程式設計方式操作頁尾資料列，例如當加入自訂內容。 後必須執行 FooterRow 屬性所做的任何修改<xref:System.Web.UI.WebControls.FormView>控制項已呈現，否則<xref:System.Web.UI.WebControls.FormView>控制會覆寫任何變更。</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView>       若要控制頁尾資料列的樣式，請使用<xref:System.Web.UI.WebControls.FormView.FooterStyle%2A>屬性。</xref:System.Web.UI.WebControls.FormView.FooterStyle%2A>"
  example:
  - "The following example demonstrates how to use the FooterRow property to programmatically modify the properties of the footer row during the <xref:System.Web.UI.WebControls.FormView.ItemCreated> event.  \n  \n [!code-vb[FormViewFooterTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_364_1.aspx)]\n [!code-cs[FormViewFooterTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_364_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.FormViewRow FooterRow { get; }
    return:
      type: System.Web.UI.WebControls.FormViewRow
      description: "A <xref href=&quot;System.Web.UI.WebControls.FormViewRow&quot;> </xref>頁尾資料列中的表示<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控制項。"
  overload: System.Web.UI.WebControls.FormView.FooterRow*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.FooterStyle
  id: FooterStyle
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: FooterStyle
  nameWithType: FormView.FooterStyle
  fullName: System.Web.UI.WebControls.FormView.FooterStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得參考<xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;></xref>物件，可讓您設定頁尾資料列中的外觀<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控制項。"
  remarks: "頁尾資料列會顯示在底部<xref:System.Web.UI.WebControls.FormView>負責控制何時<xref:System.Web.UI.WebControls.FormView.FooterText%2A>或<xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A>屬性設定。</xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> </xref:System.Web.UI.WebControls.FormView.FooterText%2A> </xref:System.Web.UI.WebControls.FormView> 使用 FooterStyle 屬性來控制頁尾資料列中的外觀<xref:System.Web.UI.WebControls.FormView>控制項。</xref:System.Web.UI.WebControls.FormView> 這個屬性是唯讀的。不過，您可以設定的屬性<xref:System.Web.UI.WebControls.TableItemStyle>它所傳回的物件。</xref:System.Web.UI.WebControls.TableItemStyle> 可以設定的屬性，以宣告方式使用下列方法之一:-將屬性放在開頭標記<xref:System.Web.UI.WebControls.FormView>控制項在表單中的`Property-Subproperty`，其中`Subproperty`是屬性的<xref:System.Web.UI.WebControls.TableItemStyle>物件 (例如， `FooterStyle-ForeColor`)。</xref:System.Web.UI.WebControls.TableItemStyle> </xref:System.Web.UI.WebControls.FormView>      -巢狀`<FooterStyle>`開頭和結尾標記之間的項目<xref:System.Web.UI.WebControls.FormView>控制項。</xref:System.Web.UI.WebControls.FormView>       屬性也可以設定以程式設計方式在表單中`Property.Subproperty`(例如， `FooterStyle.ForeColor`)。 常見的設定通常包括自訂背景色彩、 前景色彩和字型屬性。"
  example:
  - "The following example demonstrates how to use the FooterStyle property to specify a custom style for the footer row.  \n  \n [!code-cs[FormViewFooterText#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1350_1.aspx)]\n [!code-vb[FormViewFooterText#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1350_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TableItemStyle FooterStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "若要參考<xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;></xref>表示頁尾資料列中的樣式<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控制項。"
  overload: System.Web.UI.WebControls.FormView.FooterStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.FooterTemplate
  id: FooterTemplate
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: FooterTemplate
  nameWithType: FormView.FooterTemplate
  fullName: System.Web.UI.WebControls.FormView.FooterTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定頁尾資料列中的使用者定義內容<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控制項。"
  remarks: "頁尾資料列會顯示在底部<xref:System.Web.UI.WebControls.FormView>負責控制何時<xref:System.Web.UI.WebControls.FormView.FooterText%2A>或 FooterTemplate 屬性設定。</xref:System.Web.UI.WebControls.FormView.FooterText%2A> </xref:System.Web.UI.WebControls.FormView> 您可以使用 FooterTemplate 屬性頁尾資料列的檔案，以定義您自己的自訂使用者介面 (UI)。 若要指定頁尾資料列的自訂範本，先將`<FooterTemplate>`標記的開頭和結尾標記之間<xref:System.Web.UI.WebControls.FormView>控制項。</xref:System.Web.UI.WebControls.FormView> 然後，您可以列出範本的開頭和結尾之間的內容`<FooterTemplate>`標記。 若要控制頁尾資料列的樣式，請使用<xref:System.Web.UI.WebControls.FormView.FooterStyle%2A>屬性。</xref:System.Web.UI.WebControls.FormView.FooterStyle%2A> 或者，您可以只顯示文字頁尾資料列中藉由設定<xref:System.Web.UI.WebControls.FormView.FooterText%2A>而不是這個屬性的屬性。</xref:System.Web.UI.WebControls.FormView.FooterText%2A>      > [!NOTE] > 如果兩個<xref:System.Web.UI.WebControls.FormView.FooterText%2A>和 FooterTemplate 屬性會設定、 FooterTemplate 屬性會優先。</xref:System.Web.UI.WebControls.FormView.FooterText%2A>"
  example:
  - "The following example demonstrates how to use the FooterTemplate property to define a custom template to render for the footer row.  \n  \n [!code-vb[FormViewFooterTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1258_1.aspx)]\n [!code-cs[FormViewFooterTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1258_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate FooterTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "A <xref href=&quot;System.Web.UI.ITemplate&quot;> </xref>包含頁尾資料列的自訂內容。 預設值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>，表示這個屬性未設定。"
  overload: System.Web.UI.WebControls.FormView.FooterTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.FooterText
  id: FooterText
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: FooterText
  nameWithType: FormView.FooterText
  fullName: System.Web.UI.WebControls.FormView.FooterText
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定要在頁尾資料列中顯示的文字<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控制項。"
  remarks: "頁尾資料列會顯示在底部<xref:System.Web.UI.WebControls.FormView>負責控制何時 FooterText 或<xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A>屬性設定。</xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> </xref:System.Web.UI.WebControls.FormView> 使用 FooterText 屬性來指定要在頁尾資料列中顯示的文字。 若要控制頁尾資料列的樣式，請使用<xref:System.Web.UI.WebControls.FormView.FooterStyle%2A>屬性。</xref:System.Web.UI.WebControls.FormView.FooterStyle%2A> 或者，您可以定義您自己的自訂使用者介面 (UI) 頁尾資料列設定<xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A>而不是這個屬性的屬性。</xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A>      > [!NOTE] > 如果這兩個 FooterText 和<xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A>設定的屬性，<xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A>屬性會優先。</xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> </xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A>       這個屬性的值設定時，可以自動儲存到資源檔使用設計工具。 如需詳細資訊，請參閱<xref:System.ComponentModel.LocalizableAttribute>和[全球化和當地語系化](~/add/includes/ajax-current-ext-md.md)。</xref:System.ComponentModel.LocalizableAttribute>"
  example:
  - "The following example demonstrates how to use the FooterText property to specify the text to display in the footer row.  \n  \n [!code-cs[FormViewFooterText#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_904_1.aspx)]\n [!code-vb[FormViewFooterText#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_904_1.aspx)]"
  syntax:
    content: public virtual string FooterText { get; set; }
    return:
      type: System.String
      description: "要在頁尾資料列中顯示的文字。 預設為空字串 (&quot;&quot;)，表示這個屬性未設定。"
  overload: System.Web.UI.WebControls.FormView.FooterText*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.GridLines
  id: GridLines
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: GridLines
  nameWithType: FormView.GridLines
  fullName: System.Web.UI.WebControls.FormView.GridLines
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定格線樣式<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控制項。"
  remarks: "使用格線屬性來指定格線樣式<xref:System.Web.UI.WebControls.FormView>控制項。</xref:System.Web.UI.WebControls.FormView> 下表列出可用的樣式。      |樣式 |描述 |  |-----------|-----------------|  |`GridLines.None`|不顯示格線。 |  |`GridLines.Horizontal`|顯示水平格線。 |  |`GridLines.Vertical`|顯示垂直格線。 |  |`GridLines.Both`|顯示水平和垂直格線。 |"
  example:
  - "The following example demonstrates how to use the GridLines property to display both the vertical and horizontal gridlines.  \n  \n [!code-cs[FormViewCellPadding#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_236_1.aspx)]\n [!code-vb[FormViewCellPadding#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_236_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.GridLines GridLines { get; set; }
    return:
      type: System.Web.UI.WebControls.GridLines
      description: "其中一個<xref href=&quot;System.Web.UI.WebControls.GridLines&quot;></xref>值。 預設值是<xref uid=&quot;langword_csharp_GridLines.None&quot; name=&quot;GridLines.None&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.FormView.GridLines*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.HeaderRow
  id: HeaderRow
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: HeaderRow
  nameWithType: FormView.HeaderRow
  fullName: System.Web.UI.WebControls.FormView.HeaderRow
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得<xref href=&quot;System.Web.UI.WebControls.FormViewRow&quot;></xref>物件，表示中的標頭資料列<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控制項。"
  remarks: "標頭資料列會顯示在頂端<xref:System.Web.UI.WebControls.FormView>負責控制何時<xref:System.Web.UI.WebControls.FormView.HeaderText%2A>或<xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A>屬性設定。</xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> </xref:System.Web.UI.WebControls.FormView.HeaderText%2A> </xref:System.Web.UI.WebControls.FormView> 使用 HeaderRow 屬性，若要以程式設計方式存取<xref:System.Web.UI.WebControls.FormViewRow>物件，表示標頭資料列。</xref:System.Web.UI.WebControls.FormViewRow>      > [!NOTE] > HeaderRow 屬性之後，才可被<xref:System.Web.UI.WebControls.FormView>控制項建立中的標頭資料列<xref:System.Web.UI.WebControls.FormView.ItemCreated>事件。</xref:System.Web.UI.WebControls.FormView.ItemCreated> </xref:System.Web.UI.WebControls.FormView>       這個屬性通常用於您需要以程式設計方式操作標頭資料列時，例如，當加入自訂內容。 後必須執行 HeaderRow 屬性所做的任何修改<xref:System.Web.UI.WebControls.FormView>控制項已呈現，否則<xref:System.Web.UI.WebControls.FormView>控制項會覆寫任何變更。</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView>"
  example:
  - "The following example demonstrates how to use the HeaderRow property to programmatically modify the properties of the header row during the <xref:System.Web.UI.WebControls.FormView.ItemCreated> event.  \n  \n [!code-vb[FormViewHeaderTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_518_1.aspx)]\n [!code-cs[FormViewHeaderTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_518_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.FormViewRow HeaderRow { get; }
    return:
      type: System.Web.UI.WebControls.FormViewRow
      description: "A <xref href=&quot;System.Web.UI.WebControls.FormViewRow&quot;> </xref>表示中的標頭資料列<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控制項。"
  overload: System.Web.UI.WebControls.FormView.HeaderRow*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.HeaderStyle
  id: HeaderStyle
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: HeaderStyle
  nameWithType: FormView.HeaderStyle
  fullName: System.Web.UI.WebControls.FormView.HeaderStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得參考<xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;></xref>物件，可讓您設定中的標頭資料列的外觀<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控制項。"
  remarks: "標頭資料列會顯示在頂端<xref:System.Web.UI.WebControls.FormView>負責控制何時<xref:System.Web.UI.WebControls.FormView.HeaderText%2A>或<xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A>屬性設定。</xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> </xref:System.Web.UI.WebControls.FormView.HeaderText%2A> </xref:System.Web.UI.WebControls.FormView> 使用 HeaderStyle 屬性來控制中的標頭資料列的外觀<xref:System.Web.UI.WebControls.FormView>控制項。</xref:System.Web.UI.WebControls.FormView> 這個屬性是唯讀的。不過，您可以設定的屬性<xref:System.Web.UI.WebControls.TableItemStyle>它所傳回的物件。</xref:System.Web.UI.WebControls.TableItemStyle> 可以設定的屬性，以宣告方式使用下列方法之一:-將屬性放在開頭標記<xref:System.Web.UI.WebControls.FormView>控制項在表單中的`Property-Subproperty`，其中`Subproperty`是屬性的<xref:System.Web.UI.WebControls.TableItemStyle>物件 (例如， `HeaderStyle-ForeColor`)。</xref:System.Web.UI.WebControls.TableItemStyle> </xref:System.Web.UI.WebControls.FormView>      -巢狀`<HeaderStyle>`開頭和結尾標記之間的項目<xref:System.Web.UI.WebControls.FormView>控制項。</xref:System.Web.UI.WebControls.FormView>       屬性也可以設定以程式設計方式在表單中`Property.Subproperty`(例如， `HeaderStyle.ForeColor`)。 常見的設定通常包括自訂背景色彩、 前景色彩和字型屬性。"
  example:
  - "The following example demonstrates how to use the HeaderStyle property to specify a custom style for the header row.  \n  \n [!code-vb[FormViewHeaderText#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1059_1.aspx)]\n [!code-cs[FormViewHeaderText#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1059_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TableItemStyle HeaderStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "若要參考<xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;></xref>表示中的標頭資料列的樣式<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控制項。"
  overload: System.Web.UI.WebControls.FormView.HeaderStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.HeaderTemplate
  id: HeaderTemplate
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: HeaderTemplate
  nameWithType: FormView.HeaderTemplate
  fullName: System.Web.UI.WebControls.FormView.HeaderTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定使用者定義的內容中的標頭資料列<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控制項。"
  remarks: "標頭資料列會顯示在頂端<xref:System.Web.UI.WebControls.FormView>負責控制何時<xref:System.Web.UI.WebControls.FormView.HeaderText%2A>或 HeaderTemplate 屬性設定。</xref:System.Web.UI.WebControls.FormView.HeaderText%2A> </xref:System.Web.UI.WebControls.FormView> 您可以使用 HeaderTemplate 屬性標頭資料列的檔案，以定義您自己的自訂使用者介面 (UI)。 指定標頭資料列的自訂範本，請先將`<HeaderTemplate>`標記的開頭和結尾標記之間<xref:System.Web.UI.WebControls.FormView>控制項。</xref:System.Web.UI.WebControls.FormView> 然後，您可以列出範本的開頭和結尾之間的內容`<HeaderTemplate>`標記。 若要控制標頭資料列的樣式，請使用<xref:System.Web.UI.WebControls.FormView.HeaderStyle%2A>屬性。</xref:System.Web.UI.WebControls.FormView.HeaderStyle%2A> 或者，您可以只顯示文字標頭列中藉由設定<xref:System.Web.UI.WebControls.FormView.HeaderText%2A>而不是這個屬性的屬性。</xref:System.Web.UI.WebControls.FormView.HeaderText%2A>      > [!NOTE] > 如果兩個<xref:System.Web.UI.WebControls.FormView.HeaderText%2A>、 HeaderTemplate 屬性會設定 HeaderTemplate 屬性會優先。</xref:System.Web.UI.WebControls.FormView.HeaderText%2A>"
  example:
  - "The following example demonstrates how to use the HeaderTemplate property to define a custom template to render for the header row.  \n  \n [!code-vb[FormViewHeaderTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1060_1.aspx)]\n [!code-cs[FormViewHeaderTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1060_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate HeaderTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "A <xref href=&quot;System.Web.UI.ITemplate&quot;> </xref>包含標頭資料列的自訂內容。 預設值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>，表示這個屬性未設定。"
  overload: System.Web.UI.WebControls.FormView.HeaderTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.HeaderText
  id: HeaderText
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: HeaderText
  nameWithType: FormView.HeaderText
  fullName: System.Web.UI.WebControls.FormView.HeaderText
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定要顯示的標頭資料列中的文字<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控制項。"
  remarks: "標頭資料列會顯示在頂端<xref:System.Web.UI.WebControls.FormView>負責控制何時 HeaderText 或<xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A>屬性設定。</xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> </xref:System.Web.UI.WebControls.FormView> 使用 HeaderText 屬性來指定要在標頭資料列中顯示的文字。 若要控制標頭資料列的樣式，請使用<xref:System.Web.UI.WebControls.FormView.HeaderStyle%2A>屬性。</xref:System.Web.UI.WebControls.FormView.HeaderStyle%2A> 或者，您可以定義您自己的自訂使用者介面 (UI) 標頭資料列藉由設定<xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A>而不是這個屬性的屬性。</xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A>      > [!NOTE] > 如果這兩個 HeaderText 和<xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A>設定的屬性，<xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A>屬性會優先。</xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> </xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A>       這個屬性的值設定時，可以自動儲存到資源檔使用設計工具。 如需詳細資訊，請參閱<xref:System.ComponentModel.LocalizableAttribute>和[全球化和當地語系化](~/add/includes/ajax-current-ext-md.md)。</xref:System.ComponentModel.LocalizableAttribute>"
  example:
  - "The following example demonstrates how to use the HeaderText property to specify the text to display in the header row.  \n  \n [!code-vb[FormViewHeaderText#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1225_1.aspx)]\n [!code-cs[FormViewHeaderText#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1225_1.aspx)]"
  syntax:
    content: public virtual string HeaderText { get; set; }
    return:
      type: System.String
      description: "要在標頭資料列中顯示的文字。 預設為空字串 (&quot;&quot;)，表示這個屬性未設定。"
  overload: System.Web.UI.WebControls.FormView.HeaderText*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.HorizontalAlign
  id: HorizontalAlign
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: HorizontalAlign
  nameWithType: FormView.HorizontalAlign
  fullName: System.Web.UI.WebControls.FormView.HorizontalAlign
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定水平對齊<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>頁面上的控制項。"
  remarks: "使用指定的水平對齊 HorizontalAlign 屬性<xref:System.Web.UI.WebControls.FormView>頁面內控制項。</xref:System.Web.UI.WebControls.FormView> 下表列出不同的水平對齊樣式。      |HorizontalAlign 值 |描述 |  |---------------------------|-----------------|  |`HorizontalAlign.NotSet`|尚未設定<xref:System.Web.UI.WebControls.FormView>控制項的水平對齊。 |  |`HorizontalAlign.Left`|<xref:System.Web.UI.WebControls.FormView>控制項是在頁面上靠左對齊。 |  |`HorizontalAlign.Center`|<xref:System.Web.UI.WebControls.FormView>控制項置於頁面。 |  |`HorizontalAlign.Right`|<xref:System.Web.UI.WebControls.FormView>控制項是在頁面上靠右對齊。 |  |`HorizontalAlign.Justify`|<xref:System.Web.UI.WebControls.FormView>控制項對齊頁面的左、 右邊界。 |</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView>"
  example:
  - "The following example demonstrates how to use the HorizontalAlign property to specify that a <xref:System.Web.UI.WebControls.FormView> control should be centered on the page.  \n  \n [!code-vb[FormViewHorizontalAlign#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1047_1.aspx)]\n [!code-cs[FormViewHorizontalAlign#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1047_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.HorizontalAlign HorizontalAlign { get; set; }
    return:
      type: System.Web.UI.WebControls.HorizontalAlign
      description: "其中一個<xref href=&quot;System.Web.UI.WebControls.HorizontalAlign&quot;></xref>值。 預設值是<xref uid=&quot;langword_csharp_HorizontalAlign.NotSet&quot; name=&quot;HorizontalAlign.NotSet&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.FormView.HorizontalAlign*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.InitializePager(System.Web.UI.WebControls.FormViewRow,System.Web.UI.WebControls.PagedDataSource)
  id: InitializePager(System.Web.UI.WebControls.FormViewRow,System.Web.UI.WebControls.PagedDataSource)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: InitializePager(FormViewRow,PagedDataSource)
  nameWithType: FormView.InitializePager(FormViewRow,PagedDataSource)
  fullName: System.Web.UI.WebControls.FormView.InitializePager(FormViewRow,PagedDataSource)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "會建立頁面巡覽區列<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控制項。"
  remarks: "InitializePager 方法是 helper 方法，由呼叫<xref:System.Web.UI.WebControls.FormView>控制項來建立頁面巡覽區列。</xref:System.Web.UI.WebControls.FormView> 它會建立<xref:System.Web.UI.WebControls.TableCell>物件，其中包含使用之屬性的導覽控制項<xref:System.Web.UI.WebControls.PagedDataSource>中所含物件`pagedDataSource`參數。</xref:System.Web.UI.WebControls.PagedDataSource> </xref:System.Web.UI.WebControls.TableCell> 資料格就會加入至指定的資料列`row`參數。"
  syntax:
    content: protected virtual void InitializePager (System.Web.UI.WebControls.FormViewRow row, System.Web.UI.WebControls.PagedDataSource pagedDataSource);
    parameters:
    - id: row
      type: System.Web.UI.WebControls.FormViewRow
      description: "<xref href=&quot;System.Web.UI.WebControls.FormViewRow&quot;> </xref>包含頁面巡覽區資料列。"
    - id: pagedDataSource
      type: System.Web.UI.WebControls.PagedDataSource
      description: "A <xref href=&quot;System.Web.UI.WebControls.PagedDataSource&quot;> </xref> ，其中包含目前頁面的資料。"
  overload: System.Web.UI.WebControls.FormView.InitializePager*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.InitializeRow(System.Web.UI.WebControls.FormViewRow)
  id: InitializeRow(System.Web.UI.WebControls.FormViewRow)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: InitializeRow(FormViewRow)
  nameWithType: FormView.InitializeRow(FormViewRow)
  fullName: System.Web.UI.WebControls.FormView.InitializeRow(FormViewRow)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "初始化指定<xref href=&quot;System.Web.UI.WebControls.FormViewRow&quot;></xref>物件。"
  remarks: "InitializeRow 方法是 helper 方法，由呼叫<xref:System.Web.UI.WebControls.FormView>初始化指定的控制項<xref:System.Web.UI.WebControls.FormViewRow>物件。</xref:System.Web.UI.WebControls.FormViewRow> </xref:System.Web.UI.WebControls.FormView> <xref:System.Web.UI.WebControls.FormViewRow>物件初始化的資料列型別和所指定的資料列狀態其<xref:System.Web.UI.WebControls.FormViewRow.RowType%2A>和<xref:System.Web.UI.WebControls.FormViewRow.RowState%2A>屬性，分別。</xref:System.Web.UI.WebControls.FormViewRow.RowState%2A> </xref:System.Web.UI.WebControls.FormViewRow.RowType%2A> </xref:System.Web.UI.WebControls.FormViewRow> 接著會加入適當的內容<xref:System.Web.UI.WebControls.FormViewRow>物件。</xref:System.Web.UI.WebControls.FormViewRow> 下表描述每個資料列型別初始化的方式。      |資料列型別 |描述 |  |--------------|-----------------|  |資料列 |<xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>內容<xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>，或者<xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>屬性都會加入<xref:System.Web.UI.WebControls.FormViewRow>物件，視<xref:System.Web.UI.WebControls.FormViewRow.RowState%2A>屬性的值而定。 |  |空白資料列 |值<xref:System.Web.UI.WebControls.FormView.EmptyDataText%2A>屬性或內容<xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A>屬性加入至<xref:System.Web.UI.WebControls.FormViewRow>依據設定屬性的物件。</xref:System.Web.UI.WebControls.FormViewRow> </xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A> </xref:System.Web.UI.WebControls.FormView.EmptyDataText%2A> </xref:System.Web.UI.WebControls.FormViewRow.RowState%2A> </xref:System.Web.UI.WebControls.FormViewRow> </xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A> </xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A> </xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A> 如果已設定這兩個屬性，<xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A>屬性會優先使用。 |  |頁尾資料列 |值<xref:System.Web.UI.WebControls.FormView.FooterText%2A>屬性或內容<xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A>屬性加入至<xref:System.Web.UI.WebControls.FormViewRow>依據設定屬性的物件。</xref:System.Web.UI.WebControls.FormViewRow> </xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> </xref:System.Web.UI.WebControls.FormView.FooterText%2A> </xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A> 如果已設定這兩個屬性，<xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A>屬性會優先使用。 |  |標頭資料列 |值<xref:System.Web.UI.WebControls.FormView.HeaderText%2A>屬性或內容<xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A>屬性加入至<xref:System.Web.UI.WebControls.FormViewRow>依據設定屬性的物件。</xref:System.Web.UI.WebControls.FormViewRow> </xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> </xref:System.Web.UI.WebControls.FormView.HeaderText%2A> </xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> 如果已設定這兩個屬性，<xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A>屬性會優先使用。 |     > [!NOTE] > 這個方法不會初始化頁面巡覽區列。</xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> 若要建立頁面巡覽列，請使用<xref:System.Web.UI.WebControls.FormView.InitializePager%2A>方法。</xref:System.Web.UI.WebControls.FormView.InitializePager%2A>"
  syntax:
    content: protected virtual void InitializeRow (System.Web.UI.WebControls.FormViewRow row);
    parameters:
    - id: row
      type: System.Web.UI.WebControls.FormViewRow
      description: "<xref href=&quot;System.Web.UI.WebControls.FormViewRow&quot;> </xref>初始化。"
  overload: System.Web.UI.WebControls.FormView.InitializeRow*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.InsertItem(System.Boolean)
  id: InsertItem(System.Boolean)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: InsertItem(Boolean)
  nameWithType: FormView.InsertItem(Boolean)
  fullName: System.Web.UI.WebControls.FormView.InsertItem(Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "將目前的記錄插入資料來源中。"
  remarks: "當<xref:System.Web.UI.WebControls.FormView>控制項在插入模式下，請使用 InsertItem 方法來以程式設計方式插入資料來源中的 目前的記錄。</xref:System.Web.UI.WebControls.FormView> 這個方法通常使用於您需要插入目前的記錄從外部<xref:System.Web.UI.WebControls.FormView>控制項，例如來自不同頁面上的控制項。</xref:System.Web.UI.WebControls.FormView>      > [!NOTE] ><xref:System.Web.UI.WebControls.FormView>控制項必須在插入模式下呼叫，否則這個方法時<xref:System.Web.HttpException>就會擲回。</xref:System.Web.HttpException> </xref:System.Web.UI.WebControls.FormView>       若要指定是否要將頁面驗證執行插入作業之前，請使用`causesValidation`參數。 呼叫這個方法也會引發<xref:System.Web.UI.WebControls.FormView.ItemInserted>和<xref:System.Web.UI.WebControls.FormView.ItemInserting>事件。</xref:System.Web.UI.WebControls.FormView.ItemInserting> </xref:System.Web.UI.WebControls.FormView.ItemInserted>"
  example:
  - "The following example demonstrates how to use the InsertItem method to programmatically insert the current record in a <xref:System.Web.UI.WebControls.FormView> control in the data source.  \n  \n [!code-cs[FormViewInsertItem#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_157_1.aspx)]\n [!code-vb[FormViewInsertItem#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_157_1.aspx)]"
  syntax:
    content: public virtual void InsertItem (bool causesValidation);
    parameters:
    - id: causesValidation
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要執行頁面驗證時呼叫的方法;否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.FormView.InsertItem*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "這個方法時，會呼叫<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控制項不是在插入模式。       -或- <xref href=&quot;System.Web.UI.DataSourceView&quot;> </xref>物件相關聯<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控制項為 null。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.InsertItemTemplate
  id: InsertItemTemplate
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: InsertItemTemplate
  nameWithType: FormView.InsertItemTemplate
  fullName: System.Web.UI.WebControls.FormView.InsertItemTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定在插入模式下的自訂內容的項目。"
  remarks: "<xref:System.Web.UI.WebControls.FormView>控制項呈現不同的範本，根據目前的控制項模式的資料列 (所指定<xref:System.Web.UI.WebControls.FormView.CurrentMode%2A>屬性)。</xref:System.Web.UI.WebControls.FormView.CurrentMode%2A> </xref:System.Web.UI.WebControls.FormView> 下表顯示每個模式所用的範本。      |模式 |轉譯範本 |  |----------|-----------------------|  |編輯 |<xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>|  |插入 |上 |  |唯讀 |<xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>|      使用 [上] 屬性來定義您自己的使用者介面 (UI)，資料列時<xref:System.Web.UI.WebControls.FormView>控制項處於插入模式。</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A> </xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A> 插入項目範本通常包含使用者輸入新的記錄的值，以及命令按鈕來插入記錄，及取消插入作業的輸入的控制項。       若要指定自訂範本，第一個地方`<InsertItemTemplate>`標記的開頭和結尾標記之間<xref:System.Web.UI.WebControls.FormView>控制項。</xref:System.Web.UI.WebControls.FormView> 然後，您可以列出範本的開頭和結尾之間的內容`<InsertItemTemplate>`標記。 使用雙向繫結運算式，您可以將欄位與輸入控制項產生關聯。 插入一筆記錄、<xref:System.Web.UI.WebControls.FormView>控制項自動擷取的欄位值相關聯輸入控制項。</xref:System.Web.UI.WebControls.FormView> 如需雙向繫結運算式的詳細資訊，請參閱[繫結至資料庫](http://msdn.microsoft.com/en-us/ab7b2846-975b-4057-a948-45527497c742)。 若要建立執行內建的取消和插入作業的命令按鈕，將命令按鈕控制項加入至具有範本其`CommandName`下表中列出的屬性設定為其中一個值。      |命令按鈕類型 |CommandName 值 |  |-------------------------|-----------------------|  |取消 |&quot;取消&quot;|  |插入 |&quot;插入&quot;|      您可以使用來控制的項目範本外觀<xref:System.Web.UI.WebControls.FormView.InsertRowStyle%2A>屬性。</xref:System.Web.UI.WebControls.FormView.InsertRowStyle%2A>"
  example:
  - "The following example demonstrates how to define a custom template for a data row in insert mode.  \n  \n [!code-vb[FormViewInsertItemTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_158_1.aspx)]\n [!code-cs[FormViewInsertItemTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_158_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate InsertItemTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "A <xref href=&quot;System.Web.UI.ITemplate&quot;> </xref> ，其中包含資料的自訂內容資料列時<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控制項處於插入模式。 預設值為 null，表示這個屬性未設定。"
  overload: System.Web.UI.WebControls.FormView.InsertItemTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.InsertMethod
  id: InsertMethod
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: InsertMethod
  nameWithType: FormView.InsertMethod
  fullName: System.Web.UI.WebControls.FormView.InsertMethod
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定頁面時，控制項執行插入作業所呼叫的方法名稱。"
  remarks: "在模型繫結中使用 Web Form 的教學課程系列，請參閱[模型繫結和 Web Form](http://go.microsoft.com/fwlink/?LinkId=286117)。"
  syntax:
    content: public virtual string InsertMethod { get; set; }
    return:
      type: System.String
      description: "在頁面控制項執行插入作業時所呼叫方法的名稱。"
  overload: System.Web.UI.WebControls.FormView.InsertMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.InsertRowStyle
  id: InsertRowStyle
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: InsertRowStyle
  nameWithType: FormView.InsertRowStyle
  fullName: System.Web.UI.WebControls.FormView.InsertRowStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得參考<xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;></xref>物件，可讓您設定中的資料列的外觀<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控制當控制項處於插入模式。"
  remarks: "若要控制資料的外觀 InsertRowStyle 屬性資料列時使用<xref:System.Web.UI.WebControls.FormView>控制項處於插入模式。</xref:System.Web.UI.WebControls.FormView> 當<xref:System.Web.UI.WebControls.FormView>控制項是在插入模式下，資料列會顯示所指定的使用者定義內容<xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>屬性。</xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A> </xref:System.Web.UI.WebControls.FormView> 這個屬性是唯讀的。不過，您可以設定的屬性<xref:System.Web.UI.WebControls.TableItemStyle>它所傳回的物件。</xref:System.Web.UI.WebControls.TableItemStyle>       可以設定的屬性，以宣告方式使用下列方法之一:-將屬性放在開頭標記<xref:System.Web.UI.WebControls.FormView>控制項在表單中的`Property-Subproperty`，其中`Subproperty`是屬性的<xref:System.Web.UI.WebControls.TableItemStyle>物件 (例如， `InsertRowStyle-ForeColor`)。</xref:System.Web.UI.WebControls.TableItemStyle> </xref:System.Web.UI.WebControls.FormView>      -巢狀`<InsertRowStyle>`開頭和結尾標記之間的項目<xref:System.Web.UI.WebControls.FormView>控制項。</xref:System.Web.UI.WebControls.FormView>       屬性也可以設定以程式設計方式在表單中`Property.Subproperty`(例如， `InsertRowStyle.ForeColor`)。 常見的設定通常包括自訂背景色彩、 前景色彩和字型屬性。"
  example:
  - "The following example demonstrates how to use the InsertRowStyle property to specify a custom style for a data row when a <xref:System.Web.UI.WebControls.FormView> control is in insert mode.  \n  \n [!code-vb[FormViewInsertItemTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1317_1.aspx)]\n [!code-cs[FormViewInsertItemTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1317_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TableItemStyle InsertRowStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "參考<xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;></xref>表示中的資料列的樣式<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控制當控制項處於插入模式。"
  overload: System.Web.UI.WebControls.FormView.InsertRowStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.IsBindableType(System.Type)
  id: IsBindableType(System.Type)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: IsBindableType(Type)
  nameWithType: FormView.IsBindableType(Type)
  fullName: System.Web.UI.WebControls.FormView.IsBindableType(Type)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "判斷指定的資料類型是否可以繫結中的欄位<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控制項。"
  remarks: "IsBindableType 方法是 helper 方法，由呼叫<xref:System.Web.UI.WebControls.FormView>控制項來決定指定的資料類型是否可以繫結至控制項中的欄位。</xref:System.Web.UI.WebControls.FormView> <xref:System.Web.UI.WebControls.FormView>控制項支援下列資料類型:-所有基本資料類型，例如<xref:System.Boolean>， <xref:System.Byte>， <xref:System.Int32>，依此類推。</xref:System.Int32> </xref:System.Byte> </xref:System.Boolean> </xref:System.Web.UI.WebControls.FormView>      -   <xref:System.DateTime>      -   <xref:System.Decimal>      -   <xref:System.Guid>      -   <xref:System.String></xref:System.String></xref:System.Guid></xref:System.Decimal></xref:System.DateTime>"
  syntax:
    content: public virtual bool IsBindableType (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "A <xref:System.Type>，代表要檢查的資料類型。</xref:System.Type>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果指定的資料類型可以繫結中的欄位<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控制項等控制項，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.FormView.IsBindableType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.ItemCommand
  id: ItemCommand
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: ItemCommand
  nameWithType: FormView.ItemCommand
  fullName: System.Web.UI.WebControls.FormView.ItemCommand
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "發生於內按鈕<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>按一下控制項時。"
  remarks: "中的按鈕時，會引發 ItemCommand 事件<xref:System.Web.UI.WebControls.FormView>按一下控制項時。</xref:System.Web.UI.WebControls.FormView> 這可讓您提供執行自訂的常式，每當發生此事件的事件處理方法。       按鈕內<xref:System.Web.UI.WebControls.FormView>控制項也可以叫用的某些內建控制項的功能。</xref:System.Web.UI.WebControls.FormView> 若要執行這些作業之一，設定`CommandName`下表中的值的其中一個按鈕的屬性。      |CommandName 值 |描述 |  |-----------------------|-----------------|  |&quot;取消&quot;|取消編輯或插入作業，並傳回<xref:System.Web.UI.WebControls.FormView>控制項以指定的模式<xref:System.Web.UI.WebControls.FormView.DefaultMode%2A>屬性。</xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> </xref:System.Web.UI.WebControls.FormView> 引發<xref:System.Web.UI.WebControls.FormView.ModeChanged>和<xref:System.Web.UI.WebControls.FormView.ModeChanging>事件。 |  |&quot;刪除&quot;|刪除現有的記錄。</xref:System.Web.UI.WebControls.FormView.ModeChanging> </xref:System.Web.UI.WebControls.FormView.ModeChanged> 引發<xref:System.Web.UI.WebControls.FormView.ItemDeleted>和<xref:System.Web.UI.WebControls.FormView.ItemDeleting>事件。 |  |&quot;編輯&quot;|將<xref:System.Web.UI.WebControls.FormView>控制項處於編輯模式。</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView.ItemDeleting> </xref:System.Web.UI.WebControls.FormView.ItemDeleted> 引發<xref:System.Web.UI.WebControls.FormView.ModeChanged>和<xref:System.Web.UI.WebControls.FormView.ModeChanging>事件。 |  |&quot;插入&quot;|將目前的記錄插入資料來源中。</xref:System.Web.UI.WebControls.FormView.ModeChanging> </xref:System.Web.UI.WebControls.FormView.ModeChanged> 引發<xref:System.Web.UI.WebControls.FormView.ItemInserted>和<xref:System.Web.UI.WebControls.FormView.ItemInserting>事件。 |  |&quot;新增&quot;|將<xref:System.Web.UI.WebControls.FormView>在插入模式下的控制項。</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView.ItemInserting> </xref:System.Web.UI.WebControls.FormView.ItemInserted> 引發<xref:System.Web.UI.WebControls.FormView.ModeChanged>和<xref:System.Web.UI.WebControls.FormView.ModeChanging>事件。 |  |&quot;頁面&quot;|執行分頁作業。</xref:System.Web.UI.WebControls.FormView.ModeChanging> </xref:System.Web.UI.WebControls.FormView.ModeChanged> 設定`CommandArgument`&quot;First&quot;，&quot;持續 」 按鈕、 下一步 」、 「 Prev&quot;，或執行頁碼，以指定的分頁作業類型的屬性。 引發<xref:System.Web.UI.WebControls.FormView.PageIndexChanged>和<xref:System.Web.UI.WebControls.FormView.PageIndexChanging>事件。 |  |&quot;更新&quot;|更新資料來源中目前的記錄。</xref:System.Web.UI.WebControls.FormView.PageIndexChanging> </xref:System.Web.UI.WebControls.FormView.PageIndexChanged> 引發<xref:System.Web.UI.WebControls.FormView.ItemUpdated>和<xref:System.Web.UI.WebControls.FormView.ItemUpdating>事件。 |      雖然 ItemCommand 事件引發時按下上表中列出的按鈕時，建議您使用作業的資料表中列出的事件。</xref:System.Web.UI.WebControls.FormView.ItemUpdating> </xref:System.Web.UI.WebControls.FormView.ItemUpdated>       A<xref:System.Web.UI.WebControls.FormViewCommandEventArgs>物件傳遞至事件處理方法，可讓您判斷命令名稱並按之按鈕的命令引數。</xref:System.Web.UI.WebControls.FormViewCommandEventArgs> 若要判斷命令名稱和命令引數，請使用<xref:System.Web.UI.WebControls.CommandEventArgs.CommandName%2A>和<xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A>屬性，分別。</xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A> </xref:System.Web.UI.WebControls.CommandEventArgs.CommandName%2A> 您也可以存取使用引發事件的控制項<xref:System.Web.UI.WebControls.DetailsViewCommandEventArgs.CommandSource%2A>屬性。</xref:System.Web.UI.WebControls.DetailsViewCommandEventArgs.CommandSource%2A>       如需處理事件的詳細資訊，請參閱[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。"
  example:
  - "The following example demonstrates how to use the ItemCommand event to handle a button click in a <xref:System.Web.UI.WebControls.FormView> control. When the user clicks the Add button, the currently displayed item is added to a <xref:System.Web.UI.WebControls.ListBox> control.  \n  \n [!code-cs[FormViewItemCommandEventArgs#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_135_1.aspx)]\n [!code-vb[FormViewItemCommandEventArgs#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_135_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.FormViewCommandEventHandler ItemCommand;
    return:
      type: System.Web.UI.WebControls.FormViewCommandEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.ItemCreated
  id: ItemCreated
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: ItemCreated
  nameWithType: FormView.ItemCreated
  fullName: System.Web.UI.WebControls.FormView.ItemCreated
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "在中建立的所有資料列之後，就會發生<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控制項。"
  remarks: "ItemCreated 引發之後的所有資料列中建立<xref:System.Web.UI.WebControls.FormView>控制項。</xref:System.Web.UI.WebControls.FormView> 當第一次呈現控制項，或當使用者巡覽至另一筆記錄，也可能會發生。 提供事件處理方法，執行自訂的常式，例如加入或修改資料列內容，此事件發生時，您可以使用此事件。      > [!NOTE] > ItemCreated 事件發生之前<xref:System.Web.UI.WebControls.FormView>控制項所繫結至資料。</xref:System.Web.UI.WebControls.FormView> 若要修改繫結欄位的值，請使用<xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBound>事件。</xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBound>       您可以存取頁首、 頁尾和頁面巡覽區中的資料列<xref:System.Web.UI.WebControls.FormView>控制項使用<xref:System.Web.UI.WebControls.FormView.HeaderRow%2A>， <xref:System.Web.UI.WebControls.FormView.FooterRow%2A>， <xref:System.Web.UI.WebControls.FormView.TopPagerRow%2A>，或<xref:System.Web.UI.WebControls.FormView.BottomPagerRow%2A>屬性，分別。</xref:System.Web.UI.WebControls.FormView.BottomPagerRow%2A> </xref:System.Web.UI.WebControls.FormView.TopPagerRow%2A> </xref:System.Web.UI.WebControls.FormView.FooterRow%2A> </xref:System.Web.UI.WebControls.FormView.HeaderRow%2A> </xref:System.Web.UI.WebControls.FormView> 若要存取的資料列，請使用<xref:System.Web.UI.WebControls.FormView.Row%2A>屬性。</xref:System.Web.UI.WebControls.FormView.Row%2A>       如需處理事件的詳細資訊，請參閱[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。"
  example:
  - "The following example demonstrates how to use the ItemCreated event to update the text of a <xref:System.Web.UI.WebControls.Label> control contained in the pager row.  \n  \n [!code-vb[FormViewItemCreated#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_13_1.aspx)]\n [!code-cs[FormViewItemCreated#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_13_1.aspx)]"
  syntax:
    content: public event EventHandler ItemCreated;
    return:
      type: System.EventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.ItemDeleted
  id: ItemDeleted
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: ItemDeleted
  nameWithType: FormView.ItemDeleted
  fullName: System.Web.UI.WebControls.FormView.ItemDeleted
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "中的 [刪除] 按鈕時，就會發生<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>按一下控制項時，但之後刪除作業。"
  remarks: "<xref:System.Web.UI.WebControls.FormView>控制項時，引發 ItemDeleted 事件刪除 按鈕 (按鈕，以使用其`CommandName`屬性設定為&quot;Delete&quot;) 控制項內按一下時，但之後<xref:System.Web.UI.WebControls.FormView>控制項刪除資料錄。</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView> 這可讓您提供執行自訂的常式，如檢查刪除作業的結果，此事件發生時的事件處理方法。       A<xref:System.Web.UI.WebControls.FormViewDeletedEventArgs>物件傳遞至事件處理方法，可讓您判斷受影響的記錄和任何例外狀況可能發生的數目。</xref:System.Web.UI.WebControls.FormViewDeletedEventArgs> 若要判斷受影響的刪除作業記錄的數目，請使用<xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.AffectedRows%2A>屬性。</xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.AffectedRows%2A> 使用<xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.Exception%2A>屬性來判斷是否有發生任何例外狀況。</xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.Exception%2A> 您還可以指出是否已處理例外狀況的事件處理方法中設定<xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.ExceptionHandled%2A>屬性。</xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.ExceptionHandled%2A> 如果您想要存取非索引鍵欄位的已刪除的記錄與索引鍵欄位的名稱/值組，使用<xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.Keys%2A>和<xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.Values%2A>屬性，分別。</xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.Values%2A> </xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.Keys%2A>       如需處理事件的詳細資訊，請參閱[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。"
  example:
  - "The following example demonstrates how to use the ItemDeleted event to determine whether an exception occurred during a delete operation.  \n  \n [!code-vb[FormViewDeletedEventArgs#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_35_1.aspx)]\n [!code-cs[FormViewDeletedEventArgs#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_35_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.FormViewDeletedEventHandler ItemDeleted;
    return:
      type: System.Web.UI.WebControls.FormViewDeletedEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.ItemDeleting
  id: ItemDeleting
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: ItemDeleting
  nameWithType: FormView.ItemDeleting
  fullName: System.Web.UI.WebControls.FormView.ItemDeleting
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "中的 [刪除] 按鈕時，就會發生<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>按一下控制項時，但刪除作業之前。"
  remarks: "<xref:System.Web.UI.WebControls.FormView>控制項時，引發 ItemDeleting 事件刪除 按鈕 (按鈕，以使用其`CommandName`屬性設定為&quot;Delete&quot;) 控制項內按一下時前,<xref:System.Web.UI.WebControls.FormView>控制項刪除資料錄。</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView> 這可讓您提供執行自訂的常式，如記錄刪除之前先驗證，此事件發生時的事件處理方法。       A<xref:System.Web.UI.WebControls.FormViewDeleteEventArgs>物件傳遞至事件處理方法，可讓您決定要刪除記錄的索引，並指出應該取消刪除作業。</xref:System.Web.UI.WebControls.FormViewDeleteEventArgs> 若要判斷記錄的索引，請使用<xref:System.Web.UI.WebControls.FormViewDeleteEventArgs.RowIndex%2A>屬性。</xref:System.Web.UI.WebControls.FormViewDeleteEventArgs.RowIndex%2A> 若要取消刪除作業，請設定<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>屬性`true`。</xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 您也可以存取的索引鍵欄位和非索引鍵欄位，使用<xref:System.Web.UI.WebControls.FormViewDeleteEventArgs.Keys%2A>和<xref:System.Web.UI.WebControls.FormViewDeleteEventArgs.Values%2A>屬性，分別。</xref:System.Web.UI.WebControls.FormViewDeleteEventArgs.Values%2A> </xref:System.Web.UI.WebControls.FormViewDeleteEventArgs.Keys%2A>       如需處理事件的詳細資訊，請參閱[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。"
  example:
  - "The following example demonstrates how to use the ItemDeleting event to cancel a delete operation.  \n  \n [!code-cs[FormViewDeleteEventArgs#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_33_1.aspx)]\n [!code-vb[FormViewDeleteEventArgs#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_33_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.FormViewDeleteEventHandler ItemDeleting;
    return:
      type: System.Web.UI.WebControls.FormViewDeleteEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.ItemInserted
  id: ItemInserted
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: ItemInserted
  nameWithType: FormView.ItemInserted
  fullName: System.Web.UI.WebControls.FormView.ItemInserted
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "發生於內插入按鈕<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>按一下控制項時，但是在插入作業之後。"
  remarks: "<xref:System.Web.UI.WebControls.FormView>控制項時，引發 ItemInserted 事件插入按鈕 (按鈕，以使用其`CommandName`屬性設定為 「 插入 」) 控制項內按一下時，但之後<xref:System.Web.UI.WebControls.FormView>控制項插入資料錄。</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView> 這可讓您提供執行自訂的常式，如檢查插入作業的結果，此事件發生時的事件處理方法。       A<xref:System.Web.UI.WebControls.FormViewInsertedEventArgs>物件傳遞至事件處理方法，可讓您判斷受影響的記錄和任何例外狀況可能發生的數目。</xref:System.Web.UI.WebControls.FormViewInsertedEventArgs> 若要判斷受影響插入作業的記錄數目，使用<xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows%2A>屬性。</xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows%2A> 使用<xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception%2A>屬性來判斷是否有發生任何例外狀況。</xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception%2A> 您還可以指出是否已處理例外狀況的事件處理方法中設定<xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled%2A>屬性。</xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled%2A> 如果您要存取插入記錄的值，請使用<xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values%2A>屬性。</xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values%2A>       根據預設，<xref:System.Web.UI.WebControls.FormView>控制項會傳回所指定的模式<xref:System.Web.UI.WebControls.FormView.DefaultMode%2A>之後插入作業的屬性。</xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> </xref:System.Web.UI.WebControls.FormView> 若要保留<xref:System.Web.UI.WebControls.FormView>控制項在插入模式下，設定<xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode%2A>屬性`true`。</xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode%2A> </xref:System.Web.UI.WebControls.FormView>       如需處理事件的詳細資訊，請參閱[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。"
  example:
  - "The following example demonstrates how to use the ItemInserted event to determine whether an exception occurred during an insert operation.  \n  \n [!code-cs[FormViewInsertedEventArgs#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_91_1.aspx)]\n [!code-vb[FormViewInsertedEventArgs#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_91_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.FormViewInsertedEventHandler ItemInserted;
    return:
      type: System.Web.UI.WebControls.FormViewInsertedEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.ItemInserting
  id: ItemInserting
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: ItemInserting
  nameWithType: FormView.ItemInserting
  fullName: System.Web.UI.WebControls.FormView.ItemInserting
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "發生於內插入按鈕<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>按一下控制項時，但在 insert 作業之前。"
  remarks: "<xref:System.Web.UI.WebControls.FormView>控制項時，引發 ItemInserting 事件插入按鈕 (按鈕，以使用其`CommandName`屬性設定為 「 插入 」) 控制項內按一下時前,<xref:System.Web.UI.WebControls.FormView>控制項插入資料錄。</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView> 這可讓您提供執行自訂的常式，例如 HTML 編碼記錄的值插入資料來源中，每當發生此事件之前的事件處理方法。       A<xref:System.Web.UI.WebControls.FormViewInsertEventArgs>物件傳遞至事件處理方法，可讓您判斷值的選擇性命令引數傳送至<xref:System.Web.UI.WebControls.FormView>控制項，並指出應該取消插入作業。</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormViewInsertEventArgs> 命令引數的值會對應到`CommandArgument`屬性的 [插入] 按鈕。 當`CommandArgument`[插入] 按鈕的屬性設定，請使用<xref:System.Web.UI.WebControls.FormViewInsertEventArgs.CommandArgument%2A>屬性來判斷命令的引數的值。</xref:System.Web.UI.WebControls.FormViewInsertEventArgs.CommandArgument%2A> 若要取消的插入作業，請設定<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>屬性`true`。</xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 您也可以讀取或修改新記錄的欄位值使用<xref:System.Web.UI.WebControls.FormViewInsertEventArgs.Values%2A>屬性。</xref:System.Web.UI.WebControls.FormViewInsertEventArgs.Values%2A>       如需處理事件的詳細資訊，請參閱[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。"
  example:
  - "The following example demonstrates how to use the ItemInserting event to cancel an insert operation.  \n  \n [!code-vb[FormViewInsertEventArgs#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_61_1.aspx)]\n [!code-cs[FormViewInsertEventArgs#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_61_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.FormViewInsertEventHandler ItemInserting;
    return:
      type: System.Web.UI.WebControls.FormViewInsertEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.ItemTemplate
  id: ItemTemplate
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: ItemTemplate
  nameWithType: FormView.ItemTemplate
  fullName: System.Web.UI.WebControls.FormView.ItemTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定自訂內容中的資料列<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控制當控制項處於唯讀模式。"
  remarks: "<xref:System.Web.UI.WebControls.FormView>控制項呈現不同的範本，根據目前的控制項模式的資料列 (所指定<xref:System.Web.UI.WebControls.FormView.CurrentMode%2A>屬性)。</xref:System.Web.UI.WebControls.FormView.CurrentMode%2A> </xref:System.Web.UI.WebControls.FormView> 下表顯示每個模式所用的範本。      |模式 |轉譯範本 |  |----------|-----------------------|  |編輯 |<xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>|  |插入 |<xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>|  |唯讀 |ItemTemplate |      ItemTemplate 屬性來定義您自己的使用者介面 (UI)，資料列時使用<xref:System.Web.UI.WebControls.FormView>控制項處於唯讀模式。</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A> </xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A> 項目範本通常包含控制項來顯示欄位值的記錄，以及命令按鈕來編輯、 插入和刪除記錄。       若要指定自訂範本，第一個地方`<ItemTemplate>`標記的開頭和結尾標記之間<xref:System.Web.UI.WebControls.FormView>控制項。</xref:System.Web.UI.WebControls.FormView> 然後，您可以列出範本的開頭和結尾之間的內容`<ItemTemplate>`標記。 若要顯示的欄位值繫結至控制項的資料來源，使用資料繫結運算式。 如需資料繫結運算式的詳細資訊，請參閱[資料繫結運算式語法](http://msdn.microsoft.com/en-us/676beb1d-ddfa-4153-bba8-3c86dcb7ceca)。 若要建立執行內建的刪除、 編輯和新的記錄作業的命令按鈕，將命令按鈕控制項加入至具有範本其`CommandName`下表中列出的屬性設定為其中一個值。      |命令按鈕類型 |CommandName 值 |  |-------------------------|-----------------------|  |刪除 |&quot;刪除&quot;|  |編輯 |&quot;編輯&quot;|  |新 |&quot;新增&quot;|      您可以使用來控制的項目範本外觀<xref:System.Web.UI.WebControls.FormView.RowStyle%2A>屬性。</xref:System.Web.UI.WebControls.FormView.RowStyle%2A>"
  example:
  - "The following example demonstrates how to define a custom template for a data row in read-only mode.  \n  \n [!code-vb[FormViewEditItemTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_192_1.aspx)]\n [!code-cs[FormViewEditItemTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_192_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate ItemTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "A <xref href=&quot;System.Web.UI.ITemplate&quot;> </xref> ，其中包含資料的自訂內容資料列時<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控制項處於唯讀模式。 預設值為 null，表示這個屬性未設定。"
  overload: System.Web.UI.WebControls.FormView.ItemTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.ItemUpdated
  id: ItemUpdated
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: ItemUpdated
  nameWithType: FormView.ItemUpdated
  fullName: System.Web.UI.WebControls.FormView.ItemUpdated
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "在 [更新] 按鈕時，就會發生<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>按一下控制項時，但是在更新作業之後。"
  remarks: "<xref:System.Web.UI.WebControls.FormView>控制項時，引發 ItemUpdated 事件更新 按鈕 (按鈕，以使用其`CommandName`屬性設定為 「 更新 」) 控制項內按一下時，但之後<xref:System.Web.UI.WebControls.FormView>控制更新的記錄。</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView> 這可讓您提供執行自訂的常式，例如檢查更新作業的結果，此事件發生時的事件處理方法。       A<xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs>物件傳遞至事件處理方法，可讓您判斷受影響的記錄和任何例外狀況可能發生的數目。</xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs> 若要判斷更新作業所影響的記錄數目，請使用<xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows%2A>屬性。</xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows%2A> 使用<xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception%2A>屬性來判斷是否有發生任何例外狀況。</xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception%2A> 您還可以指出是否已處理例外狀況的事件處理方法中設定<xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled%2A>屬性。</xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled%2A> 如果您需要存取更新記錄的索引鍵欄位值，使用<xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys%2A>屬性。</xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys%2A> 原始及更新的非索引鍵欄位值可以使用存取<xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues%2A>和<xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues%2A>屬性，分別。</xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues%2A> </xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues%2A>       根據預設，<xref:System.Web.UI.WebControls.FormView>控制項會傳回所指定的模式<xref:System.Web.UI.WebControls.FormView.DefaultMode%2A>屬性在更新作業之後。</xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> </xref:System.Web.UI.WebControls.FormView> 若要保留<xref:System.Web.UI.WebControls.FormView>控制項處於編輯模式下，設定<xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode%2A>屬性`true`。</xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode%2A> </xref:System.Web.UI.WebControls.FormView>       如需處理事件的詳細資訊，請參閱[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。"
  example:
  - "The following example demonstrates how to use the ItemUpdated event to determine whether an exception occurred during an update operation.  \n  \n [!code-vb[FormViewUpdatedEventArgs#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_100_1.aspx)]\n [!code-cs[FormViewUpdatedEventArgs#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_100_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.FormViewUpdatedEventHandler ItemUpdated;
    return:
      type: System.Web.UI.WebControls.FormViewUpdatedEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.ItemUpdating
  id: ItemUpdating
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: ItemUpdating
  nameWithType: FormView.ItemUpdating
  fullName: System.Web.UI.WebControls.FormView.ItemUpdating
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "在 [更新] 按鈕時，就會發生<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>按一下控制項時，但在更新作業之前。"
  remarks: "<xref:System.Web.UI.WebControls.FormView>控制項時，引發 ItemUpdating 事件更新 按鈕 (按鈕，以使用其`CommandName`屬性設定為 「 更新 」) 控制項內按一下時前,<xref:System.Web.UI.WebControls.FormView>控制更新的記錄。</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView> 這可讓您提供執行自訂的常式，例如 HTML 編碼方式記錄的值，然後再更新資料來源中，此事件發生時的事件處理方法。       A<xref:System.Web.UI.WebControls.FormViewUpdateEventArgs>物件傳遞至事件處理方法，可讓您判斷值的選擇性命令引數傳送至<xref:System.Web.UI.WebControls.FormView>控制項，並指出應該取消更新作業。</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormViewUpdateEventArgs> 命令引數的值會對應到`CommandArgument`屬性的 [更新] 按鈕。 當`CommandArgument`[更新] 按鈕的屬性設定，請使用<xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.CommandArgument%2A>屬性來判斷命令的引數的值。</xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.CommandArgument%2A> 若要取消更新作業，請設定<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>屬性`true`。</xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 您也可以讀取或修改使用使用者所輸入的新值<xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys%2A>和<xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A>屬性。</xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A> </xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys%2A> <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A>屬性包含的索引鍵欄位，而<xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A>屬性包含非索引鍵欄位。</xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A> </xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A> 如果您要存取原始的非索引鍵欄位值，請使用<xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues%2A>屬性。</xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues%2A>       如需處理事件的詳細資訊，請參閱[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。"
  example:
  - "The following example demonstrates how to use the ItemUpdating event to cancel an update operation.  \n  \n [!code-cs[FormViewUpdateEventArgs#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_124_1.aspx)]\n [!code-vb[FormViewUpdateEventArgs#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_124_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.FormViewUpdateEventHandler ItemUpdating;
    return:
      type: System.Web.UI.WebControls.FormViewUpdateEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.LoadControlState(System.Object)
  id: LoadControlState(System.Object)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: LoadControlState(Object)
  nameWithType: FormView.LoadControlState(Object)
  fullName: System.Web.UI.WebControls.FormView.LoadControlState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "載入的狀態<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控制項屬性需要保存，即使<xref:System.Web.UI.Control.EnableViewState*>屬性設定為<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Web.UI.Control.EnableViewState*>"
  remarks: "LoadControlState 方法用來載入的狀態<xref:System.Web.UI.WebControls.FormView>控制項屬性需要保存，即使<xref:System.Web.UI.Control.EnableViewState%2A>屬性設定為`false`。</xref:System.Web.UI.Control.EnableViewState%2A> </xref:System.Web.UI.WebControls.FormView>      > [!NOTE] > 主要由控制項開發人員使用此方法擴充時<xref:System.Web.UI.WebControls.FormView>控制項。</xref:System.Web.UI.WebControls.FormView>"
  syntax:
    content: protected override void LoadControlState (object savedState);
    parameters:
    - id: savedState
      type: System.Object
      description: "<xref:System.Object>表示的狀態<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控制項。</xref:System.Object>"
  overload: System.Web.UI.WebControls.FormView.LoadControlState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.LoadViewState(System.Object)
  id: LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: LoadViewState(Object)
  nameWithType: FormView.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.FormView.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "載入先前儲存的檢視狀態的<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控制項。"
  remarks: "LoadViewState 方法用來載入先前儲存的檢視狀態的<xref:System.Web.UI.WebControls.FormView>控制項。</xref:System.Web.UI.WebControls.FormView>      > [!NOTE] > 主要由控制項開發人員使用此方法擴充時<xref:System.Web.UI.WebControls.FormView>控制項。</xref:System.Web.UI.WebControls.FormView>"
  syntax:
    content: protected override void LoadViewState (object savedState);
    parameters:
    - id: savedState
      type: System.Object
      description: "<xref:System.Object>表示的狀態<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控制項。</xref:System.Object>"
  overload: System.Web.UI.WebControls.FormView.LoadViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.ModeChanged
  id: ModeChanged
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: ModeChanged
  nameWithType: FormView.ModeChanged
  fullName: System.Web.UI.WebControls.FormView.ModeChanged
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "發生時<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控制參數之間編輯、 插入和唯讀模式，但模式已變更之後。"
  remarks: "ModeChanged 引發時<xref:System.Web.UI.WebControls.FormView>控制項嘗試切換之間編輯、 插入和唯讀模式，但在模式實際變更之後。</xref:System.Web.UI.WebControls.FormView> 這可讓您提供執行自訂的常式，如同步處理的事件處理方法<xref:System.Web.UI.WebControls.FormView>與另一個控制項，此事件發生時的控制項。</xref:System.Web.UI.WebControls.FormView>       如需處理事件的詳細資訊，請參閱[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。"
  example:
  - "The following example demonstrates how to use the ModeChanged event to display the current mode in the header row of a <xref:System.Web.UI.WebControls.FormView> control.  \n  \n [!code-vb[FormViewModeChanged#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_127_1.aspx)]\n [!code-cs[FormViewModeChanged#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_127_1.aspx)]"
  syntax:
    content: public event EventHandler ModeChanged;
    return:
      type: System.EventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.ModeChanging
  id: ModeChanging
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: ModeChanging
  nameWithType: FormView.ModeChanging
  fullName: System.Web.UI.WebControls.FormView.ModeChanging
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "發生時<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控制之間編輯、 插入和唯讀模式，但模式變更之前的參數。"
  remarks: "ModeChanging 引發時<xref:System.Web.UI.WebControls.FormView>控制項嘗試切換之間編輯、 插入和唯讀模式，但模式實際變更之前。</xref:System.Web.UI.WebControls.FormView> 這可讓您提供事件處理方法，執行自訂的常式，例如設定<xref:System.Web.UI.WebControls.FormView>控制特定的模式，或取消模式變更時就會發生此事件。</xref:System.Web.UI.WebControls.FormView>       A<xref:System.Web.UI.WebControls.FormViewModeEventArgs>物件傳遞至事件處理方法，可讓您判斷要模式<xref:System.Web.UI.WebControls.FormView>切換控制項，來判斷是否已因使用者取消編輯作業，而引發 ModeChanging 事件，或指出應該取消插入作業。</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormViewModeEventArgs> 若要判斷新的模式，請使用<xref:System.Web.UI.WebControls.FormViewModeEventArgs.NewMode%2A>屬性。</xref:System.Web.UI.WebControls.FormViewModeEventArgs.NewMode%2A> 您也可以使用<xref:System.Web.UI.WebControls.FormViewModeEventArgs.NewMode%2A>切換至替代的模式設定為其中一個屬性<xref:System.Web.UI.WebControls.FormViewMode>列舉值。</xref:System.Web.UI.WebControls.FormViewMode> </xref:System.Web.UI.WebControls.FormViewModeEventArgs.NewMode%2A> 使用<xref:System.Web.UI.WebControls.FormViewModeEventArgs.CancelingEdit%2A>屬性來判斷使用者是否已取消編輯作業。</xref:System.Web.UI.WebControls.FormViewModeEventArgs.CancelingEdit%2A> 若要取消插入作業，請設定<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>屬性`true`。</xref:System.ComponentModel.CancelEventArgs.Cancel%2A>       如需處理事件的詳細資訊，請參閱[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。"
  example:
  - "The following example demonstrates how to use the ModeChanging event to hide the pager row when the <xref:System.Web.UI.WebControls.FormView> control transitions to edit mode.  \n  \n [!code-vb[FormViewModeEventArgs#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_111_1.aspx)]\n [!code-cs[FormViewModeEventArgs#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_111_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.FormViewModeEventHandler ModeChanging;
    return:
      type: System.Web.UI.WebControls.FormViewModeEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.ModifiedOuterTableStylePropertyName
  id: ModifiedOuterTableStylePropertyName
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: ModifiedOuterTableStylePropertyName()
  nameWithType: FormView.ModifiedOuterTableStylePropertyName()
  fullName: System.Web.UI.WebControls.FormView.ModifiedOuterTableStylePropertyName()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "決定是否特定資料表的 CSS 樣式規則的相關聯<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控制項設定為其預設值。"
  remarks: "特定資料表的 CSS 樣式規則設定為其預設值使用<xref:System.Web.UI.WebControls.FormView.BackImageUrl%2A>， <xref:System.Web.UI.WebControls.FormView.CellPadding%2A>， <xref:System.Web.UI.WebControls.FormView.CellSpacing%2A>， <xref:System.Web.UI.WebControls.FormView.GridLines%2A>，<xref:System.Web.UI.WebControls.FormView.HorizontalAlign%2A>和<xref:System.Web.UI.WebControls.Style.Font%2A>屬性。</xref:System.Web.UI.WebControls.Style.Font%2A> </xref:System.Web.UI.WebControls.FormView.HorizontalAlign%2A> </xref:System.Web.UI.WebControls.FormView.GridLines%2A> </xref:System.Web.UI.WebControls.FormView.CellSpacing%2A> </xref:System.Web.UI.WebControls.FormView.CellPadding%2A> </xref:System.Web.UI.WebControls.FormView.BackImageUrl%2A>"
  syntax:
    content: protected virtual string ModifiedOuterTableStylePropertyName ();
    parameters: []
    return:
      type: System.String
      description: "與相關聯的預設 CSS 樣式規則<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控制項。"
  overload: System.Web.UI.WebControls.FormView.ModifiedOuterTableStylePropertyName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.OnBubbleEvent(System.Object,System.EventArgs)
  id: OnBubbleEvent(System.Object,System.EventArgs)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: OnBubbleEvent(Object,EventArgs)
  nameWithType: FormView.OnBubbleEvent(Object,EventArgs)
  fullName: System.Web.UI.WebControls.FormView.OnBubbleEvent(Object,EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "處理透過在控制項階層架構中向上傳遞的事件。"
  remarks: "<xref:System.Web.UI.Control.OnBubbleEvent%2A?displayProperty=fullName>方法由控制項來選擇性地處理透過由在控制項階層架構中向上傳遞的事件<xref:System.Web.UI.Control.RaiseBubbleEvent%2A>方法。</xref:System.Web.UI.Control.RaiseBubbleEvent%2A> </xref:System.Web.UI.Control.OnBubbleEvent%2A?displayProperty=fullName> 它會判斷是否要檢查的內容來處理事件<xref:System.EventArgs>中所含物件`e`參數。</xref:System.EventArgs> 當事件需要處理時，此方法會執行適當的動作。 會忽略其他事件，並在控制項階層架構中向上傳遞。 這個方法會指出是否要將事件傳遞進一步設定在控制項階層架構，透過它的傳回值。       <xref:System.Web.UI.WebControls.FormView>Control 覆寫這個方法，以在按一下其中一個辨識控制項的按鈕時執行適當的動作的基底實作。</xref:System.Web.UI.WebControls.FormView> 下表列出的命令按鈕的<xref:System.Web.UI.WebControls.FormView>控制項辨認。</xref:System.Web.UI.WebControls.FormView>      |按鈕 |CommandName 值 |描述 |  |------------|-----------------------|-----------------|  |取消 |&quot;取消&quot;|取消作業，並捨棄使用者所輸入的值，更新或插入作業中使用。 <xref:System.Web.UI.WebControls.FormView>控制然後返回<xref:System.Web.UI.WebControls.FormView.DefaultMode%2A>屬性所指定的模式。 |  |刪除 |&quot;刪除&quot;|刪除作業中使用資料來源刪除顯示的記錄。</xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> </xref:System.Web.UI.WebControls.FormView> 引發<xref:System.Web.UI.WebControls.FormView.ItemDeleting>和事件<xref:System.Web.UI.WebControls.FormView.ItemDeleted>。 |  |編輯 |&quot;編輯&quot;|在更新作業中用來放置<xref:System.Web.UI.WebControls.FormView>控制項處於編輯模式。</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView.ItemDeleted> </xref:System.Web.UI.WebControls.FormView.ItemDeleting> <xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>屬性中指定的內容會顯示為資料列。 |  |插入 |&quot;插入&quot;|在插入作業中用來嘗試在資料來源中插入新的記錄，使用者所提供的值。</xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A> 引發<xref:System.Web.UI.WebControls.FormView.ItemInserting>和<xref:System.Web.UI.WebControls.FormView.ItemInserted>事件。 |  |新 |&quot;新增&quot;|在插入作業中用來放置<xref:System.Web.UI.WebControls.FormView>在插入模式下的控制項。</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView.ItemInserted> </xref:System.Web.UI.WebControls.FormView.ItemInserting> <xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>屬性中指定的內容會顯示為資料列。 |  |頁面 |&quot;頁面&quot;|在分頁作業中用來代表執行分頁的頁面巡覽列中按鈕。</xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A> 指定的分頁作業，請設定`CommandArgument`下一步 」、 「 Prev&quot;、&quot;First&quot;、 「 最後 」，或要瀏覽頁面的索引按鈕的屬性。 引發<xref:System.Web.UI.WebControls.FormView.PageIndexChanging>和<xref:System.Web.UI.WebControls.FormView.PageIndexChanged>事件。</xref:System.Web.UI.WebControls.FormView.PageIndexChanged> </xref:System.Web.UI.WebControls.FormView.PageIndexChanging> **注意︰**這種類型的按鈕通常只用於頁面巡覽區範本。 |  |Update |&quot;更新&quot;|用於更新作業，以嘗試更新資料來源中顯示的記錄，使用者所提供的值。 引發<xref:System.Web.UI.WebControls.FormView.ItemUpdating>和<xref:System.Web.UI.WebControls.FormView.ItemUpdated>事件。 |      這個版本的方法會傳回`true`當其中一個按鈕處理。</xref:System.Web.UI.WebControls.FormView.ItemUpdated> </xref:System.Web.UI.WebControls.FormView.ItemUpdating> 如需事件反昇的詳細資訊，請參閱[NIB︰ 事件和委派](http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115)。"
  syntax:
    content: protected override bool OnBubbleEvent (object source, EventArgs e);
    parameters:
    - id: source
      type: System.Object
      description: "事件來源。"
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>包含事件資料。</xref:System.EventArgs>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>表示事件應該傳遞進一步向上在控制項階層架構中;否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.FormView.OnBubbleEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.OnInit(System.EventArgs)
  id: OnInit(System.EventArgs)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: OnInit(EventArgs)
  nameWithType: FormView.OnInit(EventArgs)
  fullName: System.Web.UI.WebControls.FormView.OnInit(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引發<xref href=&quot;System.Web.UI.Control.Init&quot;></xref>事件。"
  remarks: "OnInit 方法會呼叫<xref:System.Web.UI.WebControls.FormView>控制項引發<xref:System.Web.UI.Control.Init>事件。</xref:System.Web.UI.Control.Init> </xref:System.Web.UI.WebControls.FormView> 擴充<xref:System.Web.UI.WebControls.FormView>類別</xref:System.Web.UI.WebControls.FormView>時，它通常會由控制項開發人員使用       引發事件會透過委派事件處理常式叫用。 如需詳細資訊，請參閱[NIB︰ 引發事件](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)。       OnInit 方法也允許衍生的類別處理事件，而不用附加委派。 這是處理衍生類別中的事件的慣用的技巧。"
  syntax:
    content: protected override void OnInit (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>包含事件資料。</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.FormView.OnInit*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.OnItemCommand(System.Web.UI.WebControls.FormViewCommandEventArgs)
  id: OnItemCommand(System.Web.UI.WebControls.FormViewCommandEventArgs)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: OnItemCommand(FormViewCommandEventArgs)
  nameWithType: FormView.OnItemCommand(FormViewCommandEventArgs)
  fullName: System.Web.UI.WebControls.FormView.OnItemCommand(FormViewCommandEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引發<xref href=&quot;System.Web.UI.WebControls.FormView.ItemCommand&quot;></xref>事件。"
  remarks: "會呼叫數方法<xref:System.Web.UI.WebControls.FormView>控制項引發<xref:System.Web.UI.WebControls.FormView.ItemCommand>事件。</xref:System.Web.UI.WebControls.FormView.ItemCommand> </xref:System.Web.UI.WebControls.FormView> 擴充<xref:System.Web.UI.WebControls.FormView>類別</xref:System.Web.UI.WebControls.FormView>時，它通常會由控制項開發人員使用       引發事件會透過委派事件處理常式叫用。 如需詳細資訊，請參閱[NIB︰ 引發事件](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)。       數方法也允許衍生的類別處理事件，而不用附加委派。 這是處理衍生類別中的事件的慣用的技巧。"
  syntax:
    content: protected virtual void OnItemCommand (System.Web.UI.WebControls.FormViewCommandEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.FormViewCommandEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.FormViewCommandEventArgs&quot;> </xref>包含事件資料。"
  overload: System.Web.UI.WebControls.FormView.OnItemCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.OnItemCreated(System.EventArgs)
  id: OnItemCreated(System.EventArgs)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: OnItemCreated(EventArgs)
  nameWithType: FormView.OnItemCreated(EventArgs)
  fullName: System.Web.UI.WebControls.FormView.OnItemCreated(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引發<xref href=&quot;System.Web.UI.WebControls.FormView.ItemCreated&quot;></xref>事件。"
  remarks: "OnItemCreated 方法由呼叫<xref:System.Web.UI.WebControls.FormView>控制項引發<xref:System.Web.UI.WebControls.FormView.ItemCreated>事件。</xref:System.Web.UI.WebControls.FormView.ItemCreated> </xref:System.Web.UI.WebControls.FormView> 擴充<xref:System.Web.UI.WebControls.FormView>類別</xref:System.Web.UI.WebControls.FormView>時，它通常會由控制項開發人員使用       引發事件會透過委派事件處理常式叫用。 如需詳細資訊，請參閱[NIB︰ 引發事件](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)。       OnItemCreated 方法也允許衍生的類別處理事件，而不用附加委派。 這是處理衍生類別中的事件的慣用的技巧。"
  syntax:
    content: protected virtual void OnItemCreated (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>包含事件資料。</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.FormView.OnItemCreated*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.OnItemDeleted(System.Web.UI.WebControls.FormViewDeletedEventArgs)
  id: OnItemDeleted(System.Web.UI.WebControls.FormViewDeletedEventArgs)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: OnItemDeleted(FormViewDeletedEventArgs)
  nameWithType: FormView.OnItemDeleted(FormViewDeletedEventArgs)
  fullName: System.Web.UI.WebControls.FormView.OnItemDeleted(FormViewDeletedEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引發<xref href=&quot;System.Web.UI.WebControls.FormView.ItemDeleted&quot;></xref>事件。"
  remarks: "OnItemDeleted 方法由呼叫<xref:System.Web.UI.WebControls.FormView>控制項引發<xref:System.Web.UI.WebControls.FormView.ItemDeleted>事件。</xref:System.Web.UI.WebControls.FormView.ItemDeleted> </xref:System.Web.UI.WebControls.FormView> 擴充<xref:System.Web.UI.WebControls.FormView>類別</xref:System.Web.UI.WebControls.FormView>時，它通常會由控制項開發人員使用       引發事件會透過委派事件處理常式叫用。 如需詳細資訊，請參閱[NIB︰ 引發事件](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)。       OnItemDeleted 方法也允許衍生的類別處理事件，而不用附加委派。 這是處理衍生類別中的事件的慣用的技巧。"
  syntax:
    content: protected virtual void OnItemDeleted (System.Web.UI.WebControls.FormViewDeletedEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.FormViewDeletedEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.FormViewDeletedEventArgs&quot;> </xref>包含事件資料。"
  overload: System.Web.UI.WebControls.FormView.OnItemDeleted*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.OnItemDeleting(System.Web.UI.WebControls.FormViewDeleteEventArgs)
  id: OnItemDeleting(System.Web.UI.WebControls.FormViewDeleteEventArgs)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: OnItemDeleting(FormViewDeleteEventArgs)
  nameWithType: FormView.OnItemDeleting(FormViewDeleteEventArgs)
  fullName: System.Web.UI.WebControls.FormView.OnItemDeleting(FormViewDeleteEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引發<xref href=&quot;System.Web.UI.WebControls.FormView.ItemDeleting&quot;></xref>事件。"
  remarks: "OnItemDeleting 方法由呼叫<xref:System.Web.UI.WebControls.FormView>控制項引發<xref:System.Web.UI.WebControls.FormView.ItemDeleting>事件。</xref:System.Web.UI.WebControls.FormView.ItemDeleting> </xref:System.Web.UI.WebControls.FormView> 擴充<xref:System.Web.UI.WebControls.FormView>類別</xref:System.Web.UI.WebControls.FormView>時，它通常會由控制項開發人員使用       引發事件會透過委派事件處理常式叫用。 如需詳細資訊，請參閱[NIB︰ 引發事件](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)。       OnItemDeleting 方法也允許衍生的類別處理事件，而不用附加委派。 這是處理衍生類別中的事件的慣用的技巧。"
  syntax:
    content: protected virtual void OnItemDeleting (System.Web.UI.WebControls.FormViewDeleteEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.FormViewDeleteEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.FormViewDeleteEventArgs&quot;> </xref>包含事件資料。"
  overload: System.Web.UI.WebControls.FormView.OnItemDeleting*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "這個方法時，會呼叫<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控制項未繫結至資料來源控制項，使用者未取消刪除作業和事件處理常式未註冊的事件。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.OnItemInserted(System.Web.UI.WebControls.FormViewInsertedEventArgs)
  id: OnItemInserted(System.Web.UI.WebControls.FormViewInsertedEventArgs)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: OnItemInserted(FormViewInsertedEventArgs)
  nameWithType: FormView.OnItemInserted(FormViewInsertedEventArgs)
  fullName: System.Web.UI.WebControls.FormView.OnItemInserted(FormViewInsertedEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引發<xref href=&quot;System.Web.UI.WebControls.FormView.ItemInserted&quot;></xref>事件。"
  remarks: "OnItemInserted 方法由呼叫<xref:System.Web.UI.WebControls.FormView>控制項引發<xref:System.Web.UI.WebControls.FormView.ItemInserted>事件。</xref:System.Web.UI.WebControls.FormView.ItemInserted> </xref:System.Web.UI.WebControls.FormView> 擴充<xref:System.Web.UI.WebControls.FormView>類別</xref:System.Web.UI.WebControls.FormView>時，它通常會由控制項開發人員使用       引發事件會透過委派事件處理常式叫用。 如需詳細資訊，請參閱[NIB︰ 引發事件](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)。       OnItemInserted 方法也允許衍生的類別處理事件，而不用附加委派。 這是處理衍生類別中的事件的慣用的技巧。"
  syntax:
    content: protected virtual void OnItemInserted (System.Web.UI.WebControls.FormViewInsertedEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.FormViewInsertedEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.FormViewInsertedEventArgs&quot;> </xref>包含事件資料。"
  overload: System.Web.UI.WebControls.FormView.OnItemInserted*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.OnItemInserting(System.Web.UI.WebControls.FormViewInsertEventArgs)
  id: OnItemInserting(System.Web.UI.WebControls.FormViewInsertEventArgs)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: OnItemInserting(FormViewInsertEventArgs)
  nameWithType: FormView.OnItemInserting(FormViewInsertEventArgs)
  fullName: System.Web.UI.WebControls.FormView.OnItemInserting(FormViewInsertEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引發<xref href=&quot;System.Web.UI.WebControls.FormView.ItemInserting&quot;></xref>事件。"
  remarks: "OnItemInserting 方法由呼叫<xref:System.Web.UI.WebControls.FormView>控制項引發<xref:System.Web.UI.WebControls.FormView.ItemInserting>事件。</xref:System.Web.UI.WebControls.FormView.ItemInserting> </xref:System.Web.UI.WebControls.FormView> 擴充<xref:System.Web.UI.WebControls.FormView>類別</xref:System.Web.UI.WebControls.FormView>時，它通常會由控制項開發人員使用       引發事件會透過委派事件處理常式叫用。 如需詳細資訊，請參閱[NIB︰ 引發事件](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)。       OnItemInserting 方法也允許衍生的類別處理事件，而不用附加委派。 這是處理衍生類別中的事件的慣用的技巧。"
  syntax:
    content: protected virtual void OnItemInserting (System.Web.UI.WebControls.FormViewInsertEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.FormViewInsertEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.FormViewInsertEventArgs&quot;> </xref>包含事件資料。"
  overload: System.Web.UI.WebControls.FormView.OnItemInserting*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "這個方法時，會呼叫<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控制項未繫結至資料來源控制項，使用者未取消的插入作業和事件處理常式未註冊的事件。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.OnItemUpdated(System.Web.UI.WebControls.FormViewUpdatedEventArgs)
  id: OnItemUpdated(System.Web.UI.WebControls.FormViewUpdatedEventArgs)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: OnItemUpdated(FormViewUpdatedEventArgs)
  nameWithType: FormView.OnItemUpdated(FormViewUpdatedEventArgs)
  fullName: System.Web.UI.WebControls.FormView.OnItemUpdated(FormViewUpdatedEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引發<xref href=&quot;System.Web.UI.WebControls.FormView.ItemUpdated&quot;></xref>事件。"
  remarks: "OnItemUpdated 方法由呼叫<xref:System.Web.UI.WebControls.FormView>控制項引發<xref:System.Web.UI.WebControls.FormView.ItemUpdated>事件。</xref:System.Web.UI.WebControls.FormView.ItemUpdated> </xref:System.Web.UI.WebControls.FormView> 擴充<xref:System.Web.UI.WebControls.FormView>類別</xref:System.Web.UI.WebControls.FormView>時，它通常會由控制項開發人員使用       引發事件會透過委派事件處理常式叫用。 如需詳細資訊，請參閱[NIB︰ 引發事件](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)。       OnItemUpdated 方法也允許衍生的類別處理事件，而不用附加委派。 這是處理衍生類別中的事件的慣用的技巧。"
  syntax:
    content: protected virtual void OnItemUpdated (System.Web.UI.WebControls.FormViewUpdatedEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.FormViewUpdatedEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.FormViewUpdatedEventArgs&quot;> </xref>包含事件資料。"
  overload: System.Web.UI.WebControls.FormView.OnItemUpdated*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.OnItemUpdating(System.Web.UI.WebControls.FormViewUpdateEventArgs)
  id: OnItemUpdating(System.Web.UI.WebControls.FormViewUpdateEventArgs)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: OnItemUpdating(FormViewUpdateEventArgs)
  nameWithType: FormView.OnItemUpdating(FormViewUpdateEventArgs)
  fullName: System.Web.UI.WebControls.FormView.OnItemUpdating(FormViewUpdateEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引發<xref href=&quot;System.Web.UI.WebControls.FormView.ItemUpdating&quot;></xref>事件。"
  remarks: "OnItemUpdating 方法由呼叫<xref:System.Web.UI.WebControls.FormView>控制項引發<xref:System.Web.UI.WebControls.FormView.ItemUpdating>事件。</xref:System.Web.UI.WebControls.FormView.ItemUpdating> </xref:System.Web.UI.WebControls.FormView> 擴充<xref:System.Web.UI.WebControls.FormView>類別</xref:System.Web.UI.WebControls.FormView>時，它通常會由控制項開發人員使用       引發事件會透過委派事件處理常式叫用。 如需詳細資訊，請參閱[NIB︰ 引發事件](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)。       OnItemUpdating 方法也允許衍生的類別處理事件，而不用附加委派。 這是處理衍生類別中的事件的慣用的技巧。"
  syntax:
    content: protected virtual void OnItemUpdating (System.Web.UI.WebControls.FormViewUpdateEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.FormViewUpdateEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.FormViewUpdateEventArgs&quot;> </xref>包含事件資料。"
  overload: System.Web.UI.WebControls.FormView.OnItemUpdating*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "這個方法時，會呼叫<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控制項未繫結至資料來源控制項，使用者未取消更新作業和事件處理常式未註冊的事件。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.OnModeChanged(System.EventArgs)
  id: OnModeChanged(System.EventArgs)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: OnModeChanged(EventArgs)
  nameWithType: FormView.OnModeChanged(EventArgs)
  fullName: System.Web.UI.WebControls.FormView.OnModeChanged(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引發<xref href=&quot;System.Web.UI.WebControls.FormView.ModeChanged&quot;></xref>事件。"
  remarks: "OnModeChanged 方法由呼叫<xref:System.Web.UI.WebControls.FormView>控制項引發<xref:System.Web.UI.WebControls.FormView.ModeChanged>事件。</xref:System.Web.UI.WebControls.FormView.ModeChanged> </xref:System.Web.UI.WebControls.FormView> 擴充<xref:System.Web.UI.WebControls.FormView>類別</xref:System.Web.UI.WebControls.FormView>時，它通常會由控制項開發人員使用       引發事件會透過委派事件處理常式叫用。 如需詳細資訊，請參閱[NIB︰ 引發事件](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)。       OnModeChanged 方法也允許衍生的類別處理事件，而不用附加委派。 這是處理衍生類別中的事件的慣用的技巧。"
  syntax:
    content: protected virtual void OnModeChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>包含事件資料。</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.FormView.OnModeChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.OnModeChanging(System.Web.UI.WebControls.FormViewModeEventArgs)
  id: OnModeChanging(System.Web.UI.WebControls.FormViewModeEventArgs)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: OnModeChanging(FormViewModeEventArgs)
  nameWithType: FormView.OnModeChanging(FormViewModeEventArgs)
  fullName: System.Web.UI.WebControls.FormView.OnModeChanging(FormViewModeEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引發<xref href=&quot;System.Web.UI.WebControls.FormView.ModeChanging&quot;></xref>事件。"
  remarks: "OnModeChanging 方法由呼叫<xref:System.Web.UI.WebControls.FormView>控制項引發<xref:System.Web.UI.WebControls.FormView.ModeChanging>事件。</xref:System.Web.UI.WebControls.FormView.ModeChanging> </xref:System.Web.UI.WebControls.FormView> 擴充<xref:System.Web.UI.WebControls.FormView>類別</xref:System.Web.UI.WebControls.FormView>時，它通常會由控制項開發人員使用       引發事件會透過委派事件處理常式叫用。 如需詳細資訊，請參閱[NIB︰ 引發事件](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)。       OnModeChanging 方法也允許衍生的類別處理事件，而不用附加委派。 這是處理衍生類別中的事件的慣用的技巧。"
  syntax:
    content: protected virtual void OnModeChanging (System.Web.UI.WebControls.FormViewModeEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.FormViewModeEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.FormViewModeEventArgs&quot;> </xref>包含事件資料。"
  overload: System.Web.UI.WebControls.FormView.OnModeChanging*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "這個方法時，會呼叫<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控制項未繫結至資料來源控制項、 模式變更未取消，和事件處理常式未註冊的事件。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.OnPageIndexChanged(System.EventArgs)
  id: OnPageIndexChanged(System.EventArgs)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: OnPageIndexChanged(EventArgs)
  nameWithType: FormView.OnPageIndexChanged(EventArgs)
  fullName: System.Web.UI.WebControls.FormView.OnPageIndexChanged(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引發<xref href=&quot;System.Web.UI.WebControls.FormView.PageIndexChanged&quot;></xref>事件。"
  remarks: "OnPageIndexChanged 方法由呼叫<xref:System.Web.UI.WebControls.FormView>控制項引發<xref:System.Web.UI.WebControls.FormView.PageIndexChanged>事件。</xref:System.Web.UI.WebControls.FormView.PageIndexChanged> </xref:System.Web.UI.WebControls.FormView> 擴充<xref:System.Web.UI.WebControls.FormView>類別</xref:System.Web.UI.WebControls.FormView>時，它通常會由控制項開發人員使用       引發事件會透過委派事件處理常式叫用。 如需詳細資訊，請參閱[NIB︰ 引發事件](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)。       OnPageIndexChanged 方法也允許衍生的類別處理事件，而不用附加委派。 這是處理衍生類別中的事件的慣用的技巧。"
  syntax:
    content: protected virtual void OnPageIndexChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>包含事件資料。</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.FormView.OnPageIndexChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.OnPageIndexChanging(System.Web.UI.WebControls.FormViewPageEventArgs)
  id: OnPageIndexChanging(System.Web.UI.WebControls.FormViewPageEventArgs)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: OnPageIndexChanging(FormViewPageEventArgs)
  nameWithType: FormView.OnPageIndexChanging(FormViewPageEventArgs)
  fullName: System.Web.UI.WebControls.FormView.OnPageIndexChanging(FormViewPageEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引發<xref href=&quot;System.Web.UI.WebControls.FormView.PageIndexChanging&quot;></xref>事件。"
  remarks: "OnPageIndexChanging 方法由呼叫<xref:System.Web.UI.WebControls.FormView>控制項引發<xref:System.Web.UI.WebControls.FormView.PageIndexChanging>事件。</xref:System.Web.UI.WebControls.FormView.PageIndexChanging> </xref:System.Web.UI.WebControls.FormView> 擴充<xref:System.Web.UI.WebControls.FormView>類別</xref:System.Web.UI.WebControls.FormView>時，它通常會由控制項開發人員使用       引發事件會透過委派事件處理常式叫用。 如需詳細資訊，請參閱[NIB︰ 引發事件](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)。       OnPageIndexChanging 方法也允許衍生的類別處理事件，而不用附加委派。 這是處理衍生類別中的事件的慣用的技巧。"
  syntax:
    content: protected virtual void OnPageIndexChanging (System.Web.UI.WebControls.FormViewPageEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.FormViewPageEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.FormViewPageEventArgs&quot;> </xref>包含事件資料。"
  overload: System.Web.UI.WebControls.FormView.OnPageIndexChanging*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "這個方法時，會呼叫<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控制項未繫結至資料來源控制項、 未取消的分頁作業，和事件處理常式未註冊的事件。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.PageCount
  id: PageCount
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: PageCount
  nameWithType: FormView.PageCount
  fullName: System.Web.UI.WebControls.FormView.PageCount
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得顯示資料來源中的每一筆記錄所需的分頁總數。"
  remarks: "啟用分頁功能時 (當<xref:System.Web.UI.WebControls.FormView.AllowPaging%2A>屬性設定為`true`)，使用 PageCount 屬性來判斷基礎資料來源中的記錄總數。</xref:System.Web.UI.WebControls.FormView.AllowPaging%2A>      > [!NOTE] > 因為<xref:System.Web.UI.WebControls.FormView>控制項會顯示一次只有一筆記錄，此值對應至顯示資料來源中的每一筆記錄所需的分頁總數。</xref:System.Web.UI.WebControls.FormView> 此值才會準確之後會發生資料繫結。       若要判斷目前的記錄從基礎資料來源的索引，請使用<xref:System.Web.UI.WebControls.FormView.PageIndex%2A>屬性。</xref:System.Web.UI.WebControls.FormView.PageIndex%2A>"
  example:
  - "The following example demonstrates how to use the PageCount property to determine the total number of records displayed in the control.  \n  \n [!code-cs[FormViewPagerTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_653_1.aspx)]\n [!code-vb[FormViewPagerTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_653_1.aspx)]"
  syntax:
    content: public virtual int PageCount { get; }
    return:
      type: System.Int32
      description: "基礎資料來源中的項目數目。"
  overload: System.Web.UI.WebControls.FormView.PageCount*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.PageIndex
  id: PageIndex
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: PageIndex
  nameWithType: FormView.PageIndex
  fullName: System.Web.UI.WebControls.FormView.PageIndex
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定顯示頁面的索引。"
  remarks: "啟用分頁功能時 (當<xref:System.Web.UI.WebControls.FormView.AllowPaging%2A>屬性設定為`true`)，使用 PageIndex 屬性來判斷目前所顯示的記錄的索引。</xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> 您也可以使用這個屬性，以程式設計方式變更顯示的記錄。      > [!NOTE] > 啟用分頁功能時，您也可以使用這個屬性來判斷顯示; 記錄的頁面數目但是要注意這個屬性是以零為起始。       若要判斷資料來源中的項目總數，請使用<xref:System.Web.UI.WebControls.FormView.PageCount%2A>屬性。</xref:System.Web.UI.WebControls.FormView.PageCount%2A>"
  example:
  - "The following example demonstrates how to use the PageIndex property to determine the page index of the displayed record.  \n  \n [!code-cs[FormViewPagerTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_319_1.aspx)]\n [!code-vb[FormViewPagerTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_319_1.aspx)]"
  syntax:
    content: public virtual int PageIndex { get; set; }
    return:
      type: System.Int32
      description: "以零為起始的索引中所顯示的資料項目的<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>從基礎資料來源的控制項。"
  overload: System.Web.UI.WebControls.FormView.PageIndex*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "選取的值為小於-1。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.PageIndexChanged
  id: PageIndexChanged
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: PageIndexChanged
  nameWithType: FormView.PageIndexChanged
  fullName: System.Web.UI.WebControls.FormView.PageIndexChanged
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "發生時的值<xref:System.Web.UI.WebControls.FormView.PageIndex*>分頁作業之後的屬性變更。</xref:System.Web.UI.WebControls.FormView.PageIndex*>"
  remarks: "<xref:System.Web.UI.WebControls.FormView>控制項時，引發 PageIndexChanged 事件頁面巡覽區按鈕 (按鈕，以使用其`CommandName`屬性設定為 「 頁面 」) 控制項內按一下時，但之後<xref:System.Web.UI.WebControls.FormView>控制項負責的分頁作業。</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView> 這可讓您提供執行自訂的常式，每當發生此事件的事件處理方法。      > [!NOTE] > 以程式設計方式設定時，不會引發這個事件<xref:System.Web.UI.WebControls.FormView.PageIndex%2A>屬性。</xref:System.Web.UI.WebControls.FormView.PageIndex%2A>       頁面巡覽區按鈕通常位於中的頁面巡覽區列<xref:System.Web.UI.WebControls.FormView>控制項。</xref:System.Web.UI.WebControls.FormView> 此事件通常用來同步處理<xref:System.Web.UI.WebControls.FormView>用來控制<xref:System.Web.UI.WebControls.GridView>控制項或設定行為<xref:System.Web.UI.WebControls.FormView>分頁作業之後的控制項。</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.FormView>       如需處理事件的詳細資訊，請參閱[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。"
  example:
  - "The following example demonstrates how to use the PageIndexChanged event to return the <xref:System.Web.UI.WebControls.FormView> to read-only mode when the user navigates to another record.  \n  \n [!code-vb[FormViewPageIndexChanged#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_142_1.aspx)]\n [!code-cs[FormViewPageIndexChanged#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_142_1.aspx)]"
  syntax:
    content: public event EventHandler PageIndexChanged;
    return:
      type: System.EventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.PageIndexChanging
  id: PageIndexChanging
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: PageIndexChanging
  nameWithType: FormView.PageIndexChanging
  fullName: System.Web.UI.WebControls.FormView.PageIndexChanging
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "發生時的值<xref:System.Web.UI.WebControls.FormView.PageIndex*>分頁作業之前的屬性變更。</xref:System.Web.UI.WebControls.FormView.PageIndex*>"
  remarks: "<xref:System.Web.UI.WebControls.FormView>控制項時，引發 PageIndexChanging 事件頁面巡覽區按鈕 (按鈕，以使用其`CommandName`屬性設定為 「 頁面 」) 控制項內按一下時前,<xref:System.Web.UI.WebControls.FormView>控制項負責的分頁作業。</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView> 這可讓您提供執行自訂的常式，例如取消分頁作業時就會發生此事件的事件處理方法。      > [!NOTE] > 以程式設計方式設定時，不會引發這個事件<xref:System.Web.UI.WebControls.FormView.PageIndex%2A>屬性。</xref:System.Web.UI.WebControls.FormView.PageIndex%2A>       頁面巡覽區按鈕通常位於中的頁面巡覽區列<xref:System.Web.UI.WebControls.FormView>控制項。</xref:System.Web.UI.WebControls.FormView>       A<xref:System.Web.UI.WebControls.FormViewPageEventArgs>物件傳遞給事件處理方法，後者則可讓您判斷使用者所選頁面的索引，並指出應該取消的分頁作業。</xref:System.Web.UI.WebControls.FormViewPageEventArgs> 若要判斷使用者所選頁面的索引，請使用<xref:System.Web.UI.WebControls.FormViewPageEventArgs.NewPageIndex%2A>屬性。</xref:System.Web.UI.WebControls.FormViewPageEventArgs.NewPageIndex%2A> 若要取消的分頁作業，請設定<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>屬性<xref:System.Web.UI.WebControls.FormViewPageEventArgs>物件`true`。</xref:System.Web.UI.WebControls.FormViewPageEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A>       如需處理事件的詳細資訊，請參閱[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。"
  example:
  - "The following example demonstrates how to use the PageIndexChanging event to cancel a paging operation.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[FormViewPageEventArgs#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_120_1.aspx)]\n [!code-vb[FormViewPageEventArgs#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_120_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.FormViewPageEventHandler PageIndexChanging;
    return:
      type: System.Web.UI.WebControls.FormViewPageEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.PagerSettings
  id: PagerSettings
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: PagerSettings
  nameWithType: FormView.PagerSettings
  fullName: System.Web.UI.WebControls.FormView.PagerSettings
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得參考<xref href=&quot;System.Web.UI.WebControls.PagerSettings&quot;></xref>物件，可讓您設定的屬性中的頁面巡覽區按鈕<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控制項。"
  remarks: "使用 PagerSettings 屬性來控制的設定中的頁面巡覽區列<xref:System.Web.UI.WebControls.FormView>控制項。</xref:System.Web.UI.WebControls.FormView> 頁面巡覽列會顯示啟用分頁功能時 (當<xref:System.Web.UI.WebControls.FormView.AllowPaging%2A>屬性設定為`true`)，並包含可讓使用者瀏覽至不同的記錄控制項中的控制項。</xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> 這個屬性是唯讀的。不過，您可以設定的屬性<xref:System.Web.UI.WebControls.PagerSettings>它所傳回的物件。</xref:System.Web.UI.WebControls.PagerSettings> 可以以宣告方式設定的屬性，在表單中`Property-Subproperty`，其中`Subproperty`屬性<xref:System.Web.UI.WebControls.PagerSettings>物件 (例如， `PagerSettings-Mode`)。</xref:System.Web.UI.WebControls.PagerSettings> 屬性也可以設定以程式設計方式在表單中`Property.Subproperty`(例如， `PagerSettings.Mode`)。 頁面巡覽區列的顯示模式和自訂文字或影像的導覽控制項，通常包含一般設定。"
  example:
  - "The following example demonstrates how to use the PagerSettings property to specify the properties of the pager row.  \n  \n [!code-cs[FormViewAllowPaging#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_238_1.aspx)]\n [!code-vb[FormViewAllowPaging#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_238_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.PagerSettings PagerSettings { get; }
    return:
      type: System.Web.UI.WebControls.PagerSettings
      description: "若要參考<xref href=&quot;System.Web.UI.WebControls.PagerSettings&quot;> </xref> ，可讓您設定的屬性中的頁面巡覽區按鈕<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控制項。"
  overload: System.Web.UI.WebControls.FormView.PagerSettings*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.PagerStyle
  id: PagerStyle
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: PagerStyle
  nameWithType: FormView.PagerStyle
  fullName: System.Web.UI.WebControls.FormView.PagerStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得參考<xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;></xref>物件，可讓您設定的頁面巡覽列中的外觀<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控制項。"
  remarks: "使用 PagerStyle 屬性來控制頁面巡覽列中的外觀<xref:System.Web.UI.WebControls.FormView>控制項。</xref:System.Web.UI.WebControls.FormView> 頁面巡覽列會顯示啟用分頁功能時 (當<xref:System.Web.UI.WebControls.FormView.AllowPaging%2A>屬性設定為`true`)，且包含可讓使用者瀏覽至控制項中的不同頁面的控制項。</xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> 這個屬性是唯讀的。不過，您可以設定的屬性<xref:System.Web.UI.WebControls.TableItemStyle>它所傳回的物件。</xref:System.Web.UI.WebControls.TableItemStyle> 可以設定的屬性，以宣告方式使用下列方法之一:-將屬性放在開頭標記<xref:System.Web.UI.WebControls.FormView>控制項在表單中的`Property-Subproperty`，其中`Subproperty`是屬性的<xref:System.Web.UI.WebControls.TableItemStyle>物件 (例如， `PagerStyle-ForeColor`)。</xref:System.Web.UI.WebControls.TableItemStyle> </xref:System.Web.UI.WebControls.FormView>      -巢狀`<PagerRowStyle>`開頭和結尾標記之間的項目<xref:System.Web.UI.WebControls.FormView>控制項。</xref:System.Web.UI.WebControls.FormView>       屬性也可以設定以程式設計方式在表單中`Property.Subproperty`(例如， `PagerStyle.ForeColor`)。 常見的設定通常包括自訂背景色彩、 前景色彩和字型屬性。"
  example:
  - "The following example demonstrates how to use the PagerStyle property to specify the style settings for the pager row.  \n  \n [!code-cs[FormViewAllowPaging#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_425_1.aspx)]\n [!code-vb[FormViewAllowPaging#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_425_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TableItemStyle PagerStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "若要參考<xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;></xref>表示中的頁面巡覽區列的樣式<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控制項。"
  overload: System.Web.UI.WebControls.FormView.PagerStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.PagerTemplate
  id: PagerTemplate
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: PagerTemplate
  nameWithType: FormView.PagerTemplate
  fullName: System.Web.UI.WebControls.FormView.PagerTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定頁面巡覽列中的自訂內容<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控制項。"
  remarks: "頁面巡覽列會顯示在<xref:System.Web.UI.WebControls.FormView>控制啟用分頁功能時 (當<xref:System.Web.UI.WebControls.FormView.AllowPaging%2A>屬性設定為 true)。</xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> </xref:System.Web.UI.WebControls.FormView> 頁面巡覽區列包含允許使用者瀏覽至控制項中的不同頁面的控制項。 而不是使用內建的頁面巡覽區的資料列的使用者介面 (UI)，您可以定義自己的 UI 使用 PagerTemplate 屬性。      > [!NOTE] > 屬性設定它的時的 PagerTemplate 覆寫內建的頁面巡覽列 UI。       若要指定頁面巡覽區列的自訂範本，先將`<PagerTemplate>`標記的開頭和結尾標記之間<xref:System.Web.UI.WebControls.FormView>控制項。</xref:System.Web.UI.WebControls.FormView> 然後，您可以列出範本的開頭和結尾之間的內容`<PagerTemplate>`標記。 若要控制項目的出現的頁面巡覽列，使用<xref:System.Web.UI.WebControls.FormView.PagerStyle%2A>屬性。</xref:System.Web.UI.WebControls.FormView.PagerStyle%2A>       通常，按鈕控制項就會加入至頁面巡覽區範本，進行分頁作業。 <xref:System.Web.UI.WebControls.FormView>分頁作業使用的按鈕控制項時，控制項執行其`CommandName`按一下屬性設定為 「 頁面 」。</xref:System.Web.UI.WebControls.FormView> 按鈕的`CommandArgument`屬性會決定要執行的分頁作業的類型。 下表列出支援的命令引數值<xref:System.Web.UI.WebControls.FormView>控制項。</xref:System.Web.UI.WebControls.FormView>      |CommandArgument 值 |描述 |  |---------------------------|-----------------|  |&quot;下一步&quot;|巡覽至下一頁。 |  |&quot;Prev&quot;|導覽至上一頁。 |  |&quot;第一個&quot;|巡覽至第一頁。 |  |&quot;最後一個&quot;|巡覽至最後一頁。 |  |整數值 |巡覽至指定的頁面數目。 |"
  example:
  - "The following example demonstrates how to define a custom pager template.  \n  \n [!code-cs[FormViewPagerTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_644_1.aspx)]\n [!code-vb[FormViewPagerTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_644_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate PagerTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "A <xref href=&quot;System.Web.UI.ITemplate&quot;> </xref>包含頁面巡覽區列的自訂內容。 預設值為 null，表示這個屬性未設定。"
  overload: System.Web.UI.WebControls.FormView.PagerTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.PerformDataBinding(System.Collections.IEnumerable)
  id: PerformDataBinding(System.Collections.IEnumerable)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: PerformDataBinding(IEnumerable)
  nameWithType: FormView.PerformDataBinding(IEnumerable)
  fullName: System.Web.UI.WebControls.FormView.PerformDataBinding(IEnumerable)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "將繫結至指定的資料來源<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控制項。"
  remarks: "PerformDataBinding 方法是 helper 方法，由呼叫<xref:System.Web.UI.WebControls.FormView>指定的資料來源繫結至控制項的控制項。</xref:System.Web.UI.WebControls.FormView>"
  syntax:
    content: protected override void PerformDataBinding (System.Collections.IEnumerable data);
    parameters:
    - id: data
      type: System.Collections.IEnumerable
      description: "<xref:System.Collections.IEnumerable>，代表資料來源。</xref:System.Collections.IEnumerable>"
  overload: System.Web.UI.WebControls.FormView.PerformDataBinding*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.PrepareControlHierarchy
  id: PrepareControlHierarchy
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: PrepareControlHierarchy()
  nameWithType: FormView.PrepareControlHierarchy()
  fullName: System.Web.UI.WebControls.FormView.PrepareControlHierarchy()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "設定控制項階層架構的<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控制項。"
  remarks: "PrepareControlHierarchy 方法是 helper 方法，由呼叫<xref:System.Web.UI.WebControls.FormView>控制來設定在控制項階層架構中向上<xref:System.Web.UI.WebControls.FormView>控制之前要呈現控制項。</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView>"
  syntax:
    content: protected virtual void PrepareControlHierarchy ();
    parameters: []
  overload: System.Web.UI.WebControls.FormView.PrepareControlHierarchy*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.RaisePostBackEvent(System.String)
  id: RaisePostBackEvent(System.String)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: RaisePostBackEvent(String)
  nameWithType: FormView.RaisePostBackEvent(String)
  fullName: System.Web.UI.WebControls.FormView.RaisePostBackEvent(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引發的適當事件<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控制當回傳至伺服器。"
  remarks: "Web 網頁會呼叫方法，當回傳事件發生時就會引發的適當事件 RaisePostBackEvent<xref:System.Web.UI.WebControls.FormView>控制項。</xref:System.Web.UI.WebControls.FormView> 這個呼叫發生在頁面生命週期中載入和變更的通知完成後，但尚未發生之前。 已經實作這個方法，以建立<xref:System.Web.UI.WebControls.CommandEventArgs>物件引發的事件。</xref:System.Web.UI.WebControls.CommandEventArgs>      > [!NOTE] > 這個方法用於主要由控制項開發人員擴充<xref:System.Web.UI.WebControls.FormView>控制項。</xref:System.Web.UI.WebControls.FormView>"
  syntax:
    content: protected virtual void RaisePostBackEvent (string eventArgument);
    parameters:
    - id: eventArgument
      type: System.String
      description: "事件引數，用來建立<xref href=&quot;System.Web.UI.WebControls.CommandEventArgs&quot;></xref>事件或事件所引發。"
  overload: System.Web.UI.WebControls.FormView.RaisePostBackEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.Render(System.Web.UI.HtmlTextWriter)
  id: Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: Render(HtmlTextWriter)
  nameWithType: FormView.Render(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.FormView.Render(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "顯示<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>用戶端上的控制項。"
  remarks: "Render 方法用來呈現伺服器控制項內容，以使用指定的用戶端瀏覽器<xref:System.Web.UI.HtmlTextWriter>物件。</xref:System.Web.UI.HtmlTextWriter>"
  syntax:
    content: protected override void Render (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> ，其中包含要在用戶端上呈現的輸出資料流。"
  overload: System.Web.UI.WebControls.FormView.Render*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.RenderOuterTable
  id: RenderOuterTable
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: RenderOuterTable
  nameWithType: FormView.RenderOuterTable
  fullName: System.Web.UI.WebControls.FormView.RenderOuterTable
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定值，指出控制項是否含括在轉譯的 HTML <xref uid=&quot;langword_csharp_table&quot; name=&quot;table&quot; href=&quot;&quot;> </xref>才能套用內嵌樣式的項目。"
  remarks: "為了讓內嵌樣式屬性，例如<xref:System.Web.UI.WebControls.WebControl.ForeColor%2A>套用到所有的轉譯控制項的 HTML，ASP.NET 含括在轉譯的 HTML`table`項目。</xref:System.Web.UI.WebControls.WebControl.ForeColor%2A> 如果您不想外部`table`要呈現的項目會將此屬性設定為`false`。 在此情況下，如果您嘗試設定內嵌套用至整個控制項的樣式屬性，就會擲回例外狀況。"
  syntax:
    content: public virtual bool RenderOuterTable { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果控制項含括在轉譯的 HTML <xref uid=&quot;langword_csharp_table&quot; name=&quot;table&quot; href=&quot;&quot;> </xref>項目，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.FormView.RenderOuterTable*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.Row
  id: Row
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: Row
  nameWithType: FormView.Row
  fullName: System.Web.UI.WebControls.FormView.Row
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得<xref href=&quot;System.Web.UI.WebControls.FormViewRow&quot;></xref>物件，表示中的資料列<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控制項。"
  remarks: "使用資料列屬性，若要以程式設計方式存取<xref:System.Web.UI.WebControls.FormViewRow>物件，表示資料列。</xref:System.Web.UI.WebControls.FormViewRow> 資料列包含不同的內容以範本為目前的模式呈現 (指定的<xref:System.Web.UI.WebControls.FormView.CurrentMode%2A>屬性)。</xref:System.Web.UI.WebControls.FormView.CurrentMode%2A> 您只可以存取目前的模式的範本的內容。 下表顯示每個模式所用的範本。      |模式 |轉譯範本 |  |----------|-----------------------|  |編輯 |<xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>|  |插入 |<xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>|  |唯讀 |<xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>|     > [!NOTE] > 的資料列屬性之後，才可被<xref:System.Web.UI.WebControls.FormView>控制項建立中的資料列<xref:System.Web.UI.WebControls.FormView.ItemCreated>事件。</xref:System.Web.UI.WebControls.FormView.ItemCreated> </xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A> </xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A> </xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>       這個屬性通常用於您需要以程式設計方式管理資料列時，例如當加入自訂內容。 資料列屬性的任何修改後必須執行<xref:System.Web.UI.WebControls.FormView>控制項已資料繫結，否則<xref:System.Web.UI.WebControls.FormView>控制會覆寫任何變更。</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView>"
  example:
  - "The following example demonstrates how to use the Row property to access the properties of the data row during the <xref:System.Web.UI.WebControls.FormView.ItemCreated> event.  \n  \n [!code-cs[FormViewRow#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1104_1.aspx)]\n [!code-vb[FormViewRow#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1104_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.FormViewRow Row { get; }
    return:
      type: System.Web.UI.WebControls.FormViewRow
      description: "<xref href=&quot;System.Web.UI.WebControls.FormViewRow&quot;> </xref>表示中的資料列<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控制項。"
  overload: System.Web.UI.WebControls.FormView.Row*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.RowStyle
  id: RowStyle
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: RowStyle
  nameWithType: FormView.RowStyle
  fullName: System.Web.UI.WebControls.FormView.RowStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得參考<xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;></xref>物件，可讓您設定中的資料列的外觀<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控制當控制項處於唯讀模式。"
  remarks: "若要控制資料的外觀 RowStyle 屬性資料列時使用<xref:System.Web.UI.WebControls.FormView>控制項處於唯讀狀態 （顯示） 模式。</xref:System.Web.UI.WebControls.FormView> 當<xref:System.Web.UI.WebControls.FormView>控制項處於唯讀模式中，資料列會顯示所指定的使用者定義內容<xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>屬性。</xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A> </xref:System.Web.UI.WebControls.FormView> 這個屬性是唯讀的。不過，您可以設定的屬性<xref:System.Web.UI.WebControls.TableItemStyle>它所傳回的物件。</xref:System.Web.UI.WebControls.TableItemStyle> 可以設定的屬性，以宣告方式使用下列方法之一:-將屬性放在開頭標記<xref:System.Web.UI.WebControls.FormView>控制項在表單中的`Property-Subproperty`，其中`Subproperty`是屬性的<xref:System.Web.UI.WebControls.TableItemStyle>物件 (例如， `RowStyle-ForeColor`)。</xref:System.Web.UI.WebControls.TableItemStyle> </xref:System.Web.UI.WebControls.FormView>      -巢狀`<RowStyle>`開頭和結尾標記之間的項目<xref:System.Web.UI.WebControls.FormView>控制項。</xref:System.Web.UI.WebControls.FormView>       屬性也可以設定以程式設計方式在表單中`Property.Subproperty`(例如， `RowStyle.ForeColor`)。 常見的設定通常包括自訂背景色彩、 前景色彩和字型屬性。"
  example:
  - "The following example demonstrates how to use the RowStyle property to specify a custom style for a data row when a <xref:System.Web.UI.WebControls.FormView> control is in read-only mode.  \n  \n [!code-vb[FormViewEditItemTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_235_1.aspx)]\n [!code-cs[FormViewEditItemTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_235_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TableItemStyle RowStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "若要參考<xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;></xref>表示中的資料列的樣式<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控制當控制項處於唯讀模式。"
  overload: System.Web.UI.WebControls.FormView.RowStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.SaveControlState
  id: SaveControlState
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: SaveControlState()
  nameWithType: FormView.SaveControlState()
  fullName: System.Web.UI.WebControls.FormView.SaveControlState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "儲存的狀態<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控制項屬性需要保存，即使&lt;xref:System.Web.UI.Control.EnableViewState%2A?displayProperty=fullName&gt;屬性設定為<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  remarks: "這個方法用來儲存的狀態<xref:System.Web.UI.WebControls.FormView>控制項屬性需要保存，即使<xref:System.Web.UI.Control.EnableViewState%2A?displayProperty=fullName>屬性設定為`false`。</xref:System.Web.UI.Control.EnableViewState%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.FormView>      > [!NOTE] > 這個方法用於主要由控制項開發人員擴充<xref:System.Web.UI.WebControls.FormView>控制項。</xref:System.Web.UI.WebControls.FormView>"
  syntax:
    content: protected override object SaveControlState ();
    parameters: []
    return:
      type: System.Object
      description: "傳回伺服器控制項目前檢視狀態。 如果沒有與控制項關聯的檢視狀態，則這個方法會傳回<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.FormView.SaveControlState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.SaveViewState
  id: SaveViewState
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: SaveViewState()
  nameWithType: FormView.SaveViewState()
  fullName: System.Web.UI.WebControls.FormView.SaveViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "儲存目前的檢視狀態<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控制項。"
  remarks: "SaveViewState 方法是 helper 方法，由呼叫<xref:System.Web.UI.WebControls.FormView>控制項儲存控制項的狀態。</xref:System.Web.UI.WebControls.FormView>"
  syntax:
    content: protected override object SaveViewState ();
    parameters: []
    return:
      type: System.Object
      description: "<xref:System.Object>，其中包含的儲存的狀態<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控制項。</xref:System.Object>"
  overload: System.Web.UI.WebControls.FormView.SaveViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.SelectedValue
  id: SelectedValue
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: SelectedValue
  nameWithType: FormView.SelectedValue
  fullName: System.Web.UI.WebControls.FormView.SelectedValue
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得目前的記錄中的資料值<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控制項。"
  remarks: "當<xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A>設定屬性，則<xref:System.Web.UI.WebControls.FormView>控制項會自動建立<xref:System.Web.UI.WebControls.DataKey>物件，其中包含的欄位中所列的索引鍵/值組<xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A>目前記錄的屬性。</xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> </xref:System.Web.UI.WebControls.DataKey> </xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> <xref:System.Web.UI.WebControls.DataKey>物件代表的主索引鍵欄位或目前記錄的欄位，並儲存在<xref:System.Web.UI.WebControls.FormView.DataKey%2A>屬性。</xref:System.Web.UI.WebControls.FormView.DataKey%2A> </xref:System.Web.UI.WebControls.DataKey> 而不是使用<xref:System.Web.UI.WebControls.FormView.DataKey%2A>屬性來存取資料的金鑰值，您可以使用較快速的 SelectedValue 屬性。</xref:System.Web.UI.WebControls.FormView.DataKey%2A>      > [!NOTE] > 時<xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A>屬性列出多個欄位，這個屬性會傳回所列的第一個欄位的值。</xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A>"
  example:
  - "The following example demonstrates how to use the SelectedValue property to determine the value of the key field.  \n  \n [!code-cs[FormViewSelectedValue#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_824_1.aspx)]\n [!code-vb[FormViewSelectedValue#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_824_1.aspx)]"
  syntax:
    content: public object SelectedValue { get; }
    return:
      type: System.Object
      description: "資料索引鍵中的目前記錄的值<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控制項。"
  overload: System.Web.UI.WebControls.FormView.SelectedValue*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.SetPageIndex(System.Int32)
  id: SetPageIndex(System.Int32)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: SetPageIndex(Int32)
  nameWithType: FormView.SetPageIndex(Int32)
  fullName: System.Web.UI.WebControls.FormView.SetPageIndex(Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "設定目前顯示的頁面中的索引<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控制項。"
  syntax:
    content: public void SetPageIndex (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "要設定的索引。"
  overload: System.Web.UI.WebControls.FormView.SetPageIndex*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#IDataItemContainer#DataItemIndex
  id: System#Web#UI#IDataItemContainer#DataItemIndex
  isEii: true
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: System.Web.UI.IDataItemContainer.DataItemIndex
  nameWithType: FormView.System.Web.UI.IDataItemContainer.DataItemIndex
  fullName: System.Web.UI.WebControls.FormView.System.Web.UI.IDataItemContainer.DataItemIndex
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "如需這個成員的說明，請參閱&lt;xref:System.Web.UI.IDataItemContainer.DataItemIndex%2A?displayProperty=fullName&gt;。"
  remarks: "這個成員是明確介面成員實作。 它可用時，才<xref:System.Web.UI.WebControls.FormView>執行個體轉換成<xref:System.Web.UI.IDataItemContainer>介面。</xref:System.Web.UI.IDataItemContainer> </xref:System.Web.UI.WebControls.FormView>"
  syntax:
    content: int System.Web.UI.IDataItemContainer.DataItemIndex { get; }
    return:
      type: System.Int32
      description: "表示顯示索引的物件。"
  overload: System.Web.UI.WebControls.FormView.System#Web#UI#IDataItemContainer#DataItemIndex*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#IDataItemContainer#DisplayIndex
  id: System#Web#UI#IDataItemContainer#DisplayIndex
  isEii: true
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: System.Web.UI.IDataItemContainer.DisplayIndex
  nameWithType: FormView.System.Web.UI.IDataItemContainer.DisplayIndex
  fullName: System.Web.UI.WebControls.FormView.System.Web.UI.IDataItemContainer.DisplayIndex
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "如需這個成員的說明，請參閱&lt;xref:System.Web.UI.IDataItemContainer.DisplayIndex%2A?displayProperty=fullName&gt;。"
  remarks: "這個成員是明確介面成員實作。 它可用時，才<xref:System.Web.UI.WebControls.FormView>執行個體轉換成<xref:System.Web.UI.IDataItemContainer>介面。</xref:System.Web.UI.IDataItemContainer> </xref:System.Web.UI.WebControls.FormView>"
  syntax:
    content: int System.Web.UI.IDataItemContainer.DisplayIndex { get; }
    return:
      type: System.Int32
      description: "一律傳回 0。"
  overload: System.Web.UI.WebControls.FormView.System#Web#UI#IDataItemContainer#DisplayIndex*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  id: System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  isEii: true
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  nameWithType: FormView.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  fullName: System.Web.UI.WebControls.FormView.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引發事件<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控制當回傳至伺服器。"
  remarks: "網頁會呼叫 IPostBackEventHandler.RaisePostBackEvent 方法時就會發生回傳事件。 這個呼叫發生在頁面生命週期中載入和變更通知都已完成，但頁面呈現之前。"
  syntax:
    content: void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);
    parameters:
    - id: eventArgument
      type: System.String
      description: "事件引數。"
  overload: System.Web.UI.WebControls.FormView.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataKeyNames
  id: System#Web#UI#WebControls#IDataBoundControl#DataKeyNames
  isEii: true
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: System.Web.UI.WebControls.IDataBoundControl.DataKeyNames
  nameWithType: FormView.System.Web.UI.WebControls.IDataBoundControl.DataKeyNames
  fullName: System.Web.UI.WebControls.FormView.System.Web.UI.WebControls.IDataBoundControl.DataKeyNames
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定陣列，其中包含的項目會顯示在主索引鍵欄位的名稱<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控制項。"
  remarks: "這個成員是明確介面成員實作。 它可用時，才<xref:System.Web.UI.WebControls.FormView>執行個體轉換成<xref:System.Web.UI.WebControls.IDataBoundControl>介面。</xref:System.Web.UI.WebControls.IDataBoundControl> </xref:System.Web.UI.WebControls.FormView>"
  syntax:
    content: string[] System.Web.UI.WebControls.IDataBoundControl.DataKeyNames { get; set; }
    return:
      type: System.String[]
      description: "陣列，其中包含的項目會顯示在主索引鍵欄位的名稱<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控制項。"
  overload: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataKeyNames*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataMember
  id: System#Web#UI#WebControls#IDataBoundControl#DataMember
  isEii: true
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: System.Web.UI.WebControls.IDataBoundControl.DataMember
  nameWithType: FormView.System.Web.UI.WebControls.IDataBoundControl.DataMember
  fullName: System.Web.UI.WebControls.FormView.System.Web.UI.WebControls.IDataBoundControl.DataMember
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定項目清單的名稱<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控制項時，繫結至資料來源包含多個項目清單。"
  remarks: "這個成員是明確介面成員實作。 它可用時，才<xref:System.Web.UI.WebControls.FormView>執行個體轉換成<xref:System.Web.UI.WebControls.IDataBoundControl>介面。</xref:System.Web.UI.WebControls.IDataBoundControl> </xref:System.Web.UI.WebControls.FormView>"
  syntax:
    content: string System.Web.UI.WebControls.IDataBoundControl.DataMember { get; set; }
    return:
      type: System.String
      description: "資料的清單名稱的項目<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控制項繫結至。"
  overload: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataMember*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataSource
  id: System#Web#UI#WebControls#IDataBoundControl#DataSource
  isEii: true
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: System.Web.UI.WebControls.IDataBoundControl.DataSource
  nameWithType: FormView.System.Web.UI.WebControls.IDataBoundControl.DataSource
  fullName: System.Web.UI.WebControls.FormView.System.Web.UI.WebControls.IDataBoundControl.DataSource
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定物件，其中包含資料的清單， <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref>控制擷取。"
  remarks: "這個成員是明確介面成員實作。 它可用時，才<xref:System.Web.UI.WebControls.FormView>執行個體轉換成<xref:System.Web.UI.WebControls.IDataBoundControl>介面。</xref:System.Web.UI.WebControls.IDataBoundControl> </xref:System.Web.UI.WebControls.FormView>"
  syntax:
    content: object System.Web.UI.WebControls.IDataBoundControl.DataSource { get; set; }
    return:
      type: System.Object
      description: "物件，其中包含資料的清單， <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref>控制擷取。"
  overload: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataSource*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataSourceID
  id: System#Web#UI#WebControls#IDataBoundControl#DataSourceID
  isEii: true
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: System.Web.UI.WebControls.IDataBoundControl.DataSourceID
  nameWithType: FormView.System.Web.UI.WebControls.IDataBoundControl.DataSourceID
  fullName: System.Web.UI.WebControls.FormView.System.Web.UI.WebControls.IDataBoundControl.DataSourceID
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定識別碼的資料來源控制項，其中包含資料的清單項目<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控制擷取。"
  remarks: "這個成員是明確介面成員實作。 它可用時，才<xref:System.Web.UI.WebControls.FormView>執行個體轉換成<xref:System.Web.UI.WebControls.IDataBoundControl>介面。</xref:System.Web.UI.WebControls.IDataBoundControl> </xref:System.Web.UI.WebControls.FormView>"
  syntax:
    content: string System.Web.UI.WebControls.IDataBoundControl.DataSourceID { get; set; }
    return:
      type: System.String
      description: "包含的資料清單的資料來源控制項的 ID 項目， <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref>控制擷取。"
  overload: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataSourceID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataSourceObject
  id: System#Web#UI#WebControls#IDataBoundControl#DataSourceObject
  isEii: true
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: System.Web.UI.WebControls.IDataBoundControl.DataSourceObject
  nameWithType: FormView.System.Web.UI.WebControls.IDataBoundControl.DataSourceObject
  fullName: System.Web.UI.WebControls.FormView.System.Web.UI.WebControls.IDataBoundControl.DataSourceObject
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得資料來源物件，其中包含資料的清單項目， <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref>控制擷取。"
  remarks: "這個成員是明確介面成員實作。 它可用時，才<xref:System.Web.UI.WebControls.FormView>執行個體轉換成<xref:System.Web.UI.WebControls.IDataBoundControl>介面。</xref:System.Web.UI.WebControls.IDataBoundControl> </xref:System.Web.UI.WebControls.FormView>"
  syntax:
    content: System.Web.UI.IDataSource System.Web.UI.WebControls.IDataBoundControl.DataSourceObject { get; }
    return:
      type: System.Web.UI.IDataSource
      description: "資料來源物件，其中包含資料的清單項目， <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref>控制擷取。"
  overload: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataSourceObject*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundItemControl#DataKey
  id: System#Web#UI#WebControls#IDataBoundItemControl#DataKey
  isEii: true
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: System.Web.UI.WebControls.IDataBoundItemControl.DataKey
  nameWithType: FormView.System.Web.UI.WebControls.IDataBoundItemControl.DataKey
  fullName: System.Web.UI.WebControls.FormView.System.Web.UI.WebControls.IDataBoundItemControl.DataKey
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得物件，代表資料索引鍵的值中的資料列<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控制項。"
  remarks: "這個成員是明確介面成員實作。 它可用時，才<xref:System.Web.UI.WebControls.FormView>執行個體轉換成<xref:System.Web.UI.WebControls.IDataBoundControl>介面。</xref:System.Web.UI.WebControls.IDataBoundControl> </xref:System.Web.UI.WebControls.FormView>"
  syntax:
    content: System.Web.UI.WebControls.DataKey System.Web.UI.WebControls.IDataBoundItemControl.DataKey { get; }
    return:
      type: System.Web.UI.WebControls.DataKey
      description: "物件，代表資料索引鍵的值中的資料列<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控制項。"
  overload: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundItemControl#DataKey*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundItemControl#Mode
  id: System#Web#UI#WebControls#IDataBoundItemControl#Mode
  isEii: true
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: System.Web.UI.WebControls.IDataBoundItemControl.Mode
  nameWithType: FormView.System.Web.UI.WebControls.IDataBoundItemControl.Mode
  fullName: System.Web.UI.WebControls.FormView.System.Web.UI.WebControls.IDataBoundItemControl.Mode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得目前的模式<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控制項。"
  remarks: "這個成員是明確介面成員實作。 它可用時，才<xref:System.Web.UI.WebControls.FormView>執行個體轉換成<xref:System.Web.UI.WebControls.IDataBoundControl>介面。</xref:System.Web.UI.WebControls.IDataBoundControl> </xref:System.Web.UI.WebControls.FormView>"
  syntax:
    content: System.Web.UI.WebControls.DataBoundControlMode System.Web.UI.WebControls.IDataBoundItemControl.Mode { get; }
    return:
      type: System.Web.UI.WebControls.DataBoundControlMode
      description: "目前的模式<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控制項。"
  overload: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundItemControl#Mode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IPostBackContainer#GetPostBackOptions(System.Web.UI.WebControls.IButtonControl)
  id: System#Web#UI#WebControls#IPostBackContainer#GetPostBackOptions(System.Web.UI.WebControls.IButtonControl)
  isEii: true
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(IButtonControl)
  nameWithType: FormView.System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(IButtonControl)
  fullName: System.Web.UI.WebControls.FormView.System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(IButtonControl)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "決定的回傳事件選項<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控制項。"
  remarks: "IPostBackContainer.GetPostBackOptions 方法是 helper 方法所呼叫<xref:System.Web.UI.WebControls.FormView>控制項來建立<xref:System.Web.UI.PostBackOptions>物件，包含控制項的回傳事件選項。</xref:System.Web.UI.PostBackOptions> </xref:System.Web.UI.WebControls.FormView> <xref:System.Web.UI.PostBackOptions>物件通常做為參數<xref:System.Web.UI.Page.GetPostBackEventReference%2A>方法。</xref:System.Web.UI.Page.GetPostBackEventReference%2A> </xref:System.Web.UI.PostBackOptions>"
  syntax:
    content: System.Web.UI.PostBackOptions IPostBackContainer.GetPostBackOptions (System.Web.UI.WebControls.IButtonControl buttonControl);
    parameters:
    - id: buttonControl
      type: System.Web.UI.WebControls.IButtonControl
      description: "張貼至伺服器頁面上的按鈕控制項。"
    return:
      type: System.Web.UI.PostBackOptions
      description: "回傳事件選項<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控制項。"
  overload: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IPostBackContainer#GetPostBackOptions*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "中包含的物件<code> buttonControl </code>參數是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <xref:System.Web.UI.WebControls.IButtonControl.CausesValidation*> property of <code>buttonControl</code> is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>.</xref:System.Web.UI.WebControls.IButtonControl.CausesValidation*>"
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.TagKey
  id: TagKey
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: TagKey
  nameWithType: FormView.TagKey
  fullName: System.Web.UI.WebControls.FormView.TagKey
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得<xref href=&quot;System.Web.UI.HtmlTextWriterTag&quot;></xref>值<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控制項。"
  remarks: "TagKey 屬性可讓寫入適當的 HTML 標記的輸出資料流<xref:System.Web.UI.WebControls.FormView>控制項。</xref:System.Web.UI.WebControls.FormView>"
  syntax:
    content: protected override System.Web.UI.HtmlTextWriterTag TagKey { get; }
    return:
      type: System.Web.UI.HtmlTextWriterTag
      description: "一律傳回<xref uid=&quot;langword_csharp_HtmlTextWriterTag.Table&quot; name=&quot;HtmlTextWriterTag.Table&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.FormView.TagKey*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.TopPagerRow
  id: TopPagerRow
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: TopPagerRow
  nameWithType: FormView.TopPagerRow
  fullName: System.Web.UI.WebControls.FormView.TopPagerRow
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得<xref href=&quot;System.Web.UI.WebControls.FormViewRow&quot;></xref>物件，代表在最上方顯示的頁面巡覽列<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控制項。"
  remarks: "啟用分頁時 (當<xref:System.Web.UI.WebControls.FormView.AllowPaging%2A>屬性設定為`true`)，額外的資料列呼叫頁面巡覽列會自動顯示在<xref:System.Web.UI.WebControls.FormView>控制項。</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> 頁面巡覽區列包含控制項，讓使用者巡覽至其他記錄，並可顯示頂端、 底部，或同時上方和底部的控制項。 使用 TopPagerRow 屬性，若要以程式設計方式存取<xref:System.Web.UI.WebControls.FormViewRow>物件，代表在最上層頁面巡覽列<xref:System.Web.UI.WebControls.FormView>控制項。</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormViewRow>      > [!NOTE] > TopPagerRow 屬性之後，才可被<xref:System.Web.UI.WebControls.FormView>控制項建立的最上層頁面巡覽區列<xref:System.Web.UI.WebControls.FormView.ItemCreated>事件。</xref:System.Web.UI.WebControls.FormView.ItemCreated> </xref:System.Web.UI.WebControls.FormView>       這個屬性通常用於您需要以程式設計方式操作最上層頁面巡覽列，例如當加入自訂內容。 後必須執行 TopPagerRow 屬性所做的任何修改<xref:System.Web.UI.WebControls.FormView>控制項已繫結至資料，否則<xref:System.Web.UI.WebControls.FormView>控制會覆寫任何變更。</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView>"
  example:
  - "The following example demonstrates how to use the TopPagerRow property to access the pager row displayed at the top of a <xref:System.Web.UI.WebControls.FormView> control. The pager row is then updated with additional content.  \n  \n [!code-vb[FormViewTopPagerRow#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_408_1.aspx)]\n [!code-cs[FormViewTopPagerRow#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_408_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.FormViewRow TopPagerRow { get; }
    return:
      type: System.Web.UI.WebControls.FormViewRow
      description: "A <xref href=&quot;System.Web.UI.WebControls.FormViewRow&quot;> </xref>表示中的最上層頁面巡覽區列<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控制項。"
  overload: System.Web.UI.WebControls.FormView.TopPagerRow*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.TrackViewState
  id: TrackViewState
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: TrackViewState()
  nameWithType: FormView.TrackViewState()
  fullName: System.Web.UI.WebControls.FormView.TrackViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "標示的起點開始追蹤和儲存檢視狀態變更為<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控制項。"
  remarks: "這個方法會覆寫來標示的起點開始追蹤並儲存變更至控制項的控制項檢視狀態的一部分。"
  syntax:
    content: protected override void TrackViewState ();
    parameters: []
  overload: System.Web.UI.WebControls.FormView.TrackViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.UpdateItem(System.Boolean)
  id: UpdateItem(System.Boolean)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: UpdateItem(Boolean)
  nameWithType: FormView.UpdateItem(Boolean)
  fullName: System.Web.UI.WebControls.FormView.UpdateItem(Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "更新資料來源中目前的記錄。"
  remarks: "當<xref:System.Web.UI.WebControls.FormView>控制項處於編輯模式，請使用 UpdateItem 方法來以程式設計方式更新資料來源中目前的記錄。</xref:System.Web.UI.WebControls.FormView> 這個方法通常使用於您需要更新目前的記錄從外部<xref:System.Web.UI.WebControls.FormView>控制，例如來自不同頁面上的控制項。</xref:System.Web.UI.WebControls.FormView>      > [!NOTE] ><xref:System.Web.UI.WebControls.FormView>呼叫，否則這個方法時，控制項必須是處於編輯模式下<xref:System.Web.HttpException>就會擲回。</xref:System.Web.HttpException> </xref:System.Web.UI.WebControls.FormView>       若要指定是否要將頁面驗證執行更新作業之前，請使用`causesValidation`參數。 呼叫這個方法也會引發<xref:System.Web.UI.WebControls.FormView.ItemUpdated>和<xref:System.Web.UI.WebControls.FormView.ItemUpdating>事件。</xref:System.Web.UI.WebControls.FormView.ItemUpdating> </xref:System.Web.UI.WebControls.FormView.ItemUpdated>"
  example:
  - "The following example demonstrates how to use the UpdateItem method to programmatically update the current record in a <xref:System.Web.UI.WebControls.FormView> control in the data source.  \n  \n [!code-vb[FormViewUpdateItem#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_32_1.aspx)]\n [!code-cs[FormViewUpdateItem#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_32_1.aspx)]"
  syntax:
    content: public virtual void UpdateItem (bool causesValidation);
    parameters:
    - id: causesValidation
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要執行頁面驗證時呼叫的方法;否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.FormView.UpdateItem*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "這個方法時，會呼叫<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控制項不是處於編輯模式。       -或- <xref href=&quot;System.Web.UI.DataSourceView&quot;> </xref>物件相關聯<xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref>控制項為 null。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.UpdateMethod
  id: UpdateMethod
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: UpdateMethod
  nameWithType: FormView.UpdateMethod
  fullName: System.Web.UI.WebControls.FormView.UpdateMethod
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定頁面時，控制項執行更新作業所呼叫的方法名稱。"
  remarks: "在模型繫結中使用 Web Form 的教學課程系列，請參閱[模型繫結和 Web Form](http://go.microsoft.com/fwlink/?LinkId=286117)。"
  syntax:
    content: public virtual string UpdateMethod { get; set; }
    return:
      type: System.String
      description: "在頁面時，控制項執行更新作業所呼叫方法的名稱。"
  overload: System.Web.UI.WebControls.FormView.UpdateMethod*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.CompositeDataBoundControl
  isExternal: false
  name: System.Web.UI.WebControls.CompositeDataBoundControl
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Web.UI.WebControls.FormView.#ctor
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: FormView()
  nameWithType: FormView.FormView()
  fullName: System.Web.UI.WebControls.FormView.FormView()
- uid: System.Web.UI.WebControls.FormView.AllowPaging
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: AllowPaging
  nameWithType: FormView.AllowPaging
  fullName: System.Web.UI.WebControls.FormView.AllowPaging
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.FormView.BackImageUrl
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: BackImageUrl
  nameWithType: FormView.BackImageUrl
  fullName: System.Web.UI.WebControls.FormView.BackImageUrl
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.FormView.BottomPagerRow
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: BottomPagerRow
  nameWithType: FormView.BottomPagerRow
  fullName: System.Web.UI.WebControls.FormView.BottomPagerRow
- uid: System.Web.UI.WebControls.FormViewRow
  parent: System.Web.UI.WebControls
  isExternal: false
  name: FormViewRow
  nameWithType: FormViewRow
  fullName: System.Web.UI.WebControls.FormViewRow
- uid: System.Web.UI.WebControls.FormView.Caption
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: Caption
  nameWithType: FormView.Caption
  fullName: System.Web.UI.WebControls.FormView.Caption
- uid: System.Web.UI.WebControls.FormView.CaptionAlign
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: CaptionAlign
  nameWithType: FormView.CaptionAlign
  fullName: System.Web.UI.WebControls.FormView.CaptionAlign
- uid: System.Web.UI.WebControls.TableCaptionAlign
  parent: System.Web.UI.WebControls
  isExternal: false
  name: TableCaptionAlign
  nameWithType: TableCaptionAlign
  fullName: System.Web.UI.WebControls.TableCaptionAlign
- uid: System.Web.UI.WebControls.FormView.CellPadding
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: CellPadding
  nameWithType: FormView.CellPadding
  fullName: System.Web.UI.WebControls.FormView.CellPadding
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.FormView.CellSpacing
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: CellSpacing
  nameWithType: FormView.CellSpacing
  fullName: System.Web.UI.WebControls.FormView.CellSpacing
- uid: System.Web.UI.WebControls.FormView.ChangeMode(System.Web.UI.WebControls.FormViewMode)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: ChangeMode(FormViewMode)
  nameWithType: FormView.ChangeMode(FormViewMode)
  fullName: System.Web.UI.WebControls.FormView.ChangeMode(FormViewMode)
- uid: System.Web.UI.WebControls.FormViewMode
  parent: System.Web.UI.WebControls
  isExternal: false
  name: FormViewMode
  nameWithType: FormViewMode
  fullName: System.Web.UI.WebControls.FormViewMode
- uid: System.Web.UI.WebControls.FormView.CreateChildControls(System.Collections.IEnumerable,System.Boolean)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: CreateChildControls(IEnumerable,Boolean)
  nameWithType: FormView.CreateChildControls(IEnumerable,Boolean)
  fullName: System.Web.UI.WebControls.FormView.CreateChildControls(IEnumerable,Boolean)
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Web.UI.WebControls.FormView.CreateControlStyle
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: CreateControlStyle()
  nameWithType: FormView.CreateControlStyle()
  fullName: System.Web.UI.WebControls.FormView.CreateControlStyle()
- uid: System.Web.UI.WebControls.Style
  parent: System.Web.UI.WebControls
  isExternal: false
  name: Style
  nameWithType: Style
  fullName: System.Web.UI.WebControls.Style
- uid: System.Web.UI.WebControls.FormView.CreateDataSourceSelectArguments
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: CreateDataSourceSelectArguments()
  nameWithType: FormView.CreateDataSourceSelectArguments()
  fullName: System.Web.UI.WebControls.FormView.CreateDataSourceSelectArguments()
- uid: System.Web.UI.DataSourceSelectArguments
  parent: System.Web.UI
  isExternal: false
  name: DataSourceSelectArguments
  nameWithType: DataSourceSelectArguments
  fullName: System.Web.UI.DataSourceSelectArguments
- uid: System.Web.UI.WebControls.FormView.CreateRow(System.Int32,System.Web.UI.WebControls.DataControlRowType,System.Web.UI.WebControls.DataControlRowState)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: CreateRow(Int32,DataControlRowType,DataControlRowState)
  nameWithType: FormView.CreateRow(Int32,DataControlRowType,DataControlRowState)
  fullName: System.Web.UI.WebControls.FormView.CreateRow(Int32,DataControlRowType,DataControlRowState)
- uid: System.Web.UI.WebControls.DataControlRowType
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlRowType
  nameWithType: DataControlRowType
  fullName: System.Web.UI.WebControls.DataControlRowType
- uid: System.Web.UI.WebControls.DataControlRowState
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlRowState
  nameWithType: DataControlRowState
  fullName: System.Web.UI.WebControls.DataControlRowState
- uid: System.Web.UI.WebControls.FormView.CreateTable
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: CreateTable()
  nameWithType: FormView.CreateTable()
  fullName: System.Web.UI.WebControls.FormView.CreateTable()
- uid: System.Web.UI.WebControls.Table
  parent: System.Web.UI.WebControls
  isExternal: false
  name: Table
  nameWithType: Table
  fullName: System.Web.UI.WebControls.Table
- uid: System.Web.UI.WebControls.FormView.CurrentMode
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: CurrentMode
  nameWithType: FormView.CurrentMode
  fullName: System.Web.UI.WebControls.FormView.CurrentMode
- uid: System.Web.UI.WebControls.FormView.DataBind
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: DataBind()
  nameWithType: FormView.DataBind()
  fullName: System.Web.UI.WebControls.FormView.DataBind()
- uid: System.Web.UI.WebControls.FormView.DataItem
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: DataItem
  nameWithType: FormView.DataItem
  fullName: System.Web.UI.WebControls.FormView.DataItem
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.FormView.DataItemCount
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: DataItemCount
  nameWithType: FormView.DataItemCount
  fullName: System.Web.UI.WebControls.FormView.DataItemCount
- uid: System.Web.UI.WebControls.FormView.DataItemIndex
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: DataItemIndex
  nameWithType: FormView.DataItemIndex
  fullName: System.Web.UI.WebControls.FormView.DataItemIndex
- uid: System.Web.UI.WebControls.FormView.DataKey
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: DataKey
  nameWithType: FormView.DataKey
  fullName: System.Web.UI.WebControls.FormView.DataKey
- uid: System.Web.UI.WebControls.DataKey
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataKey
  nameWithType: DataKey
  fullName: System.Web.UI.WebControls.DataKey
- uid: System.Web.UI.WebControls.FormView.DataKeyNames
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: DataKeyNames
  nameWithType: FormView.DataKeyNames
  fullName: System.Web.UI.WebControls.FormView.DataKeyNames
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.UI.WebControls.FormView.DefaultMode
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: DefaultMode
  nameWithType: FormView.DefaultMode
  fullName: System.Web.UI.WebControls.FormView.DefaultMode
- uid: System.Web.UI.WebControls.FormView.DeleteItem
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: DeleteItem()
  nameWithType: FormView.DeleteItem()
  fullName: System.Web.UI.WebControls.FormView.DeleteItem()
- uid: System.Web.UI.WebControls.FormView.DeleteMethod
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: DeleteMethod
  nameWithType: FormView.DeleteMethod
  fullName: System.Web.UI.WebControls.FormView.DeleteMethod
- uid: System.Web.UI.WebControls.FormView.EditItemTemplate
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: EditItemTemplate
  nameWithType: FormView.EditItemTemplate
  fullName: System.Web.UI.WebControls.FormView.EditItemTemplate
- uid: System.Web.UI.ITemplate
  parent: System.Web.UI
  isExternal: false
  name: ITemplate
  nameWithType: ITemplate
  fullName: System.Web.UI.ITemplate
- uid: System.Web.UI.WebControls.FormView.EditRowStyle
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: EditRowStyle
  nameWithType: FormView.EditRowStyle
  fullName: System.Web.UI.WebControls.FormView.EditRowStyle
- uid: System.Web.UI.WebControls.TableItemStyle
  parent: System.Web.UI.WebControls
  isExternal: false
  name: TableItemStyle
  nameWithType: TableItemStyle
  fullName: System.Web.UI.WebControls.TableItemStyle
- uid: System.Web.UI.WebControls.FormView.EmptyDataRowStyle
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: EmptyDataRowStyle
  nameWithType: FormView.EmptyDataRowStyle
  fullName: System.Web.UI.WebControls.FormView.EmptyDataRowStyle
- uid: System.Web.UI.WebControls.FormView.EmptyDataTemplate
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: EmptyDataTemplate
  nameWithType: FormView.EmptyDataTemplate
  fullName: System.Web.UI.WebControls.FormView.EmptyDataTemplate
- uid: System.Web.UI.WebControls.FormView.EmptyDataText
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: EmptyDataText
  nameWithType: FormView.EmptyDataText
  fullName: System.Web.UI.WebControls.FormView.EmptyDataText
- uid: System.Web.UI.WebControls.FormView.EnableModelValidation
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: EnableModelValidation
  nameWithType: FormView.EnableModelValidation
  fullName: System.Web.UI.WebControls.FormView.EnableModelValidation
- uid: System.Web.UI.WebControls.FormView.EnsureDataBound
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: EnsureDataBound()
  nameWithType: FormView.EnsureDataBound()
  fullName: System.Web.UI.WebControls.FormView.EnsureDataBound()
- uid: System.Web.UI.WebControls.FormView.ExtractRowValues(System.Collections.Specialized.IOrderedDictionary,System.Boolean)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: ExtractRowValues(IOrderedDictionary,Boolean)
  nameWithType: FormView.ExtractRowValues(IOrderedDictionary,Boolean)
  fullName: System.Web.UI.WebControls.FormView.ExtractRowValues(IOrderedDictionary,Boolean)
- uid: System.Collections.Specialized.IOrderedDictionary
  parent: System.Collections.Specialized
  isExternal: false
  name: IOrderedDictionary
  nameWithType: IOrderedDictionary
  fullName: System.Collections.Specialized.IOrderedDictionary
- uid: System.Web.UI.WebControls.FormView.FooterRow
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: FooterRow
  nameWithType: FormView.FooterRow
  fullName: System.Web.UI.WebControls.FormView.FooterRow
- uid: System.Web.UI.WebControls.FormView.FooterStyle
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: FooterStyle
  nameWithType: FormView.FooterStyle
  fullName: System.Web.UI.WebControls.FormView.FooterStyle
- uid: System.Web.UI.WebControls.FormView.FooterTemplate
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: FooterTemplate
  nameWithType: FormView.FooterTemplate
  fullName: System.Web.UI.WebControls.FormView.FooterTemplate
- uid: System.Web.UI.WebControls.FormView.FooterText
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: FooterText
  nameWithType: FormView.FooterText
  fullName: System.Web.UI.WebControls.FormView.FooterText
- uid: System.Web.UI.WebControls.FormView.GridLines
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: GridLines
  nameWithType: FormView.GridLines
  fullName: System.Web.UI.WebControls.FormView.GridLines
- uid: System.Web.UI.WebControls.GridLines
  parent: System.Web.UI.WebControls
  isExternal: false
  name: GridLines
  nameWithType: GridLines
  fullName: System.Web.UI.WebControls.GridLines
- uid: System.Web.UI.WebControls.FormView.HeaderRow
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: HeaderRow
  nameWithType: FormView.HeaderRow
  fullName: System.Web.UI.WebControls.FormView.HeaderRow
- uid: System.Web.UI.WebControls.FormView.HeaderStyle
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: HeaderStyle
  nameWithType: FormView.HeaderStyle
  fullName: System.Web.UI.WebControls.FormView.HeaderStyle
- uid: System.Web.UI.WebControls.FormView.HeaderTemplate
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: HeaderTemplate
  nameWithType: FormView.HeaderTemplate
  fullName: System.Web.UI.WebControls.FormView.HeaderTemplate
- uid: System.Web.UI.WebControls.FormView.HeaderText
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: HeaderText
  nameWithType: FormView.HeaderText
  fullName: System.Web.UI.WebControls.FormView.HeaderText
- uid: System.Web.UI.WebControls.FormView.HorizontalAlign
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: HorizontalAlign
  nameWithType: FormView.HorizontalAlign
  fullName: System.Web.UI.WebControls.FormView.HorizontalAlign
- uid: System.Web.UI.WebControls.HorizontalAlign
  parent: System.Web.UI.WebControls
  isExternal: false
  name: HorizontalAlign
  nameWithType: HorizontalAlign
  fullName: System.Web.UI.WebControls.HorizontalAlign
- uid: System.Web.UI.WebControls.FormView.InitializePager(System.Web.UI.WebControls.FormViewRow,System.Web.UI.WebControls.PagedDataSource)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: InitializePager(FormViewRow,PagedDataSource)
  nameWithType: FormView.InitializePager(FormViewRow,PagedDataSource)
  fullName: System.Web.UI.WebControls.FormView.InitializePager(FormViewRow,PagedDataSource)
- uid: System.Web.UI.WebControls.PagedDataSource
  parent: System.Web.UI.WebControls
  isExternal: false
  name: PagedDataSource
  nameWithType: PagedDataSource
  fullName: System.Web.UI.WebControls.PagedDataSource
- uid: System.Web.UI.WebControls.FormView.InitializeRow(System.Web.UI.WebControls.FormViewRow)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: InitializeRow(FormViewRow)
  nameWithType: FormView.InitializeRow(FormViewRow)
  fullName: System.Web.UI.WebControls.FormView.InitializeRow(FormViewRow)
- uid: System.Web.UI.WebControls.FormView.InsertItem(System.Boolean)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: InsertItem(Boolean)
  nameWithType: FormView.InsertItem(Boolean)
  fullName: System.Web.UI.WebControls.FormView.InsertItem(Boolean)
- uid: System.Web.UI.WebControls.FormView.InsertItemTemplate
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: InsertItemTemplate
  nameWithType: FormView.InsertItemTemplate
  fullName: System.Web.UI.WebControls.FormView.InsertItemTemplate
- uid: System.Web.UI.WebControls.FormView.InsertMethod
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: InsertMethod
  nameWithType: FormView.InsertMethod
  fullName: System.Web.UI.WebControls.FormView.InsertMethod
- uid: System.Web.UI.WebControls.FormView.InsertRowStyle
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: InsertRowStyle
  nameWithType: FormView.InsertRowStyle
  fullName: System.Web.UI.WebControls.FormView.InsertRowStyle
- uid: System.Web.UI.WebControls.FormView.IsBindableType(System.Type)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: IsBindableType(Type)
  nameWithType: FormView.IsBindableType(Type)
  fullName: System.Web.UI.WebControls.FormView.IsBindableType(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.UI.WebControls.FormView.ItemCommand
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: ItemCommand
  nameWithType: FormView.ItemCommand
  fullName: System.Web.UI.WebControls.FormView.ItemCommand
- uid: System.Web.UI.WebControls.FormViewCommandEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: FormViewCommandEventHandler
  nameWithType: FormViewCommandEventHandler
  fullName: System.Web.UI.WebControls.FormViewCommandEventHandler
- uid: System.Web.UI.WebControls.FormView.ItemCreated
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: ItemCreated
  nameWithType: FormView.ItemCreated
  fullName: System.Web.UI.WebControls.FormView.ItemCreated
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Web.UI.WebControls.FormView.ItemDeleted
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: ItemDeleted
  nameWithType: FormView.ItemDeleted
  fullName: System.Web.UI.WebControls.FormView.ItemDeleted
- uid: System.Web.UI.WebControls.FormViewDeletedEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: FormViewDeletedEventHandler
  nameWithType: FormViewDeletedEventHandler
  fullName: System.Web.UI.WebControls.FormViewDeletedEventHandler
- uid: System.Web.UI.WebControls.FormView.ItemDeleting
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: ItemDeleting
  nameWithType: FormView.ItemDeleting
  fullName: System.Web.UI.WebControls.FormView.ItemDeleting
- uid: System.Web.UI.WebControls.FormViewDeleteEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: FormViewDeleteEventHandler
  nameWithType: FormViewDeleteEventHandler
  fullName: System.Web.UI.WebControls.FormViewDeleteEventHandler
- uid: System.Web.UI.WebControls.FormView.ItemInserted
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: ItemInserted
  nameWithType: FormView.ItemInserted
  fullName: System.Web.UI.WebControls.FormView.ItemInserted
- uid: System.Web.UI.WebControls.FormViewInsertedEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: FormViewInsertedEventHandler
  nameWithType: FormViewInsertedEventHandler
  fullName: System.Web.UI.WebControls.FormViewInsertedEventHandler
- uid: System.Web.UI.WebControls.FormView.ItemInserting
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: ItemInserting
  nameWithType: FormView.ItemInserting
  fullName: System.Web.UI.WebControls.FormView.ItemInserting
- uid: System.Web.UI.WebControls.FormViewInsertEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: FormViewInsertEventHandler
  nameWithType: FormViewInsertEventHandler
  fullName: System.Web.UI.WebControls.FormViewInsertEventHandler
- uid: System.Web.UI.WebControls.FormView.ItemTemplate
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: ItemTemplate
  nameWithType: FormView.ItemTemplate
  fullName: System.Web.UI.WebControls.FormView.ItemTemplate
- uid: System.Web.UI.WebControls.FormView.ItemUpdated
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: ItemUpdated
  nameWithType: FormView.ItemUpdated
  fullName: System.Web.UI.WebControls.FormView.ItemUpdated
- uid: System.Web.UI.WebControls.FormViewUpdatedEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: FormViewUpdatedEventHandler
  nameWithType: FormViewUpdatedEventHandler
  fullName: System.Web.UI.WebControls.FormViewUpdatedEventHandler
- uid: System.Web.UI.WebControls.FormView.ItemUpdating
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: ItemUpdating
  nameWithType: FormView.ItemUpdating
  fullName: System.Web.UI.WebControls.FormView.ItemUpdating
- uid: System.Web.UI.WebControls.FormViewUpdateEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: FormViewUpdateEventHandler
  nameWithType: FormViewUpdateEventHandler
  fullName: System.Web.UI.WebControls.FormViewUpdateEventHandler
- uid: System.Web.UI.WebControls.FormView.LoadControlState(System.Object)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: LoadControlState(Object)
  nameWithType: FormView.LoadControlState(Object)
  fullName: System.Web.UI.WebControls.FormView.LoadControlState(Object)
- uid: System.Web.UI.WebControls.FormView.LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: LoadViewState(Object)
  nameWithType: FormView.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.FormView.LoadViewState(Object)
- uid: System.Web.UI.WebControls.FormView.ModeChanged
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: ModeChanged
  nameWithType: FormView.ModeChanged
  fullName: System.Web.UI.WebControls.FormView.ModeChanged
- uid: System.Web.UI.WebControls.FormView.ModeChanging
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: ModeChanging
  nameWithType: FormView.ModeChanging
  fullName: System.Web.UI.WebControls.FormView.ModeChanging
- uid: System.Web.UI.WebControls.FormViewModeEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: FormViewModeEventHandler
  nameWithType: FormViewModeEventHandler
  fullName: System.Web.UI.WebControls.FormViewModeEventHandler
- uid: System.Web.UI.WebControls.FormView.ModifiedOuterTableStylePropertyName
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: ModifiedOuterTableStylePropertyName()
  nameWithType: FormView.ModifiedOuterTableStylePropertyName()
  fullName: System.Web.UI.WebControls.FormView.ModifiedOuterTableStylePropertyName()
- uid: System.Web.UI.WebControls.FormView.OnBubbleEvent(System.Object,System.EventArgs)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: OnBubbleEvent(Object,EventArgs)
  nameWithType: FormView.OnBubbleEvent(Object,EventArgs)
  fullName: System.Web.UI.WebControls.FormView.OnBubbleEvent(Object,EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.UI.WebControls.FormView.OnInit(System.EventArgs)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: OnInit(EventArgs)
  nameWithType: FormView.OnInit(EventArgs)
  fullName: System.Web.UI.WebControls.FormView.OnInit(EventArgs)
- uid: System.Web.UI.WebControls.FormView.OnItemCommand(System.Web.UI.WebControls.FormViewCommandEventArgs)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: OnItemCommand(FormViewCommandEventArgs)
  nameWithType: FormView.OnItemCommand(FormViewCommandEventArgs)
  fullName: System.Web.UI.WebControls.FormView.OnItemCommand(FormViewCommandEventArgs)
- uid: System.Web.UI.WebControls.FormViewCommandEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: FormViewCommandEventArgs
  nameWithType: FormViewCommandEventArgs
  fullName: System.Web.UI.WebControls.FormViewCommandEventArgs
- uid: System.Web.UI.WebControls.FormView.OnItemCreated(System.EventArgs)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: OnItemCreated(EventArgs)
  nameWithType: FormView.OnItemCreated(EventArgs)
  fullName: System.Web.UI.WebControls.FormView.OnItemCreated(EventArgs)
- uid: System.Web.UI.WebControls.FormView.OnItemDeleted(System.Web.UI.WebControls.FormViewDeletedEventArgs)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: OnItemDeleted(FormViewDeletedEventArgs)
  nameWithType: FormView.OnItemDeleted(FormViewDeletedEventArgs)
  fullName: System.Web.UI.WebControls.FormView.OnItemDeleted(FormViewDeletedEventArgs)
- uid: System.Web.UI.WebControls.FormViewDeletedEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: FormViewDeletedEventArgs
  nameWithType: FormViewDeletedEventArgs
  fullName: System.Web.UI.WebControls.FormViewDeletedEventArgs
- uid: System.Web.UI.WebControls.FormView.OnItemDeleting(System.Web.UI.WebControls.FormViewDeleteEventArgs)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: OnItemDeleting(FormViewDeleteEventArgs)
  nameWithType: FormView.OnItemDeleting(FormViewDeleteEventArgs)
  fullName: System.Web.UI.WebControls.FormView.OnItemDeleting(FormViewDeleteEventArgs)
- uid: System.Web.UI.WebControls.FormViewDeleteEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: FormViewDeleteEventArgs
  nameWithType: FormViewDeleteEventArgs
  fullName: System.Web.UI.WebControls.FormViewDeleteEventArgs
- uid: System.Web.UI.WebControls.FormView.OnItemInserted(System.Web.UI.WebControls.FormViewInsertedEventArgs)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: OnItemInserted(FormViewInsertedEventArgs)
  nameWithType: FormView.OnItemInserted(FormViewInsertedEventArgs)
  fullName: System.Web.UI.WebControls.FormView.OnItemInserted(FormViewInsertedEventArgs)
- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: FormViewInsertedEventArgs
  nameWithType: FormViewInsertedEventArgs
  fullName: System.Web.UI.WebControls.FormViewInsertedEventArgs
- uid: System.Web.UI.WebControls.FormView.OnItemInserting(System.Web.UI.WebControls.FormViewInsertEventArgs)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: OnItemInserting(FormViewInsertEventArgs)
  nameWithType: FormView.OnItemInserting(FormViewInsertEventArgs)
  fullName: System.Web.UI.WebControls.FormView.OnItemInserting(FormViewInsertEventArgs)
- uid: System.Web.UI.WebControls.FormViewInsertEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: FormViewInsertEventArgs
  nameWithType: FormViewInsertEventArgs
  fullName: System.Web.UI.WebControls.FormViewInsertEventArgs
- uid: System.Web.UI.WebControls.FormView.OnItemUpdated(System.Web.UI.WebControls.FormViewUpdatedEventArgs)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: OnItemUpdated(FormViewUpdatedEventArgs)
  nameWithType: FormView.OnItemUpdated(FormViewUpdatedEventArgs)
  fullName: System.Web.UI.WebControls.FormView.OnItemUpdated(FormViewUpdatedEventArgs)
- uid: System.Web.UI.WebControls.FormViewUpdatedEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: FormViewUpdatedEventArgs
  nameWithType: FormViewUpdatedEventArgs
  fullName: System.Web.UI.WebControls.FormViewUpdatedEventArgs
- uid: System.Web.UI.WebControls.FormView.OnItemUpdating(System.Web.UI.WebControls.FormViewUpdateEventArgs)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: OnItemUpdating(FormViewUpdateEventArgs)
  nameWithType: FormView.OnItemUpdating(FormViewUpdateEventArgs)
  fullName: System.Web.UI.WebControls.FormView.OnItemUpdating(FormViewUpdateEventArgs)
- uid: System.Web.UI.WebControls.FormViewUpdateEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: FormViewUpdateEventArgs
  nameWithType: FormViewUpdateEventArgs
  fullName: System.Web.UI.WebControls.FormViewUpdateEventArgs
- uid: System.Web.UI.WebControls.FormView.OnModeChanged(System.EventArgs)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: OnModeChanged(EventArgs)
  nameWithType: FormView.OnModeChanged(EventArgs)
  fullName: System.Web.UI.WebControls.FormView.OnModeChanged(EventArgs)
- uid: System.Web.UI.WebControls.FormView.OnModeChanging(System.Web.UI.WebControls.FormViewModeEventArgs)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: OnModeChanging(FormViewModeEventArgs)
  nameWithType: FormView.OnModeChanging(FormViewModeEventArgs)
  fullName: System.Web.UI.WebControls.FormView.OnModeChanging(FormViewModeEventArgs)
- uid: System.Web.UI.WebControls.FormViewModeEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: FormViewModeEventArgs
  nameWithType: FormViewModeEventArgs
  fullName: System.Web.UI.WebControls.FormViewModeEventArgs
- uid: System.Web.UI.WebControls.FormView.OnPageIndexChanged(System.EventArgs)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: OnPageIndexChanged(EventArgs)
  nameWithType: FormView.OnPageIndexChanged(EventArgs)
  fullName: System.Web.UI.WebControls.FormView.OnPageIndexChanged(EventArgs)
- uid: System.Web.UI.WebControls.FormView.OnPageIndexChanging(System.Web.UI.WebControls.FormViewPageEventArgs)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: OnPageIndexChanging(FormViewPageEventArgs)
  nameWithType: FormView.OnPageIndexChanging(FormViewPageEventArgs)
  fullName: System.Web.UI.WebControls.FormView.OnPageIndexChanging(FormViewPageEventArgs)
- uid: System.Web.UI.WebControls.FormViewPageEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: FormViewPageEventArgs
  nameWithType: FormViewPageEventArgs
  fullName: System.Web.UI.WebControls.FormViewPageEventArgs
- uid: System.Web.UI.WebControls.FormView.PageCount
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: PageCount
  nameWithType: FormView.PageCount
  fullName: System.Web.UI.WebControls.FormView.PageCount
- uid: System.Web.UI.WebControls.FormView.PageIndex
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: PageIndex
  nameWithType: FormView.PageIndex
  fullName: System.Web.UI.WebControls.FormView.PageIndex
- uid: System.Web.UI.WebControls.FormView.PageIndexChanged
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: PageIndexChanged
  nameWithType: FormView.PageIndexChanged
  fullName: System.Web.UI.WebControls.FormView.PageIndexChanged
- uid: System.Web.UI.WebControls.FormView.PageIndexChanging
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: PageIndexChanging
  nameWithType: FormView.PageIndexChanging
  fullName: System.Web.UI.WebControls.FormView.PageIndexChanging
- uid: System.Web.UI.WebControls.FormViewPageEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: FormViewPageEventHandler
  nameWithType: FormViewPageEventHandler
  fullName: System.Web.UI.WebControls.FormViewPageEventHandler
- uid: System.Web.UI.WebControls.FormView.PagerSettings
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: PagerSettings
  nameWithType: FormView.PagerSettings
  fullName: System.Web.UI.WebControls.FormView.PagerSettings
- uid: System.Web.UI.WebControls.PagerSettings
  parent: System.Web.UI.WebControls
  isExternal: false
  name: PagerSettings
  nameWithType: PagerSettings
  fullName: System.Web.UI.WebControls.PagerSettings
- uid: System.Web.UI.WebControls.FormView.PagerStyle
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: PagerStyle
  nameWithType: FormView.PagerStyle
  fullName: System.Web.UI.WebControls.FormView.PagerStyle
- uid: System.Web.UI.WebControls.FormView.PagerTemplate
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: PagerTemplate
  nameWithType: FormView.PagerTemplate
  fullName: System.Web.UI.WebControls.FormView.PagerTemplate
- uid: System.Web.UI.WebControls.FormView.PerformDataBinding(System.Collections.IEnumerable)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: PerformDataBinding(IEnumerable)
  nameWithType: FormView.PerformDataBinding(IEnumerable)
  fullName: System.Web.UI.WebControls.FormView.PerformDataBinding(IEnumerable)
- uid: System.Web.UI.WebControls.FormView.PrepareControlHierarchy
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: PrepareControlHierarchy()
  nameWithType: FormView.PrepareControlHierarchy()
  fullName: System.Web.UI.WebControls.FormView.PrepareControlHierarchy()
- uid: System.Web.UI.WebControls.FormView.RaisePostBackEvent(System.String)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: RaisePostBackEvent(String)
  nameWithType: FormView.RaisePostBackEvent(String)
  fullName: System.Web.UI.WebControls.FormView.RaisePostBackEvent(String)
- uid: System.Web.UI.WebControls.FormView.Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: Render(HtmlTextWriter)
  nameWithType: FormView.Render(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.FormView.Render(HtmlTextWriter)
- uid: System.Web.UI.HtmlTextWriter
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriter
  nameWithType: HtmlTextWriter
  fullName: System.Web.UI.HtmlTextWriter
- uid: System.Web.UI.WebControls.FormView.RenderOuterTable
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: RenderOuterTable
  nameWithType: FormView.RenderOuterTable
  fullName: System.Web.UI.WebControls.FormView.RenderOuterTable
- uid: System.Web.UI.WebControls.FormView.Row
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: Row
  nameWithType: FormView.Row
  fullName: System.Web.UI.WebControls.FormView.Row
- uid: System.Web.UI.WebControls.FormView.RowStyle
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: RowStyle
  nameWithType: FormView.RowStyle
  fullName: System.Web.UI.WebControls.FormView.RowStyle
- uid: System.Web.UI.WebControls.FormView.SaveControlState
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: SaveControlState()
  nameWithType: FormView.SaveControlState()
  fullName: System.Web.UI.WebControls.FormView.SaveControlState()
- uid: System.Web.UI.WebControls.FormView.SaveViewState
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: SaveViewState()
  nameWithType: FormView.SaveViewState()
  fullName: System.Web.UI.WebControls.FormView.SaveViewState()
- uid: System.Web.UI.WebControls.FormView.SelectedValue
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: SelectedValue
  nameWithType: FormView.SelectedValue
  fullName: System.Web.UI.WebControls.FormView.SelectedValue
- uid: System.Web.UI.WebControls.FormView.SetPageIndex(System.Int32)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: SetPageIndex(Int32)
  nameWithType: FormView.SetPageIndex(Int32)
  fullName: System.Web.UI.WebControls.FormView.SetPageIndex(Int32)
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#IDataItemContainer#DataItemIndex
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: System.Web.UI.IDataItemContainer.DataItemIndex
  nameWithType: FormView.System.Web.UI.IDataItemContainer.DataItemIndex
  fullName: System.Web.UI.WebControls.FormView.System.Web.UI.IDataItemContainer.DataItemIndex
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#IDataItemContainer#DisplayIndex
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: System.Web.UI.IDataItemContainer.DisplayIndex
  nameWithType: FormView.System.Web.UI.IDataItemContainer.DisplayIndex
  fullName: System.Web.UI.WebControls.FormView.System.Web.UI.IDataItemContainer.DisplayIndex
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  nameWithType: FormView.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  fullName: System.Web.UI.WebControls.FormView.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataKeyNames
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundControl.DataKeyNames
  nameWithType: FormView.System.Web.UI.WebControls.IDataBoundControl.DataKeyNames
  fullName: System.Web.UI.WebControls.FormView.System.Web.UI.WebControls.IDataBoundControl.DataKeyNames
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataMember
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundControl.DataMember
  nameWithType: FormView.System.Web.UI.WebControls.IDataBoundControl.DataMember
  fullName: System.Web.UI.WebControls.FormView.System.Web.UI.WebControls.IDataBoundControl.DataMember
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataSource
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundControl.DataSource
  nameWithType: FormView.System.Web.UI.WebControls.IDataBoundControl.DataSource
  fullName: System.Web.UI.WebControls.FormView.System.Web.UI.WebControls.IDataBoundControl.DataSource
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataSourceID
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundControl.DataSourceID
  nameWithType: FormView.System.Web.UI.WebControls.IDataBoundControl.DataSourceID
  fullName: System.Web.UI.WebControls.FormView.System.Web.UI.WebControls.IDataBoundControl.DataSourceID
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataSourceObject
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundControl.DataSourceObject
  nameWithType: FormView.System.Web.UI.WebControls.IDataBoundControl.DataSourceObject
  fullName: System.Web.UI.WebControls.FormView.System.Web.UI.WebControls.IDataBoundControl.DataSourceObject
- uid: System.Web.UI.IDataSource
  parent: System.Web.UI
  isExternal: false
  name: IDataSource
  nameWithType: IDataSource
  fullName: System.Web.UI.IDataSource
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundItemControl#DataKey
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundItemControl.DataKey
  nameWithType: FormView.System.Web.UI.WebControls.IDataBoundItemControl.DataKey
  fullName: System.Web.UI.WebControls.FormView.System.Web.UI.WebControls.IDataBoundItemControl.DataKey
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundItemControl#Mode
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundItemControl.Mode
  nameWithType: FormView.System.Web.UI.WebControls.IDataBoundItemControl.Mode
  fullName: System.Web.UI.WebControls.FormView.System.Web.UI.WebControls.IDataBoundItemControl.Mode
- uid: System.Web.UI.WebControls.DataBoundControlMode
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataBoundControlMode
  nameWithType: DataBoundControlMode
  fullName: System.Web.UI.WebControls.DataBoundControlMode
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IPostBackContainer#GetPostBackOptions(System.Web.UI.WebControls.IButtonControl)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(IButtonControl)
  nameWithType: FormView.System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(IButtonControl)
  fullName: System.Web.UI.WebControls.FormView.System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(IButtonControl)
- uid: System.Web.UI.PostBackOptions
  parent: System.Web.UI
  isExternal: false
  name: PostBackOptions
  nameWithType: PostBackOptions
  fullName: System.Web.UI.PostBackOptions
- uid: System.Web.UI.WebControls.IButtonControl
  parent: System.Web.UI.WebControls
  isExternal: false
  name: IButtonControl
  nameWithType: IButtonControl
  fullName: System.Web.UI.WebControls.IButtonControl
- uid: System.Web.UI.WebControls.FormView.TagKey
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: TagKey
  nameWithType: FormView.TagKey
  fullName: System.Web.UI.WebControls.FormView.TagKey
- uid: System.Web.UI.HtmlTextWriterTag
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriterTag
  nameWithType: HtmlTextWriterTag
  fullName: System.Web.UI.HtmlTextWriterTag
- uid: System.Web.UI.WebControls.FormView.TopPagerRow
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: TopPagerRow
  nameWithType: FormView.TopPagerRow
  fullName: System.Web.UI.WebControls.FormView.TopPagerRow
- uid: System.Web.UI.WebControls.FormView.TrackViewState
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: TrackViewState()
  nameWithType: FormView.TrackViewState()
  fullName: System.Web.UI.WebControls.FormView.TrackViewState()
- uid: System.Web.UI.WebControls.FormView.UpdateItem(System.Boolean)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: UpdateItem(Boolean)
  nameWithType: FormView.UpdateItem(Boolean)
  fullName: System.Web.UI.WebControls.FormView.UpdateItem(Boolean)
- uid: System.Web.UI.WebControls.FormView.UpdateMethod
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: UpdateMethod
  nameWithType: FormView.UpdateMethod
  fullName: System.Web.UI.WebControls.FormView.UpdateMethod
- uid: System.Web.UI.WebControls.FormView.#ctor*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: FormView
  nameWithType: FormView.FormView
- uid: System.Web.UI.WebControls.FormView.AllowPaging*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: AllowPaging
  nameWithType: FormView.AllowPaging
- uid: System.Web.UI.WebControls.FormView.BackImageUrl*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: BackImageUrl
  nameWithType: FormView.BackImageUrl
- uid: System.Web.UI.WebControls.FormView.BottomPagerRow*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: BottomPagerRow
  nameWithType: FormView.BottomPagerRow
- uid: System.Web.UI.WebControls.FormView.Caption*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: Caption
  nameWithType: FormView.Caption
- uid: System.Web.UI.WebControls.FormView.CaptionAlign*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: CaptionAlign
  nameWithType: FormView.CaptionAlign
- uid: System.Web.UI.WebControls.FormView.CellPadding*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: CellPadding
  nameWithType: FormView.CellPadding
- uid: System.Web.UI.WebControls.FormView.CellSpacing*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: CellSpacing
  nameWithType: FormView.CellSpacing
- uid: System.Web.UI.WebControls.FormView.ChangeMode*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: ChangeMode
  nameWithType: FormView.ChangeMode
- uid: System.Web.UI.WebControls.FormView.CreateChildControls*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: CreateChildControls
  nameWithType: FormView.CreateChildControls
- uid: System.Web.UI.WebControls.FormView.CreateControlStyle*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: CreateControlStyle
  nameWithType: FormView.CreateControlStyle
- uid: System.Web.UI.WebControls.FormView.CreateDataSourceSelectArguments*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: CreateDataSourceSelectArguments
  nameWithType: FormView.CreateDataSourceSelectArguments
- uid: System.Web.UI.WebControls.FormView.CreateRow*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: CreateRow
  nameWithType: FormView.CreateRow
- uid: System.Web.UI.WebControls.FormView.CreateTable*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: CreateTable
  nameWithType: FormView.CreateTable
- uid: System.Web.UI.WebControls.FormView.CurrentMode*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: CurrentMode
  nameWithType: FormView.CurrentMode
- uid: System.Web.UI.WebControls.FormView.DataBind*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: DataBind
  nameWithType: FormView.DataBind
- uid: System.Web.UI.WebControls.FormView.DataItem*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: DataItem
  nameWithType: FormView.DataItem
- uid: System.Web.UI.WebControls.FormView.DataItemCount*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: DataItemCount
  nameWithType: FormView.DataItemCount
- uid: System.Web.UI.WebControls.FormView.DataItemIndex*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: DataItemIndex
  nameWithType: FormView.DataItemIndex
- uid: System.Web.UI.WebControls.FormView.DataKey*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: DataKey
  nameWithType: FormView.DataKey
- uid: System.Web.UI.WebControls.FormView.DataKeyNames*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: DataKeyNames
  nameWithType: FormView.DataKeyNames
- uid: System.Web.UI.WebControls.FormView.DefaultMode*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: DefaultMode
  nameWithType: FormView.DefaultMode
- uid: System.Web.UI.WebControls.FormView.DeleteItem*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: DeleteItem
  nameWithType: FormView.DeleteItem
- uid: System.Web.UI.WebControls.FormView.DeleteMethod*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: DeleteMethod
  nameWithType: FormView.DeleteMethod
- uid: System.Web.UI.WebControls.FormView.EditItemTemplate*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: EditItemTemplate
  nameWithType: FormView.EditItemTemplate
- uid: System.Web.UI.WebControls.FormView.EditRowStyle*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: EditRowStyle
  nameWithType: FormView.EditRowStyle
- uid: System.Web.UI.WebControls.FormView.EmptyDataRowStyle*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: EmptyDataRowStyle
  nameWithType: FormView.EmptyDataRowStyle
- uid: System.Web.UI.WebControls.FormView.EmptyDataTemplate*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: EmptyDataTemplate
  nameWithType: FormView.EmptyDataTemplate
- uid: System.Web.UI.WebControls.FormView.EmptyDataText*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: EmptyDataText
  nameWithType: FormView.EmptyDataText
- uid: System.Web.UI.WebControls.FormView.EnableModelValidation*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: EnableModelValidation
  nameWithType: FormView.EnableModelValidation
- uid: System.Web.UI.WebControls.FormView.EnsureDataBound*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: EnsureDataBound
  nameWithType: FormView.EnsureDataBound
- uid: System.Web.UI.WebControls.FormView.ExtractRowValues*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: ExtractRowValues
  nameWithType: FormView.ExtractRowValues
- uid: System.Web.UI.WebControls.FormView.FooterRow*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: FooterRow
  nameWithType: FormView.FooterRow
- uid: System.Web.UI.WebControls.FormView.FooterStyle*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: FooterStyle
  nameWithType: FormView.FooterStyle
- uid: System.Web.UI.WebControls.FormView.FooterTemplate*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: FooterTemplate
  nameWithType: FormView.FooterTemplate
- uid: System.Web.UI.WebControls.FormView.FooterText*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: FooterText
  nameWithType: FormView.FooterText
- uid: System.Web.UI.WebControls.FormView.GridLines*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: GridLines
  nameWithType: FormView.GridLines
- uid: System.Web.UI.WebControls.FormView.HeaderRow*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: HeaderRow
  nameWithType: FormView.HeaderRow
- uid: System.Web.UI.WebControls.FormView.HeaderStyle*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: HeaderStyle
  nameWithType: FormView.HeaderStyle
- uid: System.Web.UI.WebControls.FormView.HeaderTemplate*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: HeaderTemplate
  nameWithType: FormView.HeaderTemplate
- uid: System.Web.UI.WebControls.FormView.HeaderText*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: HeaderText
  nameWithType: FormView.HeaderText
- uid: System.Web.UI.WebControls.FormView.HorizontalAlign*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: HorizontalAlign
  nameWithType: FormView.HorizontalAlign
- uid: System.Web.UI.WebControls.FormView.InitializePager*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: InitializePager
  nameWithType: FormView.InitializePager
- uid: System.Web.UI.WebControls.FormView.InitializeRow*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: InitializeRow
  nameWithType: FormView.InitializeRow
- uid: System.Web.UI.WebControls.FormView.InsertItem*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: InsertItem
  nameWithType: FormView.InsertItem
- uid: System.Web.UI.WebControls.FormView.InsertItemTemplate*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: InsertItemTemplate
  nameWithType: FormView.InsertItemTemplate
- uid: System.Web.UI.WebControls.FormView.InsertMethod*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: InsertMethod
  nameWithType: FormView.InsertMethod
- uid: System.Web.UI.WebControls.FormView.InsertRowStyle*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: InsertRowStyle
  nameWithType: FormView.InsertRowStyle
- uid: System.Web.UI.WebControls.FormView.IsBindableType*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: IsBindableType
  nameWithType: FormView.IsBindableType
- uid: System.Web.UI.WebControls.FormView.ItemTemplate*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: ItemTemplate
  nameWithType: FormView.ItemTemplate
- uid: System.Web.UI.WebControls.FormView.LoadControlState*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: LoadControlState
  nameWithType: FormView.LoadControlState
- uid: System.Web.UI.WebControls.FormView.LoadViewState*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: LoadViewState
  nameWithType: FormView.LoadViewState
- uid: System.Web.UI.WebControls.FormView.ModifiedOuterTableStylePropertyName*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: ModifiedOuterTableStylePropertyName
  nameWithType: FormView.ModifiedOuterTableStylePropertyName
- uid: System.Web.UI.WebControls.FormView.OnBubbleEvent*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: OnBubbleEvent
  nameWithType: FormView.OnBubbleEvent
- uid: System.Web.UI.WebControls.FormView.OnInit*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: OnInit
  nameWithType: FormView.OnInit
- uid: System.Web.UI.WebControls.FormView.OnItemCommand*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: OnItemCommand
  nameWithType: FormView.OnItemCommand
- uid: System.Web.UI.WebControls.FormView.OnItemCreated*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: OnItemCreated
  nameWithType: FormView.OnItemCreated
- uid: System.Web.UI.WebControls.FormView.OnItemDeleted*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: OnItemDeleted
  nameWithType: FormView.OnItemDeleted
- uid: System.Web.UI.WebControls.FormView.OnItemDeleting*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: OnItemDeleting
  nameWithType: FormView.OnItemDeleting
- uid: System.Web.UI.WebControls.FormView.OnItemInserted*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: OnItemInserted
  nameWithType: FormView.OnItemInserted
- uid: System.Web.UI.WebControls.FormView.OnItemInserting*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: OnItemInserting
  nameWithType: FormView.OnItemInserting
- uid: System.Web.UI.WebControls.FormView.OnItemUpdated*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: OnItemUpdated
  nameWithType: FormView.OnItemUpdated
- uid: System.Web.UI.WebControls.FormView.OnItemUpdating*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: OnItemUpdating
  nameWithType: FormView.OnItemUpdating
- uid: System.Web.UI.WebControls.FormView.OnModeChanged*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: OnModeChanged
  nameWithType: FormView.OnModeChanged
- uid: System.Web.UI.WebControls.FormView.OnModeChanging*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: OnModeChanging
  nameWithType: FormView.OnModeChanging
- uid: System.Web.UI.WebControls.FormView.OnPageIndexChanged*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: OnPageIndexChanged
  nameWithType: FormView.OnPageIndexChanged
- uid: System.Web.UI.WebControls.FormView.OnPageIndexChanging*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: OnPageIndexChanging
  nameWithType: FormView.OnPageIndexChanging
- uid: System.Web.UI.WebControls.FormView.PageCount*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: PageCount
  nameWithType: FormView.PageCount
- uid: System.Web.UI.WebControls.FormView.PageIndex*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: PageIndex
  nameWithType: FormView.PageIndex
- uid: System.Web.UI.WebControls.FormView.PagerSettings*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: PagerSettings
  nameWithType: FormView.PagerSettings
- uid: System.Web.UI.WebControls.FormView.PagerStyle*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: PagerStyle
  nameWithType: FormView.PagerStyle
- uid: System.Web.UI.WebControls.FormView.PagerTemplate*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: PagerTemplate
  nameWithType: FormView.PagerTemplate
- uid: System.Web.UI.WebControls.FormView.PerformDataBinding*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: PerformDataBinding
  nameWithType: FormView.PerformDataBinding
- uid: System.Web.UI.WebControls.FormView.PrepareControlHierarchy*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: PrepareControlHierarchy
  nameWithType: FormView.PrepareControlHierarchy
- uid: System.Web.UI.WebControls.FormView.RaisePostBackEvent*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: RaisePostBackEvent
  nameWithType: FormView.RaisePostBackEvent
- uid: System.Web.UI.WebControls.FormView.Render*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: Render
  nameWithType: FormView.Render
- uid: System.Web.UI.WebControls.FormView.RenderOuterTable*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: RenderOuterTable
  nameWithType: FormView.RenderOuterTable
- uid: System.Web.UI.WebControls.FormView.Row*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: Row
  nameWithType: FormView.Row
- uid: System.Web.UI.WebControls.FormView.RowStyle*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: RowStyle
  nameWithType: FormView.RowStyle
- uid: System.Web.UI.WebControls.FormView.SaveControlState*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: SaveControlState
  nameWithType: FormView.SaveControlState
- uid: System.Web.UI.WebControls.FormView.SaveViewState*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: SaveViewState
  nameWithType: FormView.SaveViewState
- uid: System.Web.UI.WebControls.FormView.SelectedValue*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: SelectedValue
  nameWithType: FormView.SelectedValue
- uid: System.Web.UI.WebControls.FormView.SetPageIndex*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: SetPageIndex
  nameWithType: FormView.SetPageIndex
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#IDataItemContainer#DataItemIndex*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: System.Web.UI.IDataItemContainer.DataItemIndex
  nameWithType: FormView.System.Web.UI.IDataItemContainer.DataItemIndex
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#IDataItemContainer#DisplayIndex*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: System.Web.UI.IDataItemContainer.DisplayIndex
  nameWithType: FormView.System.Web.UI.IDataItemContainer.DisplayIndex
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: System.Web.UI.IPostBackEventHandler.RaisePostBackEvent
  nameWithType: FormView.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataKeyNames*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundControl.DataKeyNames
  nameWithType: FormView.System.Web.UI.WebControls.IDataBoundControl.DataKeyNames
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataMember*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundControl.DataMember
  nameWithType: FormView.System.Web.UI.WebControls.IDataBoundControl.DataMember
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataSource*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundControl.DataSource
  nameWithType: FormView.System.Web.UI.WebControls.IDataBoundControl.DataSource
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataSourceID*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundControl.DataSourceID
  nameWithType: FormView.System.Web.UI.WebControls.IDataBoundControl.DataSourceID
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataSourceObject*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundControl.DataSourceObject
  nameWithType: FormView.System.Web.UI.WebControls.IDataBoundControl.DataSourceObject
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundItemControl#DataKey*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundItemControl.DataKey
  nameWithType: FormView.System.Web.UI.WebControls.IDataBoundItemControl.DataKey
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundItemControl#Mode*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundItemControl.Mode
  nameWithType: FormView.System.Web.UI.WebControls.IDataBoundItemControl.Mode
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IPostBackContainer#GetPostBackOptions*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions
  nameWithType: FormView.System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions
- uid: System.Web.UI.WebControls.FormView.TagKey*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: TagKey
  nameWithType: FormView.TagKey
- uid: System.Web.UI.WebControls.FormView.TopPagerRow*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: TopPagerRow
  nameWithType: FormView.TopPagerRow
- uid: System.Web.UI.WebControls.FormView.TrackViewState*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: TrackViewState
  nameWithType: FormView.TrackViewState
- uid: System.Web.UI.WebControls.FormView.UpdateItem*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: UpdateItem
  nameWithType: FormView.UpdateItem
- uid: System.Web.UI.WebControls.FormView.UpdateMethod*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: UpdateMethod
  nameWithType: FormView.UpdateMethod
