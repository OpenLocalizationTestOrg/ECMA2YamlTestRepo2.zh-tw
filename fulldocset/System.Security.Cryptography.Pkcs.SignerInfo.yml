### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.Pkcs.SignerInfo
  id: SignerInfo
  children:
  - System.Security.Cryptography.Pkcs.SignerInfo.Certificate
  - System.Security.Cryptography.Pkcs.SignerInfo.CheckHash
  - System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Boolean)
  - System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)
  - System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature
  - System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature(System.Security.Cryptography.Pkcs.CmsSigner)
  - System.Security.Cryptography.Pkcs.SignerInfo.CounterSignerInfos
  - System.Security.Cryptography.Pkcs.SignerInfo.DigestAlgorithm
  - System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(System.Int32)
  - System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(System.Security.Cryptography.Pkcs.SignerInfo)
  - System.Security.Cryptography.Pkcs.SignerInfo.SignedAttributes
  - System.Security.Cryptography.Pkcs.SignerInfo.SignerIdentifier
  - System.Security.Cryptography.Pkcs.SignerInfo.UnsignedAttributes
  - System.Security.Cryptography.Pkcs.SignerInfo.Version
  langs:
  - csharp
  name: SignerInfo
  nameWithType: SignerInfo
  fullName: System.Security.Cryptography.Pkcs.SignerInfo
  type: Class
  summary: 'SignerInfo 類別代表與相關聯的簽署人<xref href=&quot;System.Security.Cryptography.Pkcs.SignedCms&quot;></xref>表示 CMS/PKCS #7 訊息物件。'
  remarks: "SignerInfo 類別所代表的簽章可以是透過訊息內容或簽章。 第二種類型的簽章指*副署*。       這項實作 CMS/PKCS #7 支援只有一個層級的副署。  也就是說，簽章可以簽署，形成副署簽章，但無法再次簽署該副署。       這個類別並沒有公用建構函式。因此，它不會公開執行個體化。 它是唯讀狀態類別從存取<xref:System.Security.Cryptography.Pkcs.SignedCms.SignerInfos%2A?displayProperty=fullName>屬性。</xref:System.Security.Cryptography.Pkcs.SignedCms.SignerInfos%2A?displayProperty=fullName>"
  syntax:
    content: public sealed class SignerInfo
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignerInfo.Certificate
  id: Certificate
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  langs:
  - csharp
  name: Certificate
  nameWithType: SignerInfo.Certificate
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.Certificate
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: "憑證屬性擷取簽署憑證簽署人資訊與相關聯。"
  remarks: "如果簽章的憑證就不會包含在簽入時間使用<xref:System.Security.Cryptography.Pkcs.CmsSigner.IncludeOption%2A?displayProperty=fullName>屬性，則憑證不會傳回。</xref:System.Security.Cryptography.Pkcs.CmsSigner.IncludeOption%2A?displayProperty=fullName>"
  syntax:
    content: public System.Security.Cryptography.X509Certificates.X509Certificate2 Certificate { get; }
    return:
      type: System.Security.Cryptography.X509Certificates.X509Certificate2
      description: "<xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref>物件，表示簽章憑證。"
  overload: System.Security.Cryptography.Pkcs.SignerInfo.Certificate*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignerInfo.CheckHash
  id: CheckHash
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  langs:
  - csharp
  name: CheckHash()
  nameWithType: SignerInfo.CheckHash()
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.CheckHash()
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: 'CheckHash 方法可以確認資料完整性的 CMS/PKCS #7 訊息簽署人資訊。 CheckHash 是特定的方法主體會使用特定的安全性基礎結構應用程式中使用**HashOnly**隸屬<xref href=&quot;System.Security.Cryptography.Pkcs.SubjectIdentifierType&quot;></xref>列舉設定時<xref href=&quot;System.Security.Cryptography.Pkcs.CmsSigner&quot;></xref>物件。 因為這個方法並不會驗證數位簽章 CheckHash 不會驗證簽署人資訊。 一般用途 CMS/PKCS #7 訊息簽署人資訊和副署的真實性和完整性檢查，請使用&lt;xref:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature%28System.Boolean%29&gt;或&lt;xref:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature%28System.Security.Cryptography.X509Certificates.X509Certificate2Collection%2CSystem.Boolean%29&gt;方法。'
  remarks: '這個方法不提供驗證的 CMS/PKCS #7 訊息簽署人資訊。'
  syntax:
    content: public void CheckHash ();
    parameters: []
  overload: System.Security.Cryptography.Pkcs.SignerInfo.CheckHash*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "無法完成密碼編譯作業。"
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Boolean)
  id: CheckSignature(System.Boolean)
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  langs:
  - csharp
  name: CheckSignature(Boolean)
  nameWithType: SignerInfo.CheckSignature(Boolean)
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(Boolean)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: "CheckSignature 方法驗證數位簽章的訊息，並選擇性地驗證憑證。"
  remarks: "如果數位簽章驗證失敗或不符合任何驗證需求，則這個方法會擲回例外狀況。       如果需要更複雜的驗證，呼叫端可以指定只有簽章驗證，然後使用<xref:System.Security.Cryptography.X509Certificates.X509Chain>物件來執行自訂驗證。</xref:System.Security.Cryptography.X509Certificates.X509Chain>"
  syntax:
    content: public void CheckSignature (bool verifySignatureOnly);
    parameters:
    - id: verifySignatureOnly
      type: System.Boolean
      description: "布林值，指定是否要驗證數位簽章。 如果`verifySignatureOnly`是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>，驗證簽章。 如果`verifySignatureOnly`是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>、 驗證數位簽章、 憑證鏈結驗證和驗證憑證的目的。 如果憑證沒有金鑰使用方式，或如果金鑰使用方法支援數位簽章或不可否認性目的之憑證被視為有效。"
  overload: System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Null 參考傳遞給不接受其為有效引數的方法。"
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "無法完成密碼編譯作業。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "方法呼叫對物件的目前狀態無效。"
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)
  id: CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  langs:
  - csharp
  name: CheckSignature(X509Certificate2Collection,Boolean)
  nameWithType: SignerInfo.CheckSignature(X509Certificate2Collection,Boolean)
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(X509Certificate2Collection,Boolean)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: "CheckSignature 方法驗證數位簽章的訊息所使用的憑證指定的集合，並選擇性地驗證憑證。"
  remarks: "如果數位簽章驗證失敗或不符合任何驗證需求，則這個方法會擲回例外狀況。       如果需要更複雜的驗證，呼叫端可以指定只有簽章驗證，然後使用<xref:System.Security.Cryptography.X509Certificates.X509Chain>物件來執行自訂驗證。</xref:System.Security.Cryptography.X509Certificates.X509Chain>"
  syntax:
    content: public void CheckSignature (System.Security.Cryptography.X509Certificates.X509Certificate2Collection extraStore, bool verifySignatureOnly);
    parameters:
    - id: extraStore
      type: System.Security.Cryptography.X509Certificates.X509Certificate2Collection
      description: "<xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2Collection&quot;> </xref>可以用來驗證鏈結的物件。 如果沒有額外的憑證會用來驗證鏈結，請使用&lt;xref:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature%28System.Boolean%29&gt;而不是 CheckSignature。"
    - id: verifySignatureOnly
      type: System.Boolean
      description: "布林值，指定是否要驗證數位簽章。 如果`verifySignatureOnly`是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>，驗證簽章。 如果`verifySignatureOnly`是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>、 驗證數位簽章、 憑證鏈結驗證和驗證憑證的目的。 如果憑證沒有金鑰使用方式，或如果金鑰使用方法支援數位簽章或不可否認性目的之憑證被視為有效。"
  overload: System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Null 參考傳遞給不接受其為有效引數的方法。"
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "無法完成密碼編譯作業。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "方法呼叫對物件的目前狀態無效。"
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature
  id: ComputeCounterSignature
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  langs:
  - csharp
  name: ComputeCounterSignature()
  nameWithType: SignerInfo.ComputeCounterSignature()
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature()
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: 'ComputeCounterSignature 方法提示使用者選取簽署憑證、 建立副署簽章，並加入至 CMS/PKCS #7 訊息的簽章。 副署僅限於一個層級。'
  remarks: "這項實作 CMS/PKCS #7 支援只有一個層級的副署。  也就是說，簽章可以簽署，形成副署簽章，但無法再次簽署該副署。       這個方法會顯示您可以在其中選擇這個訊息的簽署人的使用者介面。 這需要目前的處理序正在執行*使用者互動模式*，亦即，<xref:System.Environment.UserInteractive%2A?displayProperty=fullName>屬性設定為`true`。</xref:System.Environment.UserInteractive%2A?displayProperty=fullName> 處理程序通常是使用者互動模式中除非它是服務處理程序或 Web 應用程式內執行。       簽署人的憑證符合下列條件將會顯示在清單中:-憑證具有相關聯的私密金鑰。      -此憑證是在其有效期間內。      -憑證具有不金鑰使用方法 」 或 「 支援數位簽章或不可否認性的金鑰使用方式。       簽章者憑證選擇從我的存放區。      ## 下列權限，才能顯示使用者介面的.NET framework 安全性:-<xref:System.Security.Permissions.UIPermissionWindow?displayProperty=fullName>存取簽章金鑰所需的下列權限:- <xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName>- <xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName></xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName> </xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName> </xref:System.Security.Permissions.UIPermissionWindow?displayProperty=fullName>"
  syntax:
    content: public void ComputeCounterSignature ();
    parameters: []
  overload: System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Null 參考傳遞給不接受其為有效引數的方法。"
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "無法完成密碼編譯作業。"
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature(System.Security.Cryptography.Pkcs.CmsSigner)
  id: ComputeCounterSignature(System.Security.Cryptography.Pkcs.CmsSigner)
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  langs:
  - csharp
  name: ComputeCounterSignature(CmsSigner)
  nameWithType: SignerInfo.ComputeCounterSignature(CmsSigner)
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature(CmsSigner)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: 'ComputeCounterSignature 方法建立使用指定的簽署者的副署簽章，並加入至 CMS/PKCS #7 訊息的簽章。 副署僅限於一個層級。'
  remarks: "這項實作 CMS/PKCS #7 支援只有一個層級的副署。  也就是說，簽章可以簽署，形成副署簽章，但無法再次簽署該副署。      ## .NET framework 安全性存取簽章金鑰所需的下列權限:- <xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName>- <xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName></xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName> </xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName>"
  syntax:
    content: public void ComputeCounterSignature (System.Security.Cryptography.Pkcs.CmsSigner signer);
    parameters:
    - id: signer
      type: System.Security.Cryptography.Pkcs.CmsSigner
      description: "A <xref href=&quot;System.Security.Cryptography.Pkcs.CmsSigner&quot;> </xref>代表計數器簽署者的物件。"
  overload: System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Null 參考傳遞給不接受其為有效引數的方法。"
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "無法完成密碼編譯作業。"
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignerInfo.CounterSignerInfos
  id: CounterSignerInfos
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  langs:
  - csharp
  name: CounterSignerInfos
  nameWithType: SignerInfo.CounterSignerInfos
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.CounterSignerInfos
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: "CounterSignerInfos 屬性擷取計數器簽署人與簽署人資訊相關聯的集。"
  remarks: '這項實作 CMS/PKCS #7 支援只有一個層級的副署。 也就是說，簽章可以簽署，形成副署簽章，但無法再次簽署該副署。'
  syntax:
    content: public System.Security.Cryptography.Pkcs.SignerInfoCollection CounterSignerInfos { get; }
    return:
      type: System.Security.Cryptography.Pkcs.SignerInfoCollection
      description: "A <xref href=&quot;System.Security.Cryptography.Pkcs.SignerInfoCollection&quot;> </xref>集合，表示計數器簽署人的簽署人資訊。 如果有任何計數器簽署人，屬性是空的集合。"
  overload: System.Security.Cryptography.Pkcs.SignerInfo.CounterSignerInfos*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignerInfo.DigestAlgorithm
  id: DigestAlgorithm
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  langs:
  - csharp
  name: DigestAlgorithm
  nameWithType: SignerInfo.DigestAlgorithm
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.DigestAlgorithm
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: "DigestAlgorithm 屬性擷取<xref href=&quot;System.Security.Cryptography.Oid&quot;></xref>物件，表示簽章計算中使用的雜湊演算法。"
  syntax:
    content: public System.Security.Cryptography.Oid DigestAlgorithm { get; }
    return:
      type: System.Security.Cryptography.Oid
      description: "<xref href=&quot;System.Security.Cryptography.Oid&quot;> </xref>物件，表示使用簽章之雜湊演算法。"
  overload: System.Security.Cryptography.Pkcs.SignerInfo.DigestAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(System.Int32)
  id: RemoveCounterSignature(System.Int32)
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  langs:
  - csharp
  name: RemoveCounterSignature(Int32)
  nameWithType: SignerInfo.RemoveCounterSignature(Int32)
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(Int32)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: "RemoveCounterSignature 方法中移除位於指定索引處副署<xref:System.Security.Cryptography.Pkcs.SignerInfo.CounterSignerInfos*>集合。</xref:System.Security.Cryptography.Pkcs.SignerInfo.CounterSignerInfos*>"
  syntax:
    content: public void RemoveCounterSignature (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "若要移除副署以零為起始的索引。"
  overload: System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "無法完成密碼編譯作業。"
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(System.Security.Cryptography.Pkcs.SignerInfo)
  id: RemoveCounterSignature(System.Security.Cryptography.Pkcs.SignerInfo)
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  langs:
  - csharp
  name: RemoveCounterSignature(SignerInfo)
  nameWithType: SignerInfo.RemoveCounterSignature(SignerInfo)
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(SignerInfo)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: "RemoveCounterSignature 方法中移除指定副署<xref href=&quot;System.Security.Cryptography.Pkcs.SignerInfo&quot;></xref>物件。"
  syntax:
    content: public void RemoveCounterSignature (System.Security.Cryptography.Pkcs.SignerInfo counterSignerInfo);
    parameters:
    - id: counterSignerInfo
      type: System.Security.Cryptography.Pkcs.SignerInfo
      description: "A <xref href=&quot;System.Security.Cryptography.Pkcs.SignerInfo&quot;> </xref>物件，代表要移除的副署。"
  overload: System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Null 參考傳遞給不接受其為有效引數的方法。"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "引數的值已超出允許的值範圍，被呼叫的方法所定義。"
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "無法完成密碼編譯作業。"
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignerInfo.SignedAttributes
  id: SignedAttributes
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  langs:
  - csharp
  name: SignedAttributes
  nameWithType: SignerInfo.SignedAttributes
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.SignedAttributes
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: "SignedAttributes 屬性擷取<xref href=&quot;System.Security.Cryptography.CryptographicAttributeObjectCollection&quot;></xref>簽署人資訊與相關聯的帶正負號的屬性集合。 帶正負號的屬性會連同訊息內容的其他部分進行簽署。"
  remarks: "帶正負號的屬性可能會包含在範例<xref:System.Security.Cryptography.CryptographicAttributeObjectCollection>SignedAttributes 屬性所擷取的集合是<xref:System.Security.Cryptography.Pkcs.Pkcs9SigningTime>簽署時間屬性。</xref:System.Security.Cryptography.Pkcs.Pkcs9SigningTime> </xref:System.Security.Cryptography.CryptographicAttributeObjectCollection>       帶正負號的屬性已簽署的其餘部分一起<xref:System.Security.Cryptography.Pkcs.SignedCms>訊息內容。</xref:System.Security.Cryptography.Pkcs.SignedCms> 這表示已成功驗證的簽章的合作對象可以有信心，這些屬性的內容是真確，和未被改變。       A<xref:System.Security.Cryptography.Pkcs.Pkcs9ContentType>物件和<xref:System.Security.Cryptography.Pkcs.Pkcs9MessageDigest>物件自動產生並放在 SignedAttributes 屬性每當<xref:System.Security.Cryptography.Pkcs.CmsSigner.SignedAttributes%2A?displayProperty=fullName>對應簽署者的屬性不是空白。</xref:System.Security.Cryptography.Pkcs.CmsSigner.SignedAttributes%2A?displayProperty=fullName> </xref:System.Security.Cryptography.Pkcs.Pkcs9MessageDigest> </xref:System.Security.Cryptography.Pkcs.Pkcs9ContentType>"
  syntax:
    content: public System.Security.Cryptography.CryptographicAttributeObjectCollection SignedAttributes { get; }
    return:
      type: System.Security.Cryptography.CryptographicAttributeObjectCollection
      description: "A <xref href=&quot;System.Security.Cryptography.CryptographicAttributeObjectCollection&quot;> </xref>表示帶正負號的屬性集合。 如果有不帶正負號的屬性，屬性是空的集合。"
  overload: System.Security.Cryptography.Pkcs.SignerInfo.SignedAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignerInfo.SignerIdentifier
  id: SignerIdentifier
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  langs:
  - csharp
  name: SignerIdentifier
  nameWithType: SignerInfo.SignerIdentifier
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.SignerIdentifier
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: "SignerIdentifier 屬性擷取簽署者簽署人資訊與相關聯的憑證識別碼。"
  syntax:
    content: public System.Security.Cryptography.Pkcs.SubjectIdentifier SignerIdentifier { get; }
    return:
      type: System.Security.Cryptography.Pkcs.SubjectIdentifier
      description: "A <xref href=&quot;System.Security.Cryptography.Pkcs.SubjectIdentifier&quot;> </xref>唯一識別的憑證，簽署人資訊與相關聯的物件。"
  overload: System.Security.Cryptography.Pkcs.SignerInfo.SignerIdentifier*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignerInfo.UnsignedAttributes
  id: UnsignedAttributes
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  langs:
  - csharp
  name: UnsignedAttributes
  nameWithType: SignerInfo.UnsignedAttributes
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.UnsignedAttributes
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: "UnsignedAttributes 屬性擷取<xref href=&quot;System.Security.Cryptography.CryptographicAttributeObjectCollection&quot;></xref>不帶正負號與相關聯的屬性集合<xref href=&quot;System.Security.Cryptography.Pkcs.SignerInfo&quot;></xref>內容。 不帶正負號的屬性可以修改必然會使簽章失效。"
  remarks: "不帶正負號的屬性未簽署的其餘部分一起<xref:System.Security.Cryptography.Pkcs.SignedCms>訊息內容。</xref:System.Security.Cryptography.Pkcs.SignedCms> 即使合作對象已順利驗證簽章，不帶正負號的屬性可能已遭修改，而且不應視為真實性或完整性。       不帶正負號的屬性可能會包含在範例<xref:System.Security.Cryptography.CryptographicAttributeObjectCollection>UnsignedAttributes 屬性所擷取的集合是副署簽章。</xref:System.Security.Cryptography.CryptographicAttributeObjectCollection>"
  syntax:
    content: public System.Security.Cryptography.CryptographicAttributeObjectCollection UnsignedAttributes { get; }
    return:
      type: System.Security.Cryptography.CryptographicAttributeObjectCollection
      description: "A <xref href=&quot;System.Security.Cryptography.CryptographicAttributeObjectCollection&quot;> </xref>表示不帶正負號的屬性集合。 如果有任何不帶正負號的屬性，屬性是空的集合。"
  overload: System.Security.Cryptography.Pkcs.SignerInfo.UnsignedAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignerInfo.Version
  id: Version
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  langs:
  - csharp
  name: Version
  nameWithType: SignerInfo.Version
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.Version
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: "Version 屬性擷取的簽署人資訊版本。"
  remarks: '版本會決定訊息是否為 PKCS #7 訊息或密碼編譯訊息語法 (CMS) 訊息。 CMS 是較新的 PKCS #7 超集。'
  syntax:
    content: public int Version { get; }
    return:
      type: System.Int32
      description: "整數值，指定的簽署人資訊版本。"
  overload: System.Security.Cryptography.Pkcs.SignerInfo.Version*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Security.Cryptography.CryptographicException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Security.Cryptography.Pkcs.SignerInfo.Certificate
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: Certificate
  nameWithType: SignerInfo.Certificate
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.Certificate
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509Certificate2
  nameWithType: X509Certificate2
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2
- uid: System.Security.Cryptography.Pkcs.SignerInfo.CheckHash
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: CheckHash()
  nameWithType: SignerInfo.CheckHash()
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.CheckHash()
- uid: System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Boolean)
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: CheckSignature(Boolean)
  nameWithType: SignerInfo.CheckSignature(Boolean)
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: CheckSignature(X509Certificate2Collection,Boolean)
  nameWithType: SignerInfo.CheckSignature(X509Certificate2Collection,Boolean)
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(X509Certificate2Collection,Boolean)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2Collection
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509Certificate2Collection
  nameWithType: X509Certificate2Collection
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2Collection
- uid: System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: ComputeCounterSignature()
  nameWithType: SignerInfo.ComputeCounterSignature()
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature()
- uid: System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature(System.Security.Cryptography.Pkcs.CmsSigner)
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: ComputeCounterSignature(CmsSigner)
  nameWithType: SignerInfo.ComputeCounterSignature(CmsSigner)
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature(CmsSigner)
- uid: System.Security.Cryptography.Pkcs.CmsSigner
  parent: System.Security.Cryptography.Pkcs
  isExternal: false
  name: CmsSigner
  nameWithType: CmsSigner
  fullName: System.Security.Cryptography.Pkcs.CmsSigner
- uid: System.Security.Cryptography.Pkcs.SignerInfo.CounterSignerInfos
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: CounterSignerInfos
  nameWithType: SignerInfo.CounterSignerInfos
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.CounterSignerInfos
- uid: System.Security.Cryptography.Pkcs.SignerInfoCollection
  parent: System.Security.Cryptography.Pkcs
  isExternal: false
  name: SignerInfoCollection
  nameWithType: SignerInfoCollection
  fullName: System.Security.Cryptography.Pkcs.SignerInfoCollection
- uid: System.Security.Cryptography.Pkcs.SignerInfo.DigestAlgorithm
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: DigestAlgorithm
  nameWithType: SignerInfo.DigestAlgorithm
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.DigestAlgorithm
- uid: System.Security.Cryptography.Oid
  parent: System.Security.Cryptography
  isExternal: false
  name: Oid
  nameWithType: Oid
  fullName: System.Security.Cryptography.Oid
- uid: System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(System.Int32)
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: RemoveCounterSignature(Int32)
  nameWithType: SignerInfo.RemoveCounterSignature(Int32)
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(System.Security.Cryptography.Pkcs.SignerInfo)
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: RemoveCounterSignature(SignerInfo)
  nameWithType: SignerInfo.RemoveCounterSignature(SignerInfo)
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(SignerInfo)
- uid: System.Security.Cryptography.Pkcs.SignerInfo
  parent: System.Security.Cryptography.Pkcs
  isExternal: false
  name: SignerInfo
  nameWithType: SignerInfo
  fullName: System.Security.Cryptography.Pkcs.SignerInfo
- uid: System.Security.Cryptography.Pkcs.SignerInfo.SignedAttributes
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: SignedAttributes
  nameWithType: SignerInfo.SignedAttributes
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.SignedAttributes
- uid: System.Security.Cryptography.CryptographicAttributeObjectCollection
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicAttributeObjectCollection
  nameWithType: CryptographicAttributeObjectCollection
  fullName: System.Security.Cryptography.CryptographicAttributeObjectCollection
- uid: System.Security.Cryptography.Pkcs.SignerInfo.SignerIdentifier
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: SignerIdentifier
  nameWithType: SignerInfo.SignerIdentifier
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.SignerIdentifier
- uid: System.Security.Cryptography.Pkcs.SubjectIdentifier
  parent: System.Security.Cryptography.Pkcs
  isExternal: false
  name: SubjectIdentifier
  nameWithType: SubjectIdentifier
  fullName: System.Security.Cryptography.Pkcs.SubjectIdentifier
- uid: System.Security.Cryptography.Pkcs.SignerInfo.UnsignedAttributes
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: UnsignedAttributes
  nameWithType: SignerInfo.UnsignedAttributes
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.UnsignedAttributes
- uid: System.Security.Cryptography.Pkcs.SignerInfo.Version
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: Version
  nameWithType: SignerInfo.Version
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.Version
- uid: System.Security.Cryptography.Pkcs.SignerInfo.Certificate*
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: Certificate
  nameWithType: SignerInfo.Certificate
- uid: System.Security.Cryptography.Pkcs.SignerInfo.CheckHash*
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: CheckHash
  nameWithType: SignerInfo.CheckHash
- uid: System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature*
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: CheckSignature
  nameWithType: SignerInfo.CheckSignature
- uid: System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature*
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: ComputeCounterSignature
  nameWithType: SignerInfo.ComputeCounterSignature
- uid: System.Security.Cryptography.Pkcs.SignerInfo.CounterSignerInfos*
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: CounterSignerInfos
  nameWithType: SignerInfo.CounterSignerInfos
- uid: System.Security.Cryptography.Pkcs.SignerInfo.DigestAlgorithm*
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: DigestAlgorithm
  nameWithType: SignerInfo.DigestAlgorithm
- uid: System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature*
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: RemoveCounterSignature
  nameWithType: SignerInfo.RemoveCounterSignature
- uid: System.Security.Cryptography.Pkcs.SignerInfo.SignedAttributes*
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: SignedAttributes
  nameWithType: SignerInfo.SignedAttributes
- uid: System.Security.Cryptography.Pkcs.SignerInfo.SignerIdentifier*
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: SignerIdentifier
  nameWithType: SignerInfo.SignerIdentifier
- uid: System.Security.Cryptography.Pkcs.SignerInfo.UnsignedAttributes*
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: UnsignedAttributes
  nameWithType: SignerInfo.UnsignedAttributes
- uid: System.Security.Cryptography.Pkcs.SignerInfo.Version*
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: Version
  nameWithType: SignerInfo.Version
