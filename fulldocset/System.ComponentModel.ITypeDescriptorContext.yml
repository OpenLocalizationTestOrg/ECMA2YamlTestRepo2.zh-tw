### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.ITypeDescriptorContext
  id: ITypeDescriptorContext
  children:
  - System.ComponentModel.ITypeDescriptorContext.Container
  - System.ComponentModel.ITypeDescriptorContext.Instance
  - System.ComponentModel.ITypeDescriptorContext.OnComponentChanged
  - System.ComponentModel.ITypeDescriptorContext.OnComponentChanging
  - System.ComponentModel.ITypeDescriptorContext.PropertyDescriptor
  langs:
  - csharp
  name: ITypeDescriptorContext
  nameWithType: ITypeDescriptorContext
  fullName: System.ComponentModel.ITypeDescriptorContext
  type: Interface
  summary: "提供有關元件，例如其容器和屬性描述項的內容資訊。"
  remarks: "ITypeDescriptorContext 介面會提供有關元件的內容資訊。 ITypeDescriptorContext 通常用在設計階段提供設計階段容器的相關資訊。 這個介面常用於類型轉換。 如需詳細資訊，請參閱<xref:System.ComponentModel.TypeConverter>.</xref:System.ComponentModel.TypeConverter>      > [!NOTE] > 時，不能有這個介面設計型別轉換子。 如果特定介面、 屬性或服務是必要，但無法使用，應傳回型別轉換子`null`而非擲回例外狀況。 此介面的屬性可能會傳回`null`在任何時候，您應該規劃此。"
  example:
  - "The following code example demonstrates how to use the ITypeDescriptorContext interface to support type conversion.  \n  \n [!code-cpp[InstanceDescriptorSample#1](~/add/codesnippet/cpp/t-system.componentmodel._73_1.cpp)]\n [!code-vb[InstanceDescriptorSample#1](~/add/codesnippet/visualbasic/t-system.componentmodel._73_1.vb)]\n [!code-cs[InstanceDescriptorSample#1](~/add/codesnippet/csharp/t-system.componentmodel._73_1.cs)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public interface ITypeDescriptorContext : IServiceProvider
  implements:
  - System.IServiceProvider
  platform:
  - net462
- uid: System.ComponentModel.ITypeDescriptorContext.Container
  id: Container
  parent: System.ComponentModel.ITypeDescriptorContext
  langs:
  - csharp
  name: Container
  nameWithType: ITypeDescriptorContext.Container
  fullName: System.ComponentModel.ITypeDescriptorContext.Container
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "取得表示這個容器<xref href=&quot;System.ComponentModel.TypeDescriptor&quot;></xref>要求。"
  remarks: "容器屬性會取得元件型別描述項相關聯的邏輯容器。"
  syntax:
    content: public System.ComponentModel.IContainer Container { get; }
    return:
      type: System.ComponentModel.IContainer
      description: "<xref href=&quot;System.ComponentModel.IContainer&quot;> </xref>與物件的集合，這個<xref href=&quot;System.ComponentModel.TypeDescriptor&quot;> </xref>，否則<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果沒有任何容器或<xref href=&quot;System.ComponentModel.TypeDescriptor&quot;></xref>不會使用外部物件。"
  overload: System.ComponentModel.ITypeDescriptorContext.Container*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.ITypeDescriptorContext.Instance
  id: Instance
  parent: System.ComponentModel.ITypeDescriptorContext
  langs:
  - csharp
  name: Instance
  nameWithType: ITypeDescriptorContext.Instance
  fullName: System.ComponentModel.ITypeDescriptorContext.Instance
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "取得與此類型描述元要求連接的物件。"
  remarks: "執行個體屬性取得的物件，會叫用<xref:System.ComponentModel.ITypeDescriptorContext>介面。</xref:System.ComponentModel.ITypeDescriptorContext> 例如，如果<xref:System.Drawing.Color>轉換時，執行個體會傳回實際的執行個體，而且使用<xref:System.Drawing.Color>.</xref:System.Drawing.Color>控制項的</xref:System.Drawing.Color>指定型別轉換子 接下來，您可以查詢以進一步了解其服務和其<xref:System.ComponentModel.ITypeDescriptorContext.Container%2A>。</xref:System.ComponentModel.ITypeDescriptorContext.Container%2A>控制項"
  syntax:
    content: public object Instance { get; }
    return:
      type: System.Object
      description: "物件上叫用方法<xref href=&quot;System.ComponentModel.TypeDescriptor&quot;> </xref>，否則<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果沒有任何物件負責呼叫。"
  overload: System.ComponentModel.ITypeDescriptorContext.Instance*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.ITypeDescriptorContext.OnComponentChanged
  id: OnComponentChanged
  parent: System.ComponentModel.ITypeDescriptorContext
  langs:
  - csharp
  name: OnComponentChanged()
  nameWithType: ITypeDescriptorContext.OnComponentChanged()
  fullName: System.ComponentModel.ITypeDescriptorContext.OnComponentChanged()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "引發<xref href=&quot;System.ComponentModel.Design.IComponentChangeService.ComponentChanged&quot;></xref>事件。"
  remarks: "使用 OnComponentChanged 方法傳送通知已變更物件的執行個體。       引發事件會透過委派事件處理常式叫用。 如需詳細資訊，請參閱[NIB︰ 引發事件](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)。       OnComponentChanged 方法也允許衍生的類別處理事件，而不用附加委派。 這是處理衍生類別中的事件的慣用的技巧。"
  syntax:
    content: public void OnComponentChanged ();
    parameters: []
  overload: System.ComponentModel.ITypeDescriptorContext.OnComponentChanged*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.ITypeDescriptorContext.OnComponentChanging
  id: OnComponentChanging
  parent: System.ComponentModel.ITypeDescriptorContext
  langs:
  - csharp
  name: OnComponentChanging()
  nameWithType: ITypeDescriptorContext.OnComponentChanging()
  fullName: System.ComponentModel.ITypeDescriptorContext.OnComponentChanging()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "引發<xref href=&quot;System.ComponentModel.Design.IComponentChangeService.ComponentChanging&quot;></xref>事件。"
  remarks: "您可以使用 OnComponentChanging 方法來傳送物件的執行個體是即將變更的通知。 這個方法也會傳回值，指出是否可以變更這個物件。 當`false`是傳回，不會變更物件。       引發事件會透過委派事件處理常式叫用。 如需詳細資訊，請參閱[NIB︰ 引發事件](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)。       OnComponentChanging 方法也允許衍生的類別處理事件，而不用附加委派。 這是處理衍生類別中的事件的慣用的技巧。"
  syntax:
    content: public bool OnComponentChanging ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果這個物件可以變更;否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.ITypeDescriptorContext.OnComponentChanging*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.ITypeDescriptorContext.PropertyDescriptor
  id: PropertyDescriptor
  parent: System.ComponentModel.ITypeDescriptorContext
  langs:
  - csharp
  name: PropertyDescriptor
  nameWithType: ITypeDescriptorContext.PropertyDescriptor
  fullName: System.ComponentModel.ITypeDescriptorContext.PropertyDescriptor
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "取得<xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;></xref>與指定的內容項目相關聯。"
  syntax:
    content: public System.ComponentModel.PropertyDescriptor PropertyDescriptor { get; }
    return:
      type: System.ComponentModel.PropertyDescriptor
      description: "<xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref>描述指定的內容項目，否則<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果沒有任何<xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;></xref>負責呼叫。"
  overload: System.ComponentModel.ITypeDescriptorContext.PropertyDescriptor*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.ITypeDescriptorContext.Container
  parent: System.ComponentModel.ITypeDescriptorContext
  isExternal: false
  name: Container
  nameWithType: ITypeDescriptorContext.Container
  fullName: System.ComponentModel.ITypeDescriptorContext.Container
- uid: System.ComponentModel.IContainer
  parent: System.ComponentModel
  isExternal: false
  name: IContainer
  nameWithType: IContainer
  fullName: System.ComponentModel.IContainer
- uid: System.ComponentModel.ITypeDescriptorContext.Instance
  parent: System.ComponentModel.ITypeDescriptorContext
  isExternal: false
  name: Instance
  nameWithType: ITypeDescriptorContext.Instance
  fullName: System.ComponentModel.ITypeDescriptorContext.Instance
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ComponentModel.ITypeDescriptorContext.OnComponentChanged
  parent: System.ComponentModel.ITypeDescriptorContext
  isExternal: false
  name: OnComponentChanged()
  nameWithType: ITypeDescriptorContext.OnComponentChanged()
  fullName: System.ComponentModel.ITypeDescriptorContext.OnComponentChanged()
- uid: System.ComponentModel.ITypeDescriptorContext.OnComponentChanging
  parent: System.ComponentModel.ITypeDescriptorContext
  isExternal: false
  name: OnComponentChanging()
  nameWithType: ITypeDescriptorContext.OnComponentChanging()
  fullName: System.ComponentModel.ITypeDescriptorContext.OnComponentChanging()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.ITypeDescriptorContext.PropertyDescriptor
  parent: System.ComponentModel.ITypeDescriptorContext
  isExternal: false
  name: PropertyDescriptor
  nameWithType: ITypeDescriptorContext.PropertyDescriptor
  fullName: System.ComponentModel.ITypeDescriptorContext.PropertyDescriptor
- uid: System.ComponentModel.PropertyDescriptor
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptor
  nameWithType: PropertyDescriptor
  fullName: System.ComponentModel.PropertyDescriptor
- uid: System.ComponentModel.ITypeDescriptorContext.Container*
  parent: System.ComponentModel.ITypeDescriptorContext
  isExternal: false
  name: Container
  nameWithType: ITypeDescriptorContext.Container
- uid: System.ComponentModel.ITypeDescriptorContext.Instance*
  parent: System.ComponentModel.ITypeDescriptorContext
  isExternal: false
  name: Instance
  nameWithType: ITypeDescriptorContext.Instance
- uid: System.ComponentModel.ITypeDescriptorContext.OnComponentChanged*
  parent: System.ComponentModel.ITypeDescriptorContext
  isExternal: false
  name: OnComponentChanged
  nameWithType: ITypeDescriptorContext.OnComponentChanged
- uid: System.ComponentModel.ITypeDescriptorContext.OnComponentChanging*
  parent: System.ComponentModel.ITypeDescriptorContext
  isExternal: false
  name: OnComponentChanging
  nameWithType: ITypeDescriptorContext.OnComponentChanging
- uid: System.ComponentModel.ITypeDescriptorContext.PropertyDescriptor*
  parent: System.ComponentModel.ITypeDescriptorContext
  isExternal: false
  name: PropertyDescriptor
  nameWithType: ITypeDescriptorContext.PropertyDescriptor
