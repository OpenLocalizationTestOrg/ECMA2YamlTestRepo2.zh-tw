### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Tokens.SigningCredentials
  id: SigningCredentials
  children:
  - System.IdentityModel.Tokens.SigningCredentials.#ctor(System.IdentityModel.Tokens.SecurityKey,System.String,System.String)
  - System.IdentityModel.Tokens.SigningCredentials.#ctor(System.IdentityModel.Tokens.SecurityKey,System.String,System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier)
  - System.IdentityModel.Tokens.SigningCredentials.DigestAlgorithm
  - System.IdentityModel.Tokens.SigningCredentials.SignatureAlgorithm
  - System.IdentityModel.Tokens.SigningCredentials.SigningKey
  - System.IdentityModel.Tokens.SigningCredentials.SigningKeyIdentifier
  langs:
  - csharp
  name: SigningCredentials
  nameWithType: SigningCredentials
  fullName: System.IdentityModel.Tokens.SigningCredentials
  type: Class
  summary: "代表用來產生數位簽章的密碼編譯金鑰及安全演算法。"
  remarks: "使用指定的簽署金鑰、 簽署的金鑰識別碼，以及安全性演算法所使用的 SigningCredentials 類別[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]產生<xref:System.IdentityModel.Tokens.SamlAssertion>.</xref:System.IdentityModel.Tokens.SamlAssertion>數位簽章 若要設定的數位簽章詳細資料，設定<xref:System.IdentityModel.Tokens.SamlAssertion.SigningCredentials%2A>屬性的<xref:System.IdentityModel.Tokens.SamlAssertion>類別。</xref:System.IdentityModel.Tokens.SamlAssertion> </xref:System.IdentityModel.Tokens.SamlAssertion.SigningCredentials%2A>"
  syntax:
    content: public class SigningCredentials
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SigningCredentials.#ctor(System.IdentityModel.Tokens.SecurityKey,System.String,System.String)
  id: '#ctor(System.IdentityModel.Tokens.SecurityKey,System.String,System.String)'
  parent: System.IdentityModel.Tokens.SigningCredentials
  langs:
  - csharp
  name: SigningCredentials(SecurityKey,String,String)
  nameWithType: SigningCredentials.SigningCredentials(SecurityKey,String,String)
  fullName: System.IdentityModel.Tokens.SigningCredentials.SigningCredentials(SecurityKey,String,String)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "初始化的新執行個體<xref href=&quot;System.IdentityModel.Tokens.SigningCredentials&quot;></xref>類別。"
  remarks: "使用<xref:System.IdentityModel.Tokens.SecurityAlgorithms>類別，以指定`signatureAlgorithm`和`digestAlgorithm`參數。</xref:System.IdentityModel.Tokens.SecurityAlgorithms> <xref:System.IdentityModel.Tokens.SecurityAlgorithms>類別包含一組靜態常數字串來表示密碼編譯演算法。</xref:System.IdentityModel.Tokens.SecurityAlgorithms> 中的成員`Signature`後置字元可以用來指定`signatureAlgoritm`參數和成員具有`Digest`後置字元可以用來指定`digestAlgorithm`參數。"
  syntax:
    content: public SigningCredentials (System.IdentityModel.Tokens.SecurityKey signingKey, string signatureAlgorithm, string digestAlgorithm);
    parameters:
    - id: signingKey
      type: System.IdentityModel.Tokens.SecurityKey
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SecurityKey&quot;> </xref> ，其中包含用來產生數位簽章的密碼編譯金鑰。"
    - id: signatureAlgorithm
      type: System.String
      description: "表示用來產生數位簽章的密碼編譯演算法的 URI。"
    - id: digestAlgorithm
      type: System.String
      description: "表示用來計算要被數位簽署之 SOAP 訊息部分的摘要的密碼編譯演算法的 URI。"
  overload: System.IdentityModel.Tokens.SigningCredentials.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SigningCredentials.#ctor(System.IdentityModel.Tokens.SecurityKey,System.String,System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier)
  id: '#ctor(System.IdentityModel.Tokens.SecurityKey,System.String,System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier)'
  parent: System.IdentityModel.Tokens.SigningCredentials
  langs:
  - csharp
  name: SigningCredentials(SecurityKey,String,String,SecurityKeyIdentifier)
  nameWithType: SigningCredentials.SigningCredentials(SecurityKey,String,String,SecurityKeyIdentifier)
  fullName: System.IdentityModel.Tokens.SigningCredentials.SigningCredentials(SecurityKey,String,String,SecurityKeyIdentifier)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "初始化的新執行個體<xref href=&quot;System.IdentityModel.Tokens.SigningCredentials&quot;></xref>類別。"
  remarks: "使用<xref:System.IdentityModel.Tokens.SecurityAlgorithms>類別，以指定`signatureAlgorithm`和`digestAlgorithm`參數。</xref:System.IdentityModel.Tokens.SecurityAlgorithms> <xref:System.IdentityModel.Tokens.SecurityAlgorithms>類別包含一組靜態常數字串來表示密碼編譯演算法。</xref:System.IdentityModel.Tokens.SecurityAlgorithms> 中的成員`Signature`後置字元可以用來指定`signatureAlgoritm`參數和成員具有`Digest`後置字元可以用來指定`digestAlgorithm`參數。"
  syntax:
    content: public SigningCredentials (System.IdentityModel.Tokens.SecurityKey signingKey, string signatureAlgorithm, string digestAlgorithm, System.IdentityModel.Tokens.SecurityKeyIdentifier signingKeyIdentifier);
    parameters:
    - id: signingKey
      type: System.IdentityModel.Tokens.SecurityKey
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SecurityKey&quot;> </xref> ，其中包含用來產生數位簽章的密碼編譯金鑰。"
    - id: signatureAlgorithm
      type: System.String
      description: "表示用來產生數位簽章的密碼編譯演算法的 URI。"
    - id: digestAlgorithm
      type: System.String
      description: "表示用來計算要被數位簽署之 SOAP 訊息部分的摘要的密碼編譯演算法的 URI。"
    - id: signingKeyIdentifier
      type: System.IdentityModel.Tokens.SecurityKeyIdentifier
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifier&quot;> </xref> ，指定代表用來建立數位簽章的索引鍵的識別項。"
  overload: System.IdentityModel.Tokens.SigningCredentials.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SigningCredentials.DigestAlgorithm
  id: DigestAlgorithm
  parent: System.IdentityModel.Tokens.SigningCredentials
  langs:
  - csharp
  name: DigestAlgorithm
  nameWithType: SigningCredentials.DigestAlgorithm
  fullName: System.IdentityModel.Tokens.SigningCredentials.DigestAlgorithm
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "取得用來計算要被數位簽署之 SOAP 訊息部分的摘要的密碼編譯演算法。"
  remarks: "若要設定 DigestAlgorithm 屬性，請使用其中一個使用建構函式`digestAlgorithm`參數。"
  syntax:
    content: public string DigestAlgorithm { get; }
    return:
      type: System.String
      description: "表示用來計算要被數位簽署之 SOAP 訊息部分的摘要的密碼編譯演算法的 URI。"
  overload: System.IdentityModel.Tokens.SigningCredentials.DigestAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SigningCredentials.SignatureAlgorithm
  id: SignatureAlgorithm
  parent: System.IdentityModel.Tokens.SigningCredentials
  langs:
  - csharp
  name: SignatureAlgorithm
  nameWithType: SigningCredentials.SignatureAlgorithm
  fullName: System.IdentityModel.Tokens.SigningCredentials.SignatureAlgorithm
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "取得用來產生數位簽章的密碼編譯演算法。"
  remarks: "若要設定 SignatureAlgorithm 屬性，請使用其中一個使用建構函式`signatureAlgorithm`參數。"
  syntax:
    content: public string SignatureAlgorithm { get; }
    return:
      type: System.String
      description: "表示用來產生數位簽章的密碼編譯演算法的 URI。"
  overload: System.IdentityModel.Tokens.SigningCredentials.SignatureAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SigningCredentials.SigningKey
  id: SigningKey
  parent: System.IdentityModel.Tokens.SigningCredentials
  langs:
  - csharp
  name: SigningKey
  nameWithType: SigningCredentials.SigningKey
  fullName: System.IdentityModel.Tokens.SigningCredentials.SigningKey
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "取得用來產生數位簽章的密碼編譯金鑰。"
  remarks: "若要設定 SigningKey 屬性，使用的建構函式`signingKey`參數。"
  syntax:
    content: public System.IdentityModel.Tokens.SecurityKey SigningKey { get; }
    return:
      type: System.IdentityModel.Tokens.SecurityKey
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SecurityKey&quot;> </xref> ，其中包含用來產生數位簽章的密碼編譯金鑰。"
  overload: System.IdentityModel.Tokens.SigningCredentials.SigningKey*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SigningCredentials.SigningKeyIdentifier
  id: SigningKeyIdentifier
  parent: System.IdentityModel.Tokens.SigningCredentials
  langs:
  - csharp
  name: SigningKeyIdentifier
  nameWithType: SigningCredentials.SigningKeyIdentifier
  fullName: System.IdentityModel.Tokens.SigningCredentials.SigningKeyIdentifier
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "取得代表用來建立數位簽章的索引鍵的識別碼。"
  remarks: "若要設定 SigningKeyIdentifier 屬性，使用的建構函式`signingKeyIdentifier`參數。"
  syntax:
    content: public System.IdentityModel.Tokens.SecurityKeyIdentifier SigningKeyIdentifier { get; }
    return:
      type: System.IdentityModel.Tokens.SecurityKeyIdentifier
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifier&quot;> </xref> ，指定代表用來建立數位簽章的索引鍵的識別項。"
  overload: System.IdentityModel.Tokens.SigningCredentials.SigningKeyIdentifier*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.IdentityModel.Tokens.SigningCredentials.#ctor(System.IdentityModel.Tokens.SecurityKey,System.String,System.String)
  parent: System.IdentityModel.Tokens.SigningCredentials
  isExternal: false
  name: SigningCredentials(SecurityKey,String,String)
  nameWithType: SigningCredentials.SigningCredentials(SecurityKey,String,String)
  fullName: System.IdentityModel.Tokens.SigningCredentials.SigningCredentials(SecurityKey,String,String)
- uid: System.IdentityModel.Tokens.SecurityKey
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKey
  nameWithType: SecurityKey
  fullName: System.IdentityModel.Tokens.SecurityKey
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IdentityModel.Tokens.SigningCredentials.#ctor(System.IdentityModel.Tokens.SecurityKey,System.String,System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier)
  parent: System.IdentityModel.Tokens.SigningCredentials
  isExternal: false
  name: SigningCredentials(SecurityKey,String,String,SecurityKeyIdentifier)
  nameWithType: SigningCredentials.SigningCredentials(SecurityKey,String,String,SecurityKeyIdentifier)
  fullName: System.IdentityModel.Tokens.SigningCredentials.SigningCredentials(SecurityKey,String,String,SecurityKeyIdentifier)
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKeyIdentifier
  nameWithType: SecurityKeyIdentifier
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier
- uid: System.IdentityModel.Tokens.SigningCredentials.DigestAlgorithm
  parent: System.IdentityModel.Tokens.SigningCredentials
  isExternal: false
  name: DigestAlgorithm
  nameWithType: SigningCredentials.DigestAlgorithm
  fullName: System.IdentityModel.Tokens.SigningCredentials.DigestAlgorithm
- uid: System.IdentityModel.Tokens.SigningCredentials.SignatureAlgorithm
  parent: System.IdentityModel.Tokens.SigningCredentials
  isExternal: false
  name: SignatureAlgorithm
  nameWithType: SigningCredentials.SignatureAlgorithm
  fullName: System.IdentityModel.Tokens.SigningCredentials.SignatureAlgorithm
- uid: System.IdentityModel.Tokens.SigningCredentials.SigningKey
  parent: System.IdentityModel.Tokens.SigningCredentials
  isExternal: false
  name: SigningKey
  nameWithType: SigningCredentials.SigningKey
  fullName: System.IdentityModel.Tokens.SigningCredentials.SigningKey
- uid: System.IdentityModel.Tokens.SigningCredentials.SigningKeyIdentifier
  parent: System.IdentityModel.Tokens.SigningCredentials
  isExternal: false
  name: SigningKeyIdentifier
  nameWithType: SigningCredentials.SigningKeyIdentifier
  fullName: System.IdentityModel.Tokens.SigningCredentials.SigningKeyIdentifier
- uid: System.IdentityModel.Tokens.SigningCredentials.#ctor*
  parent: System.IdentityModel.Tokens.SigningCredentials
  isExternal: false
  name: SigningCredentials
  nameWithType: SigningCredentials.SigningCredentials
- uid: System.IdentityModel.Tokens.SigningCredentials.DigestAlgorithm*
  parent: System.IdentityModel.Tokens.SigningCredentials
  isExternal: false
  name: DigestAlgorithm
  nameWithType: SigningCredentials.DigestAlgorithm
- uid: System.IdentityModel.Tokens.SigningCredentials.SignatureAlgorithm*
  parent: System.IdentityModel.Tokens.SigningCredentials
  isExternal: false
  name: SignatureAlgorithm
  nameWithType: SigningCredentials.SignatureAlgorithm
- uid: System.IdentityModel.Tokens.SigningCredentials.SigningKey*
  parent: System.IdentityModel.Tokens.SigningCredentials
  isExternal: false
  name: SigningKey
  nameWithType: SigningCredentials.SigningKey
- uid: System.IdentityModel.Tokens.SigningCredentials.SigningKeyIdentifier*
  parent: System.IdentityModel.Tokens.SigningCredentials
  isExternal: false
  name: SigningKeyIdentifier
  nameWithType: SigningCredentials.SigningKeyIdentifier
