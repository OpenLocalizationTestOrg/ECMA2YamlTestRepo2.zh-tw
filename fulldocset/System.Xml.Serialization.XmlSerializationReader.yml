### YamlMime:ManagedReference
items:
- uid: System.Xml.Serialization.XmlSerializationReader
  id: XmlSerializationReader
  children:
  - System.Xml.Serialization.XmlSerializationReader.#ctor
  - System.Xml.Serialization.XmlSerializationReader.AddFixup(System.Xml.Serialization.XmlSerializationReader.CollectionFixup)
  - System.Xml.Serialization.XmlSerializationReader.AddFixup(System.Xml.Serialization.XmlSerializationReader.Fixup)
  - System.Xml.Serialization.XmlSerializationReader.AddReadCallback(System.String,System.String,System.Type,System.Xml.Serialization.XmlSerializationReadCallback)
  - System.Xml.Serialization.XmlSerializationReader.AddTarget(System.String,System.Object)
  - System.Xml.Serialization.XmlSerializationReader.CheckReaderCount(System.Int32@,System.Int32@)
  - System.Xml.Serialization.XmlSerializationReader.CollapseWhitespace(System.String)
  - System.Xml.Serialization.XmlSerializationReader.CreateAbstractTypeException(System.String,System.String)
  - System.Xml.Serialization.XmlSerializationReader.CreateBadDerivationException(System.String,System.String,System.String,System.String,System.String,System.String)
  - System.Xml.Serialization.XmlSerializationReader.CreateCtorHasSecurityException(System.String)
  - System.Xml.Serialization.XmlSerializationReader.CreateInaccessibleConstructorException(System.String)
  - System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException(System.Type,System.Object)
  - System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException(System.Type,System.Object,System.String)
  - System.Xml.Serialization.XmlSerializationReader.CreateMissingIXmlSerializableType(System.String,System.String,System.String)
  - System.Xml.Serialization.XmlSerializationReader.CreateReadOnlyCollectionException(System.String)
  - System.Xml.Serialization.XmlSerializationReader.CreateUnknownConstantException(System.String,System.Type)
  - System.Xml.Serialization.XmlSerializationReader.CreateUnknownNodeException
  - System.Xml.Serialization.XmlSerializationReader.CreateUnknownTypeException(System.Xml.XmlQualifiedName)
  - System.Xml.Serialization.XmlSerializationReader.DecodeName
  - System.Xml.Serialization.XmlSerializationReader.Document
  - System.Xml.Serialization.XmlSerializationReader.EnsureArrayIndex(System.Array,System.Int32,System.Type)
  - System.Xml.Serialization.XmlSerializationReader.FixupArrayRefs(System.Object)
  - System.Xml.Serialization.XmlSerializationReader.GetArrayLength(System.String,System.String)
  - System.Xml.Serialization.XmlSerializationReader.GetNullAttr
  - System.Xml.Serialization.XmlSerializationReader.GetTarget(System.String)
  - System.Xml.Serialization.XmlSerializationReader.GetXsiType
  - System.Xml.Serialization.XmlSerializationReader.InitCallbacks
  - System.Xml.Serialization.XmlSerializationReader.InitIDs
  - System.Xml.Serialization.XmlSerializationReader.IsReturnValue
  - System.Xml.Serialization.XmlSerializationReader.IsXmlnsAttribute(System.String)
  - System.Xml.Serialization.XmlSerializationReader.ParseWsdlArrayType(System.Xml.XmlAttribute)
  - System.Xml.Serialization.XmlSerializationReader.ReadElementQualifiedName
  - System.Xml.Serialization.XmlSerializationReader.ReadEndElement
  - System.Xml.Serialization.XmlSerializationReader.Reader
  - System.Xml.Serialization.XmlSerializationReader.ReaderCount
  - System.Xml.Serialization.XmlSerializationReader.ReadNull
  - System.Xml.Serialization.XmlSerializationReader.ReadNullableQualifiedName
  - System.Xml.Serialization.XmlSerializationReader.ReadNullableString
  - System.Xml.Serialization.XmlSerializationReader.ReadReference(System.String@)
  - System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement
  - System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement(System.String,System.String)
  - System.Xml.Serialization.XmlSerializationReader.ReadReferencedElements
  - System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(System.String@)
  - System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(System.String,System.String,System.String@)
  - System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(System.String,System.String,System.Boolean,System.String@)
  - System.Xml.Serialization.XmlSerializationReader.ReadSerializable(System.Xml.Serialization.IXmlSerializable)
  - System.Xml.Serialization.XmlSerializationReader.ReadSerializable(System.Xml.Serialization.IXmlSerializable,System.Boolean)
  - System.Xml.Serialization.XmlSerializationReader.ReadString(System.String)
  - System.Xml.Serialization.XmlSerializationReader.ReadString(System.String,System.Boolean)
  - System.Xml.Serialization.XmlSerializationReader.ReadTypedNull(System.Xml.XmlQualifiedName)
  - System.Xml.Serialization.XmlSerializationReader.ReadTypedPrimitive(System.Xml.XmlQualifiedName)
  - System.Xml.Serialization.XmlSerializationReader.ReadXmlDocument(System.Boolean)
  - System.Xml.Serialization.XmlSerializationReader.ReadXmlNode(System.Boolean)
  - System.Xml.Serialization.XmlSerializationReader.Referenced(System.Object)
  - System.Xml.Serialization.XmlSerializationReader.ResolveDynamicAssembly(System.String)
  - System.Xml.Serialization.XmlSerializationReader.ShrinkArray(System.Array,System.Int32,System.Type,System.Boolean)
  - System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64(System.Boolean)
  - System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64(System.String)
  - System.Xml.Serialization.XmlSerializationReader.ToByteArrayHex(System.Boolean)
  - System.Xml.Serialization.XmlSerializationReader.ToByteArrayHex(System.String)
  - System.Xml.Serialization.XmlSerializationReader.ToChar(System.String)
  - System.Xml.Serialization.XmlSerializationReader.ToDate(System.String)
  - System.Xml.Serialization.XmlSerializationReader.ToDateTime(System.String)
  - System.Xml.Serialization.XmlSerializationReader.ToEnum(System.String,System.Collections.Hashtable,System.String)
  - System.Xml.Serialization.XmlSerializationReader.ToTime(System.String)
  - System.Xml.Serialization.XmlSerializationReader.ToXmlName(System.String)
  - System.Xml.Serialization.XmlSerializationReader.ToXmlNCName(System.String)
  - System.Xml.Serialization.XmlSerializationReader.ToXmlNmToken(System.String)
  - System.Xml.Serialization.XmlSerializationReader.ToXmlNmTokens(System.String)
  - System.Xml.Serialization.XmlSerializationReader.ToXmlQualifiedName(System.String)
  - System.Xml.Serialization.XmlSerializationReader.UnknownAttribute(System.Object,System.Xml.XmlAttribute)
  - System.Xml.Serialization.XmlSerializationReader.UnknownAttribute(System.Object,System.Xml.XmlAttribute,System.String)
  - System.Xml.Serialization.XmlSerializationReader.UnknownElement(System.Object,System.Xml.XmlElement)
  - System.Xml.Serialization.XmlSerializationReader.UnknownElement(System.Object,System.Xml.XmlElement,System.String)
  - System.Xml.Serialization.XmlSerializationReader.UnknownNode(System.Object)
  - System.Xml.Serialization.XmlSerializationReader.UnknownNode(System.Object,System.String)
  - System.Xml.Serialization.XmlSerializationReader.UnreferencedObject(System.String,System.Object)
  langs:
  - csharp
  name: XmlSerializationReader
  nameWithType: XmlSerializationReader
  fullName: System.Xml.Serialization.XmlSerializationReader
  type: Class
  summary: "控制項的還原序列化的<xref:System.Xml.Serialization.XmlSerializer>類別。</xref:System.Xml.Serialization.XmlSerializer>"
  remarks: "在初始化期間，.NET Framework XML 序列化基礎結構，以動態方式產生並編譯暫存類別以進行還原序列化衍生自抽象 XmlSerializationReader 類別進行相關的設定。 XmlSerializationReader 也在.NET Framework，以進行還原序列化的 XML 文件內實作<xref:System.Web.Services.Discovery.DiscoveryDocument>和<xref:System.Web.Services.Description.ServiceDescription>物件。</xref:System.Web.Services.Description.ServiceDescription> </xref:System.Web.Services.Discovery.DiscoveryDocument>       您不應該從 XmlSerializationReader 衍生類別。 請改為呼叫其中一個<xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A>方法。</xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A>"
  syntax:
    content: 'public abstract class XmlSerializationReader : System.Xml.Serialization.XmlSerializationGeneratedCode'
  inheritance:
  - System.Object
  - System.Xml.Serialization.XmlSerializationGeneratedCode
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.#ctor
  id: '#ctor'
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: XmlSerializationReader()
  nameWithType: XmlSerializationReader.XmlSerializationReader()
  fullName: System.Xml.Serialization.XmlSerializationReader.XmlSerializationReader()
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "初始化的新執行個體<xref href=&quot;System.Xml.Serialization.XmlSerializationReader&quot;></xref>類別。"
  syntax:
    content: protected XmlSerializationReader ();
    parameters: []
  overload: System.Xml.Serialization.XmlSerializationReader.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.AddFixup(System.Xml.Serialization.XmlSerializationReader.CollectionFixup)
  id: AddFixup(System.Xml.Serialization.XmlSerializationReader.CollectionFixup)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: AddFixup(XmlSerializationReader+CollectionFixup)
  nameWithType: XmlSerializationReader.AddFixup(XmlSerializationReader+CollectionFixup)
  fullName: System.Xml.Serialization.XmlSerializationReader.AddFixup(XmlSerializationReader+CollectionFixup)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  syntax:
    content: protected void AddFixup (System.Xml.Serialization.XmlSerializationReader.CollectionFixup fixup);
    parameters:
    - id: fixup
      type: System.Xml.Serialization.XmlSerializationReader.CollectionFixup
      description: "即將加入。"
  overload: System.Xml.Serialization.XmlSerializationReader.AddFixup*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.AddFixup(System.Xml.Serialization.XmlSerializationReader.Fixup)
  id: AddFixup(System.Xml.Serialization.XmlSerializationReader.Fixup)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: AddFixup(XmlSerializationReader+Fixup)
  nameWithType: XmlSerializationReader.AddFixup(XmlSerializationReader+Fixup)
  fullName: System.Xml.Serialization.XmlSerializationReader.AddFixup(XmlSerializationReader+Fixup)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  syntax:
    content: protected void AddFixup (System.Xml.Serialization.XmlSerializationReader.Fixup fixup);
    parameters:
    - id: fixup
      type: System.Xml.Serialization.XmlSerializationReader.Fixup
      description: "即將加入。"
  overload: System.Xml.Serialization.XmlSerializationReader.AddFixup*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.AddReadCallback(System.String,System.String,System.Type,System.Xml.Serialization.XmlSerializationReadCallback)
  id: AddReadCallback(System.String,System.String,System.Type,System.Xml.Serialization.XmlSerializationReadCallback)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: AddReadCallback(String,String,Type,XmlSerializationReadCallback)
  nameWithType: XmlSerializationReader.AddReadCallback(String,String,Type,XmlSerializationReadCallback)
  fullName: System.Xml.Serialization.XmlSerializationReader.AddReadCallback(String,String,Type,XmlSerializationReadCallback)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "儲存的實作<xref href=&quot;System.Xml.Serialization.XmlSerializationReadCallback&quot;></xref>委派和更新版本的引動過程其輸入的資料。"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationReader>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationReader>       在初始化期間，.NET Framework XML 序列化基礎結構以動態方式產生並編譯以進行還原序列化衍生自<xref:System.Xml.Serialization.XmlSerializationReader>.</xref:System.Xml.Serialization.XmlSerializationReader>暫時類別 在此過程中，.NET Framework 會產生讀取的方法可實作<xref:System.Xml.Serialization.XmlSerializationReadCallback>委派。</xref:System.Xml.Serialization.XmlSerializationReadCallback> 它會讓特定.NET Framework 型別與 XML 資料型別會透過 SOAP 編碼的 XML 序列化，並不是根項目之間的對應。 接下來，如有必要，在還原序列化期間呼叫讀取的方法。       您不應該直接建立<xref:System.Xml.Serialization.XmlSerializationReadCallback>類別</xref:System.Xml.Serialization.XmlSerializationReadCallback>的執行個體"
  syntax:
    content: protected void AddReadCallback (string name, string ns, Type type, System.Xml.Serialization.XmlSerializationReadCallback read);
    parameters:
    - id: name
      type: System.String
      description: "在還原序列化的.NET Framework 型別名稱。"
    - id: ns
      type: System.String
      description: "在還原序列化的.NET Framework 類型的命名空間。"
    - id: type
      type: System.Type
      description: "<xref:System.Type>要還原序列化。</xref:System.Type>"
    - id: read
      type: System.Xml.Serialization.XmlSerializationReadCallback
      description: "<xref href=&quot;System.Xml.Serialization.XmlSerializationReadCallback&quot;> </xref>委派。"
  overload: System.Xml.Serialization.XmlSerializationReader.AddReadCallback*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.AddTarget(System.String,System.Object)
  id: AddTarget(System.String,System.Object)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: AddTarget(String,Object)
  nameWithType: XmlSerializationReader.AddTarget(String,Object)
  fullName: System.Xml.Serialization.XmlSerializationReader.AddTarget(String,Object)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "儲存物件要還原序列化來自 SOAP 編碼<xref uid=&quot;langword_csharp_multiRef&quot; name=&quot;multiRef&quot; href=&quot;&quot;></xref>項目供稍後存取透過<xref:System.Xml.Serialization.XmlSerializationReader.GetTarget*>方法。</xref:System.Xml.Serialization.XmlSerializationReader.GetTarget*>"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationReader>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationReader>       SOAP 編碼允許唯一的 XML 項目出現一次為 SOAP 訊息內`multiRef`所識別的項目`id`屬性。 `id`值可以由參考多次`ref`屬性 (或`href`SOAP 1.1 中的屬性) 的替代項目。       SOAP 編碼為 SOAP 1.1 規格的第 5 節中所述。"
  syntax:
    content: protected void AddTarget (string id, object o);
    parameters:
    - id: id
      type: System.String
      description: "值<xref uid=&quot;langword_csharp_id&quot; name=&quot;id&quot; href=&quot;&quot;></xref>屬性<xref uid=&quot;langword_csharp_multiRef&quot; name=&quot;multiRef&quot; href=&quot;&quot;></xref>項目會識別項。"
    - id: o
      type: System.Object
      description: "會從 XML 項目還原序列化物件。"
  overload: System.Xml.Serialization.XmlSerializationReader.AddTarget*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.CheckReaderCount(System.Int32@,System.Int32@)
  id: CheckReaderCount(System.Int32@,System.Int32@)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: CheckReaderCount(Int32,Int32)
  nameWithType: XmlSerializationReader.CheckReaderCount(Int32,Int32)
  fullName: System.Xml.Serialization.XmlSerializationReader.CheckReaderCount(Int32,Int32)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "檢查是否有進階還原序列化程式。"
  remarks: "The method is used by generated classes and should not be directly invoked.  \n  \n The CheckReaderCount method is used when the `checkDeserializerAdvances` attribute of the `<xmlSerializer>` configuration element is set to `true`. For more information, see [\\&lt;xmlSerializer\\&gt; Element](../Topic/%3CxmlSerializer%3E%20Element.md)."
  syntax:
    content: protected void CheckReaderCount (ref int whileIterations, ref int readerCount);
    parameters:
    - id: whileIterations
      type: System.Int32
      description: "目前<xref uid=&quot;langword_csharp_count&quot; name=&quot;count&quot; href=&quot;&quot;></xref>中 while 迴圈。"
    - id: readerCount
      type: System.Int32
      description: "目前<xref:System.Xml.Serialization.XmlSerializationReader.ReaderCount*>.</xref:System.Xml.Serialization.XmlSerializationReader.ReaderCount*>"
  overload: System.Xml.Serialization.XmlSerializationReader.CheckReaderCount*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:System.Xml.Serialization.XmlSerializationReader.ReaderCount*>尚未進步。</xref:System.Xml.Serialization.XmlSerializationReader.ReaderCount*>"
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.CollapseWhitespace(System.String)
  id: CollapseWhitespace(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: CollapseWhitespace(String)
  nameWithType: XmlSerializationReader.CollapseWhitespace(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.CollapseWhitespace(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "移除開頭和結尾指定的字串所有出現的空格字元。"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationReader>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected string CollapseWhitespace (string value);
    parameters:
    - id: value
      type: System.String
      description: "將會有其修剪的空白字串。"
    return:
      type: System.String
      description: "修剪後的字串。"
  overload: System.Xml.Serialization.XmlSerializationReader.CollapseWhitespace*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.CreateAbstractTypeException(System.String,System.String)
  id: CreateAbstractTypeException(System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: CreateAbstractTypeException(String,String)
  nameWithType: XmlSerializationReader.CreateAbstractTypeException(String,String)
  fullName: System.Xml.Serialization.XmlSerializationReader.CreateAbstractTypeException(String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "建立<xref:System.InvalidOperationException>，指出在還原序列化的物件應該為抽象。</xref:System.InvalidOperationException>"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationReader>適用於只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別。</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected Exception CreateAbstractTypeException (string name, string ns);
    parameters:
    - id: name
      type: System.String
      description: "抽象類型的名稱。"
    - id: ns
      type: System.String
      description: "抽象類型的.NET Framework 命名空間。"
    return:
      type: System.Exception
      description: "<xref:System.InvalidOperationException>例外狀況。</xref:System.InvalidOperationException>"
  overload: System.Xml.Serialization.XmlSerializationReader.CreateAbstractTypeException*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.CreateBadDerivationException(System.String,System.String,System.String,System.String,System.String,System.String)
  id: CreateBadDerivationException(System.String,System.String,System.String,System.String,System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: CreateBadDerivationException(String,String,String,String,String,String)
  nameWithType: XmlSerializationReader.CreateBadDerivationException(String,String,String,String,String,String)
  fullName: System.Xml.Serialization.XmlSerializationReader.CreateBadDerivationException(String,String,String,String,String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "會將物件從目前位置的 XML 表示法中填入<xref:System.Xml.XmlReader>，來讀取內部元素的選項。</xref:System.Xml.XmlReader>"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationReader>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected Exception CreateBadDerivationException (string xsdDerived, string nsDerived, string xsdBase, string nsBase, string clrDerived, string clrBase);
    parameters:
    - id: xsdDerived
      type: System.String
      description: "衍生的 XML 結構描述資料類型的本機名稱。"
    - id: nsDerived
      type: System.String
      description: "衍生的 XML 結構描述資料型別的命名空間。"
    - id: xsdBase
      type: System.String
      description: "基底的 XML 結構描述資料類型的本機名稱。"
    - id: nsBase
      type: System.String
      description: "基底的 XML 結構描述資料類型的命名空間。"
    - id: clrDerived
      type: System.String
      description: "衍生的.NET Framework 型別的命名空間。"
    - id: clrBase
      type: System.String
      description: "基底的.NET Framework 類型的名稱。"
    return:
      type: System.Exception
      description: "<xref:System.InvalidOperationException>例外狀況。</xref:System.InvalidOperationException>"
  overload: System.Xml.Serialization.XmlSerializationReader.CreateBadDerivationException*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.CreateCtorHasSecurityException(System.String)
  id: CreateCtorHasSecurityException(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: CreateCtorHasSecurityException(String)
  nameWithType: XmlSerializationReader.CreateCtorHasSecurityException(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.CreateCtorHasSecurityException(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "建立<xref:System.InvalidOperationException>指出，在還原序列化的物件無法具現化因為建構函式會擲回安全性例外狀況。</xref:System.InvalidOperationException>"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationReader>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected Exception CreateCtorHasSecurityException (string typeName);
    parameters:
    - id: typeName
      type: System.String
      description: "型別的名稱。"
    return:
      type: System.Exception
      description: "<xref:System.InvalidOperationException>例外狀況。</xref:System.InvalidOperationException>"
  overload: System.Xml.Serialization.XmlSerializationReader.CreateCtorHasSecurityException*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.CreateInaccessibleConstructorException(System.String)
  id: CreateInaccessibleConstructorException(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: CreateInaccessibleConstructorException(String)
  nameWithType: XmlSerializationReader.CreateInaccessibleConstructorException(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.CreateInaccessibleConstructorException(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "建立<xref:System.InvalidOperationException>指出，在還原序列化的物件無法具現化因為不沒有可用的任何建構函式。</xref:System.InvalidOperationException>"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationReader>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected Exception CreateInaccessibleConstructorException (string typeName);
    parameters:
    - id: typeName
      type: System.String
      description: "型別的名稱。"
    return:
      type: System.Exception
      description: "<xref:System.InvalidOperationException>例外狀況。</xref:System.InvalidOperationException>"
  overload: System.Xml.Serialization.XmlSerializationReader.CreateInaccessibleConstructorException*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException(System.Type,System.Object)
  id: CreateInvalidCastException(System.Type,System.Object)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: CreateInvalidCastException(Type,Object)
  nameWithType: XmlSerializationReader.CreateInvalidCastException(Type,Object)
  fullName: System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException(Type,Object)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "建立<xref:System.InvalidCastException>表示明確參考轉換失敗。</xref:System.InvalidCastException>"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationReader>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected Exception CreateInvalidCastException (Type type, object value);
    parameters:
    - id: type
      type: System.Type
      description: "<xref:System.Type>物件無法轉換成的物件。</xref:System.Type> 此類型會併入例外狀況訊息。"
    - id: value
      type: System.Object
      description: "無法轉換的物件。 此物件會併入例外狀況訊息。"
    return:
      type: System.Exception
      description: "<xref:System.InvalidCastException>例外狀況。</xref:System.InvalidCastException>"
  overload: System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException(System.Type,System.Object,System.String)
  id: CreateInvalidCastException(System.Type,System.Object,System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: CreateInvalidCastException(Type,Object,String)
  nameWithType: XmlSerializationReader.CreateInvalidCastException(Type,Object,String)
  fullName: System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException(Type,Object,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "建立<xref:System.InvalidCastException>表示明確參考轉換失敗。</xref:System.InvalidCastException>"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationReader>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected Exception CreateInvalidCastException (Type type, object value, string id);
    parameters:
    - id: type
      type: System.Type
      description: "<xref:System.Type>物件無法轉換成的物件。</xref:System.Type> 此類型會併入例外狀況訊息。"
    - id: value
      type: System.Object
      description: "無法轉換的物件。 此物件會併入例外狀況訊息。"
    - id: id
      type: System.String
      description: "字串識別項。"
    return:
      type: System.Exception
      description: "<xref:System.InvalidCastException>例外狀況。</xref:System.InvalidCastException>"
  overload: System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.CreateMissingIXmlSerializableType(System.String,System.String,System.String)
  id: CreateMissingIXmlSerializableType(System.String,System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: CreateMissingIXmlSerializableType(String,String,String)
  nameWithType: XmlSerializationReader.CreateMissingIXmlSerializableType(String,String,String)
  fullName: System.Xml.Serialization.XmlSerializationReader.CreateMissingIXmlSerializableType(String,String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "建立<xref:System.InvalidOperationException>指出，衍生的型別對應至 XML 結構描述資料類型，找不到。</xref:System.InvalidOperationException>"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationReader>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected Exception CreateMissingIXmlSerializableType (string name, string ns, string clrType);
    parameters:
    - id: name
      type: System.String
      description: "對應至無法使用衍生類型的 XML 結構描述資料類型的本機名稱。"
    - id: ns
      type: System.String
      description: "對應至無法使用衍生類型的 XML 結構描述資料類型的命名空間。"
    - id: clrType
      type: System.String
      description: "為其衍生的型別找不到.NET Framework 基底類型完整名稱。"
    return:
      type: System.Exception
      description: "<xref:System.InvalidOperationException>例外狀況。</xref:System.InvalidOperationException>"
  overload: System.Xml.Serialization.XmlSerializationReader.CreateMissingIXmlSerializableType*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.CreateReadOnlyCollectionException(System.String)
  id: CreateReadOnlyCollectionException(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: CreateReadOnlyCollectionException(String)
  nameWithType: XmlSerializationReader.CreateReadOnlyCollectionException(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.CreateReadOnlyCollectionException(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "建立<xref:System.InvalidOperationException>表示 SOAP 編碼集合型別不能修改，和其值不能 filled</xref:System.InvalidOperationException>"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationReader>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected Exception CreateReadOnlyCollectionException (string name);
    parameters:
    - id: name
      type: System.String
      description: "它沒有對應的.NET Framework 型別的完整的名稱。"
    return:
      type: System.Exception
      description: "<xref:System.InvalidOperationException>例外狀況。</xref:System.InvalidOperationException>"
  overload: System.Xml.Serialization.XmlSerializationReader.CreateReadOnlyCollectionException*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.CreateUnknownConstantException(System.String,System.Type)
  id: CreateUnknownConstantException(System.String,System.Type)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: CreateUnknownConstantException(String,Type)
  nameWithType: XmlSerializationReader.CreateUnknownConstantException(String,Type)
  fullName: System.Xml.Serialization.XmlSerializationReader.CreateUnknownConstantException(String,Type)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "建立<xref:System.InvalidOperationException>，指出列舉值無效。</xref:System.InvalidOperationException>"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationReader>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected Exception CreateUnknownConstantException (string value, Type enumType);
    parameters:
    - id: value
      type: System.String
      description: "不是有效的列舉值。"
    - id: enumType
      type: System.Type
      description: "列舉型別。"
    return:
      type: System.Exception
      description: "<xref:System.InvalidOperationException>例外狀況。</xref:System.InvalidOperationException>"
  overload: System.Xml.Serialization.XmlSerializationReader.CreateUnknownConstantException*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.CreateUnknownNodeException
  id: CreateUnknownNodeException
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: CreateUnknownNodeException()
  nameWithType: XmlSerializationReader.CreateUnknownNodeException()
  fullName: System.Xml.Serialization.XmlSerializationReader.CreateUnknownNodeException()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "建立<xref:System.InvalidOperationException>，表示目前的位置<xref:System.Xml.XmlReader>代表未知的 XML 節點。</xref:System.Xml.XmlReader> </xref:System.InvalidOperationException>"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationReader>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected Exception CreateUnknownNodeException ();
    parameters: []
    return:
      type: System.Exception
      description: "<xref:System.InvalidOperationException>例外狀況。</xref:System.InvalidOperationException>"
  overload: System.Xml.Serialization.XmlSerializationReader.CreateUnknownNodeException*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.CreateUnknownTypeException(System.Xml.XmlQualifiedName)
  id: CreateUnknownTypeException(System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: CreateUnknownTypeException(XmlQualifiedName)
  nameWithType: XmlSerializationReader.CreateUnknownTypeException(XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationReader.CreateUnknownTypeException(XmlQualifiedName)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "建立<xref:System.InvalidOperationException>，表示類型不明。</xref:System.InvalidOperationException>"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationReader>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected Exception CreateUnknownTypeException (System.Xml.XmlQualifiedName type);
    parameters:
    - id: type
      type: System.Xml.XmlQualifiedName
      description: "<xref:System.Xml.XmlQualifiedName>表示未知的型別名稱。</xref:System.Xml.XmlQualifiedName>"
    return:
      type: System.Exception
      description: "<xref:System.InvalidOperationException>例外狀況。</xref:System.InvalidOperationException>"
  overload: System.Xml.Serialization.XmlSerializationReader.CreateUnknownTypeException*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.DecodeName
  id: DecodeName
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: DecodeName
  nameWithType: XmlSerializationReader.DecodeName
  fullName: System.Xml.Serialization.XmlSerializationReader.DecodeName
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "取得或設定值，這個值會決定 XML 字串是否會轉譯成有效的.NET Framework 型別名稱。"
  remarks: "<xref:System.Xml.XmlConvert.EncodeName%2A>方法會將有效的 XML 寫入無效的來源。</xref:System.Xml.XmlConvert.EncodeName%2A> 例如，<xref:System.Data.DataColumn.ColumnName%2A>屬性<xref:System.Data.DataColumn>類別可以包含空格，也就是以 XML 無效。</xref:System.Data.DataColumn> </xref:System.Data.DataColumn.ColumnName%2A> <xref:System.Xml.XmlConvert.DecodeName%2A>讀取編碼的 XML，並將它還原為原始值。</xref:System.Xml.XmlConvert.DecodeName%2A> 不過，<xref:System.Xml.Schema.XmlSchema.Read%2A>方法<xref:System.Xml.Schema.XmlSchema>類別無法讀取這類編碼的 XML。</xref:System.Xml.Schema.XmlSchema> </xref:System.Xml.Schema.XmlSchema.Read%2A> 在此情況下，設定<xref:System.Xml.Serialization.XmlSerializationWriter.EscapeName%2A>屬性`false`停用的 XML 編碼方式。</xref:System.Xml.Serialization.XmlSerializationWriter.EscapeName%2A>"
  syntax:
    content: protected bool DecodeName { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果 XML 字串會解碼成有效的.NET Framework 型別名稱。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Xml.Serialization.XmlSerializationReader.DecodeName*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.Document
  id: Document
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: Document
  nameWithType: XmlSerializationReader.Document
  fullName: System.Xml.Serialization.XmlSerializationReader.Document
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "取得 XML 文件在其中還原序列化的 XML 文件物件。"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationReader>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected System.Xml.XmlDocument Document { get; }
    return:
      type: System.Xml.XmlDocument
      description: "<xref href=&quot;System.Xml.XmlDocument&quot;> </xref> ，代表已還原序列化<xref href=&quot;System.Xml.XmlDocument&quot;></xref>資料。"
  overload: System.Xml.Serialization.XmlSerializationReader.Document*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.EnsureArrayIndex(System.Array,System.Int32,System.Type)
  id: EnsureArrayIndex(System.Array,System.Int32,System.Type)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: EnsureArrayIndex(Array,Int32,Type)
  nameWithType: XmlSerializationReader.EnsureArrayIndex(Array,Int32,Type)
  fullName: System.Xml.Serialization.XmlSerializationReader.EnsureArrayIndex(Array,Int32,Type)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "可確保指定的陣列或複本已夠大，無法包含指定的索引。"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationReader>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected Array EnsureArrayIndex (Array a, int index, Type elementType);
    parameters:
    - id: a
      type: System.Array
      description: "<xref:System.Array>進行檢查。</xref:System.Array>"
    - id: index
      type: System.Int32
      description: "所需的索引。"
    - id: elementType
      type: System.Type
      description: "<xref:System.Type>陣列的項目。</xref:System.Type>"
    return:
      type: System.Array
      description: "現有<xref:System.Array>，如果它已經夠大，否則新、 較大的陣列，其中包含原始陣列的項目。</xref:System.Array>"
  overload: System.Xml.Serialization.XmlSerializationReader.EnsureArrayIndex*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.FixupArrayRefs(System.Object)
  id: FixupArrayRefs(System.Object)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: FixupArrayRefs(Object)
  nameWithType: XmlSerializationReader.FixupArrayRefs(Object)
  fullName: System.Xml.Serialization.XmlSerializationReader.FixupArrayRefs(Object)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "填入 SOAP 編碼的陣列，其資料類型會對應至.NET Framework 參考類型的值。"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationReader>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationReader>       FixupArrayRefs 方法會實作<xref:System.Xml.Serialization.XmlSerializationFixupCallback>委派以 SOAP 編碼的 XML 資料的還原序列化作業。</xref:System.Xml.Serialization.XmlSerializationFixupCallback>       而動態 XML 文件還原序列化至.NET Framework 物件中的.NET Framework XML 序列化基礎結構會建立其資料類型對應至.NET Framework 參考類型的 SOAP 編碼的陣列的 FixupArrayRefs 方法的執行個體。 然後會呼叫方法<xref:System.Xml.Serialization.XmlSerializationFixupCallback>來填入陣列中的物件。</xref:System.Xml.Serialization.XmlSerializationFixupCallback>       SOAP 編碼為 SOAP 1.1 規格的第 5 節中所述。"
  syntax:
    content: protected void FixupArrayRefs (object fixup);
    parameters:
    - id: fixup
      type: System.Object
      description: "物件，包含其值會填入的陣列。"
  overload: System.Xml.Serialization.XmlSerializationReader.FixupArrayRefs*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.GetArrayLength(System.String,System.String)
  id: GetArrayLength(System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: GetArrayLength(String,String)
  nameWithType: XmlSerializationReader.GetArrayLength(String,String)
  fullName: System.Xml.Serialization.XmlSerializationReader.GetArrayLength(String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "取得 SOAP 編碼陣列的長度其中<xref:System.Xml.XmlReader>目前所在位置。</xref:System.Xml.XmlReader>"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationReader>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationReader>       GetArrayLength 方法適用於`arrayType`是搭配 SOAP 編碼方式，與命名空間&quot;http://schemas.xmlsoap.org/soap/encoding/&quot;指定的屬性。"
  syntax:
    content: protected int GetArrayLength (string name, string ns);
    parameters:
    - id: name
      type: System.String
      description: "陣列必須有本機名稱。"
    - id: ns
      type: System.String
      description: "陣列應該有命名空間。"
    return:
      type: System.Int32
      description: "SOAP 陣列的長度。"
  overload: System.Xml.Serialization.XmlSerializationReader.GetArrayLength*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.GetNullAttr
  id: GetNullAttr
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: GetNullAttr()
  nameWithType: XmlSerializationReader.GetNullAttr()
  fullName: System.Xml.Serialization.XmlSerializationReader.GetNullAttr()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "決定是否 XML 項目位置<xref:System.Xml.XmlReader>目前所在位置有 null 屬性設定為值<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。</xref:System.Xml.XmlReader>"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationReader>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected bool GetNullAttr ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref:System.Xml.XmlReader>目前位於具有值的 null 屬性<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Xml.XmlReader>"
  overload: System.Xml.Serialization.XmlSerializationReader.GetNullAttr*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.GetTarget(System.String)
  id: GetTarget(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: GetTarget(String)
  nameWithType: XmlSerializationReader.GetTarget(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.GetTarget(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "取得要還原序列化的物件從 SOAP 編碼<xref uid=&quot;langword_csharp_multiRef&quot; name=&quot;multiRef&quot; href=&quot;&quot;></xref>稍早所<xref:System.Xml.Serialization.XmlSerializationReader.AddTarget*>.</xref:System.Xml.Serialization.XmlSerializationReader.AddTarget*>儲存項目，"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationReader>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationReader>       SOAP 編碼允許唯一的 XML 項目出現一次為 SOAP 訊息內`multiRef`所識別的項目`id`屬性。 `id`值可以是參考的多次`href`屬性 (或`ref`SOAP 1.2 內的屬性) 的替代項目。 SOAP 編碼為 SOAP 1.1 規格的第 5 節中所述。"
  syntax:
    content: protected object GetTarget (string id);
    parameters:
    - id: id
      type: System.String
      description: "值<xref uid=&quot;langword_csharp_id&quot; name=&quot;id&quot; href=&quot;&quot;></xref>屬性<xref uid=&quot;langword_csharp_multiRef&quot; name=&quot;multiRef&quot; href=&quot;&quot;></xref>項目會識別項。"
    return:
      type: System.Object
      description: "要還原序列化來自 SOAP 編碼物件<xref uid=&quot;langword_csharp_multiRef&quot; name=&quot;multiRef&quot; href=&quot;&quot;></xref>項目。"
  overload: System.Xml.Serialization.XmlSerializationReader.GetTarget*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.GetXsiType
  id: GetXsiType
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: GetXsiType()
  nameWithType: XmlSerializationReader.GetXsiType()
  fullName: System.Xml.Serialization.XmlSerializationReader.GetXsiType()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "取得值<xref uid=&quot;langword_csharp_xsi:type&quot; name=&quot;xsi:type&quot; href=&quot;&quot;> </xref> <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>目前位置的 XML 項目屬性"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationReader>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationReader>       `type`從 XML 結構描述命名空間的執行個體的屬性明確指定的資料類型的 XML 項目。"
  syntax:
    content: protected System.Xml.XmlQualifiedName GetXsiType ();
    parameters: []
    return:
      type: System.Xml.XmlQualifiedName
      description: "XML 限定的名稱，表示 XML 項目的資料類型。"
  overload: System.Xml.Serialization.XmlSerializationReader.GetXsiType*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.InitCallbacks
  id: InitCallbacks
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: InitCallbacks()
  nameWithType: XmlSerializationReader.InitCallbacks()
  fullName: System.Xml.Serialization.XmlSerializationReader.InitCallbacks()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "初始化回呼方法，以填入對應至 SOAP 編碼的 XML 資料的物件。"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationReader>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationReader>       在初始化期間，.NET Framework XML 序列化基礎結構以動態方式產生並編譯衍生自<xref:System.Xml.Serialization.XmlSerializationReader>.</xref:System.Xml.Serialization.XmlSerializationReader>的還原序列化的暫時類別 在此過程中，.NET Framework 會產生讀取的方法可實作<xref:System.Xml.Serialization.XmlSerializationReadCallback>委派。</xref:System.Xml.Serialization.XmlSerializationReadCallback> 它會讓特定.NET Framework 型別與 XML 資料型別會透過 SOAP 編碼的 XML 序列化，並不是根項目之間的對應。 接下來，如有必要，在還原序列化期間呼叫讀取的方法。       抽象 InitCallbacks 方法是暫時的衍生的類別建立的執行個體和初始化的地方讀取回呼方法。       您不應該直接建立<xref:System.Xml.Serialization.XmlSerializationReadCallback>.</xref:System.Xml.Serialization.XmlSerializationReadCallback>的執行個體       SOAP 編碼為 SOAP 1.1 規格的第 5 節中所述。"
  syntax:
    content: protected abstract void InitCallbacks ();
    parameters: []
  overload: System.Xml.Serialization.XmlSerializationReader.InitCallbacks*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.InitIDs
  id: InitIDs
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: InitIDs()
  nameWithType: XmlSerializationReader.InitIDs()
  fullName: System.Xml.Serialization.XmlSerializationReader.InitIDs()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "中的項目和屬性名稱儲存<xref:System.Xml.NameTable>物件。</xref:System.Xml.NameTable>"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationReader>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationReader>       InitIDs 方法是抽象的。"
  syntax:
    content: protected abstract void InitIDs ();
    parameters: []
  overload: System.Xml.Serialization.XmlSerializationReader.InitIDs*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.IsReturnValue
  id: IsReturnValue
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: IsReturnValue
  nameWithType: XmlSerializationReader.IsReturnValue
  fullName: System.Xml.Serialization.XmlSerializationReader.IsReturnValue
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "取得或設定值，這個值應該<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> SOAP 1.1 的傳回值。"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationReader>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected bool IsReturnValue { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果值為傳回值。"
  overload: System.Xml.Serialization.XmlSerializationReader.IsReturnValue*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.IsXmlnsAttribute(System.String)
  id: IsXmlnsAttribute(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: IsXmlnsAttribute(String)
  nameWithType: XmlSerializationReader.IsXmlnsAttribute(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.IsXmlnsAttribute(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "決定 XML 屬性名稱是否表示 XML 命名空間。"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationReader>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationReader>       屬性名稱表示 XML 命名空間，如果它的形式`xmlns:``key`，其中 「 金鑰 」 是命名空間名稱。"
  syntax:
    content: protected bool IsXmlnsAttribute (string name);
    parameters:
    - id: name
      type: System.String
      description: "XML 屬性名稱。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true &quot; name=&quot;true &quot; href=&quot;&quot;></xref>如果 XML 屬性名稱表示 XML 命名空間;否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Xml.Serialization.XmlSerializationReader.IsXmlnsAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ParseWsdlArrayType(System.Xml.XmlAttribute)
  id: ParseWsdlArrayType(System.Xml.XmlAttribute)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ParseWsdlArrayType(XmlAttribute)
  nameWithType: XmlSerializationReader.ParseWsdlArrayType(XmlAttribute)
  fullName: System.Xml.Serialization.XmlSerializationReader.ParseWsdlArrayType(XmlAttribute)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "設定 XML 屬性的值，如果它是型別<xref uid=&quot;langword_csharp_arrayType&quot; name=&quot;arrayType&quot; href=&quot;&quot;></xref>從 Web 服務描述語言 (WSDL) 的命名空間。"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationReader>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationReader>       WSDL 會使用命名空間&quot;http://schemas.xmlsoap.org/wsdl/&quot;。"
  syntax:
    content: protected void ParseWsdlArrayType (System.Xml.XmlAttribute attr);
    parameters:
    - id: attr
      type: System.Xml.XmlAttribute
      description: "<xref href=&quot;System.Xml.XmlAttribute&quot;> </xref> ，可能會有類型<xref uid=&quot;langword_csharp_wsdl:array&quot; name=&quot;wsdl:array&quot; href=&quot;&quot;> </xref>。"
  overload: System.Xml.Serialization.XmlSerializationReader.ParseWsdlArrayType*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ReadElementQualifiedName
  id: ReadElementQualifiedName
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ReadElementQualifiedName()
  nameWithType: XmlSerializationReader.ReadElementQualifiedName()
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadElementQualifiedName()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "可讓<xref:System.Xml.XmlReader>讀取目前所在的完整的名稱的項目。</xref:System.Xml.XmlReader>"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationReader>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected System.Xml.XmlQualifiedName ReadElementQualifiedName ();
    parameters: []
    return:
      type: System.Xml.XmlQualifiedName
      description: "目前的 XML 項目完整限定的名稱。"
  overload: System.Xml.Serialization.XmlSerializationReader.ReadElementQualifiedName*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ReadEndElement
  id: ReadEndElement
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ReadEndElement()
  nameWithType: XmlSerializationReader.ReadEndElement()
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadEndElement()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "可讓<xref:System.Xml.XmlReader>讀取 XML 結束標記。</xref:System.Xml.XmlReader>"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationReader>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected void ReadEndElement ();
    parameters: []
  overload: System.Xml.Serialization.XmlSerializationReader.ReadEndElement*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.Reader
  id: Reader
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: Reader
  nameWithType: XmlSerializationReader.Reader
  fullName: System.Xml.Serialization.XmlSerializationReader.Reader
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "取得<xref:System.Xml.XmlReader>正在使用的物件<xref href=&quot;System.Xml.Serialization.XmlSerializationReader&quot;> </xref>。</xref:System.Xml.XmlReader>"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationReader>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected System.Xml.XmlReader Reader { get; }
    return:
      type: System.Xml.XmlReader
      description: "<xref:System.Xml.XmlReader>，正由<xref href=&quot;System.Xml.Serialization.XmlSerializationReader&quot;> </xref>。</xref:System.Xml.XmlReader>"
  overload: System.Xml.Serialization.XmlSerializationReader.Reader*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ReaderCount
  id: ReaderCount
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ReaderCount
  nameWithType: XmlSerializationReader.ReaderCount
  fullName: System.Xml.Serialization.XmlSerializationReader.ReaderCount
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "取得目前的<xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>計數"
  remarks: "方法由產生的類別，而且應該不會直接叫用。       <xref:System.Xml.Serialization.XmlSerializationReader>使用執行個體<xref:System.Xml.XmlReader>類別，以計算讀取的作業就會發生。</xref:System.Xml.XmlReader> </xref:System.Xml.Serialization.XmlSerializationReader> 這個計數會遞增每次讀取器會呼叫適當的方法，例如<xref:System.Xml.XmlReader.Read%2A>方法或<xref:System.Xml.XmlReader.ReadElementString%2A>方法。</xref:System.Xml.XmlReader.ReadElementString%2A> </xref:System.Xml.XmlReader.Read%2A>"
  syntax:
    content: protected int ReaderCount { get; }
    return:
      type: System.Int32
      description: "目前的<xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>計數"
  overload: System.Xml.Serialization.XmlSerializationReader.ReaderCount*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ReadNull
  id: ReadNull
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ReadNull()
  nameWithType: XmlSerializationReader.ReadNull()
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadNull()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "指示<xref:System.Xml.XmlReader>讀取目前的 XML 項目，項目是否有具有 true 值的 null 屬性。</xref:System.Xml.XmlReader>"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationReader>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected bool ReadNull ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果項目**null =&quot;true&quot;**屬性值，並且已被讀取，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Xml.Serialization.XmlSerializationReader.ReadNull*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ReadNullableQualifiedName
  id: ReadNullableQualifiedName
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ReadNullableQualifiedName()
  nameWithType: XmlSerializationReader.ReadNullableQualifiedName()
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadNullableQualifiedName()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "指示<xref:System.Xml.XmlReader>讀取目前所在的完整的名稱的項目。</xref:System.Xml.XmlReader>"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationReader>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected System.Xml.XmlQualifiedName ReadNullableQualifiedName ();
    parameters: []
    return:
      type: System.Xml.XmlQualifiedName
      description: "A<xref:System.Xml.XmlQualifiedName>表示完整限定名稱的目前的 XML 項目; 否則<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果**null =&quot;true&quot;**屬性值存在於。</xref:System.Xml.XmlQualifiedName>"
  overload: System.Xml.Serialization.XmlSerializationReader.ReadNullableQualifiedName*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ReadNullableString
  id: ReadNullableString
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ReadNullableString()
  nameWithType: XmlSerializationReader.ReadNullableString()
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadNullableString()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "指示<xref:System.Xml.XmlReader>讀取可能是簡單、 純文字 XML 項目<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。</xref:System.Xml.XmlReader>"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationReader>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected string ReadNullableString ();
    parameters: []
    return:
      type: System.String
      description: "字串值。否則， <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Xml.Serialization.XmlSerializationReader.ReadNullableString*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ReadReference(System.String@)
  id: ReadReference(System.String@)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ReadReference(String)
  nameWithType: XmlSerializationReader.ReadReference(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadReference(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "讀取值<xref uid=&quot;langword_csharp_href&quot; name=&quot;href&quot; href=&quot;&quot;></xref>屬性 (<xref uid=&quot;langword_csharp_ref&quot; name=&quot;ref&quot; href=&quot;&quot;> </xref> SOAP 1.2 的屬性)，用來參考 XML 項目以 SOAP 編碼方式。"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationReader>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationReader>       開啟`#`符號移除`href`屬性值。       SOAP 編碼允許唯一的 XML 項目出現一次為 SOAP 訊息內`multiRef`所識別的項目`id`屬性。 `id`值可以是參考的多次`href`屬性 (或`ref`SOAP 1.2 內的屬性) 的替代項目。       SOAP 編碼為 SOAP 1.1 規格的第 5 節中所述。"
  syntax:
    content: protected bool ReadReference (out string fixupReference);
    parameters:
    - id: fixupReference
      type: System.String
      description: "輸出字串，其中<xref uid=&quot;langword_csharp_href&quot; name=&quot;href&quot; href=&quot;&quot;></xref>讀取屬性值。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果已讀取值。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Xml.Serialization.XmlSerializationReader.ReadReference*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement
  id: ReadReferencedElement
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ReadReferencedElement()
  nameWithType: XmlSerializationReader.ReadReferencedElement()
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "還原序列化來自 SOAP 編碼物件<xref uid=&quot;langword_csharp_multiRef&quot; name=&quot;multiRef&quot; href=&quot;&quot;> </xref> XML 項目。"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationReader>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationReader>       ReadReferencedElement 方法取得 XML 結構描述資料類型，藉由讀取`xsi:type`屬性`multiRef`項目。 前置詞`xsi`指的是 XML 結構描述命名空間的執行個體。       SOAP 編碼允許唯一的 XML 項目出現一次為 SOAP 訊息內`multiRef`所識別的項目`id`屬性。 `id`值可以是參考的多次`href`屬性 (或`ref`SOAP 1.2 內的屬性) 的替代項目。       SOAP 編碼為 SOAP 1.1 規格的第 5 節中所述。"
  syntax:
    content: protected object ReadReferencedElement ();
    parameters: []
    return:
      type: System.Object
      description: "文件中所參照元素的值。"
  overload: System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement(System.String,System.String)
  id: ReadReferencedElement(System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ReadReferencedElement(String,String)
  nameWithType: XmlSerializationReader.ReadReferencedElement(String,String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement(String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "還原序列化來自 SOAP 編碼物件<xref uid=&quot;langword_csharp_multiRef&quot; name=&quot;multiRef&quot; href=&quot;&quot;> </xref> XML 項目。"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationReader>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationReader>       此簽章的<xref:System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement%2A>方法取得的 XML 結構描述資料型別`multiRef`項目從方法參數，而不是藉由讀取`xsi:type`屬性。</xref:System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement%2A> 前置詞`xsi`指的是 XML 結構描述命名空間的執行個體。       SOAP 編碼允許唯一的 XML 項目出現一次為 SOAP 訊息內`multiRef`所識別的項目`id`屬性。 `id`值可以是參考的多次`href`屬性 (或`ref`SOAP 1.2 內的屬性) 的替代項目。       SOAP 編碼為 SOAP 1.1 規格的第 5 節中所述。"
  syntax:
    content: protected object ReadReferencedElement (string name, string ns);
    parameters:
    - id: name
      type: System.String
      description: "項目的 XML 結構描述資料類型的本機名稱。"
    - id: ns
      type: System.String
      description: "項目的 XML 結構描述資料型別的命名空間。"
    return:
      type: System.Object
      description: "文件中所參照元素的值。"
  overload: System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ReadReferencedElements
  id: ReadReferencedElements
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ReadReferencedElements()
  nameWithType: XmlSerializationReader.ReadReferencedElements()
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadReferencedElements()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "還原序列化來自 SOAP 編碼物件<xref uid=&quot;langword_csharp_multiRef&quot; name=&quot;multiRef&quot; href=&quot;&quot;> </xref> SOAP 訊息中的項目。"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationReader>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationReader>       SOAP 編碼允許唯一的 XML 項目出現一次為 SOAP 訊息內`multiRef`所識別的項目`id`屬性。 `id`值可以是參考的多次`href`屬性 (或`ref`SOAP 1.2 內的屬性) 的替代項目。       SOAP 編碼為 SOAP 1.1 規格的第 5 節中所述。"
  syntax:
    content: protected void ReadReferencedElements ();
    parameters: []
  overload: System.Xml.Serialization.XmlSerializationReader.ReadReferencedElements*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(System.String@)
  id: ReadReferencingElement(System.String@)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ReadReferencingElement(String)
  nameWithType: XmlSerializationReader.ReadReferencingElement(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "還原序列化物件，包含參考的 SOAP 訊息的 XML 項目從<xref uid=&quot;langword_csharp_multiRef&quot; name=&quot;multiRef&quot; href=&quot;&quot;></xref>項目。"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationReader>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationReader>       SOAP 編碼允許唯一的 XML 項目出現一次為 SOAP 訊息內`multiRef`所識別的項目`id`屬性。 `id`值可以是參考的多次`href`屬性 (或`ref`SOAP 1.2 內的屬性) 的替代項目。       SOAP 編碼為 SOAP 1.1 規格的第 5 節中所述。"
  syntax:
    content: protected object ReadReferencingElement (out string fixupReference);
    parameters:
    - id: fixupReference
      type: System.String
      description: "輸出字串，其中<xref uid=&quot;langword_csharp_href&quot; name=&quot;href&quot; href=&quot;&quot;></xref>讀取屬性值。"
    return:
      type: System.Object
      description: "還原序列化的物件。"
  overload: System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(System.String,System.String,System.String@)
  id: ReadReferencingElement(System.String,System.String,System.String@)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ReadReferencingElement(String,String,String)
  nameWithType: XmlSerializationReader.ReadReferencingElement(String,String,String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(String,String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "還原序列化物件，包含參考的 SOAP 訊息的 XML 項目從<xref uid=&quot;langword_csharp_multiRef&quot; name=&quot;multiRef&quot; href=&quot;&quot;></xref>項目。"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationReader>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationReader>       SOAP 編碼允許唯一的 XML 項目出現一次為 SOAP 訊息內`multiRef`所識別的項目`id`屬性。 `id`值可以是參考的多次`href`屬性 (或`ref`SOAP 1.2 內的屬性) 的替代項目。       SOAP 編碼為 SOAP 1.1 規格的第 5 節中所述。"
  syntax:
    content: protected object ReadReferencingElement (string name, string ns, out string fixupReference);
    parameters:
    - id: name
      type: System.String
      description: "項目的 XML 結構描述資料類型的本機名稱。"
    - id: ns
      type: System.String
      description: "項目的 XML 結構描述資料型別的命名空間。"
    - id: fixupReference
      type: System.String
      description: "輸出字串，其中<xref uid=&quot;langword_csharp_href&quot; name=&quot;href&quot; href=&quot;&quot;></xref>讀取屬性值。"
    return:
      type: System.Object
      description: "還原序列化的物件。"
  overload: System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(System.String,System.String,System.Boolean,System.String@)
  id: ReadReferencingElement(System.String,System.String,System.Boolean,System.String@)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ReadReferencingElement(String,String,Boolean,String)
  nameWithType: XmlSerializationReader.ReadReferencingElement(String,String,Boolean,String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(String,String,Boolean,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "還原序列化物件，包含參考的 SOAP 訊息的 XML 項目從<xref uid=&quot;langword_csharp_multiRef&quot; name=&quot;multiRef&quot; href=&quot;&quot;></xref>項目。"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationReader>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationReader>       SOAP 編碼允許唯一的 XML 項目出現一次為 SOAP 訊息內`multiRef`所識別的項目`id`屬性。 `id`值可以是參考的多次`href`屬性 (或`ref`SOAP 1.2 內的屬性) 的替代項目。       SOAP 編碼為 SOAP 1.1 規格的第 5 節中所述。"
  syntax:
    content: protected object ReadReferencingElement (string name, string ns, bool elementCanBeType, out string fixupReference);
    parameters:
    - id: name
      type: System.String
      description: "項目的 XML 結構描述資料類型的本機名稱。"
    - id: ns
      type: System.String
      description: "項目的 XML 結構描述資料型別的命名空間。"
    - id: elementCanBeType
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果項目名稱也是 XML 結構描述資料型別名稱。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    - id: fixupReference
      type: System.String
      description: "輸出字串，其中的值<xref uid=&quot;langword_csharp_href&quot; name=&quot;href&quot; href=&quot;&quot;></xref>屬性為唯讀。"
    return:
      type: System.Object
      description: "還原序列化的物件。"
  overload: System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ReadSerializable(System.Xml.Serialization.IXmlSerializable)
  id: ReadSerializable(System.Xml.Serialization.IXmlSerializable)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ReadSerializable(IXmlSerializable)
  nameWithType: XmlSerializationReader.ReadSerializable(IXmlSerializable)
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadSerializable(IXmlSerializable)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "填入來自<xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>目前位置的 XML 表示的物件"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationReader>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected System.Xml.Serialization.IXmlSerializable ReadSerializable (System.Xml.Serialization.IXmlSerializable serializable);
    parameters:
    - id: serializable
      type: System.Xml.Serialization.IXmlSerializable
      description: "<xref:System.Xml.Serialization.IXmlSerializable>對應於<xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>的目前位置</xref:System.Xml.Serialization.IXmlSerializable>"
    return:
      type: System.Xml.Serialization.IXmlSerializable
      description: "實作<xref:System.Xml.Serialization.IXmlSerializable>介面從<xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>位置填入其成員</xref:System.Xml.Serialization.IXmlSerializable>的物件"
  overload: System.Xml.Serialization.XmlSerializationReader.ReadSerializable*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ReadSerializable(System.Xml.Serialization.IXmlSerializable,System.Boolean)
  id: ReadSerializable(System.Xml.Serialization.IXmlSerializable,System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ReadSerializable(IXmlSerializable,Boolean)
  nameWithType: XmlSerializationReader.ReadSerializable(IXmlSerializable,Boolean)
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadSerializable(IXmlSerializable,Boolean)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "這個方法支援.NET Framework 基礎結構，而且不是直接從您的程式碼使用。"
  syntax:
    content: protected System.Xml.Serialization.IXmlSerializable ReadSerializable (System.Xml.Serialization.IXmlSerializable serializable, bool wrappedAny);
    parameters:
    - id: serializable
      type: System.Xml.Serialization.IXmlSerializable
      description: "IXmlSerializable 物件對應至目前位置的 xmlreader。"
    - id: wrappedAny
      type: System.Boolean
      description: "指定是否要包裝的可序列化的物件。"
    return:
      type: System.Xml.Serialization.IXmlSerializable
      description: "與從 XmlReader 位置填入其成員實作 IXmlSerializable 介面的物件。"
  overload: System.Xml.Serialization.XmlSerializationReader.ReadSerializable*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ReadString(System.String)
  id: ReadString(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ReadString(String)
  nameWithType: XmlSerializationReader.ReadString(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadString(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "若要呼叫的結果會產生<xref:System.Xml.XmlReader.ReadString*>附加至輸入值的方法。</xref:System.Xml.XmlReader.ReadString*>"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationReader>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected string ReadString (string value);
    parameters:
    - id: value
      type: System.String
      description: "字串，呼叫的結果作為前置詞<xref:System.Xml.XmlReader.ReadString*>方法。</xref:System.Xml.XmlReader.ReadString*>"
    return:
      type: System.String
      description: "若要呼叫的結果<xref:System.Xml.XmlReader.ReadString*>附加至輸入值的方法。</xref:System.Xml.XmlReader.ReadString*>"
  overload: System.Xml.Serialization.XmlSerializationReader.ReadString*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ReadString(System.String,System.Boolean)
  id: ReadString(System.String,System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ReadString(String,Boolean)
  nameWithType: XmlSerializationReader.ReadString(String,Boolean)
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadString(String,Boolean)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "若要呼叫的結果會傳回<xref:System.Xml.XmlReader.ReadString*>方法<xref:System.Xml.XmlReader>類別，如果需要並附加至輸入值修剪空白字元。</xref:System.Xml.XmlReader> </xref:System.Xml.XmlReader.ReadString*>"
  syntax:
    content: protected string ReadString (string value, bool trim);
    parameters:
    - id: value
      type: System.String
      description: "將會附加至字串。"
    - id: trim
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果應該修剪讀取作業的結果。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.String
      description: "附加至輸入值的讀取作業的結果。"
  overload: System.Xml.Serialization.XmlSerializationReader.ReadString*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ReadTypedNull(System.Xml.XmlQualifiedName)
  id: ReadTypedNull(System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ReadTypedNull(XmlQualifiedName)
  nameWithType: XmlSerializationReader.ReadTypedNull(XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadTypedNull(XmlQualifiedName)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "讀取 XML 項目，允許 null 值 (<xref uid=&quot;langword_csharp_xsi:nil = &quot;true&quot;&quot; name=&quot;xsi:nil = &quot;true&quot;&quot; href=&quot;&quot;></xref>)，並傳回泛型&lt;xref:System.Nullable%601&gt;值。"
  syntax:
    content: protected object ReadTypedNull (System.Xml.XmlQualifiedName type);
    parameters:
    - id: type
      type: System.Xml.XmlQualifiedName
      description: "<xref:System.Xml.XmlQualifiedName>代表<xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>的目前位置的簡單資料類型</xref:System.Xml.XmlQualifiedName>"
    return:
      type: System.Object
      description: "泛型&lt;xref:System.Nullable%601&gt;表示 null XML 值。"
  overload: System.Xml.Serialization.XmlSerializationReader.ReadTypedNull*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ReadTypedPrimitive(System.Xml.XmlQualifiedName)
  id: ReadTypedPrimitive(System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ReadTypedPrimitive(XmlQualifiedName)
  nameWithType: XmlSerializationReader.ReadTypedPrimitive(XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadTypedPrimitive(XmlQualifiedName)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "取得 XML 節點的值，此時<xref:System.Xml.XmlReader>目前所在位置。</xref:System.Xml.XmlReader>"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationReader>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected object ReadTypedPrimitive (System.Xml.XmlQualifiedName type);
    parameters:
    - id: type
      type: System.Xml.XmlQualifiedName
      description: "<xref:System.Xml.XmlQualifiedName>代表<xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>的目前位置的簡單資料類型</xref:System.Xml.XmlQualifiedName>"
    return:
      type: System.Object
      description: "為.NET Framework 實值類型，如果值為簡單的 XML 結構描述資料型別節點的值。"
  overload: System.Xml.Serialization.XmlSerializationReader.ReadTypedPrimitive*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ReadXmlDocument(System.Boolean)
  id: ReadXmlDocument(System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ReadXmlDocument(Boolean)
  nameWithType: XmlSerializationReader.ReadXmlDocument(Boolean)
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadXmlDocument(Boolean)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "指示<xref:System.Xml.XmlReader>讀取 XML 文件根項目在其目前位置。</xref:System.Xml.XmlReader>"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationReader>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected System.Xml.XmlDocument ReadXmlDocument (bool wrapped);
    parameters:
    - id: wrapped
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果方法讀取的項目開始項目; 後，才應該讀取的內容否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.Xml.XmlDocument
      description: "<xref href=&quot;System.Xml.XmlDocument&quot;> </xref> ，其中包含已讀取的根項目。"
  overload: System.Xml.Serialization.XmlSerializationReader.ReadXmlDocument*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ReadXmlNode(System.Boolean)
  id: ReadXmlNode(System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ReadXmlNode(Boolean)
  nameWithType: XmlSerializationReader.ReadXmlNode(Boolean)
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadXmlNode(Boolean)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "指示<xref:System.Xml.XmlReader>讀取 XML 節點在其目前位置。</xref:System.Xml.XmlReader>"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationReader>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected System.Xml.XmlNode ReadXmlNode (bool wrapped);
    parameters:
    - id: wrapped
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>只有之後讀取的項目開始項目; 讀取的內容否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.Xml.XmlNode
      description: "<xref href=&quot;System.Xml.XmlNode&quot;> </xref>表示已讀取的 XML 節點。"
  overload: System.Xml.Serialization.XmlSerializationReader.ReadXmlNode*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.Referenced(System.Object)
  id: Referenced(System.Object)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: Referenced(Object)
  nameWithType: XmlSerializationReader.Referenced(Object)
  fullName: System.Xml.Serialization.XmlSerializationReader.Referenced(Object)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "儲存物件要還原序列化來自 SOAP 編碼<xref uid=&quot;langword_csharp_multiRef&quot; name=&quot;multiRef&quot; href=&quot;&quot;></xref>項目。"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationReader>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationReader>       SOAP 編碼允許唯一的 XML 項目出現一次為 SOAP 訊息內`multiRef`所識別的項目`id`屬性。 `id`值可以是參考的多次`href`屬性 (或`ref`SOAP 1.2 內的屬性) 的替代項目。       SOAP 編碼為 SOAP 1.1 規格的第 5 節中所述。"
  syntax:
    content: protected void Referenced (object o);
    parameters:
    - id: o
      type: System.Object
      description: "要還原序列化的物件。"
  overload: System.Xml.Serialization.XmlSerializationReader.Referenced*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ResolveDynamicAssembly(System.String)
  id: ResolveDynamicAssembly(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ResolveDynamicAssembly(String)
  nameWithType: XmlSerializationReader.ResolveDynamicAssembly(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ResolveDynamicAssembly(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "依名稱取得動態產生的組件。"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationReader>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationReader>       ResolveDynamicAssembly 方法為靜態。"
  syntax:
    content: protected static System.Reflection.Assembly ResolveDynamicAssembly (string assemblyFullName);
    parameters:
    - id: assemblyFullName
      type: System.String
      description: "組件的完整名稱。"
    return:
      type: System.Reflection.Assembly
      description: "動態產生的<xref:System.Reflection.Assembly>.</xref:System.Reflection.Assembly>"
  overload: System.Xml.Serialization.XmlSerializationReader.ResolveDynamicAssembly*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ShrinkArray(System.Array,System.Int32,System.Type,System.Boolean)
  id: ShrinkArray(System.Array,System.Int32,System.Type,System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ShrinkArray(Array,Int32,Type,Boolean)
  nameWithType: XmlSerializationReader.ShrinkArray(Array,Int32,Type,Boolean)
  fullName: System.Xml.Serialization.XmlSerializationReader.ShrinkArray(Array,Int32,Type,Boolean)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "確定指定的陣列或複本，不能大於指定的長度。"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationReader>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected Array ShrinkArray (Array a, int length, Type elementType, bool isNullable);
    parameters:
    - id: a
      type: System.Array
      description: "正在檢查陣列。"
    - id: length
      type: System.Int32
      description: "陣列的長度上限。"
    - id: elementType
      type: System.Type
      description: "<xref:System.Type>陣列的項目。</xref:System.Type>"
    - id: isNullable
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>陣列，如果存在輸入的陣列，可以傳回; 否則新、 較小的陣列。"
    return:
      type: System.Array
      description: "現有<xref:System.Array>，如果它已經夠小，; 否則新的小型陣列包含原始陣列的項目，最多的大小<code> length</code>。</xref:System.Array>"
  overload: System.Xml.Serialization.XmlSerializationReader.ShrinkArray*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64(System.Boolean)
  id: ToByteArrayBase64(System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ToByteArrayBase64(Boolean)
  nameWithType: XmlSerializationReader.ToByteArrayBase64(Boolean)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64(Boolean)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "指示<xref:System.Xml.XmlReader>要讀取的目前位置的字串值，並將其傳回做為 base&64; 位元組陣列。</xref:System.Xml.XmlReader>"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationReader>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected byte[] ToByteArrayBase64 (bool isNull);
    parameters:
    - id: isNull
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>要傳回<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>;<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>傳回 base&64; 位元組陣列。"
    return:
      type: System.Byte[]
      description: "Base&64; 位元組陣列。否則， <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>如果的值<code> isNull </code>參數是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64(System.String)
  id: ToByteArrayBase64(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ToByteArrayBase64(String)
  nameWithType: XmlSerializationReader.ToByteArrayBase64(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "產生 base&64; 位元組陣列，從輸入字串。"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationReader>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationReader>       ToByteArrayBase64 方法為靜態。"
  syntax:
    content: protected static byte[] ToByteArrayBase64 (string value);
    parameters:
    - id: value
      type: System.String
      description: "要轉譯的 base&64; 位元組陣列的字串。"
    return:
      type: System.Byte[]
      description: "Base&64; 位元組陣列。"
  overload: System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ToByteArrayHex(System.Boolean)
  id: ToByteArrayHex(System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ToByteArrayHex(Boolean)
  nameWithType: XmlSerializationReader.ToByteArrayHex(Boolean)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToByteArrayHex(Boolean)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "指示<xref:System.Xml.XmlReader>讀取目前位置的字串值，並將其傳回為十六進位的位元組陣列。</xref:System.Xml.XmlReader>"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationReader>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected byte[] ToByteArrayHex (bool isNull);
    parameters:
    - id: isNull
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>要傳回<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>;<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>傳回十六進位的位元組陣列。"
    return:
      type: System.Byte[]
      description: "十六進位位元組陣列。否則， <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>如果的值<code> isNull </code>參數是**true**。"
  overload: System.Xml.Serialization.XmlSerializationReader.ToByteArrayHex*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ToByteArrayHex(System.String)
  id: ToByteArrayHex(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ToByteArrayHex(String)
  nameWithType: XmlSerializationReader.ToByteArrayHex(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToByteArrayHex(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "產生從輸入字串的十六進位位元組陣列。"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationReader>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationReader>       ToByteArrayHex 方法為靜態。"
  syntax:
    content: protected static byte[] ToByteArrayHex (string value);
    parameters:
    - id: value
      type: System.String
      description: "要轉譯成十六進位的位元組陣列的字串。"
    return:
      type: System.Byte[]
      description: "十六進位的位元組陣列。"
  overload: System.Xml.Serialization.XmlSerializationReader.ToByteArrayHex*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ToChar(System.String)
  id: ToChar(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ToChar(String)
  nameWithType: XmlSerializationReader.ToChar(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToChar(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "會產生<xref:System.Char>從輸入字串的物件。</xref:System.Char>"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationReader>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationReader>       ToChar 方法為靜態。"
  syntax:
    content: protected static char ToChar (string value);
    parameters:
    - id: value
      type: System.String
      description: "要轉譯成字串<xref:System.Char>物件。</xref:System.Char>"
    return:
      type: System.Char
      description: "A<xref:System.Char>物件。</xref:System.Char>"
  overload: System.Xml.Serialization.XmlSerializationReader.ToChar*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ToDate(System.String)
  id: ToDate(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ToDate(String)
  nameWithType: XmlSerializationReader.ToDate(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToDate(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "會產生<xref:System.DateTime>從輸入字串的物件。</xref:System.DateTime>"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationReader>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationReader>       ToDate 方法為靜態。"
  syntax:
    content: protected static DateTime ToDate (string value);
    parameters:
    - id: value
      type: System.String
      description: "要轉譯成字串<xref:System.DateTime>類別物件。</xref:System.DateTime>"
    return:
      type: System.DateTime
      description: "A<xref:System.DateTime>物件。</xref:System.DateTime>"
  overload: System.Xml.Serialization.XmlSerializationReader.ToDate*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ToDateTime(System.String)
  id: ToDateTime(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ToDateTime(String)
  nameWithType: XmlSerializationReader.ToDateTime(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToDateTime(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "會產生<xref:System.DateTime>從輸入字串的物件。</xref:System.DateTime>"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationReader>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationReader>       ToDateTime 方法為靜態。"
  syntax:
    content: protected static DateTime ToDateTime (string value);
    parameters:
    - id: value
      type: System.String
      description: "要轉譯成字串<xref:System.DateTime>物件。</xref:System.DateTime>"
    return:
      type: System.DateTime
      description: "A<xref:System.DateTime>物件。</xref:System.DateTime>"
  overload: System.Xml.Serialization.XmlSerializationReader.ToDateTime*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ToEnum(System.String,System.Collections.Hashtable,System.String)
  id: ToEnum(System.String,System.Collections.Hashtable,System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ToEnum(String,Hashtable,String)
  nameWithType: XmlSerializationReader.ToEnum(String,Hashtable,String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToEnum(String,Hashtable,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "產生的數值列舉值從分隔的識別碼代表列舉值清單中的常數所組成的字串。"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationReader>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationReader>       ToEnum 方法為靜態。"
  syntax:
    content: protected static long ToEnum (string value, System.Collections.Hashtable h, string typeName);
    parameters:
    - id: value
      type: System.String
      description: "其中每個識別項設定列舉值清單中代表常數的識別項分隔的字串所組成。"
    - id: h
      type: System.Collections.Hashtable
      description: "A <xref href=&quot;System.Collections.Hashtable&quot;> </xref> ，做為索引鍵的識別項和常數為整數的數字組成。"
    - id: typeName
      type: System.String
      description: "列舉型別的名稱。"
    return:
      type: System.Int64
      description: "為一系列的位元所組成的列舉值的長數值<xref uid=&quot;langword_csharp_OR&quot; name=&quot;OR&quot; href=&quot;&quot;></xref>作業。"
  overload: System.Xml.Serialization.XmlSerializationReader.ToEnum*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ToTime(System.String)
  id: ToTime(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ToTime(String)
  nameWithType: XmlSerializationReader.ToTime(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToTime(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "會產生<xref:System.DateTime>代表時間的字串。</xref:System.DateTime>"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationReader>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationReader>       ToTime 方法為靜態。"
  syntax:
    content: protected static DateTime ToTime (string value);
    parameters:
    - id: value
      type: System.String
      description: "要轉譯成字串<xref:System.DateTime>物件。</xref:System.DateTime>"
    return:
      type: System.DateTime
      description: "A<xref:System.DateTime>物件。</xref:System.DateTime>"
  overload: System.Xml.Serialization.XmlSerializationReader.ToTime*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ToXmlName(System.String)
  id: ToXmlName(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ToXmlName(String)
  nameWithType: XmlSerializationReader.ToXmlName(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToXmlName(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "將解碼 XML 名稱。"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationReader>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationReader>       ToXmlName 方法為靜態。       ToXmlName 會將 4 位數十六進位 ucs-2 代碼轉換成 Unicode。"
  syntax:
    content: protected static string ToXmlName (string value);
    parameters:
    - id: value
      type: System.String
      description: "要解碼 XML 名稱。"
    return:
      type: System.String
      description: "已解碼的字串。"
  overload: System.Xml.Serialization.XmlSerializationReader.ToXmlName*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ToXmlNCName(System.String)
  id: ToXmlNCName(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ToXmlNCName(String)
  nameWithType: XmlSerializationReader.ToXmlNCName(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToXmlNCName(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "將解碼 XML 名稱。"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationReader>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationReader>       ToXmlNCName 方法為靜態。       ToXmlNCName 會將 4 位數十六進位 ucs-2 代碼轉換成 Unicode。"
  syntax:
    content: protected static string ToXmlNCName (string value);
    parameters:
    - id: value
      type: System.String
      description: "要解碼 XML 名稱。"
    return:
      type: System.String
      description: "已解碼的字串。"
  overload: System.Xml.Serialization.XmlSerializationReader.ToXmlNCName*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ToXmlNmToken(System.String)
  id: ToXmlNmToken(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ToXmlNmToken(String)
  nameWithType: XmlSerializationReader.ToXmlNmToken(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToXmlNmToken(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "將解碼 XML 名稱。"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationReader>僅適用於由衍生類別內的.NET Framework XML 序列化基礎結構在內部使用。</xref:System.Xml.Serialization.XmlSerializationReader>       ToXmlNmToken 方法為靜態。       ToXmlNmToken 會將 4 位數十六進位 ucs-2 代碼轉換成 Unicode。"
  syntax:
    content: protected static string ToXmlNmToken (string value);
    parameters:
    - id: value
      type: System.String
      description: "要解碼 XML 名稱。"
    return:
      type: System.String
      description: "已解碼的字串。"
  overload: System.Xml.Serialization.XmlSerializationReader.ToXmlNmToken*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ToXmlNmTokens(System.String)
  id: ToXmlNmTokens(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ToXmlNmTokens(String)
  nameWithType: XmlSerializationReader.ToXmlNmTokens(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToXmlNmTokens(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "將解碼 XML 名稱。"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationReader>供衍生類別會在內部使用.NET Framework XML 序列化基礎結構內所使用。</xref:System.Xml.Serialization.XmlSerializationReader>       ToXmlNmTokens 方法為靜態。       ToXmlNmTokens 會將 4 位數十六進位 ucs-2 代碼轉換成 Unicode。"
  syntax:
    content: protected static string ToXmlNmTokens (string value);
    parameters:
    - id: value
      type: System.String
      description: "要解碼 XML 名稱。"
    return:
      type: System.String
      description: "已解碼的字串。"
  overload: System.Xml.Serialization.XmlSerializationReader.ToXmlNmTokens*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ToXmlQualifiedName(System.String)
  id: ToXmlQualifiedName(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ToXmlQualifiedName(String)
  nameWithType: XmlSerializationReader.ToXmlQualifiedName(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToXmlQualifiedName(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "取得<xref:System.Xml.XmlQualifiedName>從可能包含前置詞的名稱。</xref:System.Xml.XmlQualifiedName>"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationReader>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationReader>       如果前置詞，則 ToXmlQualifiedName 方法查閱目前 XML 文件相關聯的命名空間，並將值<xref:System.Xml.XmlQualifiedName>物件。</xref:System.Xml.XmlQualifiedName>"
  syntax:
    content: protected System.Xml.XmlQualifiedName ToXmlQualifiedName (string value);
    parameters:
    - id: value
      type: System.String
      description: "可能包含前置詞的名稱。"
    return:
      type: System.Xml.XmlQualifiedName
      description: "<xref:System.Xml.XmlQualifiedName>表示 XML 命名空間限定名稱。</xref:System.Xml.XmlQualifiedName>"
  overload: System.Xml.Serialization.XmlSerializationReader.ToXmlQualifiedName*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.UnknownAttribute(System.Object,System.Xml.XmlAttribute)
  id: UnknownAttribute(System.Object,System.Xml.XmlAttribute)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: UnknownAttribute(Object,XmlAttribute)
  nameWithType: XmlSerializationReader.UnknownAttribute(Object,XmlAttribute)
  fullName: System.Xml.Serialization.XmlSerializationReader.UnknownAttribute(Object,XmlAttribute)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "引發<xref:System.Xml.Serialization.XmlSerializer.UnknownAttribute>事件的目前位置<xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader> </xref:System.Xml.Serialization.XmlSerializer.UnknownAttribute>"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationReader>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationReader>       處理常式方法加入處理未知的屬性時的 UnknownAttribute 方法<xref:System.Xml.Serialization.XmlSerializer>執行其<xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A>方法。</xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> </xref:System.Xml.Serialization.XmlSerializer>"
  syntax:
    content: protected void UnknownAttribute (object o, System.Xml.XmlAttribute attr);
    parameters:
    - id: o
      type: System.Object
      description: "物件，<xref:System.Xml.Serialization.XmlSerializer>嘗試還原序列化，後續可透過存取<xref:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized*>屬性。</xref:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized*> </xref:System.Xml.Serialization.XmlSerializer>"
    - id: attr
      type: System.Xml.XmlAttribute
      description: "<xref href=&quot;System.Xml.XmlAttribute&quot;> </xref>表示有問題的屬性。"
  overload: System.Xml.Serialization.XmlSerializationReader.UnknownAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.UnknownAttribute(System.Object,System.Xml.XmlAttribute,System.String)
  id: UnknownAttribute(System.Object,System.Xml.XmlAttribute,System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: UnknownAttribute(Object,XmlAttribute,String)
  nameWithType: XmlSerializationReader.UnknownAttribute(Object,XmlAttribute,String)
  fullName: System.Xml.Serialization.XmlSerializationReader.UnknownAttribute(Object,XmlAttribute,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "引發<xref:System.Xml.Serialization.XmlSerializer.UnknownAttribute>事件的目前位置<xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader> </xref:System.Xml.Serialization.XmlSerializer.UnknownAttribute>"
  syntax:
    content: protected void UnknownAttribute (object o, System.Xml.XmlAttribute attr, string qnames);
    parameters:
    - id: o
      type: System.Object
      description: "物件，<xref:System.Xml.Serialization.XmlSerializer>嘗試還原序列化，後續可透過存取<xref:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized*>屬性。</xref:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized*> </xref:System.Xml.Serialization.XmlSerializer>"
    - id: attr
      type: System.Xml.XmlAttribute
      description: "A <xref href=&quot;System.Xml.XmlAttribute&quot;> </xref>表示有問題的屬性。"
    - id: qnames
      type: System.String
      description: "以逗號分隔清單的 XML 限定名稱。"
  overload: System.Xml.Serialization.XmlSerializationReader.UnknownAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.UnknownElement(System.Object,System.Xml.XmlElement)
  id: UnknownElement(System.Object,System.Xml.XmlElement)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: UnknownElement(Object,XmlElement)
  nameWithType: XmlSerializationReader.UnknownElement(Object,XmlElement)
  fullName: System.Xml.Serialization.XmlSerializationReader.UnknownElement(Object,XmlElement)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "引發<xref:System.Xml.Serialization.XmlSerializer.UnknownElement>事件的目前位置<xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader> </xref:System.Xml.Serialization.XmlSerializer.UnknownElement>"
  syntax:
    content: protected void UnknownElement (object o, System.Xml.XmlElement elem);
    parameters:
    - id: o
      type: System.Object
      description: "<xref:System.Object>，正在還原序列化。</xref:System.Object>"
    - id: elem
      type: System.Xml.XmlElement
      description: "<xref href=&quot;System.Xml.XmlElement&quot;> </xref>引發事件。"
  overload: System.Xml.Serialization.XmlSerializationReader.UnknownElement*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.UnknownElement(System.Object,System.Xml.XmlElement,System.String)
  id: UnknownElement(System.Object,System.Xml.XmlElement,System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: UnknownElement(Object,XmlElement,String)
  nameWithType: XmlSerializationReader.UnknownElement(Object,XmlElement,String)
  fullName: System.Xml.Serialization.XmlSerializationReader.UnknownElement(Object,XmlElement,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "引發<xref:System.Xml.Serialization.XmlSerializer.UnknownElement>事件的目前位置<xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader> </xref:System.Xml.Serialization.XmlSerializer.UnknownElement>"
  syntax:
    content: protected void UnknownElement (object o, System.Xml.XmlElement elem, string qnames);
    parameters:
    - id: o
      type: System.Object
      description: "物件，<xref:System.Xml.Serialization.XmlSerializer>嘗試還原序列化，後續可透過存取<xref:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized*>屬性。</xref:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized*> </xref:System.Xml.Serialization.XmlSerializer>"
    - id: elem
      type: System.Xml.XmlElement
      description: "<xref href=&quot;System.Xml.XmlElement&quot;> </xref>引發事件。"
    - id: qnames
      type: System.String
      description: "以逗號分隔清單的 XML 限定名稱。"
  overload: System.Xml.Serialization.XmlSerializationReader.UnknownElement*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.UnknownNode(System.Object)
  id: UnknownNode(System.Object)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: UnknownNode(Object)
  nameWithType: XmlSerializationReader.UnknownNode(Object)
  fullName: System.Xml.Serialization.XmlSerializationReader.UnknownNode(Object)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "引發<xref:System.Xml.Serialization.XmlSerializer.UnknownNode>事件的目前位置<xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader> </xref:System.Xml.Serialization.XmlSerializer.UnknownNode>"
  syntax:
    content: protected void UnknownNode (object o);
    parameters:
    - id: o
      type: System.Object
      description: "在還原序列化物件。"
  overload: System.Xml.Serialization.XmlSerializationReader.UnknownNode*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.UnknownNode(System.Object,System.String)
  id: UnknownNode(System.Object,System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: UnknownNode(Object,String)
  nameWithType: XmlSerializationReader.UnknownNode(Object,String)
  fullName: System.Xml.Serialization.XmlSerializationReader.UnknownNode(Object,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "引發<xref:System.Xml.Serialization.XmlSerializer.UnknownNode>事件的目前位置<xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader> </xref:System.Xml.Serialization.XmlSerializer.UnknownNode>"
  syntax:
    content: protected void UnknownNode (object o, string qnames);
    parameters:
    - id: o
      type: System.Object
      description: "在還原序列化物件。"
    - id: qnames
      type: System.String
      description: "以逗號分隔清單的 XML 限定名稱。"
  overload: System.Xml.Serialization.XmlSerializationReader.UnknownNode*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.UnreferencedObject(System.String,System.Object)
  id: UnreferencedObject(System.String,System.Object)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: UnreferencedObject(String,Object)
  nameWithType: XmlSerializationReader.UnreferencedObject(String,Object)
  fullName: System.Xml.Serialization.XmlSerializationReader.UnreferencedObject(String,Object)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "引發<xref:System.Xml.Serialization.XmlSerializer.UnreferencedObject>事件的目前位置<xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader> </xref:System.Xml.Serialization.XmlSerializer.UnreferencedObject>"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationReader>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationReader>       SOAP 編碼方式，指定在第 5 節 SOAP 1.1 規格中，以允許多次參考 SOAP 訊息中的項目 (或選擇性，只有一次) 到所參考`href`主要訊息中的屬性。 <xref:System.Xml.Serialization.XmlSerializer.UnreferencedObject>事件發生於這類項目隨即出現，但是沒有任何`href`對它的參考</xref:System.Xml.Serialization.XmlSerializer.UnreferencedObject>       將處理常式方法加入<xref:System.Xml.Serialization.XmlSerializer.UnreferencedObject>以提供自訂的未參考的物件，而處理<xref:System.Xml.Serialization.XmlSerializer>執行其<xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A>方法。</xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> </xref:System.Xml.Serialization.XmlSerializer> </xref:System.Xml.Serialization.XmlSerializer.UnreferencedObject>"
  syntax:
    content: protected void UnreferencedObject (string id, object o);
    parameters:
    - id: id
      type: System.String
      description: "唯一的字串，用來識別參考的物件，可透過後續存取<xref:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedId*>屬性。</xref:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedId*>"
    - id: o
      type: System.Object
      description: "物件，<xref:System.Xml.Serialization.XmlSerializer>嘗試還原序列化，後續可透過存取<xref:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedObject*>屬性。</xref:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedObject*> </xref:System.Xml.Serialization.XmlSerializer>"
  overload: System.Xml.Serialization.XmlSerializationReader.UnreferencedObject*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Xml.Serialization.XmlSerializationGeneratedCode
  isExternal: false
  name: System.Xml.Serialization.XmlSerializationGeneratedCode
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Xml.Serialization.XmlSerializationReader.#ctor
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: XmlSerializationReader()
  nameWithType: XmlSerializationReader.XmlSerializationReader()
  fullName: System.Xml.Serialization.XmlSerializationReader.XmlSerializationReader()
- uid: System.Xml.Serialization.XmlSerializationReader.AddFixup(System.Xml.Serialization.XmlSerializationReader.CollectionFixup)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: AddFixup(XmlSerializationReader+CollectionFixup)
  nameWithType: XmlSerializationReader.AddFixup(XmlSerializationReader+CollectionFixup)
  fullName: System.Xml.Serialization.XmlSerializationReader.AddFixup(XmlSerializationReader+CollectionFixup)
- uid: System.Xml.Serialization.XmlSerializationReader.CollectionFixup
  parent: System.Xml.Serialization
  isExternal: false
  name: XmlSerializationReader+CollectionFixup
  nameWithType: XmlSerializationReader+CollectionFixup
  fullName: System.Xml.Serialization.XmlSerializationReader+CollectionFixup
- uid: System.Xml.Serialization.XmlSerializationReader.AddFixup(System.Xml.Serialization.XmlSerializationReader.Fixup)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: AddFixup(XmlSerializationReader+Fixup)
  nameWithType: XmlSerializationReader.AddFixup(XmlSerializationReader+Fixup)
  fullName: System.Xml.Serialization.XmlSerializationReader.AddFixup(XmlSerializationReader+Fixup)
- uid: System.Xml.Serialization.XmlSerializationReader.Fixup
  parent: System.Xml.Serialization
  isExternal: false
  name: XmlSerializationReader+Fixup
  nameWithType: XmlSerializationReader+Fixup
  fullName: System.Xml.Serialization.XmlSerializationReader+Fixup
- uid: System.Xml.Serialization.XmlSerializationReader.AddReadCallback(System.String,System.String,System.Type,System.Xml.Serialization.XmlSerializationReadCallback)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: AddReadCallback(String,String,Type,XmlSerializationReadCallback)
  nameWithType: XmlSerializationReader.AddReadCallback(String,String,Type,XmlSerializationReadCallback)
  fullName: System.Xml.Serialization.XmlSerializationReader.AddReadCallback(String,String,Type,XmlSerializationReadCallback)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Xml.Serialization.XmlSerializationReadCallback
  parent: System.Xml.Serialization
  isExternal: false
  name: XmlSerializationReadCallback
  nameWithType: XmlSerializationReadCallback
  fullName: System.Xml.Serialization.XmlSerializationReadCallback
- uid: System.Xml.Serialization.XmlSerializationReader.AddTarget(System.String,System.Object)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: AddTarget(String,Object)
  nameWithType: XmlSerializationReader.AddTarget(String,Object)
  fullName: System.Xml.Serialization.XmlSerializationReader.AddTarget(String,Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Xml.Serialization.XmlSerializationReader.CheckReaderCount(System.Int32@,System.Int32@)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: CheckReaderCount(Int32,Int32)
  nameWithType: XmlSerializationReader.CheckReaderCount(Int32,Int32)
  fullName: System.Xml.Serialization.XmlSerializationReader.CheckReaderCount(Int32,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Xml.Serialization.XmlSerializationReader.CollapseWhitespace(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: CollapseWhitespace(String)
  nameWithType: XmlSerializationReader.CollapseWhitespace(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.CollapseWhitespace(String)
- uid: System.Xml.Serialization.XmlSerializationReader.CreateAbstractTypeException(System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: CreateAbstractTypeException(String,String)
  nameWithType: XmlSerializationReader.CreateAbstractTypeException(String,String)
  fullName: System.Xml.Serialization.XmlSerializationReader.CreateAbstractTypeException(String,String)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Xml.Serialization.XmlSerializationReader.CreateBadDerivationException(System.String,System.String,System.String,System.String,System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: CreateBadDerivationException(String,String,String,String,String,String)
  nameWithType: XmlSerializationReader.CreateBadDerivationException(String,String,String,String,String,String)
  fullName: System.Xml.Serialization.XmlSerializationReader.CreateBadDerivationException(String,String,String,String,String,String)
- uid: System.Xml.Serialization.XmlSerializationReader.CreateCtorHasSecurityException(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: CreateCtorHasSecurityException(String)
  nameWithType: XmlSerializationReader.CreateCtorHasSecurityException(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.CreateCtorHasSecurityException(String)
- uid: System.Xml.Serialization.XmlSerializationReader.CreateInaccessibleConstructorException(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: CreateInaccessibleConstructorException(String)
  nameWithType: XmlSerializationReader.CreateInaccessibleConstructorException(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.CreateInaccessibleConstructorException(String)
- uid: System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException(System.Type,System.Object)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: CreateInvalidCastException(Type,Object)
  nameWithType: XmlSerializationReader.CreateInvalidCastException(Type,Object)
  fullName: System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException(Type,Object)
- uid: System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException(System.Type,System.Object,System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: CreateInvalidCastException(Type,Object,String)
  nameWithType: XmlSerializationReader.CreateInvalidCastException(Type,Object,String)
  fullName: System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException(Type,Object,String)
- uid: System.Xml.Serialization.XmlSerializationReader.CreateMissingIXmlSerializableType(System.String,System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: CreateMissingIXmlSerializableType(String,String,String)
  nameWithType: XmlSerializationReader.CreateMissingIXmlSerializableType(String,String,String)
  fullName: System.Xml.Serialization.XmlSerializationReader.CreateMissingIXmlSerializableType(String,String,String)
- uid: System.Xml.Serialization.XmlSerializationReader.CreateReadOnlyCollectionException(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: CreateReadOnlyCollectionException(String)
  nameWithType: XmlSerializationReader.CreateReadOnlyCollectionException(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.CreateReadOnlyCollectionException(String)
- uid: System.Xml.Serialization.XmlSerializationReader.CreateUnknownConstantException(System.String,System.Type)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: CreateUnknownConstantException(String,Type)
  nameWithType: XmlSerializationReader.CreateUnknownConstantException(String,Type)
  fullName: System.Xml.Serialization.XmlSerializationReader.CreateUnknownConstantException(String,Type)
- uid: System.Xml.Serialization.XmlSerializationReader.CreateUnknownNodeException
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: CreateUnknownNodeException()
  nameWithType: XmlSerializationReader.CreateUnknownNodeException()
  fullName: System.Xml.Serialization.XmlSerializationReader.CreateUnknownNodeException()
- uid: System.Xml.Serialization.XmlSerializationReader.CreateUnknownTypeException(System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: CreateUnknownTypeException(XmlQualifiedName)
  nameWithType: XmlSerializationReader.CreateUnknownTypeException(XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationReader.CreateUnknownTypeException(XmlQualifiedName)
- uid: System.Xml.XmlQualifiedName
  parent: System.Xml
  isExternal: true
  name: XmlQualifiedName
  nameWithType: XmlQualifiedName
  fullName: System.Xml.XmlQualifiedName
- uid: System.Xml.Serialization.XmlSerializationReader.DecodeName
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: DecodeName
  nameWithType: XmlSerializationReader.DecodeName
  fullName: System.Xml.Serialization.XmlSerializationReader.DecodeName
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xml.Serialization.XmlSerializationReader.Document
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: Document
  nameWithType: XmlSerializationReader.Document
  fullName: System.Xml.Serialization.XmlSerializationReader.Document
- uid: System.Xml.XmlDocument
  parent: System.Xml
  isExternal: false
  name: XmlDocument
  nameWithType: XmlDocument
  fullName: System.Xml.XmlDocument
- uid: System.Xml.Serialization.XmlSerializationReader.EnsureArrayIndex(System.Array,System.Int32,System.Type)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: EnsureArrayIndex(Array,Int32,Type)
  nameWithType: XmlSerializationReader.EnsureArrayIndex(Array,Int32,Type)
  fullName: System.Xml.Serialization.XmlSerializationReader.EnsureArrayIndex(Array,Int32,Type)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Xml.Serialization.XmlSerializationReader.FixupArrayRefs(System.Object)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: FixupArrayRefs(Object)
  nameWithType: XmlSerializationReader.FixupArrayRefs(Object)
  fullName: System.Xml.Serialization.XmlSerializationReader.FixupArrayRefs(Object)
- uid: System.Xml.Serialization.XmlSerializationReader.GetArrayLength(System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: GetArrayLength(String,String)
  nameWithType: XmlSerializationReader.GetArrayLength(String,String)
  fullName: System.Xml.Serialization.XmlSerializationReader.GetArrayLength(String,String)
- uid: System.Xml.Serialization.XmlSerializationReader.GetNullAttr
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: GetNullAttr()
  nameWithType: XmlSerializationReader.GetNullAttr()
  fullName: System.Xml.Serialization.XmlSerializationReader.GetNullAttr()
- uid: System.Xml.Serialization.XmlSerializationReader.GetTarget(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: GetTarget(String)
  nameWithType: XmlSerializationReader.GetTarget(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.GetTarget(String)
- uid: System.Xml.Serialization.XmlSerializationReader.GetXsiType
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: GetXsiType()
  nameWithType: XmlSerializationReader.GetXsiType()
  fullName: System.Xml.Serialization.XmlSerializationReader.GetXsiType()
- uid: System.Xml.Serialization.XmlSerializationReader.InitCallbacks
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: InitCallbacks()
  nameWithType: XmlSerializationReader.InitCallbacks()
  fullName: System.Xml.Serialization.XmlSerializationReader.InitCallbacks()
- uid: System.Xml.Serialization.XmlSerializationReader.InitIDs
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: InitIDs()
  nameWithType: XmlSerializationReader.InitIDs()
  fullName: System.Xml.Serialization.XmlSerializationReader.InitIDs()
- uid: System.Xml.Serialization.XmlSerializationReader.IsReturnValue
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: IsReturnValue
  nameWithType: XmlSerializationReader.IsReturnValue
  fullName: System.Xml.Serialization.XmlSerializationReader.IsReturnValue
- uid: System.Xml.Serialization.XmlSerializationReader.IsXmlnsAttribute(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: IsXmlnsAttribute(String)
  nameWithType: XmlSerializationReader.IsXmlnsAttribute(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.IsXmlnsAttribute(String)
- uid: System.Xml.Serialization.XmlSerializationReader.ParseWsdlArrayType(System.Xml.XmlAttribute)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ParseWsdlArrayType(XmlAttribute)
  nameWithType: XmlSerializationReader.ParseWsdlArrayType(XmlAttribute)
  fullName: System.Xml.Serialization.XmlSerializationReader.ParseWsdlArrayType(XmlAttribute)
- uid: System.Xml.XmlAttribute
  parent: System.Xml
  isExternal: false
  name: XmlAttribute
  nameWithType: XmlAttribute
  fullName: System.Xml.XmlAttribute
- uid: System.Xml.Serialization.XmlSerializationReader.ReadElementQualifiedName
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadElementQualifiedName()
  nameWithType: XmlSerializationReader.ReadElementQualifiedName()
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadElementQualifiedName()
- uid: System.Xml.Serialization.XmlSerializationReader.ReadEndElement
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadEndElement()
  nameWithType: XmlSerializationReader.ReadEndElement()
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadEndElement()
- uid: System.Xml.Serialization.XmlSerializationReader.Reader
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: Reader
  nameWithType: XmlSerializationReader.Reader
  fullName: System.Xml.Serialization.XmlSerializationReader.Reader
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Xml.Serialization.XmlSerializationReader.ReaderCount
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReaderCount
  nameWithType: XmlSerializationReader.ReaderCount
  fullName: System.Xml.Serialization.XmlSerializationReader.ReaderCount
- uid: System.Xml.Serialization.XmlSerializationReader.ReadNull
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadNull()
  nameWithType: XmlSerializationReader.ReadNull()
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadNull()
- uid: System.Xml.Serialization.XmlSerializationReader.ReadNullableQualifiedName
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadNullableQualifiedName()
  nameWithType: XmlSerializationReader.ReadNullableQualifiedName()
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadNullableQualifiedName()
- uid: System.Xml.Serialization.XmlSerializationReader.ReadNullableString
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadNullableString()
  nameWithType: XmlSerializationReader.ReadNullableString()
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadNullableString()
- uid: System.Xml.Serialization.XmlSerializationReader.ReadReference(System.String@)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadReference(String)
  nameWithType: XmlSerializationReader.ReadReference(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadReference(String)
- uid: System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadReferencedElement()
  nameWithType: XmlSerializationReader.ReadReferencedElement()
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement()
- uid: System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement(System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadReferencedElement(String,String)
  nameWithType: XmlSerializationReader.ReadReferencedElement(String,String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement(String,String)
- uid: System.Xml.Serialization.XmlSerializationReader.ReadReferencedElements
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadReferencedElements()
  nameWithType: XmlSerializationReader.ReadReferencedElements()
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadReferencedElements()
- uid: System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(System.String@)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadReferencingElement(String)
  nameWithType: XmlSerializationReader.ReadReferencingElement(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(String)
- uid: System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(System.String,System.String,System.String@)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadReferencingElement(String,String,String)
  nameWithType: XmlSerializationReader.ReadReferencingElement(String,String,String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(String,String,String)
- uid: System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(System.String,System.String,System.Boolean,System.String@)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadReferencingElement(String,String,Boolean,String)
  nameWithType: XmlSerializationReader.ReadReferencingElement(String,String,Boolean,String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(String,String,Boolean,String)
- uid: System.Xml.Serialization.XmlSerializationReader.ReadSerializable(System.Xml.Serialization.IXmlSerializable)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadSerializable(IXmlSerializable)
  nameWithType: XmlSerializationReader.ReadSerializable(IXmlSerializable)
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadSerializable(IXmlSerializable)
- uid: System.Xml.Serialization.IXmlSerializable
  parent: System.Xml.Serialization
  isExternal: true
  name: IXmlSerializable
  nameWithType: IXmlSerializable
  fullName: System.Xml.Serialization.IXmlSerializable
- uid: System.Xml.Serialization.XmlSerializationReader.ReadSerializable(System.Xml.Serialization.IXmlSerializable,System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadSerializable(IXmlSerializable,Boolean)
  nameWithType: XmlSerializationReader.ReadSerializable(IXmlSerializable,Boolean)
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadSerializable(IXmlSerializable,Boolean)
- uid: System.Xml.Serialization.XmlSerializationReader.ReadString(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadString(String)
  nameWithType: XmlSerializationReader.ReadString(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadString(String)
- uid: System.Xml.Serialization.XmlSerializationReader.ReadString(System.String,System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadString(String,Boolean)
  nameWithType: XmlSerializationReader.ReadString(String,Boolean)
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadString(String,Boolean)
- uid: System.Xml.Serialization.XmlSerializationReader.ReadTypedNull(System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadTypedNull(XmlQualifiedName)
  nameWithType: XmlSerializationReader.ReadTypedNull(XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadTypedNull(XmlQualifiedName)
- uid: System.Xml.Serialization.XmlSerializationReader.ReadTypedPrimitive(System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadTypedPrimitive(XmlQualifiedName)
  nameWithType: XmlSerializationReader.ReadTypedPrimitive(XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadTypedPrimitive(XmlQualifiedName)
- uid: System.Xml.Serialization.XmlSerializationReader.ReadXmlDocument(System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadXmlDocument(Boolean)
  nameWithType: XmlSerializationReader.ReadXmlDocument(Boolean)
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadXmlDocument(Boolean)
- uid: System.Xml.Serialization.XmlSerializationReader.ReadXmlNode(System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadXmlNode(Boolean)
  nameWithType: XmlSerializationReader.ReadXmlNode(Boolean)
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadXmlNode(Boolean)
- uid: System.Xml.XmlNode
  parent: System.Xml
  isExternal: false
  name: XmlNode
  nameWithType: XmlNode
  fullName: System.Xml.XmlNode
- uid: System.Xml.Serialization.XmlSerializationReader.Referenced(System.Object)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: Referenced(Object)
  nameWithType: XmlSerializationReader.Referenced(Object)
  fullName: System.Xml.Serialization.XmlSerializationReader.Referenced(Object)
- uid: System.Xml.Serialization.XmlSerializationReader.ResolveDynamicAssembly(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ResolveDynamicAssembly(String)
  nameWithType: XmlSerializationReader.ResolveDynamicAssembly(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ResolveDynamicAssembly(String)
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: true
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.Xml.Serialization.XmlSerializationReader.ShrinkArray(System.Array,System.Int32,System.Type,System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ShrinkArray(Array,Int32,Type,Boolean)
  nameWithType: XmlSerializationReader.ShrinkArray(Array,Int32,Type,Boolean)
  fullName: System.Xml.Serialization.XmlSerializationReader.ShrinkArray(Array,Int32,Type,Boolean)
- uid: System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64(System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ToByteArrayBase64(Boolean)
  nameWithType: XmlSerializationReader.ToByteArrayBase64(Boolean)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64(Boolean)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ToByteArrayBase64(String)
  nameWithType: XmlSerializationReader.ToByteArrayBase64(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64(String)
- uid: System.Xml.Serialization.XmlSerializationReader.ToByteArrayHex(System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ToByteArrayHex(Boolean)
  nameWithType: XmlSerializationReader.ToByteArrayHex(Boolean)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToByteArrayHex(Boolean)
- uid: System.Xml.Serialization.XmlSerializationReader.ToByteArrayHex(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ToByteArrayHex(String)
  nameWithType: XmlSerializationReader.ToByteArrayHex(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToByteArrayHex(String)
- uid: System.Xml.Serialization.XmlSerializationReader.ToChar(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ToChar(String)
  nameWithType: XmlSerializationReader.ToChar(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToChar(String)
- uid: System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Xml.Serialization.XmlSerializationReader.ToDate(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ToDate(String)
  nameWithType: XmlSerializationReader.ToDate(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToDate(String)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Xml.Serialization.XmlSerializationReader.ToDateTime(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ToDateTime(String)
  nameWithType: XmlSerializationReader.ToDateTime(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToDateTime(String)
- uid: System.Xml.Serialization.XmlSerializationReader.ToEnum(System.String,System.Collections.Hashtable,System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ToEnum(String,Hashtable,String)
  nameWithType: XmlSerializationReader.ToEnum(String,Hashtable,String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToEnum(String,Hashtable,String)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Collections.Hashtable
  parent: System.Collections
  isExternal: false
  name: Hashtable
  nameWithType: Hashtable
  fullName: System.Collections.Hashtable
- uid: System.Xml.Serialization.XmlSerializationReader.ToTime(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ToTime(String)
  nameWithType: XmlSerializationReader.ToTime(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToTime(String)
- uid: System.Xml.Serialization.XmlSerializationReader.ToXmlName(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ToXmlName(String)
  nameWithType: XmlSerializationReader.ToXmlName(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToXmlName(String)
- uid: System.Xml.Serialization.XmlSerializationReader.ToXmlNCName(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ToXmlNCName(String)
  nameWithType: XmlSerializationReader.ToXmlNCName(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToXmlNCName(String)
- uid: System.Xml.Serialization.XmlSerializationReader.ToXmlNmToken(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ToXmlNmToken(String)
  nameWithType: XmlSerializationReader.ToXmlNmToken(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToXmlNmToken(String)
- uid: System.Xml.Serialization.XmlSerializationReader.ToXmlNmTokens(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ToXmlNmTokens(String)
  nameWithType: XmlSerializationReader.ToXmlNmTokens(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToXmlNmTokens(String)
- uid: System.Xml.Serialization.XmlSerializationReader.ToXmlQualifiedName(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ToXmlQualifiedName(String)
  nameWithType: XmlSerializationReader.ToXmlQualifiedName(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToXmlQualifiedName(String)
- uid: System.Xml.Serialization.XmlSerializationReader.UnknownAttribute(System.Object,System.Xml.XmlAttribute)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: UnknownAttribute(Object,XmlAttribute)
  nameWithType: XmlSerializationReader.UnknownAttribute(Object,XmlAttribute)
  fullName: System.Xml.Serialization.XmlSerializationReader.UnknownAttribute(Object,XmlAttribute)
- uid: System.Xml.Serialization.XmlSerializationReader.UnknownAttribute(System.Object,System.Xml.XmlAttribute,System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: UnknownAttribute(Object,XmlAttribute,String)
  nameWithType: XmlSerializationReader.UnknownAttribute(Object,XmlAttribute,String)
  fullName: System.Xml.Serialization.XmlSerializationReader.UnknownAttribute(Object,XmlAttribute,String)
- uid: System.Xml.Serialization.XmlSerializationReader.UnknownElement(System.Object,System.Xml.XmlElement)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: UnknownElement(Object,XmlElement)
  nameWithType: XmlSerializationReader.UnknownElement(Object,XmlElement)
  fullName: System.Xml.Serialization.XmlSerializationReader.UnknownElement(Object,XmlElement)
- uid: System.Xml.XmlElement
  parent: System.Xml
  isExternal: false
  name: XmlElement
  nameWithType: XmlElement
  fullName: System.Xml.XmlElement
- uid: System.Xml.Serialization.XmlSerializationReader.UnknownElement(System.Object,System.Xml.XmlElement,System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: UnknownElement(Object,XmlElement,String)
  nameWithType: XmlSerializationReader.UnknownElement(Object,XmlElement,String)
  fullName: System.Xml.Serialization.XmlSerializationReader.UnknownElement(Object,XmlElement,String)
- uid: System.Xml.Serialization.XmlSerializationReader.UnknownNode(System.Object)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: UnknownNode(Object)
  nameWithType: XmlSerializationReader.UnknownNode(Object)
  fullName: System.Xml.Serialization.XmlSerializationReader.UnknownNode(Object)
- uid: System.Xml.Serialization.XmlSerializationReader.UnknownNode(System.Object,System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: UnknownNode(Object,String)
  nameWithType: XmlSerializationReader.UnknownNode(Object,String)
  fullName: System.Xml.Serialization.XmlSerializationReader.UnknownNode(Object,String)
- uid: System.Xml.Serialization.XmlSerializationReader.UnreferencedObject(System.String,System.Object)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: UnreferencedObject(String,Object)
  nameWithType: XmlSerializationReader.UnreferencedObject(String,Object)
  fullName: System.Xml.Serialization.XmlSerializationReader.UnreferencedObject(String,Object)
- uid: System.Xml.Serialization.XmlSerializationReader.#ctor*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: XmlSerializationReader
  nameWithType: XmlSerializationReader.XmlSerializationReader
- uid: System.Xml.Serialization.XmlSerializationReader.AddFixup*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: AddFixup
  nameWithType: XmlSerializationReader.AddFixup
- uid: System.Xml.Serialization.XmlSerializationReader.AddReadCallback*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: AddReadCallback
  nameWithType: XmlSerializationReader.AddReadCallback
- uid: System.Xml.Serialization.XmlSerializationReader.AddTarget*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: AddTarget
  nameWithType: XmlSerializationReader.AddTarget
- uid: System.Xml.Serialization.XmlSerializationReader.CheckReaderCount*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: CheckReaderCount
  nameWithType: XmlSerializationReader.CheckReaderCount
- uid: System.Xml.Serialization.XmlSerializationReader.CollapseWhitespace*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: CollapseWhitespace
  nameWithType: XmlSerializationReader.CollapseWhitespace
- uid: System.Xml.Serialization.XmlSerializationReader.CreateAbstractTypeException*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: CreateAbstractTypeException
  nameWithType: XmlSerializationReader.CreateAbstractTypeException
- uid: System.Xml.Serialization.XmlSerializationReader.CreateBadDerivationException*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: CreateBadDerivationException
  nameWithType: XmlSerializationReader.CreateBadDerivationException
- uid: System.Xml.Serialization.XmlSerializationReader.CreateCtorHasSecurityException*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: CreateCtorHasSecurityException
  nameWithType: XmlSerializationReader.CreateCtorHasSecurityException
- uid: System.Xml.Serialization.XmlSerializationReader.CreateInaccessibleConstructorException*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: CreateInaccessibleConstructorException
  nameWithType: XmlSerializationReader.CreateInaccessibleConstructorException
- uid: System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: CreateInvalidCastException
  nameWithType: XmlSerializationReader.CreateInvalidCastException
- uid: System.Xml.Serialization.XmlSerializationReader.CreateMissingIXmlSerializableType*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: CreateMissingIXmlSerializableType
  nameWithType: XmlSerializationReader.CreateMissingIXmlSerializableType
- uid: System.Xml.Serialization.XmlSerializationReader.CreateReadOnlyCollectionException*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: CreateReadOnlyCollectionException
  nameWithType: XmlSerializationReader.CreateReadOnlyCollectionException
- uid: System.Xml.Serialization.XmlSerializationReader.CreateUnknownConstantException*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: CreateUnknownConstantException
  nameWithType: XmlSerializationReader.CreateUnknownConstantException
- uid: System.Xml.Serialization.XmlSerializationReader.CreateUnknownNodeException*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: CreateUnknownNodeException
  nameWithType: XmlSerializationReader.CreateUnknownNodeException
- uid: System.Xml.Serialization.XmlSerializationReader.CreateUnknownTypeException*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: CreateUnknownTypeException
  nameWithType: XmlSerializationReader.CreateUnknownTypeException
- uid: System.Xml.Serialization.XmlSerializationReader.DecodeName*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: DecodeName
  nameWithType: XmlSerializationReader.DecodeName
- uid: System.Xml.Serialization.XmlSerializationReader.Document*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: Document
  nameWithType: XmlSerializationReader.Document
- uid: System.Xml.Serialization.XmlSerializationReader.EnsureArrayIndex*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: EnsureArrayIndex
  nameWithType: XmlSerializationReader.EnsureArrayIndex
- uid: System.Xml.Serialization.XmlSerializationReader.FixupArrayRefs*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: FixupArrayRefs
  nameWithType: XmlSerializationReader.FixupArrayRefs
- uid: System.Xml.Serialization.XmlSerializationReader.GetArrayLength*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: GetArrayLength
  nameWithType: XmlSerializationReader.GetArrayLength
- uid: System.Xml.Serialization.XmlSerializationReader.GetNullAttr*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: GetNullAttr
  nameWithType: XmlSerializationReader.GetNullAttr
- uid: System.Xml.Serialization.XmlSerializationReader.GetTarget*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: GetTarget
  nameWithType: XmlSerializationReader.GetTarget
- uid: System.Xml.Serialization.XmlSerializationReader.GetXsiType*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: GetXsiType
  nameWithType: XmlSerializationReader.GetXsiType
- uid: System.Xml.Serialization.XmlSerializationReader.InitCallbacks*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: InitCallbacks
  nameWithType: XmlSerializationReader.InitCallbacks
- uid: System.Xml.Serialization.XmlSerializationReader.InitIDs*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: InitIDs
  nameWithType: XmlSerializationReader.InitIDs
- uid: System.Xml.Serialization.XmlSerializationReader.IsReturnValue*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: IsReturnValue
  nameWithType: XmlSerializationReader.IsReturnValue
- uid: System.Xml.Serialization.XmlSerializationReader.IsXmlnsAttribute*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: IsXmlnsAttribute
  nameWithType: XmlSerializationReader.IsXmlnsAttribute
- uid: System.Xml.Serialization.XmlSerializationReader.ParseWsdlArrayType*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ParseWsdlArrayType
  nameWithType: XmlSerializationReader.ParseWsdlArrayType
- uid: System.Xml.Serialization.XmlSerializationReader.ReadElementQualifiedName*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadElementQualifiedName
  nameWithType: XmlSerializationReader.ReadElementQualifiedName
- uid: System.Xml.Serialization.XmlSerializationReader.ReadEndElement*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadEndElement
  nameWithType: XmlSerializationReader.ReadEndElement
- uid: System.Xml.Serialization.XmlSerializationReader.Reader*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: Reader
  nameWithType: XmlSerializationReader.Reader
- uid: System.Xml.Serialization.XmlSerializationReader.ReaderCount*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReaderCount
  nameWithType: XmlSerializationReader.ReaderCount
- uid: System.Xml.Serialization.XmlSerializationReader.ReadNull*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadNull
  nameWithType: XmlSerializationReader.ReadNull
- uid: System.Xml.Serialization.XmlSerializationReader.ReadNullableQualifiedName*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadNullableQualifiedName
  nameWithType: XmlSerializationReader.ReadNullableQualifiedName
- uid: System.Xml.Serialization.XmlSerializationReader.ReadNullableString*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadNullableString
  nameWithType: XmlSerializationReader.ReadNullableString
- uid: System.Xml.Serialization.XmlSerializationReader.ReadReference*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadReference
  nameWithType: XmlSerializationReader.ReadReference
- uid: System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadReferencedElement
  nameWithType: XmlSerializationReader.ReadReferencedElement
- uid: System.Xml.Serialization.XmlSerializationReader.ReadReferencedElements*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadReferencedElements
  nameWithType: XmlSerializationReader.ReadReferencedElements
- uid: System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadReferencingElement
  nameWithType: XmlSerializationReader.ReadReferencingElement
- uid: System.Xml.Serialization.XmlSerializationReader.ReadSerializable*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadSerializable
  nameWithType: XmlSerializationReader.ReadSerializable
- uid: System.Xml.Serialization.XmlSerializationReader.ReadString*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadString
  nameWithType: XmlSerializationReader.ReadString
- uid: System.Xml.Serialization.XmlSerializationReader.ReadTypedNull*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadTypedNull
  nameWithType: XmlSerializationReader.ReadTypedNull
- uid: System.Xml.Serialization.XmlSerializationReader.ReadTypedPrimitive*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadTypedPrimitive
  nameWithType: XmlSerializationReader.ReadTypedPrimitive
- uid: System.Xml.Serialization.XmlSerializationReader.ReadXmlDocument*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadXmlDocument
  nameWithType: XmlSerializationReader.ReadXmlDocument
- uid: System.Xml.Serialization.XmlSerializationReader.ReadXmlNode*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadXmlNode
  nameWithType: XmlSerializationReader.ReadXmlNode
- uid: System.Xml.Serialization.XmlSerializationReader.Referenced*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: Referenced
  nameWithType: XmlSerializationReader.Referenced
- uid: System.Xml.Serialization.XmlSerializationReader.ResolveDynamicAssembly*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ResolveDynamicAssembly
  nameWithType: XmlSerializationReader.ResolveDynamicAssembly
- uid: System.Xml.Serialization.XmlSerializationReader.ShrinkArray*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ShrinkArray
  nameWithType: XmlSerializationReader.ShrinkArray
- uid: System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ToByteArrayBase64
  nameWithType: XmlSerializationReader.ToByteArrayBase64
- uid: System.Xml.Serialization.XmlSerializationReader.ToByteArrayHex*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ToByteArrayHex
  nameWithType: XmlSerializationReader.ToByteArrayHex
- uid: System.Xml.Serialization.XmlSerializationReader.ToChar*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ToChar
  nameWithType: XmlSerializationReader.ToChar
- uid: System.Xml.Serialization.XmlSerializationReader.ToDate*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ToDate
  nameWithType: XmlSerializationReader.ToDate
- uid: System.Xml.Serialization.XmlSerializationReader.ToDateTime*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ToDateTime
  nameWithType: XmlSerializationReader.ToDateTime
- uid: System.Xml.Serialization.XmlSerializationReader.ToEnum*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ToEnum
  nameWithType: XmlSerializationReader.ToEnum
- uid: System.Xml.Serialization.XmlSerializationReader.ToTime*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ToTime
  nameWithType: XmlSerializationReader.ToTime
- uid: System.Xml.Serialization.XmlSerializationReader.ToXmlName*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ToXmlName
  nameWithType: XmlSerializationReader.ToXmlName
- uid: System.Xml.Serialization.XmlSerializationReader.ToXmlNCName*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ToXmlNCName
  nameWithType: XmlSerializationReader.ToXmlNCName
- uid: System.Xml.Serialization.XmlSerializationReader.ToXmlNmToken*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ToXmlNmToken
  nameWithType: XmlSerializationReader.ToXmlNmToken
- uid: System.Xml.Serialization.XmlSerializationReader.ToXmlNmTokens*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ToXmlNmTokens
  nameWithType: XmlSerializationReader.ToXmlNmTokens
- uid: System.Xml.Serialization.XmlSerializationReader.ToXmlQualifiedName*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ToXmlQualifiedName
  nameWithType: XmlSerializationReader.ToXmlQualifiedName
- uid: System.Xml.Serialization.XmlSerializationReader.UnknownAttribute*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: UnknownAttribute
  nameWithType: XmlSerializationReader.UnknownAttribute
- uid: System.Xml.Serialization.XmlSerializationReader.UnknownElement*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: UnknownElement
  nameWithType: XmlSerializationReader.UnknownElement
- uid: System.Xml.Serialization.XmlSerializationReader.UnknownNode*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: UnknownNode
  nameWithType: XmlSerializationReader.UnknownNode
- uid: System.Xml.Serialization.XmlSerializationReader.UnreferencedObject*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: UnreferencedObject
  nameWithType: XmlSerializationReader.UnreferencedObject
