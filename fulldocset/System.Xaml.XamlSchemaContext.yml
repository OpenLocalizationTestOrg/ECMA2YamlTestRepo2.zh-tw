### YamlMime:ManagedReference
items:
- uid: System.Xaml.XamlSchemaContext
  id: XamlSchemaContext
  children:
  - System.Xaml.XamlSchemaContext.#ctor
  - System.Xaml.XamlSchemaContext.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})
  - System.Xaml.XamlSchemaContext.#ctor(System.Xaml.XamlSchemaContextSettings)
  - System.Xaml.XamlSchemaContext.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly},System.Xaml.XamlSchemaContextSettings)
  - System.Xaml.XamlSchemaContext.Finalize
  - System.Xaml.XamlSchemaContext.FullyQualifyAssemblyNamesInClrNamespaces
  - System.Xaml.XamlSchemaContext.GetAllXamlNamespaces
  - System.Xaml.XamlSchemaContext.GetAllXamlTypes(System.String)
  - System.Xaml.XamlSchemaContext.GetPreferredPrefix(System.String)
  - System.Xaml.XamlSchemaContext.GetValueConverter``1(System.Type,System.Xaml.XamlType)
  - System.Xaml.XamlSchemaContext.GetXamlDirective(System.String,System.String)
  - System.Xaml.XamlSchemaContext.GetXamlType(System.Type)
  - System.Xaml.XamlSchemaContext.GetXamlType(System.Xaml.Schema.XamlTypeName)
  - System.Xaml.XamlSchemaContext.GetXamlType(System.String,System.String,System.Xaml.XamlType[])
  - System.Xaml.XamlSchemaContext.OnAssemblyResolve(System.String)
  - System.Xaml.XamlSchemaContext.ReferenceAssemblies
  - System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity
  - System.Xaml.XamlSchemaContext.TryGetCompatibleXamlNamespace(System.String,System.String@)
  langs:
  - csharp
  name: XamlSchemaContext
  nameWithType: XamlSchemaContext
  fullName: System.Xaml.XamlSchemaContext
  type: Class
  summary: "定義可重複使用內容解譯，或將 XAML 類型和構成這些組件中的型別對應。"
  remarks: "XAML 結構描述內容提供結構描述或詞彙，針對 XAML 和特定的剖析器實作之間的抽象的層。 插入結構描述內容的概念、 結構描述可以搭配不同的 XAML 剖析器並結構描述內容填入所需的特定 XAML 剖析器與互動的詳細資料。 例如，XAML 結構描述內容會提供查詢與 XAML 概念或 XAML 類型系統的 CLR 繫結相關的 Api。 也負責維護載入的組件的組件清單會定義 XAML 剖析器尋找支援類型的 XAML 結構描述內容。"
  syntax:
    content: public class XamlSchemaContext
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xaml.XamlSchemaContext.#ctor
  id: '#ctor'
  parent: System.Xaml.XamlSchemaContext
  langs:
  - csharp
  name: XamlSchemaContext()
  nameWithType: XamlSchemaContext.XamlSchemaContext()
  fullName: System.Xaml.XamlSchemaContext.XamlSchemaContext()
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "初始化的新執行個體<xref href=&quot;System.Xaml.XamlSchemaContext&quot;></xref>類別。"
  syntax:
    content: public XamlSchemaContext ();
    parameters: []
  overload: System.Xaml.XamlSchemaContext.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlSchemaContext.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})
  id: '#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})'
  parent: System.Xaml.XamlSchemaContext
  langs:
  - csharp
  name: XamlSchemaContext(IEnumerable<Assembly>)
  nameWithType: XamlSchemaContext.XamlSchemaContext(IEnumerable<Assembly>)
  fullName: System.Xaml.XamlSchemaContext.XamlSchemaContext(IEnumerable<Assembly>)
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "初始化的新執行個體<xref href=&quot;System.Xaml.XamlSchemaContext&quot;></xref>類別，根據一組的參考組件。"
  syntax:
    content: public XamlSchemaContext (System.Collections.Generic.IEnumerable<System.Reflection.Assembly> referenceAssemblies);
    parameters:
    - id: referenceAssemblies
      type: System.Collections.Generic.IEnumerable{System.Reflection.Assembly}
      description: "組件資訊項目的可列舉集合。 每個組件資訊項目由指定<xref:System.Reflection.Assembly>值。</xref:System.Reflection.Assembly>"
  overload: System.Xaml.XamlSchemaContext.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlSchemaContext.#ctor(System.Xaml.XamlSchemaContextSettings)
  id: '#ctor(System.Xaml.XamlSchemaContextSettings)'
  parent: System.Xaml.XamlSchemaContext
  langs:
  - csharp
  name: XamlSchemaContext(XamlSchemaContextSettings)
  nameWithType: XamlSchemaContext.XamlSchemaContext(XamlSchemaContextSettings)
  fullName: System.Xaml.XamlSchemaContext.XamlSchemaContext(XamlSchemaContextSettings)
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "初始化的新執行個體<xref href=&quot;System.Xaml.XamlSchemaContext&quot;></xref>類別，根據設定物件。"
  remarks: "設定物件會儲存文字轉換器和標記延伸模組的詳細資訊的結構描述內容的資訊。 如需詳細資訊，請參閱<xref:System.Xaml.XamlSchemaContextSettings>.</xref:System.Xaml.XamlSchemaContextSettings>"
  syntax:
    content: public XamlSchemaContext (System.Xaml.XamlSchemaContextSettings settings);
    parameters:
    - id: settings
      type: System.Xaml.XamlSchemaContextSettings
      description: "設定要使用的物件來建構<xref href=&quot;System.Xaml.XamlSchemaContext&quot;> </xref>。"
  overload: System.Xaml.XamlSchemaContext.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlSchemaContext.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly},System.Xaml.XamlSchemaContextSettings)
  id: '#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly},System.Xaml.XamlSchemaContextSettings)'
  parent: System.Xaml.XamlSchemaContext
  langs:
  - csharp
  name: XamlSchemaContext(IEnumerable<Assembly>,XamlSchemaContextSettings)
  nameWithType: XamlSchemaContext.XamlSchemaContext(IEnumerable<Assembly>,XamlSchemaContextSettings)
  fullName: System.Xaml.XamlSchemaContext.XamlSchemaContext(IEnumerable<Assembly>,XamlSchemaContextSettings)
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "初始化的新執行個體<xref href=&quot;System.Xaml.XamlSchemaContext&quot;></xref>類別，根據一組參考組件和設定物件。"
  syntax:
    content: public XamlSchemaContext (System.Collections.Generic.IEnumerable<System.Reflection.Assembly> referenceAssemblies, System.Xaml.XamlSchemaContextSettings settings);
    parameters:
    - id: referenceAssemblies
      type: System.Collections.Generic.IEnumerable{System.Reflection.Assembly}
      description: "組件資訊的可列舉集合。 每個組件資訊項目由指定<xref:System.Reflection.Assembly>值。</xref:System.Reflection.Assembly>"
    - id: settings
      type: System.Xaml.XamlSchemaContextSettings
      description: "設定要使用的物件來建構<xref href=&quot;System.Xaml.XamlSchemaContext&quot;> </xref>。"
  overload: System.Xaml.XamlSchemaContext.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlSchemaContext.Finalize
  id: Finalize
  parent: System.Xaml.XamlSchemaContext
  langs:
  - csharp
  name: Finalize()
  nameWithType: XamlSchemaContext.Finalize()
  fullName: System.Xaml.XamlSchemaContext.Finalize()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "提供的非標準<xref uid=&quot;langword_csharp_Finalize&quot; name=&quot;Finalize&quot; href=&quot;&quot;></xref>不叫用的實作<xref uid=&quot;langword_csharp_Dispose&quot; name=&quot;Dispose&quot; href=&quot;&quot;> </xref>。"
  remarks: "自動記憶體回收，或是手動作業，不應該受到處置 XAML 結構描述內容。 雖然 XAML 結構描述內容不有任何 unmanaged 的資源，但是<xref:System.Windows.Markup.XamlDeferLoadAttribute>屬性可能仍在作用中，並處置 XAML 結構描述內容可能會干擾相關的延後載入作業。</xref:System.Windows.Markup.XamlDeferLoadAttribute>       <xref:System.AppDomain.AssemblyLoad>事件處理常式，其會做為弱式參考內部連結，此實作會清除。</xref:System.AppDomain.AssemblyLoad>"
  syntax:
    content: ~XamlSchemaContext ();
    parameters: []
  overload: System.Xaml.XamlSchemaContext.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlSchemaContext.FullyQualifyAssemblyNamesInClrNamespaces
  id: FullyQualifyAssemblyNamesInClrNamespaces
  parent: System.Xaml.XamlSchemaContext
  langs:
  - csharp
  name: FullyQualifyAssemblyNamesInClrNamespaces
  nameWithType: XamlSchemaContext.FullyQualifyAssemblyNamesInClrNamespaces
  fullName: System.Xaml.XamlSchemaContext.FullyQualifyAssemblyNamesInClrNamespaces
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "取得值，指定是否 XAML 結構描述和其內容使用完整組件名稱查閱 API 所傳回的值。"
  remarks: "這個屬性會傳回<xref:System.Xaml.XamlSchemaContextSettings.FullyQualifyAssemblyNamesInClrNamespaces%2A?displayProperty=fullName>所建立的設定值<xref:System.Xaml.XamlSchemaContext.%23ctor%28System.Xaml.XamlSchemaContextSettings%29>建構函式簽章。</xref:System.Xaml.XamlSchemaContext.%23ctor%28System.Xaml.XamlSchemaContextSettings%29> </xref:System.Xaml.XamlSchemaContextSettings.FullyQualifyAssemblyNamesInClrNamespaces%2A?displayProperty=fullName> 如果其他的簽章用於建構或<xref:System.Xaml.XamlSchemaContextSettings.FullyQualifyAssemblyNamesInClrNamespaces%2A?displayProperty=fullName>不特別設`true`，這個屬性的值是`false`。</xref:System.Xaml.XamlSchemaContextSettings.FullyQualifyAssemblyNamesInClrNamespaces%2A?displayProperty=fullName>       這個屬性的值會影響<xref:System.Xaml.XamlSchemaContext.GetAllXamlNamespaces%2A>.</xref:System.Xaml.XamlSchemaContext.GetAllXamlNamespaces%2A>所傳回的字串 如果是 FullyQualifyAssemblyNamesInClrNamespaces `true`，字串的組件部分報告<xref:System.Reflection.Assembly.FullName%2A?displayProperty=fullName>.</xref:System.Reflection.Assembly.FullName%2A?displayProperty=fullName>的對等項目"
  syntax:
    content: public bool FullyQualifyAssemblyNamesInClrNamespaces { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果 XAML 結構描述和其內容 Api; 該查詢所傳回的值中使用完整組件名稱否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Xaml.XamlSchemaContext.FullyQualifyAssemblyNamesInClrNamespaces*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlSchemaContext.GetAllXamlNamespaces
  id: GetAllXamlNamespaces
  parent: System.Xaml.XamlSchemaContext
  langs:
  - csharp
  name: GetAllXamlNamespaces()
  nameWithType: XamlSchemaContext.GetAllXamlNamespaces()
  fullName: System.Xaml.XamlSchemaContext.GetAllXamlNamespaces()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "搜尋此所持有的組件<xref href=&quot;System.Xaml.XamlSchemaContext&quot;></xref>並傳回一組命名空間。"
  remarks: "如果它們透過建構或屬性的設定傳入這個方法只會搜尋參考組件。 如果任何組件不建立做為參考組件，這個方法的邏輯會檢查所有已載入的組件，這<xref:System.Xaml.XamlSchemaContext>為作用中。</xref:System.Xaml.XamlSchemaContext>"
  syntax:
    content: public virtual System.Collections.Generic.IEnumerable<string> GetAllXamlNamespaces ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
      description: "命名空間識別項的可列舉集合。 以字串的形式提供這些識別項。"
  overload: System.Xaml.XamlSchemaContext.GetAllXamlNamespaces*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlSchemaContext.GetAllXamlTypes(System.String)
  id: GetAllXamlTypes(System.String)
  parent: System.Xaml.XamlSchemaContext
  langs:
  - csharp
  name: GetAllXamlTypes(String)
  nameWithType: XamlSchemaContext.GetAllXamlTypes(String)
  fullName: System.Xaml.XamlSchemaContext.GetAllXamlTypes(String)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "搜尋此所持有的組件<xref href=&quot;System.Xaml.XamlSchemaContext&quot;></xref>和傳回類型的集合，從指定的 XAML 命名空間。"
  syntax:
    content: public virtual System.Collections.Generic.ICollection<System.Xaml.XamlType> GetAllXamlTypes (string xamlNamespace);
    parameters:
    - id: xamlNamespace
      type: System.String
      description: "傳回類型的 XAML 命名空間。"
    return:
      type: System.Collections.Generic.ICollection{System.Xaml.XamlType}
      description: "XAML 類型的可列舉集合。 每個集合中的 XAML 型別由<xref href=&quot;System.Xaml.XamlType&quot;></xref>物件。"
  overload: System.Xaml.XamlSchemaContext.GetAllXamlTypes*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlSchemaContext.GetPreferredPrefix(System.String)
  id: GetPreferredPrefix(System.String)
  parent: System.Xaml.XamlSchemaContext
  langs:
  - csharp
  name: GetPreferredPrefix(String)
  nameWithType: XamlSchemaContext.GetPreferredPrefix(String)
  fullName: System.Xaml.XamlSchemaContext.GetPreferredPrefix(String)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "取得會回報為取用者使用這些對應指定的 XAML 命名空間時的慣用前置詞的字串。"
  remarks: "最立即的取用者的資訊通常是 XAML 寫入器。 其他間接取用者包含設計工具。       Common language runtime (CLR) 的 XAML 繫結的一部分，您可以指定這項資訊藉由套用<xref:System.Windows.Markup.XmlnsPrefixAttribute>組件層級。</xref:System.Windows.Markup.XmlnsPrefixAttribute>"
  syntax:
    content: public virtual string GetPreferredPrefix (string xmlns);
    parameters:
    - id: xmlns
      type: System.String
      description: "若要取得的慣用前置詞 XAML 命名空間。"
    return:
      type: System.String
      description: "使用這些對應指定之標記的 XAML 命名空間時，取用者應該使用的字串。"
  overload: System.Xaml.XamlSchemaContext.GetPreferredPrefix*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>xmlns</code>為 null。"
  platform:
  - net462
- uid: System.Xaml.XamlSchemaContext.GetValueConverter``1(System.Type,System.Xaml.XamlType)
  id: GetValueConverter``1(System.Type,System.Xaml.XamlType)
  parent: System.Xaml.XamlSchemaContext
  langs:
  - csharp
  name: GetValueConverter(Type,XamlType)
  nameWithType: XamlSchemaContext.GetValueConverter(Type,XamlType)
  fullName: System.Xaml.XamlSchemaContext.GetValueConverter(Type,XamlType)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  syntax:
    content: 'protected System.Xaml.Schema.XamlValueConverter<TConverterBase> GetValueConverter<TConverterBase> (Type converterType, System.Xaml.XamlType targetType) where TConverterBase : class;'
    parameters:
    - id: converterType
      type: System.Type
      description: "即將加入。"
    - id: targetType
      type: System.Xaml.XamlType
      description: "即將加入。"
    return:
      type: System.Xaml.Schema.XamlValueConverter`1
      description: "即將加入。"
  overload: System.Xaml.XamlSchemaContext.GetValueConverter<TConverterBase>*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlSchemaContext.GetXamlDirective(System.String,System.String)
  id: GetXamlDirective(System.String,System.String)
  parent: System.Xaml.XamlSchemaContext
  langs:
  - csharp
  name: GetXamlDirective(String,String)
  nameWithType: XamlSchemaContext.GetXamlDirective(String,String)
  fullName: System.Xaml.XamlSchemaContext.GetXamlDirective(String,String)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "傳回<xref href=&quot;System.Xaml.XamlDirective&quot;></xref>表示指示詞，為 XAML 語言或特定實作的值。"
  remarks: "如果您建立衍生的類別中覆寫這個方法<xref:System.Xaml.XamlDirective>XAML 類型系統的延伸案例的一部分。</xref:System.Xaml.XamlDirective>"
  syntax:
    content: public virtual System.Xaml.XamlDirective GetXamlDirective (string xamlNamespace, string name);
    parameters:
    - id: xamlNamespace
      type: System.String
      description: "XAML 命名空間包含具名指示詞。"
    - id: name
      type: System.String
      description: "若要取得指示詞的名稱。"
    return:
      type: System.Xaml.XamlDirective
      description: "A <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref>物件，代表所要求的指示詞。"
  overload: System.Xaml.XamlSchemaContext.GetXamlDirective*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>xamlNamespace</code>or <code>name</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Xaml.XamlSchemaContext.GetXamlType(System.Type)
  id: GetXamlType(System.Type)
  parent: System.Xaml.XamlSchemaContext
  langs:
  - csharp
  name: GetXamlType(Type)
  nameWithType: XamlSchemaContext.GetXamlType(Type)
  fullName: System.Xaml.XamlSchemaContext.GetXamlType(Type)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "傳回<xref href=&quot;System.Xaml.XamlType&quot;></xref>為基礎的 CLR 型別識別碼。"
  remarks: "這個多載會假設您使用 CLR 的支援類型系統。 如果您未使用的 CLR 型別系統，使用<xref:System.Xaml.XamlSchemaContext.GetXamlType%28System.Xaml.Schema.XamlTypeName%29>.</xref:System.Xaml.XamlSchemaContext.GetXamlType%28System.Xaml.Schema.XamlTypeName%29>"
  syntax:
    content: public virtual System.Xaml.XamlType GetXamlType (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "要取得之類型<xref href=&quot;System.Xaml.XamlType&quot;></xref>的。"
    return:
      type: System.Xaml.XamlType
      description: "<xref href=&quot;System.Xaml.XamlType&quot;> </xref>符合輸入<code> type </code>。"
  overload: System.Xaml.XamlSchemaContext.GetXamlType*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>type</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Xaml.XamlSchemaContext.GetXamlType(System.Xaml.Schema.XamlTypeName)
  id: GetXamlType(System.Xaml.Schema.XamlTypeName)
  parent: System.Xaml.XamlSchemaContext
  langs:
  - csharp
  name: GetXamlType(XamlTypeName)
  nameWithType: XamlSchemaContext.GetXamlType(XamlTypeName)
  fullName: System.Xaml.XamlSchemaContext.GetXamlType(XamlTypeName)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "傳回<xref href=&quot;System.Xaml.XamlType&quot;></xref>為基礎的 XAML 系統類型名稱。"
  syntax:
    content: public System.Xaml.XamlType GetXamlType (System.Xaml.Schema.XamlTypeName xamlTypeName);
    parameters:
    - id: xamlTypeName
      type: System.Xaml.Schema.XamlTypeName
      description: "若要取得的 XAML 型別名稱<xref href=&quot;System.Xaml.XamlType&quot;></xref>的。"
    return:
      type: System.Xaml.XamlType
      description: "<xref href=&quot;System.Xaml.XamlType&quot;> </xref>符合輸入<code> xamlTypeName </code>。"
  overload: System.Xaml.XamlSchemaContext.GetXamlType*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A component of <code>xamlTypeName</code> (<>*> or <>*>) is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>xamlTypeName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Xaml.XamlSchemaContext.GetXamlType(System.String,System.String,System.Xaml.XamlType[])
  id: GetXamlType(System.String,System.String,System.Xaml.XamlType[])
  parent: System.Xaml.XamlSchemaContext
  langs:
  - csharp
  name: GetXamlType(String,String,XamlType[])
  nameWithType: XamlSchemaContext.GetXamlType(String,String,XamlType[])
  fullName: System.Xaml.XamlSchemaContext.GetXamlType(String,String,XamlType[])
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "傳回<xref href=&quot;System.Xaml.XamlType&quot;> </xref> ，根據 XAML 命名空間和類型名稱的字串。 此簽章可以指定的型別引數的情況，所需的類型是泛型型別。"
  syntax:
    content: protected virtual System.Xaml.XamlType GetXamlType (string xamlNamespace, string name, System.Xaml.XamlType[] typeArguments);
    parameters:
    - id: xamlNamespace
      type: System.String
      description: "XAML 命名空間，其中包含所需的類型。"
    - id: name
      type: System.String
      description: "所需的類型字串名稱。"
    - id: typeArguments
      type: System.Xaml.XamlType[]
      description: "泛型型別初始化型別引數。"
    return:
      type: System.Xaml.XamlType
      description: "<xref href=&quot;System.Xaml.XamlType&quot;> </xref>符合輸入的準則。"
  overload: System.Xaml.XamlSchemaContext.GetXamlType*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlSchemaContext.OnAssemblyResolve(System.String)
  id: OnAssemblyResolve(System.String)
  parent: System.Xaml.XamlSchemaContext
  langs:
  - csharp
  name: OnAssemblyResolve(String)
  nameWithType: XamlSchemaContext.OnAssemblyResolve(String)
  fullName: System.Xaml.XamlSchemaContext.OnAssemblyResolve(String)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "作業會使用此結構描述內容來解析，才能解決它所包含的 XAML 命名空間的組件時呼叫。"
  remarks: "根據基礎的組件解析技術，這是內部的 API，有不同的字串形式的組件名稱的內建容錯<xref:System.Reflection.AssemblyName>建構行為。</xref:System.Reflection.AssemblyName>       此 API 的目的是啟用第一個機會解析針對已知集組件，例如，針對參考組件而不是針對全域組件快取。 如果已填入的參考組件清單的預設實作可以存取的已知的參考組件。"
  syntax:
    content: protected virtual System.Reflection.Assembly OnAssemblyResolve (string assemblyName);
    parameters:
    - id: assemblyName
      type: System.String
      description: "要載入的組件名稱。 請參閱 < 備註 >。"
    return:
      type: System.Reflection.Assembly
      description: "解析的組件。"
  overload: System.Xaml.XamlSchemaContext.OnAssemblyResolve*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlSchemaContext.ReferenceAssemblies
  id: ReferenceAssemblies
  parent: System.Xaml.XamlSchemaContext
  langs:
  - csharp
  name: ReferenceAssemblies
  nameWithType: XamlSchemaContext.ReferenceAssemblies
  fullName: System.Xaml.XamlSchemaContext.ReferenceAssemblies
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "取得可列舉集合的 XAML 結構描述內容的參考組件。"
  syntax:
    content: public System.Collections.Generic.IList<System.Reflection.Assembly> ReferenceAssemblies { get; }
    return:
      type: System.Collections.Generic.IList{System.Reflection.Assembly}
      description: "結構描述內容的參考組件的可列舉集合。 每個組件資訊項目由指定<xref:System.Reflection.Assembly>值。</xref:System.Reflection.Assembly>"
  overload: System.Xaml.XamlSchemaContext.ReferenceAssemblies*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity
  id: SupportMarkupExtensionsWithDuplicateArity
  parent: System.Xaml.XamlSchemaContext
  langs:
  - csharp
  name: SupportMarkupExtensionsWithDuplicateArity
  nameWithType: XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity
  fullName: System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "取得指定的 XAML 結構描述和其內容是否支援有兩個建構函式相同的引數數目 （輸入參數數目） 的標記延伸的值。"
  remarks: "這個屬性會傳回<xref:System.Xaml.XamlSchemaContextSettings.SupportMarkupExtensionsWithDuplicateArity%2A?displayProperty=fullName>所建立的設定值<xref:System.Xaml.XamlSchemaContext.%23ctor%28System.Xaml.XamlSchemaContextSettings%29>建構函式簽章。</xref:System.Xaml.XamlSchemaContext.%23ctor%28System.Xaml.XamlSchemaContextSettings%29> </xref:System.Xaml.XamlSchemaContextSettings.SupportMarkupExtensionsWithDuplicateArity%2A?displayProperty=fullName> 如果其他的簽章可用來建構或<xref:System.Xaml.XamlSchemaContextSettings.SupportMarkupExtensionsWithDuplicateArity%2A?displayProperty=fullName>不特別設`true`，這個屬性的值是`false`。</xref:System.Xaml.XamlSchemaContextSettings.SupportMarkupExtensionsWithDuplicateArity%2A?displayProperty=fullName>       XAML 規格 [MS-XAML]，6.6.7.2 節，特別是無法解決重複 arity 的標記延伸。 這是因為不論在標記延伸實作中可能存在的重複 arity 的標記延伸的 XAML 資訊項目形成等同。 標記延伸的實際叫用及其`ProvideValue`公開重複 arity 相關聯的任何問題。 處理重複 arity 行為因此為未定義，且會維持到每個實作的 XAML 結構描述內容和 XAML 寫入器整合。 預設 XAML 結構描述內容的.NET Framework XAML 服務作業實作不支援重複的引數數目。處理具有基礎重複 arity 的標記延伸使用方式時，各種不同的.NET Framework XAML 服務 Api 將會擲回例外狀況。       如需定義標記延伸的詳細資訊，請參閱[標記延伸 XAML 概觀](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public bool SupportMarkupExtensionsWithDuplicateArity { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果結構描述內容允許有重複 arity; 的標記延伸否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlSchemaContext.TryGetCompatibleXamlNamespace(System.String,System.String@)
  id: TryGetCompatibleXamlNamespace(System.String,System.String@)
  parent: System.Xaml.XamlSchemaContext
  langs:
  - csharp
  name: TryGetCompatibleXamlNamespace(String,String)
  nameWithType: XamlSchemaContext.TryGetCompatibleXamlNamespace(String,String)
  fullName: System.Xaml.XamlSchemaContext.TryGetCompatibleXamlNamespace(String,String)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "傳回成功或失敗的要求相容的 XAML 命名空間。 成功的要求會報告該 XAML 命名空間，做為 out 參數。"
  remarks: "就內部而言，這個方法會使用下列搜尋順序︰ 1。  已透過先前的查詢填入內部實作的相容性字典。      2.  <xref:System.Windows.Markup.XmlnsCompatibleWithAttribute>參數評估。</xref:System.Windows.Markup.XmlnsCompatibleWithAttribute>       如果不找到任何其他相容的命名空間，這個方法會傳回`false`、`compatibleNamespace`參數輸出可能會有相同的值`xamlNamespace`輸入。"
  syntax:
    content: public virtual bool TryGetCompatibleXamlNamespace (string xamlNamespace, out string compatibleNamespace);
    parameters:
    - id: xamlNamespace
      type: System.String
      description: "<xref uid=&quot;langword_csharp_xmlns&quot; name=&quot;xmlns&quot; href=&quot;&quot;> </xref> XAML 命名空間是要檢查相容的結果字串。"
    - id: compatibleNamespace
      type: System.String
      description: "此方法傳回時， <xref uid=&quot;langword_csharp_xmlns&quot; name=&quot;xmlns&quot; href=&quot;&quot;> </xref>相容的 XAML 命名空間要求的字串。 這可能是等於`xamlNamespace`如果該方法會傳回<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<code> compatibleNamespace </code>包含可用的結果，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Xaml.XamlSchemaContext.TryGetCompatibleXamlNamespace*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>xamlNamespace</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Xaml.XamlSchemaContext.#ctor
  parent: System.Xaml.XamlSchemaContext
  isExternal: false
  name: XamlSchemaContext()
  nameWithType: XamlSchemaContext.XamlSchemaContext()
  fullName: System.Xaml.XamlSchemaContext.XamlSchemaContext()
- uid: System.Xaml.XamlSchemaContext.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})
  parent: System.Xaml.XamlSchemaContext
  isExternal: false
  name: XamlSchemaContext(IEnumerable<Assembly>)
  nameWithType: XamlSchemaContext.XamlSchemaContext(IEnumerable<Assembly>)
  fullName: System.Xaml.XamlSchemaContext.XamlSchemaContext(IEnumerable<Assembly>)
- uid: System.Collections.Generic.IEnumerable{System.Reflection.Assembly}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<Assembly>
  nameWithType: IEnumerable<Assembly>
  fullName: System.Collections.Generic.IEnumerable<System.Reflection.Assembly>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Reflection.Assembly>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Reflection.Assembly
    name: Assembly
    nameWithType: Assembly
    fullName: Assembly
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.XamlSchemaContext.#ctor(System.Xaml.XamlSchemaContextSettings)
  parent: System.Xaml.XamlSchemaContext
  isExternal: false
  name: XamlSchemaContext(XamlSchemaContextSettings)
  nameWithType: XamlSchemaContext.XamlSchemaContext(XamlSchemaContextSettings)
  fullName: System.Xaml.XamlSchemaContext.XamlSchemaContext(XamlSchemaContextSettings)
- uid: System.Xaml.XamlSchemaContextSettings
  parent: System.Xaml
  isExternal: false
  name: XamlSchemaContextSettings
  nameWithType: XamlSchemaContextSettings
  fullName: System.Xaml.XamlSchemaContextSettings
- uid: System.Xaml.XamlSchemaContext.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly},System.Xaml.XamlSchemaContextSettings)
  parent: System.Xaml.XamlSchemaContext
  isExternal: false
  name: XamlSchemaContext(IEnumerable<Assembly>,XamlSchemaContextSettings)
  nameWithType: XamlSchemaContext.XamlSchemaContext(IEnumerable<Assembly>,XamlSchemaContextSettings)
  fullName: System.Xaml.XamlSchemaContext.XamlSchemaContext(IEnumerable<Assembly>,XamlSchemaContextSettings)
- uid: System.Xaml.XamlSchemaContext.Finalize
  parent: System.Xaml.XamlSchemaContext
  isExternal: false
  name: Finalize()
  nameWithType: XamlSchemaContext.Finalize()
  fullName: System.Xaml.XamlSchemaContext.Finalize()
- uid: System.Xaml.XamlSchemaContext.FullyQualifyAssemblyNamesInClrNamespaces
  parent: System.Xaml.XamlSchemaContext
  isExternal: false
  name: FullyQualifyAssemblyNamesInClrNamespaces
  nameWithType: XamlSchemaContext.FullyQualifyAssemblyNamesInClrNamespaces
  fullName: System.Xaml.XamlSchemaContext.FullyQualifyAssemblyNamesInClrNamespaces
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xaml.XamlSchemaContext.GetAllXamlNamespaces
  parent: System.Xaml.XamlSchemaContext
  isExternal: false
  name: GetAllXamlNamespaces()
  nameWithType: XamlSchemaContext.GetAllXamlNamespaces()
  fullName: System.Xaml.XamlSchemaContext.GetAllXamlNamespaces()
- uid: System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.XamlSchemaContext.GetAllXamlTypes(System.String)
  parent: System.Xaml.XamlSchemaContext
  isExternal: false
  name: GetAllXamlTypes(String)
  nameWithType: XamlSchemaContext.GetAllXamlTypes(String)
  fullName: System.Xaml.XamlSchemaContext.GetAllXamlTypes(String)
- uid: System.Collections.Generic.ICollection{System.Xaml.XamlType}
  parent: System.Collections.Generic
  isExternal: true
  name: ICollection<XamlType>
  nameWithType: ICollection<XamlType>
  fullName: System.Collections.Generic.ICollection<System.Xaml.XamlType>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection<System.Xaml.XamlType>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xaml.XamlType
    name: XamlType
    nameWithType: XamlType
    fullName: XamlType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xaml.XamlSchemaContext.GetPreferredPrefix(System.String)
  parent: System.Xaml.XamlSchemaContext
  isExternal: false
  name: GetPreferredPrefix(String)
  nameWithType: XamlSchemaContext.GetPreferredPrefix(String)
  fullName: System.Xaml.XamlSchemaContext.GetPreferredPrefix(String)
- uid: System.Xaml.XamlSchemaContext.GetValueConverter``1(System.Type,System.Xaml.XamlType)
  parent: System.Xaml.XamlSchemaContext
  isExternal: false
  name: GetValueConverter(Type,XamlType)
  nameWithType: XamlSchemaContext.GetValueConverter(Type,XamlType)
  fullName: System.Xaml.XamlSchemaContext.GetValueConverter(Type,XamlType)
- uid: System.Xaml.Schema.XamlValueConverter`1
  parent: System.Xaml.Schema
  isExternal: false
  name: XamlValueConverter<TConverterBase>
  nameWithType: XamlValueConverter<TConverterBase>
  fullName: System.Xaml.Schema.XamlValueConverter<TConverterBase>
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Xaml.XamlType
  parent: System.Xaml
  isExternal: false
  name: XamlType
  nameWithType: XamlType
  fullName: System.Xaml.XamlType
- uid: System.Xaml.XamlSchemaContext.GetXamlDirective(System.String,System.String)
  parent: System.Xaml.XamlSchemaContext
  isExternal: false
  name: GetXamlDirective(String,String)
  nameWithType: XamlSchemaContext.GetXamlDirective(String,String)
  fullName: System.Xaml.XamlSchemaContext.GetXamlDirective(String,String)
- uid: System.Xaml.XamlDirective
  parent: System.Xaml
  isExternal: false
  name: XamlDirective
  nameWithType: XamlDirective
  fullName: System.Xaml.XamlDirective
- uid: System.Xaml.XamlSchemaContext.GetXamlType(System.Type)
  parent: System.Xaml.XamlSchemaContext
  isExternal: false
  name: GetXamlType(Type)
  nameWithType: XamlSchemaContext.GetXamlType(Type)
  fullName: System.Xaml.XamlSchemaContext.GetXamlType(Type)
- uid: System.Xaml.XamlSchemaContext.GetXamlType(System.Xaml.Schema.XamlTypeName)
  parent: System.Xaml.XamlSchemaContext
  isExternal: false
  name: GetXamlType(XamlTypeName)
  nameWithType: XamlSchemaContext.GetXamlType(XamlTypeName)
  fullName: System.Xaml.XamlSchemaContext.GetXamlType(XamlTypeName)
- uid: System.Xaml.Schema.XamlTypeName
  parent: System.Xaml.Schema
  isExternal: false
  name: XamlTypeName
  nameWithType: XamlTypeName
  fullName: System.Xaml.Schema.XamlTypeName
- uid: System.Xaml.XamlSchemaContext.GetXamlType(System.String,System.String,System.Xaml.XamlType[])
  parent: System.Xaml.XamlSchemaContext
  isExternal: false
  name: GetXamlType(String,String,XamlType[])
  nameWithType: XamlSchemaContext.GetXamlType(String,String,XamlType[])
  fullName: System.Xaml.XamlSchemaContext.GetXamlType(String,String,XamlType[])
- uid: System.Xaml.XamlType[]
  parent: System.Xaml
  isExternal: false
  name: XamlType
  nameWithType: XamlType
  fullName: System.Xaml.XamlType[]
  spec.csharp:
  - uid: System.Xaml.XamlType
    name: XamlType
    nameWithType: XamlType
    fullName: XamlType[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Xaml.XamlSchemaContext.OnAssemblyResolve(System.String)
  parent: System.Xaml.XamlSchemaContext
  isExternal: false
  name: OnAssemblyResolve(String)
  nameWithType: XamlSchemaContext.OnAssemblyResolve(String)
  fullName: System.Xaml.XamlSchemaContext.OnAssemblyResolve(String)
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: true
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.Xaml.XamlSchemaContext.ReferenceAssemblies
  parent: System.Xaml.XamlSchemaContext
  isExternal: false
  name: ReferenceAssemblies
  nameWithType: XamlSchemaContext.ReferenceAssemblies
  fullName: System.Xaml.XamlSchemaContext.ReferenceAssemblies
- uid: System.Collections.Generic.IList{System.Reflection.Assembly}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<Assembly>
  nameWithType: IList<Assembly>
  fullName: System.Collections.Generic.IList<System.Reflection.Assembly>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.Reflection.Assembly>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Reflection.Assembly
    name: Assembly
    nameWithType: Assembly
    fullName: Assembly
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity
  parent: System.Xaml.XamlSchemaContext
  isExternal: false
  name: SupportMarkupExtensionsWithDuplicateArity
  nameWithType: XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity
  fullName: System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity
- uid: System.Xaml.XamlSchemaContext.TryGetCompatibleXamlNamespace(System.String,System.String@)
  parent: System.Xaml.XamlSchemaContext
  isExternal: false
  name: TryGetCompatibleXamlNamespace(String,String)
  nameWithType: XamlSchemaContext.TryGetCompatibleXamlNamespace(String,String)
  fullName: System.Xaml.XamlSchemaContext.TryGetCompatibleXamlNamespace(String,String)
- uid: System.Xaml.XamlSchemaContext.#ctor*
  parent: System.Xaml.XamlSchemaContext
  isExternal: false
  name: XamlSchemaContext
  nameWithType: XamlSchemaContext.XamlSchemaContext
- uid: System.Xaml.XamlSchemaContext.Finalize*
  parent: System.Xaml.XamlSchemaContext
  isExternal: false
  name: Finalize
  nameWithType: XamlSchemaContext.Finalize
- uid: System.Xaml.XamlSchemaContext.FullyQualifyAssemblyNamesInClrNamespaces*
  parent: System.Xaml.XamlSchemaContext
  isExternal: false
  name: FullyQualifyAssemblyNamesInClrNamespaces
  nameWithType: XamlSchemaContext.FullyQualifyAssemblyNamesInClrNamespaces
- uid: System.Xaml.XamlSchemaContext.GetAllXamlNamespaces*
  parent: System.Xaml.XamlSchemaContext
  isExternal: false
  name: GetAllXamlNamespaces
  nameWithType: XamlSchemaContext.GetAllXamlNamespaces
- uid: System.Xaml.XamlSchemaContext.GetAllXamlTypes*
  parent: System.Xaml.XamlSchemaContext
  isExternal: false
  name: GetAllXamlTypes
  nameWithType: XamlSchemaContext.GetAllXamlTypes
- uid: System.Xaml.XamlSchemaContext.GetPreferredPrefix*
  parent: System.Xaml.XamlSchemaContext
  isExternal: false
  name: GetPreferredPrefix
  nameWithType: XamlSchemaContext.GetPreferredPrefix
- uid: System.Xaml.XamlSchemaContext.GetValueConverter<TConverterBase>*
  parent: System.Xaml.XamlSchemaContext
  isExternal: false
  name: GetValueConverter<TConverterBase>
  nameWithType: XamlSchemaContext.GetValueConverter<TConverterBase>
- uid: System.Xaml.XamlSchemaContext.GetXamlDirective*
  parent: System.Xaml.XamlSchemaContext
  isExternal: false
  name: GetXamlDirective
  nameWithType: XamlSchemaContext.GetXamlDirective
- uid: System.Xaml.XamlSchemaContext.GetXamlType*
  parent: System.Xaml.XamlSchemaContext
  isExternal: false
  name: GetXamlType
  nameWithType: XamlSchemaContext.GetXamlType
- uid: System.Xaml.XamlSchemaContext.OnAssemblyResolve*
  parent: System.Xaml.XamlSchemaContext
  isExternal: false
  name: OnAssemblyResolve
  nameWithType: XamlSchemaContext.OnAssemblyResolve
- uid: System.Xaml.XamlSchemaContext.ReferenceAssemblies*
  parent: System.Xaml.XamlSchemaContext
  isExternal: false
  name: ReferenceAssemblies
  nameWithType: XamlSchemaContext.ReferenceAssemblies
- uid: System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity*
  parent: System.Xaml.XamlSchemaContext
  isExternal: false
  name: SupportMarkupExtensionsWithDuplicateArity
  nameWithType: XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity
- uid: System.Xaml.XamlSchemaContext.TryGetCompatibleXamlNamespace*
  parent: System.Xaml.XamlSchemaContext
  isExternal: false
  name: TryGetCompatibleXamlNamespace
  nameWithType: XamlSchemaContext.TryGetCompatibleXamlNamespace
