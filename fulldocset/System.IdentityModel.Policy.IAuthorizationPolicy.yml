### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Policy.IAuthorizationPolicy
  id: IAuthorizationPolicy
  children:
  - System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate(System.IdentityModel.Policy.EvaluationContext,System.Object@)
  - System.IdentityModel.Policy.IAuthorizationPolicy.Issuer
  langs:
  - csharp
  name: IAuthorizationPolicy
  nameWithType: IAuthorizationPolicy
  fullName: System.IdentityModel.Policy.IAuthorizationPolicy
  type: Interface
  summary: "定義一組用於授權使用者，指定一組宣告規則。"
  remarks: "實作以新增或將一組宣告到另一個對應的 IAuthorizationPolicy 介面。 授權原則會檢查一組宣告，並新增額外的宣告，根據目前的資料集。 例如，授權原則可能評估含有生日的宣告和加入判斷提示使用者是超過 21 歲的宣告並新增 Over21 宣告至<xref:System.IdentityModel.Policy.EvaluationContext>。</xref:System.IdentityModel.Policy.EvaluationContext>       實作 IAuthorizationPolicy 介面的類別不會授權使用者，但它們可讓<xref:System.ServiceModel.ServiceAuthorizationManager>類別來進行存取。</xref:System.ServiceModel.ServiceAuthorizationManager> <xref:System.ServiceModel.ServiceAuthorizationManager>呼叫<xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A>作用中的每個授權原則的方法。</xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> </xref:System.ServiceModel.ServiceAuthorizationManager> <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A>方法會判斷是否應該為目前的內容會根據使用者新增額外宣告。</xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> 授權原則的<xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A>方法可能會呼叫多次，如同宣告會新增至<xref:System.IdentityModel.Policy.EvaluationContext>由其他授權原則。</xref:System.IdentityModel.Policy.EvaluationContext> </xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> 完成所有授權原則生效，<xref:System.ServiceModel.ServiceAuthorizationManager>類別進行最後一組宣告為基礎的授權決策。</xref:System.ServiceModel.ServiceAuthorizationManager> <xref:System.ServiceModel.ServiceAuthorizationManager>類別會建立<xref:System.IdentityModel.Policy.AuthorizationContext>，其中包含反映這些授權決策的不可變宣告集。</xref:System.IdentityModel.Policy.AuthorizationContext> </xref:System.ServiceModel.ServiceAuthorizationManager>"
  example:
  - >-
    [!code-cs[C_IAuthorizationPolicy#1](~/add/codesnippet/csharp/t-system.identitymodel.p_1_1.cs)]
     [!code-vb[C_IAuthorizationPolicy#1](~/add/codesnippet/visualbasic/t-system.identitymodel.p_1_1.vb)]
  syntax:
    content: 'public interface IAuthorizationPolicy : System.IdentityModel.Policy.IAuthorizationComponent'
  implements:
  - System.IdentityModel.Policy.IAuthorizationComponent
  platform:
  - net462
- uid: System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate(System.IdentityModel.Policy.EvaluationContext,System.Object@)
  id: Evaluate(System.IdentityModel.Policy.EvaluationContext,System.Object@)
  parent: System.IdentityModel.Policy.IAuthorizationPolicy
  langs:
  - csharp
  name: Evaluate(EvaluationContext,Object)
  nameWithType: IAuthorizationPolicy.Evaluate(EvaluationContext,Object)
  fullName: System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate(EvaluationContext,Object)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Policy
  summary: "評估使用者是否符合此授權原則的需求。"
  remarks: "> [!NOTE]> 的實作器<xref:System.IdentityModel.Policy.IAuthorizationPolicy>介面會預期由不同的執行緒呼叫多次評估方法。</xref:System.IdentityModel.Policy.IAuthorizationPolicy>       實作器<xref:System.IdentityModel.Policy.IAuthorizationPolicy>介面可以使用`state`追蹤 Evaluate 方法呼叫之間的狀態參數。</xref:System.IdentityModel.Policy.IAuthorizationPolicy> 如果給定 Evaluate 方法呼叫內設定的狀態物件，則相同的物件執行個體傳遞至每個後續的呼叫，以評估中的方法在目前評估流程。"
  example:
  - >-
    [!code-cs[C_IAuthorizationPolicy#2](~/add/codesnippet/csharp/b64090c9-1ef7-4f2c-956c-_1.cs)]
     [!code-vb[C_IAuthorizationPolicy#2](~/add/codesnippet/visualbasic/b64090c9-1ef7-4f2c-956c-_1.vb)]
  syntax:
    content: public bool Evaluate (System.IdentityModel.Policy.EvaluationContext evaluationContext, ref object state);
    parameters:
    - id: evaluationContext
      type: System.IdentityModel.Policy.EvaluationContext
      description: "<xref href=&quot;System.IdentityModel.Policy.EvaluationContext&quot;> </xref>包含授權原則評估之宣告集。"
    - id: state
      type: System.Object
      description: "A <xref:System.Object>，表示此授權原則的自訂狀態的參考所傳遞。</xref:System.Object>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>如果其他授權原則，以新增額外宣告，如果必須呼叫此授權原則評估方法<code> evaluationContext </code>，否則<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>需要任何額外的評估此授權原則的狀態。"
  overload: System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Policy.IAuthorizationPolicy.Issuer
  id: Issuer
  parent: System.IdentityModel.Policy.IAuthorizationPolicy
  langs:
  - csharp
  name: Issuer
  nameWithType: IAuthorizationPolicy.Issuer
  fullName: System.IdentityModel.Policy.IAuthorizationPolicy.Issuer
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Policy
  summary: "取得表示授權原則的簽發者的宣告集。"
  syntax:
    content: public System.IdentityModel.Claims.ClaimSet Issuer { get; }
    return:
      type: System.IdentityModel.Claims.ClaimSet
      description: "A <xref href=&quot;System.IdentityModel.Claims.ClaimSet&quot;> </xref>表示授權原則的簽發者。"
  overload: System.IdentityModel.Policy.IAuthorizationPolicy.Issuer*
  exceptions: []
  platform:
  - net462
references:
- uid: System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate(System.IdentityModel.Policy.EvaluationContext,System.Object@)
  parent: System.IdentityModel.Policy.IAuthorizationPolicy
  isExternal: false
  name: Evaluate(EvaluationContext,Object)
  nameWithType: IAuthorizationPolicy.Evaluate(EvaluationContext,Object)
  fullName: System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate(EvaluationContext,Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.Policy.EvaluationContext
  parent: System.IdentityModel.Policy
  isExternal: false
  name: EvaluationContext
  nameWithType: EvaluationContext
  fullName: System.IdentityModel.Policy.EvaluationContext
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IdentityModel.Policy.IAuthorizationPolicy.Issuer
  parent: System.IdentityModel.Policy.IAuthorizationPolicy
  isExternal: false
  name: Issuer
  nameWithType: IAuthorizationPolicy.Issuer
  fullName: System.IdentityModel.Policy.IAuthorizationPolicy.Issuer
- uid: System.IdentityModel.Claims.ClaimSet
  parent: System.IdentityModel.Claims
  isExternal: false
  name: ClaimSet
  nameWithType: ClaimSet
  fullName: System.IdentityModel.Claims.ClaimSet
- uid: System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate*
  parent: System.IdentityModel.Policy.IAuthorizationPolicy
  isExternal: false
  name: Evaluate
  nameWithType: IAuthorizationPolicy.Evaluate
- uid: System.IdentityModel.Policy.IAuthorizationPolicy.Issuer*
  parent: System.IdentityModel.Policy.IAuthorizationPolicy
  isExternal: false
  name: Issuer
  nameWithType: IAuthorizationPolicy.Issuer
