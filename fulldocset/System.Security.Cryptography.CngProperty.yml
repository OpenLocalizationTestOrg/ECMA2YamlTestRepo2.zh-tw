### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.CngProperty
  id: CngProperty
  children:
  - System.Security.Cryptography.CngProperty.#ctor(System.String,System.Byte[],System.Security.Cryptography.CngPropertyOptions)
  - System.Security.Cryptography.CngProperty.Equals(System.Object)
  - System.Security.Cryptography.CngProperty.Equals(System.Security.Cryptography.CngProperty)
  - System.Security.Cryptography.CngProperty.GetHashCode
  - System.Security.Cryptography.CngProperty.GetValue
  - System.Security.Cryptography.CngProperty.Name
  - System.Security.Cryptography.CngProperty.op_Equality(System.Security.Cryptography.CngProperty,System.Security.Cryptography.CngProperty)
  - System.Security.Cryptography.CngProperty.op_Inequality(System.Security.Cryptography.CngProperty,System.Security.Cryptography.CngProperty)
  - System.Security.Cryptography.CngProperty.Options
  langs:
  - csharp
  name: CngProperty
  nameWithType: CngProperty
  fullName: System.Security.Cryptography.CngProperty
  type: Struct
  summary: "封裝 Cryptography Next Generation (CNG) 金鑰或提供者的屬性。"
  remarks: "這個類別會封裝的屬性名稱 （字串） 的值 （位元組陣列）<xref:System.Security.Cryptography.CngPropertyOptions>旗標，存取子屬性，並比較和雜湊函式。</xref:System.Security.Cryptography.CngPropertyOptions>       這個類別會搭配<xref:System.Security.Cryptography.CngKey.SetProperty%2A>和<xref:System.Security.Cryptography.CngKey.GetProperty%2A>方法。</xref:System.Security.Cryptography.CngKey.GetProperty%2A> </xref:System.Security.Cryptography.CngKey.SetProperty%2A>"
  syntax:
    content: 'public struct CngProperty : IEquatable<System.Security.Cryptography.CngProperty>'
  inheritance:
  - System.ValueType
  implements:
  - System.IEquatable<System.Security.Cryptography.CngProperty>
  platform:
  - net462
- uid: System.Security.Cryptography.CngProperty.#ctor(System.String,System.Byte[],System.Security.Cryptography.CngPropertyOptions)
  id: '#ctor(System.String,System.Byte[],System.Security.Cryptography.CngPropertyOptions)'
  parent: System.Security.Cryptography.CngProperty
  langs:
  - csharp
  name: CngProperty(String,Byte[],CngPropertyOptions)
  nameWithType: CngProperty.CngProperty(String,Byte[],CngPropertyOptions)
  fullName: System.Security.Cryptography.CngProperty.CngProperty(String,Byte[],CngPropertyOptions)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "初始化的新執行個體<xref href=&quot;System.Security.Cryptography.CngProperty&quot;></xref>類別。"
  remarks: "儲存與一組特定的屬性<xref:System.Security.Cryptography.CngPropertyOptions>旗標是在抓取，需要相同的旗標集。</xref:System.Security.Cryptography.CngPropertyOptions>"
  syntax:
    content: public CngProperty (string name, byte[] value, System.Security.Cryptography.CngPropertyOptions options);
    parameters:
    - id: name
      type: System.String
      description: "要初始化的屬性名稱。"
    - id: value
      type: System.Byte[]
      description: "要初始化的屬性值。"
    - id: options
      type: System.Security.Cryptography.CngPropertyOptions
      description: "指定屬性的儲存方式的列舉值的位元組合。"
  overload: System.Security.Cryptography.CngProperty.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.CngProperty.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Security.Cryptography.CngProperty
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: CngProperty.Equals(Object)
  fullName: System.Security.Cryptography.CngProperty.Equals(Object)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "比較指定的物件與目前<xref href=&quot;System.Security.Cryptography.CngProperty&quot;></xref>物件。"
  remarks: "<xref:System.Security.Cryptography.CngProperty>物件視為相等，如果其名稱、 值和選項相等的。</xref:System.Security.Cryptography.CngProperty> 名稱的比較會區分大小寫的方式執行。"
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "要比較目前物件<xref href=&quot;System.Security.Cryptography.CngProperty&quot;></xref>物件。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<code> obj </code>參數是<xref href=&quot;System.Security.Cryptography.CngProperty&quot;></xref>物件，指定相同的屬性與目前的物件; 否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Security.Cryptography.CngProperty.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngProperty.Equals(System.Security.Cryptography.CngProperty)
  id: Equals(System.Security.Cryptography.CngProperty)
  parent: System.Security.Cryptography.CngProperty
  langs:
  - csharp
  name: Equals(CngProperty)
  nameWithType: CngProperty.Equals(CngProperty)
  fullName: System.Security.Cryptography.CngProperty.Equals(CngProperty)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "比較指定<xref href=&quot;System.Security.Cryptography.CngProperty&quot;></xref>物件與目前<xref href=&quot;System.Security.Cryptography.CngProperty&quot;></xref>物件。"
  remarks: "<xref:System.Security.Cryptography.CngProperty>物件視為相等，如果其名稱、 值和選項相等的。</xref:System.Security.Cryptography.CngProperty> 名稱的比較會區分大小寫的方式執行。"
  syntax:
    content: public bool Equals (System.Security.Cryptography.CngProperty other);
    parameters:
    - id: other
      type: System.Security.Cryptography.CngProperty
      description: "要比較目前物件<xref href=&quot;System.Security.Cryptography.CngProperty&quot;></xref>物件。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<code> other </code>參數表示相同的屬性與目前的物件; 否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Security.Cryptography.CngProperty.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngProperty.GetHashCode
  id: GetHashCode
  parent: System.Security.Cryptography.CngProperty
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: CngProperty.GetHashCode()
  fullName: System.Security.Cryptography.CngProperty.GetHashCode()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "產生目前的雜湊值<xref href=&quot;System.Security.Cryptography.CngProperty&quot;></xref>物件。"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "目前的雜湊值<xref href=&quot;System.Security.Cryptography.CngProperty&quot;></xref>物件。"
  overload: System.Security.Cryptography.CngProperty.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngProperty.GetValue
  id: GetValue
  parent: System.Security.Cryptography.CngProperty
  langs:
  - csharp
  name: GetValue()
  nameWithType: CngProperty.GetValue()
  fullName: System.Security.Cryptography.CngProperty.GetValue()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "取得屬性值的目前<xref href=&quot;System.Security.Cryptography.CngProperty&quot;></xref>指定物件。"
  syntax:
    content: public byte[] GetValue ();
    parameters: []
    return:
      type: System.Byte[]
      description: "陣列，代表儲存在屬性的值。"
  overload: System.Security.Cryptography.CngProperty.GetValue*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngProperty.Name
  id: Name
  parent: System.Security.Cryptography.CngProperty
  langs:
  - csharp
  name: Name
  nameWithType: CngProperty.Name
  fullName: System.Security.Cryptography.CngProperty.Name
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "取得屬性名稱目前<xref href=&quot;System.Security.Cryptography.CngProperty&quot;></xref>指定物件。"
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "設定在目前的屬性名稱<xref href=&quot;System.Security.Cryptography.CngProperty&quot;></xref>物件。"
  overload: System.Security.Cryptography.CngProperty.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngProperty.op_Equality(System.Security.Cryptography.CngProperty,System.Security.Cryptography.CngProperty)
  id: op_Equality(System.Security.Cryptography.CngProperty,System.Security.Cryptography.CngProperty)
  parent: System.Security.Cryptography.CngProperty
  langs:
  - csharp
  name: op_Equality(CngProperty,CngProperty)
  nameWithType: CngProperty.op_Equality(CngProperty,CngProperty)
  fullName: System.Security.Cryptography.CngProperty.op_Equality(CngProperty,CngProperty)
  type: Operator
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "判斷兩個<xref href=&quot;System.Security.Cryptography.CngProperty&quot;></xref>物件指定相同的屬性名稱、 值和選項。"
  remarks: "<xref:System.Security.Cryptography.CngProperty>物件視為相等，如果其名稱、 值和選項相等的。</xref:System.Security.Cryptography.CngProperty> 名稱的比較會區分大小寫的方式執行。"
  syntax:
    content: public static bool op_Equality (System.Security.Cryptography.CngProperty left, System.Security.Cryptography.CngProperty right);
    parameters:
    - id: left
      type: System.Security.Cryptography.CngProperty
      description: "物件，指定 Cryptography Next Generation (CNG) 金鑰或提供者的屬性。"
    - id: right
      type: System.Security.Cryptography.CngProperty
      description: "要比較的物件所識別的第二個物件`left`參數。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果兩個物件指定相同的屬性。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Security.Cryptography.CngProperty.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngProperty.op_Inequality(System.Security.Cryptography.CngProperty,System.Security.Cryptography.CngProperty)
  id: op_Inequality(System.Security.Cryptography.CngProperty,System.Security.Cryptography.CngProperty)
  parent: System.Security.Cryptography.CngProperty
  langs:
  - csharp
  name: op_Inequality(CngProperty,CngProperty)
  nameWithType: CngProperty.op_Inequality(CngProperty,CngProperty)
  fullName: System.Security.Cryptography.CngProperty.op_Inequality(CngProperty,CngProperty)
  type: Operator
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "判斷兩個<xref href=&quot;System.Security.Cryptography.CngProperty&quot;></xref>物件未指定相同的屬性名稱、 值和選項。"
  remarks: "<xref:System.Security.Cryptography.CngProperty>物件視為相等，如果其名稱、 值和選項相等的。</xref:System.Security.Cryptography.CngProperty> 名稱的比較會區分大小寫的方式執行。"
  syntax:
    content: public static bool op_Inequality (System.Security.Cryptography.CngProperty left, System.Security.Cryptography.CngProperty right);
    parameters:
    - id: left
      type: System.Security.Cryptography.CngProperty
      description: "物件，指定 Cryptography Next Generation (CNG) 金鑰或提供者的屬性。"
    - id: right
      type: System.Security.Cryptography.CngProperty
      description: "要比較的物件所識別的第二個物件`left`參數。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果兩個物件未指定相同的屬性。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Security.Cryptography.CngProperty.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngProperty.Options
  id: Options
  parent: System.Security.Cryptography.CngProperty
  langs:
  - csharp
  name: Options
  nameWithType: CngProperty.Options
  fullName: System.Security.Cryptography.CngProperty.Options
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "取得屬性選項目前<xref href=&quot;System.Security.Cryptography.CngProperty&quot;></xref>指定物件。"
  remarks: "<xref:System.Security.Cryptography.CngKey>物件包含<xref:System.Security.Cryptography.CngProperty>物件，其中包含<xref:System.Security.Cryptography.CngPropertyOptions>與儲存屬性。</xref:System.Security.Cryptography.CngPropertyOptions> </xref:System.Security.Cryptography.CngProperty></xref:System.Security.Cryptography.CngKey>"
  syntax:
    content: public System.Security.Cryptography.CngPropertyOptions Options { get; }
    return:
      type: System.Security.Cryptography.CngPropertyOptions
      description: "物件，指定在目前設定的選項<xref href=&quot;System.Security.Cryptography.CngProperty&quot;></xref>物件。"
  overload: System.Security.Cryptography.CngProperty.Options*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Cryptography.CngProperty.#ctor(System.String,System.Byte[],System.Security.Cryptography.CngPropertyOptions)
  parent: System.Security.Cryptography.CngProperty
  isExternal: false
  name: CngProperty(String,Byte[],CngPropertyOptions)
  nameWithType: CngProperty.CngProperty(String,Byte[],CngPropertyOptions)
  fullName: System.Security.Cryptography.CngProperty.CngProperty(String,Byte[],CngPropertyOptions)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.CngPropertyOptions
  parent: System.Security.Cryptography
  isExternal: false
  name: CngPropertyOptions
  nameWithType: CngPropertyOptions
  fullName: System.Security.Cryptography.CngPropertyOptions
- uid: System.Security.Cryptography.CngProperty.Equals(System.Object)
  parent: System.Security.Cryptography.CngProperty
  isExternal: false
  name: Equals(Object)
  nameWithType: CngProperty.Equals(Object)
  fullName: System.Security.Cryptography.CngProperty.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Security.Cryptography.CngProperty.Equals(System.Security.Cryptography.CngProperty)
  parent: System.Security.Cryptography.CngProperty
  isExternal: false
  name: Equals(CngProperty)
  nameWithType: CngProperty.Equals(CngProperty)
  fullName: System.Security.Cryptography.CngProperty.Equals(CngProperty)
- uid: System.Security.Cryptography.CngProperty
  parent: System.Security.Cryptography
  isExternal: false
  name: CngProperty
  nameWithType: CngProperty
  fullName: System.Security.Cryptography.CngProperty
- uid: System.Security.Cryptography.CngProperty.GetHashCode
  parent: System.Security.Cryptography.CngProperty
  isExternal: false
  name: GetHashCode()
  nameWithType: CngProperty.GetHashCode()
  fullName: System.Security.Cryptography.CngProperty.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.CngProperty.GetValue
  parent: System.Security.Cryptography.CngProperty
  isExternal: false
  name: GetValue()
  nameWithType: CngProperty.GetValue()
  fullName: System.Security.Cryptography.CngProperty.GetValue()
- uid: System.Security.Cryptography.CngProperty.Name
  parent: System.Security.Cryptography.CngProperty
  isExternal: false
  name: Name
  nameWithType: CngProperty.Name
  fullName: System.Security.Cryptography.CngProperty.Name
- uid: System.Security.Cryptography.CngProperty.op_Equality(System.Security.Cryptography.CngProperty,System.Security.Cryptography.CngProperty)
  parent: System.Security.Cryptography.CngProperty
  isExternal: false
  name: op_Equality(CngProperty,CngProperty)
  nameWithType: CngProperty.op_Equality(CngProperty,CngProperty)
  fullName: System.Security.Cryptography.CngProperty.op_Equality(CngProperty,CngProperty)
- uid: System.Security.Cryptography.CngProperty.op_Inequality(System.Security.Cryptography.CngProperty,System.Security.Cryptography.CngProperty)
  parent: System.Security.Cryptography.CngProperty
  isExternal: false
  name: op_Inequality(CngProperty,CngProperty)
  nameWithType: CngProperty.op_Inequality(CngProperty,CngProperty)
  fullName: System.Security.Cryptography.CngProperty.op_Inequality(CngProperty,CngProperty)
- uid: System.Security.Cryptography.CngProperty.Options
  parent: System.Security.Cryptography.CngProperty
  isExternal: false
  name: Options
  nameWithType: CngProperty.Options
  fullName: System.Security.Cryptography.CngProperty.Options
- uid: System.Security.Cryptography.CngProperty.#ctor*
  parent: System.Security.Cryptography.CngProperty
  isExternal: false
  name: CngProperty
  nameWithType: CngProperty.CngProperty
- uid: System.Security.Cryptography.CngProperty.Equals*
  parent: System.Security.Cryptography.CngProperty
  isExternal: false
  name: Equals
  nameWithType: CngProperty.Equals
- uid: System.Security.Cryptography.CngProperty.GetHashCode*
  parent: System.Security.Cryptography.CngProperty
  isExternal: false
  name: GetHashCode
  nameWithType: CngProperty.GetHashCode
- uid: System.Security.Cryptography.CngProperty.GetValue*
  parent: System.Security.Cryptography.CngProperty
  isExternal: false
  name: GetValue
  nameWithType: CngProperty.GetValue
- uid: System.Security.Cryptography.CngProperty.Name*
  parent: System.Security.Cryptography.CngProperty
  isExternal: false
  name: Name
  nameWithType: CngProperty.Name
- uid: System.Security.Cryptography.CngProperty.op_Equality*
  parent: System.Security.Cryptography.CngProperty
  isExternal: false
  name: op_Equality
  nameWithType: CngProperty.op_Equality
- uid: System.Security.Cryptography.CngProperty.op_Inequality*
  parent: System.Security.Cryptography.CngProperty
  isExternal: false
  name: op_Inequality
  nameWithType: CngProperty.op_Inequality
- uid: System.Security.Cryptography.CngProperty.Options*
  parent: System.Security.Cryptography.CngProperty
  isExternal: false
  name: Options
  nameWithType: CngProperty.Options
