### YamlMime:ManagedReference
items:
- uid: System.Security.RightsManagement.ContentUser
  id: ContentUser
  children:
  - System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)
  - System.Security.RightsManagement.ContentUser.AnyoneUser
  - System.Security.RightsManagement.ContentUser.AuthenticationType
  - System.Security.RightsManagement.ContentUser.Equals(System.Object)
  - System.Security.RightsManagement.ContentUser.GetHashCode
  - System.Security.RightsManagement.ContentUser.IsAuthenticated
  - System.Security.RightsManagement.ContentUser.Name
  - System.Security.RightsManagement.ContentUser.OwnerUser
  langs:
  - csharp
  name: ContentUser
  nameWithType: ContentUser
  fullName: System.Security.RightsManagement.ContentUser
  type: Class
  summary: "代表使用者群組來授與存取權限管理內容。"
  remarks: "如同其他<xref:System.Security.RightsManagement>型別，ContentUser 才可用於完全信任應用程式。</xref:System.Security.RightsManagement>"
  example:
  - "The following example shows how to use <xref:System.Security.RightsManagement.UnsignedPublishLicense.Owner%2A> property to assign a variable of this type.  \n  \n [!code-vb[RightsManagedPackagePublish#RmPkgPubUnPubLic](~/add/codesnippet/visualbasic/rmpackagepublish/window1.xaml.vb#rmpkgpubunpublic)]\n [!code-cs[RightsManagedPackagePublish#RmPkgPubUnPubLic](~/add/codesnippet/csharp/RmPackagePublish/Window1.xaml.cs#rmpkgpubunpublic)]"
  syntax:
    content: >-
      [System.Security.SecurityCritical(System.Security.SecurityCriticalScope.Everything)]

      public class ContentUser
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)
  id: '#ctor(System.String,System.Security.RightsManagement.AuthenticationType)'
  parent: System.Security.RightsManagement.ContentUser
  langs:
  - csharp
  name: ContentUser(String,AuthenticationType)
  nameWithType: ContentUser.ContentUser(String,AuthenticationType)
  fullName: System.Security.RightsManagement.ContentUser.ContentUser(String,AuthenticationType)
  type: Constructor
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: "初始化的新執行個體<xref href=&quot;System.Security.RightsManagement.ContentUser&quot;></xref>類別。"
  remarks: "使用者或群組`name`通常是在個別的電子郵件位址格式 (例如johndoe@contoso.com) 或電子郵件通訊群組清單 (例如marketing@contoso.com)。"
  example:
  - "The following example shows how to use this constructor to create a secure environment.  \n  \n [!code-vb[RightsManagedPackagePublish#RmPkgPubSecEnv](~/add/codesnippet/visualbasic/rmpackagepublish/window1.xaml.vb#rmpkgpubsecenv)]\n [!code-cs[RightsManagedPackagePublish#RmPkgPubSecEnv](~/add/codesnippet/csharp/RmPackagePublish/Window1.xaml.cs#rmpkgpubsecenv)]"
  syntax:
    content: public ContentUser (string name, System.Security.RightsManagement.AuthenticationType authenticationType);
    parameters:
    - id: name
      type: System.String
      description: "使用者或群組名稱。"
    - id: authenticationType
      type: System.Security.RightsManagement.AuthenticationType
      description: "驗證方法。"
  overload: System.Security.RightsManagement.ContentUser.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.RightsManagement.ContentUser.AnyoneUser
  id: AnyoneUser
  parent: System.Security.RightsManagement.ContentUser
  langs:
  - csharp
  name: AnyoneUser
  nameWithType: ContentUser.AnyoneUser
  fullName: System.Security.RightsManagement.ContentUser.AnyoneUser
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: "取得 「 任何人 」 的執行個體<xref href=&quot;System.Security.RightsManagement.ContentUser&quot;></xref>角色。"
  remarks: "具有 AnyoneUser <xref:System.Security.RightsManagement.ContentUser.AuthenticationType%2A>&quot;Internal&quot;和<xref:System.Security.RightsManagement.ContentUser.Name%2A>「 任何人 」。</xref:System.Security.RightsManagement.ContentUser.Name%2A> </xref:System.Security.RightsManagement.ContentUser.AuthenticationType%2A>       如果<xref:System.Security.RightsManagement.ContentUser.AuthenticationType%2A>「 內部 」 與<xref:System.Security.RightsManagement.ContentUser.Name%2A>「 任何人 」 在發行期間授與權限，請驗證伺服器會發出<xref:System.Security.RightsManagement.UseLicense>任何要求，並會附加至要求之使用者的授權。</xref:System.Security.RightsManagement.UseLicense> </xref:System.Security.RightsManagement.ContentUser.Name%2A> </xref:System.Security.RightsManagement.ContentUser.AuthenticationType%2A>"
  syntax:
    content: public static System.Security.RightsManagement.ContentUser AnyoneUser { get; }
    return:
      type: System.Security.RightsManagement.ContentUser
      description: "「 任何人 」 的執行個體<xref href=&quot;System.Security.RightsManagement.ContentUser&quot;></xref>角色。"
  overload: System.Security.RightsManagement.ContentUser.AnyoneUser*
  exceptions: []
  platform:
  - net462
- uid: System.Security.RightsManagement.ContentUser.AuthenticationType
  id: AuthenticationType
  parent: System.Security.RightsManagement.ContentUser
  langs:
  - csharp
  name: AuthenticationType
  nameWithType: ContentUser.AuthenticationType
  fullName: System.Security.RightsManagement.ContentUser.AuthenticationType
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: "取得<xref href=&quot;System.Security.RightsManagement.AuthenticationType&quot;></xref>指定至&lt;xref:System.Security.RightsManagement.ContentUser.%23ctor%2A&gt;建構函式。"
  syntax:
    content: public System.Security.RightsManagement.AuthenticationType AuthenticationType { get; }
    return:
      type: System.Security.RightsManagement.AuthenticationType
      description: "<xref href=&quot;System.Security.RightsManagement.AuthenticationType&quot;> </xref>指定至&lt;xref:System.Security.RightsManagement.ContentUser.%23ctor%2A&gt;建構函式。"
  overload: System.Security.RightsManagement.ContentUser.AuthenticationType*
  exceptions: []
  platform:
  - net462
- uid: System.Security.RightsManagement.ContentUser.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Security.RightsManagement.ContentUser
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: ContentUser.Equals(Object)
  fullName: System.Security.RightsManagement.ContentUser.Equals(Object)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: "傳回值，指出是否此<xref href=&quot;System.Security.RightsManagement.ContentUser&quot;></xref>到另一個的對等項目會指定執行個體。"
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "使用者執行個體比較相等。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<> *> 和<> *> 也適用於這個使用者和指定的使用者; 否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Security.RightsManagement.ContentUser.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Security.RightsManagement.ContentUser.GetHashCode
  id: GetHashCode
  parent: System.Security.RightsManagement.ContentUser
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: ContentUser.GetHashCode()
  fullName: System.Security.RightsManagement.ContentUser.GetHashCode()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: "傳回使用者為基礎的計算的雜湊程式碼<> *> 和<> *>。"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "從使用者的雜湊程式碼計算<> *> 和<> *>。"
  overload: System.Security.RightsManagement.ContentUser.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Security.RightsManagement.ContentUser.IsAuthenticated
  id: IsAuthenticated
  parent: System.Security.RightsManagement.ContentUser
  langs:
  - csharp
  name: IsAuthenticated()
  nameWithType: ContentUser.IsAuthenticated()
  fullName: System.Security.RightsManagement.ContentUser.IsAuthenticated()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: "傳回值，指出目前是否已驗證使用者。"
  remarks: "指定的使用者<xref:System.Security.RightsManagement.ContentUser.Name%2A>經過根據給定的<xref:System.Security.RightsManagement.ContentUser.AuthenticationType%2A>.</xref:System.Security.RightsManagement.ContentUser.AuthenticationType%2A> </xref:System.Security.RightsManagement.ContentUser.Name%2A>       已驗證使用者並 IsAuthenticated 後`true`，[使用者] 對話方塊，提示，以確認驗證不會再顯示建立<xref:System.Security.RightsManagement.SecureEnvironment>.</xref:System.Security.RightsManagement.SecureEnvironment>時"
  syntax:
    content: public bool IsAuthenticated ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果目前驗證使用者;否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。  預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>之前進行驗證。"
  overload: System.Security.RightsManagement.ContentUser.IsAuthenticated*
  exceptions: []
  platform:
  - net462
- uid: System.Security.RightsManagement.ContentUser.Name
  id: Name
  parent: System.Security.RightsManagement.ContentUser
  langs:
  - csharp
  name: Name
  nameWithType: ContentUser.Name
  fullName: System.Security.RightsManagement.ContentUser.Name
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: "取得指定的使用者或群組名稱&lt;xref:System.Security.RightsManagement.ContentUser.%23ctor%2A&gt;建構函式。"
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "若要指定的使用者或群組名稱&lt;xref:System.Security.RightsManagement.ContentUser.%23ctor%2A&gt;建構函式。"
  overload: System.Security.RightsManagement.ContentUser.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Security.RightsManagement.ContentUser.OwnerUser
  id: OwnerUser
  parent: System.Security.RightsManagement.ContentUser
  langs:
  - csharp
  name: OwnerUser
  nameWithType: ContentUser.OwnerUser
  fullName: System.Security.RightsManagement.ContentUser.OwnerUser
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: "取得 「 擁有者 」 的執行個體<xref href=&quot;System.Security.RightsManagement.ContentUser&quot;></xref>角色。"
  remarks: "具有 OwnerUser <xref:System.Security.RightsManagement.ContentUser.AuthenticationType%2A>&quot;Internal&quot;和<xref:System.Security.RightsManagement.ContentUser.Name%2A>「 擁有者 」。</xref:System.Security.RightsManagement.ContentUser.Name%2A> </xref:System.Security.RightsManagement.ContentUser.AuthenticationType%2A>       OwnerUser 可由伺服器端範本來建立受保護的文件時，讓內容作者或發行者的特殊權限。"
  syntax:
    content: public static System.Security.RightsManagement.ContentUser OwnerUser { get; }
    return:
      type: System.Security.RightsManagement.ContentUser
      description: "「 擁有者 」 的執行個體<xref href=&quot;System.Security.RightsManagement.ContentUser&quot;></xref>角色。"
  overload: System.Security.RightsManagement.ContentUser.OwnerUser*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)
  parent: System.Security.RightsManagement.ContentUser
  isExternal: false
  name: ContentUser(String,AuthenticationType)
  nameWithType: ContentUser.ContentUser(String,AuthenticationType)
  fullName: System.Security.RightsManagement.ContentUser.ContentUser(String,AuthenticationType)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.RightsManagement.AuthenticationType
  parent: System.Security.RightsManagement
  isExternal: false
  name: AuthenticationType
  nameWithType: AuthenticationType
  fullName: System.Security.RightsManagement.AuthenticationType
- uid: System.Security.RightsManagement.ContentUser.AnyoneUser
  parent: System.Security.RightsManagement.ContentUser
  isExternal: false
  name: AnyoneUser
  nameWithType: ContentUser.AnyoneUser
  fullName: System.Security.RightsManagement.ContentUser.AnyoneUser
- uid: System.Security.RightsManagement.ContentUser
  parent: System.Security.RightsManagement
  isExternal: false
  name: ContentUser
  nameWithType: ContentUser
  fullName: System.Security.RightsManagement.ContentUser
- uid: System.Security.RightsManagement.ContentUser.AuthenticationType
  parent: System.Security.RightsManagement.ContentUser
  isExternal: false
  name: AuthenticationType
  nameWithType: ContentUser.AuthenticationType
  fullName: System.Security.RightsManagement.ContentUser.AuthenticationType
- uid: System.Security.RightsManagement.ContentUser.Equals(System.Object)
  parent: System.Security.RightsManagement.ContentUser
  isExternal: false
  name: Equals(Object)
  nameWithType: ContentUser.Equals(Object)
  fullName: System.Security.RightsManagement.ContentUser.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.RightsManagement.ContentUser.GetHashCode
  parent: System.Security.RightsManagement.ContentUser
  isExternal: false
  name: GetHashCode()
  nameWithType: ContentUser.GetHashCode()
  fullName: System.Security.RightsManagement.ContentUser.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.RightsManagement.ContentUser.IsAuthenticated
  parent: System.Security.RightsManagement.ContentUser
  isExternal: false
  name: IsAuthenticated()
  nameWithType: ContentUser.IsAuthenticated()
  fullName: System.Security.RightsManagement.ContentUser.IsAuthenticated()
- uid: System.Security.RightsManagement.ContentUser.Name
  parent: System.Security.RightsManagement.ContentUser
  isExternal: false
  name: Name
  nameWithType: ContentUser.Name
  fullName: System.Security.RightsManagement.ContentUser.Name
- uid: System.Security.RightsManagement.ContentUser.OwnerUser
  parent: System.Security.RightsManagement.ContentUser
  isExternal: false
  name: OwnerUser
  nameWithType: ContentUser.OwnerUser
  fullName: System.Security.RightsManagement.ContentUser.OwnerUser
- uid: System.Security.RightsManagement.ContentUser.#ctor*
  parent: System.Security.RightsManagement.ContentUser
  isExternal: false
  name: ContentUser
  nameWithType: ContentUser.ContentUser
- uid: System.Security.RightsManagement.ContentUser.AnyoneUser*
  parent: System.Security.RightsManagement.ContentUser
  isExternal: false
  name: AnyoneUser
  nameWithType: ContentUser.AnyoneUser
- uid: System.Security.RightsManagement.ContentUser.AuthenticationType*
  parent: System.Security.RightsManagement.ContentUser
  isExternal: false
  name: AuthenticationType
  nameWithType: ContentUser.AuthenticationType
- uid: System.Security.RightsManagement.ContentUser.Equals*
  parent: System.Security.RightsManagement.ContentUser
  isExternal: false
  name: Equals
  nameWithType: ContentUser.Equals
- uid: System.Security.RightsManagement.ContentUser.GetHashCode*
  parent: System.Security.RightsManagement.ContentUser
  isExternal: false
  name: GetHashCode
  nameWithType: ContentUser.GetHashCode
- uid: System.Security.RightsManagement.ContentUser.IsAuthenticated*
  parent: System.Security.RightsManagement.ContentUser
  isExternal: false
  name: IsAuthenticated
  nameWithType: ContentUser.IsAuthenticated
- uid: System.Security.RightsManagement.ContentUser.Name*
  parent: System.Security.RightsManagement.ContentUser
  isExternal: false
  name: Name
  nameWithType: ContentUser.Name
- uid: System.Security.RightsManagement.ContentUser.OwnerUser*
  parent: System.Security.RightsManagement.ContentUser
  isExternal: false
  name: OwnerUser
  nameWithType: ContentUser.OwnerUser
