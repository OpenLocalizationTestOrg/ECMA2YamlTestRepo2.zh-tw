### YamlMime:ManagedReference
items:
- uid: System.Security.Permissions.FileIOPermissionAccess
  id: FileIOPermissionAccess
  children:
  - System.Security.Permissions.FileIOPermissionAccess.AllAccess
  - System.Security.Permissions.FileIOPermissionAccess.Append
  - System.Security.Permissions.FileIOPermissionAccess.NoAccess
  - System.Security.Permissions.FileIOPermissionAccess.PathDiscovery
  - System.Security.Permissions.FileIOPermissionAccess.Read
  - System.Security.Permissions.FileIOPermissionAccess.Write
  langs:
  - csharp
  name: FileIOPermissionAccess
  nameWithType: FileIOPermissionAccess
  fullName: System.Security.Permissions.FileIOPermissionAccess
  type: Enum
  summary: "指定要求的檔案存取類型。"
  remarks: "使用這個列舉與<xref:System.Security.Permissions.FileIOPermission>類別。</xref:System.Security.Permissions.FileIOPermission>      > [!NOTE] > 雖然 NoAccess 和 AllAccess 是 FileIOPermissionAccess 的成員，它們不能用做為參數<xref:System.Security.Permissions.FileIOPermission.GetPathList%2A>它們分別描述沒有檔案存取類型或所有的檔案存取類型，因為和<xref:System.Security.Permissions.FileIOPermission.GetPathList%2A>必須是單一檔案的存取類型。</xref:System.Security.Permissions.FileIOPermission.GetPathList%2A> </xref:System.Security.Permissions.FileIOPermission.GetPathList%2A>      > [!NOTE] > 提供寫入存取組件是類似於授與完全信任。 如果應用程式應該寫入至檔案系統不應該寫入權限。"
  syntax:
    content: >-
      [System.Flags]

      [System.Runtime.InteropServices.ComVisible(true)]

      public enum FileIOPermissionAccess
  inheritance:
  - System.Enum
  platform:
  - net462
- uid: System.Security.Permissions.FileIOPermissionAccess.AllAccess
  id: AllAccess
  parent: System.Security.Permissions.FileIOPermissionAccess
  langs:
  - csharp
  name: AllAccess
  nameWithType: FileIOPermissionAccess.AllAccess
  fullName: System.Security.Permissions.FileIOPermissionAccess.AllAccess
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "附加、 讀取、 寫入和 PathDiscovery 存取檔案或目錄。 AllAccess 代表多個 FileIOPermissionAccess 值，並造成<xref:System.ArgumentException>時做為<code> access </code>參數<xref:System.Security.Permissions.FileIOPermission.GetPathList*>方法，必須是單一值。</xref:System.Security.Permissions.FileIOPermission.GetPathList*> </xref:System.ArgumentException>"
  syntax:
    content: AllAccess
    return:
      type: System.Security.Permissions.FileIOPermissionAccess
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.FileIOPermissionAccess.Append
  id: Append
  parent: System.Security.Permissions.FileIOPermissionAccess
  langs:
  - csharp
  name: Append
  nameWithType: FileIOPermissionAccess.Append
  fullName: System.Security.Permissions.FileIOPermissionAccess.Append
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "若要將資料附加至檔案或目錄的存取。 附加存取包括建立新檔案或目錄的能力。"
  remarks: >-
    > [!NOTE]

    >  To create files, code must also be granted both Append and either Write or Read access. For more detail see <xref:System.IO.FileMode>.
  syntax:
    content: Append
    return:
      type: System.Security.Permissions.FileIOPermissionAccess
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.FileIOPermissionAccess.NoAccess
  id: NoAccess
  parent: System.Security.Permissions.FileIOPermissionAccess
  langs:
  - csharp
  name: NoAccess
  nameWithType: FileIOPermissionAccess.NoAccess
  fullName: System.Security.Permissions.FileIOPermissionAccess.NoAccess
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "無法存取檔案或目錄。 NoAccess 代表任何有效的 FileIOPermissionAccess 值，並造成<xref:System.ArgumentException>當做參數使用時<xref:System.Security.Permissions.FileIOPermission.GetPathList*>，其需要單一值。</xref:System.Security.Permissions.FileIOPermission.GetPathList*> </xref:System.ArgumentException>"
  syntax:
    content: NoAccess
    return:
      type: System.Security.Permissions.FileIOPermissionAccess
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.FileIOPermissionAccess.PathDiscovery
  id: PathDiscovery
  parent: System.Security.Permissions.FileIOPermissionAccess
  langs:
  - csharp
  name: PathDiscovery
  nameWithType: FileIOPermissionAccess.PathDiscovery
  fullName: System.Security.Permissions.FileIOPermissionAccess.PathDiscovery
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "存取路徑本身的資訊。 這有助於保護機密資訊的路徑，例如使用者名稱與路徑中所顯示的目錄結構的相關資訊。 此值不能存取檔案或資料夾路徑所表示。"
  remarks: >-
    > [!NOTE]

    >  For performance reasons, `PathDiscovery` should only be granted to directories, not to files. For example, `PathDiscovery` permission should be granted to paths such as C:\test and C:\test\\, not C:\test\example.txt.
  syntax:
    content: PathDiscovery
    return:
      type: System.Security.Permissions.FileIOPermissionAccess
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.FileIOPermissionAccess.Read
  id: Read
  parent: System.Security.Permissions.FileIOPermissionAccess
  langs:
  - csharp
  name: Read
  nameWithType: FileIOPermissionAccess.Read
  fullName: System.Security.Permissions.FileIOPermissionAccess.Read
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "從檔案或目錄的讀取權限。"
  syntax:
    content: Read
    return:
      type: System.Security.Permissions.FileIOPermissionAccess
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.FileIOPermissionAccess.Write
  id: Write
  parent: System.Security.Permissions.FileIOPermissionAccess
  langs:
  - csharp
  name: Write
  nameWithType: FileIOPermissionAccess.Write
  fullName: System.Security.Permissions.FileIOPermissionAccess.Write
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "寫入或刪除檔案或目錄存取權。 寫入權限包括刪除並覆寫檔案或目錄。"
  syntax:
    content: Write
    return:
      type: System.Security.Permissions.FileIOPermissionAccess
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.Security.Permissions.FileIOPermissionAccess.AllAccess
  parent: System.Security.Permissions.FileIOPermissionAccess
  isExternal: false
  name: AllAccess
  nameWithType: FileIOPermissionAccess.AllAccess
  fullName: System.Security.Permissions.FileIOPermissionAccess.AllAccess
- uid: System.Security.Permissions.FileIOPermissionAccess
  parent: System.Security.Permissions
  isExternal: false
  name: FileIOPermissionAccess
  nameWithType: FileIOPermissionAccess
  fullName: System.Security.Permissions.FileIOPermissionAccess
- uid: System.Security.Permissions.FileIOPermissionAccess.Append
  parent: System.Security.Permissions.FileIOPermissionAccess
  isExternal: false
  name: Append
  nameWithType: FileIOPermissionAccess.Append
  fullName: System.Security.Permissions.FileIOPermissionAccess.Append
- uid: System.Security.Permissions.FileIOPermissionAccess.NoAccess
  parent: System.Security.Permissions.FileIOPermissionAccess
  isExternal: false
  name: NoAccess
  nameWithType: FileIOPermissionAccess.NoAccess
  fullName: System.Security.Permissions.FileIOPermissionAccess.NoAccess
- uid: System.Security.Permissions.FileIOPermissionAccess.PathDiscovery
  parent: System.Security.Permissions.FileIOPermissionAccess
  isExternal: false
  name: PathDiscovery
  nameWithType: FileIOPermissionAccess.PathDiscovery
  fullName: System.Security.Permissions.FileIOPermissionAccess.PathDiscovery
- uid: System.Security.Permissions.FileIOPermissionAccess.Read
  parent: System.Security.Permissions.FileIOPermissionAccess
  isExternal: false
  name: Read
  nameWithType: FileIOPermissionAccess.Read
  fullName: System.Security.Permissions.FileIOPermissionAccess.Read
- uid: System.Security.Permissions.FileIOPermissionAccess.Write
  parent: System.Security.Permissions.FileIOPermissionAccess
  isExternal: false
  name: Write
  nameWithType: FileIOPermissionAccess.Write
  fullName: System.Security.Permissions.FileIOPermissionAccess.Write
