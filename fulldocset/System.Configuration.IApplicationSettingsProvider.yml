### YamlMime:ManagedReference
items:
- uid: System.Configuration.IApplicationSettingsProvider
  id: IApplicationSettingsProvider
  children:
  - System.Configuration.IApplicationSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)
  - System.Configuration.IApplicationSettingsProvider.Reset(System.Configuration.SettingsContext)
  - System.Configuration.IApplicationSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)
  langs:
  - csharp
  name: IApplicationSettingsProvider
  nameWithType: IApplicationSettingsProvider
  fullName: System.Configuration.IApplicationSettingsProvider
  type: Interface
  summary: "定義用戶端應用程式設定提供者的擴充的功能。"
  remarks: "應用程式設定架構可讓您藉由建立自訂設定提供者，這個類別是衍生自<xref:System.Configuration.SettingsProvider>.</xref:System.Configuration.SettingsProvider>類別提供應用程式設定的自訂儲存機制 這種類別包含儲存和擷取屬性的基本功能。 不過，您可以藉由自訂設定提供者中實作 IApplicationSettingsProvider 介面新增額外的標準化的功能。 這個介面包含三種方法主要是讓設定提供者，可以更有效地處理應用程式版本的變更。 一般而言，設定提供者會將應用程式設定，針對不同版本的應用程式分別預期會發生下列情況:--並存執行的應用程式的不同版本。      -升級應用程式時，請保留應用程式設定。      -正在重設應用程式設定為目前使用的版本為預設值。       <xref:System.Configuration.LocalFileSettingsProvider>類別會實作 IApplicationSettingsProvider 介面。</xref:System.Configuration.LocalFileSettingsProvider> 同一組 IApplicationSettingsProvider 所包含的方法中也可以找到<xref:System.Configuration.ApplicationSettingsBase>類別，啟用的應用程式設定包裝函式和其設定提供者之間的預先定義的通訊通道的建立。</xref:System.Configuration.ApplicationSettingsBase>      > [!NOTE] > 這個介面是選擇性的。 如果提供者未實作這個介面時，如果它嘗試存取此介面所定義之任何的方法設定基礎結構將會失敗而不另行通知。"
  syntax:
    content: public interface IApplicationSettingsProvider
  implements: []
  platform:
  - net462
- uid: System.Configuration.IApplicationSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)
  id: GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)
  parent: System.Configuration.IApplicationSettingsProvider
  langs:
  - csharp
  name: GetPreviousVersion(SettingsContext,SettingsProperty)
  nameWithType: IApplicationSettingsProvider.GetPreviousVersion(SettingsContext,SettingsProperty)
  fullName: System.Configuration.IApplicationSettingsProvider.GetPreviousVersion(SettingsContext,SettingsProperty)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "傳回之前的版本相同的應用程式指定的設定屬性的值。"
  remarks: "您可以使用 GetPreviousVersion 方法搭配<xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A>方法，以移轉應用程式設定的新版本的應用程式安裝期間或之後。</xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A>"
  syntax:
    content: public System.Configuration.SettingsPropertyValue GetPreviousVersion (System.Configuration.SettingsContext context, System.Configuration.SettingsProperty property);
    parameters:
    - id: context
      type: System.Configuration.SettingsContext
      description: "A <xref href=&quot;System.Configuration.SettingsContext&quot;> </xref>描述目前的應用程式使用情形。"
    - id: property
      type: System.Configuration.SettingsProperty
      description: "<xref href=&quot;System.Configuration.SettingsProperty&quot;> </xref>值會傳回。"
    return:
      type: System.Configuration.SettingsPropertyValue
      description: "A <xref href=&quot;System.Configuration.SettingsPropertyValue&quot;> </xref>包含指定的屬性設定的值，如在先前版本中的應用程式; 前次設定或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果找不到設定。"
  overload: System.Configuration.IApplicationSettingsProvider.GetPreviousVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.IApplicationSettingsProvider.Reset(System.Configuration.SettingsContext)
  id: Reset(System.Configuration.SettingsContext)
  parent: System.Configuration.IApplicationSettingsProvider
  langs:
  - csharp
  name: Reset(SettingsContext)
  nameWithType: IApplicationSettingsProvider.Reset(SettingsContext)
  fullName: System.Configuration.IApplicationSettingsProvider.Reset(SettingsContext)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "重設為其預設值指定的應用程式相關聯的應用程式設定。"
  remarks: "重設方法重新初始化之指定的應用程式設定群組的儲存的值。 相反地，<xref:System.Configuration.DefaultSettingValueAttribute>屬性在初始化期間，提供單一設定屬性的預設值，如果它有未儲存的值。</xref:System.Configuration.DefaultSettingValueAttribute>       設定提供者會決定合理的預設值是對一組指定的應用程式設定。 例如，在實作<xref:System.Configuration.LocalFileSettingsProvider>將使用者範圍的設定重設為在其共用值`application.exe.config`檔案; 相反地，它會保留應用程式範圍的設定未變更。</xref:System.Configuration.LocalFileSettingsProvider>"
  syntax:
    content: public void Reset (System.Configuration.SettingsContext context);
    parameters:
    - id: context
      type: System.Configuration.SettingsContext
      description: "A <xref href=&quot;System.Configuration.SettingsContext&quot;> </xref>描述目前的應用程式使用情形。"
  overload: System.Configuration.IApplicationSettingsProvider.Reset*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.IApplicationSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)
  id: Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)
  parent: System.Configuration.IApplicationSettingsProvider
  langs:
  - csharp
  name: Upgrade(SettingsContext,SettingsPropertyCollection)
  nameWithType: IApplicationSettingsProvider.Upgrade(SettingsContext,SettingsPropertyCollection)
  fullName: System.Configuration.IApplicationSettingsProvider.Upgrade(SettingsContext,SettingsPropertyCollection)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "表示應用程式已升級提供者。 這可讓提供者得以升級視其儲存的設定。"
  remarks: "並存安裝和執行不同版本的相同應用程式，可讓.NET Framework。 應用程式設定提供者會儲存每個版本分別以確保隔離的應用程式的應用程式設定。 不過，您可能想要移轉設定至目前應用程式的舊版。 若要提供這項移轉功能，請使用 升級方法，從<xref:System.Configuration.SettingsProvider>.</xref:System.Configuration.SettingsProvider>衍生類別中實作       您可以搭配使用的升級方法<xref:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion%2A>方法，以移轉應用程式設定的新版本的應用程式安裝期間或之後。</xref:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion%2A>       這個方法應該隱藏已<xref:System.Configuration.NoSettingsVersionUpgradeAttribute>套用到它，或整個設定包裝函式類別，衍生自<xref:System.Configuration.ApplicationSettingsBase>.</xref:System.Configuration.ApplicationSettingsBase></xref:System.Configuration.NoSettingsVersionUpgradeAttribute>每個應用程式設定"
  syntax:
    content: public void Upgrade (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyCollection properties);
    parameters:
    - id: context
      type: System.Configuration.SettingsContext
      description: "A <xref href=&quot;System.Configuration.SettingsContext&quot;> </xref>描述目前的應用程式使用情形。"
    - id: properties
      type: System.Configuration.SettingsPropertyCollection
      description: "A <xref href=&quot;System.Configuration.SettingsPropertyCollection&quot;> </xref>包含要擷取其值的設定屬性群組。"
  overload: System.Configuration.IApplicationSettingsProvider.Upgrade*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.IApplicationSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)
  parent: System.Configuration.IApplicationSettingsProvider
  isExternal: false
  name: GetPreviousVersion(SettingsContext,SettingsProperty)
  nameWithType: IApplicationSettingsProvider.GetPreviousVersion(SettingsContext,SettingsProperty)
  fullName: System.Configuration.IApplicationSettingsProvider.GetPreviousVersion(SettingsContext,SettingsProperty)
- uid: System.Configuration.SettingsPropertyValue
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyValue
  nameWithType: SettingsPropertyValue
  fullName: System.Configuration.SettingsPropertyValue
- uid: System.Configuration.SettingsContext
  parent: System.Configuration
  isExternal: false
  name: SettingsContext
  nameWithType: SettingsContext
  fullName: System.Configuration.SettingsContext
- uid: System.Configuration.SettingsProperty
  parent: System.Configuration
  isExternal: false
  name: SettingsProperty
  nameWithType: SettingsProperty
  fullName: System.Configuration.SettingsProperty
- uid: System.Configuration.IApplicationSettingsProvider.Reset(System.Configuration.SettingsContext)
  parent: System.Configuration.IApplicationSettingsProvider
  isExternal: false
  name: Reset(SettingsContext)
  nameWithType: IApplicationSettingsProvider.Reset(SettingsContext)
  fullName: System.Configuration.IApplicationSettingsProvider.Reset(SettingsContext)
- uid: System.Configuration.IApplicationSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)
  parent: System.Configuration.IApplicationSettingsProvider
  isExternal: false
  name: Upgrade(SettingsContext,SettingsPropertyCollection)
  nameWithType: IApplicationSettingsProvider.Upgrade(SettingsContext,SettingsPropertyCollection)
  fullName: System.Configuration.IApplicationSettingsProvider.Upgrade(SettingsContext,SettingsPropertyCollection)
- uid: System.Configuration.SettingsPropertyCollection
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyCollection
  nameWithType: SettingsPropertyCollection
  fullName: System.Configuration.SettingsPropertyCollection
- uid: System.Configuration.IApplicationSettingsProvider.GetPreviousVersion*
  parent: System.Configuration.IApplicationSettingsProvider
  isExternal: false
  name: GetPreviousVersion
  nameWithType: IApplicationSettingsProvider.GetPreviousVersion
- uid: System.Configuration.IApplicationSettingsProvider.Reset*
  parent: System.Configuration.IApplicationSettingsProvider
  isExternal: false
  name: Reset
  nameWithType: IApplicationSettingsProvider.Reset
- uid: System.Configuration.IApplicationSettingsProvider.Upgrade*
  parent: System.Configuration.IApplicationSettingsProvider
  isExternal: false
  name: Upgrade
  nameWithType: IApplicationSettingsProvider.Upgrade
